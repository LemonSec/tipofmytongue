1
00:00:05,220 --> 00:00:11,200
hello<font color="#E5E5E5"> I am</font><font color="#CCCCCC"> Andy</font><font color="#E5E5E5"> I have a lot of slides</font>

2
00:00:08,710 --> 00:00:13,990
so<font color="#CCCCCC"> I will attempt to do this and it's</font>

3
00:00:11,200 --> 00:00:17,500
clear<font color="#E5E5E5"> but as speedy away as I possibly</font>

4
00:00:13,990 --> 00:00:19,660
can<font color="#CCCCCC"> so what's going on I'm Andy I'm a</font>

5
00:00:17,500 --> 00:00:21,670
technical milliner<font color="#E5E5E5"> you could tell a</font>

6
00:00:19,660 --> 00:00:24,310
build fanatic<font color="#E5E5E5"> and an advocate of</font>

7
00:00:21,670 --> 00:00:26,200
continuous everything I'm a founder<font color="#E5E5E5"> of</font>

8
00:00:24,310 --> 00:00:28,390
control<font color="#CCCCCC"> plain continuous infrastructure</font>

9
00:00:26,200 --> 00:00:30,910
and<font color="#E5E5E5"> security practices</font><font color="#CCCCCC"> with a focus on</font>

10
00:00:28,390 --> 00:00:33,100
containers<font color="#CCCCCC"> and kubernetes</font><font color="#E5E5E5"> we are of</font>

11
00:00:30,910 --> 00:00:35,230
course<font color="#E5E5E5"> hiring cloud native hackers and</font>

12
00:00:33,100 --> 00:00:37,089
engineers<font color="#E5E5E5"> if I can get to the end I</font><font color="#CCCCCC"> will</font>

13
00:00:35,230 --> 00:00:38,468
give<font color="#CCCCCC"> you</font><font color="#E5E5E5"> more details and I've done a</font>

14
00:00:37,089 --> 00:00:40,329
little<font color="#E5E5E5"> bit of everything from</font>

15
00:00:38,469 --> 00:00:43,109
development<font color="#E5E5E5"> database administration</font>

16
00:00:40,329 --> 00:00:45,640
operations<font color="#CCCCCC"> pen testing architecting I</font>

17
00:00:43,109 --> 00:00:48,670
want to talk about network<font color="#CCCCCC"> security in</font>

18
00:00:45,640 --> 00:00:50,949
communities so<font color="#CCCCCC"> what is this it is a way</font>

19
00:00:48,670 --> 00:00:53,019
<font color="#E5E5E5">to ensure private and trusted</font>

20
00:00:50,949 --> 00:00:55,629
communications across potentially

21
00:00:53,019 --> 00:00:58,719
untrusted networks with malicious actors

22
00:00:55,629 --> 00:01:02,049
<font color="#E5E5E5">like the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> why do we need it</font>

23
00:00:58,719 --> 00:01:03,639
<font color="#E5E5E5">because we can't trust anything the</font>

24
00:01:02,049 --> 00:01:06,220
internet was<font color="#E5E5E5"> built with trust between</font>

25
00:01:03,639 --> 00:01:06,729
<font color="#E5E5E5">everything but unlike the origins of the</font>

26
00:01:06,220 --> 00:01:09,189
<font color="#E5E5E5">Internet</font>

27
00:01:06,729 --> 00:01:12,070
we're not a bunch<font color="#CCCCCC"> of academics running</font>

28
00:01:09,189 --> 00:01:15,070
trusted workloads<font color="#CCCCCC"> anymore</font><font color="#E5E5E5"> we think about</font>

29
00:01:12,070 --> 00:01:17,889
<font color="#E5E5E5">run times and we write software to</font><font color="#CCCCCC"> run</font>

30
00:01:15,070 --> 00:01:20,699
as if were they<font color="#E5E5E5"> voting on the lake when</font>

31
00:01:17,890 --> 00:01:22,899
in<font color="#E5E5E5"> reality there are</font><font color="#CCCCCC"> pirates everywhere</font>

32
00:01:20,700 --> 00:01:24,939
<font color="#E5E5E5">we should be designing</font><font color="#CCCCCC"> our systems for</font>

33
00:01:22,899 --> 00:01:30,520
<font color="#CCCCCC">the most hostile conditions</font><font color="#E5E5E5"> Asian they</font>

34
00:01:24,939 --> 00:01:33,369
could possibly<font color="#E5E5E5"> face resilience is key</font><font color="#CCCCCC"> so</font>

35
00:01:30,520 --> 00:01:35,890
<font color="#E5E5E5">we'll look at how</font><font color="#CCCCCC"> Cuban s's does it it</font>

36
00:01:33,369 --> 00:01:38,740
uses<font color="#E5E5E5"> a lot of standard components but</font>

37
00:01:35,890 --> 00:01:40,299
sometimes in a slightly different<font color="#E5E5E5"> way to</font>

38
00:01:38,740 --> 00:01:42,699
the<font color="#E5E5E5"> man that they used on the</font><font color="#CCCCCC"> Internet's</font>

39
00:01:40,299 --> 00:01:45,880
<font color="#E5E5E5">for example on the public internet</font>

40
00:01:42,700 --> 00:01:48,520
self-signed certificates are bad we'll

41
00:01:45,880 --> 00:01:49,990
look at why they might<font color="#CCCCCC"> be good well look</font>

42
00:01:48,520 --> 00:01:52,630
at how encryption<font color="#E5E5E5"> works how we establish</font>

43
00:01:49,990 --> 00:01:54,908
trust<font color="#E5E5E5"> and finally how we determine</font>

44
00:01:52,630 --> 00:01:57,939
<font color="#CCCCCC">identity from</font><font color="#E5E5E5"> the protocols that keep</font>

45
00:01:54,909 --> 00:02:00,340
<font color="#CCCCCC">kubernetes</font><font color="#E5E5E5"> secure and our</font><font color="#CCCCCC"> workload safe</font>

46
00:01:57,939 --> 00:02:03,908
and if there is one<font color="#CCCCCC"> takeaway from this</font>

47
00:02:00,340 --> 00:02:05,200
it is<font color="#E5E5E5"> encrypt everything everywhere we</font>

48
00:02:03,909 --> 00:02:07,509
<font color="#E5E5E5">are at the bleeding edge of a revolution</font>

49
00:02:05,200 --> 00:02:09,940
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is already permeating traditional</font>

50
00:02:07,509 --> 00:02:11,680
enterprise systems these<font color="#E5E5E5"> systems</font><font color="#CCCCCC"> have</font>

51
00:02:09,940 --> 00:02:13,690
high compliance<font color="#E5E5E5"> and high audit</font>

52
00:02:11,680 --> 00:02:15,700
requirements and breaking away<font color="#E5E5E5"> from</font>

53
00:02:13,690 --> 00:02:16,959
<font color="#E5E5E5">traditional network security patterns is</font>

54
00:02:15,700 --> 00:02:18,819
really difficult

55
00:02:16,959 --> 00:02:21,969
there are many layers<font color="#E5E5E5"> to a security</font>

56
00:02:18,819 --> 00:02:24,760
onion so cloud native<font color="#E5E5E5"> up applications</font>

57
00:02:21,969 --> 00:02:27,099
give us an opportunity<font color="#E5E5E5"> and a problem</font>

58
00:02:24,760 --> 00:02:29,379
it's difficult<font color="#CCCCCC"> to encrypt everything</font><font color="#E5E5E5"> but</font>

59
00:02:27,099 --> 00:02:32,108
it's also difficult to encrypt workloads

60
00:02:29,379 --> 00:02:34,689
that<font color="#E5E5E5"> are constantly churning restarting</font>

61
00:02:32,109 --> 00:02:36,280
<font color="#E5E5E5">and being rescheduled</font><font color="#CCCCCC"> to unexpected</font><font color="#E5E5E5"> or</font>

62
00:02:34,689 --> 00:02:39,430
unpredictable places in our

63
00:02:36,280 --> 00:02:41,159
infrastructure<font color="#CCCCCC"> the spiffy project is</font>

64
00:02:39,430 --> 00:02:44,799
looking<font color="#CCCCCC"> to solve some of these issues</font>

65
00:02:41,159 --> 00:02:46,719
<font color="#CCCCCC">the subject is broad</font><font color="#E5E5E5"> and deep so we will</font>

66
00:02:44,799 --> 00:02:48,549
cover some<font color="#E5E5E5"> key</font><font color="#CCCCCC"> technologies and</font>

67
00:02:46,719 --> 00:02:50,200
hopefully leave you enough pointers to

68
00:02:48,549 --> 00:02:51,549
go and do some further investigation on

69
00:02:50,200 --> 00:02:52,060
the parts that<font color="#E5E5E5"> interest you more</font>

70
00:02:51,549 --> 00:02:55,419
thoroughly

71
00:02:52,060 --> 00:02:58,180
<font color="#E5E5E5">so network security 101 kubernetes api</font>

72
00:02:55,419 --> 00:03:00,489
components TLS in general mutual

73
00:02:58,180 --> 00:03:02,709
authentication in particular CNI<font color="#CCCCCC"> and</font>

74
00:03:00,489 --> 00:03:04,180
network policies for applications and

75
00:03:02,709 --> 00:03:06,549
<font color="#E5E5E5">finally looking at bootstrapping</font>

76
00:03:04,180 --> 00:03:10,659
identity for dynamic workloads with

77
00:03:06,549 --> 00:03:13,599
spiffy so what do we<font color="#E5E5E5"> want</font><font color="#CCCCCC"> from network</font>

78
00:03:10,659 --> 00:03:17,108
communications want<font color="#E5E5E5"> privacy and we want</font>

79
00:03:13,599 --> 00:03:19,469
<font color="#E5E5E5">trust private means is confidential</font>

80
00:03:17,109 --> 00:03:22,000
<font color="#E5E5E5">trusted means we have integrity and</font>

81
00:03:19,469 --> 00:03:24,250
<font color="#E5E5E5">authentication on the communication and</font>

82
00:03:22,000 --> 00:03:26,139
non-repudiation sometimes makes an

83
00:03:24,250 --> 00:03:29,709
appearance<font color="#CCCCCC"> here that means</font><font color="#E5E5E5"> the inability</font>

84
00:03:26,139 --> 00:03:31,540
<font color="#E5E5E5">to disprove it was the person actually</font>

85
00:03:29,709 --> 00:03:32,199
communicating we won't worry about<font color="#CCCCCC"> that</font>

86
00:03:31,540 --> 00:03:35,409
one for<font color="#E5E5E5"> now</font>

87
00:03:32,199 --> 00:03:37,479
so human communications<font color="#E5E5E5"> trusted and</font>

88
00:03:35,409 --> 00:03:39,578
local this<font color="#CCCCCC"> is like whispering between</font>

89
00:03:37,479 --> 00:03:43,120
two people we know who is talking<font color="#CCCCCC"> to</font><font color="#E5E5E5"> us</font>

90
00:03:39,579 --> 00:03:45,759
and nobody else can<font color="#E5E5E5"> hear us this is like</font>

91
00:03:43,120 --> 00:03:47,709
a private<font color="#CCCCCC"> air gapped</font><font color="#E5E5E5"> network we believe</font>

92
00:03:45,759 --> 00:03:51,159
there's nobody else<font color="#E5E5E5"> there and so we take</font>

93
00:03:47,709 --> 00:03:54,489
no extra steps<font color="#E5E5E5"> to</font><font color="#CCCCCC"> verify the</font><font color="#E5E5E5"> identity of</font>

94
00:03:51,159 --> 00:03:57,250
the other party<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> in a very</font>

95
00:03:54,489 --> 00:03:59,169
small number<font color="#CCCCCC"> of situations but in</font>

96
00:03:57,250 --> 00:04:01,509
general it<font color="#CCCCCC"> is not if somebody else</font>

97
00:03:59,169 --> 00:04:03,970
sneaks into the<font color="#E5E5E5"> room or is hanging</font><font color="#CCCCCC"> from</font>

98
00:04:01,509 --> 00:04:07,629
the eaves<font color="#CCCCCC"> our</font><font color="#E5E5E5"> security</font><font color="#CCCCCC"> is broken we</font><font color="#E5E5E5"> need</font>

99
00:04:03,970 --> 00:04:09,090
it to be private<font color="#CCCCCC"> as</font><font color="#E5E5E5"> well as trusted so</font>

100
00:04:07,629 --> 00:04:11,709
how does this work on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internets</font>

101
00:04:09,090 --> 00:04:14,019
communicating on a public<font color="#CCCCCC"> network</font><font color="#E5E5E5"> is</font>

102
00:04:11,709 --> 00:04:18,130
like<font color="#E5E5E5"> shouting across a crowded streets</font>

103
00:04:14,019 --> 00:04:19,659
we see the speaker<font color="#E5E5E5"> or IP we hear their</font>

104
00:04:18,130 --> 00:04:21,519
voice<font color="#E5E5E5"> synchronized with</font><font color="#CCCCCC"> the movement of</font>

105
00:04:19,659 --> 00:04:24,190
<font color="#E5E5E5">their lips and hear the words is that</font>

106
00:04:21,519 --> 00:04:26,409
enough to trust somebody well<font color="#E5E5E5"> in human</font>

107
00:04:24,190 --> 00:04:28,750
terms right<font color="#CCCCCC"> now yes</font><font color="#E5E5E5"> although in the</font>

108
00:04:26,409 --> 00:04:30,200
future deep fakes mean impractically

109
00:04:28,750 --> 00:04:32,720
that may not<font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font>

110
00:04:30,200 --> 00:04:35,420
stability<font color="#E5E5E5"> but this only works when both</font>

111
00:04:32,720 --> 00:04:38,350
parties<font color="#CCCCCC"> are local</font><font color="#E5E5E5"> what happens when we</font>

112
00:04:35,420 --> 00:04:40,610
need<font color="#E5E5E5"> to communicate remotely</font>

113
00:04:38,350 --> 00:04:43,430
you may remember postman pat from<font color="#E5E5E5"> your</font>

114
00:04:40,610 --> 00:04:47,060
youth we use the<font color="#CCCCCC"> Postal Service or these</font>

115
00:04:43,430 --> 00:04:49,220
days<font color="#E5E5E5"> this is the</font><font color="#CCCCCC"> internet's so with the</font>

116
00:04:47,060 --> 00:04:51,890
<font color="#E5E5E5">postal service we want to trust the</font>

117
00:04:49,220 --> 00:04:54,740
stamp<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the letter as a guarantee of</font>

118
00:04:51,890 --> 00:04:58,190
sanctity nobody is supposed to open<font color="#E5E5E5"> this</font>

119
00:04:54,740 --> 00:05:00,610
right wrong<font color="#E5E5E5"> the UK in particular has a</font>

120
00:04:58,190 --> 00:05:02,750
long<font color="#CCCCCC"> history of postal interception</font><font color="#E5E5E5"> and</font>

121
00:05:00,610 --> 00:05:04,310
communications in transit in general

122
00:05:02,750 --> 00:05:06,280
<font color="#E5E5E5">preventing them from reaching their</font>

123
00:05:04,310 --> 00:05:10,010
<font color="#E5E5E5">destination</font><font color="#CCCCCC"> nor spying on their contents</font>

124
00:05:06,280 --> 00:05:11,869
so we need to get our privacy<font color="#E5E5E5"> what can</font>

125
00:05:10,010 --> 00:05:15,349
we do when our communications path is

126
00:05:11,870 --> 00:05:16,880
untrusted we use<font color="#E5E5E5"> encryption and on the</font>

127
00:05:15,350 --> 00:05:21,530
internet that encryption<font color="#E5E5E5"> is what we know</font>

128
00:05:16,880 --> 00:05:24,590
as<font color="#CCCCCC"> a TTP secure SSL TLS and back we go</font>

129
00:05:21,530 --> 00:05:27,619
in time to 1991<font color="#E5E5E5"> when there were no</font>

130
00:05:24,590 --> 00:05:28,760
certificates<font color="#CCCCCC"> neither was there Geocities</font>

131
00:05:27,620 --> 00:05:30,490
but for<font color="#E5E5E5"> those of you old enough to</font>

132
00:05:28,760 --> 00:05:33,349
<font color="#E5E5E5">remember it is a trip down memory</font><font color="#CCCCCC"> lane</font>

133
00:05:30,490 --> 00:05:35,900
<font color="#E5E5E5">we tried for a</font><font color="#CCCCCC"> few years we released SSL</font>

134
00:05:33,350 --> 00:05:38,330
version<font color="#CCCCCC"> two</font><font color="#E5E5E5"> it was difficult</font><font color="#CCCCCC"> it was</font><font color="#E5E5E5"> slow</font>

135
00:05:35,900 --> 00:05:41,060
algorithmically<font color="#E5E5E5"> and computationally and</font>

136
00:05:38,330 --> 00:05:44,510
<font color="#E5E5E5">it was broken so out came SSL version</font>

137
00:05:41,060 --> 00:05:46,850
<font color="#CCCCCC">three more turmoil</font><font color="#E5E5E5"> and finally TLS</font>

138
00:05:44,510 --> 00:05:47,480
backwards incompatible<font color="#E5E5E5"> everything is</font>

139
00:05:46,850 --> 00:05:50,480
deprecated

140
00:05:47,480 --> 00:05:53,390
<font color="#CCCCCC">we're now on TLS 1.3 and there are many</font>

141
00:05:50,480 --> 00:05:56,570
many attacks against these protocols<font color="#E5E5E5"> and</font>

142
00:05:53,390 --> 00:05:59,240
specific implementations<font color="#E5E5E5"> of them so as</font>

143
00:05:56,570 --> 00:06:02,840
always keep your systems patched<font color="#E5E5E5"> is it</font>

144
00:05:59,240 --> 00:06:05,120
really that<font color="#E5E5E5"> simple</font><font color="#CCCCCC"> will smith sadly not</font>

145
00:06:02,840 --> 00:06:08,000
a single mistake<font color="#E5E5E5"> anywhere in</font>

146
00:06:05,120 --> 00:06:10,490
configuration<font color="#E5E5E5"> implementation or usage</font>

147
00:06:08,000 --> 00:06:12,860
<font color="#E5E5E5">can compromise the</font><font color="#CCCCCC"> integrity of our</font>

148
00:06:10,490 --> 00:06:16,310
encryption<font color="#E5E5E5"> leading to the oft cited</font>

149
00:06:12,860 --> 00:06:17,780
<font color="#E5E5E5">aphorism don't roll</font><font color="#CCCCCC"> your own there's no</font>

150
00:06:16,310 --> 00:06:20,630
greater challenge for a cryptography

151
00:06:17,780 --> 00:06:22,609
nerd than an unhackable<font color="#CCCCCC"> cipher</font><font color="#E5E5E5"> see</font>

152
00:06:20,630 --> 00:06:24,230
blu-ray cryptography is just a

153
00:06:22,610 --> 00:06:26,870
<font color="#E5E5E5">mathematical puzzle with some strict</font>

154
00:06:24,230 --> 00:06:29,830
assumptions and with that<font color="#E5E5E5"> warning on to</font>

155
00:06:26,870 --> 00:06:32,900
<font color="#CCCCCC">cuban asses securing the api server</font>

156
00:06:29,830 --> 00:06:35,570
there are a lot of encryption<font color="#E5E5E5"> options on</font>

157
00:06:32,900 --> 00:06:36,440
the<font color="#CCCCCC"> api server</font><font color="#E5E5E5"> we use TLS everywhere for</font>

158
00:06:35,570 --> 00:06:39,349
<font color="#E5E5E5">how does this work</font>

159
00:06:36,440 --> 00:06:42,140
we<font color="#CCCCCC"> ask for a set of</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> to be signed</font>

160
00:06:39,350 --> 00:06:43,089
<font color="#E5E5E5">and a</font><font color="#CCCCCC"> certificate</font><font color="#E5E5E5"> guaranteeing</font><font color="#CCCCCC"> that data</font>

161
00:06:42,140 --> 00:06:46,539
is

162
00:06:43,089 --> 00:06:48,069
<font color="#CCCCCC">it's the</font><font color="#E5E5E5"> CSR request and we can then use</font>

163
00:06:46,539 --> 00:06:50,349
<font color="#E5E5E5">the trust we</font><font color="#CCCCCC"> have in the</font><font color="#E5E5E5"> certificate</font>

164
00:06:48,069 --> 00:06:52,929
chain<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the signer</font><font color="#E5E5E5"> to the leaf</font>

165
00:06:50,349 --> 00:06:55,869
certificates to validate an x.509

166
00:06:52,929 --> 00:06:57,669
certificate at<font color="#CCCCCC"> runtime</font><font color="#E5E5E5"> so we have the</font>

167
00:06:55,869 --> 00:07:00,429
root certificate<font color="#CCCCCC"> the root</font><font color="#E5E5E5"> certificate</font>

168
00:06:57,669 --> 00:07:02,258
authority is generally<font color="#E5E5E5"> kept offline and</font>

169
00:07:00,429 --> 00:07:04,419
<font color="#E5E5E5">safely secured</font><font color="#CCCCCC"> the root signs an</font>

170
00:07:02,259 --> 00:07:06,579
intermediate or<font color="#E5E5E5"> more general signing</font>

171
00:07:04,419 --> 00:07:09,818
certificates which finally signs the

172
00:07:06,579 --> 00:07:11,919
leaf or end<font color="#E5E5E5"> entity certificate which is</font>

173
00:07:09,819 --> 00:07:14,469
<font color="#E5E5E5">what we get on a website or a workload</font>

174
00:07:11,919 --> 00:07:17,619
<font color="#E5E5E5">or on the API server and what's that</font>

175
00:07:14,469 --> 00:07:20,379
that is a load of x.509 certificates in

176
00:07:17,619 --> 00:07:25,089
a chain of<font color="#E5E5E5"> trust that</font><font color="#CCCCCC"> is the basis for</font>

177
00:07:20,379 --> 00:07:28,389
TLS<font color="#CCCCCC"> okay so what are these concepts and</font>

178
00:07:25,089 --> 00:07:30,869
<font color="#CCCCCC">how can</font><font color="#E5E5E5"> we establish new encryption keys</font>

179
00:07:28,389 --> 00:07:34,839
across a network<font color="#E5E5E5"> that we do not trust</font>

180
00:07:30,869 --> 00:07:37,479
<font color="#E5E5E5">because it's not already encrypted we</font>

181
00:07:34,839 --> 00:07:39,969
use public key cryptography<font color="#E5E5E5"> so what is</font>

182
00:07:37,479 --> 00:07:42,610
this<font color="#E5E5E5"> simply it's a way to send</font><font color="#CCCCCC"> messages</font>

183
00:07:39,969 --> 00:07:46,119
that<font color="#CCCCCC"> only the intended recipients can</font>

184
00:07:42,610 --> 00:07:48,099
read we use the public key<font color="#CCCCCC"> to unlock the</font>

185
00:07:46,119 --> 00:07:50,319
<font color="#E5E5E5">mailbox the public key can</font><font color="#CCCCCC"> be shared</font>

186
00:07:48,099 --> 00:07:52,419
<font color="#E5E5E5">given to everybody because it's meant to</font>

187
00:07:50,319 --> 00:07:54,939
<font color="#E5E5E5">start the</font><font color="#CCCCCC"> conversation and not end it</font>

188
00:07:52,419 --> 00:07:56,649
<font color="#E5E5E5">then the message is encrypted with that</font>

189
00:07:54,939 --> 00:07:59,889
key<font color="#E5E5E5"> and put</font><font color="#CCCCCC"> into the box</font>

190
00:07:56,649 --> 00:08:01,929
and finally the private key is used to

191
00:07:59,889 --> 00:08:04,929
<font color="#CCCCCC">unlock the box</font><font color="#E5E5E5"> and decrypt the message</font>

192
00:08:01,929 --> 00:08:07,839
the public key cannot decrypt a message

193
00:08:04,929 --> 00:08:11,708
that<font color="#CCCCCC"> itself has encrypted only the</font>

194
00:08:07,839 --> 00:08:13,449
<font color="#E5E5E5">private key can do so so how does this</font>

195
00:08:11,709 --> 00:08:15,519
will work put some quick<font color="#E5E5E5"> glossary</font>

196
00:08:13,449 --> 00:08:18,129
descriptions<font color="#E5E5E5"> symmetric encryption is</font>

197
00:08:15,519 --> 00:08:20,469
both keys being the same<font color="#E5E5E5"> you use one key</font>

198
00:08:18,129 --> 00:08:22,209
to open<font color="#E5E5E5"> or</font><font color="#CCCCCC"> close</font><font color="#E5E5E5"> the same door this</font>

199
00:08:20,469 --> 00:08:24,159
wouldn't be<font color="#E5E5E5"> any good on the internet</font>

200
00:08:22,209 --> 00:08:26,289
because the server would have to share

201
00:08:24,159 --> 00:08:28,688
<font color="#E5E5E5">its private keys with every</font><font color="#CCCCCC"> clients who</font>

202
00:08:26,289 --> 00:08:30,549
wanted to talk to it so asymmetric

203
00:08:28,689 --> 00:08:31,209
encryption the keys are different<font color="#CCCCCC"> this</font>

204
00:08:30,549 --> 00:08:34,838
is more like it

205
00:08:31,209 --> 00:08:37,479
this is how<font color="#CCCCCC"> PKI works we base this on</font>

206
00:08:34,839 --> 00:08:39,430
<font color="#CCCCCC">elliptic curves which is essentially</font>

207
00:08:37,479 --> 00:08:42,610
curves that<font color="#E5E5E5"> don't cross and loop around</font>

208
00:08:39,429 --> 00:08:45,849
the<font color="#E5E5E5"> plane and we use certain properties</font>

209
00:08:42,610 --> 00:08:48,809
<font color="#E5E5E5">of the</font><font color="#CCCCCC"> elliptic curve to</font><font color="#E5E5E5"> make a</font><font color="#CCCCCC"> are more</font>

210
00:08:45,850 --> 00:08:52,179
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> problem space to</font><font color="#CCCCCC"> brute-force</font>

211
00:08:48,809 --> 00:08:54,750
<font color="#CCCCCC">and finally it's start oh this is these</font>

212
00:08:52,179 --> 00:08:56,709
are elliptic curves<font color="#E5E5E5"> and then finally</font>

213
00:08:54,750 --> 00:08:58,150
diffie-hellman

214
00:08:56,710 --> 00:09:00,490
is a way<font color="#E5E5E5"> of generating a shared secret</font>

215
00:08:58,150 --> 00:09:02,709
between<font color="#E5E5E5"> two people in such a way that</font>

216
00:09:00,490 --> 00:09:05,470
<font color="#E5E5E5">the secret cannot be seen</font><font color="#CCCCCC"> by observing</font>

217
00:09:02,710 --> 00:09:06,850
the communication this<font color="#E5E5E5"> is how SSH works</font>

218
00:09:05,470 --> 00:09:09,610
this has been integrated<font color="#E5E5E5"> into the</font>

219
00:09:06,850 --> 00:09:11,440
bootstrap phase of TLS now so you're not

220
00:09:09,610 --> 00:09:12,730
<font color="#E5E5E5">sharing information keys during you're</font>

221
00:09:11,440 --> 00:09:15,150
not sharing<font color="#CCCCCC"> information</font><font color="#E5E5E5"> during the key</font>

222
00:09:12,730 --> 00:09:21,910
exchange<font color="#CCCCCC"> you're creating a key</font><font color="#E5E5E5"> together</font>

223
00:09:15,150 --> 00:09:22,720
<font color="#E5E5E5">separately and</font><font color="#CCCCCC"> she's seen these guys</font>

224
00:09:21,910 --> 00:09:24,610
<font color="#CCCCCC">there we go</font>

225
00:09:22,720 --> 00:09:26,790
these<font color="#E5E5E5"> are the two gentlemen here is a</font>

226
00:09:24,610 --> 00:09:29,970
cryptography<font color="#CCCCCC"> that kept</font><font color="#E5E5E5"> us safe since</font>

227
00:09:26,790 --> 00:09:32,790
1976<font color="#E5E5E5"> fighting</font><font color="#CCCCCC"> us export grade</font>

228
00:09:29,970 --> 00:09:34,930
classifications on cryptography<font color="#CCCCCC"> and</font>

229
00:09:32,790 --> 00:09:38,560
doing a great<font color="#CCCCCC"> service for all of us in</font>

230
00:09:34,930 --> 00:09:40,569
the<font color="#CCCCCC"> mean time so moving on it's more</font>

231
00:09:38,560 --> 00:09:42,640
info on how this bootstrapping<font color="#CCCCCC"> and TLS</font>

232
00:09:40,570 --> 00:09:44,080
actually works<font color="#E5E5E5"> from DNS simple explained</font>

233
00:09:42,640 --> 00:09:47,110
with<font color="#CCCCCC"> Katz what more could you possibly</font>

234
00:09:44,080 --> 00:09:50,340
ask<font color="#E5E5E5"> for and this is the</font><font color="#CCCCCC"> original crypto</font>

235
00:09:47,110 --> 00:09:50,340
not this

236
00:09:55,110 --> 00:10:00,480
don't tell the other room<font color="#CCCCCC"> so let's move</font>

237
00:09:58,830 --> 00:10:02,580
<font color="#E5E5E5">this</font><font color="#CCCCCC"> back to</font><font color="#E5E5E5"> Cuba</font><font color="#CCCCCC"> Netta slam the API</font>

238
00:10:00,480 --> 00:10:05,160
server presents the<font color="#E5E5E5"> certificates when</font>

239
00:10:02,580 --> 00:10:08,460
<font color="#E5E5E5">cube control makes a request to</font><font color="#CCCCCC"> the API</font>

240
00:10:05,160 --> 00:10:10,020
it usually<font color="#CCCCCC"> self-signed</font><font color="#E5E5E5"> this sits in user</font>

241
00:10:08,460 --> 00:10:12,720
<font color="#E5E5E5">dock you configure on your local machine</font>

242
00:10:10,020 --> 00:10:15,300
<font color="#E5E5E5">and typically contains the public</font>

243
00:10:12,720 --> 00:10:17,640
<font color="#E5E5E5">portion of the root certificates for</font><font color="#CCCCCC"> the</font>

244
00:10:15,300 --> 00:10:19,979
API<font color="#CCCCCC"> service</font><font color="#E5E5E5"> certificates which is</font>

245
00:10:17,640 --> 00:10:22,500
<font color="#E5E5E5">specified when</font><font color="#CCCCCC"> using place of b system</font>

246
00:10:19,980 --> 00:10:25,230
defaults difficut s--<font color="#CCCCCC"> queue control uses</font>

247
00:10:22,500 --> 00:10:26,790
the<font color="#E5E5E5"> public key of the</font><font color="#CCCCCC"> api server to</font>

248
00:10:25,230 --> 00:10:28,590
start<font color="#E5E5E5"> the diffie-hellman exchange they</font>

249
00:10:26,790 --> 00:10:31,349
generate their<font color="#CCCCCC"> seats if</font><font color="#E5E5E5"> their shared</font>

250
00:10:28,590 --> 00:10:37,950
secrets<font color="#E5E5E5"> then shared a secret key and</font>

251
00:10:31,350 --> 00:10:39,270
<font color="#E5E5E5">begin to talk this is now secure exactly</font>

252
00:10:37,950 --> 00:10:41,640
the same certificate<font color="#E5E5E5"> validation as</font>

253
00:10:39,270 --> 00:10:44,370
before<font color="#E5E5E5"> so this is</font><font color="#CCCCCC"> what a public key is</font>

254
00:10:41,640 --> 00:10:47,790
made<font color="#E5E5E5"> from its SSL TLS certificates are</font>

255
00:10:44,370 --> 00:10:50,640
the public part<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> servers x.509 key</font>

256
00:10:47,790 --> 00:10:53,189
pair<font color="#E5E5E5"> it contains a public key and an</font>

257
00:10:50,640 --> 00:10:55,650
identity<font color="#E5E5E5"> a host name or an organization</font>

258
00:10:53,190 --> 00:10:58,310
or<font color="#E5E5E5"> an individual and as</font><font color="#CCCCCC"> i've signed by</font>

259
00:10:55,650 --> 00:11:00,780
certificate authority<font color="#CCCCCC"> or self signed</font>

260
00:10:58,310 --> 00:11:02,790
<font color="#E5E5E5">what does a certificate looked like well</font>

261
00:11:00,780 --> 00:11:05,250
here is a<font color="#E5E5E5"> certificate spec from the x5</font>

262
00:11:02,790 --> 00:11:07,050
<font color="#E5E5E5">and</font><font color="#CCCCCC"> nine</font><font color="#E5E5E5"> version</font><font color="#CCCCCC"> 3 we recognize this is</font>

263
00:11:05,250 --> 00:11:09,540
<font color="#CCCCCC">the</font><font color="#E5E5E5"> encoded version</font><font color="#CCCCCC"> of a certificates</font>

264
00:11:07,050 --> 00:11:12,300
and<font color="#E5E5E5"> we can decode it very easily to see</font>

265
00:11:09,540 --> 00:11:14,189
its contents<font color="#E5E5E5"> how do we know that</font><font color="#CCCCCC"> we can</font>

266
00:11:12,300 --> 00:11:16,439
<font color="#E5E5E5">trust it</font><font color="#CCCCCC"> we're back to certificate path</font>

267
00:11:14,190 --> 00:11:18,570
<font color="#E5E5E5">validation and there's a question here</font>

268
00:11:16,440 --> 00:11:20,430
<font color="#CCCCCC">of self-signed certificates</font><font color="#E5E5E5"> on the</font>

269
00:11:18,570 --> 00:11:22,680
<font color="#E5E5E5">public internet self-signed certificates</font>

270
00:11:20,430 --> 00:11:24,660
are bad they are generally the sign of a

271
00:11:22,680 --> 00:11:26,910
<font color="#CCCCCC">man-in-the-middle attack</font><font color="#E5E5E5"> we don't trust</font>

272
00:11:24,660 --> 00:11:28,620
them<font color="#E5E5E5"> and it</font><font color="#CCCCCC"> looks like somebody who's</font>

273
00:11:26,910 --> 00:11:31,170
potentially<font color="#CCCCCC"> prot intercepted</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> re</font>

274
00:11:28,620 --> 00:11:34,880
<font color="#E5E5E5">proxied our connection to</font><font color="#CCCCCC"> a server then</font>

275
00:11:31,170 --> 00:11:38,569
presented the communications back to us

276
00:11:34,880 --> 00:11:42,000
the difference here<font color="#CCCCCC"> is with kubernetes</font>

277
00:11:38,570 --> 00:11:44,490
we sign<font color="#E5E5E5"> with a typical authority that is</font>

278
00:11:42,000 --> 00:11:45,990
generated within<font color="#E5E5E5"> the</font><font color="#CCCCCC"> cluster</font><font color="#E5E5E5"> the private</font>

279
00:11:44,490 --> 00:11:48,210
<font color="#E5E5E5">keys for that</font><font color="#CCCCCC"> certificate authority do</font>

280
00:11:45,990 --> 00:11:50,160
not leave the cluster<font color="#E5E5E5"> and as such there</font>

281
00:11:48,210 --> 00:11:52,800
is<font color="#E5E5E5"> one place to control your key</font>

282
00:11:50,160 --> 00:11:54,390
material<font color="#E5E5E5"> if the root on</font><font color="#CCCCCC"> the API</font><font color="#E5E5E5"> servers</font>

283
00:11:52,800 --> 00:11:56,010
where those public where those typical

284
00:11:54,390 --> 00:11:57,810
<font color="#CCCCCC">Authority prime keys are stored</font><font color="#E5E5E5"> is</font>

285
00:11:56,010 --> 00:12:00,390
compromised<font color="#E5E5E5"> you have bigger problems</font>

286
00:11:57,810 --> 00:12:03,030
<font color="#E5E5E5">than the encryption in</font><font color="#CCCCCC"> transit of</font><font color="#E5E5E5"> the</font>

287
00:12:00,390 --> 00:12:05,100
<font color="#E5E5E5">cluster so arguably this is new pattern</font>

288
00:12:03,030 --> 00:12:07,230
and it's better than<font color="#CCCCCC"> having centrally</font>

289
00:12:05,100 --> 00:12:09,270
organization controlled certificate

290
00:12:07,230 --> 00:12:11,070
which you have to manage<font color="#CCCCCC"> not only</font>

291
00:12:09,270 --> 00:12:12,590
<font color="#E5E5E5">offline and some sort of cold storage</font>

292
00:12:11,070 --> 00:12:14,700
but also<font color="#E5E5E5"> bringing into the cluster</font>

293
00:12:12,590 --> 00:12:18,000
<font color="#E5E5E5">regeneration and management of keys at</font>

294
00:12:14,700 --> 00:12:20,040
rotation<font color="#E5E5E5"> time so the new cloud native</font>

295
00:12:18,000 --> 00:12:21,810
<font color="#E5E5E5">way is generate your certificates keep</font>

296
00:12:20,040 --> 00:12:23,870
<font color="#E5E5E5">everything all key material inside</font><font color="#CCCCCC"> the</font>

297
00:12:21,810 --> 00:12:27,510
<font color="#E5E5E5">cluster</font><font color="#CCCCCC"> it's nice it works</font>

298
00:12:23,870 --> 00:12:29,730
we do this in kubernetes land with two

299
00:12:27,510 --> 00:12:32,189
certificates<font color="#E5E5E5"> one for the server so</font><font color="#CCCCCC"> we</font>

300
00:12:29,730 --> 00:12:34,500
prove the identity<font color="#CCCCCC"> and another one for</font>

301
00:12:32,190 --> 00:12:35,970
<font color="#E5E5E5">the clients we've mentioned this a</font>

302
00:12:34,500 --> 00:12:39,870
couple<font color="#CCCCCC"> of times already</font><font color="#E5E5E5"> it's just the</font>

303
00:12:35,970 --> 00:12:41,730
TLS negotiation<font color="#E5E5E5"> twice there is second</font>

304
00:12:39,870 --> 00:12:43,560
certificate exchange between<font color="#E5E5E5"> the client</font>

305
00:12:41,730 --> 00:12:46,110
and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> server after the initial</font>

306
00:12:43,560 --> 00:12:48,300
handshake<font color="#CCCCCC"> this</font><font color="#E5E5E5"> establishes a two-way</font>

307
00:12:46,110 --> 00:12:50,910
trust mechanism<font color="#E5E5E5"> that guarantees the</font>

308
00:12:48,300 --> 00:12:52,349
identity<font color="#CCCCCC"> of both parties</font><font color="#E5E5E5"> so on the</font>

309
00:12:50,910 --> 00:12:54,150
<font color="#CCCCCC">internet</font><font color="#E5E5E5"> you would ask for the</font>

310
00:12:52,350 --> 00:12:57,000
certificate<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the server</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> would</font>

311
00:12:54,150 --> 00:12:59,550
get back the<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> com</font><font color="#E5E5E5"> hostname with</font>

312
00:12:57,000 --> 00:13:02,100
mutual TLS<font color="#E5E5E5"> you</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> provide a second</font>

313
00:12:59,550 --> 00:13:04,949
<font color="#E5E5E5">ticket with your</font><font color="#CCCCCC"> identity encoded</font><font color="#E5E5E5"> into</font>

314
00:13:02,100 --> 00:13:07,320
it so<font color="#E5E5E5"> both parties can identify each</font>

315
00:13:04,950 --> 00:13:09,500
<font color="#E5E5E5">other and that of notification can then</font>

316
00:13:07,320 --> 00:13:13,410
be used<font color="#CCCCCC"> as the basis of authorization</font>

317
00:13:09,500 --> 00:13:16,140
<font color="#E5E5E5">this is a good thing so where are we we</font>

318
00:13:13,410 --> 00:13:18,270
have private communications<font color="#E5E5E5"> confidential</font>

319
00:13:16,140 --> 00:13:20,699
encrypted<font color="#E5E5E5"> we have trusted communications</font>

320
00:13:18,270 --> 00:13:23,310
we have integrity<font color="#CCCCCC"> given to us by the</font>

321
00:13:20,700 --> 00:13:24,960
<font color="#E5E5E5">encryption the cipher guarantees we get</font>

322
00:13:23,310 --> 00:13:30,239
the correct<font color="#E5E5E5"> output with the correct</font>

323
00:13:24,960 --> 00:13:33,980
inputs and finally trust we have

324
00:13:30,240 --> 00:13:36,960
<font color="#E5E5E5">authentication from client certificates</font>

325
00:13:33,980 --> 00:13:40,260
so back to the kubernetes api server do

326
00:13:36,960 --> 00:13:42,390
we trust the network<font color="#E5E5E5"> frankly no and why</font>

327
00:13:40,260 --> 00:13:45,090
should<font color="#E5E5E5"> we if a malicious actor gets</font>

328
00:13:42,390 --> 00:13:46,350
inside the perimeter<font color="#CCCCCC"> they have</font><font color="#E5E5E5"> access</font><font color="#CCCCCC"> to</font>

329
00:13:45,090 --> 00:13:49,290
<font color="#E5E5E5">everything</font><font color="#CCCCCC"> behind it</font>

330
00:13:46,350 --> 00:13:51,240
phrases such as perimeter and<font color="#CCCCCC"> dmz should</font>

331
00:13:49,290 --> 00:13:55,170
raise<font color="#E5E5E5"> flags in cloud native</font>

332
00:13:51,240 --> 00:13:57,060
architectures beyond core from<font color="#CCCCCC"> google is</font>

333
00:13:55,170 --> 00:13:59,550
designed as a response to<font color="#CCCCCC"> these newly</font>

334
00:13:57,060 --> 00:14:02,189
emergent threats this<font color="#E5E5E5"> is a project</font><font color="#CCCCCC"> that</font>

335
00:13:59,550 --> 00:14:04,530
basically says trust nothing validates

336
00:14:02,190 --> 00:14:07,070
<font color="#CCCCCC">everything and run</font><font color="#E5E5E5"> your servers as close</font>

337
00:14:04,530 --> 00:14:09,780
to public<font color="#E5E5E5"> as you possibly can because</font>

338
00:14:07,070 --> 00:14:12,000
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> the best way to bring pain</font>

339
00:14:09,780 --> 00:14:14,430
<font color="#E5E5E5">forward and be sure that</font><font color="#CCCCCC"> your</font>

340
00:14:12,000 --> 00:14:16,800
configurations are secure<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is called</font>

341
00:14:14,430 --> 00:14:19,170
zero trust<font color="#E5E5E5"> and it means that our systems</font>

342
00:14:16,800 --> 00:14:20,079
<font color="#E5E5E5">continue to make some guarantees of</font>

343
00:14:19,170 --> 00:14:21,610
safety

344
00:14:20,080 --> 00:14:24,340
even when some components are

345
00:14:21,610 --> 00:14:25,750
compromised obviously the nature of that

346
00:14:24,340 --> 00:14:28,330
safety<font color="#CCCCCC"> is entirely dependent on the</font>

347
00:14:25,750 --> 00:14:31,150
<font color="#E5E5E5">system and the type of data restores but</font>

348
00:14:28,330 --> 00:14:34,030
contrast this<font color="#CCCCCC"> to traditional perimeter</font>

349
00:14:31,150 --> 00:14:36,640
<font color="#E5E5E5">based approaches one</font><font color="#CCCCCC"> compromise and the</font>

350
00:14:34,030 --> 00:14:39,579
whole system<font color="#CCCCCC"> might be hosed say what's</font>

351
00:14:36,640 --> 00:14:41,710
<font color="#E5E5E5">Equifax so if you want to run your own</font>

352
00:14:39,580 --> 00:14:43,990
zero trust server<font color="#E5E5E5"> all you need to do is</font>

353
00:14:41,710 --> 00:14:47,440
put an identity<font color="#E5E5E5"> aware proxy in front of</font>

354
00:14:43,990 --> 00:14:49,030
it or in the same pod<font color="#E5E5E5"> as it there are</font>

355
00:14:47,440 --> 00:14:50,830
multiple examples<font color="#CCCCCC"> of</font><font color="#E5E5E5"> this online and</font>

356
00:14:49,030 --> 00:14:52,949
it's fine<font color="#E5E5E5"> for</font><font color="#CCCCCC"> simple applications it</font>

357
00:14:50,830 --> 00:14:55,330
works<font color="#CCCCCC"> nicely but for complex</font>

358
00:14:52,950 --> 00:14:57,490
microcircuit the transitive dependencies

359
00:14:55,330 --> 00:14:59,110
and<font color="#CCCCCC"> crazy-cool graphs you</font><font color="#E5E5E5"> probably have</font>

360
00:14:57,490 --> 00:15:01,390
<font color="#E5E5E5">to run some sort of one-time token</font>

361
00:14:59,110 --> 00:15:04,030
<font color="#CCCCCC">service to prevent replays</font><font color="#E5E5E5"> parse</font><font color="#CCCCCC"> request</font>

362
00:15:01,390 --> 00:15:06,360
context<font color="#E5E5E5"> rounds and another number of</font>

363
00:15:04,030 --> 00:15:08,949
non-trivial application layer concerns

364
00:15:06,360 --> 00:15:11,320
<font color="#E5E5E5">fortunately they're all described in</font>

365
00:15:08,950 --> 00:15:12,760
this book<font color="#E5E5E5"> by spiffy author</font><font color="#CCCCCC"> Evan</font><font color="#E5E5E5"> Gillman</font>

366
00:15:11,320 --> 00:15:14,620
<font color="#CCCCCC">if you want to dig</font><font color="#E5E5E5"> deeper</font><font color="#CCCCCC"> into</font><font color="#E5E5E5"> the</font>

367
00:15:12,760 --> 00:15:17,020
future of network<font color="#CCCCCC"> security this</font><font color="#E5E5E5"> is a</font>

368
00:15:14,620 --> 00:15:18,700
great place to start<font color="#E5E5E5"> we will examine</font>

369
00:15:17,020 --> 00:15:25,569
<font color="#CCCCCC">some of these concepts in detail shortly</font>

370
00:15:18,700 --> 00:15:27,430
<font color="#E5E5E5">but first back to the</font><font color="#CCCCCC"> API server what</font>

371
00:15:25,570 --> 00:15:29,890
does<font color="#CCCCCC"> zero Trust really mean in</font><font color="#E5E5E5"> this</font>

372
00:15:27,430 --> 00:15:32,439
context it means<font color="#CCCCCC"> that we mutually</font>

373
00:15:29,890 --> 00:15:35,290
authenticate the TLS connection<font color="#E5E5E5"> with</font>

374
00:15:32,440 --> 00:15:38,080
client certificates<font color="#E5E5E5"> between the cubelets</font>

375
00:15:35,290 --> 00:15:40,120
<font color="#CCCCCC">and the</font><font color="#E5E5E5"> API server between clients that</font>

376
00:15:38,080 --> 00:15:41,920
are connecting turrets<font color="#E5E5E5"> it means we know</font>

377
00:15:40,120 --> 00:15:44,230
<font color="#E5E5E5">the identity of the server and of the</font>

378
00:15:41,920 --> 00:15:48,250
clients and that<font color="#E5E5E5"> we have our own private</font>

379
00:15:44,230 --> 00:15:50,530
and trusted criteria<font color="#E5E5E5"> fulfilled zero</font>

380
00:15:48,250 --> 00:15:52,360
<font color="#CCCCCC">Trust is a lot</font><font color="#E5E5E5"> more than this but</font><font color="#CCCCCC"> we're</font>

381
00:15:50,530 --> 00:15:54,520
adhering<font color="#E5E5E5"> to one of his principles to</font>

382
00:15:52,360 --> 00:15:57,850
restrict the blast radius<font color="#E5E5E5"> of potential</font>

383
00:15:54,520 --> 00:15:59,790
compromise<font color="#E5E5E5"> in our network some container</font>

384
00:15:57,850 --> 00:16:02,380
or server has an<font color="#E5E5E5"> authenticated</font><font color="#CCCCCC"> adult an</font>

385
00:15:59,790 --> 00:16:04,449
authorized user<font color="#CCCCCC"> and their intentions are</font>

386
00:16:02,380 --> 00:16:05,950
malicious<font color="#E5E5E5"> let's have a look at the API</font>

387
00:16:04,450 --> 00:16:08,080
server components and their

388
00:16:05,950 --> 00:16:09,760
communication<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is an awesome diagram</font>

389
00:16:08,080 --> 00:16:11,680
from<font color="#CCCCCC"> Lukas Kallstrom the cube ATM</font>

390
00:16:09,760 --> 00:16:13,750
maintainer<font color="#E5E5E5"> it's in more or</font><font color="#CCCCCC"> less every</font>

391
00:16:11,680 --> 00:16:15,939
talk I ever deliver and it shows us<font color="#E5E5E5"> the</font>

392
00:16:13,750 --> 00:16:19,500
network communication<font color="#CCCCCC"> pods and protocols</font>

393
00:16:15,940 --> 00:16:21,820
<font color="#CCCCCC">for the various</font><font color="#E5E5E5"> components of</font><font color="#CCCCCC"> the system</font>

394
00:16:19,500 --> 00:16:23,950
so let's think<font color="#E5E5E5"> about this what could go</font>

395
00:16:21,820 --> 00:16:26,260
wrong<font color="#E5E5E5"> well a container has an</font>

396
00:16:23,950 --> 00:16:29,020
unauthorized<font color="#CCCCCC"> user how likely is that</font>

397
00:16:26,260 --> 00:16:31,569
<font color="#CCCCCC">well</font><font color="#E5E5E5"> what about if somebody routes</font><font color="#CCCCCC"> a</font>

398
00:16:29,020 --> 00:16:34,189
<font color="#E5E5E5">privileged container admit it everybody</font>

399
00:16:31,570 --> 00:16:37,700
is running some and with a few<font color="#CCCCCC"> cabby</font>

400
00:16:34,190 --> 00:16:39,110
that is game over<font color="#CCCCCC"> privilege containers</font>

401
00:16:37,700 --> 00:16:41,900
are the worst thing<font color="#E5E5E5"> to happen to</font>

402
00:16:39,110 --> 00:16:44,090
computing or they<font color="#E5E5E5"> get onto a load</font>

403
00:16:41,900 --> 00:16:46,880
balancing box that proximal transiting

404
00:16:44,090 --> 00:16:49,430
packets to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> API server with some</font>

405
00:16:46,880 --> 00:16:52,520
caveats game over or there's<font color="#CCCCCC"> another</font>

406
00:16:49,430 --> 00:16:54,469
container<font color="#CCCCCC"> in the same</font><font color="#E5E5E5"> pod as us remember</font>

407
00:16:52,520 --> 00:16:56,990
<font color="#E5E5E5">pod is a shared network namespace they</font>

408
00:16:54,470 --> 00:16:58,940
share the same<font color="#E5E5E5"> network adapter we can</font>

409
00:16:56,990 --> 00:17:01,160
then<font color="#CCCCCC"> sniff their</font><font color="#E5E5E5"> traffic and certain</font>

410
00:16:58,940 --> 00:17:03,800
conditions<font color="#E5E5E5"> game over</font>

411
00:17:01,160 --> 00:17:05,449
defense-in-depth<font color="#CCCCCC"> is a friend here</font><font color="#E5E5E5"> this</font>

412
00:17:03,800 --> 00:17:07,040
is similar to<font color="#E5E5E5"> how traditional breaches</font>

413
00:17:05,449 --> 00:17:09,829
occur<font color="#E5E5E5"> and attacker gains a foothold</font>

414
00:17:07,040 --> 00:17:11,359
within a system<font color="#E5E5E5"> and starts to look for</font>

415
00:17:09,829 --> 00:17:13,599
other chinks in the armor<font color="#E5E5E5"> to pivot and</font>

416
00:17:11,359 --> 00:17:16,909
to continue<font color="#E5E5E5"> to escalate their privilege</font>

417
00:17:13,599 --> 00:17:19,219
we can fix this<font color="#CCCCCC"> for</font><font color="#E5E5E5"> morale sealing up</font>

418
00:17:16,910 --> 00:17:21,050
those gaps in<font color="#CCCCCC"> cuban s's</font><font color="#E5E5E5"> this talk goes</font>

419
00:17:19,220 --> 00:17:24,860
into a lot<font color="#CCCCCC"> more</font><font color="#E5E5E5"> low-level implementation</font>

420
00:17:21,050 --> 00:17:26,810
<font color="#E5E5E5">detail thank you for the cat</font>

421
00:17:24,859 --> 00:17:29,479
this<font color="#CCCCCC"> relentless focus on</font><font color="#E5E5E5"> automation</font>

422
00:17:26,810 --> 00:17:31,580
allows<font color="#E5E5E5"> engineers to automate and refine</font>

423
00:17:29,480 --> 00:17:35,950
the<font color="#E5E5E5"> businesses concerns veracity</font>

424
00:17:31,580 --> 00:17:40,040
security and performance<font color="#CCCCCC"> in some order</font>

425
00:17:35,950 --> 00:17:42,410
<font color="#E5E5E5">so now that we're sure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the control</font>

426
00:17:40,040 --> 00:17:44,720
plane is able to<font color="#E5E5E5"> communicate in hostile</font>

427
00:17:42,410 --> 00:17:47,570
waters<font color="#CCCCCC"> what</font><font color="#E5E5E5"> about the applications</font>

428
00:17:44,720 --> 00:17:50,270
running on<font color="#CCCCCC"> it</font><font color="#E5E5E5"> our data is the golden</font>

429
00:17:47,570 --> 00:17:52,760
treasure trove that attackers<font color="#E5E5E5"> are keen</font>

430
00:17:50,270 --> 00:17:55,400
<font color="#E5E5E5">to retrieve so if we leak our database</font>

431
00:17:52,760 --> 00:17:57,590
<font color="#E5E5E5">keys over</font><font color="#CCCCCC"> the wire we may as well</font><font color="#E5E5E5"> not</font>

432
00:17:55,400 --> 00:17:59,840
bothered encrypting our control plane

433
00:17:57,590 --> 00:18:01,909
traffic so what's next

434
00:17:59,840 --> 00:18:05,270
static endpoints are easier to encrypt

435
00:18:01,910 --> 00:18:08,840
<font color="#E5E5E5">as they tend to stay in one place or</font>

436
00:18:05,270 --> 00:18:11,150
more importantly one<font color="#CCCCCC"> likely</font><font color="#E5E5E5"> domain</font><font color="#CCCCCC"> this</font>

437
00:18:08,840 --> 00:18:13,879
can<font color="#E5E5E5"> then</font><font color="#CCCCCC"> be used</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> x.509 as an</font>

438
00:18:11,150 --> 00:18:16,730
identity<font color="#E5E5E5"> but that's all very well if</font>

439
00:18:13,880 --> 00:18:19,730
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> public if your infrastructure has</font>

440
00:18:16,730 --> 00:18:22,340
a static IP as the front door but what

441
00:18:19,730 --> 00:18:25,160
about dynamic resources containers break

442
00:18:22,340 --> 00:18:26,929
the coupling between<font color="#E5E5E5"> IP and identity</font>

443
00:18:25,160 --> 00:18:27,560
that has<font color="#CCCCCC"> traditionally been used</font><font color="#E5E5E5"> for</font>

444
00:18:26,930 --> 00:18:29,870
firewalling

445
00:18:27,560 --> 00:18:32,389
and network security<font color="#E5E5E5"> containers churn</font>

446
00:18:29,870 --> 00:18:34,939
they get<font color="#CCCCCC"> rescheduled they are dynamic so</font>

447
00:18:32,390 --> 00:18:37,100
<font color="#E5E5E5">we need a component with a holistic view</font>

448
00:18:34,940 --> 00:18:39,050
of the whole<font color="#E5E5E5"> cluster to run our</font>

449
00:18:37,100 --> 00:18:41,840
firewalls for us<font color="#E5E5E5"> our cloud native</font>

450
00:18:39,050 --> 00:18:43,190
firewalling<font color="#CCCCCC"> is</font><font color="#E5E5E5"> network policy</font><font color="#CCCCCC"> Huber</font>

451
00:18:41,840 --> 00:18:45,169
<font color="#CCCCCC">Nettie's is a complex mix of</font>

452
00:18:43,190 --> 00:18:46,470
abstractions and network types and

453
00:18:45,170 --> 00:18:48,330
providers

454
00:18:46,470 --> 00:18:49,860
and<font color="#E5E5E5"> so enforcement of network policy</font>

455
00:18:48,330 --> 00:18:51,809
should be deferred to<font color="#CCCCCC"> the orchestrator</font>

456
00:18:49,860 --> 00:18:54,360
which has a holistic<font color="#E5E5E5"> view of the whole</font>

457
00:18:51,809 --> 00:18:56,580
system<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is what a network policy</font>

458
00:18:54,360 --> 00:18:59,309
looks like they're applied pods by label

459
00:18:56,580 --> 00:19:01,649
of course labels and<font color="#E5E5E5"> loosely pipes if</font>

460
00:18:59,309 --> 00:19:03,840
you put that in inverted<font color="#CCCCCC"> commas in</font>

461
00:19:01,650 --> 00:19:06,000
kubernetes<font color="#CCCCCC"> there is no verification of</font>

462
00:19:03,840 --> 00:19:08,129
labels<font color="#CCCCCC"> as a security</font><font color="#E5E5E5"> feature</font><font color="#CCCCCC"> there the</font>

463
00:19:06,000 --> 00:19:09,929
loosest possible way to enforce

464
00:19:08,130 --> 00:19:12,330
<font color="#CCCCCC">something</font><font color="#E5E5E5"> but unfortunately we deal</font><font color="#CCCCCC"> with</font>

465
00:19:09,929 --> 00:19:14,100
what we<font color="#E5E5E5"> have with an empty</font><font color="#CCCCCC"> quod selector</font>

466
00:19:12,330 --> 00:19:16,020
this denies everything<font color="#CCCCCC"> in the cluster</font><font color="#E5E5E5"> so</font>

467
00:19:14,100 --> 00:19:18,059
it's a default<font color="#CCCCCC"> fail closed</font><font color="#E5E5E5"> it should</font>

468
00:19:16,020 --> 00:19:20,010
<font color="#E5E5E5">really look like this</font><font color="#CCCCCC"> I detest this API</font>

469
00:19:18,059 --> 00:19:22,950
<font color="#CCCCCC">I think for</font><font color="#E5E5E5"> something so important it is</font>

470
00:19:20,010 --> 00:19:25,650
<font color="#E5E5E5">not very clear here's</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> example</font>

471
00:19:22,950 --> 00:19:28,350
<font color="#CCCCCC">that only permits egress</font><font color="#E5E5E5"> for port 53</font>

472
00:19:25,650 --> 00:19:30,960
traffic on<font color="#E5E5E5"> both protocols for some</font>

473
00:19:28,350 --> 00:19:32,490
reason of course maintenance<font color="#E5E5E5"> of policies</font>

474
00:19:30,960 --> 00:19:35,010
as applications change<font color="#CCCCCC"> it's very</font>

475
00:19:32,490 --> 00:19:37,020
important<font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is just four layers</font>

476
00:19:35,010 --> 00:19:39,450
<font color="#CCCCCC">three and four that is because</font><font color="#E5E5E5"> DNS is</font>

477
00:19:37,020 --> 00:19:41,639
inherently<font color="#CCCCCC"> non-deterministic we could be</font>

478
00:19:39,450 --> 00:19:44,340
low<font color="#E5E5E5"> balance we could be</font><font color="#CCCCCC"> GOI</font><font color="#E5E5E5"> peed because</font>

479
00:19:41,640 --> 00:19:47,669
if you round-robin going on<font color="#CCCCCC"> so this was</font>

480
00:19:44,340 --> 00:19:49,260
ignored for for<font color="#E5E5E5"> Humanity's purposes</font><font color="#CCCCCC"> Sto</font>

481
00:19:47,669 --> 00:19:51,240
does<font color="#E5E5E5"> away</font><font color="#CCCCCC"> with this</font><font color="#E5E5E5"> problem because it</font>

482
00:19:49,260 --> 00:19:53,070
<font color="#E5E5E5">still lives at layer seven so you can</font>

483
00:19:51,240 --> 00:19:55,140
perform<font color="#E5E5E5"> egress filtering with an egress</font>

484
00:19:53,070 --> 00:19:56,820
gateway at layer<font color="#E5E5E5"> seven with this year</font>

485
00:19:55,140 --> 00:20:02,520
which is<font color="#E5E5E5"> something we will touch from</font>

486
00:19:56,820 --> 00:20:06,389
briefly<font color="#E5E5E5"> later so here's an impermissible</font>

487
00:20:02,520 --> 00:20:08,429
<font color="#CCCCCC">network policy of course and we have a</font>

488
00:20:06,390 --> 00:20:09,780
pattern<font color="#E5E5E5"> for testing these how are you</font>

489
00:20:08,429 --> 00:20:12,530
going to<font color="#E5E5E5"> know if something so loosely</font>

490
00:20:09,780 --> 00:20:15,539
types and<font color="#E5E5E5"> verified actually breaks you</font>

491
00:20:12,530 --> 00:20:17,940
SSH<font color="#CCCCCC"> onto the node you</font><font color="#E5E5E5"> enter the same</font>

492
00:20:15,539 --> 00:20:20,010
<font color="#E5E5E5">network name space and you aggressively</font>

493
00:20:17,940 --> 00:20:24,059
parallel eyes and map<font color="#E5E5E5"> to</font><font color="#CCCCCC"> white</font><font color="#E5E5E5"> and black</font>

494
00:20:20,010 --> 00:20:25,830
<font color="#CCCCCC">list</font><font color="#E5E5E5"> the desired</font><font color="#CCCCCC"> endpoint that</font><font color="#E5E5E5"> your</font>

495
00:20:24,059 --> 00:20:29,100
application<font color="#E5E5E5"> can reach this is a meta</font>

496
00:20:25,830 --> 00:20:30,418
pattern for testing<font color="#CCCCCC"> network policy start</font>

497
00:20:29,100 --> 00:20:33,780
with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> default deny and build out your</font>

498
00:20:30,419 --> 00:20:38,130
<font color="#E5E5E5">code based on the</font><font color="#CCCCCC"> Kuban Etta's</font>

499
00:20:33,780 --> 00:20:40,559
deployment<font color="#E5E5E5"> names produces simple tap</font>

500
00:20:38,130 --> 00:20:43,280
compliant outputs<font color="#E5E5E5"> and there are other</font>

501
00:20:40,559 --> 00:20:45,389
ways to firewall things in<font color="#E5E5E5"> cuba Nettie's</font>

502
00:20:43,280 --> 00:20:47,158
<font color="#CCCCCC">note b new vector operates at a</font>

503
00:20:45,390 --> 00:20:50,190
different level<font color="#CCCCCC"> to network policy</font>

504
00:20:47,159 --> 00:20:53,580
<font color="#E5E5E5">whatever you do do something</font><font color="#CCCCCC"> unless you</font>

505
00:20:50,190 --> 00:20:56,669
<font color="#CCCCCC">are a creative agency with no state in</font>

506
00:20:53,580 --> 00:20:58,559
your<font color="#E5E5E5"> application at all so we also have</font>

507
00:20:56,669 --> 00:20:59,680
<font color="#E5E5E5">encrypted container network interface</font>

508
00:20:58,559 --> 00:21:01,629
<font color="#E5E5E5">plugins</font>

509
00:20:59,680 --> 00:21:03,340
these do some good if you're using one

510
00:21:01,630 --> 00:21:06,190
<font color="#E5E5E5">but they only fulfill part of our</font>

511
00:21:03,340 --> 00:21:08,199
requirements<font color="#E5E5E5"> this is blanket symmetric</font>

512
00:21:06,190 --> 00:21:09,670
encryption on all traffic<font color="#E5E5E5"> we have no</font>

513
00:21:08,200 --> 00:21:14,800
identity and<font color="#CCCCCC"> there's no authentication</font>

514
00:21:09,670 --> 00:21:16,780
<font color="#CCCCCC">and we are using</font><font color="#E5E5E5"> single key</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> public API</font>

515
00:21:14,800 --> 00:21:18,430
is an attack surface<font color="#E5E5E5"> so we need to do</font>

516
00:21:16,780 --> 00:21:22,540
<font color="#E5E5E5">something else</font><font color="#CCCCCC"> to fix this problem</font>

517
00:21:18,430 --> 00:21:24,580
enter<font color="#E5E5E5"> spiffy spiffy</font><font color="#CCCCCC"> is a set of open</font>

518
00:21:22,540 --> 00:21:27,580
<font color="#E5E5E5">source standards for securely</font>

519
00:21:24,580 --> 00:21:28,990
identifying software systems in dynamic

520
00:21:27,580 --> 00:21:31,419
and heterogeneous production

521
00:21:28,990 --> 00:21:33,460
environments<font color="#CCCCCC"> spire is the</font><font color="#E5E5E5"> reference</font>

522
00:21:31,420 --> 00:21:35,620
implementation which<font color="#CCCCCC"> is a tool chain for</font>

523
00:21:33,460 --> 00:21:37,600
establishing trust<font color="#E5E5E5"> between software</font>

524
00:21:35,620 --> 00:21:41,260
<font color="#E5E5E5">systems across a wide variety of hosting</font>

525
00:21:37,600 --> 00:21:45,639
platforms and concretely<font color="#CCCCCC"> spire exposes</font>

526
00:21:41,260 --> 00:21:48,850
the spiffy<font color="#E5E5E5"> workload</font><font color="#CCCCCC"> API which can attest</font>

527
00:21:45,640 --> 00:21:51,460
running software<font color="#E5E5E5"> and issue spiffy IDs</font>

528
00:21:48,850 --> 00:21:53,679
and<font color="#E5E5E5"> s feeds</font><font color="#CCCCCC"> and SVD</font><font color="#E5E5E5"> is a spiffy</font>

529
00:21:51,460 --> 00:21:56,080
verifiable<font color="#E5E5E5"> ID documents and is the</font>

530
00:21:53,680 --> 00:21:58,470
foundation of<font color="#E5E5E5"> the identity that we then</font>

531
00:21:56,080 --> 00:22:00,909
used<font color="#E5E5E5"> to bootstrap our network encryption</font>

532
00:21:58,470 --> 00:22:03,070
this in<font color="#E5E5E5"> turn allows two workloads to</font>

533
00:22:00,910 --> 00:22:04,690
establish trust<font color="#E5E5E5"> between each other for</font>

534
00:22:03,070 --> 00:22:07,750
<font color="#CCCCCC">example by</font><font color="#E5E5E5"> establishing mutual TLS</font>

535
00:22:04,690 --> 00:22:10,420
connection<font color="#E5E5E5"> and we do this by attesting</font>

536
00:22:07,750 --> 00:22:12,790
<font color="#CCCCCC">to individual workloads this is an</font>

537
00:22:10,420 --> 00:22:15,820
example of<font color="#E5E5E5"> a spire a test of cuban asses</font>

538
00:22:12,790 --> 00:22:18,460
<font color="#CCCCCC">and attestation policy is describing the</font>

539
00:22:15,820 --> 00:22:21,189
properties<font color="#E5E5E5"> the workload must exhibit to</font>

540
00:22:18,460 --> 00:22:22,120
conform to<font color="#CCCCCC"> the policy and gain the</font>

541
00:22:21,190 --> 00:22:25,240
identity and<font color="#E5E5E5"> have a certificate</font>

542
00:22:22,120 --> 00:22:27,159
generated for them and it's typically a

543
00:22:25,240 --> 00:22:28,060
mixture<font color="#CCCCCC"> of process attributes so the</font>

544
00:22:27,160 --> 00:22:30,640
contents of<font color="#CCCCCC"> pids</font>

545
00:22:28,060 --> 00:22:33,340
<font color="#E5E5E5">proc sorry and infrastructure attributes</font>

546
00:22:30,640 --> 00:22:35,620
so<font color="#CCCCCC"> attesting to a vm on a cloud provider</font>

547
00:22:33,340 --> 00:22:40,480
<font color="#CCCCCC">you're using the metadata API to pull</font>

548
00:22:35,620 --> 00:22:43,030
back instance ID and type for<font color="#CCCCCC"> example so</font>

549
00:22:40,480 --> 00:22:45,240
spiffy is a standard for<font color="#E5E5E5"> how an</font>

550
00:22:43,030 --> 00:22:47,350
application<font color="#E5E5E5"> can retrieve an identity</font>

551
00:22:45,240 --> 00:22:49,750
programmatically<font color="#CCCCCC"> and importantly</font>

552
00:22:47,350 --> 00:22:52,120
generate short-lived credentials<font color="#E5E5E5"> on the</font>

553
00:22:49,750 --> 00:22:54,520
back of that<font color="#E5E5E5"> identity and just as</font>

554
00:22:52,120 --> 00:22:57,250
importantly the<font color="#E5E5E5"> API</font><font color="#CCCCCC"> allows workloads</font><font color="#E5E5E5"> to</font>

555
00:22:54,520 --> 00:22:59,430
retrieve a trust bundle which is the

556
00:22:57,250 --> 00:23:02,800
public keys<font color="#E5E5E5"> that can be used to verify</font>

557
00:22:59,430 --> 00:23:05,080
these<font color="#E5E5E5"> self signed keys so we're self</font>

558
00:23:02,800 --> 00:23:06,700
signing with a private CA<font color="#E5E5E5"> and we need to</font>

559
00:23:05,080 --> 00:23:09,280
<font color="#CCCCCC">generate we need to share</font><font color="#E5E5E5"> the public key</font>

560
00:23:06,700 --> 00:23:12,010
of<font color="#E5E5E5"> that CA so that workloads can</font>

561
00:23:09,280 --> 00:23:12,580
validate the TLS certificates that we

562
00:23:12,010 --> 00:23:14,710
have mint

563
00:23:12,580 --> 00:23:17,830
handed out to our cluster<font color="#E5E5E5"> there are</font>

564
00:23:14,710 --> 00:23:20,289
<font color="#E5E5E5">applications in cluster so this means</font>

565
00:23:17,830 --> 00:23:23,260
applications libraries and tools can

566
00:23:20,289 --> 00:23:26,408
retrieve sorry can retrieve credentials

567
00:23:23,260 --> 00:23:30,100
that automatically identify them without

568
00:23:26,409 --> 00:23:32,260
<font color="#E5E5E5">needing any</font><font color="#CCCCCC"> secrets Co deployed a spiffy</font>

569
00:23:30,100 --> 00:23:33,908
ID looks like this there is<font color="#CCCCCC"> a trust</font>

570
00:23:32,260 --> 00:23:35,440
domain which in<font color="#E5E5E5"> Cuba not easy to plus</font>

571
00:23:33,909 --> 00:23:39,010
the<font color="#CCCCCC"> name and</font><font color="#E5E5E5"> you have a workload</font>

572
00:23:35,440 --> 00:23:42,490
identifier<font color="#E5E5E5"> and it's encoded into an</font>

573
00:23:39,010 --> 00:23:44,919
x.509<font color="#CCCCCC"> just like we saw earlier</font><font color="#E5E5E5"> using</font><font color="#CCCCCC"> the</font>

574
00:23:42,490 --> 00:23:47,799
certificates extensions to encode

575
00:23:44,919 --> 00:23:52,539
further information here is a stiffness

576
00:23:47,799 --> 00:23:54,399
spec the<font color="#CCCCCC"> x.509 extensions here are what</font>

577
00:23:52,539 --> 00:23:55,960
are used by spiffy<font color="#E5E5E5"> how do we know that</font>

578
00:23:54,399 --> 00:23:58,000
<font color="#CCCCCC">we can</font><font color="#E5E5E5"> trust this we're back to</font>

579
00:23:55,960 --> 00:23:59,590
certificate<font color="#CCCCCC"> path</font><font color="#E5E5E5"> validation it's exactly</font>

580
00:23:58,000 --> 00:24:02,169
<font color="#E5E5E5">the same technology</font><font color="#CCCCCC"> used in a slightly</font>

581
00:23:59,590 --> 00:24:03,668
<font color="#E5E5E5">different manner</font><font color="#CCCCCC"> and we can see how</font>

582
00:24:02,169 --> 00:24:10,059
further selectors can be used to

583
00:24:03,669 --> 00:24:12,960
identify all sorts of workloads the

584
00:24:10,059 --> 00:24:15,370
<font color="#E5E5E5">workload and node</font><font color="#CCCCCC"> tester plugins here</font>

585
00:24:12,960 --> 00:24:16,840
bootstrap the identity process<font color="#E5E5E5"> and can</font>

586
00:24:15,370 --> 00:24:19,959
do so across<font color="#E5E5E5"> multiple different</font>

587
00:24:16,840 --> 00:24:22,330
deployment types while<font color="#E5E5E5"> SDO implements a</font>

588
00:24:19,960 --> 00:24:25,510
rudimentary<font color="#E5E5E5"> first cut version of spire</font>

589
00:24:22,330 --> 00:24:27,370
of spiffy I'm sorry<font color="#E5E5E5"> spire implements a</font>

590
00:24:25,510 --> 00:24:29,500
whole lot more<font color="#E5E5E5"> so this technology is</font>

591
00:24:27,370 --> 00:24:33,129
actively<font color="#E5E5E5"> being pursued outside of the</font>

592
00:24:29,500 --> 00:24:35,080
SGA projects it<font color="#E5E5E5"> is important to note</font>

593
00:24:33,130 --> 00:24:38,529
that spire and<font color="#CCCCCC"> twelve spiffy in</font>

594
00:24:35,080 --> 00:24:41,649
particular is not the<font color="#E5E5E5"> network encryption</font>

595
00:24:38,529 --> 00:24:43,750
itself<font color="#E5E5E5"> it provides the identity</font><font color="#CCCCCC"> onto</font>

596
00:24:41,649 --> 00:24:45,760
which<font color="#E5E5E5"> we can hang all our network</font>

597
00:24:43,750 --> 00:24:47,289
encryption and generate certificates<font color="#E5E5E5"> but</font>

598
00:24:45,760 --> 00:24:49,149
it does not have anything<font color="#CCCCCC"> in</font>

599
00:24:47,289 --> 00:24:50,919
specification that describes what the

600
00:24:49,149 --> 00:24:56,049
usage of the verifiable identity

601
00:24:50,919 --> 00:24:58,149
documents is for and very<font color="#E5E5E5"> simply it</font>

602
00:24:56,049 --> 00:25:00,309
looks like that we insert the spiffy ID

603
00:24:58,149 --> 00:25:03,428
into<font color="#E5E5E5"> the San this is the sto</font>

604
00:25:00,309 --> 00:25:05,408
implementation<font color="#E5E5E5"> envoy has the public</font><font color="#CCCCCC"> keys</font>

605
00:25:03,429 --> 00:25:05,799
of the certificate authority injected

606
00:25:05,409 --> 00:25:08,230
into it

607
00:25:05,799 --> 00:25:10,330
<font color="#E5E5E5">because sto is using its pilot component</font>

608
00:25:08,230 --> 00:25:13,200
to write those API changes<font color="#CCCCCC"> to one voice</font>

609
00:25:10,330 --> 00:25:16,990
<font color="#E5E5E5">API</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> API driven configuration and</font>

610
00:25:13,200 --> 00:25:19,710
<font color="#E5E5E5">such envoy is able to</font><font color="#CCCCCC"> verify the</font>

611
00:25:16,990 --> 00:25:22,210
<font color="#E5E5E5">authenticity of those</font><font color="#CCCCCC"> certificates</font><font color="#E5E5E5"> and</font>

612
00:25:19,710 --> 00:25:22,840
security tightening<font color="#E5E5E5"> will continue in</font>

613
00:25:22,210 --> 00:25:24,490
<font color="#E5E5E5">this project</font>

614
00:25:22,840 --> 00:25:26,310
<font color="#CCCCCC">SDO is</font><font color="#E5E5E5"> still nowhere near where</font>

615
00:25:24,490 --> 00:25:30,600
ultimately<font color="#CCCCCC"> its</font>

616
00:25:26,310 --> 00:25:32,790
<font color="#CCCCCC">suggests that it will be</font><font color="#E5E5E5"> so yes couple</font>

617
00:25:30,600 --> 00:25:35,610
<font color="#E5E5E5">more minor things the secure naming is</font>

618
00:25:32,790 --> 00:25:38,940
then used secure naming is extracting

619
00:25:35,610 --> 00:25:41,459
that<font color="#CCCCCC"> San and using it</font><font color="#E5E5E5"> as the basis for</font>

620
00:25:38,940 --> 00:25:44,160
routing decisions<font color="#CCCCCC"> so we then put on top</font>

621
00:25:41,460 --> 00:25:50,430
<font color="#E5E5E5">of that</font><font color="#CCCCCC"> our back at layer</font><font color="#E5E5E5"> seven so HTTP</font>

622
00:25:44,160 --> 00:25:51,360
verbage pods<font color="#E5E5E5"> and we can also and there's</font>

623
00:25:50,430 --> 00:25:54,090
something<font color="#CCCCCC"> else that</font><font color="#E5E5E5"> hangs off that that</font>

624
00:25:51,360 --> 00:26:00,629
escapes<font color="#CCCCCC"> through right now</font><font color="#E5E5E5"> and there's</font>

625
00:25:54,090 --> 00:26:03,689
plenty<font color="#CCCCCC"> more so recapping we have</font>

626
00:26:00,630 --> 00:26:06,000
end-to-end<font color="#E5E5E5"> encryption private mutually</font>

627
00:26:03,690 --> 00:26:09,630
trusted communications between the<font color="#CCCCCC"> API</font>

628
00:26:06,000 --> 00:26:11,610
server and kubernetes<font color="#E5E5E5"> and</font><font color="#CCCCCC"> its callers we</font>

629
00:26:09,630 --> 00:26:14,970
have<font color="#E5E5E5"> encryption in</font><font color="#CCCCCC"> Cuba Ness is equally</font>

630
00:26:11,610 --> 00:26:16,439
now<font color="#E5E5E5"> for the values in the</font><font color="#CCCCCC"> sed store</font>

631
00:26:14,970 --> 00:26:18,630
<font color="#E5E5E5">which we didn't used to have you must</font>

632
00:26:16,440 --> 00:26:23,010
turn on<font color="#CCCCCC"> EDD</font><font color="#E5E5E5"> encryption on</font><font color="#CCCCCC"> the API server</font>

633
00:26:18,630 --> 00:26:24,960
if you have the<font color="#E5E5E5"> chance and in stos case</font>

634
00:26:23,010 --> 00:26:28,610
we are actually minting certificates and

635
00:26:24,960 --> 00:26:31,740
<font color="#CCCCCC">handing them to envoy</font><font color="#E5E5E5"> control plane have</font>

636
00:26:28,610 --> 00:26:34,379
some threat modeling on sto and<font color="#E5E5E5"> on void</font>

637
00:26:31,740 --> 00:26:36,390
from a dev<font color="#CCCCCC"> sec</font><font color="#E5E5E5"> ops meet up in London</font>

638
00:26:34,380 --> 00:26:38,220
recently that you'll be able<font color="#E5E5E5"> to find</font><font color="#CCCCCC"> on</font>

639
00:26:36,390 --> 00:26:40,790
the Twitter stream eventually there<font color="#CCCCCC"> are</font>

640
00:26:38,220 --> 00:26:42,780
attacks on<font color="#E5E5E5"> envoy from compromised pods</font>

641
00:26:40,790 --> 00:26:45,300
if you want to talk more about that

642
00:26:42,780 --> 00:26:47,940
<font color="#CCCCCC">we've got lots of interesting stuff find</font>

643
00:26:45,300 --> 00:26:51,419
me afterwards so the<font color="#E5E5E5"> takeaway from this</font>

644
00:26:47,940 --> 00:26:53,340
<font color="#E5E5E5">is do encryption it's great encrypt</font>

645
00:26:51,420 --> 00:26:56,390
everything<font color="#CCCCCC"> and while you're there you</font>

646
00:26:53,340 --> 00:26:58,199
<font color="#CCCCCC">may as well</font><font color="#E5E5E5"> do it everywhere</font>

647
00:26:56,390 --> 00:26:59,400
incredibly I've managed<font color="#CCCCCC"> to</font><font color="#E5E5E5"> go fast</font>

648
00:26:58,200 --> 00:27:01,530
enough<font color="#CCCCCC"> the obligatory hiring</font>

649
00:26:59,400 --> 00:27:03,930
notification if you would like<font color="#E5E5E5"> to come</font>

650
00:27:01,530 --> 00:27:06,720
and<font color="#E5E5E5"> work in London</font><font color="#CCCCCC"> on difficult problems</font>

651
00:27:03,930 --> 00:27:09,180
to<font color="#E5E5E5"> do with network security application</font>

652
00:27:06,720 --> 00:27:11,790
<font color="#E5E5E5">security and the provenance of artifacts</font>

653
00:27:09,180 --> 00:27:14,720
<font color="#E5E5E5">and third-party code risk then we are a</font>

654
00:27:11,790 --> 00:27:17,610
very<font color="#E5E5E5"> nice team small team</font><font color="#CCCCCC"> of people and</font>

655
00:27:14,720 --> 00:27:18,510
we offer some<font color="#E5E5E5"> great benefits please hit</font>

656
00:27:17,610 --> 00:27:21,659
me<font color="#CCCCCC"> up afterwards</font>

657
00:27:18,510 --> 00:27:25,080
<font color="#E5E5E5">and any any title that you want</font><font color="#CCCCCC"> you can</font>

658
00:27:21,660 --> 00:27:27,510
more<font color="#CCCCCC"> or</font><font color="#E5E5E5"> less have so with that in</font>

659
00:27:25,080 --> 00:27:31,679
conclusion<font color="#E5E5E5"> network security is very</font>

660
00:27:27,510 --> 00:27:34,230
important<font color="#CCCCCC"> x.509 and TLS keep safe</font>

661
00:27:31,680 --> 00:27:35,520
<font color="#E5E5E5">network policies are mandatory</font><font color="#CCCCCC"> you</font>

662
00:27:34,230 --> 00:27:37,470
really must be running<font color="#E5E5E5"> them in your</font>

663
00:27:35,520 --> 00:27:38,610
kubernetes clusters otherwise you're

664
00:27:37,470 --> 00:27:42,330
allowing<font color="#CCCCCC"> roots or</font>

665
00:27:38,610 --> 00:27:43,770
the place<font color="#CCCCCC"> on that topic make sure you</font>

666
00:27:42,330 --> 00:27:46,860
also run something<font color="#E5E5E5"> to block off your</font>

667
00:27:43,770 --> 00:27:48,600
cloud metadata API is cloud<font color="#E5E5E5"> native</font>

668
00:27:46,860 --> 00:27:50,879
applications<font color="#E5E5E5"> have way</font><font color="#CCCCCC"> more opportunities</font>

669
00:27:48,600 --> 00:27:54,659
<font color="#CCCCCC">for securing them than previously</font><font color="#E5E5E5"> a</font>

670
00:27:50,880 --> 00:27:56,670
container is a per process granular<font color="#E5E5E5"> high</font>

671
00:27:54,660 --> 00:27:59,520
fidelity<font color="#CCCCCC"> hangar for us to put security</font>

672
00:27:56,670 --> 00:28:00,510
<font color="#E5E5E5">policies on we</font><font color="#CCCCCC"> can wrap security around</font>

673
00:27:59,520 --> 00:28:02,040
<font color="#E5E5E5">a single process</font>

674
00:28:00,510 --> 00:28:06,059
so although containers are fast and

675
00:28:02,040 --> 00:28:08,990
<font color="#E5E5E5">loose in some and from some angles</font><font color="#CCCCCC"> they</font>

676
00:28:06,059 --> 00:28:12,660
also offer a far greater opportunity to

677
00:28:08,990 --> 00:28:15,480
learn seccomp<font color="#CCCCCC"> its spiffy give you wings</font>

678
00:28:12,660 --> 00:28:17,150
and encrypt<font color="#CCCCCC"> everything everywhere</font><font color="#E5E5E5"> thank</font>

679
00:28:15,480 --> 00:28:22,339
you<font color="#CCCCCC"> very</font><font color="#E5E5E5"> much</font>

680
00:28:17,150 --> 00:28:22,339
[Applause]

681
00:28:23,870 --> 00:28:28,189
we can do one<font color="#E5E5E5"> question</font>

682
00:28:34,320 --> 00:28:40,710
so<font color="#E5E5E5"> thanks love using IP addresses as the</font>

683
00:28:37,650 --> 00:28:43,170
only<font color="#E5E5E5"> source of</font><font color="#CCCCCC"> identity firewalling</font><font color="#E5E5E5"> yeah</font>

684
00:28:40,710 --> 00:28:44,970
<font color="#E5E5E5">and</font><font color="#CCCCCC"> it'll be have you had any success</font>

685
00:28:43,170 --> 00:28:46,410
convincing people that<font color="#E5E5E5"> IP addresses are</font>

686
00:28:44,970 --> 00:28:49,590
not<font color="#E5E5E5"> particularly good identity or is</font>

687
00:28:46,410 --> 00:28:51,060
<font color="#E5E5E5">that mindset</font><font color="#CCCCCC"> yeah so this has wrapped up</font>

688
00:28:49,590 --> 00:28:53,610
in the whole break from the traditional

689
00:28:51,060 --> 00:28:55,800
<font color="#CCCCCC">enterprise mindset it's difficult</font><font color="#E5E5E5"> the</font>

690
00:28:53,610 --> 00:28:58,469
way this works best for<font color="#E5E5E5"> us is an</font>

691
00:28:55,800 --> 00:29:00,030
<font color="#E5E5E5">enlightened VP will say our developers</font>

692
00:28:58,470 --> 00:29:02,040
have deployed loads of deployed loads of

693
00:29:00,030 --> 00:29:06,210
communities<font color="#E5E5E5"> what do we do how do we fix</font>

694
00:29:02,040 --> 00:29:07,740
this<font color="#CCCCCC"> it's still the the audit</font>

695
00:29:06,210 --> 00:29:10,710
requirements<font color="#CCCCCC"> and change control required</font>

696
00:29:07,740 --> 00:29:12,660
to get changes for<font color="#E5E5E5"> peering requests or</font>

697
00:29:10,710 --> 00:29:15,570
subnet allocations<font color="#E5E5E5"> it's still super</font>

698
00:29:12,660 --> 00:29:17,300
super<font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> so much success</font><font color="#CCCCCC"> no but</font>

699
00:29:15,570 --> 00:29:19,740
the beginnings of changing the mentality

700
00:29:17,300 --> 00:29:22,620
<font color="#E5E5E5">absolutely there's one further problem</font>

701
00:29:19,740 --> 00:29:24,570
that if<font color="#CCCCCC"> people have any interest in</font><font color="#E5E5E5"> this</font>

702
00:29:22,620 --> 00:29:26,610
spiffy<font color="#E5E5E5"> are currently looked at while</font>

703
00:29:24,570 --> 00:29:28,620
Scytale are currently<font color="#CCCCCC"> looking</font><font color="#E5E5E5"> how to</font>

704
00:29:26,610 --> 00:29:31,500
solve federated<font color="#E5E5E5"> trust domains because</font>

705
00:29:28,620 --> 00:29:34,169
TLS libraries do<font color="#CCCCCC"> not check the federated</font>

706
00:29:31,500 --> 00:29:37,590
aspect of some of the extensions<font color="#E5E5E5"> to</font>

707
00:29:34,170 --> 00:29:39,090
<font color="#CCCCCC">x.509 well at all which means</font><font color="#E5E5E5"> ideally</font>

708
00:29:37,590 --> 00:29:42,600
for<font color="#E5E5E5"> a banking scenario you would have</font>

709
00:29:39,090 --> 00:29:45,419
<font color="#E5E5E5">multiple kubernetes or sto or whatever</font>

710
00:29:42,600 --> 00:29:47,340
just TLS<font color="#CCCCCC"> trust domains</font><font color="#E5E5E5"> that's are able</font>

711
00:29:45,420 --> 00:29:51,270
to<font color="#E5E5E5"> verify each other without being able</font>

712
00:29:47,340 --> 00:29:53,370
to cross cross generates<font color="#E5E5E5"> each other</font>

713
00:29:51,270 --> 00:29:55,889
certificates<font color="#CCCCCC"> like an obvious requirement</font>

714
00:29:53,370 --> 00:29:59,280
<font color="#E5E5E5">however it's not as easy as</font><font color="#CCCCCC"> that and</font><font color="#E5E5E5"> the</font>

715
00:29:55,890 --> 00:30:01,830
<font color="#CCCCCC">project's very much looking</font><font color="#E5E5E5"> for help so</font>

716
00:29:59,280 --> 00:30:05,370
if Federation of<font color="#CCCCCC"> Trust domains</font><font color="#E5E5E5"> works</font>

717
00:30:01,830 --> 00:30:08,250
<font color="#E5E5E5">then ultimately we can say issuing IP is</font>

718
00:30:05,370 --> 00:30:10,379
entirely like we do in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> CNI</font><font color="#E5E5E5"> can be</font>

719
00:30:08,250 --> 00:30:14,340
done on a wider infrastructure level

720
00:30:10,380 --> 00:30:15,290
<font color="#E5E5E5">because we're less</font><font color="#CCCCCC"> seven everywhere</font><font color="#E5E5E5"> more</font>

721
00:30:14,340 --> 00:30:17,980
<font color="#E5E5E5">help is needed</font>

722
00:30:15,290 --> 00:30:26,710
<font color="#CCCCCC">good question they thank you thank you</font>

723
00:30:17,980 --> 00:30:26,710
[Applause]

