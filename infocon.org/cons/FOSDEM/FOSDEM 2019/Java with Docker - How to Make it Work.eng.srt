1
00:00:04,620 --> 00:00:12,759
<font color="#CCCCCC">okay good stuff alright</font><font color="#E5E5E5"> um</font><font color="#CCCCCC"> hello</font>

2
00:00:10,260 --> 00:00:15,009
everyone and

3
00:00:12,759 --> 00:00:17,830
<font color="#E5E5E5">to my</font><font color="#CCCCCC"> presentation</font><font color="#E5E5E5"> I'm going to be</font>

4
00:00:15,009 --> 00:00:19,359
talking my<font color="#CCCCCC"> name</font><font color="#E5E5E5"> is Adam filing and I'm</font>

5
00:00:17,830 --> 00:00:21,639
going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> talking to you about Java</font>

6
00:00:19,359 --> 00:00:24,099
and containers<font color="#E5E5E5"> I imagine many of you</font>

7
00:00:21,640 --> 00:00:26,770
have had that<font color="#E5E5E5"> pleasure trying to run big</font>

8
00:00:24,099 --> 00:00:30,519
old<font color="#E5E5E5"> Java in a</font><font color="#CCCCCC"> EAD between living space</font>

9
00:00:26,770 --> 00:00:32,140
<font color="#E5E5E5">and hopefully will be</font><font color="#CCCCCC"> able to undo some</font>

10
00:00:30,519 --> 00:00:34,500
of<font color="#E5E5E5"> those headaches for you now or at</font>

11
00:00:32,140 --> 00:00:40,660
least enumerate some<font color="#CCCCCC"> of them for you</font>

12
00:00:34,500 --> 00:00:43,750
<font color="#CCCCCC">first</font><font color="#E5E5E5"> of all</font><font color="#CCCCCC"> who am</font><font color="#E5E5E5"> I could I speak a</font>

13
00:00:40,660 --> 00:00:54,250
<font color="#E5E5E5">little bit louder okay does this</font><font color="#CCCCCC"> thing</font>

14
00:00:43,750 --> 00:01:00,090
have a volume<font color="#E5E5E5"> control</font><font color="#CCCCCC"> or okay how's that</font>

15
00:00:54,250 --> 00:01:00,090
any better can you<font color="#E5E5E5"> hear that at the back</font>

16
00:01:03,030 --> 00:01:11,560
yeah well<font color="#E5E5E5"> how</font><font color="#CCCCCC"> about I just call Tim you</font>

17
00:01:06,310 --> 00:01:14,289
can just repeat what I'm saying anyway

18
00:01:11,560 --> 00:01:16,990
<font color="#CCCCCC">my name is Adam Farley I'm an</font><font color="#E5E5E5"> open</font>

19
00:01:14,289 --> 00:01:18,520
source developer I work at IBM<font color="#CCCCCC"> it seems</font>

20
00:01:16,990 --> 00:01:19,958
a<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> of a contradiction in terms but we</font>

21
00:01:18,520 --> 00:01:23,050
do a<font color="#E5E5E5"> lot of work in the</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> source</font>

22
00:01:19,959 --> 00:01:25,479
communities<font color="#CCCCCC"> my focus areas are on the</font>

23
00:01:23,050 --> 00:01:28,569
open JDK community<font color="#CCCCCC"> I've been checking in</font>

24
00:01:25,479 --> 00:01:33,310
a lot<font color="#E5E5E5"> of fixes which some</font><font color="#CCCCCC"> of you may be</font>

25
00:01:28,569 --> 00:01:34,899
<font color="#E5E5E5">aware and adopt open JDK is another open</font>

26
00:01:33,310 --> 00:01:37,420
<font color="#CCCCCC">source</font><font color="#E5E5E5"> community that I contribute to</font>

27
00:01:34,899 --> 00:01:39,670
<font color="#E5E5E5">and that's the the community that</font>

28
00:01:37,420 --> 00:01:41,500
generates<font color="#E5E5E5"> some open JDK binaries</font><font color="#CCCCCC"> that</font>

29
00:01:39,670 --> 00:01:42,700
people can download<font color="#E5E5E5"> and</font><font color="#CCCCCC"> use across</font><font color="#E5E5E5"> a lot</font>

30
00:01:41,500 --> 00:01:44,679
<font color="#CCCCCC">of</font><font color="#E5E5E5"> different platforms</font><font color="#CCCCCC"> a lot of</font>

31
00:01:42,700 --> 00:01:48,220
different Java versions<font color="#E5E5E5"> do a lot of good</font>

32
00:01:44,679 --> 00:01:50,470
<font color="#E5E5E5">work there and one thing which</font><font color="#CCCCCC"> you</font>

33
00:01:48,220 --> 00:01:52,270
should know<font color="#E5E5E5"> about me which always comes</font>

34
00:01:50,470 --> 00:01:53,470
<font color="#E5E5E5">up and yet it's not my slide is that</font>

35
00:01:52,270 --> 00:01:55,300
<font color="#E5E5E5">they have a habit of booking my</font>

36
00:01:53,470 --> 00:01:58,149
presentations<font color="#E5E5E5"> for in the middle of lunch</font>

37
00:01:55,300 --> 00:02:04,270
<font color="#E5E5E5">and anticipating that</font><font color="#CCCCCC"> would be the</font><font color="#E5E5E5"> case</font>

38
00:01:58,149 --> 00:02:09,280
I brought jelly babies you could crack

39
00:02:04,270 --> 00:02:10,929
that<font color="#CCCCCC"> open pass it along</font><font color="#E5E5E5"> them back so</font>

40
00:02:09,280 --> 00:02:17,730
some facets all sorts if you're more<font color="#E5E5E5"> of</font>

41
00:02:10,929 --> 00:02:20,080
a licorice person you could thank you

42
00:02:17,730 --> 00:02:21,369
<font color="#CCCCCC">should keep you going until you</font><font color="#E5E5E5"> find</font>

43
00:02:20,080 --> 00:02:26,650
time<font color="#E5E5E5"> to sneak out and pinch</font><font color="#CCCCCC"> your</font>

44
00:02:21,370 --> 00:02:33,159
sandwich so the plan the plan today<font color="#CCCCCC"> is</font>

45
00:02:26,650 --> 00:02:34,510
to<font color="#E5E5E5"> define the software's that we're</font>

46
00:02:33,159 --> 00:02:36,969
going<font color="#E5E5E5"> to be discussing so I'm going to</font>

47
00:02:34,510 --> 00:02:39,429
be<font color="#CCCCCC"> discussed detailing the bits of Java</font>

48
00:02:36,969 --> 00:02:41,108
in<font color="#CCCCCC"> the bits of containers you're</font><font color="#E5E5E5"> going</font>

49
00:02:39,430 --> 00:02:43,299
to need to understand in order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> follow</font>

50
00:02:41,109 --> 00:02:44,650
<font color="#E5E5E5">the rest of the presentation we're</font><font color="#CCCCCC"> going</font>

51
00:02:43,299 --> 00:02:45,760
<font color="#E5E5E5">to be talking</font><font color="#CCCCCC"> about what</font><font color="#E5E5E5"> happens when</font>

52
00:02:44,650 --> 00:02:49,060
<font color="#E5E5E5">you bring these two technologies</font>

53
00:02:45,760 --> 00:02:52,719
<font color="#E5E5E5">together the clash the problems that</font>

54
00:02:49,060 --> 00:02:54,819
<font color="#E5E5E5">occur resolutions that you can use to</font>

55
00:02:52,719 --> 00:02:56,379
resolve<font color="#E5E5E5"> these</font><font color="#CCCCCC"> problems and then a</font>

56
00:02:54,819 --> 00:02:58,780
breakdown of each of the different

57
00:02:56,379 --> 00:03:00,518
<font color="#CCCCCC">solutions step-by-step and we've also</font>

58
00:02:58,780 --> 00:03:02,499
got<font color="#CCCCCC"> some commands</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can use to make</font>

59
00:03:00,519 --> 00:03:06,239
<font color="#E5E5E5">things easier on you but I can detail</font>

60
00:03:02,499 --> 00:03:06,239
later on<font color="#E5E5E5"> if anyone's got any questions</font>

61
00:03:06,420 --> 00:03:15,129
so first of all<font color="#E5E5E5"> Java you probably know</font>

62
00:03:11,530 --> 00:03:17,230
<font color="#E5E5E5">this I honestly didn't know the kind of</font>

63
00:03:15,129 --> 00:03:18,999
crowd<font color="#E5E5E5"> that we'd be angling at so I just</font>

64
00:03:17,230 --> 00:03:21,399
<font color="#E5E5E5">made</font><font color="#CCCCCC"> sure to</font><font color="#E5E5E5"> start from the basics</font><font color="#CCCCCC"> it's</font>

65
00:03:18,999 --> 00:03:24,069
both a programming language<font color="#CCCCCC"> and it's an</font>

66
00:03:21,400 --> 00:03:28,319
executable<font color="#E5E5E5"> the executable can be run</font>

67
00:03:24,069 --> 00:03:32,048
used to run<font color="#CCCCCC"> java code compiled Java code</font>

68
00:03:28,319 --> 00:03:34,179
how is<font color="#E5E5E5"> it structured the executable is</font>

69
00:03:32,049 --> 00:03:36,609
often packaged with many other tools<font color="#E5E5E5"> and</font>

70
00:03:34,180 --> 00:03:40,029
it's<font color="#E5E5E5"> located inside a</font><font color="#CCCCCC"> package called the</font>

71
00:03:36,609 --> 00:03:41,739
<font color="#E5E5E5">JDK and so you've got the Java Runtime</font>

72
00:03:40,029 --> 00:03:44,200
environment which<font color="#E5E5E5"> used to execute code</font>

73
00:03:41,739 --> 00:03:46,060
<font color="#E5E5E5">you've got the compiler which you use to</font>

74
00:03:44,200 --> 00:03:48,849
build code into byte codes

75
00:03:46,060 --> 00:03:51,579
you've got<font color="#CCCCCC"> J shell you've got which can</font>

76
00:03:48,849 --> 00:03:52,629
be use<font color="#CCCCCC"> to run individual bits of Java</font>

77
00:03:51,579 --> 00:03:55,090
code<font color="#CCCCCC"> piece by piece</font>

78
00:03:52,629 --> 00:03:57,219
you've got J link<font color="#CCCCCC"> we're going to be</font>

79
00:03:55,090 --> 00:03:58,359
<font color="#CCCCCC">going into</font><font color="#E5E5E5"> a few of those later and the</font>

80
00:03:57,219 --> 00:04:02,680
point is there's a<font color="#E5E5E5"> lot of different</font>

81
00:03:58,359 --> 00:04:06,269
tools inside the<font color="#CCCCCC"> jdk Java also</font><font color="#E5E5E5"> includes</font>

82
00:04:02,680 --> 00:04:08,049
<font color="#E5E5E5">a large class library you may be aware</font>

83
00:04:06,269 --> 00:04:09,669
<font color="#CCCCCC">functionality has been grouped into a</font>

84
00:04:08,049 --> 00:04:11,439
structure<font color="#E5E5E5"> I was going to have a little</font>

85
00:04:09,669 --> 00:04:11,760
ditty on modules but I think you've

86
00:04:11,439 --> 00:04:13,799
heard

87
00:04:11,760 --> 00:04:17,219
enough about<font color="#E5E5E5"> how modules work and I</font>

88
00:04:13,799 --> 00:04:18,660
think<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> move on</font><font color="#CCCCCC"> with that and where</font>

89
00:04:17,220 --> 00:04:20,549
can<font color="#E5E5E5"> a code be found the code for the</font>

90
00:04:18,660 --> 00:04:24,180
entire<font color="#E5E5E5"> JDK can be found</font><font color="#CCCCCC"> at the open</font>

91
00:04:20,548 --> 00:04:27,780
source<font color="#CCCCCC"> open</font><font color="#E5E5E5"> JDK project</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> you then</font>

92
00:04:24,180 --> 00:04:31,800
build to produce<font color="#E5E5E5"> open JDK binaries which</font>

93
00:04:27,780 --> 00:04:33,960
then get<font color="#CCCCCC"> jck certified if you have an</font>

94
00:04:31,800 --> 00:04:38,460
agreement<font color="#E5E5E5"> with Oracle and then the</font>

95
00:04:33,960 --> 00:04:39,719
resultant<font color="#CCCCCC"> java's can be located at</font>

96
00:04:38,460 --> 00:04:42,060
anywhere that<font color="#E5E5E5"> has that kind</font><font color="#CCCCCC"> of agreement</font>

97
00:04:39,720 --> 00:04:47,130
<font color="#E5E5E5">so word Java comm and there are other</font>

98
00:04:42,060 --> 00:04:49,169
groups<font color="#E5E5E5"> as well okay now</font><font color="#CCCCCC"> on to containers</font>

99
00:04:47,130 --> 00:04:51,270
what are containers well first of all

100
00:04:49,169 --> 00:04:56,430
hands up who who doesn't<font color="#E5E5E5"> know what a</font>

101
00:04:51,270 --> 00:04:57,930
container is yes excellent<font color="#CCCCCC"> because I'm</font>

102
00:04:56,430 --> 00:05:01,080
starting from the ground<font color="#CCCCCC"> up here and I</font>

103
00:04:57,930 --> 00:05:02,270
wanted to make<font color="#CCCCCC"> sure my efforts</font><font color="#E5E5E5"> were not</font>

104
00:05:01,080 --> 00:05:07,289
<font color="#E5E5E5">in vain</font>

105
00:05:02,270 --> 00:05:09,690
what is a container a container is it's

106
00:05:07,289 --> 00:05:11,099
not<font color="#E5E5E5"> a lightweight VM but if I call it a</font>

107
00:05:09,690 --> 00:05:14,610
lightweight the end and I'm only<font color="#E5E5E5"> wrong</font>

108
00:05:11,100 --> 00:05:17,910
in ways that<font color="#E5E5E5"> don't matter and what it is</font>

109
00:05:14,610 --> 00:05:19,590
is the<font color="#E5E5E5"> illusion of a lightweight VM</font><font color="#CCCCCC"> it's</font>

110
00:05:17,910 --> 00:05:21,449
a group of<font color="#CCCCCC"> processes on your computer</font>

111
00:05:19,590 --> 00:05:24,510
<font color="#CCCCCC">that are corralled and</font><font color="#E5E5E5"> surrounded</font><font color="#CCCCCC"> by</font>

112
00:05:21,449 --> 00:05:26,010
little bits and<font color="#E5E5E5"> pieces</font><font color="#CCCCCC"> that give you</font><font color="#E5E5E5"> the</font>

113
00:05:24,510 --> 00:05:32,880
impression<font color="#E5E5E5"> that you're working in your</font>

114
00:05:26,010 --> 00:05:35,460
<font color="#CCCCCC">own little machine</font><font color="#E5E5E5"> there are some</font>

115
00:05:32,880 --> 00:05:37,680
different container services the most

116
00:05:35,460 --> 00:05:39,000
<font color="#E5E5E5">common one I believe is docker</font><font color="#CCCCCC"> which is</font>

117
00:05:37,680 --> 00:05:42,150
the one we're going to<font color="#E5E5E5"> be focusing on</font>

118
00:05:39,000 --> 00:05:43,919
<font color="#E5E5E5">today</font><font color="#CCCCCC"> you may</font><font color="#E5E5E5"> have noticed the blue</font>

119
00:05:42,150 --> 00:05:46,080
whale<font color="#E5E5E5"> and some of the earlier</font>

120
00:05:43,919 --> 00:05:49,198
presentations but I<font color="#E5E5E5"> wasn't quite sure</font>

121
00:05:46,080 --> 00:05:51,000
about<font color="#E5E5E5"> using their logo so instead we've</font>

122
00:05:49,199 --> 00:05:55,229
got<font color="#E5E5E5"> a nice little picture of a docker a</font>

123
00:05:51,000 --> 00:05:57,210
docking port<font color="#CCCCCC"> what you do with these</font>

124
00:05:55,229 --> 00:05:59,039
lightweight<font color="#E5E5E5"> VMs the point is that you're</font>

125
00:05:57,210 --> 00:06:01,979
supposed<font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to spin up lots of</font>

126
00:05:59,039 --> 00:06:03,900
them on the fly in parallel<font color="#E5E5E5"> so if you</font>

127
00:06:01,979 --> 00:06:07,229
want<font color="#E5E5E5"> to create several</font><font color="#CCCCCC"> different</font>

128
00:06:03,900 --> 00:06:09,090
concurrent VMs<font color="#CCCCCC"> to</font><font color="#E5E5E5"> toss</font><font color="#CCCCCC"> to test lots of</font>

129
00:06:07,229 --> 00:06:12,719
different<font color="#CCCCCC"> variations on an operating</font>

130
00:06:09,090 --> 00:06:16,109
system<font color="#E5E5E5"> or maybe you want to create</font><font color="#CCCCCC"> a</font>

131
00:06:12,720 --> 00:06:18,539
different<font color="#E5E5E5"> virtual machine for each stage</font>

132
00:06:16,110 --> 00:06:22,830
during<font color="#E5E5E5"> your pipeline or maybe you</font><font color="#CCCCCC"> just</font>

133
00:06:18,539 --> 00:06:24,840
want to have a fresh environment<font color="#E5E5E5"> rapidly</font>

134
00:06:22,830 --> 00:06:26,818
to do your<font color="#CCCCCC"> development in so maybe</font><font color="#E5E5E5"> you</font>

135
00:06:24,840 --> 00:06:30,000
require<font color="#E5E5E5"> specific set of dependencies</font><font color="#CCCCCC"> you</font>

136
00:06:26,819 --> 00:06:31,500
<font color="#E5E5E5">require specific folder</font><font color="#CCCCCC"> setup and you</font>

137
00:06:30,000 --> 00:06:34,139
want to be<font color="#CCCCCC"> able to just trash everything</font>

138
00:06:31,500 --> 00:06:36,840
<font color="#E5E5E5">you've done so far every the mess you've</font>

139
00:06:34,139 --> 00:06:39,449
made<font color="#E5E5E5"> and then have something you know</font>

140
00:06:36,840 --> 00:06:42,719
<font color="#CCCCCC">brand-new virgin</font><font color="#E5E5E5"> territory you can step</font>

141
00:06:39,449 --> 00:06:46,979
into<font color="#CCCCCC"> and make a brand new mess the</font>

142
00:06:42,720 --> 00:06:49,080
structure fire<font color="#E5E5E5"> the structure each docker</font>

143
00:06:46,979 --> 00:06:50,818
container is its own little<font color="#CCCCCC"> world which</font>

144
00:06:49,080 --> 00:06:53,370
we've<font color="#CCCCCC"> just discussed</font><font color="#E5E5E5"> and these things</font>

145
00:06:50,819 --> 00:06:56,849
<font color="#E5E5E5">are generated by things called docker</font>

146
00:06:53,370 --> 00:06:58,259
files it's a simple docker command you

147
00:06:56,849 --> 00:07:00,628
say docker go look at the stock file

148
00:06:58,259 --> 00:07:05,009
make me a container<font color="#CCCCCC"> of</font><font color="#E5E5E5"> spin one up for</font>

149
00:07:00,629 --> 00:07:06,690
you you've got coordinating agents<font color="#E5E5E5"> so</font>

150
00:07:05,009 --> 00:07:08,370
you don't need to worry<font color="#CCCCCC"> about putting</font>

151
00:07:06,690 --> 00:07:11,099
<font color="#E5E5E5">together these massive structures of</font>

152
00:07:08,370 --> 00:07:13,289
containers yourselves you can just rely

153
00:07:11,099 --> 00:07:15,120
on a pre-existing<font color="#E5E5E5"> agents such as</font><font color="#CCCCCC"> cuba</font>

154
00:07:13,289 --> 00:07:17,159
Nettie's you can use helm for<font color="#E5E5E5"> this</font>

155
00:07:15,120 --> 00:07:18,930
purpose<font color="#E5E5E5"> and you basically just push the</font>

156
00:07:17,159 --> 00:07:21,210
right buttons and it<font color="#E5E5E5"> spins up an entire</font>

157
00:07:18,930 --> 00:07:24,690
array of containers that that do what

158
00:07:21,210 --> 00:07:26,370
you want<font color="#E5E5E5"> or close</font><font color="#CCCCCC"> enough</font><font color="#E5E5E5"> and where to</font>

159
00:07:24,690 --> 00:07:28,259
get them<font color="#E5E5E5"> well I know I usually</font><font color="#CCCCCC"> get them</font>

160
00:07:26,370 --> 00:07:32,789
very<font color="#E5E5E5"> simple apt-get I imagine as a</font>

161
00:07:28,259 --> 00:07:35,419
<font color="#E5E5E5">website somewhere okay Chavez and</font>

162
00:07:32,789 --> 00:07:37,800
containers<font color="#CCCCCC"> when you put the two together</font>

163
00:07:35,419 --> 00:07:40,229
<font color="#E5E5E5">why you'd want</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> this first of all</font>

164
00:07:37,800 --> 00:07:42,389
<font color="#E5E5E5">isolation</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the ability</font><font color="#CCCCCC"> to spin</font><font color="#E5E5E5"> up</font>

165
00:07:40,229 --> 00:07:44,190
lots of<font color="#E5E5E5"> different</font><font color="#CCCCCC"> Java processes on</font><font color="#E5E5E5"> the</font>

166
00:07:42,389 --> 00:07:45,419
same machine<font color="#E5E5E5"> without worrying</font><font color="#CCCCCC"> that</font>

167
00:07:44,190 --> 00:07:50,430
they're going to<font color="#E5E5E5"> interfere</font><font color="#CCCCCC"> with each</font>

168
00:07:45,419 --> 00:07:53,430
other<font color="#CCCCCC"> speed you've got the ability</font><font color="#E5E5E5"> to</font>

169
00:07:50,430 --> 00:07:55,529
spin up and destroy as I mentioned a lot

170
00:07:53,430 --> 00:07:57,330
<font color="#CCCCCC">of predefined environments you spin this</font>

171
00:07:55,529 --> 00:07:58,889
<font color="#CCCCCC">thing out fin it's brand-new</font><font color="#E5E5E5"> you've got</font>

172
00:07:57,330 --> 00:08:00,180
all the dependencies<font color="#E5E5E5"> you go all the</font>

173
00:07:58,889 --> 00:08:01,680
structures you<font color="#E5E5E5"> need and everything is</font>

174
00:08:00,180 --> 00:08:05,310
there<font color="#CCCCCC"> and ready for</font><font color="#E5E5E5"> you to start</font><font color="#CCCCCC"> doing</font>

175
00:08:01,680 --> 00:08:07,229
<font color="#CCCCCC">what you're doing and it's supposed to</font>

176
00:08:05,310 --> 00:08:11,759
<font color="#E5E5E5">be easy once you've created the the</font>

177
00:08:07,229 --> 00:08:14,128
container and the<font color="#E5E5E5"> pipeline you</font><font color="#CCCCCC"> can</font>

178
00:08:11,759 --> 00:08:17,060
combine these two<font color="#E5E5E5"> concepts isolation and</font>

179
00:08:14,129 --> 00:08:20,699
speed to<font color="#CCCCCC"> create a</font><font color="#E5E5E5"> string of different</font>

180
00:08:17,060 --> 00:08:23,219
<font color="#E5E5E5">VMs you can have one environment for</font>

181
00:08:20,699 --> 00:08:25,610
development<font color="#CCCCCC"> one</font><font color="#E5E5E5"> environment for building</font>

182
00:08:23,219 --> 00:08:27,569
one<font color="#E5E5E5"> environment for testing one of</font><font color="#CCCCCC"> them</font>

183
00:08:25,610 --> 00:08:31,649
<font color="#CCCCCC">prototyping deployment that sort of</font>

184
00:08:27,569 --> 00:08:34,919
thing now this all sounds<font color="#CCCCCC"> great if a</font>

185
00:08:31,649 --> 00:08:38,200
little complicated to<font color="#E5E5E5"> set up sometimes</font>

186
00:08:34,919 --> 00:08:40,478
so what's the downsides<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> combine</font>

187
00:08:38,200 --> 00:08:43,750
<font color="#CCCCCC">Java in containers while</font><font color="#E5E5E5"> the downsides</font>

188
00:08:40,479 --> 00:08:45,910
is<font color="#E5E5E5"> size you may not be</font><font color="#CCCCCC"> aware of</font><font color="#E5E5E5"> this but</font>

189
00:08:43,750 --> 00:08:50,610
<font color="#E5E5E5">the JDK is several hundred megabytes in</font>

190
00:08:45,910 --> 00:08:52,930
size<font color="#CCCCCC"> actually is 292</font><font color="#E5E5E5"> because I counted</font>

191
00:08:50,610 --> 00:08:54,700
<font color="#CCCCCC">if you've ever had</font><font color="#E5E5E5"> to download this</font>

192
00:08:52,930 --> 00:08:56,079
thing<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> over a slow internet</font>

193
00:08:54,700 --> 00:08:59,440
connection you'll definitely know<font color="#CCCCCC"> that</font>

194
00:08:56,080 --> 00:09:00,970
the<font color="#E5E5E5"> JDK is not small</font><font color="#CCCCCC"> so sticking</font><font color="#E5E5E5"> it into</font>

195
00:08:59,440 --> 00:09:03,160
<font color="#CCCCCC">something</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> supposed to be</font><font color="#E5E5E5"> tiny and</font>

196
00:09:00,970 --> 00:09:09,100
lightweight<font color="#E5E5E5"> it's it's a bit of a</font>

197
00:09:03,160 --> 00:09:10,540
mismatch<font color="#CCCCCC"> so you've got awareness the JDK</font>

198
00:09:09,100 --> 00:09:12,670
in fact awareness is something<font color="#CCCCCC"> we're</font>

199
00:09:10,540 --> 00:09:19,569
going<font color="#E5E5E5"> to be covering</font><font color="#CCCCCC"> in detail as we go</font>

200
00:09:12,670 --> 00:09:23,170
<font color="#CCCCCC">along</font><font color="#E5E5E5"> the JDK at least up</font><font color="#CCCCCC"> until a year</font>

201
00:09:19,570 --> 00:09:27,160
<font color="#CCCCCC">or so ago</font><font color="#E5E5E5"> for open j9 and I think</font><font color="#CCCCCC"> is</font>

202
00:09:23,170 --> 00:09:30,699
<font color="#E5E5E5">still the case with hotspot JDK doesn't</font>

203
00:09:27,160 --> 00:09:32,829
know that it's running<font color="#E5E5E5"> in a container so</font>

204
00:09:30,700 --> 00:09:33,910
if you say<font color="#E5E5E5"> to the container</font><font color="#CCCCCC"> I want you</font>

205
00:09:32,830 --> 00:09:36,970
to create an<font color="#CCCCCC"> environment that has</font>

206
00:09:33,910 --> 00:09:39,069
restricted<font color="#CCCCCC"> resources and memory CPU that</font>

207
00:09:36,970 --> 00:09:41,440
sort of thing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Java you're running</font>

208
00:09:39,070 --> 00:09:43,840
inside there doesn't necessarily<font color="#CCCCCC"> know</font>

209
00:09:41,440 --> 00:09:45,250
<font color="#CCCCCC">that that's the</font><font color="#E5E5E5"> case so</font><font color="#CCCCCC"> it goes on it</font>

210
00:09:43,840 --> 00:09:47,020
tries to do its business believing that

211
00:09:45,250 --> 00:09:49,540
it has much more<font color="#E5E5E5"> resources at its</font>

212
00:09:47,020 --> 00:09:52,199
disposal that it actually has and as a

213
00:09:49,540 --> 00:09:58,209
result it can<font color="#E5E5E5"> run into a number</font><font color="#CCCCCC"> of walls</font>

214
00:09:52,200 --> 00:10:01,060
<font color="#CCCCCC">and</font><font color="#E5E5E5"> start up the</font><font color="#CCCCCC"> JDK isn't what I would</font>

215
00:09:58,210 --> 00:10:03,340
call slow to<font color="#CCCCCC"> startup but relatively</font>

216
00:10:01,060 --> 00:10:06,130
<font color="#E5E5E5">speaking</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> are ways of making it</font>

217
00:10:03,340 --> 00:10:09,940
faster<font color="#CCCCCC"> and if you're using containers</font><font color="#E5E5E5"> as</font>

218
00:10:06,130 --> 00:10:12,670
a sort of small disposable<font color="#CCCCCC"> single-use</font>

219
00:10:09,940 --> 00:10:14,050
<font color="#E5E5E5">single purpose process that you just</font>

220
00:10:12,670 --> 00:10:15,520
want<font color="#CCCCCC"> to spin this thing</font><font color="#E5E5E5"> up have it do</font>

221
00:10:14,050 --> 00:10:17,699
its thing and<font color="#E5E5E5"> then shut</font><font color="#CCCCCC"> down many</font><font color="#E5E5E5"> times</font>

222
00:10:15,520 --> 00:10:22,569
<font color="#CCCCCC">rapidly in succession</font><font color="#E5E5E5"> or concurrently</font>

223
00:10:17,700 --> 00:10:25,240
<font color="#CCCCCC">then</font><font color="#E5E5E5"> startup time becomes startups and</font>

224
00:10:22,570 --> 00:10:29,590
becomes a<font color="#E5E5E5"> serious concern so you want to</font>

225
00:10:25,240 --> 00:10:32,550
<font color="#CCCCCC">minimize that as much as</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> the</font>

226
00:10:29,590 --> 00:10:34,840
response to some<font color="#E5E5E5"> of these problems</font><font color="#CCCCCC"> I</font>

227
00:10:32,550 --> 00:10:36,550
recommend you<font color="#E5E5E5"> should change the Java</font>

228
00:10:34,840 --> 00:10:39,910
process<font color="#E5E5E5"> rather than trying to</font><font color="#CCCCCC"> change the</font>

229
00:10:36,550 --> 00:10:41,800
container<font color="#E5E5E5"> why because if you change the</font>

230
00:10:39,910 --> 00:10:43,350
container to fit Java<font color="#E5E5E5"> and it can</font><font color="#CCCCCC"> negate</font>

231
00:10:41,800 --> 00:10:46,859
some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the strengths</font>

232
00:10:43,350 --> 00:10:49,320
<font color="#E5E5E5">the container itself so if you create</font><font color="#CCCCCC"> a</font>

233
00:10:46,860 --> 00:10:51,650
<font color="#E5E5E5">container with unlimited memory then</font>

234
00:10:49,320 --> 00:10:55,470
that's<font color="#E5E5E5"> great and that Java will like it</font>

235
00:10:51,650 --> 00:10:57,300
but it's bad in<font color="#E5E5E5"> that how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> of those</font>

236
00:10:55,470 --> 00:10:58,490
can<font color="#CCCCCC"> you safely</font><font color="#E5E5E5"> run the same computer</font>

237
00:10:57,300 --> 00:11:00,630
<font color="#CCCCCC">without running</font><font color="#E5E5E5"> up against the</font>

238
00:10:58,490 --> 00:11:03,870
constraints of the machine in question

239
00:11:00,630 --> 00:11:05,130
you<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know you're rolling</font><font color="#CCCCCC"> the dice</font>

240
00:11:03,870 --> 00:11:09,240
<font color="#CCCCCC">every time you spin up more than</font><font color="#E5E5E5"> one</font>

241
00:11:05,130 --> 00:11:12,180
these<font color="#CCCCCC"> things so ideally you want to</font>

242
00:11:09,240 --> 00:11:16,170
clamp down<font color="#CCCCCC"> all those resource clamp down</font>

243
00:11:12,180 --> 00:11:17,939
on<font color="#E5E5E5"> that a resource usage and restrict</font>

244
00:11:16,170 --> 00:11:20,310
<font color="#E5E5E5">the container to a fixed size you know</font>

245
00:11:17,940 --> 00:11:23,550
exactly<font color="#E5E5E5"> how many you</font><font color="#CCCCCC"> can run on your</font>

246
00:11:20,310 --> 00:11:25,290
machine<font color="#CCCCCC"> the Java</font><font color="#E5E5E5"> changes also enable</font>

247
00:11:23,550 --> 00:11:26,579
flexibility you<font color="#E5E5E5"> have no idea what the</font>

248
00:11:25,290 --> 00:11:27,780
environments<font color="#E5E5E5"> of tomorrow is going to</font>

249
00:11:26,580 --> 00:11:28,860
<font color="#E5E5E5">look</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> and I especially don't know</font>

250
00:11:27,780 --> 00:11:32,850
what the environments<font color="#E5E5E5"> of tomorrow is</font>

251
00:11:28,860 --> 00:11:34,860
going<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> and so if you make</font>

252
00:11:32,850 --> 00:11:37,620
<font color="#CCCCCC">sure you change your Java to fit inside</font>

253
00:11:34,860 --> 00:11:39,810
<font color="#CCCCCC">a nice small</font><font color="#E5E5E5"> compact container then</font>

254
00:11:37,620 --> 00:11:41,580
maybe tomorrow<font color="#E5E5E5"> your company is</font><font color="#CCCCCC"> going to</font>

255
00:11:39,810 --> 00:11:43,109
<font color="#E5E5E5">be embracing a mobile platform</font><font color="#CCCCCC"> maybe</font>

256
00:11:41,580 --> 00:11:45,630
you're going<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> running it on a</font>

257
00:11:43,110 --> 00:11:46,950
<font color="#CCCCCC">Raspberry Pi</font><font color="#E5E5E5"> you know you don't know</font>

258
00:11:45,630 --> 00:11:47,970
where you're going to<font color="#CCCCCC"> code where your</font>

259
00:11:46,950 --> 00:11:50,310
<font color="#E5E5E5">code</font><font color="#CCCCCC"> is going to</font><font color="#E5E5E5"> be running in the</font>

260
00:11:47,970 --> 00:11:52,320
future and having<font color="#E5E5E5"> strict resource</font>

261
00:11:50,310 --> 00:11:54,359
control from the get-go<font color="#CCCCCC"> I mean and</font>

262
00:11:52,320 --> 00:11:59,100
having a<font color="#CCCCCC"> process a</font><font color="#E5E5E5"> Java process that can</font>

263
00:11:54,360 --> 00:12:00,810
fit inside<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> and not fail</font><font color="#CCCCCC"> means</font>

264
00:11:59,100 --> 00:12:02,430
that you're more<font color="#CCCCCC"> likely to</font><font color="#E5E5E5"> be able to</font>

265
00:12:00,810 --> 00:12:05,280
<font color="#E5E5E5">point into these environments</font><font color="#CCCCCC"> with less</font>

266
00:12:02,430 --> 00:12:10,770
<font color="#CCCCCC">of a</font><font color="#E5E5E5"> headache</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that covers future</font>

267
00:12:05,280 --> 00:12:12,329
proofing as well<font color="#CCCCCC"> okay now one of the</font>

268
00:12:10,770 --> 00:12:14,430
<font color="#E5E5E5">problems we mentioned was the size of</font>

269
00:12:12,330 --> 00:12:16,830
<font color="#E5E5E5">the JDK</font><font color="#CCCCCC"> it's a big thing just bit in</font>

270
00:12:14,430 --> 00:12:18,989
size<font color="#CCCCCC"> a small container</font><font color="#E5E5E5"> those of you who</font>

271
00:12:16,830 --> 00:12:23,910
know<font color="#CCCCCC"> about containers may also know that</font>

272
00:12:18,990 --> 00:12:29,400
if multiple containers<font color="#E5E5E5"> have the same set</font>

273
00:12:23,910 --> 00:12:30,959
<font color="#CCCCCC">of images</font><font color="#E5E5E5"> they can share</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is so</font>

274
00:12:29,400 --> 00:12:34,500
<font color="#E5E5E5">that's I'm getting a little off-topic</font>

275
00:12:30,960 --> 00:12:36,890
<font color="#E5E5E5">the containers can share the files that</font>

276
00:12:34,500 --> 00:12:39,660
<font color="#E5E5E5">are inside</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> them if the files aren't</font>

277
00:12:36,890 --> 00:12:41,370
<font color="#E5E5E5">different so if you've got the same Java</font>

278
00:12:39,660 --> 00:12:42,959
running in two separate containers<font color="#E5E5E5"> maybe</font>

279
00:12:41,370 --> 00:12:45,540
they can share a lot of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> space in the</font>

280
00:12:42,960 --> 00:12:48,540
hard<font color="#E5E5E5"> disk that being said it still</font>

281
00:12:45,540 --> 00:12:49,980
expands<font color="#E5E5E5"> the size of the container so</font>

282
00:12:48,540 --> 00:12:52,500
maybe you want<font color="#E5E5E5"> to make it smaller</font>

283
00:12:49,980 --> 00:12:53,540
in this case we've got<font color="#E5E5E5"> the JDK which is</font>

284
00:12:52,500 --> 00:12:55,190
your big package

285
00:12:53,540 --> 00:12:57,170
contains the Java Runtime environment

286
00:12:55,190 --> 00:12:59,380
<font color="#E5E5E5">which is</font><font color="#CCCCCC"> everything you need to run your</font>

287
00:12:57,170 --> 00:13:01,400
<font color="#CCCCCC">java</font><font color="#E5E5E5"> code and it also contains</font>

288
00:12:59,380 --> 00:13:04,580
<font color="#E5E5E5">everything else you might possibly need</font>

289
00:13:01,400 --> 00:13:06,410
<font color="#E5E5E5">it contains J so J shell J link it</font>

290
00:13:04,580 --> 00:13:09,980
contains the compiler it contains a

291
00:13:06,410 --> 00:13:11,600
<font color="#E5E5E5">debugging</font><font color="#CCCCCC"> tool so on and</font><font color="#E5E5E5"> so forth it</font>

292
00:13:09,980 --> 00:13:16,550
also contains the<font color="#CCCCCC"> Java doc tool if</font>

293
00:13:11,600 --> 00:13:18,230
anyone's tried<font color="#CCCCCC"> using that</font><font color="#E5E5E5"> so when you're</font>

294
00:13:16,550 --> 00:13:20,180
developing code the<font color="#CCCCCC"> JDK is a good idea</font>

295
00:13:18,230 --> 00:13:21,800
<font color="#CCCCCC">but when you're executing code it can be</font>

296
00:13:20,180 --> 00:13:24,280
a<font color="#E5E5E5"> good</font><font color="#CCCCCC"> idea to just download the Gerry</font>

297
00:13:21,800 --> 00:13:28,250
<font color="#E5E5E5">on its own and</font><font color="#CCCCCC"> just run that</font>

298
00:13:24,280 --> 00:13:29,839
independently<font color="#E5E5E5"> of the JDK</font><font color="#CCCCCC"> the good news</font>

299
00:13:28,250 --> 00:13:32,780
is a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> places that provide</font><font color="#E5E5E5"> and</font>

300
00:13:29,840 --> 00:13:37,430
whether it's<font color="#E5E5E5"> open JDK binaries or fully</font>

301
00:13:32,780 --> 00:13:40,490
<font color="#CCCCCC">jck certified Java binders</font><font color="#E5E5E5"> they often</font>

302
00:13:37,430 --> 00:13:41,930
provide JRE downloads<font color="#E5E5E5"> right</font><font color="#CCCCCC"> next</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> jdk</font>

303
00:13:40,490 --> 00:13:43,370
<font color="#E5E5E5">downloads so if you ever wonder what was</font>

304
00:13:41,930 --> 00:13:49,280
the difference<font color="#E5E5E5"> between the two now you</font>

305
00:13:43,370 --> 00:13:53,390
know<font color="#E5E5E5"> J link J link is a very handy tool</font>

306
00:13:49,280 --> 00:13:55,329
<font color="#CCCCCC">it was introduced in Java 9 and I've</font>

307
00:13:53,390 --> 00:13:58,340
been running a bunch of<font color="#E5E5E5"> tests with it in</font>

308
00:13:55,330 --> 00:14:00,950
Java 11<font color="#CCCCCC"> so produce some quite quite</font>

309
00:13:58,340 --> 00:14:02,930
interesting<font color="#E5E5E5"> numbers it's the concept is</font>

310
00:14:00,950 --> 00:14:08,000
as the slide says<font color="#E5E5E5"> you keep the modules</font>

311
00:14:02,930 --> 00:14:11,719
you<font color="#CCCCCC"> need</font><font color="#E5E5E5"> you discard the rest in our</font>

312
00:14:08,000 --> 00:14:14,480
example here<font color="#CCCCCC"> I wrote some code</font><font color="#E5E5E5"> earlier</font>

313
00:14:11,720 --> 00:14:20,720
on yesterday<font color="#E5E5E5"> and I put it through the</font>

314
00:14:14,480 --> 00:14:25,910
latest JDK 11<font color="#E5E5E5"> build with hotspot and we</font>

315
00:14:20,720 --> 00:14:30,470
turned a<font color="#E5E5E5"> JDK that was 292 megabytes in</font>

316
00:14:25,910 --> 00:14:32,780
size and by<font color="#E5E5E5"> j linking so we only have</font>

317
00:14:30,470 --> 00:14:35,750
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Java doc</font><font color="#E5E5E5"> base module which was the</font>

318
00:14:32,780 --> 00:14:39,079
<font color="#CCCCCC">only module</font><font color="#E5E5E5"> I needed at the</font><font color="#CCCCCC"> time we</font>

319
00:14:35,750 --> 00:14:41,720
stripped that 292 megabytes<font color="#CCCCCC"> right the</font>

320
00:14:39,080 --> 00:14:43,850
way down<font color="#CCCCCC"> past the size of the JRE which</font>

321
00:14:41,720 --> 00:14:45,470
was a<font color="#E5E5E5"> hundred</font><font color="#CCCCCC"> and eight megabytes</font><font color="#E5E5E5"> all</font>

322
00:14:43,850 --> 00:14:48,440
the way<font color="#E5E5E5"> down to 38</font>

323
00:14:45,470 --> 00:14:51,860
megabytes<font color="#E5E5E5"> that's slightly</font><font color="#CCCCCC"> over a third</font>

324
00:14:48,440 --> 00:14:54,320
of the JRE size and a hair over<font color="#CCCCCC"> 1/8 the</font>

325
00:14:51,860 --> 00:14:56,090
<font color="#E5E5E5">JDK size so if</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> trying to save</font>

326
00:14:54,320 --> 00:14:57,500
megabytes this is the<font color="#E5E5E5"> J link is</font>

327
00:14:56,090 --> 00:15:03,500
definitely a<font color="#CCCCCC"> very useful tool</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font>

328
00:14:57,500 --> 00:15:05,520
can<font color="#E5E5E5"> use memory footprint if you're going</font>

329
00:15:03,500 --> 00:15:10,380
to fit Java and

330
00:15:05,520 --> 00:15:12,660
<font color="#E5E5E5">Graham you're running the Java program</font>

331
00:15:10,380 --> 00:15:14,880
you're running<font color="#E5E5E5"> you're going to once use</font>

332
00:15:12,660 --> 00:15:16,380
up as<font color="#E5E5E5"> little memory as possible so you</font>

333
00:15:14,880 --> 00:15:18,950
<font color="#E5E5E5">can have a nice small container</font><font color="#CCCCCC"> and you</font>

334
00:15:16,380 --> 00:15:23,910
can<font color="#CCCCCC"> run lots of them</font><font color="#E5E5E5"> in a</font><font color="#CCCCCC"> single</font><font color="#E5E5E5"> machine</font>

335
00:15:18,950 --> 00:15:26,730
<font color="#E5E5E5">now in this case you</font><font color="#CCCCCC"> can find a much</font>

336
00:15:23,910 --> 00:15:29,280
smaller<font color="#E5E5E5"> memory footprint by using an</font>

337
00:15:26,730 --> 00:15:33,300
<font color="#CCCCCC">alternative</font><font color="#E5E5E5"> VM known as open j9 which</font>

338
00:15:29,280 --> 00:15:35,100
was open sourced a while back<font color="#CCCCCC"> and as you</font>

339
00:15:33,300 --> 00:15:36,660
can<font color="#E5E5E5"> see here on these charts</font><font color="#CCCCCC"> here the</font>

340
00:15:35,100 --> 00:15:38,040
footprint sizes I don't know if you can

341
00:15:36,660 --> 00:15:41,459
<font color="#E5E5E5">read this at the back but this says</font>

342
00:15:38,040 --> 00:15:44,040
footprint size<font color="#CCCCCC"> after</font><font color="#E5E5E5"> startup with</font><font color="#CCCCCC"> x and</font>

343
00:15:41,460 --> 00:15:47,910
<font color="#CCCCCC">x 1g which</font><font color="#E5E5E5"> is the setting of the heap</font>

344
00:15:44,040 --> 00:15:50,329
it's a<font color="#CCCCCC"> going into what the heap is is a</font>

345
00:15:47,910 --> 00:15:53,610
bit more detailed<font color="#E5E5E5"> but it's it's a</font>

346
00:15:50,330 --> 00:15:57,150
statement<font color="#E5E5E5"> a pretty heavy statement on</font>

347
00:15:53,610 --> 00:15:58,650
how much<font color="#CCCCCC"> memory the JVM is likely to use</font>

348
00:15:57,150 --> 00:16:02,510
there are<font color="#E5E5E5"> other forms of memory</font><font color="#CCCCCC"> that</font>

349
00:15:58,650 --> 00:16:05,370
Java uses native<font color="#CCCCCC"> memory and the like but</font>

350
00:16:02,510 --> 00:16:07,650
the heap is one of the biggest<font color="#CCCCCC"> uses of</font>

351
00:16:05,370 --> 00:16:09,000
memory so if you can strip that<font color="#E5E5E5"> down</font><font color="#CCCCCC"> you</font>

352
00:16:07,650 --> 00:16:10,350
can<font color="#CCCCCC"> be fairly confident</font><font color="#E5E5E5"> that the rest of</font>

353
00:16:09,000 --> 00:16:13,470
the process<font color="#E5E5E5"> is going to fit</font><font color="#CCCCCC"> aside in a</font>

354
00:16:10,350 --> 00:16:15,690
small box<font color="#CCCCCC"> I've seen on the</font><font color="#E5E5E5"> left you've</font>

355
00:16:13,470 --> 00:16:19,770
<font color="#CCCCCC">got open</font><font color="#E5E5E5"> JDK with hotspot this is how</font>

356
00:16:15,690 --> 00:16:23,340
much memory<font color="#E5E5E5"> this uses and then as you go</font>

357
00:16:19,770 --> 00:16:25,740
along<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can see open JDK with open j9</font>

358
00:16:23,340 --> 00:16:28,020
and various options use that much less

359
00:16:25,740 --> 00:16:32,280
<font color="#E5E5E5">so it's a nice efficient little system</font>

360
00:16:28,020 --> 00:16:37,079
<font color="#E5E5E5">and I was also contacted yesterday with</font>

361
00:16:32,280 --> 00:16:39,180
some<font color="#E5E5E5"> updated numbers for JDK 11</font><font color="#CCCCCC"> when</font>

362
00:16:37,080 --> 00:16:47,000
running the the<font color="#CCCCCC"> day trader</font><font color="#E5E5E5"> 3 who's</font>

363
00:16:39,180 --> 00:16:50,520
familiar with day trader 3<font color="#E5E5E5"> a one it's</font>

364
00:16:47,000 --> 00:16:53,250
the short version<font color="#E5E5E5"> is it's a it's a tool</font>

365
00:16:50,520 --> 00:16:56,910
you can<font color="#CCCCCC"> use to measure how much memory</font>

366
00:16:53,250 --> 00:16:58,680
<font color="#E5E5E5">you're using in this case so you run</font>

367
00:16:56,910 --> 00:17:01,079
<font color="#E5E5E5">these things you analyze the foot you</font>

368
00:16:58,680 --> 00:17:02,370
run day trader 3 and you can<font color="#CCCCCC"> analyze the</font>

369
00:17:01,080 --> 00:17:06,450
footprint and<font color="#E5E5E5"> it's supposed to remain</font>

370
00:17:02,370 --> 00:17:08,670
consistent<font color="#E5E5E5"> whether or not you want to</font>

371
00:17:06,450 --> 00:17:09,810
<font color="#E5E5E5">run it once or a dozen times so the</font>

372
00:17:08,670 --> 00:17:13,020
numbers you're getting should be a

373
00:17:09,810 --> 00:17:19,409
fairly definitive<font color="#E5E5E5"> and the output we got</font>

374
00:17:13,020 --> 00:17:21,629
from hot spot was 423 kilobytes

375
00:17:19,410 --> 00:17:25,549
so that was the the<font color="#CCCCCC"> footprint</font><font color="#E5E5E5"> for hot</font>

376
00:17:21,630 --> 00:17:29,940
<font color="#E5E5E5">spot for open j9 it was</font><font color="#CCCCCC"> 57</font><font color="#E5E5E5"> percent less</font>

377
00:17:25,549 --> 00:17:33,020
<font color="#CCCCCC">282 which which is good</font>

378
00:17:29,940 --> 00:17:35,280
<font color="#CCCCCC">she's</font><font color="#E5E5E5"> a very efficient</font><font color="#CCCCCC"> little system now</font>

379
00:17:33,020 --> 00:17:38,129
<font color="#E5E5E5">one of the problems with a memory</font>

380
00:17:35,280 --> 00:17:39,539
limited container<font color="#CCCCCC"> well the</font><font color="#E5E5E5"> benefits of a</font>

381
00:17:38,130 --> 00:17:41,010
memory limited container is you know

382
00:17:39,539 --> 00:17:43,740
<font color="#CCCCCC">exactly how many</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can fit on a</font>

383
00:17:41,010 --> 00:17:46,549
machine<font color="#CCCCCC"> without making the machines</font>

384
00:17:43,740 --> 00:17:50,669
operating system<font color="#CCCCCC"> start stuff</font><font color="#E5E5E5"> resources</font>

385
00:17:46,549 --> 00:17:55,080
<font color="#CCCCCC">the problem is that if you're Jerry is</font>

386
00:17:50,669 --> 00:17:58,140
not aware<font color="#CCCCCC"> of the containers restrictions</font>

387
00:17:55,080 --> 00:18:00,629
on resources<font color="#CCCCCC"> and why that will</font><font color="#E5E5E5"> be will</font>

388
00:17:58,140 --> 00:18:05,460
<font color="#CCCCCC">be going into</font><font color="#E5E5E5"> a bit later</font><font color="#CCCCCC"> the problem is</font>

389
00:18:00,630 --> 00:18:07,289
it<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be killed this process called</font><font color="#E5E5E5"> the</font>

390
00:18:05,460 --> 00:18:12,240
the out of memory killer it's part of

391
00:18:07,289 --> 00:18:15,030
the<font color="#CCCCCC"> daka process if you take up too much</font>

392
00:18:12,240 --> 00:18:18,480
<font color="#CCCCCC">memory in a memory restricted</font><font color="#E5E5E5"> docker</font>

393
00:18:15,030 --> 00:18:20,820
container<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you hit the limits you</font>

394
00:18:18,480 --> 00:18:22,500
try to go past them<font color="#E5E5E5"> and</font><font color="#CCCCCC"> dock</font><font color="#E5E5E5"> is out of</font>

395
00:18:20,820 --> 00:18:24,059
<font color="#E5E5E5">memory killer basically takes out</font><font color="#CCCCCC"> your</font>

396
00:18:22,500 --> 00:18:27,110
container<font color="#E5E5E5"> takes out the</font><font color="#CCCCCC"> environment that</font>

397
00:18:24,059 --> 00:18:31,350
<font color="#E5E5E5">you're using to</font><font color="#CCCCCC"> develop to test whatever</font>

398
00:18:27,110 --> 00:18:33,418
<font color="#CCCCCC">what you can do to make sure</font><font color="#E5E5E5"> you're</font>

399
00:18:31,350 --> 00:18:36,780
staying<font color="#CCCCCC"> inside that limit is you can</font>

400
00:18:33,419 --> 00:18:41,190
either set the<font color="#CCCCCC"> xmx the maximum heap size</font>

401
00:18:36,780 --> 00:18:43,740
to much lower than the memory<font color="#E5E5E5"> limit for</font>

402
00:18:41,190 --> 00:18:46,169
the container or you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> pick a VM that</font>

403
00:18:43,740 --> 00:18:49,049
<font color="#E5E5E5">has container awareness built in so the</font>

404
00:18:46,169 --> 00:18:53,880
automatic<font color="#E5E5E5"> automatically specified heap</font>

405
00:18:49,049 --> 00:19:02,970
size is smaller than the limits imposed

406
00:18:53,880 --> 00:19:05,940
on the container<font color="#CCCCCC"> such as</font><font color="#E5E5E5"> open j9</font><font color="#CCCCCC"> you</font>

407
00:19:02,970 --> 00:19:09,059
some people also<font color="#E5E5E5"> have problems when the</font>

408
00:19:05,940 --> 00:19:13,080
heap is set<font color="#E5E5E5"> to small this is more of an</font>

409
00:19:09,059 --> 00:19:17,280
efficiency concern<font color="#CCCCCC"> when you set the heat</font>

410
00:19:13,080 --> 00:19:18,689
to small<font color="#E5E5E5"> you've got first of all why</font>

411
00:19:17,280 --> 00:19:20,220
<font color="#E5E5E5">would you want to set the heat to small</font>

412
00:19:18,690 --> 00:19:22,020
I mean<font color="#E5E5E5"> ideally you want to set the heap</font>

413
00:19:20,220 --> 00:19:23,490
as big as you<font color="#CCCCCC"> can so that there's no</font>

414
00:19:22,020 --> 00:19:26,039
<font color="#E5E5E5">garbage collection that needs to happen</font>

415
00:19:23,490 --> 00:19:28,020
<font color="#E5E5E5">and your process can run from beginning</font>

416
00:19:26,039 --> 00:19:29,920
to end without having<font color="#E5E5E5"> to worry about</font>

417
00:19:28,020 --> 00:19:34,330
<font color="#CCCCCC">stealing some runtime</font>

418
00:19:29,920 --> 00:19:36,490
<font color="#E5E5E5">yep</font><font color="#CCCCCC"> after itself the reason you'd want</font>

419
00:19:34,330 --> 00:19:39,580
<font color="#E5E5E5">to set it smaller than necessary is</font>

420
00:19:36,490 --> 00:19:41,440
<font color="#CCCCCC">because when you're running</font><font color="#E5E5E5"> Java on a</font>

421
00:19:39,580 --> 00:19:43,060
given machine<font color="#CCCCCC"> you have to make</font><font color="#E5E5E5"> sure that</font>

422
00:19:41,440 --> 00:19:45,340
there's<font color="#CCCCCC"> enough space for</font><font color="#E5E5E5"> all the other</font>

423
00:19:43,060 --> 00:19:48,940
processes<font color="#E5E5E5"> sharing that machine to</font>

424
00:19:45,340 --> 00:19:51,879
operate<font color="#E5E5E5"> on Linux especially if you take</font>

425
00:19:48,940 --> 00:19:53,710
up too much<font color="#CCCCCC"> memory then</font><font color="#E5E5E5"> the operating</font>

426
00:19:51,880 --> 00:19:54,910
system<font color="#E5E5E5"> itself can come along and Club</font>

427
00:19:53,710 --> 00:19:57,400
you to make<font color="#CCCCCC"> sure that you're not</font>

428
00:19:54,910 --> 00:20:00,300
threatening existing services so that

429
00:19:57,400 --> 00:20:03,580
<font color="#CCCCCC">the</font><font color="#E5E5E5"> essential stuff can continue to run</font>

430
00:20:00,300 --> 00:20:06,490
<font color="#CCCCCC">containers</font><font color="#E5E5E5"> don't have that problem so</font>

431
00:20:03,580 --> 00:20:08,350
much<font color="#E5E5E5"> there's nothing sharing your</font>

432
00:20:06,490 --> 00:20:11,350
container<font color="#CCCCCC"> other than</font><font color="#E5E5E5"> that which you</font><font color="#CCCCCC"> put</font>

433
00:20:08,350 --> 00:20:14,740
<font color="#CCCCCC">in there</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you know that there's less</font>

434
00:20:11,350 --> 00:20:16,600
<font color="#CCCCCC">competition so you can be lesser</font><font color="#E5E5E5"> timid</font>

435
00:20:14,740 --> 00:20:18,280
and setting the sizes<font color="#E5E5E5"> of your heap so</font>

436
00:20:16,600 --> 00:20:20,040
you could so if you know<font color="#E5E5E5"> that job is the</font>

437
00:20:18,280 --> 00:20:22,750
<font color="#CCCCCC">only</font><font color="#E5E5E5"> thing running inside your container</font>

438
00:20:20,040 --> 00:20:24,730
<font color="#CCCCCC">you can quite confidently make the heat</font>

439
00:20:22,750 --> 00:20:29,460
much bigger than you would on<font color="#E5E5E5"> a computer</font>

440
00:20:24,730 --> 00:20:29,460
with<font color="#E5E5E5"> equivalent resource constraints</font>

441
00:20:31,620 --> 00:20:36,969
there we go

442
00:20:33,300 --> 00:20:39,720
<font color="#E5E5E5">startup speed yes it's another open j9</font>

443
00:20:36,970 --> 00:20:43,300
<font color="#CCCCCC">flow</font><font color="#E5E5E5"> please stay with me</font>

444
00:20:39,720 --> 00:20:46,570
first of all on<font color="#E5E5E5"> the left you've got open</font>

445
00:20:43,300 --> 00:20:51,250
<font color="#E5E5E5">JDK</font><font color="#CCCCCC"> with hotspot</font><font color="#E5E5E5"> this is how fast it</font>

446
00:20:46,570 --> 00:20:52,629
starts up and the bar doesn't<font color="#E5E5E5"> really</font>

447
00:20:51,250 --> 00:20:55,180
tell<font color="#E5E5E5"> you anything</font><font color="#CCCCCC"> until you compare</font><font color="#E5E5E5"> it</font>

448
00:20:52,630 --> 00:20:57,880
<font color="#CCCCCC">to something</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the right you have</font>

449
00:20:55,180 --> 00:21:00,850
<font color="#E5E5E5">open JDK</font><font color="#CCCCCC"> with open j9 as you can see the</font>

450
00:20:57,880 --> 00:21:04,420
<font color="#CCCCCC">startup</font><font color="#E5E5E5"> time is a little slower</font><font color="#CCCCCC"> so</font>

451
00:21:00,850 --> 00:21:06,610
that's interesting<font color="#E5E5E5"> which means that if</font>

452
00:21:04,420 --> 00:21:10,660
you're<font color="#CCCCCC"> just looking to</font><font color="#E5E5E5"> pick a Java and</font>

453
00:21:06,610 --> 00:21:14,949
run it then<font color="#E5E5E5"> you're probably better off</font>

454
00:21:10,660 --> 00:21:16,390
with a<font color="#CCCCCC"> hotspot</font><font color="#E5E5E5"> but if you can fight if</font>

455
00:21:14,950 --> 00:21:18,160
you're<font color="#E5E5E5"> planning on running the same</font>

456
00:21:16,390 --> 00:21:21,120
process multiple<font color="#E5E5E5"> times</font><font color="#CCCCCC"> in the same</font>

457
00:21:18,160 --> 00:21:23,800
container<font color="#CCCCCC"> or if you</font><font color="#E5E5E5"> are planning on</font>

458
00:21:21,120 --> 00:21:25,989
running<font color="#E5E5E5"> a container that</font><font color="#CCCCCC"> has access</font><font color="#E5E5E5"> to</font>

459
00:21:23,800 --> 00:21:28,389
<font color="#E5E5E5">the outside world anyone who's used</font>

460
00:21:25,990 --> 00:21:30,790
docker will<font color="#E5E5E5"> be</font><font color="#CCCCCC"> familiar with -</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> V you</font>

461
00:21:28,390 --> 00:21:33,390
can<font color="#CCCCCC"> use to give your docker container</font><font color="#E5E5E5"> a</font>

462
00:21:30,790 --> 00:21:36,870
little window into<font color="#E5E5E5"> the</font><font color="#CCCCCC"> world outside and</font>

463
00:21:33,390 --> 00:21:39,760
if you do that then you<font color="#CCCCCC"> can create a</font>

464
00:21:36,870 --> 00:21:44,110
persistent ahead of time<font color="#E5E5E5"> compilation</font>

465
00:21:39,760 --> 00:21:46,810
cache<font color="#E5E5E5"> which means that when you run your</font>

466
00:21:44,110 --> 00:21:50,020
<font color="#CCCCCC">java program</font><font color="#E5E5E5"> the more you execute any</font>

467
00:21:46,810 --> 00:21:52,480
particular<font color="#E5E5E5"> part of code the more</font><font color="#CCCCCC"> Java</font>

468
00:21:50,020 --> 00:21:53,620
<font color="#E5E5E5">will notice that your component you're</font>

469
00:21:52,480 --> 00:21:56,230
running<font color="#E5E5E5"> that code over</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> over again</font>

470
00:21:53,620 --> 00:21:58,300
it'll<font color="#E5E5E5"> think ah if I recompile this thing</font>

471
00:21:56,230 --> 00:22:02,380
using the<font color="#E5E5E5"> JIT to make it more efficient</font>

472
00:21:58,300 --> 00:22:03,940
than it will run<font color="#CCCCCC"> faster but then you</font>

473
00:22:02,380 --> 00:22:08,200
turn your program off and it forgets

474
00:22:03,940 --> 00:22:10,930
that and that's<font color="#E5E5E5"> not more the</font><font color="#CCCCCC"> äôt ahead</font>

475
00:22:08,200 --> 00:22:13,150
of time<font color="#E5E5E5"> cache allows you to store the</font>

476
00:22:10,930 --> 00:22:15,430
results of that compilation so the next

477
00:22:13,150 --> 00:22:18,730
time you run that same<font color="#CCCCCC"> java program that</font>

478
00:22:15,430 --> 00:22:20,140
same process<font color="#E5E5E5"> it's going to pull that</font>

479
00:22:18,730 --> 00:22:22,540
<font color="#E5E5E5">directly out of</font><font color="#CCCCCC"> memory so instead of</font>

480
00:22:20,140 --> 00:22:26,500
<font color="#E5E5E5">stealing some runtime to compile your</font>

481
00:22:22,540 --> 00:22:28,300
<font color="#CCCCCC">code</font><font color="#E5E5E5"> to make it faster</font><font color="#CCCCCC"> it can</font><font color="#E5E5E5"> just use</font>

482
00:22:26,500 --> 00:22:31,060
<font color="#E5E5E5">that and get right up</font><font color="#CCCCCC"> to a</font><font color="#E5E5E5"> hundred miles</font>

483
00:22:28,300 --> 00:22:32,500
now right from<font color="#E5E5E5"> the get-go</font><font color="#CCCCCC"> so if you're</font>

484
00:22:31,060 --> 00:22:34,750
prepared to<font color="#E5E5E5"> take a little time out and</font>

485
00:22:32,500 --> 00:22:37,420
<font color="#E5E5E5">set up a persistent cache between uses</font>

486
00:22:34,750 --> 00:22:39,430
you<font color="#E5E5E5"> can see the startup time improves</font>

487
00:22:37,420 --> 00:22:40,930
dramatically<font color="#E5E5E5"> so if you're doing the</font><font color="#CCCCCC"> same</font>

488
00:22:39,430 --> 00:22:42,280
<font color="#CCCCCC">thing over</font><font color="#E5E5E5"> and over again you've got</font>

489
00:22:40,930 --> 00:22:43,660
<font color="#E5E5E5">different containers doing the same</font>

490
00:22:42,280 --> 00:22:47,350
thing over and<font color="#E5E5E5"> over again this is</font>

491
00:22:43,660 --> 00:22:50,350
<font color="#E5E5E5">definitely worth</font><font color="#CCCCCC"> looking into I think</font>

492
00:22:47,350 --> 00:22:55,120
we've got<font color="#CCCCCC"> well</font><font color="#E5E5E5"> three minutes left</font><font color="#CCCCCC"> okay</font>

493
00:22:50,350 --> 00:22:59,260
<font color="#E5E5E5">then I will speed up either talk faster</font>

494
00:22:55,120 --> 00:23:01,330
or talk less<font color="#CCCCCC"> good out of memories and</font>

495
00:22:59,260 --> 00:23:04,870
bad out of memories we've mentioned that

496
00:23:01,330 --> 00:23:08,590
<font color="#E5E5E5">when you run</font><font color="#CCCCCC"> out of</font><font color="#E5E5E5"> memory in a</font>

497
00:23:04,870 --> 00:23:10,719
container<font color="#CCCCCC"> the out</font><font color="#E5E5E5"> of memory killer from</font>

498
00:23:08,590 --> 00:23:12,520
docker<font color="#E5E5E5"> will kill the container and</font><font color="#CCCCCC"> take</font>

499
00:23:10,720 --> 00:23:14,140
down<font color="#E5E5E5"> your</font><font color="#CCCCCC"> entire environment now that's</font>

500
00:23:12,520 --> 00:23:17,470
not necessarily<font color="#CCCCCC"> something your Java</font>

501
00:23:14,140 --> 00:23:21,220
process<font color="#E5E5E5"> can handle however if your Java</font>

502
00:23:17,470 --> 00:23:23,740
process<font color="#E5E5E5"> has the heap set up properly in</font>

503
00:23:21,220 --> 00:23:25,000
advance<font color="#E5E5E5"> then it can throw an out</font><font color="#CCCCCC"> of</font>

504
00:23:23,740 --> 00:23:27,040
<font color="#E5E5E5">memory and form of an out of</font><font color="#CCCCCC"> memory</font>

505
00:23:25,000 --> 00:23:33,090
<font color="#E5E5E5">exception that doesn't kill the</font>

506
00:23:27,040 --> 00:23:35,260
container which is<font color="#E5E5E5"> less destructive</font><font color="#CCCCCC"> now</font>

507
00:23:33,090 --> 00:23:36,820
<font color="#CCCCCC">okay sometimes it doesn't</font><font color="#E5E5E5"> always kill</font>

508
00:23:35,260 --> 00:23:40,780
the container sometimes you just<font color="#CCCCCC"> have a</font>

509
00:23:36,820 --> 00:23:42,340
lot<font color="#CCCCCC"> of page range which is what we call</font>

510
00:23:40,780 --> 00:23:43,690
<font color="#E5E5E5">that when there's a lot of paging going</font>

511
00:23:42,340 --> 00:23:46,030
on<font color="#CCCCCC"> there's trading</font>

512
00:23:43,690 --> 00:23:51,430
memory pages between<font color="#E5E5E5"> the memory and the</font>

513
00:23:46,030 --> 00:23:52,960
the<font color="#CCCCCC"> hard-disk</font><font color="#E5E5E5"> so the short version the</font>

514
00:23:51,430 --> 00:23:54,850
short version<font color="#CCCCCC"> for all</font><font color="#E5E5E5"> this is it's a</font>

515
00:23:52,960 --> 00:23:57,100
good<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> to set the the maximum heap</font>

516
00:23:54,850 --> 00:23:58,810
size to lower than the restrictions of

517
00:23:57,100 --> 00:24:00,639
<font color="#E5E5E5">the container and this is basically</font><font color="#CCCCCC"> a</font>

518
00:23:58,810 --> 00:24:05,230
<font color="#CCCCCC">richer a reiteration of what I mentioned</font>

519
00:24:00,640 --> 00:24:07,270
<font color="#E5E5E5">earlier I was also going to mention CPUs</font>

520
00:24:05,230 --> 00:24:09,360
and threads<font color="#E5E5E5"> I understand we're down to</font>

521
00:24:07,270 --> 00:24:15,220
<font color="#CCCCCC">two minutes</font>

522
00:24:09,360 --> 00:24:17,189
well idea<font color="#CCCCCC"> I think I will again can</font>

523
00:24:15,220 --> 00:24:20,170
attack again<font color="#CCCCCC"> the environment awareness</font>

524
00:24:17,190 --> 00:24:23,140
<font color="#CCCCCC">environments awareness Java</font><font color="#E5E5E5"> often</font>

525
00:24:20,170 --> 00:24:25,450
doesn't<font color="#E5E5E5"> have it open j9 does but it's</font>

526
00:24:23,140 --> 00:24:27,280
only automatically enabled in<font color="#E5E5E5"> JDK 11 so</font>

527
00:24:25,450 --> 00:24:30,880
before<font color="#CCCCCC"> that yes done a</font><font color="#E5E5E5"> bit of a tricky</font>

528
00:24:27,280 --> 00:24:33,160
bind and basically<font color="#E5E5E5"> when you run</font><font color="#CCCCCC"> Java</font>

529
00:24:30,880 --> 00:24:36,790
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it's not</font><font color="#E5E5E5"> aware of things called</font>

530
00:24:33,160 --> 00:24:38,980
<font color="#E5E5E5">C groups that we won't go into it can</font>

531
00:24:36,790 --> 00:24:40,690
think it's got much more resources than

532
00:24:38,980 --> 00:24:42,310
it<font color="#CCCCCC"> actually has because it's</font><font color="#E5E5E5"> looking at</font>

533
00:24:40,690 --> 00:24:44,980
the<font color="#E5E5E5"> resources</font><font color="#CCCCCC"> the machine has rather</font>

534
00:24:42,310 --> 00:24:47,169
than<font color="#E5E5E5"> resources your specific container</font>

535
00:24:44,980 --> 00:24:50,140
has so it'll say oh look I've got a

536
00:24:47,170 --> 00:24:52,480
hundred CPUs I'm going to run this many

537
00:24:50,140 --> 00:24:55,240
GC threads<font color="#E5E5E5"> this</font><font color="#CCCCCC"> many JIT compilation</font>

538
00:24:52,480 --> 00:24:57,850
threads<font color="#E5E5E5"> unfortunately it doesn't</font>

539
00:24:55,240 --> 00:24:59,950
necessarily have<font color="#CCCCCC"> all of that CPU run</font>

540
00:24:57,850 --> 00:25:04,209
<font color="#CCCCCC">time to play with it maybe</font><font color="#E5E5E5"> only maybe</font>

541
00:24:59,950 --> 00:25:05,710
only<font color="#CCCCCC"> has one or two CPUs</font><font color="#E5E5E5"> if you've</font>

542
00:25:04,210 --> 00:25:08,410
specified that when starting<font color="#CCCCCC"> up the</font>

543
00:25:05,710 --> 00:25:11,770
container to restrict its resource usage

544
00:25:08,410 --> 00:25:14,590
and that<font color="#CCCCCC"> can be a problem</font><font color="#E5E5E5"> because then</font>

545
00:25:11,770 --> 00:25:16,300
<font color="#CCCCCC">Java's just spun up a dozen GC threads</font>

546
00:25:14,590 --> 00:25:17,760
and<font color="#E5E5E5"> a dozen JIT threads and it's got to</font>

547
00:25:16,300 --> 00:25:22,060
make time<font color="#CCCCCC"> for that</font><font color="#E5E5E5"> and a single die</font>

548
00:25:17,760 --> 00:25:23,830
which is a<font color="#E5E5E5"> problem because it means</font><font color="#CCCCCC"> that</font>

549
00:25:22,060 --> 00:25:25,990
<font color="#E5E5E5">now all your</font><font color="#CCCCCC"> runtime is being chewed up</font>

550
00:25:23,830 --> 00:25:27,580
with JIT and<font color="#E5E5E5"> GC threads and your program</font>

551
00:25:25,990 --> 00:25:33,820
isn't actually getting enough<font color="#E5E5E5"> runtime to</font>

552
00:25:27,580 --> 00:25:36,939
do<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> how can you</font><font color="#E5E5E5"> fix</font><font color="#CCCCCC"> that use</font>

553
00:25:33,820 --> 00:25:39,189
open<font color="#E5E5E5"> j9 or Google the options you need</font>

554
00:25:36,940 --> 00:25:43,060
to restrict<font color="#E5E5E5"> the number of CPUs your Java</font>

555
00:25:39,190 --> 00:25:44,860
process needs access<font color="#CCCCCC"> to manually</font><font color="#E5E5E5"> I've</font>

556
00:25:43,060 --> 00:25:46,300
got a list here<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the commands if</font>

557
00:25:44,860 --> 00:25:49,750
anybody wants to<font color="#CCCCCC"> go through them with me</font>

558
00:25:46,300 --> 00:25:50,919
<font color="#E5E5E5">they're fascinating</font><font color="#CCCCCC"> okay here's a</font>

559
00:25:49,750 --> 00:25:52,410
<font color="#E5E5E5">summary of the stuff that we've covered</font>

560
00:25:50,920 --> 00:25:55,090
and I<font color="#E5E5E5"> realized that we're out of time</font>

561
00:25:52,410 --> 00:25:57,130
<font color="#CCCCCC">we've defined a list of problems we've</font>

562
00:25:55,090 --> 00:25:58,520
defined a list of common solutions to

563
00:25:57,130 --> 00:26:01,280
<font color="#E5E5E5">those problems</font>

564
00:25:58,520 --> 00:26:05,150
and I hope everybody<font color="#E5E5E5"> managed to get some</font>

565
00:26:01,280 --> 00:26:08,990
<font color="#E5E5E5">of the sweeties in the end and here's</font>

566
00:26:05,150 --> 00:26:11,650
some<font color="#E5E5E5"> links anyone still awake thank you</font>

567
00:26:08,990 --> 00:26:11,650
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much for</font><font color="#CCCCCC"> us</font>

568
00:26:13,260 --> 00:26:18,760
[Applause]

