1
00:00:04,630 --> 00:00:08,680
I'm happy I guess to have some more

2
00:00:06,850 --> 00:00:11,430
material to<font color="#E5E5E5"> throw at developers when you</font>

3
00:00:08,680 --> 00:00:14,139
have a chat<font color="#CCCCCC"> about this topic</font><font color="#E5E5E5"> with them</font>

4
00:00:11,430 --> 00:00:16,960
<font color="#CCCCCC">it's a very</font><font color="#E5E5E5"> important topic</font><font color="#CCCCCC"> that we are</font>

5
00:00:14,139 --> 00:00:20,439
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to cover and maybe with some</font>

6
00:00:16,960 --> 00:00:23,710
surprises for<font color="#E5E5E5"> you guys so let's dive in</font>

7
00:00:20,439 --> 00:00:28,020
I've<font color="#E5E5E5"> been using a</font><font color="#CCCCCC"> PostgreSQL for a long</font>

8
00:00:23,710 --> 00:00:28,020
time<font color="#E5E5E5"> I began on the previous century and</font>

9
00:00:28,830 --> 00:00:35,589
I'm part of the<font color="#E5E5E5"> contributors to</font><font color="#CCCCCC"> it I've</font>

10
00:00:31,660 --> 00:00:37,569
worked at situs data<font color="#E5E5E5"> and I'm told by our</font>

11
00:00:35,590 --> 00:00:39,730
marketing department that we have nice

12
00:00:37,569 --> 00:00:42,579
socks that<font color="#E5E5E5"> I can throw in the audience</font>

13
00:00:39,730 --> 00:00:43,959
if you<font color="#E5E5E5"> want them so</font><font color="#CCCCCC"> usually it's a if</font>

14
00:00:42,579 --> 00:00:46,839
you ask a good<font color="#CCCCCC"> question I throw a sock</font>

15
00:00:43,960 --> 00:00:50,260
<font color="#CCCCCC">but if you</font><font color="#E5E5E5"> say this talk is awesome you</font>

16
00:00:46,839 --> 00:00:54,929
will get a sock anyway so so be sure to

17
00:00:50,260 --> 00:00:57,190
yell something<font color="#E5E5E5"> and I throw socks</font><font color="#CCCCCC"> okay</font>

18
00:00:54,929 --> 00:01:02,709
see there is<font color="#CCCCCC"> one</font><font color="#E5E5E5"> we are you know the</font>

19
00:00:57,190 --> 00:01:06,039
rules<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so as</font><font color="#E5E5E5"> mentioned before I've</font>

20
00:01:02,709 --> 00:01:07,780
been<font color="#E5E5E5"> working on a deal</font><font color="#CCCCCC"> odor the idea of</font>

21
00:01:06,040 --> 00:01:09,850
<font color="#E5E5E5">pijl odor is that you can meet</font><font color="#CCCCCC"> weight</font>

22
00:01:07,780 --> 00:01:12,280
from another database<font color="#E5E5E5"> technology to</font>

23
00:01:09,850 --> 00:01:15,788
<font color="#CCCCCC">PostgreSQL in one common</font><font color="#E5E5E5"> line it only</font>

24
00:01:12,280 --> 00:01:17,409
needs<font color="#CCCCCC"> two parameters so your former</font>

25
00:01:15,789 --> 00:01:18,909
database connection string and your

26
00:01:17,409 --> 00:01:21,460
<font color="#CCCCCC">PostgreSQL connection string it will</font>

27
00:01:18,909 --> 00:01:23,320
<font color="#E5E5E5">figure it all out by itself</font><font color="#CCCCCC"> figure</font><font color="#E5E5E5"> out</font>

28
00:01:21,460 --> 00:01:25,390
the schema the datatypes the casting

29
00:01:23,320 --> 00:01:27,070
rules<font color="#CCCCCC"> everything the default values</font>

30
00:01:25,390 --> 00:01:30,009
<font color="#CCCCCC">foreign keys primary keys index is</font>

31
00:01:27,070 --> 00:01:31,449
<font color="#E5E5E5">etcetera and it's pretty good</font><font color="#CCCCCC"> at it the</font>

32
00:01:30,009 --> 00:01:32,740
goal when I wrote<font color="#E5E5E5"> this tool is that</font>

33
00:01:31,450 --> 00:01:34,359
<font color="#E5E5E5">there is a lot of open source software</font>

34
00:01:32,740 --> 00:01:36,280
<font color="#CCCCCC">that I would like</font><font color="#E5E5E5"> to use but they're</font>

35
00:01:34,359 --> 00:01:38,500
<font color="#E5E5E5">using my sequel and I will not trust my</font>

36
00:01:36,280 --> 00:01:41,649
data<font color="#E5E5E5"> to that</font><font color="#CCCCCC"> technology it's</font><font color="#E5E5E5"> personal</font>

37
00:01:38,500 --> 00:01:43,030
<font color="#CCCCCC">ok and so no you don't have</font><font color="#E5E5E5"> an excuse if</font>

38
00:01:41,649 --> 00:01:44,409
you're working<font color="#CCCCCC"> with my sequel you just</font>

39
00:01:43,030 --> 00:01:46,570
run<font color="#E5E5E5"> one command line and you can use</font>

40
00:01:44,409 --> 00:01:50,280
<font color="#CCCCCC">PostgreSQL instead</font><font color="#E5E5E5"> so no excuses anymore</font>

41
00:01:46,570 --> 00:01:53,979
<font color="#E5E5E5">just use it so ok let's dive in with a</font>

42
00:01:50,280 --> 00:01:56,409
data<font color="#CCCCCC"> modelling the time</font><font color="#E5E5E5"> modeling is a</font>

43
00:01:53,979 --> 00:01:59,619
very important part of using<font color="#CCCCCC"> PostgreSQL</font>

44
00:01:56,409 --> 00:02:03,939
because some<font color="#CCCCCC"> databases</font><font color="#E5E5E5"> technology around</font>

45
00:01:59,619 --> 00:02:08,199
<font color="#E5E5E5">here are proud to be</font><font color="#CCCCCC"> schematics we are</font>

46
00:02:03,939 --> 00:02:11,519
not we are not<font color="#CCCCCC"> schema s and we need to</font>

47
00:02:08,199 --> 00:02:15,880
see what it<font color="#E5E5E5"> means so</font><font color="#CCCCCC"> this quote is from</font>

48
00:02:11,520 --> 00:02:17,410
<font color="#E5E5E5">Rob Pike and from a book issued in the</font>

49
00:02:15,880 --> 00:02:20,380
70s I believe

50
00:02:17,410 --> 00:02:22,960
so it says that<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you if you have</font>

51
00:02:20,380 --> 00:02:25,570
chosen the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> data structures and</font>

52
00:02:22,960 --> 00:02:28,660
<font color="#E5E5E5">organized things well the algorithms</font>

53
00:02:25,570 --> 00:02:31,570
<font color="#E5E5E5">will almost always be self-evident data</font>

54
00:02:28,660 --> 00:02:34,359
<font color="#E5E5E5">structures not algorithms are central to</font>

55
00:02:31,570 --> 00:02:35,980
programming<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so it's meant that</font>

56
00:02:34,360 --> 00:02:39,160
application developers who are writing

57
00:02:35,980 --> 00:02:40,750
<font color="#CCCCCC">code if you're writing Python code</font><font color="#E5E5E5"> then</font>

58
00:02:39,160 --> 00:02:43,150
<font color="#E5E5E5">you know you need</font><font color="#CCCCCC"> to think about</font><font color="#E5E5E5"> or you</font>

59
00:02:40,750 --> 00:02:45,100
organize the<font color="#E5E5E5"> data in your code like in a</font>

60
00:02:43,150 --> 00:02:47,470
class in a structure you know<font color="#CCCCCC"> named</font>

61
00:02:45,100 --> 00:02:50,019
tuple in something else<font color="#E5E5E5"> and all you pass</font>

62
00:02:47,470 --> 00:02:51,310
data along that's the most important

63
00:02:50,020 --> 00:02:53,110
thing enjoy right about the same

64
00:02:51,310 --> 00:02:55,540
terminology<font color="#E5E5E5"> is if you</font><font color="#CCCCCC"> lingo it's strict</font>

65
00:02:53,110 --> 00:02:57,430
<font color="#E5E5E5">if you really see it</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> yeah but it's</font>

66
00:02:55,540 --> 00:03:00,100
always the same<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> that if your data</font>

67
00:02:57,430 --> 00:03:01,900
in the code is<font color="#E5E5E5"> well organized then the</font>

68
00:03:00,100 --> 00:03:03,970
code is it is easy to read and<font color="#CCCCCC"> you don't</font>

69
00:03:01,900 --> 00:03:05,680
have<font color="#E5E5E5"> so</font><font color="#CCCCCC"> many bugs if the data is a mess</font>

70
00:03:03,970 --> 00:03:07,420
you have<font color="#E5E5E5"> a lots of bugs because</font><font color="#CCCCCC"> every</font>

71
00:03:05,680 --> 00:03:09,520
anything<font color="#E5E5E5"> you want to do is going to be</font>

72
00:03:07,420 --> 00:03:11,920
complex<font color="#E5E5E5"> to do when the data</font><font color="#CCCCCC"> is not</font>

73
00:03:09,520 --> 00:03:14,760
doesn't<font color="#CCCCCC"> lend itself</font><font color="#E5E5E5"> to being processed</font><font color="#CCCCCC"> a</font>

74
00:03:11,920 --> 00:03:18,220
specific way it's<font color="#E5E5E5"> exactly the same with</font>

75
00:03:14,760 --> 00:03:20,019
database modeling<font color="#E5E5E5"> if you're if</font><font color="#CCCCCC"> you're</font>

76
00:03:18,220 --> 00:03:24,340
having a really<font color="#E5E5E5"> hard time writing your</font>

77
00:03:20,020 --> 00:03:26,500
sequel queries<font color="#E5E5E5"> most of the time it could</font>

78
00:03:24,340 --> 00:03:28,090
<font color="#E5E5E5">be one</font><font color="#CCCCCC"> or the other</font><font color="#E5E5E5"> reason the first</font>

79
00:03:26,500 --> 00:03:29,680
version<font color="#CCCCCC"> usually is you don't know sequel</font>

80
00:03:28,090 --> 00:03:31,470
very well so it's normal that you<font color="#E5E5E5"> find</font>

81
00:03:29,680 --> 00:03:35,200
it hard<font color="#E5E5E5"> to do because you know there yet</font>

82
00:03:31,470 --> 00:03:37,180
the<font color="#E5E5E5"> other reason is the schema is not</font>

83
00:03:35,200 --> 00:03:38,829
<font color="#E5E5E5">adapted</font><font color="#CCCCCC"> to your business case so of</font>

84
00:03:37,180 --> 00:03:40,840
<font color="#E5E5E5">course every query you want to write is</font>

85
00:03:38,830 --> 00:03:43,660
<font color="#CCCCCC">going to be hard to write so if you have</font>

86
00:03:40,840 --> 00:03:47,320
a proper schema design<font color="#E5E5E5"> then sequel is</font>

87
00:03:43,660 --> 00:03:49,270
really easy<font color="#E5E5E5"> to write so in this talk</font>

88
00:03:47,320 --> 00:03:52,329
we're going<font color="#E5E5E5"> to overview the classic</font>

89
00:03:49,270 --> 00:03:55,660
rules that allow you<font color="#E5E5E5"> to design a schema</font>

90
00:03:52,330 --> 00:03:59,140
properly before<font color="#CCCCCC"> we do that I want</font><font color="#E5E5E5"> to</font>

91
00:03:55,660 --> 00:04:03,549
show some some example just to<font color="#CCCCCC"> get your</font>

92
00:03:59,140 --> 00:04:06,700
mind started because the rules are<font color="#CCCCCC"> a</font>

93
00:04:03,550 --> 00:04:09,430
<font color="#CCCCCC">little complex to handle so data</font>

94
00:04:06,700 --> 00:04:12,130
<font color="#CCCCCC">modelling</font><font color="#E5E5E5"> usually revolves around data</font>

95
00:04:09,430 --> 00:04:16,060
types constraints<font color="#E5E5E5"> and when we say</font>

96
00:04:12,130 --> 00:04:18,100
constraints in databases<font color="#E5E5E5"> so most people</font>

97
00:04:16,060 --> 00:04:20,440
we<font color="#E5E5E5"> don't want to have constraints you</font>

98
00:04:18,100 --> 00:04:22,540
know our lives<font color="#E5E5E5"> right we want to be free</font>

99
00:04:20,440 --> 00:04:25,419
to<font color="#E5E5E5"> whatever we want to whatever we fancy</font>

100
00:04:22,540 --> 00:04:27,700
we nobody likes or almost<font color="#CCCCCC"> nobody likes</font>

101
00:04:25,419 --> 00:04:29,530
having constraints<font color="#E5E5E5"> so most</font><font color="#CCCCCC"> of people</font>

102
00:04:27,700 --> 00:04:30,130
when we<font color="#CCCCCC"> talk about database constraints</font>

103
00:04:29,530 --> 00:04:33,849
there are

104
00:04:30,130 --> 00:04:35,590
<font color="#E5E5E5">constraints it's boring</font><font color="#CCCCCC"> so the the</font><font color="#E5E5E5"> I</font>

105
00:04:33,850 --> 00:04:37,060
think<font color="#E5E5E5"> the term should</font><font color="#CCCCCC"> be changed it's</font>

106
00:04:35,590 --> 00:04:39,369
not<font color="#E5E5E5"> a</font><font color="#CCCCCC"> constraints really that you're</font>

107
00:04:37,060 --> 00:04:41,620
having it's a guarantee<font color="#E5E5E5"> a very strong</font>

108
00:04:39,370 --> 00:04:44,970
guarantee for<font color="#E5E5E5"> your</font><font color="#CCCCCC"> data in the database</font>

109
00:04:41,620 --> 00:04:49,300
<font color="#CCCCCC">so we'll tell more about that in the</font>

110
00:04:44,970 --> 00:04:51,370
<font color="#E5E5E5">more slides but constraints is the</font>

111
00:04:49,300 --> 00:04:53,470
technical term<font color="#CCCCCC"> that everybody uses but</font>

112
00:04:51,370 --> 00:04:56,440
when you we should have<font color="#E5E5E5"> in</font><font color="#CCCCCC"> mind</font><font color="#E5E5E5"> these</font>

113
00:04:53,470 --> 00:04:59,320
guarantees<font color="#E5E5E5"> so</font><font color="#CCCCCC"> almost how</font><font color="#E5E5E5"> many guarantees</font>

114
00:04:56,440 --> 00:05:01,719
or strong the guarantees you<font color="#CCCCCC"> have anew</font>

115
00:04:59,320 --> 00:05:03,340
<font color="#E5E5E5">the device you want</font><font color="#CCCCCC"> to have if your</font>

116
00:05:01,720 --> 00:05:06,160
schema-less you have zero guarantees

117
00:05:03,340 --> 00:05:08,310
<font color="#E5E5E5">it's all up to you that's why we are</font>

118
00:05:06,160 --> 00:05:10,690
<font color="#CCCCCC">really happy with PostgreSQL</font><font color="#E5E5E5"> to have a</font>

119
00:05:08,310 --> 00:05:12,190
data<font color="#CCCCCC"> modelling</font><font color="#E5E5E5"> issues and the schema and</font>

120
00:05:10,690 --> 00:05:14,740
cetera<font color="#E5E5E5"> because it means we</font><font color="#CCCCCC"> have strong</font>

121
00:05:12,190 --> 00:05:16,420
warranties and from implementing

122
00:05:14,740 --> 00:05:20,140
<font color="#E5E5E5">constraints usually we use primary keys</font>

123
00:05:16,420 --> 00:05:24,310
foreign keys<font color="#CCCCCC"> checks right</font><font color="#E5E5E5"> so couple</font>

124
00:05:20,140 --> 00:05:27,250
examples this<font color="#E5E5E5"> is a table where where you</font>

125
00:05:24,310 --> 00:05:29,500
would handle articles like news articles

126
00:05:27,250 --> 00:05:33,070
<font color="#CCCCCC">it's a really</font><font color="#E5E5E5"> classic one with a primary</font>

127
00:05:29,500 --> 00:05:35,650
key and this<font color="#E5E5E5"> schema is wrong okay</font><font color="#CCCCCC"> is it</font>

128
00:05:33,070 --> 00:05:38,800
<font color="#CCCCCC">obvious</font><font color="#E5E5E5"> for everyone why it is obviously</font>

129
00:05:35,650 --> 00:05:41,409
wrong<font color="#E5E5E5"> okay so we'll get</font><font color="#CCCCCC"> back to that</font>

130
00:05:38,800 --> 00:05:44,500
later<font color="#E5E5E5"> in the talk so just I'm</font><font color="#CCCCCC"> just</font>

131
00:05:41,410 --> 00:05:47,350
<font color="#CCCCCC">trying to</font><font color="#E5E5E5"> tease</font><font color="#CCCCCC"> your easel this one is</font>

132
00:05:44,500 --> 00:05:49,030
<font color="#CCCCCC">okay it's a partial unique index example</font>

133
00:05:47,350 --> 00:05:50,920
that I just<font color="#E5E5E5"> could be pasted from an</font>

134
00:05:49,030 --> 00:05:52,020
example example and Stack Overflow or

135
00:05:50,920 --> 00:05:55,690
<font color="#E5E5E5">something</font>

136
00:05:52,020 --> 00:05:59,469
so it's implementing toggles for like a

137
00:05:55,690 --> 00:06:01,750
UI for for the users<font color="#E5E5E5"> and they can toggle</font>

138
00:05:59,470 --> 00:06:04,420
it<font color="#CCCCCC"> on and off so they can enable it</font><font color="#E5E5E5"> or</font>

139
00:06:01,750 --> 00:06:06,490
disable<font color="#E5E5E5"> it and when it's disabled you</font>

140
00:06:04,420 --> 00:06:10,360
want to remember they did use<font color="#CCCCCC"> it before</font>

141
00:06:06,490 --> 00:06:12,820
and then they disabled it<font color="#E5E5E5"> so if it's</font>

142
00:06:10,360 --> 00:06:15,880
currently<font color="#E5E5E5"> have a value in disable that</font>

143
00:06:12,820 --> 00:06:17,590
<font color="#E5E5E5">columns then you don't want basically</font>

144
00:06:15,880 --> 00:06:19,500
you<font color="#E5E5E5"> don't you're not taking care</font><font color="#CCCCCC"> of it</font>

145
00:06:17,590 --> 00:06:22,210
in the<font color="#E5E5E5"> application so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can say</font><font color="#CCCCCC"> that</font>

146
00:06:19,500 --> 00:06:25,210
you have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> unique index on the toggles</font>

147
00:06:22,210 --> 00:06:28,780
but<font color="#E5E5E5"> only it it only needs to be unique</font>

148
00:06:25,210 --> 00:06:30,489
<font color="#CCCCCC">if it's not been disabled</font><font color="#E5E5E5"> okay when you</font>

149
00:06:28,780 --> 00:06:34,210
you could do partial unique<font color="#E5E5E5"> index in</font>

150
00:06:30,490 --> 00:06:34,960
<font color="#CCCCCC">PostgreSQL</font><font color="#E5E5E5"> yeah not very yeah some of</font>

151
00:06:34,210 --> 00:06:39,609
you okay good

152
00:06:34,960 --> 00:06:41,560
so it's a<font color="#E5E5E5"> really nice trick</font><font color="#CCCCCC"> to have and</font>

153
00:06:39,610 --> 00:06:43,510
another<font color="#E5E5E5"> kind of a guarantee</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we are</font>

154
00:06:41,560 --> 00:06:45,790
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to see later is exclude you</font>

155
00:06:43,510 --> 00:06:48,370
using<font color="#E5E5E5"> Geist so who's done</font><font color="#CCCCCC"> that before in</font>

156
00:06:45,790 --> 00:06:50,320
<font color="#CCCCCC">PostgreSQL</font><font color="#E5E5E5"> okay for the other guys</font><font color="#CCCCCC"> we're</font>

157
00:06:48,370 --> 00:06:51,480
going<font color="#CCCCCC"> to dive into</font><font color="#E5E5E5"> that later in the</font>

158
00:06:50,320 --> 00:06:54,849
talk

159
00:06:51,480 --> 00:06:57,430
the goal of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> way is modeling the</font>

160
00:06:54,850 --> 00:06:59,380
first goal is<font color="#CCCCCC"> to avoid anomalies so</font>

161
00:06:57,430 --> 00:07:02,350
there<font color="#E5E5E5"> are three possible kind of</font>

162
00:06:59,380 --> 00:07:05,200
anomalies inserted<font color="#E5E5E5"> I did it</font><font color="#CCCCCC"> basically so</font>

163
00:07:02,350 --> 00:07:08,230
update anomaly<font color="#E5E5E5"> the schema is wrong the</font>

164
00:07:05,200 --> 00:07:10,360
model is not good<font color="#E5E5E5"> because you see in the</font>

165
00:07:08,230 --> 00:07:13,360
<font color="#E5E5E5">same table we have</font><font color="#CCCCCC"> the employee ID its</font>

166
00:07:10,360 --> 00:07:15,190
address and a set<font color="#CCCCCC"> of skills</font><font color="#E5E5E5"> that are</font>

167
00:07:13,360 --> 00:07:19,510
associated<font color="#E5E5E5"> with the employee employee</font>

168
00:07:15,190 --> 00:07:21,520
<font color="#E5E5E5">but this employee apparently I moved in</font>

169
00:07:19,510 --> 00:07:23,349
in<font color="#E5E5E5"> between where I learned not to be</font><font color="#CCCCCC"> a</font>

170
00:07:21,520 --> 00:07:25,419
public speaker<font color="#CCCCCC"> and</font><font color="#E5E5E5"> when he learned</font>

171
00:07:23,350 --> 00:07:28,360
currently is not<font color="#E5E5E5"> living somewhere else</font>

172
00:07:25,420 --> 00:07:30,040
<font color="#CCCCCC">so now we have 200 in the database</font><font color="#E5E5E5"> that</font>

173
00:07:28,360 --> 00:07:32,710
are disagreeing with each<font color="#E5E5E5"> other</font>

174
00:07:30,040 --> 00:07:35,020
so which<font color="#E5E5E5"> is the right one what is the</font>

175
00:07:32,710 --> 00:07:37,270
<font color="#CCCCCC">current address of</font><font color="#E5E5E5"> this guy well we</font>

176
00:07:35,020 --> 00:07:39,190
don't know we don't<font color="#CCCCCC"> know and why don't</font>

177
00:07:37,270 --> 00:07:42,700
<font color="#CCCCCC">we know because the the schema is</font><font color="#E5E5E5"> wrong</font>

178
00:07:39,190 --> 00:07:46,210
we<font color="#CCCCCC"> should have the address at</font><font color="#E5E5E5"> only one</font>

179
00:07:42,700 --> 00:07:47,500
place not two<font color="#E5E5E5"> of them so how to make it</font>

180
00:07:46,210 --> 00:07:49,840
<font color="#E5E5E5">happen</font><font color="#CCCCCC"> we'll see that later so that's</font>

181
00:07:47,500 --> 00:07:51,490
the update<font color="#E5E5E5"> anomaly because we we have</font>

182
00:07:49,840 --> 00:07:53,109
updated the address and<font color="#E5E5E5"> now we have two</font>

183
00:07:51,490 --> 00:07:58,360
of<font color="#CCCCCC"> them</font><font color="#E5E5E5"> and we</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know which one is</font>

184
00:07:53,110 --> 00:08:00,970
<font color="#E5E5E5">the right</font><font color="#CCCCCC"> one insertion anomaly is let's</font>

185
00:07:58,360 --> 00:08:03,430
say that<font color="#CCCCCC"> you have a schema for the in</font>

186
00:08:00,970 --> 00:08:06,910
the faculty for professors who are

187
00:08:03,430 --> 00:08:10,300
giving<font color="#E5E5E5"> courses and so each professor</font>

188
00:08:06,910 --> 00:08:15,220
might be given one<font color="#E5E5E5"> or several courses</font>

189
00:08:10,300 --> 00:08:17,230
<font color="#E5E5E5">and this new one has been hired in the</font>

190
00:08:15,220 --> 00:08:20,230
<font color="#E5E5E5">faculty but it doesn't have a course yet</font>

191
00:08:17,230 --> 00:08:21,820
and with this model we<font color="#E5E5E5"> cannot even enter</font>

192
00:08:20,230 --> 00:08:24,760
<font color="#CCCCCC">the information because it doesn't have</font>

193
00:08:21,820 --> 00:08:27,790
a course yet<font color="#CCCCCC"> okay so it's obviously</font>

194
00:08:24,760 --> 00:08:29,110
wrong<font color="#CCCCCC"> right so that's insertion anomaly</font>

195
00:08:27,790 --> 00:08:32,770
<font color="#CCCCCC">you</font><font color="#E5E5E5"> cannot insert the data with that</font>

196
00:08:29,110 --> 00:08:35,229
model and then of course the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> side</font>

197
00:08:32,770 --> 00:08:37,120
of<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is the deletion anomaly so</font><font color="#E5E5E5"> now if</font>

198
00:08:35,229 --> 00:08:39,040
this<font color="#CCCCCC"> guy is not doing that course</font>

199
00:08:37,120 --> 00:08:41,349
<font color="#CCCCCC">anymore you want to delete the line but</font>

200
00:08:39,039 --> 00:08:42,610
<font color="#CCCCCC">if you do you forget</font><font color="#E5E5E5"> about him you don't</font>

201
00:08:41,349 --> 00:08:44,020
have him in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> system anymore</font><font color="#CCCCCC"> so you</font>

202
00:08:42,610 --> 00:08:45,670
cannot show<font color="#CCCCCC"> up at the office</font><font color="#E5E5E5"> or whatever</font>

203
00:08:44,020 --> 00:08:47,620
<font color="#CCCCCC">I</font><font color="#E5E5E5"> don't know</font><font color="#CCCCCC"> oh it works exactly their</font>

204
00:08:45,670 --> 00:08:49,780
system but because<font color="#E5E5E5"> it doesn't have a</font>

205
00:08:47,620 --> 00:08:50,380
course<font color="#E5E5E5"> anymore</font><font color="#CCCCCC"> is not on the</font><font color="#E5E5E5"> list</font>

206
00:08:49,780 --> 00:08:52,689
anymore

207
00:08:50,380 --> 00:08:54,430
so I think it's quite<font color="#CCCCCC"> obvious for</font><font color="#E5E5E5"> a</font>

208
00:08:52,690 --> 00:08:54,920
<font color="#E5E5E5">buddy everybody why those schemas</font><font color="#CCCCCC"> are</font>

209
00:08:54,430 --> 00:09:00,469
wrong

210
00:08:54,920 --> 00:09:02,420
so<font color="#E5E5E5"> no we are going to try</font><font color="#CCCCCC"> to explain the</font>

211
00:09:00,470 --> 00:09:06,980
<font color="#E5E5E5">rules around how not to get</font><font color="#CCCCCC"> that schema</font>

212
00:09:02,420 --> 00:09:11,360
and answer more<font color="#E5E5E5"> the thing that is</font>

213
00:09:06,980 --> 00:09:13,820
central to<font color="#E5E5E5"> the best design is that</font><font color="#CCCCCC"> so I</font>

214
00:09:11,360 --> 00:09:16,130
like<font color="#E5E5E5"> this other quote to explain it so I</font>

215
00:09:13,820 --> 00:09:18,410
will<font color="#E5E5E5"> read it out loud again</font><font color="#CCCCCC"> so it's from</font>

216
00:09:16,130 --> 00:09:20,450
<font color="#E5E5E5">the Fred Brooks and he said show me your</font>

217
00:09:18,410 --> 00:09:22,250
<font color="#E5E5E5">flowcharts and conceal your tables and</font>

218
00:09:20,450 --> 00:09:25,040
<font color="#E5E5E5">I'll shall</font><font color="#CCCCCC"> continue to be mystified</font>

219
00:09:22,250 --> 00:09:26,600
show me your tables<font color="#E5E5E5"> and I want</font><font color="#CCCCCC"> usually</font>

220
00:09:25,040 --> 00:09:30,079
need your<font color="#CCCCCC"> flow chart</font><font color="#E5E5E5"> because there</font><font color="#CCCCCC"> will</font>

221
00:09:26,600 --> 00:09:32,420
be obvious<font color="#CCCCCC"> okay the database design</font>

222
00:09:30,079 --> 00:09:34,069
should<font color="#E5E5E5"> be that abuse when we look at</font>

223
00:09:32,420 --> 00:09:36,229
<font color="#E5E5E5">your database design if you don't</font>

224
00:09:34,070 --> 00:09:38,959
understand the business from it usually

225
00:09:36,230 --> 00:09:40,100
it means it's not<font color="#CCCCCC"> so good</font><font color="#E5E5E5"> it means that</font>

226
00:09:38,959 --> 00:09:41,869
you've been lazy

227
00:09:40,100 --> 00:09:44,600
<font color="#CCCCCC">maybe you</font><font color="#E5E5E5"> implemented the database</font>

228
00:09:41,870 --> 00:09:47,750
design the same<font color="#E5E5E5"> way you did your object</font>

229
00:09:44,600 --> 00:09:50,390
oriented architecture<font color="#E5E5E5"> in your software</font>

230
00:09:47,750 --> 00:09:53,930
<font color="#E5E5E5">but</font><font color="#CCCCCC"> your software is going</font><font color="#E5E5E5"> to be tasked</font>

231
00:09:50,390 --> 00:09:55,790
<font color="#CCCCCC">with implementing a particular user</font>

232
00:09:53,930 --> 00:09:57,319
workflow<font color="#E5E5E5"> so you take one user in the</font>

233
00:09:55,790 --> 00:09:58,880
<font color="#CCCCCC">system if it's a web application</font><font color="#E5E5E5"> for</font>

234
00:09:57,320 --> 00:10:01,910
<font color="#CCCCCC">example you're going to drive the user</font>

235
00:09:58,880 --> 00:10:04,399
<font color="#CCCCCC">and enable the user to</font><font color="#E5E5E5"> do something like</font>

236
00:10:01,910 --> 00:10:07,750
a particular workflow<font color="#E5E5E5"> and the code is</font>

237
00:10:04,399 --> 00:10:11,990
<font color="#CCCCCC">all about that but the database is</font>

238
00:10:07,750 --> 00:10:14,240
guaranteeing the data<font color="#E5E5E5"> business</font><font color="#CCCCCC"> model is</font>

239
00:10:11,990 --> 00:10:17,449
<font color="#CCCCCC">guarantees constraint etc for the wool</font>

240
00:10:14,240 --> 00:10:19,190
system at one at once<font color="#CCCCCC"> tie</font><font color="#E5E5E5"> at one time so</font>

241
00:10:17,449 --> 00:10:21,709
<font color="#E5E5E5">it's not the same</font><font color="#CCCCCC"> thing serving one user</font>

242
00:10:19,190 --> 00:10:24,079
<font color="#E5E5E5">and making sure that the</font><font color="#CCCCCC"> system globally</font>

243
00:10:21,709 --> 00:10:25,579
is consistent<font color="#E5E5E5"> so your</font><font color="#CCCCCC"> advice is</font><font color="#E5E5E5"> about</font>

244
00:10:24,079 --> 00:10:29,660
the wool system being consistent and

245
00:10:25,579 --> 00:10:31,489
your code is<font color="#CCCCCC"> about allowing users to do</font>

246
00:10:29,660 --> 00:10:33,589
what they have to<font color="#CCCCCC"> do with</font><font color="#E5E5E5"> your system so</font>

247
00:10:31,490 --> 00:10:38,149
there is a few<font color="#E5E5E5"> reasons why it should</font><font color="#CCCCCC"> be</font>

248
00:10:33,589 --> 00:10:42,079
the same model anyway so practically for

249
00:10:38,149 --> 00:10:44,779
the tooling some people would use a

250
00:10:42,079 --> 00:10:48,050
graphical stuff<font color="#CCCCCC"> etc so it's a it's a</font>

251
00:10:44,779 --> 00:10:50,570
<font color="#CCCCCC">very nice way if you are more visual</font>

252
00:10:48,050 --> 00:10:53,329
it's a nice way to basically<font color="#E5E5E5"> to</font>

253
00:10:50,570 --> 00:10:56,420
understand the problem set<font color="#CCCCCC"> but then when</font>

254
00:10:53,329 --> 00:10:59,930
I usually<font color="#E5E5E5"> do myself</font><font color="#CCCCCC"> is I</font><font color="#E5E5E5"> just write a</font>

255
00:10:56,420 --> 00:11:03,110
sequence quit<font color="#E5E5E5"> and I do begin</font><font color="#CCCCCC"> and</font>

256
00:10:59,930 --> 00:11:04,670
<font color="#CCCCCC">rollback and so I needed that</font><font color="#E5E5E5"> thing to</font>

257
00:11:03,110 --> 00:11:07,069
fit on the<font color="#E5E5E5"> slide so it's a very small</font>

258
00:11:04,670 --> 00:11:08,410
<font color="#CCCCCC">one</font><font color="#E5E5E5"> usually I insert more things into</font>

259
00:11:07,069 --> 00:11:10,240
<font color="#E5E5E5">the tables and then I watch</font>

260
00:11:08,410 --> 00:11:12,610
<font color="#E5E5E5">sample queries that I know we love to</font>

261
00:11:10,240 --> 00:11:14,500
<font color="#CCCCCC">use in the application</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> again if the</font>

262
00:11:12,610 --> 00:11:16,150
queries<font color="#E5E5E5"> are complex to write I'm like</font>

263
00:11:14,500 --> 00:11:18,160
maybe that's<font color="#E5E5E5"> not the right schema if</font>

264
00:11:16,150 --> 00:11:20,770
every query is easy to do I'm like<font color="#E5E5E5"> okay</font>

265
00:11:18,160 --> 00:11:23,350
<font color="#E5E5E5">and</font><font color="#CCCCCC"> maybe I can go with that and you see</font>

266
00:11:20,770 --> 00:11:25,060
this trick here<font color="#E5E5E5"> rollback so I think to</font>

267
00:11:23,350 --> 00:11:27,850
this<font color="#CCCCCC"> day I'm not sure to this day but</font>

268
00:11:25,060 --> 00:11:29,800
<font color="#CCCCCC">PostgreSQL is the only</font><font color="#E5E5E5"> one or maybe one</font>

269
00:11:27,850 --> 00:11:33,220
of<font color="#E5E5E5"> the very few</font><font color="#CCCCCC"> systems where you can</font>

270
00:11:29,800 --> 00:11:35,620
actually<font color="#E5E5E5"> have transactions and details</font>

271
00:11:33,220 --> 00:11:37,990
<font color="#E5E5E5">so you can create schema create table</font>

272
00:11:35,620 --> 00:11:42,370
and then roll back<font color="#E5E5E5"> and nothing is there</font>

273
00:11:37,990 --> 00:11:44,350
<font color="#E5E5E5">anymore okay so in other systems that</font><font color="#CCCCCC"> I</font>

274
00:11:42,370 --> 00:11:47,020
won't name but as soon as you do create

275
00:11:44,350 --> 00:11:49,510
<font color="#CCCCCC">schema or great table then there</font><font color="#E5E5E5"> is an</font>

276
00:11:47,020 --> 00:11:51,130
implicit commit<font color="#E5E5E5"> for the transaction so</font>

277
00:11:49,510 --> 00:11:52,720
when you do rollback<font color="#CCCCCC"> then the system</font><font color="#E5E5E5"> is</font>

278
00:11:51,130 --> 00:11:54,880
like<font color="#E5E5E5"> there is no transaction running</font>

279
00:11:52,720 --> 00:11:57,580
<font color="#CCCCCC">which</font><font color="#E5E5E5"> is the most scariest warning ever</font>

280
00:11:54,880 --> 00:11:59,770
<font color="#E5E5E5">and like commit or rollback and no there</font>

281
00:11:57,580 --> 00:12:03,760
is no<font color="#E5E5E5"> transaction currently happening</font>

282
00:11:59,770 --> 00:12:05,380
<font color="#E5E5E5">what okay so with</font><font color="#CCCCCC"> PostgreSQL you can</font>

283
00:12:03,760 --> 00:12:08,170
actually<font color="#E5E5E5"> do that and so you can refine</font>

284
00:12:05,380 --> 00:12:09,850
<font color="#E5E5E5">your schema as you go</font><font color="#CCCCCC"> because when you</font>

285
00:12:08,170 --> 00:12:11,709
do roll back<font color="#CCCCCC"> you're back</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> a pristine</font>

286
00:12:09,850 --> 00:12:13,330
<font color="#E5E5E5">stage again so you can do it as many</font>

287
00:12:11,710 --> 00:12:15,280
<font color="#CCCCCC">times as you want to and you can</font><font color="#E5E5E5"> change</font>

288
00:12:13,330 --> 00:12:16,900
your<font color="#CCCCCC"> mind</font><font color="#E5E5E5"> like maybe 50 times in a day</font>

289
00:12:15,280 --> 00:12:19,030
and play around<font color="#E5E5E5"> with it</font><font color="#CCCCCC"> and see what</font>

290
00:12:16,900 --> 00:12:22,140
<font color="#CCCCCC">happens you just</font><font color="#E5E5E5"> run the script</font><font color="#CCCCCC"> and at</font>

291
00:12:19,030 --> 00:12:24,850
the end nothing<font color="#E5E5E5"> happened</font><font color="#CCCCCC"> so you</font><font color="#E5E5E5"> had some</font>

292
00:12:22,140 --> 00:12:26,080
stats<font color="#CCCCCC"> around at the</font><font color="#E5E5E5"> end of it some</font>

293
00:12:24,850 --> 00:12:27,790
queries that are giving<font color="#CCCCCC"> more information</font>

294
00:12:26,080 --> 00:12:29,470
<font color="#CCCCCC">about the schema and when you're happy</font>

295
00:12:27,790 --> 00:12:30,849
<font color="#CCCCCC">with it</font><font color="#E5E5E5"> then</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> change that into a</font>

296
00:12:29,470 --> 00:12:33,390
commit you run it<font color="#E5E5E5"> again and</font><font color="#CCCCCC"> now you</font><font color="#E5E5E5"> have</font>

297
00:12:30,850 --> 00:12:37,180
<font color="#E5E5E5">your database schema to play around with</font>

298
00:12:33,390 --> 00:12:39,850
<font color="#E5E5E5">some people are using</font><font color="#CCCCCC"> averred tools</font>

299
00:12:37,180 --> 00:12:44,229
called the horror<font color="#CCCCCC"> M and</font><font color="#E5E5E5"> I say it's an</font>

300
00:12:39,850 --> 00:12:46,210
<font color="#CCCCCC">object</font><font color="#E5E5E5"> relational mapping and almost</font>

301
00:12:44,230 --> 00:12:51,010
every one<font color="#CCCCCC"> of them that I had to have a</font>

302
00:12:46,210 --> 00:12:54,360
look at is doing it wrong because the

303
00:12:51,010 --> 00:12:57,810
are in<font color="#CCCCCC"> our M stands for</font><font color="#E5E5E5"> relation right</font>

304
00:12:54,360 --> 00:13:00,430
<font color="#E5E5E5">relation is the result of a sequel query</font>

305
00:12:57,810 --> 00:13:03,400
so one kind<font color="#CCCCCC"> of so do you know that in</font>

306
00:13:00,430 --> 00:13:05,109
the sequel<font color="#CCCCCC"> standard</font><font color="#E5E5E5"> so we have select</font>

307
00:13:03,400 --> 00:13:07,360
query and we also have<font color="#E5E5E5"> another query</font>

308
00:13:05,110 --> 00:13:08,880
that is<font color="#E5E5E5"> named table so if you have a</font>

309
00:13:07,360 --> 00:13:12,370
<font color="#CCCCCC">table like in the previous example</font>

310
00:13:08,880 --> 00:13:15,010
<font color="#CCCCCC">category</font><font color="#E5E5E5"> if you do table category it</font>

311
00:13:12,370 --> 00:13:17,730
will dump the<font color="#CCCCCC"> rule content of the table</font>

312
00:13:15,010 --> 00:13:20,740
category okay<font color="#CCCCCC"> so obviously a table is a</font>

313
00:13:17,730 --> 00:13:22,060
kind of a relation<font color="#E5E5E5"> so the if you have a</font>

314
00:13:20,740 --> 00:13:26,310
table<font color="#CCCCCC"> you can</font>

315
00:13:22,060 --> 00:13:29,050
use it as a<font color="#CCCCCC"> relation</font><font color="#E5E5E5"> but it's only one</font>

316
00:13:26,310 --> 00:13:31,030
specific<font color="#CCCCCC"> case for</font><font color="#E5E5E5"> relations it's not the</font>

317
00:13:29,050 --> 00:13:33,880
general<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> the general</font><font color="#E5E5E5"> idea is that</font>

318
00:13:31,030 --> 00:13:37,030
<font color="#E5E5E5">any and every SQL query that you are</font>

319
00:13:33,880 --> 00:13:38,830
using is defining a relation and can be

320
00:13:37,030 --> 00:13:41,110
used as a relation<font color="#E5E5E5"> that's why when you</font>

321
00:13:38,830 --> 00:13:42,730
do a select with a from<font color="#CCCCCC"> clause in the</font>

322
00:13:41,110 --> 00:13:45,250
from clause<font color="#CCCCCC"> you can have sub selects</font>

323
00:13:42,730 --> 00:13:47,140
because does any select kadmiel relation

324
00:13:45,250 --> 00:13:50,290
so it can be used as a from source in a

325
00:13:47,140 --> 00:13:52,990
query<font color="#CCCCCC"> okay so the ORM</font><font color="#E5E5E5"> should be</font><font color="#CCCCCC"> actually</font>

326
00:13:50,290 --> 00:13:55,209
mapping<font color="#E5E5E5"> the relation</font><font color="#CCCCCC"> that is the result</font>

327
00:13:52,990 --> 00:13:57,460
<font color="#E5E5E5">of the sequel query into your objects in</font>

328
00:13:55,210 --> 00:13:59,440
the code<font color="#E5E5E5"> and that would be a good or m12</font>

329
00:13:57,460 --> 00:14:02,590
<font color="#E5E5E5">so if you're</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> Java have a look at</font>

330
00:13:59,440 --> 00:14:06,250
<font color="#E5E5E5">Duke g oq if you're doing doing PHP have</font>

331
00:14:02,590 --> 00:14:08,920
a look at pun<font color="#E5E5E5"> comm and there are others</font>

332
00:14:06,250 --> 00:14:10,420
<font color="#CCCCCC">in</font><font color="#E5E5E5"> other programming languages that the</font>

333
00:14:08,920 --> 00:14:11,589
two<font color="#E5E5E5"> of them</font><font color="#CCCCCC"> that I have in my mind so if</font>

334
00:14:10,420 --> 00:14:14,050
you're<font color="#CCCCCC"> doing something</font><font color="#E5E5E5"> else find it</font>

335
00:14:11,590 --> 00:14:16,060
<font color="#E5E5E5">there is there must be a tool</font><font color="#CCCCCC"> that is</font>

336
00:14:14,050 --> 00:14:18,219
doing it the proper way<font color="#CCCCCC"> but if you have</font>

337
00:14:16,060 --> 00:14:22,270
an ORM that is mapping<font color="#E5E5E5"> the base tables</font>

338
00:14:18,220 --> 00:14:23,470
to<font color="#CCCCCC"> your objects</font><font color="#E5E5E5"> in memory well you don't</font>

339
00:14:22,270 --> 00:14:28,329
<font color="#E5E5E5">have a use case for that really</font>

340
00:14:23,470 --> 00:14:30,340
so it helps no one and it's a<font color="#E5E5E5"> it's</font>

341
00:14:28,330 --> 00:14:33,100
complex to<font color="#CCCCCC"> use that straw and it's very</font>

342
00:14:30,340 --> 00:14:34,990
<font color="#E5E5E5">people would say that it's really hard</font>

343
00:14:33,100 --> 00:14:37,510
<font color="#E5E5E5">to map those two things together</font><font color="#CCCCCC"> that's</font>

344
00:14:34,990 --> 00:14:38,830
why I have this schema<font color="#E5E5E5"> here but it's</font>

345
00:14:37,510 --> 00:14:40,600
<font color="#E5E5E5">actually because usually I do it the</font>

346
00:14:38,830 --> 00:14:42,730
wrong<font color="#E5E5E5"> way if you try to solve the wrong</font>

347
00:14:40,600 --> 00:14:44,020
program<font color="#E5E5E5"> it's way harder that if you try</font>

348
00:14:42,730 --> 00:14:46,120
to<font color="#E5E5E5"> work to solve the problem you</font>

349
00:14:44,020 --> 00:14:51,329
<font color="#CCCCCC">actually have so the the mapping should</font>

350
00:14:46,120 --> 00:14:53,320
be done with a sequel<font color="#E5E5E5"> results so that</font>

351
00:14:51,330 --> 00:14:55,990
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> I want to say about where</font><font color="#E5E5E5"> I</font>

352
00:14:53,320 --> 00:14:58,840
<font color="#E5E5E5">am so we're going</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> database</font>

353
00:14:55,990 --> 00:15:01,030
design and modeling<font color="#E5E5E5"> and normalization</font>

354
00:14:58,840 --> 00:15:08,050
<font color="#E5E5E5">and I won't talk</font><font color="#CCCCCC"> any more about</font><font color="#E5E5E5"> our ends</font>

355
00:15:01,030 --> 00:15:11,290
<font color="#CCCCCC">okay so that was the</font><font color="#E5E5E5"> basis for database</font>

356
00:15:08,050 --> 00:15:13,089
modeling and the next step is<font color="#CCCCCC"> auto</font><font color="#E5E5E5"> you</font>

357
00:15:11,290 --> 00:15:15,819
know if your model is good enough or not

358
00:15:13,090 --> 00:15:17,890
<font color="#E5E5E5">so we're going to introduce a set of</font>

359
00:15:15,820 --> 00:15:21,510
rules<font color="#E5E5E5"> that</font><font color="#CCCCCC"> are really helpful</font><font color="#E5E5E5"> to to know</font>

360
00:15:17,890 --> 00:15:24,760
<font color="#E5E5E5">that before I do that any questions yet</font>

361
00:15:21,510 --> 00:15:29,170
no maybe not so nobody wants any<font color="#CCCCCC"> sucks I</font>

362
00:15:24,760 --> 00:15:31,930
guess yeah<font color="#E5E5E5"> some people do</font><font color="#CCCCCC"> I'm not good</font>

363
00:15:29,170 --> 00:15:34,010
at aiming so please<font color="#E5E5E5"> figure it out</font>

364
00:15:31,930 --> 00:15:35,060
there will be more<font color="#CCCCCC"> if people want more</font>

365
00:15:34,010 --> 00:15:38,770
<font color="#CCCCCC">yeah later</font>

366
00:15:35,060 --> 00:15:38,770
so normalization<font color="#E5E5E5"> what does it mean</font>

367
00:15:38,920 --> 00:15:44,630
<font color="#CCCCCC">basically it's following a set</font><font color="#E5E5E5"> of</font>

368
00:15:41,180 --> 00:15:48,140
principles that<font color="#CCCCCC"> are allow we allowing us</font>

369
00:15:44,630 --> 00:15:52,820
<font color="#E5E5E5">to think about</font><font color="#CCCCCC"> the schema</font><font color="#E5E5E5"> in a theory</font>

370
00:15:48,140 --> 00:15:55,370
<font color="#CCCCCC">own</font><font color="#E5E5E5"> practical way those are a few</font><font color="#CCCCCC"> of the</font>

371
00:15:52,820 --> 00:15:58,130
rules<font color="#E5E5E5"> that are in a book from the 70s</font>

372
00:15:55,370 --> 00:16:00,200
<font color="#CCCCCC">80s</font><font color="#E5E5E5"> about the basics of the UNIX</font>

373
00:15:58,130 --> 00:16:02,360
philosophy with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> strong principles</font>

374
00:16:00,200 --> 00:16:05,540
and I'd like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> use that because</font><font color="#E5E5E5"> as I</font>

375
00:16:02,360 --> 00:16:07,100
<font color="#E5E5E5">said the goal is really to have a chat</font>

376
00:16:05,540 --> 00:16:09,650
with developers application developers

377
00:16:07,100 --> 00:16:13,030
here<font color="#E5E5E5"> and UNIX principles they apply well</font>

378
00:16:09,650 --> 00:16:16,280
to building software<font color="#E5E5E5"> and what I want to</font>

379
00:16:13,030 --> 00:16:19,670
have<font color="#E5E5E5"> people think about is that the the</font>

380
00:16:16,280 --> 00:16:21,199
same design principles that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> use</font>

381
00:16:19,670 --> 00:16:23,329
to write<font color="#CCCCCC"> software you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> use them to</font>

382
00:16:21,200 --> 00:16:23,920
write your database schema it's the same

383
00:16:23,330 --> 00:16:27,110
thing

384
00:16:23,920 --> 00:16:27,860
so clarity simplicity transparency

385
00:16:27,110 --> 00:16:29,930
robustness

386
00:16:27,860 --> 00:16:32,720
that's nice goals that you want<font color="#CCCCCC"> to</font>

387
00:16:29,930 --> 00:16:34,420
achieve when<font color="#CCCCCC"> you do a</font><font color="#E5E5E5"> database</font><font color="#CCCCCC"> schema</font>

388
00:16:32,720 --> 00:16:37,190
and<font color="#E5E5E5"> because it's all</font><font color="#CCCCCC"> about the schema</font>

389
00:16:34,420 --> 00:16:40,160
<font color="#CCCCCC">one thing is drive don't repeat yourself</font>

390
00:16:37,190 --> 00:16:42,380
<font color="#E5E5E5">but I'm using also that slide as a</font>

391
00:16:40,160 --> 00:16:44,449
<font color="#E5E5E5">warning</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> topic is a little dry so</font>

392
00:16:42,380 --> 00:16:47,600
it's not that<font color="#CCCCCC"> fun to</font><font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> but it's</font>

393
00:16:44,450 --> 00:16:50,390
very<font color="#E5E5E5"> important so let's do it anyway so</font>

394
00:16:47,600 --> 00:16:51,950
who knows about normal<font color="#E5E5E5"> forums yeah so</font>

395
00:16:50,390 --> 00:16:54,110
you know<font color="#CCCCCC"> it's from</font><font color="#E5E5E5"> the 70s</font><font color="#CCCCCC"> so</font>

396
00:16:51,950 --> 00:16:56,450
everybody's like yeah<font color="#E5E5E5"> we're in the 2000</font>

397
00:16:54,110 --> 00:16:58,460
something<font color="#E5E5E5"> already it's like stuff for</font>

398
00:16:56,450 --> 00:17:01,550
granddaddy's but actually you know

399
00:16:58,460 --> 00:17:04,699
nobody<font color="#CCCCCC"> said that wrong now</font><font color="#E5E5E5"> so they're</font>

400
00:17:01,550 --> 00:17:08,569
still very<font color="#E5E5E5"> much to this day</font><font color="#CCCCCC"> important</font><font color="#E5E5E5"> to</font>

401
00:17:04,699 --> 00:17:10,910
remember figure out and use so when you

402
00:17:08,569 --> 00:17:14,359
design<font color="#CCCCCC"> a database schema</font><font color="#E5E5E5"> remember about</font>

403
00:17:10,910 --> 00:17:17,630
<font color="#E5E5E5">those rules and actually do them so the</font>

404
00:17:14,359 --> 00:17:19,659
first normal<font color="#E5E5E5"> form the target is that you</font>

405
00:17:17,630 --> 00:17:24,350
don't<font color="#E5E5E5"> have duplicated rows in the table</font>

406
00:17:19,660 --> 00:17:25,970
<font color="#E5E5E5">and no repeating groups</font><font color="#CCCCCC"> arrays each</font><font color="#E5E5E5"> cell</font>

407
00:17:24,349 --> 00:17:27,649
is a single value so I've seen many

408
00:17:25,970 --> 00:17:30,050
schemas and<font color="#E5E5E5"> I've been doing</font><font color="#CCCCCC"> some</font>

409
00:17:27,650 --> 00:17:31,310
<font color="#CCCCCC">consulting before and many schemas were</font>

410
00:17:30,050 --> 00:17:33,020
there is always<font color="#E5E5E5"> this table with a</font>

411
00:17:31,310 --> 00:17:36,860
<font color="#E5E5E5">commercial capacity parroted set of</font>

412
00:17:33,020 --> 00:17:38,330
values because<font color="#E5E5E5"> you know creating a new</font>

413
00:17:36,860 --> 00:17:41,449
table in<font color="#CCCCCC"> the table in production</font><font color="#E5E5E5"> was</font>

414
00:17:38,330 --> 00:17:43,490
born so they just added fields<font color="#E5E5E5"> in the in</font>

415
00:17:41,450 --> 00:17:45,240
a single field and as soon<font color="#E5E5E5"> as you do</font>

416
00:17:43,490 --> 00:17:47,070
<font color="#E5E5E5">that then sequel is going to be</font><font color="#CCCCCC"> really</font>

417
00:17:45,240 --> 00:17:50,220
because<font color="#E5E5E5"> sequel doesn't lend itself very</font>

418
00:17:47,070 --> 00:17:53,639
well to that<font color="#E5E5E5"> and so that those are the</font>

419
00:17:50,220 --> 00:17:56,190
first<font color="#E5E5E5"> rules single</font><font color="#CCCCCC"> numbers word so the</font>

420
00:17:53,640 --> 00:17:58,679
trick with<font color="#E5E5E5"> the normal forms is to reach</font>

421
00:17:56,190 --> 00:18:01,230
<font color="#E5E5E5">the next people you need first</font><font color="#CCCCCC"> to reach</font>

422
00:17:58,679 --> 00:18:03,059
the<font color="#CCCCCC"> first level</font><font color="#E5E5E5"> so if you want to be</font>

423
00:18:01,230 --> 00:18:04,559
sick on<font color="#CCCCCC"> the world form</font><font color="#E5E5E5"> you need to make</font>

424
00:18:03,059 --> 00:18:06,960
<font color="#CCCCCC">sure you you are compatible</font><font color="#E5E5E5"> with the</font>

425
00:18:04,559 --> 00:18:08,520
first normal<font color="#E5E5E5"> form first so you need to</font>

426
00:18:06,960 --> 00:18:13,049
do them one<font color="#CCCCCC"> after</font><font color="#E5E5E5"> the other</font>

427
00:18:08,520 --> 00:18:15,720
<font color="#E5E5E5">always so</font><font color="#CCCCCC"> it's second normal form if it</font>

428
00:18:13,049 --> 00:18:17,610
is<font color="#CCCCCC"> already first</font><font color="#E5E5E5"> normal form and as no</font>

429
00:18:15,720 --> 00:18:19,730
partial dependencies<font color="#E5E5E5"> so here is another</font>

430
00:18:17,610 --> 00:18:22,469
<font color="#CCCCCC">way to say it</font>

431
00:18:19,730 --> 00:18:24,179
<font color="#CCCCCC">none key attribute is dependent</font><font color="#E5E5E5"> on only</font>

432
00:18:22,470 --> 00:18:26,460
<font color="#E5E5E5">a part of the composite key</font><font color="#CCCCCC"> it means</font>

433
00:18:24,179 --> 00:18:30,600
that if you<font color="#CCCCCC"> have many columns</font><font color="#E5E5E5"> all of the</font>

434
00:18:26,460 --> 00:18:33,539
columns<font color="#E5E5E5"> should have something some kind</font>

435
00:18:30,600 --> 00:18:35,939
<font color="#E5E5E5">of a relationship</font><font color="#CCCCCC"> in his very definition</font>

436
00:18:33,539 --> 00:18:38,400
towards<font color="#E5E5E5"> the primary key if it doesn't it</font>

437
00:18:35,940 --> 00:18:40,049
has nothing to do in this table<font color="#CCCCCC"> remember</font>

438
00:18:38,400 --> 00:18:42,500
about the employee ID and<font color="#CCCCCC"> its address</font>

439
00:18:40,049 --> 00:18:45,418
the address<font color="#E5E5E5"> is not really something</font>

440
00:18:42,500 --> 00:18:46,919
specific of the employee<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> model one</font>

441
00:18:45,419 --> 00:18:49,470
<font color="#E5E5E5">people are living in the same house it's</font>

442
00:18:46,919 --> 00:18:52,260
not<font color="#CCCCCC"> a property</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the the employee so it</font>

443
00:18:49,470 --> 00:18:53,730
it's not dependent really and it's<font color="#E5E5E5"> a non</font>

444
00:18:52,260 --> 00:18:55,890
key attribute<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> dependent on</font>

445
00:18:53,730 --> 00:18:59,490
<font color="#E5E5E5">the part of the composite key it's right</font>

446
00:18:55,890 --> 00:19:02,700
<font color="#E5E5E5">straw as I told you it's dry topic so</font>

447
00:18:59,490 --> 00:19:07,340
I'm not going to dive very deep into it

448
00:19:02,700 --> 00:19:09,630
if<font color="#E5E5E5"> you if you like</font><font color="#CCCCCC"> tharok approaches</font>

449
00:19:07,340 --> 00:19:11,580
<font color="#E5E5E5">make it so</font><font color="#CCCCCC"> that you have sometimes to</font>

450
00:19:09,630 --> 00:19:13,919
dive into the topic later<font color="#E5E5E5"> we're going to</font>

451
00:19:11,580 --> 00:19:17,699
<font color="#E5E5E5">switch soon to a more practical ways to</font>

452
00:19:13,919 --> 00:19:18,900
<font color="#CCCCCC">handle it after</font><font color="#E5E5E5"> to normal the second</font>

453
00:19:17,700 --> 00:19:23,010
<font color="#E5E5E5">normal form you have the third one and</font>

454
00:19:18,900 --> 00:19:24,690
the bcnf one with a voice code<font color="#E5E5E5"> usually</font>

455
00:19:23,010 --> 00:19:27,870
what I do when I design a schema is<font color="#E5E5E5"> I</font>

456
00:19:24,690 --> 00:19:30,240
try<font color="#E5E5E5"> to target bcnf because it's the it's</font>

457
00:19:27,870 --> 00:19:35,610
<font color="#CCCCCC">the point where</font><font color="#E5E5E5"> it's still useful and</font>

458
00:19:30,240 --> 00:19:38,760
not so hard<font color="#E5E5E5"> to achieve</font><font color="#CCCCCC"> and there</font><font color="#E5E5E5"> is more</font>

459
00:19:35,610 --> 00:19:41,219
of course<font color="#E5E5E5"> you can go to the force v</font>

460
00:19:38,760 --> 00:19:43,830
<font color="#E5E5E5">which is projection drawing normal form</font>

461
00:19:41,220 --> 00:19:46,169
<font color="#E5E5E5">and then you have D K and F which is a</font>

462
00:19:43,830 --> 00:19:50,370
step further<font color="#E5E5E5"> so I'll give you an</font><font color="#CCCCCC"> example</font>

463
00:19:46,169 --> 00:19:52,320
if you are for example handling

464
00:19:50,370 --> 00:19:56,370
addresses in<font color="#CCCCCC"> your database so you have</font>

465
00:19:52,320 --> 00:19:57,779
an address field<font color="#E5E5E5"> how much</font>

466
00:19:56,370 --> 00:20:00,330
<font color="#E5E5E5">or deep you want to be in normalization</font>

467
00:19:57,779 --> 00:20:03,150
<font color="#CCCCCC">are you going to do first normal form or</font>

468
00:20:00,330 --> 00:20:05,449
up to<font color="#CCCCCC"> decay NF foreign Rudra's field so</font>

469
00:20:03,150 --> 00:20:10,380
if you want<font color="#E5E5E5"> to design</font><font color="#CCCCCC"> it properly</font>

470
00:20:05,450 --> 00:20:12,330
<font color="#E5E5E5">because you have cities in a city</font><font color="#CCCCCC"> you</font>

471
00:20:10,380 --> 00:20:15,659
have streets<font color="#E5E5E5"> street names but actually</font>

472
00:20:12,330 --> 00:20:18,090
the street names<font color="#E5E5E5"> you find them</font><font color="#CCCCCC"> in most</font>

473
00:20:15,659 --> 00:20:19,620
other cities<font color="#CCCCCC"> around it</font><font color="#E5E5E5"> so you would have</font>

474
00:20:18,090 --> 00:20:21,928
a<font color="#E5E5E5"> catalogue of all the street names that</font>

475
00:20:19,620 --> 00:20:24,209
are known<font color="#E5E5E5"> and for its street name you</font>

476
00:20:21,929 --> 00:20:26,640
want a relationship with which city is

477
00:20:24,210 --> 00:20:29,250
actually<font color="#E5E5E5"> using</font><font color="#CCCCCC"> that street name and then</font>

478
00:20:26,640 --> 00:20:31,860
<font color="#E5E5E5">in this city we for this street name</font>

479
00:20:29,250 --> 00:20:34,110
what<font color="#CCCCCC"> are the the number the numbers on</font>

480
00:20:31,860 --> 00:20:35,908
the buildings<font color="#CCCCCC"> that are available in the</font>

481
00:20:34,110 --> 00:20:37,799
street<font color="#E5E5E5"> because sometimes the skip number</font>

482
00:20:35,909 --> 00:20:39,899
sometimes<font color="#CCCCCC"> you have in Paris there is a</font>

483
00:20:37,799 --> 00:20:42,960
street where you have<font color="#CCCCCC"> four number fours</font>

484
00:20:39,899 --> 00:20:44,699
in the<font color="#E5E5E5"> street yeah so I had a meeting</font>

485
00:20:42,960 --> 00:20:45,899
<font color="#E5E5E5">once and I showed up</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the meeting</font>

486
00:20:44,700 --> 00:20:48,870
number four in<font color="#E5E5E5"> the street an eye out for</font>

487
00:20:45,899 --> 00:20:52,739
<font color="#CCCCCC">four B's for</font><font color="#E5E5E5"> tear for something else</font><font color="#CCCCCC"> and</font>

488
00:20:48,870 --> 00:20:55,139
what so I had to call<font color="#CCCCCC"> them but if you</font>

489
00:20:52,740 --> 00:20:58,620
<font color="#CCCCCC">are a job if</font><font color="#E5E5E5"> if you need to design an</font>

490
00:20:55,140 --> 00:21:02,100
address<font color="#E5E5E5"> database model because your job</font>

491
00:20:58,620 --> 00:21:04,620
<font color="#CCCCCC">is for example to I don't know ever</font>

492
00:21:02,100 --> 00:21:08,340
deliver things to people<font color="#E5E5E5"> or maybe you</font>

493
00:21:04,620 --> 00:21:10,739
are installing fiber or electricity<font color="#CCCCCC"> or</font>

494
00:21:08,340 --> 00:21:12,059
phone to<font color="#CCCCCC"> people</font><font color="#E5E5E5"> homes and you need the</font>

495
00:21:10,740 --> 00:21:14,220
exact address and maybe you need the

496
00:21:12,059 --> 00:21:16,139
exact location of the box that is owned

497
00:21:14,220 --> 00:21:18,450
<font color="#CCCCCC">by your company</font><font color="#E5E5E5"> and that is available in</font>

498
00:21:16,140 --> 00:21:20,490
the people home maybe you<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to do the</font>

499
00:21:18,450 --> 00:21:21,840
proper way and then maybe you need<font color="#CCCCCC"> to do</font>

500
00:21:20,490 --> 00:21:23,610
<font color="#E5E5E5">that in a way</font><font color="#CCCCCC"> that you can then optimize</font>

501
00:21:21,840 --> 00:21:25,439
<font color="#E5E5E5">the traffic and the routing when there</font>

502
00:21:23,610 --> 00:21:27,658
is like<font color="#CCCCCC"> uncool people that</font><font color="#E5E5E5"> needs to show</font>

503
00:21:25,440 --> 00:21:29,370
<font color="#CCCCCC">up at the people's houses</font><font color="#E5E5E5"> so no you need</font>

504
00:21:27,659 --> 00:21:32,130
also a GIS<font color="#CCCCCC"> system at a profit</font><font color="#E5E5E5"> that's</font>

505
00:21:29,370 --> 00:21:33,870
<font color="#E5E5E5">true now if your</font><font color="#CCCCCC"> business</font><font color="#E5E5E5"> model for</font>

506
00:21:32,130 --> 00:21:36,240
having the address of people is because

507
00:21:33,870 --> 00:21:38,039
<font color="#CCCCCC">you want to</font><font color="#E5E5E5"> invoice them like you know</font>

508
00:21:36,240 --> 00:21:41,010
<font color="#CCCCCC">you generate a PDF</font><font color="#E5E5E5"> that you send by</font>

509
00:21:38,039 --> 00:21:42,360
email but legally it's required<font color="#E5E5E5"> to have</font>

510
00:21:41,010 --> 00:21:44,940
the<font color="#E5E5E5"> address</font><font color="#CCCCCC"> of the company on the PDF</font>

511
00:21:42,360 --> 00:21:47,010
<font color="#E5E5E5">well maybe a single field is going</font><font color="#CCCCCC"> to be</font>

512
00:21:44,940 --> 00:21:52,110
everything<font color="#E5E5E5"> you know all you need for the</font>

513
00:21:47,010 --> 00:21:53,940
<font color="#E5E5E5">AdWords so it all depends on the</font><font color="#CCCCCC"> level</font>

514
00:21:52,110 --> 00:21:55,139
of<font color="#E5E5E5"> normal forms that you want to go in a</font>

515
00:21:53,940 --> 00:21:57,059
database depends on what<font color="#E5E5E5"> you are going</font>

516
00:21:55,140 --> 00:21:59,159
<font color="#CCCCCC">to do with the</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> if all you do is</font>

517
00:21:57,059 --> 00:22:01,230
accept it<font color="#E5E5E5"> and then put it again</font>

518
00:21:59,159 --> 00:22:02,580
you don't care it's a text field<font color="#E5E5E5"> if</font>

519
00:22:01,230 --> 00:22:04,289
you're<font color="#E5E5E5"> going to actually have</font><font color="#CCCCCC"> to process</font>

520
00:22:02,580 --> 00:22:06,990
<font color="#E5E5E5">it</font><font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to be important to you</font>

521
00:22:04,289 --> 00:22:08,250
in<font color="#E5E5E5"> your business then you need to you</font>

522
00:22:06,990 --> 00:22:09,560
know<font color="#CCCCCC"> make the effort to</font><font color="#E5E5E5"> make</font><font color="#CCCCCC"> it actually</font>

523
00:22:08,250 --> 00:22:13,040
<font color="#CCCCCC">possible to</font><font color="#E5E5E5"> use it</font>

524
00:22:09,560 --> 00:22:14,750
so it's a set of<font color="#CCCCCC"> rules</font><font color="#E5E5E5"> and you need to</font>

525
00:22:13,040 --> 00:22:17,420
figure<font color="#E5E5E5"> out</font><font color="#CCCCCC"> it for</font><font color="#E5E5E5"> yourself or much</font><font color="#CCCCCC"> of it</font>

526
00:22:14,750 --> 00:22:20,540
applies to<font color="#E5E5E5"> your use case trick is if</font>

527
00:22:17,420 --> 00:22:23,600
you're<font color="#E5E5E5"> not sure</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> do them all and as</font>

528
00:22:20,540 --> 00:22:26,149
you good as you do them<font color="#E5E5E5"> there is a point</font>

529
00:22:23,600 --> 00:22:28,580
where<font color="#CCCCCC"> you will say so</font><font color="#E5E5E5"> this one was easy</font>

530
00:22:26,150 --> 00:22:30,440
to<font color="#CCCCCC"> achieve</font><font color="#E5E5E5"> this one was a little</font><font color="#CCCCCC"> more</font>

531
00:22:28,580 --> 00:22:32,409
work but<font color="#CCCCCC"> I'm happy I did it because I</font>

532
00:22:30,440 --> 00:22:35,990
saw some bugs<font color="#E5E5E5"> in my schema doing that</font>

533
00:22:32,410 --> 00:22:38,480
<font color="#E5E5E5">this one was more complex</font><font color="#CCCCCC"> I didn't find</font>

534
00:22:35,990 --> 00:22:40,580
many bugs this one was fine but<font color="#E5E5E5"> it</font>

535
00:22:38,480 --> 00:22:43,760
begins<font color="#E5E5E5"> to get boring and I don't get</font><font color="#CCCCCC"> out</font>

536
00:22:40,580 --> 00:22:45,560
<font color="#E5E5E5">anything out of this one it's it's only</font>

537
00:22:43,760 --> 00:22:47,570
adding new tables and new things and I

538
00:22:45,560 --> 00:22:49,280
don't<font color="#E5E5E5"> see the purpose</font><font color="#CCCCCC"> of that</font><font color="#E5E5E5"> but at</font>

539
00:22:47,570 --> 00:22:51,830
this<font color="#E5E5E5"> point now you have an opinion</font><font color="#CCCCCC"> that</font>

540
00:22:49,280 --> 00:22:54,560
in your case<font color="#E5E5E5"> your schema is fine in bcnf</font>

541
00:22:51,830 --> 00:22:56,000
and may be boring<font color="#E5E5E5"> in</font><font color="#CCCCCC"> 4nf but if you</font>

542
00:22:54,560 --> 00:22:59,360
don't do the exercise<font color="#E5E5E5"> you will never</font>

543
00:22:56,000 --> 00:23:01,190
know<font color="#E5E5E5"> okay so please do it and figure out</font>

544
00:22:59,360 --> 00:23:03,770
<font color="#E5E5E5">at which point it gets</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> boring for</font>

545
00:23:01,190 --> 00:23:06,440
you and stop it then<font color="#E5E5E5"> but just do</font><font color="#CCCCCC"> it</font>

546
00:23:03,770 --> 00:23:07,940
first<font color="#CCCCCC"> okay you will be very</font><font color="#E5E5E5"> happy you</font>

547
00:23:06,440 --> 00:23:09,500
<font color="#E5E5E5">did that because</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> will</font><font color="#CCCCCC"> actually find</font>

548
00:23:07,940 --> 00:23:13,730
bugs in<font color="#E5E5E5"> your schema</font><font color="#CCCCCC"> each and every</font><font color="#E5E5E5"> time</font>

549
00:23:09,500 --> 00:23:16,160
<font color="#E5E5E5">and an example is coming it's coming now</font>

550
00:23:13,730 --> 00:23:18,890
actually<font color="#E5E5E5"> because the way we implement</font>

551
00:23:16,160 --> 00:23:21,020
<font color="#E5E5E5">those warranties in a database is with</font>

552
00:23:18,890 --> 00:23:26,090
as we said before database constraint so

553
00:23:21,020 --> 00:23:30,400
I told you this is roamed so who<font color="#E5E5E5"> wants</font>

554
00:23:26,090 --> 00:23:33,290
<font color="#E5E5E5">to win a sock by guessing why it's wrong</font>

555
00:23:30,400 --> 00:23:37,760
<font color="#CCCCCC">YAG i'm going to throw them anyway but</font>

556
00:23:33,290 --> 00:23:39,470
<font color="#E5E5E5">please try to figure</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> out so yeah I</font>

557
00:23:37,760 --> 00:23:41,090
don't<font color="#CCCCCC"> know at the end of the talk you</font>

558
00:23:39,470 --> 00:23:43,580
will have some<font color="#E5E5E5"> more if you</font><font color="#CCCCCC"> want to</font>

559
00:23:41,090 --> 00:23:45,730
apparently<font color="#CCCCCC"> it's really I'm</font><font color="#E5E5E5"> not good</font>

560
00:23:43,580 --> 00:23:50,510
enough<font color="#CCCCCC"> at that so anyway</font><font color="#E5E5E5"> primary key</font>

561
00:23:45,730 --> 00:23:52,160
means<font color="#E5E5E5"> your first normal form compatible</font>

562
00:23:50,510 --> 00:23:55,270
<font color="#E5E5E5">because there is no duplicates in the</font>

563
00:23:52,160 --> 00:23:59,770
table right that's what it<font color="#CCCCCC"> means America</font>

564
00:23:55,270 --> 00:24:05,680
have you heard<font color="#E5E5E5"> about surrogate</font><font color="#CCCCCC"> keys yes</font>

565
00:23:59,770 --> 00:24:05,680
yes yes is the DBA you knows about it

566
00:24:06,450 --> 00:24:12,010
yes<font color="#E5E5E5"> so a surrogate key</font><font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> the</font>

567
00:24:09,760 --> 00:24:16,570
primary key<font color="#E5E5E5"> but actually it's not it's a</font>

568
00:24:12,010 --> 00:24:19,629
substitute for natural<font color="#E5E5E5"> key the natural</font>

569
00:24:16,570 --> 00:24:22,090
key is what allows preventing duplicate

570
00:24:19,630 --> 00:24:26,110
entries<font color="#E5E5E5"> so let's switch</font><font color="#CCCCCC"> to this example</font>

571
00:24:22,090 --> 00:24:28,780
<font color="#E5E5E5">in the article table the primary key is</font>

572
00:24:26,110 --> 00:24:31,030
not listed<font color="#CCCCCC"> here because look it's big</font>

573
00:24:28,780 --> 00:24:33,040
<font color="#CCCCCC">circle so the ID</font><font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> need to give</font>

574
00:24:31,030 --> 00:24:36,040
it to<font color="#CCCCCC"> PostgreSQL if you don't give it it</font>

575
00:24:33,040 --> 00:24:38,639
will be derived from a<font color="#E5E5E5"> sequence and by</font>

576
00:24:36,040 --> 00:24:40,659
the way sequences in sequel are the only

577
00:24:38,640 --> 00:24:42,850
sequel objects that are<font color="#CCCCCC"> non</font>

578
00:24:40,660 --> 00:24:44,470
<font color="#CCCCCC">transactional</font><font color="#E5E5E5"> and that's on purpose</font>

579
00:24:42,850 --> 00:24:48,060
<font color="#CCCCCC">so everything in PostgreSQL is</font>

580
00:24:44,470 --> 00:24:50,410
transactional except for sequences and

581
00:24:48,060 --> 00:24:52,899
that's in the sequel standard<font color="#E5E5E5"> so it's</font>

582
00:24:50,410 --> 00:24:54,580
not<font color="#CCCCCC"> just positive SQL and if you don't</font>

583
00:24:52,900 --> 00:24:55,780
know why<font color="#E5E5E5"> maybe you don't understand</font>

584
00:24:54,580 --> 00:24:56,230
transactions so you should<font color="#E5E5E5"> have a look</font>

585
00:24:55,780 --> 00:24:59,530
<font color="#E5E5E5">at that</font>

586
00:24:56,230 --> 00:25:01,900
I'm not going to<font color="#E5E5E5"> explain not today at</font>

587
00:24:59,530 --> 00:25:04,060
least so<font color="#E5E5E5"> we insert category pub date</font>

588
00:25:01,900 --> 00:25:05,740
<font color="#CCCCCC">title and do you realize that it's</font>

589
00:25:04,060 --> 00:25:09,310
<font color="#CCCCCC">exactly the same values we inserting</font>

590
00:25:05,740 --> 00:25:12,730
look at<font color="#E5E5E5"> that do we have a primary key</font>

591
00:25:09,310 --> 00:25:17,290
<font color="#CCCCCC">really because the fact that this</font>

592
00:25:12,730 --> 00:25:19,530
country<font color="#CCCCCC"> is ID 3 and</font><font color="#E5E5E5"> this entry ID for no</font>

593
00:25:17,290 --> 00:25:23,379
single user of your application<font color="#E5E5E5"> cares</font>

594
00:25:19,530 --> 00:25:26,770
<font color="#E5E5E5">right no one is ever going to be exposed</font>

595
00:25:23,380 --> 00:25:29,410
to<font color="#CCCCCC"> the fact that this article</font><font color="#E5E5E5"> is ID 3</font>

596
00:25:26,770 --> 00:25:32,440
and the<font color="#CCCCCC"> only difference is you have</font><font color="#E5E5E5"> in</font>

597
00:25:29,410 --> 00:25:34,600
<font color="#E5E5E5">between those two rows is the ID so</font>

598
00:25:32,440 --> 00:25:37,840
basically you<font color="#E5E5E5"> have a duplicate entry</font><font color="#CCCCCC"> so</font>

599
00:25:34,600 --> 00:25:42,129
basically the schema is not first normal

600
00:25:37,840 --> 00:25:45,300
form<font color="#E5E5E5"> compatible</font><font color="#CCCCCC"> ok so it's</font><font color="#E5E5E5"> really shitty</font>

601
00:25:42,130 --> 00:25:48,400
<font color="#CCCCCC">you don't do</font><font color="#E5E5E5"> that so how do we fix</font><font color="#CCCCCC"> it</font>

602
00:25:45,300 --> 00:25:49,629
<font color="#CCCCCC">well we want natural primary key and</font>

603
00:25:48,400 --> 00:25:52,060
then we need to understand the business

604
00:25:49,630 --> 00:25:55,060
<font color="#CCCCCC">model a little more so</font><font color="#E5E5E5"> what I did</font><font color="#CCCCCC"> here</font>

605
00:25:52,060 --> 00:25:57,760
is primary key over the<font color="#E5E5E5"> category the</font>

606
00:25:55,060 --> 00:26:01,060
publication date and<font color="#E5E5E5"> the title which</font>

607
00:25:57,760 --> 00:26:03,310
means that in the rule history<font color="#E5E5E5"> of the</font>

608
00:26:01,060 --> 00:26:05,889
news article you're going to<font color="#E5E5E5"> publish you</font>

609
00:26:03,310 --> 00:26:11,830
will never be allowed<font color="#E5E5E5"> to reuse</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> from</font>

610
00:26:05,890 --> 00:26:13,210
the past<font color="#E5E5E5"> well is it your</font><font color="#CCCCCC"> no because you</font>

611
00:26:11,830 --> 00:26:15,040
have<font color="#CCCCCC"> the publication date so you can</font>

612
00:26:13,210 --> 00:26:17,740
reuse<font color="#CCCCCC"> the title</font><font color="#E5E5E5"> but maybe you don't want</font>

613
00:26:15,040 --> 00:26:19,090
to so you<font color="#E5E5E5"> need to figure it out</font><font color="#CCCCCC"> so I was</font>

614
00:26:17,740 --> 00:26:20,620
too fast story about that<font color="#E5E5E5"> so</font>

615
00:26:19,090 --> 00:26:22,090
see it<font color="#E5E5E5"> again because there is the</font>

616
00:26:20,620 --> 00:26:24,428
<font color="#E5E5E5">publication date in the primary key you</font>

617
00:26:22,090 --> 00:26:26,019
have you can<font color="#E5E5E5"> use the same title of the</font>

618
00:26:24,429 --> 00:26:28,659
article in the same category more<font color="#E5E5E5"> than</font>

619
00:26:26,019 --> 00:26:31,539
once<font color="#E5E5E5"> at different times like maybe you</font>

620
00:26:28,659 --> 00:26:32,919
want to react<font color="#E5E5E5"> sarcastically</font><font color="#CCCCCC"> about an</font>

621
00:26:31,539 --> 00:26:34,870
article you published last<font color="#CCCCCC"> year or</font>

622
00:26:32,919 --> 00:26:36,639
<font color="#CCCCCC">something</font><font color="#E5E5E5"> like that but maybe your</font>

623
00:26:34,870 --> 00:26:38,799
business<font color="#CCCCCC"> model is that you never ever</font>

624
00:26:36,639 --> 00:26:40,809
reuse title because I<font color="#E5E5E5"> don't know the</font>

625
00:26:38,799 --> 00:26:42,249
journalism rules and maybe it's

626
00:26:40,809 --> 00:26:44,019
important<font color="#E5E5E5"> for them I don't know so</font>

627
00:26:42,249 --> 00:26:45,879
because<font color="#CCCCCC"> I'm not a journalist or a chief</font>

628
00:26:44,019 --> 00:26:48,220
<font color="#CCCCCC">editor or something like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'm not</font>

629
00:26:45,879 --> 00:26:50,168
sure what should the primary key be but

630
00:26:48,220 --> 00:26:53,139
the the<font color="#E5E5E5"> point I'm trying to make is</font><font color="#CCCCCC"> that</font>

631
00:26:50,169 --> 00:26:54,639
the<font color="#CCCCCC"> only way</font><font color="#E5E5E5"> to know is that you need to</font>

632
00:26:53,139 --> 00:26:56,979
understand the business model<font color="#E5E5E5"> before you</font>

633
00:26:54,639 --> 00:26:58,779
do it so as a developer<font color="#E5E5E5"> if you don't</font>

634
00:26:56,980 --> 00:27:00,789
understand<font color="#E5E5E5"> the business model</font><font color="#CCCCCC"> well</font>

635
00:26:58,779 --> 00:27:02,289
enough<font color="#E5E5E5"> to do that then spend the day or</font>

636
00:27:00,789 --> 00:27:04,899
two with the other guys to predict the

637
00:27:02,289 --> 00:27:07,749
eyes or if it's journalism<font color="#CCCCCC"> spend</font><font color="#E5E5E5"> the day</font>

638
00:27:04,899 --> 00:27:09,610
with the<font color="#E5E5E5"> journalists asking them how it</font>

639
00:27:07,749 --> 00:27:13,059
should work<font color="#CCCCCC"> because you need to figure</font>

640
00:27:09,610 --> 00:27:15,039
it out<font color="#E5E5E5"> now and once you did that it</font>

641
00:27:13,059 --> 00:27:17,200
means that<font color="#E5E5E5"> any other table that has a</font>

642
00:27:15,039 --> 00:27:19,029
foreign key relationship to your table

643
00:27:17,200 --> 00:27:21,850
no needs to have a foreign key

644
00:27:19,029 --> 00:27:23,470
relationship to the three<font color="#E5E5E5"> columns which</font>

645
00:27:21,850 --> 00:27:25,649
is not<font color="#CCCCCC"> only boring to write but also</font>

646
00:27:23,470 --> 00:27:28,539
it's taking a lot of<font color="#E5E5E5"> space on disk and</font>

647
00:27:25,649 --> 00:27:31,600
it's making<font color="#E5E5E5"> the indexes</font><font color="#CCCCCC"> are going to be</font>

648
00:27:28,539 --> 00:27:33,399
bigger and<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> will have an impact on</font>

649
00:27:31,600 --> 00:27:35,799
the right capacity<font color="#E5E5E5"> of</font><font color="#CCCCCC"> your system and</font>

650
00:27:33,399 --> 00:27:37,840
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> droids</font><font color="#CCCCCC"> Taurus so we</font><font color="#E5E5E5"> we say it's a</font>

651
00:27:35,799 --> 00:27:41,289
<font color="#E5E5E5">distributed cost because it is</font><font color="#CCCCCC"> going to</font>

652
00:27:37,840 --> 00:27:43,809
be<font color="#E5E5E5"> costly in more than one way and but</font>

653
00:27:41,289 --> 00:27:45,549
it is so it's the<font color="#E5E5E5"> right way to do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> but</font>

654
00:27:43,809 --> 00:27:51,960
it's costly so<font color="#CCCCCC"> is there a trade-off</font>

655
00:27:45,549 --> 00:27:54,700
yeah<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> you asked so oh you have a</font>

656
00:27:51,960 --> 00:27:57,249
you can use<font color="#CCCCCC"> a surrogate key</font><font color="#E5E5E5"> which means</font>

657
00:27:54,700 --> 00:27:59,409
that you have<font color="#CCCCCC"> a an integer</font><font color="#E5E5E5"> here the ID</font>

658
00:27:57,249 --> 00:28:01,990
or maybe you want<font color="#CCCCCC"> to be a big in factory</font>

659
00:27:59,409 --> 00:28:04,259
<font color="#CCCCCC">generate it</font><font color="#E5E5E5"> always as identity it's the</font>

660
00:28:01,990 --> 00:28:06,369
new way in the standard to spell

661
00:28:04,259 --> 00:28:08,799
sequence or<font color="#E5E5E5"> begin or something like that</font>

662
00:28:06,369 --> 00:28:11,139
<font color="#CCCCCC">so please</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> that spelling</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> better</font>

663
00:28:08,799 --> 00:28:13,059
than using<font color="#E5E5E5"> the previous one for some</font>

664
00:28:11,139 --> 00:28:15,699
reasons<font color="#E5E5E5"> there is a really good article</font>

665
00:28:13,059 --> 00:28:18,249
online<font color="#E5E5E5"> that explains in details if you</font>

666
00:28:15,700 --> 00:28:19,899
<font color="#E5E5E5">if you type</font><font color="#CCCCCC"> that in Google</font><font color="#E5E5E5"> usually the</font>

667
00:28:18,249 --> 00:28:24,159
<font color="#E5E5E5">first</font><font color="#CCCCCC"> link is this article</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> it's easy</font>

668
00:28:19,899 --> 00:28:26,080
<font color="#CCCCCC">to</font><font color="#E5E5E5"> find out so we will use that as a</font>

669
00:28:24,159 --> 00:28:27,460
unique column but the<font color="#E5E5E5"> primary key is</font>

670
00:28:26,080 --> 00:28:30,369
still that<font color="#E5E5E5"> okay that's the natural</font>

671
00:28:27,460 --> 00:28:31,270
primary key but<font color="#CCCCCC"> we guarantee the ID is</font>

672
00:28:30,369 --> 00:28:32,860
going<font color="#E5E5E5"> to be unique</font>

673
00:28:31,270 --> 00:28:35,410
so that you can use it in a foreign key

674
00:28:32,860 --> 00:28:36,899
reference so I didn't write<font color="#E5E5E5"> the slide</font>

675
00:28:35,410 --> 00:28:39,880
for it<font color="#CCCCCC"> but now you can foreign key</font>

676
00:28:36,900 --> 00:28:41,680
reference<font color="#E5E5E5"> only</font><font color="#CCCCCC"> the idea because it's</font>

677
00:28:39,880 --> 00:28:44,020
granted to<font color="#E5E5E5"> be unique by</font><font color="#CCCCCC"> PostgreSQL so</font>

678
00:28:41,680 --> 00:28:46,450
you can use<font color="#E5E5E5"> it that</font><font color="#CCCCCC"> way</font><font color="#E5E5E5"> but it's only a</font>

679
00:28:44,020 --> 00:28:48,129
surrogate key<font color="#E5E5E5"> and it's made clear in the</font>

680
00:28:46,450 --> 00:28:51,130
<font color="#E5E5E5">schema because</font><font color="#CCCCCC"> know the primary key is</font>

681
00:28:48,130 --> 00:28:59,140
written here right any question about

682
00:28:51,130 --> 00:29:01,690
<font color="#CCCCCC">that yes that's the usual question yes</font>

683
00:28:59,140 --> 00:29:03,010
<font color="#E5E5E5">so we could so I'm going to repeat it</font><font color="#CCCCCC"> we</font>

684
00:29:01,690 --> 00:29:04,180
could do it the other<font color="#E5E5E5"> way around and say</font>

685
00:29:03,010 --> 00:29:07,510
this one is<font color="#E5E5E5"> primary key and the other</font>

686
00:29:04,180 --> 00:29:11,020
<font color="#E5E5E5">one is unique mostly it's the same thing</font>

687
00:29:07,510 --> 00:29:12,160
<font color="#E5E5E5">but I like to declare the intention so</font>

688
00:29:11,020 --> 00:29:14,139
your intention is<font color="#CCCCCC"> that the natural</font>

689
00:29:12,160 --> 00:29:16,270
primary key of<font color="#E5E5E5"> this database design is</font>

690
00:29:14,140 --> 00:29:17,680
here and this<font color="#E5E5E5"> one is</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> a facility</font>

691
00:29:16,270 --> 00:29:20,530
<font color="#E5E5E5">you're going to use in other parts of</font>

692
00:29:17,680 --> 00:29:24,480
the<font color="#CCCCCC"> software because it's useful</font><font color="#E5E5E5"> so it</font>

693
00:29:20,530 --> 00:29:24,480
makes<font color="#E5E5E5"> it obvious</font><font color="#CCCCCC"> that is the case</font><font color="#E5E5E5"> yes</font>

694
00:29:30,799 --> 00:29:36,840
yes<font color="#E5E5E5"> it's a yes</font><font color="#CCCCCC"> the so</font><font color="#E5E5E5"> the question</font><font color="#CCCCCC"> is</font>

695
00:29:35,160 --> 00:29:38,039
about what if I have<font color="#E5E5E5"> a nun tree there</font>

696
00:29:36,840 --> 00:29:40,350
but I need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> change the publication</font>

697
00:29:38,039 --> 00:29:42,210
<font color="#E5E5E5">date because it was wrong well then</font><font color="#CCCCCC"> it's</font>

698
00:29:40,350 --> 00:29:44,939
going<font color="#E5E5E5"> to change</font><font color="#CCCCCC"> yes but not the idea</font>

699
00:29:42,210 --> 00:29:46,650
that's<font color="#E5E5E5"> why you the idea is useful but</font>

700
00:29:44,940 --> 00:29:49,380
the idea is nothing to do with the fact

701
00:29:46,650 --> 00:29:51,510
<font color="#E5E5E5">that it's going to</font><font color="#CCCCCC"> guarantee that</font><font color="#E5E5E5"> your</font>

702
00:29:49,380 --> 00:29:53,340
<font color="#E5E5E5">wage first normal form that's not</font>

703
00:29:51,510 --> 00:29:55,289
helping<font color="#E5E5E5"> but it's helping for the</font>

704
00:29:53,340 --> 00:30:03,270
purposes<font color="#E5E5E5"> so that's why it's a good</font>

705
00:29:55,289 --> 00:30:05,879
trade-off<font color="#CCCCCC"> okay yes not null would be</font>

706
00:30:03,270 --> 00:30:09,840
good<font color="#CCCCCC"> yes thank you so you spot the bug</font>

707
00:30:05,880 --> 00:30:12,570
in my slide here<font color="#CCCCCC"> is this up for you yeah</font>

708
00:30:09,840 --> 00:30:18,418
so anyone who spotted a bug<font color="#E5E5E5"> you get a</font>

709
00:30:12,570 --> 00:30:22,280
<font color="#E5E5E5">sock okay</font><font color="#CCCCCC"> we have other constraints - in</font>

710
00:30:18,419 --> 00:30:25,110
<font color="#E5E5E5">sequel so I will just list</font><font color="#CCCCCC"> some of</font><font color="#E5E5E5"> them</font>

711
00:30:22,280 --> 00:30:28,918
<font color="#E5E5E5">we did talk a little about primary keys</font>

712
00:30:25,110 --> 00:30:31,678
and foreign keys<font color="#E5E5E5"> not nil we just said</font>

713
00:30:28,919 --> 00:30:34,169
it's important check constraint you can

714
00:30:31,679 --> 00:30:36,210
have a<font color="#E5E5E5"> manual check that it's not new</font>

715
00:30:34,169 --> 00:30:37,590
and<font color="#E5E5E5"> that there is a nice trick word</font>

716
00:30:36,210 --> 00:30:40,320
check constraint for example<font color="#E5E5E5"> each time</font>

717
00:30:37,590 --> 00:30:42,240
it's from week over there<font color="#E5E5E5"> each time week</font>

718
00:30:40,320 --> 00:30:44,789
has seen<font color="#E5E5E5"> a customer use a start date and</font>

719
00:30:42,240 --> 00:30:46,799
an end date in a table he found some

720
00:30:44,789 --> 00:30:49,679
<font color="#E5E5E5">data where</font><font color="#CCCCCC"> the end date was before the</font>

721
00:30:46,799 --> 00:30:51,658
start date<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> generally</font><font color="#E5E5E5"> time unless</font>

722
00:30:49,679 --> 00:30:53,010
<font color="#CCCCCC">you do a check constraint on that</font><font color="#E5E5E5"> the</font>

723
00:30:51,659 --> 00:30:54,780
database<font color="#E5E5E5"> is not going to be able</font><font color="#CCCCCC"> to</font>

724
00:30:53,010 --> 00:30:57,210
guarantee<font color="#CCCCCC"> that for you and</font><font color="#E5E5E5"> you will have</font>

725
00:30:54,780 --> 00:30:59,190
bugs<font color="#E5E5E5"> because we always</font><font color="#CCCCCC"> have work right</font>

726
00:30:57,210 --> 00:31:00,450
we just<font color="#E5E5E5"> had one before but it was in a</font>

727
00:30:59,190 --> 00:31:01,679
slide so it's<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> but in your</font>

728
00:31:00,450 --> 00:31:05,070
application code it's a little different

729
00:31:01,679 --> 00:31:06,900
<font color="#E5E5E5">so</font><font color="#CCCCCC"> mind your check constraints if it's</font>

730
00:31:05,070 --> 00:31:10,740
important<font color="#E5E5E5"> for you that</font><font color="#CCCCCC"> you have things</font>

731
00:31:06,900 --> 00:31:13,470
<font color="#CCCCCC">that are like for example start before</font>

732
00:31:10,740 --> 00:31:14,789
<font color="#E5E5E5">the end well maybe you should instruct</font>

733
00:31:13,470 --> 00:31:16,679
the<font color="#E5E5E5"> database that is the case so</font><font color="#CCCCCC"> that</font>

734
00:31:14,789 --> 00:31:22,590
<font color="#E5E5E5">you can warranties</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> warranty</font><font color="#CCCCCC"> that for</font>

735
00:31:16,679 --> 00:31:25,620
you and then in<font color="#CCCCCC"> PostgreSQL</font><font color="#E5E5E5"> and we also</font>

736
00:31:22,590 --> 00:31:28,530
have exclusion constraints basically

737
00:31:25,620 --> 00:31:30,120
<font color="#E5E5E5">it's it's like a unique constraint</font><font color="#CCCCCC"> but</font>

738
00:31:28,530 --> 00:31:34,799
it's spelled<font color="#E5E5E5"> a little differently than</font>

739
00:31:30,120 --> 00:31:38,340
unique what we say that<font color="#E5E5E5"> we if we meet</font>

740
00:31:34,799 --> 00:31:40,799
with data with the same<font color="#E5E5E5"> currency and an</font>

741
00:31:38,340 --> 00:31:42,860
overlapping validity period<font color="#E5E5E5"> date range</font>

742
00:31:40,799 --> 00:31:45,950
which is<font color="#E5E5E5"> not exactly</font><font color="#CCCCCC"> the same as</font>

743
00:31:42,860 --> 00:31:47,600
but we're using it that way here well in

744
00:31:45,950 --> 00:31:50,210
that case we want to<font color="#E5E5E5"> exclude the new</font>

745
00:31:47,600 --> 00:31:52,159
line so it's like a unique<font color="#E5E5E5"> index in a</font>

746
00:31:50,210 --> 00:31:53,990
unique index<font color="#E5E5E5"> when the values are the</font>

747
00:31:52,160 --> 00:31:55,910
<font color="#CCCCCC">same</font><font color="#E5E5E5"> one of them is going to be excluded</font>

748
00:31:53,990 --> 00:31:57,830
rejected you have a<font color="#CCCCCC"> newer</font><font color="#E5E5E5"> you try to</font>

749
00:31:55,910 --> 00:31:59,900
insert<font color="#CCCCCC"> any size now sorry I</font><font color="#E5E5E5"> already have</font>

750
00:31:57,830 --> 00:32:02,059
<font color="#CCCCCC">decided in database</font><font color="#E5E5E5"> so here it's the</font>

751
00:31:59,900 --> 00:32:03,830
same<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> but the the rules about when</font>

752
00:32:02,059 --> 00:32:06,200
do you<font color="#CCCCCC"> decide to</font><font color="#E5E5E5"> exclude the data are</font>

753
00:32:03,830 --> 00:32:08,510
more complex than<font color="#CCCCCC"> just in</font><font color="#E5E5E5"> equality there</font>

754
00:32:06,200 --> 00:32:10,250
is this strength sign here<font color="#CCCCCC"> that</font>

755
00:32:08,510 --> 00:32:13,280
everybody<font color="#E5E5E5"> knows you need to read equal</font>

756
00:32:10,250 --> 00:32:15,740
<font color="#E5E5E5">and this order strange sign here that</font>

757
00:32:13,280 --> 00:32:19,010
<font color="#E5E5E5">not everybody knows that you just read</font>

758
00:32:15,740 --> 00:32:20,630
it overlaps<font color="#CCCCCC"> okay that you need to learn</font>

759
00:32:19,010 --> 00:32:21,710
<font color="#CCCCCC">that once after that you know it but</font><font color="#E5E5E5"> if</font>

760
00:32:20,630 --> 00:32:27,530
you<font color="#CCCCCC"> don't know</font><font color="#E5E5E5"> that yet</font><font color="#CCCCCC"> that is</font>

761
00:32:21,710 --> 00:32:31,940
overlapping<font color="#E5E5E5"> okay questions so far now</font>

762
00:32:27,530 --> 00:32:35,120
okay the<font color="#E5E5E5"> normalization is the is what</font>

763
00:32:31,940 --> 00:32:39,860
you do when you have done a thorough job

764
00:32:35,120 --> 00:32:41,959
<font color="#E5E5E5">at</font><font color="#CCCCCC"> normalizing your</font><font color="#E5E5E5"> schema and then you</font>

765
00:32:39,860 --> 00:32:44,629
reach some difficulties in<font color="#E5E5E5"> prediction</font>

766
00:32:41,960 --> 00:32:47,090
usually<font color="#CCCCCC"> around</font><font color="#E5E5E5"> performance but maybe</font>

767
00:32:44,630 --> 00:32:49,340
<font color="#E5E5E5">around</font><font color="#CCCCCC"> the size of the data on disk or</font>

768
00:32:47,090 --> 00:32:51,709
maybe<font color="#CCCCCC"> a about something else</font><font color="#E5E5E5"> and you</font>

769
00:32:49,340 --> 00:32:54,320
want<font color="#E5E5E5"> to fix them okay so the</font>

770
00:32:51,710 --> 00:32:56,630
normalization is an<font color="#E5E5E5"> optimization</font>

771
00:32:54,320 --> 00:32:58,909
technique that you implement at the

772
00:32:56,630 --> 00:33:04,700
schema level<font color="#CCCCCC"> the design and the design</font>

773
00:32:58,910 --> 00:33:07,070
you go and you only optimize after it's

774
00:33:04,700 --> 00:33:12,380
not working good enough so let's remind

775
00:33:07,070 --> 00:33:15,889
us the rules of optimization<font color="#E5E5E5"> okay so the</font>

776
00:33:12,380 --> 00:33:18,620
first rule<font color="#CCCCCC"> is don't</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> okay and the</font>

777
00:33:15,890 --> 00:33:20,059
second rule is for experts only<font color="#E5E5E5"> so or do</font>

778
00:33:18,620 --> 00:33:23,059
you know if<font color="#E5E5E5"> you're an expert or not I</font>

779
00:33:20,059 --> 00:33:24,950
like this<font color="#E5E5E5"> definition of being an expert</font>

780
00:33:23,059 --> 00:33:27,830
it means that you have done all<font color="#E5E5E5"> the</font>

781
00:33:24,950 --> 00:33:29,660
possible mistakes<font color="#E5E5E5"> so when I'm telling</font>

782
00:33:27,830 --> 00:33:31,159
you I'm an expert<font color="#CCCCCC"> in PostgreSQL don't</font>

783
00:33:29,660 --> 00:33:34,130
ask me how many<font color="#CCCCCC"> mistakes I made before</font>

784
00:33:31,160 --> 00:33:37,540
<font color="#E5E5E5">many of them over the years maybe not</font>

785
00:33:34,130 --> 00:33:39,890
<font color="#E5E5E5">all of them but I</font><font color="#CCCCCC"> tried hard</font><font color="#E5E5E5"> so</font>

786
00:33:37,540 --> 00:33:41,330
optimization you don't do it and if

787
00:33:39,890 --> 00:33:42,830
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> an</font><font color="#CCCCCC"> expert you really good at</font><font color="#E5E5E5"> it</font>

788
00:33:41,330 --> 00:33:45,470
you've<font color="#CCCCCC"> been doing that a lot in the</font><font color="#E5E5E5"> past</font>

789
00:33:42,830 --> 00:33:47,540
<font color="#E5E5E5">maybe don't do it yet okay maybe you</font>

790
00:33:45,470 --> 00:33:50,540
don't need<font color="#E5E5E5"> to do it</font><font color="#CCCCCC"> actually the the</font>

791
00:33:47,540 --> 00:33:52,159
really important thing here is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> any</font>

792
00:33:50,540 --> 00:33:55,700
optimization is going to<font color="#CCCCCC"> implement</font><font color="#E5E5E5"> the</font>

793
00:33:52,160 --> 00:33:55,950
<font color="#E5E5E5">trade-off</font><font color="#CCCCCC"> so if everything</font><font color="#E5E5E5"> was easy you</font>

794
00:33:55,700 --> 00:33:58,470
would

795
00:33:55,950 --> 00:34:01,110
do it so make maybe not doing<font color="#E5E5E5"> it is</font>

796
00:33:58,470 --> 00:34:03,299
<font color="#CCCCCC">going to make your</font><font color="#E5E5E5"> life easy so that's</font>

797
00:34:01,110 --> 00:34:04,889
the best<font color="#E5E5E5"> way and so each time you try to</font>

798
00:34:03,299 --> 00:34:07,769
<font color="#E5E5E5">optimize something you're making your</font>

799
00:34:04,889 --> 00:34:12,270
life<font color="#E5E5E5"> art so is it you know is it</font><font color="#CCCCCC"> worth</font>

800
00:34:07,769 --> 00:34:13,589
it<font color="#E5E5E5"> do you need do you have to do it so</font>

801
00:34:12,270 --> 00:34:16,409
how do you or do we know if we have<font color="#CCCCCC"> to</font>

802
00:34:13,589 --> 00:34:19,759
do it or<font color="#E5E5E5"> not that's the classic quote</font>

803
00:34:16,409 --> 00:34:22,740
<font color="#E5E5E5">from</font><font color="#CCCCCC"> Kluth</font><font color="#E5E5E5"> right everybody I've read</font>

804
00:34:19,760 --> 00:34:24,690
<font color="#E5E5E5">well only this part usually premature</font>

805
00:34:22,739 --> 00:34:25,859
optimization is the root of all evil<font color="#CCCCCC"> but</font>

806
00:34:24,690 --> 00:34:28,889
I would have contacts it doesn't mean

807
00:34:25,859 --> 00:34:30,540
what<font color="#E5E5E5"> it means actually so maybe we</font>

808
00:34:28,889 --> 00:34:33,300
<font color="#E5E5E5">should read</font><font color="#CCCCCC"> it in full so programmers</font>

809
00:34:30,540 --> 00:34:35,219
waste<font color="#E5E5E5"> enormous amounts of time thinking</font>

810
00:34:33,300 --> 00:34:37,290
about<font color="#E5E5E5"> or worrying about the speed</font><font color="#CCCCCC"> of</font>

811
00:34:35,219 --> 00:34:39,709
<font color="#CCCCCC">non-critical parts</font><font color="#E5E5E5"> of their programs and</font>

812
00:34:37,290 --> 00:34:42,779
these attempts at efficiency actual

813
00:34:39,710 --> 00:34:45,480
efficiency sorry<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> have a strong</font>

814
00:34:42,780 --> 00:34:47,639
negative<font color="#E5E5E5"> impact when the</font><font color="#CCCCCC"> beginning and</font>

815
00:34:45,480 --> 00:34:49,199
maintenance<font color="#E5E5E5"> are considered so that's</font>

816
00:34:47,639 --> 00:34:51,240
about<font color="#E5E5E5"> code but it's exactly the same</font>

817
00:34:49,199 --> 00:34:53,759
<font color="#CCCCCC">thing with</font><font color="#E5E5E5"> your database schema if you</font>

818
00:34:51,239 --> 00:34:56,428
do some trade-offs<font color="#CCCCCC"> without thinking</font>

819
00:34:53,760 --> 00:34:58,260
about them you will have duplicates in

820
00:34:56,429 --> 00:35:00,750
prediction and you don't know why you

821
00:34:58,260 --> 00:35:02,460
will have an end date<font color="#E5E5E5"> that is before the</font>

822
00:35:00,750 --> 00:35:03,900
start date and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> don't know why you</font>

823
00:35:02,460 --> 00:35:05,760
will have many<font color="#CCCCCC"> problems</font><font color="#E5E5E5"> with your data</font>

824
00:35:03,900 --> 00:35:08,460
in prediction and you don't know why<font color="#E5E5E5"> so</font>

825
00:35:05,760 --> 00:35:12,810
please don't do it<font color="#E5E5E5"> we should</font><font color="#CCCCCC"> forget</font>

826
00:35:08,460 --> 00:35:13,760
about small efficiencies say about<font color="#E5E5E5"> 90s</font>

827
00:35:12,810 --> 00:35:17,759
that's<font color="#CCCCCC"> the trick</font>

828
00:35:13,760 --> 00:35:19,020
97%<font color="#E5E5E5"> of the time premature optimization</font>

829
00:35:17,760 --> 00:35:21,329
is the root of<font color="#E5E5E5"> all evil</font>

830
00:35:19,020 --> 00:35:25,200
<font color="#E5E5E5">we should not pass up our opportunities</font>

831
00:35:21,329 --> 00:35:27,500
in that<font color="#CCCCCC"> free</font><font color="#E5E5E5"> tackle 3% so how do you</font>

832
00:35:25,200 --> 00:35:30,089
<font color="#E5E5E5">know it's the critical three persons</font>

833
00:35:27,500 --> 00:35:31,589
it's because use<font color="#CCCCCC"> you've been wrong</font>

834
00:35:30,089 --> 00:35:35,578
before and<font color="#CCCCCC"> you know it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be</font>

835
00:35:31,589 --> 00:35:36,779
there so<font color="#E5E5E5"> if it was not never used in</font>

836
00:35:35,579 --> 00:35:38,760
<font color="#CCCCCC">prediction before you never had a</font>

837
00:35:36,780 --> 00:35:41,730
problem<font color="#E5E5E5"> before with</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> in the</font>

838
00:35:38,760 --> 00:35:44,550
critical<font color="#CCCCCC"> 3%</font><font color="#E5E5E5"> so be sure</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make it</font>

839
00:35:41,730 --> 00:35:47,099
<font color="#E5E5E5">normalized but when you know you have a</font>

840
00:35:44,550 --> 00:35:48,900
<font color="#CCCCCC">problem then it's in the 3%</font><font color="#E5E5E5"> if you're</font>

841
00:35:47,099 --> 00:35:50,520
not an<font color="#E5E5E5"> expert yet it will burn in</font>

842
00:35:48,900 --> 00:35:52,079
production and<font color="#E5E5E5"> you will have to fix it</font>

843
00:35:50,520 --> 00:35:54,119
<font color="#CCCCCC">and after you have fixed</font><font color="#E5E5E5"> it in</font>

844
00:35:52,079 --> 00:35:57,000
<font color="#E5E5E5">production</font><font color="#CCCCCC"> you're you know one stage up</font>

845
00:35:54,119 --> 00:35:58,920
in the expertise scale because you've

846
00:35:57,000 --> 00:36:02,250
done<font color="#CCCCCC"> it wrong once so now you're getting</font>

847
00:35:58,920 --> 00:36:03,839
<font color="#CCCCCC">to be an expert too soon so do you know</font>

848
00:36:02,250 --> 00:36:05,730
<font color="#CCCCCC">is the 3%</font><font color="#E5E5E5"> you know because you've done</font>

849
00:36:03,839 --> 00:36:08,710
<font color="#CCCCCC">it before</font><font color="#E5E5E5"> and if you never done it</font>

850
00:36:05,730 --> 00:36:11,619
<font color="#E5E5E5">before just don't do it yet</font>

851
00:36:08,710 --> 00:36:13,359
and so let's see some optimization

852
00:36:11,619 --> 00:36:16,390
techniques around<font color="#E5E5E5"> the schema modeling in</font>

853
00:36:13,359 --> 00:36:19,029
<font color="#CCCCCC">PostgreSQL the classic optimization</font>

854
00:36:16,390 --> 00:36:20,589
<font color="#E5E5E5">technique is caching so basically the</font>

855
00:36:19,030 --> 00:36:22,480
cache is the<font color="#E5E5E5"> trade-off in between CPU</font>

856
00:36:20,589 --> 00:36:24,820
<font color="#E5E5E5">and memory</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> when always been there</font>

857
00:36:22,480 --> 00:36:26,440
either<font color="#E5E5E5"> or you recompute</font><font color="#CCCCCC"> the value or you</font>

858
00:36:24,820 --> 00:36:28,780
have it already in memory<font color="#E5E5E5"> so you read it</font>

859
00:36:26,440 --> 00:36:34,599
<font color="#CCCCCC">from memory done</font><font color="#E5E5E5"> you have the value</font>

860
00:36:28,780 --> 00:36:36,430
<font color="#CCCCCC">already if you</font><font color="#E5E5E5"> follow the normalization</font>

861
00:36:34,599 --> 00:36:38,349
rules that we saw before<font color="#CCCCCC"> you will never</font>

862
00:36:36,430 --> 00:36:41,410
have duplicate information<font color="#E5E5E5"> anywhere in</font>

863
00:36:38,349 --> 00:36:43,030
your database which means<font color="#CCCCCC"> that maybe you</font>

864
00:36:41,410 --> 00:36:46,270
<font color="#E5E5E5">have to recompute many things</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> the</font>

865
00:36:43,030 --> 00:36:49,060
over time<font color="#E5E5E5"> so let's see about how to</font>

866
00:36:46,270 --> 00:36:50,619
cache data and as soon as you cache data

867
00:36:49,060 --> 00:36:53,320
<font color="#E5E5E5">you know that you need to implement</font>

868
00:36:50,619 --> 00:36:55,930
cache invalidation<font color="#E5E5E5"> right you know the</font>

869
00:36:53,320 --> 00:36:58,510
stream the two most<font color="#E5E5E5"> difficult things in</font>

870
00:36:55,930 --> 00:37:02,470
<font color="#CCCCCC">a computing science naming cache</font>

871
00:36:58,510 --> 00:37:03,760
invalidation<font color="#CCCCCC"> and</font><font color="#E5E5E5"> off by ones yes so</font>

872
00:37:02,470 --> 00:37:06,819
cache<font color="#CCCCCC"> even addition is on the list so</font>

873
00:37:03,760 --> 00:37:07,900
how do you do that in<font color="#CCCCCC"> PostgreSQL here is</font>

874
00:37:06,820 --> 00:37:11,830
an<font color="#CCCCCC"> example</font>

875
00:37:07,900 --> 00:37:14,170
that's from<font color="#CCCCCC"> formula one data set that is</font>

876
00:37:11,830 --> 00:37:16,750
<font color="#E5E5E5">available as</font><font color="#CCCCCC"> open data</font><font color="#E5E5E5"> it's all the</font>

877
00:37:14,170 --> 00:37:18,640
races from the<font color="#CCCCCC"> woolie story of Formula</font>

878
00:37:16,750 --> 00:37:21,310
<font color="#CCCCCC">One you can easily</font><font color="#E5E5E5"> have that in your</font>

879
00:37:18,640 --> 00:37:23,319
database to play around<font color="#E5E5E5"> with it's an</font><font color="#CCCCCC"> OK</font>

880
00:37:21,310 --> 00:37:24,970
schema to work with if you do<font color="#E5E5E5"> that and</font>

881
00:37:23,320 --> 00:37:27,670
find it you<font color="#E5E5E5"> will see that</font><font color="#CCCCCC"> the schema is</font>

882
00:37:24,970 --> 00:37:29,230
very not normalized<font color="#E5E5E5"> at all so it would</font>

883
00:37:27,670 --> 00:37:31,780
be a<font color="#E5E5E5"> very good exercise if you want to</font>

884
00:37:29,230 --> 00:37:34,720
<font color="#CCCCCC">train to pick the schema and do the work</font>

885
00:37:31,780 --> 00:37:37,030
of normalizing<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I didn't for this talk</font>

886
00:37:34,720 --> 00:37:41,709
<font color="#CCCCCC">so it's the schema</font><font color="#E5E5E5"> that has been that</font><font color="#CCCCCC"> is</font>

887
00:37:37,030 --> 00:37:44,560
<font color="#CCCCCC">found and so this query</font><font color="#E5E5E5"> is as you see</font>

888
00:37:41,710 --> 00:37:47,109
grouping by the grouping sets you know

889
00:37:44,560 --> 00:37:49,540
grouping sets who knows about grouping

890
00:37:47,109 --> 00:37:51,279
set the<font color="#E5E5E5"> other guys you don't know sequel</font>

891
00:37:49,540 --> 00:37:53,109
please you know<font color="#CCCCCC"> other training or</font>

892
00:37:51,280 --> 00:37:55,300
<font color="#E5E5E5">something or look you know look the</font>

893
00:37:53,109 --> 00:37:56,859
documentation<font color="#E5E5E5"> because then developers go</font>

894
00:37:55,300 --> 00:37:58,690
to me and say yes<font color="#CCCCCC"> SiC well it's not</font>

895
00:37:56,859 --> 00:38:00,700
powerful enough to do anything I<font color="#CCCCCC"> have to</font>

896
00:37:58,690 --> 00:38:03,339
<font color="#E5E5E5">do really so I need to resort to Python</font>

897
00:38:00,700 --> 00:38:04,868
or maybe<font color="#CCCCCC"> Java or C or whatever</font><font color="#E5E5E5"> and if</font>

898
00:38:03,339 --> 00:38:05,980
you say that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you don't know grouping</font>

899
00:38:04,869 --> 00:38:08,260
sets you

900
00:38:05,980 --> 00:38:10,660
you don't missing big so sequel is

901
00:38:08,260 --> 00:38:16,930
really nice so basically we're going<font color="#CCCCCC"> to</font>

902
00:38:10,660 --> 00:38:19,270
<font color="#E5E5E5">have the</font><font color="#CCCCCC"> the top drivers per Formula One</font>

903
00:38:16,930 --> 00:38:22,240
season<font color="#E5E5E5"> and</font><font color="#CCCCCC"> what many of them I don't</font>

904
00:38:19,270 --> 00:38:23,800
<font color="#E5E5E5">know that we are</font><font color="#CCCCCC"> gonna going</font><font color="#E5E5E5"> to select</font>

905
00:38:22,240 --> 00:38:26,169
on leaders who have more than<font color="#E5E5E5"> this</font>

906
00:38:23,800 --> 00:38:28,780
<font color="#CCCCCC">number of</font><font color="#E5E5E5"> points</font><font color="#CCCCCC"> okay it's arbitrary I</font>

907
00:38:26,170 --> 00:38:30,820
did that because when I<font color="#E5E5E5"> did that for</font>

908
00:38:28,780 --> 00:38:33,310
<font color="#E5E5E5">another presentation then the reason set</font>

909
00:38:30,820 --> 00:38:35,410
would fit on my side<font color="#CCCCCC"> oh why not</font>

910
00:38:33,310 --> 00:38:37,299
but maybe you have<font color="#E5E5E5"> business rules that</font>

911
00:38:35,410 --> 00:38:39,970
<font color="#E5E5E5">are more important than that so that's a</font>

912
00:38:37,300 --> 00:38:42,250
query<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can run and see that</font>

913
00:38:39,970 --> 00:38:43,868
trick here<font color="#E5E5E5"> it's you can actually do that</font>

914
00:38:42,250 --> 00:38:46,750
in<font color="#E5E5E5"> P sequel it's not just for the slide</font>

915
00:38:43,869 --> 00:38:48,460
<font color="#E5E5E5">so you</font><font color="#CCCCCC"> can have a dot SQL file and then</font>

916
00:38:46,750 --> 00:38:51,010
you can interactively change the season

917
00:38:48,460 --> 00:38:52,900
and run the<font color="#E5E5E5"> query again and it will pick</font>

918
00:38:51,010 --> 00:38:55,240
the new one<font color="#E5E5E5"> so</font><font color="#CCCCCC"> you can actually use</font>

919
00:38:52,900 --> 00:38:57,340
<font color="#E5E5E5">variables in piece equal</font><font color="#CCCCCC"> and then in</font>

920
00:38:55,240 --> 00:38:59,319
your sequel scripts<font color="#E5E5E5"> okay that's very</font>

921
00:38:57,340 --> 00:39:03,790
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> didn't</font><font color="#CCCCCC"> know that</font>

922
00:38:59,320 --> 00:39:06,220
<font color="#E5E5E5">maybe you have a look at it but let's</font>

923
00:39:03,790 --> 00:39:08,290
say<font color="#E5E5E5"> that query is on the dashboard when</font>

924
00:39:06,220 --> 00:39:11,500
the guys are<font color="#E5E5E5"> logging in</font><font color="#CCCCCC"> so each time</font>

925
00:39:08,290 --> 00:39:14,410
someone logs in<font color="#E5E5E5"> on on their nice</font>

926
00:39:11,500 --> 00:39:17,950
<font color="#CCCCCC">dashboard for a</font><font color="#E5E5E5"> Formula One races</font><font color="#CCCCCC"> there</font>

927
00:39:14,410 --> 00:39:19,390
you have a nice updated value for the

928
00:39:17,950 --> 00:39:21,939
<font color="#E5E5E5">current season maybe or something</font><font color="#CCCCCC"> like</font>

929
00:39:19,390 --> 00:39:24,520
<font color="#CCCCCC">that so you</font><font color="#E5E5E5"> are recomputing this thing</font>

930
00:39:21,940 --> 00:39:26,650
for every login<font color="#CCCCCC"> maybe you</font><font color="#E5E5E5"> don't want</font><font color="#CCCCCC"> to</font>

931
00:39:24,520 --> 00:39:29,970
do<font color="#E5E5E5"> that so maybe you want to cache the</font>

932
00:39:26,650 --> 00:39:32,410
information so<font color="#CCCCCC"> you cash it by creating</font><font color="#E5E5E5"> a</font>

933
00:39:29,970 --> 00:39:34,270
view so I do that<font color="#E5E5E5"> in two steps</font><font color="#CCCCCC"> some</font>

934
00:39:32,410 --> 00:39:36,339
people do it in one step<font color="#E5E5E5"> I prefer it</font>

935
00:39:34,270 --> 00:39:39,430
that way<font color="#E5E5E5"> so what I do is I create a</font><font color="#CCCCCC"> view</font>

936
00:39:36,340 --> 00:39:41,109
and then I create a motorized<font color="#E5E5E5"> view on</font>

937
00:39:39,430 --> 00:39:42,910
top of it because<font color="#E5E5E5"> then the</font><font color="#CCCCCC"> definition</font><font color="#E5E5E5"> of</font>

938
00:39:41,109 --> 00:39:45,670
the material<font color="#E5E5E5"> is one is select star from</font>

939
00:39:42,910 --> 00:39:46,839
the view that's easy<font color="#E5E5E5"> but and then you</font>

940
00:39:45,670 --> 00:39:49,540
can still<font color="#E5E5E5"> use the view and you</font><font color="#CCCCCC"> can</font>

941
00:39:46,840 --> 00:39:51,580
compare it easily so here is<font color="#E5E5E5"> beneficial</font>

942
00:39:49,540 --> 00:39:53,650
<font color="#E5E5E5">to use the view rather than</font><font color="#CCCCCC"> the</font>

943
00:39:51,580 --> 00:39:55,240
materials view or the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> round</font><font color="#E5E5E5"> well I</font>

944
00:39:53,650 --> 00:39:57,940
can<font color="#CCCCCC"> easily compare</font><font color="#E5E5E5"> because I have two</font>

945
00:39:55,240 --> 00:40:01,569
two<font color="#CCCCCC"> of them and I can use them who knows</font>

946
00:39:57,940 --> 00:40:03,730
about let's draw in lateral yeah okay

947
00:40:01,570 --> 00:40:06,550
<font color="#E5E5E5">the other guy is please you know try to</font>

948
00:40:03,730 --> 00:40:08,800
learn<font color="#CCCCCC"> about sequel he's</font><font color="#E5E5E5"> very important</font>

949
00:40:06,550 --> 00:40:10,450
this<font color="#CCCCCC"> thing is very useful when</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font>

950
00:40:08,800 --> 00:40:12,130
it<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> don't know it exists you</font>

951
00:40:10,450 --> 00:40:13,890
<font color="#E5E5E5">like I need to</font><font color="#CCCCCC"> write some more code</font><font color="#E5E5E5"> and</font>

952
00:40:12,130 --> 00:40:18,250
when you know it exists<font color="#E5E5E5"> that's maybe</font>

953
00:40:13,890 --> 00:40:19,509
<font color="#CCCCCC">2,000 lines</font><font color="#E5E5E5"> of Python code here say so</font>

954
00:40:18,250 --> 00:40:19,869
that maybe<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a trade off you</font><font color="#E5E5E5"> are</font>

955
00:40:19,510 --> 00:40:22,869
happy

956
00:40:19,869 --> 00:40:24,430
as soon as<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> it works</font><font color="#E5E5E5"> and I sorry</font>

957
00:40:22,869 --> 00:40:26,829
I don't<font color="#E5E5E5"> have time</font><font color="#CCCCCC"> to explain it now</font>

958
00:40:24,430 --> 00:40:30,460
but anyway<font color="#E5E5E5"> so now we have a materialized</font>

959
00:40:26,829 --> 00:40:33,690
<font color="#CCCCCC">view and we can use</font><font color="#E5E5E5"> it we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> even index</font>

960
00:40:30,460 --> 00:40:35,650
<font color="#E5E5E5">it so it's very fast now the dashboard</font>

961
00:40:33,690 --> 00:40:37,599
<font color="#CCCCCC">displaying the dashboard</font><font color="#E5E5E5"> now is very</font>

962
00:40:35,650 --> 00:40:39,039
fast every user is happy<font color="#E5E5E5"> but sometimes</font>

963
00:40:37,599 --> 00:40:40,930
<font color="#CCCCCC">there is a new race and you need to</font>

964
00:40:39,039 --> 00:40:42,549
update<font color="#E5E5E5"> the</font><font color="#CCCCCC"> result</font><font color="#E5E5E5"> so because the cache</font>

965
00:40:40,930 --> 00:40:44,649
is invalid as soon as there<font color="#CCCCCC"> is a new</font>

966
00:40:42,549 --> 00:40:46,089
race what do you do that well it's a

967
00:40:44,650 --> 00:40:50,440
single command line you refresh<font color="#E5E5E5"> the</font>

968
00:40:46,089 --> 00:40:52,180
motorized view<font color="#CCCCCC"> and that's</font><font color="#E5E5E5"> it so</font>

969
00:40:50,440 --> 00:40:55,240
implementing cash-in<font color="#CCCCCC"> PostgreSQL is</font>

970
00:40:52,180 --> 00:40:58,328
really easy the<font color="#CCCCCC"> only</font><font color="#E5E5E5"> part we were</font>

971
00:40:55,240 --> 00:40:59,950
missing is a integration<font color="#E5E5E5"> into the app so</font>

972
00:40:58,329 --> 00:41:03,009
in the application<font color="#CCCCCC"> you</font><font color="#E5E5E5"> would use the new</font>

973
00:40:59,950 --> 00:41:04,450
thing rather<font color="#E5E5E5"> than the old one</font><font color="#CCCCCC"> but it's</font>

974
00:41:03,009 --> 00:41:09,910
easy enough<font color="#E5E5E5"> to integrate right you need</font>

975
00:41:04,450 --> 00:41:13,868
<font color="#E5E5E5">just to think about</font><font color="#CCCCCC"> it other things we</font>

976
00:41:09,910 --> 00:41:15,609
can do to denormalize the schema<font color="#CCCCCC"> some</font>

977
00:41:13,869 --> 00:41:18,009
people want to<font color="#CCCCCC"> have audit trails which</font>

978
00:41:15,609 --> 00:41:19,839
means that you want<font color="#CCCCCC"> to have the history</font>

979
00:41:18,009 --> 00:41:22,170
of all the data that<font color="#E5E5E5"> ever went to your</font>

980
00:41:19,839 --> 00:41:25,808
database<font color="#CCCCCC"> even if when the schema changes</font>

981
00:41:22,170 --> 00:41:28,029
because there is no application<font color="#E5E5E5"> where</font>

982
00:41:25,809 --> 00:41:29,680
the schema doesn't change change is<font color="#CCCCCC"> part</font>

983
00:41:28,029 --> 00:41:32,289
<font color="#E5E5E5">of the world right the only</font><font color="#CCCCCC"> things that</font>

984
00:41:29,680 --> 00:41:35,259
<font color="#E5E5E5">don't change are dead so if your</font>

985
00:41:32,289 --> 00:41:37,450
application<font color="#CCCCCC"> never have any schema</font><font color="#E5E5E5"> update</font>

986
00:41:35,259 --> 00:41:41,170
<font color="#E5E5E5">it means that basically it's dead which</font>

987
00:41:37,450 --> 00:41:44,109
I'm sorry<font color="#E5E5E5"> some some application has get</font>

988
00:41:41,170 --> 00:41:45,640
<font color="#E5E5E5">retired so it's</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> but maybe it's not</font>

989
00:41:44,109 --> 00:41:47,410
<font color="#E5E5E5">your intention so if you have you will</font>

990
00:41:45,640 --> 00:41:50,379
always have<font color="#E5E5E5"> new business cases new ways</font>

991
00:41:47,410 --> 00:41:52,808
of doing<font color="#E5E5E5"> things new products to give you</font>

992
00:41:50,380 --> 00:41:54,670
users things so it's alive so the schema

993
00:41:52,809 --> 00:41:57,130
will change<font color="#E5E5E5"> which means that when the</font>

994
00:41:54,670 --> 00:41:59,140
schema<font color="#E5E5E5"> changes maybe the old history is</font>

995
00:41:57,130 --> 00:42:00,759
not compatible with<font color="#E5E5E5"> the</font><font color="#CCCCCC"> new schema which</font>

996
00:41:59,140 --> 00:42:02,819
means that you need to denormalize to be

997
00:42:00,759 --> 00:42:06,640
able<font color="#CCCCCC"> to handle the history of the schema</font>

998
00:42:02,819 --> 00:42:11,109
there is more<font color="#E5E5E5"> than one</font><font color="#CCCCCC"> way to do</font><font color="#E5E5E5"> it one</font>

999
00:42:06,640 --> 00:42:14,470
way<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> like is</font><font color="#CCCCCC"> abusing</font><font color="#E5E5E5"> JSON into</font>

1000
00:42:11,109 --> 00:42:17,980
<font color="#E5E5E5">being an archive thing so because the</font>

1001
00:42:14,470 --> 00:42:19,328
data<font color="#CCCCCC"> is Jason you can put any kind of</font>

1002
00:42:17,980 --> 00:42:22,450
schema into it it doesn't<font color="#CCCCCC"> care because</font>

1003
00:42:19,329 --> 00:42:24,039
Jason is<font color="#CCCCCC"> kimura's that's why the</font>

1004
00:42:22,450 --> 00:42:26,259
<font color="#CCCCCC">information is repeated</font><font color="#E5E5E5"> everywhere on</font>

1005
00:42:24,039 --> 00:42:28,170
the<font color="#CCCCCC"> sheet on every</font><font color="#E5E5E5"> JSON</font><font color="#CCCCCC"> and three-year</font>

1006
00:42:26,259 --> 00:42:30,430
will<font color="#E5E5E5"> have the same set of keys and</font>

1007
00:42:28,170 --> 00:42:32,570
different set of<font color="#CCCCCC"> values so it's really</font>

1008
00:42:30,430 --> 00:42:34,640
<font color="#E5E5E5">expensive on the storage it's a</font><font color="#CCCCCC"> are</font>

1009
00:42:32,570 --> 00:42:36,080
to search for<font color="#E5E5E5"> etc but some people are</font>

1010
00:42:34,640 --> 00:42:39,950
happy with<font color="#E5E5E5"> MongoDB anyway I don't</font>

1011
00:42:36,080 --> 00:42:41,600
<font color="#E5E5E5">understand why</font><font color="#CCCCCC"> but you can you</font><font color="#E5E5E5"> can do it</font>

1012
00:42:39,950 --> 00:42:43,970
it's<font color="#E5E5E5"> the same kind of approach it's a</font>

1013
00:42:41,600 --> 00:42:46,549
it's a scheme RS<font color="#E5E5E5"> so you have zero</font>

1014
00:42:43,970 --> 00:42:48,020
<font color="#E5E5E5">guarantee but it also means that</font>

1015
00:42:46,550 --> 00:42:50,330
whatever happened in the<font color="#CCCCCC"> past</font><font color="#E5E5E5"> in your</font>

1016
00:42:48,020 --> 00:42:52,610
<font color="#E5E5E5">history let's say you didn't implement</font>

1017
00:42:50,330 --> 00:42:55,160
<font color="#E5E5E5">your new check constraint for start date</font>

1018
00:42:52,610 --> 00:42:56,510
and<font color="#E5E5E5"> end date and no you did and some of</font>

1019
00:42:55,160 --> 00:42:58,790
the history<font color="#CCCCCC"> now is not compatible with</font>

1020
00:42:56,510 --> 00:43:00,590
<font color="#E5E5E5">your schema but Jason doesn't care if we</font>

1021
00:42:58,790 --> 00:43:02,480
just accept<font color="#E5E5E5"> that fine because it doesn't</font>

1022
00:43:00,590 --> 00:43:06,320
know about what's in the<font color="#CCCCCC"> Jason field</font>

1023
00:43:02,480 --> 00:43:08,660
anyway so I found it useful<font color="#CCCCCC"> to do that</font>

1024
00:43:06,320 --> 00:43:12,970
<font color="#E5E5E5">more than</font><font color="#CCCCCC"> once so</font><font color="#E5E5E5"> maybe you want to do</font>

1025
00:43:08,660 --> 00:43:16,930
it<font color="#CCCCCC"> too another trick</font><font color="#E5E5E5"> is validity</font><font color="#CCCCCC"> periods</font>

1026
00:43:12,970 --> 00:43:20,149
that<font color="#E5E5E5"> you can implement with that</font><font color="#CCCCCC"> Ramses</font>

1027
00:43:16,930 --> 00:43:22,069
so that's for<font color="#CCCCCC"> example rates for</font>

1028
00:43:20,150 --> 00:43:24,350
exchanging money and the rights<font color="#E5E5E5"> you know</font>

1029
00:43:22,070 --> 00:43:27,530
are constantly<font color="#E5E5E5"> changing but if you're</font>

1030
00:43:24,350 --> 00:43:29,509
<font color="#CCCCCC">doing any finance or</font><font color="#E5E5E5"> accounting</font><font color="#CCCCCC"> you need</font>

1031
00:43:27,530 --> 00:43:31,820
to have the rate at a<font color="#CCCCCC"> given date and</font>

1032
00:43:29,510 --> 00:43:36,410
what you do is that<font color="#E5E5E5"> you're going</font><font color="#CCCCCC"> to</font>

1033
00:43:31,820 --> 00:43:38,540
accept different values of<font color="#E5E5E5"> a rate for a</font>

1034
00:43:36,410 --> 00:43:41,210
single currency but with<font color="#CCCCCC"> non-overlapping</font>

1035
00:43:38,540 --> 00:43:44,900
<font color="#E5E5E5">valid</font><font color="#CCCCCC"> et which means that then you sort</font>

1036
00:43:41,210 --> 00:43:47,930
the<font color="#E5E5E5"> data like this like what how much</font>

1037
00:43:44,900 --> 00:43:49,490
was the<font color="#CCCCCC"> euro at this date so this</font>

1038
00:43:47,930 --> 00:43:51,080
operator<font color="#E5E5E5"> looks strange when you don't</font>

1039
00:43:49,490 --> 00:43:52,279
know<font color="#E5E5E5"> how to read</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> so I'm going</font><font color="#CCCCCC"> to tell</font>

1040
00:43:51,080 --> 00:43:55,460
you and then<font color="#E5E5E5"> it doesn't look strange</font>

1041
00:43:52,280 --> 00:43:59,000
anymore<font color="#E5E5E5"> so that contains so the value DT</font>

1042
00:43:55,460 --> 00:44:01,550
period contains this<font color="#E5E5E5"> date by the way</font>

1043
00:43:59,000 --> 00:44:03,320
using the data type<font color="#CCCCCC"> name here just</font>

1044
00:44:01,550 --> 00:44:06,350
<font color="#CCCCCC">before a literal string</font><font color="#E5E5E5"> it's called a</font>

1045
00:44:03,320 --> 00:44:08,720
decorated literal<font color="#E5E5E5"> in</font><font color="#CCCCCC"> PostgreSQL</font><font color="#E5E5E5"> so you</font>

1046
00:44:06,350 --> 00:44:11,660
can use that<font color="#CCCCCC"> that way the other</font><font color="#E5E5E5"> way to</font>

1047
00:44:08,720 --> 00:44:13,459
do<font color="#CCCCCC"> it is</font><font color="#E5E5E5"> : : date and that is a cast so</font>

1048
00:44:11,660 --> 00:44:16,250
it<font color="#CCCCCC"> gets the same result</font><font color="#E5E5E5"> but it's a</font>

1049
00:44:13,460 --> 00:44:18,620
<font color="#E5E5E5">little different</font><font color="#CCCCCC"> so date</font><font color="#E5E5E5"> and the thing</font>

1050
00:44:16,250 --> 00:44:21,770
is<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we said that</font><font color="#E5E5E5"> we have this</font>

1051
00:44:18,620 --> 00:44:24,140
very<font color="#CCCCCC"> strong</font><font color="#E5E5E5"> warranty then we know that</font>

1052
00:44:21,770 --> 00:44:26,000
<font color="#CCCCCC">we</font><font color="#E5E5E5"> will have only one record because</font>

1053
00:44:24,140 --> 00:44:28,069
given a single<font color="#E5E5E5"> date there is no way that</font>

1054
00:44:26,000 --> 00:44:30,830
<font color="#E5E5E5">we have more</font><font color="#CCCCCC"> than one because</font><font color="#E5E5E5"> we said we</font>

1055
00:44:28,070 --> 00:44:32,630
<font color="#E5E5E5">refuse to have overlapping countries so</font>

1056
00:44:30,830 --> 00:44:34,520
for<font color="#E5E5E5"> example date we have the strong</font>

1057
00:44:32,630 --> 00:44:37,910
guarantee that there will only be<font color="#CCCCCC"> one</font>

1058
00:44:34,520 --> 00:44:39,440
value<font color="#E5E5E5"> in our database</font><font color="#CCCCCC"> right so that no</font>

1059
00:44:37,910 --> 00:44:41,450
you can use that in<font color="#E5E5E5"> your application and</font>

1060
00:44:39,440 --> 00:44:43,880
you can<font color="#E5E5E5"> even use that as a join</font>

1061
00:44:41,450 --> 00:44:45,589
condition<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> join in between the</font>

1062
00:44:43,880 --> 00:44:47,900
<font color="#CCCCCC">rates</font><font color="#E5E5E5"> table and maybe</font>

1063
00:44:45,589 --> 00:44:50,000
the history of people<font color="#E5E5E5"> who did buy or</font>

1064
00:44:47,900 --> 00:44:51,770
<font color="#CCCCCC">history</font><font color="#E5E5E5"> of your invoicing at straw and</font>

1065
00:44:50,000 --> 00:44:53,750
you<font color="#E5E5E5"> can match the invoice with the rate</font>

1066
00:44:51,770 --> 00:44:56,300
at<font color="#E5E5E5"> the date</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the invoice so you can</font>

1067
00:44:53,750 --> 00:44:59,570
join on this<font color="#CCCCCC"> ok that's pretty</font><font color="#E5E5E5"> nice to</font>

1068
00:44:56,300 --> 00:45:03,099
<font color="#CCCCCC">have so</font><font color="#E5E5E5"> the normalization air pours in</font>

1069
00:44:59,570 --> 00:45:05,180
<font color="#CCCCCC">PostgreSQL a lot of them are data</font><font color="#E5E5E5"> types</font>

1070
00:45:03,099 --> 00:45:07,640
<font color="#E5E5E5">composite arrays</font><font color="#CCCCCC"> Jason</font>

1071
00:45:05,180 --> 00:45:09,230
so<font color="#CCCCCC"> Jason in PostgreSQL is spelled a</font>

1072
00:45:07,640 --> 00:45:11,060
little<font color="#E5E5E5"> strange it's spelled with B at</font>

1073
00:45:09,230 --> 00:45:13,700
the end<font color="#E5E5E5"> don't you</font><font color="#CCCCCC"> know don't bother but</font>

1074
00:45:11,060 --> 00:45:16,700
just remember to make<font color="#E5E5E5"> it that's it</font>

1075
00:45:13,700 --> 00:45:20,060
domains and other tricks are like<font color="#E5E5E5"> H</font>

1076
00:45:16,700 --> 00:45:21,200
store<font color="#CCCCCC"> add 3 int array</font><font color="#E5E5E5"> H ll</font><font color="#CCCCCC"> if you don't</font>

1077
00:45:20,060 --> 00:45:23,029
know about them<font color="#E5E5E5"> there was a talk this</font>

1078
00:45:21,200 --> 00:45:25,549
morning from<font color="#E5E5E5"> a Craig who went through</font>

1079
00:45:23,030 --> 00:45:28,119
<font color="#E5E5E5">most of them so if you if you've been</font>

1080
00:45:25,550 --> 00:45:30,410
<font color="#CCCCCC">there</font><font color="#E5E5E5"> you know about them if you don't</font>

1081
00:45:28,119 --> 00:45:31,790
there<font color="#CCCCCC"> is material</font><font color="#E5E5E5"> on the Internet to a</font>

1082
00:45:30,410 --> 00:45:34,480
few<font color="#CCCCCC"> weight</font><font color="#E5E5E5"> know that you know the name</font>

1083
00:45:31,790 --> 00:45:36,770
<font color="#CCCCCC">you can</font><font color="#E5E5E5"> actually find it so it's easy</font>

1084
00:45:34,480 --> 00:45:38,720
another trick to determine eyes your

1085
00:45:36,770 --> 00:45:40,690
data is partitioning<font color="#E5E5E5"> you need to be</font>

1086
00:45:38,720 --> 00:45:43,399
really careful when you do partitioning

1087
00:45:40,690 --> 00:45:45,619
because<font color="#E5E5E5"> especially before</font><font color="#CCCCCC"> PostgreSQL</font>

1088
00:45:43,400 --> 00:45:47,720
<font color="#CCCCCC">relevant when you do partitioning the</font>

1089
00:45:45,619 --> 00:45:50,690
trade-off is<font color="#CCCCCC"> that you lose indexing</font><font color="#E5E5E5"> you</font>

1090
00:45:47,720 --> 00:45:54,200
lose primary keys you lose<font color="#E5E5E5"> conflict on</font>

1091
00:45:50,690 --> 00:45:56,869
<font color="#E5E5E5">link and you use you cannot update keys</font>

1092
00:45:54,200 --> 00:45:59,359
anymore<font color="#E5E5E5"> so that was before now you can</font>

1093
00:45:56,869 --> 00:46:01,160
do a<font color="#CCCCCC"> review</font><font color="#E5E5E5"> almost everything the the</font>

1094
00:45:59,359 --> 00:46:03,200
<font color="#CCCCCC">only trick is</font><font color="#E5E5E5"> with the foreign keys it</font>

1095
00:46:01,160 --> 00:46:04,940
<font color="#E5E5E5">only works one way but I'm told that</font>

1096
00:46:03,200 --> 00:46:09,078
<font color="#E5E5E5">maybe it will</font><font color="#CCCCCC"> work both</font><font color="#E5E5E5"> way in the</font><font color="#CCCCCC"> next</font>

1097
00:46:04,940 --> 00:46:11,450
release yes two<font color="#E5E5E5"> of them because you are</font>

1098
00:46:09,079 --> 00:46:13,540
actually implementing<font color="#E5E5E5"> the future thank</font>

1099
00:46:11,450 --> 00:46:13,540
you

1100
00:46:17,890 --> 00:46:26,839
sorry<font color="#E5E5E5"> how does that so</font><font color="#CCCCCC"> partitioning</font><font color="#E5E5E5"> you</font>

1101
00:46:23,330 --> 00:46:29,690
used to be a very important trade<font color="#E5E5E5"> of to</font>

1102
00:46:26,840 --> 00:46:32,060
make in the schema design<font color="#E5E5E5"> another</font><font color="#CCCCCC"> is</font>

1103
00:46:29,690 --> 00:46:33,620
it's a less and<font color="#E5E5E5"> less so because as soon</font>

1104
00:46:32,060 --> 00:46:35,600
<font color="#E5E5E5">as we have the wool support for</font>

1105
00:46:33,620 --> 00:46:38,540
everything<font color="#CCCCCC"> you need to implement normal</font>

1106
00:46:35,600 --> 00:46:40,730
<font color="#E5E5E5">normalized schema then it's not so much</font>

1107
00:46:38,540 --> 00:46:42,560
a trade off anymore<font color="#E5E5E5"> but to this day I</font>

1108
00:46:40,730 --> 00:46:46,580
still think of partitioning as a trade

1109
00:46:42,560 --> 00:46:49,670
off in<font color="#CCCCCC"> the in the ability to implement a</font>

1110
00:46:46,580 --> 00:46:50,890
proper schema on top of the data<font color="#CCCCCC"> long</font>

1111
00:46:49,670 --> 00:46:53,570
<font color="#E5E5E5">story short</font>

1112
00:46:50,890 --> 00:46:56,509
try not to implement<font color="#E5E5E5"> it and until you</font>

1113
00:46:53,570 --> 00:46:59,510
need it<font color="#E5E5E5"> right</font><font color="#CCCCCC"> except if you know you're</font>

1114
00:46:56,510 --> 00:47:00,980
in the<font color="#CCCCCC"> 3% of cases where if you don't</font>

1115
00:46:59,510 --> 00:47:03,230
implement<font color="#E5E5E5"> it you will be in</font><font color="#CCCCCC"> trouble in</font>

1116
00:47:00,980 --> 00:47:06,650
production but all the new<font color="#CCCCCC"> all do you</font>

1117
00:47:03,230 --> 00:47:08,210
<font color="#E5E5E5">know that right</font><font color="#CCCCCC"> so maybe you</font><font color="#E5E5E5"> need it</font>

1118
00:47:06,650 --> 00:47:09,920
maybe<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> know you need it</font><font color="#E5E5E5"> yet if</font>

1119
00:47:08,210 --> 00:47:12,110
you don't know you<font color="#E5E5E5"> need it</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> do it</font>

1120
00:47:09,920 --> 00:47:15,440
and if<font color="#E5E5E5"> you need to do it</font><font color="#CCCCCC"> PostgreSQL is</font>

1121
00:47:12,110 --> 00:47:17,600
very good at it<font color="#E5E5E5"> so you can do it some</font>

1122
00:47:15,440 --> 00:47:20,840
<font color="#E5E5E5">people also want to compare with not</font>

1123
00:47:17,600 --> 00:47:24,380
<font color="#CCCCCC">only sequel solutions and my point is</font>

1124
00:47:20,840 --> 00:47:26,690
that<font color="#CCCCCC"> PostgreSQL is sequel and also a</font>

1125
00:47:24,380 --> 00:47:28,640
<font color="#E5E5E5">parts of the not only sequel movement as</font>

1126
00:47:26,690 --> 00:47:31,220
<font color="#CCCCCC">i'm going to</font><font color="#E5E5E5"> show now</font><font color="#CCCCCC"> so it's actually</font>

1127
00:47:28,640 --> 00:47:35,660
yes<font color="#E5E5E5"> well right they have no sequel we</font>

1128
00:47:31,220 --> 00:47:37,459
have SQL it's way better<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first thing</font>

1129
00:47:35,660 --> 00:47:40,029
is you can go schema<font color="#CCCCCC"> res with the</font><font color="#E5E5E5"> Jason</font>

1130
00:47:37,460 --> 00:47:43,490
<font color="#CCCCCC">B as we said before so that I know did</font>

1131
00:47:40,030 --> 00:47:46,460
the set of you know<font color="#E5E5E5"> Magic the Gathering</font>

1132
00:47:43,490 --> 00:47:48,770
the card game<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> you might have</font>

1133
00:47:46,460 --> 00:47:50,990
<font color="#E5E5E5">been playing that before so you can have</font>

1134
00:47:48,770 --> 00:47:52,850
all of<font color="#E5E5E5"> them as because it's the data set</font>

1135
00:47:50,990 --> 00:47:55,879
is<font color="#CCCCCC"> available as JSON</font><font color="#E5E5E5"> so I just load it</font>

1136
00:47:52,850 --> 00:47:58,069
<font color="#E5E5E5">as it was because usually what you do is</font>

1137
00:47:55,880 --> 00:48:00,350
you load the data set as it is and then

1138
00:47:58,070 --> 00:48:02,210
<font color="#CCCCCC">you transform it</font><font color="#E5E5E5"> and normalize it in</font>

1139
00:48:00,350 --> 00:48:04,069
sequel because<font color="#E5E5E5"> the best way to</font><font color="#CCCCCC"> unroll</font>

1140
00:48:02,210 --> 00:48:06,080
the data and transform it into<font color="#CCCCCC"> a new</font>

1141
00:48:04,070 --> 00:48:07,700
<font color="#E5E5E5">representation is</font><font color="#CCCCCC"> the sequel query</font>

1142
00:48:06,080 --> 00:48:10,490
language<font color="#CCCCCC"> you might have heard about</font><font color="#E5E5E5"> it</font>

1143
00:48:07,700 --> 00:48:12,080
sequel is really good at<font color="#E5E5E5"> that</font><font color="#CCCCCC"> so first</font>

1144
00:48:10,490 --> 00:48:15,410
<font color="#CCCCCC">you load the data and then you</font><font color="#E5E5E5"> process</font>

1145
00:48:12,080 --> 00:48:19,190
<font color="#E5E5E5">it so some people implement ETL extract</font>

1146
00:48:15,410 --> 00:48:21,560
transform load<font color="#E5E5E5"> I usually do alt extract</font>

1147
00:48:19,190 --> 00:48:23,900
load and then transform<font color="#E5E5E5"> because once in</font>

1148
00:48:21,560 --> 00:48:26,930
the<font color="#CCCCCC"> eights in PostgreSQL</font><font color="#E5E5E5"> it's way easier</font>

1149
00:48:23,900 --> 00:48:28,490
to<font color="#E5E5E5"> handle so anyway here you see the</font>

1150
00:48:26,930 --> 00:48:29,549
<font color="#CCCCCC">contain operator that we saw before</font>

1151
00:48:28,490 --> 00:48:32,189
it's

1152
00:48:29,549 --> 00:48:35,400
but no it's working<font color="#CCCCCC"> with Jason</font><font color="#E5E5E5"> because</font>

1153
00:48:32,190 --> 00:48:38,880
<font color="#CCCCCC">PostgreSQL is an object-oriented R DBMS</font>

1154
00:48:35,400 --> 00:48:40,109
which means that the way I see it<font color="#E5E5E5"> you</font>

1155
00:48:38,880 --> 00:48:41,579
can have things<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> this operator</font>

1156
00:48:40,109 --> 00:48:44,308
<font color="#E5E5E5">knows how to work with many different</font>

1157
00:48:41,579 --> 00:48:45,980
<font color="#CCCCCC">data types like you would do in C++ or</font>

1158
00:48:44,309 --> 00:48:48,869
Java or things and you can actually

1159
00:48:45,980 --> 00:48:51,210
write pretty simple sequel and that is

1160
00:48:48,869 --> 00:48:55,020
fully optimized in this<font color="#CCCCCC"> case for Jason</font>

1161
00:48:51,210 --> 00:48:57,210
<font color="#E5E5E5">okay it looks like a normal sequel query</font>

1162
00:48:55,020 --> 00:49:02,009
and it actually<font color="#E5E5E5"> implements very smart</font>

1163
00:48:57,210 --> 00:49:04,140
things<font color="#E5E5E5"> and ways to indulge</font><font color="#CCCCCC"> Jason no</font>

1164
00:49:02,010 --> 00:49:06,829
sequel system also<font color="#E5E5E5"> usually are good at</font>

1165
00:49:04,140 --> 00:49:09,900
implementing durability trade-offs and

1166
00:49:06,829 --> 00:49:12,329
in<font color="#CCCCCC"> PostgreSQL you can set synchronous</font>

1167
00:49:09,900 --> 00:49:14,940
commit different values<font color="#E5E5E5"> okay</font>

1168
00:49:12,329 --> 00:49:18,210
what people don't realize<font color="#CCCCCC"> often is that</font>

1169
00:49:14,940 --> 00:49:20,190
it's the dynamic synchronous commit is

1170
00:49:18,210 --> 00:49:21,780
per transaction setting so<font color="#E5E5E5"> you can have</font>

1171
00:49:20,190 --> 00:49:25,710
in the<font color="#E5E5E5"> same</font><font color="#CCCCCC"> PostgreSQL system in</font>

1172
00:49:21,780 --> 00:49:27,839
<font color="#E5E5E5">prediction at runtime some workload</font><font color="#CCCCCC"> that</font>

1173
00:49:25,710 --> 00:49:30,059
is critical and we<font color="#CCCCCC"> multiply which means</font>

1174
00:49:27,839 --> 00:49:32,520
we only<font color="#E5E5E5"> tell the user it's</font><font color="#CCCCCC"> ok if</font><font color="#E5E5E5"> we know</font>

1175
00:49:30,059 --> 00:49:36,750
it's been applied<font color="#CCCCCC"> to a standby a replica</font>

1176
00:49:32,520 --> 00:49:38,339
<font color="#E5E5E5">and you can have other transactions that</font>

1177
00:49:36,750 --> 00:49:40,559
<font color="#E5E5E5">you don't care</font><font color="#CCCCCC"> so much about maybe it's</font>

1178
00:49:38,339 --> 00:49:42,029
<font color="#E5E5E5">the web session</font><font color="#CCCCCC"> handle</font><font color="#E5E5E5"> and you store it</font>

1179
00:49:40,559 --> 00:49:43,470
in the database because<font color="#CCCCCC"> it's the start</font>

1180
00:49:42,029 --> 00:49:46,380
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the project you don't care about the</font>

1181
00:49:43,470 --> 00:49:47,788
infrastructure<font color="#E5E5E5"> yet etc and then if you</font>

1182
00:49:46,380 --> 00:49:50,900
<font color="#E5E5E5">lose the database of course you lose the</font>

1183
00:49:47,789 --> 00:49:53,849
web sessions who cares<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so it's off</font>

1184
00:49:50,900 --> 00:49:55,740
you can even<font color="#E5E5E5"> do</font><font color="#CCCCCC"> that dynamically</font><font color="#E5E5E5"> in your</font>

1185
00:49:53,849 --> 00:49:56,250
application<font color="#CCCCCC"> you can have a ear it's a</font>

1186
00:49:55,740 --> 00:49:57,930
trigger

1187
00:49:56,250 --> 00:50:01,410
where is really trigger is written here

1188
00:49:57,930 --> 00:50:04,589
<font color="#E5E5E5">it's a trigger that say if the</font><font color="#CCCCCC"> user is</font>

1189
00:50:01,410 --> 00:50:06,770
spending so much money which is set<font color="#CCCCCC"> in a</font>

1190
00:50:04,589 --> 00:50:06,770
<font color="#CCCCCC">GAC</font>

