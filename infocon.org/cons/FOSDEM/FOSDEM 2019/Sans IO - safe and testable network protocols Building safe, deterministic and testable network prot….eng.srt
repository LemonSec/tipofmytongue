1
00:00:04,620 --> 00:00:10,440
<font color="#E5E5E5">okay so thank you really for coming here</font>

2
00:00:07,700 --> 00:00:12,270
<font color="#CCCCCC">we'll talk about</font><font color="#E5E5E5"> network today because</font>

3
00:00:10,440 --> 00:00:14,760
it's a topic<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> a bit obsessing</font>

4
00:00:12,270 --> 00:00:17,180
<font color="#E5E5E5">for me and I'll show you like what I've</font>

5
00:00:14,760 --> 00:00:21,509
<font color="#E5E5E5">been doing</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> the past three five years</font>

6
00:00:17,180 --> 00:00:23,810
<font color="#E5E5E5">so I'm refer you do cloud stuff</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> ask</font>

7
00:00:21,510 --> 00:00:26,279
your applications at<font color="#E5E5E5"> Clara cloud and</font>

8
00:00:23,810 --> 00:00:29,130
hosting all of that stuff means that I

9
00:00:26,279 --> 00:00:31,470
have to<font color="#E5E5E5"> mess with protocols and HTTP and</font>

10
00:00:29,130 --> 00:00:36,930
proxies and stuff and<font color="#CCCCCC"> I had to get a bit</font>

11
00:00:31,470 --> 00:00:38,460
far in<font color="#CCCCCC"> rush networking so this is a</font>

12
00:00:36,930 --> 00:00:40,470
topic<font color="#CCCCCC"> that's been very big in</font><font color="#E5E5E5"> the Irish</font>

13
00:00:38,460 --> 00:00:44,870
<font color="#E5E5E5">community for the past years the</font><font color="#CCCCCC"> words</font>

14
00:00:40,470 --> 00:00:48,059
<font color="#CCCCCC">sync networking why do we care</font>

15
00:00:44,870 --> 00:00:51,510
can't we just<font color="#E5E5E5"> think of network in the</font>

16
00:00:48,059 --> 00:00:54,570
<font color="#E5E5E5">blocking way like I create a connection</font>

17
00:00:51,510 --> 00:00:56,820
<font color="#E5E5E5">somewhere or listen</font><font color="#CCCCCC"> to something</font><font color="#E5E5E5"> and my</font>

18
00:00:54,570 --> 00:00:58,590
code is blocking until I get the

19
00:00:56,820 --> 00:01:02,129
connection<font color="#CCCCCC"> or the data and it's very</font>

20
00:00:58,590 --> 00:01:04,140
<font color="#E5E5E5">easy</font><font color="#CCCCCC"> very nice to</font><font color="#E5E5E5"> think about and this</font>

21
00:01:02,129 --> 00:01:07,979
is<font color="#CCCCCC"> what a lot of platforms</font><font color="#E5E5E5"> want you to</font>

22
00:01:04,140 --> 00:01:09,569
do the thing is if<font color="#E5E5E5"> you do that in rust</font>

23
00:01:07,979 --> 00:01:12,720
blocking<font color="#CCCCCC"> network</font><font color="#E5E5E5"> it's not good for</font>

24
00:01:09,569 --> 00:01:15,929
<font color="#E5E5E5">performance that's that's been a problem</font>

25
00:01:12,720 --> 00:01:18,000
<font color="#E5E5E5">that's been annoying</font><font color="#CCCCCC"> people for I don't</font>

26
00:01:15,929 --> 00:01:20,610
<font color="#CCCCCC">know</font><font color="#E5E5E5"> what when the</font><font color="#CCCCCC"> C 10k problem</font>

27
00:01:18,000 --> 00:01:23,160
appeared the idea was like okay<font color="#E5E5E5"> you we</font>

28
00:01:20,610 --> 00:01:25,500
<font color="#E5E5E5">have blocking servers everywhere so we</font>

29
00:01:23,160 --> 00:01:27,000
have for every connection<font color="#E5E5E5"> we need to</font>

30
00:01:25,500 --> 00:01:29,009
have a new thread or new process to

31
00:01:27,000 --> 00:01:31,950
<font color="#E5E5E5">under them and then the</font><font color="#CCCCCC"> server's got</font>

32
00:01:29,009 --> 00:01:33,630
overloaded<font color="#E5E5E5"> and so performance was not</font>

33
00:01:31,950 --> 00:01:36,720
<font color="#E5E5E5">great and someone said okay we need a</font>

34
00:01:33,630 --> 00:01:42,479
way<font color="#CCCCCC"> to accept 10,000 concurrent</font>

35
00:01:36,720 --> 00:01:43,950
connections all do we do that<font color="#E5E5E5"> so we</font>

36
00:01:42,479 --> 00:01:47,039
needed<font color="#E5E5E5"> another way to think about</font>

37
00:01:43,950 --> 00:01:49,530
networking<font color="#E5E5E5"> and the thing is network is</font>

38
00:01:47,039 --> 00:01:52,319
not blocking<font color="#E5E5E5"> that's not how the</font>

39
00:01:49,530 --> 00:01:55,440
operating system works<font color="#E5E5E5"> packets can come</font>

40
00:01:52,319 --> 00:01:57,929
here<font color="#CCCCCC"> I'm good</font><font color="#E5E5E5"> there and all the time and</font>

41
00:01:55,440 --> 00:02:00,479
what you process sees is just<font color="#CCCCCC"> a nice</font>

42
00:01:57,929 --> 00:02:03,410
view that the operating system<font color="#E5E5E5"> is doing</font>

43
00:02:00,479 --> 00:02:05,489
to<font color="#E5E5E5"> help you do networking but basically</font>

44
00:02:03,410 --> 00:02:12,090
anything can happen at any time<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

45
00:02:05,489 --> 00:02:15,360
network so what happens in fact you have

46
00:02:12,090 --> 00:02:17,370
the<font color="#CCCCCC"> OS that receives packets like</font>

47
00:02:15,360 --> 00:02:18,520
imagine you want<font color="#E5E5E5"> to accept a TCP</font>

48
00:02:17,370 --> 00:02:20,440
connection

49
00:02:18,520 --> 00:02:23,410
you have a function<font color="#E5E5E5"> to say I want to</font>

50
00:02:20,440 --> 00:02:25,570
<font color="#E5E5E5">accept one you're not like getting</font>

51
00:02:23,410 --> 00:02:27,490
waiting for<font color="#E5E5E5"> a connection there what</font>

52
00:02:25,570 --> 00:02:30,790
happened is like<font color="#E5E5E5"> someone did a TCP</font>

53
00:02:27,490 --> 00:02:33,970
handshake<font color="#CCCCCC"> with your server and the</font>

54
00:02:30,790 --> 00:02:35,650
kernel<font color="#E5E5E5"> handled the on check and then put</font>

55
00:02:33,970 --> 00:02:38,020
the<font color="#E5E5E5"> connection</font><font color="#CCCCCC"> in a queue somewhere and</font>

56
00:02:35,650 --> 00:02:39,880
we did you<font color="#E5E5E5"> accept you get something from</font>

57
00:02:38,020 --> 00:02:41,800
that<font color="#E5E5E5"> queue so already when you're</font>

58
00:02:39,880 --> 00:02:44,230
accepting a<font color="#E5E5E5"> connection</font><font color="#CCCCCC"> a lot of stuff</font>

59
00:02:41,800 --> 00:02:44,530
happened before you<font color="#E5E5E5"> even took a look at</font>

60
00:02:44,230 --> 00:02:47,230
it

61
00:02:44,530 --> 00:02:51,850
and then when you want<font color="#CCCCCC"> to read data from</font>

62
00:02:47,230 --> 00:02:54,399
<font color="#E5E5E5">the socket well you're not waiting for</font>

63
00:02:51,850 --> 00:02:56,640
<font color="#CCCCCC">data to happen they're basically the the</font>

64
00:02:54,400 --> 00:02:58,930
operating system<font color="#CCCCCC"> receive the packet and</font>

65
00:02:56,640 --> 00:03:00,910
<font color="#CCCCCC">passed it and put</font><font color="#E5E5E5"> that in</font><font color="#CCCCCC"> your buffer</font>

66
00:02:58,930 --> 00:03:02,170
somewhere and when you do a read<font color="#E5E5E5"> on the</font>

67
00:03:00,910 --> 00:03:04,150
<font color="#CCCCCC">socket</font><font color="#E5E5E5"> you get the data from the buffer</font>

68
00:03:02,170 --> 00:03:06,850
so the data was<font color="#E5E5E5"> already there for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> long</font>

69
00:03:04,150 --> 00:03:09,430
<font color="#CCCCCC">long time ago</font><font color="#E5E5E5"> and when you write to the</font>

70
00:03:06,850 --> 00:03:11,320
<font color="#E5E5E5">socket</font><font color="#CCCCCC"> you know it's not</font><font color="#E5E5E5"> already going</font>

71
00:03:09,430 --> 00:03:14,890
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the network</font><font color="#CCCCCC"> it goes</font><font color="#E5E5E5"> into a buffer and</font>

72
00:03:11,320 --> 00:03:16,329
then operating system say<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> I give</font>

73
00:03:14,890 --> 00:03:20,170
that<font color="#E5E5E5"> to the network out at some</font><font color="#CCCCCC"> point</font>

74
00:03:16,330 --> 00:03:22,720
<font color="#E5E5E5">and the packet will will go so whatever</font>

75
00:03:20,170 --> 00:03:24,760
you think<font color="#E5E5E5"> you do in networking the</font>

76
00:03:22,720 --> 00:03:26,650
operating system is scheduling itself

77
00:03:24,760 --> 00:03:31,209
<font color="#E5E5E5">I'm choosing when it does whatever and</font>

78
00:03:26,650 --> 00:03:32,950
you're not in<font color="#E5E5E5"> control of anything</font><font color="#CCCCCC"> the</font>

79
00:03:31,210 --> 00:03:35,710
blocking the nice<font color="#CCCCCC"> blocking</font><font color="#E5E5E5"> interface is</font>

80
00:03:32,950 --> 00:03:37,420
<font color="#CCCCCC">actually live a very</font><font color="#E5E5E5"> nice life that we</font>

81
00:03:35,710 --> 00:03:38,370
want to<font color="#E5E5E5"> believe but it's right not how</font>

82
00:03:37,420 --> 00:03:42,030
it works

83
00:03:38,370 --> 00:03:44,470
and when people<font color="#E5E5E5"> wanted to get to like</font>

84
00:03:42,030 --> 00:03:47,530
<font color="#E5E5E5">10,000</font><font color="#CCCCCC"> conquered concurrent collection</font>

85
00:03:44,470 --> 00:03:50,520
problem<font color="#E5E5E5"> they had to get to remove this</font>

86
00:03:47,530 --> 00:03:55,180
<font color="#E5E5E5">abstraction and get a bit lower</font><font color="#CCCCCC"> so</font>

87
00:03:50,520 --> 00:03:56,800
<font color="#CCCCCC">that's where even today</font><font color="#E5E5E5"> you came the</font>

88
00:03:55,180 --> 00:04:01,150
<font color="#CCCCCC">idea was that you could register</font><font color="#E5E5E5"> a</font>

89
00:03:56,800 --> 00:04:03,370
<font color="#E5E5E5">socket to the system and say okay I want</font>

90
00:04:01,150 --> 00:04:06,790
<font color="#E5E5E5">you to tell me when I can read</font><font color="#CCCCCC"> or write</font>

91
00:04:03,370 --> 00:04:08,890
on a socket there's a specific error

92
00:04:06,790 --> 00:04:11,170
code on<font color="#CCCCCC"> socket like when you want to</font>

93
00:04:08,890 --> 00:04:12,760
read data you can read and read and read

94
00:04:11,170 --> 00:04:15,190
and read at some point the<font color="#E5E5E5"> operating</font>

95
00:04:12,760 --> 00:04:16,988
same says it says good<font color="#E5E5E5"> block which means</font>

96
00:04:15,190 --> 00:04:19,029
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> I have no more they'd have to give</font>

97
00:04:16,988 --> 00:04:22,390
you you have to wait for the next<font color="#E5E5E5"> event</font>

98
00:04:19,029 --> 00:04:24,309
when I tell you<font color="#E5E5E5"> this data and you on few</font>

99
00:04:22,390 --> 00:04:27,099
handle<font color="#E5E5E5"> your own scheduling and what you</font>

100
00:04:24,310 --> 00:04:29,440
do with<font color="#CCCCCC"> this forget yourself</font><font color="#E5E5E5"> this is</font>

101
00:04:27,100 --> 00:04:32,080
what's been done to<font color="#E5E5E5"> get like fast web</font>

102
00:04:29,440 --> 00:04:35,259
servers like this is what you<font color="#E5E5E5"> can find</font>

103
00:04:32,080 --> 00:04:39,490
I mean<font color="#E5E5E5"> almost any language runtime ever</font>

104
00:04:35,259 --> 00:04:41,740
because it's it's a bit hard to do<font color="#CCCCCC"> but</font>

105
00:04:39,490 --> 00:04:44,580
<font color="#E5E5E5">you get like good performance and you</font>

106
00:04:41,740 --> 00:04:47,979
you handle<font color="#CCCCCC"> like the scheduling yourself</font>

107
00:04:44,580 --> 00:04:50,859
so how we<font color="#CCCCCC"> can do</font><font color="#E5E5E5"> the first method was</font>

108
00:04:47,979 --> 00:04:52,389
that<font color="#E5E5E5"> to have</font><font color="#CCCCCC"> an asynchronous here are</font>

109
00:04:50,860 --> 00:04:55,389
you in your stem like you do the<font color="#E5E5E5"> equal</font>

110
00:04:52,389 --> 00:04:56,949
<font color="#E5E5E5">calls so what I was describing you wait</font>

111
00:04:55,389 --> 00:04:59,889
on<font color="#CCCCCC"> advance</font><font color="#E5E5E5"> and then you will read</font>

112
00:04:56,949 --> 00:05:01,780
<font color="#E5E5E5">alright for those circuits this is a bit</font>

113
00:04:59,889 --> 00:05:03,610
what I will present<font color="#CCCCCC"> it has</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> it's</font>

114
00:05:01,780 --> 00:05:06,909
what I've been doing in<font color="#E5E5E5"> rust for for</font>

115
00:05:03,610 --> 00:05:09,819
some<font color="#CCCCCC"> time some</font><font color="#E5E5E5"> languages will give you a</font>

116
00:05:06,909 --> 00:05:14,530
good nice interface<font color="#E5E5E5"> so we will recognize</font>

117
00:05:09,819 --> 00:05:17,620
<font color="#CCCCCC">this as some goo goo as this concept of</font>

118
00:05:14,530 --> 00:05:19,690
goo routine and like<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> it always the</font>

119
00:05:17,620 --> 00:05:21,430
best<font color="#E5E5E5"> appears blocking but you know that</font>

120
00:05:19,690 --> 00:05:24,819
it will<font color="#E5E5E5"> have</font><font color="#CCCCCC"> really do a lot of stuff</font>

121
00:05:21,430 --> 00:05:26,319
<font color="#CCCCCC">Parenthood to schedule you call you back</font>

122
00:05:24,819 --> 00:05:29,620
when<font color="#CCCCCC"> does</font><font color="#E5E5E5"> data call you back to whether</font>

123
00:05:26,319 --> 00:05:33,879
the<font color="#E5E5E5"> collection so it it makes the code</font>

124
00:05:29,620 --> 00:05:37,060
easier to<font color="#E5E5E5"> write but you still profit</font>

125
00:05:33,879 --> 00:05:39,340
from the<font color="#CCCCCC"> Sen thinking</font><font color="#E5E5E5"> and what's good in</font>

126
00:05:37,060 --> 00:05:42,370
<font color="#E5E5E5">a system like</font><font color="#CCCCCC"> that is that</font><font color="#E5E5E5"> the language</font>

127
00:05:39,340 --> 00:05:44,739
runtime<font color="#CCCCCC"> gives you</font><font color="#E5E5E5"> a complete abstraction</font>

128
00:05:42,370 --> 00:05:48,430
<font color="#E5E5E5">you do not have to think about</font><font color="#CCCCCC"> what's</font>

129
00:05:44,740 --> 00:05:51,460
<font color="#CCCCCC">inside the system but you get still the</font>

130
00:05:48,430 --> 00:05:54,330
benefits of a sentient working<font color="#E5E5E5"> there's</font>

131
00:05:51,460 --> 00:05:57,008
the another approach<font color="#CCCCCC"> we've called wax</font>

132
00:05:54,330 --> 00:06:00,580
<font color="#E5E5E5">not Jesus</font><font color="#CCCCCC"> works a bit the same</font><font color="#E5E5E5"> way as</font>

133
00:05:57,009 --> 00:06:02,949
going on<font color="#E5E5E5"> that but instead</font><font color="#CCCCCC"> of having</font>

134
00:06:00,580 --> 00:06:05,378
blocking code where you call<font color="#E5E5E5"> something</font>

135
00:06:02,949 --> 00:06:09,520
and then the code will<font color="#CCCCCC"> be just stopped</font>

136
00:06:05,379 --> 00:06:11,400
<font color="#CCCCCC">sale as somewhere and execute it</font><font color="#E5E5E5"> start</font>

137
00:06:09,520 --> 00:06:14,440
executing again when there's<font color="#E5E5E5"> something</font>

138
00:06:11,400 --> 00:06:16,120
<font color="#CCCCCC">now you receive a call</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> that will be</font>

139
00:06:14,440 --> 00:06:18,639
that<font color="#E5E5E5"> you call</font><font color="#CCCCCC"> when you</font><font color="#E5E5E5"> are something to</font>

140
00:06:16,120 --> 00:06:20,500
<font color="#E5E5E5">do on this and you give a function</font><font color="#CCCCCC"> that</font>

141
00:06:18,639 --> 00:06:25,960
<font color="#E5E5E5">will</font><font color="#CCCCCC"> be called when there's</font><font color="#E5E5E5"> data</font>

142
00:06:20,500 --> 00:06:27,370
etcetera<font color="#E5E5E5"> it's it's at the same time easy</font>

143
00:06:25,960 --> 00:06:29,409
to understand<font color="#E5E5E5"> and make the workflow a</font>

144
00:06:27,370 --> 00:06:34,599
bit hard<font color="#CCCCCC"> to follow so they went to</font>

145
00:06:29,409 --> 00:06:37,419
nothing wait<font color="#E5E5E5"> flavor of course that's the</font>

146
00:06:34,599 --> 00:06:41,380
<font color="#E5E5E5">way we do that in rust with futures and</font>

147
00:06:37,419 --> 00:06:44,919
<font color="#CCCCCC">commit at all the</font><font color="#E5E5E5"> interesting thing I</font>

148
00:06:41,380 --> 00:06:45,490
see with futures is that it's not you

149
00:06:44,919 --> 00:06:49,599
call

150
00:06:45,490 --> 00:06:53,350
incoming<font color="#E5E5E5"> function on listener and then</font>

151
00:06:49,600 --> 00:06:55,180
it will it will wait though<font color="#E5E5E5"> it calls</font>

152
00:06:53,350 --> 00:06:57,310
incoming and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> map and then forage</font>

153
00:06:55,180 --> 00:06:58,990
<font color="#E5E5E5">etcetera and build a structure of</font>

154
00:06:57,310 --> 00:07:01,630
<font color="#E5E5E5">something that will do some networking</font>

155
00:06:58,990 --> 00:07:03,190
at some point and that's<font color="#E5E5E5"> to to as a</font>

156
00:07:01,630 --> 00:07:05,050
<font color="#CCCCCC">pearl method</font><font color="#E5E5E5"> and we call that permitted</font>

157
00:07:03,190 --> 00:07:07,510
and it will go<font color="#E5E5E5"> through</font><font color="#CCCCCC"> all of the state</font>

158
00:07:05,050 --> 00:07:10,180
that were built before<font color="#CCCCCC"> so the server</font>

159
00:07:07,510 --> 00:07:13,770
stuff has been built right away and then

160
00:07:10,180 --> 00:07:18,100
it will<font color="#E5E5E5"> recall the pole method on</font><font color="#CCCCCC"> that</font>

161
00:07:13,770 --> 00:07:20,799
it's me<font color="#CCCCCC"> annoying</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> you have to</font>

162
00:07:18,100 --> 00:07:23,740
move stuff around you have to<font color="#E5E5E5"> actually</font>

163
00:07:20,800 --> 00:07:27,550
put stuff into mutexes it's been

164
00:07:23,740 --> 00:07:29,890
annoying<font color="#E5E5E5"> to to share state so there's</font>

165
00:07:27,550 --> 00:07:34,410
been a lot of work to<font color="#E5E5E5"> get to better</font>

166
00:07:29,890 --> 00:07:40,719
syntax<font color="#E5E5E5"> by reusing the same fuel system</font>

167
00:07:34,410 --> 00:07:44,170
<font color="#CCCCCC">in a sink await syntax by adding by</font>

168
00:07:40,720 --> 00:07:49,540
using the<font color="#CCCCCC"> wait</font><font color="#E5E5E5"> keyboard to do basically</font>

169
00:07:44,170 --> 00:07:52,090
what we were doing in go there so this

170
00:07:49,540 --> 00:07:56,610
would be good<font color="#E5E5E5"> this</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> be nice to use</font>

171
00:07:52,090 --> 00:07:56,609
<font color="#E5E5E5">once the</font><font color="#CCCCCC"> agreed</font><font color="#E5E5E5"> syntax</font>

172
00:07:57,970 --> 00:08:05,920
there's a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> programs we</font><font color="#E5E5E5"> futures</font><font color="#CCCCCC"> to</font>

173
00:08:02,520 --> 00:08:08,020
I'm known for having<font color="#E5E5E5"> criticized to to</font>

174
00:08:05,920 --> 00:08:11,230
use a lot<font color="#E5E5E5"> I love them I use them a lot</font>

175
00:08:08,020 --> 00:08:13,180
but I will<font color="#E5E5E5"> not shy away from the</font><font color="#CCCCCC"> problem</font>

176
00:08:11,230 --> 00:08:15,220
<font color="#CCCCCC">that they have and what pisses me off</font>

177
00:08:13,180 --> 00:08:18,340
<font color="#E5E5E5">when</font><font color="#CCCCCC"> I working</font><font color="#E5E5E5"> with them and what I want</font>

178
00:08:15,220 --> 00:08:21,270
<font color="#E5E5E5">to fix so the first thing is I told</font><font color="#CCCCCC"> you</font>

179
00:08:18,340 --> 00:08:24,010
it when you create<font color="#CCCCCC"> a fuse it makes a</font>

180
00:08:21,270 --> 00:08:27,700
structure that implements Paul but any

181
00:08:24,010 --> 00:08:29,170
steps inside<font color="#E5E5E5"> you your protocol</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that</font>

182
00:08:27,700 --> 00:08:29,680
if<font color="#E5E5E5"> learn</font><font color="#CCCCCC"> spawns so when you have a stack</font>

183
00:08:29,170 --> 00:08:32,440
<font color="#CCCCCC">trace</font>

184
00:08:29,680 --> 00:08:36,190
you have Paw Paw Paw Paw Paw Paw Paw Paw

185
00:08:32,440 --> 00:08:40,450
Paw Paw Paw Paw Paw Paul and Paul where

186
00:08:36,190 --> 00:08:43,540
am i doing what you can try to add

187
00:08:40,450 --> 00:08:49,050
functions inside basically<font color="#CCCCCC"> it's to be</font>

188
00:08:43,539 --> 00:08:53,380
<font color="#CCCCCC">linked</font><font color="#E5E5E5"> to the back it's hard to test</font>

189
00:08:49,050 --> 00:08:55,630
this is some code<font color="#CCCCCC"> I've been taking</font><font color="#E5E5E5"> from</font>

190
00:08:53,380 --> 00:08:59,080
<font color="#CCCCCC">trust dealers</font><font color="#E5E5E5"> which is a very good</font>

191
00:08:55,630 --> 00:09:01,450
project is a very<font color="#CCCCCC"> tedious</font><font color="#E5E5E5"> implementation</font>

192
00:08:59,080 --> 00:09:03,490
and they went<font color="#E5E5E5"> away where they are the</font>

193
00:09:01,450 --> 00:09:06,550
the create complete<font color="#CCCCCC"> block of name server</font>

194
00:09:03,490 --> 00:09:09,910
<font color="#E5E5E5">to test the client so you have to have</font>

195
00:09:06,550 --> 00:09:15,130
<font color="#CCCCCC">something that implements a server over</font>

196
00:09:09,910 --> 00:09:17,920
TCP or UDP for<font color="#E5E5E5"> your</font><font color="#CCCCCC"> tests its I had to</font>

197
00:09:15,130 --> 00:09:20,050
do that<font color="#E5E5E5"> for some HTTP stuff and it's it</font>

198
00:09:17,920 --> 00:09:22,149
it makes the test<font color="#E5E5E5"> very non-deterministic</font>

199
00:09:20,050 --> 00:09:27,189
and very hard<font color="#E5E5E5"> true to reproduce bugs</font>

200
00:09:22,149 --> 00:09:31,060
so<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> annoying and finally the typing</font>

201
00:09:27,190 --> 00:09:32,940
<font color="#E5E5E5">issues so assuming you have you so you</font>

202
00:09:31,060 --> 00:09:36,399
if<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> like the import future</font>

203
00:09:32,940 --> 00:09:38,440
infiltrate<font color="#CCCCCC"> feature says ok</font><font color="#E5E5E5"> instead of</font>

204
00:09:36,399 --> 00:09:39,970
returning the entire type<font color="#E5E5E5"> and we say</font>

205
00:09:38,440 --> 00:09:42,250
it's<font color="#E5E5E5"> something that implements future</font>

206
00:09:39,970 --> 00:09:45,240
and I let the compiler like replace

207
00:09:42,250 --> 00:09:48,550
import future by<font color="#E5E5E5"> the reel-to-reel type</font>

208
00:09:45,240 --> 00:09:54,010
so if you have two<font color="#CCCCCC"> functions</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> will</font>

209
00:09:48,550 --> 00:09:57,099
import<font color="#CCCCCC"> few of you 42</font><font color="#E5E5E5"> number when you see</font>

210
00:09:54,010 --> 00:09:59,850
the code<font color="#E5E5E5"> you say ok they return the same</font>

211
00:09:57,100 --> 00:10:02,320
type that's what you will<font color="#E5E5E5"> think but no</font>

212
00:09:59,850 --> 00:10:04,360
they can be<font color="#E5E5E5"> completely</font><font color="#CCCCCC"> different type</font>

213
00:10:02,320 --> 00:10:05,589
because one of them has a map somewhere

214
00:10:04,360 --> 00:10:08,470
<font color="#E5E5E5">and the other does not</font>

215
00:10:05,589 --> 00:10:10,240
so the<font color="#E5E5E5"> the function that says both when</font>

216
00:10:08,470 --> 00:10:12,459
<font color="#E5E5E5">you want to call one of the function in</font>

217
00:10:10,240 --> 00:10:14,680
what case<font color="#E5E5E5"> audio in other case it will</font>

218
00:10:12,459 --> 00:10:18,750
<font color="#E5E5E5">not compile because both functions have</font>

219
00:10:14,680 --> 00:10:21,939
different return types this<font color="#E5E5E5"> is knowing a</font>

220
00:10:18,750 --> 00:10:24,520
worst one is a very<font color="#E5E5E5"> simple case I often</font>

221
00:10:21,940 --> 00:10:26,740
have<font color="#CCCCCC"> to do is</font><font color="#E5E5E5"> ok if there's some</font>

222
00:10:24,520 --> 00:10:28,209
condition<font color="#CCCCCC"> I return the static</font><font color="#E5E5E5"> value or</font>

223
00:10:26,740 --> 00:10:32,770
<font color="#E5E5E5">something</font><font color="#CCCCCC"> I've</font><font color="#E5E5E5"> pre computed at some</font>

224
00:10:28,209 --> 00:10:35,739
point so result<font color="#CCCCCC"> ok it implements</font>

225
00:10:32,770 --> 00:10:38,319
<font color="#CCCCCC">triggered so</font><font color="#E5E5E5"> it's it should work but no</font>

226
00:10:35,740 --> 00:10:41,470
it's<font color="#E5E5E5"> not the same type as on so I have</font>

227
00:10:38,320 --> 00:10:44,290
to<font color="#CCCCCC"> ever box the stuff order</font><font color="#E5E5E5"> over turn</font>

228
00:10:41,470 --> 00:10:47,890
through hoops to move to fix the typing

229
00:10:44,290 --> 00:10:50,140
issues and this<font color="#E5E5E5"> is not hard it's just</font>

230
00:10:47,890 --> 00:10:54,640
<font color="#E5E5E5">something I have to think about every</font>

231
00:10:50,140 --> 00:10:59,199
<font color="#CCCCCC">time I do branching in future it's</font>

232
00:10:54,640 --> 00:11:02,170
annoying<font color="#E5E5E5"> so what happens is like the</font>

233
00:10:59,199 --> 00:11:03,609
<font color="#E5E5E5">they want you futures want you to think</font>

234
00:11:02,170 --> 00:11:06,189
in terms<font color="#E5E5E5"> of blocking i/o</font>

235
00:11:03,610 --> 00:11:07,930
<font color="#E5E5E5">like you do this and then that and</font><font color="#CCCCCC"> then</font>

236
00:11:06,190 --> 00:11:12,230
<font color="#E5E5E5">data it's very imperative and it's very</font>

237
00:11:07,930 --> 00:11:14,180
nice but<font color="#E5E5E5"> the way they</font><font color="#CCCCCC"> don't much a lot</font>

238
00:11:12,230 --> 00:11:16,310
um I<font color="#E5E5E5"> think it's a synthetic locking and</font>

239
00:11:14,180 --> 00:11:18,859
so you have to think<font color="#CCCCCC"> about the a singlet</font>

240
00:11:16,310 --> 00:11:19,939
<font color="#E5E5E5">working under that like when you did</font>

241
00:11:18,860 --> 00:11:22,250
<font color="#E5E5E5">like a future you have to think okay</font>

242
00:11:19,940 --> 00:11:24,230
<font color="#CCCCCC">where did</font><font color="#E5E5E5"> I get the readable event for</font>

243
00:11:22,250 --> 00:11:27,710
this<font color="#E5E5E5"> circuit</font><font color="#CCCCCC"> that triggers this other</font>

244
00:11:24,230 --> 00:11:29,150
one<font color="#CCCCCC"> to</font><font color="#E5E5E5"> execute</font><font color="#CCCCCC"> that function</font><font color="#E5E5E5"> it's it can</font>

245
00:11:27,710 --> 00:11:30,950
<font color="#CCCCCC">be a mess to the back</font><font color="#E5E5E5"> especially when</font>

246
00:11:29,150 --> 00:11:33,680
you're doing<font color="#CCCCCC"> low-level</font><font color="#E5E5E5"> development and</font>

247
00:11:30,950 --> 00:11:37,190
protocols<font color="#CCCCCC"> I really like futures for</font>

248
00:11:33,680 --> 00:11:39,589
<font color="#CCCCCC">high-level stuff when I like create HTTP</font>

249
00:11:37,190 --> 00:11:41,300
server using HTTP library<font color="#E5E5E5"> and then I do</font>

250
00:11:39,590 --> 00:11:43,040
a call to database<font color="#E5E5E5"> somewhere and that</font>

251
00:11:41,300 --> 00:11:46,969
kind of thing at that that can work<font color="#CCCCCC"> very</font>

252
00:11:43,040 --> 00:11:52,880
nicely but at<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lower level not not so</font>

253
00:11:46,970 --> 00:11:54,830
much so with that I want to<font color="#CCCCCC"> implement</font>

254
00:11:52,880 --> 00:11:59,150
<font color="#CCCCCC">network protocols</font><font color="#E5E5E5"> because it's a large</font>

255
00:11:54,830 --> 00:12:01,670
part of my work<font color="#CCCCCC"> I have</font><font color="#E5E5E5"> some criterion it</font>

256
00:11:59,150 --> 00:12:04,819
must be easy to<font color="#E5E5E5"> test like having to set</font>

257
00:12:01,670 --> 00:12:06,589
up<font color="#E5E5E5"> server on TCP and DNS and stuff to</font>

258
00:12:04,820 --> 00:12:09,760
test anything<font color="#E5E5E5"> is a no-go</font>

259
00:12:06,590 --> 00:12:13,820
I want my<font color="#CCCCCC"> test to be deterministic I</font>

260
00:12:09,760 --> 00:12:16,939
want my code to<font color="#CCCCCC"> be reusable so futures</font>

261
00:12:13,820 --> 00:12:19,130
<font color="#E5E5E5">are nice but you cannot use a futures</font>

262
00:12:16,940 --> 00:12:20,750
based protocol outside of<font color="#E5E5E5"> first I have</font>

263
00:12:19,130 --> 00:12:24,560
protocol implementation I had to use

264
00:12:20,750 --> 00:12:28,190
<font color="#CCCCCC">like in other platforms share</font><font color="#E5E5E5"> between</font>

265
00:12:24,560 --> 00:12:30,770
platforms<font color="#E5E5E5"> how can I do that</font><font color="#CCCCCC"> and how can</font>

266
00:12:28,190 --> 00:12:33,860
<font color="#CCCCCC">I make it a</font><font color="#E5E5E5"> slice not tied to a specific</font>

267
00:12:30,770 --> 00:12:37,120
<font color="#E5E5E5">way to do</font><font color="#CCCCCC"> I owe because when</font><font color="#E5E5E5"> I started</font>

268
00:12:33,860 --> 00:12:40,450
to<font color="#E5E5E5"> work in the approach</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will present</font>

269
00:12:37,120 --> 00:12:43,820
like it was 2014

270
00:12:40,450 --> 00:12:47,030
like when 2015 something like that like

271
00:12:43,820 --> 00:12:49,700
<font color="#CCCCCC">futures appeared and said okay everybody</font>

272
00:12:47,030 --> 00:12:51,230
<font color="#CCCCCC">moved to that and I tried</font><font color="#E5E5E5"> I say okay I</font>

273
00:12:49,700 --> 00:12:54,110
want<font color="#CCCCCC"> to support that but</font><font color="#E5E5E5"> I would keep my</font>

274
00:12:51,230 --> 00:12:56,630
way there<font color="#E5E5E5"> because I want to be flexible</font>

275
00:12:54,110 --> 00:13:00,770
<font color="#CCCCCC">or</font><font color="#E5E5E5"> not so where does it come from</font>

276
00:12:56,630 --> 00:13:05,150
I<font color="#CCCCCC"> walk on</font><font color="#E5E5E5"> HTTP which is nightmare</font>

277
00:13:00,770 --> 00:13:07,640
protocol for<font color="#CCCCCC"> a reverse</font><font color="#E5E5E5"> proxy at a cloud</font>

278
00:13:05,150 --> 00:13:09,860
it's nice<font color="#E5E5E5"> it's I encourage you to Google</font>

279
00:13:07,640 --> 00:13:12,410
look at<font color="#E5E5E5"> Suzu HTTP proxy that can</font>

280
00:13:09,860 --> 00:13:14,810
reconfigure itself at one time<font color="#CCCCCC"> its main</font>

281
00:13:12,410 --> 00:13:16,280
<font color="#E5E5E5">for load balancing</font><font color="#CCCCCC"> and performance it's</font>

282
00:13:14,810 --> 00:13:20,449
a really<font color="#E5E5E5"> nice</font><font color="#CCCCCC"> project and</font><font color="#E5E5E5"> yet there's a</font>

283
00:13:16,280 --> 00:13:24,380
<font color="#CCCCCC">lot of fun stuff to</font><font color="#E5E5E5"> doing that</font><font color="#CCCCCC"> lapa the</font>

284
00:13:20,450 --> 00:13:26,000
<font color="#CCCCCC">AMQP library AMQP is</font><font color="#E5E5E5"> even more of a</font>

285
00:13:24,380 --> 00:13:27,620
nightmare<font color="#E5E5E5"> to implement it's one</font>

286
00:13:26,000 --> 00:13:30,670
what's protocol I've seen that

287
00:13:27,620 --> 00:13:32,990
everything is in there<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> and</font>

288
00:13:30,670 --> 00:13:35,509
these when I started to implement<font color="#CCCCCC"> leva</font>

289
00:13:32,990 --> 00:13:40,269
<font color="#E5E5E5">it was impossible to do</font><font color="#CCCCCC"> that with</font>

290
00:13:35,509 --> 00:13:42,829
futures<font color="#E5E5E5"> in 2015 no it might be possible</font>

291
00:13:40,269 --> 00:13:44,600
<font color="#CCCCCC">there are</font><font color="#E5E5E5"> other stuff like the messaging</font>

292
00:13:42,829 --> 00:13:47,149
protocol<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> u.s. hundred</font><font color="#E5E5E5"> I wanted to</font>

293
00:13:44,600 --> 00:13:50,420
have same implementation for both

294
00:13:47,149 --> 00:13:52,879
platforms<font color="#CCCCCC"> so I did</font><font color="#E5E5E5"> that in rust</font><font color="#CCCCCC"> and so</font>

295
00:13:50,420 --> 00:13:54,829
this<font color="#CCCCCC"> must be</font><font color="#E5E5E5"> called from</font><font color="#CCCCCC"> sea and</font><font color="#E5E5E5"> from</font>

296
00:13:52,879 --> 00:13:58,610
<font color="#CCCCCC">gni and you have to be flexible on how</font>

297
00:13:54,829 --> 00:14:00,680
it works<font color="#E5E5E5"> and of course there's the song</font>

298
00:13:58,610 --> 00:14:04,160
<font color="#E5E5E5">IO movement that</font><font color="#CCCCCC"> appeared in Python well</font>

299
00:14:00,680 --> 00:14:05,599
they they had the same needs the same

300
00:14:04,160 --> 00:14:08,000
approach because there was already a

301
00:14:05,600 --> 00:14:11,029
<font color="#E5E5E5">single</font><font color="#CCCCCC"> weight debate in</font><font color="#E5E5E5"> that community</font>

302
00:14:08,000 --> 00:14:13,430
two people had<font color="#CCCCCC"> opinions and some say</font>

303
00:14:11,029 --> 00:14:16,209
okay we want<font color="#CCCCCC"> to do network protocols but</font>

304
00:14:13,430 --> 00:14:20,258
we don't want them<font color="#E5E5E5"> to be tied about IO</font>

305
00:14:16,209 --> 00:14:23,060
because<font color="#E5E5E5"> network protocol is</font><font color="#CCCCCC"> not about</font>

306
00:14:20,259 --> 00:14:26,569
<font color="#CCCCCC">input-output and</font><font color="#E5E5E5"> talking talking to</font><font color="#CCCCCC"> a</font>

307
00:14:23,060 --> 00:14:30,739
<font color="#E5E5E5">network card it's just such</font><font color="#CCCCCC"> a state</font>

308
00:14:26,569 --> 00:14:32,719
<font color="#E5E5E5">machine that ingest messages gives you</font>

309
00:14:30,740 --> 00:14:36,949
messages and updates<font color="#E5E5E5"> each state and you</font>

310
00:14:32,720 --> 00:14:39,589
can<font color="#E5E5E5"> query that like you can simulate an</font>

311
00:14:36,949 --> 00:14:46,459
entire protocol without doing Network IO

312
00:14:39,589 --> 00:14:50,899
<font color="#E5E5E5">and you should it's not a framework you</font>

313
00:14:46,459 --> 00:14:52,939
want<font color="#CCCCCC"> you want to</font><font color="#E5E5E5"> do like like the thing</font>

314
00:14:50,899 --> 00:14:56,029
you<font color="#E5E5E5"> see like in a HTTP framework well</font>

315
00:14:52,939 --> 00:14:57,709
when you just provide the framework

316
00:14:56,029 --> 00:14:59,990
requires that you provide the trait and

317
00:14:57,709 --> 00:15:01,579
<font color="#E5E5E5">the framework we call you and say okay</font>

318
00:14:59,990 --> 00:15:03,319
this<font color="#CCCCCC"> is a request tell me how you want</font><font color="#E5E5E5"> a</font>

319
00:15:01,579 --> 00:15:06,500
<font color="#E5E5E5">response and everyone on the rest but</font>

320
00:15:03,319 --> 00:15:08,120
like this<font color="#E5E5E5"> is a</font><font color="#CCCCCC"> low level</font><font color="#E5E5E5"> component the</font>

321
00:15:06,500 --> 00:15:10,459
low<font color="#E5E5E5"> level component you should not drive</font>

322
00:15:08,120 --> 00:15:12,980
my<font color="#E5E5E5"> application I am in control of my</font>

323
00:15:10,459 --> 00:15:15,250
application<font color="#E5E5E5"> and so I will tell the</font><font color="#CCCCCC"> low</font>

324
00:15:12,980 --> 00:15:17,509
<font color="#E5E5E5">level component</font><font color="#CCCCCC"> ok now do some work and</font>

325
00:15:15,250 --> 00:15:19,670
tell me where<font color="#E5E5E5"> you are and</font><font color="#CCCCCC"> now I will do</font>

326
00:15:17,509 --> 00:15:21,740
something<font color="#CCCCCC"> else</font><font color="#E5E5E5"> and I will make a</font><font color="#CCCCCC"> nice</font>

327
00:15:19,670 --> 00:15:24,410
<font color="#E5E5E5">layer above that but inverting the</font>

328
00:15:21,740 --> 00:15:28,279
control like<font color="#CCCCCC"> that it makes</font><font color="#E5E5E5"> everything if</font>

329
00:15:24,410 --> 00:15:30,199
everything hard<font color="#CCCCCC"> to</font><font color="#E5E5E5"> program so no</font><font color="#CCCCCC"> IO</font>

330
00:15:28,279 --> 00:15:32,959
<font color="#E5E5E5">means you can be deterministic</font><font color="#CCCCCC"> you can</font>

331
00:15:30,199 --> 00:15:35,479
make<font color="#E5E5E5"> something that's easy to test you</font>

332
00:15:32,959 --> 00:15:38,809
try one input it should always give you

333
00:15:35,480 --> 00:15:39,379
the<font color="#E5E5E5"> same output this is what you want</font>

334
00:15:38,809 --> 00:15:42,589
you in

335
00:15:39,379 --> 00:15:46,220
<font color="#CCCCCC">you need tests basically</font><font color="#E5E5E5"> there are still</font>

336
00:15:42,589 --> 00:15:47,989
some details<font color="#CCCCCC"> about</font><font color="#E5E5E5"> measuring time</font><font color="#CCCCCC"> rather</font>

337
00:15:46,220 --> 00:15:50,899
than<font color="#CCCCCC"> the</font><font color="#E5E5E5"> random number generation but</font>

338
00:15:47,989 --> 00:15:54,259
this this is a this<font color="#E5E5E5"> ARPA that are easy</font>

339
00:15:50,899 --> 00:15:56,499
<font color="#E5E5E5">to mock</font><font color="#CCCCCC"> so we can make a protocol</font>

340
00:15:54,259 --> 00:16:00,109
implementation that's better to debug

341
00:15:56,499 --> 00:16:03,379
and the last thing<font color="#E5E5E5"> they can be</font>

342
00:16:00,109 --> 00:16:04,939
represented<font color="#CCCCCC"> as code or data when you see</font>

343
00:16:03,379 --> 00:16:06,439
the<font color="#CCCCCC"> implementation we had in the</font>

344
00:16:04,939 --> 00:16:09,049
different languages<font color="#CCCCCC"> they were just code</font>

345
00:16:06,439 --> 00:16:13,069
<font color="#E5E5E5">so I call something and then I call</font>

346
00:16:09,049 --> 00:16:15,619
something<font color="#E5E5E5"> else and it's in futures it</font>

347
00:16:13,069 --> 00:16:17,868
generates a state machine<font color="#CCCCCC"> general</font>

348
00:16:15,619 --> 00:16:20,599
structure<font color="#CCCCCC"> that contain</font><font color="#E5E5E5"> each other and</font>

349
00:16:17,869 --> 00:16:23,209
call each other's<font color="#E5E5E5"> polymethyl it's a way</font>

350
00:16:20,599 --> 00:16:24,739
<font color="#E5E5E5">to represent state machines and SEC</font>

351
00:16:23,209 --> 00:16:27,649
machine that can<font color="#E5E5E5"> be</font><font color="#CCCCCC"> represented as data</font>

352
00:16:24,739 --> 00:16:31,009
can be stored so you can handle multiple

353
00:16:27,649 --> 00:16:33,169
clients at the same point and you can

354
00:16:31,009 --> 00:16:36,649
just treat a structure<font color="#CCCCCC"> like create</font><font color="#E5E5E5"> a</font>

355
00:16:33,169 --> 00:16:38,419
state like at whatever<font color="#E5E5E5"> state you want</font>

356
00:16:36,649 --> 00:16:40,329
<font color="#CCCCCC">and okay I want to go from there</font><font color="#E5E5E5"> I want</font>

357
00:16:38,419 --> 00:16:42,289
<font color="#E5E5E5">to send a message</font><font color="#CCCCCC"> and see what happens</font>

358
00:16:40,329 --> 00:16:45,049
representing a<font color="#CCCCCC"> state machine as just</font>

359
00:16:42,289 --> 00:16:49,399
data makes makes it easy<font color="#CCCCCC"> to say</font><font color="#E5E5E5"> is it</font>

360
00:16:45,049 --> 00:16:51,739
easy<font color="#E5E5E5"> to test so</font><font color="#CCCCCC"> soon</font><font color="#E5E5E5"> up I want</font><font color="#CCCCCC"> to</font>

361
00:16:49,399 --> 00:16:57,289
represent<font color="#E5E5E5"> protocol state machine that</font>

362
00:16:51,739 --> 00:16:59,329
<font color="#CCCCCC">just text message</font><font color="#E5E5E5"> I want a way to move</font>

363
00:16:57,289 --> 00:17:01,939
this message back<font color="#CCCCCC"> and forth with the</font>

364
00:16:59,329 --> 00:17:03,169
network<font color="#E5E5E5"> I you and</font><font color="#CCCCCC"> we've buffers and</font><font color="#E5E5E5"> I</font>

365
00:17:01,939 --> 00:17:06,408
want to<font color="#E5E5E5"> separate the a</font><font color="#CCCCCC"> year</font><font color="#E5E5E5"> a year</font>

366
00:17:03,169 --> 00:17:07,819
because<font color="#E5E5E5"> the i/o layer is the</font>

367
00:17:06,409 --> 00:17:10,039
responsibility<font color="#E5E5E5"> of my application</font>

368
00:17:07,819 --> 00:17:12,259
the protocol<font color="#CCCCCC"> should not decide okay how</font>

369
00:17:10,039 --> 00:17:15,859
many<font color="#CCCCCC"> HTTP clients can I handle</font>

370
00:17:12,259 --> 00:17:17,569
concurrently<font color="#CCCCCC"> the HTTP implementation</font>

371
00:17:15,859 --> 00:17:20,719
<font color="#E5E5E5">that does not decide that it just</font>

372
00:17:17,569 --> 00:17:22,938
<font color="#CCCCCC">Ronald's one client</font><font color="#E5E5E5"> this is the the</font>

373
00:17:20,720 --> 00:17:26,149
<font color="#E5E5E5">application of a</font><font color="#CCCCCC"> dot that says okay</font><font color="#E5E5E5"> so</font>

374
00:17:22,939 --> 00:17:29,539
if I have this many clients I have to

375
00:17:26,148 --> 00:17:33,168
<font color="#E5E5E5">have another thread to handle them and</font>

376
00:17:29,539 --> 00:17:37,279
<font color="#E5E5E5">lastly how most particular specified is</font>

377
00:17:33,169 --> 00:17:41,659
with state machines this<font color="#E5E5E5"> is from HTTP to</font>

378
00:17:37,279 --> 00:17:44,679
HTTPS very nicely designed protocol and

379
00:17:41,659 --> 00:17:46,309
the completeness as well because there's

380
00:17:44,679 --> 00:17:49,159
multiplexing you can have multiple

381
00:17:46,309 --> 00:17:51,289
<font color="#E5E5E5">streams in the same connection and there</font>

382
00:17:49,159 --> 00:17:52,910
<font color="#E5E5E5">are flow control so you</font><font color="#CCCCCC"> can have one</font>

383
00:17:51,289 --> 00:17:55,010
stream that stopped by

384
00:17:52,910 --> 00:17:57,470
client or the server<font color="#E5E5E5"> while others are</font>

385
00:17:55,010 --> 00:17:59,390
<font color="#E5E5E5">running and you have to handle all the</font>

386
00:17:57,470 --> 00:18:02,330
<font color="#CCCCCC">state like that</font><font color="#E5E5E5"> it's it's</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> nice</font>

387
00:17:59,390 --> 00:18:04,730
nice to do<font color="#E5E5E5"> and I have to do one</font>

388
00:18:02,330 --> 00:18:07,220
<font color="#CCCCCC">information at some point and</font><font color="#E5E5E5"> you see</font>

389
00:18:04,730 --> 00:18:09,860
<font color="#E5E5E5">that it's just you have States and you</font>

390
00:18:07,220 --> 00:18:11,870
have message and the state machine

391
00:18:09,860 --> 00:18:13,850
specifies<font color="#CCCCCC"> ok when you in that</font><font color="#E5E5E5"> states</font>

392
00:18:11,870 --> 00:18:15,979
<font color="#E5E5E5">here are the messages you accept and</font>

393
00:18:13,850 --> 00:18:20,899
where you can go from there if you have

394
00:18:15,980 --> 00:18:23,900
one of<font color="#CCCCCC"> those messages</font><font color="#E5E5E5"> so it should</font><font color="#CCCCCC"> be</font>

395
00:18:20,900 --> 00:18:27,380
simple<font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> you make an alarm</font>

396
00:18:23,900 --> 00:18:29,600
with all the states you<font color="#CCCCCC"> have some</font>

397
00:18:27,380 --> 00:18:32,090
structure to<font color="#E5E5E5"> for the messages and you</font>

398
00:18:29,600 --> 00:18:34,959
make an interface<font color="#E5E5E5"> where</font><font color="#CCCCCC"> okay I give you</font>

399
00:18:32,090 --> 00:18:37,699
a message where we<font color="#CCCCCC"> were</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> from there</font>

400
00:18:34,960 --> 00:18:40,610
so another example<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> something I</font>

401
00:18:37,700 --> 00:18:43,760
have in<font color="#CCCCCC"> Suzu so she wants to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> very</font>

402
00:18:40,610 --> 00:18:46,850
very smart<font color="#E5E5E5"> about performance and how</font><font color="#CCCCCC"> to</font>

403
00:18:43,760 --> 00:18:49,220
under<font color="#E5E5E5"> HTTP so it tries to do stuff</font><font color="#CCCCCC"> with</font>

404
00:18:46,850 --> 00:18:52,699
<font color="#E5E5E5">the HCP collection</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> having passed</font>

405
00:18:49,220 --> 00:18:55,190
<font color="#E5E5E5">the whole connection because we receive</font>

406
00:18:52,700 --> 00:18:56,960
like some very weird traffic<font color="#CCCCCC"> where like</font>

407
00:18:55,190 --> 00:19:00,530
one header could be larger than<font color="#E5E5E5"> whole</font>

408
00:18:56,960 --> 00:19:03,140
buffer like<font color="#E5E5E5"> a nothing so I have a series</font>

409
00:19:00,530 --> 00:19:05,270
of states<font color="#CCCCCC"> like I start my</font><font color="#E5E5E5"> I should be</font>

410
00:19:03,140 --> 00:19:06,860
<font color="#E5E5E5">passing I don't have anything</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> I will</font>

411
00:19:05,270 --> 00:19:10,550
<font color="#CCCCCC">try to pass</font><font color="#E5E5E5"> her request line and getting</font>

412
00:19:06,860 --> 00:19:14,209
<font color="#E5E5E5">to the request line state his marker for</font>

413
00:19:10,550 --> 00:19:16,190
that if<font color="#E5E5E5"> I'm past the request line I'm</font>

414
00:19:14,210 --> 00:19:19,550
passing the headers and now I'm<font color="#CCCCCC"> waiting</font>

415
00:19:16,190 --> 00:19:22,810
for header messages<font color="#CCCCCC"> ok if I go to host</font>

416
00:19:19,550 --> 00:19:25,909
the host<font color="#E5E5E5"> header I get into the as host</font>

417
00:19:22,810 --> 00:19:30,379
state where I have a request line and

418
00:19:25,910 --> 00:19:32,570
the<font color="#CCCCCC"> Austrey</font><font color="#E5E5E5"> I care mainly about the</font><font color="#CCCCCC"> auth</font>

419
00:19:30,380 --> 00:19:34,940
<font color="#E5E5E5">and the length formation the content</font>

420
00:19:32,570 --> 00:19:37,580
other now there are a few<font color="#CCCCCC"> more</font><font color="#E5E5E5"> steps</font><font color="#CCCCCC"> but</font>

421
00:19:34,940 --> 00:19:39,800
<font color="#E5E5E5">I will not show them there and will not</font>

422
00:19:37,580 --> 00:19:42,110
<font color="#CCCCCC">show them too late</font><font color="#E5E5E5"> and then you can get</font>

423
00:19:39,800 --> 00:19:44,930
into<font color="#CCCCCC"> 3 different</font><font color="#E5E5E5"> states at the end so</font>

424
00:19:42,110 --> 00:19:46,729
ever it was you had no content land<font color="#E5E5E5"> and</font>

425
00:19:44,930 --> 00:19:49,220
you will have<font color="#E5E5E5"> just a request with a body</font>

426
00:19:46,730 --> 00:19:52,970
<font color="#E5E5E5">you can have a complaint with the size</font>

427
00:19:49,220 --> 00:19:55,640
and do you<font color="#E5E5E5"> have a body of</font><font color="#CCCCCC"> specific</font><font color="#E5E5E5"> size</font>

428
00:19:52,970 --> 00:19:57,170
<font color="#E5E5E5">or it will just</font><font color="#CCCCCC"> take tell you choked</font><font color="#E5E5E5"> and</font>

429
00:19:55,640 --> 00:20:00,940
then you have to have another state

430
00:19:57,170 --> 00:20:03,440
machine<font color="#CCCCCC"> to under the chunks of HTTP so</font>

431
00:20:00,940 --> 00:20:06,940
this should<font color="#E5E5E5"> already be simple but we</font>

432
00:20:03,440 --> 00:20:09,289
<font color="#CCCCCC">already have</font><font color="#E5E5E5"> quite some number of state</font>

433
00:20:06,940 --> 00:20:12,320
how do I beat something<font color="#E5E5E5"> above that I</font>

434
00:20:09,289 --> 00:20:14,779
won't<font color="#CCCCCC"> wander lonely message</font><font color="#E5E5E5"> and get into</font>

435
00:20:12,320 --> 00:20:17,120
a new stage from that and maybe when I

436
00:20:14,779 --> 00:20:19,250
get into a new state I might have a

437
00:20:17,120 --> 00:20:21,799
message<font color="#CCCCCC"> to</font><font color="#E5E5E5"> send on</font><font color="#CCCCCC"> the over the network</font>

438
00:20:19,250 --> 00:20:24,710
so not really we've HTTP there but like

439
00:20:21,799 --> 00:20:27,019
<font color="#CCCCCC">AMQP</font><font color="#E5E5E5"> when you start connecting to a</font>

440
00:20:24,710 --> 00:20:29,539
server<font color="#CCCCCC"> you say</font><font color="#E5E5E5"> okay I want</font><font color="#CCCCCC"> to connect</font>

441
00:20:27,019 --> 00:20:31,100
and<font color="#E5E5E5"> now there's a set</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> request replies</font>

442
00:20:29,539 --> 00:20:33,350
that<font color="#E5E5E5"> start from the server so you the</font>

443
00:20:31,100 --> 00:20:36,699
client<font color="#CCCCCC"> says hello</font><font color="#E5E5E5"> and then the server</font>

444
00:20:33,350 --> 00:20:40,428
<font color="#CCCCCC">asks question 2 km from answers for like</font>

445
00:20:36,700 --> 00:20:45,350
<font color="#E5E5E5">11 steps I guess something like that and</font>

446
00:20:40,429 --> 00:20:48,669
so they have<font color="#E5E5E5"> to have</font><font color="#CCCCCC"> a way to just send</font>

447
00:20:45,350 --> 00:20:52,100
<font color="#E5E5E5">stuff and it's not only request response</font>

448
00:20:48,669 --> 00:20:54,350
the<font color="#E5E5E5"> sec machine should also have a wave</font>

449
00:20:52,100 --> 00:20:56,959
to<font color="#E5E5E5"> indicate the IU layer how to behave</font>

450
00:20:54,350 --> 00:20:59,750
like<font color="#E5E5E5"> okay maybe I'm receiving a lot</font><font color="#CCCCCC"> of</font>

451
00:20:56,960 --> 00:21:03,320
data<font color="#E5E5E5"> on</font><font color="#CCCCCC"> on this circuit but I don't want</font>

452
00:20:59,750 --> 00:21:06,200
to<font color="#E5E5E5"> read data from the socket</font><font color="#CCCCCC"> so I will</font>

453
00:21:03,320 --> 00:21:10,789
<font color="#E5E5E5">just said okay no I want to read data no</font>

454
00:21:06,200 --> 00:21:13,039
I don't and maybe if the<font color="#E5E5E5"> ionian say sees</font>

455
00:21:10,789 --> 00:21:14,539
that there's too much are you coming and

456
00:21:13,039 --> 00:21:15,649
we don't<font color="#E5E5E5"> want to read anything</font>

457
00:21:14,539 --> 00:21:17,179
it would just<font color="#CCCCCC"> drop the connection</font>

458
00:21:15,649 --> 00:21:18,830
<font color="#E5E5E5">because there's something that's wrong</font>

459
00:21:17,179 --> 00:21:22,360
with the protocol we can do something<font color="#CCCCCC"> a</font>

460
00:21:18,830 --> 00:21:24,860
lot and we might want to pass messages

461
00:21:22,360 --> 00:21:26,479
<font color="#CCCCCC">depending</font><font color="#E5E5E5"> on the state we aren't we are</font>

462
00:21:24,860 --> 00:21:28,070
in so the state machine is just

463
00:21:26,480 --> 00:21:29,690
something that<font color="#E5E5E5"> we create do you want to</font>

464
00:21:28,070 --> 00:21:30,320
read<font color="#E5E5E5"> do you want to write</font><font color="#CCCCCC"> something to</font>

465
00:21:29,690 --> 00:21:33,200
<font color="#E5E5E5">the network</font>

466
00:21:30,320 --> 00:21:34,370
I have data how should I pass that<font color="#E5E5E5"> okay</font>

467
00:21:33,200 --> 00:21:35,779
<font color="#E5E5E5">that gave me a message</font>

468
00:21:34,370 --> 00:21:37,668
what do you want to do is that message

469
00:21:35,779 --> 00:21:40,909
<font color="#E5E5E5">do you have something to give me</font><font color="#CCCCCC"> to send</font>

470
00:21:37,669 --> 00:21:45,200
<font color="#CCCCCC">it to</font><font color="#E5E5E5"> let work now it's just</font><font color="#CCCCCC"> smoking</font>

471
00:21:40,909 --> 00:21:48,230
<font color="#CCCCCC">that you you ask and it answers and from</font>

472
00:21:45,200 --> 00:21:51,200
<font color="#CCCCCC">vienen</font><font color="#E5E5E5"> I are there I can implement a</font>

473
00:21:48,230 --> 00:21:52,909
method but<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> do a lot</font><font color="#CCCCCC"> of pattern</font>

474
00:21:51,200 --> 00:21:56,690
<font color="#CCCCCC">matching</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> we have lots of</font><font color="#E5E5E5"> states</font>

475
00:21:52,909 --> 00:21:59,450
and<font color="#CCCCCC"> say</font><font color="#E5E5E5"> okay I got a request time if you</font>

476
00:21:56,690 --> 00:22:02,210
are<font color="#CCCCCC"> in the initial state you go to the</font>

477
00:21:59,450 --> 00:22:04,149
house request line state otherwise<font color="#E5E5E5"> if</font>

478
00:22:02,210 --> 00:22:06,919
you were in<font color="#E5E5E5"> another state it's an error</font>

479
00:22:04,149 --> 00:22:09,080
if not try<font color="#CCCCCC"> to recover</font><font color="#E5E5E5"> anything because</font>

480
00:22:06,919 --> 00:22:13,309
there was an error in<font color="#E5E5E5"> the protocol you</font>

481
00:22:09,080 --> 00:22:16,129
stop there<font color="#E5E5E5"> I have the past method that</font>

482
00:22:13,309 --> 00:22:19,250
says<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> if I have if I am in the</font>

483
00:22:16,129 --> 00:22:19,889
initial state the passer I will try is

484
00:22:19,250 --> 00:22:22,950
the

485
00:22:19,890 --> 00:22:27,240
slang<font color="#E5E5E5"> passer otherwise it</font><font color="#CCCCCC"> was it</font><font color="#E5E5E5"> will be</font>

486
00:22:22,950 --> 00:22:32,130
<font color="#CCCCCC">d header</font><font color="#E5E5E5"> passer she's over</font><font color="#CCCCCC"> there</font>

487
00:22:27,240 --> 00:22:35,460
so lots of<font color="#CCCCCC"> patina thing</font><font color="#E5E5E5"> it's a bit</font>

488
00:22:32,130 --> 00:22:38,640
<font color="#E5E5E5">annoying to</font><font color="#CCCCCC"> write</font><font color="#E5E5E5"> I have I have to stop</font>

489
00:22:35,460 --> 00:22:40,650
<font color="#E5E5E5">for that afterwards I will show you you</font>

490
00:22:38,640 --> 00:22:43,770
can<font color="#E5E5E5"> make methods</font><font color="#CCCCCC"> over the state machine</font>

491
00:22:40,650 --> 00:22:46,710
<font color="#E5E5E5">to query</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> state like a do you have</font><font color="#CCCCCC"> a</font>

492
00:22:43,770 --> 00:22:49,139
host<font color="#E5E5E5"> like I want to open</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> connection</font>

493
00:22:46,710 --> 00:22:51,480
to the<font color="#CCCCCC"> backend I have</font><font color="#E5E5E5"> to know</font><font color="#CCCCCC"> which</font>

494
00:22:49,140 --> 00:22:54,690
server which<font color="#CCCCCC"> was named you were trying</font>

495
00:22:51,480 --> 00:22:57,900
<font color="#E5E5E5">to connect to so do you have asked</font><font color="#CCCCCC"> okay</font>

496
00:22:54,690 --> 00:23:01,800
so if<font color="#E5E5E5"> you were in as host or as host on</font>

497
00:22:57,900 --> 00:23:03,450
land or any of the<font color="#CCCCCC"> request types you can</font>

498
00:23:01,800 --> 00:23:06,780
go and say okay I have<font color="#E5E5E5"> the host now I</font>

499
00:23:03,450 --> 00:23:10,970
can<font color="#E5E5E5"> open a connection to</font><font color="#CCCCCC"> that set up do</font>

500
00:23:06,780 --> 00:23:15,570
you<font color="#E5E5E5"> want to read well in most cases yep</font>

501
00:23:10,970 --> 00:23:17,550
except I<font color="#E5E5E5"> got a full request or I got a</font>

502
00:23:15,570 --> 00:23:20,040
request<font color="#E5E5E5"> with your body and there's no</font>

503
00:23:17,550 --> 00:23:23,070
more remaining<font color="#E5E5E5"> data or</font><font color="#CCCCCC"> I got a</font><font color="#E5E5E5"> request</font>

504
00:23:20,040 --> 00:23:25,800
<font color="#CCCCCC">with chunks and there are no more</font><font color="#E5E5E5"> chunks</font>

505
00:23:23,070 --> 00:23:28,919
to read<font color="#E5E5E5"> and this means</font><font color="#CCCCCC"> that after</font><font color="#E5E5E5"> that I</font>

506
00:23:25,800 --> 00:23:32,430
would probably<font color="#CCCCCC"> have to to read from the</font>

507
00:23:28,920 --> 00:23:34,080
back<font color="#E5E5E5"> end</font><font color="#CCCCCC"> so as you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> see it's a bit</font>

508
00:23:32,430 --> 00:23:36,210
<font color="#E5E5E5">annoying</font><font color="#CCCCCC"> to write all of those paths on</font>

509
00:23:34,080 --> 00:23:39,780
machines<font color="#E5E5E5"> and these</font><font color="#CCCCCC"> in ohms</font><font color="#E5E5E5"> and stuff and</font>

510
00:23:36,210 --> 00:23:42,180
unwrapping stuff from the enema<font color="#E5E5E5"> so I</font>

511
00:23:39,780 --> 00:23:45,810
built a small<font color="#CCCCCC"> crate that's</font><font color="#E5E5E5"> called</font>

512
00:23:42,180 --> 00:23:47,820
machine<font color="#CCCCCC"> like when I</font><font color="#E5E5E5"> started rust I</font>

513
00:23:45,810 --> 00:23:51,179
wanted to build<font color="#CCCCCC"> at this awesome state</font>

514
00:23:47,820 --> 00:23:53,159
machine<font color="#E5E5E5"> trade that will allow you</font><font color="#CCCCCC"> to</font>

515
00:23:51,180 --> 00:23:56,070
write a steady state machine that<font color="#E5E5E5"> will</font>

516
00:23:53,160 --> 00:23:58,470
never get into<font color="#CCCCCC"> an error state and then I</font>

517
00:23:56,070 --> 00:24:01,080
left that for years<font color="#E5E5E5"> rotting somewhere</font>

518
00:23:58,470 --> 00:24:04,260
<font color="#E5E5E5">because when you write a protocol you're</font>

519
00:24:01,080 --> 00:24:05,580
not deciding who which message<font color="#E5E5E5"> will go</font>

520
00:24:04,260 --> 00:24:08,910
to those to<font color="#E5E5E5"> your state machine it's the</font>

521
00:24:05,580 --> 00:24:10,939
runtime property so you<font color="#CCCCCC"> can get any crap</font>

522
00:24:08,910 --> 00:24:13,290
<font color="#E5E5E5">sent to your state machine at any point</font>

523
00:24:10,940 --> 00:24:15,480
so you have to have something<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a</font>

524
00:24:13,290 --> 00:24:18,060
bit dynamic<font color="#E5E5E5"> and so that's why I built</font><font color="#CCCCCC"> a</font>

525
00:24:15,480 --> 00:24:21,510
<font color="#CCCCCC">new one that</font><font color="#E5E5E5"> will generate code that</font>

526
00:24:18,060 --> 00:24:25,409
matches<font color="#E5E5E5"> that kind of programming so here</font>

527
00:24:21,510 --> 00:24:29,280
<font color="#CCCCCC">as specified</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> states</font><font color="#E5E5E5"> what they</font>

528
00:24:25,410 --> 00:24:31,950
will contain so there are few states few

529
00:24:29,280 --> 00:24:34,290
types of<font color="#CCCCCC"> are like the lenta for the rent</font>

530
00:24:31,950 --> 00:24:37,890
information can be<font color="#CCCCCC"> okay desert land</font>

531
00:24:34,290 --> 00:24:41,520
it's a number<font color="#E5E5E5"> or it's junk this will</font>

532
00:24:37,890 --> 00:24:46,110
<font color="#CCCCCC">generate code that looks</font><font color="#E5E5E5"> like that an</font>

533
00:24:41,520 --> 00:24:49,500
enum with some structure<font color="#CCCCCC"> if you want you</font>

534
00:24:46,110 --> 00:24:52,979
can add some derive attributes<font color="#E5E5E5"> and they</font>

535
00:24:49,500 --> 00:24:58,200
will<font color="#E5E5E5"> appear on the enum and all the</font>

536
00:24:52,980 --> 00:25:00,270
<font color="#E5E5E5">structures some helper methods or I</font>

537
00:24:58,200 --> 00:25:02,820
fixed something yesterday<font color="#E5E5E5"> now it's</font><font color="#CCCCCC"> net</font>

538
00:25:00,270 --> 00:25:05,610
case<font color="#E5E5E5"> there so with this you</font><font color="#CCCCCC"> can just</font>

539
00:25:02,820 --> 00:25:07,740
start in the state you want<font color="#E5E5E5"> so I want to</font>

540
00:25:05,610 --> 00:25:12,929
be in a state<font color="#CCCCCC"> where</font><font color="#E5E5E5"> I already have a</font>

541
00:25:07,740 --> 00:25:14,910
host so I create<font color="#E5E5E5"> one and then from there</font>

542
00:25:12,930 --> 00:25:17,000
you already<font color="#CCCCCC"> have a lot of things to to</font>

543
00:25:14,910 --> 00:25:19,740
use but<font color="#E5E5E5"> you want to specify transitions</font>

544
00:25:17,000 --> 00:25:24,540
so I have another procedural macro for

545
00:25:19,740 --> 00:25:29,880
that<font color="#E5E5E5"> where I specify</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> state the</font>

546
00:25:24,540 --> 00:25:33,330
<font color="#E5E5E5">message and the outside state and I</font><font color="#CCCCCC"> can</font>

547
00:25:29,880 --> 00:25:35,580
<font color="#CCCCCC">even for some part from some transition</font>

548
00:25:33,330 --> 00:25:37,620
I can have multiple<font color="#E5E5E5"> outside states</font>

549
00:25:35,580 --> 00:25:40,169
because sometimes there are still

550
00:25:37,620 --> 00:25:41,790
conditions inside the<font color="#CCCCCC"> message like if</font>

551
00:25:40,170 --> 00:25:43,200
<font color="#E5E5E5">this value is that</font><font color="#CCCCCC"> I want to be in that</font>

552
00:25:41,790 --> 00:25:45,210
<font color="#E5E5E5">state if</font><font color="#CCCCCC"> this varies that</font><font color="#E5E5E5"> I want to be</font>

553
00:25:43,200 --> 00:25:47,460
in that<font color="#CCCCCC"> one and it's easier</font><font color="#E5E5E5"> to do in a</font>

554
00:25:45,210 --> 00:25:50,190
method<font color="#E5E5E5"> that generic</font><font color="#CCCCCC"> de-rating like ten</font>

555
00:25:47,460 --> 00:25:52,410
more states for that and<font color="#E5E5E5"> this generates</font>

556
00:25:50,190 --> 00:25:56,070
<font color="#E5E5E5">a method that will do all of the pattern</font>

557
00:25:52,410 --> 00:25:58,680
matching you want and now you what you

558
00:25:56,070 --> 00:26:02,370
only need to do is implement the like

559
00:25:58,680 --> 00:26:06,690
the<font color="#CCCCCC"> on request line on the initial state</font>

560
00:26:02,370 --> 00:26:09,899
structure so all<font color="#E5E5E5"> of the boilerplate to</font>

561
00:26:06,690 --> 00:26:12,210
write<font color="#CCCCCC"> state machines is done and we only</font>

562
00:26:09,900 --> 00:26:14,430
had to<font color="#CCCCCC"> wonder like</font><font color="#E5E5E5"> okay I'm in</font><font color="#CCCCCC"> that</font>

563
00:26:12,210 --> 00:26:19,200
<font color="#CCCCCC">state</font><font color="#E5E5E5"> I got this message I'm supposed to</font>

564
00:26:14,430 --> 00:26:22,560
<font color="#E5E5E5">gate so what do I do and this is a very</font>

565
00:26:19,200 --> 00:26:24,540
nice way to see<font color="#CCCCCC"> Oh</font><font color="#E5E5E5"> almost</font><font color="#CCCCCC"> taste okay</font>

566
00:26:22,560 --> 00:26:26,100
<font color="#E5E5E5">because I know I can only get</font><font color="#CCCCCC"> to that</font>

567
00:26:24,540 --> 00:26:28,139
one if I got that<font color="#E5E5E5"> message</font><font color="#CCCCCC"> and everything</font>

568
00:26:26,100 --> 00:26:31,919
else<font color="#E5E5E5"> go into an</font><font color="#CCCCCC"> arrow state that's been</font>

569
00:26:28,140 --> 00:26:33,900
<font color="#CCCCCC">added automatically and to make things</font>

570
00:26:31,920 --> 00:26:36,510
nicer<font color="#E5E5E5"> it can</font><font color="#CCCCCC"> generate the graph you saw</font>

571
00:26:33,900 --> 00:26:38,700
just earlier<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very nice to debug</font>

572
00:26:36,510 --> 00:26:40,410
<font color="#CCCCCC">because ok I write my transition I want</font>

573
00:26:38,700 --> 00:26:43,530
to see where do I go from<font color="#E5E5E5"> there and oh</font>

574
00:26:40,410 --> 00:26:45,390
wait I'm missing a state why<font color="#CCCCCC"> or how can</font>

575
00:26:43,530 --> 00:26:47,520
<font color="#E5E5E5">I get into the</font><font color="#CCCCCC"> AA</font><font color="#E5E5E5"> state at this point</font><font color="#CCCCCC"> or</font>

576
00:26:45,390 --> 00:26:48,130
I'm trying<font color="#E5E5E5"> am</font><font color="#CCCCCC"> i trying to recover</font><font color="#E5E5E5"> from</font>

577
00:26:47,520 --> 00:26:50,560
<font color="#E5E5E5">the</font>

578
00:26:48,130 --> 00:26:56,440
<font color="#E5E5E5">stage</font><font color="#CCCCCC"> flyer that can go a</font><font color="#E5E5E5"> bit far</font><font color="#CCCCCC"> with</font>

579
00:26:50,560 --> 00:27:01,810
<font color="#CCCCCC">that you can also</font><font color="#E5E5E5"> generate some helper</font>

580
00:26:56,440 --> 00:27:04,630
methods so as you can see in the

581
00:27:01,810 --> 00:27:09,820
specification a few of them have to<font color="#E5E5E5"> have</font>

582
00:27:04,630 --> 00:27:11,280
a host member and maybe I<font color="#E5E5E5"> want to get to</font>

583
00:27:09,820 --> 00:27:15,340
have an accessor for that

584
00:27:11,280 --> 00:27:17,620
so<font color="#CCCCCC"> we'll do</font><font color="#E5E5E5"> I will create</font><font color="#CCCCCC"> that and it</font>

585
00:27:15,340 --> 00:27:20,679
will create meet create the host method

586
00:27:17,620 --> 00:27:24,459
on the state machine and on each<font color="#CCCCCC"> of the</font>

587
00:27:20,680 --> 00:27:27,010
required<font color="#CCCCCC"> States and return me</font><font color="#E5E5E5"> known if</font>

588
00:27:24,460 --> 00:27:28,360
it's not a state that<font color="#E5E5E5"> has</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so with</font>

589
00:27:27,010 --> 00:27:34,180
that it gets a bit easier to<font color="#E5E5E5"> write the</font>

590
00:27:28,360 --> 00:27:39,729
protocol it's also very<font color="#E5E5E5"> easy to unit</font>

591
00:27:34,180 --> 00:27:41,710
<font color="#CCCCCC">tests I can start in the host state and</font>

592
00:27:39,730 --> 00:27:44,710
<font color="#E5E5E5">then extend the length header</font><font color="#CCCCCC"> okay I</font>

593
00:27:41,710 --> 00:27:48,040
know I'm<font color="#E5E5E5"> in the as host and length</font><font color="#CCCCCC"> state</font>

594
00:27:44,710 --> 00:27:51,670
<font color="#E5E5E5">Oh</font><font color="#CCCCCC"> what happens what</font><font color="#E5E5E5"> happens when I</font><font color="#CCCCCC"> send</font>

595
00:27:48,040 --> 00:27:54,460
<font color="#CCCCCC">another hosts a message after that well</font>

596
00:27:51,670 --> 00:27:56,890
I get no<font color="#CCCCCC"> I think there was some case</font>

597
00:27:54,460 --> 00:27:59,440
where you could get to host headers in

598
00:27:56,890 --> 00:28:02,230
HTTP and some server well we're

599
00:27:59,440 --> 00:28:03,760
accepting that<font color="#E5E5E5"> and this is a bad idea</font><font color="#CCCCCC"> so</font>

600
00:28:02,230 --> 00:28:08,620
you<font color="#CCCCCC"> have to make to go into</font><font color="#E5E5E5"> another</font>

601
00:28:03,760 --> 00:28:10,780
<font color="#CCCCCC">state without so we already</font><font color="#E5E5E5"> have liked a</font>

602
00:28:08,620 --> 00:28:13,389
<font color="#E5E5E5">lot of tooling to build protocols and</font>

603
00:28:10,780 --> 00:28:15,129
but it's still very<font color="#CCCCCC"> abstracted with</font><font color="#E5E5E5"> Sony</font>

604
00:28:13,390 --> 00:28:19,300
<font color="#E5E5E5">the</font><font color="#CCCCCC"> state</font><font color="#E5E5E5"> machine how do we talk to</font><font color="#CCCCCC"> the</font>

605
00:28:15,130 --> 00:28:22,270
<font color="#E5E5E5">rest of the i/o well there are first we</font>

606
00:28:19,300 --> 00:28:26,440
have to<font color="#E5E5E5"> have a way</font><font color="#CCCCCC"> to interact with beta</font>

607
00:28:22,270 --> 00:28:28,810
we have to to<font color="#E5E5E5"> find I have a buffer I</font>

608
00:28:26,440 --> 00:28:31,960
want to<font color="#CCCCCC"> make a strict on</font><font color="#E5E5E5"> myself from</font>

609
00:28:28,810 --> 00:28:36,580
<font color="#E5E5E5">that I have</font><font color="#CCCCCC"> a message</font><font color="#E5E5E5"> I want to write</font>

610
00:28:31,960 --> 00:28:39,010
that to a<font color="#E5E5E5"> buffer the thing is we</font><font color="#CCCCCC"> don't</font>

611
00:28:36,580 --> 00:28:40,960
know how<font color="#E5E5E5"> much data has been sent or not</font>

612
00:28:39,010 --> 00:28:43,690
by the network<font color="#E5E5E5"> you could have someone</font>

613
00:28:40,960 --> 00:28:46,780
that's<font color="#CCCCCC"> very not nice and</font><font color="#E5E5E5"> sends you DHCP</font>

614
00:28:43,690 --> 00:28:50,080
requests one character by one character

615
00:28:46,780 --> 00:28:52,750
<font color="#E5E5E5">by one character you</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> have someone</font>

616
00:28:50,080 --> 00:28:59,260
<font color="#E5E5E5">that sends a cookie header</font><font color="#CCCCCC"> that's like</font>

617
00:28:52,750 --> 00:29:02,010
<font color="#E5E5E5">one megabyte this happens a lot so</font><font color="#CCCCCC"> we</font>

618
00:28:59,260 --> 00:29:05,100
need some to link to to handle

619
00:29:02,010 --> 00:29:09,900
partial data so<font color="#CCCCCC"> parser that could work</font>

620
00:29:05,100 --> 00:29:12,419
we've<font color="#CCCCCC"> to say okay this</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> invalid</font>

621
00:29:09,900 --> 00:29:14,760
because I know that can<font color="#CCCCCC"> be more data and</font>

622
00:29:12,420 --> 00:29:17,370
<font color="#E5E5E5">I'm</font><font color="#CCCCCC"> waiting for you to read more data</font>

623
00:29:14,760 --> 00:29:19,950
<font color="#E5E5E5">and you need to have the same</font><font color="#CCCCCC"> wheel on</font>

624
00:29:17,370 --> 00:29:22,199
<font color="#E5E5E5">the right side</font><font color="#CCCCCC"> let's say</font><font color="#E5E5E5"> okay I will try</font>

625
00:29:19,950 --> 00:29:24,960
to write and if there was not enough

626
00:29:22,200 --> 00:29:28,020
room<font color="#CCCCCC"> I will write</font><font color="#E5E5E5"> the rest later</font>

627
00:29:24,960 --> 00:29:30,780
you need to understand<font color="#E5E5E5"> state</font><font color="#CCCCCC"> without</font><font color="#E5E5E5"> so</font>

628
00:29:28,020 --> 00:29:33,750
on the passing side hi

629
00:29:30,780 --> 00:29:36,149
I built<font color="#CCCCCC"> none this</font><font color="#E5E5E5"> is a nice</font><font color="#CCCCCC"> pasture</font>

630
00:29:33,750 --> 00:29:39,960
community library that's based on macros

631
00:29:36,150 --> 00:29:44,610
and with<font color="#E5E5E5"> this you can be like very fast</font>

632
00:29:39,960 --> 00:29:46,650
<font color="#E5E5E5">very simple</font><font color="#CCCCCC"> process so this is the one</font>

633
00:29:44,610 --> 00:29:50,149
to pass the<font color="#E5E5E5"> request line so we try to</font>

634
00:29:46,650 --> 00:29:54,270
<font color="#E5E5E5">pass the method the URI the version and</font>

635
00:29:50,150 --> 00:29:57,180
if like if you<font color="#E5E5E5"> only got like the Demeter</font>

636
00:29:54,270 --> 00:30:01,980
<font color="#E5E5E5">than the URI and nothing else it will</font>

637
00:29:57,180 --> 00:30:05,450
just say<font color="#E5E5E5"> ok</font><font color="#CCCCCC"> I'll return the result I</font>

638
00:30:01,980 --> 00:30:09,180
<font color="#CCCCCC">returned is incomplete I need more data</font>

639
00:30:05,450 --> 00:30:11,460
<font color="#E5E5E5">but if there's</font><font color="#CCCCCC"> even a smallest error you</font>

640
00:30:09,180 --> 00:30:14,190
say<font color="#E5E5E5"> ok now you have to stop this was</font>

641
00:30:11,460 --> 00:30:14,520
invalid message you have<font color="#E5E5E5"> to stop with</font>

642
00:30:14,190 --> 00:30:17,040
that

643
00:30:14,520 --> 00:30:19,770
so<font color="#CCCCCC"> gnome is able to</font><font color="#E5E5E5"> work in streaming to</font>

644
00:30:17,040 --> 00:30:22,889
<font color="#E5E5E5">work in with partial data and really</font>

645
00:30:19,770 --> 00:30:25,620
helps with<font color="#E5E5E5"> that types of programming</font><font color="#CCCCCC"> on</font>

646
00:30:22,890 --> 00:30:31,800
<font color="#CCCCCC">the right</font><font color="#E5E5E5"> side there's the cookie</font>

647
00:30:25,620 --> 00:30:34,169
<font color="#E5E5E5">factory</font><font color="#CCCCCC"> crate which which lets you build</font>

648
00:30:31,800 --> 00:30:36,120
a sec machine so<font color="#E5E5E5"> you see it's it's a bit</font>

649
00:30:34,170 --> 00:30:39,030
like the futures got inspiration from

650
00:30:36,120 --> 00:30:44,100
<font color="#E5E5E5">the the futures Combinator</font><font color="#CCCCCC"> I build a</font>

651
00:30:39,030 --> 00:30:45,810
machine that<font color="#E5E5E5"> we try to write and if you</font>

652
00:30:44,100 --> 00:30:48,300
stop like<font color="#CCCCCC"> ok there was not enough data</font>

653
00:30:45,810 --> 00:30:51,179
to<font color="#CCCCCC"> write the</font><font color="#E5E5E5"> all you are the whole URI</font>

654
00:30:48,300 --> 00:30:54,240
<font color="#CCCCCC">ok</font><font color="#E5E5E5"> we just</font><font color="#CCCCCC"> have to call that</font><font color="#E5E5E5"> structure</font>

655
00:30:51,180 --> 00:30:55,380
later and say<font color="#E5E5E5"> ok now</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> write so</font>

656
00:30:54,240 --> 00:31:03,630
this<font color="#CCCCCC"> will underpass shoulders are</font>

657
00:30:55,380 --> 00:31:05,880
correctly so from there<font color="#E5E5E5"> how do we</font>

658
00:31:03,630 --> 00:31:09,060
interact with<font color="#E5E5E5"> the world we have a very</font>

659
00:31:05,880 --> 00:31:10,770
<font color="#CCCCCC">nice protocol that's very nicely</font><font color="#E5E5E5"> stored</font>

660
00:31:09,060 --> 00:31:14,658
inside in state<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> so now we have</font>

661
00:31:10,770 --> 00:31:16,369
to talk to the<font color="#E5E5E5"> rest of the world so the</font>

662
00:31:14,659 --> 00:31:21,080
the calling<font color="#E5E5E5"> application</font><font color="#CCCCCC"> we'll just call</font>

663
00:31:16,369 --> 00:31:24,428
methods that say okay<font color="#E5E5E5"> I want</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to pass</font>

664
00:31:21,080 --> 00:31:27,799
HTTP<font color="#CCCCCC"> requests I want you to connect</font><font color="#E5E5E5"> to</font>

665
00:31:24,429 --> 00:31:30,919
<font color="#E5E5E5">mqp server</font><font color="#CCCCCC"> I want you to create a</font>

666
00:31:27,799 --> 00:31:33,799
channel<font color="#E5E5E5"> and then send some message on it</font>

667
00:31:30,919 --> 00:31:37,840
<font color="#E5E5E5">so you need to have methods the method</font>

668
00:31:33,799 --> 00:31:41,168
will trigger a state change<font color="#CCCCCC"> will figure</font>

669
00:31:37,840 --> 00:31:43,928
the message sent over the network<font color="#CCCCCC"> or</font>

670
00:31:41,169 --> 00:31:47,960
waiting for<font color="#CCCCCC"> myself from</font><font color="#E5E5E5"> the network and</font>

671
00:31:43,929 --> 00:31:51,139
then<font color="#E5E5E5"> you let the</font><font color="#CCCCCC"> IU implementation run</font>

672
00:31:47,960 --> 00:31:53,359
until something happens<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is this is</font>

673
00:31:51,139 --> 00:31:55,428
what happens in any network protocol

674
00:31:53,359 --> 00:31:57,379
implementation most of the time we<font color="#CCCCCC"> don't</font>

675
00:31:55,429 --> 00:32:00,470
<font color="#CCCCCC">see it</font><font color="#E5E5E5"> because this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the lower level</font>

676
00:31:57,379 --> 00:32:02,869
<font color="#CCCCCC">and the annoying</font><font color="#E5E5E5"> part and this</font><font color="#CCCCCC"> is the</font>

677
00:32:00,470 --> 00:32:05,210
part we want<font color="#E5E5E5"> to make nice and once we</font>

678
00:32:02,869 --> 00:32:07,158
get into<font color="#CCCCCC"> the right state we can query</font>

679
00:32:05,210 --> 00:32:09,049
that and say okay<font color="#E5E5E5"> are you</font><font color="#CCCCCC"> in the state I</font>

680
00:32:07,159 --> 00:32:11,359
want<font color="#E5E5E5"> and do you have the data I want if</font>

681
00:32:09,049 --> 00:32:14,739
not<font color="#E5E5E5"> continue with</font><font color="#CCCCCC"> live include continue</font>

682
00:32:11,359 --> 00:32:19,039
doing<font color="#E5E5E5"> i/o and I will call you back later</font>

683
00:32:14,739 --> 00:32:20,690
so the first<font color="#E5E5E5"> the easiest way is you can</font>

684
00:32:19,039 --> 00:32:23,599
use those protocol<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> synchronous way</font>

685
00:32:20,690 --> 00:32:26,149
in the<font color="#E5E5E5"> blocking way just have to have a</font>

686
00:32:23,599 --> 00:32:29,119
loop that<font color="#CCCCCC"> says okay</font><font color="#E5E5E5"> read from the</font><font color="#CCCCCC"> socket</font>

687
00:32:26,149 --> 00:32:31,639
<font color="#CCCCCC">okay now try</font><font color="#E5E5E5"> to pass that send a message</font>

688
00:32:29,119 --> 00:32:34,519
to<font color="#E5E5E5"> the state I am in the right state</font><font color="#CCCCCC"> no</font>

689
00:32:31,639 --> 00:32:39,199
so then<font color="#CCCCCC"> I'd read again it works in</font>

690
00:32:34,519 --> 00:32:42,229
synchronous ways if you<font color="#E5E5E5"> let me and want</font>

691
00:32:39,200 --> 00:32:45,619
to<font color="#E5E5E5"> have a bit</font><font color="#CCCCCC"> of pain</font><font color="#E5E5E5"> build your own</font>

692
00:32:42,229 --> 00:32:47,629
event group so there's this very very

693
00:32:45,619 --> 00:32:50,168
nice<font color="#E5E5E5"> library that's called</font><font color="#CCCCCC"> mayo</font><font color="#E5E5E5"> from</font>

694
00:32:47,629 --> 00:32:52,129
<font color="#E5E5E5">metal</font><font color="#CCCCCC"> io that's at the heart of most</font>

695
00:32:50,169 --> 00:32:54,169
awesome networking a permutation<font color="#E5E5E5"> is</font>

696
00:32:52,129 --> 00:32:58,129
<font color="#CCCCCC">dressed like Tokyo and everything is</font>

697
00:32:54,169 --> 00:33:03,279
based on my Mayo is a thin wrapper<font color="#E5E5E5"> above</font>

698
00:32:58,129 --> 00:33:07,459
<font color="#E5E5E5">a pole and catch you to handle events</font>

699
00:33:03,279 --> 00:33:09,499
the<font color="#E5E5E5"> way you build that is you wait for</font>

700
00:33:07,460 --> 00:33:11,659
the OS to tell you<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> what are the</font>

701
00:33:09,499 --> 00:33:16,759
<font color="#CCCCCC">events</font><font color="#E5E5E5"> for each of the circuits I handle</font>

702
00:33:11,659 --> 00:33:19,549
you<font color="#CCCCCC"> get an event okay I have this token</font>

703
00:33:16,759 --> 00:33:20,029
<font color="#E5E5E5">this corresponds to this client this</font>

704
00:33:19,549 --> 00:33:22,700
session

705
00:33:20,029 --> 00:33:25,669
<font color="#CCCCCC">I got a readiness</font><font color="#E5E5E5"> and the readiness</font>

706
00:33:22,700 --> 00:33:27,859
tells me this<font color="#CCCCCC"> socket is</font><font color="#E5E5E5"> readable this</font>

707
00:33:25,669 --> 00:33:28,250
circuit is writable<font color="#E5E5E5"> there was an arrow</font>

708
00:33:27,859 --> 00:33:29,980
and

709
00:33:28,250 --> 00:33:34,130
<font color="#E5E5E5">in that</font><font color="#CCCCCC"> circuit</font><font color="#E5E5E5"> and it's been</font>

710
00:33:29,980 --> 00:33:36,620
disconnected<font color="#CCCCCC"> let's trap</font><font color="#E5E5E5"> you look at how</font>

711
00:33:34,130 --> 00:33:38,000
it's a bit loud<font color="#CCCCCC"> rabbit</font><font color="#E5E5E5"> like you look at</font>

712
00:33:36,620 --> 00:33:40,250
what you were<font color="#E5E5E5"> working in</font><font color="#CCCCCC"> fall at with</font>

713
00:33:38,000 --> 00:33:41,840
the interest<font color="#E5E5E5"> so maybe I want</font><font color="#CCCCCC"> to circuit</font>

714
00:33:40,250 --> 00:33:43,010
<font color="#CCCCCC">that through the</font><font color="#E5E5E5"> bar maybe I have data</font>

715
00:33:41,840 --> 00:33:46,929
<font color="#CCCCCC">to write so I want to get</font><font color="#E5E5E5"> that's</font>

716
00:33:43,010 --> 00:33:52,100
<font color="#CCCCCC">writable so you match</font><font color="#E5E5E5"> both of them and</font>

717
00:33:46,930 --> 00:33:53,600
you you see<font color="#E5E5E5"> okay so if the socket is</font>

718
00:33:52,100 --> 00:33:55,699
<font color="#E5E5E5">readable I</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> a circuit that's</font>

719
00:33:53,600 --> 00:33:58,070
readable<font color="#CCCCCC"> I will read from the network</font>

720
00:33:55,700 --> 00:34:00,410
<font color="#E5E5E5">okay that means now I have more messages</font>

721
00:33:58,070 --> 00:34:03,800
to<font color="#E5E5E5"> send this to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> SEC machine</font><font color="#CCCCCC"> I have</font>

722
00:34:00,410 --> 00:34:05,330
to run my<font color="#CCCCCC"> state's main event loop until</font>

723
00:34:03,800 --> 00:34:07,370
there's no food nothing<font color="#E5E5E5"> not to do and</font>

724
00:34:05,330 --> 00:34:10,340
then from there<font color="#E5E5E5"> okay</font>

725
00:34:07,370 --> 00:34:11,830
<font color="#E5E5E5">I run all</font><font color="#CCCCCC"> of all</font><font color="#E5E5E5"> of the messages maybe I</font>

726
00:34:10,340 --> 00:34:15,980
have<font color="#E5E5E5"> something to write to the network</font>

727
00:34:11,830 --> 00:34:22,730
can I write to the network if I can yes

728
00:34:15,980 --> 00:34:25,129
<font color="#E5E5E5">I will so this is full of easy mistakes</font>

729
00:34:22,730 --> 00:34:26,270
<font color="#E5E5E5">but it's still a</font><font color="#CCCCCC"> very nice</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> to</font>

730
00:34:25,129 --> 00:34:30,290
program<font color="#CCCCCC"> network because you're in</font>

731
00:34:26,270 --> 00:34:32,060
<font color="#E5E5E5">control of everything so I'm writing a</font>

732
00:34:30,290 --> 00:34:34,820
lot of boilerplate<font color="#E5E5E5"> on that and we'll</font>

733
00:34:32,060 --> 00:34:38,750
<font color="#E5E5E5">publish at some point some guidelines on</font>

734
00:34:34,820 --> 00:34:40,790
how<font color="#CCCCCC"> to write that</font><font color="#E5E5E5"> but I encourage you to</font>

735
00:34:38,750 --> 00:34:42,260
<font color="#CCCCCC">look at how it's done another</font><font color="#E5E5E5"> hood as</font>

736
00:34:40,790 --> 00:34:45,730
like<font color="#E5E5E5"> that's how people have</font><font color="#CCCCCC"> been</font>

737
00:34:42,260 --> 00:34:49,210
building<font color="#E5E5E5"> C servers for a while so</font>

738
00:34:45,730 --> 00:34:53,270
there's no reason we can do the interest

739
00:34:49,210 --> 00:34:55,120
that's the<font color="#E5E5E5"> callback way where we can get</font>

740
00:34:53,270 --> 00:34:59,060
a<font color="#CCCCCC"> lemon to plug</font><font color="#E5E5E5"> that and we have</font>

741
00:34:55,120 --> 00:35:02,710
callbacks<font color="#CCCCCC"> that we put on</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> callbacks</font>

742
00:34:59,060 --> 00:35:06,140
<font color="#E5E5E5">and closures and stuff are a bit hard to</font>

743
00:35:02,710 --> 00:35:08,390
to store in rust<font color="#E5E5E5"> so this might be not be</font>

744
00:35:06,140 --> 00:35:12,049
the<font color="#E5E5E5"> easiest way to write that but the</font>

745
00:35:08,390 --> 00:35:15,710
good<font color="#CCCCCC"> news is we can make futures around</font>

746
00:35:12,050 --> 00:35:18,410
what<font color="#E5E5E5"> I just saw so you can build a</font>

747
00:35:15,710 --> 00:35:22,190
<font color="#CCCCCC">future like the future trade</font><font color="#E5E5E5"> it gives</font>

748
00:35:18,410 --> 00:35:25,009
you it requires<font color="#E5E5E5"> a pole a pole method</font>

749
00:35:22,190 --> 00:35:28,520
<font color="#CCCCCC">call method is</font><font color="#E5E5E5"> just okay do you have</font>

750
00:35:25,010 --> 00:35:30,770
something to do<font color="#E5E5E5"> do you</font><font color="#CCCCCC"> you in the</font><font color="#E5E5E5"> the</font>

751
00:35:28,520 --> 00:35:33,620
<font color="#CCCCCC">right</font><font color="#E5E5E5"> state to give you to</font><font color="#CCCCCC"> give me the</font>

752
00:35:30,770 --> 00:35:35,660
data I<font color="#CCCCCC"> want etcetera</font><font color="#E5E5E5"> and the state</font>

753
00:35:33,620 --> 00:35:37,430
machine will say<font color="#E5E5E5"> maybe I have something</font>

754
00:35:35,660 --> 00:35:40,549
to<font color="#E5E5E5"> give you all may know I'm not</font>

755
00:35:37,430 --> 00:35:41,720
<font color="#E5E5E5">interested</font><font color="#CCCCCC"> yet so we can just wrap a set</font>

756
00:35:40,550 --> 00:35:44,150
machine like that

757
00:35:41,720 --> 00:35:46,899
and build your own future system and

758
00:35:44,150 --> 00:35:49,819
this<font color="#E5E5E5"> is what I did with lapa because I</font>

759
00:35:46,900 --> 00:35:52,010
made this<font color="#E5E5E5"> this implementation that's a</font>

760
00:35:49,819 --> 00:35:54,470
synchronous that that's<font color="#CCCCCC"> V deterministic</font>

761
00:35:52,010 --> 00:35:56,589
and then there's a<font color="#E5E5E5"> future</font><font color="#CCCCCC"> videos rapper</font>

762
00:35:54,470 --> 00:35:59,649
<font color="#E5E5E5">that's very nice to use because you</font>

763
00:35:56,589 --> 00:36:02,509
<font color="#CCCCCC">don't see all of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> low-level</font><font color="#E5E5E5"> details</font>

764
00:35:59,650 --> 00:36:04,970
so this is called I got<font color="#E5E5E5"> from lopoliths</font>

765
00:36:02,510 --> 00:36:09,349
<font color="#E5E5E5">a bit hard to follow</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> but the idea</font>

766
00:36:04,970 --> 00:36:12,470
is<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> I want to create a</font><font color="#E5E5E5"> queue so I</font>

767
00:36:09,349 --> 00:36:14,900
will call the<font color="#CCCCCC"> sec machinist a queue</font>

768
00:36:12,470 --> 00:36:17,390
declare this will this will create a

769
00:36:14,900 --> 00:36:20,329
message that will be<font color="#E5E5E5"> put in the output</font>

770
00:36:17,390 --> 00:36:24,109
queue<font color="#E5E5E5"> and at some point will be written</font>

771
00:36:20,329 --> 00:36:26,329
<font color="#CCCCCC">by the</font><font color="#E5E5E5"> the event loop and then I</font><font color="#CCCCCC"> pull</font>

772
00:36:24,109 --> 00:36:28,160
one<font color="#E5E5E5"> function and every time I could say</font>

773
00:36:26,329 --> 00:36:31,190
<font color="#E5E5E5">okay now are you in</font><font color="#CCCCCC"> the right</font><font color="#E5E5E5"> state for</font>

774
00:36:28,160 --> 00:36:33,589
what I want like if you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> in the if</font>

775
00:36:31,190 --> 00:36:36,079
you got the queue<font color="#E5E5E5"> if the server answered</font>

776
00:36:33,589 --> 00:36:41,089
and told you<font color="#E5E5E5"> okay the queue exists</font><font color="#CCCCCC"> now I</font>

777
00:36:36,079 --> 00:36:45,020
can return<font color="#CCCCCC"> otherwise continue on the</font>

778
00:36:41,089 --> 00:36:47,089
path side<font color="#E5E5E5"> that's a very nice</font><font color="#CCCCCC"> way we've</font>

779
00:36:45,020 --> 00:36:49,910
talked you we've talked<font color="#E5E5E5"> about you to do</font>

780
00:36:47,089 --> 00:36:53,359
that<font color="#E5E5E5"> it's called the transport and you</font>

781
00:36:49,910 --> 00:36:55,730
build<font color="#E5E5E5"> a structure that has a decoder and</font>

782
00:36:53,359 --> 00:36:59,299
the decoder will<font color="#CCCCCC"> get passed some data</font>

783
00:36:55,730 --> 00:37:01,640
here<font color="#E5E5E5"> and there and you use your</font><font color="#CCCCCC"> non</font>

784
00:36:59,300 --> 00:37:02,150
<font color="#E5E5E5">passer on that data and it</font><font color="#CCCCCC"> will tell you</font>

785
00:37:01,640 --> 00:37:04,759
<font color="#E5E5E5">okay</font>

786
00:37:02,150 --> 00:37:07,880
I<font color="#E5E5E5"> consume this much data you can remove</font>

787
00:37:04,760 --> 00:37:10,280
this<font color="#E5E5E5"> much from the buffer and it gives</font>

788
00:37:07,880 --> 00:37:13,369
the messages<font color="#CCCCCC"> that to your set machine</font>

789
00:37:10,280 --> 00:37:16,190
afterwards so it's it's a bit of work

790
00:37:13,369 --> 00:37:19,310
<font color="#E5E5E5">but</font><font color="#CCCCCC"> you can make a very nice</font><font color="#E5E5E5"> protocol</font>

791
00:37:16,190 --> 00:37:22,460
implementation that's<font color="#E5E5E5"> a synchronous that</font>

792
00:37:19,310 --> 00:37:26,660
can be used in see that in C and any

793
00:37:22,460 --> 00:37:28,130
other language that's testable<font color="#E5E5E5"> that can</font>

794
00:37:26,660 --> 00:37:31,578
be used with<font color="#CCCCCC"> mu if you choose with</font>

795
00:37:28,130 --> 00:37:34,730
everything you want that's a repaint<font color="#CCCCCC"> to</font>

796
00:37:31,579 --> 00:37:38,750
<font color="#CCCCCC">write</font><font color="#E5E5E5"> honestly</font><font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to want to</font>

797
00:37:34,730 --> 00:37:41,780
write<font color="#E5E5E5"> high level code</font><font color="#CCCCCC"> but for what I</font>

798
00:37:38,750 --> 00:37:44,569
want this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a bit</font><font color="#E5E5E5"> easier if you have</font>

799
00:37:41,780 --> 00:37:46,369
higher higher level application right

800
00:37:44,569 --> 00:37:48,859
then with<font color="#CCCCCC"> a single weight</font><font color="#E5E5E5"> with futures</font>

801
00:37:46,369 --> 00:37:51,380
<font color="#CCCCCC">if you have low level protocols and self</font>

802
00:37:48,859 --> 00:37:55,310
do that this<font color="#CCCCCC"> is this</font><font color="#E5E5E5"> is this will be</font><font color="#CCCCCC"> a</font>

803
00:37:51,380 --> 00:37:58,160
bit better<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so this was written</font>

804
00:37:55,310 --> 00:38:03,230
till a few weeks months ago<font color="#E5E5E5"> but now we</font>

805
00:37:58,160 --> 00:38:06,080
have norm we have<font color="#E5E5E5"> cookie factory and we</font>

806
00:38:03,230 --> 00:38:08,570
have the<font color="#CCCCCC"> Machine crate so we have the</font>

807
00:38:06,080 --> 00:38:12,680
whole<font color="#E5E5E5"> set of</font><font color="#CCCCCC"> tools to do that and if you</font>

808
00:38:08,570 --> 00:38:14,720
go look at<font color="#E5E5E5"> the</font><font color="#CCCCCC"> rest bakery our guys they</font>

809
00:38:12,680 --> 00:38:16,490
get a bargain ization<font color="#CCCCCC"> you will see like</font>

810
00:38:14,720 --> 00:38:19,009
<font color="#E5E5E5">I will accumulate a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> projects</font>

811
00:38:16,490 --> 00:38:21,140
around protocols and<font color="#CCCCCC"> num that will help</font>

812
00:38:19,010 --> 00:38:22,310
you write what you want<font color="#CCCCCC"> because there</font>

813
00:38:21,140 --> 00:38:23,049
are lots of thing you can<font color="#E5E5E5"> do with</font>

814
00:38:22,310 --> 00:38:26,720
<font color="#CCCCCC">parcels</font>

815
00:38:23,050 --> 00:38:30,880
I'm all for<font color="#E5E5E5"> giving people tools to write</font>

816
00:38:26,720 --> 00:38:36,799
<font color="#E5E5E5">what they</font><font color="#CCCCCC"> want safely and fast</font><font color="#E5E5E5"> all right</font>

817
00:38:30,880 --> 00:38:38,590
so thank you<font color="#E5E5E5"> I will let</font><font color="#CCCCCC"> people you can</font>

818
00:38:36,800 --> 00:38:46,930
clap if you

819
00:38:38,590 --> 00:38:55,310
[Applause]

820
00:38:46,930 --> 00:39:02,600
any questions<font color="#CCCCCC"> now you say what about</font>

821
00:38:55,310 --> 00:39:06,430
<font color="#CCCCCC">performance with DP DK</font><font color="#E5E5E5"> d pd k io</font>

822
00:39:02,600 --> 00:39:06,430
pass-through for<font color="#CCCCCC"> the canal was right</font>

823
00:39:11,350 --> 00:39:18,470
hello have you tried DP<font color="#CCCCCC"> D K okay so I</font>

824
00:39:16,700 --> 00:39:22,160
ever tried<font color="#E5E5E5"> to PT k DP D K is a way to</font>

825
00:39:18,470 --> 00:39:24,200
have<font color="#E5E5E5"> your packets sent directly</font><font color="#CCCCCC"> from the</font>

826
00:39:22,160 --> 00:39:27,649
network card to user instead of letting

827
00:39:24,200 --> 00:39:30,790
the the<font color="#CCCCCC"> OS pass them so I did not but</font>

828
00:39:27,650 --> 00:39:33,440
someone has built IP TCP and whatever

829
00:39:30,790 --> 00:39:36,279
passes for<font color="#E5E5E5"> that and I know someone</font><font color="#CCCCCC"> is</font>

830
00:39:33,440 --> 00:39:39,950
doing<font color="#E5E5E5"> like</font><font color="#CCCCCC"> really low level i/o with Nam</font>

831
00:39:36,280 --> 00:39:41,780
<font color="#CCCCCC">and it's not at liberty to</font><font color="#E5E5E5"> tell which</font>

832
00:39:39,950 --> 00:39:45,700
company and which kind of<font color="#CCCCCC"> project</font><font color="#E5E5E5"> they</font>

833
00:39:41,780 --> 00:39:45,700
are doing but I know<font color="#E5E5E5"> it exists</font>

834
00:39:47,740 --> 00:39:58,220
yeah can I write level two protocols<font color="#CCCCCC"> I</font>

835
00:39:56,240 --> 00:40:01,939
can write protocol at almost any<font color="#E5E5E5"> level I</font>

836
00:39:58,220 --> 00:40:05,629
can handle<font color="#CCCCCC"> bit stream passing I can add</font>

837
00:40:01,940 --> 00:40:08,600
<font color="#CCCCCC">reg X in</font><font color="#E5E5E5"> that I can tokenize a language</font>

838
00:40:05,630 --> 00:40:10,520
it's not<font color="#E5E5E5"> the nicest library known for</font>

839
00:40:08,600 --> 00:40:13,700
the<font color="#CCCCCC"> for to pass a programming language</font>

840
00:40:10,520 --> 00:40:16,190
<font color="#E5E5E5">but</font><font color="#CCCCCC"> for almost</font><font color="#E5E5E5"> all of the file storage</font>

841
00:40:13,700 --> 00:40:19,990
or network formats<font color="#CCCCCC"> it's very good</font>

842
00:40:16,190 --> 00:40:19,990
<font color="#E5E5E5">especially in binary protocol</font>

843
00:40:33,710 --> 00:40:38,640
<font color="#E5E5E5">okay so a question there's an</font>

844
00:40:35,910 --> 00:40:42,629
implementation<font color="#CCCCCC"> of quick</font><font color="#E5E5E5"> that's actually</font>

845
00:40:38,640 --> 00:40:45,270
<font color="#CCCCCC">to this</font><font color="#E5E5E5"> Quine and</font><font color="#CCCCCC"> quiz I guess cush</font><font color="#E5E5E5"> and</font>

846
00:40:42,630 --> 00:40:47,040
if anything is like the way the one<font color="#CCCCCC"> that</font>

847
00:40:45,270 --> 00:40:49,890
from<font color="#CCCCCC"> perfet which is quiche</font>

848
00:40:47,040 --> 00:40:51,599
I don't know each other so<font color="#CCCCCC"> club fell</font><font color="#E5E5E5"> did</font>

849
00:40:49,890 --> 00:40:54,740
one one<font color="#E5E5E5"> implementation of the</font><font color="#CCCCCC"> quic</font>

850
00:40:51,599 --> 00:40:56,790
protocol which is<font color="#E5E5E5"> a low-level udp-based</font>

851
00:40:54,740 --> 00:41:01,169
<font color="#E5E5E5">encrypted protocol that could be used</font>

852
00:40:56,790 --> 00:41:03,089
for<font color="#E5E5E5"> the next HTTP more or less and they</font>

853
00:41:01,170 --> 00:41:04,950
did an implementation like what I

854
00:41:03,089 --> 00:41:06,599
present<font color="#E5E5E5"> it</font><font color="#CCCCCC"> because I thought fair they</font>

855
00:41:04,950 --> 00:41:10,259
want the protocol implementation to be

856
00:41:06,599 --> 00:41:14,040
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be called</font><font color="#E5E5E5"> from C code Allah or</font>

857
00:41:10,260 --> 00:41:16,319
whatever they're doing so<font color="#E5E5E5"> maybe I'll do</font>

858
00:41:14,040 --> 00:41:16,890
a quick<font color="#CCCCCC"> implementation at some point</font><font color="#E5E5E5"> not</font>

859
00:41:16,319 --> 00:41:19,170
<font color="#E5E5E5">anytime soon</font>

860
00:41:16,890 --> 00:41:22,970
<font color="#E5E5E5">I'm quite busy but the protocol looks</font>

861
00:41:19,170 --> 00:41:22,970
<font color="#E5E5E5">nice yeah it's interesting</font>

862
00:41:33,330 --> 00:41:40,660
<font color="#CCCCCC">was the level</font><font color="#E5E5E5"> of maturity of the</font><font color="#CCCCCC"> machine</font>

863
00:41:35,980 --> 00:41:46,060
crate<font color="#CCCCCC"> not much at least</font><font color="#E5E5E5"> that last week</font><font color="#CCCCCC"> I</font>

864
00:41:40,660 --> 00:41:48,040
was still patching it yesterday<font color="#CCCCCC"> but what</font>

865
00:41:46,060 --> 00:41:50,799
I've presented<font color="#E5E5E5"> I've been doing the state</font>

866
00:41:48,040 --> 00:41:53,290
machine manually for years so I know I

867
00:41:50,800 --> 00:41:55,750
it's annoying<font color="#E5E5E5"> it's long but you</font><font color="#CCCCCC"> can do</font>

868
00:41:53,290 --> 00:41:57,100
<font color="#E5E5E5">that and it works</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> that I have the</font>

869
00:41:55,750 --> 00:41:59,170
<font color="#CCCCCC">machine cried</font><font color="#E5E5E5"> I can't believe I did that</font>

870
00:41:57,100 --> 00:42:01,299
memory<font color="#E5E5E5"> because it's much much much</font>

871
00:41:59,170 --> 00:42:04,000
easier<font color="#CCCCCC"> and I do</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> and more features</font>

872
00:42:01,300 --> 00:42:07,119
<font color="#CCCCCC">like I have methods I</font><font color="#E5E5E5"> can add a tag</font><font color="#CCCCCC"> to</font>

873
00:42:04,000 --> 00:42:08,500
say<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> implement for all</font><font color="#CCCCCC"> the states</font><font color="#E5E5E5"> you</font>

874
00:42:07,119 --> 00:42:10,450
<font color="#CCCCCC">have to implement</font><font color="#E5E5E5"> the method and for all</font>

875
00:42:08,500 --> 00:42:12,490
those<font color="#E5E5E5"> of us he is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> default value</font><font color="#CCCCCC"> you</font>

876
00:42:10,450 --> 00:42:16,830
can give there are lots of<font color="#CCCCCC"> interesting</font>

877
00:42:12,490 --> 00:42:16,830
stuff<font color="#E5E5E5"> I can want I want</font><font color="#CCCCCC"> to do with</font><font color="#E5E5E5"> that</font>

878
00:42:17,250 --> 00:42:26,970
<font color="#E5E5E5">right anyone</font><font color="#CCCCCC"> okay thank you</font>

879
00:42:30,839 --> 00:42:33,839
Sabrina's

