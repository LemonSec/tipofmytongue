1
00:00:05,250 --> 00:00:10,270
you know some people<font color="#E5E5E5"> might have noticed</font>

2
00:00:07,509 --> 00:00:12,100
it the<font color="#E5E5E5"> slides say</font><font color="#CCCCCC"> Philippe</font><font color="#E5E5E5"> is now CEO a</font>

3
00:00:10,270 --> 00:00:16,058
little bit<font color="#CCCCCC"> That's not me I'm just using</font>

4
00:00:12,100 --> 00:00:18,250
<font color="#E5E5E5">his</font><font color="#CCCCCC"> slides</font><font color="#E5E5E5"> my name is Robert I</font><font color="#CCCCCC"> tenuta I</font>

5
00:00:16,059 --> 00:00:20,920
do work<font color="#CCCCCC"> for the same company though</font><font color="#E5E5E5"> at</font>

6
00:00:18,250 --> 00:00:24,550
least<font color="#CCCCCC"> that is true so the company is</font>

7
00:00:20,920 --> 00:00:25,660
little bit and we<font color="#E5E5E5"> are working on a</font>

8
00:00:24,550 --> 00:00:29,289
product<font color="#E5E5E5"> that some of you might</font><font color="#CCCCCC"> have</font>

9
00:00:25,660 --> 00:00:30,250
<font color="#E5E5E5">heard about maybe some have used</font><font color="#CCCCCC"> the</font>

10
00:00:29,289 --> 00:00:33,579
<font color="#CCCCCC">steer BD</font>

11
00:00:30,250 --> 00:00:36,670
it's a<font color="#CCCCCC"> Linux kernel</font><font color="#E5E5E5"> module</font><font color="#CCCCCC"> and that has</font>

12
00:00:33,579 --> 00:00:40,870
had a focus<font color="#CCCCCC"> on</font><font color="#E5E5E5"> block based replication</font>

13
00:00:36,670 --> 00:00:43,179
of storage and<font color="#E5E5E5"> today's presentation is</font>

14
00:00:40,870 --> 00:00:45,159
about the management<font color="#E5E5E5"> layer that we're</font>

15
00:00:43,179 --> 00:00:49,510
<font color="#CCCCCC">developing right now</font><font color="#E5E5E5"> which is called Lin</font>

16
00:00:45,159 --> 00:00:52,539
store<font color="#E5E5E5"> that is a cluster management</font>

17
00:00:49,510 --> 00:00:54,968
system<font color="#CCCCCC"> that allows you to manage the</font>

18
00:00:52,539 --> 00:00:57,129
<font color="#E5E5E5">video resources and in the future also</font>

19
00:00:54,969 --> 00:01:01,899
reasons that are not<font color="#E5E5E5"> based on</font><font color="#CCCCCC"> the body</font>

20
00:00:57,129 --> 00:01:04,929
so all<font color="#CCCCCC"> kinds of storage technologies few</font>

21
00:01:01,899 --> 00:01:07,510
words about limit limit has been<font color="#CCCCCC"> around</font>

22
00:01:04,930 --> 00:01:12,090
for about 19 years<font color="#E5E5E5"> now starting about</font>

23
00:01:07,510 --> 00:01:16,149
2000 with<font color="#CCCCCC"> the OBD</font><font color="#E5E5E5"> as a master thesis</font>

24
00:01:12,090 --> 00:01:18,939
project and<font color="#CCCCCC"> has since</font><font color="#E5E5E5"> made its way</font>

25
00:01:16,149 --> 00:01:22,030
mostly into high availability<font color="#E5E5E5"> setups</font>

26
00:01:18,939 --> 00:01:24,148
<font color="#E5E5E5">that's how it all started for</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> so most</font>

27
00:01:22,030 --> 00:01:26,920
of the clusters<font color="#CCCCCC"> that I was</font><font color="#E5E5E5"> talking about</font>

28
00:01:24,149 --> 00:01:29,920
<font color="#E5E5E5">where two node clusters traditionally</font>

29
00:01:26,920 --> 00:01:33,130
where you had one system where to write

30
00:01:29,920 --> 00:01:34,689
<font color="#E5E5E5">some data in a</font><font color="#CCCCCC"> high-volatility setup and</font>

31
00:01:33,130 --> 00:01:36,609
you would mirror the<font color="#CCCCCC"> same data to</font>

32
00:01:34,689 --> 00:01:39,548
another<font color="#E5E5E5"> system</font><font color="#CCCCCC"> that survey origin</font>

33
00:01:36,609 --> 00:01:42,038
<font color="#CCCCCC">originally come from and everything is</font>

34
00:01:39,549 --> 00:01:44,619
<font color="#CCCCCC">moving to cloud systems virtualization</font>

35
00:01:42,039 --> 00:01:47,049
systems systems like OpenStack

36
00:01:44,619 --> 00:01:51,100
kubernetes<font color="#E5E5E5"> open nebula I have heard</font>

37
00:01:47,049 --> 00:01:54,939
about those products maybe some of you

38
00:01:51,100 --> 00:01:58,749
use smaller<font color="#E5E5E5"> setups proxmox as well and</font>

39
00:01:54,939 --> 00:02:02,139
all those projects and<font color="#E5E5E5"> products are</font>

40
00:01:58,749 --> 00:02:04,719
based on multiple node architectures

41
00:02:02,140 --> 00:02:06,460
those are all clusters so<font color="#E5E5E5"> that's we're</font>

42
00:02:04,719 --> 00:02:08,259
moving to and

43
00:02:06,460 --> 00:02:14,680
that's a change<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I would like to</font>

44
00:02:08,259 --> 00:02:16,899
<font color="#CCCCCC">present today</font><font color="#E5E5E5"> Linux has a couple of</font>

45
00:02:14,680 --> 00:02:20,200
storage technologies already<font color="#CCCCCC"> built</font><font color="#E5E5E5"> in</font>

46
00:02:16,900 --> 00:02:23,680
and that's what we use for DVD<font color="#E5E5E5"> we've</font>

47
00:02:20,200 --> 00:02:26,769
always used those storage gems and

48
00:02:23,680 --> 00:02:28,930
<font color="#E5E5E5">search technologies as the</font><font color="#CCCCCC"> backend for</font>

49
00:02:26,770 --> 00:02:31,390
diabetes so that's what we replicate you

50
00:02:28,930 --> 00:02:34,510
know any kind<font color="#E5E5E5"> of block device</font><font color="#CCCCCC"> lock</font>

51
00:02:31,390 --> 00:02:37,809
device being for those who are not too

52
00:02:34,510 --> 00:02:41,519
much<font color="#E5E5E5"> familiar with UNIX terminology</font>

53
00:02:37,810 --> 00:02:44,500
block devices<font color="#CCCCCC"> anything on the linux that</font>

54
00:02:41,520 --> 00:02:48,280
<font color="#CCCCCC">provide storage basically every storage</font>

55
00:02:44,500 --> 00:02:51,310
device like SSDs USB sticks hard disks

56
00:02:48,280 --> 00:02:53,380
even old floppies<font color="#E5E5E5"> all those storage</font>

57
00:02:51,310 --> 00:02:57,580
devices show up<font color="#CCCCCC"> it's so-called</font><font color="#E5E5E5"> block</font>

58
00:02:53,380 --> 00:02:59,410
devices and<font color="#CCCCCC"> Tirupati is</font><font color="#E5E5E5"> able to</font>

59
00:02:57,580 --> 00:03:03,790
replicate anything<font color="#E5E5E5"> the DISA writable</font>

60
00:02:59,410 --> 00:03:06,970
block device<font color="#CCCCCC"> some of those</font><font color="#E5E5E5"> technologies</font>

61
00:03:03,790 --> 00:03:09,459
<font color="#CCCCCC">I'll just go over</font><font color="#E5E5E5"> them quickly so</font><font color="#CCCCCC"> that</font>

62
00:03:06,970 --> 00:03:11,859
<font color="#E5E5E5">you know what's already available what</font>

63
00:03:09,460 --> 00:03:15,459
we basically<font color="#E5E5E5"> use as the basis for</font>

64
00:03:11,860 --> 00:03:19,450
<font color="#CCCCCC">Linstrom</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> DVD so we use those</font>

65
00:03:15,459 --> 00:03:23,230
<font color="#E5E5E5">existing technologies to create</font><font color="#CCCCCC"> back-end</font>

66
00:03:19,450 --> 00:03:28,929
storage for our<font color="#E5E5E5"> application product one</font>

67
00:03:23,230 --> 00:03:31,720
<font color="#E5E5E5">of the more probably widespread ones is</font>

68
00:03:28,930 --> 00:03:34,000
<font color="#CCCCCC">LVN logical volume manager</font><font color="#E5E5E5"> which</font>

69
00:03:31,720 --> 00:03:37,780
originally was implemented in AIX<font color="#E5E5E5"> and</font>

70
00:03:34,000 --> 00:03:41,650
<font color="#CCCCCC">say</font><font color="#E5E5E5"> UNIX clone just just like Linux from</font>

71
00:03:37,780 --> 00:03:45,040
IBM and<font color="#E5E5E5"> the implementation</font><font color="#CCCCCC"> on Linux is</font>

72
00:03:41,650 --> 00:03:47,230
not a<font color="#CCCCCC"> part it's a reimplementation</font><font color="#E5E5E5"> so</font>

73
00:03:45,040 --> 00:03:49,390
it's written<font color="#E5E5E5"> from</font><font color="#CCCCCC"> scratch but the idea</font>

74
00:03:47,230 --> 00:03:52,000
<font color="#E5E5E5">is basically the same you have</font><font color="#CCCCCC"> a couple</font>

75
00:03:49,390 --> 00:03:55,208
<font color="#E5E5E5">of physical volumes again block devices</font>

76
00:03:52,000 --> 00:03:58,540
<font color="#E5E5E5">those might be hard disks might be SSDs</font>

77
00:03:55,209 --> 00:04:00,850
<font color="#E5E5E5">you can also use other storage</font>

78
00:03:58,540 --> 00:04:03,370
technologies that<font color="#E5E5E5"> Linux provides like a</font>

79
00:04:00,850 --> 00:04:07,209
raid system and plot the entire raid

80
00:04:03,370 --> 00:04:08,980
into<font color="#CCCCCC"> LVM</font><font color="#E5E5E5"> as a physical</font><font color="#CCCCCC"> volume and you</font>

81
00:04:07,209 --> 00:04:12,700
<font color="#CCCCCC">can combine</font><font color="#E5E5E5"> multiple physical volumes</font>

82
00:04:08,980 --> 00:04:14,230
into<font color="#CCCCCC"> a volume</font><font color="#E5E5E5"> group and on top</font><font color="#CCCCCC"> of that</font>

83
00:04:12,700 --> 00:04:16,180
volume<font color="#E5E5E5"> group you can create logical</font>

84
00:04:14,230 --> 00:04:17,339
<font color="#E5E5E5">volumes that what that's what you</font>

85
00:04:16,180 --> 00:04:19,889
actually<font color="#E5E5E5"> you</font>

86
00:04:17,339 --> 00:04:22,888
<font color="#E5E5E5">to put your dad on and that's what we</font>

87
00:04:19,889 --> 00:04:24,930
replicate<font color="#E5E5E5"> there's all the possibility to</font>

88
00:04:22,889 --> 00:04:27,780
<font color="#CCCCCC">take snapshots</font><font color="#E5E5E5"> of those logical volumes</font>

89
00:04:24,930 --> 00:04:29,580
<font color="#E5E5E5">the advantage here is</font><font color="#CCCCCC"> that the logical</font>

90
00:04:27,780 --> 00:04:31,940
volume can have<font color="#E5E5E5"> a different size than</font>

91
00:04:29,580 --> 00:04:35,909
<font color="#CCCCCC">the physical</font><font color="#E5E5E5"> volumes that is backed by</font>

92
00:04:31,940 --> 00:04:37,380
so it's very<font color="#CCCCCC"> flexible you</font><font color="#E5E5E5"> can have like</font>

93
00:04:35,910 --> 00:04:40,020
three or<font color="#CCCCCC"> four physical volumes you can</font>

94
00:04:37,380 --> 00:04:41,669
create<font color="#E5E5E5"> 20 logical volumes you can only</font>

95
00:04:40,020 --> 00:04:43,830
do one that<font color="#E5E5E5"> is</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> large at three</font>

96
00:04:41,669 --> 00:04:46,409
physical<font color="#E5E5E5"> volumes</font><font color="#CCCCCC"> it will just spray it</font>

97
00:04:43,830 --> 00:04:50,460
<font color="#E5E5E5">out to all those volumes most people are</font>

98
00:04:46,410 --> 00:04:52,410
probably<font color="#CCCCCC"> familiar with</font><font color="#E5E5E5"> that and</font><font color="#CCCCCC"> I'll</font>

99
00:04:50,460 --> 00:04:54,409
<font color="#E5E5E5">always skip a few details because</font>

100
00:04:52,410 --> 00:04:57,270
virtual presentation<font color="#CCCCCC"> was a bit longer</font>

101
00:04:54,410 --> 00:05:00,240
<font color="#E5E5E5">those slides will be available for</font>

102
00:04:57,270 --> 00:05:04,710
<font color="#CCCCCC">download so you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> look up all the</font>

103
00:05:00,240 --> 00:05:07,639
<font color="#CCCCCC">details</font><font color="#E5E5E5"> that I will skip</font><font color="#CCCCCC"> what's new and</font>

104
00:05:04,710 --> 00:05:12,630
what's<font color="#E5E5E5"> being</font><font color="#CCCCCC"> used more</font><font color="#E5E5E5"> and more is the</font>

105
00:05:07,639 --> 00:05:15,389
thin provisioning feature you can<font color="#CCCCCC"> create</font>

106
00:05:12,630 --> 00:05:18,120
<font color="#CCCCCC">a logical</font><font color="#E5E5E5"> volume that this used as a</font>

107
00:05:15,389 --> 00:05:22,020
thin pool for further logical volume so

108
00:05:18,120 --> 00:05:23,639
he can have mixed set up you can create

109
00:05:22,020 --> 00:05:27,090
some<font color="#CCCCCC"> logic</font><font color="#E5E5E5"> volumes that are backed</font><font color="#CCCCCC"> by</font>

110
00:05:23,639 --> 00:05:29,580
actual storage<font color="#E5E5E5"> and you can create a thin</font>

111
00:05:27,090 --> 00:05:32,130
pool and put<font color="#E5E5E5"> logic values on top of the</font>

112
00:05:29,580 --> 00:05:34,620
thin pool and you don't have to have all

113
00:05:32,130 --> 00:05:36,409
the<font color="#E5E5E5"> physical storage</font><font color="#CCCCCC"> that you pretend</font>

114
00:05:34,620 --> 00:05:39,000
you have<font color="#CCCCCC"> and probably</font><font color="#E5E5E5"> know that</font><font color="#CCCCCC"> you can</font>

115
00:05:36,410 --> 00:05:41,310
like<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example if you have only</font>

116
00:05:39,000 --> 00:05:43,620
<font color="#E5E5E5">physical storage of</font><font color="#CCCCCC"> 400 gigabytes</font><font color="#E5E5E5"> you</font>

117
00:05:41,310 --> 00:05:45,960
can still create a<font color="#E5E5E5"> volume and pretend it</font>

118
00:05:43,620 --> 00:05:48,360
has one terabyte of storage as long as

119
00:05:45,960 --> 00:05:50,700
it don't write to it as long<font color="#CCCCCC"> as it</font><font color="#E5E5E5"> don't</font>

120
00:05:48,360 --> 00:05:53,970
<font color="#CCCCCC">actually fill it up it will appear as if</font>

121
00:05:50,700 --> 00:05:56,940
<font color="#CCCCCC">it if it was a</font><font color="#E5E5E5"> one terabyte volume and</font>

122
00:05:53,970 --> 00:05:59,639
that's what many people do nowadays<font color="#E5E5E5"> they</font>

123
00:05:56,940 --> 00:06:02,160
deploy<font color="#E5E5E5"> it storage</font><font color="#CCCCCC"> to for</font><font color="#E5E5E5"> example for the</font>

124
00:05:59,639 --> 00:06:05,750
virtual machines<font color="#E5E5E5"> or containers</font><font color="#CCCCCC"> it looks</font>

125
00:06:02,160 --> 00:06:05,750
a bit larger<font color="#E5E5E5"> than it actually is</font>

126
00:06:07,460 --> 00:06:12,690
then the raid feature<font color="#E5E5E5"> you've probably</font>

127
00:06:09,900 --> 00:06:16,138
seen<font color="#CCCCCC"> that as well MD that's also in the</font>

128
00:06:12,690 --> 00:06:21,300
<font color="#E5E5E5">Linux kernel software raid</font><font color="#CCCCCC"> raid level</font><font color="#E5E5E5"> 0</font>

129
00:06:16,139 --> 00:06:23,970
raid level 1 4 5<font color="#E5E5E5"> 6 10 you can use that</font>

130
00:06:21,300 --> 00:06:26,810
on<font color="#E5E5E5"> top of</font><font color="#CCCCCC"> LVM you can use it below the</font>

131
00:06:23,970 --> 00:06:28,620
volume<font color="#E5E5E5"> group</font><font color="#CCCCCC"> all those</font><font color="#E5E5E5"> technologies are</font>

132
00:06:26,810 --> 00:06:30,570
able<font color="#CCCCCC"> to be combined</font>

133
00:06:28,620 --> 00:06:34,949
with each other<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it's all just</font>

134
00:06:30,570 --> 00:06:38,490
block<font color="#CCCCCC"> devices then there's also a</font>

135
00:06:34,949 --> 00:06:42,000
caching<font color="#CCCCCC"> layer that's</font><font color="#E5E5E5"> a bit of a</font><font color="#CCCCCC"> newer</font>

136
00:06:38,490 --> 00:06:43,830
feature<font color="#E5E5E5"> gem cache cache and that's</font>

137
00:06:42,000 --> 00:06:46,729
another layer of block devices

138
00:06:43,830 --> 00:06:51,120
VirtualBox devices more<font color="#E5E5E5"> or less a filter</font>

139
00:06:46,729 --> 00:06:53,760
where you get SSD caching<font color="#CCCCCC"> for your hard</font>

140
00:06:51,120 --> 00:06:56,430
disk drive so that's a tiered setup you

141
00:06:53,760 --> 00:07:00,840
have slower hard drives where your data

142
00:06:56,430 --> 00:07:03,600
<font color="#E5E5E5">all your data is on and the SSD cache</font>

143
00:07:00,840 --> 00:07:05,280
will cache<font color="#CCCCCC"> some of the data</font><font color="#E5E5E5"> that's used</font>

144
00:07:03,600 --> 00:07:07,910
frequently so that<font color="#CCCCCC"> you have faster</font>

145
00:07:05,280 --> 00:07:07,909
access to<font color="#E5E5E5"> it</font>

146
00:07:09,270 --> 00:07:14,609
into applications another new layer<font color="#E5E5E5"> that</font>

147
00:07:12,180 --> 00:07:18,900
has<font color="#E5E5E5"> been bought by Red Hat it was</font>

148
00:07:14,610 --> 00:07:20,940
originally a commercial<font color="#CCCCCC"> project and has</font>

149
00:07:18,900 --> 00:07:25,320
since been open sourced and<font color="#E5E5E5"> put on the</font>

150
00:07:20,940 --> 00:07:27,210
GPL by<font color="#CCCCCC"> Reddit</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's another layer</font>

151
00:07:25,320 --> 00:07:28,830
that<font color="#CCCCCC"> you can you</font><font color="#E5E5E5"> can all combine all</font>

152
00:07:27,210 --> 00:07:31,080
those layers to build your storage

153
00:07:28,830 --> 00:07:38,419
architecture and that's what we make use

154
00:07:31,080 --> 00:07:38,419
of in<font color="#E5E5E5"> the in store</font><font color="#CCCCCC"> now we're</font><font color="#E5E5E5"> finally</font>

155
00:07:39,650 --> 00:07:46,620
approaching the topic<font color="#CCCCCC"> of replication</font><font color="#E5E5E5"> and</font>

156
00:07:43,770 --> 00:07:50,159
<font color="#CCCCCC">purity and this is about eye scarcity</font>

157
00:07:46,620 --> 00:07:52,410
<font color="#E5E5E5">but is somewhat similar</font><font color="#CCCCCC"> to that you know</font>

158
00:07:50,160 --> 00:07:56,460
with ice<font color="#CCCCCC"> Kathy you have initiator and a</font>

159
00:07:52,410 --> 00:07:57,780
target<font color="#E5E5E5"> and there's even a list of</font>

160
00:07:56,460 --> 00:08:00,419
different<font color="#E5E5E5"> technologies and</font>

161
00:07:57,780 --> 00:08:02,369
implementations on<font color="#E5E5E5"> Linux the current one</font>

162
00:08:00,419 --> 00:08:05,430
being<font color="#E5E5E5"> Li oh that's what everyone uses</font>

163
00:08:02,370 --> 00:08:08,669
right now and that is<font color="#E5E5E5"> somewhat similar</font>

164
00:08:05,430 --> 00:08:11,280
<font color="#E5E5E5">to what</font><font color="#CCCCCC"> Kiev iquitos there's one slide</font>

165
00:08:08,669 --> 00:08:14,039
in<font color="#CCCCCC"> between for CFS on Linux mentioned</font>

166
00:08:11,280 --> 00:08:15,900
that<font color="#E5E5E5"> were quick as well and I heard</font>

167
00:08:14,039 --> 00:08:18,990
there has been a<font color="#CCCCCC"> problem</font>

168
00:08:15,900 --> 00:08:21,780
<font color="#CCCCCC">Linux 5 I think license wise because</font><font color="#E5E5E5"> one</font>

169
00:08:18,990 --> 00:08:24,570
<font color="#CCCCCC">of the functions that CFS</font><font color="#E5E5E5"> uses in kernel</font>

170
00:08:21,780 --> 00:08:26,698
has changed to<font color="#CCCCCC"> only</font><font color="#E5E5E5"> being available to</font>

171
00:08:24,570 --> 00:08:29,940
GPL code that's already<font color="#E5E5E5"> being solved by</font>

172
00:08:26,699 --> 00:08:33,330
<font color="#CCCCCC">DCFS developers has been available in</font>

173
00:08:29,940 --> 00:08:36,529
the<font color="#E5E5E5"> Ubuntu distribution so open to comes</font>

174
00:08:33,330 --> 00:08:40,120
with CFS<font color="#E5E5E5"> some of</font><font color="#CCCCCC"> open</font><font color="#E5E5E5"> to customers</font>

175
00:08:36,529 --> 00:08:43,849
that works pretty similar to

176
00:08:40,120 --> 00:08:48,589
<font color="#CCCCCC">LVM if you look at it from a superfluous</font>

177
00:08:43,849 --> 00:08:50,300
<font color="#CCCCCC">point of view has similar features</font><font color="#E5E5E5"> you</font>

178
00:08:48,589 --> 00:08:53,809
can actually do a lot<font color="#CCCCCC"> more things</font><font color="#E5E5E5"> than</font>

179
00:08:50,300 --> 00:08:55,430
<font color="#CCCCCC">LVN but the basic idea</font><font color="#E5E5E5"> of having largely</font>

180
00:08:53,809 --> 00:09:01,309
volume management is pretty<font color="#E5E5E5"> much the</font>

181
00:08:55,430 --> 00:09:06,258
same and now<font color="#CCCCCC"> tirupati we're going back</font>

182
00:09:01,309 --> 00:09:10,249
<font color="#E5E5E5">to I</font><font color="#CCCCCC"> Scotty DoD you can think of</font><font color="#E5E5E5"> TR BTS</font>

183
00:09:06,259 --> 00:09:12,050
<font color="#E5E5E5">a raid</font><font color="#CCCCCC"> one system between two nodes as</font>

184
00:09:10,249 --> 00:09:14,870
if you had a nice<font color="#CCCCCC"> cast initiated and</font>

185
00:09:12,050 --> 00:09:16,819
<font color="#CCCCCC">asked as a</font><font color="#E5E5E5"> target and your local disks</font>

186
00:09:14,870 --> 00:09:19,550
are building a<font color="#CCCCCC"> RAID one with your</font>

187
00:09:16,819 --> 00:09:21,680
initiator side and then your target

188
00:09:19,550 --> 00:09:23,930
<font color="#E5E5E5">basically does the same you're mirroring</font>

189
00:09:21,680 --> 00:09:27,859
<font color="#E5E5E5">from one node to the other node it's</font>

190
00:09:23,930 --> 00:09:30,529
like<font color="#E5E5E5"> raid</font><font color="#CCCCCC"> 1 to a network</font><font color="#E5E5E5"> and as I</font><font color="#CCCCCC"> said</font>

191
00:09:27,860 --> 00:09:33,649
it used<font color="#E5E5E5"> to be between exactly two nodes</font>

192
00:09:30,529 --> 00:09:35,889
<font color="#E5E5E5">and that has</font><font color="#CCCCCC"> changed</font><font color="#E5E5E5"> since or with</font><font color="#CCCCCC"> tier</font>

193
00:09:33,649 --> 00:09:35,889
<font color="#E5E5E5">bt9</font>

194
00:09:36,009 --> 00:09:41,389
instead of<font color="#CCCCCC"> initiate</font><font color="#E5E5E5"> and target we call</font>

195
00:09:38,420 --> 00:09:44,209
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> primary and the secondary</font><font color="#CCCCCC"> so we</font>

196
00:09:41,389 --> 00:09:46,029
have at<font color="#E5E5E5"> least one secondary note that</font>

197
00:09:44,209 --> 00:09:47,660
replicates everything that the primary

198
00:09:46,029 --> 00:09:50,180
<font color="#CCCCCC">right</font>

199
00:09:47,660 --> 00:09:51,980
and the<font color="#E5E5E5"> interesting thing about it is</font>

200
00:09:50,180 --> 00:09:54,199
that<font color="#E5E5E5"> it is synchronous replication so</font>

201
00:09:51,980 --> 00:09:56,269
everything<font color="#CCCCCC"> that gets written on the</font>

202
00:09:54,199 --> 00:09:59,269
primary<font color="#E5E5E5"> everything that there you write</font>

203
00:09:56,269 --> 00:10:01,069
to the disk or to the SSD<font color="#CCCCCC"> or whatever</font>

204
00:09:59,269 --> 00:10:04,970
<font color="#E5E5E5">kind of storage technology you have</font>

205
00:10:01,069 --> 00:10:08,180
below is also<font color="#E5E5E5"> written on the secondary</font>

206
00:10:04,970 --> 00:10:11,569
node and by the time that<font color="#CCCCCC"> DVD returns</font>

207
00:10:08,180 --> 00:10:13,939
control<font color="#E5E5E5"> to your application so in more</font>

208
00:10:11,569 --> 00:10:16,519
technical terms<font color="#E5E5E5"> as soon as the SIS call</font>

209
00:10:13,939 --> 00:10:18,709
has ended<font color="#CCCCCC"> the right sister</font><font color="#E5E5E5"> call returns</font>

210
00:10:16,519 --> 00:10:20,240
to the application<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> to guarantee</font>

211
00:10:18,709 --> 00:10:22,459
that<font color="#E5E5E5"> it</font><font color="#CCCCCC"> has been written</font><font color="#E5E5E5"> on both of</font>

212
00:10:20,240 --> 00:10:26,149
those two nodes<font color="#CCCCCC"> that's the idea</font><font color="#E5E5E5"> behind</font>

213
00:10:22,459 --> 00:10:29,500
it<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the default mode you can also</font>

214
00:10:26,149 --> 00:10:33,199
<font color="#E5E5E5">use it in an asynchronous mode</font><font color="#CCCCCC"> there</font>

215
00:10:29,500 --> 00:10:35,720
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> avoid the network latency and make</font>

216
00:10:33,199 --> 00:10:40,189
it less of a guarantee as to<font color="#E5E5E5"> what's been</font>

217
00:10:35,720 --> 00:10:41,600
written and<font color="#E5E5E5"> what hasn't</font><font color="#CCCCCC"> been written so</font>

218
00:10:40,189 --> 00:10:43,730
the basic idea<font color="#E5E5E5"> is</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> the primary</font>

219
00:10:41,600 --> 00:10:46,069
node that has<font color="#E5E5E5"> local storage you have the</font>

220
00:10:43,730 --> 00:10:47,870
secondary node that has a similar<font color="#CCCCCC"> kind</font>

221
00:10:46,069 --> 00:10:50,050
of local storage<font color="#E5E5E5"> it doesn't even have to</font>

222
00:10:47,870 --> 00:10:53,290
<font color="#CCCCCC">be the same</font><font color="#E5E5E5"> kind of</font>

223
00:10:50,050 --> 00:10:54,729
you could have an LVN<font color="#CCCCCC"> back-end on</font><font color="#E5E5E5"> the</font>

224
00:10:53,290 --> 00:10:57,579
primary side and they could write

225
00:10:54,730 --> 00:11:01,600
directly<font color="#CCCCCC"> to an SSD</font><font color="#E5E5E5"> hard disk partition</font>

226
00:10:57,579 --> 00:11:03,819
on<font color="#E5E5E5"> the secondary side</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> want so it</font>

227
00:11:01,600 --> 00:11:05,829
doesn't<font color="#E5E5E5"> even have to have exactly the</font>

228
00:11:03,819 --> 00:11:10,300
<font color="#CCCCCC">same configuration on all nodes that's</font>

229
00:11:05,829 --> 00:11:13,149
<font color="#E5E5E5">also what makes it interesting</font><font color="#CCCCCC"> and you</font>

230
00:11:10,300 --> 00:11:15,430
can also create consistency groups<font color="#E5E5E5"> so</font>

231
00:11:13,149 --> 00:11:18,279
we're not<font color="#CCCCCC"> only</font><font color="#E5E5E5"> dealing with volumes and</font>

232
00:11:15,430 --> 00:11:20,829
replicating each volume completely

233
00:11:18,279 --> 00:11:23,170
separated<font color="#CCCCCC"> from all other volumes</font><font color="#E5E5E5"> so but</font>

234
00:11:20,829 --> 00:11:25,449
there is also the possibility to<font color="#CCCCCC"> create</font>

235
00:11:23,170 --> 00:11:28,240
a resource that<font color="#E5E5E5"> contains</font><font color="#CCCCCC"> multiple</font>

236
00:11:25,449 --> 00:11:31,120
volumes<font color="#CCCCCC"> and all those</font><font color="#E5E5E5"> volumes are</font>

237
00:11:28,240 --> 00:11:32,860
replicated across only<font color="#E5E5E5"> one link and a</font>

238
00:11:31,120 --> 00:11:36,249
link<font color="#CCCCCC"> in that case is just tcp/ip</font>

239
00:11:32,860 --> 00:11:40,089
connection the idea behind that is<font color="#CCCCCC"> that</font>

240
00:11:36,249 --> 00:11:42,430
some<font color="#CCCCCC"> datasets like for example something</font>

241
00:11:40,089 --> 00:11:45,220
<font color="#CCCCCC">that a database writes</font><font color="#E5E5E5"> the actual</font>

242
00:11:42,430 --> 00:11:47,859
<font color="#E5E5E5">database and the database locks those</font>

243
00:11:45,220 --> 00:11:50,379
need to<font color="#CCCCCC"> be consistent but</font><font color="#E5E5E5"> you might want</font>

244
00:11:47,860 --> 00:11:53,439
to have those on different volumes<font color="#E5E5E5"> so</font>

245
00:11:50,379 --> 00:11:55,240
the idea with consistency groups is<font color="#E5E5E5"> that</font>

246
00:11:53,439 --> 00:11:57,610
whenever replication is interrupted

247
00:11:55,240 --> 00:11:59,800
<font color="#CCCCCC">because for example</font><font color="#E5E5E5"> one of the nodes is</font>

248
00:11:57,610 --> 00:12:03,189
not available anymore<font color="#E5E5E5"> might have a power</font>

249
00:11:59,800 --> 00:12:05,170
outage for<font color="#E5E5E5"> example the idea behind the</font>

250
00:12:03,189 --> 00:12:07,209
consistency group is that both volumes

251
00:12:05,170 --> 00:12:10,870
stop at exactly the same point<font color="#E5E5E5"> in</font><font color="#CCCCCC"> time</font>

252
00:12:07,209 --> 00:12:13,750
so they<font color="#E5E5E5"> are consistent the the database</font>

253
00:12:10,870 --> 00:12:16,300
itself<font color="#E5E5E5"> has the same status the database</font>

254
00:12:13,750 --> 00:12:17,230
<font color="#E5E5E5">locks there is no time difference in</font>

255
00:12:16,300 --> 00:12:21,870
those two volumes

256
00:12:17,230 --> 00:12:21,870
<font color="#E5E5E5">that's the</font><font color="#CCCCCC"> IDB ante consistency group</font>

257
00:12:23,040 --> 00:12:30,610
and then with<font color="#E5E5E5"> db9</font><font color="#CCCCCC"> debrie has also</font>

258
00:12:28,000 --> 00:12:34,690
learned<font color="#E5E5E5"> to replicate to more than one</font>

259
00:12:30,610 --> 00:12:36,600
<font color="#CCCCCC">pier and now it's up to</font><font color="#E5E5E5"> 32 actually and</font>

260
00:12:34,690 --> 00:12:39,040
<font color="#E5E5E5">that's probably</font><font color="#CCCCCC"> a somewhat theoretical</font>

261
00:12:36,600 --> 00:12:40,480
value because no one is going to

262
00:12:39,040 --> 00:12:44,620
<font color="#E5E5E5">replicate the same data</font>

263
00:12:40,480 --> 00:12:52,600
31 times<font color="#E5E5E5"> it's a bit of a storage and</font>

264
00:12:44,620 --> 00:12:56,890
<font color="#CCCCCC">weight that's very so normally what we</font>

265
00:12:52,600 --> 00:13:00,670
see at<font color="#CCCCCC"> our customer sites is three times</font>

266
00:12:56,890 --> 00:13:03,310
replication maybe four times and<font color="#CCCCCC"> very</font>

267
00:13:00,670 --> 00:13:05,829
seldomly maybe six times<font color="#CCCCCC"> if you have</font>

268
00:13:03,310 --> 00:13:10,239
multiple data centers the typical case

269
00:13:05,830 --> 00:13:14,560
is still<font color="#E5E5E5"> two or three replicas</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we</font>

270
00:13:10,240 --> 00:13:18,580
have<font color="#E5E5E5"> a</font><font color="#CCCCCC"> primary and one to secondary</font>

271
00:13:14,560 --> 00:13:20,589
something like that<font color="#E5E5E5"> per resource so you</font>

272
00:13:18,580 --> 00:13:22,360
can have multiple<font color="#E5E5E5"> resources and each of</font>

273
00:13:20,590 --> 00:13:24,280
those resources<font color="#E5E5E5"> can have multiple</font>

274
00:13:22,360 --> 00:13:26,550
volumes<font color="#CCCCCC"> that's the idea behind here</font>

275
00:13:24,280 --> 00:13:30,100
<font color="#E5E5E5">buddy</font>

276
00:13:26,550 --> 00:13:32,469
and another feature<font color="#CCCCCC"> that</font><font color="#E5E5E5"> only makes</font>

277
00:13:30,100 --> 00:13:34,990
sense<font color="#E5E5E5"> with</font><font color="#CCCCCC"> TF d9</font><font color="#E5E5E5"> it was actually</font>

278
00:13:32,470 --> 00:13:36,760
possible in<font color="#CCCCCC"> d FD</font><font color="#E5E5E5"> 8 as well</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it didn't</font>

279
00:13:34,990 --> 00:13:41,170
<font color="#E5E5E5">make a lot of sense with only two peers</font>

280
00:13:36,760 --> 00:13:44,140
is<font color="#E5E5E5"> these class notes or we call them</font>

281
00:13:41,170 --> 00:13:47,260
<font color="#CCCCCC">give denying clients you can</font><font color="#E5E5E5"> use that</font>

282
00:13:44,140 --> 00:13:50,380
<font color="#E5E5E5">almost as a replacement for ice</font><font color="#CCCCCC"> chasm</font>

283
00:13:47,260 --> 00:13:52,140
so the idea<font color="#E5E5E5"> is that you can read</font><font color="#CCCCCC"> and</font>

284
00:13:50,380 --> 00:13:55,600
<font color="#E5E5E5">write from storage that</font><font color="#CCCCCC"> they do not have</font>

285
00:13:52,140 --> 00:13:58,590
<font color="#CCCCCC">locally you only have the actual storage</font>

286
00:13:55,600 --> 00:14:02,170
<font color="#E5E5E5">the physical storage on the remote node</font>

287
00:13:58,590 --> 00:14:03,700
<font color="#CCCCCC">so</font><font color="#E5E5E5"> it reads and writes</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> second or</font>

288
00:14:02,170 --> 00:14:06,520
reads from the<font color="#E5E5E5"> second writes to the</font>

289
00:14:03,700 --> 00:14:10,840
secondary or<font color="#CCCCCC"> actually all secondaries</font>

290
00:14:06,520 --> 00:14:13,569
<font color="#E5E5E5">and you don't need an additional layer</font>

291
00:14:10,840 --> 00:14:15,370
like ice can see<font color="#E5E5E5"> to get your data from a</font>

292
00:14:13,570 --> 00:14:17,770
storage<font color="#E5E5E5"> node to another node that</font>

293
00:14:15,370 --> 00:14:20,140
doesn't have<font color="#E5E5E5"> storage so we can basically</font>

294
00:14:17,770 --> 00:14:24,189
replace the ice castle layer by just

295
00:14:20,140 --> 00:14:27,330
using a db9 client and the same thing

296
00:14:24,190 --> 00:14:30,720
also happens if the disk fails suddenly

297
00:14:27,330 --> 00:14:33,270
if you have<font color="#E5E5E5"> a db9</font><font color="#CCCCCC"> node that</font><font color="#E5E5E5"> used to have</font>

298
00:14:30,720 --> 00:14:35,730
local<font color="#E5E5E5"> storage and disk fails of the</font>

299
00:14:33,270 --> 00:14:38,610
entire storage<font color="#E5E5E5"> subsystem fails it can</font>

300
00:14:35,730 --> 00:14:41,640
just attach transparently and all your

301
00:14:38,610 --> 00:14:43,860
application is still keep running as if

302
00:14:41,640 --> 00:14:46,650
they're<font color="#E5E5E5"> very local storage</font><font color="#CCCCCC"> it just</font>

303
00:14:43,860 --> 00:14:52,950
writes to the secondaries<font color="#CCCCCC"> and reads from</font>

304
00:14:46,650 --> 00:14:55,290
<font color="#CCCCCC">the secondaries obviously and</font><font color="#E5E5E5"> it's most</font>

305
00:14:52,950 --> 00:14:57,360
of that you have some<font color="#E5E5E5"> additional</font>

306
00:14:55,290 --> 00:14:59,670
features<font color="#CCCCCC"> built-in for clustering</font><font color="#E5E5E5"> because</font>

307
00:14:57,360 --> 00:15:03,270
most people<font color="#CCCCCC"> obviously use it</font><font color="#E5E5E5"> in high</font>

308
00:14:59,670 --> 00:15:05,400
availability<font color="#E5E5E5"> setups or as today in cloud</font>

309
00:15:03,270 --> 00:15:09,600
setups<font color="#E5E5E5"> so there are mechanisms for</font>

310
00:15:05,400 --> 00:15:12,090
fencing for<font color="#E5E5E5"> quorum groups those are all</font>

311
00:15:09,600 --> 00:15:14,310
to guard<font color="#E5E5E5"> against certain cases where one</font>

312
00:15:12,090 --> 00:15:18,150
of the<font color="#CCCCCC"> node nodes fails or the network</font>

313
00:15:14,310 --> 00:15:20,130
<font color="#E5E5E5">fails split-brain detection you know if</font>

314
00:15:18,150 --> 00:15:21,930
you have two different<font color="#CCCCCC"> Forks of</font><font color="#E5E5E5"> the data</font>

315
00:15:20,130 --> 00:15:24,240
<font color="#CCCCCC">because he activated multiple copies</font>

316
00:15:21,930 --> 00:15:26,579
without<font color="#E5E5E5"> them being able to see each</font>

317
00:15:24,240 --> 00:15:29,460
other<font color="#E5E5E5"> we can recover from</font><font color="#CCCCCC"> that even</font>

318
00:15:26,580 --> 00:15:33,090
incrementally<font color="#CCCCCC"> so we do not be the</font><font color="#E5E5E5"> full</font>

319
00:15:29,460 --> 00:15:39,300
resynchronization<font color="#E5E5E5"> those are all DVD</font>

320
00:15:33,090 --> 00:15:42,060
features and further roadmap for DVD

321
00:15:39,300 --> 00:15:44,599
itself is mostly<font color="#CCCCCC"> focused on some</font>

322
00:15:42,060 --> 00:15:50,130
performance optimizations<font color="#E5E5E5"> that's also</font>

323
00:15:44,600 --> 00:15:51,920
one of the<font color="#E5E5E5"> pro arguments for DBT it is</font>

324
00:15:50,130 --> 00:15:55,080
very fast because<font color="#E5E5E5"> it only deals with</font>

325
00:15:51,920 --> 00:15:58,740
<font color="#E5E5E5">block replication it doesn't deal with</font>

326
00:15:55,080 --> 00:16:01,380
any file system details<font color="#CCCCCC"> it doesn't deal</font>

327
00:15:58,740 --> 00:16:03,600
<font color="#CCCCCC">with any layers on top</font><font color="#E5E5E5"> of that like key</font>

328
00:16:01,380 --> 00:16:07,860
value stores or databases or anything

329
00:16:03,600 --> 00:16:12,930
like that<font color="#E5E5E5"> so it</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just another block</font>

330
00:16:07,860 --> 00:16:16,890
device<font color="#E5E5E5"> layer like a filter and we are</font>

331
00:16:12,930 --> 00:16:19,079
<font color="#E5E5E5">building a an erasure coding layer into</font>

332
00:16:16,890 --> 00:16:22,230
<font color="#E5E5E5">the</font><font color="#CCCCCC"> FD so that you would not have to</font>

333
00:16:19,080 --> 00:16:24,600
<font color="#E5E5E5">have full replicas of all the data I</font>

334
00:16:22,230 --> 00:16:26,280
<font color="#E5E5E5">couldn't have multiple nodes and spread</font>

335
00:16:24,600 --> 00:16:28,850
the data so that<font color="#E5E5E5"> you have n</font><font color="#CCCCCC"> plus 1</font>

336
00:16:26,280 --> 00:16:31,380
copies things like that

337
00:16:28,850 --> 00:16:32,850
<font color="#E5E5E5">long-distance replication is also</font>

338
00:16:31,380 --> 00:16:35,689
something that has<font color="#E5E5E5"> been available for</font>

339
00:16:32,850 --> 00:16:39,760
quite a long time<font color="#CCCCCC"> in tivity</font><font color="#E5E5E5"> there</font>

340
00:16:35,690 --> 00:16:43,040
additional product<font color="#E5E5E5"> to support</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and</font>

341
00:16:39,760 --> 00:16:45,290
that's all the new it's currently in

342
00:16:43,040 --> 00:16:48,040
public beta<font color="#E5E5E5"> test there is a Windows</font>

343
00:16:45,290 --> 00:16:52,040
version of deputy coming<font color="#E5E5E5"> up right now</font>

344
00:16:48,040 --> 00:16:54,620
<font color="#CCCCCC">used to</font><font color="#E5E5E5"> be a Linux product</font><font color="#CCCCCC"> it will be</font>

345
00:16:52,040 --> 00:16:57,170
available on Windows as<font color="#CCCCCC"> well as I said</font>

346
00:16:54,620 --> 00:17:00,220
<font color="#CCCCCC">there is a public</font><font color="#E5E5E5"> beta out by now on you</font>

347
00:16:57,170 --> 00:17:03,140
can download that<font color="#E5E5E5"> and just test it and</font>

348
00:17:00,220 --> 00:17:05,300
it is compatible<font color="#E5E5E5"> with the linux version</font>

349
00:17:03,140 --> 00:17:08,060
so you<font color="#CCCCCC"> can replicate from Windows to</font>

350
00:17:05,300 --> 00:17:11,060
Linux or from Linux to Windows<font color="#E5E5E5"> and it is</font>

351
00:17:08,060 --> 00:17:15,169
still<font color="#E5E5E5"> very tightly tied to the Linux</font>

352
00:17:11,060 --> 00:17:20,329
code so it is not a complete<font color="#E5E5E5"> fork of our</font>

353
00:17:15,170 --> 00:17:21,740
<font color="#E5E5E5">code it still merges from the Linux</font>

354
00:17:20,329 --> 00:17:24,698
version<font color="#E5E5E5"> so there is a</font><font color="#CCCCCC"> compatibility</font>

355
00:17:21,740 --> 00:17:29,900
layer on top of<font color="#CCCCCC"> the Windows NT kernel</font>

356
00:17:24,699 --> 00:17:32,330
that allows<font color="#CCCCCC"> us</font><font color="#E5E5E5"> to keep most of our other</font>

357
00:17:29,900 --> 00:17:36,290
code pretty<font color="#E5E5E5"> platform independent so that</font>

358
00:17:32,330 --> 00:17:37,850
<font color="#CCCCCC">it works</font><font color="#E5E5E5"> on Linux and on on Windows so</font>

359
00:17:36,290 --> 00:17:40,010
all the features that go into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> Linux</font>

360
00:17:37,850 --> 00:17:42,139
version or into the Windows version will

361
00:17:40,010 --> 00:17:46,250
still end<font color="#E5E5E5"> up on the other platform with</font>

362
00:17:42,140 --> 00:17:47,840
only one day<font color="#E5E5E5"> offset if we do a new Linux</font>

363
00:17:46,250 --> 00:17:53,030
version you get the updates in<font color="#E5E5E5"> the</font>

364
00:17:47,840 --> 00:17:55,310
Windows version the next<font color="#CCCCCC"> day and there</font>

365
00:17:53,030 --> 00:17:58,899
<font color="#E5E5E5">are some details you can get those from</font>

366
00:17:55,310 --> 00:18:02,679
<font color="#E5E5E5">the slides afterwards</font><font color="#CCCCCC"> booting from</font>

367
00:17:58,900 --> 00:18:05,990
<font color="#E5E5E5">windier</font><font color="#CCCCCC"> beti and things like that and</font>

368
00:18:02,680 --> 00:18:09,500
then<font color="#E5E5E5"> finally what is all these links</font>

369
00:18:05,990 --> 00:18:12,080
<font color="#CCCCCC">store talked</font><font color="#E5E5E5"> about that's the</font>

370
00:18:09,500 --> 00:18:15,440
<font color="#CCCCCC">interesting question today</font><font color="#E5E5E5"> so as I said</font>

371
00:18:12,080 --> 00:18:17,419
we come from a high<font color="#CCCCCC"> availability</font><font color="#E5E5E5"> market</font>

372
00:18:15,440 --> 00:18:20,060
originally where we<font color="#E5E5E5"> only had two nodes</font>

373
00:18:17,420 --> 00:18:22,490
<font color="#E5E5E5">now we have lots of customers</font><font color="#CCCCCC"> that have</font>

374
00:18:20,060 --> 00:18:26,210
<font color="#E5E5E5">cloud systems like OpenStack</font><font color="#CCCCCC"> systems</font>

375
00:18:22,490 --> 00:18:30,350
<font color="#E5E5E5">kuben</font><font color="#CCCCCC"> 8 these containers</font><font color="#E5E5E5"> OpenNebula</font>

376
00:18:26,210 --> 00:18:33,800
systems proxmox systems systems very

377
00:18:30,350 --> 00:18:35,908
need to<font color="#E5E5E5"> pluck our product into some</font>

378
00:18:33,800 --> 00:18:38,249
other product like

379
00:18:35,909 --> 00:18:42,269
as I said<font color="#E5E5E5"> OpenStack so that you cannot</font>

380
00:18:38,249 --> 00:18:44,009
even see<font color="#CCCCCC"> it with the LED</font><font color="#E5E5E5"> in a two node</font>

381
00:18:42,269 --> 00:18:46,049
<font color="#CCCCCC">setup</font><font color="#E5E5E5"> people just throw the</font>

382
00:18:44,009 --> 00:18:48,179
configuration file on the first and

383
00:18:46,049 --> 00:18:49,109
copied<font color="#E5E5E5"> it to the other server and then</font>

384
00:18:48,179 --> 00:18:51,089
they<font color="#CCCCCC"> are good</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> go</font>

385
00:18:49,109 --> 00:18:53,579
that's nice if you have two servers<font color="#E5E5E5"> and</font>

386
00:18:51,089 --> 00:18:57,418
maybe<font color="#CCCCCC"> ten resources because you said it</font>

387
00:18:53,579 --> 00:19:02,039
up once and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> done but if you</font>

388
00:18:57,419 --> 00:19:04,859
<font color="#CCCCCC">have</font><font color="#E5E5E5"> 100 servers and you have like</font><font color="#CCCCCC"> 2,000</font>

389
00:19:02,039 --> 00:19:06,299
resources then you probably<font color="#E5E5E5"> wouldn't</font>

390
00:19:04,859 --> 00:19:08,339
<font color="#CCCCCC">want to</font><font color="#E5E5E5"> write all the configuration</font>

391
00:19:06,299 --> 00:19:10,319
files yourself<font color="#CCCCCC"> it</font><font color="#E5E5E5"> probably wouldn't even</font>

392
00:19:08,339 --> 00:19:13,019
want to touch the storage system itself

393
00:19:10,319 --> 00:19:15,959
<font color="#E5E5E5">you would like to have a plug-in where</font>

394
00:19:13,019 --> 00:19:17,639
you just select create<font color="#CCCCCC"> new virtual</font>

395
00:19:15,959 --> 00:19:18,089
machine<font color="#CCCCCC"> in OpenStack or something like</font>

396
00:19:17,639 --> 00:19:19,379
<font color="#E5E5E5">that</font>

397
00:19:18,089 --> 00:19:22,259
or<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have it automatically to</font>

398
00:19:19,379 --> 00:19:24,329
providing kubernetes<font color="#CCCCCC"> just create a</font>

399
00:19:22,259 --> 00:19:26,789
container<font color="#E5E5E5"> that has persistent persistent</font>

400
00:19:24,329 --> 00:19:29,219
<font color="#E5E5E5">volume clean and it'll automatically</font>

401
00:19:26,789 --> 00:19:34,799
create replicated storage for you that

402
00:19:29,219 --> 00:19:37,489
is<font color="#E5E5E5"> the idea behind Lynne's store so the</font>

403
00:19:34,799 --> 00:19:40,889
<font color="#CCCCCC">Lindt store does is it takes all those</font>

404
00:19:37,489 --> 00:19:44,369
technologies<font color="#CCCCCC"> that I just briefly</font>

405
00:19:40,889 --> 00:19:49,049
mentioned like<font color="#CCCCCC"> LVM</font><font color="#E5E5E5"> the detoxication</font>

406
00:19:44,369 --> 00:19:54,329
layer the<font color="#CCCCCC"> p</font><font color="#E5E5E5"> cache raid</font><font color="#CCCCCC"> the apogee</font><font color="#E5E5E5"> itself</font>

407
00:19:49,049 --> 00:19:58,799
and allows<font color="#CCCCCC"> you to</font><font color="#E5E5E5"> set</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> the system</font><font color="#CCCCCC"> so</font>

408
00:19:54,329 --> 00:20:00,690
<font color="#CCCCCC">that you can deploy storage resources</font>

409
00:19:58,799 --> 00:20:03,569
that make use of those layers in

410
00:20:00,690 --> 00:20:05,699
different<font color="#CCCCCC"> configurations completely</font>

411
00:20:03,569 --> 00:20:07,649
automatically<font color="#E5E5E5"> and plug</font><font color="#CCCCCC"> that into some</font>

412
00:20:05,699 --> 00:20:11,669
other kind<font color="#CCCCCC"> of product like OpenStack or</font>

413
00:20:07,649 --> 00:20:14,279
kubernetes so it<font color="#E5E5E5"> builds on the existing</font>

414
00:20:11,669 --> 00:20:16,139
Linux<font color="#E5E5E5"> storage components or if you use</font>

415
00:20:14,279 --> 00:20:17,940
<font color="#E5E5E5">it on</font><font color="#CCCCCC"> on Windows in the future</font><font color="#E5E5E5"> then</font>

416
00:20:16,139 --> 00:20:20,668
obviously<font color="#E5E5E5"> on the Windows storage</font>

417
00:20:17,940 --> 00:20:25,309
components and there are not as many<font color="#E5E5E5"> as</font>

418
00:20:20,669 --> 00:20:28,169
the<font color="#CCCCCC"> Linux ones interestingly and</font>

419
00:20:25,309 --> 00:20:31,918
automates the process of creating<font color="#CCCCCC"> a</font>

420
00:20:28,169 --> 00:20:34,259
logical volume putting for example a an

421
00:20:31,919 --> 00:20:36,389
encryption layer on top of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> then</font>

422
00:20:34,259 --> 00:20:39,119
putting a<font color="#CCCCCC"> t-table keishon layer</font>

423
00:20:36,389 --> 00:20:41,908
<font color="#E5E5E5">somewhere in to the stack maybe creating</font>

424
00:20:39,119 --> 00:20:43,829
a raid system out of<font color="#E5E5E5"> it and then putting</font>

425
00:20:41,909 --> 00:20:45,479
<font color="#CCCCCC">that on one node</font><font color="#E5E5E5"> and replicating it to</font>

426
00:20:43,829 --> 00:20:48,859
other nodes<font color="#E5E5E5"> that might even have a</font>

427
00:20:45,479 --> 00:20:48,859
different storage<font color="#CCCCCC"> setup</font>

428
00:20:49,030 --> 00:20:57,260
it's also<font color="#E5E5E5"> built to be to some extent</font>

429
00:20:52,720 --> 00:20:59,690
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to run multiple tenants</font><font color="#CCCCCC"> so it's I'd</font>

430
00:20:57,260 --> 00:21:03,350
rather call<font color="#E5E5E5"> it multi-user capable so you</font>

431
00:20:59,690 --> 00:21:07,550
can define<font color="#CCCCCC"> different identities and</font>

432
00:21:03,350 --> 00:21:10,250
roles in<font color="#E5E5E5"> lynnster and give them certain</font>

433
00:21:07,550 --> 00:21:14,540
permissions<font color="#E5E5E5"> just with access control</font>

434
00:21:10,250 --> 00:21:16,610
lists and<font color="#E5E5E5"> privileges and we have a that</font>

435
00:21:14,540 --> 00:21:18,649
split we have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> this questionary access</font>

436
00:21:16,610 --> 00:21:21,530
control layer and the mandatory<font color="#CCCCCC"> access</font>

437
00:21:18,650 --> 00:21:24,620
control layer<font color="#E5E5E5"> so some of the you can</font>

438
00:21:21,530 --> 00:21:27,970
more or less isolate some<font color="#E5E5E5"> of those roles</font>

439
00:21:24,620 --> 00:21:30,979
<font color="#E5E5E5">from each other by administrative action</font>

440
00:21:27,970 --> 00:21:33,080
that they can't override their access

441
00:21:30,980 --> 00:21:38,060
control lists<font color="#E5E5E5"> even if they own the</font>

442
00:21:33,080 --> 00:21:40,179
object and all<font color="#E5E5E5"> of that is open source</font>

443
00:21:38,060 --> 00:21:43,159
software of course<font color="#E5E5E5"> it's on the GPL</font>

444
00:21:40,180 --> 00:21:45,980
<font color="#E5E5E5">hosted on github and also our</font><font color="#CCCCCC"> own</font>

445
00:21:43,160 --> 00:21:49,640
servers<font color="#E5E5E5"> most people just download it</font>

446
00:21:45,980 --> 00:21:52,100
from github nowadays so we can find the

447
00:21:49,640 --> 00:21:54,830
source code<font color="#CCCCCC"> online on the</font><font color="#E5E5E5"> little bit</font>

448
00:21:52,100 --> 00:22:00,260
github<font color="#CCCCCC"> now let's look</font><font color="#E5E5E5"> at some scenarios</font>

449
00:21:54,830 --> 00:22:02,330
<font color="#E5E5E5">that lynnster makes possible that is one</font>

450
00:22:00,260 --> 00:22:05,840
possibility where you have a storage

451
00:22:02,330 --> 00:22:08,120
layer<font color="#E5E5E5"> a collection of storage nodes and</font>

452
00:22:05,840 --> 00:22:11,000
<font color="#E5E5E5">you</font><font color="#CCCCCC"> have a</font><font color="#E5E5E5"> collection of hypervisor</font>

453
00:22:08,120 --> 00:22:13,189
<font color="#E5E5E5">nodes where you run</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> actual virtual</font>

454
00:22:11,000 --> 00:22:17,080
<font color="#E5E5E5">machines</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> what you actually want</font>

455
00:22:13,190 --> 00:22:20,210
to do<font color="#E5E5E5"> storage nodes are supposed to</font>

456
00:22:17,080 --> 00:22:23,449
<font color="#E5E5E5">provide storage remotely so</font><font color="#CCCCCC"> that you can</font>

457
00:22:20,210 --> 00:22:25,670
run the virtual<font color="#E5E5E5"> machine as if the</font>

458
00:22:23,450 --> 00:22:29,180
storage<font color="#E5E5E5"> were locally available on the</font>

459
00:22:25,670 --> 00:22:33,880
hypervisor<font color="#E5E5E5"> what we do in that case</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> we</font>

460
00:22:29,180 --> 00:22:36,380
<font color="#E5E5E5">deploy the actual physical storage on</font>

461
00:22:33,880 --> 00:22:38,530
<font color="#E5E5E5">two or three</font><font color="#CCCCCC"> nodes depending on your</font>

462
00:22:36,380 --> 00:22:42,110
setup<font color="#CCCCCC"> most people do like two or three</font>

463
00:22:38,530 --> 00:22:46,220
<font color="#E5E5E5">replicas of the data and then we move a</font>

464
00:22:42,110 --> 00:22:48,050
<font color="#CCCCCC">T</font><font color="#E5E5E5"> of the T diskless client to the</font>

465
00:22:46,220 --> 00:22:50,630
hypervisor<font color="#CCCCCC"> that runs the virtual machine</font>

466
00:22:48,050 --> 00:22:52,790
so the<font color="#CCCCCC"> virtual machine from from the</font>

467
00:22:50,630 --> 00:22:55,010
point of<font color="#E5E5E5"> view</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the virtual machine it</font>

468
00:22:52,790 --> 00:22:56,780
seems as if there's local<font color="#E5E5E5"> storage in the</font>

469
00:22:55,010 --> 00:22:57,250
node<font color="#CCCCCC"> there's a block device</font><font color="#E5E5E5"> that it can</font>

470
00:22:56,780 --> 00:23:00,070
<font color="#E5E5E5">open</font>

471
00:22:57,250 --> 00:23:03,760
right<font color="#CCCCCC"> - but</font><font color="#E5E5E5"> in reality that's on the</font>

472
00:23:00,070 --> 00:23:05,770
storage<font color="#E5E5E5"> nodes and obviously we can</font>

473
00:23:03,760 --> 00:23:09,190
<font color="#CCCCCC">easily move to another hypervisor by</font>

474
00:23:05,770 --> 00:23:11,560
just<font color="#E5E5E5"> moving the</font><font color="#CCCCCC"> disk less client from</font>

475
00:23:09,190 --> 00:23:14,110
one hypervisor to another hypervisor and

476
00:23:11,560 --> 00:23:16,179
<font color="#CCCCCC">migrating the virtual machine over there</font>

477
00:23:14,110 --> 00:23:19,060
<font color="#E5E5E5">and it still connects to the same</font>

478
00:23:16,180 --> 00:23:20,890
storage<font color="#E5E5E5"> nodes for example if</font><font color="#CCCCCC"> your</font>

479
00:23:19,060 --> 00:23:25,360
hypervisor fails<font color="#E5E5E5"> that would be one</font>

480
00:23:20,890 --> 00:23:27,130
<font color="#E5E5E5">scenario the other</font><font color="#CCCCCC"> scenario would be one</font>

481
00:23:25,360 --> 00:23:29,709
where<font color="#E5E5E5"> one of the storage nodes fails</font>

482
00:23:27,130 --> 00:23:33,430
<font color="#E5E5E5">either temporarily because it has lost</font>

483
00:23:29,710 --> 00:23:35,590
power<font color="#E5E5E5"> or permanently because the storage</font>

484
00:23:33,430 --> 00:23:38,080
itself the hard disk<font color="#CCCCCC"> fails the SSD</font>

485
00:23:35,590 --> 00:23:41,080
failed or it was lost in some kind of

486
00:23:38,080 --> 00:23:43,120
<font color="#CCCCCC">disaster that is something that's</font>

487
00:23:41,080 --> 00:23:46,480
<font color="#E5E5E5">completely transparent to the hypervisor</font>

488
00:23:43,120 --> 00:23:48,250
running the VM because the diskless

489
00:23:46,480 --> 00:23:50,740
client is<font color="#E5E5E5"> connected to</font><font color="#CCCCCC"> multiple storage</font>

490
00:23:48,250 --> 00:23:52,720
nodes<font color="#CCCCCC"> so if one of</font><font color="#E5E5E5"> them fails we'll just</font>

491
00:23:50,740 --> 00:23:58,030
use the<font color="#CCCCCC"> other one</font><font color="#E5E5E5"> you don't even notice</font>

492
00:23:52,720 --> 00:24:00,820
<font color="#E5E5E5">that locally and then the more</font>

493
00:23:58,030 --> 00:24:03,250
interesting setup<font color="#E5E5E5"> is probably for most</font>

494
00:24:00,820 --> 00:24:06,070
of the people<font color="#E5E5E5"> who use cloud products is</font>

495
00:24:03,250 --> 00:24:08,680
this one<font color="#CCCCCC"> which at least</font><font color="#E5E5E5"> the large</font>

496
00:24:06,070 --> 00:24:12,550
companies call hyper-converged<font color="#E5E5E5"> where you</font>

497
00:24:08,680 --> 00:24:14,620
have<font color="#E5E5E5"> physical storage in the same note</font>

498
00:24:12,550 --> 00:24:18,040
that is also<font color="#E5E5E5"> the hypervisor</font><font color="#CCCCCC"> that runs</font>

499
00:24:14,620 --> 00:24:22,929
<font color="#E5E5E5">your virtual machines and even in that</font>

500
00:24:18,040 --> 00:24:25,330
<font color="#CCCCCC">setup you could have local storage</font><font color="#E5E5E5"> below</font>

501
00:24:22,930 --> 00:24:28,300
<font color="#E5E5E5">your VM</font><font color="#CCCCCC"> you could also still use</font>

502
00:24:25,330 --> 00:24:30,460
diskless clients<font color="#E5E5E5"> so the storage does not</font>

503
00:24:28,300 --> 00:24:33,850
necessarily<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to be on the same</font>

504
00:24:30,460 --> 00:24:35,290
<font color="#CCCCCC">system very</font><font color="#E5E5E5"> hypervisor</font><font color="#CCCCCC"> is normally</font><font color="#E5E5E5"> it is</font>

505
00:24:33,850 --> 00:24:37,090
because that's<font color="#E5E5E5"> a bit fast if you have</font>

506
00:24:35,290 --> 00:24:38,889
<font color="#E5E5E5">local</font><font color="#CCCCCC"> storage</font><font color="#E5E5E5"> and you can read directly</font>

507
00:24:37,090 --> 00:24:41,530
<font color="#E5E5E5">from</font><font color="#CCCCCC"> local storage so</font><font color="#E5E5E5"> normally you would</font>

508
00:24:38,890 --> 00:24:45,210
keep<font color="#CCCCCC"> your virtual machine wherever your</font>

509
00:24:41,530 --> 00:24:47,590
local storage of that<font color="#CCCCCC"> virtual machine</font><font color="#E5E5E5"> is</font>

510
00:24:45,210 --> 00:24:50,250
but there are also some scenarios that

511
00:24:47,590 --> 00:24:54,250
<font color="#E5E5E5">might be interesting for</font><font color="#CCCCCC"> example if you</font>

512
00:24:50,250 --> 00:24:57,280
<font color="#CCCCCC">migrated</font><font color="#E5E5E5"> begin a virtual machine might</font>

513
00:24:54,250 --> 00:24:59,590
<font color="#E5E5E5">be because you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> rebalance the</font>

514
00:24:57,280 --> 00:25:01,600
<font color="#E5E5E5">load you have too many virtual</font><font color="#CCCCCC"> machines</font>

515
00:24:59,590 --> 00:25:03,459
<font color="#CCCCCC">on one hypervisor to take up too much</font>

516
00:25:01,600 --> 00:25:07,540
<font color="#E5E5E5">too many resources from</font>

517
00:25:03,460 --> 00:25:10,020
main memory<font color="#CCCCCC"> or too much</font><font color="#E5E5E5"> CPU time then</font>

518
00:25:07,540 --> 00:25:13,030
that<font color="#CCCCCC"> might be a case for</font><font color="#E5E5E5"> life migration</font>

519
00:25:10,020 --> 00:25:15,160
so one possibility to do that is<font color="#E5E5E5"> just to</font>

520
00:25:13,030 --> 00:25:17,440
move<font color="#CCCCCC"> the virtual machine to another</font>

521
00:25:15,160 --> 00:25:19,660
hypervisor without having local<font color="#E5E5E5"> storage</font>

522
00:25:17,440 --> 00:25:22,960
there<font color="#E5E5E5"> because you can still do the same</font>

523
00:25:19,660 --> 00:25:25,110
<font color="#E5E5E5">thing that you did with</font><font color="#CCCCCC"> the split system</font>

524
00:25:22,960 --> 00:25:28,000
where you had storage and hypervisors

525
00:25:25,110 --> 00:25:30,459
<font color="#CCCCCC">you can still run in</font><font color="#E5E5E5"> diskless mode</font><font color="#CCCCCC"> but</font>

526
00:25:28,000 --> 00:25:34,360
what's interesting is<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> can also</font>

527
00:25:30,460 --> 00:25:37,480
put<font color="#CCCCCC"> a new replica</font><font color="#E5E5E5"> on the running virtual</font>

528
00:25:34,360 --> 00:25:39,820
<font color="#E5E5E5">machine so there is physical storage</font>

529
00:25:37,480 --> 00:25:41,980
<font color="#CCCCCC">available on the hypervisor</font><font color="#E5E5E5"> and you're</font>

530
00:25:39,820 --> 00:25:43,540
running a<font color="#CCCCCC"> virtual machine</font><font color="#E5E5E5"> on the type of</font>

531
00:25:41,980 --> 00:25:46,540
<font color="#CCCCCC">visor</font><font color="#E5E5E5"> but it doesn't have a local</font>

532
00:25:43,540 --> 00:25:49,780
<font color="#E5E5E5">replica you can transparently create a</font>

533
00:25:46,540 --> 00:25:51,520
local replica so even by while the

534
00:25:49,780 --> 00:25:55,960
virtual machine<font color="#E5E5E5"> is running on the disk</font>

535
00:25:51,520 --> 00:25:58,660
<font color="#CCCCCC">class DVD you can basically insert the</font>

536
00:25:55,960 --> 00:26:01,990
<font color="#CCCCCC">disk</font><font color="#E5E5E5"> below the entire stack and it will</font>

537
00:25:58,660 --> 00:26:05,680
<font color="#E5E5E5">resync with the other replicas until it</font>

538
00:26:01,990 --> 00:26:07,810
is up-to-date<font color="#CCCCCC"> and will even go into a</font>

539
00:26:05,680 --> 00:26:09,940
mixed mode where it reads all the data

540
00:26:07,810 --> 00:26:12,250
that<font color="#CCCCCC"> is already available</font><font color="#E5E5E5"> locally from</font>

541
00:26:09,940 --> 00:26:14,530
<font color="#E5E5E5">the local disk and what's not yet</font>

542
00:26:12,250 --> 00:26:17,050
available locally<font color="#CCCCCC"> because it's still</font>

543
00:26:14,530 --> 00:26:19,420
being replicated or<font color="#CCCCCC"> resync</font><font color="#E5E5E5"> in that case</font>

544
00:26:17,050 --> 00:26:22,930
<font color="#E5E5E5">will be read from the other nodes</font><font color="#CCCCCC"> they</font>

545
00:26:19,420 --> 00:26:25,930
don't have all the<font color="#E5E5E5"> data and then</font>

546
00:26:22,930 --> 00:26:28,090
obviously<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can remove the storage</font>

547
00:26:25,930 --> 00:26:31,300
from one of the nodes<font color="#CCCCCC"> where</font><font color="#E5E5E5"> you don't</font>

548
00:26:28,090 --> 00:26:32,949
need<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> that you don't create more</font>

549
00:26:31,300 --> 00:26:36,419
and more replicas<font color="#E5E5E5"> you know if you have</font>

550
00:26:32,950 --> 00:26:39,730
three replicas you can create a fourth

551
00:26:36,420 --> 00:26:43,630
<font color="#E5E5E5">replica temporarily and when the resync</font>

552
00:26:39,730 --> 00:26:45,490
is done it will automatically remove the

553
00:26:43,630 --> 00:26:47,920
storage<font color="#E5E5E5"> from one of the other nodes so</font>

554
00:26:45,490 --> 00:26:50,020
that<font color="#E5E5E5"> you always have</font><font color="#CCCCCC"> the same replicas</font>

555
00:26:47,920 --> 00:26:52,420
count<font color="#E5E5E5"> for example three replicas in this</font>

556
00:26:50,020 --> 00:26:57,090
not only<font color="#E5E5E5"> two replicas in this scenario</font>

557
00:26:52,420 --> 00:26:59,920
so<font color="#CCCCCC"> whatever your replicas count is and</font>

558
00:26:57,090 --> 00:27:02,020
the<font color="#E5E5E5"> idea is that</font><font color="#CCCCCC"> all of</font><font color="#E5E5E5"> this is done</font>

559
00:26:59,920 --> 00:27:04,720
automatically<font color="#E5E5E5"> so there are commands for</font>

560
00:27:02,020 --> 00:27:07,090
this<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Lin store there is</font><font color="#CCCCCC"> a command</font><font color="#E5E5E5"> to</font>

561
00:27:04,720 --> 00:27:09,450
create the<font color="#E5E5E5"> resource there's another</font>

562
00:27:07,090 --> 00:27:11,889
command<font color="#E5E5E5"> to move a resource to migrate it</font>

563
00:27:09,450 --> 00:27:14,350
automatically so that<font color="#E5E5E5"> it will create a</font>

564
00:27:11,890 --> 00:27:16,500
temporary new resource then do the

565
00:27:14,350 --> 00:27:18,330
<font color="#E5E5E5">resync wait until the reason</font>

566
00:27:16,500 --> 00:27:23,100
<font color="#E5E5E5">stun and then remove the replica where</font>

567
00:27:18,330 --> 00:27:25,740
it came from<font color="#CCCCCC"> and this is the</font>

568
00:27:23,100 --> 00:27:30,439
<font color="#E5E5E5">architecture this is how the the system</font>

569
00:27:25,740 --> 00:27:34,020
<font color="#E5E5E5">itself works there are two components</font>

570
00:27:30,440 --> 00:27:36,660
<font color="#E5E5E5">lynnster has a control and the satellite</font>

571
00:27:34,020 --> 00:27:38,639
module<font color="#E5E5E5"> set alert module is running on</font>

572
00:27:36,660 --> 00:27:42,090
every<font color="#E5E5E5"> note that is able to provide</font>

573
00:27:38,640 --> 00:27:45,840
<font color="#E5E5E5">storage or is supposed to consume</font>

574
00:27:42,090 --> 00:27:47,580
storage by running<font color="#E5E5E5"> diskless DVD so it</font>

575
00:27:45,840 --> 00:27:51,480
doesn't have<font color="#CCCCCC"> to be physical storage it</font>

576
00:27:47,580 --> 00:27:53,550
<font color="#E5E5E5">could be virtual storage diskless and</font>

577
00:27:51,480 --> 00:27:56,580
there is at least one controller node

578
00:27:53,550 --> 00:27:59,610
<font color="#CCCCCC">and there's only one</font><font color="#E5E5E5"> active control at</font>

579
00:27:56,580 --> 00:28:01,439
any time you could have standby

580
00:27:59,610 --> 00:28:03,540
<font color="#E5E5E5">controllers so that you can</font><font color="#CCCCCC"> failover</font><font color="#E5E5E5"> if</font>

581
00:28:01,440 --> 00:28:08,010
the<font color="#CCCCCC"> control</font><font color="#E5E5E5"> Ahnold</font><font color="#CCCCCC"> dies for whatever</font>

582
00:28:03,540 --> 00:28:12,540
reason<font color="#CCCCCC"> both components</font><font color="#E5E5E5"> are written in</font>

583
00:28:08,010 --> 00:28:16,040
<font color="#E5E5E5">Java it's just a</font><font color="#CCCCCC"> Java</font><font color="#E5E5E5"> standalone process</font>

584
00:28:12,540 --> 00:28:18,060
it does<font color="#E5E5E5"> not run in any kind of web</font>

585
00:28:16,040 --> 00:28:22,200
application container<font color="#E5E5E5"> something it's</font>

586
00:28:18,060 --> 00:28:25,440
<font color="#CCCCCC">just plain Java</font><font color="#E5E5E5"> and it comes with a with</font>

587
00:28:22,200 --> 00:28:29,430
an<font color="#E5E5E5"> integrated</font><font color="#CCCCCC"> age</font><font color="#E5E5E5"> to SQL database that's</font>

588
00:28:25,440 --> 00:28:31,110
where the entire<font color="#CCCCCC"> set up is stored but</font>

589
00:28:29,430 --> 00:28:33,630
there is the possibility to<font color="#CCCCCC"> use another</font>

590
00:28:31,110 --> 00:28:36,330
<font color="#E5E5E5">database instead so you do not have to</font>

591
00:28:33,630 --> 00:28:39,090
use the integrated<font color="#E5E5E5"> h2 database if you</font>

592
00:28:36,330 --> 00:28:43,800
already have database<font color="#E5E5E5"> server Songer we</font>

593
00:28:39,090 --> 00:28:49,110
also support<font color="#E5E5E5"> Postgres</font><font color="#CCCCCC"> Rio to be and db2</font>

594
00:28:43,800 --> 00:28:52,860
<font color="#E5E5E5">the</font><font color="#CCCCCC"> 2003 databases</font><font color="#E5E5E5"> to be support</font>

595
00:28:49,110 --> 00:28:56,310
currently so you could have some central

596
00:28:52,860 --> 00:29:00,149
database<font color="#E5E5E5"> and use your company's database</font>

597
00:28:56,310 --> 00:29:01,590
server<font color="#E5E5E5"> which makes failover somewhat</font>

598
00:29:00,150 --> 00:29:03,720
easier with the lynnster controller

599
00:29:01,590 --> 00:29:05,490
because<font color="#CCCCCC"> it will</font><font color="#E5E5E5"> just connect and</font>

600
00:29:03,720 --> 00:29:11,870
reconnect to the database whenever<font color="#E5E5E5"> it is</font>

601
00:29:05,490 --> 00:29:15,210
<font color="#E5E5E5">moved on top of the lynnster controller</font>

602
00:29:11,870 --> 00:29:18,560
<font color="#CCCCCC">we</font><font color="#E5E5E5"> have all the just mark it up here</font>

603
00:29:15,210 --> 00:29:18,560
that's where all our

604
00:29:19,860 --> 00:29:25,449
<font color="#E5E5E5">infrastructure and cloud products</font>

605
00:29:22,000 --> 00:29:28,299
<font color="#CCCCCC">plug-in that's on an</font><font color="#E5E5E5"> API library layer</font>

606
00:29:25,450 --> 00:29:33,370
<font color="#E5E5E5">so there are API libraries available in</font>

607
00:29:28,299 --> 00:29:36,399
store that allow you to<font color="#E5E5E5"> create plugins</font>

608
00:29:33,370 --> 00:29:38,139
and drivers quite easily by just<font color="#E5E5E5"> using</font>

609
00:29:36,399 --> 00:29:40,330
the<font color="#CCCCCC"> API library</font><font color="#E5E5E5"> that's basically a</font>

610
00:29:38,139 --> 00:29:43,029
library<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> object-oriented</font><font color="#E5E5E5"> so you</font>

611
00:29:40,330 --> 00:29:46,509
can<font color="#E5E5E5"> I create a lynnster resource crate</font>

612
00:29:43,029 --> 00:29:49,509
some volumes prepare everything<font color="#CCCCCC"> intend</font>

613
00:29:46,509 --> 00:29:52,419
and<font color="#E5E5E5"> then tell the library to just send</font>

614
00:29:49,509 --> 00:29:55,450
that to the<font color="#E5E5E5"> lynnster controller and</font><font color="#CCCCCC"> that</font>

615
00:29:52,419 --> 00:29:56,710
will execute<font color="#E5E5E5"> your request the lynnster</font>

616
00:29:55,450 --> 00:30:00,149
<font color="#E5E5E5">controller itself dusted in the</font>

617
00:29:56,710 --> 00:30:03,129
transaction safe<font color="#CCCCCC"> way</font><font color="#E5E5E5"> so either your</font>

618
00:30:00,149 --> 00:30:05,678
transaction to create a resource or a

619
00:30:03,129 --> 00:30:09,250
<font color="#E5E5E5">resource with multiple volumes will</font>

620
00:30:05,679 --> 00:30:10,750
either be accepted with all the<font color="#E5E5E5"> volumes</font>

621
00:30:09,250 --> 00:30:13,120
that<font color="#CCCCCC"> you configured or it will just</font><font color="#E5E5E5"> roll</font>

622
00:30:10,750 --> 00:30:14,649
back both in the database as well<font color="#CCCCCC"> as in</font>

623
00:30:13,120 --> 00:30:18,758
<font color="#E5E5E5">the main storage so there are no</font>

624
00:30:14,649 --> 00:30:22,000
inconsistencies<font color="#E5E5E5"> and the protocol is also</font>

625
00:30:18,759 --> 00:30:24,299
another<font color="#CCCCCC"> interesting feature here I don't</font>

626
00:30:22,000 --> 00:30:27,070
know whether anyone<font color="#E5E5E5"> is here who knew our</font>

627
00:30:24,299 --> 00:30:30,549
previous product which was<font color="#E5E5E5"> only supposed</font>

628
00:30:27,070 --> 00:30:33,879
to manage the<font color="#E5E5E5"> apt</font><font color="#CCCCCC"> that was called TBD</font>

629
00:30:30,549 --> 00:30:35,529
<font color="#CCCCCC">manage</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> use different protocols for</font>

630
00:30:33,879 --> 00:30:38,500
communication between nodes<font color="#E5E5E5"> and</font>

631
00:30:35,529 --> 00:30:41,350
communication between DVD manage and the

632
00:30:38,500 --> 00:30:43,950
<font color="#CCCCCC">command-line client</font><font color="#E5E5E5"> and that has</font><font color="#CCCCCC"> changed</font>

633
00:30:41,350 --> 00:30:47,500
in<font color="#CCCCCC"> Lin</font><font color="#E5E5E5"> store there's only one protocol</font>

634
00:30:43,950 --> 00:30:49,799
that is being<font color="#E5E5E5"> used for all communication</font>

635
00:30:47,500 --> 00:30:52,240
so<font color="#E5E5E5"> communication between Lin store and</font>

636
00:30:49,799 --> 00:30:53,769
<font color="#CCCCCC">command-line utilities as well as</font>

637
00:30:52,240 --> 00:30:56,470
communication between lynnster and

638
00:30:53,769 --> 00:30:58,870
OpenStack<font color="#E5E5E5"> OpenNebula</font><font color="#CCCCCC"> granitas proxmox</font>

639
00:30:56,470 --> 00:31:00,759
<font color="#E5E5E5">and also communication between Lin's</font>

640
00:30:58,870 --> 00:31:03,219
<font color="#E5E5E5">lynnster controllers and links to</font>

641
00:31:00,759 --> 00:31:05,350
satellites<font color="#E5E5E5"> that all uses the same</font>

642
00:31:03,220 --> 00:31:10,200
protocol which is<font color="#CCCCCC"> also just the tcp/ip</font>

643
00:31:05,350 --> 00:31:15,039
<font color="#E5E5E5">based protocol besides</font><font color="#CCCCCC"> this llfe if you</font>

644
00:31:10,200 --> 00:31:17,529
run it in production<font color="#CCCCCC"> you could also run</font>

645
00:31:15,039 --> 00:31:22,049
it in plain<font color="#CCCCCC"> text but the</font><font color="#E5E5E5"> protocol is</font>

646
00:31:17,529 --> 00:31:25,299
still the same and what's<font color="#E5E5E5"> coming up</font>

647
00:31:22,049 --> 00:31:27,940
<font color="#E5E5E5">probably quite soon it's currently</font><font color="#CCCCCC"> being</font>

648
00:31:25,299 --> 00:31:29,779
worked<font color="#E5E5E5"> on is an additional protocol</font>

649
00:31:27,940 --> 00:31:33,739
<font color="#E5E5E5">that's just a</font>

650
00:31:29,779 --> 00:31:36,109
HTTP or<font color="#CCCCCC"> HTTPS</font><font color="#E5E5E5"> REST API that will allow</font>

651
00:31:33,739 --> 00:31:39,649
you to basically<font color="#E5E5E5"> make the same request</font>

652
00:31:36,109 --> 00:31:42,320
to the lynnster controller<font color="#E5E5E5"> as the</font>

653
00:31:39,649 --> 00:31:43,908
<font color="#CCCCCC">lynnster</font><font color="#E5E5E5"> native protocol allows so there</font>

654
00:31:42,320 --> 00:31:45,769
<font color="#E5E5E5">will also be a REST API directly</font>

655
00:31:43,909 --> 00:31:47,719
<font color="#E5E5E5">available in</font><font color="#CCCCCC"> Lynne</font><font color="#E5E5E5"> stone</font><font color="#CCCCCC"> without</font>

656
00:31:45,769 --> 00:31:52,549
requiring a<font color="#E5E5E5"> web server around it or</font>

657
00:31:47,719 --> 00:31:54,619
<font color="#CCCCCC">something like that</font><font color="#E5E5E5"> so the</font><font color="#CCCCCC"> the</font>

658
00:31:52,549 --> 00:31:57,408
<font color="#E5E5E5">architecture Flynn store itself is</font>

659
00:31:54,619 --> 00:31:59,389
modular in many ways<font color="#E5E5E5"> we can</font><font color="#CCCCCC"> exchange the</font>

660
00:31:57,409 --> 00:32:01,509
database layer we can exchange the

661
00:31:59,389 --> 00:32:05,809
protocol layer we can<font color="#E5E5E5"> load different</font>

662
00:32:01,509 --> 00:32:07,419
storage<font color="#E5E5E5"> plugins</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> is a lot there</font><font color="#CCCCCC"> are</font>

663
00:32:05,809 --> 00:32:11,299
lots of possibilities

664
00:32:07,419 --> 00:32:14,419
<font color="#E5E5E5">lots of plugins in</font><font color="#CCCCCC"> linz store</font><font color="#E5E5E5"> even the</font>

665
00:32:11,299 --> 00:32:17,719
<font color="#E5E5E5">API is itself all the functions that</font>

666
00:32:14,419 --> 00:32:20,570
lynnster has are just load little more

667
00:32:17,719 --> 00:32:26,779
or less<font color="#E5E5E5"> plugins the plug-in</font><font color="#CCCCCC"> to in tool</font>

668
00:32:20,570 --> 00:32:29,299
<font color="#E5E5E5">in store into something obviously data</font>

669
00:32:26,779 --> 00:32:32,719
placement<font color="#CCCCCC"> is interesting</font><font color="#E5E5E5"> you wouldn't</font>

670
00:32:29,299 --> 00:32:35,389
want to select<font color="#CCCCCC"> nodes manually if you</font>

671
00:32:32,719 --> 00:32:38,450
have an<font color="#CCCCCC"> openstack</font><font color="#E5E5E5"> cluster of</font><font color="#CCCCCC"> 60 nodes</font>

672
00:32:35,389 --> 00:32:40,459
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you want</font><font color="#E5E5E5"> only three replicas we</font>

673
00:32:38,450 --> 00:32:42,559
obviously have the<font color="#E5E5E5"> problem of selecting</font>

674
00:32:40,460 --> 00:32:46,669
<font color="#E5E5E5">which nodes you would like to have those</font>

675
00:32:42,559 --> 00:32:48,739
<font color="#CCCCCC">replicas replicas deployed and that'll</font>

676
00:32:46,669 --> 00:32:51,049
be done automatically<font color="#E5E5E5"> while in store</font>

677
00:32:48,739 --> 00:32:54,649
normally depending on how much space

678
00:32:51,049 --> 00:32:56,450
<font color="#E5E5E5">there is on each node so obviously it</font>

679
00:32:54,649 --> 00:32:58,939
would not choose<font color="#E5E5E5"> the note doesn't have</font>

680
00:32:56,450 --> 00:33:01,969
enough storage<font color="#CCCCCC"> to even create pack and</font>

681
00:32:58,940 --> 00:33:06,320
storage for<font color="#E5E5E5"> your resource but there are</font>

682
00:33:01,969 --> 00:33:09,769
also additional features to<font color="#E5E5E5"> allow you to</font>

683
00:33:06,320 --> 00:33:11,418
control their resources are created and

684
00:33:09,769 --> 00:33:15,849
one of our customers is already using

685
00:33:11,419 --> 00:33:15,849
<font color="#CCCCCC">that</font><font color="#E5E5E5"> or mention that in a minute</font>

686
00:33:16,460 --> 00:33:22,429
you can choose and<font color="#E5E5E5"> that's completely</font>

687
00:33:19,580 --> 00:33:24,978
arbitrary you can create any<font color="#CCCCCC"> kind of tag</font>

688
00:33:22,429 --> 00:33:26,989
<font color="#E5E5E5">on load that you want that's completely</font>

689
00:33:24,979 --> 00:33:29,479
under the<font color="#CCCCCC"> control of the user</font><font color="#E5E5E5"> and then</font>

690
00:33:26,989 --> 00:33:32,539
you can make rules based on<font color="#E5E5E5"> those tags</font>

691
00:33:29,479 --> 00:33:36,589
<font color="#E5E5E5">like for example put certain resources</font>

692
00:33:32,539 --> 00:33:40,000
in a certain fire protection zone<font color="#CCCCCC"> or put</font>

693
00:33:36,589 --> 00:33:42,190
them put<font color="#CCCCCC"> those two resources on the same</font>

694
00:33:40,000 --> 00:33:44,680
put those two resources<font color="#E5E5E5"> never on the</font>

695
00:33:42,190 --> 00:33:47,290
same server<font color="#CCCCCC"> or</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> service in the</font>

696
00:33:44,680 --> 00:33:51,220
same<font color="#E5E5E5"> wreck something</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> that so you</font>

697
00:33:47,290 --> 00:33:52,990
<font color="#CCCCCC">can form songs and create rules to tell</font>

698
00:33:51,220 --> 00:33:59,260
<font color="#E5E5E5">in store how to deploy all those</font>

699
00:33:52,990 --> 00:34:03,340
resources<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> also create</font><font color="#CCCCCC"> some rules</font>

700
00:33:59,260 --> 00:34:06,580
for network paths<font color="#CCCCCC"> this selection</font><font color="#E5E5E5"> of the</font>

701
00:34:03,340 --> 00:34:09,159
network<font color="#E5E5E5"> path because we allow to</font>

702
00:34:06,580 --> 00:34:11,739
configure multiple network paths for

703
00:34:09,159 --> 00:34:13,510
different resources<font color="#CCCCCC"> it doesn't you don't</font>

704
00:34:11,739 --> 00:34:15,040
<font color="#CCCCCC">have to run every reasons for the same</font>

705
00:34:13,510 --> 00:34:17,440
<font color="#E5E5E5">network path because you might have</font>

706
00:34:15,040 --> 00:34:19,120
resources<font color="#CCCCCC"> that are less important</font>

707
00:34:17,440 --> 00:34:21,820
<font color="#CCCCCC">performance wise and you might</font><font color="#E5E5E5"> have</font>

708
00:34:19,120 --> 00:34:23,980
<font color="#E5E5E5">resources</font><font color="#CCCCCC"> that are needed</font><font color="#E5E5E5"> another level</font>

709
00:34:21,820 --> 00:34:28,149
of performance or<font color="#CCCCCC"> it might</font><font color="#E5E5E5"> have certain</font>

710
00:34:23,980 --> 00:34:30,010
security requirements that<font color="#CCCCCC"> require you</font>

711
00:34:28,149 --> 00:34:35,199
to run those resources through different

712
00:34:30,010 --> 00:34:38,520
networks<font color="#E5E5E5"> things like that it recently</font>

713
00:34:35,199 --> 00:34:41,529
also supports<font color="#CCCCCC"> Beauty smartie passing and</font>

714
00:34:38,520 --> 00:34:44,469
their various possibilities<font color="#E5E5E5"> to select</font>

715
00:34:41,530 --> 00:34:46,889
the path for a resource<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can put the</font>

716
00:34:44,469 --> 00:34:49,480
rule on the resource definition itself

717
00:34:46,889 --> 00:34:52,540
<font color="#E5E5E5">but you could put it on the storage pool</font>

718
00:34:49,480 --> 00:34:55,659
<font color="#CCCCCC">so depending on which storage pool the</font>

719
00:34:52,540 --> 00:34:59,020
resource uses for example<font color="#CCCCCC"> the fast SSD</font>

720
00:34:55,659 --> 00:35:01,420
storage<font color="#CCCCCC"> pool</font><font color="#E5E5E5"> one of those storage pools</font>

721
00:34:59,020 --> 00:35:04,240
might use a faster<font color="#E5E5E5"> network then another</font>

722
00:35:01,420 --> 00:35:09,850
storage pool that might be based on on

723
00:35:04,240 --> 00:35:13,200
hard disks for example and I<font color="#E5E5E5"> think that</font>

724
00:35:09,850 --> 00:35:16,900
you<font color="#E5E5E5"> probably most people</font><font color="#CCCCCC"> have already</font>

725
00:35:13,200 --> 00:35:19,830
seen what it supports so we have lots of

726
00:35:16,900 --> 00:35:21,910
connectors kubernetes<font color="#E5E5E5"> OpenStack nebula</font>

727
00:35:19,830 --> 00:35:24,460
proxmox and server

728
00:35:21,910 --> 00:35:27,430
<font color="#E5E5E5">those are all available and what's new</font>

729
00:35:24,460 --> 00:35:29,890
is that<font color="#E5E5E5"> we also</font><font color="#CCCCCC"> have a series I plug in</font>

730
00:35:27,430 --> 00:35:33,660
for kubernetes that's the most<font color="#E5E5E5"> recent</font>

731
00:35:29,890 --> 00:35:37,259
addition to<font color="#CCCCCC"> the support to plugins</font>

732
00:35:33,660 --> 00:35:37,259
<font color="#E5E5E5">container storage interface</font>

733
00:35:37,360 --> 00:35:42,610
currently<font color="#CCCCCC"> boats</font><font color="#E5E5E5"> are available you can</font>

734
00:35:39,160 --> 00:35:46,509
still run the<font color="#CCCCCC"> Flex forum plug-in or</font>

735
00:35:42,610 --> 00:35:51,160
driver<font color="#CCCCCC"> but we are</font><font color="#E5E5E5"> obviously recommending</font>

736
00:35:46,510 --> 00:35:56,650
to move to the CSI driver and<font color="#E5E5E5"> that's a</font>

737
00:35:51,160 --> 00:35:59,759
road map<font color="#E5E5E5"> the plan is to support setups</font>

738
00:35:56,650 --> 00:36:02,350
that<font color="#E5E5E5"> do not even use their body so</font><font color="#CCCCCC"> even</font>

739
00:35:59,760 --> 00:36:04,900
it started as a product that was

740
00:36:02,350 --> 00:36:07,120
supposed<font color="#E5E5E5"> to support</font><font color="#CCCCCC"> automatic</font>

741
00:36:04,900 --> 00:36:09,640
configuration of replicated storage<font color="#CCCCCC"> but</font>

742
00:36:07,120 --> 00:36:11,859
will also<font color="#E5E5E5"> make it available if you just</font>

743
00:36:09,640 --> 00:36:14,259
want to use<font color="#CCCCCC"> LVM on lots of clustered</font>

744
00:36:11,860 --> 00:36:18,520
nodes<font color="#CCCCCC"> or if you just want to</font><font color="#E5E5E5"> build an</font>

745
00:36:14,260 --> 00:36:21,970
<font color="#E5E5E5">Indy rate or if you want to use nvme</font>

746
00:36:18,520 --> 00:36:26,800
<font color="#CCCCCC">over fabrics</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of QE</font><font color="#E5E5E5"> or you can</font>

747
00:36:21,970 --> 00:36:30,240
<font color="#E5E5E5">even run mixed setups obviously and a</font>

748
00:36:26,800 --> 00:36:33,300
lot<font color="#E5E5E5"> of discovery for</font><font color="#CCCCCC"> hardware automatic</font>

749
00:36:30,240 --> 00:36:36,729
<font color="#E5E5E5">hardware software volume group discovery</font>

750
00:36:33,300 --> 00:36:39,460
so we're trying<font color="#E5E5E5"> to do more</font><font color="#CCCCCC"> automation in</font>

751
00:36:36,730 --> 00:36:46,390
the<font color="#E5E5E5"> product the rest api</font><font color="#CCCCCC"> are already</font>

752
00:36:39,460 --> 00:36:48,250
mentioned and that's finally a case

753
00:36:46,390 --> 00:36:50,379
<font color="#E5E5E5">study that we're running with</font><font color="#CCCCCC"> intel</font>

754
00:36:48,250 --> 00:36:55,810
<font color="#E5E5E5">pretty large company</font><font color="#CCCCCC"> i think you know</font>

755
00:36:50,380 --> 00:36:58,300
<font color="#E5E5E5">that one</font><font color="#CCCCCC"> Intel is has based its req</font>

756
00:36:55,810 --> 00:37:00,610
scale design<font color="#E5E5E5"> Intel RS e that's a big</font>

757
00:36:58,300 --> 00:37:03,520
project<font color="#CCCCCC"> that Intel that is based on lean</font>

758
00:37:00,610 --> 00:37:07,960
store<font color="#E5E5E5"> and currently also</font><font color="#CCCCCC"> TIG</font><font color="#E5E5E5"> and remove</font>

759
00:37:03,520 --> 00:37:10,300
<font color="#CCCCCC">to nvme</font><font color="#E5E5E5"> over fabrics and that has driven</font>

760
00:37:07,960 --> 00:37:12,850
much of the<font color="#CCCCCC"> development in</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> in-store</font>

761
00:37:10,300 --> 00:37:15,580
<font color="#CCCCCC">due to the requirements that</font><font color="#E5E5E5"> Intel had</font>

762
00:37:12,850 --> 00:37:18,430
with selecting<font color="#CCCCCC"> different network paths</font>

763
00:37:15,580 --> 00:37:20,710
<font color="#E5E5E5">different fire protection zones so many</font>

764
00:37:18,430 --> 00:37:23,980
of those features were driven by<font color="#CCCCCC"> real</font>

765
00:37:20,710 --> 00:37:28,000
<font color="#CCCCCC">life requirements that we had in the</font>

766
00:37:23,980 --> 00:37:29,560
project with Intel so many of those

767
00:37:28,000 --> 00:37:31,920
features have been tested<font color="#E5E5E5"> quite</font>

768
00:37:29,560 --> 00:37:33,970
thoroughly already although<font color="#CCCCCC"> we're</font>

769
00:37:31,920 --> 00:37:39,610
officially still<font color="#E5E5E5"> in the baddest</font><font color="#CCCCCC"> beta</font>

770
00:37:33,970 --> 00:37:42,069
status<font color="#E5E5E5"> but as it has been used more</font><font color="#CCCCCC"> or</font>

771
00:37:39,610 --> 00:37:46,200
<font color="#E5E5E5">less in production already by some of</font>

772
00:37:42,070 --> 00:37:51,130
our<font color="#E5E5E5"> Vanguard customers</font>

773
00:37:46,200 --> 00:37:52,810
and that's about all<font color="#CCCCCC"> about lint store</font><font color="#E5E5E5"> we</font>

774
00:37:51,130 --> 00:37:55,630
have I think<font color="#E5E5E5"> we have a few minutes for</font>

775
00:37:52,810 --> 00:37:58,330
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> three minutes so if there are</font>

776
00:37:55,630 --> 00:38:16,300
any<font color="#CCCCCC"> questions then I know it also be</font>

777
00:37:58,330 --> 00:38:18,790
<font color="#CCCCCC">available afterwards</font><font color="#E5E5E5"> outside okay so the</font>

778
00:38:16,300 --> 00:38:21,430
question<font color="#CCCCCC"> is whether there is</font><font color="#E5E5E5"> some</font>

779
00:38:18,790 --> 00:38:23,380
recommendation from<font color="#E5E5E5"> little</font><font color="#CCCCCC"> bit as to how</font>

780
00:38:21,430 --> 00:38:27,310
<font color="#E5E5E5">configure the</font><font color="#CCCCCC"> backend storage that DVD</font>

781
00:38:23,380 --> 00:38:30,130
<font color="#E5E5E5">and</font><font color="#CCCCCC"> Link store</font><font color="#E5E5E5"> uses and I'd say in</font>

782
00:38:27,310 --> 00:38:34,120
general<font color="#E5E5E5"> it depends</font><font color="#CCCCCC"> a lot on what exactly</font>

783
00:38:30,130 --> 00:38:35,920
<font color="#E5E5E5">your setup and your purpose is but so if</font>

784
00:38:34,120 --> 00:38:37,150
we know what<font color="#CCCCCC"> exactly the setup is we</font>

785
00:38:35,920 --> 00:38:39,700
would be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to make some</font>

786
00:38:37,150 --> 00:38:43,270
recommendation but generally what we see

787
00:38:39,700 --> 00:38:45,759
and<font color="#E5E5E5"> what seems good</font><font color="#CCCCCC"> to us is since you</font>

788
00:38:43,270 --> 00:38:48,640
<font color="#CCCCCC">have especially</font><font color="#E5E5E5"> in those cloud systems</font>

789
00:38:45,760 --> 00:38:51,550
since you have rather cheap<font color="#CCCCCC"> Hardware</font>

790
00:38:48,640 --> 00:38:54,220
with lots of cheap<font color="#E5E5E5"> discs and or maybe</font>

791
00:38:51,550 --> 00:38:56,560
SSDs<font color="#E5E5E5"> and you're replicating</font><font color="#CCCCCC"> two</font>

792
00:38:54,220 --> 00:38:58,930
different nodes and your entire design

793
00:38:56,560 --> 00:39:00,549
<font color="#CCCCCC">is based on the</font><font color="#E5E5E5"> idea that a single</font><font color="#CCCCCC"> node</font>

794
00:38:58,930 --> 00:39:04,359
can fail or<font color="#CCCCCC"> can</font><font color="#E5E5E5"> even get lost</font>

795
00:39:00,550 --> 00:39:08,320
permanently<font color="#CCCCCC"> it makes sense to just</font><font color="#E5E5E5"> use a</font>

796
00:39:04,360 --> 00:39:11,080
single<font color="#CCCCCC"> disc or</font><font color="#E5E5E5"> it stripe set some kind</font>

797
00:39:08,320 --> 00:39:14,290
of volume group<font color="#E5E5E5"> and that's what most</font>

798
00:39:11,080 --> 00:39:16,210
customers do<font color="#CCCCCC"> nowadays in the high</font>

799
00:39:14,290 --> 00:39:19,330
availability setups<font color="#CCCCCC"> which sometimes the</font>

800
00:39:16,210 --> 00:39:22,840
customers that even do a rate<font color="#E5E5E5"> raid 1</font>

801
00:39:19,330 --> 00:39:25,170
mirroring locally and then replicate<font color="#E5E5E5"> to</font>

802
00:39:22,840 --> 00:39:27,940
<font color="#E5E5E5">another node so that's</font><font color="#CCCCCC"> 4</font><font color="#E5E5E5"> copies already</font>

803
00:39:25,170 --> 00:39:30,340
<font color="#E5E5E5">so all of that</font><font color="#CCCCCC"> is possible it depends</font>

804
00:39:27,940 --> 00:39:34,330
very<font color="#E5E5E5"> much on</font><font color="#CCCCCC"> this setup</font><font color="#E5E5E5"> and the purpose</font>

805
00:39:30,340 --> 00:39:36,760
<font color="#E5E5E5">of your of your</font><font color="#CCCCCC"> cluster but what we see</font>

806
00:39:34,330 --> 00:39:40,299
a<font color="#E5E5E5"> lot is</font><font color="#CCCCCC"> just a bunch of disks</font>

807
00:39:36,760 --> 00:39:42,760
<font color="#E5E5E5">in various storage pools and what most</font>

808
00:39:40,300 --> 00:39:47,410
customers<font color="#CCCCCC"> also like is the ability</font><font color="#E5E5E5"> to</font>

809
00:39:42,760 --> 00:39:51,480
use different storage pools

810
00:39:47,410 --> 00:39:54,839
like either to just<font color="#E5E5E5"> organize the data or</font>

811
00:39:51,480 --> 00:39:57,880
make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that one pool if it overruns</font>

812
00:39:54,839 --> 00:40:00,279
<font color="#CCCCCC">so if it exceeds its search capacity</font>

813
00:39:57,880 --> 00:40:03,069
doesn't<font color="#E5E5E5"> stop another pool from working</font>

814
00:40:00,280 --> 00:40:05,740
correctly<font color="#E5E5E5"> or because the pools have</font>

815
00:40:03,069 --> 00:40:08,049
different<font color="#CCCCCC"> backends like a faster</font><font color="#E5E5E5"> one</font>

816
00:40:05,740 --> 00:40:13,450
based on nvme and<font color="#E5E5E5"> the slower one with</font>

817
00:40:08,049 --> 00:40:16,299
large and cheap<font color="#E5E5E5"> archive</font><font color="#CCCCCC"> hard disks turns</font>

818
00:40:13,450 --> 00:40:18,009
up<font color="#E5E5E5"> so I'll be available outside if</font>

819
00:40:16,299 --> 00:40:21,130
someone has some<font color="#E5E5E5"> additional</font><font color="#CCCCCC"> questions</font>

820
00:40:18,010 --> 00:40:24,339
and I still remember<font color="#CCCCCC"> I should ask the</font>

821
00:40:21,130 --> 00:40:27,059
audience to please<font color="#E5E5E5"> write the talk on the</font>

822
00:40:24,339 --> 00:40:27,058
foster home page

823
00:40:33,130 --> 00:40:36,579
[Applause]

