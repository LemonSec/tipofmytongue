1
00:00:04,770 --> 00:00:11,070
so<font color="#E5E5E5"> hello I'm Nick</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to talk</font>

2
00:00:09,120 --> 00:00:12,930
about what's<font color="#CCCCCC"> going on</font><font color="#E5E5E5"> on the trusted</font>

3
00:00:11,070 --> 00:00:18,300
execution<font color="#E5E5E5"> environment</font><font color="#CCCCCC"> workgroup on the</font>

4
00:00:12,930 --> 00:00:20,970
risk<font color="#CCCCCC"> 5 foundation so first of all what</font>

5
00:00:18,300 --> 00:00:22,380
<font color="#CCCCCC">is the war group so the foundation has</font>

6
00:00:20,970 --> 00:00:23,939
some committees there is this<font color="#CCCCCC"> technical</font>

7
00:00:22,380 --> 00:00:26,189
<font color="#CCCCCC">committee world the working groups of</font>

8
00:00:23,939 --> 00:00:27,810
task groups are in that doing technical

9
00:00:26,189 --> 00:00:29,849
stuff<font color="#CCCCCC"> and there are some other</font>

10
00:00:27,810 --> 00:00:31,979
committees like<font color="#CCCCCC"> a Marketing Committee or</font>

11
00:00:29,849 --> 00:00:33,870
the<font color="#E5E5E5"> Outreach Committee</font><font color="#CCCCCC"> so there's also</font>

12
00:00:31,980 --> 00:00:37,199
the standing the<font color="#E5E5E5"> security standing</font>

13
00:00:33,870 --> 00:00:39,629
committee that deals with<font color="#E5E5E5"> security in a</font>

14
00:00:37,199 --> 00:00:42,300
larger like perspective<font color="#E5E5E5"> so it's not</font>

15
00:00:39,629 --> 00:00:46,218
<font color="#E5E5E5">security is not only a technical</font><font color="#CCCCCC"> thing</font>

16
00:00:42,300 --> 00:00:48,510
<font color="#E5E5E5">it's also matters for like they try to</font>

17
00:00:46,219 --> 00:00:51,329
create policies<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example or</font>

18
00:00:48,510 --> 00:00:53,248
guidelines so these two<font color="#E5E5E5"> groups they</font>

19
00:00:51,329 --> 00:00:55,019
interact<font color="#E5E5E5"> with the security we have the</font>

20
00:00:53,249 --> 00:00:56,879
trust<font color="#E5E5E5"> execution environment there's also</font>

21
00:00:55,019 --> 00:01:00,140
the cryptographic extensions work group

22
00:00:56,879 --> 00:01:02,190
that<font color="#E5E5E5"> works on extensions for</font><font color="#CCCCCC"> an</font>

23
00:01:00,140 --> 00:01:04,710
<font color="#E5E5E5">accelerating or implementing</font>

24
00:01:02,190 --> 00:01:06,600
<font color="#E5E5E5">cryptographic algorithms and hashing out</font>

25
00:01:04,709 --> 00:01:09,780
those you<font color="#CCCCCC"> know those</font><font color="#E5E5E5"> well-known</font>

26
00:01:06,600 --> 00:01:11,699
primitives<font color="#E5E5E5"> and these</font><font color="#CCCCCC"> two technical for</font>

27
00:01:09,780 --> 00:01:14,070
now we may we might have more in the

28
00:01:11,700 --> 00:01:15,329
future<font color="#CCCCCC"> these two work groups</font><font color="#E5E5E5"> that are</font>

29
00:01:14,070 --> 00:01:16,860
part<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> Technical Committee they</font>

30
00:01:15,329 --> 00:01:20,729
interact<font color="#CCCCCC"> with the security standing</font>

31
00:01:16,860 --> 00:01:22,530
committee and then for example<font color="#E5E5E5"> we</font>

32
00:01:20,729 --> 00:01:28,500
usually have<font color="#E5E5E5"> some we have</font><font color="#CCCCCC"> some tutorials</font>

33
00:01:22,530 --> 00:01:31,219
<font color="#E5E5E5">going on some it's it's a process for</font>

34
00:01:28,500 --> 00:01:35,369
like creating not<font color="#CCCCCC"> only technical</font>

35
00:01:31,219 --> 00:01:39,449
solutions but<font color="#E5E5E5"> also like policy solutions</font>

36
00:01:35,369 --> 00:01:41,670
<font color="#E5E5E5">so what's a task group so it's a</font><font color="#CCCCCC"> it's</font>

37
00:01:39,450 --> 00:01:45,180
task has arrived we have a working<font color="#E5E5E5"> space</font>

38
00:01:41,670 --> 00:01:48,170
and this<font color="#E5E5E5"> is one</font><font color="#CCCCCC"> of the largest task</font>

39
00:01:45,180 --> 00:01:50,310
groups right now<font color="#E5E5E5"> on the foundation and</font>

40
00:01:48,170 --> 00:01:52,530
initially there<font color="#E5E5E5"> were two groups that it</font>

41
00:01:50,310 --> 00:01:53,820
was both the<font color="#CCCCCC"> cryptographic extensions</font>

42
00:01:52,530 --> 00:01:55,859
and the<font color="#CCCCCC"> truss the execution environment</font>

43
00:01:53,820 --> 00:01:58,639
I<font color="#E5E5E5"> went the same group and it was the</font>

44
00:01:55,859 --> 00:02:01,169
<font color="#CCCCCC">largest group so they split it and</font>

45
00:01:58,640 --> 00:02:03,509
because security<font color="#E5E5E5"> seems to be a big thing</font>

46
00:02:01,170 --> 00:02:06,380
<font color="#E5E5E5">I mean a lot of people participated</font>

47
00:02:03,509 --> 00:02:09,060
<font color="#E5E5E5">these working groups and we have like a</font>

48
00:02:06,380 --> 00:02:13,769
112 registered members which is a lot of

49
00:02:09,060 --> 00:02:16,500
people we work easily by conference

50
00:02:13,770 --> 00:02:18,390
calls like<font color="#E5E5E5"> one so try it like two twice</font>

51
00:02:16,500 --> 00:02:22,590
a month or maybe more frequently

52
00:02:18,390 --> 00:02:23,970
and we also have a mailing list<font color="#CCCCCC"> so the</font>

53
00:02:22,590 --> 00:02:26,070
mission<font color="#E5E5E5"> of this working</font><font color="#CCCCCC"> group is to</font>

54
00:02:23,970 --> 00:02:27,600
define an architecture specification for

55
00:02:26,070 --> 00:02:29,640
trusted execution environmental risk

56
00:02:27,600 --> 00:02:32,160
<font color="#CCCCCC">five processors</font><font color="#E5E5E5"> let's start with that so</font>

57
00:02:29,640 --> 00:02:32,760
<font color="#E5E5E5">you know arm has trust</font><font color="#CCCCCC"> zone</font><font color="#E5E5E5"> intel has</font>

58
00:02:32,160 --> 00:02:35,010
<font color="#CCCCCC">SGX</font>

59
00:02:32,760 --> 00:02:38,220
we want<font color="#E5E5E5"> something similar for is</font><font color="#CCCCCC"> five</font>

60
00:02:35,010 --> 00:02:39,570
and<font color="#E5E5E5"> we want not</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> to provide them</font>

61
00:02:38,220 --> 00:02:42,270
<font color="#CCCCCC">mechanisms for trusted execution</font>

62
00:02:39,570 --> 00:02:46,040
<font color="#CCCCCC">environments to</font><font color="#E5E5E5"> be initialized but to</font>

63
00:02:42,270 --> 00:02:51,209
discuss other aspects of how to<font color="#E5E5E5"> protect</font>

64
00:02:46,040 --> 00:02:53,070
flow<font color="#E5E5E5"> and execution flow and also it's</font>

65
00:02:51,209 --> 00:02:54,870
<font color="#E5E5E5">not because we're talking about the</font>

66
00:02:53,070 --> 00:02:57,959
<font color="#E5E5E5">standard we're not only</font><font color="#CCCCCC"> we're talking</font>

67
00:02:54,870 --> 00:03:04,020
about creating<font color="#CCCCCC"> a pea eyesore specs we do</font>

68
00:02:57,959 --> 00:03:05,700
not our<font color="#CCCCCC"> goal is not only to do</font><font color="#E5E5E5"> - it's</font>

69
00:03:04,020 --> 00:03:07,440
not<font color="#CCCCCC"> to provide one solution like one</font>

70
00:03:05,700 --> 00:03:09,560
<font color="#CCCCCC">implementation for everybody but to give</font>

71
00:03:07,440 --> 00:03:11,579
some set<font color="#E5E5E5"> of guidelines and</font>

72
00:03:09,560 --> 00:03:13,860
specifications<font color="#E5E5E5"> for them to implement or</font>

73
00:03:11,580 --> 00:03:18,390
how things are<font color="#CCCCCC"> based are done in a</font>

74
00:03:13,860 --> 00:03:20,610
secure way and risk<font color="#CCCCCC"> five and we want</font>

75
00:03:18,390 --> 00:03:22,500
also to<font color="#E5E5E5"> provide like some reference</font>

76
00:03:20,610 --> 00:03:25,500
implementations like<font color="#E5E5E5"> an SDK or something</font>

77
00:03:22,500 --> 00:03:27,030
so<font color="#CCCCCC"> that people can use that as a base to</font>

78
00:03:25,500 --> 00:03:29,519
<font color="#E5E5E5">create their own stuff something like</font>

79
00:03:27,030 --> 00:03:35,670
the open<font color="#CCCCCC"> SBI we want</font><font color="#E5E5E5"> something similar</font>

80
00:03:29,519 --> 00:03:37,160
for a secure monitor okay so what we are

81
00:03:35,670 --> 00:03:40,679
working<font color="#E5E5E5"> right now they have some</font>

82
00:03:37,160 --> 00:03:44,299
proposals on<font color="#CCCCCC"> the hardware front</font><font color="#E5E5E5"> that we</font>

83
00:03:40,680 --> 00:03:49,110
want to<font color="#E5E5E5"> change some things there that</font>

84
00:03:44,299 --> 00:03:53,549
<font color="#CCCCCC">will help will help in our in our</font>

85
00:03:49,110 --> 00:03:55,230
<font color="#CCCCCC">mission</font><font color="#E5E5E5"> and so first of</font><font color="#CCCCCC"> all we have some</font>

86
00:03:53,549 --> 00:03:57,239
modifications of the physical<font color="#E5E5E5"> memory</font>

87
00:03:55,230 --> 00:04:00,359
<font color="#E5E5E5">protection mechanism going to explain</font>

88
00:03:57,239 --> 00:04:03,080
what<font color="#E5E5E5"> this is and the physical memory</font>

89
00:04:00,360 --> 00:04:05,519
protection mechanic has helps isolate

90
00:04:03,080 --> 00:04:08,489
processes execution environments let's

91
00:04:05,519 --> 00:04:10,380
say context is from each other but it's

92
00:04:08,489 --> 00:04:12,750
not<font color="#CCCCCC"> lis</font><font color="#E5E5E5"> it's you know the virtual memory</font>

93
00:04:10,380 --> 00:04:14,040
that you have another space identified

94
00:04:12,750 --> 00:04:16,680
and when you do a context<font color="#E5E5E5"> switch you</font>

95
00:04:14,040 --> 00:04:18,329
change the<font color="#CCCCCC"> address space</font><font color="#E5E5E5"> here we</font><font color="#CCCCCC"> are</font>

96
00:04:16,680 --> 00:04:21,750
<font color="#E5E5E5">talking about physical memory protection</font>

97
00:04:18,329 --> 00:04:24,150
<font color="#E5E5E5">so it happens independently of the</font>

98
00:04:21,750 --> 00:04:25,950
memory translation so and it<font color="#E5E5E5"> also works</font>

99
00:04:24,150 --> 00:04:29,130
for machine machine mode<font color="#E5E5E5"> doesn't have</font>

100
00:04:25,950 --> 00:04:32,159
<font color="#E5E5E5">virtual address translation again uses</font>

101
00:04:29,130 --> 00:04:34,350
physical addresses<font color="#CCCCCC"> so we also want some</font>

102
00:04:32,160 --> 00:04:37,290
some<font color="#E5E5E5"> way these mechanisms also protects</font>

103
00:04:34,350 --> 00:04:42,570
is able to protect<font color="#E5E5E5"> regions one when you</font>

104
00:04:37,290 --> 00:04:44,790
are running<font color="#CCCCCC"> on</font><font color="#E5E5E5"> machine mode so this</font>

105
00:04:42,570 --> 00:04:47,190
<font color="#E5E5E5">mechanism economy is pretty strong okay</font>

106
00:04:44,790 --> 00:04:51,450
because<font color="#CCCCCC"> it happens on physical memory</font>

107
00:04:47,190 --> 00:04:54,570
<font color="#E5E5E5">it's like you know probably what arm</font>

108
00:04:51,450 --> 00:04:57,060
does for<font color="#CCCCCC"> trustzone it has a security and</font>

109
00:04:54,570 --> 00:05:01,080
<font color="#E5E5E5">an area of your memory that supervisor</font>

110
00:04:57,060 --> 00:05:03,560
<font color="#E5E5E5">cannot touch</font><font color="#CCCCCC"> similarly here you can have</font>

111
00:05:01,080 --> 00:05:05,760
like fees it's a physical region<font color="#E5E5E5"> that</font>

112
00:05:03,560 --> 00:05:07,980
applications cannot<font color="#E5E5E5"> touch unless there</font>

113
00:05:05,760 --> 00:05:11,010
is a specific register set that allows

114
00:05:07,980 --> 00:05:13,310
that so<font color="#E5E5E5"> basically what you</font><font color="#CCCCCC"> can do is go</font>

115
00:05:11,010 --> 00:05:15,659
<font color="#E5E5E5">and protect the physical memory region</font>

116
00:05:13,310 --> 00:05:17,640
<font color="#E5E5E5">when your</font><font color="#CCCCCC"> application that</font><font color="#E5E5E5"> you want to</font>

117
00:05:15,660 --> 00:05:19,650
protect<font color="#CCCCCC"> is not running so that anyone</font>

118
00:05:17,640 --> 00:05:21,870
<font color="#E5E5E5">that goes that tries to</font><font color="#CCCCCC"> touch this</font>

119
00:05:19,650 --> 00:05:24,359
physical memory region either through

120
00:05:21,870 --> 00:05:26,370
<font color="#CCCCCC">Modi translation or</font><font color="#E5E5E5"> directly will get a</font>

121
00:05:24,360 --> 00:05:28,050
fault<font color="#E5E5E5"> and when you want to run your</font>

122
00:05:26,370 --> 00:05:29,520
application<font color="#E5E5E5"> you will have a secure</font>

123
00:05:28,050 --> 00:05:32,010
<font color="#E5E5E5">monitor that will go and remove this</font>

124
00:05:29,520 --> 00:05:34,890
<font color="#E5E5E5">protection so your application</font><font color="#CCCCCC"> runs now</font>

125
00:05:32,010 --> 00:05:37,800
it can see its own memory<font color="#E5E5E5"> and then you</font>

126
00:05:34,890 --> 00:05:41,880
revert back<font color="#E5E5E5"> that's one of the uses of</font>

127
00:05:37,800 --> 00:05:45,150
the<font color="#CCCCCC"> PMP so okay we can we</font><font color="#E5E5E5"> have a</font>

128
00:05:41,880 --> 00:05:46,590
<font color="#E5E5E5">mechanism that protects applications or</font>

129
00:05:45,150 --> 00:05:48,830
execution<font color="#E5E5E5"> environments from each other</font>

130
00:05:46,590 --> 00:05:51,090
but<font color="#E5E5E5"> we also want a mechanism for</font>

131
00:05:48,830 --> 00:05:55,409
<font color="#E5E5E5">isolating devices from each other now</font>

132
00:05:51,090 --> 00:05:58,049
this is not part of the of the<font color="#CCCCCC"> core so</font>

133
00:05:55,410 --> 00:06:00,180
and our job here<font color="#CCCCCC"> is to</font><font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about the</font>

134
00:05:58,050 --> 00:06:01,950
eyes so this is not part<font color="#E5E5E5"> something that</font>

135
00:06:00,180 --> 00:06:04,470
we would expect to see in either because

136
00:06:01,950 --> 00:06:07,530
it doesn't have to do with with one

137
00:06:04,470 --> 00:06:11,310
heart<font color="#E5E5E5"> or there is five core but we want</font>

138
00:06:07,530 --> 00:06:15,380
to have we won't have<font color="#E5E5E5"> a proposal for in</font>

139
00:06:11,310 --> 00:06:18,570
vendors that will implement<font color="#E5E5E5"> a risk 5</font>

140
00:06:15,380 --> 00:06:21,300
system on chips<font color="#E5E5E5"> on isolating devices</font>

141
00:06:18,570 --> 00:06:22,440
from<font color="#E5E5E5"> each other so the same way you guys</font>

142
00:06:21,300 --> 00:06:23,850
are<font color="#CCCCCC"> we</font><font color="#E5E5E5"> has a little process the</font>

143
00:06:22,440 --> 00:06:26,190
unification environment we have we want

144
00:06:23,850 --> 00:06:27,750
<font color="#E5E5E5">to protect the memory from other devices</font>

145
00:06:26,190 --> 00:06:30,180
because there are attack vectors when

146
00:06:27,750 --> 00:06:32,790
you can use another device from<font color="#CCCCCC"> Mac for</font>

147
00:06:30,180 --> 00:06:35,490
accessing<font color="#CCCCCC"> the memory</font><font color="#E5E5E5"> so let's say that</font>

148
00:06:32,790 --> 00:06:37,230
your CPU now has PNP there it cannot

149
00:06:35,490 --> 00:06:39,240
touch the memory<font color="#E5E5E5"> but your graphics card</font>

150
00:06:37,230 --> 00:06:41,580
can<font color="#E5E5E5"> do that or another DMA anything that</font>

151
00:06:39,240 --> 00:06:45,720
do that<font color="#E5E5E5"> for</font><font color="#CCCCCC"> you can use another</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> third</font>

152
00:06:41,580 --> 00:06:47,849
<font color="#E5E5E5">party device to bypass this mechanic so</font>

153
00:06:45,720 --> 00:06:50,460
we have to<font color="#E5E5E5"> also protect to us provide</font>

154
00:06:47,850 --> 00:06:52,950
<font color="#E5E5E5">the relation between devices</font><font color="#CCCCCC"> the last</font>

155
00:06:50,460 --> 00:06:56,190
thing is<font color="#E5E5E5"> also I told you about</font>

156
00:06:52,950 --> 00:06:58,920
protecting<font color="#CCCCCC"> the flow of</font><font color="#E5E5E5"> an application</font>

157
00:06:56,190 --> 00:07:00,750
now when he let's say there is<font color="#CCCCCC"> a bug on</font>

158
00:06:58,920 --> 00:07:02,700
<font color="#E5E5E5">your on your code and someone can do</font>

159
00:07:00,750 --> 00:07:05,490
buffer overflow and override your return

160
00:07:02,700 --> 00:07:08,159
address<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a usual this is</font><font color="#CCCCCC"> a common</font>

161
00:07:05,490 --> 00:07:11,460
scenario when doing<font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> development</font>

162
00:07:08,160 --> 00:07:14,100
so this is what messes up your<font color="#E5E5E5"> control</font>

163
00:07:11,460 --> 00:07:16,049
flow so what we want<font color="#E5E5E5"> is to do discuss</font>

164
00:07:14,100 --> 00:07:18,330
<font color="#E5E5E5">about a control flow integrity extension</font>

165
00:07:16,050 --> 00:07:21,300
so this way if someone tries to override

166
00:07:18,330 --> 00:07:26,039
<font color="#E5E5E5">your return address he or she won't be</font>

167
00:07:21,300 --> 00:07:27,450
<font color="#E5E5E5">able to make it there are some arm</font><font color="#CCCCCC"> has</font>

168
00:07:26,040 --> 00:07:29,340
something<font color="#CCCCCC"> similar and I think endo has</font>

169
00:07:27,450 --> 00:07:31,440
implemented<font color="#E5E5E5"> something similar we</font><font color="#CCCCCC"> are</font>

170
00:07:29,340 --> 00:07:33,840
talking about<font color="#CCCCCC"> I will explain a bit about</font>

171
00:07:31,440 --> 00:07:35,400
<font color="#E5E5E5">it later</font><font color="#CCCCCC"> so this is on the hardware side</font>

172
00:07:33,840 --> 00:07:38,609
I'm<font color="#E5E5E5"> gonna talk about it about these</font>

173
00:07:35,400 --> 00:07:42,330
things a bit more lately<font color="#CCCCCC"> later on and on</font>

174
00:07:38,610 --> 00:07:45,630
the software<font color="#CCCCCC"> side again</font><font color="#E5E5E5"> this is not part</font>

175
00:07:42,330 --> 00:07:47,400
of the<font color="#CCCCCC"> ISA as the SBI is also not part</font>

176
00:07:45,630 --> 00:07:49,980
of the I say but<font color="#E5E5E5"> we are we want</font><font color="#CCCCCC"> to</font>

177
00:07:47,400 --> 00:07:52,710
<font color="#E5E5E5">provide an architecture on how a secure</font>

178
00:07:49,980 --> 00:07:55,320
monitor will be implemented<font color="#CCCCCC"> like the</font>

179
00:07:52,710 --> 00:07:57,239
same way you have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> call from the</font>

180
00:07:55,320 --> 00:08:00,840
supervisor<font color="#E5E5E5"> to the firmware for example</font>

181
00:07:57,240 --> 00:08:04,680
for through the SBI to do to trigger a

182
00:08:00,840 --> 00:08:07,409
timer or to do a remote fence<font color="#E5E5E5"> or an IP I</font>

183
00:08:04,680 --> 00:08:08,970
<font color="#CCCCCC">we would want to</font><font color="#E5E5E5"> have an API</font><font color="#CCCCCC"> that would</font>

184
00:08:07,410 --> 00:08:12,780
say that<font color="#CCCCCC"> would come from</font><font color="#E5E5E5"> the supervisor</font>

185
00:08:08,970 --> 00:08:16,919
<font color="#E5E5E5">or</font><font color="#CCCCCC"> the hypervisor or</font><font color="#E5E5E5"> from an application</font>

186
00:08:12,780 --> 00:08:18,750
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the firmware to do something to mess</font>

187
00:08:16,919 --> 00:08:21,990
with<font color="#E5E5E5"> this p.m. the physical memory</font>

188
00:08:18,750 --> 00:08:24,270
protection registers to allow<font color="#E5E5E5"> isolation</font>

189
00:08:21,990 --> 00:08:26,610
<font color="#E5E5E5">and to modify as relation settings or do</font>

190
00:08:24,270 --> 00:08:30,000
something in firmware that<font color="#CCCCCC"> you don't</font>

191
00:08:26,610 --> 00:08:32,219
want<font color="#E5E5E5"> to do in a in</font><font color="#CCCCCC"> the more let's say in</font>

192
00:08:30,000 --> 00:08:35,760
a less trustworthy space for think of

193
00:08:32,219 --> 00:08:35,969
trusted on again<font color="#CCCCCC"> our oops</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> talked too</font>

194
00:08:35,760 --> 00:08:39,929
much

195
00:08:35,969 --> 00:08:42,479
so think of trust zone on<font color="#CCCCCC"> our okay you</font>

196
00:08:39,929 --> 00:08:44,098
have the you have<font color="#E5E5E5"> the some services</font>

197
00:08:42,479 --> 00:08:46,350
<font color="#E5E5E5">running on firmware</font><font color="#CCCCCC"> that for example</font><font color="#E5E5E5"> can</font>

198
00:08:44,099 --> 00:08:48,120
access<font color="#CCCCCC"> access cribs</font><font color="#E5E5E5"> accelerators or car</font>

199
00:08:46,350 --> 00:08:50,400
access<font color="#E5E5E5"> private keys because they can</font>

200
00:08:48,120 --> 00:08:52,050
read if<font color="#E5E5E5"> uses because they are on this</font>

201
00:08:50,400 --> 00:08:54,930
<font color="#E5E5E5">type</font><font color="#CCCCCC"> little privilege level</font><font color="#E5E5E5"> the</font>

202
00:08:52,050 --> 00:08:57,630
equivalent of<font color="#CCCCCC"> our machine mode</font><font color="#E5E5E5"> so for</font>

203
00:08:54,930 --> 00:09:00,899
<font color="#E5E5E5">example let's say that someone</font><font color="#CCCCCC"> comes</font>

204
00:08:57,630 --> 00:09:02,490
<font color="#E5E5E5">to want to ask the firmware for to</font>

205
00:09:00,899 --> 00:09:03,930
encrypt something<font color="#E5E5E5"> using these secret</font>

206
00:09:02,490 --> 00:09:06,180
<font color="#E5E5E5">keys that no one else can see because</font>

207
00:09:03,930 --> 00:09:08,880
firmware runs on machine mode<font color="#E5E5E5"> we want to</font>

208
00:09:06,180 --> 00:09:15,719
have an API for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> or for</font><font color="#CCCCCC"> an API for</font>

209
00:09:08,880 --> 00:09:17,370
writing<font color="#E5E5E5"> programs like</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and of course</font>

210
00:09:15,720 --> 00:09:19,470
<font color="#CCCCCC">together</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> the API it goes to the</font>

211
00:09:17,370 --> 00:09:21,920
whole design<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> lots of things I'm</font>

212
00:09:19,470 --> 00:09:24,060
going<font color="#E5E5E5"> to give you an idea later on so</font>

213
00:09:21,920 --> 00:09:25,560
let's say let's<font color="#E5E5E5"> talk a bit about the</font>

214
00:09:24,060 --> 00:09:28,560
physical memory protection what we have

215
00:09:25,560 --> 00:09:31,649
right now<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it's part it's a part of</font>

216
00:09:28,560 --> 00:09:33,300
the<font color="#E5E5E5"> machine</font><font color="#CCCCCC"> I so your your core needs to</font>

217
00:09:31,649 --> 00:09:35,759
<font color="#CCCCCC">implement</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> privilege spec for this to</font>

218
00:09:33,300 --> 00:09:39,329
be there and the<font color="#E5E5E5"> privilege spec says</font>

219
00:09:35,759 --> 00:09:41,490
that you have like up<font color="#E5E5E5"> to 16 regions to</font>

220
00:09:39,329 --> 00:09:43,589
protect but<font color="#E5E5E5"> vendors are free to</font>

221
00:09:41,490 --> 00:09:45,329
implement<font color="#E5E5E5"> more or less okay you go and</font>

222
00:09:43,589 --> 00:09:48,269
for<font color="#E5E5E5"> example the</font><font color="#CCCCCC"> SyFy board has</font><font color="#E5E5E5"> eight</font>

223
00:09:45,329 --> 00:09:50,160
which is enough<font color="#E5E5E5"> other vendors might</font>

224
00:09:48,269 --> 00:09:54,329
implement more regions there the ideas

225
00:09:50,160 --> 00:09:55,709
so the mechanism is the<font color="#CCCCCC"> same and</font><font color="#E5E5E5"> also by</font>

226
00:09:54,329 --> 00:09:57,449
the way<font color="#CCCCCC"> the privilege spec allows the</font>

227
00:09:55,709 --> 00:10:00,569
vendors to<font color="#E5E5E5"> implement another</font><font color="#CCCCCC"> mechanism</font>

228
00:09:57,449 --> 00:10:05,370
for physical memory protection it's this

229
00:10:00,569 --> 00:10:07,649
is just this<font color="#E5E5E5"> is the standard one</font><font color="#CCCCCC"> so the</font>

230
00:10:05,370 --> 00:10:09,329
the so think of it<font color="#E5E5E5"> as IP tables but</font>

231
00:10:07,649 --> 00:10:13,019
instead of<font color="#E5E5E5"> IP addresses you're having</font>

232
00:10:09,329 --> 00:10:14,729
memory addresses<font color="#E5E5E5"> okay so when someone</font>

233
00:10:13,019 --> 00:10:17,189
<font color="#E5E5E5">goes to write or read or execute</font>

234
00:10:14,730 --> 00:10:19,560
something<font color="#E5E5E5"> on memory</font><font color="#CCCCCC"> it starts it passes</font>

235
00:10:17,189 --> 00:10:21,899
through<font color="#E5E5E5"> this firewall and this firewall</font>

236
00:10:19,560 --> 00:10:25,619
is for<font color="#E5E5E5"> 32-bit addresses on the third is</font>

237
00:10:21,899 --> 00:10:27,660
a 32-bit<font color="#CCCCCC"> described and 456 bit</font><font color="#E5E5E5"> addresses</font>

238
00:10:25,620 --> 00:10:30,800
on our<font color="#CCCCCC"> V 64</font><font color="#E5E5E5"> you don't get the full</font>

239
00:10:27,660 --> 00:10:34,980
physical<font color="#E5E5E5"> other thing you get</font><font color="#CCCCCC"> 51st</font><font color="#E5E5E5"> so</font>

240
00:10:30,800 --> 00:10:38,849
even on 64-bit<font color="#CCCCCC"> the CPU you get 56 bits</font>

241
00:10:34,980 --> 00:10:42,180
of physical address addressable<font color="#CCCCCC"> there</font>

242
00:10:38,850 --> 00:10:44,579
are<font color="#E5E5E5"> four ways of marking and address</font>

243
00:10:42,180 --> 00:10:48,599
<font color="#E5E5E5">these addressing matching modes here are</font>

244
00:10:44,579 --> 00:10:50,969
some examples<font color="#E5E5E5"> on its how how you</font>

245
00:10:48,600 --> 00:10:52,500
<font color="#E5E5E5">describe because you want to describe a</font>

246
00:10:50,970 --> 00:10:54,600
<font color="#E5E5E5">range of</font><font color="#CCCCCC"> addresses</font><font color="#E5E5E5"> okay you don't want</font>

247
00:10:52,500 --> 00:10:56,519
like one specific address so there are

248
00:10:54,600 --> 00:10:59,100
some there<font color="#E5E5E5"> are some also</font><font color="#CCCCCC"> describe this</font>

249
00:10:56,519 --> 00:11:01,500
range of<font color="#E5E5E5"> addresses you</font><font color="#CCCCCC"> can have like you</font>

250
00:10:59,100 --> 00:11:06,750
can describe<font color="#E5E5E5"> it in one read in one in</font>

251
00:11:01,500 --> 00:11:09,930
one register<font color="#E5E5E5"> by having this wherever</font>

252
00:11:06,750 --> 00:11:10,790
having this this<font color="#E5E5E5"> natural</font><font color="#CCCCCC"> allowing power</font>

253
00:11:09,930 --> 00:11:13,579
of to read

254
00:11:10,790 --> 00:11:16,250
for example all<font color="#CCCCCC"> you might want</font><font color="#E5E5E5"> to split</font>

255
00:11:13,580 --> 00:11:18,830
it<font color="#E5E5E5"> to say start</font><font color="#CCCCCC"> and end so</font><font color="#E5E5E5"> you need two</font>

256
00:11:16,250 --> 00:11:23,240
registers<font color="#CCCCCC"> to to talk about to describe</font>

257
00:11:18,830 --> 00:11:24,620
the register range<font color="#CCCCCC"> and these are the</font>

258
00:11:23,240 --> 00:11:26,060
bits<font color="#E5E5E5"> you have on needs of the</font>

259
00:11:24,620 --> 00:11:28,850
configuration registers what you can

260
00:11:26,060 --> 00:11:31,010
what permissions<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can assign</font><font color="#E5E5E5"> when an</font>

261
00:11:28,850 --> 00:11:32,710
address matches<font color="#E5E5E5"> and you can assign</font><font color="#CCCCCC"> their</font>

262
00:11:31,010 --> 00:11:35,689
read write and execute permission and

263
00:11:32,710 --> 00:11:37,790
<font color="#CCCCCC">there's all they're</font><font color="#E5E5E5"> also these these</font>

264
00:11:35,690 --> 00:11:42,170
<font color="#CCCCCC">other bits here</font><font color="#E5E5E5"> I'll talk about the</font>

265
00:11:37,790 --> 00:11:45,770
local<font color="#CCCCCC"> bit later on</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you get the idea</font>

266
00:11:42,170 --> 00:11:51,469
this is<font color="#E5E5E5"> a logical diagram of how PNP</font>

267
00:11:45,770 --> 00:11:53,050
works<font color="#CCCCCC"> it seems a bit complicated</font><font color="#E5E5E5"> I have</font>

268
00:11:51,470 --> 00:11:57,460
it here<font color="#CCCCCC"> for your reference</font><font color="#E5E5E5"> because I</font>

269
00:11:53,050 --> 00:12:00,079
understand<font color="#E5E5E5"> that this is not readable but</font>

270
00:11:57,460 --> 00:12:03,050
what I want you<font color="#CCCCCC"> to get from this is</font><font color="#E5E5E5"> that</font>

271
00:12:00,080 --> 00:12:04,610
the PMP behaves differently when you are

272
00:12:03,050 --> 00:12:08,839
on machine mode and when you're<font color="#E5E5E5"> on other</font>

273
00:12:04,610 --> 00:12:12,590
<font color="#E5E5E5">on</font><font color="#CCCCCC"> supervisor and user mode so when you</font>

274
00:12:08,840 --> 00:12:13,910
have a rule<font color="#E5E5E5"> when you have in the current</font>

275
00:12:12,590 --> 00:12:16,370
spec<font color="#E5E5E5"> because I want to tell you about</font>

276
00:12:13,910 --> 00:12:19,160
why we<font color="#E5E5E5"> want to</font><font color="#CCCCCC"> modify this in the</font>

277
00:12:16,370 --> 00:12:21,380
current spec when you get a<font color="#E5E5E5"> request for</font>

278
00:12:19,160 --> 00:12:24,290
an address<font color="#CCCCCC"> it goes through this firewall</font>

279
00:12:21,380 --> 00:12:26,270
<font color="#CCCCCC">and then the PMP mechanism sees if you</font>

280
00:12:24,290 --> 00:12:28,520
are a machine mode or not<font color="#E5E5E5"> so if you are</font>

281
00:12:26,270 --> 00:12:31,939
in machine mode and there is no<font color="#CCCCCC"> match</font>

282
00:12:28,520 --> 00:12:34,130
the you get a successful<font color="#CCCCCC"> it allows you</font>

283
00:12:31,940 --> 00:12:36,140
<font color="#E5E5E5">to access the memory so let's say that I</font>

284
00:12:34,130 --> 00:12:38,060
want<font color="#E5E5E5"> to add</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> practice and an address</font>

285
00:12:36,140 --> 00:12:39,500
range that is not there is no rule for

286
00:12:38,060 --> 00:12:41,989
<font color="#CCCCCC">that</font><font color="#E5E5E5"> address range when you're on</font>

287
00:12:39,500 --> 00:12:43,790
machine mode this will succeed when you

288
00:12:41,990 --> 00:12:52,040
<font color="#CCCCCC">are not</font><font color="#E5E5E5"> on machine mode this</font><font color="#CCCCCC"> will fail</font>

289
00:12:43,790 --> 00:12:55,010
by default which is<font color="#CCCCCC"> a it makes sense</font><font color="#E5E5E5"> but</font>

290
00:12:52,040 --> 00:12:57,469
the other thing is<font color="#CCCCCC"> that if there is a</font>

291
00:12:55,010 --> 00:13:00,770
rule for<font color="#CCCCCC"> that</font><font color="#E5E5E5"> range in its environment</font>

292
00:12:57,470 --> 00:13:02,450
in mode you will still succeed so

293
00:13:00,770 --> 00:13:05,449
basically for machine model<font color="#E5E5E5"> which</font>

294
00:13:02,450 --> 00:13:07,700
succeeds<font color="#E5E5E5"> the only way for machine mode</font>

295
00:13:05,450 --> 00:13:10,130
to have<font color="#E5E5E5"> a rule right now that prevents</font>

296
00:13:07,700 --> 00:13:12,440
<font color="#E5E5E5">it from</font><font color="#CCCCCC"> doing something is for the rule</font>

297
00:13:10,130 --> 00:13:14,780
to<font color="#CCCCCC"> be locked so right now we</font><font color="#E5E5E5"> don't have</font>

298
00:13:12,440 --> 00:13:17,510
<font color="#E5E5E5">the</font><font color="#CCCCCC"> option of</font><font color="#E5E5E5"> having temporary rules</font>

299
00:13:14,780 --> 00:13:20,630
<font color="#E5E5E5">locked locked rule is a rule with the AL</font>

300
00:13:17,510 --> 00:13:22,550
bit here set and it means<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> rule</font>

301
00:13:20,630 --> 00:13:25,010
stays there permanently you cannot you

302
00:13:22,550 --> 00:13:27,139
cannot touch<font color="#CCCCCC"> its read the registers that</font>

303
00:13:25,010 --> 00:13:29,899
describe<font color="#E5E5E5"> this rule you</font><font color="#CCCCCC"> need to hardware</font>

304
00:13:27,139 --> 00:13:34,730
to do a hard<font color="#CCCCCC"> reset on the heart</font><font color="#E5E5E5"> or the</font>

305
00:13:29,899 --> 00:13:36,050
<font color="#CCCCCC">hardware thread PMP by the way is per</font>

306
00:13:34,730 --> 00:13:39,010
<font color="#E5E5E5">heart so you have a different set of</font>

307
00:13:36,050 --> 00:13:46,060
registers for every heart<font color="#E5E5E5"> you have</font>

308
00:13:39,010 --> 00:13:48,680
<font color="#CCCCCC">Hardware thread or core if you like so</font>

309
00:13:46,060 --> 00:13:52,750
when<font color="#E5E5E5"> you so right now when you're on</font>

310
00:13:48,680 --> 00:13:55,430
machine mode which is these blocks here

311
00:13:52,750 --> 00:13:58,220
unless<font color="#E5E5E5"> a rule is locked is permanently</font>

312
00:13:55,430 --> 00:14:00,410
it will<font color="#E5E5E5"> always succeed you will bypass</font>

313
00:13:58,220 --> 00:14:03,529
<font color="#CCCCCC">the rule</font><font color="#E5E5E5"> so we want to be able to have</font>

314
00:14:00,410 --> 00:14:06,019
rules<font color="#E5E5E5"> on machine modes that will be</font>

315
00:14:03,529 --> 00:14:08,029
enforced and<font color="#CCCCCC"> that can be removed</font><font color="#E5E5E5"> that</font>

316
00:14:06,019 --> 00:14:11,660
<font color="#E5E5E5">can be temporary</font><font color="#CCCCCC"> that's one thing the</font>

317
00:14:08,029 --> 00:14:14,660
other<font color="#CCCCCC"> thing we want</font><font color="#E5E5E5"> this for the machine</font>

318
00:14:11,660 --> 00:14:16,040
mode<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> okay I'll probably tell</font>

319
00:14:14,660 --> 00:14:19,250
you<font color="#E5E5E5"> about virtual</font><font color="#CCCCCC"> memory protection</font>

320
00:14:16,040 --> 00:14:23,480
first to give you an idea<font color="#CCCCCC"> about the</font>

321
00:14:19,250 --> 00:14:26,420
mechanism we want to<font color="#CCCCCC"> let say</font><font color="#E5E5E5"> mimic so on</font>

322
00:14:23,480 --> 00:14:29,420
virtual memory protection this happens

323
00:14:26,420 --> 00:14:30,949
on<font color="#E5E5E5"> supervisor mode</font><font color="#CCCCCC"> okay so it's an</font>

324
00:14:29,420 --> 00:14:33,110
<font color="#E5E5E5">extension it's part of the supervisor</font>

325
00:14:30,949 --> 00:14:34,579
<font color="#CCCCCC">ERISA</font><font color="#E5E5E5"> here we talk about</font><font color="#CCCCCC"> physical</font>

326
00:14:33,110 --> 00:14:36,380
memories<font color="#E5E5E5"> after</font><font color="#CCCCCC"> the memory has been</font>

327
00:14:34,579 --> 00:14:38,540
<font color="#E5E5E5">translated that</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> trying to access</font>

328
00:14:36,380 --> 00:14:40,430
physical memory<font color="#E5E5E5"> here is when the</font>

329
00:14:38,540 --> 00:14:44,449
supervisor<font color="#E5E5E5"> or user mode use virtual</font>

330
00:14:40,430 --> 00:14:46,339
memory addresses<font color="#E5E5E5"> okay so you'll get so</font>

331
00:14:44,449 --> 00:14:49,339
again we have<font color="#E5E5E5"> 32-bit virtual addresses</font>

332
00:14:46,339 --> 00:14:52,610
<font color="#E5E5E5">in 39 or</font><font color="#CCCCCC"> 48 bit virtual</font><font color="#E5E5E5"> addresses and</font>

333
00:14:49,339 --> 00:14:55,550
when are we<font color="#E5E5E5"> 128 comes we'll have larger</font>

334
00:14:52,610 --> 00:14:58,190
than that<font color="#E5E5E5"> and you have the usual page</font>

335
00:14:55,550 --> 00:15:00,889
table we have<font color="#CCCCCC"> four kilobyte pages by</font>

336
00:14:58,190 --> 00:15:06,670
default<font color="#CCCCCC"> and we have also</font><font color="#E5E5E5"> huge pages</font><font color="#CCCCCC"> okay</font>

337
00:15:00,889 --> 00:15:10,160
like<font color="#CCCCCC"> four megabytes</font><font color="#E5E5E5"> up to 512 terabytes</font>

338
00:15:06,670 --> 00:15:11,599
<font color="#E5E5E5">and it's payable and regardless</font><font color="#CCCCCC"> again</font>

339
00:15:10,160 --> 00:15:14,120
read write and execute permissions as

340
00:15:11,600 --> 00:15:15,889
usual<font color="#E5E5E5"> and here we also have the</font><font color="#CCCCCC"> hue bit</font>

341
00:15:14,120 --> 00:15:17,269
the you permission on the page table and

342
00:15:15,889 --> 00:15:20,089
the you permission means that the

343
00:15:17,269 --> 00:15:21,800
supervisor<font color="#E5E5E5"> that this table entry this</font>

344
00:15:20,089 --> 00:15:26,000
<font color="#E5E5E5">memory region is allowed to be accessed</font>

345
00:15:21,800 --> 00:15:28,219
by user mode<font color="#CCCCCC"> if this is not said then a</font>

346
00:15:26,000 --> 00:15:29,990
user mode application<font color="#E5E5E5"> cannot touch this</font>

347
00:15:28,220 --> 00:15:32,839
so for example<font color="#E5E5E5"> for</font><font color="#CCCCCC"> Kellner kernel memory</font>

348
00:15:29,990 --> 00:15:34,490
<font color="#E5E5E5">will have this</font><font color="#CCCCCC"> u</font><font color="#E5E5E5"> bit to 0 by default so</font>

349
00:15:32,839 --> 00:15:36,810
the<font color="#CCCCCC"> user space will not be</font><font color="#E5E5E5"> able to</font>

350
00:15:34,490 --> 00:15:39,120
<font color="#E5E5E5">access the</font><font color="#CCCCCC"> kernels</font><font color="#E5E5E5"> memory</font>

351
00:15:36,810 --> 00:15:41,520
that's<font color="#E5E5E5"> okay but what happens if the</font>

352
00:15:39,120 --> 00:15:47,040
<font color="#CCCCCC">colonel tries to access</font><font color="#E5E5E5"> is the hugest</font>

353
00:15:41,520 --> 00:15:51,449
memory is that<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> by the so lots of</font>

354
00:15:47,040 --> 00:15:53,610
exploits<font color="#E5E5E5"> can use a technique like</font><font color="#CCCCCC"> if you</font>

355
00:15:51,450 --> 00:15:55,350
find a bug in the kernel<font color="#E5E5E5"> and you can</font>

356
00:15:53,610 --> 00:15:57,030
have you<font color="#CCCCCC"> can put your code somewhere</font><font color="#E5E5E5"> you</font>

357
00:15:55,350 --> 00:16:00,630
can make the kernel execute your<font color="#CCCCCC"> code</font>

358
00:15:57,030 --> 00:16:02,490
with<font color="#E5E5E5"> kernel privileges so that means</font>

359
00:16:00,630 --> 00:16:05,520
that<font color="#E5E5E5"> when you are on</font><font color="#CCCCCC"> the when you are on</font>

360
00:16:02,490 --> 00:16:07,620
the supervisor mode<font color="#CCCCCC"> in our case</font><font color="#E5E5E5"> you will</font>

361
00:16:05,520 --> 00:16:10,010
try and<font color="#CCCCCC"> execute an attacker will try and</font>

362
00:16:07,620 --> 00:16:12,780
<font color="#CCCCCC">execute this mode that relies on user</font>

363
00:16:10,010 --> 00:16:15,090
memory range that belongs<font color="#CCCCCC"> to</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> users to</font>

364
00:16:12,780 --> 00:16:17,520
a<font color="#E5E5E5"> user application</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> now on respite</font>

365
00:16:15,090 --> 00:16:19,710
this is the<font color="#E5E5E5"> web Reese wife this is</font><font color="#CCCCCC"> the</font>

366
00:16:17,520 --> 00:16:22,290
<font color="#E5E5E5">denied by default so the supervisor</font>

367
00:16:19,710 --> 00:16:24,960
cannot execute the user memory<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font>

368
00:16:22,290 --> 00:16:29,189
really good but we'd also like to<font color="#CCCCCC"> have</font>

369
00:16:24,960 --> 00:16:32,430
this also<font color="#CCCCCC"> public service but we will we</font>

370
00:16:29,190 --> 00:16:34,020
don't only want to<font color="#E5E5E5"> protect the user</font>

371
00:16:32,430 --> 00:16:35,670
memory<font color="#E5E5E5"> from the kernel for from</font>

372
00:16:34,020 --> 00:16:37,650
execution<font color="#E5E5E5"> we might also want</font><font color="#CCCCCC"> to attack</font>

373
00:16:35,670 --> 00:16:39,479
this memory for read<font color="#CCCCCC"> and write</font><font color="#E5E5E5"> okay so</font>

374
00:16:37,650 --> 00:16:45,390
we<font color="#E5E5E5"> don't want the kernel to read and</font>

375
00:16:39,480 --> 00:16:47,850
write<font color="#E5E5E5"> user memory so only so this is</font>

376
00:16:45,390 --> 00:16:51,840
when<font color="#E5E5E5"> the some bit comes we have</font><font color="#CCCCCC"> a bit on</font>

377
00:16:47,850 --> 00:16:53,730
the<font color="#E5E5E5"> s status register that says if the</font>

378
00:16:51,840 --> 00:16:56,510
supervisor is allowed to<font color="#CCCCCC"> read and write</font>

379
00:16:53,730 --> 00:16:59,430
memory<font color="#E5E5E5"> on the from the user space memory</font>

380
00:16:56,510 --> 00:17:01,500
<font color="#E5E5E5">if the set is</font><font color="#CCCCCC"> not if this bit is not set</font>

381
00:16:59,430 --> 00:17:03,780
<font color="#E5E5E5">then the supervisor not only cannot</font>

382
00:17:01,500 --> 00:17:05,550
execute memory<font color="#E5E5E5"> from</font><font color="#CCCCCC"> that belongs to a</font>

383
00:17:03,780 --> 00:17:08,579
user<font color="#E5E5E5"> space application it can</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> also</font>

384
00:17:05,550 --> 00:17:10,530
do not read or<font color="#CCCCCC"> write it and there is</font>

385
00:17:08,579 --> 00:17:12,569
also an another's bit there

386
00:17:10,530 --> 00:17:14,639
I mentioned this<font color="#E5E5E5"> for completeness</font><font color="#CCCCCC"> here</font>

387
00:17:12,569 --> 00:17:17,460
when you if<font color="#E5E5E5"> for the people</font><font color="#CCCCCC"> that will</font>

388
00:17:14,640 --> 00:17:21,300
read the slides in<font color="#CCCCCC"> the free time so the</font>

389
00:17:17,460 --> 00:17:25,980
<font color="#CCCCCC">mxr bit says that pages that are marked</font>

390
00:17:21,300 --> 00:17:27,899
<font color="#CCCCCC">here and so if you have read write and</font>

391
00:17:25,980 --> 00:17:30,690
execute<font color="#E5E5E5"> so if a page</font><font color="#CCCCCC"> is marked as as</font>

392
00:17:27,900 --> 00:17:33,750
<font color="#CCCCCC">execute</font><font color="#E5E5E5"> with this bit set it's also</font>

393
00:17:30,690 --> 00:17:36,270
treated<font color="#E5E5E5"> as readable now this is only for</font>

394
00:17:33,750 --> 00:17:38,790
virtual addresses<font color="#E5E5E5"> okay it doesn't</font><font color="#CCCCCC"> it</font>

395
00:17:36,270 --> 00:17:41,879
<font color="#E5E5E5">doesn't deal</font><font color="#CCCCCC"> with PNP settings so if</font>

396
00:17:38,790 --> 00:17:43,530
<font color="#CCCCCC">your</font><font color="#E5E5E5"> p.m. be at least from the way the</font>

397
00:17:41,880 --> 00:17:45,300
way it's<font color="#E5E5E5"> written in the</font><font color="#CCCCCC"> standard so if</font>

398
00:17:43,530 --> 00:17:48,629
this bit is said it doesn't<font color="#E5E5E5"> mean</font><font color="#CCCCCC"> that</font>

399
00:17:45,300 --> 00:17:51,090
you have<font color="#CCCCCC"> to you can execute</font>

400
00:17:48,630 --> 00:17:53,580
you can you can<font color="#E5E5E5"> read regions that are</font>

401
00:17:51,090 --> 00:17:55,020
protected from<font color="#CCCCCC"> PMP because PMP is our</font>

402
00:17:53,580 --> 00:17:58,740
<font color="#E5E5E5">machine mode</font><font color="#CCCCCC"> this is a</font><font color="#E5E5E5"> one layer above</font>

403
00:17:55,020 --> 00:18:02,100
<font color="#E5E5E5">so if the memory region is protected for</font>

404
00:17:58,740 --> 00:18:04,620
execution<font color="#CCCCCC"> this set will on the</font>

405
00:18:02,100 --> 00:18:07,110
supervisor mode<font color="#E5E5E5"> will not override it</font>

406
00:18:04,620 --> 00:18:10,169
<font color="#E5E5E5">okay if you protect the memory</font><font color="#CCCCCC"> from from</font>

407
00:18:07,110 --> 00:18:12,540
it from<font color="#E5E5E5"> reading story with</font><font color="#CCCCCC"> PMP is even</font>

408
00:18:10,170 --> 00:18:15,090
when this bit is<font color="#E5E5E5"> said you won't be able</font>

409
00:18:12,540 --> 00:18:21,840
<font color="#E5E5E5">to read it because the PMP that's one</font>

410
00:18:15,090 --> 00:18:24,990
layer above<font color="#CCCCCC"> that will stop you so what</font>

411
00:18:21,840 --> 00:18:27,510
we want<font color="#E5E5E5"> to change</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> PMP</font><font color="#CCCCCC"> so first I</font>

412
00:18:24,990 --> 00:18:29,309
<font color="#E5E5E5">said I talked about this thing that we</font>

413
00:18:27,510 --> 00:18:31,980
cannot have temporary rules from<font color="#CCCCCC"> for</font>

414
00:18:29,309 --> 00:18:33,270
machine mode<font color="#E5E5E5"> we the</font><font color="#CCCCCC"> only rules that can</font>

415
00:18:31,980 --> 00:18:35,340
now be<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that are now enforced on</font>

416
00:18:33,270 --> 00:18:37,260
<font color="#CCCCCC">machine</font><font color="#E5E5E5"> on machine mode are the rules</font>

417
00:18:35,340 --> 00:18:39,360
that are<font color="#E5E5E5"> locked so we want to be able to</font>

418
00:18:37,260 --> 00:18:41,520
have temporary<font color="#E5E5E5"> rules that are enforced</font>

419
00:18:39,360 --> 00:18:43,459
<font color="#E5E5E5">on machine mode and we can swap them on</font>

420
00:18:41,520 --> 00:18:46,440
<font color="#CCCCCC">even off</font><font color="#E5E5E5"> this would allow us to</font><font color="#CCCCCC"> have</font>

421
00:18:43,460 --> 00:18:48,000
<font color="#E5E5E5">isolation between things that</font><font color="#CCCCCC"> are</font>

422
00:18:46,440 --> 00:18:51,630
running on machine mode and machine mode

423
00:18:48,000 --> 00:18:53,370
we don't run only<font color="#E5E5E5"> one application we</font>

424
00:18:51,630 --> 00:18:55,470
might want to run<font color="#E5E5E5"> multiple</font><font color="#CCCCCC"> applications</font>

425
00:18:53,370 --> 00:18:57,389
of machine mode<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> not only</font>

426
00:18:55,470 --> 00:18:59,640
<font color="#E5E5E5">something to be considered as a trusted</font>

427
00:18:57,390 --> 00:19:01,200
<font color="#E5E5E5">from the perspective of a trusted</font>

428
00:18:59,640 --> 00:19:03,450
execution<font color="#E5E5E5"> environment for example that</font>

429
00:19:01,200 --> 00:19:06,480
one's higher privileges because you can

430
00:19:03,450 --> 00:19:07,800
have like<font color="#E5E5E5"> multiple</font><font color="#CCCCCC"> 1:1 scenarios to</font>

431
00:19:06,480 --> 00:19:10,200
think<font color="#E5E5E5"> that you have multiple</font><font color="#CCCCCC"> trust</font>

432
00:19:07,800 --> 00:19:11,940
multiple services that<font color="#E5E5E5"> run on on the</font>

433
00:19:10,200 --> 00:19:13,470
firmware<font color="#E5E5E5"> and you want to switch</font><font color="#CCCCCC"> from one</font>

434
00:19:11,940 --> 00:19:16,350
service<font color="#CCCCCC"> to the other and they all want</font>

435
00:19:13,470 --> 00:19:18,000
high high privileges and<font color="#E5E5E5"> privilege</font>

436
00:19:16,350 --> 00:19:21,240
higher than the supervisor to<font color="#E5E5E5"> speak to</font>

437
00:19:18,000 --> 00:19:25,440
some security<font color="#E5E5E5"> devices for</font><font color="#CCCCCC"> example or</font><font color="#E5E5E5"> to</font>

438
00:19:21,240 --> 00:19:27,690
do DRM and<font color="#E5E5E5"> whatever another way to see</font>

439
00:19:25,440 --> 00:19:29,910
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> if you are</font><font color="#E5E5E5"> an embedded developer</font>

440
00:19:27,690 --> 00:19:32,040
and you only have machine mode<font color="#CCCCCC"> or</font>

441
00:19:29,910 --> 00:19:34,260
machine<font color="#CCCCCC"> 1 user mode and you want to run</font>

442
00:19:32,040 --> 00:19:35,850
something<font color="#E5E5E5"> on machine modes that is not</font>

443
00:19:34,260 --> 00:19:39,000
one<font color="#E5E5E5"> application</font><font color="#CCCCCC"> less</font><font color="#E5E5E5"> something more</font>

444
00:19:35,850 --> 00:19:41,699
complicated<font color="#E5E5E5"> there so you want</font><font color="#CCCCCC"> to be able</font>

445
00:19:39,000 --> 00:19:43,860
<font color="#CCCCCC">to have rules</font><font color="#E5E5E5"> that are applied to the</font>

446
00:19:41,700 --> 00:19:48,990
<font color="#E5E5E5">machine mode and you are able to swap on</font>

447
00:19:43,860 --> 00:19:51,809
and off so<font color="#E5E5E5"> that's one thing the other</font>

448
00:19:48,990 --> 00:19:54,780
thing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> remember the the some</font>

449
00:19:51,809 --> 00:19:56,960
<font color="#E5E5E5">bits</font><font color="#CCCCCC"> I talked about</font><font color="#E5E5E5"> one on supervisor</font>

450
00:19:54,780 --> 00:20:01,139
mode when<font color="#CCCCCC"> the supervisor</font><font color="#E5E5E5"> cannot access</font>

451
00:19:56,960 --> 00:20:01,860
the<font color="#E5E5E5"> users mode so we also want something</font>

452
00:20:01,140 --> 00:20:04,950
similar for

453
00:20:01,860 --> 00:20:07,590
machine<font color="#CCCCCC"> modem</font><font color="#E5E5E5"> so right now someone might</font>

454
00:20:04,950 --> 00:20:09,240
<font color="#CCCCCC">be able to find the</font><font color="#E5E5E5"> vulnerability on the</font>

455
00:20:07,590 --> 00:20:12,899
<font color="#CCCCCC">secure monitor or the or the firmware</font>

456
00:20:09,240 --> 00:20:13,980
<font color="#E5E5E5">and make the firmware change</font><font color="#CCCCCC"> a pointer</font>

457
00:20:12,900 --> 00:20:17,309
or<font color="#E5E5E5"> something and make the firmware</font>

458
00:20:13,980 --> 00:20:21,059
execute some user memory<font color="#E5E5E5"> or some</font>

459
00:20:17,309 --> 00:20:22,920
<font color="#E5E5E5">supervisor memory now we have a</font>

460
00:20:21,059 --> 00:20:24,690
guarantee<font color="#CCCCCC"> on the virtual</font><font color="#E5E5E5"> memory that</font>

461
00:20:22,920 --> 00:20:27,120
that you are<font color="#CCCCCC"> not</font><font color="#E5E5E5"> allowed</font><font color="#CCCCCC"> to execute</font>

462
00:20:24,690 --> 00:20:28,380
<font color="#E5E5E5">usual memory but a machine mode we don't</font>

463
00:20:27,120 --> 00:20:29,969
have any guarantee<font color="#CCCCCC"> that machine mode</font>

464
00:20:28,380 --> 00:20:31,860
will not try to read write or execute

465
00:20:29,970 --> 00:20:34,260
<font color="#E5E5E5">memory from</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> belongs to the</font>

466
00:20:31,860 --> 00:20:36,540
supervisor or<font color="#CCCCCC"> the</font><font color="#E5E5E5"> user so if someone</font>

467
00:20:34,260 --> 00:20:37,919
finds<font color="#E5E5E5"> a bug on</font><font color="#CCCCCC"> the firmware</font><font color="#E5E5E5"> he or she</font>

468
00:20:36,540 --> 00:20:40,530
might be<font color="#E5E5E5"> able to make the firmware</font>

469
00:20:37,919 --> 00:20:44,250
execute this piece of code with the

470
00:20:40,530 --> 00:20:45,990
highest privilege we have so we want to

471
00:20:44,250 --> 00:20:48,870
have<font color="#CCCCCC"> something like</font><font color="#E5E5E5"> the some bit I</font>

472
00:20:45,990 --> 00:20:51,890
mentioned that will also<font color="#E5E5E5"> get rid of the</font>

473
00:20:48,870 --> 00:20:54,270
execute permission<font color="#E5E5E5"> in this case because</font>

474
00:20:51,890 --> 00:20:55,890
execute<font color="#E5E5E5"> permissions all permissions are</font>

475
00:20:54,270 --> 00:20:57,900
allowed<font color="#CCCCCC"> and a more</font><font color="#E5E5E5"> demo</font><font color="#CCCCCC"> card we</font><font color="#E5E5E5"> can do</font>

476
00:20:55,890 --> 00:21:01,590
anything<font color="#E5E5E5"> right now</font><font color="#CCCCCC"> so we want</font><font color="#E5E5E5"> to have a</font>

477
00:20:57,900 --> 00:21:05,460
global bit like as you to prevent

478
00:21:01,590 --> 00:21:07,559
<font color="#E5E5E5">machine mode from accessing the</font><font color="#CCCCCC"> yes the</font>

479
00:21:05,460 --> 00:21:13,740
supervisor and<font color="#E5E5E5"> user memory or any kind</font>

480
00:21:07,559 --> 00:21:16,950
of<font color="#CCCCCC"> access to so that's why we tried we</font>

481
00:21:13,740 --> 00:21:19,559
will add another status another bit on

482
00:21:16,950 --> 00:21:21,840
<font color="#CCCCCC">em status and</font><font color="#E5E5E5"> register that</font><font color="#CCCCCC"> we will</font><font color="#E5E5E5"> call</font>

483
00:21:19,559 --> 00:21:25,620
the<font color="#CCCCCC"> machine mode isolation bit this</font>

484
00:21:21,840 --> 00:21:29,610
proposal is almost finalized so<font color="#E5E5E5"> where we</font>

485
00:21:25,620 --> 00:21:32,668
are<font color="#CCCCCC"> looking at privileged spec 1.12 we</font>

486
00:21:29,610 --> 00:21:34,530
hope this will get merged there and this

487
00:21:32,669 --> 00:21:37,380
<font color="#E5E5E5">is the new</font><font color="#CCCCCC"> this is the</font><font color="#E5E5E5"> truth table so</font>

488
00:21:34,530 --> 00:21:39,928
<font color="#E5E5E5">but we basically we want to</font><font color="#CCCCCC"> be backwards</font>

489
00:21:37,380 --> 00:21:43,110
<font color="#CCCCCC">compatible obviously so when the albiet</font>

490
00:21:39,929 --> 00:21:48,710
<font color="#CCCCCC">is said we want this rule to be enforced</font>

491
00:21:43,110 --> 00:21:52,830
on machine mode as well<font color="#CCCCCC"> but when the</font>

492
00:21:48,710 --> 00:21:55,799
<font color="#CCCCCC">albiet when the MMI</font><font color="#E5E5E5"> bit is is</font><font color="#CCCCCC"> set this</font>

493
00:21:52,830 --> 00:22:00,149
rule is enforced machine mode but not on

494
00:21:55,799 --> 00:22:02,340
other modes<font color="#E5E5E5"> now why we did that</font><font color="#CCCCCC"> think of</font>

495
00:22:00,150 --> 00:22:05,010
you might think<font color="#CCCCCC"> of a rule that</font><font color="#E5E5E5"> does not</font>

496
00:22:02,340 --> 00:22:07,350
deny access but allows access<font color="#E5E5E5"> so maybe</font>

497
00:22:05,010 --> 00:22:09,030
we<font color="#E5E5E5"> want to protect them we want to allow</font>

498
00:22:07,350 --> 00:22:10,980
something to machine mode that we don't

499
00:22:09,030 --> 00:22:13,379
want to<font color="#CCCCCC"> do to be allowed for the others</font>

500
00:22:10,980 --> 00:22:14,760
<font color="#E5E5E5">in this way for example</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> the</font>

501
00:22:13,380 --> 00:22:15,510
machine<font color="#CCCCCC"> mode to be able</font><font color="#E5E5E5"> to execute the</font>

502
00:22:14,760 --> 00:22:18,830
<font color="#E5E5E5">firmer</font>

503
00:22:15,510 --> 00:22:22,170
but not read it or<font color="#CCCCCC"> right</font><font color="#E5E5E5"> from the code</font>

504
00:22:18,830 --> 00:22:23,879
<font color="#E5E5E5">so this is the scenario</font><font color="#CCCCCC"> we're trying to</font>

505
00:22:22,170 --> 00:22:26,400
<font color="#E5E5E5">cover here</font><font color="#CCCCCC"> and this is the scenario</font><font color="#E5E5E5"> I</font>

506
00:22:23,880 --> 00:22:28,020
mentioned before<font color="#E5E5E5"> so right now if the log</font>

507
00:22:26,400 --> 00:22:31,500
bit is<font color="#CCCCCC"> 0 the rule will not</font><font color="#E5E5E5"> be enforced</font>

508
00:22:28,020 --> 00:22:33,990
<font color="#CCCCCC">on machine mode but when the MMI bit is</font>

509
00:22:31,500 --> 00:22:37,050
said there<font color="#CCCCCC"> will be</font><font color="#E5E5E5"> enforced</font><font color="#CCCCCC"> the Machine</font>

510
00:22:33,990 --> 00:22:38,940
mode access<font color="#E5E5E5"> will fail always</font><font color="#CCCCCC"> so</font>

511
00:22:37,050 --> 00:22:40,909
basically what happens with<font color="#E5E5E5"> this bit is</font>

512
00:22:38,940 --> 00:22:43,950
<font color="#CCCCCC">that when you do something on</font><font color="#E5E5E5"> firmware</font>

513
00:22:40,910 --> 00:22:46,200
<font color="#E5E5E5">legitimately and you return you exit</font>

514
00:22:43,950 --> 00:22:49,590
from firmware you set the speed to<font color="#E5E5E5"> 1 and</font>

515
00:22:46,200 --> 00:22:54,690
now<font color="#E5E5E5"> there are</font><font color="#CCCCCC"> no accidental the</font><font color="#E5E5E5"> firmware</font>

516
00:22:49,590 --> 00:22:57,740
cannot mess with a user or supervisor<font color="#E5E5E5"> or</font>

517
00:22:54,690 --> 00:23:01,980
memory because it's because the PMP will

518
00:22:57,740 --> 00:23:05,310
will deny access and physical physical

519
00:23:01,980 --> 00:23:11,490
regions again<font color="#E5E5E5"> while you're running on</font>

520
00:23:05,310 --> 00:23:13,950
this boat and we are basically<font color="#CCCCCC"> this is</font>

521
00:23:11,490 --> 00:23:15,660
this won't<font color="#E5E5E5"> solve a security issue but</font>

522
00:23:13,950 --> 00:23:18,360
will prevent obviously if someone<font color="#E5E5E5"> hacks</font>

523
00:23:15,660 --> 00:23:22,800
the firmware key also<font color="#E5E5E5"> can remove their</font>

524
00:23:18,360 --> 00:23:24,139
entries there and do bad stuff but we

525
00:23:22,800 --> 00:23:27,000
are trying to<font color="#E5E5E5"> prevent buggy</font>

526
00:23:24,140 --> 00:23:29,250
<font color="#E5E5E5">implementations or some accidental reads</font>

527
00:23:27,000 --> 00:23:32,160
and writes<font color="#CCCCCC"> it's very similar to</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> the</font>

528
00:23:29,250 --> 00:23:34,470
Sun bit does<font color="#CCCCCC"> ok if</font><font color="#E5E5E5"> someone owns your</font>

529
00:23:32,160 --> 00:23:36,300
kernel they can<font color="#CCCCCC"> obviously modify the</font>

530
00:23:34,470 --> 00:23:38,100
page table or<font color="#E5E5E5"> if they can create another</font>

531
00:23:36,300 --> 00:23:42,810
mapping<font color="#E5E5E5"> to the same</font><font color="#CCCCCC"> region and bypass</font>

532
00:23:38,100 --> 00:23:44,850
this protection<font color="#E5E5E5"> so this bit does not the</font>

533
00:23:42,810 --> 00:23:47,550
whole idea<font color="#CCCCCC"> of protecting</font><font color="#E5E5E5"> the lower</font>

534
00:23:44,850 --> 00:23:50,189
levels<font color="#E5E5E5"> the lower privilege levels from</font>

535
00:23:47,550 --> 00:23:53,690
<font color="#E5E5E5">the levels from the above levels is to</font>

536
00:23:50,190 --> 00:23:56,490
be proactive<font color="#CCCCCC"> ok because</font><font color="#E5E5E5"> if you manage to</font>

537
00:23:53,690 --> 00:23:58,860
<font color="#CCCCCC">do if you manage to take control of the</font>

538
00:23:56,490 --> 00:24:02,000
higher<font color="#E5E5E5"> privilege levels then you</font><font color="#CCCCCC"> own the</font>

539
00:23:58,860 --> 00:24:07,469
lower<font color="#CCCCCC"> level level your little lower</font>

540
00:24:02,000 --> 00:24:08,970
<font color="#CCCCCC">privilege levels above the IOP MP block</font>

541
00:24:07,470 --> 00:24:12,000
I told you this is a<font color="#E5E5E5"> block we</font><font color="#CCCCCC"> are</font>

542
00:24:08,970 --> 00:24:13,680
proposing<font color="#CCCCCC"> that will sit between</font><font color="#E5E5E5"> so you</font>

543
00:24:12,000 --> 00:24:15,390
have the code we have<font color="#CCCCCC"> we have the CPU</font>

544
00:24:13,680 --> 00:24:18,410
inside<font color="#E5E5E5"> each of the heart we have the</font>

545
00:24:15,390 --> 00:24:20,460
<font color="#E5E5E5">physical memory protection mechanism</font>

546
00:24:18,410 --> 00:24:24,600
<font color="#CCCCCC">then you have the physical memory</font>

547
00:24:20,460 --> 00:24:27,360
attribute<font color="#E5E5E5"> checker which is kind of a</font><font color="#CCCCCC"> PMP</font>

548
00:24:24,600 --> 00:24:29,219
<font color="#CCCCCC">that's permanent that it's for all</font><font color="#E5E5E5"> cores</font>

549
00:24:27,360 --> 00:24:29,760
I told you<font color="#E5E5E5"> I mentioned that</font><font color="#CCCCCC"> PNP is per</font>

550
00:24:29,220 --> 00:24:31,590
core

551
00:24:29,760 --> 00:24:34,790
so there is also a<font color="#CCCCCC"> mechanism that that</font>

552
00:24:31,590 --> 00:24:37,199
acts as a firewall for accessing<font color="#E5E5E5"> memory</font>

553
00:24:34,790 --> 00:24:40,200
<font color="#E5E5E5">that is for</font><font color="#CCCCCC"> all course and</font><font color="#E5E5E5"> it's</font>

554
00:24:37,200 --> 00:24:42,150
persistent<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> as I said it for example</font>

555
00:24:40,200 --> 00:24:44,250
what what this guy is doing is

556
00:24:42,150 --> 00:24:46,560
protecting let's say if you<font color="#CCCCCC"> were going</font>

557
00:24:44,250 --> 00:24:49,770
to<font color="#E5E5E5"> if you if you're touching</font><font color="#CCCCCC"> a Rome</font><font color="#E5E5E5"> for</font>

558
00:24:46,560 --> 00:24:54,179
example<font color="#E5E5E5"> it will not</font><font color="#CCCCCC"> allow</font><font color="#E5E5E5"> you to try an</font>

559
00:24:49,770 --> 00:24:55,800
issue<font color="#CCCCCC"> right separation</font><font color="#E5E5E5"> okay so if you're</font>

560
00:24:54,180 --> 00:24:57,870
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> reach the device that doesn't</font>

561
00:24:55,800 --> 00:25:03,720
support writing it will prevent<font color="#E5E5E5"> you from</font>

562
00:24:57,870 --> 00:25:06,419
writing<font color="#E5E5E5"> but we can probably add more</font>

563
00:25:03,720 --> 00:25:08,250
<font color="#E5E5E5">stuff here the the the stander allows</font>

564
00:25:06,420 --> 00:25:10,410
for the<font color="#E5E5E5"> PM a checker to do more stuff</font>

565
00:25:08,250 --> 00:25:14,970
it's not very specific<font color="#E5E5E5"> about what the</font><font color="#CCCCCC"> PM</font>

566
00:25:10,410 --> 00:25:17,040
<font color="#E5E5E5">a checker is limited to so we have the</font>

567
00:25:14,970 --> 00:25:19,110
<font color="#E5E5E5">CPU protecting itself let's say</font><font color="#CCCCCC"> I'm</font>

568
00:25:17,040 --> 00:25:21,290
protecting one thread from<font color="#CCCCCC"> via</font><font color="#E5E5E5"> one</font>

569
00:25:19,110 --> 00:25:24,120
<font color="#E5E5E5">hardware thread from</font><font color="#CCCCCC"> the other</font>

570
00:25:21,290 --> 00:25:27,149
<font color="#E5E5E5">but we want to protect the device is</font>

571
00:25:24,120 --> 00:25:29,310
also so this is what the what the IO PMP

572
00:25:27,150 --> 00:25:31,260
<font color="#E5E5E5">block</font><font color="#CCCCCC"> come so</font><font color="#E5E5E5"> this is this block only</font>

573
00:25:29,310 --> 00:25:33,360
<font color="#E5E5E5">handles protection okay only it's only</font>

574
00:25:31,260 --> 00:25:35,400
<font color="#E5E5E5">firewall for physical address so it will</font>

575
00:25:33,360 --> 00:25:37,350
sit<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> have an area menu that will</font>

576
00:25:35,400 --> 00:25:40,140
present the virtual address<font color="#CCCCCC"> space to</font>

577
00:25:37,350 --> 00:25:42,090
<font color="#CCCCCC">your device this block will will sit</font>

578
00:25:40,140 --> 00:25:43,530
after the MMU after the translations

579
00:25:42,090 --> 00:25:46,139
<font color="#E5E5E5">it's not because it works for physical</font>

580
00:25:43,530 --> 00:25:47,940
addresses so this will see it after

581
00:25:46,140 --> 00:25:53,310
<font color="#CCCCCC">Yanomami</font><font color="#E5E5E5"> your between your device and</font>

582
00:25:47,940 --> 00:25:55,650
the system bus and this block will the

583
00:25:53,310 --> 00:25:59,399
<font color="#E5E5E5">idea is that it will isolate devices</font>

584
00:25:55,650 --> 00:26:03,030
<font color="#E5E5E5">from each other from the CPU</font><font color="#CCCCCC"> now there</font>

585
00:25:59,400 --> 00:26:05,250
is a cut here<font color="#E5E5E5"> the address</font><font color="#CCCCCC"> when when you</font>

586
00:26:03,030 --> 00:26:07,790
when the device<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> access that</font>

587
00:26:05,250 --> 00:26:10,380
that's where the IO<font color="#E5E5E5"> PMP will work</font>

588
00:26:07,790 --> 00:26:12,360
because the addresses comes from the

589
00:26:10,380 --> 00:26:14,820
Masters on the bus<font color="#CCCCCC"> they will not come</font>

590
00:26:12,360 --> 00:26:18,389
when you try<font color="#E5E5E5"> to reach the device so if</font>

591
00:26:14,820 --> 00:26:20,159
this device so<font color="#CCCCCC"> you only firewall you</font>

592
00:26:18,390 --> 00:26:23,160
only have a firewall of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> on the</font>

593
00:26:20,160 --> 00:26:26,130
<font color="#E5E5E5">outgoing traffic let's say</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so if you</font>

594
00:26:23,160 --> 00:26:27,630
<font color="#CCCCCC">have an incoming</font><font color="#E5E5E5"> connect if you have an</font>

595
00:26:26,130 --> 00:26:30,210
incoming grid here so if someone<font color="#E5E5E5"> tries</font>

596
00:26:27,630 --> 00:26:34,170
to if one heart tries to<font color="#E5E5E5"> modify a</font>

597
00:26:30,210 --> 00:26:38,090
register here then this<font color="#E5E5E5"> block will</font><font color="#CCCCCC"> not</font>

598
00:26:34,170 --> 00:26:40,470
<font color="#E5E5E5">handle that</font><font color="#CCCCCC"> ok because there will</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> be</font>

599
00:26:38,090 --> 00:26:42,209
this block will only have this outgoing

600
00:26:40,470 --> 00:26:44,120
traffic the same with P and<font color="#E5E5E5"> P</font><font color="#CCCCCC"> ok but</font>

601
00:26:42,210 --> 00:26:47,999
because it's on every call

602
00:26:44,120 --> 00:26:50,189
it doesn't job<font color="#E5E5E5"> so we have to find it we</font>

603
00:26:47,999 --> 00:26:52,590
have to discuss how<font color="#E5E5E5"> we will treat em</font><font color="#CCCCCC"> Mao</font>

604
00:26:50,190 --> 00:26:54,450
accesses<font color="#E5E5E5"> how to protect the device is</font>

605
00:26:52,590 --> 00:26:58,439
<font color="#E5E5E5">not</font><font color="#CCCCCC"> only from reaching</font><font color="#E5E5E5"> others but from</font>

606
00:26:54,450 --> 00:27:02,429
being reached<font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is working</font>

607
00:26:58,440 --> 00:27:04,049
<font color="#CCCCCC">progress</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> another thing</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> the</font>

608
00:27:02,429 --> 00:27:07,850
total flow<font color="#CCCCCC"> intake it so I told</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> that</font>

609
00:27:04,049 --> 00:27:10,918
<font color="#CCCCCC">there is this type of exploits that</font>

610
00:27:07,850 --> 00:27:13,049
<font color="#E5E5E5">someone messes up with your with</font><font color="#CCCCCC"> your</font>

611
00:27:10,919 --> 00:27:14,759
binary<font color="#E5E5E5"> on the</font><font color="#CCCCCC"> RAM overrides</font><font color="#E5E5E5"> the return</font>

612
00:27:13,049 --> 00:27:16,230
address and<font color="#E5E5E5"> now when your code returns</font>

613
00:27:14,759 --> 00:27:21,149
instead of returning<font color="#E5E5E5"> to the proper</font>

614
00:27:16,230 --> 00:27:22,980
fraction it jumps<font color="#CCCCCC"> to some malware</font><font color="#E5E5E5"> so how</font>

615
00:27:21,149 --> 00:27:24,719
do you protect<font color="#CCCCCC"> that remember</font><font color="#E5E5E5"> that I told</font>

616
00:27:22,980 --> 00:27:28,499
you<font color="#CCCCCC"> that in</font><font color="#E5E5E5"> the preview in the virtual</font>

617
00:27:24,720 --> 00:27:32,639
<font color="#E5E5E5">memory protection you have</font><font color="#CCCCCC"> 39 bits on 64</font>

618
00:27:28,499 --> 00:27:34,889
<font color="#CCCCCC">ok so you have some bits left there</font><font color="#E5E5E5"> so</font>

619
00:27:32,639 --> 00:27:37,949
because<font color="#CCCCCC"> they entry is 64 bit but you</font><font color="#E5E5E5"> can</font>

620
00:27:34,889 --> 00:27:39,508
<font color="#E5E5E5">only use 39 or 48 bits</font><font color="#CCCCCC"> so what you can</font>

621
00:27:37,950 --> 00:27:43,080
do<font color="#CCCCCC"> stuff with the</font><font color="#E5E5E5"> rest of the bits from</font>

622
00:27:39,509 --> 00:27:46,200
the virtual memory<font color="#CCCCCC"> okay so you can have</font>

623
00:27:43,080 --> 00:27:48,840
like let's say we are<font color="#CCCCCC"> using</font><font color="#E5E5E5"> some bits</font>

624
00:27:46,200 --> 00:27:50,519
that<font color="#E5E5E5"> are higher than 48 these bits are</font>

625
00:27:48,840 --> 00:27:54,360
<font color="#CCCCCC">not addressable they get these addresses</font>

626
00:27:50,519 --> 00:27:56,909
are<font color="#E5E5E5"> not valid for the core right</font><font color="#CCCCCC"> now so</font>

627
00:27:54,360 --> 00:27:59,309
what we can do is we can have we can

628
00:27:56,909 --> 00:28:01,590
have<font color="#E5E5E5"> addresses outside</font><font color="#CCCCCC"> of the allowed</font>

629
00:27:59,309 --> 00:28:04,320
range by using<font color="#E5E5E5"> the higher order bits</font>

630
00:28:01,590 --> 00:28:06,959
virtual<font color="#E5E5E5"> addresses that only the call and</font>

631
00:28:04,320 --> 00:28:09,269
the return functions can write<font color="#E5E5E5"> to so if</font>

632
00:28:06,960 --> 00:28:11,639
you try to do a load or store on these

633
00:28:09,269 --> 00:28:13,499
<font color="#E5E5E5">virtual addresses you'll get a fail</font><font color="#CCCCCC"> but</font>

634
00:28:11,639 --> 00:28:15,899
when the call and the return function

635
00:28:13,499 --> 00:28:17,999
<font color="#CCCCCC">will run they will go the call function</font>

636
00:28:15,899 --> 00:28:19,918
will go on this range and store if a

637
00:28:17,999 --> 00:28:21,419
return address<font color="#E5E5E5"> and when the return</font>

638
00:28:19,919 --> 00:28:23,279
function<font color="#E5E5E5"> comes back and we'll go there</font>

639
00:28:21,419 --> 00:28:25,379
<font color="#CCCCCC">and</font><font color="#E5E5E5"> remove it so basically you have</font>

640
00:28:23,279 --> 00:28:28,889
something<font color="#CCCCCC"> like a shadow stock that's</font>

641
00:28:25,379 --> 00:28:31,830
there at all times<font color="#CCCCCC"> and you cannot mess</font>

642
00:28:28,889 --> 00:28:34,080
<font color="#CCCCCC">with</font><font color="#E5E5E5"> it because only these two calls can</font>

643
00:28:31,830 --> 00:28:39,689
write and read their load and<font color="#CCCCCC"> store will</font>

644
00:28:34,080 --> 00:28:41,850
<font color="#CCCCCC">not work and if someone</font><font color="#E5E5E5"> tries to so they</font>

645
00:28:39,690 --> 00:28:45,029
they someone messes with your code and

646
00:28:41,850 --> 00:28:47,248
overrides it<font color="#E5E5E5"> then when the return</font>

647
00:28:45,029 --> 00:28:48,690
happens it<font color="#E5E5E5"> will go to the shadow socket</font>

648
00:28:47,249 --> 00:28:53,429
we will not find the proper return

649
00:28:48,690 --> 00:28:55,500
<font color="#E5E5E5">address so it will block you of course</font>

650
00:28:53,429 --> 00:28:56,580
<font color="#E5E5E5">this is on virtual addresses it can be</font>

651
00:28:55,500 --> 00:28:57,929
when you<font color="#CCCCCC"> work on</font>

652
00:28:56,580 --> 00:28:59,580
<font color="#E5E5E5">scene mode for example</font><font color="#CCCCCC"> that you're</font><font color="#E5E5E5"> using</font>

653
00:28:57,929 --> 00:29:01,740
<font color="#E5E5E5">physical addresses we cannot have</font>

654
00:28:59,580 --> 00:29:03,389
something<font color="#E5E5E5"> like that and it</font><font color="#CCCCCC"> doesn't</font>

655
00:29:01,740 --> 00:29:07,049
<font color="#E5E5E5">protect against all cases but it's a</font>

656
00:29:03,390 --> 00:29:09,360
decent<font color="#E5E5E5"> mitigation</font><font color="#CCCCCC"> so again it's</font><font color="#E5E5E5"> still</font>

657
00:29:07,049 --> 00:29:11,940
working<font color="#E5E5E5"> progress</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> thought about the</font>

658
00:29:09,360 --> 00:29:15,629
security monitors<font color="#E5E5E5"> architecture now here</font>

659
00:29:11,940 --> 00:29:17,399
is a lot of a lot<font color="#CCCCCC"> of work to be done we</font>

660
00:29:15,630 --> 00:29:20,190
have some implementations for<font color="#CCCCCC"> secured</font>

661
00:29:17,399 --> 00:29:22,080
monitors we<font color="#CCCCCC"> have one</font><font color="#E5E5E5"> from</font><font color="#CCCCCC"> ex5 that's</font>

662
00:29:20,190 --> 00:29:24,960
called multi zone<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is basically</font>

663
00:29:22,080 --> 00:29:27,389
<font color="#E5E5E5">it's it acts like a hypervisor</font><font color="#CCCCCC"> it these</font>

664
00:29:24,960 --> 00:29:29,610
like the whole memory<font color="#E5E5E5"> is protected by</font>

665
00:29:27,390 --> 00:29:32,279
default and then it you tell the

666
00:29:29,610 --> 00:29:34,500
hypervisor<font color="#E5E5E5"> to allow specific memory</font>

667
00:29:32,279 --> 00:29:38,460
regions to give specific permissions to

668
00:29:34,500 --> 00:29:41,850
memory regions<font color="#CCCCCC"> when your applications or</font>

669
00:29:38,460 --> 00:29:43,440
your environment<font color="#CCCCCC"> will run theoretically</font>

670
00:29:41,850 --> 00:29:45,059
theoretically in one of these

671
00:29:43,440 --> 00:29:46,080
environments<font color="#CCCCCC"> or in many</font><font color="#E5E5E5"> of these</font>

672
00:29:45,059 --> 00:29:49,408
environments<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> run a full</font>

673
00:29:46,080 --> 00:29:51,809
operating<font color="#E5E5E5"> system but this basically</font>

674
00:29:49,409 --> 00:29:54,360
focuses on embedded devices<font color="#E5E5E5"> when you can</font>

675
00:29:51,809 --> 00:29:58,260
do you want applications to be<font color="#E5E5E5"> isolated</font>

676
00:29:54,360 --> 00:30:00,209
<font color="#CCCCCC">from</font><font color="#E5E5E5"> each other so it's the cool thing</font>

677
00:29:58,260 --> 00:30:01,769
with<font color="#E5E5E5"> multi zone it's very very small it</font>

678
00:30:00,210 --> 00:30:03,539
<font color="#CCCCCC">has a very small</font><font color="#E5E5E5"> overhead it's a very</font>

679
00:30:01,769 --> 00:30:05,820
small kernel mostly written<font color="#CCCCCC"> in assembly</font>

680
00:30:03,539 --> 00:30:08,330
<font color="#E5E5E5">they have open sourced most of the most</font>

681
00:30:05,820 --> 00:30:10,649
<font color="#E5E5E5">of this they have a</font><font color="#CCCCCC"> library there</font><font color="#E5E5E5"> that</font>

682
00:30:08,330 --> 00:30:13,710
again but it's basically the<font color="#CCCCCC"> code</font><font color="#E5E5E5"> that</font>

683
00:30:10,649 --> 00:30:15,268
they have<font color="#CCCCCC"> in assembly anyway</font><font color="#E5E5E5"> and they</font>

684
00:30:13,710 --> 00:30:19,590
have open<font color="#E5E5E5"> source some tools as well so</font>

685
00:30:15,269 --> 00:30:21,830
you can<font color="#E5E5E5"> take</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> they work out and the</font>

686
00:30:19,590 --> 00:30:24,299
thing the<font color="#CCCCCC"> thing with multi zone</font><font color="#E5E5E5"> is that</font>

687
00:30:21,830 --> 00:30:26,129
when you create them when you create the

688
00:30:24,299 --> 00:30:28,320
firmware<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> predefine</font><font color="#E5E5E5"> these</font>

689
00:30:26,130 --> 00:30:30,149
regions so<font color="#CCCCCC"> you cannot change them at</font>

690
00:30:28,320 --> 00:30:32,100
runtime<font color="#E5E5E5"> if you want to have a new zone</font>

691
00:30:30,149 --> 00:30:34,018
<font color="#E5E5E5">you cannot ask the supervisor or the</font>

692
00:30:32,100 --> 00:30:36,299
<font color="#CCCCCC">security monitor to create a new</font>

693
00:30:34,019 --> 00:30:40,100
environment<font color="#CCCCCC"> for you you have static</font>

694
00:30:36,299 --> 00:30:42,840
environments while you compile the thing

695
00:30:40,100 --> 00:30:45,809
<font color="#CCCCCC">then there</font><font color="#E5E5E5"> is Keystone Keystone aims to</font>

696
00:30:42,840 --> 00:30:48,000
implement something like<font color="#E5E5E5"> HDX something</font>

697
00:30:45,809 --> 00:30:48,928
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> more feature</font><font color="#CCCCCC"> like it has more and</font>

698
00:30:48,000 --> 00:30:50,970
more<font color="#E5E5E5"> powerful</font>

699
00:30:48,929 --> 00:30:53,820
it<font color="#E5E5E5"> aims for</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> thing that will run</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font>

700
00:30:50,970 --> 00:30:55,679
<font color="#E5E5E5">on</font><font color="#CCCCCC"> a scenario that</font><font color="#E5E5E5"> you would want to</font>

701
00:30:53,820 --> 00:30:58,590
<font color="#E5E5E5">have dynamically created trusted</font>

702
00:30:55,679 --> 00:31:00,809
execution<font color="#E5E5E5"> environments</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> you want this</font>

703
00:30:58,590 --> 00:31:02,820
the idea is that<font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> create a</font>

704
00:31:00,809 --> 00:31:04,649
secure in a secure environment<font color="#CCCCCC"> for</font>

705
00:31:02,820 --> 00:31:06,570
running some process and then destroy it

706
00:31:04,649 --> 00:31:09,360
<font color="#CCCCCC">and then ask for</font><font color="#E5E5E5"> another one</font><font color="#CCCCCC"> and</font>

707
00:31:06,570 --> 00:31:10,428
destroyed so it's<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> the multi zone</font>

708
00:31:09,360 --> 00:31:13,748
thing will<font color="#E5E5E5"> not work</font>

709
00:31:10,429 --> 00:31:16,999
because you have a specific<font color="#CCCCCC"> set of</font>

710
00:31:13,749 --> 00:31:18,559
environments<font color="#CCCCCC"> this will what</font><font color="#E5E5E5"> you want</font>

711
00:31:16,999 --> 00:31:20,629
with this<font color="#E5E5E5"> is to be able to scale so</font><font color="#CCCCCC"> you</font>

712
00:31:18,559 --> 00:31:22,460
might want to have a lot of<font color="#E5E5E5"> trusted</font>

713
00:31:20,629 --> 00:31:24,799
execution<font color="#E5E5E5"> environments you might want</font>

714
00:31:22,460 --> 00:31:26,869
them to be<font color="#E5E5E5"> resizable you might want lots</font>

715
00:31:24,799 --> 00:31:28,279
of features<font color="#E5E5E5"> when it comes to how you</font>

716
00:31:26,869 --> 00:31:30,019
<font color="#E5E5E5">manage your traffic</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> execution</font>

717
00:31:28,279 --> 00:31:33,169
environment<font color="#E5E5E5"> and that's where Keystone</font>

718
00:31:30,019 --> 00:31:38,480
comes into play right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> it's fully</font>

719
00:31:33,169 --> 00:31:41,389
open<font color="#E5E5E5"> trust by the way and it's it's been</font>

720
00:31:38,480 --> 00:31:44,029
maintained by<font color="#CCCCCC"> Berkley people there and</font>

721
00:31:41,389 --> 00:31:46,219
it's based on another on<font color="#CCCCCC"> another work</font>

722
00:31:44,029 --> 00:31:48,710
from MIT called sanctum with the the

723
00:31:46,220 --> 00:31:50,450
sanctum was also I also included<font color="#E5E5E5"> some</font>

724
00:31:48,710 --> 00:31:52,039
<font color="#E5E5E5">hardware stuff on mitigating</font><font color="#CCCCCC"> side</font>

725
00:31:50,450 --> 00:31:54,019
<font color="#CCCCCC">channel attacks it's pretty interesting</font>

726
00:31:52,039 --> 00:31:55,158
work you can go to their side and<font color="#E5E5E5"> read</font>

727
00:31:54,019 --> 00:31:58,039
about<font color="#E5E5E5"> it</font>

728
00:31:55,159 --> 00:32:00,379
so Keystone is like more feature proof

729
00:31:58,039 --> 00:32:02,480
like so we have something<font color="#CCCCCC"> like that</font>

730
00:32:00,379 --> 00:32:04,580
looks<font color="#CCCCCC"> like a hypervisor and</font><font color="#E5E5E5"> something</font>

731
00:32:02,480 --> 00:32:08,809
that<font color="#E5E5E5"> looks more</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> secured monitor</font>

732
00:32:04,580 --> 00:32:12,379
and these both these teams<font color="#E5E5E5"> are members</font>

733
00:32:08,809 --> 00:32:14,330
<font color="#CCCCCC">of the work group so we are</font><font color="#E5E5E5"> having</font>

734
00:32:12,379 --> 00:32:17,928
discussions<font color="#CCCCCC"> with</font><font color="#E5E5E5"> them and see where this</font>

735
00:32:14,330 --> 00:32:21,350
<font color="#CCCCCC">thing goes and what we want</font><font color="#E5E5E5"> to do is to</font>

736
00:32:17,929 --> 00:32:23,149
have to define<font color="#CCCCCC"> some common api's that</font>

737
00:32:21,350 --> 00:32:25,570
both<font color="#CCCCCC"> of these approaches</font><font color="#E5E5E5"> and other</font>

738
00:32:23,149 --> 00:32:28,489
approaches in the future can use and

739
00:32:25,570 --> 00:32:31,789
come up with a set of<font color="#E5E5E5"> policies as I said</font>

740
00:32:28,490 --> 00:32:34,639
we<font color="#E5E5E5"> don't create we are we create a spec</font>

741
00:32:31,789 --> 00:32:38,899
we do<font color="#E5E5E5"> not create just an implementation</font>

742
00:32:34,639 --> 00:32:40,758
or an SDK<font color="#E5E5E5"> so there are all lots of areas</font>

743
00:32:38,899 --> 00:32:43,939
when<font color="#CCCCCC"> you that</font><font color="#E5E5E5"> need discussion</font><font color="#CCCCCC"> okay we've</font>

744
00:32:40,759 --> 00:32:45,440
so for example not only<font color="#CCCCCC"> the API is going</font>

745
00:32:43,940 --> 00:32:48,139
we will need some interaction for with

746
00:32:45,440 --> 00:32:50,179
the SBI for example the SBI group

747
00:32:48,139 --> 00:32:52,158
because<font color="#E5E5E5"> we will</font><font color="#CCCCCC"> want some commands</font><font color="#E5E5E5"> to be</font>

748
00:32:50,179 --> 00:32:56,090
able<font color="#CCCCCC"> to send to the farmer through the</font>

749
00:32:52,159 --> 00:32:57,860
new interface<font color="#E5E5E5"> we want to define</font><font color="#CCCCCC"> a memory</font>

750
00:32:56,090 --> 00:33:01,939
as<font color="#CCCCCC"> relationship using baby like how you</font>

751
00:32:57,860 --> 00:33:04,340
how should you use<font color="#CCCCCC"> PMP to protect to do</font>

752
00:33:01,940 --> 00:33:06,259
memory isolation so we have a draft on

753
00:33:04,340 --> 00:33:07,730
that in<font color="#E5E5E5"> there for for trusted execution</font>

754
00:33:06,259 --> 00:33:10,519
<font color="#E5E5E5">environments how to protect one</font>

755
00:33:07,730 --> 00:33:13,909
<font color="#E5E5E5">execution environment from another using</font>

756
00:33:10,519 --> 00:33:16,369
PMP we want a memory as relations team

757
00:33:13,909 --> 00:33:18,110
for<font color="#CCCCCC"> the i/o PMP so how because the</font>

758
00:33:16,369 --> 00:33:19,850
secure monitor will also configure<font color="#E5E5E5"> the</font>

759
00:33:18,110 --> 00:33:21,289
isolation between<font color="#CCCCCC"> devices so we</font><font color="#E5E5E5"> also</font>

760
00:33:19,850 --> 00:33:23,678
have to<font color="#E5E5E5"> provide a theme on how to do</font>

761
00:33:21,289 --> 00:33:26,320
this properly<font color="#E5E5E5"> and</font>

762
00:33:23,679 --> 00:33:29,799
then there<font color="#E5E5E5"> are more serious stuff like</font>

763
00:33:26,320 --> 00:33:32,350
how do<font color="#E5E5E5"> you how do you do how do you do</font>

764
00:33:29,799 --> 00:33:34,960
this properly between<font color="#E5E5E5"> hearts for example</font>

765
00:33:32,350 --> 00:33:36,760
an attack<font color="#CCCCCC"> scenario could</font><font color="#E5E5E5"> be that one</font>

766
00:33:34,960 --> 00:33:38,529
heart with this way<font color="#CCCCCC"> command to reset</font>

767
00:33:36,760 --> 00:33:41,590
<font color="#CCCCCC">another heart when</font><font color="#E5E5E5"> resetting the other</font>

768
00:33:38,529 --> 00:33:45,100
heart the whole<font color="#CCCCCC"> PMP stacker goes because</font>

769
00:33:41,590 --> 00:33:46,899
the<font color="#E5E5E5"> register will be</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and you</font><font color="#CCCCCC"> will</font>

770
00:33:45,100 --> 00:33:50,260
be<font color="#E5E5E5"> able to do something</font><font color="#CCCCCC"> on the other</font>

771
00:33:46,900 --> 00:33:52,710
heart without<font color="#E5E5E5"> the MP for example so we</font>

772
00:33:50,260 --> 00:33:54,760
want to be able<font color="#CCCCCC"> to that there's also</font>

773
00:33:52,710 --> 00:33:57,159
multi-threading in general how do you

774
00:33:54,760 --> 00:33:58,299
when you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> on the trusted execution</font>

775
00:33:57,159 --> 00:34:01,149
<font color="#E5E5E5">environment how do you do</font>

776
00:33:58,299 --> 00:34:03,549
multi-threading in there<font color="#E5E5E5"> because it's</font>

777
00:34:01,149 --> 00:34:06,908
the<font color="#CCCCCC"> PNP mechanism is per heart so when</font>

778
00:34:03,549 --> 00:34:09,820
<font color="#E5E5E5">you switch when</font><font color="#CCCCCC"> you send something to</font>

779
00:34:06,909 --> 00:34:13,089
send some job on<font color="#CCCCCC"> another heart you need</font>

780
00:34:09,820 --> 00:34:15,070
to have that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> to sync</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> you</font>

781
00:34:13,089 --> 00:34:16,509
need to have the same<font color="#CCCCCC"> PNP settings there</font>

782
00:34:15,070 --> 00:34:17,889
as well<font color="#CCCCCC"> all</font><font color="#E5E5E5"> the application won't be</font>

783
00:34:16,510 --> 00:34:19,389
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> access its memory or even worse</font>

784
00:34:17,889 --> 00:34:24,129
it<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> able to access someone else's</font>

785
00:34:19,389 --> 00:34:26,399
<font color="#E5E5E5">memory that's where interrupts come in</font>

786
00:34:24,129 --> 00:34:28,929
as<font color="#E5E5E5"> well so</font><font color="#CCCCCC"> we need to be able to have a</font>

787
00:34:26,399 --> 00:34:31,000
<font color="#CCCCCC">seaman how to handle interrupts</font><font color="#E5E5E5"> to this</font>

788
00:34:28,929 --> 00:34:32,619
<font color="#CCCCCC">trusted execution</font><font color="#E5E5E5"> environments or what</font>

789
00:34:31,000 --> 00:34:37,418
happens when an interrupt comes and you

790
00:34:32,619 --> 00:34:39,879
<font color="#E5E5E5">are doing</font><font color="#CCCCCC"> something</font><font color="#E5E5E5"> secure and these</font>

791
00:34:37,418 --> 00:34:41,049
environments how are we going<font color="#E5E5E5"> to express</font>

792
00:34:39,879 --> 00:34:43,480
them are we going to have an image

793
00:34:41,050 --> 00:34:45,220
<font color="#E5E5E5">format are we going to have like only</font>

794
00:34:43,480 --> 00:34:47,918
<font color="#CCCCCC">the binaries it will just be any left</font>

795
00:34:45,219 --> 00:34:51,129
binary how we will we want to discuss

796
00:34:47,918 --> 00:34:53,618
about having a common like<font color="#E5E5E5"> description</font>

797
00:34:51,129 --> 00:34:54,848
of<font color="#E5E5E5"> a trusted</font><font color="#CCCCCC"> execution environment</font><font color="#E5E5E5"> and</font>

798
00:34:53,619 --> 00:34:57,010
of course we have to write the code for

799
00:34:54,849 --> 00:34:58,869
<font color="#E5E5E5">it hope that we are very lucky that we</font>

800
00:34:57,010 --> 00:35:02,950
have some implementations already there

801
00:34:58,869 --> 00:35:06,010
that<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> use it be inspired from and</font>

802
00:35:02,950 --> 00:35:07,899
we would also want<font color="#E5E5E5"> to provide an</font><font color="#CCCCCC"> SDK for</font>

803
00:35:06,010 --> 00:35:09,430
people to use<font color="#E5E5E5"> the same way that arm and</font>

804
00:35:07,900 --> 00:35:14,260
<font color="#E5E5E5">Intel have provided there</font><font color="#CCCCCC"> is the case</font>

805
00:35:09,430 --> 00:35:16,850
for<font color="#E5E5E5"> a comm SDK and just DX</font><font color="#CCCCCC"> yeah so</font>

806
00:35:14,260 --> 00:35:21,850
that's all<font color="#E5E5E5"> thank you</font>

807
00:35:16,850 --> 00:35:42,440
[Applause]

808
00:35:21,850 --> 00:35:45,259
so it's not part of the CPU well that's

809
00:35:42,440 --> 00:35:47,150
an implementation implementation<font color="#CCCCCC"> so if</font>

810
00:35:45,260 --> 00:35:48,980
we have this like a<font color="#E5E5E5"> spec if you put this</font>

811
00:35:47,150 --> 00:35:49,790
in the<font color="#E5E5E5"> spec</font><font color="#CCCCCC"> to say that people</font><font color="#E5E5E5"> will be</font>

812
00:35:48,980 --> 00:35:52,850
forced<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do it</font>

813
00:35:49,790 --> 00:35:55,580
so vendors might want to<font color="#E5E5E5"> do to</font><font color="#CCCCCC"> use</font>

814
00:35:52,850 --> 00:35:57,410
different<font color="#E5E5E5"> ways of storing stuff one one</font>

815
00:35:55,580 --> 00:35:58,910
<font color="#E5E5E5">vendor may want to have</font><font color="#CCCCCC"> a secure</font><font color="#E5E5E5"> room</font>

816
00:35:57,410 --> 00:36:01,399
another vendor<font color="#E5E5E5"> might want to have</font><font color="#CCCCCC"> a</font>

817
00:35:58,910 --> 00:36:03,470
<font color="#CCCCCC">fuses another vendor</font><font color="#E5E5E5"> might want to you</font>

818
00:36:01,400 --> 00:36:05,240
<font color="#CCCCCC">might want to have some encrypted</font><font color="#E5E5E5"> staff</font>

819
00:36:03,470 --> 00:36:07,549
on this<font color="#E5E5E5"> beginning of their store at like</font>

820
00:36:05,240 --> 00:36:10,490
a partition<font color="#CCCCCC"> you we</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> want to limit</font>

821
00:36:07,550 --> 00:36:15,080
<font color="#CCCCCC">that and secure storage like encryption</font>

822
00:36:10,490 --> 00:36:17,450
<font color="#E5E5E5">is not the big handle</font><font color="#CCCCCC"> it's a software</font>

823
00:36:15,080 --> 00:36:19,880
<font color="#CCCCCC">it's something that can be done from the</font>

824
00:36:17,450 --> 00:36:23,870
software<font color="#E5E5E5"> side but if you think</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> if</font>

825
00:36:19,880 --> 00:36:25,370
the firmware does it for you<font color="#E5E5E5"> then it</font><font color="#CCCCCC"> for</font>

826
00:36:23,870 --> 00:36:35,750
every for every<font color="#E5E5E5"> transaction you'll have</font>

827
00:36:25,370 --> 00:36:39,080
to go<font color="#E5E5E5"> through the firmware yes that's</font>

828
00:36:35,750 --> 00:36:40,640
for secure boot<font color="#E5E5E5"> secure boot is part of</font>

829
00:36:39,080 --> 00:36:45,560
our<font color="#E5E5E5"> to-do list yes sorry about that</font>

830
00:36:40,640 --> 00:36:47,420
<font color="#E5E5E5">but we are not there</font><font color="#CCCCCC"> yet</font><font color="#E5E5E5"> there so we so</font>

831
00:36:45,560 --> 00:36:49,490
<font color="#E5E5E5">secure boot is there's a lot of</font>

832
00:36:47,420 --> 00:36:52,130
discussion of how<font color="#E5E5E5"> to do it for example</font>

833
00:36:49,490 --> 00:36:53,390
<font color="#E5E5E5">do you do the is it's a different</font>

834
00:36:52,130 --> 00:36:55,790
<font color="#E5E5E5">approach when you're booting your own</font>

835
00:36:53,390 --> 00:36:58,759
<font color="#E5E5E5">yourself when you're running when you're</font>

836
00:36:55,790 --> 00:37:00,890
trying to secure boots and a boot on<font color="#CCCCCC"> the</font>

837
00:36:58,760 --> 00:37:02,450
same CPU<font color="#E5E5E5"> there's another approach where</font>

838
00:37:00,890 --> 00:37:04,339
another some other unit does the

839
00:37:02,450 --> 00:37:07,910
verification for you and handles<font color="#E5E5E5"> the</font>

840
00:37:04,340 --> 00:37:09,740
booting process so again we want<font color="#CCCCCC"> to be</font>

841
00:37:07,910 --> 00:37:11,600
flexible<font color="#CCCCCC"> because rezvov is an open</font>

842
00:37:09,740 --> 00:37:14,629
<font color="#E5E5E5">economy we</font><font color="#CCCCCC"> don't want to limit</font><font color="#E5E5E5"> people</font>

843
00:37:11,600 --> 00:37:16,430
and we want to have a specific<font color="#E5E5E5"> scope so</font>

844
00:37:14,630 --> 00:37:18,230
if we try<font color="#CCCCCC"> to say things about the</font>

845
00:37:16,430 --> 00:37:19,759
storage<font color="#E5E5E5"> or the memory for example you</font>

846
00:37:18,230 --> 00:37:21,440
can<font color="#E5E5E5"> you may have a row hammer attacks</font>

847
00:37:19,760 --> 00:37:23,300
<font color="#CCCCCC">okay or someone might tap into</font><font color="#E5E5E5"> your</font>

848
00:37:21,440 --> 00:37:24,950
memory we cannot protect<font color="#E5E5E5"> you from that</font>

849
00:37:23,300 --> 00:37:28,000
we cannot this<font color="#E5E5E5"> is an implementation</font>

850
00:37:24,950 --> 00:37:28,000
specific<font color="#E5E5E5"> thing</font>

851
00:37:29,720 --> 00:37:35,430
actually<font color="#E5E5E5"> that</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> same we will</font>

852
00:37:33,540 --> 00:37:37,529
secure boot is part of what we are

853
00:37:35,430 --> 00:37:40,290
<font color="#E5E5E5">working on so you may not subscribe to</font>

854
00:37:37,530 --> 00:37:42,030
the<font color="#CCCCCC"> listing</font><font color="#E5E5E5"> we just don't have a</font>

855
00:37:40,290 --> 00:37:43,410
proposal yet for secure boot<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have a</font>

856
00:37:42,030 --> 00:37:46,550
lot of<font color="#E5E5E5"> discussion but we don't have a</font>

857
00:37:43,410 --> 00:37:46,549
like<font color="#CCCCCC"> on approach</font>

858
00:38:07,170 --> 00:38:11,730
<font color="#E5E5E5">first of all if you to be</font><font color="#CCCCCC"> able to be to</font>

859
00:38:09,540 --> 00:38:13,290
<font color="#CCCCCC">be fair</font><font color="#E5E5E5"> here if you did the</font><font color="#CCCCCC"> HDX they</font>

860
00:38:11,730 --> 00:38:16,770
said that we don't protect<font color="#E5E5E5"> you from</font>

861
00:38:13,290 --> 00:38:19,980
<font color="#CCCCCC">side-channel attacks ok</font><font color="#E5E5E5"> so they said it</font>

862
00:38:16,770 --> 00:38:24,630
from the beginning<font color="#E5E5E5"> you may read the</font>

863
00:38:19,980 --> 00:38:26,730
sanctum<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the paper</font><font color="#CCCCCC"> all they say is a</font>

864
00:38:24,630 --> 00:38:30,570
work was<font color="#E5E5E5"> on</font><font color="#CCCCCC"> site Samuel</font><font color="#E5E5E5"> attack</font>

865
00:38:26,730 --> 00:38:33,660
mitigations<font color="#E5E5E5"> and</font><font color="#CCCCCC"> side-channel</font><font color="#E5E5E5"> again is</font>

866
00:38:30,570 --> 00:38:35,400
something<font color="#E5E5E5"> that you can it's something</font>

867
00:38:33,660 --> 00:38:36,930
that has<font color="#E5E5E5"> to do</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> design ok</font><font color="#CCCCCC"> you we can</font>

868
00:38:35,400 --> 00:38:41,040
design<font color="#CCCCCC"> for example the software to</font><font color="#E5E5E5"> be a</font>

869
00:38:36,930 --> 00:38:43,890
to<font color="#E5E5E5"> be secure against timing attacks</font><font color="#CCCCCC"> but</font>

870
00:38:41,040 --> 00:38:45,600
the other the<font color="#CCCCCC"> other types</font><font color="#E5E5E5"> of side</font>

871
00:38:43,890 --> 00:38:47,370
channel attacks<font color="#CCCCCC"> there Harbor specific</font>

872
00:38:45,600 --> 00:38:49,650
<font color="#E5E5E5">which in our case is what it's an</font>

873
00:38:47,370 --> 00:38:52,770
implementation but let's say so we're

874
00:38:49,650 --> 00:38:55,740
trying to<font color="#CCCCCC"> make the spec properly</font><font color="#E5E5E5"> secure</font>

875
00:38:52,770 --> 00:38:59,150
and for them implementation have some

876
00:38:55,740 --> 00:38:59,149
guidelines<font color="#CCCCCC"> for the for them</font>

877
00:39:02,210 --> 00:39:21,730
oh no you get<font color="#CCCCCC"> the trap you get a trap</font>

878
00:39:17,210 --> 00:39:21,730
you get illegal<font color="#CCCCCC"> I like access denied</font>

879
00:39:25,480 --> 00:39:31,010
this time in<font color="#E5E5E5"> this case are not</font><font color="#CCCCCC"> really</font>

880
00:39:28,670 --> 00:39:33,020
because<font color="#E5E5E5"> you have trap vectors on other</font>

881
00:39:31,010 --> 00:39:34,790
<font color="#E5E5E5">modes as well</font><font color="#CCCCCC"> you may have a trap that</font>

882
00:39:33,020 --> 00:39:37,369
are handling<font color="#E5E5E5"> secure</font><font color="#CCCCCC"> or nurse supervisor</font>

883
00:39:34,790 --> 00:39:39,500
mode or new mode<font color="#CCCCCC"> so that's not always</font>

884
00:39:37,369 --> 00:39:41,210
<font color="#E5E5E5">the case but in our case yes it gets</font>

885
00:39:39,500 --> 00:39:45,859
<font color="#CCCCCC">trapped</font><font color="#E5E5E5"> and it gets handled by machine</font>

886
00:39:41,210 --> 00:39:48,339
mode as well<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so we can talk</font>

887
00:39:45,859 --> 00:39:48,339
<font color="#CCCCCC">afterwards</font>

888
00:39:49,780 --> 00:39:56,159
[Applause]

