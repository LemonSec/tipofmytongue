1
00:00:04,980 --> 00:00:13,360
so<font color="#CCCCCC"> really</font><font color="#E5E5E5"> week I'm going to talk</font><font color="#CCCCCC"> about</font>

2
00:00:10,629 --> 00:00:16,079
<font color="#CCCCCC">new geeks</font><font color="#E5E5E5"> and how we</font><font color="#CCCCCC"> manage to build a</font>

3
00:00:13,360 --> 00:00:18,369
complete new Linux<font color="#CCCCCC"> distribution out of</font>

4
00:00:16,079 --> 00:00:20,229
<font color="#E5E5E5">minimalistic language if not the</font>

5
00:00:18,369 --> 00:00:22,930
minimalistic language which is scheme

6
00:00:20,230 --> 00:00:28,750
that<font color="#E5E5E5"> parentheses thing that you've heard</font>

7
00:00:22,930 --> 00:00:31,299
about<font color="#E5E5E5"> just</font><font color="#CCCCCC"> before all</font><font color="#E5E5E5"> right before</font><font color="#CCCCCC"> I go</font>

8
00:00:28,750 --> 00:00:33,309
<font color="#E5E5E5">into presenting</font><font color="#CCCCCC"> geeks let me just talk</font>

9
00:00:31,300 --> 00:00:36,969
<font color="#E5E5E5">about something</font><font color="#CCCCCC"> you know which is</font><font color="#E5E5E5"> you</font>

10
00:00:33,309 --> 00:00:38,649
can<font color="#CCCCCC"> do Linux so I I like potlucks</font><font color="#E5E5E5"> so</font>

11
00:00:36,969 --> 00:00:41,109
potlucks you know are these parties

12
00:00:38,649 --> 00:00:43,809
where people join together and everybody

13
00:00:41,109 --> 00:00:45,640
bring<font color="#CCCCCC"> their own dish</font><font color="#E5E5E5"> and that's pretty</font>

14
00:00:43,809 --> 00:00:48,550
<font color="#E5E5E5">cool that's a good way to discover new</font>

15
00:00:45,640 --> 00:00:50,319
dishes<font color="#CCCCCC"> you know new taste things that</font>

16
00:00:48,550 --> 00:00:52,029
perhaps you wouldn't cook<font color="#CCCCCC"> yourself right</font>

17
00:00:50,319 --> 00:00:55,569
you get<font color="#CCCCCC"> to discover</font><font color="#E5E5E5"> lots of new</font><font color="#CCCCCC"> things</font>

18
00:00:52,030 --> 00:00:58,329
and<font color="#CCCCCC"> new</font><font color="#E5E5E5"> Linux is a bit like this right</font>

19
00:00:55,569 --> 00:01:00,609
it<font color="#CCCCCC"> goose Oliver organically and people</font>

20
00:00:58,329 --> 00:01:02,589
brought their<font color="#CCCCCC"> own dishes and you get to</font>

21
00:01:00,609 --> 00:01:04,839
discover<font color="#E5E5E5"> lots of things if you look</font>

22
00:01:02,589 --> 00:01:07,510
carefully at how<font color="#CCCCCC"> your your system on</font>

23
00:01:04,839 --> 00:01:09,579
<font color="#E5E5E5">your laptop actually</font><font color="#CCCCCC"> works so you will</font>

24
00:01:07,510 --> 00:01:11,170
find<font color="#E5E5E5"> that there</font><font color="#CCCCCC"> are things written</font><font color="#E5E5E5"> in C</font>

25
00:01:09,579 --> 00:01:14,288
there are things within in Perl

26
00:01:11,170 --> 00:01:16,509
there are things<font color="#E5E5E5"> within Python</font><font color="#CCCCCC"> where as</font>

27
00:01:14,289 --> 00:01:20,079
you know<font color="#CCCCCC"> lots of things and perhaps a</font>

28
00:01:16,509 --> 00:01:23,530
bunch of you know bash scripts<font color="#E5E5E5"> with you</font>

29
00:01:20,079 --> 00:01:25,990
know<font color="#E5E5E5"> a whole rich collection of custom</font>

30
00:01:23,530 --> 00:01:30,430
configuration language on top<font color="#E5E5E5"> of it</font>

31
00:01:25,990 --> 00:01:33,850
right<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> very tasteful this is</font>

32
00:01:30,430 --> 00:01:35,710
great in a way but if<font color="#E5E5E5"> you look at it</font>

33
00:01:33,850 --> 00:01:38,259
from<font color="#E5E5E5"> the perspective of someone who's</font>

34
00:01:35,710 --> 00:01:40,990
actually<font color="#E5E5E5"> trying to understand how this</font>

35
00:01:38,259 --> 00:01:42,609
all works together<font color="#CCCCCC"> or from the</font>

36
00:01:40,990 --> 00:01:44,469
perspective of<font color="#CCCCCC"> someone you know who's</font>

37
00:01:42,609 --> 00:01:47,229
trying<font color="#CCCCCC"> to learn or trying to modify</font>

38
00:01:44,469 --> 00:01:48,880
things<font color="#E5E5E5"> that</font><font color="#CCCCCC"> may be</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> so great that's</font>

39
00:01:47,229 --> 00:01:50,979
that's a whole lot<font color="#CCCCCC"> of things to learn</font><font color="#E5E5E5"> a</font>

40
00:01:48,880 --> 00:01:54,100
<font color="#E5E5E5">whole lot</font><font color="#CCCCCC"> of languages configuration</font>

41
00:01:50,979 --> 00:01:58,179
languages XML JSON<font color="#CCCCCC"> er mall you name it</font>

42
00:01:54,100 --> 00:02:00,788
you know all that<font color="#CCCCCC"> and trying</font><font color="#E5E5E5"> to bring</font>

43
00:01:58,179 --> 00:02:05,439
some some unification<font color="#E5E5E5"> to all this is one</font>

44
00:02:00,789 --> 00:02:08,350
<font color="#E5E5E5">of the goals of</font><font color="#CCCCCC"> gigs</font><font color="#E5E5E5"> so let me go into</font>

45
00:02:05,439 --> 00:02:12,160
that so<font color="#CCCCCC"> geeks</font><font color="#E5E5E5"> who has already heard</font>

46
00:02:08,350 --> 00:02:13,750
<font color="#E5E5E5">about geeks in this room</font><font color="#CCCCCC"> alright that's</font>

47
00:02:12,160 --> 00:02:16,180
that's quite a lot of<font color="#E5E5E5"> people</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> good</font>

48
00:02:13,750 --> 00:02:18,069
<font color="#CCCCCC">that's a</font><font color="#E5E5E5"> good thing because I didn't</font>

49
00:02:16,180 --> 00:02:20,950
plan<font color="#CCCCCC"> to really</font><font color="#E5E5E5"> present it in detail</font>

50
00:02:18,069 --> 00:02:23,409
but<font color="#E5E5E5"> basically if you went to Ricardo's</font>

51
00:02:20,950 --> 00:02:25,268
<font color="#E5E5E5">talk before for example</font><font color="#CCCCCC"> Giggsy is a is</font>

52
00:02:23,409 --> 00:02:27,370
actually<font color="#CCCCCC"> a whole bunch of thing so you</font>

53
00:02:25,269 --> 00:02:29,859
<font color="#CCCCCC">pretend</font><font color="#E5E5E5"> to think of geeks as a package</font>

54
00:02:27,370 --> 00:02:31,420
manager<font color="#E5E5E5"> and it's true that's a package</font>

55
00:02:29,859 --> 00:02:33,159
manager that you can<font color="#CCCCCC"> use to</font><font color="#E5E5E5"> install</font>

56
00:02:31,420 --> 00:02:36,640
package you get transactional upgrades

57
00:02:33,159 --> 00:02:37,989
<font color="#E5E5E5">you get 12</font><font color="#CCCCCC"> bags</font><font color="#E5E5E5"> non-root installation of</font>

58
00:02:36,640 --> 00:02:40,029
packages you know that kind of feature

59
00:02:37,989 --> 00:02:44,139
which is quite unusual<font color="#CCCCCC"> and pretty cool I</font>

60
00:02:40,030 --> 00:02:46,870
<font color="#E5E5E5">think</font><font color="#CCCCCC"> it's also a whole toolset</font><font color="#E5E5E5"> you know</font>

61
00:02:44,139 --> 00:02:48,849
of tools that<font color="#E5E5E5"> deal with packages one way</font>

62
00:02:46,870 --> 00:02:50,530
or another<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we have tools</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example</font>

63
00:02:48,849 --> 00:02:52,090
that<font color="#E5E5E5"> can create environments on the fly</font>

64
00:02:50,530 --> 00:02:54,730
<font color="#CCCCCC">like</font><font color="#E5E5E5"> geeks environment so it's pretty</font>

65
00:02:52,090 --> 00:02:57,870
<font color="#E5E5E5">much</font><font color="#CCCCCC"> like virtual</font><font color="#E5E5E5"> and if you if you're</font>

66
00:02:54,730 --> 00:03:00,909
in Python we have tools that<font color="#E5E5E5"> can create</font>

67
00:02:57,870 --> 00:03:02,799
darker images you know application

68
00:03:00,909 --> 00:03:05,679
bundles if that's<font color="#E5E5E5"> something you need we</font>

69
00:03:02,799 --> 00:03:07,780
<font color="#CCCCCC">have you know all sorts of tools</font><font color="#E5E5E5"> and we</font>

70
00:03:05,680 --> 00:03:09,370
also have an actual<font color="#CCCCCC"> standalone system</font>

71
00:03:07,780 --> 00:03:11,889
that you can run<font color="#CCCCCC"> on your machine and</font>

72
00:03:09,370 --> 00:03:15,760
that's you know<font color="#E5E5E5"> a standalone gnu/linux</font>

73
00:03:11,889 --> 00:03:18,159
distribution also<font color="#E5E5E5"> yeah as I was</font>

74
00:03:15,760 --> 00:03:19,959
<font color="#CCCCCC">preparing this talk</font><font color="#E5E5E5"> for the minimalistic</font>

75
00:03:18,159 --> 00:03:22,060
language<font color="#E5E5E5"> trackers like what kind of</font>

76
00:03:19,959 --> 00:03:24,040
minimalism are we talking about<font color="#E5E5E5"> so this</font>

77
00:03:22,060 --> 00:03:27,329
is not this<font color="#E5E5E5"> kind of minimalism you know</font>

78
00:03:24,040 --> 00:03:30,790
not in<font color="#CCCCCC"> terms</font><font color="#E5E5E5"> of number</font><font color="#CCCCCC"> of lines of</font><font color="#E5E5E5"> code</font>

79
00:03:27,329 --> 00:03:33,310
<font color="#CCCCCC">but</font><font color="#E5E5E5"> there is some sort of minimalistic</font>

80
00:03:30,790 --> 00:03:37,078
feel to it especially<font color="#E5E5E5"> in the use of</font><font color="#CCCCCC"> the</font>

81
00:03:33,310 --> 00:03:37,079
language<font color="#E5E5E5"> which I'm going</font><font color="#CCCCCC"> to talk about</font>

82
00:03:37,109 --> 00:03:42,519
yeah<font color="#E5E5E5"> this is yeah we have a wonderful</font>

83
00:03:40,449 --> 00:03:44,799
reference card<font color="#E5E5E5"> if you want to know more</font>

84
00:03:42,519 --> 00:03:46,530
<font color="#CCCCCC">about how to</font><font color="#E5E5E5"> use geeks as you know for</font>

85
00:03:44,799 --> 00:03:49,269
all these<font color="#CCCCCC"> features that I</font><font color="#E5E5E5"> talked about</font>

86
00:03:46,530 --> 00:03:51,669
<font color="#CCCCCC">you can find it on</font><font color="#E5E5E5"> the web or you</font><font color="#CCCCCC"> can</font>

87
00:03:49,269 --> 00:03:55,090
find it on paper right here this<font color="#E5E5E5"> is</font>

88
00:03:51,669 --> 00:03:57,099
wonderful what's not on the reference

89
00:03:55,090 --> 00:03:58,840
card is this thing which<font color="#E5E5E5"> is how you</font>

90
00:03:57,099 --> 00:04:01,298
manage a complete system a standalone

91
00:03:58,840 --> 00:04:03,189
system<font color="#E5E5E5"> distribution that you install on</font>

92
00:04:01,299 --> 00:04:06,639
<font color="#E5E5E5">your machine or that you create in the</font>

93
00:04:03,189 --> 00:04:09,069
VM or in a<font color="#E5E5E5"> container</font><font color="#CCCCCC"> so this is</font><font color="#E5E5E5"> just</font>

94
00:04:06,639 --> 00:04:10,930
what we get with geeks<font color="#CCCCCC"> you get to</font>

95
00:04:09,069 --> 00:04:13,418
<font color="#CCCCCC">basically declare your system</font>

96
00:04:10,930 --> 00:04:15,579
configuration entirely including account

97
00:04:13,419 --> 00:04:17,409
services lockers blah blah blah blah

98
00:04:15,579 --> 00:04:21,489
blah blah<font color="#CCCCCC"> this is a very simple</font><font color="#E5E5E5"> system</font>

99
00:04:17,409 --> 00:04:23,229
configuration yeah<font color="#E5E5E5"> you I think even if</font>

100
00:04:21,488 --> 00:04:25,270
you're not<font color="#CCCCCC"> a schemer even if you're kind</font>

101
00:04:23,229 --> 00:04:27,909
<font color="#CCCCCC">of afraid</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> parentheses that happens</font>

102
00:04:25,270 --> 00:04:29,529
I'm being told you can<font color="#E5E5E5"> still I guess</font>

103
00:04:27,909 --> 00:04:31,480
understand what's happening<font color="#E5E5E5"> here</font><font color="#CCCCCC"> you</font>

104
00:04:29,529 --> 00:04:33,100
could imagine that<font color="#E5E5E5"> these are</font>

105
00:04:31,480 --> 00:04:37,600
braces<font color="#E5E5E5"> and maybe that works better for</font>

106
00:04:33,100 --> 00:04:39,250
you<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't know all right</font><font color="#CCCCCC"> so once you</font>

107
00:04:37,600 --> 00:04:40,900
have this configuration<font color="#E5E5E5"> like I said you</font>

108
00:04:39,250 --> 00:04:42,730
can actually<font color="#E5E5E5"> there is a bunch of gigs</font>

109
00:04:40,900 --> 00:04:46,390
system command and you can create a VM

110
00:04:42,730 --> 00:04:48,310
<font color="#E5E5E5">you can create you</font><font color="#CCCCCC"> know you can yeah</font><font color="#E5E5E5"> you</font>

111
00:04:46,390 --> 00:04:53,320
can instantiate<font color="#E5E5E5"> it an actual bare metal</font>

112
00:04:48,310 --> 00:04:56,020
<font color="#CCCCCC">hardware etc etc</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is really nice so</font>

113
00:04:53,320 --> 00:04:58,570
how<font color="#E5E5E5"> did</font><font color="#CCCCCC"> we get there why did we end up</font>

114
00:04:56,020 --> 00:05:02,859
<font color="#CCCCCC">using scheme and all the</font><font color="#E5E5E5"> things to build</font>

115
00:04:58,570 --> 00:05:04,900
<font color="#E5E5E5">this system so the other day I wanted</font><font color="#CCCCCC"> to</font>

116
00:05:02,860 --> 00:05:08,170
learn about<font color="#CCCCCC"> terraform which is an</font>

117
00:05:04,900 --> 00:05:09,760
infrastructure<font color="#E5E5E5"> as</font><font color="#CCCCCC"> called tool</font><font color="#E5E5E5"> I'm not</font>

118
00:05:08,170 --> 00:05:14,230
very familiar<font color="#E5E5E5"> with this kind</font><font color="#CCCCCC"> of tool</font><font color="#E5E5E5"> and</font>

119
00:05:09,760 --> 00:05:17,310
so I ended up watching a keynote by<font color="#E5E5E5"> you</font>

120
00:05:14,230 --> 00:05:19,450
know one of the terraform people

121
00:05:17,310 --> 00:05:22,630
<font color="#E5E5E5">explaining the new features</font><font color="#CCCCCC"> of the</font>

122
00:05:19,450 --> 00:05:24,909
upcoming<font color="#CCCCCC"> version of terraform</font><font color="#E5E5E5"> and one</font>

123
00:05:22,630 --> 00:05:27,190
thing<font color="#E5E5E5"> that</font><font color="#CCCCCC"> struck me it</font><font color="#E5E5E5"> this part the</font>

124
00:05:24,910 --> 00:05:28,300
person was presenting so terraform

125
00:05:27,190 --> 00:05:30,430
actually has its<font color="#E5E5E5"> own configuration</font>

126
00:05:28,300 --> 00:05:32,050
<font color="#E5E5E5">language like many tools so it's called</font>

127
00:05:30,430 --> 00:05:35,620
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Hashi corp</font>

128
00:05:32,050 --> 00:05:38,680
configuration language<font color="#CCCCCC"> HCl it's a very</font>

129
00:05:35,620 --> 00:05:40,570
corporate name<font color="#E5E5E5"> I guess and so it's it's</font>

130
00:05:38,680 --> 00:05:42,190
a<font color="#CCCCCC"> language a</font><font color="#E5E5E5"> DSL domain-specific</font>

131
00:05:40,570 --> 00:05:45,190
language that<font color="#E5E5E5"> allows you to configure</font>

132
00:05:42,190 --> 00:05:47,380
<font color="#E5E5E5">your infrastructure basically and the</font>

133
00:05:45,190 --> 00:05:51,280
person was presenting the<font color="#CCCCCC"> new features</font>

134
00:05:47,380 --> 00:05:53,860
of<font color="#CCCCCC"> the of the language</font><font color="#E5E5E5"> that person was</font>

135
00:05:51,280 --> 00:05:57,609
saying look here is one of<font color="#E5E5E5"> my favorite</font>

136
00:05:53,860 --> 00:06:00,940
new features<font color="#E5E5E5"> the new</font><font color="#CCCCCC"> four keyword allows</font>

137
00:05:57,610 --> 00:06:03,970
you to<font color="#E5E5E5"> iterate over lists and generate</font>

138
00:06:00,940 --> 00:06:08,530
<font color="#E5E5E5">lists and map this gives you a whole</font>

139
00:06:03,970 --> 00:06:10,690
<font color="#E5E5E5">bunch of new flexibility and I thought</font>

140
00:06:08,530 --> 00:06:12,609
this is exactly<font color="#E5E5E5"> what we want to do with</font>

141
00:06:10,690 --> 00:06:17,920
<font color="#E5E5E5">gigs we want to give you a whole bunch</font>

142
00:06:12,610 --> 00:06:19,960
of new flexibility that's<font color="#E5E5E5"> the point so</font>

143
00:06:17,920 --> 00:06:22,540
we we happen<font color="#CCCCCC"> to take</font><font color="#E5E5E5"> a different</font>

144
00:06:19,960 --> 00:06:24,099
<font color="#E5E5E5">approach technically but the end result</font>

145
00:06:22,540 --> 00:06:29,590
is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a whole</font><font color="#E5E5E5"> bunch of new</font>

146
00:06:24,100 --> 00:06:32,590
flexibility so if you if you're familiar

147
00:06:29,590 --> 00:06:34,869
or even not familiar with Lisp<font color="#E5E5E5"> you're</font>

148
00:06:32,590 --> 00:06:39,369
probably familiar<font color="#CCCCCC"> with all the mystique</font>

149
00:06:34,870 --> 00:06:42,730
around Lisp<font color="#CCCCCC"> that Lisp is somehow magic</font>

150
00:06:39,370 --> 00:06:43,860
like a thing of<font color="#E5E5E5"> Richard and Chris Weber</font>

151
00:06:42,730 --> 00:06:45,250
who is sitting here

152
00:06:43,860 --> 00:06:47,140
<font color="#E5E5E5">rightfully</font><font color="#CCCCCC"> know</font>

153
00:06:45,250 --> 00:06:49,660
<font color="#E5E5E5">did that the wizardry thing is a</font>

154
00:06:47,140 --> 00:06:51,580
double-edged<font color="#E5E5E5"> sword</font><font color="#CCCCCC"> you know it's a good</font>

155
00:06:49,660 --> 00:06:55,030
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> in the sense that while you can do</font>

156
00:06:51,580 --> 00:06:57,130
so many<font color="#CCCCCC"> things</font><font color="#E5E5E5"> but at the same times it</font>

157
00:06:55,030 --> 00:07:00,700
sounds like black magic<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> kind of</font>

158
00:06:57,130 --> 00:07:02,560
not so great<font color="#CCCCCC"> I don't think it's black</font>

159
00:07:00,700 --> 00:07:05,380
magic<font color="#CCCCCC"> but I do think it has very</font>

160
00:07:02,560 --> 00:07:08,290
important features so there is this

161
00:07:05,380 --> 00:07:10,570
famous<font color="#CCCCCC"> quote that</font><font color="#E5E5E5"> Lisp is not you know</font>

162
00:07:08,290 --> 00:07:12,520
<font color="#E5E5E5">the right tool for</font><font color="#CCCCCC"> any particular domain</font>

163
00:07:10,570 --> 00:07:14,320
<font color="#CCCCCC">basically but</font><font color="#E5E5E5"> it allows you</font><font color="#CCCCCC"> to attack</font>

164
00:07:12,520 --> 00:07:16,870
new problems by<font color="#E5E5E5"> implementing</font><font color="#CCCCCC"> new</font>

165
00:07:14,320 --> 00:07:18,820
languages<font color="#E5E5E5"> that's basically what we're</font>

166
00:07:16,870 --> 00:07:20,440
doing<font color="#CCCCCC"> here it's</font><font color="#E5E5E5"> not a new idea it's</font><font color="#CCCCCC"> just</font>

167
00:07:18,820 --> 00:07:23,560
the idea<font color="#CCCCCC"> of embedding domain-specific</font>

168
00:07:20,440 --> 00:07:25,480
languages in<font color="#E5E5E5"> general purpose programming</font>

169
00:07:23,560 --> 00:07:27,700
languages and<font color="#E5E5E5"> that's basically what we</font>

170
00:07:25,480 --> 00:07:30,300
are<font color="#E5E5E5"> doing here I should also mention</font>

171
00:07:27,700 --> 00:07:32,920
since we're in the scheme in the<font color="#E5E5E5"> story</font>

172
00:07:30,300 --> 00:07:37,150
in the minimalistic language<font color="#E5E5E5"> there room</font>

173
00:07:32,920 --> 00:07:40,090
that the scheme standard yeah<font color="#E5E5E5"> this key</font>

174
00:07:37,150 --> 00:07:42,609
<font color="#E5E5E5">I'm sorry the scheme standard has this</font>

175
00:07:40,090 --> 00:07:44,349
famous quote<font color="#E5E5E5"> also</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> I could put</font>

176
00:07:42,610 --> 00:07:46,120
it here which is that programming

177
00:07:44,350 --> 00:07:48,520
<font color="#E5E5E5">languages should not be designed by</font>

178
00:07:46,120 --> 00:07:50,590
palying features on top<font color="#CCCCCC"> of features but</font>

179
00:07:48,520 --> 00:07:52,659
by removing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> weaknesses that make</font>

180
00:07:50,590 --> 00:07:54,940
those features appear necessary<font color="#E5E5E5"> so</font>

181
00:07:52,660 --> 00:08:00,310
there's a whole you know thing<font color="#E5E5E5"> about</font>

182
00:07:54,940 --> 00:08:01,060
minimalism<font color="#E5E5E5"> in scheme and Lisp so how did</font>

183
00:08:00,310 --> 00:08:04,660
<font color="#CCCCCC">it all start</font>

184
00:08:01,060 --> 00:08:06,010
so the<font color="#E5E5E5"> initial thing in</font><font color="#CCCCCC"> geeks</font><font color="#E5E5E5"> well the</font>

185
00:08:04,660 --> 00:08:08,770
initial<font color="#CCCCCC"> thing was playing with</font>

186
00:08:06,010 --> 00:08:10,960
reproducible software deployment<font color="#CCCCCC"> via Nix</font>

187
00:08:08,770 --> 00:08:13,359
<font color="#E5E5E5">and the first thing</font><font color="#CCCCCC"> that we came up</font><font color="#E5E5E5"> with</font>

188
00:08:10,960 --> 00:08:16,239
was is this way to represent package

189
00:08:13,360 --> 00:08:18,970
definitions<font color="#CCCCCC"> alright so if you've ever</font>

190
00:08:16,240 --> 00:08:21,100
hacked<font color="#E5E5E5"> Linux kuhnian X distribution</font>

191
00:08:18,970 --> 00:08:23,320
you've probably<font color="#E5E5E5"> you know added this kind</font>

192
00:08:21,100 --> 00:08:24,669
<font color="#E5E5E5">of package definition</font><font color="#CCCCCC"> this one you have</font>

193
00:08:23,320 --> 00:08:27,400
<font color="#E5E5E5">parentheses so it does look very</font>

194
00:08:24,669 --> 00:08:30,940
declarative<font color="#E5E5E5"> it could be JSON it could be</font>

195
00:08:27,400 --> 00:08:34,120
<font color="#CCCCCC">llamo</font><font color="#E5E5E5"> it's very similar</font><font color="#CCCCCC"> a bit but it's</font>

196
00:08:30,940 --> 00:08:36,280
actually code and you can<font color="#E5E5E5"> see there's a</font>

197
00:08:34,120 --> 00:08:37,510
string up<font color="#CCCCCC"> in there that actually</font>

198
00:08:36,280 --> 00:08:40,809
<font color="#CCCCCC">concatenates</font>

199
00:08:37,510 --> 00:08:45,939
string so<font color="#E5E5E5"> that gives you a whole bunch</font>

200
00:08:40,809 --> 00:08:48,040
of flexibility<font color="#CCCCCC"> as you can see yeah this</font>

201
00:08:45,940 --> 00:08:49,720
is this<font color="#E5E5E5"> is actually</font><font color="#CCCCCC"> code it looks</font><font color="#E5E5E5"> like a</font>

202
00:08:48,040 --> 00:08:52,689
purely<font color="#E5E5E5"> declarative thing but it's</font><font color="#CCCCCC"> really</font>

203
00:08:49,720 --> 00:08:55,360
<font color="#E5E5E5">cold so you can write functions that</font>

204
00:08:52,690 --> 00:08:57,430
create packages<font color="#E5E5E5"> out of other packages or</font>

205
00:08:55,360 --> 00:08:59,320
you<font color="#E5E5E5"> know parameterize packages you know</font>

206
00:08:57,430 --> 00:09:03,410
you can do all<font color="#CCCCCC"> sort of things</font>

207
00:08:59,320 --> 00:09:05,300
that's how it started<font color="#CCCCCC"> then if you're</font>

208
00:09:03,410 --> 00:09:07,400
using<font color="#CCCCCC"> the standalone geeks on your</font>

209
00:09:05,300 --> 00:09:09,290
machine<font color="#CCCCCC"> you get to you</font><font color="#E5E5E5"> know</font><font color="#CCCCCC"> as I said</font>

210
00:09:07,400 --> 00:09:11,150
<font color="#CCCCCC">before you can select which system</font>

211
00:09:09,290 --> 00:09:14,030
services are<font color="#E5E5E5"> running</font><font color="#CCCCCC"> on your machine so</font>

212
00:09:11,150 --> 00:09:17,600
<font color="#CCCCCC">for example if you write</font><font color="#E5E5E5"> this thing this</font>

213
00:09:14,030 --> 00:09:19,819
creates a<font color="#CCCCCC"> system object for OpenSSH with</font>

214
00:09:17,600 --> 00:09:21,020
the default configuration<font color="#CCCCCC"> right that's</font>

215
00:09:19,820 --> 00:09:23,420
<font color="#E5E5E5">pretty simple</font>

216
00:09:21,020 --> 00:09:25,970
but<font color="#E5E5E5"> obviously you can also specify a</font>

217
00:09:23,420 --> 00:09:28,579
configuration<font color="#E5E5E5"> so you say</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> open</font>

218
00:09:25,970 --> 00:09:31,430
<font color="#CCCCCC">SH configuration I want x11 forwarding</font>

219
00:09:28,580 --> 00:09:34,010
<font color="#E5E5E5">and I want to permit route login but</font>

220
00:09:31,430 --> 00:09:37,359
using public keys<font color="#E5E5E5"> something like that</font>

221
00:09:34,010 --> 00:09:41,390
and you can do that for<font color="#CCCCCC"> a</font><font color="#E5E5E5"> whole bunch of</font>

222
00:09:37,360 --> 00:09:44,030
services<font color="#CCCCCC"> so this one is is a bit more</font>

223
00:09:41,390 --> 00:09:45,800
<font color="#E5E5E5">interesting maybe this is seeing it so</font>

224
00:09:44,030 --> 00:09:50,810
see it you know it's this web interface

225
00:09:45,800 --> 00:09:52,459
<font color="#CCCCCC">for git that allows you</font><font color="#E5E5E5"> to browse web</font>

226
00:09:50,810 --> 00:09:55,099
Satori's and so on in a web interface

227
00:09:52,460 --> 00:09:57,170
<font color="#CCCCCC">it's if you're going</font><font color="#E5E5E5"> to set</font><font color="#CCCCCC"> it up by</font>

228
00:09:55,100 --> 00:09:59,680
<font color="#CCCCCC">hand it can</font><font color="#E5E5E5"> be quite tedious because</font><font color="#CCCCCC"> you</font>

229
00:09:57,170 --> 00:10:03,410
need to set up nginx you need to set up

230
00:09:59,680 --> 00:10:06,439
<font color="#E5E5E5">F CGI</font><font color="#CCCCCC"> wrap</font><font color="#E5E5E5"> you know this kind of thing</font>

231
00:10:03,410 --> 00:10:08,660
but<font color="#E5E5E5"> as it turns out if you're using gigs</font>

232
00:10:06,440 --> 00:10:12,890
<font color="#E5E5E5">you can just say this and it's going to</font>

233
00:10:08,660 --> 00:10:15,110
<font color="#E5E5E5">ensure that nginx</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> f CGI wrap are</font>

234
00:10:12,890 --> 00:10:17,600
actually set up<font color="#CCCCCC"> correctly</font><font color="#E5E5E5"> somehow on</font>

235
00:10:15,110 --> 00:10:18,740
your system it will just<font color="#E5E5E5"> work so I think</font>

236
00:10:17,600 --> 00:10:20,330
that's<font color="#CCCCCC"> pretty cool did I get the</font>

237
00:10:18,740 --> 00:10:25,910
configuration<font color="#E5E5E5"> right because I think the</font>

238
00:10:20,330 --> 00:10:28,490
authors are right here I hope so<font color="#CCCCCC"> and you</font>

239
00:10:25,910 --> 00:10:29,839
don't get<font color="#E5E5E5"> to this is the same basic</font>

240
00:10:28,490 --> 00:10:31,430
language<font color="#E5E5E5"> right you don't get to learn a</font>

241
00:10:29,840 --> 00:10:36,350
new<font color="#E5E5E5"> configuration language every time</font>

242
00:10:31,430 --> 00:10:38,780
<font color="#E5E5E5">that's my point</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> like I</font><font color="#CCCCCC"> said it's</font>

243
00:10:36,350 --> 00:10:41,270
also cold so<font color="#E5E5E5"> let's say you can say I</font>

244
00:10:38,780 --> 00:10:43,040
<font color="#E5E5E5">want to take the default list of</font><font color="#CCCCCC"> Desktop</font>

245
00:10:41,270 --> 00:10:45,020
<font color="#E5E5E5">Services</font><font color="#CCCCCC"> you know that you would</font>

246
00:10:43,040 --> 00:10:48,170
<font color="#CCCCCC">normally use</font><font color="#E5E5E5"> to configure your laptop</font>

247
00:10:45,020 --> 00:10:50,449
for<font color="#E5E5E5"> example but</font><font color="#CCCCCC"> I want to remove the NTP</font>

248
00:10:48,170 --> 00:10:53,810
service that's provided as part<font color="#E5E5E5"> of that</font>

249
00:10:50,450 --> 00:10:55,640
<font color="#E5E5E5">default list of services and so this is</font>

250
00:10:53,810 --> 00:10:57,260
actually<font color="#CCCCCC"> scheme the lambda keywords</font>

251
00:10:55,640 --> 00:10:59,210
means with that we're defining a

252
00:10:57,260 --> 00:11:01,400
function<font color="#E5E5E5"> basically that takes a service</font>

253
00:10:59,210 --> 00:11:04,280
and then we look at<font color="#E5E5E5"> the kind of the</font>

254
00:11:01,400 --> 00:11:06,230
service and if it's actually<font color="#E5E5E5"> the NTP</font>

255
00:11:04,280 --> 00:11:10,329
service then we<font color="#E5E5E5"> remove it from</font><font color="#CCCCCC"> that list</font>

256
00:11:06,230 --> 00:11:10,330
<font color="#CCCCCC">you know that programming</font>

257
00:11:11,010 --> 00:11:16,569
we can do a bit<font color="#E5E5E5"> more advanced things</font>

258
00:11:14,230 --> 00:11:19,900
<font color="#E5E5E5">like I want to say</font><font color="#CCCCCC"> alright I'm taking</font>

259
00:11:16,570 --> 00:11:22,029
<font color="#CCCCCC">this</font><font color="#E5E5E5"> desktop services list but I want to</font>

260
00:11:19,900 --> 00:11:23,860
change some of the configuration for

261
00:11:22,029 --> 00:11:27,010
<font color="#CCCCCC">these services let's say I want to</font>

262
00:11:23,860 --> 00:11:30,250
<font color="#E5E5E5">change how</font><font color="#CCCCCC"> min get TTY is configured by</font>

263
00:11:27,010 --> 00:11:33,939
adding a message of<font color="#E5E5E5"> the day</font><font color="#CCCCCC"> or I want</font><font color="#E5E5E5"> to</font>

264
00:11:30,250 --> 00:11:37,589
<font color="#E5E5E5">change you power to</font><font color="#CCCCCC"> specify you know</font>

265
00:11:33,940 --> 00:11:40,900
what happens if I<font color="#E5E5E5"> close the lead etc etc</font>

266
00:11:37,589 --> 00:11:44,830
again this is configuration<font color="#E5E5E5"> embedded in</font>

267
00:11:40,900 --> 00:11:46,750
a general purpose<font color="#E5E5E5"> language so there is</font>

268
00:11:44,830 --> 00:11:48,850
still<font color="#CCCCCC"> open issues like often people see</font>

269
00:11:46,750 --> 00:11:50,470
this and they<font color="#CCCCCC"> say</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> alright that that</font>

270
00:11:48,850 --> 00:11:52,240
looks interesting<font color="#CCCCCC"> that allows you to</font>

271
00:11:50,470 --> 00:11:55,180
<font color="#E5E5E5">actually program your configuration</font>

272
00:11:52,240 --> 00:11:57,700
which can be<font color="#E5E5E5"> useful but</font><font color="#CCCCCC"> are you really</font>

273
00:11:55,180 --> 00:12:01,930
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> write bindings for every</font>

274
00:11:57,700 --> 00:12:10,930
<font color="#CCCCCC">configuration file out there and the</font>

275
00:12:01,930 --> 00:12:12,880
<font color="#CCCCCC">answer so far is yes and yeah it turns</font>

276
00:12:10,930 --> 00:12:15,370
out<font color="#E5E5E5"> to work so far I mean</font><font color="#CCCCCC"> it's not too</font>

277
00:12:12,880 --> 00:12:17,620
much<font color="#E5E5E5"> of a pain sometimes we have you</font>

278
00:12:15,370 --> 00:12:20,320
know cheat<font color="#E5E5E5"> code that allows us to escape</font>

279
00:12:17,620 --> 00:12:22,060
<font color="#CCCCCC">from day</font><font color="#E5E5E5"> the scheme bindings if we</font>

280
00:12:20,320 --> 00:12:24,100
really need to but in general it<font color="#CCCCCC"> just</font>

281
00:12:22,060 --> 00:12:28,500
works<font color="#E5E5E5"> and that's that's a reasonable</font>

282
00:12:24,100 --> 00:12:28,500
thing<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> so we'll see how it goes</font>

283
00:12:29,070 --> 00:12:34,420
<font color="#CCCCCC">all right so to summarize with gigs</font>

284
00:12:32,190 --> 00:12:36,790
<font color="#E5E5E5">being embedded in a general-purpose</font>

285
00:12:34,420 --> 00:12:39,370
language forget so we get all this

286
00:12:36,790 --> 00:12:41,290
<font color="#E5E5E5">program ability that I</font><font color="#CCCCCC"> showed before but</font>

287
00:12:39,370 --> 00:12:43,209
we also get the<font color="#CCCCCC"> ability to build new</font>

288
00:12:41,290 --> 00:12:45,130
<font color="#E5E5E5">tools that would</font><font color="#CCCCCC"> otherwise be pretty</font>

289
00:12:43,209 --> 00:12:47,560
hard<font color="#CCCCCC"> to build</font><font color="#E5E5E5"> if we didn't have a</font>

290
00:12:45,130 --> 00:12:49,720
<font color="#E5E5E5">general-purpose language available so</font>

291
00:12:47,560 --> 00:12:51,609
among<font color="#E5E5E5"> these tools we have a new max</font>

292
00:12:49,720 --> 00:12:53,529
interface<font color="#E5E5E5"> so if Emacs is your thing you</font>

293
00:12:51,610 --> 00:12:56,320
<font color="#CCCCCC">can</font><font color="#E5E5E5"> actually manage your whole you know</font>

294
00:12:53,529 --> 00:12:56,920
package set directly from within Emacs<font color="#CCCCCC"> I</font>

295
00:12:56,320 --> 00:12:59,770
like it

296
00:12:56,920 --> 00:13:01,569
and then<font color="#E5E5E5"> we have tools like gigs refresh</font>

297
00:12:59,770 --> 00:13:06,279
with<font color="#E5E5E5"> which automatically updates</font>

298
00:13:01,570 --> 00:13:08,470
packages<font color="#E5E5E5"> gigs lint which means gigs</font>

299
00:13:06,279 --> 00:13:10,540
graph<font color="#CCCCCC"> kicks system extension graph which</font>

300
00:13:08,470 --> 00:13:12,220
allows you to<font color="#CCCCCC"> inspect your operating</font>

301
00:13:10,540 --> 00:13:16,439
system declaration basically if you want

302
00:13:12,220 --> 00:13:16,440
<font color="#CCCCCC">to</font><font color="#E5E5E5"> see how services fit together</font>

303
00:13:18,180 --> 00:13:25,380
<font color="#E5E5E5">all right but since we are doing scheme</font>

304
00:13:21,690 --> 00:13:29,780
<font color="#CCCCCC">a whole lot</font><font color="#E5E5E5"> what if we try to unify</font>

305
00:13:25,380 --> 00:13:32,220
beyond this this glue layer basically

306
00:13:29,780 --> 00:13:34,800
<font color="#E5E5E5">I've only talked about</font><font color="#CCCCCC"> the glue layer</font>

307
00:13:32,220 --> 00:13:37,440
that you know glues<font color="#CCCCCC"> packaging</font><font color="#E5E5E5"> services</font>

308
00:13:34,800 --> 00:13:42,599
etc together<font color="#E5E5E5"> but what if we went a bit</font>

309
00:13:37,440 --> 00:13:44,610
beyond so<font color="#E5E5E5"> there are often questions</font>

310
00:13:42,600 --> 00:13:46,920
<font color="#CCCCCC">about</font><font color="#E5E5E5"> Nick's versus</font><font color="#CCCCCC"> gigs what's the</font>

311
00:13:44,610 --> 00:13:49,700
difference etcetera etcetera<font color="#CCCCCC"> so from a</font>

312
00:13:46,920 --> 00:13:54,120
technical viewpoint<font color="#CCCCCC"> this is an example</font>

313
00:13:49,700 --> 00:13:56,280
<font color="#CCCCCC">Nick's uses</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> name DSL domain-specific</font>

314
00:13:54,120 --> 00:13:58,290
language that's an external language

315
00:13:56,280 --> 00:14:01,020
designed specifically for<font color="#E5E5E5"> the purpose of</font>

316
00:13:58,290 --> 00:14:04,910
the Nick's package<font color="#CCCCCC"> manager'</font><font color="#E5E5E5"> it looks</font>

317
00:14:01,020 --> 00:14:07,650
like this<font color="#E5E5E5"> so curly braces</font><font color="#CCCCCC"> as you can see</font>

318
00:14:04,910 --> 00:14:08,880
so<font color="#E5E5E5"> you have functions function calls</font>

319
00:14:07,650 --> 00:14:13,110
it's a functional programming language

320
00:14:08,880 --> 00:14:15,270
lazily evaluated<font color="#CCCCCC"> it's really cool but it</font>

321
00:14:13,110 --> 00:14:17,880
remains<font color="#E5E5E5"> a domain-specific language right</font>

322
00:14:15,270 --> 00:14:18,750
so it's<font color="#E5E5E5"> it's really</font><font color="#CCCCCC"> designed</font><font color="#E5E5E5"> for this</font>

323
00:14:17,880 --> 00:14:20,970
<font color="#E5E5E5">particular domain</font>

324
00:14:18,750 --> 00:14:23,490
you know defining packages and<font color="#E5E5E5"> so on but</font>

325
00:14:20,970 --> 00:14:25,650
it's not<font color="#E5E5E5"> designed to do anything</font><font color="#CCCCCC"> roughly</font>

326
00:14:23,490 --> 00:14:28,290
<font color="#E5E5E5">so for example in a package definition</font>

327
00:14:25,650 --> 00:14:31,620
<font color="#E5E5E5">in</font><font color="#CCCCCC"> Nick's what you would do is insert</font>

328
00:14:28,290 --> 00:14:33,780
bash snippets<font color="#E5E5E5"> to define the actions that</font>

329
00:14:31,620 --> 00:14:35,580
you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to do during the package field</font>

330
00:14:33,780 --> 00:14:37,439
<font color="#E5E5E5">right so you have</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> package definition</font>

331
00:14:35,580 --> 00:14:40,170
<font color="#E5E5E5">that's within the next language and</font>

332
00:14:37,440 --> 00:14:42,270
right here you have a bash snippet

333
00:14:40,170 --> 00:14:47,310
<font color="#E5E5E5">that's going to run when you</font><font color="#CCCCCC"> actually</font>

334
00:14:42,270 --> 00:14:49,110
build the package this it does a<font color="#E5E5E5"> job</font>

335
00:14:47,310 --> 00:14:51,630
right it can<font color="#E5E5E5"> be pretty convenient at</font>

336
00:14:49,110 --> 00:14:53,490
times but there's there's<font color="#E5E5E5"> a catch to it</font>

337
00:14:51,630 --> 00:14:56,340
which is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is these are just</font>

338
00:14:53,490 --> 00:14:58,920
strings<font color="#E5E5E5"> right and you end up mixing two</font>

339
00:14:56,340 --> 00:15:00,750
different programming<font color="#E5E5E5"> languages and in</font>

340
00:14:58,920 --> 00:15:03,630
fact you end up concatenating strings

341
00:15:00,750 --> 00:15:05,670
<font color="#CCCCCC">that happen to form bash programs and</font>

342
00:15:03,630 --> 00:15:10,170
sometimes<font color="#CCCCCC"> that can be tricky</font>

343
00:15:05,670 --> 00:15:13,969
one example<font color="#E5E5E5"> is escapes you know there's</font>

344
00:15:10,170 --> 00:15:16,620
obviously<font color="#CCCCCC"> clashes between the nicks</font>

345
00:15:13,970 --> 00:15:19,020
<font color="#E5E5E5">syntax and the bash syntax like</font><font color="#CCCCCC"> Nick's</font>

346
00:15:16,620 --> 00:15:21,150
uses dollars<font color="#E5E5E5"> by</font><font color="#CCCCCC"> shooties dollars so how</font>

347
00:15:19,020 --> 00:15:23,430
do you escape<font color="#E5E5E5"> things that creates a</font>

348
00:15:21,150 --> 00:15:25,680
whole<font color="#E5E5E5"> class of problems</font><font color="#CCCCCC"> and a whole</font>

349
00:15:23,430 --> 00:15:27,930
class of issues I guess<font color="#E5E5E5"> sometimes it can</font>

350
00:15:25,680 --> 00:15:29,449
be tricky<font color="#CCCCCC"> to find</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> right way to to</font>

351
00:15:27,930 --> 00:15:33,649
<font color="#E5E5E5">escape things</font>

352
00:15:29,449 --> 00:15:36,979
and so since<font color="#CCCCCC"> we have a general-purpose</font>

353
00:15:33,649 --> 00:15:39,619
<font color="#CCCCCC">language at hand</font><font color="#E5E5E5"> it came naturally that</font>

354
00:15:36,980 --> 00:15:42,379
we could after<font color="#E5E5E5"> all use scheme not only</font>

355
00:15:39,619 --> 00:15:44,540
to glue things<font color="#E5E5E5"> together but also to</font>

356
00:15:42,379 --> 00:15:47,239
<font color="#E5E5E5">actually perform you know specific</font>

357
00:15:44,540 --> 00:15:49,819
actions<font color="#E5E5E5"> so one example that I</font><font color="#CCCCCC"> like it</font>

358
00:15:47,239 --> 00:15:52,249
the initial<font color="#CCCCCC"> run disk</font><font color="#E5E5E5"> if you're familiar</font>

359
00:15:49,819 --> 00:15:54,709
is how the initial<font color="#CCCCCC"> run disk or Linux is</font>

360
00:15:52,249 --> 00:15:57,769
really made it's a mixture of<font color="#E5E5E5"> C programs</font>

361
00:15:54,709 --> 00:15:59,599
that involve a script that<font color="#E5E5E5"> you know do</font>

362
00:15:57,769 --> 00:16:01,369
you know all sorts<font color="#CCCCCC"> of things and</font>

363
00:15:59,600 --> 00:16:04,100
<font color="#E5E5E5">eventually you end up with a</font><font color="#CCCCCC"> cpio</font>

364
00:16:01,369 --> 00:16:06,350
archive<font color="#E5E5E5"> it can be quite tricky</font><font color="#CCCCCC"> and</font>

365
00:16:04,100 --> 00:16:08,839
inside that<font color="#E5E5E5"> archive you typically have C</font>

366
00:16:06,350 --> 00:16:11,269
programs that use a custom<font color="#E5E5E5"> C library</font>

367
00:16:08,839 --> 00:16:14,929
<font color="#CCCCCC">blah blah blah it's it's it's a whole</font>

368
00:16:11,269 --> 00:16:18,889
<font color="#E5E5E5">world so what we're doing</font><font color="#CCCCCC"> here is that</font>

369
00:16:14,929 --> 00:16:21,649
<font color="#E5E5E5">we're using scheme again so what if we</font>

370
00:16:18,889 --> 00:16:24,169
just<font color="#E5E5E5"> write scheme that's going to run</font>

371
00:16:21,649 --> 00:16:26,119
into<font color="#CCCCCC"> that</font><font color="#E5E5E5"> initial one D</font><font color="#CCCCCC"> Ram</font><font color="#E5E5E5"> disk when</font>

372
00:16:24,169 --> 00:16:28,369
you boot<font color="#CCCCCC"> your system that's that's what</font>

373
00:16:26,119 --> 00:16:30,319
we're doing<font color="#E5E5E5"> it simplifies</font><font color="#CCCCCC"> things because</font>

374
00:16:28,369 --> 00:16:32,359
we can reuse code we already know the

375
00:16:30,319 --> 00:16:34,608
language we can<font color="#E5E5E5"> it's a general-purpose</font>

376
00:16:32,359 --> 00:16:37,639
<font color="#E5E5E5">language anyway so we can do anything</font>

377
00:16:34,609 --> 00:16:40,119
<font color="#E5E5E5">basically and it doesn't work</font><font color="#CCCCCC"> so this is</font>

378
00:16:37,639 --> 00:16:42,799
actual code and what<font color="#E5E5E5"> we're doing</font><font color="#CCCCCC"> here</font>

379
00:16:40,119 --> 00:16:46,189
<font color="#CCCCCC">that there</font><font color="#E5E5E5"> is a special hash tilled</font>

380
00:16:42,799 --> 00:16:49,489
<font color="#E5E5E5">thing there which means we're actually</font>

381
00:16:46,189 --> 00:16:51,649
<font color="#E5E5E5">doing code staging so this is pretty</font>

382
00:16:49,489 --> 00:16:54,470
<font color="#CCCCCC">much the equivalent</font><font color="#E5E5E5"> of concatenating</font>

383
00:16:51,649 --> 00:16:56,509
strings together<font color="#E5E5E5"> to create a program but</font>

384
00:16:54,470 --> 00:17:00,049
here we generate generating a scheme

385
00:16:56,509 --> 00:17:01,850
program and this<font color="#E5E5E5"> is all scheme so we</font>

386
00:17:00,049 --> 00:17:05,119
know that the syntax<font color="#CCCCCC"> is going to be</font>

387
00:17:01,850 --> 00:17:09,529
valid<font color="#E5E5E5"> we can easily refer to existing</font>

388
00:17:05,119 --> 00:17:11,029
<font color="#E5E5E5">objects in scheme via hash dollar so we</font>

389
00:17:09,529 --> 00:17:13,669
know we're<font color="#CCCCCC"> basically generating valid</font>

390
00:17:11,029 --> 00:17:15,648
code we can reuse scheme libraries and

391
00:17:13,669 --> 00:17:19,899
so on and so forth<font color="#CCCCCC"> and we end</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> with</font>

392
00:17:15,648 --> 00:17:19,898
scheme inside the initial<font color="#E5E5E5"> Ram disk I</font>

393
00:17:20,980 --> 00:17:25,909
like to show the<font color="#E5E5E5"> diagram which explains</font>

394
00:17:24,199 --> 00:17:29,000
how the system the<font color="#E5E5E5"> standalone Geeks</font>

395
00:17:25,909 --> 00:17:31,250
works<font color="#CCCCCC"> basically we have the</font><font color="#E5E5E5"> Linux kernel</font>

396
00:17:29,000 --> 00:17:34,669
we have the initial Ram disk<font color="#E5E5E5"> which runs</font>

397
00:17:31,250 --> 00:17:36,769
<font color="#CCCCCC">guy'll but we also have the init system</font>

398
00:17:34,669 --> 00:17:40,279
<font color="#E5E5E5">which is called</font><font color="#CCCCCC"> goodness</font><font color="#E5E5E5"> Shepherd which</font>

399
00:17:36,769 --> 00:17:42,139
<font color="#E5E5E5">also uses guile and then possibly we</font>

400
00:17:40,279 --> 00:17:43,440
have application that may or may<font color="#CCCCCC"> not use</font>

401
00:17:42,139 --> 00:17:48,389
<font color="#E5E5E5">guile</font>

402
00:17:43,440 --> 00:17:51,029
right so that the idea<font color="#CCCCCC"> and because we</font>

403
00:17:48,389 --> 00:17:53,189
had this<font color="#CCCCCC"> init</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> in scheme</font><font color="#E5E5E5"> well we</font>

404
00:17:51,029 --> 00:17:55,740
can also use this hash TL thing to

405
00:17:53,190 --> 00:17:57,539
generate the bits of configuration for

406
00:17:55,740 --> 00:18:00,049
the init system<font color="#E5E5E5"> so instead of</font><font color="#CCCCCC"> generating</font>

407
00:17:57,539 --> 00:18:02,220
<font color="#CCCCCC">the generating unit files for example</font>

408
00:18:00,049 --> 00:18:03,658
<font color="#E5E5E5">which would be just</font><font color="#CCCCCC"> trains that we</font>

409
00:18:02,220 --> 00:18:05,940
concatenate together we can actually

410
00:18:03,659 --> 00:18:08,340
have<font color="#E5E5E5"> access to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> API</font><font color="#CCCCCC"> of the init</font>

411
00:18:05,940 --> 00:18:11,399
system<font color="#CCCCCC"> we can generate its</font><font color="#E5E5E5"> configuration</font>

412
00:18:08,340 --> 00:18:14,610
we can<font color="#E5E5E5"> share code you know reuse</font>

413
00:18:11,399 --> 00:18:18,178
existing code inside<font color="#CCCCCC"> the init system</font><font color="#E5E5E5"> so</font>

414
00:18:14,610 --> 00:18:20,158
one<font color="#E5E5E5"> example</font><font color="#CCCCCC"> that I like is well alright</font>

415
00:18:18,179 --> 00:18:22,470
this is this is the definition<font color="#CCCCCC"> of a</font>

416
00:18:20,159 --> 00:18:24,600
service that<font color="#CCCCCC"> mount</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> unmount</font><font color="#E5E5E5"> file</font>

417
00:18:22,470 --> 00:18:27,389
systems we have access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the mount</font>

418
00:18:24,600 --> 00:18:32,039
procedure to perform the mount<font color="#E5E5E5"> sis call</font>

419
00:18:27,389 --> 00:18:34,379
basically<font color="#E5E5E5"> so we can do that and yeah</font>

420
00:18:32,039 --> 00:18:37,620
this<font color="#E5E5E5"> is the example that I like so this</font>

421
00:18:34,379 --> 00:18:40,590
<font color="#E5E5E5">is you have the</font><font color="#CCCCCC"> beetle be IRC</font><font color="#E5E5E5"> gateway</font>

422
00:18:37,620 --> 00:18:42,178
<font color="#E5E5E5">this is its service definition but if</font>

423
00:18:40,590 --> 00:18:44,519
you want to run it in a container<font color="#E5E5E5"> you</font>

424
00:18:42,179 --> 00:18:48,740
can just say<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> I'm importing the</font>

425
00:18:44,519 --> 00:18:52,590
newbie Linux container library inside my

426
00:18:48,740 --> 00:18:54,600
<font color="#CCCCCC">Shepherd PID 1</font><font color="#E5E5E5"> environment and now I say</font>

427
00:18:52,590 --> 00:18:56,549
make fork<font color="#CCCCCC"> exec constructor slash</font>

428
00:18:54,600 --> 00:18:59,309
container<font color="#E5E5E5"> which is a function provided</font>

429
00:18:56,549 --> 00:19:02,580
<font color="#E5E5E5">by this library and I'm running that</font>

430
00:18:59,309 --> 00:19:04,529
demon in a container<font color="#CCCCCC"> right so</font><font color="#E5E5E5"> we were</font>

431
00:19:02,580 --> 00:19:09,809
<font color="#CCCCCC">just</font><font color="#E5E5E5"> reusing existing</font><font color="#CCCCCC"> guy'll code</font>

432
00:19:04,529 --> 00:19:13,559
directly in the<font color="#E5E5E5"> service manager that's</font>

433
00:19:09,809 --> 00:19:16,470
<font color="#E5E5E5">really cool I</font><font color="#CCCCCC"> think all</font><font color="#E5E5E5"> right so I think</font>

434
00:19:13,559 --> 00:19:18,269
<font color="#E5E5E5">it's about time to</font><font color="#CCCCCC"> wrap up</font><font color="#E5E5E5"> so what we do</font>

435
00:19:16,470 --> 00:19:20,279
have is<font color="#CCCCCC"> that we're using a minimalistic</font>

436
00:19:18,269 --> 00:19:22,350
<font color="#E5E5E5">language that some people view</font><font color="#CCCCCC"> as</font>

437
00:19:20,279 --> 00:19:24,929
academic right<font color="#E5E5E5"> it has very basic</font>

438
00:19:22,350 --> 00:19:26,668
features it has macros basically but

439
00:19:24,929 --> 00:19:29,190
simply using macros we can build

440
00:19:26,669 --> 00:19:32,159
embedded domain-specific languages of

441
00:19:29,190 --> 00:19:36,029
all kinds<font color="#E5E5E5"> and that's how we end up</font>

442
00:19:32,159 --> 00:19:37,830
defining complete systems<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> it's</font>

443
00:19:36,029 --> 00:19:39,539
pretty hackable<font color="#E5E5E5"> we have a single git</font>

444
00:19:37,830 --> 00:19:41,580
repository that contains the whole

445
00:19:39,539 --> 00:19:43,740
system including package<font color="#CCCCCC"> definition so</font>

446
00:19:41,580 --> 00:19:46,379
<font color="#E5E5E5">you can basically</font><font color="#CCCCCC"> grep the whole system</font>

447
00:19:43,740 --> 00:19:47,970
<font color="#CCCCCC">you can navigate interfaces and I think</font>

448
00:19:46,379 --> 00:19:49,980
that that's pretty unusual<font color="#CCCCCC"> for a</font>

449
00:19:47,970 --> 00:19:52,529
complete<font color="#E5E5E5"> gnu/linux distribution to be</font>

450
00:19:49,980 --> 00:19:55,409
<font color="#CCCCCC">you know searchable and hackable in this</font>

451
00:19:52,529 --> 00:19:57,370
way<font color="#E5E5E5"> and we use</font><font color="#CCCCCC"> code staging techniques</font>

452
00:19:55,409 --> 00:19:59,950
so this hash shield

453
00:19:57,370 --> 00:20:02,290
<font color="#CCCCCC">that I should</font><font color="#E5E5E5"> before to basically allow</font>

454
00:19:59,950 --> 00:20:04,540
us to glue together different layers of

455
00:20:02,290 --> 00:20:09,399
scheme code that are going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> run at</font>

456
00:20:04,540 --> 00:20:11,980
<font color="#CCCCCC">different moments</font><font color="#E5E5E5"> in time and this is it</font>

457
00:20:09,400 --> 00:20:14,920
<font color="#E5E5E5">I invite you to join us now and share</font>

458
00:20:11,980 --> 00:20:17,530
<font color="#E5E5E5">the</font><font color="#CCCCCC"> parenthesis you can install the</font>

459
00:20:14,920 --> 00:20:19,900
distribution you<font color="#CCCCCC"> can get one of these</font>

460
00:20:17,530 --> 00:20:22,389
reference cards you can<font color="#CCCCCC"> use it report</font>

461
00:20:19,900 --> 00:20:25,950
issues and you can<font color="#E5E5E5"> share your</font><font color="#CCCCCC"> ideas we</font>

462
00:20:22,390 --> 00:20:28,450
were supposed to release<font color="#CCCCCC"> 1.0 for FOSDEM</font>

463
00:20:25,950 --> 00:20:32,470
<font color="#E5E5E5">but I don't have networking access so</font>

464
00:20:28,450 --> 00:20:34,570
I'm<font color="#E5E5E5"> not going to do it right now</font><font color="#CCCCCC"> and now</font>

465
00:20:32,470 --> 00:20:38,890
there are<font color="#E5E5E5"> other reasons but anyway it's</font>

466
00:20:34,570 --> 00:20:40,809
going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> happen</font><font color="#E5E5E5"> very soon so I invite</font>

467
00:20:38,890 --> 00:20:44,340
<font color="#CCCCCC">you to give it a try and</font><font color="#E5E5E5"> report what</font><font color="#CCCCCC"> you</font>

468
00:20:40,809 --> 00:20:44,340
think about<font color="#E5E5E5"> it thank you</font>

469
00:20:45,590 --> 00:20:54,829
[Applause]

470
00:21:22,820 --> 00:21:27,480
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right so the</font><font color="#CCCCCC"> question is how do we</font>

471
00:21:25,440 --> 00:21:30,990
<font color="#CCCCCC">generate configuration files from from</font>

472
00:21:27,480 --> 00:21:33,149
the scheme snippet<font color="#CCCCCC"> that we have we use</font>

473
00:21:30,990 --> 00:21:35,070
so in many<font color="#E5E5E5"> cases</font><font color="#CCCCCC"> the configuration file</font>

474
00:21:33,149 --> 00:21:41,820
format is<font color="#E5E5E5"> basically key a</font><font color="#CCCCCC"> key value</font>

475
00:21:35,070 --> 00:21:43,860
<font color="#E5E5E5">thing and so we we have a generic system</font>

476
00:21:41,820 --> 00:21:45,990
that allows us<font color="#CCCCCC"> to define bindings for</font>

477
00:21:43,860 --> 00:21:48,269
for this type of configuration<font color="#E5E5E5"> file</font>

478
00:21:45,990 --> 00:21:50,130
basically<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that automatically</font><font color="#E5E5E5"> takes</font>

479
00:21:48,269 --> 00:21:52,679
<font color="#CCCCCC">care of generating the configuration</font>

480
00:21:50,130 --> 00:21:55,559
file<font color="#E5E5E5"> and then we also have more ad hoc</font>

481
00:21:52,679 --> 00:22:10,590
ways of generating<font color="#E5E5E5"> special configuration</font>

482
00:21:55,559 --> 00:22:12,389
files for<font color="#CCCCCC"> example do we</font><font color="#E5E5E5"> have tools to</font>

483
00:22:10,590 --> 00:22:14,519
<font color="#E5E5E5">convert existing configurations to</font>

484
00:22:12,389 --> 00:22:17,158
scheme no we don't have them but<font color="#E5E5E5"> that's</font>

485
00:22:14,519 --> 00:22:19,019
<font color="#E5E5E5">why we</font><font color="#CCCCCC"> usually provide</font><font color="#E5E5E5"> a way to specify</font>

486
00:22:17,159 --> 00:22:20,429
<font color="#E5E5E5">if you don't want to use the scheme</font>

487
00:22:19,019 --> 00:22:22,529
version because you already have

488
00:22:20,429 --> 00:22:23,940
<font color="#E5E5E5">configuration files usually</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can do</font>

489
00:22:22,529 --> 00:22:26,279
it we provide an escape<font color="#E5E5E5"> hatch</font><font color="#CCCCCC"> that</font>

490
00:22:23,940 --> 00:22:30,919
<font color="#CCCCCC">allows you</font><font color="#E5E5E5"> to say</font><font color="#CCCCCC"> alright I'm using this</font>

491
00:22:26,279 --> 00:22:33,919
configuration<font color="#E5E5E5"> file for nginx for example</font>

492
00:22:30,919 --> 00:22:33,919
yes

493
00:22:50,460 --> 00:22:54,610
<font color="#E5E5E5">all right so any so the question is do</font>

494
00:22:53,680 --> 00:22:56,710
<font color="#CCCCCC">we have any plans</font><font color="#E5E5E5"> to support</font>

495
00:22:54,610 --> 00:22:59,080
<font color="#E5E5E5">transactional upgrades at the system</font>

496
00:22:56,710 --> 00:23:02,590
level<font color="#E5E5E5"> right it's actually already the</font>

497
00:22:59,080 --> 00:23:05,199
case so<font color="#E5E5E5"> problem solved</font><font color="#CCCCCC"> so you can you</font>

498
00:23:02,590 --> 00:23:06,669
<font color="#CCCCCC">can when you instantiate a system</font><font color="#E5E5E5"> with a</font>

499
00:23:05,200 --> 00:23:08,440
different configuration it actually

500
00:23:06,670 --> 00:23:11,080
creates a new generation of the system

501
00:23:08,440 --> 00:23:12,910
so you<font color="#CCCCCC"> can at any</font><font color="#E5E5E5"> time when you boot</font>

502
00:23:11,080 --> 00:23:14,919
your<font color="#CCCCCC"> system you can choose in the grab</font>

503
00:23:12,910 --> 00:23:17,170
menu which generation you want to boot

504
00:23:14,920 --> 00:23:19,270
and you can<font color="#CCCCCC"> boot an older generation of</font>

505
00:23:17,170 --> 00:23:22,470
your system<font color="#E5E5E5"> you can roll back to an</font>

506
00:23:19,270 --> 00:23:26,010
older version of<font color="#E5E5E5"> your system basically</font>

507
00:23:22,470 --> 00:23:26,010
yeah<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right</font>

508
00:23:48,980 --> 00:23:52,940
so the question is whether we could

509
00:23:50,690 --> 00:23:55,520
<font color="#E5E5E5">manage a whole fleet of systems and that</font>

510
00:23:52,940 --> 00:23:59,290
stateful systems<font color="#E5E5E5"> you're saying that that</font>

511
00:23:55,520 --> 00:24:02,120
do not use<font color="#E5E5E5"> geeks did I get that right or</font>

512
00:23:59,290 --> 00:24:03,649
that's outside the<font color="#CCCCCC"> scope of geeks I</font>

513
00:24:02,120 --> 00:24:06,800
would say so geeks is really concerned

514
00:24:03,650 --> 00:24:08,930
with<font color="#E5E5E5"> configuring</font><font color="#CCCCCC"> geek systems and we</font>

515
00:24:06,800 --> 00:24:10,879
could in theory manage<font color="#E5E5E5"> your whole fleet</font>

516
00:24:08,930 --> 00:24:12,290
<font color="#CCCCCC">of geeks machines for example we don't</font>

517
00:24:10,880 --> 00:24:13,850
<font color="#E5E5E5">do that yet we</font><font color="#CCCCCC"> don't have the tooling</font>

518
00:24:12,290 --> 00:24:17,899
yet to do that<font color="#CCCCCC"> but I know</font><font color="#E5E5E5"> that for</font>

519
00:24:13,850 --> 00:24:21,159
<font color="#CCCCCC">example NYX sauce</font><font color="#E5E5E5"> has tools</font><font color="#CCCCCC"> to do that</font>

520
00:24:17,900 --> 00:24:23,240
so we could say have basically<font color="#E5E5E5"> a single</font>

521
00:24:21,160 --> 00:24:25,700
<font color="#E5E5E5">configuration template and</font><font color="#CCCCCC"> apply to a</font>

522
00:24:23,240 --> 00:24:51,560
<font color="#E5E5E5">whole number of machines that's what we</font>

523
00:24:25,700 --> 00:24:54,530
<font color="#E5E5E5">could do so that's really question to</font>

524
00:24:51,560 --> 00:24:56,000
<font color="#E5E5E5">the Commons which</font><font color="#CCCCCC"> is that geeks is</font>

525
00:24:54,530 --> 00:24:58,210
wonderful<font color="#E5E5E5"> basically you can</font><font color="#CCCCCC"> easily</font>

526
00:24:56,000 --> 00:24:58,210
<font color="#CCCCCC">convert</font>

527
00:25:04,790 --> 00:25:25,530
<font color="#E5E5E5">okay all right</font><font color="#CCCCCC"> one last</font><font color="#E5E5E5"> question maybe</font>

528
00:25:12,720 --> 00:25:27,480
are we still yes so what happens if you

529
00:25:25,530 --> 00:25:30,690
change<font color="#CCCCCC"> your system</font><font color="#E5E5E5"> configuration is it</font>

530
00:25:27,480 --> 00:25:32,370
<font color="#E5E5E5">automatically we configure right so no</font>

531
00:25:30,690 --> 00:25:34,350
it's not<font color="#E5E5E5"> automatically we configured you</font>

532
00:25:32,370 --> 00:25:36,959
have you basically<font color="#CCCCCC"> edit your config file</font>

533
00:25:34,350 --> 00:25:39,240
<font color="#E5E5E5">and then you run gig system</font><font color="#CCCCCC"> reconfigure</font>

534
00:25:36,960 --> 00:25:44,270
and that will instantiate the new

535
00:25:39,240 --> 00:25:44,270
configuration<font color="#CCCCCC"> so yeah that's the idea</font>

536
00:25:45,320 --> 00:25:55,049
<font color="#E5E5E5">all right thank you</font>

537
00:25:47,360 --> 00:25:55,049
[Applause]

