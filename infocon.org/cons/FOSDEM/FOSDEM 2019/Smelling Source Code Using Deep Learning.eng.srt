1
00:00:04,670 --> 00:00:10,240
<font color="#E5E5E5">okay we're good so this roller bus</font><font color="#CCCCCC"> hole</font>

2
00:00:07,460 --> 00:00:10,240
the last<font color="#E5E5E5"> leg of the day</font>

3
00:00:15,299 --> 00:00:26,350
hello everyone hello<font color="#E5E5E5"> that's like that</font>

4
00:00:22,680 --> 00:00:29,230
it's<font color="#E5E5E5"> really amazing to</font><font color="#CCCCCC"> see the roomful</font>

5
00:00:26,350 --> 00:00:32,110
<font color="#E5E5E5">of people</font><font color="#CCCCCC"> even even though this is</font><font color="#E5E5E5"> the</font>

6
00:00:29,230 --> 00:00:35,230
last<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> the last session and in the</font>

7
00:00:32,110 --> 00:00:39,790
last day of the conference<font color="#CCCCCC"> so thank</font><font color="#E5E5E5"> you</font>

8
00:00:35,230 --> 00:00:43,029
and welcome so this is a collaborative

9
00:00:39,790 --> 00:00:45,460
work from my colleagues and supervisor

10
00:00:43,030 --> 00:00:49,300
from Athens<font color="#CCCCCC"> University of Economics and</font>

11
00:00:45,460 --> 00:00:51,399
<font color="#E5E5E5">business so all the good part you are</font>

12
00:00:49,300 --> 00:00:53,860
seeing<font color="#CCCCCC"> going going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> today is all</font>

13
00:00:51,399 --> 00:00:57,280
belongs<font color="#CCCCCC"> to them</font><font color="#E5E5E5"> all the problems that</font>

14
00:00:53,860 --> 00:01:02,739
you<font color="#CCCCCC"> may see mmm what is that you can</font>

15
00:00:57,280 --> 00:01:04,660
point to me<font color="#E5E5E5"> and well let's start so what</font>

16
00:01:02,739 --> 00:01:07,570
we are going<font color="#E5E5E5"> to talk about we will</font>

17
00:01:04,660 --> 00:01:11,500
discuss about smells coarseness and some

18
00:01:07,570 --> 00:01:13,029
earlier<font color="#E5E5E5"> earlier speakers have made my</font>

19
00:01:11,500 --> 00:01:15,539
job<font color="#E5E5E5"> a little easier</font><font color="#CCCCCC"> so I'll</font><font color="#E5E5E5"> I'll</font>

20
00:01:13,030 --> 00:01:18,010
probably skip those parts very quickly

21
00:01:15,539 --> 00:01:20,430
so<font color="#E5E5E5"> we'll talk about smells we'll talk</font>

22
00:01:18,010 --> 00:01:24,430
about<font color="#E5E5E5"> how people detect smells today</font><font color="#CCCCCC"> and</font>

23
00:01:20,430 --> 00:01:27,760
we'll<font color="#E5E5E5"> talk about how</font><font color="#CCCCCC"> we tried to detect</font>

24
00:01:24,430 --> 00:01:29,470
<font color="#CCCCCC">smus using deep learning and I'll go a</font>

25
00:01:27,760 --> 00:01:31,390
little<font color="#CCCCCC"> bit in technical detail what we</font>

26
00:01:29,470 --> 00:01:34,600
did and<font color="#E5E5E5"> what kind of</font><font color="#CCCCCC"> experimental</font><font color="#E5E5E5"> setup</font>

27
00:01:31,390 --> 00:01:36,689
we put up and what kind of<font color="#E5E5E5"> results we</font>

28
00:01:34,600 --> 00:01:43,360
<font color="#E5E5E5">got this is what we are going to do</font>

29
00:01:36,689 --> 00:01:47,109
sounds good great so before going to

30
00:01:43,360 --> 00:01:49,720
that let<font color="#E5E5E5"> me briefly talk about and about</font>

31
00:01:47,110 --> 00:01:51,909
<font color="#E5E5E5">myself</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> give a disclaimer</font><font color="#CCCCCC"> that I</font><font color="#E5E5E5"> am</font>

32
00:01:49,720 --> 00:01:55,030
not<font color="#E5E5E5"> really a</font><font color="#CCCCCC"> machine</font><font color="#E5E5E5"> learning expert</font>

33
00:01:51,909 --> 00:01:57,670
like most of you I am<font color="#E5E5E5"> a soft engineering</font>

34
00:01:55,030 --> 00:02:01,630
researcher<font color="#CCCCCC"> I am completing my PhD in</font>

35
00:01:57,670 --> 00:02:03,640
<font color="#E5E5E5">hopefully in a</font><font color="#CCCCCC"> couple of weeks</font><font color="#E5E5E5"> so and</font>

36
00:02:01,630 --> 00:02:07,479
these<font color="#E5E5E5"> are the topics that I'm mostly</font>

37
00:02:03,640 --> 00:02:09,910
working so refactoring smells code

38
00:02:07,479 --> 00:02:13,750
<font color="#E5E5E5">quality these are</font><font color="#CCCCCC"> the things that I'm</font>

39
00:02:09,910 --> 00:02:18,060
mostly<font color="#CCCCCC"> work</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so let's start with</font>

40
00:02:13,750 --> 00:02:21,360
the term smell who coined<font color="#E5E5E5"> the</font><font color="#CCCCCC"> term smell</font>

41
00:02:18,060 --> 00:02:21,360
<font color="#E5E5E5">any guesses</font>

42
00:02:22,990 --> 00:02:37,970
no no you<font color="#CCCCCC"> just say who coined that term</font>

43
00:02:27,160 --> 00:02:40,850
hmm anybody not really actually<font color="#CCCCCC"> the</font>

44
00:02:37,970 --> 00:02:44,000
<font color="#E5E5E5">coined the term came up in the book by</font>

45
00:02:40,850 --> 00:02:47,870
Martin<font color="#CCCCCC"> fallin</font><font color="#E5E5E5"> but it was coined by Kent</font>

46
00:02:44,000 --> 00:02:50,030
back in 1999<font color="#E5E5E5"> and the famous</font><font color="#CCCCCC"> martin</font>

47
00:02:47,870 --> 00:02:52,360
<font color="#CCCCCC">fowler's buck because that chapter about</font>

48
00:02:50,030 --> 00:02:58,090
smell was<font color="#CCCCCC"> even written</font><font color="#E5E5E5"> co-written by</font>

49
00:02:52,360 --> 00:03:00,380
<font color="#CCCCCC">Kent back and they define that</font><font color="#E5E5E5"> term very</font>

50
00:02:58,090 --> 00:03:02,210
casually like certain structures in the

51
00:03:00,380 --> 00:03:03,380
code that<font color="#CCCCCC"> suggest sub or sometimes</font>

52
00:03:02,210 --> 00:03:06,740
scheme for the possibility of

53
00:03:03,380 --> 00:03:08,750
refactoring<font color="#CCCCCC"> and later on and especially</font>

54
00:03:06,740 --> 00:03:11,930
<font color="#E5E5E5">in academic world many people define</font>

55
00:03:08,750 --> 00:03:15,350
that much more rigorously<font color="#E5E5E5"> and you can</font>

56
00:03:11,930 --> 00:03:17,240
find all the definitions here<font color="#E5E5E5"> if you are</font>

57
00:03:15,350 --> 00:03:20,180
<font color="#E5E5E5">interested in the smell catalog I put</font>

58
00:03:17,240 --> 00:03:23,000
together<font color="#E5E5E5"> at least the known and common</font>

59
00:03:20,180 --> 00:03:24,770
smell and right now there are<font color="#CCCCCC"> 260</font>

60
00:03:23,000 --> 00:03:26,870
<font color="#CCCCCC">foreigners belonging to different</font>

61
00:03:24,770 --> 00:03:28,340
domains and subdomains of software<font color="#E5E5E5"> if</font>

62
00:03:26,870 --> 00:03:35,150
<font color="#E5E5E5">you are interested</font><font color="#CCCCCC"> you can find</font><font color="#E5E5E5"> that</font>

63
00:03:28,340 --> 00:03:38,239
<font color="#E5E5E5">catalog here so let me give</font><font color="#CCCCCC"> some</font>

64
00:03:35,150 --> 00:03:41,090
<font color="#CCCCCC">examples before</font><font color="#E5E5E5"> I delve into the</font>

65
00:03:38,239 --> 00:03:44,360
detection<font color="#E5E5E5"> part so when we talk about</font>

66
00:03:41,090 --> 00:03:47,420
smells<font color="#CCCCCC"> we can classify them</font><font color="#E5E5E5"> based on the</font>

67
00:03:44,360 --> 00:03:50,390
<font color="#E5E5E5">granularity</font><font color="#CCCCCC"> based</font><font color="#E5E5E5"> on the scope and based</font>

68
00:03:47,420 --> 00:03:52,220
on<font color="#E5E5E5"> the impact of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> dig make so the</font>

69
00:03:50,390 --> 00:03:55,549
lowest granularity is the implementation

70
00:03:52,220 --> 00:03:59,000
smells which you can detect<font color="#CCCCCC"> or you can</font>

71
00:03:55,550 --> 00:04:04,280
sense<font color="#CCCCCC"> just looking at for example a a a</font>

72
00:03:59,000 --> 00:04:06,080
method<font color="#E5E5E5"> so magic number complex method or</font>

73
00:04:04,280 --> 00:04:08,239
an empty catch block<font color="#E5E5E5"> these are the kind</font>

74
00:04:06,080 --> 00:04:11,510
of smells that you can spot<font color="#E5E5E5"> just looking</font>

75
00:04:08,239 --> 00:04:15,019
at a<font color="#CCCCCC"> method the next granularity is</font>

76
00:04:11,510 --> 00:04:17,269
design smells that<font color="#E5E5E5"> are mostly at a</font>

77
00:04:15,019 --> 00:04:19,370
little<font color="#CCCCCC"> higher</font><font color="#E5E5E5"> granularity and when that</font>

78
00:04:17,269 --> 00:04:21,350
<font color="#E5E5E5">kind of smell</font><font color="#CCCCCC"> that you can detect</font><font color="#E5E5E5"> by</font>

79
00:04:19,370 --> 00:04:23,270
looking at this<font color="#E5E5E5"> and the classes at</font>

80
00:04:21,350 --> 00:04:26,960
obstructions and the relationship among

81
00:04:23,270 --> 00:04:30,200
them so examples are<font color="#E5E5E5"> like multifaceted</font>

82
00:04:26,960 --> 00:04:31,900
<font color="#E5E5E5">abstraction when a class</font><font color="#CCCCCC"> is doing much</font>

83
00:04:30,200 --> 00:04:36,229
more or<font color="#E5E5E5"> realizing much more</font>

84
00:04:31,900 --> 00:04:38,089
responsibility<font color="#E5E5E5"> insufficient mode</font>

85
00:04:36,229 --> 00:04:43,758
which means or more commonly<font color="#CCCCCC"> known as</font>

86
00:04:38,089 --> 00:04:46,099
<font color="#CCCCCC">God class when you when you see a</font>

87
00:04:43,759 --> 00:04:47,829
software from components<font color="#E5E5E5"> and the</font>

88
00:04:46,099 --> 00:04:52,699
relationship among them and that

89
00:04:47,829 --> 00:04:55,009
<font color="#CCCCCC">granularity</font><font color="#E5E5E5"> you you are and you're</font>

90
00:04:52,699 --> 00:04:57,559
detecting<font color="#CCCCCC"> this mess you are detecting</font>

91
00:04:55,009 --> 00:05:00,469
<font color="#CCCCCC">architectures and these examples are</font>

92
00:04:57,559 --> 00:05:02,119
basically<font color="#CCCCCC"> architectures God component or</font>

93
00:05:00,469 --> 00:05:04,248
<font color="#CCCCCC">future concentration future</font>

94
00:05:02,119 --> 00:05:06,319
concentration is nothing but a component

95
00:05:04,249 --> 00:05:09,050
<font color="#E5E5E5">is doing more than one scattered</font>

96
00:05:06,319 --> 00:05:15,639
<font color="#CCCCCC">functionality is like a</font><font color="#E5E5E5"> responsibility</font>

97
00:05:09,050 --> 00:05:18,379
scattered across multiple components so

98
00:05:15,639 --> 00:05:23,599
how<font color="#E5E5E5"> people are detecting so far</font>

99
00:05:18,379 --> 00:05:25,429
smells<font color="#E5E5E5"> so there are basically five</font>

100
00:05:23,599 --> 00:05:27,378
<font color="#CCCCCC">different categories if we try</font><font color="#E5E5E5"> to</font>

101
00:05:25,429 --> 00:05:30,979
analyze all the different smell

102
00:05:27,379 --> 00:05:33,439
detection algorithms<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the methods</font>

103
00:05:30,979 --> 00:05:36,199
available<font color="#E5E5E5"> today there are basically five</font>

104
00:05:33,439 --> 00:05:38,029
<font color="#CCCCCC">different categories</font><font color="#E5E5E5"> metric based rules</font>

105
00:05:36,199 --> 00:05:40,249
or heuristic based machine learning

106
00:05:38,029 --> 00:05:43,249
<font color="#E5E5E5">based optimization and history based and</font>

107
00:05:40,249 --> 00:05:46,789
most common ones are<font color="#E5E5E5"> metrics and</font>

108
00:05:43,249 --> 00:05:49,039
heuristics<font color="#E5E5E5"> and what people do normally</font>

109
00:05:46,789 --> 00:05:52,429
this is what<font color="#E5E5E5"> people do so you have</font>

110
00:05:49,039 --> 00:05:55,729
source code<font color="#E5E5E5"> so and you prepare a source</font>

111
00:05:52,429 --> 00:05:56,539
model<font color="#E5E5E5"> out</font><font color="#CCCCCC"> of that okay that's</font><font color="#E5E5E5"> not really</font>

112
00:05:55,729 --> 00:05:59,089
<font color="#E5E5E5">working</font><font color="#CCCCCC"> okay</font>

113
00:05:56,539 --> 00:06:02,779
so you prepare<font color="#E5E5E5"> a source model and source</font>

114
00:05:59,089 --> 00:06:05,629
model could<font color="#CCCCCC"> be anything</font><font color="#E5E5E5"> more simpler an</font>

115
00:06:02,779 --> 00:06:09,739
example could be<font color="#CCCCCC"> AST abstract syntax</font>

116
00:06:05,629 --> 00:06:12,379
tree and from<font color="#E5E5E5"> that source model you</font>

117
00:06:09,739 --> 00:06:14,479
compute matrix<font color="#E5E5E5"> and then you apply</font><font color="#CCCCCC"> a</font>

118
00:06:12,379 --> 00:06:17,449
<font color="#CCCCCC">certain threshold to classify whether</font>

119
00:06:14,479 --> 00:06:24,438
<font color="#E5E5E5">that smell</font><font color="#CCCCCC"> is present in</font><font color="#E5E5E5"> that particular</font>

120
00:06:17,449 --> 00:06:27,229
<font color="#CCCCCC">method or class</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> a component recently</font>

121
00:06:24,439 --> 00:06:29,689
some attempts have been made<font color="#CCCCCC"> to detect</font>

122
00:06:27,229 --> 00:06:32,449
smells using machine learning<font color="#CCCCCC"> and this</font>

123
00:06:29,689 --> 00:06:35,119
is a again<font color="#CCCCCC"> a very high-level view what</font>

124
00:06:32,449 --> 00:06:37,489
people do in when they want to detach

125
00:06:35,119 --> 00:06:39,709
<font color="#CCCCCC">smells using machine learning</font><font color="#E5E5E5"> so you</font>

126
00:06:37,489 --> 00:06:42,739
have source code and you<font color="#E5E5E5"> again prepare</font>

127
00:06:39,709 --> 00:06:44,869
some<font color="#CCCCCC"> sort of a source model you</font><font color="#E5E5E5"> have a</font>

128
00:06:42,739 --> 00:06:46,549
machine learning algorithm<font color="#CCCCCC"> again</font><font color="#E5E5E5"> there</font>

129
00:06:44,869 --> 00:06:48,850
<font color="#E5E5E5">are different kinds of machine learning</font>

130
00:06:46,550 --> 00:06:50,650
<font color="#E5E5E5">algorithms that you may apply</font>

131
00:06:48,850 --> 00:06:52,450
there are some existing<font color="#E5E5E5"> examples</font>

132
00:06:50,650 --> 00:06:57,969
especially<font color="#E5E5E5"> I'm talking about super</font><font color="#CCCCCC"> over</font>

133
00:06:52,450 --> 00:06:59,740
I mean<font color="#CCCCCC"> you have existing the examples</font>

134
00:06:57,970 --> 00:07:02,380
that<font color="#CCCCCC"> you use to</font><font color="#E5E5E5"> clean the machine</font>

135
00:06:59,740 --> 00:07:04,450
<font color="#CCCCCC">learning algorithms</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you have a teen</font>

136
00:07:02,380 --> 00:07:07,840
model and with that teen model<font color="#E5E5E5"> you</font>

137
00:07:04,450 --> 00:07:11,349
actually<font color="#E5E5E5"> infer the new code</font><font color="#CCCCCC"> that whether</font>

138
00:07:07,840 --> 00:07:13,150
those code snippets or code fragments

139
00:07:11,350 --> 00:07:21,150
are can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> classified as smells or non</font>

140
00:07:13,150 --> 00:07:25,570
smells<font color="#CCCCCC"> I would like to brief about</font><font color="#E5E5E5"> what</font>

141
00:07:21,150 --> 00:07:28,060
<font color="#E5E5E5">kind of existing academic work has been</font>

142
00:07:25,570 --> 00:07:31,120
done on a related<font color="#E5E5E5"> to machine</font><font color="#CCCCCC"> learning</font>

143
00:07:28,060 --> 00:07:33,910
based approaches<font color="#E5E5E5"> so people are you</font>

144
00:07:31,120 --> 00:07:35,890
support vector machines<font color="#CCCCCC"> biasing</font><font color="#E5E5E5"> belief</font>

145
00:07:33,910 --> 00:07:41,980
networks<font color="#E5E5E5"> Louis logistic regression and</font>

146
00:07:35,890 --> 00:07:45,120
even CNN<font color="#E5E5E5"> and for first three of them the</font>

147
00:07:41,980 --> 00:07:49,620
feature set or the input<font color="#E5E5E5"> is matrix</font>

148
00:07:45,120 --> 00:07:53,800
<font color="#CCCCCC">object oriented matrix</font><font color="#E5E5E5"> typically and</font>

149
00:07:49,620 --> 00:07:57,190
<font color="#E5E5E5">that's basically a</font><font color="#CCCCCC"> double edged sword at</font>

150
00:07:53,800 --> 00:08:01,350
one and you<font color="#E5E5E5"> are trying to help machine</font>

151
00:07:57,190 --> 00:08:04,030
learning algorithm<font color="#E5E5E5"> to pick the</font>

152
00:08:01,350 --> 00:08:05,770
classification feature very quickly so

153
00:08:04,030 --> 00:08:08,739
that the algorithm can decide<font color="#E5E5E5"> whether</font>

154
00:08:05,770 --> 00:08:15,609
it's a<font color="#E5E5E5"> small or non smell but on the</font>

155
00:08:08,740 --> 00:08:19,060
other hand on<font color="#CCCCCC"> the other hand you</font><font color="#E5E5E5"> are you</font>

156
00:08:15,610 --> 00:08:21,490
are reducing the<font color="#E5E5E5"> search</font><font color="#CCCCCC"> space and so</font>

157
00:08:19,060 --> 00:08:24,910
that the<font color="#E5E5E5"> the and you are limiting the</font>

158
00:08:21,490 --> 00:08:28,780
<font color="#E5E5E5">capabilities of of machine learning or</font>

159
00:08:24,910 --> 00:08:31,240
deep learning algorithm by by limiting

160
00:08:28,780 --> 00:08:33,579
the capabilities of<font color="#CCCCCC"> that because</font><font color="#E5E5E5"> you are</font>

161
00:08:31,240 --> 00:08:35,710
<font color="#E5E5E5">you are now giving only the matrix so</font>

162
00:08:33,580 --> 00:08:38,979
the machine learning<font color="#E5E5E5"> algorithm</font><font color="#CCCCCC"> is bound</font>

163
00:08:35,710 --> 00:08:42,820
that can do at best<font color="#E5E5E5"> what that machine</font>

164
00:08:38,979 --> 00:08:44,950
<font color="#CCCCCC">that metric</font><font color="#E5E5E5"> can represent the metric is</font>

165
00:08:42,820 --> 00:08:47,740
<font color="#CCCCCC">not representing their feature or</font><font color="#E5E5E5"> the</font>

166
00:08:44,950 --> 00:08:50,290
characteristic that that is helpful in

167
00:08:47,740 --> 00:08:54,180
<font color="#E5E5E5">detecting that smell</font><font color="#CCCCCC"> done well we are</font>

168
00:08:50,290 --> 00:08:57,219
<font color="#E5E5E5">not</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> get a good classifier</font>

169
00:08:54,180 --> 00:08:59,260
another<font color="#E5E5E5"> related problem especially in</font>

170
00:08:57,220 --> 00:09:01,040
the existing work is either the

171
00:08:59,260 --> 00:09:03,649
validation is

172
00:09:01,040 --> 00:09:06,380
there are many<font color="#CCCCCC"> details missing or if</font>

173
00:09:03,649 --> 00:09:08,300
there<font color="#E5E5E5"> is there</font><font color="#CCCCCC"> are details are the earth</font>

174
00:09:06,380 --> 00:09:12,320
then<font color="#CCCCCC"> the validation is</font><font color="#E5E5E5"> on balanced</font>

175
00:09:08,300 --> 00:09:14,449
samples<font color="#E5E5E5"> and we in the morning also we we</font>

176
00:09:12,320 --> 00:09:17,440
have<font color="#E5E5E5"> seen that when we</font><font color="#CCCCCC"> have a balanced</font>

177
00:09:14,449 --> 00:09:20,529
<font color="#E5E5E5">set versus imbalance set that can be</font>

178
00:09:17,440 --> 00:09:24,190
really drastic change in<font color="#E5E5E5"> the performance</font>

179
00:09:20,529 --> 00:09:27,319
<font color="#E5E5E5">if you and if you are representing a</font>

180
00:09:24,190 --> 00:09:31,250
realistic case in which<font color="#E5E5E5"> you have maybe</font>

181
00:09:27,319 --> 00:09:34,490
maybe<font color="#CCCCCC"> 1% of classes are smelly and 99%</font>

182
00:09:31,250 --> 00:09:36,050
<font color="#E5E5E5">classes are non smelly then and you</font>

183
00:09:34,490 --> 00:09:38,509
apply some<font color="#E5E5E5"> sort of a machine</font><font color="#CCCCCC"> learning</font>

184
00:09:36,050 --> 00:09:44,660
<font color="#E5E5E5">algorithm</font><font color="#CCCCCC"> and your precision</font><font color="#E5E5E5"> recall</font>

185
00:09:38,509 --> 00:09:47,810
curve will be<font color="#CCCCCC"> like this so that's one of</font>

186
00:09:44,660 --> 00:09:52,969
<font color="#CCCCCC">the observations</font><font color="#E5E5E5"> that we had and</font><font color="#CCCCCC"> lived</font>

187
00:09:47,810 --> 00:09:54,800
this sort of background<font color="#CCCCCC"> these two major</font>

188
00:09:52,970 --> 00:09:58,579
research questions that<font color="#E5E5E5"> we set up for</font>

189
00:09:54,800 --> 00:10:00,680
ourselves<font color="#CCCCCC"> the first one is is it</font><font color="#E5E5E5"> really</font>

190
00:09:58,579 --> 00:10:05,029
<font color="#CCCCCC">feasible or possible to apply the</font>

191
00:10:00,680 --> 00:10:07,540
<font color="#E5E5E5">planning to to detect smells and if it</font>

192
00:10:05,029 --> 00:10:10,750
is possible<font color="#CCCCCC"> then which method</font><font color="#E5E5E5"> is</font>

193
00:10:07,540 --> 00:10:14,839
performing superior and basically we

194
00:10:10,750 --> 00:10:17,990
<font color="#CCCCCC">analyzed</font><font color="#E5E5E5"> CNN an RNN and we gave inputs</font>

195
00:10:14,839 --> 00:10:21,190
<font color="#E5E5E5">in 1d and 2d so we basically</font><font color="#CCCCCC"> have three</font>

196
00:10:17,990 --> 00:10:25,339
models<font color="#E5E5E5"> to compare</font><font color="#CCCCCC"> CNN</font><font color="#E5E5E5"> 1d CNN 2d and RNA</font>

197
00:10:21,190 --> 00:10:27,949
in the<font color="#CCCCCC"> second research question</font><font color="#E5E5E5"> we are</font>

198
00:10:25,339 --> 00:10:30,920
<font color="#E5E5E5">exploring whether</font><font color="#CCCCCC"> transfer learning is</font>

199
00:10:27,949 --> 00:10:34,839
feasible and<font color="#CCCCCC"> what is</font><font color="#E5E5E5"> transfer learning</font>

200
00:10:30,920 --> 00:10:34,839
transfer learning<font color="#CCCCCC"> is nothing but a</font>

201
00:10:35,199 --> 00:10:40,010
<font color="#E5E5E5">technique where we exploit the</font>

202
00:10:37,550 --> 00:10:42,560
commonalities between<font color="#E5E5E5"> different learning</font>

203
00:10:40,010 --> 00:10:46,459
tasks<font color="#E5E5E5"> so what we are going to do</font>

204
00:10:42,560 --> 00:10:49,160
essentially<font color="#E5E5E5"> is that we learn a model</font>

205
00:10:46,459 --> 00:10:51,649
from one<font color="#E5E5E5"> programming</font><font color="#CCCCCC"> language</font><font color="#E5E5E5"> and then</font>

206
00:10:49,160 --> 00:10:54,490
<font color="#E5E5E5">we apply that paint model to another</font>

207
00:10:51,649 --> 00:10:54,490
<font color="#E5E5E5">programming</font><font color="#CCCCCC"> language</font>

208
00:10:56,959 --> 00:11:04,109
so to do this what<font color="#CCCCCC"> we have done we have</font>

209
00:11:02,209 --> 00:11:06,290
<font color="#CCCCCC">research question set of research</font>

210
00:11:04,110 --> 00:11:09,569
<font color="#CCCCCC">questions</font><font color="#E5E5E5"> that are already</font><font color="#CCCCCC"> talked about</font>

211
00:11:06,290 --> 00:11:13,230
<font color="#CCCCCC">we downloaded source code obviously our</font>

212
00:11:09,569 --> 00:11:14,910
first<font color="#E5E5E5"> approach</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> first step is to</font>

213
00:11:13,230 --> 00:11:18,779
download source code and github<font color="#E5E5E5"> is the</font>

214
00:11:14,910 --> 00:11:21,689
to go method so we<font color="#E5E5E5"> apply our downloaded</font>

215
00:11:18,779 --> 00:11:25,319
c-sharp<font color="#E5E5E5"> and</font><font color="#CCCCCC"> Java repositories we use</font>

216
00:11:21,689 --> 00:11:28,949
design<font color="#CCCCCC"> IDE to detect smells in both of</font>

217
00:11:25,319 --> 00:11:33,118
both kind of repositories<font color="#CCCCCC"> we use code</font>

218
00:11:28,949 --> 00:11:34,949
<font color="#E5E5E5">spilitt again our own tools that we have</font>

219
00:11:33,119 --> 00:11:37,129
made available<font color="#E5E5E5"> we all share all the</font>

220
00:11:34,949 --> 00:11:41,910
details<font color="#CCCCCC"> where you can find all these</font>

221
00:11:37,129 --> 00:11:45,989
tools<font color="#CCCCCC"> so we basically</font><font color="#E5E5E5"> we are generating</font>

222
00:11:41,910 --> 00:11:48,329
code fragments from the<font color="#E5E5E5"> from these big</font>

223
00:11:45,989 --> 00:11:50,910
projects<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> go into each step and</font>

224
00:11:48,329 --> 00:11:52,920
usually also so I'll go a little<font color="#CCCCCC"> bit in</font>

225
00:11:50,910 --> 00:11:55,679
more detail<font color="#E5E5E5"> this is just I'm giving an</font>

226
00:11:52,920 --> 00:11:57,360
overview<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then these code fragments</font>

227
00:11:55,679 --> 00:11:59,100
and the detected<font color="#CCCCCC"> smell</font><font color="#E5E5E5"> we basically</font>

228
00:11:57,360 --> 00:12:01,529
classify<font color="#CCCCCC"> these code fragments into</font>

229
00:11:59,100 --> 00:12:04,079
positive and<font color="#E5E5E5"> negative samples and then</font>

230
00:12:01,529 --> 00:12:06,149
we tokenize them after tokenizing<font color="#E5E5E5"> we</font>

231
00:12:04,079 --> 00:12:08,488
prefer a<font color="#E5E5E5"> pre-processing which is nothing</font>

232
00:12:06,149 --> 00:12:10,019
but removing<font color="#E5E5E5"> the duplicates and then we</font>

233
00:12:08,489 --> 00:12:15,149
<font color="#E5E5E5">finally give it to the deep</font><font color="#CCCCCC"> learning</font>

234
00:12:10,019 --> 00:12:18,749
models this is the overall<font color="#E5E5E5"> setup that we</font>

235
00:12:15,149 --> 00:12:29,069
used<font color="#E5E5E5"> let me go into a little</font><font color="#CCCCCC"> bit in</font>

236
00:12:18,749 --> 00:12:32,189
<font color="#CCCCCC">detail one by</font><font color="#E5E5E5"> one so we downloaded more</font>

237
00:12:29,069 --> 00:12:36,628
<font color="#CCCCCC">than 1,000 repositories containing C</font>

238
00:12:32,189 --> 00:12:38,549
shop code<font color="#E5E5E5"> we selected</font><font color="#CCCCCC"> 2505</font><font color="#E5E5E5"> and</font>

239
00:12:36,629 --> 00:12:40,139
downloaded<font color="#E5E5E5"> 100 deepest fear is</font><font color="#CCCCCC"> just for</font>

240
00:12:38,549 --> 00:12:41,850
validation<font color="#CCCCCC"> we are using Java</font>

241
00:12:40,139 --> 00:12:45,119
repositories just for validation so we

242
00:12:41,850 --> 00:12:49,290
just<font color="#E5E5E5"> downloaded 100</font><font color="#CCCCCC"> apostolis</font><font color="#E5E5E5"> and how we</font>

243
00:12:45,119 --> 00:12:53,119
selected these numbers<font color="#CCCCCC"> 1000</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 2500 we</font>

244
00:12:49,290 --> 00:12:56,339
have<font color="#E5E5E5"> eight dimensions architecture</font>

245
00:12:53,119 --> 00:12:59,429
continuous<font color="#E5E5E5"> integration unit tests and so</font>

246
00:12:56,339 --> 00:13:01,769
on<font color="#E5E5E5"> and so forth</font><font color="#CCCCCC"> so we selected all the</font>

247
00:12:59,429 --> 00:13:07,919
<font color="#E5E5E5">repositories</font><font color="#CCCCCC"> that has at least six out</font>

248
00:13:01,769 --> 00:13:09,870
of<font color="#E5E5E5"> eight positive numbers favorable</font>

249
00:13:07,919 --> 00:13:12,810
numbers in these

250
00:13:09,870 --> 00:13:15,300
dimensions and the number of stars at

251
00:13:12,810 --> 00:13:18,300
least five so we discarded everything

252
00:13:15,300 --> 00:13:20,370
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is less than</font><font color="#E5E5E5"> five with that we got</font>

253
00:13:18,300 --> 00:13:24,089
these kind<font color="#E5E5E5"> of numbers and we downloaded</font>

254
00:13:20,370 --> 00:13:27,560
<font color="#E5E5E5">the cook the second thing we did is that</font>

255
00:13:24,089 --> 00:13:31,290
for each project<font color="#CCCCCC"> we</font><font color="#E5E5E5"> need to split the</font>

256
00:13:27,560 --> 00:13:33,750
big projects into individual samples

257
00:13:31,290 --> 00:13:36,029
<font color="#E5E5E5">individual fragments an individual</font>

258
00:13:33,750 --> 00:13:39,089
fragment<font color="#E5E5E5"> could be a method when we</font><font color="#CCCCCC"> are</font>

259
00:13:36,029 --> 00:13:41,880
detecting<font color="#E5E5E5"> implementation smells and a</font>

260
00:13:39,089 --> 00:13:45,210
class if<font color="#E5E5E5"> we are detecting a design smell</font>

261
00:13:41,880 --> 00:13:50,070
<font color="#E5E5E5">so depending on that</font><font color="#CCCCCC"> we basically split</font>

262
00:13:45,210 --> 00:13:52,230
the<font color="#CCCCCC"> code into</font><font color="#E5E5E5"> either method or class and</font>

263
00:13:50,070 --> 00:13:59,220
we put it put<font color="#E5E5E5"> them in a separate files</font>

264
00:13:52,230 --> 00:14:01,589
<font color="#E5E5E5">same same</font><font color="#CCCCCC"> thing we did for the</font><font color="#E5E5E5"> Java next</font>

265
00:13:59,220 --> 00:14:04,920
step is<font color="#E5E5E5"> smell detection we use design</font>

266
00:14:01,589 --> 00:14:08,100
<font color="#E5E5E5">night and for both design at C sharp for</font>

267
00:14:04,920 --> 00:14:11,310
C shop code and for Java<font color="#CCCCCC"> design a Java</font>

268
00:14:08,100 --> 00:14:13,200
for Java code<font color="#E5E5E5"> and detect a all</font><font color="#CCCCCC"> the</font>

269
00:14:11,310 --> 00:14:16,260
<font color="#CCCCCC">smells</font><font color="#E5E5E5"> that can be found in the code and</font>

270
00:14:13,200 --> 00:14:20,160
by the way design it is a tool which can

271
00:14:16,260 --> 00:14:22,950
<font color="#E5E5E5">detect</font><font color="#CCCCCC"> 19 design smells 7</font><font color="#E5E5E5"> architecture</font>

272
00:14:20,160 --> 00:14:25,620
smells and 11 implementation smells and

273
00:14:22,950 --> 00:14:28,830
similarly Java<font color="#CCCCCC"> designer Java version is</font>

274
00:14:25,620 --> 00:14:31,529
<font color="#E5E5E5">also picking it up to that level you</font><font color="#CCCCCC"> can</font>

275
00:14:28,830 --> 00:14:33,300
download these tools and again<font color="#E5E5E5"> at the</font>

276
00:14:31,529 --> 00:14:39,750
last slide<font color="#CCCCCC"> I</font><font color="#E5E5E5"> will share</font><font color="#CCCCCC"> all the links to</font>

277
00:14:33,300 --> 00:14:43,260
<font color="#CCCCCC">you so we know what</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of smells</font><font color="#E5E5E5"> a</font>

278
00:14:39,750 --> 00:14:46,410
project has and we know all the code

279
00:14:43,260 --> 00:14:48,779
fragments so with<font color="#E5E5E5"> these two pieces of</font>

280
00:14:46,410 --> 00:14:50,550
information<font color="#E5E5E5"> we classify</font><font color="#CCCCCC"> these code</font>

281
00:14:48,779 --> 00:14:57,540
fragments either through a<font color="#E5E5E5"> positive</font>

282
00:14:50,550 --> 00:15:01,199
sample<font color="#CCCCCC"> or to a negative sample after</font>

283
00:14:57,540 --> 00:15:04,500
that we use tokenizer<font color="#CCCCCC"> took what</font>

284
00:15:01,200 --> 00:15:07,410
tokenizer does basically<font color="#E5E5E5"> takes a code</font>

285
00:15:04,500 --> 00:15:11,640
fragment<font color="#E5E5E5"> and converts into integer</font>

286
00:15:07,410 --> 00:15:14,279
tokens<font color="#E5E5E5"> a set of integer tokens and to do</font>

287
00:15:11,640 --> 00:15:18,020
that<font color="#E5E5E5"> and in that context there</font><font color="#CCCCCC"> are two</font>

288
00:15:14,279 --> 00:15:23,490
important thing to mention tokenizer

289
00:15:18,020 --> 00:15:26,819
is defines<font color="#E5E5E5"> specific ranges</font>

290
00:15:23,490 --> 00:15:29,640
for<font color="#E5E5E5"> specific tokens for example all the</font>

291
00:15:26,820 --> 00:15:35,160
reserved<font color="#E5E5E5"> keywords are always assigned</font>

292
00:15:29,640 --> 00:15:39,089
the<font color="#CCCCCC"> same token</font><font color="#E5E5E5"> and all the user-defined</font>

293
00:15:35,160 --> 00:15:41,910
<font color="#E5E5E5">symbols are also specified</font><font color="#CCCCCC"> or or</font>

294
00:15:39,089 --> 00:15:46,620
assigned a specific<font color="#E5E5E5"> set or</font><font color="#CCCCCC"> specific</font>

295
00:15:41,910 --> 00:15:48,689
<font color="#E5E5E5">range of tokens</font><font color="#CCCCCC"> now another</font><font color="#E5E5E5"> effect about</font>

296
00:15:46,620 --> 00:15:50,940
tokenizer is that it can sit<font color="#CCCCCC"> right now</font>

297
00:15:48,690 --> 00:15:53,520
it supports<font color="#CCCCCC"> six languages</font><font color="#E5E5E5"> including C</font>

298
00:15:50,940 --> 00:15:57,300
sharp and Java which was<font color="#E5E5E5"> even our</font>

299
00:15:53,520 --> 00:16:00,709
subject systems it looks like this<font color="#E5E5E5"> so if</font>

300
00:15:57,300 --> 00:16:03,449
you have<font color="#CCCCCC"> a very small method then if you</font>

301
00:16:00,709 --> 00:16:06,959
tokenize this method<font color="#E5E5E5"> into one day it</font>

302
00:16:03,450 --> 00:16:09,510
will look like<font color="#CCCCCC"> as a 1d vector and if you</font>

303
00:16:06,959 --> 00:16:17,819
have a 2d matrix then<font color="#CCCCCC"> it looks like</font>

304
00:16:09,510 --> 00:16:19,920
something like<font color="#CCCCCC"> this and</font><font color="#E5E5E5"> again it's</font>

305
00:16:17,820 --> 00:16:22,110
important to<font color="#E5E5E5"> go a little bit in more</font>

306
00:16:19,920 --> 00:16:24,599
detail and<font color="#E5E5E5"> see how we prepare the data</font>

307
00:16:22,110 --> 00:16:26,760
how we pay in the model so<font color="#E5E5E5"> that's why</font>

308
00:16:24,600 --> 00:16:30,360
I'm showing<font color="#CCCCCC"> you a very specific example</font>

309
00:16:26,760 --> 00:16:33,540
<font color="#CCCCCC">of a smell so this is a</font><font color="#E5E5E5"> five thousand</font>

310
00:16:30,360 --> 00:16:35,990
approximately five thousand number of

311
00:16:33,540 --> 00:16:38,849
positive samples we<font color="#CCCCCC"> have for a smell and</font>

312
00:16:35,990 --> 00:16:41,779
create more than<font color="#E5E5E5"> three hundred eleven</font>

313
00:16:38,850 --> 00:16:43,829
thousand negative<font color="#CCCCCC"> samples so this is the</font>

314
00:16:41,779 --> 00:16:48,360
you<font color="#E5E5E5"> can see that it's a highly</font>

315
00:16:43,829 --> 00:16:51,319
<font color="#E5E5E5">imbalanced data and that we split into</font>

316
00:16:48,360 --> 00:16:55,800
<font color="#E5E5E5">70/30</font><font color="#CCCCCC"> for 70 for training and</font><font color="#E5E5E5"> 30 for</font>

317
00:16:51,320 --> 00:16:58,020
<font color="#E5E5E5">validation and what we do obviously</font><font color="#CCCCCC"> we</font>

318
00:16:55,800 --> 00:17:01,680
have three thousand and we have a split

319
00:16:58,020 --> 00:17:05,059
7030<font color="#CCCCCC"> and for training</font><font color="#E5E5E5"> we take this this</font>

320
00:17:01,680 --> 00:17:07,709
positive part and<font color="#E5E5E5"> this negative part and</font>

321
00:17:05,059 --> 00:17:11,339
similarly for<font color="#E5E5E5"> the evaluation we do the</font>

322
00:17:07,709 --> 00:17:13,949
same here we do when we<font color="#CCCCCC"> tame the model</font>

323
00:17:11,339 --> 00:17:16,379
<font color="#E5E5E5">we do</font><font color="#CCCCCC"> balanced training</font><font color="#E5E5E5"> which</font><font color="#CCCCCC"> means that</font>

324
00:17:13,949 --> 00:17:20,880
we<font color="#E5E5E5"> have equal number of positive and</font>

325
00:17:16,380 --> 00:17:24,449
<font color="#CCCCCC">negative numbers samples so what we do</font>

326
00:17:20,880 --> 00:17:28,050
basically<font color="#E5E5E5"> we discard anything extra that</font>

327
00:17:24,449 --> 00:17:30,450
<font color="#CCCCCC">we have in there with this particular</font>

328
00:17:28,050 --> 00:17:31,850
<font color="#E5E5E5">part in the negative part so we have</font>

329
00:17:30,450 --> 00:17:35,340
equal<font color="#E5E5E5"> number of positive and</font><font color="#CCCCCC"> negative</font>

330
00:17:31,850 --> 00:17:37,289
<font color="#CCCCCC">only for training</font><font color="#E5E5E5"> for evaluation we keep</font>

331
00:17:35,340 --> 00:17:40,350
the ratio<font color="#E5E5E5"> as it is</font>

332
00:17:37,289 --> 00:17:42,289
you don't change<font color="#E5E5E5"> it and we</font><font color="#CCCCCC"> all the</font>

333
00:17:40,350 --> 00:17:48,750
results<font color="#E5E5E5"> that I'm going to show it on the</font>

334
00:17:42,289 --> 00:17:52,049
<font color="#E5E5E5">on the</font><font color="#CCCCCC"> real-world</font><font color="#E5E5E5"> evaluation and we</font>

335
00:17:48,750 --> 00:17:54,720
selected<font color="#E5E5E5"> for smells all for smells are</font>

336
00:17:52,049 --> 00:17:57,299
different kinds of<font color="#E5E5E5"> smells</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> our</font>

337
00:17:54,720 --> 00:18:00,539
implementation and one in one is design

338
00:17:57,299 --> 00:18:03,510
<font color="#E5E5E5">so the complex method is the method that</font>

339
00:18:00,539 --> 00:18:06,510
has a high cyclomatic complexity magic

340
00:18:03,510 --> 00:18:08,340
number is a numerical method<font color="#E5E5E5"> literal is</font>

341
00:18:06,510 --> 00:18:12,690
used within<font color="#CCCCCC"> the expression</font><font color="#E5E5E5"> without</font>

342
00:18:08,340 --> 00:18:15,449
explanation MP<font color="#CCCCCC"> cache block is a cache</font>

343
00:18:12,690 --> 00:18:18,389
block of where the<font color="#E5E5E5"> exception there is</font>

344
00:18:15,450 --> 00:18:20,130
<font color="#E5E5E5">nothing written in that cache block and</font>

345
00:18:18,389 --> 00:18:24,240
then multifaceted

346
00:18:20,130 --> 00:18:26,010
abstraction is a kind of kind<font color="#CCCCCC"> of</font>

347
00:18:24,240 --> 00:18:28,740
difficult<font color="#E5E5E5"> to</font><font color="#CCCCCC"> detect smell because and</font>

348
00:18:26,010 --> 00:18:30,360
that's why we<font color="#E5E5E5"> chose it because it is it</font>

349
00:18:28,740 --> 00:18:33,809
is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> very different</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> the rest</font><font color="#CCCCCC"> of</font>

350
00:18:30,360 --> 00:18:35,908
<font color="#E5E5E5">three and and it because it has a</font>

351
00:18:33,809 --> 00:18:38,158
semantic meaning<font color="#E5E5E5"> you can't detect a</font>

352
00:18:35,909 --> 00:18:40,620
<font color="#CCCCCC">multi-faceted</font><font color="#E5E5E5"> abstraction just looking</font>

353
00:18:38,159 --> 00:18:43,590
at the code<font color="#E5E5E5"> you need to understand what</font>

354
00:18:40,620 --> 00:18:48,539
it does<font color="#E5E5E5"> because what it means is the</font>

355
00:18:43,590 --> 00:18:51,559
cohesion of the<font color="#E5E5E5"> class is low so these</font>

356
00:18:48,539 --> 00:18:55,889
are the<font color="#CCCCCC"> four smells that we chose</font><font color="#E5E5E5"> and</font>

357
00:18:51,559 --> 00:18:58,889
now let's talk<font color="#CCCCCC"> about what we did how</font>

358
00:18:55,889 --> 00:19:02,610
what kind<font color="#E5E5E5"> of scene</font><font color="#CCCCCC"> and we model or</font>

359
00:18:58,889 --> 00:19:04,830
architecture we prepared with the<font color="#E5E5E5"> CNN so</font>

360
00:19:02,610 --> 00:19:06,870
you can see that that we have<font color="#CCCCCC"> a</font>

361
00:19:04,830 --> 00:19:08,970
convolution<font color="#CCCCCC"> batch normalization and Max</font>

362
00:19:06,870 --> 00:19:12,600
<font color="#E5E5E5">cooling layers and these layers are</font>

363
00:19:08,970 --> 00:19:15,779
repeated repeated in the sense when we

364
00:19:12,600 --> 00:19:17,850
experimented with number<font color="#E5E5E5"> of deep layers</font>

365
00:19:15,779 --> 00:19:20,370
and when we<font color="#E5E5E5"> say deep layers we only</font>

366
00:19:17,850 --> 00:19:22,918
reference these number of deep layers

367
00:19:20,370 --> 00:19:25,080
<font color="#CCCCCC">one two and three so if deep layer</font>

368
00:19:22,919 --> 00:19:29,399
layers are equal to<font color="#E5E5E5"> three which means we</font>

369
00:19:25,080 --> 00:19:31,260
repeat these three<font color="#CCCCCC"> terms and we did a</font>

370
00:19:29,399 --> 00:19:33,000
kind of<font color="#E5E5E5"> a grid search</font><font color="#CCCCCC"> which means that</font>

371
00:19:31,260 --> 00:19:37,049
we chose<font color="#CCCCCC"> different kind of</font><font color="#E5E5E5"> hyper</font>

372
00:19:33,000 --> 00:19:41,669
parameters and we experiment<font color="#CCCCCC"> with all</font>

373
00:19:37,049 --> 00:19:44,760
<font color="#E5E5E5">the permutations and combinations and we</font>

374
00:19:41,669 --> 00:19:47,490
use dynamic<font color="#E5E5E5"> batch size depending on the</font>

375
00:19:44,760 --> 00:19:49,740
<font color="#E5E5E5">input sample size so if the number of</font>

376
00:19:47,490 --> 00:19:50,760
<font color="#E5E5E5">samples are</font><font color="#CCCCCC"> very small then we use the</font>

377
00:19:49,740 --> 00:19:53,280
smaller

378
00:19:50,760 --> 00:19:54,870
<font color="#CCCCCC">that</font><font color="#E5E5E5"> size but if the number</font><font color="#CCCCCC"> of samples</font>

379
00:19:53,280 --> 00:19:58,440
are<font color="#CCCCCC"> very large then we use the higher</font>

380
00:19:54,870 --> 00:20:01,439
number<font color="#CCCCCC"> of batches - for the</font>

381
00:19:58,440 --> 00:20:03,840
regularization we use<font color="#E5E5E5"> early</font><font color="#CCCCCC"> stopping</font>

382
00:20:01,440 --> 00:20:07,610
with<font color="#CCCCCC"> patience file</font><font color="#E5E5E5"> so that we</font><font color="#CCCCCC"> don't all</font>

383
00:20:03,840 --> 00:20:10,320
fit and model checkpoint<font color="#E5E5E5"> along with</font><font color="#CCCCCC"> that</font>

384
00:20:07,610 --> 00:20:12,510
and some<font color="#E5E5E5"> other configuration you can see</font>

385
00:20:10,320 --> 00:20:17,220
here that<font color="#CCCCCC"> dropout layer has a point</font><font color="#E5E5E5"> one</font>

386
00:20:12,510 --> 00:20:19,620
and<font color="#CCCCCC"> dropout and and the dance has I mean</font>

387
00:20:17,220 --> 00:20:23,000
<font color="#E5E5E5">the output is 32 with the value</font>

388
00:20:19,620 --> 00:20:23,000
activation and so and so<font color="#E5E5E5"> forth</font>

389
00:20:23,450 --> 00:20:30,390
similarly for<font color="#E5E5E5"> our nm we have</font><font color="#CCCCCC"> Alice TM</font>

390
00:20:27,750 --> 00:20:33,480
layer<font color="#E5E5E5"> and before that</font><font color="#CCCCCC"> we have in reading</font>

391
00:20:30,390 --> 00:20:36,030
layer and we when we have<font color="#CCCCCC"> a number of</font>

392
00:20:33,480 --> 00:20:39,440
layers<font color="#E5E5E5"> multiple deep lining layers we</font>

393
00:20:36,030 --> 00:20:42,090
basically<font color="#E5E5E5"> repeat this Alice team layer</font>

394
00:20:39,440 --> 00:20:46,200
again we have different<font color="#CCCCCC"> kind of hyper</font>

395
00:20:42,090 --> 00:20:50,659
parameters and dynamic batch size and

396
00:20:46,200 --> 00:20:54,480
<font color="#CCCCCC">seams and a similar</font><font color="#E5E5E5"> size similar</font>

397
00:20:50,660 --> 00:20:56,790
callbacks although we use<font color="#CCCCCC"> patience too</font>

398
00:20:54,480 --> 00:20:59,370
because it<font color="#E5E5E5"> is very expensive</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> train</font><font color="#CCCCCC"> RN</font>

399
00:20:56,790 --> 00:21:03,290
<font color="#E5E5E5">and model and if time permits I</font><font color="#CCCCCC"> will</font>

400
00:20:59,370 --> 00:21:06,810
talk<font color="#CCCCCC"> about that a little</font><font color="#E5E5E5"> bit more detail</font>

401
00:21:03,290 --> 00:21:10,050
<font color="#E5E5E5">so essentially what we did is we</font><font color="#CCCCCC"> had two</font>

402
00:21:06,810 --> 00:21:12,379
phases in<font color="#CCCCCC"> the first phase we did a</font><font color="#E5E5E5"> grid</font>

403
00:21:10,050 --> 00:21:17,060
search with<font color="#CCCCCC"> the different kind of param</font>

404
00:21:12,380 --> 00:21:20,490
parameters configurations<font color="#E5E5E5"> so we had 144</font>

405
00:21:17,060 --> 00:21:24,240
144 configurations for CNN and 18 for

406
00:21:20,490 --> 00:21:27,780
our onion<font color="#E5E5E5"> and we kept a validation set</font>

407
00:21:24,240 --> 00:21:29,940
20% aside for the first phase<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

408
00:21:27,780 --> 00:21:35,370
setting phase when when we know which

409
00:21:29,940 --> 00:21:38,130
which configuration works the best we

410
00:21:35,370 --> 00:21:41,429
run it again<font color="#E5E5E5"> with the validation</font><font color="#CCCCCC"> 0</font>

411
00:21:38,130 --> 00:21:45,390
obviously<font color="#E5E5E5"> and we performed all the</font>

412
00:21:41,430 --> 00:21:48,500
experiments on<font color="#CCCCCC"> the on</font><font color="#E5E5E5"> VN at facility</font>

413
00:21:45,390 --> 00:21:58,640
which is<font color="#CCCCCC"> Gleek supercomputing facility</font>

414
00:21:48,500 --> 00:22:02,660
with<font color="#CCCCCC"> 1g here</font><font color="#E5E5E5"> and 64 GB of memory so</font>

415
00:21:58,640 --> 00:22:07,970
<font color="#CCCCCC">what we got what we got</font><font color="#E5E5E5"> is before I go</font>

416
00:22:02,660 --> 00:22:10,640
into the include what<font color="#E5E5E5"> we got the van</font>

417
00:22:07,970 --> 00:22:15,490
<font color="#E5E5E5">Weaver and and I said initially</font><font color="#CCCCCC"> that we</font>

418
00:22:10,640 --> 00:22:15,490
were already<font color="#CCCCCC"> leave already</font>

419
00:22:15,580 --> 00:22:19,820
<font color="#CCCCCC">we started with</font><font color="#E5E5E5"> very without any</font>

420
00:22:18,049 --> 00:22:22,400
<font color="#E5E5E5">knowledge of machine learning</font><font color="#CCCCCC"> so the</font>

421
00:22:19,820 --> 00:22:25,340
first thing that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> did is figuring out</font>

422
00:22:22,400 --> 00:22:27,530
accuracy so we I was computing accuracy

423
00:22:25,340 --> 00:22:30,970
and the first time when I run the model

424
00:22:27,530 --> 00:22:35,690
and we I got<font color="#E5E5E5"> 99% accuracy and I was</font>

425
00:22:30,970 --> 00:22:40,040
jumping and<font color="#CCCCCC"> I told my supervisor C 99%</font>

426
00:22:35,690 --> 00:22:42,890
<font color="#E5E5E5">and he looked at me you have</font><font color="#CCCCCC"> imbalanced</font>

427
00:22:40,040 --> 00:22:47,240
data<font color="#E5E5E5"> and huge imbalance</font><font color="#CCCCCC"> did</font><font color="#E5E5E5"> obviously</font>

428
00:22:42,890 --> 00:22:50,330
<font color="#E5E5E5">you'll get 99% even if your your model</font>

429
00:22:47,240 --> 00:22:53,750
is just predicting<font color="#CCCCCC"> 1 or 0 you</font><font color="#E5E5E5"> will do</font>

430
00:22:50,330 --> 00:22:56,240
<font color="#E5E5E5">you'll get that so then we learn that</font><font color="#CCCCCC"> ok</font>

431
00:22:53,750 --> 00:23:00,169
<font color="#E5E5E5">that's not the right way so</font><font color="#CCCCCC"> the first</font>

432
00:22:56,240 --> 00:23:04,970
<font color="#CCCCCC">thing we added is ROC AUC so this</font><font color="#E5E5E5"> is the</font>

433
00:23:00,169 --> 00:23:06,919
kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> ROC</font><font color="#CCCCCC"> AUC we</font><font color="#E5E5E5"> got so area under</font>

434
00:23:04,970 --> 00:23:11,030
curve<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is what we got so</font>

435
00:23:06,919 --> 00:23:13,130
the<font color="#E5E5E5"> it's crossing</font><font color="#CCCCCC"> 80% in some cases and</font>

436
00:23:11,030 --> 00:23:13,990
the lowest and it's<font color="#CCCCCC"> 50 percent or</font>

437
00:23:13,130 --> 00:23:17,570
something<font color="#E5E5E5"> like that</font>

438
00:23:13,990 --> 00:23:20,690
however we again realize that<font color="#E5E5E5"> this is</font>

439
00:23:17,570 --> 00:23:22,629
<font color="#E5E5E5">not the right way we should do precision</font>

440
00:23:20,690 --> 00:23:25,790
recall and precision recall curves<font color="#E5E5E5"> and</font>

441
00:23:22,630 --> 00:23:27,890
this is what we got for<font color="#E5E5E5"> precision recall</font>

442
00:23:25,790 --> 00:23:31,100
and basically we summarized pieces and

443
00:23:27,890 --> 00:23:36,950
<font color="#E5E5E5">recalling to</font><font color="#CCCCCC"> f1f measure to have a</font>

444
00:23:31,100 --> 00:23:39,549
comprehensive<font color="#CCCCCC"> 1</font><font color="#E5E5E5"> number</font><font color="#CCCCCC"> so you can</font>

445
00:23:36,950 --> 00:23:42,559
<font color="#E5E5E5">clearly</font><font color="#CCCCCC"> see that some</font><font color="#E5E5E5"> of the smells</font>

446
00:23:39,549 --> 00:23:46,010
these deep learning architectures<font color="#CCCCCC"> that</font>

447
00:23:42,559 --> 00:23:50,270
we<font color="#E5E5E5"> designed can pick it up but some they</font>

448
00:23:46,010 --> 00:23:54,040
can't and the reason in general f1 is is

449
00:23:50,270 --> 00:23:56,690
low<font color="#E5E5E5"> because</font><font color="#CCCCCC"> we have low</font><font color="#E5E5E5"> precision and</font>

450
00:23:54,040 --> 00:23:58,820
why we have low<font color="#CCCCCC"> precision because</font><font color="#E5E5E5"> we are</font>

451
00:23:56,690 --> 00:24:02,030
predicting<font color="#E5E5E5"> false positives a lot of</font>

452
00:23:58,820 --> 00:24:04,790
false<font color="#CCCCCC"> positives so well we can optimize</font>

453
00:24:02,030 --> 00:24:06,860
<font color="#CCCCCC">that whether whether we want high</font>

454
00:24:04,790 --> 00:24:09,050
precision and<font color="#E5E5E5"> recall and probably you</font>

455
00:24:06,860 --> 00:24:12,020
know better that precision<font color="#E5E5E5"> and</font><font color="#CCCCCC"> recall</font>

456
00:24:09,050 --> 00:24:12,590
<font color="#E5E5E5">always have a</font><font color="#CCCCCC"> trade-off so if you want</font>

457
00:24:12,020 --> 00:24:14,690
<font color="#E5E5E5">to get</font>

458
00:24:12,590 --> 00:24:19,209
<font color="#E5E5E5">high precision we can have to compromise</font>

459
00:24:14,690 --> 00:24:19,210
<font color="#E5E5E5">on the recall and vice versa</font>

460
00:24:19,570 --> 00:24:24,110
so that this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> what the</font><font color="#E5E5E5"> first result</font>

461
00:24:22,279 --> 00:24:26,330
<font color="#E5E5E5">and we go into a little bit on detail</font>

462
00:24:24,110 --> 00:24:28,520
that where they're seen<font color="#CCCCCC"> in our versus</font>

463
00:24:26,330 --> 00:24:30,470
RNN so<font color="#E5E5E5"> whether</font><font color="#CCCCCC"> seenin is better</font><font color="#E5E5E5"> or on an</font>

464
00:24:28,520 --> 00:24:33,590
errand<font color="#E5E5E5"> and is doing better in our case</font>

465
00:24:30,470 --> 00:24:36,440
<font color="#E5E5E5">and we see the if you look at the</font>

466
00:24:33,590 --> 00:24:40,939
<font color="#E5E5E5">maximum f1 there is hardly any</font>

467
00:24:36,440 --> 00:24:44,440
difference<font color="#E5E5E5"> on even if we plot all the</font>

468
00:24:40,940 --> 00:24:46,640
cases<font color="#CCCCCC"> and then also</font><font color="#E5E5E5"> it's not beside</font>

469
00:24:44,440 --> 00:24:48,559
decisively we cannot say<font color="#CCCCCC"> that whether</font>

470
00:24:46,640 --> 00:24:54,649
<font color="#E5E5E5">Sinan is better in our case</font><font color="#CCCCCC"> on</font>

471
00:24:48,559 --> 00:24:57,080
<font color="#E5E5E5">assignment</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> D is better we also did</font>

472
00:24:54,649 --> 00:25:00,979
comparison between CN<font color="#E5E5E5"> and an RN m</font><font color="#CCCCCC"> I</font>

473
00:24:57,080 --> 00:25:04,070
would not<font color="#E5E5E5"> consider this because in all</font>

474
00:25:00,980 --> 00:25:07,070
the<font color="#CCCCCC"> cases</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> all the three</font><font color="#E5E5E5"> models</font><font color="#CCCCCC"> the</font>

475
00:25:04,070 --> 00:25:10,520
performance was very low so a point zero

476
00:25:07,070 --> 00:25:13,760
zero four or<font color="#E5E5E5"> something so which means</font>

477
00:25:10,520 --> 00:25:15,918
<font color="#E5E5E5">that it's</font><font color="#CCCCCC"> not it's</font><font color="#E5E5E5"> not really a fair to</font>

478
00:25:13,760 --> 00:25:18,860
compare point zero zero four<font color="#E5E5E5"> and point</font>

479
00:25:15,919 --> 00:25:21,860
zero<font color="#CCCCCC"> zero six because it's very it will</font>

480
00:25:18,860 --> 00:25:25,610
bring the multi fold<font color="#E5E5E5"> difference however</font>

481
00:25:21,860 --> 00:25:29,510
<font color="#E5E5E5">that here when Erin and can detect</font>

482
00:25:25,610 --> 00:25:32,299
something<font color="#E5E5E5"> it's doing</font><font color="#CCCCCC"> very good in case</font>

483
00:25:29,510 --> 00:25:35,149
of<font color="#E5E5E5"> complex method it's not doing that</font>

484
00:25:32,299 --> 00:25:38,809
<font color="#CCCCCC">great because</font><font color="#E5E5E5"> probably it cannot capture</font>

485
00:25:35,149 --> 00:25:43,309
the the structural property of the

486
00:25:38,809 --> 00:25:45,590
method<font color="#E5E5E5"> however</font><font color="#CCCCCC"> in other cases</font><font color="#E5E5E5"> and these</font>

487
00:25:43,309 --> 00:25:47,029
two cases probably<font color="#CCCCCC"> Allanon is picking up</font>

488
00:25:45,590 --> 00:25:48,590
<font color="#CCCCCC">that feature and</font><font color="#E5E5E5"> that's why it's doing</font>

489
00:25:47,029 --> 00:25:53,470
<font color="#E5E5E5">much better than the</font><font color="#CCCCCC"> rest</font><font color="#E5E5E5"> of the two</font>

490
00:25:48,590 --> 00:25:56,870
<font color="#E5E5E5">models another experiment that we</font><font color="#CCCCCC"> did is</font>

491
00:25:53,470 --> 00:26:02,419
is it<font color="#E5E5E5"> beneficial to increase number of</font>

492
00:25:56,870 --> 00:26:05,750
<font color="#CCCCCC">deep layers and we what we found is well</font>

493
00:26:02,419 --> 00:26:10,010
in for the second layer<font color="#E5E5E5"> maybe we get</font>

494
00:26:05,750 --> 00:26:12,289
some boost up however<font color="#E5E5E5"> it start decaying</font>

495
00:26:10,010 --> 00:26:14,140
or<font color="#E5E5E5"> at the best it will not change</font>

496
00:26:12,289 --> 00:26:18,860
<font color="#CCCCCC">anything</font>

497
00:26:14,140 --> 00:26:20,980
<font color="#E5E5E5">so again we when we are</font><font color="#CCCCCC"> applying deep</font>

498
00:26:18,860 --> 00:26:24,199
learning we need<font color="#E5E5E5"> to see that whether</font>

499
00:26:20,980 --> 00:26:26,559
increasing number of<font color="#E5E5E5"> layers whether it</font>

500
00:26:24,200 --> 00:26:32,620
<font color="#E5E5E5">is beneficial or not or we are just</font><font color="#CCCCCC"> in</font>

501
00:26:26,559 --> 00:26:35,440
in our training<font color="#E5E5E5"> time this one is even</font>

502
00:26:32,620 --> 00:26:38,649
interesting so I would repeat what<font color="#E5E5E5"> we</font>

503
00:26:35,440 --> 00:26:39,899
did<font color="#E5E5E5"> here so we train the model in</font>

504
00:26:38,649 --> 00:26:42,850
<font color="#CCCCCC">c-sharp</font>

505
00:26:39,899 --> 00:26:45,639
however we applied that<font color="#CCCCCC"> train model to</font>

506
00:26:42,850 --> 00:26:49,418
Java samples to see whether the same

507
00:26:45,639 --> 00:26:52,269
<font color="#CCCCCC">trained</font><font color="#E5E5E5"> model how fairly or how good it</font>

508
00:26:49,419 --> 00:26:54,399
is<font color="#E5E5E5"> to classify Java samples into smelly</font>

509
00:26:52,269 --> 00:26:58,749
and non smelly code<font color="#E5E5E5"> and this is what we</font>

510
00:26:54,399 --> 00:27:03,189
found<font color="#CCCCCC"> and again it is</font><font color="#E5E5E5"> something similar</font>

511
00:26:58,749 --> 00:27:04,720
trend<font color="#E5E5E5"> but if you compare this direct</font>

512
00:27:03,190 --> 00:27:07,019
<font color="#E5E5E5">training versus transfer training</font>

513
00:27:04,720 --> 00:27:10,860
<font color="#CCCCCC">transfer learning</font><font color="#E5E5E5"> you will see that</font>

514
00:27:07,019 --> 00:27:14,490
transfer<font color="#CCCCCC"> learning is doing much better</font>

515
00:27:10,860 --> 00:27:17,949
<font color="#E5E5E5">so the model</font><font color="#CCCCCC"> cleaned on c-sharp</font><font color="#E5E5E5"> is</font>

516
00:27:14,490 --> 00:27:21,279
better in detecting smells in<font color="#E5E5E5"> java code</font>

517
00:27:17,950 --> 00:27:23,409
rather than<font color="#E5E5E5"> its own code which is kind</font>

518
00:27:21,279 --> 00:27:28,659
of surprising and<font color="#CCCCCC"> am I'm still</font><font color="#E5E5E5"> looking</font>

519
00:27:23,409 --> 00:27:33,909
why it's happened<font color="#E5E5E5"> honestly but this</font><font color="#CCCCCC"> is</font>

520
00:27:28,659 --> 00:27:37,720
what we got so this is what it<font color="#E5E5E5"> is</font>

521
00:27:33,909 --> 00:27:40,360
let's conclude<font color="#E5E5E5"> the first conclusion that</font>

522
00:27:37,720 --> 00:27:43,169
is that it is feasible<font color="#E5E5E5"> to make the</font>

523
00:27:40,360 --> 00:27:45,939
planning model<font color="#E5E5E5"> learn to detect smells</font>

524
00:27:43,169 --> 00:27:48,639
obviously which smell you are detecting

525
00:27:45,940 --> 00:27:51,299
and the performance varies and<font color="#E5E5E5"> we can do</font>

526
00:27:48,639 --> 00:27:53,709
much more that's a separate thing

527
00:27:51,299 --> 00:27:56,408
<font color="#E5E5E5">transfer learning is also feasible we</font>

528
00:27:53,710 --> 00:27:59,320
have seen that it<font color="#E5E5E5"> is feasible so what it</font>

529
00:27:56,409 --> 00:28:02,139
implies<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> if you if you have a</font>

530
00:27:59,320 --> 00:28:04,330
very<font color="#E5E5E5"> good tool for for one language one</font>

531
00:28:02,139 --> 00:28:07,418
<font color="#E5E5E5">programming</font><font color="#CCCCCC"> language then</font><font color="#E5E5E5"> you don't have</font>

532
00:28:04,330 --> 00:28:09,999
<font color="#E5E5E5">to invent or write the tool for other</font>

533
00:28:07,419 --> 00:28:12,490
programming languages<font color="#E5E5E5"> at least similar</font>

534
00:28:09,999 --> 00:28:14,440
<font color="#E5E5E5">programming languages you train the</font>

535
00:28:12,490 --> 00:28:18,429
model<font color="#E5E5E5"> and you apply that</font><font color="#CCCCCC"> model to</font><font color="#E5E5E5"> other</font>

536
00:28:14,440 --> 00:28:21,190
programming<font color="#E5E5E5"> languages and obviously</font>

537
00:28:18,429 --> 00:28:24,039
there are many many possibilities<font color="#CCCCCC"> for</font>

538
00:28:21,190 --> 00:28:27,129
improvement<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can improve performance</font>

539
00:28:24,039 --> 00:28:29,919
we can add more smells different kind of

540
00:28:27,129 --> 00:28:33,009
smells and and this<font color="#E5E5E5"> is I</font><font color="#CCCCCC"> believe this is</font>

541
00:28:29,919 --> 00:28:37,529
<font color="#CCCCCC">just a start and there are many many</font>

542
00:28:33,009 --> 00:28:40,710
<font color="#CCCCCC">things that</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be built</font><font color="#E5E5E5"> over it so</font>

543
00:28:37,529 --> 00:28:43,700
these are some relevant<font color="#E5E5E5"> links as I</font>

544
00:28:40,710 --> 00:28:48,090
you can download all the source code<font color="#CCCCCC"> and</font>

545
00:28:43,700 --> 00:28:56,610
data here I made it<font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> today</font>

546
00:28:48,090 --> 00:29:00,178
morning<font color="#CCCCCC"> you can download the the design</font>

547
00:28:56,610 --> 00:29:02,820
<font color="#E5E5E5">at</font><font color="#CCCCCC"> Farsi shop here and</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> academy use</font>

548
00:29:00,179 --> 00:29:05,630
<font color="#CCCCCC">its fee for</font><font color="#E5E5E5"> Java</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> open-source</font>

549
00:29:02,820 --> 00:29:09,809
<font color="#E5E5E5">project you can do whatever you want</font>

550
00:29:05,630 --> 00:29:11,760
code split is again this<font color="#E5E5E5"> Java version is</font>

551
00:29:09,809 --> 00:29:15,450
<font color="#E5E5E5">open-source you can download and you</font><font color="#CCCCCC"> can</font>

552
00:29:11,760 --> 00:29:17,309
play<font color="#E5E5E5"> with that and for for for c-sharp</font>

553
00:29:15,450 --> 00:29:21,750
you can download freely<font color="#E5E5E5"> without</font><font color="#CCCCCC"> any</font>

554
00:29:17,309 --> 00:29:25,168
charge tokenizer<font color="#E5E5E5"> is another tool</font><font color="#CCCCCC"> that we</font>

555
00:29:21,750 --> 00:29:27,690
have<font color="#E5E5E5"> offered</font><font color="#CCCCCC"> and you can again use it</font>

556
00:29:25,169 --> 00:29:29,990
<font color="#CCCCCC">it's open-source</font><font color="#E5E5E5"> project feel free</font><font color="#CCCCCC"> to</font>

557
00:29:27,690 --> 00:29:29,990
<font color="#E5E5E5">use it</font>

558
00:29:32,210 --> 00:29:44,700
<font color="#CCCCCC">ok thank you if if you like stickers</font><font color="#E5E5E5"> I</font>

559
00:29:42,570 --> 00:29:51,590
have some<font color="#E5E5E5"> stickers some fancy stickers</font>

560
00:29:44,700 --> 00:29:51,590
please feel free yes please<font color="#E5E5E5"> yes</font>

561
00:29:55,220 --> 00:30:01,170
[Music]

562
00:29:57,770 --> 00:30:06,660
<font color="#E5E5E5">okay what is what is</font><font color="#CCCCCC"> the exact</font><font color="#E5E5E5"> input to</font>

563
00:30:01,170 --> 00:30:08,070
the convolution<font color="#E5E5E5"> layer okay so the as you</font>

564
00:30:06,660 --> 00:30:10,860
<font color="#E5E5E5">can see the architecture</font>

565
00:30:08,070 --> 00:30:13,200
I mean you we have defined and before

566
00:30:10,860 --> 00:30:16,949
giving to the deep learning model to the

567
00:30:13,200 --> 00:30:21,480
whole models the<font color="#CCCCCC"> convert</font><font color="#E5E5E5"> source code</font>

568
00:30:16,950 --> 00:30:24,260
<font color="#E5E5E5">into tokens so yes</font><font color="#CCCCCC"> tokens integer tokens</font>

569
00:30:21,480 --> 00:30:26,760
<font color="#E5E5E5">but we have an umpire</font><font color="#CCCCCC"> array</font><font color="#E5E5E5"> basically</font>

570
00:30:24,260 --> 00:30:31,370
which<font color="#E5E5E5"> the individual element is</font>

571
00:30:26,760 --> 00:30:34,920
basically integer token<font color="#CCCCCC"> and in 1</font><font color="#E5E5E5"> D 1 D</font>

572
00:30:31,370 --> 00:30:36,959
<font color="#CCCCCC">CNN one D we</font><font color="#E5E5E5"> have each input</font><font color="#CCCCCC"> or for</font>

573
00:30:34,920 --> 00:30:40,020
<font color="#CCCCCC">example a each methyl is a single vector</font>

574
00:30:36,960 --> 00:30:42,720
<font color="#CCCCCC">one D vector and two d CN n 2 D we have</font>

575
00:30:40,020 --> 00:30:54,900
the matrix<font color="#E5E5E5"> so each input sample is a</font>

576
00:30:42,720 --> 00:30:58,610
matrix<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> D matrix remove I think it's</font>

577
00:30:54,900 --> 00:31:02,490
only<font color="#E5E5E5"> the white spaces it removes so ah</font>

578
00:30:58,610 --> 00:31:05,669
<font color="#E5E5E5">so the question is that how does the</font>

579
00:31:02,490 --> 00:31:07,440
tokenizer work and how what it removes

580
00:31:05,670 --> 00:31:09,810
<font color="#E5E5E5">from the source code so I think it</font>

581
00:31:07,440 --> 00:31:14,880
<font color="#E5E5E5">doesn't remove anything it just</font><font color="#CCCCCC"> move</font>

582
00:31:09,810 --> 00:31:18,419
white spaces and for each for<font color="#CCCCCC"> each token</font>

583
00:31:14,880 --> 00:31:20,340
for example<font color="#CCCCCC"> public I mean if it is a</font>

584
00:31:18,420 --> 00:31:22,800
reserved word<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a set</font><font color="#E5E5E5"> of tokens</font>

585
00:31:20,340 --> 00:31:25,970
assigned to it if it<font color="#E5E5E5"> is a user</font><font color="#CCCCCC"> defined</font>

586
00:31:22,800 --> 00:31:29,850
symbol then there is a range of tokens

587
00:31:25,970 --> 00:31:33,420
on V in which the it will be<font color="#E5E5E5"> assignment</font>

588
00:31:29,850 --> 00:31:35,459
will<font color="#CCCCCC"> be made and if it is a numerical</font>

589
00:31:33,420 --> 00:31:37,620
literal<font color="#E5E5E5"> again it's a range of tokens</font>

590
00:31:35,460 --> 00:31:40,100
<font color="#CCCCCC">with which will be assigned</font><font color="#E5E5E5"> to it so</font>

591
00:31:37,620 --> 00:31:40,100
something like

592
00:31:48,710 --> 00:31:53,940
flame<font color="#CCCCCC"> vac dependent code okay</font>

593
00:31:52,139 --> 00:31:57,178
the<font color="#E5E5E5"> question is how it will</font><font color="#CCCCCC"> work on</font>

594
00:31:53,940 --> 00:31:59,730
framework dependent code<font color="#CCCCCC"> I don't see any</font>

595
00:31:57,179 --> 00:32:02,940
difference<font color="#CCCCCC"> between framework dependent</font>

596
00:31:59,730 --> 00:32:05,659
code<font color="#E5E5E5"> or</font><font color="#CCCCCC"> an otherwise</font><font color="#E5E5E5"> but we have not</font>

597
00:32:02,940 --> 00:32:09,629
tested it<font color="#CCCCCC"> so we have</font><font color="#E5E5E5"> to this is a very</font>

598
00:32:05,659 --> 00:32:12,289
first attempt<font color="#CCCCCC"> right</font><font color="#E5E5E5"> now so maybe maybe</font>

599
00:32:09,629 --> 00:32:12,289
we can do<font color="#E5E5E5"> that</font>

600
00:32:21,200 --> 00:32:29,210
I don't<font color="#CCCCCC"> think that will impact</font><font color="#E5E5E5"> anything</font>

601
00:32:24,320 --> 00:32:31,850
because whatever code you provide<font color="#CCCCCC"> I mean</font>

602
00:32:29,210 --> 00:32:34,730
<font color="#E5E5E5">anyway it's the the the scope is very</font>

603
00:32:31,850 --> 00:32:36,169
limited for<font color="#CCCCCC"> the scan</font><font color="#E5E5E5"> so it's for</font>

604
00:32:34,730 --> 00:32:39,880
implementation<font color="#E5E5E5"> is smell</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just one</font>

605
00:32:36,170 --> 00:32:39,880
method<font color="#CCCCCC"> so it's just looking that matter</font>

606
00:32:54,340 --> 00:33:02,120
okay<font color="#E5E5E5"> the question</font><font color="#CCCCCC"> is what</font><font color="#E5E5E5"> are the</font>

607
00:33:00,110 --> 00:33:05,030
challenges<font color="#E5E5E5"> if we want to extend this</font>

608
00:33:02,120 --> 00:33:07,189
work to more involved smells more

609
00:33:05,030 --> 00:33:10,670
<font color="#CCCCCC">complexes moles for example scattered</font>

610
00:33:07,190 --> 00:33:13,370
functionality it<font color="#E5E5E5"> is difficult it is</font>

611
00:33:10,670 --> 00:33:16,250
<font color="#E5E5E5">difficult because our goal was that we</font>

612
00:33:13,370 --> 00:33:21,050
<font color="#E5E5E5">will not give the processed input to the</font>

613
00:33:16,250 --> 00:33:23,180
model we want<font color="#E5E5E5"> to give model as as close</font>

614
00:33:21,050 --> 00:33:24,889
<font color="#E5E5E5">to the raw source code we</font><font color="#CCCCCC"> just Pro</font>

615
00:33:23,180 --> 00:33:26,780
cognize it and remove<font color="#E5E5E5"> the duplicates but</font>

616
00:33:24,890 --> 00:33:28,880
we didn't do<font color="#E5E5E5"> anything else which</font>

617
00:33:26,780 --> 00:33:31,940
normally referred as feature<font color="#CCCCCC"> engineering</font>

618
00:33:28,880 --> 00:33:35,120
we didn't do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and that's the one of</font>

619
00:33:31,940 --> 00:33:37,190
<font color="#CCCCCC">the aim we intentionally didn't</font><font color="#E5E5E5"> do that</font>

620
00:33:35,120 --> 00:33:41,419
<font color="#E5E5E5">because this</font><font color="#CCCCCC"> is how</font><font color="#E5E5E5"> we want to</font><font color="#CCCCCC"> process</font>

621
00:33:37,190 --> 00:33:44,270
it but if we want<font color="#E5E5E5"> to if</font><font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to go a</font>

622
00:33:41,420 --> 00:33:46,250
<font color="#E5E5E5">little bit in detail and more involved</font>

623
00:33:44,270 --> 00:33:48,470
smells and which we<font color="#E5E5E5"> have seen in the</font>

624
00:33:46,250 --> 00:33:51,860
multifaceted<font color="#E5E5E5"> abstraction it's it's not</font>

625
00:33:48,470 --> 00:33:54,530
<font color="#E5E5E5">really</font><font color="#CCCCCC"> easy the whole characteristic of</font>

626
00:33:51,860 --> 00:33:57,860
<font color="#CCCCCC">the smell is not captured</font><font color="#E5E5E5"> really and the</font>

627
00:33:54,530 --> 00:34:00,020
model cannot capture even we given a

628
00:33:57,860 --> 00:34:05,990
<font color="#CCCCCC">tanning training size of</font><font color="#E5E5E5"> ten</font><font color="#CCCCCC"> thousand</font>

629
00:34:00,020 --> 00:34:07,970
you cannot capture that<font color="#CCCCCC"> that is one</font>

630
00:34:05,990 --> 00:34:10,760
possibility but probably<font color="#E5E5E5"> we</font><font color="#CCCCCC"> need to do</font>

631
00:34:07,970 --> 00:34:12,949
some sort of<font color="#E5E5E5"> or mix or</font><font color="#CCCCCC"> introduce</font>

632
00:34:10,760 --> 00:34:16,850
relevant features or give relevant

633
00:34:12,949 --> 00:34:19,239
features to to<font color="#E5E5E5"> help the model to detect</font>

634
00:34:16,850 --> 00:34:19,239
better

635
00:34:48,739 --> 00:34:55,620
<font color="#CCCCCC">because question is that</font><font color="#E5E5E5"> is it ready for</font>

636
00:34:52,409 --> 00:35:00,330
the industry<font color="#CCCCCC"> if I</font><font color="#E5E5E5"> summarize it at what</font>

637
00:34:55,620 --> 00:35:02,370
<font color="#E5E5E5">level okay for the industry what kind of</font>

638
00:35:00,330 --> 00:35:05,630
<font color="#E5E5E5">accuracy will</font><font color="#CCCCCC"> be needed to so that we</font>

639
00:35:02,370 --> 00:35:09,420
<font color="#E5E5E5">can say okay</font><font color="#CCCCCC"> now it's ready for industry</font>

640
00:35:05,630 --> 00:35:12,120
that's difficult to<font color="#E5E5E5"> answer but in the</font>

641
00:35:09,420 --> 00:35:13,950
<font color="#E5E5E5">morning we one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the sessions will say</font>

642
00:35:12,120 --> 00:35:17,520
that the<font color="#E5E5E5"> precision is really important</font>

643
00:35:13,950 --> 00:35:21,089
for this<font color="#E5E5E5"> kind of analysis so</font><font color="#CCCCCC"> if we have</font>

644
00:35:17,520 --> 00:35:22,860
a precision<font color="#CCCCCC"> a lower decision like less</font>

645
00:35:21,090 --> 00:35:27,090
than<font color="#E5E5E5"> 70 80 percent then people will</font>

646
00:35:22,860 --> 00:35:29,550
reject<font color="#E5E5E5"> it very outrageously so it must</font>

647
00:35:27,090 --> 00:35:33,120
have<font color="#E5E5E5"> something decent precision and</font>

648
00:35:29,550 --> 00:35:35,100
because this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> really a life</font>

649
00:35:33,120 --> 00:35:37,080
<font color="#E5E5E5">threatening</font><font color="#CCCCCC"> if we miss something</font><font color="#E5E5E5"> it's</font>

650
00:35:35,100 --> 00:35:39,029
not<font color="#E5E5E5"> life threatening</font><font color="#CCCCCC"> so we can</font>

651
00:35:37,080 --> 00:35:39,870
compromise<font color="#E5E5E5"> on precision but we cannot</font>

652
00:35:39,030 --> 00:35:42,390
you know<font color="#E5E5E5"> sorry</font>

653
00:35:39,870 --> 00:35:43,950
recall but not on precision<font color="#E5E5E5"> because</font>

654
00:35:42,390 --> 00:35:45,390
otherwise the precision is very high

655
00:35:43,950 --> 00:35:48,629
which means<font color="#E5E5E5"> false positives are already</font>

656
00:35:45,390 --> 00:35:51,060
high which means us<font color="#E5E5E5"> the precision is low</font>

657
00:35:48,630 --> 00:35:53,640
then high false<font color="#CCCCCC"> positive</font><font color="#E5E5E5"> is very high</font>

658
00:35:51,060 --> 00:35:56,700
<font color="#E5E5E5">which means</font><font color="#CCCCCC"> people will say mmm</font><font color="#E5E5E5"> out of</font>

659
00:35:53,640 --> 00:36:01,230
<font color="#CCCCCC">ten</font><font color="#E5E5E5"> only one is useful don't want to use</font>

660
00:35:56,700 --> 00:36:04,049
<font color="#E5E5E5">it</font><font color="#CCCCCC"> so decent percentage</font><font color="#E5E5E5"> could be at</font>

661
00:36:01,230 --> 00:36:07,490
<font color="#E5E5E5">least</font><font color="#CCCCCC"> 80</font><font color="#E5E5E5"> pretty file there is no gold</font>

662
00:36:04,050 --> 00:36:07,490
<font color="#E5E5E5">rule for that but</font>

663
00:36:09,160 --> 00:36:12,299
[Applause]

