1
00:00:07,300 --> 00:00:15,770
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> let's do this</font>

2
00:00:10,100 --> 00:00:17,420
hello everyone<font color="#E5E5E5"> that's me again well if</font>

3
00:00:15,770 --> 00:00:19,520
you haven't<font color="#CCCCCC"> been</font><font color="#E5E5E5"> here I've been</font><font color="#CCCCCC"> doing</font>

4
00:00:17,420 --> 00:00:21,980
<font color="#E5E5E5">also talk in</font><font color="#CCCCCC"> the morning this</font><font color="#E5E5E5"> time it</font>

5
00:00:19,520 --> 00:00:25,660
will<font color="#E5E5E5"> be about reinventing MVC pattern</font>

6
00:00:21,980 --> 00:00:28,960
for<font color="#CCCCCC"> f-sharp web programming</font><font color="#E5E5E5"> which is</font>

7
00:00:25,660 --> 00:00:31,640
<font color="#CCCCCC">kinda interesting topic because</font><font color="#E5E5E5"> usually</font>

8
00:00:28,960 --> 00:00:33,410
when you<font color="#CCCCCC"> think about MVC pattern you</font>

9
00:00:31,640 --> 00:00:41,170
think about<font color="#E5E5E5"> object-oriented programming</font>

10
00:00:33,410 --> 00:00:44,120
<font color="#E5E5E5">and here I will try</font><font color="#CCCCCC"> to show</font><font color="#E5E5E5"> you how we</font>

11
00:00:41,170 --> 00:00:46,940
attempt to reemployment this<font color="#E5E5E5"> this</font>

12
00:00:44,120 --> 00:00:49,669
pattern with functional programming

13
00:00:46,940 --> 00:00:52,640
<font color="#CCCCCC">principles so my name is Chris you can</font>

14
00:00:49,670 --> 00:00:56,300
find me on Twitter<font color="#CCCCCC"> I'm active member of</font>

15
00:00:52,640 --> 00:01:00,530
F sharp<font color="#CCCCCC"> open-source community</font><font color="#E5E5E5"> you may</font>

16
00:00:56,300 --> 00:01:04,640
know me from<font color="#E5E5E5"> some of those projects from</font>

17
00:01:00,530 --> 00:01:06,110
<font color="#E5E5E5">the photography</font><font color="#CCCCCC"> if you are dotnet</font>

18
00:01:04,640 --> 00:01:11,090
developer and<font color="#E5E5E5"> you're on Twitter you may</font>

19
00:01:06,110 --> 00:01:13,850
know me from like<font color="#E5E5E5"> talking a lot of not</font>

20
00:01:11,090 --> 00:01:17,660
nice stuff<font color="#CCCCCC"> about Microsoft which is</font>

21
00:01:13,850 --> 00:01:22,339
false Microsoft is super cool so why

22
00:01:17,660 --> 00:01:26,199
this talk<font color="#E5E5E5"> the idea is</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> simple</font><font color="#CCCCCC"> web</font>

23
00:01:22,340 --> 00:01:30,110
is functional<font color="#E5E5E5"> you basically can model an</font>

24
00:01:26,200 --> 00:01:33,290
HTTP<font color="#CCCCCC"> server</font><font color="#E5E5E5"> as a black box as a function</font>

25
00:01:30,110 --> 00:01:37,370
that<font color="#E5E5E5"> takes</font><font color="#CCCCCC"> HTTP requests and</font><font color="#E5E5E5"> after some</font>

26
00:01:33,290 --> 00:01:39,560
time<font color="#CCCCCC"> it returns HTTP response which</font>

27
00:01:37,370 --> 00:01:41,690
means<font color="#CCCCCC"> that it seems as a perfect fit for</font>

28
00:01:39,560 --> 00:01:44,330
<font color="#CCCCCC">the functional</font><font color="#E5E5E5"> programming functional</font>

29
00:01:41,690 --> 00:01:47,090
programming is all about<font color="#E5E5E5"> taking some</font>

30
00:01:44,330 --> 00:01:50,440
input<font color="#E5E5E5"> doing some</font><font color="#CCCCCC"> magic inside the</font>

31
00:01:47,090 --> 00:01:54,400
<font color="#CCCCCC">function and returning some output and</font>

32
00:01:50,440 --> 00:01:59,030
currently<font color="#E5E5E5"> in</font><font color="#CCCCCC"> f-sharp there</font><font color="#E5E5E5"> exists two</font>

33
00:01:54,400 --> 00:02:01,820
<font color="#E5E5E5">frameworks</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> attempts</font><font color="#CCCCCC"> to use this</font>

34
00:01:59,030 --> 00:02:04,880
principle of just so there is<font color="#CCCCCC"> requests</font>

35
00:02:01,820 --> 00:02:07,130
and there is response to model the

36
00:02:04,880 --> 00:02:10,509
<font color="#E5E5E5">behavior of the web server and are</font>

37
00:02:07,130 --> 00:02:12,319
called<font color="#CCCCCC"> swath</font><font color="#E5E5E5"> and giraffe</font><font color="#CCCCCC"> swath is</font>

38
00:02:10,509 --> 00:02:14,510
<font color="#E5E5E5">implementation is standalone</font>

39
00:02:12,319 --> 00:02:18,440
implementation<font color="#E5E5E5"> it implements also its</font>

40
00:02:14,510 --> 00:02:20,359
own web server<font color="#E5E5E5"> giraffe</font>

41
00:02:18,440 --> 00:02:23,960
implementation built on top of asp.net

42
00:02:20,360 --> 00:02:26,060
car<font color="#E5E5E5"> there are basically the same in</font>

43
00:02:23,960 --> 00:02:29,380
<font color="#E5E5E5">terms of like abstractions they use</font>

44
00:02:26,060 --> 00:02:33,110
there is just this one small difference

45
00:02:29,380 --> 00:02:35,180
<font color="#E5E5E5">so the abstractions let's imagine this</font>

46
00:02:33,110 --> 00:02:37,100
is<font color="#CCCCCC"> a</font><font color="#E5E5E5"> trap code but but it's it should be</font>

47
00:02:35,180 --> 00:02:40,220
<font color="#E5E5E5">fairly</font><font color="#CCCCCC"> simple like</font><font color="#E5E5E5"> it's almost like she</font>

48
00:02:37,100 --> 00:02:42,170
should do code so so<font color="#E5E5E5"> I hope that it will</font>

49
00:02:40,220 --> 00:02:44,770
be<font color="#CCCCCC"> clearer</font><font color="#E5E5E5"> let's imagine that we have</font>

50
00:02:42,170 --> 00:02:49,220
type HTTP context<font color="#E5E5E5"> that contains</font><font color="#CCCCCC"> three</font>

51
00:02:44,770 --> 00:02:52,280
<font color="#CCCCCC">three elements its h2</font><font color="#E5E5E5"> its incoming HTTP</font>

52
00:02:49,220 --> 00:02:54,620
<font color="#E5E5E5">request its current state</font><font color="#CCCCCC"> of HTTP</font>

53
00:02:52,280 --> 00:02:57,230
response and<font color="#E5E5E5"> it's some additional info</font>

54
00:02:54,620 --> 00:03:01,880
about<font color="#E5E5E5"> server environment and so</font><font color="#CCCCCC"> on and</font>

55
00:02:57,230 --> 00:03:06,049
then<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have a function</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> takes HTTP</font>

56
00:03:01,880 --> 00:03:08,530
context and potentially so optionally<font color="#E5E5E5"> in</font>

57
00:03:06,050 --> 00:03:12,110
the future so it's<font color="#E5E5E5"> asynchronous</font>

58
00:03:08,530 --> 00:03:17,840
operation can return<font color="#E5E5E5"> a new HTTP context</font>

59
00:03:12,110 --> 00:03:20,150
<font color="#E5E5E5">why why optionally because maybe we want</font>

60
00:03:17,840 --> 00:03:24,160
to<font color="#E5E5E5"> stop processing at some point at the</font>

61
00:03:20,150 --> 00:03:27,830
time we<font color="#E5E5E5"> don't</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> follow the path</font><font color="#CCCCCC"> of</font>

62
00:03:24,160 --> 00:03:29,959
operations that<font color="#E5E5E5"> we will create and we</font>

63
00:03:27,830 --> 00:03:32,120
have this really<font color="#CCCCCC"> nice Star</font><font color="#E5E5E5"> Wars operator</font>

64
00:03:29,959 --> 00:03:34,430
<font color="#CCCCCC">rocket operator whatever you want to</font>

65
00:03:32,120 --> 00:03:37,220
call it this this<font color="#E5E5E5"> arrow thingy</font>

66
00:03:34,430 --> 00:03:40,340
it actually has serious name in like

67
00:03:37,220 --> 00:03:44,209
category theory but<font color="#CCCCCC"> let's go into that</font>

68
00:03:40,340 --> 00:03:47,269
<font color="#E5E5E5">part it takes two web parts and combines</font>

69
00:03:44,209 --> 00:03:50,390
them<font color="#E5E5E5"> together into third web part and</font>

70
00:03:47,269 --> 00:03:52,970
here is sample of usage and well one

71
00:03:50,390 --> 00:03:58,488
more thing<font color="#CCCCCC"> usually there are two</font><font color="#E5E5E5"> kinds</font>

72
00:03:52,970 --> 00:04:03,190
of<font color="#E5E5E5"> web parts one kind is doing some type</font>

73
00:03:58,489 --> 00:04:08,090
of<font color="#E5E5E5"> test</font><font color="#CCCCCC"> is this</font><font color="#E5E5E5"> request get request is</font>

74
00:04:03,190 --> 00:04:11,120
this request something<font color="#E5E5E5"> calls has given</font>

75
00:04:08,090 --> 00:04:13,519
value in the header<font color="#E5E5E5"> and the other kind</font>

76
00:04:11,120 --> 00:04:16,668
<font color="#E5E5E5">of web parts</font><font color="#CCCCCC"> are web parts that are</font>

77
00:04:13,519 --> 00:04:20,750
modifying response let's write hello

78
00:04:16,668 --> 00:04:23,960
world<font color="#E5E5E5"> to the content of the response so</font>

79
00:04:20,750 --> 00:04:27,710
here is<font color="#E5E5E5"> really simple example first</font><font color="#CCCCCC"> we</font>

80
00:04:23,960 --> 00:04:31,070
check<font color="#E5E5E5"> firstly we check if the request is</font>

81
00:04:27,710 --> 00:04:32,539
get then we<font color="#CCCCCC"> check</font><font color="#E5E5E5"> if it was on the -</font>

82
00:04:31,070 --> 00:04:36,020
<font color="#E5E5E5">slash</font><font color="#CCCCCC"> pair</font>

83
00:04:32,539 --> 00:04:38,479
<font color="#CCCCCC">path and then if that was all true</font><font color="#E5E5E5"> then</font>

84
00:04:36,020 --> 00:04:40,818
we put<font color="#CCCCCC"> Paulo words in their content</font><font color="#E5E5E5"> and</font>

85
00:04:38,479 --> 00:04:43,068
<font color="#CCCCCC">return to user</font><font color="#E5E5E5"> so that's that's one</font>

86
00:04:40,819 --> 00:04:44,330
function<font color="#E5E5E5"> really important the second</font>

87
00:04:43,069 --> 00:04:47,860
really important<font color="#CCCCCC"> function is choose</font>

88
00:04:44,330 --> 00:04:51,139
function<font color="#E5E5E5"> it takes list of web</font><font color="#CCCCCC"> parts and</font>

89
00:04:47,860 --> 00:04:56,030
combines them<font color="#CCCCCC"> together</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> it does</font>

90
00:04:51,139 --> 00:04:59,900
<font color="#E5E5E5">it's one by one</font><font color="#CCCCCC"> executes web parts to</font>

91
00:04:56,030 --> 00:05:02,869
the moment when it actually<font color="#E5E5E5"> finds the</font>

92
00:04:59,900 --> 00:05:07,128
web part<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> yes</font><font color="#E5E5E5"> is fully successful</font>

93
00:05:02,870 --> 00:05:09,849
so it goes<font color="#E5E5E5"> to the end so it goes</font><font color="#CCCCCC"> to if</font>

94
00:05:07,129 --> 00:05:11,960
request is coming<font color="#E5E5E5"> here it goes to this</font>

95
00:05:09,849 --> 00:05:14,060
this<font color="#CCCCCC"> first web part</font>

96
00:05:11,960 --> 00:05:16,280
<font color="#E5E5E5">it's checks if it's pink if it's not</font>

97
00:05:14,060 --> 00:05:18,440
pink<font color="#E5E5E5"> then this whole operation returns</font>

98
00:05:16,280 --> 00:05:20,508
<font color="#CCCCCC">nothing it goes to the second and so on</font>

99
00:05:18,440 --> 00:05:23,780
<font color="#E5E5E5">so</font><font color="#CCCCCC"> on so on</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> a simple</font>

100
00:05:20,509 --> 00:05:26,419
<font color="#E5E5E5">example</font><font color="#CCCCCC"> if it</font><font color="#E5E5E5"> is pink it goes to it goes</font>

101
00:05:23,780 --> 00:05:31,090
here this just returns response to the

102
00:05:26,419 --> 00:05:33,560
user<font color="#CCCCCC"> so this is fairly simple model and</font>

103
00:05:31,090 --> 00:05:37,219
what's<font color="#E5E5E5"> really nice about it it's really</font>

104
00:05:33,560 --> 00:05:41,419
composable<font color="#E5E5E5"> and it enables you developers</font>

105
00:05:37,219 --> 00:05:44,090
to model<font color="#CCCCCC"> a decision tree</font><font color="#E5E5E5"> about what's</font>

106
00:05:41,419 --> 00:05:46,789
happening inside<font color="#E5E5E5"> your web server so this</font>

107
00:05:44,090 --> 00:05:49,638
is basically decision tree the first

108
00:05:46,789 --> 00:05:52,580
decision is whether<font color="#CCCCCC"> if what</font><font color="#E5E5E5"> kind of the</font>

109
00:05:49,639 --> 00:05:55,400
<font color="#CCCCCC">request it is get post or something</font>

110
00:05:52,580 --> 00:05:59,930
<font color="#CCCCCC">curls</font><font color="#E5E5E5"> then if it's get it goes to the</font>

111
00:05:55,400 --> 00:06:02,270
next<font color="#E5E5E5"> decision so and so and so on so it</font>

112
00:05:59,930 --> 00:06:04,699
is<font color="#E5E5E5"> flexible model it is very powerful</font>

113
00:06:02,270 --> 00:06:05,840
<font color="#E5E5E5">model because you can model with that</font>

114
00:06:04,699 --> 00:06:08,259
<font color="#E5E5E5">seven three you can model and the</font>

115
00:06:05,840 --> 00:06:11,479
behavior

116
00:06:08,259 --> 00:06:14,180
unfortunately<font color="#E5E5E5"> and that can don't get me</font>

117
00:06:11,479 --> 00:06:16,699
wrong<font color="#E5E5E5"> like I will say some negative</font>

118
00:06:14,180 --> 00:06:19,840
<font color="#E5E5E5">points of this model in a moment this</font><font color="#CCCCCC"> is</font>

119
00:06:16,699 --> 00:06:22,159
really model that<font color="#E5E5E5"> I've used to introduce</font>

120
00:06:19,840 --> 00:06:25,669
web programming in general<font color="#E5E5E5"> to many</font>

121
00:06:22,159 --> 00:06:29,090
people that<font color="#E5E5E5"> have not being not doing web</font>

122
00:06:25,669 --> 00:06:30,859
programming before<font color="#CCCCCC"> and it's easy</font><font color="#E5E5E5"> to</font>

123
00:06:29,090 --> 00:06:34,400
understand it's easy<font color="#E5E5E5"> to use but it</font><font color="#CCCCCC"> has</font>

124
00:06:30,860 --> 00:06:37,009
problems first of<font color="#E5E5E5"> all it doesn't scale</font>

125
00:06:34,400 --> 00:06:39,258
and by that I mean<font color="#E5E5E5"> it's not by</font>

126
00:06:37,009 --> 00:06:40,909
performance<font color="#E5E5E5"> but it just doesn't scale</font>

127
00:06:39,259 --> 00:06:42,740
with the size of the application<font color="#CCCCCC"> you can</font>

128
00:06:40,909 --> 00:06:44,479
<font color="#CCCCCC">imagine</font><font color="#E5E5E5"> that this decision tree is</font>

129
00:06:42,740 --> 00:06:45,190
growing<font color="#E5E5E5"> and growing and growing if you</font>

130
00:06:44,479 --> 00:06:47,800
have

131
00:06:45,190 --> 00:06:50,980
application with<font color="#CCCCCC"> fifty</font><font color="#E5E5E5"> and point</font><font color="#CCCCCC"> fifty</font>

132
00:06:47,800 --> 00:06:53,500
rest<font color="#CCCCCC"> ish end points</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> the breast tissue</font>

133
00:06:50,980 --> 00:06:55,390
<font color="#CCCCCC">end point is like six</font><font color="#E5E5E5"> verbs or something</font>

134
00:06:53,500 --> 00:06:58,540
like<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can imagine that</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> this</font>

135
00:06:55,390 --> 00:07:02,289
decision<font color="#E5E5E5"> tree is massive</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is fairly</font>

136
00:06:58,540 --> 00:07:05,020
<font color="#E5E5E5">low</font><font color="#CCCCCC"> level</font><font color="#E5E5E5"> so you need to like</font><font color="#CCCCCC"> Oh check</font>

137
00:07:02,290 --> 00:07:08,350
everything manually do all checks on

138
00:07:05,020 --> 00:07:13,690
your own in code<font color="#E5E5E5"> and it doesn't</font><font color="#CCCCCC"> provide</font>

139
00:07:08,350 --> 00:07:16,990
structure or guidance and what I want<font color="#E5E5E5"> to</font>

140
00:07:13,690 --> 00:07:19,750
say with<font color="#CCCCCC"> that is that because everything</font>

141
00:07:16,990 --> 00:07:21,930
<font color="#CCCCCC">is web part</font><font color="#E5E5E5"> you can combine those web</font>

142
00:07:19,750 --> 00:07:26,620
parts in any possible<font color="#E5E5E5"> way</font><font color="#CCCCCC"> that exists</font>

143
00:07:21,930 --> 00:07:28,990
and because of<font color="#E5E5E5"> that it's really</font><font color="#CCCCCC"> easy to</font>

144
00:07:26,620 --> 00:07:31,960
<font color="#E5E5E5">make a</font><font color="#CCCCCC"> mistake so for example doing some</font>

145
00:07:28,990 --> 00:07:35,730
check<font color="#E5E5E5"> that takes time because</font><font color="#CCCCCC"> it calls</font>

146
00:07:31,960 --> 00:07:38,200
to<font color="#E5E5E5"> database in some place oh this is you</font>

147
00:07:35,730 --> 00:07:40,000
accidentally plugged this check at the

148
00:07:38,200 --> 00:07:42,280
beginning of<font color="#E5E5E5"> your app of your decision</font>

149
00:07:40,000 --> 00:07:44,260
tree so it's running for every every

150
00:07:42,280 --> 00:07:47,890
<font color="#CCCCCC">possible path</font><font color="#E5E5E5"> in your application and</font>

151
00:07:44,260 --> 00:07:50,050
you didn't want to<font color="#CCCCCC"> do</font><font color="#E5E5E5"> that and this</font><font color="#CCCCCC"> is</font>

152
00:07:47,890 --> 00:07:52,750
huge problem especially<font color="#E5E5E5"> if new people</font><font color="#CCCCCC"> to</font>

153
00:07:50,050 --> 00:07:56,020
those two libraries suave and<font color="#E5E5E5"> giraffe</font>

154
00:07:52,750 --> 00:07:57,810
<font color="#CCCCCC">that it's kind of</font><font color="#E5E5E5"> difficult to to</font>

155
00:07:56,020 --> 00:08:01,000
<font color="#E5E5E5">explain them how they need to</font><font color="#CCCCCC"> combine</font>

156
00:07:57,810 --> 00:08:03,370
<font color="#E5E5E5">those web parts so they create actually</font>

157
00:08:01,000 --> 00:08:07,450
efficient applications and don't make

158
00:08:03,370 --> 00:08:10,110
mistakes<font color="#CCCCCC"> on the other hand on the other</font>

159
00:08:07,450 --> 00:08:14,080
<font color="#E5E5E5">part of the world we</font><font color="#CCCCCC"> have MVC pattern</font>

160
00:08:10,110 --> 00:08:17,470
and<font color="#CCCCCC"> VSIP pattern is lovely</font><font color="#E5E5E5"> it has some</font>

161
00:08:14,080 --> 00:08:19,750
model some classes it has<font color="#E5E5E5"> viewer</font>

162
00:08:17,470 --> 00:08:25,120
it has<font color="#E5E5E5"> viewer some more classes and</font>

163
00:08:19,750 --> 00:08:26,890
controller<font color="#E5E5E5"> classes classes classes</font><font color="#CCCCCC"> don't</font>

164
00:08:25,120 --> 00:08:28,870
get me wrong<font color="#E5E5E5"> like oh I mean I'm</font>

165
00:08:26,890 --> 00:08:31,570
functional programming developer<font color="#E5E5E5"> when I</font>

166
00:08:28,870 --> 00:08:35,260
see classes I'm kind of like this<font color="#E5E5E5"> gasps</font>

167
00:08:31,570 --> 00:08:38,049
but but MVC frameworks have<font color="#CCCCCC"> four very</font>

168
00:08:35,260 --> 00:08:39,669
<font color="#E5E5E5">good good parts and and I really like</font>

169
00:08:38,049 --> 00:08:42,909
some<font color="#E5E5E5"> of the MVC framework they are</font>

170
00:08:39,669 --> 00:08:44,350
really good<font color="#CCCCCC"> it's kind of</font><font color="#E5E5E5"> a model they</font>

171
00:08:42,909 --> 00:08:46,750
handle a lot<font color="#CCCCCC"> of stuff for</font><font color="#E5E5E5"> you you</font>

172
00:08:44,350 --> 00:08:49,540
<font color="#E5E5E5">usually</font><font color="#CCCCCC"> when you use</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> kind of</font>

173
00:08:46,750 --> 00:08:53,560
asp.net MVC Ruby on Rails whatever

174
00:08:49,540 --> 00:08:56,530
whatever<font color="#E5E5E5"> other MVC framework you</font><font color="#CCCCCC"> kind of</font>

175
00:08:53,560 --> 00:08:58,030
<font color="#CCCCCC">just most of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> time you spend writing</font>

176
00:08:56,530 --> 00:09:00,850
<font color="#E5E5E5">your actual business curve</font>

177
00:08:58,030 --> 00:09:05,050
and not modeling<font color="#E5E5E5"> your decision</font><font color="#CCCCCC"> tree</font>

178
00:09:00,850 --> 00:09:07,990
<font color="#E5E5E5">about</font><font color="#CCCCCC"> webserver and paths of the</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> it</font>

179
00:09:05,050 --> 00:09:13,150
provides structure<font color="#E5E5E5"> so</font><font color="#CCCCCC"> oh if you</font><font color="#E5E5E5"> want to</font>

180
00:09:07,990 --> 00:09:15,700
to add new view you exactly<font color="#E5E5E5"> know what</font><font color="#CCCCCC"> to</font>

181
00:09:13,150 --> 00:09:18,640
do you click new generate new<font color="#E5E5E5"> controller</font>

182
00:09:15,700 --> 00:09:20,530
individual student it on the Ruby<font color="#E5E5E5"> on</font>

183
00:09:18,640 --> 00:09:23,410
rice you<font color="#E5E5E5"> ran something from the</font><font color="#CCCCCC"> comment</font>

184
00:09:20,530 --> 00:09:25,900
<font color="#CCCCCC">line and because it provides</font><font color="#E5E5E5"> structure</font>

185
00:09:23,410 --> 00:09:28,870
<font color="#E5E5E5">and everything</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> like maybe</font><font color="#CCCCCC"> convention</font>

186
00:09:25,900 --> 00:09:31,439
<font color="#CCCCCC">biased maybe but even if it's</font><font color="#E5E5E5"> not really</font>

187
00:09:28,870 --> 00:09:34,270
convention<font color="#E5E5E5"> based there is still some</font>

188
00:09:31,440 --> 00:09:35,950
structured way of building your

189
00:09:34,270 --> 00:09:37,480
application it's really easy to<font color="#E5E5E5"> build</font>

190
00:09:35,950 --> 00:09:41,650
<font color="#E5E5E5">doing about that</font>

191
00:09:37,480 --> 00:09:44,050
<font color="#CCCCCC">I have also</font><font color="#E5E5E5"> like I talked</font><font color="#CCCCCC"> about web</font>

192
00:09:41,650 --> 00:09:47,100
programming<font color="#CCCCCC"> inertia but</font><font color="#E5E5E5"> also I tell a</font>

193
00:09:44,050 --> 00:09:51,510
lot about<font color="#E5E5E5"> building developer tooling and</font>

194
00:09:47,100 --> 00:09:54,250
this is like very important point<font color="#E5E5E5"> for me</font>

195
00:09:51,510 --> 00:09:57,700
but MVC frameworks have their problems

196
00:09:54,250 --> 00:10:01,140
<font color="#CCCCCC">if there were problem list I wouldn't</font>

197
00:09:57,700 --> 00:10:04,090
<font color="#CCCCCC">stand here and talk some silly stuff</font><font color="#E5E5E5"> so</font>

198
00:10:01,140 --> 00:10:06,100
my main problem<font color="#E5E5E5"> with MVC framework is</font>

199
00:10:04,090 --> 00:10:08,410
that<font color="#E5E5E5"> is that it's usually really</font>

200
00:10:06,100 --> 00:10:10,660
difficult to fall back to<font color="#CCCCCC"> lower level if</font>

201
00:10:08,410 --> 00:10:13,689
the magic fails if the magic of the

202
00:10:10,660 --> 00:10:14,949
framework fails<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> really hard to do</font>

203
00:10:13,690 --> 00:10:18,520
something<font color="#CCCCCC"> with that</font>

204
00:10:14,950 --> 00:10:20,200
so in asp.net it's like over<font color="#CCCCCC"> like</font>

205
00:10:18,520 --> 00:10:22,720
implementing some interfaces<font color="#E5E5E5"> that only</font>

206
00:10:20,200 --> 00:10:27,130
asp.net team understands<font color="#E5E5E5"> and stuff like</font>

207
00:10:22,720 --> 00:10:30,220
that<font color="#CCCCCC"> too</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> magic so magic is good</font>

208
00:10:27,130 --> 00:10:33,010
like well maybe<font color="#E5E5E5"> otherwise handling stuff</font>

209
00:10:30,220 --> 00:10:36,580
for the users is good but magic that's

210
00:10:33,010 --> 00:10:38,980
not extendable<font color="#E5E5E5"> and not not really easy</font>

211
00:10:36,580 --> 00:10:42,430
<font color="#CCCCCC">to understand is bad so stuff like</font>

212
00:10:38,980 --> 00:10:47,800
attributes in asp.net MVC where you can

213
00:10:42,430 --> 00:10:49,660
only use<font color="#E5E5E5"> reflection to have to up to</font><font color="#CCCCCC"> get</font>

214
00:10:47,800 --> 00:10:51,640
access<font color="#CCCCCC"> to them on the under like if</font>

215
00:10:49,660 --> 00:10:53,520
you're building<font color="#E5E5E5"> your frame</font><font color="#CCCCCC"> or extension</font>

216
00:10:51,640 --> 00:10:55,930
to the framework<font color="#CCCCCC"> this is this is bad</font>

217
00:10:53,520 --> 00:10:57,490
conventions<font color="#E5E5E5"> they may be good they may be</font>

218
00:10:55,930 --> 00:10:59,469
bad but<font color="#E5E5E5"> if they are failing that</font>

219
00:10:57,490 --> 00:11:03,370
something may go wrong<font color="#CCCCCC"> and of course</font>

220
00:10:59,470 --> 00:11:08,710
classes yeah you know so the<font color="#CCCCCC"> question is</font>

221
00:11:03,370 --> 00:11:11,900
can<font color="#CCCCCC"> we do better</font><font color="#E5E5E5"> and I guess yes we can</font>

222
00:11:08,710 --> 00:11:16,280
so<font color="#E5E5E5"> imagine this ideal world</font>

223
00:11:11,900 --> 00:11:18,500
where we will follow some kind<font color="#E5E5E5"> of</font>

224
00:11:16,280 --> 00:11:20,810
functional<font color="#CCCCCC"> programming principles with</font>

225
00:11:18,500 --> 00:11:24,200
bit of pragmatism because like I'm a

226
00:11:20,810 --> 00:11:28,790
from developer so I like pragmatic

227
00:11:24,200 --> 00:11:32,420
choice<font color="#CCCCCC"> I make pragmatic choices so model</font>

228
00:11:28,790 --> 00:11:34,730
is immutable model with sharp<font color="#CCCCCC"> records of</font>

229
00:11:32,420 --> 00:11:36,620
discriminated unions and some<font color="#E5E5E5"> set of</font>

230
00:11:34,730 --> 00:11:38,330
pure functions that<font color="#E5E5E5"> operates on this</font>

231
00:11:36,620 --> 00:11:42,020
model<font color="#E5E5E5"> or maybe not</font><font color="#CCCCCC"> so pure because</font><font color="#E5E5E5"> they</font>

232
00:11:38,330 --> 00:11:44,090
can do<font color="#CCCCCC"> logins and stuff</font><font color="#E5E5E5"> view view is a</font>

233
00:11:42,020 --> 00:11:47,900
function that<font color="#E5E5E5"> takes model and and</font>

234
00:11:44,090 --> 00:11:51,890
returns some output 'html<font color="#CCCCCC"> json</font><font color="#E5E5E5"> whatever</font>

235
00:11:47,900 --> 00:11:53,660
view actually in this idealistic model

236
00:11:51,890 --> 00:11:55,730
is<font color="#E5E5E5"> kind of like if you</font><font color="#CCCCCC"> were on my talk</font>

237
00:11:53,660 --> 00:12:00,230
in the morning<font color="#CCCCCC"> I was</font><font color="#E5E5E5"> talking about</font><font color="#CCCCCC"> Model</font>

238
00:11:55,730 --> 00:12:02,270
<font color="#CCCCCC">View</font><font color="#E5E5E5"> update pattern and then view in</font>

239
00:12:00,230 --> 00:12:04,070
this model of you update pattern look

240
00:12:02,270 --> 00:12:05,720
exactly like the view here so<font color="#E5E5E5"> it was a</font>

241
00:12:04,070 --> 00:12:08,620
<font color="#E5E5E5">function that</font><font color="#CCCCCC"> takes model and and</font>

242
00:12:05,720 --> 00:12:11,330
<font color="#E5E5E5">outputs stuff and then controller is a</font>

243
00:12:08,620 --> 00:12:13,400
it's a function that takes set of

244
00:12:11,330 --> 00:12:17,060
handlers and<font color="#E5E5E5"> puts them together into</font>

245
00:12:13,400 --> 00:12:20,660
<font color="#E5E5E5">some kind</font><font color="#CCCCCC"> of opinionated</font><font color="#E5E5E5"> routine or</font>

246
00:12:17,060 --> 00:12:26,089
something like<font color="#E5E5E5"> that yeah and here I want</font>

247
00:12:20,660 --> 00:12:27,980
<font color="#CCCCCC">to okay I've missed</font><font color="#E5E5E5"> one thing and we see</font>

248
00:12:26,090 --> 00:12:32,450
<font color="#CCCCCC">from yourself one more problem really</font>

249
00:12:27,980 --> 00:12:34,850
<font color="#E5E5E5">important I mean is p.net</font>

250
00:12:32,450 --> 00:12:37,190
MVC is braced frame work especially<font color="#E5E5E5"> ESP</font>

251
00:12:34,850 --> 00:12:41,630
didn't<font color="#CCCCCC"> call but it's kind of</font><font color="#E5E5E5"> like built</font>

252
00:12:37,190 --> 00:12:44,660
with c-sharp in mind<font color="#E5E5E5"> and as a</font><font color="#CCCCCC"> developer</font>

253
00:12:41,630 --> 00:12:46,760
<font color="#E5E5E5">I'm not really</font><font color="#CCCCCC"> fond of fun of that</font>

254
00:12:44,660 --> 00:12:48,500
I mean it's usable from<font color="#CCCCCC"> f-sharp but it's</font>

255
00:12:46,760 --> 00:12:52,610
just not<font color="#E5E5E5"> really idiomatic a shop</font>

256
00:12:48,500 --> 00:12:55,820
<font color="#E5E5E5">experience so Saturn Saturn is a absurd</font>

257
00:12:52,610 --> 00:12:57,650
web framework that we've created<font color="#CCCCCC"> it's</font>

258
00:12:55,820 --> 00:12:59,720
built<font color="#E5E5E5"> on</font><font color="#CCCCCC"> top of giraffe one of those</font>

259
00:12:57,650 --> 00:13:02,569
<font color="#CCCCCC">libraries</font><font color="#E5E5E5"> I've mentioned before and</font><font color="#CCCCCC"> that</font>

260
00:12:59,720 --> 00:13:05,210
<font color="#CCCCCC">really</font><font color="#E5E5E5"> important point</font><font color="#CCCCCC"> as a result is</font>

261
00:13:02,570 --> 00:13:11,720
built on<font color="#E5E5E5"> top of asp.net core which means</font>

262
00:13:05,210 --> 00:13:14,720
<font color="#CCCCCC">that you get all</font><font color="#E5E5E5"> great performance fixes</font>

263
00:13:11,720 --> 00:13:17,480
<font color="#E5E5E5">that are accessible thanks to a speed-up</font>

264
00:13:14,720 --> 00:13:22,700
<font color="#E5E5E5">not core</font><font color="#CCCCCC"> like Kestrel is like</font><font color="#E5E5E5"> crazily</font>

265
00:13:17,480 --> 00:13:24,920
fast<font color="#E5E5E5"> and actually giraffe and Saturn in</font>

266
00:13:22,700 --> 00:13:25,620
<font color="#CCCCCC">benchmarks are faster than MVC which</font>

267
00:13:24,920 --> 00:13:27,569
means that

268
00:13:25,620 --> 00:13:29,940
okay that's that's fast enough<font color="#CCCCCC"> for most</font>

269
00:13:27,570 --> 00:13:33,330
applications<font color="#CCCCCC"> it</font><font color="#E5E5E5"> integrates well with</font>

270
00:13:29,940 --> 00:13:35,430
existing ecosystems so of course<font color="#E5E5E5"> asp.net</font>

271
00:13:33,330 --> 00:13:38,760
MVC is not only stuff provided by

272
00:13:35,430 --> 00:13:42,329
Microsoft<font color="#E5E5E5"> it's also a huge set of</font>

273
00:13:38,760 --> 00:13:45,150
<font color="#E5E5E5">third-party libraries things like Google</font>

274
00:13:42,330 --> 00:13:51,029
or<font color="#E5E5E5"> alpha authentication as identity</font>

275
00:13:45,150 --> 00:13:54,150
<font color="#CCCCCC">servers and all these things it tries to</font>

276
00:13:51,029 --> 00:13:56,790
provide<font color="#E5E5E5"> to link for example scaffolding</font>

277
00:13:54,150 --> 00:13:59,040
<font color="#CCCCCC">tooling diagnostic tooling</font><font color="#E5E5E5"> the bugging</font>

278
00:13:56,790 --> 00:14:01,500
additional debugging<font color="#CCCCCC"> tool Inc this is</font>

279
00:13:59,040 --> 00:14:05,579
mostly work in progress but as I've

280
00:14:01,500 --> 00:14:07,589
mentioned<font color="#E5E5E5"> I care about tooling</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> so</font>

281
00:14:05,580 --> 00:14:12,330
yes<font color="#E5E5E5"> that's definitely something we we</font>

282
00:14:07,589 --> 00:14:14,250
focus<font color="#E5E5E5"> on it provides sets of</font><font color="#CCCCCC"> high-level</font>

283
00:14:12,330 --> 00:14:15,480
<font color="#CCCCCC">abstractions</font><font color="#E5E5E5"> that I will present in a</font>

284
00:14:14,250 --> 00:14:18,960
moment

285
00:14:15,480 --> 00:14:20,940
but at the same time it really<font color="#CCCCCC"> easily</font>

286
00:14:18,960 --> 00:14:24,290
allows<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to fall back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> this lower</font>

287
00:14:20,940 --> 00:14:26,940
level<font color="#E5E5E5"> of just putting web parts together</font>

288
00:14:24,290 --> 00:14:29,099
<font color="#E5E5E5">because the interesting fact about those</font>

289
00:14:26,940 --> 00:14:31,529
<font color="#E5E5E5">high level abstractions</font><font color="#CCCCCC"> is that they are</font>

290
00:14:29,100 --> 00:14:35,310
not really abstraction in an

291
00:14:31,529 --> 00:14:38,670
understanding of like some class or

292
00:14:35,310 --> 00:14:40,319
<font color="#E5E5E5">whatever above those</font><font color="#CCCCCC"> high level building</font>

293
00:14:38,670 --> 00:14:44,160
blocks that<font color="#CCCCCC"> I will show in a moment</font>

294
00:14:40,320 --> 00:14:49,010
actually all compiles down or<font color="#E5E5E5"> transforms</font>

295
00:14:44,160 --> 00:14:51,300
down to the to the same web part

296
00:14:49,010 --> 00:14:53,790
<font color="#E5E5E5">abstraction</font><font color="#CCCCCC"> that I was</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> before so</font>

297
00:14:51,300 --> 00:14:58,099
so that's<font color="#E5E5E5"> really very good and I</font><font color="#CCCCCC"> will</font>

298
00:14:53,790 --> 00:15:00,990
explain that<font color="#CCCCCC"> in a moment</font><font color="#E5E5E5"> so first of all</font>

299
00:14:58,100 --> 00:15:03,540
<font color="#E5E5E5">Saturn as I've mentioned has access to</font>

300
00:15:00,990 --> 00:15:06,180
normal<font color="#E5E5E5"> to the rest of the ecosystem</font>

301
00:15:03,540 --> 00:15:09,569
<font color="#CCCCCC">especially it has access to all features</font>

302
00:15:06,180 --> 00:15:13,770
<font color="#CCCCCC">that gif provides and JIRA provides very</font>

303
00:15:09,570 --> 00:15:16,920
huge<font color="#E5E5E5"> set up set of HTTP handlers web</font>

304
00:15:13,770 --> 00:15:19,620
parts that can do different things<font color="#E5E5E5"> for</font>

305
00:15:16,920 --> 00:15:22,079
<font color="#CCCCCC">example write</font><font color="#E5E5E5"> JSON and things like that</font>

306
00:15:19,620 --> 00:15:24,390
<font color="#E5E5E5">this is again not</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> into details we</font>

307
00:15:22,080 --> 00:15:30,180
don't<font color="#CCCCCC"> have time</font><font color="#E5E5E5"> for details</font><font color="#CCCCCC"> but that's</font>

308
00:15:24,390 --> 00:15:33,180
just like overview so so yes this access

309
00:15:30,180 --> 00:15:35,370
to<font color="#CCCCCC"> their to the old stuff</font><font color="#E5E5E5"> secondly there</font>

310
00:15:33,180 --> 00:15:35,939
is<font color="#E5E5E5"> first first abstraction</font><font color="#CCCCCC"> that I've</font>

311
00:15:35,370 --> 00:15:38,910
created

312
00:15:35,940 --> 00:15:43,170
it's called pipeline

313
00:15:38,910 --> 00:15:46,380
and another point<font color="#E5E5E5"> but every abstraction</font>

314
00:15:43,170 --> 00:15:49,620
<font color="#E5E5E5">I will introduce in in</font><font color="#CCCCCC"> Shiro in in a</font>

315
00:15:46,380 --> 00:15:51,530
moment<font color="#CCCCCC"> is</font><font color="#E5E5E5"> using a feature of</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> shop</font>

316
00:15:49,620 --> 00:15:54,210
called<font color="#E5E5E5"> computation expression</font>

317
00:15:51,530 --> 00:16:00,600
computation expressions originally were

318
00:15:54,210 --> 00:16:03,030
used for modeling a think await in in F

319
00:16:00,600 --> 00:16:05,340
sharp<font color="#E5E5E5"> in a bit different</font><font color="#CCCCCC"> widened</font><font color="#E5E5E5"> then</font>

320
00:16:03,030 --> 00:16:06,350
async/await is modeled in C<font color="#CCCCCC"> sharp or in</font>

321
00:16:05,340 --> 00:16:09,360
typescript

322
00:16:06,350 --> 00:16:12,240
<font color="#E5E5E5">but</font><font color="#CCCCCC"> they were like way more</font><font color="#E5E5E5"> than</font><font color="#CCCCCC"> just</font>

323
00:16:09,360 --> 00:16:14,070
that<font color="#CCCCCC"> rigidly computation expressions and</font>

324
00:16:12,240 --> 00:16:17,780
computation expression is<font color="#E5E5E5"> this name and</font>

325
00:16:14,070 --> 00:16:20,790
the scroll braces and<font color="#E5E5E5"> the code between</font>

326
00:16:17,780 --> 00:16:23,810
so computation expressions<font color="#CCCCCC"> change a why</font>

327
00:16:20,790 --> 00:16:26,160
this code between is executed in a sharp

328
00:16:23,810 --> 00:16:30,930
what is bit<font color="#CCCCCC"> Wow</font>

329
00:16:26,160 --> 00:16:32,280
that was difficult to<font color="#E5E5E5"> say what what's</font>

330
00:16:30,930 --> 00:16:35,040
<font color="#E5E5E5">really important about that is they</font>

331
00:16:32,280 --> 00:16:37,949
allow you not<font color="#CCCCCC"> only to create</font><font color="#E5E5E5"> stuff like</font>

332
00:16:35,040 --> 00:16:41,280
<font color="#CCCCCC">async await</font><font color="#E5E5E5"> or promises in in in</font>

333
00:16:37,950 --> 00:16:43,620
JavaScript but they also basically<font color="#E5E5E5"> using</font>

334
00:16:41,280 --> 00:16:46,410
<font color="#E5E5E5">couple of tricks let us to create really</font>

335
00:16:43,620 --> 00:16:50,250
nice<font color="#CCCCCC"> custom domain specific language</font>

336
00:16:46,410 --> 00:16:53,189
<font color="#E5E5E5">inside our language inside F sharp so</font>

337
00:16:50,250 --> 00:16:55,470
here all<font color="#CCCCCC"> the stuff that's</font><font color="#E5E5E5"> like first</font>

338
00:16:53,190 --> 00:16:59,130
third<font color="#E5E5E5"> part so set headers that</font><font color="#CCCCCC"> header</font>

339
00:16:55,470 --> 00:17:01,170
plug<font color="#E5E5E5"> those are custom key words of the</font>

340
00:16:59,130 --> 00:17:03,030
<font color="#CCCCCC">language that are</font><font color="#E5E5E5"> available only in</font>

341
00:17:01,170 --> 00:17:06,409
context of<font color="#E5E5E5"> this computation expression</font>

342
00:17:03,030 --> 00:17:11,189
basically<font color="#E5E5E5"> you can treat them as a custom</font>

343
00:17:06,410 --> 00:17:13,589
functions<font color="#CCCCCC"> what</font><font color="#E5E5E5"> what this what my</font>

344
00:17:11,189 --> 00:17:18,600
computation expression do is they

345
00:17:13,589 --> 00:17:20,819
execute<font color="#E5E5E5"> keyword after keyword with</font>

346
00:17:18,599 --> 00:17:23,069
parameters that were passed<font color="#E5E5E5"> to it and</font>

347
00:17:20,819 --> 00:17:26,010
then they build some<font color="#E5E5E5"> internal state of</font>

348
00:17:23,069 --> 00:17:29,670
<font color="#E5E5E5">this operation</font><font color="#CCCCCC"> and then they transform</font>

349
00:17:26,010 --> 00:17:32,690
it down to the<font color="#E5E5E5"> word part web part HTTP</font>

350
00:17:29,670 --> 00:17:36,180
handler that<font color="#CCCCCC"> I've mentioned before so</font>

351
00:17:32,690 --> 00:17:39,420
additionally to disturb<font color="#CCCCCC"> that giraffe</font>

352
00:17:36,180 --> 00:17:42,810
provides<font color="#E5E5E5"> out of the box we also provide</font>

353
00:17:39,420 --> 00:17:44,790
really huge set<font color="#CCCCCC"> of those custom</font><font color="#E5E5E5"> key</font>

354
00:17:42,810 --> 00:17:47,429
<font color="#E5E5E5">words like</font><font color="#CCCCCC"> set header set header set</font>

355
00:17:44,790 --> 00:17:50,370
cookie content and like<font color="#E5E5E5"> oh</font><font color="#CCCCCC"> all like they</font>

356
00:17:47,430 --> 00:17:52,559
were just like<font color="#E5E5E5"> 60</font><font color="#CCCCCC"> or 70 helper functions</font>

357
00:17:50,370 --> 00:17:55,289
<font color="#E5E5E5">whatever</font>

358
00:17:52,559 --> 00:17:58,020
the second part is the<font color="#E5E5E5"> second</font>

359
00:17:55,289 --> 00:18:00,658
abstraction<font color="#E5E5E5"> that we've introduced is</font>

360
00:17:58,020 --> 00:18:03,750
router abstraction<font color="#CCCCCC"> and throughout our</font><font color="#E5E5E5"> as</font>

361
00:18:00,659 --> 00:18:08,070
name suggests it's it's it's taking care

362
00:18:03,750 --> 00:18:10,740
<font color="#E5E5E5">of the routing</font><font color="#CCCCCC"> of your application here</font>

363
00:18:08,070 --> 00:18:13,289
the important part is<font color="#CCCCCC"> that in giraffe in</font>

364
00:18:10,740 --> 00:18:18,360
this decision tree sample I've shown

365
00:18:13,289 --> 00:18:20,490
briefly<font color="#E5E5E5"> the thing that that's happening</font>

366
00:18:18,360 --> 00:18:24,750
<font color="#CCCCCC">here so does like my pipelines and</font><font color="#E5E5E5"> the</font>

367
00:18:20,490 --> 00:18:27,510
<font color="#CCCCCC">routing was mixed here in in Saturn we</font>

368
00:18:24,750 --> 00:18:29,460
decided to split those those<font color="#E5E5E5"> two things</font>

369
00:18:27,510 --> 00:18:31,280
<font color="#E5E5E5">into</font><font color="#CCCCCC"> two separate abstractions because I</font>

370
00:18:29,460 --> 00:18:35,159
believe that<font color="#CCCCCC"> those are two</font><font color="#E5E5E5"> separate</font>

371
00:18:31,280 --> 00:18:39,418
<font color="#CCCCCC">things to take care and not necessarily</font>

372
00:18:35,159 --> 00:18:41,159
<font color="#E5E5E5">mix them together randomly</font><font color="#CCCCCC"> so I guess</font>

373
00:18:39,419 --> 00:18:43,200
<font color="#E5E5E5">that's the simplest abstraction is just</font>

374
00:18:41,159 --> 00:18:47,059
<font color="#CCCCCC">ordered there are those custom keywords</font>

375
00:18:43,200 --> 00:18:50,880
forget post put so on so and so on

376
00:18:47,059 --> 00:18:53,940
they take<font color="#CCCCCC"> paths or paths with format</font>

377
00:18:50,880 --> 00:18:57,840
with parameter and and then they execute

378
00:18:53,940 --> 00:19:01,950
some kind of web handler<font color="#CCCCCC"> and of course</font>

379
00:18:57,840 --> 00:19:04,110
<font color="#E5E5E5">the nice thing is that everything is</font>

380
00:19:01,950 --> 00:19:06,750
composable so I<font color="#E5E5E5"> can have second route</font>

381
00:19:04,110 --> 00:19:08,370
that's using my API rotor and some

382
00:19:06,750 --> 00:19:12,049
browser<font color="#E5E5E5"> tutor that's not here but you</font>

383
00:19:08,370 --> 00:19:15,689
<font color="#CCCCCC">can imagine that</font><font color="#E5E5E5"> it looks similar and</font>

384
00:19:12,049 --> 00:19:18,570
<font color="#CCCCCC">again this is compiled</font><font color="#E5E5E5"> down to the web</font>

385
00:19:15,690 --> 00:19:20,669
<font color="#E5E5E5">handler so you can imagine that you have</font>

386
00:19:18,570 --> 00:19:24,360
some<font color="#E5E5E5"> Rooter and then you use it</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> in</font>

387
00:19:20,669 --> 00:19:27,510
<font color="#E5E5E5">this abstraction</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> really need to</font>

388
00:19:24,360 --> 00:19:29,280
<font color="#E5E5E5">but it's not defined in one place but if</font>

389
00:19:27,510 --> 00:19:32,070
you need<font color="#E5E5E5"> to have this composition you</font>

390
00:19:29,280 --> 00:19:36,950
<font color="#CCCCCC">can do that but you don't define all</font>

391
00:19:32,070 --> 00:19:39,928
those different<font color="#CCCCCC"> things in one place and</font>

392
00:19:36,950 --> 00:19:42,230
the third third field<font color="#E5E5E5"> further</font>

393
00:19:39,929 --> 00:19:44,820
<font color="#CCCCCC">abstraction is is highly opinionated</font>

394
00:19:42,230 --> 00:19:49,260
<font color="#E5E5E5">abstraction controller abstraction</font>

395
00:19:44,820 --> 00:19:55,260
that's used for<font color="#E5E5E5"> creating rest each kind</font>

396
00:19:49,260 --> 00:19:58,770
of controllers so index<font color="#CCCCCC"> action goes to</font>

397
00:19:55,260 --> 00:20:03,500
this get<font color="#CCCCCC"> request for the slash and</font>

398
00:19:58,770 --> 00:20:06,150
should<font color="#E5E5E5"> return the list of all elements</font>

399
00:20:03,500 --> 00:20:09,960
<font color="#E5E5E5">so action goes to</font>

400
00:20:06,150 --> 00:20:12,900
<font color="#CCCCCC">/id</font><font color="#E5E5E5"> and it's get</font><font color="#CCCCCC"> requests</font><font color="#E5E5E5"> and it should</font>

401
00:20:09,960 --> 00:20:17,550
display<font color="#E5E5E5"> the single element it's kind of</font>

402
00:20:12,900 --> 00:20:19,650
following this like<font color="#E5E5E5"> rest convention</font><font color="#CCCCCC"> so</font>

403
00:20:17,550 --> 00:20:22,500
there is whole set of those index<font color="#E5E5E5"> that</font>

404
00:20:19,650 --> 00:20:24,930
show<font color="#E5E5E5"> edit and other other functions that</font>

405
00:20:22,500 --> 00:20:26,760
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can implement what it does it under</font>

406
00:20:24,930 --> 00:20:29,970
the hood<font color="#E5E5E5"> automatically creates all the</font>

407
00:20:26,760 --> 00:20:34,350
routing for you so it<font color="#E5E5E5"> enables you to</font>

408
00:20:29,970 --> 00:20:36,750
just start<font color="#CCCCCC"> writing code</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> often</font>

409
00:20:34,350 --> 00:20:39,060
especially<font color="#E5E5E5"> football includes line of</font>

410
00:20:36,750 --> 00:20:40,470
business applications<font color="#E5E5E5"> we just create</font>

411
00:20:39,060 --> 00:20:44,190
rest<font color="#CCCCCC"> endpoints</font>

412
00:20:40,470 --> 00:20:46,740
that's what<font color="#E5E5E5"> asp.net MVC tooling is about</font>

413
00:20:44,190 --> 00:20:48,570
with scaffolding controllers that<font color="#CCCCCC"> watch</font>

414
00:20:46,740 --> 00:20:50,580
Ruby on Rails doing is about<font color="#E5E5E5"> about</font>

415
00:20:48,570 --> 00:20:53,629
scaffolding controllers<font color="#E5E5E5"> and here we have</font>

416
00:20:50,580 --> 00:20:56,850
<font color="#E5E5E5">just some small abstraction that that</font>

417
00:20:53,630 --> 00:20:58,800
takes<font color="#CCCCCC"> away from</font><font color="#E5E5E5"> you any decisions that</font>

418
00:20:56,850 --> 00:21:03,149
<font color="#E5E5E5">you make about</font><font color="#CCCCCC"> who</font><font color="#E5E5E5"> think you just do the</font>

419
00:20:58,800 --> 00:21:07,020
stuff<font color="#E5E5E5"> it also has some advanced features</font>

420
00:21:03,150 --> 00:21:08,880
<font color="#E5E5E5">especially something called sub</font>

421
00:21:07,020 --> 00:21:10,920
controllers so putting two controllers

422
00:21:08,880 --> 00:21:12,900
<font color="#E5E5E5">together because you can imagine in</font>

423
00:21:10,920 --> 00:21:16,560
normal<font color="#CCCCCC"> arrest case you have first</font>

424
00:21:12,900 --> 00:21:19,080
controller that<font color="#E5E5E5"> returns blog post and so</font>

425
00:21:16,560 --> 00:21:25,770
if you want to<font color="#CCCCCC"> go to particular</font><font color="#E5E5E5"> blog</font>

426
00:21:19,080 --> 00:21:28,199
post<font color="#CCCCCC"> it's blogs /id</font><font color="#E5E5E5"> one and then on the</font>

427
00:21:25,770 --> 00:21:32,129
slash comments<font color="#E5E5E5"> you can have comments for</font>

428
00:21:28,200 --> 00:21:33,720
this<font color="#E5E5E5"> for this particular post this is</font>

429
00:21:32,130 --> 00:21:36,990
again following<font color="#CCCCCC"> the normal normal</font>

430
00:21:33,720 --> 00:21:40,320
typical<font color="#E5E5E5"> restitch convention second thing</font>

431
00:21:36,990 --> 00:21:43,260
is the automatic versioning<font color="#CCCCCC"> that's built</font>

432
00:21:40,320 --> 00:21:46,050
in in framework so versioning is really

433
00:21:43,260 --> 00:21:47,670
hard<font color="#E5E5E5"> hard thing</font><font color="#CCCCCC"> to do troy</font><font color="#E5E5E5"> hunt has</font>

434
00:21:46,050 --> 00:21:52,440
written really<font color="#E5E5E5"> good article about</font>

435
00:21:47,670 --> 00:21:55,170
<font color="#E5E5E5">versioning of your HTTP at points where</font>

436
00:21:52,440 --> 00:22:00,060
he says that<font color="#CCCCCC"> oh there</font><font color="#E5E5E5"> are three</font><font color="#CCCCCC"> possible</font>

437
00:21:55,170 --> 00:22:03,360
options<font color="#E5E5E5"> and all</font><font color="#CCCCCC"> three sucks</font><font color="#E5E5E5"> so so yeah</font>

438
00:22:00,060 --> 00:22:08,300
versioning is hard<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is using</font><font color="#CCCCCC"> for</font>

439
00:22:03,360 --> 00:22:10,860
versioning<font color="#E5E5E5"> special header field in</font>

440
00:22:08,300 --> 00:22:14,310
<font color="#CCCCCC">request header and</font><font color="#E5E5E5"> it's checking whether</font>

441
00:22:10,860 --> 00:22:16,740
this field is equals<font color="#CCCCCC"> one</font><font color="#E5E5E5"> it has</font>

442
00:22:14,310 --> 00:22:19,950
something<font color="#E5E5E5"> called plugs which allows you</font>

443
00:22:16,740 --> 00:22:23,940
<font color="#CCCCCC">to plug particular action</font><font color="#E5E5E5"> for</font>

444
00:22:19,950 --> 00:22:26,610
some subset of the actions<font color="#E5E5E5"> and this is</font>

445
00:22:23,940 --> 00:22:31,050
trying<font color="#E5E5E5"> to</font><font color="#CCCCCC"> replace</font><font color="#E5E5E5"> staff that in asp.net</font>

446
00:22:26,610 --> 00:22:33,560
MVC you get from attributes so for

447
00:22:31,050 --> 00:22:36,810
example when you have asp.net MVC

448
00:22:33,560 --> 00:22:40,649
controller<font color="#E5E5E5"> and you want to have</font>

449
00:22:36,810 --> 00:22:42,000
authentication<font color="#E5E5E5"> only on on some actions</font>

450
00:22:40,650 --> 00:22:44,430
from this controller you put some

451
00:22:42,000 --> 00:22:47,520
magical attribute<font color="#E5E5E5"> and this is basically</font>

452
00:22:44,430 --> 00:22:49,860
<font color="#E5E5E5">trying to achieve similar</font><font color="#CCCCCC"> mechanics but</font>

453
00:22:47,520 --> 00:22:53,730
more general<font color="#E5E5E5"> without magic of the</font>

454
00:22:49,860 --> 00:22:56,490
attributes<font color="#CCCCCC"> and there are a</font><font color="#E5E5E5"> couple of</font>

455
00:22:53,730 --> 00:22:58,980
<font color="#E5E5E5">more controller features so yes there is</font>

456
00:22:56,490 --> 00:23:03,870
<font color="#E5E5E5">it basically</font><font color="#CCCCCC"> generated optionally</font>

457
00:22:58,980 --> 00:23:06,270
<font color="#E5E5E5">routing in the</font><font color="#CCCCCC"> res dish style it has not</font>

458
00:23:03,870 --> 00:23:09,479
<font color="#E5E5E5">fountain error handlers so not found is</font>

459
00:23:06,270 --> 00:23:12,120
executed one when path is not found<font color="#E5E5E5"> and</font>

460
00:23:09,480 --> 00:23:14,250
every one hundred hundred is executed

461
00:23:12,120 --> 00:23:16,770
when the action your implementation

462
00:23:14,250 --> 00:23:21,090
<font color="#CCCCCC">throws unhandled exception so this is a</font>

463
00:23:16,770 --> 00:23:22,740
way<font color="#CCCCCC"> to kind of add general</font><font color="#E5E5E5"> exception</font>

464
00:23:21,090 --> 00:23:25,409
handler for your controller<font color="#CCCCCC"> if you</font>

465
00:23:22,740 --> 00:23:28,950
haven't handled exception correctly in

466
00:23:25,410 --> 00:23:31,950
in<font color="#E5E5E5"> your action</font><font color="#CCCCCC"> it has sapped introduced</font>

467
00:23:28,950 --> 00:23:36,120
as I mentioned plugs<font color="#CCCCCC"> it has automatic</font>

468
00:23:31,950 --> 00:23:38,280
conversions of data<font color="#E5E5E5"> so so here you see</font>

469
00:23:36,120 --> 00:23:40,860
<font color="#E5E5E5">that I</font><font color="#CCCCCC"> used</font><font color="#E5E5E5"> something</font><font color="#CCCCCC"> called control the</font>

470
00:23:38,280 --> 00:23:43,649
text and this is returning normal text

471
00:23:40,860 --> 00:23:45,659
and and it's and<font color="#E5E5E5"> sets the content</font>

472
00:23:43,650 --> 00:23:48,390
correctly<font color="#E5E5E5"> and things like that but</font><font color="#CCCCCC"> you</font>

473
00:23:45,660 --> 00:23:50,400
<font color="#E5E5E5">also with automatic conversions you can</font>

474
00:23:48,390 --> 00:23:52,050
just return this this part of text<font color="#E5E5E5"> and</font>

475
00:23:50,400 --> 00:23:54,330
it automatically will recognize<font color="#CCCCCC"> that</font>

476
00:23:52,050 --> 00:23:59,700
this<font color="#CCCCCC"> is string</font><font color="#E5E5E5"> so probably you wanted to</font>

477
00:23:54,330 --> 00:24:04,889
<font color="#E5E5E5">return this as a</font><font color="#CCCCCC"> Content text if</font><font color="#E5E5E5"> you</font>

478
00:23:59,700 --> 00:24:06,810
return<font color="#CCCCCC"> object C from</font><font color="#E5E5E5"> class or F sharp</font>

479
00:24:04,890 --> 00:24:10,590
record it will automatically try to

480
00:24:06,810 --> 00:24:13,919
serialize that to a<font color="#CCCCCC"> json or xml basing</font>

481
00:24:10,590 --> 00:24:16,949
on the<font color="#E5E5E5"> accept header of the request it's</font>

482
00:24:13,920 --> 00:24:18,960
super<font color="#E5E5E5"> versioning and it automatically</font>

483
00:24:16,950 --> 00:24:21,720
<font color="#E5E5E5">support dependency injection that</font>

484
00:24:18,960 --> 00:24:26,130
actually is working<font color="#E5E5E5"> progress so so</font><font color="#CCCCCC"> i'm</font>

485
00:24:21,720 --> 00:24:29,550
<font color="#E5E5E5">not going to show that in the last the</font>

486
00:24:26,130 --> 00:24:33,419
<font color="#CCCCCC">last the last obstruction is its</font>

487
00:24:29,550 --> 00:24:35,190
application<font color="#CCCCCC"> and with application</font>

488
00:24:33,419 --> 00:24:37,110
application is<font color="#E5E5E5"> different because it</font>

489
00:24:35,190 --> 00:24:38,190
doesn't compile to<font color="#CCCCCC"> web party it's not</font>

490
00:24:37,110 --> 00:24:40,769
really connected<font color="#CCCCCC"> to this like</font>

491
00:24:38,190 --> 00:24:42,779
<font color="#E5E5E5">programming model</font><font color="#CCCCCC"> that I've shown what I</font>

492
00:24:40,769 --> 00:24:45,330
try<font color="#CCCCCC"> to do if application is to replace</font>

493
00:24:42,779 --> 00:24:47,970
<font color="#E5E5E5">all the like imperative configuration of</font>

494
00:24:45,330 --> 00:24:51,029
<font color="#E5E5E5">asp.net MVC</font><font color="#CCCCCC"> if you've ever configured</font>

495
00:24:47,970 --> 00:24:52,259
asp.net MVC core application<font color="#E5E5E5"> now you</font>

496
00:24:51,029 --> 00:24:54,330
know you<font color="#E5E5E5"> are</font><font color="#CCCCCC"> we need</font><font color="#E5E5E5"> to register</font>

497
00:24:52,259 --> 00:24:57,929
services you need<font color="#E5E5E5"> to do something some</font>

498
00:24:54,330 --> 00:24:59,460
magic that<font color="#CCCCCC"> I don't really</font><font color="#E5E5E5"> understand</font><font color="#CCCCCC"> and</font>

499
00:24:57,929 --> 00:25:01,470
because I don't<font color="#CCCCCC"> really understand</font>

500
00:24:59,460 --> 00:25:04,559
I've written a framework that replies

501
00:25:01,470 --> 00:25:06,690
that<font color="#E5E5E5"> stuff so the application</font>

502
00:25:04,559 --> 00:25:10,289
<font color="#E5E5E5">computation expression that application</font>

503
00:25:06,690 --> 00:25:13,350
abstraction attempts<font color="#E5E5E5"> to replace all this</font>

504
00:25:10,289 --> 00:25:15,570
imperative<font color="#E5E5E5"> imperative configuration we</font>

505
00:25:13,350 --> 00:25:20,719
just feature flux basically feature of

506
00:25:15,570 --> 00:25:23,639
flux<font color="#E5E5E5"> saying oh I won't use zip zip zip</font>

507
00:25:20,720 --> 00:25:25,470
compression<font color="#CCCCCC"> so I just use this exhibit</font>

508
00:25:23,639 --> 00:25:27,719
impression and this is<font color="#CCCCCC"> enabled</font><font color="#E5E5E5"> on my</font>

509
00:25:25,470 --> 00:25:32,519
application<font color="#E5E5E5"> and then you run application</font>

510
00:25:27,720 --> 00:25:36,359
with just one line of<font color="#CCCCCC"> code what's going</font>

511
00:25:32,519 --> 00:25:39,600
to come to Saturn<font color="#E5E5E5"> first of all I want to</font>

512
00:25:36,359 --> 00:25:41,519
investigate and<font color="#CCCCCC"> rest actually pull</font>

513
00:25:39,600 --> 00:25:43,980
<font color="#E5E5E5">request with working</font><font color="#CCCCCC"> progress version of</font>

514
00:25:41,519 --> 00:25:46,499
that sock channels<font color="#E5E5E5"> which will be like</font>

515
00:25:43,980 --> 00:25:49,200
<font color="#CCCCCC">real-time web</font><font color="#E5E5E5"> sockets abstraction for</font>

516
00:25:46,499 --> 00:25:52,200
real-time communication<font color="#E5E5E5"> I want to add</font>

517
00:25:49,200 --> 00:25:55,499
some utilities for testing and<font color="#E5E5E5"> for</font>

518
00:25:52,200 --> 00:25:58,289
<font color="#E5E5E5">diagnostics and I</font><font color="#CCCCCC"> would as always focus</font>

519
00:25:55,499 --> 00:26:00,649
<font color="#E5E5E5">on</font><font color="#CCCCCC"> doing</font><font color="#E5E5E5"> and I need to</font><font color="#CCCCCC"> mention one one</font>

520
00:25:58,289 --> 00:26:04,799
more thing it's<font color="#E5E5E5"> it's called safe stock</font>

521
00:26:00,649 --> 00:26:07,969
safe stock is<font color="#E5E5E5"> about building full and to</font>

522
00:26:04,799 --> 00:26:10,710
end<font color="#CCCCCC"> f-sharp web</font><font color="#E5E5E5"> applications so using</font>

523
00:26:07,970 --> 00:26:13,499
<font color="#E5E5E5">f-sharp both on the back end</font><font color="#CCCCCC"> and on the</font>

524
00:26:10,710 --> 00:26:15,450
front<font color="#E5E5E5"> end on</font><font color="#CCCCCC"> the front end</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> Phi</font><font color="#E5E5E5"> ball</font>

525
00:26:13,499 --> 00:26:18,690
that I've presented<font color="#E5E5E5"> in the morning on</font>

526
00:26:15,450 --> 00:26:20,549
the back end<font color="#CCCCCC"> with Saturn or with giraffe</font>

527
00:26:18,690 --> 00:26:22,259
depending on what you<font color="#E5E5E5"> want to use the</font>

528
00:26:20,549 --> 00:26:25,470
acronym comes from Saturn are

529
00:26:22,259 --> 00:26:27,840
certifiable<font color="#CCCCCC"> l mesh yeah but you can</font>

530
00:26:25,470 --> 00:26:30,480
<font color="#E5E5E5">replace basically and it may be first</font>

531
00:26:27,840 --> 00:26:31,949
<font color="#E5E5E5">two part are really</font><font color="#CCCCCC"> easy to to being</font>

532
00:26:30,480 --> 00:26:34,950
replaceable

533
00:26:31,950 --> 00:26:38,369
it<font color="#CCCCCC"> focused on types of communication so</font>

534
00:26:34,950 --> 00:26:40,499
for example you define that your<font color="#E5E5E5"> server</font>

535
00:26:38,369 --> 00:26:42,830
returns integer and he automatically

536
00:26:40,499 --> 00:26:45,869
gets<font color="#E5E5E5"> client in the five ball generator</font>

537
00:26:42,830 --> 00:26:46,889
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> the end</font><font color="#E5E5E5"> point and it it</font><font color="#CCCCCC"> returns</font>

538
00:26:45,869 --> 00:26:48,720
integer

539
00:26:46,890 --> 00:26:51,770
focuses a lot on developer experience or

540
00:26:48,720 --> 00:26:55,950
additional<font color="#E5E5E5"> tooling dotnet</font><font color="#CCCCCC"> new templates</font>

541
00:26:51,770 --> 00:27:00,200
<font color="#E5E5E5">documentation and this initiative also</font>

542
00:26:55,950 --> 00:27:03,450
<font color="#E5E5E5">was originally created by the couple of</font>

543
00:27:00,200 --> 00:27:05,220
consulting companies<font color="#E5E5E5"> doing F sharps we</font>

544
00:27:03,450 --> 00:27:06,690
provide also<font color="#E5E5E5"> commercial commercial</font>

545
00:27:05,220 --> 00:27:09,240
<font color="#E5E5E5">support which i think is really</font>

546
00:27:06,690 --> 00:27:10,980
important factor in choosing the the

547
00:27:09,240 --> 00:27:15,570
<font color="#E5E5E5">technology for use in your business</font>

548
00:27:10,980 --> 00:27:19,309
product<font color="#CCCCCC"> those are the links</font><font color="#E5E5E5"> to the safe</font>

549
00:27:15,570 --> 00:27:23,250
<font color="#CCCCCC">stack and to the certain framework and</font>

550
00:27:19,309 --> 00:27:24,360
yes that<font color="#CCCCCC"> would be</font><font color="#E5E5E5"> all ask me anything</font>

551
00:27:23,250 --> 00:27:27,630
<font color="#CCCCCC">any questions do we have time for</font>

552
00:27:24,360 --> 00:27:30,809
questions<font color="#E5E5E5"> we don't probably so my name</font>

553
00:27:27,630 --> 00:27:34,260
was Chris you can find me<font color="#E5E5E5"> in all those</font>

554
00:27:30,809 --> 00:27:42,930
weird<font color="#CCCCCC"> places</font><font color="#E5E5E5"> and thank you</font>

555
00:27:34,260 --> 00:27:42,930
[Applause]

