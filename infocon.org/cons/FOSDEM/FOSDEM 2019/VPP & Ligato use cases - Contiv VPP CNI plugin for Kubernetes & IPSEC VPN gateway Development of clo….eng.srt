1
00:00:04,850 --> 00:00:09,980
<font color="#E5E5E5">okay thanks for that</font><font color="#CCCCCC"> rate welcome</font>

2
00:00:07,640 --> 00:00:11,809
everybody's on Giles<font color="#E5E5E5"> trust</font><font color="#CCCCCC"> oh I'm gonna</font>

3
00:00:09,980 --> 00:00:13,730
<font color="#E5E5E5">sort</font><font color="#CCCCCC"> through a few slides</font><font color="#E5E5E5"> giving an</font>

4
00:00:11,809 --> 00:00:14,940
overview of<font color="#CCCCCC"> VPP oh I</font><font color="#E5E5E5"> guess it's been</font>

5
00:00:13,730 --> 00:00:19,119
alluded<font color="#CCCCCC"> to</font>

6
00:00:14,940 --> 00:00:20,950
earlier about<font color="#E5E5E5"> BPF and</font><font color="#CCCCCC"> XDP talk about</font>

7
00:00:19,119 --> 00:00:23,560
vectors well the octave<font color="#E5E5E5"> you</font><font color="#CCCCCC"> are sort of</font>

8
00:00:20,950 --> 00:00:25,720
<font color="#CCCCCC">overview</font><font color="#E5E5E5"> of that</font><font color="#CCCCCC"> then raster is going to</font>

9
00:00:23,560 --> 00:00:28,869
go<font color="#E5E5E5"> into</font><font color="#CCCCCC"> conceived VPP which is a CNI</font>

10
00:00:25,720 --> 00:00:30,460
<font color="#CCCCCC">plug-in</font><font color="#E5E5E5"> that we built using VPP</font><font color="#CCCCCC"> where i</font>

11
00:00:28,869 --> 00:00:33,730
guess we're about<font color="#E5E5E5"> to disagree with</font>

12
00:00:30,460 --> 00:00:35,290
Chiara<font color="#CCCCCC"> on and</font><font color="#E5E5E5"> on think about using the</font>

13
00:00:33,730 --> 00:00:39,279
kernel<font color="#E5E5E5"> to connect containers sorry guys</font>

14
00:00:35,290 --> 00:00:42,339
know how he's keeping this<font color="#E5E5E5"> place</font><font color="#CCCCCC"> yeah</font>

15
00:00:39,280 --> 00:00:44,920
<font color="#E5E5E5">hey controversies all's good so</font><font color="#CCCCCC"> so what</font>

16
00:00:42,340 --> 00:00:47,980
is VPP<font color="#E5E5E5"> so we set the universal</font><font color="#CCCCCC"> data</font>

17
00:00:44,920 --> 00:00:49,510
<font color="#E5E5E5">plane and really you know history of</font>

18
00:00:47,980 --> 00:00:52,390
<font color="#E5E5E5">this sort of</font><font color="#CCCCCC"> Genesis</font><font color="#E5E5E5"> and this was it</font>

19
00:00:49,510 --> 00:00:55,420
came out<font color="#E5E5E5"> of Cisco it was initially like</font>

20
00:00:52,390 --> 00:00:56,559
it's a punt pass software<font color="#CCCCCC"> forward but</font>

21
00:00:55,420 --> 00:00:58,000
then we realized it was<font color="#E5E5E5"> pretty good and</font>

22
00:00:56,559 --> 00:00:59,678
<font color="#CCCCCC">we should probably</font><font color="#E5E5E5"> open source it so</font>

23
00:00:58,000 --> 00:01:03,309
it's been open<font color="#E5E5E5"> source through the Linux</font>

24
00:00:59,679 --> 00:01:04,870
Foundation<font color="#CCCCCC"> so it's part of the</font><font color="#E5E5E5"> elephant</font>

25
00:01:03,309 --> 00:01:07,810
<font color="#E5E5E5">and its foundation networking sort of</font>

26
00:01:04,870 --> 00:01:10,180
umbrella<font color="#CCCCCC"> the key thing and again some if</font>

27
00:01:07,810 --> 00:01:12,220
<font color="#CCCCCC">you remember earlier and you know with</font>

28
00:01:10,180 --> 00:01:13,840
<font color="#CCCCCC">BPF</font><font color="#E5E5E5"> FCP this thing about you want</font><font color="#CCCCCC"> to</font>

29
00:01:12,220 --> 00:01:15,070
extend<font color="#E5E5E5"> it you have to build helpers</font><font color="#CCCCCC"> and</font>

30
00:01:13,840 --> 00:01:17,110
help us have to<font color="#E5E5E5"> make it into the kernel</font>

31
00:01:15,070 --> 00:01:18,639
<font color="#CCCCCC">so you know there's a there's an IP</font>

32
00:01:17,110 --> 00:01:20,740
<font color="#E5E5E5">looked up there isn't</font><font color="#CCCCCC"> a bridge look up</font>

33
00:01:18,640 --> 00:01:22,180
<font color="#E5E5E5">yet and pretty key reason that we've</font>

34
00:01:20,740 --> 00:01:23,410
done<font color="#CCCCCC"> everything in user space is the</font>

35
00:01:22,180 --> 00:01:25,390
fact that that<font color="#E5E5E5"> gives us that feature</font>

36
00:01:23,410 --> 00:01:26,770
velocity so we<font color="#E5E5E5"> want to put a new</font>

37
00:01:25,390 --> 00:01:28,900
forwarding plane and we don't<font color="#E5E5E5"> have to</font>

38
00:01:26,770 --> 00:01:30,100
wait<font color="#E5E5E5"> for the US to bless it we can just</font>

39
00:01:28,900 --> 00:01:32,140
push it<font color="#CCCCCC"> straight</font><font color="#E5E5E5"> thing because it's user</font>

40
00:01:30,100 --> 00:01:33,820
space<font color="#E5E5E5"> the throughput</font><font color="#CCCCCC"> you know that's</font>

41
00:01:32,140 --> 00:01:36,310
that's<font color="#E5E5E5"> the magic of vectors which will</font>

42
00:01:33,820 --> 00:01:38,529
come<font color="#CCCCCC"> onto as well initially in fact it</font>

43
00:01:36,310 --> 00:01:41,380
<font color="#E5E5E5">round PowerPC that it now runs on arm</font>

44
00:01:38,530 --> 00:01:44,980
<font color="#CCCCCC">and of course x86 which is way to see</font>

45
00:01:41,380 --> 00:01:46,420
most of<font color="#E5E5E5"> it the scope so</font><font color="#CCCCCC"> in fact the</font>

46
00:01:44,980 --> 00:01:49,420
<font color="#E5E5E5">three bullets</font><font color="#CCCCCC"> are nicely</font><font color="#E5E5E5"> the opposite</font>

47
00:01:46,420 --> 00:01:51,700
way up from the<font color="#E5E5E5"> free</font><font color="#CCCCCC"> nhanh picture cisco</font>

48
00:01:49,420 --> 00:01:54,220
is the network<font color="#CCCCCC"> bio I mean typically</font>

49
00:01:51,700 --> 00:01:55,600
<font color="#CCCCCC">we're using</font><font color="#E5E5E5"> DP</font><font color="#CCCCCC"> GK there though you know</font>

50
00:01:54,220 --> 00:01:57,070
what<font color="#E5E5E5"> opens</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> other things there's been</font>

51
00:01:55,600 --> 00:01:59,710
other suggestions today again with

52
00:01:57,070 --> 00:02:03,600
things like<font color="#CCCCCC"> x DP</font><font color="#E5E5E5"> there are some native</font>

53
00:01:59,710 --> 00:02:06,490
drivers I think in<font color="#E5E5E5"> DP P as well</font>

54
00:02:03,600 --> 00:02:08,959
<font color="#CCCCCC">VPP</font><font color="#E5E5E5"> itself really knows about packet</font>

55
00:02:06,490 --> 00:02:10,848
processing so about your actual forward

56
00:02:08,959 --> 00:02:13,879
but then<font color="#CCCCCC"> across the</font><font color="#E5E5E5"> clears we go set it</font>

57
00:02:10,848 --> 00:02:17,659
<font color="#CCCCCC">up in some kind</font><font color="#E5E5E5"> of a management layer as</font>

58
00:02:13,879 --> 00:02:19,280
<font color="#E5E5E5">the control plane</font><font color="#CCCCCC"> but we</font><font color="#E5E5E5"> don't live</font><font color="#CCCCCC"> in</font>

59
00:02:17,659 --> 00:02:20,659
isolation<font color="#E5E5E5"> so this is a planet just to</font>

60
00:02:19,280 --> 00:02:22,159
<font color="#CCCCCC">give you a picture</font><font color="#E5E5E5"> of the Linux</font>

61
00:02:20,659 --> 00:02:24,349
Foundation networking and associated

62
00:02:22,159 --> 00:02:26,358
stuff and<font color="#E5E5E5"> where where the whole fight</font>

63
00:02:24,349 --> 00:02:28,280
over you can peep in<font color="#E5E5E5"> six so VPP itself</font>

64
00:02:26,359 --> 00:02:31,700
<font color="#E5E5E5">when it got</font><font color="#CCCCCC"> open-source we call</font><font color="#E5E5E5"> that</font>

65
00:02:28,280 --> 00:02:36,379
Fido<font color="#CCCCCC"> FD io fast data you can't pronounce</font>

66
00:02:31,700 --> 00:02:38,268
for the<font color="#E5E5E5"> ISO so it's a dog so so we sit</font>

67
00:02:36,379 --> 00:02:39,920
here<font color="#E5E5E5"> in a plain tip you know of course</font>

68
00:02:38,269 --> 00:02:42,560
we sit<font color="#CCCCCC"> on top of an operating system</font><font color="#E5E5E5"> and</font>

69
00:02:39,920 --> 00:02:43,879
<font color="#CCCCCC">hardware and some of these other</font>

70
00:02:42,560 --> 00:02:46,310
projects<font color="#E5E5E5"> have been talked about already</font>

71
00:02:43,879 --> 00:02:48,739
so for example I used<font color="#E5E5E5"> to work on open</font>

72
00:02:46,310 --> 00:02:50,599
<font color="#CCCCCC">daylight quite a bit that's been</font>

73
00:02:48,739 --> 00:02:52,879
<font color="#CCCCCC">presented almost</font><font color="#E5E5E5"> half as well it's</font>

74
00:02:50,599 --> 00:02:54,738
another<font color="#E5E5E5"> Sdn controller</font><font color="#CCCCCC"> I know I think</font>

75
00:02:52,879 --> 00:02:58,159
<font color="#CCCCCC">Emma's talking</font><font color="#E5E5E5"> about a piano fee stuff</font>

76
00:02:54,739 --> 00:02:59,719
<font color="#E5E5E5">after this</font><font color="#CCCCCC"> on that strangely normal to</font>

77
00:02:58,159 --> 00:03:02,689
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> about on app so I know you don't</font>

78
00:02:59,719 --> 00:03:03,620
<font color="#E5E5E5">hear her</font><font color="#CCCCCC"> Devon happy well maybe</font><font color="#E5E5E5"> that's</font>

79
00:03:02,689 --> 00:03:04,849
<font color="#E5E5E5">one</font><font color="#CCCCCC"> news</font><font color="#E5E5E5"> talking about it there</font>

80
00:03:03,620 --> 00:03:07,700
something<font color="#E5E5E5"> like for people who ends up</font>

81
00:03:04,849 --> 00:03:10,608
and so on<font color="#E5E5E5"> that basically is</font><font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> a</font>

82
00:03:07,700 --> 00:03:12,469
telco ish thing<font color="#CCCCCC"> it's sits on top of open</font>

83
00:03:10,609 --> 00:03:14,000
<font color="#E5E5E5">daylight in terms of how it programs the</font>

84
00:03:12,469 --> 00:03:16,698
network because very much about how you

85
00:03:14,000 --> 00:03:18,139
<font color="#E5E5E5">provisions help go type services so it's</font>

86
00:03:16,699 --> 00:03:20,799
all unbelievably dull

87
00:03:18,139 --> 00:03:23,870
I'm glad not to<font color="#E5E5E5"> be working on anything</font>

88
00:03:20,799 --> 00:03:25,549
<font color="#E5E5E5">but</font><font color="#CCCCCC"> I I guess</font><font color="#E5E5E5"> you know in terms of buzz</font>

89
00:03:23,870 --> 00:03:26,720
and<font color="#CCCCCC"> the rooms the rooms quite quiet</font>

90
00:03:25,549 --> 00:03:28,340
because<font color="#E5E5E5"> we</font><font color="#CCCCCC"> should have stuck</font><font color="#E5E5E5"> the word</font>

91
00:03:26,720 --> 00:03:30,829
kubernetes all over everything to<font color="#E5E5E5"> get</font>

92
00:03:28,340 --> 00:03:32,000
everybody in you know<font color="#E5E5E5"> really</font><font color="#CCCCCC"> Cuban</font>

93
00:03:30,829 --> 00:03:34,370
<font color="#CCCCCC">essence is where it's at and if you</font>

94
00:03:32,000 --> 00:03:35,870
think about the stack<font color="#E5E5E5"> now you can say in</font>

95
00:03:34,370 --> 00:03:38,060
a sense<font color="#E5E5E5"> what you're really saying is</font>

96
00:03:35,870 --> 00:03:39,919
that<font color="#CCCCCC"> your your CNI plugin really does</font>

97
00:03:38,060 --> 00:03:41,900
this bit the network controller and

98
00:03:39,919 --> 00:03:43,340
<font color="#CCCCCC">communities is</font><font color="#E5E5E5"> really all about the</font>

99
00:03:41,900 --> 00:03:46,639
orchestration<font color="#E5E5E5"> and you know how do you</font>

100
00:03:43,340 --> 00:03:47,599
<font color="#E5E5E5">deploy pots on two different</font><font color="#CCCCCC"> nodes and</font>

101
00:03:46,639 --> 00:03:50,180
<font color="#E5E5E5">how</font><font color="#CCCCCC"> do you</font><font color="#E5E5E5"> figure out where</font><font color="#CCCCCC"> to put</font>

102
00:03:47,599 --> 00:03:53,298
things<font color="#CCCCCC"> and sort</font><font color="#E5E5E5"> of you know manage the</font>

103
00:03:50,180 --> 00:03:55,879
<font color="#E5E5E5">lifecycle so the projects we</font><font color="#CCCCCC"> have in in</font>

104
00:03:53,299 --> 00:03:57,859
<font color="#CCCCCC">fido bpp yourself</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> course the core</font>

105
00:03:55,879 --> 00:03:59,870
<font color="#E5E5E5">there's a bunch of different</font><font color="#CCCCCC"> other</font>

106
00:03:57,859 --> 00:04:02,329
projects around packet processing so

107
00:03:59,870 --> 00:04:04,459
things like you<font color="#E5E5E5"> know open data plane</font><font color="#CCCCCC"> p</font>

108
00:04:02,329 --> 00:04:07,220
<font color="#CCCCCC">fours</font><font color="#E5E5E5"> be mentioned a few</font><font color="#CCCCCC"> times already</font><font color="#E5E5E5"> I</font>

109
00:04:04,459 --> 00:04:08,989
<font color="#CCCCCC">think as even you know sort of</font>

110
00:04:07,220 --> 00:04:12,470
<font color="#CCCCCC">information centric networking and</font><font color="#E5E5E5"> that</font>

111
00:04:08,989 --> 00:04:14,299
kind of stuff and I mentioned as I said

112
00:04:12,470 --> 00:04:17,139
we typically<font color="#E5E5E5"> run on top of</font><font color="#CCCCCC"> deeply K in</font>

113
00:04:14,299 --> 00:04:21,090
terms<font color="#E5E5E5"> of the network i/o I</font>

114
00:04:17,139 --> 00:04:23,860
the top<font color="#CCCCCC"> load of the management agents</font><font color="#E5E5E5"> so</font>

115
00:04:21,089 --> 00:04:25,479
you know honeycomb really is<font color="#CCCCCC"> as much</font>

116
00:04:23,860 --> 00:04:27,219
about<font color="#E5E5E5"> virtual machines it's really</font>

117
00:04:25,479 --> 00:04:30,669
<font color="#CCCCCC">cut-down</font><font color="#E5E5E5"> version</font><font color="#CCCCCC"> of open daylight so</font>

118
00:04:27,219 --> 00:04:31,960
that you can manage<font color="#CCCCCC"> affecting an</font>

119
00:04:30,669 --> 00:04:34,030
instance of you could<font color="#E5E5E5"> be running on a</font>

120
00:04:31,960 --> 00:04:36,280
node<font color="#E5E5E5"> but I guess the way I think about</font>

121
00:04:34,030 --> 00:04:37,929
<font color="#E5E5E5">it is in that kind</font><font color="#CCCCCC"> of VM world you're</font>

122
00:04:36,280 --> 00:04:40,090
still probably thinking about<font color="#E5E5E5"> things</font>

123
00:04:37,930 --> 00:04:42,340
like net comp and yang<font color="#E5E5E5"> and BGP</font><font color="#CCCCCC"> you're</font>

124
00:04:40,090 --> 00:04:44,438
very much<font color="#E5E5E5"> in</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> kind of I am a host</font><font color="#CCCCCC"> I</font>

125
00:04:42,340 --> 00:04:47,138
on the route or whatever<font color="#E5E5E5"> so using those</font>

126
00:04:44,439 --> 00:04:48,759
kind<font color="#E5E5E5"> of more</font><font color="#CCCCCC"> Haiti's forward legacy</font>

127
00:04:47,139 --> 00:04:50,050
<font color="#CCCCCC">those</font><font color="#E5E5E5"> more like legacy approaches</font><font color="#CCCCCC"> that</font>

128
00:04:48,759 --> 00:04:51,759
configure things<font color="#E5E5E5"> because</font><font color="#CCCCCC"> really if you</font>

129
00:04:50,050 --> 00:04:54,159
think<font color="#E5E5E5"> about it as you</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> to containers</font>

130
00:04:51,759 --> 00:04:56,560
like how<font color="#E5E5E5"> often do you want to</font>

131
00:04:54,159 --> 00:04:58,300
reconfigure a running container so

132
00:04:56,560 --> 00:05:00,099
multi-tenancy a networking traditionally

133
00:04:58,300 --> 00:05:01,990
we'd built IP VPNs right and the way we

134
00:05:00,099 --> 00:05:03,628
did multi-tenancy as we use VRS and<font color="#CCCCCC"> we</font>

135
00:05:01,990 --> 00:05:06,129
could have<font color="#CCCCCC"> like a hundred VRS on</font><font color="#E5E5E5"> Rita</font>

136
00:05:03,629 --> 00:05:08,560
multi-tenancy<font color="#E5E5E5"> containers more likely</font>

137
00:05:06,129 --> 00:05:11,979
means spin<font color="#E5E5E5"> up 100 containers</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> per 10</font>

138
00:05:08,560 --> 00:05:13,509
and reconfiguration probably means<font color="#E5E5E5"> take</font>

139
00:05:11,979 --> 00:05:15,520
<font color="#E5E5E5">this container blow it away and create a</font>

140
00:05:13,509 --> 00:05:17,800
new<font color="#E5E5E5"> one so a way of doing things is very</font>

141
00:05:15,520 --> 00:05:19,180
<font color="#E5E5E5">different</font><font color="#CCCCCC"> so what we've done to be more</font>

142
00:05:17,800 --> 00:05:21,520
sort<font color="#CCCCCC"> of</font><font color="#E5E5E5"> cloud native in a container</font>

143
00:05:19,180 --> 00:05:26,289
world is we built the go binding onto

144
00:05:21,520 --> 00:05:27,758
VPP<font color="#CCCCCC"> and then what employees thought I've</font>

145
00:05:26,289 --> 00:05:31,779
got a few more<font color="#E5E5E5"> slides have a night then</font>

146
00:05:27,759 --> 00:05:33,969
rafters<font color="#E5E5E5"> rig and going to conceive EPP</font>

147
00:05:31,779 --> 00:05:37,089
which is a CNI to contain networking so

148
00:05:33,969 --> 00:05:39,729
it sits<font color="#E5E5E5"> on</font><font color="#CCCCCC"> top of going PP and provides</font>

149
00:05:37,089 --> 00:05:41,949
contain the networking<font color="#E5E5E5"> we have a whole</font>

150
00:05:39,729 --> 00:05:45,610
<font color="#E5E5E5">bunch of test stuff I know that Ray and</font>

151
00:05:41,949 --> 00:05:48,310
<font color="#CCCCCC">the</font><font color="#E5E5E5"> absent sick</font><font color="#CCCCCC"> map check</font><font color="#E5E5E5"> we're going to</font>

152
00:05:45,610 --> 00:05:50,080
present<font color="#E5E5E5"> cease it's like</font><font color="#CCCCCC"> a sprays</font><font color="#E5E5E5"> going</font>

153
00:05:48,310 --> 00:05:51,490
<font color="#E5E5E5">to be that on his own it's</font><font color="#CCCCCC"> not</font>

154
00:05:50,080 --> 00:05:54,068
<font color="#E5E5E5">interesting to test stuff in there for</font>

155
00:05:51,490 --> 00:05:56,759
<font color="#CCCCCC">example t-rex is like a high performance</font>

156
00:05:54,069 --> 00:05:56,759
paper generator

157
00:05:56,810 --> 00:06:00,600
so what<font color="#CCCCCC"> does all the stuff mean with</font>

158
00:05:59,130 --> 00:06:02,909
vectors you know how does<font color="#E5E5E5"> it how does it</font>

159
00:06:00,600 --> 00:06:04,260
<font color="#CCCCCC">actually work so I'll skip through</font><font color="#E5E5E5"> this</font>

160
00:06:02,910 --> 00:06:08,550
because<font color="#CCCCCC"> it's restates what I've already</font>

161
00:06:04,260 --> 00:06:10,590
said<font color="#CCCCCC"> nope yeah the runway</font><font color="#E5E5E5"> here we go</font>

162
00:06:08,550 --> 00:06:12,960
so basically you<font color="#CCCCCC"> decomposed packet</font>

163
00:06:10,590 --> 00:06:15,448
processing invert the graph of nodes<font color="#CCCCCC"> and</font>

164
00:06:12,960 --> 00:06:17,729
<font color="#CCCCCC">by no.2</font><font color="#E5E5E5"> just mean little chunks of code</font>

165
00:06:15,449 --> 00:06:18,870
<font color="#CCCCCC">that we can't chain together so you know</font>

166
00:06:17,729 --> 00:06:20,159
classic you know you're forwarding<font color="#E5E5E5"> a</font>

167
00:06:18,870 --> 00:06:21,690
packet what are you<font color="#E5E5E5"> going to do you can</font>

168
00:06:20,160 --> 00:06:24,060
get the packet in you figure out<font color="#E5E5E5"> from</font>

169
00:06:21,690 --> 00:06:25,770
the driver that's neat<font color="#CCCCCC"> pack</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> you then</font>

170
00:06:24,060 --> 00:06:28,500
say<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> actually we found out that it's</font>

171
00:06:25,770 --> 00:06:30,690
ipv4 so<font color="#CCCCCC"> things like a full graph</font><font color="#E5E5E5"> knows</font>

172
00:06:28,500 --> 00:06:32,130
we didn't do a<font color="#E5E5E5"> look-up on it and it</font>

173
00:06:30,690 --> 00:06:33,719
might<font color="#E5E5E5"> well be</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> word</font><font color="#E5E5E5"> again so</font>

174
00:06:32,130 --> 00:06:34,950
we<font color="#CCCCCC"> had to rewrite it</font><font color="#E5E5E5"> put it out</font><font color="#CCCCCC"> of a</font>

175
00:06:33,720 --> 00:06:36,990
<font color="#E5E5E5">different interface that sort of things</font>

176
00:06:34,950 --> 00:06:39,180
<font color="#CCCCCC">so we break</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> down as little</font><font color="#E5E5E5"> nodes</font>

177
00:06:36,990 --> 00:06:42,900
which kind<font color="#E5E5E5"> of micro network functions</font>

178
00:06:39,180 --> 00:06:44,550
and and then the packet to<font color="#E5E5E5"> move through</font>

179
00:06:42,900 --> 00:06:45,780
this in vectors so again<font color="#E5E5E5"> most</font><font color="#CCCCCC"> people</font>

180
00:06:44,550 --> 00:06:47,700
have talked about<font color="#E5E5E5"> this already the</font>

181
00:06:45,780 --> 00:06:49,440
concept not so much the vectors with the

182
00:06:47,700 --> 00:06:51,479
concept that you know don't<font color="#CCCCCC"> have one</font>

183
00:06:49,440 --> 00:06:52,950
<font color="#CCCCCC">interrupt the packet or don't</font><font color="#E5E5E5"> poll and</font>

184
00:06:51,479 --> 00:06:55,229
<font color="#E5E5E5">just pull one packet you know try and</font>

185
00:06:52,950 --> 00:06:58,680
<font color="#E5E5E5">put as many packets at a time so</font>

186
00:06:55,229 --> 00:07:00,900
typically<font color="#CCCCCC"> ttk reporting mode</font><font color="#E5E5E5"> in for loti</font>

187
00:06:58,680 --> 00:07:02,430
you might get back<font color="#E5E5E5"> 20 30 who knows the</font>

188
00:07:00,900 --> 00:07:04,289
whole bunch of<font color="#E5E5E5"> packets with</font><font color="#CCCCCC"> a waiting</font>

189
00:07:02,430 --> 00:07:06,330
<font color="#E5E5E5">for us so he</font><font color="#CCCCCC"> processed them as a vector</font>

190
00:07:04,289 --> 00:07:08,250
<font color="#E5E5E5">and this is where the graph comes in if</font>

191
00:07:06,330 --> 00:07:10,380
the graph nodes<font color="#E5E5E5"> fit in the instruction</font>

192
00:07:08,250 --> 00:07:12,510
cache so the goal is the<font color="#CCCCCC"> upper alpha if</font>

193
00:07:10,380 --> 00:07:14,520
<font color="#CCCCCC">it's an l1 cache</font><font color="#E5E5E5"> if you know even that</font>

194
00:07:12,510 --> 00:07:15,930
<font color="#E5E5E5">CPU cache hierarchies</font><font color="#CCCCCC"> max can give you</font>

195
00:07:14,520 --> 00:07:19,169
orders of magnitude more<font color="#E5E5E5"> performance</font>

196
00:07:15,930 --> 00:07:20,669
<font color="#CCCCCC">than going</font><font color="#E5E5E5"> up to main</font><font color="#CCCCCC"> memory the packets</font>

197
00:07:19,169 --> 00:07:22,919
themselves<font color="#CCCCCC"> prefetched</font><font color="#E5E5E5"> into the data</font>

198
00:07:20,669 --> 00:07:24,840
cache<font color="#E5E5E5"> the other thing to say suppose</font>

199
00:07:22,919 --> 00:07:26,280
when you<font color="#CCCCCC"> do things like lookups one of</font>

200
00:07:24,840 --> 00:07:27,599
the challenges becomes well what<font color="#E5E5E5"> if you</font>

201
00:07:26,280 --> 00:07:29,369
have a<font color="#E5E5E5"> million race in the routing table</font>

202
00:07:27,599 --> 00:07:30,780
if you would in the<font color="#CCCCCC"> internet and the the</font>

203
00:07:29,370 --> 00:07:33,090
answer is of course<font color="#E5E5E5"> that we can against</font>

204
00:07:30,780 --> 00:07:34,739
<font color="#E5E5E5">or paralyze all those lookups so it</font>

205
00:07:33,090 --> 00:07:36,179
takes a while<font color="#CCCCCC"> for memories get back to</font>

206
00:07:34,740 --> 00:07:37,349
us<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> first look up but we can only</font>

207
00:07:36,180 --> 00:07:39,450
<font color="#E5E5E5">doing the next one or the next one our</font>

208
00:07:37,349 --> 00:07:42,229
next<font color="#CCCCCC"> one rather than stalling</font><font color="#E5E5E5"> waiting</font>

209
00:07:39,450 --> 00:07:42,229
<font color="#E5E5E5">for that first</font><font color="#CCCCCC"> look up</font>

210
00:07:43,570 --> 00:07:48,909
and yeah<font color="#E5E5E5"> I think that what's</font><font color="#CCCCCC"> interesting</font>

211
00:07:45,760 --> 00:07:50,710
about this<font color="#E5E5E5"> is I mean I lost my programs</font>

212
00:07:48,910 --> 00:07:52,210
in assembler it was like<font color="#E5E5E5"> six six</font><font color="#CCCCCC"> five</font><font color="#E5E5E5"> oh</font>

213
00:07:50,710 --> 00:07:53,710
<font color="#E5E5E5">two or something and you know there was</font>

214
00:07:52,210 --> 00:07:59,140
no cash there<font color="#CCCCCC"> wasn't</font><font color="#E5E5E5"> other sort</font><font color="#CCCCCC"> of</font>

215
00:07:53,710 --> 00:08:01,960
intelligence but yeah<font color="#E5E5E5"> exactly</font><font color="#CCCCCC"> I've been</font>

216
00:07:59,140 --> 00:08:03,010
accused of being<font color="#CCCCCC"> one people who came up</font>

217
00:08:01,960 --> 00:08:05,650
with<font color="#CCCCCC"> this stuff you know really</font>

218
00:08:03,010 --> 00:08:07,150
<font color="#CCCCCC">understand</font><font color="#E5E5E5"> CPUs and modern CPUs and cash</font>

219
00:08:05,650 --> 00:08:09,609
hierarchies<font color="#E5E5E5"> and how all this stuff works</font>

220
00:08:07,150 --> 00:08:11,469
and that's that's<font color="#E5E5E5"> the genius of it and</font>

221
00:08:09,610 --> 00:08:12,850
the<font color="#E5E5E5"> proof is in the pudding I mean in</font>

222
00:08:11,470 --> 00:08:15,250
real pretty talking about it but<font color="#E5E5E5"> when we</font>

223
00:08:12,850 --> 00:08:17,860
<font color="#E5E5E5">went from full generation end to</font>

224
00:08:15,250 --> 00:08:19,510
generation<font color="#E5E5E5"> n</font><font color="#CCCCCC"> plus-1 of intel cpu the</font>

225
00:08:17,860 --> 00:08:21,630
performance handily went up because<font color="#E5E5E5"> it</font>

226
00:08:19,510 --> 00:08:25,090
was taking advantage<font color="#CCCCCC"> of it automatically</font>

227
00:08:21,630 --> 00:08:27,580
and since it's<font color="#E5E5E5"> the actual packet program</font>

228
00:08:25,090 --> 00:08:31,179
<font color="#CCCCCC">price</font><font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> good with getting a k4 time</font>

229
00:08:27,580 --> 00:08:32,530
and so we have the graph we mentioned so

230
00:08:31,180 --> 00:08:34,510
the individual sort of steps<font color="#E5E5E5"> at the</font>

231
00:08:32,530 --> 00:08:35,709
graph nodes<font color="#E5E5E5"> I colored you put ones</font>

232
00:08:34,510 --> 00:08:37,830
differently because<font color="#E5E5E5"> this is really</font><font color="#CCCCCC"> where</font>

233
00:08:35,710 --> 00:08:41,650
<font color="#CCCCCC">it's coming</font><font color="#E5E5E5"> in from</font><font color="#CCCCCC"> your network</font><font color="#E5E5E5"> driver</font>

234
00:08:37,830 --> 00:08:43,840
or of course<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know realistically it</font>

235
00:08:41,650 --> 00:08:45,340
was one thing<font color="#E5E5E5"> to say is</font><font color="#CCCCCC"> that it's I</font>

236
00:08:43,840 --> 00:08:46,750
would<font color="#CCCCCC"> say this</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> course working for</font>

237
00:08:45,340 --> 00:08:48,730
Cisco but it's probably<font color="#E5E5E5"> fairly unlikely</font>

238
00:08:46,750 --> 00:08:50,590
that<font color="#CCCCCC"> people be deploying</font><font color="#E5E5E5"> this in boxes</font>

239
00:08:48,730 --> 00:08:52,870
<font color="#CCCCCC">with multiple network interfaces acting</font>

240
00:08:50,590 --> 00:08:56,500
as readers you<font color="#E5E5E5"> know please</font><font color="#CCCCCC"> don't do that</font>

241
00:08:52,870 --> 00:08:57,970
<font color="#E5E5E5">we want you to buy a</font><font color="#CCCCCC"> reuters so more</font>

242
00:08:56,500 --> 00:09:00,130
<font color="#CCCCCC">likely we're talking about something</font>

243
00:08:57,970 --> 00:09:01,360
<font color="#CCCCCC">running</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> host is be switch and</font><font color="#E5E5E5"> so</font>

244
00:09:00,130 --> 00:09:02,380
quite a lot<font color="#CCCCCC"> compact</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> gonna be</font>

245
00:09:01,360 --> 00:09:04,870
coming in<font color="#CCCCCC"> through something like</font><font color="#E5E5E5"> the</font>

246
00:09:02,380 --> 00:09:09,430
host user rather than coming<font color="#CCCCCC"> off on it</font>

247
00:09:04,870 --> 00:09:13,120
<font color="#CCCCCC">and so you have</font><font color="#E5E5E5"> extra packets they come</font>

248
00:09:09,430 --> 00:09:16,510
in<font color="#CCCCCC"> they come on the input nodes and then</font>

249
00:09:13,120 --> 00:09:18,370
if you see they're<font color="#E5E5E5"> going through</font><font color="#CCCCCC"> step by</font>

250
00:09:16,510 --> 00:09:20,650
<font color="#CCCCCC">step</font><font color="#E5E5E5"> rather slowly to my useless</font>

251
00:09:18,370 --> 00:09:22,420
animation and the<font color="#CCCCCC"> pointers at each point</font>

252
00:09:20,650 --> 00:09:24,670
<font color="#E5E5E5">that first packet in the vector</font><font color="#CCCCCC"> is going</font>

253
00:09:22,420 --> 00:09:25,930
to<font color="#E5E5E5"> be warming up your l1 cache and all</font>

254
00:09:24,670 --> 00:09:28,599
<font color="#E5E5E5">the other packets in the back to take</font>

255
00:09:25,930 --> 00:09:29,890
advantage of<font color="#E5E5E5"> that but of course</font><font color="#CCCCCC"> we all</font>

256
00:09:28,600 --> 00:09:31,330
say in some<font color="#E5E5E5"> cases are</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to have to</font>

257
00:09:29,890 --> 00:09:32,290
split the vector so imagine is an<font color="#E5E5E5"> are</font>

258
00:09:31,330 --> 00:09:34,300
mixing<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a bunch</font>

259
00:09:32,290 --> 00:09:36,370
these six packets<font color="#E5E5E5"> you'll have to split</font>

260
00:09:34,300 --> 00:09:40,990
<font color="#CCCCCC">it and</font><font color="#E5E5E5"> in that case</font><font color="#CCCCCC"> move</font><font color="#E5E5E5"> the art itself</font>

261
00:09:36,370 --> 00:09:43,000
<font color="#CCCCCC">will</font><font color="#E5E5E5"> have to warm its own</font><font color="#CCCCCC"> cash up plug</font>

262
00:09:40,990 --> 00:09:45,820
it<font color="#E5E5E5"> so you know as I</font><font color="#CCCCCC"> mentioned the whole</font>

263
00:09:43,000 --> 00:09:47,290
point<font color="#E5E5E5"> here is that you</font><font color="#CCCCCC"> should be able</font><font color="#E5E5E5"> to</font>

264
00:09:45,820 --> 00:09:49,329
add<font color="#E5E5E5"> code quickly we can add it quickly</font>

265
00:09:47,290 --> 00:09:53,019
<font color="#E5E5E5">but so can you - and so how how does</font>

266
00:09:49,329 --> 00:09:55,810
<font color="#E5E5E5">that work well plugins really you just</font>

267
00:09:53,019 --> 00:09:58,139
<font color="#E5E5E5">plug new</font><font color="#CCCCCC"> nodes</font><font color="#E5E5E5"> into the graph they can</font>

268
00:09:55,810 --> 00:10:01,268
be run sort of separately<font color="#E5E5E5"> from the main</font>

269
00:09:58,139 --> 00:10:03,009
<font color="#CCCCCC">VPP code</font><font color="#E5E5E5"> base</font><font color="#CCCCCC"> so they can be effectively</font>

270
00:10:01,269 --> 00:10:04,870
first-class citizens<font color="#E5E5E5"> but you don't have</font>

271
00:10:03,009 --> 00:10:06,610
<font color="#E5E5E5">to be merged in and go through all the</font>

272
00:10:04,870 --> 00:10:09,670
<font color="#E5E5E5">cset stuff that people</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> ran that</font>

273
00:10:06,610 --> 00:10:12,069
check do so yeah you're building it

274
00:10:09,670 --> 00:10:14,649
yourself<font color="#E5E5E5"> but it toward intents and</font>

275
00:10:12,069 --> 00:10:17,290
<font color="#E5E5E5">purposes it has equal status with recipe</font>

276
00:10:14,649 --> 00:10:19,149
cookie but of course<font color="#E5E5E5"> also you can have</font>

277
00:10:17,290 --> 00:10:21,939
<font color="#CCCCCC">public like it and</font><font color="#E5E5E5"> so you know imagine</font>

278
00:10:19,149 --> 00:10:23,589
<font color="#E5E5E5">you have a neck and much two loops</font>

279
00:10:21,940 --> 00:10:25,209
annoyance this is an intelligent Nick

280
00:10:23,589 --> 00:10:25,569
and<font color="#E5E5E5"> this Nick</font><font color="#CCCCCC"> you know does whatever</font><font color="#E5E5E5"> it</font>

281
00:10:25,209 --> 00:10:28,388
<font color="#E5E5E5">might be</font>

282
00:10:25,569 --> 00:10:30,880
IPSec offload<font color="#E5E5E5"> you know we'd like to be</font>

283
00:10:28,389 --> 00:10:32,589
able<font color="#E5E5E5"> to take advantage</font><font color="#CCCCCC"> of that the</font>

284
00:10:30,880 --> 00:10:39,269
hardware supports it<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know let's do</font>

285
00:10:32,589 --> 00:10:45,100
it<font color="#E5E5E5"> hard way not</font><font color="#CCCCCC"> in software right yeah</font>

286
00:10:39,269 --> 00:10:46,990
so yeah<font color="#E5E5E5"> as Giles said the main topic of</font>

287
00:10:45,100 --> 00:10:51,910
this presentation is<font color="#E5E5E5"> actually the</font>

288
00:10:46,990 --> 00:10:54,190
project<font color="#E5E5E5"> legato</font><font color="#CCCCCC"> which is</font><font color="#E5E5E5"> without say a</font>

289
00:10:51,910 --> 00:11:00,040
platform for building<font color="#E5E5E5"> cloud native</font>

290
00:10:54,190 --> 00:11:03,370
<font color="#E5E5E5">network functions based on VPP</font><font color="#CCCCCC"> so before</font>

291
00:11:00,040 --> 00:11:05,349
we go there<font color="#CCCCCC"> we may need to clarify what</font>

292
00:11:03,370 --> 00:11:09,880
actually called native network function

293
00:11:05,350 --> 00:11:12,250
is you know according CN CF<font color="#CCCCCC"> i/o cloud</font>

294
00:11:09,880 --> 00:11:15,279
native means<font color="#E5E5E5"> building</font><font color="#CCCCCC"> the application</font><font color="#E5E5E5"> as</font>

295
00:11:12,250 --> 00:11:18,839
a set of micro services which<font color="#E5E5E5"> are you</font>

296
00:11:15,279 --> 00:11:21,819
<font color="#E5E5E5">know packaged into containers and</font>

297
00:11:18,839 --> 00:11:24,399
orchestrated by some orchestration

298
00:11:21,819 --> 00:11:28,689
software typically kubernetes<font color="#E5E5E5"> or or</font>

299
00:11:24,399 --> 00:11:30,699
something<font color="#CCCCCC"> else so we see NFS</font><font color="#E5E5E5"> basically</font>

300
00:11:28,689 --> 00:11:33,490
we<font color="#E5E5E5"> aim to do the same</font>

301
00:11:30,699 --> 00:11:36,540
instead<font color="#E5E5E5"> of deploying monolithic network</font>

302
00:11:33,490 --> 00:11:43,360
functions<font color="#CCCCCC"> we</font><font color="#E5E5E5"> split the network functions</font>

303
00:11:36,540 --> 00:11:44,680
into multiple<font color="#E5E5E5"> also capped pcs deployed</font>

304
00:11:43,360 --> 00:11:48,810
as<font color="#E5E5E5"> containers</font>

305
00:11:44,680 --> 00:11:54,279
and interconnected<font color="#CCCCCC"> if</font><font color="#E5E5E5"> possible with the</font>

306
00:11:48,810 --> 00:11:59,829
fastest links between them<font color="#CCCCCC"> in case</font><font color="#E5E5E5"> of</font>

307
00:11:54,279 --> 00:12:04,480
EPP<font color="#CCCCCC"> we put VPP into containers</font><font color="#E5E5E5"> we can</font>

308
00:11:59,830 --> 00:12:07,330
use<font color="#CCCCCC"> an interface called mammoth to</font>

309
00:12:04,480 --> 00:12:09,220
interconnect<font color="#E5E5E5"> the</font><font color="#CCCCCC"> VP piece running in</font>

310
00:12:07,330 --> 00:12:13,050
different<font color="#CCCCCC"> containers on the</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> node</font>

311
00:12:09,220 --> 00:12:15,510
<font color="#CCCCCC">and in which</font><font color="#E5E5E5"> case the packets would go</font>

312
00:12:13,050 --> 00:12:18,670
to<font color="#E5E5E5"> shared memory</font><font color="#CCCCCC"> between the containers</font>

313
00:12:15,510 --> 00:12:21,520
<font color="#CCCCCC">you know in case that that some of the</font>

314
00:12:18,670 --> 00:12:23,770
ports are de Polan different<font color="#CCCCCC"> node</font><font color="#E5E5E5"> then</font>

315
00:12:21,520 --> 00:12:27,970
it is a<font color="#E5E5E5"> different story but in that case</font>

316
00:12:23,770 --> 00:12:30,250
<font color="#E5E5E5">we</font><font color="#CCCCCC"> can leverage</font><font color="#E5E5E5"> the PDK etc and yeah to</font>

317
00:12:27,970 --> 00:12:33,880
put VPP into containers<font color="#CCCCCC"> we</font><font color="#E5E5E5"> basically</font>

318
00:12:30,250 --> 00:12:37,839
need some some management plan or

319
00:12:33,880 --> 00:12:38,920
control plane<font color="#E5E5E5"> off of this stuff and</font><font color="#CCCCCC"> that</font>

320
00:12:37,839 --> 00:12:40,600
<font color="#E5E5E5">is basically</font><font color="#CCCCCC"> giotto</font>

321
00:12:38,920 --> 00:12:44,560
that is<font color="#E5E5E5"> the control plane part of</font>

322
00:12:40,600 --> 00:12:51,070
building<font color="#E5E5E5"> coordinating network functions</font>

323
00:12:44,560 --> 00:12:54,819
based on VPP<font color="#CCCCCC"> yeah this is how it would</font>

324
00:12:51,070 --> 00:12:58,630
like<font color="#E5E5E5"> it would look like in case we</font>

325
00:12:54,820 --> 00:13:01,300
deploy this into<font color="#E5E5E5"> production what say we</font>

326
00:12:58,630 --> 00:13:04,689
have a<font color="#E5E5E5"> to host and we want to deploy</font>

327
00:13:01,300 --> 00:13:06,939
<font color="#E5E5E5">some you know coordinating</font><font color="#CCCCCC"> Network</font>

328
00:13:04,690 --> 00:13:12,010
function<font color="#E5E5E5"> that we that is represented as</font>

329
00:13:06,940 --> 00:13:14,470
a<font color="#CCCCCC"> sum chain of network functions to</font>

330
00:13:12,010 --> 00:13:17,860
which the traffic need needs<font color="#E5E5E5"> to pass in</font>

331
00:13:14,470 --> 00:13:20,070
order<font color="#CCCCCC"> to you know to</font><font color="#E5E5E5"> do the overall</font>

332
00:13:17,860 --> 00:13:25,060
<font color="#CCCCCC">network</font><font color="#E5E5E5"> function that we need to achieve</font>

333
00:13:20,070 --> 00:13:27,190
<font color="#E5E5E5">so in case of this you know you have you</font>

334
00:13:25,060 --> 00:13:31,359
have different<font color="#E5E5E5"> VP's running on on each</font>

335
00:13:27,190 --> 00:13:34,360
node<font color="#CCCCCC"> we</font><font color="#E5E5E5"> usually use one</font><font color="#CCCCCC"> of them as as</font>

336
00:13:31,360 --> 00:13:38,170
the V switch VPP<font color="#E5E5E5"> and then we we deploy</font>

337
00:13:34,360 --> 00:13:41,260
multiple CNF<font color="#E5E5E5"> on each node and you know</font>

338
00:13:38,170 --> 00:13:43,719
we need<font color="#E5E5E5"> to somehow consume the logical</font>

339
00:13:41,260 --> 00:13:46,709
representation of the service function

340
00:13:43,720 --> 00:13:50,020
and render that that into physical

341
00:13:46,709 --> 00:13:52,390
topology<font color="#E5E5E5"> which means that we need to</font>

342
00:13:50,020 --> 00:13:55,720
have a<font color="#E5E5E5"> management agent running in each</font>

343
00:13:52,390 --> 00:13:58,060
of the<font color="#E5E5E5"> containers deployed on the notes</font>

344
00:13:55,720 --> 00:13:59,050
and we need to have some entity which

345
00:13:58,060 --> 00:14:00,760
basic

346
00:13:59,050 --> 00:14:04,150
you know processes<font color="#E5E5E5"> the logical</font>

347
00:14:00,760 --> 00:14:09,630
representation<font color="#E5E5E5"> into configuration that</font>

348
00:14:04,150 --> 00:14:09,630
will be<font color="#E5E5E5"> programmed to each of the</font><font color="#CCCCCC"> VP's</font>

349
00:14:10,380 --> 00:14:16,420
and yeah as I said we<font color="#E5E5E5"> got</font><font color="#CCCCCC"> oh is a</font>

350
00:14:14,350 --> 00:14:21,160
<font color="#E5E5E5">development platform that allows</font><font color="#CCCCCC"> you to</font>

351
00:14:16,420 --> 00:14:26,380
<font color="#CCCCCC">do this it allows you</font><font color="#E5E5E5"> to the first to do</font>

352
00:14:21,160 --> 00:14:28,870
the service function<font color="#CCCCCC"> training as shown</font>

353
00:14:26,380 --> 00:14:31,660
here<font color="#E5E5E5"> part of it is a service function</font>

354
00:14:28,870 --> 00:14:34,000
controller but even most important part

355
00:14:31,660 --> 00:14:37,449
is<font color="#CCCCCC"> debate is the</font><font color="#E5E5E5"> VPP agent that we</font>

356
00:14:34,000 --> 00:14:41,230
deploy<font color="#E5E5E5"> together with VPP inside of each</font>

357
00:14:37,450 --> 00:14:45,940
container<font color="#CCCCCC"> so as we</font><font color="#E5E5E5"> decided that we want</font>

358
00:14:41,230 --> 00:14:48,310
<font color="#E5E5E5">to build network functions like this</font><font color="#CCCCCC"> we</font>

359
00:14:45,940 --> 00:14:50,850
pretty much decided that we need to

360
00:14:48,310 --> 00:14:54,369
build a new management<font color="#E5E5E5"> agent for VPP</font>

361
00:14:50,850 --> 00:14:57,760
<font color="#CCCCCC">because you know those that</font><font color="#E5E5E5"> were</font>

362
00:14:54,370 --> 00:15:03,180
available<font color="#CCCCCC"> were</font><font color="#E5E5E5"> not a really good fit for</font>

363
00:14:57,760 --> 00:15:03,180
<font color="#E5E5E5">the cloud native case yep</font>

364
00:15:06,100 --> 00:15:16,400
so in this case then<font color="#CCCCCC"> legato</font><font color="#E5E5E5"> is your</font>

365
00:15:10,070 --> 00:15:18,440
control<font color="#E5E5E5"> playing agent</font><font color="#CCCCCC"> that talks</font><font color="#E5E5E5"> to ya</font>

366
00:15:16,400 --> 00:15:21,230
in this<font color="#E5E5E5"> case we gotta actually has</font>

367
00:15:18,440 --> 00:15:24,050
several<font color="#E5E5E5"> components</font><font color="#CCCCCC"> one of the components</font>

368
00:15:21,230 --> 00:15:27,140
is the<font color="#E5E5E5"> VPP agent that sits in each of</font>

369
00:15:24,050 --> 00:15:30,290
the containers<font color="#CCCCCC"> next to the VPP</font><font color="#E5E5E5"> and is</font>

370
00:15:27,140 --> 00:15:33,350
able to<font color="#E5E5E5"> program the</font><font color="#CCCCCC"> VPP</font><font color="#E5E5E5"> and then there</font>

371
00:15:30,290 --> 00:15:35,390
is one more<font color="#E5E5E5"> component as part</font><font color="#CCCCCC"> of the</font>

372
00:15:33,350 --> 00:15:38,029
regatta project and that is<font color="#CCCCCC"> SFC</font>

373
00:15:35,390 --> 00:15:39,589
controller and<font color="#CCCCCC"> that is the component</font>

374
00:15:38,029 --> 00:15:42,670
that<font color="#E5E5E5"> is able to process the logical</font>

375
00:15:39,589 --> 00:16:06,710
representation of the chain into the

376
00:15:42,670 --> 00:16:09,589
<font color="#E5E5E5">that will need to go into and yeah well</font>

377
00:16:06,710 --> 00:16:13,790
we'll get there<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> yeah</font>

378
00:16:09,589 --> 00:16:17,390
the VPP agent is a new management<font color="#E5E5E5"> agent</font>

379
00:16:13,790 --> 00:16:22,520
for VPP<font color="#CCCCCC"> which was designed you know</font><font color="#E5E5E5"> with</font>

380
00:16:17,390 --> 00:16:25,220
with for<font color="#E5E5E5"> this called</font><font color="#CCCCCC"> native use case we</font>

381
00:16:22,520 --> 00:16:27,260
decided<font color="#E5E5E5"> to use brought about the eyes as</font>

382
00:16:25,220 --> 00:16:31,250
opposed to<font color="#CCCCCC"> net convo rest Kampf which</font>

383
00:16:27,260 --> 00:16:33,950
you can get<font color="#E5E5E5"> from from honeycomb</font><font color="#CCCCCC"> pretty</font>

384
00:16:31,250 --> 00:16:37,089
much the<font color="#E5E5E5"> same API</font><font color="#CCCCCC"> that is defined</font><font color="#E5E5E5"> by</font>

385
00:16:33,950 --> 00:16:40,610
proto messages can be<font color="#E5E5E5"> used to program</font>

386
00:16:37,089 --> 00:16:43,610
the VPP<font color="#CCCCCC"> through any transport</font><font color="#E5E5E5"> that we</font>

387
00:16:40,610 --> 00:16:48,709
support so you<font color="#CCCCCC"> can either choose our</font><font color="#E5E5E5"> PC</font>

388
00:16:43,610 --> 00:16:51,470
based way of putting the configuration

389
00:16:48,709 --> 00:16:54,310
to the agent<font color="#CCCCCC"> in which case you would use</font>

390
00:16:51,470 --> 00:16:57,050
the rest or<font color="#E5E5E5"> gr PC or you can use the</font>

391
00:16:54,310 --> 00:17:00,079
<font color="#E5E5E5">data store way of putting the</font>

392
00:16:57,050 --> 00:17:04,579
configuration to<font color="#CCCCCC"> EPP for this</font><font color="#E5E5E5"> with</font>

393
00:17:00,080 --> 00:17:07,189
support<font color="#CCCCCC"> eighty CD or</font><font color="#E5E5E5"> at this</font><font color="#CCCCCC"> ball DB and</font>

394
00:17:04,579 --> 00:17:13,909
we also do support message brokers for

395
00:17:07,189 --> 00:17:16,429
streaming notifications as as<font color="#CCCCCC"> we are</font>

396
00:17:13,910 --> 00:17:17,700
designing this we<font color="#E5E5E5"> decided to use the go</font>

397
00:17:16,429 --> 00:17:20,280
language

398
00:17:17,700 --> 00:17:22,200
to build the new agent because we knew

399
00:17:20,280 --> 00:17:24,420
from from the<font color="#E5E5E5"> very beginning that</font><font color="#CCCCCC"> we</font>

400
00:17:22,200 --> 00:17:26,370
will need to<font color="#E5E5E5"> integrate with you know</font>

401
00:17:24,420 --> 00:17:30,150
kubernetes and docker and that kind of

402
00:17:26,369 --> 00:17:34,110
stuff<font color="#E5E5E5"> so so that was pretty much clear</font>

403
00:17:30,150 --> 00:17:36,150
choice<font color="#CCCCCC"> and you know since we need to</font>

404
00:17:34,110 --> 00:17:41,070
have the agent<font color="#E5E5E5"> package into docker</font>

405
00:17:36,150 --> 00:17:44,520
container<font color="#CCCCCC"> together with VPP or to a</font><font color="#E5E5E5"> pod</font>

406
00:17:41,070 --> 00:17:47,429
together with with VPP<font color="#CCCCCC"> it also has to be</font>

407
00:17:44,520 --> 00:17:48,840
<font color="#E5E5E5">compact and small footprint which would</font>

408
00:17:47,430 --> 00:17:53,040
not be<font color="#CCCCCC"> the case for</font><font color="#E5E5E5"> the Java based</font>

409
00:17:48,840 --> 00:17:56,939
agents<font color="#E5E5E5"> but for the</font><font color="#CCCCCC"> NGO</font><font color="#E5E5E5"> based agent</font><font color="#CCCCCC"> it is</font>

410
00:17:53,040 --> 00:17:58,560
actually you know<font color="#CCCCCC"> just a static binary</font>

411
00:17:56,940 --> 00:18:04,380
that that you put into container

412
00:17:58,560 --> 00:18:06,510
<font color="#CCCCCC">together it with VPP yeah as you</font>

413
00:18:04,380 --> 00:18:10,980
probably know if<font color="#E5E5E5"> you want to program VPP</font>

414
00:18:06,510 --> 00:18:14,670
<font color="#E5E5E5">you need to use binary api's those api's</font>

415
00:18:10,980 --> 00:18:18,030
are quite low level<font color="#CCCCCC"> they use like</font>

416
00:18:14,670 --> 00:18:20,430
numeric references to interfaces and you

417
00:18:18,030 --> 00:18:24,480
get bad ordering issues there<font color="#E5E5E5"> and you</font>

418
00:18:20,430 --> 00:18:26,430
use bit flex to to configure stuff<font color="#CCCCCC"> as</font>

419
00:18:24,480 --> 00:18:29,730
part of the building the agent we we

420
00:18:26,430 --> 00:18:32,780
<font color="#CCCCCC">created the go VPP</font><font color="#E5E5E5"> project which is</font><font color="#CCCCCC"> part</font>

421
00:18:29,730 --> 00:18:36,600
of the FDI<font color="#CCCCCC"> o and</font><font color="#E5E5E5"> that is basically going</font>

422
00:18:32,780 --> 00:18:39,260
<font color="#E5E5E5">wrappers over binary api's so you have</font>

423
00:18:36,600 --> 00:18:42,659
binary<font color="#CCCCCC"> pis and</font><font color="#E5E5E5"> we we produce the</font>

424
00:18:39,260 --> 00:18:45,780
generator<font color="#E5E5E5"> that is</font><font color="#CCCCCC"> able to</font><font color="#E5E5E5"> generate the</font>

425
00:18:42,660 --> 00:18:48,300
go struct that that basically reflect

426
00:18:45,780 --> 00:18:51,870
<font color="#E5E5E5">the binary api's and part of the goal</font>

427
00:18:48,300 --> 00:18:54,120
with<font color="#CCCCCC"> P P we have small infrared</font><font color="#E5E5E5"> that is</font>

428
00:18:51,870 --> 00:18:57,330
<font color="#E5E5E5">able</font><font color="#CCCCCC"> to you know Marshall and unmarshal</font>

429
00:18:54,120 --> 00:19:01,770
the<font color="#E5E5E5"> go structs into binary and sent to</font>

430
00:18:57,330 --> 00:19:05,240
VPP<font color="#E5E5E5"> and communicate with VPP the VPP</font>

431
00:19:01,770 --> 00:19:08,250
agent<font color="#E5E5E5"> is the</font><font color="#CCCCCC"> is part of</font><font color="#E5E5E5"> the legato</font>

432
00:19:05,240 --> 00:19:13,170
platform or project<font color="#E5E5E5"> so it is not part of</font>

433
00:19:08,250 --> 00:19:16,350
the FDI<font color="#CCCCCC"> o</font><font color="#E5E5E5"> it uses go VPP to talk to VPP</font>

434
00:19:13,170 --> 00:19:21,120
<font color="#E5E5E5">and as I said</font><font color="#CCCCCC"> it provides</font><font color="#E5E5E5"> more</font>

435
00:19:16,350 --> 00:19:24,510
high-level<font color="#CCCCCC"> api's</font><font color="#E5E5E5"> so you know in</font><font color="#CCCCCC"> case you</font>

436
00:19:21,120 --> 00:19:28,010
you would need to configure VPP over

437
00:19:24,510 --> 00:19:28,010
binary pass you need to care about

438
00:19:28,289 --> 00:19:33,580
about the versioning because each

439
00:19:30,999 --> 00:19:35,739
version of VPP<font color="#E5E5E5"> may have different</font>

440
00:19:33,580 --> 00:19:38,619
version<font color="#E5E5E5"> of the binary</font><font color="#CCCCCC"> API</font><font color="#E5E5E5"> and that needs</font>

441
00:19:35,739 --> 00:19:40,869
<font color="#CCCCCC">to</font><font color="#E5E5E5"> exactly match then you need to care</font>

442
00:19:38,619 --> 00:19:42,728
about message ordering for instance if

443
00:19:40,869 --> 00:19:44,439
you want<font color="#E5E5E5"> to configure an interface and</font>

444
00:19:42,729 --> 00:19:46,059
have a static route<font color="#E5E5E5"> that is pointed</font>

445
00:19:44,440 --> 00:19:47,859
towards the<font color="#E5E5E5"> interface you've heard me</font>

446
00:19:46,059 --> 00:19:50,320
first need to create<font color="#CCCCCC"> the interface</font><font color="#E5E5E5"> apply</font>

447
00:19:47,859 --> 00:19:54,580
IP address and then create the<font color="#CCCCCC"> static</font>

448
00:19:50,320 --> 00:19:57,218
route<font color="#CCCCCC"> so this is what VPP agent does for</font>

449
00:19:54,580 --> 00:19:58,960
you<font color="#CCCCCC"> you just put everything</font><font color="#E5E5E5"> what do you</font>

450
00:19:57,219 --> 00:20:01,299
need to have configured on VPP to the

451
00:19:58,960 --> 00:20:03,429
VPP agent and it would automatically

452
00:20:01,299 --> 00:20:07,658
handle all dependencies<font color="#E5E5E5"> between the</font>

453
00:20:03,429 --> 00:20:10,929
configuration items it would handle some

454
00:20:07,659 --> 00:20:14,499
error<font color="#E5E5E5"> states so it is able to to do the</font>

455
00:20:10,929 --> 00:20:18,909
<font color="#CCCCCC">rich on</font><font color="#E5E5E5"> error or some auto hearing it is</font>

456
00:20:14,499 --> 00:20:22,629
able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> handle restarts etc it is</font><font color="#CCCCCC"> also</font>

457
00:20:18,909 --> 00:20:26,769
<font color="#E5E5E5">very modular</font><font color="#CCCCCC"> so if VPP</font><font color="#E5E5E5"> is set of</font>

458
00:20:22,629 --> 00:20:29,080
<font color="#CCCCCC">plug-ins for for the you know forwarding</font>

459
00:20:26,769 --> 00:20:34,570
<font color="#E5E5E5">then</font><font color="#CCCCCC"> VPP agent is a set of plugins</font>

460
00:20:29,080 --> 00:20:37,359
plugins for management<font color="#E5E5E5"> so if</font><font color="#CCCCCC"> you for</font>

461
00:20:34,570 --> 00:20:41,439
instance<font color="#E5E5E5"> develop a new new VPP feature</font>

462
00:20:37,359 --> 00:20:45,339
<font color="#E5E5E5">it would build it into a VPP</font><font color="#CCCCCC"> plug-in you</font>

463
00:20:41,440 --> 00:20:47,589
can<font color="#E5E5E5"> similarly be</font><font color="#CCCCCC"> bribed</font><font color="#E5E5E5"> a new plugin for</font>

464
00:20:45,339 --> 00:20:52,690
<font color="#E5E5E5">the VPP agent and just put it into the</font>

465
00:20:47,589 --> 00:20:55,149
intra and<font color="#CCCCCC"> be peep agent</font><font color="#E5E5E5"> with package</font>

466
00:20:52,690 --> 00:20:58,960
together<font color="#E5E5E5"> into a docker container with</font>

467
00:20:55,149 --> 00:21:01,839
VPP<font color="#E5E5E5"> so if you take any version of the</font>

468
00:20:58,960 --> 00:21:04,679
VPP agent<font color="#CCCCCC"> docker container</font><font color="#E5E5E5"> you always</font>

469
00:21:01,839 --> 00:21:07,869
have the management<font color="#E5E5E5"> agent with VPP</font>

470
00:21:04,679 --> 00:21:13,509
inside<font color="#E5E5E5"> the same container image so you</font>

471
00:21:07,869 --> 00:21:15,399
have no versioning issues<font color="#CCCCCC"> this is this</font>

472
00:21:13,509 --> 00:21:18,159
<font color="#E5E5E5">picture</font><font color="#CCCCCC"> shows some architecture of the</font>

473
00:21:15,399 --> 00:21:21,399
VPP agent as I said you know the center

474
00:21:18,159 --> 00:21:25,229
part is is the plugins that<font color="#CCCCCC"> are used to</font>

475
00:21:21,399 --> 00:21:28,658
configure VPP to binary<font color="#CCCCCC"> API</font>

476
00:21:25,229 --> 00:21:31,149
apart from VPP we do have also<font color="#E5E5E5"> Linux</font>

477
00:21:28,659 --> 00:21:34,960
<font color="#E5E5E5">plug-in which can configure</font><font color="#CCCCCC"> you know the</font>

478
00:21:31,149 --> 00:21:37,120
the Linux interfaces and stuff<font color="#CCCCCC"> like that</font>

479
00:21:34,960 --> 00:21:39,610
which<font color="#E5E5E5"> is needed</font>

480
00:21:37,120 --> 00:21:43,139
in case you need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> these four</font>

481
00:21:39,610 --> 00:21:46,389
containers<font color="#E5E5E5"> and the bottom part is the</font>

482
00:21:43,140 --> 00:21:50,920
<font color="#E5E5E5">api's that they'll be exposed as I said</font>

483
00:21:46,390 --> 00:21:54,310
you would use the same same protobuf API

484
00:21:50,920 --> 00:21:59,950
data model<font color="#CCCCCC"> for any transport</font><font color="#E5E5E5"> that we</font>

485
00:21:54,310 --> 00:22:01,750
support yeah and so<font color="#E5E5E5"> this was basically</font>

486
00:21:59,950 --> 00:22:04,480
<font color="#E5E5E5">the infrastructure part they got a</font>

487
00:22:01,750 --> 00:22:08,500
project<font color="#CCCCCC"> so as I said that</font><font color="#E5E5E5"> we got</font><font color="#CCCCCC"> to</font>

488
00:22:04,480 --> 00:22:10,900
<font color="#E5E5E5">provides the VPP agent plus the service</font>

489
00:22:08,500 --> 00:22:16,540
function chain controller which can be

490
00:22:10,900 --> 00:22:18,550
used<font color="#E5E5E5"> to build</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> providing chains the</font>

491
00:22:16,540 --> 00:22:21,520
<font color="#CCCCCC">continuity P is actually actually an</font>

492
00:22:18,550 --> 00:22:23,879
<font color="#CCCCCC">application of the VPP agent</font><font color="#E5E5E5"> so we took</font>

493
00:22:21,520 --> 00:22:27,520
the VPP agent and integrated it into

494
00:22:23,880 --> 00:22:32,230
kubernetes<font color="#CCCCCC"> ecosystem</font><font color="#E5E5E5"> basically we</font><font color="#CCCCCC"> just</font>

495
00:22:27,520 --> 00:22:36,670
extend it<font color="#CCCCCC"> the API is of the VPP agent</font><font color="#E5E5E5"> in</font>

496
00:22:32,230 --> 00:22:40,360
the<font color="#E5E5E5"> regatta project and you know we just</font>

497
00:22:36,670 --> 00:22:42,640
<font color="#CCCCCC">added kubernetes api</font><font color="#E5E5E5"> on top of it and as</font>

498
00:22:40,360 --> 00:22:44,590
the result<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that accountability is</font>

499
00:22:42,640 --> 00:22:47,350
basically a<font color="#E5E5E5"> scene i plug in</font><font color="#CCCCCC"> generic</font>

500
00:22:44,590 --> 00:22:50,889
<font color="#CCCCCC">scene</font><font color="#E5E5E5"> I plug in which can be used in any</font>

501
00:22:47,350 --> 00:22:53,100
kubernetes cluster<font color="#CCCCCC"> and if you deploy</font><font color="#E5E5E5"> it</font>

502
00:22:50,890 --> 00:22:57,010
<font color="#CCCCCC">you get VPP running on each node</font>

503
00:22:53,100 --> 00:23:00,219
<font color="#E5E5E5">providing the</font><font color="#CCCCCC"> the connectivity to to the</font>

504
00:22:57,010 --> 00:23:02,410
containers<font color="#E5E5E5"> and at the same time it's</font>

505
00:23:00,220 --> 00:23:05,170
still<font color="#E5E5E5"> exposes the same API</font><font color="#CCCCCC"> says delegate</font>

506
00:23:02,410 --> 00:23:07,390
<font color="#E5E5E5">a</font><font color="#CCCCCC"> VPP agent</font><font color="#E5E5E5"> so if you want to you know</font>

507
00:23:05,170 --> 00:23:10,030
if you want to<font color="#E5E5E5"> extend the default</font>

508
00:23:07,390 --> 00:23:12,430
<font color="#CCCCCC">behavior of</font><font color="#E5E5E5"> the CNI plugin you just use</font>

509
00:23:10,030 --> 00:23:14,590
those<font color="#E5E5E5"> API</font><font color="#CCCCCC"> stew you know for instance</font>

510
00:23:12,430 --> 00:23:17,230
create<font color="#E5E5E5"> a new interface into into the pot</font>

511
00:23:14,590 --> 00:23:23,909
<font color="#E5E5E5">which would be used for</font><font color="#CCCCCC"> some different</font>

512
00:23:17,230 --> 00:23:27,370
<font color="#E5E5E5">purpose</font><font color="#CCCCCC"> this shows some architecture of</font>

513
00:23:23,910 --> 00:23:29,620
<font color="#CCCCCC">County VP P</font><font color="#E5E5E5"> so it continued after</font>

514
00:23:27,370 --> 00:23:31,870
<font color="#CCCCCC">deployed</font><font color="#E5E5E5"> you you get</font><font color="#CCCCCC"> a country</font><font color="#E5E5E5"> with</font>

515
00:23:29,620 --> 00:23:34,570
<font color="#CCCCCC">switch running on each node in the</font>

516
00:23:31,870 --> 00:23:37,510
kubernetes cluster inside of the V

517
00:23:34,570 --> 00:23:42,070
switch<font color="#E5E5E5"> pot you have VPP and the</font><font color="#CCCCCC"> VPP</font>

518
00:23:37,510 --> 00:23:45,610
<font color="#E5E5E5">agent and of course you can you can use</font>

519
00:23:42,070 --> 00:23:48,519
the<font color="#E5E5E5"> API is to somehow program the VPP</font>

520
00:23:45,610 --> 00:23:51,428
but you automatically get the

521
00:23:48,519 --> 00:23:54,129
gramming of the kubernetes<font color="#E5E5E5"> pods</font>

522
00:23:51,429 --> 00:23:57,879
connectivity from cubelet<font color="#CCCCCC"> through</font>

523
00:23:54,129 --> 00:24:01,109
<font color="#E5E5E5">Kentucky</font><font color="#CCCCCC"> and I and you</font><font color="#E5E5E5"> know apart from</font>

524
00:23:57,879 --> 00:24:03,428
from the<font color="#E5E5E5"> CNI</font><font color="#CCCCCC"> plugin we have another</font>

525
00:24:01,109 --> 00:24:06,609
another<font color="#E5E5E5"> connection to the kubernetes</font>

526
00:24:03,429 --> 00:24:09,719
<font color="#E5E5E5">state of of the cluster</font><font color="#CCCCCC"> to our</font>

527
00:24:06,609 --> 00:24:12,129
components come to<font color="#E5E5E5"> see</font><font color="#CCCCCC"> Rd and case</font><font color="#E5E5E5"> are</font>

528
00:24:09,719 --> 00:24:16,479
which<font color="#E5E5E5"> are basically just the reflectors</font>

529
00:24:12,129 --> 00:24:19,178
of<font color="#E5E5E5"> the kubernetes</font><font color="#CCCCCC"> you know</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> own the</font>

530
00:24:16,479 --> 00:24:22,389
cluster into<font color="#E5E5E5"> our instance of a TC</font><font color="#CCCCCC"> d</font>

531
00:24:19,179 --> 00:24:27,579
which<font color="#CCCCCC"> is basically conceived consumed by</font>

532
00:24:22,389 --> 00:24:30,488
<font color="#CCCCCC">each</font><font color="#E5E5E5"> agent in the cluster</font><font color="#CCCCCC"> this is how</font>

533
00:24:27,579 --> 00:24:34,479
networking looks like if<font color="#E5E5E5"> you used County</font>

534
00:24:30,489 --> 00:24:36,669
<font color="#E5E5E5">VP P this one</font><font color="#CCCCCC"> two node cluster</font><font color="#E5E5E5"> or multi</font>

535
00:24:34,479 --> 00:24:39,759
node cluster<font color="#E5E5E5"> this is what you get by</font>

536
00:24:36,669 --> 00:24:45,849
<font color="#CCCCCC">default so as I said one VPP on each</font>

537
00:24:39,759 --> 00:24:51,159
node connected to two data interface

538
00:24:45,849 --> 00:24:56,829
through the PDK interface and then we

539
00:24:51,159 --> 00:24:59,019
have one<font color="#CCCCCC"> verb for pots we that this</font><font color="#E5E5E5"> is</font>

540
00:24:56,829 --> 00:25:01,479
basically<font color="#CCCCCC"> just a preparation writer we</font>

541
00:24:59,019 --> 00:25:04,499
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to provide multi-tenancy so you</font>

542
00:25:01,479 --> 00:25:07,359
could have multiple verbs pertinent<font color="#E5E5E5"> and</font>

543
00:25:04,499 --> 00:25:09,519
each verb could be you<font color="#CCCCCC"> know each set of</font>

544
00:25:07,359 --> 00:25:11,739
<font color="#E5E5E5">the</font><font color="#CCCCCC"> pots could</font><font color="#E5E5E5"> be separated from from</font>

545
00:25:09,519 --> 00:25:13,659
the<font color="#E5E5E5"> other tenants and then you have a</font>

546
00:25:11,739 --> 00:25:17,109
<font color="#E5E5E5">british domain that is used to</font>

547
00:25:13,659 --> 00:25:18,729
<font color="#E5E5E5">interconnect to form the overall a</font>

548
00:25:17,109 --> 00:25:23,259
network and interconnect between the

549
00:25:18,729 --> 00:25:25,509
nodes<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> pot</font><font color="#E5E5E5"> is by</font>

550
00:25:23,259 --> 00:25:29,379
<font color="#E5E5E5">default connected to VPP to</font><font color="#CCCCCC"> a tab</font>

551
00:25:25,509 --> 00:25:32,109
interface<font color="#E5E5E5"> only</font><font color="#CCCCCC"> because we need to</font>

552
00:25:29,379 --> 00:25:34,478
support any generic application so

553
00:25:32,109 --> 00:25:36,820
either you have you know<font color="#E5E5E5"> web server</font><font color="#CCCCCC"> or</font>

554
00:25:34,479 --> 00:25:40,450
database running<font color="#E5E5E5"> in the pot it needs to</font>

555
00:25:36,820 --> 00:25:44,859
work<font color="#CCCCCC"> but of</font><font color="#E5E5E5"> course there are options for</font>

556
00:25:40,450 --> 00:25:47,889
for faster connections than<font color="#CCCCCC"> than</font><font color="#E5E5E5"> the tab</font>

557
00:25:44,859 --> 00:25:51,668
interfaces<font color="#E5E5E5"> and that would be on the</font><font color="#CCCCCC"> next</font>

558
00:25:47,889 --> 00:25:54,458
slide so<font color="#CCCCCC"> what i've shown</font><font color="#E5E5E5"> on the</font><font color="#CCCCCC"> previous</font>

559
00:25:51,669 --> 00:25:58,169
slide is<font color="#CCCCCC"> basically this cloud worth part</font>

560
00:25:54,459 --> 00:26:01,260
of the picture<font color="#CCCCCC"> so if you</font><font color="#E5E5E5"> deploy a</font><font color="#CCCCCC"> county</font>

561
00:25:58,169 --> 00:26:04,950
<font color="#E5E5E5">automatically with each pot</font>

562
00:26:01,260 --> 00:26:08,879
you would get an interface connected to

563
00:26:04,950 --> 00:26:12,360
the cloud<font color="#E5E5E5"> the</font><font color="#CCCCCC"> verve</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> comte</font><font color="#E5E5E5"> VPP running</font>

564
00:26:08,880 --> 00:26:15,210
on<font color="#CCCCCC"> the host</font><font color="#E5E5E5"> and as</font><font color="#CCCCCC"> i said you can still</font>

565
00:26:12,360 --> 00:26:17,879
use all<font color="#E5E5E5"> the api that we provide</font>

566
00:26:15,210 --> 00:26:22,110
<font color="#E5E5E5">interrogative</font><font color="#CCCCCC"> EPP agent to for</font><font color="#E5E5E5"> instance</font>

567
00:26:17,880 --> 00:26:24,600
create<font color="#E5E5E5"> faster data plane</font><font color="#CCCCCC"> interfaith</font>

568
00:26:22,110 --> 00:26:27,389
interconnects between the<font color="#E5E5E5"> V switch VPP</font>

569
00:26:24,600 --> 00:26:31,020
<font color="#E5E5E5">and the VPP that might be running in the</font>

570
00:26:27,390 --> 00:26:33,120
container and you can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> SFC controller</font>

571
00:26:31,020 --> 00:26:35,490
which is<font color="#E5E5E5"> part of the legato part to</font>

572
00:26:33,120 --> 00:26:39,620
orchestrate by basically<font color="#CCCCCC"> this this left</font>

573
00:26:35,490 --> 00:26:39,620
part<font color="#E5E5E5"> of of the</font><font color="#CCCCCC"> wrist which picture</font>

574
00:26:46,320 --> 00:26:51,570
well<font color="#CCCCCC"> SFC control is part of the legato</font>

575
00:26:48,539 --> 00:26:54,570
project is<font color="#E5E5E5"> open</font><font color="#CCCCCC"> sourced and the Conti</font>

576
00:26:51,570 --> 00:26:56,339
<font color="#CCCCCC">bpp is just you</font><font color="#E5E5E5"> know this is part of the</font>

577
00:26:54,570 --> 00:26:59,718
<font color="#CCCCCC">picture</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can deploy it together</font>

578
00:26:56,339 --> 00:26:59,719
on<font color="#E5E5E5"> the same cluster</font>

579
00:27:05,480 --> 00:27:12,680
currently the SFC has<font color="#E5E5E5"> only its own API</font>

580
00:27:09,430 --> 00:27:14,780
<font color="#CCCCCC">but there are other options</font><font color="#E5E5E5"> you can you</font>

581
00:27:12,680 --> 00:27:16,700
can<font color="#E5E5E5"> actually use something</font><font color="#CCCCCC"> else instead</font>

582
00:27:14,780 --> 00:27:19,790
of<font color="#CCCCCC"> SMC controller for instance there is</font>

583
00:27:16,700 --> 00:27:21,830
<font color="#E5E5E5">a network service mesh concept and that</font>

584
00:27:19,790 --> 00:27:27,320
<font color="#E5E5E5">would be another way</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> doing this these</font>

585
00:27:21,830 --> 00:27:30,699
<font color="#E5E5E5">chains</font><font color="#CCCCCC"> okay I</font><font color="#E5E5E5"> think we are running</font><font color="#CCCCCC"> over</font>

586
00:27:27,320 --> 00:27:33,649
time so I'll<font color="#CCCCCC"> just briefly go through</font>

587
00:27:30,700 --> 00:27:38,210
some old balancing stuff that we do with

588
00:27:33,650 --> 00:27:41,060
County VPP<font color="#E5E5E5"> with</font><font color="#CCCCCC"> tip is PC and I we</font>

589
00:27:38,210 --> 00:27:42,710
have our<font color="#CCCCCC"> own implementation of to proxy</font>

590
00:27:41,060 --> 00:27:46,520
which is<font color="#E5E5E5"> running completely in the user</font>

591
00:27:42,710 --> 00:27:50,690
space<font color="#E5E5E5"> within VPP</font><font color="#CCCCCC"> this shows how</font><font color="#E5E5E5"> the</font>

592
00:27:46,520 --> 00:27:52,879
programming of the cube proxy looks like

593
00:27:50,690 --> 00:27:56,630
quite complex complex and complicated

594
00:27:52,880 --> 00:27:58,520
<font color="#CCCCCC">but the key message is that you know we</font>

595
00:27:56,630 --> 00:28:02,630
do<font color="#CCCCCC"> all the load balancing and</font><font color="#E5E5E5"> netting on</font>

596
00:27:58,520 --> 00:28:06,860
VPP<font color="#CCCCCC"> so so you don't need to run Q proxy</font>

597
00:28:02,630 --> 00:28:08,870
<font color="#E5E5E5">unless you want to have a port</font><font color="#CCCCCC"> that is</font>

598
00:28:06,860 --> 00:28:11,060
<font color="#E5E5E5">connected to the host networking in</font>

599
00:28:08,870 --> 00:28:15,790
which case you could still<font color="#CCCCCC"> use Q perk c2</font>

600
00:28:11,060 --> 00:28:19,129
to do the load balancing and netting

601
00:28:15,790 --> 00:28:21,530
<font color="#CCCCCC">this example</font><font color="#E5E5E5"> shows some deployment with</font>

602
00:28:19,130 --> 00:28:24,950
<font color="#E5E5E5">County VPP there is actually a mistake</font><font color="#CCCCCC"> I</font>

603
00:28:21,530 --> 00:28:26,690
have two replicas<font color="#E5E5E5"> of engines</font><font color="#CCCCCC"> defined</font>

604
00:28:24,950 --> 00:28:29,690
here<font color="#E5E5E5"> but there are three replicas</font>

605
00:28:26,690 --> 00:28:33,860
running in the actual cluster so I

606
00:28:29,690 --> 00:28:37,550
defined replica<font color="#E5E5E5"> set with with three web</font>

607
00:28:33,860 --> 00:28:40,729
servers<font color="#CCCCCC"> I covered that</font><font color="#E5E5E5"> by a service of</font>

608
00:28:37,550 --> 00:28:45,889
<font color="#CCCCCC">tied balancer</font><font color="#E5E5E5"> which exposes basically</font>

609
00:28:40,730 --> 00:28:50,960
two virtual IP addresses that<font color="#CCCCCC"> are not it</font>

610
00:28:45,890 --> 00:28:53,000
<font color="#E5E5E5">to one of those backends</font><font color="#CCCCCC"> in case of</font>

611
00:28:50,960 --> 00:28:55,910
cluster IP that<font color="#CCCCCC"> is an IP address that</font>

612
00:28:53,000 --> 00:28:57,950
works within<font color="#E5E5E5"> the cluster instan case of</font>

613
00:28:55,910 --> 00:29:00,710
external<font color="#CCCCCC"> IP you need to have an external</font>

614
00:28:57,950 --> 00:29:03,230
external load balancer<font color="#E5E5E5"> in this case we</font>

615
00:29:00,710 --> 00:29:08,030
have<font color="#CCCCCC"> metal build balancer that</font><font color="#E5E5E5"> is</font>

616
00:29:03,230 --> 00:29:11,690
<font color="#E5E5E5">configured here running in LT mode</font><font color="#CCCCCC"> this</font>

617
00:29:08,030 --> 00:29:12,549
would be the configuration of VPP that

618
00:29:11,690 --> 00:29:15,969
is rendered

619
00:29:12,549 --> 00:29:18,029
that that type of<font color="#CCCCCC"> deployment so we have</font>

620
00:29:15,969 --> 00:29:22,509
a<font color="#E5E5E5"> one</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> gigabit ethernet</font>

621
00:29:18,029 --> 00:29:25,419
interface that is the PDK interface used

622
00:29:22,509 --> 00:29:27,549
for connecting<font color="#CCCCCC"> the note this one tab</font>

623
00:29:25,419 --> 00:29:31,029
interface is actually<font color="#CCCCCC"> the interface</font><font color="#E5E5E5"> that</font>

624
00:29:27,549 --> 00:29:33,580
goes to the<font color="#E5E5E5"> top to the pot and those the</font>

625
00:29:31,029 --> 00:29:36,609
excellent tunnels are tunnels<font color="#E5E5E5"> that go to</font>

626
00:29:33,580 --> 00:29:40,208
the other nodes in<font color="#E5E5E5"> the cluster</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

627
00:29:36,609 --> 00:29:42,519
the nut<font color="#E5E5E5"> rule for the service</font><font color="#CCCCCC"> that I have</font>

628
00:29:40,209 --> 00:29:44,889
just deployed on<font color="#CCCCCC"> the previous slide</font><font color="#E5E5E5"> so</font>

629
00:29:42,519 --> 00:29:48,159
you<font color="#E5E5E5"> can see the ball both virtual IP</font>

630
00:29:44,889 --> 00:29:52,570
addresses are not it<font color="#CCCCCC"> to local IP</font>

631
00:29:48,159 --> 00:29:55,119
addresses of<font color="#E5E5E5"> the pot and for the for the</font>

632
00:29:52,570 --> 00:29:59,559
external IP<font color="#E5E5E5"> one of the VP's in the</font>

633
00:29:55,119 --> 00:30:02,678
cluster<font color="#E5E5E5"> act as or responds to</font><font color="#CCCCCC"> Arps using</font>

634
00:29:59,559 --> 00:30:05,469
the proxy art so in case<font color="#E5E5E5"> we had this</font>

635
00:30:02,679 --> 00:30:10,749
kind of<font color="#CCCCCC"> deployment</font><font color="#E5E5E5"> to note external load</font>

636
00:30:05,469 --> 00:30:13,359
balancer<font color="#E5E5E5"> Sam Rooter then you know this</font>

637
00:30:10,749 --> 00:30:16,719
VPP for<font color="#E5E5E5"> instead instance would respond</font>

638
00:30:13,359 --> 00:30:19,449
to<font color="#CCCCCC"> that ARP request</font><font color="#E5E5E5"> for that virtual</font><font color="#CCCCCC"> IP</font>

639
00:30:16,719 --> 00:30:22,539
and all the traffic<font color="#E5E5E5"> would</font><font color="#CCCCCC"> be basically</font>

640
00:30:19,450 --> 00:30:25,539
routed towards this node and together

641
00:30:22,539 --> 00:30:28,929
with traffic policy cluster it can be

642
00:30:25,539 --> 00:30:32,469
still all balanced on VPP to the other

643
00:30:28,929 --> 00:30:35,349
node there is another mode of<font color="#E5E5E5"> running</font>

644
00:30:32,469 --> 00:30:40,089
these kinds of kind of topologies and

645
00:30:35,349 --> 00:30:43,359
<font color="#CCCCCC">that is BGP based in which case you know</font>

646
00:30:40,089 --> 00:30:46,658
<font color="#E5E5E5">both DPP's would would advertise those</font>

647
00:30:43,359 --> 00:30:50,799
virtual IP<font color="#CCCCCC"> to to the router</font><font color="#E5E5E5"> and then you</font>

648
00:30:46,659 --> 00:30:52,570
could have a proper<font color="#E5E5E5"> all don't think so</font>

649
00:30:50,799 --> 00:30:57,929
this is one<font color="#CCCCCC"> of the applications of the</font>

650
00:30:52,570 --> 00:31:01,958
<font color="#CCCCCC">legato</font><font color="#E5E5E5"> VPP agent</font><font color="#CCCCCC"> actually and now Giles</font>

651
00:30:57,929 --> 00:31:04,149
<font color="#CCCCCC">will affirm</font><font color="#E5E5E5"> rather quickly but yeah this</font>

652
00:31:01,959 --> 00:31:05,320
<font color="#E5E5E5">is another application newer and I guess</font>

653
00:31:04,149 --> 00:31:07,689
you have seen by history

654
00:31:05,320 --> 00:31:10,559
yeah the first<font color="#CCCCCC"> thing we did with the</font>

655
00:31:07,690 --> 00:31:13,269
gospel<font color="#CCCCCC"> actually was a</font><font color="#E5E5E5"> cloud-based cmts</font>

656
00:31:10,559 --> 00:31:15,849
<font color="#E5E5E5">which i think is this was announced</font><font color="#CCCCCC"> last</font>

657
00:31:13,269 --> 00:31:17,200
<font color="#CCCCCC">year</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> that was sort of internal</font>

658
00:31:15,849 --> 00:31:18,519
proprietary and if you want to if you

659
00:31:17,200 --> 00:31:20,529
want<font color="#CCCCCC"> to do cable broadband here's a</font>

660
00:31:18,519 --> 00:31:22,550
cloud base we're doing it the next<font color="#CCCCCC"> thing</font>

661
00:31:20,529 --> 00:31:24,470
<font color="#CCCCCC">was conceived</font><font color="#E5E5E5"> VPP which we open sort</font>

662
00:31:22,550 --> 00:31:26,540
and then we're now looking at other

663
00:31:24,470 --> 00:31:31,190
<font color="#CCCCCC">applications and</font><font color="#E5E5E5"> here's example which is</font>

664
00:31:26,540 --> 00:31:33,470
<font color="#E5E5E5">IPSec so VPP has IPSec today</font><font color="#CCCCCC"> it has a</font>

665
00:31:31,190 --> 00:31:35,750
full implementation with the<font color="#E5E5E5"> forwarding</font>

666
00:31:33,470 --> 00:31:39,170
planes like you say<font color="#E5E5E5"> ESP silent transport</font>

667
00:31:35,750 --> 00:31:40,550
<font color="#E5E5E5">v4 v6</font><font color="#CCCCCC"> all the various authentication and</font>

668
00:31:39,170 --> 00:31:42,980
encryption algorithms<font color="#E5E5E5"> at every</font><font color="#CCCCCC"> turn</font>

669
00:31:40,550 --> 00:31:45,620
<font color="#CCCCCC">sound on the control plane</font><font color="#E5E5E5"> slide it has</font>

670
00:31:42,980 --> 00:31:47,990
<font color="#E5E5E5">an</font><font color="#CCCCCC"> IV to initiation responder capability</font>

671
00:31:45,620 --> 00:31:51,469
and<font color="#E5E5E5"> that has been</font><font color="#CCCCCC"> interrupts tested with</font>

672
00:31:47,990 --> 00:31:52,730
very subst at but the<font color="#E5E5E5"> I guess what we're</font>

673
00:31:51,470 --> 00:31:55,850
seeing though is that<font color="#E5E5E5"> people</font><font color="#CCCCCC"> are saying</font>

674
00:31:52,730 --> 00:31:57,710
well VPP is more about data plane and

675
00:31:55,850 --> 00:31:59,240
these existing control planes like

676
00:31:57,710 --> 00:32:01,640
strongswan a very popular very

677
00:31:59,240 --> 00:32:03,710
well-known and well-understood and they

678
00:32:01,640 --> 00:32:05,150
have you<font color="#CCCCCC"> know great tha modes</font><font color="#E5E5E5"> and that</font>

679
00:32:03,710 --> 00:32:07,670
kind of stuff<font color="#CCCCCC"> so why don't we leverage</font>

680
00:32:05,150 --> 00:32:09,080
those so today<font color="#E5E5E5"> typically we see</font>

681
00:32:07,670 --> 00:32:11,390
deployments where people are rolling<font color="#E5E5E5"> out</font>

682
00:32:09,080 --> 00:32:13,669
strong spawn in virtual<font color="#CCCCCC"> machines</font><font color="#E5E5E5"> and I</font>

683
00:32:11,390 --> 00:32:16,340
don't<font color="#CCCCCC"> just</font><font color="#E5E5E5"> be a strong smart demon using</font>

684
00:32:13,670 --> 00:32:19,309
the<font color="#E5E5E5"> Linux kernel for its forwarding you</font>

685
00:32:16,340 --> 00:32:21,830
know programming<font color="#CCCCCC"> it through netfilter</font><font color="#E5E5E5"> so</font>

686
00:32:19,309 --> 00:32:24,110
the first step is to<font color="#E5E5E5"> it's like</font><font color="#CCCCCC"> bppm to</font>

687
00:32:21,830 --> 00:32:26,149
the<font color="#E5E5E5"> VM and again we can there's a couple</font>

688
00:32:24,110 --> 00:32:27,469
ways we<font color="#E5E5E5"> can handle</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we've done</font>

689
00:32:26,150 --> 00:32:29,690
<font color="#E5E5E5">things like intercepting</font><font color="#CCCCCC"> that filter</font>

690
00:32:27,470 --> 00:32:31,940
calls<font color="#E5E5E5"> but ultimately</font><font color="#CCCCCC"> strongswan</font><font color="#E5E5E5"> has some</font>

691
00:32:29,690 --> 00:32:34,520
physical<font color="#CCCCCC"> VG it has its own kind</font><font color="#E5E5E5"> API for</font>

692
00:32:31,940 --> 00:32:37,880
<font color="#E5E5E5">hooking things in so we're</font><font color="#CCCCCC"> integrating</font>

693
00:32:34,520 --> 00:32:39,559
for that<font color="#CCCCCC"> but really</font><font color="#E5E5E5"> you know where I</font>

694
00:32:37,880 --> 00:32:43,580
want<font color="#E5E5E5"> to get to is these containerized</font>

695
00:32:39,559 --> 00:32:46,250
deployment so having<font color="#E5E5E5"> a separate some</font>

696
00:32:43,580 --> 00:32:47,870
<font color="#E5E5E5">containerized instance of</font><font color="#CCCCCC"> that and then</font>

697
00:32:46,250 --> 00:32:50,960
still having<font color="#E5E5E5"> a V switch in front of it</font>

698
00:32:47,870 --> 00:32:53,270
and as rust I was talking about with

699
00:32:50,960 --> 00:32:55,790
<font color="#E5E5E5">mammoths so you know a single copy</font>

700
00:32:53,270 --> 00:32:57,559
memory interface between<font color="#E5E5E5"> a V switch</font>

701
00:32:55,790 --> 00:32:59,780
instance which might be doing<font color="#E5E5E5"> the</font>

702
00:32:57,559 --> 00:33:02,420
<font color="#CCCCCC">expands funneling or whatever to talk to</font>

703
00:32:59,780 --> 00:33:04,190
the<font color="#CCCCCC"> outside world</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> then the</font><font color="#E5E5E5"> VPP</font>

704
00:33:02,420 --> 00:33:09,110
instance in the container that's doing

705
00:33:04,190 --> 00:33:12,790
IPSec<font color="#E5E5E5"> very strong story about</font>

706
00:33:09,110 --> 00:33:12,790
integrating kubernetes<font color="#E5E5E5"> yes</font>

707
00:33:14,460 --> 00:33:19,110
<font color="#CCCCCC">the content</font><font color="#E5E5E5"> and then look at the local</font>

708
00:33:16,140 --> 00:33:23,120
<font color="#CCCCCC">agent where the</font><font color="#E5E5E5"> spunks on flame this is</font>

709
00:33:19,110 --> 00:33:23,120
it are you building<font color="#E5E5E5"> something like a</font>

710
00:33:23,540 --> 00:33:27,120
yeah this<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> can I saw</font><font color="#CCCCCC"> seed</font>

711
00:33:25,920 --> 00:33:29,670
still have and I guess<font color="#CCCCCC"> that's what we</font>

712
00:33:27,120 --> 00:33:32,340
come<font color="#CCCCCC"> on to eventually you'll integrate</font>

713
00:33:29,670 --> 00:33:34,740
with kubernetes<font color="#CCCCCC"> so using something like</font>

714
00:33:32,340 --> 00:33:36,480
<font color="#E5E5E5">conceive EPP the benefit of conceived</font>

715
00:33:34,740 --> 00:33:38,280
<font color="#CCCCCC">EVP I guess is that we just run</font><font color="#E5E5E5"> one V</font>

716
00:33:36,480 --> 00:33:40,200
switch for both the sort of<font color="#CCCCCC"> IP set data</font>

717
00:33:38,280 --> 00:33:42,510
plane but also for the kubernetes<font color="#E5E5E5"> and</font>

718
00:33:40,200 --> 00:33:44,310
control and management plane<font color="#E5E5E5"> but I guess</font>

719
00:33:42,510 --> 00:33:47,129
the<font color="#E5E5E5"> other</font><font color="#CCCCCC"> thing to</font><font color="#E5E5E5"> think about with the</font>

720
00:33:44,310 --> 00:33:49,560
stuff<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't miss I know there's talk</font>

721
00:33:47,130 --> 00:33:51,840
coming up on the next one<font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> it about</font>

722
00:33:49,560 --> 00:33:53,070
maltose and stuff like that and<font color="#E5E5E5"> I guess</font>

723
00:33:51,840 --> 00:33:54,720
that's what's<font color="#CCCCCC"> interesting is these</font>

724
00:33:53,070 --> 00:33:56,399
<font color="#CCCCCC">different approaches you know our</font>

725
00:33:54,720 --> 00:33:58,080
approach is<font color="#CCCCCC"> to say well let's just have</font>

726
00:33:56,400 --> 00:34:00,000
one interface<font color="#E5E5E5"> living at ease knows about</font>

727
00:33:58,080 --> 00:34:01,500
<font color="#E5E5E5">use that the controller management plane</font>

728
00:34:00,000 --> 00:34:03,330
and then we spin<font color="#CCCCCC"> up</font><font color="#E5E5E5"> these additional</font>

729
00:34:01,500 --> 00:34:06,540
interfaces through the<font color="#E5E5E5"> gossip SOC</font>

730
00:34:03,330 --> 00:34:07,830
controller in this case<font color="#E5E5E5"> for hello</font><font color="#CCCCCC"> almost</font>

731
00:34:06,540 --> 00:34:10,020
<font color="#E5E5E5">like a strong spawn controller that's</font>

732
00:34:07,830 --> 00:34:11,940
based on the SFC controller<font color="#CCCCCC"> and those</font>

733
00:34:10,020 --> 00:34:15,750
that kind<font color="#E5E5E5"> of off</font><font color="#CCCCCC"> on the side</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> connect</font>

734
00:34:11,940 --> 00:34:18,540
is my V and we use those<font color="#CCCCCC"> for</font><font color="#E5E5E5"> the network</font>

735
00:34:15,750 --> 00:34:22,250
explains but that's the<font color="#E5E5E5"> kind of end goal</font>

736
00:34:18,540 --> 00:34:24,449
is<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have it yeah so kubernetes can</font>

737
00:34:22,250 --> 00:34:26,520
<font color="#CCCCCC">then kubernetes can take care</font><font color="#E5E5E5"> of</font>

738
00:34:24,449 --> 00:34:27,929
replacement piece of saying okay<font color="#E5E5E5"> you</font>

739
00:34:26,520 --> 00:34:29,940
know how many you know run these is a

740
00:34:27,929 --> 00:34:31,889
replica set<font color="#E5E5E5"> like how many instances</font><font color="#CCCCCC"> at</font>

741
00:34:29,940 --> 00:34:33,510
<font color="#E5E5E5">least we</font><font color="#CCCCCC"> want to run where do we run</font>

742
00:34:31,889 --> 00:34:38,040
them if<font color="#E5E5E5"> one of them died spin up the new</font>

743
00:34:33,510 --> 00:34:39,540
one but then have the separate strands

744
00:34:38,040 --> 00:34:41,639
one controller based on<font color="#E5E5E5"> the SOC</font>

745
00:34:39,540 --> 00:34:45,000
controller which is<font color="#E5E5E5"> programming</font>

746
00:34:41,639 --> 00:34:48,299
these individual VPP instances in the

747
00:34:45,000 --> 00:34:50,370
containers<font color="#CCCCCC"> rubbish Edwin and V switch so</font>

748
00:34:48,300 --> 00:34:53,220
you might<font color="#E5E5E5"> imagine you know you're</font>

749
00:34:50,370 --> 00:34:56,159
accessing corporate VPN<font color="#CCCCCC"> at massive scale</font>

750
00:34:53,219 --> 00:34:59,100
<font color="#E5E5E5">the clients will</font><font color="#CCCCCC"> understand coming in</font>

751
00:34:56,159 --> 00:35:01,830
through the expand tunnel kind<font color="#E5E5E5"> of like</font>

752
00:34:59,100 --> 00:35:06,240
what<font color="#CCCCCC"> rüstow has</font><font color="#E5E5E5"> shown before with VRS or</font>

753
00:35:01,830 --> 00:35:08,850
<font color="#E5E5E5">bridge domains</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> multiple VRS so one</font>

754
00:35:06,240 --> 00:35:11,640
<font color="#E5E5E5">really force</font><font color="#CCCCCC"> or the southbound encrypted</font>

755
00:35:08,850 --> 00:35:13,710
traffic<font color="#E5E5E5"> and then another one northbound</font>

756
00:35:11,640 --> 00:35:15,480
for the unencrypted traffic which is

757
00:35:13,710 --> 00:35:18,860
<font color="#E5E5E5">then heading off to your whatever your</font>

758
00:35:15,480 --> 00:35:22,350
secure applications are behind this<font color="#CCCCCC"> and</font>

759
00:35:18,860 --> 00:35:23,850
<font color="#CCCCCC">the you</font><font color="#E5E5E5"> know I guess the goal is to</font><font color="#CCCCCC"> be</font>

760
00:35:22,350 --> 00:35:26,339
able to horizontally scale these

761
00:35:23,850 --> 00:35:28,500
instances of strongswan<font color="#CCCCCC"> and the</font>

762
00:35:26,340 --> 00:35:32,430
challenge of course with the horizontal

763
00:35:28,500 --> 00:35:34,260
<font color="#E5E5E5">scaling becomes that you if you get any</font>

764
00:35:32,430 --> 00:35:35,730
kind of rehashing<font color="#CCCCCC"> happens so like one of</font>

765
00:35:34,260 --> 00:35:38,910
the<font color="#E5E5E5"> containers dies and everything gets</font>

766
00:35:35,730 --> 00:35:40,950
rehashed<font color="#E5E5E5"> then you'll get a packet which</font>

767
00:35:38,910 --> 00:35:42,690
you don't have session state<font color="#E5E5E5"> so you have</font>

768
00:35:40,950 --> 00:35:44,490
to then have<font color="#CCCCCC"> other ways of</font><font color="#E5E5E5"> handling that</font>

769
00:35:42,690 --> 00:35:46,890
so for example another<font color="#CCCCCC"> KD store on the</font>

770
00:35:44,490 --> 00:35:49,140
back end where you know this container

771
00:35:46,890 --> 00:35:50,790
dies and this one gets<font color="#E5E5E5"> their packet it</font>

772
00:35:49,140 --> 00:35:54,089
can<font color="#E5E5E5"> look up I</font><font color="#CCCCCC"> want the state for</font><font color="#E5E5E5"> that</font>

773
00:35:50,790 --> 00:35:56,460
session<font color="#CCCCCC"> but</font><font color="#E5E5E5"> I say strong spawn itself</font>

774
00:35:54,090 --> 00:35:58,200
has been<font color="#E5E5E5"> pretty good</font><font color="#CCCCCC"> AJ</font><font color="#E5E5E5"> so yeah there</font>

775
00:35:56,460 --> 00:35:59,460
<font color="#E5E5E5">aren't there is stuff we can do where a</font>

776
00:35:58,200 --> 00:36:01,939
certain number<font color="#E5E5E5"> of failures can be</font>

777
00:35:59,460 --> 00:36:03,930
handled<font color="#E5E5E5"> Sydney three strong spawn zone</font>

778
00:36:01,940 --> 00:36:06,870
<font color="#E5E5E5">and that's you know a</font><font color="#CCCCCC"> good reason for</font>

779
00:36:03,930 --> 00:36:09,319
using<font color="#E5E5E5"> it</font><font color="#CCCCCC"> I think that was it yes so any</font>

780
00:36:06,870 --> 00:36:09,319
questions

781
00:36:09,860 --> 00:36:15,610
other than<font color="#E5E5E5"> from right yeah</font>

782
00:36:17,610 --> 00:36:22,190
you see my plugin for kubernetes profile

783
00:36:25,479 --> 00:36:29,319
there are no<font color="#E5E5E5"> they're like</font>

784
00:36:39,890 --> 00:36:42,989
[Music]

785
00:37:06,099 --> 00:37:12,170
yeah I think Intel's one was<font color="#E5E5E5"> really like</font>

786
00:37:09,230 --> 00:37:14,930
<font color="#E5E5E5">kind of a proof of concept of CNI</font>

787
00:37:12,170 --> 00:37:18,230
<font color="#E5E5E5">whereas with County we implemented full</font>

788
00:37:14,930 --> 00:37:20,839
you know<font color="#CCCCCC"> support</font><font color="#E5E5E5"> for kubernetes services</font>

789
00:37:18,230 --> 00:37:23,569
and policies<font color="#CCCCCC"> I haven't talked about that</font>

790
00:37:20,839 --> 00:37:28,480
but policies are also<font color="#E5E5E5"> implemented on VPP</font>

791
00:37:23,569 --> 00:37:31,700
completely so we we program ACLs on VPP

792
00:37:28,480 --> 00:37:36,230
on the interfaces facing<font color="#CCCCCC"> to our sports</font>

793
00:37:31,700 --> 00:37:39,500
<font color="#CCCCCC">so I think that that</font><font color="#E5E5E5"> continuity is like</font>

794
00:37:36,230 --> 00:37:48,650
you know more fully featured<font color="#E5E5E5"> than then</font>

795
00:37:39,500 --> 00:37:52,119
<font color="#E5E5E5">read one okay thanks I guess the cool</font>

796
00:37:48,650 --> 00:37:52,119
questions<font color="#E5E5E5"> come and grab sausage</font>

