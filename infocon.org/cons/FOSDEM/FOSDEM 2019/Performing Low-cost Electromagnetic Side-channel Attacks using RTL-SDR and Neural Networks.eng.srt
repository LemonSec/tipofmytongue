1
00:00:05,000 --> 00:00:07,890
so thank<font color="#E5E5E5"> you for coming to my</font>

2
00:00:07,319 --> 00:00:10,049
<font color="#CCCCCC">presentation</font>

3
00:00:07,890 --> 00:00:12,268
<font color="#CCCCCC">i'm peter robbins i'm in PG</font><font color="#E5E5E5"> students</font>

4
00:00:10,049 --> 00:00:14,610
from<font color="#CCCCCC"> assult university and wireless</font>

5
00:00:12,269 --> 00:00:16,860
<font color="#CCCCCC">security and privacy</font><font color="#E5E5E5"> and so in this</font>

6
00:00:14,610 --> 00:00:19,050
<font color="#E5E5E5">presentation I'll talk about performing</font>

7
00:00:16,860 --> 00:00:21,238
<font color="#CCCCCC">low-cost electromagnetic site context</font>

8
00:00:19,050 --> 00:00:23,340
using<font color="#CCCCCC"> rtl-sdr</font><font color="#E5E5E5"> and neural</font><font color="#CCCCCC"> networks</font><font color="#E5E5E5"> which</font>

9
00:00:21,239 --> 00:00:25,489
<font color="#E5E5E5">is what one of my students likes to call</font>

10
00:00:23,340 --> 00:00:27,779
<font color="#E5E5E5">black magic so hope you guys will enjoy</font>

11
00:00:25,489 --> 00:00:30,630
<font color="#E5E5E5">first of all I'd</font><font color="#CCCCCC"> like to</font><font color="#E5E5E5"> start off with</font>

12
00:00:27,779 --> 00:00:32,880
giving<font color="#E5E5E5"> idea of my motivation</font><font color="#CCCCCC"> for putting</font>

13
00:00:30,630 --> 00:00:34,199
this talk together<font color="#E5E5E5"> so when I first</font>

14
00:00:32,880 --> 00:00:37,469
<font color="#CCCCCC">started out doing this kind of stuff</font>

15
00:00:34,200 --> 00:00:39,390
<font color="#E5E5E5">about two to</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> years ago</font><font color="#CCCCCC"> I think</font><font color="#E5E5E5"> the</font>

16
00:00:37,469 --> 00:00:42,120
information regarding performing<font color="#E5E5E5"> site</font>

17
00:00:39,390 --> 00:00:43,980
<font color="#E5E5E5">attacks using</font><font color="#CCCCCC"> ser was quite scarce</font><font color="#E5E5E5"> yet a</font>

18
00:00:42,120 --> 00:00:47,099
<font color="#E5E5E5">few academic papers I think there was</font>

19
00:00:43,980 --> 00:00:48,178
<font color="#E5E5E5">also one PhD thesis that's used as the</font>

20
00:00:47,100 --> 00:00:50,670
<font color="#CCCCCC">arts to perform</font><font color="#E5E5E5"> these kind of attacks</font>

21
00:00:48,179 --> 00:00:54,030
<font color="#CCCCCC">but</font><font color="#E5E5E5"> unfortunately the code used in these</font>

22
00:00:50,670 --> 00:00:55,739
projects<font color="#CCCCCC"> is</font><font color="#E5E5E5"> very often closed source one</font>

23
00:00:54,030 --> 00:00:57,539
exception is chip<font color="#CCCCCC"> whisper which is an</font>

24
00:00:55,739 --> 00:01:00,269
open source<font color="#E5E5E5"> hardware and software</font>

25
00:00:57,539 --> 00:01:02,789
platform for performing<font color="#CCCCCC"> size latex but</font>

26
00:01:00,269 --> 00:01:04,470
it's more focused<font color="#CCCCCC"> towards power</font><font color="#E5E5E5"> side</font>

27
00:01:02,789 --> 00:01:06,840
<font color="#E5E5E5">channel attacks and it also uses custom</font>

28
00:01:04,470 --> 00:01:08,460
hardware so what I want<font color="#E5E5E5"> to do in this</font>

29
00:01:06,840 --> 00:01:10,740
talk is give you<font color="#E5E5E5"> guys an idea of how to</font>

30
00:01:08,460 --> 00:01:13,589
get<font color="#CCCCCC"> started using very cheap hardware</font>

31
00:01:10,740 --> 00:01:16,770
like an RTL SDR<font color="#E5E5E5"> and also using open</font>

32
00:01:13,590 --> 00:01:18,090
source software<font color="#CCCCCC"> and in this presentation</font>

33
00:01:16,770 --> 00:01:21,030
we'll<font color="#E5E5E5"> use the</font><font color="#CCCCCC"> Emma framework which is</font>

34
00:01:18,090 --> 00:01:23,640
<font color="#E5E5E5">something I developed for over</font><font color="#CCCCCC"> a year</font>

35
00:01:21,030 --> 00:01:25,560
<font color="#CCCCCC">during</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> PhD</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> next</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> this</font>

36
00:01:23,640 --> 00:01:26,690
case we'll<font color="#E5E5E5"> use some machine</font><font color="#CCCCCC"> learning to</font>

37
00:01:25,560 --> 00:01:30,300
improve<font color="#CCCCCC"> existing</font>

38
00:01:26,690 --> 00:01:33,270
sizegenetics now for<font color="#E5E5E5"> those</font><font color="#CCCCCC"> of you who</font>

39
00:01:30,300 --> 00:01:34,740
<font color="#E5E5E5">don't know what side channels are all</font>

40
00:01:33,270 --> 00:01:36,690
<font color="#E5E5E5">about so when your hardware is</font>

41
00:01:34,740 --> 00:01:38,460
performing computations then obviously

42
00:01:36,690 --> 00:01:40,470
<font color="#E5E5E5">there is some current going</font><font color="#CCCCCC"> to a</font>

43
00:01:38,460 --> 00:01:42,149
<font color="#E5E5E5">conductor which will in turn emit an</font>

44
00:01:40,470 --> 00:01:44,190
electromagnetic<font color="#E5E5E5"> wave this</font><font color="#CCCCCC"> is just the</font>

45
00:01:42,150 --> 00:01:45,750
way that physics work and the<font color="#E5E5E5"> amplitude</font>

46
00:01:44,190 --> 00:01:47,820
of this<font color="#E5E5E5"> emitted electromagnetic wave</font>

47
00:01:45,750 --> 00:01:51,060
turns out to be<font color="#E5E5E5"> proportional to</font><font color="#CCCCCC"> the</font>

48
00:01:47,820 --> 00:01:53,610
power that is<font color="#CCCCCC"> being consumed so and</font>

49
00:01:51,060 --> 00:01:54,900
<font color="#CCCCCC">obviously some computations</font><font color="#E5E5E5"> require more</font>

50
00:01:53,610 --> 00:01:56,610
power<font color="#E5E5E5"> than others if you're mining</font>

51
00:01:54,900 --> 00:01:58,710
bitcoins then probably your computer

52
00:01:56,610 --> 00:02:00,900
will be consuming a lot more<font color="#CCCCCC"> power than</font>

53
00:01:58,710 --> 00:02:03,899
<font color="#CCCCCC">whereas</font><font color="#E5E5E5"> it's just island and</font><font color="#CCCCCC"> info</font>

54
00:02:00,900 --> 00:02:05,510
probably not consumed<font color="#E5E5E5"> so much</font><font color="#CCCCCC"> and so</font>

55
00:02:03,900 --> 00:02:08,340
electromagnetic<font color="#E5E5E5"> citation attacks try to</font>

56
00:02:05,510 --> 00:02:10,319
do the reverse process so based on the

57
00:02:08,340 --> 00:02:12,480
observed electromagnetic radiation<font color="#E5E5E5"> they</font>

58
00:02:10,318 --> 00:02:13,920
try to infer what<font color="#E5E5E5"> was being computed on</font>

59
00:02:12,480 --> 00:02:16,649
the<font color="#E5E5E5"> chip and some interesting examples</font>

60
00:02:13,920 --> 00:02:18,030
<font color="#CCCCCC">are</font><font color="#E5E5E5"> performing encryption algorithms so</font>

61
00:02:16,650 --> 00:02:18,420
in this case you would<font color="#E5E5E5"> want to find out</font>

62
00:02:18,030 --> 00:02:21,030
what

63
00:02:18,420 --> 00:02:22,559
secret key was<font color="#E5E5E5"> or even</font><font color="#CCCCCC"> just pressing a</font>

64
00:02:21,030 --> 00:02:24,959
key on your keyboard because<font color="#E5E5E5"> this will</font>

65
00:02:22,560 --> 00:02:26,849
also produce some current in your

66
00:02:24,959 --> 00:02:29,250
<font color="#E5E5E5">keyboard and this will be observable in</font>

67
00:02:26,849 --> 00:02:31,530
the electromagnetic<font color="#CCCCCC"> spectrum and lastly</font>

68
00:02:29,250 --> 00:02:33,209
<font color="#E5E5E5">some memory</font><font color="#CCCCCC"> resource or all interesting</font>

69
00:02:31,530 --> 00:02:36,120
things that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> could observe as an</font>

70
00:02:33,209 --> 00:02:38,010
attacker<font color="#E5E5E5"> in previous works if you're</font>

71
00:02:36,120 --> 00:02:40,050
interested in this<font color="#E5E5E5"> kind of stuff</font><font color="#CCCCCC"> so</font>

72
00:02:38,010 --> 00:02:41,690
there are<font color="#E5E5E5"> some papers that discuss</font>

73
00:02:40,050 --> 00:02:45,000
sniffing keystrokes from<font color="#CCCCCC"> the keyboards</font>

74
00:02:41,690 --> 00:02:47,130
<font color="#CCCCCC">RSA and</font><font color="#E5E5E5"> Helga</font><font color="#CCCCCC"> Malky extraction or even</font>

75
00:02:45,000 --> 00:02:49,580
just like in the one of<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> papers</font>

76
00:02:47,130 --> 00:02:54,150
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> just reading</font><font color="#E5E5E5"> the raw</font>

77
00:02:49,580 --> 00:02:56,010
emanations by<font color="#E5E5E5"> CRT or LCD screen now if</font>

78
00:02:54,150 --> 00:02:57,600
you look<font color="#E5E5E5"> at a typical attack scenario</font>

79
00:02:56,010 --> 00:02:59,489
<font color="#CCCCCC">what you have is two</font><font color="#E5E5E5"> entities you have</font>

80
00:02:57,600 --> 00:03:01,170
an attacker here and a device under

81
00:02:59,489 --> 00:03:03,540
<font color="#E5E5E5">attack in this presentation that will be</font>

82
00:03:01,170 --> 00:03:04,950
<font color="#E5E5E5">an Arduino device and what happens is</font>

83
00:03:03,540 --> 00:03:07,230
the attacker will send a<font color="#E5E5E5"> plaintext to</font>

84
00:03:04,950 --> 00:03:09,060
<font color="#E5E5E5">encrypt then the Arduino will do the</font>

85
00:03:07,230 --> 00:03:11,369
encryption<font color="#E5E5E5"> it will calculate the</font>

86
00:03:09,060 --> 00:03:13,410
<font color="#E5E5E5">ciphertext</font><font color="#CCCCCC"> then the</font><font color="#E5E5E5"> processors will also</font>

87
00:03:11,370 --> 00:03:15,390
inadvertently<font color="#CCCCCC"> leaked some PM radiation</font>

88
00:03:13,410 --> 00:03:17,880
during<font color="#CCCCCC"> his computations</font><font color="#E5E5E5"> and the attacker</font>

89
00:03:15,390 --> 00:03:19,200
can capture<font color="#CCCCCC"> that signal</font><font color="#E5E5E5"> and try to infer</font>

90
00:03:17,880 --> 00:03:22,410
the<font color="#E5E5E5"> used encryption key through a</font>

91
00:03:19,200 --> 00:03:24,328
statistical analysis now one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

92
00:03:22,410 --> 00:03:26,220
<font color="#E5E5E5">attacks that's used in practice is</font>

93
00:03:24,329 --> 00:03:28,290
called correlation<font color="#E5E5E5"> electromagnetic</font>

94
00:03:26,220 --> 00:03:31,950
analysis<font color="#E5E5E5"> and we'll see how this can be</font>

95
00:03:28,290 --> 00:03:33,690
applied<font color="#E5E5E5"> on a</font><font color="#CCCCCC"> s now as first</font><font color="#E5E5E5"> step is a</font>

96
00:03:31,950 --> 00:03:35,190
good idea<font color="#E5E5E5"> to take a look</font><font color="#CCCCCC"> at the</font>

97
00:03:33,690 --> 00:03:37,290
algorithm<font color="#E5E5E5"> and see where the secret key</font>

98
00:03:35,190 --> 00:03:39,630
<font color="#CCCCCC">is</font><font color="#E5E5E5"> being used for a</font><font color="#CCCCCC"> s s is</font><font color="#E5E5E5"> pretty</font>

99
00:03:37,290 --> 00:03:40,980
trivial<font color="#E5E5E5"> because immediately in the</font><font color="#CCCCCC"> first</font>

100
00:03:39,630 --> 00:03:43,680
stage of the algorithm you can<font color="#CCCCCC"> see an</font>

101
00:03:40,980 --> 00:03:45,119
ADD round key<font color="#CCCCCC"> stage which will take the</font>

102
00:03:43,680 --> 00:03:46,920
keys<font color="#E5E5E5"> and inputs it will take the plain</font>

103
00:03:45,120 --> 00:03:49,440
text<font color="#CCCCCC"> and just XOR them together so</font>

104
00:03:46,920 --> 00:03:51,000
that's<font color="#E5E5E5"> really trivial</font><font color="#CCCCCC"> then it goes to</font>

105
00:03:49,440 --> 00:03:53,700
<font color="#E5E5E5">the sub byte stage where you</font><font color="#CCCCCC"> have a</font>

106
00:03:51,000 --> 00:03:55,650
substitution so one by it will just be

107
00:03:53,700 --> 00:03:57,600
substituted<font color="#CCCCCC"> by another by something</font>

108
00:03:55,650 --> 00:04:00,810
<font color="#E5E5E5">which is called an</font><font color="#CCCCCC"> an S</font><font color="#E5E5E5"> box which is</font>

109
00:03:57,600 --> 00:04:02,340
<font color="#E5E5E5">just really a lookup table and it turns</font>

110
00:04:00,810 --> 00:04:04,380
out when you load this value in<font color="#E5E5E5"> the</font>

111
00:04:02,340 --> 00:04:07,980
register it will leak some information

112
00:04:04,380 --> 00:04:10,290
<font color="#E5E5E5">now</font><font color="#CCCCCC"> what exactly is leaking in this case</font>

113
00:04:07,980 --> 00:04:12,810
so if we have a CPU<font color="#E5E5E5"> register in</font><font color="#CCCCCC"> an</font>

114
00:04:10,290 --> 00:04:14,400
<font color="#E5E5E5">unknown state R and we do the add round</font>

115
00:04:12,810 --> 00:04:16,289
key and sub byte steps then the register

116
00:04:14,400 --> 00:04:19,200
will<font color="#CCCCCC"> be updated with</font><font color="#E5E5E5"> D which is equal</font><font color="#CCCCCC"> to</font>

117
00:04:16,289 --> 00:04:21,108
the<font color="#CCCCCC"> sbox of the plaintext</font><font color="#E5E5E5"> exhort with</font>

118
00:04:19,200 --> 00:04:24,719
the key which is just those two stages

119
00:04:21,108 --> 00:04:27,240
<font color="#E5E5E5">performed and I will use s to denote the</font>

120
00:04:24,720 --> 00:04:31,110
index of the key<font color="#E5E5E5"> byte so for</font><font color="#CCCCCC"> aes-128 we</font>

121
00:04:27,240 --> 00:04:31,700
have 16 K bytes so<font color="#E5E5E5"> s can be 0 to 15 or</font>

122
00:04:31,110 --> 00:04:34,850
<font color="#E5E5E5">1/2</font>

123
00:04:31,700 --> 00:04:37,370
<font color="#E5E5E5">depending on your convention okay and</font>

124
00:04:34,850 --> 00:04:38,930
then we<font color="#E5E5E5"> have some power consumes and</font>

125
00:04:37,370 --> 00:04:41,570
this will<font color="#CCCCCC"> depend on the number of bed</font>

126
00:04:38,930 --> 00:04:43,130
flips one<font color="#E5E5E5"> way to calculate that is just</font>

127
00:04:41,570 --> 00:04:45,320
to take<font color="#E5E5E5"> the Hamming distance</font><font color="#CCCCCC"> between R</font>

128
00:04:43,130 --> 00:04:47,450
and<font color="#CCCCCC"> D</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> example if R is</font><font color="#E5E5E5"> equal to this</font>

129
00:04:45,320 --> 00:04:49,070
<font color="#CCCCCC">value</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> D equal</font><font color="#E5E5E5"> to that value then</font>

130
00:04:47,450 --> 00:04:50,719
<font color="#E5E5E5">we just take the Hamming distance</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> XOR</font>

131
00:04:49,070 --> 00:04:52,280
them together<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> get having</font>

132
00:04:50,720 --> 00:04:55,610
<font color="#E5E5E5">distance equals</font><font color="#CCCCCC"> four because we have</font>

133
00:04:52,280 --> 00:04:58,099
four bit flips<font color="#E5E5E5"> now in practice</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> often</font>

134
00:04:55,610 --> 00:05:00,350
have R equal to<font color="#CCCCCC"> 0 because the registers</font>

135
00:04:58,100 --> 00:05:01,820
are initialized to<font color="#E5E5E5"> 0 so then you can use</font>

136
00:05:00,350 --> 00:05:03,590
the Hamming<font color="#E5E5E5"> weight which</font><font color="#CCCCCC"> is just a</font>

137
00:05:01,820 --> 00:05:06,040
complicated<font color="#E5E5E5"> word for counting the number</font>

138
00:05:03,590 --> 00:05:08,810
of once in<font color="#E5E5E5"> a byte</font>

139
00:05:06,040 --> 00:05:11,300
<font color="#E5E5E5">ok now comes the somewhat harder part</font>

140
00:05:08,810 --> 00:05:13,040
because now we're going<font color="#E5E5E5"> to simulate</font><font color="#CCCCCC"> what</font>

141
00:05:11,300 --> 00:05:14,960
the leakage would be if the key<font color="#CCCCCC"> is for</font>

142
00:05:13,040 --> 00:05:16,820
<font color="#CCCCCC">example 0 so we're going to take</font>

143
00:05:14,960 --> 00:05:18,469
multiple encryption operations we're

144
00:05:16,820 --> 00:05:20,870
going to send multiple plain texts to

145
00:05:18,470 --> 00:05:23,090
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Arduino ever going to keep the</font>

146
00:05:20,870 --> 00:05:25,160
<font color="#E5E5E5">results of those encryptions and so if</font>

147
00:05:23,090 --> 00:05:26,570
we assume<font color="#CCCCCC"> that the key is 0 then we're</font>

148
00:05:25,160 --> 00:05:29,240
going<font color="#CCCCCC"> to model what the leakage would</font>

149
00:05:26,570 --> 00:05:30,650
look<font color="#E5E5E5"> like using our power consumption</font>

150
00:05:29,240 --> 00:05:32,030
model from the previous slide so we're

151
00:05:30,650 --> 00:05:34,940
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to take all these Hamming rights</font>

152
00:05:32,030 --> 00:05:37,010
<font color="#CCCCCC">including</font><font color="#E5E5E5"> put them and</font><font color="#CCCCCC"> 1 big matrix for</font>

153
00:05:34,940 --> 00:05:38,960
each<font color="#CCCCCC"> of the nm encryptions you see here</font>

154
00:05:37,010 --> 00:05:42,500
and<font color="#E5E5E5"> we're going</font><font color="#CCCCCC"> to repeat that for each</font>

155
00:05:38,960 --> 00:05:44,750
key byte<font color="#E5E5E5"> as so that we have a simulation</font>

156
00:05:42,500 --> 00:05:47,780
of the for all the key bytes in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> AES</font>

157
00:05:44,750 --> 00:05:49,520
key then as a final<font color="#CCCCCC"> step</font><font color="#E5E5E5"> of course we</font>

158
00:05:47,780 --> 00:05:51,289
<font color="#E5E5E5">still need to do our</font><font color="#CCCCCC"> real measurements</font>

159
00:05:49,520 --> 00:05:53,120
and then<font color="#E5E5E5"> we're going to correlate our</font>

160
00:05:51,290 --> 00:05:55,910
measurements with each of the models

161
00:05:53,120 --> 00:05:59,210
that<font color="#E5E5E5"> we just</font><font color="#CCCCCC"> constructed</font><font color="#E5E5E5"> now if you take</font>

162
00:05:55,910 --> 00:06:01,520
if<font color="#CCCCCC"> you capture an an e/m signal</font><font color="#E5E5E5"> you have</font>

163
00:05:59,210 --> 00:06:03,169
<font color="#CCCCCC">a signal</font><font color="#E5E5E5"> X and it has time</font><font color="#CCCCCC"> index</font><font color="#E5E5E5"> T</font>

164
00:06:01,520 --> 00:06:05,450
because<font color="#E5E5E5"> you have for example 10,000</font>

165
00:06:03,170 --> 00:06:07,610
samples<font color="#E5E5E5"> and so we're going to check each</font>

166
00:06:05,450 --> 00:06:09,680
individual sample<font color="#CCCCCC"> and see which one has</font>

167
00:06:07,610 --> 00:06:11,570
a very high correlation<font color="#E5E5E5"> with any one of</font>

168
00:06:09,680 --> 00:06:14,060
<font color="#E5E5E5">the models from the previous slide and</font>

169
00:06:11,570 --> 00:06:16,880
to do<font color="#E5E5E5"> that we can use any metric but</font>

170
00:06:14,060 --> 00:06:18,890
what's<font color="#E5E5E5"> using the</font><font color="#CCCCCC"> cyma tag is the Pearson</font>

171
00:06:16,880 --> 00:06:21,650
correlation which gives you a<font color="#E5E5E5"> negative</font>

172
00:06:18,890 --> 00:06:23,659
or positive linear correlation which<font color="#CCCCCC"> is</font>

173
00:06:21,650 --> 00:06:27,560
why it's called the correlation power

174
00:06:23,660 --> 00:06:29,420
<font color="#E5E5E5">attack</font><font color="#CCCCCC"> ok so now we're</font><font color="#E5E5E5"> ready so this was</font>

175
00:06:27,560 --> 00:06:31,760
all<font color="#E5E5E5"> about the theory</font><font color="#CCCCCC"> and now we're</font><font color="#E5E5E5"> ready</font>

176
00:06:29,420 --> 00:06:34,060
to<font color="#E5E5E5"> apply</font><font color="#CCCCCC"> this in practice I did a</font><font color="#E5E5E5"> little</font>

177
00:06:31,760 --> 00:06:36,289
experiment<font color="#CCCCCC"> for FOSDEM on</font><font color="#E5E5E5"> a s</font>

178
00:06:34,060 --> 00:06:37,940
<font color="#E5E5E5">implementation running on an Arduino</font><font color="#CCCCCC"> so</font>

179
00:06:36,290 --> 00:06:40,190
let's take a<font color="#E5E5E5"> look at how</font><font color="#CCCCCC"> that went</font>

180
00:06:37,940 --> 00:06:42,140
if you want to do<font color="#E5E5E5"> something like this</font>

181
00:06:40,190 --> 00:06:44,450
<font color="#E5E5E5">yourself usually there are</font><font color="#CCCCCC"> a few steps</font>

182
00:06:42,140 --> 00:06:45,620
<font color="#CCCCCC">that you have</font><font color="#E5E5E5"> to go through one is the</font>

183
00:06:44,450 --> 00:06:46,610
measurement<font color="#CCCCCC"> setups we've</font>

184
00:06:45,620 --> 00:06:48,380
you have to set up<font color="#E5E5E5"> your measurement</font>

185
00:06:46,610 --> 00:06:50,710
equipment correctly<font color="#CCCCCC"> you have to identify</font>

186
00:06:48,380 --> 00:06:52,969
which frequencies<font color="#CCCCCC"> leak from</font><font color="#E5E5E5"> the device</font>

187
00:06:50,710 --> 00:06:55,430
then we're going to<font color="#E5E5E5"> effectively capture</font>

188
00:06:52,970 --> 00:06:57,470
<font color="#CCCCCC">the leakage traces using an RTL SDR and</font>

189
00:06:55,430 --> 00:07:00,320
then we're going to perform<font color="#E5E5E5"> a standard</font>

190
00:06:57,470 --> 00:07:02,210
<font color="#CCCCCC">SEMA attack on</font><font color="#E5E5E5"> a s finally we'll see how</font>

191
00:07:00,320 --> 00:07:05,180
we<font color="#E5E5E5"> can</font><font color="#CCCCCC"> use machine learning to improve</font>

192
00:07:02,210 --> 00:07:06,590
this attack further okay so for the

193
00:07:05,180 --> 00:07:09,140
measurement setup<font color="#E5E5E5"> we already know our</font>

194
00:07:06,590 --> 00:07:10,940
<font color="#E5E5E5">target</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> a Arduino and we're going to</font>

195
00:07:09,140 --> 00:07:13,310
assume<font color="#CCCCCC"> that there's some</font><font color="#E5E5E5"> software a as</font>

196
00:07:10,940 --> 00:07:14,990
implementation running on the<font color="#CCCCCC"> device so</font>

197
00:07:13,310 --> 00:07:16,760
what's the victim has done is he has

198
00:07:14,990 --> 00:07:20,030
uploaded a program to the<font color="#E5E5E5"> Arduino with a</font>

199
00:07:16,760 --> 00:07:21,740
static key so this<font color="#E5E5E5"> one's fixed and the</font>

200
00:07:20,030 --> 00:07:23,690
attacker can only send plaintext to<font color="#E5E5E5"> the</font>

201
00:07:21,740 --> 00:07:25,580
device and it can and the attacker can

202
00:07:23,690 --> 00:07:27,320
also then measure what's the

203
00:07:25,580 --> 00:07:29,450
<font color="#E5E5E5">electromagnetic</font><font color="#CCCCCC"> ray</font><font color="#E5E5E5"> radiation is emitted</font>

204
00:07:27,320 --> 00:07:30,230
<font color="#E5E5E5">by the device</font><font color="#CCCCCC"> and for</font><font color="#E5E5E5"> that we'll</font><font color="#CCCCCC"> use the</font>

205
00:07:29,450 --> 00:07:32,599
<font color="#CCCCCC">rtl-sdr</font>

206
00:07:30,230 --> 00:07:34,640
<font color="#E5E5E5">as our capture device we'll also use an</font>

207
00:07:32,600 --> 00:07:36,640
<font color="#CCCCCC">e/m probe which is</font><font color="#E5E5E5"> just a special kind</font>

208
00:07:34,640 --> 00:07:39,140
<font color="#CCCCCC">of antenna for capturing</font><font color="#E5E5E5"> this kind of</font>

209
00:07:36,640 --> 00:07:41,750
electromagnetic<font color="#E5E5E5"> radiation</font><font color="#CCCCCC"> but you could</font>

210
00:07:39,140 --> 00:07:43,880
in principle<font color="#E5E5E5"> also use a directional</font>

211
00:07:41,750 --> 00:07:45,500
<font color="#CCCCCC">antenna of some sorts we're also going</font>

212
00:07:43,880 --> 00:07:47,000
<font color="#CCCCCC">to</font><font color="#E5E5E5"> use an amplifier which</font><font color="#CCCCCC"> is convenient</font>

213
00:07:45,500 --> 00:07:50,270
<font color="#E5E5E5">because you guys all got an amplifier</font>

214
00:07:47,000 --> 00:07:52,400
today so it's nice<font color="#E5E5E5"> and then we can use a</font>

215
00:07:50,270 --> 00:07:55,760
<font color="#E5E5E5">laptop</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> new radio for some signal</font>

216
00:07:52,400 --> 00:07:57,919
processing<font color="#E5E5E5"> okay so time to position the</font>

217
00:07:55,760 --> 00:07:59,390
probe and<font color="#E5E5E5"> I</font><font color="#CCCCCC"> found out the good location</font>

218
00:07:57,920 --> 00:08:01,450
<font color="#CCCCCC">to do this it's near the VCC and ground</font>

219
00:07:59,390 --> 00:08:03,800
pins<font color="#CCCCCC"> because presumably there's more</font>

220
00:08:01,450 --> 00:08:06,560
<font color="#E5E5E5">current going through there and this</font>

221
00:08:03,800 --> 00:08:08,660
gives<font color="#CCCCCC"> us</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> better quality signal you</font><font color="#E5E5E5"> can</font>

222
00:08:06,560 --> 00:08:10,070
see the amplifier that<font color="#CCCCCC"> I use this quite</font>

223
00:08:08,660 --> 00:08:12,110
expensive but<font color="#E5E5E5"> I</font><font color="#CCCCCC"> think that you can use a</font>

224
00:08:10,070 --> 00:08:13,520
cheaper one<font color="#CCCCCC"> but if you're</font><font color="#E5E5E5"> not sure tons</font>

225
00:08:12,110 --> 00:08:16,550
better of course<font color="#CCCCCC"> to use a more expensive</font>

226
00:08:13,520 --> 00:08:18,710
<font color="#E5E5E5">one and then you have the RTL SDR which</font>

227
00:08:16,550 --> 00:08:20,630
is only<font color="#CCCCCC"> twenty or so</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think it will</font>

228
00:08:18,710 --> 00:08:22,849
<font color="#CCCCCC">also work without the amplifier</font><font color="#E5E5E5"> in any</font>

229
00:08:20,630 --> 00:08:25,010
case oh and if you<font color="#E5E5E5"> don't know which pins</font>

230
00:08:22,850 --> 00:08:26,600
to look for<font color="#CCCCCC"> just look up the</font><font color="#E5E5E5"> pin</font><font color="#CCCCCC"> out</font>

231
00:08:25,010 --> 00:08:29,180
diagram and check it out

232
00:08:26,600 --> 00:08:31,580
<font color="#CCCCCC">okay so now it's time to</font><font color="#E5E5E5"> use your</font>

233
00:08:29,180 --> 00:08:33,980
<font color="#CCCCCC">favourites we can see analyzer - a</font>

234
00:08:31,580 --> 00:08:35,780
spectrum analyzer to look for leaking

235
00:08:33,980 --> 00:08:37,580
frequencies and if the Arduino<font color="#CCCCCC"> is idling</font>

236
00:08:35,780 --> 00:08:40,459
then you get something<font color="#CCCCCC"> like this and</font>

237
00:08:37,580 --> 00:08:41,780
when<font color="#CCCCCC"> we sent</font><font color="#E5E5E5"> at regular intervals some</font>

238
00:08:40,460 --> 00:08:43,970
random plaintext<font color="#E5E5E5"> to encrypt and</font>

239
00:08:41,780 --> 00:08:45,860
obviously something<font color="#CCCCCC"> is changing</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> can</font>

240
00:08:43,970 --> 00:08:47,600
see some<font color="#E5E5E5"> new frequencies appearing here</font>

241
00:08:45,860 --> 00:08:49,580
so that's<font color="#CCCCCC"> interesting because these</font>

242
00:08:47,600 --> 00:08:53,840
frequencies might leak some<font color="#CCCCCC"> information</font>

243
00:08:49,580 --> 00:08:55,850
about the<font color="#E5E5E5"> secret key being used and if</font>

244
00:08:53,840 --> 00:08:57,410
we<font color="#CCCCCC"> zoom in then it's even</font><font color="#E5E5E5"> more clear so</font>

245
00:08:55,850 --> 00:08:58,310
<font color="#E5E5E5">we don't need a lot</font><font color="#CCCCCC"> of bandwidth in</font>

246
00:08:57,410 --> 00:09:04,129
order<font color="#E5E5E5"> to</font>

247
00:08:58,310 --> 00:09:06,829
observe<font color="#CCCCCC"> leakage occurring</font><font color="#E5E5E5"> okay so now we</font>

248
00:09:04,129 --> 00:09:08,480
need<font color="#E5E5E5"> to actually capture the traces we</font>

249
00:09:06,829 --> 00:09:10,579
just use<font color="#CCCCCC"> chick or</font><font color="#E5E5E5"> X to perform random</font>

250
00:09:08,480 --> 00:09:12,079
encryptions but we still need to<font color="#E5E5E5"> capture</font>

251
00:09:10,579 --> 00:09:14,599
them and store them<font color="#CCCCCC"> in</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> certain data</font>

252
00:09:12,079 --> 00:09:16,849
set<font color="#E5E5E5"> for that I used to</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> developed a</font>

253
00:09:14,600 --> 00:09:19,189
small tool tool which is<font color="#CCCCCC"> called encap</font>

254
00:09:16,850 --> 00:09:21,680
<font color="#E5E5E5">it's part of the Emma framework and it's</font>

255
00:09:19,189 --> 00:09:23,660
basically just a wrapper around<font color="#E5E5E5"> new</font>

256
00:09:21,680 --> 00:09:26,569
radio blocks<font color="#E5E5E5"> what it will do is you can</font>

257
00:09:23,660 --> 00:09:28,579
specify a sample<font color="#E5E5E5"> rate</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> get your traces</font>

258
00:09:26,569 --> 00:09:30,459
you can specify a<font color="#E5E5E5"> center frequency which</font>

259
00:09:28,579 --> 00:09:34,128
is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same one that I used here and</font>

260
00:09:30,459 --> 00:09:36,109
then you<font color="#E5E5E5"> can specify</font><font color="#CCCCCC"> the number of</font>

261
00:09:34,129 --> 00:09:38,600
<font color="#E5E5E5">traces at once</font><font color="#CCCCCC"> and an output directory</font>

262
00:09:36,110 --> 00:09:41,629
which is<font color="#E5E5E5"> this for them or do you know</font>

263
00:09:38,600 --> 00:09:42,800
test directory<font color="#E5E5E5"> okay so now</font><font color="#CCCCCC"> will what am</font>

264
00:09:41,629 --> 00:09:45,410
<font color="#CCCCCC">i what am</font><font color="#E5E5E5"> cap will do is it will</font>

265
00:09:42,800 --> 00:09:46,878
<font color="#E5E5E5">automatically</font><font color="#CCCCCC"> start</font><font color="#E5E5E5"> capturing it will</font>

266
00:09:45,410 --> 00:09:48,379
send a serial command to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> arduino</font><font color="#E5E5E5"> to</font>

267
00:09:46,879 --> 00:09:51,589
perform an encryption and then

268
00:09:48,379 --> 00:09:53,360
automatically stop the trace<font color="#E5E5E5"> and if we</font>

269
00:09:51,589 --> 00:09:55,309
<font color="#E5E5E5">instruct</font><font color="#CCCCCC"> the target to perform random</font>

270
00:09:53,360 --> 00:09:57,949
<font color="#E5E5E5">encryptions with this</font><font color="#CCCCCC"> static key then</font><font color="#E5E5E5"> we</font>

271
00:09:55,309 --> 00:09:59,600
have a data<font color="#E5E5E5"> set in our foursome or do</font>

272
00:09:57,949 --> 00:10:01,579
you know test directory<font color="#E5E5E5"> so this is the</font>

273
00:09:59,600 --> 00:10:04,399
key<font color="#E5E5E5"> that the attacker has to guess so</font>

274
00:10:01,579 --> 00:10:07,579
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> unknown to us okay now we</font><font color="#CCCCCC"> can</font>

275
00:10:04,399 --> 00:10:11,750
use<font color="#CCCCCC"> Emma -</font><font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> data and Emma you can</font>

276
00:10:07,579 --> 00:10:14,870
specify multiple commands<font color="#E5E5E5"> as a string so</font>

277
00:10:11,750 --> 00:10:17,589
<font color="#CCCCCC">a mobile sequentially executors command</font>

278
00:10:14,870 --> 00:10:20,149
so as a first command<font color="#CCCCCC"> I gave the app's</font>

279
00:10:17,589 --> 00:10:21,589
<font color="#E5E5E5">commands which was just</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> MD modulated</font>

280
00:10:20,149 --> 00:10:23,899
data because<font color="#CCCCCC"> we are interested in</font>

281
00:10:21,589 --> 00:10:26,089
<font color="#E5E5E5">changing the amplitude</font><font color="#CCCCCC"> of a signal so</font>

282
00:10:23,899 --> 00:10:27,920
that<font color="#E5E5E5"> makes sense to use a</font><font color="#CCCCCC"> md modulation</font>

283
00:10:26,089 --> 00:10:30,170
<font color="#E5E5E5">in that case and there's something</font>

284
00:10:27,920 --> 00:10:32,899
<font color="#CCCCCC">interesting going on between 10,000 and</font>

285
00:10:30,170 --> 00:10:36,620
20,000 samplers you can see because here

286
00:10:32,899 --> 00:10:38,839
the amplitude<font color="#E5E5E5"> rises right but there's a</font>

287
00:10:36,620 --> 00:10:41,870
problem<font color="#CCCCCC"> because if you</font><font color="#E5E5E5"> remember from the</font>

288
00:10:38,839 --> 00:10:43,160
<font color="#CCCCCC">Sima Theory slides the encryption</font>

289
00:10:41,870 --> 00:10:44,929
operations need to be aligned because

290
00:10:43,160 --> 00:10:46,459
<font color="#E5E5E5">we're going to</font><font color="#CCCCCC"> select a</font><font color="#E5E5E5"> single point in</font>

291
00:10:44,929 --> 00:10:49,160
<font color="#E5E5E5">this trace and use that to correlate</font>

292
00:10:46,459 --> 00:10:50,540
with our model but<font color="#E5E5E5"> the encryption</font>

293
00:10:49,160 --> 00:10:52,759
operations in this<font color="#E5E5E5"> case are not aligned</font>

294
00:10:50,540 --> 00:10:55,009
<font color="#CCCCCC">because at some times the capture</font><font color="#E5E5E5"> will</font>

295
00:10:52,759 --> 00:10:56,990
start a bit later<font color="#CCCCCC"> or a stop a bit</font>

296
00:10:55,009 --> 00:10:59,689
earlier like in<font color="#E5E5E5"> this case so</font><font color="#CCCCCC"> we still</font>

297
00:10:56,990 --> 00:11:01,370
<font color="#CCCCCC">need to perform an alignment</font><font color="#E5E5E5"> now an</font>

298
00:10:59,689 --> 00:11:03,679
amethyst is implemented as a simple

299
00:11:01,370 --> 00:11:06,050
cross correlation<font color="#CCCCCC"> you can give the align</font>

300
00:11:03,679 --> 00:11:07,759
command<font color="#E5E5E5"> and then after that I also did a</font>

301
00:11:06,050 --> 00:11:11,389
filter just<font color="#E5E5E5"> to remove some of that high</font>

302
00:11:07,759 --> 00:11:11,960
frequency<font color="#CCCCCC"> noise and now some</font><font color="#E5E5E5"> interesting</font>

303
00:11:11,389 --> 00:11:13,190
patterns

304
00:11:11,960 --> 00:11:15,680
start to<font color="#CCCCCC"> emerge because</font><font color="#E5E5E5"> now we can</font>

305
00:11:13,190 --> 00:11:17,150
really<font color="#E5E5E5"> see what</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> a s</font><font color="#CCCCCC"> algorithm is</font>

306
00:11:15,680 --> 00:11:19,760
<font color="#CCCCCC">doing</font><font color="#E5E5E5"> because this section here</font>

307
00:11:17,150 --> 00:11:21,530
corresponds to<font color="#E5E5E5"> the a s</font><font color="#CCCCCC"> init function</font><font color="#E5E5E5"> and</font>

308
00:11:19,760 --> 00:11:23,990
this section<font color="#E5E5E5"> is really the AES</font>

309
00:11:21,530 --> 00:11:26,420
encryption function so if you look

310
00:11:23,990 --> 00:11:28,220
closely<font color="#E5E5E5"> you can count</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> Peaks which</font>

311
00:11:26,420 --> 00:11:30,829
correspond to the<font color="#E5E5E5"> ten rounds at a ESS</font>

312
00:11:28,220 --> 00:11:34,400
executing so now we're<font color="#E5E5E5"> ready to actually</font>

313
00:11:30,830 --> 00:11:35,900
perform our attack and if you<font color="#E5E5E5"> implement</font>

314
00:11:34,400 --> 00:11:37,970
<font color="#E5E5E5">the</font><font color="#CCCCCC"> Sima</font><font color="#E5E5E5"> attack that I discussed earlier</font>

315
00:11:35,900 --> 00:11:39,590
<font color="#E5E5E5">then after fifty one thousand two</font>

316
00:11:37,970 --> 00:11:42,710
<font color="#E5E5E5">hundred traces you can also do this with</font>

317
00:11:39,590 --> 00:11:44,930
Emma<font color="#CCCCCC"> you will</font><font color="#E5E5E5"> get a table of correlation</font>

318
00:11:42,710 --> 00:11:46,490
results and the key<font color="#E5E5E5"> bite with the</font>

319
00:11:44,930 --> 00:11:48,469
<font color="#CCCCCC">highest correlation will be listed at</font>

320
00:11:46,490 --> 00:11:50,260
the<font color="#E5E5E5"> top so in this case it</font><font color="#CCCCCC"> correctly</font>

321
00:11:48,470 --> 00:11:52,880
predicted<font color="#E5E5E5"> that the first</font><font color="#CCCCCC"> bite is b1</font>

322
00:11:50,260 --> 00:11:54,770
<font color="#E5E5E5">however for the second but it's</font>

323
00:11:52,880 --> 00:11:58,370
incorrectly<font color="#E5E5E5"> thought that the key bite</font>

324
00:11:54,770 --> 00:12:00,410
was<font color="#CCCCCC"> 52</font><font color="#E5E5E5"> so whereas</font><font color="#CCCCCC"> we really used d3 so</font>

325
00:11:58,370 --> 00:12:02,090
<font color="#CCCCCC">there's clearly some room for</font>

326
00:12:00,410 --> 00:12:05,750
<font color="#CCCCCC">improvement</font><font color="#E5E5E5"> and let's see if</font><font color="#CCCCCC"> we can do</font>

327
00:12:02,090 --> 00:12:08,350
<font color="#E5E5E5">that using machine learning there were</font>

328
00:12:05,750 --> 00:12:11,350
some issues<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the classical approach</font>

329
00:12:08,350 --> 00:12:13,850
<font color="#E5E5E5">namely it only uses</font><font color="#CCCCCC"> a single</font><font color="#E5E5E5"> point</font>

330
00:12:11,350 --> 00:12:15,350
doesn't<font color="#E5E5E5"> really sound good because there</font>

331
00:12:13,850 --> 00:12:17,180
could<font color="#E5E5E5"> be multiple points</font><font color="#CCCCCC"> in the trace at</font>

332
00:12:15,350 --> 00:12:18,740
<font color="#CCCCCC">leaked</font><font color="#E5E5E5"> information which</font><font color="#CCCCCC"> were only</font><font color="#E5E5E5"> using</font>

333
00:12:17,180 --> 00:12:21,349
one one and<font color="#E5E5E5"> that's the one with the</font>

334
00:12:18,740 --> 00:12:23,600
<font color="#E5E5E5">highest correlation so let's see if you</font>

335
00:12:21,350 --> 00:12:24,950
can fix<font color="#E5E5E5"> that oh yeah you also need to</font>

336
00:12:23,600 --> 00:12:27,830
align<font color="#E5E5E5"> the trace which is also</font>

337
00:12:24,950 --> 00:12:30,100
inconvenient<font color="#E5E5E5"> and it seems</font><font color="#CCCCCC"> that machine</font>

338
00:12:27,830 --> 00:12:32,030
<font color="#CCCCCC">learning</font><font color="#E5E5E5"> and deep learning are good</font>

339
00:12:30,100 --> 00:12:34,580
<font color="#E5E5E5">solution to</font><font color="#CCCCCC"> that problem because</font><font color="#E5E5E5"> what</font>

340
00:12:32,030 --> 00:12:36,620
those algorithms really<font color="#E5E5E5"> do is well if</font>

341
00:12:34,580 --> 00:12:38,510
you consider<font color="#E5E5E5"> a signal as</font><font color="#CCCCCC"> a1 the</font><font color="#E5E5E5"> image</font>

342
00:12:36,620 --> 00:12:41,150
they will automatically extract<font color="#E5E5E5"> all the</font>

343
00:12:38,510 --> 00:12:42,800
features from<font color="#CCCCCC"> that</font><font color="#E5E5E5"> image and try to make</font>

344
00:12:41,150 --> 00:12:45,520
an accurate prediction<font color="#E5E5E5"> and they can do</font>

345
00:12:42,800 --> 00:12:48,229
that<font color="#E5E5E5"> using very complicated filters or</font>

346
00:12:45,520 --> 00:12:52,540
complicated features<font color="#E5E5E5"> and so this seems</font>

347
00:12:48,230 --> 00:12:54,890
like<font color="#E5E5E5"> a good thing to do and exactly</font><font color="#CCCCCC"> in</font>

348
00:12:52,540 --> 00:12:56,680
2017 there was a paper by proof at all

349
00:12:54,890 --> 00:12:58,910
that showed that<font color="#CCCCCC"> this is indeed possible</font>

350
00:12:56,680 --> 00:13:01,819
<font color="#CCCCCC">and there were similar work at blackhat</font>

351
00:12:58,910 --> 00:13:03,650
2018 where they<font color="#E5E5E5"> basically just use your</font>

352
00:13:01,820 --> 00:13:05,990
standards<font color="#E5E5E5"> image classification neural</font>

353
00:13:03,650 --> 00:13:08,120
network and<font color="#E5E5E5"> applied</font><font color="#CCCCCC"> to side channels and</font>

354
00:13:05,990 --> 00:13:10,310
it actually<font color="#E5E5E5"> works</font><font color="#CCCCCC"> so that was quite cool</font>

355
00:13:08,120 --> 00:13:13,100
to<font color="#E5E5E5"> see but is this really the best</font>

356
00:13:10,310 --> 00:13:15,650
approach if we compare<font color="#CCCCCC"> images</font><font color="#E5E5E5"> to what's</font>

357
00:13:13,100 --> 00:13:17,540
the input<font color="#E5E5E5"> data for electromagnetic</font>

358
00:13:15,650 --> 00:13:19,100
radiation looks like then we can see

359
00:13:17,540 --> 00:13:21,589
that they<font color="#CCCCCC"> are very different</font><font color="#E5E5E5"> so in</font>

360
00:13:19,100 --> 00:13:23,780
images you have<font color="#CCCCCC"> clauses that are</font><font color="#E5E5E5"> easily</font>

361
00:13:21,590 --> 00:13:25,580
<font color="#E5E5E5">observable by a human so if we get a</font>

362
00:13:23,780 --> 00:13:27,949
class<font color="#E5E5E5"> corresponding to a car</font>

363
00:13:25,580 --> 00:13:30,260
example we get<font color="#E5E5E5"> one image and you</font><font color="#CCCCCC"> can see</font>

364
00:13:27,950 --> 00:13:31,940
that<font color="#E5E5E5"> it's a car right before</font><font color="#CCCCCC"> en traces</font>

365
00:13:30,260 --> 00:13:34,040
that's not the<font color="#E5E5E5"> case because if you look</font>

366
00:13:31,940 --> 00:13:36,860
<font color="#E5E5E5">at the different traces that I captured</font>

367
00:13:34,040 --> 00:13:39,110
<font color="#E5E5E5">each class looks very similar</font><font color="#CCCCCC"> to the</font>

368
00:13:36,860 --> 00:13:41,120
other one<font color="#CCCCCC"> so there's</font><font color="#E5E5E5"> only a very very</font>

369
00:13:39,110 --> 00:13:43,310
<font color="#E5E5E5">small</font><font color="#CCCCCC"> difference in amplitudes</font><font color="#E5E5E5"> between</font>

370
00:13:41,120 --> 00:13:46,010
the<font color="#E5E5E5"> classes which are the key</font><font color="#CCCCCC"> bytes in</font>

371
00:13:43,310 --> 00:13:48,650
this case so maybe there's a<font color="#E5E5E5"> better</font>

372
00:13:46,010 --> 00:13:50,900
approach<font color="#E5E5E5"> and maybe we can</font><font color="#CCCCCC"> do it</font><font color="#E5E5E5"> in</font>

373
00:13:48,650 --> 00:13:54,020
another<font color="#E5E5E5"> way so here's what you can</font><font color="#CCCCCC"> do</font>

374
00:13:50,900 --> 00:13:56,420
let's assume that<font color="#E5E5E5"> we have an artificial</font>

375
00:13:54,020 --> 00:13:59,870
and<font color="#CCCCCC"> codit race which we call</font><font color="#E5E5E5"> y hat</font><font color="#CCCCCC"> T and</font>

376
00:13:56,420 --> 00:14:02,630
we're going to<font color="#CCCCCC"> construct this original</font>

377
00:13:59,870 --> 00:14:04,070
<font color="#CCCCCC">therosis so we're essentially going</font><font color="#E5E5E5"> to</font>

378
00:14:02,630 --> 00:14:06,770
combine the information<font color="#E5E5E5"> from the</font>

379
00:14:04,070 --> 00:14:08,980
original<font color="#E5E5E5"> trace from multiple</font><font color="#CCCCCC"> XT points</font>

380
00:14:06,770 --> 00:14:11,540
and we're going to<font color="#E5E5E5"> combine them using</font>

381
00:14:08,980 --> 00:14:13,340
activation functions<font color="#E5E5E5"> linear functions on</font>

382
00:14:11,540 --> 00:14:15,160
really matter and the neural network is

383
00:14:13,340 --> 00:14:17,780
going<font color="#E5E5E5"> to learn</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> automatically</font><font color="#CCCCCC"> for us</font>

384
00:14:15,160 --> 00:14:19,969
and the goal<font color="#CCCCCC"> of this encoded trace is of</font>

385
00:14:17,780 --> 00:14:21,740
course to approximate the true value of

386
00:14:19,970 --> 00:14:24,230
the leakage which is equal to<font color="#E5E5E5"> the</font>

387
00:14:21,740 --> 00:14:26,630
Hamming weight of<font color="#E5E5E5"> the sbox results so</font>

388
00:14:24,230 --> 00:14:28,280
now how do we<font color="#E5E5E5"> determine which wage to</font>

389
00:14:26,630 --> 00:14:30,920
elect weights to allocate to these

390
00:14:28,280 --> 00:14:33,380
samples<font color="#CCCCCC"> and how to combine them well we</font>

391
00:14:30,920 --> 00:14:35,599
can<font color="#CCCCCC"> just optimize any</font><font color="#E5E5E5"> neural network</font>

392
00:14:33,380 --> 00:14:37,550
architecture<font color="#CCCCCC"> so we can use for example</font>

393
00:14:35,600 --> 00:14:39,110
multi-layer perceptrons<font color="#CCCCCC"> you can use a</font>

394
00:14:37,550 --> 00:14:41,540
convolutional neural network if you<font color="#E5E5E5"> have</font>

395
00:14:39,110 --> 00:14:42,920
some time<font color="#CCCCCC"> shifted data so the</font>

396
00:14:41,540 --> 00:14:45,199
<font color="#E5E5E5">architecture doesn't really matter as</font>

397
00:14:42,920 --> 00:14:46,939
long<font color="#E5E5E5"> as you</font><font color="#CCCCCC"> end up with these encoded</font>

398
00:14:45,200 --> 00:14:49,550
samples<font color="#E5E5E5"> that</font><font color="#CCCCCC"> combined</font><font color="#E5E5E5"> information from</font>

399
00:14:46,940 --> 00:14:51,260
the<font color="#CCCCCC"> original trace</font><font color="#E5E5E5"> may be also</font>

400
00:14:49,550 --> 00:14:54,829
interesting to<font color="#E5E5E5"> note</font><font color="#CCCCCC"> is that</font><font color="#E5E5E5"> I in this</font>

401
00:14:51,260 --> 00:14:58,280
<font color="#E5E5E5">case used 16 samples for the encoded</font>

402
00:14:54,830 --> 00:14:59,420
trace where<font color="#CCCCCC"> the first sample should</font>

403
00:14:58,280 --> 00:15:01,310
contain<font color="#CCCCCC"> all the information that's</font>

404
00:14:59,420 --> 00:15:04,400
<font color="#CCCCCC">required for guessing</font><font color="#E5E5E5"> the first key</font><font color="#CCCCCC"> byte</font>

405
00:15:01,310 --> 00:15:05,839
and<font color="#E5E5E5"> the last one for the last so okay so</font>

406
00:15:04,400 --> 00:15:10,069
there's one<font color="#E5E5E5"> more thing</font><font color="#CCCCCC"> to do and</font><font color="#E5E5E5"> that's</font>

407
00:15:05,840 --> 00:15:13,220
<font color="#E5E5E5">to tell the needle</font><font color="#CCCCCC"> network how to to</font>

408
00:15:10,070 --> 00:15:14,900
<font color="#CCCCCC">order optimize</font><font color="#E5E5E5"> or rather how to give a</font>

409
00:15:13,220 --> 00:15:17,300
<font color="#E5E5E5">penalty to a certain weight or how to</font>

410
00:15:14,900 --> 00:15:18,770
determine which weights are good and

411
00:15:17,300 --> 00:15:20,750
which<font color="#E5E5E5"> are bad and for</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> use a</font>

412
00:15:18,770 --> 00:15:22,280
loss function<font color="#E5E5E5"> so since we</font><font color="#CCCCCC"> want to</font>

413
00:15:20,750 --> 00:15:24,320
<font color="#CCCCCC">optimize the correlation what you want</font>

414
00:15:22,280 --> 00:15:25,760
to do is you want to do<font color="#CCCCCC"> one</font><font color="#E5E5E5"> minus the</font>

415
00:15:24,320 --> 00:15:27,650
correlation<font color="#CCCCCC"> because in that case if you</font>

416
00:15:25,760 --> 00:15:29,569
<font color="#E5E5E5">have a negative correlation the loss</font>

417
00:15:27,650 --> 00:15:30,949
will be<font color="#E5E5E5"> two if you have no correlation</font>

418
00:15:29,570 --> 00:15:32,900
loss will<font color="#CCCCCC"> be</font><font color="#E5E5E5"> one and if you have a</font>

419
00:15:30,950 --> 00:15:34,490
<font color="#CCCCCC">positive correlation then your loss will</font>

420
00:15:32,900 --> 00:15:36,949
be<font color="#E5E5E5"> zero which is exactly what we want</font>

421
00:15:34,490 --> 00:15:39,379
<font color="#E5E5E5">and then as a general cost function we</font>

422
00:15:36,950 --> 00:15:42,169
<font color="#CCCCCC">take the sum of</font><font color="#E5E5E5"> those</font><font color="#CCCCCC"> 16 loss functions</font>

423
00:15:39,379 --> 00:15:44,809
for each<font color="#CCCCCC"> bite</font><font color="#E5E5E5"> and we have our final cost</font>

424
00:15:42,169 --> 00:15:46,519
function that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> can optimize</font><font color="#E5E5E5"> if you</font>

425
00:15:44,809 --> 00:15:48,709
implant this using<font color="#CCCCCC"> tensorflow</font><font color="#E5E5E5"> then you</font>

426
00:15:46,519 --> 00:15:50,179
don't have<font color="#E5E5E5"> to manually calculate the</font>

427
00:15:48,709 --> 00:15:52,488
gradients to<font color="#E5E5E5"> update the weights they are</font>

428
00:15:50,179 --> 00:15:54,619
calculated<font color="#E5E5E5"> automatically by an optimizer</font>

429
00:15:52,489 --> 00:15:56,869
<font color="#CCCCCC">and for the optimizer you can use</font>

430
00:15:54,619 --> 00:16:02,629
something standard like rmsprop<font color="#E5E5E5"> or</font><font color="#CCCCCC"> Adam</font>

431
00:15:56,869 --> 00:16:04,220
<font color="#E5E5E5">doesn't really matter okay so that's</font>

432
00:16:02,629 --> 00:16:05,869
something<font color="#E5E5E5"> you can also do with Emma and</font>

433
00:16:04,220 --> 00:16:08,419
<font color="#E5E5E5">Emma there are some modules that allow</font>

434
00:16:05,869 --> 00:16:11,149
you<font color="#E5E5E5"> to automatically train on the input</font>

435
00:16:08,419 --> 00:16:12,829
data<font color="#E5E5E5"> so what we're going to do is we're</font>

436
00:16:11,149 --> 00:16:15,259
going<font color="#CCCCCC"> to generate</font><font color="#E5E5E5"> a new data set of</font>

437
00:16:12,829 --> 00:16:16,758
<font color="#E5E5E5">completely random but no encryption so</font>

438
00:16:15,259 --> 00:16:18,979
we know in this<font color="#E5E5E5"> case what</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> plaintext</font>

439
00:16:16,759 --> 00:16:21,589
<font color="#E5E5E5">is we know what the cipher text is with</font>

440
00:16:18,979 --> 00:16:24,109
the only goal of this<font color="#E5E5E5"> data set is to let</font>

441
00:16:21,589 --> 00:16:25,609
it learn what the relationship is

442
00:16:24,109 --> 00:16:27,889
between the<font color="#CCCCCC"> original samples and the</font>

443
00:16:25,609 --> 00:16:29,679
encoded samples<font color="#E5E5E5"> and this can be done</font>

444
00:16:27,889 --> 00:16:31,939
<font color="#CCCCCC">using</font><font color="#E5E5E5"> the core training commands</font><font color="#CCCCCC"> and</font>

445
00:16:29,679 --> 00:16:33,978
this is then what's the neural network

446
00:16:31,939 --> 00:16:36,379
<font color="#E5E5E5">you'll see you have the AES in its</font>

447
00:16:33,979 --> 00:16:39,859
section right<font color="#CCCCCC"> here</font><font color="#E5E5E5"> and you have</font><font color="#CCCCCC"> the AES</font>

448
00:16:36,379 --> 00:16:41,329
encryption<font color="#E5E5E5"> rounds here so what if you</font>

449
00:16:39,859 --> 00:16:44,179
<font color="#E5E5E5">correctly trained your neural network</font>

450
00:16:41,329 --> 00:16:45,949
<font color="#CCCCCC">what you should expect</font><font color="#E5E5E5"> is that there are</font>

451
00:16:44,179 --> 00:16:47,689
some important samples in the first

452
00:16:45,949 --> 00:16:50,329
round of a<font color="#CCCCCC"> es because that's where the</font>

453
00:16:47,689 --> 00:16:53,118
key is<font color="#E5E5E5"> used so one way to verify that is</font>

454
00:16:50,329 --> 00:16:54,799
to visualize<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Saleen</font><font color="#E5E5E5"> see after</font>

455
00:16:53,119 --> 00:16:57,649
learning which<font color="#CCCCCC"> is this</font><font color="#E5E5E5"> another way of</font>

456
00:16:54,799 --> 00:16:59,539
<font color="#E5E5E5">saying okay if I change some value</font><font color="#CCCCCC"> of</font>

457
00:16:57,649 --> 00:17:01,220
<font color="#E5E5E5">the input what</font><font color="#CCCCCC"> will be the effect on</font>

458
00:16:59,539 --> 00:17:03,289
<font color="#CCCCCC">which inputs will have the biggest</font>

459
00:17:01,220 --> 00:17:05,870
<font color="#CCCCCC">effect on the output and for the first</font>

460
00:17:03,289 --> 00:17:08,179
key<font color="#E5E5E5"> bytes</font><font color="#CCCCCC"> this seems to be okay because</font>

461
00:17:05,869 --> 00:17:09,888
we<font color="#CCCCCC"> have a few</font><font color="#E5E5E5"> samples here around the</font>

462
00:17:08,179 --> 00:17:11,839
first one of a<font color="#E5E5E5"> s that we're learnt</font>

463
00:17:09,888 --> 00:17:13,428
automatically by the neural network<font color="#CCCCCC"> the</font>

464
00:17:11,839 --> 00:17:15,888
<font color="#E5E5E5">same for the seven key bytes except that</font>

465
00:17:13,429 --> 00:17:18,199
we<font color="#E5E5E5"> have another leaking point here and</font>

466
00:17:15,888 --> 00:17:21,708
then for the<font color="#E5E5E5"> 12</font><font color="#CCCCCC"> key</font><font color="#E5E5E5"> by it we have</font>

467
00:17:18,199 --> 00:17:23,480
another<font color="#E5E5E5"> few leakage points so now we're</font>

468
00:17:21,709 --> 00:17:24,860
<font color="#E5E5E5">ready to combine all these leakage</font>

469
00:17:23,480 --> 00:17:26,299
points<font color="#CCCCCC"> together and have our encoded</font>

470
00:17:24,859 --> 00:17:29,779
trace by putting it through the<font color="#E5E5E5"> neural</font>

471
00:17:26,299 --> 00:17:32,629
network<font color="#E5E5E5"> and</font><font color="#CCCCCC"> if we then</font><font color="#E5E5E5"> again execute our</font>

472
00:17:29,779 --> 00:17:34,039
attack<font color="#CCCCCC"> we'll end up with fifty one fifty</font>

473
00:17:32,629 --> 00:17:36,590
one thousand two hundred and<font color="#E5E5E5"> coded</font>

474
00:17:34,039 --> 00:17:38,029
traces which then<font color="#E5E5E5"> just</font><font color="#CCCCCC"> combined</font>

475
00:17:36,590 --> 00:17:40,730
<font color="#CCCCCC">information</font><font color="#E5E5E5"> from the</font><font color="#CCCCCC"> original ones and</font>

476
00:17:38,029 --> 00:17:44,899
<font color="#E5E5E5">we can run a standard</font><font color="#CCCCCC"> sima</font><font color="#E5E5E5"> attack once</font>

477
00:17:40,730 --> 00:17:46,789
again so in this case the<font color="#E5E5E5"> algorithm was</font>

478
00:17:44,899 --> 00:17:49,428
able to correctly<font color="#CCCCCC"> determine the entire</font>

479
00:17:46,789 --> 00:17:50,040
key so we don't have to do anything more

480
00:17:49,429 --> 00:17:52,170
than<font color="#E5E5E5"> that</font>

481
00:17:50,040 --> 00:17:55,560
and we clearly<font color="#E5E5E5"> improved upon</font><font color="#CCCCCC"> the</font>

482
00:17:52,170 --> 00:17:58,200
original<font color="#E5E5E5"> attack if you</font><font color="#CCCCCC"> found</font><font color="#E5E5E5"> that</font>

483
00:17:55,560 --> 00:17:59,879
interesting<font color="#CCCCCC"> there is also</font><font color="#E5E5E5"> another test</font>

484
00:17:58,200 --> 00:18:02,610
that<font color="#E5E5E5"> I did</font><font color="#CCCCCC"> in my paper which I will</font>

485
00:17:59,880 --> 00:18:04,710
present<font color="#E5E5E5"> at chess this year</font><font color="#CCCCCC"> I also make a</font>

486
00:18:02,610 --> 00:18:06,540
comparison with<font color="#CCCCCC"> some said of the arts</font>

487
00:18:04,710 --> 00:18:09,480
techniques for<font color="#CCCCCC"> convolutional neural</font>

488
00:18:06,540 --> 00:18:11,940
networks<font color="#CCCCCC"> where they use the 19 they are</font>

489
00:18:09,480 --> 00:18:14,130
<font color="#E5E5E5">CNN for doing actually the same attack</font>

490
00:18:11,940 --> 00:18:16,170
<font color="#E5E5E5">and it turns out that this technique by</font>

491
00:18:14,130 --> 00:18:18,030
using<font color="#E5E5E5"> the encoded</font><font color="#CCCCCC"> traces works quite a</font>

492
00:18:16,170 --> 00:18:20,300
bit better<font color="#E5E5E5"> so</font><font color="#CCCCCC"> feel free to</font><font color="#E5E5E5"> check</font><font color="#CCCCCC"> it out</font>

493
00:18:18,030 --> 00:18:23,639
<font color="#E5E5E5">if you found that interesting</font>

494
00:18:20,300 --> 00:18:25,770
so in conclusion<font color="#E5E5E5"> we've seen how spurious</font>

495
00:18:23,640 --> 00:18:27,960
<font color="#CCCCCC">am emanations can leak information</font><font color="#E5E5E5"> about</font>

496
00:18:25,770 --> 00:18:30,600
the state of a device<font color="#CCCCCC"> we perform the</font>

497
00:18:27,960 --> 00:18:32,490
<font color="#CCCCCC">SEMA attack using low costs rtl-sdr and</font>

498
00:18:30,600 --> 00:18:34,409
we've shown<font color="#E5E5E5"> it is</font><font color="#CCCCCC"> feasible against an</font>

499
00:18:32,490 --> 00:18:36,510
<font color="#E5E5E5">Arduino running software AES and then</font>

500
00:18:34,410 --> 00:18:38,700
<font color="#CCCCCC">five</font><font color="#E5E5E5"> real networks to improve</font><font color="#CCCCCC"> upon this</font>

501
00:18:36,510 --> 00:18:42,410
and<font color="#E5E5E5"> absently remove the</font><font color="#CCCCCC"> noise from those</font>

502
00:18:38,700 --> 00:18:45,570
<font color="#CCCCCC">traces</font><font color="#E5E5E5"> to improve the SEMA attack so</font>

503
00:18:42,410 --> 00:18:47,730
<font color="#CCCCCC">looks</font><font color="#E5E5E5"> like I finished a lot before my</font>

504
00:18:45,570 --> 00:18:51,710
<font color="#E5E5E5">time so thank you very much and if you</font>

505
00:18:47,730 --> 00:18:51,710
<font color="#CCCCCC">have</font><font color="#E5E5E5"> any questions feel free to ask them</font>

506
00:18:53,870 --> 00:18:58,439
also<font color="#CCCCCC"> if you're interested</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> checking</font>

507
00:18:56,550 --> 00:18:59,850
out<font color="#CCCCCC"> MI</font><font color="#E5E5E5"> it's open source on github and I</font>

508
00:18:58,440 --> 00:19:01,560
also put<font color="#CCCCCC"> the datasets that I use to</font>

509
00:18:59,850 --> 00:19:08,010
representation<font color="#CCCCCC"> online so you can</font><font color="#E5E5E5"> also</font>

510
00:19:01,560 --> 00:19:10,080
download them if you want<font color="#E5E5E5"> to is the</font>

511
00:19:08,010 --> 00:19:11,640
training<font color="#E5E5E5"> happening online or offline the</font>

512
00:19:10,080 --> 00:19:13,770
training is happening offline but you

513
00:19:11,640 --> 00:19:15,570
can also specify that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to do it</font>

514
00:19:13,770 --> 00:19:17,700
online so there's an<font color="#E5E5E5"> option for that in</font>

515
00:19:15,570 --> 00:19:19,590
<font color="#E5E5E5">Emma</font><font color="#CCCCCC"> and then it will just</font><font color="#E5E5E5"> swing the</font>

516
00:19:17,700 --> 00:19:22,020
samples over<font color="#E5E5E5"> UDP and</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> train on a</font>

517
00:19:19,590 --> 00:19:28,290
small batch and then you can train it

518
00:19:22,020 --> 00:19:31,170
online<font color="#CCCCCC"> I'm am</font><font color="#E5E5E5"> I assume that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> key is</font>

519
00:19:28,290 --> 00:19:33,149
fixed yes<font color="#E5E5E5"> yes so for this case if you</font>

520
00:19:31,170 --> 00:19:34,590
<font color="#E5E5E5">want to attack a certain key then you</font>

521
00:19:33,150 --> 00:19:38,630
<font color="#E5E5E5">have to assume that the key remains</font>

522
00:19:34,590 --> 00:19:38,629
static for each of the encryptions<font color="#CCCCCC"> yeah</font>

523
00:19:41,840 --> 00:19:52,280
<font color="#E5E5E5">okay so how to protect well yeah</font>

524
00:19:49,760 --> 00:19:53,930
yeah so what you could<font color="#E5E5E5"> do is good of</font>

525
00:19:52,280 --> 00:19:56,510
course<font color="#E5E5E5"> shield your device so that's no</font>

526
00:19:53,930 --> 00:19:58,580
electromagnetic leakage can occur there

527
00:19:56,510 --> 00:19:59,980
are also some software based

528
00:19:58,580 --> 00:20:02,840
countermeasures

529
00:19:59,980 --> 00:20:05,510
<font color="#E5E5E5">for example you can at certain points in</font>

530
00:20:02,840 --> 00:20:07,370
the algorithm<font color="#CCCCCC"> mask the sensitive values</font>

531
00:20:05,510 --> 00:20:09,129
by<font color="#CCCCCC"> excelling them it's random values for</font>

532
00:20:07,370 --> 00:20:11,989
example<font color="#E5E5E5"> and then later on the algorithm</font>

533
00:20:09,130 --> 00:20:14,450
<font color="#E5E5E5">refers that operation to get a correct</font>

534
00:20:11,990 --> 00:20:16,130
result<font color="#CCCCCC"> but it turns out</font><font color="#E5E5E5"> that at least in</font>

535
00:20:14,450 --> 00:20:19,070
the implementation<font color="#CCCCCC"> that I</font><font color="#E5E5E5"> tested in my</font>

536
00:20:16,130 --> 00:20:21,200
paper that<font color="#E5E5E5"> if you use techniques</font><font color="#CCCCCC"> like</font>

537
00:20:19,070 --> 00:20:23,720
neural networks then it will be able<font color="#E5E5E5"> to</font>

538
00:20:21,200 --> 00:20:25,280
find the<font color="#E5E5E5"> relationship between those</font><font color="#CCCCCC"> two</font>

539
00:20:23,720 --> 00:20:26,780
points<font color="#E5E5E5"> because then you just shift the</font>

540
00:20:25,280 --> 00:20:28,550
problem from having only one point<font color="#CCCCCC"> to</font>

541
00:20:26,780 --> 00:20:29,930
investigates<font color="#E5E5E5"> to having two points to</font>

542
00:20:28,550 --> 00:20:31,760
investigate<font color="#CCCCCC"> because you have two</font>

543
00:20:29,930 --> 00:20:35,060
leakages that are important and<font color="#E5E5E5"> you</font>

544
00:20:31,760 --> 00:20:37,550
somehow have to combine<font color="#E5E5E5"> them</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> maybe</font>

545
00:20:35,060 --> 00:20:40,520
there are<font color="#E5E5E5"> software based attacks that's</font>

546
00:20:37,550 --> 00:20:42,620
or<font color="#E5E5E5"> countermeasures</font><font color="#CCCCCC"> that work</font><font color="#E5E5E5"> but anyway</font>

547
00:20:40,520 --> 00:20:45,050
you have<font color="#CCCCCC"> to be yeah you have to think</font>

548
00:20:42,620 --> 00:21:02,810
about<font color="#CCCCCC"> that</font><font color="#E5E5E5"> and test it</font><font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to be</font>

549
00:20:45,050 --> 00:21:04,790
<font color="#E5E5E5">sure yeah yeah so you also have some DPA</font>

550
00:21:02,810 --> 00:21:06,350
<font color="#E5E5E5">stuff and you took the absolute value of</font>

551
00:21:04,790 --> 00:21:07,940
the correlation<font color="#E5E5E5"> well that's something</font>

552
00:21:06,350 --> 00:21:09,080
that you would<font color="#E5E5E5"> do in</font><font color="#CCCCCC"> a standard sima</font>

553
00:21:07,940 --> 00:21:10,760
attack of course<font color="#CCCCCC"> because there could</font>

554
00:21:09,080 --> 00:21:14,090
<font color="#E5E5E5">also be indeed a negative correlation</font>

555
00:21:10,760 --> 00:21:16,970
between<font color="#E5E5E5"> your observer observations and</font>

556
00:21:14,090 --> 00:21:18,439
the models but if you're doing if you're

557
00:21:16,970 --> 00:21:19,340
optimizing machine learning algorithm

558
00:21:18,440 --> 00:21:21,640
then you don't have<font color="#E5E5E5"> to do that because</font>

559
00:21:19,340 --> 00:21:23,540
<font color="#E5E5E5">the optimizer will automatically just</font>

560
00:21:21,640 --> 00:21:24,860
put the weights like this so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you</font>

561
00:21:23,540 --> 00:21:26,800
<font color="#E5E5E5">always have a</font><font color="#CCCCCC"> positive correlation</font>

562
00:21:24,860 --> 00:21:30,620
<font color="#CCCCCC">because then it will just invert</font>

563
00:21:26,800 --> 00:21:41,000
everything so yeah<font color="#E5E5E5"> if that answers your</font>

564
00:21:30,620 --> 00:21:43,129
question if I tried on multiple keys yes

565
00:21:41,000 --> 00:21:45,350
yes of<font color="#E5E5E5"> course yeah it works so it's not</font>

566
00:21:43,130 --> 00:21:47,930
<font color="#E5E5E5">also the sort of training happens on</font>

567
00:21:45,350 --> 00:21:51,199
random<font color="#CCCCCC"> Keys so it's the task that I used</font>

568
00:21:47,930 --> 00:21:52,790
here<font color="#E5E5E5"> is a key that I never observed yes</font>

569
00:21:51,200 --> 00:21:55,570
so you<font color="#E5E5E5"> train under on the random</font><font color="#CCCCCC"> Keys</font>

570
00:21:52,790 --> 00:21:58,580
and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> you evaluate on</font>

571
00:21:55,570 --> 00:22:00,740
yeah yeah yeah<font color="#E5E5E5"> so sometimes if you</font><font color="#CCCCCC"> have</font>

572
00:21:58,580 --> 00:22:02,809
a if your alignment fails or if you have

573
00:22:00,740 --> 00:22:06,289
a very noisy signal it could be that<font color="#E5E5E5"> you</font>

574
00:22:02,809 --> 00:22:07,850
require more<font color="#E5E5E5"> traces for example but yeah</font>

575
00:22:06,289 --> 00:22:19,490
it's also adding noise requires that you

576
00:22:07,850 --> 00:22:21,139
take<font color="#E5E5E5"> more traces in your test set that's</font>

577
00:22:19,490 --> 00:22:23,389
<font color="#E5E5E5">a very good question</font><font color="#CCCCCC"> so how does</font><font color="#E5E5E5"> it</font>

578
00:22:21,139 --> 00:22:26,570
generalize<font color="#CCCCCC"> I didn't test that whether</font>

579
00:22:23,389 --> 00:22:29,748
<font color="#CCCCCC">that's works</font><font color="#E5E5E5"> but you know intuitively</font>

580
00:22:26,570 --> 00:22:31,789
it's<font color="#CCCCCC"> it</font><font color="#E5E5E5"> should because the devices</font>

581
00:22:29,749 --> 00:22:34,549
should<font color="#CCCCCC"> be like similar so we would</font>

582
00:22:31,789 --> 00:22:37,779
<font color="#E5E5E5">expect that they leave but that's just a</font>

583
00:22:34,549 --> 00:22:37,779
guess<font color="#CCCCCC"> I would have</font><font color="#E5E5E5"> to try that</font>

584
00:22:43,010 --> 00:22:59,600
can you speak up<font color="#CCCCCC"> please</font><font color="#E5E5E5"> can you</font><font color="#CCCCCC"> speak up</font>

585
00:22:46,880 --> 00:23:04,010
please<font color="#E5E5E5"> yes okay yeah yeah yeah</font><font color="#CCCCCC"> exactly</font>

586
00:22:59,600 --> 00:23:06,168
<font color="#CCCCCC">yeah yeah</font><font color="#E5E5E5"> that's okay so the question</font>

587
00:23:04,010 --> 00:23:07,640
<font color="#CCCCCC">was the Arduino is a pretty simple</font>

588
00:23:06,169 --> 00:23:10,130
<font color="#CCCCCC">device</font><font color="#E5E5E5"> how would you extend that to</font>

589
00:23:07,640 --> 00:23:11,929
other devices<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> an active topic</font>

590
00:23:10,130 --> 00:23:13,640
<font color="#CCCCCC">and my research actually</font><font color="#E5E5E5"> I'm trying to</font>

591
00:23:11,929 --> 00:23:15,530
do similar<font color="#CCCCCC"> texts on the</font><font color="#E5E5E5"> Raspberry Pi</font><font color="#CCCCCC"> I</font>

592
00:23:13,640 --> 00:23:17,330
know and also more complicated

593
00:23:15,530 --> 00:23:19,549
<font color="#E5E5E5">algorithms this was just for</font>

594
00:23:17,330 --> 00:23:21,830
demonstration purposes because<font color="#E5E5E5"> when I</font>

595
00:23:19,549 --> 00:23:24,290
first<font color="#E5E5E5"> started</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> had a lot of trouble</font>

596
00:23:21,830 --> 00:23:25,490
finding<font color="#E5E5E5"> the information that I needed to</font>

597
00:23:24,290 --> 00:23:28,010
get started<font color="#CCCCCC"> and hopefully</font><font color="#E5E5E5"> this</font>

598
00:23:25,490 --> 00:23:31,160
<font color="#CCCCCC">presentation will</font><font color="#E5E5E5"> repeat that but yes if</font>

599
00:23:28,010 --> 00:23:32,660
you use multi-core CPUs and more

600
00:23:31,160 --> 00:23:44,419
complicated<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> then those attacks</font>

601
00:23:32,660 --> 00:23:47,360
will be<font color="#E5E5E5"> much much harder yeah okay so</font>

602
00:23:44,419 --> 00:23:49,669
what about hardware<font color="#CCCCCC"> AES I personally</font>

603
00:23:47,360 --> 00:23:51,889
didn't test<font color="#E5E5E5"> that but there are some</font>

604
00:23:49,669 --> 00:23:53,780
papers<font color="#E5E5E5"> that's also attack</font><font color="#CCCCCC"> hardware AES</font>

605
00:23:51,890 --> 00:23:55,730
and it seems to<font color="#CCCCCC"> be feasible yes</font><font color="#E5E5E5"> so</font>

606
00:23:53,780 --> 00:23:59,980
that's<font color="#E5E5E5"> also possible as long as you have</font>

607
00:23:55,730 --> 00:23:59,980
some leakage<font color="#E5E5E5"> then yes you can do that</font>

608
00:24:09,730 --> 00:24:15,860
yeah<font color="#E5E5E5"> so how far does it radiate and my</font>

609
00:24:13,280 --> 00:24:17,389
experience<font color="#E5E5E5"> not that far because I try to</font>

610
00:24:15,860 --> 00:24:19,459
do it with a directional<font color="#CCCCCC"> antenna and</font>

611
00:24:17,390 --> 00:24:22,400
then I think<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> amplify the</font>

612
00:24:19,460 --> 00:24:25,190
<font color="#E5E5E5">signal quite a bit in order to to get</font>

613
00:24:22,400 --> 00:24:26,780
some feasible results but in any<font color="#CCCCCC"> case I</font>

614
00:24:25,190 --> 00:24:29,630
<font color="#CCCCCC">just did it with the probe and that</font>

615
00:24:26,780 --> 00:24:31,399
works but yeah from<font color="#E5E5E5"> a long</font><font color="#CCCCCC"> range I don't</font>

616
00:24:29,630 --> 00:24:35,150
know how what you precisely the finest

617
00:24:31,400 --> 00:24:36,620
long range well yeah<font color="#E5E5E5"> some people</font><font color="#CCCCCC"> have</font>

618
00:24:35,150 --> 00:24:38,960
been able<font color="#CCCCCC"> to capture keystrokes through</font>

619
00:24:36,620 --> 00:24:42,320
walls<font color="#E5E5E5"> but that requires a specialized</font>

620
00:24:38,960 --> 00:24:45,309
<font color="#E5E5E5">antenna and powerful</font><font color="#CCCCCC"> amplifiers so it</font>

621
00:24:42,320 --> 00:24:45,309
kinda depends

622
00:25:04,799 --> 00:25:11,370
yeah<font color="#CCCCCC"> so what is my major</font><font color="#E5E5E5"> concern well</font><font color="#CCCCCC"> I</font>

623
00:25:08,919 --> 00:25:15,210
think<font color="#CCCCCC"> it's just fascinating that just by</font>

624
00:25:11,370 --> 00:25:17,709
observing<font color="#E5E5E5"> the electromagnetic waves</font>

625
00:25:15,210 --> 00:25:19,480
<font color="#E5E5E5">executed by or transmitted by a chip</font>

626
00:25:17,710 --> 00:25:21,340
<font color="#E5E5E5">that you can derive sensitive</font>

627
00:25:19,480 --> 00:25:23,020
information like<font color="#CCCCCC"> secret keys so</font>

628
00:25:21,340 --> 00:25:25,000
obviously if you could<font color="#E5E5E5"> improve this</font>

629
00:25:23,020 --> 00:25:27,309
attack and you only require<font color="#E5E5E5"> let's say</font>

630
00:25:25,000 --> 00:25:29,590
one trace or or three traces then this

631
00:25:27,309 --> 00:25:31,600
would be a<font color="#E5E5E5"> very big</font><font color="#CCCCCC"> threats</font><font color="#E5E5E5"> to security</font>

632
00:25:29,590 --> 00:25:38,020
world and even<font color="#E5E5E5"> and</font><font color="#CCCCCC"> especially if you</font><font color="#E5E5E5"> can</font>

633
00:25:31,600 --> 00:25:41,520
do<font color="#E5E5E5"> that on a long range so yeah that</font>

634
00:25:38,020 --> 00:25:41,520
would<font color="#E5E5E5"> be concerning</font><font color="#CCCCCC"> I guess</font>

635
00:25:48,840 --> 00:25:58,959
<font color="#E5E5E5">okay thank you</font>

636
00:25:51,250 --> 00:25:58,960
[Applause]

