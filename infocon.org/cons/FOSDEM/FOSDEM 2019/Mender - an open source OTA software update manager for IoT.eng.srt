1
00:00:06,300 --> 00:00:11,680
so now welcome to<font color="#CCCCCC"> the</font><font color="#E5E5E5"> last today's last</font>

2
00:00:09,610 --> 00:00:19,110
talk here<font color="#CCCCCC"> enjoy so on</font>

3
00:00:11,680 --> 00:00:19,110
by<font color="#E5E5E5"> drew mostly on manda so yeah welcome</font>

4
00:00:23,829 --> 00:00:32,269
<font color="#CCCCCC">thanks so much</font><font color="#E5E5E5"> I guess microphone</font><font color="#CCCCCC"> is</font>

5
00:00:26,900 --> 00:00:34,699
<font color="#CCCCCC">working very good</font><font color="#E5E5E5"> very good so my name</font>

6
00:00:32,269 --> 00:00:35,930
<font color="#CCCCCC">is</font><font color="#E5E5E5"> drew</font><font color="#CCCCCC"> Mosley I'm here to talk</font><font color="#E5E5E5"> a little</font>

7
00:00:34,699 --> 00:00:38,180
bit<font color="#CCCCCC"> about meandering I've talked to a</font>

8
00:00:35,930 --> 00:00:40,070
lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> you today so hopefully</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> will</font>

9
00:00:38,180 --> 00:00:42,800
be review if I did my job<font color="#CCCCCC"> right</font><font color="#E5E5E5"> out of</font>

10
00:00:40,070 --> 00:00:45,019
the<font color="#E5E5E5"> the booth you know</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> answering</font>

11
00:00:42,800 --> 00:00:46,489
questions<font color="#CCCCCC"> properly</font><font color="#E5E5E5"> for you but hopefully</font>

12
00:00:45,019 --> 00:00:48,250
<font color="#CCCCCC">we'll get</font><font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit deeper here</font><font color="#E5E5E5"> and</font>

13
00:00:46,489 --> 00:00:50,839
give you a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit more</font><font color="#CCCCCC"> information</font>

14
00:00:48,250 --> 00:00:52,429
<font color="#E5E5E5">we've about made it to the end of the</font>

15
00:00:50,839 --> 00:00:54,109
day which<font color="#CCCCCC"> is good that means</font><font color="#E5E5E5"> there's no</font>

16
00:00:52,429 --> 00:00:56,719
speaker after<font color="#CCCCCC"> me to get annoyed if</font><font color="#E5E5E5"> I</font>

17
00:00:54,109 --> 00:00:57,980
speak too long<font color="#E5E5E5"> downside</font><font color="#CCCCCC"> is everybody</font>

18
00:00:56,719 --> 00:00:59,210
<font color="#E5E5E5">looking at me will</font><font color="#CCCCCC"> probably be annoyed</font>

19
00:00:57,980 --> 00:01:01,370
<font color="#E5E5E5">if I speak too long because</font><font color="#CCCCCC"> I'm</font>

20
00:00:59,210 --> 00:01:03,230
certainly<font color="#E5E5E5"> in the way of dinner drinks or</font>

21
00:01:01,370 --> 00:01:05,059
<font color="#CCCCCC">something much more interesting so I'll</font>

22
00:01:03,230 --> 00:01:07,039
try<font color="#E5E5E5"> to keep on time and I'm sure the</font>

23
00:01:05,059 --> 00:01:09,200
folks<font color="#E5E5E5"> in the orange t-shirts will do</font>

24
00:01:07,039 --> 00:01:11,630
their<font color="#CCCCCC"> best to make sure that I do so</font><font color="#E5E5E5"> so</font>

25
00:01:09,200 --> 00:01:13,700
just a<font color="#E5E5E5"> brief overview things</font><font color="#CCCCCC"> we're going</font>

26
00:01:11,630 --> 00:01:16,339
to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> some challenges and</font>

27
00:01:13,700 --> 00:01:18,920
motivations<font color="#E5E5E5"> that led us</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> development</font>

28
00:01:16,340 --> 00:01:21,050
<font color="#E5E5E5">or as a</font><font color="#CCCCCC"> project</font><font color="#E5E5E5"> specifically focusing on</font>

29
00:01:18,920 --> 00:01:23,210
the unique<font color="#E5E5E5"> needs of the embedded</font>

30
00:01:21,050 --> 00:01:24,950
marketplace<font color="#E5E5E5"> then we're going</font><font color="#CCCCCC"> to kind of</font>

31
00:01:23,210 --> 00:01:26,689
<font color="#E5E5E5">dig dig into some of the requirements</font>

32
00:01:24,950 --> 00:01:28,640
that<font color="#E5E5E5"> we put together some non-functional</font>

33
00:01:26,689 --> 00:01:31,279
requirements as well<font color="#CCCCCC"> as some installer</font>

34
00:01:28,640 --> 00:01:33,560
strategies specifically ready<font color="#E5E5E5"> related to</font>

35
00:01:31,280 --> 00:01:36,469
the functioning of the update client

36
00:01:33,560 --> 00:01:38,930
<font color="#CCCCCC">that we've developed and finally</font><font color="#E5E5E5"> we'll</font>

37
00:01:36,469 --> 00:01:42,199
dig in<font color="#E5E5E5"> to menders specifically address</font>

38
00:01:38,930 --> 00:01:43,670
some of the how we implemented<font color="#E5E5E5"> certain</font>

39
00:01:42,200 --> 00:01:46,100
things<font color="#E5E5E5"> based on the requirements that we</font>

40
00:01:43,670 --> 00:01:49,399
outline in<font color="#E5E5E5"> bullet point number two here</font>

41
00:01:46,100 --> 00:01:51,740
<font color="#E5E5E5">if the demo gods</font><font color="#CCCCCC"> are on my side I'll be</font>

42
00:01:49,399 --> 00:01:54,110
able<font color="#E5E5E5"> to</font><font color="#CCCCCC"> at least demo a small</font><font color="#E5E5E5"> portion of</font>

43
00:01:51,740 --> 00:01:57,320
<font color="#E5E5E5">this system and so that</font><font color="#CCCCCC"> we'll get</font><font color="#E5E5E5"> a</font>

44
00:01:54,110 --> 00:01:59,689
better<font color="#E5E5E5"> idea</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> what the workflow is like</font>

45
00:01:57,320 --> 00:02:01,369
when when using the vendor system then

46
00:01:59,689 --> 00:02:04,189
we'll go into<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more</font>

47
00:02:01,369 --> 00:02:05,450
technical<font color="#E5E5E5"> detail of some</font><font color="#CCCCCC"> of the device</font>

48
00:02:04,189 --> 00:02:06,949
requirements and things<font color="#E5E5E5"> needed to</font>

49
00:02:05,450 --> 00:02:10,850
<font color="#CCCCCC">actually integrate vendor into your</font>

50
00:02:06,950 --> 00:02:13,070
embedded device<font color="#CCCCCC"> briefly talked mentioned</font>

51
00:02:10,850 --> 00:02:15,680
some of<font color="#E5E5E5"> the testing and the general</font>

52
00:02:13,070 --> 00:02:17,870
<font color="#CCCCCC">community general community</font><font color="#E5E5E5"> open source</font>

53
00:02:15,680 --> 00:02:21,170
type of<font color="#E5E5E5"> things that</font><font color="#CCCCCC"> we have involved in</font>

54
00:02:17,870 --> 00:02:22,609
<font color="#E5E5E5">the project so briefly about me I've</font>

55
00:02:21,170 --> 00:02:26,059
been<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> embedded Linux and</font><font color="#CCCCCC"> Yocto</font>

56
00:02:22,609 --> 00:02:28,770
development<font color="#E5E5E5"> space for about</font><font color="#CCCCCC"> 10 years</font><font color="#E5E5E5"> now</font>

57
00:02:26,060 --> 00:02:31,260
longer than<font color="#E5E5E5"> I'd like to admit in general</font>

58
00:02:28,770 --> 00:02:34,230
embedded my current<font color="#E5E5E5"> role is I am the</font>

59
00:02:31,260 --> 00:02:36,920
<font color="#CCCCCC">project lead and technical solutions</font>

60
00:02:34,230 --> 00:02:39,480
<font color="#E5E5E5">architects for for the vendor product</font>

61
00:02:36,920 --> 00:02:41,429
<font color="#E5E5E5">focused on customer</font><font color="#CCCCCC"> facing solutions and</font>

62
00:02:39,480 --> 00:02:42,720
<font color="#E5E5E5">that kind of thing you see some of the</font>

63
00:02:41,430 --> 00:02:44,220
details of meander<font color="#CCCCCC"> over here but we're</font>

64
00:02:42,720 --> 00:02:46,620
<font color="#E5E5E5">gonna dig into those so we'll just move</font>

65
00:02:44,220 --> 00:02:49,680
<font color="#CCCCCC">right on past that a real quick sales</font>

66
00:02:46,620 --> 00:02:51,930
job we are<font color="#E5E5E5"> hiring for some of the</font>

67
00:02:49,680 --> 00:02:54,240
<font color="#E5E5E5">positions you see here on the screen and</font>

68
00:02:51,930 --> 00:02:56,820
we do have a<font color="#CCCCCC"> table out over</font><font color="#E5E5E5"> that way</font>

69
00:02:54,240 --> 00:02:58,080
somewhere so if this<font color="#E5E5E5"> looks of interest</font>

70
00:02:56,820 --> 00:03:00,150
to you feel<font color="#E5E5E5"> free to stop</font><font color="#CCCCCC"> by and</font><font color="#E5E5E5"> talk to</font>

71
00:02:58,080 --> 00:03:03,870
<font color="#CCCCCC">us</font><font color="#E5E5E5"> tomorrow or</font><font color="#CCCCCC"> catch us on our way out</font>

72
00:03:00,150 --> 00:03:05,940
this<font color="#E5E5E5"> evening so briefly I just want to</font>

73
00:03:03,870 --> 00:03:07,800
kind<font color="#CCCCCC"> of motivate why OTA is needed I</font>

74
00:03:05,940 --> 00:03:09,329
suspect the majority of<font color="#E5E5E5"> the folks in</font>

75
00:03:07,800 --> 00:03:11,250
this room<font color="#CCCCCC"> don't</font><font color="#E5E5E5"> need a whole lot</font><font color="#CCCCCC"> of</font>

76
00:03:09,330 --> 00:03:13,050
convincing<font color="#E5E5E5"> but there's a</font><font color="#CCCCCC"> couple</font><font color="#E5E5E5"> of</font>

77
00:03:11,250 --> 00:03:14,610
<font color="#CCCCCC">examples on this slide</font><font color="#E5E5E5"> of things that</font>

78
00:03:13,050 --> 00:03:17,400
have<font color="#E5E5E5"> happened in the</font><font color="#CCCCCC"> a specifically</font><font color="#E5E5E5"> in</font>

79
00:03:14,610 --> 00:03:19,050
the IOT space<font color="#CCCCCC"> that were a</font><font color="#E5E5E5"> result of</font>

80
00:03:17,400 --> 00:03:21,600
<font color="#E5E5E5">either non-existent or poorly</font>

81
00:03:19,050 --> 00:03:24,180
implemented<font color="#E5E5E5"> Update technologies there</font>

82
00:03:21,600 --> 00:03:28,799
were some smart locks that were used as

83
00:03:24,180 --> 00:03:31,739
part<font color="#E5E5E5"> of certain home sharing sites to</font>

84
00:03:28,800 --> 00:03:34,020
allow owners<font color="#E5E5E5"> to remotely open and close</font>

85
00:03:31,739 --> 00:03:36,810
<font color="#E5E5E5">their house when their guests were</font>

86
00:03:34,020 --> 00:03:39,330
<font color="#CCCCCC">arriving and at some point they tried to</font>

87
00:03:36,810 --> 00:03:41,520
<font color="#E5E5E5">push out an update however they pushed</font>

88
00:03:39,330 --> 00:03:43,800
the<font color="#CCCCCC"> the wrong update and it was for a</font>

89
00:03:41,520 --> 00:03:46,230
<font color="#CCCCCC">different version</font><font color="#E5E5E5"> of hardware and it</font>

90
00:03:43,800 --> 00:03:47,970
resulted in<font color="#E5E5E5"> these these expensive door</font>

91
00:03:46,230 --> 00:03:50,329
locks being completely bricked<font color="#E5E5E5"> and</font>

92
00:03:47,970 --> 00:03:52,950
unable to<font color="#E5E5E5"> let people in</font><font color="#CCCCCC"> or out</font><font color="#E5E5E5"> of the</font>

93
00:03:50,330 --> 00:03:55,680
homes<font color="#E5E5E5"> until somebody physically went on</font>

94
00:03:52,950 --> 00:03:59,280
site and<font color="#E5E5E5"> was able to to actually update</font>

95
00:03:55,680 --> 00:04:02,280
<font color="#CCCCCC">the devices by hand there's been a lot</font>

96
00:03:59,280 --> 00:04:04,170
of talk in<font color="#E5E5E5"> the automotive space of head</font>

97
00:04:02,280 --> 00:04:06,570
units<font color="#E5E5E5"> running the infotainment systems</font>

98
00:04:04,170 --> 00:04:09,208
that get caught in a reboot loop<font color="#CCCCCC"> due to</font>

99
00:04:06,570 --> 00:04:10,500
poor poorly implemented updates and one

100
00:04:09,209 --> 00:04:12,120
that<font color="#E5E5E5"> for I'm sure</font><font color="#CCCCCC"> we've all</font><font color="#E5E5E5"> heard about</font>

101
00:04:10,500 --> 00:04:14,730
<font color="#E5E5E5">is the botnets that</font><font color="#CCCCCC"> are out there I</font>

102
00:04:12,120 --> 00:04:17,250
<font color="#E5E5E5">think the</font><font color="#CCCCCC"> biggest</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> that kind of made</font>

103
00:04:14,730 --> 00:04:20,760
the headlines was Mirai this was a

104
00:04:17,250 --> 00:04:22,710
<font color="#E5E5E5">couple</font><font color="#CCCCCC"> years ago now some claim it</font>

105
00:04:20,760 --> 00:04:25,169
peaked at<font color="#CCCCCC"> about 600,000 infections I've</font>

106
00:04:22,710 --> 00:04:27,719
seen<font color="#E5E5E5"> reports as high as a million and a</font>

107
00:04:25,169 --> 00:04:30,570
<font color="#CCCCCC">half and I'm sure the</font><font color="#E5E5E5"> the more recent</font>

108
00:04:27,720 --> 00:04:35,669
numbers are even<font color="#E5E5E5"> higher</font><font color="#CCCCCC"> it did it was</font>

109
00:04:30,570 --> 00:04:37,510
used<font color="#E5E5E5"> to issue exhibit a DDoS against</font>

110
00:04:35,669 --> 00:04:40,570
major<font color="#E5E5E5"> Internet</font>

111
00:04:37,510 --> 00:04:42,550
in in late 2016 taking<font color="#E5E5E5"> down many large</font>

112
00:04:40,570 --> 00:04:45,490
<font color="#E5E5E5">internet brands that I'm sure we all use</font>

113
00:04:42,550 --> 00:04:49,410
day to<font color="#E5E5E5"> day</font><font color="#CCCCCC"> and the intent of that really</font>

114
00:04:45,490 --> 00:04:51,550
<font color="#E5E5E5">as far as we know the at this point was</font>

115
00:04:49,410 --> 00:04:55,330
<font color="#E5E5E5">profit the folks that were eventually</font>

116
00:04:51,550 --> 00:04:57,460
caught<font color="#CCCCCC"> and and prosecuted</font><font color="#E5E5E5"> for this were</font>

117
00:04:55,330 --> 00:04:59,050
my understanding was they were running

118
00:04:57,460 --> 00:05:00,400
<font color="#CCCCCC">Minecraft servers</font><font color="#E5E5E5"> and they wanted to be</font>

119
00:04:59,050 --> 00:05:02,860
able<font color="#E5E5E5"> to take their competitors offline</font>

120
00:05:00,400 --> 00:05:06,460
so they they developed this botnet to be

121
00:05:02,860 --> 00:05:08,920
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to actually attack their their</font>

122
00:05:06,460 --> 00:05:10,150
competitors<font color="#CCCCCC"> in that space another one</font>

123
00:05:08,920 --> 00:05:13,120
<font color="#E5E5E5">that came out shortly after that that</font>

124
00:05:10,150 --> 00:05:15,400
<font color="#CCCCCC">was called</font><font color="#E5E5E5"> Bricker</font><font color="#CCCCCC"> bots and the author</font>

125
00:05:13,120 --> 00:05:17,800
claimed ten thousand or ten million

126
00:05:15,400 --> 00:05:21,400
<font color="#CCCCCC">infections although that that number</font>

127
00:05:17,800 --> 00:05:24,220
<font color="#E5E5E5">seems a bit a bit</font><font color="#CCCCCC"> high to me but it</font>

128
00:05:21,400 --> 00:05:28,229
certainly did hit some large<font color="#CCCCCC"> number a</font>

129
00:05:24,220 --> 00:05:32,470
large number of<font color="#CCCCCC"> devices the the</font><font color="#E5E5E5"> the</font>

130
00:05:28,230 --> 00:05:35,680
assumed author officially quote retired

131
00:05:32,470 --> 00:05:39,160
in November<font color="#CCCCCC"> of 2016 the intent</font><font color="#E5E5E5"> of this</font>

132
00:05:35,680 --> 00:05:42,030
was what has<font color="#E5E5E5"> been termed a permanent</font>

133
00:05:39,160 --> 00:05:45,160
denial of service so once a<font color="#E5E5E5"> device was</font>

134
00:05:42,030 --> 00:05:47,200
added to this botnet basically all the

135
00:05:45,160 --> 00:05:49,030
block storage<font color="#E5E5E5"> devices were overridden</font>

136
00:05:47,200 --> 00:05:50,680
<font color="#E5E5E5">with random data to ensure</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> the</font>

137
00:05:49,030 --> 00:05:52,809
device<font color="#CCCCCC"> could no longer function at all</font>

138
00:05:50,680 --> 00:05:55,590
and was taken offline and and the

139
00:05:52,810 --> 00:05:57,729
<font color="#CCCCCC">authors claimed intent was to address</font>

140
00:05:55,590 --> 00:06:00,659
<font color="#E5E5E5">devices that were on the network and</font>

141
00:05:57,729 --> 00:06:04,120
potentially vulnerable<font color="#CCCCCC"> causing causing</font>

142
00:06:00,660 --> 00:06:05,680
<font color="#CCCCCC">havoc</font><font color="#E5E5E5"> in the internet it ecosystem and</font>

143
00:06:04,120 --> 00:06:07,419
so<font color="#CCCCCC"> the</font><font color="#E5E5E5"> point was pretty much like</font>

144
00:06:05,680 --> 00:06:08,979
<font color="#CCCCCC">chemotherapy like kill you know</font>

145
00:06:07,419 --> 00:06:12,370
destroying the devices to save the rest

146
00:06:08,979 --> 00:06:14,860
of the system<font color="#E5E5E5"> and there</font><font color="#CCCCCC"> are newer</font>

147
00:06:12,370 --> 00:06:16,840
<font color="#E5E5E5">botnets that come out</font><font color="#CCCCCC"> every day</font><font color="#E5E5E5"> that get</font>

148
00:06:14,860 --> 00:06:21,280
even more<font color="#CCCCCC"> sophisticated the the early</font>

149
00:06:16,840 --> 00:06:22,750
botnets<font color="#E5E5E5"> were very much around</font><font color="#CCCCCC"> leaked</font>

150
00:06:21,280 --> 00:06:25,150
credentials and things like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but the</font>

151
00:06:22,750 --> 00:06:26,830
newer ones are using using more

152
00:06:25,150 --> 00:06:29,380
insidious<font color="#E5E5E5"> method mechanisms of getting</font>

153
00:06:26,830 --> 00:06:32,760
<font color="#E5E5E5">access to the to the to the system so</font>

154
00:06:29,380 --> 00:06:32,760
this<font color="#E5E5E5"> is an ongoing problem</font>

155
00:06:37,749 --> 00:06:42,289
so a couple<font color="#E5E5E5"> characteristics of the</font>

156
00:06:40,610 --> 00:06:45,169
embedded environment that makes<font color="#E5E5E5"> it a</font>

157
00:06:42,289 --> 00:06:46,969
little<font color="#E5E5E5"> bit unique compared to say</font>

158
00:06:45,169 --> 00:06:48,830
server-side programming or<font color="#CCCCCC"> web-based</font>

159
00:06:46,969 --> 00:06:51,649
<font color="#E5E5E5">programming typically the devices are</font>

160
00:06:48,830 --> 00:06:55,248
remote it could be pretty expensive<font color="#CCCCCC"> to</font>

161
00:06:51,649 --> 00:06:57,199
<font color="#E5E5E5">send a technician</font><font color="#CCCCCC"> on-site</font><font color="#E5E5E5"> to to take the</font>

162
00:06:55,249 --> 00:07:00,019
magic USB key<font color="#CCCCCC"> and install an update</font><font color="#E5E5E5"> so</font>

163
00:06:57,199 --> 00:07:01,909
you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> so you want some means of</font>

164
00:07:00,019 --> 00:07:05,869
accessing devices and doing<font color="#CCCCCC"> there the</font>

165
00:07:01,909 --> 00:07:07,729
remotes<font color="#CCCCCC"> the</font><font color="#E5E5E5"> the updates remotely</font><font color="#CCCCCC"> product</font>

166
00:07:05,869 --> 00:07:10,249
<font color="#E5E5E5">lifetimes are they vary widely in the</font>

167
00:07:07,729 --> 00:07:11,599
embedded space some some markets are as

168
00:07:10,249 --> 00:07:13,249
long<font color="#E5E5E5"> as five to ten years if you're in</font>

169
00:07:11,599 --> 00:07:14,869
the<font color="#CCCCCC"> automotive</font><font color="#E5E5E5"> space if you're in the</font>

170
00:07:13,249 --> 00:07:16,459
consumer<font color="#CCCCCC"> electronics</font><font color="#E5E5E5"> space it could be</font>

171
00:07:14,869 --> 00:07:19,069
you know<font color="#E5E5E5"> six to</font><font color="#CCCCCC"> twelve</font><font color="#E5E5E5"> months</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> there's</font>

172
00:07:16,459 --> 00:07:20,629
a quite quite a variety<font color="#E5E5E5"> there typically</font>

173
00:07:19,069 --> 00:07:22,339
<font color="#CCCCCC">they're in a very hostile deployment</font>

174
00:07:20,629 --> 00:07:25,429
environment typically<font color="#CCCCCC"> outside of your</font>

175
00:07:22,339 --> 00:07:27,139
<font color="#E5E5E5">control</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> about the Wi-Fi routers</font>

176
00:07:25,429 --> 00:07:29,058
and things that<font color="#CCCCCC"> are in your local</font><font color="#E5E5E5"> coffee</font>

177
00:07:27,139 --> 00:07:32,300
shop they're not not<font color="#CCCCCC"> exactly in a</font>

178
00:07:29,059 --> 00:07:33,979
controlled environment<font color="#E5E5E5"> power issues have</font>

179
00:07:32,300 --> 00:07:35,769
to<font color="#CCCCCC"> be dealt with</font><font color="#E5E5E5"> a lot of these devices</font>

180
00:07:33,979 --> 00:07:37,849
<font color="#E5E5E5">are running on power on battery power</font>

181
00:07:35,769 --> 00:07:39,979
<font color="#E5E5E5">and even if they're not there's no</font>

182
00:07:37,849 --> 00:07:41,419
guarantee the owner of the device<font color="#E5E5E5"> won't</font>

183
00:07:39,979 --> 00:07:42,769
reach over and<font color="#E5E5E5"> yank the power cord out</font>

184
00:07:41,419 --> 00:07:45,529
of the wall at any given moment so

185
00:07:42,769 --> 00:07:48,169
you've got to be able<font color="#E5E5E5"> to handle power</font>

186
00:07:45,529 --> 00:07:51,199
<font color="#CCCCCC">unsafe characteristics in your update</font>

187
00:07:48,169 --> 00:07:53,748
system<font color="#E5E5E5"> and finally the network typically</font>

188
00:07:51,199 --> 00:07:55,869
<font color="#E5E5E5">is going</font><font color="#CCCCCC"> to be a</font><font color="#E5E5E5"> little bit different</font>

189
00:07:53,749 --> 00:07:58,189
<font color="#CCCCCC">than you than your typical data center</font>

190
00:07:55,869 --> 00:08:00,529
<font color="#E5E5E5">the</font><font color="#CCCCCC"> connectivity might be intermittent</font>

191
00:07:58,189 --> 00:08:02,149
<font color="#E5E5E5">it you might be</font><font color="#CCCCCC"> over 3G or a 4G</font>

192
00:08:00,529 --> 00:08:04,849
connection<font color="#CCCCCC"> or</font><font color="#E5E5E5"> something even slower than</font>

193
00:08:02,149 --> 00:08:08,119
<font color="#CCCCCC">that and and you may or</font><font color="#E5E5E5"> may not have a</font>

194
00:08:04,849 --> 00:08:11,319
may or may not<font color="#E5E5E5"> have secure connectivity</font>

195
00:08:08,119 --> 00:08:13,759
if you're<font color="#E5E5E5"> going through public networks</font>

196
00:08:11,319 --> 00:08:15,979
so what are some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> requirements</font>

197
00:08:13,759 --> 00:08:17,839
that we laid out when we were designing

198
00:08:15,979 --> 00:08:20,209
<font color="#CCCCCC">meander in the first place one</font>

199
00:08:17,839 --> 00:08:22,339
robustness and<font color="#E5E5E5"> security kind of vague</font>

200
00:08:20,209 --> 00:08:24,800
terms but specifically in terms<font color="#E5E5E5"> of</font>

201
00:08:22,339 --> 00:08:27,229
updating<font color="#E5E5E5"> capabilities we wanted to make</font>

202
00:08:24,800 --> 00:08:29,269
sure<font color="#E5E5E5"> that rollback was supported we are</font>

203
00:08:27,229 --> 00:08:31,128
we always<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> ability to roll back</font>

204
00:08:29,269 --> 00:08:33,198
<font color="#E5E5E5">to a known good configuration this is</font><font color="#CCCCCC"> to</font>

205
00:08:31,129 --> 00:08:34,399
<font color="#E5E5E5">avoid brick devices in the field we</font>

206
00:08:33,198 --> 00:08:36,438
wanted to be able<font color="#E5E5E5"> to have signed</font><font color="#CCCCCC"> and</font>

207
00:08:34,399 --> 00:08:37,938
trusted images<font color="#CCCCCC"> standard industry best</font>

208
00:08:36,438 --> 00:08:40,789
practices as far as cryptographic

209
00:08:37,938 --> 00:08:42,318
signatures and<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> that and we</font>

210
00:08:40,789 --> 00:08:44,329
wanted the ability<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have integrity</font>

211
00:08:42,318 --> 00:08:47,449
<font color="#CCCCCC">checks of</font><font color="#E5E5E5"> the images to make sure that</font>

212
00:08:44,329 --> 00:08:48,559
the you know<font color="#CCCCCC"> you didn't have a download</font>

213
00:08:47,449 --> 00:08:49,229
failure or you<font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> have a</font>

214
00:08:48,559 --> 00:08:51,150
<font color="#CCCCCC">man-in-the-middle</font>

215
00:08:49,230 --> 00:08:52,620
trying to inject the bad image<font color="#E5E5E5"> and then</font>

216
00:08:51,150 --> 00:08:54,870
compatibility checks and this is

217
00:08:52,620 --> 00:08:57,000
specifically<font color="#E5E5E5"> to address issues</font><font color="#CCCCCC"> that were</font>

218
00:08:54,870 --> 00:08:58,890
<font color="#E5E5E5">mentioned for in a previous slide</font>

219
00:08:57,000 --> 00:08:59,790
<font color="#E5E5E5">related to the smart locks you want to</font>

220
00:08:58,890 --> 00:09:01,590
make sure<font color="#E5E5E5"> that the image you're</font>

221
00:08:59,790 --> 00:09:05,040
installing<font color="#E5E5E5"> is specifically for the</font>

222
00:09:01,590 --> 00:09:06,540
device you're installing it on another

223
00:09:05,040 --> 00:09:08,160
requirement is<font color="#CCCCCC"> atomic updates</font><font color="#E5E5E5"> this is</font>

224
00:09:06,540 --> 00:09:09,540
<font color="#E5E5E5">very important when you're</font><font color="#CCCCCC"> talking with</font>

225
00:09:08,160 --> 00:09:12,240
large when you're talking about large

226
00:09:09,540 --> 00:09:14,459
device fleets<font color="#CCCCCC"> if I have if you have are</font>

227
00:09:12,240 --> 00:09:16,140
attempting<font color="#CCCCCC"> to install an update and it</font>

228
00:09:14,460 --> 00:09:18,210
could crash halfway through and you get

229
00:09:16,140 --> 00:09:20,220
a update<font color="#E5E5E5"> that's half installed and you</font>

230
00:09:18,210 --> 00:09:22,020
have a device fleet of a million devices

231
00:09:20,220 --> 00:09:23,700
<font color="#E5E5E5">that means you've got</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot of different</font>

232
00:09:22,020 --> 00:09:25,350
<font color="#CCCCCC">possibilities of what</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> actual</font>

233
00:09:23,700 --> 00:09:28,530
software<font color="#CCCCCC"> is that's installed</font><font color="#E5E5E5"> on your</font>

234
00:09:25,350 --> 00:09:31,320
device<font color="#CCCCCC"> so ideally no component in the</font>

235
00:09:28,530 --> 00:09:33,780
system<font color="#CCCCCC"> will be</font><font color="#E5E5E5"> aware of a partial update</font>

236
00:09:31,320 --> 00:09:35,610
except for the update client<font color="#E5E5E5"> itself so</font>

237
00:09:33,780 --> 00:09:37,350
if there<font color="#CCCCCC"> is a failure in the update the</font>

238
00:09:35,610 --> 00:09:38,790
update<font color="#E5E5E5"> client detects that and make</font><font color="#CCCCCC"> sure</font>

239
00:09:37,350 --> 00:09:41,510
<font color="#E5E5E5">that none of the rest</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the system is</font>

240
00:09:38,790 --> 00:09:43,730
<font color="#E5E5E5">available or it is impacted by</font><font color="#CCCCCC"> it</font>

241
00:09:41,510 --> 00:09:46,290
obviously we want<font color="#E5E5E5"> to be able to support</font>

242
00:09:43,730 --> 00:09:48,660
updating<font color="#E5E5E5"> everything that's that we can</font>

243
00:09:46,290 --> 00:09:51,089
in the in the target<font color="#CCCCCC"> system image so</font>

244
00:09:48,660 --> 00:09:53,250
<font color="#E5E5E5">kernel apps libraries</font><font color="#CCCCCC"> device trees that</font>

245
00:09:51,090 --> 00:09:55,800
kind<font color="#CCCCCC"> of thing there has been some</font>

246
00:09:53,250 --> 00:09:57,780
discussion<font color="#E5E5E5"> of updating boot loaders</font><font color="#CCCCCC"> and</font>

247
00:09:55,800 --> 00:10:00,240
the only<font color="#E5E5E5"> way to do that robustly would</font>

248
00:09:57,780 --> 00:10:04,140
be to set up some<font color="#E5E5E5"> kind of multi stage</font>

249
00:10:00,240 --> 00:10:05,670
boot load because there has to be some

250
00:10:04,140 --> 00:10:08,460
piece of<font color="#E5E5E5"> code that</font><font color="#CCCCCC"> is immutable</font><font color="#E5E5E5"> in the</font>

251
00:10:05,670 --> 00:10:10,800
board to avoid<font color="#E5E5E5"> any windows for getting</font>

252
00:10:08,460 --> 00:10:12,630
brick devices it needs to<font color="#CCCCCC"> integrate well</font>

253
00:10:10,800 --> 00:10:14,729
with<font color="#E5E5E5"> existing environments so most of</font>

254
00:10:12,630 --> 00:10:16,170
most of these designs come to come to

255
00:10:14,730 --> 00:10:18,420
<font color="#CCCCCC">meander they are already</font><font color="#E5E5E5"> pretty far</font>

256
00:10:16,170 --> 00:10:19,680
<font color="#E5E5E5">along whether they're using yokte or</font>

257
00:10:18,420 --> 00:10:21,300
they're using<font color="#CCCCCC"> Debbie and that kind of</font>

258
00:10:19,680 --> 00:10:22,890
thing we wanted a<font color="#E5E5E5"> system that integrated</font>

259
00:10:21,300 --> 00:10:24,990
well with the existing environments and

260
00:10:22,890 --> 00:10:27,000
their existing workflows making it easy

261
00:10:24,990 --> 00:10:30,360
to<font color="#E5E5E5"> get</font><font color="#CCCCCC"> started</font><font color="#E5E5E5"> and bandwidth</font><font color="#CCCCCC"> the</font>

262
00:10:27,000 --> 00:10:32,670
consumption obviously is a concern<font color="#E5E5E5"> many</font>

263
00:10:30,360 --> 00:10:34,160
of these devices are on<font color="#E5E5E5"> lower speed</font>

264
00:10:32,670 --> 00:10:37,199
<font color="#E5E5E5">networks so</font><font color="#CCCCCC"> we wanted</font><font color="#E5E5E5"> to make sure that</font>

265
00:10:34,160 --> 00:10:40,050
<font color="#E5E5E5">compression where where it made sense we</font>

266
00:10:37,200 --> 00:10:42,810
<font color="#CCCCCC">use that</font><font color="#E5E5E5"> we will be implementing Delta</font>

267
00:10:40,050 --> 00:10:44,430
differential updates<font color="#E5E5E5"> here soon</font><font color="#CCCCCC"> so that</font>

268
00:10:42,810 --> 00:10:46,949
should<font color="#E5E5E5"> make things even better</font><font color="#CCCCCC"> along</font><font color="#E5E5E5"> the</font>

269
00:10:44,430 --> 00:10:48,930
bandwidth bandwidth lines<font color="#E5E5E5"> and finally</font>

270
00:10:46,950 --> 00:10:51,810
<font color="#E5E5E5">the downtime during the update we wanted</font>

271
00:10:48,930 --> 00:10:54,120
to minimize<font color="#CCCCCC"> that</font><font color="#E5E5E5"> so we're all</font><font color="#CCCCCC"> familiar</font>

272
00:10:51,810 --> 00:10:55,920
with<font color="#E5E5E5"> you know your phone coming up</font>

273
00:10:54,120 --> 00:10:57,540
saying<font color="#E5E5E5"> there's an update do you want to</font>

274
00:10:55,920 --> 00:10:58,770
install<font color="#CCCCCC"> it you say yes and three hours</font>

275
00:10:57,540 --> 00:11:00,480
<font color="#CCCCCC">later you're waiting to get your phone</font>

276
00:10:58,770 --> 00:11:01,439
back<font color="#CCCCCC"> so we wanted to</font><font color="#E5E5E5"> find ways to</font>

277
00:11:00,480 --> 00:11:04,720
minimize<font color="#CCCCCC"> that</font>

278
00:11:01,440 --> 00:11:07,420
so given those<font color="#CCCCCC"> list of requirements we</font>

279
00:11:04,720 --> 00:11:10,810
wanted to talk we started looking at the

280
00:11:07,420 --> 00:11:13,329
<font color="#E5E5E5">the various mechanisms in strategies for</font>

281
00:11:10,810 --> 00:11:15,699
<font color="#CCCCCC">actually installing new new or updated</font>

282
00:11:13,330 --> 00:11:17,200
software<font color="#E5E5E5"> on a device</font><font color="#CCCCCC"> so the first one we</font>

283
00:11:15,700 --> 00:11:19,120
<font color="#CCCCCC">looked at is called in-place now this is</font>

284
00:11:17,200 --> 00:11:21,339
<font color="#E5E5E5">very much like what you're used to</font><font color="#CCCCCC"> today</font>

285
00:11:19,120 --> 00:11:22,870
and<font color="#E5E5E5"> you're in your typical desktop Linux</font>

286
00:11:21,339 --> 00:11:25,209
operating system so this would be<font color="#CCCCCC"> simply</font>

287
00:11:22,870 --> 00:11:27,370
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> apt-get</font><font color="#E5E5E5"> update that kind of</font>

288
00:11:25,209 --> 00:11:29,649
thing<font color="#E5E5E5"> so the the updater itself runs in</font>

289
00:11:27,370 --> 00:11:32,310
the user<font color="#E5E5E5"> space and updates part of its</font>

290
00:11:29,649 --> 00:11:35,079
own user space<font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> fairly</font><font color="#CCCCCC"> common</font>

291
00:11:32,310 --> 00:11:37,540
mechanism that<font color="#E5E5E5"> we're all used to the</font>

292
00:11:35,079 --> 00:11:39,519
<font color="#CCCCCC">next next</font><font color="#E5E5E5"> strategy we looked at is</font>

293
00:11:37,540 --> 00:11:41,560
maintenance<font color="#E5E5E5"> mode and that's very similar</font>

294
00:11:39,519 --> 00:11:44,350
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the one that I mentioned with your</font>

295
00:11:41,560 --> 00:11:46,479
Android<font color="#E5E5E5"> phones or your iPhones where it</font>

296
00:11:44,350 --> 00:11:48,760
actually boots<font color="#E5E5E5"> into</font><font color="#CCCCCC"> a separate mode and</font>

297
00:11:46,480 --> 00:11:50,800
from there installs the update<font color="#E5E5E5"> the</font>

298
00:11:48,760 --> 00:11:53,260
downside<font color="#E5E5E5"> the main downside</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this is</font>

299
00:11:50,800 --> 00:11:57,099
fairly fairly large down times for<font color="#E5E5E5"> your</font>

300
00:11:53,260 --> 00:11:58,630
device<font color="#CCCCCC"> and plus there's a an issue of</font>

301
00:11:57,100 --> 00:12:01,870
redundancy<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> bootloader in the end</font>

302
00:11:58,630 --> 00:12:03,250
the update client<font color="#CCCCCC"> and then the third</font>

303
00:12:01,870 --> 00:12:05,170
installment strategy that we looked<font color="#E5E5E5"> at</font>

304
00:12:03,250 --> 00:12:08,079
was<font color="#E5E5E5"> the dual root filesystem approach</font>

305
00:12:05,170 --> 00:12:09,880
and<font color="#E5E5E5"> this is a fairly common approach in</font>

306
00:12:08,079 --> 00:12:11,500
the embedded<font color="#CCCCCC"> space where you're actually</font>

307
00:12:09,880 --> 00:12:14,350
using<font color="#E5E5E5"> two fully redundant</font><font color="#CCCCCC"> root file</font>

308
00:12:11,500 --> 00:12:17,470
systems<font color="#CCCCCC"> each of which contains</font><font color="#E5E5E5"> the</font>

309
00:12:14,350 --> 00:12:18,579
kernel<font color="#CCCCCC"> the any of in it and it</font><font color="#E5E5E5"> Ram FS is</font>

310
00:12:17,470 --> 00:12:21,490
anything<font color="#E5E5E5"> that's needed</font><font color="#CCCCCC"> to bring the</font>

311
00:12:18,579 --> 00:12:22,989
<font color="#E5E5E5">system up anything</font><font color="#CCCCCC"> at a higher level</font>

312
00:12:21,490 --> 00:12:25,329
<font color="#E5E5E5">than the bootloader note that in this</font>

313
00:12:22,990 --> 00:12:26,829
<font color="#E5E5E5">case again</font><font color="#CCCCCC"> the bootloader</font><font color="#E5E5E5"> is a single</font>

314
00:12:25,329 --> 00:12:32,020
<font color="#E5E5E5">bootloader there's no redundancy at that</font>

315
00:12:26,829 --> 00:12:33,910
<font color="#CCCCCC">level and finally we have proxy updates</font>

316
00:12:32,020 --> 00:12:37,180
and this is something<font color="#E5E5E5"> that we're getting</font>

317
00:12:33,910 --> 00:12:40,029
ready to<font color="#E5E5E5"> support in a more general</font>

318
00:12:37,180 --> 00:12:42,040
<font color="#CCCCCC">fashion the idea is that</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of these</font>

319
00:12:40,029 --> 00:12:45,160
designs these days are<font color="#E5E5E5"> more than just</font><font color="#CCCCCC"> a</font>

320
00:12:42,040 --> 00:12:46,630
<font color="#E5E5E5">single system they might they consist of</font>

321
00:12:45,160 --> 00:12:48,819
you know they might<font color="#CCCCCC"> have a gateway</font><font color="#E5E5E5"> and</font>

322
00:12:46,630 --> 00:12:50,560
<font color="#CCCCCC">then a whole host of you know home</font>

323
00:12:48,820 --> 00:12:52,449
automation things<font color="#CCCCCC"> maybe smart lighting</font>

324
00:12:50,560 --> 00:12:54,520
<font color="#E5E5E5">that kind</font><font color="#CCCCCC"> of thing and those devices</font>

325
00:12:52,449 --> 00:12:57,000
<font color="#E5E5E5">themselves</font><font color="#CCCCCC"> may not have enough fun</font>

326
00:12:54,520 --> 00:12:59,050
enough capabilities<font color="#CCCCCC"> onboard to handle</font>

327
00:12:57,000 --> 00:13:00,970
<font color="#E5E5E5">redundant root filesystem updates and</font>

328
00:12:59,050 --> 00:13:02,890
that kind of thing but the<font color="#E5E5E5"> Gateway is</font>

329
00:13:00,970 --> 00:13:06,459
<font color="#CCCCCC">able to actually run the update client</font>

330
00:13:02,890 --> 00:13:08,970
<font color="#E5E5E5">and proxy the updates over</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> to the</font>

331
00:13:06,459 --> 00:13:10,930
device<font color="#CCCCCC"> so that's</font><font color="#E5E5E5"> a that's another</font>

332
00:13:08,970 --> 00:13:14,399
mechanism<font color="#E5E5E5"> that we're looking</font><font color="#CCCCCC"> at</font>

333
00:13:10,930 --> 00:13:14,399
supporting here in the very<font color="#CCCCCC"> near future</font>

334
00:13:14,590 --> 00:13:20,950
so kind of<font color="#E5E5E5"> to dig in a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit of</font>

335
00:13:19,210 --> 00:13:23,050
course we did choose the<font color="#E5E5E5"> image based</font>

336
00:13:20,950 --> 00:13:25,600
updates as the first<font color="#CCCCCC"> mechanism for for</font>

337
00:13:23,050 --> 00:13:27,670
updating that we wanted<font color="#E5E5E5"> to support</font><font color="#CCCCCC"> in</font>

338
00:13:25,600 --> 00:13:32,410
<font color="#CCCCCC">vendor so why did we do that as</font>

339
00:13:27,670 --> 00:13:34,209
<font color="#CCCCCC">mentioned this will include in general</font>

340
00:13:32,410 --> 00:13:37,839
increase the robustness<font color="#E5E5E5"> of your fleet so</font>

341
00:13:34,210 --> 00:13:40,630
the idea<font color="#E5E5E5"> is all the software that</font><font color="#CCCCCC"> is</font>

342
00:13:37,839 --> 00:13:42,400
<font color="#E5E5E5">installed on your device is exactly what</font>

343
00:13:40,630 --> 00:13:44,100
was tested in<font color="#CCCCCC"> your CI environment</font><font color="#E5E5E5"> we</font>

344
00:13:42,400 --> 00:13:47,829
know that there's<font color="#E5E5E5"> no</font><font color="#CCCCCC"> ability for</font>

345
00:13:44,100 --> 00:13:49,570
packages to<font color="#CCCCCC"> be updated one by</font><font color="#E5E5E5"> one on the</font>

346
00:13:47,830 --> 00:13:51,339
device in the<font color="#E5E5E5"> field so if I do a full</font>

347
00:13:49,570 --> 00:13:53,440
image<font color="#E5E5E5"> update I know that I know that</font>

348
00:13:51,339 --> 00:13:54,790
<font color="#E5E5E5">what is on your</font><font color="#CCCCCC"> device in the field</font><font color="#E5E5E5"> is</font>

349
00:13:53,440 --> 00:13:58,240
exactly<font color="#CCCCCC"> what was tested</font><font color="#E5E5E5"> in my</font>

350
00:13:54,790 --> 00:14:00,130
<font color="#CCCCCC">environment it does reduce</font><font color="#E5E5E5"> your testing</font>

351
00:13:58,240 --> 00:14:02,230
matrix obviously<font color="#CCCCCC"> if I only have one</font>

352
00:14:00,130 --> 00:14:04,450
image<font color="#E5E5E5"> at a time that is known good I</font>

353
00:14:02,230 --> 00:14:07,270
only have to test<font color="#CCCCCC"> that image if I</font><font color="#E5E5E5"> open</font>

354
00:14:04,450 --> 00:14:09,360
up the<font color="#E5E5E5"> the software stack so that the</font>

355
00:14:07,270 --> 00:14:11,740
devices in the<font color="#CCCCCC"> field can then apply</font>

356
00:14:09,360 --> 00:14:13,900
<font color="#E5E5E5">package based updates on there I've</font><font color="#CCCCCC"> got</font>

357
00:14:11,740 --> 00:14:17,860
<font color="#CCCCCC">to in theory</font><font color="#E5E5E5"> test every possible</font>

358
00:14:13,900 --> 00:14:19,689
combination<font color="#E5E5E5"> and ease</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> rollback this is</font>

359
00:14:17,860 --> 00:14:21,190
another big one<font color="#CCCCCC"> we have hole redundancy</font>

360
00:14:19,690 --> 00:14:23,950
in the<font color="#E5E5E5"> root</font><font color="#CCCCCC"> filesystem so that when we</font>

361
00:14:21,190 --> 00:14:25,870
boot into<font color="#E5E5E5"> an update if there's an issue</font>

362
00:14:23,950 --> 00:14:28,150
with<font color="#CCCCCC"> that update we can simply on the</font>

363
00:14:25,870 --> 00:14:29,770
next boot the<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> loader can simply</font>

364
00:14:28,150 --> 00:14:31,770
instruct the system to roll back to<font color="#CCCCCC"> the</font>

365
00:14:29,770 --> 00:14:34,990
previous known good configuration<font color="#E5E5E5"> and</font>

366
00:14:31,770 --> 00:14:37,660
<font color="#E5E5E5">this has a couple</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> advantages from the</font>

367
00:14:34,990 --> 00:14:39,790
update<font color="#E5E5E5"> system perspective</font><font color="#CCCCCC"> one is that we</font>

368
00:14:37,660 --> 00:14:43,060
know we can<font color="#CCCCCC"> always connect to the server</font>

369
00:14:39,790 --> 00:14:44,770
and<font color="#CCCCCC"> install another update we never if</font>

370
00:14:43,060 --> 00:14:46,689
the the update client<font color="#E5E5E5"> is unable</font><font color="#CCCCCC"> to</font>

371
00:14:44,770 --> 00:14:48,339
connect<font color="#E5E5E5"> to the server for any reason</font>

372
00:14:46,690 --> 00:14:49,720
<font color="#E5E5E5">that's considered a failed update and we</font>

373
00:14:48,339 --> 00:14:55,000
will roll<font color="#CCCCCC"> back to the previous known</font>

374
00:14:49,720 --> 00:14:56,560
good configuration and atomic<font color="#CCCCCC"> updates I</font>

375
00:14:55,000 --> 00:14:59,110
mentioned that<font color="#E5E5E5"> previously but that's a</font>

376
00:14:56,560 --> 00:15:00,880
pretty<font color="#E5E5E5"> important component that means</font>

377
00:14:59,110 --> 00:15:02,140
your code doesn't<font color="#E5E5E5"> need to</font><font color="#CCCCCC"> know anything</font>

378
00:15:00,880 --> 00:15:04,000
<font color="#E5E5E5">about the fact that there's an update</font>

379
00:15:02,140 --> 00:15:06,400
process<font color="#E5E5E5"> going on there might be some</font>

380
00:15:04,000 --> 00:15:07,900
integration at some levels if you're

381
00:15:06,400 --> 00:15:09,760
moving<font color="#CCCCCC"> forward to new</font><font color="#E5E5E5"> versions a</font>

382
00:15:07,900 --> 00:15:12,010
database<font color="#E5E5E5"> database schemas and things</font>

383
00:15:09,760 --> 00:15:13,839
like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> that's typically handled</font>

384
00:15:12,010 --> 00:15:16,290
at the<font color="#E5E5E5"> at the boundaries</font><font color="#CCCCCC"> of an update</font>

385
00:15:13,839 --> 00:15:19,510
either right after the update<font color="#E5E5E5"> is</font>

386
00:15:16,290 --> 00:15:22,180
installed or right<font color="#E5E5E5"> after the system has</font>

387
00:15:19,510 --> 00:15:23,600
rebooted<font color="#E5E5E5"> into the new update so the fact</font>

388
00:15:22,180 --> 00:15:26,089
that the

389
00:15:23,600 --> 00:15:28,940
the update system<font color="#E5E5E5"> is completely atomic</font>

390
00:15:26,089 --> 00:15:30,529
means that your code runs<font color="#E5E5E5"> doesn't even</font>

391
00:15:28,940 --> 00:15:33,110
need<font color="#E5E5E5"> to</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> an update is going on until</font>

392
00:15:30,529 --> 00:15:35,060
<font color="#E5E5E5">it's ready to</font><font color="#CCCCCC"> actually move</font><font color="#E5E5E5"> forward</font><font color="#CCCCCC"> into</font>

393
00:15:33,110 --> 00:15:39,500
<font color="#CCCCCC">the next state and</font><font color="#E5E5E5"> reboot into the new</font>

394
00:15:35,060 --> 00:15:42,439
update<font color="#E5E5E5"> and finally the deployments are</font>

395
00:15:39,500 --> 00:15:44,810
reproducible if I if I have a set<font color="#E5E5E5"> of</font>

396
00:15:42,440 --> 00:15:47,810
<font color="#CCCCCC">devices in the field and I'm</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font>

397
00:15:44,810 --> 00:15:50,209
for<font color="#E5E5E5"> instance I'm trying to deploy update</font>

398
00:15:47,810 --> 00:15:53,119
version<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> my all</font><font color="#CCCCCC"> my devices</font><font color="#E5E5E5"> are on</font>

399
00:15:50,209 --> 00:15:54,829
<font color="#E5E5E5">version 2</font><font color="#CCCCCC"> and 80%</font><font color="#E5E5E5"> of my devices they</font>

400
00:15:53,120 --> 00:15:56,449
succeed<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> their offer uninhabited</font>

401
00:15:54,829 --> 00:15:58,519
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> offering and happily but the</font>

402
00:15:56,449 --> 00:16:01,459
other 20%<font color="#E5E5E5"> there was some issue maybe the</font>

403
00:15:58,519 --> 00:16:03,290
they had a power issue or some other

404
00:16:01,459 --> 00:16:05,779
issue with the deployment<font color="#E5E5E5"> so they rolled</font>

405
00:16:03,290 --> 00:16:08,540
back<font color="#E5E5E5"> into version 2</font><font color="#CCCCCC"> now I have 80% on</font><font color="#E5E5E5"> 3</font>

406
00:16:05,779 --> 00:16:12,350
<font color="#CCCCCC">20% on 2</font><font color="#E5E5E5"> I can simply issue another</font>

407
00:16:08,540 --> 00:16:14,180
<font color="#CCCCCC">deployment</font><font color="#E5E5E5"> to version 3 and</font><font color="#CCCCCC"> all the</font>

408
00:16:12,350 --> 00:16:15,620
<font color="#E5E5E5">devices that are</font><font color="#CCCCCC"> on version</font><font color="#E5E5E5"> 3 will</font>

409
00:16:14,180 --> 00:16:17,180
simply<font color="#CCCCCC"> ignore the deployment because</font>

410
00:16:15,620 --> 00:16:18,470
<font color="#E5E5E5">they're already there and the devices</font>

411
00:16:17,180 --> 00:16:20,359
that<font color="#CCCCCC"> failed the first time around</font><font color="#E5E5E5"> will</font>

412
00:16:18,470 --> 00:16:23,449
get another get another shot at<font color="#E5E5E5"> updating</font>

413
00:16:20,360 --> 00:16:24,680
to that<font color="#E5E5E5"> version and at that point you</font>

414
00:16:23,449 --> 00:16:27,469
<font color="#E5E5E5">will have completely reproduced the</font>

415
00:16:24,680 --> 00:16:29,029
previous deployment without<font color="#E5E5E5"> interrupting</font>

416
00:16:27,470 --> 00:16:33,139
any existing<font color="#E5E5E5"> devices that are running on</font>

417
00:16:29,029 --> 00:16:35,089
the<font color="#CCCCCC"> new version</font><font color="#E5E5E5"> and just to kind of</font>

418
00:16:33,139 --> 00:16:36,829
drive the<font color="#E5E5E5"> point home a bit some of</font><font color="#CCCCCC"> the</font>

419
00:16:35,089 --> 00:16:40,130
challenges with package based updates

420
00:16:36,829 --> 00:16:41,899
and this is you know<font color="#E5E5E5"> for the primary</font>

421
00:16:40,130 --> 00:16:43,220
reason we chose to avoid package updates

422
00:16:41,899 --> 00:16:45,860
at least as our first supported

423
00:16:43,220 --> 00:16:48,260
methodology really<font color="#E5E5E5"> comes down to</font><font color="#CCCCCC"> the</font>

424
00:16:45,860 --> 00:16:49,970
<font color="#E5E5E5">total</font><font color="#CCCCCC"> number of combinations that</font><font color="#E5E5E5"> come</font>

425
00:16:48,260 --> 00:16:52,790
out<font color="#CCCCCC"> of any kind of package based update</font>

426
00:16:49,970 --> 00:16:54,079
<font color="#CCCCCC">a lot of the packaged systems</font><font color="#E5E5E5"> I know</font>

427
00:16:52,790 --> 00:16:57,529
they're getting<font color="#E5E5E5"> better about handling</font>

428
00:16:54,079 --> 00:17:00,859
atomic<font color="#CCCCCC"> updates at</font><font color="#E5E5E5"> rollbacks but there's</font>

429
00:16:57,529 --> 00:17:03,339
no there's<font color="#CCCCCC"> no installation order that's</font>

430
00:17:00,860 --> 00:17:06,319
enforced by the<font color="#E5E5E5"> package</font><font color="#CCCCCC"> system so if I</font>

431
00:17:03,339 --> 00:17:08,720
if I<font color="#CCCCCC"> update one set of</font><font color="#E5E5E5"> packages on this</font>

432
00:17:06,319 --> 00:17:10,819
<font color="#E5E5E5">device over</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> and this device over</font>

433
00:17:08,720 --> 00:17:12,230
here<font color="#E5E5E5"> for whatever reason</font><font color="#CCCCCC"> just decides to</font>

434
00:17:10,819 --> 00:17:14,809
start<font color="#E5E5E5"> with a different set of packages</font>

435
00:17:12,230 --> 00:17:16,699
<font color="#E5E5E5">it's very possible that my</font><font color="#CCCCCC"> devices my</font>

436
00:17:14,809 --> 00:17:18,530
devices<font color="#E5E5E5"> even though we think they're</font>

437
00:17:16,699 --> 00:17:19,669
running<font color="#CCCCCC"> the same version</font><font color="#E5E5E5"> that they might</font>

438
00:17:18,530 --> 00:17:21,889
be slightly different<font color="#CCCCCC"> so the</font>

439
00:17:19,669 --> 00:17:23,600
dependencies<font color="#CCCCCC"> between them</font><font color="#E5E5E5"> and then the</font>

440
00:17:21,890 --> 00:17:28,159
fact that if there is an issue that

441
00:17:23,599 --> 00:17:30,199
<font color="#E5E5E5">stops a package based update the the</font>

442
00:17:28,159 --> 00:17:31,580
means to clean it up is not not<font color="#E5E5E5"> always</font>

443
00:17:30,200 --> 00:17:33,110
obvious what needs to be done<font color="#E5E5E5"> and</font><font color="#CCCCCC"> that</font>

444
00:17:31,580 --> 00:17:36,590
can that that can<font color="#E5E5E5"> cause issues</font><font color="#CCCCCC"> with</font>

445
00:17:33,110 --> 00:17:37,580
further installations down the line and

446
00:17:36,590 --> 00:17:42,740
block installs of

447
00:17:37,580 --> 00:17:44,389
of new<font color="#E5E5E5"> updates that may</font><font color="#CCCCCC"> be out there so</font>

448
00:17:42,740 --> 00:17:46,130
this<font color="#E5E5E5"> is an</font><font color="#CCCCCC"> open source conference I</font>

449
00:17:44,390 --> 00:17:47,720
probably don't<font color="#E5E5E5"> need to do a whole</font><font color="#CCCCCC"> lot of</font>

450
00:17:46,130 --> 00:17:50,660
selling on the<font color="#E5E5E5"> the open source side of</font>

451
00:17:47,720 --> 00:17:54,950
things<font color="#E5E5E5"> but a couple of things</font><font color="#CCCCCC"> to point</font>

452
00:17:50,660 --> 00:17:57,710
<font color="#E5E5E5">out our</font><font color="#CCCCCC"> biggest competitor is</font><font color="#E5E5E5"> those that</font>

453
00:17:54,950 --> 00:18:00,440
want to build<font color="#E5E5E5"> their</font><font color="#CCCCCC"> own update system</font><font color="#E5E5E5"> we</font>

454
00:17:57,710 --> 00:18:02,630
talked to a<font color="#E5E5E5"> lot of embedded IOT</font>

455
00:18:00,440 --> 00:18:04,820
developers and many of them thought oh

456
00:18:02,630 --> 00:18:06,020
it's an update<font color="#CCCCCC"> system ok I'll just</font><font color="#E5E5E5"> write</font>

457
00:18:04,820 --> 00:18:09,800
a couple shell scripts it shouldn't be

458
00:18:06,020 --> 00:18:11,810
hard I'll just deploy a disk image<font color="#E5E5E5"> over</font>

459
00:18:09,800 --> 00:18:13,970
HTTP<font color="#CCCCCC"> I'll write</font><font color="#E5E5E5"> it to the the block</font>

460
00:18:11,810 --> 00:18:15,800
device and I'll be done<font color="#CCCCCC"> in</font><font color="#E5E5E5"> you know and</font>

461
00:18:13,970 --> 00:18:17,810
conceptually<font color="#E5E5E5"> that's what needs to be</font>

462
00:18:15,800 --> 00:18:19,520
done<font color="#CCCCCC"> but it gets much more</font><font color="#E5E5E5"> complicated</font>

463
00:18:17,810 --> 00:18:21,260
<font color="#E5E5E5">when you when you start looking in the</font>

464
00:18:19,520 --> 00:18:24,800
details and<font color="#E5E5E5"> and the way things</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> go</font>

465
00:18:21,260 --> 00:18:26,300
wrong<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> know and how much time and</font>

466
00:18:24,800 --> 00:18:28,399
effort<font color="#E5E5E5"> are you spending if you are</font>

467
00:18:26,300 --> 00:18:29,870
<font color="#E5E5E5">designing your own update</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> how</font>

468
00:18:28,400 --> 00:18:31,040
much time and effort over the<font color="#CCCCCC"> lifetime</font>

469
00:18:29,870 --> 00:18:33,020
of<font color="#E5E5E5"> your product are</font><font color="#CCCCCC"> you spending</font>

470
00:18:31,040 --> 00:18:34,430
maintaining the update system<font color="#E5E5E5"> versus</font>

471
00:18:33,020 --> 00:18:37,040
maintaining your<font color="#E5E5E5"> value add in your</font>

472
00:18:34,430 --> 00:18:39,890
<font color="#E5E5E5">specific use case and your expertise so</font>

473
00:18:37,040 --> 00:18:41,659
you know that was part<font color="#E5E5E5"> of the reason we</font>

474
00:18:39,890 --> 00:18:43,880
wanted to<font color="#E5E5E5"> release this as a separate</font>

475
00:18:41,660 --> 00:18:46,490
<font color="#CCCCCC">product and an open source</font><font color="#E5E5E5"> product is so</font>

476
00:18:43,880 --> 00:18:48,470
that it could get out<font color="#E5E5E5"> there and become a</font>

477
00:18:46,490 --> 00:18:51,610
de facto<font color="#CCCCCC"> standard in the community and</font>

478
00:18:48,470 --> 00:18:54,530
and help<font color="#E5E5E5"> answer this this problem that</font>

479
00:18:51,610 --> 00:18:56,959
<font color="#CCCCCC">everyone</font><font color="#E5E5E5"> in the embedded space deals</font>

480
00:18:54,530 --> 00:18:58,250
with and find one solution<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this that</font>

481
00:18:56,960 --> 00:19:03,040
could<font color="#E5E5E5"> be reused</font><font color="#CCCCCC"> across many different</font>

482
00:18:58,250 --> 00:19:08,330
<font color="#E5E5E5">designs</font><font color="#CCCCCC"> so let's</font><font color="#E5E5E5"> talk a little bit</font><font color="#CCCCCC"> about</font>

483
00:19:03,040 --> 00:19:10,970
what components need<font color="#E5E5E5"> to go into</font><font color="#CCCCCC"> any any</font>

484
00:19:08,330 --> 00:19:13,550
embedded update system<font color="#E5E5E5"> so the first</font>

485
00:19:10,970 --> 00:19:15,590
<font color="#E5E5E5">upper left obviously</font><font color="#CCCCCC"> you need some means</font>

486
00:19:13,550 --> 00:19:17,930
to<font color="#E5E5E5"> detect the update in our system we</font>

487
00:19:15,590 --> 00:19:21,649
have a server and<font color="#E5E5E5"> a client the client</font>

488
00:19:17,930 --> 00:19:23,690
just<font color="#E5E5E5"> opens a connection</font><font color="#CCCCCC"> over TSL</font><font color="#E5E5E5"> and at</font>

489
00:19:21,650 --> 00:19:25,340
a<font color="#E5E5E5"> specified polling interval asks the</font>

490
00:19:23,690 --> 00:19:27,520
server<font color="#E5E5E5"> is there an</font><font color="#CCCCCC"> update available</font><font color="#E5E5E5"> to</font>

491
00:19:25,340 --> 00:19:30,470
me<font color="#E5E5E5"> that's pretty pretty standard</font>

492
00:19:27,520 --> 00:19:33,110
<font color="#E5E5E5">compatibility check its environment</font>

493
00:19:30,470 --> 00:19:35,060
<font color="#E5E5E5">specific some would say optional but</font>

494
00:19:33,110 --> 00:19:37,459
given the risks of<font color="#E5E5E5"> not doing it I would</font>

495
00:19:35,060 --> 00:19:39,860
<font color="#E5E5E5">say that it that it</font><font color="#CCCCCC"> really should be</font>

496
00:19:37,460 --> 00:19:41,120
promoted to a<font color="#CCCCCC"> must-have download</font>

497
00:19:39,860 --> 00:19:42,800
obviously that one's<font color="#E5E5E5"> pretty</font>

498
00:19:41,120 --> 00:19:45,949
straightforward TLS just download the

499
00:19:42,800 --> 00:19:48,980
data blob<font color="#E5E5E5"> and then a number of checks</font>

500
00:19:45,950 --> 00:19:49,800
from<font color="#CCCCCC"> their</font><font color="#E5E5E5"> integrity check with checksum</font>

501
00:19:48,980 --> 00:19:53,520
this is of course

502
00:19:49,800 --> 00:19:54,300
to detect<font color="#E5E5E5"> just download failures and</font>

503
00:19:53,520 --> 00:19:56,370
that kind of thing

504
00:19:54,300 --> 00:19:58,560
authentication obviously<font color="#E5E5E5"> this is gives</font>

505
00:19:56,370 --> 00:20:01,169
you a little<font color="#CCCCCC"> bit greater guarantees and</font>

506
00:19:58,560 --> 00:20:03,720
this also decouples<font color="#E5E5E5"> your infrastructure</font>

507
00:20:01,170 --> 00:20:06,870
<font color="#E5E5E5">from your actual development</font><font color="#CCCCCC"> systems so</font>

508
00:20:03,720 --> 00:20:09,060
the<font color="#E5E5E5"> act the certificate</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> scientist</font>

509
00:20:06,870 --> 00:20:11,699
signature is applied in<font color="#CCCCCC"> your CI system</font>

510
00:20:09,060 --> 00:20:15,149
<font color="#E5E5E5">or by your developers and so that gives</font>

511
00:20:11,700 --> 00:20:17,550
you guarantees<font color="#E5E5E5"> that are independent of</font>

512
00:20:15,150 --> 00:20:19,400
the security of<font color="#E5E5E5"> the transport layer</font><font color="#CCCCCC"> and</font>

513
00:20:17,550 --> 00:20:22,260
then from there moving into things like

514
00:20:19,400 --> 00:20:25,350
<font color="#E5E5E5">decrypting if it's important</font><font color="#CCCCCC"> that your</font>

515
00:20:22,260 --> 00:20:28,140
payload is encrypted<font color="#CCCCCC"> extracting if you</font>

516
00:20:25,350 --> 00:20:29,969
are using<font color="#CCCCCC"> compression which I would</font>

517
00:20:28,140 --> 00:20:31,440
imagine<font color="#E5E5E5"> everybody is and then at that</font>

518
00:20:29,970 --> 00:20:33,180
<font color="#CCCCCC">point</font><font color="#E5E5E5"> we can do things like</font><font color="#CCCCCC"> pre install</font>

519
00:20:31,440 --> 00:20:35,880
actions so this is going to be<font color="#E5E5E5"> very</font>

520
00:20:33,180 --> 00:20:37,560
<font color="#E5E5E5">dependent on your application</font><font color="#CCCCCC"> and your</font>

521
00:20:35,880 --> 00:20:40,830
your device and<font color="#E5E5E5"> what is what</font><font color="#CCCCCC"> is</font>

522
00:20:37,560 --> 00:20:43,159
necessary<font color="#CCCCCC"> do you need to flush databases</font>

523
00:20:40,830 --> 00:20:45,149
do you need to shut anything down<font color="#CCCCCC"> that</font>

524
00:20:43,160 --> 00:20:48,570
<font color="#CCCCCC">those kind of</font><font color="#E5E5E5"> things might</font><font color="#CCCCCC"> be necessary</font>

525
00:20:45,150 --> 00:20:52,020
<font color="#E5E5E5">depending on your exact application and</font>

526
00:20:48,570 --> 00:20:54,689
from<font color="#E5E5E5"> here obviously</font><font color="#CCCCCC"> the installation and</font>

527
00:20:52,020 --> 00:20:57,270
you know in our case<font color="#E5E5E5"> it's simply doing a</font>

528
00:20:54,690 --> 00:21:01,470
<font color="#E5E5E5">block based right to the</font><font color="#CCCCCC"> inactive</font>

529
00:20:57,270 --> 00:21:03,540
partition<font color="#E5E5E5"> and then we move into the post</font>

530
00:21:01,470 --> 00:21:04,620
install actions<font color="#E5E5E5"> and these are the kind</font>

531
00:21:03,540 --> 00:21:06,090
of things that<font color="#CCCCCC"> would happen</font><font color="#E5E5E5"> before the</font>

532
00:21:04,620 --> 00:21:07,800
reboot<font color="#CCCCCC"> if there are any</font><font color="#E5E5E5"> that are</font>

533
00:21:06,090 --> 00:21:10,560
appropriate for<font color="#E5E5E5"> your your device and</font>

534
00:21:07,800 --> 00:21:12,060
then we do a<font color="#E5E5E5"> reboot and then we come</font>

535
00:21:10,560 --> 00:21:14,580
back<font color="#CCCCCC"> up and we do post install and</font>

536
00:21:12,060 --> 00:21:16,649
sanity<font color="#CCCCCC"> checks so as I mentioned the</font>

537
00:21:14,580 --> 00:21:18,120
mender client itself<font color="#E5E5E5"> just the fact that</font>

538
00:21:16,650 --> 00:21:20,430
the mender client is<font color="#E5E5E5"> running as an</font>

539
00:21:18,120 --> 00:21:21,540
<font color="#E5E5E5">application is a pretty good sanity</font>

540
00:21:20,430 --> 00:21:23,580
check that<font color="#CCCCCC"> the kernel is up and running</font>

541
00:21:21,540 --> 00:21:25,800
<font color="#E5E5E5">and then if the mender client is</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font>

542
00:21:23,580 --> 00:21:27,240
actually<font color="#E5E5E5"> make contact with the server we</font>

543
00:21:25,800 --> 00:21:30,240
know that the the<font color="#CCCCCC"> network functionality</font>

544
00:21:27,240 --> 00:21:31,800
<font color="#E5E5E5">is is still there and then you as</font><font color="#CCCCCC"> the</font>

545
00:21:30,240 --> 00:21:33,090
system designer will<font color="#E5E5E5"> plug in sanity</font>

546
00:21:31,800 --> 00:21:36,300
checks that<font color="#CCCCCC"> are appropriate for</font><font color="#E5E5E5"> your</font>

547
00:21:33,090 --> 00:21:37,980
<font color="#CCCCCC">environment</font><font color="#E5E5E5"> and then once once all those</font>

548
00:21:36,300 --> 00:21:40,260
checks have completed then we can commit

549
00:21:37,980 --> 00:21:41,820
<font color="#E5E5E5">the update and move forward</font><font color="#CCCCCC"> if any of</font>

550
00:21:40,260 --> 00:21:42,330
those checks fail for any reason<font color="#E5E5E5"> then</font>

551
00:21:41,820 --> 00:21:44,669
there

552
00:21:42,330 --> 00:21:46,379
ideally there<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be some mechanism for</font>

553
00:21:44,670 --> 00:21:49,980
<font color="#E5E5E5">doing rollback and fail your recovery</font>

554
00:21:46,380 --> 00:21:51,630
<font color="#CCCCCC">and so that's</font><font color="#E5E5E5"> that's where we</font><font color="#CCCCCC"> we get the</font>

555
00:21:49,980 --> 00:21:53,220
best benefit out of<font color="#CCCCCC"> having the the fully</font>

556
00:21:51,630 --> 00:21:57,720
redundant root file systems is in that

557
00:21:53,220 --> 00:22:00,810
<font color="#E5E5E5">final step so a little bit of a high</font>

558
00:21:57,720 --> 00:22:01,650
<font color="#E5E5E5">level about</font><font color="#CCCCCC"> mender specifically we have</font>

559
00:22:00,810 --> 00:22:03,960
both the

560
00:22:01,650 --> 00:22:05,790
the client and the server<font color="#CCCCCC"> it is written</font>

561
00:22:03,960 --> 00:22:08,520
in<font color="#CCCCCC"> golang it's all open source under</font><font color="#E5E5E5"> the</font>

562
00:22:05,790 --> 00:22:11,909
Apache 2 license<font color="#E5E5E5"> all our sources</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> up</font>

563
00:22:08,520 --> 00:22:13,920
on github<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we also distribute all the</font>

564
00:22:11,910 --> 00:22:15,809
<font color="#E5E5E5">server-side components as docker</font>

565
00:22:13,920 --> 00:22:17,430
containers<font color="#E5E5E5"> and a doctrine composed</font>

566
00:22:15,809 --> 00:22:19,800
environment that<font color="#E5E5E5"> will</font><font color="#CCCCCC"> allow you to spin</font>

567
00:22:17,430 --> 00:22:22,170
up your own version<font color="#CCCCCC"> of the mender server</font>

568
00:22:19,800 --> 00:22:24,450
on any any system<font color="#E5E5E5"> that's capable of</font>

569
00:22:22,170 --> 00:22:26,550
launching docker containers now the

570
00:22:24,450 --> 00:22:29,160
client itself<font color="#E5E5E5"> is written</font><font color="#CCCCCC"> in going as</font>

571
00:22:26,550 --> 00:22:32,010
<font color="#E5E5E5">well it's fully fully open source both</font>

572
00:22:29,160 --> 00:22:34,290
the the the server as well<font color="#CCCCCC"> as the the</font>

573
00:22:32,010 --> 00:22:36,870
<font color="#E5E5E5">the web UI and the client that runs on</font>

574
00:22:34,290 --> 00:22:39,510
<font color="#E5E5E5">the target and all the tooling QA</font>

575
00:22:36,870 --> 00:22:42,840
everything is available<font color="#E5E5E5"> through github</font>

576
00:22:39,510 --> 00:22:44,129
<font color="#CCCCCC">and through</font><font color="#E5E5E5"> our Doc's website that you</font>

577
00:22:42,840 --> 00:22:46,050
see<font color="#E5E5E5"> there and there's a lot</font><font color="#CCCCCC"> of</font>

578
00:22:44,130 --> 00:22:47,970
information<font color="#E5E5E5"> in the docs website that'll</font>

579
00:22:46,050 --> 00:22:49,169
talk you through the<font color="#E5E5E5"> API is the</font>

580
00:22:47,970 --> 00:22:51,330
architecture<font color="#CCCCCC"> of the server the</font>

581
00:22:49,170 --> 00:22:52,770
architecture of the<font color="#CCCCCC"> client what's needed</font>

582
00:22:51,330 --> 00:22:56,939
<font color="#CCCCCC">to integrate</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> into your design and</font>

583
00:22:52,770 --> 00:23:00,330
<font color="#E5E5E5">that kind of thing</font><font color="#CCCCCC"> so moving forward</font><font color="#E5E5E5"> a</font>

584
00:22:56,940 --> 00:23:02,429
little<font color="#CCCCCC"> bit more detail on meander a beam</font>

585
00:23:00,330 --> 00:23:05,340
<font color="#CCCCCC">it image update TLS communications all</font>

586
00:23:02,429 --> 00:23:07,290
things I mentioned<font color="#E5E5E5"> what one thing to</font>

587
00:23:05,340 --> 00:23:09,689
mention<font color="#E5E5E5"> because we have two root</font>

588
00:23:07,290 --> 00:23:12,570
filesystem partitions<font color="#E5E5E5"> this</font><font color="#CCCCCC"> cuz gives us</font>

589
00:23:09,690 --> 00:23:14,610
the capability<font color="#E5E5E5"> of allowing</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> meander</font>

590
00:23:12,570 --> 00:23:17,100
client to install an update<font color="#CCCCCC"> stream</font><font color="#E5E5E5"> it</font>

591
00:23:14,610 --> 00:23:19,439
directly<font color="#CCCCCC"> to the inactive partition and</font>

592
00:23:17,100 --> 00:23:21,330
that that reduces<font color="#E5E5E5"> the</font><font color="#CCCCCC"> amount of storage</font>

593
00:23:19,440 --> 00:23:23,429
space<font color="#E5E5E5"> that's needed in the active</font>

594
00:23:21,330 --> 00:23:25,800
partition<font color="#E5E5E5"> because the the new image is</font>

595
00:23:23,429 --> 00:23:27,330
never is never stored persistently on

596
00:23:25,800 --> 00:23:29,659
that<font color="#E5E5E5"> partition so it just goes directly</font>

597
00:23:27,330 --> 00:23:33,389
to the client<font color="#CCCCCC"> to the inactive partition</font>

598
00:23:29,660 --> 00:23:34,440
<font color="#E5E5E5">and then the other things</font><font color="#CCCCCC"> that I</font>

599
00:23:33,390 --> 00:23:36,150
mentioned<font color="#E5E5E5"> deployment management</font>

600
00:23:34,440 --> 00:23:38,429
<font color="#E5E5E5">obviously that's through the server</font>

601
00:23:36,150 --> 00:23:40,550
cryptographic signing and verification

602
00:23:38,429 --> 00:23:45,030
<font color="#E5E5E5">standard industry best practices there</font>

603
00:23:40,550 --> 00:23:46,710
<font color="#E5E5E5">and then we have a what I call what we</font>

604
00:23:45,030 --> 00:23:49,320
call this<font color="#E5E5E5"> state script mechanism and</font>

605
00:23:46,710 --> 00:23:51,780
this<font color="#E5E5E5"> is effectively the the means with</font>

606
00:23:49,320 --> 00:23:53,939
which<font color="#E5E5E5"> the</font><font color="#CCCCCC"> system designers can customize</font>

607
00:23:51,780 --> 00:23:55,678
the meander the meander flow to their

608
00:23:53,940 --> 00:23:57,390
particular use case<font color="#CCCCCC"> so at every</font>

609
00:23:55,679 --> 00:24:01,410
interesting<font color="#E5E5E5"> state change within the</font>

610
00:23:57,390 --> 00:24:04,110
meander client<font color="#E5E5E5"> you can plug in a script</font>

611
00:24:01,410 --> 00:24:06,630
that<font color="#CCCCCC"> that is</font><font color="#E5E5E5"> expected to run to either</font>

612
00:24:04,110 --> 00:24:10,290
allow or or reject the particular<font color="#E5E5E5"> state</font>

613
00:24:06,630 --> 00:24:13,230
change so for<font color="#E5E5E5"> instance if you have a</font>

614
00:24:10,290 --> 00:24:15,870
<font color="#E5E5E5">dodging Wi-Fi connection</font><font color="#CCCCCC"> you might have</font>

615
00:24:13,230 --> 00:24:17,940
a state script plugged in at<font color="#CCCCCC"> pre</font>

616
00:24:15,870 --> 00:24:20,159
<font color="#CCCCCC">download</font><font color="#E5E5E5"> to check the strength of your</font>

617
00:24:17,940 --> 00:24:22,320
Wi-Fi<font color="#CCCCCC"> or the</font><font color="#E5E5E5"> strength of your battery to</font>

618
00:24:20,160 --> 00:24:23,970
either allow the download or reject it

619
00:24:22,320 --> 00:24:26,610
<font color="#E5E5E5">or to allow it</font><font color="#CCCCCC"> to be tried again later</font>

620
00:24:23,970 --> 00:24:29,430
<font color="#CCCCCC">when you</font><font color="#E5E5E5"> have maybe</font><font color="#CCCCCC"> Goodman devices may</font>

621
00:24:26,610 --> 00:24:32,879
be plugged into a more reliable

622
00:24:29,430 --> 00:24:34,920
connection and and<font color="#CCCCCC"> post-install scoot</font>

623
00:24:32,880 --> 00:24:36,870
sanity checks and<font color="#E5E5E5"> things are implemented</font>

624
00:24:34,920 --> 00:24:39,260
<font color="#CCCCCC">with the same</font><font color="#E5E5E5"> mechanism so there's about</font>

625
00:24:36,870 --> 00:24:41,699
<font color="#E5E5E5">nine or ten</font><font color="#CCCCCC"> different state changes</font>

626
00:24:39,260 --> 00:24:44,820
where the system designers are able<font color="#CCCCCC"> to</font>

627
00:24:41,700 --> 00:24:47,360
<font color="#E5E5E5">plug in their own customization scripts</font>

628
00:24:44,820 --> 00:24:49,530
to be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> to to control the flow of</font>

629
00:24:47,360 --> 00:24:54,870
the the States through<font color="#CCCCCC"> the</font><font color="#E5E5E5"> mender</font>

630
00:24:49,530 --> 00:24:57,270
updater<font color="#E5E5E5"> workflow so this is kind of an</font>

631
00:24:54,870 --> 00:25:00,870
image<font color="#CCCCCC"> going</font><font color="#E5E5E5"> into a bit</font><font color="#CCCCCC"> more detail on</font>

632
00:24:57,270 --> 00:25:02,460
<font color="#E5E5E5">the a/b of dual root filesystem approach</font>

633
00:25:00,870 --> 00:25:03,989
so on the<font color="#CCCCCC"> left-hand side</font><font color="#E5E5E5"> we got our</font>

634
00:25:02,460 --> 00:25:06,630
<font color="#CCCCCC">bootloader this is the the immutable</font>

635
00:25:03,990 --> 00:25:10,860
piece of code that<font color="#CCCCCC"> has to be</font><font color="#E5E5E5"> programmed</font>

636
00:25:06,630 --> 00:25:13,410
in you know<font color="#E5E5E5"> at in the factory or on your</font>

637
00:25:10,860 --> 00:25:16,500
on your<font color="#E5E5E5"> desk</font><font color="#CCCCCC"> typically its new boot or</font>

638
00:25:13,410 --> 00:25:18,000
grub and then<font color="#E5E5E5"> one of our recent changes</font>

639
00:25:16,500 --> 00:25:21,240
we've actually<font color="#E5E5E5"> started running grub on</font>

640
00:25:18,000 --> 00:25:23,850
top of you boot in the<font color="#E5E5E5"> arm environment</font>

641
00:25:21,240 --> 00:25:26,400
<font color="#E5E5E5">this allows</font><font color="#CCCCCC"> us to actually use both</font><font color="#E5E5E5"> you</font>

642
00:25:23,850 --> 00:25:28,679
boot and grub unmodified and and we are

643
00:25:26,400 --> 00:25:30,450
able<font color="#E5E5E5"> to implement the logic we need as</font>

644
00:25:28,680 --> 00:25:32,100
scripts on top of<font color="#E5E5E5"> grubs so it makes it</font>

645
00:25:30,450 --> 00:25:34,680
much easier<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get that integrated into</font>

646
00:25:32,100 --> 00:25:36,959
your environment<font color="#E5E5E5"> but in a running system</font>

647
00:25:34,680 --> 00:25:39,540
<font color="#E5E5E5">you have the image in this case the</font>

648
00:25:36,960 --> 00:25:42,330
green image image a it's active<font color="#E5E5E5"> that's a</font>

649
00:25:39,540 --> 00:25:44,490
full root filesystem contains a<font color="#E5E5E5"> little</font>

650
00:25:42,330 --> 00:25:46,620
<font color="#CCCCCC">obviously the vendor client</font><font color="#E5E5E5"> the the full</font>

651
00:25:44,490 --> 00:25:48,930
Linux environment kernel DT B's kernel

652
00:25:46,620 --> 00:25:51,300
modules libraries everything and then

653
00:25:48,930 --> 00:25:51,950
we've got<font color="#E5E5E5"> the image</font><font color="#CCCCCC"> B partition</font><font color="#E5E5E5"> and at</font>

654
00:25:51,300 --> 00:25:55,050
this<font color="#E5E5E5"> point</font>

655
00:25:51,950 --> 00:25:56,460
this<font color="#CCCCCC"> one's</font><font color="#E5E5E5"> inactive and the contents of</font>

656
00:25:55,050 --> 00:25:59,490
<font color="#E5E5E5">this partition at this point should be</font>

657
00:25:56,460 --> 00:26:01,950
considered<font color="#E5E5E5"> unknown because there could</font>

658
00:25:59,490 --> 00:26:04,830
have been an update deployment started

659
00:26:01,950 --> 00:26:06,900
that failed for<font color="#CCCCCC"> some reason so some some</font>

660
00:26:04,830 --> 00:26:08,100
some<font color="#CCCCCC"> people</font><font color="#E5E5E5"> ask well you</font><font color="#CCCCCC"> know can I two</font>

661
00:26:06,900 --> 00:26:10,500
weeks later decide I want<font color="#E5E5E5"> to roll back</font>

662
00:26:08,100 --> 00:26:11,879
<font color="#CCCCCC">to that previous version and that's not</font>

663
00:26:10,500 --> 00:26:14,700
<font color="#CCCCCC">something we support simply because</font>

664
00:26:11,880 --> 00:26:16,470
there's no<font color="#E5E5E5"> way to know if anything has</font>

665
00:26:14,700 --> 00:26:18,750
happened<font color="#E5E5E5"> on that partition since that's</font>

666
00:26:16,470 --> 00:26:20,280
<font color="#E5E5E5">all information within the vendor client</font>

667
00:26:18,750 --> 00:26:23,490
and it's not<font color="#E5E5E5"> something that we choose to</font>

668
00:26:20,280 --> 00:26:25,260
<font color="#E5E5E5">expose and additionally one one piece</font>

669
00:26:23,490 --> 00:26:26,789
I did not mention previously is this

670
00:26:25,260 --> 00:26:28,500
blue partition<font color="#E5E5E5"> here that's the data</font>

671
00:26:26,789 --> 00:26:31,289
partition<font color="#E5E5E5"> that's where all the</font>

672
00:26:28,500 --> 00:26:33,510
persistent data needs<font color="#E5E5E5"> to go meander at</font>

673
00:26:31,289 --> 00:26:35,129
run time during updates we don't touch

674
00:26:33,510 --> 00:26:36,450
<font color="#E5E5E5">the</font><font color="#CCCCCC"> data partition so this is where you</font>

675
00:26:35,130 --> 00:26:37,860
<font color="#E5E5E5">would configure things like Wi-Fi</font>

676
00:26:36,450 --> 00:26:39,000
credentials<font color="#E5E5E5"> and things like that that</font>

677
00:26:37,860 --> 00:26:41,969
are<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> that you're going to want to</font>

678
00:26:39,000 --> 00:26:44,909
<font color="#E5E5E5">persist across the various updates so</font>

679
00:26:41,970 --> 00:26:46,529
once we have the system updated<font color="#E5E5E5"> here we</font>

680
00:26:44,909 --> 00:26:50,220
actually<font color="#CCCCCC"> just switch the roles now image</font>

681
00:26:46,529 --> 00:26:52,980
<font color="#E5E5E5">B is active image a is inactive and and</font>

682
00:26:50,220 --> 00:26:55,350
the first time we boot<font color="#E5E5E5"> into image B in</font>

683
00:26:52,980 --> 00:26:58,890
this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> is considered a conditional</font>

684
00:26:55,350 --> 00:27:01,590
boot<font color="#E5E5E5"> and if for any reason this system</font>

685
00:26:58,890 --> 00:27:03,690
reboots<font color="#E5E5E5"> we simply jump back here the the</font>

686
00:27:01,590 --> 00:27:05,220
logic and the<font color="#E5E5E5"> bootloader will sit we'll</font>

687
00:27:03,690 --> 00:27:07,409
know that that<font color="#CCCCCC"> if that update had not</font>

688
00:27:05,220 --> 00:27:10,080
been committed<font color="#CCCCCC"> and it will</font><font color="#E5E5E5"> automatically</font>

689
00:27:07,409 --> 00:27:12,120
switch us<font color="#CCCCCC"> back to image</font><font color="#E5E5E5"> a if we said if</font>

690
00:27:10,080 --> 00:27:14,120
in the the failed image the system was

691
00:27:12,120 --> 00:27:16,139
up far<font color="#E5E5E5"> enough that the mender client</font>

692
00:27:14,120 --> 00:27:17,699
application code could<font color="#CCCCCC"> actually is</font>

693
00:27:16,140 --> 00:27:19,320
<font color="#E5E5E5">actually running and can detect the</font>

694
00:27:17,700 --> 00:27:22,380
failure<font color="#E5E5E5"> we will automatically trigger</font>

695
00:27:19,320 --> 00:27:24,539
the reboot<font color="#CCCCCC"> if it's for if your</font>

696
00:27:22,380 --> 00:27:26,789
deployment for instance has a bad kernel

697
00:27:24,539 --> 00:27:28,140
<font color="#E5E5E5">and you get a kernel crash before the</font>

698
00:27:26,789 --> 00:27:30,750
mender client can get up and<font color="#E5E5E5"> running</font>

699
00:27:28,140 --> 00:27:32,700
<font color="#E5E5E5">obviously we can't trigger the reboot at</font>

700
00:27:30,750 --> 00:27:34,740
that point and you'll be relying on

701
00:27:32,700 --> 00:27:37,940
watchdog timers or other standard

702
00:27:34,740 --> 00:27:40,350
mechanisms to force the system to<font color="#E5E5E5"> reboot</font>

703
00:27:37,940 --> 00:27:42,809
<font color="#E5E5E5">but even in that case</font><font color="#CCCCCC"> we would</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> have</font>

704
00:27:40,350 --> 00:27:45,209
committed the update yet so when that

705
00:27:42,809 --> 00:27:47,428
<font color="#E5E5E5">watchdog fire watchdog timer fired and</font>

706
00:27:45,210 --> 00:27:50,580
rebooted<font color="#E5E5E5"> your system it would simply</font>

707
00:27:47,429 --> 00:27:54,570
move back to the to<font color="#E5E5E5"> the known good</font>

708
00:27:50,580 --> 00:27:55,770
configuration<font color="#E5E5E5"> so moving on a little</font><font color="#CCCCCC"> bit</font>

709
00:27:54,570 --> 00:27:57,090
we'll talk<font color="#E5E5E5"> about the</font><font color="#CCCCCC"> vendor server</font><font color="#E5E5E5"> this</font>

710
00:27:55,770 --> 00:27:59,520
<font color="#CCCCCC">is kind of this slide is kind</font><font color="#E5E5E5"> of an eye</font>

711
00:27:57,090 --> 00:28:00,840
<font color="#CCCCCC">chart</font><font color="#E5E5E5"> for those that are used to</font><font color="#CCCCCC"> micro</font>

712
00:27:59,520 --> 00:28:04,020
<font color="#CCCCCC">services architectures you're probably</font>

713
00:28:00,840 --> 00:28:07,408
used to<font color="#CCCCCC"> two big</font><font color="#E5E5E5"> lots of boxes on the</font>

714
00:28:04,020 --> 00:28:11,309
screen<font color="#CCCCCC"> like this the only</font><font color="#E5E5E5"> exposed ports</font>

715
00:28:07,409 --> 00:28:13,350
on the server are port 443<font color="#E5E5E5"> and port 9000</font>

716
00:28:11,309 --> 00:28:15,178
obviously<font color="#E5E5E5"> for</font><font color="#CCCCCC"> for threes the TLS port</font>

717
00:28:13,350 --> 00:28:20,010
that the<font color="#E5E5E5"> client communicates over and</font>

718
00:28:15,179 --> 00:28:22,140
port 9000<font color="#E5E5E5"> is the the storage the storage</font>

719
00:28:20,010 --> 00:28:24,149
port so when you're actually downloading

720
00:28:22,140 --> 00:28:28,620
the actual artifact itself<font color="#E5E5E5"> that comes</font>

721
00:28:24,149 --> 00:28:31,260
across port 9000 and you know the the

722
00:28:28,620 --> 00:28:34,080
<font color="#CCCCCC">the API is between all</font><font color="#E5E5E5"> those the micro</font>

723
00:28:31,260 --> 00:28:36,550
<font color="#E5E5E5">services are exposed over over</font>

724
00:28:34,080 --> 00:28:38,860
over a<font color="#CCCCCC"> restful api so</font><font color="#E5E5E5"> that you can make</font>

725
00:28:36,550 --> 00:28:42,220
calls<font color="#CCCCCC"> into them we do have the web UI</font>

726
00:28:38,860 --> 00:28:44,500
<font color="#CCCCCC">but many many</font><font color="#E5E5E5"> users that</font><font color="#CCCCCC"> already have a</font>

727
00:28:42,220 --> 00:28:46,720
device<font color="#E5E5E5"> management infrastructure they</font>

728
00:28:44,500 --> 00:28:47,980
will<font color="#E5E5E5"> actually plug the the mender server</font>

729
00:28:46,720 --> 00:28:50,490
into their device<font color="#E5E5E5"> management</font>

730
00:28:47,980 --> 00:28:53,140
infrastructure<font color="#E5E5E5"> using the API rather than</font>

731
00:28:50,490 --> 00:28:55,060
rather<font color="#E5E5E5"> than using our web UI so you can</font>

732
00:28:53,140 --> 00:28:56,680
trigger deployments<font color="#E5E5E5"> you can group app</font>

733
00:28:55,060 --> 00:29:00,550
you can group devices and that<font color="#E5E5E5"> kind of</font>

734
00:28:56,680 --> 00:29:02,260
thing all over<font color="#E5E5E5"> the API and all the all</font>

735
00:29:00,550 --> 00:29:03,669
the components in green are stateless

736
00:29:02,260 --> 00:29:05,950
which means they scale very well

737
00:29:03,670 --> 00:29:10,000
horizontally<font color="#CCCCCC"> so if you have a very large</font>

738
00:29:05,950 --> 00:29:11,680
device fleet and for your particular<font color="#E5E5E5"> use</font>

739
00:29:10,000 --> 00:29:14,080
case say you're in<font color="#E5E5E5"> its your inventory</font>

740
00:29:11,680 --> 00:29:16,090
<font color="#CCCCCC">subsystem that</font><font color="#E5E5E5"> is your bottleneck</font><font color="#CCCCCC"> well</font>

741
00:29:14,080 --> 00:29:18,879
you can<font color="#E5E5E5"> just add more containers you can</font>

742
00:29:16,090 --> 00:29:21,220
<font color="#E5E5E5">just scale that the</font><font color="#CCCCCC"> containers running</font>

743
00:29:18,880 --> 00:29:23,530
<font color="#CCCCCC">the inventory service</font><font color="#E5E5E5"> just add more</font><font color="#CCCCCC"> of</font>

744
00:29:21,220 --> 00:29:26,050
<font color="#E5E5E5">those and that should help alleviate the</font>

745
00:29:23,530 --> 00:29:28,810
bottleneck obviously the persistent

746
00:29:26,050 --> 00:29:30,700
<font color="#CCCCCC">storage</font><font color="#E5E5E5"> databases and that kind of thing</font>

747
00:29:28,810 --> 00:29:34,720
those can become the bottleneck<font color="#CCCCCC"> and</font>

748
00:29:30,700 --> 00:29:37,060
there are very<font color="#CCCCCC"> what best practices for</font>

749
00:29:34,720 --> 00:29:38,110
<font color="#E5E5E5">for scaling databases and you know if</font>

750
00:29:37,060 --> 00:29:40,360
you<font color="#E5E5E5"> get to the point where that's the</font>

751
00:29:38,110 --> 00:29:42,840
<font color="#E5E5E5">case</font><font color="#CCCCCC"> that then presumably you have</font>

752
00:29:40,360 --> 00:29:44,620
database experts who can guide you in

753
00:29:42,840 --> 00:29:48,129
implementing sharding and<font color="#CCCCCC"> things like</font>

754
00:29:44,620 --> 00:29:51,699
<font color="#E5E5E5">that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> link down here on the on the</font>

755
00:29:48,130 --> 00:29:53,980
lower left<font color="#CCCCCC"> of the screen is</font><font color="#E5E5E5"> our API Docs</font>

756
00:29:51,700 --> 00:29:55,570
and<font color="#E5E5E5"> that will kind of give you an</font><font color="#CCCCCC"> idea</font>

757
00:29:53,980 --> 00:29:59,320
of<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> the functionality that's</font>

758
00:29:55,570 --> 00:30:04,540
<font color="#E5E5E5">available and provided</font><font color="#CCCCCC"> by our by our</font>

759
00:29:59,320 --> 00:30:06,490
<font color="#E5E5E5">server-side micro services so a little</font>

760
00:30:04,540 --> 00:30:08,560
<font color="#E5E5E5">bit about what's needed on the client</font>

761
00:30:06,490 --> 00:30:11,050
<font color="#E5E5E5">side when you're</font><font color="#CCCCCC"> actually integrating</font>

762
00:30:08,560 --> 00:30:13,090
into<font color="#CCCCCC"> a new device typically there's</font>

763
00:30:11,050 --> 00:30:15,370
obviously<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> the a and the B root</font>

764
00:30:13,090 --> 00:30:16,649
filesystem<font color="#E5E5E5"> partitions and the data</font>

765
00:30:15,370 --> 00:30:19,750
partition we mentioned those already

766
00:30:16,650 --> 00:30:21,550
<font color="#CCCCCC">sometimes there's a boot</font><font color="#E5E5E5"> boot loader</font>

767
00:30:19,750 --> 00:30:22,990
partition it depends on<font color="#E5E5E5"> exactly how it's</font>

768
00:30:21,550 --> 00:30:24,820
implemented on your device whether it's

769
00:30:22,990 --> 00:30:27,430
actually a separate<font color="#CCCCCC"> partition for that</font>

770
00:30:24,820 --> 00:30:30,159
or if the<font color="#CCCCCC"> bootloader</font><font color="#E5E5E5"> is just stored in a</font>

771
00:30:27,430 --> 00:30:31,330
separate<font color="#CCCCCC"> SPI flash</font><font color="#E5E5E5"> or some other device</font>

772
00:30:30,160 --> 00:30:35,230
<font color="#CCCCCC">so that's going to</font><font color="#E5E5E5"> that's going</font><font color="#CCCCCC"> to</font>

773
00:30:31,330 --> 00:30:37,409
<font color="#E5E5E5">depend very very closely on the the</font>

774
00:30:35,230 --> 00:30:40,050
design and architecture<font color="#CCCCCC"> of</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> Hardware</font>

775
00:30:37,410 --> 00:30:43,000
<font color="#E5E5E5">the bootloader integration as mentioned</font>

776
00:30:40,050 --> 00:30:44,800
is what controls<font color="#CCCCCC"> the</font><font color="#E5E5E5"> boot process so</font>

777
00:30:43,000 --> 00:30:46,240
depending on which bootloader you're

778
00:30:44,800 --> 00:30:47,520
actually using whether<font color="#CCCCCC"> it's you boot</font>

779
00:30:46,240 --> 00:30:49,920
grub or

780
00:30:47,520 --> 00:30:51,420
grow up<font color="#E5E5E5"> on top of you boot in you boot</font>

781
00:30:49,920 --> 00:30:53,790
we just use standard new boot scripts

782
00:30:51,420 --> 00:30:55,500
and<font color="#E5E5E5"> grub has a scripting API that that</font>

783
00:30:53,790 --> 00:30:57,450
we've implemented this logic in and this

784
00:30:55,500 --> 00:31:00,360
<font color="#E5E5E5">is</font><font color="#CCCCCC"> the logic that determines whether to</font>

785
00:30:57,450 --> 00:31:02,700
boot the air to be<font color="#E5E5E5"> partition and and</font>

786
00:31:00,360 --> 00:31:04,620
that's typically the the main

787
00:31:02,700 --> 00:31:06,180
communication<font color="#CCCCCC"> point in the mender system</font>

788
00:31:04,620 --> 00:31:10,439
between the<font color="#E5E5E5"> mender client and the boot</font>

789
00:31:06,180 --> 00:31:13,080
<font color="#E5E5E5">loader</font><font color="#CCCCCC"> as far as actually implementing</font>

790
00:31:10,440 --> 00:31:16,920
<font color="#CCCCCC">the boot loader integration that tends</font>

791
00:31:13,080 --> 00:31:19,230
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be the the</font><font color="#E5E5E5"> the the most development</font>

792
00:31:16,920 --> 00:31:20,880
heavy<font color="#E5E5E5"> activity when you're when you are</font>

793
00:31:19,230 --> 00:31:23,370
<font color="#E5E5E5">integrating mender into</font><font color="#CCCCCC"> your build so if</font>

794
00:31:20,880 --> 00:31:25,620
you're using you boot if you're using

795
00:31:23,370 --> 00:31:27,449
<font color="#E5E5E5">sorry if you're using grub</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> you're</font>

796
00:31:25,620 --> 00:31:30,030
using grub<font color="#E5E5E5"> on top of you boot that's</font>

797
00:31:27,450 --> 00:31:31,770
<font color="#E5E5E5">pretty much automatic</font><font color="#CCCCCC"> it doesn't</font><font color="#E5E5E5"> require</font>

798
00:31:30,030 --> 00:31:33,240
any source code modification of either

799
00:31:31,770 --> 00:31:37,110
you go<font color="#E5E5E5"> to grub which is great because</font>

800
00:31:33,240 --> 00:31:39,480
that's<font color="#E5E5E5"> where it gets problematic</font><font color="#CCCCCC"> we also</font>

801
00:31:37,110 --> 00:31:43,169
have some<font color="#E5E5E5"> auto automatic patching of you</font>

802
00:31:39,480 --> 00:31:44,970
boot where if the the you boot feature

803
00:31:43,170 --> 00:31:48,570
are the you boot functionality for<font color="#E5E5E5"> your</font>

804
00:31:44,970 --> 00:31:51,630
<font color="#E5E5E5">board follows</font><font color="#CCCCCC"> certainty follows some of</font>

805
00:31:48,570 --> 00:31:53,370
the newer<font color="#E5E5E5"> functionality within you boot</font>

806
00:31:51,630 --> 00:31:54,540
<font color="#E5E5E5">it in and is implemented similar to</font>

807
00:31:53,370 --> 00:31:56,280
other boards we're actually<font color="#E5E5E5"> able to</font>

808
00:31:54,540 --> 00:31:59,129
<font color="#E5E5E5">detect and patch the</font><font color="#CCCCCC"> write files</font>

809
00:31:56,280 --> 00:32:01,680
<font color="#E5E5E5">automatically if for your particular</font>

810
00:31:59,130 --> 00:32:03,150
platform<font color="#E5E5E5"> you know maybe you're on an</font>

811
00:32:01,680 --> 00:32:08,040
older platform that hasn't been updated

812
00:32:03,150 --> 00:32:09,290
<font color="#E5E5E5">with all</font><font color="#CCCCCC"> of the you boot the boot</font>

813
00:32:08,040 --> 00:32:11,430
features that have been<font color="#E5E5E5"> added recently</font>

814
00:32:09,290 --> 00:32:13,080
we can always fall<font color="#CCCCCC"> back to a manual</font>

815
00:32:11,430 --> 00:32:15,270
patching and<font color="#E5E5E5"> we have that documented</font>

816
00:32:13,080 --> 00:32:17,370
very<font color="#E5E5E5"> well you know what exactly</font><font color="#CCCCCC"> needs</font><font color="#E5E5E5"> to</font>

817
00:32:15,270 --> 00:32:19,590
be done<font color="#E5E5E5"> you know what functionality</font>

818
00:32:17,370 --> 00:32:21,419
needs to be added<font color="#CCCCCC"> to the to the to the</font>

819
00:32:19,590 --> 00:32:24,209
you<font color="#E5E5E5"> boot so is integrating the</font>

820
00:32:21,420 --> 00:32:25,440
<font color="#CCCCCC">bootloader</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> likely where you're</font><font color="#E5E5E5"> going</font>

821
00:32:24,210 --> 00:32:27,000
<font color="#E5E5E5">to spend most of your</font><font color="#CCCCCC"> time but we've</font>

822
00:32:25,440 --> 00:32:30,360
done everything<font color="#CCCCCC"> we can to make</font><font color="#E5E5E5"> that as</font>

823
00:32:27,000 --> 00:32:33,120
easy as<font color="#CCCCCC"> possible the runtime integration</font>

824
00:32:30,360 --> 00:32:36,360
is we our requirements on the actual run

825
00:32:33,120 --> 00:32:38,610
timer are<font color="#E5E5E5"> fairly minimal</font><font color="#CCCCCC"> it's a fairly</font>

826
00:32:36,360 --> 00:32:42,300
simple application about<font color="#CCCCCC"> eight ten</font>

827
00:32:38,610 --> 00:32:44,969
<font color="#E5E5E5">megabytes in size that that runs as a</font>

828
00:32:42,300 --> 00:32:48,690
daemon<font color="#CCCCCC"> in in the</font><font color="#E5E5E5"> Linux runtime we</font>

829
00:32:44,970 --> 00:32:52,110
support a MMC and SD card<font color="#E5E5E5"> with typically</font>

830
00:32:48,690 --> 00:32:54,300
<font color="#E5E5E5">ext4 ext3 type file systems and we also</font>

831
00:32:52,110 --> 00:32:57,840
<font color="#E5E5E5">support raw flash with the ubi</font>

832
00:32:54,300 --> 00:32:58,919
and then as far as<font color="#E5E5E5"> the target OS is</font><font color="#CCCCCC"> yako</font>

833
00:32:57,840 --> 00:33:00,209
and open embedded as our

834
00:32:58,920 --> 00:33:02,910
primary out-of-the-box supported

835
00:33:00,210 --> 00:33:04,650
platform<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have a standard</font><font color="#CCCCCC"> Yap go metal</font>

836
00:33:02,910 --> 00:33:06,870
<font color="#E5E5E5">layer that you can integrate into your</font>

837
00:33:04,650 --> 00:33:10,170
<font color="#E5E5E5">build set a few</font><font color="#CCCCCC"> configuration parameters</font>

838
00:33:06,870 --> 00:33:11,879
in your<font color="#E5E5E5"> local comm file and then you can</font>

839
00:33:10,170 --> 00:33:13,950
pretty much get<font color="#CCCCCC"> mender integrated in</font>

840
00:33:11,880 --> 00:33:15,990
<font color="#E5E5E5">your device without too much too much</font>

841
00:33:13,950 --> 00:33:18,960
hassle that<font color="#E5E5E5"> way we've done some</font><font color="#CCCCCC"> work</font>

842
00:33:15,990 --> 00:33:21,990
with build route and an open wrt in both

843
00:33:18,960 --> 00:33:24,750
cases<font color="#CCCCCC"> some of that</font><font color="#E5E5E5"> has been</font><font color="#CCCCCC"> submitted</font>

844
00:33:21,990 --> 00:33:26,300
upstream and is<font color="#E5E5E5"> is able to be reused</font>

845
00:33:24,750 --> 00:33:28,650
some<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> going to require some</font>

846
00:33:26,300 --> 00:33:31,740
some customization if you<font color="#CCCCCC"> decide you</font>

847
00:33:28,650 --> 00:33:33,390
want to use<font color="#E5E5E5"> one of those</font><font color="#CCCCCC"> systems but we</font>

848
00:33:31,740 --> 00:33:35,640
have<font color="#E5E5E5"> done that through our services</font>

849
00:33:33,390 --> 00:33:37,290
group on a few occasions so we know<font color="#CCCCCC"> that</font>

850
00:33:35,640 --> 00:33:40,970
it is<font color="#E5E5E5"> possible to support them both</font>

851
00:33:37,290 --> 00:33:43,740
and finally recently we we released a

852
00:33:40,970 --> 00:33:45,990
utility we call mender convert and this

853
00:33:43,740 --> 00:33:48,120
allows us<font color="#CCCCCC"> to support</font><font color="#E5E5E5"> things like Debian</font>

854
00:33:45,990 --> 00:33:52,070
Ubuntu raspbian<font color="#E5E5E5"> things that are fairly</font>

855
00:33:48,120 --> 00:33:54,270
<font color="#E5E5E5">common in the embedded IOT space but</font>

856
00:33:52,070 --> 00:33:57,409
typically have their own package based

857
00:33:54,270 --> 00:33:59,400
updaters and that kind of thing involved

858
00:33:57,410 --> 00:34:02,130
<font color="#E5E5E5">associated with them and the way this</font>

859
00:33:59,400 --> 00:34:03,330
works<font color="#E5E5E5"> is the the mender convert utility</font>

860
00:34:02,130 --> 00:34:07,050
is actually a post process

861
00:34:03,330 --> 00:34:11,759
<font color="#E5E5E5">post-processing step that will work on</font>

862
00:34:07,050 --> 00:34:13,800
<font color="#E5E5E5">your once you have a Debian image or in</font>

863
00:34:11,760 --> 00:34:15,390
a bun to image with<font color="#CCCCCC"> all the packages</font><font color="#E5E5E5"> and</font>

864
00:34:13,800 --> 00:34:17,220
all your code<font color="#E5E5E5"> and everything</font><font color="#CCCCCC"> and you you</font>

865
00:34:15,389 --> 00:34:20,279
have your golden image that you that

866
00:34:17,219 --> 00:34:21,750
works for you then you you post process

867
00:34:20,280 --> 00:34:23,610
that image and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> actually will loop</font>

868
00:34:21,750 --> 00:34:26,489
<font color="#E5E5E5">back mount the the</font><font color="#CCCCCC"> filesystem image</font>

869
00:34:23,610 --> 00:34:28,679
image<font color="#E5E5E5"> will inject</font><font color="#CCCCCC"> the meander client and</font>

870
00:34:26,489 --> 00:34:30,719
all the configuration files<font color="#E5E5E5"> and create</font>

871
00:34:28,679 --> 00:34:34,409
<font color="#E5E5E5">the multiple partition structures and</font>

872
00:34:30,719 --> 00:34:36,000
the<font color="#E5E5E5"> artifact</font><font color="#CCCCCC"> based on that image that is</font>

873
00:34:34,409 --> 00:34:38,669
needed to<font color="#CCCCCC"> be deployed over-the-air</font><font color="#E5E5E5"> so</font>

874
00:34:36,000 --> 00:34:40,830
it's a it's an extra step<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do it this</font>

875
00:34:38,668 --> 00:34:42,629
way<font color="#E5E5E5"> and we are certainly looking</font><font color="#CCCCCC"> at</font>

876
00:34:40,830 --> 00:34:44,610
getting<font color="#E5E5E5"> better integration</font><font color="#CCCCCC"> with the</font>

877
00:34:42,630 --> 00:34:46,620
build systems for these for these kind

878
00:34:44,610 --> 00:34:49,020
of operating systems but pretty much any

879
00:34:46,620 --> 00:34:50,668
system<font color="#E5E5E5"> any other any other target</font>

880
00:34:49,020 --> 00:34:51,989
<font color="#E5E5E5">operating system can be supported with</font>

881
00:34:50,668 --> 00:34:54,330
this mechanism<font color="#CCCCCC"> so if you have something</font>

882
00:34:51,989 --> 00:34:55,918
<font color="#E5E5E5">that it's not listed</font><font color="#CCCCCC"> here you know feel</font>

883
00:34:54,330 --> 00:34:56,940
<font color="#CCCCCC">free to reach out or</font><font color="#E5E5E5"> you know jump on</font>

884
00:34:55,918 --> 00:35:00,299
our<font color="#CCCCCC"> mailing list</font><font color="#E5E5E5"> or whatever</font><font color="#CCCCCC"> and I'm</font>

885
00:34:56,940 --> 00:35:02,520
sure we would<font color="#E5E5E5"> be happy to work</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> you</font>

886
00:35:00,300 --> 00:35:05,060
on getting additional<font color="#CCCCCC"> operating systems</font>

887
00:35:02,520 --> 00:35:05,060
supported

888
00:35:08,540 --> 00:35:12,900
and what's what's coming soon this is

889
00:35:11,340 --> 00:35:13,980
<font color="#CCCCCC">the big thing that a lot of</font><font color="#E5E5E5"> people have</font>

890
00:35:12,900 --> 00:35:15,750
been<font color="#E5E5E5"> asking about and we've been talking</font>

891
00:35:13,980 --> 00:35:17,460
<font color="#CCCCCC">about quite a bit over</font><font color="#E5E5E5"> there at</font><font color="#CCCCCC"> our desk</font>

892
00:35:15,750 --> 00:35:19,740
<font color="#E5E5E5">we've got this new framework called</font>

893
00:35:17,460 --> 00:35:21,480
update<font color="#E5E5E5"> modules coming probably two or</font>

894
00:35:19,740 --> 00:35:26,120
<font color="#CCCCCC">three months</font><font color="#E5E5E5"> time frame</font><font color="#CCCCCC"> and what this</font>

895
00:35:21,480 --> 00:35:28,080
<font color="#E5E5E5">allows us to</font><font color="#CCCCCC"> do is to support updating</font>

896
00:35:26,120 --> 00:35:31,049
microcontroller sensors and other small

897
00:35:28,080 --> 00:35:32,850
devices<font color="#CCCCCC"> so the idea here</font><font color="#E5E5E5"> would the the</font>

898
00:35:31,050 --> 00:35:34,260
idea here would be for these<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> to</font>

899
00:35:32,850 --> 00:35:35,790
<font color="#CCCCCC">be updated in the proxy mode that we</font>

900
00:35:34,260 --> 00:35:37,890
talked about<font color="#CCCCCC"> before so your embedded</font>

901
00:35:35,790 --> 00:35:39,420
<font color="#E5E5E5">Linux system would function is the</font>

902
00:35:37,890 --> 00:35:42,870
<font color="#E5E5E5">gateway</font><font color="#CCCCCC"> run in the</font><font color="#E5E5E5"> mentor client and</font>

903
00:35:39,420 --> 00:35:44,930
then we<font color="#E5E5E5"> can write</font><font color="#CCCCCC"> plug-ins</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> would</font>

904
00:35:42,870 --> 00:35:48,029
allow you<font color="#CCCCCC"> to say update an</font><font color="#E5E5E5"> Arduino that</font>

905
00:35:44,930 --> 00:35:49,350
is connected to<font color="#E5E5E5"> your device or some kind</font>

906
00:35:48,030 --> 00:35:51,540
of sensor<font color="#E5E5E5"> that's connected over</font><font color="#CCCCCC"> to Laura</font>

907
00:35:49,350 --> 00:35:54,240
<font color="#E5E5E5">or some other some</font><font color="#CCCCCC"> other kind of small</font>

908
00:35:51,540 --> 00:35:56,160
device the the<font color="#E5E5E5"> client in this</font><font color="#CCCCCC"> case will</font>

909
00:35:54,240 --> 00:35:57,750
be will not<font color="#CCCCCC"> be running</font><font color="#E5E5E5"> on the device</font>

910
00:35:56,160 --> 00:36:01,200
<font color="#E5E5E5">that's being updated it'll actually be</font>

911
00:35:57,750 --> 00:36:03,030
running<font color="#E5E5E5"> on the gateway device</font><font color="#CCCCCC"> with this</font>

912
00:36:01,200 --> 00:36:06,180
with the update modules we<font color="#CCCCCC"> will be able</font>

913
00:36:03,030 --> 00:36:08,250
<font color="#E5E5E5">to support we will be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to better</font>

914
00:36:06,180 --> 00:36:09,690
<font color="#CCCCCC">support in place updates such as running</font>

915
00:36:08,250 --> 00:36:11,850
apt-get update and<font color="#CCCCCC"> that kind of thing</font>

916
00:36:09,690 --> 00:36:14,880
there will likely be<font color="#E5E5E5"> some limitations</font>

917
00:36:11,850 --> 00:36:17,060
<font color="#CCCCCC">there it's unclear a full support kernel</font>

918
00:36:14,880 --> 00:36:20,580
updates because typically the

919
00:36:17,060 --> 00:36:21,840
<font color="#E5E5E5">distribution provided</font><font color="#CCCCCC"> kernel</font><font color="#E5E5E5"> model is a</font>

920
00:36:20,580 --> 00:36:24,930
bit<font color="#CCCCCC"> different than what</font><font color="#E5E5E5"> menders</font>

921
00:36:21,840 --> 00:36:26,460
expecting so there may be some extra

922
00:36:24,930 --> 00:36:28,379
<font color="#E5E5E5">steps involved if we want to support</font>

923
00:36:26,460 --> 00:36:31,050
updating the kernel through this

924
00:36:28,380 --> 00:36:33,620
in-place update mechanism<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> also</font>

925
00:36:31,050 --> 00:36:35,670
<font color="#E5E5E5">support simpler things such as just</font>

926
00:36:33,620 --> 00:36:37,020
configuration and calibration data<font color="#E5E5E5"> if</font>

927
00:36:35,670 --> 00:36:39,420
you you know<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> update</font>

928
00:36:37,020 --> 00:36:41,100
a<font color="#E5E5E5"> few files in slash Etsy</font><font color="#CCCCCC"> and don't want</font>

929
00:36:39,420 --> 00:36:43,740
to<font color="#CCCCCC"> download a full root filesystem</font><font color="#E5E5E5"> to do</font>

930
00:36:41,100 --> 00:36:46,620
that<font color="#E5E5E5"> this this framework will will allow</font>

931
00:36:43,740 --> 00:36:49,169
us to<font color="#E5E5E5"> do that container based updates</font>

932
00:36:46,620 --> 00:36:52,140
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is something that</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> folks</font>

933
00:36:49,170 --> 00:36:54,540
<font color="#E5E5E5">ask about we today we don't directly</font>

934
00:36:52,140 --> 00:36:56,609
support this but with this<font color="#E5E5E5"> with the</font>

935
00:36:54,540 --> 00:36:58,680
update modules<font color="#E5E5E5"> we should be able to</font>

936
00:36:56,610 --> 00:37:01,050
support running various container

937
00:36:58,680 --> 00:37:02,609
subsystems on your on<font color="#CCCCCC"> your devices and</font>

938
00:37:01,050 --> 00:37:05,520
and and providing<font color="#CCCCCC"> the updates</font><font color="#E5E5E5"> to the</font>

939
00:37:02,610 --> 00:37:07,500
containers<font color="#CCCCCC"> from their differential</font><font color="#E5E5E5"> or</font>

940
00:37:05,520 --> 00:37:09,540
<font color="#E5E5E5">Delta updates this</font><font color="#CCCCCC"> is a very common</font>

941
00:37:07,500 --> 00:37:11,490
<font color="#CCCCCC">request</font><font color="#E5E5E5"> especially</font><font color="#CCCCCC"> when you're dealing</font>

942
00:37:09,540 --> 00:37:14,160
with the large root filesystem images

943
00:37:11,490 --> 00:37:15,810
and with when the<font color="#E5E5E5"> only minor things</font>

944
00:37:14,160 --> 00:37:16,980
change in between<font color="#E5E5E5"> them</font><font color="#CCCCCC"> you don't</font><font color="#E5E5E5"> want to</font>

945
00:37:15,810 --> 00:37:19,110
redownload all<font color="#E5E5E5"> the things that are</font>

946
00:37:16,980 --> 00:37:20,490
already there<font color="#CCCCCC"> so we should</font><font color="#E5E5E5"> be able to</font>

947
00:37:19,110 --> 00:37:23,220
<font color="#E5E5E5">provide better support</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> that</font>

948
00:37:20,490 --> 00:37:25,680
and as<font color="#CCCCCC"> mentioned this</font><font color="#E5E5E5"> is a</font><font color="#CCCCCC"> framework so</font>

949
00:37:23,220 --> 00:37:27,000
the idea is this<font color="#CCCCCC"> is a allows us to</font>

950
00:37:25,680 --> 00:37:29,910
create<font color="#E5E5E5"> the common ones that we know</font>

951
00:37:27,000 --> 00:37:32,990
<font color="#CCCCCC">people are</font><font color="#E5E5E5"> gonna want but then this can</font>

952
00:37:29,910 --> 00:37:37,109
also be<font color="#E5E5E5"> used</font><font color="#CCCCCC"> for very specific use cases</font>

953
00:37:32,990 --> 00:37:39,540
<font color="#CCCCCC">if you</font><font color="#E5E5E5"> have some subset of devices on a</font>

954
00:37:37,109 --> 00:37:41,819
board<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you want to implement</font>

955
00:37:39,540 --> 00:37:43,140
something very custom to update<font color="#E5E5E5"> Linux on</font>

956
00:37:41,820 --> 00:37:45,450
you know<font color="#CCCCCC"> two</font><font color="#E5E5E5"> of your cores and then you</font>

957
00:37:43,140 --> 00:37:46,920
have maybe some<font color="#E5E5E5"> artists is running</font>

958
00:37:45,450 --> 00:37:50,759
<font color="#CCCCCC">zephyr</font><font color="#E5E5E5"> or free artists or something like</font>

959
00:37:46,920 --> 00:37:54,089
<font color="#E5E5E5">that on other cores</font><font color="#CCCCCC"> and a very custom</font>

960
00:37:50,760 --> 00:37:55,980
mechanism to update all those those

961
00:37:54,089 --> 00:37:57,330
systems together<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> that should be</font>

962
00:37:55,980 --> 00:38:03,630
possible<font color="#E5E5E5"> with this update module</font>

963
00:37:57,330 --> 00:38:05,369
framework so real quick<font color="#CCCCCC"> if you want to</font>

964
00:38:03,630 --> 00:38:08,580
get started<font color="#E5E5E5"> with meander these three</font>

965
00:38:05,369 --> 00:38:10,050
commands or all you need to do if the

966
00:38:08,580 --> 00:38:11,700
demo<font color="#CCCCCC"> gods are on my side I'll actually</font>

967
00:38:10,050 --> 00:38:14,040
be<font color="#E5E5E5"> able to do this and at least show the</font>

968
00:38:11,700 --> 00:38:16,259
web UI here<font color="#E5E5E5"> the link down at the</font><font color="#CCCCCC"> bottom</font>

969
00:38:14,040 --> 00:38:19,830
<font color="#E5E5E5">on our</font><font color="#CCCCCC"> Doc's page will walk you through</font>

970
00:38:16,260 --> 00:38:21,450
<font color="#CCCCCC">this and this this basically downloads a</font>

971
00:38:19,830 --> 00:38:23,790
docker compose environment and actually

972
00:38:21,450 --> 00:38:25,379
<font color="#E5E5E5">launches the</font><font color="#CCCCCC"> meander server</font><font color="#E5E5E5"> on whatever</font>

973
00:38:23,790 --> 00:38:28,529
machine<font color="#E5E5E5"> you're running on as well as it</font>

974
00:38:25,380 --> 00:38:30,780
launches<font color="#E5E5E5"> a</font><font color="#CCCCCC"> ki mu based emulated device</font>

975
00:38:28,530 --> 00:38:32,520
<font color="#E5E5E5">already running them in your client</font>

976
00:38:30,780 --> 00:38:34,170
<font color="#CCCCCC">enabled</font><font color="#E5E5E5"> to connect to your server</font><font color="#CCCCCC"> so</font>

977
00:38:32,520 --> 00:38:40,170
let's see how well we're going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> work</font>

978
00:38:34,170 --> 00:38:42,710
<font color="#CCCCCC">here</font><font color="#E5E5E5"> those pumps are no good is that</font>

979
00:38:40,170 --> 00:38:42,710
reasonable

980
00:38:53,620 --> 00:38:56,620
well

981
00:38:59,650 --> 00:39:03,640
<font color="#E5E5E5">password there we go okay so then I'm</font>

982
00:39:02,289 --> 00:39:04,869
just<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> let</font><font color="#CCCCCC"> this scroll</font><font color="#E5E5E5"> so this is</font>

983
00:39:03,640 --> 00:39:07,509
actually launching the<font color="#E5E5E5"> mender demo</font>

984
00:39:04,869 --> 00:39:09,940
<font color="#CCCCCC">environment here which as</font><font color="#E5E5E5"> mentioned was</font>

985
00:39:07,509 --> 00:39:11,710
a is a<font color="#CCCCCC"> doctor composed environment so</font>

986
00:39:09,940 --> 00:39:13,660
we're<font color="#E5E5E5"> launching a number</font><font color="#CCCCCC"> of docker</font>

987
00:39:11,710 --> 00:39:15,039
containers here<font color="#E5E5E5"> and in a moment we'll</font>

988
00:39:13,660 --> 00:39:17,649
start to see<font color="#CCCCCC"> all the logs from</font><font color="#E5E5E5"> each of</font>

989
00:39:15,039 --> 00:39:19,150
the containers<font color="#E5E5E5"> go scrolling by at this</font>

990
00:39:17,650 --> 00:39:22,839
point we can actually<font color="#E5E5E5"> go</font><font color="#CCCCCC"> ahead and</font><font color="#E5E5E5"> make</font>

991
00:39:19,150 --> 00:39:27,009
<font color="#CCCCCC">sure I've got the user set up for me to</font>

992
00:39:22,839 --> 00:39:28,779
be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to log in and now we can see the</font>

993
00:39:27,009 --> 00:39:31,660
logs from the emulated<font color="#E5E5E5"> device that's</font>

994
00:39:28,779 --> 00:39:33,369
<font color="#CCCCCC">that's running here and just for good</font>

995
00:39:31,660 --> 00:39:36,808
measure I'll go ahead and<font color="#CCCCCC"> SSH into this</font>

996
00:39:33,369 --> 00:39:42,089
device so<font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> obviously an x86 64</font>

997
00:39:36,809 --> 00:39:52,839
QAM<font color="#CCCCCC"> you device and so I can</font><font color="#E5E5E5"> actually</font>

998
00:39:42,089 --> 00:39:54,430
display<font color="#CCCCCC"> the meander logs here and at the</font>

999
00:39:52,839 --> 00:39:57,808
same<font color="#CCCCCC"> time</font><font color="#E5E5E5"> I can jump over here so this</font>

1000
00:39:54,430 --> 00:39:57,808
<font color="#E5E5E5">is the the meander web UI</font>

1001
00:40:19,920 --> 00:40:26,339
now in our case<font color="#CCCCCC"> you can't really</font><font color="#E5E5E5"> see</font>

1002
00:40:22,920 --> 00:40:28,319
<font color="#E5E5E5">that very well</font><font color="#CCCCCC"> we have one device</font><font color="#E5E5E5"> here</font>

1003
00:40:26,339 --> 00:40:32,308
which<font color="#E5E5E5"> is our emulated device</font><font color="#CCCCCC"> it's</font>

1004
00:40:28,319 --> 00:40:34,259
running version<font color="#E5E5E5"> 1.7 we have an artifact</font>

1005
00:40:32,309 --> 00:40:38,430
which is a version<font color="#E5E5E5"> of software to</font>

1006
00:40:34,260 --> 00:40:42,119
<font color="#CCCCCC">install and we can trigger a deployment</font>

1007
00:40:38,430 --> 00:40:43,288
here<font color="#E5E5E5"> we'll select the artifact and in</font>

1008
00:40:42,119 --> 00:40:46,109
<font color="#E5E5E5">this case I'm just going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> select all</font>

1009
00:40:43,289 --> 00:40:50,220
<font color="#CCCCCC">devices</font><font color="#E5E5E5"> it does the compatibility check</font>

1010
00:40:46,109 --> 00:40:52,980
here you see the device types is<font color="#E5E5E5"> qmu x86</font>

1011
00:40:50,220 --> 00:40:55,410
64<font color="#E5E5E5"> and we trigger our deployment now</font>

1012
00:40:52,980 --> 00:40:57,809
this is where<font color="#E5E5E5"> I am fairly certain that</font>

1013
00:40:55,410 --> 00:40:59,220
it's<font color="#E5E5E5"> going to fail but if we look over</font>

1014
00:40:57,809 --> 00:41:02,160
here<font color="#E5E5E5"> we can actually see</font><font color="#CCCCCC"> that it</font>

1015
00:40:59,220 --> 00:41:04,950
<font color="#E5E5E5">attempted an installation and here we</font>

1016
00:41:02,160 --> 00:41:07,828
get an<font color="#CCCCCC"> updated install failed</font><font color="#E5E5E5"> due</font><font color="#CCCCCC"> to the</font>

1017
00:41:04,950 --> 00:41:10,769
image sizes are<font color="#E5E5E5"> not right so we have a</font>

1018
00:41:07,829 --> 00:41:13,559
bug in our environment right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> but the</font>

1019
00:41:10,769 --> 00:41:16,410
<font color="#E5E5E5">bandwidth wasn't sufficient for me</font><font color="#CCCCCC"> to do</font>

1020
00:41:13,559 --> 00:41:17,970
a full build from scratch<font color="#E5E5E5"> today so after</font>

1021
00:41:16,410 --> 00:41:20,759
a few<font color="#CCCCCC"> minutes this will</font><font color="#E5E5E5"> be detected</font><font color="#CCCCCC"> has</font>

1022
00:41:17,970 --> 00:41:24,720
failed and<font color="#E5E5E5"> this this particular</font>

1023
00:41:20,760 --> 00:41:26,789
deployment<font color="#E5E5E5"> will be marked as</font><font color="#CCCCCC"> it's failed</font>

1024
00:41:24,720 --> 00:41:29,308
<font color="#E5E5E5">you do that but that should at least</font>

1025
00:41:26,789 --> 00:41:30,539
give<font color="#CCCCCC"> you an idea of you</font><font color="#E5E5E5"> know what the</font>

1026
00:41:29,309 --> 00:41:34,130
workflow<font color="#E5E5E5"> is like when you're working</font>

1027
00:41:30,539 --> 00:41:34,130
<font color="#CCCCCC">with the vendor vendor system</font>

1028
00:41:40,530 --> 00:41:46,460
and just to share a bit more here<font color="#E5E5E5"> we do</font>

1029
00:41:43,560 --> 00:41:50,100
have<font color="#CCCCCC"> a Google Group slash mailing list</font>

1030
00:41:46,460 --> 00:41:53,010
<font color="#E5E5E5">that that that that's out there</font>

1031
00:41:50,100 --> 00:41:55,380
pretty standard<font color="#E5E5E5"> open source type working</font>

1032
00:41:53,010 --> 00:41:56,730
model we love contributions<font color="#E5E5E5"> if you have</font>

1033
00:41:55,380 --> 00:41:58,950
any<font color="#E5E5E5"> ideas feel</font><font color="#CCCCCC"> free to jump</font><font color="#E5E5E5"> on our</font>

1034
00:41:56,730 --> 00:42:01,320
<font color="#CCCCCC">mailing list jump on hub</font><font color="#E5E5E5"> meander dot IO</font>

1035
00:41:58,950 --> 00:42:02,939
that's our community site we're<font color="#E5E5E5"> actually</font>

1036
00:42:01,320 --> 00:42:06,680
migrating all of our mailing<font color="#E5E5E5"> lists to</font>

1037
00:42:02,940 --> 00:42:08,640
<font color="#E5E5E5">there this is a site to share tutorials</font>

1038
00:42:06,680 --> 00:42:10,549
<font color="#E5E5E5">integrations if you've added it</font><font color="#CCCCCC"> to a</font>

1039
00:42:08,640 --> 00:42:13,830
specific<font color="#CCCCCC"> board that somebody else might</font>

1040
00:42:10,550 --> 00:42:16,400
benefit from<font color="#CCCCCC"> we'd love to have you</font><font color="#E5E5E5"> post</font>

1041
00:42:13,830 --> 00:42:18,960
that there and<font color="#E5E5E5"> obviously we have an IRC</font>

1042
00:42:16,400 --> 00:42:21,780
and then developer portal the very

1043
00:42:18,960 --> 00:42:23,160
bottom<font color="#E5E5E5"> link there is is pretty much the</font>

1044
00:42:21,780 --> 00:42:25,200
the<font color="#E5E5E5"> main link to get all of this</font>

1045
00:42:23,160 --> 00:42:27,950
<font color="#E5E5E5">information and with that I think we've</font>

1046
00:42:25,200 --> 00:42:27,950
got some time<font color="#E5E5E5"> for some</font><font color="#CCCCCC"> questions</font>

1047
00:42:41,110 --> 00:42:48,020
hello<font color="#CCCCCC"> thank you for the presentation</font><font color="#E5E5E5"> my</font>

1048
00:42:44,870 --> 00:42:50,720
question is do<font color="#CCCCCC"> you have any plans</font><font color="#E5E5E5"> to</font>

1049
00:42:48,020 --> 00:42:52,759
<font color="#CCCCCC">support</font><font color="#E5E5E5"> a dating devices that have</font>

1050
00:42:50,720 --> 00:42:55,100
encrypted storages what I'm thinking

1051
00:42:52,760 --> 00:42:57,650
<font color="#CCCCCC">about</font><font color="#E5E5E5"> especially usually when you</font><font color="#CCCCCC"> want</font>

1052
00:42:55,100 --> 00:43:00,560
to protect<font color="#E5E5E5"> disability devices against</font>

1053
00:42:57,650 --> 00:43:03,530
<font color="#E5E5E5">tampering what you would do is encrypt</font>

1054
00:43:00,560 --> 00:43:05,779
the storage<font color="#CCCCCC"> use</font><font color="#E5E5E5"> a TPM and so on and so</font>

1055
00:43:03,530 --> 00:43:07,790
if you update<font color="#E5E5E5"> the software you have</font><font color="#CCCCCC"> to</font>

1056
00:43:05,780 --> 00:43:10,100
inform<font color="#E5E5E5"> the TPM and that can be very</font>

1057
00:43:07,790 --> 00:43:13,580
<font color="#CCCCCC">tricky is it the challenge</font><font color="#E5E5E5"> we've already</font>

1058
00:43:10,100 --> 00:43:15,980
looked<font color="#E5E5E5"> at</font><font color="#CCCCCC"> certainly we want</font><font color="#E5E5E5"> to support</font>

1059
00:43:13,580 --> 00:43:19,130
<font color="#CCCCCC">TPM and things like</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> and we do have</font>

1060
00:43:15,980 --> 00:43:21,020
some some one-off services work that

1061
00:43:19,130 --> 00:43:23,240
we're doing towards that exactly<font color="#E5E5E5"> how</font>

1062
00:43:21,020 --> 00:43:27,110
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> going to roll out into generic</font>

1063
00:43:23,240 --> 00:43:28,970
product<font color="#E5E5E5"> type things we it's unclear but</font>

1064
00:43:27,110 --> 00:43:30,530
there's nothing inherent in the mender

1065
00:43:28,970 --> 00:43:33,709
architecture that would preclude us from

1066
00:43:30,530 --> 00:43:35,450
that but there's<font color="#CCCCCC"> obviously extra work</font>

1067
00:43:33,710 --> 00:43:37,820
<font color="#CCCCCC">that needs to be done</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement it</font><font color="#E5E5E5"> so</font>

1068
00:43:35,450 --> 00:43:40,970
<font color="#CCCCCC">and you know if you have ideas again</font>

1069
00:43:37,820 --> 00:43:42,230
feel free<font color="#CCCCCC"> feel free to reach out we'd</font>

1070
00:43:40,970 --> 00:43:44,379
<font color="#E5E5E5">love to have more</font><font color="#CCCCCC"> people contributing</font>

1071
00:43:42,230 --> 00:43:44,380
<font color="#E5E5E5">there</font>

1072
00:43:51,510 --> 00:43:59,460
<font color="#E5E5E5">okay and how</font><font color="#CCCCCC"> does it is Sisseton</font><font color="#E5E5E5"> be</font>

1073
00:43:55,810 --> 00:44:02,529
always alert watch<font color="#E5E5E5"> oh you know and many</font>

1074
00:43:59,460 --> 00:44:04,990
<font color="#CCCCCC">English isla market many out of land</font>

1075
00:44:02,530 --> 00:44:07,780
<font color="#E5E5E5">just</font><font color="#CCCCCC"> uses I enjoy</font><font color="#E5E5E5"> way which you can</font>

1076
00:44:04,990 --> 00:44:13,660
handle<font color="#E5E5E5"> that trusted</font><font color="#CCCCCC"> June but it's not a</font>

1077
00:44:07,780 --> 00:44:16,750
royal<font color="#E5E5E5"> a</font><font color="#CCCCCC"> be IV masa mix ways a poodle</font>

1078
00:44:13,660 --> 00:44:19,390
<font color="#CCCCCC">order</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> trust</font><font color="#E5E5E5"> always very important in</font>

1079
00:44:16,750 --> 00:44:24,400
a<font color="#CCCCCC"> OTL also producer</font>

1080
00:44:19,390 --> 00:44:27,160
<font color="#CCCCCC">neither ot</font><font color="#E5E5E5"> a Christian one</font><font color="#CCCCCC"> alright okay</font>

1081
00:44:24,400 --> 00:44:30,010
I'm<font color="#CCCCCC"> not following a question I</font><font color="#E5E5E5"> mean how</font>

1082
00:44:27,160 --> 00:44:33,190
does<font color="#CCCCCC"> this system</font><font color="#E5E5E5"> TOS</font><font color="#CCCCCC"> at resume with</font>

1083
00:44:30,010 --> 00:44:36,550
trusting<font color="#E5E5E5"> you cannot trust the rationally</font>

1084
00:44:33,190 --> 00:44:39,010
imagery<font color="#E5E5E5"> in Korea in</font><font color="#CCCCCC"> to lobby pad or</font><font color="#E5E5E5"> a</font>

1085
00:44:36,550 --> 00:44:42,310
<font color="#E5E5E5">pop culture</font><font color="#CCCCCC"> you have some key problem</font>

1086
00:44:39,010 --> 00:44:45,640
and<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> a security problem here</font>

1087
00:44:42,310 --> 00:44:49,410
have you ever<font color="#CCCCCC"> seen GABA right so so the</font>

1088
00:44:45,640 --> 00:44:49,410
<font color="#E5E5E5">answer is we</font><font color="#CCCCCC"> don't deal</font><font color="#E5E5E5"> with that today</font>

1089
00:44:50,250 --> 00:44:56,860
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> how do you show something</font><font color="#CCCCCC"> like you</font>

1090
00:44:53,560 --> 00:44:59,680
refer<font color="#CCCCCC"> as a Wi-Fi password Inglaterra</font>

1091
00:44:56,860 --> 00:45:03,760
you as you just use the image update

1092
00:44:59,680 --> 00:45:07,180
another<font color="#E5E5E5"> package</font><font color="#CCCCCC"> appetizer</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> sun</font>

1093
00:45:03,760 --> 00:45:09,850
<font color="#CCCCCC">conference files will be updated in a</font>

1094
00:45:07,180 --> 00:45:13,319
<font color="#CCCCCC">line in</font><font color="#E5E5E5"> the elevation which is an</font>

1095
00:45:09,850 --> 00:45:16,660
original file<font color="#CCCCCC"> Russia between</font><font color="#E5E5E5"> that a</font>

1096
00:45:13,320 --> 00:45:19,000
<font color="#CCCCCC">telepathic invader is not you use a ball</font>

1097
00:45:16,660 --> 00:45:22,810
<font color="#E5E5E5">anymore and</font><font color="#CCCCCC"> red will cost</font><font color="#E5E5E5"> some more</font>

1098
00:45:19,000 --> 00:45:25,080
problem<font color="#E5E5E5"> yeah right so then so</font><font color="#CCCCCC"> basically</font>

1099
00:45:22,810 --> 00:45:28,210
for things like configuration files that

1100
00:45:25,080 --> 00:45:29,290
<font color="#E5E5E5">the for Wi-Fi credentials for instance</font>

1101
00:45:28,210 --> 00:45:31,870
you<font color="#E5E5E5"> know they're typically stored in</font>

1102
00:45:29,290 --> 00:45:33,730
Etsy<font color="#E5E5E5"> in the NC directory and obviously</font>

1103
00:45:31,870 --> 00:45:35,859
that's overwritten with an<font color="#E5E5E5"> image</font><font color="#CCCCCC"> based</font>

1104
00:45:33,730 --> 00:45:37,870
update<font color="#E5E5E5"> so it's really up</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> system</font>

1105
00:45:35,860 --> 00:45:39,640
designer at that point to arrange<font color="#CCCCCC"> those</font>

1106
00:45:37,870 --> 00:45:41,170
files to be stored in<font color="#E5E5E5"> the flash data</font>

1107
00:45:39,640 --> 00:45:44,500
partition and either replaced with a

1108
00:45:41,170 --> 00:45:46,090
symlink<font color="#CCCCCC"> in slash Etsy</font><font color="#E5E5E5"> or just you know</font>

1109
00:45:44,500 --> 00:45:48,220
change the<font color="#E5E5E5"> configuration file so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it</font>

1110
00:45:46,090 --> 00:45:49,870
knows<font color="#CCCCCC"> to look for the</font><font color="#E5E5E5"> credentials file</font>

1111
00:45:48,220 --> 00:45:51,419
over in this<font color="#E5E5E5"> last data partition so</font>

1112
00:45:49,870 --> 00:45:53,830
that's definitely a system integrator

1113
00:45:51,420 --> 00:45:56,270
<font color="#CCCCCC">step it's</font><font color="#E5E5E5"> not something we can do in any</font>

1114
00:45:53,830 --> 00:45:59,360
kind<font color="#E5E5E5"> of automated fashion</font>

1115
00:45:56,270 --> 00:45:59,360
[Music]

1116
00:46:02,180 --> 00:46:07,529
<font color="#CCCCCC">and scripting in</font><font color="#E5E5E5"> tank and certainly can</font>

1117
00:46:05,580 --> 00:46:10,140
certainly help there<font color="#CCCCCC"> I think we got a</font>

1118
00:46:07,530 --> 00:46:13,170
question<font color="#E5E5E5"> up here</font><font color="#CCCCCC"> hello hi thank</font><font color="#E5E5E5"> you</font>

1119
00:46:10,140 --> 00:46:14,700
<font color="#CCCCCC">I was one seems from the</font><font color="#E5E5E5"> entire system</font>

1120
00:46:13,170 --> 00:46:17,010
they have everything<font color="#E5E5E5"> there to</font>

1121
00:46:14,700 --> 00:46:19,350
potentially support recoverability so

1122
00:46:17,010 --> 00:46:23,210
for instance if<font color="#CCCCCC"> you're current</font><font color="#E5E5E5"> if you're</font>

1123
00:46:19,350 --> 00:46:27,750
running<font color="#E5E5E5"> on a and</font><font color="#CCCCCC"> you do something silly</font>

1124
00:46:23,210 --> 00:46:29,880
<font color="#E5E5E5">then is it possible to over time create</font>

1125
00:46:27,750 --> 00:46:32,580
snapshots to be to say at<font color="#E5E5E5"> some point</font>

1126
00:46:29,880 --> 00:46:35,070
oh I've messed up<font color="#CCCCCC"> my a can I just switch</font>

1127
00:46:32,580 --> 00:46:36,870
on to B instead that's certainly

1128
00:46:35,070 --> 00:46:39,150
something that<font color="#CCCCCC"> could be added it's not</font>

1129
00:46:36,870 --> 00:46:41,819
something we it's not<font color="#CCCCCC"> a model that</font><font color="#E5E5E5"> we</font>

1130
00:46:39,150 --> 00:46:44,010
support today<font color="#E5E5E5"> right so the expectation</font>

1131
00:46:41,820 --> 00:46:46,080
<font color="#E5E5E5">is that</font><font color="#CCCCCC"> your active partition is known</font>

1132
00:46:44,010 --> 00:46:47,310
good and then your passive partition is

1133
00:46:46,080 --> 00:46:50,460
completely undefined

1134
00:46:47,310 --> 00:46:52,590
so so<font color="#CCCCCC"> the idea</font><font color="#E5E5E5"> you know of having</font>

1135
00:46:50,460 --> 00:46:53,700
<font color="#E5E5E5">multiple multiple snapshots and that</font>

1136
00:46:52,590 --> 00:46:55,680
kind of thing<font color="#E5E5E5"> is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> something you know</font>

1137
00:46:53,700 --> 00:46:57,540
we have<font color="#E5E5E5"> to that's all we have today but</font>

1138
00:46:55,680 --> 00:47:02,940
conceptually it certainly could<font color="#CCCCCC"> be</font>

1139
00:46:57,540 --> 00:47:05,340
expanded as such<font color="#CCCCCC"> all right thank you</font><font color="#E5E5E5"> for</font>

1140
00:47:02,940 --> 00:47:08,460
<font color="#CCCCCC">presentation</font><font color="#E5E5E5"> how hard would it be to</font>

1141
00:47:05,340 --> 00:47:10,640
deploy a member of an existing<font color="#CCCCCC"> MQTT</font>

1142
00:47:08,460 --> 00:47:13,770
<font color="#CCCCCC">network I'm sorry I can barely hear you</font>

1143
00:47:10,640 --> 00:47:18,089
<font color="#E5E5E5">would it be possible</font><font color="#CCCCCC"> to deploy a meander</font>

1144
00:47:13,770 --> 00:47:19,560
over<font color="#CCCCCC"> an existing mqtt network implement</font>

1145
00:47:18,090 --> 00:47:28,830
<font color="#CCCCCC">meander let me come wake up a little</font>

1146
00:47:19,560 --> 00:47:32,370
<font color="#CCCCCC">closer oh implement in mangrove MQTT as</font>

1147
00:47:28,830 --> 00:47:34,620
long as you've got<font color="#E5E5E5"> a pipe for data we we</font>

1148
00:47:32,370 --> 00:47:36,330
<font color="#E5E5E5">could potentially</font><font color="#CCCCCC"> do that</font><font color="#E5E5E5"> today we we</font>

1149
00:47:34,620 --> 00:47:38,910
download the<font color="#E5E5E5"> images and</font><font color="#CCCCCC"> all the</font>

1150
00:47:36,330 --> 00:47:41,640
communication is over TLS but as long<font color="#E5E5E5"> as</font>

1151
00:47:38,910 --> 00:47:43,680
there's some data<font color="#E5E5E5"> pipe available</font><font color="#CCCCCC"> we</font>

1152
00:47:41,640 --> 00:47:46,109
could<font color="#CCCCCC"> certainly do that MQTT might be a</font>

1153
00:47:43,680 --> 00:47:48,480
little heavy weight on you know full

1154
00:47:46,110 --> 00:47:50,010
image updates<font color="#CCCCCC"> it might be</font><font color="#E5E5E5"> Mike might</font>

1155
00:47:48,480 --> 00:47:52,860
stretch the MTT through protocol a

1156
00:47:50,010 --> 00:47:57,440
little bit too much but sure that

1157
00:47:52,860 --> 00:48:04,410
conceptually<font color="#E5E5E5"> could be done easily</font>

1158
00:47:57,440 --> 00:48:06,930
I'm not gonna<font color="#E5E5E5"> promise that</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

1159
00:48:04,410 --> 00:48:09,569
these<font color="#CCCCCC"> devices often</font><font color="#E5E5E5"> have a limited</font>

1160
00:48:06,930 --> 00:48:11,879
onboard storage and maybe they<font color="#E5E5E5"> don't</font>

1161
00:48:09,570 --> 00:48:14,670
<font color="#E5E5E5">even have a separate data storage device</font>

1162
00:48:11,880 --> 00:48:16,020
or partition and sacrificing half of

1163
00:48:14,670 --> 00:48:17,910
your existing storage<font color="#E5E5E5"> at</font><font color="#CCCCCC"> the name of</font>

1164
00:48:16,020 --> 00:48:20,160
reliability and<font color="#E5E5E5"> reduce downtime during</font>

1165
00:48:17,910 --> 00:48:22,560
an update might be a little<font color="#E5E5E5"> excessive</font>

1166
00:48:20,160 --> 00:48:25,950
have you considered alternative<font color="#E5E5E5"> systems</font>

1167
00:48:22,560 --> 00:48:28,410
<font color="#E5E5E5">like using a minimal minimal partition</font>

1168
00:48:25,950 --> 00:48:29,879
with the base<font color="#E5E5E5"> system and your</font><font color="#CCCCCC"> mender</font>

1169
00:48:28,410 --> 00:48:33,859
<font color="#E5E5E5">clients running just to perform an</font>

1170
00:48:29,880 --> 00:48:33,859
update<font color="#CCCCCC"> and then return to that partition</font>

1171
00:48:39,290 --> 00:48:46,200
something like<font color="#E5E5E5"> where to go something</font>

1172
00:48:44,070 --> 00:48:49,820
<font color="#E5E5E5">like the maintenance mode where you you</font>

1173
00:48:46,200 --> 00:48:51,839
you have<font color="#CCCCCC"> a smaller an update client</font>

1174
00:48:49,820 --> 00:48:53,160
<font color="#E5E5E5">that'll update a part of the system and</font>

1175
00:48:51,840 --> 00:48:54,990
<font color="#E5E5E5">then</font><font color="#CCCCCC"> you boot back into that</font><font color="#E5E5E5"> and then</font>

1176
00:48:53,160 --> 00:48:57,029
you can<font color="#CCCCCC"> assume bootstrap on top of that</font>

1177
00:48:54,990 --> 00:48:58,290
yeah except instead<font color="#E5E5E5"> of having</font><font color="#CCCCCC"> to do</font><font color="#E5E5E5"> it</font>

1178
00:48:57,030 --> 00:49:01,410
in the<font color="#E5E5E5"> boot</font><font color="#CCCCCC"> loader you can still have a</font>

1179
00:48:58,290 --> 00:49:02,900
read FS and actually<font color="#E5E5E5"> that picks up on</font>

1180
00:49:01,410 --> 00:49:05,540
the<font color="#E5E5E5"> previous question</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> was about</font>

1181
00:49:02,900 --> 00:49:08,040
<font color="#CCCCCC">using the separate</font><font color="#E5E5E5"> partition to recover</font>

1182
00:49:05,540 --> 00:49:09,570
<font color="#E5E5E5">functionality so instead of</font><font color="#CCCCCC"> having that</font>

1183
00:49:08,040 --> 00:49:11,160
functionality embedded in the bootloader

1184
00:49:09,570 --> 00:49:13,859
<font color="#E5E5E5">which as you mentioned has some problems</font>

1185
00:49:11,160 --> 00:49:17,069
<font color="#E5E5E5">it could be a separate really fast</font>

1186
00:49:13,859 --> 00:49:18,450
partition yeah again<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> not something</font>

1187
00:49:17,070 --> 00:49:21,150
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we've put a whole lot of thought</font>

1188
00:49:18,450 --> 00:49:24,450
<font color="#CCCCCC">into in terms</font><font color="#E5E5E5"> of specifics of how to</font>

1189
00:49:21,150 --> 00:49:27,270
implement<font color="#E5E5E5"> it</font><font color="#CCCCCC"> that update framework</font><font color="#E5E5E5"> that</font>

1190
00:49:24,450 --> 00:49:28,470
I mentioned at<font color="#CCCCCC"> the very end potentially</font>

1191
00:49:27,270 --> 00:49:30,150
could<font color="#CCCCCC"> be used for that but we don't</font>

1192
00:49:28,470 --> 00:49:31,680
<font color="#E5E5E5">obviously have to dig into the specific</font>

1193
00:49:30,150 --> 00:49:37,410
requirements to see how well that that

1194
00:49:31,680 --> 00:49:40,710
would<font color="#E5E5E5"> match up okay you're</font><font color="#CCCCCC"> running out</font>

1195
00:49:37,410 --> 00:49:41,890
of time<font color="#CCCCCC"> yes thank you</font><font color="#E5E5E5"> very much thank</font>

1196
00:49:40,710 --> 00:49:43,600
<font color="#CCCCCC">you</font><font color="#E5E5E5"> so much</font>

1197
00:49:41,890 --> 00:49:47,638
<font color="#E5E5E5">you</font>

1198
00:49:43,600 --> 00:49:47,639
[Music]

