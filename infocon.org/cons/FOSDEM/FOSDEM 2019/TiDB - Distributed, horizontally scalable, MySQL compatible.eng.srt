1
00:00:12,040 --> 00:00:18,320
okay<font color="#E5E5E5"> can everyone hear me okay</font>

2
00:00:14,690 --> 00:00:19,700
I think it's<font color="#CCCCCC"> yes all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> hi my name is</font>

3
00:00:18,320 --> 00:00:22,698
Morgan<font color="#E5E5E5"> I worked with pink cap as a</font>

4
00:00:19,700 --> 00:00:24,948
<font color="#E5E5E5">product and community manager we build</font>

5
00:00:22,699 --> 00:00:27,949
<font color="#CCCCCC">the</font><font color="#E5E5E5"> database called</font><font color="#CCCCCC"> tie DB I also</font>

6
00:00:24,949 --> 00:00:30,710
contributed to tie<font color="#CCCCCC"> DB it speaks to my</font>

7
00:00:27,949 --> 00:00:33,320
SQL protocol so here's what we're<font color="#CCCCCC"> gonna</font>

8
00:00:30,710 --> 00:00:36,110
talk<font color="#CCCCCC"> about today it is</font><font color="#E5E5E5"> positive so I do</font>

9
00:00:33,320 --> 00:00:37,339
want to<font color="#E5E5E5"> focus on the tech side but I do</font>

10
00:00:36,110 --> 00:00:39,049
want to start<font color="#E5E5E5"> with sort of</font><font color="#CCCCCC"> like a single</font>

11
00:00:37,339 --> 00:00:41,780
<font color="#E5E5E5">page</font><font color="#CCCCCC"> version just giving an introduction</font>

12
00:00:39,049 --> 00:00:43,580
<font color="#E5E5E5">to tie DB and pink cap as for some of</font>

13
00:00:41,780 --> 00:00:45,350
you it may be a<font color="#E5E5E5"> fairly new project and</font>

14
00:00:43,580 --> 00:00:47,809
then we're getting<font color="#CCCCCC"> the</font><font color="#E5E5E5"> check details</font><font color="#CCCCCC"> and</font>

15
00:00:45,350 --> 00:00:49,670
then it's later on the talk I'll cover

16
00:00:47,809 --> 00:00:51,650
benchmarks<font color="#E5E5E5"> and I'll cover my</font><font color="#CCCCCC"> is co</font>

17
00:00:49,670 --> 00:00:53,690
compatibility right<font color="#CCCCCC"> cuz</font><font color="#E5E5E5"> it sounds</font><font color="#CCCCCC"> very</font>

18
00:00:51,650 --> 00:00:55,909
<font color="#E5E5E5">promising you know it's it's my scope</font>

19
00:00:53,690 --> 00:00:57,559
compatible<font color="#E5E5E5"> how</font><font color="#CCCCCC"> hard</font><font color="#E5E5E5"> is that to do turns</font>

20
00:00:55,909 --> 00:00:59,239
<font color="#E5E5E5">out it's pretty</font><font color="#CCCCCC"> hard so we'll go</font><font color="#E5E5E5"> to the</font>

21
00:00:57,559 --> 00:01:03,019
details<font color="#E5E5E5"> of exactly you know what's</font>

22
00:00:59,239 --> 00:01:06,200
achievable and what's not so just a

23
00:01:03,019 --> 00:01:08,690
little<font color="#E5E5E5"> bit of overview</font><font color="#CCCCCC"> pink</font><font color="#E5E5E5"> cap develops</font>

24
00:01:06,200 --> 00:01:11,570
<font color="#E5E5E5">tiny be commercially the company and the</font>

25
00:01:08,690 --> 00:01:13,610
project was<font color="#CCCCCC"> started in 2015</font><font color="#E5E5E5"> our</font><font color="#CCCCCC"> three</font>

26
00:01:11,570 --> 00:01:15,529
founders come from working<font color="#CCCCCC"> as</font>

27
00:01:13,610 --> 00:01:18,170
infrastructure engineers at some of

28
00:01:15,530 --> 00:01:20,000
China's largest<font color="#E5E5E5"> websites tiny</font><font color="#CCCCCC"> beans</font>

29
00:01:18,170 --> 00:01:22,730
<font color="#E5E5E5">being open</font><font color="#CCCCCC"> source</font><font color="#E5E5E5"> since day one under</font>

30
00:01:20,000 --> 00:01:24,500
the Apache 2 license the storage

31
00:01:22,730 --> 00:01:26,780
component<font color="#E5E5E5"> and we'll get into what that</font>

32
00:01:24,500 --> 00:01:29,840
<font color="#E5E5E5">is in in a second as it's got a layered</font>

33
00:01:26,780 --> 00:01:32,230
<font color="#E5E5E5">architecture is</font><font color="#CCCCCC"> the CN CF project it</font><font color="#E5E5E5"> was</font>

34
00:01:29,840 --> 00:01:34,880
donated<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the CN CF in 2018 and</font><font color="#E5E5E5"> the</font>

35
00:01:32,230 --> 00:01:37,460
<font color="#CCCCCC">company expanded to North America in</font><font color="#E5E5E5"> the</font>

36
00:01:34,880 --> 00:01:38,750
middle<font color="#E5E5E5"> of 2018</font><font color="#CCCCCC"> which is why it might</font><font color="#E5E5E5"> be</font>

37
00:01:37,460 --> 00:01:41,479
<font color="#E5E5E5">fairly new to you and that's what I</font>

38
00:01:38,750 --> 00:01:43,370
joined the<font color="#E5E5E5"> team but it's absolutely</font>

39
00:01:41,480 --> 00:01:44,930
massive in China<font color="#E5E5E5"> so I just got back</font><font color="#CCCCCC"> from</font>

40
00:01:43,370 --> 00:01:46,940
Beijing where we had the annual

41
00:01:44,930 --> 00:01:49,909
developer conference we had just done<font color="#CCCCCC"> to</font>

42
00:01:46,940 --> 00:01:52,158
<font color="#E5E5E5">800 people attend</font><font color="#CCCCCC"> to other</font><font color="#E5E5E5"> quick stats</font>

43
00:01:49,909 --> 00:01:54,229
that<font color="#E5E5E5"> are kind of interesting</font><font color="#CCCCCC"> there's</font>

44
00:01:52,159 --> 00:01:58,659
over 300 production deployments of Tidy

45
00:01:54,229 --> 00:02:01,760
be<font color="#CCCCCC"> stirring</font><font color="#E5E5E5"> 15 petabytes of data and</font>

46
00:01:58,659 --> 00:02:04,159
there's over 200 contributors<font color="#CCCCCC"> I think to</font>

47
00:02:01,760 --> 00:02:06,710
serve<font color="#E5E5E5"> at 230 contributors to just the</font>

48
00:02:04,159 --> 00:02:09,310
<font color="#CCCCCC">tie DB server</font><font color="#E5E5E5"> part of the project which</font>

49
00:02:06,710 --> 00:02:12,890
to my knowledge<font color="#E5E5E5"> it makes it the most</font>

50
00:02:09,310 --> 00:02:15,740
<font color="#E5E5E5">contributed to on github</font><font color="#CCCCCC"> relational SQL</font>

51
00:02:12,890 --> 00:02:17,239
database which is awesome and the

52
00:02:15,740 --> 00:02:18,200
contribute account has been<font color="#E5E5E5"> growing</font>

53
00:02:17,240 --> 00:02:21,290
steadily since<font color="#CCCCCC"> 20</font>

54
00:02:18,200 --> 00:02:23,390
<font color="#CCCCCC">fifteen okay so let's get</font><font color="#E5E5E5"> into the</font>

55
00:02:21,290 --> 00:02:25,370
technical details<font color="#CCCCCC"> and</font><font color="#E5E5E5"> also let's start</font>

56
00:02:23,390 --> 00:02:26,690
with a<font color="#CCCCCC"> few disclaimers like quick points</font>

57
00:02:25,370 --> 00:02:30,560
to help you understand it

58
00:02:26,690 --> 00:02:32,720
<font color="#E5E5E5">thai TV speaks the</font><font color="#CCCCCC"> - girl protocol</font><font color="#E5E5E5"> but</font>

59
00:02:30,560 --> 00:02:35,900
it's not based on any<font color="#CCCCCC"> my skill source</font>

60
00:02:32,720 --> 00:02:39,140
code it's<font color="#E5E5E5"> a reimplementation so not a</font>

61
00:02:35,900 --> 00:02:41,720
<font color="#E5E5E5">storage engine not a fork not even</font>

62
00:02:39,140 --> 00:02:44,149
developed in the same language<font color="#E5E5E5"> sorry as</font>

63
00:02:41,720 --> 00:02:49,359
the<font color="#E5E5E5"> MySQL server the MySQL server is</font>

64
00:02:44,150 --> 00:02:49,360
written in C++ thai<font color="#CCCCCC"> TV is developed</font>

65
00:02:53,680 --> 00:03:02,750
sorry<font color="#E5E5E5"> a little</font><font color="#CCCCCC"> bit of adjusting</font><font color="#E5E5E5"> Thai</font><font color="#CCCCCC"> TB</font>

66
00:02:59,150 --> 00:03:06,230
is developed in go and the storage<font color="#E5E5E5"> part</font>

67
00:03:02,750 --> 00:03:08,299
is developed in rust<font color="#CCCCCC"> so it's not a</font><font color="#E5E5E5"> no</font>

68
00:03:06,230 --> 00:03:09,859
<font color="#E5E5E5">SQL database as well it's not sort of</font>

69
00:03:08,299 --> 00:03:13,099
like<font color="#E5E5E5"> loosey-goosey and the guarantees</font>

70
00:03:09,860 --> 00:03:15,290
<font color="#E5E5E5">that it provides as a system it kind of</font>

71
00:03:13,099 --> 00:03:18,500
fits into<font color="#E5E5E5"> the buzzword</font><font color="#CCCCCC"> that we call new</font>

72
00:03:15,290 --> 00:03:20,929
<font color="#E5E5E5">SQL databases just know that it's acid</font>

73
00:03:18,500 --> 00:03:23,389
and it's consistent<font color="#E5E5E5"> and uses this</font>

74
00:03:20,930 --> 00:03:25,850
layered architecture of components<font color="#CCCCCC"> so</font>

75
00:03:23,389 --> 00:03:27,590
the the tidy<font color="#CCCCCC"> be server is just the SQL</font>

76
00:03:25,850 --> 00:03:30,950
processing layer which<font color="#CCCCCC"> is completely</font>

77
00:03:27,590 --> 00:03:33,200
stateless and the storage<font color="#E5E5E5"> is what we</font>

78
00:03:30,950 --> 00:03:35,298
call<font color="#CCCCCC"> high kV and both of these are</font>

79
00:03:33,200 --> 00:03:37,280
horizontally scalable<font color="#E5E5E5"> and you can scale</font>

80
00:03:35,299 --> 00:03:39,319
them<font color="#E5E5E5"> independently which is really nice</font>

81
00:03:37,280 --> 00:03:42,139
<font color="#E5E5E5">to be able to scale your SQL processing</font>

82
00:03:39,319 --> 00:03:44,720
is stateless it's very able<font color="#E5E5E5"> easy to</font>

83
00:03:42,139 --> 00:03:46,430
scale in cloud environments<font color="#E5E5E5"> and so the</font>

84
00:03:44,720 --> 00:03:49,069
last<font color="#CCCCCC"> para fication is that you know</font>

85
00:03:46,430 --> 00:03:50,750
while it speaks<font color="#CCCCCC"> to</font><font color="#E5E5E5"> my scope protocol it</font>

86
00:03:49,069 --> 00:03:52,880
is aiming to optimize<font color="#CCCCCC"> for slightly</font>

87
00:03:50,750 --> 00:03:54,950
<font color="#CCCCCC">different workloads than MySQL does I</font>

88
00:03:52,880 --> 00:03:57,440
think Moscow has very good<font color="#CCCCCC"> support for</font>

89
00:03:54,950 --> 00:04:00,500
<font color="#CCCCCC">all OTP which is sort of</font><font color="#E5E5E5"> like the</font>

90
00:03:57,440 --> 00:04:02,690
simpler range of queries<font color="#CCCCCC"> and high in</font>

91
00:04:00,500 --> 00:04:04,940
high throughput<font color="#CCCCCC"> we're trying</font><font color="#E5E5E5"> to optimize</font>

92
00:04:02,690 --> 00:04:06,709
<font color="#E5E5E5">for the simpler queries and sort</font><font color="#CCCCCC"> of the</font>

93
00:04:04,940 --> 00:04:08,090
analytical queries at the same time in

94
00:04:06,709 --> 00:04:11,750
<font color="#E5E5E5">this emerging space that's called</font><font color="#CCCCCC"> hate</font>

95
00:04:08,090 --> 00:04:13,549
<font color="#CCCCCC">stab so with that disclaimer let's</font><font color="#E5E5E5"> look</font>

96
00:04:11,750 --> 00:04:16,639
at the architecture<font color="#E5E5E5"> it's sort of a</font>

97
00:04:13,549 --> 00:04:18,228
minimal<font color="#CCCCCC"> set up of Tidy beef so we have</font>

98
00:04:16,639 --> 00:04:20,750
the tidy<font color="#E5E5E5"> be server which we said is</font><font color="#CCCCCC"> the</font>

99
00:04:18,228 --> 00:04:25,219
<font color="#E5E5E5">SQL processing pot that's stateless</font><font color="#CCCCCC"> and</font>

100
00:04:20,750 --> 00:04:29,539
then we have<font color="#E5E5E5"> ty</font><font color="#CCCCCC"> kV which is doing the</font>

101
00:04:25,220 --> 00:04:30,140
the storage so I got a few things<font color="#E5E5E5"> to</font>

102
00:04:29,539 --> 00:04:32,030
<font color="#CCCCCC">point out</font>

103
00:04:30,140 --> 00:04:34,159
you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> ty DB will show you a</font>

104
00:04:32,030 --> 00:04:35,840
global view<font color="#CCCCCC"> of all of your daughter but</font>

105
00:04:34,160 --> 00:04:38,480
if you imagine<font color="#E5E5E5"> a</font><font color="#CCCCCC"> table</font><font color="#E5E5E5"> is sort of like a</font>

106
00:04:35,840 --> 00:04:40,580
<font color="#E5E5E5">tizzy in the alphabet A to C would be</font>

107
00:04:38,480 --> 00:04:42,800
<font color="#E5E5E5">stored in</font><font color="#CCCCCC"> one region that's our word for</font>

108
00:04:40,580 --> 00:04:44,570
<font color="#CCCCCC">shod no D</font><font color="#E5E5E5"> to F might be stored in</font>

109
00:04:42,800 --> 00:04:46,930
another<font color="#E5E5E5"> region</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can see the</font>

110
00:04:44,570 --> 00:04:49,460
copies<font color="#CCCCCC"> of the daughter sort of</font>

111
00:04:46,930 --> 00:04:51,170
replicated inside<font color="#CCCCCC"> of the Thai Cavey</font>

112
00:04:49,460 --> 00:04:54,409
system we use<font color="#CCCCCC"> raft internally to be able</font>

113
00:04:51,170 --> 00:04:56,240
<font color="#E5E5E5">to replicate so I'll use some</font><font color="#CCCCCC"> is Co</font>

114
00:04:54,410 --> 00:04:58,640
terminology<font color="#E5E5E5"> and I'll say that each one</font>

115
00:04:56,240 --> 00:05:01,280
<font color="#CCCCCC">of</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> Thai kV service</font><font color="#E5E5E5"> is both the</font>

116
00:04:58,640 --> 00:05:03,560
master<font color="#E5E5E5"> and a slave at the same time but</font>

117
00:05:01,280 --> 00:05:06,080
for<font color="#E5E5E5"> different regions of</font><font color="#CCCCCC"> the daughter</font><font color="#E5E5E5"> so</font>

118
00:05:03,560 --> 00:05:07,520
we do compare<font color="#CCCCCC"> no MySQL replication one</font>

119
00:05:06,080 --> 00:05:09,169
thing<font color="#E5E5E5"> that you'll notice is by this</font>

120
00:05:07,520 --> 00:05:11,390
<font color="#E5E5E5">design you know it's easy to add extra</font>

121
00:05:09,170 --> 00:05:13,280
<font color="#E5E5E5">notes because you can just</font><font color="#CCCCCC"> incrementally</font>

122
00:05:11,390 --> 00:05:17,060
shift<font color="#E5E5E5"> you know 100 megabyte chunk of</font>

123
00:05:13,280 --> 00:05:19,280
<font color="#CCCCCC">daughter to add new service and you get</font>

124
00:05:17,060 --> 00:05:21,710
better<font color="#CCCCCC"> utilization by being both the</font>

125
00:05:19,280 --> 00:05:23,780
master in<font color="#E5E5E5"> a slave</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> only component</font>

126
00:05:21,710 --> 00:05:26,450
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> haven't mentioned</font><font color="#E5E5E5"> yet here is</font>

127
00:05:23,780 --> 00:05:28,820
this<font color="#E5E5E5"> PD server here PD is like the</font>

128
00:05:26,450 --> 00:05:30,440
manager of the whole cluster<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it can</font>

129
00:05:28,820 --> 00:05:32,260
also do things<font color="#CCCCCC"> like</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> ever</font><font color="#E5E5E5"> notice is</font>

130
00:05:30,440 --> 00:05:35,330
<font color="#CCCCCC">that one of these</font><font color="#E5E5E5"> particular regions</font><font color="#CCCCCC"> is</font>

131
00:05:32,260 --> 00:05:38,870
particularly hot like<font color="#CCCCCC"> that say region</font>

132
00:05:35,330 --> 00:05:40,909
region<font color="#CCCCCC"> to leader is particularly</font><font color="#E5E5E5"> hot it</font>

133
00:05:38,870 --> 00:05:44,420
could<font color="#E5E5E5"> move it</font><font color="#CCCCCC"> to be the leader is now</font>

134
00:05:40,910 --> 00:05:46,070
the<font color="#CCCCCC"> tyke AV node number two it has</font>

135
00:05:44,420 --> 00:05:48,020
several things<font color="#E5E5E5"> that it can do to</font><font color="#CCCCCC"> sort</font><font color="#E5E5E5"> of</font>

136
00:05:46,070 --> 00:05:50,900
rebalance<font color="#CCCCCC"> you know it can do region</font>

137
00:05:48,020 --> 00:05:54,020
splits region<font color="#E5E5E5"> merges identify the hot</font>

138
00:05:50,900 --> 00:05:55,549
regions<font color="#E5E5E5"> it's a nice property to be able</font>

139
00:05:54,020 --> 00:05:57,770
<font color="#E5E5E5">to have this status</font><font color="#CCCCCC"> that up in these</font>

140
00:05:55,550 --> 00:06:00,620
chunks and<font color="#E5E5E5"> said both master and</font><font color="#CCCCCC"> slave at</font>

141
00:05:57,770 --> 00:06:03,289
the same time so it is<font color="#CCCCCC"> a strongly</font>

142
00:06:00,620 --> 00:06:05,150
consistent<font color="#E5E5E5"> system as I mentioned so if</font>

143
00:06:03,290 --> 00:06:06,530
you modify daughter<font color="#E5E5E5"> that existed on</font>

144
00:06:05,150 --> 00:06:08,750
<font color="#E5E5E5">multiple regions you know it'll use a</font>

145
00:06:06,530 --> 00:06:11,179
<font color="#CCCCCC">two</font><font color="#E5E5E5"> phase commit internally to</font><font color="#CCCCCC"> make sure</font>

146
00:06:08,750 --> 00:06:16,670
that updates that consistently as you

147
00:06:11,180 --> 00:06:17,660
cross those region boundaries<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so</font>

148
00:06:16,670 --> 00:06:19,850
that was the simplified architecture

149
00:06:17,660 --> 00:06:21,890
actually<font color="#CCCCCC"> I'll mention one more thing I</font>

150
00:06:19,850 --> 00:06:24,020
like to think of this as sort<font color="#E5E5E5"> of like a</font>

151
00:06:21,890 --> 00:06:26,510
layer of storage and then a layer of

152
00:06:24,020 --> 00:06:29,270
protocols on top where<font color="#CCCCCC"> we just happen to</font>

153
00:06:26,510 --> 00:06:30,920
<font color="#CCCCCC">be using</font><font color="#E5E5E5"> MySQL this is tidy be speaking</font>

154
00:06:29,270 --> 00:06:33,859
your application but<font color="#E5E5E5"> actually with an</font>

155
00:06:30,920 --> 00:06:35,360
architecture<font color="#CCCCCC"> like this one nice property</font>

156
00:06:33,860 --> 00:06:38,120
is that<font color="#E5E5E5"> you can add additional protocols</font>

157
00:06:35,360 --> 00:06:40,880
on top<font color="#E5E5E5"> so we have a driver coat</font><font color="#CCCCCC"> eisbock</font>

158
00:06:38,120 --> 00:06:42,710
<font color="#E5E5E5">which allows you</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have sort of a</font><font color="#CCCCCC"> Spock</font>

159
00:06:40,880 --> 00:06:44,120
view into your<font color="#E5E5E5"> daughter without having</font>

160
00:06:42,710 --> 00:06:46,609
to route through<font color="#CCCCCC"> tied Evie</font>

161
00:06:44,120 --> 00:06:49,910
and we've had community<font color="#E5E5E5"> contributors to</font>

162
00:06:46,610 --> 00:06:52,220
be able<font color="#E5E5E5"> to contribute a</font><font color="#CCCCCC"> Redis protocol</font>

163
00:06:49,910 --> 00:06:54,680
<font color="#E5E5E5">to be able to store data in</font><font color="#CCCCCC"> Thai kV and</font>

164
00:06:52,220 --> 00:06:58,070
<font color="#CCCCCC">we're building native drivers</font><font color="#E5E5E5"> so you can</font>

165
00:06:54,680 --> 00:06:59,780
connect to Thai kV directly as well<font color="#E5E5E5"> so</font>

166
00:06:58,070 --> 00:07:02,150
it's actually a<font color="#E5E5E5"> similar</font><font color="#CCCCCC"> architecture to</font>

167
00:06:59,780 --> 00:07:03,679
MySQL NDB cluster but the use cases<font color="#E5E5E5"> are</font>

168
00:07:02,150 --> 00:07:05,388
a little<font color="#E5E5E5"> bit different and this sort of</font>

169
00:07:03,680 --> 00:07:09,710
<font color="#E5E5E5">native driver will be analogous</font><font color="#CCCCCC"> to</font>

170
00:07:05,389 --> 00:07:11,510
something<font color="#E5E5E5"> like the NDB API</font><font color="#CCCCCC"> ok so having</font>

171
00:07:09,710 --> 00:07:13,099
<font color="#CCCCCC">mentioned that I did say that we're</font>

172
00:07:11,510 --> 00:07:15,020
trying to aim for<font color="#CCCCCC"> H tap is the queries</font>

173
00:07:13,100 --> 00:07:16,880
that<font color="#E5E5E5"> were optimizing for so this is sort</font>

174
00:07:15,020 --> 00:07:18,940
<font color="#E5E5E5">of the next</font><font color="#CCCCCC"> generation of architecture</font>

175
00:07:16,880 --> 00:07:23,270
for Thai<font color="#E5E5E5"> TV which is</font><font color="#CCCCCC"> to be able to have</font>

176
00:07:18,940 --> 00:07:24,620
<font color="#CCCCCC">ROS storage with Tyco AV which uses</font>

177
00:07:23,270 --> 00:07:27,409
<font color="#CCCCCC">rocks TV internally to store the data</font>

178
00:07:24,620 --> 00:07:30,350
<font color="#CCCCCC">and then have</font><font color="#E5E5E5"> Thai flash to have column</font>

179
00:07:27,410 --> 00:07:32,330
the storage so because we<font color="#CCCCCC"> have our own</font>

180
00:07:30,350 --> 00:07:34,220
<font color="#E5E5E5">Thai DB server that has an optimized</font>

181
00:07:32,330 --> 00:07:37,010
<font color="#CCCCCC">we'll be able</font><font color="#E5E5E5"> to figure out if the query</font>

182
00:07:34,220 --> 00:07:40,250
is best to route to the ROS storage or

183
00:07:37,010 --> 00:07:42,469
to the column storage in inside of Thai

184
00:07:40,250 --> 00:07:46,880
flash and you ever do this on a per

185
00:07:42,470 --> 00:07:48,560
query basis<font color="#E5E5E5"> so we we already can do some</font>

186
00:07:46,880 --> 00:07:50,750
analytics<font color="#CCCCCC"> you know even though this is</font>

187
00:07:48,560 --> 00:07:52,940
sort of the<font color="#E5E5E5"> next-gen architecture inside</font>

188
00:07:50,750 --> 00:07:55,669
of Tidy B that's not possible inside of

189
00:07:52,940 --> 00:07:58,880
time<font color="#E5E5E5"> inside of MySQL because it already</font>

190
00:07:55,669 --> 00:08:02,960
has<font color="#E5E5E5"> parallel query hash join hacks</font>

191
00:07:58,880 --> 00:08:04,250
aggregation<font color="#E5E5E5"> sort merge join so when we</font>

192
00:08:02,960 --> 00:08:05,750
get to benchmarks you<font color="#E5E5E5"> see that it is</font>

193
00:08:04,250 --> 00:08:07,880
actually<font color="#E5E5E5"> already</font><font color="#CCCCCC"> capable but this is</font>

194
00:08:05,750 --> 00:08:10,760
sort<font color="#CCCCCC"> of the next</font><font color="#E5E5E5"> generation</font><font color="#CCCCCC"> to help for</font>

195
00:08:07,880 --> 00:08:13,310
you know<font color="#E5E5E5"> most specific analytics queries</font>

196
00:08:10,760 --> 00:08:14,360
and also relieve the<font color="#E5E5E5"> the load from that</font>

197
00:08:13,310 --> 00:08:16,760
you kind of have a little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of quality</font>

198
00:08:14,360 --> 00:08:19,190
<font color="#E5E5E5">service issue if you're doing analytics</font>

199
00:08:16,760 --> 00:08:21,669
queries on<font color="#E5E5E5"> the same daughter that you're</font>

200
00:08:19,190 --> 00:08:27,889
doing<font color="#CCCCCC"> or LabCorp OCP queries</font>

201
00:08:21,669 --> 00:08:30,139
okay so<font color="#E5E5E5"> let's deep dive</font><font color="#CCCCCC"> onto tidy</font><font color="#E5E5E5"> B if</font>

202
00:08:27,889 --> 00:08:31,580
you're familiar with MySQL<font color="#E5E5E5"> I would say</font>

203
00:08:30,139 --> 00:08:35,180
that it's actually<font color="#E5E5E5"> fairly similar right</font>

204
00:08:31,580 --> 00:08:38,900
so<font color="#E5E5E5"> if a query comes in via the MySQL</font>

205
00:08:35,179 --> 00:08:41,059
<font color="#CCCCCC">Network protocol it has to be paused has</font>

206
00:08:38,900 --> 00:08:42,650
to be optimized to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to figure</font><font color="#CCCCCC"> out</font>

207
00:08:41,059 --> 00:08:44,959
<font color="#E5E5E5">you know what's the best way to be</font><font color="#CCCCCC"> able</font>

208
00:08:42,650 --> 00:08:46,699
<font color="#E5E5E5">to</font><font color="#CCCCCC"> retrieve the daughter and then it has</font>

209
00:08:44,959 --> 00:08:49,099
to retrieve the<font color="#E5E5E5"> data using that sort of</font>

210
00:08:46,700 --> 00:08:52,010
intended plan that the optimizer figured

211
00:08:49,100 --> 00:08:54,620
out<font color="#E5E5E5"> was best</font><font color="#CCCCCC"> just a couple of small</font>

212
00:08:52,010 --> 00:08:56,459
differences<font color="#E5E5E5"> the</font><font color="#CCCCCC"> mysql optimized it</font>

213
00:08:54,620 --> 00:08:59,940
doesn't have to figure<font color="#E5E5E5"> out the network</font>

214
00:08:56,459 --> 00:09:01,949
it sort of<font color="#E5E5E5"> just has to do CPU and memory</font>

215
00:08:59,940 --> 00:09:04,290
<font color="#E5E5E5">costs so tire gas is a little bit more</font>

216
00:09:01,949 --> 00:09:06,180
extra<font color="#E5E5E5"> work there and as I said</font><font color="#CCCCCC"> tidy B</font>

217
00:09:04,290 --> 00:09:08,099
has a few more capabilities in<font color="#CCCCCC"> terms of</font>

218
00:09:06,180 --> 00:09:10,050
what execution methods it<font color="#CCCCCC"> has with its</font>

219
00:09:08,100 --> 00:09:13,560
parallelism and attachments and<font color="#E5E5E5"> so on</font>

220
00:09:10,050 --> 00:09:18,000
and then it's retrieving the data from

221
00:09:13,560 --> 00:09:19,739
<font color="#CCCCCC">Ty KB and MySQL has the same</font><font color="#E5E5E5"> separation</font>

222
00:09:18,000 --> 00:09:21,350
where the storage engine<font color="#E5E5E5"> API this</font><font color="#CCCCCC"> is</font>

223
00:09:19,740 --> 00:09:24,600
just a little bit more separated<font color="#CCCCCC"> because</font>

224
00:09:21,350 --> 00:09:29,009
this is a completely different layer of

225
00:09:24,600 --> 00:09:33,060
<font color="#CCCCCC">Technology</font><font color="#E5E5E5"> all right so that's deep dive</font>

226
00:09:29,009 --> 00:09:35,130
<font color="#CCCCCC">onto</font><font color="#E5E5E5"> ty k v ty</font><font color="#CCCCCC"> KB is the storage and it</font>

227
00:09:33,060 --> 00:09:37,199
says here that it's<font color="#CCCCCC"> a rich receiving</font>

228
00:09:35,130 --> 00:09:39,930
requests from a client which in this

229
00:09:37,199 --> 00:09:42,660
case would be<font color="#E5E5E5"> the tidy B server that</font>

230
00:09:39,930 --> 00:09:45,229
communication internally is by G RPC<font color="#E5E5E5"> and</font>

231
00:09:42,660 --> 00:09:48,689
a simple<font color="#E5E5E5"> way of thinking of ty kV is</font>

232
00:09:45,230 --> 00:09:51,269
that<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> rocks</font><font color="#CCCCCC"> TV with a</font><font color="#E5E5E5"> rock layer on</font>

233
00:09:48,690 --> 00:09:52,610
top to make<font color="#CCCCCC"> sure that it's replicated it</font>

234
00:09:51,269 --> 00:09:55,290
is a little bit of a<font color="#E5E5E5"> simplification</font>

235
00:09:52,610 --> 00:09:57,389
because<font color="#E5E5E5"> for efficiency we do have some</font>

236
00:09:55,290 --> 00:09:59,849
extra<font color="#CCCCCC"> features</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> what I didn't</font><font color="#E5E5E5"> show</font>

237
00:09:57,389 --> 00:10:02,009
in my<font color="#E5E5E5"> previous slide is that we can push</font>

238
00:09:59,850 --> 00:10:05,639
down pots of<font color="#E5E5E5"> the query execution into</font>

239
00:10:02,009 --> 00:10:07,500
that ty<font color="#CCCCCC"> kv core processor so we</font><font color="#E5E5E5"> imagine</font>

240
00:10:05,639 --> 00:10:09,750
a<font color="#CCCCCC"> hypothetical query</font><font color="#E5E5E5"> that say that we're</font>

241
00:10:07,500 --> 00:10:12,480
doing select count<font color="#E5E5E5"> star from my table</font>

242
00:10:09,750 --> 00:10:14,819
<font color="#CCCCCC">you know a naive way</font><font color="#E5E5E5"> of doing that would</font>

243
00:10:12,480 --> 00:10:17,939
<font color="#CCCCCC">be that we retrieve all of those roads</font>

244
00:10:14,819 --> 00:10:20,610
from<font color="#CCCCCC"> ty kv</font><font color="#E5E5E5"> we pull them up into tidy</font><font color="#CCCCCC"> V</font>

245
00:10:17,939 --> 00:10:22,500
and then<font color="#E5E5E5"> we add</font><font color="#CCCCCC"> up the total</font><font color="#E5E5E5"> and an</font>

246
00:10:20,610 --> 00:10:25,500
optimized way of doing that would<font color="#E5E5E5"> be you</font>

247
00:10:22,500 --> 00:10:27,269
ask each one<font color="#CCCCCC"> of these ty kv instances to</font>

248
00:10:25,500 --> 00:10:30,060
give you what Callen has and then you

249
00:10:27,269 --> 00:10:33,029
stream aggregate that turtle<font color="#E5E5E5"> inside</font><font color="#CCCCCC"> at</font>

250
00:10:30,060 --> 00:10:36,660
<font color="#CCCCCC">ITB</font><font color="#E5E5E5"> and this is a lot closer to how it</font>

251
00:10:33,029 --> 00:10:39,149
works with this<font color="#E5E5E5"> coprocessor</font><font color="#CCCCCC"> API so it</font>

252
00:10:36,660 --> 00:10:41,069
<font color="#CCCCCC">understands</font><font color="#E5E5E5"> many of my skills built in</font>

253
00:10:39,149 --> 00:10:43,620
scalar functions and<font color="#CCCCCC"> that aggregate</font>

254
00:10:41,069 --> 00:10:45,540
functions allows us to effectively<font color="#E5E5E5"> you</font>

255
00:10:43,620 --> 00:10:48,420
know push down part<font color="#E5E5E5"> of the execution</font>

256
00:10:45,540 --> 00:10:52,469
<font color="#E5E5E5">from an SQL query into the storage</font>

257
00:10:48,420 --> 00:10:56,370
directly and it minimizes<font color="#CCCCCC"> Network</font>

258
00:10:52,470 --> 00:10:58,439
transfer which<font color="#CCCCCC"> is certainly useful just</font>

259
00:10:56,370 --> 00:11:01,490
<font color="#CCCCCC">some tools</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> terms of what what we</font>

260
00:10:58,439 --> 00:11:04,319
offer<font color="#E5E5E5"> you can replicate from MySQL</font>

261
00:11:01,490 --> 00:11:07,379
<font color="#E5E5E5">directly to tidy</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> you can also</font>

262
00:11:04,319 --> 00:11:10,649
replicate from<font color="#E5E5E5"> tidy be to either</font>

263
00:11:07,379 --> 00:11:12,389
the<font color="#CCCCCC"> tidy be server or to</font><font color="#E5E5E5"> my school so</font>

264
00:11:10,649 --> 00:11:14,759
our tool to do<font color="#E5E5E5"> this is our bin log tool</font>

265
00:11:12,389 --> 00:11:18,239
and I'll totally be able<font color="#E5E5E5"> to replicate is</font>

266
00:11:14,759 --> 00:11:20,669
something we<font color="#E5E5E5"> called</font><font color="#CCCCCC"> DM data migration we</font>

267
00:11:18,239 --> 00:11:23,369
also have an optimized<font color="#E5E5E5"> loader to be</font><font color="#CCCCCC"> able</font>

268
00:11:20,669 --> 00:11:25,919
<font color="#CCCCCC">to convert you know from a MySQL my</font>

269
00:11:23,369 --> 00:11:28,019
dumper file directly into<font color="#E5E5E5"> tidy</font><font color="#CCCCCC"> B and do</font>

270
00:11:25,919 --> 00:11:30,839
<font color="#E5E5E5">things like disable the redo log so</font>

271
00:11:28,019 --> 00:11:33,119
currently we<font color="#CCCCCC"> can restore about 100</font>

272
00:11:30,839 --> 00:11:34,679
gigabytes an hour<font color="#CCCCCC"> and we think they will</font>

273
00:11:33,119 --> 00:11:37,579
<font color="#E5E5E5">be able to increase</font><font color="#CCCCCC"> that number</font><font color="#E5E5E5"> over</font>

274
00:11:34,679 --> 00:11:45,769
time which which helps you migrations

275
00:11:37,579 --> 00:11:45,769
<font color="#E5E5E5">significantly</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so let's talk use cases</font>

276
00:11:47,089 --> 00:11:51,329
<font color="#CCCCCC">you know it's</font><font color="#E5E5E5"> sort of</font><font color="#CCCCCC"> like a</font><font color="#E5E5E5"> generic</font>

277
00:11:49,589 --> 00:11:53,970
product<font color="#E5E5E5"> it speaks to MySQL protocol it</font>

278
00:11:51,329 --> 00:11:56,189
looks like MySQL<font color="#CCCCCC"> I I know</font><font color="#E5E5E5"> you're</font>

279
00:11:53,970 --> 00:11:57,449
<font color="#E5E5E5">technical people you want to know what's</font>

280
00:11:56,189 --> 00:12:00,118
the<font color="#CCCCCC"> best case you know what are the</font>

281
00:11:57,449 --> 00:12:02,309
<font color="#CCCCCC">catches</font><font color="#E5E5E5"> so I would say that</font><font color="#CCCCCC"> today the</font>

282
00:12:00,119 --> 00:12:05,220
best to use cases for why we<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font>

283
00:12:02,309 --> 00:12:07,649
<font color="#E5E5E5">look at</font><font color="#CCCCCC"> tidy B is if you're approaching</font>

284
00:12:05,220 --> 00:12:09,509
<font color="#E5E5E5">the the maximum capacity</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a single my</font>

285
00:12:07,649 --> 00:12:11,999
skill server you're trying to think

286
00:12:09,509 --> 00:12:14,189
<font color="#E5E5E5">what's next should I shot or shouldn't I</font>

287
00:12:11,999 --> 00:12:16,259
shot and you know<font color="#E5E5E5"> depending</font><font color="#CCCCCC"> on the</font>

288
00:12:14,189 --> 00:12:19,289
vintage of your application<font color="#E5E5E5"> this may be</font>

289
00:12:16,259 --> 00:12:21,059
easy or<font color="#E5E5E5"> it may be difficult</font><font color="#CCCCCC"> or you might</font>

290
00:12:19,289 --> 00:12:23,369
<font color="#CCCCCC">choose as an organization</font><font color="#E5E5E5"> that you know</font>

291
00:12:21,059 --> 00:12:25,909
<font color="#E5E5E5">this adds extra complexity to your</font>

292
00:12:23,369 --> 00:12:29,009
application<font color="#E5E5E5"> and complexity can make</font>

293
00:12:25,909 --> 00:12:31,079
teams hard to scale right it's hard to

294
00:12:29,009 --> 00:12:32,249
scale<font color="#E5E5E5"> up on an organization basis as</font>

295
00:12:31,079 --> 00:12:34,108
you've sort of invested all this

296
00:12:32,249 --> 00:12:37,319
infrastructure into an app that's quite

297
00:12:34,109 --> 00:12:40,109
specific<font color="#CCCCCC"> to you the other use case that</font>

298
00:12:37,319 --> 00:12:43,319
<font color="#E5E5E5">is kind of interesting</font><font color="#CCCCCC"> is let's say</font><font color="#E5E5E5"> that</font>

299
00:12:40,109 --> 00:12:44,459
you've already shot at my school and so

300
00:12:43,319 --> 00:12:46,529
your application<font color="#CCCCCC"> you know you've</font>

301
00:12:44,459 --> 00:12:49,618
<font color="#E5E5E5">invested to be able to do that but you</font>

302
00:12:46,529 --> 00:12:53,159
<font color="#E5E5E5">have a hard time doing analytics on</font><font color="#CCCCCC"> your</font>

303
00:12:49,619 --> 00:12:54,689
daughter so the traditional way<font color="#E5E5E5"> that you</font>

304
00:12:53,159 --> 00:12:56,759
do this is you know you might use my

305
00:12:54,689 --> 00:12:59,519
<font color="#E5E5E5">scale for your OTP and then you'll use</font>

306
00:12:56,759 --> 00:13:02,129
ETL to maybe within<font color="#E5E5E5"> the hour or the half</font>

307
00:12:59,519 --> 00:13:04,139
<font color="#E5E5E5">hour extract this</font><font color="#CCCCCC"> information from MySQL</font>

308
00:13:02,129 --> 00:13:05,789
and<font color="#E5E5E5"> push it into some other system you</font>

309
00:13:04,139 --> 00:13:07,619
<font color="#E5E5E5">know if you have the data</font><font color="#CCCCCC"> to replicating</font>

310
00:13:05,789 --> 00:13:10,889
<font color="#E5E5E5">directly into tidy</font><font color="#CCCCCC"> B you can query</font><font color="#E5E5E5"> it</font>

311
00:13:07,619 --> 00:13:12,449
<font color="#E5E5E5">you know with less need time maybe</font>

312
00:13:10,889 --> 00:13:14,729
<font color="#E5E5E5">expand just a little bit on this this</font>

313
00:13:12,449 --> 00:13:16,949
first<font color="#E5E5E5"> point I think what's particularly</font>

314
00:13:14,729 --> 00:13:19,499
interesting about<font color="#E5E5E5"> when you approach the</font>

315
00:13:16,949 --> 00:13:20,430
maximum size<font color="#E5E5E5"> is if you are like a</font>

316
00:13:19,499 --> 00:13:22,500
platform<font color="#CCCCCC"> business</font>

317
00:13:20,430 --> 00:13:25,079
we have many ways that<font color="#E5E5E5"> you access the</font>

318
00:13:22,500 --> 00:13:27,960
daughter<font color="#E5E5E5"> so you know think of cases</font><font color="#CCCCCC"> like</font>

319
00:13:25,080 --> 00:13:31,589
you know if I was an online marketplace

320
00:13:27,960 --> 00:13:34,080
<font color="#CCCCCC">I have bias and I have Seles if I choose</font>

321
00:13:31,589 --> 00:13:36,839
<font color="#E5E5E5">to Ishod by the buyers then I can run</font>

322
00:13:34,080 --> 00:13:38,430
<font color="#E5E5E5">queries very effectively on the bias but</font>

323
00:13:36,839 --> 00:13:40,680
I might not be able<font color="#CCCCCC"> to run</font><font color="#E5E5E5"> queries on</font>

324
00:13:38,430 --> 00:13:42,449
the<font color="#CCCCCC"> sellers</font><font color="#E5E5E5"> you know this is a little</font>

325
00:13:40,680 --> 00:13:44,550
bit different by contrast<font color="#E5E5E5"> to say I was a</font>

326
00:13:42,450 --> 00:13:47,910
<font color="#E5E5E5">SAS application where maybe all of my</font>

327
00:13:44,550 --> 00:13:49,800
<font color="#E5E5E5">tenants a very justice parrot I guess</font>

328
00:13:47,910 --> 00:13:51,390
would<font color="#E5E5E5"> be the word to describe that so</font>

329
00:13:49,800 --> 00:13:54,329
particularly in the<font color="#E5E5E5"> case of the platform</font>

330
00:13:51,390 --> 00:13:56,130
scenarios I think it's very<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> not</font>

331
00:13:54,330 --> 00:13:57,209
not<font color="#CCCCCC"> to have to</font><font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out all of</font><font color="#E5E5E5"> the</font>

332
00:13:56,130 --> 00:13:59,160
nuances of how you would implement

333
00:13:57,209 --> 00:14:02,609
<font color="#CCCCCC">sharding</font><font color="#E5E5E5"> just to be able to have a</font>

334
00:13:59,160 --> 00:14:04,079
global<font color="#CCCCCC"> view of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> data so I want to</font>

335
00:14:02,610 --> 00:14:06,690
describe<font color="#E5E5E5"> a customer that sort</font><font color="#CCCCCC"> of fits</font>

336
00:14:04,080 --> 00:14:08,310
this use case<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't believe that they</font>

337
00:14:06,690 --> 00:14:10,230
<font color="#E5E5E5">they are in Brussels but they're</font>

338
00:14:08,310 --> 00:14:14,640
<font color="#CCCCCC">certainly very</font><font color="#E5E5E5"> large in Berlin which is</font>

339
00:14:10,230 --> 00:14:16,350
mobike so mobike has<font color="#E5E5E5"> nine million of</font>

340
00:14:14,640 --> 00:14:19,250
these smart<font color="#E5E5E5"> bicycles that you can unlock</font>

341
00:14:16,350 --> 00:14:21,270
<font color="#CCCCCC">with your phone sort of all around the</font>

342
00:14:19,250 --> 00:14:24,000
<font color="#CCCCCC">200 cities that they</font><font color="#E5E5E5"> around the world</font>

343
00:14:21,270 --> 00:14:27,089
and I<font color="#E5E5E5"> think of unlocking and locking</font><font color="#CCCCCC"> as</font>

344
00:14:24,000 --> 00:14:28,740
like a transaction<font color="#E5E5E5"> but they want to be</font>

345
00:14:27,089 --> 00:14:30,630
able<font color="#E5E5E5"> to run analytics and they want to</font>

346
00:14:28,740 --> 00:14:32,250
be able<font color="#E5E5E5"> to find bikes that might be</font>

347
00:14:30,630 --> 00:14:34,770
faulty and<font color="#E5E5E5"> they want to be able to do</font>

348
00:14:32,250 --> 00:14:36,630
<font color="#E5E5E5">that immediately after</font><font color="#CCCCCC"> I think that sort</font>

349
00:14:34,770 --> 00:14:39,360
<font color="#CCCCCC">of analytics to find</font><font color="#E5E5E5"> a faulty bike would</font>

350
00:14:36,630 --> 00:14:41,339
be<font color="#E5E5E5"> like a query</font><font color="#CCCCCC"> that's kind of on the</font>

351
00:14:39,360 --> 00:14:42,810
dimension of the bike but<font color="#E5E5E5"> maybe if they</font>

352
00:14:41,339 --> 00:14:44,880
want to<font color="#E5E5E5"> find Ford that's on the</font>

353
00:14:42,810 --> 00:14:46,589
dimension<font color="#E5E5E5"> of the user so being able to</font>

354
00:14:44,880 --> 00:14:48,900
<font color="#E5E5E5">have a more global</font><font color="#CCCCCC"> view of</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font>

355
00:14:46,589 --> 00:14:50,550
daughter is more<font color="#E5E5E5"> useful</font><font color="#CCCCCC"> I think you</font>

356
00:14:48,900 --> 00:14:51,900
can't necessarily shot by city<font color="#E5E5E5"> either</font>

357
00:14:50,550 --> 00:14:53,939
because they might want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> allow</font><font color="#CCCCCC"> users</font>

358
00:14:51,900 --> 00:14:55,890
to kind of move<font color="#CCCCCC"> around cities so being</font>

359
00:14:53,940 --> 00:14:57,900
able to<font color="#E5E5E5"> have a global view of the</font><font color="#CCCCCC"> data</font>

360
00:14:55,890 --> 00:15:00,060
and being<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to transact and then do</font>

361
00:14:57,900 --> 00:15:03,480
analytics is a really powerful use case

362
00:15:00,060 --> 00:15:04,859
and obviously to the point of how much

363
00:15:03,480 --> 00:15:07,440
data they're storing<font color="#E5E5E5"> as well this</font>

364
00:15:04,860 --> 00:15:09,240
<font color="#E5E5E5">exceeds that that the single size of a</font>

365
00:15:07,440 --> 00:15:11,040
MySQL<font color="#CCCCCC"> server</font><font color="#E5E5E5"> so being able to have this</font>

366
00:15:09,240 --> 00:15:15,709
this global system<font color="#CCCCCC"> that can grow is very</font>

367
00:15:11,040 --> 00:15:15,709
useful<font color="#E5E5E5"> okay</font>

368
00:15:15,810 --> 00:15:19,469
so yeah I know benchmarks is a topic

369
00:15:17,910 --> 00:15:21,899
<font color="#CCCCCC">that interests you I want to</font><font color="#E5E5E5"> show you</font>

370
00:15:19,470 --> 00:15:23,700
some in dimension independent<font color="#E5E5E5"> benchmarks</font>

371
00:15:21,899 --> 00:15:25,620
<font color="#CCCCCC">that were run by Alex Rubin at Percona</font>

372
00:15:23,700 --> 00:15:27,810
and I think they're<font color="#CCCCCC"> really interesting</font>

373
00:15:25,620 --> 00:15:28,589
but I want to describe the methodology a

374
00:15:27,810 --> 00:15:30,779
little bit first

375
00:15:28,589 --> 00:15:33,810
<font color="#E5E5E5">because it's not actually</font><font color="#CCCCCC"> a recommended</font>

376
00:15:30,779 --> 00:15:37,290
set up for<font color="#CCCCCC"> Taibbi so in this case</font>

377
00:15:33,810 --> 00:15:41,160
<font color="#E5E5E5">alex has set up a single MySQL server</font>

378
00:15:37,290 --> 00:15:42,930
and a single<font color="#E5E5E5"> ty DB server so tidy B is a</font>

379
00:15:41,160 --> 00:15:44,130
distributed database<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> not</font>

380
00:15:42,930 --> 00:15:46,439
something<font color="#CCCCCC"> that we're intending or</font>

381
00:15:44,130 --> 00:15:48,930
optimizing<font color="#E5E5E5"> for but</font><font color="#CCCCCC"> nonetheless I I do</font>

382
00:15:46,440 --> 00:15:51,569
think it's interesting<font color="#CCCCCC"> so the data set</font>

383
00:15:48,930 --> 00:15:53,939
size is<font color="#E5E5E5"> about 70 gigabytes it's a real</font>

384
00:15:51,569 --> 00:15:57,630
<font color="#E5E5E5">life data set his imported us flight</font>

385
00:15:53,940 --> 00:15:59,940
<font color="#E5E5E5">online</font><font color="#CCCCCC"> on time statistics and to start</font>

386
00:15:57,630 --> 00:16:02,970
<font color="#E5E5E5">with</font><font color="#CCCCCC"> he's</font><font color="#E5E5E5"> showing the response time</font><font color="#CCCCCC"> for</font>

387
00:15:59,940 --> 00:16:05,459
<font color="#E5E5E5">running</font><font color="#CCCCCC"> some analytics queries so this</font>

388
00:16:02,970 --> 00:16:08,160
is response time so<font color="#CCCCCC"> a</font><font color="#E5E5E5"> lower</font><font color="#CCCCCC"> number is</font>

389
00:16:05,459 --> 00:16:11,040
better and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see</font><font color="#E5E5E5"> that tidy be you</font>

390
00:16:08,160 --> 00:16:13,740
know sort<font color="#CCCCCC"> of true to my claim</font><font color="#E5E5E5"> I is good</font>

391
00:16:11,040 --> 00:16:16,680
at these sort of analytic style queries

392
00:16:13,740 --> 00:16:18,120
<font color="#E5E5E5">it sort of routinely beats</font><font color="#CCCCCC"> MySQL except</font>

393
00:16:16,680 --> 00:16:23,089
in kind<font color="#E5E5E5"> of the cases where</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> a</font>

394
00:16:18,120 --> 00:16:28,170
very low CPU count so surface<font color="#E5E5E5"> are good</font>

395
00:16:23,089 --> 00:16:30,480
the<font color="#E5E5E5"> next benchmark is testing just a</font>

396
00:16:28,170 --> 00:16:32,610
single row select a point look up with

397
00:16:30,480 --> 00:16:34,949
suspense<font color="#E5E5E5"> and so this is a throughput</font>

398
00:16:32,610 --> 00:16:37,110
test not<font color="#E5E5E5"> a response test so higher</font>

399
00:16:34,949 --> 00:16:39,870
numbers are better so we<font color="#CCCCCC"> can see why</font>

400
00:16:37,110 --> 00:16:45,870
<font color="#CCCCCC">scale is red and it's routinely beating</font>

401
00:16:39,870 --> 00:16:47,819
<font color="#CCCCCC">ty DB by 5 to 10 X I would</font><font color="#E5E5E5"> like tidy B</font>

402
00:16:45,870 --> 00:16:50,009
to<font color="#CCCCCC"> do better but</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> think that this is</font>

403
00:16:47,819 --> 00:16:54,060
expected behavior you know when you've

404
00:16:50,009 --> 00:16:56,130
got<font color="#CCCCCC"> this</font><font color="#E5E5E5"> layer 2 architecture it's a lot</font>

405
00:16:54,060 --> 00:16:59,160
<font color="#E5E5E5">harder to sort of compete with my school</font>

406
00:16:56,130 --> 00:17:01,949
and<font color="#CCCCCC"> it's home</font><font color="#E5E5E5"> turf of OLTP queries where</font>

407
00:16:59,160 --> 00:17:04,230
the data set is entirely in memory so I

408
00:17:01,949 --> 00:17:05,339
think the benchmark is useful it's very

409
00:17:04,230 --> 00:17:07,230
useful<font color="#E5E5E5"> because you know if you are</font>

410
00:17:05,339 --> 00:17:09,720
<font color="#E5E5E5">considering sort of the first case</font><font color="#CCCCCC"> I'm</font>

411
00:17:07,230 --> 00:17:11,669
<font color="#E5E5E5">moving entirely to</font><font color="#CCCCCC"> hid B it's a micro</font>

412
00:17:09,720 --> 00:17:13,470
bench<font color="#E5E5E5"> that I'll show you you know the</font>

413
00:17:11,669 --> 00:17:15,240
<font color="#CCCCCC">worst situation that you may encounter</font>

414
00:17:13,470 --> 00:17:17,280
<font color="#E5E5E5">and so you can use it from that</font>

415
00:17:15,240 --> 00:17:20,939
perspective<font color="#E5E5E5"> but if you're a sort of</font>

416
00:17:17,280 --> 00:17:22,500
purely<font color="#E5E5E5"> single primary key lookup which I</font>

417
00:17:20,939 --> 00:17:25,289
don't think is necessarily indicative of

418
00:17:22,500 --> 00:17:29,850
<font color="#E5E5E5">all applications you</font><font color="#CCCCCC"> should expect this</font>

419
00:17:25,289 --> 00:17:33,120
to<font color="#CCCCCC"> be slower in tidy B and the next</font>

420
00:17:29,850 --> 00:17:34,709
benchmark<font color="#E5E5E5"> it has some commonality to the</font>

421
00:17:33,120 --> 00:17:37,080
previous query the previous guru is

422
00:17:34,710 --> 00:17:40,919
point lookup<font color="#E5E5E5"> this is like a point right</font>

423
00:17:37,080 --> 00:17:43,350
query to write an individual row<font color="#CCCCCC"> I think</font>

424
00:17:40,919 --> 00:17:46,290
<font color="#CCCCCC">Alex did a good job of providing</font><font color="#E5E5E5"> a</font>

425
00:17:43,350 --> 00:17:49,379
disclaimer<font color="#CCCCCC"> for why</font><font color="#E5E5E5"> energy</font><font color="#CCCCCC"> D was</font><font color="#E5E5E5"> behaved</font>

426
00:17:46,290 --> 00:17:50,760
Oh performing so much better here<font color="#CCCCCC"> when</font>

427
00:17:49,380 --> 00:17:52,890
the dot is in<font color="#E5E5E5"> memory</font>

428
00:17:50,760 --> 00:17:55,950
<font color="#CCCCCC">Rox TV is not necessarily expected to</font>

429
00:17:52,890 --> 00:17:58,620
<font color="#E5E5E5">beat</font><font color="#CCCCCC"> inner</font><font color="#E5E5E5"> DB and will</font><font color="#CCCCCC"> tidy B being</font>

430
00:17:55,950 --> 00:18:00,480
distributed<font color="#E5E5E5"> or in this case it's ty</font><font color="#CCCCCC"> K V</font>

431
00:17:58,620 --> 00:18:02,459
<font color="#E5E5E5">it doesn't have the concept of like</font>

432
00:18:00,480 --> 00:18:05,130
disabling<font color="#E5E5E5"> the binary look so it's not</font>

433
00:18:02,460 --> 00:18:08,130
quite<font color="#E5E5E5"> an apples to apples</font><font color="#CCCCCC"> comparison but</font>

434
00:18:05,130 --> 00:18:10,350
<font color="#E5E5E5">I'll sort</font><font color="#CCCCCC"> of limit my disclaimer to that</font>

435
00:18:08,130 --> 00:18:12,240
and say I don't<font color="#E5E5E5"> expect</font><font color="#CCCCCC"> that we should be</font>

436
00:18:10,350 --> 00:18:14,580
performing as bad as this this<font color="#E5E5E5"> was</font>

437
00:18:12,240 --> 00:18:16,440
really great<font color="#CCCCCC"> fight feedback sir</font><font color="#E5E5E5"> thank</font>

438
00:18:14,580 --> 00:18:17,668
you<font color="#CCCCCC"> to Alex and pakora I think this is</font>

439
00:18:16,440 --> 00:18:23,280
something<font color="#CCCCCC"> that we'll be working on in</font>

440
00:18:17,669 --> 00:18:25,140
the next<font color="#E5E5E5"> year and with that I think I'll</font>

441
00:18:23,280 --> 00:18:27,168
get<font color="#CCCCCC"> to compatibility</font><font color="#E5E5E5"> and then I'll see</font>

442
00:18:25,140 --> 00:18:31,080
if<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have time</font><font color="#CCCCCC"> two questions</font>

443
00:18:27,169 --> 00:18:32,970
okay so compatibility<font color="#CCCCCC"> I we like to be</font>

444
00:18:31,080 --> 00:18:34,949
transparent<font color="#CCCCCC"> you know I</font><font color="#E5E5E5"> don't think it</font>

445
00:18:32,970 --> 00:18:38,700
benefits<font color="#E5E5E5"> anybody if we say</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> it just</font>

446
00:18:34,950 --> 00:18:40,919
drops in perfectly<font color="#CCCCCC"> and then you know you</font>

447
00:18:38,700 --> 00:18:43,590
try<font color="#E5E5E5"> and use it and you find some sort of</font>

448
00:18:40,919 --> 00:18:48,950
issues so here's the<font color="#CCCCCC"> manual page I'll</font>

449
00:18:43,590 --> 00:18:48,949
just show a quick video if I can oh

450
00:18:49,340 --> 00:18:55,409
sorry

451
00:18:50,460 --> 00:18:56,910
I'll see<font color="#E5E5E5"> if this works just</font><font color="#CCCCCC"> to scroll</font>

452
00:18:55,410 --> 00:19:00,230
<font color="#CCCCCC">through and show</font><font color="#E5E5E5"> you an example of some</font>

453
00:18:56,910 --> 00:19:00,230
<font color="#CCCCCC">of</font><font color="#E5E5E5"> the sorts of</font><font color="#CCCCCC"> things that are missing</font>

454
00:19:04,640 --> 00:19:09,270
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I apologize</font><font color="#E5E5E5"> for that I do have a</font>

455
00:19:07,770 --> 00:19:12,270
summary in my slides as well

456
00:19:09,270 --> 00:19:15,660
for some<font color="#E5E5E5"> reason it's not learning so the</font>

457
00:19:12,270 --> 00:19:18,480
basic summary is that<font color="#E5E5E5"> join sub-queries</font>

458
00:19:15,660 --> 00:19:20,190
<font color="#E5E5E5">female</font><font color="#CCCCCC"> DDL</font><font color="#E5E5E5"> all of the basic stuff works</font>

459
00:19:18,480 --> 00:19:23,340
you know you can query<font color="#E5E5E5"> daughters it's</font>

460
00:19:20,190 --> 00:19:25,890
located<font color="#E5E5E5"> in</font><font color="#CCCCCC"> multiple shots</font><font color="#E5E5E5"> or as we call</font>

461
00:19:23,340 --> 00:19:27,209
them regions<font color="#E5E5E5"> and we support all SQL</font>

462
00:19:25,890 --> 00:19:29,040
modes that are available<font color="#E5E5E5"> in my school</font>

463
00:19:27,210 --> 00:19:30,780
<font color="#CCCCCC">this I think is an interesting fleet in</font>

464
00:19:29,040 --> 00:19:34,920
<font color="#E5E5E5">itself because it's incredibly difficult</font>

465
00:19:30,780 --> 00:19:37,440
<font color="#E5E5E5">to do that</font><font color="#CCCCCC"> we don't implement things</font>

466
00:19:34,920 --> 00:19:39,090
<font color="#CCCCCC">like store procedures triggers events we</font>

467
00:19:37,440 --> 00:19:41,160
don't have current plans<font color="#E5E5E5"> - this is</font>

468
00:19:39,090 --> 00:19:43,500
<font color="#E5E5E5">actually quite</font><font color="#CCCCCC"> a lot of method but we</font><font color="#E5E5E5"> do</font>

469
00:19:41,160 --> 00:19:45,030
plan<font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement things like</font><font color="#E5E5E5"> CTAs views</font>

470
00:19:43,500 --> 00:19:46,380
and window functions you know this is

471
00:19:45,030 --> 00:19:48,450
<font color="#CCCCCC">very important to our</font><font color="#E5E5E5"> analytics story</font>

472
00:19:46,380 --> 00:19:50,850
even<font color="#E5E5E5"> though our current compatibility is</font>

473
00:19:48,450 --> 00:19:53,220
<font color="#E5E5E5">MySQL</font><font color="#CCCCCC"> five seven you know we do plan to</font>

474
00:19:50,850 --> 00:20:01,399
rebase<font color="#E5E5E5"> to my</font><font color="#CCCCCC"> escalate you know upcoming</font>

475
00:19:53,220 --> 00:20:01,400
3.0 release some nuances<font color="#E5E5E5"> to this story</font>

476
00:20:02,720 --> 00:20:07,320
<font color="#CCCCCC">some features do work a little bit</font>

477
00:20:04,920 --> 00:20:09,720
differently<font color="#CCCCCC"> two of the ones</font><font color="#E5E5E5"> that I</font><font color="#CCCCCC"> think</font>

478
00:20:07,320 --> 00:20:12,780
will<font color="#CCCCCC"> probably be the hardest that order</font>

479
00:20:09,720 --> 00:20:14,610
increment allocates in batches<font color="#E5E5E5"> and</font>

480
00:20:12,780 --> 00:20:17,070
<font color="#E5E5E5">optimistic locking means that a commit</font>

481
00:20:14,610 --> 00:20:18,840
could actually return<font color="#CCCCCC"> an error tidy B</font>

482
00:20:17,070 --> 00:20:21,980
also<font color="#CCCCCC"> has some recommendations around</font><font color="#E5E5E5"> how</font>

483
00:20:18,840 --> 00:20:25,260
<font color="#CCCCCC">many rows you</font><font color="#E5E5E5"> update in a single commit</font>

484
00:20:21,980 --> 00:20:27,630
and my last<font color="#E5E5E5"> point is just that most of</font>

485
00:20:25,260 --> 00:20:29,670
the tools that<font color="#E5E5E5"> you used to do work but</font>

486
00:20:27,630 --> 00:20:31,590
<font color="#E5E5E5">be</font><font color="#CCCCCC"> reasonable in your expectations you</font>

487
00:20:29,670 --> 00:20:34,350
know<font color="#E5E5E5"> talk won't work</font><font color="#CCCCCC"> as this is</font>

488
00:20:31,590 --> 00:20:36,120
obviously very<font color="#E5E5E5"> specific to</font><font color="#CCCCCC"> inner DB and</font>

489
00:20:34,350 --> 00:20:42,178
that's it thank<font color="#E5E5E5"> you</font>

490
00:20:36,120 --> 00:20:48,189
[Applause]

491
00:20:42,179 --> 00:20:50,440
Weston<font color="#CCCCCC"> isolation level</font><font color="#E5E5E5"> we reported as</font>

492
00:20:48,190 --> 00:20:53,429
<font color="#E5E5E5">the same as my skull which is</font><font color="#CCCCCC"> our</font>

493
00:20:50,440 --> 00:21:00,519
<font color="#E5E5E5">repeatable read but it's si internally</font>

494
00:20:53,429 --> 00:21:02,169
yeah we also support read<font color="#E5E5E5"> committed but</font>

495
00:21:00,519 --> 00:21:08,019
we recommend<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you use</font><font color="#E5E5E5"> repeatable</font>

496
00:21:02,169 --> 00:21:10,389
read which is si it's not the same

497
00:21:08,019 --> 00:21:19,389
repeatable read<font color="#CCCCCC"> as in ODB</font><font color="#E5E5E5"> it's all the</font>

498
00:21:10,389 --> 00:21:20,949
same yeah okay okay<font color="#CCCCCC"> just</font><font color="#E5E5E5"> okay sure</font><font color="#CCCCCC"> that</font>

499
00:21:19,389 --> 00:21:23,879
question was what's the isolation level

500
00:21:20,950 --> 00:21:23,879
<font color="#CCCCCC">any other questions</font>

501
00:21:27,680 --> 00:21:30,799
[Music]

502
00:21:35,510 --> 00:21:38,620
<font color="#E5E5E5">okay thank you</font>

503
00:21:46,030 --> 00:21:51,940
[Applause]

