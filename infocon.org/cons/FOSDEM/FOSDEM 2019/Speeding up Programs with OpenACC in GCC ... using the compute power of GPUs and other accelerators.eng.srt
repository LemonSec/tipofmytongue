1
00:00:06,740 --> 00:00:17,509
[Music]

2
00:00:14,259 --> 00:00:21,500
<font color="#CCCCCC">okay thanks for</font><font color="#E5E5E5"> joining me here in this</font>

3
00:00:17,509 --> 00:00:23,660
presentation<font color="#CCCCCC"> I guess the first compiler</font>

4
00:00:21,500 --> 00:00:27,230
<font color="#E5E5E5">torque today in here and the last</font>

5
00:00:23,660 --> 00:00:29,540
probably anyway<font color="#E5E5E5"> and I hope not everybody</font>

6
00:00:27,230 --> 00:00:30,140
is asleep yet and<font color="#E5E5E5"> then the second day of</font>

7
00:00:29,540 --> 00:00:34,070
<font color="#CCCCCC">FOSDEM</font>

8
00:00:30,140 --> 00:00:36,530
afternoon<font color="#E5E5E5"> so but I have</font><font color="#CCCCCC"> a lot of stuff</font>

9
00:00:34,070 --> 00:00:40,580
to present here<font color="#CCCCCC"> so that should keep you</font>

10
00:00:36,530 --> 00:00:42,590
awake I hope so<font color="#E5E5E5"> that this project</font><font color="#CCCCCC"> of</font>

11
00:00:40,580 --> 00:00:44,269
adding out may<font color="#E5E5E5"> CC support to GCC is</font>

12
00:00:42,590 --> 00:00:47,720
something that I've been<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> for</font>

13
00:00:44,270 --> 00:00:51,770
a little<font color="#E5E5E5"> bit more than five years</font><font color="#CCCCCC"> now in</font>

14
00:00:47,720 --> 00:00:57,650
<font color="#CCCCCC">in our group at</font><font color="#E5E5E5"> the company</font><font color="#CCCCCC"> handful of</font>

15
00:00:51,770 --> 00:01:00,850
people<font color="#E5E5E5"> so a short introduction agenda</font>

16
00:00:57,650 --> 00:01:02,810
which is basically what<font color="#E5E5E5"> will</font><font color="#CCCCCC"> fret on the</font>

17
00:01:00,850 --> 00:01:06,320
top list

18
00:01:02,810 --> 00:01:10,760
so GCC doesn't need much introduction I

19
00:01:06,320 --> 00:01:13,429
guess<font color="#CCCCCC"> open ACC I will introduce briefly</font>

20
00:01:10,760 --> 00:01:15,680
<font color="#CCCCCC">of course in this</font><font color="#E5E5E5"> twenty five minutes</font>

21
00:01:13,430 --> 00:01:17,960
<font color="#E5E5E5">everything I can just introduce briefly</font>

22
00:01:15,680 --> 00:01:20,740
<font color="#E5E5E5">so that</font><font color="#CCCCCC"> would be a lot more to talk</font>

23
00:01:17,960 --> 00:01:23,780
<font color="#CCCCCC">about</font><font color="#E5E5E5"> maybe in some later frustum</font>

24
00:01:20,740 --> 00:01:26,479
instances who knows<font color="#CCCCCC"> okay and then I</font><font color="#E5E5E5"> will</font>

25
00:01:23,780 --> 00:01:28,909
<font color="#E5E5E5">show briefly the implementation status</font>

26
00:01:26,479 --> 00:01:31,880
<font color="#E5E5E5">some examples some performance results</font>

27
00:01:28,909 --> 00:01:33,290
and a live demo at the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> and of</font><font color="#CCCCCC"> course</font>

28
00:01:31,880 --> 00:01:36,350
live demos you always hope that

29
00:01:33,290 --> 00:01:39,130
<font color="#E5E5E5">everything will work out but yeah okay</font>

30
00:01:36,350 --> 00:01:44,869
so cheesy<font color="#CCCCCC"> seed a new compiler collection</font>

31
00:01:39,130 --> 00:01:48,439
<font color="#CCCCCC">just put the link there louder</font><font color="#E5E5E5"> okay I</font>

32
00:01:44,869 --> 00:01:51,200
will try<font color="#CCCCCC"> to speak up louder so that's a</font>

33
00:01:48,439 --> 00:01:53,449
quote from<font color="#E5E5E5"> Wikipedia</font><font color="#CCCCCC"> a new compiler</font>

34
00:01:51,200 --> 00:01:55,340
collection<font color="#E5E5E5"> compiler system produced by</font>

35
00:01:53,450 --> 00:01:58,070
the GNU<font color="#CCCCCC"> project supporting various</font>

36
00:01:55,340 --> 00:02:01,400
programming languages<font color="#E5E5E5"> key component of</font>

37
00:01:58,070 --> 00:02:04,008
the<font color="#E5E5E5"> new tool chain and standard compiler</font>

38
00:02:01,400 --> 00:02:05,960
for most unix-like operating system of

39
00:02:04,009 --> 00:02:07,970
course there's no also<font color="#E5E5E5"> allow the</font><font color="#CCCCCC"> EM</font><font color="#E5E5E5"> and</font>

40
00:02:05,960 --> 00:02:13,159
research from<font color="#E5E5E5"> virus and some proprietary</font>

41
00:02:07,970 --> 00:02:15,230
compilers but GCC<font color="#CCCCCC"> Lee still plays a very</font>

42
00:02:13,159 --> 00:02:17,649
big role in

43
00:02:15,230 --> 00:02:20,030
what's being<font color="#CCCCCC"> used even</font><font color="#E5E5E5"> for</font>

44
00:02:17,650 --> 00:02:22,099
<font color="#CCCCCC">high-performance computing which you</font>

45
00:02:20,030 --> 00:02:24,110
might assume<font color="#CCCCCC"> that maybe some</font><font color="#E5E5E5"> of the</font>

46
00:02:22,099 --> 00:02:26,929
proprietary<font color="#E5E5E5"> vendor compilers play a</font>

47
00:02:24,110 --> 00:02:31,520
bigger role<font color="#E5E5E5"> so I'm not reading through</font>

48
00:02:26,930 --> 00:02:33,709
all<font color="#CCCCCC"> of this this is</font><font color="#E5E5E5"> just a motivation up</font>

49
00:02:31,520 --> 00:02:36,350
there you<font color="#E5E5E5"> see a survey that has</font><font color="#CCCCCC"> been</font>

50
00:02:33,709 --> 00:02:39,620
done a<font color="#E5E5E5"> few</font><font color="#CCCCCC"> years ago in for from some</font>

51
00:02:36,350 --> 00:02:41,930
high<font color="#CCCCCC"> performance compute center</font><font color="#E5E5E5"> about</font>

52
00:02:39,620 --> 00:02:44,239
the usage of compilers on that<font color="#E5E5E5"> system</font>

53
00:02:41,930 --> 00:02:49,100
what what users are actually<font color="#E5E5E5"> using</font><font color="#CCCCCC"> there</font>

54
00:02:44,239 --> 00:02:50,090
and the new compilers<font color="#E5E5E5"> G + +</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> C++ GCC</font>

55
00:02:49,100 --> 00:02:53,660
and gfortran

56
00:02:50,090 --> 00:02:56,180
make about more than<font color="#E5E5E5"> 70% of all the</font>

57
00:02:53,660 --> 00:02:59,150
compiler<font color="#E5E5E5"> invocations there of course</font>

58
00:02:56,180 --> 00:03:01,130
that's<font color="#E5E5E5"> just</font><font color="#CCCCCC"> what one data point and</font>

59
00:02:59,150 --> 00:03:03,530
<font color="#E5E5E5">other data</font><font color="#CCCCCC"> centers there will be other</font>

60
00:03:01,130 --> 00:03:06,620
results for when other systems are used

61
00:03:03,530 --> 00:03:08,750
and so on but it's that's just for

62
00:03:06,620 --> 00:03:12,890
motivation why we are still talking

63
00:03:08,750 --> 00:03:18,830
about GCC<font color="#E5E5E5"> that old dinosaur which is</font>

64
00:03:12,890 --> 00:03:19,958
judgment<font color="#CCCCCC"> just not going</font><font color="#E5E5E5"> away so then</font>

65
00:03:18,830 --> 00:03:23,690
[Music]

66
00:03:19,959 --> 00:03:27,650
we're adding<font color="#CCCCCC"> open a</font><font color="#E5E5E5"> CC support open</font><font color="#CCCCCC"> ACC</font>

67
00:03:23,690 --> 00:03:31,390
is to use the compute<font color="#CCCCCC"> power that you</font>

68
00:03:27,650 --> 00:03:34,540
have in accelerator devices such as GPUs

69
00:03:31,390 --> 00:03:38,358
so I should briefly cover the<font color="#E5E5E5"> GPU</font>

70
00:03:34,540 --> 00:03:42,680
architecture that's a block diagram<font color="#CCCCCC"> of a</font>

71
00:03:38,359 --> 00:03:49,910
years old<font color="#CCCCCC"> 5 or 6 years I</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> NVIDIA</font>

72
00:03:42,680 --> 00:03:52,010
GPU<font color="#E5E5E5"> Kepler K 20 of course it's old but</font>

73
00:03:49,910 --> 00:03:56,239
<font color="#E5E5E5">the general concepts are still</font><font color="#CCCCCC"> the same</font>

74
00:03:52,010 --> 00:03:58,700
<font color="#E5E5E5">now and</font><font color="#CCCCCC"> also for other GPU vendors</font><font color="#E5E5E5"> so as</font>

75
00:03:56,239 --> 00:04:00,530
such as AMD for example<font color="#E5E5E5"> I'm talking a</font>

76
00:03:58,700 --> 00:04:02,690
<font color="#CCCCCC">lot about NVIDIA GPUs here because</font>

77
00:04:00,530 --> 00:04:04,760
<font color="#E5E5E5">that's what we initially did this</font>

78
00:04:02,690 --> 00:04:08,000
project<font color="#CCCCCC"> with so that's</font><font color="#E5E5E5"> what I'm</font>

79
00:04:04,760 --> 00:04:12,858
personally most familiar with<font color="#E5E5E5"> and so you</font>

80
00:04:08,000 --> 00:04:16,728
will<font color="#CCCCCC"> see this 15 or something blocks</font>

81
00:04:12,859 --> 00:04:21,079
here which they call streaming multi

82
00:04:16,728 --> 00:04:23,810
processors and in each<font color="#CCCCCC"> of them there</font><font color="#E5E5E5"> are</font>

83
00:04:21,079 --> 00:04:26,870
yet more<font color="#E5E5E5"> smaller blocks</font>

84
00:04:23,810 --> 00:04:29,800
the<font color="#E5E5E5"> green ones here are your actual</font>

85
00:04:26,870 --> 00:04:33,310
compute<font color="#E5E5E5"> core so that basically</font>

86
00:04:29,800 --> 00:04:35,930
processors that<font color="#CCCCCC"> can do simple arithmetic</font>

87
00:04:33,310 --> 00:04:36,590
instructions memory access and<font color="#CCCCCC"> that kind</font>

88
00:04:35,930 --> 00:04:41,240
of things

89
00:04:36,590 --> 00:04:44,210
each of these bigger blocks has its own

90
00:04:41,240 --> 00:04:48,080
private data and<font color="#E5E5E5"> then of</font><font color="#CCCCCC"> course there's</font>

91
00:04:44,210 --> 00:04:50,719
a big<font color="#E5E5E5"> GPU global memory space of several</font>

92
00:04:48,080 --> 00:04:52,820
gigabytes or whatever you have and then

93
00:04:50,720 --> 00:04:55,010
in one system<font color="#CCCCCC"> you can have several GPUs</font>

94
00:04:52,820 --> 00:04:57,860
so you can and then you<font color="#CCCCCC"> can construct</font>

95
00:04:55,010 --> 00:05:00,669
huge systems which are then used<font color="#E5E5E5"> for</font>

96
00:04:57,860 --> 00:05:05,990
weather<font color="#E5E5E5"> forecast computations and sand</font>

97
00:05:00,669 --> 00:05:09,770
simulations stuff like that and our job

98
00:05:05,990 --> 00:05:12,800
now<font color="#CCCCCC"> is to take some big computation that</font>

99
00:05:09,770 --> 00:05:17,120
<font color="#CCCCCC">we have in C</font><font color="#E5E5E5"> C++ Fortran in this case</font>

100
00:05:12,800 --> 00:05:19,760
and somehow map all the loop iterations

101
00:05:17,120 --> 00:05:22,040
<font color="#E5E5E5">that you have mapped these onto all</font>

102
00:05:19,760 --> 00:05:25,400
these many compute cores to keep them

103
00:05:22,040 --> 00:05:29,780
busy and harnessing compute power<font color="#E5E5E5"> that</font>

104
00:05:25,400 --> 00:05:32,060
you got there<font color="#E5E5E5"> more abstractly</font><font color="#CCCCCC"> did</font><font color="#E5E5E5"> each</font>

105
00:05:29,780 --> 00:05:34,729
<font color="#CCCCCC">abuse look like this you have several</font>

106
00:05:32,060 --> 00:05:37,400
multi processors in each of them you

107
00:05:34,729 --> 00:05:39,409
have some shared memory local memory

108
00:05:37,400 --> 00:05:41,719
<font color="#E5E5E5">whatever you call it then you have</font>

109
00:05:39,410 --> 00:05:48,380
<font color="#CCCCCC">wretches you</font><font color="#E5E5E5"> choice registers at nd</font>

110
00:05:41,720 --> 00:05:54,620
several processors<font color="#CCCCCC"> in there then</font><font color="#E5E5E5"> open</font>

111
00:05:48,380 --> 00:05:57,050
<font color="#CCCCCC">ACC that's an open standard how many of</font>

112
00:05:54,620 --> 00:05:59,690
you<font color="#E5E5E5"> are familiar with</font><font color="#CCCCCC"> open ACC in anyway</font>

113
00:05:57,050 --> 00:06:04,150
raise your hands<font color="#E5E5E5"> please okay a bunch and</font>

114
00:05:59,690 --> 00:06:06,890
how many with<font color="#CCCCCC"> openmp</font><font color="#E5E5E5"> okay a lot more</font>

115
00:06:04,150 --> 00:06:08,150
<font color="#CCCCCC">which</font><font color="#E5E5E5"> makes sense because</font><font color="#CCCCCC"> OpenMP has</font>

116
00:06:06,890 --> 00:06:12,520
been around much longer

117
00:06:08,150 --> 00:06:17,270
so Omega<font color="#CCCCCC"> C</font><font color="#E5E5E5"> is conceptually and also</font>

118
00:06:12,520 --> 00:06:21,169
mostly semantically our builds on<font color="#CCCCCC"> OpenMP</font>

119
00:06:17,270 --> 00:06:26,359
it also uses<font color="#E5E5E5"> the directives</font><font color="#CCCCCC"> that you are</font>

120
00:06:21,169 --> 00:06:28,520
seeing in<font color="#CCCCCC"> open MP and the</font><font color="#E5E5E5"> principle is</font>

121
00:06:26,360 --> 00:06:33,430
<font color="#CCCCCC">the same your</font><font color="#E5E5E5"> take your</font><font color="#CCCCCC"> existing source</font>

122
00:06:28,520 --> 00:06:36,830
code your<font color="#E5E5E5"> Fortran 77 code from the 70s</font>

123
00:06:33,430 --> 00:06:37,249
<font color="#CCCCCC">at some</font><font color="#E5E5E5"> pragmas some directives in there</font>

124
00:06:36,830 --> 00:06:39,739
and

125
00:06:37,249 --> 00:06:44,299
can run that code as<font color="#CCCCCC"> you did before</font><font color="#E5E5E5"> but</font>

126
00:06:39,739 --> 00:06:46,698
it will<font color="#E5E5E5"> just</font><font color="#CCCCCC"> run much faster that's the</font>

127
00:06:44,299 --> 00:06:48,679
what I say here to<font color="#CCCCCC"> markup regions</font><font color="#E5E5E5"> for</font>

128
00:06:46,699 --> 00:06:51,199
parallel vector loops you have<font color="#E5E5E5"> to do</font>

129
00:06:48,679 --> 00:06:53,268
some memory management as I said it GPUs

130
00:06:51,199 --> 00:06:56,179
typically have separate memory spaces

131
00:06:53,269 --> 00:06:58,629
<font color="#E5E5E5">from from the</font><font color="#CCCCCC"> host from</font><font color="#E5E5E5"> the CPU so you</font>

132
00:06:56,179 --> 00:07:01,909
have to copy<font color="#CCCCCC"> your data</font><font color="#E5E5E5"> back and</font><font color="#CCCCCC"> forth</font>

133
00:06:58,629 --> 00:07:04,429
you<font color="#CCCCCC"> have some more</font><font color="#E5E5E5"> special</font><font color="#CCCCCC"> things</font>

134
00:07:01,909 --> 00:07:09,259
reduction operations and<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> more of</font>

135
00:07:04,429 --> 00:07:11,958
course<font color="#E5E5E5"> and all these materials</font><font color="#CCCCCC"> and stuff</font>

136
00:07:09,259 --> 00:07:14,529
are hints to the<font color="#E5E5E5"> compiler or</font>

137
00:07:11,959 --> 00:07:17,959
<font color="#E5E5E5">instructions to the compiler how to</font>

138
00:07:14,529 --> 00:07:20,719
<font color="#E5E5E5">apply</font><font color="#CCCCCC"> your source code</font><font color="#E5E5E5"> to these many</font>

139
00:07:17,959 --> 00:07:24,759
compute cores that you have on a GPU<font color="#CCCCCC"> or</font>

140
00:07:20,719 --> 00:07:28,729
another accelerator so the language

141
00:07:24,759 --> 00:07:30,499
<font color="#CCCCCC">tries to be abstract</font><font color="#E5E5E5"> enough or well open</font>

142
00:07:28,729 --> 00:07:35,419
<font color="#CCCCCC">ASIS</font><font color="#E5E5E5"> is not the</font><font color="#CCCCCC"> language is it's an</font>

143
00:07:30,499 --> 00:07:37,399
extension<font color="#E5E5E5"> to C C++ and Fortran</font><font color="#CCCCCC"> and it</font>

144
00:07:35,419 --> 00:07:40,808
tries to be abstract enough so<font color="#CCCCCC"> that it</font>

145
00:07:37,399 --> 00:07:47,239
applies<font color="#CCCCCC"> to basically all the parallel</font>

146
00:07:40,809 --> 00:07:49,969
accelerators that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> there so one</font>

147
00:07:47,239 --> 00:07:51,558
example<font color="#CCCCCC"> quick one matrix multiplication</font>

148
00:07:49,969 --> 00:07:55,159
you may have seen that<font color="#E5E5E5"> before</font>

149
00:07:51,559 --> 00:07:58,759
<font color="#E5E5E5">and of course that's just a simple</font>

150
00:07:55,159 --> 00:08:01,819
<font color="#E5E5E5">example so did that's your</font><font color="#CCCCCC"> original</font>

151
00:07:58,759 --> 00:08:07,699
serial code<font color="#E5E5E5"> which works which has been</font>

152
00:08:01,819 --> 00:08:11,619
<font color="#E5E5E5">tested for decades</font><font color="#CCCCCC"> then you have several</font>

153
00:08:07,699 --> 00:08:15,649
compute constructs available in<font color="#CCCCCC"> open ACC</font>

154
00:08:11,619 --> 00:08:18,799
one is the parallel construct<font color="#E5E5E5"> so the red</font>

155
00:08:15,649 --> 00:08:20,509
lines<font color="#E5E5E5"> are what I'm adding here to run</font>

156
00:08:18,799 --> 00:08:23,748
this without<font color="#E5E5E5"> mazes the parallel</font>

157
00:08:20,509 --> 00:08:25,639
construct in this example it's a lot

158
00:08:23,749 --> 00:08:28,969
<font color="#E5E5E5">that I have</font><font color="#CCCCCC"> to add but that this is just</font>

159
00:08:25,639 --> 00:08:30,679
<font color="#E5E5E5">showing</font><font color="#CCCCCC"> the one hot loop</font><font color="#E5E5E5"> all the</font><font color="#CCCCCC"> rest of</font>

160
00:08:28,969 --> 00:08:34,909
your existing program would not<font color="#E5E5E5"> be</font>

161
00:08:30,679 --> 00:08:37,429
touched by by the open a CC annotations

162
00:08:34,909 --> 00:08:40,849
<font color="#E5E5E5">so just going over this briefly</font>

163
00:08:37,429 --> 00:08:43,188
you start with pragma<font color="#CCCCCC"> ACC parallel which</font>

164
00:08:40,849 --> 00:08:48,589
says that<font color="#E5E5E5"> the following region so a</font>

165
00:08:43,188 --> 00:08:51,079
structured block in<font color="#CCCCCC"> c c++ is to be</font>

166
00:08:48,589 --> 00:08:52,730
offloaded<font color="#E5E5E5"> to some accelerate</font>

167
00:08:51,080 --> 00:08:55,730
and something is to<font color="#E5E5E5"> be run in parallel</font>

168
00:08:52,730 --> 00:09:00,800
<font color="#E5E5E5">in there and then you have all these</font>

169
00:08:55,730 --> 00:09:03,770
free pragma<font color="#CCCCCC"> a CC loop nested inside each</font>

170
00:09:00,800 --> 00:09:07,400
other<font color="#CCCCCC"> according to the</font><font color="#E5E5E5"> four loops that</font>

171
00:09:03,770 --> 00:09:10,870
you<font color="#E5E5E5"> have and that's because in open ACC</font>

172
00:09:07,400 --> 00:09:15,410
you have several levels of parallelism

173
00:09:10,870 --> 00:09:17,210
which<font color="#E5E5E5"> map to</font><font color="#CCCCCC"> these several building</font>

174
00:09:15,410 --> 00:09:19,699
blocks that<font color="#CCCCCC"> you have in the GPU</font>

175
00:09:17,210 --> 00:09:24,440
architecture so for example the outer

176
00:09:19,700 --> 00:09:27,200
gang level would map<font color="#CCCCCC"> to</font><font color="#E5E5E5"> viewing these</font>

177
00:09:24,440 --> 00:09:29,950
computations to<font color="#E5E5E5"> several of the bigger</font>

178
00:09:27,200 --> 00:09:33,140
compute blocks that you have on<font color="#CCCCCC"> a</font><font color="#E5E5E5"> GPU</font>

179
00:09:29,950 --> 00:09:37,550
<font color="#E5E5E5">the most inner one the vector loop is</font>

180
00:09:33,140 --> 00:09:41,199
<font color="#CCCCCC">just a or similar to a</font><font color="#E5E5E5"> CPU vector just</font>

181
00:09:37,550 --> 00:09:45,349
that the vector<font color="#CCCCCC"> width is much bigger</font>

182
00:09:41,200 --> 00:09:49,130
so in<font color="#E5E5E5"> NVIDIA GPUs for example it's 32</font>

183
00:09:45,350 --> 00:09:53,090
<font color="#E5E5E5">size vectors and in between you have the</font>

184
00:09:49,130 --> 00:09:59,300
worker<font color="#E5E5E5"> parallelism level which is</font>

185
00:09:53,090 --> 00:10:01,430
essentially a group of<font color="#CCCCCC"> wack tours okay</font>

186
00:09:59,300 --> 00:10:03,170
so that's a lot you<font color="#CCCCCC"> have to add in</font><font color="#E5E5E5"> this</font>

187
00:10:01,430 --> 00:10:06,079
example<font color="#E5E5E5"> but again this is just showing</font>

188
00:10:03,170 --> 00:10:08,719
<font color="#E5E5E5">the one</font><font color="#CCCCCC"> what computation loop that you</font>

189
00:10:06,080 --> 00:10:11,480
have in your<font color="#CCCCCC"> program all the</font><font color="#E5E5E5"> rest will</font>

190
00:10:08,720 --> 00:10:15,860
<font color="#CCCCCC">just stay as it is before</font><font color="#E5E5E5"> all right</font><font color="#CCCCCC"> and</font>

191
00:10:11,480 --> 00:10:19,040
you have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> data copy</font><font color="#CCCCCC"> closes up</font><font color="#E5E5E5"> there</font>

192
00:10:15,860 --> 00:10:22,700
copy in a and<font color="#CCCCCC"> P arrays and copy out the</font>

193
00:10:19,040 --> 00:10:24,949
<font color="#CCCCCC">C array obviously C is where</font><font color="#E5E5E5"> the results</font>

194
00:10:22,700 --> 00:10:27,080
are<font color="#E5E5E5"> being stored that doesn't need to be</font>

195
00:10:24,950 --> 00:10:31,280
<font color="#CCCCCC">copied</font><font color="#E5E5E5"> to the GPU because everything</font>

196
00:10:27,080 --> 00:10:33,500
will<font color="#E5E5E5"> be overwritten</font><font color="#CCCCCC"> and a and</font><font color="#E5E5E5"> B arrays</font>

197
00:10:31,280 --> 00:10:35,360
are only wrapped<font color="#E5E5E5"> inside this region so</font>

198
00:10:33,500 --> 00:10:37,610
they don't<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> copied back from</font>

199
00:10:35,360 --> 00:10:44,690
the GPU<font color="#E5E5E5"> through the host after this loop</font>

200
00:10:37,610 --> 00:10:47,840
executes then we have the open ACC

201
00:10:44,690 --> 00:10:50,150
<font color="#E5E5E5">kernels construct which is an</font>

202
00:10:47,840 --> 00:10:53,600
alternative compute construct to the

203
00:10:50,150 --> 00:10:56,980
parallel construct you see that here I

204
00:10:53,600 --> 00:10:59,180
have<font color="#CCCCCC"> not</font><font color="#E5E5E5"> put in all this ACC loop</font>

205
00:10:56,980 --> 00:11:01,280
<font color="#CCCCCC">directives</font><font color="#E5E5E5"> you don't need them in the</font>

206
00:10:59,180 --> 00:11:04,880
<font color="#CCCCCC">corners construct here it's the job of</font>

207
00:11:01,280 --> 00:11:06,560
<font color="#E5E5E5">the compiler</font><font color="#CCCCCC"> to figure out which loops</font>

208
00:11:04,880 --> 00:11:10,250
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we run in parallel how they should</font>

209
00:11:06,560 --> 00:11:12,790
be parallelized<font color="#CCCCCC"> which level of gang</font>

210
00:11:10,250 --> 00:11:15,650
welcome vector parallelism to<font color="#E5E5E5"> apply and</font>

211
00:11:12,790 --> 00:11:17,990
well the hardest<font color="#E5E5E5"> taught job to figure</font>

212
00:11:15,650 --> 00:11:20,810
<font color="#E5E5E5">out if they can be parallelized at all</font>

213
00:11:17,990 --> 00:11:26,330
or if there are any data dependences

214
00:11:20,810 --> 00:11:28,400
stuff like that so that<font color="#E5E5E5"> of course needs</font>

215
00:11:26,330 --> 00:11:32,540
more intelligence from the compiler and

216
00:11:28,400 --> 00:11:35,300
as I'm<font color="#CCCCCC"> writing here GCC</font><font color="#E5E5E5"> does some some</font>

217
00:11:32,540 --> 00:11:38,540
some<font color="#E5E5E5"> things work but in general there's</font>

218
00:11:35,300 --> 00:11:40,400
more work for us<font color="#CCCCCC"> to be done there so if</font>

219
00:11:38,540 --> 00:11:42,020
you want to<font color="#E5E5E5"> go for performance you</font>

220
00:11:40,400 --> 00:11:49,600
should<font color="#E5E5E5"> for now use the parallel</font>

221
00:11:42,020 --> 00:11:56,689
construct<font color="#E5E5E5"> with GCC</font><font color="#CCCCCC"> alright so then</font><font color="#E5E5E5"> the</font>

222
00:11:49,600 --> 00:11:59,600
status in GCC<font color="#E5E5E5"> upstream five years ago we</font>

223
00:11:56,690 --> 00:12:02,800
<font color="#CCCCCC">started with the 2.0</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> my cc</font>

224
00:11:59,600 --> 00:12:05,990
specification and then a few<font color="#CCCCCC"> years</font><font color="#E5E5E5"> later</font>

225
00:12:02,800 --> 00:12:11,810
2.5 came out which is mostly supported

226
00:12:05,990 --> 00:12:18,050
<font color="#E5E5E5">in upstream GCC 2.6 is in our</font>

227
00:12:11,810 --> 00:12:20,000
<font color="#E5E5E5">development branch and 2.7 has just been</font>

228
00:12:18,050 --> 00:12:22,939
<font color="#E5E5E5">released a few months</font><font color="#CCCCCC"> ago</font><font color="#E5E5E5"> at the</font>

229
00:12:20,000 --> 00:12:26,990
supercomputing<font color="#E5E5E5"> conference</font><font color="#CCCCCC"> we have not</font>

230
00:12:22,940 --> 00:12:28,850
<font color="#E5E5E5">yet</font><font color="#CCCCCC"> started working on that right and</font><font color="#E5E5E5"> we</font>

231
00:12:26,990 --> 00:12:31,190
have not implemented all of<font color="#CCCCCC"> the</font>

232
00:12:28,850 --> 00:12:33,440
<font color="#CCCCCC">automates the C specification</font><font color="#E5E5E5"> there are</font>

233
00:12:31,190 --> 00:12:36,100
some features<font color="#CCCCCC"> in there that users are</font>

234
00:12:33,440 --> 00:12:39,890
evidently not using<font color="#E5E5E5"> very much</font><font color="#CCCCCC"> and</font>

235
00:12:36,100 --> 00:12:41,840
instead<font color="#CCCCCC"> of spending time on these</font><font color="#E5E5E5"> just</font>

236
00:12:39,890 --> 00:12:43,910
who<font color="#CCCCCC"> claimed complete support for</font><font color="#E5E5E5"> the</font>

237
00:12:41,840 --> 00:12:46,100
specification<font color="#CCCCCC"> we rather than focus on</font>

238
00:12:43,910 --> 00:12:51,110
performance tuning of these stuff that

239
00:12:46,100 --> 00:12:54,020
users are<font color="#CCCCCC"> actually using</font><font color="#E5E5E5"> right and so we</font>

240
00:12:51,110 --> 00:12:56,150
saw support code offloading to<font color="#E5E5E5"> NVIDIA</font>

241
00:12:54,020 --> 00:12:59,720
<font color="#E5E5E5">GPUs as I mentioned that's what this</font>

242
00:12:56,150 --> 00:13:01,880
whole project started with and well the

243
00:12:59,720 --> 00:13:03,650
the maintainer of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> NV PTX back-end is</font>

244
00:13:01,880 --> 00:13:07,520
actually in the<font color="#CCCCCC"> room here from the flea</font>

245
00:13:03,650 --> 00:13:10,520
<font color="#E5E5E5">is now working at Susi</font><font color="#CCCCCC"> then we have AMD</font>

246
00:13:07,520 --> 00:13:13,250
<font color="#CCCCCC">GPU support</font><font color="#E5E5E5"> that was recently done as a</font>

247
00:13:10,520 --> 00:13:16,030
separate project<font color="#E5E5E5"> very much building on</font>

248
00:13:13,250 --> 00:13:18,019
top<font color="#CCCCCC"> of this stuff</font><font color="#E5E5E5"> that we did before so</font>

249
00:13:16,030 --> 00:13:21,709
<font color="#CCCCCC">they literally</font>

250
00:13:18,019 --> 00:13:27,889
<font color="#E5E5E5">I had to write a new back-end</font><font color="#CCCCCC"> in GCC</font><font color="#E5E5E5"> for</font>

251
00:13:21,709 --> 00:13:31,008
<font color="#E5E5E5">AMD</font><font color="#CCCCCC"> H is the encode</font><font color="#E5E5E5"> generation</font><font color="#CCCCCC"> they had</font>

252
00:13:27,889 --> 00:13:35,329
to write some of<font color="#E5E5E5"> the library on time</font>

253
00:13:31,009 --> 00:13:38,509
library code that talks<font color="#E5E5E5"> to to the the</font>

254
00:13:35,329 --> 00:13:43,248
the GPU compute stack so hard to to get

255
00:13:38,509 --> 00:13:44,899
the code to<font color="#E5E5E5"> load to the GPU so that you</font>

256
00:13:43,249 --> 00:13:46,759
can launch it there<font color="#E5E5E5"> and do the memory</font>

257
00:13:44,899 --> 00:13:48,649
mapping<font color="#CCCCCC"> setup and that</font><font color="#E5E5E5"> kind of things</font>

258
00:13:46,759 --> 00:13:51,559
but<font color="#E5E5E5"> that's basically all they had to do</font>

259
00:13:48,649 --> 00:13:54,589
others could be done<font color="#E5E5E5"> as well including</font>

260
00:13:51,559 --> 00:13:58,730
multi-threaded CPU which some other open

261
00:13:54,589 --> 00:14:02,619
ACC compiler<font color="#CCCCCC"> support for example what</font>

262
00:13:58,730 --> 00:14:05,989
we've done is is<font color="#E5E5E5"> very generic not</font>

263
00:14:02,619 --> 00:14:10,519
specific to<font color="#E5E5E5"> a specific host system so we</font>

264
00:14:05,989 --> 00:14:12,499
<font color="#E5E5E5">can support anything mostly that has</font>

265
00:14:10,519 --> 00:14:15,529
drivers to talk to some accelerator

266
00:14:12,499 --> 00:14:20,089
device<font color="#CCCCCC"> ourself through testing on x86</font>

267
00:14:15,529 --> 00:14:22,009
<font color="#E5E5E5">and PowerPC 64</font><font color="#CCCCCC"> little endian</font><font color="#E5E5E5"> right and</font>

268
00:14:20,089 --> 00:14:24,290
if<font color="#E5E5E5"> you're interested</font><font color="#CCCCCC"> in helping</font><font color="#E5E5E5"> just</font>

269
00:14:22,009 --> 00:14:28,369
<font color="#E5E5E5">send patches</font><font color="#CCCCCC"> i'm the maintainer of</font><font color="#E5E5E5"> the</font>

270
00:14:24,290 --> 00:14:34,309
<font color="#CCCCCC">home acc support in GCC so</font><font color="#E5E5E5"> i</font><font color="#CCCCCC"> will review</font>

271
00:14:28,369 --> 00:14:37,249
them hopefully<font color="#CCCCCC"> or talk to us if you need</font>

272
00:14:34,309 --> 00:14:39,199
services support stuff like it<font color="#E5E5E5"> so we're</font>

273
00:14:37,249 --> 00:14:41,720
a services company so<font color="#CCCCCC"> i'm mentioning</font>

274
00:14:39,199 --> 00:14:44,498
this it's difficult<font color="#CCCCCC"> to sell a compiler</font>

275
00:14:41,720 --> 00:14:47,629
that<font color="#E5E5E5"> is available as free software but</font>

276
00:14:44,499 --> 00:14:51,799
<font color="#CCCCCC">of course you're all familiar with</font><font color="#E5E5E5"> that</font>

277
00:14:47,629 --> 00:14:55,249
<font color="#E5E5E5">problem</font><font color="#CCCCCC"> I suppose okay</font><font color="#E5E5E5"> then on to some</font>

278
00:14:51,799 --> 00:14:58,670
<font color="#E5E5E5">project that we did last year</font><font color="#CCCCCC"> the Alice</font>

279
00:14:55,249 --> 00:15:01,059
<font color="#CCCCCC">Dalton application chemistry simulation</font>

280
00:14:58,670 --> 00:15:04,279
calculation of molecular properties

281
00:15:01,059 --> 00:15:07,309
that's about<font color="#E5E5E5"> all I know about it I have</font>

282
00:15:04,279 --> 00:15:10,160
not<font color="#E5E5E5"> looked into it much at this level</font>

283
00:15:07,309 --> 00:15:12,199
what<font color="#E5E5E5"> it's actually doing I</font><font color="#CCCCCC"> just have</font>

284
00:15:10,160 --> 00:15:16,069
been given or we as a group have<font color="#CCCCCC"> been</font>

285
00:15:12,199 --> 00:15:19,189
given<font color="#E5E5E5"> this application with the goal</font><font color="#CCCCCC"> to</font>

286
00:15:16,069 --> 00:15:22,610
tune that for the performance that<font color="#CCCCCC"> you'd</font>

287
00:15:19,189 --> 00:15:26,089
get with GCC<font color="#E5E5E5"> of Mesa seems and media</font>

288
00:15:22,610 --> 00:15:29,509
<font color="#CCCCCC">chip use by comparing to the PGI</font>

289
00:15:26,089 --> 00:15:32,679
compiler which is kind of the

290
00:15:29,509 --> 00:15:35,959
standard you would use with nvidia gpus

291
00:15:32,679 --> 00:15:37,999
<font color="#E5E5E5">the PGI compiler portland group has been</font>

292
00:15:35,959 --> 00:15:41,149
acquired<font color="#E5E5E5"> by nvidia</font><font color="#CCCCCC"> awhile ago</font><font color="#E5E5E5"> so they</font>

293
00:15:37,999 --> 00:15:43,309
have all the in-house knowledge right

294
00:15:41,149 --> 00:15:46,609
<font color="#E5E5E5">and well i made this comment earlier</font>

295
00:15:43,309 --> 00:15:49,608
about<font color="#E5E5E5"> fortran 77 so here we have it the</font>

296
00:15:46,609 --> 00:15:57,339
<font color="#E5E5E5">history</font><font color="#CCCCCC"> of dalton application starts in</font>

297
00:15:49,609 --> 00:16:00,529
fall of 1983<font color="#CCCCCC"> when I was one year old</font><font color="#E5E5E5"> and</font>

298
00:15:57,339 --> 00:16:03,259
still a<font color="#E5E5E5"> lot of the actual simulation</font>

299
00:16:00,529 --> 00:16:05,869
<font color="#E5E5E5">code is I guess from from that age and</font>

300
00:16:03,259 --> 00:16:10,459
<font color="#E5E5E5">it's Fortran a lot of the scientific</font>

301
00:16:05,869 --> 00:16:12,980
simulation code is in Fortran still<font color="#CCCCCC"> okay</font>

302
00:16:10,459 --> 00:16:14,388
<font color="#CCCCCC">so that's just a quick overview of what</font>

303
00:16:12,980 --> 00:16:16,899
we're<font color="#CCCCCC"> talking about here Alice</font><font color="#E5E5E5"> thought</font>

304
00:16:14,389 --> 00:16:22,429
and<font color="#CCCCCC"> just look at the yellow line</font>

305
00:16:16,899 --> 00:16:24,679
it's<font color="#CCCCCC"> 800,000</font><font color="#E5E5E5"> source lines of code for</font>

306
00:16:22,429 --> 00:16:26,929
comparison<font color="#E5E5E5"> GCC without all the test</font>

307
00:16:24,679 --> 00:16:29,049
suite has about three and a half<font color="#E5E5E5"> million</font>

308
00:16:26,929 --> 00:16:31,488
lines but still it's a huge application

309
00:16:29,049 --> 00:16:35,660
<font color="#CCCCCC">so no way we're going to work through</font>

310
00:16:31,489 --> 00:16:37,639
<font color="#CCCCCC">all of that</font><font color="#E5E5E5"> include several external sub</font>

311
00:16:35,660 --> 00:16:39,169
modules has a<font color="#E5E5E5"> non-trivial build system</font>

312
00:16:37,639 --> 00:16:41,959
as you would guess from<font color="#CCCCCC"> an application</font>

313
00:16:39,169 --> 00:16:45,189
<font color="#CCCCCC">of that size works with the PGI compiler</font>

314
00:16:41,959 --> 00:16:48,498
obviously also<font color="#CCCCCC"> works with</font><font color="#E5E5E5"> GCC but it</font>

315
00:16:45,189 --> 00:16:52,219
does<font color="#E5E5E5"> as some problems to</font><font color="#CCCCCC"> path through</font>

316
00:16:48,499 --> 00:16:55,609
all the<font color="#E5E5E5"> well this one command line flag</font>

317
00:16:52,220 --> 00:16:58,879
<font color="#E5E5E5">def - FM ACC which you have to</font><font color="#CCCCCC"> specify</font>

318
00:16:55,609 --> 00:17:03,799
to enable<font color="#CCCCCC"> um</font><font color="#E5E5E5"> ACC processing so we had to</font>

319
00:16:58,879 --> 00:17:05,809
figure<font color="#E5E5E5"> out how to do that then we</font>

320
00:17:03,799 --> 00:17:07,638
replaced some of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> code in the</font>

321
00:17:05,809 --> 00:17:09,949
application agreeing with<font color="#E5E5E5"> with our</font>

322
00:17:07,638 --> 00:17:11,688
customer because we<font color="#E5E5E5"> wanted</font><font color="#CCCCCC"> to do an</font>

323
00:17:09,949 --> 00:17:14,360
apples-to-apples comparison and as I

324
00:17:11,689 --> 00:17:17,539
<font color="#E5E5E5">said the</font><font color="#CCCCCC"> kernels construct</font><font color="#E5E5E5"> support in</font>

325
00:17:14,359 --> 00:17:19,698
<font color="#CCCCCC">JCC is not just as good as</font><font color="#E5E5E5"> for a</font>

326
00:17:17,539 --> 00:17:22,730
parallel construct<font color="#E5E5E5"> yet so we replaced</font>

327
00:17:19,699 --> 00:17:24,500
these regions and the<font color="#E5E5E5"> Alice</font><font color="#CCCCCC"> Dalton</font><font color="#E5E5E5"> build</font>

328
00:17:22,730 --> 00:17:27,319
system did something clever<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> is</font>

329
00:17:24,500 --> 00:17:30,080
to link against<font color="#E5E5E5"> optimized vendor</font>

330
00:17:27,319 --> 00:17:32,480
libraries for mathematical computations

331
00:17:30,080 --> 00:17:34,699
<font color="#E5E5E5">only for the PGI compiler because that's</font>

332
00:17:32,480 --> 00:17:36,679
what this has<font color="#E5E5E5"> been set up for we</font>

333
00:17:34,700 --> 00:17:38,840
<font color="#E5E5E5">replaced these by the source code of</font>

334
00:17:36,679 --> 00:17:41,000
<font color="#E5E5E5">these blast functions and an annotated</font>

335
00:17:38,840 --> 00:17:42,320
this with<font color="#CCCCCC"> open</font><font color="#E5E5E5"> ACC</font><font color="#CCCCCC"> directive</font><font color="#E5E5E5"> so that's</font>

336
00:17:41,000 --> 00:17:44,210
in a way similar<font color="#E5E5E5"> to this</font>

337
00:17:42,320 --> 00:17:47,210
multiplication<font color="#E5E5E5"> example</font><font color="#CCCCCC"> that I showed</font>

338
00:17:44,210 --> 00:17:49,519
<font color="#CCCCCC">earlier and there was some strange</font><font color="#E5E5E5"> of</font>

339
00:17:47,210 --> 00:17:52,700
<font color="#CCCCCC">Mesa si directive usage which apparently</font>

340
00:17:49,519 --> 00:17:56,120
<font color="#CCCCCC">other compilers</font><font color="#E5E5E5"> supported or ignored or</font>

341
00:17:52,700 --> 00:17:57,950
whatever so we<font color="#CCCCCC"> replaced these and then</font>

342
00:17:56,120 --> 00:18:01,250
we had several<font color="#E5E5E5"> cycles of profiling</font>

343
00:17:57,950 --> 00:18:03,230
analyzing tuning tuning here means not

344
00:18:01,250 --> 00:18:06,740
to change the<font color="#CCCCCC"> Ellis Thorton saw score</font>

345
00:18:03,230 --> 00:18:10,730
<font color="#E5E5E5">any further but to teach GCC to do more</font>

346
00:18:06,740 --> 00:18:13,340
clever things and we<font color="#E5E5E5"> reported a very few</font>

347
00:18:10,730 --> 00:18:15,320
issues to Nvidia so<font color="#E5E5E5"> PT</font><font color="#CCCCCC"> X is what we're</font>

348
00:18:13,340 --> 00:18:17,840
targeting<font color="#E5E5E5"> PT</font><font color="#CCCCCC"> X is an intermediate</font>

349
00:18:15,320 --> 00:18:20,149
<font color="#E5E5E5">language which at runtime gets</font>

350
00:18:17,840 --> 00:18:23,059
just-in-time compiler to the actual GPU

351
00:18:20,149 --> 00:18:26,330
hardware<font color="#E5E5E5"> that we have and you see here</font>

352
00:18:23,059 --> 00:18:29,600
the<font color="#CCCCCC"> baseline GCC execution time if this</font>

353
00:18:26,330 --> 00:18:31,789
one example that we tuned here is around

354
00:18:29,600 --> 00:18:33,500
two<font color="#E5E5E5"> hundred thirty seconds and PGI</font>

355
00:18:31,789 --> 00:18:36,100
compiler a little bit more than a

356
00:18:33,500 --> 00:18:39,919
<font color="#CCCCCC">hundred seconds so much better obviously</font>

357
00:18:36,100 --> 00:18:41,870
<font color="#E5E5E5">but again we're we're in in the same</font>

358
00:18:39,919 --> 00:18:45,289
region<font color="#E5E5E5"> year so it's not an order of</font>

359
00:18:41,870 --> 00:18:48,620
<font color="#CCCCCC">magnitude that we</font><font color="#E5E5E5"> are slower</font><font color="#CCCCCC"> and after</font>

360
00:18:45,289 --> 00:18:51,769
several tuning cycles of GCC's code

361
00:18:48,620 --> 00:18:55,428
generation<font color="#E5E5E5"> we were equal to the PGI</font>

362
00:18:51,769 --> 00:18:58,820
compiler<font color="#E5E5E5"> actually two seconds better</font>

363
00:18:55,429 --> 00:19:02,269
actually<font color="#E5E5E5"> again that's just this one</font>

364
00:18:58,820 --> 00:19:06,408
example<font color="#CCCCCC"> here but</font><font color="#E5E5E5"> this shows that GCC is</font>

365
00:19:02,269 --> 00:19:11,149
up for this task<font color="#E5E5E5"> of being usable for for</font>

366
00:19:06,409 --> 00:19:12,860
such scientific computations<font color="#E5E5E5"> of</font><font color="#CCCCCC"> course</font>

367
00:19:11,149 --> 00:19:16,070
that doesn't<font color="#E5E5E5"> make the PGI compiler</font>

368
00:19:12,860 --> 00:19:18,408
obsolete or anything but it was<font color="#E5E5E5"> a great</font>

369
00:19:16,070 --> 00:19:22,460
success<font color="#E5E5E5"> for us you can read more</font><font color="#CCCCCC"> about</font>

370
00:19:18,409 --> 00:19:26,000
that<font color="#E5E5E5"> in this blog</font><font color="#CCCCCC"> post there then a</font><font color="#E5E5E5"> real</font>

371
00:19:22,460 --> 00:19:29,480
<font color="#E5E5E5">world example</font><font color="#CCCCCC"> n-body simulation that</font>

372
00:19:26,000 --> 00:19:32,690
simulates<font color="#CCCCCC"> an set of n individual bodies</font>

373
00:19:29,480 --> 00:19:34,879
like stars in<font color="#CCCCCC"> the universe or particles</font>

374
00:19:32,690 --> 00:19:38,720
or whatever with<font color="#CCCCCC"> distance</font><font color="#E5E5E5"> dependent</font>

375
00:19:34,879 --> 00:19:41,149
forces between<font color="#E5E5E5"> each pair and the problem</font>

376
00:19:38,720 --> 00:19:45,470
is<font color="#E5E5E5"> to calculate</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> turret trajectory of</font>

377
00:19:41,149 --> 00:19:48,080
each<font color="#E5E5E5"> body and you can understand if</font>

378
00:19:45,470 --> 00:19:51,730
there's a force<font color="#CCCCCC"> between each pair</font><font color="#E5E5E5"> that's</font>

379
00:19:48,080 --> 00:19:55,580
<font color="#E5E5E5">a lot</font><font color="#CCCCCC"> of computation as when</font><font color="#E5E5E5"> your</font>

380
00:19:51,730 --> 00:19:56,150
problem space runs bigger so a<font color="#CCCCCC"> GPU</font><font color="#E5E5E5"> can</font>

381
00:19:55,580 --> 00:19:58,850
be<font color="#CCCCCC"> very hell</font>

382
00:19:56,150 --> 00:20:01,460
full here and<font color="#E5E5E5"> I will overwrite this one</font>

383
00:19:58,850 --> 00:20:04,699
slide missing<font color="#CCCCCC"> before I show the demo</font><font color="#E5E5E5"> I'm</font>

384
00:20:01,460 --> 00:20:09,110
showing this with the<font color="#E5E5E5"> GCC</font><font color="#CCCCCC"> 8 compiler as</font>

385
00:20:04,700 --> 00:20:12,050
shipped by Ubuntu 1804<font color="#E5E5E5"> so roughly one</font>

386
00:20:09,110 --> 00:20:13,790
year<font color="#E5E5E5"> old is the maintainer</font><font color="#CCCCCC"> of these</font>

387
00:20:12,050 --> 00:20:18,470
<font color="#E5E5E5">packages here materials</font><font color="#CCCCCC"> close</font><font color="#E5E5E5"> edokko</font>

388
00:20:13,790 --> 00:20:23,180
<font color="#CCCCCC">know he</font><font color="#E5E5E5"> wanted to see that</font><font color="#CCCCCC"> so he has</font>

389
00:20:18,470 --> 00:20:25,150
done<font color="#E5E5E5"> the packaging of that GCC stuff so</font>

390
00:20:23,180 --> 00:20:28,850
that's available<font color="#E5E5E5"> in your Debian Ubuntu</font>

391
00:20:25,150 --> 00:20:31,280
packages you just have to<font color="#E5E5E5"> install the</font>

392
00:20:28,850 --> 00:20:36,020
GCC<font color="#CCCCCC"> eight offload and repeat the X</font>

393
00:20:31,280 --> 00:20:39,110
package and<font color="#CCCCCC"> it's dependencies</font><font color="#E5E5E5"> obviously</font>

394
00:20:36,020 --> 00:20:42,100
Debian and Ubuntu are not shipping<font color="#E5E5E5"> our</font>

395
00:20:39,110 --> 00:20:45,919
latest greatest development branch

396
00:20:42,100 --> 00:20:48,980
builds but<font color="#CCCCCC"> the rather the</font><font color="#E5E5E5"> stable GCC</font>

397
00:20:45,920 --> 00:20:51,850
release branches so that's something to

398
00:20:48,980 --> 00:20:54,140
<font color="#E5E5E5">try out but</font><font color="#CCCCCC"> if you're looking for</font>

399
00:20:51,850 --> 00:20:56,090
performance<font color="#E5E5E5"> or for for the latest</font>

400
00:20:54,140 --> 00:20:59,150
<font color="#CCCCCC">features then you will have to look at</font>

401
00:20:56,090 --> 00:21:01,340
our current development branch which<font color="#CCCCCC"> is</font>

402
00:20:59,150 --> 00:21:04,850
also<font color="#E5E5E5"> available in public or talk to</font><font color="#CCCCCC"> us</font>

403
00:21:01,340 --> 00:21:09,949
<font color="#CCCCCC">about binary releases of GCC which we</font>

404
00:21:04,850 --> 00:21:12,679
could also get you right but now the

405
00:21:09,950 --> 00:21:13,540
demo live demo<font color="#CCCCCC"> either it works or it</font>

406
00:21:12,680 --> 00:21:16,250
doesn't

407
00:21:13,540 --> 00:21:20,180
hopefully does<font color="#CCCCCC"> times up but that will be</font>

408
00:21:16,250 --> 00:21:23,170
<font color="#E5E5E5">quick</font><font color="#CCCCCC"> the laptop is more</font><font color="#E5E5E5"> than five</font><font color="#CCCCCC"> years</font>

409
00:21:20,180 --> 00:21:28,240
<font color="#E5E5E5">old has a very powerful CPU and GPU</font>

410
00:21:23,170 --> 00:21:31,220
<font color="#E5E5E5">powerful CPU a GPU not so much powerful</font>

411
00:21:28,240 --> 00:21:35,960
here again I'm<font color="#E5E5E5"> just</font><font color="#CCCCCC"> showing the hot</font>

412
00:21:31,220 --> 00:21:39,680
computational loop which is this compute

413
00:21:35,960 --> 00:21:41,300
body force function<font color="#CCCCCC"> and update directive</font>

414
00:21:39,680 --> 00:21:43,430
<font color="#CCCCCC">that moves memory</font><font color="#E5E5E5"> and we have this</font>

415
00:21:41,300 --> 00:21:47,690
parallel construct here and in there we

416
00:21:43,430 --> 00:21:51,560
<font color="#E5E5E5">have a loop construct doing the actual</font>

417
00:21:47,690 --> 00:21:56,780
body force incremental computation then

418
00:21:51,560 --> 00:22:01,250
<font color="#E5E5E5">I can build that that's using</font><font color="#CCCCCC"> G + + - /</font>

419
00:21:56,780 --> 00:22:06,649
-<font color="#E5E5E5"> 8 the</font><font color="#CCCCCC"> C++</font><font color="#E5E5E5"> 8 compiler available on this</font>

420
00:22:01,250 --> 00:22:07,860
<font color="#CCCCCC">system</font><font color="#E5E5E5"> it's building and then I can run</font>

421
00:22:06,650 --> 00:22:11,020
<font color="#E5E5E5">that</font>

422
00:22:07,860 --> 00:22:13,840
so<font color="#E5E5E5"> there</font><font color="#CCCCCC"> will two</font><font color="#E5E5E5"> windows up</font><font color="#CCCCCC"> here one is</font>

423
00:22:11,020 --> 00:22:16,570
executing<font color="#CCCCCC"> the</font><font color="#E5E5E5"> hosts executable the</font><font color="#CCCCCC"> cpu</font>

424
00:22:13,840 --> 00:22:19,540
executable<font color="#E5E5E5"> and one is executing the open</font>

425
00:22:16,570 --> 00:22:23,040
<font color="#E5E5E5">ACC accelerated one and I hope it's easy</font>

426
00:22:19,540 --> 00:22:23,040
to guess which<font color="#CCCCCC"> is which</font>

427
00:22:28,200 --> 00:22:32,700
<font color="#CCCCCC">No that's</font><font color="#E5E5E5"> the end of my talk</font>

428
00:22:32,770 --> 00:22:37,760
[Applause]

429
00:22:36,110 --> 00:22:41,649
[Music]

430
00:22:37,760 --> 00:22:45,769
[Applause]

431
00:22:41,649 --> 00:22:49,178
so any questions if<font color="#E5E5E5"> we still have time</font>

432
00:22:45,769 --> 00:22:49,179
for<font color="#E5E5E5"> them right</font>

433
00:23:15,849 --> 00:23:19,208
<font color="#CCCCCC">okay thank you</font>

