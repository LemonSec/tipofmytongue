1
00:00:06,069 --> 00:00:11,000
for the introduction it's great to be

2
00:00:08,330 --> 00:00:14,599
here actually<font color="#CCCCCC"> fosston was the very first</font>

3
00:00:11,000 --> 00:00:17,000
<font color="#E5E5E5">conference I</font><font color="#CCCCCC"> spoke at in 2013 back then</font>

4
00:00:14,599 --> 00:00:19,220
in the graph<font color="#E5E5E5"> def room and now it's the</font>

5
00:00:17,000 --> 00:00:20,689
second<font color="#E5E5E5"> time I really</font><font color="#CCCCCC"> had to</font><font color="#E5E5E5"> be back it's</font>

6
00:00:19,220 --> 00:00:23,359
always<font color="#E5E5E5"> an event I really</font><font color="#CCCCCC"> enjoyed going</font>

7
00:00:20,689 --> 00:00:26,570
<font color="#E5E5E5">and it's very nice to be here</font>

8
00:00:23,359 --> 00:00:28,359
so latency SLO<font color="#E5E5E5"> stun</font><font color="#CCCCCC"> ride to get you in</font>

9
00:00:26,570 --> 00:00:31,310
the mood<font color="#CCCCCC"> I have a</font><font color="#E5E5E5"> question for you</font><font color="#CCCCCC"> all</font>

10
00:00:28,359 --> 00:00:34,280
you<font color="#CCCCCC"> all have api's that you manage or</font>

11
00:00:31,310 --> 00:00:35,600
care about<font color="#E5E5E5"> in some ways so if I ask you</font>

12
00:00:34,280 --> 00:00:37,489
<font color="#E5E5E5">the following question or your manager</font>

13
00:00:35,600 --> 00:00:40,070
ask you the following question like how

14
00:00:37,489 --> 00:00:43,519
many<font color="#CCCCCC"> week fest in January</font><font color="#E5E5E5"> first served</font>

15
00:00:40,070 --> 00:00:46,580
within<font color="#E5E5E5"> 100 milliseconds</font><font color="#CCCCCC"> of all the</font>

16
00:00:43,519 --> 00:00:49,699
requests<font color="#E5E5E5"> to got in January it seems like</font>

17
00:00:46,580 --> 00:00:52,280
a fairly basic question right you're

18
00:00:49,699 --> 00:00:54,860
monitoring it<font color="#E5E5E5"> so how would you actually</font>

19
00:00:52,280 --> 00:00:56,799
do it<font color="#E5E5E5"> how can you answer this question</font>

20
00:00:54,860 --> 00:01:01,670
<font color="#CCCCCC">already</font>

21
00:00:56,799 --> 00:01:04,938
<font color="#CCCCCC">what about 1</font><font color="#E5E5E5"> in 50 milliseconds what</font>

22
00:01:01,670 --> 00:01:10,970
<font color="#CCCCCC">about maybe 180 milliseconds what about</font>

23
00:01:04,938 --> 00:01:15,740
if he<font color="#E5E5E5"> had</font><font color="#CCCCCC"> a problem in June</font><font color="#E5E5E5"> 16th 2018</font>

24
00:01:10,970 --> 00:01:18,130
<font color="#E5E5E5">between</font><font color="#CCCCCC"> 912</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> 935</font><font color="#E5E5E5"> how many requests</font>

25
00:01:15,740 --> 00:01:22,070
were served within<font color="#E5E5E5"> 100 milliseconds</font><font color="#CCCCCC"> I</font>

26
00:01:18,130 --> 00:01:23,899
guess like who can connect to the answer

27
00:01:22,070 --> 00:01:25,250
<font color="#E5E5E5">that</font><font color="#CCCCCC"> questions from any of</font><font color="#E5E5E5"> their peers</font>

28
00:01:23,900 --> 00:01:26,570
<font color="#CCCCCC">ok that's great</font>

29
00:01:25,250 --> 00:01:29,590
that's like can<font color="#E5E5E5"> I can I have like</font>

30
00:01:26,570 --> 00:01:32,750
someone tell me how would<font color="#E5E5E5"> they do it</font>

31
00:01:29,590 --> 00:01:36,530
Splunk yeah<font color="#E5E5E5"> excellent</font><font color="#CCCCCC"> so you keep</font><font color="#E5E5E5"> smart</font>

32
00:01:32,750 --> 00:01:39,700
data for more<font color="#E5E5E5"> than half a year ok I</font>

33
00:01:36,530 --> 00:01:39,700
admire this

34
00:01:40,370 --> 00:01:45,840
<font color="#E5E5E5">okay I'm</font><font color="#CCCCCC"> actually this kind of questions</font>

35
00:01:43,020 --> 00:01:48,330
are examples of latency<font color="#CCCCCC"> s ellos</font><font color="#E5E5E5"> and we</font>

36
00:01:45,840 --> 00:01:50,900
have<font color="#CCCCCC"> Atsuko knows being able to</font><font color="#E5E5E5"> answer</font>

37
00:01:48,330 --> 00:01:54,600
this<font color="#E5E5E5"> kind of questions very um very</font>

38
00:01:50,900 --> 00:01:56,550
convincingly<font color="#E5E5E5"> and at the latency SLO</font>

39
00:01:54,600 --> 00:01:59,130
workshop at<font color="#CCCCCC"> SR econ last year</font><font color="#E5E5E5"> I I</font>

40
00:01:56,550 --> 00:02:01,229
realized that it's actually<font color="#E5E5E5"> for for many</font>

41
00:01:59,130 --> 00:02:03,929
people next to impossible to answer

42
00:02:01,230 --> 00:02:06,960
<font color="#E5E5E5">these questions</font><font color="#CCCCCC"> and I was like</font><font color="#E5E5E5"> okay this</font>

43
00:02:03,930 --> 00:02:09,119
was like really<font color="#E5E5E5"> shocking to me like how</font>

44
00:02:06,960 --> 00:02:11,280
hard<font color="#E5E5E5"> that really is so I thought well</font>

45
00:02:09,119 --> 00:02:14,010
this is<font color="#E5E5E5"> maybe a</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> topic for a talk so</font>

46
00:02:11,280 --> 00:02:16,950
what I want<font color="#E5E5E5"> to do here</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> basically give</font>

47
00:02:14,010 --> 00:02:19,380
you a few ways how<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> do that with</font>

48
00:02:16,950 --> 00:02:21,690
the tools<font color="#E5E5E5"> that you have um like</font>

49
00:02:19,380 --> 00:02:25,769
everybody uses for monitoring<font color="#E5E5E5"> and log</font>

50
00:02:21,690 --> 00:02:27,630
analytics and<font color="#CCCCCC"> and then some ways some</font>

51
00:02:25,770 --> 00:02:29,340
pitfalls<font color="#E5E5E5"> that are often arise and some</font>

52
00:02:27,630 --> 00:02:31,620
misunderstandings and clear them up<font color="#E5E5E5"> and</font>

53
00:02:29,340 --> 00:02:34,410
also<font color="#E5E5E5"> show some of our tooling that is</font>

54
00:02:31,620 --> 00:02:36,900
<font color="#CCCCCC">also a largely open</font><font color="#E5E5E5"> source which might</font>

55
00:02:34,410 --> 00:02:38,790
give you more<font color="#CCCCCC"> insight into your api's</font>

56
00:02:36,900 --> 00:02:43,470
and allows you to answer<font color="#E5E5E5"> questions</font><font color="#CCCCCC"> like</font>

57
00:02:38,790 --> 00:02:45,840
<font color="#CCCCCC">that very convincingly</font><font color="#E5E5E5"> so some think</font>

58
00:02:43,470 --> 00:02:47,550
more<font color="#CCCCCC"> about me</font><font color="#E5E5E5"> my</font><font color="#CCCCCC"> name is heinrich i'm</font>

59
00:02:45,840 --> 00:02:49,800
data scientist<font color="#E5E5E5"> at</font><font color="#CCCCCC"> circo knows i</font>

60
00:02:47,550 --> 00:02:51,840
originally come from<font color="#E5E5E5"> from mathematics</font>

61
00:02:49,800 --> 00:02:53,910
and recently<font color="#CCCCCC"> i talked a lot about</font>

62
00:02:51,840 --> 00:02:55,860
statistics for engineers<font color="#CCCCCC"> so kind of</font>

63
00:02:53,910 --> 00:02:57,870
being a<font color="#E5E5E5"> mathematician entering the IT</font>

64
00:02:55,860 --> 00:02:59,880
operations monitoring domain<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

65
00:02:57,870 --> 00:03:01,650
<font color="#E5E5E5">what but</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> talking about like what</font>

66
00:02:59,880 --> 00:03:03,019
percentiles are<font color="#E5E5E5"> and this kind of kind of</font>

67
00:03:01,650 --> 00:03:06,450
things<font color="#E5E5E5"> and how</font><font color="#CCCCCC"> you apply them</font><font color="#E5E5E5"> correctly</font>

68
00:03:03,019 --> 00:03:10,519
<font color="#CCCCCC">I moved</font><font color="#E5E5E5"> to the countryside in Germany so</font>

69
00:03:06,450 --> 00:03:12,869
<font color="#E5E5E5">that I can</font><font color="#CCCCCC"> chop more firewood myself and</font>

70
00:03:10,519 --> 00:03:14,610
yeah I'm highly complementary today if

71
00:03:12,870 --> 00:03:18,269
you want<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> follow me around</font><font color="#CCCCCC"> okay</font>

72
00:03:14,610 --> 00:03:20,040
here's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> lo plan</font><font color="#E5E5E5"> first I want to</font><font color="#CCCCCC"> just</font>

73
00:03:18,269 --> 00:03:22,709
talk a little bit about why you want to

74
00:03:20,040 --> 00:03:24,480
<font color="#CCCCCC">monitor latency then the second thing</font>

75
00:03:22,709 --> 00:03:26,160
<font color="#CCCCCC">where</font><font color="#E5E5E5"> you look at the title probably I</font>

76
00:03:24,480 --> 00:03:28,500
should explain<font color="#E5E5E5"> what an SLO actually is</font>

77
00:03:26,160 --> 00:03:30,480
<font color="#E5E5E5">and then I will give you three methods</font>

78
00:03:28,500 --> 00:03:32,310
<font color="#E5E5E5">to calculate agency</font><font color="#CCCCCC"> SLO is effectively</font>

79
00:03:30,480 --> 00:03:33,869
<font color="#E5E5E5">and we'll talk about each of those</font>

80
00:03:32,310 --> 00:03:35,910
methods<font color="#CCCCCC"> and in the end people</font><font color="#E5E5E5"> have a</font>

81
00:03:33,870 --> 00:03:41,100
confusion<font color="#E5E5E5"> isn't</font><font color="#CCCCCC"> that wonderful</font>

82
00:03:35,910 --> 00:03:42,150
so yeah<font color="#CCCCCC"> without further we do latency is</font>

83
00:03:41,100 --> 00:03:47,400
important

84
00:03:42,150 --> 00:03:49,700
I will<font color="#E5E5E5"> just say so much forgot some</font>

85
00:03:47,400 --> 00:03:49,700
props

86
00:03:50,970 --> 00:03:56,890
like this<font color="#E5E5E5"> is the book</font><font color="#CCCCCC"> that everybody who</font>

87
00:03:53,770 --> 00:04:00,370
does<font color="#CCCCCC"> SRE or devops on stuff</font><font color="#E5E5E5"> reads this</font>

88
00:03:56,890 --> 00:04:05,170
<font color="#CCCCCC">is the Sadler AP engineering book</font><font color="#E5E5E5"> from</font>

89
00:04:00,370 --> 00:04:07,870
Google authors<font color="#CCCCCC"> Niall Murphy and others</font>

90
00:04:05,170 --> 00:04:11,980
<font color="#E5E5E5">and they had this for golden signals in</font>

91
00:04:07,870 --> 00:04:14,110
them they are page 60 here they<font color="#E5E5E5"> are for</font>

92
00:04:11,980 --> 00:04:17,920
golden signals<font color="#E5E5E5"> latency it's actually the</font>

93
00:04:14,110 --> 00:04:20,200
first one<font color="#CCCCCC"> and it has latency traffic</font>

94
00:04:17,920 --> 00:04:23,980
<font color="#E5E5E5">errors</font><font color="#CCCCCC"> in saturation and those four</font>

95
00:04:20,200 --> 00:04:26,349
metrics were later like rearranged into

96
00:04:23,980 --> 00:04:28,630
the<font color="#CCCCCC"> red monitoring methodology so if you</font>

97
00:04:26,350 --> 00:04:31,240
<font color="#CCCCCC">wanted</font><font color="#E5E5E5"> monitor api's then recommended</font>

98
00:04:28,630 --> 00:04:34,000
best<font color="#E5E5E5"> practice is actually do</font><font color="#CCCCCC"> red which</font>

99
00:04:31,240 --> 00:04:36,310
is<font color="#E5E5E5"> rate errors and duration integration</font>

100
00:04:34,000 --> 00:04:38,110
is latency<font color="#E5E5E5"> so they took the four signals</font>

101
00:04:36,310 --> 00:04:39,640
then got rid of<font color="#CCCCCC"> one of</font><font color="#E5E5E5"> them</font>

102
00:04:38,110 --> 00:04:42,430
then we arranged them in a different<font color="#E5E5E5"> way</font>

103
00:04:39,640 --> 00:04:44,200
<font color="#E5E5E5">and made an acronym out of this so but</font>

104
00:04:42,430 --> 00:04:47,110
<font color="#E5E5E5">it's still like the best thing I</font>

105
00:04:44,200 --> 00:04:50,080
<font color="#CCCCCC">recommend everyone to</font><font color="#E5E5E5"> do and some many</font>

106
00:04:47,110 --> 00:04:51,910
<font color="#CCCCCC">people agree</font><font color="#E5E5E5"> with me yeah and probably</font>

107
00:04:50,080 --> 00:04:53,710
<font color="#E5E5E5">you all care about latency if you are on</font>

108
00:04:51,910 --> 00:04:58,210
this talk<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> won't actually not so</font>

109
00:04:53,710 --> 00:05:01,120
<font color="#E5E5E5">much more about</font><font color="#CCCCCC"> it so the second part</font><font color="#E5E5E5"> I</font>

110
00:04:58,210 --> 00:05:03,039
should<font color="#E5E5E5"> explain is what is an SLO well</font>

111
00:05:01,120 --> 00:05:05,170
actually if you're monitoring<font color="#E5E5E5"> something</font>

112
00:05:03,040 --> 00:05:06,970
then you want to<font color="#E5E5E5"> have an</font><font color="#CCCCCC"> idea of like</font>

113
00:05:05,170 --> 00:05:09,430
how<font color="#E5E5E5"> should this value actually look like</font>

114
00:05:06,970 --> 00:05:12,880
<font color="#E5E5E5">so you</font><font color="#CCCCCC"> have some metrics and what</font><font color="#E5E5E5"> what</font>

115
00:05:09,430 --> 00:05:14,740
is the expectation and<font color="#CCCCCC"> SLO</font><font color="#E5E5E5"> are kind</font><font color="#CCCCCC"> of a</font>

116
00:05:12,880 --> 00:05:16,750
<font color="#CCCCCC">qualification of the service quality</font>

117
00:05:14,740 --> 00:05:21,570
<font color="#E5E5E5">that you would expect</font><font color="#CCCCCC"> the service to</font>

118
00:05:16,750 --> 00:05:23,860
have and there's methodology also<font color="#E5E5E5"> like</font>

119
00:05:21,570 --> 00:05:25,420
proposed in<font color="#E5E5E5"> this book which</font><font color="#CCCCCC"> they have</font>

120
00:05:23,860 --> 00:05:29,370
also seen in<font color="#CCCCCC"> which what happens talked</font>

121
00:05:25,420 --> 00:05:32,440
before me this<font color="#E5E5E5"> is this SLO SLI and</font><font color="#CCCCCC"> SLA</font>

122
00:05:29,370 --> 00:05:35,800
<font color="#CCCCCC">three three acronyms which are used in</font>

123
00:05:32,440 --> 00:05:39,790
in this context<font color="#CCCCCC"> you start on</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> site</font>

124
00:05:35,800 --> 00:05:41,800
<font color="#E5E5E5">your your service quality measurement by</font>

125
00:05:39,790 --> 00:05:44,110
specifying certain service level

126
00:05:41,800 --> 00:05:46,570
indicator which very concisely<font color="#CCCCCC"> are</font>

127
00:05:44,110 --> 00:05:49,180
measure the reliability<font color="#E5E5E5"> or the quality</font>

128
00:05:46,570 --> 00:05:51,099
<font color="#E5E5E5">of your service in a in a specific way</font>

129
00:05:49,180 --> 00:05:53,530
<font color="#E5E5E5">and then you have service level</font>

130
00:05:51,100 --> 00:05:56,050
objective which are basically a target

131
00:05:53,530 --> 00:06:01,030
valuers<font color="#E5E5E5"> or corridor values you expect</font>

132
00:05:56,050 --> 00:06:04,270
that SL eyes to have throughout the

133
00:06:01,030 --> 00:06:06,609
the duration<font color="#E5E5E5"> of the yeah throughout the</font>

134
00:06:04,270 --> 00:06:09,520
<font color="#E5E5E5">time and the SLO is something that you</font>

135
00:06:06,610 --> 00:06:11,170
might communicate to your users or

136
00:06:09,520 --> 00:06:14,349
internally so you say something<font color="#CCCCCC"> like I</font>

137
00:06:11,170 --> 00:06:17,050
<font color="#CCCCCC">have a 99.9% uptime goal</font><font color="#E5E5E5"> that would</font><font color="#CCCCCC"> be</font>

138
00:06:14,350 --> 00:06:19,240
<font color="#CCCCCC">an</font><font color="#E5E5E5"> example of an SLO but it's important</font>

139
00:06:17,050 --> 00:06:21,730
to<font color="#E5E5E5"> realize that service level objectives</font>

140
00:06:19,240 --> 00:06:23,470
are something that<font color="#E5E5E5"> take place in longer</font>

141
00:06:21,730 --> 00:06:25,330
time spans<font color="#E5E5E5"> it's something that you</font>

142
00:06:23,470 --> 00:06:28,000
manage stuff on so you want to do

143
00:06:25,330 --> 00:06:29,800
management decisions like am<font color="#E5E5E5"> I should I</font>

144
00:06:28,000 --> 00:06:31,720
push out<font color="#E5E5E5"> more features or should I be</font>

145
00:06:29,800 --> 00:06:34,419
more conservative<font color="#E5E5E5"> spent more time in</font>

146
00:06:31,720 --> 00:06:36,730
investing in<font color="#E5E5E5"> reliability of my service</font>

147
00:06:34,419 --> 00:06:39,310
this kind of<font color="#CCCCCC"> trade-offs are managed with</font>

148
00:06:36,730 --> 00:06:43,060
<font color="#CCCCCC">an SLO</font><font color="#E5E5E5"> and it's</font><font color="#CCCCCC"> a real</font><font color="#E5E5E5"> an art and how to</font>

149
00:06:39,310 --> 00:06:46,090
specify good as a<font color="#CCCCCC"> Lowe's</font><font color="#E5E5E5"> and then also</font>

150
00:06:43,060 --> 00:06:47,800
SLA is basically what happens if we

151
00:06:46,090 --> 00:06:49,539
<font color="#E5E5E5">don't need or SLO and this is more a</font>

152
00:06:47,800 --> 00:06:52,660
legal question so I'm actually<font color="#E5E5E5"> not going</font>

153
00:06:49,540 --> 00:06:53,260
<font color="#E5E5E5">to</font><font color="#CCCCCC"> talk much</font><font color="#E5E5E5"> about it</font><font color="#CCCCCC"> here's the first</font>

154
00:06:52,660 --> 00:06:56,440
example

155
00:06:53,260 --> 00:07:00,099
<font color="#CCCCCC">that's an availability SLO so the SLI</font>

156
00:06:56,440 --> 00:07:02,440
here is<font color="#E5E5E5"> I SSH into the target</font><font color="#CCCCCC"> host</font><font color="#E5E5E5"> and I</font>

157
00:07:00,100 --> 00:07:04,180
spit out a<font color="#CCCCCC"> 1 if it's working</font><font color="#E5E5E5"> and I spit</font>

158
00:07:02,440 --> 00:07:06,370
out a<font color="#CCCCCC"> zero if it's not and I do that</font>

159
00:07:04,180 --> 00:07:08,050
every<font color="#CCCCCC"> minute</font><font color="#E5E5E5"> put that into a metric so</font>

160
00:07:06,370 --> 00:07:11,860
that's a<font color="#E5E5E5"> very clear service level</font>

161
00:07:08,050 --> 00:07:16,419
indicator and I have an SLO of a 99.9%

162
00:07:11,860 --> 00:07:19,810
uptime<font color="#E5E5E5"> over the last month so I take a</font>

163
00:07:16,419 --> 00:07:21,549
month of<font color="#E5E5E5"> data I look how many um once</font>

164
00:07:19,810 --> 00:07:23,830
did I have in that<font color="#E5E5E5"> month and how many</font>

165
00:07:21,550 --> 00:07:26,590
<font color="#CCCCCC">zeroes didn't</font><font color="#E5E5E5"> measure and if I have one</font>

166
00:07:23,830 --> 00:07:30,070
more<font color="#E5E5E5"> than 99.9 percent of the time then</font>

167
00:07:26,590 --> 00:07:32,409
the<font color="#CCCCCC"> SLO is</font><font color="#E5E5E5"> net and if I don't meet the</font>

168
00:07:30,070 --> 00:07:36,180
SLO then you will get exactly<font color="#E5E5E5"> one cake</font>

169
00:07:32,410 --> 00:07:39,940
<font color="#CCCCCC">that might be an SLA you follow you can</font>

170
00:07:36,180 --> 00:07:42,700
just<font color="#E5E5E5"> put other incentives here but yeah</font>

171
00:07:39,940 --> 00:07:43,210
it's up to you<font color="#E5E5E5"> what</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> are what</font><font color="#CCCCCC"> they're</font>

172
00:07:42,700 --> 00:07:46,360
<font color="#CCCCCC">doing there</font>

173
00:07:43,210 --> 00:07:48,190
so here's an example<font color="#E5E5E5"> of a latency SLO</font>

174
00:07:46,360 --> 00:07:51,310
which was<font color="#CCCCCC"> unused in precisely this way</font>

175
00:07:48,190 --> 00:07:54,820
<font color="#E5E5E5">in this</font><font color="#CCCCCC"> s</font><font color="#E5E5E5"> our econ workshop I attended</font>

176
00:07:51,310 --> 00:07:56,410
last year the SLI was<font color="#CCCCCC"> um the</font><font color="#E5E5E5"> proportion</font>

177
00:07:54,820 --> 00:07:59,919
of wallet requests that were served

178
00:07:56,410 --> 00:08:02,410
within a second<font color="#E5E5E5"> so this is a metric you</font>

179
00:07:59,919 --> 00:08:05,349
do that every<font color="#CCCCCC"> minute and then the SLO</font>

180
00:08:02,410 --> 00:08:08,710
was 90<font color="#CCCCCC"> percent of the body Twix</font><font color="#E5E5E5"> vests in</font>

181
00:08:05,350 --> 00:08:11,020
<font color="#E5E5E5">the past 28 days</font><font color="#CCCCCC"> so over 28 dates</font><font color="#E5E5E5"> a long</font>

182
00:08:08,710 --> 00:08:13,770
period of<font color="#E5E5E5"> time were served within one</font>

183
00:08:11,020 --> 00:08:13,770
second

184
00:08:15,190 --> 00:08:19,630
yes so you will recognize that kind of

185
00:08:17,620 --> 00:08:21,760
questions from the very start<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

186
00:08:19,630 --> 00:08:23,350
basically the same thing<font color="#CCCCCC"> I asked you how</font>

187
00:08:21,760 --> 00:08:27,760
many requests and we are now asking for

188
00:08:23,350 --> 00:08:30,610
<font color="#E5E5E5">a percentage yeah and SLA was skipped</font>

189
00:08:27,760 --> 00:08:33,010
here<font color="#E5E5E5"> and interestingly they afterwards</font>

190
00:08:30,610 --> 00:08:35,380
they showed you this<font color="#E5E5E5"> data about the API</font>

191
00:08:33,010 --> 00:08:37,330
<font color="#E5E5E5">they showed you percent house and I</font>

192
00:08:35,380 --> 00:08:38,799
guess like<font color="#E5E5E5"> most of you will actually do</font>

193
00:08:37,330 --> 00:08:40,300
<font color="#E5E5E5">percentile based monitoring it's very</font>

194
00:08:38,799 --> 00:08:42,728
common and it's actually what you are

195
00:08:40,299 --> 00:08:45,040
recommended so the story with latency

196
00:08:42,729 --> 00:08:45,520
monitoring or let me<font color="#E5E5E5"> just back</font><font color="#CCCCCC"> up a</font>

197
00:08:45,040 --> 00:08:47,380
little<font color="#E5E5E5"> bit</font>

198
00:08:45,520 --> 00:08:49,960
the problem with<font color="#E5E5E5"> latency monitoring is</font>

199
00:08:47,380 --> 00:08:52,810
that the thing you are<font color="#E5E5E5"> monitoring the</font>

200
00:08:49,960 --> 00:08:55,030
<font color="#E5E5E5">API is inherently a thing that is event</font>

201
00:08:52,810 --> 00:08:57,369
based<font color="#E5E5E5"> here's a tons of events which come</font>

202
00:08:55,030 --> 00:08:59,800
in like many<font color="#CCCCCC"> ten thousands and then</font>

203
00:08:57,370 --> 00:09:02,110
you're trying<font color="#E5E5E5"> to store them in a metric</font>

204
00:08:59,800 --> 00:09:03,729
which is something<font color="#E5E5E5"> you have just a</font>

205
00:09:02,110 --> 00:09:06,160
<font color="#E5E5E5">single value which you're storing for</font>

206
00:09:03,730 --> 00:09:08,260
that the thing<font color="#E5E5E5"> so you basically have to</font>

207
00:09:06,160 --> 00:09:10,240
compress a whole lot information<font color="#CCCCCC"> of</font><font color="#E5E5E5"> ten</font>

208
00:09:08,260 --> 00:09:11,770
<font color="#CCCCCC">thousands events and Layton sees in that</font>

209
00:09:10,240 --> 00:09:14,500
period<font color="#E5E5E5"> of time into a</font><font color="#CCCCCC"> single number</font>

210
00:09:11,770 --> 00:09:17,050
<font color="#E5E5E5">first thing everyone did was averages</font>

211
00:09:14,500 --> 00:09:20,980
let's just do the average latency<font color="#E5E5E5"> that</font>

212
00:09:17,050 --> 00:09:23,079
we have and then<font color="#CCCCCC"> doc you</font><font color="#E5E5E5"> Lu</font><font color="#CCCCCC"> gong from</font>

213
00:09:20,980 --> 00:09:25,180
<font color="#E5E5E5">optimize</font><font color="#CCCCCC"> D world a very</font><font color="#E5E5E5"> nice blog</font>

214
00:09:23,080 --> 00:09:27,580
article which nailed on<font color="#E5E5E5"> the problem with</font>

215
00:09:25,180 --> 00:09:29,920
this<font color="#E5E5E5"> and he said well measuring the</font>

216
00:09:27,580 --> 00:09:33,100
<font color="#E5E5E5">average latency is like measuring the</font>

217
00:09:29,920 --> 00:09:36,459
<font color="#CCCCCC">average temperature of the patients in a</font>

218
00:09:33,100 --> 00:09:38,830
hospital<font color="#E5E5E5"> you don't</font><font color="#CCCCCC"> really care</font><font color="#E5E5E5"> about</font>

219
00:09:36,460 --> 00:09:41,110
<font color="#CCCCCC">that</font><font color="#E5E5E5"> you care about</font><font color="#CCCCCC"> these sick patients</font>

220
00:09:38,830 --> 00:09:43,660
most and so<font color="#E5E5E5"> it's so you want to focus on</font>

221
00:09:41,110 --> 00:09:45,280
this<font color="#E5E5E5"> and then there was the Amazon</font>

222
00:09:43,660 --> 00:09:46,990
dynamo paper which said well yeah

223
00:09:45,280 --> 00:09:48,610
everyone knows<font color="#CCCCCC"> that averages and</font>

224
00:09:46,990 --> 00:09:51,400
standard deviations are for latency

225
00:09:48,610 --> 00:09:53,620
<font color="#E5E5E5">so we do 90th percentile 99th percentile</font>

226
00:09:51,400 --> 00:09:56,230
99.9<font color="#E5E5E5"> percent</font><font color="#CCCCCC"> ow and so</font><font color="#E5E5E5"> this is basically</font>

227
00:09:53,620 --> 00:09:58,360
<font color="#CCCCCC">very currently are so everybody is</font><font color="#E5E5E5"> doing</font>

228
00:09:56,230 --> 00:10:02,020
this<font color="#E5E5E5"> and they had an on the slide and</font>

229
00:09:58,360 --> 00:10:05,530
<font color="#E5E5E5">the question was was the SLO</font><font color="#CCCCCC"> met so you</font>

230
00:10:02,020 --> 00:10:07,090
have<font color="#E5E5E5"> 28</font><font color="#CCCCCC"> days</font><font color="#E5E5E5"> of service here metrics</font><font color="#CCCCCC"> 90%</font>

231
00:10:05,530 --> 00:10:09,459
of the<font color="#CCCCCC"> value</font><font color="#E5E5E5"> while it requests in the</font>

232
00:10:07,090 --> 00:10:11,590
<font color="#E5E5E5">past 28 days were served within one</font>

233
00:10:09,460 --> 00:10:15,280
second<font color="#E5E5E5"> and they asked the audience well</font>

234
00:10:11,590 --> 00:10:21,000
was the SLO met and that<font color="#E5E5E5"> was looks right</font>

235
00:10:15,280 --> 00:10:28,079
there's so there's<font color="#E5E5E5"> 1k milliseconds</font>

236
00:10:21,000 --> 00:10:31,439
<font color="#E5E5E5">that's here</font><font color="#CCCCCC"> and oh yeah</font><font color="#E5E5E5"> I stood</font>

237
00:10:28,079 --> 00:10:35,309
sorry this<font color="#E5E5E5"> is actually this</font><font color="#CCCCCC"> should be</font>

238
00:10:31,439 --> 00:10:37,319
99% but but<font color="#CCCCCC"> never mind so you look at</font>

239
00:10:35,309 --> 00:10:39,118
the 99th percentile<font color="#CCCCCC"> so you know 99</font>

240
00:10:37,319 --> 00:10:41,699
<font color="#CCCCCC">percent of all</font><font color="#E5E5E5"> the requests were below</font>

241
00:10:39,119 --> 00:10:43,470
the 99th percentile and<font color="#E5E5E5"> the question is</font>

242
00:10:41,699 --> 00:10:46,199
for 99 percent<font color="#CCCCCC"> of what it requests</font>

243
00:10:43,470 --> 00:10:49,139
<font color="#E5E5E5">passed served within</font><font color="#CCCCCC"> one second</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> very</font>

244
00:10:46,199 --> 00:10:51,868
tempting to<font color="#E5E5E5"> look at the 1k millisecond</font>

245
00:10:49,139 --> 00:10:53,999
mark here<font color="#E5E5E5"> this is and the 99th</font>

246
00:10:51,869 --> 00:10:55,319
percentile and say well we were below

247
00:10:53,999 --> 00:10:59,819
the<font color="#CCCCCC"> 1 second mark</font>

248
00:10:55,319 --> 00:11:03,839
<font color="#CCCCCC">90% of the time so should be or should</font>

249
00:10:59,819 --> 00:11:06,179
<font color="#CCCCCC">be okay you should be fine but is</font><font color="#E5E5E5"> that</font>

250
00:11:03,839 --> 00:11:09,839
really true<font color="#CCCCCC"> so what if I told you that</font>

251
00:11:06,179 --> 00:11:12,779
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> 99.9% of all the requests</font>

252
00:11:09,839 --> 00:11:14,939
occurred there we don't actually have

253
00:11:12,779 --> 00:11:17,069
the<font color="#E5E5E5"> request count here we don't know</font><font color="#CCCCCC"> and</font>

254
00:11:14,939 --> 00:11:18,509
by the way this is<font color="#E5E5E5"> not how a real</font>

255
00:11:17,069 --> 00:11:21,420
percent of<font color="#E5E5E5"> our metric looks this</font><font color="#CCCCCC"> is how</font>

256
00:11:18,509 --> 00:11:22,980
<font color="#E5E5E5">percentile metric looks this</font><font color="#CCCCCC"> is at least</font>

257
00:11:21,420 --> 00:11:24,660
how our<font color="#CCCCCC"> percentile metric looks I don't</font>

258
00:11:22,980 --> 00:11:26,879
know if you have stuff like<font color="#E5E5E5"> this this is</font>

259
00:11:24,660 --> 00:11:28,889
a very<font color="#E5E5E5"> very well behaved constantly</font>

260
00:11:26,879 --> 00:11:31,559
<font color="#E5E5E5">lowered loaded service this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> something</font>

261
00:11:28,889 --> 00:11:33,480
I have periods<font color="#E5E5E5"> at night here</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> I don't</font>

262
00:11:31,559 --> 00:11:36,209
have<font color="#E5E5E5"> any requests like nobody is using</font>

263
00:11:33,480 --> 00:11:38,100
<font color="#E5E5E5">my service so it's a poor service and if</font>

264
00:11:36,209 --> 00:11:40,979
I take the 99th percentile of<font color="#E5E5E5"> no</font>

265
00:11:38,100 --> 00:11:43,199
requests<font color="#E5E5E5"> it's missing data and down here</font>

266
00:11:40,980 --> 00:11:45,269
I<font color="#E5E5E5"> have</font><font color="#CCCCCC"> maybe five requests and the 90th</font>

267
00:11:43,199 --> 00:11:47,490
percentile is just doesn't<font color="#CCCCCC"> doesn't</font>

268
00:11:45,269 --> 00:11:49,740
do anything so if I look<font color="#E5E5E5"> at this I</font><font color="#CCCCCC"> can</font>

269
00:11:47,490 --> 00:11:54,179
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> not at all plausibly tell you</font>

270
00:11:49,740 --> 00:11:56,429
if<font color="#E5E5E5"> 90%</font><font color="#CCCCCC"> of my data was below that and and</font>

271
00:11:54,179 --> 00:11:58,860
<font color="#CCCCCC">so if you're</font><font color="#E5E5E5"> only doing the percent</font>

272
00:11:56,429 --> 00:12:00,769
house and you<font color="#E5E5E5"> are doing maybe averages</font>

273
00:11:58,860 --> 00:12:04,499
then you actually<font color="#CCCCCC"> have no no way to</font>

274
00:12:00,769 --> 00:12:05,879
determine this kind<font color="#CCCCCC"> of this aloes so</font>

275
00:12:04,499 --> 00:12:09,540
that's the first<font color="#CCCCCC"> realization which is</font>

276
00:12:05,879 --> 00:12:12,209
quite important and it is<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> not</font>

277
00:12:09,540 --> 00:12:14,399
so easy to<font color="#CCCCCC"> communicate and I try to</font><font color="#E5E5E5"> make</font>

278
00:12:12,209 --> 00:12:16,498
that<font color="#E5E5E5"> clear but I constantly have the</font>

279
00:12:14,399 --> 00:12:18,540
discussion and which is basically<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> a</font>

280
00:12:16,499 --> 00:12:21,720
percentile aggregation<font color="#CCCCCC"> problem right</font><font color="#E5E5E5"> so</font>

281
00:12:18,540 --> 00:12:23,969
SLO<font color="#E5E5E5"> asked you compute a percentile over</font>

282
00:12:21,720 --> 00:12:26,009
one<font color="#E5E5E5"> month of data or week of data and</font>

283
00:12:23,970 --> 00:12:29,040
then also<font color="#E5E5E5"> across the service it doesn't</font>

284
00:12:26,009 --> 00:12:31,529
ask<font color="#CCCCCC"> for it is dub-dub-dub</font><font color="#E5E5E5"> one doing so</font>

285
00:12:29,040 --> 00:12:33,990
many requests so<font color="#E5E5E5"> about five it asked to</font>

286
00:12:31,529 --> 00:12:35,999
all web servers<font color="#E5E5E5"> do or that serve the</font>

287
00:12:33,990 --> 00:12:37,649
api's do that<font color="#E5E5E5"> so you need to aggregate</font>

288
00:12:35,999 --> 00:12:39,540
<font color="#E5E5E5">across multiple</font><font color="#CCCCCC"> nodes</font><font color="#E5E5E5"> you need to</font>

289
00:12:37,649 --> 00:12:40,800
aggregate<font color="#E5E5E5"> across multiple weeks</font>

290
00:12:39,540 --> 00:12:43,259
and you just cannot do that with

291
00:12:40,800 --> 00:12:47,459
percentiles<font color="#E5E5E5"> and then people say well</font><font color="#CCCCCC"> I'm</font>

292
00:12:43,259 --> 00:12:50,190
<font color="#CCCCCC">there you can maybe and this is reaction</font>

293
00:12:47,459 --> 00:12:52,469
<font color="#E5E5E5">to my 2016 monitor</font><font color="#CCCCCC"> i'ma talk and John</font>

294
00:12:50,190 --> 00:12:54,449
<font color="#E5E5E5">rouse is a data scientists at</font><font color="#CCCCCC"> snapchat</font>

295
00:12:52,470 --> 00:12:56,910
and<font color="#E5E5E5"> he said well if people like</font>

296
00:12:54,449 --> 00:12:58,800
<font color="#CCCCCC">Heartland say that you can</font><font color="#E5E5E5"> meaning</font>

297
00:12:56,910 --> 00:13:01,769
<font color="#CCCCCC">completely meaningfully</font><font color="#E5E5E5"> aggregate sample</font>

298
00:12:58,800 --> 00:13:03,810
percentiles then yeah I'm<font color="#E5E5E5"> annoyed well</font>

299
00:13:01,769 --> 00:13:05,310
sometimes<font color="#E5E5E5"> you actually can and it went</font>

300
00:13:03,810 --> 00:13:07,589
back<font color="#CCCCCC"> and</font><font color="#E5E5E5"> forth I wrote him a letter I</font>

301
00:13:05,310 --> 00:13:09,449
said yeah John blah blah blah and<font color="#CCCCCC"> then</font>

302
00:13:07,589 --> 00:13:11,220
he said well<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> I wrote a</font><font color="#E5E5E5"> 10 page</font>

303
00:13:09,449 --> 00:13:14,880
blog post in<font color="#E5E5E5"> our showing you that you</font>

304
00:13:11,220 --> 00:13:16,680
<font color="#CCCCCC">can actually aggregate % house</font><font color="#E5E5E5"> and yeah</font>

305
00:13:14,880 --> 00:13:18,540
<font color="#CCCCCC">I so I have the link here you can look</font>

306
00:13:16,680 --> 00:13:20,729
<font color="#E5E5E5">all</font><font color="#CCCCCC"> of this up and it's</font><font color="#E5E5E5"> actually a very</font>

307
00:13:18,540 --> 00:13:21,990
beautiful post<font color="#E5E5E5"> I mean he's really great</font>

308
00:13:20,730 --> 00:13:24,389
<font color="#E5E5E5">in these planes okay</font><font color="#CCCCCC"> if you have</font>

309
00:13:21,990 --> 00:13:26,040
multiple distributions and<font color="#CCCCCC"> you sample</font>

310
00:13:24,389 --> 00:13:27,660
<font color="#CCCCCC">from the same</font><font color="#E5E5E5"> distribution in just</font>

311
00:13:26,040 --> 00:13:28,589
average<font color="#E5E5E5"> percent house then you will get</font>

312
00:13:27,660 --> 00:13:31,529
through percentiles

313
00:13:28,589 --> 00:13:33,029
<font color="#E5E5E5">this is kind of a statistical phenomenon</font>

314
00:13:31,529 --> 00:13:34,649
if<font color="#E5E5E5"> you're sampling data from the same</font>

315
00:13:33,029 --> 00:13:36,930
<font color="#E5E5E5">distribution you will converge your</font>

316
00:13:34,649 --> 00:13:41,220
statistics will converge if you<font color="#E5E5E5"> average</font>

317
00:13:36,930 --> 00:13:43,739
them however<font color="#CCCCCC"> in</font><font color="#E5E5E5"> practice you are not</font>

318
00:13:41,220 --> 00:13:46,649
sampling<font color="#E5E5E5"> data from a similar same</font>

319
00:13:43,740 --> 00:13:48,660
<font color="#CCCCCC">distribution so I don't believe go into</font>

320
00:13:46,649 --> 00:13:51,120
the details about<font color="#E5E5E5"> what's on this chart I</font>

321
00:13:48,660 --> 00:13:52,800
will<font color="#E5E5E5"> do later</font><font color="#CCCCCC"> but I took</font><font color="#E5E5E5"> up some some</font>

322
00:13:51,120 --> 00:13:55,620
production data and I compared a one

323
00:13:52,800 --> 00:13:58,829
other<font color="#E5E5E5"> of one hour average percentile to</font>

324
00:13:55,620 --> 00:14:00,600
a true 90th percentile over one hour<font color="#E5E5E5"> so</font>

325
00:13:58,829 --> 00:14:02,339
one thing I<font color="#CCCCCC"> took all the data computed</font>

326
00:14:00,600 --> 00:14:04,470
the 90th percentile over the full data

327
00:14:02,339 --> 00:14:07,500
for one hour<font color="#E5E5E5"> or I took 1 minute</font>

328
00:14:04,470 --> 00:14:11,550
percentiles and<font color="#CCCCCC"> averaged</font><font color="#E5E5E5"> them and the</font>

329
00:14:07,500 --> 00:14:14,370
results were<font color="#E5E5E5"> 300 percent error and the</font>

330
00:14:11,550 --> 00:14:16,410
worst thing<font color="#E5E5E5"> is usually it's fine</font><font color="#CCCCCC"> like if</font>

331
00:14:14,370 --> 00:14:18,540
you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> 5 nodes which already do kind</font>

332
00:14:16,410 --> 00:14:21,149
of<font color="#CCCCCC"> the same word work and you're</font>

333
00:14:18,540 --> 00:14:23,880
averaging the p90<font color="#E5E5E5"> you've</font><font color="#CCCCCC"> only not match</font>

334
00:14:21,149 --> 00:14:26,399
up<font color="#E5E5E5"> from the</font><font color="#CCCCCC"> the true p90</font><font color="#E5E5E5"> but you have</font>

335
00:14:23,880 --> 00:14:27,959
two nodes one blue and<font color="#CCCCCC"> the red node</font><font color="#E5E5E5"> so</font>

336
00:14:26,399 --> 00:14:29,730
the blue<font color="#CCCCCC"> is doing a lot of</font><font color="#E5E5E5"> work so you</font>

337
00:14:27,959 --> 00:14:31,500
<font color="#E5E5E5">have a really nice distribution it's</font>

338
00:14:29,730 --> 00:14:33,720
very typical latency distribution here

339
00:14:31,500 --> 00:14:37,319
and the second one<font color="#E5E5E5"> doesn't really do a</font>

340
00:14:33,720 --> 00:14:41,100
lot<font color="#CCCCCC"> of work and it's p95 is down here so</font>

341
00:14:37,319 --> 00:14:43,380
the true 395 of the total will be<font color="#E5E5E5"> pretty</font>

342
00:14:41,100 --> 00:14:45,600
<font color="#E5E5E5">close</font><font color="#CCCCCC"> to here because the red one isn't</font>

343
00:14:43,380 --> 00:14:47,819
<font color="#E5E5E5">actually doing</font><font color="#CCCCCC"> that much this might</font><font color="#E5E5E5"> be a</font>

344
00:14:45,600 --> 00:14:49,620
failed service or something that just<font color="#E5E5E5"> up</font>

345
00:14:47,819 --> 00:14:51,930
started up or you have<font color="#CCCCCC"> a problem with a</font>

346
00:14:49,620 --> 00:14:52,590
load balancer<font color="#CCCCCC"> or something so you have</font>

347
00:14:51,930 --> 00:14:57,870
you<font color="#E5E5E5"> have</font>

348
00:14:52,590 --> 00:14:59,580
in like in not a good your service<font color="#CCCCCC"> isn't</font>

349
00:14:57,870 --> 00:15:01,260
in a good<font color="#CCCCCC"> state</font><font color="#E5E5E5"> and if you're</font><font color="#CCCCCC"> doing the</font>

350
00:14:59,580 --> 00:15:03,570
average<font color="#CCCCCC"> then</font><font color="#E5E5E5"> okay he have you have a</font>

351
00:15:01,260 --> 00:15:05,790
like a<font color="#CCCCCC"> thirty</font><font color="#E5E5E5"> percent error or something</font>

352
00:15:03,570 --> 00:15:07,529
so it's substantial<font color="#E5E5E5"> and the the real</font>

353
00:15:05,790 --> 00:15:09,000
problem is that<font color="#E5E5E5"> it works most of the</font>

354
00:15:07,529 --> 00:15:11,130
<font color="#CCCCCC">time but in the situation that you</font>

355
00:15:09,000 --> 00:15:13,610
really care<font color="#E5E5E5"> when something goes wonky</font>

356
00:15:11,130 --> 00:15:15,990
<font color="#E5E5E5">even the</font><font color="#CCCCCC"> disk starts to fail</font><font color="#E5E5E5"> your</font>

357
00:15:13,610 --> 00:15:20,760
aggregated<font color="#E5E5E5"> percentiles will be terribly</font>

358
00:15:15,990 --> 00:15:23,310
<font color="#E5E5E5">off so yeah I hope I convinced you that</font>

359
00:15:20,760 --> 00:15:25,230
<font color="#E5E5E5">it percentiles</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot immediate and to be</font>

360
00:15:23,310 --> 00:15:27,959
completely fair<font color="#CCCCCC"> the Google guys didn't</font>

361
00:15:25,230 --> 00:15:30,270
actually take<font color="#E5E5E5"> an percentile metric as an</font>

362
00:15:27,960 --> 00:15:31,890
SLI<font color="#E5E5E5"> but it's something else they</font><font color="#CCCCCC"> they</font>

363
00:15:30,270 --> 00:15:33,449
did a proportion of the<font color="#E5E5E5"> run</font><font color="#CCCCCC"> eight</font>

364
00:15:31,890 --> 00:15:36,029
requests which were<font color="#E5E5E5"> serfdom on one</font>

365
00:15:33,450 --> 00:15:38,420
second<font color="#E5E5E5"> and this is precisely the first</font>

366
00:15:36,029 --> 00:15:41,130
metric<font color="#E5E5E5"> method on</font><font color="#CCCCCC"> how you can do</font><font color="#E5E5E5"> it right</font>

367
00:15:38,420 --> 00:15:46,740
<font color="#CCCCCC">so I</font><font color="#E5E5E5"> will talk</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> three ways</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do it</font>

368
00:15:41,130 --> 00:15:48,390
<font color="#E5E5E5">right the first one is count of not data</font>

369
00:15:46,740 --> 00:15:55,380
the second one is<font color="#CCCCCC"> kilometer metrics and</font>

370
00:15:48,390 --> 00:15:58,380
the third one<font color="#E5E5E5"> is histogram metrics so if</font>

371
00:15:55,380 --> 00:16:00,540
you have<font color="#E5E5E5"> LOC data if you have</font><font color="#CCCCCC"> Splunk</font><font color="#E5E5E5"> for</font>

372
00:15:58,380 --> 00:16:02,640
half a<font color="#CCCCCC"> year then</font><font color="#E5E5E5"> you can actually</font><font color="#CCCCCC"> answer</font>

373
00:16:00,540 --> 00:16:05,459
this<font color="#E5E5E5"> kind of crew this kind of questions</font>

374
00:16:02,640 --> 00:16:07,830
<font color="#E5E5E5">very easily you can say well select</font>

375
00:16:05,460 --> 00:16:10,290
everything from logs where the time<font color="#CCCCCC"> is</font>

376
00:16:07,830 --> 00:16:12,570
in some time box and the latency<font color="#CCCCCC"> is</font>

377
00:16:10,290 --> 00:16:14,790
below a threshold<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you would say</font><font color="#CCCCCC"> okay</font>

378
00:16:12,570 --> 00:16:16,680
you<font color="#E5E5E5"> don't have an SQL query interface</font>

379
00:16:14,790 --> 00:16:18,420
for your logs<font color="#CCCCCC"> you might</font><font color="#E5E5E5"> have another</font>

380
00:16:16,680 --> 00:16:20,939
query language but this is<font color="#E5E5E5"> essentially</font>

381
00:16:18,420 --> 00:16:22,770
<font color="#E5E5E5">what that is you just put your all your</font>

382
00:16:20,940 --> 00:16:25,080
logs<font color="#E5E5E5"> in the data store</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have a field</font>

383
00:16:22,770 --> 00:16:26,760
<font color="#E5E5E5">for the latency and then you you career</font>

384
00:16:25,080 --> 00:16:29,250
with that<font color="#E5E5E5"> and and you can can do that</font>

385
00:16:26,760 --> 00:16:31,290
with the log tools and in this way<font color="#E5E5E5"> are</font>

386
00:16:29,250 --> 00:16:33,390
the original<font color="#E5E5E5"> question I will go back to</font>

387
00:16:31,290 --> 00:16:36,870
<font color="#E5E5E5">that how many</font><font color="#CCCCCC"> requests were served in</font>

388
00:16:33,390 --> 00:16:39,930
January<font color="#E5E5E5"> within 180 milliseconds just go</font>

389
00:16:36,870 --> 00:16:41,970
<font color="#CCCCCC">and count them do you have</font><font color="#E5E5E5"> everything so</font>

390
00:16:39,930 --> 00:16:44,550
it's it's great<font color="#E5E5E5"> if you</font><font color="#CCCCCC"> can do that it's</font>

391
00:16:41,970 --> 00:16:46,260
correct it's clean it easy<font color="#E5E5E5"> problem is</font>

392
00:16:44,550 --> 00:16:48,750
that you need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep all your log data</font>

393
00:16:46,260 --> 00:16:51,480
for<font color="#E5E5E5"> a month which can be very expensive</font>

394
00:16:48,750 --> 00:16:53,790
<font color="#CCCCCC">and every Splunk customer knows this</font><font color="#E5E5E5"> and</font>

395
00:16:51,480 --> 00:16:56,130
the<font color="#E5E5E5"> problem is not really that Splunk is</font>

396
00:16:53,790 --> 00:16:58,980
ripping you off<font color="#E5E5E5"> that might be also the</font>

397
00:16:56,130 --> 00:17:01,170
<font color="#CCCCCC">case but it's not</font><font color="#E5E5E5"> the main reason</font><font color="#CCCCCC"> it's</font>

398
00:16:58,980 --> 00:17:02,700
that it's just a child a lot<font color="#E5E5E5"> of data for</font>

399
00:17:01,170 --> 00:17:04,770
<font color="#E5E5E5">every request you have</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> log line which</font>

400
00:17:02,700 --> 00:17:05,800
is<font color="#CCCCCC"> maybe 80 or</font><font color="#E5E5E5"> 100 bytes and you have to</font>

401
00:17:04,770 --> 00:17:07,810
store<font color="#E5E5E5"> all of this for every week</font>

402
00:17:05,800 --> 00:17:09,940
so if it's<font color="#E5E5E5"> meaningful volume like a</font>

403
00:17:07,810 --> 00:17:10,690
thousand requests a minute or 10,000

404
00:17:09,940 --> 00:17:12,520
requests per minute

405
00:17:10,690 --> 00:17:16,240
this is gigabytes and<font color="#E5E5E5"> give about the day</font>

406
00:17:12,520 --> 00:17:17,680
so it's just by design very expensive

407
00:17:16,240 --> 00:17:22,030
and<font color="#E5E5E5"> very few people can</font><font color="#CCCCCC"> actually afford</font>

408
00:17:17,680 --> 00:17:25,810
<font color="#CCCCCC">to keep unlock data for very long so the</font>

409
00:17:22,030 --> 00:17:28,210
second<font color="#E5E5E5"> thing is this is called counter</font>

410
00:17:25,810 --> 00:17:30,909
metrics<font color="#E5E5E5"> so it's also</font><font color="#CCCCCC"> very simple so</font>

411
00:17:28,210 --> 00:17:32,560
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> interested now in</font><font color="#CCCCCC"> the 1 second</font>

412
00:17:30,910 --> 00:17:35,350
threshold<font color="#E5E5E5"> I want to know how many</font>

413
00:17:32,560 --> 00:17:38,080
requests were served within<font color="#CCCCCC"> 1 second</font><font color="#E5E5E5"> so</font>

414
00:17:35,350 --> 00:17:41,080
I make a new<font color="#E5E5E5"> metric and the common name</font>

415
00:17:38,080 --> 00:17:43,780
for<font color="#E5E5E5"> this is um LT</font><font color="#CCCCCC"> low a</font><font color="#E5E5E5"> - one second</font>

416
00:17:41,080 --> 00:17:45,399
here<font color="#E5E5E5"> for less than and I just count how</font>

417
00:17:43,780 --> 00:17:47,920
<font color="#CCCCCC">many requests were</font><font color="#E5E5E5"> served</font>

418
00:17:45,400 --> 00:17:49,870
faster<font color="#E5E5E5"> than 1 second pretty easy so I</font>

419
00:17:47,920 --> 00:17:52,090
add a new metric<font color="#E5E5E5"> do that for</font><font color="#CCCCCC"> each note</font>

420
00:17:49,870 --> 00:17:53,679
<font color="#E5E5E5">and the beautiful thing</font><font color="#CCCCCC"> is now it has</font>

421
00:17:52,090 --> 00:17:55,659
become merged<font color="#E5E5E5"> all it has become</font>

422
00:17:53,680 --> 00:17:57,340
aggregate able so the percentiles I

423
00:17:55,660 --> 00:18:00,010
couldn't do the aggregation<font color="#E5E5E5"> with the</font>

424
00:17:57,340 --> 00:18:02,080
counters I can<font color="#E5E5E5"> just sum them and I can</font>

425
00:18:00,010 --> 00:18:05,560
integrate them over time<font color="#E5E5E5"> and this is</font><font color="#CCCCCC"> how</font>

426
00:18:02,080 --> 00:18:07,540
it will<font color="#E5E5E5"> look so I have here the in black</font>

427
00:18:05,560 --> 00:18:10,570
the<font color="#CCCCCC"> Total Request count</font><font color="#E5E5E5"> in red I have</font>

428
00:18:07,540 --> 00:18:12,850
the<font color="#CCCCCC"> Clos bequests and then I can</font><font color="#E5E5E5"> select</font>

429
00:18:10,570 --> 00:18:17,080
the time frame<font color="#E5E5E5"> and I I can here</font>

430
00:18:12,850 --> 00:18:20,409
integrate the the graph<font color="#E5E5E5"> so I will just</font>

431
00:18:17,080 --> 00:18:23,740
sum up every line I have and I arrive at

432
00:18:20,410 --> 00:18:25,150
some numbers which are<font color="#E5E5E5"> the like I don't</font>

433
00:18:23,740 --> 00:18:27,640
have<font color="#E5E5E5"> a laser pointer with me but it's</font>

434
00:18:25,150 --> 00:18:30,910
the the<font color="#CCCCCC"> two line graphs which come up</font>

435
00:18:27,640 --> 00:18:34,390
high at the<font color="#CCCCCC"> very end so 8.9% no requests</font>

436
00:18:30,910 --> 00:18:37,990
<font color="#E5E5E5">so for this API my SLA was met so</font><font color="#CCCCCC"> 90%</font>

437
00:18:34,390 --> 00:18:39,430
should<font color="#E5E5E5"> be a fast so latency</font><font color="#CCCCCC"> s allows for</font>

438
00:18:37,990 --> 00:18:40,900
a counter metric<font color="#E5E5E5"> they are easy they</font><font color="#CCCCCC"> are</font>

439
00:18:39,430 --> 00:18:42,430
correct they<font color="#CCCCCC"> are cost effective because</font>

440
00:18:40,900 --> 00:18:44,560
<font color="#E5E5E5">you're not storing a</font><font color="#CCCCCC"> lot</font><font color="#E5E5E5"> of log data</font>

441
00:18:42,430 --> 00:18:46,600
<font color="#E5E5E5">they give you full flexibility in</font>

442
00:18:44,560 --> 00:18:48,580
choosing aggregation intervals<font color="#E5E5E5"> note</font><font color="#CCCCCC"> that</font>

443
00:18:46,600 --> 00:18:51,219
you can here freely<font color="#E5E5E5"> select time ranges</font>

444
00:18:48,580 --> 00:18:52,629
and you can freely select like the

445
00:18:51,220 --> 00:18:55,300
number<font color="#E5E5E5"> of</font><font color="#CCCCCC"> nodes you're aggregating over</font>

446
00:18:52,630 --> 00:18:58,120
but you need to choose your latency

447
00:18:55,300 --> 00:19:00,100
thresholds<font color="#E5E5E5"> upfront you had the</font>

448
00:18:58,120 --> 00:19:02,169
<font color="#CCCCCC">hard-coded the</font><font color="#E5E5E5"> one-second clear key</font>

449
00:19:00,100 --> 00:19:03,909
thing<font color="#CCCCCC"> here and many people have</font><font color="#E5E5E5"> that do</font>

450
00:19:02,170 --> 00:19:06,460
that seriously<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> - precisely this</font>

451
00:19:03,910 --> 00:19:07,450
they<font color="#E5E5E5"> just hard code a bunch of latency</font>

452
00:19:06,460 --> 00:19:10,240
thresholds and<font color="#CCCCCC"> they do</font>

453
00:19:07,450 --> 00:19:12,900
<font color="#CCCCCC">metrics for them</font><font color="#E5E5E5"> cloud-free has examples</font>

454
00:19:10,240 --> 00:19:16,300
where to do 1,000 specials<font color="#E5E5E5"> for each API</font>

455
00:19:12,900 --> 00:19:18,700
not for all the api's but for those that

456
00:19:16,300 --> 00:19:19,270
<font color="#CCCCCC">the monitor like this</font><font color="#E5E5E5"> so afterwards they</font>

457
00:19:18,700 --> 00:19:22,030
<font color="#CCCCCC">can</font>

458
00:19:19,270 --> 00:19:24,960
should he<font color="#CCCCCC"> just select the right latency</font>

459
00:19:22,030 --> 00:19:27,730
threshold<font color="#E5E5E5"> a they might be</font><font color="#CCCCCC"> interested in</font>

460
00:19:24,960 --> 00:19:29,500
the<font color="#E5E5E5"> other technology called HDR</font>

461
00:19:27,730 --> 00:19:31,780
histograms which allow you to<font color="#CCCCCC"> do better</font>

462
00:19:29,500 --> 00:19:33,850
and the basic idea<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> instead</font><font color="#CCCCCC"> of</font>

463
00:19:31,780 --> 00:19:36,760
storing<font color="#E5E5E5"> the individual durations like</font>

464
00:19:33,850 --> 00:19:41,530
here<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> Log form or</font><font color="#E5E5E5"> something we store</font>

465
00:19:36,760 --> 00:19:43,450
the histogram representation of them<font color="#E5E5E5"> so</font>

466
00:19:41,530 --> 00:19:45,360
we put them into bins and<font color="#E5E5E5"> then we just</font>

467
00:19:43,450 --> 00:19:47,800
count<font color="#E5E5E5"> how many samples were in a bin and</font>

468
00:19:45,360 --> 00:19:49,689
then<font color="#E5E5E5"> we apply one</font><font color="#CCCCCC"> more trick this would</font>

469
00:19:47,800 --> 00:19:51,220
be very<font color="#E5E5E5"> very similar to</font><font color="#CCCCCC"> what loudly</font><font color="#E5E5E5"> I</font>

470
00:19:49,690 --> 00:19:53,860
<font color="#E5E5E5">did with their ten</font><font color="#CCCCCC"> thousands or a</font>

471
00:19:51,220 --> 00:19:55,840
thousand metrics we just don't store

472
00:19:53,860 --> 00:19:59,169
stuff that<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> have any samples in</font>

473
00:19:55,840 --> 00:20:02,520
it<font color="#CCCCCC"> so here's a pin from 2100</font><font color="#E5E5E5"> to 2200 and</font>

474
00:19:59,170 --> 00:20:06,160
we don't store that so we lose we use a

475
00:20:02,520 --> 00:20:10,540
sparse encoding for that<font color="#CCCCCC"> and this way we</font>

476
00:20:06,160 --> 00:20:14,940
can<font color="#E5E5E5"> get away with very very low storage</font>

477
00:20:10,540 --> 00:20:18,340
requirements and very a broad<font color="#E5E5E5"> range of</font>

478
00:20:14,940 --> 00:20:20,440
<font color="#E5E5E5">of data coverage so we</font><font color="#CCCCCC"> can basically</font>

479
00:20:18,340 --> 00:20:25,559
cover<font color="#E5E5E5"> the whole float range from</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> to</font>

480
00:20:20,440 --> 00:20:29,230
the<font color="#E5E5E5"> plus minus 128 with 46,000 pins and</font>

481
00:20:25,559 --> 00:20:31,690
and still just<font color="#E5E5E5"> to</font><font color="#CCCCCC"> three hundred bytes</font>

482
00:20:29,230 --> 00:20:33,520
per histograms<font color="#CCCCCC"> so it's it's a metric</font><font color="#E5E5E5"> but</font>

483
00:20:31,690 --> 00:20:34,780
it stores much more than just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> single</font>

484
00:20:33,520 --> 00:20:39,580
value<font color="#E5E5E5"> it stores the full distribution</font>

485
00:20:34,780 --> 00:20:41,440
<font color="#E5E5E5">and so this is how it looks like</font><font color="#CCCCCC"> so for</font>

486
00:20:39,580 --> 00:20:43,659
each point in time we<font color="#E5E5E5"> not only have one</font>

487
00:20:41,440 --> 00:20:46,420
percentile or<font color="#E5E5E5"> one average we</font><font color="#CCCCCC"> have to</font>

488
00:20:43,660 --> 00:20:48,429
pull histogram and then we can go and

489
00:20:46,420 --> 00:20:51,820
aggregate<font color="#CCCCCC"> it freely</font><font color="#E5E5E5"> and this is just I</font>

490
00:20:48,429 --> 00:20:53,950
selected a time frame<font color="#E5E5E5"> and then I can</font>

491
00:20:51,820 --> 00:20:55,960
just<font color="#E5E5E5"> view the complete distribution and</font>

492
00:20:53,950 --> 00:20:58,420
then at the very end<font color="#CCCCCC"> I can do my latency</font>

493
00:20:55,960 --> 00:21:03,010
SLO very easy<font color="#E5E5E5"> I just go select something</font>

494
00:20:58,420 --> 00:21:05,290
<font color="#E5E5E5">here</font><font color="#CCCCCC"> and then I have 43 of 40 million</font>

495
00:21:03,010 --> 00:21:09,100
total<font color="#E5E5E5"> requests in that time span of a</font>

496
00:21:05,290 --> 00:21:10,629
month<font color="#E5E5E5"> and I hover over</font><font color="#CCCCCC"> this in a</font><font color="#E5E5E5"> CL</font><font color="#CCCCCC"> 89</font>

497
00:21:09,100 --> 00:21:13,689
<font color="#E5E5E5">point</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> percent of my requests</font><font color="#CCCCCC"> were</font>

498
00:21:10,630 --> 00:21:15,010
faster<font color="#CCCCCC"> and this</font><font color="#E5E5E5"> is pretty eye-opening if</font>

499
00:21:13,690 --> 00:21:18,100
you have that kind of<font color="#E5E5E5"> technology</font>

500
00:21:15,010 --> 00:21:20,800
available<font color="#CCCCCC"> so here I have a demo</font><font color="#E5E5E5"> I select</font>

501
00:21:18,100 --> 00:21:24,370
a date range like like say<font color="#CCCCCC"> 2 weeks here</font>

502
00:21:20,800 --> 00:21:27,340
<font color="#E5E5E5">I do set and here's the updated thing</font>

503
00:21:24,370 --> 00:21:30,870
and<font color="#CCCCCC"> it just can</font><font color="#E5E5E5"> check well</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> here my my</font>

504
00:21:27,340 --> 00:21:34,330
latency below 27<font color="#E5E5E5"> millisecond was</font>

505
00:21:30,870 --> 00:21:38,139
69%<font color="#E5E5E5"> and I can do that on</font><font color="#CCCCCC"> high-volume</font>

506
00:21:34,330 --> 00:21:41,860
api's so this are<font color="#CCCCCC"> actually this i/o</font>

507
00:21:38,140 --> 00:21:43,420
block<font color="#CCCCCC"> Ionian C's over a month</font><font color="#E5E5E5"> so it's</font>

508
00:21:41,860 --> 00:21:47,379
<font color="#E5E5E5">not a highly loaded system but you see</font>

509
00:21:43,420 --> 00:21:49,030
three<font color="#E5E5E5"> different</font><font color="#CCCCCC"> discs they each do</font><font color="#E5E5E5"> i oh</font>

510
00:21:47,380 --> 00:21:51,280
log i/o requests and<font color="#CCCCCC"> i can see the</font>

511
00:21:49,030 --> 00:21:52,810
<font color="#E5E5E5">latency distribution of all of them so</font>

512
00:21:51,280 --> 00:21:55,570
with this kind of technology you cannot

513
00:21:52,810 --> 00:21:59,020
only<font color="#E5E5E5"> monitor that api's you can do</font><font color="#CCCCCC"> an</font>

514
00:21:55,570 --> 00:22:02,080
<font color="#CCCCCC">o-level</font><font color="#E5E5E5"> system api's like Cisco's or or</font>

515
00:21:59,020 --> 00:22:04,750
<font color="#E5E5E5">block I all agencies and and still do</font>

516
00:22:02,080 --> 00:22:08,409
<font color="#E5E5E5">aggregate a</font><font color="#CCCCCC"> silos of them so it's</font><font color="#E5E5E5"> not</font>

517
00:22:04,750 --> 00:22:10,990
<font color="#E5E5E5">hard</font><font color="#CCCCCC"> so we actually have two commercial</font>

518
00:22:08,410 --> 00:22:13,200
products<font color="#CCCCCC"> on the conus and our DB NDB is</font>

519
00:22:10,990 --> 00:22:16,900
<font color="#E5E5E5">a time series database which is fully</font>

520
00:22:13,200 --> 00:22:21,010
histogram capable and<font color="#CCCCCC"> soo Kona's is a</font>

521
00:22:16,900 --> 00:22:22,540
SAS monitoring tool<font color="#CCCCCC"> both are</font><font color="#E5E5E5"> as a full</font>

522
00:22:21,010 --> 00:22:24,129
system not open<font color="#E5E5E5"> source but they have a</font>

523
00:22:22,540 --> 00:22:26,379
<font color="#E5E5E5">very</font><font color="#CCCCCC"> generous free tier</font><font color="#E5E5E5"> so you're</font>

524
00:22:24,130 --> 00:22:28,720
<font color="#E5E5E5">welcome to try</font><font color="#CCCCCC"> and the core technologies</font>

525
00:22:26,380 --> 00:22:30,250
behind histograms<font color="#E5E5E5"> are open sourced</font><font color="#CCCCCC"> so</font>

526
00:22:28,720 --> 00:22:32,770
there<font color="#E5E5E5"> are two open source histogram</font>

527
00:22:30,250 --> 00:22:35,080
libraries one developed by zucchini from

528
00:22:32,770 --> 00:22:37,120
as well systems which is an<font color="#E5E5E5"> early</font>

529
00:22:35,080 --> 00:22:38,800
proponent of how to measure latency has

530
00:22:37,120 --> 00:22:41,199
an<font color="#E5E5E5"> excellent talk on this so if you're</font>

531
00:22:38,800 --> 00:22:43,240
more into that problem<font color="#E5E5E5"> of how to do</font>

532
00:22:41,200 --> 00:22:44,830
actually it's subtle benchmarking of

533
00:22:43,240 --> 00:22:46,960
<font color="#E5E5E5">latency you</font><font color="#CCCCCC"> should definitely watch that</font>

534
00:22:44,830 --> 00:22:48,909
and<font color="#E5E5E5"> he came up which is</font><font color="#CCCCCC"> 8-hd our</font>

535
00:22:46,960 --> 00:22:50,950
histogram name and we have a very very

536
00:22:48,910 --> 00:22:55,240
similar<font color="#E5E5E5"> thing are called lip circle hist</font>

537
00:22:50,950 --> 00:23:00,100
which we use in our<font color="#CCCCCC"> products so yeah I</font>

538
00:22:55,240 --> 00:23:02,470
<font color="#E5E5E5">just want to tell</font><font color="#CCCCCC"> you right percent how</font>

539
00:23:00,100 --> 00:23:03,879
metrics<font color="#E5E5E5"> are not suitable for</font><font color="#CCCCCC"> SLO so if</font>

540
00:23:02,470 --> 00:23:05,560
you want<font color="#E5E5E5"> to take that away</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> if</font>

541
00:23:03,880 --> 00:23:09,220
you just have<font color="#E5E5E5"> percent house then it's</font>

542
00:23:05,560 --> 00:23:12,580
not good enough<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do us loz you can</font>

543
00:23:09,220 --> 00:23:14,740
actually if you want<font color="#E5E5E5"> HDR histograms are</font>

544
00:23:12,580 --> 00:23:19,449
just the ultimate<font color="#E5E5E5"> answer that I know and</font>

545
00:23:14,740 --> 00:23:21,460
you should try it<font color="#E5E5E5"> out if you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> if you</font>

546
00:23:19,450 --> 00:23:23,380
don't have HD high histograms<font color="#CCCCCC"> that the</font>

547
00:23:21,460 --> 00:23:25,780
following<font color="#E5E5E5"> thing is effective and can be</font>

548
00:23:23,380 --> 00:23:27,550
done and it's not<font color="#E5E5E5"> bad practice so you</font>

549
00:23:25,780 --> 00:23:29,800
store lock data<font color="#CCCCCC"> usually for three to</font>

550
00:23:27,550 --> 00:23:31,240
<font color="#CCCCCC">five</font><font color="#E5E5E5"> days have that available and there</font>

551
00:23:29,800 --> 00:23:33,010
you<font color="#E5E5E5"> can do the first method you can</font>

552
00:23:31,240 --> 00:23:35,050
freely choose your thresholds you<font color="#E5E5E5"> can</font>

553
00:23:33,010 --> 00:23:37,390
experiment with this<font color="#E5E5E5"> determine what our</font>

554
00:23:35,050 --> 00:23:39,520
sensible service levels for you<font color="#E5E5E5"> so is it</font>

555
00:23:37,390 --> 00:23:41,200
one second is at 100 seconds what is<font color="#E5E5E5"> my</font>

556
00:23:39,520 --> 00:23:43,460
typical<font color="#E5E5E5"> performance</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> you can do in</font>

557
00:23:41,200 --> 00:23:44,720
the<font color="#E5E5E5"> first three to five days of data</font>

558
00:23:43,460 --> 00:23:47,060
and then you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> adding the</font>

559
00:23:44,720 --> 00:23:49,190
instrumentation<font color="#E5E5E5"> for the counter metrics</font>

560
00:23:47,060 --> 00:23:52,210
you do less<font color="#CCCCCC"> than 100 seconds what less</font>

561
00:23:49,190 --> 00:23:54,800
<font color="#CCCCCC">than a second less than</font><font color="#E5E5E5"> 200 seconds and</font>

562
00:23:52,210 --> 00:23:57,020
then<font color="#E5E5E5"> aggregate those metrics over weeks</font>

563
00:23:54,800 --> 00:23:58,850
and<font color="#CCCCCC"> months as needed</font><font color="#E5E5E5"> with with the tools</font>

564
00:23:57,020 --> 00:24:00,500
<font color="#E5E5E5">you have it's a little bit of a pity</font>

565
00:23:58,850 --> 00:24:04,639
that<font color="#E5E5E5"> that you have to do this</font><font color="#CCCCCC"> upfront</font>

566
00:24:00,500 --> 00:24:06,170
<font color="#E5E5E5">choices but yeah as I said this is</font><font color="#CCCCCC"> how</font>

567
00:24:04,640 --> 00:24:08,810
it works<font color="#E5E5E5"> and this is actually how</font>

568
00:24:06,170 --> 00:24:10,430
Prometheus histograms work<font color="#E5E5E5"> they've many</font>

569
00:24:08,810 --> 00:24:12,290
vendors<font color="#E5E5E5"> have started to use the term</font>

570
00:24:10,430 --> 00:24:14,090
histogram but they really do is they

571
00:24:12,290 --> 00:24:16,460
<font color="#CCCCCC">just allow you to specify a bunch</font><font color="#E5E5E5"> of</font>

572
00:24:14,090 --> 00:24:17,899
thresholds<font color="#CCCCCC"> so which is</font><font color="#E5E5E5"> HDR histogram</font>

573
00:24:16,460 --> 00:24:19,880
technology you don't<font color="#E5E5E5"> need this</font><font color="#CCCCCC"> upfront</font>

574
00:24:17,900 --> 00:24:21,560
choice you have<font color="#CCCCCC"> 40,000</font><font color="#E5E5E5"> pins and you're</font>

575
00:24:19,880 --> 00:24:23,690
just basically covering the whole range

576
00:24:21,560 --> 00:24:27,830
<font color="#E5E5E5">you</font><font color="#CCCCCC"> are you ever want without</font><font color="#E5E5E5"> any</font>

577
00:24:23,690 --> 00:24:29,900
<font color="#E5E5E5">upfront choices so yeah so in my opinion</font>

578
00:24:27,830 --> 00:24:30,860
<font color="#CCCCCC">that's the best way to do arbitrary</font>

579
00:24:29,900 --> 00:24:32,660
latency<font color="#CCCCCC"> SLO</font>

580
00:24:30,860 --> 00:24:35,060
for high-volume<font color="#E5E5E5"> api's or what have you</font>

581
00:24:32,660 --> 00:24:37,520
<font color="#CCCCCC">and</font><font color="#E5E5E5"> here are some some other correct</font>

582
00:24:35,060 --> 00:24:38,990
ways to do it<font color="#E5E5E5"> but please be careful with</font>

583
00:24:37,520 --> 00:24:40,910
<font color="#E5E5E5">the percentile metrics vague they give</font>

584
00:24:38,990 --> 00:24:43,220
you a good impression<font color="#E5E5E5"> of how API is</font>

585
00:24:40,910 --> 00:24:45,530
doing but actually<font color="#CCCCCC"> doing math on them is</font>

586
00:24:43,220 --> 00:24:49,400
very very<font color="#E5E5E5"> hard they are</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> just a very</font>

587
00:24:45,530 --> 00:24:52,370
like kind statistics in a way that this

588
00:24:49,400 --> 00:24:53,900
it's it's not easy to aggregate them<font color="#E5E5E5"> so</font>

589
00:24:52,370 --> 00:24:55,729
with this I'm going to close<font color="#CCCCCC"> thank you</font>

590
00:24:53,900 --> 00:24:56,990
<font color="#E5E5E5">very much for attention and I</font><font color="#CCCCCC"> think</font>

591
00:24:55,730 --> 00:24:59,440
we'll<font color="#E5E5E5"> have</font><font color="#CCCCCC"> two minutes for</font><font color="#E5E5E5"> questions or</font>

592
00:24:56,990 --> 00:24:59,440
<font color="#E5E5E5">something right</font>

593
00:25:03,670 --> 00:25:15,040
please remain seated<font color="#CCCCCC"> please remain</font>

594
00:25:06,160 --> 00:25:18,100
seated<font color="#E5E5E5"> during questions</font><font color="#CCCCCC"> hello yeah</font><font color="#E5E5E5"> if</font>

595
00:25:15,040 --> 00:25:21,070
you don't have fully<font color="#CCCCCC"> story</font><font color="#E5E5E5"> logs or full</font>

596
00:25:18,100 --> 00:25:24,669
<font color="#E5E5E5">Easter grams can you Berta just the</font>

597
00:25:21,070 --> 00:25:29,129
usual<font color="#CCCCCC"> volume contour and a regular</font>

598
00:25:24,670 --> 00:25:32,520
sampling of the latency<font color="#CCCCCC"> can you</font>

599
00:25:29,130 --> 00:25:36,960
approximate something correct by

600
00:25:32,520 --> 00:25:40,360
multiplying<font color="#CCCCCC"> x'</font><font color="#E5E5E5"> latency the latency</font>

601
00:25:36,960 --> 00:25:45,280
<font color="#E5E5E5">samples by the volume of requests during</font>

602
00:25:40,360 --> 00:25:47,620
the period<font color="#CCCCCC"> I don't know if I understand</font>

603
00:25:45,280 --> 00:25:49,180
the question<font color="#E5E5E5"> correctly</font><font color="#CCCCCC"> so the first</font>

604
00:25:47,620 --> 00:25:52,300
question<font color="#E5E5E5"> was about subsampling right if</font>

605
00:25:49,180 --> 00:25:55,900
<font color="#CCCCCC">a block</font><font color="#E5E5E5"> data</font><font color="#CCCCCC"> I just take</font><font color="#E5E5E5"> it yeah you you</font>

606
00:25:52,300 --> 00:26:00,220
have your<font color="#E5E5E5"> the usual metrology system</font>

607
00:25:55,900 --> 00:26:04,120
that measures<font color="#E5E5E5"> a number</font><font color="#CCCCCC"> request and then</font>

608
00:26:00,220 --> 00:26:06,880
you have some<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> probe samplers</font>

609
00:26:04,120 --> 00:26:08,979
that<font color="#E5E5E5"> measures</font><font color="#CCCCCC"> the weapons see you every</font>

610
00:26:06,880 --> 00:26:13,120
once in a<font color="#CCCCCC"> while okay next time a pro</font>

611
00:26:08,980 --> 00:26:14,860
yeah<font color="#E5E5E5"> with external probes them so the</font>

612
00:26:13,120 --> 00:26:16,989
question was<font color="#E5E5E5"> can I cook something up</font>

613
00:26:14,860 --> 00:26:20,500
with<font color="#E5E5E5"> having the</font><font color="#CCCCCC"> total request count</font><font color="#E5E5E5"> and</font>

614
00:26:16,990 --> 00:26:21,610
the external external probe latency<font color="#CCCCCC"> so</font>

615
00:26:20,500 --> 00:26:23,080
the first thing I'm<font color="#CCCCCC"> going to say it's</font>

616
00:26:21,610 --> 00:26:25,300
good to<font color="#CCCCCC"> have external probe latency</font>

617
00:26:23,080 --> 00:26:26,740
because<font color="#E5E5E5"> the internally measured latency</font>

618
00:26:25,300 --> 00:26:28,090
and<font color="#CCCCCC"> the externally measured latency can</font>

619
00:26:26,740 --> 00:26:30,100
be quite<font color="#E5E5E5"> different it's good to also</font>

620
00:26:28,090 --> 00:26:31,629
<font color="#E5E5E5">have external probes but the main</font>

621
00:26:30,100 --> 00:26:33,969
<font color="#E5E5E5">problem with external probes is that</font>

622
00:26:31,630 --> 00:26:35,260
they are usually not representative you

623
00:26:33,970 --> 00:26:37,270
see have a<font color="#CCCCCC"> multimode latency</font>

624
00:26:35,260 --> 00:26:38,920
distribution<font color="#E5E5E5"> you're just just picking</font>

625
00:26:37,270 --> 00:26:40,360
one<font color="#CCCCCC"> out</font><font color="#E5E5E5"> and usually you're not picking</font>

626
00:26:38,920 --> 00:26:41,830
out a random<font color="#E5E5E5"> one which should be</font>

627
00:26:40,360 --> 00:26:44,409
required to this kind of this kind<font color="#E5E5E5"> of</font>

628
00:26:41,830 --> 00:26:46,000
sampling<font color="#CCCCCC"> you had for example usually you</font>

629
00:26:44,410 --> 00:26:48,940
just<font color="#E5E5E5"> hit the home page of your thing</font>

630
00:26:46,000 --> 00:26:51,850
<font color="#E5E5E5">this will always lie in cache so this</font>

631
00:26:48,940 --> 00:26:54,850
<font color="#E5E5E5">will be a very fast request so you have</font>

632
00:26:51,850 --> 00:26:56,590
to be very careful to<font color="#E5E5E5"> properly probe</font>

633
00:26:54,850 --> 00:26:58,840
externally probe<font color="#E5E5E5"> your API for this</font>

634
00:26:56,590 --> 00:27:01,750
<font color="#CCCCCC">upsetting methods to become effective</font><font color="#E5E5E5"> so</font>

635
00:26:58,840 --> 00:27:03,820
<font color="#E5E5E5">I have not seen that and it</font><font color="#CCCCCC"> usually the</font>

636
00:27:01,750 --> 00:27:06,010
<font color="#CCCCCC">the external probing is</font><font color="#E5E5E5"> basically under</font>

637
00:27:03,820 --> 00:27:07,570
sampling<font color="#E5E5E5"> so you do one sample per minute</font>

638
00:27:06,010 --> 00:27:09,100
<font color="#E5E5E5">and</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> are like at least in this</font>

639
00:27:07,570 --> 00:27:10,810
examples I showed<font color="#E5E5E5"> we are just talking</font>

640
00:27:09,100 --> 00:27:14,110
<font color="#CCCCCC">one</font><font color="#E5E5E5"> hundred or a thousand samples a</font>

641
00:27:10,810 --> 00:27:17,790
minute<font color="#E5E5E5"> so it's it's</font><font color="#CCCCCC"> either</font><font color="#E5E5E5"> the errors</font>

642
00:27:14,110 --> 00:27:17,790
will be<font color="#E5E5E5"> pretty drastic in this cases</font>

643
00:27:18,639 --> 00:27:22,570
yeah<font color="#CCCCCC"> I hope</font><font color="#E5E5E5"> that answers the question</font>

644
00:27:24,490 --> 00:27:29,450
hi I feel like I haven't<font color="#E5E5E5"> quite</font>

645
00:27:27,679 --> 00:27:31,130
<font color="#CCCCCC">understood</font><font color="#E5E5E5"> the difference between number</font>

646
00:27:29,450 --> 00:27:33,799
two and<font color="#CCCCCC"> number three</font><font color="#E5E5E5"> because in both</font>

647
00:27:31,130 --> 00:27:35,840
<font color="#E5E5E5">cases</font><font color="#CCCCCC"> you have a histogram with counters</font>

648
00:27:33,799 --> 00:27:38,450
and you can't<font color="#E5E5E5"> really if your threshold</font>

649
00:27:35,840 --> 00:27:40,850
<font color="#CCCCCC">falls in in the</font><font color="#E5E5E5"> middle of a bucket</font><font color="#CCCCCC"> you</font>

650
00:27:38,450 --> 00:27:43,130
still can't understand<font color="#CCCCCC"> precisely how</font>

651
00:27:40,850 --> 00:27:45,080
many<font color="#E5E5E5"> requests fall and HDR histograms</font>

652
00:27:43,130 --> 00:27:47,570
predefined those buckets<font color="#E5E5E5"> for you but</font>

653
00:27:45,080 --> 00:27:49,658
conceptually<font color="#E5E5E5"> it seems similar to</font><font color="#CCCCCC"> how</font>

654
00:27:47,570 --> 00:27:52,399
histograms are implemented<font color="#E5E5E5"> in Prometheus</font>

655
00:27:49,659 --> 00:27:54,080
<font color="#CCCCCC">so from a theoretical standpoint</font><font color="#E5E5E5"> they</font>

656
00:27:52,399 --> 00:27:56,959
are very similar<font color="#CCCCCC"> you count how</font><font color="#E5E5E5"> many</font>

657
00:27:54,080 --> 00:27:58,760
things<font color="#E5E5E5"> are in certain buckets or less</font>

658
00:27:56,960 --> 00:28:01,309
than a<font color="#E5E5E5"> certain value</font><font color="#CCCCCC"> the question is the</font>

659
00:27:58,760 --> 00:28:03,830
cardinality<font color="#E5E5E5"> and the cost economics</font>

660
00:28:01,309 --> 00:28:06,049
behind<font color="#E5E5E5"> it so for example doing a</font>

661
00:28:03,830 --> 00:28:09,500
thousand pins<font color="#E5E5E5"> is not a lot it will only</font>

662
00:28:06,049 --> 00:28:10,700
cover like a little range and the cost

663
00:28:09,500 --> 00:28:12,769
<font color="#E5E5E5">you are paying for it is they're</font>

664
00:28:10,700 --> 00:28:14,840
<font color="#E5E5E5">actually already very high if a thousand</font>

665
00:28:12,769 --> 00:28:16,220
metrics per API you are<font color="#E5E5E5"> caring about and</font>

666
00:28:14,840 --> 00:28:17,928
probably<font color="#CCCCCC"> even multiply this by the</font>

667
00:28:16,220 --> 00:28:20,029
number<font color="#CCCCCC"> of nodes or endpoints you're</font>

668
00:28:17,929 --> 00:28:22,730
<font color="#E5E5E5">monitoring so it gets expensive</font><font color="#CCCCCC"> very</font>

669
00:28:20,029 --> 00:28:25,309
fast with the HDR histograms<font color="#CCCCCC"> you do</font>

670
00:28:22,730 --> 00:28:27,350
sparse encoding so if the bin is not net

671
00:28:25,309 --> 00:28:30,649
hits then we<font color="#E5E5E5"> don't store this and</font>

672
00:28:27,350 --> 00:28:32,449
usually<font color="#CCCCCC"> your Layton sees are bounded</font>

673
00:28:30,649 --> 00:28:34,610
within<font color="#E5E5E5"> a certain range they are not</font>

674
00:28:32,450 --> 00:28:37,370
taking one time in<font color="#CCCCCC"> microsecond</font><font color="#E5E5E5"> and then</font>

675
00:28:34,610 --> 00:28:39,320
<font color="#CCCCCC">five minutes</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> usually</font><font color="#E5E5E5"> you have one or</font>

676
00:28:37,370 --> 00:28:41,899
two<font color="#E5E5E5"> air orders of magnitude which allow</font>

677
00:28:39,320 --> 00:28:43,820
you to to dynamically choose the buckets

678
00:28:41,899 --> 00:28:45,860
<font color="#E5E5E5">you really want to record so there's</font>

679
00:28:43,820 --> 00:28:48,289
it's<font color="#E5E5E5"> it's the cost in the performance</font>

680
00:28:45,860 --> 00:28:50,269
differential so with the HDR<font color="#E5E5E5"> instagrams</font>

681
00:28:48,289 --> 00:28:53,809
you you don't have<font color="#E5E5E5"> any choices it's</font>

682
00:28:50,269 --> 00:28:56,690
pretty<font color="#E5E5E5"> cheap and it's as powerful</font><font color="#CCCCCC"> as if</font>

683
00:28:53,809 --> 00:28:58,908
you would do 46,000 metrics of the

684
00:28:56,690 --> 00:29:04,159
<font color="#E5E5E5">Prometheus style but yes in theory they</font>

685
00:28:58,909 --> 00:29:06,260
are<font color="#E5E5E5"> they're exactly the same yeah you</font>

686
00:29:04,159 --> 00:29:08,389
can view it as<font color="#CCCCCC"> a clever compression</font>

687
00:29:06,260 --> 00:29:15,789
which gives you like<font color="#E5E5E5"> factor of 10,000</font>

688
00:29:08,389 --> 00:29:15,789
more efficient<font color="#E5E5E5"> right any other</font><font color="#CCCCCC"> questions</font>

689
00:29:18,129 --> 00:29:29,478
he goes my boss so take that<font color="#CCCCCC"> with a</font>

690
00:29:20,569 --> 00:29:34,188
grain of salt<font color="#CCCCCC"> so so for</font><font color="#E5E5E5"> people who are</font>

691
00:29:29,479 --> 00:29:35,419
using arbitrary bins<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> Prometheus</font>

692
00:29:34,189 --> 00:29:39,859
you have to choose your<font color="#CCCCCC"> bins</font>

693
00:29:35,419 --> 00:29:42,049
<font color="#E5E5E5">yeah right and everyone chooses wrong</font><font color="#CCCCCC"> I</font>

694
00:29:39,859 --> 00:29:45,049
ever every time I choose I choose<font color="#CCCCCC"> wrong</font>

695
00:29:42,049 --> 00:29:46,969
later<font color="#CCCCCC"> how do you how do you choose</font>

696
00:29:45,049 --> 00:29:48,739
better<font color="#E5E5E5"> so if you don't have HDR</font>

697
00:29:46,969 --> 00:29:50,899
histograms<font color="#E5E5E5"> and you are using</font><font color="#CCCCCC"> fermius</font>

698
00:29:48,739 --> 00:29:53,539
which most<font color="#E5E5E5"> people are how do you go</font>

699
00:29:50,899 --> 00:29:56,688
about choosing a better set<font color="#CCCCCC"> of bins to</font>

700
00:29:53,539 --> 00:29:58,519
protect<font color="#E5E5E5"> yourself going forward I think</font>

701
00:29:56,689 --> 00:30:01,579
that's a complicated<font color="#E5E5E5"> question but there</font>

702
00:29:58,519 --> 00:30:03,589
are two hints<font color="#CCCCCC"> one you</font><font color="#E5E5E5"> have to think</font>

703
00:30:01,579 --> 00:30:05,479
about how where you want to angry at

704
00:30:03,589 --> 00:30:08,059
your metrics so one error that<font color="#CCCCCC"> Google is</font>

705
00:30:05,479 --> 00:30:09,889
known to make with their choices<font color="#E5E5E5"> is that</font>

706
00:30:08,059 --> 00:30:11,389
different services choose different bins

707
00:30:09,889 --> 00:30:12,978
and<font color="#E5E5E5"> in the end they want to aggregate</font>

708
00:30:11,389 --> 00:30:15,948
across<font color="#E5E5E5"> them and they can no</font><font color="#CCCCCC"> longer do</font>

709
00:30:12,979 --> 00:30:18,109
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so you can</font><font color="#CCCCCC"> only aggregate</font><font color="#E5E5E5"> that</font>

710
00:30:15,949 --> 00:30:20,989
counts<font color="#E5E5E5"> if they have the same thresholds</font>

711
00:30:18,109 --> 00:30:23,989
<font color="#E5E5E5">so you have to first get an idea in the</font>

712
00:30:20,989 --> 00:30:26,899
organization across<font color="#E5E5E5"> which teams and</font>

713
00:30:23,989 --> 00:30:29,119
which<font color="#E5E5E5"> instrumentation</font><font color="#CCCCCC"> um like</font><font color="#E5E5E5"> service</font>

714
00:30:26,899 --> 00:30:31,789
administration ways you<font color="#E5E5E5"> are actually in</font>

715
00:30:29,119 --> 00:30:33,948
the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> wanting to aggregate so once you</font>

716
00:30:31,789 --> 00:30:35,689
have this the other question is<font color="#E5E5E5"> like</font>

717
00:30:33,949 --> 00:30:39,079
where should<font color="#E5E5E5"> we all agree</font><font color="#CCCCCC"> to put</font><font color="#E5E5E5"> our</font>

718
00:30:35,689 --> 00:30:42,409
bins<font color="#CCCCCC"> and</font><font color="#E5E5E5"> they're the</font><font color="#CCCCCC"> only method that is</font>

719
00:30:39,079 --> 00:30:44,539
that I<font color="#E5E5E5"> can come</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> with is actually use</font>

720
00:30:42,409 --> 00:30:46,849
log data for that<font color="#E5E5E5"> so if you have log</font>

721
00:30:44,539 --> 00:30:50,839
data you can<font color="#E5E5E5"> just say select latency</font>

722
00:30:46,849 --> 00:30:52,519
from logs where in the<font color="#E5E5E5"> last three days</font>

723
00:30:50,839 --> 00:30:54,979
or whatever<font color="#E5E5E5"> and you</font><font color="#CCCCCC"> can draw the</font>

724
00:30:52,519 --> 00:30:58,759
histogram yourself<font color="#CCCCCC"> you can see like all</font>

725
00:30:54,979 --> 00:31:01,009
the modes with with any like<font color="#CCCCCC"> Python</font>

726
00:30:58,759 --> 00:31:03,499
<font color="#E5E5E5">tooling it's it's it's it's very easy to</font>

727
00:31:01,009 --> 00:31:05,269
build you just do a select and you<font color="#E5E5E5"> yeah</font>

728
00:31:03,499 --> 00:31:07,099
just draw a histogram of all the values

729
00:31:05,269 --> 00:31:10,309
to<font color="#CCCCCC"> get from there and then you will</font><font color="#E5E5E5"> have</font>

730
00:31:07,099 --> 00:31:12,319
a<font color="#E5E5E5"> picture like like this produced from</font>

731
00:31:10,309 --> 00:31:15,289
<font color="#E5E5E5">lock data and you can say okay where's</font>

732
00:31:12,319 --> 00:31:17,389
<font color="#E5E5E5">my 90th percentile here where is my 95th</font>

733
00:31:15,289 --> 00:31:20,299
percentile and you can just take this

734
00:31:17,389 --> 00:31:22,728
<font color="#E5E5E5">latency thresholds and and and start</font>

735
00:31:20,299 --> 00:31:24,799
working<font color="#CCCCCC"> with them and then if your API</font>

736
00:31:22,729 --> 00:31:28,629
is evolving you might want to change it

737
00:31:24,799 --> 00:31:30,620
<font color="#CCCCCC">later on</font><font color="#E5E5E5"> but yeah then you have to</font>

738
00:31:28,629 --> 00:31:31,969
change it and you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> wait</font>

739
00:31:30,620 --> 00:31:35,300
certain amount<font color="#CCCCCC"> until</font><font color="#E5E5E5"> you can again</font>

740
00:31:31,970 --> 00:31:37,490
compute<font color="#E5E5E5"> those s ellos but this is</font>

741
00:31:35,300 --> 00:31:39,889
<font color="#E5E5E5">actually from a practical standpoint the</font>

742
00:31:37,490 --> 00:31:47,559
only methodology<font color="#CCCCCC"> I can can think of</font>

743
00:31:39,890 --> 00:31:49,520
<font color="#E5E5E5">which which makes</font><font color="#CCCCCC"> sense more</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> I</font>

744
00:31:47,559 --> 00:31:50,690
think<font color="#CCCCCC"> this is</font><font color="#E5E5E5"> not the case</font>

745
00:31:49,520 --> 00:31:53,030
and<font color="#CCCCCC"> yeah thank you again for your</font>

746
00:31:50,690 --> 00:32:01,309
<font color="#CCCCCC">attention</font><font color="#E5E5E5"> and have a great conference</font>

747
00:31:53,030 --> 00:32:01,309
[Applause]

