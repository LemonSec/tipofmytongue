1
00:00:05,030 --> 00:00:09,520
so

2
00:00:06,910 --> 00:00:13,610
how many of you<font color="#E5E5E5"> are familiar with</font><font color="#CCCCCC"> EBT</font>

3
00:00:09,520 --> 00:00:16,430
<font color="#CCCCCC">half here</font><font color="#E5E5E5"> okay wonderful one</font>

4
00:00:13,610 --> 00:00:19,580
about half of you<font color="#E5E5E5"> that's that's great</font>

5
00:00:16,430 --> 00:00:21,259
<font color="#E5E5E5">well before we get to</font><font color="#CCCCCC"> that let me say a</font>

6
00:00:19,580 --> 00:00:24,168
few<font color="#E5E5E5"> words about myself to manage your</font>

7
00:00:21,259 --> 00:00:28,029
expectations<font color="#E5E5E5"> so I am a performance geek</font>

8
00:00:24,169 --> 00:00:30,529
who turned<font color="#E5E5E5"> to be CEO</font><font color="#CCCCCC"> so now I had to</font>

9
00:00:28,029 --> 00:00:32,119
work more<font color="#E5E5E5"> I would guess on the company</font>

10
00:00:30,529 --> 00:00:33,550
performance when<font color="#CCCCCC"> assistant performance</font>

11
00:00:32,119 --> 00:00:36,800
but you<font color="#E5E5E5"> know what I still keep my</font>

12
00:00:33,550 --> 00:00:39,379
passion and<font color="#CCCCCC"> that's why I go and talk</font><font color="#E5E5E5"> on</font>

13
00:00:36,800 --> 00:00:42,110
<font color="#E5E5E5">the</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> technical conference still</font>

14
00:00:39,379 --> 00:00:47,959
in this presentation will look into<font color="#E5E5E5"> EB</font>

15
00:00:42,110 --> 00:00:50,600
<font color="#E5E5E5">TF overview and how it works on Linux as</font>

16
00:00:47,960 --> 00:00:54,650
well<font color="#E5E5E5"> as look at the practical examples</font>

17
00:00:50,600 --> 00:00:57,470
<font color="#E5E5E5">of EPF based tools which I hope you find</font>

18
00:00:54,650 --> 00:01:02,000
helpful<font color="#E5E5E5"> and be able</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> apply to</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> your</font>

19
00:00:57,470 --> 00:01:06,020
<font color="#CCCCCC">environments</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> EB</font><font color="#E5E5E5"> PF history and its</font>

20
00:01:02,000 --> 00:01:09,079
support in<font color="#CCCCCC"> linux EVF</font><font color="#E5E5E5"> it stands for</font>

21
00:01:06,020 --> 00:01:11,570
<font color="#E5E5E5">extended berkeley packet filter right</font>

22
00:01:09,079 --> 00:01:14,000
<font color="#E5E5E5">which is a weird name for</font><font color="#CCCCCC"> - we want</font><font color="#E5E5E5"> to</font>

23
00:01:11,570 --> 00:01:18,440
use<font color="#CCCCCC"> for</font><font color="#E5E5E5"> monitoring isn't it well and the</font>

24
00:01:14,000 --> 00:01:21,409
oddity is that is originated from the

25
00:01:18,440 --> 00:01:25,429
<font color="#E5E5E5">berkeley packet filter which was exactly</font>

26
00:01:21,409 --> 00:01:27,710
<font color="#CCCCCC">designed for efficient to build the</font>

27
00:01:25,430 --> 00:01:30,710
efficient virtual machine for<font color="#CCCCCC"> full</font>

28
00:01:27,710 --> 00:01:33,740
packet filter right and then extend it<font color="#CCCCCC"> e</font>

29
00:01:30,710 --> 00:01:39,020
<font color="#E5E5E5">right that means it was pretty much</font>

30
00:01:33,740 --> 00:01:42,649
extended to<font color="#CCCCCC"> - to be able to</font><font color="#E5E5E5"> more to be</font>

31
00:01:39,020 --> 00:01:46,009
more stuff right so Linux kernel has

32
00:01:42,650 --> 00:01:50,360
support for<font color="#E5E5E5"> that virtual</font><font color="#CCCCCC"> machine called</font>

33
00:01:46,010 --> 00:01:53,090
<font color="#CCCCCC">a VPN</font><font color="#E5E5E5"> in general</font><font color="#CCCCCC"> if EF is event</font>

34
00:01:50,360 --> 00:01:56,990
processing fee framework which is<font color="#E5E5E5"> used a</font>

35
00:01:53,090 --> 00:02:00,229
lot<font color="#E5E5E5"> for monitoring but that also can be</font>

36
00:01:56,990 --> 00:02:04,429
<font color="#CCCCCC">used</font><font color="#E5E5E5"> for some some other stuff indeed in</font>

37
00:02:00,229 --> 00:02:07,460
the<font color="#CCCCCC"> Internet network stack</font><font color="#E5E5E5"> in modern</font>

38
00:02:04,430 --> 00:02:10,640
versions we have<font color="#E5E5E5"> the JIT compiler right</font>

39
00:02:07,460 --> 00:02:16,370
which compiles those programs<font color="#CCCCCC"> for</font><font color="#E5E5E5"> high</font>

40
00:02:10,639 --> 00:02:19,189
efficiency<font color="#E5E5E5"> EVP F in Linux was appeared</font>

41
00:02:16,370 --> 00:02:22,340
first in 2014 right so it has been out

42
00:02:19,189 --> 00:02:23,359
there<font color="#CCCCCC"> for</font><font color="#E5E5E5"> quite a while but it is still</font>

43
00:02:22,340 --> 00:02:25,520
<font color="#E5E5E5">being very act</font>

44
00:02:23,360 --> 00:02:27,770
improved and in recent<font color="#CCCCCC"> years it's</font><font color="#E5E5E5"> also</font>

45
00:02:25,520 --> 00:02:30,350
been<font color="#CCCCCC"> integrated in a pair of</font><font color="#E5E5E5"> Toulon</font>

46
00:02:27,770 --> 00:02:33,170
<font color="#E5E5E5">right which is this wonderful framework</font>

47
00:02:30,350 --> 00:02:37,820
for interactive<font color="#CCCCCC"> performance analysis in</font>

48
00:02:33,170 --> 00:02:40,459
arenas<font color="#E5E5E5"> if you look at the improvements</font>

49
00:02:37,820 --> 00:02:42,260
in recent kernels you<font color="#E5E5E5"> can see the list</font>

50
00:02:40,460 --> 00:02:48,590
of<font color="#CCCCCC"> changes in large and</font><font color="#E5E5E5"> pretty much</font>

51
00:02:42,260 --> 00:02:52,340
every major<font color="#CCCCCC"> minor Kenna</font><font color="#E5E5E5"> release right</font>

52
00:02:48,590 --> 00:02:55,010
does include some<font color="#CCCCCC"> additional features in</font>

53
00:02:52,340 --> 00:02:58,100
<font color="#CCCCCC">MPF which can range from the new</font>

54
00:02:55,010 --> 00:03:02,149
instrumentation points to the various

55
00:02:58,100 --> 00:03:04,040
new you know tear types<font color="#E5E5E5"> right what kind</font>

56
00:03:02,150 --> 00:03:06,650
of data structures we can<font color="#E5E5E5"> use how we can</font>

57
00:03:04,040 --> 00:03:11,959
process<font color="#E5E5E5"> and aggregate those rows events</font>

58
00:03:06,650 --> 00:03:14,570
<font color="#E5E5E5">so as I mentioned what</font><font color="#CCCCCC"> ETF is is this</font>

59
00:03:11,959 --> 00:03:16,790
kind of a special<font color="#E5E5E5"> byte code like a small</font>

60
00:03:14,570 --> 00:03:19,310
programs which you can go ahead and

61
00:03:16,790 --> 00:03:23,780
insert in the kennel<font color="#E5E5E5"> and which</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> be</font>

62
00:03:19,310 --> 00:03:27,050
executed<font color="#E5E5E5"> than a different events are</font>

63
00:03:23,780 --> 00:03:29,959
being being<font color="#E5E5E5"> triggered</font><font color="#CCCCCC"> what is great</font>

64
00:03:27,050 --> 00:03:33,560
about the<font color="#E5E5E5"> EVP F is what where is a</font>

65
00:03:29,959 --> 00:03:36,799
checks<font color="#E5E5E5"> done before those programs are</font>

66
00:03:33,560 --> 00:03:39,140
included included so it's not<font color="#CCCCCC"> impossible</font>

67
00:03:36,799 --> 00:03:42,049
<font color="#E5E5E5">but it is the hard to screw yourself up</font>

68
00:03:39,140 --> 00:03:44,089
<font color="#CCCCCC">right so it is</font><font color="#E5E5E5"> hard to</font><font color="#CCCCCC"> write an EVP F</font>

69
00:03:42,049 --> 00:03:46,519
<font color="#CCCCCC">program right the</font><font color="#E5E5E5"> - basic mistake when</font>

70
00:03:44,090 --> 00:03:48,709
you<font color="#E5E5E5"> boom try to insert it in</font><font color="#CCCCCC"> the trace</font>

71
00:03:46,519 --> 00:03:51,170
point and your system completely crashes

72
00:03:48,709 --> 00:03:54,320
right<font color="#E5E5E5"> for example if you just</font><font color="#CCCCCC"> put like</font><font color="#E5E5E5"> a</font>

73
00:03:51,170 --> 00:03:57,920
tight loop in<font color="#CCCCCC"> EVP F</font><font color="#E5E5E5"> program it wouldn't</font>

74
00:03:54,320 --> 00:04:01,510
be the would not pass<font color="#E5E5E5"> a validation and</font>

75
00:03:57,920 --> 00:04:05,899
it would not<font color="#CCCCCC"> be wouldn't wouldn't</font><font color="#E5E5E5"> until</font>

76
00:04:01,510 --> 00:04:08,929
right now<font color="#CCCCCC"> even for</font><font color="#E5E5E5"> the EPF itself is</font>

77
00:04:05,900 --> 00:04:14,510
based on a<font color="#E5E5E5"> byte code where LLVM</font><font color="#CCCCCC"> ceylon</font>

78
00:04:08,930 --> 00:04:16,489
can compile the<font color="#E5E5E5"> programs into that inner</font>

79
00:04:14,510 --> 00:04:18,709
EVP a byte code and that is what

80
00:04:16,488 --> 00:04:21,289
typically<font color="#E5E5E5"> used for as a part of</font><font color="#CCCCCC"> activity</font>

81
00:04:18,709 --> 00:04:23,860
<font color="#CCCCCC">F quad</font><font color="#E5E5E5"> for now what is interested in</font>

82
00:04:21,290 --> 00:04:28,370
this case is what that compilation is

83
00:04:23,860 --> 00:04:30,700
<font color="#CCCCCC">tend to be to be kennel dependent</font><font color="#E5E5E5"> right</font>

84
00:04:28,370 --> 00:04:34,960
<font color="#E5E5E5">and that is why you</font>

85
00:04:30,700 --> 00:04:39,280
installation of<font color="#E5E5E5"> EVP F is a little bit</font>

86
00:04:34,960 --> 00:04:41,409
more<font color="#E5E5E5"> involved right in a lot of care a</font>

87
00:04:39,280 --> 00:04:44,289
<font color="#E5E5E5">lot of cases but</font><font color="#CCCCCC"> for the good stuff</font><font color="#E5E5E5"> of</font>

88
00:04:41,410 --> 00:04:47,830
if<font color="#CCCCCC"> LLVM is that means few of us would</font>

89
00:04:44,290 --> 00:04:52,180
actually run me to run EBP<font color="#E5E5E5"> F programs</font>

90
00:04:47,830 --> 00:04:54,070
directly<font color="#E5E5E5"> here is if you're curious if</font>

91
00:04:52,180 --> 00:04:55,870
you have code example which<font color="#E5E5E5"> actually</font>

92
00:04:54,070 --> 00:05:00,909
comes from a TCP dump<font color="#E5E5E5"> which is another</font>

93
00:04:55,870 --> 00:05:03,220
tool<font color="#E5E5E5"> which uses a UPF right for for</font>

94
00:05:00,910 --> 00:05:05,280
packet filtering<font color="#E5E5E5"> and it has been a neat</font>

95
00:05:03,220 --> 00:05:09,540
tool where you can<font color="#E5E5E5"> actually dump where</font>

96
00:05:05,280 --> 00:05:12,580
EVP F programs in what looks like<font color="#E5E5E5"> the</font>

97
00:05:09,540 --> 00:05:15,000
<font color="#E5E5E5">assembly like code right for a byte code</font>

98
00:05:12,580 --> 00:05:18,820
<font color="#CCCCCC">represent</font><font color="#E5E5E5"> okay</font>

99
00:05:15,000 --> 00:05:21,520
EVP F has has support both on the kernel

100
00:05:18,820 --> 00:05:24,010
side and on the user<font color="#CCCCCC"> side and in this</font>

101
00:05:21,520 --> 00:05:25,930
case I have an<font color="#CCCCCC"> image from a wonderful</font>

102
00:05:24,010 --> 00:05:31,330
wonderful resource of Brandon<font color="#CCCCCC"> Greg if</font>

103
00:05:25,930 --> 00:05:33,550
you are interested in DTF on Linux and

104
00:05:31,330 --> 00:05:35,680
using that<font color="#E5E5E5"> and tools</font><font color="#CCCCCC"> brandon grad</font>

105
00:05:33,550 --> 00:05:38,260
<font color="#E5E5E5">website has absolutely fantastic</font>

106
00:05:35,680 --> 00:05:41,440
fantastic resource<font color="#CCCCCC"> whatever i think is a</font>

107
00:05:38,260 --> 00:05:43,960
<font color="#E5E5E5">very nice nice illustrations out there</font>

108
00:05:41,440 --> 00:05:45,700
<font color="#E5E5E5">what we can see is one</font><font color="#CCCCCC"> via driver we</font>

109
00:05:43,960 --> 00:05:48,250
will have a user program to generate

110
00:05:45,700 --> 00:05:51,430
byte code which will<font color="#E5E5E5"> be verified by the</font>

111
00:05:48,250 --> 00:05:53,920
kernel<font color="#E5E5E5"> right through</font><font color="#CCCCCC"> btf it can connect</font>

112
00:05:51,430 --> 00:05:56,230
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the different</font><font color="#E5E5E5"> interfaces in kernels</font>

113
00:05:53,920 --> 00:05:59,230
<font color="#E5E5E5">right from April view probe drapes point</font>

114
00:05:56,230 --> 00:06:00,820
<font color="#CCCCCC">performance and then what a</font><font color="#E5E5E5"> map is is</font>

115
00:05:59,230 --> 00:06:02,230
what that kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> data structure which</font>

116
00:06:00,820 --> 00:06:04,030
can be used to accumulate<font color="#E5E5E5"> the</font>

117
00:06:02,230 --> 00:06:07,120
performance statistics<font color="#E5E5E5"> right that</font>

118
00:06:04,030 --> 00:06:10,270
improbable run accumulate data<font color="#E5E5E5"> in this</font>

119
00:06:07,120 --> 00:06:12,880
case<font color="#E5E5E5"> and then we</font><font color="#CCCCCC"> can use again in the</font>

120
00:06:10,270 --> 00:06:16,419
user<font color="#CCCCCC"> space</font><font color="#E5E5E5"> some program to read that</font>

121
00:06:12,880 --> 00:06:17,680
data in the map in this display<font color="#CCCCCC"> that as</font>

122
00:06:16,420 --> 00:06:20,190
<font color="#E5E5E5">you'll actually see</font><font color="#CCCCCC"> in the tools I'll</font>

123
00:06:17,680 --> 00:06:23,380
show you this is not a<font color="#E5E5E5"> wonderful image</font>

124
00:06:20,190 --> 00:06:26,740
which shows<font color="#E5E5E5"> you all kind of</font><font color="#CCCCCC"> different</font>

125
00:06:23,380 --> 00:06:29,560
tools which can be<font color="#CCCCCC"> used to travel fruit</font>

126
00:06:26,740 --> 00:06:31,840
<font color="#CCCCCC">or analyze different</font><font color="#E5E5E5"> Linux kernel</font>

127
00:06:29,560 --> 00:06:33,700
subsystem and you can see that the EBP

128
00:06:31,840 --> 00:06:36,729
<font color="#E5E5E5">ffs system is large and there are</font>

129
00:06:33,700 --> 00:06:38,979
already many tools which use EVP<font color="#E5E5E5"> F so</font>

130
00:06:36,730 --> 00:06:42,960
you don't have to write<font color="#CCCCCC"> your own probes</font>

131
00:06:38,980 --> 00:06:45,960
<font color="#E5E5E5">right here is another</font>

132
00:06:42,960 --> 00:06:48,570
wonderful image from the same source

133
00:06:45,960 --> 00:06:52,109
which really shows us in a different

134
00:06:48,570 --> 00:06:56,099
<font color="#E5E5E5">illustration what Linux kernel versions</font>

135
00:06:52,110 --> 00:06:58,259
support<font color="#E5E5E5"> what kind of a</font><font color="#CCCCCC"> EVF features and</font>

136
00:06:56,100 --> 00:06:59,580
I'm not spending a lot of time on that

137
00:06:58,259 --> 00:07:01,229
because I think<font color="#E5E5E5"> these things are</font>

138
00:06:59,580 --> 00:07:05,460
<font color="#CCCCCC">self-explanatory and</font><font color="#E5E5E5"> you can research</font>

139
00:07:01,229 --> 00:07:09,030
them later on<font color="#E5E5E5"> on the slides here is also</font>

140
00:07:05,460 --> 00:07:10,710
<font color="#CCCCCC">from</font><font color="#E5E5E5"> the Brandon is a</font><font color="#CCCCCC"> Greg</font><font color="#E5E5E5"> a very</font>

141
00:07:09,030 --> 00:07:13,198
interesting

142
00:07:10,710 --> 00:07:16,289
I<font color="#CCCCCC"> gave you</font><font color="#E5E5E5"> a picture which shows the</font>

143
00:07:13,199 --> 00:07:20,669
<font color="#CCCCCC">different tools right you shows by how</font>

144
00:07:16,289 --> 00:07:24,060
easy it is<font color="#E5E5E5"> to use right - how how</font><font color="#CCCCCC"> mature</font>

145
00:07:20,669 --> 00:07:27,539
<font color="#E5E5E5">it is and you can</font><font color="#CCCCCC"> see what there have</font>

146
00:07:24,060 --> 00:07:29,699
been a lot<font color="#CCCCCC"> of a lot of tools like Robi</font>

147
00:07:27,539 --> 00:07:33,240
Pierre for<font color="#E5E5E5"> example was pretty mature but</font>

148
00:07:29,699 --> 00:07:36,330
that's<font color="#E5E5E5"> very brutal to use and that's</font>

149
00:07:33,240 --> 00:07:38,669
nice<font color="#E5E5E5"> to use what we have</font><font color="#CCCCCC"> in the tools in</font>

150
00:07:36,330 --> 00:07:41,490
this kind<font color="#E5E5E5"> of corner which become both</font>

151
00:07:38,669 --> 00:07:44,849
for easy to use<font color="#E5E5E5"> powerful</font><font color="#CCCCCC"> and mature</font>

152
00:07:41,490 --> 00:07:47,310
right so<font color="#CCCCCC"> if etfs</font><font color="#E5E5E5"> I think is now at</font><font color="#CCCCCC"> a</font>

153
00:07:44,849 --> 00:07:49,199
<font color="#E5E5E5">very great time in Linux genome that is</font>

154
00:07:47,310 --> 00:07:52,380
<font color="#CCCCCC">a very powerful but</font><font color="#E5E5E5"> at the same time</font>

155
00:07:49,199 --> 00:07:56,070
<font color="#CCCCCC">very</font><font color="#E5E5E5"> much for to use</font><font color="#CCCCCC"> ok now one</font><font color="#E5E5E5"> thing I</font>

156
00:07:52,380 --> 00:07:58,949
see from looking<font color="#CCCCCC"> at</font><font color="#E5E5E5"> EVP of tools is</font><font color="#CCCCCC"> not</font>

157
00:07:56,070 --> 00:08:01,530
all of them<font color="#E5E5E5"> are available in the single</font>

158
00:07:58,949 --> 00:08:04,620
package refers to two packages<font color="#E5E5E5"> which you</font>

159
00:08:01,530 --> 00:08:08,130
may want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> look at would be perfect</font><font color="#CCCCCC"> -</font>

160
00:08:04,620 --> 00:08:11,220
unstable not right well in unstable

161
00:08:08,130 --> 00:08:13,199
<font color="#E5E5E5">version there are more stuff right for</font>

162
00:08:11,220 --> 00:08:15,330
you to use and then it is<font color="#CCCCCC"> also</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> I</font>

163
00:08:13,199 --> 00:08:20,370
<font color="#CCCCCC">advisor project which has a tools like</font>

164
00:08:15,330 --> 00:08:23,099
BCC<font color="#CCCCCC"> and pl/i which can be used for a lot</font>

165
00:08:20,370 --> 00:08:24,960
<font color="#CCCCCC">of other kind of simple shell scripts</font>

166
00:08:23,099 --> 00:08:28,500
and otherwise to provide those so these

167
00:08:24,960 --> 00:08:31,068
are both pretty mature tools you can get

168
00:08:28,500 --> 00:08:34,700
them<font color="#CCCCCC"> too</font>

169
00:08:31,069 --> 00:08:38,390
the installed relatively relatively

170
00:08:34,700 --> 00:08:41,089
easily<font color="#E5E5E5"> right in this case that's just</font>

171
00:08:38,390 --> 00:08:44,179
example you have a repository which has

172
00:08:41,089 --> 00:08:44,839
a packages which makes it relatively not

173
00:08:44,179 --> 00:08:47,599
too painful

174
00:08:44,839 --> 00:08:50,089
now I mentioned already right what<font color="#CCCCCC"> EBP</font><font color="#E5E5E5"> F</font>

175
00:08:47,600 --> 00:08:53,000
<font color="#E5E5E5">depends on the kernel that is why you</font>

176
00:08:50,089 --> 00:08:55,550
can see it has to pull in the kernel

177
00:08:53,000 --> 00:08:57,350
headers<font color="#E5E5E5"> try to understand exactly data</font>

178
00:08:55,550 --> 00:08:59,599
structures you're working in what we're

179
00:08:57,350 --> 00:09:04,540
exactly different offsets<font color="#E5E5E5"> for different</font>

180
00:08:59,600 --> 00:09:08,690
data and and so<font color="#E5E5E5"> on and so forth</font><font color="#CCCCCC"> okay</font>

181
00:09:04,540 --> 00:09:11,630
<font color="#CCCCCC">let's now look at some tools</font><font color="#E5E5E5"> in actions</font>

182
00:09:08,690 --> 00:09:14,750
which<font color="#E5E5E5"> are based on EBP F the first one</font>

183
00:09:11,630 --> 00:09:17,810
is profiler<font color="#E5E5E5"> right</font>

184
00:09:14,750 --> 00:09:20,930
what<font color="#E5E5E5"> profile and that's a name of a tool</font>

185
00:09:17,810 --> 00:09:25,670
allows us to trace the<font color="#E5E5E5"> given program and</font>

186
00:09:20,930 --> 00:09:27,800
look at<font color="#E5E5E5"> this where different threads are</font>

187
00:09:25,670 --> 00:09:30,709
<font color="#E5E5E5">in the stack this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> different for</font>

188
00:09:27,800 --> 00:09:32,479
example from<font color="#E5E5E5"> perv because</font><font color="#CCCCCC"> with two tools</font>

189
00:09:30,709 --> 00:09:34,729
like<font color="#CCCCCC"> curve weight typically show</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> CP</font>

190
00:09:32,480 --> 00:09:37,850
usage in this case you<font color="#E5E5E5"> will see their</font>

191
00:09:34,730 --> 00:09:39,649
threads again<font color="#CCCCCC"> stuck</font><font color="#E5E5E5"> wherever is doing</font>

192
00:09:37,850 --> 00:09:41,779
some<font color="#CCCCCC"> cpu computer we</font><font color="#E5E5E5"> are stuck working</font>

193
00:09:39,649 --> 00:09:44,230
new chicks waiting<font color="#E5E5E5"> on this guy</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> ever</font>

194
00:09:41,779 --> 00:09:48,529
<font color="#E5E5E5">which can be very helpful to understand</font>

195
00:09:44,230 --> 00:09:51,050
<font color="#CCCCCC">ok what exactly</font><font color="#E5E5E5"> is going on in</font><font color="#CCCCCC"> the</font>

196
00:09:48,529 --> 00:09:54,770
<font color="#CCCCCC">program right why</font><font color="#E5E5E5"> it's not running so</font>

197
00:09:51,050 --> 00:09:57,170
fast another cool tool is understanding

198
00:09:54,770 --> 00:09:59,240
your<font color="#E5E5E5"> i/o latency right especially more</font>

199
00:09:57,170 --> 00:10:01,490
in storage in the cloud and<font color="#E5E5E5"> so on and so</font>

200
00:09:59,240 --> 00:10:05,690
forth<font color="#CCCCCC"> you often</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> to do another</font>

201
00:10:01,490 --> 00:10:09,130
<font color="#E5E5E5">average</font><font color="#CCCCCC"> but if outliers and this the</font>

202
00:10:05,690 --> 00:10:13,760
tool<font color="#E5E5E5"> pretty much allows us to understand</font>

203
00:10:09,130 --> 00:10:18,770
<font color="#E5E5E5">the latency</font><font color="#CCCCCC"> of your of your blog device</font>

204
00:10:13,760 --> 00:10:20,779
right<font color="#CCCCCC"> here in this case it's</font><font color="#E5E5E5"> kind of</font>

205
00:10:18,770 --> 00:10:22,939
quite natural right we're not having a

206
00:10:20,779 --> 00:10:24,439
lot<font color="#E5E5E5"> of outliers but what is actually</font>

207
00:10:22,940 --> 00:10:26,870
interesting right you can see what this

208
00:10:24,440 --> 00:10:29,779
blog device<font color="#CCCCCC"> you had like one of our</font>

209
00:10:26,870 --> 00:10:32,570
requests which<font color="#E5E5E5"> took what is it</font><font color="#CCCCCC"> I think</font>

210
00:10:29,779 --> 00:10:36,439
<font color="#CCCCCC">that's you know microseconds right so</font>

211
00:10:32,570 --> 00:10:38,510
that took<font color="#E5E5E5"> two seconds right or something</font>

212
00:10:36,440 --> 00:10:40,100
to complete which is<font color="#E5E5E5"> if you for example</font>

213
00:10:38,510 --> 00:10:42,350
<font color="#CCCCCC">running the database server and</font><font color="#E5E5E5"> that</font>

214
00:10:40,100 --> 00:10:44,750
happens<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> something like your low</font>

215
00:10:42,350 --> 00:10:47,320
<font color="#E5E5E5">flash</font><font color="#CCCCCC"> requests then it's bad</font><font color="#E5E5E5"> that it</font>

216
00:10:44,750 --> 00:10:51,200
will have a very bad impact out there

217
00:10:47,320 --> 00:10:53,630
and ever<font color="#CCCCCC"> that which</font><font color="#E5E5E5"> is a very nice tool</font>

218
00:10:51,200 --> 00:10:56,390
which<font color="#E5E5E5"> allows us to snoop of a blog</font>

219
00:10:53,630 --> 00:11:00,590
device IO<font color="#CCCCCC"> right so if you ever wondered</font>

220
00:10:56,390 --> 00:11:04,580
where the your<font color="#CCCCCC"> IO is sequential or if</font>

221
00:11:00,590 --> 00:11:09,260
that's kind of random<font color="#CCCCCC"> and what's not you</font>

222
00:11:04,580 --> 00:11:11,210
can<font color="#CCCCCC"> Rev easy to to trace that with a</font>

223
00:11:09,260 --> 00:11:14,500
tool right and then you<font color="#E5E5E5"> can run some</font>

224
00:11:11,210 --> 00:11:16,940
<font color="#E5E5E5">some program easier to analyze plot</font>

225
00:11:14,500 --> 00:11:19,700
visualize your<font color="#CCCCCC"> ru</font><font color="#E5E5E5"> pattern in more</font>

226
00:11:16,940 --> 00:11:22,090
details<font color="#E5E5E5"> this is the blog device there</font>

227
00:11:19,700 --> 00:11:25,190
<font color="#E5E5E5">are also tools to provide you the same</font>

228
00:11:22,090 --> 00:11:28,310
<font color="#E5E5E5">information for for file systems and</font>

229
00:11:25,190 --> 00:11:30,560
<font color="#E5E5E5">there are different tools for</font><font color="#CCCCCC"> vinous for</font>

230
00:11:28,310 --> 00:11:33,290
<font color="#CCCCCC">xt</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> as you</font><font color="#E5E5E5"> can see how much file</font>

231
00:11:30,560 --> 00:11:37,520
system main operations like<font color="#E5E5E5"> read write</font><font color="#CCCCCC"> f</font>

232
00:11:33,290 --> 00:11:39,680
<font color="#CCCCCC">seen</font><font color="#E5E5E5"> take because again</font><font color="#CCCCCC"> for all kind</font><font color="#E5E5E5"> of</font>

233
00:11:37,520 --> 00:11:42,380
<font color="#CCCCCC">different storage reasons as well as an</font>

234
00:11:39,680 --> 00:11:46,160
<font color="#E5E5E5">internal kill</font><font color="#CCCCCC"> at general reasons</font><font color="#E5E5E5"> we may</font>

235
00:11:42,380 --> 00:11:51,620
see of the file<font color="#CCCCCC"> system scores installs</font>

236
00:11:46,160 --> 00:11:55,040
which can impact their operations right

237
00:11:51,620 --> 00:11:59,870
<font color="#CCCCCC">off our</font><font color="#E5E5E5"> problem our programs</font><font color="#CCCCCC"> write in</font>

238
00:11:55,040 --> 00:12:01,459
which<font color="#CCCCCC"> may be may</font><font color="#E5E5E5"> be hard to troubleshoot</font>

239
00:11:59,870 --> 00:12:02,960
otherwise right because you<font color="#E5E5E5"> probably do</font>

240
00:12:01,460 --> 00:12:05,720
not instrument every single<font color="#CCCCCC"> our</font>

241
00:12:02,960 --> 00:12:09,560
operation<font color="#E5E5E5"> and your program</font><font color="#CCCCCC"> there is</font>

242
00:12:05,720 --> 00:12:12,170
<font color="#E5E5E5">other tool which is related to</font><font color="#CCCCCC"> that</font>

243
00:12:09,560 --> 00:12:14,780
<font color="#E5E5E5">right and if</font><font color="#CCCCCC"> you do not want to</font><font color="#E5E5E5"> try a</font>

244
00:12:12,170 --> 00:12:17,630
trace<font color="#E5E5E5"> everything a bill the histogram</font>

245
00:12:14,780 --> 00:12:20,209
you can<font color="#E5E5E5"> also use this tool to understand</font>

246
00:12:17,630 --> 00:12:22,370
what<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> i/o operations do not meet</font>

247
00:12:20,210 --> 00:12:24,950
your let's call it service<font color="#E5E5E5"> level</font>

248
00:12:22,370 --> 00:12:27,470
objective right<font color="#E5E5E5"> so in this case</font><font color="#CCCCCC"> we can</font>

249
00:12:24,950 --> 00:12:30,140
say hey what are<font color="#E5E5E5"> your operations took</font>

250
00:12:27,470 --> 00:12:31,430
more than 10<font color="#E5E5E5"> milliseconds right then you</font>

251
00:12:30,140 --> 00:12:33,050
<font color="#E5E5E5">can put obviously any number you want</font>

252
00:12:31,430 --> 00:12:37,839
out there<font color="#CCCCCC"> and that tells well you know</font>

253
00:12:33,050 --> 00:12:44,390
what<font color="#CCCCCC"> there have been those these are</font>

254
00:12:37,840 --> 00:12:48,890
<font color="#E5E5E5">busy requests which have taken so much</font>

255
00:12:44,390 --> 00:12:52,130
<font color="#E5E5E5">time now another interesting statistics</font>

256
00:12:48,890 --> 00:12:52,529
right<font color="#E5E5E5"> for me I was always over wondering</font>

257
00:12:52,130 --> 00:12:57,870
<font color="#CCCCCC">right</font>

258
00:12:52,529 --> 00:13:00,870
well<font color="#CCCCCC"> Linux has this cache right</font>

259
00:12:57,870 --> 00:13:02,850
but how efficient<font color="#CCCCCC"> that is really right</font>

260
00:13:00,870 --> 00:13:05,970
how do I really<font color="#E5E5E5"> see do I have</font><font color="#CCCCCC"> an auto</font>

261
00:13:02,850 --> 00:13:08,249
<font color="#E5E5E5">hits right if I have more memory in the</font>

262
00:13:05,970 --> 00:13:13,559
cache<font color="#E5E5E5"> is it really getting more hits</font>

263
00:13:08,249 --> 00:13:15,870
or less well we've be with<font color="#E5E5E5"> BPF you can</font>

264
00:13:13,559 --> 00:13:18,449
do that right<font color="#E5E5E5"> very easy cash start</font><font color="#CCCCCC"> -</font>

265
00:13:15,870 --> 00:13:20,730
which shows me how<font color="#CCCCCC"> many total requests</font>

266
00:13:18,449 --> 00:13:23,849
have been<font color="#E5E5E5"> reading from a cache right how</font>

267
00:13:20,730 --> 00:13:27,389
<font color="#CCCCCC">many hits misses how many blocks has</font>

268
00:13:23,850 --> 00:13:29,220
been<font color="#E5E5E5"> jolted right and and so</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> right</font>

269
00:13:27,389 --> 00:13:33,749
<font color="#E5E5E5">and that really can help</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> to to</font>

270
00:13:29,220 --> 00:13:38,449
understand your your your cash or<font color="#CCCCCC"> cash</font>

271
00:13:33,749 --> 00:13:41,879
performance another<font color="#E5E5E5"> interesting</font><font color="#CCCCCC"> mmm so</font>

272
00:13:38,449 --> 00:13:46,949
<font color="#E5E5E5">if you look at your applications which</font>

273
00:13:41,879 --> 00:13:49,620
are<font color="#E5E5E5"> a CPU or GPU bound right one of the</font>

274
00:13:46,949 --> 00:13:52,349
critical items<font color="#E5E5E5"> in terms of</font><font color="#CCCCCC"> ereve would</font>

275
00:13:49,620 --> 00:13:56,220
be responsive<font color="#E5E5E5"> and</font><font color="#CCCCCC"> performed well is when</font>

276
00:13:52,350 --> 00:13:58,769
the application is<font color="#E5E5E5"> ready to run how long</font>

277
00:13:56,220 --> 00:14:00,629
does it<font color="#E5E5E5"> takes Karen to find the CPU to</font>

278
00:13:58,769 --> 00:14:04,620
actually<font color="#CCCCCC"> schedule</font><font color="#E5E5E5"> on right because if</font>

279
00:14:00,629 --> 00:14:09,059
all<font color="#E5E5E5"> the CPUs are busy then if you have</font>

280
00:14:04,620 --> 00:14:11,579
to wait<font color="#E5E5E5"> until you know until of a CPU</font>

281
00:14:09,059 --> 00:14:14,490
becomes available right or preempted and

282
00:14:11,579 --> 00:14:16,800
so on and so forth this tool<font color="#E5E5E5"> allows you</font>

283
00:14:14,490 --> 00:14:20,160
<font color="#CCCCCC">to actually</font><font color="#E5E5E5"> see that from a run run</font>

284
00:14:16,800 --> 00:14:22,949
queue<font color="#E5E5E5"> delay profile and you can see how</font>

285
00:14:20,160 --> 00:14:27,329
long it<font color="#CCCCCC"> takes before</font><font color="#E5E5E5"> a program were</font>

286
00:14:22,949 --> 00:14:30,120
became ready to run<font color="#E5E5E5"> to its</font><font color="#CCCCCC"> scheduled</font>

287
00:14:27,329 --> 00:14:31,949
which is I think<font color="#E5E5E5"> a very cool way to</font>

288
00:14:30,120 --> 00:14:33,809
understand where you have in the<font color="#E5E5E5"> CPU</font>

289
00:14:31,949 --> 00:14:36,660
saturation right it's you know much

290
00:14:33,809 --> 00:14:42,540
<font color="#CCCCCC">better</font><font color="#E5E5E5"> than just looking at your CPU</font>

291
00:14:36,660 --> 00:14:44,850
usage averages right<font color="#CCCCCC"> ok the next one</font><font color="#E5E5E5"> if</font>

292
00:14:42,540 --> 00:14:46,529
you ever<font color="#E5E5E5"> wondered for your program right</font>

293
00:14:44,850 --> 00:14:48,629
which<font color="#CCCCCC"> you have maybe not</font><font color="#E5E5E5"> in the shell</font>

294
00:14:46,529 --> 00:14:51,089
but<font color="#E5E5E5"> and some more complicated languages</font>

295
00:14:48,629 --> 00:14:53,490
what<font color="#CCCCCC"> other</font><font color="#E5E5E5"> tools and other stuff</font><font color="#CCCCCC"> it</font>

296
00:14:51,089 --> 00:14:55,230
<font color="#CCCCCC">executes right</font><font color="#E5E5E5"> well there is</font><font color="#CCCCCC"> this</font>

297
00:14:53,490 --> 00:14:57,990
<font color="#CCCCCC">wonderful tool called xactscope</font>

298
00:14:55,230 --> 00:15:00,899
where you can look wherever for whole

299
00:14:57,990 --> 00:15:02,260
system or for<font color="#CCCCCC"> a specific program</font><font color="#E5E5E5"> what</font>

300
00:15:00,899 --> 00:15:05,170
<font color="#E5E5E5">are different</font>

301
00:15:02,260 --> 00:15:08,050
programs<font color="#E5E5E5"> are being being started right</font>

302
00:15:05,170 --> 00:15:10,329
and that<font color="#E5E5E5"> kind of can help you to you</font>

303
00:15:08,050 --> 00:15:13,209
know understand what the program<font color="#CCCCCC"> does</font>

304
00:15:10,330 --> 00:15:15,210
better or if there are<font color="#CCCCCC"> some you know</font>

305
00:15:13,210 --> 00:15:19,240
problem<font color="#E5E5E5"> something fails you can</font><font color="#CCCCCC"> often</font>

306
00:15:15,210 --> 00:15:23,020
figure that out right<font color="#E5E5E5"> from from this</font>

307
00:15:19,240 --> 00:15:26,200
<font color="#CCCCCC">node in the base till now the next one</font>

308
00:15:23,020 --> 00:15:28,360
<font color="#E5E5E5">is open files that I think is another</font>

309
00:15:26,200 --> 00:15:30,670
also<font color="#E5E5E5"> very helpful thing I find that</font>

310
00:15:28,360 --> 00:15:34,240
helpful<font color="#E5E5E5"> then programs do</font><font color="#CCCCCC"> not have a</font>

311
00:15:30,670 --> 00:15:36,930
diagnostic error messages<font color="#E5E5E5"> set very well</font>

312
00:15:34,240 --> 00:15:40,540
it says oh there is an<font color="#E5E5E5"> i/o error or</font>

313
00:15:36,930 --> 00:15:42,520
can't find<font color="#CCCCCC"> a file</font><font color="#E5E5E5"> what file right I mean</font>

314
00:15:40,540 --> 00:15:44,680
some<font color="#E5E5E5"> Linux programs are getting</font><font color="#CCCCCC"> the</font>

315
00:15:42,520 --> 00:15:50,770
error messages which<font color="#E5E5E5"> are as bad</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> the</font>

316
00:15:44,680 --> 00:15:53,589
<font color="#CCCCCC">windows errors</font><font color="#E5E5E5"> right so that allows you</font>

317
00:15:50,770 --> 00:15:55,990
to to delete<font color="#E5E5E5"> those programs because you</font>

318
00:15:53,590 --> 00:15:58,180
can understand what files<font color="#E5E5E5"> the</font><font color="#CCCCCC"> programs</font>

319
00:15:55,990 --> 00:16:00,430
accessing right and from that you can

320
00:15:58,180 --> 00:16:04,229
<font color="#E5E5E5">often a in</font><font color="#CCCCCC"> fear what could possibly go</font>

321
00:16:00,430 --> 00:16:04,229
wrong and troubles with that<font color="#E5E5E5"> right</font>

322
00:16:04,830 --> 00:16:12,160
besides files you can<font color="#E5E5E5"> also trace what</font>

323
00:16:08,620 --> 00:16:14,530
the program's connect to be in your

324
00:16:12,160 --> 00:16:18,670
<font color="#E5E5E5">system</font><font color="#CCCCCC"> right this allows us help to</font>

325
00:16:14,530 --> 00:16:20,770
trace the<font color="#E5E5E5"> TCP connections where I would</font>

326
00:16:18,670 --> 00:16:23,140
go<font color="#E5E5E5"> in</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> see the connections in in your</font>

327
00:16:20,770 --> 00:16:27,699
system which<font color="#CCCCCC"> again</font><font color="#E5E5E5"> this can</font><font color="#CCCCCC"> be very</font>

328
00:16:23,140 --> 00:16:30,100
helpful<font color="#CCCCCC"> to understand how how programs</font>

329
00:16:27,700 --> 00:16:33,430
how programs work and<font color="#E5E5E5"> troubleshoot them</font>

330
00:16:30,100 --> 00:16:37,270
as needed<font color="#CCCCCC"> this</font><font color="#E5E5E5"> one I find a very</font><font color="#CCCCCC"> cool</font>

331
00:16:33,430 --> 00:16:39,339
one<font color="#CCCCCC"> right so in many cases</font><font color="#E5E5E5"> were to</font>

332
00:16:37,270 --> 00:16:40,990
receive a database troubleshooting right

333
00:16:39,340 --> 00:16:43,300
for<font color="#CCCCCC"> example somebody can play in save a</font>

334
00:16:40,990 --> 00:16:47,230
query is slow but<font color="#CCCCCC"> they should not</font><font color="#E5E5E5"> be</font>

335
00:16:43,300 --> 00:16:49,449
slow right<font color="#E5E5E5"> because you know if you look</font>

336
00:16:47,230 --> 00:16:52,330
at the logs at let's say my school side

337
00:16:49,450 --> 00:16:54,280
and it's all fast application<font color="#CCCCCC"> see</font><font color="#E5E5E5"> it's</font>

338
00:16:52,330 --> 00:16:56,560
slow right<font color="#CCCCCC"> possibly that was</font>

339
00:16:54,280 --> 00:16:58,839
<font color="#CCCCCC">communicated</font><font color="#E5E5E5"> because of some network</font>

340
00:16:56,560 --> 00:17:03,150
issues right in a lot<font color="#E5E5E5"> of a modern</font>

341
00:16:58,840 --> 00:17:06,430
networks the latency would see is being

342
00:17:03,150 --> 00:17:08,260
quite good but if<font color="#CCCCCC"> you have some packet</font>

343
00:17:06,430 --> 00:17:09,820
being dropped<font color="#E5E5E5"> and</font><font color="#CCCCCC"> retransmit happened</font>

344
00:17:08,260 --> 00:17:14,079
then<font color="#CCCCCC"> that can in</font>

345
00:17:09,819 --> 00:17:16,389
<font color="#E5E5E5">use a huge delays before the</font><font color="#CCCCCC"> internet of</font>

346
00:17:14,079 --> 00:17:20,439
communication<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first tool you can</font>

347
00:17:16,390 --> 00:17:22,240
<font color="#E5E5E5">actually see what</font><font color="#CCCCCC"> exactly</font><font color="#E5E5E5"> network</font>

348
00:17:20,440 --> 00:17:23,950
<font color="#E5E5E5">retransmits</font><font color="#CCCCCC"> happened not just</font><font color="#E5E5E5"> in</font>

349
00:17:22,240 --> 00:17:26,079
<font color="#CCCCCC">aggregates which you can get from net</font>

350
00:17:23,950 --> 00:17:28,569
<font color="#CCCCCC">staff but for specific connections</font><font color="#E5E5E5"> and</font>

351
00:17:26,079 --> 00:17:32,949
then for our<font color="#CCCCCC"> specific connections I can</font>

352
00:17:28,569 --> 00:17:36,820
also understand what what program right

353
00:17:32,950 --> 00:17:41,980
application if<font color="#E5E5E5"> the user was</font><font color="#CCCCCC"> E</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> was</font>

354
00:17:36,820 --> 00:17:45,850
<font color="#CCCCCC">involved out there</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> one DNS</font>

355
00:17:41,980 --> 00:17:48,730
lookup<font color="#E5E5E5"> there is a light</font><font color="#CCCCCC"> instant</font>

356
00:17:45,850 --> 00:17:50,370
measurement also<font color="#E5E5E5"> sometimes not easy to</font>

357
00:17:48,730 --> 00:17:54,970
figure out<font color="#CCCCCC"> but and I think it's often</font>

358
00:17:50,370 --> 00:17:58,300
missing this not<font color="#CCCCCC"> taken</font><font color="#E5E5E5"> account but DNS</font>

359
00:17:54,970 --> 00:18:00,580
lookup may be huge performance impact

360
00:17:58,300 --> 00:18:03,639
for you connecting to the<font color="#E5E5E5"> service here</font>

361
00:18:00,580 --> 00:18:05,470
are<font color="#E5E5E5"> over tools which are available in</font>

362
00:18:03,640 --> 00:18:09,000
<font color="#CCCCCC">the version of BCC I used and those</font>

363
00:18:05,470 --> 00:18:15,130
tools are constantly being developed<font color="#CCCCCC"> and</font>

364
00:18:09,000 --> 00:18:16,930
extended moving on for peel I feel<font color="#E5E5E5"> I</font>

365
00:18:15,130 --> 00:18:21,190
that is an avid tool which is a

366
00:18:16,930 --> 00:18:23,230
wonderful<font color="#E5E5E5"> to to get some additional</font>

367
00:18:21,190 --> 00:18:25,900
scription if you want besides running

368
00:18:23,230 --> 00:18:28,630
custom<font color="#E5E5E5"> tools right for</font><font color="#CCCCCC"> example you can</font>

369
00:18:25,900 --> 00:18:31,360
run this kind<font color="#CCCCCC"> of simple</font><font color="#E5E5E5"> probe which can</font>

370
00:18:28,630 --> 00:18:36,850
say hey<font color="#CCCCCC"> I'm connecting to this</font><font color="#E5E5E5"> kernel</font>

371
00:18:31,360 --> 00:18:39,070
<font color="#E5E5E5">Cisco and give me you know but the</font>

372
00:18:36,850 --> 00:18:41,679
histogram of very<font color="#CCCCCC"> John values right</font>

373
00:18:39,070 --> 00:18:44,590
<font color="#E5E5E5">relatively simple gives us a beautiful</font>

374
00:18:41,680 --> 00:18:47,140
<font color="#E5E5E5">chart that is example of</font><font color="#CCCCCC"> a PLI</font>

375
00:18:44,590 --> 00:18:49,720
language right it uses a custom<font color="#E5E5E5"> language</font>

376
00:18:47,140 --> 00:18:51,160
but you know if you live in doing the

377
00:18:49,720 --> 00:18:55,530
program and there is<font color="#E5E5E5"> a</font><font color="#CCCCCC"> note too hard</font>

378
00:18:51,160 --> 00:18:58,960
<font color="#E5E5E5">language to learn and understand</font><font color="#CCCCCC"> ok</font>

379
00:18:55,530 --> 00:19:01,649
<font color="#E5E5E5">this is all the tools I showed you which</font>

380
00:18:58,960 --> 00:19:03,670
are based on kind<font color="#E5E5E5"> of real-time</font>

381
00:19:01,650 --> 00:19:06,340
<font color="#E5E5E5">troubleshoot analysis which</font><font color="#CCCCCC"> is wonderful</font>

382
00:19:03,670 --> 00:19:07,990
<font color="#E5E5E5">but what if you want to have</font><font color="#CCCCCC"> a some</font>

383
00:19:06,340 --> 00:19:13,330
stats you<font color="#CCCCCC"> want to analyze</font><font color="#E5E5E5"> in the past</font>

384
00:19:07,990 --> 00:19:16,090
<font color="#E5E5E5">yes and there is a tool for</font><font color="#CCCCCC"> that which</font>

385
00:19:13,330 --> 00:19:21,080
the state<font color="#E5E5E5"> of art I</font><font color="#CCCCCC"> believe in this case</font>

386
00:19:16,090 --> 00:19:23,360
is<font color="#CCCCCC"> clouds players</font><font color="#E5E5E5"> EVP</font><font color="#CCCCCC"> F</font><font color="#E5E5E5"> Explorer which</font>

387
00:19:21,080 --> 00:19:26,178
as a name says<font color="#CCCCCC"> Explorer for Prometheus</font>

388
00:19:23,360 --> 00:19:29,529
<font color="#CCCCCC">so you can get pretty</font><font color="#E5E5E5"> much any data from</font>

389
00:19:26,179 --> 00:19:32,389
<font color="#CCCCCC">EPF in a</font><font color="#E5E5E5"> Prometheus which you can do</font>

390
00:19:29,529 --> 00:19:35,149
wherever you can plot<font color="#CCCCCC"> it you can use an</font>

391
00:19:32,389 --> 00:19:40,789
alert manager<font color="#E5E5E5"> and do all the other</font><font color="#CCCCCC"> good</font>

392
00:19:35,149 --> 00:19:44,508
stuff<font color="#E5E5E5"> now here is a nice graphic in this</font>

393
00:19:40,789 --> 00:19:47,239
case which I took<font color="#E5E5E5"> from from a cloud for</font>

394
00:19:44,509 --> 00:19:51,440
<font color="#CCCCCC">a layer scope which tells us what</font><font color="#E5E5E5"> while</font>

395
00:19:47,239 --> 00:19:56,179
all<font color="#E5E5E5"> of those things</font><font color="#CCCCCC"> they have the same</font>

396
00:19:51,440 --> 00:19:59,269
average value right on the both<font color="#CCCCCC"> axes</font>

397
00:19:56,179 --> 00:20:02,899
<font color="#E5E5E5">these are completely different different</font>

398
00:19:59,269 --> 00:20:05,210
pictures<font color="#CCCCCC"> right if you haven't</font><font color="#E5E5E5"> seen that</font>

399
00:20:02,899 --> 00:20:07,428
<font color="#E5E5E5">image I</font><font color="#CCCCCC"> think that's kind of a quite</font>

400
00:20:05,210 --> 00:20:09,739
cool<font color="#E5E5E5"> right that is why we need to go</font>

401
00:20:07,429 --> 00:20:11,989
beyond beyond the averages right<font color="#E5E5E5"> and</font>

402
00:20:09,739 --> 00:20:16,190
even<font color="#CCCCCC"> a mean value is but and to really</font>

403
00:20:11,989 --> 00:20:20,299
<font color="#E5E5E5">understand</font><font color="#CCCCCC"> their histogram</font><font color="#E5E5E5"> so if you</font>

404
00:20:16,190 --> 00:20:24,019
look<font color="#CCCCCC"> you TF</font><font color="#E5E5E5"> export it used BCC library</font>

405
00:20:20,299 --> 00:20:26,539
right<font color="#E5E5E5"> to get the data and pretty much</font>

406
00:20:24,019 --> 00:20:29,119
you<font color="#E5E5E5"> can take</font><font color="#CCCCCC"> that data</font><font color="#E5E5E5"> from BCC programs</font>

407
00:20:26,539 --> 00:20:31,700
and I would put<font color="#CCCCCC"> that</font><font color="#E5E5E5"> in a Prometheus</font>

408
00:20:29,119 --> 00:20:35,149
format<font color="#E5E5E5"> one thing you have to</font><font color="#CCCCCC"> be careful</font>

409
00:20:31,700 --> 00:20:37,879
<font color="#CCCCCC">running</font><font color="#E5E5E5"> exporter in the production is</font>

410
00:20:35,149 --> 00:20:40,629
the overhand right so if you put for

411
00:20:37,879 --> 00:20:45,738
<font color="#CCCCCC">example a very complex probe and if you</font>

412
00:20:40,629 --> 00:20:47,209
put<font color="#E5E5E5"> that</font><font color="#CCCCCC"> on a very common operations</font>

413
00:20:45,739 --> 00:20:49,070
that which you run<font color="#CCCCCC"> a</font><font color="#E5E5E5"> millions of times a</font>

414
00:20:47,210 --> 00:20:51,559
second<font color="#E5E5E5"> you can have quite an overhead</font>

415
00:20:49,070 --> 00:20:53,899
right as you can see closer guys major

416
00:20:51,559 --> 00:20:55,460
attacks can<font color="#CCCCCC"> be way over</font><font color="#E5E5E5"> 100</font><font color="#CCCCCC"> percent</font><font color="#E5E5E5"> so</font>

417
00:20:53,899 --> 00:20:57,559
be careful what you<font color="#E5E5E5"> run in production</font>

418
00:20:55,460 --> 00:21:01,570
versus what you run in a test or you

419
00:20:57,559 --> 00:21:05,330
only<font color="#E5E5E5"> enable when a system</font><font color="#CCCCCC"> is not</font><font color="#E5E5E5"> healthy</font>

420
00:21:01,570 --> 00:21:09,230
so for<font color="#CCCCCC"> ETF exporter there are binaries</font>

421
00:21:05,330 --> 00:21:12,879
available right<font color="#E5E5E5"> you can get that and</font>

422
00:21:09,230 --> 00:21:16,009
also<font color="#E5E5E5"> provide</font><font color="#CCCCCC"> them configuration</font>

423
00:21:12,879 --> 00:21:20,119
information<font color="#E5E5E5"> you can plug it in</font><font color="#CCCCCC"> a</font>

424
00:21:16,009 --> 00:21:22,309
standard<font color="#E5E5E5"> standard Prometheus of course I</font>

425
00:21:20,119 --> 00:21:24,678
also show you<font color="#CCCCCC"> how</font><font color="#E5E5E5"> to integrate that if</font>

426
00:21:22,309 --> 00:21:28,399
our<font color="#E5E5E5"> open source monitoring tool called</font>

427
00:21:24,679 --> 00:21:31,399
<font color="#CCCCCC">the PMM where you can pretty much</font><font color="#E5E5E5"> add it</font>

428
00:21:28,399 --> 00:21:34,209
as an as an external for external for

429
00:21:31,399 --> 00:21:37,129
external<font color="#E5E5E5"> exporter</font>

430
00:21:34,210 --> 00:21:40,730
of what you can get<font color="#E5E5E5"> in this case here as</font>

431
00:21:37,130 --> 00:21:45,500
example is a<font color="#E5E5E5"> are you latency histogram</font>

432
00:21:40,730 --> 00:21:49,460
<font color="#E5E5E5">just the same as I showed you early on</font>

433
00:21:45,500 --> 00:21:55,280
in a<font color="#E5E5E5"> presentation which we can then go</font>

434
00:21:49,460 --> 00:21:58,910
ahead<font color="#E5E5E5"> and plot as a</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> histogram</font><font color="#CCCCCC"> over</font>

435
00:21:55,280 --> 00:22:00,950
<font color="#CCCCCC">time</font><font color="#E5E5E5"> right to visualize that in graph on</font>

436
00:21:58,910 --> 00:22:03,440
and that<font color="#E5E5E5"> can be used for us for example</font>

437
00:22:00,950 --> 00:22:05,480
<font color="#E5E5E5">to help us to understand there are</font>

438
00:22:03,440 --> 00:22:10,460
<font color="#E5E5E5">outliers like well you know what in this</font>

439
00:22:05,480 --> 00:22:12,620
case<font color="#E5E5E5"> we had you know some requests which</font>

440
00:22:10,460 --> 00:22:14,900
have been<font color="#E5E5E5"> taken more than 33</font>

441
00:22:12,620 --> 00:22:18,129
<font color="#E5E5E5">milliseconds which</font><font color="#CCCCCC"> is kind of slow for</font>

442
00:22:14,900 --> 00:22:21,650
this SSD<font color="#CCCCCC"> storage in the this day and age</font>

443
00:22:18,130 --> 00:22:27,170
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so what's coming in a VCF what I am</font>

444
00:22:21,650 --> 00:22:31,880
very<font color="#CCCCCC"> excited</font><font color="#E5E5E5"> in BFS is BPF trace which</font>

445
00:22:27,170 --> 00:22:35,900
is<font color="#E5E5E5"> kind of in this style is very feature</font>

446
00:22:31,880 --> 00:22:40,340
full<font color="#CCCCCC"> heat race replacement alright the</font>

447
00:22:35,900 --> 00:22:42,740
right now it is quite<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is not you know</font>

448
00:22:40,340 --> 00:22:46,300
quite mature yet in terms of have any

449
00:22:42,740 --> 00:22:48,260
packages available<font color="#E5E5E5"> but it is really</font>

450
00:22:46,300 --> 00:22:51,740
getting there and<font color="#E5E5E5"> I would say that</font>

451
00:22:48,260 --> 00:22:54,650
probably<font color="#E5E5E5"> will be</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> of the very</font>

452
00:22:51,740 --> 00:22:58,910
powerful<font color="#E5E5E5"> innovative tools in the next</font>

453
00:22:54,650 --> 00:23:01,130
year or<font color="#CCCCCC"> two</font><font color="#E5E5E5"> here is for reading</font><font color="#CCCCCC"> lists</font>

454
00:22:58,910 --> 00:23:03,230
right as I prepared I want through a lot

455
00:23:01,130 --> 00:23:07,820
<font color="#E5E5E5">of articles</font><font color="#CCCCCC"> that I will</font><font color="#E5E5E5"> just leave it on</font>

456
00:23:03,230 --> 00:23:09,770
a slide<font color="#E5E5E5"> and that's it I think</font><font color="#CCCCCC"> you have</font>

457
00:23:07,820 --> 00:23:19,399
<font color="#E5E5E5">exactly immediately half a question</font>

458
00:23:09,770 --> 00:23:22,619
[Applause]

459
00:23:19,399 --> 00:23:29,689
please remain seated<font color="#CCCCCC"> do we</font><font color="#E5E5E5"> have any</font>

460
00:23:22,619 --> 00:23:43,009
questions any questions<font color="#E5E5E5"> any</font><font color="#CCCCCC"> questions</font>

461
00:23:29,690 --> 00:23:46,169
that was so unclear no questions yes so

462
00:23:43,009 --> 00:23:48,990
the new tools appear<font color="#E5E5E5"> and there are like</font>

463
00:23:46,169 --> 00:23:51,779
<font color="#CCCCCC">DTrace F trace of change</font><font color="#E5E5E5"> it tons of that</font>

464
00:23:48,990 --> 00:23:57,690
<font color="#CCCCCC">15 which ones are likely to go away</font>

465
00:23:51,779 --> 00:23:59,610
<font color="#E5E5E5">maybe you have compared yeah well that</font>

466
00:23:57,690 --> 00:24:01,619
<font color="#E5E5E5">is a good a good question</font><font color="#CCCCCC"> right I mean</font>

467
00:23:59,610 --> 00:24:03,178
<font color="#E5E5E5">somebody before stock</font><font color="#CCCCCC"> said hey Peter why</font>

468
00:24:01,619 --> 00:24:04,740
<font color="#CCCCCC">don't you talk about</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> D trace and</font>

469
00:24:03,179 --> 00:24:07,379
<font color="#CCCCCC">Linux right and say well the trace</font><font color="#E5E5E5"> was</font>

470
00:24:04,740 --> 00:24:10,649
wonderful but it's kind of dead<font color="#E5E5E5"> right I</font>

471
00:24:07,379 --> 00:24:12,899
<font color="#E5E5E5">mean it's</font><font color="#CCCCCC"> D trace is available for</font>

472
00:24:10,649 --> 00:24:16,379
<font color="#E5E5E5">example in Oracle Linux but how many of</font>

473
00:24:12,899 --> 00:24:21,899
you here<font color="#E5E5E5"> are running Oracle Linux to</font>

474
00:24:16,379 --> 00:24:26,248
prove a point<font color="#CCCCCC"> right so in this</font><font color="#E5E5E5"> case I</font>

475
00:24:21,899 --> 00:24:30,178
believe what the EBT<font color="#E5E5E5"> F at this point is</font>

476
00:24:26,249 --> 00:24:32,039
the<font color="#CCCCCC"> lydian mony to trace on our</font>

477
00:24:30,179 --> 00:24:33,360
instrumentation framework for<font color="#E5E5E5"> Linux</font>

478
00:24:32,039 --> 00:24:38,369
<font color="#E5E5E5">always kind of advanced</font><font color="#CCCCCC"> in</font>

479
00:24:33,360 --> 00:24:41,908
administration use case which is is<font color="#E5E5E5"> very</font>

480
00:24:38,369 --> 00:24:49,408
to state<font color="#E5E5E5"> stay right and I think</font><font color="#CCCCCC"> that is</font>

481
00:24:41,909 --> 00:24:51,690
very<font color="#E5E5E5"> few shields make sense</font><font color="#CCCCCC"> I have a</font>

482
00:24:49,409 --> 00:24:53,789
<font color="#E5E5E5">question which is a lot of these tools</font>

483
00:24:51,690 --> 00:24:55,499
<font color="#E5E5E5">seem very</font><font color="#CCCCCC"> very useful to run</font><font color="#E5E5E5"> in</font>

484
00:24:53,789 --> 00:24:57,509
production<font color="#CCCCCC"> systems because that's where</font>

485
00:24:55,499 --> 00:25:00,840
you<font color="#E5E5E5"> find a really weird problem that you</font>

486
00:24:57,509 --> 00:25:02,999
cannot debug and reproduce anywhere but

487
00:25:00,840 --> 00:25:04,879
the question is I<font color="#E5E5E5"> always see these up</font>

488
00:25:02,999 --> 00:25:07,799
these<font color="#E5E5E5"> things running as root and being</font>

489
00:25:04,879 --> 00:25:09,959
advertised as unstable<font color="#E5E5E5"> so is there a</font>

490
00:25:07,799 --> 00:25:13,080
better<font color="#CCCCCC"> way for me to not be</font><font color="#E5E5E5"> running</font>

491
00:25:09,960 --> 00:25:17,879
things that are marked as unstable<font color="#CCCCCC"> under</font>

492
00:25:13,080 --> 00:25:22,710
root on my production system oh well if

493
00:25:17,879 --> 00:25:25,709
you well there are many<font color="#E5E5E5"> ways right but I</font>

494
00:25:22,710 --> 00:25:27,460
<font color="#E5E5E5">mean in the</font><font color="#CCCCCC"> end if you are</font><font color="#E5E5E5"> inserting</font>

495
00:25:25,710 --> 00:25:30,520
some you know custom<font color="#CCCCCC"> code</font>

496
00:25:27,460 --> 00:25:32,890
the internal right you are doing

497
00:25:30,520 --> 00:25:34,299
something related<font color="#E5E5E5"> dangerous and as I</font>

498
00:25:32,890 --> 00:25:35,200
mentioned<font color="#E5E5E5"> that</font><font color="#CCCCCC"> the performance overhead</font>

499
00:25:34,299 --> 00:25:38,820
at least right

500
00:25:35,200 --> 00:25:41,890
while<font color="#CCCCCC"> EVF is designed to avoid</font><font color="#E5E5E5"> you</font>

501
00:25:38,820 --> 00:25:44,529
crashing the<font color="#CCCCCC"> kernel</font><font color="#E5E5E5"> you can make it run</font>

502
00:25:41,890 --> 00:25:46,600
multiple<font color="#CCCCCC"> times</font><font color="#E5E5E5"> slower right in this case</font>

503
00:25:44,529 --> 00:25:48,070
so in this case that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> advantage more</font>

504
00:25:46,600 --> 00:25:50,080
<font color="#CCCCCC">in turn</font><font color="#E5E5E5"> tools right which have to be</font>

505
00:25:48,070 --> 00:25:51,700
done<font color="#E5E5E5"> now what</font><font color="#CCCCCC"> I would</font><font color="#E5E5E5"> imagine in this</font>

506
00:25:50,080 --> 00:25:55,210
case<font color="#E5E5E5"> right if you want your developers</font>

507
00:25:51,700 --> 00:25:57,610
to do then build the<font color="#E5E5E5"> save tools right</font>

508
00:25:55,210 --> 00:25:59,110
and let them only<font color="#E5E5E5"> to run those from</font>

509
00:25:57,610 --> 00:26:00,908
<font color="#CCCCCC">pseudo right or something for</font><font color="#E5E5E5"> that</font>

510
00:25:59,110 --> 00:26:04,389
<font color="#CCCCCC">particular use cases which you are</font>

511
00:26:00,909 --> 00:26:07,090
<font color="#E5E5E5">authorized that's what I would think um</font>

512
00:26:04,390 --> 00:26:11,770
<font color="#E5E5E5">you have presented couple of tours which</font>

513
00:26:07,090 --> 00:26:13,899
are quite similar<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the well in the</font>

514
00:26:11,770 --> 00:26:15,700
target<font color="#E5E5E5"> that they can do with</font><font color="#CCCCCC"> asteroids</font>

515
00:26:13,899 --> 00:26:17,350
<font color="#E5E5E5">for instance so after they compared to s</font>

516
00:26:15,700 --> 00:26:19,390
race and using a stress should be

517
00:26:17,350 --> 00:26:21,399
rewritten in order to leverage<font color="#CCCCCC"> EBP</font>

518
00:26:19,390 --> 00:26:25,149
<font color="#CCCCCC">abilities the great question is</font><font color="#E5E5E5"> how is</font>

519
00:26:21,399 --> 00:26:29,500
<font color="#CCCCCC">that is that compares to a stress</font><font color="#E5E5E5"> right</font>

520
00:26:25,149 --> 00:26:31,600
the overhead EVP<font color="#CCCCCC"> eff has you know orders</font>

521
00:26:29,500 --> 00:26:37,899
of magnitude<font color="#E5E5E5"> in lower overhead</font><font color="#CCCCCC"> than what</font>

522
00:26:31,600 --> 00:26:43,139
the<font color="#E5E5E5"> esterase</font><font color="#CCCCCC"> does so should we write a</font>

523
00:26:37,899 --> 00:26:45,219
stress to<font color="#CCCCCC"> leverage gb PF</font><font color="#E5E5E5"> well you know</font>

524
00:26:43,140 --> 00:26:48,909
possibly<font color="#CCCCCC"> right i mean i'm not sure maybe</font>

525
00:26:45,220 --> 00:26:52,000
<font color="#E5E5E5">there is a actually worked like to to do</font>

526
00:26:48,909 --> 00:26:55,029
to do that<font color="#E5E5E5"> to do it already</font>

527
00:26:52,000 --> 00:26:56,980
right but but in general for tools right

528
00:26:55,029 --> 00:27:00,909
the<font color="#E5E5E5"> overhead I think is a right now</font><font color="#CCCCCC"> as a</font>

529
00:26:56,980 --> 00:27:07,380
<font color="#E5E5E5">main is main difference if</font><font color="#CCCCCC"> what you</font>

530
00:27:00,909 --> 00:27:07,380
<font color="#CCCCCC">induce</font><font color="#E5E5E5"> a stress and more questions</font>

531
00:27:09,480 --> 00:27:31,350
oh you're<font color="#CCCCCC"> getting your exercise here</font>

532
00:27:11,789 --> 00:27:33,809
right up and down<font color="#E5E5E5"> and up and down</font><font color="#CCCCCC"> yeah</font>

533
00:27:31,350 --> 00:27:36,269
<font color="#E5E5E5">so my question is to the audience in to</font>

534
00:27:33,809 --> 00:27:45,690
the speaker<font color="#CCCCCC"> is</font><font color="#E5E5E5"> anybody using this in</font>

535
00:27:36,269 --> 00:27:48,269
production<font color="#CCCCCC"> now the exporter no</font><font color="#E5E5E5"> player</font>

536
00:27:45,690 --> 00:27:52,860
<font color="#CCCCCC">has a exporter right I mean there is</font><font color="#E5E5E5"> if</font>

537
00:27:48,269 --> 00:27:54,360
you<font color="#E5E5E5"> look at there is a lot of people</font>

538
00:27:52,860 --> 00:27:57,330
writing<font color="#E5E5E5"> about using that in production</font>

539
00:27:54,360 --> 00:28:02,340
<font color="#CCCCCC">try to know that Brendan Greg uses</font><font color="#E5E5E5"> that</font>

540
00:27:57,330 --> 00:28:04,740
very<font color="#CCCCCC"> accurate Netflix</font><font color="#E5E5E5"> right but he's</font>

541
00:28:02,340 --> 00:28:07,830
using the tools individually at runtime

542
00:28:04,740 --> 00:28:09,480
<font color="#CCCCCC">not the exporter no exporter</font><font color="#E5E5E5"> yeah I'm</font>

543
00:28:07,830 --> 00:28:11,460
actually running the exporter in yes

544
00:28:09,480 --> 00:28:13,649
asking about the exporter<font color="#CCCCCC"> that's yeah</font>

545
00:28:11,460 --> 00:28:15,360
<font color="#E5E5E5">that is a good so I would have raised my</font>

546
00:28:13,649 --> 00:28:16,889
hand<font color="#E5E5E5"> to my own question so but I was</font>

547
00:28:15,360 --> 00:28:18,689
<font color="#CCCCCC">just wondering if anybody else oh you</font>

548
00:28:16,889 --> 00:28:21,689
use export<font color="#CCCCCC"> - yes</font>

549
00:28:18,690 --> 00:28:24,630
and it's<font color="#E5E5E5"> not 23% slower</font>

550
00:28:21,690 --> 00:28:26,789
<font color="#CCCCCC">I've been smart it as well it's it's</font>

551
00:28:24,630 --> 00:28:28,350
<font color="#E5E5E5">pretty close</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> we're trying yeah what</font>

552
00:28:26,789 --> 00:28:29,850
I was saying again<font color="#CCCCCC"> is you have to be</font>

553
00:28:28,350 --> 00:28:31,620
smart with<font color="#E5E5E5"> probes you set up right you</font>

554
00:28:29,850 --> 00:28:34,230
can set<font color="#E5E5E5"> up a probe</font><font color="#CCCCCC"> to yourself up</font>

555
00:28:31,620 --> 00:28:36,649
<font color="#E5E5E5">right</font><font color="#CCCCCC"> as if many other stuff anything</font>

556
00:28:34,230 --> 00:28:36,649
<font color="#E5E5E5">his life</font>

557
00:28:42,980 --> 00:28:46,120
any other questions

558
00:28:50,580 --> 00:29:01,270
okay<font color="#E5E5E5"> well thank you</font>

559
00:28:54,210 --> 00:29:01,270
[Applause]

