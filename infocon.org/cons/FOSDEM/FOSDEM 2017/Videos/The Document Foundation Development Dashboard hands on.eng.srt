1
00:00:00,030 --> 00:00:03,050
and now I'm going to

2
00:00:04,540 --> 00:00:06,609
to enter if there are no questions on

3
00:00:06,609 --> 00:00:08,410
the second part of the of the talk which

4
00:00:08,410 --> 00:00:09,879
i think is going to be more interesting

5
00:00:09,879 --> 00:00:11,500
which is how that the software is then

6
00:00:11,500 --> 00:00:13,630
how you can use it if you want

7
00:00:13,630 --> 00:00:15,340
how you can deploy it else or if you

8
00:00:15,340 --> 00:00:17,320
want everything is based on doing more

9
00:00:17,320 --> 00:00:18,670
lab which is of course a free

10
00:00:18,670 --> 00:00:20,500
open-source software and it's produced

11
00:00:20,500 --> 00:00:22,810
mainly by the company in collaboration

12
00:00:22,810 --> 00:00:25,450
with some specific people who have who

13
00:00:25,450 --> 00:00:28,710
have contributed with more lab it's a

14
00:00:28,710 --> 00:00:33,430
very simple architecture Indian on the

15
00:00:33,430 --> 00:00:36,250
one side you have the repositories gate

16
00:00:36,250 --> 00:00:39,100
mailing lists and stuff and we have

17
00:00:39,100 --> 00:00:40,990
Percival Percival is basically the data

18
00:00:40,990 --> 00:00:43,960
retrieval it can retrieve data from like

19
00:00:43,960 --> 00:00:45,640
20 different data sources sort of

20
00:00:45,640 --> 00:00:48,160
related to so development in your case

21
00:00:48,160 --> 00:00:51,910
that's great gate and vasila first of

22
00:00:51,910 --> 00:00:54,010
all gets the information produces JSON

23
00:00:54,010 --> 00:00:55,600
documents from it which basically

24
00:00:55,600 --> 00:00:56,860
include all the information that you

25
00:00:56,860 --> 00:00:58,450
have in the original data source and

26
00:00:58,450 --> 00:01:01,060
store those in elasticsearch we call

27
00:01:01,060 --> 00:01:03,190
that the raw index because it tries to

28
00:01:03,190 --> 00:01:04,869
keep all the information that is in the

29
00:01:04,869 --> 00:01:06,970
repository the reason for that is that

30
00:01:06,970 --> 00:01:09,460
once it is in the database it's much

31
00:01:09,460 --> 00:01:11,260
more easy to do to work with it you

32
00:01:11,260 --> 00:01:12,640
don't have to go to get every time you

33
00:01:12,640 --> 00:01:13,780
need something do you have the

34
00:01:13,780 --> 00:01:15,280
information in elasticsearch you don't

35
00:01:15,280 --> 00:01:16,990
need to go to wear it and ask if you

36
00:01:16,990 --> 00:01:18,300
have everything in rostov search

37
00:01:18,300 --> 00:01:20,890
Percival King more incrementally so that

38
00:01:20,890 --> 00:01:22,540
they can run now and in ten minutes from

39
00:01:22,540 --> 00:01:24,430
now and it gets the difference from now

40
00:01:24,430 --> 00:01:25,870
so it's very efficient from that point

41
00:01:25,870 --> 00:01:28,030
of view so that we can basically put it

42
00:01:28,030 --> 00:01:29,890
in a cycle and retrieve everything in a

43
00:01:29,890 --> 00:01:32,950
new in the repository then we have two

44
00:01:32,950 --> 00:01:34,990
more elk memorial takes those row

45
00:01:34,990 --> 00:01:36,670
indexes with all the information and

46
00:01:36,670 --> 00:01:38,590
produces in this is a specific for

47
00:01:38,590 --> 00:01:39,070
qivana

48
00:01:39,070 --> 00:01:40,720
basically those are summaries of the

49
00:01:40,720 --> 00:01:42,670
activity and in those cases we try to

50
00:01:42,670 --> 00:01:44,049
put this information that we want to

51
00:01:44,049 --> 00:01:45,729
represent in cavanna

52
00:01:45,729 --> 00:01:49,030
again memorial is a story in the new

53
00:01:49,030 --> 00:01:51,159
indexing elasticsearch and in the end we

54
00:01:51,159 --> 00:01:53,890
have a soft 40 of Chimaera of qivana

55
00:01:53,890 --> 00:01:56,890
which we call kabir which basically gets

56
00:01:56,890 --> 00:01:58,479
information from your six Hertz and

57
00:01:58,479 --> 00:02:00,250
produce it what you saw in the first

58
00:02:00,250 --> 00:02:03,759
part of the talk so developers have like

59
00:02:03,759 --> 00:02:06,130
three options to work here first of all

60
00:02:06,130 --> 00:02:08,139
they can use first of all themselves and

61
00:02:08,139 --> 00:02:09,699
they can throw possible to the upper

62
00:02:09,699 --> 00:02:10,989
stories and get the output and do

63
00:02:10,989 --> 00:02:12,430
anything they may want they are writing

64
00:02:12,430 --> 00:02:14,200
in Python so it's very easy to write

65
00:02:14,200 --> 00:02:17,819
simple Python bike problems to use

66
00:02:17,819 --> 00:02:20,099
also for instance in most areas or tsa's

67
00:02:20,099 --> 00:02:21,780
would you get this a Python generator

68
00:02:21,780 --> 00:02:23,909
that you can just call in a loop and you

69
00:02:23,909 --> 00:02:25,260
get all the all the activity all the

70
00:02:25,260 --> 00:02:28,530
things in there in the repository the

71
00:02:28,530 --> 00:02:31,469
other one is using the raw index which

72
00:02:31,469 --> 00:02:33,569
basically means coriolis t-shirts to get

73
00:02:33,569 --> 00:02:34,980
the same information that is in the data

74
00:02:34,980 --> 00:02:36,659
source but you don't need to have real

75
00:02:36,659 --> 00:02:38,280
access to the source you will need to

76
00:02:38,280 --> 00:02:41,280
you know go against the infrastructure

77
00:02:41,280 --> 00:02:43,049
because usually the infrastructure is

78
00:02:43,049 --> 00:02:45,329
not designed to for people to download

79
00:02:45,329 --> 00:02:46,889
everything anytime and stuff like that

80
00:02:46,889 --> 00:02:48,870
so that's why you can access Iraq

81
00:02:48,870 --> 00:02:50,700
t-shirts and the third one is go to the

82
00:02:50,700 --> 00:02:52,409
enriched indexes for most things

83
00:02:52,409 --> 00:02:54,420
probably enriched indexes are good

84
00:02:54,420 --> 00:02:56,700
enough and they are already prepared for

85
00:02:56,700 --> 00:02:58,169
being curried and so on and are more

86
00:02:58,169 --> 00:03:04,049
more comfortable to use you can find

87
00:03:04,049 --> 00:03:06,989
more information about your lab in your

88
00:03:06,989 --> 00:03:09,120
lab dot github dot and there you have

89
00:03:09,120 --> 00:03:11,159
access to all the components to all the

90
00:03:11,159 --> 00:03:12,599
source code of course and to some

91
00:03:12,599 --> 00:03:17,159
documentation most of the components are

92
00:03:17,159 --> 00:03:19,439
here some of them I already talked about

93
00:03:19,439 --> 00:03:21,750
first of all is the one retrieving

94
00:03:21,750 --> 00:03:23,069
information from the repositories

95
00:03:23,069 --> 00:03:24,900
sorting had this the one dealing with

96
00:03:24,900 --> 00:03:27,120
affiliation so it tries to store

97
00:03:27,120 --> 00:03:28,919
affiliation for every person and tries

98
00:03:28,919 --> 00:03:30,870
to do unique identities unique

99
00:03:30,870 --> 00:03:32,790
identities means converting identities

100
00:03:32,790 --> 00:03:34,799
to persons because you know that persons

101
00:03:34,799 --> 00:03:36,329
use different entities in different data

102
00:03:36,329 --> 00:03:38,129
sources and even in the same one for

103
00:03:38,129 --> 00:03:39,629
instance people change email addresses

104
00:03:39,629 --> 00:03:42,930
so sorting out tries to keep track of

105
00:03:42,930 --> 00:03:47,069
that and it uses some heuristics and can

106
00:03:47,069 --> 00:03:49,650
actually be fit with manual information

107
00:03:49,650 --> 00:03:51,299
let's say for instance key TM files or

108
00:03:51,299 --> 00:03:52,829
other files that include information

109
00:03:52,829 --> 00:03:54,530
about affiliation

110
00:03:54,530 --> 00:03:56,790
tomorrow elk is the one enriching the

111
00:03:56,790 --> 00:03:58,079
information and producing the kevanna

112
00:03:58,079 --> 00:03:58,829
indexes

113
00:03:58,829 --> 00:04:01,319
Arthur is now on beta and it's designed

114
00:04:01,319 --> 00:04:03,959
to orchestrate everything so it is I

115
00:04:03,959 --> 00:04:05,189
need to deal with thousands of

116
00:04:05,189 --> 00:04:06,959
repositories at the same time if you are

117
00:04:06,959 --> 00:04:08,970
only dealing with tens of them probably

118
00:04:08,970 --> 00:04:10,949
you don't really need alpha R 2 cube

119
00:04:10,949 --> 00:04:12,629
meter is the fork of Cabana

120
00:04:12,629 --> 00:04:15,090
and panels is the information that the

121
00:04:15,090 --> 00:04:17,220
configuration of Cabana I mean the real

122
00:04:17,220 --> 00:04:18,750
information the list of visualizations

123
00:04:18,750 --> 00:04:20,789
and so on that you have in the dashboard

124
00:04:20,789 --> 00:04:22,740
so it's basically configuration for

125
00:04:22,740 --> 00:04:24,570
computer there are some more elements in

126
00:04:24,570 --> 00:04:26,340
the works but for now it's basically

127
00:04:26,340 --> 00:04:30,820
that this is the list of backends that

128
00:04:30,820 --> 00:04:33,370
the more elk are supporting right now

129
00:04:33,370 --> 00:04:35,500
there you can see that you have the ones

130
00:04:35,500 --> 00:04:36,790
that we have but you have all the things

131
00:04:36,790 --> 00:04:38,500
like I don't know meetup for behavior

132
00:04:38,500 --> 00:04:41,500
people mail stock exchange sappy board

133
00:04:41,500 --> 00:04:46,360
demain and many others and this is that

134
00:04:46,360 --> 00:04:48,040
the main source for documentation right

135
00:04:48,040 --> 00:04:50,080
now in fact it's a training guide where

136
00:04:50,080 --> 00:04:52,690
you should be put two up to speed to do

137
00:04:52,690 --> 00:04:54,280
your python scripting for instance on

138
00:04:54,280 --> 00:04:56,590
top of this in maybe half an hour I'm

139
00:04:56,590 --> 00:04:59,170
going to show you very simple examples

140
00:04:59,170 --> 00:05:01,260
but basically here you have how to use

141
00:05:01,260 --> 00:05:03,970
elastic sorry how to use first of all to

142
00:05:03,970 --> 00:05:05,590
retrieve information how to produce

143
00:05:05,590 --> 00:05:07,210
simple dance words with a couple of

144
00:05:07,210 --> 00:05:08,950
comments and it's literal couple of

145
00:05:08,950 --> 00:05:11,500
commands all the tools are in pi PI so

146
00:05:11,500 --> 00:05:13,150
they are doing ember is listed with P I

147
00:05:13,150 --> 00:05:16,740
PI and I would say that this more

148
00:05:16,740 --> 00:05:19,120
incident it seems to be at first

149
00:05:19,120 --> 00:05:23,230
instance and now your turn in fact how

150
00:05:23,230 --> 00:05:24,610
you can play with the dashboard of

151
00:05:24,610 --> 00:05:26,050
course you can just go to the dashboard

152
00:05:26,050 --> 00:05:27,910
and find information which is not equate

153
00:05:27,910 --> 00:05:29,680
but but like maybe this one that

154
00:05:29,680 --> 00:05:32,440
document now you can just play with it

155
00:05:32,440 --> 00:05:33,640
and see whether you find something

156
00:05:33,640 --> 00:05:35,050
curious or whatever you can look for

157
00:05:35,050 --> 00:05:36,670
yourself and you can track whether this

158
00:05:36,670 --> 00:05:38,170
really corresponds to what you did or

159
00:05:38,170 --> 00:05:41,140
not you can play with the last assert

160
00:05:41,140 --> 00:05:43,450
data so for that you currently need a

161
00:05:43,450 --> 00:05:45,910
password but you can ask s and I ask to

162
00:05:45,910 --> 00:05:47,680
the foundation to see whether there is

163
00:05:47,680 --> 00:05:49,660
any trouble but basically as far as I

164
00:05:49,660 --> 00:05:51,130
know they were interested in developers

165
00:05:51,130 --> 00:05:54,280
using this information so it's only a

166
00:05:54,280 --> 00:05:56,740
matter of suing the password you can of

167
00:05:56,740 --> 00:05:58,780
course produce scripts link the data to

168
00:05:58,780 --> 00:06:00,520
problems whatever because you can do

169
00:06:00,520 --> 00:06:02,530
this important and you can of course

170
00:06:02,530 --> 00:06:04,330
collaborate to improve cue more love if

171
00:06:04,330 --> 00:06:06,160
you want or if you spot any problem or

172
00:06:06,160 --> 00:06:08,860
tell us so that we can improve it or and

173
00:06:08,860 --> 00:06:12,090
of course you can report backs etc and

174
00:06:12,090 --> 00:06:15,250
so three specific examples of how to use

175
00:06:15,250 --> 00:06:17,560
the data so the verse the first one is

176
00:06:17,560 --> 00:06:20,860
very simple and it's just downloading

177
00:06:20,860 --> 00:06:23,890
the data from the UI itself in tables

178
00:06:23,890 --> 00:06:27,100
you have this which basically means

179
00:06:27,100 --> 00:06:29,050
retrieve all the day all the data from

180
00:06:29,050 --> 00:06:30,760
the table in CSV format you know that

181
00:06:30,760 --> 00:06:33,400
CSV can be easily exported to a script

182
00:06:33,400 --> 00:06:35,410
or supported to a spreadsheet for

183
00:06:35,410 --> 00:06:37,810
instance to LibreOffice and you can show

184
00:06:37,810 --> 00:06:40,710
all that information in it

185
00:06:40,710 --> 00:06:42,810
this is probably the most simple one but

186
00:06:42,810 --> 00:06:44,850
you need to have the table that you need

187
00:06:44,850 --> 00:06:46,830
but if you're looking like information

188
00:06:46,830 --> 00:06:49,560
like or participation by organization or

189
00:06:49,560 --> 00:06:51,060
participation by the developer or the

190
00:06:51,060 --> 00:06:52,470
stuff like that you already have the

191
00:06:52,470 --> 00:06:56,370
table the second one is reports access

192
00:06:56,370 --> 00:06:58,229
to the database and this is the most

193
00:06:58,229 --> 00:07:00,539
important is how to access with Carla I

194
00:07:00,539 --> 00:07:03,120
mean elasticsearch chains have a very

195
00:07:03,120 --> 00:07:04,949
simple HTTP interface or rest interface

196
00:07:04,949 --> 00:07:07,050
and then you can use Carl or similar

197
00:07:07,050 --> 00:07:08,970
tools just to access the data the only

198
00:07:08,970 --> 00:07:10,470
stuff here is to know about the

199
00:07:10,470 --> 00:07:12,419
elasticsearch foreign language which is

200
00:07:12,419 --> 00:07:14,370
not that difficult anyway so this is a

201
00:07:14,370 --> 00:07:16,169
very simple query you can see the query

202
00:07:16,169 --> 00:07:18,930
up door which is basically saying I'm

203
00:07:18,930 --> 00:07:21,750
going to to mark in my screen this is

204
00:07:21,750 --> 00:07:24,360
that the elasticsearch instance so you

205
00:07:24,360 --> 00:07:26,520
have to substitute this for the elastic

206
00:07:26,520 --> 00:07:29,190
search for the dots board this is the

207
00:07:29,190 --> 00:07:30,900
get index which means get information

208
00:07:30,900 --> 00:07:33,419
from our gate and this is the search

209
00:07:33,419 --> 00:07:35,940
query in this case it's very simple it's

210
00:07:35,940 --> 00:07:39,389
give me one result whatever and purify

211
00:07:39,389 --> 00:07:41,669
it so that the JSON which is the result

212
00:07:41,669 --> 00:07:44,280
can be read by humans and here's what

213
00:07:44,280 --> 00:07:46,380
you get first of all you get the size of

214
00:07:46,380 --> 00:07:48,599
the of the index in this case it was a

215
00:07:48,599 --> 00:07:53,490
boy so 407 and this is one example of a

216
00:07:53,490 --> 00:07:55,590
hit it is each of the documents active

217
00:07:55,590 --> 00:07:57,419
retrieval I only asked for one so I get

218
00:07:57,419 --> 00:07:59,760
one and here you do you can find the

219
00:07:59,760 --> 00:08:01,050
kind of information that you have for

220
00:08:01,050 --> 00:08:02,880
instance for a commit in this case you

221
00:08:02,880 --> 00:08:04,199
have the hands we have to commit the

222
00:08:04,199 --> 00:08:06,539
author the author date a commit date and

223
00:08:06,539 --> 00:08:08,520
more stuff basically what you would find

224
00:08:08,520 --> 00:08:10,740
if you do commit a sorry good luck with

225
00:08:10,740 --> 00:08:12,419
all the parameters to get all the

226
00:08:12,419 --> 00:08:14,760
information out are possible right so

227
00:08:14,760 --> 00:08:16,500
that if you need to do things like I

228
00:08:16,500 --> 00:08:18,240
want to know how many communities person

229
00:08:18,240 --> 00:08:19,770
did it's very easy you just go

230
00:08:19,770 --> 00:08:21,449
substitute that query

231
00:08:21,449 --> 00:08:24,210
according for did that feel that's it so

232
00:08:24,210 --> 00:08:26,580
it's it's not rocket science and this is

233
00:08:26,580 --> 00:08:28,470
how to do the same thing with Python for

234
00:08:28,470 --> 00:08:30,419
Python you can rely on a couple of nice

235
00:08:30,419 --> 00:08:32,490
packages for dealing with rusty shirts

236
00:08:32,490 --> 00:08:34,469
there are elastic search and elastic

237
00:08:34,469 --> 00:08:37,440
search DSL and on both allow you to the

238
00:08:37,440 --> 00:08:39,208
Korean two last research in a simple way

239
00:08:39,208 --> 00:08:42,330
this is actual code for getting

240
00:08:42,330 --> 00:08:45,240
information from gate which is basically

241
00:08:45,240 --> 00:08:48,480
the number of commits per quarter assert

242
00:08:48,480 --> 00:08:49,140
for

243
00:08:49,140 --> 00:08:51,300
merge commit a man commits not touching

244
00:08:51,300 --> 00:08:53,820
the code and since some day

245
00:08:53,820 --> 00:08:57,000
it and unifying behan so that if you

246
00:08:57,000 --> 00:08:58,140
have the same committee in several

247
00:08:58,140 --> 00:09:00,060
repositories that's only going to get

248
00:09:00,060 --> 00:09:02,520
one of those and you can see how that

249
00:09:02,520 --> 00:09:04,890
this code is simple to just get an

250
00:09:04,890 --> 00:09:06,360
instance of elasticsearch they're

251
00:09:06,360 --> 00:09:08,490
organized of an elastic search object

252
00:09:08,490 --> 00:09:11,610
you can see here I will assert object

253
00:09:11,610 --> 00:09:13,530
saying that I'm interested in they get

254
00:09:13,530 --> 00:09:17,670
index then I add some filters matrix in

255
00:09:17,670 --> 00:09:20,610
brackets this is very similar to SQL

256
00:09:20,610 --> 00:09:22,800
Kimmy in SQL for instance you can see

257
00:09:22,800 --> 00:09:24,960
that the same structure of adding

258
00:09:24,960 --> 00:09:27,960
components to the query and then you

259
00:09:27,960 --> 00:09:29,730
have loop where you basically look

260
00:09:29,730 --> 00:09:32,160
through the answer by elastic search

261
00:09:32,160 --> 00:09:34,440
which is in this case as I said data

262
00:09:34,440 --> 00:09:40,110
procurer and if you want to have a try

263
00:09:40,110 --> 00:09:41,970
at something quite similar done with the

264
00:09:41,970 --> 00:09:44,160
same software for random repositories in

265
00:09:44,160 --> 00:09:46,050
github you can use Khaldoon dot io

266
00:09:46,050 --> 00:09:48,570
that's another view and all of this can

267
00:09:48,570 --> 00:09:50,850
also be done with the same software that

268
00:09:50,850 --> 00:09:53,670
is used for the documentation password

269
00:09:53,670 --> 00:09:55,530
but the only thing is that here for free

270
00:09:55,530 --> 00:09:58,500
you can go and analyze any github

271
00:09:58,500 --> 00:10:00,420
organization that you may want so you

272
00:10:00,420 --> 00:10:02,220
only have to go there you we need to

273
00:10:02,220 --> 00:10:04,350
your gig how you get github account

274
00:10:04,350 --> 00:10:07,860
because the github API uses token and

275
00:10:07,860 --> 00:10:09,360
you we need to your token but otherwise

276
00:10:09,360 --> 00:10:12,630
you can get a complete transport for

277
00:10:12,630 --> 00:10:15,540
that project but that's only if you want

278
00:10:15,540 --> 00:10:17,280
to play a bit with the tools without

279
00:10:17,280 --> 00:10:19,430
actually having to install the tools and

280
00:10:19,430 --> 00:10:23,130
enjoy so this is the link to the

281
00:10:23,130 --> 00:10:25,710
software this is the link to the tool

282
00:10:25,710 --> 00:10:28,260
transport and that's all from my side I

283
00:10:28,260 --> 00:10:29,550
don't know if you have questions or

284
00:10:29,550 --> 00:10:33,410
comments or anything else

285
00:10:34,990 --> 00:10:40,910
here's one need to finish or what okay I

286
00:10:40,910 --> 00:10:42,410
have a scarf who's this have somebody

287
00:10:42,410 --> 00:10:44,180
makes a question even what's the time or

288
00:10:44,180 --> 00:10:50,570
wherever so not even though okay - what

289
00:10:50,570 --> 00:10:59,060
score honestly honestly we didn't look a

290
00:10:59,060 --> 00:11:01,940
lot what to find in it because we were

291
00:11:01,940 --> 00:11:05,660
busy trying to produce it for this talk

292
00:11:05,660 --> 00:11:07,340
I was looking at it and maybe would

293
00:11:07,340 --> 00:11:08,810
supposed to pay a bit more is the

294
00:11:08,810 --> 00:11:10,660
structure that you have in Bugzilla

295
00:11:10,660 --> 00:11:13,370
because it seems that my personal

296
00:11:13,370 --> 00:11:14,810
impression by looking at the data seemed

297
00:11:14,810 --> 00:11:16,730
that either a bag is fixed even say

298
00:11:16,730 --> 00:11:18,980
couple of months or it's it's forever

299
00:11:18,980 --> 00:11:21,080
that's my very personal opinion if you

300
00:11:21,080 --> 00:11:22,970
look at the structure of the state's you

301
00:11:22,970 --> 00:11:26,290
can see how you have a lot of of course

302
00:11:26,290 --> 00:11:29,330
issues coming from fixed or whatever

303
00:11:29,330 --> 00:11:31,160
sorry from whatever to fix or to close

304
00:11:31,160 --> 00:11:33,050
but then there are a lot of them there

305
00:11:33,050 --> 00:11:35,570
stay there for a while and it seems that

306
00:11:35,570 --> 00:11:37,310
after some time they have very little

307
00:11:37,310 --> 00:11:39,890
chance of him fixed I don't know but

308
00:11:39,890 --> 00:11:41,900
that's whenever were looking at the data

309
00:11:41,900 --> 00:11:43,880
that was something that and the other

310
00:11:43,880 --> 00:11:45,230
thing is probably with respect to

311
00:11:45,230 --> 00:11:47,990
Garrett that you have a very short time

312
00:11:47,990 --> 00:11:50,830
to code compared to other projects if if

313
00:11:50,830 --> 00:11:53,810
that still with doing the 2-3 months

314
00:11:53,810 --> 00:11:56,210
again you saw that you have some code

315
00:11:56,210 --> 00:11:58,850
abuse sitting there for one year but if

316
00:11:58,850 --> 00:12:00,710
it is if it is deal with you in the

317
00:12:00,710 --> 00:12:02,300
first two or three months time to fix

318
00:12:02,300 --> 00:12:04,490
sorry time to go time to March its

319
00:12:04,490 --> 00:12:05,840
recent barriers when they were compared

320
00:12:05,840 --> 00:12:07,340
to other period so in summary I would

321
00:12:07,340 --> 00:12:11,090
say but we didn't we had analysis of of

322
00:12:11,090 --> 00:12:12,430
the Priya

323
00:12:12,430 --> 00:12:16,790
okay anything else any recommend or

324
00:12:16,790 --> 00:12:19,750
thank you very much

