1
00:00:00,060 --> 00:00:02,930
I'm pleased

2
00:00:25,790 --> 00:00:28,890
[Music]

3
00:00:46,590 --> 00:00:49,699
[Music]

4
00:00:58,309 --> 00:01:16,710
to try to present solutions I try to say

5
00:01:16,710 --> 00:01:18,780
what's the right way to do stuff I just

6
00:01:18,780 --> 00:01:23,960
try to describe how things work is like

7
00:01:23,960 --> 00:01:30,450
introduction talk into the talk can

8
00:01:30,450 --> 00:01:31,770
generate interesting interesting

9
00:01:31,770 --> 00:01:40,740
discussions later but just the ones that

10
00:01:40,740 --> 00:01:44,109
I think is most relevant

11
00:01:44,109 --> 00:01:47,539
so let's see some contest for this first

12
00:01:47,539 --> 00:01:49,939
love care and the best what it needs to

13
00:01:49,939 --> 00:01:54,859
do to do it so how many of you know what

14
00:01:54,859 --> 00:01:59,119
QM is and what it does how many of you

15
00:01:59,119 --> 00:02:05,780
have worked on QM code okay I'll try to

16
00:02:05,780 --> 00:02:11,720
make this quick describe its website as

17
00:02:11,720 --> 00:02:13,430
a generic open-source machine emulator

18
00:02:13,430 --> 00:02:18,799
and visualizer when you're using

19
00:02:18,799 --> 00:02:26,170
commands and virtual machines let's see

20
00:02:27,340 --> 00:02:43,519
with outside world that's a command-line

21
00:02:43,519 --> 00:02:46,790
interface for to control km it has

22
00:02:46,790 --> 00:02:56,650
started any protocol to communicate with

23
00:02:56,650 --> 00:03:08,630
Jason let's see what it has to do on the

24
00:03:08,630 --> 00:03:11,530
on the inside

25
00:03:17,240 --> 00:03:20,319
[Music]

26
00:03:24,060 --> 00:03:27,210
[Music]

27
00:03:57,720 --> 00:04:00,789
[Music]

28
00:04:02,130 --> 00:04:37,570
it has two common line options so we

29
00:04:37,570 --> 00:04:40,090
could use the same infrastructure to

30
00:04:40,090 --> 00:04:41,560
hand copied files and command-line

31
00:04:41,560 --> 00:04:44,919
options at the same time so let's see

32
00:04:44,919 --> 00:04:47,549
how to look like

33
00:05:14,690 --> 00:05:17,730
[Music]

34
00:05:28,050 --> 00:05:31,100
[Music]

35
00:05:33,830 --> 00:05:36,940
[Music]

36
00:05:50,420 --> 00:05:53,140
[Applause]

37
00:05:53,140 --> 00:06:00,589
[Music]

38
00:06:15,939 --> 00:06:18,939
so

39
00:06:21,300 --> 00:06:26,610
it's quite successful inside corner it's

40
00:06:26,610 --> 00:06:28,900
internally to create and configure

41
00:06:28,900 --> 00:06:31,090
basically every device himself inside

42
00:06:31,090 --> 00:06:33,490
equipment and the addition of this

43
00:06:33,490 --> 00:06:38,370
exterior usage he provides online

44
00:06:38,370 --> 00:06:42,390
interface to handle devices web devices

45
00:06:42,390 --> 00:06:48,599
and its hierarchy and property system

46
00:06:49,650 --> 00:06:52,660
introspect and Pequod's inside a virtual

47
00:06:52,660 --> 00:06:54,400
machine for example using the infra

48
00:06:54,400 --> 00:06:58,960
cutie-cutie device so let's see that in

49
00:06:58,960 --> 00:06:59,590
action

50
00:06:59,590 --> 00:07:02,530
Thank You Bev this lots of stuff so I

51
00:07:02,530 --> 00:07:05,290
want explain because the focus of this

52
00:07:05,290 --> 00:07:08,700
talk is to see how stuff works

53
00:07:19,310 --> 00:07:22,379
[Music]

54
00:07:29,069 --> 00:07:33,669
so you can see how the properties of

55
00:07:33,669 --> 00:07:37,240
device type like he 1000 declared inside

56
00:07:37,240 --> 00:07:40,440
the code you have by the plate code to

57
00:07:40,440 --> 00:07:43,840
define device types defined on how they

58
00:07:43,840 --> 00:07:47,159
do it's just a sample of how it is used

59
00:07:47,159 --> 00:07:51,849
things are the relevant parts here are

60
00:07:51,849 --> 00:07:54,909
GD so for example the neck option is

61
00:07:54,909 --> 00:07:58,000
defined inside an array it's the cavity

62
00:07:58,000 --> 00:08:01,300
it has many data types and many helper

63
00:08:01,300 --> 00:08:03,460
macros depending on the data types of

64
00:08:03,460 --> 00:08:08,289
properties this is something also

65
00:08:08,289 --> 00:08:10,569
provided by Q - so okay valve allows you

66
00:08:10,569 --> 00:08:13,840
to see the whole device tree in fukui is

67
00:08:13,840 --> 00:08:15,400
going to show all the dresses and

68
00:08:15,400 --> 00:08:17,800
devices inside qmo and this is how

69
00:08:17,800 --> 00:08:21,060
handled by q -

70
00:08:23,350 --> 00:08:29,800
next API okay okay so qpi is assistant

71
00:08:29,800 --> 00:08:32,919
for defining qmo external interfaces

72
00:08:32,919 --> 00:08:36,640
it is a JSON like language to define

73
00:08:36,640 --> 00:08:39,659
data structures and interfaces like

74
00:08:39,659 --> 00:08:49,830
comments people meant the input output

75
00:08:49,830 --> 00:08:53,650
conversion and so on and it general base

76
00:08:53,650 --> 00:08:55,780
it on a pure API schema it generates

77
00:08:55,780 --> 00:08:58,570
lots of code for declaring C types

78
00:08:58,570 --> 00:09:01,140
corresponding to those data structures

79
00:09:01,140 --> 00:09:05,340
civilization visitors visitor functions

80
00:09:05,340 --> 00:09:09,220
can be comments dispatching interfaces

81
00:09:09,220 --> 00:09:12,570
destruction and documentation

82
00:09:14,520 --> 00:09:17,380
successfully usually subterranea to the

83
00:09:17,380 --> 00:09:20,740
final stretch all 24 months and to

84
00:09:20,740 --> 00:09:22,570
define and parse a few command-line

85
00:09:22,570 --> 00:09:26,950
options so every single data structure

86
00:09:26,950 --> 00:09:30,430
in current P is heavily documented on

87
00:09:30,430 --> 00:09:33,400
the character schema so it's a great

88
00:09:33,400 --> 00:09:35,770
system and we have been trying to use

89
00:09:35,770 --> 00:09:40,210
API inside the room when the tiny

90
00:09:40,210 --> 00:09:43,450
external interfaces so let's see that in

91
00:09:43,450 --> 00:09:48,550
action this is a PNP comment that showed

92
00:09:48,550 --> 00:09:52,229
up at it has a few arguments

93
00:09:52,610 --> 00:09:55,659
[Music]

94
00:09:58,470 --> 00:11:13,559
because you have a general

95
00:11:13,559 --> 00:11:17,829
generalization of Cuba it has lots of

96
00:11:17,829 --> 00:11:21,009
interesting futures features I wanted to

97
00:11:21,009 --> 00:11:24,899
explain everything about it it's good

98
00:11:26,750 --> 00:11:29,059
[Music]

99
00:11:29,059 --> 00:11:34,589
it has glasses it has a property system

100
00:11:34,589 --> 00:11:45,709
and instructions include just whoppers

101
00:11:48,469 --> 00:11:54,659
this I chose so I won't try to explain -

102
00:11:54,659 --> 00:12:19,199
words inside some entity that's used to

103
00:12:19,199 --> 00:12:22,259
implement AVM it is the machine type

104
00:12:22,259 --> 00:12:26,959
system employment it's used by the

105
00:12:29,359 --> 00:12:38,419
system I use

106
00:12:38,419 --> 00:12:42,659
it's used at lots of places we benefit

107
00:12:42,659 --> 00:12:44,939
from the property system when we are

108
00:12:44,939 --> 00:12:47,069
dealing with options and common line

109
00:12:47,069 --> 00:13:00,029
when we are dealing with CP options even

110
00:13:00,029 --> 00:13:04,849
so it is everywhere

111
00:13:06,559 --> 00:13:11,480
and I see that

112
00:13:14,810 --> 00:13:18,080
now that we have seen an introduction to

113
00:13:18,080 --> 00:13:20,380
each of those abstractions individually

114
00:13:20,380 --> 00:13:25,580
let's see how they work together that's

115
00:13:25,580 --> 00:13:30,950
where things get interesting first

116
00:13:30,950 --> 00:13:35,750
example we have a circle is the - Numa

117
00:13:35,750 --> 00:13:37,550
common line option it's one case where

118
00:13:37,550 --> 00:13:41,230
we mix QM apps and pure API together

119
00:13:41,230 --> 00:13:45,070
let's see how to build that

120
00:13:46,890 --> 00:13:49,620
this is how the - Numa command-line

121
00:13:49,620 --> 00:13:53,430
option is defined on the code that's the

122
00:13:53,430 --> 00:13:57,810
empty desk that's where the accepted

123
00:13:57,810 --> 00:13:59,940
options file - limit would be define it

124
00:13:59,940 --> 00:14:03,690
and it's simply empty instead of define

125
00:14:03,690 --> 00:14:07,680
the options here is the QAPI schema to

126
00:14:07,680 --> 00:14:20,250
define that so - Numa that's I defined

127
00:14:20,250 --> 00:14:23,790
it on the QAPI schema so basically you

128
00:14:23,790 --> 00:14:30,540
have a declaration saying that can have

129
00:14:30,540 --> 00:14:33,630
those shoes can be specified on the

130
00:14:33,630 --> 00:14:42,240
command line to convert the data to

131
00:14:42,240 --> 00:14:46,880
apply data so they can be used also

132
00:14:50,900 --> 00:14:58,439
[Music]

133
00:15:00,440 --> 00:15:03,960
options to carry socials and validate

134
00:15:03,960 --> 00:15:08,710
them so that somehow is this case

135
00:15:08,710 --> 00:15:11,879
[Music]

136
00:15:11,889 --> 00:15:13,749
is where things are working and they

137
00:15:13,749 --> 00:15:16,299
should because all the options are

138
00:15:16,299 --> 00:15:19,779
specified on the QAPI schema and there's

139
00:15:19,779 --> 00:15:38,889
no application there's no options - I

140
00:15:38,889 --> 00:15:48,989
see a table and - machines are working

141
00:16:01,070 --> 00:16:05,190
[Music]

142
00:16:07,259 --> 00:16:11,619
it's used to create an object basically

143
00:16:11,619 --> 00:16:14,470
it's a genetic system to create objects

144
00:16:14,470 --> 00:16:20,549
inside qmo comment to do that

145
00:17:16,630 --> 00:17:19,809
[Music]

146
00:17:27,720 --> 00:17:34,150
complete appearing on the cake schema so

147
00:17:34,150 --> 00:17:38,039
you don't benefit from it you don't have

148
00:17:39,210 --> 00:17:42,349
[Music]

149
00:17:42,809 --> 00:17:50,158
that you could use the interface

150
00:17:58,750 --> 00:18:06,909
I want to that perfectly together

151
00:18:06,909 --> 00:18:10,740
we have some limitations

152
00:18:15,350 --> 00:18:21,040
so the CPR model system is our camo uses

153
00:18:21,040 --> 00:18:23,810
internally because basically CPUs are

154
00:18:23,810 --> 00:18:26,570
devices devices are cubeb devices and

155
00:18:26,570 --> 00:18:29,650
kill them is implemented using formal

156
00:18:29,650 --> 00:18:33,710
and we have common line options that are

157
00:18:33,710 --> 00:18:36,920
going to control this the CPU devices

158
00:18:36,920 --> 00:18:54,260
basically they are specified webster

159
00:18:54,260 --> 00:18:56,690
their own core properties the way they

160
00:18:56,690 --> 00:19:00,340
need so in the case of x86 we have a few

161
00:19:00,340 --> 00:19:03,200
static properties using the cue dev

162
00:19:03,200 --> 00:19:06,890
property system and we also have some

163
00:19:06,890 --> 00:19:10,520
properties registered at one time

164
00:19:10,520 --> 00:19:13,960
because we have lots of cpu features

165
00:19:13,960 --> 00:19:18,290
configured on x86 I don't know what the

166
00:19:18,290 --> 00:19:30,560
details on other architectures it's not

167
00:19:30,560 --> 00:19:33,110
using given ops it's using its own power

168
00:19:33,110 --> 00:19:34,880
but that's something we want to change

169
00:19:34,880 --> 00:19:39,170
and using the cube of global property

170
00:19:39,170 --> 00:19:42,830
system let's think of something provided

171
00:19:42,830 --> 00:19:46,100
by Q def that ensures that every device

172
00:19:46,100 --> 00:19:48,140
of a given type is going to have a few

173
00:19:48,140 --> 00:19:50,900
properties set so basically when you use

174
00:19:50,900 --> 00:19:54,980
their CPU CPU futures depend on the

175
00:19:54,980 --> 00:19:57,320
common line are going to be the pair SQ

176
00:19:57,320 --> 00:20:01,550
their options so the same offender cpu

177
00:20:01,550 --> 00:20:03,820
is

178
00:20:04,580 --> 00:20:31,799
we don't even have interface we need to

179
00:20:31,799 --> 00:21:10,710
change the integrated example but

180
00:21:10,710 --> 00:21:16,259
basically to get information about it on

181
00:21:16,259 --> 00:21:19,139
the proper props attribute about all the

182
00:21:19,139 --> 00:21:21,080
features inside view or the prophets

183
00:21:21,080 --> 00:21:27,029
France if your model schema for that

184
00:21:27,029 --> 00:21:29,250
comment

185
00:21:29,250 --> 00:21:33,299
like on the object ad case we have to

186
00:21:33,299 --> 00:21:37,140
use this hacker that basically saves the

187
00:21:37,140 --> 00:21:40,950
props field can have anything so the

188
00:21:40,950 --> 00:21:43,440
semantics of this option is documented

189
00:21:43,440 --> 00:21:46,350
on the documentation for payment but the

190
00:21:46,350 --> 00:21:48,929
schema doesn't tell us which properties

191
00:21:48,929 --> 00:21:50,970
can be there what's the data type what

192
00:21:50,970 --> 00:22:05,010
you can expect that you need to read the

193
00:22:05,010 --> 00:22:12,510
schema and it has an additional problem

194
00:22:12,510 --> 00:22:15,870
that the glue code that will make sure

195
00:22:15,870 --> 00:22:21,470
the implementation can report is

196
00:22:21,470 --> 00:22:26,130
specific for each act attributes so we

197
00:22:26,130 --> 00:22:28,830
need to clean up that to make sure we

198
00:22:28,830 --> 00:22:30,990
use some code to see well how we can get

199
00:22:30,990 --> 00:22:43,440
from structure to that when using

200
00:22:43,440 --> 00:22:48,899
something QAPI based because classes and

201
00:22:48,899 --> 00:22:50,970
properties are registered at one time

202
00:22:50,970 --> 00:22:54,409
especially for properties

203
00:22:58,890 --> 00:23:01,890
they are added at runtime when you're

204
00:23:01,890 --> 00:23:04,200
initializing kurma but the Qi schema is

205
00:23:04,200 --> 00:23:06,780
a static file so you simply can't

206
00:23:06,780 --> 00:23:10,140
represent any runtime information on the

207
00:23:10,140 --> 00:23:11,910
killer placed in a schema so that's why

208
00:23:11,910 --> 00:23:14,070
we have these issues with form being

209
00:23:14,070 --> 00:23:17,270
used with two API

210
00:23:20,920 --> 00:23:52,370
so I think is that but you have any

211
00:23:52,370 --> 00:23:55,280
question then agitates to ask or the

212
00:23:55,280 --> 00:24:02,180
commemorative our mailing list where we

213
00:24:02,180 --> 00:24:04,100
want to go what the practice is when we

214
00:24:04,100 --> 00:24:06,730
want to follow so it's good to have

215
00:24:06,730 --> 00:24:21,640
things I'll try to just to try summary

216
00:24:21,640 --> 00:24:25,840
as we have a few times

217
00:24:42,150 --> 00:24:45,319
[Applause]

218
00:24:56,170 --> 00:24:59,329
[Music]

219
00:25:35,540 --> 00:25:42,779
[Music]

220
00:25:55,570 --> 00:26:00,140
which attributes can be searched by type

221
00:26:00,140 --> 00:26:03,040
device type

222
00:26:08,870 --> 00:26:10,520
you have mechanisms to define the

223
00:26:10,520 --> 00:26:13,820
defaults for them and then we have the

224
00:26:13,820 --> 00:26:15,409
runtime data structures are basically

225
00:26:15,409 --> 00:26:17,990
the options themselves the device

226
00:26:17,990 --> 00:26:26,299
themselves or the actual difference in

227
00:26:26,299 --> 00:26:28,130
this case that makes it difficult that I

228
00:26:28,130 --> 00:26:34,130
try to explain before is that is static

229
00:26:34,130 --> 00:26:36,110
for example for a player whether this

230
00:26:36,110 --> 00:26:40,700
tactic is actually not static for the

231
00:26:40,700 --> 00:26:42,890
other system so calm properties can be

232
00:26:42,890 --> 00:26:44,899
right served at one time and you can

233
00:26:44,899 --> 00:26:46,940
easily translate to the static data udev

234
00:26:46,940 --> 00:26:51,500
the defaults for Chrome apps and also

235
00:26:51,500 --> 00:26:53,809
defined at runtime so you can't just go

236
00:26:53,809 --> 00:26:55,460
over to the other data structures later

237
00:26:55,460 --> 00:26:57,529
so this is another search source of

238
00:26:57,529 --> 00:26:59,710
friction

239
00:27:05,470 --> 00:27:12,700
so questions

240
00:27:13,480 --> 00:27:16,320
comments

241
00:27:39,250 --> 00:27:42,539
[Music]

242
00:27:53,400 --> 00:27:56,599
[Music]

243
00:28:26,990 --> 00:28:30,360
and we have a way to define common line

244
00:28:30,360 --> 00:28:39,590
options using to be defined using the

245
00:28:39,590 --> 00:28:42,300
option definitions from two em ups and

246
00:28:42,300 --> 00:28:48,930
on the other I think they are going to

247
00:28:48,930 --> 00:28:51,600
live there and we just need to make them

248
00:28:51,600 --> 00:28:57,000
work together I think we one time

249
00:28:57,000 --> 00:28:59,310
registration properties so we just need

250
00:28:59,310 --> 00:29:04,170
to make sure they work together there to

251
00:29:04,170 --> 00:29:08,990
describe common options in queue

252
00:29:08,990 --> 00:29:45,650
in the language it's not inside form

253
00:29:45,650 --> 00:29:49,990
that we can work to make you deaf we use

254
00:29:49,990 --> 00:29:55,700
code instead of duplicating so we can

255
00:29:55,700 --> 00:29:57,200
reduce the application between them by

256
00:29:57,200 --> 00:30:08,690
reusing the same infrastructure three

257
00:30:08,690 --> 00:30:11,140
different factors for interval numbers

258
00:30:11,140 --> 00:30:29,510
for Strings so you can have it's going

259
00:30:29,510 --> 00:30:31,910
to be a huge effort but my by making

260
00:30:31,910 --> 00:30:33,080
them

261
00:30:33,080 --> 00:30:34,640
feet from each other and we're using

262
00:30:34,640 --> 00:30:41,660
quote from each other anybody else

263
00:30:41,660 --> 00:30:44,719
[Music]

264
00:31:13,630 --> 00:31:16,709
[Music]

265
00:31:19,650 --> 00:31:22,390
new abstractions were added without a

266
00:31:22,390 --> 00:31:35,050
clear to replace other ones there was no

267
00:31:35,050 --> 00:31:53,110
clear plan the command-line options

268
00:31:53,110 --> 00:31:58,570
there was no clear plan to say okay we

269
00:31:58,570 --> 00:32:03,960
want to convert the ordinary so I think

270
00:32:06,050 --> 00:32:09,530
yes add another answer is having test

271
00:32:09,530 --> 00:32:11,870
cases ready from the start makes any

272
00:32:11,870 --> 00:32:14,030
conversions absolutely easy that was one

273
00:32:14,030 --> 00:32:17,110
of the interests that we were facing

274
00:32:31,080 --> 00:32:34,950
okay so those legs are available there

275
00:32:34,950 --> 00:32:38,759
and if you don't want to write down the

276
00:32:38,759 --> 00:32:40,980
link you can just get the size them and

277
00:32:40,980 --> 00:32:43,259
follow them there's a blog post all

278
00:32:43,259 --> 00:32:46,110
right I wrote about with an introduction

279
00:32:46,110 --> 00:32:48,629
to killing replies with links to other

280
00:32:48,629 --> 00:32:51,869
ones and I have been trying to write or

281
00:32:51,869 --> 00:32:53,759
somebody after which one so if you want

282
00:32:53,759 --> 00:32:56,130
to follow it thank you very much

283
00:32:56,130 --> 00:33:01,120
[Applause]

284
00:33:01,120 --> 00:33:03,179
you

