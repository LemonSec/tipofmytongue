1
00:00:06,470 --> 00:00:09,440
okay ready right so as this part of the

2
00:00:09,440 --> 00:00:11,210
slide says my name is Steve and as this

3
00:00:11,210 --> 00:00:13,639
part says I'm a bit of a geek today it's

4
00:00:13,639 --> 00:00:16,010
on WebRTC low barrier to entry low

5
00:00:16,010 --> 00:00:18,080
barrier to exit question mark meaning is

6
00:00:18,080 --> 00:00:20,029
it true what I told you last year that

7
00:00:20,029 --> 00:00:22,430
this stuff is actually really easy yeah

8
00:00:22,430 --> 00:00:25,570
no it's not this is not to say that

9
00:00:25,570 --> 00:00:28,730
WebRTC has things missing web RTC set

10
00:00:28,730 --> 00:00:30,619
out to do a job which is provide an easy

11
00:00:30,619 --> 00:00:32,000
way to get communications working

12
00:00:32,000 --> 00:00:34,910
peer-to-peer in the browser this is not

13
00:00:34,910 --> 00:00:37,160
to say WebRTC is missing stuff per se

14
00:00:37,160 --> 00:00:38,809
but there are things that you as a

15
00:00:38,809 --> 00:00:40,460
developer have to do to actually make it

16
00:00:40,460 --> 00:00:43,129
work so I'm gonna go through stuff in

17
00:00:43,129 --> 00:00:46,160
the API that is nice work stuff that you

18
00:00:46,160 --> 00:00:47,870
need to do within the browser itself and

19
00:00:47,870 --> 00:00:49,699
infrastructure things that you will need

20
00:00:49,699 --> 00:00:52,489
to build by all used open source

21
00:00:52,489 --> 00:00:55,730
technical for stuff for and I might

22
00:00:55,730 --> 00:00:57,280
bring signaling into this because

23
00:00:57,280 --> 00:01:00,140
signaling is Jenny's hailed as the thing

24
00:01:00,140 --> 00:01:02,059
which is missing from WebRTC it's not

25
00:01:02,059 --> 00:01:05,659
but I will mention it so API what do you

26
00:01:05,659 --> 00:01:07,010
need to do to get around the API

27
00:01:07,010 --> 00:01:09,320
problems well first is conformity

28
00:01:09,320 --> 00:01:11,299
because let's face it we have a standard

29
00:01:11,299 --> 00:01:14,890
what city is a standard and obviously

30
00:01:14,890 --> 00:01:18,649
everyone follows our standard right yeah

31
00:01:18,649 --> 00:01:21,320
so there's problems there there's

32
00:01:21,320 --> 00:01:22,969
functionality problems because obviously

33
00:01:22,969 --> 00:01:25,399
after implementing the standard you've

34
00:01:25,399 --> 00:01:26,780
actually implemented the things the

35
00:01:26,780 --> 00:01:28,700
standard says in the know they don't

36
00:01:28,700 --> 00:01:30,110
implement the standard in the right way

37
00:01:30,110 --> 00:01:31,549
so you've got to work around the

38
00:01:31,549 --> 00:01:33,380
implementation things and no one's ever

39
00:01:33,380 --> 00:01:34,969
released software with bugs in it so you

40
00:01:34,969 --> 00:01:36,350
don't have to work around the bugs in

41
00:01:36,350 --> 00:01:38,810
WebRTC implementation yeah there were

42
00:01:38,810 --> 00:01:40,250
bugs so you've got to work around them

43
00:01:40,250 --> 00:01:44,119
as well it's easy so let's start with

44
00:01:44,119 --> 00:01:46,250
the conformity problem this is the first

45
00:01:46,250 --> 00:01:47,719
line that starts been much every slide

46
00:01:47,719 --> 00:01:49,820
you'll ever see on web RTC getusermedia

47
00:01:49,820 --> 00:01:53,780
or in this case WebKit getusermedia you

48
00:01:53,780 --> 00:01:55,909
see the pull with that already it starts

49
00:01:55,909 --> 00:01:57,140
with the word web and ends in the word

50
00:01:57,140 --> 00:02:01,009
kit not all browsers are WebKit funnily

51
00:02:01,009 --> 00:02:03,649
enough so you have to make sure that all

52
00:02:03,649 --> 00:02:05,630
the browser's have their own little

53
00:02:05,630 --> 00:02:07,670
getusermedia because when this when

54
00:02:07,670 --> 00:02:09,830
people were developing WebRTC in the

55
00:02:09,830 --> 00:02:12,800
browser first off thinking well I'm not

56
00:02:12,800 --> 00:02:13,970
quite sure if this is gonna be the real

57
00:02:13,970 --> 00:02:16,130
standard so we'll call it WebKit and

58
00:02:16,130 --> 00:02:17,510
we'll use getusermedia when the

59
00:02:17,510 --> 00:02:18,080
standards

60
00:02:18,080 --> 00:02:20,260
got finished and it's all nicely sorted

61
00:02:20,260 --> 00:02:22,820
so hardly anyone actually has

62
00:02:22,820 --> 00:02:24,530
getusermedia everyone has their own

63
00:02:24,530 --> 00:02:27,140
versions so you start off by writing

64
00:02:27,140 --> 00:02:34,520
this oh yeah even Microsoft has their

65
00:02:34,520 --> 00:02:37,040
own version I mean and when Apple trying

66
00:02:37,040 --> 00:02:38,060
to get around to doing their version of

67
00:02:38,060 --> 00:02:40,550
WebRTC there'll be a or Apple

68
00:02:40,550 --> 00:02:43,430
getusermedia so your first line of code

69
00:02:43,430 --> 00:02:45,950
starts with that start you mean to go on

70
00:02:45,950 --> 00:02:48,170
as they say and you have to do that for

71
00:02:48,170 --> 00:02:50,870
everything getusermedia peer connections

72
00:02:50,870 --> 00:02:52,550
I scan a candidate session descriptions

73
00:02:52,550 --> 00:02:55,850
on URL you've got WebKit peer connection

74
00:02:55,850 --> 00:02:58,940
MS peer connection you've got a multiple

75
00:02:58,940 --> 00:03:01,070
connection so your first line before

76
00:03:01,070 --> 00:03:02,950
you've even started it's about 50 lines

77
00:03:02,950 --> 00:03:07,340
just giving around that that's okay we

78
00:03:07,340 --> 00:03:08,720
know it now we can do that and

79
00:03:08,720 --> 00:03:10,700
everything will be fine it's just an

80
00:03:10,700 --> 00:03:14,060
annoying way to start constraints that's

81
00:03:14,060 --> 00:03:16,310
easy enough you know I would like a

82
00:03:16,310 --> 00:03:18,620
video please I would like it this big I

83
00:03:18,620 --> 00:03:20,360
want it this many frames a second would

84
00:03:20,360 --> 00:03:22,370
you please give me that video how and

85
00:03:22,370 --> 00:03:24,500
they're called constraints however some

86
00:03:24,500 --> 00:03:26,330
browsers don't use the same set of

87
00:03:26,330 --> 00:03:28,190
arguments in the right way so you have

88
00:03:28,190 --> 00:03:30,050
to patch them for the various browsers

89
00:03:30,050 --> 00:03:32,810
Firefox 37 for example had a little bit

90
00:03:32,810 --> 00:03:34,250
of a screwing us in it which mean you

91
00:03:34,250 --> 00:03:37,040
had to lunge the parameters to get it

92
00:03:37,040 --> 00:03:39,620
working but that's okay we know about

93
00:03:39,620 --> 00:03:43,760
that now we didn't at the time when

94
00:03:43,760 --> 00:03:45,170
Firefox 37 came out and everything

95
00:03:45,170 --> 00:03:47,780
suddenly bloke no one knew why you had

96
00:03:47,780 --> 00:03:49,790
to go back and look at it and

97
00:03:49,790 --> 00:03:53,260
unfortunately if you're dealing with a

98
00:03:53,260 --> 00:03:55,430
product which is in the wild and you

99
00:03:55,430 --> 00:03:57,230
have to support browsers that might

100
00:03:57,230 --> 00:04:00,019
include Firefox 37 you still have to

101
00:04:00,019 --> 00:04:01,850
cater for that version and you still

102
00:04:01,850 --> 00:04:03,050
have to go and lunch your parameters

103
00:04:03,050 --> 00:04:05,630
that's okay it only happened once no

104
00:04:05,630 --> 00:04:06,769
one's ever going to break their code

105
00:04:06,769 --> 00:04:08,239
ever again in the entire future of

106
00:04:08,239 --> 00:04:09,920
development so this is the only time you

107
00:04:09,920 --> 00:04:13,330
like I have to do it yeah I doubt it not

108
00:04:13,330 --> 00:04:17,600
two sides the same okay so with all this

109
00:04:17,600 --> 00:04:19,160
template stuff that you have to do every

110
00:04:19,160 --> 00:04:22,610
single time someone thought let's cook

111
00:04:22,610 --> 00:04:24,650
let's just do it once I mean we created

112
00:04:24,650 --> 00:04:26,630
adapter jeaious I say we not just me

113
00:04:26,630 --> 00:04:28,850
everyone in the community so adapter

114
00:04:28,850 --> 00:04:30,770
deus does all the junk that you've just

115
00:04:30,770 --> 00:04:31,729
seen handle

116
00:04:31,729 --> 00:04:34,400
the moles getusermedia and the MS get

117
00:04:34,400 --> 00:04:37,189
user media and the web getusermedia

118
00:04:37,189 --> 00:04:39,889
however adapter jeaious is not the

119
00:04:39,889 --> 00:04:43,339
answer it's the start of the answer it's

120
00:04:43,339 --> 00:04:46,069
not that well maintained you are very

121
00:04:46,069 --> 00:04:49,279
likely going to run into a bug or a an

122
00:04:49,279 --> 00:04:51,259
issue before the maintainer zuv adapter

123
00:04:51,259 --> 00:04:53,629
Jes run into it so you'll probably end

124
00:04:53,629 --> 00:04:55,610
up finding that problem and thinking why

125
00:04:55,610 --> 00:04:57,620
is adapter not working it's like well it

126
00:04:57,620 --> 00:04:58,159
isn't

127
00:04:58,159 --> 00:05:01,449
they just haven't caught up yet

128
00:05:01,719 --> 00:05:04,399
functionality-wise everyone does things

129
00:05:04,399 --> 00:05:07,550
their own way and the is web party's on

130
00:05:07,550 --> 00:05:09,349
probably something the way is WebRTC

131
00:05:09,349 --> 00:05:11,210
ready yet comm gives you a rough

132
00:05:11,210 --> 00:05:13,219
breakdown of what browsers support what

133
00:05:13,219 --> 00:05:15,830
so you can work around all the different

134
00:05:15,830 --> 00:05:16,999
problems in all the different browsers

135
00:05:16,999 --> 00:05:19,309
because you still have to do that and

136
00:05:19,309 --> 00:05:22,789
for some unknown reason some browsers

137
00:05:22,789 --> 00:05:24,740
and some implementations just like using

138
00:05:24,740 --> 00:05:27,279
completely different versions of code

139
00:05:27,279 --> 00:05:29,629
it's a standard iterator for each is

140
00:05:29,629 --> 00:05:32,020
kind of standard JavaScript stuff but

141
00:05:32,020 --> 00:05:35,569
this changes between browsers between

142
00:05:35,569 --> 00:05:37,639
implementations so you've got to handle

143
00:05:37,639 --> 00:05:38,300
that as well

144
00:05:38,300 --> 00:05:40,189
and this is stuff which will exist in

145
00:05:40,189 --> 00:05:41,990
you in your user code this is not

146
00:05:41,990 --> 00:05:43,490
something that adapter.js can fix for

147
00:05:43,490 --> 00:05:47,270
you you have to go if results result

148
00:05:47,270 --> 00:05:51,169
exists else do this one oh boy how much

149
00:05:51,169 --> 00:05:52,939
more code do we have to write around

150
00:05:52,939 --> 00:05:54,680
a standard well it turns out there's

151
00:05:54,680 --> 00:05:58,459
more bugs in some of the versions so if

152
00:05:58,459 --> 00:06:01,219
you say to if one browser says for

153
00:06:01,219 --> 00:06:02,959
another browser I would like to send

154
00:06:02,959 --> 00:06:04,580
some video please if the other one

155
00:06:04,580 --> 00:06:06,680
doesn't say I accept to receive your

156
00:06:06,680 --> 00:06:09,830
video then it will break there's no

157
00:06:09,830 --> 00:06:11,689
reason why it should break it just will

158
00:06:11,689 --> 00:06:14,180
so even if one machine you think is

159
00:06:14,180 --> 00:06:15,620
working fine as soon as you connect it

160
00:06:15,620 --> 00:06:17,360
to the second machine but you don't have

161
00:06:17,360 --> 00:06:18,949
the right parameters which you only find

162
00:06:18,949 --> 00:06:20,959
out by trial and error or by having bugs

163
00:06:20,959 --> 00:06:24,279
then you just won't get that connection

164
00:06:24,279 --> 00:06:26,839
okay there is so much stuff poking in

165
00:06:26,839 --> 00:06:28,520
this it's a surprising anything works at

166
00:06:28,520 --> 00:06:32,270
all so the browser how can you control

167
00:06:32,270 --> 00:06:33,889
the technology or can you control the

168
00:06:33,889 --> 00:06:36,020
technology or the browser versions if

169
00:06:36,020 --> 00:06:38,419
you can control the browser version

170
00:06:38,419 --> 00:06:41,329
that's a good thing previous company

171
00:06:41,329 --> 00:06:43,339
might we did education solutions we

172
00:06:43,339 --> 00:06:45,500
allowed kids in one country to talk

173
00:06:45,500 --> 00:06:48,050
to kids teachers and another and we said

174
00:06:48,050 --> 00:06:49,730
if you want to use this product you must

175
00:06:49,730 --> 00:06:52,970
be on Chrome version 45 or above that

176
00:06:52,970 --> 00:06:54,500
wasn't because we thought chrome 45

177
00:06:54,500 --> 00:06:56,630
above is really good it's that we didn't

178
00:06:56,630 --> 00:06:58,460
have the time patience of effort to test

179
00:06:58,460 --> 00:07:01,160
every other version of browser so if you

180
00:07:01,160 --> 00:07:03,710
can limit that do it it will make your

181
00:07:03,710 --> 00:07:06,800
life so much easier do you need the

182
00:07:06,800 --> 00:07:09,080
mobile do you need it is possible to

183
00:07:09,080 --> 00:07:11,000
build web artists on mobile the web part

184
00:07:11,000 --> 00:07:13,520
of WebRTC doesn't restrict it to being a

185
00:07:13,520 --> 00:07:16,880
web only platform most of the time it is

186
00:07:16,880 --> 00:07:18,650
and it does work on mobile but if you

187
00:07:18,650 --> 00:07:21,110
can get around not supporting mobile you

188
00:07:21,110 --> 00:07:23,510
probably want to look at doing it these

189
00:07:23,510 --> 00:07:25,640
are the first versions all it's worth

190
00:07:25,640 --> 00:07:28,850
that might see was supported again now

191
00:07:28,850 --> 00:07:32,870
WebRTC gives you that blurb move on and

192
00:07:32,870 --> 00:07:37,340
yeah who cares so the next part so far

193
00:07:37,340 --> 00:07:39,740
all we've gone through is where does

194
00:07:39,740 --> 00:07:42,110
WebRTC work which browser is working how

195
00:07:42,110 --> 00:07:44,000
do you fix around problems in each

196
00:07:44,000 --> 00:07:46,250
browser you now have the problems like

197
00:07:46,250 --> 00:07:47,810
it's a communication protocol

198
00:07:47,810 --> 00:07:50,270
communication is between two or more so

199
00:07:50,270 --> 00:07:52,190
what happens if you stick a Firefox with

200
00:07:52,190 --> 00:07:55,930
a chrome yeah that doesn't work either

201
00:07:55,930 --> 00:07:58,610
got their own ideas about what codec

202
00:07:58,610 --> 00:07:59,540
they should be using

203
00:07:59,540 --> 00:08:01,100
hey we've developed a really cool codec

204
00:08:01,100 --> 00:08:02,780
we want everyone to use it I'm an old

205
00:08:02,780 --> 00:08:04,550
browser I can only use this codec well

206
00:08:04,550 --> 00:08:06,560
use this really cool new codec no we

207
00:08:06,560 --> 00:08:09,890
can't and solve the time you find that

208
00:08:09,890 --> 00:08:11,120
the browser the browser's will

209
00:08:11,120 --> 00:08:13,400
communicator says ok then we'll use the

210
00:08:13,400 --> 00:08:16,729
boring codec if you must but it doesn't

211
00:08:16,729 --> 00:08:18,770
solve the problem that's you know there

212
00:08:18,770 --> 00:08:20,479
will be issues with the various codecs

213
00:08:20,479 --> 00:08:22,729
between the various browsers again if

214
00:08:22,729 --> 00:08:24,860
you can restrict it to saying chrome 45

215
00:08:24,860 --> 00:08:27,500
and above you'll have a much easier life

216
00:08:27,500 --> 00:08:29,090
than if you say yeah we support

217
00:08:29,090 --> 00:08:32,390
everything it's fine the SDP format

218
00:08:32,390 --> 00:08:33,589
which is the session description

219
00:08:33,589 --> 00:08:35,510
protocol this is the little blurb of

220
00:08:35,510 --> 00:08:38,360
text which says I am a WebRTC client I

221
00:08:38,360 --> 00:08:39,679
would like to communicate in this way

222
00:08:39,679 --> 00:08:41,870
please and the other machine goes fine I

223
00:08:41,870 --> 00:08:45,050
accept that sometimes they use slightly

224
00:08:45,050 --> 00:08:47,870
different formats just enough of a

225
00:08:47,870 --> 00:08:49,100
different format to make your life

226
00:08:49,100 --> 00:08:51,770
annoying so as we saw on the previous

227
00:08:51,770 --> 00:08:55,040
slides functionality differences if one

228
00:08:55,040 --> 00:08:57,830
side says yes I support this particular

229
00:08:57,830 --> 00:08:59,329
method and the other side says

230
00:08:59,329 --> 00:09:01,999
I don't we staff to cater for both and

231
00:09:01,999 --> 00:09:03,110
you still have to do your own

232
00:09:03,110 --> 00:09:04,759
implementations to get around those

233
00:09:04,759 --> 00:09:09,769
issues this is very much a heritage

234
00:09:09,769 --> 00:09:13,309
thing Android devices WebRTC was

235
00:09:13,309 --> 00:09:16,009
disabled by default this is nothing you

236
00:09:16,009 --> 00:09:18,619
as a developer can get around this is a

237
00:09:18,619 --> 00:09:20,869
UX problem you have to teach your users

238
00:09:20,869 --> 00:09:23,420
that they need to switch it on most

239
00:09:23,420 --> 00:09:26,029
users do not know or care what WebRTC is

240
00:09:26,029 --> 00:09:28,699
so you can't say just enable WebRTC

241
00:09:28,699 --> 00:09:33,949
because they haven't got a clue the

242
00:09:33,949 --> 00:09:36,439
infrastructure this is generally the bit

243
00:09:36,439 --> 00:09:39,290
we excuse WebRTC from all the stuff that

244
00:09:39,290 --> 00:09:41,689
sits around WebRTC is your

245
00:09:41,689 --> 00:09:44,449
responsibility so if I want to have a

246
00:09:44,449 --> 00:09:46,730
call with you for example I have to have

247
00:09:46,730 --> 00:09:48,739
something in my app that says I am Steve

248
00:09:48,739 --> 00:09:50,209
I have logged on there has to be

249
00:09:50,209 --> 00:09:51,529
something on your side where you logged

250
00:09:51,529 --> 00:09:53,809
on and the server somewhere says yeah I

251
00:09:53,809 --> 00:09:55,489
understand who you two users are I

252
00:09:55,489 --> 00:09:57,230
understand which browser you're living

253
00:09:57,230 --> 00:09:58,699
in and I understand how to get a message

254
00:09:58,699 --> 00:10:01,129
between you that's the signalling parts

255
00:10:01,129 --> 00:10:03,679
which is often quoted as being the

256
00:10:03,679 --> 00:10:06,379
missing part of WebRTC it's not missing

257
00:10:06,379 --> 00:10:07,850
it's that it's not there for a reason

258
00:10:07,850 --> 00:10:10,939
which is if WebRTC provided the way that

259
00:10:10,939 --> 00:10:13,879
signaling has to be provided then you

260
00:10:13,879 --> 00:10:16,040
are stuck to using the web RTC signaling

261
00:10:16,040 --> 00:10:17,660
thing and you can't do anything else you

262
00:10:17,660 --> 00:10:19,220
can't do any clever stuff you can't

263
00:10:19,220 --> 00:10:20,949
customize it to your application

264
00:10:20,949 --> 00:10:23,480
there's no turn service by default so

265
00:10:23,480 --> 00:10:25,309
you have to supply your own a turn

266
00:10:25,309 --> 00:10:27,499
server is a thing which just basically

267
00:10:27,499 --> 00:10:29,959
sends media between one machine and

268
00:10:29,959 --> 00:10:32,299
another so a lot of time we thought we

269
00:10:32,299 --> 00:10:34,790
could WebRTC up here to peer protocol so

270
00:10:34,790 --> 00:10:36,709
it goes from that client to that client

271
00:10:36,709 --> 00:10:38,540
in the browser and it doesn't even talk

272
00:10:38,540 --> 00:10:40,579
to a server the problem is sometimes

273
00:10:40,579 --> 00:10:42,910
these users are behind firewalls

274
00:10:42,910 --> 00:10:45,019
sometimes these user have really weird

275
00:10:45,019 --> 00:10:47,059
configurations and the only way of

276
00:10:47,059 --> 00:10:48,679
getting a media stream from that machine

277
00:10:48,679 --> 00:10:50,959
to that machine is to go through a turn

278
00:10:50,959 --> 00:10:52,730
server it you sent the media up to the

279
00:10:52,730 --> 00:10:54,259
server it turns it around and sends it

280
00:10:54,259 --> 00:10:56,269
back to the other client you need to

281
00:10:56,269 --> 00:10:58,699
supply those and because media is quite

282
00:10:58,699 --> 00:11:01,309
an expensive protocol in terms of

283
00:11:01,309 --> 00:11:03,759
bandwidth you don't get those for free

284
00:11:03,759 --> 00:11:06,049
so you've got to build and supply your

285
00:11:06,049 --> 00:11:07,579
own turn servers those co Turner's an

286
00:11:07,579 --> 00:11:09,679
open source one you've just it's another

287
00:11:09,679 --> 00:11:12,529
thing to do if you want any kind of

288
00:11:12,529 --> 00:11:13,220
recording or

289
00:11:13,220 --> 00:11:15,189
transcoding evil to supply that yourself

290
00:11:15,189 --> 00:11:18,920
it's again not big or clever it's just

291
00:11:18,920 --> 00:11:21,589
another thing to do and once you have to

292
00:11:21,589 --> 00:11:24,110
do it you have to maintain it if you

293
00:11:24,110 --> 00:11:26,180
want mobile again you're on your own

294
00:11:26,180 --> 00:11:28,790
and similarly there's no testing for any

295
00:11:28,790 --> 00:11:30,620
of this the idea of test Suites kind of

296
00:11:30,620 --> 00:11:33,470
went out with the ark so does it on test

297
00:11:33,470 --> 00:11:35,540
their code anymore is that antiquated

298
00:11:35,540 --> 00:11:39,500
idea still yeah three of us great so

299
00:11:39,500 --> 00:11:41,689
there's no testable web RTC so if I'm

300
00:11:41,689 --> 00:11:43,100
trying to have a call with someone else

301
00:11:43,100 --> 00:11:45,680
and it's not happening I have no way of

302
00:11:45,680 --> 00:11:48,079
knowing where that called breaking is it

303
00:11:48,079 --> 00:11:49,370
because my browser is currently

304
00:11:49,370 --> 00:11:51,319
unsupported is new is broken is old is

305
00:11:51,319 --> 00:11:51,829
broken

306
00:11:51,829 --> 00:11:54,529
I can't tell as an application developer

307
00:11:54,529 --> 00:11:57,230
if it's the users problem if it's the

308
00:11:57,230 --> 00:11:59,000
browser's problem if it's the connection

309
00:11:59,000 --> 00:12:01,639
from the browser to their local internet

310
00:12:01,639 --> 00:12:03,230
it's from their local internet off to

311
00:12:03,230 --> 00:12:05,839
their ISP if it's on the whole backbone

312
00:12:05,839 --> 00:12:07,250
of the internet or what's the other side

313
00:12:07,250 --> 00:12:09,709
there is no way in WebRTC to work out

314
00:12:09,709 --> 00:12:12,199
where or why that call is broken you

315
00:12:12,199 --> 00:12:15,980
just have to guess obviously business

316
00:12:15,980 --> 00:12:17,329
logic would never be included in a

317
00:12:17,329 --> 00:12:19,459
standard that's not its job but there's

318
00:12:19,459 --> 00:12:22,459
a lot of things that I won't see

319
00:12:22,459 --> 00:12:23,779
management because that would be very

320
00:12:23,779 --> 00:12:25,939
mean to those in suits but the problem

321
00:12:25,939 --> 00:12:28,910
with management is as soon as you say oh

322
00:12:28,910 --> 00:12:30,800
yeah web RTC it does this and they've

323
00:12:30,800 --> 00:12:33,079
read some article once and they think oh

324
00:12:33,079 --> 00:12:35,509
it's easy it just does it all for you it

325
00:12:35,509 --> 00:12:37,670
doesn't do any business logic so things

326
00:12:37,670 --> 00:12:39,790
like oh yeah I'm gonna make a call into

327
00:12:39,790 --> 00:12:42,079
this website and I wanted to go to the

328
00:12:42,079 --> 00:12:44,990
first available client specialist or

329
00:12:44,990 --> 00:12:47,779
support or spot support girl or support

330
00:12:47,779 --> 00:12:51,709
whatever you don't actually have any of

331
00:12:51,709 --> 00:12:54,230
that code in web RTC that's all your

332
00:12:54,230 --> 00:12:58,309
responsibility if you want to put please

333
00:12:58,309 --> 00:13:00,769
wait your call is important to us honest

334
00:13:00,769 --> 00:13:03,259
you can't do that you have to write your

335
00:13:03,259 --> 00:13:05,029
own stuff to inject messages into the

336
00:13:05,029 --> 00:13:08,540
stream if you want to scale you're on

337
00:13:08,540 --> 00:13:09,920
your own again as you'd expect you've

338
00:13:09,920 --> 00:13:11,959
got to work out a way of saying right

339
00:13:11,959 --> 00:13:13,550
I've got a thousand people all trying to

340
00:13:13,550 --> 00:13:15,589
connect to each other now what servers

341
00:13:15,589 --> 00:13:18,529
delete that's up to you and again what

342
00:13:18,529 --> 00:13:20,000
the fault detection as I said if there's

343
00:13:20,000 --> 00:13:21,860
a breakage in your web RTC connection

344
00:13:21,860 --> 00:13:24,949
between a and B and WebRTC does not help

345
00:13:24,949 --> 00:13:26,520
you determine

346
00:13:26,520 --> 00:13:31,470
where that fault lies so I thought let's

347
00:13:31,470 --> 00:13:33,510
have a go at this how hard can it be to

348
00:13:33,510 --> 00:13:36,360
build a web RTC application just for fun

349
00:13:36,360 --> 00:13:38,100
so I did

350
00:13:38,100 --> 00:13:42,300
I taught along to my machine I opened up

351
00:13:42,300 --> 00:13:47,250
sublime and I started typing 1,800 lines

352
00:13:47,250 --> 00:13:50,040
of JavaScript to actually initialize

353
00:13:50,040 --> 00:13:53,220
things do the hole mods WebKit or is

354
00:13:53,220 --> 00:13:57,540
this MS web getusermedia or 1,800 lines

355
00:13:57,540 --> 00:14:00,180
that's not a lot but I still a chunk

356
00:14:00,180 --> 00:14:01,770
work to actually develop and maintain

357
00:14:01,770 --> 00:14:06,440
and get working 1,500 lines of PHP

358
00:14:06,440 --> 00:14:09,060
that's not to say PHP is bad and I could

359
00:14:09,060 --> 00:14:10,950
have done it in 20 lines of Ruby but

360
00:14:10,950 --> 00:14:14,190
it's a case of sake I'm so glad someone

361
00:14:14,190 --> 00:14:18,450
got that it's not to say that PHP is bad

362
00:14:18,450 --> 00:14:21,270
but in order to do user discovery to say

363
00:14:21,270 --> 00:14:24,420
my name is Steve your name is Jill I'm

364
00:14:24,420 --> 00:14:27,180
trying to connect to you you need to

365
00:14:27,180 --> 00:14:30,630
find us now this is only to Sentosa 1500

366
00:14:30,630 --> 00:14:32,760
lines to just do basic connection to

367
00:14:32,760 --> 00:14:34,560
know who you are and that's quite a lot

368
00:14:34,560 --> 00:14:36,720
of extra code and that doesn't include

369
00:14:36,720 --> 00:14:38,790
the iom I just used red bean because it

370
00:14:38,790 --> 00:14:40,680
was there and you know it seems simple

371
00:14:40,680 --> 00:14:43,910
enough that's still quite a lot of code

372
00:14:43,910 --> 00:14:46,650
and then there were custom JavaScript

373
00:14:46,650 --> 00:14:48,300
bits and is that these are things like

374
00:14:48,300 --> 00:14:50,040
you've got three microphones in your

375
00:14:50,040 --> 00:14:51,420
system which microphone would you like

376
00:14:51,420 --> 00:14:54,030
to use little drop list all those sort

377
00:14:54,030 --> 00:14:56,340
of things needed about 400 lines of code

378
00:14:56,340 --> 00:15:00,740
and that's one call between two people

379
00:15:00,740 --> 00:15:03,540
that's not a room facility where

380
00:15:03,540 --> 00:15:05,910
multiple people could join that's not

381
00:15:05,910 --> 00:15:07,290
some facility where I'm going to make a

382
00:15:07,290 --> 00:15:09,240
call and the first available person can

383
00:15:09,240 --> 00:15:11,370
answer that that's just one call between

384
00:15:11,370 --> 00:15:15,930
two people three and a half thousand

385
00:15:15,930 --> 00:15:17,910
lines of code to be built and maintained

386
00:15:17,910 --> 00:15:21,840
and those 3,000 lines only work if

387
00:15:21,840 --> 00:15:24,630
everyone does everything right I did not

388
00:15:24,630 --> 00:15:26,670
write a single ever check in any of

389
00:15:26,670 --> 00:15:27,930
those three thousand three and a half

390
00:15:27,930 --> 00:15:29,670
thousand lines because that will double

391
00:15:29,670 --> 00:15:33,180
the code size easily that's a lot of

392
00:15:33,180 --> 00:15:34,770
stuff you need to do for something that

393
00:15:34,770 --> 00:15:37,530
apparently should just work that it's a

394
00:15:37,530 --> 00:15:38,970
standard but is out of the box and

395
00:15:38,970 --> 00:15:39,990
available

396
00:15:39,990 --> 00:15:43,980
there's effort required so it's not to

397
00:15:43,980 --> 00:15:45,960
say that WebRTC is bad it's not it's

398
00:15:45,960 --> 00:15:49,170
great there was no other way that yes

399
00:15:49,170 --> 00:15:51,660
Bob standard developer is able to build

400
00:15:51,660 --> 00:15:55,050
a Skype in a browser in afternoon most

401
00:15:55,050 --> 00:15:57,000
people do not know enough about codecs

402
00:15:57,000 --> 00:15:58,380
to have make this work

403
00:15:58,380 --> 00:16:00,390
most people don't know enough about

404
00:16:00,390 --> 00:16:02,760
transport systems to send that data over

405
00:16:02,760 --> 00:16:03,780
the web they don't know enough about

406
00:16:03,780 --> 00:16:05,610
streaming technologies about frames and

407
00:16:05,610 --> 00:16:07,920
so on so it lowers the barrier to entry

408
00:16:07,920 --> 00:16:10,170
so that ordinary people like me can

409
00:16:10,170 --> 00:16:12,450
actually do it unfortunately it doesn't

410
00:16:12,450 --> 00:16:15,510
lower it lower it lower it low enough so

411
00:16:15,510 --> 00:16:17,250
that you can do it safely and without a

412
00:16:17,250 --> 00:16:19,950
slew of bugs the very first time you try

413
00:16:19,950 --> 00:16:22,680
it's very easy to get it working but

414
00:16:22,680 --> 00:16:24,240
that leaves you as that down that path

415
00:16:24,240 --> 00:16:27,270
we think I did that I did this entire

416
00:16:27,270 --> 00:16:29,100
scrape in an afternoon how hard can it

417
00:16:29,100 --> 00:16:31,980
be to do the next bit well it turns out

418
00:16:31,980 --> 00:16:34,650
that it is actually quite hard to finish

419
00:16:34,650 --> 00:16:36,360
it and particularly you're working with

420
00:16:36,360 --> 00:16:38,190
manager types you look at it well you

421
00:16:38,190 --> 00:16:39,720
did all that in an afternoon well you

422
00:16:39,720 --> 00:16:41,130
can do all these other features by the

423
00:16:41,130 --> 00:16:43,380
end of the week then because it doesn't

424
00:16:43,380 --> 00:16:45,120
work like that as if anyone ever thought

425
00:16:45,120 --> 00:16:49,080
it did so that's pretty much my time I

426
00:16:49,080 --> 00:16:50,490
can now think I've got time for

427
00:16:50,490 --> 00:16:52,260
questions and I can also update my

428
00:16:52,260 --> 00:16:56,280
scorecard there we go 16 done great any

429
00:16:56,280 --> 00:16:58,760
questions

430
00:17:03,700 --> 00:17:16,369
you have any suggestions yeah well

431
00:17:16,369 --> 00:17:18,740
there's not that many the biggest help

432
00:17:18,740 --> 00:17:21,829
is get stats so as part of the peer

433
00:17:21,829 --> 00:17:23,569
connection there's an API called called

434
00:17:23,569 --> 00:17:26,390
get stats this basically just gives you

435
00:17:26,390 --> 00:17:29,360
an array of parameters it sense things

436
00:17:29,360 --> 00:17:31,250
like over the last second I've had this

437
00:17:31,250 --> 00:17:33,230
amount of jitter there has been this

438
00:17:33,230 --> 00:17:35,600
amount of lost packets it tells you that

439
00:17:35,600 --> 00:17:37,970
stuff is happening it doesn't tell you

440
00:17:37,970 --> 00:17:41,570
where because browser is so sandbox it

441
00:17:41,570 --> 00:17:43,880
can't tell you where you have to

442
00:17:43,880 --> 00:17:45,710
actually start saying okay I need the

443
00:17:45,710 --> 00:17:47,780
end-user to install something on their

444
00:17:47,780 --> 00:17:50,000
machine that then actually has that low

445
00:17:50,000 --> 00:17:51,830
level access to say well can I see you

446
00:17:51,830 --> 00:17:52,880
know like a trace through it for example

447
00:17:52,880 --> 00:17:54,710
can I see this server can I see the one

448
00:17:54,710 --> 00:17:57,350
after that that's something else you've

449
00:17:57,350 --> 00:17:58,640
got to install over the top the

450
00:17:58,640 --> 00:18:00,290
JavaScript API which is all you've got

451
00:18:00,290 --> 00:18:02,060
to go on doesn't give you any more than

452
00:18:02,060 --> 00:18:03,980
the getstats gives you which is a lot

453
00:18:03,980 --> 00:18:06,470
it's a good thing you know I've noticed

454
00:18:06,470 --> 00:18:08,120
this user has got this amount of jitter

455
00:18:08,120 --> 00:18:11,450
repeatedly so ask them I see a lot of

456
00:18:11,450 --> 00:18:13,910
problems on your line are you trying to

457
00:18:13,910 --> 00:18:16,460
download something in the background art

458
00:18:16,460 --> 00:18:17,960
solvents running is someone streaming

459
00:18:17,960 --> 00:18:19,130
YouTube or something and you could

460
00:18:19,130 --> 00:18:21,920
suggest things but as the JavaScript API

461
00:18:21,920 --> 00:18:42,580
that is the best you're going to get the

462
00:18:42,580 --> 00:18:45,530
box did I to which you could install

463
00:18:45,530 --> 00:18:47,330
into Chrome as an extension and that

464
00:18:47,330 --> 00:18:51,440
would do a couple of things to help but

465
00:18:51,440 --> 00:18:52,940
they're more aimed at the developer

466
00:18:52,940 --> 00:18:55,760
sites the developer focused user rather

467
00:18:55,760 --> 00:18:56,750
than an end user

468
00:18:56,750 --> 00:18:58,460
you know you granny's not going to be

469
00:18:58,460 --> 00:19:01,790
able to handle it kind of thing yeah

470
00:19:01,790 --> 00:19:03,980
developer there it's hot box do a tool

471
00:19:03,980 --> 00:19:06,230
which is a diagnostic thing that that

472
00:19:06,230 --> 00:19:07,640
has a little go at trying to work out

473
00:19:07,640 --> 00:19:10,280
what's going on and going wrong with the

474
00:19:10,280 --> 00:19:12,190
connection

475
00:19:12,190 --> 00:19:15,379
services like for instance call stats I

476
00:19:15,379 --> 00:19:18,769
think they would provide you with those

477
00:19:18,769 --> 00:19:20,570
more in the library which you can read

478
00:19:20,570 --> 00:19:22,460
in your application which will send all

479
00:19:22,460 --> 00:19:25,489
sorts of events and think about the peer

480
00:19:25,489 --> 00:19:27,379
connection to their servers and then you

481
00:19:27,379 --> 00:19:28,940
have some analytics board where you can

482
00:19:28,940 --> 00:19:31,639
see stuff happening so they piggyback a

483
00:19:31,639 --> 00:19:33,980
lot of them get stats but get stats its

484
00:19:33,980 --> 00:19:37,149
ASCII certainly consistent that branches

485
00:19:37,149 --> 00:19:47,029
so they normalize know am i I have met

486
00:19:47,029 --> 00:19:48,230
the guy in his on it's a nice guy but

487
00:19:48,230 --> 00:19:51,950
not affiliated yes one their pond

488
00:19:51,950 --> 00:20:03,409
they're not aware of any directly

489
00:20:03,409 --> 00:20:05,119
there's one or two that keep popping up

490
00:20:05,119 --> 00:20:08,330
every now and again can't remember the

491
00:20:08,330 --> 00:20:11,029
names offhand but yeah just googling

492
00:20:11,029 --> 00:20:13,759
open source RTC there's you know the

493
00:20:13,759 --> 00:20:15,859
problem with it is that because it's is

494
00:20:15,859 --> 00:20:19,809
business logic things most people don't

495
00:20:19,809 --> 00:20:22,279
generalize it well enough they start

496
00:20:22,279 --> 00:20:23,809
saying I'm going to build this fantastic

497
00:20:23,809 --> 00:20:25,850
framework you know and then it sort of

498
00:20:25,850 --> 00:20:27,559
slightly grows with the specifics that

499
00:20:27,559 --> 00:20:30,409
each business e stuff needs and it's no

500
00:20:30,409 --> 00:20:33,049
longer a usable framework which is

501
00:20:33,049 --> 00:20:35,269
unfortunate the thing is I say it's it's

502
00:20:35,269 --> 00:20:36,679
effort it's fifteen hundred lines of

503
00:20:36,679 --> 00:20:40,210
stuff it's doable

504
00:20:40,210 --> 00:20:42,440
you know of all the problems I think

505
00:20:42,440 --> 00:20:45,080
here the business logic one is the one

506
00:20:45,080 --> 00:20:48,100
I'm least worried about

507
00:20:49,190 --> 00:20:51,169
use of the API every made their own

508
00:20:51,169 --> 00:20:53,769
version is there an improvement and they

509
00:20:53,769 --> 00:21:01,099
mention names it's a question is are we

510
00:21:01,099 --> 00:21:04,580
actually moving towards a single set of

511
00:21:04,580 --> 00:21:07,549
API names and methods and that and the

512
00:21:07,549 --> 00:21:11,090
answer is we kind of are I I don't think

513
00:21:11,090 --> 00:21:13,220
I'll be giving this talk in four years

514
00:21:13,220 --> 00:21:15,789
for example because I think by then

515
00:21:15,789 --> 00:21:18,259
everyone said yeah okay we get it this

516
00:21:18,259 --> 00:21:21,619
is what we need to do unfortunately by

517
00:21:21,619 --> 00:21:23,059
then there'll be a new version of the

518
00:21:23,059 --> 00:21:24,409
standard and everyone we're building

519
00:21:24,409 --> 00:21:26,210
towards that standard so we'll have a

520
00:21:26,210 --> 00:21:28,519
different problem in a future domain but

521
00:21:28,519 --> 00:21:30,099
it's certainly getting better now

522
00:21:30,099 --> 00:21:34,389
because it's been WebRTC started in 2011

523
00:21:34,389 --> 00:21:37,279
so it's technically an old technology

524
00:21:37,279 --> 00:21:40,070
now and at that point it's kind of

525
00:21:40,070 --> 00:21:41,690
consolidated to the point where people

526
00:21:41,690 --> 00:21:43,429
are going yes we know it's a bit

527
00:21:43,429 --> 00:21:46,099
different but this is enough to get us

528
00:21:46,099 --> 00:21:48,679
moving forward so I think it's actually

529
00:21:48,679 --> 00:21:51,499
going quite well right now fortunate as

530
00:21:51,499 --> 00:21:52,909
we say the standard keeps getting added

531
00:21:52,909 --> 00:21:56,330
to so all the newer stuff but the basic

532
00:21:56,330 --> 00:21:59,409
cortical is getting nicely consolidated

533
00:21:59,409 --> 00:22:05,840
yes okay I'll take it offline then if

534
00:22:05,840 --> 00:22:07,330
you like

535
00:22:07,330 --> 00:22:17,790
[Applause]

