1
00:00:00,030 --> 00:00:03,469
so I'll start by

2
00:00:04,610 --> 00:00:08,389
thanking Peter and Kenneth who are the

3
00:00:08,389 --> 00:00:10,340
ones who actually implemented all the

4
00:00:10,340 --> 00:00:12,710
back end for this for this work what I

5
00:00:12,710 --> 00:00:14,960
what I did and I'm presenting here is

6
00:00:14,960 --> 00:00:18,470
just the the deployment of this and the

7
00:00:18,470 --> 00:00:21,410
testing of the framework so big thanks

8
00:00:21,410 --> 00:00:24,199
to Kenneth and and Peter and also all

9
00:00:24,199 --> 00:00:27,560
the team at cscs who work on this on

10
00:00:27,560 --> 00:00:31,099
this project so we do claim we have

11
00:00:31,099 --> 00:00:33,800
reproducible HPCC software installations

12
00:00:33,800 --> 00:00:38,120
the gigs are saying that we have we are

13
00:00:38,120 --> 00:00:41,390
not giving that we do we do think that

14
00:00:41,390 --> 00:00:45,920
we can achieve reproducibility so I just

15
00:00:45,920 --> 00:00:47,830
one more that I think we do have

16
00:00:47,830 --> 00:00:50,239
problems with bootstrapping sometimes

17
00:00:50,239 --> 00:00:52,070
when we move from one operational system

18
00:00:52,070 --> 00:00:52,640
to the other

19
00:00:52,640 --> 00:00:55,670
but then it's that's where the Dockers

20
00:00:55,670 --> 00:00:58,159
and containers they can then hook in but

21
00:00:58,159 --> 00:01:01,040
after that I can assure you that we can

22
00:01:01,040 --> 00:01:03,890
have reproducibility with is abused and

23
00:01:03,890 --> 00:01:06,110
that's why we chose easy build and we

24
00:01:06,110 --> 00:01:07,430
are going to present so this is the

25
00:01:07,430 --> 00:01:10,610
outline of the talk I will first start

26
00:01:10,610 --> 00:01:12,170
with the background I think if you're

27
00:01:12,170 --> 00:01:14,690
here you already know how hard is

28
00:01:14,690 --> 00:01:17,270
installing software on HPC so I won't

29
00:01:17,270 --> 00:01:19,640
spend much time explaining all the

30
00:01:19,640 --> 00:01:23,960
troubles that we ran into then I will

31
00:01:23,960 --> 00:01:26,840
talk about the easy build the framework

32
00:01:26,840 --> 00:01:29,180
as an implementation on Cray so this is

33
00:01:29,180 --> 00:01:32,270
the work from Kenneth and and Peter and

34
00:01:32,270 --> 00:01:35,360
yeah and the last part I will present

35
00:01:35,360 --> 00:01:37,850
two use cases so all the the two

36
00:01:37,850 --> 00:01:40,190
deployments on our main systems at GSEs

37
00:01:40,190 --> 00:01:41,930
with easy Beauty have many other systems

38
00:01:41,930 --> 00:01:44,180
we don't have time to talk about them

39
00:01:44,180 --> 00:01:46,310
here so I'll focus on two systems that

40
00:01:46,310 --> 00:01:49,850
are crate based and how we managed to

41
00:01:49,850 --> 00:01:52,610
solve the the installation problem with

42
00:01:52,610 --> 00:01:54,530
easy build so in the end I will also

43
00:01:54,530 --> 00:01:57,530
show some integration we have now with

44
00:01:57,530 --> 00:01:59,830
github for doing continuous integration

45
00:01:59,830 --> 00:02:02,600
for testing the de beauté software and

46
00:02:02,600 --> 00:02:08,110
also for archiving the recipes so the

47
00:02:08,110 --> 00:02:11,659
the problem of building HPC software in

48
00:02:11,659 --> 00:02:15,140
HPC as I already mentioned it's it's I

49
00:02:15,140 --> 00:02:17,990
think it's known from you so we had the

50
00:02:17,990 --> 00:02:18,410
same

51
00:02:18,410 --> 00:02:21,710
on Cray systems because users we have

52
00:02:21,710 --> 00:02:24,580
many requests from users and they have

53
00:02:24,580 --> 00:02:28,040
requirements of software that depend on

54
00:02:28,040 --> 00:02:30,140
specific versions so you cannot just do

55
00:02:30,140 --> 00:02:32,600
a ticket install on the software that

56
00:02:32,600 --> 00:02:35,570
they need they depend really on specific

57
00:02:35,570 --> 00:02:37,190
versions and these versions need to

58
00:02:37,190 --> 00:02:39,710
coexist so this is a huge problem for

59
00:02:39,710 --> 00:02:42,980
the teams maintaining the software and

60
00:02:42,980 --> 00:02:49,550
not always these people asking using the

61
00:02:49,550 --> 00:02:53,360
HPC systems they are scientists so so

62
00:02:53,360 --> 00:02:55,220
they are not developers or see that

63
00:02:55,220 --> 00:02:56,750
means they don't have all the background

64
00:02:56,750 --> 00:02:58,850
for installing software so they need

65
00:02:58,850 --> 00:03:00,530
help from from people with this

66
00:03:00,530 --> 00:03:02,180
background and with experiencing

67
00:03:02,180 --> 00:03:04,220
installing system also the people

68
00:03:04,220 --> 00:03:06,140
developing this science scientific

69
00:03:06,140 --> 00:03:09,320
software they are not they are not

70
00:03:09,320 --> 00:03:11,780
formed on computer sciences our

71
00:03:11,780 --> 00:03:15,010
development so when they produce new

72
00:03:15,010 --> 00:03:18,260
packages they often they don't use

73
00:03:18,260 --> 00:03:20,540
correctly the beauty tools Jesus just to

74
00:03:20,540 --> 00:03:22,970
name a few of the problems we see when

75
00:03:22,970 --> 00:03:25,160
using scientific software that you don't

76
00:03:25,160 --> 00:03:27,320
see in common soft common let's say

77
00:03:27,320 --> 00:03:30,590
software outside the scientific world so

78
00:03:30,590 --> 00:03:33,380
we have incomplete built procedure that

79
00:03:33,380 --> 00:03:35,209
you don't have configured or installed

80
00:03:35,209 --> 00:03:37,790
and you have tweaked the to tweak the

81
00:03:37,790 --> 00:03:40,100
files manually then this is my my

82
00:03:40,100 --> 00:03:41,990
favourite interactive installation

83
00:03:41,990 --> 00:03:44,720
scripts this is really the thing that

84
00:03:44,720 --> 00:03:48,580
you shouldn't do when you're when you're

85
00:03:48,580 --> 00:03:50,690
packaging a software you should really

86
00:03:50,690 --> 00:03:53,270
provide a way that where people can

87
00:03:53,270 --> 00:03:54,770
install it automatically and not

88
00:03:54,770 --> 00:03:56,690
answering questions which is your

89
00:03:56,690 --> 00:03:59,239
favorite color please install it here or

90
00:03:59,239 --> 00:04:02,150
not so please don't do that automation

91
00:04:02,150 --> 00:04:05,570
is not a new thing so it's we should

92
00:04:05,570 --> 00:04:07,580
think that there are people working on

93
00:04:07,580 --> 00:04:09,560
installing the software at full time so

94
00:04:09,560 --> 00:04:13,340
then the other things are missing

95
00:04:13,340 --> 00:04:15,709
documentation and also the dependency

96
00:04:15,709 --> 00:04:19,130
Helders our slides from kenneth that i'm

97
00:04:19,130 --> 00:04:22,100
just quoting here so the dependency hell

98
00:04:22,100 --> 00:04:25,220
we can see many software packages that

99
00:04:25,220 --> 00:04:28,100
you have you can have up to 40 or 50

100
00:04:28,100 --> 00:04:30,140
dependencies in only one software and

101
00:04:30,140 --> 00:04:32,370
then if you need to upgrade the

102
00:04:32,370 --> 00:04:36,870
good luck so this is the big picture so

103
00:04:36,870 --> 00:04:40,770
we have we have a problem so this the

104
00:04:40,770 --> 00:04:43,440
request for HPC user is always growing

105
00:04:43,440 --> 00:04:45,840
and unfortunately the quality of

106
00:04:45,840 --> 00:04:47,760
software isn't of packaging this

107
00:04:47,760 --> 00:04:50,930
software is not improving so we have

108
00:04:50,930 --> 00:04:54,990
solutions out there for foreign for

109
00:04:54,990 --> 00:04:56,870
installing regular software but not

110
00:04:56,870 --> 00:05:02,760
specific for HPC so we have the speaker

111
00:05:02,760 --> 00:05:06,150
before just mention about specs so and

112
00:05:06,150 --> 00:05:08,760
we have also easy viewed by the the

113
00:05:08,760 --> 00:05:10,560
other tools they don't really focus on

114
00:05:10,560 --> 00:05:15,330
HPC so the impact of the lack of this

115
00:05:15,330 --> 00:05:17,310
these tools is that when they have this

116
00:05:17,310 --> 00:05:19,410
the request for new software the

117
00:05:19,410 --> 00:05:22,620
researchers the they spend a lot of time

118
00:05:22,620 --> 00:05:25,110
they lose a lot of time waiting and then

119
00:05:25,110 --> 00:05:30,240
we also spend a lot a lot of time as HPC

120
00:05:30,240 --> 00:05:32,850
staff trying to fix that the other main

121
00:05:32,850 --> 00:05:34,889
problem is that it has been already

122
00:05:34,889 --> 00:05:36,419
mention here is the very little

123
00:05:36,419 --> 00:05:39,599
collaboration among HPC side so everyone

124
00:05:39,599 --> 00:05:41,550
is doing their own views on their own

125
00:05:41,550 --> 00:05:43,950
sites and then people are solving the

126
00:05:43,950 --> 00:05:47,490
same problem everywhere and this is the

127
00:05:47,490 --> 00:05:49,680
this is not good in the sense that we

128
00:05:49,680 --> 00:05:52,970
don't have a common two or a forum for

129
00:05:52,970 --> 00:05:56,250
sharing so some sites they do they do

130
00:05:56,250 --> 00:05:58,710
they do work together but there is no

131
00:05:58,710 --> 00:06:02,699
common ground for the for describing a

132
00:06:02,699 --> 00:06:05,580
beaut so people are basically redoing

133
00:06:05,580 --> 00:06:08,039
the same stuff on all sides and there's

134
00:06:08,039 --> 00:06:12,330
very little collaboration so this is

135
00:06:12,330 --> 00:06:15,000
also true on Cray systems so that's why

136
00:06:15,000 --> 00:06:21,030
the way we are just moving the just it's

137
00:06:21,030 --> 00:06:22,889
just a news case the create system for

138
00:06:22,889 --> 00:06:26,370
the easy build and the HPC buttes offer

139
00:06:26,370 --> 00:06:28,320
problems so we have the same problem on

140
00:06:28,320 --> 00:06:29,660
cray

141
00:06:29,660 --> 00:06:33,990
so just one slide on uneasy butte for

142
00:06:33,990 --> 00:06:36,750
those who do not know yet is framework

143
00:06:36,750 --> 00:06:39,810
for installing a specifically scientific

144
00:06:39,810 --> 00:06:42,270
software so is not for every kind of

145
00:06:42,270 --> 00:06:45,210
software so it's focused and then the

146
00:06:45,210 --> 00:06:46,200
idea is to

147
00:06:46,200 --> 00:06:49,290
to to group all those people who have

148
00:06:49,290 --> 00:06:52,110
this experience in HPC and the know-how

149
00:06:52,110 --> 00:06:54,630
of these people they should be in a

150
00:06:54,630 --> 00:06:56,850
single place so people can reuse that's

151
00:06:56,850 --> 00:06:58,920
the advantage when someone spends hours

152
00:06:58,920 --> 00:07:01,260
and hours preparing a beauty rest

153
00:07:01,260 --> 00:07:03,120
then someone else can just take this

154
00:07:03,120 --> 00:07:05,760
recipe and reuse all this time that

155
00:07:05,760 --> 00:07:09,450
someone who's an expert has an extra

156
00:07:09,450 --> 00:07:12,150
span worked and then you can just reuse

157
00:07:12,150 --> 00:07:15,330
this through your local case so it's

158
00:07:15,330 --> 00:07:18,480
raising Python it started at Ghent

159
00:07:18,480 --> 00:07:22,260
University in 2009 and it is open since

160
00:07:22,260 --> 00:07:26,090
it's open source since 2012 now we have

161
00:07:26,090 --> 00:07:30,360
community we have a stable version that

162
00:07:30,360 --> 00:07:33,150
is released every two weeks so for my

163
00:07:33,150 --> 00:07:37,410
from my experience we can always use the

164
00:07:37,410 --> 00:07:39,930
the new version and we we don't I don't

165
00:07:39,930 --> 00:07:42,630
say we had zero regression so far but

166
00:07:42,630 --> 00:07:44,760
every time we had it was very small and

167
00:07:44,760 --> 00:07:47,910
fixed very quickly so it is something

168
00:07:47,910 --> 00:07:49,500
that you can really use on production

169
00:07:49,500 --> 00:07:53,730
even for a large scale system so this is

170
00:07:53,730 --> 00:07:56,580
my world as a group lead of scientific

171
00:07:56,580 --> 00:07:59,280
computing support at CSCS we have more

172
00:07:59,280 --> 00:08:01,710
than 500 users and we have easy building

173
00:08:01,710 --> 00:08:03,960
production since more than one year so

174
00:08:03,960 --> 00:08:07,860
there are many the well-known scientific

175
00:08:07,860 --> 00:08:10,050
software that are already included you

176
00:08:10,050 --> 00:08:13,230
might not find everything but every

177
00:08:13,230 --> 00:08:15,720
package manager is giving the figures

178
00:08:15,720 --> 00:08:18,600
with with how many software you have but

179
00:08:18,600 --> 00:08:20,070
the thing that you need to do is go

180
00:08:20,070 --> 00:08:22,170
there and see if how many of your

181
00:08:22,170 --> 00:08:24,690
software you can find it so I encourage

182
00:08:24,690 --> 00:08:27,000
you to go there to the website and check

183
00:08:27,000 --> 00:08:29,610
if you find our software there and then

184
00:08:29,610 --> 00:08:31,680
you can have an idea if it's if it's

185
00:08:31,680 --> 00:08:35,580
useful for your use case or not so the

186
00:08:35,580 --> 00:08:39,690
main features of easy view you have

187
00:08:39,690 --> 00:08:42,570
autonomous building and installing of

188
00:08:42,570 --> 00:08:46,680
the software you also have the logging

189
00:08:46,680 --> 00:08:49,050
so you don't need to care about saving

190
00:08:49,050 --> 00:08:50,640
the output you are going to find the

191
00:08:50,640 --> 00:08:52,560
logs of the installation somewhere and

192
00:08:52,560 --> 00:08:55,260
you don't need to worry about that you

193
00:08:55,260 --> 00:08:56,670
have archiving of the beauty

194
00:08:56,670 --> 00:08:59,459
specification so every time you build

195
00:08:59,459 --> 00:09:01,649
recipe you have a copy of this recipe

196
00:09:01,649 --> 00:09:03,449
somewhere so that you know that you can

197
00:09:03,449 --> 00:09:06,439
redo it so this is one step for

198
00:09:06,439 --> 00:09:10,559
achieving reproducibility it's highly

199
00:09:10,559 --> 00:09:12,809
configurable on command lines or files

200
00:09:12,809 --> 00:09:14,730
it's up to you or site-wide

201
00:09:14,730 --> 00:09:19,019
configurations it is dynamically

202
00:09:19,019 --> 00:09:21,300
extendable so you have the recipes but

203
00:09:21,300 --> 00:09:23,699
you can write your own so it you can

204
00:09:23,699 --> 00:09:26,790
just extend existing classes and then

205
00:09:26,790 --> 00:09:30,029
write the the things that are specific

206
00:09:30,029 --> 00:09:33,420
through your software so it was it is

207
00:09:33,420 --> 00:09:37,559
tested and it is actively developing so

208
00:09:37,559 --> 00:09:39,569
you can just go to github too to see

209
00:09:39,569 --> 00:09:44,179
that this is just a graphic to show the

210
00:09:44,179 --> 00:09:47,519
the community that is same so it is

211
00:09:47,519 --> 00:09:49,769
growing so for the moment is growing I

212
00:09:49,769 --> 00:09:52,619
think by the moment when stops growing

213
00:09:52,619 --> 00:09:54,329
you're going just to show the figure the

214
00:09:54,329 --> 00:09:56,129
numbers and not the graph so for the

215
00:09:56,129 --> 00:09:58,589
moment you can't show the dress it is

216
00:09:58,589 --> 00:10:02,279
growing and just you can just look at

217
00:10:02,279 --> 00:10:03,749
the mailing list and you can see that

218
00:10:03,749 --> 00:10:06,329
it's very reactive and also on github so

219
00:10:06,329 --> 00:10:08,189
there are usually there aren't people

220
00:10:08,189 --> 00:10:10,829
who have problems that will remain open

221
00:10:10,829 --> 00:10:14,129
usually typically people have find a

222
00:10:14,129 --> 00:10:16,319
solution when they need to contact the

223
00:10:16,319 --> 00:10:20,490
community so just one slide and I would

224
00:10:20,490 --> 00:10:22,920
try to avoid getting too technical here

225
00:10:22,920 --> 00:10:25,499
because I I think it's better to discuss

226
00:10:25,499 --> 00:10:28,350
the ideas here so just I will present a

227
00:10:28,350 --> 00:10:30,299
quickly determine knowledge of the of

228
00:10:30,299 --> 00:10:33,269
easy Butte so the lazy Butte framework

229
00:10:33,269 --> 00:10:36,920
is the part that takes care of of

230
00:10:36,920 --> 00:10:40,410
writing is installing downloading the

231
00:10:40,410 --> 00:10:42,540
the packages creating the module files

232
00:10:42,540 --> 00:10:44,939
and provides all the functionalities for

233
00:10:44,939 --> 00:10:47,459
the that are common let's say for all

234
00:10:47,459 --> 00:10:50,160
the builds for all the software then we

235
00:10:50,160 --> 00:10:52,709
have easy blocks that are specific for

236
00:10:52,709 --> 00:10:57,689
our they can be specific for a software

237
00:10:57,689 --> 00:10:59,790
or mostly they are generic so you have

238
00:10:59,790 --> 00:11:02,999
an easy block for for applications that

239
00:11:02,999 --> 00:11:05,639
use configure make for example you have

240
00:11:05,639 --> 00:11:07,290
one easy block for that and then

241
00:11:07,290 --> 00:11:09,029
depending on the application you might

242
00:11:09,029 --> 00:11:11,699
need one as well but mostly you

243
00:11:11,699 --> 00:11:13,919
is only the easy config file which which

244
00:11:13,919 --> 00:11:16,589
is a recipe that is that's not generic

245
00:11:16,589 --> 00:11:19,439
you have the version and that's one of

246
00:11:19,439 --> 00:11:22,079
the key ideas of easy Butte that you

247
00:11:22,079 --> 00:11:24,089
have the versions of the software

248
00:11:24,089 --> 00:11:26,339
everywhere in a recipe so that you know

249
00:11:26,339 --> 00:11:28,769
someone else's she's if someone else

250
00:11:28,769 --> 00:11:31,529
takes this recipe and tries to reboot

251
00:11:31,529 --> 00:11:33,989
it's going to use the exactly the same

252
00:11:33,989 --> 00:11:38,989
versions and while other software

253
00:11:38,989 --> 00:11:42,359
packages like easy Beauty they are more

254
00:11:42,359 --> 00:11:44,669
open more flexible but then there's no

255
00:11:44,669 --> 00:11:46,290
guarantee that you are going to use the

256
00:11:46,290 --> 00:11:48,509
same versions and that you're going to

257
00:11:48,509 --> 00:11:51,749
achieve reproducibility less concept is

258
00:11:51,749 --> 00:11:53,910
the to chain which is very important is

259
00:11:53,910 --> 00:11:59,910
the base for for a for for any easy

260
00:11:59,910 --> 00:12:03,089
config file it it's actually the

261
00:12:03,089 --> 00:12:06,149
compiler and also the basic libraries

262
00:12:06,149 --> 00:12:09,089
that that are used so typically it's MPI

263
00:12:09,089 --> 00:12:12,329
blah slapbox Kalibak this is the basic

264
00:12:12,329 --> 00:12:16,139
things that we see that is used on on

265
00:12:16,139 --> 00:12:18,539
HPC so it's called the two chain and

266
00:12:18,539 --> 00:12:20,730
it's grouped together so it's done in a

267
00:12:20,730 --> 00:12:24,689
way that you it is a base to chain for

268
00:12:24,689 --> 00:12:27,929
building the software so I moved to the

269
00:12:27,929 --> 00:12:30,359
next part now which is the

270
00:12:30,359 --> 00:12:32,789
implementation for for Cray so what was

271
00:12:32,789 --> 00:12:34,739
missing to use on the Cray system and

272
00:12:34,739 --> 00:12:39,149
why so this is a typical example on of

273
00:12:39,149 --> 00:12:42,209
an an easy config file what what we have

274
00:12:42,209 --> 00:12:44,129
inside for a build for example this is

275
00:12:44,129 --> 00:12:47,579
one software called GMP it relies on the

276
00:12:47,579 --> 00:12:49,829
this tool chain this is a tool chain

277
00:12:49,829 --> 00:12:52,980
which has GCC of an MPI open blast a1

278
00:12:52,980 --> 00:12:55,499
and it uses the configure make easy

279
00:12:55,499 --> 00:12:58,619
block and then typically with easy view

280
00:12:58,619 --> 00:13:01,619
you are going to rebuild everything from

281
00:13:01,619 --> 00:13:03,569
scratch you are going to rebuild all the

282
00:13:03,569 --> 00:13:05,759
to chain that you need because you're

283
00:13:05,759 --> 00:13:09,209
not we don't want to use the things that

284
00:13:09,209 --> 00:13:11,069
you have already available on the system

285
00:13:11,069 --> 00:13:13,519
because we might not achieve

286
00:13:13,519 --> 00:13:16,679
reproducibility and then the difference

287
00:13:16,679 --> 00:13:19,169
on Cray is that the programming

288
00:13:19,169 --> 00:13:22,499
environment it's already there so since

289
00:13:22,499 --> 00:13:24,629
it's provided by Cray in this case we do

290
00:13:24,629 --> 00:13:24,990
one

291
00:13:24,990 --> 00:13:28,380
to reuse the existing software because

292
00:13:28,380 --> 00:13:31,589
they have the optimized version of of

293
00:13:31,589 --> 00:13:34,110
scientific libraries libraries and also

294
00:13:34,110 --> 00:13:36,740
NPI for that is optimized for the

295
00:13:36,740 --> 00:13:39,390
interconnect so in the in the case of

296
00:13:39,390 --> 00:13:42,420
Cray we do want to reuse this these

297
00:13:42,420 --> 00:13:46,950
libraries in this compilers and and so

298
00:13:46,950 --> 00:13:51,480
on so we just created a actually Peter

299
00:13:51,480 --> 00:13:54,750
and can it created the easy block and

300
00:13:54,750 --> 00:13:58,680
the to chain for for new for a Cray for

301
00:13:58,680 --> 00:14:00,630
the new compilers Intel and the others

302
00:14:00,630 --> 00:14:03,600
mapping the the programming environment

303
00:14:03,600 --> 00:14:05,700
available on create to easy boots so

304
00:14:05,700 --> 00:14:08,279
that we can use the creative chain as

305
00:14:08,279 --> 00:14:11,760
any other tool chain that it was already

306
00:14:11,760 --> 00:14:16,339
existing on easy build so the three main

307
00:14:16,339 --> 00:14:18,990
features that had to be implemented are

308
00:14:18,990 --> 00:14:22,170
the support for external module files

309
00:14:22,170 --> 00:14:24,089
than the definition of the two chains

310
00:14:24,089 --> 00:14:27,300
and the custom easy block I I want I

311
00:14:27,300 --> 00:14:29,940
want to thank again Peter and Kenneth

312
00:14:29,940 --> 00:14:32,310
but I won't go into details with this

313
00:14:32,310 --> 00:14:34,500
implementation because we don't have

314
00:14:34,500 --> 00:14:39,589
time here so this is a key feature for

315
00:14:39,589 --> 00:14:43,579
for the Cray support so the support for

316
00:14:43,579 --> 00:14:47,040
external module files so before easy

317
00:14:47,040 --> 00:14:48,390
build was creating and building

318
00:14:48,390 --> 00:14:51,180
everything from from scratch and

319
00:14:51,180 --> 00:14:53,820
creating the module files here on Craney

320
00:14:53,820 --> 00:14:57,600
to reuse this module file so so there's

321
00:14:57,600 --> 00:15:00,980
the support for a file where you map the

322
00:15:00,980 --> 00:15:03,300
existing modules through a way that easy

323
00:15:03,300 --> 00:15:05,690
beaut can read so this is useful for

324
00:15:05,690 --> 00:15:08,610
it's needed for Cray but it can also be

325
00:15:08,610 --> 00:15:10,290
used elsewhere if you have already

326
00:15:10,290 --> 00:15:15,270
modules that you want to reuse so also

327
00:15:15,270 --> 00:15:18,270
the the easy Block III will speed up a

328
00:15:18,270 --> 00:15:20,040
little bit here because of the time so

329
00:15:20,040 --> 00:15:22,890
the easy block are specific for the for

330
00:15:22,890 --> 00:15:26,640
for the the cray two chains you can go

331
00:15:26,640 --> 00:15:29,130
on the onion on github if you want to

332
00:15:29,130 --> 00:15:30,959
see the details then here is just to

333
00:15:30,959 --> 00:15:34,440
mention that we have one two chain for

334
00:15:34,440 --> 00:15:36,270
each programming environment available

335
00:15:36,270 --> 00:15:38,520
on Cray that we automatically

336
00:15:38,520 --> 00:15:40,370
the variables that you need for

337
00:15:40,370 --> 00:15:43,140
violating software on the Cray because

338
00:15:43,140 --> 00:15:45,270
they we have a rappers on Cray we don't

339
00:15:45,270 --> 00:15:48,750
use GCC or the compilers directly so we

340
00:15:48,750 --> 00:15:52,290
use the Cray compilers I move now for

341
00:15:52,290 --> 00:15:55,620
the last part which is I would say it's

342
00:15:55,620 --> 00:15:57,209
more interesting from my side because

343
00:15:57,209 --> 00:16:01,500
it's where we manage to use this all

344
00:16:01,500 --> 00:16:05,190
this infrastructure to deploy software

345
00:16:05,190 --> 00:16:07,910
and production so the two use cases that

346
00:16:07,910 --> 00:16:12,140
I'm going to present here it's first the

347
00:16:12,140 --> 00:16:15,390
machine from NATO Swiss which is the

348
00:16:15,390 --> 00:16:21,170
weather forecast service of Switzerland

349
00:16:21,170 --> 00:16:26,070
they have production systems itself it's

350
00:16:26,070 --> 00:16:28,050
two cabinets with the production and

351
00:16:28,050 --> 00:16:31,490
failover with a very GPU dense system

352
00:16:31,490 --> 00:16:35,130
with eight Tests k-8 is per node so

353
00:16:35,130 --> 00:16:40,560
sixteen GPUs per node and this is a CS

354
00:16:40,560 --> 00:16:45,510
storm serious so just to me I explained

355
00:16:45,510 --> 00:16:47,550
what we had in the Cray programming

356
00:16:47,550 --> 00:16:50,760
environment typically this machine is

357
00:16:50,760 --> 00:16:52,890
it's already different from the rest

358
00:16:52,890 --> 00:16:56,370
this is a new series that they provide

359
00:16:56,370 --> 00:16:58,320
only partial support for the programming

360
00:16:58,320 --> 00:17:00,380
environment so they provide only

361
00:17:00,380 --> 00:17:03,600
programming environment Cray and not new

362
00:17:03,600 --> 00:17:07,230
and Intel so we had to to rebuild our

363
00:17:07,230 --> 00:17:10,079
software from scratch and this in this

364
00:17:10,079 --> 00:17:11,939
case even the GCC that they provided

365
00:17:11,939 --> 00:17:16,920
they it was not able to compile AVX

366
00:17:16,920 --> 00:17:19,349
instructions so they give you the harder

367
00:17:19,349 --> 00:17:21,270
and they don't provide you a working

368
00:17:21,270 --> 00:17:23,970
compiler so we open a bug and meanwhile

369
00:17:23,970 --> 00:17:26,220
they took a long time to give an answer

370
00:17:26,220 --> 00:17:28,050
and then meanwhile we rebooted

371
00:17:28,050 --> 00:17:30,330
everything with easy beauty took us a

372
00:17:30,330 --> 00:17:32,760
couple of weeks and now this software

373
00:17:32,760 --> 00:17:34,170
the software stack is in production

374
00:17:34,170 --> 00:17:40,530
since more than one years old our main

375
00:17:40,530 --> 00:17:42,960
use case have move on to pits dine twist

376
00:17:42,960 --> 00:17:46,559
which is a our main flagship system so

377
00:17:46,559 --> 00:17:50,940
it's a GPU based system it has two

378
00:17:50,940 --> 00:17:52,230
partitions so

379
00:17:52,230 --> 00:17:55,650
here it's our largest partition with the

380
00:17:55,650 --> 00:17:59,760
TEL Tesla Pascal P 100 GPUs and then we

381
00:17:59,760 --> 00:18:03,620
have the broader partition so it's then

382
00:18:03,620 --> 00:18:06,830
according to the top 500 is number 8

383
00:18:06,830 --> 00:18:09,929
fastest supercomputing in the world and

384
00:18:09,929 --> 00:18:14,450
according to the green 500 is the second

385
00:18:14,450 --> 00:18:18,090
most efficient supercomputing with

386
00:18:18,090 --> 00:18:23,040
respect to energy consumption so this is

387
00:18:23,040 --> 00:18:25,290
the list of software that we you can

388
00:18:25,290 --> 00:18:27,990
find it for cray on the stock easy with

389
00:18:27,990 --> 00:18:29,640
repository meaning that we have already

390
00:18:29,640 --> 00:18:32,220
contributed back and we also have our

391
00:18:32,220 --> 00:18:35,250
github repository where we have our

392
00:18:35,250 --> 00:18:39,150
recipes and and then here is is just the

393
00:18:39,150 --> 00:18:42,750
least if we want to find look for your

394
00:18:42,750 --> 00:18:47,640
software so so here is just to mention

395
00:18:47,640 --> 00:18:49,530
that we have we have this github

396
00:18:49,530 --> 00:18:53,070
repository where people can can can also

397
00:18:53,070 --> 00:18:57,179
open for requests and contribute back

398
00:18:57,179 --> 00:19:00,840
it's for for pits lines specifically we

399
00:19:00,840 --> 00:19:03,090
have not also automatic checking of the

400
00:19:03,090 --> 00:19:06,440
recipes using the github pull requests

401
00:19:06,440 --> 00:19:08,880
beuter plugin so we check everything

402
00:19:08,880 --> 00:19:12,030
before merging to the master we check

403
00:19:12,030 --> 00:19:14,250
everything and then the last thing is

404
00:19:14,250 --> 00:19:17,340
that we have the autonomous deployment

405
00:19:17,340 --> 00:19:21,450
of this software on the on the system so

406
00:19:21,450 --> 00:19:25,100
the final final comments here is that

407
00:19:25,100 --> 00:19:28,440
proprietary and open source software can

408
00:19:28,440 --> 00:19:32,340
coexist so we had the case where we used

409
00:19:32,340 --> 00:19:34,919
open source to in order to better

410
00:19:34,919 --> 00:19:37,320
exploit our system and what we had

411
00:19:37,320 --> 00:19:39,540
available and in this case we had the

412
00:19:39,540 --> 00:19:41,130
best of towards because we have an

413
00:19:41,130 --> 00:19:43,530
optimum optimized software stack and we

414
00:19:43,530 --> 00:19:45,780
also had support from community both

415
00:19:45,780 --> 00:19:48,720
community and from from the from the

416
00:19:48,720 --> 00:19:52,049
vendor and also many minimizes the risks

417
00:19:52,049 --> 00:19:54,240
of vendor lock-in meaning that we have

418
00:19:54,240 --> 00:19:57,120
an alternative it was the case when we

419
00:19:57,120 --> 00:19:59,460
had a problem with a software shipped by

420
00:19:59,460 --> 00:20:01,530
the vendor we managed just to rebuild

421
00:20:01,530 --> 00:20:03,650
everything with open source and then

422
00:20:03,650 --> 00:20:05,760
actually don't need the software

423
00:20:05,760 --> 00:20:07,440
layers of the stack anymore in that case

424
00:20:07,440 --> 00:20:10,350
so it's a it's the best of two words as

425
00:20:10,350 --> 00:20:13,740
I said okay one slides with links that I

426
00:20:13,740 --> 00:20:16,590
will be available on the web and then we

427
00:20:16,590 --> 00:20:18,570
have time for questions thank you very

428
00:20:18,570 --> 00:20:41,700
much so regarding vendor lock-in how

429
00:20:41,700 --> 00:20:43,710
many career providing a platoon were

430
00:20:43,710 --> 00:20:47,310
replaced for the CS storm series we

431
00:20:47,310 --> 00:20:49,860
replaced all the software sexo meaning

432
00:20:49,860 --> 00:20:53,580
that we don't count on we count on them

433
00:20:53,580 --> 00:20:55,470
only for the operational system and then

434
00:20:55,470 --> 00:20:58,830
we replaced from MPI GCC up to all the

435
00:20:58,830 --> 00:21:01,370
things that matter Swiss needed for

436
00:21:01,370 --> 00:21:04,890
post-processing the all the data so out

437
00:21:04,890 --> 00:21:07,860
say here at least 20 software for all

438
00:21:07,860 --> 00:21:10,860
the netcdf HD HD or/5 all of this came

439
00:21:10,860 --> 00:21:14,010
from from easy view then we didn't have

440
00:21:14,010 --> 00:21:16,380
to change much all the defaults work for

441
00:21:16,380 --> 00:21:18,570
them so I would say 20 software on this

442
00:21:18,570 --> 00:21:21,120
case and then in the future maybe for

443
00:21:21,120 --> 00:21:25,020
the XC series where you we might start

444
00:21:25,020 --> 00:21:28,980
looking in now and also using the open

445
00:21:28,980 --> 00:21:32,280
source only and then we know that others

446
00:21:32,280 --> 00:21:34,230
see other plays like tech they just

447
00:21:34,230 --> 00:21:37,110
dropped all the software stack from Cray

448
00:21:37,110 --> 00:21:40,380
so they use Intel compilers and MPI and

449
00:21:40,380 --> 00:21:43,200
then with easy beauty could think about

450
00:21:43,200 --> 00:21:45,840
doing the same the same in the future so

451
00:21:45,840 --> 00:21:49,939
this now we have the possibilities

452
00:21:54,190 --> 00:21:59,320
I have a question how is this being

453
00:21:59,320 --> 00:22:02,500
received by create itself because it

454
00:22:02,500 --> 00:22:04,480
seems like it or we are getting the

455
00:22:04,480 --> 00:22:06,190
signal to create that they're not doing

456
00:22:06,190 --> 00:22:08,050
a good enough job in terms of softer

457
00:22:08,050 --> 00:22:10,030
stack and you have to put something on

458
00:22:10,030 --> 00:22:13,680
top to actually make it fit so for the

459
00:22:13,680 --> 00:22:16,840
for the CES storm series the feeling

460
00:22:16,840 --> 00:22:18,400
that I have is that they don't really

461
00:22:18,400 --> 00:22:20,470
care is not important for them it's the

462
00:22:20,470 --> 00:22:23,320
series that they are focusing on the

463
00:22:23,320 --> 00:22:27,370
it's the blow and how not harder by the

464
00:22:27,370 --> 00:22:29,320
version that they for the support they

465
00:22:29,320 --> 00:22:31,770
don't really get care that's my feeling

466
00:22:31,770 --> 00:22:38,590
as for XE they not only because of the

467
00:22:38,590 --> 00:22:40,060
efforts on easy buta

468
00:22:40,060 --> 00:22:43,260
from the complaints that we have open

469
00:22:43,260 --> 00:22:47,080
tickets that took so much so much time

470
00:22:47,080 --> 00:22:50,620
to resolve then I think they they

471
00:22:50,620 --> 00:22:52,030
realize they are not doing a good job

472
00:22:52,030 --> 00:22:54,520
but they don't give any feedback to us

473
00:22:54,520 --> 00:22:56,260
so but they know because we have people

474
00:22:56,260 --> 00:22:58,660
inside from crate they know that we are

475
00:22:58,660 --> 00:23:01,180
using less and less their software every

476
00:23:01,180 --> 00:23:03,790
time you have an error before or at the

477
00:23:03,790 --> 00:23:05,830
same time we open a ticket we build

478
00:23:05,830 --> 00:23:08,290
software with easy build so if they

479
00:23:08,290 --> 00:23:11,680
don't realize that if we continue like

480
00:23:11,680 --> 00:23:15,010
this we might not needing their software

481
00:23:15,010 --> 00:23:17,080
any more of it it's bad for them then

482
00:23:17,080 --> 00:23:22,169
it's it's the free market oh that's

483
00:23:25,790 --> 00:23:28,899
that's it

484
00:23:29,130 --> 00:23:34,859
[Applause]

