1
00:00:04,650 --> 00:00:09,129
so hi I will plant you spine annex VI

2
00:00:09,129 --> 00:00:10,540
which is an alternative hardware

3
00:00:10,540 --> 00:00:13,259
description language for digital adware

4
00:00:13,259 --> 00:00:16,900
so during this presentation I will first

5
00:00:16,900 --> 00:00:18,369
give you a little introduction about

6
00:00:18,369 --> 00:00:20,919
spending idea how it come how we can use

7
00:00:20,919 --> 00:00:24,099
how we can use it and then I will give

8
00:00:24,099 --> 00:00:25,599
some different ways we actually land

9
00:00:25,599 --> 00:00:28,750
very dog and then I will give you many

10
00:00:28,750 --> 00:00:30,399
little example to show you the

11
00:00:30,399 --> 00:00:32,558
invitation of spaniel HDL and how it is

12
00:00:32,558 --> 00:00:36,250
different what give you by using some

13
00:00:36,250 --> 00:00:39,700
abstraction and by using some software

14
00:00:39,700 --> 00:00:41,800
engineering approach to do hardware

15
00:00:41,800 --> 00:00:45,640
design so this position we okay this

16
00:00:45,640 --> 00:00:47,650
penetration will only be about since it

17
00:00:47,650 --> 00:00:51,120
is about hardware it's really not about

18
00:00:51,120 --> 00:01:00,790
simulation thing you can simulate the

19
00:01:00,790 --> 00:01:06,630
output netlist so yeah to simulate

20
00:01:06,630 --> 00:01:12,420
generated the hardware you can use

21
00:01:12,420 --> 00:01:15,600
regular tools because output netlist of

22
00:01:15,600 --> 00:01:17,950
Spain an Excel is reacted and very large

23
00:01:17,950 --> 00:01:19,600
so you can do the simulation of those

24
00:01:19,600 --> 00:01:24,130
octave netlist so yeah this is the

25
00:01:24,130 --> 00:01:26,440
context I don't have many time to give

26
00:01:26,440 --> 00:01:28,420
you my opinion on that but basically

27
00:01:28,420 --> 00:01:30,850
what I think is vehicle chosen to and

28
00:01:30,850 --> 00:01:34,119
very luck 2005 are really bottleneck in

29
00:01:34,119 --> 00:01:37,170
terms of engineering by many aspect and

30
00:01:37,170 --> 00:01:39,460
vex dealt with an atan system very large

31
00:01:39,460 --> 00:01:41,830
will not save all of us because of idiot

32
00:01:41,830 --> 00:01:44,170
support because even of features that

33
00:01:44,170 --> 00:01:46,170
they bring that are not so good finale

34
00:01:46,170 --> 00:01:48,520
so I don't really have many times talk

35
00:01:48,520 --> 00:01:53,530
about that sorry but so finally clear it

36
00:01:53,530 --> 00:01:56,740
is an open source project which start in

37
00:01:56,740 --> 00:02:00,280
December 2014 it focus exclusively an

38
00:02:00,280 --> 00:02:02,710
aerial description and as you can see

39
00:02:02,710 --> 00:02:06,670
here there is the flow so you can

40
00:02:06,670 --> 00:02:08,258
describe your hardware by using some

41
00:02:08,258 --> 00:02:10,508
Scala files then you ask it's a Spanish

42
00:02:10,508 --> 00:02:12,549
the compiler to translate it into a

43
00:02:12,549 --> 00:02:14,109
regular of the HDL and very lot that you

44
00:02:14,109 --> 00:02:17,300
can sensitize or similar

45
00:02:17,300 --> 00:02:20,800
and so chief mates

46
00:02:20,800 --> 00:02:23,870
spinergy directly compatible with all

47
00:02:23,870 --> 00:02:26,000
idea tools because its regular vehicle

48
00:02:26,000 --> 00:02:28,970
and very dark and you can also integrate

49
00:02:28,970 --> 00:02:32,990
some legacy IP like block from fog from

50
00:02:32,990 --> 00:02:34,970
hiding some from material you know are

51
00:02:34,970 --> 00:02:37,190
some more complicated things inside the

52
00:02:37,190 --> 00:02:39,080
Spinelli the spine and exterior key by

53
00:02:39,080 --> 00:02:42,200
using a black boxing system so it's

54
00:02:42,200 --> 00:02:45,250
quite compatible with existing flow and

55
00:02:45,250 --> 00:02:49,820
existing IPS then about the abstraction

56
00:02:49,820 --> 00:02:52,130
level it it starts at the same levels

57
00:02:52,130 --> 00:02:54,680
and we examine very dog a little bit

58
00:02:54,680 --> 00:02:57,050
different but the thing is then on the

59
00:02:57,050 --> 00:02:58,670
top of that you can build a new

60
00:02:58,670 --> 00:03:01,190
abstraction another you can go away from

61
00:03:01,190 --> 00:03:03,020
this mess of for your kids hardware

62
00:03:03,020 --> 00:03:07,880
design to really say what she wants so

63
00:03:07,880 --> 00:03:10,760
yeah just before example some last

64
00:03:10,760 --> 00:03:13,730
points so there is no logic of ahead in

65
00:03:13,730 --> 00:03:15,500
the chromatic cut because financially L

66
00:03:15,500 --> 00:03:18,230
is not a ETLs approach it's really much

67
00:03:18,230 --> 00:03:20,990
more like an LTL approach as we acted in

68
00:03:20,990 --> 00:03:23,270
paraguay you have to design gates what

69
00:03:23,270 --> 00:03:25,280
you have to design registers in six like

70
00:03:25,280 --> 00:03:27,200
that there is no other it you will not

71
00:03:27,200 --> 00:03:30,620
lose performance by using it all names

72
00:03:30,620 --> 00:03:35,450
and all your co-parent iake is pretty

73
00:03:35,450 --> 00:03:35,780
bad

74
00:03:35,780 --> 00:03:37,670
during the translation from spain lyrics

75
00:03:37,670 --> 00:03:39,860
they are two very long and via so you

76
00:03:39,860 --> 00:03:43,459
can simulate it by using your favorite

77
00:03:43,459 --> 00:03:45,200
simulator you can look at the wave and

78
00:03:45,200 --> 00:03:49,100
then very easily understand by

79
00:03:49,100 --> 00:03:51,709
understanding the wave catch-up where is

80
00:03:51,709 --> 00:03:55,610
back in Spain Yahoo f1 and basically

81
00:03:55,610 --> 00:03:58,250
expand a girl is not ready a language

82
00:03:58,250 --> 00:03:59,630
and this is the main point about

83
00:03:59,630 --> 00:04:03,340
venereal Spanish there is a language if

84
00:04:03,340 --> 00:04:06,350
it's a color library so scale is a gonna

85
00:04:06,350 --> 00:04:07,970
hurt purpose programming language and

86
00:04:07,970 --> 00:04:10,220
Spain Eric DL is a library implemented

87
00:04:10,220 --> 00:04:12,080
on the top of it to allow you to

88
00:04:12,080 --> 00:04:14,300
describe being new hardware and it could

89
00:04:14,300 --> 00:04:15,770
seem strange to have a language into

90
00:04:15,770 --> 00:04:17,870
another one but it is probably one of

91
00:04:17,870 --> 00:04:19,850
the one of the best point of Spain in a

92
00:04:19,850 --> 00:04:23,240
clear so I will come and touch later so

93
00:04:23,240 --> 00:04:25,700
yeah this is a simple example a very

94
00:04:25,700 --> 00:04:27,560
random one which has no interest in

95
00:04:27,560 --> 00:04:29,990
practically but imagine you want to

96
00:04:29,990 --> 00:04:30,830
design this

97
00:04:30,830 --> 00:04:32,450
little piece of hardware with a single

98
00:04:32,450 --> 00:04:34,100
condition to derive some comment or

99
00:04:34,100 --> 00:04:36,770
logic some register without reset summer

100
00:04:36,770 --> 00:04:39,170
Easter with roulette in VHDL and in

101
00:04:39,170 --> 00:04:40,630
regular because you have to use

102
00:04:40,630 --> 00:04:42,530
assimilation constructs to build

103
00:04:42,530 --> 00:04:44,180
hardware to interface a hardware because

104
00:04:44,180 --> 00:04:46,550
the Eglinton Parag were initially made

105
00:04:46,550 --> 00:04:48,860
for simulation purpose not for inferring

106
00:04:48,860 --> 00:04:51,830
Hardware so you'll have to write three

107
00:04:51,830 --> 00:04:53,810
different process you have a lot of

108
00:04:53,810 --> 00:04:55,670
redundancies because for example this

109
00:04:55,670 --> 00:04:57,740
condition is duplicated three times

110
00:04:57,740 --> 00:04:59,930
which is not very clean which is not

111
00:04:59,930 --> 00:05:03,170
really safe because you can create bugs

112
00:05:03,170 --> 00:05:06,290
by hitting duplications at many place so

113
00:05:06,290 --> 00:05:10,070
this is how you said to do and this is

114
00:05:10,070 --> 00:05:12,110
how you can do with an odd ready ticket

115
00:05:12,110 --> 00:05:14,600
at syntax and this is some finally clear

116
00:05:14,600 --> 00:05:17,570
example so first difference you can

117
00:05:17,570 --> 00:05:20,240
define things explicitly as signals like

118
00:05:20,240 --> 00:05:22,670
my register is a register not because

119
00:05:22,670 --> 00:05:24,890
you are as I need it in two o'clock at

120
00:05:24,890 --> 00:05:26,900
process but because you define it

121
00:05:26,900 --> 00:05:29,150
directly at the definition I want a reg

122
00:05:29,150 --> 00:05:30,770
of tip data type

123
00:05:30,770 --> 00:05:33,500
I want a reg of this data type with a

124
00:05:33,500 --> 00:05:37,070
reset value to zero so because things

125
00:05:37,070 --> 00:05:39,740
are explicit now you do not have to

126
00:05:39,740 --> 00:05:40,880
write process and these kind of things

127
00:05:40,880 --> 00:05:44,300
and you can write for example that you

128
00:05:44,300 --> 00:05:46,190
want nice enough to be forced by default

129
00:05:46,190 --> 00:05:48,770
and then when the call is true then you

130
00:05:48,770 --> 00:05:51,580
can assign all of those guys in the same

131
00:05:51,580 --> 00:05:56,930
conditional statement so another little

132
00:05:56,930 --> 00:06:00,260
example different is to compare and is

133
00:06:00,260 --> 00:06:01,730
to understand subtract another finish

134
00:06:01,730 --> 00:06:04,250
their rights that though if you want to

135
00:06:04,250 --> 00:06:06,650
define a simple timer component as you

136
00:06:06,650 --> 00:06:08,660
can do in VHDL and Verilog it's very

137
00:06:08,660 --> 00:06:11,660
similar like you can define yeah it's

138
00:06:11,660 --> 00:06:13,910
based on scales oh it's much closer

139
00:06:13,910 --> 00:06:17,600
though to software design in terms of

140
00:06:17,600 --> 00:06:20,750
syntax can define at time a class with

141
00:06:20,750 --> 00:06:22,820
some construction parameters this is

142
00:06:22,820 --> 00:06:25,130
like a generic or a parameter in very

143
00:06:25,130 --> 00:06:28,190
large then this class will extend

144
00:06:28,190 --> 00:06:29,690
component to say this class is a

145
00:06:29,690 --> 00:06:31,610
component so it's a logical element of

146
00:06:31,610 --> 00:06:32,210
my design

147
00:06:32,210 --> 00:06:35,900
then can you find IO into input/output

148
00:06:35,900 --> 00:06:37,190
into a bundle

149
00:06:37,190 --> 00:06:39,140
bender is a concept of hardware data

150
00:06:39,140 --> 00:06:41,450
structure and spinal area then can

151
00:06:41,450 --> 00:06:42,950
define inputs and output of your

152
00:06:42,950 --> 00:06:43,590
components

153
00:06:43,590 --> 00:06:46,200
it's very easy then can you find a

154
00:06:46,200 --> 00:06:48,330
counter into ensign your timer which is

155
00:06:48,330 --> 00:06:50,550
a register of this data type then you

156
00:06:50,550 --> 00:06:53,700
can write conditions as I need all the

157
00:06:53,700 --> 00:06:56,010
conditions reassign it so last

158
00:06:56,010 --> 00:06:58,380
assignment wind the last a figment win

159
00:06:58,380 --> 00:07:01,230
like in Vienna very large sign can do

160
00:07:01,230 --> 00:07:04,410
assignment so if you know how to do the

161
00:07:04,410 --> 00:07:06,510
again very long it's not so far you can

162
00:07:06,510 --> 00:07:09,060
use it by the same way excuse to not

163
00:07:09,060 --> 00:07:10,890
have to care about process and things

164
00:07:10,890 --> 00:07:14,580
like that but then I would start with

165
00:07:14,580 --> 00:07:19,070
the fun stuff so imagine you want to

166
00:07:19,070 --> 00:07:22,560
have a inject bits of color so behind

167
00:07:22,560 --> 00:07:24,210
chick bits of color I mean a stream of

168
00:07:24,210 --> 00:07:26,580
data which carry color of like a valid

169
00:07:26,580 --> 00:07:28,980
an already flag as a patrician and

170
00:07:28,980 --> 00:07:33,170
payload as an idli be data structure and

171
00:07:33,170 --> 00:07:35,669
okay you have a source and check this of

172
00:07:35,669 --> 00:07:37,860
color you want to cue it inside the FIFO

173
00:07:37,860 --> 00:07:39,600
and then you want to connect it to the

174
00:07:39,600 --> 00:07:43,980
sink and check this of color so in the

175
00:07:43,980 --> 00:07:46,410
air 2002 it is really kind of boring

176
00:07:46,410 --> 00:07:49,050
because you have to define Exynos one by

177
00:07:49,050 --> 00:07:51,660
one in many cases you can not really use

178
00:07:51,660 --> 00:07:53,610
recorder because you want to have them

179
00:07:53,610 --> 00:07:56,669
permit rised by verax so you can't

180
00:07:56,669 --> 00:07:58,530
really use records there in all cases

181
00:07:58,530 --> 00:08:01,350
then the most boring part is probably

182
00:08:01,350 --> 00:08:03,210
about instituting the component itself

183
00:08:03,210 --> 00:08:05,490
where you have to paint evening nails

184
00:08:05,490 --> 00:08:08,430
one by one which is very error-prone

185
00:08:08,430 --> 00:08:10,919
which is very copy past work which is I

186
00:08:10,919 --> 00:08:14,700
don't keep work maybe so in Spain like

187
00:08:14,700 --> 00:08:16,830
the sinks are much more object oriented

188
00:08:16,830 --> 00:08:20,370
which mean so yeah for example if you

189
00:08:20,370 --> 00:08:22,650
want in Spain out there the concept of

190
00:08:22,650 --> 00:08:23,580
handshake

191
00:08:23,580 --> 00:08:26,910
this is named stream so if you want to

192
00:08:26,910 --> 00:08:28,950
define a source stream and a sink stream

193
00:08:28,950 --> 00:08:33,089
you say I want a source and a sink which

194
00:08:33,089 --> 00:08:35,339
have stream of RGB color with this

195
00:08:35,339 --> 00:08:38,010
parameter addition so you can already

196
00:08:38,010 --> 00:08:41,130
much more use that a stricter with which

197
00:08:41,130 --> 00:08:43,049
have privatization we have in a

198
00:08:43,049 --> 00:08:44,700
parametrization you don't have you are

199
00:08:44,700 --> 00:08:50,550
not bound at this level and assistance

200
00:08:50,550 --> 00:08:52,680
to entry twin so it is 5 for you you say

201
00:08:52,680 --> 00:08:56,520
I want a 5 for a stream FIFO with this

202
00:08:56,520 --> 00:09:01,800
has element which are very faithful you

203
00:09:01,800 --> 00:09:04,140
don't have to be in all signals of you

204
00:09:04,140 --> 00:09:05,580
that has tricked you into a single se

205
00:09:05,580 --> 00:09:07,890
the basic vector anymore then you say

206
00:09:07,890 --> 00:09:09,660
the depth that you want and then this is

207
00:09:09,660 --> 00:09:11,760
the thing if you want to access the

208
00:09:11,760 --> 00:09:14,370
first part of the FIFO you say five for

209
00:09:14,370 --> 00:09:16,620
that I owe that pash you don't have to

210
00:09:16,620 --> 00:09:18,720
be in sync you directly have access to

211
00:09:18,720 --> 00:09:21,320
them by using lit kind of

212
00:09:21,320 --> 00:09:23,580
object-oriented way like a FIFO is an

213
00:09:23,580 --> 00:09:25,710
object you can say I want to access this

214
00:09:25,710 --> 00:09:28,620
attribute of the FIFO then here for

215
00:09:28,620 --> 00:09:30,870
example it's written that you take the

216
00:09:30,870 --> 00:09:33,420
source stream then you connect it to the

217
00:09:33,420 --> 00:09:35,940
back part of the FIFO and here it you

218
00:09:35,940 --> 00:09:37,860
take the top part of the 5:1 you connect

219
00:09:37,860 --> 00:09:41,010
it to the sink so it is better than this

220
00:09:41,010 --> 00:09:43,710
already but it could be better and I

221
00:09:43,710 --> 00:09:45,090
will command better way to do it

222
00:09:45,090 --> 00:09:48,060
so basically stream is not something

223
00:09:48,060 --> 00:09:49,650
that come magically from Spain excel

224
00:09:49,650 --> 00:09:51,090
compare oh it's something which is

225
00:09:51,090 --> 00:09:52,650
implemented and the top of it by using

226
00:09:52,650 --> 00:09:55,250
regular syntax of it as painting a clear

227
00:09:55,250 --> 00:09:59,730
so it is a class with a type parameter

228
00:09:59,730 --> 00:10:03,060
here which extend bundle because this

229
00:10:03,060 --> 00:10:04,320
class represent and have a data

230
00:10:04,320 --> 00:10:06,840
structure so a collection vendor then

231
00:10:06,840 --> 00:10:08,730
you can define element into your data

232
00:10:08,730 --> 00:10:11,040
structure has a valid and ready

233
00:10:11,040 --> 00:10:14,340
flag a payload instance of this permit

234
00:10:14,340 --> 00:10:17,010
feasible type so you can use this data

235
00:10:17,010 --> 00:10:20,730
structure has a slave input of you

236
00:10:20,730 --> 00:10:23,040
component or as master output of your

237
00:10:23,040 --> 00:10:24,810
component it's not like records where

238
00:10:24,810 --> 00:10:26,670
you have all signals that can only be in

239
00:10:26,670 --> 00:10:28,920
one direction it's not explain how to do

240
00:10:28,920 --> 00:10:31,950
that but it is very useful and easy to

241
00:10:31,950 --> 00:10:35,430
do and then there is this thing this

242
00:10:35,430 --> 00:10:37,380
data structure you can add functions in

243
00:10:37,380 --> 00:10:40,590
functions in it like the operator that

244
00:10:40,590 --> 00:10:43,790
we have seen there to connect

245
00:10:49,500 --> 00:10:51,560
you

246
00:10:54,100 --> 00:10:58,890
trained in in vehicle and very dug

247
00:10:58,890 --> 00:11:01,930
function tasks in procedure are not that

248
00:11:01,930 --> 00:11:04,030
much useful because inside them you

249
00:11:04,030 --> 00:11:05,910
can't define what you want you have to

250
00:11:05,910 --> 00:11:09,700
define rare relationship between outputs

251
00:11:09,700 --> 00:11:11,140
and inputs of the function but you can

252
00:11:11,140 --> 00:11:14,530
define inside them register you can

253
00:11:14,530 --> 00:11:17,020
insulate a component you can do all the

254
00:11:17,020 --> 00:11:18,310
tricky stuff that you want you already

255
00:11:18,310 --> 00:11:20,320
limited with them but here you can

256
00:11:20,320 --> 00:11:22,360
really do what you want like can define

257
00:11:22,360 --> 00:11:24,580
a cue function we take as parameter how

258
00:11:24,580 --> 00:11:26,590
many big you want the cube to be and

259
00:11:26,590 --> 00:11:28,690
then this function we create for example

260
00:11:28,690 --> 00:11:31,840
a new FIFO internally and you cop an

261
00:11:31,840 --> 00:11:35,140
answer and then it will connect as a

262
00:11:35,140 --> 00:11:37,060
stream on the one who you are cutting it

263
00:11:37,060 --> 00:11:39,130
to the perfect part of this five four

264
00:11:39,130 --> 00:11:41,260
and this one can read wrote on the

265
00:11:41,260 --> 00:11:44,140
output part of this FIFO so it is really

266
00:11:44,140 --> 00:11:47,410
simple but in fact there you go in place

267
00:11:47,410 --> 00:11:50,290
of writing or T stuff is already better

268
00:11:50,290 --> 00:11:53,620
than regular VHDL you are just writing

269
00:11:53,620 --> 00:11:56,020
tips like you want a source and a sink

270
00:11:56,020 --> 00:11:58,780
stream of RGB colors and then you'd say

271
00:11:58,780 --> 00:12:01,090
you take your source you want to cue it

272
00:12:01,090 --> 00:12:03,460
we are 5'4 of sixteen element and then

273
00:12:03,460 --> 00:12:05,950
you connect it to the sink and there you

274
00:12:05,950 --> 00:12:07,750
are starting to going away of the mass

275
00:12:07,750 --> 00:12:10,090
of fire of other word design you are

276
00:12:10,090 --> 00:12:12,370
saying what you want and this is working

277
00:12:12,370 --> 00:12:14,050
you can you can write a blog like in

278
00:12:14,050 --> 00:12:16,240
that you can do mistake in your wiring

279
00:12:16,240 --> 00:12:19,630
you can do these kind of things so it's

280
00:12:19,630 --> 00:12:22,920
it's not only you can go further then

281
00:12:22,920 --> 00:12:25,180
like imagine you want to do this ad

282
00:12:25,180 --> 00:12:27,610
where like you have a saw stream of

283
00:12:27,610 --> 00:12:30,700
color this is our random example but it

284
00:12:30,700 --> 00:12:34,110
gives an example imagine you have soup

285
00:12:34,110 --> 00:12:35,230
handshake

286
00:12:35,230 --> 00:12:37,390
I saw stream of Korea you want to draw a

287
00:12:37,390 --> 00:12:39,070
section of this stream when they are

288
00:12:39,070 --> 00:12:40,660
black so you need to add these

289
00:12:40,660 --> 00:12:43,750
arbitration gates and this check then

290
00:12:43,750 --> 00:12:45,700
from this point you want to add a

291
00:12:45,700 --> 00:12:48,280
pipelining stage to have better maximal

292
00:12:48,280 --> 00:12:50,890
frequency or 12:1 depth

293
00:12:50,890 --> 00:12:53,350
five four three eight I don't know so

294
00:12:53,350 --> 00:12:56,470
you need to add that so anywhere

295
00:12:56,470 --> 00:12:58,870
probably if you have to do that we do it

296
00:12:58,870 --> 00:13:01,150
by hand and it's really our province

297
00:13:01,150 --> 00:13:03,070
it's if you do arrow inside bit pressure

298
00:13:03,070 --> 00:13:04,930
and it's always a lot of time to find

299
00:13:04,930 --> 00:13:07,620
out where is a bug in your arbitration

300
00:13:07,620 --> 00:13:11,160
but here there is how you can do it in

301
00:13:11,160 --> 00:13:13,650
Spain HDL I mean how you can do it by

302
00:13:13,650 --> 00:13:15,360
using the library which is intimate on

303
00:13:15,360 --> 00:13:17,580
the top of Spain in exile like you can

304
00:13:17,580 --> 00:13:19,170
define a so stream of every bit color

305
00:13:19,170 --> 00:13:21,360
then you can say I take my school stream

306
00:13:21,360 --> 00:13:23,460
i want to throat election when the sauce

307
00:13:23,460 --> 00:13:26,640
payload is black and then with this

308
00:13:26,640 --> 00:13:28,320
function through and we do it on t stage

309
00:13:28,320 --> 00:13:30,930
till this point and then you say i want

310
00:13:30,930 --> 00:13:33,240
to stage it and t stage function we

311
00:13:33,240 --> 00:13:36,060
create this ad where for you and then it

312
00:13:36,060 --> 00:13:38,550
returned t's just not and then you name

313
00:13:38,550 --> 00:13:41,940
it sink so really you are you are saying

314
00:13:41,940 --> 00:13:46,340
what you want and not how really it work

315
00:13:46,340 --> 00:13:49,740
signals by signals and this is not magic

316
00:13:49,740 --> 00:13:53,580
here you can do you can navigate this to

317
00:13:53,580 --> 00:13:54,900
the implementation of this function and

318
00:13:54,900 --> 00:13:57,420
this is pure RTL and limitation it's not

319
00:13:57,420 --> 00:14:01,050
from this panel compiler so another

320
00:14:01,050 --> 00:14:06,270
example thick machine so you can design

321
00:14:06,270 --> 00:14:08,100
sick machine as you do in reactant and

322
00:14:08,100 --> 00:14:09,750
very large by using switch statements

323
00:14:09,750 --> 00:14:11,610
and things like that but you can either

324
00:14:11,610 --> 00:14:13,680
use the state machine tool so state

325
00:14:13,680 --> 00:14:15,510
machine tool is one time again limited

326
00:14:15,510 --> 00:14:17,730
on the top of spinner deal it's not

327
00:14:17,730 --> 00:14:20,700
something integrated in it and if you

328
00:14:20,700 --> 00:14:24,450
want to do two state machine though you

329
00:14:24,450 --> 00:14:26,610
can say I want a new state machine

330
00:14:26,610 --> 00:14:30,090
I want state ABC which are States state

331
00:14:30,090 --> 00:14:33,030
a is my entry point then you can define

332
00:14:33,030 --> 00:14:38,400
some signals inside it and then you can

333
00:14:38,400 --> 00:14:40,500
say state B on entry I want to set my

334
00:14:40,500 --> 00:14:43,230
contour to zero state B when it is

335
00:14:43,230 --> 00:14:43,680
active

336
00:14:43,680 --> 00:14:45,540
I want to contact when my container is

337
00:14:45,540 --> 00:14:47,850
for I want to go to state C and then

338
00:14:47,850 --> 00:14:50,730
instead be when it exits I want to put

339
00:14:50,730 --> 00:14:53,760
my eye or vessel to true so it's just an

340
00:14:53,760 --> 00:14:56,490
exam that's Spanish they'll allow you to

341
00:14:56,490 --> 00:14:59,220
rise your level abstraction but it's not

342
00:14:59,220 --> 00:15:01,140
because it's implemented in it it's

343
00:15:01,140 --> 00:15:03,810
because it's syntax is flexible enough

344
00:15:03,810 --> 00:15:05,820
to allowing you to build this

345
00:15:05,820 --> 00:15:08,220
abstraction state machine is not magic

346
00:15:08,220 --> 00:15:10,170
really it's just software engineering

347
00:15:10,170 --> 00:15:14,510
with how do I design combined together

348
00:15:14,510 --> 00:15:17,670
so another example imagine you want to

349
00:15:17,670 --> 00:15:19,920
do that you have apples like a Naxalite

350
00:15:19,920 --> 00:15:20,940
or

351
00:15:20,940 --> 00:15:23,820
pb-1 I don't know then you want from T's

352
00:15:23,820 --> 00:15:27,150
boobs be able to drive a signal a and B

353
00:15:27,150 --> 00:15:29,280
which are inside of 32 bits so you want

354
00:15:29,280 --> 00:15:32,220
to have some register here which right

355
00:15:32,220 --> 00:15:34,440
only from T's B's then you do some

356
00:15:34,440 --> 00:15:35,970
calculation like multiplication between

357
00:15:35,970 --> 00:15:37,380
both and then you want to be able to

358
00:15:37,380 --> 00:15:40,200
read the result from this booth so if

359
00:15:40,200 --> 00:15:41,670
you want to do that in via control log

360
00:15:41,670 --> 00:15:44,850
we have to let to manage the these

361
00:15:44,850 --> 00:15:46,800
timings by hand to do some switch cases

362
00:15:46,800 --> 00:15:50,280
so it could be a right but it's not the

363
00:15:50,280 --> 00:15:53,520
only solutions so here is an example if

364
00:15:53,520 --> 00:15:55,260
you want to create a next slide for this

365
00:15:55,260 --> 00:15:59,430
you can write it like that and then you

366
00:15:59,430 --> 00:16:01,470
can use an next slide slave factory tool

367
00:16:01,470 --> 00:16:03,630
the TSP is one time again content at the

368
00:16:03,630 --> 00:16:05,580
top of spin excels not integrated inside

369
00:16:05,580 --> 00:16:07,710
it and this tool will allow you to

370
00:16:07,710 --> 00:16:10,110
specify you register mapping by by in an

371
00:16:10,110 --> 00:16:12,270
abstract way without having any an

372
00:16:12,270 --> 00:16:16,010
acknowledge of the boost timing then

373
00:16:16,010 --> 00:16:21,540
like you can say a is something created

374
00:16:21,540 --> 00:16:23,790
from the factory as a right only

375
00:16:23,790 --> 00:16:26,100
register of T's data type mapped at this

376
00:16:26,100 --> 00:16:29,340
address and the same for B and then you

377
00:16:29,340 --> 00:16:32,070
can do some calculation here with result

378
00:16:32,070 --> 00:16:34,980
and then you can say I want my factory

379
00:16:34,980 --> 00:16:38,070
to make the result readable at the

380
00:16:38,070 --> 00:16:41,670
address 8 and this specification here is

381
00:16:41,670 --> 00:16:43,380
completely abstract from the fact that

382
00:16:43,380 --> 00:16:45,900
it is a Naxalite one you can replace it

383
00:16:45,900 --> 00:16:48,570
here by a PV one and it will work

384
00:16:48,570 --> 00:16:52,400
directly so and behind that there is a

385
00:16:52,400 --> 00:16:55,140
lot of software entering like there is

386
00:16:55,140 --> 00:16:57,180
ash map that you can use to elaborate

387
00:16:57,180 --> 00:16:59,160
your design and this is used behind the

388
00:16:59,160 --> 00:17:03,300
center there is abstract classes there

389
00:17:03,300 --> 00:17:05,939
is abstract functions there is irritancy

390
00:17:05,939 --> 00:17:09,810
ever eaten see ya every new in every

391
00:17:09,810 --> 00:17:13,410
tense exactly yes there is many things

392
00:17:13,410 --> 00:17:16,980
that you can do so a last example this

393
00:17:16,980 --> 00:17:18,660
is list at the most Russian project that

394
00:17:18,660 --> 00:17:20,550
has made fully in Spain there used to

395
00:17:20,550 --> 00:17:22,199
check that each worker Ecklie and it's

396
00:17:22,199 --> 00:17:25,410
not too much buggy and this is a kind of

397
00:17:25,410 --> 00:17:27,720
little SOC which work on SPD a with an

398
00:17:27,720 --> 00:17:30,720
risk 5 CPU with instruction cache avatar

399
00:17:30,720 --> 00:17:33,750
chained to debug it some as their arm

400
00:17:33,750 --> 00:17:34,430
controller

401
00:17:34,430 --> 00:17:36,640
from a pity bridge for low performance

402
00:17:36,640 --> 00:17:40,720
peripherals GPIO timer you at Nvidia

403
00:17:40,720 --> 00:17:44,510
this is an acci for interconnect is in a

404
00:17:44,510 --> 00:17:46,910
PB interconnect and there is some simple

405
00:17:46,910 --> 00:17:48,290
card which are interesting inside it

406
00:17:48,290 --> 00:17:51,380
like for example to implement to fun / -

407
00:17:51,380 --> 00:17:53,480
instance here it is a PB bridge from AK

408
00:17:53,480 --> 00:17:55,910
see like from occifer it's just writing

409
00:17:55,910 --> 00:17:58,820
that you say I want my bridge with this

410
00:17:58,820 --> 00:18:00,110
parameter section and T's it's done

411
00:18:00,110 --> 00:18:03,590
and to instantiate or this decoding

412
00:18:03,590 --> 00:18:05,780
stuff for a PB with all those

413
00:18:05,780 --> 00:18:07,850
connections between components if you're

414
00:18:07,850 --> 00:18:10,430
saying I want an APB 3d color my master

415
00:18:10,430 --> 00:18:13,430
is a people bridge IU a PB and there you

416
00:18:13,430 --> 00:18:15,620
can give a list of safe like timer

417
00:18:15,620 --> 00:18:18,020
controller I / PB is mapped at this

418
00:18:18,020 --> 00:18:21,050
address with this address range and you

419
00:18:21,050 --> 00:18:23,510
know it's in fact that it's in very dark

420
00:18:23,510 --> 00:18:27,580
is it so boring to do that so here it is

421
00:18:27,580 --> 00:18:31,490
saying what you want and you get it then

422
00:18:31,490 --> 00:18:33,410
there is another pattern though it is

423
00:18:33,410 --> 00:18:37,100
for the exit for outside and this one

424
00:18:37,100 --> 00:18:40,460
use a data model pattern like you can

425
00:18:40,460 --> 00:18:43,160
create an acci for crossbar factory then

426
00:18:43,160 --> 00:18:45,080
you can fit it with some data model by

427
00:18:45,080 --> 00:18:47,870
saying I've this list of slaves on up

428
00:18:47,870 --> 00:18:48,500
there

429
00:18:48,500 --> 00:18:50,870
you have T's lift this list of master

430
00:18:50,870 --> 00:18:53,450
and they can access to slave and then

431
00:18:53,450 --> 00:18:55,280
you say I tell you everything please

432
00:18:55,280 --> 00:18:57,980
build yourself so you can really do

433
00:18:57,980 --> 00:18:59,780
software engineering to design your

434
00:18:59,780 --> 00:19:03,170
hardware with this approach and yeah

435
00:19:03,170 --> 00:19:05,120
since this is all for this presentation

436
00:19:05,120 --> 00:19:08,450
about spinning idea you can find

437
00:19:08,450 --> 00:19:11,210
everything open source in this

438
00:19:11,210 --> 00:19:13,790
repository there is unlike the combat we

439
00:19:13,790 --> 00:19:18,410
can't start with a good I think there is

440
00:19:18,410 --> 00:19:20,150
I'm ready to use project to help you if

441
00:19:20,150 --> 00:19:21,620
you want to try it and some

442
00:19:21,620 --> 00:19:22,850
communication channels or do not

443
00:19:22,850 --> 00:19:25,310
hesitate to to comment them if you have

444
00:19:25,310 --> 00:19:27,050
some issue to start up with tools or

445
00:19:27,050 --> 00:19:32,360
anything so this is all thank you

446
00:19:32,360 --> 00:19:42,120
[Applause]

447
00:19:42,120 --> 00:19:46,840
sorry to compare it with chisel so

448
00:19:46,840 --> 00:19:48,850
basically I stopped to work with hazel

449
00:19:48,850 --> 00:19:51,130
I was happy some months with it that

450
00:19:51,130 --> 00:19:53,020
plus two years ago and or two years ago

451
00:19:53,020 --> 00:19:55,960
but basically it appeared that there was

452
00:19:55,960 --> 00:19:59,200
a lot of issue with it and like for

453
00:19:59,200 --> 00:20:01,419
example clog the main support which was

454
00:20:01,419 --> 00:20:05,530
very badly done and there was regularly

455
00:20:05,530 --> 00:20:10,630
some issue about it but no no but there

456
00:20:10,630 --> 00:20:14,110
was no move on the kaiser stuff so you

457
00:20:14,110 --> 00:20:16,090
can also find a list of things that I

458
00:20:16,090 --> 00:20:18,760
don't agree with hazel in the design on

459
00:20:18,760 --> 00:20:21,429
the FAQ section of the an idea comment

460
00:20:21,429 --> 00:20:27,070
section and yeah maybe hazel is much

461
00:20:27,070 --> 00:20:29,049
more about a very large implementation

462
00:20:29,049 --> 00:20:31,059
of the idea has been like that it's much

463
00:20:31,059 --> 00:20:32,860
more about a V actually an intimate

464
00:20:32,860 --> 00:20:34,600
action of the idea which is with check

465
00:20:34,600 --> 00:20:39,429
more things and more stuff but really it

466
00:20:39,429 --> 00:20:41,140
look like interface is the same but

467
00:20:41,140 --> 00:20:44,230
really there is many differents behind

468
00:20:44,230 --> 00:20:50,880
the same like I have to check the FAQ

469
00:21:11,409 --> 00:21:19,190
so basically yeah how to to map some

470
00:21:19,190 --> 00:21:21,080
puce color into hardware it's your

471
00:21:21,080 --> 00:21:23,450
question like using hash map and things

472
00:21:23,450 --> 00:21:33,379
like that so you if you can writing

473
00:21:33,379 --> 00:21:36,110
software and make it able to work in

474
00:21:36,110 --> 00:21:38,330
hardware and software no it's not the

475
00:21:38,330 --> 00:21:40,850
case so spinach Dell is not an actually

476
00:21:40,850 --> 00:21:42,200
as approach it's really an ethyl

477
00:21:42,200 --> 00:21:44,119
approach where you use color as an

478
00:21:44,119 --> 00:21:45,980
elaboration tool to design what she want

479
00:21:45,980 --> 00:21:47,659
by saying among this register Monte's

480
00:21:47,659 --> 00:21:49,879
register i want to do the separation but

481
00:21:49,879 --> 00:21:51,950
Spinelli is not about translating and

482
00:21:51,950 --> 00:21:58,190
algorithms into other it's much more

483
00:21:58,190 --> 00:22:00,740
about saying what you want explicitly

484
00:22:00,740 --> 00:22:02,929
and you get it but you can use a sh map

485
00:22:02,929 --> 00:22:04,610
to do the version of your hardware you

486
00:22:04,610 --> 00:22:05,990
can use all these kind of things like

487
00:22:05,990 --> 00:22:08,029
dynamic list and but has an elaboration

488
00:22:08,029 --> 00:22:10,249
tool like a for generating vehicle or if

489
00:22:10,249 --> 00:22:14,470
the generate in VHDL this kind of things

490
00:22:22,560 --> 00:22:25,260
yeah so how I specify a clock for a

491
00:22:25,260 --> 00:22:27,210
flip-flop though manically it's much

492
00:22:27,210 --> 00:22:29,640
better than uvx debt because it is

493
00:22:29,640 --> 00:22:31,980
implicit so you can define area of your

494
00:22:31,980 --> 00:22:33,600
design which window the effect of a

495
00:22:33,600 --> 00:22:35,460
given clock and reset configuration and

496
00:22:35,460 --> 00:22:38,100
then everything inside it all sub

497
00:22:38,100 --> 00:22:41,300
components will automatically get it so

498
00:22:41,300 --> 00:22:44,130
yeah I had a slide but haven't the time

499
00:22:44,130 --> 00:23:04,950
to talk about it so whichever message

500
00:23:04,950 --> 00:23:07,050
you get when it doesn't work so

501
00:23:07,050 --> 00:23:08,490
medically you have much more confidence

502
00:23:08,490 --> 00:23:11,940
when you hear it spinning like the not

503
00:23:11,940 --> 00:23:13,830
least you have much more confidence than

504
00:23:13,830 --> 00:23:14,820
it's working

505
00:23:14,820 --> 00:23:18,480
physically in for real than handwritten

506
00:23:18,480 --> 00:23:22,020
VHDL one because finally I do a lot more

507
00:23:22,020 --> 00:23:26,790
check by default than seen we do a lot

508
00:23:26,790 --> 00:23:29,730
of check druggies and like for you don't

509
00:23:29,730 --> 00:23:30,840
believe check that you don't have come

510
00:23:30,840 --> 00:23:32,220
into a loop see we check that you don't

511
00:23:32,220 --> 00:23:36,180
have with mismatch these kind of things

512
00:23:36,180 --> 00:23:39,120
and if you have an error it will print

513
00:23:39,120 --> 00:23:41,010
you wherein you're spinning the

514
00:23:41,010 --> 00:23:43,680
description there is something wrong it

515
00:23:43,680 --> 00:23:45,420
will give you the name of the sinner so

516
00:23:45,420 --> 00:23:50,010
really it's maybe even less Easy's and

517
00:23:50,010 --> 00:23:52,650
the idea to remove bugs from a spanish

518
00:23:52,650 --> 00:23:57,180
their description because yeah i made so

519
00:23:57,180 --> 00:24:00,240
it check a lot of much more things and i

520
00:24:00,240 --> 00:24:02,730
put a lot of intention to have nice

521
00:24:02,730 --> 00:24:03,540
pretty

522
00:24:03,540 --> 00:24:05,670
aramis edge with the print stack of the

523
00:24:05,670 --> 00:24:07,080
execution of spain a little description

524
00:24:07,080 --> 00:24:09,270
and these kind of things so it's not

525
00:24:09,270 --> 00:24:11,610
really messy it all right

526
00:24:11,610 --> 00:24:13,860
have to try to give like to get a good

527
00:24:13,860 --> 00:24:16,459
idea of it

528
00:24:20,650 --> 00:24:26,470
I can some of the questions be put in

529
00:24:26,470 --> 00:24:32,200
these discussion session uh you know try

530
00:24:32,200 --> 00:24:35,430
to be quick question

531
00:24:57,880 --> 00:24:59,920
so there will be three process limited

532
00:24:59,920 --> 00:25:02,290
from it exactly like they're exactly the

533
00:25:02,290 --> 00:25:03,420
same

534
00:25:03,420 --> 00:25:15,720
yeah sorry Oh spending like that all is

535
00:25:15,720 --> 00:25:17,770
how did this thing is in between

536
00:25:17,770 --> 00:25:19,690
blocking and not blocking so yeah in

537
00:25:19,690 --> 00:25:22,030
Spain like there by default it is I

538
00:25:22,030 --> 00:25:24,880
don't know which is one but it is like

539
00:25:24,880 --> 00:25:28,060
the default but like this one here yeah

540
00:25:28,060 --> 00:25:30,760
you can do the other one by using

541
00:25:30,760 --> 00:25:44,260
another syntax - so how the mission is

542
00:25:44,260 --> 00:25:46,300
translating to react they're exactly the

543
00:25:46,300 --> 00:25:50,020
same sign in VHDL so then if you want to

544
00:25:50,020 --> 00:25:51,850
use I speak here dedicated blocks and

545
00:25:51,850 --> 00:25:54,220
things like that you can associate a

546
00:25:54,220 --> 00:25:57,460
black box or you can try to write it by

547
00:25:57,460 --> 00:25:59,110
the way that the synthesis tool we in

548
00:25:59,110 --> 00:26:01,060
the stand it's that but there is no

549
00:26:01,060 --> 00:26:03,310
magic between in the translations oh

550
00:26:03,310 --> 00:26:06,179
it's one to one

551
00:26:16,950 --> 00:26:21,850
so if you to about from a rebuking

552
00:26:21,850 --> 00:26:26,289
between the input spiny tail and outputs

553
00:26:26,289 --> 00:26:28,299
there is no formal verification about it

554
00:26:28,299 --> 00:26:29,770
because basically it's not work yet

555
00:26:29,770 --> 00:26:31,539
because you are verifying the outputs at

556
00:26:31,539 --> 00:26:33,100
least you are not doing your

557
00:26:33,100 --> 00:26:35,650
verification stuff on this binary the

558
00:26:35,650 --> 00:26:38,230
description you are verifying the exams

559
00:26:38,230 --> 00:26:42,700
related files so it's why I don't really

560
00:26:42,700 --> 00:26:45,460
care about it being formal but I have a

561
00:26:45,460 --> 00:26:46,870
good confidence in the translation

562
00:26:46,870 --> 00:26:49,049
process

