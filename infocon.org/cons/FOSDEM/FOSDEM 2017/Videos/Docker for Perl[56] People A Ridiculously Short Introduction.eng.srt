1
00:00:00,030 --> 00:00:03,170
okay good day

2
00:00:04,480 --> 00:00:10,209
so I would like to talk about docker the

3
00:00:10,209 --> 00:00:13,150
use of docker for Perl people some

4
00:00:13,150 --> 00:00:16,779
people some people know me as LJ of anak

5
00:00:16,779 --> 00:00:19,029
set em on I see on Twitter or whatever

6
00:00:19,029 --> 00:00:21,279
I'm also the different manager we have

7
00:00:21,279 --> 00:00:23,020
kind of a schedule problem last time so

8
00:00:23,020 --> 00:00:25,090
that's why last minute so that's why I'm

9
00:00:25,090 --> 00:00:29,020
here a little bit me I work at the

10
00:00:29,020 --> 00:00:32,469
information the competence center of

11
00:00:32,469 --> 00:00:34,000
information security at University of

12
00:00:34,000 --> 00:00:36,580
Leuven and we do stuff related to

13
00:00:36,580 --> 00:00:40,510
security to identity to authentication

14
00:00:40,510 --> 00:00:43,660
authorization and stuff like that so I

15
00:00:43,660 --> 00:00:45,700
would like to start with a with a kind

16
00:00:45,700 --> 00:00:48,370
of controversy question so what kind of

17
00:00:48,370 --> 00:00:52,210
problem does docker solve for pearl and

18
00:00:52,210 --> 00:00:55,329
a typical reaction would be what problem

19
00:00:55,329 --> 00:00:58,300
do we have a problem and it's true that

20
00:00:58,300 --> 00:01:00,610
imperil like we we are cheap and for

21
00:01:00,610 --> 00:01:02,739
like Asia's you know to be for people

22
00:01:02,739 --> 00:01:06,399
with bird beard web bones we have a very

23
00:01:06,399 --> 00:01:09,999
nice testing culture we have very nice

24
00:01:09,999 --> 00:01:12,369
community we are very great our writing

25
00:01:12,369 --> 00:01:15,009
tools so it's very easy to because in

26
00:01:15,009 --> 00:01:16,509
your in your parallel environment

27
00:01:16,509 --> 00:01:18,880
because it's very nice but if we

28
00:01:18,880 --> 00:01:21,090
rephrase the question are all different

29
00:01:21,090 --> 00:01:24,249
differently we may get another answer so

30
00:01:24,249 --> 00:01:26,590
if we if we ask the question how do we

31
00:01:26,590 --> 00:01:30,399
deploy our programs now in 2017 we get a

32
00:01:30,399 --> 00:01:31,869
lot of different answers you know

33
00:01:31,869 --> 00:01:33,219
there's more than one way to do it

34
00:01:33,219 --> 00:01:35,649
some people use cPanel safe in our

35
00:01:35,649 --> 00:01:37,749
remote machine hope no one's here works

36
00:01:37,749 --> 00:01:39,729
like that but I've everywhere I've work

37
00:01:39,729 --> 00:01:40,869
I've seen people doing that on

38
00:01:40,869 --> 00:01:41,740
production machines

39
00:01:41,740 --> 00:01:45,490
some people use CUDA brew of pearl brew

40
00:01:45,490 --> 00:01:48,939
to use their own peril and not use

41
00:01:48,939 --> 00:01:49,659
system pearl

42
00:01:49,659 --> 00:01:51,729
some people use cotton to pin their

43
00:01:51,729 --> 00:01:55,719
dependencies some people use locally fat

44
00:01:55,719 --> 00:01:57,929
packer very nice if your application is

45
00:01:57,929 --> 00:02:03,069
pro only so you can just make a one file

46
00:02:03,069 --> 00:02:04,450
so you don't need to have this

47
00:02:04,450 --> 00:02:07,569
dependency tree mini sea pound dog Sipan

48
00:02:07,569 --> 00:02:09,580
some people just create an archive and

49
00:02:09,580 --> 00:02:12,549
put it on the server some more sysadmin

50
00:02:12,549 --> 00:02:15,459
type people will create an OS dependent

51
00:02:15,459 --> 00:02:18,010
package like a debian package of an RPM

52
00:02:18,010 --> 00:02:19,870
the same kind of people will probably

53
00:02:19,870 --> 00:02:21,760
use a configuration management tool like

54
00:02:21,760 --> 00:02:24,430
puppet like salt like rigs like Sparrow

55
00:02:24,430 --> 00:02:28,420
do and and if we are honest with

56
00:02:28,420 --> 00:02:33,069
ourselves we be must acknowledge that it

57
00:02:33,069 --> 00:02:35,470
can be a little fragile at times when

58
00:02:35,470 --> 00:02:36,879
when you're in full control of your

59
00:02:36,879 --> 00:02:39,280
environment they're very nice tools but

60
00:02:39,280 --> 00:02:40,540
when you're it kind of a bigger

61
00:02:40,540 --> 00:02:43,079
environment where it's a separation of

62
00:02:43,079 --> 00:02:45,220
responsibilities we have some people

63
00:02:45,220 --> 00:02:47,620
like the Linux odd means being

64
00:02:47,620 --> 00:02:50,200
responsible for the US and updates you

65
00:02:50,200 --> 00:02:52,209
have application people being

66
00:02:52,209 --> 00:02:54,129
responsible for the application maybe

67
00:02:54,129 --> 00:02:55,780
they will do an update and your

68
00:02:55,780 --> 00:02:58,450
application is not well tested and it

69
00:02:58,450 --> 00:03:01,540
will break if you are working on the

70
00:03:01,540 --> 00:03:03,989
cloud when you need a really fast switch

71
00:03:03,989 --> 00:03:06,910
of environment it compile and so will

72
00:03:06,910 --> 00:03:08,799
take a long time so it's not always the

73
00:03:08,799 --> 00:03:12,700
best solution so if we if we look at

74
00:03:12,700 --> 00:03:14,709
other examples we if we look over the

75
00:03:14,709 --> 00:03:16,780
fence into other communities that kind

76
00:03:16,780 --> 00:03:19,030
of work around this problem we see that

77
00:03:19,030 --> 00:03:21,519
it's not that easy if we take Java by

78
00:03:21,519 --> 00:03:23,919
example a job is great in this regard

79
00:03:23,919 --> 00:03:26,380
because in Java you put everything in a

80
00:03:26,380 --> 00:03:28,510
jar you'd put the jar in the machine you

81
00:03:28,510 --> 00:03:31,120
feed it to the JVM and it runs it will

82
00:03:31,120 --> 00:03:33,099
load probably 9 or 50,000 classes

83
00:03:33,099 --> 00:03:35,230
without exaggeration but it will run

84
00:03:35,230 --> 00:03:38,560
it's great but even then you you will

85
00:03:38,560 --> 00:03:40,959
meet glass pot hell when you have the

86
00:03:40,959 --> 00:03:42,790
same library with two version on

87
00:03:42,790 --> 00:03:45,069
different paths your application will

88
00:03:45,069 --> 00:03:46,690
run but it will explode on the way so

89
00:03:46,690 --> 00:03:50,049
even then if you go to go also a very

90
00:03:50,049 --> 00:03:52,780
nice language when you do in a static

91
00:03:52,780 --> 00:03:55,180
compilation of your program when you add

92
00:03:55,180 --> 00:03:57,220
all the dependencies to your binary you

93
00:03:57,220 --> 00:03:58,810
take the small file you put it on the

94
00:03:58,810 --> 00:04:00,669
server you run it it's fantastic it's

95
00:04:00,669 --> 00:04:03,489
fast it's not VM but even then if you

96
00:04:03,489 --> 00:04:05,169
have a security problem in one of your

97
00:04:05,169 --> 00:04:07,540
libraries we need to track down all

98
00:04:07,540 --> 00:04:09,250
those smile binaries everywhere and

99
00:04:09,250 --> 00:04:10,690
that's not easy if you don't have the

100
00:04:10,690 --> 00:04:13,660
infrastructure for it because programs

101
00:04:13,660 --> 00:04:15,910
tend to I'd leave the programmer I've

102
00:04:15,910 --> 00:04:17,560
heard from some colleagues where I work

103
00:04:17,560 --> 00:04:19,329
like 10 years ago they still using a

104
00:04:19,329 --> 00:04:21,039
proof of concept I wrote and the

105
00:04:21,039 --> 00:04:22,630
programs are found this is a proof of

106
00:04:22,630 --> 00:04:24,340
concept in capital they still use it I

107
00:04:24,340 --> 00:04:26,140
don't think they even have the source so

108
00:04:26,140 --> 00:04:30,070
that so that's a little difficult so if

109
00:04:30,070 --> 00:04:31,439
we look at at grade

110
00:04:31,439 --> 00:04:33,749
of all the communities like Java and go

111
00:04:33,749 --> 00:04:35,519
we realize that deploying is always half

112
00:04:35,519 --> 00:04:37,619
of the question and the real question in

113
00:04:37,619 --> 00:04:40,649
my eyes is how do we integrate with an

114
00:04:40,649 --> 00:04:43,259
ecosystem that is no longer language

115
00:04:43,259 --> 00:04:46,439
centric and and and what do I mean by

116
00:04:46,439 --> 00:04:48,239
that I mean that the future is API

117
00:04:48,239 --> 00:04:49,739
centric so you don't care that much

118
00:04:49,739 --> 00:04:51,629
about the language you care about the

119
00:04:51,629 --> 00:04:53,729
API you care about integrating stuff

120
00:04:53,729 --> 00:04:57,629
together and even more I could say that

121
00:04:57,629 --> 00:04:59,999
the present already is if you're working

122
00:04:59,999 --> 00:05:03,179
with with within a develop teams when

123
00:05:03,179 --> 00:05:04,709
you have a lot of people from different

124
00:05:04,709 --> 00:05:07,349
backgrounds you have operation people

125
00:05:07,349 --> 00:05:08,699
these admin people that they have their

126
00:05:08,699 --> 00:05:10,139
own tooling you have developers that

127
00:05:10,139 --> 00:05:12,479
maybe have their own tooling and if you

128
00:05:12,479 --> 00:05:13,619
if you work with people of different

129
00:05:13,619 --> 00:05:14,969
background that means different

130
00:05:14,969 --> 00:05:17,429
languages different frameworks so you're

131
00:05:17,429 --> 00:05:20,069
already mixing store there if you work

132
00:05:20,069 --> 00:05:21,929
with a cloud when it's very important to

133
00:05:21,929 --> 00:05:23,279
be able to switch from one cloud

134
00:05:23,279 --> 00:05:25,019
provider to the other when it's very

135
00:05:25,019 --> 00:05:27,959
important to be able to bring your

136
00:05:27,959 --> 00:05:30,179
instances up it's very important that

137
00:05:30,179 --> 00:05:32,579
you have the best tool for the job and

138
00:05:32,579 --> 00:05:36,209
this is a good thing because it's very

139
00:05:36,209 --> 00:05:39,149
possible nowadays that the the best tool

140
00:05:39,149 --> 00:05:39,659
for the job

141
00:05:39,659 --> 00:05:41,729
is not reaching peril it could be

142
00:05:41,729 --> 00:05:43,860
written in Java and go and Robi doesn't

143
00:05:43,860 --> 00:05:46,289
matter because you still get the best

144
00:05:46,289 --> 00:05:47,219
tool for the job

145
00:05:47,219 --> 00:05:50,639
so you can integrate stuff together well

146
00:05:50,639 --> 00:05:54,240
back to docker a typical question is is

147
00:05:54,240 --> 00:05:56,639
it here to stay is it a hype because if

148
00:05:56,639 --> 00:05:58,499
you've been around for some years and IT

149
00:05:58,499 --> 00:06:00,929
you know things come these go these come

150
00:06:00,929 --> 00:06:03,479
back slightly different so that's a very

151
00:06:03,479 --> 00:06:06,389
good question and the same people I

152
00:06:06,389 --> 00:06:08,399
would say we had see them for like 20

153
00:06:08,399 --> 00:06:09,869
years they would say yeah but we already

154
00:06:09,869 --> 00:06:13,860
have VM what's new so a VM a virtual

155
00:06:13,860 --> 00:06:15,689
machine the idea behind it is to fully

156
00:06:15,689 --> 00:06:18,149
integrate a discrete environment to

157
00:06:18,149 --> 00:06:21,079
fully to have a full operating system

158
00:06:21,079 --> 00:06:23,309
that also means that you need to fully

159
00:06:23,309 --> 00:06:25,949
administer an operating system like you

160
00:06:25,949 --> 00:06:28,050
used to have one big physical machine

161
00:06:28,050 --> 00:06:29,459
and now you have one physical machine

162
00:06:29,459 --> 00:06:32,309
with team VMs we need a lot more work to

163
00:06:32,309 --> 00:06:34,619
keep that up to date to give it secure

164
00:06:34,619 --> 00:06:36,919
to create users and so on

165
00:06:36,919 --> 00:06:40,829
and most importantly a VM and a

166
00:06:40,829 --> 00:06:42,959
container are not at odds they can work

167
00:06:42,959 --> 00:06:44,860
together is a very valid is near

168
00:06:44,860 --> 00:06:47,110
to have a VM and to run containers on

169
00:06:47,110 --> 00:06:49,780
that maybe because you use under eyes

170
00:06:49,780 --> 00:06:52,270
around a VM you can deploy them and then

171
00:06:52,270 --> 00:06:54,159
provision them very quickly of me

172
00:06:54,159 --> 00:06:55,690
because of security you don't want your

173
00:06:55,690 --> 00:06:57,639
containers to share the same kernel a

174
00:06:57,639 --> 00:07:00,970
lot of valid reasons to do that well

175
00:07:00,970 --> 00:07:03,250
after this introduction I would like to

176
00:07:03,250 --> 00:07:04,449
answer the question what is docker

177
00:07:04,449 --> 00:07:05,949
because I'm talking about dakka dakka

178
00:07:05,949 --> 00:07:08,080
dakka but I haven't explained it yet so

179
00:07:08,080 --> 00:07:09,909
if I'm forced to summarize it in one

180
00:07:09,909 --> 00:07:12,729
word its I said it already it's a

181
00:07:12,729 --> 00:07:15,310
container and the same people I said

182
00:07:15,310 --> 00:07:17,500
yeah Sipan JVM they would take container

183
00:07:17,500 --> 00:07:20,289
we've been doing that forever me myself

184
00:07:20,289 --> 00:07:22,120
I've been doing that 2005 on Solaris

185
00:07:22,120 --> 00:07:23,229
sorry stones

186
00:07:23,229 --> 00:07:27,129
I probably migrated hundreds of physical

187
00:07:27,129 --> 00:07:28,870
machines to Solaris zones it was found

188
00:07:28,870 --> 00:07:31,780
you RTC divest you could copy your

189
00:07:31,780 --> 00:07:33,759
container we threw it say to another

190
00:07:33,759 --> 00:07:36,069
machine it was a lot of fun people

191
00:07:36,069 --> 00:07:38,110
working on on IX probably 10 years

192
00:07:38,110 --> 00:07:40,930
before that but it's not the same thing

193
00:07:40,930 --> 00:07:43,719
so what's different again is the API so

194
00:07:43,719 --> 00:07:46,090
docker give you an API to integrate it

195
00:07:46,090 --> 00:07:49,539
with other stuff so if we redefine where

196
00:07:49,539 --> 00:07:52,180
the container is nowadays of course it's

197
00:07:52,180 --> 00:07:54,190
an application itself contain that's

198
00:07:54,190 --> 00:07:56,050
kind of the definition of a container

199
00:07:56,050 --> 00:07:58,150
but the most important part is it's

200
00:07:58,150 --> 00:08:00,909
portable so you work at your at your

201
00:08:00,909 --> 00:08:03,729
workstation on the same container on the

202
00:08:03,729 --> 00:08:05,830
same binaries as on the production

203
00:08:05,830 --> 00:08:08,199
server as the same thing that the

204
00:08:08,199 --> 00:08:10,389
customer has so it's portable you move

205
00:08:10,389 --> 00:08:12,370
stuff around and you move the same thing

206
00:08:12,370 --> 00:08:14,129
you do you don't need to recreate

207
00:08:14,129 --> 00:08:16,120
everything and then test for the

208
00:08:16,120 --> 00:08:20,590
differences so container because of this

209
00:08:20,590 --> 00:08:23,319
have a really huge impact on how we

210
00:08:23,319 --> 00:08:26,199
develop how we distribute and how we run

211
00:08:26,199 --> 00:08:29,650
software so as a developer it's really

212
00:08:29,650 --> 00:08:32,679
it's priceless to be able to develop on

213
00:08:32,679 --> 00:08:34,630
the same environment ask the production

214
00:08:34,630 --> 00:08:36,880
machine because that's always at the

215
00:08:36,880 --> 00:08:38,229
battle between these admins and

216
00:08:38,229 --> 00:08:41,320
developers yeah it runs on my laptop it

217
00:08:41,320 --> 00:08:44,049
doesn't run on the on the only

218
00:08:44,049 --> 00:08:45,430
production server which is so slow

219
00:08:45,430 --> 00:08:47,529
whatever so you you will develop

220
00:08:47,529 --> 00:08:49,660
differently because you can have the

221
00:08:49,660 --> 00:08:52,060
full stack all the different services on

222
00:08:52,060 --> 00:08:54,910
your laptop you can distribute it within

223
00:08:54,910 --> 00:08:56,890
your company test quality production you

224
00:08:56,890 --> 00:08:59,080
just move the same thing on

225
00:08:59,080 --> 00:09:01,450
new environment you can you can push it

226
00:09:01,450 --> 00:09:03,820
to a client exactly the same thing as

227
00:09:03,820 --> 00:09:05,650
you are having it on your laptop and

228
00:09:05,650 --> 00:09:08,140
it's also a very standard way to run

229
00:09:08,140 --> 00:09:10,750
software you don't care they use Suzy or

230
00:09:10,750 --> 00:09:12,970
Fedora of Debian of a boom - you just

231
00:09:12,970 --> 00:09:13,540
don't care

232
00:09:13,540 --> 00:09:15,580
maybe they run they run it on the big

233
00:09:15,580 --> 00:09:17,350
iron in the premises

234
00:09:17,350 --> 00:09:19,930
maybe the usership cloud provider you

235
00:09:19,930 --> 00:09:22,180
just don't care this is a standard way

236
00:09:22,180 --> 00:09:24,910
to do it so this is a visualization or

237
00:09:24,910 --> 00:09:27,640
how a container looks like it took me a

238
00:09:27,640 --> 00:09:29,680
while to get this because it's kind of

239
00:09:29,680 --> 00:09:32,320
confusing what a container really is and

240
00:09:32,320 --> 00:09:35,080
the most important part is the image in

241
00:09:35,080 --> 00:09:36,970
an image you can it can be compared to

242
00:09:36,970 --> 00:09:39,930
an ISO a DVD a live Linux distribution

243
00:09:39,930 --> 00:09:42,640
where you put all your libraries of your

244
00:09:42,640 --> 00:09:47,020
or your binaries and when you bring that

245
00:09:47,020 --> 00:09:49,120
up you always get a fresh environment

246
00:09:49,120 --> 00:09:52,630
every chain change you make will be lost

247
00:09:52,630 --> 00:09:54,850
when you restart your container so it's

248
00:09:54,850 --> 00:09:59,410
kind of a reach only environment but you

249
00:09:59,410 --> 00:10:01,360
can change on the fly when you restart

250
00:10:01,360 --> 00:10:03,400
it you lose it that's idea you always

251
00:10:03,400 --> 00:10:05,800
start from a fresh environment then you

252
00:10:05,800 --> 00:10:08,200
need to have some runtime information so

253
00:10:08,200 --> 00:10:10,780
something that you need to have a useful

254
00:10:10,780 --> 00:10:13,750
container maybe it needs some Network

255
00:10:13,750 --> 00:10:16,150
addresses some ports maybe need some

256
00:10:16,150 --> 00:10:18,130
access to enough to or facets and mount

257
00:10:18,130 --> 00:10:21,940
points etc environments whatever and and

258
00:10:21,940 --> 00:10:23,680
most important for your application is

259
00:10:23,680 --> 00:10:26,350
the persistent data that's something you

260
00:10:26,350 --> 00:10:28,360
don't put in the image because the image

261
00:10:28,360 --> 00:10:29,650
is just cheap you can put it on the

262
00:10:29,650 --> 00:10:32,230
internet you don't care but your your

263
00:10:32,230 --> 00:10:35,170
configuration your secrets your business

264
00:10:35,170 --> 00:10:37,150
data that's outside of the container and

265
00:10:37,150 --> 00:10:39,520
the container has access to that so

266
00:10:39,520 --> 00:10:43,180
that's those are the big three parts and

267
00:10:43,180 --> 00:10:47,050
then if we look at a dish again we

268
00:10:47,050 --> 00:10:49,180
realize that we still need tools to

269
00:10:49,180 --> 00:10:51,370
manage the wrong time info the

270
00:10:51,370 --> 00:10:53,950
configuration the image creation and

271
00:10:53,950 --> 00:10:55,540
there are probably tools that we already

272
00:10:55,540 --> 00:10:58,450
talked about and in this case even sip

273
00:10:58,450 --> 00:11:00,160
and on the server because you're working

274
00:11:00,160 --> 00:11:03,460
locally it's okay an undercurrent in

275
00:11:03,460 --> 00:11:06,250
each file is just a series of scripts of

276
00:11:06,250 --> 00:11:08,830
comments that you run after a basic

277
00:11:08,830 --> 00:11:11,140
image of an operating system you start

278
00:11:11,140 --> 00:11:13,180
with a very small down deviant

279
00:11:13,180 --> 00:11:16,240
and then you say at this at that run

280
00:11:16,240 --> 00:11:18,970
that that said but you only do it once

281
00:11:18,970 --> 00:11:21,580
and it's get a store in a kind of a

282
00:11:21,580 --> 00:11:24,280
binary format it's very easy to to have

283
00:11:24,280 --> 00:11:25,750
something very simple you don't need to

284
00:11:25,750 --> 00:11:28,000
complicate it stuff at that level so

285
00:11:28,000 --> 00:11:30,040
everything is containerized is

286
00:11:30,040 --> 00:11:32,250
everything is easy to understand and

287
00:11:32,250 --> 00:11:34,270
because of that is also easy to

288
00:11:34,270 --> 00:11:37,060
implement but if you go here we used to

289
00:11:37,060 --> 00:11:40,480
have a very big radiator a parable

290
00:11:40,480 --> 00:11:43,480
application a radio server project when

291
00:11:43,480 --> 00:11:46,630
we only who use puppet and puppet was

292
00:11:46,630 --> 00:11:48,850
the code was very complicated very big

293
00:11:48,850 --> 00:11:50,650
where a lot of tests because puppet up

294
00:11:50,650 --> 00:11:53,130
to manage users are to manage packages

295
00:11:53,130 --> 00:11:55,930
services the older they run and and and

296
00:11:55,930 --> 00:11:58,240
at the end it configure my application

297
00:11:58,240 --> 00:12:00,790
now we're a container I just don't do

298
00:12:00,790 --> 00:12:02,500
that anymore because that's in an image

299
00:12:02,500 --> 00:12:04,600
that's frozen the only thing I have to

300
00:12:04,600 --> 00:12:07,000
do have to care about my own application

301
00:12:07,000 --> 00:12:09,880
so puppet now just take files you put in

302
00:12:09,880 --> 00:12:12,220
a directory take a template inject some

303
00:12:12,220 --> 00:12:14,050
secret and that's it so my code is very

304
00:12:14,050 --> 00:12:15,790
easy to read very easy to understand

305
00:12:15,790 --> 00:12:17,290
because I don't have to look at the full

306
00:12:17,290 --> 00:12:17,680
picture

307
00:12:17,680 --> 00:12:22,020
all we have to look at my application so

308
00:12:22,020 --> 00:12:25,630
we dad so what does doctor bring to the

309
00:12:25,630 --> 00:12:28,150
table kind of summary what I said is

310
00:12:28,150 --> 00:12:29,530
efficient because there's only one

311
00:12:29,530 --> 00:12:31,750
process running is running on the kernel

312
00:12:31,750 --> 00:12:34,900
so the kernel Marian talked about it has

313
00:12:34,900 --> 00:12:36,610
some C group to give you some basic

314
00:12:36,610 --> 00:12:38,950
security but it's on the same kernel

315
00:12:38,950 --> 00:12:41,680
it's not it's not about emulation also

316
00:12:41,680 --> 00:12:43,150
the way of working is very efficient

317
00:12:43,150 --> 00:12:44,830
because you are working on the real

318
00:12:44,830 --> 00:12:47,020
thing so you save a lot of time do you

319
00:12:47,020 --> 00:12:49,240
don't go back and forth with with the

320
00:12:49,240 --> 00:12:51,190
season means talking about what's

321
00:12:51,190 --> 00:12:53,290
difference it's portable

322
00:12:53,290 --> 00:12:55,000
like I said you can distribute your your

323
00:12:55,000 --> 00:12:58,150
images and it's also embeddable I cannot

324
00:12:58,150 --> 00:13:01,240
read that so we'll say embeddable that

325
00:13:01,240 --> 00:13:04,090
means that you as a pro guy of girl you

326
00:13:04,090 --> 00:13:05,980
can create a base pearl image have a

327
00:13:05,980 --> 00:13:07,900
very up-to-date pearl very secure pearl

328
00:13:07,900 --> 00:13:10,840
you can provide a base set of images of

329
00:13:10,840 --> 00:13:13,750
modules excuse me and that you vetted

330
00:13:13,750 --> 00:13:15,670
the version you tested them and then

331
00:13:15,670 --> 00:13:17,860
someone can come take your image in your

332
00:13:17,860 --> 00:13:19,450
company of someone from the internet and

333
00:13:19,450 --> 00:13:21,280
just care about their application they

334
00:13:21,280 --> 00:13:23,320
just add a layer on your image they can

335
00:13:23,320 --> 00:13:25,600
the image for their application so

336
00:13:25,600 --> 00:13:27,070
you're responsible

337
00:13:27,070 --> 00:13:28,390
for the purl part and they are only

338
00:13:28,390 --> 00:13:30,280
responsible for the application so it's

339
00:13:30,280 --> 00:13:32,620
it's very easy to have a secure baseline

340
00:13:32,620 --> 00:13:35,050
that you can update and they don't meet

341
00:13:35,050 --> 00:13:38,410
the older knowledge for that so only

342
00:13:38,410 --> 00:13:40,480
have five minutes so I will warn you so

343
00:13:40,480 --> 00:13:42,430
I don't want to sell you stuff I don't

344
00:13:42,430 --> 00:13:45,370
want to be only positive so I know do

345
00:13:45,370 --> 00:13:47,200
you know the first rule about docker I

346
00:13:47,200 --> 00:13:48,070
know I know

347
00:13:48,070 --> 00:13:50,770
someone here so you won't shut up about

348
00:13:50,770 --> 00:13:53,470
docker so it's okay to give a

349
00:13:53,470 --> 00:13:55,180
presentation but don't do it at the

350
00:13:55,180 --> 00:13:56,890
dinner table because if you get very

351
00:13:56,890 --> 00:13:58,240
annoying I've been there so don't do

352
00:13:58,240 --> 00:13:58,660
that

353
00:13:58,660 --> 00:14:01,810
so most seriously when you use docker

354
00:14:01,810 --> 00:14:04,180
you need to test test test it's not as

355
00:14:04,180 --> 00:14:06,520
straightforward as look yes things are

356
00:14:06,520 --> 00:14:08,950
easier thing as simpler but a lot of

357
00:14:08,950 --> 00:14:11,410
corner cases you need to ask yourself

358
00:14:11,410 --> 00:14:13,030
some very good questions that you

359
00:14:13,030 --> 00:14:14,860
something that you always need to do but

360
00:14:14,860 --> 00:14:17,050
now you're forced to do it you need to

361
00:14:17,050 --> 00:14:19,650
ask yourself is my application

362
00:14:19,650 --> 00:14:23,110
horizontally scalable if the answer is

363
00:14:23,110 --> 00:14:25,840
no you need to really take sure your

364
00:14:25,840 --> 00:14:28,750
application or you just don't bother

365
00:14:28,750 --> 00:14:32,380
with docker because docker uses the

366
00:14:32,380 --> 00:14:35,170
concept of cattle the doctor doesn't

367
00:14:35,170 --> 00:14:36,250
care about the service doesn't care

368
00:14:36,250 --> 00:14:38,200
about your your container if you have a

369
00:14:38,200 --> 00:14:40,000
reduce problem you just pop up some new

370
00:14:40,000 --> 00:14:43,300
one so it's if your application is bound

371
00:14:43,300 --> 00:14:45,700
by CPU memory maybe that's not a good

372
00:14:45,700 --> 00:14:48,550
solution issue application performance

373
00:14:48,550 --> 00:14:51,280
in docker I already said it's very

374
00:14:51,280 --> 00:14:53,260
efficient but there are some trade-off

375
00:14:53,260 --> 00:14:55,330
on the level of networking on the level

376
00:14:55,330 --> 00:14:59,440
of disk i/o and because if your

377
00:14:59,440 --> 00:15:01,330
application is horizontally scalable

378
00:15:01,330 --> 00:15:03,970
it's not important but still you need to

379
00:15:03,970 --> 00:15:05,530
test you need to make sure that you make

380
00:15:05,530 --> 00:15:07,930
the right choices because on network

381
00:15:07,930 --> 00:15:09,550
there there are some implications on

382
00:15:09,550 --> 00:15:11,920
security on on flexibility so that

383
00:15:11,920 --> 00:15:14,170
choices that you need to make and you

384
00:15:14,170 --> 00:15:15,610
make sure that you make these choices

385
00:15:15,610 --> 00:15:19,270
and you just don't use the default of

386
00:15:19,270 --> 00:15:21,190
your distribution because they it's just

387
00:15:21,190 --> 00:15:23,950
a very generic setup this is the most

388
00:15:23,950 --> 00:15:26,770
important thing I would say today docker

389
00:15:26,770 --> 00:15:29,290
is not a security solution for most

390
00:15:29,290 --> 00:15:31,960
people that work with docker they think

391
00:15:31,960 --> 00:15:34,870
that is you give you a very dangerous

392
00:15:34,870 --> 00:15:37,630
false sense of security because you

393
00:15:37,630 --> 00:15:39,610
think it's containerized I'm safe you're

394
00:15:39,610 --> 00:15:40,570
not

395
00:15:40,570 --> 00:15:42,880
you need to follow best practices we

396
00:15:42,880 --> 00:15:45,130
need to follow common-sense you need to

397
00:15:45,130 --> 00:15:46,930
test you need to make your application

398
00:15:46,930 --> 00:15:49,840
update of course it's an extra layer of

399
00:15:49,840 --> 00:15:51,280
indirection there's a good thing but

400
00:15:51,280 --> 00:15:52,810
it's not enough so if you get into

401
00:15:52,810 --> 00:15:55,510
docker most books mode most stocks don't

402
00:15:55,510 --> 00:15:57,010
go into that you need to look into that

403
00:15:57,010 --> 00:15:59,230
I don't have the time to go in detail

404
00:15:59,230 --> 00:16:01,960
but with a very base minimum effort you

405
00:16:01,960 --> 00:16:03,880
can get a very secure application but

406
00:16:03,880 --> 00:16:05,710
you need to really be proactive about

407
00:16:05,710 --> 00:16:07,990
that there's also about people with

408
00:16:07,990 --> 00:16:10,180
politics this is not a technical issue

409
00:16:10,180 --> 00:16:12,760
but most companies institutional can

410
00:16:12,760 --> 00:16:15,400
divide it operations and and and

411
00:16:15,400 --> 00:16:18,280
developers and if you start with docker

412
00:16:18,280 --> 00:16:19,870
you get a lot of people that will have

413
00:16:19,870 --> 00:16:21,670
something to say about your image you

414
00:16:21,670 --> 00:16:23,230
have a lot of chefs in the kitchen so

415
00:16:23,230 --> 00:16:25,000
you need to be ready for that - you need

416
00:16:25,000 --> 00:16:26,650
to have a good collaboration with other

417
00:16:26,650 --> 00:16:29,560
teams you need to be able to acknowledge

418
00:16:29,560 --> 00:16:32,680
input to talk about it and this also

419
00:16:32,680 --> 00:16:34,360
gives an opportunity I already talked

420
00:16:34,360 --> 00:16:37,140
about a base pearl image it's a very

421
00:16:37,140 --> 00:16:40,630
very good opportunity for a pro person

422
00:16:40,630 --> 00:16:43,390
to create a standard to may to be the

423
00:16:43,390 --> 00:16:45,790
one that is not knowledgeable about

424
00:16:45,790 --> 00:16:47,950
pearl someone that can create a baseline

425
00:16:47,950 --> 00:16:49,960
someone and then can make sure that the

426
00:16:49,960 --> 00:16:52,930
security is followed and so on I have

427
00:16:52,930 --> 00:16:56,140
some slides left but I just gonna leave

428
00:16:56,140 --> 00:16:57,910
like that so maybe if there are some

429
00:16:57,910 --> 00:17:03,010
questions I don't know I can so yeah

430
00:17:03,010 --> 00:17:05,339
what

431
00:17:05,569 --> 00:17:12,049
sorry yeah certainly happy that the idea

432
00:17:12,049 --> 00:17:14,240
behind it is to to have the real thing

433
00:17:14,240 --> 00:17:17,148
on your on your on your laptop so you

434
00:17:17,148 --> 00:17:19,609
are working on the real thing that will

435
00:17:19,609 --> 00:17:21,859
run on production so I couldn't develop

436
00:17:21,859 --> 00:17:23,839
otherwise because otherwise you will

437
00:17:23,839 --> 00:17:27,289
always trouble with discussion with it

438
00:17:27,289 --> 00:17:29,179
works on my laptop it doesn't work on

439
00:17:29,179 --> 00:17:36,889
production one minutes not in one

440
00:17:36,889 --> 00:17:39,889
minutes so I would say docker is easy

441
00:17:39,889 --> 00:17:41,509
because there's a lot of integration

442
00:17:41,509 --> 00:17:44,240
already so it did that make it easy but

443
00:17:44,240 --> 00:17:45,889
there are other good alternatives as

444
00:17:45,889 --> 00:17:48,080
well so it's I think I'm gonna regulate

445
00:17:48,080 --> 00:17:50,040
that thank you very much

446
00:17:50,040 --> 00:17:59,290
[Applause]

