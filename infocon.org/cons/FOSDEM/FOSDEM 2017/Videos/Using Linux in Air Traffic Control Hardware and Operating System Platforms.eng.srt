1
00:00:00,030 --> 00:00:03,260
so I hope you can

2
00:00:04,500 --> 00:00:09,410
you're me right no you cannot hear me

3
00:00:09,410 --> 00:00:11,639
okay so that's better I can't go away

4
00:00:11,639 --> 00:00:14,520
have you ever imagined how to use Linux

5
00:00:14,520 --> 00:00:17,670
in mission critical systems like air

6
00:00:17,670 --> 00:00:19,170
traffic control imagine you're sitting

7
00:00:19,170 --> 00:00:21,269
in a plane looking outside and probably

8
00:00:21,269 --> 00:00:23,279
you're wondering are these guys doing

9
00:00:23,279 --> 00:00:25,740
their job and maybe my code is used

10
00:00:25,740 --> 00:00:28,199
somewhere in the plane in the core

11
00:00:28,199 --> 00:00:31,109
systems for air traffic control my name

12
00:00:31,109 --> 00:00:32,189
is Gayle Hough singing I'm I'm

13
00:00:32,189 --> 00:00:35,070
responsible at DFS for the operating

14
00:00:35,070 --> 00:00:36,600
system development and half of

15
00:00:36,600 --> 00:00:40,080
standardizations and in the next 50

16
00:00:40,080 --> 00:00:42,540
minutes I will try to introduce you into

17
00:00:42,540 --> 00:00:44,400
the world of air traffic control and

18
00:00:44,400 --> 00:00:46,770
Linux software developments in air

19
00:00:46,770 --> 00:00:49,310
traffic control

20
00:01:24,460 --> 00:01:28,220
so I try to improvise while they find

21
00:01:28,220 --> 00:01:34,630
the technical solution ok so let's go on

22
00:01:36,470 --> 00:01:39,548
[Music]

23
00:01:44,289 --> 00:01:46,520
let's continue this one it doesn't

24
00:01:46,520 --> 00:01:49,880
matter so we can improvise we actually

25
00:01:49,880 --> 00:01:52,250
write into the topic the integration of

26
00:01:52,250 --> 00:01:53,810
hardware and software is very important

27
00:01:53,810 --> 00:01:57,979
to us this talk is a memory of my former

28
00:01:57,979 --> 00:02:00,080
boss and mentor who happened to pass

29
00:02:00,080 --> 00:02:05,119
away just two weeks ago so the title of

30
00:02:05,119 --> 00:02:08,389
my talk using air traffic using using

31
00:02:08,389 --> 00:02:11,660
Linux in air traffic control hardware

32
00:02:11,660 --> 00:02:15,019
and software platforms the agenda for

33
00:02:15,019 --> 00:02:17,030
today is quite packed so I try to catch

34
00:02:17,030 --> 00:02:20,390
up at first we start off with an air

35
00:02:20,390 --> 00:02:22,370
traffic control for dummies of course we

36
00:02:22,370 --> 00:02:24,170
need to know what's the world I'm living

37
00:02:24,170 --> 00:02:28,010
in what are my perspectives on Linux the

38
00:02:28,010 --> 00:02:30,440
history of Linux in DFS how long do we

39
00:02:30,440 --> 00:02:32,739
use it what did we learn on the way and

40
00:02:32,739 --> 00:02:35,930
then I want to show you what are the

41
00:02:35,930 --> 00:02:37,940
current challenges and what are the do's

42
00:02:37,940 --> 00:02:40,370
and don'ts we learned in the past ten

43
00:02:40,370 --> 00:02:45,010
years using Linux for core systems

44
00:02:45,010 --> 00:02:48,470
finally I show you how the structure of

45
00:02:48,470 --> 00:02:50,930
all modular platforms look like today

46
00:02:50,930 --> 00:02:54,769
and finally I try to show you what will

47
00:02:54,769 --> 00:02:55,459
come next

48
00:02:55,459 --> 00:03:02,420
what's the view for the future so ATC

49
00:03:02,420 --> 00:03:05,030
for dummies the domain I'm living in is

50
00:03:05,030 --> 00:03:07,519
quite different from anything else you

51
00:03:07,519 --> 00:03:09,950
know probably I'm living in the world

52
00:03:09,950 --> 00:03:12,709
where radar systems are 30 years old

53
00:03:12,709 --> 00:03:15,620
where we have floppy disks still running

54
00:03:15,620 --> 00:03:18,890
the software for ADA systems and they

55
00:03:18,890 --> 00:03:21,650
still run fine and on good shape we have

56
00:03:21,650 --> 00:03:24,050
departments taking care for on these

57
00:03:24,050 --> 00:03:25,160
parts

58
00:03:25,160 --> 00:03:27,890
and they actually can dissolve their

59
00:03:27,890 --> 00:03:31,730
chips and exchange them with FPGAs and

60
00:03:31,730 --> 00:03:34,220
stuff like that so this is the world I'm

61
00:03:34,220 --> 00:03:36,800
living in what is the air traffic

62
00:03:36,800 --> 00:03:39,080
control by the way what is your core

63
00:03:39,080 --> 00:03:40,970
business probably you think of these

64
00:03:40,970 --> 00:03:44,170
guys sitting around doing some gestures

65
00:03:44,170 --> 00:03:47,840
showing the plane where to go yes this

66
00:03:47,840 --> 00:03:51,320
is the air traffic control - but our

67
00:03:51,320 --> 00:03:54,890
systems look more like that so we have

68
00:03:54,890 --> 00:03:56,720
one guys sitting in front of a radar

69
00:03:56,720 --> 00:03:59,360
display he's seeing a lots of planes

70
00:03:59,360 --> 00:04:02,570
he's seeing information on these planes

71
00:04:02,570 --> 00:04:04,730
and he's talking to the pilots and

72
00:04:04,730 --> 00:04:06,430
giving him commands where to go

73
00:04:06,430 --> 00:04:09,380
sounds easy these people are always

74
00:04:09,380 --> 00:04:12,140
working in pairs one is the controller

75
00:04:12,140 --> 00:04:14,300
who's actually doing the talking to the

76
00:04:14,300 --> 00:04:17,029
pilot and the other one is organizing

77
00:04:17,029 --> 00:04:19,820
all the interfaces to other air blocks

78
00:04:19,820 --> 00:04:24,020
to other air-traffic centers etc etc and

79
00:04:24,020 --> 00:04:26,240
as you can see there are lots of systems

80
00:04:26,240 --> 00:04:30,020
behind and our job is of course to

81
00:04:30,020 --> 00:04:31,850
provide these systems to build these

82
00:04:31,850 --> 00:04:35,180
systems and nowadays most of them run

83
00:04:35,180 --> 00:04:40,070
under Linux if you take a look in the

84
00:04:40,070 --> 00:04:43,760
sky for one day you can see sorry over

85
00:04:43,760 --> 00:04:46,850
Germany as you can see roughly 10,000

86
00:04:46,850 --> 00:04:49,730
flights per day going up and down flying

87
00:04:49,730 --> 00:04:53,240
around and in order to understand this

88
00:04:53,240 --> 00:04:56,720
big mess a short introduction in air

89
00:04:56,720 --> 00:04:59,900
blocks we have roughly two different

90
00:04:59,900 --> 00:05:01,460
kinds of air blocks we have upper

91
00:05:01,460 --> 00:05:02,150
airspace

92
00:05:02,150 --> 00:05:03,830
this is everything flying around over

93
00:05:03,830 --> 00:05:06,380
countries and we have the lower airspace

94
00:05:06,380 --> 00:05:08,270
this is everything starting and

95
00:05:08,270 --> 00:05:11,810
descending sounds easy why should you

96
00:05:11,810 --> 00:05:14,060
set a separate these two kinds of

97
00:05:14,060 --> 00:05:17,750
systems because the speeds and the

98
00:05:17,750 --> 00:05:19,730
movements the planes make are quite

99
00:05:19,730 --> 00:05:22,460
different as you can imagine if a plane

100
00:05:22,460 --> 00:05:25,130
is flying over country it will not so

101
00:05:25,130 --> 00:05:27,050
often change its direction but we'll go

102
00:05:27,050 --> 00:05:29,900
with a very high speed in contrast if

103
00:05:29,900 --> 00:05:34,390
it's starting or landing sounds easy

104
00:05:35,840 --> 00:05:39,060
so what are the systems behind the

105
00:05:39,060 --> 00:05:42,000
systems behind our core infrastructure a

106
00:05:42,000 --> 00:05:45,840
safety critical infrastructure and one

107
00:05:45,840 --> 00:05:50,460
important aspect just in advance we are

108
00:05:50,460 --> 00:05:53,600
not into security safety is the topic

109
00:05:53,600 --> 00:05:56,070
safety is more important safety means

110
00:05:56,070 --> 00:05:59,520
our systems have more or less direct

111
00:05:59,520 --> 00:06:02,669
impact on the lives of others so we have

112
00:06:02,669 --> 00:06:05,040
to take care that the safety of the

113
00:06:05,040 --> 00:06:08,570
systems is guaranteed in case of doubt

114
00:06:08,570 --> 00:06:11,250
we have no problem if the system fails

115
00:06:11,250 --> 00:06:14,150
but it should be a determined fail in

116
00:06:14,150 --> 00:06:18,720
contrast to security topics so we have

117
00:06:18,720 --> 00:06:21,479
special requirements for example some of

118
00:06:21,479 --> 00:06:23,729
our integration requirements we could

119
00:06:23,729 --> 00:06:25,500
not take a microphone like this this is

120
00:06:25,500 --> 00:06:27,540
bad imagine you want to talk to a pilot

121
00:06:27,540 --> 00:06:29,430
and your microphone stops working this

122
00:06:29,430 --> 00:06:31,160
is bad

123
00:06:31,160 --> 00:06:34,050
so we need application support for the

124
00:06:34,050 --> 00:06:36,720
whole life cycle of the system ok sounds

125
00:06:36,720 --> 00:06:38,160
easy what's the life cycle of the system

126
00:06:38,160 --> 00:06:41,760
the life cycle of a system is easily

127
00:06:41,760 --> 00:06:45,750
between updates eight years example the

128
00:06:45,750 --> 00:06:48,240
current system for Europe which is

129
00:06:48,240 --> 00:06:50,880
developed in cooperation with TFS is in

130
00:06:50,880 --> 00:06:53,580
development since 15 years in a legal

131
00:06:53,580 --> 00:06:57,630
life end of this year so this is what

132
00:06:57,630 --> 00:07:00,120
I'm talking about by application support

133
00:07:00,120 --> 00:07:03,060
for the whole life cycle of course we

134
00:07:03,060 --> 00:07:05,610
have high quality standards we will jump

135
00:07:05,610 --> 00:07:09,870
into them later on and we need proofs

136
00:07:09,870 --> 00:07:13,770
that actually the systems work paperwork

137
00:07:13,770 --> 00:07:16,620
alone a certificate or a document yes

138
00:07:16,620 --> 00:07:18,930
yes we can fulfill this is not enough we

139
00:07:18,930 --> 00:07:22,289
actually do tests even if there's enough

140
00:07:22,289 --> 00:07:24,740
paperwork and certificates existence and

141
00:07:24,740 --> 00:07:27,690
reality shows that we are right we

142
00:07:27,690 --> 00:07:30,510
discover failures what these failures

143
00:07:30,510 --> 00:07:33,440
are I will show you some small examples

144
00:07:33,440 --> 00:07:37,229
of course you can bet we don't need any

145
00:07:37,229 --> 00:07:39,300
single point of failure and we need

146
00:07:39,300 --> 00:07:41,940
fallback systems or system architectures

147
00:07:41,940 --> 00:07:43,860
are we have redundant systems of course

148
00:07:43,860 --> 00:07:46,380
and these redundant systems have

149
00:07:46,380 --> 00:07:49,710
systems so if the primary system will go

150
00:07:49,710 --> 00:07:51,420
down we have a fallback system which

151
00:07:51,420 --> 00:07:55,560
will take over this has implications for

152
00:07:55,560 --> 00:07:58,440
the architecture of the systems if you

153
00:07:58,440 --> 00:08:00,420
want to have a fallback system you

154
00:08:00,420 --> 00:08:04,140
should have the most you should have

155
00:08:04,140 --> 00:08:06,210
something which is completely dissimilar

156
00:08:06,210 --> 00:08:08,580
to the primary system means we use

157
00:08:08,580 --> 00:08:10,860
different CPU architectures use

158
00:08:10,860 --> 00:08:13,320
different operating systems we use

159
00:08:13,320 --> 00:08:14,970
different applications and even

160
00:08:14,970 --> 00:08:17,100
different requirements heads and

161
00:08:17,100 --> 00:08:19,140
engineers developing these applications

162
00:08:19,140 --> 00:08:24,530
in order to avoid any systemic failures

163
00:08:27,080 --> 00:08:29,700
what kind of environment are we

164
00:08:29,700 --> 00:08:31,230
operating in maybe this is also

165
00:08:31,230 --> 00:08:32,099
interesting

166
00:08:32,099 --> 00:08:35,099
of course air traffic control is

167
00:08:35,099 --> 00:08:37,320
something controlled by the governments

168
00:08:37,320 --> 00:08:39,840
because if you control the air spaces

169
00:08:39,840 --> 00:08:42,299
over a country clearly this is a

170
00:08:42,299 --> 00:08:45,210
governmental task but it has been

171
00:08:45,210 --> 00:08:47,640
regulated by the European Union that

172
00:08:47,640 --> 00:08:50,460
private companies nowaday DFS is a

173
00:08:50,460 --> 00:08:52,770
private company can take over these

174
00:08:52,770 --> 00:08:56,940
tasks and we have a lot of abbreviations

175
00:08:56,940 --> 00:08:59,910
here welcome to my world in DFS we have

176
00:08:59,910 --> 00:09:01,710
a lot of abbreviations I will try to

177
00:09:01,710 --> 00:09:06,770
explain them to you fabric means one

178
00:09:06,770 --> 00:09:09,330
aspect of cost-saving

179
00:09:09,330 --> 00:09:11,760
of increasing the efficiency in air

180
00:09:11,760 --> 00:09:14,430
space is organizing the air blocks in a

181
00:09:14,430 --> 00:09:18,270
more efficient way in the old times air

182
00:09:18,270 --> 00:09:21,930
traffic control was governmental and if

183
00:09:21,930 --> 00:09:24,570
a plane flies from here to the United

184
00:09:24,570 --> 00:09:26,160
States you will cross different

185
00:09:26,160 --> 00:09:27,780
countries and every time a different

186
00:09:27,780 --> 00:09:29,220
Center will take over this is not

187
00:09:29,220 --> 00:09:32,100
efficient it is better to create the air

188
00:09:32,100 --> 00:09:34,680
blocks in a manner that they follow the

189
00:09:34,680 --> 00:09:37,020
routes of the actual airplanes this is

190
00:09:37,020 --> 00:09:40,350
what Harbach nearly means we have other

191
00:09:40,350 --> 00:09:42,950
programs and regulations like these are

192
00:09:42,950 --> 00:09:46,080
stating that please guys sit together

193
00:09:46,080 --> 00:09:48,960
and no it's more like a command sit

194
00:09:48,960 --> 00:09:51,500
together and find a way to create

195
00:09:51,500 --> 00:09:53,640
homogeneous systems develop them

196
00:09:53,640 --> 00:09:56,640
together create system-wide information

197
00:09:56,640 --> 00:09:58,320
management don't create your own

198
00:09:58,320 --> 00:10:00,199
solutions

199
00:10:00,199 --> 00:10:03,269
we have a free market nowadays we can

200
00:10:03,269 --> 00:10:05,220
take over air spaces in different

201
00:10:05,220 --> 00:10:07,410
countries and other aeronautical service

202
00:10:07,410 --> 00:10:09,540
providers also can take off air blocks

203
00:10:09,540 --> 00:10:13,199
in Germany and of course last but not

204
00:10:13,199 --> 00:10:15,120
least we have coast regulation by the

205
00:10:15,120 --> 00:10:17,490
European Union and this has a strong

206
00:10:17,490 --> 00:10:20,730
impact on our daily work in the last one

207
00:10:20,730 --> 00:10:23,639
and a half years we were able at DFS to

208
00:10:23,639 --> 00:10:25,610
reduce the costs for the customers by

209
00:10:25,610 --> 00:10:30,930
23% and Linux is one important point the

210
00:10:30,930 --> 00:10:32,879
Linux platforms how we say how we

211
00:10:32,879 --> 00:10:37,800
achieved to who save this money so what

212
00:10:37,800 --> 00:10:40,610
about the history of Linux and DFS now

213
00:10:40,610 --> 00:10:45,139
we started using Linux in in a time

214
00:10:45,139 --> 00:10:48,569
where the systems currently in

215
00:10:48,569 --> 00:10:51,149
development we are still developed for

216
00:10:51,149 --> 00:10:55,709
systems with alpha and through 64 when I

217
00:10:55,709 --> 00:10:58,439
started at DFS in 2010 we had the last

218
00:10:58,439 --> 00:11:00,870
big goal life of a big primary system

219
00:11:00,870 --> 00:11:04,920
running on alpha through 64 at that time

220
00:11:04,920 --> 00:11:06,180
you couldn't even buy the machines

221
00:11:06,180 --> 00:11:08,009
anymore we had stocks of machines and

222
00:11:08,009 --> 00:11:09,959
this is the time we are living in but

223
00:11:09,959 --> 00:11:13,620
even 5 years before DFS thought about

224
00:11:13,620 --> 00:11:16,980
that we have to think how we create the

225
00:11:16,980 --> 00:11:19,170
systems after alpha doesn't exist

226
00:11:19,170 --> 00:11:21,480
anymore this architecture what can we do

227
00:11:21,480 --> 00:11:25,199
and at that time the Linux competence

228
00:11:25,199 --> 00:11:27,720
center has been formed and the idea was

229
00:11:27,720 --> 00:11:30,480
to provide centralized knowledge for

230
00:11:30,480 --> 00:11:33,720
Linux and Linux related topics hardware

231
00:11:33,720 --> 00:11:35,370
and so on and so on

232
00:11:35,370 --> 00:11:39,569
centralized in DFS at that time we also

233
00:11:39,569 --> 00:11:43,019
established a partnership with both big

234
00:11:43,019 --> 00:11:47,269
enterprise providers redheads and Susan

235
00:11:47,269 --> 00:11:51,420
why Enterprise Linux it's quite simple I

236
00:11:51,420 --> 00:11:55,699
will explain to you later in the talk

237
00:11:55,699 --> 00:12:00,240
what the what exactly we need from these

238
00:12:00,240 --> 00:12:03,449
Enterprise distributors because ok if

239
00:12:03,449 --> 00:12:04,800
you first think yeah ok it's a big

240
00:12:04,800 --> 00:12:07,170
company safety something yeah ok

241
00:12:07,170 --> 00:12:09,480
Enterprise is great but what can we

242
00:12:09,480 --> 00:12:11,790
really get

243
00:12:11,790 --> 00:12:15,790
in reality considering these life cycles

244
00:12:15,790 --> 00:12:17,950
these development life cycles you can

245
00:12:17,950 --> 00:12:20,410
already imagine that if we go live with

246
00:12:20,410 --> 00:12:23,610
their systems it's it's out of support

247
00:12:23,610 --> 00:12:25,900
so we have something else from these

248
00:12:25,900 --> 00:12:28,510
distributors what that is I will explain

249
00:12:28,510 --> 00:12:32,950
it later in 2008 the first system

250
00:12:32,950 --> 00:12:35,680
started growing and we thought okay we

251
00:12:35,680 --> 00:12:37,930
should create a unified solution the so

252
00:12:37,930 --> 00:12:41,230
called DFS UNIX the vessel a Linux the

253
00:12:41,230 --> 00:12:43,120
idea was to implement the requirements

254
00:12:43,120 --> 00:12:45,550
of our customers for the various

255
00:12:45,550 --> 00:12:47,680
products we have news to implement these

256
00:12:47,680 --> 00:12:48,850
requirements only once

257
00:12:48,850 --> 00:12:51,730
of course the operational processes for

258
00:12:51,730 --> 00:12:53,890
all of the products are the same so we

259
00:12:53,890 --> 00:12:55,960
should implement the requirements only

260
00:12:55,960 --> 00:13:03,220
once in 2010 the idea was to extend this

261
00:13:03,220 --> 00:13:06,460
first solution to a platform with a main

262
00:13:06,460 --> 00:13:10,120
goal to harmonize the configurations at

263
00:13:10,120 --> 00:13:13,780
that time we had roughly 1500 systems in

264
00:13:13,780 --> 00:13:15,840
october's Ennis running under Linux and

265
00:13:15,840 --> 00:13:19,060
as what it was already foreseeable that

266
00:13:19,060 --> 00:13:21,760
the amount will increase tremendously in

267
00:13:21,760 --> 00:13:24,520
the upcoming years and the question was

268
00:13:24,520 --> 00:13:27,400
how to react on that and at that point

269
00:13:27,400 --> 00:13:29,740
it was I think a very fast Farsight

270
00:13:29,740 --> 00:13:32,860
solution to to set on this published

271
00:13:32,860 --> 00:13:35,620
stuff and to say we are going to use

272
00:13:35,620 --> 00:13:38,860
this kind of concept and enable the

273
00:13:38,860 --> 00:13:42,270
users to write their own configurations

274
00:13:42,270 --> 00:13:46,240
besides this standards we created we we

275
00:13:46,240 --> 00:13:48,990
thought about how to get our hardware

276
00:13:48,990 --> 00:13:51,940
the systems before they were bought as

277
00:13:51,940 --> 00:13:56,650
appliances so appliance means we buy the

278
00:13:56,650 --> 00:13:58,060
Alpha Hardware with the operating system

279
00:13:58,060 --> 00:14:00,280
together this is not possible anymore so

280
00:14:00,280 --> 00:14:02,290
we have to provide something here and

281
00:14:02,290 --> 00:14:03,790
the solution was create a standard

282
00:14:03,790 --> 00:14:06,220
create a hardware standard and make sure

283
00:14:06,220 --> 00:14:08,110
that these systems in the standard can

284
00:14:08,110 --> 00:14:11,070
run under Linux sounds easy

285
00:14:11,070 --> 00:14:16,060
in 2015 the number increased the number

286
00:14:16,060 --> 00:14:19,020
of systems that complexity increased and

287
00:14:19,020 --> 00:14:22,870
the cost pressure increased and this

288
00:14:22,870 --> 00:14:25,420
forced us to think in different ways so

289
00:14:25,420 --> 00:14:27,850
we extended this hardware standards to

290
00:14:27,850 --> 00:14:30,820
hardware platform what that means I will

291
00:14:30,820 --> 00:14:34,630
show you by end of the talk finally in

292
00:14:34,630 --> 00:14:37,330
in the last year we cracked the mark

293
00:14:37,330 --> 00:14:40,870
10th 10,000 operative systems running

294
00:14:40,870 --> 00:14:44,230
under the Linux platform at TFS and all

295
00:14:44,230 --> 00:14:46,480
of them are using or modular Hardware

296
00:14:46,480 --> 00:14:49,510
standard and this is why it's something

297
00:14:49,510 --> 00:14:52,680
away what that means

298
00:15:06,120 --> 00:15:09,090
100 systems we buy a factor 10 more

299
00:15:09,090 --> 00:15:10,890
systems for testing development and so

300
00:15:10,890 --> 00:15:13,500
on and so on this is my for one platform

301
00:15:13,500 --> 00:15:20,370
instance we easily buy 1000 systems so

302
00:15:20,370 --> 00:15:22,800
what did we learn on our way tools and

303
00:15:22,800 --> 00:15:24,570
don'ts and the following slides I

304
00:15:24,570 --> 00:15:28,380
present you some examples and I try to

305
00:15:28,380 --> 00:15:30,750
explain them in as detailed as possible

306
00:15:30,750 --> 00:15:33,690
but I think it will not be possible to

307
00:15:33,690 --> 00:15:35,850
dive into every detail so if you have

308
00:15:35,850 --> 00:15:37,800
questions please write them down come

309
00:15:37,800 --> 00:15:41,599
back to me later we can talk about that

310
00:15:41,870 --> 00:15:47,550
ct1 what does it mean welcome to the

311
00:15:47,550 --> 00:15:50,040
world of TFS we introduce abbreviations

312
00:15:50,040 --> 00:15:52,110
for everything challenge technical

313
00:15:52,110 --> 00:15:54,480
number one so you have the real DFS

314
00:15:54,480 --> 00:15:57,680
feeling the first technical challenge a

315
00:15:57,680 --> 00:16:01,230
vacuum driver well ok that's easy

316
00:16:01,230 --> 00:16:04,110
Wacom tablets maybe most of you know

317
00:16:04,110 --> 00:16:06,480
what a Wacom tablet is it's used

318
00:16:06,480 --> 00:16:09,480
everywhere and so also we use it in DFS

319
00:16:09,480 --> 00:16:13,410
easy but the use case in DFS is quite

320
00:16:13,410 --> 00:16:16,950
different this is where I have a problem

321
00:16:16,950 --> 00:16:18,360
with a microphone but it doesn't matter

322
00:16:18,360 --> 00:16:22,650
I will show it to you an artist makes

323
00:16:22,650 --> 00:16:29,550
movement like this and DFS will make

324
00:16:29,550 --> 00:16:36,740
movement like this so this is a problem

325
00:16:36,740 --> 00:16:39,510
this is a problem when you consider that

326
00:16:39,510 --> 00:16:41,520
both the driver and the firmware is of

327
00:16:41,520 --> 00:16:44,220
course optimized for the usage of the

328
00:16:44,220 --> 00:16:48,510
general purpose what happened is we had

329
00:16:48,510 --> 00:16:51,420
a major observation three years ago four

330
00:16:51,420 --> 00:16:55,200
years ago already where some of the air

331
00:16:55,200 --> 00:16:57,150
traffic controllers found the buck and

332
00:16:57,150 --> 00:16:59,730
the buck was if you place the pen in a

333
00:16:59,730 --> 00:17:02,430
specific angle at a specific point the

334
00:17:02,430 --> 00:17:04,230
press events was released in the middle

335
00:17:04,230 --> 00:17:07,740
of the screen nobody found us why should

336
00:17:07,740 --> 00:17:12,569
you do that and as you know the people

337
00:17:12,569 --> 00:17:14,670
who are working as a traffic controllers

338
00:17:14,670 --> 00:17:17,069
under high stress and once you detect

339
00:17:17,069 --> 00:17:19,200
one of these failures they show up

340
00:17:19,200 --> 00:17:19,880
everywhere

341
00:17:19,880 --> 00:17:22,470
so this is high critical we have to fix

342
00:17:22,470 --> 00:17:28,170
it don't wonder if your standard driver

343
00:17:28,170 --> 00:17:32,030
and the standard firmware doesn't work

344
00:17:32,030 --> 00:17:35,220
luckily we didn't wander we have

345
00:17:35,220 --> 00:17:37,380
customer tests for this and of course

346
00:17:37,380 --> 00:17:39,720
this passed the customer test the pack

347
00:17:39,720 --> 00:17:43,650
arise later but we planned ahead for the

348
00:17:43,650 --> 00:17:47,490
support in a case like that if you don't

349
00:17:47,490 --> 00:17:49,590
have established connections to your

350
00:17:49,590 --> 00:17:51,960
providers and can ask them what's the

351
00:17:51,960 --> 00:17:53,490
problem with us firmware what's the

352
00:17:53,490 --> 00:17:54,870
problem with this driver can you please

353
00:17:54,870 --> 00:17:57,810
come over you're in deep trouble the

354
00:17:57,810 --> 00:18:00,180
solution here was actually fixing both

355
00:18:00,180 --> 00:18:02,580
something in the driver and something in

356
00:18:02,580 --> 00:18:06,480
the firmware and we had to update we had

357
00:18:06,480 --> 00:18:10,080
a firmware update roughly 240 of these

358
00:18:10,080 --> 00:18:15,720
welcome displays in the night what makes

359
00:18:15,720 --> 00:18:17,610
it different what makes it complicated

360
00:18:17,610 --> 00:18:20,250
to update something like that in in a

361
00:18:20,250 --> 00:18:22,740
mission-critical system you cannot just

362
00:18:22,740 --> 00:18:24,960
take down the streets there are fixed

363
00:18:24,960 --> 00:18:28,260
intervals which are harmonized worldwide

364
00:18:28,260 --> 00:18:31,430
where is allowed to play in updates and

365
00:18:31,430 --> 00:18:33,780
you have so synchronized to that and

366
00:18:33,780 --> 00:18:38,370
this increases the cost even more second

367
00:18:38,370 --> 00:18:41,610
example of a technical challenge into

368
00:18:41,610 --> 00:18:44,490
IMT may be better known under the name

369
00:18:44,490 --> 00:18:48,780
of v4 this is a technology probably

370
00:18:48,780 --> 00:18:52,110
existent in all of your clients and it

371
00:18:52,110 --> 00:18:54,270
provides remote accessibility to your

372
00:18:54,270 --> 00:18:57,060
client systems a very nice feature and

373
00:18:57,060 --> 00:18:59,910
there's also linux support and the linux

374
00:18:59,910 --> 00:19:02,610
support is a port of a Windows tool

375
00:19:02,610 --> 00:19:05,250
written in a bad programming language

376
00:19:05,250 --> 00:19:09,350
and it's profit and it's rotting around

377
00:19:09,350 --> 00:19:13,470
so we bought the hardware in 2014 we

378
00:19:13,470 --> 00:19:15,030
want to go live this is actually the

379
00:19:15,030 --> 00:19:16,590
system we built for the future we want

380
00:19:16,590 --> 00:19:18,420
to be live by the end of this year in

381
00:19:18,420 --> 00:19:22,140
the 2016 until todos ok the supporters

382
00:19:22,140 --> 00:19:23,820
dropped there's nobody anymore we sector

383
00:19:23,820 --> 00:19:27,230
people oh that's bad

384
00:19:27,249 --> 00:19:30,769
so don't rely maybe this is obvious

385
00:19:30,769 --> 00:19:33,379
don't rely on binary drivers even if

386
00:19:33,379 --> 00:19:35,509
they are provided for free just don't do

387
00:19:35,509 --> 00:19:38,749
it well you end up with a door it's it's

388
00:19:38,749 --> 00:19:41,799
closed there's nothing behind anymore

389
00:19:41,799 --> 00:19:44,229
what you want to do is you want to do

390
00:19:44,229 --> 00:19:48,409
use open source tools you want to have

391
00:19:48,409 --> 00:19:50,479
established connections again with your

392
00:19:50,479 --> 00:19:53,329
providers so they can they have a real

393
00:19:53,329 --> 00:19:56,959
chance providing your solution you want

394
00:19:56,959 --> 00:19:58,489
to assert the life cycle for the

395
00:19:58,489 --> 00:20:00,619
complete life cycle of the application

396
00:20:00,619 --> 00:20:03,999
of course this did fail in that case and

397
00:20:03,999 --> 00:20:08,209
you want to have alternatives luckily we

398
00:20:08,209 --> 00:20:10,099
had alternatives and we could figure out

399
00:20:10,099 --> 00:20:12,169
a workaround using a different

400
00:20:12,169 --> 00:20:16,009
technology so we can go live a small

401
00:20:16,009 --> 00:20:19,029
blocker but this is a very serious topic

402
00:20:19,029 --> 00:20:21,379
imagine we have everything ready for go

403
00:20:21,379 --> 00:20:23,239
life and we cannot access the machines

404
00:20:23,239 --> 00:20:28,639
remotely this is bad that technical

405
00:20:28,639 --> 00:20:31,669
challenge deployment solution of course

406
00:20:31,669 --> 00:20:34,159
obviously if we have 10,000 systems we

407
00:20:34,159 --> 00:20:37,219
need some kind of deployments ok that's

408
00:20:37,219 --> 00:20:39,639
nice deployment that's easy

409
00:20:39,639 --> 00:20:43,969
if you consider that we have two very

410
00:20:43,969 --> 00:20:45,859
different cultures in air traffic

411
00:20:45,859 --> 00:20:48,799
control one of them is the guys living

412
00:20:48,799 --> 00:20:51,769
in a tower system this is what you see

413
00:20:51,769 --> 00:20:54,049
at all the airports and the other guys

414
00:20:54,049 --> 00:20:55,909
are sitting in the centers doing the

415
00:20:55,909 --> 00:20:58,929
control of this lower and upper airspace

416
00:20:58,929 --> 00:21:01,609
the systems obviously are completely

417
00:21:01,609 --> 00:21:03,199
different tower systems are

418
00:21:03,199 --> 00:21:05,749
decentralized and central systems it's

419
00:21:05,749 --> 00:21:07,239
already in the name they are centralized

420
00:21:07,239 --> 00:21:09,859
how can the deployment solution look the

421
00:21:09,859 --> 00:21:13,609
same it doesn't work so the challenge

422
00:21:13,609 --> 00:21:16,129
here is we need a deployment solution

423
00:21:16,129 --> 00:21:19,969
and we have a lot of legacy code where

424
00:21:19,969 --> 00:21:24,679
does this legacy code from very easy all

425
00:21:24,679 --> 00:21:28,639
of you know DevOps DFS does exactly this

426
00:21:28,639 --> 00:21:30,240
not

427
00:21:30,240 --> 00:21:33,390
we do it completely different we do the

428
00:21:33,390 --> 00:21:35,010
development we test and test and test

429
00:21:35,010 --> 00:21:37,950
and once everything is finished it goes

430
00:21:37,950 --> 00:21:41,190
live the people working in first and

431
00:21:41,190 --> 00:21:43,350
second level support have kind of

432
00:21:43,350 --> 00:21:46,110
driver's licenses for all of their

433
00:21:46,110 --> 00:21:49,170
actions they take or they take in the

434
00:21:49,170 --> 00:21:51,180
systems for each system there's a

435
00:21:51,180 --> 00:21:55,590
driver's license and obviously finally

436
00:21:55,590 --> 00:21:57,450
they are personally responsible if

437
00:21:57,450 --> 00:22:00,750
something goes wrong so this is a source

438
00:22:00,750 --> 00:22:03,840
of drivers of this is a source of tools

439
00:22:03,840 --> 00:22:05,850
of course if these guys are responsible

440
00:22:05,850 --> 00:22:07,860
they start writing their own tools in

441
00:22:07,860 --> 00:22:10,740
the years now these tools exists and you

442
00:22:10,740 --> 00:22:13,230
provide them a new solution the

443
00:22:13,230 --> 00:22:16,740
challenges we know the better way we

444
00:22:16,740 --> 00:22:18,570
know state-of-the-art technologies we

445
00:22:18,570 --> 00:22:19,590
know how it's really done

446
00:22:19,590 --> 00:22:24,350
in the customer has their own solution

447
00:22:24,350 --> 00:22:29,040
so don't use puppet master don't use

448
00:22:29,040 --> 00:22:31,110
life free configuration even though it's

449
00:22:31,110 --> 00:22:32,960
possible and very nice don't use it

450
00:22:32,960 --> 00:22:36,080
don't use all the nice features existent

451
00:22:36,080 --> 00:22:39,990
it doesn't make sense you can if if the

452
00:22:39,990 --> 00:22:42,270
person want to chess boards you can

453
00:22:42,270 --> 00:22:44,760
write an application on an iPad it's

454
00:22:44,760 --> 00:22:47,540
nice and expensive but it doesn't work

455
00:22:47,540 --> 00:22:50,220
if the user wants to stick with this old

456
00:22:50,220 --> 00:22:52,590
Lada don't provide him a portion very

457
00:22:52,590 --> 00:22:56,100
easy so what you really want to do is he

458
00:22:56,100 --> 00:22:58,080
wants to go to the people who are

459
00:22:58,080 --> 00:22:59,940
responsible for the first and let the

460
00:22:59,940 --> 00:23:02,640
second level support with a completely

461
00:23:02,640 --> 00:23:04,500
different mindset than any developer

462
00:23:04,500 --> 00:23:06,390
because their personal responsible and

463
00:23:06,390 --> 00:23:08,760
they feel that way you want to go to

464
00:23:08,760 --> 00:23:10,500
them ask them what do you really need

465
00:23:10,500 --> 00:23:14,820
and just implement that this means focus

466
00:23:14,820 --> 00:23:17,550
on the real customer value the real

467
00:23:17,550 --> 00:23:20,040
customer value is in our case of course

468
00:23:20,040 --> 00:23:21,960
the people who are doing the operations

469
00:23:21,960 --> 00:23:25,740
and understand that even though you have

470
00:23:25,740 --> 00:23:27,990
all these nice ideas which is very nice

471
00:23:27,990 --> 00:23:30,720
and of course they are better but we

472
00:23:30,720 --> 00:23:36,110
only create costs we create no value and

473
00:23:36,110 --> 00:23:39,630
we did take a wrong path in the in the

474
00:23:39,630 --> 00:23:43,270
beginning we tried to force

475
00:23:43,270 --> 00:23:45,669
the system management to use a different

476
00:23:45,669 --> 00:23:48,220
way of deployment and of course it was

477
00:23:48,220 --> 00:23:51,100
better but it didn't work out because of

478
00:23:51,100 --> 00:23:52,710
cultural problems interestingly

479
00:23:52,710 --> 00:23:56,470
interestingly as soon as we started

480
00:23:56,470 --> 00:23:58,539
providing them the solutions they needed

481
00:23:58,539 --> 00:24:01,960
they asked can you please provide us a

482
00:24:01,960 --> 00:24:07,419
better solution ok it was two years work

483
00:24:07,419 --> 00:24:13,659
and then take over at the old point now

484
00:24:13,659 --> 00:24:16,029
let's start diving into the real

485
00:24:16,029 --> 00:24:20,679
challenges the first real challenge you

486
00:24:20,679 --> 00:24:23,350
can see see one no technical challenge

487
00:24:23,350 --> 00:24:24,600
anymore

488
00:24:24,600 --> 00:24:27,789
the real challenge there's a gap in the

489
00:24:27,789 --> 00:24:28,620
delivery

490
00:24:28,620 --> 00:24:32,860
what kind of gap could the speed as I

491
00:24:32,860 --> 00:24:36,580
mentioned earlier our job is to do the

492
00:24:36,580 --> 00:24:38,799
integration of the operating system and

493
00:24:38,799 --> 00:24:43,090
the hardware challenges the hardware's

494
00:24:43,090 --> 00:24:44,890
delivered by somebody else then the

495
00:24:44,890 --> 00:24:47,350
operating system so we have to take care

496
00:24:47,350 --> 00:24:49,510
on the integration somehow okay that's

497
00:24:49,510 --> 00:24:53,559
fine easy what's in the gap what do we

498
00:24:53,559 --> 00:24:56,890
have to consider for a specific Linux

499
00:24:56,890 --> 00:25:00,130
version Linux versions in my terms is

500
00:25:00,130 --> 00:25:03,250
something like l7 not a kernel version

501
00:25:03,250 --> 00:25:06,549
in enterprise linux version for specific

502
00:25:06,549 --> 00:25:10,029
linux version we have a hardware and

503
00:25:10,029 --> 00:25:12,850
driver hardware and firmware version for

504
00:25:12,850 --> 00:25:15,030
every hardware component

505
00:25:15,030 --> 00:25:19,170
can this work together obviously this is

506
00:25:19,170 --> 00:25:21,720
difficult because the operating system

507
00:25:21,720 --> 00:25:24,210
has been released in an earlier date in

508
00:25:24,210 --> 00:25:28,580
the firmware later who will test it

509
00:25:28,580 --> 00:25:31,080
drivers and modules you have seen an

510
00:25:31,080 --> 00:25:35,340
example vacum driver and obviously also

511
00:25:35,340 --> 00:25:36,930
tools you need for the hardware

512
00:25:36,930 --> 00:25:40,920
functionality like IMT these tools and

513
00:25:40,920 --> 00:25:44,040
these problems with hardware revisions

514
00:25:44,040 --> 00:25:48,720
are in kind of a gap how does this gap

515
00:25:48,720 --> 00:25:52,350
feel for DFS and this is where we jump

516
00:25:52,350 --> 00:25:55,620
into the development processes a short

517
00:25:55,620 --> 00:25:59,700
introduction into my world so structured

518
00:25:59,700 --> 00:26:01,680
software developments obviously uses

519
00:26:01,680 --> 00:26:04,110
some kind of model like the V model and

520
00:26:04,110 --> 00:26:05,670
you start up with a high level

521
00:26:05,670 --> 00:26:07,470
requirement and you say there's a

522
00:26:07,470 --> 00:26:10,620
hardware unit it's named X and it shall

523
00:26:10,620 --> 00:26:12,570
boot and it's provided by some

524
00:26:12,570 --> 00:26:13,980
independent hardware vendors somebody

525
00:26:13,980 --> 00:26:16,770
has produced it fine and it shall boot

526
00:26:16,770 --> 00:26:19,800
with Linux why ok that's very easy to

527
00:26:19,800 --> 00:26:21,540
understand and then it should work

528
00:26:21,540 --> 00:26:24,720
shouldn't it ok and we know some more

529
00:26:24,720 --> 00:26:26,400
details we know the low level

530
00:26:26,400 --> 00:26:28,140
requirements the low level requirement

531
00:26:28,140 --> 00:26:30,390
would be okay we have a driver set for

532
00:26:30,390 --> 00:26:32,610
this module included somehow in this

533
00:26:32,610 --> 00:26:35,430
hardware units and this shell boot with

534
00:26:35,430 --> 00:26:39,270
Linux why easy this is the world of BFS

535
00:26:39,270 --> 00:26:40,920
we write the requirements we say what we

536
00:26:40,920 --> 00:26:44,490
want and then any distributor will say

537
00:26:44,490 --> 00:26:47,850
ok fine the drivers included and it is

538
00:26:47,850 --> 00:26:51,890
included for Linux X because it's newer

539
00:26:51,890 --> 00:26:55,800
hmm nice but we need it for the old

540
00:26:55,800 --> 00:26:57,480
version ok we can make a bet backward

541
00:26:57,480 --> 00:27:00,510
fine ok we take the back port we try it

542
00:27:00,510 --> 00:27:04,530
out and maybe there's a buck we ask them

543
00:27:04,530 --> 00:27:07,020
by the way how did you test them oh we

544
00:27:07,020 --> 00:27:09,720
did only compile it what do you mean by

545
00:27:09,720 --> 00:27:13,080
test this is the test we did do it well

546
00:27:13,080 --> 00:27:15,270
ok we mean something like you use the

547
00:27:15,270 --> 00:27:17,910
actual hardware and find out whether the

548
00:27:17,910 --> 00:27:21,840
driver really works ah no this is not

549
00:27:21,840 --> 00:27:24,000
our responsibility this is of course we

550
00:27:24,000 --> 00:27:25,620
don't have every hardware this is where

551
00:27:25,620 --> 00:27:27,780
the independent hardware's independent

552
00:27:27,780 --> 00:27:28,290
half of and

553
00:27:28,290 --> 00:27:30,360
coming to the game they should do it

554
00:27:30,360 --> 00:27:33,000
okay fine we have support contracts we

555
00:27:33,000 --> 00:27:36,540
ask them okay yes okay we test it and

556
00:27:36,540 --> 00:27:40,680
our specific problem is not tested yeah

557
00:27:40,680 --> 00:27:42,150
because there's no business case you

558
00:27:42,150 --> 00:27:48,450
have to do it yourself so you end up

559
00:27:48,450 --> 00:27:50,220
with something like this this is a

560
00:27:50,220 --> 00:27:53,520
visualization of a Lorenz attractor the

561
00:27:53,520 --> 00:27:54,750
people laughing are probably also

562
00:27:54,750 --> 00:27:57,480
physicists is a chaotic system and

563
00:27:57,480 --> 00:28:00,510
everybody moves around in a chaotic way

564
00:28:00,510 --> 00:28:02,310
everybody points in all directions and

565
00:28:02,310 --> 00:28:05,940
there's no solution coming so this is

566
00:28:05,940 --> 00:28:09,300
where the gap is how can we fix

567
00:28:09,300 --> 00:28:13,680
something like this actually what you

568
00:28:13,680 --> 00:28:15,570
don't want to do is you don't want to

569
00:28:15,570 --> 00:28:19,020
blindly blue eyed you want to you don't

570
00:28:19,020 --> 00:28:23,600
want to rely on what the contractors say

571
00:28:23,600 --> 00:28:25,760
you're talking in different languages

572
00:28:25,760 --> 00:28:28,080
it's not bad will it's just different

573
00:28:28,080 --> 00:28:31,170
languages you have to somehow make the

574
00:28:31,170 --> 00:28:35,790
languages compatible at first what you

575
00:28:35,790 --> 00:28:37,500
want to create as you want to create

576
00:28:37,500 --> 00:28:41,040
specific customer tests and provide them

577
00:28:41,040 --> 00:28:42,810
provide these test cases to your

578
00:28:42,810 --> 00:28:45,750
manufacturers so they have a good chance

579
00:28:45,750 --> 00:28:47,810
to understand what you really need and

580
00:28:47,810 --> 00:28:50,370
the best way where to put this is

581
00:28:50,370 --> 00:28:53,730
obviously in frame contracts so they can

582
00:28:53,730 --> 00:28:56,310
even see in advance do I want to take

583
00:28:56,310 --> 00:28:59,010
this bit or maybe I'm the wrong partner

584
00:28:59,010 --> 00:29:02,850
maybe I want a 1/2 it the second thing

585
00:29:02,850 --> 00:29:05,130
you want to do is he wants to create an

586
00:29:05,130 --> 00:29:08,400
internal document for the company an ICD

587
00:29:08,400 --> 00:29:11,460
interface control document writing down

588
00:29:11,460 --> 00:29:13,560
all the software come all the hopper

589
00:29:13,560 --> 00:29:14,970
components you have and all the

590
00:29:14,970 --> 00:29:17,760
operating systems you have and test them

591
00:29:17,760 --> 00:29:20,190
using your acceptance tests and make a

592
00:29:20,190 --> 00:29:22,700
matrix what works what doesn't work and

593
00:29:22,700 --> 00:29:26,610
if you do that in a modular way you can

594
00:29:26,610 --> 00:29:30,340
save in a tremendous amount of costs

595
00:29:30,340 --> 00:29:32,800
the third thing you want to do is

596
00:29:32,800 --> 00:29:35,500
obviously to steer and control the

597
00:29:35,500 --> 00:29:38,110
support if you want to escape this

598
00:29:38,110 --> 00:29:40,810
Lorenz extractor somewhere you have to

599
00:29:40,810 --> 00:29:43,410
manage to talk to your providers and

600
00:29:43,410 --> 00:29:45,760
help them understand what you really

601
00:29:45,760 --> 00:29:51,520
want and the last point obviously you

602
00:29:51,520 --> 00:29:53,410
need developers in-house and external

603
00:29:53,410 --> 00:29:58,240
ones who do the actual work what's

604
00:29:58,240 --> 00:30:00,910
really the point here the point here is

605
00:30:00,910 --> 00:30:04,930
that results are only there if you can

606
00:30:04,930 --> 00:30:07,300
understand them even though the

607
00:30:07,300 --> 00:30:09,790
technical solution may exist and may

608
00:30:09,790 --> 00:30:13,720
work out perfectly if there is no

609
00:30:13,720 --> 00:30:16,900
understanding and customer sight what

610
00:30:16,900 --> 00:30:18,820
this means the solution doesn't exist

611
00:30:18,820 --> 00:30:21,520
and in order to make the solution

612
00:30:21,520 --> 00:30:24,460
visible to a company like DFS we need

613
00:30:24,460 --> 00:30:26,770
these test documents we need these

614
00:30:26,770 --> 00:30:29,500
requirements anywhere else it's not

615
00:30:29,500 --> 00:30:36,880
their second challenge lifecycle okay I

616
00:30:36,880 --> 00:30:38,890
told about that before we have eight

617
00:30:38,890 --> 00:30:41,410
years of application lifecycle and we

618
00:30:41,410 --> 00:30:43,390
buy hardware we buy operating systems

619
00:30:43,390 --> 00:30:45,820
and we need support and once we go live

620
00:30:45,820 --> 00:30:47,860
with the systems there the operating

621
00:30:47,860 --> 00:30:49,720
systems out of support okay that's bad

622
00:30:49,720 --> 00:30:53,250
and we have lots of safety requirements

623
00:30:53,250 --> 00:30:55,990
hindering us even if there's a patch and

624
00:30:55,990 --> 00:30:57,450
even if all the documentation is there

625
00:30:57,450 --> 00:31:00,730
we have to safety prove the system and

626
00:31:00,730 --> 00:31:03,460
this will take at least half a year so

627
00:31:03,460 --> 00:31:06,310
that's a problem we have service level 1

628
00:31:06,310 --> 00:31:10,990
& 2 with these drivers licenses and how

629
00:31:10,990 --> 00:31:12,880
can we deal with with something like

630
00:31:12,880 --> 00:31:16,150
this obviously you cannot rely on

631
00:31:16,150 --> 00:31:19,390
manufacturer support even if they

632
00:31:19,390 --> 00:31:22,150
understand what you want to do they will

633
00:31:22,150 --> 00:31:23,710
they will put a price tag that's

634
00:31:23,710 --> 00:31:24,850
incredible

635
00:31:24,850 --> 00:31:27,850
ridiculous it doesn't work so you have

636
00:31:27,850 --> 00:31:31,060
to find another way to make sure that

637
00:31:31,060 --> 00:31:35,290
the life cycle works so what do we do in

638
00:31:35,290 --> 00:31:39,700
DFS to get a grip on that at first we

639
00:31:39,700 --> 00:31:41,320
need revision control down to the

640
00:31:41,320 --> 00:31:42,440
firmware levels

641
00:31:42,440 --> 00:31:44,690
we needed to in order to reduce the

642
00:31:44,690 --> 00:31:47,320
complexity if we don't have control

643
00:31:47,320 --> 00:31:50,660
about what hardware is in use and this

644
00:31:50,660 --> 00:31:54,020
means Hardware number of the revision

645
00:31:54,020 --> 00:31:57,440
number on the PCB and the exact number

646
00:31:57,440 --> 00:31:59,540
of the firmware version we are in deep

647
00:31:59,540 --> 00:32:04,970
problems a real example we bought 90

648
00:32:04,970 --> 00:32:08,270
Network hearts and we do a test for

649
00:32:08,270 --> 00:32:10,400
switch over and two of them don't work

650
00:32:10,400 --> 00:32:14,090
probably they have different different

651
00:32:14,090 --> 00:32:18,080
time interval for takeover so what was

652
00:32:18,080 --> 00:32:21,050
the problem here we found out that the

653
00:32:21,050 --> 00:32:23,090
two network hearts were manufactured in

654
00:32:23,090 --> 00:32:25,610
different country Taiwan versus China

655
00:32:25,610 --> 00:32:28,600
this was the only difference and

656
00:32:28,600 --> 00:32:30,710
obviously you want to know that in

657
00:32:30,710 --> 00:32:35,660
advance the second thing you really want

658
00:32:35,660 --> 00:32:37,910
to do is create a modular standard what

659
00:32:37,910 --> 00:32:40,160
that means I will show you in the next

660
00:32:40,160 --> 00:32:42,980
part of the talk and this includes also

661
00:32:42,980 --> 00:32:47,090
the repairs what means repairs if you

662
00:32:47,090 --> 00:32:49,910
know that you buy hardware and for

663
00:32:49,910 --> 00:32:51,560
example but could be anything else in

664
00:32:51,560 --> 00:32:54,140
video cards and you you know that the

665
00:32:54,140 --> 00:32:56,210
diodes of the Nvidia cards at the

666
00:32:56,210 --> 00:33:00,380
graphics port they break regularly it's

667
00:33:00,380 --> 00:33:02,660
better to take all the graphics cards

668
00:33:02,660 --> 00:33:04,970
solder them out and replace them with

669
00:33:04,970 --> 00:33:08,480
better ones so this is the level we have

670
00:33:08,480 --> 00:33:09,980
the knowledge about the systems and what

671
00:33:09,980 --> 00:33:14,080
we do and last but not least in order

672
00:33:14,080 --> 00:33:16,640
not to make a big stock of hardware

673
00:33:16,640 --> 00:33:18,500
which you never use you have to know

674
00:33:18,500 --> 00:33:21,680
what is your failure rate and you have

675
00:33:21,680 --> 00:33:27,260
to know how this evolves over time third

676
00:33:27,260 --> 00:33:31,160
challenge the regulations and this is

677
00:33:31,160 --> 00:33:34,040
really a big one easy to solve but it's

678
00:33:34,040 --> 00:33:35,340
a big one

679
00:33:35,340 --> 00:33:37,610
in DFS we have lots of regulations

680
00:33:37,610 --> 00:33:40,860
considering the software for example we

681
00:33:40,860 --> 00:33:44,700
have either six and eighty-one whatever

682
00:33:44,700 --> 00:33:48,330
and ISO and blah and of course we also

683
00:33:48,330 --> 00:33:51,320
use the the state-of-the-art processes

684
00:33:51,320 --> 00:33:53,850
what does it really boil - please make

685
00:33:53,850 --> 00:33:55,470
you software structured and write the

686
00:33:55,470 --> 00:33:56,970
requirements document and stuff like

687
00:33:56,970 --> 00:33:59,220
that and write good acceptance tests and

688
00:33:59,220 --> 00:33:59,870
so on and so on

689
00:33:59,870 --> 00:34:02,880
okay that's fine and finally we have the

690
00:34:02,880 --> 00:34:04,830
DFS core processes nobody can know them

691
00:34:04,830 --> 00:34:07,230
only us can know them and somehow we

692
00:34:07,230 --> 00:34:09,418
have to make this comfortable with the

693
00:34:09,418 --> 00:34:13,009
outside world we look like this

694
00:34:17,020 --> 00:34:19,480
so quick introduction for dummies and if

695
00:34:19,480 --> 00:34:21,520
you can take one thing home this would

696
00:34:21,520 --> 00:34:26,440
be the thing how does a software

697
00:34:26,440 --> 00:34:28,949
development process look like for

698
00:34:28,949 --> 00:34:30,790
safety-critical systems

699
00:34:30,790 --> 00:34:33,520
you remember this V model on the left

700
00:34:33,520 --> 00:34:35,290
hand side you have the requirements down

701
00:34:35,290 --> 00:34:37,690
to the code on the right hand side you

702
00:34:37,690 --> 00:34:40,780
have the test cases if you start linking

703
00:34:40,780 --> 00:34:43,540
the requirements to the test cases high

704
00:34:43,540 --> 00:34:45,219
level tests and high level requirements

705
00:34:45,219 --> 00:34:48,550
you have Software Assurance level 4 if

706
00:34:48,550 --> 00:34:50,830
you can link down to the lower level

707
00:34:50,830 --> 00:34:52,119
requirements and link them to other

708
00:34:52,119 --> 00:34:53,949
tests you have Software Assurance level

709
00:34:53,949 --> 00:34:57,250
3 and you link it down to the code then

710
00:34:57,250 --> 00:35:00,130
you have a current level 1 through the

711
00:35:00,130 --> 00:35:02,860
code means every code num every code

712
00:35:02,860 --> 00:35:04,720
part has its requirement every

713
00:35:04,720 --> 00:35:10,270
requirement has its call and this is how

714
00:35:10,270 --> 00:35:11,950
the open source community looks like

715
00:35:11,950 --> 00:35:15,180
from our perspective

716
00:35:15,980 --> 00:35:18,780
what to do there's no common development

717
00:35:18,780 --> 00:35:21,119
process how can we accept the results

718
00:35:21,119 --> 00:35:23,369
the technical solutions are there but we

719
00:35:23,369 --> 00:35:26,270
cannot take them what to do

720
00:35:26,270 --> 00:35:28,920
don't underestimate and this is very

721
00:35:28,920 --> 00:35:30,240
important don't underestimate the

722
00:35:30,240 --> 00:35:32,369
differences in cultures and development

723
00:35:32,369 --> 00:35:34,200
processes which is has on your results

724
00:35:34,200 --> 00:35:38,280
the solution is quite easy we just agree

725
00:35:38,280 --> 00:35:41,220
on the deliverables that's easy

726
00:35:41,220 --> 00:35:44,790
and once we agree on the deliverables we

727
00:35:44,790 --> 00:35:46,710
can use our distributors rather than

728
00:35:46,710 --> 00:35:49,320
suzer we can ask them to shield us

729
00:35:49,320 --> 00:35:51,990
against these open source community by

730
00:35:51,990 --> 00:35:54,150
telling us how do you develop how do you

731
00:35:54,150 --> 00:35:56,820
test we write down the interfaces how we

732
00:35:56,820 --> 00:36:00,690
interact with them and we are fine this

733
00:36:00,690 --> 00:36:05,280
is the trick the fourth challenge is

734
00:36:05,280 --> 00:36:08,280
customer acceptance when you think of a

735
00:36:08,280 --> 00:36:10,859
platform obviously you think at first of

736
00:36:10,859 --> 00:36:14,910
course the problem here is we don't own

737
00:36:14,910 --> 00:36:17,220
the production line because we have

738
00:36:17,220 --> 00:36:19,589
separated the first second level support

739
00:36:19,589 --> 00:36:22,410
from the development so in the end the

740
00:36:22,410 --> 00:36:24,330
guys responsible they have to like our

741
00:36:24,330 --> 00:36:27,750
solution so if we build a standard in a

742
00:36:27,750 --> 00:36:29,490
manner that we say we know the better

743
00:36:29,490 --> 00:36:32,390
way we end up with something like this

744
00:36:32,390 --> 00:36:35,490
obviously not what we want if we want

745
00:36:35,490 --> 00:36:36,690
the customers to build something like

746
00:36:36,690 --> 00:36:39,390
this we need to provide them the right

747
00:36:39,390 --> 00:36:41,820
modules we need to provide them the

748
00:36:41,820 --> 00:36:45,839
results that they can do that work how

749
00:36:45,839 --> 00:36:48,290
do we do it

750
00:36:49,160 --> 00:36:51,720
we built a flexible modular standards

751
00:36:51,720 --> 00:36:53,130
and this is what I will show you now how

752
00:36:53,130 --> 00:36:55,890
it looks like we have to document it we

753
00:36:55,890 --> 00:36:57,570
have to keep it simple and we have to

754
00:36:57,570 --> 00:37:00,599
empower your users and our customers to

755
00:37:00,599 --> 00:37:03,470
use the standard

756
00:37:04,900 --> 00:37:08,259
last but not least challenge testing we

757
00:37:08,259 --> 00:37:10,180
just talked about this in the beginning

758
00:37:10,180 --> 00:37:14,769
of the talk yes you can automate and if

759
00:37:14,769 --> 00:37:16,779
you automate everything you have great

760
00:37:16,779 --> 00:37:20,289
tests but never forget what your test

761
00:37:20,289 --> 00:37:22,809
coverage should be if you don't test

762
00:37:22,809 --> 00:37:25,150
what the customer wants to have this is

763
00:37:25,150 --> 00:37:27,130
the problem and if you know your

764
00:37:27,130 --> 00:37:28,930
customer test two goods you end up with

765
00:37:28,930 --> 00:37:30,910
something like this this is maybe not so

766
00:37:30,910 --> 00:37:36,099
good so how do the modular platforms

767
00:37:36,099 --> 00:37:39,549
look like today we have on the one hand

768
00:37:39,549 --> 00:37:41,380
side we have a hardware platform which

769
00:37:41,380 --> 00:37:43,420
includes all the server systems the

770
00:37:43,420 --> 00:37:46,420
client systems this place KVM monitors

771
00:37:46,420 --> 00:37:49,569
etc etc we have shared common

772
00:37:49,569 --> 00:37:51,579
requirements we agree upon in a board

773
00:37:51,579 --> 00:37:55,119
and we provide service for the frame

774
00:37:55,119 --> 00:37:57,940
contracts we have different persons not

775
00:37:57,940 --> 00:37:59,469
only us but different persons and

776
00:37:59,469 --> 00:38:01,059
product management who take over

777
00:38:01,059 --> 00:38:02,979
responsibility for these frame contracts

778
00:38:02,979 --> 00:38:06,249
and help if there's a support case on

779
00:38:06,249 --> 00:38:07,660
the other side we have the Linux

780
00:38:07,660 --> 00:38:09,729
platform of course it uses this

781
00:38:09,729 --> 00:38:11,979
Enterprise Linux and implements specific

782
00:38:11,979 --> 00:38:14,289
ATC requirements I won't go into details

783
00:38:14,289 --> 00:38:16,200
here if you have questions ask me later

784
00:38:16,200 --> 00:38:19,059
the point here is we have to provide the

785
00:38:19,059 --> 00:38:21,400
same modularity here on that level as we

786
00:38:21,400 --> 00:38:23,289
have for the hardware because the how

787
00:38:23,289 --> 00:38:25,930
that drives the operating system and

788
00:38:25,930 --> 00:38:28,479
obviously our job in the Linux platform

789
00:38:28,479 --> 00:38:31,410
is to make sure the integration works

790
00:38:31,410 --> 00:38:34,839
all of these standards are agreed upon

791
00:38:34,839 --> 00:38:36,759
in an architecture board and I think

792
00:38:36,759 --> 00:38:38,259
this is unique for a big company like

793
00:38:38,259 --> 00:38:41,140
DFS we have an architecture book where

794
00:38:41,140 --> 00:38:43,029
we sit together in every month and

795
00:38:43,029 --> 00:38:44,680
discuss what's coming on in the

796
00:38:44,680 --> 00:38:46,900
architectures in the near future and we

797
00:38:46,900 --> 00:38:49,239
agree upon our standards and we talk

798
00:38:49,239 --> 00:38:50,829
about exceptions and why these

799
00:38:50,829 --> 00:38:55,200
exceptions should be accepted so

800
00:38:56,009 --> 00:38:58,359
actually how does the system

801
00:38:58,359 --> 00:39:00,339
architecture look like what means

802
00:39:00,339 --> 00:39:05,680
modular modular means if we consider if

803
00:39:05,680 --> 00:39:07,180
we keep in mind that in the end

804
00:39:07,180 --> 00:39:08,619
everything together should work

805
00:39:08,619 --> 00:39:10,660
including firmware and and so on and so

806
00:39:10,660 --> 00:39:13,749
on obviously a hardware system includes

807
00:39:13,749 --> 00:39:16,239
the hardware units and the concrete

808
00:39:16,239 --> 00:39:17,560
adaptation like

809
00:39:17,560 --> 00:39:19,780
her liver bio settings its and so on and

810
00:39:19,780 --> 00:39:22,990
so on and in order to reduce the coast

811
00:39:22,990 --> 00:39:25,420
and make it a platform and not single

812
00:39:25,420 --> 00:39:28,690
towers which don't interact with other

813
00:39:28,690 --> 00:39:31,690
people in DFS we have components inside

814
00:39:31,690 --> 00:39:33,280
and modules the component could be a

815
00:39:33,280 --> 00:39:35,500
monitor the module could be a graphics

816
00:39:35,500 --> 00:39:37,450
card networks cards if we have once

817
00:39:37,450 --> 00:39:39,340
approved it if we have someone certified

818
00:39:39,340 --> 00:39:42,790
it you can plug it into any solution the

819
00:39:42,790 --> 00:39:44,890
same holds true obviously for the Linux

820
00:39:44,890 --> 00:39:48,510
platform it should not be something like

821
00:39:48,510 --> 00:39:51,760
like a legacy code it should be very

822
00:39:51,760 --> 00:39:53,800
modular and if there are two different

823
00:39:53,800 --> 00:39:55,780
kind of deployment solutions okay that's

824
00:39:55,780 --> 00:39:59,710
fine we provide the modules the customer

825
00:39:59,710 --> 00:40:03,210
can use it or he can leave it

826
00:40:06,880 --> 00:40:09,310
okay maybe I'll skip that considering

827
00:40:09,310 --> 00:40:14,440
the time so actually what is inside what

828
00:40:14,440 --> 00:40:16,600
is inside the core components of our

829
00:40:16,600 --> 00:40:21,520
Linux platform the first thing is in the

830
00:40:21,520 --> 00:40:23,710
core components we have to provide the

831
00:40:23,710 --> 00:40:26,230
basic functionality the basic

832
00:40:26,230 --> 00:40:28,780
functionality would be we have to have a

833
00:40:28,780 --> 00:40:30,580
stage one we want to boot and install

834
00:40:30,580 --> 00:40:33,520
the system obviously then we want to

835
00:40:33,520 --> 00:40:35,890
configure the system okay that's fine we

836
00:40:35,890 --> 00:40:38,440
can use puppet but not everywhere if

837
00:40:38,440 --> 00:40:41,470
some customers in some tower systems

838
00:40:41,470 --> 00:40:44,170
don't like to use puppet because they

839
00:40:44,170 --> 00:40:46,540
have a real reason for that they have

840
00:40:46,540 --> 00:40:48,880
non UNIX systems Windows systems running

841
00:40:48,880 --> 00:40:52,090
and they cannot use our puppet

842
00:40:52,090 --> 00:40:54,880
deployment in a puppet configuration for

843
00:40:54,880 --> 00:40:56,770
doing their job okay we provide them

844
00:40:56,770 --> 00:41:00,240
some something else and two years later

845
00:41:00,240 --> 00:41:03,550
they see oh there's other tower he

846
00:41:03,550 --> 00:41:05,410
starts using puppets and he is going

847
00:41:05,410 --> 00:41:07,750
better I want to have a tool so we

848
00:41:07,750 --> 00:41:09,670
provide this flexibility on that level

849
00:41:09,670 --> 00:41:12,460
and last but not least we have an

850
00:41:12,460 --> 00:41:14,680
operational mode where we can do stuff

851
00:41:14,680 --> 00:41:17,110
like reconfiguration of the systems and

852
00:41:17,110 --> 00:41:18,550
where we can do something like

853
00:41:18,550 --> 00:41:21,810
monitoring and so on and so on

854
00:41:21,810 --> 00:41:24,340
these are the core components which are

855
00:41:24,340 --> 00:41:26,470
coming every time with a platform and

856
00:41:26,470 --> 00:41:28,780
then we have some kind of optional stuff

857
00:41:28,780 --> 00:41:31,240
which you can use but you don't you are

858
00:41:31,240 --> 00:41:34,330
not forced to use it is one thing to

859
00:41:34,330 --> 00:41:38,020
create a platform and say okay if I want

860
00:41:38,020 --> 00:41:40,390
to have something like I want to boot

861
00:41:40,390 --> 00:41:43,000
suza and read it so I write my own boot

862
00:41:43,000 --> 00:41:44,800
loader I write my own code yes you can

863
00:41:44,800 --> 00:41:47,710
do it but in the end you cannot make a

864
00:41:47,710 --> 00:41:50,890
better job with limited manpower you

865
00:41:50,890 --> 00:41:52,210
cannot make a better job than the

866
00:41:52,210 --> 00:41:53,890
distributors it's better to lower the

867
00:41:53,890 --> 00:41:55,390
light and rely on the distributor's

868
00:41:55,390 --> 00:41:58,000
solution and write your own binary code

869
00:41:58,000 --> 00:42:01,450
which comes after that and then we can

870
00:42:01,450 --> 00:42:02,980
provide these modules so what are the

871
00:42:02,980 --> 00:42:05,530
technologies we have inside this would

872
00:42:05,530 --> 00:42:08,380
be a completely different talk we use

873
00:42:08,380 --> 00:42:12,040
puppet and over the long term maybe two

874
00:42:12,040 --> 00:42:15,230
words on that over the long term

875
00:42:15,230 --> 00:42:18,500
there are big pitfalls if you use puppet

876
00:42:18,500 --> 00:42:22,040
if you start using puppets and consider

877
00:42:22,040 --> 00:42:24,800
that the idea of capitis you write a

878
00:42:24,800 --> 00:42:26,930
nice configuration and afterwards it's

879
00:42:26,930 --> 00:42:31,550
very portable ok nice a lifecycle of 80s

880
00:42:31,550 --> 00:42:34,550
is not too long you you should consider

881
00:42:34,550 --> 00:42:37,460
that maybe maybe you expect that

882
00:42:37,460 --> 00:42:39,410
everything works the same with the new

883
00:42:39,410 --> 00:42:41,540
distribution you just make an update but

884
00:42:41,540 --> 00:42:43,640
the configuration in fact stays the same

885
00:42:43,640 --> 00:42:49,220
it is not so what we did now is we said

886
00:42:49,220 --> 00:42:53,480
we we reduce the allowed command set to

887
00:42:53,480 --> 00:42:56,000
the basic stuff with what we really can

888
00:42:56,000 --> 00:42:58,970
control which will not change and the

889
00:42:58,970 --> 00:43:01,490
things like like templates stuff and so

890
00:43:01,490 --> 00:43:04,190
on and so on we create our own solutions

891
00:43:04,190 --> 00:43:06,590
because over the long term they are more

892
00:43:06,590 --> 00:43:10,060
stable when it comes to the interfaces

893
00:43:10,060 --> 00:43:13,880
so finally one different view on those

894
00:43:13,880 --> 00:43:16,970
platforms how can you make this platform

895
00:43:16,970 --> 00:43:20,180
and it's on the one hand side it is

896
00:43:20,180 --> 00:43:23,090
safety and on the other hand side it is

897
00:43:23,090 --> 00:43:25,850
flexible you have to use the language of

898
00:43:25,850 --> 00:43:28,400
your customer and the language of the

899
00:43:28,400 --> 00:43:31,280
customer is like that we use

900
00:43:31,280 --> 00:43:33,140
requirements documents and test

901
00:43:33,140 --> 00:43:34,940
documents but here I show the

902
00:43:34,940 --> 00:43:37,010
requirements documents if you want to

903
00:43:37,010 --> 00:43:39,800
make it modular you describe the

904
00:43:39,800 --> 00:43:41,420
hardware standard in one set of

905
00:43:41,420 --> 00:43:45,590
requirements the blue ones here you

906
00:43:45,590 --> 00:43:47,780
describe the Linux platform part in

907
00:43:47,780 --> 00:43:49,550
another set of requirements high level

908
00:43:49,550 --> 00:43:52,400
low level design document and so on the

909
00:43:52,400 --> 00:43:55,970
green ones and the customer brings his

910
00:43:55,970 --> 00:43:58,190
own configuration his own requirements

911
00:43:58,190 --> 00:44:00,410
and says ok I'm compatible with this

912
00:44:00,410 --> 00:44:03,850
platform and I use these interfaces

913
00:44:03,850 --> 00:44:07,400
what's the big difference here we only

914
00:44:07,400 --> 00:44:11,359
have to agree with all roughly 70

915
00:44:11,359 --> 00:44:14,330
customers 70 different products we only

916
00:44:14,330 --> 00:44:17,210
have to agree upon these interfaces and

917
00:44:17,210 --> 00:44:19,250
we can creat our requirements very

918
00:44:19,250 --> 00:44:21,410
stable and they are not touch even as if

919
00:44:21,410 --> 00:44:23,570
the customer comes up with some fancy

920
00:44:23,570 --> 00:44:26,230
requirements

921
00:44:26,779 --> 00:44:32,099
so what's next the next steps for us are

922
00:44:32,099 --> 00:44:36,029
when it comes to platform we continue to

923
00:44:36,029 --> 00:44:41,099
shrink the core platform even more we

924
00:44:41,099 --> 00:44:43,499
have reached the number of 10,000

925
00:44:43,499 --> 00:44:47,490
systems and we have such a good user

926
00:44:47,490 --> 00:44:49,829
acceptance of our puppet configurations

927
00:44:49,829 --> 00:44:51,119
that we were able to give the

928
00:44:51,119 --> 00:44:52,650
configurations away to the product

929
00:44:52,650 --> 00:44:55,319
management and to the first and second

930
00:44:55,319 --> 00:44:58,920
level support so we can take a step back

931
00:44:58,920 --> 00:45:01,829
and redesign our platform focus it on

932
00:45:01,829 --> 00:45:05,160
the core concepts when it comes to

933
00:45:05,160 --> 00:45:07,999
hardware platform what is the next step

934
00:45:07,999 --> 00:45:11,039
obviously we want to include include

935
00:45:11,039 --> 00:45:13,589
more modules there are a lot of legacy

936
00:45:13,589 --> 00:45:17,579
legacy systems and they continue to be

937
00:45:17,579 --> 00:45:20,369
replaced and all the new hardware we

938
00:45:20,369 --> 00:45:22,230
want to include in our standard

939
00:45:22,230 --> 00:45:28,819
obviously when it comes to technologies

940
00:45:28,819 --> 00:45:32,009
we are currently developing the first

941
00:45:32,009 --> 00:45:35,819
ATC the first ATC application using

942
00:45:35,819 --> 00:45:38,640
container technology in in that case it

943
00:45:38,640 --> 00:45:42,690
is docker and it is the core component

944
00:45:42,690 --> 00:45:45,769
for networking so quite important

945
00:45:45,769 --> 00:45:48,059
technology and of course we will also

946
00:45:48,059 --> 00:45:53,940
include this in our platform and when it

947
00:45:53,940 --> 00:45:55,619
really comes to software developments

948
00:45:55,619 --> 00:45:57,660
the biggest challenge for us currently

949
00:45:57,660 --> 00:46:01,859
is the security requirements so far

950
00:46:01,859 --> 00:46:04,200
everything atolls all the problems we

951
00:46:04,200 --> 00:46:09,089
solve the safety requirements in the

952
00:46:09,089 --> 00:46:10,829
world we are living now security becomes

953
00:46:10,829 --> 00:46:14,069
more important and we are rated as a

954
00:46:14,069 --> 00:46:17,730
critical infrastructure this means we

955
00:46:17,730 --> 00:46:21,859
have completely different requirements

956
00:46:21,859 --> 00:46:25,079
demanding security and the problem here

957
00:46:25,079 --> 00:46:27,809
is that security and safety are

958
00:46:27,809 --> 00:46:30,040
completely different things

959
00:46:30,040 --> 00:46:32,500
there's a completely different thing to

960
00:46:32,500 --> 00:46:34,150
say I want to create a safe system I

961
00:46:34,150 --> 00:46:36,390
love failure and it's somehow

962
00:46:36,390 --> 00:46:38,320
encapsulated in a box and nobody can

963
00:46:38,320 --> 00:46:40,900
access it then if you say I wants to

964
00:46:40,900 --> 00:46:42,640
secure my system I want to have secure

965
00:46:42,640 --> 00:46:44,230
software I want to do for example life

966
00:46:44,230 --> 00:46:47,620
patching I want to include software

967
00:46:47,620 --> 00:46:50,280
updates half a year rate is not enough

968
00:46:50,280 --> 00:46:53,110
so how to solve that this is really a

969
00:46:53,110 --> 00:46:57,240
big challenge for us so to sum it up

970
00:46:57,240 --> 00:46:59,560
what did we achieve in the last ten

971
00:46:59,560 --> 00:47:01,480
years we successfully built this

972
00:47:01,480 --> 00:47:05,290
platform and it's widely accepted in our

973
00:47:05,290 --> 00:47:09,190
business and not even in DFS we are

974
00:47:09,190 --> 00:47:10,690
currently providing the operating

975
00:47:10,690 --> 00:47:13,270
systems for the European system for Ike

976
00:47:13,270 --> 00:47:16,960
us and this is relevance for the whole

977
00:47:16,960 --> 00:47:20,440
uu European Union we have shown

978
00:47:20,440 --> 00:47:22,720
successfully that is possible to create

979
00:47:22,720 --> 00:47:24,940
mission critical systems and fulfill

980
00:47:24,940 --> 00:47:27,940
these safety requirements with Linux it

981
00:47:27,940 --> 00:47:31,060
works and in the end we achieved the

982
00:47:31,060 --> 00:47:33,340
results and we had a lots of fun on our

983
00:47:33,340 --> 00:47:37,090
way so what is my main point our main

984
00:47:37,090 --> 00:47:41,050
point is here if I really understand the

985
00:47:41,050 --> 00:47:44,620
core the core processes and the core

986
00:47:44,620 --> 00:47:47,020
results I want to achieve both

987
00:47:47,020 --> 00:47:49,630
internally of my customer and if I

988
00:47:49,630 --> 00:47:51,430
understand the community that means you

989
00:47:51,430 --> 00:47:53,440
you are actually contributing to our

990
00:47:53,440 --> 00:47:55,810
stuff if I understand that it is

991
00:47:55,810 --> 00:47:57,670
possible to use Linux in a

992
00:47:57,670 --> 00:48:00,670
mission-critical system thank you

993
00:48:00,670 --> 00:48:04,090
[Applause]

994
00:48:07,260 --> 00:48:09,960
[Music]

995
00:48:09,960 --> 00:48:14,159
[Applause]

