1
00:00:05,700 --> 00:00:09,969
the next speaker is Robert Turkey and he

2
00:00:09,969 --> 00:00:12,400
will talk about how to improve

3
00:00:12,400 --> 00:00:15,209
documentation

4
00:00:20,990 --> 00:00:24,019
hello everyone thanks very interested in

5
00:00:24,019 --> 00:00:26,079
this topic I apologize for the technical

6
00:00:26,079 --> 00:00:29,390
difficulties it wouldn't be a conference

7
00:00:29,390 --> 00:00:31,820
without many others anyway the topic of

8
00:00:31,820 --> 00:00:34,430
this presentation is reaching the gap

9
00:00:34,430 --> 00:00:37,370
between legacy documentation and modular

10
00:00:37,370 --> 00:00:39,949
content and what I mean by that is

11
00:00:39,949 --> 00:00:43,699
basically two aspects of documentation

12
00:00:43,699 --> 00:00:46,940
that technical writers at Red Hat are

13
00:00:46,940 --> 00:00:49,970
trying to solve that is the user

14
00:00:49,970 --> 00:00:51,800
experience with documentation at the

15
00:00:51,800 --> 00:00:54,170
same time the amount of work the

16
00:00:54,170 --> 00:00:56,179
maintenance work that documentation

17
00:00:56,179 --> 00:01:00,949
writers have to do so first I would like

18
00:01:00,949 --> 00:01:03,530
to outline what I'm gonna talk about in

19
00:01:03,530 --> 00:01:07,369
this presentation I will try to provide

20
00:01:07,369 --> 00:01:10,160
an introduction but why we even do that

21
00:01:10,160 --> 00:01:12,590
what do you what do we think that it's

22
00:01:12,590 --> 00:01:15,289
time to rethink that the way we do

23
00:01:15,289 --> 00:01:18,200
documentation I also talk about the

24
00:01:18,200 --> 00:01:20,960
terminology what's in the title of the

25
00:01:20,960 --> 00:01:22,580
presentation what I understand when I

26
00:01:22,580 --> 00:01:26,149
say legacy documentation and what I mean

27
00:01:26,149 --> 00:01:30,229
by modular content I will then apply

28
00:01:30,229 --> 00:01:32,600
what we think is the problem with this

29
00:01:32,600 --> 00:01:35,899
so-called legacy documentation I will

30
00:01:35,899 --> 00:01:37,640
try to explain why I even think that

31
00:01:37,640 --> 00:01:39,140
there is actually too much of the

32
00:01:39,140 --> 00:01:44,719
documentation and I will explain why

33
00:01:44,719 --> 00:01:47,509
this hard to find and how we hope to fix

34
00:01:47,509 --> 00:01:50,329
that and in the main parts of the

35
00:01:50,329 --> 00:01:54,649
presentation I will try to introduce

36
00:01:54,649 --> 00:01:56,930
what we think could be a solution to one

37
00:01:56,930 --> 00:01:58,219
of those problems and to all of those

38
00:01:58,219 --> 00:02:01,189
problems that I mentioned first of all

39
00:02:01,189 --> 00:02:03,649
we will try to cut down on the amount of

40
00:02:03,649 --> 00:02:05,979
content that we actually maintain and

41
00:02:05,979 --> 00:02:09,820
that the documentation entails by

42
00:02:09,820 --> 00:02:12,470
document only what the users really need

43
00:02:12,470 --> 00:02:14,690
to really need to adapt

44
00:02:14,690 --> 00:02:17,600
we've also talked about how to

45
00:02:17,600 --> 00:02:19,549
facilitate the single sourcing of the

46
00:02:19,549 --> 00:02:20,910
documentation so that we can

47
00:02:20,910 --> 00:02:23,540
upstream and downstream closer together

48
00:02:23,540 --> 00:02:27,620
and in the main part

49
00:02:27,620 --> 00:02:31,560
what is modular documentation and how do

50
00:02:31,560 --> 00:02:34,320
we how do you hope to achieve all of the

51
00:02:34,320 --> 00:02:38,460
above by switching to a module form of

52
00:02:38,460 --> 00:02:41,580
documentation last but at least I would

53
00:02:41,580 --> 00:02:44,310
like to at the end save some time to

54
00:02:44,310 --> 00:02:46,470
invite your questions and to have a

55
00:02:46,470 --> 00:02:48,000
discussion about what your experience

56
00:02:48,000 --> 00:02:52,140
with documentation is and what you with

57
00:02:52,140 --> 00:02:54,830
your project or your organization does

58
00:02:54,830 --> 00:02:57,990
in this area and if you're facing

59
00:02:57,990 --> 00:03:02,520
similar problems and so on so let's get

60
00:03:02,520 --> 00:03:04,940
started shall we

61
00:03:04,940 --> 00:03:08,760
about the introduction first of all the

62
00:03:08,760 --> 00:03:11,220
question is why why we think that it is

63
00:03:11,220 --> 00:03:13,800
high time that we rethought the way we

64
00:03:13,800 --> 00:03:18,600
do documentation I like to point out to

65
00:03:18,600 --> 00:03:20,430
two main aspects of that I like to

66
00:03:20,430 --> 00:03:23,430
illustrate that into two problems or two

67
00:03:23,430 --> 00:03:27,000
areas in which the software landscape is

68
00:03:27,000 --> 00:03:29,010
changing and that is software packaging

69
00:03:29,010 --> 00:03:32,160
and software delivery we've been for a

70
00:03:32,160 --> 00:03:35,430
long time used to these big monolithic

71
00:03:35,430 --> 00:03:37,740
mostly distributions where there would

72
00:03:37,740 --> 00:03:39,180
be hundreds or even thousands of

73
00:03:39,180 --> 00:03:41,040
packages they would be sitting in

74
00:03:41,040 --> 00:03:43,110
repositories or you would get a CD or a

75
00:03:43,110 --> 00:03:46,800
DVD you would install the thing and then

76
00:03:46,800 --> 00:03:48,240
you would have to kind of sort through

77
00:03:48,240 --> 00:03:50,340
it and find the stuff that you know

78
00:03:50,340 --> 00:03:51,690
really matters for you if you were

79
00:03:51,690 --> 00:03:53,610
concerned about performance or security

80
00:03:53,610 --> 00:03:56,370
then you would have to you know cut down

81
00:03:56,370 --> 00:03:58,230
on that you would you know get rid of

82
00:03:58,230 --> 00:03:59,489
all the stuff that you don't really need

83
00:03:59,489 --> 00:03:59,910
it

84
00:03:59,910 --> 00:04:04,200
and that is changing you know not that

85
00:04:04,200 --> 00:04:06,030
you know all applications would be

86
00:04:06,030 --> 00:04:08,489
containerized now but that is definitely

87
00:04:08,489 --> 00:04:12,420
a big part of how applications are being

88
00:04:12,420 --> 00:04:14,820
deployed and how they are being packaged

89
00:04:14,820 --> 00:04:17,640
and there are other ways to package

90
00:04:17,640 --> 00:04:20,880
applications that are not the same as

91
00:04:20,880 --> 00:04:22,530
they used to be and the documentation

92
00:04:22,530 --> 00:04:28,230
history flag that we need to try to make

93
00:04:28,230 --> 00:04:29,430
the documentation

94
00:04:29,430 --> 00:04:33,000
work with those new scenarios as well

95
00:04:33,000 --> 00:04:36,250
with regard to software delivery again

96
00:04:36,250 --> 00:04:38,740
we've been used to more or less regular

97
00:04:38,740 --> 00:04:41,620
release cycles it could be that the

98
00:04:41,620 --> 00:04:43,240
distribution or a piece of software or

99
00:04:43,240 --> 00:04:45,280
project would have a release every six

100
00:04:45,280 --> 00:04:47,890
months or 12 months or even if the

101
00:04:47,890 --> 00:04:51,550
cadence of the release would not be in

102
00:04:51,550 --> 00:04:53,440
any way regular it would still follow

103
00:04:53,440 --> 00:04:55,540
the sort of a traditional versioning

104
00:04:55,540 --> 00:04:59,140
scheme by you know 1.0 1.1 1.2 then

105
00:04:59,140 --> 00:05:01,450
there would be 2.0 and the documentation

106
00:05:01,450 --> 00:05:03,310
tended to follow that there would be a

107
00:05:03,310 --> 00:05:05,050
release of documentation you know for

108
00:05:05,050 --> 00:05:07,240
the 2.0 version and then then there

109
00:05:07,240 --> 00:05:08,170
would be another release of

110
00:05:08,170 --> 00:05:10,990
documentation but then there came

111
00:05:10,990 --> 00:05:14,050
rolling updates and nowadays there are

112
00:05:14,050 --> 00:05:15,940
web applications that are being deployed

113
00:05:15,940 --> 00:05:19,510
most of the times today and the sort of

114
00:05:19,510 --> 00:05:21,280
documentation that is tied to these

115
00:05:21,280 --> 00:05:24,040
release cycles is not exactly covering

116
00:05:24,040 --> 00:05:26,230
that it doesn't really cut it for these

117
00:05:26,230 --> 00:05:29,230
scenarios it should be the way the

118
00:05:29,230 --> 00:05:31,120
documentation is released and presented

119
00:05:31,120 --> 00:05:37,600
a lot more fluid flexible and about the

120
00:05:37,600 --> 00:05:41,260
terminology by a legacy documentation I

121
00:05:41,260 --> 00:05:42,760
mean the sort of documentation that I

122
00:05:42,760 --> 00:05:45,240
touched upon with those releases the

123
00:05:45,240 --> 00:05:48,130
documentation that is tied to individual

124
00:05:48,130 --> 00:05:51,610
releases it's those big guides or books

125
00:05:51,610 --> 00:05:54,580
and they tend to be comprehensive and

126
00:05:54,580 --> 00:05:56,830
complete while there's nothing wrong

127
00:05:56,830 --> 00:05:59,050
with that it tends to also create a

128
00:05:59,050 --> 00:06:01,390
whole lot of amount of documentation and

129
00:06:01,390 --> 00:06:03,790
they're based on features they describe

130
00:06:03,790 --> 00:06:05,350
every individual feature that the

131
00:06:05,350 --> 00:06:08,770
project or software has the ten B use

132
00:06:08,770 --> 00:06:14,740
and as I said it's important to

133
00:06:14,740 --> 00:06:16,360
emphasize that there is nothing

134
00:06:16,360 --> 00:06:18,100
inherently wrong with that sort of

135
00:06:18,100 --> 00:06:20,800
approach and in an ideal world we would

136
00:06:20,800 --> 00:06:22,420
have that as well as other types of

137
00:06:22,420 --> 00:06:24,550
documentation but in a world where you

138
00:06:24,550 --> 00:06:25,990
have to choose where we spend our

139
00:06:25,990 --> 00:06:29,560
resources it might be time to look for

140
00:06:29,560 --> 00:06:32,680
something else where modular

141
00:06:32,680 --> 00:06:34,759
documentation comes in the picture

142
00:06:34,759 --> 00:06:38,449
and that documentation differs from the

143
00:06:38,449 --> 00:06:41,749
sort of guide like documentation in that

144
00:06:41,749 --> 00:06:44,389
is based on individual user stories so

145
00:06:44,389 --> 00:06:46,969
it doesn't strive for comprehensiveness

146
00:06:46,969 --> 00:06:49,629
it doesn't even try to be complete

147
00:06:49,629 --> 00:06:52,419
instead it tries to be highly targeted

148
00:06:52,419 --> 00:06:57,349
it goes after specific goals and it's in

149
00:06:57,349 --> 00:07:00,639
concise independent standalone

150
00:07:00,639 --> 00:07:03,319
self-sufficient units of content that

151
00:07:03,319 --> 00:07:06,469
can be grouped and regrouped in order to

152
00:07:06,469 --> 00:07:09,110
achieve documentation to describe

153
00:07:09,110 --> 00:07:12,259
describe specific purposes that goes

154
00:07:12,259 --> 00:07:17,529
after specific goals now I would like to

155
00:07:17,529 --> 00:07:19,669
illustrate the difference between

156
00:07:19,669 --> 00:07:21,229
feature based documentation and

157
00:07:21,229 --> 00:07:22,580
documentation that is based on user

158
00:07:22,580 --> 00:07:26,360
stories in a simple example on the left

159
00:07:26,360 --> 00:07:29,870
here there is a silly example of a

160
00:07:29,870 --> 00:07:31,969
feature based documentation it tries to

161
00:07:31,969 --> 00:07:33,919
describe all the features it tries to be

162
00:07:33,919 --> 00:07:36,409
comprehensive I'm going to give you a

163
00:07:36,409 --> 00:07:39,370
second to read through that

164
00:07:46,260 --> 00:07:50,990
now are we good let's compare that with

165
00:07:50,990 --> 00:07:53,820
example on the right this one is based

166
00:07:53,820 --> 00:07:57,990
on a specific user story and it tries to

167
00:07:57,990 --> 00:08:00,270
describe how to take the user from A to

168
00:08:00,270 --> 00:08:02,730
B it's about a specific goal

169
00:08:02,730 --> 00:08:07,910
it's about accomplishing a concrete task

170
00:08:09,470 --> 00:08:13,670
again take a second to read through that

171
00:08:21,479 --> 00:08:23,069
now when you're looking at those two

172
00:08:23,069 --> 00:08:25,349
sides those two examples as I said

173
00:08:25,349 --> 00:08:27,569
before it's important to recognize that

174
00:08:27,569 --> 00:08:29,129
there is nothing wrong with the one on

175
00:08:29,129 --> 00:08:32,760
the left its feature based documentation

176
00:08:32,760 --> 00:08:34,860
is the sort of reference kind of guide

177
00:08:34,860 --> 00:08:40,948
and it has its uses however for many

178
00:08:40,948 --> 00:08:43,139
users unless there are really well

179
00:08:43,139 --> 00:08:45,589
versed in this sort of project or

180
00:08:45,589 --> 00:08:52,889
features or distribution for those users

181
00:08:52,889 --> 00:08:54,720
to find their way around this sort of

182
00:08:54,720 --> 00:08:56,310
documentation they need to be

183
00:08:56,310 --> 00:08:57,810
experienced they need to have a lot of

184
00:08:57,810 --> 00:09:00,149
time on their hands and it doesn't make

185
00:09:00,149 --> 00:09:02,730
it very easy for them to to use this

186
00:09:02,730 --> 00:09:04,170
documentation to accomplish specific

187
00:09:04,170 --> 00:09:07,980
tasks so as I said in an ideal world we

188
00:09:07,980 --> 00:09:10,589
would have both we would have the one on

189
00:09:10,589 --> 00:09:11,970
the right that would guide the users

190
00:09:11,970 --> 00:09:12,959
when they need to solve a specific

191
00:09:12,959 --> 00:09:15,149
problem and when they need it to be done

192
00:09:15,149 --> 00:09:17,519
yesterday then of course we were also

193
00:09:17,519 --> 00:09:19,410
having the one on the left that will be

194
00:09:19,410 --> 00:09:21,570
there to describe the stuff as it

195
00:09:21,570 --> 00:09:23,070
happens how the system functions what

196
00:09:23,070 --> 00:09:25,199
the background is how the features are

197
00:09:25,199 --> 00:09:30,630
laid out so as I will talk about it in

198
00:09:30,630 --> 00:09:34,319
the later part of the presentation we

199
00:09:34,319 --> 00:09:37,620
try to facilitate the scenario where the

200
00:09:37,620 --> 00:09:38,610
one on the right

201
00:09:38,610 --> 00:09:40,500
pays the user from A to B but at the

202
00:09:40,500 --> 00:09:43,319
same time the sort of modular

203
00:09:43,319 --> 00:09:45,269
documentation that we create would allow

204
00:09:45,269 --> 00:09:46,889
the user to experience the state of it

205
00:09:46,889 --> 00:09:48,660
the same sort of experience that they

206
00:09:48,660 --> 00:09:51,600
have the example under on the left and

207
00:09:51,600 --> 00:09:55,019
by the way as I included down there when

208
00:09:55,019 --> 00:09:57,180
I talk about user stories I tend to take

209
00:09:57,180 --> 00:09:59,790
the sort of a standard edge hire like

210
00:09:59,790 --> 00:10:04,470
template me name I'm a sort of a user I

211
00:10:04,470 --> 00:10:07,019
want to accomplish something so that I

212
00:10:07,019 --> 00:10:10,740
have some sort of an outcome are there

213
00:10:10,740 --> 00:10:13,709
any questions at this point before I go

214
00:10:13,709 --> 00:10:16,069
any further

215
00:10:18,180 --> 00:10:22,870
hey cool now let me try to describe what

216
00:10:22,870 --> 00:10:25,570
the problems are the main the main

217
00:10:25,570 --> 00:10:27,340
aspects of the problems with the legacy

218
00:10:27,340 --> 00:10:29,800
documentation the sort of documentation

219
00:10:29,800 --> 00:10:33,070
that is based on features and that is

220
00:10:33,070 --> 00:10:35,980
compiled in those big large books or

221
00:10:35,980 --> 00:10:41,530
guides now in that first bullet there is

222
00:10:41,530 --> 00:10:43,450
a sort of a cliche that nobody likes to

223
00:10:43,450 --> 00:10:46,210
write dogs well it's not really true

224
00:10:46,210 --> 00:10:47,980
that nowhere likes to ride dogs the

225
00:10:47,980 --> 00:10:50,110
problem is when there's too much of that

226
00:10:50,110 --> 00:10:52,540
when the content accumulates over time

227
00:10:52,540 --> 00:10:54,700
where you have multiple versions and

228
00:10:54,700 --> 00:10:56,530
then you have to maintain documentation

229
00:10:56,530 --> 00:10:59,350
for that version and another version and

230
00:10:59,350 --> 00:11:00,880
over time there is just too much of it

231
00:11:00,880 --> 00:11:03,220
it becomes very difficult to maintain

232
00:11:03,220 --> 00:11:05,140
and nobody's really excited about

233
00:11:05,140 --> 00:11:07,990
maintaining stuff that's you know that

234
00:11:07,990 --> 00:11:10,120
is being valid three or four years ago

235
00:11:10,120 --> 00:11:12,130
and it's still valid for certain users

236
00:11:12,130 --> 00:11:14,590
who still have that deployed somewhere

237
00:11:14,590 --> 00:11:17,380
but when there's a new contributor they

238
00:11:17,380 --> 00:11:18,940
usually want to work on something is new

239
00:11:18,940 --> 00:11:21,400
that's they want to describe stuff that

240
00:11:21,400 --> 00:11:22,950
they know about they want to describe

241
00:11:22,950 --> 00:11:26,250
how to have the perform a specific task

242
00:11:26,250 --> 00:11:29,800
so now comes the cliche or what I likes

243
00:11:29,800 --> 00:11:31,839
to ride dogs because it has become

244
00:11:31,839 --> 00:11:35,589
tedious to maintain those guys and it

245
00:11:35,589 --> 00:11:37,770
also invites a lot of duplication

246
00:11:37,770 --> 00:11:41,320
because you know there are different

247
00:11:41,320 --> 00:11:45,089
sets of dogs for different versions and

248
00:11:45,089 --> 00:11:48,460
the content tends to be used reused but

249
00:11:48,460 --> 00:11:50,800
not really nicely and if it's updated in

250
00:11:50,800 --> 00:11:53,290
the new one it tends to be overlooked in

251
00:11:53,290 --> 00:11:56,700
the old one anyway it leads to

252
00:11:56,700 --> 00:11:59,080
documentation that tends to become

253
00:11:59,080 --> 00:11:59,770
obsolete

254
00:11:59,770 --> 00:12:04,960
that's a problem secondly the

255
00:12:04,960 --> 00:12:07,240
documentation is hard to find and by

256
00:12:07,240 --> 00:12:09,100
that I don't mean that it would be hard

257
00:12:09,100 --> 00:12:11,410
to google for documentation and you

258
00:12:11,410 --> 00:12:13,960
wouldn't find you know for example in

259
00:12:13,960 --> 00:12:17,380
fedora we have an administration guy we

260
00:12:17,380 --> 00:12:19,390
have an installation guide a security

261
00:12:19,390 --> 00:12:23,110
guy networking guide but and there is a

262
00:12:23,110 --> 00:12:24,680
user who wants to

263
00:12:24,680 --> 00:12:27,080
you know configure or SSH to be able to

264
00:12:27,080 --> 00:12:29,930
securely conic connect the remote server

265
00:12:29,930 --> 00:12:32,990
what did they use well they probably

266
00:12:32,990 --> 00:12:34,460
need to find something in the

267
00:12:34,460 --> 00:12:36,470
installation guide as well as in the

268
00:12:36,470 --> 00:12:37,730
security guy it's about security

269
00:12:37,730 --> 00:12:40,910
afterall it's also about networking so

270
00:12:40,910 --> 00:12:42,290
they will have to find something in the

271
00:12:42,290 --> 00:12:44,330
networking guide and the system

272
00:12:44,330 --> 00:12:46,190
administration guide well there's

273
00:12:46,190 --> 00:12:47,360
probably gonna be a little bit of that

274
00:12:47,360 --> 00:12:50,180
as well in reality they would need to

275
00:12:50,180 --> 00:12:53,060
sort of carry big pieces out of all of

276
00:12:53,060 --> 00:12:55,580
those guides and while it's possible

277
00:12:55,580 --> 00:12:57,740
it's certainly not exactly user friendly

278
00:12:57,740 --> 00:12:59,630
and it takes the people a lot of time

279
00:12:59,630 --> 00:13:01,490
and the user needs to be familiar what's

280
00:13:01,490 --> 00:13:06,980
inside all of those guides well so what

281
00:13:06,980 --> 00:13:08,600
they do well they google it

282
00:13:08,600 --> 00:13:10,310
they end up going through somewhere as a

283
00:13:10,310 --> 00:13:11,660
stack overflow or something like that

284
00:13:11,660 --> 00:13:14,330
and while there's nothing wrong with

285
00:13:14,330 --> 00:13:16,190
finding your answer I'd stay over flow

286
00:13:16,190 --> 00:13:19,010
it tends to indicate that there's

287
00:13:19,010 --> 00:13:20,570
actually some deficiency with your

288
00:13:20,570 --> 00:13:22,970
documentation because the user instead

289
00:13:22,970 --> 00:13:24,589
of being able to find the documentation

290
00:13:24,589 --> 00:13:27,110
that you have produced well they try to

291
00:13:27,110 --> 00:13:30,680
find somewhere else vastly the

292
00:13:30,680 --> 00:13:33,350
documentation is very hard to navigate

293
00:13:33,350 --> 00:13:35,420
because those guides tend to be very

294
00:13:35,420 --> 00:13:37,790
long and while it's useful for you know

295
00:13:37,790 --> 00:13:41,540
control-f searching it's definitely not

296
00:13:41,540 --> 00:13:44,209
useful for navigation there's no

297
00:13:44,209 --> 00:13:46,910
hierarchy usually and the experience is

298
00:13:46,910 --> 00:13:50,300
very hard to customize because when you

299
00:13:50,300 --> 00:13:52,040
take those guys and you want to save

300
00:13:52,040 --> 00:13:53,720
them for example for offline use

301
00:13:53,720 --> 00:13:57,700
well you get a humungous PDF or a huge

302
00:13:57,700 --> 00:14:00,529
pile of HTML s that you have to browse

303
00:14:00,529 --> 00:14:04,640
you cannot really find and take only the

304
00:14:04,640 --> 00:14:08,300
stuff that you want so well of course it

305
00:14:08,300 --> 00:14:11,000
leads to people saying this which may or

306
00:14:11,000 --> 00:14:12,709
may not be true but we're not exactly

307
00:14:12,709 --> 00:14:15,220
happy about that

308
00:14:15,220 --> 00:14:18,640
any questions

309
00:14:19,040 --> 00:14:24,060
let's go forward about how we would like

310
00:14:24,060 --> 00:14:27,120
to go about solving these problems well

311
00:14:27,120 --> 00:14:29,339
we recognize that our solution is not

312
00:14:29,339 --> 00:14:33,060
the one fits all size but we tend to

313
00:14:33,060 --> 00:14:34,860
think from experimentation and from

314
00:14:34,860 --> 00:14:37,709
conversation with support people and

315
00:14:37,709 --> 00:14:40,230
with the communities that it could be a

316
00:14:40,230 --> 00:14:43,500
way to go forward so first of all you

317
00:14:43,500 --> 00:14:45,779
would really like to concentrate on the

318
00:14:45,779 --> 00:14:49,769
stuff that the users really need and in

319
00:14:49,769 --> 00:14:51,449
order to do that in order to be able to

320
00:14:51,449 --> 00:14:54,120
cut down on the amount of content to

321
00:14:54,120 --> 00:14:57,149
ease the maintenance burden we need to

322
00:14:57,149 --> 00:15:00,509
identify user stories that are really

323
00:15:00,509 --> 00:15:03,810
valid for users we need to work with the

324
00:15:03,810 --> 00:15:05,490
community we need to work with the

325
00:15:05,490 --> 00:15:08,069
engineers we need to work with support

326
00:15:08,069 --> 00:15:11,339
organizations and find the user stories

327
00:15:11,339 --> 00:15:14,310
that the users really are interested in

328
00:15:14,310 --> 00:15:17,040
and that tend to solve the majority of

329
00:15:17,040 --> 00:15:19,410
the problems are not the majority of

330
00:15:19,410 --> 00:15:21,660
turbulence but the most common problems

331
00:15:21,660 --> 00:15:24,870
for the majority of the users and by

332
00:15:24,870 --> 00:15:27,779
that we should be able to achieve a more

333
00:15:27,779 --> 00:15:30,649
efficient use of our resources

334
00:15:30,649 --> 00:15:32,790
that doesn't mean that there still

335
00:15:32,790 --> 00:15:34,350
wouldn't be some sort of a maintenance

336
00:15:34,350 --> 00:15:39,899
burden but by trying to cut down on the

337
00:15:39,899 --> 00:15:41,430
amount of content and by communicating

338
00:15:41,430 --> 00:15:43,230
with the users about the user stories

339
00:15:43,230 --> 00:15:45,899
that they're really interested in we are

340
00:15:45,899 --> 00:15:49,560
able to slowly reduce the amount of

341
00:15:49,560 --> 00:15:55,589
maintenance work also then we try to

342
00:15:55,589 --> 00:15:57,569
bring upstream and downstream closer

343
00:15:57,569 --> 00:16:00,180
together and even single source the

344
00:16:00,180 --> 00:16:02,220
documentation then upstream downstream

345
00:16:02,220 --> 00:16:08,250
users we not only save time by avoiding

346
00:16:08,250 --> 00:16:11,100
duplication and not only duplication of

347
00:16:11,100 --> 00:16:13,680
content but of effort but we're also

348
00:16:13,680 --> 00:16:16,490
able to bring new contributors on board

349
00:16:16,490 --> 00:16:22,019
because it just becomes easier upstream

350
00:16:22,019 --> 00:16:24,779
may not be at all concerned about how

351
00:16:24,779 --> 00:16:27,689
the project or software is being

352
00:16:27,689 --> 00:16:29,550
protected by

353
00:16:29,550 --> 00:16:33,120
company or some other project but when

354
00:16:33,120 --> 00:16:35,180
they have the possibility of contribute

355
00:16:35,180 --> 00:16:41,519
to a single source repository it's a

356
00:16:41,519 --> 00:16:43,800
very good thing it also helps to bring

357
00:16:43,800 --> 00:16:45,660
the developers on board now there is

358
00:16:45,660 --> 00:16:47,610
another cliche that developers don't

359
00:16:47,610 --> 00:16:49,800
like to write documentation and of

360
00:16:49,800 --> 00:16:51,930
course some of them they like coding

361
00:16:51,930 --> 00:16:53,940
better and they tend to think as

362
00:16:53,940 --> 00:16:56,100
documentation is something inferior but

363
00:16:56,100 --> 00:16:57,660
there's definitely not across the board

364
00:16:57,660 --> 00:17:00,390
and when we make it easier for them to

365
00:17:00,390 --> 00:17:02,310
contribute to the documentation it

366
00:17:02,310 --> 00:17:04,730
becomes a whole new different story

367
00:17:04,730 --> 00:17:11,130
and lastly about the module of authoring

368
00:17:11,130 --> 00:17:12,990
and presentation of documentation this

369
00:17:12,990 --> 00:17:15,420
is basically the method that we are

370
00:17:15,420 --> 00:17:20,339
using to achieve all of the above now I

371
00:17:20,339 --> 00:17:23,579
will talk in the next series of flights

372
00:17:23,579 --> 00:17:26,609
about what the modules and assemblies

373
00:17:26,609 --> 00:17:28,620
that I have here listed the main

374
00:17:28,620 --> 00:17:31,380
components are module documentation what

375
00:17:31,380 --> 00:17:34,260
they are how their forum and so on but

376
00:17:34,260 --> 00:17:36,240
first I want to travel touch upon the

377
00:17:36,240 --> 00:17:38,220
second bullet about the so called

378
00:17:38,220 --> 00:17:40,559
curated assemblies and ad hoc dogs

379
00:17:40,559 --> 00:17:44,550
by that I mean and as I'm going to

380
00:17:44,550 --> 00:17:48,210
explain a little while later an assembly

381
00:17:48,210 --> 00:17:51,300
in our terminology would be a

382
00:17:51,300 --> 00:17:53,880
realization of a user story and there

383
00:17:53,880 --> 00:17:55,440
exist two user story it has been

384
00:17:55,440 --> 00:17:58,770
identified has been validated we know

385
00:17:58,770 --> 00:18:02,309
what the user wants to achieve we write

386
00:18:02,309 --> 00:18:06,660
or adopt some modules and we assemble

387
00:18:06,660 --> 00:18:09,120
them we collect them combine them in a

388
00:18:09,120 --> 00:18:11,630
so-called assembly and that becomes a

389
00:18:11,630 --> 00:18:13,620
description of the user story a

390
00:18:13,620 --> 00:18:15,900
realization in documentation of the user

391
00:18:15,900 --> 00:18:19,860
story and of course such assemblies that

392
00:18:19,860 --> 00:18:21,690
are based on user stories that have been

393
00:18:21,690 --> 00:18:24,929
properly identified and validated they

394
00:18:24,929 --> 00:18:26,580
could be called curated because we've

395
00:18:26,580 --> 00:18:28,620
put a lot of effort in them and we made

396
00:18:28,620 --> 00:18:32,250
sure that they make sense however we

397
00:18:32,250 --> 00:18:34,290
recognize that we're not ever going to

398
00:18:34,290 --> 00:18:37,020
be able to identify all of those user

399
00:18:37,020 --> 00:18:39,900
stories there's always going to be you

400
00:18:39,900 --> 00:18:41,330
know the guy who wants to in

401
00:18:41,330 --> 00:18:43,490
all his Linux distribution on his

402
00:18:43,490 --> 00:18:47,060
Internet enabled refrigerator and use it

403
00:18:47,060 --> 00:18:51,620
to drive his home cinema or something

404
00:18:51,620 --> 00:18:52,100
like that

405
00:18:52,100 --> 00:18:55,880
it's unpredictable so we recognize that

406
00:18:55,880 --> 00:18:59,330
many also want to allow these users to

407
00:18:59,330 --> 00:19:01,250
experience the sort of stuff the sort of

408
00:19:01,250 --> 00:19:02,540
experience that they would have the

409
00:19:02,540 --> 00:19:05,000
reference documentation with the one

410
00:19:05,000 --> 00:19:09,800
that's based on features so we try to

411
00:19:09,800 --> 00:19:14,570
come up with a really solid system of

412
00:19:14,570 --> 00:19:17,330
metadata that would be assigned to the

413
00:19:17,330 --> 00:19:19,010
individual parts of the modular

414
00:19:19,010 --> 00:19:21,530
documentation and we would allow the

415
00:19:21,530 --> 00:19:24,560
user to browse through the entire body

416
00:19:24,560 --> 00:19:27,350
of the documentation that we have based

417
00:19:27,350 --> 00:19:29,660
on this metadata it becomes highly

418
00:19:29,660 --> 00:19:32,360
hierarchical and it becomes possible to

419
00:19:32,360 --> 00:19:34,280
select the bits and pieces of the

420
00:19:34,280 --> 00:19:36,470
documentation that pertains to the

421
00:19:36,470 --> 00:19:38,450
public problem that the user is trying

422
00:19:38,450 --> 00:19:40,610
to solve or the particular area that

423
00:19:40,610 --> 00:19:43,520
they're interested in so I choose here

424
00:19:43,520 --> 00:19:46,700
to call it ad hoc what this allows us to

425
00:19:46,700 --> 00:19:49,460
have the presentation of the darks

426
00:19:49,460 --> 00:19:52,430
dynamic it's not static anymore it's not

427
00:19:52,430 --> 00:19:55,700
one a huge page or guide it becomes

428
00:19:55,700 --> 00:19:58,310
possible for a user to dynamically

429
00:19:58,310 --> 00:19:59,750
select the kind of stuff that they're

430
00:19:59,750 --> 00:20:03,380
that they are interested in and go away

431
00:20:03,380 --> 00:20:08,680
with that and use them again questions

432
00:20:09,650 --> 00:20:13,760
oh let's describe those assemblies and

433
00:20:13,760 --> 00:20:15,650
modules these are really the main

434
00:20:15,650 --> 00:20:17,600
components of what we call modular

435
00:20:17,600 --> 00:20:21,080
documentation as I said before I touched

436
00:20:21,080 --> 00:20:23,840
upon shortly when we have a user story

437
00:20:23,840 --> 00:20:27,740
and we want to document it we think

438
00:20:27,740 --> 00:20:30,380
about that realization of a user story

439
00:20:30,380 --> 00:20:33,500
as an assembly it's a whole bunch of

440
00:20:33,500 --> 00:20:36,470
modules and other stuff that is being

441
00:20:36,470 --> 00:20:40,100
put together combined in a coherent way

442
00:20:40,100 --> 00:20:44,150
to form an assembly now I have a short

443
00:20:44,150 --> 00:20:47,450
note here that we purposefully avoid the

444
00:20:47,450 --> 00:20:50,360
word topic even though many people say

445
00:20:50,360 --> 00:20:52,040
topic based documentation and stuff like

446
00:20:52,040 --> 00:20:54,140
that but we have found that it's it's

447
00:20:54,140 --> 00:20:56,660
too loaded the word is just too

448
00:20:56,660 --> 00:20:57,470
ambiguous

449
00:20:57,470 --> 00:20:59,270
everybody thinks that topic is somewhere

450
00:20:59,270 --> 00:21:01,820
something else so we just that's the

451
00:21:01,820 --> 00:21:04,100
reason why we're not using it anyway so

452
00:21:04,100 --> 00:21:05,750
we have an assembly and we have to

453
00:21:05,750 --> 00:21:10,010
populate it so we have some sort of an

454
00:21:10,010 --> 00:21:11,720
introduction that should have a typo

455
00:21:11,720 --> 00:21:14,120
that should explain the purpose what is

456
00:21:14,120 --> 00:21:15,620
going to be accomplished by following

457
00:21:15,620 --> 00:21:17,900
that piece of documentation might also

458
00:21:17,900 --> 00:21:19,520
have a list of prerequisites some sort

459
00:21:19,520 --> 00:21:22,580
of conditions or steps that need to be

460
00:21:22,580 --> 00:21:25,340
taken before the user goes and follows

461
00:21:25,340 --> 00:21:27,590
this piece of documentation the title

462
00:21:27,590 --> 00:21:30,100
should be very specific it should be

463
00:21:30,100 --> 00:21:32,150
oriented towards a specific task

464
00:21:32,150 --> 00:21:34,700
action-oriented such as as was before it

465
00:21:34,700 --> 00:21:39,260
making an omelet something like that it

466
00:21:39,260 --> 00:21:41,450
would then be followed by the first

467
00:21:41,450 --> 00:21:44,330
module it could be a conceptual module

468
00:21:44,330 --> 00:21:46,760
it doesn't have to be there and as an

469
00:21:46,760 --> 00:21:49,550
example I've chosen here understanding

470
00:21:49,550 --> 00:21:51,650
the importance omelets in French cuisine

471
00:21:51,650 --> 00:21:54,050
now you know that it's not really

472
00:21:54,050 --> 00:21:56,840
important or perhaps it's not necessary

473
00:21:56,840 --> 00:21:59,360
to understand this kind of stuff to be

474
00:21:59,360 --> 00:22:02,510
able to flip an omelet but there are

475
00:22:02,510 --> 00:22:04,370
many scenarios where it may be very

476
00:22:04,370 --> 00:22:06,800
useful for the user to know the

477
00:22:06,800 --> 00:22:11,059
background and by being able to include

478
00:22:11,059 --> 00:22:13,130
these conceptual modules into our

479
00:22:13,130 --> 00:22:14,960
assemblies we're also recognizing the

480
00:22:14,960 --> 00:22:17,210
importance of the sort of feature based

481
00:22:17,210 --> 00:22:19,919
documentation that we're

482
00:22:19,919 --> 00:22:22,120
supplanting not really doing away with

483
00:22:22,120 --> 00:22:25,720
and if we would combine only the

484
00:22:25,720 --> 00:22:29,620
conceptual modules we would end up with

485
00:22:29,620 --> 00:22:32,559
something similar that we had before so

486
00:22:32,559 --> 00:22:35,380
we don't want to discourage that we want

487
00:22:35,380 --> 00:22:37,600
to keep it in case it's necessary to

488
00:22:37,600 --> 00:22:40,330
have it then there would be an

489
00:22:40,330 --> 00:22:42,700
explanation of the of the concept at the

490
00:22:42,700 --> 00:22:46,960
background and there could be a list of

491
00:22:46,960 --> 00:22:50,770
links to additional resources then would

492
00:22:50,770 --> 00:22:54,190
come the real meat of the of that piece

493
00:22:54,190 --> 00:22:57,039
of documentation one or more procedural

494
00:22:57,039 --> 00:22:59,860
modules they would have again

495
00:22:59,860 --> 00:23:01,659
action-oriented titles they would

496
00:23:01,659 --> 00:23:04,539
describe steps that need to be taken to

497
00:23:04,539 --> 00:23:08,080
accomplish a certain task and as I said

498
00:23:08,080 --> 00:23:09,250
there could be one there could be a

499
00:23:09,250 --> 00:23:11,860
bunch of them it really depends on how

500
00:23:11,860 --> 00:23:14,740
granular is that particular assembly how

501
00:23:14,740 --> 00:23:18,010
wide was the user story when we have

502
00:23:18,010 --> 00:23:23,049
started with it the steps in that module

503
00:23:23,049 --> 00:23:26,770
should be very explicit they should be

504
00:23:26,770 --> 00:23:29,260
commands they should say I did open copy

505
00:23:29,260 --> 00:23:31,419
or something like that so that the user

506
00:23:31,419 --> 00:23:33,580
is clear or what is being asked of them

507
00:23:33,580 --> 00:23:37,899
and again each of those modules could

508
00:23:37,899 --> 00:23:44,649
have additional resources same as the

509
00:23:44,649 --> 00:23:48,909
assembly as a whole points to other

510
00:23:48,909 --> 00:23:51,399
pieces of documentation related modules

511
00:23:51,399 --> 00:23:57,059
related assemblies related onion recipes

512
00:23:57,059 --> 00:23:59,850
stuff like that now you may notice that

513
00:23:59,850 --> 00:24:03,070
the structure of that template for the

514
00:24:03,070 --> 00:24:05,140
assembly is basically the same as the

515
00:24:05,140 --> 00:24:06,820
template for the module that is

516
00:24:06,820 --> 00:24:07,630
intentional

517
00:24:07,630 --> 00:24:10,059
those individual pieces of the

518
00:24:10,059 --> 00:24:12,549
documentation are all designed and

519
00:24:12,549 --> 00:24:15,700
written or adapted from existing

520
00:24:15,700 --> 00:24:21,549
documentation to be self standing it's

521
00:24:21,549 --> 00:24:24,669
necessary to have those modules in a way

522
00:24:24,669 --> 00:24:26,750
that there can be combined and recon

523
00:24:26,750 --> 00:24:29,510
find in different assemblies those

524
00:24:29,510 --> 00:24:33,980
individual partial steps may be used in

525
00:24:33,980 --> 00:24:36,680
very many different scenarios many

526
00:24:36,680 --> 00:24:41,810
different user stories so that is the

527
00:24:41,810 --> 00:24:43,370
reason why we're providing a sort of a

528
00:24:43,370 --> 00:24:46,340
widget but at the same time flexible in

529
00:24:46,340 --> 00:24:49,790
what the content might be template for

530
00:24:49,790 --> 00:24:55,750
these components questions

531
00:25:02,420 --> 00:25:04,590
I'm sorry could you use the microphone

532
00:25:04,590 --> 00:25:05,150
please

533
00:25:05,150 --> 00:25:10,040
how to cope with a great number of

534
00:25:10,040 --> 00:25:16,650
assemblies that came out in the project

535
00:25:16,650 --> 00:25:24,990
history so with like a doc we have big

536
00:25:24,990 --> 00:25:30,090
man was I I guess with this approach we

537
00:25:30,090 --> 00:25:34,100
will land with having a great number of

538
00:25:34,100 --> 00:25:39,050
documents so you're asking how to

539
00:25:39,050 --> 00:25:41,730
organize the assemblies that we're going

540
00:25:41,730 --> 00:25:45,510
to end up with and maintain and maintain

541
00:25:45,510 --> 00:25:48,240
them yes that's a very valid question I

542
00:25:48,240 --> 00:25:50,550
actually have that included in in one of

543
00:25:50,550 --> 00:25:52,020
the later slides about the discussion

544
00:25:52,020 --> 00:25:56,340
that's something that we have to apply a

545
00:25:56,340 --> 00:26:00,900
lot of planning for we try to come up

546
00:26:00,900 --> 00:26:03,810
with content strategy that would allow

547
00:26:03,810 --> 00:26:06,720
us to keep organizing this we have

548
00:26:06,720 --> 00:26:09,870
explored many different ways to keep

549
00:26:09,870 --> 00:26:13,500
track of what user stories are being put

550
00:26:13,500 --> 00:26:16,070
together what assemblies are being

551
00:26:16,070 --> 00:26:18,420
populated in order to describe these

552
00:26:18,420 --> 00:26:20,400
user stories so they'll either lose

553
00:26:20,400 --> 00:26:23,340
track on you know let's say that you

554
00:26:23,340 --> 00:26:24,660
would have a whole bunch of assemblies

555
00:26:24,660 --> 00:26:26,760
for beginners or you would be lacking

556
00:26:26,760 --> 00:26:29,300
the more advanced stuff or we would have

557
00:26:29,300 --> 00:26:31,800
user stories that would be identified

558
00:26:31,800 --> 00:26:33,960
for a specific area but we would be

559
00:26:33,960 --> 00:26:36,390
lacking some other ones so what do we

560
00:26:36,390 --> 00:26:40,170
have come up with is for different

561
00:26:40,170 --> 00:26:42,510
products or a different project so that

562
00:26:42,510 --> 00:26:46,140
they were documenting mind maps that

563
00:26:46,140 --> 00:26:49,320
would allow us to keep a visual overview

564
00:26:49,320 --> 00:26:52,200
of what we have available what is

565
00:26:52,200 --> 00:26:55,830
missing and what still needs what still

566
00:26:55,830 --> 00:26:57,540
needs to be done and how it all relates

567
00:26:57,540 --> 00:27:00,230
together so that we we don't have an

568
00:27:00,230 --> 00:27:04,500
overly documented one part of a project

569
00:27:04,500 --> 00:27:10,110
and then big gaps in another part thank

570
00:27:10,110 --> 00:27:11,010
you

571
00:27:11,010 --> 00:27:16,830
I have a really short quick question

572
00:27:16,830 --> 00:27:19,320
you're doing this in dog book in the

573
00:27:19,320 --> 00:27:22,080
formats that you're using for for for

574
00:27:22,080 --> 00:27:23,820
structuring your documentation is that

575
00:27:23,820 --> 00:27:26,820
dog book that you using or yeah so the

576
00:27:26,820 --> 00:27:28,080
question is whether you're using dog

577
00:27:28,080 --> 00:27:31,260
book or a different format yeah yes so

578
00:27:31,260 --> 00:27:33,809
I'm a technical writer at Red Hat at

579
00:27:33,809 --> 00:27:38,370
this point most the majority of our both

580
00:27:38,370 --> 00:27:41,220
upstream and downstream documentation is

581
00:27:41,220 --> 00:27:45,030
either in ASCII door or in docile so

582
00:27:45,030 --> 00:27:47,370
we're sort of in the middle of a

583
00:27:47,370 --> 00:27:52,169
transition and dog book to ask a dog but

584
00:27:52,169 --> 00:27:55,110
we have these templates in all of the

585
00:27:55,110 --> 00:27:57,660
formats that we're using for you know

586
00:27:57,660 --> 00:27:59,429
you know in order to be accommodated in

587
00:27:59,429 --> 00:28:01,650
order to be able to accommodate all the

588
00:28:01,650 --> 00:28:04,140
different writers who want to work with

589
00:28:04,140 --> 00:28:13,940
them there was two questions okay

590
00:28:14,179 --> 00:28:20,570
Oh so let let me read this out you're

591
00:28:20,570 --> 00:28:25,580
going from legacy to modular now as I

592
00:28:25,580 --> 00:28:28,249
said before by legacy I mean the kind of

593
00:28:28,249 --> 00:28:30,860
stuff that is based on features that is

594
00:28:30,860 --> 00:28:34,940
included in big long guides and that

595
00:28:34,940 --> 00:28:37,730
tends to be complete that goes after

596
00:28:37,730 --> 00:28:40,490
comprehensiveness as I said before

597
00:28:40,490 --> 00:28:43,009
nothing really wrong with that but we

598
00:28:43,009 --> 00:28:45,379
want to sort of reposition the

599
00:28:45,379 --> 00:28:49,490
documentation into stuff that is being

600
00:28:49,490 --> 00:28:52,929
based on user stories that describes

601
00:28:52,929 --> 00:28:56,179
specific tasks that is action-oriented

602
00:28:56,179 --> 00:28:58,190
and that is based on this module

603
00:28:58,190 --> 00:29:01,399
approach as I said before the module

604
00:29:01,399 --> 00:29:05,090
approach luckily allows us to let the

605
00:29:05,090 --> 00:29:07,519
user have the same sort of experience or

606
00:29:07,519 --> 00:29:10,639
not the same but a very similar one as

607
00:29:10,639 --> 00:29:13,309
with the feature base documentation when

608
00:29:13,309 --> 00:29:16,369
we make rich use of the metadata that we

609
00:29:16,369 --> 00:29:19,749
applied to the individual modules

610
00:29:20,679 --> 00:29:24,860
secondly this allows us by identifying

611
00:29:24,860 --> 00:29:26,659
the user stories that we really want to

612
00:29:26,659 --> 00:29:28,759
use that the users are really interested

613
00:29:28,759 --> 00:29:33,440
in to reduce the amount of content to

614
00:29:33,440 --> 00:29:36,950
ease the maintenance burden of the of

615
00:29:36,950 --> 00:29:41,629
the documentation writers and also to

616
00:29:41,629 --> 00:29:44,059
attract new contributors because the

617
00:29:44,059 --> 00:29:45,950
learning curve is not too steep for them

618
00:29:45,950 --> 00:29:48,919
when the documentation is in these

619
00:29:48,919 --> 00:29:52,129
modular pieces because it's very hard

620
00:29:52,129 --> 00:29:55,309
for a person who comes and is new either

621
00:29:55,309 --> 00:29:58,220
in an open source project or in an

622
00:29:58,220 --> 00:30:01,279
organization to start contributing to

623
00:30:01,279 --> 00:30:03,559
documentation but it's all about those

624
00:30:03,559 --> 00:30:07,360
big guides and it's you know you get it

625
00:30:07,360 --> 00:30:09,980
system administration guide dumped on

626
00:30:09,980 --> 00:30:12,080
your lab and you have to first read it

627
00:30:12,080 --> 00:30:14,570
so that you know what's in there you

628
00:30:14,570 --> 00:30:16,460
have to become familiar with that it's

629
00:30:16,460 --> 00:30:18,679
very daunting when you present people

630
00:30:18,679 --> 00:30:20,960
with the opportunity to actually

631
00:30:20,960 --> 00:30:23,840
document short user stories the kind of

632
00:30:23,840 --> 00:30:25,970
stuff that they're already familiar

633
00:30:25,970 --> 00:30:27,710
they have figured something out now they

634
00:30:27,710 --> 00:30:30,650
want to share it share with others so

635
00:30:30,650 --> 00:30:33,500
they can document they can provide a

636
00:30:33,500 --> 00:30:35,750
procedure that would become a module

637
00:30:35,750 --> 00:30:37,670
they can provide a bunch of modules they

638
00:30:37,670 --> 00:30:40,340
can even populate an entire assembly

639
00:30:40,340 --> 00:30:45,380
slash user story so I don't know

640
00:30:45,380 --> 00:30:47,120
returning them cutting down on the

641
00:30:47,120 --> 00:30:50,240
amount of content we're also making it

642
00:30:50,240 --> 00:30:54,500
easier for people to pick the pieces

643
00:30:54,500 --> 00:30:55,910
that they want to document and start

644
00:30:55,910 --> 00:31:03,110
right away and thirdly we're trying to

645
00:31:03,110 --> 00:31:06,130
improve the experience for the end user

646
00:31:06,130 --> 00:31:09,200
by making it easier to navigate the

647
00:31:09,200 --> 00:31:12,200
documentation and by taking it from

648
00:31:12,200 --> 00:31:14,920
static documentation into dynamic

649
00:31:14,920 --> 00:31:17,810
presentation and that is being

650
00:31:17,810 --> 00:31:20,710
accomplished by heavy use of metadata

651
00:31:20,710 --> 00:31:23,030
which allows us to present the

652
00:31:23,030 --> 00:31:25,040
documentation and a highly hierarchical

653
00:31:25,040 --> 00:31:29,240
way starting from the top where it's not

654
00:31:29,240 --> 00:31:32,030
really granular going down through a

655
00:31:32,030 --> 00:31:35,390
hierarchical structure based on the

656
00:31:35,390 --> 00:31:37,610
dynamic presentation of the metadata

657
00:31:37,610 --> 00:31:44,140
based documentation yes

658
00:31:44,140 --> 00:31:46,280
there are two questions that are do you

659
00:31:46,280 --> 00:31:48,580
please

660
00:31:51,680 --> 00:31:54,020
I think before you get onto maybe a more

661
00:31:54,020 --> 00:31:56,000
technical side the thing that I've been

662
00:31:56,000 --> 00:31:57,380
trying this technique a little bit

663
00:31:57,380 --> 00:31:58,700
myself and the thing that bothers me

664
00:31:58,700 --> 00:32:01,280
slightly and maybe the next talk is

665
00:32:01,280 --> 00:32:03,530
gonna go into a bit this bit more is how

666
00:32:03,530 --> 00:32:07,160
to keep things modular and but still

667
00:32:07,160 --> 00:32:09,190
maintain a kind of consistent

668
00:32:09,190 --> 00:32:12,710
storytelling narrative that doesn't just

669
00:32:12,710 --> 00:32:15,310
sound a bit disjointed with steps that

670
00:32:15,310 --> 00:32:17,030
sound like they were written by

671
00:32:17,030 --> 00:32:18,950
different people or in different styles

672
00:32:18,950 --> 00:32:20,630
and just maintaining that a document

673
00:32:20,630 --> 00:32:23,810
still sounds like a cohesive whole

674
00:32:23,810 --> 00:32:26,780
that's better right so the question is

675
00:32:26,780 --> 00:32:29,150
how we go about making the module

676
00:32:29,150 --> 00:32:31,970
documentation still coherent still that

677
00:32:31,970 --> 00:32:34,250
so that the different pieces are not

678
00:32:34,250 --> 00:32:36,470
disjointed that still sound like

679
00:32:36,470 --> 00:32:38,150
something that the user would like to

680
00:32:38,150 --> 00:32:42,320
read I understand it correctly well so

681
00:32:42,320 --> 00:32:44,300
as I mentioned before when I talked

682
00:32:44,300 --> 00:32:46,540
about the so-called curated assemblies

683
00:32:46,540 --> 00:32:49,250
those are the ones that we focus on when

684
00:32:49,250 --> 00:32:51,380
we put together the individual user

685
00:32:51,380 --> 00:32:56,510
stories and in between the different

686
00:32:56,510 --> 00:32:59,480
parts of the assembly the different

687
00:32:59,480 --> 00:33:01,640
modules of the introduction and perhaps

688
00:33:01,640 --> 00:33:05,060
the conclusion where there are links to

689
00:33:05,060 --> 00:33:08,210
additional references we are not against

690
00:33:08,210 --> 00:33:12,770
including you know sort of stuff that I

691
00:33:12,770 --> 00:33:16,190
could call you know fluff or stuff that

692
00:33:16,190 --> 00:33:18,320
you breach you over from one module to

693
00:33:18,320 --> 00:33:21,020
another the kind of stuff that would

694
00:33:21,020 --> 00:33:24,650
make it easier to read now those would

695
00:33:24,650 --> 00:33:26,630
be the curated assemblies those who do

696
00:33:26,630 --> 00:33:29,060
the one that we spent time on at the

697
00:33:29,060 --> 00:33:31,730
same time as I said it's not possible

698
00:33:31,730 --> 00:33:35,780
always to be sure or to identify or to

699
00:33:35,780 --> 00:33:38,210
document all the user stories that the

700
00:33:38,210 --> 00:33:42,920
users would really need so it may it may

701
00:33:42,920 --> 00:33:46,430
be that there is a certain topic or an

702
00:33:46,430 --> 00:33:49,190
area that people are interested in which

703
00:33:49,190 --> 00:33:51,500
we haven't covered in this curated

704
00:33:51,500 --> 00:33:54,920
assembly that is easy and nicely read so

705
00:33:54,920 --> 00:33:58,430
then it would be with the understanding

706
00:33:58,430 --> 00:34:00,210
that the individual pieces

707
00:34:00,210 --> 00:34:03,060
being compiled in an ad-hoc dynamic

708
00:34:03,060 --> 00:34:05,460
manner and then of course there wouldn't

709
00:34:05,460 --> 00:34:07,650
be the nice experience that we offer

710
00:34:07,650 --> 00:34:09,960
with the curated assemblies but as I

711
00:34:09,960 --> 00:34:12,210
said we tried to work very hard to

712
00:34:12,210 --> 00:34:15,090
identify and validate these histories

713
00:34:15,090 --> 00:34:18,360
that we put effort into so that the

714
00:34:18,360 --> 00:34:22,160
experience would be nice for the user so

715
00:34:23,780 --> 00:34:26,719
we're definitely talking about

716
00:34:26,719 --> 00:34:29,250
documentation and times of continuous

717
00:34:29,250 --> 00:34:32,880
delivery processes what's your

718
00:34:32,880 --> 00:34:34,070
recommendation

719
00:34:34,070 --> 00:34:37,820
where should I maintain such kind of

720
00:34:37,820 --> 00:34:40,530
modular documentation is it alongside

721
00:34:40,530 --> 00:34:43,440
the source code it's just another piece

722
00:34:43,440 --> 00:34:44,670
of source code in the same repository

723
00:34:44,670 --> 00:34:47,340
something that so the question is where

724
00:34:47,340 --> 00:34:48,900
to maintain this sort of module

725
00:34:48,900 --> 00:34:50,909
documentation whether it would be in the

726
00:34:50,909 --> 00:34:53,400
same repo as the project code or

727
00:34:53,400 --> 00:34:54,020
somewhere else

728
00:34:54,020 --> 00:34:56,730
well this sort of depends on what sort

729
00:34:56,730 --> 00:34:59,790
of a project or community it would be a

730
00:34:59,790 --> 00:35:00,600
part of

731
00:35:00,600 --> 00:35:05,250
we have no strict rules or you know

732
00:35:05,250 --> 00:35:07,770
guidelines about that now we're part of

733
00:35:07,770 --> 00:35:10,200
many different numbers of communities

734
00:35:10,200 --> 00:35:13,620
and we don't really want to impose on

735
00:35:13,620 --> 00:35:20,040
them some template or rigid structure

736
00:35:20,040 --> 00:35:22,040
that they would need to follow we try to

737
00:35:22,040 --> 00:35:26,070
accommodate the requests of the

738
00:35:26,070 --> 00:35:28,890
community that said what we try to

739
00:35:28,890 --> 00:35:32,880
encourage all communities or projects

740
00:35:32,880 --> 00:35:37,290
that were involved in is to use a

741
00:35:37,290 --> 00:35:39,860
specific structure of a repository for

742
00:35:39,860 --> 00:35:42,990
reusing gate for those repositories of a

743
00:35:42,990 --> 00:35:45,510
repository that makes it very easy to

744
00:35:45,510 --> 00:35:48,930
combine and reuse the content and we

745
00:35:48,930 --> 00:35:53,310
have this structure which we have real

746
00:35:53,310 --> 00:35:56,400
available for anyone to use that can be

747
00:35:56,400 --> 00:35:58,560
included either as a separate repository

748
00:35:58,560 --> 00:36:00,930
if does the preference of the project or

749
00:36:00,930 --> 00:36:03,810
that could be that can be a part of the

750
00:36:03,810 --> 00:36:06,470
larger repository that includes also

751
00:36:06,470 --> 00:36:09,290
code order artifacts so it's very

752
00:36:09,290 --> 00:36:12,470
flexible and it really depends on what

753
00:36:12,470 --> 00:36:14,450
is the common ground what is the

754
00:36:14,450 --> 00:36:19,369
understanding in a particle project it's

755
00:36:19,369 --> 00:36:21,800
so far worked very nicely for us in both

756
00:36:21,800 --> 00:36:25,280
ways both separate repository for

757
00:36:25,280 --> 00:36:28,369
documentation and a repository that

758
00:36:28,369 --> 00:36:38,690
includes both code and dogs okay just

759
00:36:38,690 --> 00:36:41,420
one things because it's not clear what

760
00:36:41,420 --> 00:36:43,010
would you say dynamic in the dynamic

761
00:36:43,010 --> 00:36:45,020
presentation do when you create a user

762
00:36:45,020 --> 00:36:50,150
story this is composed by several parts

763
00:36:50,150 --> 00:36:54,380
but this part are made only for that

764
00:36:54,380 --> 00:36:57,920
user story or are still part of a small

765
00:36:57,920 --> 00:37:02,240
sub pieces because I was just wondering

766
00:37:02,240 --> 00:37:05,900
if I could create my own user story

767
00:37:05,900 --> 00:37:10,330
using these sub pieces like picking up

768
00:37:10,330 --> 00:37:13,640
smaller amounts that you use of

769
00:37:13,640 --> 00:37:15,619
information that you used to create your

770
00:37:15,619 --> 00:37:19,010
user stories and making it because if

771
00:37:19,010 --> 00:37:21,140
the user story that I'm looking for is

772
00:37:21,140 --> 00:37:23,589
not existing can I make it up or not

773
00:37:23,589 --> 00:37:26,599
well if I understand correctly the

774
00:37:26,599 --> 00:37:28,339
question is whether you can come up with

775
00:37:28,339 --> 00:37:31,220
your own user story that is not part of

776
00:37:31,220 --> 00:37:33,500
what we have been documenting is that

777
00:37:33,500 --> 00:37:34,010
correct

778
00:37:34,010 --> 00:37:38,000
well of course yes on the one hand we

779
00:37:38,000 --> 00:37:40,250
try to encourage documentation writers

780
00:37:40,250 --> 00:37:43,880
not to rely on themselves only when

781
00:37:43,880 --> 00:37:46,070
identifying the individual user stories

782
00:37:46,070 --> 00:37:48,890
because they as documentation writers by

783
00:37:48,890 --> 00:37:50,510
their very different ideas about what is

784
00:37:50,510 --> 00:37:52,700
big what is necessary to describe as a

785
00:37:52,700 --> 00:37:55,670
part of documentation as opposed to what

786
00:37:55,670 --> 00:37:58,339
the users really need so we always try

787
00:37:58,339 --> 00:38:02,839
to encourage collaboration in on all the

788
00:38:02,839 --> 00:38:05,599
different levels and trying to involve

789
00:38:05,599 --> 00:38:07,869
as many people as possible in

790
00:38:07,869 --> 00:38:11,359
identifying those histories that said if

791
00:38:11,359 --> 00:38:14,910
there is a user who you know

792
00:38:14,910 --> 00:38:17,369
the use case or has a specific task that

793
00:38:17,369 --> 00:38:20,670
needs to be accomplished and so they

794
00:38:20,670 --> 00:38:22,920
identify user story for themselves and

795
00:38:22,920 --> 00:38:25,170
then they want that users to read to be

796
00:38:25,170 --> 00:38:27,799
documented we either accept that as a

797
00:38:27,799 --> 00:38:31,230
you know a bug or an enhancement that

798
00:38:31,230 --> 00:38:34,109
needs to be done or we invite the user

799
00:38:34,109 --> 00:38:37,079
to be the one to you know start to the

800
00:38:37,079 --> 00:38:40,380
documentation and undocumented user

801
00:38:40,380 --> 00:38:46,140
story does that answer the question yeah

802
00:38:46,140 --> 00:38:50,220
it's a bit of a plug we're working on an

803
00:38:50,220 --> 00:38:53,130
open source Drupal a distribution for

804
00:38:53,130 --> 00:38:55,319
doing what your content allows you to

805
00:38:55,319 --> 00:39:00,690
pull like topics or or or modules or

806
00:39:00,690 --> 00:39:02,609
however you want to call them from

807
00:39:02,609 --> 00:39:04,710
different poll stories and then compile

808
00:39:04,710 --> 00:39:07,170
them into one single websites that

809
00:39:07,170 --> 00:39:09,569
publishes your documentation so that you

810
00:39:09,569 --> 00:39:10,980
could combine documentation from

811
00:39:10,980 --> 00:39:12,930
different projects because anybody in

812
00:39:12,930 --> 00:39:15,420
the room who we need some system like

813
00:39:15,420 --> 00:39:19,220
that just come and see

814
00:39:23,810 --> 00:39:28,849
can use a question well I do have a

815
00:39:28,849 --> 00:39:32,830
rematch whenever a question sort of I

816
00:39:32,830 --> 00:39:38,599
think that something that is art with

817
00:39:38,599 --> 00:39:41,810
the modern approach is to be able to

818
00:39:41,810 --> 00:39:45,380
oversee all the modules and oh they can

819
00:39:45,380 --> 00:39:50,900
be reused so if you have one user story

820
00:39:50,900 --> 00:39:54,800
I agree it's much easier to change it

821
00:39:54,800 --> 00:39:59,180
somewhere and but there is a new role

822
00:39:59,180 --> 00:40:04,040
which is assembling organism in assembly

823
00:40:04,040 --> 00:40:07,070
all those modules and and having an idea

824
00:40:07,070 --> 00:40:10,310
of what should be specific what should

825
00:40:10,310 --> 00:40:16,430
be generic and I think that's very role

826
00:40:16,430 --> 00:40:18,790
that really needs to have an overview of

827
00:40:18,790 --> 00:40:23,960
even more even wider overview than in

828
00:40:23,960 --> 00:40:27,580
the legacy documentation do you have

829
00:40:27,580 --> 00:40:31,339
something to say about that so the

830
00:40:31,339 --> 00:40:34,670
question is well how we track where the

831
00:40:34,670 --> 00:40:36,050
different pieces of the module

832
00:40:36,050 --> 00:40:39,160
documentation are being used yeah and

833
00:40:39,160 --> 00:40:44,900
also to have an idea of what needs to be

834
00:40:44,900 --> 00:40:48,849
done and what can be reused Oh Buddha I

835
00:40:48,849 --> 00:40:51,230
people start with their own story so

836
00:40:51,230 --> 00:40:54,560
they do their own modules and then it's

837
00:40:54,560 --> 00:40:58,790
nice if some can be together because

838
00:40:58,790 --> 00:41:01,580
they are similar just leave some some

839
00:41:01,580 --> 00:41:03,560
some little stuff to be different at the

840
00:41:03,560 --> 00:41:06,349
beginning and all that kind of process

841
00:41:06,349 --> 00:41:09,830
that seems to be quite hard to to do and

842
00:41:09,830 --> 00:41:12,440
really need some very big review of

843
00:41:12,440 --> 00:41:17,779
right - so2 levels or that of an answer

844
00:41:17,779 --> 00:41:19,250
to that question first as I mentioned

845
00:41:19,250 --> 00:41:22,759
before we use mind mapping software to

846
00:41:22,759 --> 00:41:27,650
keep track of the different parts of the

847
00:41:27,650 --> 00:41:30,049
project or the aspects of what needs to

848
00:41:30,049 --> 00:41:32,029
be done when they could to keep track of

849
00:41:32,029 --> 00:41:34,220
what we have already documented and what

850
00:41:34,220 --> 00:41:36,380
needs to be still done but at the same

851
00:41:36,380 --> 00:41:38,980
time as I mentioned the metadata based

852
00:41:38,980 --> 00:41:41,089
hierarchical presentation of the

853
00:41:41,089 --> 00:41:43,279
documentation allows us to very easily

854
00:41:43,279 --> 00:41:46,609
filtered for what four different pieces

855
00:41:46,609 --> 00:41:49,160
of documentation that we already have so

856
00:41:49,160 --> 00:41:50,539
for example if you you know you're

857
00:41:50,539 --> 00:41:53,029
interested in security documentation

858
00:41:53,029 --> 00:41:56,150
it's very easy for us to filter all the

859
00:41:56,150 --> 00:41:57,650
pieces of documentation that we already

860
00:41:57,650 --> 00:42:00,230
have that touches upon security and you

861
00:42:00,230 --> 00:42:02,779
can go deeper more granular the deeper

862
00:42:02,779 --> 00:42:05,420
you go the you know narrower the

863
00:42:05,420 --> 00:42:08,059
selection is going to be but it allows

864
00:42:08,059 --> 00:42:12,109
you to very easily see in what sort of

865
00:42:12,109 --> 00:42:14,059
documentation already exists in what

866
00:42:14,059 --> 00:42:16,240
areas so that when somebody wants to

867
00:42:16,240 --> 00:42:19,549
document a user story they first go

868
00:42:19,549 --> 00:42:20,930
through the available body of

869
00:42:20,930 --> 00:42:23,779
documentation and they see whether some

870
00:42:23,779 --> 00:42:25,549
of the procedures for a pass have

871
00:42:25,549 --> 00:42:27,140
already been described and whether they

872
00:42:27,140 --> 00:42:30,230
can reuse them so that they wouldn't you

873
00:42:30,230 --> 00:42:33,559
know do it over again and as I said the

874
00:42:33,559 --> 00:42:37,009
hierarchical structure makes it quite

875
00:42:37,009 --> 00:42:39,019
convenient to browse through that

876
00:42:39,019 --> 00:42:42,440
documentation even though it starts out

877
00:42:42,440 --> 00:42:44,809
as a very large body of documentation

878
00:42:44,809 --> 00:42:47,269
you can easily get down to what you're

879
00:42:47,269 --> 00:42:55,329
really interested in I am moving from

880
00:42:55,329 --> 00:42:59,390
dock Bert to a ski dog did you consider

881
00:42:59,390 --> 00:43:02,359
also I like a ski dog I do like it but

882
00:43:02,359 --> 00:43:04,069
did you well consider markdown is it too

883
00:43:04,069 --> 00:43:05,200
simple

884
00:43:05,200 --> 00:43:08,770
just for a picture so the question is

885
00:43:08,770 --> 00:43:10,330
whether we also consider Marga down as a

886
00:43:10,330 --> 00:43:13,300
format for documentation and yes we do

887
00:43:13,300 --> 00:43:16,690
some of the communities that we that we

888
00:43:16,690 --> 00:43:19,390
work with do you smart down for various

889
00:43:19,390 --> 00:43:21,670
research for various reasons for example

890
00:43:21,670 --> 00:43:24,430
I have now been trying to figure out a

891
00:43:24,430 --> 00:43:27,340
way to work with markdown in combination

892
00:43:27,340 --> 00:43:31,110
with asciidoc because the go language

893
00:43:31,110 --> 00:43:34,350
has many different tools that allow the

894
00:43:34,350 --> 00:43:36,430
automatic generation of markdown

895
00:43:36,430 --> 00:43:39,220
reference documentation and we we need

896
00:43:39,220 --> 00:43:41,470
to find ways to sort of make that work

897
00:43:41,470 --> 00:43:44,230
together with other parts of SQLite

898
00:43:44,230 --> 00:43:46,210
documentation so there's nothing really

899
00:43:46,210 --> 00:43:49,960
you know that would that we would have

900
00:43:49,960 --> 00:43:51,910
against Mari down it's just that

901
00:43:51,910 --> 00:43:55,930
asciidoc provides us with more options

902
00:43:55,930 --> 00:43:58,900
it's more flexible it's a little bit

903
00:43:58,900 --> 00:44:01,360
more complicated but it's still very

904
00:44:01,360 --> 00:44:04,090
easy to learn the mark-up of the of

905
00:44:04,090 --> 00:44:10,030
ASCII art is is quite simple to learn so

906
00:44:10,030 --> 00:44:12,190
it's it was just a conscious choice to

907
00:44:12,190 --> 00:44:15,070
go with bass guitar because the tooling

908
00:44:15,070 --> 00:44:17,290
around asciidoc such as ASCII binder and

909
00:44:17,290 --> 00:44:20,560
other pieces of software are very

910
00:44:20,560 --> 00:44:22,990
convenient and allow us to do a lot of

911
00:44:22,990 --> 00:44:25,240
things with it what sort of tooling do

912
00:44:25,240 --> 00:44:27,600
you use

913
00:44:29,200 --> 00:44:32,450
so for a skater of the most look for

914
00:44:32,450 --> 00:44:35,330
rendering we mostly use mask you dr. as

915
00:44:35,330 --> 00:44:37,640
I mentioned we also use SQ binder in

916
00:44:37,640 --> 00:44:42,260
different projects to actually present

917
00:44:42,260 --> 00:44:45,590
the documentation on websites and then

918
00:44:45,590 --> 00:44:50,540
we have many different in-house tools

919
00:44:50,540 --> 00:44:53,210
that are you know out in the open on

920
00:44:53,210 --> 00:44:55,820
github and stuff and that solve

921
00:44:55,820 --> 00:44:59,330
different problems and provide different

922
00:44:59,330 --> 00:45:01,400
templates for individual pieces of

923
00:45:01,400 --> 00:45:04,130
documentation I cannot go into details

924
00:45:04,130 --> 00:45:06,530
if you're interested afterwards I would

925
00:45:06,530 --> 00:45:09,590
I would suggest can we have just one

926
00:45:09,590 --> 00:45:13,250
more I think pros excuse me another

927
00:45:13,250 --> 00:45:18,730
question do we I haven't heard the loss

928
00:45:28,070 --> 00:45:29,750
don't get me wrong I think that the

929
00:45:29,750 --> 00:45:33,040
majority of the users are like

930
00:45:43,290 --> 00:45:46,320
they still tend to go and see a video so

931
00:45:46,320 --> 00:45:49,740
how do you count them I apologize I

932
00:45:49,740 --> 00:45:51,450
would have a hard time to understand did

933
00:45:51,450 --> 00:45:54,180
you try to speed up please I thought

934
00:45:54,180 --> 00:45:56,670
that you hear when so my question was

935
00:45:56,670 --> 00:46:01,410
how do you approach some sort of emotion

936
00:46:01,410 --> 00:46:04,980
another way of expressing documentation

937
00:46:04,980 --> 00:46:07,950
because these days users despite your

938
00:46:07,950 --> 00:46:09,630
modern approach they think that they

939
00:46:09,630 --> 00:46:12,630
tend to go to look into videos instead

940
00:46:12,630 --> 00:46:17,520
of reading documentation so I asked how

941
00:46:17,520 --> 00:46:23,520
we work with videos okay so I believe

942
00:46:23,520 --> 00:46:25,950
that's a that's a whole larger question

943
00:46:25,950 --> 00:46:28,110
which we probably don't have much time

944
00:46:28,110 --> 00:46:29,940
for at this point but I really happy to

945
00:46:29,940 --> 00:46:32,010
discover discuss that with you we have

946
00:46:32,010 --> 00:46:34,530
four in several projects and part of

947
00:46:34,530 --> 00:46:36,060
that problem and we have worked with

948
00:46:36,060 --> 00:46:39,180
videos within ASCII dark with mixed

949
00:46:39,180 --> 00:46:42,300
success but I'd be happy to talk about

950
00:46:42,300 --> 00:46:46,530
that more actually my last slide was

951
00:46:46,530 --> 00:46:49,650
just a couple of points for suggestions

952
00:46:49,650 --> 00:46:51,390
for discussion which we have gone

953
00:46:51,390 --> 00:46:53,880
through I'm afraid we are out of time at

954
00:46:53,880 --> 00:46:56,190
this point so if there are any more

955
00:46:56,190 --> 00:46:59,550
questions please feel feel free to find

956
00:46:59,550 --> 00:47:02,000
me down here and we have to discuss

957
00:47:02,000 --> 00:47:04,620
thanks for attention

958
00:47:04,620 --> 00:47:12,808
[Applause]

