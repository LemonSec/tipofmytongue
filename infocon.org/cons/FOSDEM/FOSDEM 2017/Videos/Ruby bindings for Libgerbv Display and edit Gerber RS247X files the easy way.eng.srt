1
00:00:05,510 --> 00:00:11,840
okay everyone else ready okay it looks

2
00:00:11,840 --> 00:00:15,080
like FPGA is much more interesting topic

3
00:00:15,080 --> 00:00:18,050
choosing by the number of attendees here

4
00:00:18,050 --> 00:00:23,349
but now we are going to talk about PCB

5
00:00:23,439 --> 00:00:25,550
what did you place me write-ins

6
00:00:25,550 --> 00:00:31,149
lunchtime is that for a special reason

7
00:00:31,149 --> 00:00:36,140
okay we're talking about Rick and today

8
00:00:36,140 --> 00:00:39,379
I want to like to introduce you Joseph

9
00:00:39,379 --> 00:00:41,960
the working title you seen on the first

10
00:00:41,960 --> 00:00:44,780
end page is Ruby bindings for lip coat

11
00:00:44,780 --> 00:00:46,699
view because we came up with the names

12
00:00:46,699 --> 00:00:50,089
of like four days ago so I did not have

13
00:00:50,089 --> 00:00:53,149
any time to update it the clever guise

14
00:00:53,149 --> 00:00:57,260
of you may recognize the name otherwise

15
00:00:57,260 --> 00:01:01,280
just ask me later so has anyone of

16
00:01:01,280 --> 00:01:04,640
seeing these windows here they are out

17
00:01:04,640 --> 00:01:06,800
of the Eagle cuts of Eagle Autodesk

18
00:01:06,800 --> 00:01:08,560
Eagle whatever you call it

19
00:01:08,560 --> 00:01:12,530
reducing resolution is quite bad if you

20
00:01:12,530 --> 00:01:14,659
do not recognize this these are the

21
00:01:14,659 --> 00:01:19,159
windows to penalize a PCB you couldn't

22
00:01:19,159 --> 00:01:22,250
do the same you know penalizing PCBs if

23
00:01:22,250 --> 00:01:24,409
you want to order them at a PCB fab and

24
00:01:24,409 --> 00:01:27,430
you only have tiny one you add some more

25
00:01:27,430 --> 00:01:30,170
to get a cheaper price you can do this

26
00:01:30,170 --> 00:01:33,649
in kicad to using the pison scripting

27
00:01:33,649 --> 00:01:37,219
functionality but what I ask myself is

28
00:01:37,219 --> 00:01:41,659
why are we doing this within the EDA CID

29
00:01:41,659 --> 00:01:44,329
application because actually tasks like

30
00:01:44,329 --> 00:01:48,170
penalisation can tasks because they are

31
00:01:48,170 --> 00:01:50,450
not about your project they are about

32
00:01:50,450 --> 00:01:56,780
manufacturing of your project so this a

33
00:01:56,780 --> 00:02:00,320
really red stop sign for me if it comes

34
00:02:00,320 --> 00:02:03,770
to penalisation ending d cards for

35
00:02:03,770 --> 00:02:06,079
defect so that you display them where to

36
00:02:06,079 --> 00:02:09,889
cut your PCBs fiducials drills of the

37
00:02:09,889 --> 00:02:12,650
actual PCB because you do not want to

38
00:02:12,650 --> 00:02:15,290
have them on your project but they are

39
00:02:15,290 --> 00:02:17,780
more a support for men

40
00:02:17,780 --> 00:02:21,680
fracturing the PCB so what I ask myself

41
00:02:21,680 --> 00:02:24,860
is why are we using EDA applications

42
00:02:24,860 --> 00:02:28,010
like you can't eagle whatever for these

43
00:02:28,010 --> 00:02:30,220
tasks I think the reason for this is

44
00:02:30,220 --> 00:02:34,010
that right now we have no open source

45
00:02:34,010 --> 00:02:35,650
chem tools at all

46
00:02:35,650 --> 00:02:40,489
if you have a tool please shout out yeah

47
00:02:40,489 --> 00:02:44,270
your view but have you tried to draw a

48
00:02:44,270 --> 00:02:46,930
frame around your PCB with scope view

49
00:02:46,930 --> 00:02:50,260
that's the point

50
00:02:50,680 --> 00:02:54,140
yeah Guffey is totally fine for viewing

51
00:02:54,140 --> 00:02:57,440
PCBs III know a lot of PCB vaps

52
00:02:57,440 --> 00:02:59,959
which use group view because it has

53
00:02:59,959 --> 00:03:04,000
excellent gerber support for visual

54
00:03:04,000 --> 00:03:09,140
proof of see PCBs but what I discovered

55
00:03:09,140 --> 00:03:12,860
is that actually lip got view library

56
00:03:12,860 --> 00:03:15,319
behind group view it's actually able to

57
00:03:15,319 --> 00:03:17,569
not only display Gerber files but also

58
00:03:17,569 --> 00:03:21,260
to edit and save them but none of this

59
00:03:21,260 --> 00:03:24,290
functionality is represented in the UI

60
00:03:24,290 --> 00:03:26,420
application everything is in the back in

61
00:03:26,420 --> 00:03:30,709
the lib library so the home page says

62
00:03:30,709 --> 00:03:32,180
good view is split into a core

63
00:03:32,180 --> 00:03:35,260
functionality library and a GUI portion

64
00:03:35,260 --> 00:03:37,780
developers wishing to incorporate Gerber

65
00:03:37,780 --> 00:03:41,180
pausing editing exporting rendering into

66
00:03:41,180 --> 00:03:42,980
other programs are welcome to use the

67
00:03:42,980 --> 00:03:45,440
cope view so I thought oh wow this is

68
00:03:45,440 --> 00:03:47,630
handy why is nobody using this if you

69
00:03:47,630 --> 00:03:50,359
look up look up view on Google you get

70
00:03:50,359 --> 00:03:52,880
the documentation and that's it no one's

71
00:03:52,880 --> 00:03:55,459
really using this library so it's not

72
00:03:55,459 --> 00:03:55,940
okay

73
00:03:55,940 --> 00:03:58,220
there must be a reason for it so I did

74
00:03:58,220 --> 00:04:00,500
some experiments with this library using

75
00:04:00,500 --> 00:04:03,410
C and it was really a struggle to use it

76
00:04:03,410 --> 00:04:09,440
and usually this should be suitable for

77
00:04:09,440 --> 00:04:12,920
electrical engineers where the

78
00:04:12,920 --> 00:04:15,049
profession is not only software

79
00:04:15,049 --> 00:04:17,029
development but also hardware

80
00:04:17,029 --> 00:04:19,789
development and they are not able to use

81
00:04:19,789 --> 00:04:22,580
lip got views ec bindings because it's

82
00:04:22,580 --> 00:04:27,229
really really complicated so we found a

83
00:04:27,229 --> 00:04:29,750
solution for this and the solution is

84
00:04:29,750 --> 00:04:31,430
Ruby bindings for lip

85
00:04:31,430 --> 00:04:34,760
view I have two examples for you the

86
00:04:34,760 --> 00:04:37,580
first example is adding fiducials

87
00:04:37,580 --> 00:04:41,180
for PCB assembly to Z PCB and the second

88
00:04:41,180 --> 00:04:45,230
one is penalisation of a PCB the

89
00:04:45,230 --> 00:04:48,110
resolution of the Beamer is quite low I

90
00:04:48,110 --> 00:04:57,350
hope this will fit we start off with

91
00:04:57,350 --> 00:05:02,360
this example so I'm not able to mirror

92
00:05:02,360 --> 00:05:04,460
the screen so I have to look at it on my

93
00:05:04,460 --> 00:05:05,540
own

94
00:05:05,540 --> 00:05:08,720
what we do is we create a new source of

95
00:05:08,720 --> 00:05:12,170
project this is the same as what you get

96
00:05:12,170 --> 00:05:14,180
when you open group view we have an

97
00:05:14,180 --> 00:05:16,010
empty project where you can add single

98
00:05:16,010 --> 00:05:18,680
Gerber files so we start off with the

99
00:05:18,680 --> 00:05:21,740
empty project and then I add some Gerber

100
00:05:21,740 --> 00:05:24,170
files to it that's the same as you drag

101
00:05:24,170 --> 00:05:26,630
and drop a plus and group view add more

102
00:05:26,630 --> 00:05:29,900
grabber fights because your view does

103
00:05:29,900 --> 00:05:32,630
not know about what kind of Gerber files

104
00:05:32,630 --> 00:05:37,010
this right now I have some handy reg X

105
00:05:37,010 --> 00:05:40,220
here on the end which us extracts

106
00:05:40,220 --> 00:05:42,860
something like top copper layer bought

107
00:05:42,860 --> 00:05:45,470
outline out of the file name and then

108
00:05:45,470 --> 00:05:47,570
adds it to the project so that we are

109
00:05:47,570 --> 00:05:51,380
able to recognize the files later so

110
00:05:51,380 --> 00:05:55,610
after adding all the files what we do is

111
00:05:55,610 --> 00:05:59,750
we take bounding box of the PCB because

112
00:05:59,750 --> 00:06:06,040
we want to have the exact dimensions and

113
00:06:06,640 --> 00:06:10,400
then I want to add a few fiducials so

114
00:06:10,400 --> 00:06:13,010
you know fiducials is used if you mount

115
00:06:13,010 --> 00:06:16,010
CPC parts in the PCB this is a camera

116
00:06:16,010 --> 00:06:18,530
system which recognized the fiducial

117
00:06:18,530 --> 00:06:24,020
point 244 the absolute placement of this

118
00:06:24,020 --> 00:06:27,730
raw butter so I want to have most most

119
00:06:27,730 --> 00:06:31,190
PCB men of assembly lines require this

120
00:06:31,190 --> 00:06:33,410
to have at least three fiducials

121
00:06:33,410 --> 00:06:36,290
on the corners of your PCB it's really

122
00:06:36,290 --> 00:06:40,670
important and here we are adding three

123
00:06:40,670 --> 00:06:43,670
fiducials to the upper-left

124
00:06:43,670 --> 00:06:46,640
button left and bun right corner of the

125
00:06:46,640 --> 00:06:51,020
PCB and this is all scripted so if we

126
00:06:51,020 --> 00:06:53,090
change the dimension of the board the

127
00:06:53,090 --> 00:06:55,370
bounding box will change than the

128
00:06:55,370 --> 00:06:57,080
absolute position of the fiducials

129
00:06:57,080 --> 00:07:01,490
changed accordingly so in the end of

130
00:07:01,490 --> 00:07:03,590
this iterate over all the fiducial such

131
00:07:03,590 --> 00:07:07,300
as created draws them on the on layer

132
00:07:07,300 --> 00:07:13,640
that's done using the rorg of yukl so

133
00:07:13,640 --> 00:07:16,940
the bridge class is used to take the

134
00:07:16,940 --> 00:07:21,590
bridge over to a lip copy and then we're

135
00:07:21,590 --> 00:07:25,400
just saving all the files with with

136
00:07:25,400 --> 00:07:30,620
fiducial and the layer name so let's

137
00:07:30,620 --> 00:07:40,150
give this script try ruby to fiducials

138
00:07:40,150 --> 00:07:42,440
performance is quite good because it's a

139
00:07:42,440 --> 00:07:48,880
c binding so nothing actually working

140
00:07:48,880 --> 00:07:53,840
now we take our beloved application grab

141
00:07:53,840 --> 00:07:57,159
for you to check the result

142
00:07:59,810 --> 00:08:03,080
it takes the solder mask top layer and

143
00:08:03,080 --> 00:08:10,040
board outline and will invert the color

144
00:08:10,040 --> 00:08:12,890
of the top solder mask and what we just

145
00:08:12,890 --> 00:08:15,760
did using this script is to add these

146
00:08:15,760 --> 00:08:19,340
three fiducials over here and this is

147
00:08:19,340 --> 00:08:22,100
all done by script so this is really

148
00:08:22,100 --> 00:08:25,040
fast it's reputed so you can run it over

149
00:08:25,040 --> 00:08:32,630
and over again and the next bit will do

150
00:08:32,630 --> 00:08:35,390
a parallelization so what I want is I

151
00:08:35,390 --> 00:08:39,380
want to have this project on a new panel

152
00:08:39,380 --> 00:08:42,710
in four rows and four columns so in the

153
00:08:42,710 --> 00:08:45,170
end I want to have and up with sixteen

154
00:08:45,170 --> 00:08:52,190
PCBs on my panel and I do this with this

155
00:08:52,190 --> 00:08:55,370
line where just say okay to the image

156
00:08:55,370 --> 00:08:59,150
please add the image from the project

157
00:08:59,150 --> 00:09:01,250
and apply a transformation and the

158
00:09:01,250 --> 00:09:02,540
transformation is basically just

159
00:09:02,540 --> 00:09:04,600
bounding box around to peace be

160
00:09:04,600 --> 00:09:07,190
multiplied by the column and row we are

161
00:09:07,190 --> 00:09:13,600
where we are right at the moment and

162
00:09:13,600 --> 00:09:17,060
because it's handy for our PCB fab we

163
00:09:17,060 --> 00:09:19,700
create zip file on the end so what I

164
00:09:19,700 --> 00:09:21,980
expect by running this project is to

165
00:09:21,980 --> 00:09:25,250
take our Gerber files read them penalize

166
00:09:25,250 --> 00:09:28,190
so that we end up with sixteen PCBs and

167
00:09:28,190 --> 00:09:32,230
then saves them within the zip file

168
00:09:39,690 --> 00:09:42,899
that's it

169
00:09:44,910 --> 00:09:48,680
we sex result

170
00:10:09,000 --> 00:10:13,000
so I'm going to open the top layer and

171
00:10:13,000 --> 00:10:14,980
bordered line because it's sufficient to

172
00:10:14,980 --> 00:10:17,580
see the result

173
00:10:17,580 --> 00:10:22,810
here we go and now the nice thing about

174
00:10:22,810 --> 00:10:25,480
this is we have a self-contained script

175
00:10:25,480 --> 00:10:28,600
with just one dependency the dependency

176
00:10:28,600 --> 00:10:32,470
is group view and what I really like and

177
00:10:32,470 --> 00:10:34,290
what I am passionate about is to take

178
00:10:34,290 --> 00:10:37,390
software engineering techniques to

179
00:10:37,390 --> 00:10:40,089
electrical engineering so now that we

180
00:10:40,089 --> 00:10:42,399
have the script I thought okay maybe we

181
00:10:42,399 --> 00:10:43,959
can use this in continuous integration

182
00:10:43,959 --> 00:10:47,410
now so every time I check in new Gerber

183
00:10:47,410 --> 00:10:50,160
files into my tit repository I

184
00:10:50,160 --> 00:10:52,899
automatically want to have this panel

185
00:10:52,899 --> 00:10:59,370
ready for order so let's see

186
00:11:03,780 --> 00:11:06,900
so some of you may know I think all of

187
00:11:06,900 --> 00:11:09,210
you know get lap and get lap has a

188
00:11:09,210 --> 00:11:11,370
really handy continuous integration and

189
00:11:11,370 --> 00:11:14,480
this continuous integration is ran by

190
00:11:14,480 --> 00:11:18,330
jet lab CI file and what this lab

191
00:11:18,330 --> 00:11:22,800
see I fell does is it installs or first

192
00:11:22,800 --> 00:11:25,860
checks if ruby atolls avaible then it

193
00:11:25,860 --> 00:11:29,310
installs Joseph and then runs the

194
00:11:29,310 --> 00:11:32,280
penalized shop and panel our script

195
00:11:32,280 --> 00:11:35,070
itself is within the repository and in

196
00:11:35,070 --> 00:11:39,480
the end we create an artifact that's

197
00:11:39,480 --> 00:11:41,760
result of the continuous integration job

198
00:11:41,760 --> 00:11:46,320
and the artifact is named for this name

199
00:11:46,320 --> 00:11:49,860
so what we end up is we commit a new

200
00:11:49,860 --> 00:11:56,040
Java file to Z jet repository all the CI

201
00:11:56,040 --> 00:12:00,180
is run and then and that does not fit on

202
00:12:00,180 --> 00:12:03,930
screen here we can download the

203
00:12:03,930 --> 00:12:07,710
penalized job so no more struggle with

204
00:12:07,710 --> 00:12:11,100
opening some UI application just runs

205
00:12:11,100 --> 00:12:13,490
the CI which actually run automatically

206
00:12:13,490 --> 00:12:16,380
download zip file and send it off to the

207
00:12:16,380 --> 00:12:19,500
PCB fab so we could extend this even

208
00:12:19,500 --> 00:12:21,960
more by adding V cards for our fab

209
00:12:21,960 --> 00:12:25,800
everything automatically and it it's ok

210
00:12:25,800 --> 00:12:29,910
these are the benefits now I will go on

211
00:12:29,910 --> 00:12:35,790
with the presentation so what are the

212
00:12:35,790 --> 00:12:38,850
benefits and it's really easy to install

213
00:12:38,850 --> 00:12:41,910
just if you're using Debian Ubuntu

214
00:12:41,910 --> 00:12:45,900
whatever aptitude gat install gov you

215
00:12:45,900 --> 00:12:49,020
for the OS X users here just brew

216
00:12:49,020 --> 00:12:51,360
install group view and then you can

217
00:12:51,360 --> 00:12:53,339
actually use it

218
00:12:53,339 --> 00:12:56,100
next thing is no you are necessary I

219
00:12:56,100 --> 00:12:58,650
think that's that's a feature because

220
00:12:58,650 --> 00:13:01,410
all the chemins of the commercial

221
00:13:01,410 --> 00:13:04,440
complications I know have a huge UI and

222
00:13:04,440 --> 00:13:08,070
you have to do hundreds of clicks just

223
00:13:08,070 --> 00:13:10,440
to get a panel or add a few lines so

224
00:13:10,440 --> 00:13:13,470
it's really complicated and I prefer

225
00:13:13,470 --> 00:13:16,709
code much over clicking UI because I can

226
00:13:16,709 --> 00:13:17,730
check it in in two

227
00:13:17,730 --> 00:13:21,930
source control I can actually see what

228
00:13:21,930 --> 00:13:25,680
it is doing and this is really important

229
00:13:25,680 --> 00:13:28,560
guess for for hardware because we want

230
00:13:28,560 --> 00:13:32,160
to check is there some change in it then

231
00:13:32,160 --> 00:13:38,850
it's battle-proven we use this binding

232
00:13:38,850 --> 00:13:42,930
within our company and where do PCB

233
00:13:42,930 --> 00:13:46,020
manufacturing every day so we never got

234
00:13:46,020 --> 00:13:49,470
an issue because of the binding or of

235
00:13:49,470 --> 00:13:54,180
got view so and group view itself

236
00:13:54,180 --> 00:13:55,620
I guess it's really battle-proven

237
00:13:55,620 --> 00:13:57,840
because it's the last release is like

238
00:13:57,840 --> 00:14:03,860
five years old and it really has great

239
00:14:03,860 --> 00:14:07,460
compatibility to the current Gerber

240
00:14:07,460 --> 00:14:10,830
standard and its high performance but

241
00:14:10,830 --> 00:14:13,200
this does not really I don't care about

242
00:14:13,200 --> 00:14:15,420
the performance because it's run as

243
00:14:15,420 --> 00:14:19,800
including a/c and that's fine so what is

244
00:14:19,800 --> 00:14:21,750
the current situation about this project

245
00:14:21,750 --> 00:14:25,170
and as I said we use it in our company

246
00:14:25,170 --> 00:14:28,590
okay five minutes left thank you we were

247
00:14:28,590 --> 00:14:32,040
able to pull down the cost of PCB

248
00:14:32,040 --> 00:14:35,930
manufacturing for low quantities in a

249
00:14:35,930 --> 00:14:40,470
domestic fab by 70% because of this

250
00:14:40,470 --> 00:14:42,450
library because all the tasks which are

251
00:14:42,450 --> 00:14:45,270
right now done by hand we can automate

252
00:14:45,270 --> 00:14:50,310
them with this library so that is also

253
00:14:50,310 --> 00:14:52,260
the reason why all the features are as

254
00:14:52,260 --> 00:14:55,590
requested by the company's interest so

255
00:14:55,590 --> 00:14:57,660
there might be features missing which

256
00:14:57,660 --> 00:15:00,600
are important for for single use cases

257
00:15:00,600 --> 00:15:04,440
but they are not added yet the coverage

258
00:15:04,440 --> 00:15:07,290
of the whole lip group view functions is

259
00:15:07,290 --> 00:15:11,640
about 80% but I have no plans to extend

260
00:15:11,640 --> 00:15:14,510
this but because some functions are not

261
00:15:14,510 --> 00:15:19,230
you just do not use them then the test

262
00:15:19,230 --> 00:15:22,020
suit is there is the test suit that's a

263
00:15:22,020 --> 00:15:24,510
good thing but it's really really basic

264
00:15:24,510 --> 00:15:29,370
so it checks if drawing things work and

265
00:15:29,370 --> 00:15:31,260
if the girl is

266
00:15:31,260 --> 00:15:34,770
they formatted but that's it and what

267
00:15:34,770 --> 00:15:36,360
you might notice if you look into the

268
00:15:36,360 --> 00:15:38,370
source code it was split out of larger

269
00:15:38,370 --> 00:15:40,710
library like a few days ago and

270
00:15:40,710 --> 00:15:43,140
sometimes you notice that there are some

271
00:15:43,140 --> 00:15:48,660
dead ends so what I really would like is

272
00:15:48,660 --> 00:15:51,990
to have a new goofy release because the

273
00:15:51,990 --> 00:15:53,760
last release as I said it's like five

274
00:15:53,760 --> 00:15:58,050
years old and we have some recent

275
00:15:58,050 --> 00:16:00,600
changes which for example make it

276
00:16:00,600 --> 00:16:02,910
possible to rotate PCBs right now is the

277
00:16:02,910 --> 00:16:05,670
release included in the main

278
00:16:05,670 --> 00:16:07,260
distributions are not able to rotate

279
00:16:07,260 --> 00:16:09,300
PCBs and some other features are also

280
00:16:09,300 --> 00:16:13,670
missing and I don't get why there is no

281
00:16:13,670 --> 00:16:16,440
efforts to make a new release so if

282
00:16:16,440 --> 00:16:18,750
anyone knows that guy because all the

283
00:16:18,750 --> 00:16:21,810
comments on zero Fugit repository come

284
00:16:21,810 --> 00:16:24,390
from him please contact me so that we

285
00:16:24,390 --> 00:16:28,650
may can organize in new release so if

286
00:16:28,650 --> 00:16:31,050
you want to support olaf and you're not

287
00:16:31,050 --> 00:16:34,170
a software developer just try to use it

288
00:16:34,170 --> 00:16:36,660
as much as possible because this is I

289
00:16:36,660 --> 00:16:38,100
think really important for such a

290
00:16:38,100 --> 00:16:41,640
project then report issues if you have

291
00:16:41,640 --> 00:16:44,400
if you have any knowledge about software

292
00:16:44,400 --> 00:16:47,850
development the task I would prefer to

293
00:16:47,850 --> 00:16:51,240
add some more high level usage Pickers I

294
00:16:51,240 --> 00:16:53,700
guess the script I just showed was like

295
00:16:53,700 --> 00:16:58,920
30 lines we can shrink it even more then

296
00:16:58,920 --> 00:17:00,720
extend the r-spec suit that's not a

297
00:17:00,720 --> 00:17:02,580
really nice task but it has to be done

298
00:17:02,580 --> 00:17:06,839
and some features are missing like phone

299
00:17:06,839 --> 00:17:09,810
tech support it's not a possible to

300
00:17:09,810 --> 00:17:11,730
write text on your Gerber files right

301
00:17:11,730 --> 00:17:15,510
now so just lines circles rectangles and

302
00:17:15,510 --> 00:17:20,099
something like this no text alone so if

303
00:17:20,099 --> 00:17:23,250
you like this there's a coupon code for

304
00:17:23,250 --> 00:17:25,560
my company if you order PCBs regularly

305
00:17:25,560 --> 00:17:28,140
cheapest price in Europe with domestic

306
00:17:28,140 --> 00:17:32,720
manufacturing that's it thank you

307
00:17:36,000 --> 00:17:42,100
questions yeah I heard of God Mertz

308
00:17:42,100 --> 00:17:45,640
I used it like half year ago so the

309
00:17:45,640 --> 00:17:48,820
question was if we have heard about God

310
00:17:48,820 --> 00:17:51,430
much what I do not like about God Mertz

311
00:17:51,430 --> 00:17:54,880
is is that it implements all of the

312
00:17:54,880 --> 00:17:59,350
Gerber stuff on its own and it's it's

313
00:17:59,350 --> 00:18:01,030
not really complete so they are

314
00:18:01,030 --> 00:18:04,000
situation where does not work and from

315
00:18:04,000 --> 00:18:05,860
an open-source perspective I think it's

316
00:18:05,860 --> 00:18:08,410
much better to work on one project to

317
00:18:08,410 --> 00:18:10,840
support Gerber than on different

318
00:18:10,840 --> 00:18:19,930
projects next one yeah it's pretty

319
00:18:19,930 --> 00:18:21,790
active that's the reason why I don't get

320
00:18:21,790 --> 00:18:24,720
that zealot latest releases from 2011

321
00:18:24,720 --> 00:18:28,420
yeah look up the Debian packages are

322
00:18:28,420 --> 00:18:35,350
Ubuntu packages but really really hard

323
00:18:35,350 --> 00:18:39,010
to compile I tried it the demake scripts

324
00:18:39,010 --> 00:18:41,800
and all the auto configure script is

325
00:18:41,800 --> 00:18:44,500
really outdated so I wasn't able to

326
00:18:44,500 --> 00:18:49,380
compile the current master head at all

327
00:18:51,730 --> 00:18:56,980
I tried the mailing this but when when I

328
00:18:56,980 --> 00:18:59,680
last right there was no effort with this

329
00:18:59,680 --> 00:19:02,680
maybe now it's more successful to give a

330
00:19:02,680 --> 00:19:05,140
reason because I guess the reason why

331
00:19:05,140 --> 00:19:08,380
there is no new release is is that s

332
00:19:08,380 --> 00:19:11,500
good view itself has no editing

333
00:19:11,500 --> 00:19:14,560
functionality there will be no release

334
00:19:14,560 --> 00:19:16,420
for lip cup view with editing

335
00:19:16,420 --> 00:19:19,150
functionality because they if it's not

336
00:19:19,150 --> 00:19:21,220
within the UI application no one will

337
00:19:21,220 --> 00:19:26,830
use it so yeah that's it

338
00:19:26,830 --> 00:19:31,400
you can delete elements but the liquor

339
00:19:31,400 --> 00:20:12,950
view has much more functionality ok so

340
00:20:12,950 --> 00:20:16,190
the question was is what if I do a panel

341
00:20:16,190 --> 00:20:19,090
where all the projects on a panel have

342
00:20:19,090 --> 00:20:22,750
overall functionality I want to check

343
00:20:22,750 --> 00:20:26,180
I've not seen that use case of a panel I

344
00:20:26,180 --> 00:20:29,030
see it much more from the manufacturing

345
00:20:29,030 --> 00:20:33,020
position and there the point is all the

346
00:20:33,020 --> 00:20:38,750
time put as much projects on a really

347
00:20:38,750 --> 00:20:45,160
small place that's it one over you

348
00:20:49,700 --> 00:20:54,799
I use it for example to count drills you

349
00:20:54,799 --> 00:21:00,229
have to find single single subjects to

350
00:21:00,229 --> 00:21:04,459
check on for example what an idea of

351
00:21:04,459 --> 00:21:07,279
mine was to do some checking if for

352
00:21:07,279 --> 00:21:10,879
example the paste layer change you could

353
00:21:10,879 --> 00:21:16,399
create an a hex digit digest out of the

354
00:21:16,399 --> 00:21:18,919
paste layer and then check if it changed

355
00:21:18,919 --> 00:21:20,959
so that you know if you have to do a new

356
00:21:20,959 --> 00:21:24,289
stencil or not that might be an idea but

357
00:21:24,289 --> 00:21:27,079
but you can run r-spec tests on your

358
00:21:27,079 --> 00:21:27,859
Gerber files

359
00:21:27,859 --> 00:21:51,139
that's right one over here yeah the

360
00:21:51,139 --> 00:21:52,549
reason why there is no space between

361
00:21:52,549 --> 00:21:55,549
boards I wanted to keep the example

362
00:21:55,549 --> 00:22:01,070
script as simple as possible just add a

363
00:22:01,070 --> 00:22:04,869
little spacing so you know

364
00:22:13,050 --> 00:22:17,530
just at plus and measurements are in

365
00:22:17,530 --> 00:22:20,950
inches here and you have margin that's

366
00:22:20,950 --> 00:22:25,680
it but that's nice thing about scripting

367
00:22:29,640 --> 00:22:33,640
you have basic drawing functionality

368
00:22:33,640 --> 00:22:37,330
uses just just draw a few lines what we

369
00:22:37,330 --> 00:22:40,180
do is we usually mill the PCBs so we

370
00:22:40,180 --> 00:22:44,350
will draw a milling pass but creating

371
00:22:44,350 --> 00:22:46,480
the milling passes another topic but

372
00:22:46,480 --> 00:22:48,460
adding the milling parts to a governor

373
00:22:48,460 --> 00:22:54,540
that's the task of Joseph one question

374
00:23:11,490 --> 00:23:12,690
[Music]

375
00:23:12,690 --> 00:23:15,810
Asif is not able to process taking place

376
00:23:15,810 --> 00:23:22,860
files but my advice is to write down

377
00:23:22,860 --> 00:23:28,540
file with the coordinates given here and

378
00:23:28,540 --> 00:23:34,020
then just add them using axel

379
00:23:34,900 --> 00:23:40,090
I mean it's Ruby you can just write file

380
00:23:40,090 --> 00:23:43,000
and have C the top left coordinate of C

381
00:23:43,000 --> 00:23:46,740
of C according PCB

382
00:23:50,919 --> 00:23:56,120
it think your view has support for

383
00:23:56,120 --> 00:23:59,630
picking place files but I did no

384
00:23:59,630 --> 00:24:04,429
research on it and as picking place

385
00:24:04,429 --> 00:24:07,640
files or somehow arbitrary so everyone

386
00:24:07,640 --> 00:24:09,559
has different picking place files I

387
00:24:09,559 --> 00:24:13,880
think it's really hard to get a binding

388
00:24:13,880 --> 00:24:19,700
for it that's it thank you

389
00:24:19,700 --> 00:24:27,239
[Applause]

