1
00:00:05,470 --> 00:00:09,500
so welcome everybody and the big hand

2
00:00:09,500 --> 00:00:12,200
please for our speaker mr. Laura

3
00:00:12,200 --> 00:00:14,530
Beto

4
00:00:19,580 --> 00:00:23,910
thank you and good morning okay so the

5
00:00:23,910 --> 00:00:25,800
title of the talk is a bit of a misnomer

6
00:00:25,800 --> 00:00:28,860
because we will talk a lot about in its

7
00:00:28,860 --> 00:00:32,488
systems and a little bit about Essex we

8
00:00:32,488 --> 00:00:34,380
do not have much time so we will skim it

9
00:00:34,380 --> 00:00:36,570
will be very superficial I will be

10
00:00:36,570 --> 00:00:39,300
asserting lots of things so if you have

11
00:00:39,300 --> 00:00:41,100
questions please come talk to me after

12
00:00:41,100 --> 00:00:42,930
the presentation and I will and I will

13
00:00:42,930 --> 00:00:45,180
be able to explain and dive a little

14
00:00:45,180 --> 00:00:47,280
deeper but here we will not have the

15
00:00:47,280 --> 00:00:51,420
time to go deep let's start show of

16
00:00:51,420 --> 00:00:54,149
hands whatever your init system be its

17
00:00:54,149 --> 00:00:56,789
system D or anything else are you happy

18
00:00:56,789 --> 00:00:57,300
with it

19
00:00:57,300 --> 00:00:58,859
raise your hands if you are happy with

20
00:00:58,859 --> 00:01:03,480
your init system okay hands down if you

21
00:01:03,480 --> 00:01:04,860
are not happy with your init system

22
00:01:04,860 --> 00:01:09,600
please raise your hands it's a wash it's

23
00:01:09,600 --> 00:01:11,640
it's a wash I still say that it could be

24
00:01:11,640 --> 00:01:13,610
perfected it could be a hundred percent

25
00:01:13,610 --> 00:01:17,040
why are there still people unhappy with

26
00:01:17,040 --> 00:01:19,950
the init system it's because no init

27
00:01:19,950 --> 00:01:22,950
system be it a traditional one or one of

28
00:01:22,950 --> 00:01:26,580
the new ones has been I daresay properly

29
00:01:26,580 --> 00:01:30,560
designed let us change that in this talk

30
00:01:30,560 --> 00:01:35,640
no less so what is an init system in the

31
00:01:35,640 --> 00:01:36,360
first place

32
00:01:36,360 --> 00:01:38,550
the problem is that in it is a very

33
00:01:38,550 --> 00:01:41,120
overloaded term it's vague terminology

34
00:01:41,120 --> 00:01:43,710
the init world actually happened because

35
00:01:43,710 --> 00:01:45,630
nobody had a real clear vision of what

36
00:01:45,630 --> 00:01:48,350
an init system is or should be

37
00:01:48,350 --> 00:01:51,090
so I postulate that there are four

38
00:01:51,090 --> 00:01:53,280
elements to an init system the first

39
00:01:53,280 --> 00:01:55,680
element is has been in it which is the

40
00:01:55,680 --> 00:01:57,600
first process that the kernel actually

41
00:01:57,600 --> 00:02:01,170
runs at boot time the second element is

42
00:02:01,170 --> 00:02:03,540
PID one which is the process that runs

43
00:02:03,540 --> 00:02:05,550
as process one for most of the machine

44
00:02:05,550 --> 00:02:09,030
lifetime it does not have to be the same

45
00:02:09,030 --> 00:02:11,760
program as has been in it for instance

46
00:02:11,760 --> 00:02:15,180
in embedded devices in it has been in it

47
00:02:15,180 --> 00:02:17,430
is often a shell script that does a few

48
00:02:17,430 --> 00:02:19,800
few things and then executes into a big

49
00:02:19,800 --> 00:02:21,599
application that runs as peer you want

50
00:02:21,599 --> 00:02:24,749
for the rest of the machine lifetime the

51
00:02:24,749 --> 00:02:26,609
third elements of an init system is

52
00:02:26,609 --> 00:02:28,450
process supervision

53
00:02:28,450 --> 00:02:31,510
we will talk about that the fourth

54
00:02:31,510 --> 00:02:33,640
element of an inny system is service

55
00:02:33,640 --> 00:02:35,800
management we also talk about that in a

56
00:02:35,800 --> 00:02:39,190
later slide those four elements do not

57
00:02:39,190 --> 00:02:42,400
necessarily have to run in the same

58
00:02:42,400 --> 00:02:45,540
process you can have all of these parts

59
00:02:45,540 --> 00:02:48,220
scattered are called processes this is

60
00:02:48,220 --> 00:02:50,440
not often the case it is the case with

61
00:02:50,440 --> 00:02:52,060
supervision suites and service and

62
00:02:52,060 --> 00:02:56,110
service managers so let us define

63
00:02:56,110 --> 00:02:59,739
process supervision a longleaf process a

64
00:02:59,739 --> 00:03:02,110
daemon is supervised when it is spawned

65
00:03:02,110 --> 00:03:03,880
by the supervision tree which is a set

66
00:03:03,880 --> 00:03:06,640
of stable longleaf processes started at

67
00:03:06,640 --> 00:03:08,950
boot time by PID one after this

68
00:03:08,950 --> 00:03:11,500
supervision tree is itself reduced to

69
00:03:11,500 --> 00:03:14,319
PID one for instance with system D or

70
00:03:14,319 --> 00:03:18,580
with system five init system the the

71
00:03:18,580 --> 00:03:21,790
supervision tree is just in it and it's

72
00:03:21,790 --> 00:03:24,250
supervisors processes directly so

73
00:03:24,250 --> 00:03:26,290
supervision is a good pattern you do not

74
00:03:26,290 --> 00:03:28,600
have to take my word for it just I can

75
00:03:28,600 --> 00:03:29,400
explain that later

76
00:03:29,400 --> 00:03:32,170
the service is stable and launched in a

77
00:03:32,170 --> 00:03:34,540
reproducible environment the fact that

78
00:03:34,540 --> 00:03:36,040
the services are launched in a

79
00:03:36,040 --> 00:03:37,959
reproducible environment is a vital

80
00:03:37,959 --> 00:03:40,390
point only the big guys systemd and

81
00:03:40,390 --> 00:03:42,790
friends and supervision Suites do that

82
00:03:42,790 --> 00:03:45,070
correctly traditional init systems do

83
00:03:45,070 --> 00:03:47,410
not and this is one of the main

84
00:03:47,410 --> 00:03:49,780
arguments of system D against system 5

85
00:03:49,780 --> 00:03:52,299
in it it's that is that you need a lot

86
00:03:52,299 --> 00:03:53,980
of boilerplate to be able to launch your

87
00:03:53,980 --> 00:03:56,650
services in a kind of reproducible

88
00:03:56,650 --> 00:03:59,620
environment and not even them and it's a

89
00:03:59,620 --> 00:04:02,769
fair argument it's true of course

90
00:04:02,769 --> 00:04:04,180
process supervision only applies to

91
00:04:04,180 --> 00:04:06,810
demons which is longer and processes

92
00:04:06,810 --> 00:04:10,120
short-lived services do not care about

93
00:04:10,120 --> 00:04:13,590
supervision what is service management

94
00:04:13,590 --> 00:04:16,238
so by definition a service manager is

95
00:04:16,238 --> 00:04:18,130
the program that handles the Machine

96
00:04:18,130 --> 00:04:20,950
States at boot time it brings all the

97
00:04:20,950 --> 00:04:23,350
services up at shutdown time it brings

98
00:04:23,350 --> 00:04:26,740
all the services down more generally it

99
00:04:26,740 --> 00:04:29,139
brings machine state from in region

100
00:04:29,139 --> 00:04:31,360
machine from one state to another you

101
00:04:31,360 --> 00:04:33,760
have an example of that in system 5 in

102
00:04:33,760 --> 00:04:35,770
it with run levels run levels are a

103
00:04:35,770 --> 00:04:38,110
primitive way of managing services run

104
00:04:38,110 --> 00:04:40,510
levels are a set of service states when

105
00:04:40,510 --> 00:04:42,030
you change run levels

106
00:04:42,030 --> 00:04:43,710
some services go down some services go

107
00:04:43,710 --> 00:04:47,520
up you change states what our services

108
00:04:47,520 --> 00:04:52,890
well they can be one okay they can be

109
00:04:52,890 --> 00:04:54,570
one shot which means shortleaf programs

110
00:04:54,570 --> 00:04:55,710
with side effects

111
00:04:55,710 --> 00:04:58,520
for instance set the system clock or

112
00:04:58,520 --> 00:05:02,880
bring up a network interface they can be

113
00:05:02,880 --> 00:05:05,690
long runs does that work

114
00:05:05,690 --> 00:05:09,000
maybe it's me they they also can be long

115
00:05:09,000 --> 00:05:09,510
runs

116
00:05:09,510 --> 00:05:12,900
which means demons sshd syslog D

117
00:05:12,900 --> 00:05:15,270
whatever as long as the demon is up the

118
00:05:15,270 --> 00:05:18,600
services up all services be the one shot

119
00:05:18,600 --> 00:05:20,490
along runs have dependencies and it's

120
00:05:20,490 --> 00:05:21,930
the job of the service manager to

121
00:05:21,930 --> 00:05:24,420
actually enforce those dependencies what

122
00:05:24,420 --> 00:05:25,080
does that mean

123
00:05:25,080 --> 00:05:28,050
if a depends on B then there should

124
00:05:28,050 --> 00:05:30,360
never be a state for the machine where a

125
00:05:30,360 --> 00:05:34,170
is up and B is not it doesn't work if

126
00:05:34,170 --> 00:05:36,240
you do not have that enforcement it's

127
00:05:36,240 --> 00:05:40,790
not it's not a real service manager so

128
00:05:40,790 --> 00:05:44,070
given the image we have what features do

129
00:05:44,070 --> 00:05:47,040
they offer so on the one hand you have

130
00:05:47,040 --> 00:05:49,050
the big guys they integrated in its

131
00:05:49,050 --> 00:05:51,540
systems system D launch the upstart

132
00:05:51,540 --> 00:05:54,840
maybe some others they offer all fought

133
00:05:54,840 --> 00:05:58,260
all the four elements in one package has

134
00:05:58,260 --> 00:06:00,210
been in it PID one process provision

135
00:06:00,210 --> 00:06:02,610
service management they also offer much

136
00:06:02,610 --> 00:06:04,770
more which is the main problem of

137
00:06:04,770 --> 00:06:06,720
integrated in it systems is that they do

138
00:06:06,720 --> 00:06:09,660
a lot more than there than the four

139
00:06:09,660 --> 00:06:11,970
elements and all the rest is out of

140
00:06:11,970 --> 00:06:14,400
scope on the other hand you have your

141
00:06:14,400 --> 00:06:16,500
traditional in its systems system v in

142
00:06:16,500 --> 00:06:16,830
it

143
00:06:16,830 --> 00:06:19,590
B as the init they offer and has been in

144
00:06:19,590 --> 00:06:22,590
it a PID one they offer a primitive way

145
00:06:22,590 --> 00:06:24,990
of supervisor of supervising services

146
00:06:24,990 --> 00:06:27,300
like it is any tab for system v in it

147
00:06:27,300 --> 00:06:31,580
over it is a Getti device for BSD in it

148
00:06:31,580 --> 00:06:34,140
they also have a service manager but it

149
00:06:34,140 --> 00:06:36,330
is not included in the init package it

150
00:06:36,330 --> 00:06:39,150
comes with something else it comes as a

151
00:06:39,150 --> 00:06:42,030
bunch of shell scripts for system v eh

152
00:06:42,030 --> 00:06:45,150
you have system v rc4 and form bsd need

153
00:06:45,150 --> 00:06:46,920
you have etc' RC which is the service

154
00:06:46,920 --> 00:06:49,590
manager those are generally a bunch of

155
00:06:49,590 --> 00:06:52,170
scripts that perform service startup and

156
00:06:52,170 --> 00:06:55,460
shutdown and dependencies are manually

157
00:06:55,460 --> 00:06:57,470
forced by the administrator in the file

158
00:06:57,470 --> 00:06:59,630
system I have a listed two other

159
00:06:59,630 --> 00:07:02,780
examples of things that pass as an init

160
00:07:02,780 --> 00:07:06,460
system open RC which is well known its

161
00:07:06,460 --> 00:07:10,960
am am i keeping that

162
00:07:26,840 --> 00:07:33,830
maybe better okay so open RC which is

163
00:07:33,830 --> 00:07:35,940
not an init system it's actually a

164
00:07:35,940 --> 00:07:37,889
service manager with some attempts at

165
00:07:37,889 --> 00:07:40,139
supervision but you also need an init

166
00:07:40,139 --> 00:07:42,960
program to go with it I have also listed

167
00:07:42,960 --> 00:07:46,380
a POC The Epoch init system which is

168
00:07:46,380 --> 00:07:48,479
quite similar to system five in it and

169
00:07:48,479 --> 00:07:53,490
system 5 RC bundled together it's a new

170
00:07:53,490 --> 00:07:56,400
approach of the implementation of season

171
00:07:56,400 --> 00:07:57,810
5 in it but it does not question

172
00:07:57,810 --> 00:08:00,510
fundamentally the design of it open our

173
00:08:00,510 --> 00:08:03,180
season thing is a new approach the

174
00:08:03,180 --> 00:08:05,250
implementation of a service manager but

175
00:08:05,250 --> 00:08:10,530
it does not question the design ok so

176
00:08:10,530 --> 00:08:12,000
this is something completely different

177
00:08:12,000 --> 00:08:13,590
this is the diamond tools family which

178
00:08:13,590 --> 00:08:15,150
you probably have heard of if you were

179
00:08:15,150 --> 00:08:17,729
here in the to listen to this talk the

180
00:08:17,729 --> 00:08:19,830
problem with supervision managed by et

181
00:08:19,830 --> 00:08:22,289
Cie init tab as in system 5 in it or

182
00:08:22,289 --> 00:08:25,139
busybox in it is that it is impractical

183
00:08:25,139 --> 00:08:27,660
it's very static and nobody uses it for

184
00:08:27,660 --> 00:08:29,550
anything else then the gate city wise if

185
00:08:29,550 --> 00:08:31,199
you look at your default it is in it tab

186
00:08:31,199 --> 00:08:34,110
you will see some lines for to boot the

187
00:08:34,110 --> 00:08:35,729
system and actually the service manager

188
00:08:35,729 --> 00:08:38,279
you will also see lines for get ET wise

189
00:08:38,279 --> 00:08:39,599
and not much else

190
00:08:39,599 --> 00:08:41,669
this is the stock default configuration

191
00:08:41,669 --> 00:08:44,190
and nobody ever changes it there is a

192
00:08:44,190 --> 00:08:45,900
ring for a reason for a it's impractical

193
00:08:45,900 --> 00:08:48,089
to change a service to add or remove a

194
00:08:48,089 --> 00:08:50,279
service you have to edit the fire then

195
00:08:50,279 --> 00:08:52,950
send send the signal to in it it's hard

196
00:08:52,950 --> 00:08:57,630
to make it work in 1998 Daniel Bernstein

197
00:08:57,630 --> 00:08:59,670
the JB wrote daemon tools which is the

198
00:08:59,670 --> 00:09:01,920
first project offering flexible process

199
00:09:01,920 --> 00:09:04,860
supervision it is the grandfather of all

200
00:09:04,860 --> 00:09:08,220
supervision suits sweets and for the

201
00:09:08,220 --> 00:09:10,589
first time it was realistic to supervise

202
00:09:10,589 --> 00:09:13,400
all all your demons on a system with it

203
00:09:13,400 --> 00:09:16,050
so later on of course it was imperfect

204
00:09:16,050 --> 00:09:18,209
it was a pioneer so later on there were

205
00:09:18,209 --> 00:09:20,430
other there were other attempts to

206
00:09:20,430 --> 00:09:22,050
improve them that they were for instance

207
00:09:22,050 --> 00:09:24,060
diamonds and coram there well there was

208
00:09:24,060 --> 00:09:26,279
rennet which is probably today the

209
00:09:26,279 --> 00:09:28,950
best-known supervision suite the wasp

210
00:09:28,950 --> 00:09:31,740
herb which is less known but but it's

211
00:09:31,740 --> 00:09:32,840
still the

212
00:09:32,840 --> 00:09:34,100
still part of the diamond tooth family

213
00:09:34,100 --> 00:09:36,560
and it works there is a six all of those

214
00:09:36,560 --> 00:09:39,290
are supervision sweets I have also added

215
00:09:39,290 --> 00:09:41,060
a word for nosh which is a suite of

216
00:09:41,060 --> 00:09:43,850
tools which is very similar to s6 gotcha

217
00:09:43,850 --> 00:09:45,440
go check it have a look if you're

218
00:09:45,440 --> 00:09:47,840
interested and the problem is it's in

219
00:09:47,840 --> 00:09:50,510
C++ it's it's quite different from from

220
00:09:50,510 --> 00:09:54,430
all the rest and it's less economical

221
00:09:54,430 --> 00:09:57,170
the problem is with supervision sweets

222
00:09:57,170 --> 00:10:00,260
which are sweet but not that much is

223
00:10:00,260 --> 00:10:02,570
that there are only 1/4 of an init

224
00:10:02,570 --> 00:10:05,810
system if a full-featured in its in it

225
00:10:05,810 --> 00:10:08,410
needs all four parts and nothing more

226
00:10:08,410 --> 00:10:11,990
run it provides and has been in it and a

227
00:10:11,990 --> 00:10:13,760
PID one but it does not provide a

228
00:10:13,760 --> 00:10:16,190
service manager for instance and there

229
00:10:16,190 --> 00:10:18,950
is an initiative in void Linux the

230
00:10:18,950 --> 00:10:21,290
distribution void index to use run it as

231
00:10:21,290 --> 00:10:22,850
an indie system the problem is it

232
00:10:22,850 --> 00:10:24,920
doesn't have a service manager so they

233
00:10:24,920 --> 00:10:26,840
need sometimes they sometimes need hacks

234
00:10:26,840 --> 00:10:29,270
to make it to make it work with one-shot

235
00:10:29,270 --> 00:10:32,270
services the hacks are long runs that do

236
00:10:32,270 --> 00:10:36,470
nothing so let's talk about s 6 since we

237
00:10:36,470 --> 00:10:40,280
have four minutes left now a 6 is a

238
00:10:40,280 --> 00:10:42,350
supervision suite what does it also

239
00:10:42,350 --> 00:10:44,600
provide it provides a portable PID one

240
00:10:44,600 --> 00:10:47,060
it provides hook it provides hooks for

241
00:10:47,060 --> 00:10:49,250
service manager integration they are

242
00:10:49,250 --> 00:10:51,290
today two service managers that are

243
00:10:51,290 --> 00:10:54,140
designed to work with s 6 and OPA and a6

244
00:10:54,140 --> 00:10:57,260
RC and those work on top of a6 they are

245
00:10:57,260 --> 00:10:59,210
not integrated to the super to the

246
00:10:59,210 --> 00:11:01,190
supervision suite itself it's a

247
00:11:01,190 --> 00:11:03,020
different set of programs that is

248
00:11:03,020 --> 00:11:05,240
designed to work on the hooks that a6

249
00:11:05,240 --> 00:11:10,430
provides so for now we are lacking and

250
00:11:10,430 --> 00:11:12,470
has been in it program which is the last

251
00:11:12,470 --> 00:11:15,020
element in an init system the problem is

252
00:11:15,020 --> 00:11:16,910
that a 6 is designed to be portable and

253
00:11:16,910 --> 00:11:18,650
has been in it cannot be portable

254
00:11:18,650 --> 00:11:22,040
because it's highly system specific so

255
00:11:22,040 --> 00:11:25,370
the approach that we have is we create

256
00:11:25,370 --> 00:11:27,650
automatically a script that is suitable

257
00:11:27,650 --> 00:11:30,830
as an has been in it program and that

258
00:11:30,830 --> 00:11:32,360
and the way we create the script is

259
00:11:32,360 --> 00:11:34,730
dependent on the operating system so for

260
00:11:34,730 --> 00:11:36,410
now we have that for lead for for Linux

261
00:11:36,410 --> 00:11:38,990
and welcoming contributions for other

262
00:11:38,990 --> 00:11:41,690
operating systems

263
00:11:41,690 --> 00:11:43,920
just a word about the technical aspects

264
00:11:43,920 --> 00:11:45,810
of physics because that's why makes a

265
00:11:45,810 --> 00:11:48,360
difference between it and the others so

266
00:11:48,360 --> 00:11:50,250
i postulate you do not have to take my

267
00:11:50,250 --> 00:11:52,290
word for it that s6 has been designed

268
00:11:52,290 --> 00:11:54,480
right the module the modularity and

269
00:11:54,480 --> 00:11:57,150
layering of the different layers has

270
00:11:57,150 --> 00:12:00,000
been done right a 6rc the service

271
00:12:00,000 --> 00:12:02,220
manager is a parallel service manager

272
00:12:02,220 --> 00:12:04,770
whereas most of the other ones open

273
00:12:04,770 --> 00:12:08,220
RC mostly an epoch for instance start

274
00:12:08,220 --> 00:12:11,520
and stop the services serially a success

275
00:12:11,520 --> 00:12:13,140
II is the only service manager that

276
00:12:13,140 --> 00:12:14,640
provides a reproducible launch

277
00:12:14,640 --> 00:12:16,560
environment which we saw it was a

278
00:12:16,560 --> 00:12:18,600
necessity for demands but it also does

279
00:12:18,600 --> 00:12:20,220
it for one shots it's the only one that

280
00:12:20,220 --> 00:12:22,890
does it it's portable to any POSIX

281
00:12:22,890 --> 00:12:25,680
system a6 is pure C all the dependencies

282
00:12:25,680 --> 00:12:27,840
are control and are controlled and it is

283
00:12:27,840 --> 00:12:29,310
easy to boot structures to configure and

284
00:12:29,310 --> 00:12:30,350
make and you're done

285
00:12:30,350 --> 00:12:33,270
Asics uses notification it never pulls

286
00:12:33,270 --> 00:12:35,790
so it's usable in energy constrained

287
00:12:35,790 --> 00:12:37,980
environment such as in embedded boxes

288
00:12:37,980 --> 00:12:41,310
and devices it's lightweight it uses 2

289
00:12:41,310 --> 00:12:43,020
megabytes of disk which is not light but

290
00:12:43,020 --> 00:12:45,840
it's disk is cheap and as far as RAM and

291
00:12:45,840 --> 00:12:47,760
CPU are concerned which are the real

292
00:12:47,760 --> 00:12:49,890
scarce resources it uses practically

293
00:12:49,890 --> 00:12:52,440
nothing you can test it and I have

294
00:12:52,440 --> 00:12:54,740
numbers you can talk to me after that a

295
00:12:54,740 --> 00:12:58,290
6 is made of very little code and and it

296
00:12:58,290 --> 00:13:00,780
has extremely short paths if us trace

297
00:13:00,780 --> 00:13:02,970
system D from the from from the boots

298
00:13:02,970 --> 00:13:05,850
phase and if you straight if us trace s6

299
00:13:05,850 --> 00:13:08,100
you will have a very very different

300
00:13:08,100 --> 00:13:13,020
listing so how can you use it today so

301
00:13:13,020 --> 00:13:15,260
a6 is packaged in all good distributions

302
00:13:15,260 --> 00:13:19,050
as mechanism now not not not as policy

303
00:13:19,050 --> 00:13:20,310
which means that you will have the

304
00:13:20,310 --> 00:13:22,380
programs package you will not have a

305
00:13:22,380 --> 00:13:24,150
supervision tree run and services

306
00:13:24,150 --> 00:13:25,650
running with it for now you have to do

307
00:13:25,650 --> 00:13:28,650
to do that yourself a 6 is used today as

308
00:13:28,650 --> 00:13:30,630
P 81 in a lot of Dhaka containers

309
00:13:30,630 --> 00:13:33,180
especially with the a6 overlay package

310
00:13:33,180 --> 00:13:36,870
which is made which was made to help you

311
00:13:36,870 --> 00:13:39,660
use 6sv scan which is the root of the

312
00:13:39,660 --> 00:13:41,790
supervision 346 as PID 1 in your

313
00:13:41,790 --> 00:13:44,160
container the service manager

314
00:13:44,160 --> 00:13:45,870
integration with the distribution

315
00:13:45,870 --> 00:13:48,390
requires support and joint work with

316
00:13:48,390 --> 00:13:51,960
distribution so that so that is what we

317
00:13:51,960 --> 00:13:54,240
are doing now and we are going to do

318
00:13:54,240 --> 00:13:57,119
in the foreseeable future there are

319
00:13:57,119 --> 00:13:58,709
plans to make a six on the six a three

320
00:13:58,709 --> 00:14:01,050
and alternative to busybox in it plus

321
00:14:01,050 --> 00:14:04,379
open RC in the Alpine land I pine Linux

322
00:14:04,379 --> 00:14:07,860
distribution okay so if you want to

323
00:14:07,860 --> 00:14:10,829
learn more you have those links we have

324
00:14:10,829 --> 00:14:12,959
a channel on freenode i have a twitter

325
00:14:12,959 --> 00:14:16,439
and please come to me right now after

326
00:14:16,439 --> 00:14:18,149
the presentation or tomorrow I will

327
00:14:18,149 --> 00:14:21,709
still be here thank you for listening

328
00:14:22,309 --> 00:14:25,889
thank you very much Laura I think we

329
00:14:25,889 --> 00:14:27,029
have time for a couple more questions

330
00:14:27,029 --> 00:14:29,369
but I'm going to thank you back this mic

331
00:14:29,369 --> 00:14:31,910
so we can

332
00:14:32,249 --> 00:14:34,889
so anybody any questions please raise

333
00:14:34,889 --> 00:14:42,689
your hand so if we have no more

334
00:14:42,689 --> 00:14:45,589
questions tender

