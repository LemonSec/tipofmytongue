1
00:00:00,000 --> 00:00:03,500
this will be an introduction

2
00:00:04,460 --> 00:00:07,040
to graph databases so for all the people

3
00:00:07,040 --> 00:00:09,490
who are thinking about them and

4
00:00:09,490 --> 00:00:11,930
basically asking patients what are their

5
00:00:11,930 --> 00:00:14,510
four yep this talk is for you for the

6
00:00:14,510 --> 00:00:17,210
more advanced it talks in topics stay in

7
00:00:17,210 --> 00:00:20,210
this room and from what we saw you will

8
00:00:20,210 --> 00:00:23,419
learn some things okay some some things

9
00:00:23,419 --> 00:00:25,849
about me I'm the chief architect in act

10
00:00:25,849 --> 00:00:28,279
imagination it's a big polish IT company

11
00:00:28,279 --> 00:00:32,750
and there I am help in running one of

12
00:00:32,750 --> 00:00:34,970
the biggest Dalton's projects in Poland

13
00:00:34,970 --> 00:00:36,590
after hours

14
00:00:36,590 --> 00:00:39,079
I basically dig into data so basically

15
00:00:39,079 --> 00:00:42,170
here neo4j is for this and making sense

16
00:00:42,170 --> 00:00:44,480
of it and also distributed systems and

17
00:00:44,480 --> 00:00:47,420
I'm also running a pet project called

18
00:00:47,420 --> 00:00:48,170
cookies Pio

19
00:00:48,170 --> 00:00:50,210
it's a contextual search engine for

20
00:00:50,210 --> 00:00:53,510
cooking recipes and we will look at it

21
00:00:53,510 --> 00:00:54,829
later okay

22
00:00:54,829 --> 00:00:56,899
so graphs what a graph this is a graph

23
00:00:56,899 --> 00:00:58,940
it's a bit lonely graph it's a single

24
00:00:58,940 --> 00:01:01,730
single node but still it's a graph so

25
00:01:01,730 --> 00:01:03,649
let's make it about more interesting

26
00:01:03,649 --> 00:01:06,530
let's add a friend and if we are doing a

27
00:01:06,530 --> 00:01:08,750
friend we are adding a relationship as

28
00:01:08,750 --> 00:01:12,170
simple as this graph is its way useful

29
00:01:12,170 --> 00:01:14,030
because this is basically Facebook I

30
00:01:14,030 --> 00:01:16,720
know you you know me yeah that's it and

31
00:01:16,720 --> 00:01:20,360
if we like to spice things a bit we can

32
00:01:20,360 --> 00:01:23,960
add a direction to this relationship and

33
00:01:23,960 --> 00:01:28,310
this actually is if I am observing you

34
00:01:28,310 --> 00:01:30,560
you are not necessarily with me so

35
00:01:30,560 --> 00:01:34,479
ass-fucker relationship don't do it next

36
00:01:34,479 --> 00:01:38,149
this is the we are adding to weight to

37
00:01:38,149 --> 00:01:40,250
the relationship so this is basically

38
00:01:40,250 --> 00:01:43,039
the most common thing that people are

39
00:01:43,039 --> 00:01:44,509
thinking when they're thinking graphs so

40
00:01:44,509 --> 00:01:47,090
basically cities sittings cities roads

41
00:01:47,090 --> 00:01:51,289
and roads also have direction next let's

42
00:01:51,289 --> 00:01:56,030
get a bit funky so if we allow for two

43
00:01:56,030 --> 00:01:58,039
nodes to have multiple relate

44
00:01:58,039 --> 00:02:00,590
relationships of the same type between

45
00:02:00,590 --> 00:02:05,179
them we get multi multi relation graph

46
00:02:05,179 --> 00:02:07,340
well while there are funky they

47
00:02:07,340 --> 00:02:10,758
basically don't have that much of a news

48
00:02:10,758 --> 00:02:12,500
and they can in most cases be

49
00:02:12,500 --> 00:02:14,570
implemented by this just basically

50
00:02:14,570 --> 00:02:18,350
counting the edges let's go next

51
00:02:18,350 --> 00:02:20,750
and next we have a labeled graph so

52
00:02:20,750 --> 00:02:23,390
basically we are able to add labels to

53
00:02:23,390 --> 00:02:27,560
nodes and relationships it's kind of

54
00:02:27,560 --> 00:02:29,150
useful there are some implementations

55
00:02:29,150 --> 00:02:32,690
but the best graph and most practical is

56
00:02:32,690 --> 00:02:35,180
the property graph so we are able to add

57
00:02:35,180 --> 00:02:37,540
labels and basically any method metadata

58
00:02:37,540 --> 00:02:41,690
connected to the nodes and the edges and

59
00:02:41,690 --> 00:02:44,480
one question does this remind anyone of

60
00:02:44,480 --> 00:02:48,950
something and if I do this I had one too

61
00:02:48,950 --> 00:02:51,890
many many to one and someone and if I do

62
00:02:51,890 --> 00:02:56,570
this no there won't be any treats

63
00:02:56,570 --> 00:02:59,030
basically when I was starting through it

64
00:02:59,030 --> 00:03:02,540
it's this is how we draw relational

65
00:03:02,540 --> 00:03:04,700
databases so there's a guy standing in

66
00:03:04,700 --> 00:03:06,770
funny pants saying queue that basically

67
00:03:06,770 --> 00:03:09,140
we have graph databases but we have

68
00:03:09,140 --> 00:03:11,870
relations that abbreviations are in the

69
00:03:11,870 --> 00:03:14,000
relational databases and we have

70
00:03:14,000 --> 00:03:16,670
relations in graphs so was up to

71
00:03:16,670 --> 00:03:18,650
understand why relational databases are

72
00:03:18,650 --> 00:03:21,260
completely not similar to graph this

73
00:03:21,260 --> 00:03:23,380
basis let's go a bit into history

74
00:03:23,380 --> 00:03:26,450
because history is fun and but the

75
00:03:26,450 --> 00:03:29,960
creation that we started in 1970 by mr.

76
00:03:29,960 --> 00:03:33,380
Edgar Codd who wrote a paper it had some

77
00:03:33,380 --> 00:03:37,160
Patterson to best understand why did it

78
00:03:37,160 --> 00:03:39,200
gain so much so much traction that

79
00:03:39,200 --> 00:03:41,450
basically relational databases are

80
00:03:41,450 --> 00:03:43,700
everywhere now let's see what always

81
00:03:43,700 --> 00:03:46,550
happened in the 1970s well run got

82
00:03:46,550 --> 00:03:49,430
actually quite cheap because for $700 we

83
00:03:49,430 --> 00:03:51,740
could get one megabyte and for those

84
00:03:51,740 --> 00:03:53,870
young people in here megabyte is the

85
00:03:53,870 --> 00:03:59,090
lesser of gigabytes yeah and it got

86
00:03:59,090 --> 00:04:01,970
cheap because two years earlier it was

87
00:04:01,970 --> 00:04:05,030
about two and a half thousand and next

88
00:04:05,030 --> 00:04:07,040
IBM released is first

89
00:04:07,040 --> 00:04:09,290
dishwasher with 100 megabytes of this

90
00:04:09,290 --> 00:04:11,900
space and when I'm saying this washer is

91
00:04:11,900 --> 00:04:13,790
basically because it looks like a

92
00:04:13,790 --> 00:04:14,450
dishwasher

93
00:04:14,450 --> 00:04:18,680
it's here so and it has one also one

94
00:04:18,680 --> 00:04:20,810
common thing with a dishwasher the

95
00:04:20,810 --> 00:04:22,460
access time and the read time in the

96
00:04:22,460 --> 00:04:25,670
specs they are they are actually down to

97
00:04:25,670 --> 00:04:27,979
the bytes how fast you can transfer it

98
00:04:27,979 --> 00:04:31,100
and it's like 1 megabyte comma 0 0 or

99
00:04:31,100 --> 00:04:31,850
something

100
00:04:31,850 --> 00:04:34,910
so yeah it was slow and next Intel

101
00:04:34,910 --> 00:04:37,940
releases its processor so we can play

102
00:04:37,940 --> 00:04:41,930
Mario and we have almost 800 kilo Hertz

103
00:04:41,930 --> 00:04:45,040
it's again gigahertz megahertz kilohertz

104
00:04:45,040 --> 00:04:49,940
yeah it was slow and free years later we

105
00:04:49,940 --> 00:04:52,130
have 16 bits and one megabyte of memory

106
00:04:52,130 --> 00:04:56,030
so yeah things just got got awesome and

107
00:04:56,030 --> 00:04:59,770
next Oracle's of course implements the

108
00:04:59,770 --> 00:05:02,180
implements the relational databases

109
00:05:02,180 --> 00:05:04,910
paper and we have we have our relation

110
00:05:04,910 --> 00:05:08,120
address and Apple releases is its first

111
00:05:08,120 --> 00:05:11,630
and only not non-white computer next we

112
00:05:11,630 --> 00:05:13,970
have the absolute grand-grandfather of

113
00:05:13,970 --> 00:05:16,460
almost every processor you have in your

114
00:05:16,460 --> 00:05:19,930
notebooks or PC so and I think the Intel

115
00:05:19,930 --> 00:05:23,330
8086 and we have a massive whopping up

116
00:05:23,330 --> 00:05:25,760
to ten megahertz of processing power so

117
00:05:25,760 --> 00:05:28,700
yeah this is the relation that the

118
00:05:28,700 --> 00:05:30,890
creation of the database key sorry let's

119
00:05:30,890 --> 00:05:33,530
now in contrast look how the graph one

120
00:05:33,530 --> 00:05:37,640
looks first in 1736 it's the graph

121
00:05:37,640 --> 00:05:41,720
problem by mr. Euler and this history

122
00:05:41,720 --> 00:05:44,750
has kings and queens and some one sound

123
00:05:44,750 --> 00:05:48,080
but basically it's it's so we all agree

124
00:05:48,080 --> 00:05:50,810
that it's the beginning of really graphs

125
00:05:50,810 --> 00:05:53,020
in mathematics next map coloring problem

126
00:05:53,020 --> 00:05:56,870
and we'll get back to it in some time

127
00:05:56,870 --> 00:05:59,330
because it correlates with computer

128
00:05:59,330 --> 00:06:01,730
history next if we are talking about

129
00:06:01,730 --> 00:06:04,370
math and we want to be serious we should

130
00:06:04,370 --> 00:06:07,010
have a book so in 1936 we have a book

131
00:06:07,010 --> 00:06:09,320
and then it's the official moment that

132
00:06:09,320 --> 00:06:11,690
graph theory in mathematics officially

133
00:06:11,690 --> 00:06:14,420
starts next map coloring problem is

134
00:06:14,420 --> 00:06:17,300
partly solved well why partly because

135
00:06:17,300 --> 00:06:19,910
basically the proof said yeah we are

136
00:06:19,910 --> 00:06:22,960
right we can color color every map using

137
00:06:22,960 --> 00:06:25,580
four four colors but basically there are

138
00:06:25,580 --> 00:06:28,610
about 20,000 maps that should be

139
00:06:28,610 --> 00:06:31,250
processed manually it to actually prove

140
00:06:31,250 --> 00:06:33,680
that they can't this can't they can't be

141
00:06:33,680 --> 00:06:35,420
colored color with less than three

142
00:06:35,420 --> 00:06:37,940
colors and because we didn't have enough

143
00:06:37,940 --> 00:06:40,940
crayons and we are lazy we had to wait

144
00:06:40,940 --> 00:06:43,580
30 years for for actually solving it and

145
00:06:43,580 --> 00:06:45,560
we actually solved it you

146
00:06:45,560 --> 00:06:49,669
our computer of course next into the

147
00:06:49,669 --> 00:06:52,580
rhesus is Pentium 4 and it has a

148
00:06:52,580 --> 00:06:54,680
whopping almost three gigahertz or

149
00:06:54,680 --> 00:06:57,350
pressing power and another question does

150
00:06:57,350 --> 00:07:00,410
anyone remember Oh is old enough like me

151
00:07:00,410 --> 00:07:03,380
to know which part of the PC also

152
00:07:03,380 --> 00:07:06,080
evolves quite rapidly thanks dude thanks

153
00:07:06,080 --> 00:07:10,370
to the Intel for the right radiator it

154
00:07:10,370 --> 00:07:11,990
was the time when we thought that yeah

155
00:07:11,990 --> 00:07:14,560
water cooling will be in every PC

156
00:07:14,560 --> 00:07:18,050
Pentium 4 had such massive heating

157
00:07:18,050 --> 00:07:20,570
problems that basically Intel said well

158
00:07:20,570 --> 00:07:22,760
let's put it in a drawer

159
00:07:22,760 --> 00:07:25,550
they took pentium free put two chips in

160
00:07:25,550 --> 00:07:30,560
one processor and this how we got called

161
00:07:30,560 --> 00:07:35,240
Co duo and next in 2003 the first

162
00:07:35,240 --> 00:07:37,669
commercial graph that graph databases so

163
00:07:37,669 --> 00:07:39,710
why aren't why I'm showing here because

164
00:07:39,710 --> 00:07:41,810
if you look this history is completely

165
00:07:41,810 --> 00:07:45,200
different when we got the relational

166
00:07:45,200 --> 00:07:47,900
databases we had a massive gains in

167
00:07:47,900 --> 00:07:50,810
computing power and we when we had

168
00:07:50,810 --> 00:07:52,460
graffia the business we already knew

169
00:07:52,460 --> 00:07:52,940
that

170
00:07:52,940 --> 00:07:54,740
we can't go faster on one one call one

171
00:07:54,740 --> 00:07:57,680
call and if you think one more thing if

172
00:07:57,680 --> 00:07:59,750
you think about relation databases and

173
00:07:59,750 --> 00:08:01,280
you think about the normal forms and

174
00:08:01,280 --> 00:08:03,919
think for a moment why do we have normal

175
00:08:03,919 --> 00:08:06,229
forms it there was is what simple to

176
00:08:06,229 --> 00:08:08,570
actually save the amount of storage of

177
00:08:08,570 --> 00:08:10,430
this space that we are using if you are

178
00:08:10,430 --> 00:08:12,620
if you are replacing a string with the

179
00:08:12,620 --> 00:08:15,740
end so creating a creating another table

180
00:08:15,740 --> 00:08:18,410
you are actually reducing the space it

181
00:08:18,410 --> 00:08:21,530
will actually take and now gigabytes a

182
00:08:21,530 --> 00:08:26,389
chip why okay so we know what now let's

183
00:08:26,389 --> 00:08:28,610
see how the landscape actually looks

184
00:08:28,610 --> 00:08:31,190
like first we have flock flock is

185
00:08:31,190 --> 00:08:33,770
basically database written database for

186
00:08:33,770 --> 00:08:36,469
the poll why because flock actually can

187
00:08:36,469 --> 00:08:38,419
get only the parents of the notes it

188
00:08:38,419 --> 00:08:41,000
can't reverse for the graph you may

189
00:08:41,000 --> 00:08:43,370
think why why would someone implement it

190
00:08:43,370 --> 00:08:46,100
and that's quite simple flock was

191
00:08:46,100 --> 00:08:48,890
implemented by Twitter and Twitter has a

192
00:08:48,890 --> 00:08:51,260
use case that if you tweet something it

193
00:08:51,260 --> 00:08:53,690
it gets all all people who are following

194
00:08:53,690 --> 00:08:59,160
you and moves that with today to to yo

195
00:08:59,160 --> 00:09:01,350
Twitter feed and that's all so it

196
00:09:01,350 --> 00:09:03,990
actually shows that many graph databases

197
00:09:03,990 --> 00:09:08,160
are implemented in some specific problem

198
00:09:08,160 --> 00:09:10,139
in mind if you will use them in the

199
00:09:10,139 --> 00:09:12,839
Pacific problem they are awesome they

200
00:09:12,839 --> 00:09:17,089
are mostly sit not not general-purpose

201
00:09:17,089 --> 00:09:19,620
databases as we make relational

202
00:09:19,620 --> 00:09:25,439
databases as through 50 years next like

203
00:09:25,439 --> 00:09:28,079
the Trinity Project it's then been

204
00:09:28,079 --> 00:09:31,470
called graph max of graph then it was I

205
00:09:31,470 --> 00:09:34,620
being killed but basically the idea

206
00:09:34,620 --> 00:09:36,930
behind it is like Microsoft has a sure

207
00:09:36,930 --> 00:09:39,240
so they thought let's process massive

208
00:09:39,240 --> 00:09:41,310
graphs in our row so what it did is

209
00:09:41,310 --> 00:09:43,230
basically created a graph engine that

210
00:09:43,230 --> 00:09:46,009
only sends messages basically so they

211
00:09:46,009 --> 00:09:48,600
abstracted in a way credit of virtual

212
00:09:48,600 --> 00:09:52,500
actor for graphs and so yeah it's what

213
00:09:52,500 --> 00:09:54,360
it was printed in with after in mind

214
00:09:54,360 --> 00:09:57,420
next Titan now it's been replaced with

215
00:09:57,420 --> 00:10:00,209
Julius and it's a craft engine that

216
00:10:00,209 --> 00:10:02,610
basically you can swap storage engines

217
00:10:02,610 --> 00:10:04,620
and it can combine a lot of things let

218
00:10:04,620 --> 00:10:08,459
next or in DB if you don't know what to

219
00:10:08,459 --> 00:10:11,089
use or in DB basically has relational

220
00:10:11,089 --> 00:10:13,199
capability is graphically capabilities

221
00:10:13,199 --> 00:10:14,689
key value store capabilities and

222
00:10:14,689 --> 00:10:18,329
everything you can imagine yeah people

223
00:10:18,329 --> 00:10:21,269
are using it next affinity indexed one

224
00:10:21,269 --> 00:10:23,490
is for IOT and low light and see the

225
00:10:23,490 --> 00:10:26,220
other is for mobile devices if you have

226
00:10:26,220 --> 00:10:28,189
a case that you actually want to use

227
00:10:28,189 --> 00:10:30,360
want to calculate graphs on a mobile

228
00:10:30,360 --> 00:10:33,449
devices why not next neo4j and it's

229
00:10:33,449 --> 00:10:36,269
without no reason that it's in the top

230
00:10:36,269 --> 00:10:38,850
right corner we'll be seeing a lot of

231
00:10:38,850 --> 00:10:41,759
you know even in the stock later so I

232
00:10:41,759 --> 00:10:45,360
will I want concentrate on it next

233
00:10:45,360 --> 00:10:46,769
Allegro graph and the hyper group the

234
00:10:46,769 --> 00:10:49,920
beam those databases are being developed

235
00:10:49,920 --> 00:10:53,430
in in one use case in mind basically

236
00:10:53,430 --> 00:10:54,959
graph storage

237
00:10:54,959 --> 00:10:56,879
sorry knowledge storage and basically

238
00:10:56,879 --> 00:11:01,709
going through knowledge okay let's go

239
00:11:01,709 --> 00:11:04,379
further usage this is the Amazon page

240
00:11:04,379 --> 00:11:07,019
and you can't see it but yeah basically

241
00:11:07,019 --> 00:11:09,439
when you go to Amazon you can see that

242
00:11:09,439 --> 00:11:12,360
Amazon basically it doesn't show you

243
00:11:12,360 --> 00:11:14,640
similar books if they show you books

244
00:11:14,640 --> 00:11:16,470
that people frequently bought together

245
00:11:16,470 --> 00:11:19,410
and so on someone so how does Amazon do

246
00:11:19,410 --> 00:11:22,110
it this is my guess so what people let's

247
00:11:22,110 --> 00:11:24,690
take a net one person he goes into my

248
00:11:24,690 --> 00:11:27,060
zone bro stab it and buy something let's

249
00:11:27,060 --> 00:11:31,170
take another person so basically what

250
00:11:31,170 --> 00:11:34,050
you see is when you think in a graph way

251
00:11:34,050 --> 00:11:37,170
those are pages and so our sole product

252
00:11:37,170 --> 00:11:39,300
products you actually can see the

253
00:11:39,300 --> 00:11:42,060
patterns in data some some notes and

254
00:11:42,060 --> 00:11:44,730
some edges that just just are thicker

255
00:11:44,730 --> 00:11:47,720
and lighter pass us a Christmas tree so

256
00:11:47,720 --> 00:11:50,279
what do we see from here basically if

257
00:11:50,279 --> 00:11:52,980
anyone enters this note we should be

258
00:11:52,980 --> 00:11:55,140
showing this note because people people

259
00:11:55,140 --> 00:11:57,120
aren't buying us often this note but

260
00:11:57,120 --> 00:11:59,459
from this node going to this node so the

261
00:11:59,459 --> 00:12:01,589
they they in some way may be similar

262
00:12:01,589 --> 00:12:04,860
that we can't know precisely but yeah

263
00:12:04,860 --> 00:12:07,490
this is our buying path

264
00:12:07,490 --> 00:12:10,620
let's go now similarly okay so of course

265
00:12:10,620 --> 00:12:13,230
also connected with money money

266
00:12:13,230 --> 00:12:15,180
laundering if you have a million new

267
00:12:15,180 --> 00:12:17,579
euros you can't actually buy a house buy

268
00:12:17,579 --> 00:12:20,579
a Porsche and so on because the IRS will

269
00:12:20,579 --> 00:12:22,589
come and ask you some simple question

270
00:12:22,589 --> 00:12:25,110
where did you get the money and then you

271
00:12:25,110 --> 00:12:27,510
will be said yeah so basically what you

272
00:12:27,510 --> 00:12:29,880
do is basically is give this money to a

273
00:12:29,880 --> 00:12:34,769
lot of people and and basically they go

274
00:12:34,769 --> 00:12:37,709
through through the chain of restaurants

275
00:12:37,709 --> 00:12:39,990
and so on and this is exactly the same

276
00:12:39,990 --> 00:12:42,779
as was done in the Panama papers how

277
00:12:42,779 --> 00:12:44,160
they did it they just inputted each

278
00:12:44,160 --> 00:12:46,920
invoice at a time basically who paid who

279
00:12:46,920 --> 00:12:48,930
and how much and after some time this

280
00:12:48,930 --> 00:12:50,750
they started seeing some some

281
00:12:50,750 --> 00:12:53,550
relationship relationship ships and

282
00:12:53,550 --> 00:12:55,800
thanks this they were able to see a

283
00:12:55,800 --> 00:12:57,839
really stupid face of a prime minister

284
00:12:57,839 --> 00:13:01,649
of Iceland when he was asked what are

285
00:13:01,649 --> 00:13:03,269
his connections with some foreign

286
00:13:03,269 --> 00:13:07,560
offshore company yeah and well my

287
00:13:07,560 --> 00:13:12,410
computer's attacking me so sorry and

288
00:13:13,519 --> 00:13:17,850
some technical problems sorry ok let's

289
00:13:17,850 --> 00:13:18,329
go further

290
00:13:18,329 --> 00:13:21,089
NOP and this is oversimplification I

291
00:13:21,089 --> 00:13:25,700
know but stay with me if we have

292
00:13:25,700 --> 00:13:28,760
something saying sushi find me all sushi

293
00:13:28,760 --> 00:13:30,620
restaurants in New York that my friends

294
00:13:30,620 --> 00:13:33,560
like we can easily understand each word

295
00:13:33,560 --> 00:13:35,930
world of the sentence so she restaurants

296
00:13:35,930 --> 00:13:38,420
that my friends like but answering to

297
00:13:38,420 --> 00:13:40,670
this question is quite complicated well

298
00:13:40,670 --> 00:13:43,550
it is not because if you grab this

299
00:13:43,550 --> 00:13:46,580
basically get me my friends basically I

300
00:13:46,580 --> 00:13:50,410
don't have that many but yeah let's say

301
00:13:50,410 --> 00:13:53,440
get get a no note of lucky location

302
00:13:53,440 --> 00:13:56,300
Location New York get the tap tap of the

303
00:13:56,300 --> 00:13:59,600
type of the cuisine so as you see we

304
00:13:59,600 --> 00:14:02,270
have this part we have this part so the

305
00:14:02,270 --> 00:14:04,940
answer to this question will actually be

306
00:14:04,940 --> 00:14:08,960
the notes filling filling the graph it's

307
00:14:08,960 --> 00:14:12,320
basically that easy and there's also one

308
00:14:12,320 --> 00:14:14,660
interesting thing because if you what

309
00:14:14,660 --> 00:14:16,400
are talking about for example Facebook

310
00:14:16,400 --> 00:14:18,590
we are talking billions bills I heard

311
00:14:18,590 --> 00:14:21,170
billions billions of notes but actually

312
00:14:21,170 --> 00:14:23,930
you know in each square in each part of

313
00:14:23,930 --> 00:14:27,290
this query we actually triggered each

314
00:14:27,290 --> 00:14:32,210
note and its children so it's fast yeah

315
00:14:32,210 --> 00:14:34,840
Nach next knowledge graphs so basically

316
00:14:34,840 --> 00:14:38,000
Newton had this case that there have a

317
00:14:38,000 --> 00:14:40,310
huge not huge knowledge graph because if

318
00:14:40,310 --> 00:14:42,380
you write any article you want to have

319
00:14:42,380 --> 00:14:45,530
contextual actual actual news actual

320
00:14:45,530 --> 00:14:48,320
actual data so if you take Apple Apple

321
00:14:48,320 --> 00:14:51,580
can be a fruit can be applying can be

322
00:14:51,580 --> 00:14:54,680
some some things there are even a static

323
00:14:54,680 --> 00:14:57,380
episode yeah there's also Apple Records

324
00:14:57,380 --> 00:15:00,110
that's the Beatles Russian a party is

325
00:15:00,110 --> 00:15:02,840
nickname Apple so there are a lot of it

326
00:15:02,840 --> 00:15:05,990
and if you look at those types of data

327
00:15:05,990 --> 00:15:08,540
in a relational model so basically you

328
00:15:08,540 --> 00:15:10,610
have the Apple it's one Apple then you

329
00:15:10,610 --> 00:15:12,860
label each type and according to the

330
00:15:12,860 --> 00:15:15,080
each label you look at the different

331
00:15:15,080 --> 00:15:16,580
relationship you can do really awesome

332
00:15:16,580 --> 00:15:19,820
stuff like knowledge graphs from Google

333
00:15:19,820 --> 00:15:22,280
it's the Euler and order has some fields

334
00:15:22,280 --> 00:15:25,100
like born diet education and influence

335
00:15:25,100 --> 00:15:28,400
and basically influence is a field you

336
00:15:28,400 --> 00:15:30,020
wouldn't normally put on a person but

337
00:15:30,020 --> 00:15:32,570
someone someone may argue that yeah it's

338
00:15:32,570 --> 00:15:35,000
for famous people and so on so you have

339
00:15:35,000 --> 00:15:37,910
the field influence but then again you

340
00:15:37,910 --> 00:15:39,050
have spoke and

341
00:15:39,050 --> 00:15:41,810
 Gaza how the field species and with

342
00:15:41,810 --> 00:15:43,370
a value of volcán and this value is a

343
00:15:43,370 --> 00:15:46,310
link so with graph databases you are

344
00:15:46,310 --> 00:15:48,320
when you are adding acknowledge you are

345
00:15:48,320 --> 00:15:51,320
not changing changing you are adding

346
00:15:51,320 --> 00:15:53,360
knowledge and this this knowledge

347
00:15:53,360 --> 00:15:55,430
influence your database you don't have

348
00:15:55,430 --> 00:15:58,100
to think in a head of your structure

349
00:15:58,100 --> 00:16:00,500
your tables relationships because if you

350
00:16:00,500 --> 00:16:03,649
do it you won't have Spock next

351
00:16:03,649 --> 00:16:07,250
performance and short-short theory

352
00:16:07,250 --> 00:16:09,230
basically what are you doing if you are

353
00:16:09,230 --> 00:16:11,740
implementing a relational database in

354
00:16:11,740 --> 00:16:13,610
curricle structure in relational

355
00:16:13,610 --> 00:16:15,980
database you have a let's say table

356
00:16:15,980 --> 00:16:18,860
table persons which is quite long as

357
00:16:18,860 --> 00:16:21,620
many columns and you have table person

358
00:16:21,620 --> 00:16:23,839
child and a pronged first person child

359
00:16:23,839 --> 00:16:26,180
is that it's quite narrow because it has

360
00:16:26,180 --> 00:16:29,660
ID parent ID chow-chow already and what

361
00:16:29,660 --> 00:16:31,480
you are doing when you are asking a

362
00:16:31,480 --> 00:16:33,920
relational graph question is basically

363
00:16:33,920 --> 00:16:36,380
you are taking one ID and matching with

364
00:16:36,380 --> 00:16:38,839
this huge huge table with parent child

365
00:16:38,839 --> 00:16:41,570
then you have an some some IDs like five

366
00:16:41,570 --> 00:16:43,640
ten and then again once again you are

367
00:16:43,640 --> 00:16:46,550
matching it with this huge table it you

368
00:16:46,550 --> 00:16:48,680
get the point it's it's not the best way

369
00:16:48,680 --> 00:16:50,630
to do it in graph even graduate

370
00:16:50,630 --> 00:16:54,110
databases you actually store the IDS at

371
00:16:54,110 --> 00:16:56,899
the node so getting note you actually

372
00:16:56,899 --> 00:16:58,279
have the IDS so you don't have to

373
00:16:58,279 --> 00:17:00,620
process it individually and do this

374
00:17:00,620 --> 00:17:03,829
drawing all the time but enough talk

375
00:17:03,829 --> 00:17:05,630
let's see examples let's take Twitter

376
00:17:05,630 --> 00:17:09,380
from 2009 basically you will have the

377
00:17:09,380 --> 00:17:12,040
slide but this is the whole description

378
00:17:12,040 --> 00:17:15,740
almost almost two billion watches more

379
00:17:15,740 --> 00:17:18,199
than 40 million users and with the

380
00:17:18,199 --> 00:17:20,900
statistics what it done is using Titan

381
00:17:20,900 --> 00:17:23,660
it is basically both 40 the cheapest

382
00:17:23,660 --> 00:17:26,809
virtual machines on Amazon and six three

383
00:17:26,809 --> 00:17:30,140
expensive ones and what they will able

384
00:17:30,140 --> 00:17:32,480
to achieve is don't machine code

385
00:17:32,480 --> 00:17:33,710
pressing all the time in a loop

386
00:17:33,710 --> 00:17:37,030
basically so this is the time that I got

387
00:17:37,030 --> 00:17:40,100
and it's quite fast and it's what what

388
00:17:40,100 --> 00:17:42,770
is even more interesting it costs them

389
00:17:42,770 --> 00:17:47,929
11 bucks an hour and that's cheap yeah

390
00:17:47,929 --> 00:17:52,920
let's go neo4j y4j whiny of

391
00:17:52,920 --> 00:17:55,050
I did did I get interested into neo4j

392
00:17:55,050 --> 00:17:58,410
because there's a side DB engines come

393
00:17:58,410 --> 00:18:01,740
and on this side neo4j is that twenty

394
00:18:01,740 --> 00:18:04,830
four twenty first the most product

395
00:18:04,830 --> 00:18:07,250
database and it's a really good position

396
00:18:07,250 --> 00:18:10,230
and of course it's what is the number

397
00:18:10,230 --> 00:18:12,300
one graph database there is it has

398
00:18:12,300 --> 00:18:15,830
drivers for almost annual any language

399
00:18:15,830 --> 00:18:19,860
cipher just got it is we have we have

400
00:18:19,860 --> 00:18:22,440
open ciphers so cipher is basically the

401
00:18:22,440 --> 00:18:24,480
in the industry standard for asking

402
00:18:24,480 --> 00:18:27,510
graph questions that's it and of course

403
00:18:27,510 --> 00:18:33,390
there is a free version and yeah so my

404
00:18:33,390 --> 00:18:35,070
problem we have I have to cook it cook

405
00:18:35,070 --> 00:18:37,290
it is a contextual search engine so what

406
00:18:37,290 --> 00:18:40,140
it does is basically scribe scraped the

407
00:18:40,140 --> 00:18:42,710
web it's looking for page that has a

408
00:18:42,710 --> 00:18:46,470
cookie recipe then it extracts the text

409
00:18:46,470 --> 00:18:48,410
then from the text it extracts the

410
00:18:48,410 --> 00:18:51,060
ingredients amount unit sends a lot of

411
00:18:51,060 --> 00:18:53,160
data it's it's it's doing it in

412
00:18:53,160 --> 00:18:56,940
automatically so one part of one of most

413
00:18:56,940 --> 00:18:59,300
of the most critical parts is basically

414
00:18:59,300 --> 00:19:02,760
and connecting those ingredients found

415
00:19:02,760 --> 00:19:04,380
in the text with the actual ingredients

416
00:19:04,380 --> 00:19:07,020
and this is actually the graph of my

417
00:19:07,020 --> 00:19:07,730
ingredients

418
00:19:07,730 --> 00:19:10,920
viens have are about three thousand

419
00:19:10,920 --> 00:19:14,070
nodes they have mold more than three

420
00:19:14,070 --> 00:19:17,400
thousand edges and because this is a

421
00:19:17,400 --> 00:19:21,330
treat so there are no cycles the deep

422
00:19:21,330 --> 00:19:23,730
the depth of this graph is about the

423
00:19:23,730 --> 00:19:27,560
ninth level and eight many ingredients

424
00:19:27,560 --> 00:19:32,130
so basically what it so buddy what was

425
00:19:32,130 --> 00:19:34,830
my problem is that I have errors and

426
00:19:34,830 --> 00:19:36,960
sometimes I misinterpreted some

427
00:19:36,960 --> 00:19:39,900
ingredients so I basically wanted to do

428
00:19:39,900 --> 00:19:43,710
a some sanity check on my data so and it

429
00:19:43,710 --> 00:19:47,280
to well ask this if there are any ink

430
00:19:47,280 --> 00:19:50,370
recipes that have fish and sweet drinks

431
00:19:50,370 --> 00:19:52,650
like our Cola you don't normally see

432
00:19:52,650 --> 00:19:56,820
those two things in one recipe if and

433
00:19:56,820 --> 00:19:59,850
he's saying not not student person is

434
00:19:59,850 --> 00:20:02,580
cooking it I used to do really crazy

435
00:20:02,580 --> 00:20:05,640
stuff cooking studying so basically

436
00:20:05,640 --> 00:20:06,480
let's do it

437
00:20:06,480 --> 00:20:09,000
first I have a match and match is the

438
00:20:09,000 --> 00:20:11,670
keyword and this will be suffer and

439
00:20:11,670 --> 00:20:14,790
suffer is it's a crazy love between SQL

440
00:20:14,790 --> 00:20:18,270
and ASCII art so yeah but it's really

441
00:20:18,270 --> 00:20:21,150
good it's better than SQL you have a

442
00:20:21,150 --> 00:20:23,370
match and much sale says that yeah I

443
00:20:23,370 --> 00:20:25,500
would be showing patterns and this is

444
00:20:25,500 --> 00:20:27,150
very important world I will be showing

445
00:20:27,150 --> 00:20:30,030
patterns now not exactly they not

446
00:20:30,030 --> 00:20:33,210
exactly matches I will be looking yeah

447
00:20:33,210 --> 00:20:35,940
so next I'm saying that I want to I want

448
00:20:35,940 --> 00:20:38,550
to find a note if I put anything in a

449
00:20:38,550 --> 00:20:42,390
round braces this is a note so yeah you

450
00:20:42,390 --> 00:20:46,500
actually can get the Ascot and this note

451
00:20:46,500 --> 00:20:48,870
has to be type of recipe and I'm calling

452
00:20:48,870 --> 00:20:52,820
it our next I'm also want it ingredients

453
00:20:52,820 --> 00:20:56,010
there's a notation next I want our

454
00:20:56,010 --> 00:20:59,430
relationship between those and this is

455
00:20:59,430 --> 00:21:03,180
the name of the of the relation this

456
00:21:03,180 --> 00:21:07,860
means this actually shows you the ASCII

457
00:21:07,860 --> 00:21:12,330
art part next I would like to return

458
00:21:12,330 --> 00:21:16,500
return them so yeah are and then next a

459
00:21:16,500 --> 00:21:19,320
bit more funky part and the most awesome

460
00:21:19,320 --> 00:21:22,410
part it's like I get the I get the

461
00:21:22,410 --> 00:21:25,260
ingredient and I saying that will

462
00:21:25,260 --> 00:21:30,260
traverse from this note through through

463
00:21:30,260 --> 00:21:33,780
through relationships of type from and

464
00:21:33,780 --> 00:21:37,890
specification and do it from one to nine

465
00:21:37,890 --> 00:21:40,470
Flavell basically so I'm doing yeah and

466
00:21:40,470 --> 00:21:44,310
until you get to to the note of type

467
00:21:44,310 --> 00:21:47,670
indigent which has made data of name

468
00:21:47,670 --> 00:21:50,220
sweet drinks and I'm doing exactly the

469
00:21:50,220 --> 00:21:54,180
same with fish turns out you really

470
00:21:54,180 --> 00:21:57,840
should put a limit on it yeah

471
00:21:57,840 --> 00:22:02,520
this query actually takes on SQL server

472
00:22:02,520 --> 00:22:06,600
about 20 seconds on the near I was able

473
00:22:06,600 --> 00:22:08,850
without any problems to get to a hundred

474
00:22:08,850 --> 00:22:11,640
milliseconds yeah because I am asking

475
00:22:11,640 --> 00:22:14,070
our relational graph query and it's

476
00:22:14,070 --> 00:22:16,860
frequently fast and what's fast I could

477
00:22:16,860 --> 00:22:20,010
do it faster probably on on our relation

478
00:22:20,010 --> 00:22:20,400
the

479
00:22:20,400 --> 00:22:22,260
but I would have to do normal as my data

480
00:22:22,260 --> 00:22:25,010
and in this case this is a sanity check

481
00:22:25,010 --> 00:22:27,840
it's not a part of my domain so I don't

482
00:22:27,840 --> 00:22:30,390
want to have any I don't want to change

483
00:22:30,390 --> 00:22:33,600
my domain term at the database to fit to

484
00:22:33,600 --> 00:22:38,040
answer this query faster yeah so to wrap

485
00:22:38,040 --> 00:22:41,490
up because my time is actually ending I

486
00:22:41,490 --> 00:22:44,160
think when to use graph database

487
00:22:44,160 --> 00:22:46,410
databases when you are talking about her

488
00:22:46,410 --> 00:22:49,500
article data structures basically next

489
00:22:49,500 --> 00:22:51,600
where there's a saying that you should

490
00:22:51,600 --> 00:22:54,930
use you should choose graph it places

491
00:22:54,930 --> 00:22:57,420
when your relationships are more

492
00:22:57,420 --> 00:22:59,940
interesting than your data so what is

493
00:22:59,940 --> 00:23:02,780
the sentence is saying is that basically

494
00:23:02,780 --> 00:23:05,280
if you are more interested in the

495
00:23:05,280 --> 00:23:07,410
relations than your data like actually

496
00:23:07,410 --> 00:23:09,870
the text and the blob storage and so on

497
00:23:09,870 --> 00:23:13,080
go go to gravity the basis next for

498
00:23:13,080 --> 00:23:14,430
searching patterns in data you can

499
00:23:14,430 --> 00:23:17,580
actually visualize quite easy and they

500
00:23:17,580 --> 00:23:20,910
are really good tools also integrating

501
00:23:20,910 --> 00:23:23,550
with neo4j very very easy used in Panama

502
00:23:23,550 --> 00:23:25,920
papers for example and to get the sense

503
00:23:25,920 --> 00:23:27,990
of the data where and when you should

504
00:23:27,990 --> 00:23:31,050
not use graduate abases first for data

505
00:23:31,050 --> 00:23:32,790
manipulation and heavy systems and if

506
00:23:32,790 --> 00:23:35,090
you know if your nodes will have

507
00:23:35,090 --> 00:23:38,580
hundreds of fields or will have huge

508
00:23:38,580 --> 00:23:42,120
blob objects and so on so on think about

509
00:23:42,120 --> 00:23:44,430
it twice because gravity bases are for

510
00:23:44,430 --> 00:23:47,610
relationship not exactly for storing

511
00:23:47,610 --> 00:23:49,980
blob files we'd have solid megabytes in

512
00:23:49,980 --> 00:23:52,320
each node next when you are thinking

513
00:23:52,320 --> 00:23:54,390
about big data is it transactionality

514
00:23:54,390 --> 00:23:57,240
it's won't probably be your best pick

515
00:23:57,240 --> 00:24:01,440
because it will be heavy and the last

516
00:24:01,440 --> 00:24:03,930
but the most important i really wouldn't

517
00:24:03,930 --> 00:24:06,540
like for someone saying yeah yeah i will

518
00:24:06,540 --> 00:24:08,730
just grab my relational database and

519
00:24:08,730 --> 00:24:10,470
replace it with a graph database because

520
00:24:10,470 --> 00:24:12,600
in some cases it will be really awesome

521
00:24:12,600 --> 00:24:16,290
and fast but they are not the most

522
00:24:16,290 --> 00:24:20,070
general purpose databases that basically

523
00:24:20,070 --> 00:24:22,410
racial basis database are also bad

524
00:24:22,410 --> 00:24:25,530
during those 50 years we we we were able

525
00:24:25,530 --> 00:24:28,380
to make relation the basis good at

526
00:24:28,380 --> 00:24:30,930
almost anything but not super good and

527
00:24:30,930 --> 00:24:33,809
and but not super good at anything

528
00:24:33,809 --> 00:24:38,899
yeah so questions and I will wrap up

529
00:24:38,899 --> 00:24:41,220
thanks

530
00:24:41,220 --> 00:24:48,739
[Applause]

