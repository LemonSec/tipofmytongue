1
00:00:04,790 --> 00:00:09,620
you can start great perfect all right

2
00:00:09,620 --> 00:00:11,700
everybody settle down

3
00:00:11,700 --> 00:00:14,250
let's get started here oh wait not that

4
00:00:14,250 --> 00:00:16,560
close welcome to the future of small

5
00:00:16,560 --> 00:00:18,539
languages panel I'm Chris Webber I'm

6
00:00:18,539 --> 00:00:20,939
gonna be the moderator of this fine

7
00:00:20,939 --> 00:00:24,599
event and now the other panelists may

8
00:00:24,599 --> 00:00:27,989
introduce themselves so good morning I'm

9
00:00:27,989 --> 00:00:29,279
Ludovic Cortese

10
00:00:29,279 --> 00:00:32,130
I'm Co maintainer of new guy together

11
00:00:32,130 --> 00:00:35,489
with Andy Wingo and mark Weaver also

12
00:00:35,489 --> 00:00:40,170
working on new geeks hi I'm Justin

13
00:00:40,170 --> 00:00:42,600
Commack I work on various open source

14
00:00:42,600 --> 00:00:45,420
projects for docker my interest in small

15
00:00:45,420 --> 00:00:47,460
languages comes from using being a long

16
00:00:47,460 --> 00:00:53,580
time lower user hello software engineer

17
00:00:53,580 --> 00:00:56,310
studied at the University where Lille

18
00:00:56,310 --> 00:00:57,960
was created I forgot to say my name

19
00:00:57,960 --> 00:01:02,220
I'm Etienne and and yes I am very

20
00:01:02,220 --> 00:01:07,619
passionate about the way well great well

21
00:01:07,619 --> 00:01:09,930
it's been a year since we did the same

22
00:01:09,930 --> 00:01:13,470
panel it seems like you know lots of

23
00:01:13,470 --> 00:01:15,030
things been moving fast in the language

24
00:01:15,030 --> 00:01:17,490
world so what well maybe we should open

25
00:01:17,490 --> 00:01:19,800
up with between this and last year

26
00:01:19,800 --> 00:01:22,290
what's been the maybe the the change in

27
00:01:22,290 --> 00:01:23,610
a vision of the future of small

28
00:01:23,610 --> 00:01:25,530
languages what's the interesting things

29
00:01:25,530 --> 00:01:27,840
that are happening respectively in

30
00:01:27,840 --> 00:01:33,360
guy'll and Lua from your perspectives so

31
00:01:33,360 --> 00:01:35,940
I feel like there there's been a lot of

32
00:01:35,940 --> 00:01:38,220
new people probably coming to guile and

33
00:01:38,220 --> 00:01:40,590
part of it is due to the fact that there

34
00:01:40,590 --> 00:01:44,280
is a new dynamic I mean with guy 2.2

35
00:01:44,280 --> 00:01:46,470
coming up and people are trying new

36
00:01:46,470 --> 00:01:49,710
things so they're like people like Chris

37
00:01:49,710 --> 00:01:52,500
for instance looking at networking and

38
00:01:52,500 --> 00:01:53,940
the synchronous programming trying to

39
00:01:53,940 --> 00:01:55,799
take advantage of the limited

40
00:01:55,799 --> 00:01:57,720
continuations and this kind of feature

41
00:01:57,720 --> 00:02:00,479
that is not unique to guy but still

42
00:02:00,479 --> 00:02:02,790
quite you know you don't find it in in

43
00:02:02,790 --> 00:02:06,150
every language I guess yeah so there's

44
00:02:06,150 --> 00:02:09,209
been a renewal of interest I would say

45
00:02:09,209 --> 00:02:13,470
in guy and also because guy 2.2 is going

46
00:02:13,470 --> 00:02:15,360
to be faster there's also people looking

47
00:02:15,360 --> 00:02:17,710
at things that we just wouldn't even

48
00:02:17,710 --> 00:02:20,440
see there before like doing you know

49
00:02:20,440 --> 00:02:23,440
game engines doing that kind of stuff

50
00:02:23,440 --> 00:02:25,630
and that's you know you need some some

51
00:02:25,630 --> 00:02:27,250
sort of performance that we just didn't

52
00:02:27,250 --> 00:02:29,050
have before and now it's really getting

53
00:02:29,050 --> 00:02:31,990
interesting we can go deeper and to the

54
00:02:31,990 --> 00:02:34,000
lower levels so I think that's that's

55
00:02:34,000 --> 00:02:37,000
pretty cool yeah apart from that I

56
00:02:37,000 --> 00:02:39,280
should also I guess mention gigs which

57
00:02:39,280 --> 00:02:41,290
is you know a package manager and

58
00:02:41,290 --> 00:02:44,590
distribution I guess the number of

59
00:02:44,590 --> 00:02:46,330
people are coming to gates because of

60
00:02:46,330 --> 00:02:49,000
its features as a package manager you

61
00:02:49,000 --> 00:02:51,370
know but you get to learn scheme somehow

62
00:02:51,370 --> 00:02:54,550
even if it was not your intent and yeah

63
00:02:54,550 --> 00:02:56,200
I'm guessing people are starting to

64
00:02:56,200 --> 00:03:00,299
write more scheme also because of geese

65
00:03:03,030 --> 00:03:05,760
Louis tends to be quite a slow-moving

66
00:03:05,760 --> 00:03:09,400
language and what we find we've got

67
00:03:09,400 --> 00:03:11,200
multiple implementations I think one of

68
00:03:11,200 --> 00:03:12,970
the things I notice here is people

69
00:03:12,970 --> 00:03:14,980
continue to make more implementations of

70
00:03:14,980 --> 00:03:18,580
lure we've had people who ask me about

71
00:03:18,580 --> 00:03:20,460
the go implementation the Oh camel

72
00:03:20,460 --> 00:03:22,480
implementation and various other ones

73
00:03:22,480 --> 00:03:26,680
like um while Lua has this great high

74
00:03:26,680 --> 00:03:29,170
performance lure yet again that kind of

75
00:03:29,170 --> 00:03:30,430
divided the community because it's a

76
00:03:30,430 --> 00:03:32,050
separate implementation and it's not

77
00:03:32,050 --> 00:03:34,210
entirely compatible so in a way I think

78
00:03:34,210 --> 00:03:36,730
we've got we've got we've got a problem

79
00:03:36,730 --> 00:03:39,280
if too many lures not not too few and

80
00:03:39,280 --> 00:03:40,270
that's one of the things I've really

81
00:03:40,270 --> 00:03:41,950
been kind of worrying about this year

82
00:03:41,950 --> 00:03:44,440
that we haven't got a single I mean

83
00:03:44,440 --> 00:03:46,840
there we haven't got a single lure

84
00:03:46,840 --> 00:03:48,670
community so much as I would have hoped

85
00:03:48,670 --> 00:03:53,440
I think that's a matter of perspective

86
00:03:53,440 --> 00:03:55,690
because well some people in the

87
00:03:55,690 --> 00:03:57,910
community tend to sit as different

88
00:03:57,910 --> 00:04:00,400
things or look at it it's all low it's

89
00:04:00,400 --> 00:04:04,840
all in the same family and then and the

90
00:04:04,840 --> 00:04:06,520
more things they see happening to me it

91
00:04:06,520 --> 00:04:08,350
seems like okay there's more people

92
00:04:08,350 --> 00:04:10,390
involved in look just like get together

93
00:04:10,390 --> 00:04:12,550
and consider the same thing and things

94
00:04:12,550 --> 00:04:18,370
would move along easier but apart from

95
00:04:18,370 --> 00:04:20,410
more low implementations coming up what

96
00:04:20,410 --> 00:04:25,420
I have seen changing from last year to

97
00:04:25,420 --> 00:04:30,760
now two things one is in a more and more

98
00:04:30,760 --> 00:04:33,090
Lua

99
00:04:33,460 --> 00:04:36,759
me in advance and the machine learning

100
00:04:36,759 --> 00:04:39,970
field so there is a framework called

101
00:04:39,970 --> 00:04:44,729
torch that uses Lord yet because of its

102
00:04:44,729 --> 00:04:48,490
very fast performance and it's

103
00:04:48,490 --> 00:04:50,879
interesting because there are lots of

104
00:04:50,879 --> 00:04:53,440
important companies backing it up if you

105
00:04:53,440 --> 00:04:55,180
go to the list of contributors to see

106
00:04:55,180 --> 00:04:58,360
people from Facebook Twitter Google so

107
00:04:58,360 --> 00:05:00,819
it's nice to see that there are big

108
00:05:00,819 --> 00:05:04,599
companies giving support in the end it's

109
00:05:04,599 --> 00:05:07,949
important and helps a lot

110
00:05:08,879 --> 00:05:14,800
apart and besides that a single also

111
00:05:14,800 --> 00:05:17,699
seemed like a momentum in terms of

112
00:05:17,699 --> 00:05:22,120
community this year we are having three

113
00:05:22,120 --> 00:05:25,960
lower related conferences this year

114
00:05:25,960 --> 00:05:29,500
which I think it's a new record ever

115
00:05:29,500 --> 00:05:32,710
since it's been following what goes on

116
00:05:32,710 --> 00:05:35,229
with Luis so we have like running Russia

117
00:05:35,229 --> 00:05:37,389
well in Brazil and we'll have the little

118
00:05:37,389 --> 00:05:41,229
workshop somewhere and there's a little

119
00:05:41,229 --> 00:05:44,800
deaf room so if they count that as a

120
00:05:44,800 --> 00:05:46,810
community it's an important community

121
00:05:46,810 --> 00:05:50,500
and that's four so there seems to be

122
00:05:50,500 --> 00:05:53,279
like lots of things going on and lots of

123
00:05:53,279 --> 00:05:57,699
people starting to see Lua recently so

124
00:05:57,699 --> 00:05:59,590
this community momentum I think it's

125
00:05:59,590 --> 00:06:01,960
happening right now and that's that's

126
00:06:01,960 --> 00:06:03,610
very different than it was from last

127
00:06:03,610 --> 00:06:08,949
year well we don't have multiple Geils

128
00:06:08,949 --> 00:06:10,779
well we sort of do with the multiple

129
00:06:10,779 --> 00:06:12,849
versions but we have so many schemes

130
00:06:12,849 --> 00:06:15,310
that I guess that we've got a similar

131
00:06:15,310 --> 00:06:17,469
problem there but what that actually

132
00:06:17,469 --> 00:06:19,000
brings up an interesting conversation

133
00:06:19,000 --> 00:06:23,949
about when experimentation with

134
00:06:23,949 --> 00:06:26,319
different implementations and divergence

135
00:06:26,319 --> 00:06:29,169
and when divergence whether it's a kind

136
00:06:29,169 --> 00:06:30,930
of a linear progression of new features

137
00:06:30,930 --> 00:06:35,500
or you know actually you know having

138
00:06:35,500 --> 00:06:38,710
different implementations or an etc in

139
00:06:38,710 --> 00:06:40,719
which way is can this be beneficial in

140
00:06:40,719 --> 00:06:42,880
which ways can I kind of hamper things

141
00:06:42,880 --> 00:06:45,190
is it is it not positive or

142
00:06:45,190 --> 00:06:50,590
or what are you what do you think so

143
00:06:50,590 --> 00:06:52,420
yeah with respect to guy leads it's

144
00:06:52,420 --> 00:06:54,550
traditionally been pretty much a

145
00:06:54,550 --> 00:06:58,210
slow-moving project I think and so the

146
00:06:58,210 --> 00:07:00,820
the approach that we had was to have you

147
00:07:00,820 --> 00:07:03,940
know stable series which are like super

148
00:07:03,940 --> 00:07:08,830
stable like they're basically very few

149
00:07:08,830 --> 00:07:13,180
new features if any and so we would you

150
00:07:13,180 --> 00:07:15,400
know create a new stable series every

151
00:07:15,400 --> 00:07:17,410
time we wanted to do something important

152
00:07:17,410 --> 00:07:20,470
and that's that's a good thing in a way

153
00:07:20,470 --> 00:07:22,330
because people using the stables theory

154
00:07:22,330 --> 00:07:24,850
is not that stable but on the other hand

155
00:07:24,850 --> 00:07:28,720
it gives us as guy'll developers an

156
00:07:28,720 --> 00:07:31,270
incentive to actually go ahead and push

157
00:07:31,270 --> 00:07:33,010
as many new features as we can in the

158
00:07:33,010 --> 00:07:36,400
new stable release right and so we have

159
00:07:36,400 --> 00:07:39,670
a tradition of having you know new

160
00:07:39,670 --> 00:07:42,790
stable releases so currently 2.2 is in

161
00:07:42,790 --> 00:07:45,040
the works so we call it 2.1 because it's

162
00:07:45,040 --> 00:07:49,150
not fully stable yet but there are many

163
00:07:49,150 --> 00:07:52,120
many new features like it's a it's

164
00:07:52,120 --> 00:07:54,220
essentially a new compiler it's a new

165
00:07:54,220 --> 00:07:56,380
virtual machine for instance so you can

166
00:07:56,380 --> 00:08:00,460
imagine well as a user of guide that's

167
00:08:00,460 --> 00:08:02,350
not necessarily something that you that

168
00:08:02,350 --> 00:08:03,970
you would notice right except that it's

169
00:08:03,970 --> 00:08:07,900
faster but yeah still I mean I and

170
00:08:07,900 --> 00:08:09,970
that's just the surface of things there

171
00:08:09,970 --> 00:08:12,450
are so many new features every time

172
00:08:12,450 --> 00:08:15,700
largely thanks to Andy Wingo who is has

173
00:08:15,700 --> 00:08:17,740
been doing crazy work on this particular

174
00:08:17,740 --> 00:08:21,340
release but yeah I mean in the past that

175
00:08:21,340 --> 00:08:23,650
was also a huge difference between guide

176
00:08:23,650 --> 00:08:27,040
128 and 2.0 and we know that for some

177
00:08:27,040 --> 00:08:30,040
projects some users it's been quite a

178
00:08:30,040 --> 00:08:31,900
bit of a step to move from one stable

179
00:08:31,900 --> 00:08:36,039
release to to the next one some projects

180
00:08:36,039 --> 00:08:38,559
just were relying like on internals on

181
00:08:38,559 --> 00:08:40,990
of the previous stable release and that

182
00:08:40,990 --> 00:08:43,960
has led to problems too so it's I don't

183
00:08:43,960 --> 00:08:46,510
know what the ideal model is I think

184
00:08:46,510 --> 00:08:48,370
there are good things about the way

185
00:08:48,370 --> 00:08:50,980
guy'll has been doing things but it's

186
00:08:50,980 --> 00:08:54,760
also for users it's also usually a bit

187
00:08:54,760 --> 00:08:57,070
of a step to switch from one version to

188
00:08:57,070 --> 00:08:58,840
the next one so

189
00:08:58,840 --> 00:09:01,660
I don't know how you handle things well

190
00:09:01,660 --> 00:09:05,230
I think that the the two main

191
00:09:05,230 --> 00:09:07,180
implementations are the standard Lua

192
00:09:07,180 --> 00:09:09,850
which is great and versed and then we

193
00:09:09,850 --> 00:09:11,200
have lurch it which is extraordinarily

194
00:09:11,200 --> 00:09:13,480
fast like orders of magnitude faster and

195
00:09:13,480 --> 00:09:16,630
is native see speed and that created a

196
00:09:16,630 --> 00:09:18,370
whole different set of applications that

197
00:09:18,370 --> 00:09:19,870
people are interested in and when

198
00:09:19,870 --> 00:09:21,610
there's things like snaps which which

199
00:09:21,610 --> 00:09:23,770
and Andy Wingo actually works on for

200
00:09:23,770 --> 00:09:27,010
example which you know it's 10 100 gig

201
00:09:27,010 --> 00:09:28,990
Ethernet switching in userspace all

202
00:09:28,990 --> 00:09:32,020
written in lower jet which is and you

203
00:09:32,020 --> 00:09:33,580
know really an application that no one

204
00:09:33,580 --> 00:09:35,140
would have even considered doing had

205
00:09:35,140 --> 00:09:36,580
there not been a different fast

206
00:09:36,580 --> 00:09:39,910
implementation that was designed around

207
00:09:39,910 --> 00:09:42,640
performance and had a really easy to use

208
00:09:42,640 --> 00:09:46,180
CF Fi interface and then there's other

209
00:09:46,180 --> 00:09:49,060
people he's in that CloudFlare the using

210
00:09:49,060 --> 00:09:52,210
it there's a they've done a BB PF

211
00:09:52,210 --> 00:09:54,550
compiler so you can run the code in in

212
00:09:54,550 --> 00:09:56,589
the Linux kernel among other things and

213
00:09:56,589 --> 00:09:59,170
so there's a there's a whole different

214
00:09:59,170 --> 00:10:00,490
set of community and different people

215
00:10:00,490 --> 00:10:02,440
that came from a different

216
00:10:02,440 --> 00:10:05,020
implementation because its performance

217
00:10:05,020 --> 00:10:07,570
was so was so different and suddenly

218
00:10:07,570 --> 00:10:08,650
there's a bunch of you know kind of

219
00:10:08,650 --> 00:10:11,070
systems programmers and people using it

220
00:10:11,070 --> 00:10:14,140
which is very different you know from

221
00:10:14,140 --> 00:10:16,810
the kind of games and embedded scripting

222
00:10:16,810 --> 00:10:22,660
in in other you know other other use

223
00:10:22,660 --> 00:10:24,850
cases so I think that a radically

224
00:10:24,850 --> 00:10:27,880
different implementation can you know

225
00:10:27,880 --> 00:10:29,560
bring in whole different community and

226
00:10:29,560 --> 00:10:30,910
who's interested in different things and

227
00:10:30,910 --> 00:10:34,060
had a whole lot of diversity and and new

228
00:10:34,060 --> 00:10:37,089
ideas and new new use cases so I think

229
00:10:37,089 --> 00:10:40,180
it it can it can be really constructive

230
00:10:40,180 --> 00:10:42,070
to have something that's not entirely

231
00:10:42,070 --> 00:10:45,130
100% compatible if it gives you new

232
00:10:45,130 --> 00:10:47,560
opportunities to to try out new things

233
00:10:47,560 --> 00:10:50,380
and working with bring scripts into new

234
00:10:50,380 --> 00:10:53,939
areas that haven't been scripted before

235
00:10:54,990 --> 00:10:58,089
I don't think you have much where and

236
00:10:58,089 --> 00:11:00,970
that but just to explain the current

237
00:11:00,970 --> 00:11:06,010
issue between having and very

238
00:11:06,010 --> 00:11:08,800
low besides that the logit has this

239
00:11:08,800 --> 00:11:10,900
incredible performance so this is a good

240
00:11:10,900 --> 00:11:12,790
thing but the problem is that

241
00:11:12,790 --> 00:11:15,790
the syntax compatibility is basically

242
00:11:15,790 --> 00:11:18,340
locked in an older version which is the

243
00:11:18,340 --> 00:11:23,370
wor 5.1 so a lot of people will have

244
00:11:23,370 --> 00:11:29,370
being you know blocked and upgrading

245
00:11:33,540 --> 00:11:36,430
exactly and but even if you're trying to

246
00:11:36,430 --> 00:11:38,850
work with something that it's like

247
00:11:38,850 --> 00:11:40,990
cross-compatible was different what

248
00:11:40,990 --> 00:11:43,630
implementations you will for example

249
00:11:43,630 --> 00:11:47,290
write in lieu of 5:1 manners so we can

250
00:11:47,290 --> 00:11:50,080
run on vanilla Lua and and luige it and

251
00:11:50,080 --> 00:11:54,330
I like many of the features of Lua 5 3

252
00:11:54,330 --> 00:11:57,520
that I'm not present and low budget for

253
00:11:57,520 --> 00:11:59,200
example so this is the problem we have

254
00:11:59,200 --> 00:12:03,750
then we are still looking hoping for

255
00:12:03,750 --> 00:12:08,590
solution and oh yes I am very happy that

256
00:12:08,590 --> 00:12:11,830
we have all this new bunch of people

257
00:12:11,830 --> 00:12:18,040
using work for different problems so I

258
00:12:18,040 --> 00:12:19,960
tell you brought up something that I

259
00:12:19,960 --> 00:12:22,360
wanted to follow up on which was about

260
00:12:22,360 --> 00:12:26,860
the growth of Luis community and you

261
00:12:26,860 --> 00:12:28,660
know in kind of our pre conversation

262
00:12:28,660 --> 00:12:30,460
about this we all agreed that we were

263
00:12:30,460 --> 00:12:31,840
interested in the conversation around

264
00:12:31,840 --> 00:12:34,390
community so I'm interested in what do

265
00:12:34,390 --> 00:12:36,730
you think you can we can all do to

266
00:12:36,730 --> 00:12:41,170
improve our communities and and what do

267
00:12:41,170 --> 00:12:43,450
you think or just generally comments on

268
00:12:43,450 --> 00:12:45,160
community where you'd like it see to go

269
00:12:45,160 --> 00:12:46,660
what are our current strengths what

270
00:12:46,660 --> 00:12:48,610
could we what could we do better at this

271
00:12:48,610 --> 00:12:55,570
point so yeah like I was saying with the

272
00:12:55,570 --> 00:12:57,790
advent of guile two point one before

273
00:12:57,790 --> 00:13:00,750
that two point so we've been seeing more

274
00:13:00,750 --> 00:13:03,820
technically diverse communities around

275
00:13:03,820 --> 00:13:06,490
guile because guile used to be targeting

276
00:13:06,490 --> 00:13:08,920
a very specific community which was you

277
00:13:08,920 --> 00:13:10,540
know embedding languages like pretty

278
00:13:10,540 --> 00:13:12,820
much like Lua in a way maybe more

279
00:13:12,820 --> 00:13:15,820
heavyweight but still you know embedding

280
00:13:15,820 --> 00:13:17,800
in a big C application that was a main

281
00:13:17,800 --> 00:13:20,920
use case and starting from 2.0 it's

282
00:13:20,920 --> 00:13:23,200
become you know standalone scheme

283
00:13:23,200 --> 00:13:25,150
implementation so that has attracted

284
00:13:25,150 --> 00:13:26,360
people who just

285
00:13:26,360 --> 00:13:28,880
- right entire programs directly in

286
00:13:28,880 --> 00:13:32,209
scheme and and yeah we Stu point to

287
00:13:32,209 --> 00:13:34,970
we're gaining more again to action in

288
00:13:34,970 --> 00:13:36,440
different domains like I said before

289
00:13:36,440 --> 00:13:38,120
because it's just it has better

290
00:13:38,120 --> 00:13:39,800
performance and it's I guess it's

291
00:13:39,800 --> 00:13:42,230
similar to what happens with legit so

292
00:13:42,230 --> 00:13:45,470
that's for the technical part of it well

293
00:13:45,470 --> 00:13:48,019
then there also there is the issues in

294
00:13:48,019 --> 00:13:49,940
general but which are not related to

295
00:13:49,940 --> 00:13:52,820
technicalities just like in many free

296
00:13:52,820 --> 00:13:56,660
software communities I guess I mean

297
00:13:56,660 --> 00:13:58,250
we've been trying to work on it but

298
00:13:58,250 --> 00:14:01,070
that's yeah that's that takes time I

299
00:14:01,070 --> 00:14:08,630
guess I think in many ways with with us

300
00:14:08,630 --> 00:14:09,769
with the scripting language you have to

301
00:14:09,769 --> 00:14:11,630
work much harder on community it's quite

302
00:14:11,630 --> 00:14:13,760
there's there's a lot less commonality

303
00:14:13,760 --> 00:14:16,660
between people who are writing

304
00:14:16,660 --> 00:14:18,860
enhancements to world of warcraft and

305
00:14:18,860 --> 00:14:21,529
lower and people who are writing 10 gig

306
00:14:21,529 --> 00:14:24,079
Ethernet switch software in lower it's a

307
00:14:24,079 --> 00:14:25,760
you know that domains are very different

308
00:14:25,760 --> 00:14:30,050
and a lot of the stuff they the way they

309
00:14:30,050 --> 00:14:31,430
use things the the libraries they use

310
00:14:31,430 --> 00:14:34,070
and things I mean especially I think

311
00:14:34,070 --> 00:14:36,800
because lower doesn't try to try and

312
00:14:36,800 --> 00:14:38,149
force a standard library on you or

313
00:14:38,149 --> 00:14:42,680
anything so it's it's it's been it's

314
00:14:42,680 --> 00:14:45,079
been quite a difficult process of

315
00:14:45,079 --> 00:14:46,640
community building across that sort of

316
00:14:46,640 --> 00:14:49,130
thing I think it's it has actually

317
00:14:49,130 --> 00:14:50,510
started working but you have to have a

318
00:14:50,510 --> 00:14:52,250
bunch of people with really diverse

319
00:14:52,250 --> 00:14:55,699
interests who who are interested in you

320
00:14:55,699 --> 00:14:56,870
know bringing these people together and

321
00:14:56,870 --> 00:14:59,390
trying again to talk to each other and

322
00:14:59,390 --> 00:15:01,850
some of whom er I historically people

323
00:15:01,850 --> 00:15:03,170
who don't talk much I'm in the games

324
00:15:03,170 --> 00:15:05,240
industry was always one of the early

325
00:15:05,240 --> 00:15:06,680
adopters of lure but they're not very um

326
00:15:06,680 --> 00:15:10,040
they're not very open-source oriented

327
00:15:10,040 --> 00:15:14,600
then historically I think the kind of

328
00:15:14,600 --> 00:15:16,279
accessibility of mobile gaming and

329
00:15:16,279 --> 00:15:17,300
things has actually changed that a

330
00:15:17,300 --> 00:15:19,459
little bit but the the big companies are

331
00:15:19,459 --> 00:15:22,339
certainly not very not very open and so

332
00:15:22,339 --> 00:15:23,870
he's nothing that's why there

333
00:15:23,870 --> 00:15:25,640
historically there wasn't much of a

334
00:15:25,640 --> 00:15:28,459
community it was very quite narrow it

335
00:15:28,459 --> 00:15:29,390
was the people who actually interested

336
00:15:29,390 --> 00:15:31,760
in implementing the language who formed

337
00:15:31,760 --> 00:15:35,000
the community well I think we've been

338
00:15:35,000 --> 00:15:36,470
working on that and I think having

339
00:15:36,470 --> 00:15:38,690
people who are you know just interested

340
00:15:38,690 --> 00:15:40,490
in where software is used

341
00:15:40,490 --> 00:15:44,520
very diverse environments really helps

342
00:15:44,520 --> 00:15:46,149
[Music]

343
00:15:46,149 --> 00:15:49,490
yes I mean not only the the game

344
00:15:49,490 --> 00:15:54,470
community is as it's at essaouira clean

345
00:15:54,470 --> 00:15:56,330
are doing lots of open source and not

346
00:15:56,330 --> 00:16:02,240
saying lots about what ad many small

347
00:16:02,240 --> 00:16:04,430
companies using Lua embedded as well

348
00:16:04,430 --> 00:16:09,500
they're not their type of groups will

349
00:16:09,500 --> 00:16:11,300
always be writing everything from

350
00:16:11,300 --> 00:16:15,709
scratch and not not something specific

351
00:16:15,709 --> 00:16:17,540
to their use cases and not putting

352
00:16:17,540 --> 00:16:20,600
things not putting in modules on the

353
00:16:20,600 --> 00:16:23,800
rocks not using things there are on

354
00:16:23,800 --> 00:16:30,529
rocks and no it's it's a process like I

355
00:16:30,529 --> 00:16:33,800
remember Shango who is the lead

356
00:16:33,800 --> 00:16:35,750
developer of our packet manager of rocks

357
00:16:35,750 --> 00:16:38,720
like you will go personally it should

358
00:16:38,720 --> 00:16:41,510
github repositories and say you know

359
00:16:41,510 --> 00:16:44,170
this could be luma rocks and just like

360
00:16:44,170 --> 00:16:46,690
create an issue and people will be like

361
00:16:46,690 --> 00:16:51,470
that's true why not and then somebody

362
00:16:51,470 --> 00:16:53,779
would create the rocks back and then and

363
00:16:53,779 --> 00:16:55,730
it will be fine a little bit Bashir

364
00:16:55,730 --> 00:16:58,670
known as a library so you know it's a

365
00:16:58,670 --> 00:17:00,110
little bit like poking around and

366
00:17:00,110 --> 00:17:01,940
talking to people like oh hello you

367
00:17:01,940 --> 00:17:08,170
could you could and then slowly things

368
00:17:08,170 --> 00:17:10,880
start moving around so it's also a

369
00:17:10,880 --> 00:17:14,900
matter of convincing people to do

370
00:17:14,900 --> 00:17:17,240
community things as well it's as I said

371
00:17:17,240 --> 00:17:19,369
it's very difficult to get people

372
00:17:19,369 --> 00:17:22,579
together and get them to talk to each

373
00:17:22,579 --> 00:17:24,260
other but at some point you just have to

374
00:17:24,260 --> 00:17:26,179
say you know what you're gonna meet at

375
00:17:26,179 --> 00:17:30,050
this place everyone show up and some

376
00:17:30,050 --> 00:17:35,570
people will show up so you know no I'm

377
00:17:35,570 --> 00:17:38,360
gonna make this van and and I don't know

378
00:17:38,360 --> 00:17:41,030
if you're gonna have an important number

379
00:17:41,030 --> 00:17:43,910
of people and in the end is this is not

380
00:17:43,910 --> 00:17:45,620
important you just create something

381
00:17:45,620 --> 00:17:48,890
people will show up and it grows from

382
00:17:48,890 --> 00:17:51,860
there and you have to convince others

383
00:17:51,860 --> 00:17:53,670
that that actually works

384
00:17:53,670 --> 00:17:56,790
so I organized last year a conference on

385
00:17:56,790 --> 00:18:01,050
WA in Rayong and I had no idea if people

386
00:18:01,050 --> 00:18:03,240
would show up and in the end the old

387
00:18:03,240 --> 00:18:07,350
siren was full it's like see fix things

388
00:18:07,350 --> 00:18:09,870
happen so I'm trying to convince some

389
00:18:09,870 --> 00:18:12,240
friends to organize meetups in their

390
00:18:12,240 --> 00:18:18,150
cities and that also takes a little bit

391
00:18:18,150 --> 00:18:22,470
of some folks being proactive and

392
00:18:22,470 --> 00:18:28,250
bothering and making things happen I

393
00:18:28,250 --> 00:18:31,320
just wanted to add a note about package

394
00:18:31,320 --> 00:18:33,630
managers like lure works I remember we

395
00:18:33,630 --> 00:18:36,510
discussed it last year and honestly as a

396
00:18:36,510 --> 00:18:38,760
guy person I'm a bit jealous of things

397
00:18:38,760 --> 00:18:40,710
like lure rocks or you know all the

398
00:18:40,710 --> 00:18:43,380
package managers for languages and at

399
00:18:43,380 --> 00:18:45,000
the same time as a disco person I don't

400
00:18:45,000 --> 00:18:46,620
really like them because they are

401
00:18:46,620 --> 00:18:49,140
separate they create new problems but

402
00:18:49,140 --> 00:18:51,000
still I mean when it comes to you know

403
00:18:51,000 --> 00:18:52,950
growing a community I think it's it's

404
00:18:52,950 --> 00:18:54,690
obvious nowadays that it's really

405
00:18:54,690 --> 00:18:55,920
helpful to have this kind of

406
00:18:55,920 --> 00:18:59,670
infrastructure and we don't really have

407
00:18:59,670 --> 00:19:03,300
it in guide because yeah we don't we

408
00:19:03,300 --> 00:19:05,220
have gigs as a package manager but it's

409
00:19:05,220 --> 00:19:08,490
not maybe not suitable for everyone and

410
00:19:08,490 --> 00:19:10,850
we also don't have a standard way to

411
00:19:10,850 --> 00:19:14,880
like to package your software like you

412
00:19:14,880 --> 00:19:16,860
know most people would use Auto tools

413
00:19:16,860 --> 00:19:19,370
and you know this kind of stuff to

414
00:19:19,370 --> 00:19:22,280
configure and package your software but

415
00:19:22,280 --> 00:19:24,660
yeah that's that's not really something

416
00:19:24,660 --> 00:19:27,930
we we want to encourage because I mean

417
00:19:27,930 --> 00:19:30,780
it's it raises the barrier to entry and

418
00:19:30,780 --> 00:19:33,030
so I think we have a problem that we

419
00:19:33,030 --> 00:19:34,680
should fix here in guide because that's

420
00:19:34,680 --> 00:19:36,750
probably one of the things that prevents

421
00:19:36,750 --> 00:19:40,100
us from really growing the community

422
00:19:40,130 --> 00:19:42,330
okay a couple more questions and then

423
00:19:42,330 --> 00:19:43,410
we're gonna open it up to audience

424
00:19:43,410 --> 00:19:44,520
questions I think

425
00:19:44,520 --> 00:19:47,010
but you mentioned infrastructure and I

426
00:19:47,010 --> 00:19:48,810
think you were talking about language

427
00:19:48,810 --> 00:19:50,010
infrastructure but I'm really interested

428
00:19:50,010 --> 00:19:51,390
in the car and the topic of

429
00:19:51,390 --> 00:19:54,120
infrastructure generally right so you

430
00:19:54,120 --> 00:19:56,460
know what what kind of infrastructure

431
00:19:56,460 --> 00:19:58,530
support do you have would you like to

432
00:19:58,530 --> 00:20:00,750
have you know whether or not it's you

433
00:20:00,750 --> 00:20:01,740
know being under an umbrella

434
00:20:01,740 --> 00:20:03,720
organization Geils under canoe right or

435
00:20:03,720 --> 00:20:05,430
whether or not it's you know having

436
00:20:05,430 --> 00:20:07,380
companies actually use it to

437
00:20:07,380 --> 00:20:09,200
implement things and have people be paid

438
00:20:09,200 --> 00:20:11,940
what what infrastructure do we have and

439
00:20:11,940 --> 00:20:29,960
what infrastructure do we want I think I

440
00:20:29,960 --> 00:20:32,400
mean I think Lou is quite diverse and

441
00:20:32,400 --> 00:20:34,800
therefore I think while umbrella might

442
00:20:34,800 --> 00:20:37,620
be difficult we have we have a mixture

443
00:20:37,620 --> 00:20:41,270
of I mean they were came out of a

444
00:20:41,270 --> 00:20:45,510
originally a a University but around the

445
00:20:45,510 --> 00:20:47,880
commercially funded project and that

446
00:20:47,880 --> 00:20:50,820
kind of is a is the mix that lures

447
00:20:50,820 --> 00:20:52,710
always kept there's a there's been

448
00:20:52,710 --> 00:20:55,410
corporate sponsorship in various kinds

449
00:20:55,410 --> 00:20:57,270
of way they're hiring people to work on

450
00:20:57,270 --> 00:21:01,230
things that involve Lua and Virg it was

451
00:21:01,230 --> 00:21:03,960
as his kind it was again it was a sort

452
00:21:03,960 --> 00:21:06,000
of it was a independent project but

453
00:21:06,000 --> 00:21:10,170
always funded by a mixture of people in

454
00:21:10,170 --> 00:21:13,770
the gaming industry CloudFlare other

455
00:21:13,770 --> 00:21:15,780
people like that and so we've kind of

456
00:21:15,780 --> 00:21:17,670
managed without any kind of overarching

457
00:21:17,670 --> 00:21:23,580
organization I think that and then that

458
00:21:23,580 --> 00:21:28,880
I think it's kind of worked okay it's

459
00:21:28,880 --> 00:21:33,450
I'm not sure that I'm not sure there's a

460
00:21:33,450 --> 00:21:36,120
central organization or umbrella or is

461
00:21:36,120 --> 00:21:40,650
necessarily useful I think that the main

462
00:21:40,650 --> 00:21:41,880
thing is whether the community is

463
00:21:41,880 --> 00:21:45,390
healthy whether people are working on it

464
00:21:45,390 --> 00:21:49,140
and and so on but it's I think the

465
00:21:49,140 --> 00:21:50,880
things like the package management and

466
00:21:50,880 --> 00:21:53,790
things it's good to have a single point

467
00:21:53,790 --> 00:21:55,140
of focus it taking a very long time

468
00:21:55,140 --> 00:21:57,450
actually for the rocks to to become that

469
00:21:57,450 --> 00:22:00,600
it's and other projects are still using

470
00:22:00,600 --> 00:22:02,840
their own package management and things

471
00:22:02,840 --> 00:22:05,280
for lower packages still and so I think

472
00:22:05,280 --> 00:22:08,010
those kinds of things it's it's good to

473
00:22:08,010 --> 00:22:10,230
have that some focus around some of

474
00:22:10,230 --> 00:22:13,380
those kind of unifying things but

475
00:22:13,380 --> 00:22:18,330
overall the little kind of homes that

476
00:22:18,330 --> 00:22:21,260
has I mean it

477
00:22:24,030 --> 00:22:27,360
around the project's have have generally

478
00:22:27,360 --> 00:22:32,220
worked quite well yes I think you're

479
00:22:32,220 --> 00:22:34,500
right in the sense that has been doing

480
00:22:34,500 --> 00:22:38,549
all right but all this kind of umbrella

481
00:22:38,549 --> 00:22:40,470
organization around it but at the same

482
00:22:40,470 --> 00:22:44,370
time I think I would like the fluo had

483
00:22:44,370 --> 00:22:48,960
one because I think it will make things

484
00:22:48,960 --> 00:22:53,070
easier for individuals trying to do

485
00:22:53,070 --> 00:22:55,710
especially for someone like me the tries

486
00:22:55,710 --> 00:22:58,830
to do stuff but in the community and I

487
00:22:58,830 --> 00:23:00,450
want to do something was like who do I

488
00:23:00,450 --> 00:23:02,640
talk to about this why just send an

489
00:23:02,640 --> 00:23:05,850
email to Roberto directly this doesn't

490
00:23:05,850 --> 00:23:09,780
seem right it's like I don't know I

491
00:23:09,780 --> 00:23:11,280
having a group of people who are

492
00:23:11,280 --> 00:23:13,910
responsible for I don't know contacting

493
00:23:13,910 --> 00:23:17,850
companies getting funds starting

494
00:23:17,850 --> 00:23:22,129
projects making things happen and

495
00:23:22,340 --> 00:23:24,710
unfortunately in the end it comes down

496
00:23:24,710 --> 00:23:27,660
to money and money has to appear from

497
00:23:27,660 --> 00:23:32,070
somewhere and it would be easier if

498
00:23:32,070 --> 00:23:35,450
there were people responsible for

499
00:23:35,450 --> 00:23:47,360
organizing all that so I was involved

500
00:23:47,360 --> 00:23:51,630
twice not as an organizer so it was I

501
00:23:51,630 --> 00:23:55,230
was participated as a student and last

502
00:23:55,230 --> 00:24:02,190
year participated as a mentor yes yes so

503
00:24:02,190 --> 00:24:04,080
there are there are some things alright

504
00:24:04,080 --> 00:24:06,990
but they are not there's there's the

505
00:24:06,990 --> 00:24:10,650
research laboratory of Lua inside the

506
00:24:10,650 --> 00:24:12,600
university so there are the same people

507
00:24:12,600 --> 00:24:14,820
who are responsible for working on the

508
00:24:14,820 --> 00:24:19,590
language implementation so so there are

509
00:24:19,590 --> 00:24:22,020
the PhD students we're doing there the

510
00:24:22,020 --> 00:24:23,110
teases and

511
00:24:23,110 --> 00:24:25,720
and they are the ones who are organizing

512
00:24:25,720 --> 00:24:28,750
the google Summer of Code because they

513
00:24:28,750 --> 00:24:31,809
want you so they are allocating their

514
00:24:31,809 --> 00:24:36,040
time you know they are doing something

515
00:24:36,040 --> 00:24:40,750
for the community in that sense and in a

516
00:24:40,750 --> 00:24:42,910
very small group of people they are like

517
00:24:42,910 --> 00:24:45,570
two or three people were like university

518
00:24:45,570 --> 00:24:48,940
professors in it so the reason any there

519
00:24:48,940 --> 00:24:53,730
isn't one person was you know allocated

520
00:24:53,730 --> 00:25:01,360
to be responsible of of managing this

521
00:25:01,360 --> 00:25:02,950
part and I think that this will be very

522
00:25:02,950 --> 00:25:07,030
useful yeah I think Google Summer of

523
00:25:07,030 --> 00:25:08,890
Code is one of those things where there

524
00:25:08,890 --> 00:25:10,720
has to be an official organization for

525
00:25:10,720 --> 00:25:14,500
them to consider you say it does yeah it

526
00:25:14,500 --> 00:25:16,480
does help that we've we've got this kind

527
00:25:16,480 --> 00:25:20,260
of the PTC which we can kind of use as

528
00:25:20,260 --> 00:25:24,700
that for some purposes but it's not yeah

529
00:25:24,700 --> 00:25:27,299
there that is one of the cases where

530
00:25:27,299 --> 00:25:30,929
yeah Google doesn't let a community have

531
00:25:30,929 --> 00:25:33,340
have students for Summer of Code which

532
00:25:33,340 --> 00:25:34,410
is kind of them

533
00:25:34,410 --> 00:25:36,610
perhaps a bit remiss on their part but

534
00:25:36,610 --> 00:25:38,620
it you can see why why they might want

535
00:25:38,620 --> 00:25:43,480
to do that but there were a lower

536
00:25:43,480 --> 00:25:45,400
project sometimes in other from other

537
00:25:45,400 --> 00:25:49,570
organizations as well I mean we and I

538
00:25:49,570 --> 00:25:53,799
think generally you can similarly you

539
00:25:53,799 --> 00:25:55,630
can make Summer of Code work for other

540
00:25:55,630 --> 00:26:00,490
other means I mean I've had some quite

541
00:26:00,490 --> 00:26:01,390
often there's there's other

542
00:26:01,390 --> 00:26:02,860
organizations that are interested in

543
00:26:02,860 --> 00:26:07,030
things so I think I'll is quite

544
00:26:07,030 --> 00:26:08,740
different from louver in this respect

545
00:26:08,740 --> 00:26:11,559
because so so so guiley is part of the

546
00:26:11,559 --> 00:26:13,510
new project and the new project itself

547
00:26:13,510 --> 00:26:16,570
gets its infrastructure sponsored by the

548
00:26:16,570 --> 00:26:19,030
the Free Software Foundation so for

549
00:26:19,030 --> 00:26:21,250
instance the you know the servers that

550
00:26:21,250 --> 00:26:23,470
holds the websites that hold the get

551
00:26:23,470 --> 00:26:25,900
repositories and all that this is all it

552
00:26:25,900 --> 00:26:27,940
all comes for free for us so to speak

553
00:26:27,940 --> 00:26:30,309
and it's you know we know it's being

554
00:26:30,309 --> 00:26:32,770
handled by by people who will remain

555
00:26:32,770 --> 00:26:34,809
true to their mission and so that that's

556
00:26:34,809 --> 00:26:37,980
really a great thing to have

557
00:26:37,980 --> 00:26:42,070
apart from that I think guile is really

558
00:26:42,070 --> 00:26:45,149
some sort of a grassroots kind of

559
00:26:45,149 --> 00:26:48,970
project in that I mean unlike Lua it's

560
00:26:48,970 --> 00:26:51,970
not an academic project initially it's

561
00:26:51,970 --> 00:26:54,880
it's not an industrial project either so

562
00:26:54,880 --> 00:26:56,649
it's really a bunch of hackers initially

563
00:26:56,649 --> 00:26:59,500
who said well what if we kind of extend

564
00:26:59,500 --> 00:27:01,419
it what he max does to all of the

565
00:27:01,419 --> 00:27:03,039
operating system roughly and they

566
00:27:03,039 --> 00:27:05,860
started working on this project and so

567
00:27:05,860 --> 00:27:08,740
that has a different feel maybe as to

568
00:27:08,740 --> 00:27:12,039
how the project works maybe that also

569
00:27:12,039 --> 00:27:15,250
explains why historically it has had

570
00:27:15,250 --> 00:27:18,190
very little corporate funding behind it

571
00:27:18,190 --> 00:27:21,549
although while we see now a few

572
00:27:21,549 --> 00:27:23,470
companies actually developing guy'll

573
00:27:23,470 --> 00:27:25,509
code but that's still a little bit

574
00:27:25,509 --> 00:27:29,230
marginal I guess yeah so that's that's

575
00:27:29,230 --> 00:27:30,700
that's what we have in terms of

576
00:27:30,700 --> 00:27:33,399
infrastructure but also being part of no

577
00:27:33,399 --> 00:27:35,049
means that we can participate in the

578
00:27:35,049 --> 00:27:36,519
google Summer of Code very easily

579
00:27:36,519 --> 00:27:38,080
because glue is the umbrella

580
00:27:38,080 --> 00:27:40,659
organization so that's another another

581
00:27:40,659 --> 00:27:42,250
way where it helps to have an umbrella

582
00:27:42,250 --> 00:27:46,929
organization like this one last question

583
00:27:46,929 --> 00:27:49,929
before we get to the audience and that's

584
00:27:49,929 --> 00:27:52,389
so it seems like to me that we're an

585
00:27:52,389 --> 00:27:54,940
exciting era when it comes to languages

586
00:27:54,940 --> 00:27:59,230
right like back in 2003 or so it felt

587
00:27:59,230 --> 00:28:01,090
like it was the world the languages was

588
00:28:01,090 --> 00:28:02,799
like don't bother with new languages

589
00:28:02,799 --> 00:28:05,590
we've got Java and we've got dotnet and

590
00:28:05,590 --> 00:28:08,049
just use those don't like you know and

591
00:28:08,049 --> 00:28:09,220
like though there was interesting work

592
00:28:09,220 --> 00:28:10,539
being done on virtual machines I feel

593
00:28:10,539 --> 00:28:12,759
like numb like there but like now

594
00:28:12,759 --> 00:28:14,409
there's so many interesting things going

595
00:28:14,409 --> 00:28:17,950
on you know from type stuff to you know

596
00:28:17,950 --> 00:28:19,870
just about everything so what what are

597
00:28:19,870 --> 00:28:22,210
you most excited of about language

598
00:28:22,210 --> 00:28:24,519
design outside of your project outside

599
00:28:24,519 --> 00:28:26,169
of guile or Lua

600
00:28:26,169 --> 00:28:28,179
what are you or you know it can be about

601
00:28:28,179 --> 00:28:29,889
each other but it can also be about

602
00:28:29,889 --> 00:28:31,029
something a completely different

603
00:28:31,029 --> 00:28:32,799
language what what's most exciting to

604
00:28:32,799 --> 00:28:34,779
you right now that maybe you want to

605
00:28:34,779 --> 00:28:36,159
bring into your language or maybe you

606
00:28:36,159 --> 00:28:40,259
just think is interesting externally

607
00:28:40,950 --> 00:28:44,470
yeah I mean I do think it is it is it's

608
00:28:44,470 --> 00:28:48,129
it's a good interesting time that new

609
00:28:48,129 --> 00:28:49,570
languages are taking off relatively

610
00:28:49,570 --> 00:28:51,029
quickly

611
00:28:51,029 --> 00:28:55,029
compared to I mean you know compared to

612
00:28:55,029 --> 00:28:56,440
the fact they you know consider I mean

613
00:28:56,440 --> 00:28:59,710
lower is over 25 years old it's similar

614
00:28:59,710 --> 00:29:03,340
age to to Perl and Perl and Python those

615
00:29:03,340 --> 00:29:05,020
languages and those those things if

616
00:29:05,020 --> 00:29:06,880
served us well they've they've been

617
00:29:06,880 --> 00:29:08,590
incredibly helpful over the years but

618
00:29:08,590 --> 00:29:10,990
it's nice to see a whole bunch of

619
00:29:10,990 --> 00:29:13,630
different thing languages I think I mean

620
00:29:13,630 --> 00:29:16,299
like I've always I was exposed to

621
00:29:16,299 --> 00:29:17,830
functional programming quite early on

622
00:29:17,830 --> 00:29:20,409
and I've always been really keen on

623
00:29:20,409 --> 00:29:22,779
strong typing for many years cases and

624
00:29:22,779 --> 00:29:25,510
i'm i you know i think rust is really

625
00:29:25,510 --> 00:29:28,929
exciting as a language and i'm i think

626
00:29:28,929 --> 00:29:30,039
even started trying to write some code

627
00:29:30,039 --> 00:29:33,130
in it and i got some projects i want to

628
00:29:33,130 --> 00:29:35,710
use it for going forward so i think that

629
00:29:35,710 --> 00:29:37,809
the use of typing and rust to do

630
00:29:37,809 --> 00:29:39,850
different things like linear memory

631
00:29:39,850 --> 00:29:42,570
allocation is really exciting i don't

632
00:29:42,570 --> 00:29:49,299
think that it will ever affect the

633
00:29:49,299 --> 00:29:51,610
scripting languages like lewis should

634
00:29:51,610 --> 00:29:53,559
have strong typing probably i think it's

635
00:29:53,559 --> 00:29:55,870
still a a very different thing but i've

636
00:29:55,870 --> 00:29:57,669
kind of flexible on that i'd be

637
00:29:57,669 --> 00:29:59,890
interesting I mean they've there been

638
00:29:59,890 --> 00:30:02,200
some experiments with sort of gradual

639
00:30:02,200 --> 00:30:03,730
typing in scripting languages but I'm

640
00:30:03,730 --> 00:30:08,279
not sure that how useful they really are

641
00:30:08,520 --> 00:30:11,590
when I sort of sense that the in a way

642
00:30:11,590 --> 00:30:15,610
that the thing that's the competition

643
00:30:15,610 --> 00:30:18,130
for something a lure is not big

644
00:30:18,130 --> 00:30:21,610
complicated or languages that take time

645
00:30:21,610 --> 00:30:24,580
to learn like rust is really their

646
00:30:24,580 --> 00:30:28,059
competition is things like more

647
00:30:28,059 --> 00:30:30,220
complicated configuration formats really

648
00:30:30,220 --> 00:30:34,750
that and you see people having the sort

649
00:30:34,750 --> 00:30:36,220
of choice between static configuration

650
00:30:36,220 --> 00:30:38,409
or slightly more you know or scriptable

651
00:30:38,409 --> 00:30:40,570
and that that's the kind of choice that

652
00:30:40,570 --> 00:30:42,549
they're they they actually spend their

653
00:30:42,549 --> 00:30:44,620
time making rather than shall we use a

654
00:30:44,620 --> 00:30:46,390
strongly typed language of for scripting

655
00:30:46,390 --> 00:30:48,970
or a weakly typed languages the less of

656
00:30:48,970 --> 00:30:53,980
her it's isn't that's not really quite

657
00:30:53,980 --> 00:30:57,429
where the choices are well I could use a

658
00:30:57,429 --> 00:31:00,659
little better than rest

659
00:31:03,280 --> 00:31:06,290
and this is a difficult question for me

660
00:31:06,290 --> 00:31:08,150
because of the languages of being using

661
00:31:08,150 --> 00:31:09,800
other than the world languages are like

662
00:31:09,800 --> 00:31:15,290
less but I'm really excited to learn a

663
00:31:15,290 --> 00:31:19,610
bit about a lecture I haven't got much

664
00:31:19,610 --> 00:31:22,150
functional programming and I've done

665
00:31:22,150 --> 00:31:24,380
I've done a lot of house coming the

666
00:31:24,380 --> 00:31:26,060
University but it was you know one of

667
00:31:26,060 --> 00:31:27,440
those modules that as soon as you've got

668
00:31:27,440 --> 00:31:33,830
your grade you go like and so I really

669
00:31:33,830 --> 00:31:37,010
want to get back to it and ice to me it

670
00:31:37,010 --> 00:31:39,800
seems like Alex here is a very nice

671
00:31:39,800 --> 00:31:42,590
opportunity the the community since

672
00:31:42,590 --> 00:31:44,450
access which is something important to

673
00:31:44,450 --> 00:31:50,240
me so normally has killed doesn't do

674
00:31:50,240 --> 00:31:56,270
community much and well since Ruby some

675
00:31:56,270 --> 00:32:01,090
sort of adopted some of the Alex here

676
00:32:01,090 --> 00:32:05,390
activities because of some important key

677
00:32:05,390 --> 00:32:09,320
people who were common should just

678
00:32:09,320 --> 00:32:12,500
earned this both technologies and there

679
00:32:12,500 --> 00:32:14,300
are things going on and this excites me

680
00:32:14,300 --> 00:32:17,060
and and some of the language features

681
00:32:17,060 --> 00:32:20,330
itself as well something I'm hoping I'll

682
00:32:20,330 --> 00:32:25,070
get my hands on some Alex aversion yeah

683
00:32:25,070 --> 00:32:28,130
so so for me I so I see a lot of

684
00:32:28,130 --> 00:32:32,780
excitement around wrists and I I don't

685
00:32:32,780 --> 00:32:34,670
feel like I'm really excited about the

686
00:32:34,670 --> 00:32:36,530
language itself I don't know but I'm not

687
00:32:36,530 --> 00:32:39,560
super familiar with it either but I I am

688
00:32:39,560 --> 00:32:41,090
really excited about what people are

689
00:32:41,090 --> 00:32:43,280
doing with it and it seemed that it's

690
00:32:43,280 --> 00:32:45,920
you know it's targeting a very wide

691
00:32:45,920 --> 00:32:49,070
range of applications like yesterday

692
00:32:49,070 --> 00:32:50,900
there was a talk about microkernel

693
00:32:50,900 --> 00:32:53,870
written interests and I think it's great

694
00:32:53,870 --> 00:32:55,820
I think we need you know memory safe

695
00:32:55,820 --> 00:32:58,580
languages and we need to at some point

696
00:32:58,580 --> 00:33:01,520
start getting rid of see because we know

697
00:33:01,520 --> 00:33:03,530
all the troubles that it gives us right

698
00:33:03,530 --> 00:33:07,130
so that's really the part I'm excited

699
00:33:07,130 --> 00:33:10,340
about when it comes to rest then I'm

700
00:33:10,340 --> 00:33:14,000
very much into functional programming so

701
00:33:14,000 --> 00:33:16,570
yeah I see really a lot of momentum

702
00:33:16,570 --> 00:33:19,130
around functional programming so we see

703
00:33:19,130 --> 00:33:21,320
lots of new functional languages like

704
00:33:21,320 --> 00:33:24,560
Elm Leah like closure where closure is

705
00:33:24,560 --> 00:33:26,450
not sewn you know but I mean there's a

706
00:33:26,450 --> 00:33:28,190
lot of work going on and of course the

707
00:33:28,190 --> 00:33:33,290
big ones high school okay mo I mean

708
00:33:33,290 --> 00:33:35,090
there are so many things going on there

709
00:33:35,090 --> 00:33:39,650
that you know there occasionally we we

710
00:33:39,650 --> 00:33:41,300
start chatting on hash gar for instance

711
00:33:41,300 --> 00:33:43,010
and we get jealous about this or that

712
00:33:43,010 --> 00:33:45,770
feature of that language so I'm a bit

713
00:33:45,770 --> 00:33:47,600
disappointed in a way that there are so

714
00:33:47,600 --> 00:33:49,850
many different languages I think people

715
00:33:49,850 --> 00:33:52,790
maybe could kind of focus on one instead

716
00:33:52,790 --> 00:33:54,530
of creating a new one like em for

717
00:33:54,530 --> 00:33:57,170
instance I mean there are people working

718
00:33:57,170 --> 00:33:59,960
on Haskell on

719
00:33:59,960 --> 00:34:02,420
yeah Haskell compiler that generate

720
00:34:02,420 --> 00:34:04,610
JavaScript I think that's that's that's

721
00:34:04,610 --> 00:34:09,440
a more fruitful approach but yeah yeah

722
00:34:09,440 --> 00:34:11,060
there are so many things to be excited

723
00:34:11,060 --> 00:34:13,130
about in terms of languages on

724
00:34:13,130 --> 00:34:14,570
functional languages in particularly

725
00:34:14,570 --> 00:34:15,909
these days

726
00:34:15,909 --> 00:34:19,250
so for gala I would like to also explore

727
00:34:19,250 --> 00:34:22,820
a bit a way of going a bit closer to

728
00:34:22,820 --> 00:34:25,790
some sort of static typing I mean scheme

729
00:34:25,790 --> 00:34:29,150
has macros and people in racket have

730
00:34:29,150 --> 00:34:32,870
showed that you know you can use and

731
00:34:32,870 --> 00:34:34,969
abuse macros to come up with some sort

732
00:34:34,969 --> 00:34:38,000
of a typed language and that's really

733
00:34:38,000 --> 00:34:39,969
something I would like to explore

734
00:34:39,969 --> 00:34:42,380
because yeah I mean there are there

735
00:34:42,380 --> 00:34:45,290
cases where using purely dynamic typing

736
00:34:45,290 --> 00:34:49,840
is kind of you know not so great right

737
00:34:49,840 --> 00:34:52,280
so that that's one of the things I would

738
00:34:52,280 --> 00:34:57,080
like to explore firfer guy yeah cool so

739
00:34:57,080 --> 00:34:59,240
let's open it up who has questions from

740
00:34:59,240 --> 00:34:59,810
the audience

741
00:34:59,810 --> 00:35:02,230
who

742
00:35:28,870 --> 00:35:34,160
right okay so the the question was for

743
00:35:34,160 --> 00:35:37,430
gryal about the the the relatively few

744
00:35:37,430 --> 00:35:41,319
amount of language bindings that we have

745
00:35:42,430 --> 00:35:46,820
right so I mean yeah this is true we

746
00:35:46,820 --> 00:35:49,430
have probably much fewer binding than

747
00:35:49,430 --> 00:35:52,550
Perl for example I think the situation

748
00:35:52,550 --> 00:35:54,770
has been improving though since 2.0

749
00:35:54,770 --> 00:35:56,990
because with the FFI the foreign

750
00:35:56,990 --> 00:35:59,420
function interface it's become much

751
00:35:59,420 --> 00:36:01,370
easier and less cumbersome to write

752
00:36:01,370 --> 00:36:04,520
bindings you know you just write a bunch

753
00:36:04,520 --> 00:36:06,380
of scheme lines and it's pure scheme you

754
00:36:06,380 --> 00:36:08,270
don't even have to bother about having a

755
00:36:08,270 --> 00:36:10,190
complex build system or anything and so

756
00:36:10,190 --> 00:36:12,260
that's allowed people to actually come

757
00:36:12,260 --> 00:36:14,690
up with quick bindings that actually

758
00:36:14,690 --> 00:36:17,630
work pretty well and so we've made

759
00:36:17,630 --> 00:36:24,350
progress and yeah that yeah I think I

760
00:36:24,350 --> 00:36:26,840
mean lowered one of the reasons for the

761
00:36:26,840 --> 00:36:29,090
adoption of large it was that it came

762
00:36:29,090 --> 00:36:32,390
with Nephi and it is it does make an

763
00:36:32,390 --> 00:36:36,080
enormous usability difference and it's

764
00:36:36,080 --> 00:36:40,820
it's kind of it's part of the what I

765
00:36:40,820 --> 00:36:42,590
suppose only about the division between

766
00:36:42,590 --> 00:36:43,970
the three communities because everyone

767
00:36:43,970 --> 00:36:46,910
who uses logic writes f45 bindings which

768
00:36:46,910 --> 00:36:49,610
are not available for the standard lower

769
00:36:49,610 --> 00:36:53,810
and writing bindings for both is twice

770
00:36:53,810 --> 00:36:54,680
as much work because they're so

771
00:36:54,680 --> 00:36:57,530
different and we've talked about some

772
00:36:57,530 --> 00:37:00,470
ways to fix that but it's it's difficult

773
00:37:00,470 --> 00:37:03,110
because Luers very straight on we only

774
00:37:03,110 --> 00:37:05,270
use standard C and you can't write an fi

775
00:37:05,270 --> 00:37:12,590
binding in standard C so we've got this

776
00:37:12,590 --> 00:37:15,740
this division but I mean yeah the the

777
00:37:15,740 --> 00:37:17,990
ease of these of writing a very quick

778
00:37:17,990 --> 00:37:21,640
FFI binding is enormously better and it

779
00:37:21,640 --> 00:37:23,720
definitely makes a lot of difference

780
00:37:23,720 --> 00:37:25,130
from that point of view if you want to

781
00:37:25,130 --> 00:37:26,900
increase the number of bindings i mean

782
00:37:26,900 --> 00:37:29,180
you didn't often there FFI bunnies are

783
00:37:29,180 --> 00:37:31,010
so easy to write you don't go and look

784
00:37:31,010 --> 00:37:32,930
for someone else's bindings anymore you

785
00:37:32,930 --> 00:37:37,040
just write the c headers de import the c

786
00:37:37,040 --> 00:37:39,560
headers and write three lines of F

787
00:37:39,560 --> 00:37:40,820
binding and that's

788
00:37:40,820 --> 00:37:44,540
not ever it's a magically better way to

789
00:37:44,540 --> 00:37:51,320
iterate fast on on stuff okay we have

790
00:37:51,320 --> 00:37:52,690
time for one more question

791
00:37:52,690 --> 00:38:16,880
you shut up fast so right okay so the

792
00:38:16,880 --> 00:38:20,150
question is about generic interfaces for

793
00:38:20,150 --> 00:38:22,220
languages so that you can use multiple

794
00:38:22,220 --> 00:38:31,790
languages yeah yeah I think I think it

795
00:38:31,790 --> 00:38:33,500
is he useful I mean there's there's two

796
00:38:33,500 --> 00:38:35,240
things I think one is that the the

797
00:38:35,240 --> 00:38:38,000
lowest common denominator is the the C

798
00:38:38,000 --> 00:38:41,890
API but there are problems about types

799
00:38:41,890 --> 00:38:45,830
and structured types I think that I mean

800
00:38:45,830 --> 00:38:47,060
at work we spend a lot of time using

801
00:38:47,060 --> 00:38:52,250
things like protobufs which is available

802
00:38:52,250 --> 00:38:53,660
for quite a lot of languages and is

803
00:38:53,660 --> 00:38:55,580
quite good it's quite heavy weight

804
00:38:55,580 --> 00:39:02,060
though and I think that there are you

805
00:39:02,060 --> 00:39:03,440
know there are kind of attempts to do

806
00:39:03,440 --> 00:39:05,930
something a bit more lightweight but I

807
00:39:05,930 --> 00:39:08,540
think that at least there's been a set

808
00:39:08,540 --> 00:39:09,790
of projects around

809
00:39:09,790 --> 00:39:12,080
what does inter language communication

810
00:39:12,080 --> 00:39:14,150
look like how do we transfer structured

811
00:39:14,150 --> 00:39:17,840
data that's a you know that's in a way

812
00:39:17,840 --> 00:39:19,490
that's better than just passing

813
00:39:19,490 --> 00:39:20,810
everything through JSON or something

814
00:39:20,810 --> 00:39:26,090
like that and I think that I think that

815
00:39:26,090 --> 00:39:27,680
those of approaches are really valuable

816
00:39:27,680 --> 00:39:31,670
because I think that the C interface is

817
00:39:31,670 --> 00:39:33,410
really low-level for a lot of stuff and

818
00:39:33,410 --> 00:39:35,660
it's good for library bindings and it's

819
00:39:35,660 --> 00:39:37,340
and it's probably going to be the

820
00:39:37,340 --> 00:39:39,680
interface even when we stop using C and

821
00:39:39,680 --> 00:39:41,660
we're all using other languages I think

822
00:39:41,660 --> 00:39:44,150
the C the C interface is really

823
00:39:44,150 --> 00:39:46,450
convenient for low-level stuff but

824
00:39:46,450 --> 00:39:48,980
higher-level scripting is it's not very

825
00:39:48,980 --> 00:39:52,000
not very convenient

826
00:39:53,320 --> 00:39:55,790
actually guile started its life in the

827
00:39:55,790 --> 00:39:58,790
90s at the project that would unify all

828
00:39:58,790 --> 00:40:01,400
all the dynamic languages I would say so

829
00:40:01,400 --> 00:40:04,460
so the story was that we'd have a common

830
00:40:04,460 --> 00:40:07,880
runtime system and all the languages

831
00:40:07,880 --> 00:40:09,500
would use that runtime that VM

832
00:40:09,500 --> 00:40:12,320
essentially and so at the time people

833
00:40:12,320 --> 00:40:14,270
were saying yeah we'll have so to begin

834
00:40:14,270 --> 00:40:16,430
we will have scheme and Emacs Lisp and

835
00:40:16,430 --> 00:40:19,970
then we'll have Python and Perl and

836
00:40:19,970 --> 00:40:24,230
whatnot and I started as a strong

837
00:40:24,230 --> 00:40:26,030
supporter of these questions like yeah

838
00:40:26,030 --> 00:40:30,170
this is the way but then people actually

839
00:40:30,170 --> 00:40:34,310
started to try to do it and especially

840
00:40:34,310 --> 00:40:37,099
in the context of Emacs Lisp and you

841
00:40:37,099 --> 00:40:38,570
would think that Emacs Lisp and scheme

842
00:40:38,570 --> 00:40:40,900
are pretty much the same thing right

843
00:40:40,900 --> 00:40:43,790
yes except there is one tiny difference

844
00:40:43,790 --> 00:40:45,890
for instance which is that Emacs

845
00:40:45,890 --> 00:40:47,990
displays a special value which is nil

846
00:40:47,990 --> 00:40:51,109
which means both false and the empty

847
00:40:51,109 --> 00:40:53,660
list whereas scheme doesn't have that it

848
00:40:53,660 --> 00:40:55,579
has instead the empty list and false

849
00:40:55,579 --> 00:40:58,130
which are disjoint and that tiny detail

850
00:40:58,130 --> 00:41:01,690
already causes a lot of headache right

851
00:41:01,690 --> 00:41:04,490
and then if you look at guide to there's

852
00:41:04,490 --> 00:41:07,220
a neck mask ripped JavaScript front-end

853
00:41:07,220 --> 00:41:10,819
also you would think Java Script is a

854
00:41:10,819 --> 00:41:12,680
dynamically typed language it's not that

855
00:41:12,680 --> 00:41:15,140
different from scheme but still I mean

856
00:41:15,140 --> 00:41:17,780
it's it's two different already so you

857
00:41:17,780 --> 00:41:20,030
cannot really interact seamlessly

858
00:41:20,030 --> 00:41:22,280
between schema and JavaScript that

859
00:41:22,280 --> 00:41:23,839
wouldn't work so well

860
00:41:23,839 --> 00:41:26,750
so I've become more skeptical of the

861
00:41:26,750 --> 00:41:38,210
unified language approach this one I

862
00:41:38,210 --> 00:41:38,960
mean um

863
00:41:38,960 --> 00:41:42,079
Lua has been used a lot as some sort of

864
00:41:42,079 --> 00:41:47,500
glue language because it has so many

865
00:41:47,500 --> 00:41:51,109
bindings to many other languages but it

866
00:41:51,109 --> 00:41:56,839
was mostly on project based approach

867
00:41:56,839 --> 00:41:59,569
where all you need i need this program

868
00:41:59,569 --> 00:42:02,119
to talk to that program and they're both

869
00:42:02,119 --> 00:42:04,700
written and whatever language and I will

870
00:42:04,700 --> 00:42:05,880
put Lua and bits

871
00:42:05,880 --> 00:42:12,650
and then magically glued them together

872
00:42:14,780 --> 00:42:18,770
switch speakers okay I'm well thank you

873
00:42:18,770 --> 00:42:21,930
so we've got an exciting room ahead for

874
00:42:21,930 --> 00:42:24,990
guile here I encourage people to close

875
00:42:24,990 --> 00:42:26,880
in a little bit so that people can fit

876
00:42:26,880 --> 00:42:30,710
but uh yeah

877
00:42:30,710 --> 00:42:37,090
[Applause]

