1
00:01:17,580 --> 00:01:22,150
and then a bit below your view okay

2
00:01:22,150 --> 00:01:24,840
otherwise

3
00:01:24,840 --> 00:01:27,999
[Applause]

4
00:01:29,500 --> 00:01:45,480
I think it's time I have 20 minutes okay

5
00:01:45,480 --> 00:01:48,750
okay thank you

6
00:01:51,470 --> 00:01:54,470
okay

7
00:01:54,530 --> 00:01:59,600
right thanks everybody my name is Thiago

8
00:01:59,600 --> 00:02:05,080
Jaggu Santos I work for a company called

9
00:02:05,080 --> 00:02:11,209
matte box we can introduction we we make

10
00:02:11,209 --> 00:02:16,490
maps and we love open-source the name we

11
00:02:16,490 --> 00:02:21,020
love open-source we are very excited to

12
00:02:21,020 --> 00:02:27,610
be here and we maintain several popular

13
00:02:27,610 --> 00:02:30,950
open-source projects like leaflet open

14
00:02:30,950 --> 00:02:35,420
source routing machine and we also big

15
00:02:35,420 --> 00:02:38,440
contributors to OpenStreetMaps

16
00:02:38,440 --> 00:02:43,760
yeah like we work with tools like ID and

17
00:02:43,760 --> 00:02:48,500
we contribute with data fixing data on

18
00:02:48,500 --> 00:02:49,580
OpenStreetMaps

19
00:02:49,580 --> 00:02:53,030
and developing tools to make improve the

20
00:02:53,030 --> 00:02:56,510
quality of the map but then but today

21
00:02:56,510 --> 00:02:59,060
are going to talk about this particular

22
00:02:59,060 --> 00:03:01,940
tool is we call it map walk share native

23
00:03:01,940 --> 00:03:05,810
is not exactly a product we offer is

24
00:03:05,810 --> 00:03:08,840
actually the base for our products like

25
00:03:08,840 --> 00:03:13,640
we have a map rendering engine SDK for

26
00:03:13,640 --> 00:03:19,010
Android iOS and is based on this what I

27
00:03:19,010 --> 00:03:21,470
would say it's a vector map rendering

28
00:03:21,470 --> 00:03:27,829
engine which is open source and and I

29
00:03:27,829 --> 00:03:30,350
think it's a very cool Bliley bleeding

30
00:03:30,350 --> 00:03:34,459
edge technology compared to raster tile

31
00:03:34,459 --> 00:03:37,489
rendering engines I realized when I was

32
00:03:37,489 --> 00:03:39,110
making this talk we don't have a cool

33
00:03:39,110 --> 00:03:41,780
logo for this many open source office

34
00:03:41,780 --> 00:03:46,880
they have and it was was Friday night or

35
00:03:46,880 --> 00:03:51,079
designers they were sleeping so I made I

36
00:03:51,079 --> 00:03:52,610
made one

37
00:03:52,610 --> 00:03:56,690
I think they're gonna come up with

38
00:03:56,690 --> 00:04:02,960
something better Monday okay but what's

39
00:04:02,960 --> 00:04:06,140
a vector tie so was I was very fortunate

40
00:04:06,140 --> 00:04:08,870
because the less talk was awesome and I

41
00:04:08,870 --> 00:04:11,600
was talking about a problem we have with

42
00:04:11,600 --> 00:04:16,640
maps it's a huge volume of data and the

43
00:04:16,640 --> 00:04:20,390
satellites they they keep increasing in

44
00:04:20,390 --> 00:04:25,850
resolution I have heard that the army a

45
00:04:25,850 --> 00:04:28,070
that in the US they have satellites that

46
00:04:28,070 --> 00:04:30,050
take resolutions they can see if you

47
00:04:30,050 --> 00:04:34,520
have hair or not but so you want to

48
00:04:34,520 --> 00:04:36,650
display this huge amount of data in a

49
00:04:36,650 --> 00:04:39,290
computer that is somehow limited by

50
00:04:39,290 --> 00:04:41,990
several factors for including memory so

51
00:04:41,990 --> 00:04:45,830
we have to tile the map right even if

52
00:04:45,830 --> 00:04:48,680
you take OpenStreetMap the sheer amount

53
00:04:48,680 --> 00:04:51,080
of data there is like several gigabytes

54
00:04:51,080 --> 00:04:54,050
and you cannot display everything at

55
00:04:54,050 --> 00:04:57,500
once and just zooming in in your

56
00:04:57,500 --> 00:05:00,980
neighborhood or in your door and expect

57
00:05:00,980 --> 00:05:03,140
that to work so even a vector vector

58
00:05:03,140 --> 00:05:09,110
data you have to tile so so one strategy

59
00:05:09,110 --> 00:05:11,350
we see often like when you're using

60
00:05:11,350 --> 00:05:15,410
leaflet for instance like you take a big

61
00:05:15,410 --> 00:05:21,290
image and you tile and as you go in like

62
00:05:21,290 --> 00:05:25,720
as you zoom in you stretch the image so

63
00:05:25,720 --> 00:05:28,520
for a moment like between the zoom

64
00:05:28,520 --> 00:05:31,880
levels you have a image that doesn't

65
00:05:31,880 --> 00:05:34,100
look that great and then boom it gets

66
00:05:34,100 --> 00:05:37,160
replaced it to a new image and so on so

67
00:05:37,160 --> 00:05:39,020
the nice thing about vector tiles like

68
00:05:39,020 --> 00:05:43,630
the if you do the same thing with vector

69
00:05:43,630 --> 00:05:47,930
it works exactly like a SVG so you can

70
00:05:47,930 --> 00:05:49,490
stretch that because it's pretty much

71
00:05:49,490 --> 00:05:52,220
saying I have a line from this

72
00:05:52,220 --> 00:05:54,200
coordinate to dis coordinate so when you

73
00:05:54,200 --> 00:05:57,919
zoom in you just stretch that obviously

74
00:05:57,919 --> 00:06:00,380
what defines the resolution is the

75
00:06:00,380 --> 00:06:03,140
amount of points you have in between

76
00:06:03,140 --> 00:06:06,070
this line like if it's a curve

77
00:06:06,070 --> 00:06:08,730
we don't really draw we don't say like

78
00:06:08,730 --> 00:06:11,530
you have a curve like this we have

79
00:06:11,530 --> 00:06:14,140
several points in between that makes a

80
00:06:14,140 --> 00:06:16,090
curve so when you're zooming you're

81
00:06:16,090 --> 00:06:18,640
going to see it turn into something a

82
00:06:18,640 --> 00:06:19,680
little bit squarey

83
00:06:19,680 --> 00:06:25,020
but it still looks much better than a

84
00:06:25,020 --> 00:06:31,930
raster image so the vector x we-we-we

85
00:06:31,930 --> 00:06:34,600
rendering here it's based on an open

86
00:06:34,600 --> 00:06:38,320
standard okay so it's not we developed

87
00:06:38,320 --> 00:06:42,070
this this tunnel but we keep it open so

88
00:06:42,070 --> 00:06:44,380
all the vendors they can implement that

89
00:06:44,380 --> 00:06:49,120
in fact their competitors opens other

90
00:06:49,120 --> 00:06:52,030
open source projects using our vector

91
00:06:52,030 --> 00:06:58,710
tile specification so this technology

92
00:06:58,710 --> 00:07:01,510
for rendering this vector tiles like so

93
00:07:01,510 --> 00:07:03,070
you can have your beautiful beautiful

94
00:07:03,070 --> 00:07:06,090
maps in your application it's not really

95
00:07:06,090 --> 00:07:10,930
let's let's say vendor locked in a way

96
00:07:10,930 --> 00:07:13,630
that we are giving making this open

97
00:07:13,630 --> 00:07:14,950
source project so you can use our

98
00:07:14,950 --> 00:07:18,880
services so in fact you can use create

99
00:07:18,880 --> 00:07:21,580
vector tiles from your own data if you

100
00:07:21,580 --> 00:07:24,760
want to and we also provide open source

101
00:07:24,760 --> 00:07:28,840
tools for creating these vector tiles so

102
00:07:28,840 --> 00:07:30,880
for instance like we have this typical

103
00:07:30,880 --> 00:07:32,800
move I'm still have to learn how to

104
00:07:32,800 --> 00:07:37,840
pronounce this it converts geo Jason to

105
00:07:37,840 --> 00:07:39,880
vector tiles view Jason's fairly

106
00:07:39,880 --> 00:07:44,940
established format so I think one cool

107
00:07:44,940 --> 00:07:49,450
application for this I I saw like we

108
00:07:49,450 --> 00:07:53,200
have an app for the lectures here and it

109
00:07:53,200 --> 00:07:56,800
has a map so I've seen people doing

110
00:07:56,800 --> 00:07:59,490
using these vector tiles for creating

111
00:07:59,490 --> 00:08:04,870
indoor maps like this we could have

112
00:08:04,870 --> 00:08:09,310
could have like just make a map of the

113
00:08:09,310 --> 00:08:12,450
University using I don't know geo Jason

114
00:08:12,450 --> 00:08:15,490
convert this to vector tiles and render

115
00:08:15,490 --> 00:08:18,400
an app in the app like with we've

116
00:08:18,400 --> 00:08:19,180
completely

117
00:08:19,180 --> 00:08:24,460
offline data I think that's pretty cool

118
00:08:24,460 --> 00:08:28,180
like it's I'm not sure if when we

119
00:08:28,180 --> 00:08:29,980
designed this we had this use case in

120
00:08:29,980 --> 00:08:31,930
mind but there are some people doing it

121
00:08:31,930 --> 00:08:38,140
and I find it really nice so I think the

122
00:08:38,140 --> 00:08:41,380
advantages of rendering your map in the

123
00:08:41,380 --> 00:08:44,380
client side are this like you can do 3d

124
00:08:44,380 --> 00:08:48,550
effects you can shoot the map we don't

125
00:08:48,550 --> 00:08:51,070
do this in our engine today but we are

126
00:08:51,070 --> 00:08:52,750
bringing this word engine like the

127
00:08:52,750 --> 00:08:54,790
native this native engine like you could

128
00:08:54,790 --> 00:08:58,390
do 3d extrusion so you can see buildings

129
00:08:58,390 --> 00:09:03,490
in your city the nice thing is when you

130
00:09:03,490 --> 00:09:05,650
have a raster image like imagine like a

131
00:09:05,650 --> 00:09:08,170
picture of myself rotated what's written

132
00:09:08,170 --> 00:09:10,210
here in my in my t-shirt is going to

133
00:09:10,210 --> 00:09:13,360
look upside down of course but if you

134
00:09:13,360 --> 00:09:16,120
have a vector tile and you're rendering

135
00:09:16,120 --> 00:09:19,360
a map on the fly client-side you have

136
00:09:19,360 --> 00:09:21,460
different layers you know what's what's

137
00:09:21,460 --> 00:09:23,710
the road what's the building and what's

138
00:09:23,710 --> 00:09:26,680
the label so knowing that your map is

139
00:09:26,680 --> 00:09:30,010
rotated you may you may keep the label

140
00:09:30,010 --> 00:09:33,460
up right it's up to you because we also

141
00:09:33,460 --> 00:09:39,040
support styling so styling meaning you

142
00:09:39,040 --> 00:09:43,660
can change colors of your map whatever

143
00:09:43,660 --> 00:09:46,450
color you can hide and show features

144
00:09:46,450 --> 00:09:49,210
depending on zoom level you can change

145
00:09:49,210 --> 00:09:51,820
that on the fly like if you have a map

146
00:09:51,820 --> 00:09:54,730
in an app and you detect that the

147
00:09:54,730 --> 00:10:00,030
Lightning is weak you can make your your

148
00:10:00,030 --> 00:10:04,180
map less brighter so it's less

149
00:10:04,180 --> 00:10:06,040
aggressive like if you are looking at

150
00:10:06,040 --> 00:10:11,610
night and also it's more compact

151
00:10:11,610 --> 00:10:14,380
compared to PNG it's often more

152
00:10:14,380 --> 00:10:19,590
compacted that that kind of depends is

153
00:10:19,590 --> 00:10:21,670
depends on the area you're looking but

154
00:10:21,670 --> 00:10:23,680
most of the cases you're going to get

155
00:10:23,680 --> 00:10:28,330
better style size compared to russet

156
00:10:28,330 --> 00:10:32,620
eyes and as I mentioned before you

157
00:10:32,620 --> 00:10:36,220
also have smooth zooming you don't lose

158
00:10:36,220 --> 00:10:38,260
too much resolution when you're zooming

159
00:10:38,260 --> 00:10:42,280
in to closer to what the place you're

160
00:10:42,280 --> 00:10:46,810
looking so this is one example as the

161
00:10:46,810 --> 00:10:52,960
map of the university is tilted and it's

162
00:10:52,960 --> 00:10:55,660
using one style like but just changing

163
00:10:55,660 --> 00:11:00,250
one one flag of one property of the map

164
00:11:00,250 --> 00:11:02,440
this style you boom we have something

165
00:11:02,440 --> 00:11:05,080
completely different without downloading

166
00:11:05,080 --> 00:11:08,950
a whole set of Russia tiles like it's

167
00:11:08,950 --> 00:11:12,340
all done in client-side so this is one

168
00:11:12,340 --> 00:11:15,130
if it would be a receipt I would have to

169
00:11:15,130 --> 00:11:19,030
redownload everything the other thing I

170
00:11:19,030 --> 00:11:23,140
find very very cool about using vector

171
00:11:23,140 --> 00:11:26,910
tiles is you can query features actually

172
00:11:26,910 --> 00:11:30,820
so if if you click here you can say give

173
00:11:30,820 --> 00:11:34,750
me what is in this area so the map could

174
00:11:34,750 --> 00:11:36,790
give you back like I you have a road you

175
00:11:36,790 --> 00:11:38,710
have a building here and the name of the

176
00:11:38,710 --> 00:11:43,030
building have the label here right so

177
00:11:43,030 --> 00:11:45,010
you don't need to go to a server and say

178
00:11:45,010 --> 00:11:47,860
a give me what is at the coordinate X &

179
00:11:47,860 --> 00:11:51,580
Y you can do it completely locally

180
00:11:51,580 --> 00:11:58,270
awesome alright so and about this style

181
00:11:58,270 --> 00:12:02,140
it's also open a standard so

182
00:12:02,140 --> 00:12:04,480
specification though it's open its open

183
00:12:04,480 --> 00:12:07,570
for suggestions and again it's not

184
00:12:07,570 --> 00:12:14,170
implemented just by us like so back to

185
00:12:14,170 --> 00:12:19,420
the engine we have we be doing the

186
00:12:19,420 --> 00:12:22,150
development of this engine in the open

187
00:12:22,150 --> 00:12:25,030
source it's on github so we brought this

188
00:12:25,030 --> 00:12:27,700
engine to different platforms like

189
00:12:27,700 --> 00:12:32,560
including Linux Mac iOS Android and most

190
00:12:32,560 --> 00:12:35,140
recently we contribute this engine to

191
00:12:35,140 --> 00:12:38,530
the cute project which is right doesn't

192
00:12:38,530 --> 00:12:42,070
know it's established C++ open source

193
00:12:42,070 --> 00:12:45,730
framework so

194
00:12:45,730 --> 00:12:47,680
was very interesting to work with the

195
00:12:47,680 --> 00:12:50,310
company we're still working with them

196
00:12:50,310 --> 00:12:54,670
and and so you can use what they call

197
00:12:54,670 --> 00:12:56,769
key ml it's the language for describing

198
00:12:56,769 --> 00:13:00,220
user interfaces it's very easy it's way

199
00:13:00,220 --> 00:13:02,709
better to compared to something like

200
00:13:02,709 --> 00:13:06,490
HTML I mean III think it's the last time

201
00:13:06,490 --> 00:13:11,110
I do a talk using a HTML slideshow it's

202
00:13:11,110 --> 00:13:14,860
horrible to make this really like put

203
00:13:14,860 --> 00:13:17,560
this image a line in the center here it

204
00:13:17,560 --> 00:13:23,470
took me 30 minutes anyway so we have our

205
00:13:23,470 --> 00:13:27,040
engine on cute now it's going to be

206
00:13:27,040 --> 00:13:30,130
there by default from cute 5.9 which is

207
00:13:30,130 --> 00:13:33,310
the upcoming release for this year and

208
00:13:33,310 --> 00:13:35,980
you could do in the future something

209
00:13:35,980 --> 00:13:38,529
like just like this like window you

210
00:13:38,529 --> 00:13:40,920
change the string to map off gel here

211
00:13:40,920 --> 00:13:43,930
put some coordinates if you're familiar

212
00:13:43,930 --> 00:13:48,100
with KML this code it's a bit simplified

213
00:13:48,100 --> 00:13:50,829
here but with six more lines of code

214
00:13:50,829 --> 00:13:55,209
this is enough to have a window with a

215
00:13:55,209 --> 00:13:59,410
map centered at a coordinated system in

216
00:13:59,410 --> 00:14:04,209
Oslo at the zoom level 10 so I camera is

217
00:14:04,209 --> 00:14:07,980
pretty cool it's very easy to read and

218
00:14:07,980 --> 00:14:11,769
yeah and you can get the QT can get the

219
00:14:11,769 --> 00:14:16,480
same map on your phone on desktop and

220
00:14:16,480 --> 00:14:17,800
we're trying to get this running on

221
00:14:17,800 --> 00:14:19,540
Windows today because we don't support

222
00:14:19,540 --> 00:14:23,079
Windows at the moment but with cute we

223
00:14:23,079 --> 00:14:26,529
saw maybe a window open intended for

224
00:14:26,529 --> 00:14:32,529
that so what about a new platform

225
00:14:32,529 --> 00:14:37,930
because the idea one of the ideas you

226
00:14:37,930 --> 00:14:39,480
have this talk is like to invite

227
00:14:39,480 --> 00:14:43,959
developers to get a vector map better

228
00:14:43,959 --> 00:14:47,440
maps in other platforms like I know that

229
00:14:47,440 --> 00:14:50,380
genome is using our roster tiles I would

230
00:14:50,380 --> 00:14:52,899
love to see I don't know genome apps

231
00:14:52,899 --> 00:14:55,810
maybe using vector tiles I don't see why

232
00:14:55,810 --> 00:14:56,050
not

233
00:14:56,050 --> 00:14:58,060
we we brought this too cute so

234
00:14:58,060 --> 00:14:58,910
competitive

235
00:14:58,910 --> 00:15:06,610
in his own so what do you need for

236
00:15:06,610 --> 00:15:10,010
having a this engine running in your

237
00:15:10,010 --> 00:15:13,310
whatever framework you have could be say

238
00:15:13,310 --> 00:15:16,700
I'm using gtk here as an example but you

239
00:15:16,700 --> 00:15:20,420
need a decent C++ 14 compiler we use

240
00:15:20,420 --> 00:15:23,810
some features and it's not every

241
00:15:23,810 --> 00:15:28,840
compiler that can do it for instance

242
00:15:28,840 --> 00:15:33,290
clang recent versions of claying

243
00:15:33,290 --> 00:15:37,250
can do it fine but this is C you need to

244
00:15:37,250 --> 00:15:42,050
CC 5.0 we had some issues with customers

245
00:15:42,050 --> 00:15:44,950
using GCC 4.9 and complaining about ah

246
00:15:44,950 --> 00:15:48,770
this is C 5.0 is to Neil even though I

247
00:15:48,770 --> 00:15:52,580
think it's 3 years old so we had bring

248
00:15:52,580 --> 00:15:56,690
it back to BCC 4.9 maybe that means

249
00:15:56,690 --> 00:16:00,250
you're using 4.9 I don't know

250
00:16:00,250 --> 00:16:06,890
apart from there you need OpenGL we rely

251
00:16:06,890 --> 00:16:09,890
on OpenGL it could be OpenGL ES if your

252
00:16:09,890 --> 00:16:16,790
platform supports that and you you need

253
00:16:16,790 --> 00:16:19,910
to do a little bit of plumbing because

254
00:16:19,910 --> 00:16:23,450
the engine is designed in a way that you

255
00:16:23,450 --> 00:16:29,900
have you have a decor core of the engine

256
00:16:29,900 --> 00:16:34,190
and you have the platform bindings so

257
00:16:34,190 --> 00:16:36,560
you can plug your platform we for

258
00:16:36,560 --> 00:16:38,480
example II did some experiments and we

259
00:16:38,480 --> 00:16:42,820
had got this running on the unity 3d SDK

260
00:16:42,820 --> 00:16:45,620
but just replacing this part so we need

261
00:16:45,620 --> 00:16:49,610
some main loop like if you're porting

262
00:16:49,610 --> 00:16:51,680
this to gtk I think gee lip gives you

263
00:16:51,680 --> 00:16:56,480
that you need some Fred IPC again like

264
00:16:56,480 --> 00:16:58,640
Ghalib gives you that I know there is

265
00:16:58,640 --> 00:17:02,960
this G async method or some something

266
00:17:02,960 --> 00:17:05,930
like that and you need a network stack

267
00:17:05,930 --> 00:17:10,520
it sounds big but we we have in our

268
00:17:10,520 --> 00:17:12,559
engine some implementation

269
00:17:12,559 --> 00:17:17,230
of portable network stacks for instance

270
00:17:17,230 --> 00:17:22,099
we have already little curl implemented

271
00:17:22,099 --> 00:17:24,709
so if you're using a port into gtk you

272
00:17:24,709 --> 00:17:26,720
can just keep using the lip curl

273
00:17:26,720 --> 00:17:28,580
implementation is going to probably work

274
00:17:28,580 --> 00:17:34,159
on all UNIX platforms and if you don't

275
00:17:34,159 --> 00:17:36,919
if you don't have a main loop or Fred

276
00:17:36,919 --> 00:17:40,159
IPC we have this implemented for you

277
00:17:40,159 --> 00:17:42,200
already this libuv I don't know if you

278
00:17:42,200 --> 00:17:44,600
have heard about libuv is it's the main

279
00:17:44,600 --> 00:17:47,679
loop implementation that nodejs is using

280
00:17:47,679 --> 00:17:51,799
in fact I I look at I look at that

281
00:17:51,799 --> 00:17:55,330
because I've been calling this libuv lib

282
00:17:55,330 --> 00:17:59,179
ultraviolet for a while because I don't

283
00:17:59,179 --> 00:18:04,149
know UV but in fact it stands for

284
00:18:04,149 --> 00:18:08,720
unicorn Velociraptor which is which is a

285
00:18:08,720 --> 00:18:17,419
very interesting name so so we have a we

286
00:18:17,419 --> 00:18:22,249
wrote the the point I will talk more if

287
00:18:22,249 --> 00:18:25,279
I have more time about the details of

288
00:18:25,279 --> 00:18:28,309
porting days to a new platform but a bit

289
00:18:28,309 --> 00:18:31,009
short on time so we wrote a blog post

290
00:18:31,009 --> 00:18:35,059
about describing the details and again

291
00:18:35,059 --> 00:18:37,159
we are doing the development in their

292
00:18:37,159 --> 00:18:41,090
open so we have I'm usually hanging out

293
00:18:41,090 --> 00:18:42,499
on slack channels

294
00:18:42,499 --> 00:18:47,629
IRC channels especially on the cube

295
00:18:47,629 --> 00:18:51,950
mobility IRC a tree node so I invite

296
00:18:51,950 --> 00:18:56,059
everyone to help us I would especially

297
00:18:56,059 --> 00:18:58,700
the gtk guys there is anyone here doing

298
00:18:58,700 --> 00:19:04,460
gtk to join us so thank you and if you

299
00:19:04,460 --> 00:19:07,240
have any questions

300
00:19:07,560 --> 00:19:16,240
[Applause]

301
00:19:34,200 --> 00:19:39,570
yeah so when report this too cute was

302
00:19:40,020 --> 00:19:43,500
the core of the engine this 100% C++

303
00:19:43,500 --> 00:19:46,540
like portable you don't have to change

304
00:19:46,540 --> 00:19:49,660
that we rewrote the platform adaptations

305
00:19:49,660 --> 00:19:52,360
to work with a cute main loop and the

306
00:19:52,360 --> 00:19:54,940
cute Network stack and now cute is gonna

307
00:19:54,940 --> 00:19:57,790
ship or engine inside the QT SDK so it's

308
00:19:57,790 --> 00:19:59,559
there so we make really are making

309
00:19:59,559 --> 00:20:03,160
release for cute and it's if you

310
00:20:03,160 --> 00:20:06,520
download the Qt SDK 5.9 you're gonna get

311
00:20:06,520 --> 00:20:12,000
this engine included for free

312
00:20:20,379 --> 00:20:23,710
okay so the question so I forgot to

313
00:20:23,710 --> 00:20:25,970
repeat the other one but there is about

314
00:20:25,970 --> 00:20:29,600
the platform requirements yeah so the

315
00:20:29,600 --> 00:20:31,749
question was about platform requirements

316
00:20:31,749 --> 00:20:36,710
so the cheapest Hardware I managed to

317
00:20:36,710 --> 00:20:39,470
get this running with decent performance

318
00:20:39,470 --> 00:20:42,580
was the the latest raspberry pi

319
00:20:42,580 --> 00:20:50,570
raspberry Pi the board yeah yeah you

320
00:20:50,570 --> 00:20:56,210
need a GPU yeah you need a GPU but you

321
00:20:56,210 --> 00:20:59,210
can also if you want to rasterize things

322
00:20:59,210 --> 00:21:01,850
using our ancient server-side it's also

323
00:21:01,850 --> 00:21:06,169
possible you can use these master

324
00:21:06,169 --> 00:21:08,029
software rasterizer

325
00:21:08,029 --> 00:21:10,070
it's going to be a bit slow but it works

326
00:21:10,070 --> 00:21:14,029
we do that because we have you do for

327
00:21:14,029 --> 00:21:15,590
running unit tests and stuff like that

328
00:21:15,590 --> 00:21:22,129
we know it works in more questions okay

329
00:21:22,129 --> 00:21:25,159
if not thank you for your time and I

330
00:21:25,159 --> 00:21:28,150
will be hanging out - you have any

331
00:21:28,150 --> 00:21:36,369
[Applause]

332
00:22:04,850 --> 00:22:07,929
[Music]

333
00:22:46,290 --> 00:22:49,440
[Music]

334
00:23:31,230 --> 00:23:34,359
[Music]

335
00:25:01,660 --> 00:25:03,720
you

