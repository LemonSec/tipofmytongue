1
00:00:00,000 --> 00:00:02,780
this afternoon

2
00:00:04,720 --> 00:00:06,189
we're going to talk about group

3
00:00:06,189 --> 00:00:08,109
application adjourn into the group

4
00:00:08,109 --> 00:00:10,750
application communication core the idea

5
00:00:10,750 --> 00:00:12,969
is to show what's behind the group

6
00:00:12,969 --> 00:00:18,099
communication or the group application

7
00:00:18,099 --> 00:00:21,039
sorry and talk a little bit about boxes

8
00:00:21,039 --> 00:00:23,949
and how our boxes beta implementation

9
00:00:23,949 --> 00:00:32,100
works I think you're red sod is large so

10
00:00:32,100 --> 00:00:35,530
but it lets it's here for why I'll talk

11
00:00:35,530 --> 00:00:38,820
a little bit about myself I have John

12
00:00:38,820 --> 00:00:42,219
Oracle at the time and she was son eight

13
00:00:42,219 --> 00:00:45,550
years ago I've been working basically on

14
00:00:45,550 --> 00:00:49,149
application and HEA for the last eight

15
00:00:49,149 --> 00:00:54,489
years and a half and before that I would

16
00:00:54,489 --> 00:00:59,070
work on database as a consultant and

17
00:00:59,070 --> 00:01:02,820
basically on all squares Oracle

18
00:01:02,820 --> 00:01:06,550
Microsoft sequel server and before

19
00:01:06,550 --> 00:01:07,000
joining

20
00:01:07,000 --> 00:01:10,119
oh and sunny Oracle I have never worked

21
00:01:10,119 --> 00:01:11,770
on my scale before

22
00:01:11,770 --> 00:01:16,300
she has been a pleasure to work with a

23
00:01:16,300 --> 00:01:19,810
lot of great guys and to develop an

24
00:01:19,810 --> 00:01:21,429
application to improve the application

25
00:01:21,429 --> 00:01:28,679
for the last eight years so our agenda

26
00:01:28,679 --> 00:01:30,550
videos should give a little bit of

27
00:01:30,550 --> 00:01:33,160
background on what the plans are

28
00:01:33,160 --> 00:01:35,259
regarding application and specifically

29
00:01:35,259 --> 00:01:37,989
about group application and then we're

30
00:01:37,989 --> 00:01:41,140
going to dive into what's behind group

31
00:01:41,140 --> 00:01:43,300
application specifically about your app

32
00:01:43,300 --> 00:01:45,910
access based on implementation and then

33
00:01:45,910 --> 00:01:48,479
I will show a little bit about

34
00:01:48,479 --> 00:01:51,250
performance but just a sneak peek

35
00:01:51,250 --> 00:01:54,310
preview because after me there will be a

36
00:01:54,310 --> 00:01:55,450
guy named DeVito

37
00:01:55,450 --> 00:01:57,610
that will dive on performance and you

38
00:01:57,610 --> 00:02:00,970
explain everything that you can and you

39
00:02:00,970 --> 00:02:04,030
cannot do with group application in

40
00:02:04,030 --> 00:02:06,720
terms of performance

41
00:02:08,330 --> 00:02:14,370
so group allocation is a timepiece a

42
00:02:14,370 --> 00:02:17,910
tiny but important piece within the

43
00:02:17,910 --> 00:02:20,850
MySQL I not be cluster the idea of the

44
00:02:20,850 --> 00:02:23,390
mice cannot be closer it should be a

45
00:02:23,390 --> 00:02:26,970
fully distributed database solution so

46
00:02:26,970 --> 00:02:29,280
we have the router that will be hispano

47
00:02:29,280 --> 00:02:32,550
for delivering or send the query to a

48
00:02:32,550 --> 00:02:35,630
specific to a specific replica sets

49
00:02:35,630 --> 00:02:38,730
abaca set is powered by a group

50
00:02:38,730 --> 00:02:44,700
application and you can as as you can do

51
00:02:44,700 --> 00:02:46,740
now with their singles application you

52
00:02:46,740 --> 00:02:49,670
can plug a singles application to our

53
00:02:49,670 --> 00:02:54,240
group application core here and it's

54
00:02:54,240 --> 00:02:57,480
it's called sync our group application

55
00:02:57,480 --> 00:02:58,410
solution is called synchronous

56
00:02:58,410 --> 00:02:59,760
application but I will discuss a little

57
00:02:59,760 --> 00:03:01,650
bit about that because I really don't

58
00:03:01,650 --> 00:03:03,690
like the name because not really a

59
00:03:03,690 --> 00:03:06,150
synchronous solution but I'll talk a

60
00:03:06,150 --> 00:03:08,880
little bit about that in a few minutes

61
00:03:08,880 --> 00:03:13,560
so although it's frelling you you can if

62
00:03:13,560 --> 00:03:16,200
you use all the mascara consistency

63
00:03:16,200 --> 00:03:18,390
ecosystem solutions you can use the

64
00:03:18,390 --> 00:03:20,880
singles application plug it into our

65
00:03:20,880 --> 00:03:22,710
group application solution you can use

66
00:03:22,710 --> 00:03:27,450
semi sync application so can still grow

67
00:03:27,450 --> 00:03:30,600
your database you grow your cluster

68
00:03:30,600 --> 00:03:33,060
using the synchronous application

69
00:03:33,060 --> 00:03:35,070
solution plugged along with the

70
00:03:35,070 --> 00:03:36,930
synchronous application solution that we

71
00:03:36,930 --> 00:03:41,280
you provide with replication so you have

72
00:03:41,280 --> 00:03:45,180
also important piece of this puzzle it's

73
00:03:45,180 --> 00:03:47,430
called my scale shell that's responsible

74
00:03:47,430 --> 00:03:50,220
for orchestrating our cluster you can

75
00:03:50,220 --> 00:03:53,070
use the MS cache cell to in a user

76
00:03:53,070 --> 00:03:55,200
friendly way to add nodes in move nodes

77
00:03:55,200 --> 00:03:58,200
for the closer and closer basically it's

78
00:03:58,200 --> 00:04:01,260
a admin tool to make things easier to

79
00:04:01,260 --> 00:04:04,140
the end-user and of course in order to

80
00:04:04,140 --> 00:04:06,390
reach one of these happy cassettes you

81
00:04:06,390 --> 00:04:09,060
need to keep track of the members that

82
00:04:09,060 --> 00:04:11,790
have ginger that's have joined the

83
00:04:11,790 --> 00:04:14,130
closer and have left to the closer so

84
00:04:14,130 --> 00:04:16,978
have metadata on this information it's

85
00:04:16,978 --> 00:04:20,940
our future and it's not really fully

86
00:04:20,940 --> 00:04:22,350
implemented the ads

87
00:04:22,350 --> 00:04:26,040
and can see a preview of the solution in

88
00:04:26,040 --> 00:04:29,910
labs but you were working hard to make

89
00:04:29,910 --> 00:04:33,360
this idea to make this solution evently

90
00:04:33,360 --> 00:04:43,110
J so in the core of the my scale and a

91
00:04:43,110 --> 00:04:43,710
bit closer

92
00:04:43,710 --> 00:04:45,390
you have the my scale group application

93
00:04:45,390 --> 00:04:47,670
it's the mood master update every

94
00:04:47,670 --> 00:04:50,190
application plugin for my scale with

95
00:04:50,190 --> 00:04:52,740
buting autonomic distributed recovered

96
00:04:52,740 --> 00:04:54,870
conflict detection in group membership

97
00:04:54,870 --> 00:04:58,590
and the key point here is that it

98
00:04:58,590 --> 00:05:01,400
automates failover don't need a script

99
00:05:01,400 --> 00:05:04,760
so that when a master failures have to

100
00:05:04,760 --> 00:05:07,530
fail over to a new mass or have to pick

101
00:05:07,530 --> 00:05:11,520
one of the lives that has the best GGG

102
00:05:11,520 --> 00:05:13,980
everything is fully automated when use

103
00:05:13,980 --> 00:05:16,800
our group application solution don't

104
00:05:16,800 --> 00:05:19,140
need to think about it and it also

105
00:05:19,140 --> 00:05:22,410
provides mood to mess up data where you

106
00:05:22,410 --> 00:05:25,230
can write to an master although you not

107
00:05:25,230 --> 00:05:27,510
recommend this yet there are some rough

108
00:05:27,510 --> 00:05:30,450
edges between our group application

109
00:05:30,450 --> 00:05:33,140
solution and I not be specifically about

110
00:05:33,140 --> 00:05:36,030
gap locks you're actually working on

111
00:05:36,030 --> 00:05:40,350
making the gap locks work in sync with

112
00:05:40,350 --> 00:05:43,710
our group application solution but if

113
00:05:43,710 --> 00:05:48,350
you control we workload if you have

114
00:05:48,350 --> 00:05:51,690
ideas on how you can split your blocks

115
00:05:51,690 --> 00:05:53,580
between the server's they move master

116
00:05:53,580 --> 00:05:58,740
you work just fine and it provides both

117
00:05:58,740 --> 00:06:02,240
dollars so that when a node fails

118
00:06:02,240 --> 00:06:04,590
automaticall they perceive you detect

119
00:06:04,590 --> 00:06:07,410
that node has failed and we if you were

120
00:06:07,410 --> 00:06:10,260
using the single primary solution you

121
00:06:10,260 --> 00:06:13,800
elect a new primary automatically so

122
00:06:13,800 --> 00:06:16,920
it's about automation which will hide

123
00:06:16,920 --> 00:06:20,670
all the complex about free over from you

124
00:06:20,670 --> 00:06:24,360
and not need to have scripts to do a lot

125
00:06:24,360 --> 00:06:27,810
of things and having since a little some

126
00:06:27,810 --> 00:06:30,300
talks this afternoon about or this day

127
00:06:30,300 --> 00:06:34,590
that script can do bad things when

128
00:06:34,590 --> 00:06:37,969
combining with you

129
00:06:42,120 --> 00:06:46,800
so and what's group application so you

130
00:06:46,800 --> 00:06:48,900
have three important pieces in group

131
00:06:48,900 --> 00:06:51,990
application have the application

132
00:06:51,990 --> 00:06:53,820
blogging is the core parts the core

133
00:06:53,820 --> 00:06:56,040
piece of the solution and have a bunch

134
00:06:56,040 --> 00:06:58,950
of API to talk to the server so I think

135
00:06:58,950 --> 00:07:00,510
that the group application needs from

136
00:07:00,510 --> 00:07:03,000
the server is provided through a set of

137
00:07:03,000 --> 00:07:06,570
API and you have an API underneath it

138
00:07:06,570 --> 00:07:09,810
that is used to propagate information

139
00:07:09,810 --> 00:07:10,919
that gets the information is the

140
00:07:10,919 --> 00:07:15,330
transactions to remote nodes how it

141
00:07:15,330 --> 00:07:17,550
works during the execution of a

142
00:07:17,550 --> 00:07:18,120
transaction

143
00:07:18,120 --> 00:07:20,190
there is no interact interaction among

144
00:07:20,190 --> 00:07:22,860
the nodes everything is done locally but

145
00:07:22,860 --> 00:07:25,260
upon commit you catch all the change

146
00:07:25,260 --> 00:07:28,139
that the transaction size done and you

147
00:07:28,139 --> 00:07:30,540
propagate all you propagate all these

148
00:07:30,540 --> 00:07:32,610
things to the mote nodes to all the

149
00:07:32,610 --> 00:07:35,540
helices and then the match could happen

150
00:07:35,540 --> 00:07:42,510
exactly what happens when the chains are

151
00:07:42,510 --> 00:07:45,510
propagated to the mote nodes there will

152
00:07:45,510 --> 00:07:48,030
be a certification process there will be

153
00:07:48,030 --> 00:07:50,550
responsible for verifying if there is

154
00:07:50,550 --> 00:07:52,860
conflicts among possible concurrent

155
00:07:52,860 --> 00:07:55,229
transactions that have been executed on

156
00:07:55,229 --> 00:07:58,710
other nodes if there is a conflict the

157
00:07:58,710 --> 00:08:00,720
transaction will you be hold it back if

158
00:08:00,720 --> 00:08:02,970
there is no conflict conflicts the

159
00:08:02,970 --> 00:08:05,400
transaction of you commits so that

160
00:08:05,400 --> 00:08:07,530
transaction IMO transactions is

161
00:08:07,530 --> 00:08:09,870
committed through you call an applier

162
00:08:09,870 --> 00:08:12,900
and applier gets all the updates that

163
00:08:12,900 --> 00:08:15,810
you call right set and injects we apply

164
00:08:15,810 --> 00:08:17,550
these updates on the Hammad nodes of

165
00:08:17,550 --> 00:08:21,300
course in the originates machine on the

166
00:08:21,300 --> 00:08:22,800
machine that the transaction has

167
00:08:22,800 --> 00:08:25,860
executed just need to reply back to the

168
00:08:25,860 --> 00:08:28,410
ng user saying ok the transaction has

169
00:08:28,410 --> 00:08:30,330
been committed or the transaction has

170
00:08:30,330 --> 00:08:33,320
been aborted and everything is

171
00:08:33,320 --> 00:08:37,559
integrated in my scale is integrated

172
00:08:37,559 --> 00:08:40,589
with I know would be of course it's our

173
00:08:40,589 --> 00:08:43,799
first gh solution it has been J since

174
00:08:43,799 --> 00:08:46,740
December there are a lot of things to be

175
00:08:46,740 --> 00:08:49,290
done but they da should provide a lot of

176
00:08:49,290 --> 00:08:52,110
performances schema tables so that you

177
00:08:52,110 --> 00:08:54,300
can monitor the solution there are a few

178
00:08:54,300 --> 00:08:55,649
performances schemas

179
00:08:55,649 --> 00:08:57,119
override provided that you can use to

180
00:08:57,119 --> 00:08:58,889
check what's happened inside the closer

181
00:08:58,889 --> 00:09:02,189
what's happening within any specific

182
00:09:02,189 --> 00:09:08,369
eknoll so underneath that is this group

183
00:09:08,369 --> 00:09:11,809
communication API that's responsible for

184
00:09:11,809 --> 00:09:13,679
propagating the information to the

185
00:09:13,679 --> 00:09:16,139
himoto nodes and we're going to dive a

186
00:09:16,139 --> 00:09:21,319
little bit in this API

187
00:09:24,200 --> 00:09:26,860
okay

188
00:09:28,450 --> 00:09:34,310
so this API is quite simple it's a thin

189
00:09:34,310 --> 00:09:38,360
layer they Jesus was to hide all the

190
00:09:38,360 --> 00:09:41,630
implementation details on the group

191
00:09:41,630 --> 00:09:44,000
communication system itself if they

192
00:09:44,000 --> 00:09:47,150
begin our solution was based on chorus

193
00:09:47,150 --> 00:09:52,550
sync it worked fine as a prototype but I

194
00:09:52,550 --> 00:09:55,100
had several issues with the chorus sync

195
00:09:55,100 --> 00:09:58,400
and I highlight some demean shoes that

196
00:09:58,400 --> 00:10:01,580
led us to choose another solution have

197
00:10:01,580 --> 00:10:03,200
decided to choose an in-house solution

198
00:10:03,200 --> 00:10:08,180
and in this thin API that sits between

199
00:10:08,180 --> 00:10:10,610
our group communication implementation

200
00:10:10,610 --> 00:10:11,930
the core of the group communication

201
00:10:11,930 --> 00:10:15,620
implementation and the message bus was

202
00:10:15,620 --> 00:10:17,660
really important to make this transition

203
00:10:17,660 --> 00:10:21,740
easier or is in our case so they begin

204
00:10:21,740 --> 00:10:23,900
there was cursing but who have decided

205
00:10:23,900 --> 00:10:26,870
to move to to our in-house

206
00:10:26,870 --> 00:10:28,580
implementation and I will talk a little

207
00:10:28,580 --> 00:10:36,650
bit about it so it's a thin layer but it

208
00:10:36,650 --> 00:10:39,290
has to preserve some important profits

209
00:10:39,290 --> 00:10:41,390
from the group communication system

210
00:10:41,390 --> 00:10:44,680
whatever the group communication is so

211
00:10:44,680 --> 00:10:47,720
how to provide Toto order in the sense

212
00:10:47,720 --> 00:10:50,090
that when you send a message to remote

213
00:10:50,090 --> 00:10:52,490
in order to remote nodes it has to be

214
00:10:52,490 --> 00:10:54,800
totally ordered among all the masses

215
00:10:54,800 --> 00:10:58,580
that are being sent by concurrent nodes

216
00:10:58,580 --> 00:11:01,820
it has to preserve safe delivery which

217
00:11:01,820 --> 00:11:05,270
means that I will only allow a node to

218
00:11:05,270 --> 00:11:07,220
get this message to deliver this message

219
00:11:07,220 --> 00:11:11,230
when a majority of the nodes get it and

220
00:11:11,230 --> 00:11:15,020
this one of the this was one of the key

221
00:11:15,020 --> 00:11:16,760
issues that you have with chorusing

222
00:11:16,760 --> 00:11:18,920
coracii didn't provide safe delivery

223
00:11:18,920 --> 00:11:21,320
which means that a node could get a

224
00:11:21,320 --> 00:11:23,420
message then do something about this

225
00:11:23,420 --> 00:11:25,370
mess and fail but the other nodes

226
00:11:25,370 --> 00:11:29,660
wouldn't get it so basically it means

227
00:11:29,660 --> 00:11:32,060
that you could have in consistence your

228
00:11:32,060 --> 00:11:34,520
cluster and that's why I have decided to

229
00:11:34,520 --> 00:11:38,450
use our in has in-house implementation

230
00:11:38,450 --> 00:11:42,649
another important point about the group

231
00:11:42,649 --> 00:11:44,300
command system group communication

232
00:11:44,300 --> 00:11:47,029
season and that the this finger has

233
00:11:47,029 --> 00:11:48,920
preserved is the idea of a view

234
00:11:48,920 --> 00:11:49,490
synchrony

235
00:11:49,490 --> 00:11:52,209
basically view singles means that

236
00:11:52,209 --> 00:11:54,440
whenever there is a chance in your

237
00:11:54,440 --> 00:11:57,620
cluster whenever I know decided whenever

238
00:11:57,620 --> 00:11:59,920
I know this is removed from your cluster

239
00:11:59,920 --> 00:12:03,620
the information about the membership has

240
00:12:03,620 --> 00:12:06,769
to been totally ordered with the masses

241
00:12:06,769 --> 00:12:10,820
that are sent through the closer so it's

242
00:12:10,820 --> 00:12:14,420
quite important to to decide when no

243
00:12:14,420 --> 00:12:16,610
joints when a node leaves those

244
00:12:16,610 --> 00:12:19,579
information has to be totally order with

245
00:12:19,579 --> 00:12:21,440
the masses that have been there ty

246
00:12:21,440 --> 00:12:24,290
extended in the closer so it's a key

247
00:12:24,290 --> 00:12:27,170
property of a group communication system

248
00:12:27,170 --> 00:12:31,100
and this usually called these view

249
00:12:31,100 --> 00:12:33,019
singer in profits is usually called

250
00:12:33,019 --> 00:12:40,279
visual synchrony and you may have read

251
00:12:40,279 --> 00:12:42,800
somewhere about group communication

252
00:12:42,800 --> 00:12:44,449
about synchronous application about

253
00:12:44,449 --> 00:12:48,470
Galera and they use the visible in the

254
00:12:48,470 --> 00:12:51,890
name and in my opinion at least my

255
00:12:51,890 --> 00:12:54,290
humble penis not really a good idea

256
00:12:54,290 --> 00:12:57,050
because the veto comes from the veto

257
00:12:57,050 --> 00:12:59,050
synchrony which basically means that

258
00:12:59,050 --> 00:13:02,660
nodes that have left that closer nodes

259
00:13:02,660 --> 00:13:04,490
that have joined the closer this

260
00:13:04,490 --> 00:13:06,019
information about change in the closer

261
00:13:06,019 --> 00:13:09,890
have to be totally order with the masses

262
00:13:09,890 --> 00:13:12,170
that have been sent that are being

263
00:13:12,170 --> 00:13:14,120
exchanged so there is nothing to do with

264
00:13:14,120 --> 00:13:16,820
impunity there is hell that there is

265
00:13:16,820 --> 00:13:20,360
nothing and there is no correlation

266
00:13:20,360 --> 00:13:23,050
between synchronous application and

267
00:13:23,050 --> 00:13:28,910
visto synchrony I don't know why people

268
00:13:28,910 --> 00:13:30,740
come up with this idea and this name but

269
00:13:30,740 --> 00:13:34,360
it's wrong and our solutions not really

270
00:13:34,360 --> 00:13:36,410
synchronous is not synchronous

271
00:13:36,410 --> 00:13:39,140
application and are explained as I have

272
00:13:39,140 --> 00:13:41,980
said before why it's not simple in a few

273
00:13:41,980 --> 00:13:47,329
minutes in a few slides so our group

274
00:13:47,329 --> 00:13:50,180
communication engine

275
00:13:50,180 --> 00:13:57,060
so our solution is based on boxes which

276
00:13:57,060 --> 00:14:00,779
was initially based on on cursing but

277
00:14:00,779 --> 00:14:04,649
you have decide use our in-house boxes

278
00:14:04,649 --> 00:14:08,310
implementation it has nice features its

279
00:14:08,310 --> 00:14:12,000
has compression muting compression it

280
00:14:12,000 --> 00:14:14,670
has the ability to run different

281
00:14:14,670 --> 00:14:16,830
platforms basically all the platforms

282
00:14:16,830 --> 00:14:19,250
that are supported by my scale and

283
00:14:19,250 --> 00:14:23,220
chorusing only supported linux so it was

284
00:14:23,220 --> 00:14:26,700
basically a no-go for us with cursing in

285
00:14:26,700 --> 00:14:28,709
that sense it has supports dynamic

286
00:14:28,709 --> 00:14:30,570
membership in the sense that you can

287
00:14:30,570 --> 00:14:32,760
change the closer when everyone can add

288
00:14:32,760 --> 00:14:34,820
nodes can remove nodes from the closer

289
00:14:34,820 --> 00:14:38,700
it has support to SSL so if you need

290
00:14:38,700 --> 00:14:42,899
encryption you can use SSL and I forgot

291
00:14:42,899 --> 00:14:44,940
to mention something about the let me go

292
00:14:44,940 --> 00:14:48,959
back one slide sorry so I forgot to

293
00:14:48,959 --> 00:14:52,410
mention about closed group and closed

294
00:14:52,410 --> 00:14:55,980
group means that I know is only allowed

295
00:14:55,980 --> 00:14:57,990
to send message to the group to the

296
00:14:57,990 --> 00:15:01,020
closer if he has joined the group so

297
00:15:01,020 --> 00:15:02,910
it's basically about security so

298
00:15:02,910 --> 00:15:05,100
security is very important to Oracle

299
00:15:05,100 --> 00:15:07,260
it's very important to my scale and

300
00:15:07,260 --> 00:15:10,560
that's why you have this property of

301
00:15:10,560 --> 00:15:13,370
closed group so and that's why you have

302
00:15:13,370 --> 00:15:16,709
preached the support to SSL and we also

303
00:15:16,709 --> 00:15:20,100
have IP whitelist and can specify which

304
00:15:20,100 --> 00:15:23,010
nodes are allowed to join your cluster

305
00:15:23,010 --> 00:15:25,320
so there is no third parties of the

306
00:15:25,320 --> 00:15:27,180
required you don't need an external

307
00:15:27,180 --> 00:15:30,300
component to run group application don't

308
00:15:30,300 --> 00:15:33,660
need a next turn of process to run group

309
00:15:33,660 --> 00:15:35,160
application everything's title

310
00:15:35,160 --> 00:15:40,160
integrates within the MySQL product and

311
00:15:40,160 --> 00:15:43,709
you don't need don't need your don't

312
00:15:43,709 --> 00:15:46,140
have support to move casts so which

313
00:15:46,140 --> 00:15:48,839
means that you can run group application

314
00:15:48,839 --> 00:15:52,640
cloud without problems

315
00:15:53,240 --> 00:15:56,749
and most of the time you really don't

316
00:15:56,749 --> 00:15:59,269
need much gas I think theater you talk a

317
00:15:59,269 --> 00:16:02,240
little bit about this in his

318
00:16:02,240 --> 00:16:08,059
presentation about performance so I have

319
00:16:08,059 --> 00:16:10,189
decided to use boxes but there are a lot

320
00:16:10,189 --> 00:16:15,350
of boxes variations most parks is fast

321
00:16:15,350 --> 00:16:19,730
boxes these boxes and who have picked

322
00:16:19,730 --> 00:16:23,059
one specific solution facts we have

323
00:16:23,059 --> 00:16:25,220
started developing our in-house

324
00:16:25,220 --> 00:16:28,069
implementation and then later you came

325
00:16:28,069 --> 00:16:30,829
across this paper that is called

326
00:16:30,829 --> 00:16:33,139
mansions or this protocol that is called

327
00:16:33,139 --> 00:16:35,470
mansion so our solution is

328
00:16:35,470 --> 00:16:38,149
prettiman pretty similar to mansions but

329
00:16:38,149 --> 00:16:42,470
was not initially based on on on it and

330
00:16:42,470 --> 00:16:44,920
there are a few difference between our

331
00:16:44,920 --> 00:16:48,800
implementation in mansions but if you

332
00:16:48,800 --> 00:16:53,269
want to pick one protocol one paper that

333
00:16:53,269 --> 00:16:55,939
has a lot of similarities to our

334
00:16:55,939 --> 00:17:00,790
solution I would say that is measures

335
00:17:03,360 --> 00:17:07,919
so you understand how mentions work and

336
00:17:07,919 --> 00:17:09,898
how our solution works need to

337
00:17:09,898 --> 00:17:13,919
understand a little bit about boxes so

338
00:17:13,919 --> 00:17:16,799
box is really really really simple

339
00:17:16,799 --> 00:17:19,169
and although the implementation is

340
00:17:19,169 --> 00:17:21,689
really tricky to get it right to get a

341
00:17:21,689 --> 00:17:24,599
good performance it's not easy but it is

342
00:17:24,599 --> 00:17:28,349
quite simple so have nodes that have an

343
00:17:28,349 --> 00:17:31,230
important that have rows in the in the

344
00:17:31,230 --> 00:17:35,429
protocol these roles are there are

345
00:17:35,429 --> 00:17:38,340
proposers they acceptors and their

346
00:17:38,340 --> 00:17:40,889
alertness you have phase explain each

347
00:17:40,889 --> 00:17:43,860
phase individually and usually all the

348
00:17:43,860 --> 00:17:46,799
members all the nodes have the same rows

349
00:17:46,799 --> 00:17:49,919
there are all proposers acceptors and

350
00:17:49,919 --> 00:17:53,490
learners and the masses that are sent

351
00:17:53,490 --> 00:17:55,799
through these in our case our

352
00:17:55,799 --> 00:17:58,620
transactions and in order to make

353
00:17:58,620 --> 00:18:01,710
progress you need a majority so if you

354
00:18:01,710 --> 00:18:03,779
have three nodes if you had three

355
00:18:03,779 --> 00:18:05,970
members and at least you need three

356
00:18:05,970 --> 00:18:10,230
members you can tolerate one failure one

357
00:18:10,230 --> 00:18:12,419
of these members an hour these lights

358
00:18:12,419 --> 00:18:14,669
can fail and you see you can make

359
00:18:14,669 --> 00:18:18,049
progress because there will be two nodes

360
00:18:18,049 --> 00:18:20,730
so explain a little bit about each one

361
00:18:20,730 --> 00:18:23,070
of these phase so that you can

362
00:18:23,070 --> 00:18:25,740
understand our boxes based

363
00:18:25,740 --> 00:18:28,010
implementation

364
00:18:29,580 --> 00:18:33,230
so the first phase this prepare phase or

365
00:18:33,230 --> 00:18:36,929
literal action phase based one of the of

366
00:18:36,929 --> 00:18:39,480
the notes one of the proposers you

367
00:18:39,480 --> 00:18:44,519
become a leader and and the idea here is

368
00:18:44,519 --> 00:18:47,309
that if there are many bosses that there

369
00:18:47,309 --> 00:18:49,470
are there is no progress if there are

370
00:18:49,470 --> 00:18:52,200
many people or several people are

371
00:18:52,200 --> 00:18:54,269
bossing around there is no progress as

372
00:18:54,269 --> 00:18:56,789
in real life so have to pick one of

373
00:18:56,789 --> 00:18:58,980
these members one of these loans as a

374
00:18:58,980 --> 00:19:02,039
leader so this is the first phase of the

375
00:19:02,039 --> 00:19:05,100
paksas protocol basically back to send a

376
00:19:05,100 --> 00:19:07,529
message saying I want to become a leader

377
00:19:07,529 --> 00:19:09,659
one of the nodes you send this message

378
00:19:09,659 --> 00:19:12,450
usually the node with the lowest number

379
00:19:12,450 --> 00:19:15,149
in this case in our case in our example

380
00:19:15,149 --> 00:19:18,840
zero member zero so I use the same set

381
00:19:18,840 --> 00:19:21,830
of images through all these lives and

382
00:19:21,830 --> 00:19:25,499
the dark blue or dark gray I don't know

383
00:19:25,499 --> 00:19:27,989
whatever it's the it's a leader

384
00:19:27,989 --> 00:19:31,109
the other ones are basic acceptors or

385
00:19:31,109 --> 00:19:33,659
learns they can become a leader

386
00:19:33,659 --> 00:19:35,850
eventually if the current leader fails

387
00:19:35,850 --> 00:19:39,119
so the member that wants to become a

388
00:19:39,119 --> 00:19:41,609
leader you send a message where the

389
00:19:41,609 --> 00:19:44,730
ballot number with basically have token

390
00:19:44,730 --> 00:19:48,299
say I have this token number and and I

391
00:19:48,299 --> 00:19:50,580
want to become a leader everybody that

392
00:19:50,580 --> 00:19:54,509
gets this message you reply back if it's

393
00:19:54,509 --> 00:19:57,210
blossom if it's didn't receive a

394
00:19:57,210 --> 00:19:59,480
previous masters with the higher number

395
00:19:59,480 --> 00:20:02,399
so basically to promise okay from now on

396
00:20:02,399 --> 00:20:04,980
are you you are going to be the leader

397
00:20:04,980 --> 00:20:07,609
and I reply back to you as long as

398
00:20:07,609 --> 00:20:11,359
anybody else sent another message with a

399
00:20:11,359 --> 00:20:14,700
token or with a ballot number higher

400
00:20:14,700 --> 00:20:17,489
than you everybody you make a promise to

401
00:20:17,489 --> 00:20:20,450
follow that leader

402
00:20:21,810 --> 00:20:25,780
so you only need the first phase to

403
00:20:25,780 --> 00:20:28,120
elect a leader when there is a leader as

404
00:20:28,120 --> 00:20:30,460
long that is a leader you don't run the

405
00:20:30,460 --> 00:20:33,400
first phase you go always to the second

406
00:20:33,400 --> 00:20:36,220
phase in the second phase is the core of

407
00:20:36,220 --> 00:20:39,310
the protocol is the dissemination of the

408
00:20:39,310 --> 00:20:41,350
data of the transactions to all the

409
00:20:41,350 --> 00:20:45,250
members so the leader in the previous

410
00:20:45,250 --> 00:20:47,680
phase in the previous phase you get

411
00:20:47,680 --> 00:20:50,200
information from the members and each

412
00:20:50,200 --> 00:20:53,230
you also check if someone got a previous

413
00:20:53,230 --> 00:20:56,230
matches message if there was a previous

414
00:20:56,230 --> 00:20:59,370
matches message you will use it

415
00:20:59,370 --> 00:21:02,410
otherwise you to propose whatever which

416
00:21:02,410 --> 00:21:04,990
has in the queue to be proposed Sochi

417
00:21:04,990 --> 00:21:06,910
will send a new value if nothing else

418
00:21:06,910 --> 00:21:10,840
happened and the protocol requires just

419
00:21:10,840 --> 00:21:13,000
a single round trip to get an agreement

420
00:21:13,000 --> 00:21:15,520
so basically to say okay that's the next

421
00:21:15,520 --> 00:21:17,920
transaction there you commit in our

422
00:21:17,920 --> 00:21:21,460
group communication solution or group

423
00:21:21,460 --> 00:21:24,660
application solution sorry

424
00:21:27,540 --> 00:21:31,350
so the last one is the learn phase okay

425
00:21:31,350 --> 00:21:33,210
you get an agreement you got an

426
00:21:33,210 --> 00:21:35,130
agreements that's a transaction to you

427
00:21:35,130 --> 00:21:36,810
the next transaction to be committed

428
00:21:36,810 --> 00:21:40,470
well will be transaction X then the

429
00:21:40,470 --> 00:21:43,980
leader you reach the agreements and the

430
00:21:43,980 --> 00:21:45,660
leader needs to inform the other members

431
00:21:45,660 --> 00:21:48,120
that there was an agreement so there is

432
00:21:48,120 --> 00:21:50,850
a third phase the learn phase where the

433
00:21:50,850 --> 00:21:52,950
leader inform all the members that

434
00:21:52,950 --> 00:21:57,150
something has been decided and usually

435
00:21:57,150 --> 00:21:59,940
you can pick back there learn message in

436
00:21:59,940 --> 00:22:01,770
the previous mass in the accepted face

437
00:22:01,770 --> 00:22:04,680
so that don't need really to send any

438
00:22:04,680 --> 00:22:06,870
specific message saying okay that's the

439
00:22:06,870 --> 00:22:09,270
the next transaction the last met the

440
00:22:09,270 --> 00:22:12,120
next message that has been decided so

441
00:22:12,120 --> 00:22:13,920
came basically piggyback this

442
00:22:13,920 --> 00:22:17,340
information in the other the previous

443
00:22:17,340 --> 00:22:27,110
phase of the protocol times up okay will

444
00:22:27,770 --> 00:22:33,110
okay so sorry about that and okay so you

445
00:22:33,110 --> 00:22:35,210
don't really want to commit one single

446
00:22:35,210 --> 00:22:37,850
message once you commit super self

447
00:22:37,850 --> 00:22:41,240
message so all the masses will be kept

448
00:22:41,240 --> 00:22:44,210
in a queue so have a sequence of masses

449
00:22:44,210 --> 00:22:45,800
so we're going to commit the next

450
00:22:45,800 --> 00:22:47,240
transaction the next transaction the

451
00:22:47,240 --> 00:22:49,580
next transaction if your leader fails

452
00:22:49,580 --> 00:22:53,840
you need to elect I need a new leader so

453
00:22:53,840 --> 00:22:57,200
and why you have decided to Pareto on

454
00:22:57,200 --> 00:23:00,170
paksas based implementation because the

455
00:23:00,170 --> 00:23:03,290
leader can become a bottleneck don't

456
00:23:03,290 --> 00:23:05,660
want to send a transaction to the leader

457
00:23:05,660 --> 00:23:07,400
and then the leader you send a

458
00:23:07,400 --> 00:23:10,270
transaction to all the nodes it's really

459
00:23:10,270 --> 00:23:12,980
it's not really good so that's why you

460
00:23:12,980 --> 00:23:15,500
have decided to create your own taxes

461
00:23:15,500 --> 00:23:17,510
based implementation so in our solution

462
00:23:17,510 --> 00:23:21,500
everybody is a leader everybody commits

463
00:23:21,500 --> 00:23:23,900
their own will you commit your

464
00:23:23,900 --> 00:23:26,360
transaction in the onslaught of course

465
00:23:26,360 --> 00:23:28,370
you have to organize these Lots in a

466
00:23:28,370 --> 00:23:32,960
sequence so let me skip a few

467
00:23:32,960 --> 00:23:35,510
transactions and that is a few slides so

468
00:23:35,510 --> 00:23:38,179
there is a a key issue here in our in

469
00:23:38,179 --> 00:23:42,350
our solution so if a node has nothing to

470
00:23:42,350 --> 00:23:44,929
propose you have this vault has to

471
00:23:44,929 --> 00:23:46,700
inform the other nodes that okay I don't

472
00:23:46,700 --> 00:23:48,980
have anything to propose so I'm going to

473
00:23:48,980 --> 00:23:51,500
skip my turn in there's lots and there's

474
00:23:51,500 --> 00:23:55,100
sequence of masses and there is can I

475
00:23:55,100 --> 00:23:59,390
mean this you can use a simple learn you

476
00:23:59,390 --> 00:24:01,130
can use a simple learn message to do

477
00:24:01,130 --> 00:24:03,260
that but if you have to inform the other

478
00:24:03,260 --> 00:24:06,650
members that you have you don't want to

479
00:24:06,650 --> 00:24:08,660
commit anything you don't have in any

480
00:24:08,660 --> 00:24:15,340
transaction new queue so let's move to

481
00:24:15,340 --> 00:24:21,230
this is live so current you had command

482
00:24:21,230 --> 00:24:23,350
only the primary single solution so

483
00:24:23,350 --> 00:24:26,600
there is no direct mapping between our

484
00:24:26,600 --> 00:24:30,320
primary solution and our Parks's base

485
00:24:30,320 --> 00:24:32,480
and implementation in the sense that if

486
00:24:32,480 --> 00:24:35,660
a node fails or if I know that has

487
00:24:35,660 --> 00:24:37,760
nothing to say has nothing to commit

488
00:24:37,760 --> 00:24:40,990
issue needs to send alert message

489
00:24:40,990 --> 00:24:43,929
this can become a problem so in our lair

490
00:24:43,929 --> 00:24:46,380
now a thin layer you immediately

491
00:24:46,380 --> 00:24:49,390
expelled when a node fails otherwise

492
00:24:49,390 --> 00:24:52,870
every time you'd have to to run the food

493
00:24:52,870 --> 00:24:55,090
boxes implementation to get an agreement

494
00:24:55,090 --> 00:25:00,429
for that slot so a few atomization of

495
00:25:00,429 --> 00:25:02,410
course you don't need to complete your

496
00:25:02,410 --> 00:25:05,230
transaction after sequentially you have

497
00:25:05,230 --> 00:25:07,630
pipeline ok commit seven transactions or

498
00:25:07,630 --> 00:25:10,540
you can send threats you can run the

499
00:25:10,540 --> 00:25:12,429
agreements protocol the consensus

500
00:25:12,429 --> 00:25:16,870
protocol in parallel you have batch this

501
00:25:16,870 --> 00:25:19,059
is not really exposed to the end-user

502
00:25:19,059 --> 00:25:22,929
right now you have plans to do that you

503
00:25:22,929 --> 00:25:28,690
have compression and just to finalize or

504
00:25:28,690 --> 00:25:34,870
to finish some some numbers with

505
00:25:34,870 --> 00:25:37,860
multiple writers you are able to reach

506
00:25:37,860 --> 00:25:42,220
more than 100,000 transactions that's

507
00:25:42,220 --> 00:25:44,890
pretty good and this is a key key

508
00:25:44,890 --> 00:25:46,990
information so that when viateur you

509
00:25:46,990 --> 00:25:48,730
presents about numbers about group

510
00:25:48,730 --> 00:25:50,380
application you are going to see that

511
00:25:50,380 --> 00:25:53,080
you have room for accommodates

512
00:25:53,080 --> 00:25:55,809
transactions that come from the from my

513
00:25:55,809 --> 00:25:58,300
scale they our group implementation

514
00:25:58,300 --> 00:26:02,669
solution has room for grow

515
00:26:04,290 --> 00:26:09,900
and Layton's you know lets me skip this

516
00:26:09,900 --> 00:26:11,300
one

517
00:26:11,300 --> 00:26:15,870
okay sorry and lets me jump to the

518
00:26:15,870 --> 00:26:20,130
conclusion so group application our

519
00:26:20,130 --> 00:26:22,290
group communication solution has become

520
00:26:22,290 --> 00:26:25,230
GA in december and there are a lot of

521
00:26:25,230 --> 00:26:27,450
things to be done basically you have

522
00:26:27,450 --> 00:26:31,830
decide to use boxes just to make and to

523
00:26:31,830 --> 00:26:33,900
be able to play with the idea of leaders

524
00:26:33,900 --> 00:26:38,130
acceptors and learners and you have big

525
00:26:38,130 --> 00:26:40,350
ideas and big plans for implementation

526
00:26:40,350 --> 00:26:42,690
so we stay tuned in because it's gonna

527
00:26:42,690 --> 00:26:47,430
rock now thank you and sorry for the

528
00:26:47,430 --> 00:26:48,650
other time

529
00:26:48,650 --> 00:26:53,519
[Applause]

