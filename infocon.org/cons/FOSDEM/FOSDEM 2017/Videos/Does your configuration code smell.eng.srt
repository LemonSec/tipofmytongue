1
00:00:00,000 --> 00:00:02,060
you

2
00:00:04,580 --> 00:00:07,850
all right welcome everybody full room

3
00:00:07,850 --> 00:00:09,620
which is good at five o'clock usually it

4
00:00:09,620 --> 00:00:11,540
dies off a little bit I guess a lot of

5
00:00:11,540 --> 00:00:13,730
people have smelly code we have here

6
00:00:13,730 --> 00:00:16,300
return and he's going to tell us about

7
00:00:16,300 --> 00:00:21,220
configuration code so thank you

8
00:00:21,220 --> 00:00:23,599
everybody can hear me especially from

9
00:00:23,599 --> 00:00:25,579
the back excellent

10
00:00:25,579 --> 00:00:28,489
okay my name is Tasha as he introduced

11
00:00:28,489 --> 00:00:31,130
me and I am a researcher in thinks

12
00:00:31,130 --> 00:00:34,670
university or economics and business let

13
00:00:34,670 --> 00:00:36,800
me before we start let me do a quick

14
00:00:36,800 --> 00:00:40,269
reality check how many people use puppet

15
00:00:40,269 --> 00:00:44,329
Wow and anything else any other

16
00:00:44,329 --> 00:00:46,760
configuration system and suppose your

17
00:00:46,760 --> 00:00:50,839
home that's also nice excellent so we

18
00:00:50,839 --> 00:00:53,570
are very much you are very much in the

19
00:00:53,570 --> 00:00:55,579
right room because I'm going to talk

20
00:00:55,579 --> 00:00:58,850
about a pet and that all this mess that

21
00:00:58,850 --> 00:01:00,469
I'm going to talk about they are more or

22
00:01:00,469 --> 00:01:02,839
less applicable in other contribution

23
00:01:02,839 --> 00:01:06,980
management system also so what I'm going

24
00:01:06,980 --> 00:01:09,610
to talk about smells in gender

25
00:01:09,610 --> 00:01:13,100
configuration smells in particular I'm

26
00:01:13,100 --> 00:01:15,980
going to take a few examples and I will

27
00:01:15,980 --> 00:01:19,210
show why we consider them as a smell and

28
00:01:19,210 --> 00:01:22,310
towards the end of it I will I will talk

29
00:01:22,310 --> 00:01:24,890
about tools that we can use to detect

30
00:01:24,890 --> 00:01:30,530
these smells so let's start with the

31
00:01:30,530 --> 00:01:34,400
term smell the term smell was introduced

32
00:01:34,400 --> 00:01:37,940
in this book by Kent back and chapter

33
00:01:37,940 --> 00:01:40,600
four of this book and he described it as

34
00:01:40,600 --> 00:01:43,760
certain structures in the code that

35
00:01:43,760 --> 00:01:46,790
suggest or sometimes clean for the

36
00:01:46,790 --> 00:01:50,600
possibility of refactoring this is an

37
00:01:50,600 --> 00:01:53,420
informal definition and I would like to

38
00:01:53,420 --> 00:01:56,600
give you an idea a deeper idea better

39
00:01:56,600 --> 00:02:00,290
idea what a smell may look like by and

40
00:02:00,290 --> 00:02:03,980
using an analogy and I would like to do

41
00:02:03,980 --> 00:02:06,980
using a I'm introducing a new word

42
00:02:06,980 --> 00:02:13,880
called juga anybody in this room has has

43
00:02:13,880 --> 00:02:17,459
a heard of this word jugaad

44
00:02:17,459 --> 00:02:23,430
yeah so Jawad is I mean it's okay

45
00:02:23,430 --> 00:02:26,400
because Jaguar is a Hindi word and by

46
00:02:26,400 --> 00:02:30,599
the way Hindi is if I'm not wrong fourth

47
00:02:30,599 --> 00:02:33,799
white widely used language in the world

48
00:02:33,799 --> 00:02:39,980
after Chinese Spanish and English so

49
00:02:39,980 --> 00:02:42,959
this is this is the word from Hindi and

50
00:02:42,959 --> 00:02:46,409
which means a walk around a simple

51
00:02:46,409 --> 00:02:53,549
workaround or a hack this whatever the

52
00:02:53,549 --> 00:02:56,099
definition is probably doesn't give you

53
00:02:56,099 --> 00:02:58,650
the sense what a Jew guard may look like

54
00:02:58,650 --> 00:03:01,159
so let me give you a few examples

55
00:03:01,159 --> 00:03:09,680
real-world examples some of their in

56
00:03:09,680 --> 00:03:14,340
somewhere in a student some student in

57
00:03:14,340 --> 00:03:16,590
night one to drink a coffee because he

58
00:03:16,590 --> 00:03:19,650
has some example next day maybe Java

59
00:03:19,650 --> 00:03:23,639
exam and the canteen is closing the

60
00:03:23,639 --> 00:03:27,479
night so when he is using iron box to

61
00:03:27,479 --> 00:03:35,069
make the coffee it's it's quite hot in

62
00:03:35,069 --> 00:03:40,620
India and if you don't have AC and still

63
00:03:40,620 --> 00:03:44,000
you want to work on your PC then

64
00:03:44,000 --> 00:03:47,759
somewhat these kind of arrangement you

65
00:03:47,759 --> 00:03:50,340
need to make to make your PC happy and

66
00:03:50,340 --> 00:03:56,579
yourself happy this is what happens when

67
00:03:56,579 --> 00:03:59,879
you have to brother and sister and then

68
00:03:59,879 --> 00:04:01,799
they have one room each and they want

69
00:04:01,799 --> 00:04:07,319
equal share of cold air so and by the

70
00:04:07,319 --> 00:04:09,269
way if you don't recognize this this is

71
00:04:09,269 --> 00:04:11,840
a pyjama

72
00:04:17,380 --> 00:04:20,560
so what if the clock is broken it still

73
00:04:20,560 --> 00:04:24,340
works and you know we can still arrange

74
00:04:24,340 --> 00:04:31,750
something to make our goal the owner

75
00:04:31,750 --> 00:04:33,820
don't want to go to a service center and

76
00:04:33,820 --> 00:04:36,640
you know spend money on the proper

77
00:04:36,640 --> 00:04:40,300
locking system he gone to a local store

78
00:04:40,300 --> 00:04:44,200
he said okay put me a lot here and it in

79
00:04:44,200 --> 00:04:49,810
most cases it works well my aim why why

80
00:04:49,810 --> 00:04:52,180
I'm showing these pictures and why I

81
00:04:52,180 --> 00:04:54,700
introduced a new word to you is because

82
00:04:54,700 --> 00:04:57,010
I think there is a relation between Juba

83
00:04:57,010 --> 00:05:00,220
and smells in fact what I think is

84
00:05:00,220 --> 00:05:05,440
smells are juggling software and why I

85
00:05:05,440 --> 00:05:10,090
think so because like smells jugaad are

86
00:05:10,090 --> 00:05:13,540
temporary solutions you cannot use it

87
00:05:13,540 --> 00:05:17,830
for a long time they they serve some

88
00:05:17,830 --> 00:05:21,580
purpose they solve some problem but they

89
00:05:21,580 --> 00:05:25,360
introduce quality deficit it applies to

90
00:05:25,360 --> 00:05:28,230
both of them having smells and regards

91
00:05:28,230 --> 00:05:30,550
although there is a big difference also

92
00:05:30,550 --> 00:05:32,650
so we need to understand that also

93
00:05:32,650 --> 00:05:34,780
because jugaad come with a positive

94
00:05:34,780 --> 00:05:36,520
connotation and smells come with a

95
00:05:36,520 --> 00:05:39,130
negative connotation so now mudichu

96
00:05:39,130 --> 00:05:40,870
guards are considered innovative and

97
00:05:40,870 --> 00:05:43,890
when the resources are meager or limited

98
00:05:43,890 --> 00:05:46,990
however smells introduced gets

99
00:05:46,990 --> 00:05:50,920
introduced when the people don't have

100
00:05:50,920 --> 00:05:52,360
sufficient knowledge or they are

101
00:05:52,360 --> 00:05:57,700
ignorant however still there are some

102
00:05:57,700 --> 00:05:59,590
similarities between both of these

103
00:05:59,590 --> 00:06:01,870
metaphors and that's why I think they

104
00:06:01,870 --> 00:06:06,340
are similar in nature and let's talk

105
00:06:06,340 --> 00:06:10,180
about smell again so smells was

106
00:06:10,180 --> 00:06:12,700
introduced I as I told you that it was

107
00:06:12,700 --> 00:06:16,390
introduced in 1999 but in the book by

108
00:06:16,390 --> 00:06:18,850
Martin Fowler and came back and then

109
00:06:18,850 --> 00:06:22,600
many people worked on that and if you

110
00:06:22,600 --> 00:06:25,900
look at literature you will find at

111
00:06:25,900 --> 00:06:31,060
least 40 different terms used for smells

112
00:06:31,060 --> 00:06:33,440
and I'm not talking about specific

113
00:06:33,440 --> 00:06:35,720
smells by the way they are many more

114
00:06:35,720 --> 00:06:37,729
these are the terms used to describe

115
00:06:37,729 --> 00:06:43,520
smells and I'm also I also work a lot

116
00:06:43,520 --> 00:06:45,860
from at least from last four five years

117
00:06:45,860 --> 00:06:51,289
on on this topic and one of the things

118
00:06:51,289 --> 00:06:54,949
that I am proud of is this book which I

119
00:06:54,949 --> 00:06:57,490
co-authored with my other two colleagues

120
00:06:57,490 --> 00:07:00,470
which is on design smash the smells that

121
00:07:00,470 --> 00:07:05,569
may occur in design software design okay

122
00:07:05,569 --> 00:07:07,400
so but we are talking about

123
00:07:07,400 --> 00:07:09,470
configuration smells and before I

124
00:07:09,470 --> 00:07:11,659
introduce configuration smells to you

125
00:07:11,659 --> 00:07:14,539
let me introduce infrastructure as code

126
00:07:14,539 --> 00:07:18,620
I guess it's not really required for me

127
00:07:18,620 --> 00:07:21,470
to spend too much time on included

128
00:07:21,470 --> 00:07:25,250
introductory slides but let me do it for

129
00:07:25,250 --> 00:07:28,819
the sake of completeness info such as

130
00:07:28,819 --> 00:07:32,210
code is a practice is a practice of

131
00:07:32,210 --> 00:07:34,719
specifying computing system

132
00:07:34,719 --> 00:07:37,909
configuration through code automating

133
00:07:37,909 --> 00:07:40,940
system deployment and managing system

134
00:07:40,940 --> 00:07:43,460
configurations through traditional

135
00:07:43,460 --> 00:07:47,030
software engineering practices what I

136
00:07:47,030 --> 00:07:50,419
mean is that you write if you want to

137
00:07:50,419 --> 00:07:52,699
have a server and which you want to make

138
00:07:52,699 --> 00:07:54,590
sure that a certain service is installed

139
00:07:54,590 --> 00:07:57,199
and group work running and you can write

140
00:07:57,199 --> 00:07:58,699
something like this by the way it's a

141
00:07:58,699 --> 00:08:02,120
puppet example so and all the examples

142
00:08:02,120 --> 00:08:05,240
that I'm going to show is is from

143
00:08:05,240 --> 00:08:08,870
property so you can write something like

144
00:08:08,870 --> 00:08:11,060
that it's a very simple example just to

145
00:08:11,060 --> 00:08:14,150
show what you can do and if you want to

146
00:08:14,150 --> 00:08:15,590
create a new user you can write

147
00:08:15,590 --> 00:08:17,750
something like this and you can specify

148
00:08:17,750 --> 00:08:21,050
the properties of the user and you are

149
00:08:21,050 --> 00:08:22,789
done and the puppet will take care of

150
00:08:22,789 --> 00:08:25,130
how to create and how to do that you

151
00:08:25,130 --> 00:08:28,940
just specify what you want and obviously

152
00:08:28,940 --> 00:08:31,610
there are many more I some of them I

153
00:08:31,610 --> 00:08:33,828
just mentioned I have mentioned here but

154
00:08:33,828 --> 00:08:38,750
there are many more and in the context

155
00:08:38,750 --> 00:08:40,839
of traditional software engineering what

156
00:08:40,839 --> 00:08:44,290
infrastructure as code does it brings

157
00:08:44,290 --> 00:08:46,820
infrastructure configuration code tools

158
00:08:46,820 --> 00:08:49,910
and services in the purview of software

159
00:08:49,910 --> 00:08:54,820
system what it means is you apply

160
00:08:54,820 --> 00:08:56,960
traditional soft engineering practices

161
00:08:56,960 --> 00:08:59,840
not only on production code but also on

162
00:08:59,840 --> 00:09:01,990
infrastructure and configuration code

163
00:09:01,990 --> 00:09:05,360
and when I say traditional software

164
00:09:05,360 --> 00:09:07,279
engineering practices I mean like

165
00:09:07,279 --> 00:09:10,250
testing reviewing versioning and many

166
00:09:10,250 --> 00:09:19,100
more similar practices and this is the

167
00:09:19,100 --> 00:09:22,040
time to introduce conjugation smell well

168
00:09:22,040 --> 00:09:25,040
this is a big definition but probably

169
00:09:25,040 --> 00:09:27,020
two most important things in this

170
00:09:27,020 --> 00:09:29,900
definition is that it violates the

171
00:09:29,900 --> 00:09:33,050
recommended best best practices so which

172
00:09:33,050 --> 00:09:35,300
is these are the best practices are

173
00:09:35,300 --> 00:09:37,580
coming from the experiences people like

174
00:09:37,580 --> 00:09:40,420
you they have lot of experiences in

175
00:09:40,420 --> 00:09:42,920
writing pocket code or in general

176
00:09:42,920 --> 00:09:46,310
configuration code and they they derived

177
00:09:46,310 --> 00:09:49,490
some best practices so these are the

178
00:09:49,490 --> 00:09:50,510
best practices

179
00:09:50,510 --> 00:09:53,930
if a newbie is wanting these best

180
00:09:53,930 --> 00:09:56,870
practices basically he is actually

181
00:09:56,870 --> 00:09:58,670
introducing configuration smell and

182
00:09:58,670 --> 00:10:01,430
these are the Smurfs that why we

183
00:10:01,430 --> 00:10:03,830
consider them as smell because because

184
00:10:03,830 --> 00:10:06,710
they affect programs quality in negative

185
00:10:06,710 --> 00:10:12,890
way now what we have done me and my

186
00:10:12,890 --> 00:10:14,720
colleagues and my University where I

187
00:10:14,720 --> 00:10:19,450
work that we collected all the resources

188
00:10:19,450 --> 00:10:24,800
started from starting from puppet puppet

189
00:10:24,800 --> 00:10:27,230
website which specify how to write what

190
00:10:27,230 --> 00:10:29,510
to not what not to light and things like

191
00:10:29,510 --> 00:10:31,640
that and many other blogs many other

192
00:10:31,640 --> 00:10:35,209
books and we consolidated and prepared a

193
00:10:35,209 --> 00:10:38,330
catalog of smells both and and we

194
00:10:38,330 --> 00:10:41,690
classified them as two types of smells

195
00:10:41,690 --> 00:10:43,130
configuration smell one is

196
00:10:43,130 --> 00:10:45,470
implementation a configuration smells

197
00:10:45,470 --> 00:10:47,959
and another one is design convolution

198
00:10:47,959 --> 00:10:49,970
smells so implementation confusion

199
00:10:49,970 --> 00:10:54,230
smells deals with the local locally

200
00:10:54,230 --> 00:10:55,520
locally look

201
00:10:55,520 --> 00:10:59,890
in fact like styling indentation and

202
00:10:59,890 --> 00:11:02,930
something like that naming convention

203
00:11:02,930 --> 00:11:06,410
and design conversion design

204
00:11:06,410 --> 00:11:09,830
configuration smells deals with deals

205
00:11:09,830 --> 00:11:14,360
with the the module structure and and

206
00:11:14,360 --> 00:11:16,250
the structure of the repository and

207
00:11:16,250 --> 00:11:19,190
things like that so what I'm going to do

208
00:11:19,190 --> 00:11:22,310
is I'm going to take a few examples in

209
00:11:22,310 --> 00:11:23,990
both the categories and I will show you

210
00:11:23,990 --> 00:11:28,760
what are what we consider as smells so

211
00:11:28,760 --> 00:11:31,430
this is a piece of puppet code so let me

212
00:11:31,430 --> 00:11:34,150
go one by one

213
00:11:34,150 --> 00:11:40,040
so in puppet import is duplicated and so

214
00:11:40,040 --> 00:11:42,260
if we use and probably there are there

215
00:11:42,260 --> 00:11:44,390
might be many other statements which are

216
00:11:44,390 --> 00:11:46,190
duplicated so when we use duplicated

217
00:11:46,190 --> 00:11:50,270
statements to introduce cells to do or

218
00:11:50,270 --> 00:11:54,350
fix me you might almost every developer

219
00:11:54,350 --> 00:11:57,710
in the world has at least one or two -

220
00:11:57,710 --> 00:12:00,200
duze in his code so which which

221
00:12:00,200 --> 00:12:02,180
signifies that you want to do something

222
00:12:02,180 --> 00:12:05,570
but you are waiting for some golden time

223
00:12:05,570 --> 00:12:09,230
so that's that's indicate that that

224
00:12:09,230 --> 00:12:11,720
that's the incomplete tasks and we

225
00:12:11,720 --> 00:12:14,420
consider it as a smell if you have a

226
00:12:14,420 --> 00:12:16,160
long statement it's difficult to read

227
00:12:16,160 --> 00:12:19,070
difficult to understand and if you have

228
00:12:19,070 --> 00:12:21,830
more than a certain number of number of

229
00:12:21,830 --> 00:12:23,900
operators in our same expression then we

230
00:12:23,900 --> 00:12:28,790
also consider it's a smell well you use

231
00:12:28,790 --> 00:12:32,330
case statement but you forget to write

232
00:12:32,330 --> 00:12:37,850
default then it's well that's okay it's

233
00:12:37,850 --> 00:12:42,520
the admission that okay I am doing that

234
00:12:44,170 --> 00:12:47,120
duplicate entity you have a same

235
00:12:47,120 --> 00:12:50,920
attribute to specify multiple time

236
00:12:51,310 --> 00:12:53,960
missing conditional when you have a

237
00:12:53,960 --> 00:12:58,370
elsif but you don't have leading else so

238
00:12:58,370 --> 00:13:01,400
if you don't have leading else which

239
00:13:01,400 --> 00:13:03,380
means that probably you should make this

240
00:13:03,380 --> 00:13:06,910
else if as a else

241
00:13:07,540 --> 00:13:11,089
there are certain conventions when it

242
00:13:11,089 --> 00:13:13,970
comes to usage of codes and especially

243
00:13:13,970 --> 00:13:16,070
in puppet so when to use single quote

244
00:13:16,070 --> 00:13:18,260
and when to use double quotes and when

245
00:13:18,260 --> 00:13:20,839
you violate that those those best

246
00:13:20,839 --> 00:13:23,360
practices then you introduce improper

247
00:13:23,360 --> 00:13:28,130
quote uses smell same applies with the

248
00:13:28,130 --> 00:13:30,980
usage of vailable so you need to guard

249
00:13:30,980 --> 00:13:33,200
the variable if you are using them and

250
00:13:33,200 --> 00:13:36,850
of course so that's another smell and

251
00:13:36,850 --> 00:13:38,870
alignment although it may look very

252
00:13:38,870 --> 00:13:42,770
trivial but alignment is also makes it

253
00:13:42,770 --> 00:13:45,230
little bit difficult to read if you have

254
00:13:45,230 --> 00:13:49,100
don't if you don't don't align the lines

255
00:13:49,100 --> 00:13:53,630
in your code and invalid property value

256
00:13:53,630 --> 00:13:58,790
so you suppose to specify the property

257
00:13:58,790 --> 00:14:01,850
value using full digital number rather

258
00:14:01,850 --> 00:14:05,330
than three-digit as it was it is done

259
00:14:05,330 --> 00:14:10,160
here and misplaced attribute so the

260
00:14:10,160 --> 00:14:13,160
required attribute must come first an

261
00:14:13,160 --> 00:14:15,200
optional attribute attributes should

262
00:14:15,200 --> 00:14:19,310
come later so if that gets violated then

263
00:14:19,310 --> 00:14:23,839
you reduce that smell similarly let's

264
00:14:23,839 --> 00:14:26,480
take some more examples for design

265
00:14:26,480 --> 00:14:29,360
contributions smells and as I said that

266
00:14:29,360 --> 00:14:31,160
design configuration smell deals with

267
00:14:31,160 --> 00:14:33,589
module design and the structure of the

268
00:14:33,589 --> 00:14:38,120
project or the repository and what I'm

269
00:14:38,120 --> 00:14:40,540
going to do is I'm going to show some

270
00:14:40,540 --> 00:14:43,190
code something like this and I'll ask

271
00:14:43,190 --> 00:14:46,010
you you please feel free to say what you

272
00:14:46,010 --> 00:14:50,029
think about this piece of code so okay

273
00:14:50,029 --> 00:14:53,240
there is a file and puppet file and then

274
00:14:53,240 --> 00:14:55,160
you see something like this you have

275
00:14:55,160 --> 00:14:57,410
class declaration again class class

276
00:14:57,410 --> 00:15:01,670
class or take a look this is the another

277
00:15:01,670 --> 00:15:05,630
snippet you have a class and you have

278
00:15:05,630 --> 00:15:08,810
certain resources described so you have

279
00:15:08,810 --> 00:15:11,660
some one package service service package

280
00:15:11,660 --> 00:15:15,740
file user what you see what what what

281
00:15:15,740 --> 00:15:19,029
could be a problem here

282
00:15:22,540 --> 00:15:28,310
mm-hmm yeah they I mean these these two

283
00:15:28,310 --> 00:15:30,260
things are related with departure but

284
00:15:30,260 --> 00:15:33,140
okay this is MySQL as we can see this is

285
00:15:33,140 --> 00:15:36,710
PHP and many other things so they don't

286
00:15:36,710 --> 00:15:40,070
go with each other they are not cohesive

287
00:15:40,070 --> 00:15:43,640
with each other and when they say when

288
00:15:43,640 --> 00:15:47,510
and people who are who code in

289
00:15:47,510 --> 00:15:50,180
traditional soft engineering languages

290
00:15:50,180 --> 00:15:52,700
we know that that's a that's called

291
00:15:52,700 --> 00:15:55,070
single responsibility principle what if

292
00:15:55,070 --> 00:15:57,260
we write a method or a class that's

293
00:15:57,260 --> 00:15:59,270
supposed to follow single responsibility

294
00:15:59,270 --> 00:16:01,730
principle and when that gets forwarded

295
00:16:01,730 --> 00:16:04,900
we introduce multifaceted abstraction

296
00:16:04,900 --> 00:16:07,990
and by the way this character is from

297
00:16:07,990 --> 00:16:10,880
Indian epic called called a la mañana

298
00:16:10,880 --> 00:16:13,550
and this the name of the character is

299
00:16:13,550 --> 00:16:17,630
Rahman who has ten heads and which is

300
00:16:17,630 --> 00:16:21,560
which I have put it to show that it's a

301
00:16:21,560 --> 00:16:25,990
multifaceted it's doing too many things

302
00:16:25,990 --> 00:16:31,550
okay so let's let's let's take a next

303
00:16:31,550 --> 00:16:38,109
example what's the problem

304
00:16:40,390 --> 00:16:44,680
there is nothing right why somebody has

305
00:16:44,680 --> 00:16:48,690
written a class and put nothing in that

306
00:16:48,690 --> 00:16:53,260
you might find it a very you know female

307
00:16:53,260 --> 00:16:56,050
are very weird that why somebody will

308
00:16:56,050 --> 00:16:58,630
create a class and not write anything

309
00:16:58,630 --> 00:17:02,740
inside that and I was also like I was

310
00:17:02,740 --> 00:17:05,500
also shocked when I said this could I

311
00:17:05,500 --> 00:17:07,930
mean who will do that but we actually

312
00:17:07,930 --> 00:17:10,780
analyzed more than 4600 pocket

313
00:17:10,780 --> 00:17:13,589
repositories from github and we found

314
00:17:13,589 --> 00:17:19,450
more than 4,300 such instances so almost

315
00:17:19,450 --> 00:17:21,880
one instance per repository on an

316
00:17:21,880 --> 00:17:25,180
average on an average so it's there are

317
00:17:25,180 --> 00:17:28,569
many people who is doing this and I mean

318
00:17:28,569 --> 00:17:30,780
as you can guess it's unnecessary

319
00:17:30,780 --> 00:17:34,840
whenever we specify class or define we

320
00:17:34,840 --> 00:17:37,150
supposed to you write something in this

321
00:17:37,150 --> 00:17:39,340
obviously it's very trivial to to

322
00:17:39,340 --> 00:17:41,770
observe this that write something

323
00:17:41,770 --> 00:17:44,140
otherwise maybe remove this there is no

324
00:17:44,140 --> 00:17:49,950
purpose for that this is interesting

325
00:17:49,950 --> 00:17:53,700
what you observe here

326
00:17:56,970 --> 00:18:03,519
yes yes but is there any problem

327
00:18:03,519 --> 00:18:07,739
so what execs are allowed in puppet

328
00:18:08,700 --> 00:18:09,970
excellent

329
00:18:09,970 --> 00:18:11,950
that's the declarative puppet by

330
00:18:11,950 --> 00:18:14,919
definition by natively it's a

331
00:18:14,919 --> 00:18:16,809
declarative language what it means is

332
00:18:16,809 --> 00:18:19,749
that you suppose to specify what you

333
00:18:19,749 --> 00:18:24,669
want what you want it's not it's not as

334
00:18:24,669 --> 00:18:27,309
you're not supposed to say that exactly

335
00:18:27,309 --> 00:18:30,159
what you want to achieve how you want to

336
00:18:30,159 --> 00:18:32,979
achieve that that's not your job you

337
00:18:32,979 --> 00:18:35,080
just need to specify to puppet that what

338
00:18:35,080 --> 00:18:38,129
precisely you want to achieve and

339
00:18:38,129 --> 00:18:40,989
obviously you can write some exit

340
00:18:40,989 --> 00:18:43,690
statements it's sometime it's required

341
00:18:43,690 --> 00:18:45,849
actually to write exact statements but

342
00:18:45,849 --> 00:18:47,919
if your whole repository is containing

343
00:18:47,919 --> 00:18:50,919
only exact statements then probably you

344
00:18:50,919 --> 00:18:54,129
are auditing the semantics of the puppet

345
00:18:54,129 --> 00:18:58,929
and that's what we call imperative

346
00:18:58,929 --> 00:19:02,440
abstraction smell when it is statements

347
00:19:02,440 --> 00:19:04,749
on the and the code is more imperative

348
00:19:04,749 --> 00:19:10,539
rather than declarative what do you

349
00:19:10,539 --> 00:19:13,109
think about this

350
00:19:15,309 --> 00:19:19,820
yeah no class we have resources defined

351
00:19:19,820 --> 00:19:22,820
but they are loosely defined in a and

352
00:19:22,820 --> 00:19:26,420
hanging in the in the module why not

353
00:19:26,420 --> 00:19:28,610
when when the language supports

354
00:19:28,610 --> 00:19:30,950
abstraction I mean in form of class and

355
00:19:30,950 --> 00:19:34,070
define why not use them and use and

356
00:19:34,070 --> 00:19:37,490
encapsulate them in a unit so that if it

357
00:19:37,490 --> 00:19:39,559
required we can use them or where for

358
00:19:39,559 --> 00:19:42,530
them whatever it's whatever you need it

359
00:19:42,530 --> 00:19:46,120
so that's called missing abstraction

360
00:19:46,120 --> 00:19:50,990
smell configuration smell this must be

361
00:19:50,990 --> 00:19:58,850
very simple anybody yeah they are saying

362
00:19:58,850 --> 00:20:02,990
they are clone they are duplicate so it

363
00:20:02,990 --> 00:20:05,299
happens in even in configuration code we

364
00:20:05,299 --> 00:20:07,190
have seen in a normal production code

365
00:20:07,190 --> 00:20:10,910
but it also happens and configuration

366
00:20:10,910 --> 00:20:14,030
code and it's it's it's when when you

367
00:20:14,030 --> 00:20:16,940
have a certain piece of a number of

368
00:20:16,940 --> 00:20:19,130
statements duplicated across the

369
00:20:19,130 --> 00:20:21,679
repository then it's possibly you are

370
00:20:21,679 --> 00:20:24,350
missing an abstraction maybe you need to

371
00:20:24,350 --> 00:20:27,140
accept that those duplicated statements

372
00:20:27,140 --> 00:20:29,240
create an abstraction and use reuse

373
00:20:29,240 --> 00:20:34,640
whenever you want I know you can't read

374
00:20:34,640 --> 00:20:38,210
it but that's you're not supposed to

375
00:20:38,210 --> 00:20:41,540
read it because this is what happens you

376
00:20:41,540 --> 00:20:44,240
open a file and you say ok first

377
00:20:44,240 --> 00:20:46,760
resource second resource third resource

378
00:20:46,760 --> 00:20:49,820
and then you go go on and go on and you

379
00:20:49,820 --> 00:20:54,460
see the scrollbar and it's very tiny in

380
00:20:54,460 --> 00:20:58,940
your text editor and that's actually

381
00:20:58,940 --> 00:21:01,940
after after following a few resources

382
00:21:01,940 --> 00:21:06,070
you forget what was on the top and

383
00:21:06,070 --> 00:21:09,710
that's because in general we say in

384
00:21:09,710 --> 00:21:12,950
human cognition that a normal human mind

385
00:21:12,950 --> 00:21:15,820
can remember only seven plus minus two

386
00:21:15,820 --> 00:21:20,510
things at a time so if you increase I

387
00:21:20,510 --> 00:21:23,300
mean if you have say 100 resources

388
00:21:23,300 --> 00:21:25,490
defined in a single file then it's

389
00:21:25,490 --> 00:21:26,730
impossible for

390
00:21:26,730 --> 00:21:28,200
buddy to remember what was there and

391
00:21:28,200 --> 00:21:30,210
where was there and if you need to

392
00:21:30,210 --> 00:21:33,200
change something than where to change

393
00:21:33,200 --> 00:21:35,760
and that we call insufficient

394
00:21:35,760 --> 00:21:39,330
modernization and that happens when you

395
00:21:39,330 --> 00:21:42,809
have when the abstraction is large or

396
00:21:42,809 --> 00:21:45,030
complex and first we can actually

397
00:21:45,030 --> 00:21:47,130
decompose they're up stretch and make it

398
00:21:47,130 --> 00:21:53,730
smaller this is related to the structure

399
00:21:53,730 --> 00:21:57,299
of the repository so when you have one

400
00:21:57,299 --> 00:22:03,360
module design or the repository design

401
00:22:03,360 --> 00:22:06,000
in a sum one way and another module in

402
00:22:06,000 --> 00:22:07,980
another way the structure is different

403
00:22:07,980 --> 00:22:11,130
in the same repository or in your

404
00:22:11,130 --> 00:22:12,480
project that if there are multiple

405
00:22:12,480 --> 00:22:16,320
repositories one repository is following

406
00:22:16,320 --> 00:22:17,970
one kind of a structure and another

407
00:22:17,970 --> 00:22:19,950
repository is containing another

408
00:22:19,950 --> 00:22:22,140
following another structure then it's

409
00:22:22,140 --> 00:22:23,250
very difficult

410
00:22:23,250 --> 00:22:25,770
and if you don't many times people don't

411
00:22:25,770 --> 00:22:29,250
have defined structure they just keep

412
00:22:29,250 --> 00:22:33,120
putting the module definitions or or the

413
00:22:33,120 --> 00:22:35,100
file relevant file in just dumping in a

414
00:22:35,100 --> 00:22:38,549
single folder if you have something like

415
00:22:38,549 --> 00:22:42,690
that it's a it's it's basically

416
00:22:42,690 --> 00:22:45,150
unstructured module so you need to have

417
00:22:45,150 --> 00:22:48,600
one single consistent structure for the

418
00:22:48,600 --> 00:22:50,580
repository and then you follow it across

419
00:22:50,580 --> 00:22:53,730
all your projects so for example if you

420
00:22:53,730 --> 00:22:55,860
have modules and then you have a

421
00:22:55,860 --> 00:22:58,380
separate folder for each module and you

422
00:22:58,380 --> 00:23:00,600
have such a certain structure something

423
00:23:00,600 --> 00:23:04,020
like this then and and you follow the

424
00:23:04,020 --> 00:23:05,669
similar structure and rest of the

425
00:23:05,669 --> 00:23:08,130
modules then it's okay but if you don't

426
00:23:08,130 --> 00:23:10,470
follow that then you are introduced

427
00:23:10,470 --> 00:23:16,440
introducing this map what is this and

428
00:23:16,440 --> 00:23:19,980
who what tells me this is the dependency

429
00:23:19,980 --> 00:23:22,559
graph and who has tells me that which

430
00:23:22,559 --> 00:23:26,640
software I'm talking about I will give

431
00:23:26,640 --> 00:23:34,010
you a book first one no no

432
00:23:35,110 --> 00:23:46,940
who's that judgment okay this is the

433
00:23:46,940 --> 00:23:51,620
dependency structure of j-unit and you

434
00:23:51,620 --> 00:23:53,480
can see this that you can't make sense

435
00:23:53,480 --> 00:23:55,970
of I mean at least immediately you can't

436
00:23:55,970 --> 00:23:57,650
make sense of what's happening and who

437
00:23:57,650 --> 00:24:00,500
is depending on what you need any a

438
00:24:00,500 --> 00:24:03,049
normal person need require some time to

439
00:24:03,049 --> 00:24:05,440
understand what's happening here and

440
00:24:05,440 --> 00:24:08,360
probably in our projects also if you go

441
00:24:08,360 --> 00:24:10,130
and generate something like this some

442
00:24:10,130 --> 00:24:12,200
some diagram something like this then

443
00:24:12,200 --> 00:24:14,059
you will find something close to that

444
00:24:14,059 --> 00:24:18,200
I'm sure about that and when something

445
00:24:18,200 --> 00:24:20,210
like this very dense happened we say

446
00:24:20,210 --> 00:24:24,140
it's a dense structural smell and I mean

447
00:24:24,140 --> 00:24:27,260
it's basically the the depository has

448
00:24:27,260 --> 00:24:29,419
excessive and dense dependencies to

449
00:24:29,419 --> 00:24:35,750
different modules it's there are two

450
00:24:35,750 --> 00:24:38,299
scenarios here in the left hand side we

451
00:24:38,299 --> 00:24:40,669
have some resources referring to each

452
00:24:40,669 --> 00:24:43,429
other and there are many references to

453
00:24:43,429 --> 00:24:45,679
other modules in the right hand side

454
00:24:45,679 --> 00:24:48,320
there are more references inside a

455
00:24:48,320 --> 00:24:51,490
module and lesser outside the module and

456
00:24:51,490 --> 00:24:54,290
in traditional software engineering we

457
00:24:54,290 --> 00:24:56,990
call it these concepts as cohesion and

458
00:24:56,990 --> 00:25:01,250
coupling so when a unit has a resources

459
00:25:01,250 --> 00:25:04,190
which is tightly related to each other

460
00:25:04,190 --> 00:25:06,620
we say it's showing high cohesion and

461
00:25:06,620 --> 00:25:10,100
when the same module is showing it's

462
00:25:10,100 --> 00:25:13,520
depending on a lot of other modules then

463
00:25:13,520 --> 00:25:16,280
we say it's it's showing high coupling

464
00:25:16,280 --> 00:25:19,940
and this is what we capture in this

465
00:25:19,940 --> 00:25:22,450
smell we say it's a weakened modularity

466
00:25:22,450 --> 00:25:26,240
when it is computed like it's a ratio

467
00:25:26,240 --> 00:25:29,540
between cohesion and coupling and it

468
00:25:29,540 --> 00:25:31,850
happens when when when I module is

469
00:25:31,850 --> 00:25:34,340
exhibiting high coupling and low

470
00:25:34,340 --> 00:25:36,610
cohesion

471
00:25:38,850 --> 00:25:46,539
okay so at this point let's take a step

472
00:25:46,539 --> 00:25:51,779
back and think about it Wiseman's are

473
00:25:51,779 --> 00:25:55,899
important I mean you may think that some

474
00:25:55,899 --> 00:25:57,549
of this mess at least some of the smells

475
00:25:57,549 --> 00:26:01,059
that we seem they are very trivial think

476
00:26:01,059 --> 00:26:04,120
for example alignment it's very trivial

477
00:26:04,120 --> 00:26:07,750
and you probably ignore it but think

478
00:26:07,750 --> 00:26:11,140
about it why it is important to consider

479
00:26:11,140 --> 00:26:17,350
the impact of a Smith have you heard of

480
00:26:17,350 --> 00:26:21,090
a story of a camel whose back was broken

481
00:26:21,090 --> 00:26:27,600
by the straw yes

482
00:26:40,320 --> 00:26:43,320
sorry

483
00:26:44,070 --> 00:26:46,420
so they destroy if you look at the

484
00:26:46,420 --> 00:26:49,240
individual strong it's very light

485
00:26:49,240 --> 00:26:52,510
you can't imagine anybody can't imagine

486
00:26:52,510 --> 00:26:56,830
that a stroke and break a break the back

487
00:26:56,830 --> 00:27:00,370
of the tunnel but obviously there are

488
00:27:00,370 --> 00:27:03,400
many many things and the stores are many

489
00:27:03,400 --> 00:27:05,980
there are many straws that are there

490
00:27:05,980 --> 00:27:10,180
that make it possible to put a one more

491
00:27:10,180 --> 00:27:14,380
straw and the camel's back is broke the

492
00:27:14,380 --> 00:27:17,530
same analogy applies to smells if you

493
00:27:17,530 --> 00:27:19,060
look at individual smells

494
00:27:19,060 --> 00:27:21,580
they are very trivial many times you

495
00:27:21,580 --> 00:27:24,400
think okay this is not really it should

496
00:27:24,400 --> 00:27:26,920
be carrying about but the cumulative

497
00:27:26,920 --> 00:27:30,400
effect of the all the smells in your

498
00:27:30,400 --> 00:27:35,200
system might be something like this so

499
00:27:35,200 --> 00:27:39,190
that's it that's why considering smells

500
00:27:39,190 --> 00:27:41,770
detecting them and and avoiding them

501
00:27:41,770 --> 00:27:45,690
it's in my opinion it's very important

502
00:27:45,690 --> 00:27:49,240
ok so we have learned about a few smells

503
00:27:49,240 --> 00:27:52,480
that may occur in configuration coal how

504
00:27:52,480 --> 00:27:54,940
we can detect them there are at least

505
00:27:54,940 --> 00:27:58,630
two tools first one is puppet lint it's

506
00:27:58,630 --> 00:28:04,570
not our tool but we have used it and you

507
00:28:04,570 --> 00:28:06,700
can detect many implementation confusion

508
00:28:06,700 --> 00:28:11,590
smells using this tool the second tool

509
00:28:11,590 --> 00:28:15,970
is puppeteer which I wrote majorly with

510
00:28:15,970 --> 00:28:18,280
my one of my more colleague in

511
00:28:18,280 --> 00:28:21,340
university and it's an open source tool

512
00:28:21,340 --> 00:28:25,660
you can download from here you can clone

513
00:28:25,660 --> 00:28:28,540
it you can fork it whatever way you want

514
00:28:28,540 --> 00:28:33,100
to use it please feel free and this is

515
00:28:33,100 --> 00:28:36,310
the tool that that can detect all the

516
00:28:36,310 --> 00:28:39,220
smells that I described you can detect

517
00:28:39,220 --> 00:28:43,860
all of those smells in puppet code so

518
00:28:43,860 --> 00:28:49,000
feel free to use them we also carried

519
00:28:49,000 --> 00:28:51,880
out a study since we are at by default

520
00:28:51,880 --> 00:28:54,280
researchers so we carried out a research

521
00:28:54,280 --> 00:28:56,380
on puppet code and the quality of puppet

522
00:28:56,380 --> 00:28:59,980
code and we analyzed more than 4600

523
00:28:59,980 --> 00:29:03,460
repositories more approximately 9

524
00:29:03,460 --> 00:29:05,620
million lines of puppet code and we

525
00:29:05,620 --> 00:29:07,930
found many interesting patterns there so

526
00:29:07,930 --> 00:29:10,600
if you are interested in that study this

527
00:29:10,600 --> 00:29:13,630
is the link you can download the paper

528
00:29:13,630 --> 00:29:16,930
and you can go into the details or you

529
00:29:16,930 --> 00:29:19,690
can write to me or you can call me and

530
00:29:19,690 --> 00:29:24,970
we can have a discussion so let's

531
00:29:24,970 --> 00:29:30,880
summarize what we what should I put it

532
00:29:30,880 --> 00:29:32,340
here

533
00:29:32,340 --> 00:29:36,060
please be louder they yes

534
00:29:36,060 --> 00:29:45,120
hear us and here

535
00:29:46,570 --> 00:29:49,780
puppeteer yes and what you get is

536
00:29:49,780 --> 00:29:53,570
maintainability okay that's it

537
00:29:53,570 --> 00:29:56,720
folks if you want me if you want to told

538
00:29:56,720 --> 00:29:59,600
me this is my Twitter account if you

539
00:29:59,600 --> 00:30:01,520
want me if you want to troll me

540
00:30:01,520 --> 00:30:04,309
privately this is my email address if

541
00:30:04,309 --> 00:30:06,710
you want to physically told me you can

542
00:30:06,710 --> 00:30:08,910
come here and you can talk to me

543
00:30:08,910 --> 00:30:20,309
[Applause]

