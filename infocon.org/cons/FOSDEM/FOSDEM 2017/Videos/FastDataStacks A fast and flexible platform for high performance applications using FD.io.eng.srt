1
00:00:04,569 --> 00:00:12,129
our next speaker is Tomas who is going

2
00:00:12,129 --> 00:00:13,719
to be talking about fast data stocks

3
00:00:13,719 --> 00:00:18,400
which is an OPM NV projects related to

4
00:00:18,400 --> 00:00:37,329
the integration of VPP I contribute to

5
00:00:37,329 --> 00:00:40,300
this project which is based on

6
00:00:40,300 --> 00:00:47,490
subtracted by a tracking or function

7
00:00:47,490 --> 00:00:50,630
[Music]

8
00:00:54,269 --> 00:00:57,069
first data stick is a platform that

9
00:00:57,069 --> 00:01:00,690
allows you to use very complex solution

10
00:01:00,690 --> 00:01:03,069
where you can just define your business

11
00:01:03,069 --> 00:01:05,080
logic that you have or that you want to

12
00:01:05,080 --> 00:01:08,380
implement in your network even the fact

13
00:01:08,380 --> 00:01:09,850
that you don't have to really care about

14
00:01:09,850 --> 00:01:14,650
how the devices are configured to define

15
00:01:14,650 --> 00:01:18,990
is some kind of topology or policy or

16
00:01:18,990 --> 00:01:21,640
some kind of rules you can speak with

17
00:01:21,640 --> 00:01:24,400
you and and you don't don't need to care

18
00:01:24,400 --> 00:01:26,290
how its how that is done in the

19
00:01:26,290 --> 00:01:30,850
underlying network so OPV is a pretty

20
00:01:30,850 --> 00:01:35,110
complex suit it's designed in a way that

21
00:01:35,110 --> 00:01:37,990
you can just install it and you don't

22
00:01:37,990 --> 00:01:40,020
need to go through the all the

23
00:01:40,020 --> 00:01:43,030
complicated in stowing of multiple

24
00:01:43,030 --> 00:01:45,770
components that is used there

25
00:01:45,770 --> 00:01:49,369
and once you have it then you can just

26
00:01:49,369 --> 00:01:51,560
you can just use it out of the box let's

27
00:01:51,560 --> 00:01:54,740
say so in this picture there's a very

28
00:01:54,740 --> 00:02:08,080
brief description of the network control

29
00:02:08,080 --> 00:02:11,840
controller forward those routers and

30
00:02:11,840 --> 00:02:14,900
switches and we're trying to manage them

31
00:02:14,900 --> 00:02:17,150
and configure them by some kind of

32
00:02:17,150 --> 00:02:20,209
automation that we use that we implement

33
00:02:20,209 --> 00:02:24,890
in components or now then there's

34
00:02:24,890 --> 00:02:28,010
virtual machine layer when we actually

35
00:02:28,010 --> 00:02:31,190
speed up our VMs in our sheets so we

36
00:02:31,190 --> 00:02:33,230
just need to tell I want to be on that

37
00:02:33,230 --> 00:02:36,560
note and then all the suits all these

38
00:02:36,560 --> 00:02:39,140
suits should give you the mountain you

39
00:02:39,140 --> 00:02:42,040
can use it right away and they're also

40
00:02:42,040 --> 00:02:45,920
services one layer above that takes care

41
00:02:45,920 --> 00:02:49,209
of let's say about managing your

42
00:02:49,209 --> 00:02:53,090
managing your notes and running some

43
00:02:53,090 --> 00:02:55,280
services that are related to it so as a

44
00:02:55,280 --> 00:02:57,799
metadata service that can inject some

45
00:02:57,799 --> 00:02:59,510
configuration to your notes and other

46
00:02:59,510 --> 00:03:02,108
services

47
00:03:02,400 --> 00:03:07,260
okay so those are open daylight it's

48
00:03:07,260 --> 00:03:09,989
being discussed before so we use that

49
00:03:09,989 --> 00:03:14,489
for configuring values underlying

50
00:03:14,489 --> 00:03:19,069
network types we currently work on VPP

51
00:03:19,069 --> 00:03:24,959
we also done some work on OBS and also

52
00:03:24,959 --> 00:03:27,810
physical devices can be also

53
00:03:27,810 --> 00:03:32,790
incorporated in our suit so into when

54
00:03:32,790 --> 00:03:37,379
speaking about GBP GBP is plug-in in

55
00:03:37,379 --> 00:03:40,670
open daylight and it's all its own it's

56
00:03:40,670 --> 00:03:43,019
it's a plugin that allows you to

57
00:03:43,019 --> 00:03:45,900
transform a policy into a network

58
00:03:45,900 --> 00:03:48,629
configuration of devices so you take

59
00:03:48,629 --> 00:03:52,430
your logic business logic use cases and

60
00:03:52,430 --> 00:03:58,819
GPB will transform it in a config so

61
00:04:05,330 --> 00:04:14,820
[Music]

62
00:04:15,620 --> 00:04:21,149
obvious obviously pre-k which also in

63
00:04:21,149 --> 00:04:26,099
some suits as a use case and in our use

64
00:04:26,099 --> 00:04:31,229
case we add VPP so our scenario is

65
00:04:31,229 --> 00:04:35,910
mostly OpenStack for controlling VMS and

66
00:04:35,910 --> 00:04:37,460
for

67
00:04:37,460 --> 00:04:40,910
an obstruction wire on the top then in

68
00:04:40,910 --> 00:04:41,240
those

69
00:04:41,240 --> 00:04:44,259
opendaylight where we use the GBP for

70
00:04:44,259 --> 00:04:46,729
receiving those requests from OpenStack

71
00:04:46,729 --> 00:04:49,550
and transforming them to enjoying

72
00:04:49,550 --> 00:04:55,310
Network and also hypervisors for hosting

73
00:04:55,310 --> 00:05:10,419
the VMS trying to involve technology

74
00:05:14,199 --> 00:05:18,830
currently progress the first one which

75
00:05:18,830 --> 00:05:22,940
you see with Apex OpenStack open their

76
00:05:22,940 --> 00:05:26,930
IFL to kv and VPP that's already what's

77
00:05:26,930 --> 00:05:32,419
working in our cio then there is all

78
00:05:32,419 --> 00:05:34,759
three which is in progress so we kind of

79
00:05:34,759 --> 00:05:37,669
kind of route traffic between the nodes

80
00:05:37,669 --> 00:05:41,060
without touching the kernel space but

81
00:05:41,060 --> 00:05:47,630
just keeping the user space by using the

82
00:05:47,630 --> 00:05:50,449
PDK and there is also another scenario

83
00:05:50,449 --> 00:05:53,780
which is in progress and that's that

84
00:05:53,780 --> 00:05:58,659
opens that directly talks to VPP

85
00:06:17,430 --> 00:06:50,710
because it into Venus and so that's

86
00:06:50,710 --> 00:06:56,830
where the data are stored and project

87
00:06:56,830 --> 00:06:59,740
which responds to this data model and

88
00:06:59,740 --> 00:07:02,470
any and react so no changes in config

89
00:07:02,470 --> 00:07:05,440
data star transforms by using rental

90
00:07:05,440 --> 00:07:08,770
manager be people and all this policy

91
00:07:08,770 --> 00:07:14,259
into a configuration on FDI oh and vio

92
00:07:14,259 --> 00:07:18,639
is actually it's a collection of

93
00:07:18,639 --> 00:07:22,599
projects that includes DP d kb p p and

94
00:07:22,599 --> 00:07:25,599
also honeycomb honeycomb piece like

95
00:07:25,599 --> 00:07:26,409
right right right

96
00:07:26,409 --> 00:07:31,030
ODL that has it's capable of network

97
00:07:31,030 --> 00:07:34,469
Netcom communication between audio and

98
00:07:34,469 --> 00:07:39,460
and honeycomb so so as you can see we

99
00:07:39,460 --> 00:07:40,159
use

100
00:07:40,159 --> 00:07:47,989
and because VPP doesn't have any any API

101
00:07:47,989 --> 00:07:51,229
that could be that could be directly

102
00:07:51,229 --> 00:07:55,099
used by OBL honeycomb actually

103
00:07:55,099 --> 00:07:57,459
transforms this network network network

104
00:07:57,459 --> 00:08:02,479
requests into and then uses a CHC api

105
00:08:02,479 --> 00:08:06,559
that is available on VPP and so it's not

106
00:08:06,559 --> 00:08:11,479
that we directly configure VPP with odl

107
00:08:11,479 --> 00:08:15,259
but we also use honeycomb for that so

108
00:08:15,259 --> 00:08:19,159
given the fact honey comb has to be on

109
00:08:19,159 --> 00:08:24,979
every node together with VPP and there

110
00:08:24,979 --> 00:08:30,439
is also system installer apex and the

111
00:08:30,439 --> 00:08:33,649
subsystem tests that are involved in our

112
00:08:33,649 --> 00:08:39,289
B&B so FX is actually the project that

113
00:08:39,289 --> 00:08:43,039
it's a program that installs all of this

114
00:08:43,039 --> 00:08:48,910
for you automatically and back test

115
00:08:49,029 --> 00:08:51,259
sure that everything's working as it

116
00:08:51,259 --> 00:08:53,290
should

117
00:08:54,190 --> 00:09:01,820
so here's detail let's say when a board

118
00:09:01,820 --> 00:09:04,730
is created how it goes down to the VPP

119
00:09:04,730 --> 00:09:07,450
from very top of each one in OpenStack

120
00:09:07,450 --> 00:09:10,550
so let's say we played a part with some

121
00:09:10,550 --> 00:09:13,970
biting details those data are written

122
00:09:13,970 --> 00:09:17,150
into Neutron or bound in audio then they

123
00:09:17,150 --> 00:09:21,710
are mapped to EBP policy because GBP is

124
00:09:21,710 --> 00:09:23,420
a standard on the application you can

125
00:09:23,420 --> 00:09:25,700
define any policy also in there and it

126
00:09:25,700 --> 00:09:29,510
doesn't doesn't need OpenStack it can

127
00:09:29,510 --> 00:09:35,320
work on its own so the fact is that

128
00:09:35,320 --> 00:09:38,690
abstraction that comes from the

129
00:09:38,690 --> 00:09:40,580
OpenStack needs to be transformed into

130
00:09:40,580 --> 00:09:44,180
one that is in GPP plug-in in open

131
00:09:44,180 --> 00:09:51,820
daylight and then distributed rendering

132
00:09:51,820 --> 00:09:54,440
configuration on different different

133
00:09:54,440 --> 00:09:58,840
type of notes so if there is a VP

134
00:09:59,110 --> 00:10:05,330
manager we create a configuration for VP

135
00:10:05,330 --> 00:10:13,880
vendor by using G manager directly

136
00:10:13,880 --> 00:10:15,710
sending request or an account can

137
00:10:15,710 --> 00:10:18,470
configure interfaces and which the mains

138
00:10:18,470 --> 00:10:24,890
on on VP the topology manager component

139
00:10:24,890 --> 00:10:28,550
is not a part of GBP its standalone

140
00:10:28,550 --> 00:10:32,180
plug-in and it helps you create a full

141
00:10:32,180 --> 00:10:34,910
mesh topology based on what do you

142
00:10:34,910 --> 00:10:38,580
create bridge domain so if you have

143
00:10:38,580 --> 00:10:40,860
which domains with the same ID on a

144
00:10:40,860 --> 00:10:42,810
different notes than the VPD project

145
00:10:42,810 --> 00:10:45,600
will create and configure vx1 tunnels

146
00:10:45,600 --> 00:10:49,740
between them in a full measure so we

147
00:10:49,740 --> 00:10:55,769
don't really need it helps you and it

148
00:10:55,769 --> 00:10:58,860
configures interfaces on a VPP itself so

149
00:10:58,860 --> 00:11:01,470
this is how it currently how it's

150
00:11:01,470 --> 00:11:08,670
currently done okay here's workflow

151
00:11:08,670 --> 00:11:13,740
let's say OpenStack notes that some of

152
00:11:13,740 --> 00:11:16,920
its some of the notes on one of the

153
00:11:16,920 --> 00:11:21,329
nodes is VPP OpenStack doesn't have the

154
00:11:21,329 --> 00:11:23,820
knowledge about where it's VPP not

155
00:11:23,820 --> 00:11:26,519
already obvious not unless we tell it

156
00:11:26,519 --> 00:11:31,890
directly or unless ODL does it there are

157
00:11:31,890 --> 00:11:36,029
features for a big query scanning into a

158
00:11:36,029 --> 00:11:39,300
DL datastore and looking for a

159
00:11:39,300 --> 00:11:42,930
configuration for a given node so it's a

160
00:11:42,930 --> 00:11:47,579
job for audio to write a date or a

161
00:11:47,579 --> 00:11:50,520
plastic into it out into its datastore

162
00:11:50,520 --> 00:11:54,270
correctly so that OpenStack can read

163
00:11:54,270 --> 00:11:57,029
those data and save the proper

164
00:11:57,029 --> 00:11:59,640
configuration for given node into its

165
00:11:59,640 --> 00:12:01,430
database

166
00:12:01,430 --> 00:12:04,950
it's called agent database it's in

167
00:12:04,950 --> 00:12:07,709
Neutron project so whatever there is a

168
00:12:07,709 --> 00:12:11,820
config that by networking audio those

169
00:12:11,820 --> 00:12:14,610
that are parsed and they're set in this

170
00:12:14,610 --> 00:12:17,779
agent database and then later when you

171
00:12:17,779 --> 00:12:20,720
create a nova instance or deploy a VM on

172
00:12:20,720 --> 00:12:25,279
a given node then you before nova

173
00:12:25,279 --> 00:12:27,439
actually creates it it looks into this

174
00:12:27,439 --> 00:12:31,339
database looks for the configuration for

175
00:12:31,339 --> 00:12:33,589
a given node if it finds that

176
00:12:33,589 --> 00:12:37,449
configuration it uses that config and

177
00:12:37,449 --> 00:12:42,199
and then we create the videos user

178
00:12:42,199 --> 00:12:46,540
interface right there on the corner so

179
00:12:46,540 --> 00:12:48,949
so now we'll create the videos user

180
00:12:48,949 --> 00:12:53,870
interface in a server mode and on the

181
00:12:53,870 --> 00:12:56,199
other way

182
00:12:56,199 --> 00:12:59,870
ODL will receive a notification the port

183
00:12:59,870 --> 00:13:18,939
should be created and interface so when

184
00:13:18,939 --> 00:13:24,339
when the VPP detects the socket and

185
00:13:24,339 --> 00:13:27,649
opens it then the VM is successfully

186
00:13:27,649 --> 00:13:32,589
bound to the V to V DP

187
00:13:33,540 --> 00:13:38,230
okay so here we have a l2 scenario the

188
00:13:38,230 --> 00:13:42,459
recovery support so as you can see the

189
00:13:42,459 --> 00:13:46,779
bridge domains or every note we have

190
00:13:46,779 --> 00:13:49,300
same bridge domain ID on these three

191
00:13:49,300 --> 00:13:52,420
notes of VPD projects configures the

192
00:13:52,420 --> 00:13:55,139
exelon tunnels between them for us and

193
00:13:55,139 --> 00:13:58,680
because it's because it's l2 scenario

194
00:13:58,680 --> 00:14:01,509
which means that audio doesn't route

195
00:14:01,509 --> 00:14:04,509
packets it only off switch them or

196
00:14:04,509 --> 00:14:08,379
forwards them through the towns then we

197
00:14:08,379 --> 00:14:10,360
use cue outer which is OpenStack

198
00:14:10,360 --> 00:14:13,029
component for routing the traffic so all

199
00:14:13,029 --> 00:14:15,550
we need to do here is to have a son to

200
00:14:15,550 --> 00:14:18,279
some kind of centralized node why we

201
00:14:18,279 --> 00:14:21,009
create the tab interfaces and they will

202
00:14:21,009 --> 00:14:23,290
connect to the queue outer or what sack

203
00:14:23,290 --> 00:14:25,360
you also will like stem into its

204
00:14:25,360 --> 00:14:30,370
namespace and whenever whenever there is

205
00:14:30,370 --> 00:14:32,769
stuffing going from bridge domain to a

206
00:14:32,769 --> 00:14:34,959
different domain it has to go through

207
00:14:34,959 --> 00:14:41,860
the queue outer deck scenario is every

208
00:14:41,860 --> 00:14:45,699
scenario where we do the routing

209
00:14:45,699 --> 00:14:50,889
browsing GPP open the right so there's

210
00:14:50,889 --> 00:14:52,600
no need for having a cue outro anymore

211
00:14:52,600 --> 00:14:55,899
all we do is to configure a routing on

212
00:14:55,899 --> 00:14:59,559
VPP so what does it mean it means that

213
00:14:59,559 --> 00:15:04,839
you need to specify a vrf what you would

214
00:15:04,839 --> 00:15:07,059
like to forward the packets or router

215
00:15:07,059 --> 00:15:09,689
packets and

216
00:15:10,360 --> 00:15:12,880
you need to assign a BBI interface so

217
00:15:12,880 --> 00:15:14,440
it's like an interconnection between a

218
00:15:14,440 --> 00:15:17,649
bridge domain and vrf that's what BBI

219
00:15:17,649 --> 00:15:20,440
interface does it's all to the type of

220
00:15:20,440 --> 00:15:28,300
interface the third scenario I was

221
00:15:28,300 --> 00:15:31,930
talking about that that racks GBP or

222
00:15:31,930 --> 00:15:38,980
audio entirely rates shown here so there

223
00:15:38,980 --> 00:15:41,980
has to be an agent on every node which

224
00:15:41,980 --> 00:15:44,160
is actually managed by OpenStack and

225
00:15:44,160 --> 00:15:47,320
OpenStack directly talks to VPP and

226
00:15:47,320 --> 00:15:51,899
configures configures it with CIP I

227
00:15:54,060 --> 00:15:58,530
okay and now there's a here's a simple

228
00:15:58,530 --> 00:16:02,430
cookbook for how to create the creative

229
00:16:02,430 --> 00:16:07,020
VM so what you need to do is to get an

230
00:16:07,020 --> 00:16:15,420
image as shown there and then by turning

231
00:16:15,420 --> 00:16:20,630
on huge pages and using correct flavor

232
00:16:20,630 --> 00:16:23,850
you can then create create a VM out of

233
00:16:23,850 --> 00:16:27,650
that there are also commands for

234
00:16:27,650 --> 00:16:31,640
creating the network network

235
00:16:34,070 --> 00:16:41,450
subnets and ports and then boot will

236
00:16:41,450 --> 00:16:45,870
spin up the VM and VPP you ensure that

237
00:16:45,870 --> 00:16:48,840
or GBP will ensure that it's going to be

238
00:16:48,840 --> 00:16:53,760
connected to the VPP okay so we have

239
00:16:53,760 --> 00:16:58,530
some outputs of such a demo but let me

240
00:16:58,530 --> 00:17:02,640
show you a brief video that we

241
00:17:02,640 --> 00:17:08,389
pre-recorded okay

242
00:17:10,569 --> 00:17:14,458
let me stab it for a while

243
00:17:15,710 --> 00:17:18,859
so this is pretty complicated I own that

244
00:17:18,859 --> 00:17:22,130
we're currently trying to work with as

245
00:17:22,130 --> 00:17:25,569
you can see there's the excellent panel

246
00:17:25,569 --> 00:17:28,610
the green highlighted with a green card

247
00:17:28,610 --> 00:17:31,910
and for which we would like to do some

248
00:17:31,910 --> 00:17:33,710
performance testing so we are going to

249
00:17:33,710 --> 00:17:38,630
be about to test some performance we're

250
00:17:38,630 --> 00:17:42,050
just doing switching between the green

251
00:17:42,050 --> 00:17:45,470
bridge domains on one between those two

252
00:17:45,470 --> 00:17:47,650
nodes

253
00:18:00,430 --> 00:18:04,940
okay so you can see interfaces on VPP

254
00:18:04,940 --> 00:18:10,250
there's a common line output so for VX

255
00:18:10,250 --> 00:18:13,670
antennas we need to I play address so

256
00:18:13,670 --> 00:18:19,000
that so that they can reach each other

257
00:18:20,020 --> 00:18:30,320
okay then we start graph there's a great

258
00:18:30,320 --> 00:18:33,830
comment for seeing whether there was a

259
00:18:33,830 --> 00:18:36,260
connection between the nodes the remote

260
00:18:36,260 --> 00:18:47,210
nodes and and controller so this is

261
00:18:47,210 --> 00:18:47,940
probably another

262
00:18:47,940 --> 00:18:51,019
[Music]

263
00:19:00,590 --> 00:19:03,350
i periods of another interface so these

264
00:19:03,350 --> 00:19:06,620
two are going to be used as a vehicle

265
00:19:06,620 --> 00:19:09,158
internals

266
00:19:12,269 --> 00:19:14,879
okay and now we're starting to create

267
00:19:14,879 --> 00:19:19,939
some abstraction with OpenStack

268
00:19:22,690 --> 00:19:28,590
there's a service listing so

269
00:19:30,289 --> 00:19:32,729
services that NOAA assistance services

270
00:19:32,729 --> 00:19:38,099
that Neutron uses as you can see we have

271
00:19:38,099 --> 00:19:43,589
our agent we would use it if we try to

272
00:19:43,589 --> 00:19:46,349
pink to the external networks because

273
00:19:46,349 --> 00:19:48,989
there has to be some routing done so we

274
00:19:48,989 --> 00:19:52,080
put a BBI interface in a brief domain

275
00:19:52,080 --> 00:19:54,349
and then it's your external network and

276
00:19:54,349 --> 00:20:00,289
then we could we could go outside but

277
00:20:00,289 --> 00:20:04,529
inside so as you can see there's a

278
00:20:04,529 --> 00:20:07,559
metadata agent which injects some

279
00:20:07,559 --> 00:20:10,440
configuration into VMs and also DHCP

280
00:20:10,440 --> 00:20:14,219
agent that that surrounds to the HP's

281
00:20:14,219 --> 00:20:16,499
DHCP service on a control node so that

282
00:20:16,499 --> 00:20:20,609
we and can observe an IP address okay

283
00:20:20,609 --> 00:20:24,468
there's a network that's being created

284
00:20:29,590 --> 00:20:32,580
something that

285
00:20:35,930 --> 00:20:40,940
so this is a network here we have

286
00:20:40,940 --> 00:20:44,540
networks external and one we created and

287
00:20:44,540 --> 00:20:45,940
also summits

288
00:20:45,940 --> 00:20:49,000
external and the one that we created

289
00:20:49,000 --> 00:20:54,200
router comes and they that we are not

290
00:20:54,200 --> 00:20:56,980
turn around here

291
00:21:00,179 --> 00:21:04,559
and now we create the ports which is

292
00:21:04,559 --> 00:21:07,080
actually on a kind of obstruction it

293
00:21:07,080 --> 00:21:09,269
sound bounces it's going to be bound

294
00:21:09,269 --> 00:21:13,369
when we create a VM so it's going to be

295
00:21:13,369 --> 00:21:16,259
the binding details will be will be

296
00:21:16,259 --> 00:21:19,369
filled after normal successfully creates

297
00:21:19,369 --> 00:21:23,059
on the right stance

298
00:21:26,180 --> 00:21:31,030
okay so here is a comment for creating

299
00:21:31,030 --> 00:21:33,760
yeah now you don't see anything okay so

300
00:21:33,760 --> 00:21:37,810
now we try to speed up a VM

301
00:21:46,980 --> 00:21:49,999
there's first

302
00:21:56,280 --> 00:22:02,100
and second note as you can see well to

303
00:22:02,100 --> 00:22:03,690
availability zone

304
00:22:03,690 --> 00:22:06,360
the fans note on which game should be

305
00:22:06,360 --> 00:22:12,240
created this is horizon OpenStack

306
00:22:12,240 --> 00:22:17,490
interface for managing managing entities

307
00:22:17,490 --> 00:22:21,000
that were created so we're gonna log in

308
00:22:21,000 --> 00:22:25,430
there and look for reamp we created

309
00:22:37,580 --> 00:22:41,360
so they are booted

310
00:22:43,100 --> 00:22:47,280
if there's if config so there was an IP

311
00:22:47,280 --> 00:22:50,040
address which means that dhcp could

312
00:22:50,040 --> 00:22:53,450
assign IP address from the bridge domain

313
00:22:53,450 --> 00:22:56,490
and there's another one there's also

314
00:22:56,490 --> 00:23:01,080
going to be leaf config and now some

315
00:23:01,080 --> 00:23:06,230
traffic so now we're pinging curator

316
00:23:06,230 --> 00:23:09,300
which means that VPP created BBI

317
00:23:09,300 --> 00:23:12,500
interface in the bridge domain

318
00:23:15,140 --> 00:23:21,800
no we're pinging dhcp which should work

319
00:23:22,780 --> 00:23:29,010
and now the other VM

320
00:23:31,259 --> 00:23:34,259
okay

321
00:23:41,520 --> 00:23:43,320
okay thank you very much for attention

322
00:23:43,320 --> 00:23:45,290
that's would be looking for my sights

323
00:23:45,290 --> 00:23:47,820
there's pretty much time for questions

324
00:23:47,820 --> 00:23:55,150
if any are so if not thanks again

325
00:23:55,150 --> 00:23:58,369
[Applause]

