1
00:00:05,780 --> 00:00:07,970
right now so we could start with the

2
00:00:07,970 --> 00:00:15,530
next presentation we're going to hi my

3
00:00:15,530 --> 00:00:20,060
name is Bhavik Roddick I work at Samsung

4
00:00:20,060 --> 00:00:22,699
currently Institute Poland I'm a member

5
00:00:22,699 --> 00:00:23,539
of

6
00:00:23,539 --> 00:00:26,330
Tyson common Linux distribution release

7
00:00:26,330 --> 00:00:30,349
team and since my occupation I am

8
00:00:30,349 --> 00:00:33,460
involved in lots of testing lots of

9
00:00:33,460 --> 00:00:36,650
verification and validation of system

10
00:00:36,650 --> 00:00:40,489
images for embedded Linux devices today

11
00:00:40,489 --> 00:00:43,460
I would like to be your guide through a

12
00:00:43,460 --> 00:00:46,910
setting up of your own lava laboratory

13
00:00:46,910 --> 00:00:50,149
because that's something we need to

14
00:00:50,149 --> 00:00:53,629
automate most of our work and to focus

15
00:00:53,629 --> 00:00:57,739
on much more interesting tasks that we

16
00:00:57,739 --> 00:01:02,989
have to do in our daily jobs I will

17
00:01:02,989 --> 00:01:06,530
start with a short introduction to what

18
00:01:06,530 --> 00:01:10,299
lava actually is then I will move to the

19
00:01:10,299 --> 00:01:15,200
main section which is actual setup of

20
00:01:15,200 --> 00:01:18,049
the laboratory I would like to share

21
00:01:18,049 --> 00:01:21,409
with you some tools that we used as well

22
00:01:21,409 --> 00:01:25,090
to simplify your work even further

23
00:01:25,090 --> 00:01:31,040
next I will give you some hints what can

24
00:01:31,040 --> 00:01:32,240
be done next

25
00:01:32,240 --> 00:01:38,930
and if there's time we'll have a short

26
00:01:38,930 --> 00:01:42,790
Q&A session and some final thoughts

27
00:01:42,790 --> 00:01:46,729
so what lava actually is lava stands for

28
00:01:46,729 --> 00:01:49,930
in our automated validation architecture

29
00:01:49,930 --> 00:01:55,520
and serves as an automation system for

30
00:01:55,520 --> 00:01:59,950
deploying operating system and not only

31
00:01:59,950 --> 00:02:03,469
embedded into devices but also any kind

32
00:02:03,469 --> 00:02:09,959
of analyte or virtual device it

33
00:02:09,959 --> 00:02:13,170
can't deploy what a fast car now little

34
00:02:13,170 --> 00:02:15,840
be anything that is needed to boot up

35
00:02:15,840 --> 00:02:22,829
your device once it prepares your device

36
00:02:22,829 --> 00:02:26,519
it allows you to run boot boot loader or

37
00:02:26,519 --> 00:02:30,239
even system level tests on your device

38
00:02:30,239 --> 00:02:33,480
but some extra hardware might be

39
00:02:33,480 --> 00:02:37,530
required for the full support of all our

40
00:02:37,530 --> 00:02:41,430
features and one actually does it come

41
00:02:41,430 --> 00:02:46,889
in handy in the simplest use case well

42
00:02:46,889 --> 00:02:50,250
do just a single boat for example began

43
00:02:50,250 --> 00:02:53,159
born black which is reference device for

44
00:02:53,159 --> 00:02:58,200
many on open source projects it's easy

45
00:02:58,200 --> 00:03:02,639
to manage just one on your desk also

46
00:03:02,639 --> 00:03:05,400
with just a single instance you don't

47
00:03:05,400 --> 00:03:07,829
have to worry about managing resources

48
00:03:07,829 --> 00:03:14,310
of your miniature boat forms but sooner

49
00:03:14,310 --> 00:03:17,519
or later you might come across some new

50
00:03:17,519 --> 00:03:19,650
interesting target devices you would

51
00:03:19,650 --> 00:03:22,199
like to support for your open source

52
00:03:22,199 --> 00:03:25,949
project for example Arctic 10 in top

53
00:03:25,949 --> 00:03:30,299
left corner or a droid check Co 3 on the

54
00:03:30,299 --> 00:03:34,560
bottom that's when things might get

55
00:03:34,560 --> 00:03:35,909
complicated

56
00:03:35,909 --> 00:03:39,299
adding to that even new architecture

57
00:03:39,299 --> 00:03:43,470
like me no BOTS which run on Intel based

58
00:03:43,470 --> 00:03:47,810
chip might complicate it even further

59
00:03:47,810 --> 00:03:53,069
because all of these devices have to be

60
00:03:53,069 --> 00:03:55,129
flashed in a completely different way

61
00:03:55,129 --> 00:04:00,299
and support different communication ways

62
00:04:00,299 --> 00:04:03,030
between your test server and your actual

63
00:04:03,030 --> 00:04:07,199
device what if you'll have to complicate

64
00:04:07,199 --> 00:04:10,379
things even more and have to manage a

65
00:04:10,379 --> 00:04:13,500
whole build farm or whole boat from

66
00:04:13,500 --> 00:04:18,810
actually with multiple instances of each

67
00:04:18,810 --> 00:04:21,209
of your device well

68
00:04:21,209 --> 00:04:25,110
that's where lava comes into place and

69
00:04:25,110 --> 00:04:27,389
because it provides an abstraction layer

70
00:04:27,389 --> 00:04:33,630
for the whole board form this way all

71
00:04:33,630 --> 00:04:37,349
the complex device management is put

72
00:04:37,349 --> 00:04:40,919
onto the lava itself and is no longer in

73
00:04:40,919 --> 00:04:44,669
your own task also so many different

74
00:04:44,669 --> 00:04:48,569
devices have various capabilities it

75
00:04:48,569 --> 00:04:51,120
would be much easier if you don't have

76
00:04:51,120 --> 00:04:55,199
to worry about finding an actual device

77
00:04:55,199 --> 00:04:57,930
that supports all the capabilities you

78
00:04:57,930 --> 00:05:02,250
need for tests and with lava you can

79
00:05:02,250 --> 00:05:05,610
only define what do you need and this

80
00:05:05,610 --> 00:05:09,539
way if your board farm has proper device

81
00:05:09,539 --> 00:05:13,889
you'll get what you request it also you

82
00:05:13,889 --> 00:05:16,199
don't have to worry about scheduling and

83
00:05:16,199 --> 00:05:19,860
dispatching multiple tasks on numerous

84
00:05:19,860 --> 00:05:22,380
devices so if you would like to paralyze

85
00:05:22,380 --> 00:05:25,289
all of your tests and get your results

86
00:05:25,289 --> 00:05:26,220
quicker

87
00:05:26,220 --> 00:05:35,270
that's what lava I can provide you and

88
00:05:36,259 --> 00:05:39,599
what you'll get out of the box is an

89
00:05:39,599 --> 00:05:43,039
unified device environment so each

90
00:05:43,039 --> 00:05:48,870
developer does not see boat anymore it

91
00:05:48,870 --> 00:05:51,900
just general device which can be flushed

92
00:05:51,900 --> 00:05:57,020
with operating system image and which

93
00:05:57,020 --> 00:06:03,449
can get some tests to run and all the

94
00:06:03,449 --> 00:06:07,740
developer sees is just a bunch of

95
00:06:07,740 --> 00:06:10,590
results that he gets with no worries

96
00:06:10,590 --> 00:06:13,080
about mmm

97
00:06:13,080 --> 00:06:17,310
flashing device about running running

98
00:06:17,310 --> 00:06:22,550
tests on them or how to get results back

99
00:06:22,550 --> 00:06:26,580
also the

100
00:06:26,580 --> 00:06:30,539
direct connection to the devices is

101
00:06:30,539 --> 00:06:34,439
still available in lava

102
00:06:34,439 --> 00:06:37,400
for example we are hacking sessions or

103
00:06:37,400 --> 00:06:45,770
both overseer but these topics more

104
00:06:47,120 --> 00:06:50,520
complex than just setting up which will

105
00:06:50,520 --> 00:06:55,409
be focusing on today lava is currently

106
00:06:55,409 --> 00:06:59,310
in used in use by multiple projects by

107
00:06:59,310 --> 00:07:02,759
multiple companies for example by

108
00:07:02,759 --> 00:07:07,860
leonora for the bot farm in Cambridge by

109
00:07:07,860 --> 00:07:08,759
colonel CI

110
00:07:08,759 --> 00:07:13,669
for the tests of current colonel trees

111
00:07:13,669 --> 00:07:17,430
by automotive grade Linux and the Debian

112
00:07:17,430 --> 00:07:27,229
as for Linux distributions so once we

113
00:07:27,710 --> 00:07:31,409
realize - what can we get from on lava

114
00:07:31,409 --> 00:07:35,719
laboratory let's go to the actual setup

115
00:07:35,719 --> 00:07:39,960
for just for start it's the best to

116
00:07:39,960 --> 00:07:43,469
focus on standalone instance with no

117
00:07:43,469 --> 00:07:48,060
remote workers with no distributed

118
00:07:48,060 --> 00:07:50,389
environment standalone instance will

119
00:07:50,389 --> 00:07:55,680
allow to get the most of lava as quickly

120
00:07:55,680 --> 00:08:00,120
as possible we also focus just on the

121
00:08:00,120 --> 00:08:04,279
virtual devices and the tests that

122
00:08:04,279 --> 00:08:09,029
should be run at the beginning should be

123
00:08:09,029 --> 00:08:10,469
as simple as possible

124
00:08:10,469 --> 00:08:14,849
just health checks if nothing else comes

125
00:08:14,849 --> 00:08:20,879
to you during the setup one is that we

126
00:08:20,879 --> 00:08:24,900
need to reduce the complexity of the

127
00:08:24,900 --> 00:08:28,319
whole process also it's best to

128
00:08:28,319 --> 00:08:32,039
familiarize with possibly new workflow

129
00:08:32,039 --> 00:08:37,708
of your testing automation procedures by

130
00:08:37,708 --> 00:08:39,000
not going

131
00:08:39,000 --> 00:08:45,090
some caveats of specific boats but

132
00:08:45,090 --> 00:08:48,990
having just a virtual devices also it's

133
00:08:48,990 --> 00:08:51,270
much easier to understand

134
00:08:51,270 --> 00:08:56,250
lava concepts when you have the water

135
00:08:56,250 --> 00:09:01,790
stirred and quickly to set up

136
00:09:01,790 --> 00:09:06,770
environment on your hands and lastly

137
00:09:06,770 --> 00:09:10,710
although lava will allow you to reuse

138
00:09:10,710 --> 00:09:15,030
your current test cases it's best to

139
00:09:15,030 --> 00:09:20,790
open the process of learning the new way

140
00:09:20,790 --> 00:09:26,190
of running your tests on the lava board

141
00:09:26,190 --> 00:09:30,330
form as for requirements for your own

142
00:09:30,330 --> 00:09:34,370
lava laboratory the only one is to have

143
00:09:34,370 --> 00:09:38,970
Debian based machine currently support

144
00:09:38,970 --> 00:09:41,150
for Ubuntu is frozen

145
00:09:41,150 --> 00:09:46,230
more details you can find in the link on

146
00:09:46,230 --> 00:09:52,080
the presentations but for now any Debian

147
00:09:52,080 --> 00:09:55,760
instance that you have to spark will be

148
00:09:55,760 --> 00:10:03,290
sufficient exactly that's the host if

149
00:10:03,290 --> 00:10:09,660
you'd like to other distribution on the

150
00:10:09,660 --> 00:10:12,540
actual device under tests

151
00:10:12,540 --> 00:10:16,350
I believe currently open embedded Fedora

152
00:10:16,350 --> 00:10:21,830
Debian are supported out-of-the-box and

153
00:10:21,830 --> 00:10:25,290
other distributions will require a

154
00:10:25,290 --> 00:10:29,520
little tinkering as for other

155
00:10:29,520 --> 00:10:34,170
requirements that you need to set it up

156
00:10:34,170 --> 00:10:37,260
of course system image for your Linux

157
00:10:37,260 --> 00:10:41,030
bot and some healthcheck job which

158
00:10:41,030 --> 00:10:44,130
together with system image is already

159
00:10:44,130 --> 00:10:49,170
provided in lava by leonora also device

160
00:10:49,170 --> 00:10:50,750
type temp

161
00:10:50,750 --> 00:10:55,220
and for qmu which will focus today it's

162
00:10:55,220 --> 00:10:59,690
already available in lava in default

163
00:10:59,690 --> 00:11:03,920
lava distribution as well and actually

164
00:11:03,920 --> 00:11:07,010
the only and a file that you would need

165
00:11:07,010 --> 00:11:11,720
to set it up is device dictionary which

166
00:11:11,720 --> 00:11:15,199
serves as a definition of the instance

167
00:11:15,199 --> 00:11:19,370
of your device and for qmu it's just

168
00:11:19,370 --> 00:11:22,910
three lines yuo see on the bottom which

169
00:11:22,910 --> 00:11:28,639
only gives you an info which the vast

170
00:11:28,639 --> 00:11:32,209
template should be in use assign mac

171
00:11:32,209 --> 00:11:36,070
address and set an available memory

172
00:11:36,070 --> 00:11:43,220
thanks to the lava packagers all you

173
00:11:43,220 --> 00:11:46,100
have to do on your host machine is to

174
00:11:46,100 --> 00:11:52,339
prepare data base for the lava and let

175
00:11:52,339 --> 00:12:00,110
install the metal package package all

176
00:12:00,110 --> 00:12:03,709
you need further is resolved

177
00:12:03,709 --> 00:12:08,540
automatically with dependencies as for

178
00:12:08,540 --> 00:12:12,339
the common post install tasks default

179
00:12:12,339 --> 00:12:14,930
Apache configuration is already

180
00:12:14,930 --> 00:12:20,560
available as well and if you disable

181
00:12:20,560 --> 00:12:27,500
default pages and and replace it with

182
00:12:27,500 --> 00:12:31,160
lava server configuration with enabling

183
00:12:31,160 --> 00:12:34,490
of two additional modules for Apache

184
00:12:34,490 --> 00:12:36,709
you're all set to go

185
00:12:36,709 --> 00:12:40,699
as for the host configuration of course

186
00:12:40,699 --> 00:12:44,420
you all have to create super user for

187
00:12:44,420 --> 00:12:47,120
your lava laboratory and finally

188
00:12:47,120 --> 00:12:49,760
actually other devices adding the

189
00:12:49,760 --> 00:12:53,660
devices consists of three steps first of

190
00:12:53,660 --> 00:12:57,170
all you have to add device type to our

191
00:12:57,170 --> 00:13:02,550
lava laboratory with the first

192
00:13:02,550 --> 00:13:08,840
command on the but then you have to

193
00:13:08,840 --> 00:13:12,570
inform your level laboratory about a new

194
00:13:12,570 --> 00:13:18,240
instance of your device and finally and

195
00:13:18,240 --> 00:13:21,980
define all the remaining information

196
00:13:21,980 --> 00:13:27,680
about your virtual boat instance with

197
00:13:27,680 --> 00:13:32,730
three line file you saw earlier actually

198
00:13:32,730 --> 00:13:38,250
two more things are to be done to have

199
00:13:38,250 --> 00:13:41,720
the whole system fully operational

200
00:13:41,720 --> 00:13:47,810
you'll have to assign a worker for the

201
00:13:47,810 --> 00:13:51,540
for your device and define a health

202
00:13:51,540 --> 00:13:52,020
check

203
00:13:52,020 --> 00:14:00,930
so that lava can always verify that the

204
00:14:00,930 --> 00:14:05,910
device is fully operational once this is

205
00:14:05,910 --> 00:14:08,300
done you're good to go you may safely

206
00:14:08,300 --> 00:14:13,590
submit your test cases lava supports

207
00:14:13,590 --> 00:14:18,240
both CLI interface for the automation of

208
00:14:18,240 --> 00:14:23,610
the whole process as well as web UI for

209
00:14:23,610 --> 00:14:27,360
quick tests if you would like to check

210
00:14:27,360 --> 00:14:34,490
your new changes quickly having it

211
00:14:34,490 --> 00:14:43,140
already set up you might consider some

212
00:14:43,140 --> 00:14:45,810
notice I would like to propose to you

213
00:14:45,810 --> 00:14:49,710
which may make your future deployments

214
00:14:49,710 --> 00:14:58,320
easier quicker and safer having it all

215
00:14:58,320 --> 00:15:01,890
in a reproducible way first art I would

216
00:15:01,890 --> 00:15:06,330
like to show you the configuration

217
00:15:06,330 --> 00:15:12,420
management suite for lava it it is

218
00:15:12,420 --> 00:15:14,140
equally well

219
00:15:14,140 --> 00:15:17,890
whichever tool you like so if you prefer

220
00:15:17,890 --> 00:15:25,390
salt stock chef puppet or ansible it it

221
00:15:25,390 --> 00:15:28,510
won't matter as long as you'll have a

222
00:15:28,510 --> 00:15:31,360
producible environment for all of your

223
00:15:31,360 --> 00:15:35,050
future deployments and the same exact

224
00:15:35,050 --> 00:15:37,420
configuration on both your testing

225
00:15:37,420 --> 00:15:38,920
environment and your production

226
00:15:38,920 --> 00:15:42,339
environment so choose your personal

227
00:15:42,339 --> 00:15:47,079
favorite and other boroughs should be

228
00:15:47,079 --> 00:15:51,670
published for setting up the for a

229
00:15:51,670 --> 00:15:57,990
virtual just starting lava instance in a

230
00:15:57,990 --> 00:16:05,579
next couple of days as for the

231
00:16:05,579 --> 00:16:07,990
environment virtualization which I

232
00:16:07,990 --> 00:16:12,459
believe you will be interested in having

233
00:16:12,459 --> 00:16:16,180
for your first lava instance you might

234
00:16:16,180 --> 00:16:19,329
choose from different virtualization

235
00:16:19,329 --> 00:16:21,910
providers I would like to propose to

236
00:16:21,910 --> 00:16:25,230
depending on how much time to have and

237
00:16:25,230 --> 00:16:29,860
how much flexibility do we need from the

238
00:16:29,860 --> 00:16:35,620
provider itself if you need to have set

239
00:16:35,620 --> 00:16:39,880
up really quickly vagrant would be your

240
00:16:39,880 --> 00:16:43,779
choice it allows you to bring up new

241
00:16:43,779 --> 00:16:47,709
instances instantly and it provides you

242
00:16:47,709 --> 00:16:52,930
with wide range of credit machines by

243
00:16:52,930 --> 00:16:56,560
Atlus service but do be careful with

244
00:16:56,560 --> 00:16:59,890
pre-built images since you have no

245
00:16:59,890 --> 00:17:03,370
control on what actually is on the

246
00:17:03,370 --> 00:17:06,099
system image and if you would like to

247
00:17:06,099 --> 00:17:09,929
tinker mode to adjust it to your needs

248
00:17:09,929 --> 00:17:16,319
you all might consider levert currently

249
00:17:16,380 --> 00:17:20,380
maybe one of the most flexible tools for

250
00:17:20,380 --> 00:17:24,890
these kinds of tasks still

251
00:17:24,890 --> 00:17:27,890
it with really user friendly above CLI

252
00:17:27,890 --> 00:17:34,610
and GUI tools once you have it all set

253
00:17:34,610 --> 00:17:38,600
up you might consider your next steps

254
00:17:38,600 --> 00:17:44,510
and one of the possible follow-ups to

255
00:17:44,510 --> 00:17:47,330
setting up new level laboratory and it

256
00:17:47,330 --> 00:17:50,450
could be adding completely new device

257
00:17:50,450 --> 00:17:54,140
types to lava this time actual devices

258
00:17:54,140 --> 00:17:57,400
physical devices and all the

259
00:17:57,400 --> 00:18:00,920
documentation for doing so is already

260
00:18:00,920 --> 00:18:04,040
available you might also be interested

261
00:18:04,040 --> 00:18:07,010
in writing your own tests or migrating

262
00:18:07,010 --> 00:18:13,550
your current test cases to lava devote a

263
00:18:13,550 --> 00:18:17,480
lava documentation you're covered as

264
00:18:17,480 --> 00:18:21,550
well but if you'd be more interesting in

265
00:18:21,550 --> 00:18:25,340
contributing to some other project you

266
00:18:25,340 --> 00:18:28,970
might consider adding your lava instance

267
00:18:28,970 --> 00:18:36,080
to the kernel CI project you know what I

268
00:18:36,080 --> 00:18:39,190
believe you would also benefit from

269
00:18:39,190 --> 00:18:43,520
familiarizing with both a GL test

270
00:18:43,520 --> 00:18:47,710
framework set of instructions and with

271
00:18:47,710 --> 00:18:50,150
documents that civil infrastructure

272
00:18:50,150 --> 00:18:54,440
platform testing initiative prepared and

273
00:18:54,440 --> 00:19:00,110
if you'd prefer to watch and listen

274
00:19:00,110 --> 00:19:04,460
instead of waiting you might be

275
00:19:04,460 --> 00:19:09,890
interested in these three talks a little

276
00:19:09,890 --> 00:19:14,540
more detailed introduction to a lava

277
00:19:14,540 --> 00:19:16,220
veto by Bill Fletcher

278
00:19:16,220 --> 00:19:21,410
all having direct access to your devices

279
00:19:21,410 --> 00:19:28,010
within the laboratory instance by three

280
00:19:28,010 --> 00:19:31,730
electrons you also could benefit from

281
00:19:31,730 --> 00:19:36,890
the next presentation that is right

282
00:19:36,890 --> 00:19:38,660
after this one

283
00:19:38,660 --> 00:19:42,740
by young similar of course if you

284
00:19:42,740 --> 00:19:44,750
wouldn't need any help

285
00:19:44,750 --> 00:19:48,670
and if further help the exhaustive

286
00:19:48,670 --> 00:19:52,240
documentation is already available at

287
00:19:52,240 --> 00:19:57,740
each instance of lava laboratory and if

288
00:19:57,740 --> 00:20:06,700
you'd like some direct contact our users

289
00:20:06,700 --> 00:20:09,500
show their questions on mailing list

290
00:20:09,500 --> 00:20:15,610
either on mailing list you know - lava

291
00:20:15,610 --> 00:20:21,140
IRC channel on freenode - solid rock to

292
00:20:21,140 --> 00:20:26,510
sum it all up I hope that I showed you

293
00:20:26,510 --> 00:20:33,670
that initial setup of lava laboratory is

294
00:20:33,670 --> 00:20:39,470
pretty easy thanks to already in place

295
00:20:39,470 --> 00:20:43,270
package repositories for Debian platform

296
00:20:43,270 --> 00:20:50,360
and that setup is instant once you know

297
00:20:50,360 --> 00:20:53,900
what to expect and what do you have to

298
00:20:53,900 --> 00:20:58,120
prepare before also an environment

299
00:20:58,120 --> 00:21:01,460
unification for a various device type

300
00:21:01,460 --> 00:21:04,010
the types is something that you might

301
00:21:04,010 --> 00:21:09,380
benefit from in your automated testing

302
00:21:09,380 --> 00:21:14,810
process and wherever you get power test

303
00:21:14,810 --> 00:21:18,860
execution with no cost and you don't

304
00:21:18,860 --> 00:21:21,560
have to manage all of their devices by

305
00:21:21,560 --> 00:21:27,560
yourself and also developers do not have

306
00:21:27,560 --> 00:21:32,510
to worry about managing devices all by

307
00:21:32,510 --> 00:21:35,900
themselves those responsibilities can be

308
00:21:35,900 --> 00:21:40,870
moved to the Java laboratory operators

309
00:21:40,870 --> 00:21:45,650
and as for the final thoughts I would

310
00:21:45,650 --> 00:21:50,560
like to share with you is that

311
00:21:51,370 --> 00:21:53,950
though it might seem intimidating at

312
00:21:53,950 --> 00:21:57,090
first with such an exhaustive

313
00:21:57,090 --> 00:22:04,290
documentation as levar has it actually

314
00:22:04,290 --> 00:22:07,570
has no downsides when y'all get through

315
00:22:07,570 --> 00:22:11,800
it or you have someone who got through

316
00:22:11,800 --> 00:22:16,560
it earlier and shares just a quick start

317
00:22:16,560 --> 00:22:19,570
you'll get everything you need

318
00:22:19,570 --> 00:22:22,810
also there is absolutely no need to

319
00:22:22,810 --> 00:22:27,070
reinvent the wheel with modern testing

320
00:22:27,070 --> 00:22:31,330
laboratory management and software it's

321
00:22:31,330 --> 00:22:35,890
already there just waiting for you to

322
00:22:35,890 --> 00:22:39,390
use it and although the initial cost

323
00:22:39,390 --> 00:22:42,520
might be high if you're not familiar

324
00:22:42,520 --> 00:22:47,920
with all these tools for automation and

325
00:22:47,920 --> 00:22:53,970
always price off in a long term if you

326
00:22:53,970 --> 00:22:57,160
have some questions I would be more than

327
00:22:57,160 --> 00:23:02,790
happy to answer them since we've got

328
00:23:02,790 --> 00:23:09,180
still few minutes yeah hi

329
00:24:17,670 --> 00:24:28,890
so it's great that you're yeah sure so

330
00:24:28,890 --> 00:24:32,100
good job

331
00:25:19,539 --> 00:25:46,119
I believe so but I am not experienced

332
00:25:46,119 --> 00:25:48,700
user enough to answer your question

333
00:25:48,700 --> 00:25:50,499
fully I believe that so you would have

334
00:25:50,499 --> 00:25:55,710
to add two different devices and if the

335
00:25:55,710 --> 00:25:59,889
child one has direct access that there

336
00:25:59,889 --> 00:26:05,739
would be no trouble in that and if it

337
00:26:05,739 --> 00:26:08,470
has not so maybe some talent following

338
00:26:08,470 --> 00:26:10,509
through the parent device will be

339
00:26:10,509 --> 00:26:19,029
required as well if there is no more

340
00:26:19,029 --> 00:26:21,940
question thank you for your attention

341
00:26:21,940 --> 00:26:26,709
[Applause]

342
00:26:27,610 --> 00:26:29,669
you

