1
00:00:00,060 --> 00:00:03,020
okay

2
00:00:04,510 --> 00:00:11,700
maybe worked welcome to what the self

3
00:00:11,700 --> 00:00:13,600
unexpected things happening under the

4
00:00:13,600 --> 00:00:16,090
grid so this is basically about about

5
00:00:16,090 --> 00:00:18,699
some things I encountered during

6
00:00:18,699 --> 00:00:24,130
developing spreadsheet calc yeah just

7
00:00:24,130 --> 00:00:26,890
short over you about me about

8
00:00:26,890 --> 00:00:30,660
accessibility as a fred is an info and

9
00:00:30,660 --> 00:00:33,640
some code doesn't know where to put

10
00:00:33,640 --> 00:00:36,040
things and with some performance

11
00:00:36,040 --> 00:00:39,160
examples i'm not getting up cave known

12
00:00:39,160 --> 00:00:42,250
on the net at s iraq for example on IRC

13
00:00:42,250 --> 00:00:45,660
simple things most email addresses

14
00:00:45,660 --> 00:00:49,239
working on the start office or

15
00:00:49,239 --> 00:00:52,180
libreoffice for several companies and

16
00:00:52,180 --> 00:00:55,840
since a long time I'm around here so

17
00:00:55,840 --> 00:01:00,730
accessibility or a11y that's a shortened

18
00:01:00,730 --> 00:01:02,980
can be your friend or Muslim it's your

19
00:01:02,980 --> 00:01:04,930
friend because it provides information

20
00:01:04,930 --> 00:01:07,900
to this green radius tells which object

21
00:01:07,900 --> 00:01:10,570
is active is selected whatever and reads

22
00:01:10,570 --> 00:01:12,910
the text content of selected objects so

23
00:01:12,910 --> 00:01:15,250
for example Buffum edit fuse list book

24
00:01:15,250 --> 00:01:18,940
entries cells the contents and it also

25
00:01:18,940 --> 00:01:21,280
listens to object changes which is good

26
00:01:21,280 --> 00:01:25,270
or maybe is it or maybe not because this

27
00:01:25,270 --> 00:01:27,450
accessibility can also be your fault

28
00:01:27,450 --> 00:01:31,420
especially if you're a coder because it

29
00:01:31,420 --> 00:01:34,300
listens to object changes which can slow

30
00:01:34,300 --> 00:01:37,780
things quite significantly down because

31
00:01:37,780 --> 00:01:40,690
on modern systems accessibility at least

32
00:01:40,690 --> 00:01:42,820
framework is enabled if even if you

33
00:01:42,820 --> 00:01:45,900
don't have any screen reader and use and

34
00:01:45,900 --> 00:01:48,580
it can get in the way at the most

35
00:01:48,580 --> 00:01:54,070
inconvenient occasions and well if it

36
00:01:54,070 --> 00:01:56,520
does it's sometimes very hard to debug

37
00:01:56,520 --> 00:01:59,410
so for example we have an edit engine

38
00:01:59,410 --> 00:02:02,620
and we have four cell with the text one

39
00:02:02,620 --> 00:02:05,110
line with text in this case and we start

40
00:02:05,110 --> 00:02:08,919
to edit the text and type some text

41
00:02:08,919 --> 00:02:10,889
there

42
00:02:10,889 --> 00:02:18,870
and so there's one line funny stuff it

43
00:02:18,870 --> 00:02:22,080
doesn't show the highlighted things okay

44
00:02:22,080 --> 00:02:25,920
it's a piece of text with an insert in

45
00:02:25,920 --> 00:02:28,470
paragraph with a paragraph mark at the

46
00:02:28,470 --> 00:02:31,620
end we just type in so as soon as you

47
00:02:31,620 --> 00:02:36,470
reach the paragraph end and press Enter

48
00:02:36,950 --> 00:02:39,600
accessibility is notified hey we have a

49
00:02:39,600 --> 00:02:41,880
new paragraph here so it can actually

50
00:02:41,880 --> 00:02:45,330
read the new content and tell the screen

51
00:02:45,330 --> 00:02:48,690
unison the next piece of text is moved

52
00:02:48,690 --> 00:02:53,070
to the next line and that with text

53
00:02:53,070 --> 00:02:55,620
there's now on the next line so we're

54
00:02:55,620 --> 00:02:58,380
doing something similar when pasting

55
00:02:58,380 --> 00:03:02,250
text into himself starting with the same

56
00:03:02,250 --> 00:03:08,400
cell context and pasted piece of text

57
00:03:08,400 --> 00:03:11,310
and pasted paragraph and more which we

58
00:03:11,310 --> 00:03:13,860
previously copied from from another cell

59
00:03:13,860 --> 00:03:21,560
including this paragraph break so

60
00:03:21,680 --> 00:03:24,349
the same as the paragraph and is

61
00:03:24,349 --> 00:03:28,720
inserted accessibility gets notified

62
00:03:28,720 --> 00:03:33,879
well we are in the middle of a pace

63
00:03:33,879 --> 00:03:36,650
accessibility get slow defied and wakes

64
00:03:36,650 --> 00:03:41,299
up until thinks well let's ask the other

65
00:03:41,299 --> 00:03:43,459
end room for the newest distribution of

66
00:03:43,459 --> 00:03:47,090
the text so the text is not reformatted

67
00:03:47,090 --> 00:03:49,010
yet so the Edit engine doesn't know how

68
00:03:49,010 --> 00:03:53,930
it it just distributed actually so but

69
00:03:53,930 --> 00:03:56,180
it knows there is text following because

70
00:03:56,180 --> 00:03:58,489
we just pasted it at some position some

71
00:03:58,489 --> 00:04:01,069
some piece of text and it was not at the

72
00:04:01,069 --> 00:04:04,549
end of the cell so the edit and then due

73
00:04:04,549 --> 00:04:10,659
to the internal algorithm just tries to

74
00:04:10,659 --> 00:04:13,189
distribute we distribute the text but

75
00:04:13,189 --> 00:04:15,980
somehow cannot decide when to do it

76
00:04:15,980 --> 00:04:16,488
actually

77
00:04:16,488 --> 00:04:21,079
so it actually allocates memory for the

78
00:04:21,079 --> 00:04:24,310
next line to put the piece of text that

79
00:04:24,310 --> 00:04:29,020
but doesn't watch move the text there so

80
00:04:29,020 --> 00:04:31,639
it just in some stage where it counties

81
00:04:31,639 --> 00:04:34,580
heart between its ex cares of positions

82
00:04:34,580 --> 00:04:37,729
that it remembers and and and and the

83
00:04:37,729 --> 00:04:41,780
text that follows and well that's this

84
00:04:41,780 --> 00:04:43,970
line but doesn't distribute the text and

85
00:04:43,970 --> 00:04:48,440
step goes to step 0 and when the text is

86
00:04:48,440 --> 00:04:51,470
not reformatted yet and asked itself

87
00:04:51,470 --> 00:04:54,669
again let's read from our testing I

88
00:04:54,669 --> 00:04:57,800
don't know where it starts let there is

89
00:04:57,800 --> 00:05:00,199
some text following I know that so I

90
00:05:00,199 --> 00:05:02,930
just append a line so this goes on

91
00:05:02,930 --> 00:05:07,220
infinitely until either your memory is

92
00:05:07,220 --> 00:05:11,419
off you crash if you're lucky and you're

93
00:05:11,419 --> 00:05:12,979
using Windows system or if you're

94
00:05:12,979 --> 00:05:18,380
limited Linux environment or you go on

95
00:05:18,380 --> 00:05:21,530
until your swap space is finished and

96
00:05:21,530 --> 00:05:23,690
your system ground into heart even

97
00:05:23,690 --> 00:05:25,130
before that you can't do anything

98
00:05:25,130 --> 00:05:29,120
anymore which made debugging this not

99
00:05:29,120 --> 00:05:33,020
very funny because you have to interrupt

100
00:05:33,020 --> 00:05:35,599
in early before that happens

101
00:05:35,599 --> 00:05:38,849
and try to figure out why this happens

102
00:05:38,849 --> 00:05:41,940
and actually debugging the case took me

103
00:05:41,940 --> 00:05:44,180
about one and a half days or something

104
00:05:44,180 --> 00:05:48,900
the actual fix was very simple we

105
00:05:48,900 --> 00:05:51,830
suppress only during the paste to

106
00:05:51,830 --> 00:05:56,699
notifications so accessibility is not

107
00:05:56,699 --> 00:05:58,979
notified you in the pace but just right

108
00:05:58,979 --> 00:06:02,039
after the pace happened so in that state

109
00:06:02,039 --> 00:06:05,669
again the Edit engine is in a good state

110
00:06:05,669 --> 00:06:10,430
again and it can operate just as usual

111
00:06:10,430 --> 00:06:14,729
so but that was just long what the two

112
00:06:14,729 --> 00:06:16,710
lines fix actually actually so just

113
00:06:16,710 --> 00:06:19,199
suppress notification and after the page

114
00:06:19,199 --> 00:06:22,470
turn it on again and just notify

115
00:06:22,470 --> 00:06:26,039
accessibility after the other part was

116
00:06:26,039 --> 00:06:28,110
rewriting the part of the algorithm of

117
00:06:28,110 --> 00:06:31,080
the Edit engine so that if for any other

118
00:06:31,080 --> 00:06:35,789
occasion it comes to this it does not

119
00:06:35,789 --> 00:06:38,270
end up in the same situation so SOI

120
00:06:38,270 --> 00:06:40,889
allocating memory endlessly for this

121
00:06:40,889 --> 00:06:42,930
situation hopefully it's not possible

122
00:06:42,930 --> 00:06:45,659
anymore if you're interested what was

123
00:06:45,659 --> 00:06:49,669
changed there the commit IDs given

124
00:06:50,659 --> 00:06:56,610
coming to performance I was involved

125
00:06:56,610 --> 00:06:58,830
last half-year with the performance of

126
00:06:58,830 --> 00:07:01,800
carat because due to some bugs

127
00:07:01,800 --> 00:07:05,419
encountered and also some other things

128
00:07:05,419 --> 00:07:08,969
so one example here is the loading cell

129
00:07:08,969 --> 00:07:11,460
forming up formulas form from an Oda

130
00:07:11,460 --> 00:07:14,789
file format where we have to parse all

131
00:07:14,789 --> 00:07:17,849
the formulas and significant time was

132
00:07:17,849 --> 00:07:22,110
spent in the determination whether where

133
00:07:22,110 --> 00:07:23,849
there was specific piece of string is a

134
00:07:23,849 --> 00:07:27,029
value which comes after whether it's a

135
00:07:27,029 --> 00:07:29,159
function name or reference or whatever

136
00:07:29,159 --> 00:07:31,770
and at one point if it's not not one of

137
00:07:31,770 --> 00:07:33,810
these we have to determine if it's a

138
00:07:33,810 --> 00:07:38,490
y-you or not that always called the

139
00:07:38,490 --> 00:07:42,120
number per there which is usually done

140
00:07:42,120 --> 00:07:44,880
also in the user interface because you

141
00:07:44,880 --> 00:07:48,460
the user can type in other things and

142
00:07:48,460 --> 00:07:53,190
we have to for example the process the

143
00:07:53,190 --> 00:07:55,870
localized separators like a thermal

144
00:07:55,870 --> 00:07:57,729
separators or debt from what's whatever

145
00:07:57,729 --> 00:08:00,400
but in an audio file format it has to be

146
00:08:00,400 --> 00:08:05,860
a good good English us string like like

147
00:08:05,860 --> 00:08:07,629
specified in the format so we don't need

148
00:08:07,629 --> 00:08:12,340
all this overhead and we could use the

149
00:08:12,340 --> 00:08:14,800
RTL math drink to double which we have

150
00:08:14,800 --> 00:08:17,979
implemented in the base layers this

151
00:08:17,979 --> 00:08:20,949
brought down actually the the numbers

152
00:08:20,949 --> 00:08:25,000
from instruction grads to from what was

153
00:08:25,000 --> 00:08:27,250
it here nine million eight hundred nine

154
00:08:27,250 --> 00:08:29,710
fifty nine thousand something which is

155
00:08:29,710 --> 00:08:32,110
which was spent under the C compiler is

156
00:08:32,110 --> 00:08:35,490
value and and the other two course

157
00:08:35,490 --> 00:08:38,620
brought down to two hundred ninety eight

158
00:08:38,620 --> 00:08:42,029
thousand which is a speed-up of factor

159
00:08:42,029 --> 00:08:43,240
3233

160
00:08:43,240 --> 00:08:49,480
so quite some guy in there which this

161
00:08:49,480 --> 00:08:52,500
was a test case actually of just

162
00:08:52,500 --> 00:08:56,790
thousand numbers and formulas

163
00:08:56,790 --> 00:09:01,450
alternating on every second row so we

164
00:09:01,450 --> 00:09:03,940
don't end up with any shared formula or

165
00:09:03,940 --> 00:09:05,770
something so we have to actually parse

166
00:09:05,770 --> 00:09:12,730
everything the next one was in the

167
00:09:12,730 --> 00:09:15,459
scenario thing was inserting rows

168
00:09:15,459 --> 00:09:20,160
something quite quite complex document

169
00:09:20,160 --> 00:09:25,899
we identified that a dynamic cast of a

170
00:09:25,899 --> 00:09:29,520
notification formula cell notification

171
00:09:29,520 --> 00:09:32,290
where the cell actually was already

172
00:09:32,290 --> 00:09:34,690
notified before so actually did not have

173
00:09:34,690 --> 00:09:37,180
to do anything but to determine that it

174
00:09:37,180 --> 00:09:39,010
doesn't have to do anything it had to a

175
00:09:39,010 --> 00:09:41,380
dynamic cast the hint that was passed in

176
00:09:41,380 --> 00:09:45,370
because the the simple hand we we use is

177
00:09:45,370 --> 00:09:47,829
just a simple hand without any data and

178
00:09:47,829 --> 00:09:50,529
and any other hand we use has some data

179
00:09:50,529 --> 00:09:53,709
on it is derived from that simple and so

180
00:09:53,709 --> 00:09:57,670
it it always had to dynamic cast they

181
00:09:57,670 --> 00:10:00,490
had before it could determine whether it

182
00:10:00,490 --> 00:10:01,209
has to do it

183
00:10:01,209 --> 00:10:07,149
thing or not and with this one commit I

184
00:10:07,149 --> 00:10:09,999
mentioned here I eliminated all these

185
00:10:09,999 --> 00:10:12,639
SFX simple hints throughout the entire

186
00:10:12,639 --> 00:10:19,929
suite and all the SFX hint instead which

187
00:10:19,929 --> 00:10:22,029
was previously derived from the SFX

188
00:10:22,029 --> 00:10:26,050
simple hand and made 150 dynamic are

189
00:10:26,050 --> 00:10:28,740
superfluous in the scenario where we

190
00:10:28,740 --> 00:10:32,259
inserted these rows into the document I

191
00:10:32,259 --> 00:10:35,740
think 20 percent of time was was spent

192
00:10:35,740 --> 00:10:38,709
in jest in this notification or doing

193
00:10:38,709 --> 00:10:41,110
nothing because of the dynamic cast

194
00:10:41,110 --> 00:10:43,360
because it was millions of code because

195
00:10:43,360 --> 00:10:52,389
of all the cells involved the third step

196
00:10:52,389 --> 00:10:56,949
I did was at the part that tracks the

197
00:10:56,949 --> 00:10:58,839
formulas which which means if something

198
00:10:58,839 --> 00:11:01,059
changed in the document like like a data

199
00:11:01,059 --> 00:11:04,029
or some other formula producing results

200
00:11:04,029 --> 00:11:07,240
on which other formulas depend that

201
00:11:07,240 --> 00:11:09,220
these trick formulas was called too

202
00:11:09,220 --> 00:11:11,679
often when when when modifying a

203
00:11:11,679 --> 00:11:13,299
document for example inserting rows

204
00:11:13,299 --> 00:11:18,490
columns whatever due to individual steps

205
00:11:18,490 --> 00:11:21,189
of the modification of the documents

206
00:11:21,189 --> 00:11:23,679
broadcaster changes to these formulas

207
00:11:23,679 --> 00:11:28,480
and and and these on each change the the

208
00:11:28,480 --> 00:11:30,399
formulas will track which depend on

209
00:11:30,399 --> 00:11:35,139
which and just just to get notified when

210
00:11:35,139 --> 00:11:37,720
this was done multiple times so instead

211
00:11:37,720 --> 00:11:41,850
of doing that we just kept track of

212
00:11:41,850 --> 00:11:44,259
collecting and independent pending

213
00:11:44,259 --> 00:11:46,899
formulas and process did they actually

214
00:11:46,899 --> 00:11:50,679
track only once at the end and in this

215
00:11:50,679 --> 00:11:55,179
case the instructors that was sped up by

216
00:11:55,179 --> 00:11:57,999
factor 6 and the war track speed up by

217
00:11:57,999 --> 00:12:01,389
factor to again that this is in complex

218
00:12:01,389 --> 00:12:04,170
documents is nothing you will see in

219
00:12:04,170 --> 00:12:08,309
smaller documents or something

220
00:12:08,459 --> 00:12:12,309
but in large arguments a very short

221
00:12:12,309 --> 00:12:15,699
example only little innocent piece of

222
00:12:15,699 --> 00:12:20,199
code is caught in a trailer has a trip

223
00:12:20,199 --> 00:12:22,449
and this has a trip is caught for

224
00:12:22,449 --> 00:12:25,899
various scenarios just to find out if a

225
00:12:25,899 --> 00:12:28,839
block of rows within one column has a

226
00:12:28,839 --> 00:12:34,329
specific attribute for example during

227
00:12:34,329 --> 00:12:39,249
the profiling turned out that of what of

228
00:12:39,249 --> 00:12:44,100
this 36 million times this was called

229
00:12:44,100 --> 00:12:48,519
only nine thousand two hundred times Row

230
00:12:48,519 --> 00:12:50,350
one and Row two actually different so

231
00:12:50,350 --> 00:12:52,269
normally this piece of code is called

232
00:12:52,269 --> 00:12:54,910
for one cell not for a block which means

233
00:12:54,910 --> 00:12:58,869
we can just spare one search so we had

234
00:12:58,869 --> 00:13:01,179
two searches before for each row one row

235
00:13:01,179 --> 00:13:05,790
two and now we do the second only for

236
00:13:05,790 --> 00:13:08,170
for the case that the two rows actually

237
00:13:08,170 --> 00:13:12,089
differs for then in the query which can

238
00:13:12,089 --> 00:13:15,339
save quite some time if you have lots of

239
00:13:15,339 --> 00:13:19,269
attribute in one column I've known

240
00:13:19,269 --> 00:13:21,040
numbers for that but it actually said

241
00:13:21,040 --> 00:13:22,989
and just spotted they at the time

242
00:13:22,989 --> 00:13:27,369
they're yeah I speed it a little bit up

243
00:13:27,369 --> 00:13:27,730
here

244
00:13:27,730 --> 00:13:35,040
and I'm already at the end any questions

245
00:13:36,389 --> 00:13:44,980
just enough number the big number it was

246
00:13:44,980 --> 00:13:49,360
from profiling just occurred to me that

247
00:13:49,360 --> 00:13:51,910
one wanna browse these profile results

248
00:13:51,910 --> 00:13:55,000
that we call this function that many

249
00:13:55,000 --> 00:13:58,600
times and then you get this annotation

250
00:13:58,600 --> 00:14:01,540
which line of the code is called how

251
00:14:01,540 --> 00:14:04,260
many times and so on and I spotted that

252
00:14:04,260 --> 00:14:06,880
the search function was actually called

253
00:14:06,880 --> 00:14:09,820
for every time but actually the other

254
00:14:09,820 --> 00:14:11,680
pieces that belong to the same code

255
00:14:11,680 --> 00:14:17,699
weren't so one of them was superfluous

256
00:14:23,800 --> 00:14:26,030
no thank you

257
00:14:26,030 --> 00:14:33,630
[Applause]

