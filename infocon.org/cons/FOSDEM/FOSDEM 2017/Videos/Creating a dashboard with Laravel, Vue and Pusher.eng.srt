1
00:00:00,170 --> 00:00:03,379
[Music]

2
00:00:05,170 --> 00:00:07,520
hello that's better

3
00:00:07,520 --> 00:00:10,100
hello good afternoon Folsom I hope

4
00:00:10,100 --> 00:00:13,430
you're having a great conference if you

5
00:00:13,430 --> 00:00:15,590
just joined us in this room welcome to

6
00:00:15,590 --> 00:00:19,160
the PHP and friends there Froome I'm

7
00:00:19,160 --> 00:00:21,140
going to talk about a dashboard I

8
00:00:21,140 --> 00:00:24,470
created using a la Rafael view and

9
00:00:24,470 --> 00:00:26,870
pusher so if that's the talk you want to

10
00:00:26,870 --> 00:00:29,900
see keeping your seats

11
00:00:29,900 --> 00:00:32,450
I am fake from the hater I am a partner

12
00:00:32,450 --> 00:00:34,489
and a developer at a company called Spa

13
00:00:34,489 --> 00:00:38,480
see like many of you probably I'm active

14
00:00:38,480 --> 00:00:41,450
on twitter my handle is fake Marissa and

15
00:00:41,450 --> 00:00:43,850
I have my blog murdered OBE where I talk

16
00:00:43,850 --> 00:00:46,220
about modern beach B development and

17
00:00:46,220 --> 00:00:50,570
Laura fell I also organize the local

18
00:00:50,570 --> 00:00:54,920
beach be Antwerp group user group

19
00:00:54,920 --> 00:00:58,579
together with days and Frederic if you

20
00:00:58,579 --> 00:01:01,219
ever want to talk at PHP enter up let me

21
00:01:01,219 --> 00:01:04,640
know now my company's Posse has been

22
00:01:04,640 --> 00:01:08,509
around since 2003 we built websites

23
00:01:08,509 --> 00:01:10,999
applications their web shops our team is

24
00:01:10,999 --> 00:01:13,429
quite small we consist of four

25
00:01:13,429 --> 00:01:15,799
developers and one manager and we

26
00:01:15,799 --> 00:01:19,579
specialize in laravel development now we

27
00:01:19,579 --> 00:01:21,709
are looking for a new colleague so if

28
00:01:21,709 --> 00:01:24,649
you know somebody that is a very good

29
00:01:24,649 --> 00:01:26,990
from tender front-end developer or if

30
00:01:26,990 --> 00:01:28,549
you are very good from the end developer

31
00:01:28,549 --> 00:01:33,200
yourself let me do first before I want

32
00:01:33,200 --> 00:01:38,439
to talk a bit about open source software

33
00:01:38,439 --> 00:01:42,469
now my company he uses a lot of open

34
00:01:42,469 --> 00:01:44,240
source software from day to day we use

35
00:01:44,240 --> 00:01:47,929
nginx we use Ubuntu use laravel and for

36
00:01:47,929 --> 00:01:53,299
this we are very grateful we we owe our

37
00:01:53,299 --> 00:01:55,219
company couldn't really exist without

38
00:01:55,219 --> 00:01:57,259
open source software and I'm pretty

39
00:01:57,259 --> 00:02:00,560
certain that many of you have your jobs

40
00:02:00,560 --> 00:02:02,060
you do the fact that open source

41
00:02:02,060 --> 00:02:05,149
software exists now because we are so

42
00:02:05,149 --> 00:02:07,159
grateful for this we want to give some

43
00:02:07,159 --> 00:02:11,020
back to and we are pretty heavily

44
00:02:11,020 --> 00:02:15,620
creating open source PHP packages right

45
00:02:15,620 --> 00:02:17,400
now we have 90 pack

46
00:02:17,400 --> 00:02:20,189
certain packages they have been

47
00:02:20,189 --> 00:02:23,189
downloaded for now almost an two million

48
00:02:23,189 --> 00:02:26,189
times and there are being downloaded at

49
00:02:26,189 --> 00:02:30,659
the rate or of 270,000 times a month now

50
00:02:30,659 --> 00:02:33,239
creating open-source software has a lot

51
00:02:33,239 --> 00:02:35,730
of benefits we learn a lot by doing it

52
00:02:35,730 --> 00:02:37,530
and we learn a lot by the feedback we

53
00:02:37,530 --> 00:02:41,310
get from the community from from the

54
00:02:41,310 --> 00:02:43,680
issues they raised and from the PRS I

55
00:02:43,680 --> 00:02:44,220
open

56
00:02:44,220 --> 00:02:46,670
we are also forced to write

57
00:02:46,670 --> 00:02:48,840
documentation because without good

58
00:02:48,840 --> 00:02:50,849
documentation people wouldn't really use

59
00:02:50,849 --> 00:02:53,519
our software we are forced to write

60
00:02:53,519 --> 00:02:57,540
tests because if we change our software

61
00:02:57,540 --> 00:02:59,190
or we get the are so you want to be

62
00:02:59,190 --> 00:03:01,639
certain that our software still works

63
00:03:01,639 --> 00:03:04,379
and there is also a bit of a commercial

64
00:03:04,379 --> 00:03:06,980
aspect to it as well if you look at our

65
00:03:06,980 --> 00:03:09,599
at our codes then I think you'll

66
00:03:09,599 --> 00:03:12,540
conclude that we know our way around PHP

67
00:03:12,540 --> 00:03:15,030
and laravel very well and of course we

68
00:03:15,030 --> 00:03:17,939
use our own stuff in our own projects as

69
00:03:17,939 --> 00:03:20,909
well there is a big list on our company

70
00:03:20,909 --> 00:03:24,389
sites about with all the packages that

71
00:03:24,389 --> 00:03:27,000
we have that we have published and I

72
00:03:27,000 --> 00:03:29,819
want to humble brag a little bit there's

73
00:03:29,819 --> 00:03:31,799
this website called github rewards that

74
00:03:31,799 --> 00:03:34,949
makes a top of the amount of stars that

75
00:03:34,949 --> 00:03:36,690
the get up organization can receive

76
00:03:36,690 --> 00:03:40,109
right now spiciest is at number 6 for

77
00:03:40,109 --> 00:03:44,090
PHP worldwide at number one is laravel

78
00:03:44,090 --> 00:03:50,790
with an insane amount of stars now about

79
00:03:50,790 --> 00:03:54,030
the dashboard let's take a look at our

80
00:03:54,030 --> 00:03:58,079
office this is our actual office and you

81
00:03:58,079 --> 00:04:00,000
see that in the back there is a

82
00:04:00,000 --> 00:04:04,550
dashboard let's step in a little closer

83
00:04:04,550 --> 00:04:07,640
so this is the dashboard that is hanging

84
00:04:07,640 --> 00:04:10,010
in our office the first thing that I

85
00:04:10,010 --> 00:04:12,380
want to say is that this dashboard is

86
00:04:12,380 --> 00:04:14,960
completely open sourced you can find the

87
00:04:14,960 --> 00:04:17,839
code at this getup repository and this

88
00:04:17,839 --> 00:04:19,550
is actually the actual code that we

89
00:04:19,550 --> 00:04:25,190
deploy to to our server let's take a

90
00:04:25,190 --> 00:04:31,040
look what the dashboard displays I'm

91
00:04:31,040 --> 00:04:32,900
gonna pull up a chair that's easier for

92
00:04:32,900 --> 00:04:35,480
me because I'm going to code a little

93
00:04:35,480 --> 00:04:39,950
bit too so the first style of the

94
00:04:39,950 --> 00:04:44,600
dashboard that is that is a Twitter

95
00:04:44,600 --> 00:04:46,750
stream and it displays all the tweets

96
00:04:46,750 --> 00:04:50,450
that mention one of our reports or our

97
00:04:50,450 --> 00:04:54,940
company Twitter account the second tile

98
00:04:54,940 --> 00:04:58,850
there is displayed all the events that

99
00:04:58,850 --> 00:05:01,940
are important for our company that info

100
00:05:01,940 --> 00:05:06,200
is fetched from a Google Calendar these

101
00:05:06,200 --> 00:05:09,530
next four tiles they contain the tasks

102
00:05:09,530 --> 00:05:11,690
that each member of our team should be

103
00:05:11,690 --> 00:05:16,190
should be working on this one really

104
00:05:16,190 --> 00:05:17,990
needs no introduction that is just a

105
00:05:17,990 --> 00:05:21,590
clock I mentioned that we are really

106
00:05:21,590 --> 00:05:23,720
proud of our open source work so we

107
00:05:23,720 --> 00:05:27,920
display some statistics about the amount

108
00:05:27,920 --> 00:05:29,930
of packages that get downloaded on our

109
00:05:29,930 --> 00:05:32,480
dashboard so this info is fetched from

110
00:05:32,480 --> 00:05:36,710
from packages now at my company were all

111
00:05:36,710 --> 00:05:39,950
big music lovers so we want to know what

112
00:05:39,950 --> 00:05:41,810
which music is playing and this style

113
00:05:41,810 --> 00:05:43,490
displays the current track that is

114
00:05:43,490 --> 00:05:49,669
playing in our office for this tile last

115
00:05:49,669 --> 00:05:53,150
item is used does everybody know last of

116
00:05:53,150 --> 00:05:58,370
them yeah okay so this next style that

117
00:05:58,370 --> 00:06:00,919
displays the status of our internet

118
00:06:00,919 --> 00:06:02,900
connection if internet is down this tile

119
00:06:02,900 --> 00:06:05,150
will go over it

120
00:06:05,150 --> 00:06:10,550
this style is a 30 minute rain forecast

121
00:06:10,550 --> 00:06:15,040
so it's party we all arrived by bike

122
00:06:15,040 --> 00:06:18,610
and yeah we want to know if it is going

123
00:06:18,610 --> 00:06:21,340
to rain when we when we depart from from

124
00:06:21,340 --> 00:06:25,300
our office so that in total is our

125
00:06:25,300 --> 00:06:28,750
dashboard let's first start with a

126
00:06:28,750 --> 00:06:30,610
high-level overview of how this

127
00:06:30,610 --> 00:06:34,060
dashboard works the dashboard itself is

128
00:06:34,060 --> 00:06:35,710
a single HTML page

129
00:06:35,710 --> 00:06:38,350
and it is displayed in full screen

130
00:06:38,350 --> 00:06:41,500
browser and once it has been loaded up

131
00:06:41,500 --> 00:06:44,590
we won't reload it again because we

132
00:06:44,590 --> 00:06:47,320
don't want to see our screen rebuilt the

133
00:06:47,320 --> 00:06:51,100
whole time so that's why each tile will

134
00:06:51,100 --> 00:06:52,900
be updated with the AMA script

135
00:06:52,900 --> 00:06:55,540
and each style has its has its own

136
00:06:55,540 --> 00:06:58,000
update frequency so the packages style

137
00:06:58,000 --> 00:07:00,760
with the statistics of our packages that

138
00:07:00,760 --> 00:07:03,250
gets updated I think once an hour and

139
00:07:03,250 --> 00:07:05,830
the clock obviously gets updated once a

140
00:07:05,830 --> 00:07:08,920
second now which technology is that we

141
00:07:08,920 --> 00:07:12,910
use for this laravel pusher and few

142
00:07:12,910 --> 00:07:15,880
chairs now a quick show of hands who

143
00:07:15,880 --> 00:07:18,850
uses laravel here in this day to day

144
00:07:18,850 --> 00:07:22,300
work ok quite some hands we use Gugu as

145
00:07:22,300 --> 00:07:25,510
use to push our service before little

146
00:07:25,510 --> 00:07:28,540
less and who used view in one of the

147
00:07:28,540 --> 00:07:32,460
projects ok also a bit of hands cool

148
00:07:32,460 --> 00:07:35,620
I'll go gentle on on everybody so you

149
00:07:35,620 --> 00:07:37,420
don't don't need to know any of those

150
00:07:37,420 --> 00:07:43,000
technologies first larval in case you

151
00:07:43,000 --> 00:07:46,920
don't know larval is a very nice PHP

152
00:07:46,920 --> 00:07:50,350
framework and for this project we use

153
00:07:50,350 --> 00:07:55,120
the latest version of larval 5.4 it is a

154
00:07:55,120 --> 00:07:57,070
lot of relics used to to render that

155
00:07:57,070 --> 00:08:01,060
initial page and laravel will also fetch

156
00:08:01,060 --> 00:08:05,110
the data from external api's so laravel

157
00:08:05,110 --> 00:08:06,670
will reach out to the google calendar

158
00:08:06,670 --> 00:08:10,420
api to the last event API to to get some

159
00:08:10,420 --> 00:08:15,390
information and it will broadcast a

160
00:08:15,390 --> 00:08:19,930
signal whenever new data has been

161
00:08:19,930 --> 00:08:22,240
fetched from an API how does it do that

162
00:08:22,240 --> 00:08:25,900
it will just make an HTTP connection to

163
00:08:25,900 --> 00:08:26,540
the to the

164
00:08:26,540 --> 00:08:28,910
your service will see that a bit later

165
00:08:28,910 --> 00:08:35,000
on to talk to those external api's we

166
00:08:35,000 --> 00:08:38,750
use a few packages the first one spicy

167
00:08:38,750 --> 00:08:40,549
laravel through the streaming API is

168
00:08:40,549 --> 00:08:45,140
used to listen to to Twitter to the to

169
00:08:45,140 --> 00:08:47,300
the real-time stream and to filter out

170
00:08:47,300 --> 00:08:51,050
all tweets mentioning our company

171
00:08:51,050 --> 00:08:54,410
account the second package something we

172
00:08:54,410 --> 00:08:56,240
built ourselves to laravel Google

173
00:08:56,240 --> 00:08:59,810
Calendar it's used to read a Google

174
00:08:59,810 --> 00:09:03,800
Calendar and it isn't that functionality

175
00:09:03,800 --> 00:09:05,900
isn't used in our dashboard but that

176
00:09:05,900 --> 00:09:07,550
package can also write to a Google

177
00:09:07,550 --> 00:09:10,370
Calendar so if you have a project where

178
00:09:10,370 --> 00:09:11,960
you need to integrate Google Calendar

179
00:09:11,960 --> 00:09:15,110
take a look at that package lots of them

180
00:09:15,110 --> 00:09:18,920
now playing that's being used to see

181
00:09:18,920 --> 00:09:21,200
what which track is currently playing in

182
00:09:21,200 --> 00:09:23,810
our office the packages API is a simple

183
00:09:23,810 --> 00:09:26,590
wrapper around the package

184
00:09:26,590 --> 00:09:30,460
around API that packages exposes and

185
00:09:30,460 --> 00:09:33,590
remember those styles with with tasks

186
00:09:33,590 --> 00:09:37,100
for each member of our team those tasks

187
00:09:37,100 --> 00:09:40,190
are administered in in a github

188
00:09:40,190 --> 00:09:43,250
repository in a few markdown files and

189
00:09:43,250 --> 00:09:45,380
we use the Graham Campbell github

190
00:09:45,380 --> 00:09:48,440
package to fetch the content of those

191
00:09:48,440 --> 00:09:51,460
markdown files

192
00:09:51,460 --> 00:09:53,920
the second technology that we use for

193
00:09:53,920 --> 00:09:56,140
our dashboard is the pusher service now

194
00:09:56,140 --> 00:09:59,020
in their own words butcher provides full

195
00:09:59,020 --> 00:10:00,910
duplex communication channels over a

196
00:10:00,910 --> 00:10:03,790
simple TCP connection you might know

197
00:10:03,790 --> 00:10:06,520
this as WebSockets but I like to call

198
00:10:06,520 --> 00:10:09,190
this magic because it really is magic

199
00:10:09,190 --> 00:10:13,899
it's so fast it's it transports the

200
00:10:13,899 --> 00:10:16,600
events from the server to the browser

201
00:10:16,600 --> 00:10:21,100
so when laravel detects a change in the

202
00:10:21,100 --> 00:10:23,110
in the in the data or when it fetches

203
00:10:23,110 --> 00:10:27,240
new data from one of the api's it will

204
00:10:27,240 --> 00:10:30,130
notify the pusher service via HTTP

205
00:10:30,130 --> 00:10:31,870
connection and the pusher service will

206
00:10:31,870 --> 00:10:36,250
fire WebSockets notify our are the other

207
00:10:36,250 --> 00:10:38,740
scripts of of our dashboard we're going

208
00:10:38,740 --> 00:10:40,779
to see the entire flow in just a minute

209
00:10:40,779 --> 00:10:43,870
now pusher will communicate via web

210
00:10:43,870 --> 00:10:46,600
sockets in in real time it's really fast

211
00:10:46,600 --> 00:10:50,320
it does this also in a secure way it not

212
00:10:50,320 --> 00:10:53,110
that our dashboard displays a lot of

213
00:10:53,110 --> 00:10:55,390
sensitive info but we don't really want

214
00:10:55,390 --> 00:10:58,060
the outside world to know which tasks

215
00:10:58,060 --> 00:11:00,760
that our team is working on I should

216
00:11:00,760 --> 00:11:03,670
also mention that the pusher is a is a

217
00:11:03,670 --> 00:11:08,860
paid service but they also provide free

218
00:11:08,860 --> 00:11:12,130
tier and in that free tier you can use I

219
00:11:12,130 --> 00:11:14,140
think two hundred thousand events a day

220
00:11:14,140 --> 00:11:16,330
and the dashboard only needs five

221
00:11:16,330 --> 00:11:18,490
thousand so you're probably good in the

222
00:11:18,490 --> 00:11:20,350
in the free tier if you want to run our

223
00:11:20,350 --> 00:11:24,790
dashboard so the last big piece of

224
00:11:24,790 --> 00:11:29,200
technology - - produces is few Jas puja

225
00:11:29,200 --> 00:11:33,490
is excuse me is as a our script

226
00:11:33,490 --> 00:11:36,040
framework that has gotten a lot of love

227
00:11:36,040 --> 00:11:39,880
from the laravel community lately and I

228
00:11:39,880 --> 00:11:43,540
can certainly understand why just like

229
00:11:43,540 --> 00:11:47,380
laravel focuses on developer happiness

230
00:11:47,380 --> 00:11:52,600
and ease-of-use few Jas does so - it's a

231
00:11:52,600 --> 00:11:55,000
very powerful framework but it's very

232
00:11:55,000 --> 00:11:58,060
easy to to get started with it it's easy

233
00:11:58,060 --> 00:12:02,960
to learn now in each in in our dashboard

234
00:12:02,960 --> 00:12:07,130
each style is its own component in each

235
00:12:07,130 --> 00:12:10,100
component we'll listen for its its own

236
00:12:10,100 --> 00:12:11,960
events so that packages style will

237
00:12:11,960 --> 00:12:15,860
listen for for its own events and when

238
00:12:15,860 --> 00:12:18,890
it receives one of its events when it

239
00:12:18,890 --> 00:12:20,780
here when it hurts that event it will

240
00:12:20,780 --> 00:12:22,820
update itself with the information from

241
00:12:22,820 --> 00:12:25,820
that event and I suit all should also

242
00:12:25,820 --> 00:12:28,520
mention that we use in this project the

243
00:12:28,520 --> 00:12:30,560
latest version of you which is currently

244
00:12:30,560 --> 00:12:38,990
viewed - excuse me so this is a schema

245
00:12:38,990 --> 00:12:41,900
that explains the whole flow so on the

246
00:12:41,900 --> 00:12:44,810
one side we have the external services

247
00:12:44,810 --> 00:12:48,710
laravel will go fetch info from from

248
00:12:48,710 --> 00:12:51,590
that when it finds new info it will

249
00:12:51,590 --> 00:12:55,060
notify pusher via an HTTP connection and

250
00:12:55,060 --> 00:12:58,210
pusher will notify the browser via

251
00:12:58,210 --> 00:13:01,100
WebSockets that something needs to be be

252
00:13:01,100 --> 00:13:03,890
updated so this is the general flow that

253
00:13:03,890 --> 00:13:06,980
you will have to keep in mind now I can

254
00:13:06,980 --> 00:13:09,500
talk a lot about this dashboard but it's

255
00:13:09,500 --> 00:13:12,680
probably more fun if I just demo it to

256
00:13:12,680 --> 00:13:17,360
you what are we going to to talk about

257
00:13:17,360 --> 00:13:19,790
I'm first going to explain how the grid

258
00:13:19,790 --> 00:13:21,470
system work works

259
00:13:21,470 --> 00:13:25,160
so how tiles are positioned on the

260
00:13:25,160 --> 00:13:28,010
dashboard I'm going to explain the clock

261
00:13:28,010 --> 00:13:30,770
tile because that's a very simple tile

262
00:13:30,770 --> 00:13:33,380
it only uses the Alpha script then we

263
00:13:33,380 --> 00:13:35,390
are going to explain a little bit more

264
00:13:35,390 --> 00:13:37,370
difficult title two packages style and

265
00:13:37,370 --> 00:13:39,020
we're going to see the entire flow and

266
00:13:39,020 --> 00:13:42,410
then just for fun we are going to play a

267
00:13:42,410 --> 00:13:44,830
bit around with the Twitter tile as well

268
00:13:44,830 --> 00:13:48,400
now there will be some live coding and

269
00:13:48,400 --> 00:13:52,040
we're going to use an internet

270
00:13:52,040 --> 00:13:54,620
connection so I hope the internet gods

271
00:13:54,620 --> 00:13:58,160
are happy today and hopefully all will

272
00:13:58,160 --> 00:14:04,220
go well okay let's do it let's first

273
00:14:04,220 --> 00:14:07,360
take a look at the dashboard itself and

274
00:14:07,360 --> 00:14:10,880
I hope it's big enough this is a version

275
00:14:10,880 --> 00:14:12,920
of the dashboard that is very like - the

276
00:14:12,920 --> 00:14:15,340
one we have running in

277
00:14:15,340 --> 00:14:16,990
in our office and this one is just

278
00:14:16,990 --> 00:14:21,670
running locally on on my computer let's

279
00:14:21,670 --> 00:14:23,860
take a look at the code that powers this

280
00:14:23,860 --> 00:14:25,690
dashboard we're going to make this a lot

281
00:14:25,690 --> 00:14:31,630
bigger by entering presentation mode and

282
00:14:31,630 --> 00:14:34,900
if you look at the structure of of the

283
00:14:34,900 --> 00:14:38,650
application here then the ones with a

284
00:14:38,650 --> 00:14:41,380
little bit of larval experience will

285
00:14:41,380 --> 00:14:43,210
immediately recognize this as a

286
00:14:43,210 --> 00:14:48,040
chlorophyll application in a larval

287
00:14:48,040 --> 00:14:50,800
application the view side of things

288
00:14:50,800 --> 00:14:53,500
lives in the resources folder in the

289
00:14:53,500 --> 00:14:56,440
subfolder views and we see that we have

290
00:14:56,440 --> 00:14:58,420
a single blade view here

291
00:14:58,420 --> 00:15:01,330
laterz just a few system of a flora fell

292
00:15:01,330 --> 00:15:04,780
and if we open that let me close this

293
00:15:04,780 --> 00:15:07,300
out then you see we have only a very

294
00:15:07,300 --> 00:15:11,590
little bit of HTML here and you can see

295
00:15:11,590 --> 00:15:15,280
here that each HTML tag here represents

296
00:15:15,280 --> 00:15:19,180
a tile from from our dashboard I'm later

297
00:15:19,180 --> 00:15:22,630
going to explain how these tags get

298
00:15:22,630 --> 00:15:26,430
converted to real HTML tags but for now

299
00:15:26,430 --> 00:15:31,180
just let's just put everything here in a

300
00:15:31,180 --> 00:15:34,450
in comments except the current time

301
00:15:34,450 --> 00:15:38,380
title so this piece can go here this

302
00:15:38,380 --> 00:15:45,100
piece can go there let's modify the grid

303
00:15:45,100 --> 00:15:48,640
here and put it in a 1 and see what the

304
00:15:48,640 --> 00:15:52,000
result is you can see that we only have

305
00:15:52,000 --> 00:15:53,980
a clock left in the upper left corner

306
00:15:53,980 --> 00:15:56,800
now you see should see the dashboard a

307
00:15:56,800 --> 00:16:00,010
little bit as an as an excel file where

308
00:16:00,010 --> 00:16:02,320
all the rows are numbered and all the

309
00:16:02,320 --> 00:16:05,230
columns have their letter so a1 is just

310
00:16:05,230 --> 00:16:08,200
in the top if I want to go to the second

311
00:16:08,200 --> 00:16:12,790
row I can just move it to a - it's a row

312
00:16:12,790 --> 00:16:17,950
below this the grid system also has

313
00:16:17,950 --> 00:16:22,000
support for ranges so if I want to make

314
00:16:22,000 --> 00:16:24,630
it a little bit wider and I go from 8

315
00:16:24,630 --> 00:16:29,250
to be too and that's a feature that I

316
00:16:29,250 --> 00:16:34,170
can show off also is that tiles can be

317
00:16:34,170 --> 00:16:37,650
used multiple times so now we have two

318
00:16:37,650 --> 00:16:40,230
clocks here well that's how that works

319
00:16:40,230 --> 00:16:42,270
now for a clock it's a little bit silly

320
00:16:42,270 --> 00:16:46,020
to have to close on this but you see

321
00:16:46,020 --> 00:16:50,190
here that we have multiple get up file

322
00:16:50,190 --> 00:16:53,310
dials for each member of our team so

323
00:16:53,310 --> 00:16:58,230
that's where we use multiple multiple

324
00:16:58,230 --> 00:17:02,010
tiles so that is the grid system it's

325
00:17:02,010 --> 00:17:03,780
quite easy but are there any questions

326
00:17:03,780 --> 00:17:09,649
about it everybody on the same page yes

327
00:17:11,199 --> 00:17:14,529
so the question is is it based on

328
00:17:14,529 --> 00:17:18,368
bootstrap actually I didn't make the the

329
00:17:18,368 --> 00:17:20,579
series as part of this dashboard myself

330
00:17:20,579 --> 00:17:24,249
but I understand that we hand rolled our

331
00:17:24,249 --> 00:17:27,009
own light waste system to to accommodate

332
00:17:27,009 --> 00:17:30,480
this on my blog colleague of mine

333
00:17:30,480 --> 00:17:32,649
explained the inner workings of that

334
00:17:32,649 --> 00:17:35,590
grid system I'll show you the link later

335
00:17:35,590 --> 00:17:36,730
on in the presentation

336
00:17:36,730 --> 00:17:42,279
okay okay let's put the dashboard back

337
00:17:42,279 --> 00:17:45,489
in it's in its original States see that

338
00:17:45,489 --> 00:17:47,159
we don't lose everything

339
00:17:47,159 --> 00:17:49,869
are you back good yep here's the

340
00:17:49,869 --> 00:17:54,549
dashboard again okay let's explain that

341
00:17:54,549 --> 00:17:58,600
current time tile how does that work

342
00:17:58,600 --> 00:18:04,019
well current time isn't really a valid

343
00:18:04,019 --> 00:18:09,029
HTML element by itself but it's signals

344
00:18:09,029 --> 00:18:12,249
to view which component should be

345
00:18:12,249 --> 00:18:16,539
rendered here if I open up the project

346
00:18:16,539 --> 00:18:20,169
again all Yahveh script in a larval

347
00:18:20,169 --> 00:18:21,970
application lives in the resources

348
00:18:21,970 --> 00:18:25,570
folder assets Yahveh script and if I

349
00:18:25,570 --> 00:18:27,759
open up components here and make it a

350
00:18:27,759 --> 00:18:29,950
little bit wider then you can see here

351
00:18:29,950 --> 00:18:32,619
that we have a view component for each

352
00:18:32,619 --> 00:18:36,489
style in our dashboard now if you find

353
00:18:36,489 --> 00:18:38,200
let me open up the current time view

354
00:18:38,200 --> 00:18:42,789
file here a view file is a bit of a

355
00:18:42,789 --> 00:18:45,820
special type of file because it can it

356
00:18:45,820 --> 00:18:49,629
can contain many sorts of information it

357
00:18:49,629 --> 00:18:52,299
contains a little bit of HTML it

358
00:18:52,299 --> 00:18:54,249
contains a little bit of CSS and it

359
00:18:54,249 --> 00:18:56,499
contains a little bit of Yahoo Script

360
00:18:56,499 --> 00:19:00,970
code and that HTML CSS and JavaScript is

361
00:19:00,970 --> 00:19:03,879
all being used to build up a specific

362
00:19:03,879 --> 00:19:07,090
component now in our project because the

363
00:19:07,090 --> 00:19:10,989
CSS is a little bit advanced we chose to

364
00:19:10,989 --> 00:19:14,739
do all the CSS in one file separately so

365
00:19:14,739 --> 00:19:17,669
in this file you see only a bit of HTML

366
00:19:17,669 --> 00:19:22,580
and you see some sameera script you

367
00:19:22,580 --> 00:19:26,800
now this HTML you the template that is

368
00:19:26,800 --> 00:19:31,520
what view is going to use to replace the

369
00:19:31,520 --> 00:19:34,310
current time tag here so current time

370
00:19:34,310 --> 00:19:38,510
gets replaced by the HTML in this

371
00:19:38,510 --> 00:19:41,390
template you can also see that in this

372
00:19:41,390 --> 00:19:43,850
template we have a few placeholders

373
00:19:43,850 --> 00:19:47,000
namely date and time and those

374
00:19:47,000 --> 00:19:53,600
correspond to the state of the view

375
00:19:53,600 --> 00:19:55,880
object so if I scroll a little bit down

376
00:19:55,880 --> 00:19:58,580
then we have here there we have a little

377
00:19:58,580 --> 00:20:02,990
bit of Yahoo script here and at the

378
00:20:02,990 --> 00:20:07,040
heart of every view component lives the

379
00:20:07,040 --> 00:20:09,740
state so these are the two special

380
00:20:09,740 --> 00:20:11,780
properties that we are going to work

381
00:20:11,780 --> 00:20:16,640
around it and if that's that's something

382
00:20:16,640 --> 00:20:19,910
special that fuse few does we have to

383
00:20:19,910 --> 00:20:22,880
aim all binding if we change one of

384
00:20:22,880 --> 00:20:26,300
these variables it will rerender the

385
00:20:26,300 --> 00:20:31,100
HTML so another special function in a

386
00:20:31,100 --> 00:20:33,020
view component is the created function

387
00:20:33,020 --> 00:20:35,120
this function can be a little bit

388
00:20:35,120 --> 00:20:38,540
compared to the to a constructor in a

389
00:20:38,540 --> 00:20:41,480
PHP class it will run whenever the view

390
00:20:41,480 --> 00:20:44,600
component is instantiated so what are we

391
00:20:44,600 --> 00:20:47,120
going to do in the created method we are

392
00:20:47,120 --> 00:20:49,040
going to call a function refresh time

393
00:20:49,040 --> 00:20:52,280
and we are going to call that function

394
00:20:52,280 --> 00:20:55,400
every single second and what happens in

395
00:20:55,400 --> 00:20:58,130
that method refresh time it will just

396
00:20:58,130 --> 00:21:02,660
update the date using well-known Yahveh

397
00:21:02,660 --> 00:21:05,000
script label library moments and it will

398
00:21:05,000 --> 00:21:06,770
update a time and this happens every

399
00:21:06,770 --> 00:21:09,320
second and because we update those

400
00:21:09,320 --> 00:21:13,340
variables and the HTML will be we

401
00:21:13,340 --> 00:21:16,920
rendered that's how this works

402
00:21:16,920 --> 00:21:19,050
does anybody have any questions about

403
00:21:19,050 --> 00:21:22,400
about this how this works

404
00:21:22,400 --> 00:21:28,160
okay then they will move on to another

405
00:21:28,160 --> 00:21:32,970
component the packaged East tile so the

406
00:21:32,970 --> 00:21:35,760
package is style that's this one that's

407
00:21:35,760 --> 00:21:37,890
the one that displays all the package

408
00:21:37,890 --> 00:21:44,430
information here let's open up our tree

409
00:21:44,430 --> 00:21:45,120
here again

410
00:21:45,120 --> 00:21:49,140
and if I go into the laravel application

411
00:21:49,140 --> 00:21:51,360
itself you can see that we have here

412
00:21:51,360 --> 00:21:55,080
folder components and we have a

413
00:21:55,080 --> 00:21:58,260
subdirectory here for every tile that

414
00:21:58,260 --> 00:22:00,690
our dashboard is displaying that needs

415
00:22:00,690 --> 00:22:02,040
some server-side

416
00:22:02,040 --> 00:22:06,740
info let's open up the packages style so

417
00:22:06,740 --> 00:22:10,350
the the the Fitch doors closed I mean so

418
00:22:10,350 --> 00:22:13,980
if I go to the top of this class then

419
00:22:13,980 --> 00:22:19,620
you can see that this class extends a

420
00:22:19,620 --> 00:22:22,620
command I'm going to come back to this

421
00:22:22,620 --> 00:22:25,560
later why this is significance if I go a

422
00:22:25,560 --> 00:22:28,950
little bit below here then we have a

423
00:22:28,950 --> 00:22:32,220
handle function and here this function

424
00:22:32,220 --> 00:22:34,710
is where the actual work will happen so

425
00:22:34,710 --> 00:22:37,160
we are going to instantiate a packages

426
00:22:37,160 --> 00:22:41,150
API and we are going to for perform some

427
00:22:41,150 --> 00:22:47,160
some collection methods to to build up

428
00:22:47,160 --> 00:22:50,310
an array with the totals so how it does

429
00:22:50,310 --> 00:22:51,900
that it's not that important for this

430
00:22:51,900 --> 00:22:54,810
talk but the result of this function is

431
00:22:54,810 --> 00:22:58,710
an is an array with the total amount of

432
00:22:58,710 --> 00:23:01,440
stars the daily downloads murkly

433
00:23:01,440 --> 00:23:03,060
downloads and the total amount of

434
00:23:03,060 --> 00:23:04,860
downloads

435
00:23:04,860 --> 00:23:09,510
and what will happen is with that array

436
00:23:09,510 --> 00:23:13,740
is that it will be passed into an a

437
00:23:13,740 --> 00:23:16,980
Class A totals fetched event class and

438
00:23:16,980 --> 00:23:20,519
if I open up that class what happens

439
00:23:20,519 --> 00:23:25,429
here it's actually very simple so every

440
00:23:25,429 --> 00:23:28,740
role in that array will get mapped to a

441
00:23:28,740 --> 00:23:31,950
public property on on the class why do

442
00:23:31,950 --> 00:23:37,080
we do that well laravel by default when

443
00:23:37,080 --> 00:23:40,980
an event is broadcasted it will use the

444
00:23:40,980 --> 00:23:43,830
public properties of that class as the

445
00:23:43,830 --> 00:23:45,539
properties that should be sent through

446
00:23:45,539 --> 00:23:47,760
through that event we're going to see it

447
00:23:47,760 --> 00:23:53,940
live in a in a minute good so that's how

448
00:23:53,940 --> 00:23:56,970
that works if I go back to fetch totals

449
00:23:56,970 --> 00:24:01,380
I mentioned that fetch totals extended a

450
00:24:01,380 --> 00:24:04,519
command class and that has a signature

451
00:24:04,519 --> 00:24:08,250
now for the people that know who are

452
00:24:08,250 --> 00:24:10,980
available they immediately recognizes as

453
00:24:10,980 --> 00:24:14,549
an artisan command artisan is Laura

454
00:24:14,549 --> 00:24:18,809
fells task runner and one of the cool

455
00:24:18,809 --> 00:24:21,179
features of laravel is that it has a

456
00:24:21,179 --> 00:24:28,889
buildin scheduler as well if I go to our

457
00:24:28,889 --> 00:24:33,360
console into our kernel we can see the

458
00:24:33,360 --> 00:24:35,760
scheduler of laravel and it's actually

459
00:24:35,760 --> 00:24:39,269
quite easy so laravel has a console

460
00:24:39,269 --> 00:24:42,480
kernel with a scheduled function and in

461
00:24:42,480 --> 00:24:44,480
that function you can schedule things

462
00:24:44,480 --> 00:24:49,380
and here the code is a little bit messed

463
00:24:49,380 --> 00:24:51,840
up because the screen is not so so white

464
00:24:51,840 --> 00:24:55,860
but here we can see that we are going to

465
00:24:55,860 --> 00:24:58,289
perform that fetch totals commands

466
00:24:58,289 --> 00:25:00,960
hourly so this command is going to be

467
00:25:00,960 --> 00:25:05,920
around hourly okay

468
00:25:05,920 --> 00:25:09,820
what I'm going to explain next let's

469
00:25:09,820 --> 00:25:11,740
just fire off the command and see and

470
00:25:11,740 --> 00:25:16,120
see what happens if I go to my browser

471
00:25:16,120 --> 00:25:22,630
again and let me clear this out I can

472
00:25:22,630 --> 00:25:24,910
make this any bigger so I hope that it's

473
00:25:24,910 --> 00:25:27,010
big big enough for you or I can make it

474
00:25:27,010 --> 00:25:30,280
a little bigger cool this is the deeper

475
00:25:30,280 --> 00:25:34,210
console at the pusher pusher J s and it

476
00:25:34,210 --> 00:25:41,290
will display every every event that is

477
00:25:41,290 --> 00:25:44,950
that is coming in now if I go to the

478
00:25:44,950 --> 00:25:47,740
command line and if I run artisan here

479
00:25:47,740 --> 00:25:50,500
just then it will display all the tasks

480
00:25:50,500 --> 00:25:53,530
that are registered and if I scroll a

481
00:25:53,530 --> 00:25:55,300
little bit up then you can see here that

482
00:25:55,300 --> 00:25:59,830
we have dashboards dashboard commands

483
00:25:59,830 --> 00:26:02,440
and one of the commands is here

484
00:26:02,440 --> 00:26:06,630
dashboards packages so let's run that

485
00:26:06,630 --> 00:26:13,240
dashboards packages and then hopefully

486
00:26:13,240 --> 00:26:15,760
if the internet gods are willing we are

487
00:26:15,760 --> 00:26:17,890
going to see here the event coming in

488
00:26:17,890 --> 00:26:20,590
you can see here that we have the

489
00:26:20,590 --> 00:26:24,000
information that we have received from

490
00:26:24,000 --> 00:26:29,800
from the larvell application ok let's

491
00:26:29,800 --> 00:26:31,600
take a look at the our script side of

492
00:26:31,600 --> 00:26:35,520
things how this event is being catched

493
00:26:35,520 --> 00:26:41,740
back to the code let's open up the

494
00:26:41,740 --> 00:26:44,350
resource folder again assets Yahveh

495
00:26:44,350 --> 00:26:48,850
scripts components and we can see here

496
00:26:48,850 --> 00:26:51,750
there's a packages statistics component

497
00:26:51,750 --> 00:26:56,980
so it also contains some HTML and it

498
00:26:56,980 --> 00:26:58,990
also contains a little bit of your

499
00:26:58,990 --> 00:27:02,830
script and you can see here that in the

500
00:27:02,830 --> 00:27:08,110
HTML we have a few of those state

501
00:27:08,110 --> 00:27:11,850
properties of the view instance stars

502
00:27:11,850 --> 00:27:16,230
daily monthly downloads and the total

503
00:27:16,230 --> 00:27:18,850
you can see here that the default is

504
00:27:18,850 --> 00:27:22,060
here this is the default state of the

505
00:27:22,060 --> 00:27:26,110
component now you can see here that this

506
00:27:26,110 --> 00:27:28,930
component has a special function get

507
00:27:28,930 --> 00:27:32,230
event handlers and this is what happens

508
00:27:32,230 --> 00:27:38,530
when an event is is arriving a toriyama

509
00:27:38,530 --> 00:27:40,780
script component so whenever the package

510
00:27:40,780 --> 00:27:44,740
is totals fetched events is coming in we

511
00:27:44,740 --> 00:27:46,570
are going to execute the function that

512
00:27:46,570 --> 00:27:49,300
receives a response and we are just

513
00:27:49,300 --> 00:27:51,580
going to take off the the properties of

514
00:27:51,580 --> 00:27:53,530
that response and copy them over to the

515
00:27:53,530 --> 00:27:56,340
internal state of the project and

516
00:27:56,340 --> 00:28:01,150
remember when we update the state of the

517
00:28:01,150 --> 00:28:04,600
view component the HTML will rerender so

518
00:28:04,600 --> 00:28:08,500
as soon as this function is executed new

519
00:28:08,500 --> 00:28:10,930
numbers will will appear on our

520
00:28:10,930 --> 00:28:16,060
dashboard you can see I can prove that

521
00:28:16,060 --> 00:28:23,230
here so I've just run the the packages

522
00:28:23,230 --> 00:28:25,060
command you can see here that the total

523
00:28:25,060 --> 00:28:28,330
now ends on 965 and on our dashboard

524
00:28:28,330 --> 00:28:31,240
there should be here in 965 so he got

525
00:28:31,240 --> 00:28:36,990
that that data if I jump a little bit

526
00:28:36,990 --> 00:28:40,080
deeper here

527
00:28:40,080 --> 00:28:45,930
let's see here then you can see that the

528
00:28:45,930 --> 00:28:48,120
component also has special property

529
00:28:48,120 --> 00:28:52,710
mixing mixing in view is a little bit as

530
00:28:52,710 --> 00:28:56,130
the same as a trade in PHP so it's just

531
00:28:56,130 --> 00:28:58,560
a way to combine some functions and

532
00:28:58,560 --> 00:29:03,300
apply them to to multiple classes let me

533
00:29:03,300 --> 00:29:05,730
open up my tree here again one of the

534
00:29:05,730 --> 00:29:09,810
mixes that we use is echo an echo is is

535
00:29:09,810 --> 00:29:13,530
a library provided by the maker of

536
00:29:13,530 --> 00:29:16,860
laravel to easily work with with

537
00:29:16,860 --> 00:29:20,190
real-time WebSockets connections now if

538
00:29:20,190 --> 00:29:24,360
I open up that makes it so here's the

539
00:29:24,360 --> 00:29:28,100
the echo makes it then you can see that

540
00:29:28,100 --> 00:29:31,590
this mixin provides a special function

541
00:29:31,590 --> 00:29:35,790
namely created and created that's a

542
00:29:35,790 --> 00:29:37,860
function that will execute whenever the

543
00:29:37,860 --> 00:29:40,560
view component is is being instantiated

544
00:29:40,560 --> 00:29:48,000
and it will register the result of that

545
00:29:48,000 --> 00:29:50,700
get event handlers function from from

546
00:29:50,700 --> 00:29:54,210
the component to the echo instance in

547
00:29:54,210 --> 00:29:56,100
the echo instance that's the thing that

548
00:29:56,100 --> 00:29:59,520
does the the communication with with

549
00:29:59,520 --> 00:30:05,160
with push so it will listen for a

550
00:30:05,160 --> 00:30:07,530
specific event and you can see here that

551
00:30:07,530 --> 00:30:11,460
we prepend app events and then the event

552
00:30:11,460 --> 00:30:16,310
name which is packages totals fetched

553
00:30:16,310 --> 00:30:19,380
and whenever that event is coming in we

554
00:30:19,380 --> 00:30:23,760
are going to execute the the handler so

555
00:30:23,760 --> 00:30:25,740
then we are going to execute this

556
00:30:25,740 --> 00:30:28,410
function so that's that's how that works

557
00:30:28,410 --> 00:30:31,080
and note that this event that we are

558
00:30:31,080 --> 00:30:34,530
listening for app events and then

559
00:30:34,530 --> 00:30:38,910
packages totals fetched that is the the

560
00:30:38,910 --> 00:30:42,390
class name of the of the event that was

561
00:30:42,390 --> 00:30:45,690
that was fired so if I go over the

562
00:30:45,690 --> 00:30:48,210
events here the packages defense you can

563
00:30:48,210 --> 00:30:50,430
see her up events packages totals fetch

564
00:30:50,430 --> 00:30:52,950
so that's that's what it's listening

565
00:30:52,950 --> 00:30:56,010
or for that class name that is how that

566
00:30:56,010 --> 00:30:58,500
works I know it's a little bit much

567
00:30:58,500 --> 00:31:00,090
certainly if you don't know your way

568
00:31:00,090 --> 00:31:01,889
around learn overview but are there any

569
00:31:01,889 --> 00:31:07,380
questions about this okay good

570
00:31:07,380 --> 00:31:09,870
clear or totally unclear it's also a

571
00:31:09,870 --> 00:31:16,559
possibility let's take a look at another

572
00:31:16,559 --> 00:31:20,340
aspect of the dashboard so I mentioned

573
00:31:20,340 --> 00:31:23,659
that the flow of the dashboards so that

574
00:31:23,659 --> 00:31:27,929
our dashboard really isn't communicating

575
00:31:27,929 --> 00:31:30,000
with with the server it just listens for

576
00:31:30,000 --> 00:31:33,750
events to update the state so you might

577
00:31:33,750 --> 00:31:36,330
think that if i refresh the dashboard

578
00:31:36,330 --> 00:31:39,690
that it would be empty but it is not all

579
00:31:39,690 --> 00:31:42,149
that all the info is being displayed

580
00:31:42,149 --> 00:31:47,220
here how does that work we have on our

581
00:31:47,220 --> 00:31:49,110
component let me go back to the

582
00:31:49,110 --> 00:31:54,419
component we have another little mix in

583
00:31:54,419 --> 00:31:57,990
here called safe state and I hope I can

584
00:31:57,990 --> 00:32:02,070
get easily to that safe state component

585
00:32:02,070 --> 00:32:05,760
i mixing yeah and that's this is the the

586
00:32:05,760 --> 00:32:08,730
code of that safe state mixing so this

587
00:32:08,730 --> 00:32:14,070
code gets applied on the on the on the

588
00:32:14,070 --> 00:32:16,380
view component as well and it has a

589
00:32:16,380 --> 00:32:19,799
special property called watch and here

590
00:32:19,799 --> 00:32:22,110
you can define a few functions that

591
00:32:22,110 --> 00:32:24,330
should execute whenever the internal

592
00:32:24,330 --> 00:32:27,210
state of of the view component changes

593
00:32:27,210 --> 00:32:30,929
and one of the the things that it will

594
00:32:30,929 --> 00:32:33,000
do whenever data changes is called

595
00:32:33,000 --> 00:32:36,690
function safe State this is that

596
00:32:36,690 --> 00:32:38,730
function safe States let me close it up

597
00:32:38,730 --> 00:32:40,970
that's that's a little bit more clear

598
00:32:40,970 --> 00:32:44,159
and what this thing will do it will just

599
00:32:44,159 --> 00:32:47,399
copy over the data of the component to

600
00:32:47,399 --> 00:32:51,240
local storage whenever data changes and

601
00:32:51,240 --> 00:32:53,880
whenever this component is created it

602
00:32:53,880 --> 00:32:55,980
will call function load States and that

603
00:32:55,980 --> 00:32:58,620
just does the opposite things in a safe

604
00:32:58,620 --> 00:33:00,899
way that's wise that's why there's many

605
00:33:00,899 --> 00:33:04,850
code here so it will copy over

606
00:33:04,850 --> 00:33:07,380
values from local storage to the

607
00:33:07,380 --> 00:33:11,159
internal state so if I open up this here

608
00:33:11,159 --> 00:33:13,620
and I really don't know how to make the

609
00:33:13,620 --> 00:33:16,919
inspector a little bit bigger but if I

610
00:33:16,919 --> 00:33:22,470
go to the local storage used by by these

611
00:33:22,470 --> 00:33:24,780
dashboards you can see here a very small

612
00:33:24,780 --> 00:33:27,570
that each tile has its own entry in the

613
00:33:27,570 --> 00:33:31,799
local storage so now if I just lead this

614
00:33:31,799 --> 00:33:35,370
one packages statistics then you can see

615
00:33:35,370 --> 00:33:37,770
that the packages statistics are back to

616
00:33:37,770 --> 00:33:38,280
zero

617
00:33:38,280 --> 00:33:40,799
maybe this is also a good opportunity to

618
00:33:40,799 --> 00:33:43,020
demonstrate that the dashboard is also

619
00:33:43,020 --> 00:33:46,940
responsive so we can display it in any

620
00:33:46,940 --> 00:33:52,440
TV that you want so that's how those two

621
00:33:52,440 --> 00:33:56,880
to mix-ins work let's go over one more

622
00:33:56,880 --> 00:34:02,250
tile the the packages style first in

623
00:34:02,250 --> 00:34:04,460
code

624
00:34:04,960 --> 00:34:07,600
packages know the Twitter tile the

625
00:34:07,600 --> 00:34:09,369
Twitter tile is actually a very simple

626
00:34:09,369 --> 00:34:12,760
title our package makes it really simple

627
00:34:12,760 --> 00:34:15,119
to work with the Twitter streaming API

628
00:34:15,119 --> 00:34:19,480
so you can just resolve Twitter

629
00:34:19,480 --> 00:34:21,790
streaming API class out of the container

630
00:34:21,790 --> 00:34:24,609
you can listen to the public stream and

631
00:34:24,609 --> 00:34:28,290
whenever a certain word is is mentioned

632
00:34:28,290 --> 00:34:34,199
then an event will will fire off and our

633
00:34:34,199 --> 00:34:38,050
Twitter tile will listen for that event

634
00:34:38,050 --> 00:34:42,010
now I thought it may be fun to not

635
00:34:42,010 --> 00:34:44,409
listen for spicy here but to just listen

636
00:34:44,409 --> 00:34:47,320
to which be for them for a while to see

637
00:34:47,320 --> 00:34:51,609
what is happening there so if I start up

638
00:34:51,609 --> 00:34:55,690
here now the the task that is actually

639
00:34:55,690 --> 00:34:59,970
listening to Twitter dashboards Twitter

640
00:34:59,970 --> 00:35:02,830
so now it's now it's listening for PHP

641
00:35:02,830 --> 00:35:07,589
Folsom and now I need some people that

642
00:35:07,589 --> 00:35:10,630
send a tweet to PHP Folsom and specific

643
00:35:10,630 --> 00:35:13,450
place or if you're on Twitter there's

644
00:35:13,450 --> 00:35:15,700
anybody here and here we have a random

645
00:35:15,700 --> 00:35:17,890
tweet here you can see that it's working

646
00:35:17,890 --> 00:35:21,190
and it's works really fast so it's it

647
00:35:21,190 --> 00:35:29,589
works in in real time so that's that's

648
00:35:29,589 --> 00:35:32,590
how that would that that works

649
00:35:32,590 --> 00:35:38,290
and if I take a look at the code here of

650
00:35:38,290 --> 00:35:46,360
the tile itself resources assets Yahveh

651
00:35:46,360 --> 00:35:52,900
script components Twitter tile there you

652
00:35:52,900 --> 00:35:56,110
can see here that we are going to listen

653
00:35:56,110 --> 00:35:58,780
for an event Twitter mentions and

654
00:35:58,780 --> 00:36:01,540
whenever Twitter is coming up tweets

655
00:36:01,540 --> 00:36:03,640
coming on we are going to add to a

656
00:36:03,640 --> 00:36:05,560
waiting line a waiting line is something

657
00:36:05,560 --> 00:36:07,900
that we built if if a lot of tweets are

658
00:36:07,900 --> 00:36:10,870
coming in then we put them in the

659
00:36:10,870 --> 00:36:13,120
waiting line and they and we just pick

660
00:36:13,120 --> 00:36:15,370
the latest tweet from the waiting line

661
00:36:15,370 --> 00:36:17,500
every five seconds to go on this place

662
00:36:17,500 --> 00:36:20,620
so that they're displaying nicely so if

663
00:36:20,620 --> 00:36:24,180
I go here in the inspector again and

664
00:36:24,180 --> 00:36:28,570
inspect the view here it's a special

665
00:36:28,570 --> 00:36:31,000
plugin for Chrome to display the state

666
00:36:31,000 --> 00:36:34,240
of few components you can see here that

667
00:36:34,240 --> 00:36:37,000
we have a Twitter tile and if I open it

668
00:36:37,000 --> 00:36:38,860
up here then you can see here that there

669
00:36:38,860 --> 00:36:40,420
is now one object in the waiting line

670
00:36:40,420 --> 00:36:42,970
and we've just missed it now it's a nice

671
00:36:42,970 --> 00:36:45,550
on display and now there's one back

672
00:36:45,550 --> 00:36:48,010
again here which is displayed there so

673
00:36:48,010 --> 00:36:50,860
that's how the Twitter the Twitter tile

674
00:36:50,860 --> 00:36:54,160
works cool picture here some some

675
00:36:54,160 --> 00:37:01,300
breathtaking here cool okay maybe one

676
00:37:01,300 --> 00:37:03,340
more technical thing that I can can

677
00:37:03,340 --> 00:37:07,510
demonstrate so the whole presentation

678
00:37:07,510 --> 00:37:10,900
I used the pusher service to get to get

679
00:37:10,900 --> 00:37:16,570
events but there is also another way so

680
00:37:16,570 --> 00:37:19,270
I I chose pusher when building this

681
00:37:19,270 --> 00:37:21,880
dashboard because at that time a year

682
00:37:21,880 --> 00:37:24,520
ago that was the easiest way for me to

683
00:37:24,520 --> 00:37:31,560
use secure WebSocket connections do that

684
00:37:31,560 --> 00:37:34,990
but now with laravel echo laravel echo

685
00:37:34,990 --> 00:37:36,950
is a driver base

686
00:37:36,950 --> 00:37:40,609
library you can just switch out another

687
00:37:40,609 --> 00:37:43,160
to another driver and another service

688
00:37:43,160 --> 00:37:45,410
and now it just happens that somebody

689
00:37:45,410 --> 00:37:48,920
built a node server that just mimics

690
00:37:48,920 --> 00:37:52,339
pusher j/s so you don't need the pusher

691
00:37:52,339 --> 00:37:54,530
service at all if you run that notes

692
00:37:54,530 --> 00:37:57,380
server on your server and that's the

693
00:37:57,380 --> 00:38:00,369
thing that I like to demonstrate now so

694
00:38:00,369 --> 00:38:10,700
if I go to the environment file of of

695
00:38:10,700 --> 00:38:14,720
our project it displays one key here but

696
00:38:14,720 --> 00:38:16,849
below this file there are all my my

697
00:38:16,849 --> 00:38:18,579
private keys and passwords that you guys

698
00:38:18,579 --> 00:38:22,160
won't get to see but if I switch this

699
00:38:22,160 --> 00:38:29,150
off from viral to laravel pusher what

700
00:38:29,150 --> 00:38:31,930
was it called larval pusher server

701
00:38:31,930 --> 00:38:35,800
special server I hope

702
00:38:35,800 --> 00:38:38,800
let me start it sir

703
00:38:38,800 --> 00:38:42,820
no J let me - to prove that I am not

704
00:38:42,820 --> 00:38:45,010
using the push service just turn off my

705
00:38:45,010 --> 00:38:52,360
Wi-Fi laravel echo server echo servers

706
00:38:52,360 --> 00:38:56,800
start let me boot up the server so this

707
00:38:56,800 --> 00:38:58,720
is a node server that just mimics

708
00:38:58,720 --> 00:39:01,780
pushing Jas a lot of a push ups I hope I

709
00:39:01,780 --> 00:39:05,850
typed it correctly and if i refresh now

710
00:39:05,850 --> 00:39:08,580
laravel pusher service is not defined

711
00:39:08,580 --> 00:39:12,480
let me check my comfy file here

712
00:39:12,480 --> 00:39:15,330
broadcasting de varville echo server

713
00:39:15,330 --> 00:39:19,710
okay sorry about that

714
00:39:19,710 --> 00:39:25,090
well I go server and if i refresh now we

715
00:39:25,090 --> 00:39:27,600
still have a dashboard but i'm using

716
00:39:27,600 --> 00:39:32,910
local WebSockets now I also have a task

717
00:39:32,910 --> 00:39:35,260
let me make this a little bit bigger

718
00:39:35,260 --> 00:39:42,070
again dashboard demo - board demo I've

719
00:39:42,070 --> 00:39:45,400
made a task which can send a fake tweet

720
00:39:45,400 --> 00:39:48,520
so it will just send an event with with

721
00:39:48,520 --> 00:39:51,520
with a payload that is just saved in the

722
00:39:51,520 --> 00:39:54,610
file and if I sent it now you can see

723
00:39:54,610 --> 00:39:56,920
here that dashboard is updating so that

724
00:39:56,920 --> 00:40:00,790
we use our our local website cool that's

725
00:40:00,790 --> 00:40:03,790
how how that works

726
00:40:03,790 --> 00:40:06,960
so cool

727
00:40:06,960 --> 00:40:09,340
the live coding worked the internet

728
00:40:09,340 --> 00:40:19,600
connection worked I'm happy go okay

729
00:40:19,600 --> 00:40:24,940
know a few other points to cover one of

730
00:40:24,940 --> 00:40:26,920
the things that I like to show you is

731
00:40:26,920 --> 00:40:30,070
how we display it on TV and this playing

732
00:40:30,070 --> 00:40:33,820
on TV is is quite simple actually we use

733
00:40:33,820 --> 00:40:36,790
a Raspberry Pi 2 for that that's a

734
00:40:36,790 --> 00:40:39,880
little device that just lives behind our

735
00:40:39,880 --> 00:40:43,300
TV and what the cool thing is about the

736
00:40:43,300 --> 00:40:46,000
Raspberry Pi is besides that it's it's

737
00:40:46,000 --> 00:40:48,820
it's really cheap it's only thirty bucks

738
00:40:48,820 --> 00:40:52,300
or so is that it can be powered through

739
00:40:52,300 --> 00:40:56,020
an USB port from our TV itself so we

740
00:40:56,020 --> 00:40:59,020
don't have any extra cords behind behind

741
00:40:59,020 --> 00:41:04,600
that our Raspberry Pi just uses raspbian

742
00:41:04,600 --> 00:41:07,120
chassis which is the default operating

743
00:41:07,120 --> 00:41:09,370
system of a Raspberry Pi and when it

744
00:41:09,370 --> 00:41:14,860
builds up it will just start up a

745
00:41:14,860 --> 00:41:18,070
chromium browser which is the the engine

746
00:41:18,070 --> 00:41:21,150
that powers Chrome and it will show the

747
00:41:21,150 --> 00:41:24,550
dashboard in full-screen mode now I have

748
00:41:24,550 --> 00:41:27,760
brought a copy of our dashboard here but

749
00:41:27,760 --> 00:41:30,250
we don't have the right cable to

750
00:41:30,250 --> 00:41:33,880
connected to the to the display but I

751
00:41:33,880 --> 00:41:38,260
made a little movie at home that that I

752
00:41:38,260 --> 00:41:42,270
can show you how it starts up

753
00:41:42,270 --> 00:41:45,210
and for me this is a much less stressful

754
00:41:45,210 --> 00:41:47,250
because I know that this movie that in

755
00:41:47,250 --> 00:41:48,869
the end it will work out and with this

756
00:41:48,869 --> 00:41:51,180
it's always a little bit I hope it'll

757
00:41:51,180 --> 00:41:56,550
work so now I've just put it in put its

758
00:41:56,550 --> 00:41:58,950
its power in so now it's a it's it's

759
00:41:58,950 --> 00:42:01,710
powering up it's now trying to look for

760
00:42:01,710 --> 00:42:04,349
an internet connection it will find that

761
00:42:04,349 --> 00:42:07,349
so that's I know it will find it and now

762
00:42:07,349 --> 00:42:12,300
it will start up its its user interface

763
00:42:12,300 --> 00:42:14,580
and in the middle you'll see a terminal

764
00:42:14,580 --> 00:42:16,589
window and in the terminal window there

765
00:42:16,589 --> 00:42:19,260
is a script running that will open up

766
00:42:19,260 --> 00:42:23,760
Chrome and display our dashboard so

767
00:42:23,760 --> 00:42:26,250
that's it's going to do that in in just

768
00:42:26,250 --> 00:42:28,740
a minute hopefully should speed this

769
00:42:28,740 --> 00:42:32,160
movie a little bit up I think yeah but

770
00:42:32,160 --> 00:42:33,960
in real life it's also a little bit slow

771
00:42:33,960 --> 00:42:36,750
but once it displaying it it works very

772
00:42:36,750 --> 00:42:38,849
nice so and this is the dashboard that

773
00:42:38,849 --> 00:42:41,099
has been started up an older version

774
00:42:41,099 --> 00:42:42,630
without the Twitter tile the Twitter

775
00:42:42,630 --> 00:42:45,690
tile is only a week old or something so

776
00:42:45,690 --> 00:42:48,619
that's how that works

777
00:42:50,030 --> 00:42:53,400
if you liked everything that you you see

778
00:42:53,400 --> 00:42:56,670
that you saw you can try at the

779
00:42:56,670 --> 00:42:58,770
dashboard out for yourself I've

780
00:42:58,770 --> 00:43:00,420
mentioned that we've open sourced it

781
00:43:00,420 --> 00:43:03,950
it's it's code is a github repository

782
00:43:03,950 --> 00:43:08,010
I've also written an extensive blog post

783
00:43:08,010 --> 00:43:09,690
about it on my blog that's the first

784
00:43:09,690 --> 00:43:12,410
link and a colleague colleague of mine

785
00:43:12,410 --> 00:43:17,070
wrote a post about how that grid system

786
00:43:17,070 --> 00:43:18,660
works so if you're interested in that

787
00:43:18,660 --> 00:43:20,359
check that out

788
00:43:20,359 --> 00:43:24,210
now I've talked here the whole time so

789
00:43:24,210 --> 00:43:26,010
you might think hey this guy can do

790
00:43:26,010 --> 00:43:28,859
everything but the I have not made this

791
00:43:28,859 --> 00:43:31,380
dashboard myself it was a team effort so

792
00:43:31,380 --> 00:43:34,230
my colleague will he provided two looks

793
00:43:34,230 --> 00:43:37,050
of dashboard he made it look very pretty

794
00:43:37,050 --> 00:43:39,480
and he designed a great system and my

795
00:43:39,480 --> 00:43:42,900
colleague Sebastian he cleaned up all my

796
00:43:42,900 --> 00:43:45,510
crappy Yahoo Script code and I made that

797
00:43:45,510 --> 00:43:49,500
made that good if you want to learn more

798
00:43:49,500 --> 00:43:51,570
about working with the dashboard I

799
00:43:51,570 --> 00:43:53,880
suggest that you just head over to the

800
00:43:53,880 --> 00:43:55,240
home pages of the techno

801
00:43:55,240 --> 00:43:56,650
geez that we use that you check out the

802
00:43:56,650 --> 00:43:59,440
documentation of laravel pusher and view

803
00:43:59,440 --> 00:44:01,540
Jas and if you want to learn more about

804
00:44:01,540 --> 00:44:05,680
view I can really recommend view cast

805
00:44:05,680 --> 00:44:10,270
calm which is a video course on service

806
00:44:10,270 --> 00:44:12,640
called lower costs where a guy called

807
00:44:12,640 --> 00:44:14,260
Jeffrey way provides the best

808
00:44:14,260 --> 00:44:18,600
introduction to to view J as possible

809
00:44:18,600 --> 00:44:22,119
now if you want to use a dashboard but

810
00:44:22,119 --> 00:44:24,550
aren't interesting aren't interested

811
00:44:24,550 --> 00:44:26,380
into thinking with our code there are

812
00:44:26,380 --> 00:44:29,320
many alternatives like gecko boards

813
00:44:29,320 --> 00:44:32,080
Saifee and Razer flow those are hosted

814
00:44:32,080 --> 00:44:34,690
services where you can just click your

815
00:44:34,690 --> 00:44:37,420
own dashboard together or you can opt to

816
00:44:37,420 --> 00:44:41,770
use dashing dot io it's built it was

817
00:44:41,770 --> 00:44:44,800
built by Shopify it's a it's a ruby

818
00:44:44,800 --> 00:44:48,430
based dashboard it's a no longer

819
00:44:48,430 --> 00:44:51,760
maintains but it works really great we

820
00:44:51,760 --> 00:44:54,520
used that dashboard before building our

821
00:44:54,520 --> 00:44:56,590
own and we used many of the principles

822
00:44:56,590 --> 00:44:58,810
that we saw in dashing to build our own

823
00:44:58,810 --> 00:45:02,920
dashboard and with that I've said

824
00:45:02,920 --> 00:45:04,990
everything I want to say about our

825
00:45:04,990 --> 00:45:07,960
project do you have any questions about

826
00:45:07,960 --> 00:45:11,190
this time

827
00:45:12,859 --> 00:45:15,459
yes

828
00:45:24,810 --> 00:45:26,870
Oh

829
00:45:30,619 --> 00:45:35,089
yeah so the question is why do we use

830
00:45:35,089 --> 00:45:37,279
WebSockets and push reserves instead of

831
00:45:37,279 --> 00:45:40,940
letting the JavaScript just communicate

832
00:45:40,940 --> 00:45:46,339
with with the server I think the first

833
00:45:46,339 --> 00:45:48,890
reason that comes to mind is we want to

834
00:45:48,890 --> 00:45:50,589
play around with WebSockets

835
00:45:50,589 --> 00:45:54,289
the we want to get our feet a little bit

836
00:45:54,289 --> 00:45:58,609
wet with using the technology and also

837
00:45:58,609 --> 00:46:00,469
because of the real-time part because we

838
00:46:00,469 --> 00:46:02,869
don't want to bowl a server now a spa

839
00:46:02,869 --> 00:46:04,849
see is a very small company we have only

840
00:46:04,849 --> 00:46:09,579
one office but imagine that we have

841
00:46:09,579 --> 00:46:12,710
thousand dashboards then we drops

842
00:46:12,710 --> 00:46:16,069
WebSockets for a server that that that

843
00:46:16,069 --> 00:46:18,259
isn't really a problem because those

844
00:46:18,259 --> 00:46:20,900
dashboard will never go to the server so

845
00:46:20,900 --> 00:46:24,380
it's very scalable in in this way as

846
00:46:24,380 --> 00:46:27,549
well and that's why why we chose

847
00:46:27,549 --> 00:46:33,009
WebSockets okay yes

848
00:46:34,880 --> 00:46:37,069
so which server which service that we

849
00:46:37,069 --> 00:46:40,910
are using for the ring forecast that is

850
00:46:40,910 --> 00:46:43,609
a barrier Alda that's a that's a

851
00:46:43,609 --> 00:46:44,900
well-known thing they have that they

852
00:46:44,900 --> 00:46:47,440
were a very crappy AAPI I should mention

853
00:46:47,440 --> 00:46:50,180
but but it works well but the formatting

854
00:46:50,180 --> 00:46:52,520
the VGA sent data is really horrible

855
00:46:52,520 --> 00:46:55,869
but it works so it's by

856
00:47:19,880 --> 00:47:22,919
[Music]

857
00:47:31,539 --> 00:47:36,920
so the question is how did we get to use

858
00:47:36,920 --> 00:47:50,930
here or name space yeah I call this this

859
00:47:50,930 --> 00:47:56,450
gets called by the by the scheduler this

860
00:47:56,450 --> 00:48:01,039
this one you know what after the talk

861
00:48:01,039 --> 00:48:04,789
I'll go with you a bit through the codes

862
00:48:04,789 --> 00:48:07,880
and then we can just solve your question

863
00:48:07,880 --> 00:48:13,420
with the code at hand okay yes

864
00:48:18,870 --> 00:48:21,870
yep

865
00:48:31,140 --> 00:48:37,720
yeah it's not possible with the code as

866
00:48:37,720 --> 00:48:40,960
is but it can be easily modified so you

867
00:48:40,960 --> 00:48:48,400
can if you have a dashboards on your

868
00:48:48,400 --> 00:48:50,980
server that needs to display certain

869
00:48:50,980 --> 00:48:53,350
things then you can just put it in the

870
00:48:53,350 --> 00:48:54,970
environment file so this dashboard

871
00:48:54,970 --> 00:48:58,150
should display only the tasks for this

872
00:48:58,150 --> 00:49:01,300
amount of people and just let your Yahoo

873
00:49:01,300 --> 00:49:02,970
Script side of things read that

874
00:49:02,970 --> 00:49:06,970
environment variable so it doesn't have

875
00:49:06,970 --> 00:49:08,410
built-in support for that but it's

876
00:49:08,410 --> 00:49:12,450
easily extendable to fit that use case

877
00:49:12,450 --> 00:49:33,880
yes I'm not TV specialist but I think I

878
00:49:33,880 --> 00:49:36,400
hate Smart TVs I want my TV to be as

879
00:49:36,400 --> 00:49:39,190
dumb as they as they can be because that

880
00:49:39,190 --> 00:49:41,620
software on it is going to get older so

881
00:49:41,620 --> 00:49:43,780
I really don't know if that if there's a

882
00:49:43,780 --> 00:49:46,390
TV with with the browser builds built-in

883
00:49:46,390 --> 00:49:48,820
for that that you'll have to investigate

884
00:49:48,820 --> 00:49:50,830
on your own but why would you need a

885
00:49:50,830 --> 00:49:52,650
smart TV you don't need the Smart TV

886
00:49:52,650 --> 00:49:56,220
that's just me

887
00:49:58,540 --> 00:50:04,910
okay well I guess we are done then so

888
00:50:04,910 --> 00:50:07,490
thank you for coming to my talk you can

889
00:50:07,490 --> 00:50:10,299
review the slides

890
00:50:15,220 --> 00:50:17,770
you can review the slides on speaker

891
00:50:17,770 --> 00:50:21,130
deck take a look at the open source work

892
00:50:21,130 --> 00:50:23,800
that's my company has done also take a

893
00:50:23,800 --> 00:50:26,050
look at my blog Merced OBE and if you're

894
00:50:26,050 --> 00:50:28,480
a newsletter type of kind of a guy or

895
00:50:28,480 --> 00:50:30,970
girl just to subscribe to that

896
00:50:30,970 --> 00:50:33,359
thank you

