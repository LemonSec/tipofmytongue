1
00:00:04,590 --> 00:00:12,570
okay hello everybody I am going to talk

2
00:00:12,570 --> 00:00:15,270
about a personal project of mine called

3
00:00:15,270 --> 00:00:19,800
schema but first I'm gonna say a few

4
00:00:19,800 --> 00:00:23,660
words about me my name is emanuel simon

5
00:00:23,660 --> 00:00:28,199
i'm a sysadmin by trade so when i don't

6
00:00:28,199 --> 00:00:30,150
do a lot of coding but when I do I

7
00:00:30,150 --> 00:00:33,960
prefer it be pro and it usually comes

8
00:00:33,960 --> 00:00:39,630
out as a Python I live in Paris

9
00:00:39,630 --> 00:00:42,420
so I'm a member of the Paris promo group

10
00:00:42,420 --> 00:00:45,360
I'm a member of peri nukes the Paris

11
00:00:45,360 --> 00:00:51,390
Linux user group I'm a contributor to

12
00:00:51,390 --> 00:00:56,040
bugzilla does anybody know what Bugzilla

13
00:00:56,040 --> 00:00:59,430
is if you do not know what button is you

14
00:00:59,430 --> 00:01:09,619
want the wrong talk a few years ago I

15
00:01:09,619 --> 00:01:11,399
contributed to bugzilla

16
00:01:11,399 --> 00:01:14,159
a lot more than I do now and there was

17
00:01:14,159 --> 00:01:17,549
one website that I found very useful

18
00:01:17,549 --> 00:01:20,969
which is the one that I have the one

19
00:01:20,969 --> 00:01:24,990
with the URL behind me and this is a web

20
00:01:24,990 --> 00:01:27,030
application that will allow you to

21
00:01:27,030 --> 00:01:29,399
choose a version of Mozilla click Submit

22
00:01:29,399 --> 00:01:31,289
and get a web page that documents the

23
00:01:31,289 --> 00:01:34,409
schema of the database that that version

24
00:01:34,409 --> 00:01:37,590
of bugzilla uses so you get a list of

25
00:01:37,590 --> 00:01:39,840
every single table for every single

26
00:01:39,840 --> 00:01:41,490
table you get all the columns you get

27
00:01:41,490 --> 00:01:43,889
all the column types and additional

28
00:01:43,889 --> 00:01:47,429
information and I found this useful

29
00:01:47,429 --> 00:01:49,649
I kept coming back to it back and back

30
00:01:49,649 --> 00:01:55,799
time and time again so this was useful

31
00:01:55,799 --> 00:01:58,770
but it had a few problems to go along

32
00:01:58,770 --> 00:02:02,959
with it the first one is that it

33
00:02:16,250 --> 00:02:23,590
is and there was no there was no

34
00:02:23,590 --> 00:02:26,630
possibility to reuse code from Bugzilla

35
00:02:26,630 --> 00:02:30,440
in Bugzilla schema and it it was just a

36
00:02:30,440 --> 00:02:37,090
waste of up opportunity more importantly

37
00:02:37,090 --> 00:02:39,560
Raven book the company that was behind

38
00:02:39,560 --> 00:02:42,770
but the schema stopped supporting it

39
00:02:42,770 --> 00:02:45,500
because they didn't have a business

40
00:02:45,500 --> 00:02:48,470
model for it so they stopped adding

41
00:02:48,470 --> 00:02:51,380
versions of bugzilla in 2009 which means

42
00:02:51,380 --> 00:02:53,180
that the last version of Bugzilla for

43
00:02:53,180 --> 00:02:55,310
which you can get the documentation for

44
00:02:55,310 --> 00:02:57,830
the database schema is three point four

45
00:02:57,830 --> 00:03:01,040
point two to give you an idea we're now

46
00:03:01,040 --> 00:03:03,320
on five zero three and there's an

47
00:03:03,320 --> 00:03:04,700
unstable version core

48
00:03:04,700 --> 00:03:07,850
numbered five one one which is out so

49
00:03:07,850 --> 00:03:11,720
the whole of this is old and no longer

50
00:03:11,720 --> 00:03:21,739
very useful i've copy pasted some words

51
00:03:21,739 --> 00:03:24,470
a sentence from the readme the code was

52
00:03:24,470 --> 00:03:33,230
written was written in a manner adding a

53
00:03:33,230 --> 00:03:35,720
version of bugzilla is relatively

54
00:03:35,720 --> 00:03:39,799
complex it requires you to add that

55
00:03:39,799 --> 00:03:41,890
version of bugzilla in four separate

56
00:03:41,890 --> 00:03:44,840
locations in the code and that's if

57
00:03:44,840 --> 00:03:47,030
there are no changes between in the box

58
00:03:47,030 --> 00:03:49,340
a desk in the database schema between

59
00:03:49,340 --> 00:03:50,750
that version and the version that

60
00:03:50,750 --> 00:03:54,739
immediately precedes it so this is a

61
00:03:54,739 --> 00:03:56,930
pain in the backside which is why they

62
00:03:56,930 --> 00:03:59,990
stopped maintaining it actually

63
00:03:59,990 --> 00:04:02,580
so problems

64
00:04:02,580 --> 00:04:06,200
thankfully they all have solutions the

65
00:04:06,200 --> 00:04:08,130
solution to the fact that it's written

66
00:04:08,130 --> 00:04:12,290
in Python is simply to put it to pro

67
00:04:13,310 --> 00:04:17,100
they actually uploaded to the code to

68
00:04:17,100 --> 00:04:21,390
github a few years back saying you can

69
00:04:21,390 --> 00:04:28,170
focus if if you want so I did adding

70
00:04:28,170 --> 00:04:30,630
adding a version of Bugzilla is complex

71
00:04:30,630 --> 00:04:34,140
so let's try and make it as simple as

72
00:04:34,140 --> 00:04:37,110
possible ideally you'll have you would

73
00:04:37,110 --> 00:04:40,320
have a data structure that contains all

74
00:04:40,320 --> 00:04:42,210
the versions of Bugzilla and when you

75
00:04:42,210 --> 00:04:43,890
want to add a new version you'll simply

76
00:04:43,890 --> 00:04:46,500
add one entry to that data structure and

77
00:04:46,500 --> 00:04:49,820
be done with it

78
00:04:50,520 --> 00:04:54,210
code is hard to maintain well that the

79
00:04:54,210 --> 00:04:56,940
solution solution to that one is writing

80
00:04:56,940 --> 00:04:59,550
as little code as possible and in pro

81
00:04:59,550 --> 00:05:01,800
speak that means using Sipan as much as

82
00:05:01,800 --> 00:05:02,720
possible

83
00:05:02,720 --> 00:05:05,280
so these are the guiding principles that

84
00:05:05,280 --> 00:05:14,700
I started with use seaton as much as

85
00:05:14,700 --> 00:05:18,840
possible so I went looking on seaton to

86
00:05:18,840 --> 00:05:22,680
see what modules I could use I needed a

87
00:05:22,680 --> 00:05:26,610
way to talk to databases and get the the

88
00:05:26,610 --> 00:05:31,560
schema out of them there's not a whole

89
00:05:31,560 --> 00:05:34,500
lot of choice on Sipan for that there's

90
00:05:34,500 --> 00:05:38,640
really only one which is gix class which

91
00:05:38,640 --> 00:05:41,190
does an incredible amount of stuff but

92
00:05:41,190 --> 00:05:44,940
also includes a module that is called DB

93
00:05:44,940 --> 00:05:47,760
IX class schema which abstracts the

94
00:05:47,760 --> 00:05:50,310
schema from a database and converts it

95
00:05:50,310 --> 00:05:53,610
to poor code so I thought hey this is

96
00:05:53,610 --> 00:05:57,670
useful let's see what this does

97
00:05:57,670 --> 00:06:00,860
d/dx class has a whole number of

98
00:06:00,860 --> 00:06:03,890
extensions that are also on Sipan one of

99
00:06:03,890 --> 00:06:08,240
these is DB x DB icx auto-doc which

100
00:06:08,240 --> 00:06:11,750
takes a schema object and converts it to

101
00:06:11,750 --> 00:06:16,250
HTML using template toolkit and I

102
00:06:16,250 --> 00:06:18,620
thought hmm that might be useful let's

103
00:06:18,620 --> 00:06:27,160
keep it once I had this I could talk to

104
00:06:27,160 --> 00:06:31,330
talk to database schemas and write HTML

105
00:06:31,330 --> 00:06:34,790
so now I needed a way to to write a

106
00:06:34,790 --> 00:06:42,260
dynamic website I started looking

107
00:06:42,260 --> 00:06:44,090
through it and then gave up because

108
00:06:44,090 --> 00:06:48,650
after 50 possibilities I was drowning in

109
00:06:48,650 --> 00:06:55,460
in choices there are an incredible

110
00:06:55,460 --> 00:06:57,890
number of ways you can write dynamic

111
00:06:57,890 --> 00:07:03,640
websites intro using modules on Japan I

112
00:07:03,640 --> 00:07:06,830
toyed with the big three capitalist

113
00:07:06,830 --> 00:07:10,880
denser to mojolicious and realized that

114
00:07:10,880 --> 00:07:13,760
they all rely on track they're all

115
00:07:13,760 --> 00:07:16,760
plaque up at applications at heart so I

116
00:07:16,760 --> 00:07:20,270
decided to not use any of them and just

117
00:07:20,270 --> 00:07:22,250
write to plaque write a plaque

118
00:07:22,250 --> 00:07:26,210
application directly in hindsight this

119
00:07:26,210 --> 00:07:27,890
probably wasn't a good idea

120
00:07:27,890 --> 00:07:29,630
and I should have stuck with mojolicious

121
00:07:29,630 --> 00:07:38,620
or denser to but hey it is what it is so

122
00:07:40,139 --> 00:07:43,629
first first thing to do right a

123
00:07:43,629 --> 00:07:49,569
proof-of-concept dbi CX g b IX class

124
00:07:49,569 --> 00:07:53,139
comes with a perl script called DB IC

125
00:07:53,139 --> 00:07:55,770
dump this will connect to a database

126
00:07:55,770 --> 00:07:59,830
extract the schema and write the schema

127
00:07:59,830 --> 00:08:04,449
object on on file so hey sounds like

128
00:08:04,449 --> 00:08:06,639
something that useful so this is the

129
00:08:06,639 --> 00:08:10,719
command line I wrote and I had a schema

130
00:08:10,719 --> 00:08:14,800
object on file then I looked at D D IX

131
00:08:14,800 --> 00:08:19,779
auto-doc and DX order doc comes with a

132
00:08:19,779 --> 00:08:22,960
poor script that is called DB icx Auto

133
00:08:22,960 --> 00:08:26,199
doc which takes a schema object on on

134
00:08:26,199 --> 00:08:29,909
file and writes the HTML page that

135
00:08:29,909 --> 00:08:34,990
documents it so I wrote this command

136
00:08:34,990 --> 00:08:40,149
line and I had an HTML page that

137
00:08:40,149 --> 00:08:42,760
documents the schema that is used by the

138
00:08:42,760 --> 00:08:51,310
0 5 0 3 so I was pretty excited about

139
00:08:51,310 --> 00:08:53,260
this I mean I had written two lines of

140
00:08:53,260 --> 00:08:55,360
code which is one line of code more than

141
00:08:55,360 --> 00:08:58,449
I'm used to doing in pro but no mind and

142
00:08:58,449 --> 00:09:03,490
I had proof of concept so I uploaded it

143
00:09:03,490 --> 00:09:08,649
to one of my servers to the IRC Channel

144
00:09:08,649 --> 00:09:11,139
and asked the Mozilla developers if they

145
00:09:11,139 --> 00:09:13,750
found it interesting and this is the

146
00:09:13,750 --> 00:09:19,540
only this is the only response I got

147
00:09:19,540 --> 00:09:31,089
this is Jeff with I always thought it

148
00:09:31,089 --> 00:09:32,769
was great from a technical point of view

149
00:09:32,769 --> 00:09:36,959
but I never really could understand why

150
00:09:36,959 --> 00:09:40,660
who would find it useful and when I

151
00:09:40,660 --> 00:09:44,230
realized that this was the only the only

152
00:09:44,230 --> 00:09:46,870
result I was the only response I was

153
00:09:46,870 --> 00:09:48,760
going to get I decided to stop working

154
00:09:48,760 --> 00:09:50,889
on the project and to focus on something

155
00:09:50,889 --> 00:09:52,540
that would be a little more use

156
00:09:52,540 --> 00:09:58,080
to people this was on the 12th of August

157
00:09:58,080 --> 00:10:01,570
this was the second Wednesday of August

158
00:10:01,570 --> 00:10:03,640
and the second Wednesday of every month

159
00:10:03,640 --> 00:10:05,890
is when the periscope mongers have their

160
00:10:05,890 --> 00:10:08,650
meeting so on that evening I went to the

161
00:10:08,650 --> 00:10:09,130
meeting

162
00:10:09,130 --> 00:10:11,560
we started talking Pro which is what we

163
00:10:11,560 --> 00:10:16,480
usually do at a promo girls meeting and

164
00:10:16,480 --> 00:10:21,160
I told them this story and all the promo

165
00:10:21,160 --> 00:10:22,810
girls who were at the meeting told me

166
00:10:22,810 --> 00:10:25,630
this is a great idea you should keep

167
00:10:25,630 --> 00:10:28,510
working on it and you should take all

168
00:10:28,510 --> 00:10:30,400
the bits are bits and stick them in a

169
00:10:30,400 --> 00:10:33,070
bugzilla module and so that people can

170
00:10:33,070 --> 00:10:35,230
reuse this not only for b'stilla but for

171
00:10:35,230 --> 00:10:43,120
other applications as well so I did well

172
00:10:43,120 --> 00:10:47,800
I I continued working on it then I

173
00:10:47,800 --> 00:10:49,060
realized that the first thing I had to

174
00:10:49,060 --> 00:10:52,150
do was download 200 versions of bugzilla

175
00:10:52,150 --> 00:10:56,500
and install all of them install each one

176
00:10:56,500 --> 00:10:58,120
to the point where I had the database

177
00:10:58,120 --> 00:11:03,280
set up run the ddic dump script I showed

178
00:11:03,280 --> 00:11:07,540
you so that I could get the

179
00:11:07,540 --> 00:11:13,000
corresponding schema object that took

180
00:11:13,000 --> 00:11:18,720
two evenings it started getting

181
00:11:18,720 --> 00:11:21,760
problematic when you start going back to

182
00:11:21,760 --> 00:11:26,080
bugzilla - Oh something the bugs are the

183
00:11:26,080 --> 00:11:28,720
two versions which all go back to 2002

184
00:11:28,720 --> 00:11:29,560
2001

185
00:11:29,560 --> 00:11:31,720
which rely on the pro modules that

186
00:11:31,720 --> 00:11:33,850
existed back then and don't actually

187
00:11:33,850 --> 00:11:41,020
exist now so I asked the promo gives for

188
00:11:41,020 --> 00:11:44,710
a level help and basically we dumped

189
00:11:44,710 --> 00:11:47,740
every single version of pizza

190
00:11:47,740 --> 00:11:49,540
well the schema for every single version

191
00:11:49,540 --> 00:11:52,140
of bugzilla

192
00:11:52,769 --> 00:11:56,189
you end up with a lot of modules in in

193
00:11:56,189 --> 00:11:58,309
this case a lot of schema objects and

194
00:11:58,309 --> 00:12:01,350
most of them are identical because the

195
00:12:01,350 --> 00:12:03,499
stable versions of Bugzilla don't change

196
00:12:03,499 --> 00:12:08,220
the database schema so basically you end

197
00:12:08,220 --> 00:12:10,379
up with a bunch of narada entacle

198
00:12:10,379 --> 00:12:15,089
schemas thankfully dbx class comes with

199
00:12:15,089 --> 00:12:18,989
DB IX class key Madoff which tells you

200
00:12:18,989 --> 00:12:21,470
if two schemas are the same or different

201
00:12:21,470 --> 00:12:26,009
so I made a list of 200 schemas ran

202
00:12:26,009 --> 00:12:30,239
random through this and removed one of

203
00:12:30,239 --> 00:12:34,350
the two if the two were identical you

204
00:12:34,350 --> 00:12:37,889
then end up with 26 schema objects which

205
00:12:37,889 --> 00:12:39,749
represent each of the database schemas

206
00:12:39,749 --> 00:12:41,999
that logzilla went through during its

207
00:12:41,999 --> 00:12:48,779
lifetime then you get around to writing

208
00:12:48,779 --> 00:12:53,790
code which actually turns out not to be

209
00:12:53,790 --> 00:12:56,009
a whole lot of code because most of it

210
00:12:56,009 --> 00:12:58,910
has been auto-generated by DD IX class

211
00:12:58,910 --> 00:13:03,509
so there's a schema Phe g PF GI file

212
00:13:03,509 --> 00:13:07,679
which is what I used to run plaque and

213
00:13:07,679 --> 00:13:10,189
which is really about five lines of code

214
00:13:10,189 --> 00:13:13,170
there's a schema module which is mostly

215
00:13:13,170 --> 00:13:16,889
routing and there's a schema Bugzilla

216
00:13:16,889 --> 00:13:20,160
module which basically does the mapping

217
00:13:20,160 --> 00:13:22,769
between the version of bugzilla that the

218
00:13:22,769 --> 00:13:26,009
user selected and the version of exhibit

219
00:13:26,009 --> 00:13:28,829
that first has first had the database

220
00:13:28,829 --> 00:13:32,150
schema that went with that version

221
00:13:32,150 --> 00:13:38,800
and now I can

222
00:13:55,510 --> 00:13:59,950
okay help

223
00:14:07,990 --> 00:14:41,090
perfect thank you so this is the index

224
00:14:41,090 --> 00:14:43,340
page which right now doesn't have a lot

225
00:14:43,340 --> 00:14:45,670
of stuff

226
00:14:55,980 --> 00:14:58,889
over here you have every single version

227
00:14:58,889 --> 00:15:03,529
of Mozilla that has ever been released

228
00:15:03,529 --> 00:15:07,620
let me go back to the last stable

229
00:15:07,620 --> 00:15:14,459
version so you can choose any version of

230
00:15:14,459 --> 00:15:20,510
bazzara first a view schema and

231
00:15:28,310 --> 00:15:31,149
okay

232
00:15:37,279 --> 00:15:43,850
but okay so you get so you first get a

233
00:15:43,850 --> 00:15:45,740
list of all the tables that are in the

234
00:15:45,740 --> 00:15:50,300
desk EEMA a short introduction which

235
00:15:50,300 --> 00:15:52,699
right now is hot coded and you get for

236
00:15:52,699 --> 00:15:55,220
every single table the the columns the

237
00:15:55,220 --> 00:15:57,879
column type additional information

238
00:15:57,879 --> 00:16:01,160
contains like what's the primary key

239
00:16:01,160 --> 00:16:03,620
what are the foreign keys if any if

240
00:16:03,620 --> 00:16:12,009
there are any and there you go

241
00:16:26,510 --> 00:16:29,710
[Music]

242
00:16:30,430 --> 00:16:33,860
this there's still work to be done on

243
00:16:33,860 --> 00:16:36,050
this the first thing the next thing I

244
00:16:36,050 --> 00:16:39,100
want to do is abstract out all the

245
00:16:39,100 --> 00:16:41,990
specifics on a specific stuff into the

246
00:16:41,990 --> 00:16:46,790
schema Bugzilla module one of the

247
00:16:46,790 --> 00:16:48,950
persons who helped me on this project

248
00:16:48,950 --> 00:16:54,020
was Matangi who's a pro hacker and who

249
00:16:54,020 --> 00:16:56,030
wrote schema Rock tables which is on

250
00:16:56,030 --> 00:17:00,170
Japan right now because he liked my

251
00:17:00,170 --> 00:17:01,910
adjure and needed to reuse it for

252
00:17:01,910 --> 00:17:03,760
something else

253
00:17:03,760 --> 00:17:07,010
so once i've abstracted out the bizarro

254
00:17:07,010 --> 00:17:11,089
specific path I'll see I'll go see my

255
00:17:11,089 --> 00:17:13,490
tank and see how we can make schema rack

256
00:17:13,490 --> 00:17:17,030
tables work with schema and you'll be

257
00:17:17,030 --> 00:17:18,920
able to choose between Belzer and wreck

258
00:17:18,920 --> 00:17:21,349
tables and get any version of the schema

259
00:17:21,349 --> 00:17:23,630
that goes with any version of rack

260
00:17:23,630 --> 00:17:27,980
tables as well one thing that both the

261
00:17:27,980 --> 00:17:32,450
schema did was allow you to choose two

262
00:17:32,450 --> 00:17:36,530
versions of botella and show you add if

263
00:17:36,530 --> 00:17:40,910
the of the two schemas if if they were

264
00:17:40,910 --> 00:17:43,070
different and this is something I

265
00:17:43,070 --> 00:17:45,530
haven't added yet but I'm planning to do

266
00:17:45,530 --> 00:17:48,890
so so soon because again this is useful

267
00:17:48,890 --> 00:17:51,500
when you're looking at the version you

268
00:17:51,500 --> 00:17:54,260
currently have the version you want to

269
00:17:54,260 --> 00:17:56,900
update to and you want to see what

270
00:17:56,900 --> 00:17:59,330
database changes are going to happen

271
00:17:59,330 --> 00:18:03,320
along the way and if you have any ideas

272
00:18:03,320 --> 00:18:07,899
well now now it's the time

273
00:18:08,940 --> 00:18:13,119
and shout out to the periscope mangas

274
00:18:13,119 --> 00:18:17,019
because if if they hadn't convinced me

275
00:18:17,019 --> 00:18:19,090
to keep working on the project I

276
00:18:19,090 --> 00:18:21,940
wouldn't be here and you'll be listening

277
00:18:21,940 --> 00:18:24,359
to someone more interesting than I am

278
00:18:24,359 --> 00:18:28,359
Matt thank dumped all the Bugzilla to

279
00:18:28,359 --> 00:18:34,210
something versions I I still have no

280
00:18:34,210 --> 00:18:38,289
idea how he did it and the main

281
00:18:38,289 --> 00:18:43,690
maintenance of the modules I use rubbish

282
00:18:43,690 --> 00:18:47,879
Russia in Murray and miyagawa who wrote

283
00:18:47,879 --> 00:18:54,339
who maintained all the modules and all

284
00:18:54,339 --> 00:19:00,129
the contributors who worked on them you

285
00:19:00,129 --> 00:19:13,839
have two minutes Jeff the point is to

286
00:19:13,839 --> 00:19:19,869
document your database schema at work we

287
00:19:19,869 --> 00:19:22,450
still have a lot of applications that

288
00:19:22,450 --> 00:19:26,019
have no REST API and basically we

289
00:19:26,019 --> 00:19:29,469
interact with them by going through

290
00:19:29,469 --> 00:19:32,859
connecting to that database and getting

291
00:19:32,859 --> 00:19:39,489
SQL writing SQL queries and so we we

292
00:19:39,489 --> 00:19:41,499
kind of need a documentation for the

293
00:19:41,499 --> 00:19:44,950
schema not as we not the one we think we

294
00:19:44,950 --> 00:19:46,419
have but the one we actually have in

295
00:19:46,419 --> 00:19:50,889
production so this is why I thought this

296
00:19:50,889 --> 00:19:53,039
would be an interesting thing to do

297
00:19:53,039 --> 00:19:56,259
Madonn uses it because he writes a rack

298
00:19:56,259 --> 00:19:59,529
man a promo module on Sipan which

299
00:19:59,529 --> 00:20:02,200
interacts with rack tables and he needed

300
00:20:02,200 --> 00:20:05,919
a way to check that his SPR which

301
00:20:05,919 --> 00:20:09,099
versions of rack tables his SQL queries

302
00:20:09,099 --> 00:20:11,859
run on and which ones they don't they

303
00:20:11,859 --> 00:20:15,039
don't want on so this is why he did

304
00:20:15,039 --> 00:20:17,409
schema rough tables

305
00:20:17,409 --> 00:20:21,600
the dead but I can see my people useful

306
00:20:23,700 --> 00:20:28,029
once you give it a thing of SQL and it

307
00:20:28,029 --> 00:20:29,470
figures out what's the table min what's

308
00:20:29,470 --> 00:20:31,659
a common name in the SQL and just says

309
00:20:31,659 --> 00:20:35,700
yes this SQL will run against this

310
00:20:44,100 --> 00:20:47,159
absolutely and I'm I'm pretty sure that

311
00:20:47,159 --> 00:20:50,950
DB DB IX class can do that out of the

312
00:20:50,950 --> 00:20:54,990
box so yeah

313
00:20:55,800 --> 00:21:03,270
[Applause]

