1
00:00:23,350 --> 00:00:25,240
okay so now I have Nick who's going to

2
00:00:25,240 --> 00:00:28,539
talk to us about post-crisis archiving

3
00:00:28,539 --> 00:00:36,030
and backup and replication toaster yeah

4
00:00:37,980 --> 00:00:40,360
well yeah we do have a little bit of

5
00:00:40,360 --> 00:00:43,210
redundancy but redundancy is good

6
00:00:43,210 --> 00:00:44,559
especially when you're talking about

7
00:00:44,559 --> 00:00:48,400
backup so it's okay who's been in

8
00:00:48,400 --> 00:00:51,930
gherkins talk earlier like two hours ago

9
00:00:51,930 --> 00:00:55,539
half of you okay so well we will have

10
00:00:55,539 --> 00:00:57,039
some redundancy I'm afraid that's dill

11
00:00:57,039 --> 00:00:59,320
anyway so my name is Nick I'm currently

12
00:00:59,320 --> 00:01:01,690
working as a full-time DBA at Elster

13
00:01:01,690 --> 00:01:03,129
which is the German system for the

14
00:01:03,129 --> 00:01:05,580
Elector Nutrition we're clear all so

15
00:01:05,580 --> 00:01:07,960
when you're dremen and you did your text

16
00:01:07,960 --> 00:01:10,899
declaration earlier this year then it's

17
00:01:10,899 --> 00:01:15,180
in my database fully encrypted no works

18
00:01:15,180 --> 00:01:22,060
so I did think about doing some kind of

19
00:01:22,060 --> 00:01:24,990
decision tree the documentation about

20
00:01:24,990 --> 00:01:30,759
backup archiving restore and replication

21
00:01:30,759 --> 00:01:34,680
covers about 50 pages of a4 which is a

22
00:01:34,680 --> 00:01:37,330
lot but considering that the whole

23
00:01:37,330 --> 00:01:39,369
documentation is more than 3,000 pages

24
00:01:39,369 --> 00:01:43,119
it's just enough right so at the end of

25
00:01:43,119 --> 00:01:47,189
the day I said no let's just go on

26
00:01:47,189 --> 00:01:49,689
mention the other stuff but tell them

27
00:01:49,689 --> 00:01:52,299
what they probably want to do so for 90%

28
00:01:52,299 --> 00:01:54,939
of you or even more what we will have at

29
00:01:54,939 --> 00:01:58,360
the end of this talk will do one way or

30
00:01:58,360 --> 00:02:01,509
the other there's still some

31
00:02:01,509 --> 00:02:03,280
misconceptions so the idea for this talk

32
00:02:03,280 --> 00:02:05,079
raised from a discussion we had on the

33
00:02:05,079 --> 00:02:08,079
mailing list because I ran into an issue

34
00:02:08,079 --> 00:02:09,669
and I didn't find anything in the docs

35
00:02:09,669 --> 00:02:14,079
and well it ended up in like yeah you

36
00:02:14,079 --> 00:02:17,590
can't write it down you can't write

37
00:02:17,590 --> 00:02:18,819
everything down right

38
00:02:18,819 --> 00:02:21,219
so some things people just have to know

39
00:02:21,219 --> 00:02:24,790
anyway let's see some assertions

40
00:02:24,790 --> 00:02:27,010
you're here because you valued your data

41
00:02:27,010 --> 00:02:28,569
otherwise you would not be in the

42
00:02:28,569 --> 00:02:35,700
Postgres room but in some other you have

43
00:02:35,700 --> 00:02:38,470
decent hardware and equipment and data

44
00:02:38,470 --> 00:02:41,290
center so you will have at least two

45
00:02:41,290 --> 00:02:43,959
servers that are the same size you will

46
00:02:43,959 --> 00:02:46,150
have ECC memory you even have a backup

47
00:02:46,150 --> 00:02:48,400
battery vector part as controller or

48
00:02:48,400 --> 00:02:51,069
using a SAN you will have a power supply

49
00:02:51,069 --> 00:02:54,040
an uninterruptible power supply and so

50
00:02:54,040 --> 00:02:58,019
on so enterprise hardware enterprise

51
00:02:58,019 --> 00:03:02,769
these are separated as far as feasible

52
00:03:02,769 --> 00:03:05,650
so when you only have a room with one

53
00:03:05,650 --> 00:03:06,909
square meter there probably on the same

54
00:03:06,909 --> 00:03:09,220
rack if you have a larger room they are

55
00:03:09,220 --> 00:03:11,290
not in the same rack when you have more

56
00:03:11,290 --> 00:03:12,760
than one room they are not in the same

57
00:03:12,760 --> 00:03:14,019
room when you have more than one

58
00:03:14,019 --> 00:03:15,370
building they are not in the same

59
00:03:15,370 --> 00:03:19,349
building I could go on with continents

60
00:03:19,349 --> 00:03:23,349
yeah we'll get to that you have at least

61
00:03:23,349 --> 00:03:27,519
an idea what your recovery time

62
00:03:27,519 --> 00:03:29,680
objectives and your recovery point

63
00:03:29,680 --> 00:03:31,930
objectives are or what your requirements

64
00:03:31,930 --> 00:03:34,060
are you don't have to have them fixed

65
00:03:34,060 --> 00:03:36,220
but you should have an idea everybody

66
00:03:36,220 --> 00:03:37,889
knows what that means

67
00:03:37,889 --> 00:03:45,370
RPO RTO okay so your recovery time

68
00:03:45,370 --> 00:03:47,650
objective means the time that you need

69
00:03:47,650 --> 00:03:52,060
to recover from a fatal fatal crash or

70
00:03:52,060 --> 00:03:54,790
server loss something like that building

71
00:03:54,790 --> 00:03:58,479
loss country lots the recovery point

72
00:03:58,479 --> 00:04:01,900
objective is to which point you have to

73
00:04:01,900 --> 00:04:04,870
be able to recover so like you are

74
00:04:04,870 --> 00:04:08,489
allowed to lose the last six hours of

75
00:04:08,489 --> 00:04:11,699
users putting data in your database or

76
00:04:11,699 --> 00:04:14,319
maybe it's two minutes or maybe it's one

77
00:04:14,319 --> 00:04:16,630
transaction and so on and so on doesn't

78
00:04:16,630 --> 00:04:21,070
make sense okay cool so there's some

79
00:04:21,070 --> 00:04:23,699
natural laws that are always valid

80
00:04:23,699 --> 00:04:27,900
gravity speed of light Murphy

81
00:04:27,900 --> 00:04:31,130
you all know what Murphy where his laws

82
00:04:31,130 --> 00:04:32,900
okay

83
00:04:32,900 --> 00:04:37,590
disaster does strike unless and like

84
00:04:37,590 --> 00:04:39,990
lightning disaster does strike twice in

85
00:04:39,990 --> 00:04:49,949
the same place you see that red point up

86
00:04:49,949 --> 00:04:53,790
here it's the first and last time I

87
00:04:53,790 --> 00:04:55,110
mentioned to get left guys but when I

88
00:04:55,110 --> 00:04:56,820
read that I thought how do you it

89
00:04:56,820 --> 00:04:59,030
up right

90
00:04:59,030 --> 00:05:04,410
okay so then there's an Stein I'm not

91
00:05:04,410 --> 00:05:07,350
gonna read it because you probably know

92
00:05:07,350 --> 00:05:12,470
all that there's two stars okay

93
00:05:12,650 --> 00:05:15,770
evolution guichen covered that

94
00:05:15,770 --> 00:05:21,949
extensively what I do think is that

95
00:05:21,949 --> 00:05:24,060
amending the docs when you add a new

96
00:05:24,060 --> 00:05:27,240
feature is maybe not the right way maybe

97
00:05:27,240 --> 00:05:30,090
not you still should read it all if you

98
00:05:30,090 --> 00:05:31,830
have the time but it's more than 50

99
00:05:31,830 --> 00:05:34,080
pager or almost 50 pages 49 when I

100
00:05:34,080 --> 00:05:36,210
counted yesterday so that's a lot of

101
00:05:36,210 --> 00:05:38,280
stuff to read just to do some backups

102
00:05:38,280 --> 00:05:40,460
right

103
00:05:41,660 --> 00:05:45,090
you should still read it certainly

104
00:05:45,090 --> 00:05:48,810
should so with seven zero this is what

105
00:05:48,810 --> 00:05:50,280
you have you had a chapter

106
00:05:50,280 --> 00:05:53,220
backup and restore and you had a chapter

107
00:05:53,220 --> 00:05:56,789
database recovery backup and restore

108
00:05:56,789 --> 00:05:58,949
most basically logic Abeka we'll come to

109
00:05:58,949 --> 00:06:01,770
that in a second database recovery was

110
00:06:01,770 --> 00:06:04,039
this

111
00:06:06,240 --> 00:06:07,930
totally love it

112
00:06:07,930 --> 00:06:10,240
just imagine Oracle would put something

113
00:06:10,240 --> 00:06:15,130
like that in the dose logic Rebecca what

114
00:06:15,130 --> 00:06:18,310
does it mean basically you use PG dump

115
00:06:18,310 --> 00:06:20,320
or PG dump all to do a textual

116
00:06:20,320 --> 00:06:22,030
representation of your data so it's

117
00:06:22,030 --> 00:06:24,070
really create database create table

118
00:06:24,070 --> 00:06:27,930
insert actually not insert but whatever

119
00:06:27,930 --> 00:06:31,180
so you get a snapshot of your data from

120
00:06:31,180 --> 00:06:33,760
the second that PG PG jump-started

121
00:06:33,760 --> 00:06:36,040
because it opens in the transaction MVCC

122
00:06:36,040 --> 00:06:38,290
will take care that you get the

123
00:06:38,290 --> 00:06:44,020
consistent view of your data and you can

124
00:06:44,020 --> 00:06:46,180
restore exactly that stage by the way

125
00:06:46,180 --> 00:06:48,970
but we mentioned that later as well it

126
00:06:48,970 --> 00:06:52,060
will can dump the whole cluster was PG

127
00:06:52,060 --> 00:06:54,010
dumb all you can dump to single

128
00:06:54,010 --> 00:06:56,440
databases you can dump single tables etc

129
00:06:56,440 --> 00:07:01,800
PP you can have a text file really like

130
00:07:01,800 --> 00:07:06,730
readable SQL insert into a cetera PP or

131
00:07:06,730 --> 00:07:08,800
you can get some proprietary formats

132
00:07:08,800 --> 00:07:13,060
which file does does recognize as

133
00:07:13,060 --> 00:07:14,850
Postgres you know proprietary

134
00:07:14,850 --> 00:07:17,050
procreative better whatever you know

135
00:07:17,050 --> 00:07:17,850
what I mean

136
00:07:17,850 --> 00:07:21,460
so plain text this plane is GL users

137
00:07:21,460 --> 00:07:23,530
copy if you don't tell it to use insert

138
00:07:23,530 --> 00:07:29,140
because you want to pour to MySQL it can

139
00:07:29,140 --> 00:07:30,790
be read by humans which is a big

140
00:07:30,790 --> 00:07:33,040
advantage right then there's a custom

141
00:07:33,040 --> 00:07:34,750
format which is basically compressed

142
00:07:34,750 --> 00:07:37,660
text I think

143
00:07:37,660 --> 00:07:42,580
yeah so you cannot pipe that into psql

144
00:07:42,580 --> 00:07:45,640
as you can with the text so you have to

145
00:07:45,640 --> 00:07:48,160
use PG restore and pipe that into P SQL

146
00:07:48,160 --> 00:07:50,490
because it will again give you the text

147
00:07:50,490 --> 00:07:57,400
it can restore single tables and it is

148
00:07:57,400 --> 00:07:59,560
compressed then you have the custom know

149
00:07:59,560 --> 00:08:02,050
the directory format which has an

150
00:08:02,050 --> 00:08:03,550
advantage because it can run in parallel

151
00:08:03,550 --> 00:08:09,130
on satellite working with - J it will

152
00:08:09,130 --> 00:08:11,440
create a directory with a different file

153
00:08:11,440 --> 00:08:13,180
or different files for every table that

154
00:08:13,180 --> 00:08:15,400
you have so you can also restore them in

155
00:08:15,400 --> 00:08:18,220
parallel which makes it faster anyway

156
00:08:18,220 --> 00:08:22,950
jumping forward because PT dump all

157
00:08:22,950 --> 00:08:25,930
never forget to use P to dump all if you

158
00:08:25,930 --> 00:08:28,840
do a textual Dom or PD dump dump because

159
00:08:28,840 --> 00:08:31,540
PG dump also reads from the only reads

160
00:08:31,540 --> 00:08:35,349
from databases your schemas sorry your

161
00:08:35,349 --> 00:08:37,630
roles your table spaces are database or

162
00:08:37,630 --> 00:08:40,150
cluster white objects not in a database

163
00:08:40,150 --> 00:08:42,400
so you have to dump them separately and

164
00:08:42,400 --> 00:08:44,830
you should probably do that anyway we

165
00:08:44,830 --> 00:08:51,250
come to it RTO and RPO the recovery time

166
00:08:51,250 --> 00:08:53,170
objective is basically yeah you can

167
00:08:53,170 --> 00:08:57,250
restore will take between minutes and

168
00:08:57,250 --> 00:09:00,960
days depending on the size that symbol

169
00:09:00,960 --> 00:09:05,410
RPO you can recover to the point in time

170
00:09:05,410 --> 00:09:08,200
when you started your background so if

171
00:09:08,200 --> 00:09:09,970
you do your backup at Sunday night at

172
00:09:09,970 --> 00:09:14,610
8:00 and Monday morning

173
00:09:14,610 --> 00:09:17,970
somebody deed says delete from customers

174
00:09:17,970 --> 00:09:21,520
then you can restore pretty well back to

175
00:09:21,520 --> 00:09:23,800
Sunday night if that happens on Friday

176
00:09:23,800 --> 00:09:32,940
night you're not happy aren't you

177
00:09:32,940 --> 00:09:37,420
disaster strikes right pros and cons

178
00:09:37,420 --> 00:09:39,690
it's readable by humans

179
00:09:39,690 --> 00:09:44,190
you can like PG dump all dump your your

180
00:09:44,190 --> 00:09:47,230
schemas and roles on a regular basis and

181
00:09:47,230 --> 00:09:49,210
just put them into into subversion or

182
00:09:49,210 --> 00:09:50,980
gate or whatever so that you have a

183
00:09:50,980 --> 00:09:56,350
documented right a PG dump file can be

184
00:09:56,350 --> 00:09:58,570
read by newer versions of Postgres so if

185
00:09:58,570 --> 00:10:01,510
you have a PG dump backup of your post

186
00:10:01,510 --> 00:10:05,020
quest 8.4 you can easily read that into

187
00:10:05,020 --> 00:10:10,690
a 9 6 or 10 and go on yeah you can back

188
00:10:10,690 --> 00:10:12,130
up and restore single entities like

189
00:10:12,130 --> 00:10:14,920
tables schemas databases and restore

190
00:10:14,920 --> 00:10:18,610
them separately another thing is and

191
00:10:18,610 --> 00:10:20,640
what that's why we mentioned this at all

192
00:10:20,640 --> 00:10:23,440
during a PG dump all will read all of

193
00:10:23,440 --> 00:10:25,780
your database so if you have checksums

194
00:10:25,780 --> 00:10:31,210
on your PG data and you have this the

195
00:10:31,210 --> 00:10:33,490
table that you look into once a year and

196
00:10:33,490 --> 00:10:36,100
you have a corruption on that that will

197
00:10:36,100 --> 00:10:38,680
really will be revealed to my PD dump

198
00:10:38,680 --> 00:10:41,950
home or PD dump so it's not that bad

199
00:10:41,950 --> 00:10:42,730
after all

200
00:10:42,730 --> 00:10:45,040
yeah you can only backup and restore

201
00:10:45,040 --> 00:10:49,230
single point in time it's rather slow

202
00:10:49,230 --> 00:10:53,980
yeah RTO RPO mmm not what you want

203
00:10:53,980 --> 00:10:57,100
it's like commuting in this it will get

204
00:10:57,100 --> 00:11:00,670
you there when it starts raining it

205
00:11:00,670 --> 00:11:02,560
might be uncomfortable and it you will

206
00:11:02,560 --> 00:11:05,100
not be fast and comfy and so honest I

207
00:11:05,100 --> 00:11:08,310
was like writing your Texas with this

208
00:11:08,310 --> 00:11:10,000
one it's like doing your calculations

209
00:11:10,000 --> 00:11:12,910
with this it still works when you have

210
00:11:12,910 --> 00:11:15,250
no power you will need light for this

211
00:11:15,250 --> 00:11:19,680
one but it's it will still work right

212
00:11:19,680 --> 00:11:23,860
after that we got the wall like an 71 I

213
00:11:23,860 --> 00:11:28,320
thought it was an 8 but no 7 1 8 edit

214
00:11:28,320 --> 00:11:31,030
the ability to use the wall will see

215
00:11:31,030 --> 00:11:34,810
that we got pointing pitter which is not

216
00:11:34,810 --> 00:11:38,850
pain-in-the-rear point in time recovery

217
00:11:38,850 --> 00:11:42,190
will come to that as well 9 8 & 9 1 edit

218
00:11:42,190 --> 00:11:43,900
PG based backup which

219
00:11:43,900 --> 00:11:47,250
is a very comfy master to use that stuff

220
00:11:47,250 --> 00:11:52,480
and we'll have a look at that online

221
00:11:52,480 --> 00:11:57,280
binary backup yeah I would like to just

222
00:11:57,280 --> 00:11:59,410
say do it this way but you have to see

223
00:11:59,410 --> 00:12:02,440
something though stress is using the

224
00:12:02,440 --> 00:12:07,480
wall extensively for stuff so guichen

225
00:12:07,480 --> 00:12:09,220
covered it so you can still go back and

226
00:12:09,220 --> 00:12:12,190
watch the stream but still yeah the wall

227
00:12:12,190 --> 00:12:15,580
is basically a log book the redo look

228
00:12:15,580 --> 00:12:18,220
the redo lock as other databases would

229
00:12:18,220 --> 00:12:21,670
call it every change everything that

230
00:12:21,670 --> 00:12:23,580
goes to disk first goes to the wall

231
00:12:23,580 --> 00:12:27,910
except for the log files at a checkpoint

232
00:12:27,910 --> 00:12:31,510
and the checkpoint can be basically

233
00:12:31,510 --> 00:12:34,300
spread over hours so it's not really a

234
00:12:34,300 --> 00:12:38,830
point the content of the wall is written

235
00:12:38,830 --> 00:12:40,840
to the actual heap so your actual data

236
00:12:40,840 --> 00:12:43,690
files all right and that creates new

237
00:12:43,690 --> 00:12:47,890
role versions simplified this is the

238
00:12:47,890 --> 00:12:50,290
wall split in 60 megabytes seconds at a

239
00:12:50,290 --> 00:12:53,050
checkpoint it goes to the heap goes to a

240
00:12:53,050 --> 00:12:55,150
shared buffer straightaway so that you

241
00:12:55,150 --> 00:12:56,770
can actually use the data with other

242
00:12:56,770 --> 00:13:00,030
sessions selects go to the share buffers

243
00:13:00,030 --> 00:13:03,250
insert update delete goes to the wall

244
00:13:03,250 --> 00:13:06,100
and the people who actually know the

245
00:13:06,100 --> 00:13:08,710
code will want to kill me after this but

246
00:13:08,710 --> 00:13:11,620
still it's simplified right so you get

247
00:13:11,620 --> 00:13:16,230
an idea 16 megabytes second segments

248
00:13:16,230 --> 00:13:20,530
actually not a chain of segments it's

249
00:13:20,530 --> 00:13:23,260
more like a ring that can also grow and

250
00:13:23,260 --> 00:13:23,920
shrink again

251
00:13:23,920 --> 00:13:27,690
so whenever a checkpoint happens I

252
00:13:27,690 --> 00:13:30,490
actually went to two checkpoints have

253
00:13:30,490 --> 00:13:33,250
happened the database will start

254
00:13:33,250 --> 00:13:36,010
recycling wall segments so they get

255
00:13:36,010 --> 00:13:38,830
overwritten with actually they only get

256
00:13:38,830 --> 00:13:43,180
renamed and then the checkpoint will

257
00:13:43,180 --> 00:13:45,750
write to them

258
00:13:47,069 --> 00:13:49,989
so that's in PGX log as I learned on

259
00:13:49,989 --> 00:13:50,699
Friday

260
00:13:50,699 --> 00:13:54,519
PJ ex-law got renamed to PG wall because

261
00:13:54,519 --> 00:14:00,189
o file says wistful let's delete some

262
00:14:00,189 --> 00:14:01,949
log files

263
00:14:01,949 --> 00:14:06,789
I'm not kidding so inch and zero it will

264
00:14:06,789 --> 00:14:08,799
be called PG wall but I think the tools

265
00:14:08,799 --> 00:14:10,539
will not be renamed so you will have

266
00:14:10,539 --> 00:14:15,339
still have PG receive ex lock anyway Phi

267
00:14:15,339 --> 00:14:17,709
is is determined by a wall min size and

268
00:14:17,709 --> 00:14:20,829
more walks wall Mac sighs oh my god it's

269
00:14:20,829 --> 00:14:24,309
Foster that's by default it's one

270
00:14:24,309 --> 00:14:26,079
gigabyte or two gigabyte but those are

271
00:14:26,079 --> 00:14:30,539
soft limits we come to that the archiver

272
00:14:30,539 --> 00:14:33,939
wall writer writes wall segments wall

273
00:14:33,939 --> 00:14:36,429
segments and then read by the checkpoint

274
00:14:36,429 --> 00:14:40,629
or process and in between if you have it

275
00:14:40,629 --> 00:14:45,429
the archive will run and will do

276
00:14:45,429 --> 00:14:47,139
something to them and we come to that as

277
00:14:47,139 --> 00:14:52,299
well PG stop back to get the binary back

278
00:14:52,299 --> 00:14:55,959
ramp simplest way or no it's just to

279
00:14:55,959 --> 00:14:58,479
have it mentioned right you call select

280
00:14:58,479 --> 00:15:00,759
PG start back up you get a snapshot and

281
00:15:00,759 --> 00:15:03,489
then you release your back up again with

282
00:15:03,489 --> 00:15:06,069
PP stop back up since you don't want to

283
00:15:06,069 --> 00:15:09,849
do that manually we go on that snapshot

284
00:15:09,849 --> 00:15:12,849
goes to some area down here which

285
00:15:12,849 --> 00:15:15,909
eventually goes to tape hopefully but to

286
00:15:15,909 --> 00:15:20,709
something really durable right I was

287
00:15:20,709 --> 00:15:23,579
googling for table

288
00:15:24,010 --> 00:15:26,470
do I need anything more like yeah okay

289
00:15:26,470 --> 00:15:28,630
cool I've got a copy of my bear database

290
00:15:28,630 --> 00:15:33,670
now I can use that right no you need all

291
00:15:33,670 --> 00:15:35,620
the world segments that have been

292
00:15:35,620 --> 00:15:38,280
created since you started your backup

293
00:15:38,280 --> 00:15:43,090
why among other things reading from your

294
00:15:43,090 --> 00:15:46,030
database can create write traffic I'm

295
00:15:46,030 --> 00:15:50,910
not gonna explain that anyway it does so

296
00:15:50,910 --> 00:15:52,960
hopefully your wall segments are still

297
00:15:52,960 --> 00:15:54,640
there if you have a busy database do a

298
00:15:54,640 --> 00:15:57,340
lot of i/o they can have been recycled

299
00:15:57,340 --> 00:16:05,410
in between disaster strikes so if that

300
00:16:05,410 --> 00:16:08,710
ever happened to you rinse repeat you

301
00:16:08,710 --> 00:16:10,900
don't want that so what you want to have

302
00:16:10,900 --> 00:16:12,700
is something that will put the wall

303
00:16:12,700 --> 00:16:16,510
segments next to your one-to-one copy

304
00:16:16,510 --> 00:16:20,250
and that would be the archive command

305
00:16:20,250 --> 00:16:27,070
then you can take this copy your your

306
00:16:27,070 --> 00:16:29,260
filesystem copy of your database to some

307
00:16:29,260 --> 00:16:31,960
new server your restore target and you

308
00:16:31,960 --> 00:16:34,870
will do a restore command in a record

309
00:16:34,870 --> 00:16:35,770
recovery conf

310
00:16:35,770 --> 00:16:39,160
and tell it to fetch the wall segments

311
00:16:39,160 --> 00:16:44,800
and start that database it will see oh

312
00:16:44,800 --> 00:16:46,270
I'm not complete I need some wall

313
00:16:46,270 --> 00:16:48,310
segments will fetch them from here and

314
00:16:48,310 --> 00:16:51,970
then you're ready to go and you're ready

315
00:16:51,970 --> 00:16:55,330
to go rather fast if your database is

316
00:16:55,330 --> 00:16:57,340
small rather slow when your database is

317
00:16:57,340 --> 00:16:59,830
large still yeah like you need to copy

318
00:16:59,830 --> 00:17:04,690
the data etc OPP and also depends on the

319
00:17:04,690 --> 00:17:06,699
amount of wall files so in other words

320
00:17:06,699 --> 00:17:09,599
the activity while you did your backup

321
00:17:09,599 --> 00:17:11,640
RPO

322
00:17:11,640 --> 00:17:14,440
similar to a PD dump but this time it's

323
00:17:14,440 --> 00:17:16,209
the end of your backup so the moment

324
00:17:16,209 --> 00:17:23,760
that you call PP stop backup oh well

325
00:17:24,560 --> 00:17:27,170
or maybe it's the moment when you stop

326
00:17:27,170 --> 00:17:29,750
the backup before that that should have

327
00:17:29,750 --> 00:17:31,640
been in PD dump as well right

328
00:17:31,640 --> 00:17:36,080
this last one pros and cons it's a

329
00:17:36,080 --> 00:17:38,480
one-to-one copy of your database rather

330
00:17:38,480 --> 00:17:43,840
fail-safe rather fast RPO is fine oh

331
00:17:43,900 --> 00:17:46,790
wait the RTO is fine actually

332
00:17:46,790 --> 00:17:50,900
never mind so let's RTO you can still

333
00:17:50,900 --> 00:17:53,780
just in this case you can only backup

334
00:17:53,780 --> 00:17:56,240
and thus also restore the single point

335
00:17:56,240 --> 00:17:59,840
in time and you can restore safe backup

336
00:17:59,840 --> 00:18:00,740
and restore

337
00:18:00,740 --> 00:18:02,930
only a whole database cluster so an

338
00:18:02,930 --> 00:18:04,450
instance of postman sir

339
00:18:04,450 --> 00:18:08,900
yeah the recovery point objective this

340
00:18:08,900 --> 00:18:12,980
time it should be RP oh yeah still what

341
00:18:12,980 --> 00:18:17,510
rated better than the abacus but it's a

342
00:18:17,510 --> 00:18:20,090
little bit old school right and maybe a

343
00:18:20,090 --> 00:18:25,370
little bit too much effort to get these

344
00:18:25,370 --> 00:18:27,680
are not really faster than the capable

345
00:18:27,680 --> 00:18:30,490
guy with Navitus

346
00:18:31,150 --> 00:18:33,850
so options to get that snapshot you can

347
00:18:33,850 --> 00:18:36,490
for example do an the file system

348
00:18:36,490 --> 00:18:38,860
snapshot LVM snapshot I know a company

349
00:18:38,860 --> 00:18:42,809
who do it like that I've heard of one

350
00:18:42,809 --> 00:18:47,910
stephen is not here right it's in frost

351
00:18:48,720 --> 00:18:52,809
so you can use arcing or you can use PG

352
00:18:52,809 --> 00:18:56,380
based Baker which you want to use right

353
00:18:56,380 --> 00:18:58,840
it's everything before is still in the

354
00:18:58,840 --> 00:19:00,550
documentation and you should know that

355
00:19:00,550 --> 00:19:04,660
you can use it but you shouldn't options

356
00:19:04,660 --> 00:19:06,420
to get the wall segments you can

357
00:19:06,420 --> 00:19:09,580
basically have two choices the archive

358
00:19:09,580 --> 00:19:11,350
command well you should have one anyway

359
00:19:11,350 --> 00:19:14,650
but we'll get there or you can tell PG

360
00:19:14,650 --> 00:19:17,200
base but have backup to just fetch the

361
00:19:17,200 --> 00:19:21,010
lock segments that appeared during its

362
00:19:21,010 --> 00:19:24,580
its runtime so that would be with X lock

363
00:19:24,580 --> 00:19:27,960
method you probably want to use stream

364
00:19:27,960 --> 00:19:33,429
okay use bills or actually get used to

365
00:19:33,429 --> 00:19:37,570
those you will have a wall archive will

366
00:19:37,570 --> 00:19:38,260
come to that

367
00:19:38,260 --> 00:19:43,270
so PG based buck backup on the other

368
00:19:43,270 --> 00:19:45,960
hand is also handy to like set up a new

369
00:19:45,960 --> 00:19:49,900
replication slave whatever will also get

370
00:19:49,900 --> 00:19:53,280
there so when you have a wall archive

371
00:19:53,280 --> 00:19:55,600
filled with your archive command all the

372
00:19:55,600 --> 00:19:58,420
time you can just like skip the separate

373
00:19:58,420 --> 00:20:00,910
back up off the wall segments do Europe

374
00:20:00,910 --> 00:20:04,410
during your backup okay

375
00:20:04,880 --> 00:20:07,220
why would I want to have a wall archive

376
00:20:07,220 --> 00:20:11,080
that's waste of space

377
00:20:11,630 --> 00:20:14,960
oh there's two red stars here delete

378
00:20:14,960 --> 00:20:17,990
from customers among other things the

379
00:20:17,990 --> 00:20:20,900
wall archive will allow you to gather

380
00:20:20,900 --> 00:20:24,200
with that snapshot down here to do a

381
00:20:24,200 --> 00:20:27,940
point in time recovery a pitter

382
00:20:27,940 --> 00:20:32,180
pain-in-the-rear not and for that

383
00:20:32,180 --> 00:20:34,700
obviously you need the snapshot and all

384
00:20:34,700 --> 00:20:36,200
wall segments so everything that

385
00:20:36,200 --> 00:20:38,180
happened inside the database since you

386
00:20:38,180 --> 00:20:43,630
last took that Beca okay make sense good

387
00:20:43,630 --> 00:20:48,290
so your eStore target we're now not

388
00:20:48,290 --> 00:20:50,840
access only the single or a few war

389
00:20:50,840 --> 00:20:53,600
files down here but you will just have a

390
00:20:53,600 --> 00:20:56,420
generic restore command that will fetch

391
00:20:56,420 --> 00:21:01,250
it from the wall archive anyway and you

392
00:21:01,250 --> 00:21:02,960
can have that running all the time that

393
00:21:02,960 --> 00:21:05,150
would be a once 10 PI server so if you

394
00:21:05,150 --> 00:21:08,270
have one of these say as a poor-man's

395
00:21:08,270 --> 00:21:11,000
replication slave then it can also like

396
00:21:11,000 --> 00:21:14,000
replay every war file that means you are

397
00:21:14,000 --> 00:21:16,700
60 megabytes behind but you are still

398
00:21:16,700 --> 00:21:21,230
quite close to your master database in

399
00:21:21,230 --> 00:21:27,920
in replaying here so your RTO goes down

400
00:21:27,920 --> 00:21:32,270
massively massively if you have a cold

401
00:21:32,270 --> 00:21:33,980
stamp I like you have a server ready

402
00:21:33,980 --> 00:21:36,350
that can take over or can replay from

403
00:21:36,350 --> 00:21:38,440
the wall archive if it can still take

404
00:21:38,440 --> 00:21:42,650
hours days whatever a warm standby will

405
00:21:42,650 --> 00:21:44,870
be up and running in seconds which is

406
00:21:44,870 --> 00:21:49,610
good RPO would be the last archive wall

407
00:21:49,610 --> 00:21:53,980
segment so the master will only send

408
00:21:53,980 --> 00:21:56,420
finished wall segments towards the

409
00:21:56,420 --> 00:21:59,300
archive so you will lose everything that

410
00:21:59,300 --> 00:22:03,480
happened after that was last cent

411
00:22:03,480 --> 00:22:06,460
so that's why I would call one standby

412
00:22:06,460 --> 00:22:08,500
is a poor man's replication it's better

413
00:22:08,500 --> 00:22:11,010
than nothing

414
00:22:11,760 --> 00:22:14,520
that will do the job like you can do

415
00:22:14,520 --> 00:22:17,710
texts on those calculations even play

416
00:22:17,710 --> 00:22:21,910
games or fine write works maybe a little

417
00:22:21,910 --> 00:22:25,180
bit outdated maybe you want more maybe

418
00:22:25,180 --> 00:22:28,650
you want binary streaming replication

419
00:22:28,650 --> 00:22:33,060
that's a warm standby serve on steroids

420
00:22:33,060 --> 00:22:36,280
so the wall segments are actually not

421
00:22:36,280 --> 00:22:37,720
the world segments everything that is

422
00:22:37,720 --> 00:22:40,360
written to the wall gets sent over the

423
00:22:40,360 --> 00:22:44,710
network straight away the transaction

424
00:22:44,710 --> 00:22:46,900
that you have in your wall segments or

425
00:22:46,900 --> 00:22:48,760
in that stream will be replayed

426
00:22:48,760 --> 00:22:52,210
immediately that means ASAP it can fall

427
00:22:52,210 --> 00:22:57,910
behind so you skip all this way down

428
00:22:57,910 --> 00:23:02,470
here you have a direct connection but

429
00:23:02,470 --> 00:23:06,310
they simplified again of course but you

430
00:23:06,310 --> 00:23:09,250
have some options there you can have

431
00:23:09,250 --> 00:23:11,410
synchronous or asynchronous replication

432
00:23:11,410 --> 00:23:14,860
and you can choose on a transaction

433
00:23:14,860 --> 00:23:17,710
level if your current transaction should

434
00:23:17,710 --> 00:23:19,120
be committed synchronously or

435
00:23:19,120 --> 00:23:23,410
asynchronously so usually for your forum

436
00:23:23,410 --> 00:23:28,060
entries or whatnot you would say okay I

437
00:23:28,060 --> 00:23:29,350
think is a payment when you have a

438
00:23:29,350 --> 00:23:32,070
payment you just said that that

439
00:23:32,070 --> 00:23:34,540
transaction to be synchronous and that

440
00:23:34,540 --> 00:23:36,520
will only commit when it has reached the

441
00:23:36,520 --> 00:23:40,540
slave and still you can free choose

442
00:23:40,540 --> 00:23:43,180
between remote right actually remote

443
00:23:43,180 --> 00:23:47,020
right on and remote apply so do I want

444
00:23:47,020 --> 00:23:51,280
to commit my transaction here at the

445
00:23:51,280 --> 00:23:54,280
moment that the packet has reached the

446
00:23:54,280 --> 00:23:57,370
slave when the packet has been written

447
00:23:57,370 --> 00:24:00,340
to disk persistently on the slave or

448
00:24:00,340 --> 00:24:02,290
when the slave has actually replayed it

449
00:24:02,290 --> 00:24:05,630
and will serve the same information

450
00:24:05,630 --> 00:24:09,110
like the master you can use replication

451
00:24:09,110 --> 00:24:14,660
slots I watch for now say ya know that

452
00:24:14,660 --> 00:24:16,549
they exist but you don't actually need

453
00:24:16,549 --> 00:24:19,280
them when we're done here they can be

454
00:24:19,280 --> 00:24:22,150
cascaded we'll have a nice picture now

455
00:24:22,150 --> 00:24:25,309
slaves can serve read-only requests you

456
00:24:25,309 --> 00:24:27,530
can even take your backup from slave but

457
00:24:27,530 --> 00:24:31,669
oh I think I didn't finish there there's

458
00:24:31,669 --> 00:24:33,110
some implications with feedback

459
00:24:33,110 --> 00:24:35,299
accession on VP so if you don't really

460
00:24:35,299 --> 00:24:38,530
really really need that never mind

461
00:24:38,530 --> 00:24:41,360
streaming slaves can be delayed so if

462
00:24:41,360 --> 00:24:43,730
you have your your analyst doing delete

463
00:24:43,730 --> 00:24:45,590
from customers you can still hit the big

464
00:24:45,590 --> 00:24:49,210
red button on the slave and say okay so

465
00:24:49,210 --> 00:24:52,220
you have a 30 minute lag you hit the big

466
00:24:52,220 --> 00:24:54,679
red button configure your slave to just

467
00:24:54,679 --> 00:24:56,929
replay to that moment in time just

468
00:24:56,929 --> 00:24:59,360
before the delete from customers happen

469
00:24:59,360 --> 00:25:01,610
and then become the master so that's

470
00:25:01,610 --> 00:25:06,140
quite handy I've seen investment banking

471
00:25:06,140 --> 00:25:10,730
systems who have that inside base now no

472
00:25:10,730 --> 00:25:12,970
idea why

473
00:25:12,970 --> 00:25:16,039
so that's quite comfy and nice and and

474
00:25:16,039 --> 00:25:20,900
Selam still not exactly the full thing

475
00:25:20,900 --> 00:25:24,200
but yeah it's nice like you cannot put a

476
00:25:24,200 --> 00:25:27,740
PCI Express card in here but it's good

477
00:25:27,740 --> 00:25:32,120
it's nice works well so options you

478
00:25:32,120 --> 00:25:34,760
could have a master and and one two

479
00:25:34,760 --> 00:25:37,580
three slaves that receive your

480
00:25:37,580 --> 00:25:40,580
replication stream that's actually what

481
00:25:40,580 --> 00:25:44,030
I use in my day job you could cascade

482
00:25:44,030 --> 00:25:46,130
them like this master replicates to that

483
00:25:46,130 --> 00:25:48,740
slave and that slaves replicates towards

484
00:25:48,740 --> 00:25:50,000
that slave and that could go on

485
00:25:50,000 --> 00:25:54,409
infinitely almost infinitely only like

486
00:25:54,409 --> 00:25:57,049
limited by your network connections by

487
00:25:57,049 --> 00:25:58,820
your delays etcetera OPP you get the

488
00:25:58,820 --> 00:26:01,039
idea if you really want to do something

489
00:26:01,039 --> 00:26:03,679
like that read the docs first all 50

490
00:26:03,679 --> 00:26:05,610
pages please

491
00:26:05,610 --> 00:26:11,640
and more if you have repla synchronous

492
00:26:11,640 --> 00:26:16,380
replication like this if you configure

493
00:26:16,380 --> 00:26:18,440
all three of these slaves to be

494
00:26:18,440 --> 00:26:21,240
synchronous replication slaves there are

495
00:26:21,240 --> 00:26:24,570
some implications like when one falls

496
00:26:24,570 --> 00:26:26,990
out falls down

497
00:26:26,990 --> 00:26:30,030
yo DB will still work and it will still

498
00:26:30,030 --> 00:26:31,830
serve read-only requests but every

499
00:26:31,830 --> 00:26:34,740
commit will hang until you have enough

500
00:26:34,740 --> 00:26:36,750
synchronous slaves again

501
00:26:36,750 --> 00:26:38,940
so if you have ends synchronous slaves

502
00:26:38,940 --> 00:26:43,170
configured have one spare server that is

503
00:26:43,170 --> 00:26:46,680
a Singh right because that can still

504
00:26:46,680 --> 00:26:48,060
take over and be declared as a

505
00:26:48,060 --> 00:26:49,890
synchronously so you just have to catch

506
00:26:49,890 --> 00:26:52,320
up a few seconds and then you will still

507
00:26:52,320 --> 00:26:52,950
be fine

508
00:26:52,950 --> 00:26:55,050
and then restore that n Plus once

509
00:26:55,050 --> 00:26:58,800
however as an SN save or whatever but

510
00:26:58,800 --> 00:27:00,900
you get the idea so you still want to

511
00:27:00,900 --> 00:27:02,040
have your system running

512
00:27:02,040 --> 00:27:05,490
and remember disaster strikes

513
00:27:05,490 --> 00:27:10,350
it does Network latency so if you have a

514
00:27:10,350 --> 00:27:13,290
synchronous slave in America and you're

515
00:27:13,290 --> 00:27:15,870
on Belgium I don't know what exactly the

516
00:27:15,870 --> 00:27:18,510
round trip would be from here to New

517
00:27:18,510 --> 00:27:20,460
York but half a second something like

518
00:27:20,460 --> 00:27:22,770
that every commit will travel half a

519
00:27:22,770 --> 00:27:25,740
second and it will wait for another half

520
00:27:25,740 --> 00:27:28,890
a second until it gets a reply back dude

521
00:27:28,890 --> 00:27:32,820
that was 10,000 GPS you're fine you're

522
00:27:32,820 --> 00:27:37,350
not well so choose wisely right so you

523
00:27:37,350 --> 00:27:40,290
can still again in Postgres you can

524
00:27:40,290 --> 00:27:42,720
choose if your specific transaction

525
00:27:42,720 --> 00:27:44,580
should be synchronous so you can have it

526
00:27:44,580 --> 00:27:46,500
as in slave in New York no problem

527
00:27:46,500 --> 00:27:48,480
whenever you have some payment going

528
00:27:48,480 --> 00:27:50,940
over make that transaction synchronous

529
00:27:50,940 --> 00:27:55,050
it can wait for second that's fine so

530
00:27:55,050 --> 00:27:56,910
choose where to put your SIG's wave of

531
00:27:56,910 --> 00:28:00,060
these same building fine at the same

532
00:28:00,060 --> 00:28:03,240
building of course fine same city still

533
00:28:03,240 --> 00:28:06,870
okay I guess same country mmm different

534
00:28:06,870 --> 00:28:10,000
continent not a good plan

535
00:28:10,000 --> 00:28:13,480
pros and cons okay mmm

536
00:28:13,480 --> 00:28:17,660
fail you still have the one-to-one copy

537
00:28:17,660 --> 00:28:19,850
of your database and it's online it's

538
00:28:19,850 --> 00:28:21,860
there all the time you can just switch

539
00:28:21,860 --> 00:28:25,720
over and use that and carry on right

540
00:28:25,720 --> 00:28:28,370
it's reliable it's battle-proven

541
00:28:28,370 --> 00:28:35,090
it's been imposed questions eight-zero

542
00:28:35,090 --> 00:28:40,910
whatever for years the RTO and RPO are

543
00:28:40,910 --> 00:28:44,510
obviously very good right so you can be

544
00:28:44,510 --> 00:28:46,340
up and running in seconds and you lose

545
00:28:46,340 --> 00:28:48,500
the last time check transaction in the

546
00:28:48,500 --> 00:28:52,340
worst case so it's 99.999% availability

547
00:28:52,340 --> 00:28:55,760
is possible on the downside it works on

548
00:28:55,760 --> 00:28:59,660
a whole DB classes only again and yeah

549
00:28:59,660 --> 00:29:01,730
implications on network connection law

550
00:29:01,730 --> 00:29:03,530
so if your sync slave goes down and you

551
00:29:03,530 --> 00:29:07,929
only have one you have serious problems

552
00:29:07,929 --> 00:29:11,809
so hey replication that sounds good so I

553
00:29:11,809 --> 00:29:13,550
don't need backup anymore right and this

554
00:29:13,550 --> 00:29:16,190
wall archives and ha I don't need that

555
00:29:16,190 --> 00:29:23,990
anymore right no replication does not

556
00:29:23,990 --> 00:29:27,910
replace pickup you need backup

557
00:29:29,860 --> 00:29:34,059
rate does not replace Big Ups yeah we

558
00:29:34,059 --> 00:29:35,679
have rate controls we don't need backups

559
00:29:35,679 --> 00:29:37,600
now nothing goes wrong here okay fine

560
00:29:37,600 --> 00:29:40,179
the sand does not replace backups even

561
00:29:40,179 --> 00:29:41,230
if it's a mirror

562
00:29:41,230 --> 00:29:46,080
Netta based whatever sound no the cloud

563
00:29:46,080 --> 00:29:49,330
the cloud rest of that sentence is

564
00:29:49,330 --> 00:29:55,390
actually there is no cloud as the FS IV

565
00:29:55,390 --> 00:30:01,210
guys okay you get you get there so then

566
00:30:01,210 --> 00:30:03,899
let's combine it you want a wall archive

567
00:30:03,899 --> 00:30:07,899
you want a replication server right

568
00:30:07,899 --> 00:30:09,580
maybe you want want more than one

569
00:30:09,580 --> 00:30:11,289
replication server maybe you want to

570
00:30:11,289 --> 00:30:14,340
have one of them or any of them sync

571
00:30:14,340 --> 00:30:17,260
maybe you want to have a replicated

572
00:30:17,260 --> 00:30:20,169
server that is delayed by 30 minutes or

573
00:30:20,169 --> 00:30:22,450
maybe even a day or whatever maybe you

574
00:30:22,450 --> 00:30:25,000
even want to be cascading like have a

575
00:30:25,000 --> 00:30:27,279
sync slave in the same data center and

576
00:30:27,279 --> 00:30:29,080
have two more slaves and the other one

577
00:30:29,080 --> 00:30:31,330
and since bandwidth is not free

578
00:30:31,330 --> 00:30:34,809
sometimes you might want to have those

579
00:30:34,809 --> 00:30:37,510
conceded so you're only sent the data

580
00:30:37,510 --> 00:30:42,940
over the countryside once then you have

581
00:30:42,940 --> 00:30:47,200
a minimal RTO and you have the close as

582
00:30:47,200 --> 00:30:49,960
possible if you have one sync slave RPO

583
00:30:49,960 --> 00:30:52,929
or the closed feasible if you are not

584
00:30:52,929 --> 00:30:55,919
using using slave

585
00:30:57,370 --> 00:31:00,399
and you probably have some protection

586
00:31:00,399 --> 00:31:05,610
oh that's missing two stars right

587
00:31:05,610 --> 00:31:07,720
against the delete from customer

588
00:31:07,720 --> 00:31:11,649
statement and you can on top allow

589
00:31:11,649 --> 00:31:14,169
read-only queries like reporting

590
00:31:14,169 --> 00:31:17,019
analytic queries etc PP on one of your

591
00:31:17,019 --> 00:31:18,759
slaves and you're not interfering with

592
00:31:18,759 --> 00:31:21,399
your own ZP stuff that has some

593
00:31:21,399 --> 00:31:24,610
implications again but that's not

594
00:31:24,610 --> 00:31:27,999
covered here so this is basically what

595
00:31:27,999 --> 00:31:31,299
you want have a master have at least one

596
00:31:31,299 --> 00:31:34,240
slave a stream that's feeding the slave

597
00:31:34,240 --> 00:31:36,220
you have an archive command that will

598
00:31:36,220 --> 00:31:38,950
put all your walls to the wall archive

599
00:31:38,950 --> 00:31:40,450
and you have a restore command that the

600
00:31:40,450 --> 00:31:43,419
slave can still use as a fallback option

601
00:31:43,419 --> 00:31:45,730
to get the missing wall segments from

602
00:31:45,730 --> 00:31:49,240
the wall archive that's also you should

603
00:31:49,240 --> 00:31:52,149
always configure it to be able I've read

604
00:31:52,149 --> 00:31:54,279
war stories of customers that were

605
00:31:54,279 --> 00:31:56,350
running with replication for years

606
00:31:56,350 --> 00:31:58,749
and the replication option actually did

607
00:31:58,749 --> 00:32:00,970
not work but they were happy because

608
00:32:00,970 --> 00:32:03,490
they still had the archive which was

609
00:32:03,490 --> 00:32:05,019
fetching the wall segments they never

610
00:32:05,019 --> 00:32:06,730
realized there were 60 megabytes behind

611
00:32:06,730 --> 00:32:14,619
but it worked again so you get all of

612
00:32:14,619 --> 00:32:16,990
your application and all of the wall

613
00:32:16,990 --> 00:32:19,710
archive pros that's good we want that

614
00:32:19,710 --> 00:32:22,210
still the major version between these

615
00:32:22,210 --> 00:32:28,330
major version has to be the same so if

616
00:32:28,330 --> 00:32:30,669
you're running 9 6 0 here and 9 6 1

617
00:32:30,669 --> 00:32:33,309
there and you copy the stuff back you

618
00:32:33,309 --> 00:32:36,759
can still run on line 6 0 don't have to

619
00:32:36,759 --> 00:32:39,990
upgrade the binaries fast

620
00:32:40,650 --> 00:32:43,440
okay so that's more like what you want

621
00:32:43,440 --> 00:32:47,250
current system works like a charm and he

622
00:32:47,250 --> 00:32:51,510
can still run haiku on it if you want or

623
00:32:51,510 --> 00:32:55,320
a decent operating system a nice okay oh

624
00:32:55,320 --> 00:32:57,030
it's more like this to come back to the

625
00:32:57,030 --> 00:33:01,680
commute stuff right it does most of most

626
00:33:01,680 --> 00:33:03,860
of what you want but you can can still

627
00:33:03,860 --> 00:33:07,590
change to manual drawings and take over

628
00:33:07,590 --> 00:33:12,210
control so what do you have to do that

629
00:33:12,210 --> 00:33:19,350
how much time by the way 3 20 minutes oh

630
00:33:19,350 --> 00:33:25,440
cool fine after all we're the last talk

631
00:33:25,440 --> 00:33:28,530
so I only have to go back to Winston

632
00:33:28,530 --> 00:33:32,340
Germany today I'm not going through all

633
00:33:32,340 --> 00:33:35,130
the details but this I would recommend

634
00:33:35,130 --> 00:33:38,310
you to just set up in general even if

635
00:33:38,310 --> 00:33:40,500
you don't have replication or wall

636
00:33:40,500 --> 00:33:43,920
archive in place yet just put this in

637
00:33:43,920 --> 00:33:45,870
puppet or whatever your your

638
00:33:45,870 --> 00:33:48,270
configuration management does or

639
00:33:48,270 --> 00:33:50,190
something similar at least so set these

640
00:33:50,190 --> 00:33:52,620
options in Postgres here comes set the

641
00:33:52,620 --> 00:33:55,710
wall never to replica it does add a

642
00:33:55,710 --> 00:33:57,630
little bit on top of minimal but it's

643
00:33:57,630 --> 00:33:59,640
not that much and if you can afford a

644
00:33:59,640 --> 00:34:02,880
few megabytes mayor more just set

645
00:34:02,880 --> 00:34:05,940
logical straightaway that adds a little

646
00:34:05,940 --> 00:34:07,920
bit more overhead as well a few percent

647
00:34:07,920 --> 00:34:12,780
of a set archive mode on that just means

648
00:34:12,780 --> 00:34:14,820
call the archive command whenever you

649
00:34:14,820 --> 00:34:17,429
finish a wall segment and as archive

650
00:34:17,429 --> 00:34:20,610
command if you write the docs

651
00:34:20,610 --> 00:34:23,520
it says the minimum feasible command is

652
00:34:23,520 --> 00:34:26,570
something like CP

653
00:34:29,949 --> 00:34:35,000
right put a script name in there like

654
00:34:35,000 --> 00:34:38,059
really put your your archived script in

655
00:34:38,059 --> 00:34:42,139
there with % p % f that script could

656
00:34:42,139 --> 00:34:44,809
just do an exit zero bye-bye now

657
00:34:44,809 --> 00:34:47,539
but have it there right and put this

658
00:34:47,539 --> 00:34:50,839
into your Postgres comp set max small

659
00:34:50,839 --> 00:34:52,460
senders while you're there

660
00:34:52,460 --> 00:34:54,679
post goes 10 will have 10 as a default

661
00:34:54,679 --> 00:34:58,730
as far as i remember right now at 0 max

662
00:34:58,730 --> 00:35:00,890
replication slots just the same just put

663
00:35:00,890 --> 00:35:04,660
them in there they don't hurt you and

664
00:35:04,660 --> 00:35:06,950
synchronous commit I don't know

665
00:35:06,950 --> 00:35:09,650
up to here everything is start and

666
00:35:09,650 --> 00:35:12,950
parameters so except for the archive

667
00:35:12,950 --> 00:35:16,430
come on the wall level is not changeable

668
00:35:16,430 --> 00:35:19,519
on the runtime archive mode not max wall

669
00:35:19,519 --> 00:35:21,680
senders max max replication slots or

670
00:35:21,680 --> 00:35:23,510
require a restart and we don't like

671
00:35:23,510 --> 00:35:29,150
restarts set synchronous commit on a new

672
00:35:29,150 --> 00:35:31,759
server to local just for now like until

673
00:35:31,759 --> 00:35:33,319
you have everything set up you can just

674
00:35:33,319 --> 00:35:35,690
say okay I want to commit synchronously

675
00:35:35,690 --> 00:35:38,809
locally you do want that most probably

676
00:35:38,809 --> 00:35:41,869
and set synchronous tent by names to an

677
00:35:41,869 --> 00:35:44,269
empty string or even put your your

678
00:35:44,269 --> 00:35:46,099
synchronous tent by names that's

679
00:35:46,099 --> 00:35:48,740
basically the name that a slave comes to

680
00:35:48,740 --> 00:35:52,220
the mast and says hello I'm slave Bob do

681
00:35:52,220 --> 00:35:55,400
you have anything for me and if you then

682
00:35:55,400 --> 00:35:58,849
say Bob here it will take Bob as a

683
00:35:58,849 --> 00:36:01,640
synchronous slave if you put that in it

684
00:36:01,640 --> 00:36:03,710
will not hurt you right now because you

685
00:36:03,710 --> 00:36:05,359
have synchronous commit set to local

686
00:36:05,359 --> 00:36:08,269
that's why I recommend setting local for

687
00:36:08,269 --> 00:36:14,390
starters also set hot standby and to on

688
00:36:14,390 --> 00:36:16,549
on your master straightaway because you

689
00:36:16,549 --> 00:36:18,920
will be sinking your PostgreSQL comps

690
00:36:18,920 --> 00:36:21,769
between the slave and the master right

691
00:36:21,769 --> 00:36:24,730
so configure your slave on the master

692
00:36:24,730 --> 00:36:26,779
straightaway there are some more

693
00:36:26,779 --> 00:36:28,369
settings that you will probably want to

694
00:36:28,369 --> 00:36:30,140
touch but anyway this one is important

695
00:36:30,140 --> 00:36:32,839
and said lock collector to on will come

696
00:36:32,839 --> 00:36:34,789
to that

697
00:36:34,789 --> 00:36:38,419
man go and set up your wall archive and

698
00:36:38,419 --> 00:36:40,910
don't roll your own there's a lot of

699
00:36:40,910 --> 00:36:43,339
smart people out there who have done

700
00:36:43,339 --> 00:36:46,189
that for you use Petri bomb and use PG

701
00:36:46,189 --> 00:36:48,739
backrest use wall-e and there's a couple

702
00:36:48,739 --> 00:36:50,630
more I don't remember most of them I'm

703
00:36:50,630 --> 00:36:54,009
I'm personally a fanboy of PG bar man

704
00:36:54,009 --> 00:36:58,759
basically because a usage it's okay

705
00:36:58,759 --> 00:37:02,239
I mean backrest is more or less has more

706
00:37:02,239 --> 00:37:03,949
or less the same feature set wall-e will

707
00:37:03,949 --> 00:37:06,919
send your wall files to Amazon to the

708
00:37:06,919 --> 00:37:07,489
cloud

709
00:37:07,489 --> 00:37:11,229
oh that's two stars missing there

710
00:37:11,829 --> 00:37:15,109
whatever follow the set of instructions

711
00:37:15,109 --> 00:37:17,779
most of them are documented quite okay

712
00:37:17,779 --> 00:37:22,749
don't roll your own don't just don't

713
00:37:22,749 --> 00:37:25,759
take that time and invested in thinking

714
00:37:25,759 --> 00:37:28,130
about how much redundancy you have I

715
00:37:28,130 --> 00:37:30,349
want to have how much resistance are

716
00:37:30,349 --> 00:37:32,689
about resistance in general we come to

717
00:37:32,689 --> 00:37:36,739
that and data safety yo DB server is

718
00:37:36,739 --> 00:37:38,509
certainly not the right place to keep

719
00:37:38,509 --> 00:37:42,289
your wall archive that should have one

720
00:37:42,289 --> 00:37:46,759
star and two stars whatever well the the

721
00:37:46,759 --> 00:37:49,549
example in the doc says CP if that's not

722
00:37:49,549 --> 00:37:51,499
an NFS share it's on the same server I'd

723
00:37:51,499 --> 00:37:53,329
also says the same servers not a good

724
00:37:53,329 --> 00:37:56,919
idea or not a good place but still yeah

725
00:37:56,919 --> 00:37:59,779
should have to mention even the same

726
00:37:59,779 --> 00:38:01,939
data center it's a bad choice like if a

727
00:38:01,939 --> 00:38:05,119
plane crashes or the power plant blows

728
00:38:05,119 --> 00:38:08,479
up or whatever disaster strikes missing

729
00:38:08,479 --> 00:38:11,089
a red star mm-hmm unless you have a

730
00:38:11,089 --> 00:38:13,969
mirror like maybe the Sun that mirrors

731
00:38:13,969 --> 00:38:16,309
by itself whatever so what should that

732
00:38:16,309 --> 00:38:23,479
your archive script look like I will one

733
00:38:23,479 --> 00:38:25,849
of the reasons why the archive command

734
00:38:25,849 --> 00:38:28,069
and the restore command are not you know

735
00:38:28,069 --> 00:38:30,229
like like there's no default for that

736
00:38:30,229 --> 00:38:32,659
not even in the docs because everybody's

737
00:38:32,659 --> 00:38:35,719
environment is so different and you

738
00:38:35,719 --> 00:38:38,269
cannot cover it all you can't even try I

739
00:38:38,269 --> 00:38:40,999
think some commercial vendors will try

740
00:38:40,999 --> 00:38:42,099
or do try

741
00:38:42,099 --> 00:38:44,799
then you have some different backup

742
00:38:44,799 --> 00:38:46,839
solution for that that database and so

743
00:38:46,839 --> 00:38:48,160
on and so on and that's not what pulse

744
00:38:48,160 --> 00:38:51,549
quest works like archive commands you

745
00:38:51,549 --> 00:38:54,759
can write passing blah whatever into

746
00:38:54,759 --> 00:38:57,309
your PostgreSQL conf c coverage and it

747
00:38:57,309 --> 00:39:03,039
will run that from then on but yeah even

748
00:39:03,039 --> 00:39:04,450
if you have some error checking it will

749
00:39:04,450 --> 00:39:07,479
not fit right so I'll put it in a script

750
00:39:07,479 --> 00:39:10,329
the script can just be changed so next

751
00:39:10,329 --> 00:39:12,759
time the archive runs it it will be

752
00:39:12,759 --> 00:39:17,829
running the new version purpose somehow

753
00:39:17,829 --> 00:39:22,450
get the parameter doesn't pee to your

754
00:39:22,450 --> 00:39:25,150
wall archive as fine so P is a complete

755
00:39:25,150 --> 00:39:28,089
pass tool to the wall file and F is the

756
00:39:28,089 --> 00:39:31,210
filename on its own but comfy you don't

757
00:39:31,210 --> 00:39:32,979
have to split it yourself so give it

758
00:39:32,979 --> 00:39:35,229
both right and then get it off your

759
00:39:35,229 --> 00:39:37,989
server I think it's actually not a bad

760
00:39:37,989 --> 00:39:42,249
choice in my personal opinion but you

761
00:39:42,249 --> 00:39:45,130
have to make sure that F so the fire

762
00:39:45,130 --> 00:39:47,170
name of your wall I kind of a kind if

763
00:39:47,170 --> 00:39:48,819
you want to archive if it's not existing

764
00:39:48,819 --> 00:39:52,329
yet on the server otherwise well two

765
00:39:52,329 --> 00:39:56,229
stars you clone your slave by filesystem

766
00:39:56,229 --> 00:39:58,150
copy or whatever and it will start up

767
00:39:58,150 --> 00:40:00,400
and run the same script and have the

768
00:40:00,400 --> 00:40:01,960
same destination server the same

769
00:40:01,960 --> 00:40:04,180
destination directory and it will

770
00:40:04,180 --> 00:40:05,979
receive different updates and then you

771
00:40:05,979 --> 00:40:07,779
have conflicting writes on the same wall

772
00:40:07,779 --> 00:40:11,920
segments now not what you want so make

773
00:40:11,920 --> 00:40:16,900
sure that does not exist yet call us

774
00:40:16,900 --> 00:40:21,579
call sync we'll get back to that or

775
00:40:21,579 --> 00:40:27,219
maybe you want to have it maybe you want

776
00:40:27,219 --> 00:40:29,859
to have that part on a file system on a

777
00:40:29,859 --> 00:40:33,538
remote server that is mounted sync

778
00:40:34,359 --> 00:40:37,359
good

779
00:40:40,799 --> 00:40:43,509
what I actually ran into which led to

780
00:40:43,509 --> 00:40:45,819
this talk is a sink tends to give you

781
00:40:45,819 --> 00:40:51,519
return codes of 255 or so when it cannot

782
00:40:51,519 --> 00:40:54,940
resolve a name so if your dns is being

783
00:40:54,940 --> 00:40:57,849
restarted right at that moment you will

784
00:40:57,849 --> 00:41:00,279
get a fatal error in your logs like ooh

785
00:41:00,279 --> 00:41:04,869
archive of what received our archive

786
00:41:04,869 --> 00:41:08,950
commands returned 255 exiting ooh what

787
00:41:08,950 --> 00:41:11,140
fatal fatal fatal fatal is the highest

788
00:41:11,140 --> 00:41:12,720
level before panic that you can get

789
00:41:12,720 --> 00:41:16,269
that's most probably all red lights in

790
00:41:16,269 --> 00:41:18,630
your monitoring will go off blasting and

791
00:41:18,630 --> 00:41:21,759
yeah that's not nice so filter those

792
00:41:21,759 --> 00:41:24,180
right don't return anything larger than

793
00:41:24,180 --> 00:41:27,910
127 straight away because otherwise you

794
00:41:27,910 --> 00:41:31,180
will have fatal log entries that's at

795
00:41:31,180 --> 00:41:32,769
the end of the day the archive will will

796
00:41:32,769 --> 00:41:35,559
try and fire again except you return

797
00:41:35,559 --> 00:41:41,740
zero when you return 128 it will exit

798
00:41:41,740 --> 00:41:44,380
start again and try again so not really

799
00:41:44,380 --> 00:41:45,819
a difference except that you have a fork

800
00:41:45,819 --> 00:41:49,410
in between and the fatal Locker entry so

801
00:41:49,410 --> 00:41:52,920
make sure that you never ever return 0

802
00:41:52,920 --> 00:41:55,239
before you have that done the drop

803
00:41:55,239 --> 00:42:00,180
proper with your script sounds simple

804
00:42:00,190 --> 00:42:03,760
actually it is simple unless of course

805
00:42:03,760 --> 00:42:05,800
yeah well when you're still setting

806
00:42:05,800 --> 00:42:07,510
everything up and so on you have an exit

807
00:42:07,510 --> 00:42:09,700
zero in the first line set minus e

808
00:42:09,700 --> 00:42:14,349
etcetera you get the idea why we turned

809
00:42:14,349 --> 00:42:17,020
Locke collector on is that if you have

810
00:42:17,020 --> 00:42:19,089
low collector on in the PostgreSQL

811
00:42:19,089 --> 00:42:20,770
anything that the archive command will

812
00:42:20,770 --> 00:42:22,960
send to standard out and standard error

813
00:42:22,960 --> 00:42:24,490
will end up in your post where's Locke

814
00:42:24,490 --> 00:42:26,910
otherwise it will end up in deaf ear Oh

815
00:42:26,910 --> 00:42:31,480
deaf now sorry you know so that's not

816
00:42:31,480 --> 00:42:33,670
where it belongs so log collector will

817
00:42:33,670 --> 00:42:36,550
collect that and put it to your log you

818
00:42:36,550 --> 00:42:40,109
want to have that okay fail again

819
00:42:40,109 --> 00:42:42,490
but we can start with that right it's

820
00:42:42,490 --> 00:42:50,740
got two styles no remember that whatever

821
00:42:50,740 --> 00:42:55,960
you do CP s CP arcing copy by n FS you

822
00:42:55,960 --> 00:42:57,579
are probably writing into some page

823
00:42:57,579 --> 00:43:01,089
cache so when our Seng finishes that

824
00:43:01,089 --> 00:43:02,920
does not mean that your wall segment has

825
00:43:02,920 --> 00:43:05,440
been persistently written to disk on the

826
00:43:05,440 --> 00:43:07,599
remote server just means that it's in

827
00:43:07,599 --> 00:43:09,760
Linux page cache and it can be there for

828
00:43:09,760 --> 00:43:11,680
the next 30 seconds or five minutes or

829
00:43:11,680 --> 00:43:14,800
whatever so that's why I said always

830
00:43:14,800 --> 00:43:18,329
called sync NFS is usually I think

831
00:43:18,329 --> 00:43:20,950
that's even worse they have somewhere in

832
00:43:20,950 --> 00:43:24,609
the network buffer except you mount sink

833
00:43:24,609 --> 00:43:27,670
and then it gets terribly slow so then

834
00:43:27,670 --> 00:43:30,099
when you're mounting NFS it's not really

835
00:43:30,099 --> 00:43:34,359
an option anymore what my opinion but

836
00:43:34,359 --> 00:43:36,490
your backup and your wall archive is not

837
00:43:36,490 --> 00:43:38,349
safe until it has been flushed to

838
00:43:38,349 --> 00:43:41,280
persistent storage in a safe location

839
00:43:41,280 --> 00:43:45,190
so SCP to your remote server data center

840
00:43:45,190 --> 00:43:48,190
goes down and you have lost data at that

841
00:43:48,190 --> 00:43:50,319
particular moment because it is still in

842
00:43:50,319 --> 00:43:52,630
the page cache of your wall archive

843
00:43:52,630 --> 00:43:56,400
server so that's why you sink

844
00:43:57,039 --> 00:44:01,910
and okay same goes for the wall segments

845
00:44:01,910 --> 00:44:03,890
okay I wanted to I'd really really

846
00:44:03,890 --> 00:44:06,500
really make sure you got that it's the

847
00:44:06,500 --> 00:44:12,710
same sentence okay yeah okay that is an

848
00:44:12,710 --> 00:44:14,780
in a perfect world right if your

849
00:44:14,780 --> 00:44:19,190
personal RTO and RPO requirements are

850
00:44:19,190 --> 00:44:20,059
not that high

851
00:44:20,059 --> 00:44:22,670
mounting something thing sink is not too

852
00:44:22,670 --> 00:44:25,130
effective usually so you will probably

853
00:44:25,130 --> 00:44:27,829
make some compromises but know about the

854
00:44:27,829 --> 00:44:30,589
implications remember you might still

855
00:44:30,589 --> 00:44:32,869
lose data okay

856
00:44:32,869 --> 00:44:40,609
that's why that's two stars humans now

857
00:44:40,609 --> 00:44:43,390
go on activate activate your archiving

858
00:44:43,390 --> 00:44:48,950
like activate your your bomb and cron

859
00:44:48,950 --> 00:44:53,660
drop whatever no remove the exit zero

860
00:44:53,660 --> 00:44:56,480
and watch it make sure that you really

861
00:44:56,480 --> 00:44:58,940
really really write your wall segments

862
00:44:58,940 --> 00:45:03,799
to the archive PG switch X log X lock is

863
00:45:03,799 --> 00:45:05,450
a function that you can call it it will

864
00:45:05,450 --> 00:45:07,760
start a new wall segment and archive the

865
00:45:07,760 --> 00:45:10,279
old one right so you can check that if

866
00:45:10,279 --> 00:45:13,700
it works if it does not work you might

867
00:45:13,700 --> 00:45:15,760
run into trouble after a while because

868
00:45:15,760 --> 00:45:18,349
Postgres will not throw away any wall

869
00:45:18,349 --> 00:45:21,109
segment it has not archived so if you

870
00:45:21,109 --> 00:45:23,000
have a script that does the job right

871
00:45:23,000 --> 00:45:26,210
but does not return zero PO squares will

872
00:45:26,210 --> 00:45:28,490
try to run that over and over again and

873
00:45:28,490 --> 00:45:31,160
not throw away the wall segment and then

874
00:45:31,160 --> 00:45:33,859
you get called out of bed in the middle

875
00:45:33,859 --> 00:45:36,650
of the night because this space is gone

876
00:45:36,650 --> 00:45:39,700
oh you're out of disk disk space

877
00:45:39,700 --> 00:45:42,170
replication slips by the way just work

878
00:45:42,170 --> 00:45:44,329
the same way so they will not throw away

879
00:45:44,329 --> 00:45:46,460
any wall segment that has not been sent

880
00:45:46,460 --> 00:45:50,510
through all replication slots keep that

881
00:45:50,510 --> 00:45:52,250
in mind if you want to use replication

882
00:45:52,250 --> 00:45:57,619
slots so now try full backup you are

883
00:45:57,619 --> 00:46:01,160
using a tool promise you're using a tool

884
00:46:01,160 --> 00:46:04,279
so that would be for example if you're

885
00:46:04,279 --> 00:46:06,860
using Bama and run bomb and

886
00:46:06,860 --> 00:46:09,110
all and just watch and check that

887
00:46:09,110 --> 00:46:14,780
everything works right and then you'd

888
00:46:14,780 --> 00:46:17,150
set up your replication slave five

889
00:46:17,150 --> 00:46:24,410
minutes cool so you have to do something

890
00:46:24,410 --> 00:46:27,020
on the PHP a conf to allow for

891
00:46:27,020 --> 00:46:28,760
replication but you probably did that

892
00:46:28,760 --> 00:46:31,190
already when you configured barmen or

893
00:46:31,190 --> 00:46:34,910
your your wall archive because many of

894
00:46:34,910 --> 00:46:37,280
them use replication now as well you

895
00:46:37,280 --> 00:46:40,640
prepare the new PG data assuming that

896
00:46:40,640 --> 00:46:42,710
you're running Debian Ubuntu you will

897
00:46:42,710 --> 00:46:44,090
probably call the wrapper script and

898
00:46:44,090 --> 00:46:45,770
just have it create a new instance and

899
00:46:45,770 --> 00:46:48,950
then go there and delete it stop it

900
00:46:48,950 --> 00:46:53,750
first maybe really do RM minus RF in

901
00:46:53,750 --> 00:46:57,830
your new valid P PostgreSQL nine six

902
00:46:57,830 --> 00:47:00,470
main whatever you don't need that

903
00:47:00,470 --> 00:47:01,430
Scratchy

904
00:47:01,430 --> 00:47:03,020
but you have a post-graduate confianza

905
00:47:03,020 --> 00:47:05,210
PGH we a concert cetera if he in the

906
00:47:05,210 --> 00:47:08,530
right location init scripts system be

907
00:47:08,530 --> 00:47:11,660
set up yeah

908
00:47:11,660 --> 00:47:14,330
so make sure that you have copied your

909
00:47:14,330 --> 00:47:18,410
PostgreSQL conf PGH PA conf etc over so

910
00:47:18,410 --> 00:47:20,120
that your slave will actually work if

911
00:47:20,120 --> 00:47:22,930
you promote him to be the new master and

912
00:47:22,930 --> 00:47:26,720
then run it know run PG base back I'm

913
00:47:26,720 --> 00:47:28,360
actually first you have to do the copy

914
00:47:28,360 --> 00:47:31,400
so you're on PG base back up on your

915
00:47:31,400 --> 00:47:36,710
news new slave say tell it to fetch the

916
00:47:36,710 --> 00:47:39,290
X log segments wire stream

917
00:47:39,290 --> 00:47:42,890
give your host if your user and so on

918
00:47:42,890 --> 00:47:44,840
and so on and you give it the new PG

919
00:47:44,840 --> 00:47:47,060
data directory bar loop Hillsboro blow

920
00:47:47,060 --> 00:47:49,400
up whatever and it will just copy

921
00:47:49,400 --> 00:47:52,910
everything over and provide you with a

922
00:47:52,910 --> 00:47:55,070
running instance and because you have

923
00:47:55,070 --> 00:47:57,230
given minus R it will also create a

924
00:47:57,230 --> 00:47:59,810
recovery conf that will basically work

925
00:47:59,810 --> 00:48:03,020
except that you will probably want to

926
00:48:03,020 --> 00:48:06,680
add a restore command which enables the

927
00:48:06,680 --> 00:48:08,660
new slave to fetch missing wall segments

928
00:48:08,660 --> 00:48:13,480
later from your wall archive

929
00:48:13,700 --> 00:48:16,800
start enjoying rinse repeat

930
00:48:16,800 --> 00:48:19,680
next slave maybe you want to have that a

931
00:48:19,680 --> 00:48:24,870
sink or sink or delayed or whatever it's

932
00:48:24,870 --> 00:48:28,770
not really that hard now start looking

933
00:48:28,770 --> 00:48:30,810
for software to manage your application

934
00:48:30,810 --> 00:48:33,390
again lots of smart people have done

935
00:48:33,390 --> 00:48:35,280
that job already don't roll your own

936
00:48:35,280 --> 00:48:41,070
it's not necessary rep manager is sink

937
00:48:41,070 --> 00:48:43,290
now five years old or something open

938
00:48:43,290 --> 00:48:46,770
source project actively maintained path

939
00:48:46,770 --> 00:48:52,580
by dolly ball which is a resource for

940
00:48:52,580 --> 00:48:56,910
what's it name again what's that Linux H

941
00:48:56,910 --> 00:49:01,620
a manager pacemaker yeah it's a

942
00:49:01,620 --> 00:49:03,390
pacemaker so it's poor who's miss

943
00:49:03,390 --> 00:49:06,590
automatic failover that looks promising

944
00:49:06,590 --> 00:49:09,060
pacemaker itself has a problem has a

945
00:49:09,060 --> 00:49:12,870
post gross resource but that will will

946
00:49:12,870 --> 00:49:14,790
mangle with your PostgreSQL kung-fu

947
00:49:14,790 --> 00:49:17,220
probably don't want that PG lookout I

948
00:49:17,220 --> 00:49:19,230
actually don't know I've got that from

949
00:49:19,230 --> 00:49:22,140
the wiki as wiki page is also funny for

950
00:49:22,140 --> 00:49:25,830
the archiving part so that's a good

951
00:49:25,830 --> 00:49:26,580
place to start

952
00:49:26,580 --> 00:49:32,040
probably or if you are like me you

953
00:49:32,040 --> 00:49:34,530
probably do not rely on some kind of

954
00:49:34,530 --> 00:49:36,300
software to assess your high

955
00:49:36,300 --> 00:49:39,720
availability but do it yourself with not

956
00:49:39,720 --> 00:49:41,880
we don't have that many instances if you

957
00:49:41,880 --> 00:49:44,550
run 8000 for Postgres instances you

958
00:49:44,550 --> 00:49:47,790
probably want someone like that

959
00:49:47,790 --> 00:49:51,859
otherwise you get balls every day

960
00:49:51,859 --> 00:49:54,450
logically replication I'm only

961
00:49:54,450 --> 00:49:56,400
mentioning it because it's not yet done

962
00:49:56,400 --> 00:49:59,490
and I can only like the guy who wrote it

963
00:49:59,490 --> 00:50:01,740
is over there and that could be awkward

964
00:50:01,740 --> 00:50:07,290
right but still a logical replication

965
00:50:07,290 --> 00:50:09,930
and the not so recent past would have

966
00:50:09,930 --> 00:50:13,980
meant that you were using slowly Bacardi

967
00:50:13,980 --> 00:50:17,760
baccardo or Skye tools and what they

968
00:50:17,760 --> 00:50:22,550
have in common is we're all gonna die

969
00:50:22,550 --> 00:50:25,619
it's not that bad actually but still

970
00:50:25,619 --> 00:50:29,280
like since they are based on on triggers

971
00:50:29,280 --> 00:50:31,859
and have a lot of options and so on and

972
00:50:31,859 --> 00:50:34,410
so on and just keeping track that you

973
00:50:34,410 --> 00:50:35,850
replicate everything that you want to

974
00:50:35,850 --> 00:50:38,100
replicate it cetera PPE that's that's

975
00:50:38,100 --> 00:50:42,270
the picture to get back to that point so

976
00:50:42,270 --> 00:50:47,250
yeah I don't know wait for 10 10 we'll

977
00:50:47,250 --> 00:50:50,010
have logical replication or use PD

978
00:50:50,010 --> 00:50:51,869
logical now if you want logical

979
00:50:51,869 --> 00:50:57,570
replication as mentioned if you ever

980
00:50:57,570 --> 00:51:00,180
ever plan to use logical replication set

981
00:51:00,180 --> 00:51:01,950
up your wall level to be logical right

982
00:51:01,950 --> 00:51:04,590
away because then you can like use it

983
00:51:04,590 --> 00:51:06,960
later maybe to do a point in time

984
00:51:06,960 --> 00:51:08,400
recovery and start your logical

985
00:51:08,400 --> 00:51:10,500
replication from that and so on and so

986
00:51:10,500 --> 00:51:12,020
on

987
00:51:12,020 --> 00:51:15,090
it will allow oh it does allow night

988
00:51:15,090 --> 00:51:18,480
things like rather painless low or zero

989
00:51:18,480 --> 00:51:20,910
downtime version upgrades like switching

990
00:51:20,910 --> 00:51:26,300
from 9 6 to 10 or 10 to 11 goes to 11

991
00:51:26,300 --> 00:51:28,710
things like sharding come to mind

992
00:51:28,710 --> 00:51:30,750
collecting data from different or ATP

993
00:51:30,750 --> 00:51:33,540
databases it all takes into your data

994
00:51:33,540 --> 00:51:36,210
warehouse multi-master replication etc

995
00:51:36,210 --> 00:51:39,260
BP Gooding guten has covered that part

996
00:51:39,260 --> 00:51:42,890
quite extensively

997
00:51:44,020 --> 00:51:47,650
when it is in card will be like you

998
00:51:47,650 --> 00:51:49,440
still have to know that you are in a

999
00:51:49,440 --> 00:51:51,850
three-dimensional world and that you

1000
00:51:51,850 --> 00:51:54,100
have to to like watch out for trees and

1001
00:51:54,100 --> 00:51:55,660
so on but it's much much more

1002
00:51:55,660 --> 00:52:01,860
comfortable than this right okay

1003
00:52:01,860 --> 00:52:05,400
hopefully better

1004
00:52:09,810 --> 00:52:13,600
famous last words don't reinvent the

1005
00:52:13,600 --> 00:52:16,750
wheel don't roll your own there are

1006
00:52:16,750 --> 00:52:18,490
so many smart people who have done all

1007
00:52:18,490 --> 00:52:21,520
that before and you can only fail where

1008
00:52:21,520 --> 00:52:22,750
they failed already

1009
00:52:22,750 --> 00:52:25,770
right so test your Becca procedure and

1010
00:52:25,770 --> 00:52:28,180
even more important yeah we're great at

1011
00:52:28,180 --> 00:52:30,460
Becca but we're bad at least all right

1012
00:52:30,460 --> 00:52:36,120
test your e-stops on a regular basis and

1013
00:52:36,120 --> 00:52:39,580
make sure everybody in your team knows

1014
00:52:39,580 --> 00:52:43,360
how to restore even maybe knows how to

1015
00:52:43,360 --> 00:52:46,450
do it in time recovery don't have that

1016
00:52:46,450 --> 00:52:48,670
guy that is now on holiday in northern

1017
00:52:48,670 --> 00:52:52,300
India for four weeks be the only one in

1018
00:52:52,300 --> 00:52:53,440
your team who knows how to do a

1019
00:52:53,440 --> 00:52:57,850
point-in-time recovery right monitor

1020
00:52:57,850 --> 00:52:59,770
your logs and your legs monitor your

1021
00:52:59,770 --> 00:53:01,860
replication legs that's what I mean here

1022
00:53:01,860 --> 00:53:04,600
so if you fall six hours behind maybe

1023
00:53:04,600 --> 00:53:07,240
check earlier make sure your conflicts

1024
00:53:07,240 --> 00:53:09,700
aren't sync so worst case that can

1025
00:53:09,700 --> 00:53:11,590
happen is that you you like build up

1026
00:53:11,590 --> 00:53:13,360
your master and master and configure

1027
00:53:13,360 --> 00:53:15,250
stuff and so on and the slave is sitting

1028
00:53:15,250 --> 00:53:17,740
there replaying and then you promote him

1029
00:53:17,740 --> 00:53:20,980
and your share buffers your connections

1030
00:53:20,980 --> 00:53:23,650
all these limits are not configured so

1031
00:53:23,650 --> 00:53:25,180
that means you need to restart that

1032
00:53:25,180 --> 00:53:28,860
server means you have a cold start up

1033
00:53:28,860 --> 00:53:34,390
not good okay in case of disaster keep

1034
00:53:34,390 --> 00:53:36,970
calm and just carry on and do not try to

1035
00:53:36,970 --> 00:53:41,920
do LVM snapshots restart whatever that's

1036
00:53:41,920 --> 00:53:42,300
it

1037
00:53:42,300 --> 00:53:46,590
fit quite well only five minutes over

1038
00:53:46,970 --> 00:53:49,029
you

