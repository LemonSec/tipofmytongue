1
00:00:05,319 --> 00:00:08,389
okay I'll begin to talk a little in

2
00:00:08,389 --> 00:00:11,629
advance just take the two extra minute

3
00:00:11,629 --> 00:00:13,280
away I'd like to introduce myself

4
00:00:13,280 --> 00:00:16,670
so I'm John Josue Gagne I work at

5
00:00:16,670 --> 00:00:21,740
booking.com as system engineer I'm I I

6
00:00:21,740 --> 00:00:24,020
landed when I joined booking in the DPA

7
00:00:24,020 --> 00:00:27,200
team I never touch my sequel before so

8
00:00:27,200 --> 00:00:31,010
it was kind of a strange or assignment

9
00:00:31,010 --> 00:00:34,969
or strange place to land but I I really

10
00:00:34,969 --> 00:00:37,640
enjoyed my time there it's been over

11
00:00:37,640 --> 00:00:42,530
three years now and and I will talk to

12
00:00:42,530 --> 00:00:46,489
you about a war story that I've been at

13
00:00:46,489 --> 00:00:50,050
booking and I think it's interesting to

14
00:00:50,050 --> 00:00:52,550
share war stories

15
00:00:52,550 --> 00:00:54,230
not necessarily to say hey like

16
00:00:54,230 --> 00:00:56,930
something bad happen and we're bad this

17
00:00:56,930 --> 00:00:59,870
is not the idea like it's this really

18
00:00:59,870 --> 00:01:01,550
happened its production it's the real

19
00:01:01,550 --> 00:01:04,759
world and the mistake that we're done

20
00:01:04,759 --> 00:01:10,670
here I think our learnings and so I hope

21
00:01:10,670 --> 00:01:14,420
that you can take away some some things

22
00:01:14,420 --> 00:01:19,420
from what happened and one thing is that

23
00:01:19,420 --> 00:01:21,499
something happened at booking and it was

24
00:01:21,499 --> 00:01:23,109
caused by automation

25
00:01:23,109 --> 00:01:27,590
so it's automation is supposed to give

26
00:01:27,590 --> 00:01:31,149
us less work not to break things and

27
00:01:31,149 --> 00:01:36,499
needs human to fix stuff so I think

28
00:01:36,499 --> 00:01:38,029
there's there's a few interesting things

29
00:01:38,029 --> 00:01:44,599
there so I will start by that we all

30
00:01:44,599 --> 00:01:47,979
know that saying like human make errors

31
00:01:47,979 --> 00:01:51,409
but to really really mess things up you

32
00:01:51,409 --> 00:01:56,569
need a computer or in our case a script

33
00:01:56,569 --> 00:01:59,419
an automation script so we'll come back

34
00:01:59,419 --> 00:02:03,079
to what I can so a little about booking

35
00:02:03,079 --> 00:02:06,439
so we sell hotel room on the Internet

36
00:02:06,439 --> 00:02:08,530
we're quite big

37
00:02:08,530 --> 00:02:10,300
more than a million properties on the

38
00:02:10,300 --> 00:02:12,370
website so there's more than a million

39
00:02:12,370 --> 00:02:14,080
or hotels that you can book on

40
00:02:14,080 --> 00:02:16,930
booking.com when I joined three years

41
00:02:16,930 --> 00:02:21,580
ago people were celebrating 400,000

42
00:02:21,580 --> 00:02:24,160
hotels so now in three years we did

43
00:02:24,160 --> 00:02:27,100
almost like we we triple that number so

44
00:02:27,100 --> 00:02:30,670
it's quite an amazing place to to be and

45
00:02:30,670 --> 00:02:34,750
we're still growing we use my sequel we

46
00:02:34,750 --> 00:02:37,210
have thousands of my sequel server and

47
00:02:37,210 --> 00:02:40,150
we use replication and this is a story

48
00:02:40,150 --> 00:02:44,340
about one of our replication deployment

49
00:02:44,340 --> 00:02:47,080
so this is what I'm gonna talk about you

50
00:02:47,080 --> 00:02:50,830
can all read I'll continue so this is a

51
00:02:50,830 --> 00:02:54,880
typical replication setup at booking we

52
00:02:54,880 --> 00:02:57,250
have a master where we write

53
00:02:57,250 --> 00:03:00,580
we have slaves where we read and a

54
00:03:00,580 --> 00:03:02,560
synchronous replication happens in the

55
00:03:02,560 --> 00:03:05,110
middle we have intermediate master

56
00:03:05,110 --> 00:03:10,230
either for replication fan-out or for

57
00:03:10,230 --> 00:03:13,090
being the point of contact slaves on a

58
00:03:13,090 --> 00:03:15,250
remote data center and we sometimes that

59
00:03:15,250 --> 00:03:18,090
slaves directly connected to the master

60
00:03:18,090 --> 00:03:22,840
quite a simple setup sometimes we have

61
00:03:22,840 --> 00:03:26,440
very small deployment one local slave to

62
00:03:26,440 --> 00:03:28,510
remote servers and sometime with very

63
00:03:28,510 --> 00:03:32,770
big deployments and this is an example

64
00:03:32,770 --> 00:03:34,900
of a medium deployment using

65
00:03:34,900 --> 00:03:37,150
Orchestrator social ami is not with us

66
00:03:37,150 --> 00:03:39,820
but slow me also developed Orchestrator

67
00:03:39,820 --> 00:03:42,790
and so we have our master we have three

68
00:03:42,790 --> 00:03:44,950
intermediate master two of them are in

69
00:03:44,950 --> 00:03:47,470
remote data center dash line here mean

70
00:03:47,470 --> 00:03:50,170
remote data center and each of those

71
00:03:50,170 --> 00:03:53,620
intermediate master have forty slaves so

72
00:03:53,620 --> 00:03:56,489
there is about a hundred and twenty

73
00:03:56,489 --> 00:04:00,880
servers and that deployment I would call

74
00:04:00,880 --> 00:04:03,400
that a medium deployment for booking we

75
00:04:03,400 --> 00:04:07,690
have we have medium medium large it's

76
00:04:07,690 --> 00:04:08,890
not a huge one

77
00:04:08,890 --> 00:04:10,810
we have some that are bigger than that

78
00:04:10,810 --> 00:04:13,500
but it's it's one of the respectable

79
00:04:13,500 --> 00:04:16,690
deployment we have so we will so the

80
00:04:16,690 --> 00:04:19,690
orchestrator and Orchestrator allows us

81
00:04:19,690 --> 00:04:22,320
to visualize our replication deployment

82
00:04:22,320 --> 00:04:25,419
it allows us to move slaves from one

83
00:04:25,419 --> 00:04:27,070
intermediate master to another one and

84
00:04:27,070 --> 00:04:30,669
it also do some automation it can

85
00:04:30,669 --> 00:04:33,610
automatically replace an intermediate

86
00:04:33,610 --> 00:04:36,130
master if it fails so if we have that

87
00:04:36,130 --> 00:04:38,650
node that is failing and at that point

88
00:04:38,650 --> 00:04:40,780
all the slaves there stop receiving

89
00:04:40,780 --> 00:04:44,800
rights Orchestrator will see that and it

90
00:04:44,800 --> 00:04:48,130
will fix things that will point the

91
00:04:48,130 --> 00:04:51,280
slaves back to other intermediate master

92
00:04:51,280 --> 00:04:53,950
or it will promote a new intermediate

93
00:04:53,950 --> 00:04:56,919
master and also Orchestrator

94
00:04:56,919 --> 00:04:59,500
automatically replaced a master when the

95
00:04:59,500 --> 00:05:02,200
master fails so if in our example the

96
00:05:02,200 --> 00:05:05,980
master fails one of those one of its

97
00:05:05,980 --> 00:05:08,730
slave will be promoted as a new master

98
00:05:08,730 --> 00:05:12,340
which is quite interesting because when

99
00:05:12,340 --> 00:05:15,160
you deploy that as a DPA you're not

100
00:05:15,160 --> 00:05:17,440
Paige at 2:00 in the morning to fix

101
00:05:17,440 --> 00:05:20,010
things things get fixed by themselves

102
00:05:20,010 --> 00:05:22,690
and that's good right

103
00:05:22,690 --> 00:05:25,380
it's automation

104
00:05:27,260 --> 00:05:31,280
but orchestra cannot do that by itself

105
00:05:31,280 --> 00:05:33,410
Orchestrator is good at repointing

106
00:05:33,410 --> 00:05:38,090
slaves at moving it understand my sequel

107
00:05:38,090 --> 00:05:43,100
but Orchestra doesn't understand the way

108
00:05:43,100 --> 00:05:44,990
we use my sequel at booking and the way

109
00:05:44,990 --> 00:05:46,520
we use my sequel at booking might be

110
00:05:46,520 --> 00:05:49,010
different as the way my sequel is used

111
00:05:49,010 --> 00:05:52,280
at get up at booking we use DNS for

112
00:05:52,280 --> 00:05:55,640
knowing too which server we need to

113
00:05:55,640 --> 00:05:59,180
write as the master orchestra doesn't

114
00:05:59,180 --> 00:06:03,410
know we use DNS so Orchestrator when it

115
00:06:03,410 --> 00:06:05,600
does a failover call a script which is

116
00:06:05,600 --> 00:06:08,240
one of the our scripted booking to

117
00:06:08,240 --> 00:06:11,780
repoint dns when does that give up or at

118
00:06:11,780 --> 00:06:14,960
your deployment it will call your script

119
00:06:14,960 --> 00:06:18,530
that will tell your application where to

120
00:06:18,530 --> 00:06:22,730
find a new master and this is the script

121
00:06:22,730 --> 00:06:24,170
that was a problem

122
00:06:24,170 --> 00:06:27,680
so before looking into the problem we

123
00:06:27,680 --> 00:06:29,540
will look at the deployment where we add

124
00:06:29,540 --> 00:06:32,030
a problem so it's a very simple

125
00:06:32,030 --> 00:06:34,610
deployment there was there is for

126
00:06:34,610 --> 00:06:37,940
database server a as a matter B as the

127
00:06:37,940 --> 00:06:41,990
local slave eggs as a remote data center

128
00:06:41,990 --> 00:06:44,810
intermittent master and Y as a remote

129
00:06:44,810 --> 00:06:47,390
slave so this is a very this is small

130
00:06:47,390 --> 00:06:50,780
deployment at booking the DNS of the

131
00:06:50,780 --> 00:06:53,270
master is pointing on a and reads are

132
00:06:53,270 --> 00:06:55,400
happening on B and wines at that point

133
00:06:55,400 --> 00:06:59,600
everything goes well and now we had the

134
00:06:59,600 --> 00:07:03,170
first event the first failure that

135
00:07:03,170 --> 00:07:05,870
happened is that both a and B failed at

136
00:07:05,870 --> 00:07:09,440
the same time so I will explain how this

137
00:07:09,440 --> 00:07:13,070
happened later but at this point we are

138
00:07:13,070 --> 00:07:14,660
not able to write to the master anymore

139
00:07:14,660 --> 00:07:18,160
and reads on B are failing

140
00:07:18,250 --> 00:07:22,990
sorry Orchestrator is there right so

141
00:07:22,990 --> 00:07:25,270
Orchestrator

142
00:07:25,270 --> 00:07:28,249
fix things at this point it doesn't have

143
00:07:28,249 --> 00:07:30,259
to do a lot of things it doesn't need to

144
00:07:30,259 --> 00:07:32,300
repoint slave it just need to call the

145
00:07:32,300 --> 00:07:34,759
script that tree points DNS so at that

146
00:07:34,759 --> 00:07:38,689
point we can write again and to fix the

147
00:07:38,689 --> 00:07:41,449
read that were happening on B so that

148
00:07:41,449 --> 00:07:44,809
that was actually that manually but this

149
00:07:44,809 --> 00:07:48,259
is this is not such a big it's not as a

150
00:07:48,259 --> 00:07:50,300
big problem as not being able to write

151
00:07:50,300 --> 00:07:55,039
to the master so so now we're back in a

152
00:07:55,039 --> 00:07:58,009
working situation rights happen on X

153
00:07:58,009 --> 00:08:01,039
reads happen on the Y and everything is

154
00:08:01,039 --> 00:08:07,370
fine so the day ends we go back home and

155
00:08:07,370 --> 00:08:10,360
something happened during the night and

156
00:08:10,360 --> 00:08:17,209
I wake up do this so that was Saturday

157
00:08:17,209 --> 00:08:20,149
morning a very very bad morning you wake

158
00:08:20,149 --> 00:08:23,479
up you check what's happening and you

159
00:08:23,479 --> 00:08:26,800
realize rights are happening unbe okay

160
00:08:26,800 --> 00:08:30,349
what happened let's keep looking at

161
00:08:30,349 --> 00:08:34,068
things reads are happening on Y so we

162
00:08:34,068 --> 00:08:37,760
are not reading what we're writing so a

163
00:08:37,760 --> 00:08:40,669
very very bad position to be in so

164
00:08:40,669 --> 00:08:46,610
that's obviously not good so es outdated

165
00:08:46,610 --> 00:08:49,279
data so all the write that I've been on

166
00:08:49,279 --> 00:08:52,250
eggs didn't reach B so if we're reading

167
00:08:52,250 --> 00:08:54,050
from the master we are not seeing that

168
00:08:54,050 --> 00:08:56,510
data and all the new rights that happen

169
00:08:56,510 --> 00:08:59,800
on B do not reach Y so when we read on Y

170
00:08:59,800 --> 00:09:04,480
we are not reading the data we written

171
00:09:04,480 --> 00:09:08,600
so so it's really really bad it's not a

172
00:09:08,600 --> 00:09:11,449
split brain matter spoken as itself like

173
00:09:11,449 --> 00:09:13,069
they were not too active master at the

174
00:09:13,069 --> 00:09:15,290
same time but there was half data on the

175
00:09:15,290 --> 00:09:19,420
life can have data on the right so

176
00:09:19,420 --> 00:09:24,730
I will explain how we fix that later but

177
00:09:24,730 --> 00:09:27,399
now let's see about what actually

178
00:09:27,399 --> 00:09:33,310
happened so after the failure of both a

179
00:09:33,310 --> 00:09:36,970
and B the second failure was detected by

180
00:09:36,970 --> 00:09:39,700
Orchestrator and I know that because I

181
00:09:39,700 --> 00:09:42,010
have the logs of Orchestrator so I now

182
00:09:42,010 --> 00:09:47,050
understand that after after everything

183
00:09:47,050 --> 00:09:50,110
was fixed during the night a and B were

184
00:09:50,110 --> 00:09:53,709
back up so they resuscitated in a way

185
00:09:53,709 --> 00:09:58,990
and at that point something made a fail

186
00:09:58,990 --> 00:10:08,110
and when a failed something pointed DNS

187
00:10:08,110 --> 00:10:12,220
to B and it's the failover script that

188
00:10:12,220 --> 00:10:15,190
when a fare of the failover script stole

189
00:10:15,190 --> 00:10:18,640
the DNS entry forever from a very valid

190
00:10:18,640 --> 00:10:23,170
server X and pointed it to be so now we

191
00:10:23,170 --> 00:10:27,579
know how that happened but why did they

192
00:10:27,579 --> 00:10:33,640
fail so when they came back up a and B

193
00:10:33,640 --> 00:10:39,640
they add outdated data so my initial

194
00:10:39,640 --> 00:10:42,339
idea because I was there when one and he

195
00:10:42,339 --> 00:10:45,640
failed was to bring B back up first and

196
00:10:45,640 --> 00:10:48,070
then to slave being under X and that

197
00:10:48,070 --> 00:10:50,680
would have been fine but because a came

198
00:10:50,680 --> 00:10:53,920
back up it made that impossible because

199
00:10:53,920 --> 00:10:57,490
a inserted GT idea heard bead events and

200
00:10:57,490 --> 00:10:59,200
things like that and so being now on

201
00:10:59,200 --> 00:11:02,589
data that that is not on X so at that

202
00:11:02,589 --> 00:11:09,459
point I decided to recover from that and

203
00:11:09,459 --> 00:11:12,730
then to put a and B back under X by

204
00:11:12,730 --> 00:11:16,000
cloning by cloning them using extra

205
00:11:16,000 --> 00:11:19,329
backup but if I would have cloned be

206
00:11:19,329 --> 00:11:21,490
there wouldn't have been any problem but

207
00:11:21,490 --> 00:11:25,000
I chose to clone a because at that point

208
00:11:25,000 --> 00:11:25,920
B

209
00:11:25,920 --> 00:11:28,560
was still using my previous plan of

210
00:11:28,560 --> 00:11:31,649
pointing back be under X and I was

211
00:11:31,649 --> 00:11:32,930
planning to

212
00:11:32,930 --> 00:11:36,810
to delete a at that time but I didn't

213
00:11:36,810 --> 00:11:38,820
take into account that things change so

214
00:11:38,820 --> 00:11:41,730
that's the first human error and it's my

215
00:11:41,730 --> 00:11:45,149
mistake I will not do that again but

216
00:11:45,149 --> 00:11:47,519
it's not the only thing that caused this

217
00:11:47,519 --> 00:11:52,680
problem when I did that that was in the

218
00:11:52,680 --> 00:11:55,230
evening before I wake up the next

219
00:11:55,230 --> 00:11:58,079
morning on that disaster and and that

220
00:11:58,079 --> 00:12:00,870
time everything was working I was still

221
00:12:00,870 --> 00:12:03,570
looking at things and there were no

222
00:12:03,570 --> 00:12:08,670
problem so B was actually promoted as a

223
00:12:08,670 --> 00:12:12,389
new master from a hours later so

224
00:12:12,389 --> 00:12:15,480
Orchestrator detected them the failure

225
00:12:15,480 --> 00:12:18,660
of a hours later and this is because I

226
00:12:18,660 --> 00:12:21,300
only downtime a for four hours when I

227
00:12:21,300 --> 00:12:23,040
reclone hey it's okay I don't want

228
00:12:23,040 --> 00:12:25,050
anybody to be paged on that I downtime

229
00:12:25,050 --> 00:12:27,300
the box for four hours which was a

230
00:12:27,300 --> 00:12:28,800
mistake I should have done time that for

231
00:12:28,800 --> 00:12:32,730
a week and so this is human error number

232
00:12:32,730 --> 00:12:36,870
two and still description I've done that

233
00:12:36,870 --> 00:12:39,620
the school should have realized that

234
00:12:39,620 --> 00:12:42,720
that fell over well that DNS reporting

235
00:12:42,720 --> 00:12:47,190
shouldn't happen so Orchestrator has

236
00:12:47,190 --> 00:12:52,050
some mechanism to avoid flapping and it

237
00:12:52,050 --> 00:12:55,050
will not fail over a second time the

238
00:12:55,050 --> 00:12:58,850
same chain in a short amount of time and

239
00:12:58,850 --> 00:13:02,579
I think this is also human error number

240
00:13:02,579 --> 00:13:07,459
zero which is not mine like it's it's

241
00:13:07,459 --> 00:13:10,170
it's debatable if it's a mistake or not

242
00:13:10,170 --> 00:13:13,440
because Orchestrator needs you to

243
00:13:13,440 --> 00:13:16,529
acknowledge a failover before another

244
00:13:16,529 --> 00:13:19,860
failover will happen so if a and B are

245
00:13:19,860 --> 00:13:21,839
not replumbed

246
00:13:21,839 --> 00:13:24,720
is it good or bad to acknowledge well it

247
00:13:24,720 --> 00:13:29,519
was acknowledged in that case so maybe

248
00:13:29,519 --> 00:13:31,709
it shouldn't have there's argument both

249
00:13:31,709 --> 00:13:34,050
for acknowledging and against

250
00:13:34,050 --> 00:13:35,400
acknowledging

251
00:13:35,400 --> 00:13:40,020
and so there are actually seven things

252
00:13:40,020 --> 00:13:43,740
that cause this problem to servers

253
00:13:43,740 --> 00:13:46,770
failing human error number zero an

254
00:13:46,770 --> 00:13:49,740
educates recovery a and became coming

255
00:13:49,740 --> 00:13:53,130
back me recording the wrong server me

256
00:13:53,130 --> 00:13:56,000
not down timing that server enough

257
00:13:56,000 --> 00:13:58,110
Orchestrator probably failing over

258
00:13:58,110 --> 00:14:00,720
something that shouldn't have because a

259
00:14:00,720 --> 00:14:02,760
human would never have triggered that

260
00:14:02,760 --> 00:14:09,300
fell over and the DNS script that stole

261
00:14:09,300 --> 00:14:15,120
the DNS entry from B so in all those

262
00:14:15,120 --> 00:14:16,710
instances I think there's a take away

263
00:14:16,710 --> 00:14:19,050
I'll let that later but you can already

264
00:14:19,050 --> 00:14:21,570
think about that what should what could

265
00:14:21,570 --> 00:14:23,520
be done differently to avoid each of

266
00:14:23,520 --> 00:14:26,790
those seven problem so let's talk about

267
00:14:26,790 --> 00:14:30,090
our fancy failure so two servers failing

268
00:14:30,090 --> 00:14:32,390
at the same time is very unlikely

269
00:14:32,390 --> 00:14:37,290
so was it a deployment error and being

270
00:14:37,290 --> 00:14:42,560
in the same rack or very unlucky and

271
00:14:42,560 --> 00:14:47,640
actually it's both but that on that day

272
00:14:47,640 --> 00:14:51,480
in about less than two hours ten to

273
00:14:51,480 --> 00:14:53,820
twenty servers failing at the same time

274
00:14:53,820 --> 00:14:55,920
in the data center and so this is

275
00:14:55,920 --> 00:14:57,930
because there were human operation in

276
00:14:57,930 --> 00:15:01,860
the data center that people were ranking

277
00:15:01,860 --> 00:15:04,530
new servers and because of the very

278
00:15:04,530 --> 00:15:07,260
sensitive art where there was a low

279
00:15:07,260 --> 00:15:09,030
probability when you were ranking a new

280
00:15:09,030 --> 00:15:10,920
server in the same rack that it was

281
00:15:10,920 --> 00:15:14,910
shutting it down another server so my

282
00:15:14,910 --> 00:15:17,240
point here is double failure happen

283
00:15:17,240 --> 00:15:19,740
don't necessarily automate for them but

284
00:15:19,740 --> 00:15:22,110
be ready for them to happen because ten

285
00:15:22,110 --> 00:15:24,540
servers failing in half an hour

286
00:15:24,540 --> 00:15:27,530
is possible

287
00:15:28,650 --> 00:15:31,560
so how do we fix that so once we're in

288
00:15:31,560 --> 00:15:35,550
that situation where we have data on on

289
00:15:35,550 --> 00:15:37,710
X that is not on B and data and B that

290
00:15:37,710 --> 00:15:42,000
is not on X either you declare part of

291
00:15:42,000 --> 00:15:44,550
that data lost which we did in that case

292
00:15:44,550 --> 00:15:46,970
because that wasn't really valuable data

293
00:15:46,970 --> 00:15:51,600
or you have to replay the data so

294
00:15:51,600 --> 00:15:54,120
replaying the data needs understanding

295
00:15:54,120 --> 00:15:55,440
what data is there

296
00:15:55,440 --> 00:15:58,680
so DBA is do not necessarily PBS booking

297
00:15:58,680 --> 00:16:00,830
we're a small team and people serving

298
00:16:00,830 --> 00:16:04,200
600 developers we cannot know all the

299
00:16:04,200 --> 00:16:06,060
data they're putting in the database so

300
00:16:06,060 --> 00:16:08,940
we are not able to ourself to recover

301
00:16:08,940 --> 00:16:10,320
that data we need the developer to

302
00:16:10,320 --> 00:16:14,760
understand that data and so it was

303
00:16:14,760 --> 00:16:16,680
easier here the choice was made to just

304
00:16:16,680 --> 00:16:20,160
drop that data replication we could have

305
00:16:20,160 --> 00:16:25,050
used replication so replicate X like we

306
00:16:25,050 --> 00:16:29,430
could have slaved we could have put

307
00:16:29,430 --> 00:16:32,010
replication here this would be a master

308
00:16:32,010 --> 00:16:34,770
to this and and send the data back there

309
00:16:34,770 --> 00:16:36,780
but we at that point we got

310
00:16:36,780 --> 00:16:40,890
auto-increment in our way because when

311
00:16:40,890 --> 00:16:44,760
we failed over so some auto-increment

312
00:16:44,760 --> 00:16:47,610
were consumed on X and when the dns was

313
00:16:47,610 --> 00:16:49,410
point back to be the same auto

314
00:16:49,410 --> 00:16:53,040
increments were allocated to rows so we

315
00:16:53,040 --> 00:16:57,600
had conflicting auto increment and that

316
00:16:57,600 --> 00:17:00,150
made me think okay we use auto increment

317
00:17:00,150 --> 00:17:03,020
all the time but it's this a good thing

318
00:17:03,020 --> 00:17:06,300
shouldn't we use another type of ID so

319
00:17:06,300 --> 00:17:10,079
those are my my takeaways from from that

320
00:17:10,079 --> 00:17:14,089
is like really twisted situation happen

321
00:17:14,089 --> 00:17:18,510
like automation is not simple there

322
00:17:18,510 --> 00:17:20,369
should be no shortcut in an automation

323
00:17:20,369 --> 00:17:23,880
script if you write an automation script

324
00:17:23,880 --> 00:17:28,260
like test every precondition like okay

325
00:17:28,260 --> 00:17:31,200
it's it looks stupid to do that test but

326
00:17:31,200 --> 00:17:34,320
maybe it's a good thing to test that you

327
00:17:34,320 --> 00:17:37,500
are actually moving a DNS entry from the

328
00:17:37,500 --> 00:17:38,710
right server for

329
00:17:38,710 --> 00:17:40,690
like it's that DNS entry really pointing

330
00:17:40,690 --> 00:17:42,820
to a at that point no it was pointing to

331
00:17:42,820 --> 00:17:45,669
X stop I need the human to think that

332
00:17:45,669 --> 00:17:49,899
true premature acknowledgment be mindful

333
00:17:49,899 --> 00:17:53,320
about that to take aways from myself

334
00:17:53,320 --> 00:17:57,490
down time more than less and shut down

335
00:17:57,490 --> 00:18:00,850
sleep first and something that will take

336
00:18:00,850 --> 00:18:03,940
more time is maybe rethink the way we

337
00:18:03,940 --> 00:18:06,940
use auto increment and maybe using you

338
00:18:06,940 --> 00:18:10,779
you IDs so it's you IDs are usually

339
00:18:10,779 --> 00:18:12,789
generated randomly there's a there's

340
00:18:12,789 --> 00:18:15,220
some tricks and there's some algorithm

341
00:18:15,220 --> 00:18:17,260
to generate you you IDs to make sure

342
00:18:17,260 --> 00:18:19,929
they are generated in order so you end

343
00:18:19,929 --> 00:18:22,980
up still inserting in primarykey order

344
00:18:22,980 --> 00:18:26,289
and you should use those trick if you

345
00:18:26,289 --> 00:18:28,960
want to keep the performance of insert

346
00:18:28,960 --> 00:18:31,840
in your table maybe there's also

347
00:18:31,840 --> 00:18:34,330
something in Orchestrator because I'm

348
00:18:34,330 --> 00:18:36,520
pretty sure humans wouldn't have failed

349
00:18:36,520 --> 00:18:39,220
a in that case so Orchestrator should

350
00:18:39,220 --> 00:18:41,440
probably do something about those kind

351
00:18:41,440 --> 00:18:44,730
of failures it's still the one percent

352
00:18:44,730 --> 00:18:47,799
so I'm not sure it's worth a lot of time

353
00:18:47,799 --> 00:18:51,909
but so we have to think maybe a little

354
00:18:51,909 --> 00:18:55,210
more about how to detect those things

355
00:18:55,210 --> 00:19:00,100
and if you have thought maybe open an

356
00:19:00,100 --> 00:19:02,049
issue or come discuss it with me after

357
00:19:02,049 --> 00:19:03,029
the talk

358
00:19:03,029 --> 00:19:08,320
so some links and I have three minutes

359
00:19:08,320 --> 00:19:11,070
for questions

360
00:19:12,039 --> 00:19:15,039
yes

361
00:19:19,410 --> 00:19:24,450
yes so in that case yes so the question

362
00:19:24,450 --> 00:19:31,490
was why should we stop sleep first so

363
00:19:33,230 --> 00:19:37,280
when we were in that situation here I

364
00:19:37,280 --> 00:19:42,150
decided to stop a and we clone a from

365
00:19:42,150 --> 00:19:45,090
extra backup here I did a backup from Y

366
00:19:45,090 --> 00:19:47,940
and I reek clone a from Y but at that

367
00:19:47,940 --> 00:19:53,010
point I shut down the master and so this

368
00:19:53,010 --> 00:19:55,140
box was known as a master for

369
00:19:55,140 --> 00:19:58,080
Orchestrator so I should have shut down

370
00:19:58,080 --> 00:20:02,850
B first not a so if you shut down a

371
00:20:02,850 --> 00:20:04,740
master be mindful about like does that

372
00:20:04,740 --> 00:20:09,710
box have slave yes

373
00:20:15,480 --> 00:20:18,990
yes but which one is it like and so the

374
00:20:18,990 --> 00:20:22,169
question was after failing over should

375
00:20:22,169 --> 00:20:24,779
you kill the box well in that case

376
00:20:24,779 --> 00:20:28,909
Orchestrator detected a failover of a

377
00:20:28,909 --> 00:20:31,529
that's fine it'd be killing a wouldn't

378
00:20:31,529 --> 00:20:35,370
have solved the problem it's the problem

379
00:20:35,370 --> 00:20:38,159
was that the DNS reporting script took

380
00:20:38,159 --> 00:20:40,980
that DNS that wasn't belonging to a and

381
00:20:40,980 --> 00:20:45,000
made it point to B and a solution could

382
00:20:45,000 --> 00:20:47,490
have been to kill tags at that point but

383
00:20:47,490 --> 00:20:51,000
it's also at that point if if your

384
00:20:51,000 --> 00:20:52,889
script is detecting that it's failing

385
00:20:52,889 --> 00:20:55,470
over something that is not belonging to

386
00:20:55,470 --> 00:20:58,559
the box that actually failed there's

387
00:20:58,559 --> 00:21:00,419
something here but it's not what you

388
00:21:00,419 --> 00:21:02,539
mean

389
00:21:07,210 --> 00:21:09,610
yes well actually at that point those

390
00:21:09,610 --> 00:21:12,550
bucks were dead their uptime after was

391
00:21:12,550 --> 00:21:14,350
like a few minutes like those two bucks

392
00:21:14,350 --> 00:21:17,860
rebooted so it's like basically you can

393
00:21:17,860 --> 00:21:19,630
think of that as like the power cable

394
00:21:19,630 --> 00:21:21,370
was pulled from them and it was plugged

395
00:21:21,370 --> 00:21:27,640
back so like it's at that point it's

396
00:21:27,640 --> 00:21:31,080
really hard to definitively kill a and B

397
00:21:31,080 --> 00:21:33,790
unless you make sure that you cut the

398
00:21:33,790 --> 00:21:36,460
network cable or yes and out-of-band

399
00:21:36,460 --> 00:21:39,450
ways of shutting down the switchboard

400
00:21:39,450 --> 00:21:43,450
which could be a good solution like that

401
00:21:43,450 --> 00:21:45,040
could be something else we could do in

402
00:21:45,040 --> 00:21:48,340
the automation I'm not sure it's the

403
00:21:48,340 --> 00:21:50,830
best thing to do but somebody that is

404
00:21:50,830 --> 00:21:54,330
paranoid about those things I usually

405
00:21:54,330 --> 00:21:57,190
think of myself as paranoid and that's

406
00:21:57,190 --> 00:21:59,560
not an idea I would have so it looks

407
00:21:59,560 --> 00:22:02,639
like you're more paranoid than me

408
00:22:11,870 --> 00:22:16,560
so the question was I got a call with so

409
00:22:16,560 --> 00:22:20,400
on Saturday morning I just logged in and

410
00:22:20,400 --> 00:22:23,010
because I I knew there was cloning on

411
00:22:23,010 --> 00:22:24,960
the way I checked things at that point I

412
00:22:24,960 --> 00:22:27,150
wasn't called there was a and there was

413
00:22:27,150 --> 00:22:30,510
a log of the orchestrator failover at

414
00:22:30,510 --> 00:22:36,110
midnight at that time I was sleeping so

415
00:22:36,110 --> 00:22:39,750
Saturday morning was detected because of

416
00:22:39,750 --> 00:22:44,400
my curiosity not not because anybody was

417
00:22:44,400 --> 00:22:46,320
paged actually it's a good thing that I

418
00:22:46,320 --> 00:22:47,820
was curious because the longer would

419
00:22:47,820 --> 00:22:49,830
have weighed the longest with the more

420
00:22:49,830 --> 00:22:54,060
data I would have lost so thank you very

421
00:22:54,060 --> 00:22:56,220
much if you have more questions I'll be

422
00:22:56,220 --> 00:22:58,190
around I'll be at the community dinner

423
00:22:58,190 --> 00:23:02,430
so grab me and thanks Frederick for

424
00:23:02,430 --> 00:23:03,330
organizing things

425
00:23:03,330 --> 00:23:11,330
[Applause]

