1
00:00:00,000 --> 00:00:03,410
all right I'm late

2
00:00:04,650 --> 00:00:10,050
let's go so that's me I'm working at

3
00:00:10,050 --> 00:00:13,019
canonical packaging Libre Office for

4
00:00:13,019 --> 00:00:17,040
Ubuntu and also I'm in the board of

5
00:00:17,040 --> 00:00:18,710
directors for the document foundation

6
00:00:18,710 --> 00:00:25,789
and well let's go back to 2010 because

7
00:00:25,789 --> 00:00:27,990
that that was when the whole thing

8
00:00:27,990 --> 00:00:30,210
started with the new build system you

9
00:00:30,210 --> 00:00:34,980
pick then and I wanted to just just have

10
00:00:34,980 --> 00:00:37,320
a look at what we thought we would do

11
00:00:37,320 --> 00:00:41,280
back then and how how we thought we

12
00:00:41,280 --> 00:00:43,920
could improve stuff back then and what

13
00:00:43,920 --> 00:00:47,880
we actually achieved from that so yeah

14
00:00:47,880 --> 00:00:50,239
that was one of the original slides from

15
00:00:50,239 --> 00:00:54,540
the OpenOffice conference in 2010 except

16
00:00:54,540 --> 00:00:57,570
that it didn't have this branding but

17
00:00:57,570 --> 00:00:59,000
[Music]

18
00:00:59,000 --> 00:01:04,319
and well that was the goal back then and

19
00:01:04,319 --> 00:01:08,039
for the most part I think we achieved

20
00:01:08,039 --> 00:01:15,270
that but it it might not look like that

21
00:01:15,270 --> 00:01:16,920
if you're building Libre Office now but

22
00:01:16,920 --> 00:01:20,190
you have to think about how how Open

23
00:01:20,190 --> 00:01:22,890
Office was building at the time and

24
00:01:22,890 --> 00:01:24,929
there were many many things that were

25
00:01:24,929 --> 00:01:27,509
broken there there were manual

26
00:01:27,509 --> 00:01:29,640
dependencies there were incomplete

27
00:01:29,640 --> 00:01:32,399
dependencies there were incompatible

28
00:01:32,399 --> 00:01:34,950
builds which means that you could build

29
00:01:34,950 --> 00:01:38,580
one part and you had to know which part

30
00:01:38,580 --> 00:01:40,740
would change if you change that and if

31
00:01:40,740 --> 00:01:43,080
you didn't horrible things would happen

32
00:01:43,080 --> 00:01:49,500
and all kinds of other issues so those

33
00:01:49,500 --> 00:01:52,289
were the goals we had back then actually

34
00:01:52,289 --> 00:01:54,660
I thought by now we would all use 32

35
00:01:54,660 --> 00:01:57,090
core machines and well that didn't

36
00:01:57,090 --> 00:02:00,660
happen by now we just use all very nifty

37
00:02:00,660 --> 00:02:07,440
laptops but the other things still are

38
00:02:07,440 --> 00:02:11,910
true and are things that we very much

39
00:02:11,910 --> 00:02:15,599
profit from now and if you if you use

40
00:02:15,599 --> 00:02:17,700
leaper office now on thing well leaper

41
00:02:17,700 --> 00:02:18,410
office is still

42
00:02:18,410 --> 00:02:22,460
slow that was the comparison from just

43
00:02:22,460 --> 00:02:25,160
building a few modules that was back

44
00:02:25,160 --> 00:02:27,320
then and it's pretty much the same like

45
00:02:27,320 --> 00:02:31,130
that now except that we almost take as

46
00:02:31,130 --> 00:02:33,710
much for standard Senate run of these

47
00:02:33,710 --> 00:02:37,280
modules because we run all the tests by

48
00:02:37,280 --> 00:02:38,870
default all the time

49
00:02:38,870 --> 00:02:43,340
or lots of them so we got a lot faster

50
00:02:43,340 --> 00:02:45,650
and then we added lots of tests that you

51
00:02:45,650 --> 00:02:50,870
can't disable so that we Dec as slow as

52
00:02:50,870 --> 00:02:52,880
as we were before unless you know how to

53
00:02:52,880 --> 00:02:55,640
trick around that but I'm not gonna tell

54
00:02:55,640 --> 00:03:03,380
you so one other goal of this was to not

55
00:03:03,380 --> 00:03:06,080
repeat yourself one other goal of this

56
00:03:06,080 --> 00:03:08,570
was to not repeat yourself because

57
00:03:08,570 --> 00:03:12,710
repeating yourself stupid and especially

58
00:03:12,710 --> 00:03:14,150
if you're in the build system you have

59
00:03:14,150 --> 00:03:16,220
multiple things that tell you how to

60
00:03:16,220 --> 00:03:18,670
build something that can again be

61
00:03:18,670 --> 00:03:22,120
inconsistencies and stuff that can

62
00:03:22,120 --> 00:03:27,650
create issues for comparison this is how

63
00:03:27,650 --> 00:03:30,110
it is in leaper office right now you

64
00:03:30,110 --> 00:03:32,209
register and if you want to have a new

65
00:03:32,209 --> 00:03:35,270
library there you put it somewhere which

66
00:03:35,270 --> 00:03:38,480
says in there Jassi repository m'kay

67
00:03:38,480 --> 00:03:40,310
which essentially says where it should

68
00:03:40,310 --> 00:03:44,780
end up in the final build and well then

69
00:03:44,780 --> 00:03:47,630
you say how to build it like I want to

70
00:03:47,630 --> 00:03:52,220
build these C++ files in the old open of

71
00:03:52,220 --> 00:03:56,330
this world well it was a bit different

72
00:03:56,330 --> 00:04:02,450
so that was one of the issues we had

73
00:04:02,450 --> 00:04:04,820
with the old stuff the other thing was

74
00:04:04,820 --> 00:04:07,220
Tim tough TBI so there's more than one

75
00:04:07,220 --> 00:04:13,160
way to do it and well that's always a

76
00:04:13,160 --> 00:04:15,350
bad thing because you have to know all

77
00:04:15,350 --> 00:04:18,079
of them to to read actually what others

78
00:04:18,079 --> 00:04:22,010
are doing and again by now if you wonder

79
00:04:22,010 --> 00:04:23,870
for example export a symbol and Libre

80
00:04:23,870 --> 00:04:25,900
Office you do something simple like this

81
00:04:25,900 --> 00:04:30,320
you add something DLL public to the

82
00:04:30,320 --> 00:04:32,220
declaration and then the symbol

83
00:04:32,220 --> 00:04:37,220
spotted in OpenOffice smooth free air

84
00:04:37,220 --> 00:04:40,110
you could have multiple ways to do that

85
00:04:40,110 --> 00:04:43,170
and everyone what would cost interesting

86
00:04:43,170 --> 00:04:45,120
different slightly different effects so

87
00:04:45,120 --> 00:04:53,390
again it was troublesome oops same slide

88
00:04:53,390 --> 00:04:56,910
so this this was the initial

89
00:04:56,910 --> 00:05:00,480
implementation of the back then new

90
00:05:00,480 --> 00:05:03,480
build system we had all these targets in

91
00:05:03,480 --> 00:05:07,200
one huge dependency tree and that meant

92
00:05:07,200 --> 00:05:09,780
that we were aware of all the stuff that

93
00:05:09,780 --> 00:05:12,180
was happening and in all the build we

94
00:05:12,180 --> 00:05:14,220
didn't have like these horizon effects

95
00:05:14,220 --> 00:05:17,160
where you would do an incompatible build

96
00:05:17,160 --> 00:05:19,920
which meant you build something and said

97
00:05:19,920 --> 00:05:21,810
I'm pretty sure this is binary

98
00:05:21,810 --> 00:05:24,419
compatible with the rest and trust me

99
00:05:24,419 --> 00:05:28,440
and it actually knew if it was binary

100
00:05:28,440 --> 00:05:32,040
compatible or not and most of the stuff

101
00:05:32,040 --> 00:05:34,410
so the core stuff of this is still like

102
00:05:34,410 --> 00:05:37,910
there today a few things changed like

103
00:05:37,910 --> 00:05:41,430
the backwards compatibility is gone we

104
00:05:41,430 --> 00:05:44,370
we don't need like to deliver and copy

105
00:05:44,370 --> 00:05:46,740
stuff five times around we needed to do

106
00:05:46,740 --> 00:05:49,500
that in the old OpenOffice build system

107
00:05:49,500 --> 00:05:51,419
to be compatible with the old build

108
00:05:51,419 --> 00:05:57,150
system so thanks to all these guys who

109
00:05:57,150 --> 00:06:01,830
helped contributing to this the

110
00:06:01,830 --> 00:06:06,270
important quote here is I say we take

111
00:06:06,270 --> 00:06:07,890
off a nuke the entire site from orbit

112
00:06:07,890 --> 00:06:09,780
it's the only way to be sure that was

113
00:06:09,780 --> 00:06:13,260
the the last comment when we killed the

114
00:06:13,260 --> 00:06:17,310
last part of the old build system so

115
00:06:17,310 --> 00:06:18,930
that needed to be in the commit message

116
00:06:18,930 --> 00:06:23,460
there so with this we had the whole

117
00:06:23,460 --> 00:06:27,360
build system on essentially on one build

118
00:06:27,360 --> 00:06:30,330
system and not like we had before - or

119
00:06:30,330 --> 00:06:32,370
rather three like the old one the new

120
00:06:32,370 --> 00:06:34,910
one and the one that mixed everything

121
00:06:34,910 --> 00:06:39,419
between those which was some ugly pearl

122
00:06:39,419 --> 00:06:41,539
Hickory

123
00:06:41,539 --> 00:06:45,959
and then I got bored and I wondered if I

124
00:06:45,959 --> 00:06:48,409
could do more than the stuff that I

125
00:06:48,409 --> 00:06:50,909
originally planned for the new build

126
00:06:50,909 --> 00:06:54,139
system and one of the things was well

127
00:06:54,139 --> 00:06:56,639
actually syntax highlighting and using

128
00:06:56,639 --> 00:07:00,919
IDs is a pretty good thing but it's it's

129
00:07:00,919 --> 00:07:04,709
hard to like manually tell your IDE

130
00:07:04,709 --> 00:07:07,469
where all the the include paths are and

131
00:07:07,469 --> 00:07:11,309
things like that on the other hand well

132
00:07:11,309 --> 00:07:13,979
we can't just say use Visual Studio and

133
00:07:13,979 --> 00:07:15,629
then we build everything with visual

134
00:07:15,629 --> 00:07:17,339
studio because that's kind of heart of

135
00:07:17,339 --> 00:07:22,979
Lin or Linux and on other platforms so

136
00:07:22,979 --> 00:07:25,219
using just an IEE

137
00:07:25,219 --> 00:07:30,869
s the main build system doesn't work but

138
00:07:30,869 --> 00:07:34,469
what we could do is have even the normal

139
00:07:34,469 --> 00:07:35,939
cross-platform build that we had before

140
00:07:35,939 --> 00:07:39,329
and export solutions to different ideas

141
00:07:39,329 --> 00:07:44,389
so they could be using this to give you

142
00:07:44,389 --> 00:07:47,909
syntax highlighting debugging and stuff

143
00:07:47,909 --> 00:07:51,479
like that so the first I did was care

144
00:07:51,479 --> 00:07:53,939
develop because well seemed to be easy

145
00:07:53,939 --> 00:08:00,029
to me and again as I said that was not

146
00:08:00,029 --> 00:08:01,949
not something that was initially panned

147
00:08:01,949 --> 00:08:06,389
it was like an afterthought so what it

148
00:08:06,389 --> 00:08:10,919
did was you didn't make NP which prints

149
00:08:10,919 --> 00:08:13,319
out out all the build information and

150
00:08:13,319 --> 00:08:16,949
then it passed that and tried to build

151
00:08:16,949 --> 00:08:21,300
the IDE solution from that turns out

152
00:08:21,300 --> 00:08:23,929
that something as simple as make and P

153
00:08:23,929 --> 00:08:26,819
isn't really stable over different

154
00:08:26,819 --> 00:08:30,479
versions of make so the positive for

155
00:08:30,479 --> 00:08:34,019
this turned to be it always added more

156
00:08:34,019 --> 00:08:36,000
stuff and I looked at this and this is

157
00:08:36,000 --> 00:08:38,578
not good we're taking more time to pass

158
00:08:38,578 --> 00:08:41,068
actually being full then then he's

159
00:08:41,068 --> 00:08:44,790
actually in there was always flaky

160
00:08:44,790 --> 00:08:46,230
because people were using different

161
00:08:46,230 --> 00:08:49,410
versions of make and it was kind of

162
00:08:49,410 --> 00:08:54,960
tricky to to use this in a reliable way

163
00:08:54,960 --> 00:08:58,110
and the goal of this was to have people

164
00:08:58,110 --> 00:09:01,560
who were new to development to get there

165
00:09:01,560 --> 00:09:04,620
on an IDE and well if the first thing

166
00:09:04,620 --> 00:09:07,170
they do is is failing and they need a

167
00:09:07,170 --> 00:09:09,810
full bill to get there that's that kind

168
00:09:09,810 --> 00:09:17,810
of sucks so I now reorganized that and

169
00:09:17,810 --> 00:09:21,690
did all the tricky stuff in the build

170
00:09:21,690 --> 00:09:24,540
system itself and then it just dumps

171
00:09:24,540 --> 00:09:28,529
that in Jason so that the simple Python

172
00:09:28,529 --> 00:09:30,600
script can read that and translate that

173
00:09:30,600 --> 00:09:34,320
to whatever ie you want to have so this

174
00:09:34,320 --> 00:09:36,570
is the solution right now and I think it

175
00:09:36,570 --> 00:09:44,760
it mostly is reliable and we can look

176
00:09:44,760 --> 00:09:46,980
here right there was a question from

177
00:09:46,980 --> 00:09:51,930
we're young its young here nope yum

178
00:09:51,930 --> 00:09:54,709
asked me well I looked at the files and

179
00:09:54,709 --> 00:09:59,400
and the compiler switches oops wrong

180
00:09:59,400 --> 00:10:03,600
slide that actually are given to to

181
00:10:03,600 --> 00:10:09,390
compile a C++ file on Windows and almost

182
00:10:09,390 --> 00:10:12,120
all the stuff all the method or the data

183
00:10:12,120 --> 00:10:14,400
about what definitions and flags and

184
00:10:14,400 --> 00:10:16,860
stuff ought to be used for this target

185
00:10:16,860 --> 00:10:18,690
or in the JSON file with a few

186
00:10:18,690 --> 00:10:20,190
exceptions and this is what he was

187
00:10:20,190 --> 00:10:26,100
asking about and that's these few a few

188
00:10:26,100 --> 00:10:29,160
things still missing that is like

189
00:10:29,160 --> 00:10:32,150
generally config specific stuff like

190
00:10:32,150 --> 00:10:35,100
which flex to use for exceptions and

191
00:10:35,100 --> 00:10:37,140
stuff like that which is not target

192
00:10:37,140 --> 00:10:39,450
specific so when you've wrote this email

193
00:10:39,450 --> 00:10:41,910
should they have been in the Jason I

194
00:10:41,910 --> 00:10:44,720
said well no because they are

195
00:10:44,720 --> 00:10:47,100
configuration specific and they are the

196
00:10:47,100 --> 00:10:49,680
same for for the whole bill but maybe we

197
00:10:49,680 --> 00:10:51,600
should I should just drop in Jason found

198
00:10:51,600 --> 00:10:53,760
next to it which which contains all this

199
00:10:53,760 --> 00:10:57,209
info so that you can actually from the

200
00:10:57,209 --> 00:11:00,510
JSON file find out all the Flex that

201
00:11:00,510 --> 00:11:02,310
were used to build this on your specific

202
00:11:02,310 --> 00:11:05,029
platform

203
00:11:07,200 --> 00:11:12,130
so which are these do we have well k

204
00:11:12,130 --> 00:11:14,880
develop that was me in the beginning

205
00:11:14,880 --> 00:11:19,690
then Han sir did visual studio and young

206
00:11:19,690 --> 00:11:23,650
and others did additions to that Xcode

207
00:11:23,650 --> 00:11:26,170
was I think initially done by draw and

208
00:11:26,170 --> 00:11:29,470
then a lot of work by young so we have

209
00:11:29,470 --> 00:11:32,470
like the major platform major ideas for

210
00:11:32,470 --> 00:11:37,860
each platform being able to to work on

211
00:11:37,860 --> 00:11:43,180
LibreOffice code in the latest native ly

212
00:11:43,180 --> 00:11:47,410
feeling environment and we have amend

213
00:11:47,410 --> 00:11:50,710
you completely by moggy for the old UNIX

214
00:11:50,710 --> 00:11:57,400
guys who wouldn't use anything newer and

215
00:11:57,400 --> 00:12:00,430
well we have to create and actually one

216
00:12:00,430 --> 00:12:03,070
of the Qt creator guys came up to me he

217
00:12:03,070 --> 00:12:05,260
can't attend this talk but he said well

218
00:12:05,260 --> 00:12:07,990
I really want to help out so we we

219
00:12:07,990 --> 00:12:10,420
should we should get contact with them

220
00:12:10,420 --> 00:12:13,750
and get your creator to be nicely

221
00:12:13,750 --> 00:12:21,580
integrated with that so the past was

222
00:12:21,580 --> 00:12:24,870
what what I aim to do with the original

223
00:12:24,870 --> 00:12:28,770
new build system eight years ago and

224
00:12:28,770 --> 00:12:33,000
this IDE stuff is just like a nice

225
00:12:33,000 --> 00:12:37,210
additional feature and that were like

226
00:12:37,210 --> 00:12:40,000
the ideas - maybe after eight years we

227
00:12:40,000 --> 00:12:44,320
should again use a new build system just

228
00:12:44,320 --> 00:12:51,760
cause and well I felt like the old UNIX

229
00:12:51,760 --> 00:12:56,530
guy that said no not with me but there's

230
00:12:56,530 --> 00:12:58,690
this thing if you work too long on

231
00:12:58,690 --> 00:13:02,170
something that maybe maybe you're not

232
00:13:02,170 --> 00:13:10,090
entirely well neutral in on this so when

233
00:13:10,090 --> 00:13:11,860
I said well you should never look at

234
00:13:11,860 --> 00:13:15,250
this I looked the next thing I did was

235
00:13:15,250 --> 00:13:17,660
look actually how much

236
00:13:17,660 --> 00:13:20,300
of this build system was actually done

237
00:13:20,300 --> 00:13:22,520
by me and hey good news although I

238
00:13:22,520 --> 00:13:25,160
brought the original stuff there are

239
00:13:25,160 --> 00:13:27,860
other guys who own a lot more lines of

240
00:13:27,860 --> 00:13:30,290
it by now than me so it's not mine

241
00:13:30,290 --> 00:13:34,250
anymore great David Michael

242
00:13:34,250 --> 00:13:35,600
congratulations

243
00:13:35,600 --> 00:13:41,330
you own this thing though so again and

244
00:13:41,330 --> 00:13:44,060
also the distribution of country so this

245
00:13:44,060 --> 00:13:45,740
is the lines of code and who lost touch

246
00:13:45,740 --> 00:13:48,860
them and it's pretty ly even distributed

247
00:13:48,860 --> 00:13:50,240
and there are a lot of people touching

248
00:13:50,240 --> 00:13:58,070
lots of areas there so looking forward

249
00:13:58,070 --> 00:14:01,310
in to using something completely

250
00:14:01,310 --> 00:14:03,200
different

251
00:14:03,200 --> 00:14:06,350
these were the original problems we try

252
00:14:06,350 --> 00:14:08,780
to solve with with eight years ago when

253
00:14:08,780 --> 00:14:12,230
we did this some of the stuff creep back

254
00:14:12,230 --> 00:14:14,420
in I think cargo cult programming is

255
00:14:14,420 --> 00:14:17,480
already in the make files is again on

256
00:14:17,480 --> 00:14:19,700
the rise because well it's been eight

257
00:14:19,700 --> 00:14:22,940
years and stuff collected in there but

258
00:14:22,940 --> 00:14:26,120
in general the other stuff is mostly

259
00:14:26,120 --> 00:14:29,800
reached and I would add one more thing

260
00:14:29,800 --> 00:14:33,590
the tool that I that I spoke about

261
00:14:33,590 --> 00:14:37,220
do not repeat yourself and don't do Tim

262
00:14:37,220 --> 00:14:40,760
Toph TDI and that's one of the main

263
00:14:40,760 --> 00:14:43,010
arguments against something like let's

264
00:14:43,010 --> 00:14:47,480
let's use Visual Studio directly then

265
00:14:47,480 --> 00:14:51,940
like export that to somewhere else

266
00:14:53,740 --> 00:14:58,180
there's more than one way to do it

267
00:15:02,910 --> 00:15:08,710
so again I'm kind of reluctant to use

268
00:15:08,710 --> 00:15:10,450
something like Visual Studio solutions

269
00:15:10,450 --> 00:15:12,120
directly and then have to maintain

270
00:15:12,120 --> 00:15:15,930
different build systems on all platforms

271
00:15:15,930 --> 00:15:18,220
because that will always break in this

272
00:15:18,220 --> 00:15:21,160
more than one truth to the build so

273
00:15:21,160 --> 00:15:22,840
someone does something on Windows and

274
00:15:22,840 --> 00:15:26,590
then he changed the solution files but

275
00:15:26,590 --> 00:15:28,180
not the stuff for the other platforms

276
00:15:28,180 --> 00:15:30,610
and stuff like that so that that unless

277
00:15:30,610 --> 00:15:32,850
you find a way to synchronize all this

278
00:15:32,850 --> 00:15:42,700
is really tricky the other challenges so

279
00:15:42,700 --> 00:15:45,280
I think we should stay with with

280
00:15:45,280 --> 00:15:48,460
something that is one single build

281
00:15:48,460 --> 00:15:55,240
system whatever that is and well the the

282
00:15:55,240 --> 00:15:57,610
other stuff like having water generated

283
00:15:57,610 --> 00:16:01,840
intermediates who here uses auto make

284
00:16:01,840 --> 00:16:11,050
and auto comes and loves it okay we got

285
00:16:11,050 --> 00:16:15,820
a talk the other stuff is well custom

286
00:16:15,820 --> 00:16:20,070
targets like again this is having more

287
00:16:20,070 --> 00:16:23,680
custom stuff in in the build targets

288
00:16:23,680 --> 00:16:25,000
which is not like the usual

289
00:16:25,000 --> 00:16:28,450
cross-platform stuff and the degrees of

290
00:16:28,450 --> 00:16:35,280
freedom in oh great later

291
00:16:52,760 --> 00:16:58,710
right so we have way too much degrees of

292
00:16:58,710 --> 00:17:00,390
freedom and the configuration especially

293
00:17:00,390 --> 00:17:02,250
on Windows where there should be pretty

294
00:17:02,250 --> 00:17:08,730
much only one mostly and so we that's

295
00:17:08,730 --> 00:17:12,210
the goal again to to get away from the

296
00:17:12,210 --> 00:17:14,430
build system and that means for example

297
00:17:14,430 --> 00:17:17,099
well the candidates for this are

298
00:17:17,099 --> 00:17:20,819
obviously see make or maybe use use

299
00:17:20,819 --> 00:17:25,579
scheme in in make as a migration path

300
00:17:25,579 --> 00:17:30,180
but the advantage there is not to

301
00:17:30,180 --> 00:17:32,220
rewrite everything from scratch again

302
00:17:32,220 --> 00:17:36,600
but - softly migrate to it but the the

303
00:17:36,600 --> 00:17:39,810
most interesting issue probably is the

304
00:17:39,810 --> 00:17:43,410
build execution because Ninja is a lot

305
00:17:43,410 --> 00:17:45,020
faster than what we have now because

306
00:17:45,020 --> 00:17:48,720
make is just awfully slow pausing all

307
00:17:48,720 --> 00:17:50,700
the dependency files that we have which

308
00:17:50,700 --> 00:17:55,640
are just huge yeah

309
00:17:56,880 --> 00:18:46,530
I mostly agree but I'm I mean I want to

310
00:18:46,530 --> 00:18:49,080
fight against my inner feeling that

311
00:18:49,080 --> 00:18:56,070
everything is fine so yeah but if I look

312
00:18:56,070 --> 00:18:58,530
at all these if I look at all these

313
00:18:58,530 --> 00:19:01,980
things problem injures is the first most

314
00:19:01,980 --> 00:19:05,430
useful things of trying to attack within

315
00:19:05,430 --> 00:19:14,040
these rather than the others yes so the

316
00:19:14,040 --> 00:19:18,590
externals are actually yeah interesting

317
00:19:19,070 --> 00:19:21,750
all right yeah

318
00:19:21,750 --> 00:19:25,820
anyone else but no but having questions

319
00:19:34,590 --> 00:19:40,410
well this it there there is somewhere

320
00:19:40,410 --> 00:19:42,000
deep inside is something that is

321
00:19:42,000 --> 00:19:45,660
generally usable but you you will have

322
00:19:45,660 --> 00:19:47,820
trouble finding it if you're not knowing

323
00:19:47,820 --> 00:19:49,620
about LibreOffice because there are

324
00:19:49,620 --> 00:19:53,730
these things like these multiple layers

325
00:19:53,730 --> 00:19:56,190
of where to put libraries and stuff that

326
00:19:56,190 --> 00:19:57,780
we are actually not using that much

327
00:19:57,780 --> 00:20:00,780
anymore but they are still in there I

328
00:20:00,780 --> 00:20:05,640
think my gosh once did an experiment to

329
00:20:05,640 --> 00:20:07,430
just get the build system out of

330
00:20:07,430 --> 00:20:11,280
LibreOffice and then try to to get rid

331
00:20:11,280 --> 00:20:13,160
of all the Liebherr of a specific stuff

332
00:20:13,160 --> 00:20:17,550
so it was just one huge build system

333
00:20:17,550 --> 00:20:30,120
that built hello world also there are

334
00:20:30,120 --> 00:20:32,850
lots of optimizations that you you

335
00:20:32,850 --> 00:20:34,860
probably only need if you're as big as

336
00:20:34,860 --> 00:20:37,290
LibreOffice like precompiled headers and

337
00:20:37,290 --> 00:20:42,409
windows having all this polarization and

338
00:20:47,240 --> 00:20:52,740
write so stuff like that and having for

339
00:20:52,740 --> 00:20:58,680
example the GCC creates the dependency

340
00:20:58,680 --> 00:21:03,320
files those are huge that huge to be

341
00:21:03,320 --> 00:21:06,780
just well normally you would just use

342
00:21:06,780 --> 00:21:09,210
all of them pass all of them and be fine

343
00:21:09,210 --> 00:21:10,470
well that that doesn't work fully

344
00:21:10,470 --> 00:21:12,570
prophets so we are taking all these

345
00:21:12,570 --> 00:21:15,000
dependency files and pre passing them

346
00:21:15,000 --> 00:21:17,970
and kicking out all the stuff that is

347
00:21:17,970 --> 00:21:21,030
actually superficial and stuff like that

348
00:21:21,030 --> 00:21:25,470
so if your project doesn't need 20

349
00:21:25,470 --> 00:21:29,000
minutes on a 32 core machine

350
00:21:30,010 --> 00:21:34,630
oh thanks 20 minutes right so you're

351
00:21:34,630 --> 00:21:37,570
absolutely invited to look into the sir

352
00:21:37,570 --> 00:21:42,790
and it's luckily not only me who who

353
00:21:42,790 --> 00:21:45,220
knows about how this stuff works which

354
00:21:45,220 --> 00:21:50,350
is good and well feel free to to to take

355
00:21:50,350 --> 00:21:55,139
a look at it looking forward

356
00:22:14,850 --> 00:22:18,790
yeah so again in the comparison to the

357
00:22:18,790 --> 00:22:20,650
old bill system the most important thing

358
00:22:20,650 --> 00:22:23,590
was not even the speed that was also

359
00:22:23,590 --> 00:22:26,410
important but more important was getting

360
00:22:26,410 --> 00:22:28,480
rid of all the craft that wasn't the old

361
00:22:28,480 --> 00:22:35,640
stuff that collected over 20 years yeah

362
00:22:35,640 --> 00:22:38,350
right the possible meaning that you

363
00:22:38,350 --> 00:22:40,600
touched one file and says it would do an

364
00:22:40,600 --> 00:22:42,040
incremental build and actually would

365
00:22:42,040 --> 00:22:44,020
work because that didn't work in the old

366
00:22:44,020 --> 00:22:46,240
OpenOffice build system you would touch

367
00:22:46,240 --> 00:22:48,130
one file and everything would be broken

368
00:22:48,130 --> 00:22:53,919
most most of the time okay nothing I'm

369
00:22:53,919 --> 00:22:56,860
over time already yes thank you

370
00:22:56,860 --> 00:23:03,560
[Applause]

