1
00:00:00,030 --> 00:00:03,230
so you know

2
00:00:04,630 --> 00:00:07,630
last talk we just heard all about the

3
00:00:07,630 --> 00:00:10,270
problems of working with it working with

4
00:00:10,270 --> 00:00:14,740
licenses and code and what this talk is

5
00:00:14,740 --> 00:00:16,119
going to start to do is start to paint

6
00:00:16,119 --> 00:00:17,289
the picture of how we can finally get to

7
00:00:17,289 --> 00:00:18,640
the stage where we can make the

8
00:00:18,640 --> 00:00:20,950
compliance information automated and

9
00:00:20,950 --> 00:00:22,390
make it a lot easier and a lot less

10
00:00:22,390 --> 00:00:26,710
manual going forward so our challenge is

11
00:00:26,710 --> 00:00:29,950
how to automate this information we've

12
00:00:29,950 --> 00:00:32,879
got two different points right we've got

13
00:00:32,879 --> 00:00:36,940
in foster projects are actually in a lot

14
00:00:36,940 --> 00:00:38,859
of commercial projects products today

15
00:00:38,859 --> 00:00:41,079
and it's all commercial entities that

16
00:00:41,079 --> 00:00:43,539
generally care about making sure that

17
00:00:43,539 --> 00:00:45,129
there's accurate summaries of licensing

18
00:00:45,129 --> 00:00:46,659
the people who are developing the

19
00:00:46,659 --> 00:00:48,370
software I'll make sure that they you

20
00:00:48,370 --> 00:00:49,539
know what their intentions are they'll

21
00:00:49,539 --> 00:00:52,479
put in but how it gets put in what they

22
00:00:52,479 --> 00:00:53,440
care for you know what it's actually

23
00:00:53,440 --> 00:00:57,940
there in the file is right at the moment

24
00:00:57,940 --> 00:00:59,949
time it was put in but doesn't always

25
00:00:59,949 --> 00:01:02,019
follow over time and isn't accurate

26
00:01:02,019 --> 00:01:05,740
necessarily over time we've been finding

27
00:01:05,740 --> 00:01:08,049
that someone will contribute some files

28
00:01:08,049 --> 00:01:10,840
to a project under one license and then

29
00:01:10,840 --> 00:01:12,640
the project those files will move to

30
00:01:12,640 --> 00:01:15,070
another project so you know you someone

31
00:01:15,070 --> 00:01:19,119
may say ok see see license text file a

32
00:01:19,119 --> 00:01:21,009
top-three to understand licenses

33
00:01:21,009 --> 00:01:22,149
well they've moved it into another

34
00:01:22,149 --> 00:01:23,530
father doesn't have a license not text

35
00:01:23,530 --> 00:01:26,020
file has a copying file so you have all

36
00:01:26,020 --> 00:01:27,810
these really interesting games to play

37
00:01:27,810 --> 00:01:30,039
to try to really understand what the

38
00:01:30,039 --> 00:01:33,039
licenses are and so what we need to know

39
00:01:33,039 --> 00:01:35,259
is you know is the source we're working

40
00:01:35,259 --> 00:01:39,340
with what how good is the licensing in

41
00:01:39,340 --> 00:01:41,439
it is there a quality of it and we need

42
00:01:41,439 --> 00:01:44,770
tools specifically open source tools to

43
00:01:44,770 --> 00:01:46,259
support the tracking of this code

44
00:01:46,259 --> 00:01:48,460
companies can you know pay money to

45
00:01:48,460 --> 00:01:50,679
Black Duck or penny other polimedia or

46
00:01:50,679 --> 00:01:51,759
so forth and to people who are

47
00:01:51,759 --> 00:01:53,859
businesses for this stuff and they but

48
00:01:53,859 --> 00:01:56,380
for developers perspective working with

49
00:01:56,380 --> 00:01:57,579
this with open source seems to be the

50
00:01:57,579 --> 00:02:03,520
right way so right now our commercial

51
00:02:03,520 --> 00:02:07,840
tools are focused on product development

52
00:02:07,840 --> 00:02:10,538
and auditing code bases and they've got

53
00:02:10,538 --> 00:02:12,960
limited support for helping developers

54
00:02:12,960 --> 00:02:15,190
traffic license changes as a developer

55
00:02:15,190 --> 00:02:16,280
code

56
00:02:16,280 --> 00:02:18,170
our open-source tools also are mostly

57
00:02:18,170 --> 00:02:20,660
focused on auditing existing code base

58
00:02:20,660 --> 00:02:21,980
is manually and summarizing the

59
00:02:21,980 --> 00:02:24,380
information of the tools that are out

60
00:02:24,380 --> 00:02:25,760
there facility has been around the

61
00:02:25,760 --> 00:02:27,200
longest and it's what we're basing some

62
00:02:27,200 --> 00:02:30,290
of this work on so we need to give a way

63
00:02:30,290 --> 00:02:31,970
to get open source projects to have

64
00:02:31,970 --> 00:02:34,760
machine detectable accurate licensing

65
00:02:34,760 --> 00:02:36,140
information to be able to keep it up to

66
00:02:36,140 --> 00:02:38,420
date as to software changes that serve

67
00:02:38,420 --> 00:02:41,060
the goal and so we're sort of making

68
00:02:41,060 --> 00:02:43,970
some progress now with any hard problem

69
00:02:43,970 --> 00:02:46,070
you have to start breaking it down okay

70
00:02:46,070 --> 00:02:50,090
and the steps are we need to be able to

71
00:02:50,090 --> 00:02:51,590
accurately identify the license

72
00:02:51,590 --> 00:02:55,489
associated with the file some developers

73
00:02:55,489 --> 00:02:56,930
elected to say it's just at the project

74
00:02:56,930 --> 00:02:59,870
level well that's been showing more and

75
00:02:59,870 --> 00:03:02,560
more to be a luxury we no longer have

76
00:03:02,560 --> 00:03:07,340
files move between projects and tracking

77
00:03:07,340 --> 00:03:09,650
things down over time becomes a very

78
00:03:09,650 --> 00:03:12,170
very manually intensive operation if

79
00:03:12,170 --> 00:03:14,450
you're trying to discover the base root

80
00:03:14,450 --> 00:03:16,730
cause of things we need to have

81
00:03:16,730 --> 00:03:18,110
something at the command line tool to

82
00:03:18,110 --> 00:03:20,660
summarize the licensing in a source file

83
00:03:20,660 --> 00:03:25,519
ok you've got be able to you know you

84
00:03:25,519 --> 00:03:26,510
want to be able to do the preps and

85
00:03:26,510 --> 00:03:27,739
things like that to understand what's

86
00:03:27,739 --> 00:03:30,019
going on you need to be able to

87
00:03:30,019 --> 00:03:33,290
accurately summarize license associated

88
00:03:33,290 --> 00:03:35,000
with every project at the time the

89
00:03:35,000 --> 00:03:37,370
projects built depending if there's

90
00:03:37,370 --> 00:03:39,890
multiple options and pronged conditions

91
00:03:39,890 --> 00:03:43,549
there may be implications of that you've

92
00:03:43,549 --> 00:03:44,600
gotta be able to share the summary

93
00:03:44,600 --> 00:03:45,980
results of the license information with

94
00:03:45,980 --> 00:03:49,370
the project with others and you have to

95
00:03:49,370 --> 00:03:50,989
have some cur command line tool that

96
00:03:50,989 --> 00:03:52,670
could summarize the file level licensing

97
00:03:52,670 --> 00:03:54,680
information for project so you know is

98
00:03:54,680 --> 00:03:56,120
it a single license are there multiple

99
00:03:56,120 --> 00:03:59,209
licenses what is a story here so and

100
00:03:59,209 --> 00:04:01,250
then for this to really be effective

101
00:04:01,250 --> 00:04:03,530
over time it's gotta be into CI loops

102
00:04:03,530 --> 00:04:04,579
you've got to have it and build

103
00:04:04,579 --> 00:04:07,070
environments so that you can keep up as

104
00:04:07,070 --> 00:04:08,620
it goes along

105
00:04:08,620 --> 00:04:12,320
so at the very start of SPD X was to

106
00:04:12,320 --> 00:04:16,220
address parts of this and at the time it

107
00:04:16,220 --> 00:04:17,899
was focused mostly on being a standard

108
00:04:17,899 --> 00:04:22,940
together so that we could accurately

109
00:04:22,940 --> 00:04:24,890
identify the license this is associated

110
00:04:24,890 --> 00:04:27,349
with file well the SPX license list has

111
00:04:27,349 --> 00:04:29,389
got 300 licenses

112
00:04:29,389 --> 00:04:31,189
with standard identifiers and you can

113
00:04:31,189 --> 00:04:33,169
put a one-line comment into each file

114
00:04:33,169 --> 00:04:37,759
and identify it without too much pain -

115
00:04:37,759 --> 00:04:40,479
from a developer perspective

116
00:04:41,229 --> 00:04:45,379
command-line tools open question we need

117
00:04:45,379 --> 00:04:46,789
to be able to accurately summarize the

118
00:04:46,789 --> 00:04:49,219
licenses associate with a project every

119
00:04:49,219 --> 00:04:51,409
time the project is built well if you

120
00:04:51,409 --> 00:04:53,389
can generate an SPD x21 document for

121
00:04:53,389 --> 00:04:55,849
each built on a project that has a

122
00:04:55,849 --> 00:04:58,009
signing of the files signing to the

123
00:04:58,009 --> 00:05:00,349
project itself and you have all the

124
00:05:00,349 --> 00:05:01,370
information there so you know things

125
00:05:01,370 --> 00:05:03,139
have changed from revision to revision

126
00:05:03,139 --> 00:05:05,740
so being able to generate the SPX

127
00:05:05,740 --> 00:05:09,620
document can address that being able to

128
00:05:09,620 --> 00:05:11,800
share the results with different

129
00:05:11,800 --> 00:05:16,900
consumers most of the developers I know

130
00:05:16,900 --> 00:05:19,099
would prefer to see things in a tag

131
00:05:19,099 --> 00:05:22,669
value format or more than excited yeah

132
00:05:22,669 --> 00:05:25,960
most of Java guys prefer the rdfa and

133
00:05:25,960 --> 00:05:28,689
most the lawyers refer a spreadsheet

134
00:05:28,689 --> 00:05:31,400
with the SPD X we've been very careful

135
00:05:31,400 --> 00:05:32,960
to preserve so you can translate back

136
00:05:32,960 --> 00:05:35,060
and forth between all formats and look

137
00:05:35,060 --> 00:05:37,129
at the information so you should go well

138
00:05:37,129 --> 00:05:39,889
SPD X file well actually it's a an RDF a

139
00:05:39,889 --> 00:05:42,740
is at a tag or it's a spreadsheet and if

140
00:05:42,740 --> 00:05:43,879
it's not the one you want there's tools

141
00:05:43,879 --> 00:05:46,460
out there to convert it and then having

142
00:05:46,460 --> 00:05:47,960
this command line tool zosyn open

143
00:05:47,960 --> 00:05:52,339
question so obviously we want

144
00:05:52,339 --> 00:05:53,900
open-source tools and all open-source

145
00:05:53,900 --> 00:05:56,750
builds upon prior open source so we're

146
00:05:56,750 --> 00:05:58,870
starting here with a blaze of ethology

147
00:05:58,870 --> 00:06:01,520
which I will stress is in testing mode

148
00:06:01,520 --> 00:06:02,750
right now we're trying to get ready for

149
00:06:02,750 --> 00:06:04,370
a release and if anyone wants to go and

150
00:06:04,370 --> 00:06:07,389
help test it that would be very welcome

151
00:06:07,389 --> 00:06:10,879
the source is up there and it handles

152
00:06:10,879 --> 00:06:13,190
it's a for those is everyone familiar

153
00:06:13,190 --> 00:06:18,009
with facility in this room who's not ok

154
00:06:18,009 --> 00:06:19,190
then

155
00:06:19,190 --> 00:06:22,610
pathology is a scanning tool that will

156
00:06:22,610 --> 00:06:24,830
taste eclis take a file or if take you

157
00:06:24,830 --> 00:06:26,449
pointed out a file or product like them

158
00:06:26,449 --> 00:06:28,580
from a project and it will scan through

159
00:06:28,580 --> 00:06:32,150
with your choice of multiple of one or

160
00:06:32,150 --> 00:06:36,110
multiple scanners and look for specific

161
00:06:36,110 --> 00:06:37,909
expressions and natura licenses that are

162
00:06:37,909 --> 00:06:40,029
common for finding licenses and then

163
00:06:40,029 --> 00:06:41,270
that's

164
00:06:41,270 --> 00:06:43,819
so it's got enormous and monk and Inca

165
00:06:43,819 --> 00:06:46,160
which are three scanners that you can

166
00:06:46,160 --> 00:06:47,539
choose from based on you know where

167
00:06:47,539 --> 00:06:48,919
you're at where you're on what you're

168
00:06:48,919 --> 00:06:50,180
sort of looking for how strict and

169
00:06:50,180 --> 00:06:51,410
things like that each of them is

170
00:06:51,410 --> 00:06:53,030
different heuristics so you've got

171
00:06:53,030 --> 00:06:55,310
different ones to play with depending on

172
00:06:55,310 --> 00:06:58,340
what you're looking for and how strict

173
00:06:58,340 --> 00:07:01,190
you want to be and then it basically

174
00:07:01,190 --> 00:07:04,400
gives you an interface if you're working

175
00:07:04,400 --> 00:07:06,229
with it interactively and lets you

176
00:07:06,229 --> 00:07:07,819
recognize things and assign things that

177
00:07:07,819 --> 00:07:08,870
effectively go through a clearing

178
00:07:08,870 --> 00:07:11,270
process to say okay I've gone through

179
00:07:11,270 --> 00:07:12,470
all these codes I've recognized

180
00:07:12,470 --> 00:07:13,880
everything it makes it easier for you to

181
00:07:13,880 --> 00:07:17,000
sort of manually look at a project and

182
00:07:17,000 --> 00:07:19,789
then generate out the information so

183
00:07:19,789 --> 00:07:20,960
you've got confidence you can ship it

184
00:07:20,960 --> 00:07:26,419
you know with licenses are with the

185
00:07:26,419 --> 00:07:28,250
release of the three watt well in a

186
00:07:28,250 --> 00:07:29,479
three one version it's now able to

187
00:07:29,479 --> 00:07:33,849
generate tag value and so you can get

188
00:07:33,849 --> 00:07:37,220
file license lists and but however it

189
00:07:37,220 --> 00:07:38,539
does need to have some better heuristics

190
00:07:38,539 --> 00:07:41,380
for the command-line side the cp2 Foss

191
00:07:41,380 --> 00:07:43,940
needs to bear automate the decisions

192
00:07:43,940 --> 00:07:46,669
that are going on the interactive works

193
00:07:46,669 --> 00:07:49,370
well but this is where we're serving an

194
00:07:49,370 --> 00:07:52,340
area to focus on for us there's all for

195
00:07:52,340 --> 00:07:54,560
the SPX tools and that lets you convert

196
00:07:54,560 --> 00:07:56,840
any point between formats they're out

197
00:07:56,840 --> 00:08:01,400
there today and mostly it's just

198
00:08:01,400 --> 00:08:02,840
basically validate that you've actually

199
00:08:02,840 --> 00:08:06,889
a valid SPT X file and one of the things

200
00:08:06,889 --> 00:08:07,969
that's looking like it's neat is we

201
00:08:07,969 --> 00:08:09,349
probably need to get some of the takes

202
00:08:09,349 --> 00:08:10,789
and SP X file and just summarizes the

203
00:08:10,789 --> 00:08:12,800
licensing information there are other

204
00:08:12,800 --> 00:08:14,210
research projects out there they're

205
00:08:14,210 --> 00:08:15,949
saying is this licensing consistent does

206
00:08:15,949 --> 00:08:20,090
this work well but so there's always

207
00:08:20,090 --> 00:08:23,449
things you can add and then the other

208
00:08:23,449 --> 00:08:24,919
open source tool you're looking at for

209
00:08:24,919 --> 00:08:29,810
this is the Alva system which basically

210
00:08:29,810 --> 00:08:31,610
takes and builds root fallenness root

211
00:08:31,610 --> 00:08:33,940
filesystem based on Debian packages and

212
00:08:33,940 --> 00:08:36,409
it needs to be able to have an accurate

213
00:08:36,409 --> 00:08:38,690
summary and status statistics of license

214
00:08:38,690 --> 00:08:39,708
each time it does a build root

215
00:08:39,708 --> 00:08:40,250
filesystem

216
00:08:40,250 --> 00:08:41,870
so this is part of trying to pull all

217
00:08:41,870 --> 00:08:43,279
these pieces together that are out there

218
00:08:43,279 --> 00:08:45,380
and see if we can get something useful

219
00:08:45,380 --> 00:08:48,290
with that I'm gonna turn it over to my

220
00:08:48,290 --> 00:08:50,620
colleague

221
00:08:55,400 --> 00:08:59,540
so let me give you a very quick

222
00:08:59,540 --> 00:09:02,460
information about lb itself it's not a

223
00:09:02,460 --> 00:09:04,470
distribution it's not a tool to build a

224
00:09:04,470 --> 00:09:05,940
distribution there are a lot of tools

225
00:09:05,940 --> 00:09:08,000
out there to build distributions Yocto

226
00:09:08,000 --> 00:09:09,630
PT x desc

227
00:09:09,630 --> 00:09:12,990
whatever the name you name it so the the

228
00:09:12,990 --> 00:09:15,180
problem for a lot of companies is

229
00:09:15,180 --> 00:09:18,120
especially smaller companies is once you

230
00:09:18,120 --> 00:09:21,390
build your stuff with doctor you become

231
00:09:21,390 --> 00:09:23,190
a distributor that means you are

232
00:09:23,190 --> 00:09:27,090
responsible for tracking for bug fixes

233
00:09:27,090 --> 00:09:29,310
for security bugs and and all this kind

234
00:09:29,310 --> 00:09:32,850
of stuff so we took another approach and

235
00:09:32,850 --> 00:09:34,590
said we want to have a tool where we can

236
00:09:34,590 --> 00:09:38,130
leverage a well maintained an existing

237
00:09:38,130 --> 00:09:39,810
and well maintained distribution and

238
00:09:39,810 --> 00:09:46,230
that was Alby das it's builds Debian

239
00:09:46,230 --> 00:09:47,790
based through file systems for embedded

240
00:09:47,790 --> 00:09:51,660
system and you get a it generates a baby

241
00:09:51,660 --> 00:09:54,480
and based development system matching

242
00:09:54,480 --> 00:09:56,400
the target for application developers

243
00:09:56,400 --> 00:09:59,940
it's highly customizable and it's fully

244
00:09:59,940 --> 00:10:04,470
reproducible there is the link to the to

245
00:10:04,470 --> 00:10:06,060
the project homepage it's open source

246
00:10:06,060 --> 00:10:10,590
it's written in Python here's the quick

247
00:10:10,590 --> 00:10:13,440
overview you have an XML description of

248
00:10:13,440 --> 00:10:15,270
the project that means that's all the

249
00:10:15,270 --> 00:10:16,920
packages and the rules you can downsize

250
00:10:16,920 --> 00:10:20,130
after after packaging then it generate

251
00:10:20,130 --> 00:10:22,590
their final disk image you get the

252
00:10:22,590 --> 00:10:25,230
packages from either the Debian

253
00:10:25,230 --> 00:10:26,820
repositories or your private

254
00:10:26,820 --> 00:10:28,560
repositories you can integrate your

255
00:10:28,560 --> 00:10:32,850
applications in a separate repository it

256
00:10:32,850 --> 00:10:34,980
generates the application development

257
00:10:34,980 --> 00:10:39,480
kit and images the rebuild CD the source

258
00:10:39,480 --> 00:10:46,260
code CD and the license is fun so here

259
00:10:46,260 --> 00:10:48,540
is a slightly better are we usually see

260
00:10:48,540 --> 00:10:54,180
half your your customized Debian package

261
00:10:54,180 --> 00:10:56,070
pool that's basically what the

262
00:10:56,070 --> 00:10:59,000
application developers create that's

263
00:10:59,000 --> 00:11:02,180
official Debian pools or a mirror

264
00:11:02,180 --> 00:11:05,930
and then everything is is converted into

265
00:11:05,930 --> 00:11:08,690
the target system the developer system

266
00:11:08,690 --> 00:11:10,700
and the various the surrounding

267
00:11:10,700 --> 00:11:14,620
information so now licensed reports

268
00:11:14,620 --> 00:11:17,320
Elbit generates a license report today

269
00:11:17,320 --> 00:11:19,610
by parsing the debian package

270
00:11:19,610 --> 00:11:22,660
information that's not really accurate

271
00:11:22,660 --> 00:11:25,420
and it doesn't give us a lot of

272
00:11:25,420 --> 00:11:27,080
statistic

273
00:11:27,080 --> 00:11:29,600
no statistical information about the

274
00:11:29,600 --> 00:11:33,200
accuracy of what we are doing so there's

275
00:11:33,200 --> 00:11:36,529
no SPD X support is an Expedia brunch

276
00:11:36,529 --> 00:11:38,770
which generates the existing as

277
00:11:38,770 --> 00:11:42,260
information in SPD X form format but

278
00:11:42,260 --> 00:11:44,450
that doesn't help for the other things

279
00:11:44,450 --> 00:11:51,649
like statistics so okay so we looked

280
00:11:51,649 --> 00:11:55,580
into integrating a speedix generation

281
00:11:55,580 --> 00:11:58,370
into the build process but generating

282
00:11:58,370 --> 00:12:02,330
the expertise information by scanning

283
00:12:02,330 --> 00:12:04,610
the source files every time you build a

284
00:12:04,610 --> 00:12:08,120
root file system is pretty much it it's

285
00:12:08,120 --> 00:12:11,120
too time-consuming it's really overkill

286
00:12:11,120 --> 00:12:16,040
and so we thought about it because the

287
00:12:16,040 --> 00:12:17,930
debian source code doesn't change

288
00:12:17,930 --> 00:12:19,540
everyday we thought about downloading

289
00:12:19,540 --> 00:12:22,810
regenerated SPX files to be the solution

290
00:12:22,810 --> 00:12:27,890
so we were SPD's generator it looks for

291
00:12:27,890 --> 00:12:30,080
a nightly Devon update feeds the updates

292
00:12:30,080 --> 00:12:33,920
into facility generates the SPD X file

293
00:12:33,920 --> 00:12:35,990
generate statistics and uploads the

294
00:12:35,990 --> 00:12:38,300
aesthetics and the statistics to public

295
00:12:38,300 --> 00:12:41,390
servant so

296
00:12:41,390 --> 00:12:43,459
pathology is not really optimized for

297
00:12:43,459 --> 00:12:46,339
automated workloads they we had to write

298
00:12:46,339 --> 00:12:51,079
quite some wrapper e it's pretty ugly we

299
00:12:51,079 --> 00:12:54,950
need better heuristics for automatic

300
00:12:54,950 --> 00:12:57,950
conclusions which are not there yet the

301
00:12:57,950 --> 00:13:00,230
generator is working progress and we

302
00:13:00,230 --> 00:13:01,880
really have to clean it up before we

303
00:13:01,880 --> 00:13:05,300
show it to the world it's horrible the

304
00:13:05,300 --> 00:13:07,430
generator service so we are going to

305
00:13:07,430 --> 00:13:13,140
provide that continuously so

306
00:13:13,140 --> 00:13:15,990
if we if you created a referral system

307
00:13:15,990 --> 00:13:20,610
you get the binary cd-rom ISO there so

308
00:13:20,610 --> 00:13:25,170
cd-rom ISO your image and now you get as

309
00:13:25,170 --> 00:13:28,620
an as a separate information there

310
00:13:28,620 --> 00:13:32,010
spiriax it's seven sick because we there

311
00:13:32,010 --> 00:13:34,380
are people working on Windows and they

312
00:13:34,380 --> 00:13:36,110
hate turbos

313
00:13:36,110 --> 00:13:39,240
7-zip just works both on on Linux and

314
00:13:39,240 --> 00:13:43,940
windows so we're happy to do that

315
00:13:43,940 --> 00:13:48,660
so okay the elbe integration food for

316
00:13:48,660 --> 00:13:50,880
the aesthetic starboard generation is

317
00:13:50,880 --> 00:13:52,950
available in the elbe cute repository

318
00:13:52,950 --> 00:13:56,760
there's an album SPD expunged now and

319
00:13:56,760 --> 00:14:00,120
the repository of Deb EMF of the SPX

320
00:14:00,120 --> 00:14:02,880
repository is available at our at our

321
00:14:02,880 --> 00:14:07,440
home page it looks like let me find a

322
00:14:07,440 --> 00:14:10,260
browser it looks like a debian like a

323
00:14:10,260 --> 00:14:13,649
debian pool it has the same directory

324
00:14:13,649 --> 00:14:16,769
structure so you very it's analogous

325
00:14:16,769 --> 00:14:19,260
very find the source files in the same

326
00:14:19,260 --> 00:14:24,510
directory named path name is it's the

327
00:14:24,510 --> 00:14:29,640
SPD and the statistical information so

328
00:14:29,640 --> 00:14:33,060
no there was something else I wanted to

329
00:14:33,060 --> 00:14:42,029
show we generates statistics that's idea

330
00:14:42,029 --> 00:14:42,690
okay

331
00:14:42,690 --> 00:14:47,990
that's license statistics that's linux

332
00:14:47,990 --> 00:14:55,140
linux kernel 3.16 39 so I ran over other

333
00:14:55,140 --> 00:14:56,880
recent current their numbers of a very

334
00:14:56,880 --> 00:15:03,320
similar so yeah that's stupid

335
00:15:04,649 --> 00:15:08,439
okay it's it should be 40 okay

336
00:15:08,439 --> 00:15:12,629
that's silly but that was me

337
00:15:12,629 --> 00:15:19,170
reformatting the spreadsheet so we have

338
00:15:19,170 --> 00:15:26,069
1400 references to gplv2 we have 10,000

339
00:15:26,069 --> 00:15:30,279
references to gplv2 plus so that's 40

340
00:15:30,279 --> 00:15:32,800
point 8 percent and ninety nine point

341
00:15:32,800 --> 00:15:37,749
six percent so the files on the on the

342
00:15:37,749 --> 00:15:40,079
back page have actual the real numbers

343
00:15:40,079 --> 00:15:47,769
so the other ministy and there is the

344
00:15:47,769 --> 00:15:49,860
other file

345
00:15:49,860 --> 00:15:53,780
now there yeah okay

346
00:15:53,780 --> 00:15:55,199
[Music]

347
00:15:55,199 --> 00:15:57,879
there is the SPD X file which is

348
00:15:57,879 --> 00:16:01,119
generated it contains older the file

349
00:16:01,119 --> 00:16:03,999
name so it's that's what basically comes

350
00:16:03,999 --> 00:16:08,170
out of for Saleh G and then it generates

351
00:16:08,170 --> 00:16:11,799
another statistical information we just

352
00:16:11,799 --> 00:16:13,449
use the mime types which are available

353
00:16:13,449 --> 00:16:16,179
in phonology which are not really nice

354
00:16:16,179 --> 00:16:19,319
to read but it's pretty clear it's text

355
00:16:19,319 --> 00:16:23,889
ax C so the C file Sierra files make

356
00:16:23,889 --> 00:16:26,889
files assembler files and whatever we

357
00:16:26,889 --> 00:16:30,999
have actually C++ files in the kernel so

358
00:16:30,999 --> 00:16:33,339
you see the number the total number of

359
00:16:33,339 --> 00:16:36,399
files that's the total files in that

360
00:16:36,399 --> 00:16:39,459
kernel repository that's the files which

361
00:16:39,459 --> 00:16:41,559
have actually licensed references in

362
00:16:41,559 --> 00:16:44,170
them so that we have okay

363
00:16:44,170 --> 00:16:50,619
that's 63 percent we have total license

364
00:16:50,619 --> 00:16:54,189
references 34,000 that means we have

365
00:16:54,189 --> 00:16:55,990
more references than files with

366
00:16:55,990 --> 00:16:58,209
references that's because we have a lot

367
00:16:58,209 --> 00:17:01,869
of files which are dual license MIT and

368
00:17:01,869 --> 00:17:07,559
GPL or a BSD and GPL and and whatever

369
00:17:07,559 --> 00:17:11,500
but now here we come to the C files we

370
00:17:11,500 --> 00:17:16,780
see we have 43,000

371
00:17:16,780 --> 00:17:21,589
34,000 C files and 26,000 half license

372
00:17:21,589 --> 00:17:23,510
reference in it which is machine

373
00:17:23,510 --> 00:17:26,689
identifiable so that's roughly 75% I

374
00:17:26,689 --> 00:17:29,809
think the current kernel code has close

375
00:17:29,809 --> 00:17:33,710
to 80 so we're adding more files which

376
00:17:33,710 --> 00:17:35,929
have relies entire enza's but nobody

377
00:17:35,929 --> 00:17:37,909
cleans up the old ones which do not have

378
00:17:37,909 --> 00:17:41,929
work which do not have so we are trying

379
00:17:41,929 --> 00:17:54,830
to to get that sorted okay that's it

380
00:17:54,830 --> 00:18:07,370
questions no questions not a question

381
00:18:07,370 --> 00:18:09,620
have a useful observation

382
00:18:09,620 --> 00:18:11,809
you asked about tools that will scan a

383
00:18:11,809 --> 00:18:14,870
source tree and tell you what licenses

384
00:18:14,870 --> 00:18:17,690
are in it I needed to do this for

385
00:18:17,690 --> 00:18:20,900
Mozilla I confess I tried using fossil

386
00:18:20,900 --> 00:18:23,390
og and couldn't understand it

387
00:18:23,390 --> 00:18:28,640
so I didn't yes I hope maybe there are

388
00:18:28,640 --> 00:18:30,110
some people here who can understand that

389
00:18:30,110 --> 00:18:33,350
I didn't understand pathology but so

390
00:18:33,350 --> 00:18:34,669
what I did was I wrote something called

391
00:18:34,669 --> 00:18:36,590
slick which stands for speedy license

392
00:18:36,590 --> 00:18:38,090
checker which looks through a tree of

393
00:18:38,090 --> 00:18:40,850
files and tells you the SPD X identifies

394
00:18:40,850 --> 00:18:44,150
for every file in there using various

395
00:18:44,150 --> 00:18:46,850
reg X magic and it's on github at github

396
00:18:46,850 --> 00:18:51,950
calm slash Jeff's flashes lick if you

397
00:18:51,950 --> 00:18:54,950
have SP DX license identify us it's easy

398
00:18:54,950 --> 00:18:57,110
no no no it doesn't extract them from

399
00:18:57,110 --> 00:19:00,320
the files it reads the files and works

400
00:19:00,320 --> 00:19:02,240
out the identifiers from the license

401
00:19:02,240 --> 00:19:05,659
text it has a big database I saw lots of

402
00:19:05,659 --> 00:19:10,159
lesson by text that's right so those who

403
00:19:10,159 --> 00:19:13,070
for those who can't use force ology yeah

404
00:19:13,070 --> 00:19:14,059
I'm just saying there is another

405
00:19:14,059 --> 00:19:16,039
alternative at all right yeah there is a

406
00:19:16,039 --> 00:19:19,010
quite a bunch of tools out here and we

407
00:19:19,010 --> 00:19:23,830
need probably one tool set which works

408
00:19:33,799 --> 00:19:43,890
what can I do first okay so what okay so

409
00:19:43,890 --> 00:19:46,260
people are consistently bad at kind of

410
00:19:46,260 --> 00:19:47,730
putting license to set their github

411
00:19:47,730 --> 00:19:49,289
repositories and things like that

412
00:19:49,289 --> 00:19:52,470
so do you Thea can stat we move to a

413
00:19:52,470 --> 00:19:54,809
world where you just have your license

414
00:19:54,809 --> 00:19:56,399
specified in the file and then some

415
00:19:56,399 --> 00:19:58,620
automated tool will in the end kind of

416
00:19:58,620 --> 00:20:00,450
generate the project license which is

417
00:20:00,450 --> 00:20:03,000
then usually not just one license but a

418
00:20:03,000 --> 00:20:05,610
combination of more right automatically

419
00:20:05,610 --> 00:20:08,460
yeah that's I mean that's the goal so if

420
00:20:08,460 --> 00:20:10,950
you look at the statistics and that's

421
00:20:10,950 --> 00:20:12,899
the one of the reasons why we wanted to

422
00:20:12,899 --> 00:20:15,330
generate its statistics is basically you

423
00:20:15,330 --> 00:20:19,529
can feed statistics into you take the

424
00:20:19,529 --> 00:20:21,990
package statistics and figure out how

425
00:20:21,990 --> 00:20:24,840
bad a project actually is and then it

426
00:20:24,840 --> 00:20:27,539
can create ship lists public ship lists

427
00:20:27,539 --> 00:20:29,909
which works very well so people get

428
00:20:29,909 --> 00:20:33,029
their act together and clean it up so

429
00:20:33,029 --> 00:20:34,980
that's that's one of the things but

430
00:20:34,980 --> 00:20:37,740
today people do not have metrics they

431
00:20:37,740 --> 00:20:39,779
even do not know how bad their property

432
00:20:39,779 --> 00:20:41,850
they're their code base is in terms of

433
00:20:41,850 --> 00:20:44,070
Licensing because nobody tells them and

434
00:20:44,070 --> 00:20:46,710
they have no tools to look at and they

435
00:20:46,710 --> 00:20:51,870
don't care but if if when this first

436
00:20:51,870 --> 00:20:55,620
start to care about that and say okay

437
00:20:55,620 --> 00:20:57,779
here is the information we were not

438
00:20:57,779 --> 00:21:02,480
longer accepting projects with with with

439
00:21:02,480 --> 00:21:06,120
non specified licensing issues and

440
00:21:06,120 --> 00:21:08,340
whatever so please get your act together

441
00:21:08,340 --> 00:21:10,950
and and clean it up so that might help

442
00:21:10,950 --> 00:21:14,360
but we need the tools so so people

443
00:21:14,360 --> 00:21:17,580
packaging packages or whatever can

444
00:21:17,580 --> 00:21:20,760
actually get numbers out of it and get a

445
00:21:20,760 --> 00:21:23,700
get a reasonable information how bad it

446
00:21:23,700 --> 00:21:24,330
is

447
00:21:24,330 --> 00:21:26,640
why not see one of the things you should

448
00:21:26,640 --> 00:21:28,410
do is on the link we're giving you've

449
00:21:28,410 --> 00:21:29,850
got literally got the entire Debian

450
00:21:29,850 --> 00:21:32,700
distribution with the first pass of what

451
00:21:32,700 --> 00:21:35,070
the SPD exa tools are generating and so

452
00:21:35,070 --> 00:21:36,630
if you've got specific packages you're

453
00:21:36,630 --> 00:21:38,220
interested or you care about go look at

454
00:21:38,220 --> 00:21:38,990
it

455
00:21:38,990 --> 00:21:41,850
yep said it was another question over

456
00:21:41,850 --> 00:21:44,820
there yeah I was wondering whether these

457
00:21:44,820 --> 00:21:47,550
tools could work with pre-compiled or

458
00:21:47,550 --> 00:21:51,300
binaries the could could can they scan

459
00:21:51,300 --> 00:21:53,970
or do they do they have functionality

460
00:21:53,970 --> 00:21:56,670
like this kind of or Saleh gcw were

461
00:21:56,670 --> 00:21:59,310
using FM back but you will but already

462
00:21:59,310 --> 00:22:04,890
compiled no that's a before a massive

463
00:22:04,890 --> 00:22:07,440
analysis we were looking at really

464
00:22:07,440 --> 00:22:13,830
source code that's what that's yeah

465
00:22:13,830 --> 00:22:17,270
there are there are scanners for binary

466
00:22:17,270 --> 00:22:20,010
matches out there but that's a totally

467
00:22:20,010 --> 00:22:22,940
different playing around

468
00:22:24,650 --> 00:22:28,020
thanks a question as a lawyer what I'm

469
00:22:28,020 --> 00:22:29,700
interested in as far as I catch a tool

470
00:22:29,700 --> 00:22:33,420
it's just as good as the people who

471
00:22:33,420 --> 00:22:35,790
maintaining the directories in terms of

472
00:22:35,790 --> 00:22:37,470
the license for example that just say I

473
00:22:37,470 --> 00:22:40,830
got a GPL v3 third party component here

474
00:22:40,830 --> 00:22:43,020
but I miss to add the copyright

475
00:22:43,020 --> 00:22:46,590
information the the SPD X want to make

476
00:22:46,590 --> 00:22:48,060
any binary search and tell me who the

477
00:22:48,060 --> 00:22:50,990
copyright owner is right

478
00:22:52,100 --> 00:22:54,860
in the SPD x-file the copyright owner

479
00:22:54,860 --> 00:22:57,110
information can be recorded based on

480
00:22:57,110 --> 00:22:58,580
what it finds in the file at the source

481
00:22:58,580 --> 00:23:04,490
level and that's about it I mean there

482
00:23:04,490 --> 00:23:07,100
are a lot of gaps in the tools but we

483
00:23:07,100 --> 00:23:09,830
have to really use them and then fix

484
00:23:09,830 --> 00:23:29,900
them so you said that you were looking

485
00:23:29,900 --> 00:23:32,240
for a common line tool that did

486
00:23:32,240 --> 00:23:35,060
something but then like there are a lot

487
00:23:35,060 --> 00:23:37,010
of command line tools that do different

488
00:23:37,010 --> 00:23:40,400
things so what exactly is the tool that

489
00:23:40,400 --> 00:23:42,740
is missing what should this tool do that

490
00:23:42,740 --> 00:23:48,050
all the existing tools don't do so first

491
00:23:48,050 --> 00:23:50,570
of all having a proper command line

492
00:23:50,570 --> 00:23:52,640
driven interface for for continuous

493
00:23:52,640 --> 00:23:56,450
integration checking none of the tools

494
00:23:56,450 --> 00:23:58,730
I'm aware of actually does that there or

495
00:23:58,730 --> 00:24:01,340
had there have been a proaches for your

496
00:24:01,340 --> 00:24:06,950
to do that but the doc what is do sucks

497
00:24:06,950 --> 00:24:09,200
for you to try to yeah they try to do

498
00:24:09,200 --> 00:24:11,870
that but it's it's it's not really

499
00:24:11,870 --> 00:24:14,390
useful and it's unmaintained as far as I

500
00:24:14,390 --> 00:24:15,890
know

501
00:24:15,890 --> 00:24:20,020
pathology is really gooey interactive

502
00:24:20,020 --> 00:24:23,440
very fun it's it's developed for for

503
00:24:23,440 --> 00:24:29,900
manual license clearing and we can reuse

504
00:24:29,900 --> 00:24:32,870
parts of it so it's it's stuff and then

505
00:24:32,870 --> 00:24:36,500
of course there are other things missing

506
00:24:36,500 --> 00:24:41,000
like specific heuristics to conclude

507
00:24:41,000 --> 00:24:45,620
license information and then say there

508
00:24:45,620 --> 00:24:48,280
were a lot of bits and pieces out there

509
00:24:48,280 --> 00:24:50,930
we have to connect them together and

510
00:24:50,930 --> 00:24:52,730
have feed them into a framework which

511
00:24:52,730 --> 00:24:55,370
actually is usable for all kind of

512
00:24:55,370 --> 00:24:58,460
workloads so that we don't have 55

513
00:24:58,460 --> 00:25:00,470
different scanners out there which all

514
00:25:00,470 --> 00:25:03,630
give you 100 different results

515
00:25:03,630 --> 00:25:05,580
that's the state of the union at the

516
00:25:05,580 --> 00:25:08,610
moment if you try tens can as you really

517
00:25:08,610 --> 00:25:11,880
get 12 results well without we're out of

518
00:25:11,880 --> 00:25:14,120
time thank you very much Katie Thomas

519
00:25:14,120 --> 00:25:20,979
[Applause]

