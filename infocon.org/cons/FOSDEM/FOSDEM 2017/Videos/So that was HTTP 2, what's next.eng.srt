1
00:00:04,550 --> 00:00:07,069
 go fight afraid to pay for it

2
00:00:07,069 --> 00:00:17,509
maybe they're so different trips every

3
00:00:17,509 --> 00:00:19,070
time anyway so I've been talking about

4
00:00:19,070 --> 00:00:21,470
your HTTP and it should be too and I'm

5
00:00:21,470 --> 00:00:23,150
here again to talk about HTTP two and

6
00:00:23,150 --> 00:00:27,470
now from this angle you're running

7
00:00:27,470 --> 00:00:29,630
should be two policies to be to doing

8
00:00:29,630 --> 00:00:36,320
and the three the fulfill its and wait

9
00:00:36,320 --> 00:00:37,609
it doesn't work what should we do about

10
00:00:37,609 --> 00:00:43,960
it shortly captain HTTP over the bar

11
00:00:43,960 --> 00:00:46,429
rather the web has changed in this way

12
00:00:46,429 --> 00:00:48,769
you know the number of objects have

13
00:00:48,769 --> 00:00:51,019
increased the number of the size of the

14
00:00:51,019 --> 00:00:52,579
data that we are getting from an average

15
00:00:52,579 --> 00:00:55,039
web page today has sort of the

16
00:00:55,039 --> 00:00:56,059
development is going in that direction

17
00:00:56,059 --> 00:00:59,329
number motivator amount of objects or

18
00:00:59,329 --> 00:01:05,990
requests from the same domain this is

19
00:01:05,990 --> 00:01:10,240
basically just facts about the Web today

20
00:01:10,990 --> 00:01:15,560
objects on the same side and we have

21
00:01:15,560 --> 00:01:18,939
this head of line blocking problem

22
00:01:18,939 --> 00:01:23,000
originally inertia p1 them we need to

23
00:01:23,000 --> 00:01:24,649
stand in one of these lines we have a

24
00:01:24,649 --> 00:01:26,240
limited number of lines we don't know

25
00:01:26,240 --> 00:01:29,090
how fast the line is you know which line

26
00:01:29,090 --> 00:01:31,100
in the supermarket is the faster you

27
00:01:31,100 --> 00:01:32,540
know which one is the trainee in the

28
00:01:32,540 --> 00:01:35,149
front which is the slow customer in head

29
00:01:35,149 --> 00:01:36,890
of you you don't really know we have

30
00:01:36,890 --> 00:01:41,920
that problem in HTTP we have that in TCP

31
00:01:45,130 --> 00:01:48,130
yes

32
00:02:59,260 --> 00:03:01,700
we don't need to wait for the answer

33
00:03:01,700 --> 00:03:09,079
before we can ask instead of waiting for

34
00:03:09,079 --> 00:03:10,850
that resource to get back we can ask for

35
00:03:10,850 --> 00:03:14,030
my resources and that might some

36
00:03:14,030 --> 00:03:16,250
resources might Bend slow or not it

37
00:03:16,250 --> 00:03:17,750
doesn't matter because we can keep on

38
00:03:17,750 --> 00:03:20,530
asking sort of the responses can then be

39
00:03:20,530 --> 00:03:22,970
if at the pace that can be fast or slow

40
00:03:22,970 --> 00:03:24,290
it doesn't matter they're all over the

41
00:03:24,290 --> 00:03:26,299
same connection and we survived they can

42
00:03:26,299 --> 00:03:30,109
send a lot as soon as it has has it much

43
00:03:30,109 --> 00:03:33,440
better usage of bandwidth and usage of

44
00:03:33,440 --> 00:03:39,079
TCP in general so that's daddy's it

45
00:03:39,079 --> 00:03:43,060
should be two in three minutes

46
00:03:44,150 --> 00:03:50,100
okay we made it the I mean the RFC 7540

47
00:03:50,100 --> 00:03:52,290
was shipped in May 2015

48
00:03:52,290 --> 00:03:54,450
so it's we're approaching two years

49
00:03:54,450 --> 00:03:57,420
since the official of RC so how does it

50
00:03:57,420 --> 00:03:59,670
really turned out to work in then in the

51
00:03:59,670 --> 00:04:13,800
real world supports really big

52
00:04:13,800 --> 00:04:17,970
commercial ones so server side great

53
00:04:17,970 --> 00:04:21,510
bosses side but all the new boss is

54
00:04:21,510 --> 00:04:23,310
really that people are using or

55
00:04:23,310 --> 00:04:24,090
supporting it

56
00:04:24,090 --> 00:04:26,100
I mean yeah there's a tiny tiny

57
00:04:26,100 --> 00:04:29,610
percentage so I'm supporting it but

58
00:04:29,610 --> 00:04:36,870
that's diminishing server support client

59
00:04:36,870 --> 00:04:40,860
support of course that doesn't mean that

60
00:04:40,860 --> 00:04:43,470
the entire world has switched to HTTP to

61
00:04:43,470 --> 00:04:47,970
but you know we are this telemetry data

62
00:04:47,970 --> 00:04:50,700
in Firefox or at Mozilla and that

63
00:04:50,700 --> 00:04:52,980
Firefox can collect if you into it and

64
00:04:52,980 --> 00:04:55,560
then we can sort of make some we can see

65
00:04:55,560 --> 00:04:58,590
how Firefox is being used out in the

66
00:04:58,590 --> 00:05:00,330
wild among those who have opted in to

67
00:05:00,330 --> 00:05:03,840
this data collection which I should just

68
00:05:03,840 --> 00:05:05,820
emphasize it's completely anonymous we

69
00:05:05,820 --> 00:05:07,410
don't know which holds we don't know

70
00:05:07,410 --> 00:05:10,140
which users but we can sort of get a

71
00:05:10,140 --> 00:05:13,950
hint from by the amount of what is used

72
00:05:13,950 --> 00:05:16,800
and we can see that h c bt it's used in

73
00:05:16,800 --> 00:05:20,460
30% of everything that is a cheapy and I

74
00:05:20,460 --> 00:05:22,790
would say that is what I'm not sure and

75
00:05:22,790 --> 00:05:28,710
HTTP is then oh it should be that if HP

76
00:05:28,710 --> 00:05:31,560
and it should be yes and as you might

77
00:05:31,560 --> 00:05:34,830
remember we're only doing HP to over

78
00:05:34,830 --> 00:05:38,240
HTTP in Firefox and actually in all

79
00:05:38,240 --> 00:05:44,370
browsers so is actually more perhaps

80
00:05:44,370 --> 00:05:46,710
more sensible than to say how big a

81
00:05:46,710 --> 00:05:51,120
share of HTTP HTTP - yeah that's more

82
00:05:51,120 --> 00:05:55,370
than half yeah

83
00:05:55,370 --> 00:05:57,320
just taking on pretty good and this is

84
00:05:57,320 --> 00:06:02,150
of course based on volume then you can

85
00:06:02,150 --> 00:06:04,460
deduce that you had the major size the

86
00:06:04,460 --> 00:06:06,410
ones you're using the most they are all

87
00:06:06,410 --> 00:06:08,449
using it to be to the Google Facebook

88
00:06:08,449 --> 00:06:11,330
Twitter Instagram blah blah all those

89
00:06:11,330 --> 00:06:14,479
big sites they're using it so by volume

90
00:06:14,479 --> 00:06:18,050
that is way over half but even if you're

91
00:06:18,050 --> 00:06:20,600
if we're sort of checking out what sites

92
00:06:20,600 --> 00:06:23,270
are supporting on the big internet we

93
00:06:23,270 --> 00:06:26,090
can see that 12 percent of the top 10

94
00:06:26,090 --> 00:06:28,550
million sites so yeah that's not half

95
00:06:28,550 --> 00:06:31,460
it's far away from from wildin option we

96
00:06:31,460 --> 00:06:33,320
say but it's getting there and if you're

97
00:06:33,320 --> 00:06:37,699
sort of looking to the web sites at

98
00:06:37,699 --> 00:06:42,590
least quite a few are there and it's a

99
00:06:42,590 --> 00:06:44,510
more than 50 percent for your site if

100
00:06:44,510 --> 00:06:47,240
you enable HTTP 2 today of course you

101
00:06:47,240 --> 00:06:49,070
will see that the majority will use ATP

102
00:06:49,070 --> 00:06:51,770
to because as you know so before this

103
00:06:51,770 --> 00:06:54,590
the browser support has been there for a

104
00:06:54,590 --> 00:06:57,080
long time so everyone is going to use a

105
00:06:57,080 --> 00:07:04,510
cheapy - if you just let them right so

106
00:07:04,510 --> 00:07:14,150
that is h dhcp to fix this header line

107
00:07:14,150 --> 00:07:16,250
blocking by multiplexing connections

108
00:07:16,250 --> 00:07:17,599
over the same physical one

109
00:07:17,599 --> 00:07:22,160
and it's getting deployed that's good

110
00:07:22,160 --> 00:07:22,820
right

111
00:07:22,820 --> 00:07:29,300
it makes things better I mean did the

112
00:07:29,300 --> 00:07:31,250
internet become a better place did we

113
00:07:31,250 --> 00:07:36,130
sort of did did we make everyone's

114
00:07:36,130 --> 00:07:38,240
browsing or surfing or the internet

115
00:07:38,240 --> 00:07:41,000
usage better and is everything more

116
00:07:41,000 --> 00:07:44,930
enjoyable now and of course that is a

117
00:07:44,930 --> 00:07:48,229
tricky question to just answer to but we

118
00:07:48,229 --> 00:07:50,810
can look at some metrics to see how HTTP

119
00:07:50,810 --> 00:07:53,660
2 is doing compared to HIV 1 looking so

120
00:07:53,660 --> 00:07:57,680
that if we look under the hood and when

121
00:07:57,680 --> 00:07:59,250
we're looking under its

122
00:07:59,250 --> 00:08:01,800
we can look at some of the more remote

123
00:08:01,800 --> 00:08:04,440
corners of the internet we're probably

124
00:08:04,440 --> 00:08:07,140
most of us in this room we're going to

125
00:08:07,140 --> 00:08:08,760
really visit these corners very often

126
00:08:08,760 --> 00:08:11,880
but people in third world countries

127
00:08:11,880 --> 00:08:20,010
perhaps were wireless networks like

128
00:08:20,010 --> 00:08:22,800
different mobile Internet networks and

129
00:08:22,800 --> 00:08:25,230
so if we then focusing this is sort of

130
00:08:25,230 --> 00:08:28,680
the average round-trip time for Firefox

131
00:08:28,680 --> 00:08:31,560
users that we're collecting again in the

132
00:08:31,560 --> 00:08:35,490
telemetry so for and this is clients

133
00:08:35,490 --> 00:08:37,530
running on the mobile clients running on

134
00:08:37,530 --> 00:08:39,659
desktop and if we're focusing on this

135
00:08:39,659 --> 00:08:43,830
these guys this 95th percentile they're

136
00:08:43,830 --> 00:08:45,900
really really far away from their

137
00:08:45,900 --> 00:08:48,620
servers they're almost a second in

138
00:08:48,620 --> 00:08:52,620
round-trip time that's the second and

139
00:08:52,620 --> 00:08:58,800
that's a very really long time so as I

140
00:08:58,800 --> 00:09:00,630
said people to call this in a letter

141
00:09:00,630 --> 00:09:02,760
back and forth every back in for status

142
00:09:02,760 --> 00:09:05,190
a second so of course we gain a lot by

143
00:09:05,190 --> 00:09:07,080
reducing the numbers or back and forth

144
00:09:07,080 --> 00:09:09,390
asking a lot of questions at once and

145
00:09:09,390 --> 00:09:11,700
getting a lot of answers back sooner

146
00:09:11,700 --> 00:09:13,890
it's much much better especially than

147
00:09:13,890 --> 00:09:18,420
for those in these really crappy crappy

148
00:09:18,420 --> 00:09:23,339
buy some we can also see with

149
00:09:23,339 --> 00:09:25,700
administering other things than

150
00:09:25,700 --> 00:09:28,560
internally in the networking parts of

151
00:09:28,560 --> 00:09:30,450
Firefox we have a queue for outgoing

152
00:09:30,450 --> 00:09:33,930
requests they say outgoing because we

153
00:09:33,930 --> 00:09:39,780
want to ask for these things we're

154
00:09:39,780 --> 00:09:41,520
waiting for a connection or so it's sort

155
00:09:41,520 --> 00:09:43,380
of an availability to send off this

156
00:09:43,380 --> 00:09:44,940
request and it can be blocked by

157
00:09:44,940 --> 00:09:47,190
basically we don't they can't open will

158
00:09:47,190 --> 00:09:49,940
not allow them for more connections

159
00:09:49,940 --> 00:09:53,160
that's something else internally so then

160
00:09:53,160 --> 00:09:55,260
we can measure how long how long is the

161
00:09:55,260 --> 00:10:00,080
average time for requests sitting there

162
00:10:01,910 --> 00:10:05,040
difference so you would see that again

163
00:10:05,040 --> 00:10:08,760
if you're looking at these I kept up the

164
00:10:08,760 --> 00:10:10,320
part of this table but if you're looking

165
00:10:10,320 --> 00:10:11,470
again at these sort of

166
00:10:11,470 --> 00:10:13,630
worst cases of the internet the ones who

167
00:10:13,630 --> 00:10:16,240
had suffered the most you can see that

168
00:10:16,240 --> 00:10:18,940
it's the drastic improvement we're no

169
00:10:18,940 --> 00:10:20,740
longer basically no longer waiting for

170
00:10:20,740 --> 00:10:22,270
outgoing requests we can send requests

171
00:10:22,270 --> 00:10:25,870
much much earlier and 95th percentile

172
00:10:25,870 --> 00:10:27,970
that we're seeing I mean that's almost

173
00:10:27,970 --> 00:10:31,180
100 times improvement so of course we

174
00:10:31,180 --> 00:10:34,330
reduced number of round trips and much

175
00:10:34,330 --> 00:10:38,800
much reduced waiting time it will be a

176
00:10:38,800 --> 00:10:44,290
drastically improved experience so I

177
00:10:44,290 --> 00:10:47,530
would say yeah sure looking at least

178
00:10:47,530 --> 00:10:50,650
numbers and again not many of us are

179
00:10:50,650 --> 00:10:51,340
gonna be there

180
00:10:51,340 --> 00:10:53,980
yeah regularly so we might not have

181
00:10:53,980 --> 00:10:56,200
noticed but there's a certain amount of

182
00:10:56,200 --> 00:11:08,830
people that has suddenly gotten into ok

183
00:11:08,830 --> 00:11:11,140
this is how it looks in the good side

184
00:11:11,140 --> 00:11:14,830
and the bad side sort of this and how

185
00:11:14,830 --> 00:11:19,050
improved in their crappy surroundings

186
00:11:19,050 --> 00:11:23,170
right that that data to yourself how

187
00:11:23,170 --> 00:11:26,980
many requests are hanging in the queue

188
00:11:26,980 --> 00:11:29,340
longer than 100 milliseconds which is

189
00:11:29,340 --> 00:11:32,590
sort about you know you expanded sis we

190
00:11:32,590 --> 00:11:36,340
want to have that as soon as possible

191
00:11:36,340 --> 00:11:39,100
with h2 there aren't that many requests

192
00:11:39,100 --> 00:11:49,150
actually hanging for very fastly made

193
00:11:49,150 --> 00:11:52,950
some great tests by running browsers in

194
00:11:52,950 --> 00:11:55,870
you know test network where he would

195
00:11:55,870 --> 00:11:58,990
induce network packet loss basically

196
00:11:58,990 --> 00:12:02,020
losing packets as you lose packets in a

197
00:12:02,020 --> 00:12:05,230
real world that means you don't lose

198
00:12:05,230 --> 00:12:05,950
packets

199
00:12:05,950 --> 00:12:08,410
I mean what's that about maybe to be

200
00:12:08,410 --> 00:12:12,760
realistic simulation and then we can see

201
00:12:12,760 --> 00:12:16,280
that ok

202
00:12:16,280 --> 00:12:17,960
we don't need to go into the details but

203
00:12:17,960 --> 00:12:21,620
this is basically it's a time index and

204
00:12:21,620 --> 00:12:25,790
we can see h2 h1 in Firefox because in

205
00:12:25,790 --> 00:12:27,800
h2 h1 in Chrome

206
00:12:27,800 --> 00:12:30,230
and now we'll take a moment to see that

207
00:12:30,230 --> 00:12:39,320
chrome is much scenario

208
00:12:39,320 --> 00:12:44,360
deal case for h2 nothing is masked h2 is

209
00:12:44,360 --> 00:12:50,930
just faster overall 2% packet loss which

210
00:12:50,930 --> 00:12:52,820
is quite a lot by network standards you

211
00:12:52,820 --> 00:12:54,920
know you don't have that I mean this is

212
00:12:54,920 --> 00:12:56,360
not your ordinary Wi-Fi at home you

213
00:12:56,360 --> 00:13:00,620
don't even you wouldn't want this a fair

214
00:13:00,620 --> 00:13:02,450
amount of traffic in the world it is

215
00:13:02,450 --> 00:13:05,120
still suffering from this so we so this

216
00:13:05,120 --> 00:13:06,800
is still a scenario that is happening

217
00:13:06,800 --> 00:13:09,800
and we need to sort hold as Firefox OS

218
00:13:09,800 --> 00:13:12,620
h2 and h1 comparing this nasty

219
00:13:12,620 --> 00:13:15,050
surrounding and if you're if we've been

220
00:13:15,050 --> 00:13:17,990
looking at the same colors here you see

221
00:13:17,990 --> 00:13:20,330
that h2 performs much worse

222
00:13:20,330 --> 00:13:25,430
the the Firefox h1 is that Firefox h2 is

223
00:13:25,430 --> 00:13:31,540
there and this is an worse and clearly

224
00:13:31,540 --> 00:13:36,980
introducing rate of about 2% HT does not

225
00:13:36,980 --> 00:13:57,470
serve as good as h1 problem just because

226
00:13:57,470 --> 00:14:03,320
of some packet loss everything

227
00:14:03,320 --> 00:14:06,260
connection we have local streams or one

228
00:14:06,260 --> 00:14:08,930
physical stream one connection versus

229
00:14:08,930 --> 00:14:10,490
the previous h1 with six connections

230
00:14:10,490 --> 00:14:13,640
having there's some much bigger chance

231
00:14:13,640 --> 00:14:15,950
that one of the connections are actually

232
00:14:15,950 --> 00:14:18,230
sort of surviving when you get packet

233
00:14:18,230 --> 00:14:21,170
loss so yeah well 6 times laud your

234
00:14:21,170 --> 00:14:23,600
Chancellor your connection is going to

235
00:14:23,600 --> 00:14:25,310
survive without sort of waiting for a

236
00:14:25,310 --> 00:14:27,350
packet loss well if you're one

237
00:14:27,350 --> 00:14:30,430
connection one packet loss

238
00:15:01,220 --> 00:15:29,369
we have a line with everything so

239
00:15:29,369 --> 00:15:36,720
everything has to stop sort of being

240
00:15:36,720 --> 00:15:43,529
together on this so we need to fix the

241
00:15:43,529 --> 00:15:46,559
TCP header line blocking problem we

242
00:15:46,559 --> 00:15:52,559
can't have 99 images unrelated because

243
00:15:52,559 --> 00:15:56,040
one image single packet has been lost so

244
00:15:56,040 --> 00:15:58,829
we introduced non blocking TCP TLS h2

245
00:15:58,829 --> 00:16:02,850
right easy it's a PC so we need

246
00:16:02,850 --> 00:16:04,679
independent Pakistan so that we can lose

247
00:16:04,679 --> 00:16:06,980
the packet away in u.s. can continue and

248
00:16:06,980 --> 00:16:13,949
so they still need streams they can

249
00:16:13,949 --> 00:16:15,689
continue just this stream is going to be

250
00:16:15,689 --> 00:16:20,670
halted right but we need to send resend

251
00:16:20,670 --> 00:16:23,579
that packet right like TCP style this

252
00:16:23,579 --> 00:16:25,679
could be introduced with a new protocol

253
00:16:25,679 --> 00:16:27,929
like wife have TCP even if TCP isn't

254
00:16:27,929 --> 00:16:29,699
good enough and you repeat you know

255
00:16:29,699 --> 00:16:30,929
you'll appeal doesn't really reach

256
00:16:30,929 --> 00:16:33,529
anything

257
00:16:42,130 --> 00:18:22,310
no because there's so many boxes like

258
00:18:22,310 --> 00:18:24,320
this because reduce you to pee like this

259
00:18:24,320 --> 00:18:26,350
before we use you to pay for you know

260
00:18:26,350 --> 00:18:31,810
timing and some other tiny tiny things

261
00:18:33,550 --> 00:18:40,120
like video stuff but it working

262
00:18:40,120 --> 00:18:47,620
basically them networking school these

263
00:18:47,620 --> 00:18:50,650
sort will aligned sort of losing one

264
00:18:50,650 --> 00:18:53,380
packet there everything is aligned we

265
00:18:53,380 --> 00:18:56,140
just wait for that just in packet the

266
00:18:56,140 --> 00:18:58,750
IKEA train can continue we don't have to

267
00:18:58,750 --> 00:19:18,309
we don't have to wait so they have

268
00:19:18,309 --> 00:19:20,380
proven that this work it work stood

269
00:19:20,380 --> 00:19:26,260
deployed protocol over UDP like this set

270
00:19:26,260 --> 00:19:29,049
of HTTP to start to get that protocol

271
00:19:29,049 --> 00:19:30,820
into the ITF and make a standard out of

272
00:19:30,820 --> 00:19:33,090
it there's some massive interest and

273
00:19:33,090 --> 00:19:35,679
things have been changed a lot of things

274
00:19:35,679 --> 00:19:36,669
are being changed actually in the

275
00:19:36,669 --> 00:19:39,549
protocol so we'll see what happens is

276
00:19:39,549 --> 00:19:42,159
sort of a condition for it being in that

277
00:19:42,159 --> 00:19:44,169
be nice it will also be made as a

278
00:19:44,169 --> 00:19:46,899
transfer protocol more available

279
00:19:46,899 --> 00:19:53,020
transfer most often just h2 there's

280
00:19:53,020 --> 00:19:55,899
going to be F quake which is going to be

281
00:19:55,899 --> 00:19:57,220
quite different than the go be quick

282
00:19:57,220 --> 00:19:59,080
even if it's going to be the same

283
00:19:59,080 --> 00:20:06,340
principles speed age we're going to be

284
00:20:06,340 --> 00:20:07,840
the same in principle completely

285
00:20:07,840 --> 00:20:10,659
different on the wire and sort of the

286
00:20:10,659 --> 00:20:19,149
specs need this year from some big

287
00:20:19,149 --> 00:20:30,279
vendors basically to be free right it's

288
00:20:30,279 --> 00:20:36,190
next step it's not cold hb3 and it is be

289
00:20:36,190 --> 00:20:38,980
two types if it's becoming a protocol

290
00:20:38,980 --> 00:20:43,740
for other things than h2 but it's not

291
00:20:44,950 --> 00:20:47,450
they golden guys especially appreciate

292
00:20:47,450 --> 00:20:59,360
when I call it is that h1 wasn't really

293
00:20:59,360 --> 00:21:03,649
optimal an h2 is binary it reflects a

294
00:21:03,649 --> 00:21:07,009
lot of these problems is used everywhere

295
00:21:07,009 --> 00:21:09,019
especially then sort of if we can by

296
00:21:09,019 --> 00:21:10,759
volume by browsers

297
00:21:10,759 --> 00:21:13,309
it makes us faster I didn't really say

298
00:21:13,309 --> 00:21:16,309
that but it does and quick is coming

299
00:21:16,309 --> 00:21:17,899
really soon

300
00:21:17,899 --> 00:21:24,679
maybe over UDP that's the sort of that's

301
00:21:24,679 --> 00:21:28,059
a summary of everything you need to know

302
00:21:33,760 --> 00:21:36,920
[Music]

303
00:21:39,560 --> 00:21:42,270
we do have like ability if you want to

304
00:21:42,270 --> 00:21:44,690
take some

305
00:21:48,140 --> 00:21:51,229
[Applause]

306
00:21:52,710 --> 00:21:55,710
please

307
00:22:01,100 --> 00:22:05,250
any supporting mcauliffe are any

308
00:22:05,250 --> 00:22:08,270
supporting new car

309
00:22:14,390 --> 00:22:18,820
right now what was quakes today

310
00:22:22,279 --> 00:22:26,229
and the way to be replaced by ICF

311
00:22:34,800 --> 00:22:37,490
so

312
00:22:43,889 --> 00:22:48,659
yes sorry I mean the EPP doesn't fix

313
00:22:48,659 --> 00:22:52,450
augmentation of packets the so if any

314
00:22:52,450 --> 00:22:54,789
service or anything in between has there

315
00:22:54,789 --> 00:22:56,559
been any work early tests are a

316
00:22:56,559 --> 00:22:59,169
permutation effects European obviously

317
00:22:59,169 --> 00:23:01,859
TCP as well

318
00:23:07,900 --> 00:23:11,029
[Applause]

319
00:23:20,120 --> 00:23:21,770
[Music]

320
00:23:21,770 --> 00:23:24,430
thank you

321
00:23:29,190 --> 00:23:32,269
[Music]

322
00:23:35,830 --> 00:23:37,110
sorry

323
00:23:37,110 --> 00:23:41,070
[Music]

324
00:23:46,550 --> 00:23:49,700
[Applause]

325
00:23:54,390 --> 00:23:58,430
Paige - okay so now

326
00:24:00,150 --> 00:24:03,539
[Applause]

327
00:24:12,410 --> 00:24:15,509
[Music]

328
00:24:18,290 --> 00:24:20,510
you see you use quite basic for data

329
00:24:20,510 --> 00:24:22,790
correction for packet loss it's very

330
00:24:22,790 --> 00:24:25,010
basic compared to on our ETF documents

331
00:24:25,010 --> 00:24:27,410
such as art RTP do you know if there are

332
00:24:27,410 --> 00:24:29,260
any plans to use much more advanced

333
00:24:29,260 --> 00:24:32,260
methods

334
00:24:38,750 --> 00:24:41,650
in the vehicle

335
00:24:41,650 --> 00:24:44,110
and they sort of being that no

336
00:24:44,110 --> 00:24:47,080
sufficient legal to continuous leave

337
00:24:47,080 --> 00:24:48,190
even

338
00:24:48,190 --> 00:25:03,269
I know

