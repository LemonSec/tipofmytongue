1
00:00:00,000 --> 00:00:03,589
hi so allow me

2
00:00:04,580 --> 00:00:09,500
okay Giovanni here the first one from

3
00:00:09,500 --> 00:00:23,960
the Italian so I'll try to be very very

4
00:00:23,960 --> 00:00:26,989
fast and to leave some space for some

5
00:00:26,989 --> 00:00:32,238
question and answer because we will

6
00:00:32,238 --> 00:00:36,160
cover a lot of ground here cause

7
00:00:36,160 --> 00:00:39,489
real-time communication as getting

8
00:00:39,489 --> 00:00:42,429
complex and complex with them we have

9
00:00:42,429 --> 00:00:45,620
multiple protocol multiple transport and

10
00:00:45,620 --> 00:00:47,960
so if you want to build something that

11
00:00:47,960 --> 00:00:51,230
is really scalable in this real world

12
00:00:51,230 --> 00:00:55,219
where you have so many paths and so many

13
00:00:55,219 --> 00:00:58,579
different clients you really need that

14
00:00:58,579 --> 00:01:01,940
put some total need some real

15
00:01:01,940 --> 00:01:07,460
engineering and trade also some real

16
00:01:07,460 --> 00:01:09,980
world experience to check out what works

17
00:01:09,980 --> 00:01:13,520
and what no high-availability are the

18
00:01:13,520 --> 00:01:17,510
first things the most important part in

19
00:01:17,510 --> 00:01:20,720
high availability is you really need

20
00:01:20,720 --> 00:01:25,930
that wavy tall double at least double so

21
00:01:25,930 --> 00:01:29,150
before to thinking at complex things

22
00:01:29,150 --> 00:01:32,240
that software or things like that you

23
00:01:32,240 --> 00:01:38,320
first have to a double power supply

24
00:01:38,320 --> 00:01:42,350
double different circuit for your power

25
00:01:42,350 --> 00:01:46,310
and double switches for example I mean

26
00:01:46,310 --> 00:01:50,900
you can put so much thought into having

27
00:01:50,900 --> 00:01:53,540
your double networks and things like

28
00:01:53,540 --> 00:01:58,930
that and then your switch burns and your

29
00:01:58,930 --> 00:02:03,770
doesn't work in anything so as the first

30
00:02:03,770 --> 00:02:09,229
thing you double it all then you can

31
00:02:09,229 --> 00:02:13,810
outwit the simplest high availability

32
00:02:13,810 --> 00:02:16,480
architecture today's and

33
00:02:16,480 --> 00:02:20,590
passive so you will end up with one

34
00:02:20,590 --> 00:02:25,030
machine that is staying idle on the side

35
00:02:25,030 --> 00:02:29,170
of an active machine and that works very

36
00:02:29,170 --> 00:02:33,220
very well and this may be the most amost

37
00:02:33,220 --> 00:02:35,890
important architecture for critical

38
00:02:35,890 --> 00:02:36,910
systems

39
00:02:36,910 --> 00:02:40,030
so you actually have a spare machine

40
00:02:40,030 --> 00:02:42,310
that is just on the side doing nothing

41
00:02:42,310 --> 00:02:45,940
but it doesn't scale it doesn't scale at

42
00:02:45,940 --> 00:02:48,610
all so you can use these architecture

43
00:02:48,610 --> 00:02:51,610
just to protect something that is a

44
00:02:51,610 --> 00:02:54,519
critical service but is absolutely

45
00:02:54,519 --> 00:02:58,299
nothing that you can scale and that you

46
00:02:58,299 --> 00:03:01,510
can absorb millions and millions of user

47
00:03:01,510 --> 00:03:04,810
packets or whatever you want so you need

48
00:03:04,810 --> 00:03:07,920
something that is high available and

49
00:03:07,920 --> 00:03:13,209
scalable so in this architecture this

50
00:03:13,209 --> 00:03:15,609
doesn't scale at all because you have

51
00:03:15,609 --> 00:03:18,700
one that is completely idle and you had

52
00:03:18,700 --> 00:03:24,099
only one to absorb all your clients then

53
00:03:24,099 --> 00:03:27,220
you start thinking at load balancing so

54
00:03:27,220 --> 00:03:31,919
you end up hating many machines and

55
00:03:31,919 --> 00:03:34,169
something in the front that just

56
00:03:34,169 --> 00:03:36,849
distribute the calls distribute the

57
00:03:36,849 --> 00:03:40,079
packets on all those machines and

58
00:03:40,079 --> 00:03:45,160
obviously you try to be to combine the

59
00:03:45,160 --> 00:03:47,530
two architecture so you have high

60
00:03:47,530 --> 00:03:50,560
availability here on the front end so

61
00:03:50,560 --> 00:03:54,040
you have to distribute or two point of

62
00:03:54,040 --> 00:03:56,739
entrance where one is active and one is

63
00:03:56,739 --> 00:04:00,430
passive so those two are machines that

64
00:04:00,430 --> 00:04:04,090
are able to sustain the entirety of your

65
00:04:04,090 --> 00:04:07,959
traffic but that's don't need to be

66
00:04:07,959 --> 00:04:10,980
enormous machine because they just

67
00:04:10,980 --> 00:04:15,150
switches around and route packets and

68
00:04:15,150 --> 00:04:19,320
then you have on the back your farm with

69
00:04:19,320 --> 00:04:21,970
all the machines that you need the to

70
00:04:21,970 --> 00:04:25,240
offer service to unlimited number of

71
00:04:25,240 --> 00:04:28,340
users I mean as users grow

72
00:04:28,340 --> 00:04:30,980
so you just keep adding machines and

73
00:04:30,980 --> 00:04:36,550
then you have the back end your database

74
00:04:36,550 --> 00:04:39,320
fundamentally that is also in high

75
00:04:39,320 --> 00:04:41,930
availability so is in also in that case

76
00:04:41,930 --> 00:04:46,639
it is duplicated or it can be a plaster

77
00:04:46,639 --> 00:04:50,060
so but with my sequel and with Postgres

78
00:04:50,060 --> 00:04:52,430
you can have a cluster architectures

79
00:04:52,430 --> 00:04:59,750
that scales very well we have a

80
00:04:59,750 --> 00:05:03,410
difference between how you can scale

81
00:05:03,410 --> 00:05:06,080
with different protocols because for

82
00:05:06,080 --> 00:05:10,700
example the the protocols that is in

83
00:05:10,700 --> 00:05:15,139
this moment the most scalable is

84
00:05:15,139 --> 00:05:19,430
definitely see cause sip has let's say

85
00:05:19,430 --> 00:05:23,090
at least 20 years of experience in being

86
00:05:23,090 --> 00:05:27,110
hyper scalable and fundamentally running

87
00:05:27,110 --> 00:05:29,570
the whole telecommunication ward in all

88
00:05:29,570 --> 00:05:34,840
the world and and so you really can can

89
00:05:34,840 --> 00:05:39,380
can do scaling with SAP and we will see

90
00:05:39,380 --> 00:05:41,990
that is kind of different when you

91
00:05:41,990 --> 00:05:46,780
approach that through WebRTC and and

92
00:05:46,780 --> 00:05:49,729
Verto that is a protocol that is

93
00:05:49,729 --> 00:05:52,520
specific of free switch in this moment

94
00:05:52,520 --> 00:05:59,780
and another need that you need to take

95
00:05:59,780 --> 00:06:04,700
care about is not because as you know

96
00:06:04,700 --> 00:06:08,690
all of our class client will be behind

97
00:06:08,690 --> 00:06:12,500
that at that on that hormone that office

98
00:06:12,500 --> 00:06:16,850
behind routers that apply a net and we

99
00:06:16,850 --> 00:06:20,300
had before all the presentation that who

100
00:06:20,300 --> 00:06:23,450
was all about not having no more Nats

101
00:06:23,450 --> 00:06:27,080
but I mean for some year we still had to

102
00:06:27,080 --> 00:06:30,229
do to deal with NAT and also in this

103
00:06:30,229 --> 00:06:35,630
case we will use the front end to manage

104
00:06:35,630 --> 00:06:36,409
the night

105
00:06:36,409 --> 00:06:40,099
particularly we will use see process

106
00:06:40,099 --> 00:06:47,959
that total or Daniel Kamali or leave you

107
00:06:47,959 --> 00:06:52,029
open sea bass or there are also order

108
00:06:52,029 --> 00:06:57,699
other software that can do see process

109
00:06:57,699 --> 00:07:01,969
we have the how to put the where to put

110
00:07:01,969 --> 00:07:05,149
the see purchased are the registration

111
00:07:05,149 --> 00:07:09,669
is a high-frequency transaction that is

112
00:07:09,669 --> 00:07:12,949
doing a lot of packet moving back and

113
00:07:12,949 --> 00:07:17,389
forth and when you add millions of of

114
00:07:17,389 --> 00:07:19,519
customers or clients

115
00:07:19,519 --> 00:07:23,209
you then have to really think where you

116
00:07:23,209 --> 00:07:26,569
put the registrar you can put it on the

117
00:07:26,569 --> 00:07:29,179
back end or you can put it on the front

118
00:07:29,179 --> 00:07:31,699
end definitely it's better to put it on

119
00:07:31,699 --> 00:07:36,229
the front end because as this morning

120
00:07:36,229 --> 00:07:41,990
Matt was making clear in the scaling

121
00:07:41,990 --> 00:07:47,229
Asturias presentation the SIP proxy is

122
00:07:47,229 --> 00:07:52,059
designed to deal with so many

123
00:07:52,059 --> 00:07:59,199
transactions then the same proxy will do

124
00:07:59,199 --> 00:08:02,719
dispatcher and load balancer and we

125
00:08:02,719 --> 00:08:06,860
arrive at this kind of initial architect

126
00:08:06,860 --> 00:08:09,709
where we have the media that is flowing

127
00:08:09,709 --> 00:08:15,529
through a media proxy and this media

128
00:08:15,529 --> 00:08:19,069
proxy that is managed by the SIP proxy

129
00:08:19,069 --> 00:08:25,909
will take care about the not part of the

130
00:08:25,909 --> 00:08:28,219
media because is the media the problem

131
00:08:28,219 --> 00:08:31,329
normally you always are able to

132
00:08:31,329 --> 00:08:34,279
establish a session between your server

133
00:08:34,279 --> 00:08:38,839
and your end user but maybe that's this

134
00:08:38,839 --> 00:08:42,799
session we leave no audio or audio in

135
00:08:42,799 --> 00:08:44,110
only one

136
00:08:44,110 --> 00:08:46,990
in only one direction those are the

137
00:08:46,990 --> 00:08:51,850
typical net problems that with this kind

138
00:08:51,850 --> 00:08:54,550
of architect or having the proxy

139
00:08:54,550 --> 00:08:57,910
managing through a media proxy the media

140
00:08:57,910 --> 00:09:06,250
path will we will solve this is the

141
00:09:06,250 --> 00:09:11,070
typical algorithm with data you use to

142
00:09:11,070 --> 00:09:16,530
distribute registrations and call to

143
00:09:16,530 --> 00:09:22,810
back handmade by multiple machines we

144
00:09:22,810 --> 00:09:25,870
will see that with Verta protocol that

145
00:09:25,870 --> 00:09:29,650
is an alternative more geared through

146
00:09:29,650 --> 00:09:32,740
web developer to JavaScript developer

147
00:09:32,740 --> 00:09:35,890
exit era to integrate the real-time

148
00:09:35,890 --> 00:09:40,960
communication into web services with we

149
00:09:40,960 --> 00:09:48,240
don't have this problem about net and

150
00:09:48,240 --> 00:09:54,690
media path because Roberto and user

151
00:09:54,690 --> 00:09:59,380
directly I see for distributing media

152
00:09:59,380 --> 00:10:04,360
and it's much more simple to use when

153
00:10:04,360 --> 00:10:09,010
you are dealing with when you are

154
00:10:09,010 --> 00:10:14,290
dealing with web pages and web developer

155
00:10:14,290 --> 00:10:18,730
so the problem in this case start Vertov

156
00:10:18,730 --> 00:10:22,570
being a younger protocol has not yet all

157
00:10:22,570 --> 00:10:25,270
the infrastructure like registrar's and

158
00:10:25,270 --> 00:10:31,120
proxies to keep the him growing so we we

159
00:10:31,120 --> 00:10:35,560
use IP tables to distribute on the

160
00:10:35,560 --> 00:10:40,300
backend and to choose the basis of an

161
00:10:40,300 --> 00:10:46,280
algorithm where to route the single call

162
00:10:46,280 --> 00:10:47,760
[Music]

163
00:10:47,760 --> 00:10:52,360
in this case we arrive at having the

164
00:10:52,360 --> 00:10:55,090
same kind of architecture that is about

165
00:10:55,090 --> 00:10:57,220
four

166
00:10:57,220 --> 00:11:05,329
but for sip and for Verto one important

167
00:11:05,329 --> 00:11:07,930
role is made by the keep alive the

168
00:11:07,930 --> 00:11:10,819
software that is the software that

169
00:11:10,819 --> 00:11:15,829
manage the high availability between two

170
00:11:15,829 --> 00:11:18,379
machines so from one side that you

171
00:11:18,379 --> 00:11:21,620
distribute using the proxy or IP tables

172
00:11:21,620 --> 00:11:24,829
and from the other side you use vrrp

173
00:11:24,829 --> 00:11:27,889
with keep arrived to eighth one only

174
00:11:27,889 --> 00:11:32,060
machine active on each moment and so you

175
00:11:32,060 --> 00:11:40,040
ate the active passive architecture all

176
00:11:40,040 --> 00:11:43,569
the form and this form need to access

177
00:11:43,569 --> 00:11:49,009
some shared file system and in this case

178
00:11:49,009 --> 00:11:53,209
what is the most easy to use this

179
00:11:53,209 --> 00:11:58,730
cluster FS when you can adjust as more

180
00:11:58,730 --> 00:12:02,959
cluster of machine that exports a brick

181
00:12:02,959 --> 00:12:07,130
and the important thing is keep your

182
00:12:07,130 --> 00:12:11,540
mind that don't use shared file systems

183
00:12:11,540 --> 00:12:15,110
for something that is very faster moving

184
00:12:15,110 --> 00:12:18,410
or for very small transactions that is a

185
00:12:18,410 --> 00:12:19,310
no-go

186
00:12:19,310 --> 00:12:22,550
but for all media files configuration

187
00:12:22,550 --> 00:12:25,430
files Exeter Exeter shared file system

188
00:12:25,430 --> 00:12:29,569
are ok same things is important with

189
00:12:29,569 --> 00:12:35,240
some form of indirection when you access

190
00:12:35,240 --> 00:12:39,050
your database so each machine needs to

191
00:12:39,050 --> 00:12:42,889
waive its own proxy for the database so

192
00:12:42,889 --> 00:12:45,670
you don't clog your database with

193
00:12:45,670 --> 00:12:49,689
hundreds of connections

194
00:12:53,889 --> 00:12:58,339
this is about load-balancing into

195
00:12:58,339 --> 00:13:02,359
scaling but we have a lot of special

196
00:13:02,359 --> 00:13:05,779
cases as also Matt was talking this

197
00:13:05,779 --> 00:13:09,859
morning that you mean not to blindly

198
00:13:09,859 --> 00:13:13,669
distribute your incoming call but you

199
00:13:13,669 --> 00:13:16,129
need a call to land on a specific

200
00:13:16,129 --> 00:13:18,559
machine because it needs to come to be

201
00:13:18,559 --> 00:13:22,219
joined to at the audio level with some

202
00:13:22,219 --> 00:13:25,399
other call and in this case the answer

203
00:13:25,399 --> 00:13:29,179
is you need to partition partition a

204
00:13:29,179 --> 00:13:33,859
means you distribute the calls not in

205
00:13:33,859 --> 00:13:39,409
bags of the load but in beds of some

206
00:13:39,409 --> 00:13:43,479
more intelligence in in practice of what

207
00:13:43,479 --> 00:13:49,869
domain that call belongs to so you can

208
00:13:49,869 --> 00:13:54,529
this is in a in a distributed

209
00:13:54,529 --> 00:13:58,879
architecture when you need to use

210
00:13:58,879 --> 00:14:02,689
specific services for example a

211
00:14:02,689 --> 00:14:06,589
conference services for a one big domain

212
00:14:06,589 --> 00:14:11,359
so you just destined eight one specific

213
00:14:11,359 --> 00:14:14,989
machine or more than one machine to this

214
00:14:14,989 --> 00:14:19,429
service but you have another situation

215
00:14:19,429 --> 00:14:24,709
that is also very very common and is own

216
00:14:24,709 --> 00:14:27,949
specific need that is multi-tenancy so

217
00:14:27,949 --> 00:14:31,069
you may have just the opposite not one

218
00:14:31,069 --> 00:14:34,219
big domain with millions of user but

219
00:14:34,219 --> 00:14:37,429
many thousands of domains each one with

220
00:14:37,429 --> 00:14:41,749
maybe 100 users so what you do in this

221
00:14:41,749 --> 00:14:45,969
case is that you distribute and hash on

222
00:14:45,969 --> 00:14:51,289
on the domain so each call that pertains

223
00:14:51,289 --> 00:14:54,169
to a domain goes to a specific machine

224
00:14:54,169 --> 00:14:59,179
and in that case you have another set of

225
00:14:59,179 --> 00:15:02,659
kippah lives where you aive let's say

226
00:15:02,659 --> 00:15:06,550
once per machine for each four machine

227
00:15:06,550 --> 00:15:12,820
and that machine is ready to take the to

228
00:15:12,820 --> 00:15:14,350
take the place of the machine that

229
00:15:14,350 --> 00:15:53,680
failed okay so those boobs yeah and

230
00:15:53,680 --> 00:15:56,500
probably there will be another one for

231
00:15:56,500 --> 00:15:59,440
August and so if there is no question

232
00:15:59,440 --> 00:16:02,560
sir I invite you all to come in Chicago

233
00:16:02,560 --> 00:16:06,280
for two cone and that it will be like

234
00:16:06,280 --> 00:16:08,500
the queen spirit or continuation of this

235
00:16:08,500 --> 00:16:34,410
conference not understood the question

236
00:16:38,650 --> 00:16:42,260
yeah that would be a fully-functional

237
00:16:42,260 --> 00:16:47,120
server that I mean you keep virtual IP

238
00:16:47,120 --> 00:16:50,720
addresses on those on those machines so

239
00:16:50,720 --> 00:16:53,300
if one of those machines that goes down

240
00:16:53,300 --> 00:16:57,770
this one will take its its address and

241
00:16:57,770 --> 00:17:02,380
just will work as it was that machine

242
00:17:02,380 --> 00:17:04,190
and that's it

243
00:17:04,190 --> 00:17:07,160
you just restart the services and give

244
00:17:07,160 --> 00:17:16,790
it the new IP address obviously if you

245
00:17:16,790 --> 00:17:21,589
have 100 production machines you may be

246
00:17:21,589 --> 00:17:25,160
better to keep like 5s pair or things

247
00:17:25,160 --> 00:17:44,330
like that definitely depend almost all

248
00:17:44,330 --> 00:17:49,390
web RTC calls will be able to just like

249
00:17:49,390 --> 00:17:54,500
contain yet for the voice call or let's

250
00:17:54,500 --> 00:17:59,480
say for the SIP call it depends free

251
00:17:59,480 --> 00:18:04,100
switch has a mechanism to migrate that I

252
00:18:04,100 --> 00:18:09,650
will not put so much into that first

253
00:18:09,650 --> 00:18:14,000
because I mean you're supposed not to

254
00:18:14,000 --> 00:18:16,160
have machine that continuous failing

255
00:18:16,160 --> 00:18:21,410
Seco and I mean we are always used that

256
00:18:21,410 --> 00:18:25,070
that a call can go down and you just a

257
00:18:25,070 --> 00:18:27,230
call back and it's not

258
00:18:27,230 --> 00:18:29,840
I mean someone that that is on surgery

259
00:18:29,840 --> 00:18:32,300
or something I mean it's not live at a

260
00:18:32,300 --> 00:18:38,740
risk so it's doable we demonstrated it I

261
00:18:38,740 --> 00:18:42,890
am Not sure that it works that it is

262
00:18:42,890 --> 00:18:47,120
what for for the investment and the

263
00:18:47,120 --> 00:18:50,180
attention that it keeps definitely I

264
00:18:50,180 --> 00:18:52,039
will do that for a 911

265
00:18:52,039 --> 00:18:54,799
or some emergency call or for Polly I

266
00:18:54,799 --> 00:18:57,619
mean where it Ward's but not for a

267
00:18:57,619 --> 00:19:16,669
normal service RTP proxy is is good to

268
00:19:16,669 --> 00:19:19,220
have because in this way you don't

269
00:19:19,220 --> 00:19:23,090
expose your farmer on the on the public

270
00:19:23,090 --> 00:19:28,190
Internet and you have all behind so this

271
00:19:28,190 --> 00:19:31,099
is from for one thing it's the security

272
00:19:31,099 --> 00:19:34,519
from another thing many times you are

273
00:19:34,519 --> 00:19:37,700
required by law to have a single point

274
00:19:37,700 --> 00:19:40,340
work you can do

275
00:19:40,340 --> 00:19:44,960
I mean access to it etc also it's there

276
00:19:44,960 --> 00:19:48,950
is a lot of reasons both operative of

277
00:19:48,950 --> 00:19:52,970
business and low for low that you better

278
00:19:52,970 --> 00:19:56,769
keep data like that

279
00:19:57,660 --> 00:20:04,910
[Applause]

