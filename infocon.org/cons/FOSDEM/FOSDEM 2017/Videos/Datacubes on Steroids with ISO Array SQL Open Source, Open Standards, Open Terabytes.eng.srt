1
00:00:04,610 --> 00:00:07,140
fine we are connected visually

2
00:00:07,140 --> 00:00:10,110
acoustically 20 have you here and thanks

3
00:00:10,110 --> 00:00:13,440
for having me here to introduce myself

4
00:00:13,440 --> 00:00:16,320
and Peter Bergmann from Jakob University

5
00:00:16,320 --> 00:00:24,420
in the north of 102 others that's called

6
00:00:24,420 --> 00:00:27,150
beta cubes as you will see in terms of

7
00:00:27,150 --> 00:00:29,660
programming that simply means an array

8
00:00:29,660 --> 00:00:35,160
of arrays large ones and we research

9
00:00:35,160 --> 00:00:39,120
since a long time and effect has been

10
00:00:39,120 --> 00:00:42,809
about our concepts have been brought

11
00:00:42,809 --> 00:01:14,220
into standardization of and in terms of

12
00:01:14,220 --> 00:01:16,939
implementing it

13
00:01:18,280 --> 00:01:23,040
replacement of master

14
00:01:30,940 --> 00:02:05,710
English myself so many of them

15
00:02:05,710 --> 00:02:10,759
interesting and please correct me if you

16
00:02:10,759 --> 00:02:13,400
find now we have a few core data

17
00:02:13,400 --> 00:02:15,740
structures that make up for at least

18
00:02:15,740 --> 00:02:19,220
large part of that which beta so if I

19
00:02:19,220 --> 00:02:23,320
abstract element and also I repeat

20
00:02:23,970 --> 00:02:27,210
very few data structures that can

21
00:02:27,210 --> 00:02:31,830
conflate into cells those elements were

22
00:02:31,830 --> 00:02:34,860
just four sets and romantic sets so this

23
00:02:34,860 --> 00:02:36,780
one of relational databases we also have

24
00:02:36,780 --> 00:02:40,440
no SQL databases works sort of we find

25
00:02:40,440 --> 00:02:41,220
hierarchies

26
00:02:41,220 --> 00:02:43,410
okay hierarchies can be modeled for

27
00:02:43,410 --> 00:02:46,890
example in XML any other kind of things

28
00:02:46,890 --> 00:02:49,850
like JSON as well so we are on the

29
00:02:49,850 --> 00:02:52,230
graphs are something extremely

30
00:02:52,230 --> 00:02:54,660
interesting so like for example the

31
00:02:54,660 --> 00:02:57,590
Facebook graph with a billion nodes and

32
00:02:57,590 --> 00:03:00,990
maybe a couple of billion of edges so

33
00:03:00,990 --> 00:03:03,180
doing graph algorithms on that graph

34
00:03:03,180 --> 00:03:04,980
that's an exciting thing

35
00:03:04,980 --> 00:03:06,990
therefore graph databases are very

36
00:03:06,990 --> 00:03:09,450
important and exciting research area and

37
00:03:09,450 --> 00:03:12,660
then we have a couple of data that

38
00:03:12,660 --> 00:03:15,240
happen to be lined up on some grid grid

39
00:03:15,240 --> 00:03:18,150
it's data like raster images for example

40
00:03:18,150 --> 00:03:20,640
but also weather forecasts or confocal

41
00:03:20,640 --> 00:03:23,100
microscopy images you name it there's a

42
00:03:23,100 --> 00:03:25,980
lot of them these other ones we are

43
00:03:25,980 --> 00:03:28,709
focusing on and incidentally if you see

44
00:03:28,709 --> 00:03:30,720
what that means in practice coming back

45
00:03:30,720 --> 00:03:32,730
from the abstraction then you find that

46
00:03:32,730 --> 00:03:35,010
typically this is sensor data that is

47
00:03:35,010 --> 00:03:37,140
image data image time series

48
00:03:37,140 --> 00:03:39,750
it's simulation output or statistics

49
00:03:39,750 --> 00:03:43,620
data cubes there go data cubes is a

50
00:03:43,620 --> 00:03:46,050
common term for it but in the end of the

51
00:03:46,050 --> 00:03:50,040
race so the standard in a nutshell is

52
00:03:50,040 --> 00:03:52,380
going to look like this it will be part

53
00:03:52,380 --> 00:03:57,360
15 of SQL and it adds capabilities that

54
00:03:57,360 --> 00:04:00,930
column in a table can hold arrays can

55
00:04:00,930 --> 00:04:02,910
hold very large arrays we know that

56
00:04:02,910 --> 00:04:05,100
already from blobs they are just byte

57
00:04:05,100 --> 00:04:06,720
strings now we talk about something that

58
00:04:06,720 --> 00:04:10,590
has structure inherent so I can define

59
00:04:10,590 --> 00:04:12,870
the standard stuff like in cream and I

60
00:04:12,870 --> 00:04:15,300
can add a definition of a scene that is

61
00:04:15,300 --> 00:04:17,370
a satellite image that happens to be an

62
00:04:17,370 --> 00:04:19,709
array of five thousand by five thousand

63
00:04:19,709 --> 00:04:22,650
extent and each pixel in this case

64
00:04:22,650 --> 00:04:25,530
happens to be seven bands that is

65
00:04:25,530 --> 00:04:29,250
Landsat 7 that hosts seven bands okay

66
00:04:29,250 --> 00:04:30,720
once we have the definition in the

67
00:04:30,720 --> 00:04:31,840
database we

68
00:04:31,840 --> 00:04:34,330
can indeed do queries now the data

69
00:04:34,330 --> 00:04:36,730
dictionary knows about it and so we can

70
00:04:36,730 --> 00:04:40,630
do operations like band one - Man 2 /

71
00:04:40,630 --> 00:04:44,320
band 1 + then - let aside the typo in

72
00:04:44,320 --> 00:04:46,260
this query this is something that

73
00:04:46,260 --> 00:04:48,729
researchers in remote sensing called the

74
00:04:48,729 --> 00:04:50,710
NDVI the normalized difference

75
00:04:50,710 --> 00:04:53,110
vegetation index that's a very common

76
00:04:53,110 --> 00:04:56,320
formula now what does it do it takes the

77
00:04:56,320 --> 00:04:58,570
array and applies the operation that you

78
00:04:58,570 --> 00:05:01,590
see here on every pixel simultaneously

79
00:05:01,590 --> 00:05:04,389
that is a concept that you find in many

80
00:05:04,389 --> 00:05:08,830
languages like MATLAB like IDL - you

81
00:05:08,830 --> 00:05:10,810
name it that's a common technique and

82
00:05:10,810 --> 00:05:13,360
that is now available in a database

83
00:05:13,360 --> 00:05:16,750
query you can use also in the where

84
00:05:16,750 --> 00:05:21,130
clause if you collapse everything you do

85
00:05:21,130 --> 00:05:23,860
on the array into a single boolean

86
00:05:23,860 --> 00:05:24,340
scaler

87
00:05:24,340 --> 00:05:27,070
then you hit get a true/false a yes/no

88
00:05:27,070 --> 00:05:29,650
and then then you can utilize that for

89
00:05:29,650 --> 00:05:34,419
doing filtering on the data so it's

90
00:05:34,419 --> 00:05:37,510
essentially of what we do is marrying or

91
00:05:37,510 --> 00:05:40,630
injecting image or signal processing

92
00:05:40,630 --> 00:05:42,520
language or more generally linear

93
00:05:42,520 --> 00:05:46,180
algebra into standard SQL and that means

94
00:05:46,180 --> 00:05:48,070
suddenly a lot of domains can benefit

95
00:05:48,070 --> 00:05:49,960
which traditionally has been outside of

96
00:05:49,960 --> 00:05:52,120
databases who has been maintaining

97
00:05:52,120 --> 00:05:53,919
satellite images I mean the pixels

98
00:05:53,919 --> 00:05:56,110
inside a database not many people

99
00:05:56,110 --> 00:06:00,280
weather data and so on so it's

100
00:06:00,280 --> 00:06:02,860
interesting indeed to do that on the

101
00:06:02,860 --> 00:06:04,780
side there is another effect we gain

102
00:06:04,780 --> 00:06:08,260
because suddenly we are able to have

103
00:06:08,260 --> 00:06:12,280
read queries and green queries United in

104
00:06:12,280 --> 00:06:16,030
one what does that mean green queries

105
00:06:16,030 --> 00:06:18,700
are on metadata or the small smart

106
00:06:18,700 --> 00:06:21,430
descriptive data whereas the red query

107
00:06:21,430 --> 00:06:24,280
parts are on the data the big huge

108
00:06:24,280 --> 00:06:26,229
clumsy data that typically you could

109
00:06:26,229 --> 00:06:27,940
only download so this age-old

110
00:06:27,940 --> 00:06:30,760
subdivision the data and metadata we can

111
00:06:30,760 --> 00:06:32,979
overcome and we get a common information

112
00:06:32,979 --> 00:06:35,710
space for users so this logical modeling

113
00:06:35,710 --> 00:06:39,010
already has its advantages so this is

114
00:06:39,010 --> 00:06:43,090
what will become the standard and the

115
00:06:43,090 --> 00:06:44,319
status is that we are

116
00:06:44,319 --> 00:06:46,360
entering the second committee draft in I

117
00:06:46,360 --> 00:06:48,490
saw and then it goes into draft

118
00:06:48,490 --> 00:06:50,490
international standard blah blah and

119
00:06:50,490 --> 00:06:55,300
third quarter of 2017 we believe that

120
00:06:55,300 --> 00:06:57,249
the full adoption cycle will be finished

121
00:06:57,249 --> 00:07:03,129
and this will be fixed standard so we

122
00:07:03,129 --> 00:07:05,559
have an idea of how to embed the race

123
00:07:05,559 --> 00:07:09,099
into databases that we can do with it we

124
00:07:09,099 --> 00:07:11,379
have seen one class of operations we can

125
00:07:11,379 --> 00:07:14,589
do much more just by way of example you

126
00:07:14,589 --> 00:07:18,969
can do matrix multiplication top right

127
00:07:18,969 --> 00:07:20,979
you have the formula mathematically and

128
00:07:20,979 --> 00:07:23,110
if you translate that you can see that

129
00:07:23,110 --> 00:07:25,409
the operations that we use here are

130
00:07:25,409 --> 00:07:29,889
relatively one-to-one so in the red part

131
00:07:29,889 --> 00:07:32,020
we define an array that has an extent

132
00:07:32,020 --> 00:07:35,409
from zero m in one dimension to zero to

133
00:07:35,409 --> 00:07:38,409
P in the second dimension we bind

134
00:07:38,409 --> 00:07:41,199
iteration variables I and J to it and

135
00:07:41,199 --> 00:07:44,169
then we define for each of the elements

136
00:07:44,169 --> 00:07:47,050
of this newborn matrix what its contents

137
00:07:47,050 --> 00:07:49,779
should be that contents is given in

138
00:07:49,779 --> 00:07:52,659
terms of an expression where we inner in

139
00:07:52,659 --> 00:07:55,569
the innermost part find AI K multiplied

140
00:07:55,569 --> 00:07:57,969
by B KJ so we take individual numbers

141
00:07:57,969 --> 00:08:00,069
and multiply them like in the matrix

142
00:08:00,069 --> 00:08:03,159
formulation topic then we need to

143
00:08:03,159 --> 00:08:05,559
aggregate the big Sigma that is

144
00:08:05,559 --> 00:08:08,139
materialized by the condensed plus so

145
00:08:08,139 --> 00:08:10,360
use a plus operator to collect

146
00:08:10,360 --> 00:08:12,610
everything and by the way we have

147
00:08:12,610 --> 00:08:14,680
another iteration of the K iteration

148
00:08:14,680 --> 00:08:16,539
which happens to be at the bottom of our

149
00:08:16,539 --> 00:08:19,930
big Sigma and so the blue part is an

150
00:08:19,930 --> 00:08:22,479
aggregation operation that collects a

151
00:08:22,479 --> 00:08:24,789
result of expressions and the red part

152
00:08:24,789 --> 00:08:27,789
establishes a new array those two

153
00:08:27,789 --> 00:08:29,830
together allow us to formulate a lot of

154
00:08:29,830 --> 00:08:31,809
things in image process in statistics

155
00:08:31,809 --> 00:08:34,299
like for example convolution operations

156
00:08:34,299 --> 00:08:36,909
you can do roll-ups in OLAP and other

157
00:08:36,909 --> 00:08:38,188
fancy stuff

158
00:08:38,188 --> 00:08:41,250
the second example shows a histogram

159
00:08:41,250 --> 00:08:44,169
which is again the same structure we

160
00:08:44,169 --> 00:08:46,779
have the red establishing of a new array

161
00:08:46,779 --> 00:08:48,220
which in this case happens to be one

162
00:08:48,220 --> 00:08:51,759
dimensional 256 buckets and you have the

163
00:08:51,759 --> 00:08:54,160
green part which is the aggregation part

164
00:08:54,160 --> 00:08:56,820
actually

165
00:08:56,820 --> 00:09:01,930
excuse me if we step back a little bit

166
00:09:01,930 --> 00:09:04,030
the other operations that I showed you

167
00:09:04,030 --> 00:09:07,450
before can be expressed by a combination

168
00:09:07,450 --> 00:09:10,630
of these two or even just one in the end

169
00:09:10,630 --> 00:09:14,380
all the operations of this language of

170
00:09:14,380 --> 00:09:16,990
the sub language can be reduced to these

171
00:09:16,990 --> 00:09:18,910
two operators that is not only

172
00:09:18,910 --> 00:09:21,130
conceptually beautiful it also allows us

173
00:09:21,130 --> 00:09:23,470
to define optimizations and a few things

174
00:09:23,470 --> 00:09:25,480
that I can internally make the system

175
00:09:25,480 --> 00:09:32,730
faster okay sorry

176
00:09:32,730 --> 00:09:36,310
so now we have the concept how can be

177
00:09:36,310 --> 00:09:39,760
implemented our answer to that is called

178
00:09:39,760 --> 00:09:42,430
Rustom and that fancy name stands for

179
00:09:42,430 --> 00:09:45,460
raster data manager it traces back to a

180
00:09:45,460 --> 00:09:47,200
time when I did not dare to call it

181
00:09:47,200 --> 00:09:48,820
arise because people in image processing

182
00:09:48,820 --> 00:09:52,900
think of raster images but in the end it

183
00:09:52,900 --> 00:09:54,910
is exactly the idea sqlplus and

184
00:09:54,910 --> 00:09:56,710
dimensional arrays getting a query

185
00:09:56,710 --> 00:09:58,720
language that allows us any query any

186
00:09:58,720 --> 00:10:02,050
time on any volume of data cubes and

187
00:10:02,050 --> 00:10:03,760
therefore internally we have established

188
00:10:03,760 --> 00:10:06,190
an architecture that relies on tail and

189
00:10:06,190 --> 00:10:09,100
on tile streaming so that we can

190
00:10:09,100 --> 00:10:11,020
evaluate queries on objects that are

191
00:10:11,020 --> 00:10:12,850
larger than our main memory and that

192
00:10:12,850 --> 00:10:14,860
typically are if you say I have a

193
00:10:14,860 --> 00:10:16,870
terabyte main memory then I say I have a

194
00:10:16,870 --> 00:10:19,650
petabyte data cube so it's always bigger

195
00:10:19,650 --> 00:10:22,630
okay that is actually in operational use

196
00:10:22,630 --> 00:10:24,940
if you go to Planet server dot-eu

197
00:10:24,940 --> 00:10:26,860
this is about Mars moon and other

198
00:10:26,860 --> 00:10:30,340
planetary objects that is hosting 20

199
00:10:30,340 --> 00:10:32,980
terabytes of data in the Rustom and

200
00:10:32,980 --> 00:10:35,920
community which is open source and which

201
00:10:35,920 --> 00:10:39,730
you can download in source code or as

202
00:10:39,730 --> 00:10:43,960
RPM or as a virtual machine this is

203
00:10:43,960 --> 00:10:45,190
something that is more and more

204
00:10:45,190 --> 00:10:47,880
recognized today it took a long time

205
00:10:47,880 --> 00:10:51,190
actually way more than a decade but

206
00:10:51,190 --> 00:10:53,560
meantime it's recognized for example by

207
00:10:53,560 --> 00:10:57,089
the European Space Agency

208
00:11:00,259 --> 00:11:05,639
sorry okay right after that where's the

209
00:11:05,639 --> 00:11:11,879
next graveyard this is something that

210
00:11:11,879 --> 00:11:14,069
has let us stumble into standardization

211
00:11:14,069 --> 00:11:16,290
into geo services because they were the

212
00:11:16,290 --> 00:11:17,850
first ones to offer us big data

213
00:11:17,850 --> 00:11:20,369
historically medical data we're not that

214
00:11:20,369 --> 00:11:20,790
big

215
00:11:20,790 --> 00:11:22,649
today they are but not when we started

216
00:11:22,649 --> 00:11:25,139
into that and so we are mainly busy

217
00:11:25,139 --> 00:11:27,720
today in the ghiaccio sector where we

218
00:11:27,720 --> 00:11:29,459
also received a couple of awards and

219
00:11:29,459 --> 00:11:33,209
recognitions but let's go ahead we

220
00:11:33,209 --> 00:11:34,920
wanted to talk about implementation how

221
00:11:34,920 --> 00:11:37,170
can we implement such a language first

222
00:11:37,170 --> 00:11:39,119
we need to care about the data well

223
00:11:39,119 --> 00:11:42,360
obviously a petabyte is too big even for

224
00:11:42,360 --> 00:11:45,559
today's disk so we need to partition

225
00:11:45,559 --> 00:11:48,119
typically what systems of that kind do

226
00:11:48,119 --> 00:11:51,360
is they do some homogeneous partition

227
00:11:51,360 --> 00:11:52,889
you cut it into pieces of the same size

228
00:11:52,889 --> 00:11:55,920
and via directory lookup you then easily

229
00:11:55,920 --> 00:11:58,350
can spot the tiles partitions that are

230
00:11:58,350 --> 00:12:00,299
affected and so you can load them from

231
00:12:00,299 --> 00:12:03,990
this into main memory for evaluation we

232
00:12:03,990 --> 00:12:06,269
do that in a more general way so that

233
00:12:06,269 --> 00:12:09,299
actually you can adjust the partitioning

234
00:12:09,299 --> 00:12:11,519
scheme to your application to your query

235
00:12:11,519 --> 00:12:14,339
workload that is a little bit more

236
00:12:14,339 --> 00:12:16,319
involved but it gives you nice tuning

237
00:12:16,319 --> 00:12:18,420
parameters these tuning parameters

238
00:12:18,420 --> 00:12:19,709
actually are offered to the

239
00:12:19,709 --> 00:12:22,350
administrator so the user doesn't see it

240
00:12:22,350 --> 00:12:24,179
you saw nothing about partitioning in

241
00:12:24,179 --> 00:12:27,689
the previous queries the administrator

242
00:12:27,689 --> 00:12:29,999
however gets an extra statement in the

243
00:12:29,999 --> 00:12:32,309
insert Clause the tiling clause that

244
00:12:32,309 --> 00:12:34,619
says I want to use tiling skin area of

245
00:12:34,619 --> 00:12:36,689
interest and by the way these are my

246
00:12:36,689 --> 00:12:39,240
areas of interest here system of this I

247
00:12:39,240 --> 00:12:41,689
want to have as fast as ever possible

248
00:12:41,689 --> 00:12:44,429
for the other regions to something

249
00:12:44,429 --> 00:12:47,369
meaningful say tile size 1 million

250
00:12:47,369 --> 00:12:49,709
elements and then we can do a couple of

251
00:12:49,709 --> 00:12:51,389
more things and in the end the system

252
00:12:51,389 --> 00:12:53,579
knows how to organize data on disk so

253
00:12:53,579 --> 00:12:56,309
that we get it faster wait a moment

254
00:12:56,309 --> 00:12:59,549
some people say that's overkill this

255
00:12:59,549 --> 00:13:02,699
regular partitioning is really ok and

256
00:13:02,699 --> 00:13:06,179
it's sufficient really let's look into

257
00:13:06,179 --> 00:13:09,059
OpenStreetMap the very deploy are tiling

258
00:13:09,059 --> 00:13:11,580
that looks like the one you see here

259
00:13:11,580 --> 00:13:13,980
it's on vector data but the issue is the

260
00:13:13,980 --> 00:13:15,839
same if you want to go into New York

261
00:13:15,839 --> 00:13:18,360
City you have a very fine grain access

262
00:13:18,360 --> 00:13:20,279
of people very small boxes that they

263
00:13:20,279 --> 00:13:22,320
want to retrieve their s in the southern

264
00:13:22,320 --> 00:13:24,800
pacific you can have one big blue tile

265
00:13:24,800 --> 00:13:29,490
so actually it is worth adjusting to

266
00:13:29,490 --> 00:13:31,800
access behavior of users on the right

267
00:13:31,800 --> 00:13:33,779
hand side you see a simulation of two

268
00:13:33,779 --> 00:13:35,850
neutron stars rotating around each other

269
00:13:35,850 --> 00:13:38,339
and you can see nice to the adaptive

270
00:13:38,339 --> 00:13:42,089
refinement of the grid so this way I

271
00:13:42,089 --> 00:13:44,430
would counter yes it makes sense to go

272
00:13:44,430 --> 00:13:46,260
into that work and implement arbitrary

273
00:13:46,260 --> 00:13:50,670
tiling so much about the data now hooray

274
00:13:50,670 --> 00:13:53,100
once we have partitions we can nicely

275
00:13:53,100 --> 00:13:55,410
paralyze them in that we send each

276
00:13:55,410 --> 00:13:59,310
partition to a different node or we put

277
00:13:59,310 --> 00:14:01,589
it on a different machine even that's

278
00:14:01,589 --> 00:14:04,620
what we actually are doing and we have

279
00:14:04,620 --> 00:14:06,839
done that to the extent that single

280
00:14:06,839 --> 00:14:08,339
query was split over more than one

281
00:14:08,339 --> 00:14:11,220
thousand Amazon nodes by doing the

282
00:14:11,220 --> 00:14:13,769
following we take a query an incoming

283
00:14:13,769 --> 00:14:16,110
query and we look first where do the

284
00:14:16,110 --> 00:14:19,529
data set in this made-up example we

285
00:14:19,529 --> 00:14:21,810
might have data set a right away okay

286
00:14:21,810 --> 00:14:22,800
that's us anyway

287
00:14:22,800 --> 00:14:26,010
data set B is close by it is sitting in

288
00:14:26,010 --> 00:14:28,140
the cloud on another node or another

289
00:14:28,140 --> 00:14:30,720
disk so it's relatively easy to fetch

290
00:14:30,720 --> 00:14:32,850
but still we don't want to fetch the

291
00:14:32,850 --> 00:14:36,630
data rather we ship a sub query so this

292
00:14:36,630 --> 00:14:38,579
other node can do something for us it

293
00:14:38,579 --> 00:14:40,260
does computation on its data and just

294
00:14:40,260 --> 00:14:43,350
sends back data the results in this

295
00:14:43,350 --> 00:14:45,300
made-up example actually it's just a

296
00:14:45,300 --> 00:14:46,860
single integer that comes back so it

297
00:14:46,860 --> 00:14:49,410
really pays off it pays even more off

298
00:14:49,410 --> 00:14:51,750
when we do not talk about a cloud but

299
00:14:51,750 --> 00:14:53,520
about a Federation of data centers and

300
00:14:53,520 --> 00:14:55,140
that is something that we indeed have

301
00:14:55,140 --> 00:14:59,279
working ECMWF close to London wants to

302
00:14:59,279 --> 00:15:02,130
further write data with NCI Australia so

303
00:15:02,130 --> 00:15:05,670
we cannot ship data cubes so rather we

304
00:15:05,670 --> 00:15:09,089
ship queries and get back the results we

305
00:15:09,089 --> 00:15:11,190
can even drive it to the extreme that we

306
00:15:11,190 --> 00:15:13,260
have a moving target like a satellite up

307
00:15:13,260 --> 00:15:15,480
there and actually this is not vision

308
00:15:15,480 --> 00:15:18,329
this is not science fiction but you see

309
00:15:18,329 --> 00:15:20,730
that's really fun for us we have been

310
00:15:20,730 --> 00:15:23,820
accepted by ISA as an onboard experiment

311
00:15:23,820 --> 00:15:26,910
that satellite upset and this summer we

312
00:15:26,910 --> 00:15:30,180
will go on board in rata man will be an

313
00:15:30,180 --> 00:15:32,160
instance there which will be federated

314
00:15:32,160 --> 00:15:34,140
and then the satellite becomes a

315
00:15:34,140 --> 00:15:38,640
database server that we can trigger with

316
00:15:38,640 --> 00:15:43,110
queries so yes there's a lot of fun in

317
00:15:43,110 --> 00:15:45,480
it okay

318
00:15:45,480 --> 00:15:49,350
the architecture is like that so we have

319
00:15:49,350 --> 00:15:51,540
a center of workers which is the wrost

320
00:15:51,540 --> 00:15:53,400
server process the Rustom and server

321
00:15:53,400 --> 00:15:56,340
process that can put its pixels into a

322
00:15:56,340 --> 00:15:58,110
database this is how we historically

323
00:15:58,110 --> 00:16:00,810
started so it can be Postgres code for

324
00:16:00,810 --> 00:16:03,290
example or any other relational database

325
00:16:03,290 --> 00:16:05,940
at some time people also want it to have

326
00:16:05,940 --> 00:16:07,860
a version without the database

327
00:16:07,860 --> 00:16:12,060
underneath excuse me

328
00:16:12,060 --> 00:16:14,610
and so we developed our own Storage

329
00:16:14,610 --> 00:16:17,040
Manager which is round about a factor of

330
00:16:17,040 --> 00:16:19,290
two faster because it doesn't have some

331
00:16:19,290 --> 00:16:21,840
overhead that PostgreSQL with this

332
00:16:21,840 --> 00:16:24,510
functional richness has which we don't

333
00:16:24,510 --> 00:16:26,970
use and so there are two options to try

334
00:16:26,970 --> 00:16:30,990
to use that this all is SQL MDA or it's

335
00:16:30,990 --> 00:16:33,450
our SQL it's syntactically still a

336
00:16:33,450 --> 00:16:35,460
little bit different because the ISO

337
00:16:35,460 --> 00:16:38,580
folks wanted to have adjustments but

338
00:16:38,580 --> 00:16:40,770
it's the domain agnostic query language

339
00:16:40,770 --> 00:16:43,350
on top of that we have an application

340
00:16:43,350 --> 00:16:45,900
layer that adds geo semantics that

341
00:16:45,900 --> 00:16:48,210
implements the OGC standards of web

342
00:16:48,210 --> 00:16:50,130
coverage service web coverage processing

343
00:16:50,130 --> 00:16:52,650
service etc in short it knows about

344
00:16:52,650 --> 00:16:54,960
coordinates and it knows about regular

345
00:16:54,960 --> 00:16:56,820
and irregular grits and that kind of

346
00:16:56,820 --> 00:17:00,600
things okay so that is the overall

347
00:17:00,600 --> 00:17:03,210
architecture the raster servers can be

348
00:17:03,210 --> 00:17:05,760
multiple processes and that can run on

349
00:17:05,760 --> 00:17:06,990
the same or on different machines

350
00:17:06,990 --> 00:17:09,089
without a single point of failure it's

351
00:17:09,089 --> 00:17:11,339
not a centralized architecture but in a

352
00:17:11,339 --> 00:17:15,300
peer-to-peer style good so far so good

353
00:17:15,300 --> 00:17:18,869
of course when I talk about at Big Data

354
00:17:18,869 --> 00:17:22,079
conferences people say big data Hadoop

355
00:17:22,079 --> 00:17:25,140
and I say no not a tube and they say why

356
00:17:25,140 --> 00:17:27,690
not why do we not use a tube it's so

357
00:17:27,690 --> 00:17:30,710
faster scalable first of all a tube is

358
00:17:30,710 --> 00:17:34,740
scalable but not fast but actually

359
00:17:34,740 --> 00:17:36,510
Hadoop has import

360
00:17:36,510 --> 00:17:39,330
and missing property Hadoop is very good

361
00:17:39,330 --> 00:17:41,520
for asset oriented data remember my

362
00:17:41,520 --> 00:17:44,549
intro but it does not know about a race

363
00:17:44,549 --> 00:17:47,940
now if I have my red pixel that I want

364
00:17:47,940 --> 00:17:50,520
to access it's extremely likely that in

365
00:17:50,520 --> 00:17:52,080
the next millisecond I will want to have

366
00:17:52,080 --> 00:17:55,080
a blue one as long as the array is small

367
00:17:55,080 --> 00:17:57,960
and fits into your RAM in Hadoop it can

368
00:17:57,960 --> 00:17:59,370
deal with that as well in the end is

369
00:17:59,370 --> 00:18:01,799
Java and Java those arrays but hey we

370
00:18:01,799 --> 00:18:04,200
talk about big arrays yes multi terabyte

371
00:18:04,200 --> 00:18:06,150
objects so you need to shuffle around

372
00:18:06,150 --> 00:18:08,809
and this is what Hadoop doesn't know

373
00:18:08,809 --> 00:18:12,090
consequently this is shown by benchmarks

374
00:18:12,090 --> 00:18:16,100
so people at George Mason University

375
00:18:16,100 --> 00:18:19,020
University of Medicine and so on they

376
00:18:19,020 --> 00:18:21,740
have done benchmarks we are indeed

377
00:18:21,740 --> 00:18:25,110
between one hive was faster than Rustom

378
00:18:25,110 --> 00:18:26,700
and when it gets about accessing a

379
00:18:26,700 --> 00:18:30,600
single pixel array good but whenever you

380
00:18:30,600 --> 00:18:32,540
want to have more than that actually

381
00:18:32,540 --> 00:18:36,809
performance times skyrocket with those

382
00:18:36,809 --> 00:18:39,059
systems whereas our architecture is

383
00:18:39,059 --> 00:18:43,049
specialized and is faster I'm not saying

384
00:18:43,049 --> 00:18:45,059
just to make that very clear I'm not

385
00:18:45,059 --> 00:18:46,830
saying we are better than Hadoop in

386
00:18:46,830 --> 00:18:49,080
general we are just specialized on a

387
00:18:49,080 --> 00:18:50,850
very particular niche on a very

388
00:18:50,850 --> 00:18:52,710
particular data structure and therefore

389
00:18:52,710 --> 00:18:53,790
we can do better

390
00:18:53,790 --> 00:18:56,940
in other domains like indexing webpages

391
00:18:56,940 --> 00:19:00,900
we would fail in a big disaster we

392
00:19:00,900 --> 00:19:03,090
cannot do that this is where Hadoop can

393
00:19:03,090 --> 00:19:06,570
excel okay

394
00:19:06,570 --> 00:19:10,770
this whole thing is embedded in our one

395
00:19:10,770 --> 00:19:12,690
of our projects our flagship project

396
00:19:12,690 --> 00:19:15,030
actually is the earth server initiative

397
00:19:15,030 --> 00:19:17,190
where we do exactly that

398
00:19:17,190 --> 00:19:19,530
we take three dimensions and four

399
00:19:19,530 --> 00:19:21,960
dimensional data cubes and make them

400
00:19:21,960 --> 00:19:25,530
accessible for actual analytics agile

401
00:19:25,530 --> 00:19:27,780
means you can send any query any time

402
00:19:27,780 --> 00:19:30,900
via the query language paradigm utilize

403
00:19:30,900 --> 00:19:33,330
three dimensional time series XY and

404
00:19:33,330 --> 00:19:35,070
time and we have four dimensional

405
00:19:35,070 --> 00:19:38,549
weather data so we have a stop where we

406
00:19:38,549 --> 00:19:41,700
find for example European Space Agency

407
00:19:41,700 --> 00:19:43,210
Sentinel satellite data

408
00:19:43,210 --> 00:19:46,240
at neon this is currently exceeding 250

409
00:19:46,240 --> 00:19:48,850
terabyte we have Plymouth Marine

410
00:19:48,850 --> 00:19:51,460
Laboratory they do ocean color analysis

411
00:19:51,460 --> 00:19:53,710
we have national computation and

412
00:19:53,710 --> 00:19:57,010
infrastructure in Australia and European

413
00:19:57,010 --> 00:19:58,000
Centre for medium-range weather

414
00:19:58,000 --> 00:20:01,200
forecasts in reading close to London and

415
00:20:01,200 --> 00:20:04,210
now if you think about federating NCI

416
00:20:04,210 --> 00:20:05,380
and ECMWF

417
00:20:05,380 --> 00:20:06,850
you have exactly that distribution

418
00:20:06,850 --> 00:20:11,080
situation okay so that is what we are

419
00:20:11,080 --> 00:20:13,720
doing in this alliance across three

420
00:20:13,720 --> 00:20:18,400
continents and now in year five so yet

421
00:20:18,400 --> 00:20:20,350
another year to go and then we see what

422
00:20:20,350 --> 00:20:23,860
we find next actually I forgot one there

423
00:20:23,860 --> 00:20:26,260
is planet server up there Mars I

424
00:20:26,260 --> 00:20:28,840
mentioned that earlier so that is

425
00:20:28,840 --> 00:20:31,180
another one and okay there we don't want

426
00:20:31,180 --> 00:20:33,310
to federate with earth climate okay

427
00:20:33,310 --> 00:20:39,190
admittedly so this is the geo domain

428
00:20:39,190 --> 00:20:41,320
actually we have done experiments in

429
00:20:41,320 --> 00:20:42,220
many other domains

430
00:20:42,220 --> 00:20:44,980
out of curiosity so we have looked into

431
00:20:44,980 --> 00:20:47,530
the earth sciences from one day through

432
00:20:47,530 --> 00:20:50,110
40 Life Sciences is very interesting

433
00:20:50,110 --> 00:20:51,790
gene expression analysis for example

434
00:20:51,790 --> 00:20:54,580
looking at the fruit fly embryo human

435
00:20:54,580 --> 00:20:56,680
brain imaging we are just teaming up

436
00:20:56,680 --> 00:20:59,290
again to continue that research and

437
00:20:59,290 --> 00:21:01,390
further us like on the computational

438
00:21:01,390 --> 00:21:04,150
fluid dynamics etc you see I have a

439
00:21:04,150 --> 00:21:05,980
fable for technical scientific

440
00:21:05,980 --> 00:21:07,840
applications and not so much into

441
00:21:07,840 --> 00:21:10,720
monetary applications because my own a

442
00:21:10,720 --> 00:21:13,690
bank account is not big data so it

443
00:21:13,690 --> 00:21:19,540
doesn't pay off okay this was for the

444
00:21:19,540 --> 00:21:22,120
technical part and now let me go to

445
00:21:22,120 --> 00:21:26,920
metal L and report on a few other any

446
00:21:26,920 --> 00:21:28,800
weight we have so much time left I

447
00:21:28,800 --> 00:21:31,950
thought I cannot do it but I can

448
00:21:31,950 --> 00:21:35,230
fortunately I can show you a little bit

449
00:21:35,230 --> 00:21:36,700
just in case you're interested

450
00:21:36,700 --> 00:21:39,580
rust amend.org if you direct your

451
00:21:39,580 --> 00:21:41,940
browser to that page you get that one

452
00:21:41,940 --> 00:21:47,890
where you see documentation and you get

453
00:21:47,890 --> 00:21:50,650
the source code as I said so please feel

454
00:21:50,650 --> 00:21:54,030
invited to download if you want to see

455
00:21:54,030 --> 00:21:55,990
the downloads we cow

456
00:21:55,990 --> 00:21:59,530
them since some time you see that there

457
00:21:59,530 --> 00:22:01,390
are few this is strange

458
00:22:01,390 --> 00:22:04,210
so somebody seems to have many fails in

459
00:22:04,210 --> 00:22:07,390
download so don't count that peak that

460
00:22:07,390 --> 00:22:10,120
spike is for sure not realistic so

461
00:22:10,120 --> 00:22:12,580
realistic I believe is this one having

462
00:22:12,580 --> 00:22:14,440
on average about ten downloads per day

463
00:22:14,440 --> 00:22:18,610
something like that if you want to play

464
00:22:18,610 --> 00:22:22,990
with it play with it yes go to standards

465
00:22:22,990 --> 00:22:25,660
that Rustom in top corner this actually

466
00:22:25,660 --> 00:22:30,790
is a strange URL you may think but the

467
00:22:30,790 --> 00:22:32,980
mind and the main purpose actually is we

468
00:22:32,980 --> 00:22:34,600
want to demonstrate the use of Cheil

469
00:22:34,600 --> 00:22:37,740
standards so that we tell geo folks like

470
00:22:37,740 --> 00:22:40,000
satellite data centers hey it makes

471
00:22:40,000 --> 00:22:41,679
sense to offer services based on the

472
00:22:41,679 --> 00:22:43,450
standards because they are easy to use

473
00:22:43,450 --> 00:22:45,880
and they are scalable and so on so we

474
00:22:45,880 --> 00:22:47,620
have lots of demonstrations for

475
00:22:47,620 --> 00:22:50,950
different situations in life but as we

476
00:22:50,950 --> 00:22:53,320
are talking here about the SQL extension

477
00:22:53,320 --> 00:22:55,000
I would like to draw your attention

478
00:22:55,000 --> 00:22:59,290
attention to this one Russ QL console we

479
00:22:59,290 --> 00:23:01,780
have some sample data online and you can

480
00:23:01,780 --> 00:23:04,450
type a query in here and then you get a

481
00:23:04,450 --> 00:23:07,390
result so I take something that gives us

482
00:23:07,390 --> 00:23:12,010
some colors so bla bla bla select encode

483
00:23:12,010 --> 00:23:15,880
and then some query and we retrieve it

484
00:23:15,880 --> 00:23:18,280
and we get back the image so if you want

485
00:23:18,280 --> 00:23:19,600
to try out how it feels

486
00:23:19,600 --> 00:23:23,410
be our guest to look at that in another

487
00:23:23,410 --> 00:23:25,990
talk I've given this morning I presented

488
00:23:25,990 --> 00:23:28,600
on the Python interface they are quite a

489
00:23:28,600 --> 00:23:30,220
few Jupiter notebooks available now

490
00:23:30,220 --> 00:23:32,260
they'd also allow you to premier's into

491
00:23:32,260 --> 00:23:36,220
that but there's still to come we have

492
00:23:36,220 --> 00:23:39,190
many items on our plate where we have

493
00:23:39,190 --> 00:23:42,970
continuum let me mention one thing it's

494
00:23:42,970 --> 00:23:45,820
very important to me I may seem to

495
00:23:45,820 --> 00:23:49,870
appear now as evangelizing SQL as the

496
00:23:49,870 --> 00:23:53,500
world's big intergalactic definitely not

497
00:23:53,500 --> 00:23:55,540
we database people have learned our

498
00:23:55,540 --> 00:23:58,420
lesson so initially we thought we invent

499
00:23:58,420 --> 00:24:00,580
the natural language called structured

500
00:24:00,580 --> 00:24:01,130
English

501
00:24:01,130 --> 00:24:04,700
query language and maybe not many in

502
00:24:04,700 --> 00:24:07,820
this room would find SQL natural

503
00:24:07,820 --> 00:24:11,900
language so we have dropped that idea

504
00:24:11,900 --> 00:24:15,400
but SQL still is an excellent

505
00:24:15,400 --> 00:24:17,510
client-server programming paradigm

506
00:24:17,510 --> 00:24:19,850
because it allows you just by string

507
00:24:19,850 --> 00:24:23,120
manipulation to compose some code and

508
00:24:23,120 --> 00:24:25,100
then you ship code to the data you tell

509
00:24:25,100 --> 00:24:27,110
the system what to do you don't care

510
00:24:27,110 --> 00:24:28,910
about the optimization and about

511
00:24:28,910 --> 00:24:30,740
distribution because the high-level

512
00:24:30,740 --> 00:24:34,220
language does ignore slab and for this

513
00:24:34,220 --> 00:24:36,710
purpose I believe languages like SQL

514
00:24:36,710 --> 00:24:39,590
really have a purpose but then actually

515
00:24:39,590 --> 00:24:41,120
you would want to embed this into your

516
00:24:41,120 --> 00:24:42,830
application that ideally has some

517
00:24:42,830 --> 00:24:44,540
visuals and graphical interface and

518
00:24:44,540 --> 00:24:46,760
that's what you really want to offer to

519
00:24:46,760 --> 00:24:50,180
your users okay so our disclaimer no

520
00:24:50,180 --> 00:24:52,430
this is not the new intergalactic world

521
00:24:52,430 --> 00:24:55,550
speak this actually if you go into this

522
00:24:55,550 --> 00:24:59,600
one you will find one link at the end

523
00:24:59,600 --> 00:25:04,910
OST oh so we found it naturally since we

524
00:25:04,910 --> 00:25:07,960
started in 2008 to fork at the

525
00:25:07,960 --> 00:25:11,780
open-source version from the

526
00:25:11,780 --> 00:25:15,320
pre-existing fully commercial one to

527
00:25:15,320 --> 00:25:18,710
join the to join the open-source

528
00:25:18,710 --> 00:25:21,950
community and so we found our way into

529
00:25:21,950 --> 00:25:25,700
OS geo and I would like to make a few

530
00:25:25,700 --> 00:25:28,070
comments on that now on meta level so we

531
00:25:28,070 --> 00:25:29,480
had the opportunity to gain some

532
00:25:29,480 --> 00:25:33,110
experience and we found a couple of

533
00:25:33,110 --> 00:25:35,360
fantastic folks there but we also found

534
00:25:35,360 --> 00:25:38,900
some room for improvement and so what

535
00:25:38,900 --> 00:25:43,040
I'm unfolding now is based on number one

536
00:25:43,040 --> 00:25:45,290
I'm always a charter member since three

537
00:25:45,290 --> 00:25:48,410
years or so we have done the incubation

538
00:25:48,410 --> 00:25:52,400
procedure and as I said we are engaged

539
00:25:52,400 --> 00:25:53,550
in

540
00:25:53,550 --> 00:25:55,570
open-source software since about eight

541
00:25:55,570 --> 00:26:00,300
nine years now so the one thing is the

542
00:26:00,300 --> 00:26:05,100
maturity I believe also for open-source

543
00:26:05,100 --> 00:26:09,250
you need some coherent management of it

544
00:26:09,250 --> 00:26:12,520
so for example that was not my complaint

545
00:26:12,520 --> 00:26:15,340
part of somebody else last year there's

546
00:26:15,340 --> 00:26:18,220
no inventory of decisions taking how do

547
00:26:18,220 --> 00:26:20,200
you know what has been resolved earlier

548
00:26:20,200 --> 00:26:22,090
and that your decision today is not

549
00:26:22,090 --> 00:26:23,920
countering another decision earlier and

550
00:26:23,920 --> 00:26:26,650
maybe you can base your decision on past

551
00:26:26,650 --> 00:26:30,730
wisdom also management incubation

552
00:26:30,730 --> 00:26:34,230
management we took six and a half years

553
00:26:34,230 --> 00:26:37,720
PI WPS actually took eight years if you

554
00:26:37,720 --> 00:26:39,760
tend to take into account test out it is

555
00:26:39,760 --> 00:26:41,380
OSG or it's only ten years old

556
00:26:41,380 --> 00:26:45,070
so that is taking up quite some time at

557
00:26:45,070 --> 00:26:46,870
some time I suggested I always to you

558
00:26:46,870 --> 00:26:48,640
folks make it simple just apply your

559
00:26:48,640 --> 00:26:50,760
incubation criteria to yourself first

560
00:26:50,760 --> 00:26:53,140
but there was not much response to that

561
00:26:53,140 --> 00:26:54,970
no that doesn't fit we don't need that

562
00:26:54,970 --> 00:26:57,430
and something else I observe

563
00:26:57,430 --> 00:26:59,710
unfortunately is the typically insiders

564
00:26:59,710 --> 00:27:01,990
recommend each others when it comes to a

565
00:27:01,990 --> 00:27:03,750
selection or to elections for example

566
00:27:03,750 --> 00:27:10,060
into the OS geo charter membership the

567
00:27:10,060 --> 00:27:13,960
next thing is that actually it's good to

568
00:27:13,960 --> 00:27:15,790
have a broad focus but sometimes it can

569
00:27:15,790 --> 00:27:19,720
be too broad but we want to brand good

570
00:27:19,720 --> 00:27:21,760
projects in the sense it's good software

571
00:27:21,760 --> 00:27:25,120
that we can do use but we should not

572
00:27:25,120 --> 00:27:26,620
conquer the project and we should not

573
00:27:26,620 --> 00:27:30,520
impose particular models so I don't like

574
00:27:30,520 --> 00:27:32,350
very much designed by committee if

575
00:27:32,350 --> 00:27:34,150
somebody has a great idea and it's

576
00:27:34,150 --> 00:27:35,560
willing to invest into that and

577
00:27:35,560 --> 00:27:38,080
implement it let this guy do it and

578
00:27:38,080 --> 00:27:40,690
let's see what comes out do not take

579
00:27:40,690 --> 00:27:45,490
away a project and loose maybe this

580
00:27:45,490 --> 00:27:49,080
expert the next thing is and this is my

581
00:27:49,080 --> 00:27:54,120
most serious thing which worries me most

582
00:27:54,120 --> 00:27:57,910
I want to provoke you I call it software

583
00:27:57,910 --> 00:28:01,330
communism so they say all software

584
00:28:01,330 --> 00:28:03,880
should be free well I'm very much in

585
00:28:03,880 --> 00:28:05,680
favor of free software we are doing that

586
00:28:05,680 --> 00:28:06,700
ourselves with Kahn

587
00:28:06,700 --> 00:28:09,490
sitter of an effort why should also be

588
00:28:09,490 --> 00:28:12,790
free so we have the extreme commercial

589
00:28:12,790 --> 00:28:15,820
model I put it like s3 so the market

590
00:28:15,820 --> 00:28:18,370
leader in GIS and then you have always

591
00:28:18,370 --> 00:28:20,500
teal on the other extreme and only this

592
00:28:20,500 --> 00:28:22,150
is what they want to look at what about

593
00:28:22,150 --> 00:28:24,550
the ones in between we are losing so

594
00:28:24,550 --> 00:28:27,310
many we could join up forces going up to

595
00:28:27,310 --> 00:28:29,680
here and then we have a much larger

596
00:28:29,680 --> 00:28:33,040
basis to counter the purely commercial

597
00:28:33,040 --> 00:28:36,310
parts if you want that and by the way

598
00:28:36,310 --> 00:28:38,530
these ones in the middle are very often

599
00:28:38,530 --> 00:28:40,590
the small and medium sized enterprises

600
00:28:40,590 --> 00:28:44,860
so whom do you really hit if you hit

601
00:28:44,860 --> 00:28:47,770
everything right off OST you you mostly

602
00:28:47,770 --> 00:28:49,330
hit the small company it's not a large

603
00:28:49,330 --> 00:28:50,710
ones they don't care so much but the

604
00:28:50,710 --> 00:28:52,780
small ones suffer a real disadvantage

605
00:28:52,780 --> 00:28:55,780
and this is where I say let us have a

606
00:28:55,780 --> 00:28:57,730
more inclusive approach I believe it's

607
00:28:57,730 --> 00:28:59,950
very important to have this open source

608
00:28:59,950 --> 00:29:03,100
idea prosper and we try to contribute

609
00:29:03,100 --> 00:29:06,640
our humble part to it let us think about

610
00:29:06,640 --> 00:29:08,230
all possible models that we can

611
00:29:08,230 --> 00:29:10,450
accommodate and not be artificially

612
00:29:10,450 --> 00:29:15,640
exclusive okay so that was my kind of

613
00:29:15,640 --> 00:29:19,500
provocation of today of the day let me

614
00:29:19,500 --> 00:29:25,660
wrap up so my rice is something coming

615
00:29:25,660 --> 00:29:29,020
back to technical level that I believe

616
00:29:29,020 --> 00:29:31,720
is important it's important for many

617
00:29:31,720 --> 00:29:34,810
many applications that in the past have

618
00:29:34,810 --> 00:29:37,300
been ignored I can show you papers that

619
00:29:37,300 --> 00:29:40,450
right we take a pixel matrix and put it

620
00:29:40,450 --> 00:29:42,850
into an unstructured blob in the

621
00:29:42,850 --> 00:29:44,320
database in consequently you can do

622
00:29:44,320 --> 00:29:45,910
nothing with it you can just deliver the

623
00:29:45,910 --> 00:29:47,710
image and this is not what we want in

624
00:29:47,710 --> 00:29:50,710
the days of big data so actually it's

625
00:29:50,710 --> 00:29:52,810
good to have that support in some way

626
00:29:52,810 --> 00:29:55,120
and in the clear motorisation yeah not

627
00:29:55,120 --> 00:29:57,040
have another silo but have a clear

628
00:29:57,040 --> 00:29:58,900
interface and that interface is going to

629
00:29:58,900 --> 00:30:02,950
be SQL MDA so it remains the question

630
00:30:02,950 --> 00:30:04,090
what's above there

631
00:30:04,090 --> 00:30:06,610
let's do spicy clients this is not so

632
00:30:06,610 --> 00:30:09,310
much our game we are on the back end so

633
00:30:09,310 --> 00:30:11,230
at the lower end how can we have

634
00:30:11,230 --> 00:30:14,040
efficient implementations that are

635
00:30:14,040 --> 00:30:16,930
scalable that have high performance and

636
00:30:16,930 --> 00:30:18,290
that are easy to

637
00:30:18,290 --> 00:30:20,630
for the application program is not for

638
00:30:20,630 --> 00:30:23,840
the end-users once again with Rustom and

639
00:30:23,840 --> 00:30:25,790
community we try to make a humble

640
00:30:25,790 --> 00:30:28,610
contribution to that driven by a

641
00:30:28,610 --> 00:30:30,620
database perspective to another query

642
00:30:30,620 --> 00:30:32,900
language perspective that has let us

643
00:30:32,900 --> 00:30:34,820
stumble into the standardization as I

644
00:30:34,820 --> 00:30:38,090
said and today I am the editor of the

645
00:30:38,090 --> 00:30:41,120
OTC data cube standards so web coverage

646
00:30:41,120 --> 00:30:43,340
service of a coverage processing service

647
00:30:43,340 --> 00:30:47,960
and in I saw likewise we have more

648
00:30:47,960 --> 00:30:50,600
activities on this running and as we

649
00:30:50,600 --> 00:30:53,059
have a little bit time left you'll

650
00:30:53,059 --> 00:30:55,250
normally always take too much time so I

651
00:30:55,250 --> 00:30:57,650
said to myself Peter be careful not too

652
00:30:57,650 --> 00:30:59,420
many slides and now I'm in the

653
00:30:59,420 --> 00:31:02,270
comfortable situation that I can detail

654
00:31:02,270 --> 00:31:09,620
a little bit yo actually there is quite

655
00:31:09,620 --> 00:31:11,690
a few activities I talked to you about

656
00:31:11,690 --> 00:31:15,020
ISO SQL and EA but ISO also is

657
00:31:15,020 --> 00:31:17,330
interested in adopting the OGC standard

658
00:31:17,330 --> 00:31:19,610
of coverages with just data cubes in the

659
00:31:19,610 --> 00:31:24,340
end data cubes plus more and in inspire

660
00:31:24,340 --> 00:31:27,050
we find the same thing for those of you

661
00:31:27,050 --> 00:31:29,270
who don't know inspire this is the

662
00:31:29,270 --> 00:31:31,580
European legal framework for a common

663
00:31:31,580 --> 00:31:34,340
spatial data infrastructure but this

664
00:31:34,340 --> 00:31:37,190
sounds impressive and actually is a huge

665
00:31:37,190 --> 00:31:39,830
work because we want no less than all

666
00:31:39,830 --> 00:31:42,050
the institutions in the European

667
00:31:42,050 --> 00:31:44,690
community that offered geo data should

668
00:31:44,690 --> 00:31:47,300
do it in a compatible way that is a

669
00:31:47,300 --> 00:31:49,010
really huge project it's not just

670
00:31:49,010 --> 00:31:51,140
mapping agencies at the top level it's

671
00:31:51,140 --> 00:31:53,150
down to the level of municipalities and

672
00:31:53,150 --> 00:31:56,000
they all should adjust to open standards

673
00:31:56,000 --> 00:31:59,750
and for the coverage part so also images

674
00:31:59,750 --> 00:32:02,179
elevation data and that kind of things

675
00:32:02,179 --> 00:32:05,840
coverages are to be used the good thing

676
00:32:05,840 --> 00:32:08,420
is now that all these converge so we

677
00:32:08,420 --> 00:32:09,950
don't have competing standards on the

678
00:32:09,950 --> 00:32:12,350
same thing but we have a notion of

679
00:32:12,350 --> 00:32:14,900
coverage that carries over the different

680
00:32:14,900 --> 00:32:18,200
organizations so you know that just will

681
00:32:18,200 --> 00:32:20,480
be interoperable if you follow these

682
00:32:20,480 --> 00:32:25,100
standards ok

683
00:32:25,100 --> 00:32:27,470
coming back

684
00:32:27,470 --> 00:32:32,270
and I'm lost this was it

685
00:32:32,270 --> 00:32:38,550
okay so we have interfaces that can be

686
00:32:38,550 --> 00:32:40,590
used we look for scalable

687
00:32:40,590 --> 00:32:43,230
implementations I mentioned on the fly

688
00:32:43,230 --> 00:32:45,210
on political level so to say my

689
00:32:45,210 --> 00:32:47,850
observation is I believe osq

690
00:32:47,850 --> 00:32:50,730
specifically I generalized it here

691
00:32:50,730 --> 00:32:53,670
forgive me needs to be more inclusive in

692
00:32:53,670 --> 00:32:56,060
terms of business models and being

693
00:32:56,060 --> 00:32:58,740
scientists and technologists let me

694
00:32:58,740 --> 00:33:00,900
finalize still with the data cubes and

695
00:33:00,900 --> 00:33:04,170
as opposed to the single images that we

696
00:33:04,170 --> 00:33:06,480
have the satellite images one cube I

697
00:33:06,480 --> 00:33:09,600
would contend is more than just a

698
00:33:09,600 --> 00:33:11,910
million images it's just more tractable

699
00:33:11,910 --> 00:33:14,610
and this way we hope to contribute to

700
00:33:14,610 --> 00:33:16,830
the Big Data to huge and this way I

701
00:33:16,830 --> 00:33:19,440
would like to finalize for now and thank

702
00:33:19,440 --> 00:33:21,370
you very much for bearing with me

703
00:33:21,370 --> 00:33:29,949
[Applause]

704
00:33:30,760 --> 00:33:36,260
yeah I think any questions please and if

705
00:33:36,260 --> 00:33:38,630
you do will come running to you with the

706
00:33:38,630 --> 00:33:41,660
microphones so we can be heard on the

707
00:33:41,660 --> 00:33:49,880
recording that's great thank you very

708
00:33:49,880 --> 00:33:51,800
much is there a timeline for this to

709
00:33:51,800 --> 00:33:55,580
make it make it into a post yes so the

710
00:33:55,580 --> 00:33:57,170
support for a raise is that going to be

711
00:33:57,170 --> 00:33:59,320
adopted in purchase it was already there

712
00:33:59,320 --> 00:34:00,560
hmm

713
00:34:00,560 --> 00:34:03,260
I cannot speak for the post years people

714
00:34:03,260 --> 00:34:05,810
actually at the time they started with

715
00:34:05,810 --> 00:34:08,960
post GIS roster I told them hey let's

716
00:34:08,960 --> 00:34:10,880
team up that would be a nice endeavor

717
00:34:10,880 --> 00:34:13,460
but they said no we want to do our own

718
00:34:13,460 --> 00:34:16,940
thing we had public discussion on that

719
00:34:16,940 --> 00:34:19,190
and now they have developed their own

720
00:34:19,190 --> 00:34:22,730
way of doing that and they would need to

721
00:34:22,730 --> 00:34:24,440
adjust that of course would mean some

722
00:34:24,440 --> 00:34:26,360
effort and so I cannot speak for them I

723
00:34:26,360 --> 00:34:30,469
know that they are excuse me I know they

724
00:34:30,469 --> 00:34:32,300
are aware of it we had some exchange on

725
00:34:32,300 --> 00:34:34,820
it but is there somebody here from the

726
00:34:34,820 --> 00:34:39,590
PostgreSQL post years community could

727
00:34:39,590 --> 00:34:46,489
you maybe respond better than I can okay

728
00:34:46,489 --> 00:34:48,469
it seems it seems more logical to do it

729
00:34:48,469 --> 00:34:50,500
this way I would agree so I don't know

730
00:34:50,500 --> 00:34:52,969
quite if it'd be great if it makes this

731
00:34:52,969 --> 00:34:55,400
way yeah of course yeah I would love to

732
00:34:55,400 --> 00:34:57,320
see that because that allows us not only

733
00:34:57,320 --> 00:34:59,300
to be interchangeable in the sense of

734
00:34:59,300 --> 00:35:01,700
vendor lock-in but it also allows to

735
00:35:01,700 --> 00:35:03,860
federate different systems so we can

736
00:35:03,860 --> 00:35:06,110
establish the system of systems idea I

737
00:35:06,110 --> 00:35:08,200
would love that I'm open to collaborate

738
00:35:08,200 --> 00:35:11,649
okay great thank you

739
00:35:17,130 --> 00:35:23,100
thank you you mention about querying

740
00:35:23,100 --> 00:35:28,030
combining metadata metadata and data can

741
00:35:28,030 --> 00:35:30,520
you talk tell us a little bit more about

742
00:35:30,520 --> 00:35:38,860
that yes definitely so it's actually we

743
00:35:38,860 --> 00:35:41,340
can just pull up the example again and

744
00:35:41,340 --> 00:35:49,810
see the color schemes here so the green

745
00:35:49,810 --> 00:35:52,330
part is metadata symbolically here of

746
00:35:52,330 --> 00:35:53,830
course you have many more metadata

747
00:35:53,830 --> 00:35:56,980
normally but it's metadata which have

748
00:35:56,980 --> 00:35:58,420
the characteristic that it's small

749
00:35:58,420 --> 00:36:01,030
attributes it's the classical attributes

750
00:36:01,030 --> 00:36:03,730
of numbers strings and so on and dates

751
00:36:03,730 --> 00:36:06,550
in this case so this is what you define

752
00:36:06,550 --> 00:36:07,360
in the table

753
00:36:07,360 --> 00:36:09,160
and you define also that you have the

754
00:36:09,160 --> 00:36:12,250
data attribute hosting the pixels so

755
00:36:12,250 --> 00:36:15,720
conceptually it's in the same table

756
00:36:15,720 --> 00:36:18,070
physically of course not you wouldn't

757
00:36:18,070 --> 00:36:20,620
want to do that it would devastate your

758
00:36:20,620 --> 00:36:22,750
performance so the system internally

759
00:36:22,750 --> 00:36:24,790
actually must be clever enough to split

760
00:36:24,790 --> 00:36:27,040
that this is actually what we are doing

761
00:36:27,040 --> 00:36:29,230
with mediator technologies that we split

762
00:36:29,230 --> 00:36:31,090
such a query as we have them below and

763
00:36:31,090 --> 00:36:33,760
we find components that go into the

764
00:36:33,760 --> 00:36:36,430
classical relational part and are solved

765
00:36:36,430 --> 00:36:39,220
there and others that go into the array

766
00:36:39,220 --> 00:36:41,080
database part and their selves there and

767
00:36:41,080 --> 00:36:44,560
then we reunite that goes well unless we

768
00:36:44,560 --> 00:36:47,710
have a mixed join if we have a join that

769
00:36:47,710 --> 00:36:50,290
involves both data and metadata then it

770
00:36:50,290 --> 00:36:52,390
gets spicy and that is a current

771
00:36:52,390 --> 00:36:54,400
research area for us how to optimize

772
00:36:54,400 --> 00:36:57,250
that that's a difficult part by the way

773
00:36:57,250 --> 00:37:00,120
we are doing that not only for a

774
00:37:00,120 --> 00:37:02,770
relational stuff in collaboration with

775
00:37:02,770 --> 00:37:05,110
Athena research we do the same thing on

776
00:37:05,110 --> 00:37:08,620
X query and arrays and in collaboration

777
00:37:08,620 --> 00:37:12,100
with Uppsala University torij we do the

778
00:37:12,100 --> 00:37:15,570
same thing with RDF data with Sparkle

779
00:37:15,570 --> 00:37:18,070
what's called poly doors today we want

780
00:37:18,070 --> 00:37:20,320
to inject arrays into other data models

781
00:37:20,320 --> 00:37:23,530
and see how well this can work does that

782
00:37:23,530 --> 00:37:25,169
sort of answer your question

783
00:37:25,169 --> 00:37:33,419
okay excellent thank you

784
00:37:38,420 --> 00:37:42,770
I guess we're done then good thank you

785
00:37:42,770 --> 00:37:46,280
thank you again thank you very much and

786
00:37:46,280 --> 00:37:49,000
enjoy posture

