1
00:00:04,590 --> 00:00:07,520
our next speaker will also speak about

2
00:00:07,520 --> 00:00:11,490
value is security and stuff that after

3
00:00:11,490 --> 00:00:14,160
password this is antivirus this is also

4
00:00:14,160 --> 00:00:16,230
at the shell and it will talk about amar

5
00:00:16,230 --> 00:00:25,410
Tito let's upload him amadito is an

6
00:00:25,410 --> 00:00:27,300
aunty vos project which is quite young

7
00:00:27,300 --> 00:00:30,090
because we are on get up since May last

8
00:00:30,090 --> 00:00:35,129
year and thanks to Ann who gave me the

9
00:00:35,129 --> 00:00:37,289
idea of making a one year celebration

10
00:00:37,289 --> 00:00:39,600
one year celebration will be next May

11
00:00:39,600 --> 00:00:44,300
probably in Paris so what it is it's a

12
00:00:44,300 --> 00:00:47,280
project developing an antivirus which is

13
00:00:47,280 --> 00:00:49,109
completely open source it's backed by

14
00:00:49,109 --> 00:00:52,100
Tech lib which is a French editor

15
00:00:52,100 --> 00:00:54,510
located in Paris and focusing only on

16
00:00:54,510 --> 00:00:58,260
open source briefly about the licenses

17
00:00:58,260 --> 00:01:03,420
its mix of LGPL GPL Microsoft Public

18
00:01:03,420 --> 00:01:04,920
License which is an open source

19
00:01:04,920 --> 00:01:09,030
recognized license this because of a

20
00:01:09,030 --> 00:01:11,969
Windows driver which is just for

21
00:01:11,969 --> 00:01:16,530
real-time protection some original

22
00:01:16,530 --> 00:01:18,719
feature which I'll talk about a little

23
00:01:18,719 --> 00:01:20,899
bit later is that it's a modular

24
00:01:20,899 --> 00:01:24,659
antivirus it aims to be multi-platform

25
00:01:24,659 --> 00:01:29,280
yet Linux and Windows it offers standard

26
00:01:29,280 --> 00:01:32,640
or TV OS functionalities that is on the

27
00:01:32,640 --> 00:01:36,920
mound scan of files and directory

28
00:01:36,920 --> 00:01:40,829
putting detected files in a quarantine

29
00:01:40,829 --> 00:01:45,450
area raising alerts having a journal of

30
00:01:45,450 --> 00:01:48,359
event of course and offers real-time

31
00:01:48,359 --> 00:01:50,310
protection which means that it can

32
00:01:50,310 --> 00:01:54,630
intercept any file open in a specified

33
00:01:54,630 --> 00:01:58,020
directory and scan file before they're

34
00:01:58,020 --> 00:02:02,719
open and block opening of detected files

35
00:02:02,719 --> 00:02:06,299
only nukes it's implemented using FA

36
00:02:06,299 --> 00:02:09,780
notify and on Windows it's implemented

37
00:02:09,780 --> 00:02:12,720
using our own driver which is made on

38
00:02:12,720 --> 00:02:16,430
file system filter

39
00:02:16,590 --> 00:02:21,190
modular why because in fact analysis is

40
00:02:21,190 --> 00:02:24,040
not completely integrated and locked

41
00:02:24,040 --> 00:02:28,030
into the core of young severus it's done

42
00:02:28,030 --> 00:02:31,660
with modules which are plugin which can

43
00:02:31,660 --> 00:02:35,379
be dynamically loaded written in C yet

44
00:02:35,379 --> 00:02:39,670
and that they use a small API which

45
00:02:39,670 --> 00:02:43,810
mainly for function load configure scan

46
00:02:43,810 --> 00:02:49,329
a file and unload we support yet for

47
00:02:49,329 --> 00:02:54,940
modules one uses Lib klimova and ClamAV

48
00:02:54,940 --> 00:02:57,790
signature you all probably know the

49
00:02:57,790 --> 00:02:59,769
klamath antivirus which is kind of

50
00:02:59,769 --> 00:03:03,250
historical antivirus on linux we also

51
00:03:03,250 --> 00:03:07,810
support yeha yeha is both a scan engine

52
00:03:07,810 --> 00:03:12,160
and a format for extended signature it's

53
00:03:12,160 --> 00:03:15,819
a project that is backed by virustotal

54
00:03:15,819 --> 00:03:18,250
and which is very active and which is

55
00:03:18,250 --> 00:03:21,160
probably offers more extension with

56
00:03:21,160 --> 00:03:24,690
respect to klamath but we also have to

57
00:03:24,690 --> 00:03:28,780
in our own modules one is a heuristic

58
00:03:28,780 --> 00:03:32,650
module for classifying PE and health

59
00:03:32,650 --> 00:03:37,120
binaries and another one is an holistic

60
00:03:37,120 --> 00:03:40,239
module for classification of PDF which

61
00:03:40,239 --> 00:03:43,169
PDF documents being a well known

62
00:03:43,169 --> 00:03:47,380
infection support and the future is will

63
00:03:47,380 --> 00:03:49,750
offer a possibility to write scan more

64
00:03:49,750 --> 00:03:52,480
analysis modules in python and probably

65
00:03:52,480 --> 00:03:55,470
also a go language

66
00:03:57,440 --> 00:04:00,860
we support to user interfaces a first

67
00:04:00,860 --> 00:04:04,460
very lightweight one which runs only in

68
00:04:04,460 --> 00:04:07,690
the notification area versus train and

69
00:04:07,690 --> 00:04:11,240
which shows only notifications that is

70
00:04:11,240 --> 00:04:15,020
mainly when file was blocked by the

71
00:04:15,020 --> 00:04:19,399
real-time protection or when dr. oz was

72
00:04:19,399 --> 00:04:22,430
at the update hidden and a full

73
00:04:22,430 --> 00:04:24,680
interface which is in fact a web-based

74
00:04:24,680 --> 00:04:28,720
it's developed using angular JS at

75
00:04:28,720 --> 00:04:32,480
interfaces with a small HTTP server

76
00:04:32,480 --> 00:04:35,560
which is embedded into the antivirus and

77
00:04:35,560 --> 00:04:40,160
communicates with a REST API by the way

78
00:04:40,160 --> 00:04:42,500
the user interface you have a small

79
00:04:42,500 --> 00:04:47,470
screen shot at the left of other slide

80
00:04:47,470 --> 00:04:51,980
what is quite new with respect to open

81
00:04:51,980 --> 00:04:53,870
source antivirus is that we offer a

82
00:04:53,870 --> 00:04:57,260
control console for management that is

83
00:04:57,260 --> 00:04:59,510
when you are in an organization or a

84
00:04:59,510 --> 00:05:03,590
non-proprietary helpful to have a

85
00:05:03,590 --> 00:05:06,260
central point where you can know what

86
00:05:06,260 --> 00:05:09,230
all the antivirus deployed on your

87
00:05:09,230 --> 00:05:12,320
Windows or Linux machines are doing if

88
00:05:12,320 --> 00:05:15,740
they have done detection if there is

89
00:05:15,740 --> 00:05:18,890
some database update problem things like

90
00:05:18,890 --> 00:05:22,340
that so we have an interface which is

91
00:05:22,340 --> 00:05:26,930
based on GL p IG l p is a software which

92
00:05:26,930 --> 00:05:28,820
is supported by tech lib and it's an

93
00:05:28,820 --> 00:05:32,600
asset management system which is often

94
00:05:32,600 --> 00:05:34,820
used for instance in education where you

95
00:05:34,820 --> 00:05:38,030
have to manage a large park of values

96
00:05:38,030 --> 00:05:41,810
and etiology news machines and it's

97
00:05:41,810 --> 00:05:44,800
based also on fitori which is an

98
00:05:44,800 --> 00:05:48,410
inventory agent deployed on all the

99
00:05:48,410 --> 00:05:52,280
machines of your computing environment

100
00:05:52,280 --> 00:05:55,370
it allows to upload to a central server

101
00:05:55,370 --> 00:05:59,210
the inventory of the machine and we have

102
00:05:59,210 --> 00:06:01,880
a management interface for antivirus

103
00:06:01,880 --> 00:06:03,890
which is integrated into this

104
00:06:03,890 --> 00:06:06,740
architecture so at for instance when you

105
00:06:06,740 --> 00:06:07,970
have an

106
00:06:07,970 --> 00:06:10,940
if you go to the tab where you have a

107
00:06:10,940 --> 00:06:13,520
list of all the recent detections of all

108
00:06:13,520 --> 00:06:15,800
the computers and when you click on a

109
00:06:15,800 --> 00:06:17,930
detection you know thematically all the

110
00:06:17,930 --> 00:06:20,150
inventory information for instance a

111
00:06:20,150 --> 00:06:22,910
person to contact where is the computer

112
00:06:22,910 --> 00:06:26,960
located is very system up-to-date and so

113
00:06:26,960 --> 00:06:36,170
on and so on and what we are going to do

114
00:06:36,170 --> 00:06:40,270
next well as soon as possible

115
00:06:40,450 --> 00:06:43,100
recently we are going to make a Linux

116
00:06:43,100 --> 00:06:46,730
release very soon we have a PPA on

117
00:06:46,730 --> 00:06:51,500
launch pad and we we don't have right

118
00:06:51,500 --> 00:06:54,350
now windows installer and it's a plan

119
00:06:54,350 --> 00:06:59,180
for next month we need of course more

120
00:06:59,180 --> 00:07:04,250
testing documentation but other stuff we

121
00:07:04,250 --> 00:07:07,120
would like to implement the current

122
00:07:07,120 --> 00:07:10,450
eristic module for binary scan and

123
00:07:10,450 --> 00:07:13,760
probably integrate it in a better way

124
00:07:13,760 --> 00:07:18,160
with yaja rules and as I said to provide

125
00:07:18,160 --> 00:07:21,800
API to allow people to integrate modules

126
00:07:21,800 --> 00:07:25,270
scan modules written in Python and go

127
00:07:25,270 --> 00:07:30,620
why this because when you analyze quite

128
00:07:30,620 --> 00:07:33,140
complex file format or when you unpack

129
00:07:33,140 --> 00:07:36,350
or when you run whatever analysis on a

130
00:07:36,350 --> 00:07:40,160
file if the file is deliberately ill

131
00:07:40,160 --> 00:07:43,250
formed or if there's a vulnerability in

132
00:07:43,250 --> 00:07:47,090
the scan module if it's a C or C++ base

133
00:07:47,090 --> 00:07:51,080
scan module in can cause obviously drive

134
00:07:51,080 --> 00:07:55,130
to memory corruption and maybe exploit

135
00:07:55,130 --> 00:07:57,650
and if you exploit the scan module then

136
00:07:57,650 --> 00:08:00,650
you exploit the antivirus antivirus runs

137
00:08:00,650 --> 00:08:08,150
with a high sorry is a Rundle as a as a

138
00:08:08,150 --> 00:08:11,450
root and with administration rights so

139
00:08:11,450 --> 00:08:14,120
you can either get rid of your tavares

140
00:08:14,120 --> 00:08:17,360
or exploit the machine so having a more

141
00:08:17,360 --> 00:08:20,450
secure language like python on row

142
00:08:20,450 --> 00:08:23,350
would allow to have more security when

143
00:08:23,350 --> 00:08:26,960
hosting scan modules and this this is

144
00:08:26,960 --> 00:08:28,880
related to something else I'm going to

145
00:08:28,880 --> 00:08:33,289
talk very soon ba now our issues of

146
00:08:33,289 --> 00:08:35,809
course code quality we try to run

147
00:08:35,809 --> 00:08:40,880
coverage tests and very recently passed

148
00:08:40,880 --> 00:08:47,480
us on a cube analysis Yama Yama is it's

149
00:08:47,480 --> 00:08:49,600
developed by a French company it's

150
00:08:49,600 --> 00:08:53,540
Jewish total open-source equivalent that

151
00:08:53,540 --> 00:08:59,050
it is its web interface to scan files

152
00:08:59,050 --> 00:09:03,500
using many antivirus and have results

153
00:09:03,500 --> 00:09:05,570
presented more or less the same way as

154
00:09:05,570 --> 00:09:06,380
virustotal

155
00:09:06,380 --> 00:09:09,740
so we'll provide an aroma plugin that

156
00:09:09,740 --> 00:09:14,720
allows to scan files with our MIDI 2 but

157
00:09:14,720 --> 00:09:17,240
we also would like to enter voice total

158
00:09:17,240 --> 00:09:20,000
and a VCR which is another version

159
00:09:20,000 --> 00:09:25,700
another view is total like website for

160
00:09:25,700 --> 00:09:28,940
us several reasons first of all well to

161
00:09:28,940 --> 00:09:31,850
be well-known and second to have access

162
00:09:31,850 --> 00:09:37,670
to samples provided by us data but there

163
00:09:37,670 --> 00:09:43,370
are still some interesting issues if we

164
00:09:43,370 --> 00:09:47,800
compare with other proprietary Ontiveros

165
00:09:47,800 --> 00:09:52,390
we have a huge memory flow print problem

166
00:09:52,390 --> 00:09:55,310
usually an octave use proprietary

167
00:09:55,310 --> 00:09:59,090
antivirus you have a kind of 100

168
00:09:59,090 --> 00:10:05,360
megabytes memory fufu footprint we run

169
00:10:05,360 --> 00:10:08,630
approximately up to four hundred and

170
00:10:08,630 --> 00:10:11,060
fifty megabytes which is obviously too

171
00:10:11,060 --> 00:10:13,550
high and this is highly related to the

172
00:10:13,550 --> 00:10:16,360
klamath module and we don't know how

173
00:10:16,360 --> 00:10:20,060
precisely to fix that now we have some

174
00:10:20,060 --> 00:10:23,260
idea but the problem is quite complex

175
00:10:23,260 --> 00:10:26,150
then the question of some boxing as I

176
00:10:26,150 --> 00:10:29,030
explained earlier when you run a scan on

177
00:10:29,030 --> 00:10:32,670
a file if the scan code

178
00:10:32,670 --> 00:10:36,300
has a vulnerability you may use that to

179
00:10:36,300 --> 00:10:40,260
exploit the antivirus and to compromise

180
00:10:40,260 --> 00:10:42,720
antivirus and of course a complete

181
00:10:42,720 --> 00:10:47,220
machine so one solution is to implement

182
00:10:47,220 --> 00:10:51,330
the scan algorithm using more secure

183
00:10:51,330 --> 00:10:54,210
languages but the other solution is to

184
00:10:54,210 --> 00:10:58,140
run the scan inside a sandbox that is if

185
00:10:58,140 --> 00:11:03,120
by accident the scan crashes or has a

186
00:11:03,120 --> 00:11:05,880
memory corruption then you just throw

187
00:11:05,880 --> 00:11:08,700
away the sandbox consider that the file

188
00:11:08,700 --> 00:11:12,960
is dangerous and you're guaranteed that

189
00:11:12,960 --> 00:11:16,080
it won't compromise the wrong machine of

190
00:11:16,080 --> 00:11:19,170
course this is quite difficult to

191
00:11:19,170 --> 00:11:23,340
implement in a portable way basically on

192
00:11:23,340 --> 00:11:26,850
Linux it will be SEC comp plus BPF and

193
00:11:26,850 --> 00:11:29,430
windows will probably take a lot of

194
00:11:29,430 --> 00:11:32,580
inspiration from the browser's sandbox

195
00:11:32,580 --> 00:11:38,460
but it's kind of complicated job to

196
00:11:38,460 --> 00:11:43,830
interface to implement and another issue

197
00:11:43,830 --> 00:11:49,200
is how to have good signature signature

198
00:11:49,200 --> 00:11:51,120
with codes because in fact

199
00:11:51,120 --> 00:11:53,460
yah-ha rules for instance are more

200
00:11:53,460 --> 00:11:56,340
complicated that's nature they can be

201
00:11:56,340 --> 00:11:59,630
some kind of complex logical expression

202
00:11:59,630 --> 00:12:03,240
including operators and extensible

203
00:12:03,240 --> 00:12:05,760
modules but the problem is is how to

204
00:12:05,760 --> 00:12:09,540
produce these rules and we don't have

205
00:12:09,540 --> 00:12:12,980
obviously hundreds of little hands

206
00:12:12,980 --> 00:12:17,390
analyzing in real time thousand or

207
00:12:17,390 --> 00:12:21,480
hundreds of thousand of files coming

208
00:12:21,480 --> 00:12:23,940
from the internet we don't have a

209
00:12:23,940 --> 00:12:32,160
resources to pay them and so how to do

210
00:12:32,160 --> 00:12:38,100
that well virtu solutions for the long

211
00:12:38,100 --> 00:12:41,160
term solution is have an automated

212
00:12:41,160 --> 00:12:45,420
process of analyzing collected malware's

213
00:12:45,420 --> 00:12:45,980
come

214
00:12:45,980 --> 00:12:50,540
from whatever mean honey pods sperm and

215
00:12:50,540 --> 00:12:51,860
so on or

216
00:12:51,860 --> 00:12:56,630
community and for instance of yama site

217
00:12:56,630 --> 00:13:01,850
and automatically produce rules for

218
00:13:01,850 --> 00:13:06,320
recognizing these manuals but it's a

219
00:13:06,320 --> 00:13:08,690
point where for instance a community

220
00:13:08,690 --> 00:13:15,970
could help by providing world scale

221
00:13:15,970 --> 00:13:21,560
collects collection of malware's right

222
00:13:21,560 --> 00:13:23,720
now the steam team is quite small

223
00:13:23,720 --> 00:13:28,010
well the wall team is there so if you

224
00:13:28,010 --> 00:13:31,370
are interested in security on TV OS and

225
00:13:31,370 --> 00:13:34,910
collecting malware for your own purpose

226
00:13:34,910 --> 00:13:39,470
no no no no please well you're welcome

227
00:13:39,470 --> 00:13:40,610
to join us

228
00:13:40,610 --> 00:13:48,620
a project is young and it has a lot of

229
00:13:48,620 --> 00:13:53,030
interesting features to develop where to

230
00:13:53,030 --> 00:13:56,930
find us we're on github we have some

231
00:13:56,930 --> 00:14:02,390
documentation on read the docs and you

232
00:14:02,390 --> 00:14:05,930
can talk to us on jeater but also on

233
00:14:05,930 --> 00:14:07,910
freenode there is a channel called al

234
00:14:07,910 --> 00:14:13,150
merito okay we have a PPA and we have

235
00:14:13,150 --> 00:14:17,330
now a forum which was installed last

236
00:14:17,330 --> 00:14:21,670
week it's a forum dot our midi to odd

237
00:14:21,670 --> 00:14:23,860
thanks for the talk

238
00:14:23,860 --> 00:14:28,040
do we have a quick question someone we

239
00:14:28,040 --> 00:14:29,360
have just the time for a very quick

240
00:14:29,360 --> 00:14:31,480
question

241
00:14:33,220 --> 00:14:35,870
hello everybody and I want to add

242
00:14:35,870 --> 00:14:37,790
something about the centralized

243
00:14:37,790 --> 00:14:40,400
management system in fact we told you

244
00:14:40,400 --> 00:14:42,650
that we can manage our antivirus but in

245
00:14:42,650 --> 00:14:44,540
fact we can manage Catholic you in tears

246
00:14:44,540 --> 00:14:47,120
and this is an open source solution for

247
00:14:47,120 --> 00:14:49,880
managing multiple antivirus on the same

248
00:14:49,880 --> 00:14:52,100
infrastructure so we centralized around

249
00:14:52,100 --> 00:14:56,180
from different antivirus in a open

250
00:14:56,180 --> 00:14:58,230
source solution and you can

251
00:14:58,230 --> 00:15:03,690
antabuse to a system thanks for the

252
00:15:03,690 --> 00:15:07,000
precision let's upload the speaker

253
00:15:07,000 --> 00:15:12,600
[Applause]

