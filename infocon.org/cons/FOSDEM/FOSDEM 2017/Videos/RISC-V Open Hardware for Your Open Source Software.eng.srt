1
00:00:00,030 --> 00:00:02,750
so

2
00:00:04,520 --> 00:00:08,450
our speaker is Aaron Thomas and he will

3
00:00:08,450 --> 00:00:13,580
talk to us about risk V I don't you have

4
00:00:13,580 --> 00:00:22,450
that floor yep okay good all right so uh

5
00:00:22,450 --> 00:00:25,099
Irene Thomas and I'll be talking about

6
00:00:25,099 --> 00:00:27,860
risk five open hardware for your open

7
00:00:27,860 --> 00:00:30,919
source software so how many of her how

8
00:00:30,919 --> 00:00:32,710
many of you have heard of brisk live

9
00:00:32,710 --> 00:00:35,450
that's a good number how many of you

10
00:00:35,450 --> 00:00:36,949
were aware that risk five is actually

11
00:00:36,949 --> 00:00:40,489
pronounced risk five and not risky it's

12
00:00:40,489 --> 00:00:42,739
actually pretty good okay all right how

13
00:00:42,739 --> 00:00:44,960
many of you have played with risk five

14
00:00:44,960 --> 00:00:47,359
Hardware either or emulated hardware

15
00:00:47,359 --> 00:00:50,480
um at all that's a few people and how

16
00:00:50,480 --> 00:00:52,070
many of you have read any of the risk

17
00:00:52,070 --> 00:00:54,800
five specifications well that's a good

18
00:00:54,800 --> 00:00:55,190
number

19
00:00:55,190 --> 00:00:56,809
okay so there's people who know things

20
00:00:56,809 --> 00:00:58,670
about was five in the audience that's

21
00:00:58,670 --> 00:01:01,879
cool so I'll give you a quick overview

22
00:01:01,879 --> 00:01:06,260
of my talk I'll give you a kind of a the

23
00:01:06,260 --> 00:01:07,700
goal is sort of to give you a tour of

24
00:01:07,700 --> 00:01:10,670
the risk five I say the instruction set

25
00:01:10,670 --> 00:01:11,570
where it came from

26
00:01:11,570 --> 00:01:13,280
kind of a quick overview and point you

27
00:01:13,280 --> 00:01:14,990
to the specifications and I'll talk

28
00:01:14,990 --> 00:01:16,610
about the ecosystem so the hardware and

29
00:01:16,610 --> 00:01:18,140
software the open source hardware and

30
00:01:18,140 --> 00:01:20,060
software they're available for risk five

31
00:01:20,060 --> 00:01:22,909
and my kind of all true ulterior motive

32
00:01:22,909 --> 00:01:24,920
and coming here is to kind of grow the

33
00:01:24,920 --> 00:01:26,420
risk five community so I'm hoping I can

34
00:01:26,420 --> 00:01:28,700
get you all interested in risk five and

35
00:01:28,700 --> 00:01:30,590
hopefully contributing to risk five and

36
00:01:30,590 --> 00:01:32,899
becoming a part of the community so the

37
00:01:32,899 --> 00:01:34,520
talk I'll start off with a little bit of

38
00:01:34,520 --> 00:01:36,680
a risk five 101 so a little bit of

39
00:01:36,680 --> 00:01:38,270
background on the ISA where it came from

40
00:01:38,270 --> 00:01:40,969
that kind of thing then I'll talk about

41
00:01:40,969 --> 00:01:42,409
the risk five Hardware landscape there's

42
00:01:42,409 --> 00:01:44,180
been a lot of kind of interesting

43
00:01:44,180 --> 00:01:46,670
developments in the risk v Hardware

44
00:01:46,670 --> 00:01:48,229
landscape we actually have risked five

45
00:01:48,229 --> 00:01:50,060
silicon that anyone can buy now which is

46
00:01:50,060 --> 00:01:52,310
pretty exciting and then there's a lot

47
00:01:52,310 --> 00:01:54,619
of open source SSC's and chips that are

48
00:01:54,619 --> 00:01:57,200
out there and there's been a lot of work

49
00:01:57,200 --> 00:01:59,090
in the software stack in the last six to

50
00:01:59,090 --> 00:02:03,340
twelve months a lot of open source

51
00:02:03,340 --> 00:02:05,240
projects have been ported to risk five

52
00:02:05,240 --> 00:02:08,929
and things have been upstream thanks so

53
00:02:08,929 --> 00:02:10,788
yeah so that's sort of the overview for

54
00:02:10,788 --> 00:02:13,059
the talk

55
00:02:16,010 --> 00:02:18,140
aha

56
00:02:18,140 --> 00:02:23,400
sure I will do that now sorry is that

57
00:02:23,400 --> 00:02:24,440
better

58
00:02:24,440 --> 00:02:30,420
is that okay alright okay okay

59
00:02:30,420 --> 00:02:31,800
so that's the overview of the talk you

60
00:02:31,800 --> 00:02:33,570
will back round and then talk about the

61
00:02:33,570 --> 00:02:36,480
hardware and software ecosystem so we'll

62
00:02:36,480 --> 00:02:39,570
start off we'll risk five 101 service

63
00:02:39,570 --> 00:02:41,460
five is an open instruction set

64
00:02:41,460 --> 00:02:43,890
specification it's an ISA so some of the

65
00:02:43,890 --> 00:02:45,540
other I say is that you may be familiar

66
00:02:45,540 --> 00:02:49,140
with their x86 arm power alpha MIPS

67
00:02:49,140 --> 00:02:52,440
so risk 5 unlike them is actually an

68
00:02:52,440 --> 00:02:55,680
open specification so you can build open

69
00:02:55,680 --> 00:02:57,330
source or proprietary risk 5

70
00:02:57,330 --> 00:02:59,400
implementations it's a completely up to

71
00:02:59,400 --> 00:03:01,350
D up to you it's an open standard and

72
00:03:01,350 --> 00:03:04,260
you can do what you want with it so if

73
00:03:04,260 --> 00:03:05,580
you tried to do this with one of the

74
00:03:05,580 --> 00:03:09,090
commercial is a such as arm or x86 you

75
00:03:09,090 --> 00:03:10,980
might get a friendly letter from one of

76
00:03:10,980 --> 00:03:14,450
their lawyers maybe not so friendly yeah

77
00:03:14,450 --> 00:03:17,370
so the nice thing about risk 5 being an

78
00:03:17,370 --> 00:03:19,110
open is a is that you don't have to pay

79
00:03:19,110 --> 00:03:20,970
any licensing fees you don't have to

80
00:03:20,970 --> 00:03:22,260
deal with any lengthy contract

81
00:03:22,260 --> 00:03:24,239
negotiations and you don't have to deal

82
00:03:24,239 --> 00:03:26,459
with lawyers which i think is a good

83
00:03:26,459 --> 00:03:29,330
thing as an engineer

84
00:03:32,090 --> 00:03:34,880
and so I mean the licensing fees are

85
00:03:34,880 --> 00:03:37,400
problems I mean if you're trying to

86
00:03:37,400 --> 00:03:39,950
build the really low-cost IOT device the

87
00:03:39,950 --> 00:03:42,130
licensing fees can add up to a

88
00:03:42,130 --> 00:03:45,020
substantial cost for your specific

89
00:03:45,020 --> 00:03:47,330
device contract negotiations can be

90
00:03:47,330 --> 00:03:48,740
lengthy it can take six to twelve months

91
00:03:48,740 --> 00:03:50,120
to come to a negotiation

92
00:03:50,120 --> 00:03:54,830
arm and other vendors and that can kind

93
00:03:54,830 --> 00:03:56,180
of kill you if you're a startup and

94
00:03:56,180 --> 00:03:57,650
you've got B C's breathing down your

95
00:03:57,650 --> 00:04:00,610
neck and yeah no lawyers so that's good

96
00:04:00,610 --> 00:04:02,630
so give you a kind of a quick overview

97
00:04:02,630 --> 00:04:04,970
verse five so respond has a very modest

98
00:04:04,970 --> 00:04:08,060
goal so and that goal is to become the

99
00:04:08,060 --> 00:04:10,640
standard is a for all computing devices

100
00:04:10,640 --> 00:04:12,709
so from microcontrollers to

101
00:04:12,709 --> 00:04:15,350
supercomputers accelerators basically

102
00:04:15,350 --> 00:04:16,940
any chip that you have in your iphone

103
00:04:16,940 --> 00:04:18,048
system-on-chip

104
00:04:18,048 --> 00:04:20,810
we want that to go from some sort of

105
00:04:20,810 --> 00:04:23,000
proprietary I say there's so many

106
00:04:23,000 --> 00:04:26,060
different proprietary ices to a single

107
00:04:26,060 --> 00:04:27,620
standardized saying that would be risk

108
00:04:27,620 --> 00:04:31,060
five and so yeah it's a modest goal and

109
00:04:31,060 --> 00:04:34,220
so risk vibes designed for our research

110
00:04:34,220 --> 00:04:36,890
education and commercial use and our

111
00:04:36,890 --> 00:04:38,270
research and education we're kind of the

112
00:04:38,270 --> 00:04:40,940
initial uses because this respect aim

113
00:04:40,940 --> 00:04:41,720
from the University of California

114
00:04:41,720 --> 00:04:43,250
Berkeley they were using it for research

115
00:04:43,250 --> 00:04:46,190
and education and it's also becoming

116
00:04:46,190 --> 00:04:48,860
more widely used in commercial sector

117
00:04:48,860 --> 00:04:50,120
people building products on risk five

118
00:04:50,120 --> 00:04:53,150
and if you go to the risk five workshops

119
00:04:53,150 --> 00:04:54,500
it's kind of interesting so I've been to

120
00:04:54,500 --> 00:04:57,050
all of the respect for shops and every

121
00:04:57,050 --> 00:04:58,460
workshop there's like more people using

122
00:04:58,460 --> 00:04:59,780
Grif subscribe there's more companies

123
00:04:59,780 --> 00:05:01,070
using risk but there's a lot of

124
00:05:01,070 --> 00:05:02,180
interesting research that people are

125
00:05:02,180 --> 00:05:04,550
doing with like security extensions and

126
00:05:04,550 --> 00:05:08,000
memory models and silicon photonics so

127
00:05:08,000 --> 00:05:09,620
there's a lot of interesting risk five

128
00:05:09,620 --> 00:05:11,540
stuff that's been happening because

129
00:05:11,540 --> 00:05:14,570
there's an open standard so you can

130
00:05:14,570 --> 00:05:17,000
blame these folks for responsible

131
00:05:17,000 --> 00:05:19,520
parties so Krista sana Fitch and David

132
00:05:19,520 --> 00:05:20,780
Patterson are professors at the

133
00:05:20,780 --> 00:05:23,330
University of California Berkeley David

134
00:05:23,330 --> 00:05:25,430
Patterson actually retired recently so I

135
00:05:25,430 --> 00:05:27,530
guess he's a professor emeritus and

136
00:05:27,530 --> 00:05:29,720
their students Andrew Waterman and Yun

137
00:05:29,720 --> 00:05:31,370
sub-layer sort of the inventors of a

138
00:05:31,370 --> 00:05:35,440
risk five and so the story goes that

139
00:05:35,440 --> 00:05:38,600
Krista and the berkeley architecture

140
00:05:38,600 --> 00:05:40,520
group they were beginning to search for

141
00:05:40,520 --> 00:05:43,610
a common is a for the research so the

142
00:05:43,610 --> 00:05:44,720
way berkeley works or at least a

143
00:05:44,720 --> 00:05:45,840
Berkeley architecture research

144
00:05:45,840 --> 00:05:47,669
group is every five years they form a

145
00:05:47,669 --> 00:05:49,470
new lab to tackle some new problem and

146
00:05:49,470 --> 00:05:51,030
so they were starting up this new lab

147
00:05:51,030 --> 00:05:52,470
and they had used a bunch of different

148
00:05:52,470 --> 00:05:54,570
ices over the years and they were like

149
00:05:54,570 --> 00:05:55,830
uh maybe you should we should start

150
00:05:55,830 --> 00:05:57,330
reevaluating what'd I say we want to use

151
00:05:57,330 --> 00:05:59,280
for this specific lab for the next five

152
00:05:59,280 --> 00:06:02,220
years or so and so the dominant is A's

153
00:06:02,220 --> 00:06:04,050
that are out there right now or x86 and

154
00:06:04,050 --> 00:06:05,880
arm and they have a number of problems

155
00:06:05,880 --> 00:06:08,520
if you're a researcher so one is that

156
00:06:08,520 --> 00:06:10,260
they're fairly complex is a is there's a

157
00:06:10,260 --> 00:06:11,850
lot of instructions if you've actually

158
00:06:11,850 --> 00:06:15,030
tried reading the Intel manuals or the

159
00:06:15,030 --> 00:06:16,500
our manuals they're they're pretty long

160
00:06:16,500 --> 00:06:19,770
there's a lot of stuff in there if you

161
00:06:19,770 --> 00:06:21,180
ever see Christos on official on the

162
00:06:21,180 --> 00:06:24,210
street you should ask him about x86 is a

163
00:06:24,210 --> 00:06:26,669
AAA instruction and see what a reaction

164
00:06:26,669 --> 00:06:30,690
you get so the the I saves are just

165
00:06:30,690 --> 00:06:33,889
generally too complex for research and

166
00:06:33,889 --> 00:06:36,780
so they decided against it and then you

167
00:06:36,780 --> 00:06:38,760
have the IP issues they're not open is

168
00:06:38,760 --> 00:06:41,160
A's if you try to take out an arm ship

169
00:06:41,160 --> 00:06:43,229
you're gonna get sued so it's not really

170
00:06:43,229 --> 00:06:45,389
ideal for researchers so then they

171
00:06:45,389 --> 00:06:47,220
embarked on so as a result they embarked

172
00:06:47,220 --> 00:06:48,479
on a three-month project to develop

173
00:06:48,479 --> 00:06:50,370
their own clean slate is a in summer

174
00:06:50,370 --> 00:06:53,669
2010 and they continue to work on it

175
00:06:53,669 --> 00:06:55,260
over the years and kind of refining the

176
00:06:55,260 --> 00:06:57,360
ISA as they take tap more chips and gain

177
00:06:57,360 --> 00:06:59,100
more experience and then four years

178
00:06:59,100 --> 00:07:00,870
later three months turned into four

179
00:07:00,870 --> 00:07:04,080
years they released the frozen our risk

180
00:07:04,080 --> 00:07:08,010
five user specification May 2014 and

181
00:07:08,010 --> 00:07:11,060
then as people became in companies

182
00:07:11,060 --> 00:07:13,289
academia and various people became more

183
00:07:13,289 --> 00:07:15,780
interested in risk five respite sort of

184
00:07:15,780 --> 00:07:18,090
moved outside of Berkeley and began part

185
00:07:18,090 --> 00:07:19,410
of the risk by foundation and the

186
00:07:19,410 --> 00:07:20,849
foundation was formed in August 2015

187
00:07:20,849 --> 00:07:24,960
it's a kind of care take the ISA on a

188
00:07:24,960 --> 00:07:27,270
personal note I actually designed an ISA

189
00:07:27,270 --> 00:07:29,700
myself I embarked on my own three-month

190
00:07:29,700 --> 00:07:31,380
project at code designed and is a for a

191
00:07:31,380 --> 00:07:34,440
an undergraduate a computer architecture

192
00:07:34,440 --> 00:07:37,020
course and it was not a particularly

193
00:07:37,020 --> 00:07:40,500
great is a risk five existed then I

194
00:07:40,500 --> 00:07:43,440
would have used it so yeah I think risk

195
00:07:43,440 --> 00:07:44,479
five would be a good thing for

196
00:07:44,479 --> 00:07:47,610
researchers and university lecturers

197
00:07:47,610 --> 00:07:50,789
everywhere so the risk apply Foundation

198
00:07:50,789 --> 00:07:53,160
which was recently founded it's a

199
00:07:53,160 --> 00:07:54,750
non-profit its mission is to standardize

200
00:07:54,750 --> 00:07:56,340
protect and promote the

201
00:07:56,340 --> 00:07:59,220
the free in open risk five instructions

202
00:07:59,220 --> 00:08:00,960
set architecture and also to help build

203
00:08:00,960 --> 00:08:02,630
up the hardware and software ecosystem

204
00:08:02,630 --> 00:08:06,270
for use in all computing devices and so

205
00:08:06,270 --> 00:08:08,480
and so the responder is a non-profit

206
00:08:08,480 --> 00:08:11,610
based in the US and it has over 50

207
00:08:11,610 --> 00:08:13,050
members and there's a lot more members

208
00:08:13,050 --> 00:08:14,490
that have been joining or interested in

209
00:08:14,490 --> 00:08:16,650
joining so we expect that to continue to

210
00:08:16,650 --> 00:08:18,960
grow and there's been broad commercial

211
00:08:18,960 --> 00:08:22,170
and academic interest so the last risk

212
00:08:22,170 --> 00:08:23,850
five workshop the fifth workshop sold

213
00:08:23,850 --> 00:08:26,280
out we had over 350 people and the

214
00:08:26,280 --> 00:08:27,600
attendance has been steadily going up

215
00:08:27,600 --> 00:08:31,560
and so that pulled from 107 companies

216
00:08:31,560 --> 00:08:33,450
and 29 universities so he's sort of a

217
00:08:33,450 --> 00:08:41,130
broad interest in risk 5 so some members

218
00:08:41,130 --> 00:08:42,720
of the risk 5 foundation so you have

219
00:08:42,720 --> 00:08:45,180
some fairly large companies so Berkeley

220
00:08:45,180 --> 00:08:46,500
of course is member of respect

221
00:08:46,500 --> 00:08:48,240
Foundation but big companies such as

222
00:08:48,240 --> 00:08:50,940
Google Hewlett Packard Enterprise Huawei

223
00:08:50,940 --> 00:08:53,760
IBM Mellanox micron micro semi a

224
00:08:53,760 --> 00:08:57,180
Microsoft Nvidia and XP Qualcomm sci-fi

225
00:08:57,180 --> 00:08:58,560
Western Digital you get the picture

226
00:08:58,560 --> 00:09:00,660
there's a lot of big companies that are

227
00:09:00,660 --> 00:09:02,090
interested in risk 5 and kind of

228
00:09:02,090 --> 00:09:05,640
evaluating risk 5 for their products and

229
00:09:05,640 --> 00:09:11,430
research other risk 5 members AMD eth

230
00:09:11,430 --> 00:09:15,000
zurich MIT low risk there's a lot of

231
00:09:15,000 --> 00:09:16,740
people who are interested in who are

232
00:09:16,740 --> 00:09:18,180
members of the risk alive foundation and

233
00:09:18,180 --> 00:09:20,580
it's and actually these slides are out

234
00:09:20,580 --> 00:09:22,020
of date a little bit there's been a few

235
00:09:22,020 --> 00:09:24,000
people have been added so it's the risk

236
00:09:24,000 --> 00:09:27,450
of foundation is doing pretty well so to

237
00:09:27,450 --> 00:09:30,120
go back to the the risk 5 is a so

238
00:09:30,120 --> 00:09:33,120
respite is the fifth risk risk is a from

239
00:09:33,120 --> 00:09:35,610
berkeley so the earlier risk research

240
00:09:35,610 --> 00:09:37,470
was done at Berkeley and Stanford in

241
00:09:37,470 --> 00:09:39,480
like the 80s and so they've done a

242
00:09:39,480 --> 00:09:41,130
number of risks chips over the years so

243
00:09:41,130 --> 00:09:43,080
this is the fifth risk i say from

244
00:09:43,080 --> 00:09:45,120
berkeley so it's was five so the roman

245
00:09:45,120 --> 00:09:49,110
numeral five or the and the nice thing

246
00:09:49,110 --> 00:09:51,240
about respite is the modular is a so

247
00:09:51,240 --> 00:09:53,370
it's a simple it has a simple base

248
00:09:53,370 --> 00:09:54,900
instruction set up it's fairly small and

249
00:09:54,900 --> 00:09:56,370
then you can layer extensions on top of

250
00:09:56,370 --> 00:09:58,910
it so as this base plus extension model

251
00:09:58,910 --> 00:10:02,490
and so there are 32-bit 64-bit and

252
00:10:02,490 --> 00:10:05,280
128-bit versions of the I say and yes I

253
00:10:05,280 --> 00:10:07,529
did say 128 bits

254
00:10:07,529 --> 00:10:08,939
data center people are interested in

255
00:10:08,939 --> 00:10:13,560
128-bit so the I say itself is the basis

256
00:10:13,560 --> 00:10:14,910
I say is fairly small there are fewer

257
00:10:14,910 --> 00:10:16,620
than 50 Hardware instructions in the

258
00:10:16,620 --> 00:10:18,750
base I say so this makes it feasible to

259
00:10:18,750 --> 00:10:20,579
implement microcontrollers and really

260
00:10:20,579 --> 00:10:23,100
small cores and as I mentioned it's

261
00:10:23,100 --> 00:10:25,050
designed for extension and customization

262
00:10:25,050 --> 00:10:27,089
so you take a risk 5 core and you

263
00:10:27,089 --> 00:10:28,620
basically can customize it to your

264
00:10:28,620 --> 00:10:31,529
application and this sort of comes from

265
00:10:31,529 --> 00:10:36,420
the base plus extension model so just

266
00:10:36,420 --> 00:10:39,300
kind of go over the base I say so there

267
00:10:39,300 --> 00:10:41,220
are different base in a dry stays for

268
00:10:41,220 --> 00:10:44,519
each word with so the the 32-bit risc 5

269
00:10:44,519 --> 00:10:46,230
instruction set the name the kind of

270
00:10:46,230 --> 00:10:48,870
naming scheme is RB 32 I and I stands

271
00:10:48,870 --> 00:10:52,350
for integer 64-bit is named RV 64 I and

272
00:10:52,350 --> 00:10:56,699
128-bit is RB 128 I so the way risk 5

273
00:10:56,699 --> 00:10:58,560
the kind of naming scheme is that they

274
00:10:58,560 --> 00:11:01,800
have these one letter one letter names

275
00:11:01,800 --> 00:11:03,449
for extension so I stands for integer

276
00:11:03,449 --> 00:11:05,220
and there are a number of other standard

277
00:11:05,220 --> 00:11:07,769
extensions so M stands for integer

278
00:11:07,769 --> 00:11:10,290
multiplied divided a stands for atomic

279
00:11:10,290 --> 00:11:13,139
memory operations F is the single

280
00:11:13,139 --> 00:11:15,899
precision floating point extension and D

281
00:11:15,899 --> 00:11:17,399
is the double precision floating point

282
00:11:17,399 --> 00:11:19,470
extension and so because all these

283
00:11:19,470 --> 00:11:22,529
extensions are fairly widely used and

284
00:11:22,529 --> 00:11:24,480
necessary for to boot up in general

285
00:11:24,480 --> 00:11:26,430
purpose operating system they're lumped

286
00:11:26,430 --> 00:11:29,160
into this G is a so this includes the

287
00:11:29,160 --> 00:11:32,370
integers your multiply divide atomic

288
00:11:32,370 --> 00:11:33,839
single and double precision floating

289
00:11:33,839 --> 00:11:36,329
point and this is the I say that you use

290
00:11:36,329 --> 00:11:37,860
if you want to proof Linux or BSD or

291
00:11:37,860 --> 00:11:41,189
something like that so in addition to

292
00:11:41,189 --> 00:11:42,600
the standard instruction sets you also

293
00:11:42,600 --> 00:11:45,449
have you can build your own non-standard

294
00:11:45,449 --> 00:11:47,639
extensions as well respite is designed

295
00:11:47,639 --> 00:11:50,399
for that so kind of the cool thing about

296
00:11:50,399 --> 00:11:52,199
the risk 5 is a is that it's small

297
00:11:52,199 --> 00:11:53,550
enough that you can actually fit it on a

298
00:11:53,550 --> 00:11:56,279
sheet of paper so this is a green card

299
00:11:56,279 --> 00:11:58,259
for the risk 5 I say it's not actually

300
00:11:58,259 --> 00:11:59,790
green but that's what they used to be

301
00:11:59,790 --> 00:12:02,430
called back in the day or so David

302
00:12:02,430 --> 00:12:05,220
Paterson tells me so the nice thing is

303
00:12:05,220 --> 00:12:08,700
that the base integer instruction set is

304
00:12:08,700 --> 00:12:10,530
you can list all the instructions in one

305
00:12:10,530 --> 00:12:13,020
copy in the left column you probably

306
00:12:13,020 --> 00:12:14,130
can't read them in the back but the

307
00:12:14,130 --> 00:12:15,600
wrists of five eyes say it looks kind of

308
00:12:15,600 --> 00:12:17,220
like a standard RISC instruction set

309
00:12:17,220 --> 00:12:18,780
you've got loads stores shifts

310
00:12:18,780 --> 00:12:21,150
arithmetic operations logical operations

311
00:12:21,150 --> 00:12:23,160
compares branches that sort of thing so

312
00:12:23,160 --> 00:12:25,290
it's pretty familiar if you've done any

313
00:12:25,290 --> 00:12:30,150
like any hacking on any like any risk is

314
00:12:30,150 --> 00:12:33,660
a in the past at the bottom you can see

315
00:12:33,660 --> 00:12:35,280
some of the instruction formats they're

316
00:12:35,280 --> 00:12:37,650
designed to be efficient for Hardware

317
00:12:37,650 --> 00:12:41,610
implementers the the rest of the sheet

318
00:12:41,610 --> 00:12:43,800
actually shows the the optional

319
00:12:43,800 --> 00:12:45,450
compressed extension so they have some

320
00:12:45,450 --> 00:12:48,360
extension for a like better code density

321
00:12:48,360 --> 00:12:51,180
and then the back of the sheet has some

322
00:12:51,180 --> 00:12:52,590
of the other standard extensions your

323
00:12:52,590 --> 00:12:54,750
multiply top makes and floating-point

324
00:12:54,750 --> 00:12:56,520
all this stuff and there's enough room

325
00:12:56,520 --> 00:12:58,110
to actually include the the risk 5

326
00:12:58,110 --> 00:13:00,330
calling conventions so it's a pretty

327
00:13:00,330 --> 00:13:04,710
kind of lean is a so you can look at the

328
00:13:04,710 --> 00:13:06,240
specs for the details you probably I'm

329
00:13:06,240 --> 00:13:07,710
sure you couldn't read that but the

330
00:13:07,710 --> 00:13:10,020
specs are online so you can check out

331
00:13:10,020 --> 00:13:11,730
the user level I say specification

332
00:13:11,730 --> 00:13:14,520
version 2.1 to find out the details of

333
00:13:14,520 --> 00:13:16,860
what the instructions look like what do

334
00:13:16,860 --> 00:13:18,180
branches look like that sort of thing

335
00:13:18,180 --> 00:13:19,680
which in loads and stories look like

336
00:13:19,680 --> 00:13:21,090
what kind of arithmetic operations are

337
00:13:21,090 --> 00:13:23,100
available the privilege I say

338
00:13:23,100 --> 00:13:25,440
specification is in version 1.9 point

339
00:13:25,440 --> 00:13:27,630
one so the privilege I say is actually

340
00:13:27,630 --> 00:13:29,280
this is the kind of interface that the

341
00:13:29,280 --> 00:13:32,100
OS and firmer uses this is actually in

342
00:13:32,100 --> 00:13:34,950
development so version one point ten

343
00:13:34,950 --> 00:13:38,130
will be released soon and if you want to

344
00:13:38,130 --> 00:13:40,020
look at these specification sources if

345
00:13:40,020 --> 00:13:41,520
you want to look at the actual law check

346
00:13:41,520 --> 00:13:43,470
sources for these specifications you can

347
00:13:43,470 --> 00:13:44,730
actually find that won't get help as

348
00:13:44,730 --> 00:13:48,500
well because it's an open standard so

349
00:13:48,500 --> 00:13:50,580
now that we talked about the ISA as a

350
00:13:50,580 --> 00:13:51,750
whole I'm gonna talk about the risk by

351
00:13:51,750 --> 00:13:54,030
Hardware landscape some of the open

352
00:13:54,030 --> 00:13:56,420
source SSDs and cores that are available

353
00:13:56,420 --> 00:14:00,570
so there's a lot of risk five cores and

354
00:14:00,570 --> 00:14:02,850
SSDs and they're designed for many

355
00:14:02,850 --> 00:14:05,610
different use cases so some of the main

356
00:14:05,610 --> 00:14:07,470
use cases are education research and

357
00:14:07,470 --> 00:14:09,600
commercial products and we'll see some

358
00:14:09,600 --> 00:14:12,570
examples here and so you have cores that

359
00:14:12,570 --> 00:14:14,540
are really designed for small low-cost

360
00:14:14,540 --> 00:14:16,890
microcontrollers and you also have like

361
00:14:16,890 --> 00:14:18,690
high performance like multi-core chips

362
00:14:18,690 --> 00:14:19,720
as well

363
00:14:19,720 --> 00:14:21,819
you'll see more of this over time risk

364
00:14:21,819 --> 00:14:24,040
live is still fairly new and you see a

365
00:14:24,040 --> 00:14:25,720
lot more you see a lot of cores popping

366
00:14:25,720 --> 00:14:27,339
up and a lot more people developing risk

367
00:14:27,339 --> 00:14:31,410
5 now than you did even a year ago and

368
00:14:31,410 --> 00:14:33,579
these cores are written in a variety of

369
00:14:33,579 --> 00:14:35,529
hardware description languages or HDLs

370
00:14:35,529 --> 00:14:38,170
so the ones you've probably heard of or

371
00:14:38,170 --> 00:14:40,089
VHDL and Verilog and so there are with

372
00:14:40,089 --> 00:14:41,529
SWAT cores many of them that are written

373
00:14:41,529 --> 00:14:43,810
via shell bear log some other languages

374
00:14:43,810 --> 00:14:44,980
that you may not have heard of or a

375
00:14:44,980 --> 00:14:46,990
chisel and blue spec system bear log and

376
00:14:46,990 --> 00:14:49,180
so these are newer HDLs that are a bit

377
00:14:49,180 --> 00:14:51,550
higher level and in some ways a bit more

378
00:14:51,550 --> 00:14:55,060
productive so the some of the Berkeley

379
00:14:55,060 --> 00:14:56,259
cores the Berkeley core is actually

380
00:14:56,259 --> 00:14:57,639
written in the chisel hardware

381
00:14:57,639 --> 00:15:00,639
description language so I'll quickly

382
00:15:00,639 --> 00:15:02,920
talk about UC Berkeley in size 5 in the

383
00:15:02,920 --> 00:15:05,410
relationship there just because a lot of

384
00:15:05,410 --> 00:15:06,879
the cores that I'll be talking about

385
00:15:06,879 --> 00:15:10,810
originate at Berkeley and sy5 so via the

386
00:15:10,810 --> 00:15:12,819
Berkeley architecture group you see bees

387
00:15:12,819 --> 00:15:15,339
bar group created risk 5 so this is

388
00:15:15,339 --> 00:15:17,139
Krista sana vich and David Patterson's

389
00:15:17,139 --> 00:15:19,629
group as they were developing risk 5

390
00:15:19,629 --> 00:15:20,889
they also developed a number of open

391
00:15:20,889 --> 00:15:23,529
source ports and ssese for research and

392
00:15:23,529 --> 00:15:27,160
teaching and eventually the the risk 5

393
00:15:27,160 --> 00:15:29,079
so that the graduate students Andrew

394
00:15:29,079 --> 00:15:31,449
Waterman young simply like graduated and

395
00:15:31,449 --> 00:15:33,550
they wanted something to do so they

396
00:15:33,550 --> 00:15:35,379
decided hey this respite thing's kind of

397
00:15:35,379 --> 00:15:36,819
cool and so they decided to found a

398
00:15:36,819 --> 00:15:38,860
company called Sai 5 with a Cristo

399
00:15:38,860 --> 00:15:42,490
sandwich and the they basically designed

400
00:15:42,490 --> 00:15:44,379
custom risk 5 chips for customers and

401
00:15:44,379 --> 00:15:46,089
they're building on their open source

402
00:15:46,089 --> 00:15:48,790
course to do that so it's a kind of cool

403
00:15:48,790 --> 00:15:50,620
that they're actually kind of their

404
00:15:50,620 --> 00:15:52,209
company that's doing open source stuff

405
00:15:52,209 --> 00:15:54,550
and they continue to contribute back to

406
00:15:54,550 --> 00:15:56,980
the the cores that they've built at

407
00:15:56,980 --> 00:16:00,339
Berkeley so some of the Berkeley

408
00:16:00,339 --> 00:16:03,069
hardware that's out there so for the

409
00:16:03,069 --> 00:16:04,930
system-on-chip there's the rocket ship

410
00:16:04,930 --> 00:16:08,110
and it's a parameterised risk 5 SOC

411
00:16:08,110 --> 00:16:10,779
generator because it's parameterised you

412
00:16:10,779 --> 00:16:12,879
can tweak the different nah there's a

413
00:16:12,879 --> 00:16:14,649
number of knobs as you can tweak so you

414
00:16:14,649 --> 00:16:16,480
can tweak the the cache hierarchy the

415
00:16:16,480 --> 00:16:19,540
number of cores the TLB saw is what

416
00:16:19,540 --> 00:16:20,680
there's a floating-point unit or whether

417
00:16:20,680 --> 00:16:22,180
there's an and it makes it really easy

418
00:16:22,180 --> 00:16:23,769
you basically go in a config file and

419
00:16:23,769 --> 00:16:26,980
you can tweak the core to your needs in

420
00:16:26,980 --> 00:16:29,230
addition to the system-on-chip there a

421
00:16:29,230 --> 00:16:30,880
number of cores you can choose from so

422
00:16:30,880 --> 00:16:32,050
the rocket core is kind of the standard

423
00:16:32,050 --> 00:16:33,190
core that many people

424
00:16:33,190 --> 00:16:36,069
it's a five-stage pipeline single-issue

425
00:16:36,069 --> 00:16:37,720
there's also boom which is an

426
00:16:37,720 --> 00:16:38,889
out-of-order core it's a research

427
00:16:38,889 --> 00:16:41,529
project by Chris Celia at Berkeley and

428
00:16:41,529 --> 00:16:42,850
it's actually pretty cool that you can

429
00:16:42,850 --> 00:16:44,980
study the source code of an out-of-order

430
00:16:44,980 --> 00:16:46,839
core there aren't that many out there

431
00:16:46,839 --> 00:16:49,540
for you for people to study Berkeley

432
00:16:49,540 --> 00:16:51,279
also has a set of educational core is

433
00:16:51,279 --> 00:16:55,240
called Sodor they're one stage all the

434
00:16:55,240 --> 00:16:57,519
way to five stage and they're designed

435
00:16:57,519 --> 00:16:58,629
for simplicity's that people can

436
00:16:58,629 --> 00:17:01,079
understand them in a university courses

437
00:17:01,079 --> 00:17:03,459
and you can find all the code on github

438
00:17:03,459 --> 00:17:07,599
which is pretty cool so quick note about

439
00:17:07,599 --> 00:17:09,699
the rocket ship as to see generator so

440
00:17:09,699 --> 00:17:12,150
as I mentioned this is a parameterised

441
00:17:12,150 --> 00:17:15,339
it's a parameterised SSE generator and

442
00:17:15,339 --> 00:17:18,630
it's written in this chisel HDL and so

443
00:17:18,630 --> 00:17:21,280
chisel is this new hardware description

444
00:17:21,280 --> 00:17:22,539
language from Berkeley that's an

445
00:17:22,539 --> 00:17:25,900
embedded Scala DSL and so Berkeley uses

446
00:17:25,900 --> 00:17:28,299
a sci-fi uses for all of their cores and

447
00:17:28,299 --> 00:17:31,659
so by using the the rocket generator and

448
00:17:31,659 --> 00:17:32,679
chisel you're able to target a few

449
00:17:32,679 --> 00:17:34,720
different backends so you can target a

450
00:17:34,720 --> 00:17:36,250
C++ software simulator which is

451
00:17:36,250 --> 00:17:39,309
basically an executable that simulates

452
00:17:39,309 --> 00:17:42,250
your your risk 5 core you can target an

453
00:17:42,250 --> 00:17:44,500
FPGA by targeting the FPGA Chul's for

454
00:17:44,500 --> 00:17:49,630
instance your Xilinx Dowling's tools or

455
00:17:49,630 --> 00:17:51,490
you can do it you can a target some of

456
00:17:51,490 --> 00:17:54,250
the ASIC tools like synopsis or or

457
00:17:54,250 --> 00:17:57,520
cadence and so the nice thing about the

458
00:17:57,520 --> 00:17:59,110
rocketship has to see generator is

459
00:17:59,110 --> 00:18:00,549
because it's parameterize is designed

460
00:18:00,549 --> 00:18:02,470
for customization you can use this as a

461
00:18:02,470 --> 00:18:04,510
basis for your SOC it's all open source

462
00:18:04,510 --> 00:18:06,100
and you can tailor it to your

463
00:18:06,100 --> 00:18:10,630
application so as I mentioned you can

464
00:18:10,630 --> 00:18:14,890
either target F P J's or actual real

465
00:18:14,890 --> 00:18:18,039
hardware and so sci-fi has been doing

466
00:18:18,039 --> 00:18:19,289
this and they've been building on the

467
00:18:19,289 --> 00:18:21,490
rocket core and the rocket ship SSE

468
00:18:21,490 --> 00:18:23,919
generator so they have two platforms now

469
00:18:23,919 --> 00:18:26,500
the freedom everywhere which is their

470
00:18:26,500 --> 00:18:29,409
low-cost 32-bit microcontroller products

471
00:18:29,409 --> 00:18:31,030
and they have the freedom Unleashed

472
00:18:31,030 --> 00:18:33,120
which is the high performance 64-bit

473
00:18:33,120 --> 00:18:36,309
multi-core SOC so this is kind of the

474
00:18:36,309 --> 00:18:38,049
the freedom everywhere will run you're

475
00:18:38,049 --> 00:18:39,010
kind of like real-time embedded

476
00:18:39,010 --> 00:18:40,720
operating systems and the freedom

477
00:18:40,720 --> 00:18:42,640
Unleashed will run Linux BSD that sort

478
00:18:42,640 --> 00:18:45,490
of thing and you can find their code

479
00:18:45,490 --> 00:18:48,340
get up as well and so here's the cool

480
00:18:48,340 --> 00:18:51,100
hardware so sy5 has these FPGA

481
00:18:51,100 --> 00:18:53,650
development kits and so the RT board

482
00:18:53,650 --> 00:18:55,480
which is about a hundred on the Left is

483
00:18:55,480 --> 00:18:58,360
about a hundred dollars us and you can

484
00:18:58,360 --> 00:19:00,640
you can use that to emulate the freedom

485
00:19:00,640 --> 00:19:01,960
everywhere so the microcontroller class

486
00:19:01,960 --> 00:19:03,730
and so they have a little display hooked

487
00:19:03,730 --> 00:19:05,710
up on the right

488
00:19:05,710 --> 00:19:08,920
it's Xilinx VC 707 and it's emulating

489
00:19:08,920 --> 00:19:10,510
the freedom unleashed so this is the

490
00:19:10,510 --> 00:19:12,460
like the general purpose core that runs

491
00:19:12,460 --> 00:19:14,920
Linux and so the cool thing that you can

492
00:19:14,920 --> 00:19:15,970
probably see is that they're running

493
00:19:15,970 --> 00:19:17,590
doom and they actually did this demo at

494
00:19:17,590 --> 00:19:19,809
the last prescribed workshop and so it's

495
00:19:19,809 --> 00:19:21,130
kind of cool that you can run doom on a

496
00:19:21,130 --> 00:19:23,530
risk 5 hardware it was kind of a pretty

497
00:19:23,530 --> 00:19:26,830
cool demo so resides kind of making

498
00:19:26,830 --> 00:19:27,570
progress

499
00:19:27,570 --> 00:19:30,970
so FPGA is our cool I really like FPGA

500
00:19:30,970 --> 00:19:33,190
is but even more exciting is that

501
00:19:33,190 --> 00:19:36,220
there's actually bris 5 silicon now so

502
00:19:36,220 --> 00:19:37,929
the high five one board is the first

503
00:19:37,929 --> 00:19:40,570
generally available open source risk 5

504
00:19:40,570 --> 00:19:43,570
silicon you there were people who

505
00:19:43,570 --> 00:19:45,130
addressed by silicon but basically they

506
00:19:45,130 --> 00:19:47,470
fabricated themselves so you either had

507
00:19:47,470 --> 00:19:49,030
to basically fabricate your own risk LED

508
00:19:49,030 --> 00:19:50,830
chip or have a borrow one from a friend

509
00:19:50,830 --> 00:19:52,960
but now you can just go and crowd supply

510
00:19:52,960 --> 00:19:56,380
and buy one for yourself so the high

511
00:19:56,380 --> 00:19:59,170
five one has the freedom everywhere 3 10

512
00:19:59,170 --> 00:20:01,900
SOC so there's the microcontroller core

513
00:20:01,900 --> 00:20:04,600
it's Arduino compatible and it supports

514
00:20:04,600 --> 00:20:07,540
the Arduino IDE and it's about $59 us

515
00:20:07,540 --> 00:20:10,480
from Cod supply and a sigh v was kind

516
00:20:10,480 --> 00:20:13,600
enough to donate three boards so I will

517
00:20:13,600 --> 00:20:16,210
be giving three boards away at the end

518
00:20:16,210 --> 00:20:19,390
of the talk for people to play with and

519
00:20:19,390 --> 00:20:21,040
hopefully port some more open-source

520
00:20:21,040 --> 00:20:24,750
software and just do that kind of thing

521
00:20:24,750 --> 00:20:28,090
so the ISO the chip and the freedom

522
00:20:28,090 --> 00:20:30,910
everywhere the freedom everywhere 310

523
00:20:30,910 --> 00:20:33,280
the chip in the high five one is open

524
00:20:33,280 --> 00:20:36,490
source so all the RTL source code FPGA

525
00:20:36,490 --> 00:20:38,740
scripts board support packages are all

526
00:20:38,740 --> 00:20:40,120
in github and you can find the

527
00:20:40,120 --> 00:20:41,590
documentation board schematics there as

528
00:20:41,590 --> 00:20:44,429
well so that's actually pretty cool

529
00:20:44,429 --> 00:20:46,510
another interesting project

530
00:20:46,510 --> 00:20:49,330
another interesting SOC risk 5s to see

531
00:20:49,330 --> 00:20:51,550
is the low risk project and some of you

532
00:20:51,550 --> 00:20:54,190
may have seen the talk two years ago

533
00:20:54,190 --> 00:20:56,290
here at Boston that Alex Bradbury gave

534
00:20:56,290 --> 00:20:57,220
about low risk

535
00:20:57,220 --> 00:20:59,409
solo risk is based at the University of

536
00:20:59,409 --> 00:21:01,270
Cambridge and they're aiming to build a

537
00:21:01,270 --> 00:21:04,059
really low cost development board there

538
00:21:04,059 --> 00:21:06,460
there the tagline is raspberry pie for

539
00:21:06,460 --> 00:21:14,409
grownups and it's so it was actually

540
00:21:14,409 --> 00:21:16,000
founded by one of the founders of

541
00:21:16,000 --> 00:21:17,980
raspberry pie so they basically want to

542
00:21:17,980 --> 00:21:19,929
create a completely open version of the

543
00:21:19,929 --> 00:21:21,370
raspberry pie so that's actually I think

544
00:21:21,370 --> 00:21:23,620
pretty cool and it also built on the

545
00:21:23,620 --> 00:21:25,419
rocketship SSC generator from Berkeley

546
00:21:25,419 --> 00:21:27,250
and sy5 and they're doing some

547
00:21:27,250 --> 00:21:29,320
interesting research things with tagged

548
00:21:29,320 --> 00:21:32,230
architectures for security and a minyan

549
00:21:32,230 --> 00:21:34,600
course for i/o offload and they have a

550
00:21:34,600 --> 00:21:36,850
couple tech notes about this and I think

551
00:21:36,850 --> 00:21:39,640
they're doing some pretty cool stuff and

552
00:21:39,640 --> 00:21:40,480
yeah you should definitely check out

553
00:21:40,480 --> 00:21:43,659
Alex Bradbury's a 5 7 2015 talk and just

554
00:21:43,659 --> 00:21:45,340
follow their progress in general because

555
00:21:45,340 --> 00:21:47,890
they're doing interesting things and

556
00:21:47,890 --> 00:21:49,679
their code is also available on github

557
00:21:49,679 --> 00:21:54,340
so the Shakti cores from IIT Madras are

558
00:21:54,340 --> 00:21:57,700
another set of wrist 5s SES so risk 5

559
00:21:57,700 --> 00:21:59,350
apparently is the standard is a for

560
00:21:59,350 --> 00:22:03,220
India which is kind of cool and so as a

561
00:22:03,220 --> 00:22:05,559
result IT is building six open-source

562
00:22:05,559 --> 00:22:07,630
cores and they're like literally going

563
00:22:07,630 --> 00:22:09,159
from my country micro controllers to

564
00:22:09,159 --> 00:22:11,500
supercomputers and so there's a lot of

565
00:22:11,500 --> 00:22:13,480
people building a lot of risk 5 hardware

566
00:22:13,480 --> 00:22:16,090
there which is pretty cool and they're

567
00:22:16,090 --> 00:22:17,980
using blue speck system Beryl log is

568
00:22:17,980 --> 00:22:21,460
their HDL of a choice and you can find

569
00:22:21,460 --> 00:22:25,750
their code on bitbucket not github and

570
00:22:25,750 --> 00:22:27,700
so some other response of seasoned cores

571
00:22:27,700 --> 00:22:28,240
that are available

572
00:22:28,240 --> 00:22:30,520
there's Pokeno from the ETH Zurich

573
00:22:30,520 --> 00:22:33,880
there's picot RB 32 from a cliff wolf

574
00:22:33,880 --> 00:22:36,580
and this is meant to be a really sized

575
00:22:36,580 --> 00:22:39,220
optimized risk 5 implementation 32-bit

576
00:22:39,220 --> 00:22:40,990
respond implementation and there are a

577
00:22:40,990 --> 00:22:42,909
lot of other commercial and open source

578
00:22:42,909 --> 00:22:44,470
base 5 cores that are out there like too

579
00:22:44,470 --> 00:22:46,090
many to name it seems like there's a new

580
00:22:46,090 --> 00:22:48,700
verse 5 core popping up every day I mean

581
00:22:48,700 --> 00:22:50,110
there's a lot of people who are just

582
00:22:50,110 --> 00:22:51,820
kind of trying to build their own wrist

583
00:22:51,820 --> 00:22:52,900
5-quart which i think it's pretty cool

584
00:22:52,900 --> 00:22:54,820
because it applies an open standard if

585
00:22:54,820 --> 00:22:56,650
you're a hacker you can just go and

586
00:22:56,650 --> 00:22:57,880
build your own core which is I think

587
00:22:57,880 --> 00:23:00,460
pretty

588
00:23:00,460 --> 00:23:02,440
so if you want to customize risk five I

589
00:23:02,440 --> 00:23:03,610
mean the nice thing about risk five is

590
00:23:03,610 --> 00:23:05,290
is designed for customization the

591
00:23:05,290 --> 00:23:06,760
easiest way to do it is to modify the

592
00:23:06,760 --> 00:23:08,590
the tunable parameters of an existing

593
00:23:08,590 --> 00:23:10,240
core so basically you'll just grab the

594
00:23:10,240 --> 00:23:12,100
rocket ship and then play with some of

595
00:23:12,100 --> 00:23:13,000
the parameters disable the

596
00:23:13,000 --> 00:23:14,530
floating-point unit mess with the cache

597
00:23:14,530 --> 00:23:17,200
hierarchy etc you can implement your own

598
00:23:17,200 --> 00:23:19,900
risk five accelerator you can implement

599
00:23:19,900 --> 00:23:21,310
your own risk five instruction set

600
00:23:21,310 --> 00:23:23,680
extensions if you chapter nine if the

601
00:23:23,680 --> 00:23:25,180
user specification has some information

602
00:23:25,180 --> 00:23:26,740
on this and if you think it's useful

603
00:23:26,740 --> 00:23:29,020
enough for if you think might be useful

604
00:23:29,020 --> 00:23:30,550
to other people you can submit it for

605
00:23:30,550 --> 00:23:34,300
Standardization and if you have a lot of

606
00:23:34,300 --> 00:23:35,200
time in your hands you can implement

607
00:23:35,200 --> 00:23:38,620
your own risk five core so yeah there's

608
00:23:38,620 --> 00:23:39,700
been a lot of interesting stuff

609
00:23:39,700 --> 00:23:42,070
happening on the hardware landscape so

610
00:23:42,070 --> 00:23:43,810
on the software landscape in the last

611
00:23:43,810 --> 00:23:45,280
six to twelve months has been a lot of

612
00:23:45,280 --> 00:23:49,000
stuff happening as well so just to kind

613
00:23:49,000 --> 00:23:50,530
of give you an idea of what development

614
00:23:50,530 --> 00:23:52,420
platforms are available so if you don't

615
00:23:52,420 --> 00:23:54,340
actually have FPGAs and you don't have

616
00:23:54,340 --> 00:23:55,960
risk five hardware you can use a risk

617
00:23:55,960 --> 00:23:58,480
pot emulator so spike is kind of the

618
00:23:58,480 --> 00:24:00,760
standard risk five simulator so it's

619
00:24:00,760 --> 00:24:02,590
called it's also called risks five Isis

620
00:24:02,590 --> 00:24:04,690
sim it's kind of the golden model so

621
00:24:04,690 --> 00:24:07,090
every time a specification update is

622
00:24:07,090 --> 00:24:10,540
released the change is going to spike in

623
00:24:10,540 --> 00:24:12,940
addition to spike there's also qmu which

624
00:24:12,940 --> 00:24:15,610
many of you are familiar with so the Q

625
00:24:15,610 --> 00:24:17,830
mu has risk five support but it's not

626
00:24:17,830 --> 00:24:20,140
upstream yet but it sports we have

627
00:24:20,140 --> 00:24:21,610
support the full system and user

628
00:24:21,610 --> 00:24:24,670
emulation so this is actually pretty

629
00:24:24,670 --> 00:24:25,180
cool

630
00:24:25,180 --> 00:24:27,820
so there's another simulator called risk

631
00:24:27,820 --> 00:24:31,750
v mu built by Fabrice Pilar and you can

632
00:24:31,750 --> 00:24:33,640
boot risk five Linux in your browser

633
00:24:33,640 --> 00:24:37,090
which is I think pretty cool you should

634
00:24:37,090 --> 00:24:39,160
all go do that now and see if you can

635
00:24:39,160 --> 00:24:42,430
crash don't do that now but it's it's

636
00:24:42,430 --> 00:24:44,620
pretty cool so it was kind of funny so

637
00:24:44,620 --> 00:24:45,760
for Reese Pollard is one of these guys

638
00:24:45,760 --> 00:24:47,680
who's just like I'm just super

639
00:24:47,680 --> 00:24:49,240
productive so I get an email from him

640
00:24:49,240 --> 00:24:51,340
and he's just like oh yeah so I built

641
00:24:51,340 --> 00:24:52,720
this small project let's respond

642
00:24:52,720 --> 00:24:54,640
emulator it does it boots Linux in the

643
00:24:54,640 --> 00:24:57,280
browser it has 128 bit support and some

644
00:24:57,280 --> 00:24:59,140
other stuff and even spike doesn't have

645
00:24:59,140 --> 00:25:01,570
128 bit support so he like I don't know

646
00:25:01,570 --> 00:25:02,800
he's just I didn't even know he's aware

647
00:25:02,800 --> 00:25:04,270
first five so it was pretty cool when he

648
00:25:04,270 --> 00:25:05,620
was just like yeah I got this little

649
00:25:05,620 --> 00:25:07,150
project as well does all these things

650
00:25:07,150 --> 00:25:10,360
he's just uh he's an impressive guy so

651
00:25:10,360 --> 00:25:12,700
yeah respite VM use worth checking out

652
00:25:12,700 --> 00:25:14,760
and then we also have an in-progress

653
00:25:14,760 --> 00:25:17,650
port of gem 5 which is a full system

654
00:25:17,650 --> 00:25:19,450
samuel simulator that's used by computer

655
00:25:19,450 --> 00:25:21,100
architecture researchers and hopefully

656
00:25:21,100 --> 00:25:22,960
we can get that kind of up streamed and

657
00:25:22,960 --> 00:25:26,980
kind of farther along so a quick note on

658
00:25:26,980 --> 00:25:29,530
spike in queue Mew so spike is a great

659
00:25:29,530 --> 00:25:31,690
for prototyping hardware features I use

660
00:25:31,690 --> 00:25:33,070
it a fair amount I mean the nice thing

661
00:25:33,070 --> 00:25:35,020
about it is it has a really small and

662
00:25:35,020 --> 00:25:36,700
simple code base and it makes really sit

663
00:25:36,700 --> 00:25:38,950
really easy to add instructions and

664
00:25:38,950 --> 00:25:41,200
customize the I say and everything but

665
00:25:41,200 --> 00:25:42,910
if you're doing software work I think Q

666
00:25:42,910 --> 00:25:44,260
is probably a better option

667
00:25:44,260 --> 00:25:46,180
the emulations faster it's got a number

668
00:25:46,180 --> 00:25:47,800
of handy debugging features it's got

669
00:25:47,800 --> 00:25:50,860
better device support there are a few

670
00:25:50,860 --> 00:25:52,900
rough edges in cumulus 5 now especially

671
00:25:52,900 --> 00:25:54,670
with respect to device support but we'll

672
00:25:54,670 --> 00:25:56,530
be honoring it well we hope to iron them

673
00:25:56,530 --> 00:26:00,070
out fairly soon so yeah but both are

674
00:26:00,070 --> 00:26:03,490
good emulators with respects to respond

675
00:26:03,490 --> 00:26:04,930
tool chain there's been a lot of

676
00:26:04,930 --> 00:26:07,060
progress so I'm excited to report that

677
00:26:07,060 --> 00:26:10,000
risk 5 support will be in binutils 2.28

678
00:26:10,000 --> 00:26:13,510
and the GCC steering committee has

679
00:26:13,510 --> 00:26:16,300
accepted the risk 5 port for inclusion

680
00:26:16,300 --> 00:26:18,760
so the port will likely make it into 7

681
00:26:18,760 --> 00:26:22,000
GCC 7.1 so this is due to a lot of hard

682
00:26:22,000 --> 00:26:23,950
work by Andrew Waterman and Palmer da

683
00:26:23,950 --> 00:26:26,230
belt and thanks to all the other GCC

684
00:26:26,230 --> 00:26:28,240
maintainer reviewers for June patches

685
00:26:28,240 --> 00:26:30,580
and making this happen and so I think

686
00:26:30,580 --> 00:26:32,110
once now that we have the tool chain

687
00:26:32,110 --> 00:26:35,170
stuff I think Linux distros and more of

688
00:26:35,170 --> 00:26:36,490
the kind of software enablement stuff

689
00:26:36,490 --> 00:26:39,070
will sort of just fall out the lack of

690
00:26:39,070 --> 00:26:40,510
an upstream tool chain I think really

691
00:26:40,510 --> 00:26:42,970
kind of was kind of slowing down

692
00:26:42,970 --> 00:26:44,560
somebody off to software efforts so now

693
00:26:44,560 --> 00:26:45,880
that we have upstream tool chains

694
00:26:45,880 --> 00:26:48,070
I think the software enablement stuff

695
00:26:48,070 --> 00:26:51,250
will go a lot faster in addition there's

696
00:26:51,250 --> 00:26:53,410
an LV important progress some of the

697
00:26:53,410 --> 00:26:56,080
patches are upstream Alex Bradbury from

698
00:26:56,080 --> 00:26:57,450
the low risk projects working on this

699
00:26:57,450 --> 00:27:00,280
their number of he's working on code gen

700
00:27:00,280 --> 00:27:01,720
patches they should go out in the next

701
00:27:01,720 --> 00:27:04,000
week or two his goal is to basically

702
00:27:04,000 --> 00:27:07,300
make this the cleanest back-end and he

703
00:27:07,300 --> 00:27:09,490
wants the risk 5 port to be the kind of

704
00:27:09,490 --> 00:27:11,170
exemplar for all the other architectures

705
00:27:11,170 --> 00:27:12,280
that come after it so he's building a

706
00:27:12,280 --> 00:27:14,110
really clean port and so as real it's

707
00:27:14,110 --> 00:27:15,370
taking a little bit longer but I think

708
00:27:15,370 --> 00:27:16,840
it's it's gonna be exciting when it's

709
00:27:16,840 --> 00:27:17,260
done

710
00:27:17,260 --> 00:27:18,430
there's a lot of people who want to have

711
00:27:18,430 --> 00:27:23,110
LVM risk 5 so we have a lot of risk 500s

712
00:27:23,110 --> 00:27:24,880
and firmware ports and progress they're

713
00:27:24,880 --> 00:27:25,340
all in

714
00:27:25,340 --> 00:27:27,590
stages some are more mature some are

715
00:27:27,590 --> 00:27:32,750
fairly early so in terms of firmware the

716
00:27:32,750 --> 00:27:34,220
kind of standard form were right now is

717
00:27:34,220 --> 00:27:35,540
there's this berkeley bootloader which

718
00:27:35,540 --> 00:27:38,330
is kind of an initial firmware but

719
00:27:38,330 --> 00:27:40,850
people are working on core boot and UEFI

720
00:27:40,850 --> 00:27:42,800
supports so that's coming online for

721
00:27:42,800 --> 00:27:45,290
linux there are ports and progress for

722
00:27:45,290 --> 00:27:49,010
fedora debian gentoo and yak Joe pokey

723
00:27:49,010 --> 00:27:51,710
so if Fedora has about like two thousand

724
00:27:51,710 --> 00:27:54,170
packages building it's a little out of

725
00:27:54,170 --> 00:27:56,660
date Debian has a little over a thousand

726
00:27:56,660 --> 00:27:58,250
packages manuel's in the audience

727
00:27:58,250 --> 00:27:59,590
somewhere you can talk to him about

728
00:27:59,590 --> 00:28:02,660
Debian yeah so if you want to talk more

729
00:28:02,660 --> 00:28:03,890
about Debian risk 5 you should talk to

730
00:28:03,890 --> 00:28:05,930
him because it'd be great to get more

731
00:28:05,930 --> 00:28:07,940
people working on that there's a Gentoo

732
00:28:07,940 --> 00:28:09,680
port it's a little out of date but a

733
00:28:09,680 --> 00:28:11,540
polymer will update it as soon as this

734
00:28:11,540 --> 00:28:14,210
stuff goes upstream the pokey

735
00:28:14,210 --> 00:28:15,590
distribution which is an embedded

736
00:28:15,590 --> 00:28:17,270
distribution has been updated recently

737
00:28:17,270 --> 00:28:19,700
and it's actually a reasonable platform

738
00:28:19,700 --> 00:28:22,370
if you want to do risk 5 hacking hope

739
00:28:22,370 --> 00:28:23,840
it's not upstream yet we'll have to

740
00:28:23,840 --> 00:28:25,070
start pushing that stuff upstream as

741
00:28:25,070 --> 00:28:29,090
well if you're a BSD person freebsd

742
00:28:29,090 --> 00:28:30,380
actually has pretty good support for

743
00:28:30,380 --> 00:28:33,650
risk 5 there's a couple things that need

744
00:28:33,650 --> 00:28:35,390
to be added but previously action has

745
00:28:35,390 --> 00:28:36,890
upstream risk 5 support which is pretty

746
00:28:36,890 --> 00:28:37,280
cool

747
00:28:37,280 --> 00:28:41,150
yep ESC has a port in progress and there

748
00:28:41,150 --> 00:28:42,470
are a number of other operating systems

749
00:28:42,470 --> 00:28:44,360
that are have risk 5 ports in progress

750
00:28:44,360 --> 00:28:46,430
so and these tend to be more embedded

751
00:28:46,430 --> 00:28:49,850
operating systems so sel for keynote

752
00:28:49,850 --> 00:28:53,300
Helen O's Zephyr 3 our toss are tens

753
00:28:53,300 --> 00:28:55,760
mine youth so the software stack is you

754
00:28:55,760 --> 00:28:57,290
know it's it's getting there kind of

755
00:28:57,290 --> 00:29:00,410
steadily and the most exciting thing is

756
00:29:00,410 --> 00:29:01,730
that we have a couple operating systems

757
00:29:01,730 --> 00:29:02,960
that have upstream risk life support

758
00:29:02,960 --> 00:29:05,450
FreeBSD and FreeBSD 11 point O and the

759
00:29:05,450 --> 00:29:07,850
Zephyr kernel from the from the Linux

760
00:29:07,850 --> 00:29:10,400
Foundation also has upstream risk 5

761
00:29:10,400 --> 00:29:12,980
support so that's actually pretty cool

762
00:29:12,980 --> 00:29:14,360
the software stack is starting to come

763
00:29:14,360 --> 00:29:17,840
together there number of risk 5 language

764
00:29:17,840 --> 00:29:20,240
efforts in progress for Java there's

765
00:29:20,240 --> 00:29:22,550
there are people working on open JDK and

766
00:29:22,550 --> 00:29:25,700
Jake's our VM there's a go port there's

767
00:29:25,700 --> 00:29:27,830
a to talk about go at the last risk live

768
00:29:27,830 --> 00:29:29,750
workshop so there's a few Google people

769
00:29:29,750 --> 00:29:32,000
working on go risk 5 which is they're

770
00:29:32,000 --> 00:29:33,260
making a lot of progress in a short

771
00:29:33,260 --> 00:29:35,480
amount of time there's people working on

772
00:29:35,480 --> 00:29:38,710
Oh camel and Haskell support for risk 5

773
00:29:38,710 --> 00:29:41,450
concert as a verified formally verified

774
00:29:41,450 --> 00:29:44,740
tool chain it's also got risk 5 supports

775
00:29:44,740 --> 00:29:47,000
there are people from rust who were

776
00:29:47,000 --> 00:29:49,130
interested in getting risk 5 it hasn't

777
00:29:49,130 --> 00:29:49,910
started yet

778
00:29:49,910 --> 00:29:51,770
because they're kind of waiting on the

779
00:29:51,770 --> 00:29:54,830
LVM port but I think once LVM comes in

780
00:29:54,830 --> 00:29:56,720
we'll see a lot more language effort

781
00:29:56,720 --> 00:29:59,480
it's kind of getting farther along so

782
00:29:59,480 --> 00:30:01,340
there's a lot of action on the the risk

783
00:30:01,340 --> 00:30:05,450
5 software front so what's next so we're

784
00:30:05,450 --> 00:30:07,820
preparing the linux kernel and we will

785
00:30:07,820 --> 00:30:09,620
be preparing the Linux kernel chillip C

786
00:30:09,620 --> 00:30:11,840
and Kim you patches for up streaming so

787
00:30:11,840 --> 00:30:13,190
one of the things that's been kind of

788
00:30:13,190 --> 00:30:15,260
holding back some of the distros is the

789
00:30:15,260 --> 00:30:16,730
lack of upstream linux kernel support

790
00:30:16,730 --> 00:30:19,430
and g Lipsy so it looks like the linux

791
00:30:19,430 --> 00:30:22,580
kernel support the patches look

792
00:30:22,580 --> 00:30:24,560
reasonable some of the maintainer have

793
00:30:24,560 --> 00:30:26,600
looked at them and there's a few issues

794
00:30:26,600 --> 00:30:28,430
that need to be fixed but once they get

795
00:30:28,430 --> 00:30:31,400
fixed hopefully those patches can go in

796
00:30:31,400 --> 00:30:33,530
and there's some work on G live to see

797
00:30:33,530 --> 00:30:36,920
as well there's also some more more work

798
00:30:36,920 --> 00:30:39,380
on standards we need to flesh out our

799
00:30:39,380 --> 00:30:42,080
ABI specification we also need to work

800
00:30:42,080 --> 00:30:43,220
more in the privileged specification

801
00:30:43,220 --> 00:30:45,530
because it's not it's not a frozen spec

802
00:30:45,530 --> 00:30:46,810
yet it hasn't been ratified

803
00:30:46,810 --> 00:30:48,590
so there's some more work to be done

804
00:30:48,590 --> 00:30:50,270
there and this will be done sort of in

805
00:30:50,270 --> 00:30:52,070
parallel with the the up streaming of

806
00:30:52,070 --> 00:30:53,420
the Linux kernel and G lipsi

807
00:30:53,420 --> 00:30:58,250
stuff so as I was saying once linux

808
00:30:58,250 --> 00:30:59,240
kernel and G let's see you get up

809
00:30:59,240 --> 00:31:02,180
streamed we are going to continue it'll

810
00:31:02,180 --> 00:31:03,800
make it a lot easier to do linux distros

811
00:31:03,800 --> 00:31:06,140
so we'll continue to kind of improve an

812
00:31:06,140 --> 00:31:07,670
update a linux distro support and

813
00:31:07,670 --> 00:31:09,830
upstream those changes and if there any

814
00:31:09,830 --> 00:31:11,600
destroy people in the audience we'd love

815
00:31:11,600 --> 00:31:13,910
your help with the with getting risk 5

816
00:31:13,910 --> 00:31:16,400
on your your distro

817
00:31:16,400 --> 00:31:18,140
and in general we want to port more

818
00:31:18,140 --> 00:31:20,360
software package to risk 5 so if you're

819
00:31:20,360 --> 00:31:22,010
a maintainer of any software packages

820
00:31:22,010 --> 00:31:23,900
we'd love to work with you to get at

821
00:31:23,900 --> 00:31:27,710
risk 5 support and yeah so in general we

822
00:31:27,710 --> 00:31:29,900
need your help to push risk 5 forward we

823
00:31:29,900 --> 00:31:31,460
hope you will kind of join the the risk

824
00:31:31,460 --> 00:31:34,520
5 community and kind of help kind of

825
00:31:34,520 --> 00:31:36,380
with some of these software tasks as

826
00:31:36,380 --> 00:31:38,140
well as some of the hardware stuff and

827
00:31:38,140 --> 00:31:41,990
documentation as well so if you do want

828
00:31:41,990 --> 00:31:43,850
to get involved there's some resources

829
00:31:43,850 --> 00:31:45,530
that you can check out so

830
00:31:45,530 --> 00:31:47,450
with all the codes on github so that's

831
00:31:47,450 --> 00:31:49,070
the github organization we have mailing

832
00:31:49,070 --> 00:31:51,140
lists for hardware development software

833
00:31:51,140 --> 00:31:53,110
development and development of the I say

834
00:31:53,110 --> 00:31:55,340
the risk 5 workshop proceedings are

835
00:31:55,340 --> 00:31:57,679
online so both slides and the talks and

836
00:31:57,679 --> 00:31:59,480
this is a good way to kind of get up to

837
00:31:59,480 --> 00:32:01,070
speed with what's been going on in the

838
00:32:01,070 --> 00:32:03,679
risk live community there's a stack

839
00:32:03,679 --> 00:32:05,299
overflow so if you have questions about

840
00:32:05,299 --> 00:32:06,650
respond you can ask them here

841
00:32:06,650 --> 00:32:08,539
once you learn more about risk cloud you

842
00:32:08,539 --> 00:32:09,799
can answer the questions that'll be

843
00:32:09,799 --> 00:32:13,220
great sue there are a couple articles in

844
00:32:13,220 --> 00:32:14,809
microprocessor report that sort of

845
00:32:14,809 --> 00:32:18,320
describe the risk 5ia in general if your

846
00:32:18,320 --> 00:32:20,900
uterus 5 these are worth reading so the

847
00:32:20,900 --> 00:32:21,830
first one kind of talks about the

848
00:32:21,830 --> 00:32:23,840
rationale for having an open eye assay

849
00:32:23,840 --> 00:32:25,010
and then the second one talks a little

850
00:32:25,010 --> 00:32:27,580
bit more about risk five particulars

851
00:32:27,580 --> 00:32:29,929
there was an I Triple E micro article

852
00:32:29,929 --> 00:32:31,280
written by the Berkeley folks about

853
00:32:31,280 --> 00:32:33,470
their agile approach to a building

854
00:32:33,470 --> 00:32:34,909
hardware and might risk 5

855
00:32:34,909 --> 00:32:36,620
microprocessors and that's kind of

856
00:32:36,620 --> 00:32:37,850
interesting because a lot of what

857
00:32:37,850 --> 00:32:39,919
they're doing is using open source and

858
00:32:39,919 --> 00:32:42,080
the chisel HDL a higher level HDL to

859
00:32:42,080 --> 00:32:45,860
build Hardware more quickly so they're

860
00:32:45,860 --> 00:32:48,799
number up coming risk 5 events if you're

861
00:32:48,799 --> 00:32:50,539
able to it'd be great if you could come

862
00:32:50,539 --> 00:32:51,650
to some of the events it's a great way

863
00:32:51,650 --> 00:32:53,750
to kind of meet the community and get

864
00:32:53,750 --> 00:32:56,360
involved so may 9th and 10th

865
00:32:56,360 --> 00:32:58,010
there's the sixth risk five workshop

866
00:32:58,010 --> 00:33:01,130
it'll be in Shanghai China is the first

867
00:33:01,130 --> 00:33:02,270
time the risk 5 workshop has been

868
00:33:02,270 --> 00:33:03,650
outside of the US so that's pretty

869
00:33:03,650 --> 00:33:09,549
exciting it's hosted by Nvidia and

870
00:33:09,640 --> 00:33:13,809
forget the name of the universe Shanghai

871
00:33:13,809 --> 00:33:16,900
and then March 14th the 16th there's a

872
00:33:16,900 --> 00:33:19,010
embedded world so a number of risk 5

873
00:33:19,010 --> 00:33:20,840
foundation companies will be exhibiting

874
00:33:20,840 --> 00:33:24,770
there April 2nd to 3rd IIT Madras is

875
00:33:24,770 --> 00:33:26,690
having a risk 5 conference and so

876
00:33:26,690 --> 00:33:27,679
they've been doing a lot of work with

877
00:33:27,679 --> 00:33:29,299
risk 5 so you'll hear more about their

878
00:33:29,299 --> 00:33:31,460
Shakti core ISM you also hear about risk

879
00:33:31,460 --> 00:33:33,049
5 projects from all around the world so

880
00:33:33,049 --> 00:33:35,960
that should be a cool event September

881
00:33:35,960 --> 00:33:39,020
8th through 10th there's oor Kampf in

882
00:33:39,020 --> 00:33:41,780
Hebden Bridge UK so or Acuff is actually

883
00:33:41,780 --> 00:33:44,090
an open risk conference but they've kind

884
00:33:44,090 --> 00:33:46,190
of opened it up to risk five people so

885
00:33:46,190 --> 00:33:47,720
there'll be a fair number of response

886
00:33:47,720 --> 00:33:48,580
there as well

887
00:33:48,580 --> 00:33:51,500
so in summary risk 5 is an open

888
00:33:51,500 --> 00:33:54,020
instruction set specification you can

889
00:33:54,020 --> 00:33:55,610
grab it you can do which you you can

890
00:33:55,610 --> 00:33:57,260
build bright airy cores you can build

891
00:33:57,260 --> 00:33:58,669
open source cores

892
00:33:58,669 --> 00:33:59,630
you don't have to worry about getting

893
00:33:59,630 --> 00:34:04,190
sued which is good but it's and because

894
00:34:04,190 --> 00:34:05,120
it's an open instruction set

895
00:34:05,120 --> 00:34:06,529
specification there's a lot of open

896
00:34:06,529 --> 00:34:08,659
source cores that are available so

897
00:34:08,659 --> 00:34:10,129
there's several options I talked about

898
00:34:10,129 --> 00:34:12,560
the rocket ship low risk there are a

899
00:34:12,560 --> 00:34:13,909
number of other options that are

900
00:34:13,909 --> 00:34:15,589
available as well I just highlighted a

901
00:34:15,589 --> 00:34:17,899
few of them the RISC Live software stack

902
00:34:17,899 --> 00:34:19,580
is steadily coming together

903
00:34:19,580 --> 00:34:21,710
things are getting upstream distros are

904
00:34:21,710 --> 00:34:23,119
happening and we love your help there

905
00:34:23,119 --> 00:34:24,918
and in general we're looking for

906
00:34:24,918 --> 00:34:27,649
contributors all across the hardware

907
00:34:27,649 --> 00:34:31,460
software stack so the takeaway is that

908
00:34:31,460 --> 00:34:34,070
you should hack on risk 5 and I hope to

909
00:34:34,070 --> 00:34:36,949
see you at one of the many 2017 risk 5

910
00:34:36,949 --> 00:34:39,030
events thank you

911
00:34:39,030 --> 00:34:50,739
[Applause]

912
00:34:53,909 --> 00:34:58,919
sorry I just

913
00:35:11,030 --> 00:35:13,200
yeah so this is one of these things

914
00:35:13,200 --> 00:35:16,590
that's sort of difficult so I think the

915
00:35:16,590 --> 00:35:19,140
question was about what peripherals are

916
00:35:19,140 --> 00:35:30,600
l1 the SSC and the bus so exci right so

917
00:35:30,600 --> 00:35:32,130
this is a question about specific

918
00:35:32,130 --> 00:35:35,030
implementations so for the rocket ship

919
00:35:35,030 --> 00:35:37,700
implementation the bus thing uses AXI

920
00:35:37,700 --> 00:35:41,790
and they have I don't know they have spy

921
00:35:41,790 --> 00:35:46,290
devices PWM they have I don't I actually

922
00:35:46,290 --> 00:35:46,680
don't

923
00:35:46,680 --> 00:35:48,120
came in you're right all different GPIO

924
00:35:48,120 --> 00:35:50,130
s so this is one of these things where

925
00:35:50,130 --> 00:35:52,170
there are some devices but there's gonna

926
00:35:52,170 --> 00:35:53,430
be more work that needs to be done and

927
00:35:53,430 --> 00:35:55,770
so I think the free chips foundation the

928
00:35:55,770 --> 00:35:57,630
Fawzi foundation Libre course I think

929
00:35:57,630 --> 00:36:00,030
together will have to work together so

930
00:36:00,030 --> 00:36:02,910
there are some peripherals there in the

931
00:36:02,910 --> 00:36:04,760
SSC I don't remember all of them offhand

932
00:36:04,760 --> 00:36:07,560
but there definitely will need to be

933
00:36:07,560 --> 00:36:09,840
work there there no GPUs for instance

934
00:36:09,840 --> 00:36:13,830
that's difficult but for a lot of the

935
00:36:13,830 --> 00:36:16,020
embedded peripherals a lot of some of

936
00:36:16,020 --> 00:36:18,180
that stuff is there I think we have USB

937
00:36:18,180 --> 00:36:25,980
now so that's an implementation question

938
00:36:25,980 --> 00:36:27,060
and so it depends on the implementation

939
00:36:27,060 --> 00:36:30,600
so the is a I mean it really depends on

940
00:36:30,600 --> 00:36:33,410
implementation so the high five board is

941
00:36:33,410 --> 00:36:36,030
can click be clocked at 320 megahertz

942
00:36:36,030 --> 00:36:40,640
they're using a tsmc 180 nanometer the

943
00:36:40,640 --> 00:36:42,810
freedom and leash platform they've

944
00:36:42,810 --> 00:36:45,360
quoted they're gonna use I think TSMC 28

945
00:36:45,360 --> 00:36:47,250
nanometer you can clock that at one

946
00:36:47,250 --> 00:36:48,840
point six Kiko Hertz

947
00:36:48,840 --> 00:36:51,510
above 1.6 gigahertz and above is what

948
00:36:51,510 --> 00:36:54,090
they've quoted as so it sort of depends

949
00:36:54,090 --> 00:36:59,250
on the implementation yeah actually

950
00:36:59,250 --> 00:37:02,560
owner board all right

951
00:37:02,560 --> 00:37:13,630
anybody else yep yeah yeah

952
00:37:42,730 --> 00:37:49,370
yeah that's a good question yeah yeah

953
00:37:49,370 --> 00:37:50,600
that's a good question so the question

954
00:37:50,600 --> 00:37:54,500
is so the next respond without side the

955
00:37:54,500 --> 00:37:55,940
first one that's outside the US is going

956
00:37:55,940 --> 00:37:58,400
to be in China and sort of what about

957
00:37:58,400 --> 00:38:07,430
Europe I think was the question and yeah

958
00:38:07,430 --> 00:38:09,710
so actually we were hoping to come to

959
00:38:09,710 --> 00:38:12,050
Europe just because of the timing we I

960
00:38:12,050 --> 00:38:13,940
mean there were a couple venues that

961
00:38:13,940 --> 00:38:15,830
were discussed like Cambridge and Zurich

962
00:38:15,830 --> 00:38:18,110
and it was mostly a timing thing so

963
00:38:18,110 --> 00:38:19,010
we're definitely going to come to Europe

964
00:38:19,010 --> 00:38:22,100
it was just the dates that we've set up

965
00:38:22,100 --> 00:38:23,600
were kind of difficult with University

966
00:38:23,600 --> 00:38:25,580
calendars and things like that there

967
00:38:25,580 --> 00:38:27,530
will be some risks five meet ups that we

968
00:38:27,530 --> 00:38:29,120
haven't scheduled yet but we're hoping

969
00:38:29,120 --> 00:38:31,790
to have a couple respond meet ups will

970
00:38:31,790 --> 00:38:33,980
be smaller events in Europe but I yeah

971
00:38:33,980 --> 00:38:35,120
we definitely wanna have a foundation

972
00:38:35,120 --> 00:38:39,710
event soon in in Europe probably I

973
00:38:39,710 --> 00:38:41,600
assume I think the next one will

974
00:38:41,600 --> 00:38:42,830
probably in the US but hopefully

975
00:38:42,830 --> 00:38:44,060
sometime next year we can get to Europe

976
00:38:44,060 --> 00:38:45,620
but there are a lot of other will

977
00:38:45,620 --> 00:38:47,030
definitely be holding smaller risks five

978
00:38:47,030 --> 00:38:57,190
events sorry was that

979
00:38:57,790 --> 00:39:01,480
ah I don't know about this year so the

980
00:39:01,480 --> 00:39:02,860
question was will some of the risk by

981
00:39:02,860 --> 00:39:07,540
founders come to work on so yeah so so

982
00:39:07,540 --> 00:39:09,070
they've been to our comp in the past

983
00:39:09,070 --> 00:39:11,620
like two years ago they gave talks there

984
00:39:11,620 --> 00:39:13,390
I don't know if it'll happen this year

985
00:39:13,390 --> 00:39:15,970
but I'll see if they can make it or some

986
00:39:15,970 --> 00:39:17,650
other risk by people but yeah I think in

987
00:39:17,650 --> 00:39:18,760
general we should get more risk by

988
00:39:18,760 --> 00:39:20,140
people going to our cop events to come

989
00:39:20,140 --> 00:39:26,520
into Europe you get a board - yes here

990
00:39:26,520 --> 00:39:29,760
where oh yeah the guy with microphone

991
00:39:29,760 --> 00:39:33,430
yeah so know that you've tackled the CPU

992
00:39:33,430 --> 00:39:37,090
and thanks how about pretty please with

993
00:39:37,090 --> 00:39:40,380
sugar on top start tackling the GPUs

994
00:39:40,380 --> 00:39:50,260
yeah please yeah that's a good question

995
00:39:50,260 --> 00:39:53,500
yeah so the GPUs are hard there are some

996
00:39:53,500 --> 00:39:56,050
I know there are some academic efforts

997
00:39:56,050 --> 00:39:59,500
that are building their own GPUs I think

998
00:39:59,500 --> 00:40:01,240
there's four I think the risk five

999
00:40:01,240 --> 00:40:03,250
Foundation and some of the other like

1000
00:40:03,250 --> 00:40:05,170
Fozzie Foundation and there's a new free

1001
00:40:05,170 --> 00:40:07,330
chip spend project that's been founded

1002
00:40:07,330 --> 00:40:09,460
and basically they're kind of taking

1003
00:40:09,460 --> 00:40:11,890
over some of the through they're playing

1004
00:40:11,890 --> 00:40:13,150
the foundation role for the rocket ship

1005
00:40:13,150 --> 00:40:16,390
so their goal is to build more open

1006
00:40:16,390 --> 00:40:18,310
source IP blocks

1007
00:40:18,310 --> 00:40:21,250
I think the GPU is gonna be hard we need

1008
00:40:21,250 --> 00:40:22,630
to get a lot more people kind of working

1009
00:40:22,630 --> 00:40:23,710
on that so I think it's probably and

1010
00:40:23,710 --> 00:40:25,300
require collaboration between all the

1011
00:40:25,300 --> 00:40:28,030
open hardware projects but there are a

1012
00:40:28,030 --> 00:40:29,290
couple academic projects that look

1013
00:40:29,290 --> 00:40:29,740
promising

1014
00:40:29,740 --> 00:40:40,000
I don't remember honestly yeah I don't

1015
00:40:40,000 --> 00:40:43,270
remember where they're from yeah open

1016
00:40:43,270 --> 00:40:46,930
GPU University I'll see you I'll ask

1017
00:40:46,930 --> 00:40:48,040
some people about it because I remember

1018
00:40:48,040 --> 00:40:49,420
hearing about a couple that seemed kind

1019
00:40:49,420 --> 00:40:51,910
of promising I mean the only thing you

1020
00:40:51,910 --> 00:40:53,200
could do is just posted a risk live

1021
00:40:53,200 --> 00:40:55,840
mailing list Hardware dev and just get a

1022
00:40:55,840 --> 00:40:58,330
discussion started it's not a priority

1023
00:40:58,330 --> 00:40:59,530
for us right now there's a lot of other

1024
00:40:59,530 --> 00:41:01,720
things we have to work on but I think as

1025
00:41:01,720 --> 00:41:03,480
a the open hardware community as a whole

1026
00:41:03,480 --> 00:41:06,010
together we should we should definitely

1027
00:41:06,010 --> 00:41:11,110
tackle that yeah GPUs are heart open GP

1028
00:41:11,110 --> 00:41:13,440
is all right

1029
00:41:17,820 --> 00:41:19,820
yep

1030
00:41:19,820 --> 00:41:25,010
yeah we'll get you at birth is there is

1031
00:41:25,010 --> 00:41:26,720
there beside the instructions said that

1032
00:41:26,720 --> 00:41:28,160
you shown here today do you have any

1033
00:41:28,160 --> 00:41:31,970
ideas about something like SIMD Cindy

1034
00:41:31,970 --> 00:41:34,310
okay so there's a vector extension that

1035
00:41:34,310 --> 00:41:36,470
that Krista is working on so Chris's

1036
00:41:36,470 --> 00:41:38,300
apparently was worked on like vectors

1037
00:41:38,300 --> 00:41:40,460
like vector machines kind of like his

1038
00:41:40,460 --> 00:41:42,250
whole career so he and some other

1039
00:41:42,250 --> 00:41:44,120
old-school vector people are really

1040
00:41:44,120 --> 00:41:45,770
excited about putting like a vector

1041
00:41:45,770 --> 00:41:48,020
proposal together so there's been some

1042
00:41:48,020 --> 00:41:51,050
discussion about it but it's gonna take

1043
00:41:51,050 --> 00:41:53,090
a while to kind of standardize if you're

1044
00:41:53,090 --> 00:41:55,550
interested in that you could talk to

1045
00:41:55,550 --> 00:41:57,350
people on the ice a Dabney Ling list or

1046
00:41:57,350 --> 00:42:00,110
we have we also have working groups of

1047
00:42:00,110 --> 00:42:02,450
the the risk alive foundation meetings

1048
00:42:02,450 --> 00:42:05,450
so there are people who are interested

1049
00:42:05,450 --> 00:42:07,880
Krista in particulars all about vectors

1050
00:42:07,880 --> 00:42:10,610
so something will happen I can't promise

1051
00:42:10,610 --> 00:42:27,920
anything in terms of timeline oh so you

1052
00:42:27,920 --> 00:42:31,510
want to buy a sci-fi chip yeah just two

1053
00:42:31,510 --> 00:42:34,880
designs or I'm sure if you email sy5

1054
00:42:34,880 --> 00:42:39,380
they'll throw you some chips yeah I mean

1055
00:42:39,380 --> 00:42:40,790
so with their business model basically

1056
00:42:40,790 --> 00:42:43,550
is that they'll do custom design for you

1057
00:42:43,550 --> 00:42:45,470
so I'm sure they'd be happy to sell you

1058
00:42:45,470 --> 00:42:47,120
chips if you have some sort of board

1059
00:42:47,120 --> 00:42:49,610
that you want to build or something it's

1060
00:42:49,610 --> 00:42:54,470
a it's a pretty nice chip about the

1061
00:42:54,470 --> 00:42:56,630
openness you mentioned a lot of times

1062
00:42:56,630 --> 00:42:57,860
that it's opened and there are no

1063
00:42:57,860 --> 00:43:01,670
lawyers involved and there's nothing to

1064
00:43:01,670 --> 00:43:03,290
be afraid just copy the implementation

1065
00:43:03,290 --> 00:43:05,120
of their course and edit what's the

1066
00:43:05,120 --> 00:43:07,610
license and there are there any patent

1067
00:43:07,610 --> 00:43:09,770
issues and yep is there one license for

1068
00:43:09,770 --> 00:43:11,330
only one intention after your question

1069
00:43:11,330 --> 00:43:15,470
the question is about licensing so he

1070
00:43:15,470 --> 00:43:16,520
said the license depends on the

1071
00:43:16,520 --> 00:43:18,980
implementation so the Berkeley core is

1072
00:43:18,980 --> 00:43:21,500
under the bsd license sigh fives

1073
00:43:21,500 --> 00:43:24,890
licensing some things under Apache other

1074
00:43:24,890 --> 00:43:28,250
people are using the IFC license there

1075
00:43:28,250 --> 00:43:30,050
may I'm sure there's some copy left like

1076
00:43:30,050 --> 00:43:32,240
GPL hardware as well so

1077
00:43:32,240 --> 00:43:33,980
it's sort of up to the project to decide

1078
00:43:33,980 --> 00:43:35,599
what license they want for their

1079
00:43:35,599 --> 00:43:39,890
specific implementation yeah absolutely

1080
00:43:39,890 --> 00:43:41,390
it can be proprietary as well so if

1081
00:43:41,390 --> 00:43:42,530
you're a company and there are several

1082
00:43:42,530 --> 00:43:44,420
companies doing this because it's just a

1083
00:43:44,420 --> 00:43:45,980
standard you can implement your

1084
00:43:45,980 --> 00:43:47,240
proprietary respond ship that's

1085
00:43:47,240 --> 00:43:57,800
completely fine yeah hi

1086
00:43:57,800 --> 00:44:00,290
what peripherals are available on the

1087
00:44:00,290 --> 00:44:04,880
risk 5 MCU that they're selling now yeah

1088
00:44:04,880 --> 00:44:08,810
okay so I guess PII score C yeah so I it

1089
00:44:08,810 --> 00:44:11,930
has some spy it has some GPIO s it have

1090
00:44:11,930 --> 00:44:15,650
some PWM I don't remember everything

1091
00:44:15,650 --> 00:44:17,450
else the crowd supply page will have all

1092
00:44:17,450 --> 00:44:19,010
the details but it's arduino compatible

1093
00:44:19,010 --> 00:44:20,750
so you can put like RGB no sh wheels

1094
00:44:20,750 --> 00:44:23,330
Arduino shields in there so there's a

1095
00:44:23,330 --> 00:44:25,849
couple Adafruit shields if they use and

1096
00:44:25,849 --> 00:44:28,700
there are demos so I don't remember all

1097
00:44:28,700 --> 00:44:30,349
the details but if you go to the crowd

1098
00:44:30,349 --> 00:44:31,820
supply website it has all the details

1099
00:44:31,820 --> 00:44:36,260
and the datasheet yeah sorry there's a

1100
00:44:36,260 --> 00:44:44,680
question so the question was are there

1101
00:44:44,680 --> 00:44:47,150
invitations using multi-threading so

1102
00:44:47,150 --> 00:44:49,070
there are multi-core implementations are

1103
00:44:49,070 --> 00:44:50,060
you talking about like the symmetric

1104
00:44:50,060 --> 00:44:53,170
multi different like hyper threading

1105
00:44:53,650 --> 00:44:57,580
maybe several program count to several

1106
00:44:57,580 --> 00:45:00,290
register banks and you can select which

1107
00:45:00,290 --> 00:45:03,109
program count to use every cycle finally

1108
00:45:03,109 --> 00:45:05,900
multi-threading yeah I don't know they

1109
00:45:05,900 --> 00:45:08,420
don't they may exist I'm actually not

1110
00:45:08,420 --> 00:45:10,099
sure I don't think the rocket ship does

1111
00:45:10,099 --> 00:45:11,330
that I think the rocket is just

1112
00:45:11,330 --> 00:45:13,190
multi-core so doesn't have like hyper

1113
00:45:13,190 --> 00:45:15,609
threading or anything like that or SMT

1114
00:45:15,609 --> 00:45:19,119
questions back there

1115
00:45:30,270 --> 00:45:32,970
okay so the question was what's the risk

1116
00:45:32,970 --> 00:45:34,800
are the specifications frozen and what's

1117
00:45:34,800 --> 00:45:36,930
the risk about if you buy hardware that

1118
00:45:36,930 --> 00:45:39,030
it doesn't match the specification so

1119
00:45:39,030 --> 00:45:41,820
the nice thing about so the specific the

1120
00:45:41,820 --> 00:45:43,920
high-five one board only implements a

1121
00:45:43,920 --> 00:45:47,010
microcontroller spec so or it's a

1122
00:45:47,010 --> 00:45:48,450
microcontroller so it doesn't implement

1123
00:45:48,450 --> 00:45:50,100
the other privileged specification so

1124
00:45:50,100 --> 00:45:53,910
the stuff that in advance is frozen but

1125
00:45:53,910 --> 00:45:55,380
the the privilege spec is under

1126
00:45:55,380 --> 00:45:58,500
development so hardware that is using

1127
00:45:58,500 --> 00:46:01,380
the privilege spec there actually isn't

1128
00:46:01,380 --> 00:46:04,080
any generally available but that could

1129
00:46:04,080 --> 00:46:05,340
be a problem there but we're hoping a

1130
00:46:05,340 --> 00:46:08,369
standardized privilege spec this year so

1131
00:46:08,369 --> 00:46:11,100
hopefully none of the harm I think it's

1132
00:46:11,100 --> 00:46:12,930
unlikely that hard roll be out that

1133
00:46:12,930 --> 00:46:16,440
doesn't match the spec it's generally

1134
00:46:16,440 --> 00:46:17,610
available I mean you can build your own

1135
00:46:17,610 --> 00:46:19,530
test chip several people have built test

1136
00:46:19,530 --> 00:46:21,300
chips with a the earlier version of the

1137
00:46:21,300 --> 00:46:30,330
prelim spec so two things as you

1138
00:46:30,330 --> 00:46:33,000
mentioned GHC the Haskell compiler it's

1139
00:46:33,000 --> 00:46:36,150
actually pretty easy to at basic

1140
00:46:36,150 --> 00:46:38,640
architecture support gtcys you just have

1141
00:46:38,640 --> 00:46:40,890
to like edit two lines of Haskell code

1142
00:46:40,890 --> 00:46:44,609
or something and like Otto Kahn I've

1143
00:46:44,609 --> 00:46:46,020
actually been doing that in the past

1144
00:46:46,020 --> 00:46:49,290
quite a lot for like super age which is

1145
00:46:49,290 --> 00:46:52,109
like now being redeveloped as an open

1146
00:46:52,109 --> 00:46:55,140
source architecture and the second thing

1147
00:46:55,140 --> 00:46:57,690
in general is so in a medev in developer

1148
00:46:57,690 --> 00:46:59,730
and and Devi and we have this project

1149
00:46:59,730 --> 00:47:02,670
called a reboot strap I don't know if

1150
00:47:02,670 --> 00:47:04,680
you've heard of it it's basically like

1151
00:47:04,680 --> 00:47:07,130
an automated system which allows you to

1152
00:47:07,130 --> 00:47:10,170
cross bootstrap and new architecture so

1153
00:47:10,170 --> 00:47:12,420
it's like it's in an amazing effort and

1154
00:47:12,420 --> 00:47:16,050
you just run a simple script and in the

1155
00:47:16,050 --> 00:47:18,840
end you end up with like the minimum set

1156
00:47:18,840 --> 00:47:21,180
of packages cross built for the new

1157
00:47:21,180 --> 00:47:23,310
architecture that you need to be able to

1158
00:47:23,310 --> 00:47:25,920
bootstrap and meaning that you can you

1159
00:47:25,920 --> 00:47:28,170
know build it on the built e-bill the

1160
00:47:28,170 --> 00:47:30,660
Debian built the infrastructure and the

1161
00:47:30,660 --> 00:47:32,310
nice thing is that it's constantly

1162
00:47:32,310 --> 00:47:35,190
running on a Jenkins job so we are like

1163
00:47:35,190 --> 00:47:38,100
basically verifying all the time like if

1164
00:47:38,100 --> 00:47:40,980
something you know is cross bootstrap

1165
00:47:40,980 --> 00:47:42,600
abow or not or a package is cross

1166
00:47:42,600 --> 00:47:43,810
buildable

1167
00:47:43,810 --> 00:47:45,610
and so with this mechanism we are

1168
00:47:45,610 --> 00:47:47,590
actually you know fixing all the bugs

1169
00:47:47,590 --> 00:47:50,350
and making you know new architectures

1170
00:47:50,350 --> 00:47:52,000
built on Debian and we of course

1171
00:47:52,000 --> 00:47:55,990
upstream all that stuff so and open risk

1172
00:47:55,990 --> 00:47:57,240
is included in that

1173
00:47:57,240 --> 00:48:00,400
that's cool man well I guess you know

1174
00:48:00,400 --> 00:48:01,500
about it

1175
00:48:01,500 --> 00:48:03,850
I'm sorry suck him in men well he cuz

1176
00:48:03,850 --> 00:48:05,380
he's done the Debian risk five for it I

1177
00:48:05,380 --> 00:48:11,860
was like whoo man well yeah so he's our

1178
00:48:11,860 --> 00:48:17,340
Debian guy how can I get a board sorry I

1179
00:48:17,340 --> 00:48:21,040
think these two guys get one if I have

1180
00:48:21,040 --> 00:48:29,160
more yes there's a question there yeah

1181
00:48:32,310 --> 00:48:37,120
yeah that's a great question so there's

1182
00:48:37,120 --> 00:48:38,140
a question about whether there's a

1183
00:48:38,140 --> 00:48:39,610
certification program to make sure that

1184
00:48:39,610 --> 00:48:41,920
the the standard is followed so that's

1185
00:48:41,920 --> 00:48:43,240
actually something the the risk my

1186
00:48:43,240 --> 00:48:46,090
foundation is working on so it's kind of

1187
00:48:46,090 --> 00:48:47,290
key that we're building out these

1188
00:48:47,290 --> 00:48:49,660
compliance tests and so we need to make

1189
00:48:49,660 --> 00:48:51,010
and that's kind of like and uh verify

1190
00:48:51,010 --> 00:48:53,650
that you are meeting the risk 5 standard

1191
00:48:53,650 --> 00:48:55,000
there's also been some work on building

1192
00:48:55,000 --> 00:48:57,160
a formal specification of the risk 5 I'd

1193
00:48:57,160 --> 00:48:58,720
say which is a little bit different but

1194
00:48:58,720 --> 00:49:02,350
related so that's in progress but it's

1195
00:49:02,350 --> 00:49:04,980
still pretty early

1196
00:49:07,930 --> 00:49:13,569
[Applause]

1197
00:49:13,750 --> 00:49:15,810
you

