1
00:00:00,000 --> 00:00:02,179
sorry

2
00:00:05,319 --> 00:00:12,039
everybody my name is our kupuna and I

3
00:00:12,039 --> 00:00:18,050
want to do some work and we are doing my

4
00:00:18,050 --> 00:00:21,910
University about dual education with

5
00:00:21,910 --> 00:00:25,910
Gino memoir it is not really related to

6
00:00:25,910 --> 00:00:29,840
micro candle system but since we are

7
00:00:29,840 --> 00:00:33,020
working on the microkernel operating

8
00:00:33,020 --> 00:00:36,649
system I think it is it is worth

9
00:00:36,649 --> 00:00:39,110
comfortable to come and present

10
00:00:39,110 --> 00:00:42,980
something about what we are doing so it

11
00:00:42,980 --> 00:00:47,239
will be essentially about how we can run

12
00:00:47,239 --> 00:00:50,630
and we run program or process in general

13
00:00:50,630 --> 00:00:54,170
with a new technique like that I will

14
00:00:54,170 --> 00:00:58,760
present you the following slides so my

15
00:00:58,760 --> 00:01:01,629
presentation will follow this outline I

16
00:01:01,629 --> 00:01:04,640
will give some introduction to a duel as

17
00:01:04,640 --> 00:01:07,100
a Christian in comparison after that I

18
00:01:07,100 --> 00:01:10,729
will present what the technique we apply

19
00:01:10,729 --> 00:01:14,150
to subject systematic process element we

20
00:01:14,150 --> 00:01:16,820
play I will also talk about some

21
00:01:16,820 --> 00:01:20,420
possible uses usage and advantage that

22
00:01:20,420 --> 00:01:23,930
we have with the system how we play with

23
00:01:23,930 --> 00:01:27,860
GNote framework and the current state of

24
00:01:27,860 --> 00:01:30,950
our performance in pattern I will end by

25
00:01:30,950 --> 00:01:39,439
some remaining work so for the

26
00:01:39,439 --> 00:01:42,050
introduction where

27
00:01:42,050 --> 00:01:46,620
DWC as usual - a double as a question

28
00:01:46,620 --> 00:01:51,900
with comparison to the general purpose

29
00:01:51,900 --> 00:01:56,520
is to detect error and take action to

30
00:01:56,520 --> 00:01:58,470
recover it's very special

31
00:01:58,470 --> 00:02:01,760
it is the field of fault tolerance this

32
00:02:01,760 --> 00:02:05,010
fashion of the coaching program may also

33
00:02:05,010 --> 00:02:08,310
be used for debugging our software

34
00:02:08,310 --> 00:02:12,510
education and advertising but in what we

35
00:02:12,510 --> 00:02:14,820
are doing we are specifically with doing

36
00:02:14,820 --> 00:02:20,120
it for fault tolerance so generally this

37
00:02:20,120 --> 00:02:22,680
double education will happen in parallel

38
00:02:22,680 --> 00:02:26,580
or some there are other people that do

39
00:02:26,580 --> 00:02:30,750
it simultaneously but one education bit

40
00:02:30,750 --> 00:02:35,880
delayed with first but others can do it

41
00:02:35,880 --> 00:02:38,880
also in sequence that is what we we are

42
00:02:38,880 --> 00:02:43,530
doing yeah and it also may happen at

43
00:02:43,530 --> 00:02:46,560
instruction level at the set of

44
00:02:46,560 --> 00:02:49,050
instruction level for what we are doing

45
00:02:49,050 --> 00:02:51,540
we are specifically doing it for inside

46
00:02:51,540 --> 00:02:56,250
a set of instruction level but and to

47
00:02:56,250 --> 00:02:59,280
make it detect error well the pitch

48
00:02:59,280 --> 00:03:02,400
execution must be deterministic so we

49
00:03:02,400 --> 00:03:07,170
have to play play instruction we take it

50
00:03:07,170 --> 00:03:10,410
again same is fashion of the same data

51
00:03:10,410 --> 00:03:13,140
in the same environment so we messed up

52
00:03:13,140 --> 00:03:15,060
we are guaranteed to have the same

53
00:03:15,060 --> 00:03:19,350
result so we make do comparison and see

54
00:03:19,350 --> 00:03:22,709
what if there was an error in one as a

55
00:03:22,709 --> 00:03:25,140
question or not so that is the basic

56
00:03:25,140 --> 00:03:30,390
idea so all the people have done

57
00:03:30,390 --> 00:03:32,459
something like that you can see in the

58
00:03:32,459 --> 00:03:35,610
literature primary backup at the rajab

59
00:03:35,610 --> 00:03:39,780
is voltaren off from result of the

60
00:03:39,780 --> 00:03:41,880
virtual machine based security system

61
00:03:41,880 --> 00:03:46,910
that they called research and other

62
00:03:46,910 --> 00:03:49,290
fashion of doing it our Hardware

63
00:03:49,290 --> 00:03:50,580
assisted

64
00:03:50,580 --> 00:03:55,020
we play from multi singles the college

65
00:03:55,020 --> 00:03:57,000
couple if you wanted there some

66
00:03:57,000 --> 00:04:00,980
reference that you can consult so

67
00:04:00,980 --> 00:04:04,410
concerning what we are doing the basic

68
00:04:04,410 --> 00:04:07,770
idea is to apply the drawl as a

69
00:04:07,770 --> 00:04:12,360
Christian to a set of instruction and we

70
00:04:12,360 --> 00:04:14,610
also take in account some limit of time

71
00:04:14,610 --> 00:04:18,000
data that is our dual education must not

72
00:04:18,000 --> 00:04:21,899
exceed some time limit so we have to

73
00:04:21,899 --> 00:04:25,530
called also this constraint so to

74
00:04:25,530 --> 00:04:28,560
achieve this rule we what we have is

75
00:04:28,560 --> 00:04:32,340
essentially to modify the kernel of an

76
00:04:32,340 --> 00:04:34,260
operating system and this K we are

77
00:04:34,260 --> 00:04:36,960
modifying a canal that gene would use of

78
00:04:36,960 --> 00:04:40,590
in eight status Excel it is this

79
00:04:40,590 --> 00:04:43,550
hardware that is Nova table modifying

80
00:04:43,550 --> 00:04:46,440
Villanova kernel so that for each

81
00:04:46,440 --> 00:04:51,510
process we reckon all device the process

82
00:04:51,510 --> 00:04:54,930
in charge element processing element

83
00:04:54,930 --> 00:04:58,620
that we call PE we run them twice

84
00:04:58,620 --> 00:05:01,790
and make the comparison between each

85
00:05:01,790 --> 00:05:11,790
running results so if sorry so if real

86
00:05:11,790 --> 00:05:14,490
comparison will be very sick with the

87
00:05:14,490 --> 00:05:17,790
result are the same so we will consider

88
00:05:17,790 --> 00:05:21,360
that with as the kitchen was okay they

89
00:05:21,360 --> 00:05:24,050
match and we can proceed to the nest

90
00:05:24,050 --> 00:05:28,800
processing element if so hardware error

91
00:05:28,800 --> 00:05:32,400
happens during one of the execution so

92
00:05:32,400 --> 00:05:35,490
surely one of the execution will be

93
00:05:35,490 --> 00:05:37,590
different from the other so and the

94
00:05:37,590 --> 00:05:39,750
comparison will not be the same so we

95
00:05:39,750 --> 00:05:41,940
consider that there was a problem and we

96
00:05:41,940 --> 00:05:45,150
have to restart the same processing

97
00:05:45,150 --> 00:05:50,640
element but also is DeRozan and expected

98
00:05:50,640 --> 00:05:52,919
reception so all we have to do is to

99
00:05:52,919 --> 00:05:55,979
restart all the entire the entire

100
00:05:55,979 --> 00:05:59,700
process so we fed the

101
00:05:59,700 --> 00:06:02,820
three phases first one second one and

102
00:06:02,820 --> 00:06:04,920
comparison visited education and

103
00:06:04,920 --> 00:06:05,670
commitment

104
00:06:05,670 --> 00:06:08,940
we call these reasons for operational

105
00:06:08,940 --> 00:06:12,800
transaction that that is the set of

106
00:06:12,800 --> 00:06:15,260
operations that have to be done or

107
00:06:15,260 --> 00:06:18,810
neglected if it is not okay so we have

108
00:06:18,810 --> 00:06:21,630
to restart the entire of operational

109
00:06:21,630 --> 00:06:26,520
transaction so for this fall of this to

110
00:06:26,520 --> 00:06:29,640
hold the process same element must be

111
00:06:29,640 --> 00:06:33,440
atomic in the end in the important so we

112
00:06:33,440 --> 00:06:36,870
do all our best that there is no

113
00:06:36,870 --> 00:06:40,820
interaction with the outside world and

114
00:06:40,910 --> 00:06:45,450
no input/output we end our processing

115
00:06:45,450 --> 00:06:47,790
element at each input/output work that

116
00:06:47,790 --> 00:06:50,060
we have to do with the outside world

117
00:06:50,060 --> 00:06:52,890
every dependent the time dependent

118
00:06:52,890 --> 00:06:55,830
destruction because there is no way to

119
00:06:55,830 --> 00:07:00,570
run the same time it's dependent

120
00:07:00,570 --> 00:07:03,180
instruction that it will return the same

121
00:07:03,180 --> 00:07:07,410
result so even we have to run this kind

122
00:07:07,410 --> 00:07:09,510
of instruction we have to and our

123
00:07:09,510 --> 00:07:12,360
processing element that's as some

124
00:07:12,360 --> 00:07:18,330
criteria to fill our goal the Bell

125
00:07:18,330 --> 00:07:20,730
things happen we have also to stop the

126
00:07:20,730 --> 00:07:23,370
processing element if we will process

127
00:07:23,370 --> 00:07:25,680
make some assumption on page for that

128
00:07:25,680 --> 00:07:28,860
this kind of stuff so that we keep the

129
00:07:28,860 --> 00:07:32,820
processing element so charged to hold in

130
00:07:32,820 --> 00:07:38,880
return so in practice what we have to do

131
00:07:38,880 --> 00:07:43,260
it to compare each processing element

132
00:07:43,260 --> 00:07:46,440
result that is the memory page there

133
00:07:46,440 --> 00:07:50,430
it's modified so if we process modified

134
00:07:50,430 --> 00:07:54,000
three page we have to compare the

135
00:07:54,000 --> 00:07:56,430
content of this three memory page and

136
00:07:56,430 --> 00:07:59,520
see that if they are present they also

137
00:07:59,520 --> 00:08:03,240
the same thing happened to the register

138
00:08:03,240 --> 00:08:06,020
that process

139
00:08:06,020 --> 00:08:09,229
may have modified so we also have to

140
00:08:09,229 --> 00:08:14,710
compare all the process related register

141
00:08:14,710 --> 00:08:19,370
so for the following are representing in

142
00:08:19,370 --> 00:08:22,930
Vanessa slide how we do the process and

143
00:08:22,930 --> 00:08:27,530
for you to follow me will will we will

144
00:08:27,530 --> 00:08:32,929
call PL l forward profit process spent

145
00:08:32,929 --> 00:08:35,360
processing element that will do the

146
00:08:35,360 --> 00:08:38,890
first as the cushion will be the called

147
00:08:38,890 --> 00:08:43,520
en1 and the second processing element as

148
00:08:43,520 --> 00:08:46,190
the question will call will be called en

149
00:08:46,190 --> 00:08:53,120
to about memory pages will call pm1 for

150
00:08:53,120 --> 00:08:58,550
modified pain PM page during the first

151
00:08:58,550 --> 00:09:02,660
education and PM to were modified page

152
00:09:02,660 --> 00:09:07,459
in the second as a christian so how we

153
00:09:07,459 --> 00:09:10,190
do it before the fast as a question we

154
00:09:10,190 --> 00:09:14,089
step although register we also save all

155
00:09:14,089 --> 00:09:17,290
the memory page that the process can

156
00:09:17,290 --> 00:09:21,680
make modified in during its execution so

157
00:09:21,680 --> 00:09:24,230
to keep truth of all modified process

158
00:09:24,230 --> 00:09:28,399
page we reset all the memory page

159
00:09:28,399 --> 00:09:32,089
read-only and so that it will process

160
00:09:32,089 --> 00:09:36,410
try to modify the page it will fold in

161
00:09:36,410 --> 00:09:41,680
the kernel and we'll treat this fault so

162
00:09:41,680 --> 00:09:44,990
during the first as a question we try to

163
00:09:44,990 --> 00:09:48,110
construct the set of assessed on

164
00:09:48,110 --> 00:09:52,850
modified memory page and we keep it in a

165
00:09:52,850 --> 00:09:55,220
list so that at the end of the two

166
00:09:55,220 --> 00:09:58,430
execution we will will make the

167
00:09:58,430 --> 00:10:03,070
comparison we will do the comparison so

168
00:10:03,070 --> 00:10:06,440
essentially and after the first as an

169
00:10:06,440 --> 00:10:08,420
efficient we also have to flush with

170
00:10:08,420 --> 00:10:12,950
cash so that the processor will need to

171
00:10:12,950 --> 00:10:16,010
fetch new data from

172
00:10:16,010 --> 00:10:20,690
memory so that he will not him it will

173
00:10:20,690 --> 00:10:24,290
be obliged to it will not use data that

174
00:10:24,290 --> 00:10:28,010
he it have kept in its cache during the

175
00:10:28,010 --> 00:10:30,350
first run so that all the data in Europe

176
00:10:30,350 --> 00:10:35,660
and will be fresh data so at the end of

177
00:10:35,660 --> 00:10:39,770
the second one we make the comparison

178
00:10:39,770 --> 00:10:43,730
and as I said just as I have just said

179
00:10:43,730 --> 00:10:46,070
if everything is okay we can proceed to

180
00:10:46,070 --> 00:10:49,760
s first activist following processing

181
00:10:49,760 --> 00:10:52,910
element and if there is the problem we

182
00:10:52,910 --> 00:10:55,850
just have to restart the same the same

183
00:10:55,850 --> 00:10:59,060
operational transaction until then there

184
00:10:59,060 --> 00:11:03,920
is no error so I may recall that repair

185
00:11:03,920 --> 00:11:06,470
oh I'm talking about data transient

186
00:11:06,470 --> 00:11:08,960
error or software oh that may appear in

187
00:11:08,960 --> 00:11:13,970
the CPU register and after some

188
00:11:13,970 --> 00:11:17,180
rewriting in the resistor or catching

189
00:11:17,180 --> 00:11:22,570
this error may disappear to observe so

190
00:11:22,570 --> 00:11:28,010
to do this work it's happened that we

191
00:11:28,010 --> 00:11:32,390
will have to make for each page that we

192
00:11:32,390 --> 00:11:34,640
process will modify we have to make

193
00:11:34,640 --> 00:11:40,100
three copy for each page the same thing

194
00:11:40,100 --> 00:11:43,720
for the comparison will also do

195
00:11:43,720 --> 00:11:46,670
comparison and sometime we notice that

196
00:11:46,670 --> 00:11:48,830
during its that the Christian represents

197
00:11:48,830 --> 00:11:52,730
me modified up to ten memory page of

198
00:11:52,730 --> 00:11:55,850
memory frame so we have to do toot-toot

199
00:11:55,850 --> 00:11:58,790
all this comparison in the time limit

200
00:11:58,790 --> 00:12:04,640
that we must not exceed and also that we

201
00:12:04,640 --> 00:12:08,090
we must also keep to sovereignists them

202
00:12:08,090 --> 00:12:12,190
to respect each service conference about

203
00:12:12,190 --> 00:12:16,220
application so there is lot of work to

204
00:12:16,220 --> 00:12:21,230
do in the kennel but also a real time

205
00:12:21,230 --> 00:12:22,750
constraint must be

206
00:12:22,750 --> 00:12:30,560
not so now this technique of dual

207
00:12:30,560 --> 00:12:34,840
education has already been applied the

208
00:12:34,840 --> 00:12:49,640
question process can change each speech

209
00:12:49,640 --> 00:12:56,960
and yeah I when it does some specific

210
00:12:56,960 --> 00:12:59,750
exception not related to our technique

211
00:12:59,750 --> 00:13:04,910
so we will end the transaction but if it

212
00:13:04,910 --> 00:13:09,590
is to start the process we set but it's

213
00:13:09,590 --> 00:13:14,870
paid to read only if this it's SS is for

214
00:13:14,870 --> 00:13:17,090
this kind of page there's no problem so

215
00:13:17,090 --> 00:13:21,680
without on we we will give this page

216
00:13:21,680 --> 00:13:24,470
back to it so that it can continue its

217
00:13:24,470 --> 00:13:31,730
work so basically this idea has already

218
00:13:31,730 --> 00:13:37,760
been applied to simple process running

219
00:13:37,760 --> 00:13:44,990
on the metal bare metal machine without

220
00:13:44,990 --> 00:13:49,940
any operating system in 1911 but and

221
00:13:49,940 --> 00:13:53,890
there is also another word that

222
00:13:53,890 --> 00:13:58,130
another's PhD student is doing to part

223
00:13:58,130 --> 00:14:00,050
this technique to operating system and

224
00:14:00,050 --> 00:14:02,060
but presenting to know what we are

225
00:14:02,060 --> 00:14:03,680
trying is that we are essentially trying

226
00:14:03,680 --> 00:14:09,080
to do is to try this concept on virtual

227
00:14:09,080 --> 00:14:11,270
machines apart so that we will see if we

228
00:14:11,270 --> 00:14:14,810
can do all this stuff in the kernel

229
00:14:14,810 --> 00:14:18,610
while supporting virtual machine service

230
00:14:18,610 --> 00:14:21,610
so

231
00:14:23,290 --> 00:14:27,680
one concern is about how we stop the

232
00:14:27,680 --> 00:14:33,230
processing element we said that we have

233
00:14:33,230 --> 00:14:37,610
called time constrain so if the process

234
00:14:37,610 --> 00:14:38,450
brilliant

235
00:14:38,450 --> 00:14:42,350
release release recipient from each

236
00:14:42,350 --> 00:14:46,130
school that's okay from its own that may

237
00:14:46,130 --> 00:14:48,050
happen when we project make a system

238
00:14:48,050 --> 00:14:49,370
call for example

239
00:14:49,370 --> 00:14:52,040
so we'll start we'll we'll stop the

240
00:14:52,040 --> 00:14:53,060
processing element

241
00:14:53,060 --> 00:14:57,320
well it's false it's once to assess a

242
00:14:57,320 --> 00:15:01,520
new page that he needs the color to give

243
00:15:01,520 --> 00:15:06,860
it a pager memory manager to give it so

244
00:15:06,860 --> 00:15:08,840
we will start with result we'll stop

245
00:15:08,840 --> 00:15:11,830
with the processing element but it

246
00:15:11,830 --> 00:15:14,230
represents a lot of work without

247
00:15:14,230 --> 00:15:19,390
releasing the CPU well the time limit is

248
00:15:19,390 --> 00:15:23,510
assistive we have to stop we also have

249
00:15:23,510 --> 00:15:26,000
to stop the process and this we do it by

250
00:15:26,000 --> 00:15:29,530
issuing a tamper interrupt so that we

251
00:15:29,530 --> 00:15:34,280
could hold in the time limit so that is

252
00:15:34,280 --> 00:15:39,380
basically the idea how we manage to make

253
00:15:39,380 --> 00:15:41,840
our processing element not a seed in the

254
00:15:41,840 --> 00:15:47,810
country time limit so when we applied to

255
00:15:47,810 --> 00:15:51,050
join node we are essentially interested

256
00:15:51,050 --> 00:15:53,300
in three question

257
00:15:53,300 --> 00:15:57,830
the first is is it possible to do it

258
00:15:57,830 --> 00:16:01,420
like that for virtual machine running on

259
00:16:01,420 --> 00:16:06,560
a microkernel sister like that thus

260
00:16:06,560 --> 00:16:08,720
ensuring we will also want to measure

261
00:16:08,720 --> 00:16:13,040
the performance impact that this fashion

262
00:16:13,040 --> 00:16:15,830
of as repeating for a process will have

263
00:16:15,830 --> 00:16:20,860
on this kind of system and also we are

264
00:16:20,860 --> 00:16:26,270
we will try to reduce too short to

265
00:16:26,270 --> 00:16:28,670
shorten the time for granting time until

266
00:16:28,670 --> 00:16:34,180
we can thank the machine

267
00:16:34,180 --> 00:16:38,040
maximum time that will we cannot accede

268
00:16:38,040 --> 00:16:41,860
that is maybe we will find 10 micro

269
00:16:41,860 --> 00:16:45,190
second all our operational transaction

270
00:16:45,190 --> 00:16:49,170
must hold on in 10 microseconds or maybe

271
00:16:49,170 --> 00:16:52,990
100 micro so we don't know so when will

272
00:16:52,990 --> 00:16:57,550
be as you as the size in the system will

273
00:16:57,550 --> 00:17:00,070
find what is the maximum time limit that

274
00:17:00,070 --> 00:17:04,179
we can hold so that all the system may

275
00:17:04,179 --> 00:17:08,559
continue run in normal so basically that

276
00:17:08,559 --> 00:17:14,020
have 5 3 question now we cannot answer

277
00:17:14,020 --> 00:17:16,510
this question because we work is not

278
00:17:16,510 --> 00:17:22,660
fully completed but we have some we

279
00:17:22,660 --> 00:17:25,209
already have some result that give us

280
00:17:25,209 --> 00:17:28,720
some insight of what the system may be

281
00:17:28,720 --> 00:17:34,929
after it will finish firstly we noticed

282
00:17:34,929 --> 00:17:39,100
that well that is just the chronograph

283
00:17:39,100 --> 00:17:45,309
showing how the process education is is

284
00:17:45,309 --> 00:17:49,840
go is the green so in the first time

285
00:17:49,840 --> 00:17:54,640
slot we have user process and as some at

286
00:17:54,640 --> 00:17:58,059
some time it will fault invokana

287
00:17:58,059 --> 00:18:03,040
it will be stopped by chamber and the

288
00:18:03,040 --> 00:18:05,500
kernel will take action to restart the

289
00:18:05,500 --> 00:18:08,200
same process for the second time and

290
00:18:08,200 --> 00:18:11,440
after the second time establish second

291
00:18:11,440 --> 00:18:14,230
education finished we also fall down in

292
00:18:14,230 --> 00:18:16,240
the kernel sir and we can take action to

293
00:18:16,240 --> 00:18:19,770
make for comparison and verification and

294
00:18:19,770 --> 00:18:23,559
commitment so we noticed that with

295
00:18:23,559 --> 00:18:26,530
second as the question is shorter than

296
00:18:26,530 --> 00:18:28,780
the first as a question that is normal

297
00:18:28,780 --> 00:18:31,179
because after the first execution we

298
00:18:31,179 --> 00:18:33,640
already know all the memory page that

299
00:18:33,640 --> 00:18:37,059
the process will modify so during the

300
00:18:37,059 --> 00:18:38,559
second as the question there is known

301
00:18:38,559 --> 00:18:42,340
into the process will not have to fault

302
00:18:42,340 --> 00:18:45,350
also on this page demand

303
00:18:45,350 --> 00:18:48,019
so we already know all the page that

304
00:18:48,019 --> 00:18:51,919
will be modified so that is why the

305
00:18:51,919 --> 00:18:54,380
second as the question is shorter than

306
00:18:54,380 --> 00:18:59,809
the first so that is pokey but what we

307
00:18:59,809 --> 00:19:04,580
also remain that there the time we use

308
00:19:04,580 --> 00:19:08,389
to retain the screen in the kennel

309
00:19:08,389 --> 00:19:10,250
jewelry between the first as the

310
00:19:10,250 --> 00:19:12,409
question will signal as we changes as 3

311
00:19:12,409 --> 00:19:15,970
million well our measurement show that

312
00:19:15,970 --> 00:19:19,429
we can spend up to 80 percent of the

313
00:19:19,429 --> 00:19:23,240
time doing so then doing some work in

314
00:19:23,240 --> 00:19:25,990
reckoner between these two execution and

315
00:19:25,990 --> 00:19:29,090
after we are the investigate will find

316
00:19:29,090 --> 00:19:31,730
that it's essentially about the cache

317
00:19:31,730 --> 00:19:34,580
flashing now the our cash machine

318
00:19:34,580 --> 00:19:38,840
mechanic takes a lot of time to to

319
00:19:38,840 --> 00:19:43,850
finish so that means that in the future

320
00:19:43,850 --> 00:19:46,190
work would have to find a better way to

321
00:19:46,190 --> 00:19:49,549
optimize this cache flashing mechanism

322
00:19:49,549 --> 00:19:54,169
so about some performance impact impact

323
00:19:54,169 --> 00:19:57,529
what we are we we are projecting to do

324
00:19:57,529 --> 00:20:00,110
is to run some benchmark after the

325
00:20:00,110 --> 00:20:02,960
system will be fully completely finished

326
00:20:02,960 --> 00:20:06,799
but now because it is it is an ongoing

327
00:20:06,799 --> 00:20:10,399
work we cannot make the performance

328
00:20:10,399 --> 00:20:13,610
impact with great precision so what we

329
00:20:13,610 --> 00:20:17,929
do is to approximate for normal denote

330
00:20:17,929 --> 00:20:21,559
as a question with with the second one

331
00:20:21,559 --> 00:20:24,919
since the second one is is as recruited

332
00:20:24,919 --> 00:20:30,799
without any page fault it may be

333
00:20:30,799 --> 00:20:34,370
considered as Azrael normal G note

334
00:20:34,370 --> 00:20:37,070
execution so what we do is to take the

335
00:20:37,070 --> 00:20:40,970
overall time spent doing the same with

336
00:20:40,970 --> 00:20:44,779
to execution and we divide it to and by

337
00:20:44,779 --> 00:20:47,750
the second as a question time to find an

338
00:20:47,750 --> 00:20:50,539
approximate approximation of the

339
00:20:50,539 --> 00:20:52,639
performance penalty that we have with

340
00:20:52,639 --> 00:20:55,850
this kind of system so that is very

341
00:20:55,850 --> 00:20:57,440
simple formula we use

342
00:20:57,440 --> 00:21:04,190
and we find that the for the worst case

343
00:21:04,190 --> 00:21:09,040
that happens during the initialization

344
00:21:09,040 --> 00:21:13,000
system booting time period we find that

345
00:21:13,000 --> 00:21:16,730
the other hot other head the other head

346
00:21:16,730 --> 00:21:24,290
will go up to 34 hundred percent that is

347
00:21:24,290 --> 00:21:29,750
very very huge but if we will remove the

348
00:21:29,750 --> 00:21:33,140
time spent in cash flashing we find that

349
00:21:33,140 --> 00:21:37,930
there is a more acceptable performance

350
00:21:37,930 --> 00:21:42,980
overhead so when we remove this this

351
00:21:42,980 --> 00:21:45,380
time we find that the second the first

352
00:21:45,380 --> 00:21:52,130
as a cushion can take on only 40% per

353
00:21:52,130 --> 00:21:57,680
second as the question is about 13% very

354
00:21:57,680 --> 00:22:00,410
start time between the first equation

355
00:22:00,410 --> 00:22:03,710
and the second as the question is about

356
00:22:03,710 --> 00:22:08,330
13% and the verification time is only

357
00:22:08,330 --> 00:22:14,750
about 28% so but with that we can say

358
00:22:14,750 --> 00:22:16,880
that when we will optimize the cash

359
00:22:16,880 --> 00:22:20,770
system there will be more acceptable

360
00:22:20,770 --> 00:22:27,940
performance impact so the same thing is

361
00:22:27,940 --> 00:22:35,660
when we stop the the old path was when

362
00:22:35,660 --> 00:22:38,840
the process released the CPU from its

363
00:22:38,840 --> 00:22:42,050
own but we also want to know if we stop

364
00:22:42,050 --> 00:22:46,370
the process with ten interrupts what

365
00:22:46,370 --> 00:22:50,920
will be the performance back and it is

366
00:22:50,920 --> 00:22:54,800
the same approximately the same all the

367
00:22:54,800 --> 00:22:58,790
time was spent in vataj flashing and if

368
00:22:58,790 --> 00:23:03,580
we remove a cash flashing we have

369
00:23:03,680 --> 00:23:09,080
this kind of rough traffic and the other

370
00:23:09,080 --> 00:23:12,860
heart is very very less here it is about

371
00:23:12,860 --> 00:23:16,460
only 200 percent that is two times the

372
00:23:16,460 --> 00:23:22,190
normal G note as a crucian so and maybe

373
00:23:22,190 --> 00:23:26,870
I I must also say that when we have to

374
00:23:26,870 --> 00:23:30,950
stop the process since we don't know we

375
00:23:30,950 --> 00:23:33,530
have when we stop the process we have to

376
00:23:33,530 --> 00:23:36,500
know at which instruction it's at its

377
00:23:36,500 --> 00:23:39,500
stops so what we do now is to count the

378
00:23:39,500 --> 00:23:42,560
number of instruction and for this we

379
00:23:42,560 --> 00:23:46,640
use the internal construction contest

380
00:23:46,640 --> 00:23:54,080
eacher that as this in every CPU for

381
00:23:54,080 --> 00:23:56,990
what we are doing we see that Intel

382
00:23:56,990 --> 00:23:59,330
instruction contains not so precise of

383
00:23:59,330 --> 00:24:01,910
the some parameter that we must take

384
00:24:01,910 --> 00:24:05,600
into account to train with the exact

385
00:24:05,600 --> 00:24:09,490
number of instruction but if we use

386
00:24:09,490 --> 00:24:12,140
instead of using internal if we use I am

387
00:24:12,140 --> 00:24:15,830
the AMD it is more pieces that is what

388
00:24:15,830 --> 00:24:19,130
we noticed now but we are working on

389
00:24:19,130 --> 00:24:24,440
Intel CPU for now and all the problem

390
00:24:24,440 --> 00:24:26,440
that we have now it is about some

391
00:24:26,440 --> 00:24:29,360
randomly page for that happen after the

392
00:24:29,360 --> 00:24:33,820
system is fully initialized we don't

393
00:24:33,820 --> 00:24:38,960
have we cannot we don't know how this

394
00:24:38,960 --> 00:24:41,270
page fault appear now but in the future

395
00:24:41,270 --> 00:24:43,400
work will also investigate those

396
00:24:43,400 --> 00:24:47,770
problems so

397
00:24:47,809 --> 00:24:51,629
essentially what is going we are going

398
00:24:51,629 --> 00:24:54,929
to do in Venice future but is to try to

399
00:24:54,929 --> 00:24:59,519
understand make faithful calls optimized

400
00:24:59,519 --> 00:25:06,359
for cash blessings system and try to

401
00:25:06,359 --> 00:25:09,899
finish up with virtual machine support

402
00:25:09,899 --> 00:25:15,629
so that we can handle more heavy tasks I

403
00:25:15,629 --> 00:25:22,679
think like Ronnie he slit his leash

404
00:25:22,679 --> 00:25:25,830
scenario with linnaeus running in

405
00:25:25,830 --> 00:25:30,659
general running on a special Nova Canal

406
00:25:30,659 --> 00:25:32,339
w DW

407
00:25:32,339 --> 00:25:36,089
in future Inuvik honest so that is

408
00:25:36,089 --> 00:25:38,729
restate the current state of the word it

409
00:25:38,729 --> 00:25:42,029
is not all already finished totally

410
00:25:42,029 --> 00:25:46,339
finished but that is where we are now so

411
00:25:46,339 --> 00:25:50,969
if you have any remarks or question I'm

412
00:25:50,969 --> 00:25:55,729
at the end of presentation

413
00:25:57,770 --> 00:26:04,139
[Applause]

414
00:26:07,120 --> 00:26:49,270
I don't that your single event now what

415
00:26:49,270 --> 00:26:52,450
we are winning only to support users and

416
00:26:52,450 --> 00:26:57,160
process after that I think protecting

417
00:26:57,160 --> 00:26:59,950
the kernel will be because we have all

418
00:26:59,950 --> 00:27:01,600
the kernel will introduce some

419
00:27:01,600 --> 00:27:04,630
redundancy code in the kernel that so

420
00:27:04,630 --> 00:27:08,800
that we can make this SEO detection but

421
00:27:08,800 --> 00:27:13,110
now all our focus we are focusing on

422
00:27:13,110 --> 00:27:18,330
user process support

423
00:27:27,340 --> 00:27:31,130
no I don't think that this will be a big

424
00:27:31,130 --> 00:27:34,000
deal because now all the problem is

425
00:27:34,000 --> 00:27:39,019
supporting any process without knowing

426
00:27:39,019 --> 00:27:41,480
what is what the process is doing but we

427
00:27:41,480 --> 00:27:42,019
colonel

428
00:27:42,019 --> 00:27:44,480
we know what we know the colonel we know

429
00:27:44,480 --> 00:27:47,090
the code of canon so it's all it will be

430
00:27:47,090 --> 00:27:52,250
to make some special artists eight

431
00:27:52,250 --> 00:27:54,890
points in the candle so that we can roll

432
00:27:54,890 --> 00:27:58,130
back and bring forth and back between

433
00:27:58,130 --> 00:28:24,440
the candle code that will not be some

434
00:28:24,440 --> 00:28:26,299
studies have shown that this kind of

435
00:28:26,299 --> 00:28:30,260
error may happen with probability laws

436
00:28:30,260 --> 00:28:35,059
of Poisson probability law and but that

437
00:28:35,059 --> 00:28:38,830
is why we are limiting in return so that

438
00:28:38,830 --> 00:28:43,549
the time constraint is dead to to

439
00:28:43,549 --> 00:28:46,370
guarantee that there is only one error

440
00:28:46,370 --> 00:28:50,090
because if we have to error we cannot

441
00:28:50,090 --> 00:28:53,899
manage to see because if we have to

442
00:28:53,899 --> 00:28:58,299
error to education way we may not be

443
00:28:58,299 --> 00:29:02,559
valid for comparison so the main

444
00:29:02,559 --> 00:29:06,409
criteria is to have only one error so

445
00:29:06,409 --> 00:29:08,559
and that is why we have we may be

446
00:29:08,559 --> 00:29:13,450
constrained by certain limit of 10 yes

447
00:29:13,450 --> 00:29:16,039
this kind of error they are not regular

448
00:29:16,039 --> 00:29:18,380
that cannot happen regularly they took

449
00:29:18,380 --> 00:29:21,799
that don't happen regularly but in some

450
00:29:21,799 --> 00:29:24,320
time constraint we've made this word

451
00:29:24,320 --> 00:29:29,330
that maybe for 10 microseconds or

452
00:29:29,330 --> 00:29:34,700
something on a 100 microseconds we may

453
00:29:34,700 --> 00:29:37,470
be guaranteed to have only one

454
00:29:37,470 --> 00:29:42,269
so in this kind of situation we may use

455
00:29:42,269 --> 00:29:46,429
this technique to detect and correct

456
00:29:46,429 --> 00:30:02,639
this kind of error thank you yeah yeah

457
00:30:02,639 --> 00:30:06,240
that is that that is what we will do

458
00:30:06,240 --> 00:30:09,659
after a twist final state when we'll

459
00:30:09,659 --> 00:30:12,740
finish we'll try to inject some

460
00:30:12,740 --> 00:30:16,100
experimental error to see how the system

461
00:30:16,100 --> 00:30:22,590
resist this kind of error yeah it's not

462
00:30:22,590 --> 00:30:24,450
for me possibly but from Yakutia mom

463
00:30:24,450 --> 00:30:26,610
who's looking at the live stream and he

464
00:30:26,610 --> 00:30:28,110
wants to know if you have looked into

465
00:30:28,110 --> 00:30:30,629
the other mechanisms for for detection

466
00:30:30,629 --> 00:30:33,149
and recovery features like they do in

467
00:30:33,149 --> 00:30:37,729
the Solaris fault management framework

468
00:30:47,090 --> 00:30:53,210
are you talking about this light I don't

469
00:30:53,210 --> 00:30:53,870
know exactly

470
00:30:53,870 --> 00:30:55,610
it just wants to know if you have to

471
00:30:55,610 --> 00:30:57,320
look to do the hardware features to

472
00:30:57,320 --> 00:30:59,210
detect failures like national check

473
00:30:59,210 --> 00:31:07,280
objection okay now now we don't use this

474
00:31:07,280 --> 00:31:09,710
kind of which a matching check reception

475
00:31:09,710 --> 00:31:13,460
or no for what we had now we don't

476
00:31:13,460 --> 00:31:18,040
consider this kind of exception

477
00:31:19,030 --> 00:31:21,740
we are switched

478
00:31:21,740 --> 00:31:23,750
we are officially as interested in

479
00:31:23,750 --> 00:31:27,790
accepting in error that may happen and

480
00:31:27,790 --> 00:31:37,940
the processor is not aware that we are

481
00:31:37,940 --> 00:31:40,730
interested in this kind of error that

482
00:31:40,730 --> 00:31:46,210
may corrupt the content of a register or

483
00:31:46,210 --> 00:31:52,100
a single memory pad in the CPU without

484
00:31:52,100 --> 00:31:55,780
the CPU knowing that this kind of error

485
00:31:55,780 --> 00:32:04,910
has happened but if there is some error

486
00:32:04,910 --> 00:32:07,730
that corruptive a system and the CPU is

487
00:32:07,730 --> 00:32:15,680
maybe make that V information about yeah

488
00:32:15,680 --> 00:32:18,110
very much in check exception I think

489
00:32:18,110 --> 00:32:24,020
that will be very easy to to to hold

490
00:32:24,020 --> 00:32:29,150
because for this kind of exception if it

491
00:32:29,150 --> 00:32:30,290
is recoverable

492
00:32:30,290 --> 00:32:36,830
it has not break the CPU we can take

493
00:32:36,830 --> 00:32:39,830
action to recover but the kind of error

494
00:32:39,830 --> 00:32:42,650
we are interested here is those soft

495
00:32:42,650 --> 00:32:44,960
error that may happen without the CPU

496
00:32:44,960 --> 00:32:47,750
knowing what is that Dell there is a an

497
00:32:47,750 --> 00:32:53,690
error those Arab for example seu Arab

498
00:32:53,690 --> 00:32:56,960
that may happen

499
00:32:56,960 --> 00:33:02,580
due to graduation in the space as kind

500
00:33:02,580 --> 00:33:06,990
of stuff because it is not conference in

501
00:33:06,990 --> 00:33:08,820
fall specialization

502
00:33:08,820 --> 00:33:11,760
I do we are not going to talk about this

503
00:33:11,760 --> 00:33:17,180
kind of right here okay

