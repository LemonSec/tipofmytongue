1
00:00:04,890 --> 00:00:10,600
good afternoon my name is Maria De Sica

2
00:00:10,600 --> 00:00:14,050
I came from a new versity in PI's and I

3
00:00:14,050 --> 00:00:17,500
walk on the Jeep active for those who

4
00:00:17,500 --> 00:00:19,630
don't know Deepak I will do a quick

5
00:00:19,630 --> 00:00:22,470
presentation then and we'll talk about

6
00:00:22,470 --> 00:00:27,520
the key tools in G pack and last news

7
00:00:27,520 --> 00:00:29,740
and then I will talk about the delivery

8
00:00:29,740 --> 00:00:33,340
of VR 360 videos using tiles and they

9
00:00:33,340 --> 00:00:34,660
will show you some demos there at the

10
00:00:34,660 --> 00:00:42,010
end so what is Deepak Deepak is an open

11
00:00:42,010 --> 00:00:45,729
source a multimedia framework it's under

12
00:00:45,729 --> 00:00:51,510
the LGPL license a hosted on get up and

13
00:00:51,510 --> 00:00:55,809
can be used in all desktops Mobile's iOS

14
00:00:55,809 --> 00:01:00,970
Android and embedded Linux so what do we

15
00:01:00,970 --> 00:01:01,869
have in G pakka

16
00:01:01,869 --> 00:01:07,540
but basically two sets of tools one tool

17
00:01:07,540 --> 00:01:15,939
which you may know mp4 box which is we

18
00:01:15,939 --> 00:01:18,969
which we are happy to call it all why

19
00:01:18,969 --> 00:01:22,920
the reference for mp4 files manipulation

20
00:01:22,920 --> 00:01:27,820
it does pick - many people in pic -

21
00:01:27,820 --> 00:01:31,570
generation for mp4 files but not only we

22
00:01:31,570 --> 00:01:35,350
can do an encryption of your files you

23
00:01:35,350 --> 00:01:38,049
can concatenate files so you can do

24
00:01:38,049 --> 00:01:43,060
segmentation we can also add streams

25
00:01:43,060 --> 00:01:44,799
remove streams Ida terms the movie terms

26
00:01:44,799 --> 00:01:45,729
and things like that

27
00:01:45,729 --> 00:01:50,499
we have also play which is a bit more

28
00:01:50,499 --> 00:01:54,159
than a simple audio video player it's a

29
00:01:54,159 --> 00:01:55,899
half way between a player and the

30
00:01:55,899 --> 00:02:00,429
browser you have support for CD 2d

31
00:02:00,429 --> 00:02:05,979
graphics we can use any protocol that

32
00:02:05,979 --> 00:02:10,990
you want including HTTP you can use

33
00:02:10,990 --> 00:02:15,549
almost any codec we use a fan peg we

34
00:02:15,549 --> 00:02:17,860
have support for open HP VC

35
00:02:17,860 --> 00:02:23,560
and scalable extension and I forgot to

36
00:02:23,560 --> 00:02:26,860
say that G pack is a research oriented

37
00:02:26,860 --> 00:02:33,100
the project here we have some some

38
00:02:33,100 --> 00:02:36,640
latest news so now we have a public test

39
00:02:36,640 --> 00:02:39,940
first sector we have support for Raj

40
00:02:39,940 --> 00:02:43,390
extensions for ABC and eg BC we've

41
00:02:43,390 --> 00:02:49,230
improved ttml support we have now the

42
00:02:49,410 --> 00:02:53,080
support for hardware decoding in OS X

43
00:02:53,080 --> 00:02:59,250
iOS and Android and we walk into a brush

44
00:02:59,250 --> 00:03:04,510
to support more P iff and smoothing

45
00:03:04,510 --> 00:03:08,430
streaming files file format and a

46
00:03:08,430 --> 00:03:11,640
hardware acceleration in the encryption

47
00:03:11,640 --> 00:03:14,320
we have also a lot of interesting

48
00:03:14,320 --> 00:03:17,950
projects which you can check in our

49
00:03:17,950 --> 00:03:24,250
github I will talk to you now about the

50
00:03:24,250 --> 00:03:29,230
delivery of the RT 60 content using ties

51
00:03:29,230 --> 00:03:34,420
so as you may know to play a t6 TV do it

52
00:03:34,420 --> 00:03:42,070
while at least a 4k but some claim to

53
00:03:42,070 --> 00:03:45,370
2020 k4 achieved 4k field of view

54
00:03:45,370 --> 00:03:48,370
resolution like we seen in the

55
00:03:48,370 --> 00:03:55,090
illustration and to achieve this we have

56
00:03:55,090 --> 00:03:58,209
the necessity to reduce the bandwidth we

57
00:03:58,209 --> 00:04:01,739
can do this by act by acting on the

58
00:04:01,739 --> 00:04:06,700
compression compression into can do a

59
00:04:06,700 --> 00:04:09,130
compression of 2d video after some

60
00:04:09,130 --> 00:04:12,810
projection or some chafing and packing

61
00:04:12,810 --> 00:04:16,899
also we can act in the delivery part we

62
00:04:16,899 --> 00:04:18,880
can deliver a part of the video based

63
00:04:18,880 --> 00:04:23,440
based on the on a viewport and put a lot

64
00:04:23,440 --> 00:04:26,160
quite outside the outside the viewport

65
00:04:26,160 --> 00:04:28,510
what here we have the facility to

66
00:04:28,510 --> 00:04:29,899
reactor

67
00:04:29,899 --> 00:04:35,659
quickly to motion here we have some

68
00:04:35,659 --> 00:04:40,999
examples of perfections have the simple

69
00:04:40,999 --> 00:04:45,289
one quaked angular projection and equi

70
00:04:45,289 --> 00:04:46,999
rectangular projection with the specific

71
00:04:46,999 --> 00:04:49,729
packing we just take the top and the

72
00:04:49,729 --> 00:04:51,860
bottom of the video where we don't need

73
00:04:51,860 --> 00:04:54,559
a lot of precision and put it on the top

74
00:04:54,559 --> 00:04:59,209
we can do also a coupe map projection

75
00:04:59,209 --> 00:05:02,240
with the with packing so we think videos

76
00:05:02,240 --> 00:05:05,240
will probably be packed and compressed

77
00:05:05,240 --> 00:05:09,499
based on a rectangular region and his

78
00:05:09,499 --> 00:05:14,360
noticed for for tiling so the principle

79
00:05:14,360 --> 00:05:17,719
of tiling is quite simple we just cut

80
00:05:17,719 --> 00:05:21,529
the video in two different parts and we

81
00:05:21,529 --> 00:05:25,699
have the possibility to do to play at

82
00:05:25,699 --> 00:05:28,429
which staff different quality in h pad

83
00:05:28,429 --> 00:05:32,959
we can also have the possibility to play

84
00:05:32,959 --> 00:05:37,599
just some tiles with just only one

85
00:05:39,309 --> 00:05:43,009
so in MPEG - we have a notion called is

86
00:05:43,009 --> 00:05:46,369
Rd which is which represent the 3d

87
00:05:46,369 --> 00:05:49,519
relationship between videos it's in the

88
00:05:49,519 --> 00:05:52,519
source content its codec agnostic

89
00:05:52,519 --> 00:05:55,669
there is no assumption of tyree encoding

90
00:05:55,669 --> 00:05:58,189
tools and can be used with multiple

91
00:05:58,189 --> 00:06:01,490
independent videos it's already be used

92
00:06:01,490 --> 00:06:04,579
for projects projected videos but there

93
00:06:04,579 --> 00:06:07,479
is some discussion to extended to 3d

94
00:06:07,479 --> 00:06:14,139
relationship in our player mp4 client

95
00:06:14,139 --> 00:06:19,879
which we have support for for two

96
00:06:19,879 --> 00:06:22,990
different adaptation here we can see

97
00:06:22,990 --> 00:06:28,699
using the our GUI we can see here

98
00:06:28,699 --> 00:06:32,360
different tiles in this adaptation we

99
00:06:32,360 --> 00:06:36,589
have actually for this example we have

100
00:06:36,589 --> 00:06:39,169
actually nine videos nine separate

101
00:06:39,169 --> 00:06:42,880
videos so which means nine

102
00:06:42,880 --> 00:06:47,170
decoders as we can see here different

103
00:06:47,170 --> 00:06:53,920
buffers and we have also and other

104
00:06:53,920 --> 00:06:57,520
adaptations which called each VC motion

105
00:06:57,520 --> 00:07:01,240
constrainted tile-based adaptation in

106
00:07:01,240 --> 00:07:03,930
this adaptation we have just one video

107
00:07:03,930 --> 00:07:08,410
so one decoder and here we can see

108
00:07:08,410 --> 00:07:12,270
different types nine times

109
00:07:12,270 --> 00:07:16,120
with the different SRD and qualities

110
00:07:16,120 --> 00:07:21,310
also so for this for this second

111
00:07:21,310 --> 00:07:25,500
adaptation after tighten we encode the

112
00:07:25,500 --> 00:07:30,130
the video is in a motion constrained hvc

113
00:07:30,130 --> 00:07:32,880
encoder and after encapsulation we have

114
00:07:32,880 --> 00:07:36,840
the tile tracks and the tile by stock

115
00:07:36,840 --> 00:07:40,000
after that within you can generate MPD

116
00:07:40,000 --> 00:07:44,530
using a MPD generator to have the MPD

117
00:07:44,530 --> 00:07:48,760
file and the mp4 tyler segments then you

118
00:07:48,760 --> 00:07:53,860
can play it with with our play for

119
00:07:53,860 --> 00:07:56,500
example using HTTP requests you can

120
00:07:56,500 --> 00:07:59,350
choose any tile that you want to to play

121
00:07:59,350 --> 00:08:04,450
as I said before just one type using

122
00:08:04,450 --> 00:08:07,600
this link you can have the whole

123
00:08:07,600 --> 00:08:10,510
description of this adaptation and how

124
00:08:10,510 --> 00:08:13,960
to encode how to create files how to

125
00:08:13,960 --> 00:08:22,690
play files etc so as we don't have now a

126
00:08:22,690 --> 00:08:25,870
standard to choose which quality which

127
00:08:25,870 --> 00:08:31,630
which tile to follow we have some

128
00:08:31,630 --> 00:08:34,900
streaming strategies configurations

129
00:08:34,900 --> 00:08:37,840
finish strategies that you can configure

130
00:08:37,840 --> 00:08:41,080
eight-hour player before client we have

131
00:08:41,080 --> 00:08:44,440
a lot of strategies here we have for

132
00:08:44,440 --> 00:08:47,080
only phone priority row based purity

133
00:08:47,080 --> 00:08:48,820
center based purity or current based

134
00:08:48,820 --> 00:08:56,070
priority so as I said we don't have a

135
00:08:56,070 --> 00:09:03,330
Thunder but it can become it can be used

136
00:09:03,330 --> 00:09:07,440
with the gas trucker or a head tracker

137
00:09:07,440 --> 00:09:11,190
for example then after this I will show

138
00:09:11,190 --> 00:09:15,450
you a demonstration where we do an

139
00:09:15,450 --> 00:09:18,810
adaptation in function of the of the

140
00:09:18,810 --> 00:09:21,750
viewport so we will have the highest

141
00:09:21,750 --> 00:09:25,410
quality on the tile visible the visible

142
00:09:25,410 --> 00:09:28,770
type and after that I will show you a

143
00:09:28,770 --> 00:09:32,400
demonstration using the on station of

144
00:09:32,400 --> 00:09:37,800
the implementation of vampy of hard work

145
00:09:37,800 --> 00:09:41,490
the code the decoding using media codec

146
00:09:41,490 --> 00:09:46,220
media codec in android

147
00:09:53,810 --> 00:09:57,740
so here in implicit Clint we have this

148
00:09:57,740 --> 00:10:02,949
beautiful tool we can check which

149
00:10:02,949 --> 00:10:05,779
decoder is used we have the possibility

150
00:10:05,779 --> 00:10:12,069
to to change the bandwidth we have also

151
00:10:12,069 --> 00:10:16,430
we can see the quality's different keys

152
00:10:16,430 --> 00:10:20,680
and now here we have the adapt Asian as

153
00:10:20,680 --> 00:10:26,740
you you can see the quality will change

154
00:10:26,740 --> 00:10:29,930
we it's not very visible but the quality

155
00:10:29,930 --> 00:10:33,879
children fraction of the of the viewport

156
00:10:33,879 --> 00:10:38,449
here we have a demonstration actually we

157
00:10:38,449 --> 00:10:42,470
we under just the tile which should be

158
00:10:42,470 --> 00:10:47,410
visible and we can see also the

159
00:10:47,410 --> 00:10:51,019
adaptation of the quality in function of

160
00:10:51,019 --> 00:10:57,290
the viewport hey it was very very

161
00:10:57,290 --> 00:11:07,490
visible so we don't render without under

162
00:11:07,490 --> 00:11:10,389
the other PI's and here we have the

163
00:11:10,389 --> 00:11:14,269
demonstration of the mediacodec the

164
00:11:14,269 --> 00:11:16,240
difference between the mediacodec

165
00:11:16,240 --> 00:11:19,790
hardware and the software decoder we use

166
00:11:19,790 --> 00:11:21,490
ffmpeg

167
00:11:21,490 --> 00:11:27,470
we can see here that the FS does not

168
00:11:27,470 --> 00:11:32,779
exceed to the 16 frames per second we

169
00:11:32,779 --> 00:11:35,920
have a lot of drops and one frame can be

170
00:11:35,920 --> 00:11:41,089
decoded in more than 100 millisecond but

171
00:11:41,089 --> 00:11:43,339
in the other hand we have the media

172
00:11:43,339 --> 00:11:49,689
codec which can decode the one frame in

173
00:11:49,689 --> 00:11:54,459
20 millisecond and have a constant space

174
00:11:54,459 --> 00:12:00,040
equal to 25 with no drops

175
00:12:03,580 --> 00:12:07,430
we can see also the do cut in the video

176
00:12:07,430 --> 00:12:13,000
and it's quite a similar idea one

177
00:12:18,520 --> 00:12:27,570
I forgot to say that ICI is an it's an

178
00:12:27,570 --> 00:12:36,520
4k video resolution thank you and I will

179
00:12:36,520 --> 00:12:37,420
be happy to answer

180
00:12:37,420 --> 00:13:19,840
I understand which part I think it's

181
00:13:19,840 --> 00:13:31,740
already in the in center which I think

182
00:13:40,020 --> 00:13:44,350
your question is if we check the

183
00:13:44,350 --> 00:13:51,060
statistics using the coop map projection

184
00:13:51,060 --> 00:13:55,920
no it is not that doesn't happen

185
00:14:35,170 --> 00:14:38,809
yes did actually

186
00:14:38,809 --> 00:14:43,569
the question is is if we did some some

187
00:14:43,569 --> 00:14:47,119
statistic to to see if we have any

188
00:14:47,119 --> 00:14:51,610
improvement using tile using tile in

189
00:14:51,610 --> 00:14:55,009
encoding videos using tile using the

190
00:14:55,009 --> 00:14:59,689
constant tile constant motion time this

191
00:14:59,689 --> 00:15:04,489
is yes we did this but there is no a lot

192
00:15:04,489 --> 00:15:07,999
a lot of difference you but you just

193
00:15:07,999 --> 00:15:14,299
need to use 25 tiles and there is quite

194
00:15:14,299 --> 00:15:16,569
good

195
00:15:34,860 --> 00:15:38,019
[Music]

196
00:16:51,970 --> 00:16:55,340
but in the encoding we have we encode

197
00:16:55,340 --> 00:16:57,830
all all the time with all the queries is

198
00:16:57,830 --> 00:17:00,770
just when we play the different types

199
00:17:00,770 --> 00:17:05,319
when we when we do the adaptation

200
00:17:12,240 --> 00:17:16,319
if we supporter as the question is that

201
00:17:16,319 --> 00:17:19,260
if we support using mp4 client which we

202
00:17:19,260 --> 00:17:24,449
support the all the the the devices if

203
00:17:24,449 --> 00:17:29,010
we can actually in Android we have the

204
00:17:29,010 --> 00:17:35,490
milk view support HVC yes and we can use

205
00:17:35,490 --> 00:17:41,310
it with with Google cardboard yes we

206
00:17:41,310 --> 00:17:43,470
have we can we can play actually we can

207
00:17:43,470 --> 00:17:46,140
play all the we support achieve

208
00:17:46,140 --> 00:17:49,020
asymmetry view then you can use to play

209
00:17:49,020 --> 00:17:53,100
a meet review a file you used in side by

210
00:17:53,100 --> 00:17:56,630
side for example or you play it with in

211
00:17:56,630 --> 00:18:03,810
3d screen we tested it with five five

212
00:18:03,810 --> 00:18:09,150
use a 5 MP 4 5 8 5 use and we can see we

213
00:18:09,150 --> 00:18:12,200
support it actually

214
00:18:15,170 --> 00:18:18,299
[Music]

215
00:18:47,110 --> 00:18:48,880
the question was what is the difference

216
00:18:48,880 --> 00:18:53,440
between between the first adaptation and

217
00:18:53,440 --> 00:18:58,230
the second adaptation I adopted a video

218
00:18:58,230 --> 00:19:03,520
player which we use use tile with a lot

219
00:19:03,520 --> 00:19:07,150
of videos suprise videos and using it

220
00:19:07,150 --> 00:19:09,670
with the just one video let's do a

221
00:19:09,670 --> 00:19:38,310
question yes

222
00:19:48,230 --> 00:19:51,660
the current equation it is the question

223
00:19:51,660 --> 00:19:54,450
is which which algorithm adaptation

224
00:19:54,450 --> 00:19:58,830
algorithm we use for this for this using

225
00:19:58,830 --> 00:20:03,150
tiles so here we will check just to

226
00:20:03,150 --> 00:20:07,470
check just which tile is visible and we

227
00:20:07,470 --> 00:20:10,680
have configuration as I said to choose

228
00:20:10,680 --> 00:20:16,100
which quality to use but we will soon

229
00:20:16,100 --> 00:20:17,400
support

230
00:20:17,400 --> 00:20:35,250
bula algorithm for adapting videos as I

231
00:20:35,250 --> 00:20:39,870
said before yes we support the question

232
00:20:39,870 --> 00:20:44,070
is if we support me to view videos me to

233
00:20:44,070 --> 00:20:51,120
view files yes we support it we can play

234
00:20:51,120 --> 00:20:54,770
it we have two streams in one file

235
00:20:54,770 --> 00:20:57,120
yes we have two streams in one file and

236
00:20:57,120 --> 00:20:59,790
we can play it as I said side by side or

237
00:20:59,790 --> 00:21:07,020
you choose which which you you can thank

238
00:21:07,020 --> 00:21:07,750
you

239
00:21:07,750 --> 00:21:14,019
[Applause]

