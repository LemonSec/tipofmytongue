1
00:00:00,030 --> 00:00:02,420
Kalin

2
00:00:04,620 --> 00:00:09,650
boy mafia horses a Lorenzo number two

3
00:00:10,610 --> 00:00:15,540
homer and everything yes thank you for

4
00:00:15,540 --> 00:00:18,150
the introduction and a slight change of

5
00:00:18,150 --> 00:00:19,740
program so in the original presentation

6
00:00:19,740 --> 00:00:22,670
was intended to be about Homer six but

7
00:00:22,670 --> 00:00:25,170
we just decided after seeing the

8
00:00:25,170 --> 00:00:26,400
schedule that you know it would make

9
00:00:26,400 --> 00:00:28,109
sense just to show what it what it's all

10
00:00:28,109 --> 00:00:30,000
about with a real example so the example

11
00:00:30,000 --> 00:00:32,070
is going to be Jonas and it's a handover

12
00:00:32,070 --> 00:00:34,290
from Lorenzo to me we do not have those

13
00:00:34,290 --> 00:00:36,780
bodies under the clothes but you've

14
00:00:36,780 --> 00:00:38,610
probably guessed it so I'm Lorenzo as

15
00:00:38,610 --> 00:00:41,790
well quick zip or QX IP depending many

16
00:00:41,790 --> 00:00:43,230
people pronounce it differently it's our

17
00:00:43,230 --> 00:00:45,120
company and a little bit of a family

18
00:00:45,120 --> 00:00:47,760
today we have almost big quorum so we're

19
00:00:47,760 --> 00:00:50,190
conquering the corner down there ban

20
00:00:50,190 --> 00:00:53,219
Chavez open source is what we do what we

21
00:00:53,219 --> 00:00:56,399
love Homer has been for now many years

22
00:00:56,399 --> 00:01:00,539
are sort of flagship product but it's

23
00:01:00,539 --> 00:01:03,390
not the only one so we're actually about

24
00:01:03,390 --> 00:01:05,940
to change this so the platform is really

25
00:01:05,940 --> 00:01:08,700
about correlation of packets coalition

26
00:01:08,700 --> 00:01:11,100
of data and we're gonna we're about to

27
00:01:11,100 --> 00:01:14,490
take it to to a new place so Homer up

28
00:01:14,490 --> 00:01:17,160
until so far has been a very central

29
00:01:17,160 --> 00:01:20,220
application which wanted to basically

30
00:01:20,220 --> 00:01:22,080
keep all of your data

31
00:01:22,080 --> 00:01:24,000
I wanted to decide our store where it

32
00:01:24,000 --> 00:01:26,369
will start how it was rotated and again

33
00:01:26,369 --> 00:01:28,250
it was zip centric so everything was

34
00:01:28,250 --> 00:01:31,349
running around sip we've changed so we

35
00:01:31,349 --> 00:01:33,990
decided to move into sort of a stack so

36
00:01:33,990 --> 00:01:37,110
Homer is the age of happy happy is gonna

37
00:01:37,110 --> 00:01:38,910
be the new container for the things that

38
00:01:38,910 --> 00:01:41,009
were released this year so again we're

39
00:01:41,009 --> 00:01:44,069
moving from an application that was

40
00:01:44,069 --> 00:01:46,440
doing one thing into a framework and the

41
00:01:46,440 --> 00:01:48,090
magic word is gonna be correlation so we

42
00:01:48,090 --> 00:01:50,429
want to make it so that Homer becomes

43
00:01:50,429 --> 00:01:53,849
the place where you know correlation can

44
00:01:53,849 --> 00:01:55,800
be created between different types of

45
00:01:55,800 --> 00:01:57,450
data may be hosted in different places

46
00:01:57,450 --> 00:01:59,789
using different technologies just

47
00:01:59,789 --> 00:02:01,229
helping people you know get to what they

48
00:02:01,229 --> 00:02:05,550
want and again many different features

49
00:02:05,550 --> 00:02:08,000
come into play many different sockets so

50
00:02:08,000 --> 00:02:10,020
this is something for a bigger

51
00:02:10,020 --> 00:02:11,940
presentation but today we'll just go for

52
00:02:11,940 --> 00:02:13,829
a real example so we'll have a few

53
00:02:13,829 --> 00:02:15,030
pieces and we'll have a challenge

54
00:02:15,030 --> 00:02:17,970
challenge is put into fruit all of the

55
00:02:17,970 --> 00:02:20,670
good things that Lauren saw one I guess

56
00:02:20,670 --> 00:02:25,100
just blessed us with so the event

57
00:02:25,100 --> 00:02:29,160
emitter in Indiana's gateway so just to

58
00:02:29,160 --> 00:02:32,510
jump straight into the the challenge of

59
00:02:32,510 --> 00:02:34,890
course this is in relation to the

60
00:02:34,890 --> 00:02:37,470
classic comer so it's custom everything

61
00:02:37,470 --> 00:02:39,000
so we do now have a you know a

62
00:02:39,000 --> 00:02:41,520
standardized concept of cycling or you

63
00:02:41,520 --> 00:02:46,080
know even flows of messages so there's a

64
00:02:46,080 --> 00:02:47,910
completely different scenario we have

65
00:02:47,910 --> 00:02:49,920
cascading relations as learn to just

66
00:02:49,920 --> 00:02:51,570
explain so we have sessions we are

67
00:02:51,570 --> 00:02:54,450
handled transports plug-ins and each and

68
00:02:54,450 --> 00:02:56,790
every one of them emits their own

69
00:02:56,790 --> 00:03:00,180
structure with no correlation unless you

70
00:03:00,180 --> 00:03:01,830
use in your pocket is of course which is

71
00:03:01,830 --> 00:03:05,910
understand still optional so many

72
00:03:05,910 --> 00:03:07,950
plugins no correlation and a bunch of

73
00:03:07,950 --> 00:03:10,200
messages that just arrived and we need

74
00:03:10,200 --> 00:03:13,080
to make sense of so the haps paramount

75
00:03:13,080 --> 00:03:16,410
as we called it has been exactly first

76
00:03:16,410 --> 00:03:18,540
of all to create a new transaction type

77
00:03:18,540 --> 00:03:22,680
in Homer to be able to search serving

78
00:03:22,680 --> 00:03:24,300
index those messages so we have a new

79
00:03:24,300 --> 00:03:28,830
type which is called WebRTC without too

80
00:03:28,830 --> 00:03:30,959
much creativity there yet and it's a

81
00:03:30,959 --> 00:03:33,030
generic type that can be used for all of

82
00:03:33,030 --> 00:03:34,920
the the various gateways out there as

83
00:03:34,920 --> 00:03:37,860
long as I speak JSON to stream events

84
00:03:37,860 --> 00:03:43,019
data and so on we came up with an

85
00:03:43,019 --> 00:03:45,840
internal correlation logic in similar

86
00:03:45,840 --> 00:03:49,769
way as we need for a free switch to to

87
00:03:49,769 --> 00:03:52,200
correlate ESL events and turn them into

88
00:03:52,200 --> 00:03:55,680
logs into Homer so a new type and we put

89
00:03:55,680 --> 00:03:57,989
the fruit or at least we hope we did the

90
00:03:57,989 --> 00:04:00,570
logic that lorenzo and the jones gateway

91
00:04:00,570 --> 00:04:03,890
offer so internally we sort of have a

92
00:04:03,890 --> 00:04:07,380
hash tables that keep the consistency

93
00:04:07,380 --> 00:04:10,019
between those so when we decide that a

94
00:04:10,019 --> 00:04:12,420
certain session is related to a certain

95
00:04:12,420 --> 00:04:14,519
handle and this handle is related to a

96
00:04:14,519 --> 00:04:16,440
plug-in and this plugin might have

97
00:04:16,440 --> 00:04:18,870
triggered might not have had interaction

98
00:04:18,870 --> 00:04:20,459
with a transport we just put it all

99
00:04:20,459 --> 00:04:22,919
together we keep track of it

100
00:04:22,919 --> 00:04:25,200
we also

101
00:04:25,200 --> 00:04:27,270
split this data so for the purpose of

102
00:04:27,270 --> 00:04:28,800
showing you what's new in the platform

103
00:04:28,800 --> 00:04:30,030
of course we couldn't just keep it in

104
00:04:30,030 --> 00:04:31,830
Homer and show you what happens there so

105
00:04:31,830 --> 00:04:33,210
we're gonna have a second part where we

106
00:04:33,210 --> 00:04:35,280
show you what else you can do with these

107
00:04:35,280 --> 00:04:38,520
data in different ways that you can tap

108
00:04:38,520 --> 00:04:43,800
into it so the pieces of the experiment

109
00:04:43,800 --> 00:04:45,660
today so of course there's Janice with

110
00:04:45,660 --> 00:04:48,180
the event socket shipping to us all the

111
00:04:48,180 --> 00:04:49,320
information and we just seen the

112
00:04:49,320 --> 00:04:52,380
previous presentation there's Homer in

113
00:04:52,380 --> 00:04:54,750
this case Homer it's more than let's say

114
00:04:54,750 --> 00:04:57,840
the receipt Palmer so a concept that

115
00:04:57,840 --> 00:04:59,730
will introduce over time but what we do

116
00:04:59,730 --> 00:05:01,770
there is basically we receive those

117
00:05:01,770 --> 00:05:02,310
messages

118
00:05:02,310 --> 00:05:04,590
some of them stay within Homer so they

119
00:05:04,590 --> 00:05:07,140
are leveraging the happy encapsulation

120
00:05:07,140 --> 00:05:08,790
protocol and they're just native to

121
00:05:08,790 --> 00:05:11,070
Homer orders are just switched by Homer

122
00:05:11,070 --> 00:05:14,220
so their handle their inspected another

123
00:05:14,220 --> 00:05:16,050
cent depending on their type and their

124
00:05:16,050 --> 00:05:17,760
content to external platforms today

125
00:05:17,760 --> 00:05:21,360
we're going to use elisandra which is a

126
00:05:21,360 --> 00:05:23,880
very very interesting project the

127
00:05:23,880 --> 00:05:25,260
developers are actually sitting in the

128
00:05:25,260 --> 00:05:27,510
room and it's something that we decided

129
00:05:27,510 --> 00:05:29,760
to bet on actually here in this recipe

130
00:05:29,760 --> 00:05:32,300
we have two forks so Alessandra

131
00:05:32,300 --> 00:05:35,880
integrates Cassandra and elasticsearch

132
00:05:35,880 --> 00:05:37,830
in ways that I'm not going to try to

133
00:05:37,830 --> 00:05:39,690
explain today but I suggest everybody

134
00:05:39,690 --> 00:05:42,240
looking into it if they're into big data

135
00:05:42,240 --> 00:05:45,470
and using it in non-standard ways and

136
00:05:45,470 --> 00:05:48,870
Kiba keeve is a fork of Cabana by siren

137
00:05:48,870 --> 00:05:50,370
Solutions which is a company that we

138
00:05:50,370 --> 00:05:54,180
also cooperate with and it's a platform

139
00:05:54,180 --> 00:05:56,580
where we moved our efforts in terms of

140
00:05:56,580 --> 00:05:58,650
creating reliable plug-ins that don't

141
00:05:58,650 --> 00:06:00,840
really depend on you know the crazy road

142
00:06:00,840 --> 00:06:05,070
map of let's say a big company today so

143
00:06:05,070 --> 00:06:07,680
the let's say the road map of elastic in

144
00:06:07,680 --> 00:06:09,840
terms of both the platform and Cubana

145
00:06:09,840 --> 00:06:12,150
are you know hard to keep up with if you

146
00:06:12,150 --> 00:06:13,620
want to build an application on top so

147
00:06:13,620 --> 00:06:17,520
this is how we're gonna gamble so we're

148
00:06:17,520 --> 00:06:19,440
gonna use elisandra we're gonna use key

149
00:06:19,440 --> 00:06:22,110
B instead of their originals with them

150
00:06:22,110 --> 00:06:24,090
we have several advantages the primary

151
00:06:24,090 --> 00:06:27,780
one in key B is provided by an app that

152
00:06:27,780 --> 00:06:29,820
we have ourselves created it's called

153
00:06:29,820 --> 00:06:31,860
Sentinel and basically it's a free

154
00:06:31,860 --> 00:06:34,710
version of the watcher for elastic

155
00:06:34,710 --> 00:06:36,960
source so it's it's an application where

156
00:06:36,960 --> 00:06:38,559
you can basically have running query

157
00:06:38,559 --> 00:06:40,989
over time so as soon as you establish an

158
00:06:40,989 --> 00:06:42,639
interesting logic you can just have it

159
00:06:42,639 --> 00:06:44,829
run automatically and this is what we'll

160
00:06:44,829 --> 00:06:47,769
use now in terms of John's meeting homer

161
00:06:47,769 --> 00:06:52,419
and help so we said the challenge in

162
00:06:52,419 --> 00:06:55,119
this case is to convert meaningful data

163
00:06:55,119 --> 00:06:57,699
so data that can be displayed and can be

164
00:06:57,699 --> 00:07:00,069
made useful in Homer and change its type

165
00:07:00,069 --> 00:07:01,929
so here we have a just a small table

166
00:07:01,929 --> 00:07:03,669
with the primary one this is not

167
00:07:03,669 --> 00:07:05,829
everything that we did but it's a good

168
00:07:05,829 --> 00:07:08,559
picture so basically every time we get a

169
00:07:08,559 --> 00:07:12,819
certain event type from Janus we extract

170
00:07:12,819 --> 00:07:15,069
certain correlation data from it so from

171
00:07:15,069 --> 00:07:16,899
different types of events comes

172
00:07:16,899 --> 00:07:18,699
different correlation hooks as we call

173
00:07:18,699 --> 00:07:20,559
them that we can leverage when a

174
00:07:20,559 --> 00:07:22,059
different message comes that doesn't

175
00:07:22,059 --> 00:07:24,879
have this data so to provide this back

176
00:07:24,879 --> 00:07:26,319
to other messages within the same

177
00:07:26,319 --> 00:07:28,929
session and be more meaningful or more

178
00:07:28,929 --> 00:07:30,489
easier actually to display in Homer

179
00:07:30,489 --> 00:07:31,929
without having to do the lookup every

180
00:07:31,929 --> 00:07:34,479
time so it's a little helper as Janice

181
00:07:34,479 --> 00:07:37,659
does not speak hep we use a pipe with

182
00:07:37,659 --> 00:07:39,489
just now migrating to app stash which is

183
00:07:39,489 --> 00:07:41,769
a little more complex it's basically a

184
00:07:41,769 --> 00:07:43,719
custom application I hope it's a socket

185
00:07:43,719 --> 00:07:49,179
as inside several helpers that can you

186
00:07:49,179 --> 00:07:50,679
know be used to extract specific

187
00:07:50,679 --> 00:07:53,559
application information or change a

188
00:07:53,559 --> 00:07:54,599
field to something else

189
00:07:54,599 --> 00:07:57,099
transformations lookups argument the

190
00:07:57,099 --> 00:08:00,009
original packet so we convert into the

191
00:08:00,009 --> 00:08:01,569
head tag that you see in the column so

192
00:08:01,569 --> 00:08:03,069
type 14 is a new one that we have

193
00:08:03,069 --> 00:08:05,559
created it contains just JSON body tells

194
00:08:05,559 --> 00:08:07,899
Homer how to handle the packet type one

195
00:08:07,899 --> 00:08:10,509
is the normal sip so when we receive sip

196
00:08:10,509 --> 00:08:12,909
messages from Jonas we just encapsulate

197
00:08:12,909 --> 00:08:15,189
them as such and then we take transports

198
00:08:15,189 --> 00:08:19,089
so specifically for sip flows we do not

199
00:08:19,089 --> 00:08:21,189
know who's talking to who unless we go

200
00:08:21,189 --> 00:08:22,959
and correlate back to the transport that

201
00:08:22,959 --> 00:08:24,609
was attached to the plug-in and so on so

202
00:08:24,609 --> 00:08:27,819
forth so we try to just you know feel

203
00:08:27,819 --> 00:08:30,009
back in some correlation data that we

204
00:08:30,009 --> 00:08:33,490
were originally lacking when we do it is

205
00:08:33,490 --> 00:08:35,919
the following so we transform basically

206
00:08:35,919 --> 00:08:40,659
Janus events into packets that Homer can

207
00:08:40,659 --> 00:08:42,909
understand and search on so we're using

208
00:08:42,909 --> 00:08:44,229
the new type and here I'm not going to

209
00:08:44,229 --> 00:08:45,759
show too much of that but it's gonna be

210
00:08:45,759 --> 00:08:47,709
it's already available on the repository

211
00:08:47,709 --> 00:08:49,509
for the adventurous ones that want to

212
00:08:49,509 --> 00:08:51,640
try it out you can search

213
00:08:51,640 --> 00:08:54,190
by different parameters so right now

214
00:08:54,190 --> 00:08:55,540
there is a little bit of a hard

215
00:08:55,540 --> 00:08:58,420
association between the the method was

216
00:08:58,420 --> 00:09:00,970
the call IDU versus the session ID it's

217
00:09:00,970 --> 00:09:02,800
a work in progress but the fact is that

218
00:09:02,800 --> 00:09:05,710
you can already search and find messages

219
00:09:05,710 --> 00:09:08,650
we can also using the above method so

220
00:09:08,650 --> 00:09:10,450
correlating the transport with the

221
00:09:10,450 --> 00:09:14,500
messages draft the the flow that Janus

222
00:09:14,500 --> 00:09:17,980
was having between of course the your

223
00:09:17,980 --> 00:09:20,290
the user agent the client and the server

224
00:09:20,290 --> 00:09:22,210
and then the server talking to for

225
00:09:22,210 --> 00:09:25,540
instance internal elements or gateways

226
00:09:25,540 --> 00:09:26,500
so on so forth

227
00:09:26,500 --> 00:09:29,170
and as per anything else in Homer once

228
00:09:29,170 --> 00:09:30,310
you click something you can see its

229
00:09:30,310 --> 00:09:32,200
contents and I apologize here it's it's

230
00:09:32,200 --> 00:09:33,580
a little blurry so you don't really see

231
00:09:33,580 --> 00:09:35,200
anything but I can guarantee you in

232
00:09:35,200 --> 00:09:37,480
there is the emergence of these cases

233
00:09:37,480 --> 00:09:40,780
the SDP exchange from a session so a

234
00:09:40,780 --> 00:09:44,110
quick ability to display the stuff in

235
00:09:44,110 --> 00:09:45,850
Homer for those that already use it we

236
00:09:45,850 --> 00:09:49,690
think this is a good plus so when John

237
00:09:49,690 --> 00:09:51,400
was connects to your already monitor

238
00:09:51,400 --> 00:09:54,700
gateway this can be very easy and as a

239
00:09:54,700 --> 00:09:56,350
bonus point all of the media reports

240
00:09:56,350 --> 00:09:58,690
that John generates from its media lags

241
00:09:58,690 --> 00:10:03,160
we convert into our pseudo rtcp format

242
00:10:03,160 --> 00:10:04,900
which is a JSON basically a

243
00:10:04,900 --> 00:10:07,660
representation of our tcp do we use

244
00:10:07,660 --> 00:10:10,720
within Homer to convert real rtcp into

245
00:10:10,720 --> 00:10:12,730
something we can interpret in this case

246
00:10:12,730 --> 00:10:15,160
we just adapted the information that we

247
00:10:15,160 --> 00:10:17,350
are there so for each session a you have

248
00:10:17,350 --> 00:10:19,210
there you we also calculate the moss and

249
00:10:19,210 --> 00:10:20,620
we show you if any I should have picked

250
00:10:20,620 --> 00:10:22,990
a back call with some better charts but

251
00:10:22,990 --> 00:10:26,620
we have some just next so this concludes

252
00:10:26,620 --> 00:10:29,470
the Omer part so what can you take from

253
00:10:29,470 --> 00:10:31,900
journals and display in Homer and of

254
00:10:31,900 --> 00:10:33,040
course here you would also have

255
00:10:33,040 --> 00:10:35,800
automatically correlation so if this was

256
00:10:35,800 --> 00:10:37,780
a sip plug-in called a correlated to a

257
00:10:37,780 --> 00:10:39,220
sip called that we monitor with Homer

258
00:10:39,220 --> 00:10:41,590
you would basically see them correlated

259
00:10:41,590 --> 00:10:43,510
and you would see the quality and the

260
00:10:43,510 --> 00:10:47,860
messages from both now getting a little

261
00:10:47,860 --> 00:10:50,890
more elastic so we say that Homer and

262
00:10:50,890 --> 00:10:54,370
this new epic stack are not just

263
00:10:54,370 --> 00:10:56,800
designed to take the data into hostage

264
00:10:56,800 --> 00:10:58,900
so we want to be a generic correlate or

265
00:10:58,900 --> 00:11:00,610
we want to be able for those that

266
00:11:00,610 --> 00:11:02,050
already have an infrastructure or a

267
00:11:02,050 --> 00:11:03,340
monitoring designed to just leverage

268
00:11:03,340 --> 00:11:05,530
this as a plug

269
00:11:05,530 --> 00:11:07,210
so something that you can use in your

270
00:11:07,210 --> 00:11:09,520
flow to categorize the arguments and to

271
00:11:09,520 --> 00:11:12,610
correlate specifically so what we do

272
00:11:12,610 --> 00:11:14,890
here is exactly going and use the second

273
00:11:14,890 --> 00:11:18,370
part of the project that we mentioned so

274
00:11:18,370 --> 00:11:21,880
we're gonna have Palmer take every

275
00:11:21,880 --> 00:11:23,470
message so in the previous part we were

276
00:11:23,470 --> 00:11:25,930
only using selected selected messages

277
00:11:25,930 --> 00:11:28,210
that were meaningful or that we could

278
00:11:28,210 --> 00:11:29,410
translate in this case we're taking

279
00:11:29,410 --> 00:11:31,300
everything we're not just taking

280
00:11:31,300 --> 00:11:33,340
everything that comes from the API but

281
00:11:33,340 --> 00:11:36,010
we also modified the the client so

282
00:11:36,010 --> 00:11:38,020
Janice is which is running in a browser

283
00:11:38,020 --> 00:11:41,560
to also be able to stream data to our

284
00:11:41,560 --> 00:11:43,660
car so we just want to get everything

285
00:11:43,660 --> 00:11:45,670
and see what comes out of it and the

286
00:11:45,670 --> 00:11:47,980
effort here is of course to automate

287
00:11:47,980 --> 00:11:50,770
some of the logic that Lorenzo was

288
00:11:50,770 --> 00:11:52,750
giving us in a previous presentation so

289
00:11:52,750 --> 00:11:54,790
how do we quickly get you know from a

290
00:11:54,790 --> 00:11:57,280
session to its Andals to the plugins

291
00:11:57,280 --> 00:11:59,080
that were involved the media or the

292
00:11:59,080 --> 00:12:01,210
transport and all of that so down here

293
00:12:01,210 --> 00:12:03,430
just a simple representation so certain

294
00:12:03,430 --> 00:12:06,310
types and again they will contain

295
00:12:06,310 --> 00:12:08,620
correlation hooks which are injected by

296
00:12:08,620 --> 00:12:10,180
Homer so those are not natively

297
00:12:10,180 --> 00:12:11,860
necessarily in each and every one of

298
00:12:11,860 --> 00:12:13,630
those packets they might be inserted

299
00:12:13,630 --> 00:12:16,480
just to make it more meaningful or for

300
00:12:16,480 --> 00:12:18,130
to generate a full circle when we look

301
00:12:18,130 --> 00:12:20,710
at them different illnesses in

302
00:12:20,710 --> 00:12:23,920
elasticsearch so that we can paralyze

303
00:12:23,920 --> 00:12:26,290
our searches and optimize also what we

304
00:12:26,290 --> 00:12:31,270
get into memory to do it what happens as

305
00:12:31,270 --> 00:12:32,710
we said we're gonna throw everything in

306
00:12:32,710 --> 00:12:34,030
Cuba so the next screen shots that you

307
00:12:34,030 --> 00:12:36,220
will see are from cubic which is a fork

308
00:12:36,220 --> 00:12:38,589
of Yamana what we get everything in

309
00:12:38,589 --> 00:12:40,360
there the primary key is that we're

310
00:12:40,360 --> 00:12:42,040
gonna look at our exactly the session ID

311
00:12:42,040 --> 00:12:44,080
which you see in the first column the

312
00:12:44,080 --> 00:12:46,360
handle ID which you cannot read then

313
00:12:46,360 --> 00:12:47,950
here we have the plug-in type and I wish

314
00:12:47,950 --> 00:12:49,839
you could pretty readable we have the

315
00:12:49,839 --> 00:12:51,970
event I and I'm sorry this is the event

316
00:12:51,970 --> 00:12:56,370
type and that's the event name I guess

317
00:12:56,370 --> 00:12:59,530
looks very short we want to find ways

318
00:12:59,530 --> 00:13:02,680
where we can visualize the relations

319
00:13:02,680 --> 00:13:04,150
between those packages that we're

320
00:13:04,150 --> 00:13:07,690
getting and to do so I created a few

321
00:13:07,690 --> 00:13:10,210
dashboards in Kiwi so this is just a

322
00:13:10,210 --> 00:13:13,900
generic look what's Janice doing so on

323
00:13:13,900 --> 00:13:15,490
the top part you see the different types

324
00:13:15,490 --> 00:13:18,510
of events they're categorized by the

325
00:13:18,510 --> 00:13:20,970
plugging that they were triggered by in

326
00:13:20,970 --> 00:13:23,250
this case or the uniqueness of the

327
00:13:23,250 --> 00:13:25,740
session so that's just a generic how

328
00:13:25,740 --> 00:13:29,040
over time the system is used we see the

329
00:13:29,040 --> 00:13:30,720
number of sessions that we have received

330
00:13:30,720 --> 00:13:32,940
and we see the number of messages so for

331
00:13:32,940 --> 00:13:35,370
those 50 sessions we received four

332
00:13:35,370 --> 00:13:37,200
thousand six hundred something events

333
00:13:37,200 --> 00:13:40,110
from Janice and the client combined we

334
00:13:40,110 --> 00:13:41,730
have a breakdown of the plugins that

335
00:13:41,730 --> 00:13:46,110
have were responsible so some were

336
00:13:46,110 --> 00:13:48,690
generated by of course the echo test the

337
00:13:48,690 --> 00:13:51,930
video room C plug-in playback whatever

338
00:13:51,930 --> 00:13:54,000
it is we would break it down and it

339
00:13:54,000 --> 00:13:55,860
would be correlated let's say top to

340
00:13:55,860 --> 00:14:00,000
bottom here I also outlined and again

341
00:14:00,000 --> 00:14:02,040
it's a shame it's not readable but this

342
00:14:02,040 --> 00:14:03,510
is a correlation between three different

343
00:14:03,510 --> 00:14:05,490
types of events so at the bottom we see

344
00:14:05,490 --> 00:14:08,160
an IP which is extracted from a

345
00:14:08,160 --> 00:14:12,180
transport transaction going into an

346
00:14:12,180 --> 00:14:15,980
establishment with with channels and

347
00:14:15,980 --> 00:14:18,330
culminating up here with me joining the

348
00:14:18,330 --> 00:14:19,890
video room so up here you see Lorenzo

349
00:14:19,890 --> 00:14:21,630
this is our Guardian and this is my IP

350
00:14:21,630 --> 00:14:25,200
so we already have a quick glance at you

351
00:14:25,200 --> 00:14:27,960
know a single evolution so how we go

352
00:14:27,960 --> 00:14:30,300
from somebody log into the system in all

353
00:14:30,300 --> 00:14:32,460
the way into loading the plug-in and

354
00:14:32,460 --> 00:14:36,330
joining the world the video media it's

355
00:14:36,330 --> 00:14:38,760
the most interesting part of what we can

356
00:14:38,760 --> 00:14:41,370
get out of it so in this case we made a

357
00:14:41,370 --> 00:14:42,930
little bit of an experiment normally in

358
00:14:42,930 --> 00:14:44,820
Homer you find a session and then when

359
00:14:44,820 --> 00:14:46,560
you open it you get all the way into the

360
00:14:46,560 --> 00:14:49,080
media this time we'll do the opposite so

361
00:14:49,080 --> 00:14:51,090
let's pretend that we're monitoring a

362
00:14:51,090 --> 00:14:52,980
Janus gateway this way and we want to

363
00:14:52,980 --> 00:14:55,050
look for specific media conditions so if

364
00:14:55,050 --> 00:14:56,940
the jitter spikes out if there's a lot

365
00:14:56,940 --> 00:14:59,540
of packet loss if something looks wrong

366
00:14:59,540 --> 00:15:01,980
from the media perspective I want

367
00:15:01,980 --> 00:15:03,360
investigate this session and I want to

368
00:15:03,360 --> 00:15:05,130
find out who's behind these sessions or

369
00:15:05,130 --> 00:15:07,350
who triggered it on the right side you

370
00:15:07,350 --> 00:15:09,660
see the cascading so again we've always

371
00:15:09,660 --> 00:15:12,990
from a session ID into a handle then we

372
00:15:12,990 --> 00:15:15,060
have the type of plug-in and at the

373
00:15:15,060 --> 00:15:18,330
bottom we have transactions so we try to

374
00:15:18,330 --> 00:15:21,600
find a vertical relation of all of those

375
00:15:21,600 --> 00:15:23,400
events together so if there's a session

376
00:15:23,400 --> 00:15:26,430
and we select sorry if we select the

377
00:15:26,430 --> 00:15:28,020
specific mini session from the system

378
00:15:28,020 --> 00:15:29,550
automatically we get already filtered

379
00:15:29,550 --> 00:15:30,750
out

380
00:15:30,750 --> 00:15:32,790
were it was belonging to so we already

381
00:15:32,790 --> 00:15:34,860
have an idea of where was coming from

382
00:15:34,860 --> 00:15:37,350
and how much it consumed and so on so

383
00:15:37,350 --> 00:15:39,900
forth it gets more interesting when we

384
00:15:39,900 --> 00:15:42,750
do the same with the SIP plugin so if we

385
00:15:42,750 --> 00:15:44,700
load the c plugin we register sip

386
00:15:44,700 --> 00:15:46,920
account with our gateway we can generate

387
00:15:46,920 --> 00:15:48,840
a call and try to do the same thing so

388
00:15:48,840 --> 00:15:50,580
in this case I'm looking at the media

389
00:15:50,580 --> 00:15:53,490
session that was generated by the C

390
00:15:53,490 --> 00:15:55,500
plug-in of channels so we can see there

391
00:15:55,500 --> 00:15:58,380
was a big drop in between some packet

392
00:15:58,380 --> 00:16:04,350
loss and listen gtfo and we want to use

393
00:16:04,350 --> 00:16:05,940
this just to track who's behind this

394
00:16:05,940 --> 00:16:07,830
session so this session sucked for

395
00:16:07,830 --> 00:16:09,180
whatever reason there was a drop in the

396
00:16:09,180 --> 00:16:10,740
middle I want to find out who would the

397
00:16:10,740 --> 00:16:13,620
user that was affected by is so in this

398
00:16:13,620 --> 00:16:16,020
case I'm gonna use the session ID as a

399
00:16:16,020 --> 00:16:18,810
pin filter that you see at the top left

400
00:16:18,810 --> 00:16:21,630
angry and I'm gonna move to the tab

401
00:16:21,630 --> 00:16:24,750
where we are indexing the sip or well

402
00:16:24,750 --> 00:16:26,730
actually this is type 64 so it's more

403
00:16:26,730 --> 00:16:28,800
than sip but it contains all of the sip

404
00:16:28,800 --> 00:16:31,080
messages that channels would generate

405
00:16:31,080 --> 00:16:32,760
and in this case we can immediately

406
00:16:32,760 --> 00:16:35,430
fetch from just starting by the media

407
00:16:35,430 --> 00:16:38,220
session we can find the SIP legs which

408
00:16:38,220 --> 00:16:42,780
were related to this media being been

409
00:16:42,780 --> 00:16:45,060
exchanged so we can see where actually

410
00:16:45,060 --> 00:16:47,370
was going and all of the SIP messages

411
00:16:47,370 --> 00:16:48,900
and of course this will be a hook

412
00:16:48,900 --> 00:16:50,730
straight back into homer so the same

413
00:16:50,730 --> 00:16:52,110
information would be available there in

414
00:16:52,110 --> 00:16:53,520
a classic way but that's not what we're

415
00:16:53,520 --> 00:16:56,910
after and of course we could jump out

416
00:16:56,910 --> 00:17:00,110
and also with the same method so pinging

417
00:17:00,110 --> 00:17:02,370
determinate elements or the session

418
00:17:02,370 --> 00:17:04,199
indeed to handle ID or specific plugin

419
00:17:04,199 --> 00:17:06,630
across the various indices that we're

420
00:17:06,630 --> 00:17:08,760
having we can basically filter out

421
00:17:08,760 --> 00:17:10,589
automatically who they belong to

422
00:17:10,589 --> 00:17:12,510
so in this case once again jumping into

423
00:17:12,510 --> 00:17:16,530
the session and seeing the the transport

424
00:17:16,530 --> 00:17:19,579
IP that was behind all of those

425
00:17:19,579 --> 00:17:23,250
transmissions that we've seen and yeah

426
00:17:23,250 --> 00:17:26,849
this is pretty much it so times up we

427
00:17:26,849 --> 00:17:28,079
didn't have a bunch of time you know to

428
00:17:28,079 --> 00:17:29,670
show you everything so in the next

429
00:17:29,670 --> 00:17:32,090
episode we'll talk about open sips

430
00:17:32,090 --> 00:17:34,260
capturing everything we're talking about

431
00:17:34,260 --> 00:17:36,210
Homer six displaying everything that's a

432
00:17:36,210 --> 00:17:38,250
semi nice of integration homer and so

433
00:17:38,250 --> 00:17:39,900
much more if you're interested those are

434
00:17:39,900 --> 00:17:42,990
the links those are the tanks

435
00:17:42,990 --> 00:17:45,450
yes well let's see what the next

436
00:17:45,450 --> 00:17:47,370
presenter is and if they take thank you

437
00:17:47,370 --> 00:17:48,280
very much

438
00:17:48,280 --> 00:17:55,839
[Applause]

