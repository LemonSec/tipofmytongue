1
00:00:04,740 --> 00:00:07,930
okay so good morning everybody my name

2
00:00:07,930 --> 00:00:10,090
is Karolina arias Nino's I'm a PhD

3
00:00:10,090 --> 00:00:12,309
student from Politecnico di Milano in

4
00:00:12,309 --> 00:00:15,370
Italy and I'm here to present sorry

5
00:00:15,370 --> 00:00:17,710
about the long title but it's a web

6
00:00:17,710 --> 00:00:20,710
application basically to know to find

7
00:00:20,710 --> 00:00:23,350
the best place to live within the city

8
00:00:23,350 --> 00:00:27,880
and the team that came up with this idea

9
00:00:27,880 --> 00:00:40,410
sorry it's not working it's blocked

10
00:00:40,410 --> 00:00:44,880
sorry okay

11
00:00:44,880 --> 00:00:47,560
so the tip that came up with this idea

12
00:00:47,560 --> 00:00:50,590
is the one that you see here we are

13
00:00:50,590 --> 00:00:53,020
three environmental and dramatics

14
00:00:53,020 --> 00:00:55,989
engineers and two developers and we

15
00:00:55,989 --> 00:00:57,460
belong to the dramatics and air

16
00:00:57,460 --> 00:00:59,710
observation lab at Politecnico di Milano

17
00:00:59,710 --> 00:01:03,550
and we basically are interested in web

18
00:01:03,550 --> 00:01:05,199
GIS volunteer geographic information

19
00:01:05,199 --> 00:01:10,870
systems and your big data so what is

20
00:01:10,870 --> 00:01:13,150
city focus so as I said before is a

21
00:01:13,150 --> 00:01:15,540
web-based interactive 2d and 3d

22
00:01:15,540 --> 00:01:18,700
application not only to find the best

23
00:01:18,700 --> 00:01:21,310
place in a city to live but also to pass

24
00:01:21,310 --> 00:01:24,040
a certain stain so normally when you

25
00:01:24,040 --> 00:01:26,500
want to move to another city that you

26
00:01:26,500 --> 00:01:28,619
don't know you go to Google Maps or

27
00:01:28,619 --> 00:01:31,440
hopefully OpenStreetMap and you check

28
00:01:31,440 --> 00:01:33,729
the streets and you check more or less

29
00:01:33,729 --> 00:01:35,340
the services that you have available

30
00:01:35,340 --> 00:01:37,540
because you don't know the place and

31
00:01:37,540 --> 00:01:40,450
then you go to another website to check

32
00:01:40,450 --> 00:01:42,400
the prices of the houses the apartment

33
00:01:42,400 --> 00:01:44,619
so on so you have to do a lot of manual

34
00:01:44,619 --> 00:01:49,119
work let's say so we wanted to create an

35
00:01:49,119 --> 00:01:51,280
application in order to make all these

36
00:01:51,280 --> 00:01:55,780
in just one place and and also the user

37
00:01:55,780 --> 00:01:58,240
can decide their different criteria and

38
00:01:58,240 --> 00:02:01,210
their importance and at the end to to

39
00:02:01,210 --> 00:02:03,670
have a map that can show them the

40
00:02:03,670 --> 00:02:08,408
different places within the city so how

41
00:02:08,408 --> 00:02:10,209
is he folk is different from other apps

42
00:02:10,209 --> 00:02:12,520
so actually the question that we had

43
00:02:12,520 --> 00:02:15,040
before was is there an app that does

44
00:02:15,040 --> 00:02:17,500
these things and actually we couldn't

45
00:02:17,500 --> 00:02:18,400
find any app

46
00:02:18,400 --> 00:02:21,970
that show you places within a city I

47
00:02:21,970 --> 00:02:24,340
mean we find I put here just the main

48
00:02:24,340 --> 00:02:26,799
ones but in this application you only

49
00:02:26,799 --> 00:02:30,010
they give you a city in the world for

50
00:02:30,010 --> 00:02:33,640
example you put your income you put your

51
00:02:33,640 --> 00:02:36,579
preferences in temperature services and

52
00:02:36,579 --> 00:02:39,040
they can tell you which city in the

53
00:02:39,040 --> 00:02:41,590
world you can go to live but not within

54
00:02:41,590 --> 00:02:45,370
the city so this is one important

55
00:02:45,370 --> 00:02:48,790
question and also we try to make it as

56
00:02:48,790 --> 00:02:52,139
user-friendly as possible we hope it is

57
00:02:52,139 --> 00:02:54,940
avoiding long and handmade research on

58
00:02:54,940 --> 00:02:57,940
the web and also normally when you do

59
00:02:57,940 --> 00:02:59,829
this type of search you can you can

60
00:02:59,829 --> 00:03:01,060
normally don't consider the

61
00:03:01,060 --> 00:03:02,769
environmental conditions like air

62
00:03:02,769 --> 00:03:06,220
pollution temperature and so on so we

63
00:03:06,220 --> 00:03:08,530
also wanted to include this into the

64
00:03:08,530 --> 00:03:11,560
criteria and most importantly we only

65
00:03:11,560 --> 00:03:18,069
use open data and open specifications so

66
00:03:18,069 --> 00:03:21,010
this application was a winner for the

67
00:03:21,010 --> 00:03:23,019
mightiest third call for innovative apps

68
00:03:23,019 --> 00:03:25,269
I don't know if you are familiar with my

69
00:03:25,269 --> 00:03:27,340
deals but by years it was a project or

70
00:03:27,340 --> 00:03:29,560
the European Commission that finished

71
00:03:29,560 --> 00:03:33,549
last December and this project the

72
00:03:33,549 --> 00:03:35,139
object objective of this project is to

73
00:03:35,139 --> 00:03:37,510
create innovative apps in the modern

74
00:03:37,510 --> 00:03:40,870
mental and social domains so they wanted

75
00:03:40,870 --> 00:03:44,349
to to show the people that you can do

76
00:03:44,349 --> 00:03:48,310
stuff with geostatic or open data and

77
00:03:48,310 --> 00:03:51,639
we'd open that in general so basically

78
00:03:51,639 --> 00:03:53,949
the idea was developed it noted

79
00:03:53,949 --> 00:03:56,440
application that they could be mobile or

80
00:03:56,440 --> 00:04:00,400
web based using only openly or freely

81
00:04:00,400 --> 00:04:04,479
available data and also cloud generated

82
00:04:04,479 --> 00:04:06,900
data in different domains but especially

83
00:04:06,900 --> 00:04:10,720
addressing citizen needs so if you go to

84
00:04:10,720 --> 00:04:13,359
this link over here you will find all

85
00:04:13,359 --> 00:04:15,669
the apps that were winning winners in

86
00:04:15,669 --> 00:04:18,250
this course and you can also download

87
00:04:18,250 --> 00:04:21,370
this application and modify them because

88
00:04:21,370 --> 00:04:24,580
they are published as free or free as

89
00:04:24,580 --> 00:04:27,849
free content and you can also use it for

90
00:04:27,849 --> 00:04:29,469
commercial commercial uses

91
00:04:29,469 --> 00:04:32,080
so as my

92
00:04:32,080 --> 00:04:34,090
application you can download them logged

93
00:04:34,090 --> 00:04:39,090
on let it in and modify the application

94
00:04:39,419 --> 00:04:43,720
well in terms of data we use data

95
00:04:43,720 --> 00:04:46,030
specifically for the city of Milan in

96
00:04:46,030 --> 00:04:48,280
this case as a demo because we normally

97
00:04:48,280 --> 00:04:51,460
work with Milan and data from Milan but

98
00:04:51,460 --> 00:04:53,560
actually this can use and in whatever

99
00:04:53,560 --> 00:04:57,550
city you want because mainly the the the

100
00:04:57,550 --> 00:04:59,849
data that we use was from OpenStreetMap

101
00:04:59,849 --> 00:05:02,740
so it will depend on the availability of

102
00:05:02,740 --> 00:05:06,539
OpenStreetMap data in a specific city

103
00:05:06,539 --> 00:05:10,990
but we also use data from lombardia

104
00:05:10,990 --> 00:05:13,750
region the the municipality of the city

105
00:05:13,750 --> 00:05:18,659
of Milan and the National Statistical

106
00:05:18,659 --> 00:05:24,150
Service and of course the geostatic or

107
00:05:24,150 --> 00:05:27,430
so the criteria that we considered just

108
00:05:27,430 --> 00:05:30,009
for this demo because you can add all

109
00:05:30,009 --> 00:05:32,639
the criteria that you want but we use

110
00:05:32,639 --> 00:05:35,020
especially environmental conditions such

111
00:05:35,020 --> 00:05:37,659
as air quality and the different

112
00:05:37,659 --> 00:05:40,360
temperatures within the city we also use

113
00:05:40,360 --> 00:05:42,400
the population density because maybe

114
00:05:42,400 --> 00:05:44,020
some people wants to live in the suburbs

115
00:05:44,020 --> 00:05:45,520
instead of the center of the city for

116
00:05:45,520 --> 00:05:49,960
example and and the rest of the criteria

117
00:05:49,960 --> 00:05:52,300
are referred to the nearness so nearness

118
00:05:52,300 --> 00:05:54,940
to transportation for example the bus

119
00:05:54,940 --> 00:05:57,940
stops and train and metro station or the

120
00:05:57,940 --> 00:06:00,779
nearness services such as ATMs

121
00:06:00,779 --> 00:06:04,150
pharmacies coffee shops hospitals and so

122
00:06:04,150 --> 00:06:07,900
on their nearness to nature so if people

123
00:06:07,900 --> 00:06:11,710
wants to be near to a park or water

124
00:06:11,710 --> 00:06:15,159
stream we also consider the land use

125
00:06:15,159 --> 00:06:18,639
type so if if you want to live inside

126
00:06:18,639 --> 00:06:21,610
and industrial of our commercial type of

127
00:06:21,610 --> 00:06:24,400
land use and stuff like that or near

128
00:06:24,400 --> 00:06:26,830
nearness to education so schools

129
00:06:26,830 --> 00:06:32,770
universities and so on ok so the

130
00:06:32,770 --> 00:06:34,779
application principle is actually really

131
00:06:34,779 --> 00:06:37,810
simple in a sense that is an map algebra

132
00:06:37,810 --> 00:06:40,509
so you have different criteria and there

133
00:06:40,509 --> 00:06:43,029
are the difference we call in score maps

134
00:06:43,029 --> 00:06:45,400
that goes from 1 to 100 or

135
00:06:45,400 --> 00:06:48,210
four to zero to 100 to zero to one and

136
00:06:48,210 --> 00:06:50,830
basically you assign weights to the

137
00:06:50,830 --> 00:06:53,080
different score maps then you sum and

138
00:06:53,080 --> 00:06:55,870
you obtain a final map so it's pretty

139
00:06:55,870 --> 00:07:00,460
simple but before we in order to obtain

140
00:07:00,460 --> 00:07:02,830
these score maps we needed to make up

141
00:07:02,830 --> 00:07:05,639
data cleaning and data processing before

142
00:07:05,639 --> 00:07:08,680
just once but we needed to do it and

143
00:07:08,680 --> 00:07:11,919
then these score maps went into the

144
00:07:11,919 --> 00:07:16,090
application so we did first of all data

145
00:07:16,090 --> 00:07:19,690
cleaning and then the score the score

146
00:07:19,690 --> 00:07:23,500
Maps creation we did using Python script

147
00:07:23,500 --> 00:07:28,300
and grass GIS so first of all we did the

148
00:07:28,300 --> 00:07:31,330
data cleaning because we had data from

149
00:07:31,330 --> 00:07:33,460
different sources that was the same data

150
00:07:33,460 --> 00:07:36,190
for example so we tried to clean the

151
00:07:36,190 --> 00:07:39,669
data with buffers because we had data

152
00:07:39,669 --> 00:07:42,669
from OpenStreetMap that normally was the

153
00:07:42,669 --> 00:07:44,919
majority of the data but we also have

154
00:07:44,919 --> 00:07:47,770
the same data from the municipality that

155
00:07:47,770 --> 00:07:50,260
Crowley is not exactly in the same

156
00:07:50,260 --> 00:07:52,630
position so we try to like choose one of

157
00:07:52,630 --> 00:07:58,840
them and we did it by by buffers and for

158
00:07:58,840 --> 00:08:01,110
the score maps creation it depends on

159
00:08:01,110 --> 00:08:04,659
the type of feature that we want to

160
00:08:04,659 --> 00:08:07,810
create in this case we have point layers

161
00:08:07,810 --> 00:08:10,599
or polygon layers of raster layers so in

162
00:08:10,599 --> 00:08:13,210
the case of point layers that represents

163
00:08:13,210 --> 00:08:15,370
like services like hospitals banks post

164
00:08:15,370 --> 00:08:20,740
office and so on we thought of let's say

165
00:08:20,740 --> 00:08:24,280
a working distance so in in average we

166
00:08:24,280 --> 00:08:26,650
know that people don't want to work more

167
00:08:26,650 --> 00:08:29,520
than 15 minutes who access a service so

168
00:08:29,520 --> 00:08:34,059
approximately 50 minute walking is 1200

169
00:08:34,059 --> 00:08:37,719
meters so we use that distance to create

170
00:08:37,719 --> 00:08:40,330
a spatial concentration Maps using a

171
00:08:40,330 --> 00:08:42,940
quartic kernel density function and then

172
00:08:42,940 --> 00:08:45,279
we normalize in order to have these core

173
00:08:45,279 --> 00:08:50,560
maps between 0 and 1 for the case of the

174
00:08:50,560 --> 00:08:52,600
polygon layers we have more or less the

175
00:08:52,600 --> 00:08:54,730
same criteria in the sense that in this

176
00:08:54,730 --> 00:08:56,260
case you don't have a position but you

177
00:08:56,260 --> 00:08:59,170
have the whole area so we run

178
00:08:59,170 --> 00:09:01,329
throughout the data then we create

179
00:09:01,329 --> 00:09:03,519
multiple decent buffers taking into

180
00:09:03,519 --> 00:09:06,550
account again this 1200 meter distance

181
00:09:06,550 --> 00:09:09,399
we divided in different categories from

182
00:09:09,399 --> 00:09:13,930
0 to 100 1200 and then we were

183
00:09:13,930 --> 00:09:15,699
classified it and we created the score

184
00:09:15,699 --> 00:09:20,110
maps for the last the rest of layer was

185
00:09:20,110 --> 00:09:23,410
a little bit different because in this

186
00:09:23,410 --> 00:09:25,990
case we already have raster data we just

187
00:09:25,990 --> 00:09:27,610
needed to normalize it in order to have

188
00:09:27,610 --> 00:09:30,850
it from 0 to 4 from 0 to 1 in the case

189
00:09:30,850 --> 00:09:32,860
of air pollution we wanted the high

190
00:09:32,860 --> 00:09:36,399
scores be on the less polluted areas of

191
00:09:36,399 --> 00:09:39,519
course but for the case of temperature

192
00:09:39,519 --> 00:09:43,089
population and land use layers we try to

193
00:09:43,089 --> 00:09:45,850
create three different levels the labels

194
00:09:45,850 --> 00:09:48,720
yes like categories high medium low or

195
00:09:48,720 --> 00:09:52,420
industrial continuous continues and then

196
00:09:52,420 --> 00:09:55,470
we create the score mats by means of

197
00:09:55,470 --> 00:10:01,899
reclassification so the architecture of

198
00:10:01,899 --> 00:10:04,899
the application is based mainly on two

199
00:10:04,899 --> 00:10:07,800
components the first one is random and

200
00:10:07,800 --> 00:10:11,079
raster data management and NASA what

201
00:10:11,079 --> 00:10:14,290
board win I won't enter it too much

202
00:10:14,290 --> 00:10:17,110
detail because I know in the afternoon

203
00:10:17,110 --> 00:10:19,329
professor Bauman is going to explain a

204
00:10:19,329 --> 00:10:20,350
lot better

205
00:10:20,350 --> 00:10:24,579
Rosamond but basically is it's an array

206
00:10:24,579 --> 00:10:29,589
rate DBMS that adds capabilities to a

207
00:10:29,589 --> 00:10:31,750
storage and retrieval of array data or

208
00:10:31,750 --> 00:10:35,709
raster data and not aware webqueen as

209
00:10:35,709 --> 00:10:38,019
you know probably is a 3d beautiful

210
00:10:38,019 --> 00:10:41,260
world is open source and consumable and

211
00:10:41,260 --> 00:10:43,750
you can add it to the any web

212
00:10:43,750 --> 00:10:49,089
application so as I said before CT focus

213
00:10:49,089 --> 00:10:50,949
relies on a standard installation of

214
00:10:50,949 --> 00:10:54,069
resin this is under installation has

215
00:10:54,069 --> 00:10:57,730
normally SQLite database back-end for us

216
00:10:57,730 --> 00:10:59,740
it was okay because we had we only have

217
00:10:59,740 --> 00:11:03,550
like 20 maps so it was fine but actually

218
00:11:03,550 --> 00:11:05,019
you can connect it to other type of

219
00:11:05,019 --> 00:11:09,730
databases like post gray and so on and

220
00:11:09,730 --> 00:11:12,190
basically data are accessed over the web

221
00:11:12,190 --> 00:11:12,819
by Pettis

222
00:11:12,819 --> 00:11:16,869
component of Rassilon so these

223
00:11:16,869 --> 00:11:18,489
components is the one that translate the

224
00:11:18,489 --> 00:11:20,970
double D web coverage processing service

225
00:11:20,970 --> 00:11:26,910
queries from the Sandra of GC and it

226
00:11:26,910 --> 00:11:29,910
translated into the SQL language and

227
00:11:29,910 --> 00:11:35,109
this is what allows us to to create the

228
00:11:35,109 --> 00:11:37,660
map ultra I'm going to show you how it's

229
00:11:37,660 --> 00:11:41,859
done and for the client-side combining

230
00:11:41,859 --> 00:11:44,619
jQuery and web borwein it is possible to

231
00:11:44,619 --> 00:11:48,910
retrieve maps from resume to the WPA WPC

232
00:11:48,910 --> 00:11:53,069
s and show them into a to the end user

233
00:11:53,069 --> 00:11:55,929
so apart from the raster data we also

234
00:11:55,929 --> 00:11:58,029
wanted to show the vector data so the

235
00:11:58,029 --> 00:12:00,029
locations of the different services

236
00:12:00,029 --> 00:12:02,589
because we are we were working with

237
00:12:02,589 --> 00:12:06,399
rather on we didn't want to to access to

238
00:12:06,399 --> 00:12:09,910
this vector data through database so we

239
00:12:09,910 --> 00:12:13,600
just add it to the application using a j

240
00:12:13,600 --> 00:12:18,519
jo Jason so it's only in the client side

241
00:12:18,519 --> 00:12:22,449
of the application and the final map as

242
00:12:22,449 --> 00:12:25,539
well as the different score maps where

243
00:12:25,539 --> 00:12:28,959
let's say painted by colouring agreed so

244
00:12:28,959 --> 00:12:30,909
a better and a better version of the

245
00:12:30,909 --> 00:12:34,479
raster grid using by the values of the

246
00:12:34,479 --> 00:12:36,759
retrieved CSV files from the W CPS

247
00:12:36,759 --> 00:12:39,189
request we know that there is a way to

248
00:12:39,189 --> 00:12:42,999
color that using the W CPS but we find

249
00:12:42,999 --> 00:12:46,029
it really not aesthetical so we prefer

250
00:12:46,029 --> 00:12:51,339
this way which was very much better so

251
00:12:51,339 --> 00:12:53,409
the W CPS requests are done in these

252
00:12:53,409 --> 00:12:55,749
ways are very simple you have to call

253
00:12:55,749 --> 00:12:57,850
the different layers and then you

254
00:12:57,850 --> 00:13:03,279
multiply make the map algebra and you

255
00:13:03,279 --> 00:13:06,399
request your data in this case we use a

256
00:13:06,399 --> 00:13:10,569
CSV but you can request it using T for

257
00:13:10,569 --> 00:13:17,439
daypack so this is the the idea of the

258
00:13:17,439 --> 00:13:19,179
application I'm going to show you anyway

259
00:13:19,179 --> 00:13:23,499
the demo a video of a demo so first of

260
00:13:23,499 --> 00:13:24,999
all you select your criteria and a

261
00:13:24,999 --> 00:13:26,350
science wait

262
00:13:26,350 --> 00:13:30,580
then you simply click on on the bottom

263
00:13:30,580 --> 00:13:32,950
to find your place and then you them

264
00:13:32,950 --> 00:13:36,430
them up will appear you can use the map

265
00:13:36,430 --> 00:13:40,150
controls and to see them up in 2d and

266
00:13:40,150 --> 00:13:43,060
also 3d in the case of my lamp because

267
00:13:43,060 --> 00:13:44,950
we got bananas so plane you can don't

268
00:13:44,950 --> 00:13:47,170
see a lot of 3d but in other type of

269
00:13:47,170 --> 00:13:50,970
cities you could see also the topography

270
00:13:50,970 --> 00:13:53,830
you can check each criterion Maps not

271
00:13:53,830 --> 00:13:56,230
not only the resulting map but you can

272
00:13:56,230 --> 00:13:58,810
also check the different criteria you

273
00:13:58,810 --> 00:14:00,850
can navigate to the location of interest

274
00:14:00,850 --> 00:14:04,240
or the vector layers and then you can do

275
00:14:04,240 --> 00:14:08,320
it again so this is mainly how it works

276
00:14:08,320 --> 00:14:18,420
so I will gonna show you if I can

277
00:14:30,450 --> 00:14:37,670
sorry about that yeah but it's

278
00:14:37,670 --> 00:14:41,360
completely lost

279
00:14:45,140 --> 00:14:59,330
I'll try it again okay oh okay

280
00:15:08,440 --> 00:15:12,850
okay so these these are the different

281
00:15:12,850 --> 00:15:14,949
criteria the user just put the weights

282
00:15:14,949 --> 00:15:20,050
and for each criteria you have the the

283
00:15:20,050 --> 00:15:23,069
caption that explain you what how you

284
00:15:23,069 --> 00:15:25,060
assign the weights to each of the

285
00:15:25,060 --> 00:15:33,310
criteria in this way then you click and

286
00:15:33,310 --> 00:15:40,560
you get your map you can sum in and

287
00:15:40,560 --> 00:15:45,009
check the back to layers width of the

288
00:15:45,009 --> 00:15:48,069
different services that you choose then

289
00:15:48,069 --> 00:15:51,939
you can check also the individual score

290
00:15:51,939 --> 00:15:54,149
Maps

291
00:15:58,900 --> 00:16:01,210
and then you can also see it in 3d but

292
00:16:01,210 --> 00:16:05,040
of course depending on the topography

293
00:16:06,870 --> 00:16:10,300
and then you can do it again

294
00:16:10,300 --> 00:16:21,120
so this is basically okay

295
00:16:28,779 --> 00:16:30,970
so for future developments we are

296
00:16:30,970 --> 00:16:33,760
thinking up to the possibility for user

297
00:16:33,760 --> 00:16:35,200
to get a glimpse of the changing

298
00:16:35,200 --> 00:16:38,800
environment by giving like trends of the

299
00:16:38,800 --> 00:16:40,480
different criteria like the temperature

300
00:16:40,480 --> 00:16:47,700
or other type of environmental criteria

301
00:16:47,700 --> 00:16:51,760
we have the the final map but we don't

302
00:16:51,760 --> 00:16:53,440
put the the name for example of the

303
00:16:53,440 --> 00:16:56,339
neighborhood so we want to put also that

304
00:16:56,339 --> 00:16:58,870
maybe take more advantage of the 3d

305
00:16:58,870 --> 00:17:01,870
functionalities so elevate elevate cells

306
00:17:01,870 --> 00:17:03,339
according to the cells values for

307
00:17:03,339 --> 00:17:06,520
example we don't have user

308
00:17:06,520 --> 00:17:09,939
administration functionalities yet but

309
00:17:09,939 --> 00:17:12,609
the idea is to collect people's choices

310
00:17:12,609 --> 00:17:15,760
so in the future we can have a lot of

311
00:17:15,760 --> 00:17:18,459
data there for research or maybe for

312
00:17:18,459 --> 00:17:20,500
yerba management or marketing analyst

313
00:17:20,500 --> 00:17:24,760
analytics we want to add information

314
00:17:24,760 --> 00:17:28,059
about house rent prices but this is I

315
00:17:28,059 --> 00:17:30,850
mean the pain in the city of Milan we

316
00:17:30,850 --> 00:17:33,040
we're trying to make contact with some

317
00:17:33,040 --> 00:17:35,500
real estate companies to add this

318
00:17:35,500 --> 00:17:39,040
information and as a first case study we

319
00:17:39,040 --> 00:17:40,540
consider the city of Milan but of course

320
00:17:40,540 --> 00:17:42,670
in the future we have we want to add

321
00:17:42,670 --> 00:17:46,570
more different cities so you can check

322
00:17:46,570 --> 00:17:50,260
the application on this link and you can

323
00:17:50,260 --> 00:17:51,460
find also the source code and

324
00:17:51,460 --> 00:17:54,429
documentation you get up and you can

325
00:17:54,429 --> 00:17:57,160
download it user use it as you as you

326
00:17:57,160 --> 00:18:00,180
want so thank you for your attention

327
00:18:00,180 --> 00:18:08,369
[Applause]

328
00:18:24,980 --> 00:18:28,679
is feasible oh sorry the question was if

329
00:18:28,679 --> 00:18:31,679
there is like filtering capabilities to

330
00:18:31,679 --> 00:18:35,460
the to the application we don't have it

331
00:18:35,460 --> 00:18:38,600
yet but for sure it's really feasible

332
00:18:38,600 --> 00:18:56,220
yes so the question is if we updated the

333
00:18:56,220 --> 00:18:57,960
our data for the application and

334
00:18:57,960 --> 00:19:01,679
actually not yet I mean the this was a

335
00:19:01,679 --> 00:19:05,700
demo for the my gos call but the idea

336
00:19:05,700 --> 00:19:07,890
yeah of course is to update it I mean to

337
00:19:07,890 --> 00:19:11,250
have like a practically real-time update

338
00:19:11,250 --> 00:19:13,230
of the data especially if they are from

339
00:19:13,230 --> 00:19:15,720
OpenStreetMap but we don't have it yet

340
00:19:15,720 --> 00:19:27,559
and we are thinking on on that yes yeah

341
00:19:37,980 --> 00:19:41,260
yeah so the question is if we checked

342
00:19:41,260 --> 00:19:43,390
the house prices within our application

343
00:19:43,390 --> 00:19:47,650
and the answer is that I mean we want

344
00:19:47,650 --> 00:19:49,660
this data to be inside our application

345
00:19:49,660 --> 00:19:52,030
but we don't have it yet because

346
00:19:52,030 --> 00:19:53,800
normally especially in the city of Milan

347
00:19:53,800 --> 00:19:55,900
all this data is private in his bill it

348
00:19:55,900 --> 00:19:58,600
belongs to private companies and so we

349
00:19:58,600 --> 00:20:01,360
don't have it yet but we are trying to

350
00:20:01,360 --> 00:20:04,350
negotiate to put them on the application

351
00:20:04,350 --> 00:20:09,330
we do it manually like just test and

352
00:20:09,330 --> 00:20:12,100
yeah we can do it more or less but you

353
00:20:12,100 --> 00:20:14,110
know the idea is to include it in the

354
00:20:14,110 --> 00:20:27,130
application yeah yeah yeah in some cases

355
00:20:27,130 --> 00:20:34,090
yes so the question is that if the best

356
00:20:34,090 --> 00:20:35,890
the houses with the best prices match

357
00:20:35,890 --> 00:20:38,830
the best the options of the people and

358
00:20:38,830 --> 00:20:42,940
normally yes we we were afraid in the

359
00:20:42,940 --> 00:20:44,920
future also the fact that maybe people

360
00:20:44,920 --> 00:20:46,870
will I mean because the idea is to

361
00:20:46,870 --> 00:20:49,870
create a map that then we will show like

362
00:20:49,870 --> 00:20:51,880
deep the best places that people prefer

363
00:20:51,880 --> 00:20:56,020
stuff like that we are afraid this may

364
00:20:56,020 --> 00:20:58,960
be change the market in the in the city

365
00:20:58,960 --> 00:21:02,290
because you see maybe the map of people

366
00:21:02,290 --> 00:21:06,190
of the areas that people prefer so we

367
00:21:06,190 --> 00:21:08,830
are not sure if we want that you are we

368
00:21:08,830 --> 00:21:29,200
are trying to see how to portray this I

369
00:21:29,200 --> 00:21:32,170
mean we did it very manually and sense

370
00:21:32,170 --> 00:21:35,710
that we sorry so the question is that if

371
00:21:35,710 --> 00:21:38,950
we can replicate this this application

372
00:21:38,950 --> 00:21:40,180
to another city easily

373
00:21:40,180 --> 00:21:45,640
and not I mean depends because we

374
00:21:45,640 --> 00:21:48,370
actually take the OpenStreetMap data and

375
00:21:48,370 --> 00:21:50,260
we download the data so we didn't use

376
00:21:50,260 --> 00:21:53,350
any API or anything and we did a very

377
00:21:53,350 --> 00:21:57,460
manual so I guess if you use the api's

378
00:21:57,460 --> 00:22:01,120
it will be easier so but we did we

379
00:22:01,120 --> 00:22:12,460
didn't do that okay thank you

380
00:22:12,460 --> 00:22:19,039
[Applause]

