1
00:00:00,030 --> 00:00:02,780
welcome everyone

2
00:00:05,099 --> 00:00:08,950
my name is Ricardo and I have been

3
00:00:08,950 --> 00:00:11,349
working on geeks for a couple of years

4
00:00:11,349 --> 00:00:15,730
already this is going to be a gentle

5
00:00:15,730 --> 00:00:18,550
introduction to functional package

6
00:00:18,550 --> 00:00:20,500
management which means that I'm not

7
00:00:20,500 --> 00:00:22,690
going to define what functional package

8
00:00:22,690 --> 00:00:25,090
management is instead of going to start

9
00:00:25,090 --> 00:00:28,259
with a bold claim

10
00:00:29,910 --> 00:00:32,949
package managers are really useful who

11
00:00:32,949 --> 00:00:36,120
disagrees with this

12
00:00:40,180 --> 00:00:43,449
no package managers are really useful I

13
00:00:43,449 --> 00:00:47,690
this is a like a meme in computing it's

14
00:00:47,690 --> 00:00:49,339
been around for a while and there are

15
00:00:49,339 --> 00:00:50,989
different variations of it but it has

16
00:00:50,989 --> 00:00:54,649
survived so far but they can be so

17
00:00:54,649 --> 00:00:56,800
frustrating

18
00:00:56,800 --> 00:00:59,320
who has never had a problem with

19
00:00:59,320 --> 00:01:04,149
packages before installing software and

20
00:01:04,149 --> 00:01:06,890
but then actually could skip all those

21
00:01:06,890 --> 00:01:10,070
slides but for the benefit of the people

22
00:01:10,070 --> 00:01:14,000
who are watching from afar these are

23
00:01:14,000 --> 00:01:16,070
just off the top of my head a couple of

24
00:01:16,070 --> 00:01:18,800
issues that I've personally encountered

25
00:01:18,800 --> 00:01:21,770
and that probably have shortened my

26
00:01:21,770 --> 00:01:28,039
lifetime it's the first thing the first

27
00:01:28,039 --> 00:01:30,409
thing is you will encounter when things

28
00:01:30,409 --> 00:01:34,039
go wrong is version conflicts so you may

29
00:01:34,039 --> 00:01:35,659
want to have a particular version of the

30
00:01:35,659 --> 00:01:38,780
software and it's not available and you

31
00:01:38,780 --> 00:01:42,259
can't really just install that version

32
00:01:42,259 --> 00:01:43,729
that you want because that would

33
00:01:43,729 --> 00:01:47,229
conflict with what is already there this

34
00:01:47,229 --> 00:01:49,520
leads directly to the other problem

35
00:01:49,520 --> 00:01:51,590
which is that the usually old software

36
00:01:51,590 --> 00:01:55,640
is available because harmonizing all

37
00:01:55,640 --> 00:01:57,409
these dependencies between different

38
00:01:57,409 --> 00:02:00,439
packages it takes a while and it's it's

39
00:02:00,439 --> 00:02:06,590
non-trivial so as the dust settles

40
00:02:06,590 --> 00:02:08,329
actually the software world has already

41
00:02:08,329 --> 00:02:11,989
moved on so we are always a few steps

42
00:02:11,989 --> 00:02:13,660
behind

43
00:02:13,660 --> 00:02:17,110
upgrades can be very suspenseful

44
00:02:17,110 --> 00:02:19,480
which is why in the past I would not

45
00:02:19,480 --> 00:02:23,020
touch my computer before giving talks or

46
00:02:23,020 --> 00:02:26,080
before deadlines or I would actually

47
00:02:26,080 --> 00:02:29,260
really just try not to upgrade because

48
00:02:29,260 --> 00:02:34,450
I'm I want to use the computer because

49
00:02:34,450 --> 00:02:36,460
the only way is forward you can't really

50
00:02:36,460 --> 00:02:39,010
go back once once you commit it to an

51
00:02:39,010 --> 00:02:41,830
upgrade it's really hard to downgrade

52
00:02:41,830 --> 00:02:44,170
and in traditional system of those

53
00:02:44,170 --> 00:02:46,920
systems that I've encountered anyway and

54
00:02:46,920 --> 00:02:50,820
it gets worse

55
00:02:51,000 --> 00:02:56,020
twice as bad when when it's not just you

56
00:02:56,020 --> 00:02:58,450
using the machine but if it's a shared

57
00:02:58,450 --> 00:03:00,370
machine yeah you have computer at home

58
00:03:00,370 --> 00:03:03,310
and as you and your kids using the

59
00:03:03,310 --> 00:03:05,470
machine and they operate because they

60
00:03:05,470 --> 00:03:11,140
have fruit initially but the machine and

61
00:03:11,140 --> 00:03:13,870
then you can't submit your paper because

62
00:03:13,870 --> 00:03:15,760
because you are serious person you write

63
00:03:15,760 --> 00:03:19,150
papers and the duck fat because as we

64
00:03:19,150 --> 00:03:20,320
established already the only ways

65
00:03:20,320 --> 00:03:22,060
forward you correct

66
00:03:22,060 --> 00:03:24,790
I can't arrange yourself with it like

67
00:03:24,790 --> 00:03:29,680
switch jobs or become an artist and

68
00:03:29,680 --> 00:03:33,910
Trust trust is an issue how can you be

69
00:03:33,910 --> 00:03:36,430
sure that we the software that we we

70
00:03:36,430 --> 00:03:39,280
install on our machines is actually the

71
00:03:39,280 --> 00:03:41,760
software that we want to have installed

72
00:03:41,760 --> 00:03:43,959
this is a really hard problem and a lot

73
00:03:43,959 --> 00:03:45,730
of people are working on this is there's

74
00:03:45,730 --> 00:03:48,180
a whole community of people who work on

75
00:03:48,180 --> 00:03:52,570
reproducible builds that that give us

76
00:03:52,570 --> 00:03:57,400
the tools to at least challenge trust

77
00:03:57,400 --> 00:04:00,280
issues that we we cannot be sure that we

78
00:04:00,280 --> 00:04:03,970
can fully trust things but at least we

79
00:04:03,970 --> 00:04:06,790
gain some confidence in that software

80
00:04:06,790 --> 00:04:08,440
running is actually the software that

81
00:04:08,440 --> 00:04:11,700
corresponds to the sources in thread

82
00:04:11,700 --> 00:04:15,280
but there are a couple of partial

83
00:04:15,280 --> 00:04:18,418
solutions or attempts at solving things

84
00:04:18,418 --> 00:04:20,949
these are just a few that that I've

85
00:04:20,949 --> 00:04:23,889
encountered so far which the first one

86
00:04:23,889 --> 00:04:26,080
is obviously just don't use package

87
00:04:26,080 --> 00:04:28,990
management do you have a compiler and

88
00:04:28,990 --> 00:04:33,780
you know how to use it if you don't then

89
00:04:33,780 --> 00:04:36,610
that is a problem it's not a solution

90
00:04:36,610 --> 00:04:38,520
for you

91
00:04:38,520 --> 00:04:41,320
and it doesn't only extend to the

92
00:04:41,320 --> 00:04:43,240
package itself but it may extend to

93
00:04:43,240 --> 00:04:45,550
packages that are different versions

94
00:04:45,550 --> 00:04:48,039
recursively my dependencies for that

95
00:04:48,039 --> 00:04:50,320
package there's a different version than

96
00:04:50,320 --> 00:04:52,210
the one that's provided by public

97
00:04:52,210 --> 00:04:54,789
repositories so you might just rely on

98
00:04:54,789 --> 00:04:57,280
other people doing that work for you by

99
00:04:57,280 --> 00:05:00,190
using external repositories that provide

100
00:05:00,190 --> 00:05:04,690
pre-built binaries so in in enterprise

101
00:05:04,690 --> 00:05:07,270
environments people of this is this

102
00:05:07,270 --> 00:05:11,620
Apple repository on Ubuntu is it's

103
00:05:11,620 --> 00:05:15,820
popular to install Indian able PBX where

104
00:05:15,820 --> 00:05:17,800
you can just download packages and other

105
00:05:17,800 --> 00:05:21,789
people have built this there's a user

106
00:05:21,789 --> 00:05:24,340
repository for for arch canoe plus Linux

107
00:05:24,340 --> 00:05:30,870
and usually the problem they solve comes

108
00:05:30,870 --> 00:05:34,389
or the solution comes with a host of

109
00:05:34,389 --> 00:05:38,740
other problems you may have not the

110
00:05:38,740 --> 00:05:41,800
original conflict that you started with

111
00:05:41,800 --> 00:05:43,570
but you may have additional conflict and

112
00:05:43,570 --> 00:05:46,479
trying to harmonize these different

113
00:05:46,479 --> 00:05:48,220
repositories the official one and the

114
00:05:48,220 --> 00:05:50,470
external one and there's even more

115
00:05:50,470 --> 00:05:51,780
software that you have to trust and

116
00:05:51,780 --> 00:05:54,130
where you may not actually have the

117
00:05:54,130 --> 00:05:57,840
tools to establish trust

118
00:05:57,919 --> 00:06:03,110
another common approach to solve the

119
00:06:03,110 --> 00:06:05,379
problem is to use application-specific

120
00:06:05,379 --> 00:06:09,349
package managers it seems like every

121
00:06:09,349 --> 00:06:11,150
language has its own in package manager

122
00:06:11,150 --> 00:06:13,520
and if you have a non-trivial piece of

123
00:06:13,520 --> 00:06:17,629
software that is written in Ruby and

124
00:06:17,629 --> 00:06:22,580
Haskell and maybe you know sprinkling of

125
00:06:22,580 --> 00:06:25,340
Python then you may have to to use gem

126
00:06:25,340 --> 00:06:29,060
and cabal and pip it's not just one tool

127
00:06:29,060 --> 00:06:30,889
you have to work learn regular system

128
00:06:30,889 --> 00:06:33,139
package later but Jen and Cabala camp

129
00:06:33,139 --> 00:06:34,219
and they're all behave slightly

130
00:06:34,219 --> 00:06:37,460
differently they all have their

131
00:06:37,460 --> 00:06:40,610
idiosyncrasies since it's more packages

132
00:06:40,610 --> 00:06:43,879
but less management just devolving this

133
00:06:43,879 --> 00:06:48,590
to to a language level which is just a

134
00:06:48,590 --> 00:06:51,199
little bit better than doing it on a per

135
00:06:51,199 --> 00:06:54,229
package level you could also build your

136
00:06:54,229 --> 00:06:57,439
own system packages if you're using apps

137
00:06:57,439 --> 00:07:02,229
you could write the debian package and

138
00:07:02,229 --> 00:07:05,919
who does this on a regular basis

139
00:07:05,919 --> 00:07:12,259
quit Joy's doing this or you could use

140
00:07:12,259 --> 00:07:14,779
IBM and this is kind of hard to do

141
00:07:14,779 --> 00:07:16,490
because again you've got the same

142
00:07:16,490 --> 00:07:18,409
problems as with it's using no package

143
00:07:18,409 --> 00:07:19,939
management at all you've kind of solved

144
00:07:19,939 --> 00:07:21,710
all these issues first but you're

145
00:07:21,710 --> 00:07:24,560
rewarded with the binary that eventually

146
00:07:24,560 --> 00:07:26,810
breaks as the rest of the system moves

147
00:07:26,810 --> 00:07:28,520
on and we've got a we build things again

148
00:07:28,520 --> 00:07:32,479
you can also automate that it can

149
00:07:32,479 --> 00:07:35,270
generate one p.m. and can generate

150
00:07:35,270 --> 00:07:39,780
Debian packages with things like fpm

151
00:07:39,780 --> 00:07:42,420
but I don't know maybe it's just me but

152
00:07:42,420 --> 00:07:44,480
I feel this is really in elegance

153
00:07:44,480 --> 00:07:47,550
because it generates so much boilerplate

154
00:07:47,550 --> 00:07:49,820
stuff just so that you can install

155
00:07:49,820 --> 00:07:52,190
software

156
00:07:52,190 --> 00:07:54,990
it doesn't adhere to any particular

157
00:07:54,990 --> 00:07:59,580
standards it's weird

158
00:07:59,580 --> 00:08:02,190
I used it before because I wanted to

159
00:08:02,190 --> 00:08:05,280
distribute software to people who may

160
00:08:05,280 --> 00:08:07,680
only have who made me using Debian and

161
00:08:07,680 --> 00:08:11,190
people who use RPM based systems so I

162
00:08:11,190 --> 00:08:14,910
wrote it an F p.m. package and build all

163
00:08:14,910 --> 00:08:18,150
these binaries archives that people can

164
00:08:18,150 --> 00:08:20,180
install so this helps a little bit for

165
00:08:20,180 --> 00:08:22,730
district lazy distribution of software

166
00:08:22,730 --> 00:08:26,150
but doesn't really help users themselves

167
00:08:26,150 --> 00:08:30,150
a very popular solution nowadays is to

168
00:08:30,150 --> 00:08:34,589
just give up and say packaging is really

169
00:08:34,589 --> 00:08:37,950
hard so let's not do it let's just

170
00:08:37,950 --> 00:08:41,429
shrink wrap the whole environment and

171
00:08:41,429 --> 00:08:43,890
distribute that binary blob to other

172
00:08:43,890 --> 00:08:47,420
people who can then run that thing

173
00:08:48,880 --> 00:08:51,650
introducing functional packaging

174
00:08:51,650 --> 00:08:55,959
functional here does not mean it works

175
00:08:56,290 --> 00:08:59,000
it does work but that's not the meaning

176
00:08:59,000 --> 00:09:01,190
of turning a functional means al and

177
00:09:01,190 --> 00:09:03,410
just like a function like a pure

178
00:09:03,410 --> 00:09:06,020
mathematical function so that's like a

179
00:09:06,020 --> 00:09:11,150
metaphor ok so this is the function here

180
00:09:11,150 --> 00:09:13,460
I see it can actually not meet the top

181
00:09:13,460 --> 00:09:17,690
it's doesn't matter right so you treat

182
00:09:17,690 --> 00:09:21,950
the build process the the the build

183
00:09:21,950 --> 00:09:23,810
process as a function that has inputs

184
00:09:23,810 --> 00:09:28,970
and produces some output inputs for for

185
00:09:28,970 --> 00:09:31,580
package build process would be the

186
00:09:31,580 --> 00:09:34,610
header files the sources the all the

187
00:09:34,610 --> 00:09:36,020
tools that you need to build something

188
00:09:36,020 --> 00:09:39,310
all the libraries that you would need to

189
00:09:39,310 --> 00:09:43,210
link the software with and out comes

190
00:09:43,210 --> 00:09:49,700
some binary artifact a tree of files in

191
00:09:49,700 --> 00:09:53,000
this case it's Emacs which generates a

192
00:09:53,000 --> 00:09:54,760
couple of libraries in a couple of

193
00:09:54,760 --> 00:09:58,180
plants which can run

194
00:09:58,180 --> 00:10:00,130
now one thing that is that I would like

195
00:10:00,130 --> 00:10:02,290
to stress here is that with functional

196
00:10:02,290 --> 00:10:08,189
packaging the the target directory

197
00:10:09,090 --> 00:10:13,690
includes a hash of all the inputs which

198
00:10:13,690 --> 00:10:17,280
means that if you change one input and

199
00:10:17,280 --> 00:10:19,990
it doesn't matter which one and how far

200
00:10:19,990 --> 00:10:23,260
up the the graph it goes you will get a

201
00:10:23,260 --> 00:10:25,810
different output directory which means

202
00:10:25,810 --> 00:10:30,940
that installing or building Emacs with

203
00:10:30,940 --> 00:10:34,990
this version of GCC is going to yield

204
00:10:34,990 --> 00:10:38,440
one output whereas building emails with

205
00:10:38,440 --> 00:10:41,260
that other version of GCC will yield a

206
00:10:41,260 --> 00:10:43,030
different output so you can have

207
00:10:43,030 --> 00:10:48,010
different variants of a piece of

208
00:10:48,010 --> 00:10:50,890
software and it is not just dependent on

209
00:10:50,890 --> 00:10:54,400
the version it's not just I I want to

210
00:10:54,400 --> 00:10:57,040
use Emacs 25 one and I would also like

211
00:10:57,040 --> 00:10:58,960
to have a makes 24 something so you can

212
00:10:58,960 --> 00:11:01,090
have different variants of Emacs 25 one

213
00:11:01,090 --> 00:11:04,960
if you wanted to and all of the inputs

214
00:11:04,960 --> 00:11:08,260
are encoded in that hash and so it gives

215
00:11:08,260 --> 00:11:11,290
us a unique new namespace it to which we

216
00:11:11,290 --> 00:11:13,949
can install things

217
00:11:14,639 --> 00:11:17,069
so saying input you mean you get the

218
00:11:17,069 --> 00:11:19,589
same output right Lily

219
00:11:19,589 --> 00:11:21,959
and with different inputs you get

220
00:11:21,959 --> 00:11:26,069
different output the way this is done in

221
00:11:26,069 --> 00:11:29,850
in geeks is that we've got this geek

222
00:11:29,850 --> 00:11:31,529
style is from angle enter that a user

223
00:11:31,529 --> 00:11:34,410
and unprivileged user can run that

224
00:11:34,410 --> 00:11:37,559
explained talks to a demon in front as

225
00:11:37,559 --> 00:11:40,709
root and performs things on behalf of

226
00:11:40,709 --> 00:11:47,189
the user the things it performs is the

227
00:11:47,189 --> 00:11:48,980
abstraction is that it it spawns

228
00:11:48,980 --> 00:11:51,209
isolated build process isolated

229
00:11:51,209 --> 00:11:53,989
environment fashions isolated

230
00:11:53,989 --> 00:11:59,579
environments that that give a new view

231
00:11:59,579 --> 00:12:01,040
on the system

232
00:12:01,040 --> 00:12:05,449
we're only declared input are available

233
00:12:05,449 --> 00:12:10,799
that means if if I were to to tell it to

234
00:12:10,799 --> 00:12:14,399
build Emacs and I didn't say but I want

235
00:12:14,399 --> 00:12:17,069
to have a compiler available then that

236
00:12:17,069 --> 00:12:19,860
build would obviously fight so I say I

237
00:12:19,860 --> 00:12:21,899
want to have a compiler and I want to

238
00:12:21,899 --> 00:12:25,879
have this in that link and whatever and

239
00:12:25,879 --> 00:12:29,069
the demon will comply and create an

240
00:12:29,069 --> 00:12:31,169
isolated build environment where that

241
00:12:31,169 --> 00:12:33,209
compiler the specified is available all

242
00:12:33,209 --> 00:12:34,559
the libraries that I want to have are

243
00:12:34,559 --> 00:12:36,089
available all the other packages things

244
00:12:36,089 --> 00:12:41,779
depends on are available eventually

245
00:12:41,779 --> 00:12:48,569
built artifacts are in a store in the

246
00:12:48,569 --> 00:12:50,779
store

247
00:12:58,370 --> 00:13:00,620
everything eventually ends up in the

248
00:13:00,620 --> 00:13:03,439
store in its own namespace in its own in

249
00:13:03,439 --> 00:13:08,899
the prefix direction but these prefix

250
00:13:08,899 --> 00:13:10,160
directories they have really really long

251
00:13:10,160 --> 00:13:12,230
right they dare argue this something

252
00:13:12,230 --> 00:13:15,829
like / news / store every really long

253
00:13:15,829 --> 00:13:21,439
hash - the package name the version

254
00:13:21,439 --> 00:13:24,410
number and then you've got / bin for /

255
00:13:24,410 --> 00:13:28,009
label whatever nobody would in nobody in

256
00:13:28,009 --> 00:13:29,689
the right mind would like to memorize

257
00:13:29,689 --> 00:13:30,920
all these hashes so that it can use

258
00:13:30,920 --> 00:13:37,819
email it's doesn't happen so to simplify

259
00:13:37,819 --> 00:13:41,990
all of this there's the notion of

260
00:13:41,990 --> 00:13:45,620
profiles the conceived is up there but

261
00:13:45,620 --> 00:13:48,759
this is my profile it reaches a special

262
00:13:48,759 --> 00:13:51,680
user named dot each profile and this is

263
00:13:51,680 --> 00:13:53,689
really just a link it's a link that

264
00:13:53,689 --> 00:13:58,399
points to the current geeks profile some

265
00:13:58,399 --> 00:14:03,439
in a state directory which points to the

266
00:14:03,439 --> 00:14:06,370
current version of

267
00:14:06,580 --> 00:14:09,520
the profile which again is linked into

268
00:14:09,520 --> 00:14:13,450
the store to the actual profile which

269
00:14:13,450 --> 00:14:16,990
again contains links it's a it's a union

270
00:14:16,990 --> 00:14:18,580
of all the things that are that should

271
00:14:18,580 --> 00:14:21,340
be in my profile so in this case we've

272
00:14:21,340 --> 00:14:26,140
got a profile with an ugly hash in front

273
00:14:26,140 --> 00:14:28,180
of it and it contains two tools some

274
00:14:28,180 --> 00:14:31,630
tools and runtime but this is just

275
00:14:31,630 --> 00:14:34,720
linked to the actual tools so in the

276
00:14:34,720 --> 00:14:36,730
store with with previously built some

277
00:14:36,730 --> 00:14:40,600
tools so my profile just references

278
00:14:40,600 --> 00:14:43,600
samples in the store it also recommends

279
00:14:43,600 --> 00:14:45,070
bowtie which is in a different output

280
00:14:45,070 --> 00:14:50,410
directory so profile are unions of all

281
00:14:50,410 --> 00:14:54,010
those individual trees with their ethics

282
00:14:54,010 --> 00:14:59,020
it's stripped and the current version is

283
00:14:59,020 --> 00:15:00,370
really just a link to the current

284
00:15:00,370 --> 00:15:06,150
version so remove a piece of software

285
00:15:06,150 --> 00:15:09,040
I'm not going to modify anything in

286
00:15:09,040 --> 00:15:11,710
there because this is the store is

287
00:15:11,710 --> 00:15:15,030
immutable instead what I would do is

288
00:15:15,030 --> 00:15:18,760
create a new generation of my profile

289
00:15:18,760 --> 00:15:22,450
now it's generation 43 which points to a

290
00:15:22,450 --> 00:15:25,480
new profile which no longer contains the

291
00:15:25,480 --> 00:15:29,440
package that I removed but if I wanted

292
00:15:29,440 --> 00:15:31,390
to I could just go back right I could

293
00:15:31,390 --> 00:15:36,430
just change the ex profile link to 42

294
00:15:36,430 --> 00:15:39,040
again go back and forth and I can feel

295
00:15:39,040 --> 00:15:40,840
something of course nothing ever changes

296
00:15:40,840 --> 00:15:45,130
really so the store only grows until I

297
00:15:45,130 --> 00:15:47,860
decide to delete that link before

298
00:15:47,860 --> 00:15:50,100
detuning

299
00:15:50,100 --> 00:15:53,310
which then shows us that the profile

300
00:15:53,310 --> 00:15:55,950
itself there's no longer reference by

301
00:15:55,950 --> 00:15:58,500
anything so I can under garbage

302
00:15:58,500 --> 00:16:00,300
collector and collect that unused

303
00:16:00,300 --> 00:16:06,360
profile so before before I move on to

304
00:16:06,360 --> 00:16:10,110
something funny I'd like to demonstrate

305
00:16:10,110 --> 00:16:12,530
this

306
00:16:12,589 --> 00:16:15,999
- did it to me

307
00:16:18,210 --> 00:16:26,570
can you see this'll be maybe like this

308
00:16:27,170 --> 00:16:32,850
okay I'd like to meet you but I can't

309
00:16:32,850 --> 00:16:36,260
because I don't have the hello commander

310
00:16:39,500 --> 00:16:43,050
so as an unprivileged user I install the

311
00:16:43,050 --> 00:16:47,070
hello command it tells me that I do

312
00:16:47,070 --> 00:16:51,570
install hello 2.10 I guess good says

313
00:16:51,570 --> 00:16:57,060
hello in a fancier fashion it stalls

314
00:16:57,060 --> 00:17:00,480
that somewhere into the store so there's

315
00:17:00,480 --> 00:17:05,010
a / no / store a long hash there is

316
00:17:05,010 --> 00:17:07,680
delighted here hello something something

317
00:17:07,680 --> 00:17:12,540
we can take a look at this inside that

318
00:17:12,540 --> 00:17:13,619
there's been directly in a shared

319
00:17:13,619 --> 00:17:15,990
directory so this is a real tree right

320
00:17:15,990 --> 00:17:21,810
what you would normally have and now I

321
00:17:21,810 --> 00:17:24,319
can greet you

322
00:17:27,459 --> 00:17:30,620
but this is artificial I never have to

323
00:17:30,620 --> 00:17:32,960
install hello before except for demos

324
00:17:32,960 --> 00:17:40,990
like this solutely let's install Python

325
00:17:45,700 --> 00:17:48,340
so tell think that's Python will be

326
00:17:48,340 --> 00:17:52,150
installed some way into the store and it

327
00:17:52,150 --> 00:17:54,070
also tries to be helpful and tell me

328
00:17:54,070 --> 00:17:57,810
what I may have to do in order to use it

329
00:17:58,080 --> 00:18:02,880
but I don't because yeah so here it is

330
00:18:02,880 --> 00:18:06,060
but I realized I'm in the in the guy all

331
00:18:06,060 --> 00:18:12,010
different so I shouldn't even Python so

332
00:18:12,010 --> 00:18:16,450
let's remove this and he's going to as

333
00:18:16,450 --> 00:18:18,000
you can see this is a transaction I'm

334
00:18:18,000 --> 00:18:20,670
doing this at once and I'm removing

335
00:18:20,670 --> 00:18:22,900
Python and installing guy in the same

336
00:18:22,900 --> 00:18:27,400
transaction I know Python button is

337
00:18:27,400 --> 00:18:33,780
going there's guy

338
00:18:37,720 --> 00:18:40,540
now this is what happened when I install

339
00:18:40,540 --> 00:18:42,880
it hello for the first time that created

340
00:18:42,880 --> 00:18:46,600
a profile generation one when has an

341
00:18:46,600 --> 00:18:48,910
installed pipe into my profile

342
00:18:48,910 --> 00:18:53,140
it added Python that means it created me

343
00:18:53,140 --> 00:18:54,900
a new generation that included Python

344
00:18:54,900 --> 00:18:56,770
the previous generation is still

345
00:18:56,770 --> 00:18:58,540
available if it's still there it's it's

346
00:18:58,540 --> 00:19:01,350
unmodified I could go back to that

347
00:19:01,350 --> 00:19:04,480
generation 3 where removed five names

348
00:19:04,480 --> 00:19:08,740
won't go so it's currently installed is

349
00:19:08,740 --> 00:19:11,760
this right hollow in Ghana

350
00:19:14,860 --> 00:19:18,429
for some reason I I want to go back

351
00:19:18,429 --> 00:19:20,260
couldn't undo a mistake

352
00:19:20,260 --> 00:19:23,320
which it was it was no mistake here but

353
00:19:23,320 --> 00:19:27,279
it's this is just for demonstration

354
00:19:27,279 --> 00:19:30,220
purposes I'm gonna switch back again no

355
00:19:30,220 --> 00:19:32,470
do you see that generation 2 is now the

356
00:19:32,470 --> 00:19:37,630
current generation and now if I want to

357
00:19:37,630 --> 00:19:39,909
use Python again for whatever reason it

358
00:19:39,909 --> 00:19:43,659
sits there you and I look gone I'm not

359
00:19:43,659 --> 00:19:50,309
sure that that so the feature of having

360
00:19:50,309 --> 00:19:52,809
generations and attending only to the

361
00:19:52,809 --> 00:19:56,350
store gives us rollbacks just by

362
00:19:56,350 --> 00:19:58,809
changing assembling right that's

363
00:19:58,809 --> 00:20:02,740
beautiful we can also install software

364
00:20:02,740 --> 00:20:04,419
in two different separate profiles so we

365
00:20:04,419 --> 00:20:07,929
could use one version of Emacs and

366
00:20:07,929 --> 00:20:09,370
compared with another one if you wanted

367
00:20:09,370 --> 00:20:13,240
to or in a scientific environment you

368
00:20:13,240 --> 00:20:16,450
could install a whole workflow

369
00:20:16,450 --> 00:20:18,909
into one profile and for different

370
00:20:18,909 --> 00:20:21,029
project you have a different workflow

371
00:20:21,029 --> 00:20:24,539
you can use both of them so it's ER

372
00:20:24,539 --> 00:20:26,919
this is beautiful this is all completely

373
00:20:26,919 --> 00:20:30,010
isolated my changes here will not affect

374
00:20:30,010 --> 00:20:32,919
any other user they won't have to use

375
00:20:32,919 --> 00:20:34,360
Python if I made the decision to use

376
00:20:34,360 --> 00:20:36,880
platinum before if I installed it into

377
00:20:36,880 --> 00:20:40,799
my profile it'll really only affect me

378
00:20:42,570 --> 00:20:46,770
so the way that this works is by using

379
00:20:46,770 --> 00:20:49,170
steam it's dick dial is written in

380
00:20:49,170 --> 00:20:51,150
scheme that so geeks is written with ink

381
00:20:51,150 --> 00:20:52,980
aisle which is an implementation of

382
00:20:52,980 --> 00:20:56,460
scheme and this may look confusing at

383
00:20:56,460 --> 00:21:01,440
first but let's let me show you first

384
00:21:01,440 --> 00:21:07,020
word a couple of things about scheme

385
00:21:07,020 --> 00:21:10,680
okay so these nail clippings they're

386
00:21:10,680 --> 00:21:12,530
important

387
00:21:12,530 --> 00:21:15,800
everything is a parenthetical expression

388
00:21:15,800 --> 00:21:21,530
and the first thing in there is special

389
00:21:21,560 --> 00:21:25,520
okay everything that follows is just

390
00:21:25,520 --> 00:21:29,880
arguments to the first thing this is the

391
00:21:29,880 --> 00:21:32,670
simplification okay it's a but in

392
00:21:32,670 --> 00:21:33,990
general this rule applies whatever is

393
00:21:33,990 --> 00:21:35,730
first it's kind of special it may be a

394
00:21:35,730 --> 00:21:39,420
function it may be special syntax so in

395
00:21:39,420 --> 00:21:41,670
this case we have a list is an

396
00:21:41,670 --> 00:21:43,740
expression an S expression that has

397
00:21:43,740 --> 00:21:45,780
three elements the first one is the

398
00:21:45,780 --> 00:21:48,750
function plus the other two are

399
00:21:48,750 --> 00:21:50,940
arguments step function now what I can

400
00:21:50,940 --> 00:21:55,220
do is I can quote expressions

401
00:21:55,390 --> 00:21:58,580
that's what that evaluates to the list

402
00:21:58,580 --> 00:22:02,690
that contains three elements you and you

403
00:22:02,690 --> 00:22:04,130
can think of this as a toggle switch

404
00:22:04,130 --> 00:22:06,170
right so right now it points upwards

405
00:22:06,170 --> 00:22:09,470
which means cold mode that's ortega mode

406
00:22:09,470 --> 00:22:11,660
and all of this what follows is no data

407
00:22:11,660 --> 00:22:14,120
it's not going to be evaluated but you

408
00:22:14,120 --> 00:22:17,720
can flip the switch down and enter code

409
00:22:17,720 --> 00:22:26,830
mode where things are evaluated okay

410
00:22:27,160 --> 00:22:29,960
and now this no longer looks that scary

411
00:22:29,960 --> 00:22:40,310
I think defining a name I'll say that

412
00:22:40,310 --> 00:22:44,680
this name GL PK is whatever follows

413
00:22:44,680 --> 00:22:48,230
evaluates to this is a package that has

414
00:22:48,230 --> 00:22:50,000
a name obviously and it has a version

415
00:22:50,000 --> 00:22:52,130
and has sources we don't care so much

416
00:22:52,130 --> 00:22:53,000
about this right now

417
00:22:53,000 --> 00:22:55,100
let's get to the dual system the build

418
00:22:55,100 --> 00:22:56,570
system is the new build system is

419
00:22:56,570 --> 00:23:04,460
configure make make install and the

420
00:23:04,460 --> 00:23:05,360
total switch waves

421
00:23:05,360 --> 00:23:08,750
so because infants and that is an actual

422
00:23:08,750 --> 00:23:11,620
package the package

423
00:23:21,760 --> 00:23:24,860
you wanna learn more but the gods come

424
00:23:24,860 --> 00:23:36,970
to me I was waiting for this question

425
00:23:36,970 --> 00:23:39,560
the question is what's the difference

426
00:23:39,560 --> 00:23:50,390
when you're and geeks but both

427
00:23:50,390 --> 00:23:52,490
Knicks and geeks are implementations are

428
00:23:52,490 --> 00:23:55,400
the same principles methods both of them

429
00:23:55,400 --> 00:23:57,830
are functional package managers mix is

430
00:23:57,830 --> 00:24:01,120
older than eat but each is a different

431
00:24:01,120 --> 00:24:03,620
implementation that uses scheme

432
00:24:03,620 --> 00:24:08,210
throughout which has wide implications

433
00:24:08,210 --> 00:24:11,750
on a lot of things actually

434
00:24:11,750 --> 00:24:13,820
this would deserve another talk so this

435
00:24:13,820 --> 00:24:15,800
there's a lot of differences that come

436
00:24:15,800 --> 00:24:19,880
from that initial design decision to use

437
00:24:19,880 --> 00:24:22,210
school

438
00:24:22,730 --> 00:24:27,509
they sometimes uses the Nick demon so

439
00:24:27,509 --> 00:24:29,489
and the derivation third uses are the

440
00:24:29,489 --> 00:24:32,940
same so the same format so I think in

441
00:24:32,940 --> 00:24:35,519
principle they are compatible but

442
00:24:35,519 --> 00:24:37,409
everything above that everything is not

443
00:24:37,409 --> 00:24:39,600
low level like this is very much

444
00:24:39,600 --> 00:24:41,988
different

445
00:24:52,889 --> 00:24:54,899
is there something similar like Nick so

446
00:24:54,899 --> 00:24:56,580
essa' people may not know it Nick's

447
00:24:56,580 --> 00:24:59,309
resistance a distribution a new

448
00:24:59,309 --> 00:25:01,919
distribution that builds on Nicks and

449
00:25:01,919 --> 00:25:03,749
yeah for geeks we have this too it's

450
00:25:03,749 --> 00:25:06,179
running on this machine actually it's

451
00:25:06,179 --> 00:25:08,609
called XS d and it extends the ideas of

452
00:25:08,609 --> 00:25:10,739
geeks to the operating system level and

453
00:25:10,739 --> 00:25:15,090
has declarative configuration of the

454
00:25:15,090 --> 00:25:19,789
whole operating system also in schemes

455
00:25:27,350 --> 00:25:30,239
is there a way to delete generations yes

456
00:25:30,239 --> 00:25:32,460
you delete the link so there's a

457
00:25:32,460 --> 00:25:34,619
command-line thing for deleting all of

458
00:25:34,619 --> 00:25:36,749
our profile generations and then you run

459
00:25:36,749 --> 00:25:42,559
the garbage collector yes

460
00:25:44,640 --> 00:25:47,580
security updates are handled by what's

461
00:25:47,580 --> 00:25:51,950
called grafts which is an optimization

462
00:25:51,950 --> 00:25:54,659
but to actually explain how this works

463
00:25:54,659 --> 00:25:57,720
in detail I I'd rather not is right now

464
00:25:57,720 --> 00:25:59,519
because that would take a little too

465
00:25:59,519 --> 00:26:03,360
long it's documented and begin you can

466
00:26:03,360 --> 00:26:05,669
find it on in the manual which is really

467
00:26:05,669 --> 00:26:11,899
extensive or we can chat later okay

