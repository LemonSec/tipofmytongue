1
00:00:00,030 --> 00:00:03,959
okay thank you very much for coming this

2
00:00:03,959 --> 00:00:06,990
is just a presentation about using XMPP

3
00:00:06,990 --> 00:00:10,440
to connect Internet of Things just kind

4
00:00:10,440 --> 00:00:13,019
of a word about Tyco say who we are we

5
00:00:13,019 --> 00:00:15,299
began as an open-source XMPP server in

6
00:00:15,299 --> 00:00:18,750
2004 from one person project we're now

7
00:00:18,750 --> 00:00:21,300
six people our flagship product is the

8
00:00:21,300 --> 00:00:24,449
taiga say XMPP server it is open source

9
00:00:24,449 --> 00:00:26,250
and platform independent it runs off of

10
00:00:26,250 --> 00:00:29,490
Java and we specialized in custom

11
00:00:29,490 --> 00:00:31,679
application and modification of XMPP

12
00:00:31,679 --> 00:00:34,770
service for specific applications and we

13
00:00:34,770 --> 00:00:37,530
just released version 7 one just a

14
00:00:37,530 --> 00:00:39,090
couple of days ago so we're kind of

15
00:00:39,090 --> 00:00:41,940
fresh off of that and onto some some new

16
00:00:41,940 --> 00:00:46,410
stuff so what is XMPP it stands for

17
00:00:46,410 --> 00:00:47,610
extensible messaging and presence

18
00:00:47,610 --> 00:00:49,800
protocol most of that's pretty

19
00:00:49,800 --> 00:00:51,300
self-explanatory so I'll kind of skip

20
00:00:51,300 --> 00:00:53,820
the next couple of ones here to kind of

21
00:00:53,820 --> 00:00:57,690
go on to the next thing XMPP takes place

22
00:00:57,690 --> 00:01:00,690
of course any single stream of data so

23
00:01:00,690 --> 00:01:02,820
it goes back and forth until you no

24
00:01:02,820 --> 00:01:04,110
longer need to communicate with the

25
00:01:04,110 --> 00:01:08,010
server and the stream ends as you can

26
00:01:08,010 --> 00:01:10,229
see here it is all based in an XML

27
00:01:10,229 --> 00:01:14,189
markup so everything has its own child

28
00:01:14,189 --> 00:01:18,530
elements so for nuns from their

29
00:01:18,530 --> 00:01:20,640
communication is broken into three

30
00:01:20,640 --> 00:01:21,930
different types of standards they're

31
00:01:21,930 --> 00:01:24,990
short contained XML messages sent

32
00:01:24,990 --> 00:01:27,360
through the server to either a component

33
00:01:27,360 --> 00:01:29,610
or another user and they come in three

34
00:01:29,610 --> 00:01:34,110
types presents IQ and message and the

35
00:01:34,110 --> 00:01:36,869
addressing standard is known as the

36
00:01:36,869 --> 00:01:40,200
jabber ID or jid and is can either be

37
00:01:40,200 --> 00:01:41,850
broken up into a barrage it kind of like

38
00:01:41,850 --> 00:01:44,820
an email here or a full JIT which has a

39
00:01:44,820 --> 00:01:47,460
resource the resource can be used say if

40
00:01:47,460 --> 00:01:51,149
you have a tablet a mobile phone and a

41
00:01:51,149 --> 00:01:52,829
desktop computer they can all have the

42
00:01:52,829 --> 00:01:54,210
same logon but they all have different

43
00:01:54,210 --> 00:01:55,590
resources so you can address them

44
00:01:55,590 --> 00:01:59,340
specifically just a little bit more the

45
00:01:59,340 --> 00:02:01,020
basic structure of a stanza will have a

46
00:02:01,020 --> 00:02:03,689
type usually a from where a to and

47
00:02:03,689 --> 00:02:07,320
related child elements so moving on to

48
00:02:07,320 --> 00:02:11,670
presents types you have excuse me it

49
00:02:11,670 --> 00:02:13,560
stands the types you have presents

50
00:02:13,560 --> 00:02:15,330
this can indicate a user status whether

51
00:02:15,330 --> 00:02:18,450
there are way they're way unavailable or

52
00:02:18,450 --> 00:02:21,360
available for chat they can be used for

53
00:02:21,360 --> 00:02:24,030
triggers for events so if somebody signs

54
00:02:24,030 --> 00:02:27,450
off a some other stuff happens inside

55
00:02:27,450 --> 00:02:29,400
the server as far as logic is concerned

56
00:02:29,400 --> 00:02:32,250
they can be sent by servers clients or

57
00:02:32,250 --> 00:02:34,560
components there are five different show

58
00:02:34,560 --> 00:02:38,250
tags and they can all be extended using

59
00:02:38,250 --> 00:02:41,640
the status element and that's kind of a

60
00:02:41,640 --> 00:02:42,930
text string that'll explain what's going

61
00:02:42,930 --> 00:02:45,810
on I'll skip priority and see elements

62
00:02:45,810 --> 00:02:48,030
that's just kind of a basic present

63
00:02:48,030 --> 00:02:49,709
stanza that we're looking that you can

64
00:02:49,709 --> 00:02:53,310
see inside an XMPP server messages are

65
00:02:53,310 --> 00:02:56,160
kind of the bulk of what most chat

66
00:02:56,160 --> 00:02:58,200
servers will use and they're designed to

67
00:02:58,200 --> 00:03:00,690
carry person-to-person text they can be

68
00:03:00,690 --> 00:03:03,209
enriched if needed and we have five

69
00:03:03,209 --> 00:03:06,330
different message types chat group chat

70
00:03:06,330 --> 00:03:08,670
headline in normal sorry and finally

71
00:03:08,670 --> 00:03:11,400
error again I'm kind of moving through

72
00:03:11,400 --> 00:03:12,840
this kind of quickly to get to the other

73
00:03:12,840 --> 00:03:15,860
real meat of this presentation

74
00:03:15,950 --> 00:03:18,120
they can't have some specific elements

75
00:03:18,120 --> 00:03:20,100
but body is really the main one we're

76
00:03:20,100 --> 00:03:21,870
concerned about that's kind of where the

77
00:03:21,870 --> 00:03:25,560
the the meat of messages will work and

78
00:03:25,560 --> 00:03:27,780
we can use things like for example we

79
00:03:27,780 --> 00:03:30,450
can use HTML to enhance those messages

80
00:03:30,450 --> 00:03:33,630
make them look sort of fancy info query

81
00:03:33,630 --> 00:03:37,049
is the last type of message stanza and

82
00:03:37,049 --> 00:03:38,790
this is kind of how you can get and

83
00:03:38,790 --> 00:03:41,549
receive information to the server you

84
00:03:41,549 --> 00:03:43,829
you know it opens up a method for a

85
00:03:43,829 --> 00:03:47,160
response and request mechanism and we

86
00:03:47,160 --> 00:03:48,989
have four types of there as well set get

87
00:03:48,989 --> 00:03:50,970
result in error which I'm sure you can

88
00:03:50,970 --> 00:03:53,910
discern the meanings thereof this is

89
00:03:53,910 --> 00:03:57,180
sort of a pair of examples using Disco

90
00:03:57,180 --> 00:03:59,670
info protocol how can I get information

91
00:03:59,670 --> 00:04:01,650
about for example information for a

92
00:04:01,650 --> 00:04:04,260
multi-user chat and this returns some

93
00:04:04,260 --> 00:04:06,900
information about what funds are

94
00:04:06,900 --> 00:04:10,049
available on that room and then

95
00:04:10,049 --> 00:04:13,200
components are items of code that extend

96
00:04:13,200 --> 00:04:18,238
these server operations they will

97
00:04:18,238 --> 00:04:20,430
typically have a JIT assigned three

98
00:04:20,430 --> 00:04:22,079
typical ones you'll see is pub/sub

99
00:04:22,079 --> 00:04:25,050
jingle or muck on a server and pop subs

100
00:04:25,050 --> 00:04:26,639
kind of an important one

101
00:04:26,639 --> 00:04:29,550
as we'll see in a moment and it's

102
00:04:29,550 --> 00:04:31,110
designed to provide a polling service

103
00:04:31,110 --> 00:04:33,240
you can find information there things

104
00:04:33,240 --> 00:04:34,889
will publish information you can receive

105
00:04:34,889 --> 00:04:36,900
information and receive pushes from

106
00:04:36,900 --> 00:04:39,810
those spots they're organized into nodes

107
00:04:39,810 --> 00:04:41,189
nodes will be stored relative

108
00:04:41,189 --> 00:04:43,409
information so in a moment you'll see

109
00:04:43,409 --> 00:04:47,099
kind of how useful nodes can be in this

110
00:04:47,099 --> 00:04:51,150
scope and users can subscribe they'll

111
00:04:51,150 --> 00:04:53,669
receive notifications about new

112
00:04:53,669 --> 00:04:55,469
information that's pushed there and then

113
00:04:55,469 --> 00:04:57,509
you can also look up older information

114
00:04:57,509 --> 00:05:00,409
if you want to have say the last several

115
00:05:00,409 --> 00:05:02,310
publishes to that node you can get

116
00:05:02,310 --> 00:05:04,590
historical information from a pubsub

117
00:05:04,590 --> 00:05:06,810
known kind of moving on to our second

118
00:05:06,810 --> 00:05:09,180
topic Internet of Things isn't really

119
00:05:09,180 --> 00:05:13,020
secure most consumer devices will have a

120
00:05:13,020 --> 00:05:15,629
login page like this and that's it and

121
00:05:15,629 --> 00:05:18,300
probably about 90% of the ones out there

122
00:05:18,300 --> 00:05:20,129
you could log into with admin admin oh

123
00:05:20,129 --> 00:05:23,759
wow I have access to this device not

124
00:05:23,759 --> 00:05:25,379
exactly the most secure platform out

125
00:05:25,379 --> 00:05:27,150
there and this is kind of what things

126
00:05:27,150 --> 00:05:30,089
look like right now and this is a bit of

127
00:05:30,089 --> 00:05:31,800
an issue because I'm sure many of you

128
00:05:31,800 --> 00:05:35,520
are aware of the DOI n attack that

129
00:05:35,520 --> 00:05:38,039
happened back in October that's kind of

130
00:05:38,039 --> 00:05:39,659
a heat map what we're looking for which

131
00:05:39,659 --> 00:05:42,180
was primarily done by malicious code on

132
00:05:42,180 --> 00:05:44,129
internet things devices that were

133
00:05:44,129 --> 00:05:47,310
insecure small bits of codes were thrown

134
00:05:47,310 --> 00:05:49,830
in there and this is the largest denial

135
00:05:49,830 --> 00:05:52,529
of service attack that we've had up to

136
00:05:52,529 --> 00:05:54,389
date these will probably be more

137
00:05:54,389 --> 00:05:56,550
frequent if nothing is done to sort of

138
00:05:56,550 --> 00:05:59,699
secure that end of things to that ends

139
00:05:59,699 --> 00:06:02,990
why would we want use XMPP as a solution

140
00:06:02,990 --> 00:06:09,000
one big one is security the XMPP server

141
00:06:09,000 --> 00:06:13,770
can use limit in network traffic only so

142
00:06:13,770 --> 00:06:15,240
for example if you want to just set up a

143
00:06:15,240 --> 00:06:17,520
home security system and only have

144
00:06:17,520 --> 00:06:19,620
people inside the house control it

145
00:06:19,620 --> 00:06:23,279
that's easily done we can filter traffic

146
00:06:23,279 --> 00:06:26,909
using the XMPP server logic and we have

147
00:06:26,909 --> 00:06:30,029
some device isolation that allows for

148
00:06:30,029 --> 00:06:32,099
devices not to be touched by anybody

149
00:06:32,099 --> 00:06:34,169
outside the network or indirectly

150
00:06:34,169 --> 00:06:39,719
affected by people and again

151
00:06:39,719 --> 00:06:40,560
authentication

152
00:06:40,560 --> 00:06:42,530
can be more than just a simple password

153
00:06:42,530 --> 00:06:45,510
using some standard features that XMPP

154
00:06:45,510 --> 00:06:49,020
servers come with there is a bit of an

155
00:06:49,020 --> 00:06:51,270
ease of use as well XMPP server is

156
00:06:51,270 --> 00:06:52,710
already designed to handle that two-way

157
00:06:52,710 --> 00:06:55,139
communication that you would expect so

158
00:06:55,139 --> 00:06:57,090
you wouldn't have to worry about okay

159
00:06:57,090 --> 00:06:59,070
how do I get this device to talk to a

160
00:06:59,070 --> 00:07:02,580
phone or another device or a hub there

161
00:07:02,580 --> 00:07:05,010
can be scripts for automatic setup you

162
00:07:05,010 --> 00:07:08,220
turn on another device inside your

163
00:07:08,220 --> 00:07:11,580
network the hub or the XMPP service says

164
00:07:11,580 --> 00:07:13,770
oh that's there already sets it up for

165
00:07:13,770 --> 00:07:18,180
use user can change the name of these

166
00:07:18,180 --> 00:07:21,150
pub sub nodes we'll see in a minute so

167
00:07:21,150 --> 00:07:24,590
users can configure how these work and

168
00:07:24,590 --> 00:07:26,910
again easy where network configuration

169
00:07:26,910 --> 00:07:29,639
XMPP already does NAT translation so you

170
00:07:29,639 --> 00:07:30,510
really don't have to worry about

171
00:07:30,510 --> 00:07:32,100
accessing it from outside of the network

172
00:07:32,100 --> 00:07:34,190
and creating certain holes if you need

173
00:07:34,190 --> 00:07:36,630
and we can have out-of-the-box secure

174
00:07:36,630 --> 00:07:41,070
functionality with an XMPP server cost

175
00:07:41,070 --> 00:07:43,260
is kind of interesting too as well in

176
00:07:43,260 --> 00:07:44,880
terms of you're developing some hardware

177
00:07:44,880 --> 00:07:47,220
it's a well-established platform we've

178
00:07:47,220 --> 00:07:49,770
been around for a while as XMPP it is an

179
00:07:49,770 --> 00:07:52,410
open source protocol and you can

180
00:07:52,410 --> 00:07:54,810
customize to whatever you need but you

181
00:07:54,810 --> 00:07:56,430
don't have to basically spend money to

182
00:07:56,430 --> 00:08:00,330
use XMPP as that particular thing and

183
00:08:00,330 --> 00:08:02,850
again our solution and other solutions

184
00:08:02,850 --> 00:08:04,380
are platform independent so you don't

185
00:08:04,380 --> 00:08:07,169
have to use one specific device or one

186
00:08:07,169 --> 00:08:10,440
specific operating environment so in

187
00:08:10,440 --> 00:08:14,610
this case what we've produced is sort of

188
00:08:14,610 --> 00:08:17,250
a particular use case for example and I

189
00:08:17,250 --> 00:08:19,860
Internet of Things thermostat really all

190
00:08:19,860 --> 00:08:21,979
we're looking for is okay we want to get

191
00:08:21,979 --> 00:08:24,990
what the temperature is in this case it

192
00:08:24,990 --> 00:08:26,490
would publish to the pub sub component

193
00:08:26,490 --> 00:08:29,310
on the XMPP server and that alone

194
00:08:29,310 --> 00:08:32,039
isolates that device from anybody who

195
00:08:32,039 --> 00:08:35,219
wants to put malicious code on there any

196
00:08:35,219 --> 00:08:38,700
sort of information that's passed to the

197
00:08:38,700 --> 00:08:41,190
thermostat has to go through the server

198
00:08:41,190 --> 00:08:43,020
and the pub sub component which means

199
00:08:43,020 --> 00:08:44,660
that has to be formatted correctly

200
00:08:44,660 --> 00:08:46,529
otherwise it's going to get rejected

201
00:08:46,529 --> 00:08:51,270
almost immediately and there is another

202
00:08:51,270 --> 00:08:52,890
step to go through in terms of if you

203
00:08:52,890 --> 00:08:54,120
want to connect to the

204
00:08:54,120 --> 00:08:58,200
a curable thermostat so how can this be

205
00:08:58,200 --> 00:09:00,839
done as again we saw on the diagram the

206
00:09:00,839 --> 00:09:04,800
pub/sub node acts as an intermediary so

207
00:09:04,800 --> 00:09:07,950
we can have and what we've designed is

208
00:09:07,950 --> 00:09:11,820
that the devices is a root node and then

209
00:09:11,820 --> 00:09:13,410
underneath that root know that you have

210
00:09:13,410 --> 00:09:15,900
a device name for each device that may

211
00:09:15,900 --> 00:09:18,480
be on your network and then you have a

212
00:09:18,480 --> 00:09:22,110
state and a config node state obviously

213
00:09:22,110 --> 00:09:24,240
what's the current temperature and

214
00:09:24,240 --> 00:09:25,800
config if you want to send some

215
00:09:25,800 --> 00:09:28,290
configuration to it that will only be

216
00:09:28,290 --> 00:09:31,529
allowed through an admin user but

217
00:09:31,529 --> 00:09:33,180
typically somebody who just wants to get

218
00:09:33,180 --> 00:09:35,760
in isn't authorized admin can only

219
00:09:35,760 --> 00:09:38,850
receive the state information from the

220
00:09:38,850 --> 00:09:42,210
node and information is published to

221
00:09:42,210 --> 00:09:45,779
their Associated node so you can have

222
00:09:45,779 --> 00:09:48,330
multiple thermometers each node can be

223
00:09:48,330 --> 00:09:51,120
renamed on the fly so you can have

224
00:09:51,120 --> 00:09:53,010
upstairs downstairs or livingroom

225
00:09:53,010 --> 00:09:55,500
whatever it might be just sticking on

226
00:09:55,500 --> 00:09:59,940
that and the device itself is

227
00:09:59,940 --> 00:10:01,440
responsible for running the application

228
00:10:01,440 --> 00:10:03,810
and obtaining configuration from the

229
00:10:03,810 --> 00:10:06,690
pub/sub node so it kind of separates the

230
00:10:06,690 --> 00:10:10,440
two a little bit here's kind of an

231
00:10:10,440 --> 00:10:13,190
example that we're using we're using zip

232
00:10:13,190 --> 00:10:16,320
323 which is IOT sensor data that is

233
00:10:16,320 --> 00:10:19,980
contained within a timestamp in this

234
00:10:19,980 --> 00:10:24,510
case we're just showing that in this

235
00:10:24,510 --> 00:10:26,010
case this is a light sensor and we're

236
00:10:26,010 --> 00:10:29,089
used we just have a value of 37 lumens

237
00:10:29,089 --> 00:10:32,459
and users can connect to that node and

238
00:10:32,459 --> 00:10:35,040
just attain current temperature lumen

239
00:10:35,040 --> 00:10:39,570
whatever they might need so the

240
00:10:39,570 --> 00:10:41,790
configuration nodes are reserved to push

241
00:10:41,790 --> 00:10:43,740
information in configuration changes and

242
00:10:43,740 --> 00:10:47,100
they can only allow local traffic or

243
00:10:47,100 --> 00:10:48,570
admins however you might want to set

244
00:10:48,570 --> 00:10:51,540
that up to change your settings

245
00:10:51,540 --> 00:10:53,400
depending on how the hub may be

246
00:10:53,400 --> 00:10:56,550
configured and they can only be

247
00:10:56,550 --> 00:11:03,000
considered two data forms that we're

248
00:11:03,000 --> 00:11:04,680
looking for so we can't put malicious

249
00:11:04,680 --> 00:11:06,089
code in there it's only going to look

250
00:11:06,089 --> 00:11:07,260
for properly for

251
00:11:07,260 --> 00:11:12,210
that stanzas to pass through these are

252
00:11:12,210 --> 00:11:17,190
some XMPP stanzas of how to connect

253
00:11:17,190 --> 00:11:19,110
connect and what we're going to see as

254
00:11:19,110 --> 00:11:22,100
far as the transmission just in raw

255
00:11:22,100 --> 00:11:25,530
stanza so in this case we're just asking

256
00:11:25,530 --> 00:11:29,420
for the initial state from the device

257
00:11:29,420 --> 00:11:32,430
and max items one is just showing the

258
00:11:32,430 --> 00:11:35,100
most recent published one the sensor

259
00:11:35,100 --> 00:11:37,500
will then the sensor will then read

260
00:11:37,500 --> 00:11:39,210
scuse me the server will then respond

261
00:11:39,210 --> 00:11:43,410
with its current read state in this case

262
00:11:43,410 --> 00:11:47,220
we're getting a twenty three point two

263
00:11:47,220 --> 00:11:49,440
five degrees Celsius temperature readout

264
00:11:49,440 --> 00:11:52,860
in again in that timestamp form and

265
00:11:52,860 --> 00:11:55,970
that's pretty easy to scrape in terms of

266
00:11:55,970 --> 00:11:57,840
how you know where to pull that

267
00:11:57,840 --> 00:11:59,250
information or what you're expecting

268
00:11:59,250 --> 00:12:01,320
it's going to show in that format so

269
00:12:01,320 --> 00:12:04,410
it'll be nice and simple there when a

270
00:12:04,410 --> 00:12:06,450
sensor has new data wants to publish to

271
00:12:06,450 --> 00:12:08,850
the pubsub node it'll send another IQ

272
00:12:08,850 --> 00:12:11,550
stanza to the pubsub note specifically

273
00:12:11,550 --> 00:12:15,330
it will report a new temperature and

274
00:12:15,330 --> 00:12:19,740
that will be given a item value by the

275
00:12:19,740 --> 00:12:26,070
server itself so we can induce me each

276
00:12:26,070 --> 00:12:27,750
new publish will have its own item so

277
00:12:27,750 --> 00:12:29,250
you can look up historical value later

278
00:12:29,250 --> 00:12:32,940
if you want to do that in this case if

279
00:12:32,940 --> 00:12:34,140
we want to publish a configuration

280
00:12:34,140 --> 00:12:36,390
change the device will publish its

281
00:12:36,390 --> 00:12:39,470
initial settings on startup to the

282
00:12:39,470 --> 00:12:42,740
configuration node this is much longer

283
00:12:42,740 --> 00:12:46,350
but this is just a couple of values now

284
00:12:46,350 --> 00:12:49,590
server will respond with an item set and

285
00:12:49,590 --> 00:12:52,580
if you want to change those settings

286
00:12:52,580 --> 00:12:54,420
obviously it would have to be in the

287
00:12:54,420 --> 00:12:56,790
same form that and all the values that

288
00:12:56,790 --> 00:13:01,770
were expecting we've also created a user

289
00:13:01,770 --> 00:13:04,410
interface which completely obscures the

290
00:13:04,410 --> 00:13:09,300
XMPP portion and again it will just take

291
00:13:09,300 --> 00:13:10,710
that information put it in a user

292
00:13:10,710 --> 00:13:13,050
reasonable data which is kind of handy

293
00:13:13,050 --> 00:13:14,700
if you want to have something as a

294
00:13:14,700 --> 00:13:19,290
complete solution as far as being able

295
00:13:19,290 --> 00:13:20,450
to expand

296
00:13:20,450 --> 00:13:22,519
the sort of thing new devices and values

297
00:13:22,519 --> 00:13:25,880
are easily added we don't have to you

298
00:13:25,880 --> 00:13:29,209
don't have to use any XMPP as far as new

299
00:13:29,209 --> 00:13:31,220
drivers and devices it can all be done

300
00:13:31,220 --> 00:13:34,970
in Java the framework is similar to

301
00:13:34,970 --> 00:13:37,070
previous Tyco say frameworks have you

302
00:13:37,070 --> 00:13:38,540
ever worked with one it'll be pretty

303
00:13:38,540 --> 00:13:43,279
easy to pick up and go with and device

304
00:13:43,279 --> 00:13:47,029
types are and sensor data are

305
00:13:47,029 --> 00:13:48,829
independent so you can have multiple

306
00:13:48,829 --> 00:13:50,720
types with different sensor data if you

307
00:13:50,720 --> 00:13:54,529
want and again intense knowledge of XMPP

308
00:13:54,529 --> 00:13:59,870
is not necessary as coded in Java oh I

309
00:13:59,870 --> 00:14:02,329
just went one by one this is sort of a

310
00:14:02,329 --> 00:14:06,380
quick example of our little system

311
00:14:06,380 --> 00:14:11,959
working here running a just just a light

312
00:14:11,959 --> 00:14:15,680
sent light setting example just have a

313
00:14:15,680 --> 00:14:18,110
camera on the side there just kind of

314
00:14:18,110 --> 00:14:19,910
turning lights on and off so to speak

315
00:14:19,910 --> 00:14:22,329
but we do have a functional example

316
00:14:22,329 --> 00:14:25,670
running and here we're changing the name

317
00:14:25,670 --> 00:14:28,730
of the pubsub node from lights dimmer -

318
00:14:28,730 --> 00:14:32,750
I think just dimmer and this is done

319
00:14:32,750 --> 00:14:35,420
quickly on the fly and the server just

320
00:14:35,420 --> 00:14:37,399
adjusts automatically which makes that

321
00:14:37,399 --> 00:14:43,100
nice and customizable again here we can

322
00:14:43,100 --> 00:14:45,170
see quite a few settings that are

323
00:14:45,170 --> 00:14:47,060
available that can be changed using

324
00:14:47,060 --> 00:14:50,000
publish publishing new configuration

325
00:14:50,000 --> 00:14:56,449
settings - the config pub/sub node and

326
00:14:56,449 --> 00:14:59,630
against just show how quick it is XMPP

327
00:14:59,630 --> 00:15:03,290
is rather instant in terms of changing

328
00:15:03,290 --> 00:15:04,880
the settings so it is something that can

329
00:15:04,880 --> 00:15:07,760
work and the nice part is we do have

330
00:15:07,760 --> 00:15:11,769
several Zepps available on the XMPP

331
00:15:11,769 --> 00:15:14,930
website but we've used basically one

332
00:15:14,930 --> 00:15:16,519
that's pre-existing and one that already

333
00:15:16,519 --> 00:15:21,579
exists so we the the option - I think

334
00:15:21,579 --> 00:15:27,638
what has happened here I think it broke

335
00:15:32,600 --> 00:15:35,839
okay thank you

336
00:15:46,970 --> 00:15:49,160
the computers decided not to display

337
00:15:49,160 --> 00:15:52,340
anymore so we may have to just look at

338
00:15:52,340 --> 00:16:01,970
these smaller preview for the moment so

339
00:16:01,970 --> 00:16:04,070
we've had a couple of options as well as

340
00:16:04,070 --> 00:16:06,590
terms of solution pops up is one

341
00:16:06,590 --> 00:16:09,230
instance that we can fix this Internet

342
00:16:09,230 --> 00:16:11,930
of Things solution another one is being

343
00:16:11,930 --> 00:16:15,740
able to send a direct message through an

344
00:16:15,740 --> 00:16:19,190
XMPP server to a device and in fact we

345
00:16:19,190 --> 00:16:22,910
have a sort of a live demonstration here

346
00:16:22,910 --> 00:16:24,140
unfortunately the people in the back

347
00:16:24,140 --> 00:16:27,470
can't see but we do have a little robot

348
00:16:27,470 --> 00:16:30,970
down here that's receiving XMPP commands

349
00:16:30,970 --> 00:16:35,540
and returning sensor data to the XMPP

350
00:16:35,540 --> 00:16:37,280
server to say hey I've stopped I've

351
00:16:37,280 --> 00:16:40,040
turned I've gone left and right and this

352
00:16:40,040 --> 00:16:43,580
bot is actually just receiving messages

353
00:16:43,580 --> 00:16:46,150
message stanzas directly to the device

354
00:16:46,150 --> 00:16:49,130
and all it's doing is carrying out those

355
00:16:49,130 --> 00:16:54,020
commands as asked fortunately I don't

356
00:16:54,020 --> 00:17:08,480
have oh thank you very much okay so in

357
00:17:08,480 --> 00:17:10,849
this case we will require some logons to

358
00:17:10,849 --> 00:17:15,380
address those things directly but the

359
00:17:15,380 --> 00:17:17,270
next part is we can do some reduced

360
00:17:17,270 --> 00:17:19,849
overhead and again the device still

361
00:17:19,849 --> 00:17:22,880
requires a properly formatted XML stanza

362
00:17:22,880 --> 00:17:24,319
so we can't really send anything

363
00:17:24,319 --> 00:17:26,720
malicious or anything that it's not

364
00:17:26,720 --> 00:17:29,120
expecting in this case we're just

365
00:17:29,120 --> 00:17:31,100
sending stanzas like these and if for

366
00:17:31,100 --> 00:17:33,320
example to move forward the bot will

367
00:17:33,320 --> 00:17:35,930
respond hey I've moved forward and we'll

368
00:17:35,930 --> 00:17:37,640
use chat States to basically say I'm

369
00:17:37,640 --> 00:17:40,760
executing command once it's done the

370
00:17:40,760 --> 00:17:44,360
chat state will basically go to idle and

371
00:17:44,360 --> 00:17:46,430
then it will be send back a message

372
00:17:46,430 --> 00:17:50,180
saying that it is done our framework is

373
00:17:50,180 --> 00:17:53,540
open-source and as of this morning we've

374
00:17:53,540 --> 00:17:55,970
opened it up to anybody who wants to

375
00:17:55,970 --> 00:17:57,470
jump in and kind of mess with the code

376
00:17:57,470 --> 00:18:00,650
it's available on projects that Tyga say

377
00:18:00,650 --> 00:18:03,560
org and they're separated we have an IOT

378
00:18:03,560 --> 00:18:05,450
home which we saw earlier in the demo

379
00:18:05,450 --> 00:18:08,840
this turtlebot is is they're the only

380
00:18:08,840 --> 00:18:10,550
requirements we have right now is a

381
00:18:10,550 --> 00:18:12,920
device bridge which we've used Raspberry

382
00:18:12,920 --> 00:18:17,180
Pi 3s and Tyga se server seven to zero

383
00:18:17,180 --> 00:18:20,710
our newer operating on the same network

384
00:18:20,710 --> 00:18:22,730
that's all I have for now

385
00:18:22,730 --> 00:18:24,860
any questions about this implementation

386
00:18:24,860 --> 00:18:52,340
or source code thereof to make these

387
00:18:52,340 --> 00:18:59,420
same exchange we haven't really worked

388
00:18:59,420 --> 00:19:02,840
on the verbosity of xml very much but

389
00:19:02,840 --> 00:19:04,460
what we've done is essentially we wanted

390
00:19:04,460 --> 00:19:09,550
to make a representational case so

391
00:19:09,550 --> 00:19:12,470
essentially this works here's how it

392
00:19:12,470 --> 00:19:14,390
could be done is is more what we're

393
00:19:14,390 --> 00:19:16,580
going towards in terms of truncating any

394
00:19:16,580 --> 00:19:18,320
of that we haven't done any work there

395
00:19:18,320 --> 00:19:25,970
but I'm sure it could be done yes sir in

396
00:19:25,970 --> 00:19:29,810
this case for authentication for pub/sub

397
00:19:29,810 --> 00:19:31,880
we can use anonymous users if we just

398
00:19:31,880 --> 00:19:34,510
want to use we just want to collect data

399
00:19:34,510 --> 00:19:49,430
for the message spot well yeah so every

400
00:19:49,430 --> 00:19:51,140
device would have separate passwords

401
00:19:51,140 --> 00:19:56,480
suppose create specific account on our

402
00:19:56,480 --> 00:19:59,390
server in and also we can allow or not

403
00:19:59,390 --> 00:20:03,320
it's up to us or user on the end

404
00:20:03,320 --> 00:20:05,750
decide if you want to decide to decide

405
00:20:05,750 --> 00:20:08,660
if this device should have been allowed

406
00:20:08,660 --> 00:20:13,070
to attach to the server or not when you

407
00:20:13,070 --> 00:20:15,500
say officer but you mean tax I several

408
00:20:15,500 --> 00:20:19,550
users so generally an exampie P server

409
00:20:19,550 --> 00:20:26,630
right yes sir d D mu D D seems to be

410
00:20:26,630 --> 00:20:29,150
popular also an IOT devices what's the

411
00:20:29,150 --> 00:20:31,330
disadvantage

412
00:20:31,490 --> 00:20:36,049
against the solution MQTT is fine in

413
00:20:36,049 --> 00:20:38,779
local networks right over when you would

414
00:20:38,779 --> 00:20:41,870
like to expose access if this network

415
00:20:41,870 --> 00:20:44,809
from an internet then you will need to

416
00:20:44,809 --> 00:20:47,450
go through enough issues and specify

417
00:20:47,450 --> 00:20:50,450
which identity you can connect or export

418
00:20:50,450 --> 00:20:53,029
that's a low connection to XMPP server

419
00:20:53,029 --> 00:20:56,299
from outside networks easier and it's

420
00:20:56,299 --> 00:21:01,340
already done so it Vantage this small

421
00:21:01,340 --> 00:21:04,850
tactile was is connected to our company

422
00:21:04,850 --> 00:21:10,000
server so I have only it is it works us

423
00:21:10,000 --> 00:21:12,830
XMPP client and I have accidentally big

424
00:21:12,830 --> 00:21:17,539
lion on my laptop that's all it's like

425
00:21:17,539 --> 00:21:20,590
sorry guys

426
00:21:20,700 --> 00:21:29,119
[Applause]

