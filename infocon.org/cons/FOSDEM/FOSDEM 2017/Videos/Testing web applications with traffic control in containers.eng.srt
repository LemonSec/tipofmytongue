1
00:00:04,670 --> 00:00:06,649
so thanks for coming I will talk about

2
00:00:06,649 --> 00:00:09,070
testing web app with traffic control

3
00:00:09,070 --> 00:00:11,299
when I mean traffic control actually I

4
00:00:11,299 --> 00:00:13,190
mean only network traffic control like

5
00:00:13,190 --> 00:00:15,410
adding some latency or limiting the

6
00:00:15,410 --> 00:00:19,730
bandwidth and I will do a short

7
00:00:19,730 --> 00:00:22,490
presentation of myself worked with

8
00:00:22,490 --> 00:00:25,039
container before I work on Orkut and I'm

9
00:00:25,039 --> 00:00:28,429
doing work on weave scope on EB PF and

10
00:00:28,429 --> 00:00:30,619
before I did some work with traffic

11
00:00:30,619 --> 00:00:35,060
control for different use case I work at

12
00:00:35,060 --> 00:00:37,789
kinfolk where one of the confronter and

13
00:00:37,789 --> 00:00:40,250
we like to work on new level and Linux

14
00:00:40,250 --> 00:00:43,460
software like this example I work at

15
00:00:43,460 --> 00:00:48,320
system D we like Enix okay we can find

16
00:00:48,320 --> 00:00:52,750
out how we start really with the demo so

17
00:00:52,750 --> 00:00:56,359
the demo I will show you today is this

18
00:00:56,359 --> 00:00:59,120
application application that's a website

19
00:00:59,120 --> 00:01:03,109
that sock shop you can buy salts on it

20
00:01:03,109 --> 00:01:06,110
and I will just quickly go through the

21
00:01:06,110 --> 00:01:09,140
future to to show you so there is a home

22
00:01:09,140 --> 00:01:11,509
page there is a catalog

23
00:01:11,509 --> 00:01:16,189
I will is it big enough yes

24
00:01:16,189 --> 00:01:19,250
and then you can add things to the cart

25
00:01:19,250 --> 00:01:22,270
and then there are your products there

26
00:01:22,270 --> 00:01:25,520
so this application this website has

27
00:01:25,520 --> 00:01:28,729
been implemented using micro service

28
00:01:28,729 --> 00:01:32,469
architecture what it means it's it has

29
00:01:32,469 --> 00:01:34,729
its running in a lot of different

30
00:01:34,729 --> 00:01:37,219
containers on each container has a

31
00:01:37,219 --> 00:01:39,590
different purpose there is the front end

32
00:01:39,590 --> 00:01:42,320
I think is running in PHP and there and

33
00:01:42,320 --> 00:01:43,880
there is a lot of different backgrounds

34
00:01:43,880 --> 00:01:45,710
from different database on different

35
00:01:45,710 --> 00:01:52,340
services so I will show you now we've

36
00:01:52,340 --> 00:01:57,100
scope should I make it a bit smaller

37
00:01:59,320 --> 00:02:02,720
we have scopes that's monitoring on

38
00:02:02,720 --> 00:02:05,330
visualization tool you can see all the

39
00:02:05,330 --> 00:02:07,100
content running on your cluster in my

40
00:02:07,100 --> 00:02:08,720
case I have only one node putting in a

41
00:02:08,720 --> 00:02:10,639
virtual machine on my laptop but the

42
00:02:10,639 --> 00:02:14,180
idea is the same for more nodes on here

43
00:02:14,180 --> 00:02:16,370
I can see for example I have front-end

44
00:02:16,370 --> 00:02:18,590
and what's interesting is instead of

45
00:02:18,590 --> 00:02:21,530
seeing things in the list you can see a

46
00:02:21,530 --> 00:02:23,420
graph you can see what kind of

47
00:02:23,420 --> 00:02:24,770
communication happens between the

48
00:02:24,770 --> 00:02:28,610
different containers so in this example

49
00:02:28,610 --> 00:02:31,130
I have the fronton and I have a link to

50
00:02:31,130 --> 00:02:33,740
the user container talking to the user

51
00:02:33,740 --> 00:02:36,350
of database container so I see

52
00:02:36,350 --> 00:02:39,100
in fact seek and then I shall be able to

53
00:02:39,100 --> 00:02:41,630
see the list of containers the list of

54
00:02:41,630 --> 00:02:44,410
courses in that and then I can explore

55
00:02:44,410 --> 00:02:46,610
the container and I can see the

56
00:02:46,610 --> 00:02:50,239
different connections that happened

57
00:02:50,239 --> 00:02:55,030
there so what I want to test with that

58
00:02:55,030 --> 00:02:59,030
is a scenario where the network does not

59
00:02:59,030 --> 00:03:02,000
behave really correctly as a developer

60
00:03:02,000 --> 00:03:03,890
usually we have a good internet

61
00:03:03,890 --> 00:03:05,360
connection so there is a low latency

62
00:03:05,360 --> 00:03:08,690
good bandwidth and especially when

63
00:03:08,690 --> 00:03:10,430
things are running in a virtual machine

64
00:03:10,430 --> 00:03:11,989
on your laptop there is a good

65
00:03:11,989 --> 00:03:14,600
connection between Firefox on the

66
00:03:14,600 --> 00:03:17,290
virtual machine so it's not easy to see

67
00:03:17,290 --> 00:03:18,410
bergs

68
00:03:18,410 --> 00:03:21,920
in in the UI that could happen with bad

69
00:03:21,920 --> 00:03:24,310
internet connection

70
00:03:24,310 --> 00:03:27,730
for example

71
00:03:29,110 --> 00:03:33,850
here I go to to cut just to see what I

72
00:03:33,850 --> 00:03:36,070
have just refresh the page but it looks

73
00:03:36,070 --> 00:03:39,520
fine it looks the items seems to appear

74
00:03:39,520 --> 00:03:43,630
pretty fast so to be able to tell that

75
00:03:43,630 --> 00:03:49,270
we have developed a plugin on a weave

76
00:03:49,270 --> 00:03:51,820
scope to be able to charge the network

77
00:03:51,820 --> 00:03:55,390
setting to add some latency and if I go

78
00:03:55,390 --> 00:04:00,600
for example to the catalog container

79
00:04:03,030 --> 00:04:07,780
here it is here I have some controls

80
00:04:07,780 --> 00:04:10,000
which come with a scope for example I

81
00:04:10,000 --> 00:04:14,290
have something to get the logs to get a

82
00:04:14,290 --> 00:04:15,670
shell inside the container

83
00:04:15,670 --> 00:04:21,190
I could oppose or stop the container but

84
00:04:21,190 --> 00:04:23,980
what the traffic control plugin added to

85
00:04:23,980 --> 00:04:27,550
that was to add a more buttons to make

86
00:04:27,550 --> 00:04:30,820
it slower and here I have a button to

87
00:04:30,820 --> 00:04:33,220
add a two-second latency if I click on

88
00:04:33,220 --> 00:04:38,680
it then things will be slower so let me

89
00:04:38,680 --> 00:04:42,010
go back to weave socks do and I will

90
00:04:42,010 --> 00:04:44,800
press f12 if you don't know of Firefox

91
00:04:44,800 --> 00:04:47,919
when you press f12 you have Network

92
00:04:47,919 --> 00:04:50,290
console and then when you reload the

93
00:04:50,290 --> 00:04:52,540
page you should be able to see the

94
00:04:52,540 --> 00:04:55,330
different connection the different HTTP

95
00:04:55,330 --> 00:04:59,440
connection to the web page and yeah most

96
00:04:59,440 --> 00:05:01,290
of them should be quite fast but

97
00:05:01,290 --> 00:05:03,640
actually what you see here the page

98
00:05:03,640 --> 00:05:05,050
seems fully loaded but there was no

99
00:05:05,050 --> 00:05:08,500
items in the cat on here it seems to be

100
00:05:08,500 --> 00:05:13,540
only one yeah something doesn't work

101
00:05:13,540 --> 00:05:14,910
well yeah as expected

102
00:05:14,910 --> 00:05:18,330
yeah the image doesn't come very quickly

103
00:05:18,330 --> 00:05:21,480
and that's something you can see here in

104
00:05:21,480 --> 00:05:23,770
in Firefox there should be some

105
00:05:23,770 --> 00:05:27,640
connections most of connection HTTP

106
00:05:27,640 --> 00:05:30,460
requests are quite fast but like one of

107
00:05:30,460 --> 00:05:33,130
them this one like eight seven more than

108
00:05:33,130 --> 00:05:35,110
eight second that's because I did a lot

109
00:05:35,110 --> 00:05:37,200
of latency to the

110
00:05:37,200 --> 00:05:40,030
to the catalogue containers and here we

111
00:05:40,030 --> 00:05:41,500
can see the request was actually to the

112
00:05:41,500 --> 00:05:45,070
catalog URL and that's because the

113
00:05:45,070 --> 00:05:47,680
fronton need to contact the catalog to

114
00:05:47,680 --> 00:05:52,660
be able to fulfill that request so I

115
00:05:52,660 --> 00:05:54,250
will do it again I will refresh again

116
00:05:54,250 --> 00:05:58,930
and so you can see what happened here so

117
00:05:58,930 --> 00:06:01,750
the file the page looks fully loaded but

118
00:06:01,750 --> 00:06:04,750
it's actually there is no spinning wheel

119
00:06:04,750 --> 00:06:07,660
on Firefox to say still loading there is

120
00:06:07,660 --> 00:06:10,780
the wrong sum here it's $0 and you see

121
00:06:10,780 --> 00:06:13,780
one items here instead of two and there

122
00:06:13,780 --> 00:06:17,440
is nothing there and it takes a while to

123
00:06:17,440 --> 00:06:20,560
come so a good user interface will have

124
00:06:20,560 --> 00:06:23,140
some user feedback to say it's still

125
00:06:23,140 --> 00:06:25,870
loading to not confuse the user by

126
00:06:25,870 --> 00:06:28,750
saying there is nothing in a cut because

127
00:06:28,750 --> 00:06:31,570
the user may be prompted to say okay I

128
00:06:31,570 --> 00:06:34,800
lost everything I will try to buy again

129
00:06:34,800 --> 00:06:38,140
so that something can test with traffic

130
00:06:38,140 --> 00:06:41,020
control by using web scope with the

131
00:06:41,020 --> 00:06:44,560
traffic control beginner here I will

132
00:06:44,560 --> 00:06:48,910
waste all the settings so now if i

133
00:06:48,910 --> 00:06:53,020
refresh again it should work fine yeah

134
00:06:53,020 --> 00:06:55,660
no it works fine again and if I go to

135
00:06:55,660 --> 00:06:58,440
the catalog page there is a similar word

136
00:06:58,440 --> 00:07:03,790
if I make it slow again and I have some

137
00:07:03,790 --> 00:07:07,050
demo effect that is supposed to work

138
00:07:07,050 --> 00:07:09,550
and refresh the page and click on

139
00:07:09,550 --> 00:07:12,640
refresh and here it does not look really

140
00:07:12,640 --> 00:07:16,780
good UI in that case so there is a lot

141
00:07:16,780 --> 00:07:19,390
of UI issues that would be benefit from

142
00:07:19,390 --> 00:07:22,450
testing with traffic control to see what

143
00:07:22,450 --> 00:07:25,690
happened in that case okay that's it for

144
00:07:25,690 --> 00:07:30,360
the demo I will go back to the slides

145
00:07:30,480 --> 00:07:33,610
just say a few words about the scope

146
00:07:33,610 --> 00:07:37,000
architecture so in my case I tested only

147
00:07:37,000 --> 00:07:39,550
on one node and in a virtual machine on

148
00:07:39,550 --> 00:07:41,920
my laptop but that's something which if

149
00:07:41,920 --> 00:07:43,840
you have a website that scale on money

150
00:07:43,840 --> 00:07:45,970
not you can use something like unities

151
00:07:45,970 --> 00:07:49,470
to scaler that's what I have actually

152
00:07:49,470 --> 00:07:52,530
my laptop and then you can have a scope

153
00:07:52,530 --> 00:07:54,330
deployed on all the nodes of the cluster

154
00:07:54,330 --> 00:07:58,320
and you have typically one agent on each

155
00:07:58,320 --> 00:08:01,140
node that will inspect the different

156
00:08:01,140 --> 00:08:02,580
connection if we did get the list of

157
00:08:02,580 --> 00:08:04,290
process the restart container the list

158
00:08:04,290 --> 00:08:07,440
of TCP connections and then the agent

159
00:08:07,440 --> 00:08:10,200
will report that to the web drop we get

160
00:08:10,200 --> 00:08:12,210
all the report and merge them and be

161
00:08:12,210 --> 00:08:15,750
able to display them to Firefox so

162
00:08:15,750 --> 00:08:18,840
that's why here I see sorry

163
00:08:18,840 --> 00:08:22,830
here I can see all the nodes on all the

164
00:08:22,830 --> 00:08:28,080
process of the conditions in this case I

165
00:08:28,080 --> 00:08:29,730
add the traffic control plug-in that's

166
00:08:29,730 --> 00:08:32,159
one on each node and the traffic control

167
00:08:32,159 --> 00:08:34,650
bragini will be able to receive orders

168
00:08:34,650 --> 00:08:36,960
from the command when we click on the

169
00:08:36,960 --> 00:08:39,659
buttons and it will offer us the traffic

170
00:08:39,659 --> 00:08:43,620
control like two seconds latency how

171
00:08:43,620 --> 00:08:47,240
does traffic control works he choose

172
00:08:47,240 --> 00:08:51,450
queueing discipline and local network

173
00:08:51,450 --> 00:08:53,820
scheduler he choose the network emulator

174
00:08:53,820 --> 00:08:57,150
one which is available in Linux since

175
00:08:57,150 --> 00:08:59,370
Linux 2.2 so that's really all done

176
00:08:59,370 --> 00:09:02,610
available I think everywhere and it has

177
00:09:02,610 --> 00:09:05,339
some parameter you can define a limit on

178
00:09:05,339 --> 00:09:06,990
the bandwidth you can increase the

179
00:09:06,990 --> 00:09:09,060
latency you can drop some packet you can

180
00:09:09,060 --> 00:09:10,920
say I want to drop two percent of the

181
00:09:10,920 --> 00:09:12,900
packet and you can call it packet you

182
00:09:12,900 --> 00:09:15,000
can do a lot of things here in this talk

183
00:09:15,000 --> 00:09:16,890
I just focus on the latency I just add

184
00:09:16,890 --> 00:09:20,730
some latency to see what happened is

185
00:09:20,730 --> 00:09:25,339
there any questions so far

186
00:09:25,339 --> 00:09:28,339
yes

187
00:09:33,129 --> 00:09:37,310
yes that's a camera module in Linux and

188
00:09:37,310 --> 00:09:40,100
usually all the distributions package it

189
00:09:40,100 --> 00:09:43,310
so it's a single favor you need to

190
00:09:43,310 --> 00:09:45,889
install I don't remember the name of the

191
00:09:45,889 --> 00:09:48,980
RPM but is like kernel module extra or

192
00:09:48,980 --> 00:09:49,699
something like that

193
00:09:49,699 --> 00:09:54,019
and then when it's installed it just

194
00:09:54,019 --> 00:09:56,089
worked the module get charged and loaded

195
00:09:56,089 --> 00:10:02,300
automatically okay

196
00:10:02,300 --> 00:10:04,569
so when we want to test we don't want to

197
00:10:04,569 --> 00:10:08,180
change the traffic control like a tansy

198
00:10:08,180 --> 00:10:09,889
on everything we want to do it on only

199
00:10:09,889 --> 00:10:11,779
one container the one we want to test

200
00:10:11,779 --> 00:10:13,309
like in this example a test in our

201
00:10:13,309 --> 00:10:17,300
catalog and it's possible to do that

202
00:10:17,300 --> 00:10:19,069
because the queuing discipline or

203
00:10:19,069 --> 00:10:20,949
network emulator is installed not

204
00:10:20,949 --> 00:10:23,089
globally but only on one network

205
00:10:23,089 --> 00:10:25,670
interface on each container are their

206
00:10:25,670 --> 00:10:27,499
own network interface so here I can

207
00:10:27,499 --> 00:10:31,009
apply the settings only on one container

208
00:10:31,009 --> 00:10:33,559
or two container or I can choose I don't

209
00:10:33,559 --> 00:10:39,769
have to have this setting globally you

210
00:10:39,769 --> 00:10:43,990
have any other occasions this

211
00:10:48,070 --> 00:10:49,540
the question is can I run this

212
00:10:49,540 --> 00:10:52,840
automatically automatically in CI in

213
00:10:52,840 --> 00:10:56,050
with this exactly and now but internally

214
00:10:56,050 --> 00:10:58,990
it shows the command line tool TC for

215
00:10:58,990 --> 00:11:01,630
traffic control and this thing can be

216
00:11:01,630 --> 00:11:05,830
used in CIO or in script and I can show

217
00:11:05,830 --> 00:11:09,240
you the code actually if I refine it so

218
00:11:09,240 --> 00:11:12,010
here is the github repository on we've

219
00:11:12,010 --> 00:11:14,410
work plugins and it's traffic control

220
00:11:14,410 --> 00:11:20,440
plugin here because you can see and hear

221
00:11:20,440 --> 00:11:22,390
it called a function apply lands on C

222
00:11:22,390 --> 00:11:23,530
but what I do

223
00:11:23,530 --> 00:11:29,530
sorry what it does yeah it's in another

224
00:11:29,530 --> 00:11:30,940
file but what he does it just do a

225
00:11:30,940 --> 00:11:33,280
system exec to execute the TC command

226
00:11:33,280 --> 00:11:35,560
with the correct diameter on the correct

227
00:11:35,560 --> 00:11:37,780
network interface but something can

228
00:11:37,780 --> 00:11:45,490
script yes it's possible to do in this

229
00:11:45,490 --> 00:11:47,800
sorry the question is what about

230
00:11:47,800 --> 00:11:50,800
incoming traffic as opposed to outgoing

231
00:11:50,800 --> 00:11:53,830
traffic in this traffic control plugin I

232
00:11:53,830 --> 00:11:55,830
will only care about outgoing traffic

233
00:11:55,830 --> 00:11:58,750
but it's possible to do incoming traffic

234
00:11:58,750 --> 00:12:00,370
that's a bit more difficult because you

235
00:12:00,370 --> 00:12:02,590
can more easily regulate what you send

236
00:12:02,590 --> 00:12:05,850
rather than what other people's on you

237
00:12:05,850 --> 00:12:10,240
but there is a kernel module called IFB

238
00:12:10,240 --> 00:12:16,960
for I'm not sure what it means in IRB

239
00:12:16,960 --> 00:12:19,330
I'm not sure what he means but right you

240
00:12:19,330 --> 00:12:20,680
can you can redirect the incoming

241
00:12:20,680 --> 00:12:23,410
traffic to that IFB network interface

242
00:12:23,410 --> 00:12:25,570
and then you can apply the setting there

243
00:12:25,570 --> 00:12:28,060
and then you can it will cue the

244
00:12:28,060 --> 00:12:31,570
incoming traffic so if you use TCP right

245
00:12:31,570 --> 00:12:34,990
you'll automatically adapt to the

246
00:12:34,990 --> 00:12:38,260
bandwidth or the latency and then in

247
00:12:38,260 --> 00:12:39,610
practice the application will see the

248
00:12:39,610 --> 00:12:46,320
correct latency another location

249
00:12:55,720 --> 00:12:57,139
[Music]

250
00:12:57,139 --> 00:12:59,880
I've not fight it but it should work as

251
00:12:59,880 --> 00:13:02,329
well because it's just continued on

252
00:13:02,329 --> 00:13:07,260
network interface in the end I guess so

253
00:13:07,260 --> 00:13:12,269
with scope it rely evilly I think on

254
00:13:12,269 --> 00:13:14,670
docker but if it is cottony or not based

255
00:13:14,670 --> 00:13:17,639
on the car we cannot use at the moment

256
00:13:17,639 --> 00:13:21,690
scope JIT but the internal things the TC

257
00:13:21,690 --> 00:13:25,160
command-line tool can be Jackie used

258
00:13:25,160 --> 00:13:28,140
thanks

259
00:13:28,140 --> 00:13:32,769
[Applause]

