1
00:00:00,000 --> 00:00:02,089
um

2
00:00:04,580 --> 00:00:07,160
the nation will be about building

3
00:00:07,160 --> 00:00:09,620
scalable and flexible my psychology

4
00:00:09,620 --> 00:00:12,550
environmental mhan process equal

5
00:00:12,550 --> 00:00:15,950
procedures in the new player we like

6
00:00:15,950 --> 00:00:18,619
it's really much and see how it works

7
00:00:18,619 --> 00:00:23,419
with other tools about me my name is

8
00:00:23,419 --> 00:00:23,930
Mukesh

9
00:00:23,930 --> 00:00:26,300
Lukas al I'm from Hungary and I have a

10
00:00:26,300 --> 00:00:28,399
pretty long history with Linux and

11
00:00:28,399 --> 00:00:29,149
Mexico

12
00:00:29,149 --> 00:00:31,340
I used to be a back-end developer then

13
00:00:31,340 --> 00:00:34,160
as an analyst guy I work for Walt Disney

14
00:00:34,160 --> 00:00:37,879
and after that I joined to palana me no

15
00:00:37,879 --> 00:00:40,309
DBS I was a consultant for many pretty

16
00:00:40,309 --> 00:00:41,899
big companies and I'm a freelance

17
00:00:41,899 --> 00:00:45,289
consultant since working for Edmodo here

18
00:00:45,289 --> 00:00:47,329
you can find my contact in case you have

19
00:00:47,329 --> 00:00:50,269
questions so I built this thing called

20
00:00:50,269 --> 00:00:53,629
damp that's a Dumbo naming but still so

21
00:00:53,629 --> 00:00:55,519
keep in mind this is a testing

22
00:00:55,519 --> 00:00:57,230
environment so this is not the use case

23
00:00:57,230 --> 00:00:59,510
for docker but I wanted to want it to be

24
00:00:59,510 --> 00:01:02,359
as portable as it could be and I didn't

25
00:01:02,359 --> 00:01:04,760
want to install anything on the testing

26
00:01:04,760 --> 00:01:06,980
computer so I only need a doctor to run

27
00:01:06,980 --> 00:01:11,360
and GNU bash nothing more so it's built

28
00:01:11,360 --> 00:01:13,610
on docker instable MHA and proxy sequel

29
00:01:13,610 --> 00:01:16,220
is licensed and GPL 3 and the important

30
00:01:16,220 --> 00:01:17,659
part is the ansible playbook is

31
00:01:17,659 --> 00:01:20,360
eventually on except for from a

32
00:01:20,360 --> 00:01:23,149
production where we used it with MHA so

33
00:01:23,149 --> 00:01:24,890
this is an enterprise-grade

34
00:01:24,890 --> 00:01:28,280
code you have here you can take it and

35
00:01:28,280 --> 00:01:30,290
implement it on your own environment and

36
00:01:30,290 --> 00:01:31,600
you can forget about the docker

37
00:01:31,600 --> 00:01:36,469
ok let's move forward so yeah as I

38
00:01:36,469 --> 00:01:38,719
already mentioned I chose docker because

39
00:01:38,719 --> 00:01:40,850
I've been using it for a while to

40
00:01:40,850 --> 00:01:43,570
testing the ansible playbooks and

41
00:01:43,570 --> 00:01:47,240
because it's portable and simple is my

42
00:01:47,240 --> 00:01:49,369
favorite choice when it comes to config

43
00:01:49,369 --> 00:01:50,960
management and it's simple

44
00:01:50,960 --> 00:01:52,939
agent as it's just SSH in and execute

45
00:01:52,939 --> 00:01:54,829
the command is necessary if the change

46
00:01:54,829 --> 00:01:56,509
is already there it won't touch the

47
00:01:56,509 --> 00:02:00,049
server it has templating pretty good one

48
00:02:00,049 --> 00:02:02,390
and what is important from our

49
00:02:02,390 --> 00:02:05,929
standpoint that it has modules for my

50
00:02:05,929 --> 00:02:08,479
sickle and protocol thanks for been

51
00:02:08,479 --> 00:02:10,389
children for doing that better

52
00:02:10,389 --> 00:02:13,490
MH is an old but proven and stable

53
00:02:13,490 --> 00:02:15,740
open-source h a utility written in Perl

54
00:02:15,740 --> 00:02:20,260
it's easy to configure it supports auto

55
00:02:20,260 --> 00:02:23,060
the internal interactive and interactive

56
00:02:23,060 --> 00:02:24,770
muster feel over but it doesn't beyond

57
00:02:24,770 --> 00:02:26,570
with moving with VIPs or any other

58
00:02:26,570 --> 00:02:30,800
aspect of the failover it only deals

59
00:02:30,800 --> 00:02:33,610
with changing the topology to desired

60
00:02:33,610 --> 00:02:35,780
and practical

61
00:02:35,780 --> 00:02:37,850
thanks for Colleen for the great

62
00:02:37,850 --> 00:02:40,490
presentation its accrediting rewriting

63
00:02:40,490 --> 00:02:43,910
bokya killer killing tool based on rules

64
00:02:43,910 --> 00:02:46,400
and patterns it's also loot branch so

65
00:02:46,400 --> 00:02:50,210
you can split reads and writes it is

66
00:02:50,210 --> 00:02:52,280
also it can be used as a query cache

67
00:02:52,280 --> 00:02:55,070
supports connection pooling you can pry

68
00:02:55,070 --> 00:02:56,780
it as a query is based on the importance

69
00:02:56,780 --> 00:02:58,850
and it supports many more things but

70
00:02:58,850 --> 00:02:59,750
what it is not

71
00:02:59,750 --> 00:03:02,750
it doesn't execute replication topology

72
00:03:02,750 --> 00:03:05,680
changes what mh8 does so they eventually

73
00:03:05,680 --> 00:03:09,920
a really good pair because of this so

74
00:03:09,920 --> 00:03:12,920
this is how proxy cycle looks like in

75
00:03:12,920 --> 00:03:15,220
nutshell this is the application server

76
00:03:15,220 --> 00:03:18,500
proxy cycle has a configuration

77
00:03:18,500 --> 00:03:20,570
interface can be accessed we our

78
00:03:20,570 --> 00:03:25,570
standard MySQL client and it stores the

79
00:03:25,570 --> 00:03:29,930
configuration items in tables you can by

80
00:03:29,930 --> 00:03:32,330
default you can just login the interface

81
00:03:32,330 --> 00:03:38,150
on the port 60-32 and the default port

82
00:03:38,150 --> 00:03:41,420
for the application is 6033

83
00:03:41,420 --> 00:03:43,880
and based on the routing and other

84
00:03:43,880 --> 00:03:46,010
settings it will route your queries to

85
00:03:46,010 --> 00:03:51,290
the desired cluster and instead of using

86
00:03:51,290 --> 00:03:53,540
my students live it using concepts of

87
00:03:53,540 --> 00:03:56,060
host groups so for example the monster

88
00:03:56,060 --> 00:03:58,820
down there is the host group 3 and the

89
00:03:58,820 --> 00:04:01,130
host groups four are the slaves and once

90
00:04:01,130 --> 00:04:02,630
the topology is changes it automatic

91
00:04:02,630 --> 00:04:04,519
detects the change is based on the

92
00:04:04,519 --> 00:04:07,100
read-only flag and move the servers from

93
00:04:07,100 --> 00:04:10,730
one host group to the other one I'm

94
00:04:10,730 --> 00:04:12,380
gonna show this how how that works

95
00:04:12,380 --> 00:04:16,220
soon so this is what I built through the

96
00:04:16,220 --> 00:04:18,529
web server and everything is running on

97
00:04:18,529 --> 00:04:20,238
the docker this is not the use case for

98
00:04:20,238 --> 00:04:24,380
docker but it works fine so we have two

99
00:04:24,380 --> 00:04:26,180
two clusters here for example one with

100
00:04:26,180 --> 00:04:28,529
three slaves only two slaves and

101
00:04:28,529 --> 00:04:30,899
there is the admin host and between

102
00:04:30,899 --> 00:04:32,639
their main host and ansible is locking

103
00:04:32,639 --> 00:04:36,089
running locally to configure proxy cycle

104
00:04:36,089 --> 00:04:38,609
and amici based on the inventory file

105
00:04:38,609 --> 00:04:40,709
generated during the cluster creation

106
00:04:40,709 --> 00:04:42,809
I'm going to show this not rocket

107
00:04:42,809 --> 00:04:43,469
science

108
00:04:43,469 --> 00:04:46,339
but the automation works pretty fine and

109
00:04:46,339 --> 00:04:48,689
the whole point is you can return the

110
00:04:48,689 --> 00:04:50,759
playbook once you change the topology or

111
00:04:50,759 --> 00:04:52,259
add another cluster and it will

112
00:04:52,259 --> 00:04:54,809
regenerate every possible configuration

113
00:04:54,809 --> 00:04:58,649
item within proxy cycle and for MHA to

114
00:04:58,649 --> 00:05:02,159
do the failover us do clear rule routing

115
00:05:02,159 --> 00:05:06,209
or rewriting queries basically that was

116
00:05:06,209 --> 00:05:09,839
the presentation part and let's see the

117
00:05:09,839 --> 00:05:14,939
demo I'm gonna create a cluster so can

118
00:05:14,939 --> 00:05:18,779
you see the let me increase it a little

119
00:05:18,779 --> 00:05:23,989
bit can you see it from the behind

120
00:05:24,460 --> 00:05:29,009
yes okay how is it how is it now

121
00:05:29,009 --> 00:05:31,889
Thanks okay so let's create a cluster

122
00:05:31,889 --> 00:05:34,389
okay it created cluster one two three I

123
00:05:34,389 --> 00:05:36,310
mean created a cluster quads a flood

124
00:05:36,310 --> 00:05:39,130
with three machines one monster and two

125
00:05:39,130 --> 00:05:41,620
slaves we wait for the docker containers

126
00:05:41,620 --> 00:05:42,850
and my sickness site to be able

127
00:05:42,850 --> 00:05:46,090
available yes I'm gonna use heat shock

128
00:05:46,090 --> 00:05:48,970
again guys to the galaxy references okay

129
00:05:48,970 --> 00:05:50,650
now the application is set up let's

130
00:05:50,650 --> 00:05:53,470
create another cluster called Arthur

131
00:05:53,470 --> 00:05:55,720
this is going to consist from one master

132
00:05:55,720 --> 00:05:58,990
and one slave and if you'll then this

133
00:05:58,990 --> 00:06:01,449
little bear script will also set up the

134
00:06:01,449 --> 00:06:06,820
replication so let's see we have most

135
00:06:06,820 --> 00:06:11,440
phi here see the inventory the standard

136
00:06:11,440 --> 00:06:14,169
limit 25 ansible file is generated once

137
00:06:14,169 --> 00:06:17,250
the second cluster is ready there is the

138
00:06:17,250 --> 00:06:20,169
inventory entries for the clusters if

139
00:06:20,169 --> 00:06:22,599
food and the Arthur and we are going to

140
00:06:22,599 --> 00:06:26,729
use the hospital one for seafood and oh

141
00:06:26,729 --> 00:06:32,320
sorry yeah again so we are going to use

142
00:06:32,320 --> 00:06:34,539
the host group one for zippered and

143
00:06:34,539 --> 00:06:38,560
possibly for author this time okay

144
00:06:38,560 --> 00:06:44,320
let's start running the playbook so it's

145
00:06:44,320 --> 00:06:47,199
gonna use two files as the source of

146
00:06:47,199 --> 00:06:50,080
truth one is the inventory file and the

147
00:06:50,080 --> 00:06:53,349
other is the groups group Wars parole

148
00:06:53,349 --> 00:06:58,180
and you can change the port's the IPS is

149
00:06:58,180 --> 00:07:00,370
listening the default application user

150
00:07:00,370 --> 00:07:04,380
and password credentials or if you'll

151
00:07:04,380 --> 00:07:08,979
set up on the my sickle and the

152
00:07:08,979 --> 00:07:12,300
privileges for this given my secure user

153
00:07:12,300 --> 00:07:16,060
you can change the boxes across global

154
00:07:16,060 --> 00:07:18,789
variables here and we run into playbook

155
00:07:18,789 --> 00:07:21,659
will apply these changes

156
00:07:21,980 --> 00:07:26,480
it should be done in 60 90 seconds

157
00:07:26,480 --> 00:07:28,430
depend on the speed of the internet

158
00:07:28,430 --> 00:07:30,200
connection I'm running this on remote

159
00:07:30,200 --> 00:07:33,950
machines because it's a install yeah

160
00:07:33,950 --> 00:07:36,980
dependencies for amici does the most

161
00:07:36,980 --> 00:07:40,370
time-consuming part once it's ready I

162
00:07:40,370 --> 00:07:42,950
wrote a little script that makes it

163
00:07:42,950 --> 00:07:46,580
easier to demonstrate use cases of the

164
00:07:46,580 --> 00:07:50,180
for the proxy cycle and MHA doing some

165
00:07:50,180 --> 00:07:53,600
sis bench yeah Islamic state bench is

166
00:07:53,600 --> 00:07:56,990
the last part of this playbook once it's

167
00:07:56,990 --> 00:07:59,810
drawn i'ma call this little guy

168
00:07:59,810 --> 00:08:06,620
proxy cool menu and the list of features

169
00:08:06,620 --> 00:08:09,620
is pretty long so let's see the servers

170
00:08:09,620 --> 00:08:12,070
configured in the proxy cycle

171
00:08:12,070 --> 00:08:14,870
everything is done so we have a fully

172
00:08:14,870 --> 00:08:17,420
setup environment that that can be used

173
00:08:17,420 --> 00:08:19,460
from an application there are my sequel

174
00:08:19,460 --> 00:08:21,340
servers and clusters behind and

175
00:08:21,340 --> 00:08:23,360
post-acute absolutely aware of

176
00:08:23,360 --> 00:08:26,890
everything so if you see there is the

177
00:08:26,890 --> 00:08:31,760
possible one that was for Zefat and the

178
00:08:31,760 --> 00:08:34,460
two slaves are in the hospital too which

179
00:08:34,460 --> 00:08:38,390
is the host group for readers let me

180
00:08:38,390 --> 00:08:41,390
show you how this looks like in process

181
00:08:41,390 --> 00:08:42,919
occurs so the writer whose group more

182
00:08:42,919 --> 00:08:46,730
say pod is one is a writer 2 is the

183
00:08:46,730 --> 00:08:49,190
reader host group and it's 3 & 4 for the

184
00:08:49,190 --> 00:08:56,120
author so it also generated users of the

185
00:08:56,120 --> 00:09:00,730
post it again user cyst selection 3

186
00:09:00,730 --> 00:09:03,350
there are the users that duplicated

187
00:09:03,350 --> 00:09:05,210
because there is one for the front and

188
00:09:05,210 --> 00:09:07,820
then one for the backend but the point

189
00:09:07,820 --> 00:09:12,280
is proxy seeker is set up to use the

190
00:09:12,280 --> 00:09:16,190
credentials so the kinda shows you set

191
00:09:16,190 --> 00:09:18,020
up in proxy cycle is based on the hose

192
00:09:18,020 --> 00:09:21,680
bib so it will be used F 1 F 1 for hose

193
00:09:21,680 --> 00:09:23,570
Group 1 and they have to be app 3 for

194
00:09:23,570 --> 00:09:26,960
post group 3 and so on so let's see a

195
00:09:26,960 --> 00:09:30,470
failover 'but i made shake oh by the way

196
00:09:30,470 --> 00:09:32,600
every comment we execute here the

197
00:09:32,600 --> 00:09:34,280
terminal is pretty

198
00:09:34,280 --> 00:09:38,450
big are printed above the many points so

199
00:09:38,450 --> 00:09:40,820
if you go to this menu and start playing

200
00:09:40,820 --> 00:09:43,400
with this tool you can have the actual

201
00:09:43,400 --> 00:09:45,860
commands so you can figure the rest out

202
00:09:45,860 --> 00:09:48,320
and you can customize it whenever you

203
00:09:48,320 --> 00:09:52,880
want so 20 is the interactive feel over

204
00:09:52,880 --> 00:09:57,170
from a bicycle yes we want to run this

205
00:09:57,170 --> 00:10:02,330
and we will change the topology from so

206
00:10:02,330 --> 00:10:04,760
using this master to using the tree as

207
00:10:04,760 --> 00:10:07,390
the new master yes we want this space

208
00:10:07,390 --> 00:10:10,250
tip tip tip tip and switching to master

209
00:10:10,250 --> 00:10:13,660
was completed successfully

210
00:10:13,660 --> 00:10:18,350
check the server's and we will see that

211
00:10:18,350 --> 00:10:22,000
the positive one is now contained the

212
00:10:22,000 --> 00:10:25,490
IPV d3 and the rest is in the host loop

213
00:10:25,490 --> 00:10:27,980
- so proxy cycle detected the change and

214
00:10:27,980 --> 00:10:30,950
it moved the server's to the proper host

215
00:10:30,950 --> 00:10:33,680
group this is how easy to do a failover

216
00:10:33,680 --> 00:10:36,620
failover with mah and proxy sequel you

217
00:10:36,620 --> 00:10:37,610
don't have to do anything

218
00:10:37,610 --> 00:10:39,230
epic it's absolutely transparent from

219
00:10:39,230 --> 00:10:41,480
the applications perspective which is a

220
00:10:41,480 --> 00:10:46,360
great thing ok now let's see some

221
00:10:46,360 --> 00:10:50,350
statistics Oh unfortunately

222
00:10:52,350 --> 00:10:56,790
mm-hmm okay

223
00:11:03,290 --> 00:11:07,850
very digest dis empty horse groups it's

224
00:11:07,850 --> 00:11:10,940
still on okay let's run a run a

225
00:11:10,940 --> 00:11:14,960
benchmark to run this bench we have to

226
00:11:14,960 --> 00:11:19,180
prepare the database it's I'm gonna run

227
00:11:19,180 --> 00:11:23,390
this manage prepare which is basically

228
00:11:23,390 --> 00:11:26,810
this command it's going going to feel

229
00:11:26,810 --> 00:11:30,160
the SB test one table once it's done we

230
00:11:30,160 --> 00:11:33,770
can run the let's run short this bench

231
00:11:33,770 --> 00:11:37,490
read only test its many points 16 which

232
00:11:37,490 --> 00:11:41,540
I started dum-dum know where words DPS

233
00:11:41,540 --> 00:11:44,090
is pretty ok so now we are going to

234
00:11:44,090 --> 00:11:49,130
generate some traffic to show you so I

235
00:11:49,130 --> 00:11:51,140
can show you the statistics it looks

236
00:11:51,140 --> 00:11:57,710
better if you decrease the size of that

237
00:11:57,710 --> 00:12:00,530
you have terminal so you can see that

238
00:12:00,530 --> 00:12:03,320
every reads and writes when to the host

239
00:12:03,320 --> 00:12:05,690
book one because that's the writer host

240
00:12:05,690 --> 00:12:07,870
loop and by default every application

241
00:12:07,870 --> 00:12:12,640
the app 1 is routed to use the master

242
00:12:12,640 --> 00:12:16,370
hold on hold on the host book 1

243
00:12:16,370 --> 00:12:19,620
you can have statistics by the whole

244
00:12:19,620 --> 00:12:22,320
scooped so the summary time of some time

245
00:12:22,320 --> 00:12:25,440
spent on the given host loop and the

246
00:12:25,440 --> 00:12:29,490
number of queries ran there now let's

247
00:12:29,490 --> 00:12:34,440
change the game below let's run the

248
00:12:34,440 --> 00:12:37,980
split read write which is basically a

249
00:12:37,980 --> 00:12:40,830
simple command running replaced into you

250
00:12:40,830 --> 00:12:42,960
can see that we are going to add the

251
00:12:42,960 --> 00:12:45,540
rule which is active that every select

252
00:12:45,540 --> 00:12:47,940
should go to the second host group I

253
00:12:47,940 --> 00:12:51,000
mean this rejects that queries that

254
00:12:51,000 --> 00:12:54,390
matches that this reject will go to the

255
00:12:54,390 --> 00:13:00,980
second host group if you fall the

256
00:13:00,980 --> 00:13:05,310
gradual stable it's this is what is

257
00:13:05,310 --> 00:13:08,610
inside the runtime configuration of the

258
00:13:08,610 --> 00:13:13,560
proxy cycle now if we do it on the this

259
00:13:13,560 --> 00:13:16,470
test and check the statistics we will

260
00:13:16,470 --> 00:13:20,340
see that a lot of queries are were being

261
00:13:20,340 --> 00:13:24,290
rebooted to the hospital to

262
00:13:25,730 --> 00:13:28,279
and it's a little bit long for this

263
00:13:28,279 --> 00:13:33,949
presentation but yeah it's done so you

264
00:13:33,949 --> 00:13:37,790
can see that these lines this servers

265
00:13:37,790 --> 00:13:40,029
with the host group to also received

266
00:13:40,029 --> 00:13:45,079
reads you can check the statistics about

267
00:13:45,079 --> 00:13:48,049
the host groups seat over here as well

268
00:13:48,049 --> 00:13:52,160
and there is also statistics about the

269
00:13:52,160 --> 00:13:55,459
very digest so you can see these selects

270
00:13:55,459 --> 00:13:57,649
were run on the host group one during

271
00:13:57,649 --> 00:14:01,220
the previous run but later on all the

272
00:14:01,220 --> 00:14:03,439
selects were executed on the second host

273
00:14:03,439 --> 00:14:05,329
group so this is how easy to set up

274
00:14:05,329 --> 00:14:08,359
process equal to send to to set up a

275
00:14:08,359 --> 00:14:16,899
really basic read write scrip split okay

276
00:14:16,899 --> 00:14:20,379
how much time do I have

277
00:14:20,440 --> 00:14:25,360
five minutes that's nice Oh even better

278
00:14:25,360 --> 00:14:32,550
so let's have to consult fear

279
00:14:34,850 --> 00:14:38,269
and we are going to execute we are going

280
00:14:38,269 --> 00:14:40,459
to see what happens if we are using

281
00:14:40,459 --> 00:14:43,369
Fox's sequel for reading and doing the

282
00:14:43,369 --> 00:14:46,189
field where in the meanwhile so in one

283
00:14:46,189 --> 00:14:55,839
of the windows we're gonna execute a

284
00:14:55,839 --> 00:15:01,009
longer stitch bench that's 60 seconds

285
00:15:01,009 --> 00:15:04,220
long and in the other window I'm gonna

286
00:15:04,220 --> 00:15:08,289
execute a non-interactive failover

287
00:15:08,289 --> 00:15:10,669
eventually it just doesn't stop you to

288
00:15:10,669 --> 00:15:13,249
confirm that you want to actually want

289
00:15:13,249 --> 00:15:20,359
to change your topology blueberries okay

290
00:15:20,359 --> 00:15:22,129
so we switch the master successfully in

291
00:15:22,129 --> 00:15:25,579
this window and the other window there

292
00:15:25,579 --> 00:15:29,869
is this part then the failure happened

293
00:15:29,869 --> 00:15:33,319
right under V under one second by the

294
00:15:33,319 --> 00:15:35,929
way not around one second there were

295
00:15:35,929 --> 00:15:38,329
some reconnects but protocol Cal can

296
00:15:38,329 --> 00:15:41,239
resend this select queries if the

297
00:15:41,239 --> 00:15:44,089
underlying database dies so it's really

298
00:15:44,089 --> 00:15:46,279
cool basically this is what happens when

299
00:15:46,279 --> 00:15:49,970
you experience a failure during reading

300
00:15:49,970 --> 00:15:53,289
through cross processing Cole and

301
00:15:54,450 --> 00:15:57,660
well I also did some minor things that

302
00:15:57,660 --> 00:16:01,320
create value at the base since we have

303
00:16:01,320 --> 00:16:04,740
some minutes let me show you how to add

304
00:16:04,740 --> 00:16:10,589
another cluster to this setup damp let's

305
00:16:10,589 --> 00:16:13,980
stick to this example let's add the

306
00:16:13,980 --> 00:16:17,310
cluster with two machines quadrillion

307
00:16:17,310 --> 00:16:19,579
and

308
00:16:25,110 --> 00:16:28,370
tip to the director

309
00:16:30,210 --> 00:16:34,010
it's done let's check the

310
00:16:34,420 --> 00:16:37,750
Hoss file here you can see there is a

311
00:16:37,750 --> 00:16:39,310
third cluster appear with the host group

312
00:16:39,310 --> 00:16:42,940
five so the users will be f5 at 5:00

313
00:16:42,940 --> 00:16:46,330
vial on the my sacct server the credit

314
00:16:46,330 --> 00:16:48,640
shows on every my sequel server is up

315
00:16:48,640 --> 00:16:52,500
and Gamble which is configured here so

316
00:16:52,500 --> 00:16:56,470
don't mix the two these are the

317
00:16:56,470 --> 00:16:58,300
credentials on the my sequel servers and

318
00:16:58,300 --> 00:17:00,460
protocol makes it transparent and you

319
00:17:00,460 --> 00:17:02,050
can use different kind of credentials

320
00:17:02,050 --> 00:17:07,510
they're just saying okay now we have

321
00:17:07,510 --> 00:17:13,240
this new inventory file we can just read

322
00:17:13,240 --> 00:17:18,040
on the playbook which is basically this

323
00:17:18,040 --> 00:17:24,130
command you should wait like 60 seconds

324
00:17:24,130 --> 00:17:26,199
we don't have to reinstall everything so

325
00:17:26,199 --> 00:17:27,940
if the protocol is already installed and

326
00:17:27,940 --> 00:17:32,500
civil won't install it again and it

327
00:17:32,500 --> 00:17:34,630
won't execute most most of the part only

328
00:17:34,630 --> 00:17:39,750
only the part then when it says changed

329
00:17:39,750 --> 00:17:42,190
adding new servers that's something we

330
00:17:42,190 --> 00:17:45,730
want to add we want to change the

331
00:17:45,730 --> 00:17:47,890
decibel

332
00:17:47,890 --> 00:17:50,260
yeah we are now generating the Compu

333
00:17:50,260 --> 00:17:55,980
fight that's it and if you check the she

334
00:17:55,980 --> 00:18:02,679
foxy circle menu and the second is this

335
00:18:02,679 --> 00:18:07,210
show servers the dip the server truly an

336
00:18:07,210 --> 00:18:13,059
appeared its user appeared it's in the

337
00:18:13,059 --> 00:18:17,290
it has its own host group and well yeah

338
00:18:17,290 --> 00:18:20,169
that doesn't change at all and for

339
00:18:20,169 --> 00:18:24,130
example there is a also a log part of

340
00:18:24,130 --> 00:18:28,270
this little script that can show you the

341
00:18:28,270 --> 00:18:30,490
most important log files the read only

342
00:18:30,490 --> 00:18:33,520
the pink and the connect log and here

343
00:18:33,520 --> 00:18:37,450
you can see how it maps these servers in

344
00:18:37,450 --> 00:18:39,700
order to move it to the proper host

345
00:18:39,700 --> 00:18:43,720
group basically this is what I wanted to

346
00:18:43,720 --> 00:18:47,790
show you questions

347
00:18:49,480 --> 00:18:58,519
[Applause]

348
00:19:09,500 --> 00:19:12,130
you

349
00:19:14,370 --> 00:19:17,370
in

350
00:19:27,490 --> 00:19:35,059
yes yeah Protista coal also as the

351
00:19:35,059 --> 00:19:39,789
writer to the readers by default because

352
00:19:39,789 --> 00:19:42,740
most of these is a source of it and you

353
00:19:42,740 --> 00:19:46,760
can read you can also set up wait for

354
00:19:46,760 --> 00:19:49,130
the server so if you if the monster

355
00:19:49,130 --> 00:19:52,190
outweighs the slave then the queries are

356
00:19:52,190 --> 00:19:56,659
sent they're more likely this is the

357
00:19:56,659 --> 00:19:59,779
expect and this is the expected behavior

358
00:19:59,779 --> 00:20:02,510
when you want your data back immediately

359
00:20:02,510 --> 00:20:05,260
and there is no chance of having

360
00:20:05,260 --> 00:20:07,700
replication like by the way my protocol

361
00:20:07,700 --> 00:20:09,529
checks replication lag and you can set

362
00:20:09,529 --> 00:20:12,320
up a threshold so it won't send reads

363
00:20:12,320 --> 00:20:16,010
for a slave that's higher than a given

364
00:20:16,010 --> 00:20:17,809
threshold sorry right away you should

365
00:20:17,809 --> 00:20:20,779
ask why is the brighter in the reader

366
00:20:20,779 --> 00:20:23,019
host groups as well that was a question

367
00:20:23,019 --> 00:20:26,120
so the writer by default is also part

368
00:20:26,120 --> 00:20:27,830
the monitor the proxy secure monitor

369
00:20:27,830 --> 00:20:31,639
also puts the writer instance to the

370
00:20:31,639 --> 00:20:39,639
reader host group anybody else

371
00:20:40,330 --> 00:20:41,520
thank you

372
00:20:41,520 --> 00:20:49,069
[Applause]

