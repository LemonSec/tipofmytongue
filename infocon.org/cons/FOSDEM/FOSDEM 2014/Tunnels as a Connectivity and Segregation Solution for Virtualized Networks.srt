1
00:00:00,450 --> 00:00:04,440
alright so we're going to be talking
about arm

2
00:00:04,440 --> 00:00:08,679
it's a it's a very networking Korean to
talk to develop or

3
00:00:08,679 --> 00:00:13,139
developer and at working we have to talk
with gonna be are talking briefly about

4
00:00:13,139 --> 00:00:16,320
the lands and the cloud solution

5
00:00:16,320 --> 00:00:20,130
kinda approach specifically gonna be
talking about

6
00:00:20,130 --> 00:00:25,080
OpenStack in OpenStack neutron a bit
about bin and just an introduction to

7
00:00:25,080 --> 00:00:25,930
how the day

8
00:00:25,930 --> 00:00:29,470
how the out we used to be a chance to
kind of a whole cup

9
00:00:29,470 --> 00:00:33,700
VM's and maybe even segregate two
different that works and stuff like that

10
00:00:33,700 --> 00:00:34,450
the name and

11
00:00:34,450 --> 00:00:37,649
are the shortcomings appearance

12
00:00:37,649 --> 00:00:42,500
and how to use tunnels so how these
tunnels to

13
00:00:42,500 --> 00:00:46,649
achieve the it's all the same problem
that renounce currently saw

14
00:00:46,649 --> 00:00:51,489
a and maybe even more so I'll be

15
00:00:51,489 --> 00:00:55,780
up so I miss up Mueller amend engineer
on a software engineer at

16
00:00:55,780 --> 00:01:00,370
Red Hat I'm working on networking
oriented are stopping now open stack and

17
00:01:00,370 --> 00:01:05,420
over power to you already seen a
multiple talks about

18
00:01:05,420 --> 00:01:08,630
and I'll be completely honest I've

19
00:01:08,630 --> 00:01:11,640
probably never talk to more than forty
people

20
00:01:11,640 --> 00:01:15,040
at the same time and I know it anyone's

21
00:01:15,040 --> 00:01:18,869
ever told you this but your you are a
lot of people I

22
00:01:18,869 --> 00:01:22,590
there's just a lot of view I so we're
gonna do

23
00:01:22,590 --> 00:01:25,680
just a quick warm-up

24
00:01:25,680 --> 00:01:28,970
this is actually for my mother

25
00:01:28,970 --> 00:01:32,860
so so we're gonna do I want to

26
00:01:32,860 --> 00:01:35,970
3 freedom sort of deal

27
00:01:35,970 --> 00:01:39,860
I if you would so it's one

28
00:01:39,860 --> 00:01:45,460
to 3 we can do better

29
00:01:45,460 --> 00:01:47,539
we can do slightly better so one to

30
00:01:47,540 --> 00:01:52,909
3 up thank you that was very good

31
00:01:52,909 --> 00:01:57,090
alright I

32
00:01:57,090 --> 00:02:00,759
so I'm kind of used to moving a lot but
I was told not to do that's all

33
00:02:00,759 --> 00:02:06,890
a try to refrain I so this is kinda but
this is kinda a normal of proof of

34
00:02:06,890 --> 00:02:07,840
concepts

35
00:02:07,840 --> 00:02:12,340
or and a small-scale networking
deployment

36
00:02:12,340 --> 00:02:16,270
so as you can see we have two different
physical networks the orange

37
00:02:16,270 --> 00:02:19,290
ishtar that's for the management

38
00:02:19,290 --> 00:02:23,220
traffic that's for like a douche you
know just having a computer know that it

39
00:02:23,220 --> 00:02:24,609
should bring up a new VM

40
00:02:24,610 --> 00:02:27,489
stuff like that that's where manager in
traffic and then we've got another

41
00:02:27,489 --> 00:02:28,580
physical network

42
00:02:28,580 --> 00:02:32,720
just for VM traffic just for VM's
talking to each other and talking

43
00:02:32,720 --> 00:02:36,380
to outside have the clout right so you
could

44
00:02:36,380 --> 00:02:40,209
I'll create two different physical
network supports you could also just

45
00:02:40,209 --> 00:02:44,980
use two different the lands right but
the point of this night is to just

46
00:02:44,980 --> 00:02:48,840
mention other real we're only going to
be talking about the VM

47
00:02:48,840 --> 00:02:52,140
data network right so this is just about
how

48
00:02:52,140 --> 00:02:55,290
VM's talk to each other and two the
Internet

49
00:02:55,290 --> 00:02:58,328
right so just the the teal

50
00:02:58,329 --> 00:03:02,920
network in this case so how did we do
that's

51
00:03:02,920 --> 00:03:06,488
a long long time ago you know yesterday

52
00:03:06,489 --> 00:03:11,280
I'll so we use the dance I'll be nouns
are

53
00:03:11,280 --> 00:03:14,920
they were very kind of well-known
concept they come from the

54
00:03:14,920 --> 00:03:19,238
the physical world so it's kinda natural
for networking people to just yelled the

55
00:03:19,239 --> 00:03:19,769
land it

56
00:03:19,769 --> 00:03:23,350
kinda every problem I so

57
00:03:23,350 --> 00:03:26,620
finance have at a sports and they have
trunk ports

58
00:03:26,620 --> 00:03:30,400
right so that's a that's a switch
configuration you can answer that the

59
00:03:30,400 --> 00:03:31,440
physical switch

60
00:03:31,440 --> 00:03:35,519
and you can configure each port to be
either an access point to a trunk port

61
00:03:35,519 --> 00:03:39,670
so a trunk port is unpadded it's
basically turning okay

62
00:03:39,670 --> 00:03:42,760
this specific port is in the lawn 100

63
00:03:42,760 --> 00:03:45,768
or the envied red you know and the
traffic coming

64
00:03:45,769 --> 00:03:49,269
out about access port will be completely
untagged

65
00:03:49,269 --> 00:03:53,150
so they the the VM for the host that's
connected to that

66
00:03:53,150 --> 00:03:57,280
access point doesn't know that its
interview now but the switch does

67
00:03:57,280 --> 00:04:01,260
right service which has to access ports
and they're both in different

68
00:04:01,260 --> 00:04:05,140
the lands them birth which can do
filtering quite so it can either for

69
00:04:05,140 --> 00:04:07,129
traffic from 14 to the other or

70
00:04:07,129 --> 00:04:11,940
are or not so that's access ports and
trunk ports

71
00:04:11,940 --> 00:04:15,650
are kind of different are you you you
again you

72
00:04:15,650 --> 00:04:19,548
enter the switch in you configure a
specific port to be a strong point

73
00:04:19,548 --> 00:04:22,549
and it actually carries are

74
00:04:22,550 --> 00:04:27,280
had the non traffic right so the actual
been an identification number

75
00:04:27,280 --> 00:04:31,489
which is just the pen bit number so in
this case it would be like the color

76
00:04:31,490 --> 00:04:35,539
what it would be like me than 100 or 200
that's actually carry

77
00:04:35,539 --> 00:04:38,979
with the message by to the message is
carrying

78
00:04:38,979 --> 00:04:43,460
what to feel and am i coming from and
that's configured on the trunk port

79
00:04:43,460 --> 00:04:48,039
up so a trunk port has a range

80
00:04:48,039 --> 00:04:52,020
appeal and that are allowed on that
front court so like

81
00:04:52,020 --> 00:04:56,270
that the dash up the dash

82
00:04:56,270 --> 00:05:01,440
up cables so they're carrying both the
UN 103 than 200

83
00:05:01,440 --> 00:05:04,550
so if they get a message for from

84
00:05:04,550 --> 00:05:07,750
the land 500 then you know that

85
00:05:07,750 --> 00:05:12,070
our traffic will be just filtered and
drop that's kinda the point to the trunk

86
00:05:12,070 --> 00:05:12,479
port

87
00:05:12,479 --> 00:05:16,050
so we could see that we have for compute
nodes right

88
00:05:16,050 --> 00:05:19,490
and that bottom left one that's kinda
blow-up or zoom in

89
00:05:19,490 --> 00:05:24,570
so that's a physical switch but that's
actually a virtual switch right so we

90
00:05:24,570 --> 00:05:28,599
in OpenStack were used up BR in which
was talked about in the last

91
00:05:28,599 --> 00:05:32,110
lecture that's called the integration
bridge so that's an a virtual switch

92
00:05:32,110 --> 00:05:33,349
Michael in Uxbridge or

93
00:05:33,349 --> 00:05:36,560
are an open be switch for the open
source are plugins

94
00:05:36,560 --> 00:05:40,700
by because neutron the whole OpenStack
your truck thing it's pluggable see you

95
00:05:40,700 --> 00:05:42,500
could have different implementations you
could have

96
00:05:42,500 --> 00:05:46,440
OpenStack us ok sorry open source
implementations

97
00:05:46,440 --> 00:05:49,650
for the API and you can have proprietary
close source

98
00:05:49,650 --> 00:05:52,830
implementations for the for the same a
yup

99
00:05:52,830 --> 00:05:56,870
right so for the open source I've
limitations you have

100
00:05:56,870 --> 00:06:01,039
virtual switch inside the compute nodes
and so the bottom

101
00:06:01,039 --> 00:06:05,219
the bottom ports are access port right
to VM are connected to access points

102
00:06:05,220 --> 00:06:08,449
and actually the virtual switch is
connected to the physical switch be a

103
00:06:08,449 --> 00:06:12,180
drug court right sup

104
00:06:12,180 --> 00:06:15,539
this works this is fine its its kinda

105
00:06:15,539 --> 00:06:18,680
kind of awesome up but there's
limitations

106
00:06:18,680 --> 00:06:22,539
right so just kinda hear me out if this

107
00:06:22,539 --> 00:06:25,900
virtual machine that's in a blue that in
the blue network that in the blue bin

108
00:06:25,900 --> 00:06:26,679
and right

109
00:06:26,680 --> 00:06:30,100
been at 200 so if it sends a broadcast
message

110
00:06:30,100 --> 00:06:33,820
should that upper right to compute nodes

111
00:06:33,820 --> 00:06:38,349
get that broadcast I mean we as human
beings we can tell

112
00:06:38,350 --> 00:06:41,530
that this specific compute node isn't
hosting any red

113
00:06:41,530 --> 00:06:45,179
me and is right you don't have any red
VM's in the red network on that compute

114
00:06:45,180 --> 00:06:45,680
node

115
00:06:45,680 --> 00:06:48,800
so this broadcast that sorry originating
from our

116
00:06:48,800 --> 00:06:53,789
computer on the blue network right that
message in it even reach

117
00:06:53,789 --> 00:06:57,229
that computer no right there's no point

118
00:06:57,229 --> 00:07:02,000
so the way to accomplish that is would
be to interacting with the physical

119
00:07:02,000 --> 00:07:06,319
network and I is a softer person I'm not
really into that I kinda

120
00:07:06,319 --> 00:07:09,680
like to work with virtual in software
stuff so

121
00:07:09,680 --> 00:07:13,090
configuring the virtual switch would be
other physical switch would be kind of a

122
00:07:13,090 --> 00:07:13,909
bummer

123
00:07:13,910 --> 00:07:18,580
and I would have to up connect to each
physical switch so I could have a

124
00:07:18,580 --> 00:07:20,568
hundred of these a nightclub

125
00:07:20,569 --> 00:07:24,770
and I would have to are enter each trunk
port and manually configure

126
00:07:24,770 --> 00:07:28,609
a trunk ports to to carry or to trunk

127
00:07:28,610 --> 00:07:33,680
specific the dance right and that would
accomplish what we wanted to do so that

128
00:07:33,680 --> 00:07:35,229
that this broadcast

129
00:07:35,229 --> 00:07:39,580
reaches the physical switch the physical
switch sees that this drug court

130
00:07:39,580 --> 00:07:42,830
are is only is only carrying the red
vino

131
00:07:42,830 --> 00:07:46,370
so it wouldn't forward the broadcast
message so mission accomplished but

132
00:07:46,370 --> 00:07:48,210
obviously that's very manual

133
00:07:48,210 --> 00:07:51,370
it's very tedious very it doesn't scale

134
00:07:51,370 --> 00:07:54,430
I doesn't scale even for small
deployments actually so what most

135
00:07:54,430 --> 00:07:58,639
the system admins do they just answer
each switch so for each truck or they

136
00:07:58,639 --> 00:07:59,490
just

137
00:07:59,490 --> 00:08:02,970
and to the entire range right because
that's the only

138
00:08:02,970 --> 00:08:07,759
thing that's feasible so that means that
break basically everybody cast reaches

139
00:08:07,759 --> 00:08:11,870
everywhere on the computer don't even
compute note that aren't hosting

140
00:08:11,870 --> 00:08:14,990
VM's in the specific network

141
00:08:14,990 --> 00:08:18,479
right does that make sense so that that
kind of a problem

142
00:08:18,479 --> 00:08:23,960
I am also there's kind of a
philosophical issue up taking the a

143
00:08:23,960 --> 00:08:29,539
to be lands I am just that's that's kind
of a physical world concept but

144
00:08:29,539 --> 00:08:32,578
are compute nodes are aware of the same
freelance we're kinda

145
00:08:32,578 --> 00:08:36,659
taking the Lambs & just bringing them
into the virtual world

146
00:08:36,659 --> 00:08:40,828
which is not ideal I so that's the lands

147
00:08:40,828 --> 00:08:45,219
bite so are we can do better

148
00:08:45,220 --> 00:08:49,569
so tunnels are basically a well known
and familiar concept you know them as

149
00:08:49,569 --> 00:08:50,180
just

150
00:08:50,180 --> 00:08:53,699
bpm right we all use BB and reconnect
from our home

151
00:08:53,699 --> 00:08:58,270
everyone I work from home and stuff like
that so tunnels are basically the

152
00:08:58,270 --> 00:09:01,360
are like a VPN but its unencrypted

153
00:09:01,360 --> 00:09:04,770
right so or a better way of putting it
would be a VPN is an increased the

154
00:09:04,770 --> 00:09:05,410
tunnel

155
00:09:05,410 --> 00:09:08,930
so I don't care about encryption I don't
know anything about that are

156
00:09:08,930 --> 00:09:12,530
also who cares about security right so

157
00:09:12,530 --> 00:09:15,550
I was thinking a so

158
00:09:15,550 --> 00:09:18,990
we're gonna on economy are going to be
talking about tunnels but only that just

159
00:09:18,990 --> 00:09:20,360
the unencrypted stuff

160
00:09:20,360 --> 00:09:23,390
right so I could configure a ton on than
just hack on

161
00:09:23,390 --> 00:09:26,740
encryption on top of that so that kinda
fun interesting

162
00:09:26,740 --> 00:09:30,410
and also there's different types of
powell's their GRE tunnels a big than

163
00:09:30,410 --> 00:09:31,930
1000 that doesn't matter

164
00:09:31,930 --> 00:09:35,150
that's just that the headers and and
stuff like that we're just going to be

165
00:09:35,150 --> 00:09:37,060
talking about concepts

166
00:09:37,060 --> 00:09:40,089
are so there's two use cases

167
00:09:40,089 --> 00:09:43,550
right to through that I could fit in
this light so there's

168
00:09:43,550 --> 00:09:47,729
I let's say that I have I'll a large
corporation

169
00:09:47,730 --> 00:09:52,290
you know and I have a bunch of different
sites one is in Brussels and one is in

170
00:09:52,290 --> 00:09:56,150
a more up so really

171
00:09:56,150 --> 00:09:59,300
the kind of experience that I want to
achieve is that are

172
00:09:59,300 --> 00:10:04,310
computers hosted in in different sites
kinda feel like they're in the same site

173
00:10:04,310 --> 00:10:08,380
by because for example are say Brussels
is the kind of the headquarters and it

174
00:10:08,380 --> 00:10:10,439
has a bunch of company resources

175
00:10:10,440 --> 00:10:14,660
like company web sites closed for
employees only and a bunch of different

176
00:10:14,660 --> 00:10:18,209
are company resources so I like the

177
00:10:18,209 --> 00:10:21,549
the people from other sites to be able
to reach those

178
00:10:21,549 --> 00:10:26,600
right and I'm also using not i knows I'm
using private IP addresses are normally

179
00:10:26,600 --> 00:10:27,780
without the tunnel

180
00:10:27,780 --> 00:10:33,270
I wouldn't be able to ping from a
Brussels computer to a network computer

181
00:10:33,270 --> 00:10:36,819
both because I'm using not its private
IP addresses can't reach

182
00:10:36,819 --> 00:10:40,969
those computers like our and our own
home network we have private addresses

183
00:10:40,970 --> 00:10:44,040
people theoretically can't pink or can't
reach

184
00:10:44,040 --> 00:10:47,910
our own computers behind the not so

185
00:10:47,910 --> 00:10:52,990
I'll also I want to be able like are the
personal example I have a

186
00:10:52,990 --> 00:10:57,780
a development laptop in my own office
and i wanna be able to ssh or reach

187
00:10:57,780 --> 00:11:01,030
up hypervisors or computer resources and
I'm using

188
00:11:01,030 --> 00:11:04,790
and their are in different sites I

189
00:11:04,790 --> 00:11:10,000
so we can use the tunnel now mind you a
tunnel is a manually configured

190
00:11:10,000 --> 00:11:13,809
opting which which which we actually
configure on the physical routers right

191
00:11:13,809 --> 00:11:14,650
so we

192
00:11:14,650 --> 00:11:17,839
basically we SSH or Telnet into the left

193
00:11:17,839 --> 00:11:21,650
router and we just tell it listen if you
wanna reach

194
00:11:21,650 --> 00:11:25,100
the 172 16 at work then you take

195
00:11:25,100 --> 00:11:29,750
I love those all about traffic a new
router to a tunnel device

196
00:11:29,750 --> 00:11:33,260
and the tunnel device is also a second
configuration step

197
00:11:33,260 --> 00:11:37,880
sorry which I also manually configure
right so I have this kind of

198
00:11:37,880 --> 00:11:42,030
tunnel interface and when I configure
that on interface I tell us what's the

199
00:11:42,030 --> 00:11:45,400
source IP on since the nation IP for the
tunnel

200
00:11:45,400 --> 00:11:49,150
and then I just I have to figured out
the routing just the static routing that

201
00:11:49,150 --> 00:11:50,559
I talked about earlier

202
00:11:50,559 --> 00:11:54,140
right to the left rather know that if it
wants to reach this network

203
00:11:54,140 --> 00:11:58,319
and has to leave through the town device
and the other way around

204
00:11:58,319 --> 00:12:02,020
right arm

205
00:12:02,020 --> 00:12:04,900
so that's kinda that the man you good
progression that you do and you also

206
00:12:04,900 --> 00:12:07,199
have very similar if you want to work
from home

207
00:12:07,199 --> 00:12:10,660
right so it kind of like a i think is
exactly like a a VPN

208
00:12:10,660 --> 00:12:13,780
so you have you create the tunnel from
your own computer

209
00:12:13,780 --> 00:12:18,589
to the the router or the VPN server that
you're connecting two minutes actually

210
00:12:18,589 --> 00:12:22,189
exactly the same thing I'll

211
00:12:22,189 --> 00:12:26,610
right so basically titles aren't magic
they're just a a silly encapsulation

212
00:12:26,610 --> 00:12:27,470
trick

213
00:12:27,470 --> 00:12:31,010
right if you remember the oversize them
and their mothers you probably heard

214
00:12:31,010 --> 00:12:34,329
this before the TCPIP models there's a
different layers

215
00:12:34,329 --> 00:12:37,790
and different headers and encapsulation
right so

216
00:12:37,790 --> 00:12:40,980
what are we doing here we're just taking

217
00:12:40,980 --> 00:12:44,230
the data whatever it is that you want to
send

218
00:12:44,230 --> 00:12:48,170
so this would be the the IP packets
representing all wrapping that

219
00:12:48,170 --> 00:12:52,140
data right to the source IP is some
machine in Brussels

220
00:12:52,140 --> 00:12:55,150
and the destination IP isn't some
machine in the other

221
00:12:55,150 --> 00:12:59,569
site so we take that packet and we're at
its

222
00:12:59,569 --> 00:13:04,309
in our tunnel our help that would be GRE
in this case

223
00:13:04,309 --> 00:13:07,589
right so the or

224
00:13:07,589 --> 00:13:10,959
only important Heather in the GRE
Heather

225
00:13:10,959 --> 00:13:14,619
or the open on important field sorry is
what's the next protocol

226
00:13:14,620 --> 00:13:18,059
so the next web protocol in this case
would also be I P

227
00:13:18,059 --> 00:13:21,209
right because each I Heather

228
00:13:21,209 --> 00:13:24,839
has data and the data is just a bunch of
random bits

229
00:13:24,839 --> 00:13:28,510
so the question is how the computer know
how to interpret the that data

230
00:13:28,510 --> 00:13:31,620
to Internet right so each other has
kinda

231
00:13:31,620 --> 00:13:35,270
what's the data inside of me what's the
next header

232
00:13:35,270 --> 00:13:39,199
so the next header is also I P because
in this case we're just taking IP

233
00:13:39,199 --> 00:13:40,939
packets and just wrapping them up

234
00:13:40,939 --> 00:13:45,030
in more IP packets so the beauty here

235
00:13:45,030 --> 00:13:48,970
is that the outer IP packet the source
IP

236
00:13:48,970 --> 00:13:52,589
is the source but I know that the nation
at be abused is the destination of the

237
00:13:52,589 --> 00:13:53,449
title right

238
00:13:53,449 --> 00:13:57,740
so the ISP's in the world right or the
Internet

239
00:13:57,740 --> 00:14:03,130
I just seeing a packet that's being
routed from 1111 2222

240
00:14:03,130 --> 00:14:06,449
so the only thing that we require for
more physical network

241
00:14:06,449 --> 00:14:10,689
is that these two routers can actually
think each other

242
00:14:10,689 --> 00:14:14,380
that the only thing that we kinda
require and the

243
00:14:14,380 --> 00:14:18,579
the ISP's or the routers on the Internet
they don't know

244
00:14:18,579 --> 00:14:21,640
what's this Brussels network or what's
that no more network right they just

245
00:14:21,640 --> 00:14:23,069
don't know

246
00:14:23,069 --> 00:14:27,429
any of that they just need to be able to
route from one routed to the next

247
00:14:27,429 --> 00:14:31,319
so that's kind of what we do tunnels and
that kinda the physical or the real

248
00:14:31,319 --> 00:14:32,229
world

249
00:14:32,230 --> 00:14:35,770
usage I am so

250
00:14:35,770 --> 00:14:38,980
in OpenStack neutron and in the cloud in
the data center virtualization

251
00:14:38,980 --> 00:14:41,299
management by that whole

252
00:14:41,299 --> 00:14:44,910
our context so we kind of do it
differently

253
00:14:44,910 --> 00:14:48,699
and basically these are are compute
nodes

254
00:14:48,699 --> 00:14:51,699
are our hypervisors their hosting the
VM's

255
00:14:51,699 --> 00:14:55,500
so I'll we just read the full measure
tunnels

256
00:14:55,500 --> 00:15:00,240
right we just hookup each computer 02
every other computer ok we just create

257
00:15:00,240 --> 00:15:01,290
these panels

258
00:15:01,290 --> 00:15:04,949
and the first thing that kinda should
pop into your mind is

259
00:15:04,949 --> 00:15:09,120
that sounds expensive right because but
you just kind of need to remember that

260
00:15:09,120 --> 00:15:10,470
these tunnels are

261
00:15:10,470 --> 00:15:14,740
the overhead is basically just in the
database

262
00:15:14,740 --> 00:15:17,900
up to compute node in with thats but I

263
00:15:17,900 --> 00:15:21,620
I so we just created this full measure
tunnels between

264
00:15:21,620 --> 00:15:26,650
all the compute nodes and then it kinda
exactly like about the previous example

265
00:15:26,650 --> 00:15:29,419
right if so with IBM want to talk to
another VM

266
00:15:29,419 --> 00:15:33,510
that's on another computer old so we
just do the encapsulation tree can we do

267
00:15:33,510 --> 00:15:37,329
we just wrap up the packets exactly like
in the previous example

268
00:15:37,329 --> 00:15:41,890
and if F are two computers wanna talk in
the same hypervisor

269
00:15:41,890 --> 00:15:45,380
then they just talk to each other they
actually directly via the same virtual

270
00:15:45,380 --> 00:15:46,790
switch right so

271
00:15:46,790 --> 00:15:49,799
both have the machines would be
connected to the same virtual switch

272
00:15:49,799 --> 00:15:53,809
BR in toward the integration bridge like
an OP open be switch

273
00:15:53,809 --> 00:15:58,130
a bridge or switch and they were just
talk to each other directly

274
00:15:58,130 --> 00:16:01,130
a right

275
00:16:01,130 --> 00:16:04,449
so what if we want to achieve
segregation right

276
00:16:04,449 --> 00:16:08,130
like an in this previous example you can
see that I still have two networks I

277
00:16:08,130 --> 00:16:10,030
have the red network in the blue network

278
00:16:10,030 --> 00:16:13,049
so alright so about segregation or

279
00:16:13,049 --> 00:16:16,270
I know us being speeding up networking

280
00:16:16,270 --> 00:16:20,140
so to VM

281
00:16:20,140 --> 00:16:23,829
on the same hypervisor they're still
using

282
00:16:23,829 --> 00:16:26,979
the lands which is kind of confusing
okay so we're

283
00:16:26,980 --> 00:16:30,470
you we're using tunneling of for the
actual

284
00:16:30,470 --> 00:16:34,179
up for forwarding traffic between the
two different between two

285
00:16:34,179 --> 00:16:37,390
different compute nodes but the BR

286
00:16:37,390 --> 00:16:40,910
in on each compute nodes over or the
virtual switch

287
00:16:40,910 --> 00:16:44,020
is still using the lawn access ports

288
00:16:44,020 --> 00:16:48,040
to segregate between different networks

289
00:16:48,040 --> 00:16:51,699
right so VM connected to the same
virtual switch

290
00:16:51,699 --> 00:16:57,520
they're still using been an access ports
so each network gets a different feel

291
00:16:57,520 --> 00:17:01,630
so we're kind of mixing and matching I
but

292
00:17:01,630 --> 00:17:04,910
more interesting is what what's what's
going on

293
00:17:04,910 --> 00:17:08,579
with our traffic on different computers
what right we want to talk about the

294
00:17:08,579 --> 00:17:10,089
tunnels

295
00:17:10,089 --> 00:17:13,159
so with the Lance we use

296
00:17:13,160 --> 00:17:17,620
trunk ports right we tagged the frames
with the feel and identification number

297
00:17:17,619 --> 00:17:20,879
so it's been 100 and 200 and that I

298
00:17:20,880 --> 00:17:24,679
information isn't lost its being trunked
or forwarded

299
00:17:24,679 --> 00:17:29,720
I across the entire network so the other
and knows what the land

300
00:17:29,720 --> 00:17:34,460
I'll with this message originated from
so I can either filter or not

301
00:17:34,460 --> 00:17:37,530
so we're basically doing the exact same
thing

302
00:17:37,530 --> 00:17:41,840
alright so we're using the GRE Heather
or the BX that Heather

303
00:17:41,840 --> 00:17:45,580
basically the timing Heather and we're
using the field there

304
00:17:45,580 --> 00:17:49,480
which is called the time the lady so the
tunnel ID

305
00:17:49,480 --> 00:17:52,730
it's basically the exact same thing
right we take a network with tag it with

306
00:17:52,730 --> 00:17:53,960
a specific number

307
00:17:53,960 --> 00:17:57,840
and that number is paced inside the
tunnel Heather

308
00:17:57,840 --> 00:18:01,189
so with so that way we can color or we
can kinda

309
00:18:01,190 --> 00:18:05,340
tag are packets with the ID

310
00:18:05,340 --> 00:18:10,080
that network right so that's how we do
segregation across

311
00:18:10,080 --> 00:18:13,399
are complete notes so

312
00:18:13,400 --> 00:18:17,620
we we've kind of got to talk about how
do we what's the what's the logic right

313
00:18:17,620 --> 00:18:18,379
how do we

314
00:18:18,380 --> 00:18:22,059
forward unique ass traffic how do we
fourth broadcast traffic so this is kind

315
00:18:22,059 --> 00:18:22,399
of a

316
00:18:22,400 --> 00:18:26,230
a short review so physical just kind of
classical

317
00:18:26,230 --> 00:18:30,309
us which is to be physical switches that
could be virtual switches

318
00:18:30,309 --> 00:18:33,700
they're called are just not prepared to
learning switches

319
00:18:33,700 --> 00:18:38,570
right so how they work they have this
kind of table

320
00:18:38,570 --> 00:18:41,879
which is up a binding or a map between

321
00:18:41,880 --> 00:18:46,600
the port number right so I if I have it
supports a number 21 to 24

322
00:18:46,600 --> 00:18:51,439
so each port is bound to a setup mac
Address is

323
00:18:51,440 --> 00:18:55,450
right so basically the switches kind of
sniffing traffic as it goes

324
00:18:55,450 --> 00:18:58,450
through it it looks at the source mac
Address right

325
00:18:58,450 --> 00:19:01,890
where is this message coming from and
what what portis

326
00:19:01,890 --> 00:19:04,970
is it coming from so if it a so if Mac

327
00:19:04,970 --> 00:19:08,900
a is the source Mac and it came from
port 1

328
00:19:08,900 --> 00:19:13,100
the now I know that whenever someone
wants to talk to mack et

329
00:19:13,100 --> 00:19:17,250
I can just order to 2.1 right and that's
where I will find

330
00:19:17,250 --> 00:19:21,040
mack et so that's kinda what physical
that's what kinda

331
00:19:21,040 --> 00:19:25,290
are learning to there to learning
switches do virtual or physical

332
00:19:25,290 --> 00:19:29,850
so we're doing something that's very
similar

333
00:19:29,850 --> 00:19:32,850
so we have two virtual switches on each
computer

334
00:19:32,850 --> 00:19:36,850
we have the integration bridge so all
the PM's are connected

335
00:19:36,850 --> 00:19:40,620
that bridge and that bridge is connected
to the timing bridge

336
00:19:40,620 --> 00:19:43,780
so the telling bridge we just controller

337
00:19:43,780 --> 00:19:48,470
and we can a can create this Store to
favorites

338
00:19:48,470 --> 00:19:53,050
right so each message add each packet as
it comes in

339
00:19:53,050 --> 00:19:58,070
of from any other computer code to into
my own computer no

340
00:19:58,070 --> 00:20:01,490
the night check what to know that it
coming

341
00:20:01,490 --> 00:20:05,070
come in on right was it the first to
know the second time because I'm

342
00:20:05,070 --> 00:20:05,889
connected

343
00:20:05,890 --> 00:20:09,930
I have a tunnel to each other computer
lab so I check what computer know that

344
00:20:09,930 --> 00:20:10,800
this message came

345
00:20:10,800 --> 00:20:14,870
came in on right so that's the pier
that's the IP part

346
00:20:14,870 --> 00:20:17,939
the pier and we just said that

347
00:20:17,940 --> 00:20:22,260
he that the messages are tagged right so
I take the tunnel ID which is actually

348
00:20:22,260 --> 00:20:23,650
the network ID

349
00:20:23,650 --> 00:20:26,890
and I take those two I I did

350
00:20:26,890 --> 00:20:31,200
up just numbers and I bound them

351
00:20:31,200 --> 00:20:35,170
to the source mac Address so it's
basically the exact

352
00:20:35,170 --> 00:20:38,880
exact same concept as a learning switch
we just do that four different headers

353
00:20:38,880 --> 00:20:42,540
bite for the tunnel and the tunnel AB
and the source mac Address

354
00:20:42,540 --> 00:20:46,800
so that way we know how two forwards
information

355
00:20:46,800 --> 00:20:50,669
through a specific tunnel right week we
need to know

356
00:20:50,670 --> 00:20:54,920
up for a VM basically where what's what
compute node

357
00:20:54,920 --> 00:20:58,430
should be said so it should be sent our
messages to

358
00:20:58,430 --> 00:21:02,510
right so that's how we can do a

359
00:21:02,510 --> 00:21:06,780
Gundam

360
00:21:06,780 --> 00:21:10,960
way

361
00:21:10,960 --> 00:21:14,130
okay I'll right

362
00:21:14,130 --> 00:21:17,260
so we talked about unique ass traffic we
talked about learning right

363
00:21:17,260 --> 00:21:20,910
we talked about how do we know which
compute node is hosting the VM but i

364
00:21:20,910 --> 00:21:22,280
wanna talk to

365
00:21:22,280 --> 00:21:24,920
so we talked about learning and now
let's talk about broadcast traffic

366
00:21:24,920 --> 00:21:26,700
because broadcast traffic is kinda

367
00:21:26,700 --> 00:21:31,070
can have different maybe one of them I
some stuff that they're are

368
00:21:31,070 --> 00:21:35,139
so generally speaking that the kinda the
first approach that

369
00:21:35,140 --> 00:21:39,040
that you would think about would be for
any broadcast traffic

370
00:21:39,040 --> 00:21:42,300
or multicast traffic as well for that
matter

371
00:21:42,300 --> 00:21:46,280
that's leaving a VM on the red network
right it would reach the tunneling

372
00:21:46,280 --> 00:21:46,860
bridge

373
00:21:46,860 --> 00:21:51,010
and that bottom right compute node so we
would just basically send

374
00:21:51,010 --> 00:21:55,470
out through every time bites that kind
of the basic approach

375
00:21:55,470 --> 00:22:00,170
and that works that definitely works on
but we want to be smarter

376
00:22:00,170 --> 00:22:04,410
rights because because we can and
because I we kinda

377
00:22:04,410 --> 00:22:08,160
know a software engineers we just we
simply we like these optimizations its

378
00:22:08,160 --> 00:22:11,730
something that's nice and we kinda can
reason about I

379
00:22:11,730 --> 00:22:16,690
so we can do two things so we can just
send less broadcasts

380
00:22:16,690 --> 00:22:20,740
and weak and and about the broadcast
that are left

381
00:22:20,740 --> 00:22:24,020
you know that we didn't optimize the way
we can kinda make them smaller

382
00:22:24,020 --> 00:22:27,320
we can make them reach only the computer
knows that they should reach

383
00:22:27,320 --> 00:22:31,550
so about minimizing broadcast turns out
a lot

384
00:22:31,550 --> 00:22:35,050
up broadcasts are just about are
requests right if you have

385
00:22:35,050 --> 00:22:38,100
in this is in the physical and virtual
world as well if you have two computers

386
00:22:38,100 --> 00:22:40,490
and they're really want to talk to each
other

387
00:22:40,490 --> 00:22:43,630
right to the first computer knows the IP
address of the second computer

388
00:22:43,630 --> 00:22:46,970
but if that doesn't know it's mac
Address because it made with never talk

389
00:22:46,970 --> 00:22:48,490
to it so it just asks

390
00:22:48,490 --> 00:22:52,680
so it ass asks in a broadcast fashion so
it said the broadcast

391
00:22:52,680 --> 00:22:56,580
what is the Mac IP address so-and-so and
that other

392
00:22:56,580 --> 00:23:02,439
our machine answers that so a lot I've
broadcast traffic is just because I are

393
00:23:02,440 --> 00:23:05,980
so we go okay so there's a neutron
controller

394
00:23:05,980 --> 00:23:10,490
and is that without I a dedicated as the
end controller white wheat in the

395
00:23:10,490 --> 00:23:12,430
previous session we talked about

396
00:23:12,430 --> 00:23:16,120
open daylight dies the end that sort of
stuff so just in

397
00:23:16,120 --> 00:23:19,520
neutron in OpenStack neutron

398
00:23:19,520 --> 00:23:22,810
we know each p.m. what is it

399
00:23:22,810 --> 00:23:27,120
IP address we know what is its mac
Address and we know where is it

400
00:23:27,120 --> 00:23:30,540
are scheduled right so what compute node
is hosting

401
00:23:30,540 --> 00:23:36,510
the VM I so that space so we we are
basing it capable of filling

402
00:23:36,510 --> 00:23:39,890
are tables right we can we can we know

403
00:23:39,890 --> 00:23:45,350
for each IP address what is it smack
address and we can send that information

404
00:23:45,350 --> 00:23:49,179
to olive the compute nodes so on the
compute nodes actually have

405
00:23:49,180 --> 00:23:52,720
peaceful are tables write them all up to
be

406
00:23:52,720 --> 00:23:56,050
all I love the VM's so that means we're
that when this

407
00:23:56,050 --> 00:23:59,129
red p.m. is trying to paying are
somewhat

408
00:23:59,130 --> 00:24:03,600
are some where r communicates with the
other at BM so the local computer

409
00:24:03,600 --> 00:24:06,899
note actually received and are a full
are

410
00:24:06,900 --> 00:24:09,970
table from the neutron controller and it
knows

411
00:24:09,970 --> 00:24:13,420
okay so this VM I know what's its IP
address I know what

412
00:24:13,420 --> 00:24:16,900
what is its mac Address and I'll just
answer it locally

413
00:24:16,900 --> 00:24:21,330
right there is no reason to take the
broad the harp broadcast and forward it

414
00:24:21,330 --> 00:24:24,399
to all the tunnels there's no reason to
do that so this could

415
00:24:24,400 --> 00:24:27,410
computer will actually answered the
local art request

416
00:24:27,410 --> 00:24:30,850
so that's basically minimizing broadcast

417
00:24:30,850 --> 00:24:34,120
right just a lot just less broadcast
thats

418
00:24:34,120 --> 00:24:38,350
that's good arm the other thing that we
can do

419
00:24:38,350 --> 00:24:42,060
about the remaining broadcasts which
there's still a lot of

420
00:24:42,060 --> 00:24:45,690
I we can just make them smarter so
generally speaking

421
00:24:45,690 --> 00:24:49,000
again going back to that centralized
neutron controller

422
00:24:49,000 --> 00:24:52,670
which knows I love the VM's where are
they what are their

423
00:24:52,670 --> 00:24:56,210
IP addresses what are their mac Address
is so whenever

424
00:24:56,210 --> 00:24:59,400
up this VM sends out a broadcast

425
00:24:59,400 --> 00:25:02,770
a message this computer know that now
knows

426
00:25:02,770 --> 00:25:05,960
okay I probably shouldn't for that out
that's

427
00:25:05,960 --> 00:25:09,140
panel but because someone the controller
someone told me

428
00:25:09,140 --> 00:25:13,130
but there's no red VM's here so that's
the other thing is that we can do in

429
00:25:13,130 --> 00:25:15,370
there there's there's kind of small
asterisks

430
00:25:15,370 --> 00:25:19,020
this barely works I it only works with

431
00:25:19,020 --> 00:25:23,379
up the emo to plug in with a specific
mechanized mechanism driver

432
00:25:23,380 --> 00:25:28,180
from specific versions right but up

433
00:25:28,180 --> 00:25:31,320
that's in the the small details small
part

434
00:25:31,320 --> 00:25:34,429
right so we're going to do

435
00:25:34,430 --> 00:25:39,250
a very shallow deep dive into kind of
the flow tables or the

436
00:25:39,250 --> 00:25:43,520
the kind the logic I in the tunneling
Ridge

437
00:25:43,520 --> 00:25:46,840
right and I'm going to be talking about
the open beast which specifically

438
00:25:46,840 --> 00:25:50,010
because thats that's when I know about
song on

439
00:25:50,010 --> 00:25:53,360
awning on only going to be talking about
something that I know

440
00:25:53,360 --> 00:25:56,469
up so often we switch

441
00:25:56,470 --> 00:25:59,910
I each Ridge are eats

442
00:25:59,910 --> 00:26:04,510
instance up in OP open virtual switch
can operate in two modes:

443
00:26:04,510 --> 00:26:07,710
right two different modes first mode is
just normal world

444
00:26:07,710 --> 00:26:10,930
which is just I'll are learning switched
just the regular switch

445
00:26:10,930 --> 00:26:14,960
like we talked about earlier just
learning Mac addresses and or that's the

446
00:26:14,960 --> 00:26:18,130
I the other mode is called flow mode

447
00:26:18,130 --> 00:26:21,420
which basically means that I can
manually control the logic

448
00:26:21,420 --> 00:26:25,140
about virtual switch I can put in rules

449
00:26:25,140 --> 00:26:28,360
which'll which will dictate how that's
which works

450
00:26:28,360 --> 00:26:31,889
and its its exclusivity either or you
can you can be either in

451
00:26:31,890 --> 00:26:36,080
normal mode or in Flomo up so about
these

452
00:26:36,080 --> 00:26:39,710
about these flows I'll

453
00:26:39,710 --> 00:26:43,260
so you can create you can put in new
flows

454
00:26:43,260 --> 00:26:46,710
into a virtual switch in kind of two
different approaches you could do it

455
00:26:46,710 --> 00:26:48,210
locally via the command I'm

456
00:26:48,210 --> 00:26:52,070
right via out this open be switch open
flow control

457
00:26:52,070 --> 00:26:55,649
and you can just create new flows and
manually put them are

458
00:26:55,650 --> 00:27:00,309
in the virtual switch are you could of
course also send SSH commands

459
00:27:00,309 --> 00:27:03,690
so to do that a locally

460
00:27:03,690 --> 00:27:08,530
and you could also use INS the and
protocol like OpenFlow so there's a

461
00:27:08,530 --> 00:27:12,129
right so the OpenFlow protocol basically
you you can have this kind of

462
00:27:12,130 --> 00:27:13,090
centralized

463
00:27:13,090 --> 00:27:17,959
on node which can send these messages
OpenFlow messages to all of the virtual

464
00:27:17,960 --> 00:27:18,809
switches

465
00:27:18,809 --> 00:27:22,100
and the virtual switches speak the same
protocol so they can configure

466
00:27:22,100 --> 00:27:26,679
themselves right they can add flows to
their their own our tables

467
00:27:26,680 --> 00:27:31,180
so in neutron I right now what we do is
that we have the software that the

468
00:27:31,180 --> 00:27:31,880
neutron

469
00:27:31,880 --> 00:27:37,090
open vs which agent so the agent is
sitting locally on every computer

470
00:27:37,090 --> 00:27:41,340
and it can receive management traffic
lot writes like

471
00:27:41,340 --> 00:27:45,179
up bring up a new VM bring up a new
virtual

472
00:27:45,180 --> 00:27:49,440
I network interface card so whenever the

473
00:27:49,440 --> 00:27:53,130
this piece of what software receives
management traffic it can basically

474
00:27:53,130 --> 00:27:56,130
what when it does is that its
administrator local

475
00:27:56,130 --> 00:28:00,700
open flow control messages so it
configures itself

476
00:28:00,700 --> 00:28:04,860
I V a management traffic that's being
received from the neutron controlled

477
00:28:04,860 --> 00:28:08,389
okay so what are these flows

478
00:28:08,390 --> 00:28:13,290
right we're at basically up taking our
rules or flows and we're

479
00:28:13,290 --> 00:28:16,990
kinda manually configuring each virtual
switch

480
00:28:16,990 --> 00:28:20,290
so a flow is basically comprises two
parts

481
00:28:20,290 --> 00:28:24,149
it's a match for it and it's an action
part so a match is basically

482
00:28:24,150 --> 00:28:27,540
should this right so I have a bunch of
different flows a bunch of different

483
00:28:27,540 --> 00:28:28,270
rules

484
00:28:28,270 --> 00:28:32,210
so should the first flown match the
incoming packets

485
00:28:32,210 --> 00:28:36,540
or should the second wofford or should
the third so I can match

486
00:28:36,540 --> 00:28:40,970
on a bunch of up %uh all basically all
the headers that they are to have

487
00:28:40,970 --> 00:28:42,600
there's there are three had it right so

488
00:28:42,600 --> 00:28:46,699
that the ports and the IP addresses and
the mac Address is and all that sort of

489
00:28:46,700 --> 00:28:47,910
stuff

490
00:28:47,910 --> 00:28:53,150
I'll so okay so basically a specific
flow matched or caught

491
00:28:53,150 --> 00:28:56,760
a packet so alright so it kinda packet
and now what should the

492
00:28:56,760 --> 00:29:00,990
what should the this flow actually do so
what is the action part so the action

493
00:29:00,990 --> 00:29:01,680
part

494
00:29:01,680 --> 00:29:05,400
it can change heather's so I can do

495
00:29:05,400 --> 00:29:09,500
like not so I could change the source IP
address I can change the destination IP

496
00:29:09,500 --> 00:29:11,330
address I can change ports

497
00:29:11,330 --> 00:29:15,928
I could do all sorts of stuff I can take
the message in for that

498
00:29:15,929 --> 00:29:19,640
to a specific parts to all ports or to a
group sports

499
00:29:19,640 --> 00:29:23,820
I can but I can obviously do broadcasts
I can drop right I can filter messages

500
00:29:23,820 --> 00:29:27,370
so I could basically implement the
firewall

501
00:29:27,370 --> 00:29:30,510
I can learn new flows

502
00:29:30,510 --> 00:29:33,830
on the flight right so I introduce the
flow

503
00:29:33,830 --> 00:29:38,050
that matches packets and according to
those packets that can actually

504
00:29:38,050 --> 00:29:42,720
generate new frozen right those new
flows back into the table

505
00:29:42,720 --> 00:29:46,100
and we'll talk about that in a minute
and we can resubmit

506
00:29:46,100 --> 00:29:50,020
to another table so what the table so as
it turns out

507
00:29:50,020 --> 00:29:53,429
a table is basically just a group of
Lowes and we can

508
00:29:53,429 --> 00:29:56,990
we can have a bunch of different tables
that all belong to the same virtual

509
00:29:56,990 --> 00:29:57,630
switch

510
00:29:57,630 --> 00:30:02,200
kinda just a convenient way to to manage
lots of clothes

511
00:30:02,200 --> 00:30:06,679
up so all of the messages enter the
first table which is of course

512
00:30:06,679 --> 00:30:10,040
you know tables here we all read we
always come from zero because we're

513
00:30:10,040 --> 00:30:14,760
kinda its up so these are messages can
be

514
00:30:14,760 --> 00:30:18,620
resubmitted from table to table 02 just
any other people

515
00:30:18,620 --> 00:30:21,669
up and the and for each table right

516
00:30:21,670 --> 00:30:25,970
a group a group of close so the floors
the pros are processed according to

517
00:30:25,970 --> 00:30:27,160
their priority

518
00:30:27,160 --> 00:30:32,720
which was configured on each row and if
for example a message came in on table 0

519
00:30:32,720 --> 00:30:36,590
right so the first float doesn't match
the second floor doesn't match

520
00:30:36,590 --> 00:30:40,709
in the final flaw doesn't match either
then what happens

521
00:30:40,710 --> 00:30:44,429
so that message if he's a either dropped

522
00:30:44,429 --> 00:30:47,900
or if there's an SDN controller
configured which

523
00:30:47,900 --> 00:30:51,160
with just like regular neutron there
isn't

524
00:30:51,160 --> 00:30:54,220
so the message is dropped that's kind of
the people

525
00:30:54,220 --> 00:31:00,420
I'll wrecked so kinda logically speaking
or what's what's the flow table

526
00:31:00,420 --> 00:31:04,120
are how to use these these difference
tables or hot kind of how

527
00:31:04,120 --> 00:31:08,739
how's the logic work so traffic that's
coming in from the

528
00:31:08,740 --> 00:31:11,840
from a VM on the local computer no by

529
00:31:11,840 --> 00:31:16,209
just a VM connected to the integration
bridge all VM's are connected to the

530
00:31:16,210 --> 00:31:16,840
average

531
00:31:16,840 --> 00:31:20,409
so thats that enters

532
00:31:20,410 --> 00:31:25,340
I the tunneling bridge which is
represented here

533
00:31:25,340 --> 00:31:28,939
so it has a bunch of different table so
people 0 as we said that's the first

534
00:31:28,940 --> 00:31:29,820
table

535
00:31:29,820 --> 00:31:33,620
so we we basically say oh okay this is
traffic traffic that's coming in from

536
00:31:33,620 --> 00:31:34,969
the integration bridge

537
00:31:34,970 --> 00:31:39,320
so we'll just three some minutes to
table 1 table while classifies

538
00:31:39,320 --> 00:31:43,020
unique ass traffic and non-unique cast

539
00:31:43,020 --> 00:31:46,650
which is basically multicast and
broadcast so unique ass traffic

540
00:31:46,650 --> 00:31:51,510
reaches table twenty table twenty has a
bunch of pre learned flows

541
00:31:51,510 --> 00:31:55,059
by this is the unique ass table so I
this table should basically tell me

542
00:31:55,059 --> 00:31:59,260
should I for this message to table to
the first to know the second done on the

543
00:31:59,260 --> 00:32:00,140
third time right

544
00:32:00,140 --> 00:32:03,450
wait what compute node july's be
speaking to

545
00:32:03,450 --> 00:32:07,410
so I either no the destination

546
00:32:07,410 --> 00:32:11,990
mac Address I so I just forwarded to a
specific title

547
00:32:11,990 --> 00:32:16,550
or I don't know rights if if this is an
unknown back and just just because

548
00:32:16,550 --> 00:32:19,879
that night mac Address hasn't spoken to
me yes

549
00:32:19,880 --> 00:32:23,580
so I forwarded to table 21 in table 21
is what the cast

550
00:32:23,580 --> 00:32:28,770
broadcast and unknown destination mac
Address is so I basically for that

551
00:32:28,770 --> 00:32:32,270
to all tunnel devices

552
00:32:32,270 --> 00:32:36,379
right why the the the air quotes because
we talked about earlier about the the

553
00:32:36,380 --> 00:32:37,250
broadcast in

554
00:32:37,250 --> 00:32:41,770
optimization right so if that's enabled
then I don't need to send a message to

555
00:32:41,770 --> 00:32:44,049
all of the tunnel just to sum up the
tunnels

556
00:32:44,049 --> 00:32:47,610
right so what about the other way around

557
00:32:47,610 --> 00:32:50,740
if a message is coming in from I'll

558
00:32:50,740 --> 00:32:54,020
from a tunnel and not from a local p.m.

559
00:32:54,020 --> 00:32:57,830
so it's coming in on table twenty its
its traffic that's coming in from a

560
00:32:57,830 --> 00:32:58,710
tunnel and not

561
00:32:58,710 --> 00:33:02,820
the integration bridge so it's going to
be able to table 2 is basically

562
00:33:02,820 --> 00:33:05,879
taking the the tunnel headers just

563
00:33:05,880 --> 00:33:08,970
throwing that away adding

564
00:33:08,970 --> 00:33:13,440
the the lantern just kinda weird

565
00:33:13,440 --> 00:33:17,809
and then up for doing that then warning
that the table 10

566
00:33:17,809 --> 00:33:22,700
table time looks at the source mac
address and does the learning part

567
00:33:22,700 --> 00:33:26,260
right which we talked about previously
so it looks at the source mac Address

568
00:33:26,260 --> 00:33:29,600
what tunnel that this came in on

569
00:33:29,600 --> 00:33:32,909
I both the tunnel ID and the actual
tunnel itself

570
00:33:32,910 --> 00:33:37,740
and it populates table twenty rate which
was this one

571
00:33:37,740 --> 00:33:42,420
that's the unit cast table right and
then finally it forwards its through the

572
00:33:42,420 --> 00:33:44,070
integration bridge so again we

573
00:33:44,070 --> 00:33:49,020
we drop the tunnel headers I love the
GRE or the BX nonstop

574
00:33:49,020 --> 00:33:52,660
and we convert to the tunnel ID to the V
90

575
00:33:52,660 --> 00:33:57,320
right because as we said the the actual
doubt the local BR

576
00:33:57,320 --> 00:34:01,189
ends or the virtual switches still using
the lands to mark

577
00:34:01,190 --> 00:34:04,370
specific on networks right

578
00:34:04,370 --> 00:34:07,919
so that's kind of the deal there at I
just kinda

579
00:34:07,920 --> 00:34:11,859
the more information parts so will start
at the end

580
00:34:11,859 --> 00:34:14,899
the shameless plug basically I have a
blog

581
00:34:14,899 --> 00:34:18,440
which has all this entire thing I just
verbally written

582
00:34:18,440 --> 00:34:21,569
so if you're kinda didn't catch whatever

583
00:34:21,569 --> 00:34:25,049
something and I said to you can just
read everything examples that sort of

584
00:34:25,049 --> 00:34:26,109
stuff

585
00:34:26,109 --> 00:34:29,369
I Scott Lowe the big guy

586
00:34:29,369 --> 00:34:32,549
II networking so he has an amazing blog

587
00:34:32,549 --> 00:34:35,918
about everything I

588
00:34:35,918 --> 00:34:39,089
a buncha two different commands that you
can use

589
00:34:39,089 --> 00:34:42,308
if you wanna just kinda reverse
engineering kind of see how everything

590
00:34:42,309 --> 00:34:43,040
works

591
00:34:43,040 --> 00:34:46,520
so you can use the show command to see
all the different bridges and what

592
00:34:46,520 --> 00:34:51,690
but like BRN to the BR Tom how are they
connected what are they connected to

593
00:34:51,690 --> 00:34:55,168
you could use done close to see the flow
tables

594
00:34:55,168 --> 00:34:58,500
right these are kinda these things but
just written

595
00:34:58,500 --> 00:35:01,760
an actual table I

596
00:35:01,760 --> 00:35:05,420
and that's that's about it so it

597
00:35:05,420 --> 00:35:12,420
questions part any questions

598
00:35:13,280 --> 00:35:17,349
I imagine there's a limit I'm not
familiar with that it's not a problem

599
00:35:17,349 --> 00:35:24,349
right now anyway yeah

600
00:35:31,530 --> 00:35:35,480
okay so the question is we have there's
these bill and I these are get there

601
00:35:35,480 --> 00:35:37,829
they consistent between different
computer nodes

602
00:35:37,829 --> 00:35:41,210
so we're we're using tunnels between the
different computer codes

603
00:35:41,210 --> 00:35:46,109
so the the local the lands are actually
only locally significant so

604
00:35:46,109 --> 00:35:49,109
York because you only need to pack
networks I don't

605
00:35:49,109 --> 00:35:53,190
need to care that it it's the same feel
an under two different computers

606
00:35:53,190 --> 00:35:57,270
you just need to differentiate between
two different networks

607
00:35:57,270 --> 00:36:03,290
your questions yep

608
00:36:03,290 --> 00:36:06,460
teachers just I so number of the lands

609
00:36:06,460 --> 00:36:11,750
I should be to to the power of 10 I

610
00:36:11,750 --> 00:36:16,020
but in this specific case we're actually
not that limit comes from the

611
00:36:16,020 --> 00:36:19,680
time the sizeof the tag but we're not
actually using that

612
00:36:19,680 --> 00:36:24,319
with tunnels we're only using we're
basically what on using access points

613
00:36:24,320 --> 00:36:28,670
so the limit would be theoretically just
what can open peace which

614
00:36:28,670 --> 00:36:32,690
you know supports I but this debt limit
is talking about the number different

615
00:36:32,690 --> 00:36:34,650
network so if you have

616
00:36:34,650 --> 00:36:39,070
you know to to the power of 10 networks
then all the power to you

617
00:36:39,070 --> 00:36:45,050
I'll yeah

618
00:36:45,050 --> 00:36:48,330
yup yeah so that's and

619
00:36:48,330 --> 00:36:53,830
that could be handled via a a tag inside
of another tag and that sort of stuff

620
00:36:53,830 --> 00:36:57,299
I'll and your question what's what's the
performance hit

621
00:36:57,300 --> 00:37:00,590
in on average was speaking sorry I

622
00:37:00,590 --> 00:37:04,010
what's the performance hip of these
tunnels

623
00:37:04,010 --> 00:37:08,640
in real life so band with a latency was
yet so we have a bunch of guys

624
00:37:08,640 --> 00:37:11,819
running pests for a few months now

625
00:37:11,820 --> 00:37:14,880
so the so historically we were using

626
00:37:14,880 --> 00:37:19,550
the bill and Tad inside the tunnel and
we forget we kinda forgot to remove the

627
00:37:19,550 --> 00:37:21,400
tag in that has a drastic

628
00:37:21,400 --> 00:37:25,670
up that was catastrophic 0 and we fix
that

629
00:37:25,670 --> 00:37:29,300
and it's nearly the same as with the
lands but

630
00:37:29,300 --> 00:37:34,970
up tunneling doesn't have hardware
offloading which is a problem right now

631
00:37:34,970 --> 00:37:38,850
right because network the physical
network interfaces cards

632
00:37:38,850 --> 00:37:42,160
I love the physical machines they can do
hardware offloading for the feel and

633
00:37:42,160 --> 00:37:43,118
style

634
00:37:43,119 --> 00:37:45,960
that's actually done at the hardware
level and the tunneling stuff isn't

635
00:37:45,960 --> 00:37:47,540
supported yet the hardware

636
00:37:47,540 --> 00:37:50,950
but it will be a in couple beers

637
00:37:50,950 --> 00:37:54,290
I'll so after %um so

638
00:37:54,290 --> 00:37:58,300
I as for actual numbers I'm not the guy
for that

639
00:37:58,300 --> 00:38:05,300
but its its its close that that's what I
was told

640
00:38:07,150 --> 00:38:10,500
right so I weary we're I'll

641
00:38:10,500 --> 00:38:14,550
adding additional headers right that the
GRE or the extent Heather

642
00:38:14,550 --> 00:38:17,840
so there's an to your consideration so
basically

643
00:38:17,840 --> 00:38:21,720
and in any kinda real deployments you
would basically use jumbo frames or the

644
00:38:21,720 --> 00:38:23,250
the 9000 into you

645
00:38:23,250 --> 00:38:26,410
which completely solves that issue right
I

646
00:38:26,410 --> 00:38:30,609
and we're actually there's upstream
patches and you trying right now to

647
00:38:30,609 --> 00:38:33,680
to the kind of help with that stuff the
jungle friends to even increase

648
00:38:33,680 --> 00:38:35,940
performance

649
00:38:35,940 --> 00:38:42,940
yeah

650
00:38:57,050 --> 00:39:03,380
yes

651
00:39:03,380 --> 00:39:06,170
are it is it is because

652
00:39:06,170 --> 00:39:09,580
are the synchronization up the our table
is basically when whenever you're

653
00:39:09,580 --> 00:39:10,840
bringing up the M's

654
00:39:10,840 --> 00:39:15,910
rights and the other solution would be
to just send the arc requests

655
00:39:15,910 --> 00:39:19,490
which is done on on a much higher rates

656
00:39:19,490 --> 00:39:22,979
right whenever that defend that not on
the number of the M's that's dependent

657
00:39:22,980 --> 00:39:23,710
on the

658
00:39:23,710 --> 00:39:27,470
the amount of traffic so it's a very
worthwhile optimization yeah

659
00:39:27,470 --> 00:39:31,640
absolutely alright so

660
00:39:31,640 --> 00:39:35,930
I my name is a sad I'll be at the overt
stands I which is near the OpenStack

661
00:39:35,930 --> 00:39:39,839
stands and out no I'm I'm a total geek
for the stuff so I'll be happy to talk

662
00:39:39,840 --> 00:39:40,430
about

663
00:39:40,430 --> 00:39:43,240
that working tunnels and a whatever
thank you

