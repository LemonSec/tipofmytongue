1
00:00:00,000 --> 00:00:03,480
welcome to my talk about rfcs if you

2
00:00:03,480 --> 00:00:06,960
have no freaking ID what rfcs actually

3
00:00:06,960 --> 00:00:10,019
mean don't panic because that's exactly

4
00:00:10,019 --> 00:00:12,000
what we're going to discuss in the next

5
00:00:12,000 --> 00:00:14,820
20 minutes or so but not before I do

6
00:00:14,820 --> 00:00:17,460
quick introduction of myself so my name

7
00:00:17,460 --> 00:00:18,440
is

8
00:00:18,440 --> 00:00:21,539
and I work as the head of hackers at

9
00:00:21,539 --> 00:00:25,080
Integrity which is as you all know

10
00:00:25,080 --> 00:00:28,320
um the number one book Bounty platform I

11
00:00:28,320 --> 00:00:31,320
know jokes aside please do sign up it

12
00:00:31,320 --> 00:00:34,140
does help my kpis but so far the

13
00:00:34,140 --> 00:00:37,380
commercial message let's focus on my

14
00:00:37,380 --> 00:00:39,960
research now I've been book bounty

15
00:00:39,960 --> 00:00:43,320
hunting since 2011 and ever since I

16
00:00:43,320 --> 00:00:45,180
think I reported over three dollar

17
00:00:45,180 --> 00:00:47,640
vulnerabilities

18
00:00:47,640 --> 00:00:50,280
um mostly concerning privacy the

19
00:00:50,280 --> 00:00:52,559
anonymization attacks and then

20
00:00:52,559 --> 00:00:54,780
especially for web applications I would

21
00:00:54,780 --> 00:00:57,600
usually dig into the email and ticketing

22
00:00:57,600 --> 00:00:59,699
systems

23
00:00:59,699 --> 00:01:01,739
um I do consider myself a live hacking

24
00:01:01,739 --> 00:01:04,140
event veteran I love them

25
00:01:04,140 --> 00:01:06,180
um I love the competitive aspect but

26
00:01:06,180 --> 00:01:08,460
also the fact that it just

27
00:01:08,460 --> 00:01:10,320
um that you get to see so many people in

28
00:01:10,320 --> 00:01:12,659
public and that you get to share so much

29
00:01:12,659 --> 00:01:16,140
information and do research together

30
00:01:16,140 --> 00:01:17,939
um I wouldn't really consider myself an

31
00:01:17,939 --> 00:01:19,619
academic and never really went to

32
00:01:19,619 --> 00:01:20,540
University

33
00:01:20,540 --> 00:01:23,880
but now you know I'm I I like to do like

34
00:01:23,880 --> 00:01:26,580
some research especially in-depth

35
00:01:26,580 --> 00:01:29,880
research on certain subjects and to

36
00:01:29,880 --> 00:01:31,979
share them with the world and I guess

37
00:01:31,979 --> 00:01:35,640
this is one of them and that is also

38
00:01:35,640 --> 00:01:37,619
something that my colleagues at life

39
00:01:37,619 --> 00:01:40,500
hacky events May say about me is that I

40
00:01:40,500 --> 00:01:42,240
just simply like reading the

41
00:01:42,240 --> 00:01:45,780
documentation to do my own research in

42
00:01:45,780 --> 00:01:48,060
fact in the first hour of any life

43
00:01:48,060 --> 00:01:50,220
hacking event I will usually not even

44
00:01:50,220 --> 00:01:53,340
open my computer but I would rather just

45
00:01:53,340 --> 00:01:56,520
read the documentation and then also see

46
00:01:56,520 --> 00:01:59,220
what kind of underlying infrastructure

47
00:01:59,220 --> 00:02:02,399
the actual service that we are supposed

48
00:02:02,399 --> 00:02:05,040
to hack has and if there's documentation

49
00:02:05,040 --> 00:02:08,940
about that I will also gladly read it I

50
00:02:08,940 --> 00:02:11,520
think it's really underestimated how

51
00:02:11,520 --> 00:02:14,940
important this is at least I mean from

52
00:02:14,940 --> 00:02:17,819
my own of observations I tend to find a

53
00:02:17,819 --> 00:02:19,440
lot of vulnerabilities that could have

54
00:02:19,440 --> 00:02:21,959
easily been discovered by simply reading

55
00:02:21,959 --> 00:02:25,260
the books the dogs sorry they they give

56
00:02:25,260 --> 00:02:28,200
you a lot of edge cases but also give

57
00:02:28,200 --> 00:02:30,720
some details about Integrations and it

58
00:02:30,720 --> 00:02:32,400
really helps you to think like a

59
00:02:32,400 --> 00:02:34,200
developer like why they made certain

60
00:02:34,200 --> 00:02:37,260
choices but especially also how they

61
00:02:37,260 --> 00:02:40,620
expect their users to behave

62
00:02:40,620 --> 00:02:45,000
and if we go to the master of all

63
00:02:45,000 --> 00:02:46,200
documents

64
00:02:46,200 --> 00:02:48,300
um really the underlying documents of

65
00:02:48,300 --> 00:02:51,239
our other documents we would come to the

66
00:02:51,239 --> 00:02:55,379
RFC what is an RFC it stands for request

67
00:02:55,379 --> 00:02:57,780
for comments and it's basically whenever

68
00:02:57,780 --> 00:03:01,920
you have an ID you can publish this as a

69
00:03:01,920 --> 00:03:03,780
request for comments so everybody can

70
00:03:03,780 --> 00:03:05,760
give a comment and there's special

71
00:03:05,760 --> 00:03:09,959
performance on how to write an RFC and

72
00:03:09,959 --> 00:03:12,420
whenever you publish this RFC it will go

73
00:03:12,420 --> 00:03:16,200
or be evaluated by a task force which is

74
00:03:16,200 --> 00:03:19,080
called the eitf now there's a whole

75
00:03:19,080 --> 00:03:21,360
process to get your RFC officially

76
00:03:21,360 --> 00:03:24,000
published by them we won't go too much

77
00:03:24,000 --> 00:03:25,980
into detail because that would kind of

78
00:03:25,980 --> 00:03:28,140
take us too far but what you want to

79
00:03:28,140 --> 00:03:31,200
know is that rfcs have been around for a

80
00:03:31,200 --> 00:03:33,000
whole while actually the first one was

81
00:03:33,000 --> 00:03:36,780
published in 1969

82
00:03:36,780 --> 00:03:38,760
um and also that these are not

83
00:03:38,760 --> 00:03:41,040
necessarily industry standards because

84
00:03:41,040 --> 00:03:43,080
there's a various amount of rfcs that

85
00:03:43,080 --> 00:03:45,000
haven't really

86
00:03:45,000 --> 00:03:47,400
um seen most of the World Wide Web that

87
00:03:47,400 --> 00:03:48,599
are simply there

88
00:03:48,599 --> 00:03:50,700
um and also just meant to be some edge

89
00:03:50,700 --> 00:03:53,480
cases or more maybe experimental

90
00:03:53,480 --> 00:03:58,319
informational or also simply as a joke

91
00:03:58,319 --> 00:04:01,920
um one of my favorite joke rfcs are

92
00:04:01,920 --> 00:04:04,319
these and they concern the IP

93
00:04:04,319 --> 00:04:07,560
transmission over Aryan carriers AKA

94
00:04:07,560 --> 00:04:10,739
pigeons I guess in the world in the

95
00:04:10,739 --> 00:04:12,540
scenario that the world would come to an

96
00:04:12,540 --> 00:04:16,380
end then we still have an RFC or a

97
00:04:16,380 --> 00:04:18,779
proposal on how we can finally

98
00:04:18,779 --> 00:04:22,919
communicate over pigeons but some people

99
00:04:22,919 --> 00:04:26,580
were crazy enough to try this in 2001 in

100
00:04:26,580 --> 00:04:29,400
Norway I guess they just released a page

101
00:04:29,400 --> 00:04:32,820
of pigeons with IP packets attached to

102
00:04:32,820 --> 00:04:35,940
their uh to their wings or something and

103
00:04:35,940 --> 00:04:39,120
that they found out that about less than

104
00:04:39,120 --> 00:04:41,460
half would actually make its destination

105
00:04:41,460 --> 00:04:43,860
and you know it would take 50 to 100

106
00:04:43,860 --> 00:04:46,259
minutes to get a response time back

107
00:04:46,259 --> 00:04:49,259
which is not super great for Bing so let

108
00:04:49,259 --> 00:04:51,720
us hope that the end of the world is not

109
00:04:51,720 --> 00:04:54,479
for tomorrow uh but I just want to point

110
00:04:54,479 --> 00:04:57,660
out like the the importance of of this

111
00:04:57,660 --> 00:04:59,880
uh because it even finds their ways

112
00:04:59,880 --> 00:05:02,820
because it's an official RFC it finds

113
00:05:02,820 --> 00:05:05,940
their ways to book Bounty uh guidelines

114
00:05:05,940 --> 00:05:08,100
and this is a screenshot of Goldman's

115
00:05:08,100 --> 00:05:10,620
sex guidelines and they will officially

116
00:05:10,620 --> 00:05:13,940
ask you not to send over any pigeons

117
00:05:13,940 --> 00:05:17,040
that know how to sniff the traffic from

118
00:05:17,040 --> 00:05:19,680
their office I guess that's uh that's a

119
00:05:19,680 --> 00:05:21,540
very complete

120
00:05:21,540 --> 00:05:24,960
um big Bounty policy I can only upload

121
00:05:24,960 --> 00:05:27,360
this but it kind of shows how there's

122
00:05:27,360 --> 00:05:29,360
like a lot of

123
00:05:29,360 --> 00:05:32,460
rfcs on very on various subjects let's

124
00:05:32,460 --> 00:05:35,699
say and that they shouldn't always

125
00:05:35,699 --> 00:05:39,539
um be taken seriously but some of these

126
00:05:39,539 --> 00:05:43,020
rfcs they are rather obsolete now

127
00:05:43,020 --> 00:05:45,720
um yet we do use them every day there's

128
00:05:45,720 --> 00:05:49,560
for example one rfcs that states that a

129
00:05:49,560 --> 00:05:52,100
subdomain or you know or just a URL

130
00:05:52,100 --> 00:05:54,720
pointing to a document server for

131
00:05:54,720 --> 00:05:58,020
example to to a host HTTP documents or

132
00:05:58,020 --> 00:06:01,460
HTTP HTML documents should start with

133
00:06:01,460 --> 00:06:04,560
www which is already a long word to

134
00:06:04,560 --> 00:06:07,620
pronounce uh let alone type every time I

135
00:06:07,620 --> 00:06:10,340
think if it would just all omit the www

136
00:06:10,340 --> 00:06:13,199
from speech but especially also from

137
00:06:13,199 --> 00:06:16,440
from writing in URLs we would like live

138
00:06:16,440 --> 00:06:20,400
10 years longer but yeah it is what it

139
00:06:20,400 --> 00:06:24,720
is it was part of a request years ago of

140
00:06:24,720 --> 00:06:27,000
Tim bernersley and now we're still stuck

141
00:06:27,000 --> 00:06:29,220
with it but even this guy I mean the guy

142
00:06:29,220 --> 00:06:30,600
who is

143
00:06:30,600 --> 00:06:32,880
um who they say invented the Internet or

144
00:06:32,880 --> 00:06:34,500
is would have been one of the creators

145
00:06:34,500 --> 00:06:37,560
of the internet even he regrets some of

146
00:06:37,560 --> 00:06:39,660
this I think he recent simply said in in

147
00:06:39,660 --> 00:06:41,580
an interview actually that he's

148
00:06:41,580 --> 00:06:43,440
regretting you know these two dashes

149
00:06:43,440 --> 00:06:45,900
right over here because they don't

150
00:06:45,900 --> 00:06:47,699
really serve a purpose and you know it

151
00:06:47,699 --> 00:06:49,620
just adds to the characters but

152
00:06:49,620 --> 00:06:51,960
apparently that was just the way some

153
00:06:51,960 --> 00:06:54,780
programming uh syntax was was done back

154
00:06:54,780 --> 00:06:57,539
then but so you see things that are

155
00:06:57,539 --> 00:07:00,000
obsolete now but invented years ago they

156
00:07:00,000 --> 00:07:02,699
still make it to our current life every

157
00:07:02,699 --> 00:07:04,319
day

158
00:07:04,319 --> 00:07:06,660
um and I think this is a very good

159
00:07:06,660 --> 00:07:09,000
picture to kind of represent a modern

160
00:07:09,000 --> 00:07:10,160
digital

161
00:07:10,160 --> 00:07:13,020
infrastructure it's built upon years and

162
00:07:13,020 --> 00:07:15,240
years and years of good ideas but also

163
00:07:15,240 --> 00:07:17,039
maybe some questionable ideas or just

164
00:07:17,039 --> 00:07:20,039
ideas that are no longer really relevant

165
00:07:20,039 --> 00:07:22,259
but it doesn't mean that all of these

166
00:07:22,259 --> 00:07:25,080
old standards or old rfcs are no longer

167
00:07:25,080 --> 00:07:27,539
present in our current technology so

168
00:07:27,539 --> 00:07:32,400
knowledge of them can be quite important

169
00:07:32,400 --> 00:07:34,680
um what is interesting however is that

170
00:07:34,680 --> 00:07:36,900
some of these rfcs even if they're not

171
00:07:36,900 --> 00:07:39,900
really known they will disclose some

172
00:07:39,900 --> 00:07:41,699
security risks

173
00:07:41,699 --> 00:07:44,039
um but most developers however will not

174
00:07:44,039 --> 00:07:47,039
go and read the RFC of just everything

175
00:07:47,039 --> 00:07:49,620
that they're creating so as a hacker it

176
00:07:49,620 --> 00:07:51,900
kind of creates an opportunity window

177
00:07:51,900 --> 00:07:54,720
um so if you decide to read the rfcs it

178
00:07:54,720 --> 00:07:57,900
may end up in some nice bugs and

179
00:07:57,900 --> 00:07:59,759
sometimes it's just a given like if you

180
00:07:59,759 --> 00:08:02,819
would read the rfcs most rfcs since a

181
00:08:02,819 --> 00:08:06,120
certain date they require you to list

182
00:08:06,120 --> 00:08:08,099
security consideration even if there's

183
00:08:08,099 --> 00:08:10,020
none they require you to think about

184
00:08:10,020 --> 00:08:14,039
like how can this possibly be abused so

185
00:08:14,039 --> 00:08:15,840
whatever you're doing research or maybe

186
00:08:15,840 --> 00:08:18,060
a web or other component and trying to

187
00:08:18,060 --> 00:08:20,099
hack it please do check out the security

188
00:08:20,099 --> 00:08:24,240
concentration section in the actual RFC

189
00:08:24,240 --> 00:08:26,120
um but also

190
00:08:26,120 --> 00:08:30,360
sometimes there's mistakes I mean humans

191
00:08:30,360 --> 00:08:32,700
maker of season humans also make

192
00:08:32,700 --> 00:08:35,159
mistakes and sometimes it will happen

193
00:08:35,159 --> 00:08:37,919
that there's a crucial error in an RFC

194
00:08:37,919 --> 00:08:39,779
that people have already implemented

195
00:08:39,779 --> 00:08:42,299
that needs to be adapted so it can be

196
00:08:42,299 --> 00:08:44,880
very good to kind of get the Errata of

197
00:08:44,880 --> 00:08:47,040
the rfcs and see what the differences or

198
00:08:47,040 --> 00:08:48,660
how certain things were corrected

199
00:08:48,660 --> 00:08:51,779
because some technology may still run on

200
00:08:51,779 --> 00:08:54,720
the first version of the actual rfcs

201
00:08:54,720 --> 00:08:57,240
something personally that I always tend

202
00:08:57,240 --> 00:08:59,480
to look for are the optional parameters

203
00:08:59,480 --> 00:09:02,339
or you know extensions that are

204
00:09:02,339 --> 00:09:05,760
disclosed in rfcs why because they may

205
00:09:05,760 --> 00:09:07,800
be very optional like pointing to the

206
00:09:07,800 --> 00:09:10,380
edge cases developer may still choose to

207
00:09:10,380 --> 00:09:12,899
implement them or support them but

208
00:09:12,899 --> 00:09:14,940
they're like hidden you know they're

209
00:09:14,940 --> 00:09:17,640
very often retested as part of a pen

210
00:09:17,640 --> 00:09:20,220
test and they can be a hidden treasure

211
00:09:20,220 --> 00:09:22,620
to customer data

212
00:09:22,620 --> 00:09:25,080
I'm just going to start with uh with a

213
00:09:25,080 --> 00:09:27,480
common RFC that you may have come across

214
00:09:27,480 --> 00:09:29,339
or at least with the implementation of

215
00:09:29,339 --> 00:09:31,440
it which is of course domain name I mean

216
00:09:31,440 --> 00:09:33,480
all the assets or most of the assets

217
00:09:33,480 --> 00:09:36,060
will have to test will contain a domain

218
00:09:36,060 --> 00:09:38,160
name so here's my question to you and

219
00:09:38,160 --> 00:09:40,640
feel free to answer in the comments

220
00:09:40,640 --> 00:09:42,779
esponeria.easy.edu is this a valid

221
00:09:42,779 --> 00:09:45,120
qualified fully qualified domain name

222
00:09:45,120 --> 00:09:50,279
feel free to answer whatever you think

223
00:09:50,279 --> 00:09:53,160
um so the answer is actually no because

224
00:09:53,160 --> 00:09:56,519
according to RFC 1034

225
00:09:56,519 --> 00:09:59,820
every part so the subdomain and then of

226
00:09:59,820 --> 00:10:01,740
course the root domain which is IC and

227
00:10:01,740 --> 00:10:03,920
then also the TLD which is the last part

228
00:10:03,920 --> 00:10:07,260
they would need a trailing dot at the

229
00:10:07,260 --> 00:10:09,180
end because it signifies the end of that

230
00:10:09,180 --> 00:10:11,160
part and it also counts for the last

231
00:10:11,160 --> 00:10:13,860
part now obviously you don't see this a

232
00:10:13,860 --> 00:10:15,899
lot but it doesn't mean that it's no

233
00:10:15,899 --> 00:10:17,580
longer supported for example if you

234
00:10:17,580 --> 00:10:20,700
would go to Google and like write a DOT

235
00:10:20,700 --> 00:10:24,000
behind the.com it will actually just

236
00:10:24,000 --> 00:10:27,420
continue to work or like interestingly

237
00:10:27,420 --> 00:10:29,580
it will treat it as a totally different

238
00:10:29,580 --> 00:10:32,580
origin so this may already lead to some

239
00:10:32,580 --> 00:10:35,160
interesting bugs but yeah it's it's

240
00:10:35,160 --> 00:10:37,080
something interesting to consider by the

241
00:10:37,080 --> 00:10:39,600
way you can also bypass some paywalls

242
00:10:39,600 --> 00:10:41,100
with it

243
00:10:41,100 --> 00:10:43,260
um so it's always just add a DOT and see

244
00:10:43,260 --> 00:10:44,760
what happens

245
00:10:44,760 --> 00:10:46,860
now I just want to give you guys a very

246
00:10:46,860 --> 00:10:49,620
specific example of this for which I got

247
00:10:49,620 --> 00:10:51,839
a nice Bounty

248
00:10:51,839 --> 00:10:53,459
um and this report is public so I can

249
00:10:53,459 --> 00:10:54,660
talk about it

250
00:10:54,660 --> 00:10:57,060
um so basically I was testing Shopify as

251
00:10:57,060 --> 00:10:59,279
part of a life hacking event and they

252
00:10:59,279 --> 00:11:01,079
had a couple of steps where you could

253
00:11:01,079 --> 00:11:03,959
link your own Shopify instance to custom

254
00:11:03,959 --> 00:11:06,060
domain obviously whenever you start a

255
00:11:06,060 --> 00:11:09,120
shop you don't want a URL like wholesale

256
00:11:09,120 --> 00:11:11,399
shops shopifyapps.com I mean you want

257
00:11:11,399 --> 00:11:13,620
your own domain for example in the indie

258
00:11:13,620 --> 00:11:16,620
or shop.nt.io

259
00:11:16,620 --> 00:11:18,060
um and the only thing they required you

260
00:11:18,060 --> 00:11:21,360
to do is set the cname your C name of

261
00:11:21,360 --> 00:11:24,600
your subdomain so shop.into.io to this

262
00:11:24,600 --> 00:11:27,720
uh wholesale shops shopifyapps.com

263
00:11:27,720 --> 00:11:29,339
and this would allow you within the

264
00:11:29,339 --> 00:11:31,800
Shopify app to link your domain and that

265
00:11:31,800 --> 00:11:33,120
would be enough from the moment you

266
00:11:33,120 --> 00:11:35,519
would do this it would now serve your

267
00:11:35,519 --> 00:11:38,399
website so very simply steps but

268
00:11:38,399 --> 00:11:40,500
obviously there's some flaws with it I

269
00:11:40,500 --> 00:11:42,839
mean they whenever I have a dangling

270
00:11:42,839 --> 00:11:45,779
pointer to this I can just link my own

271
00:11:45,779 --> 00:11:49,500
shop in the UI and I can essentially

272
00:11:49,500 --> 00:11:52,019
take it take over that domain I can

273
00:11:52,019 --> 00:11:54,300
perform a sub domain takeover so this is

274
00:11:54,300 --> 00:11:56,660
how it looked like whenever you would

275
00:11:56,660 --> 00:12:00,660
link your wholesale domain it now no

276
00:12:00,660 --> 00:12:03,060
longer shows anything Shopify it does

277
00:12:03,060 --> 00:12:06,060
show shop.nt.io and it asks you to sign

278
00:12:06,060 --> 00:12:07,440
in

279
00:12:07,440 --> 00:12:11,040
so let's say that we wanna you know we

280
00:12:11,040 --> 00:12:12,779
wanna link it again so what if an

281
00:12:12,779 --> 00:12:14,339
attacker so you see this is already

282
00:12:14,339 --> 00:12:16,980
linked over here um so I already set it

283
00:12:16,980 --> 00:12:20,100
up and now you would go to Shopify would

284
00:12:20,100 --> 00:12:22,500
go to wholesale preferences and enter my

285
00:12:22,500 --> 00:12:25,800
domain uh for your own store of course

286
00:12:25,800 --> 00:12:28,740
and you try to link my domain it will

287
00:12:28,740 --> 00:12:31,260
give you an error it will say I'm sorry

288
00:12:31,260 --> 00:12:34,200
um person on the other side I can I

289
00:12:34,200 --> 00:12:36,420
cannot do this for you why of course

290
00:12:36,420 --> 00:12:38,880
because it's already connected to my

291
00:12:38,880 --> 00:12:41,160
store and you cannot take the domain

292
00:12:41,160 --> 00:12:43,380
name of somebody else

293
00:12:43,380 --> 00:12:46,500
so I was just thinking what if we just

294
00:12:46,500 --> 00:12:47,959
enter

295
00:12:47,959 --> 00:12:51,240
shop.integrity.aio instead because for

296
00:12:51,240 --> 00:12:54,959
the system it's not the same same domain

297
00:12:54,959 --> 00:12:58,380
name but for the DNS it's actually just

298
00:12:58,380 --> 00:13:00,480
the same the same you know I can just

299
00:13:00,480 --> 00:13:03,240
make it propagate to the same thing and

300
00:13:03,240 --> 00:13:05,100
this actually worked so I was able to

301
00:13:05,100 --> 00:13:07,560
link you or you as an attacker would be

302
00:13:07,560 --> 00:13:09,720
have been able to link like the fully

303
00:13:09,720 --> 00:13:11,760
coil qualified domain name for any

304
00:13:11,760 --> 00:13:14,220
Shopify domain wholesale domain out

305
00:13:14,220 --> 00:13:15,779
there

306
00:13:15,779 --> 00:13:17,579
um and you could just link your own

307
00:13:17,579 --> 00:13:22,200
store so this would be shop.nt.io and

308
00:13:22,200 --> 00:13:25,380
this would be shop.nt.io dot according

309
00:13:25,380 --> 00:13:27,120
to Shopify these were two different

310
00:13:27,120 --> 00:13:29,220
stores and one was not linked but the c

311
00:13:29,220 --> 00:13:31,440
m records was also pointing to it so it

312
00:13:31,440 --> 00:13:33,240
said okay let me just

313
00:13:33,240 --> 00:13:35,940
um serve the website on this in this

314
00:13:35,940 --> 00:13:39,240
case it was my real store so that is of

315
00:13:39,240 --> 00:13:41,700
course a problem because now if I could

316
00:13:41,700 --> 00:13:43,980
have enacted JavaScript on there I could

317
00:13:43,980 --> 00:13:46,500
have just recreated the web page and

318
00:13:46,500 --> 00:13:48,360
entered some phishing credentials or

319
00:13:48,360 --> 00:13:50,600
phishing like capture keylog or whatever

320
00:13:50,600 --> 00:13:54,180
and I could have yeah essentially taken

321
00:13:54,180 --> 00:13:56,220
over their accounts and it would still

322
00:13:56,220 --> 00:13:59,339
have been on my domain name that was of

323
00:13:59,339 --> 00:14:02,940
course still SSL protected Etc so it was

324
00:14:02,940 --> 00:14:05,100
quite an interesting bug it's also

325
00:14:05,100 --> 00:14:06,660
public on hacker one if you want to have

326
00:14:06,660 --> 00:14:07,980
a read

327
00:14:07,980 --> 00:14:10,200
um I can see if I can drop the link in

328
00:14:10,200 --> 00:14:12,899
the description there's also a more if

329
00:14:12,899 --> 00:14:14,519
you didn't get the whole part there's

330
00:14:14,519 --> 00:14:16,380
also an explainer video that I made on

331
00:14:16,380 --> 00:14:20,160
it and I got like 3.1 K in total just

332
00:14:20,160 --> 00:14:24,959
for a simple Dot so it's it's just a

333
00:14:24,959 --> 00:14:26,160
good trick and I'm sure that there's

334
00:14:26,160 --> 00:14:29,399
more more of these uh vulnerable

335
00:14:29,399 --> 00:14:31,860
then there's also URLs domain name is

336
00:14:31,860 --> 00:14:34,579
not necessarily URL because a URL also

337
00:14:34,579 --> 00:14:37,860
includes the part after the.com for

338
00:14:37,860 --> 00:14:38,700
example

339
00:14:38,700 --> 00:14:42,060
you will see a lot of URLs being used in

340
00:14:42,060 --> 00:14:43,980
various web applications

341
00:14:43,980 --> 00:14:46,740
the URLs can be quite funky and I

342
00:14:46,740 --> 00:14:50,339
recently saw this tweets by better which

343
00:14:50,339 --> 00:14:53,639
is the author of curl and he asked us if

344
00:14:53,639 --> 00:14:56,160
this is a valid URL

345
00:14:56,160 --> 00:14:58,620
so if you think this is a valid URL

346
00:14:58,620 --> 00:15:01,500
please do let me know something in the

347
00:15:01,500 --> 00:15:02,760
comments

348
00:15:02,760 --> 00:15:06,300
because it is a valid URL so

349
00:15:06,300 --> 00:15:09,000
congratulations everybody that thought

350
00:15:09,000 --> 00:15:12,480
that this is a valid URL but

351
00:15:12,480 --> 00:15:15,540
um I wouldn't say it looks like one so

352
00:15:15,540 --> 00:15:18,000
let's see what this URL is actually made

353
00:15:18,000 --> 00:15:20,639
of first we have a scheme that we have

354
00:15:20,639 --> 00:15:23,459
the user then we have

355
00:15:23,459 --> 00:15:26,160
a password which is slash slash HTTP

356
00:15:26,160 --> 00:15:27,839
slash

357
00:15:27,839 --> 00:15:29,339
a host

358
00:15:29,339 --> 00:15:32,220
above which also contains double slashes

359
00:15:32,220 --> 00:15:34,820
but it doesn't really matter it's still

360
00:15:34,820 --> 00:15:37,320
perfectly valid according to the RFC

361
00:15:37,320 --> 00:15:39,779
then there's a query parameter and then

362
00:15:39,779 --> 00:15:41,699
there's the hash and that's it right

363
00:15:41,699 --> 00:15:43,380
this is a fully

364
00:15:43,380 --> 00:15:46,560
functional URL that is completely valid

365
00:15:46,560 --> 00:15:49,199
and compliant with the RFC

366
00:15:49,199 --> 00:15:52,860
now and I believe or orange side has a

367
00:15:52,860 --> 00:15:54,540
great talk on this we won't go too much

368
00:15:54,540 --> 00:15:56,839
into depth we don't have that time

369
00:15:56,839 --> 00:16:01,019
but basically what is interesting about

370
00:16:01,019 --> 00:16:03,240
knowing all of these tricks and knowing

371
00:16:03,240 --> 00:16:06,779
how how confusing URLs can be is that

372
00:16:06,779 --> 00:16:09,480
various URL parsers will also treat them

373
00:16:09,480 --> 00:16:10,560
differently

374
00:16:10,560 --> 00:16:12,540
and for example if you would have an ad

375
00:16:12,540 --> 00:16:15,300
symbol over here or maybe over there one

376
00:16:15,300 --> 00:16:17,459
URL parser would think that the URL

377
00:16:17,459 --> 00:16:20,100
Starts Here whereas in reality the URL

378
00:16:20,100 --> 00:16:22,980
uh would start there and maybe other URL

379
00:16:22,980 --> 00:16:25,440
parsers would go to the last odds and

380
00:16:25,440 --> 00:16:27,480
would take it which would basically

381
00:16:27,480 --> 00:16:30,420
start from here which would allow you to

382
00:16:30,420 --> 00:16:33,180
bypass whitelists or blacklists so

383
00:16:33,180 --> 00:16:36,480
that's always important to consider

384
00:16:36,480 --> 00:16:38,339
than if you're not dealing with any

385
00:16:38,339 --> 00:16:40,800
domain names of URLs of course we also

386
00:16:40,800 --> 00:16:42,600
have IP addresses

387
00:16:42,600 --> 00:16:45,019
so let's take a look at an IP address

388
00:16:45,019 --> 00:16:48,899
and ways to write it so of course this

389
00:16:48,899 --> 00:16:50,940
IP address can be written in various

390
00:16:50,940 --> 00:16:54,240
ways you can omit some numbers you can

391
00:16:54,240 --> 00:16:56,880
just convert it to hexadecimals and then

392
00:16:56,880 --> 00:16:58,560
of course you can also omit some numbers

393
00:16:58,560 --> 00:17:01,139
there's also of course the IPv6

394
00:17:01,139 --> 00:17:04,439
notations the hexadecimal notation

395
00:17:04,439 --> 00:17:07,439
etc etc I mean the sky is the limit and

396
00:17:07,439 --> 00:17:09,240
you can also go for the decimal notation

397
00:17:09,240 --> 00:17:13,619
so uh this this is a perfectly valid IP

398
00:17:13,619 --> 00:17:17,520
address and if you're as a system only

399
00:17:17,520 --> 00:17:20,220
blocking this then of course you you

400
00:17:20,220 --> 00:17:22,260
kind of have a problem because all of

401
00:17:22,260 --> 00:17:26,040
them will resolve to the same IP address

402
00:17:26,040 --> 00:17:28,980
um so yeah it's it's always very good to

403
00:17:28,980 --> 00:17:31,799
know to read the RC and to see on how

404
00:17:31,799 --> 00:17:33,540
many different ways we can write

405
00:17:33,540 --> 00:17:35,640
something as simple as an IP address

406
00:17:35,640 --> 00:17:39,660
same with email addresses by the way if

407
00:17:39,660 --> 00:17:41,039
we would look at an email address it

408
00:17:41,039 --> 00:17:42,299
looks pretty straightforward right

409
00:17:42,299 --> 00:17:45,000
because a local part and a domain and

410
00:17:45,000 --> 00:17:48,059
that's really it but let's allow look at

411
00:17:48,059 --> 00:17:50,280
the local Parts it's supposed to have

412
00:17:50,280 --> 00:17:54,240
according to the RC Latin letters digits

413
00:17:54,240 --> 00:17:56,580
that's all normal and dots but not in

414
00:17:56,580 --> 00:17:58,799
front not in the back and not in the

415
00:17:58,799 --> 00:18:00,559
middle like two two behind each other

416
00:18:00,559 --> 00:18:03,059
but what's quite funky is that it

417
00:18:03,059 --> 00:18:05,039
actually allows you to have all of these

418
00:18:05,039 --> 00:18:06,720
characters in the email address so this

419
00:18:06,720 --> 00:18:08,700
is a valid email address and of course

420
00:18:08,700 --> 00:18:11,160
for people for example even in Sweden or

421
00:18:11,160 --> 00:18:14,820
Norway or in China they they also

422
00:18:14,820 --> 00:18:18,120
support utf-8 some clients still do not

423
00:18:18,120 --> 00:18:20,580
support it but it doesn't say that it's

424
00:18:20,580 --> 00:18:22,620
not a valid email address so this is

425
00:18:22,620 --> 00:18:24,600
also a valid email address which would

426
00:18:24,600 --> 00:18:26,940
of course expose us to normalization

427
00:18:26,940 --> 00:18:29,700
attacks and then if we quote the actual

428
00:18:29,700 --> 00:18:32,220
Parts the local part we can even do more

429
00:18:32,220 --> 00:18:34,080
funky stuff and we can have an atom

430
00:18:34,080 --> 00:18:35,940
there we can have slashes in there

431
00:18:35,940 --> 00:18:40,020
spacious steps and even emojis which of

432
00:18:40,020 --> 00:18:41,940
course you know will lead to a various

433
00:18:41,940 --> 00:18:44,340
set of payloads which I will show in a

434
00:18:44,340 --> 00:18:45,059
minute

435
00:18:45,059 --> 00:18:47,640
we have also wild cards so you can use a

436
00:18:47,640 --> 00:18:50,400
plus a minus and parenthesis to get some

437
00:18:50,400 --> 00:18:51,679
stuff in there

438
00:18:51,679 --> 00:18:55,020
and then the domain name itself is less

439
00:18:55,020 --> 00:18:57,240
funky there's less flexibility over here

440
00:18:57,240 --> 00:18:59,760
but what is interesting is that you can

441
00:18:59,760 --> 00:19:01,559
have IP addresses in there within

442
00:19:01,559 --> 00:19:04,679
brackets this may be used for ssrf

443
00:19:04,679 --> 00:19:08,039
so it's also quite quite interesting and

444
00:19:08,039 --> 00:19:10,200
of course this allows you to inject a

445
00:19:10,200 --> 00:19:13,440
couple of interesting or bypass

446
00:19:13,440 --> 00:19:16,380
um the valid email Checker of various

447
00:19:16,380 --> 00:19:18,780
web apps and still inject a couple of

448
00:19:18,780 --> 00:19:22,020
interesting payloads such as cross-site

449
00:19:22,020 --> 00:19:24,059
scripting templating action SQL index

450
00:19:24,059 --> 00:19:26,940
and Etc but even parameter pollution and

451
00:19:26,940 --> 00:19:28,640
header injection

452
00:19:28,640 --> 00:19:31,559
people tend to forget about these but I

453
00:19:31,559 --> 00:19:33,600
found my most critical bugs actually

454
00:19:33,600 --> 00:19:35,460
using headering action in email

455
00:19:35,460 --> 00:19:37,200
addresses because of course if you can

456
00:19:37,200 --> 00:19:40,200
get into an SMTP server and make it do

457
00:19:40,200 --> 00:19:42,299
fancy stuff that's that's kind of where

458
00:19:42,299 --> 00:19:44,700
all the good things are

459
00:19:44,700 --> 00:19:46,799
um there's actually like if you would

460
00:19:46,799 --> 00:19:49,020
send this out uh this would actually

461
00:19:49,020 --> 00:19:51,059
still work in Gmail so you can there's

462
00:19:51,059 --> 00:19:53,520
like this HTML in action supported by

463
00:19:53,520 --> 00:19:56,580
Gmail you can just try it out and this

464
00:19:56,580 --> 00:19:57,960
would be the email address you would be

465
00:19:57,960 --> 00:20:01,080
sending uh from reported it to the to

466
00:20:01,080 --> 00:20:03,539
the Google security team but it seems to

467
00:20:03,539 --> 00:20:05,700
be working as intended

468
00:20:05,700 --> 00:20:07,740
um so yeah it's uh it's like a little

469
00:20:07,740 --> 00:20:09,539
Easter egg for hackers

470
00:20:09,539 --> 00:20:11,640
um if somebody can pop an exercise from

471
00:20:11,640 --> 00:20:14,880
it please go ahead you can keep the

472
00:20:14,880 --> 00:20:17,640
bounty but other than that of course you

473
00:20:17,640 --> 00:20:20,220
can you can bypass some other stuff as

474
00:20:20,220 --> 00:20:22,919
well for example situations where you

475
00:20:22,919 --> 00:20:25,980
have a white listed domain name that you

476
00:20:25,980 --> 00:20:27,720
have to you know you have still have to

477
00:20:27,720 --> 00:20:29,820
receive the email as an attacker but

478
00:20:29,820 --> 00:20:32,160
it's from a company I mean it has to end

479
00:20:32,160 --> 00:20:34,320
with a company domain that you know of

480
00:20:34,320 --> 00:20:36,960
course are not a part of and you can try

481
00:20:36,960 --> 00:20:38,880
stuff like this right because email

482
00:20:38,880 --> 00:20:41,400
Parcels they tend to separate emails

483
00:20:41,400 --> 00:20:44,520
with semicolon so what happens is that

484
00:20:44,520 --> 00:20:46,380
you know you would try this which is a

485
00:20:46,380 --> 00:20:48,539
valid email address it would try to send

486
00:20:48,539 --> 00:20:50,640
to all the parts so first to India it

487
00:20:50,640 --> 00:20:54,240
doesn't work then to NT at nt.aio which

488
00:20:54,240 --> 00:20:55,860
actually works and then to the last part

489
00:20:55,860 --> 00:20:58,440
it doesn't work as well this email would

490
00:20:58,440 --> 00:21:00,179
actually arrive and you would still be

491
00:21:00,179 --> 00:21:02,760
able to get in even though your domain

492
00:21:02,760 --> 00:21:04,500
name is not the same as a whitelisted

493
00:21:04,500 --> 00:21:06,419
domain

494
00:21:06,419 --> 00:21:09,000
um so yeah there's there's that actually

495
00:21:09,000 --> 00:21:10,980
um I do know that slack was not actually

496
00:21:10,980 --> 00:21:14,400
vulnerable to this but it's an example

497
00:21:14,400 --> 00:21:16,140
um simply because it's a It's the Most

498
00:21:16,140 --> 00:21:19,020
Known technique or this is used

499
00:21:19,020 --> 00:21:21,120
um something else that picked my

500
00:21:21,120 --> 00:21:24,480
interests are in subscribe links

501
00:21:24,480 --> 00:21:26,640
um because whenever for example this is

502
00:21:26,640 --> 00:21:29,400
or and and forgive me the subtle product

503
00:21:29,400 --> 00:21:32,400
marketing uh but emails tend to have

504
00:21:32,400 --> 00:21:35,220
like an unsubscribe link and for some

505
00:21:35,220 --> 00:21:37,320
reason and I didn't know how back in the

506
00:21:37,320 --> 00:21:38,400
days

507
00:21:38,400 --> 00:21:40,679
um your email client will actually allow

508
00:21:40,679 --> 00:21:42,419
you to unsubscribe even without

509
00:21:42,419 --> 00:21:44,880
scrolling all the way down so assuming

510
00:21:44,880 --> 00:21:46,740
okay where do they get this information

511
00:21:46,740 --> 00:21:48,000
from

512
00:21:48,000 --> 00:21:50,100
um so I looked into the email headers

513
00:21:50,100 --> 00:21:52,740
and I saw that most of these emails

514
00:21:52,740 --> 00:21:54,900
would have like and this was also part

515
00:21:54,900 --> 00:21:57,659
of the RFC a list and subscribe header

516
00:21:57,659 --> 00:21:59,159
which would allow you to either send an

517
00:21:59,159 --> 00:22:01,740
email or send a post request to a

518
00:22:01,740 --> 00:22:04,320
certain URL

519
00:22:04,320 --> 00:22:07,500
um and then if you would do this for

520
00:22:07,500 --> 00:22:09,480
example let's say that we would set the

521
00:22:09,480 --> 00:22:11,340
list and subscribe to meal 2 at

522
00:22:11,340 --> 00:22:13,320
co.test.com

523
00:22:13,320 --> 00:22:16,140
set a subject and then a body sent money

524
00:22:16,140 --> 00:22:17,840
now to whatever

525
00:22:17,840 --> 00:22:20,580
and this is what basically you would see

526
00:22:20,580 --> 00:22:22,500
I mean the attacker would spam you with

527
00:22:22,500 --> 00:22:24,720
stuff and you would try to unsubscribe

528
00:22:24,720 --> 00:22:26,700
your Gmail client would just be like

529
00:22:26,700 --> 00:22:30,120
okay I need to send an email to CEO at

530
00:22:30,120 --> 00:22:32,460
target.com this is the subject this is

531
00:22:32,460 --> 00:22:33,960
the body

532
00:22:33,960 --> 00:22:36,780
um and it would actually arrive now this

533
00:22:36,780 --> 00:22:38,940
was not actually working in Gmail uh

534
00:22:38,940 --> 00:22:41,580
quite important but I was trying out

535
00:22:41,580 --> 00:22:43,260
some email clients

536
00:22:43,260 --> 00:22:45,780
um a couple of years ago and it actually

537
00:22:45,780 --> 00:22:47,760
worked it didn't work in Gmail but I'm

538
00:22:47,760 --> 00:22:52,460
using the the same layouts as an example

539
00:22:52,500 --> 00:22:54,900
um there's also ssrf

540
00:22:54,900 --> 00:22:57,480
um of course you've seen the URL in the

541
00:22:57,480 --> 00:22:59,820
header so what if instead of an email we

542
00:22:59,820 --> 00:23:02,760
just Supply URL and then we click and

543
00:23:02,760 --> 00:23:04,919
subscribe so I'm just putting my burp

544
00:23:04,919 --> 00:23:06,539
collaborator payload over here or just

545
00:23:06,539 --> 00:23:09,360
my own server and actually like whenever

546
00:23:09,360 --> 00:23:11,580
this person would click and subscribe

547
00:23:11,580 --> 00:23:14,640
the actual email client again it was not

548
00:23:14,640 --> 00:23:17,520
Gmail would send this ping back to my

549
00:23:17,520 --> 00:23:20,760
server which was which was quite cool

550
00:23:20,760 --> 00:23:25,200
and then one last example to finish with

551
00:23:25,200 --> 00:23:27,360
phone numbers

552
00:23:27,360 --> 00:23:28,799
um I haven't really talked about this

553
00:23:28,799 --> 00:23:30,840
technique a lot I'm still exploring but

554
00:23:30,840 --> 00:23:32,700
feel free to do your own research and

555
00:23:32,700 --> 00:23:35,460
use it for book monthly purposes as well

556
00:23:35,460 --> 00:23:37,620
we all think telephone numbers look like

557
00:23:37,620 --> 00:23:40,440
this right you start with a global kind

558
00:23:40,440 --> 00:23:42,360
of call Country ID and then you have the

559
00:23:42,360 --> 00:23:43,919
local number

560
00:23:43,919 --> 00:23:45,600
um pretty straightforward a lot of

561
00:23:45,600 --> 00:23:48,360
applications use them but then I went to

562
00:23:48,360 --> 00:23:50,940
read the RFC and it turns out there's a

563
00:23:50,940 --> 00:23:52,740
lot of additional parameters you can add

564
00:23:52,740 --> 00:23:55,799
to it you can supply the extension like

565
00:23:55,799 --> 00:23:57,240
after it

566
00:23:57,240 --> 00:23:59,340
um and you can have like phone contacts

567
00:23:59,340 --> 00:24:01,260
like it's it's meant for really old

568
00:24:01,260 --> 00:24:04,440
systems but many email validators will

569
00:24:04,440 --> 00:24:07,260
still take care of these

570
00:24:07,260 --> 00:24:09,059
um parameters and they will still allow

571
00:24:09,059 --> 00:24:12,000
them so you can also Supply some service

572
00:24:12,000 --> 00:24:14,340
codes so you know it's when everyone you

573
00:24:14,340 --> 00:24:17,100
you would call like a service line and

574
00:24:17,100 --> 00:24:19,679
you would be asked to deep dial a couple

575
00:24:19,679 --> 00:24:21,480
of options then you can basically

576
00:24:21,480 --> 00:24:24,179
already dial them as you're calling the

577
00:24:24,179 --> 00:24:26,700
number to to speed things up

578
00:24:26,700 --> 00:24:28,140
um so a lot of people don't know this so

579
00:24:28,140 --> 00:24:30,240
naturally I was looking for ways to to

580
00:24:30,240 --> 00:24:31,740
kind of abuse it and I was starting with

581
00:24:31,740 --> 00:24:34,340
this one because this one obviously can

582
00:24:34,340 --> 00:24:38,178
include some Latin characters

583
00:24:38,580 --> 00:24:39,179
um

584
00:24:39,179 --> 00:24:42,360
and first I was like hey maybe we can

585
00:24:42,360 --> 00:24:45,780
just let me just try to like verify this

586
00:24:45,780 --> 00:24:47,460
this phone number and see if it actually

587
00:24:47,460 --> 00:24:49,380
would arrive and it would actually

588
00:24:49,380 --> 00:24:51,539
arrive so I would try to and this is my

589
00:24:51,539 --> 00:24:52,799
own phone number I should probably have

590
00:24:52,799 --> 00:24:55,140
redacted that but it just don't

591
00:24:55,140 --> 00:24:57,059
call me

592
00:24:57,059 --> 00:25:00,960
um and um yeah basically I was able to

593
00:25:00,960 --> 00:25:02,820
um to get some

594
00:25:02,820 --> 00:25:05,520
some some confirmation codes in so this

595
00:25:05,520 --> 00:25:07,140
was actually a valid email address and

596
00:25:07,140 --> 00:25:09,000
the service would actually confirm my

597
00:25:09,000 --> 00:25:11,280
email address which was you know which

598
00:25:11,280 --> 00:25:12,600
was quite cool

599
00:25:12,600 --> 00:25:16,559
but then again what if instead of this

600
00:25:16,559 --> 00:25:18,840
um your confirmed email address the one

601
00:25:18,840 --> 00:25:21,120
that you got a code for for actually

602
00:25:21,120 --> 00:25:22,980
contains a cross-size scripting payload

603
00:25:22,980 --> 00:25:25,320
this is an example of an actual website

604
00:25:25,320 --> 00:25:27,659
and it kind of worked

605
00:25:27,659 --> 00:25:29,940
um you can you can get cross-size

606
00:25:29,940 --> 00:25:32,880
scriptings in valid phone numbers

607
00:25:32,880 --> 00:25:34,980
also this is a ref because this thing is

608
00:25:34,980 --> 00:25:37,440
actually supposed to contain a domain

609
00:25:37,440 --> 00:25:40,440
name and then some old systems may do I

610
00:25:40,440 --> 00:25:43,320
haven't really seen a get lookup yet but

611
00:25:43,320 --> 00:25:46,080
some old systems may do a DNS lookup for

612
00:25:46,080 --> 00:25:47,580
some reason

613
00:25:47,580 --> 00:25:50,760
uh but more interestingly and this can

614
00:25:50,760 --> 00:25:53,760
lead to account takeovers OTP spraying

615
00:25:53,760 --> 00:25:55,860
slash Brute Force

616
00:25:55,860 --> 00:25:59,940
um this Behavior happens whenever

617
00:25:59,940 --> 00:26:03,659
you know you get a couple of attempts to

618
00:26:03,659 --> 00:26:05,820
get like a password reset code per phone

619
00:26:05,820 --> 00:26:09,240
number but if you can always

620
00:26:09,240 --> 00:26:09,900
um

621
00:26:09,900 --> 00:26:11,760
get like a different phone number but

622
00:26:11,760 --> 00:26:13,559
the back ends will convert it to the

623
00:26:13,559 --> 00:26:15,600
original phone number for example using

624
00:26:15,600 --> 00:26:18,120
some common common libraries that also

625
00:26:18,120 --> 00:26:20,340
include this flow then this can lead to

626
00:26:20,340 --> 00:26:22,320
account takeover

627
00:26:22,320 --> 00:26:24,299
um let's say that your scenario this is

628
00:26:24,299 --> 00:26:25,679
the victim's

629
00:26:25,679 --> 00:26:28,740
um phone number a urine scenario that

630
00:26:28,740 --> 00:26:31,320
you kind of want to get their passwords

631
00:26:31,320 --> 00:26:33,539
reset codes it gets sent as a text

632
00:26:33,539 --> 00:26:35,400
message to their phone number but of

633
00:26:35,400 --> 00:26:36,840
course you can't really know what the

634
00:26:36,840 --> 00:26:39,600
what the code is but still you wanna you

635
00:26:39,600 --> 00:26:42,720
wanna reset their passwords so one of

636
00:26:42,720 --> 00:26:45,120
the things that you can do is

637
00:26:45,120 --> 00:26:45,720
um

638
00:26:45,720 --> 00:26:48,000
you could technically like first thing

639
00:26:48,000 --> 00:26:49,919
every 100 will do is try all the codes

640
00:26:49,919 --> 00:26:53,760
or try to just submit a lot of the same

641
00:26:53,760 --> 00:26:55,679
like do this over and over and over

642
00:26:55,679 --> 00:26:57,960
again try the same code every single

643
00:26:57,960 --> 00:26:59,580
time and then just pray and spray and

644
00:26:59,580 --> 00:27:01,380
hope that one day you will hit the right

645
00:27:01,380 --> 00:27:04,380
code but most of these systems will just

646
00:27:04,380 --> 00:27:05,720
lock you out

647
00:27:05,720 --> 00:27:08,100
and then you have to wait for 10 minutes

648
00:27:08,100 --> 00:27:10,500
and then maybe 30 minutes this also

649
00:27:10,500 --> 00:27:14,279
prevents some higher bills on their side

650
00:27:14,279 --> 00:27:18,539
but let's say that you know I'm

651
00:27:18,539 --> 00:27:21,360
trying to get like

652
00:27:21,360 --> 00:27:24,360
uh to guess the OTP that was sent to my

653
00:27:24,360 --> 00:27:26,640
phone number which is which is this

654
00:27:26,640 --> 00:27:29,159
phone number after four minutes or four

655
00:27:29,159 --> 00:27:31,919
attempts I get a block for 10 minutes we

656
00:27:31,919 --> 00:27:34,440
can easily bypass this for some systems

657
00:27:34,440 --> 00:27:36,240
and eventually reach account takeover

658
00:27:36,240 --> 00:27:39,659
let's say that we have the same but not

659
00:27:39,659 --> 00:27:41,940
really the same phone number so my phone

660
00:27:41,940 --> 00:27:45,000
number plus an extension added to it and

661
00:27:45,000 --> 00:27:47,460
just try it over and over and over again

662
00:27:47,460 --> 00:27:49,679
so we can get in four to five to six

663
00:27:49,679 --> 00:27:50,700
requests

664
00:27:50,700 --> 00:27:53,820
then we get another phone number that is

665
00:27:53,820 --> 00:27:55,860
also resolving to my account on the back

666
00:27:55,860 --> 00:27:59,039
end 789 and we kind of automate this

667
00:27:59,039 --> 00:28:01,559
until we are able to kind of test all of

668
00:28:01,559 --> 00:28:03,600
the potential codes of course we can

669
00:28:03,600 --> 00:28:05,520
also test the same code every single

670
00:28:05,520 --> 00:28:07,679
time because this really shows you that

671
00:28:07,679 --> 00:28:10,620
per email per phone number you can just

672
00:28:10,620 --> 00:28:12,720
test it and whenever the back end kind

673
00:28:12,720 --> 00:28:14,760
of normalizes it and also relates to

674
00:28:14,760 --> 00:28:16,860
your accounts but still the blocking

675
00:28:16,860 --> 00:28:19,860
procedure is done on uh on a string

676
00:28:19,860 --> 00:28:21,779
basis and doesn't really consider this

677
00:28:21,779 --> 00:28:24,960
you can just do zero click account

678
00:28:24,960 --> 00:28:28,080
takeover by abusing these very easily

679
00:28:28,080 --> 00:28:30,659
and you'd be surprised how many how many

680
00:28:30,659 --> 00:28:33,480
systems still support it so after a

681
00:28:33,480 --> 00:28:35,600
while you will find the correct codes

682
00:28:35,600 --> 00:28:38,279
and you'll be able to log in and reset

683
00:28:38,279 --> 00:28:40,380
the password obviously there's also

684
00:28:40,380 --> 00:28:42,559
stuff like buffer overflow

685
00:28:42,559 --> 00:28:45,059
there were some spoofing vulnerabilities

686
00:28:45,059 --> 00:28:47,460
so for example where you supply the

687
00:28:47,460 --> 00:28:50,159
local number here and then the first

688
00:28:50,159 --> 00:28:52,740
like in a parameter pollution attack the

689
00:28:52,740 --> 00:28:55,080
first one would be uh like this this

690
00:28:55,080 --> 00:28:56,580
would be a Dutch phone number and this

691
00:28:56,580 --> 00:28:59,039
would be a Belgian phone number uh but

692
00:28:59,039 --> 00:29:00,659
then one system would see it as a ditch

693
00:29:00,659 --> 00:29:02,159
phone number the other system would see

694
00:29:02,159 --> 00:29:03,779
it as a Belgian phone number some

695
00:29:03,779 --> 00:29:05,640
scenarios you would be able to if

696
00:29:05,640 --> 00:29:08,100
somebody with exactly the same local

697
00:29:08,100 --> 00:29:09,960
phone number with the different country

698
00:29:09,960 --> 00:29:12,299
code signed up

699
00:29:12,299 --> 00:29:13,799
um you would be able to take on their

700
00:29:13,799 --> 00:29:15,840
account by the system accidentally

701
00:29:15,840 --> 00:29:18,179
taking the wrong parameter and sending

702
00:29:18,179 --> 00:29:20,820
the password reset code to your account

703
00:29:20,820 --> 00:29:23,580
so I mean feel free to to hunt for this

704
00:29:23,580 --> 00:29:26,100
I've seen it walking in a lot of

705
00:29:26,100 --> 00:29:28,080
interesting uh like Fortune 500

706
00:29:28,080 --> 00:29:30,059
companies

707
00:29:30,059 --> 00:29:32,460
um they fixed some of it already uh but

708
00:29:32,460 --> 00:29:33,539
yeah

709
00:29:33,539 --> 00:29:35,760
um feel free to uh to test for it and

710
00:29:35,760 --> 00:29:37,980
let me know how it goes always happy to

711
00:29:37,980 --> 00:29:40,140
to do more research on it but it's just

712
00:29:40,140 --> 00:29:42,539
an example I found this whenever When I

713
00:29:42,539 --> 00:29:44,580
Was preparing for this talk

714
00:29:44,580 --> 00:29:46,080
um so it really shows that the moment

715
00:29:46,080 --> 00:29:48,480
you start researching some rfcs you can

716
00:29:48,480 --> 00:29:50,399
actually find some some great stuff with

717
00:29:50,399 --> 00:29:53,760
it thank you so much for attending this

718
00:29:53,760 --> 00:29:56,580
30 minute talk and do not forget to

719
00:29:56,580 --> 00:29:58,799
follow us on Twitter and master them

720
00:29:58,799 --> 00:30:01,580
thank you

