1
00:00:02,720 --> 00:00:10,110
all right let's welcome Jason and it's

2
00:00:07,620 --> 00:00:12,540
washis talk and again reminder this is a

3
00:00:10,110 --> 00:00:14,280
pre-recorded session again if you have

4
00:00:12,540 --> 00:00:23,310
questions drop them and the chat and

5
00:00:14,280 --> 00:00:26,220
we'll see if we can get him answered all

6
00:00:23,310 --> 00:00:29,159
right everybody welcome to the last day

7
00:00:26,220 --> 00:00:32,009
of Nahum Conda thank you for having me

8
00:00:29,160 --> 00:00:35,460
here to present the bug hunters

9
00:00:32,009 --> 00:00:38,730
methodology v4 today we're going to take

10
00:00:35,460 --> 00:00:42,809
a couple hours give or take and talk

11
00:00:38,730 --> 00:00:44,910
about different methods that work for me

12
00:00:42,809 --> 00:00:46,349
in bug bounty hunting that I think are

13
00:00:44,910 --> 00:00:48,870
cool we're going to talk a lot about

14
00:00:46,350 --> 00:00:51,449
tools and kind of why we use them what

15
00:00:48,870 --> 00:00:58,050
we're doing with them and I'm excited to

16
00:00:51,449 --> 00:00:59,579
be here today to talk to you all so I

17
00:00:58,050 --> 00:01:02,968
wanted to start off the presentation

18
00:00:59,579 --> 00:01:04,379
with kind of the future of the bug

19
00:01:02,969 --> 00:01:05,820
hunters methodology right so the bug

20
00:01:04,379 --> 00:01:10,020
hunters methodology is a talk I've been

21
00:01:05,820 --> 00:01:12,419
doing for oh boy I want to say like six

22
00:01:10,020 --> 00:01:14,100
years now or something like that there's

23
00:01:12,420 --> 00:01:16,350
been multiple iterations obviously with

24
00:01:14,100 --> 00:01:18,360
the versioning system the first one was

25
00:01:16,350 --> 00:01:20,669
at DEFCON and then it moved on to root

26
00:01:18,360 --> 00:01:22,560
con and then back to DEFCON and then all

27
00:01:20,670 --> 00:01:25,320
over different small conferences and

28
00:01:22,560 --> 00:01:28,140
virtual conferences etc and what

29
00:01:25,320 --> 00:01:31,979
happened was it just got too big for one

30
00:01:28,140 --> 00:01:34,740
slot right so what I've ended up doing

31
00:01:31,979 --> 00:01:36,450
for this iteration is the bug hunters

32
00:01:34,740 --> 00:01:39,539
methodology is splitting into two

33
00:01:36,450 --> 00:01:41,340
distinct pieces and really a lot of the

34
00:01:39,540 --> 00:01:44,670
work in this presentation is based out

35
00:01:41,340 --> 00:01:46,470
of live training I give that goes over

36
00:01:44,670 --> 00:01:49,560
two days so really you could fill a

37
00:01:46,470 --> 00:01:52,740
whole two days with with demoing all the

38
00:01:49,560 --> 00:01:53,790
stuff in these slides and the two

39
00:01:52,740 --> 00:01:56,520
sections that we're going to break that

40
00:01:53,790 --> 00:01:58,590
up into our recon and application

41
00:01:56,520 --> 00:02:00,810
analysis because this is usually the

42
00:01:58,590 --> 00:02:02,880
delineation that people have interest in

43
00:02:00,810 --> 00:02:04,619
when they talk to me about the bug

44
00:02:02,880 --> 00:02:08,038
hunters methodology a lot of them really

45
00:02:04,619 --> 00:02:09,179
like the Recon stuff they really like to

46
00:02:08,038 --> 00:02:12,269
know what you're doing

47
00:02:09,179 --> 00:02:13,890
in that area and then others have

48
00:02:12,270 --> 00:02:15,600
feedback that basically says

49
00:02:13,890 --> 00:02:17,040
you know I want to learn more about you

50
00:02:15,600 --> 00:02:17,700
know when I actually land on a nap what

51
00:02:17,040 --> 00:02:21,120
am i doing

52
00:02:17,700 --> 00:02:24,269
so today we're gonna start off with the

53
00:02:21,120 --> 00:02:25,500
bug hunters methodology V for recon and

54
00:02:24,270 --> 00:02:29,300
we're gonna go through everything that I

55
00:02:25,500 --> 00:02:32,700
use in my hunting and and talk about it

56
00:02:29,300 --> 00:02:35,459
so just a little bit of an about me my

57
00:02:32,700 --> 00:02:36,530
name is Jason you may know me on Twitter

58
00:02:35,459 --> 00:02:39,930
as Jay Haddix

59
00:02:36,530 --> 00:02:41,610
I'm a father husband hacker gamer and

60
00:02:39,930 --> 00:02:43,140
sometimes streamer although I haven't

61
00:02:41,610 --> 00:02:44,370
done it in a little while the kovat

62
00:02:43,140 --> 00:02:46,589
situations been kind of crazy

63
00:02:44,370 --> 00:02:50,580
I'm currently 28 time the bugcrowd

64
00:02:46,590 --> 00:02:53,160
leaderboard all-time and those are my

65
00:02:50,580 --> 00:02:55,560
lovely children over there my son Arlen

66
00:02:53,160 --> 00:02:57,390
and my two girls Avalon and Arcadia and

67
00:02:55,560 --> 00:02:58,530
that's them coming to Def Con last year

68
00:02:57,390 --> 00:03:02,429
for the first time which was really

69
00:02:58,530 --> 00:03:04,380
special to me like I said I'm a gamer

70
00:03:02,430 --> 00:03:06,630
I'm playing destiny right now Call of

71
00:03:04,380 --> 00:03:10,859
Duty warzone the division and path of

72
00:03:06,630 --> 00:03:12,930
Exile so you know if you see me online

73
00:03:10,860 --> 00:03:16,350
or you ping me um we could we could

74
00:03:12,930 --> 00:03:17,310
shoot some stuff and be cool so the

75
00:03:16,350 --> 00:03:19,230
first thing in the blog Hunter's

76
00:03:17,310 --> 00:03:20,730
methodology that I like to talk about is

77
00:03:19,230 --> 00:03:22,100
it's just project tracking right when

78
00:03:20,730 --> 00:03:25,290
you're doing bounties if you're not

79
00:03:22,100 --> 00:03:28,769
tracking your progress or your tool

80
00:03:25,290 --> 00:03:30,810
output it can get kind of hairy and so

81
00:03:28,769 --> 00:03:32,940
you know some of the tools I recommend

82
00:03:30,810 --> 00:03:35,880
you know I use very personally I use

83
00:03:32,940 --> 00:03:37,350
mind maps and I use a tool called X mind

84
00:03:35,880 --> 00:03:40,140
which a lot of people comments on I'm

85
00:03:37,350 --> 00:03:42,560
kind of known for using mind maps in my

86
00:03:40,140 --> 00:03:46,559
tracking but really you just need a

87
00:03:42,560 --> 00:03:48,269
method that makes sense to you to track

88
00:03:46,560 --> 00:03:50,489
your work so some people can do it in

89
00:03:48,269 --> 00:03:53,160
Excel files some people can take notes

90
00:03:50,489 --> 00:03:54,630
in them or notepad plus plus really

91
00:03:53,160 --> 00:03:56,670
anything I've heard of people doing in

92
00:03:54,630 --> 00:03:58,380
OneNote or other note-taking programs

93
00:03:56,670 --> 00:04:00,208
there's some pen tests you know

94
00:03:58,380 --> 00:04:02,940
standalone applications that are meant

95
00:04:00,209 --> 00:04:04,680
to track projects and pen testing etc

96
00:04:02,940 --> 00:04:07,170
etc but project tracking is a super

97
00:04:04,680 --> 00:04:10,709
important part of the bug bounty and pen

98
00:04:07,170 --> 00:04:12,268
testing methodology so when I do a

99
00:04:10,709 --> 00:04:15,079
bounty or anything like that

100
00:04:12,269 --> 00:04:18,358
this is kind of how I start off right so

101
00:04:15,079 --> 00:04:20,489
here is my tool to take notes in its ex

102
00:04:18,358 --> 00:04:22,799
mind it's making this mind map where I

103
00:04:20,488 --> 00:04:25,169
have a center node and I can make sub

104
00:04:22,800 --> 00:04:27,790
nodes off of the center node and here

105
00:04:25,169 --> 00:04:30,669
you can see you know I started off with

106
00:04:27,790 --> 00:04:32,470
some light subnodes and as i do this

107
00:04:30,670 --> 00:04:35,020
project over time i'll fill this out

108
00:04:32,470 --> 00:04:36,610
pretty far you can see I have my a SNS

109
00:04:35,020 --> 00:04:38,950
for this project on the left hand side

110
00:04:36,610 --> 00:04:41,200
and the acquisitions that this company

111
00:04:38,950 --> 00:04:43,120
has made in a sub node there and the

112
00:04:41,200 --> 00:04:44,920
link discovery will go in a sub node

113
00:04:43,120 --> 00:04:46,480
there and then a reverse who is linked

114
00:04:44,920 --> 00:04:48,310
to get all of those things which we'll

115
00:04:46,480 --> 00:04:49,990
talk about soon and then on the right

116
00:04:48,310 --> 00:04:52,600
hand side I have started to fill out my

117
00:04:49,990 --> 00:04:54,370
routes right so you know for this

118
00:04:52,600 --> 00:04:56,950
project which is Tesla you can see Tesla

119
00:04:54,370 --> 00:04:58,720
comm and Tesla Motors I obviously know

120
00:04:56,950 --> 00:05:00,430
that I've read the scope for this

121
00:04:58,720 --> 00:05:02,680
project you know that Solar City in my

122
00:05:00,430 --> 00:05:04,810
solar city are not verbatim in scope for

123
00:05:02,680 --> 00:05:06,220
this specific project and then I have

124
00:05:04,810 --> 00:05:07,810
some others here too so this is how I

125
00:05:06,220 --> 00:05:10,450
start to build up build up my mind map

126
00:05:07,810 --> 00:05:12,490
this is the very beginning of it when

127
00:05:10,450 --> 00:05:15,070
you move on to like intermediary and you

128
00:05:12,490 --> 00:05:18,250
dig down into some more of these places

129
00:05:15,070 --> 00:05:20,590
it starts to look like this so on the

130
00:05:18,250 --> 00:05:25,750
left hand side I've expanded Tesla comm

131
00:05:20,590 --> 00:05:27,909
and Tesla comm has all of these all of

132
00:05:25,750 --> 00:05:30,840
these sites basically that I've

133
00:05:27,910 --> 00:05:33,250
confirmed or up or I've discovered and

134
00:05:30,840 --> 00:05:36,520
when I want to track one you can see

135
00:05:33,250 --> 00:05:38,440
that Tesla comm boo-boo-boo Tesla comm

136
00:05:36,520 --> 00:05:41,260
is highlighted in orange when I expand

137
00:05:38,440 --> 00:05:45,190
out that each expansion for me has my

138
00:05:41,260 --> 00:05:47,680
actual notes for that site so doing some

139
00:05:45,190 --> 00:05:49,750
narrow recon these are just places where

140
00:05:47,680 --> 00:05:51,640
I can stuff things some questions I want

141
00:05:49,750 --> 00:05:53,410
to ask myself like you know are there

142
00:05:51,640 --> 00:05:54,760
multiple user roles for this site is

143
00:05:53,410 --> 00:05:57,670
there logging and how does it handle

144
00:05:54,760 --> 00:05:59,349
special characters you know what is the

145
00:05:57,670 --> 00:06:03,010
technology behind it you know

146
00:05:59,350 --> 00:06:06,100
interesting end points for this exact

147
00:06:03,010 --> 00:06:07,420
site and this will actually you know

148
00:06:06,100 --> 00:06:08,710
this format will happen for all the

149
00:06:07,420 --> 00:06:11,590
sites that I decide to spend some time

150
00:06:08,710 --> 00:06:13,330
on if I deem them interesting and we'll

151
00:06:11,590 --> 00:06:15,010
talk about that in a little while so

152
00:06:13,330 --> 00:06:17,169
this is my way to take notes by no means

153
00:06:15,010 --> 00:06:19,570
do you have to you know do anything like

154
00:06:17,170 --> 00:06:21,310
this but but it is an interesting way

155
00:06:19,570 --> 00:06:24,400
for me to remind myself to do a

156
00:06:21,310 --> 00:06:27,760
methodology for for each part of each

157
00:06:24,400 --> 00:06:29,620
site so they were talking about recon

158
00:06:27,760 --> 00:06:32,620
the Recon part of the bug hunters

159
00:06:29,620 --> 00:06:34,540
methodology and so this idea of wide

160
00:06:32,620 --> 00:06:36,430
recon is the art of discovering as many

161
00:06:34,540 --> 00:06:39,190
assets related to a target as possible

162
00:06:36,430 --> 00:06:40,360
so we want to make sure that are first

163
00:06:39,190 --> 00:06:41,380
of all that our scope permits you

164
00:06:40,360 --> 00:06:43,180
testing these sites so

165
00:06:41,380 --> 00:06:45,430
always check your scope but when I think

166
00:06:43,180 --> 00:06:48,010
about wide recon I think about a whole

167
00:06:45,430 --> 00:06:50,770
bunch of distinct pieces of work I need

168
00:06:48,010 --> 00:06:52,360
to do inside of white recon and when I

169
00:06:50,770 --> 00:06:53,919
start to think about them and outline

170
00:06:52,360 --> 00:06:55,300
them and make them in a presentation to

171
00:06:53,920 --> 00:06:57,190
this the wheels will start turning in

172
00:06:55,300 --> 00:06:58,840
your head as well as they turn in my

173
00:06:57,190 --> 00:07:00,310
head and you'll start to think about

174
00:06:58,840 --> 00:07:02,109
automation how you can string these

175
00:07:00,310 --> 00:07:04,210
together and building a framework etc

176
00:07:02,110 --> 00:07:05,980
etc etc so these are the distinct

177
00:07:04,210 --> 00:07:08,200
sections of work find the in scope

178
00:07:05,980 --> 00:07:11,440
domains find the acquisitions enumerate

179
00:07:08,200 --> 00:07:13,539
the ASNs look at reverse who is do a

180
00:07:11,440 --> 00:07:15,580
whole bunch of subdomain enumeration and

181
00:07:13,540 --> 00:07:16,720
then do some port analysis and then

182
00:07:15,580 --> 00:07:19,330
there's some other things that kind of

183
00:07:16,720 --> 00:07:20,770
bleed into they could be considered

184
00:07:19,330 --> 00:07:22,960
application analysis they could be

185
00:07:20,770 --> 00:07:25,000
considered recon they kind of sit in the

186
00:07:22,960 --> 00:07:28,930
middle and we'll talk about some of

187
00:07:25,000 --> 00:07:31,360
those well so the first thing we have to

188
00:07:28,930 --> 00:07:34,240
do is find seeds or you know a lot of

189
00:07:31,360 --> 00:07:38,710
people call seeds in recon or roots root

190
00:07:34,240 --> 00:07:40,300
domains so here we're looking at a brief

191
00:07:38,710 --> 00:07:43,719
page for Tesla on bugcrowd

192
00:07:40,300 --> 00:07:45,790
and it's pretty easy this is one of bug

193
00:07:43,720 --> 00:07:48,730
creds biggest scope programs or at least

194
00:07:45,790 --> 00:07:51,760
loosely scoped you can see that you know

195
00:07:48,730 --> 00:07:54,280
start at Tesla com start at Tesla CN

196
00:07:51,760 --> 00:07:56,800
start at Tesla Motors comm and start at

197
00:07:54,280 --> 00:07:57,909
Tesla services are all pretty open scope

198
00:07:56,800 --> 00:08:01,930
that means that you can test any

199
00:07:57,910 --> 00:08:03,160
subdomain applied to those and that's a

200
00:08:01,930 --> 00:08:04,990
pretty wide scope and then they have

201
00:08:03,160 --> 00:08:06,400
this extra space down here that says any

202
00:08:04,990 --> 00:08:09,910
host verified to be owned by Tesla

203
00:08:06,400 --> 00:08:11,679
Motors is also in scope so that's really

204
00:08:09,910 --> 00:08:13,030
awesome this is a wide script program

205
00:08:11,680 --> 00:08:14,200
and so those are our seed domains the

206
00:08:13,030 --> 00:08:16,450
first four that we'd probably work with

207
00:08:14,200 --> 00:08:17,950
Tesla comm Tesla dot CN Tesla Motors

208
00:08:16,450 --> 00:08:20,860
that comment tested that services and

209
00:08:17,950 --> 00:08:23,229
then we try to build from there so this

210
00:08:20,860 --> 00:08:25,120
is on blood crowd a hacker one you have

211
00:08:23,230 --> 00:08:28,510
everybody's favorite program Verizon

212
00:08:25,120 --> 00:08:30,130
Media and Verizon media I couldn't

213
00:08:28,510 --> 00:08:32,679
screenshot the page to fit it all in one

214
00:08:30,130 --> 00:08:35,500
place but basically they have a bunch of

215
00:08:32,679 --> 00:08:36,909
in scope domains and they also have a

216
00:08:35,500 --> 00:08:39,340
clause in their program that says if you

217
00:08:36,909 --> 00:08:42,549
found a vulnerability that you believe

218
00:08:39,340 --> 00:08:43,930
affects Verizon Media submitted to this

219
00:08:42,549 --> 00:08:46,390
program so it's a pretty wide scope

220
00:08:43,929 --> 00:08:48,010
program it you know it's like I tried I

221
00:08:46,390 --> 00:08:49,870
did try to screenshot this and it was

222
00:08:48,010 --> 00:08:51,640
like 8 million pages to try to bring it

223
00:08:49,870 --> 00:08:53,890
in a screenshot so there's a lot of

224
00:08:51,640 --> 00:08:55,189
scope open here there's a lot of you

225
00:08:53,890 --> 00:08:57,319
know seed domains that you can

226
00:08:55,190 --> 00:08:58,820
art with and you would you know parse

227
00:08:57,320 --> 00:09:04,640
those immediately into your notes as

228
00:08:58,820 --> 00:09:05,810
places to start for analysis so the

229
00:09:04,640 --> 00:09:08,750
first thing I want to do when I'm doing

230
00:09:05,810 --> 00:09:11,390
wide recon is understand the company a

231
00:09:08,750 --> 00:09:13,040
little bit and I'm gonna use two

232
00:09:11,390 --> 00:09:16,189
examples throughout the presentation

233
00:09:13,040 --> 00:09:17,689
mostly twitch which we're on right now

234
00:09:16,190 --> 00:09:19,340
which is awesome so I thought I'd do

235
00:09:17,690 --> 00:09:21,530
twitch and I normally do it in my demos

236
00:09:19,340 --> 00:09:24,080
when I do some of this stuff live and

237
00:09:21,530 --> 00:09:27,319
then I also use Tesla because I like

238
00:09:24,080 --> 00:09:29,690
Tesla so here's us searching twitch in

239
00:09:27,320 --> 00:09:32,990
CrunchBase which is this business

240
00:09:29,690 --> 00:09:36,230
information portal that that you can

241
00:09:32,990 --> 00:09:38,120
register for crunch based calm and you

242
00:09:36,230 --> 00:09:39,350
can look at an organization and it'll

243
00:09:38,120 --> 00:09:42,260
give you information about the

244
00:09:39,350 --> 00:09:43,490
organization when it was founded but the

245
00:09:42,260 --> 00:09:44,750
one of the important things that's going

246
00:09:43,490 --> 00:09:46,430
to give us that we want to look at is

247
00:09:44,750 --> 00:09:48,230
the acquisitions of this company so here

248
00:09:46,430 --> 00:09:50,870
I could type tint which I can click on

249
00:09:48,230 --> 00:09:52,100
twitch and it'll give me some

250
00:09:50,870 --> 00:09:54,260
information about the acquisitions the

251
00:09:52,100 --> 00:09:55,910
next page one thing that you want to

252
00:09:54,260 --> 00:09:58,730
know here is that you don't need to use

253
00:09:55,910 --> 00:10:00,800
crunchbase I have a pro subscription to

254
00:09:58,730 --> 00:10:03,770
crunch base so I can automate pulling

255
00:10:00,800 --> 00:10:07,430
stuff from the API which for me is worth

256
00:10:03,770 --> 00:10:10,040
it because I've built it into my my

257
00:10:07,430 --> 00:10:11,689
scripts when I kick one off but you can

258
00:10:10,040 --> 00:10:14,000
also get this information from just

259
00:10:11,690 --> 00:10:16,220
Google and Wikipedia you just want to

260
00:10:14,000 --> 00:10:19,790
try to find acquisitions of the target

261
00:10:16,220 --> 00:10:21,430
company now here on the left hand side

262
00:10:19,790 --> 00:10:25,640
you can see twitch has you know

263
00:10:21,430 --> 00:10:27,500
basically been acquired by Amazon in the

264
00:10:25,640 --> 00:10:29,030
left hand screenshot here and then they

265
00:10:27,500 --> 00:10:30,710
have four acquisitions and it gives

266
00:10:29,030 --> 00:10:33,680
information on their founders and

267
00:10:30,710 --> 00:10:34,970
everything like that and gives you info

268
00:10:33,680 --> 00:10:36,560
on their Facebook and LinkedIn and

269
00:10:34,970 --> 00:10:39,230
Twitter which could become useful later

270
00:10:36,560 --> 00:10:40,819
on but we want to drill down to the

271
00:10:39,230 --> 00:10:43,190
acquisitions and here you can see that

272
00:10:40,820 --> 00:10:47,480
twitch has acquired four companies over

273
00:10:43,190 --> 00:10:52,370
the last six years rev lo the most

274
00:10:47,480 --> 00:10:54,320
recent clip mine curse and good game so

275
00:10:52,370 --> 00:10:56,720
these may or may not be in scope for

276
00:10:54,320 --> 00:10:58,790
your program it's important to check and

277
00:10:56,720 --> 00:11:00,230
see if they're in the out of scope

278
00:10:58,790 --> 00:11:02,510
clause and if they're in the in scope

279
00:11:00,230 --> 00:11:05,150
clause if it's a wide scope program like

280
00:11:02,510 --> 00:11:06,920
Tesla or like Verizon media and it's

281
00:11:05,150 --> 00:11:08,630
eaten either it's not neither but you've

282
00:11:06,920 --> 00:11:08,959
confirmed that they're acquisitions of

283
00:11:08,630 --> 00:11:10,939
the

284
00:11:08,960 --> 00:11:13,490
Bini you might feel safe you know

285
00:11:10,940 --> 00:11:15,290
submitting vulnerabilities for these

286
00:11:13,490 --> 00:11:17,510
domains and you would drill down into

287
00:11:15,290 --> 00:11:20,569
revel or clip mine or curse or a good

288
00:11:17,510 --> 00:11:22,850
game here and find there you know main

289
00:11:20,570 --> 00:11:25,490
domain which is probably read load calm

290
00:11:22,850 --> 00:11:27,680
or clip mind calm or curse I can't

291
00:11:25,490 --> 00:11:30,620
remember curse was cursed at GG these

292
00:11:27,680 --> 00:11:33,170
may not exist anymore they may they may

293
00:11:30,620 --> 00:11:34,760
exist but you know redirect somewhere

294
00:11:33,170 --> 00:11:37,550
else but they could be good seed domains

295
00:11:34,760 --> 00:11:39,770
for us to add to our tools later on one

296
00:11:37,550 --> 00:11:41,359
other thing here is that sometimes even

297
00:11:39,770 --> 00:11:42,649
though you get the acquired date here

298
00:11:41,360 --> 00:11:44,930
sometimes you don't get the like

299
00:11:42,649 --> 00:11:46,880
divested date here which means it's or

300
00:11:44,930 --> 00:11:50,839
like which means may say maybe the

301
00:11:46,880 --> 00:11:52,550
company has resold or separated from the

302
00:11:50,839 --> 00:11:57,110
acquisition so always do some googling

303
00:11:52,550 --> 00:12:00,709
at this point to see if that acquisition

304
00:11:57,110 --> 00:12:05,510
is still acquired for the the top

305
00:12:00,709 --> 00:12:07,640
company that you're actually hacking so

306
00:12:05,510 --> 00:12:09,380
this is one of my favorite sites talked

307
00:12:07,640 --> 00:12:11,180
about it in previous talks so well it's

308
00:12:09,380 --> 00:12:13,700
been a ton of time on it but bgp dot a

309
00:12:11,180 --> 00:12:16,250
cheetah net Hurricane electric internet

310
00:12:13,700 --> 00:12:18,950
services allows a free text form search

311
00:12:16,250 --> 00:12:24,050
box to search for the autonomous system

312
00:12:18,950 --> 00:12:26,480
number of a organization so here I've

313
00:12:24,050 --> 00:12:28,520
just put in twitch and immediately I can

314
00:12:26,480 --> 00:12:31,100
see that I have two autonomous system

315
00:12:28,520 --> 00:12:33,199
numbers which are top-level numbers

316
00:12:31,100 --> 00:12:35,000
given to an organization when their

317
00:12:33,200 --> 00:12:37,070
network gets big enough and it

318
00:12:35,000 --> 00:12:40,010
encompasses all of the you know an IP

319
00:12:37,070 --> 00:12:41,480
address that they have it doesn't

320
00:12:40,010 --> 00:12:44,029
represent things like cloud assets like

321
00:12:41,480 --> 00:12:47,390
AWS and GCP measure so it's not a

322
00:12:44,029 --> 00:12:48,800
complete picture of twitch but it is it

323
00:12:47,390 --> 00:12:51,490
is a starting place where we have some

324
00:12:48,800 --> 00:12:53,630
ranges of IP space both ipv4 and ipv6

325
00:12:51,490 --> 00:12:55,640
that we can check out here we can also

326
00:12:53,630 --> 00:12:57,170
see that their description name and

327
00:12:55,640 --> 00:12:59,089
probably what is also in their registrar

328
00:12:57,170 --> 00:13:02,270
information is there listed as twitch

329
00:12:59,089 --> 00:13:05,690
interactive ink right now so this gives

330
00:13:02,270 --> 00:13:12,350
us a lot of place to start for looking

331
00:13:05,690 --> 00:13:14,329
into this company so a lot of people you

332
00:13:12,350 --> 00:13:16,670
know want to automate a lot of portions

333
00:13:14,329 --> 00:13:19,310
of recon and that's absolutely cool so

334
00:13:16,670 --> 00:13:21,229
if you want to do some ASN enumeration

335
00:13:19,310 --> 00:13:22,489
on the command line there's two tools

336
00:13:21,230 --> 00:13:25,640
here that

337
00:13:22,490 --> 00:13:27,710
you can use one is meta meta big or I

338
00:13:25,640 --> 00:13:32,870
think I'm saying that right by Jessie

339
00:13:27,710 --> 00:13:35,990
JJJ which will fetch ASN data from BG

340
00:13:32,870 --> 00:13:38,960
pthe net and ASN lucam

341
00:13:35,990 --> 00:13:41,570
and you can see the syntax for that up

342
00:13:38,960 --> 00:13:45,590
there you can also use a tool called a

343
00:13:41,570 --> 00:13:48,410
SN look up by a scene and that one pulls

344
00:13:45,590 --> 00:13:50,480
from the maximum comdata set the one

345
00:13:48,410 --> 00:13:53,360
problem is pulling a SN data like this

346
00:13:50,480 --> 00:13:56,090
without having that contextual lookup on

347
00:13:53,360 --> 00:13:57,920
an actual webpage is I've been burned a

348
00:13:56,090 --> 00:14:01,040
couple times where I try to automate ASM

349
00:13:57,920 --> 00:14:03,589
yes and lookups and because of the term

350
00:14:01,040 --> 00:14:05,660
I put in in this case like Tesla or you

351
00:14:03,590 --> 00:14:07,690
know if I put in another like you know

352
00:14:05,660 --> 00:14:10,870
term that I'm looking at for a business

353
00:14:07,690 --> 00:14:13,820
even if I were to just put in Yahoo or

354
00:14:10,870 --> 00:14:15,170
Verizon I could get back multiple

355
00:14:13,820 --> 00:14:17,090
different things for instance in this

356
00:14:15,170 --> 00:14:18,680
case Tesla if you're not careful you

357
00:14:17,090 --> 00:14:21,230
could get back other companies that have

358
00:14:18,680 --> 00:14:23,930
Tesla in their business name and not

359
00:14:21,230 --> 00:14:26,090
exactly Tesla Motors so you have to be

360
00:14:23,930 --> 00:14:27,949
careful with you know automating some

361
00:14:26,090 --> 00:14:29,660
parts of this although this one actually

362
00:14:27,950 --> 00:14:31,730
goes pretty well in the automation here

363
00:14:29,660 --> 00:14:35,240
I'm pretty sure these are their ranges

364
00:14:31,730 --> 00:14:37,370
and everything would be good but yeah

365
00:14:35,240 --> 00:14:39,140
that's why I normally start in my

366
00:14:37,370 --> 00:14:41,420
process we can manually doing it through

367
00:14:39,140 --> 00:14:42,949
the BGP dot H in that site so that I

368
00:14:41,420 --> 00:14:46,370
make sure that I don't accidentally kick

369
00:14:42,950 --> 00:14:49,820
off recon on a whole bunch of stuff

370
00:14:46,370 --> 00:14:54,530
that's not even in a bug bounty so just

371
00:14:49,820 --> 00:14:58,160
a little warning there so after that I

372
00:14:54,530 --> 00:15:00,439
moved into enumeration of the a sense

373
00:14:58,160 --> 00:15:03,980
and so right before us you know we had a

374
00:15:00,440 --> 00:15:06,950
wonderful session with Jeff Foley who is

375
00:15:03,980 --> 00:15:10,490
the lead project owner of the amass tool

376
00:15:06,950 --> 00:15:12,740
and I use amass extensively in my recon

377
00:15:10,490 --> 00:15:15,170
for multiple different things and so a

378
00:15:12,740 --> 00:15:18,050
mass is separated into three different

379
00:15:15,170 --> 00:15:19,250
tools one is until one is enum and then

380
00:15:18,050 --> 00:15:20,979
there's a couple other ones actually I

381
00:15:19,250 --> 00:15:28,400
think there's more than three tools now

382
00:15:20,980 --> 00:15:30,920
so you can feed a mass Intel with an ASN

383
00:15:28,400 --> 00:15:33,949
number here you can see that twitch

384
00:15:30,920 --> 00:15:36,319
interactive is a s four six four eight

385
00:15:33,950 --> 00:15:39,440
nine and what it'll do is look at

386
00:15:36,320 --> 00:15:41,980
scan that IP range it'll expand out all

387
00:15:39,440 --> 00:15:44,180
the ranges and it'll scan that for

388
00:15:41,980 --> 00:15:45,589
top-level seed domains and so we can

389
00:15:44,180 --> 00:15:47,508
gather more seeds here and you can see

390
00:15:45,589 --> 00:15:49,370
that now we're starting to expand our

391
00:15:47,509 --> 00:15:51,560
scope kind of exponentially the more

392
00:15:49,370 --> 00:15:53,149
seeds we get the better because then we

393
00:15:51,560 --> 00:15:55,160
do sub-domain an enumeration on those

394
00:15:53,149 --> 00:15:56,630
seeds and we do all of other recon on

395
00:15:55,160 --> 00:15:58,850
those seeds and so the more seeds we

396
00:15:56,630 --> 00:16:00,800
have the better so here you can see that

397
00:15:58,850 --> 00:16:02,660
inside of a range that we verified as

398
00:16:00,800 --> 00:16:04,758
them twitch interactive in their IP

399
00:16:02,660 --> 00:16:06,199
space we now know that they have some

400
00:16:04,759 --> 00:16:08,420
stuff that we didn't know about at all

401
00:16:06,199 --> 00:16:12,229
we have justin.tv which is the company

402
00:16:08,420 --> 00:16:15,259
twitch used to be we have T TV and W net

403
00:16:12,230 --> 00:16:16,790
which you know I have no idea what what

404
00:16:15,259 --> 00:16:18,199
that domain really deals with it all we

405
00:16:16,790 --> 00:16:21,230
have twitch.tv which is their main

406
00:16:18,199 --> 00:16:23,839
domain we have twitchcon comm which is a

407
00:16:21,230 --> 00:16:26,240
domain probably for their conference and

408
00:16:23,839 --> 00:16:30,470
then Socialcam which I had no idea was

409
00:16:26,240 --> 00:16:33,920
related to twitch so now we have more

410
00:16:30,470 --> 00:16:40,819
seed data to add to you know our mind

411
00:16:33,920 --> 00:16:42,979
map so the next section of kind of wide

412
00:16:40,819 --> 00:16:45,649
scale recon is reverse who is and so

413
00:16:42,980 --> 00:16:46,819
there's a lot of reverse who is sites

414
00:16:45,649 --> 00:16:50,060
out there on the Internet the one I

415
00:16:46,819 --> 00:16:53,300
happen to use because it's cheap and has

416
00:16:50,060 --> 00:16:54,439
a database that you know I don't know

417
00:16:53,300 --> 00:16:58,000
I've just gotten used to I guess is

418
00:16:54,440 --> 00:17:02,060
called walk see and Hiwassee will

419
00:16:58,000 --> 00:17:04,569
basically let you search a domain twitch

420
00:17:02,060 --> 00:17:08,119
TV and you know you've probably all used

421
00:17:04,569 --> 00:17:11,059
reverse kind of or who is lookups before

422
00:17:08,119 --> 00:17:13,569
all it does here is it pulls up you know

423
00:17:11,059 --> 00:17:15,649
who has own twitch TV in the past for

424
00:17:13,569 --> 00:17:17,949
you know all of the years and here you

425
00:17:15,650 --> 00:17:20,240
can see that at one point the company

426
00:17:17,949 --> 00:17:23,720
name and the registration data was

427
00:17:20,240 --> 00:17:26,630
justin TV and the email addressed was

428
00:17:23,720 --> 00:17:29,659
domain master at justin TV and then now

429
00:17:26,630 --> 00:17:31,940
it's the owner is twitch host master and

430
00:17:29,659 --> 00:17:34,280
the company is indeed twitch Interactive

431
00:17:31,940 --> 00:17:35,480
Inc which we saw on the ASN and then the

432
00:17:34,280 --> 00:17:37,760
email addresses host master at

433
00:17:35,480 --> 00:17:41,390
amazon.com and then there's little

434
00:17:37,760 --> 00:17:44,120
sections right next to it that basically

435
00:17:41,390 --> 00:17:48,230
you can click on and find if you own an

436
00:17:44,120 --> 00:17:50,810
API key for for this you can click on

437
00:17:48,230 --> 00:17:53,720
and see all of the other

438
00:17:50,810 --> 00:17:56,919
domaine so you can see there's 575 for

439
00:17:53,720 --> 00:17:59,480
twitch interactive and 20 for justin.tv

440
00:17:56,920 --> 00:18:01,640
that other sites have used the same

441
00:17:59,480 --> 00:18:03,950
company name or or something like that

442
00:18:01,640 --> 00:18:05,750
and you can also drill down into the

443
00:18:03,950 --> 00:18:09,860
register email this is basically what

444
00:18:05,750 --> 00:18:12,740
reverse who is is now you can get a free

445
00:18:09,860 --> 00:18:15,530
API key with with waxey which gives you

446
00:18:12,740 --> 00:18:16,700
I think monthly free credits there's

447
00:18:15,530 --> 00:18:18,260
some places that you can find in the

448
00:18:16,700 --> 00:18:21,080
internet that do this for free but only

449
00:18:18,260 --> 00:18:22,640
give you back a subset of the data so

450
00:18:21,080 --> 00:18:25,760
you have to find your own flavor of

451
00:18:22,640 --> 00:18:28,160
reverse who is and this is like medium

452
00:18:25,760 --> 00:18:31,040
fidelity data I like to call it right so

453
00:18:28,160 --> 00:18:32,780
what this will include is you know site

454
00:18:31,040 --> 00:18:35,120
light which will obviously go out and

455
00:18:32,780 --> 00:18:36,170
Park a whole bunch of domains so just

456
00:18:35,120 --> 00:18:39,100
because something's registered under

457
00:18:36,170 --> 00:18:41,510
twitch Interactive Inc or justin.tv

458
00:18:39,100 --> 00:18:43,250
doesn't mean that it actually is an

459
00:18:41,510 --> 00:18:45,200
application or a web site it could just

460
00:18:43,250 --> 00:18:47,270
be parked and do and redirect somewhere

461
00:18:45,200 --> 00:18:49,510
else and may redirect to something

462
00:18:47,270 --> 00:18:52,460
that's out of scope so it's important to

463
00:18:49,510 --> 00:18:57,710
you know mark these butts verify them

464
00:18:52,460 --> 00:18:59,240
when you land someplace from them so

465
00:18:57,710 --> 00:19:01,550
there is a tool to kind of automate some

466
00:18:59,240 --> 00:19:03,410
of this I've used it before it's it's

467
00:19:01,550 --> 00:19:06,230
called dom link by Vincente you it still

468
00:19:03,410 --> 00:19:08,330
works for for me and the cool thing

469
00:19:06,230 --> 00:19:12,200
about dom link is that it will

470
00:19:08,330 --> 00:19:14,300
recursively go through all of the

471
00:19:12,200 --> 00:19:16,970
Hiwassee output so you give it your API

472
00:19:14,300 --> 00:19:20,780
key and then you give it your domain and

473
00:19:16,970 --> 00:19:22,580
it will go out and ask you if you want

474
00:19:20,780 --> 00:19:24,920
to find everything for these email

475
00:19:22,580 --> 00:19:27,169
addresses or this company and then it'll

476
00:19:24,920 --> 00:19:29,600
give you a file that says these are the

477
00:19:27,170 --> 00:19:32,930
domains I can find that are related so

478
00:19:29,600 --> 00:19:34,610
this is a pretty cool tool I've used it

479
00:19:32,930 --> 00:19:37,790
in different parts of my automation

480
00:19:34,610 --> 00:19:39,770
before I know that some people are

481
00:19:37,790 --> 00:19:42,980
saying it's pretty buggy I haven't had

482
00:19:39,770 --> 00:19:46,430
any you know problems with it recently

483
00:19:42,980 --> 00:19:47,900
so yeah I think Dom leak is pretty cool

484
00:19:46,430 --> 00:19:50,230
the one feature it has is that it's

485
00:19:47,900 --> 00:19:53,840
recursive in looking up all the sites so

486
00:19:50,230 --> 00:19:55,490
you know an API will give you I can give

487
00:19:53,840 --> 00:19:56,990
you a list of everything off of one of

488
00:19:55,490 --> 00:19:58,850
the sites but this one will visit the

489
00:19:56,990 --> 00:20:01,010
Associated sites and also look at their

490
00:19:58,850 --> 00:20:02,730
organization names and if they're

491
00:20:01,010 --> 00:20:05,580
different ask you if you want to

492
00:20:02,730 --> 00:20:07,140
those and so the recursion here is is

493
00:20:05,580 --> 00:20:08,790
good because it'll just keep going until

494
00:20:07,140 --> 00:20:10,620
it doesn't find any records that it

495
00:20:08,790 --> 00:20:15,570
thinks are related to what you're

496
00:20:10,620 --> 00:20:19,280
looking for so another piece of analysis

497
00:20:15,570 --> 00:20:21,480
I do is on add analytics trackers so I

498
00:20:19,280 --> 00:20:23,910
use built with for this I think it's

499
00:20:21,480 --> 00:20:27,270
really the only one that the only thing

500
00:20:23,910 --> 00:20:29,010
that does this that keeps this kind of

501
00:20:27,270 --> 00:20:31,620
data but built with but with as a site

502
00:20:29,010 --> 00:20:34,260
that basically does technology profiling

503
00:20:31,620 --> 00:20:36,840
and tracking of sites all across the

504
00:20:34,260 --> 00:20:39,770
internet and so you can log in and

505
00:20:36,840 --> 00:20:43,799
create an account on built with comm and

506
00:20:39,770 --> 00:20:47,309
enter in a domain and here I've

507
00:20:43,799 --> 00:20:48,540
interested on TV and it will give you a

508
00:20:47,309 --> 00:20:50,100
whole bunch of tabs it'll give you the

509
00:20:48,540 --> 00:20:52,830
technology profile which we use way

510
00:20:50,100 --> 00:20:53,850
later on in the pro and the process but

511
00:20:52,830 --> 00:20:55,799
it'll also give you this tab called

512
00:20:53,850 --> 00:20:59,250
relationship profile and inside of the

513
00:20:55,799 --> 00:21:01,679
relationship profile is all is a listing

514
00:20:59,250 --> 00:21:03,870
of all of the add an analytics tracker

515
00:21:01,679 --> 00:21:06,840
codes at twitch.tv uses so there are

516
00:21:03,870 --> 00:21:09,330
Google Analytics code New Relic all

517
00:21:06,840 --> 00:21:12,780
kinds of different ad Analytics codes

518
00:21:09,330 --> 00:21:17,070
and so you can look at this table and

519
00:21:12,780 --> 00:21:19,410
immediately it has relationships of the

520
00:21:17,070 --> 00:21:21,600
analytics code so it it's hard to see on

521
00:21:19,410 --> 00:21:24,210
the bottom there but some of the sites

522
00:21:21,600 --> 00:21:27,870
some of these sites use the same at

523
00:21:24,210 --> 00:21:30,510
Analytics codes as twitch TV and so they

524
00:21:27,870 --> 00:21:32,729
could be potentially related to twitch

525
00:21:30,510 --> 00:21:34,620
TV and could expand our scope so for

526
00:21:32,730 --> 00:21:37,590
instance you know some of the bigger

527
00:21:34,620 --> 00:21:40,649
streamers get custom domains that are

528
00:21:37,590 --> 00:21:42,870
owned by twitch or you know or there

529
00:21:40,650 --> 00:21:44,280
might be like some you know top-level

530
00:21:42,870 --> 00:21:46,379
seed domain that we didn't know about

531
00:21:44,280 --> 00:21:48,450
but is using the same you know codes and

532
00:21:46,380 --> 00:21:51,419
so you know you can see if you look down

533
00:21:48,450 --> 00:21:53,910
there it's hard to see but you can see

534
00:21:51,419 --> 00:21:57,299
man versus game got TV I'm not sure if

535
00:21:53,910 --> 00:22:00,990
that's produced by twitch or not I'd

536
00:21:57,299 --> 00:22:05,280
have to take a look at into it but t TW

537
00:22:00,990 --> 00:22:06,720
TC TV is is I think twitch and so

538
00:22:05,280 --> 00:22:10,740
there's a whole bunch of related domain

539
00:22:06,720 --> 00:22:12,480
information here so yeah a lot of stuff

540
00:22:10,740 --> 00:22:14,940
to parser here you might be able to find

541
00:22:12,480 --> 00:22:16,320
some new seed domains in these

542
00:22:14,940 --> 00:22:17,970
relationships

543
00:22:16,320 --> 00:22:19,889
there's also a Chrome extension that can

544
00:22:17,970 --> 00:22:22,950
give you this information from built

545
00:22:19,890 --> 00:22:30,690
with that you can put into Firefox or

546
00:22:22,950 --> 00:22:33,990
Chrome so yeah pretty good so the other

547
00:22:30,690 --> 00:22:37,740
things that I like to do that find me

548
00:22:33,990 --> 00:22:39,810
top-level domains and this one is

549
00:22:37,740 --> 00:22:41,850
actually not specifically targeting

550
00:22:39,810 --> 00:22:43,850
top-level domains but just things with

551
00:22:41,850 --> 00:22:46,620
the keyword twitch in the URL is

552
00:22:43,850 --> 00:22:49,139
googling the privacy policy Terms of

553
00:22:46,620 --> 00:22:51,000
Service and copyright text of the main

554
00:22:49,140 --> 00:22:53,430
page so I would go to twitch comm and at

555
00:22:51,000 --> 00:22:56,450
the bottom there is you know copyright

556
00:22:53,430 --> 00:22:58,740
2019 or 2020 twitch interactive and

557
00:22:56,450 --> 00:23:00,660
Twitter Interactive Inc and so you put

558
00:22:58,740 --> 00:23:03,360
that into quotes into Google and then I

559
00:23:00,660 --> 00:23:06,210
also added an in URL tag that just says

560
00:23:03,360 --> 00:23:10,199
twitch and I start to get back you know

561
00:23:06,210 --> 00:23:12,480
subdomains mobile app that you know

562
00:23:10,200 --> 00:23:13,890
obviously they have and you know if I

563
00:23:12,480 --> 00:23:16,410
scroll down into these results I can

564
00:23:13,890 --> 00:23:20,100
possibly get I can possibly get more

565
00:23:16,410 --> 00:23:26,220
seed demand so I'll use this on on the

566
00:23:20,100 --> 00:23:28,740
site to try to glean more stuff next we

567
00:23:26,220 --> 00:23:30,450
have show Don and show Don is a tool

568
00:23:28,740 --> 00:23:32,910
that's like an infrastructure spider on

569
00:23:30,450 --> 00:23:35,160
the internet goes out and finds domains

570
00:23:32,910 --> 00:23:37,140
and infrastructure and basically

571
00:23:35,160 --> 00:23:39,150
resolves them and caches the response

572
00:23:37,140 --> 00:23:41,730
and the header so it's much more

573
00:23:39,150 --> 00:23:43,740
powerful than a regular web spider it

574
00:23:41,730 --> 00:23:45,360
catches cert data and it does some stack

575
00:23:43,740 --> 00:23:47,070
profiling and then it puts it in this

576
00:23:45,360 --> 00:23:49,500
giant database and it's always scanning

577
00:23:47,070 --> 00:23:52,800
and so a lot of hackers have use show

578
00:23:49,500 --> 00:23:54,990
Don to find a lot of IOT stuff that's

579
00:23:52,800 --> 00:23:57,690
been left out on the internet and you

580
00:23:54,990 --> 00:23:59,400
know unsecured and it's a really cool

581
00:23:57,690 --> 00:24:01,910
tool showed it's awesome and so every

582
00:23:59,400 --> 00:24:05,570
once in a while they have a great sale

583
00:24:01,910 --> 00:24:08,420
on keys for show done you can go grab a

584
00:24:05,570 --> 00:24:12,260
showdown API key for pretty much nothing

585
00:24:08,420 --> 00:24:15,870
now here I've searched twitch TV and

586
00:24:12,260 --> 00:24:18,240
I've gotten back some results on sites

587
00:24:15,870 --> 00:24:21,169
it thinks are related based off of

588
00:24:18,240 --> 00:24:25,380
probably the keyword twitch or the fully

589
00:24:21,170 --> 00:24:28,200
qualified root domain twitch.tv so I can

590
00:24:25,380 --> 00:24:29,910
see that twitch that the top result is

591
00:24:28,200 --> 00:24:31,830
twitch calm and

592
00:24:29,910 --> 00:24:33,600
it gives me some information that I kind

593
00:24:31,830 --> 00:24:35,370
of already know about right that you

594
00:24:33,600 --> 00:24:37,110
know domain is switch comm it has a

595
00:24:35,370 --> 00:24:39,989
pretty standard IP address inside of

596
00:24:37,110 --> 00:24:43,949
their IP range but down at the bottom I

597
00:24:39,990 --> 00:24:46,770
see a result coming back from Turkey and

598
00:24:43,950 --> 00:24:48,030
I don't exactly know what they're

599
00:24:46,770 --> 00:24:50,220
actually no this one's from Ireland

600
00:24:48,030 --> 00:24:52,470
Dublin at the bottom and in the common

601
00:24:50,220 --> 00:24:54,260
name of the certificate I can see that

602
00:24:52,470 --> 00:24:57,570
there's a common name that says twitch

603
00:24:54,260 --> 00:24:59,160
Amazon eat you and so showed I can

604
00:24:57,570 --> 00:25:01,169
really bring you some interesting stuff

605
00:24:59,160 --> 00:25:04,860
to ask some questions right is twitch

606
00:25:01,170 --> 00:25:06,450
Amazon you you know is that something

607
00:25:04,860 --> 00:25:07,919
that you know could be considered in

608
00:25:06,450 --> 00:25:09,780
scope I wouldn't think so because it has

609
00:25:07,920 --> 00:25:11,160
an amen' on Amazon domain but it maybe

610
00:25:09,780 --> 00:25:12,540
it's part of twitches infrastructure

611
00:25:11,160 --> 00:25:14,940
because they're owned by Amazon so

612
00:25:12,540 --> 00:25:16,530
something I'd have to test right when

613
00:25:14,940 --> 00:25:18,300
you go further down into these results

614
00:25:16,530 --> 00:25:20,520
when I did this last time for twitch

615
00:25:18,300 --> 00:25:22,560
there's some headers that you get

616
00:25:20,520 --> 00:25:23,639
alerted to that you know twitch is using

617
00:25:22,560 --> 00:25:24,810
and I you know I wanted to know what

618
00:25:23,640 --> 00:25:26,690
those headers are for it so it'll start

619
00:25:24,810 --> 00:25:30,290
to prompt interesting questions around

620
00:25:26,690 --> 00:25:30,290
infrastructure and things like that

621
00:25:32,810 --> 00:25:36,960
alright so now that we've found a whole

622
00:25:35,430 --> 00:25:39,450
bunch of seed domains and related

623
00:25:36,960 --> 00:25:40,500
information about our target in this

624
00:25:39,450 --> 00:25:42,690
case most of the examples have been

625
00:25:40,500 --> 00:25:44,450
twitch or Tesla we're gonna move on to

626
00:25:42,690 --> 00:25:47,490
enumerate abdominus

627
00:25:44,450 --> 00:25:50,670
routes or seeds and this is a big part

628
00:25:47,490 --> 00:25:52,650
of our analysis our analysis on

629
00:25:50,670 --> 00:25:53,940
subdomain enumeration will use many

630
00:25:52,650 --> 00:25:54,870
different tools and many different

631
00:25:53,940 --> 00:26:02,730
techniques that we're going to walk

632
00:25:54,870 --> 00:26:05,699
through in and some of this so for some

633
00:26:02,730 --> 00:26:07,380
timing enumeration really we have we

634
00:26:05,700 --> 00:26:09,270
have a couple different types and so the

635
00:26:07,380 --> 00:26:11,910
first type of subdomain enumeration that

636
00:26:09,270 --> 00:26:14,550
will do is linked in JavaScript

637
00:26:11,910 --> 00:26:17,430
discovery and then we'll do some

638
00:26:14,550 --> 00:26:21,300
subdomain scraping and then we'll do

639
00:26:17,430 --> 00:26:23,100
subdomain brute-forcing and there are

640
00:26:21,300 --> 00:26:24,680
some exhilarate kind of things which I

641
00:26:23,100 --> 00:26:27,810
just have the plus plus box down there

642
00:26:24,680 --> 00:26:29,220
that we can do to enumerate more

643
00:26:27,810 --> 00:26:30,810
subdomains that don't really fit into

644
00:26:29,220 --> 00:26:34,370
either in these boxes or any of these

645
00:26:30,810 --> 00:26:36,840
boxes but we'll talk about those as well

646
00:26:34,370 --> 00:26:39,800
so the first part is linked in

647
00:26:36,840 --> 00:26:39,800
JavaScript discovery

648
00:26:40,140 --> 00:26:46,870
so link discovery this was the first

649
00:26:44,800 --> 00:26:50,830
workflow and still a workflow I use a

650
00:26:46,870 --> 00:26:53,800
lot of the time to find linked assets or

651
00:26:50,830 --> 00:26:55,570
links inside of a site I use burp suite

652
00:26:53,800 --> 00:26:57,040
pro or I used to use burp suite fo and

653
00:26:55,570 --> 00:26:58,300
now there's some other ways to do this

654
00:26:57,040 --> 00:27:01,420
which I'll show in the next couple

655
00:26:58,300 --> 00:27:03,330
slides as well but basically the steps

656
00:27:01,420 --> 00:27:06,880
for doing link discovery with burp suite

657
00:27:03,330 --> 00:27:09,730
is what we're trying to do is visit a

658
00:27:06,880 --> 00:27:11,320
seed or route and look at all the links

659
00:27:09,730 --> 00:27:13,780
on the page that are contained within

660
00:27:11,320 --> 00:27:16,419
the HTML source and the JavaScript and

661
00:27:13,780 --> 00:27:20,440
examine those links and that'll happen

662
00:27:16,420 --> 00:27:22,240
in burp suite so you can just visit you

663
00:27:20,440 --> 00:27:24,340
know a site and burp suite will fill up

664
00:27:22,240 --> 00:27:27,570
with everything it sees that's linked on

665
00:27:24,340 --> 00:27:31,629
that site and then we can do some fancy

666
00:27:27,570 --> 00:27:34,659
filters and and spidering to recursively

667
00:27:31,630 --> 00:27:37,240
find even more assets that are related

668
00:27:34,660 --> 00:27:39,760
so this is a hybrid technique so this

669
00:27:37,240 --> 00:27:43,390
technique will find both route seeds and

670
00:27:39,760 --> 00:27:44,620
subdomains in in its output and the base

671
00:27:43,390 --> 00:27:46,060
basic thing we're gonna do here which

672
00:27:44,620 --> 00:27:49,330
we're gonna show is we're gonna turn off

673
00:27:46,060 --> 00:27:51,190
passive scanning and burp you can set

674
00:27:49,330 --> 00:27:52,540
forms to auto submit or sense them not

675
00:27:51,190 --> 00:27:54,250
to auto submit it just depends on what

676
00:27:52,540 --> 00:27:55,750
you want to do a little bit more

677
00:27:54,250 --> 00:27:59,260
dangerous to have them set to auto

678
00:27:55,750 --> 00:28:01,180
submit set your advanced scope control

679
00:27:59,260 --> 00:28:04,450
which we're gonna show a picture of and

680
00:28:01,180 --> 00:28:06,220
a keyword of your target name and it's

681
00:28:04,450 --> 00:28:07,270
important here is it's not we're not

682
00:28:06,220 --> 00:28:09,100
going to use a fully qualified domain

683
00:28:07,270 --> 00:28:11,170
name we're just gonna use a keyword and

684
00:28:09,100 --> 00:28:13,330
then we're gonna walk the main site and

685
00:28:11,170 --> 00:28:15,640
spider it and then we're gonna spider

686
00:28:13,330 --> 00:28:16,780
all the hosts that come out from our

687
00:28:15,640 --> 00:28:19,510
filtered view and we're gonna do that

688
00:28:16,780 --> 00:28:22,270
recursively until we have a big list of

689
00:28:19,510 --> 00:28:24,610
things so here on the left hand side of

690
00:28:22,270 --> 00:28:26,860
the screen shot is just one visit to

691
00:28:24,610 --> 00:28:28,629
twitch TV right just the main page of

692
00:28:26,860 --> 00:28:29,949
twitch.tv and it's going to burp and

693
00:28:28,630 --> 00:28:32,500
here on the right hand side you can see

694
00:28:29,950 --> 00:28:33,940
that the site tree in burp or the

695
00:28:32,500 --> 00:28:36,790
sitemap and burp has filled up with

696
00:28:33,940 --> 00:28:38,230
every link it sees that's embedded on

697
00:28:36,790 --> 00:28:39,940
that main page which is a lot right

698
00:28:38,230 --> 00:28:42,700
which has a lot of functionality going

699
00:28:39,940 --> 00:28:43,840
on so you can see you know a lot of this

700
00:28:42,700 --> 00:28:45,130
we don't care about right well we're

701
00:28:43,840 --> 00:28:50,020
trying to find out his assets that are

702
00:28:45,130 --> 00:28:51,430
related to twitch so this is it's good

703
00:28:50,020 --> 00:28:53,070
to have all this data but we need to

704
00:28:51,430 --> 00:28:55,840
filter it down a little bit

705
00:28:53,070 --> 00:28:59,169
so next we're gonna go into our target

706
00:28:55,840 --> 00:29:01,270
tab in our scope tab and we will click

707
00:28:59,170 --> 00:29:04,150
the box that says use advanced scope

708
00:29:01,270 --> 00:29:07,750
control and then we're gonna add a scoop

709
00:29:04,150 --> 00:29:09,310
role and in where it says host our IP

710
00:29:07,750 --> 00:29:11,860
range we're just gonna put a keyword in

711
00:29:09,310 --> 00:29:13,360
there which is twitch and this is why we

712
00:29:11,860 --> 00:29:14,620
need to use advanced scope control

713
00:29:13,360 --> 00:29:17,379
because this allows us to use a keyword

714
00:29:14,620 --> 00:29:19,510
here now we're gonna say okay and then

715
00:29:17,380 --> 00:29:22,570
we go back into our sitemap and we click

716
00:29:19,510 --> 00:29:24,550
the ribbon bar where we normally would

717
00:29:22,570 --> 00:29:26,860
say show only in scope items and we'll

718
00:29:24,550 --> 00:29:28,270
check the show only in scope items so

719
00:29:26,860 --> 00:29:30,490
now what this will do is it'll take that

720
00:29:28,270 --> 00:29:31,960
giant site map that we have with all the

721
00:29:30,490 --> 00:29:35,410
stuff we don't care about it and it'll

722
00:29:31,960 --> 00:29:39,580
only show stuff to us where it sees that

723
00:29:35,410 --> 00:29:41,110
the word twitch is in the URL and so

724
00:29:39,580 --> 00:29:42,850
this is what we get right so this is a

725
00:29:41,110 --> 00:29:44,830
this is pretty good just from visiting

726
00:29:42,850 --> 00:29:48,159
the first page of twitch we can see we

727
00:29:44,830 --> 00:29:51,310
have a P I got twitch app blog client

728
00:29:48,160 --> 00:29:53,860
event reporter clips etc etc etc and

729
00:29:51,310 --> 00:29:56,040
this is expanding our domain pretty well

730
00:29:53,860 --> 00:29:59,740
write anything that has twitch in thee

731
00:29:56,040 --> 00:30:01,450
and the URL is showing here now what

732
00:29:59,740 --> 00:30:04,330
we're gonna do is we're going to select

733
00:30:01,450 --> 00:30:06,910
all of these with a ctrl a and we're

734
00:30:04,330 --> 00:30:08,679
gonna spider these and so that'll send

735
00:30:06,910 --> 00:30:10,990
the spider out to visit each one of

736
00:30:08,680 --> 00:30:13,990
these and to look at their home pages

737
00:30:10,990 --> 00:30:16,690
and find if anything returns it has

738
00:30:13,990 --> 00:30:20,320
twitch in the URL as well so you can see

739
00:30:16,690 --> 00:30:24,250
that doing something like this the

740
00:30:20,320 --> 00:30:26,590
selected ones that we had were in in

741
00:30:24,250 --> 00:30:27,790
this orange color and the white ones are

742
00:30:26,590 --> 00:30:29,350
new things that we found from our

743
00:30:27,790 --> 00:30:31,060
spidering and we've only been doing in

744
00:30:29,350 --> 00:30:33,580
this example I had only been doing it

745
00:30:31,060 --> 00:30:36,190
for a couple minutes so you can see here

746
00:30:33,580 --> 00:30:39,370
we found a ton of new domains from

747
00:30:36,190 --> 00:30:41,380
spidering everything and this is the

748
00:30:39,370 --> 00:30:42,669
first set of spidering and you can do

749
00:30:41,380 --> 00:30:44,410
this over and over and over again and

750
00:30:42,670 --> 00:30:45,640
here you can already see that we've

751
00:30:44,410 --> 00:30:47,380
already found some new routes in this

752
00:30:45,640 --> 00:30:52,840
data right so before we didn't know

753
00:30:47,380 --> 00:30:56,400
about TW t CH a PP dotnet twitch the

754
00:30:52,840 --> 00:30:59,169
shortening of twitch app ext - twitch TV

755
00:30:56,400 --> 00:31:00,730
twitch SVC that net so we've already

756
00:30:59,170 --> 00:31:02,350
started to find some more routes we

757
00:31:00,730 --> 00:31:05,140
found a whole bunch of subdomains in

758
00:31:02,350 --> 00:31:06,550
here we know these sites are live when

759
00:31:05,140 --> 00:31:09,910
they turn black and burp is

760
00:31:06,550 --> 00:31:12,879
actually managed to visit them and not

761
00:31:09,910 --> 00:31:15,820
just observe them in HTML source so yeah

762
00:31:12,880 --> 00:31:17,470
there's a ton here and and this is the

763
00:31:15,820 --> 00:31:19,870
next iteration of this you would select

764
00:31:17,470 --> 00:31:23,290
all of these again and then spider again

765
00:31:19,870 --> 00:31:25,449
until you got no more results now this

766
00:31:23,290 --> 00:31:27,639
used to be the way I did it throughout

767
00:31:25,450 --> 00:31:31,360
my whole pen testing career it was you

768
00:31:27,640 --> 00:31:33,460
know in a pretty normal process but

769
00:31:31,360 --> 00:31:35,080
there are some other ways to do it the

770
00:31:33,460 --> 00:31:36,490
problem that comes with using burp suite

771
00:31:35,080 --> 00:31:38,379
pro to do this is like how do you get

772
00:31:36,490 --> 00:31:42,190
this data back out into other tool sets

773
00:31:38,380 --> 00:31:43,900
and it's it's very clumsy so you have to

774
00:31:42,190 --> 00:31:46,420
have Bert swore you have to have burp

775
00:31:43,900 --> 00:31:47,320
suite pro and you select everything once

776
00:31:46,420 --> 00:31:50,380
you're done with your recursive

777
00:31:47,320 --> 00:31:52,840
spidering and you click on engagement

778
00:31:50,380 --> 00:31:56,170
tools and analyze target and then you

779
00:31:52,840 --> 00:31:58,240
export the analyze target PDF to your

780
00:31:56,170 --> 00:32:00,460
desktop and then it gives you an HTML

781
00:31:58,240 --> 00:32:04,330
report which you can either parse or you

782
00:32:00,460 --> 00:32:07,000
can just open the report and drag and

783
00:32:04,330 --> 00:32:08,439
select all of the targets in there and

784
00:32:07,000 --> 00:32:13,210
the targets are all of the domains

785
00:32:08,440 --> 00:32:15,490
basically so yeah pretty clumsy to get

786
00:32:13,210 --> 00:32:17,830
the data out of here so we would want to

787
00:32:15,490 --> 00:32:19,830
maybe see if we can do this you know in

788
00:32:17,830 --> 00:32:22,899
an automated fashion on the command line

789
00:32:19,830 --> 00:32:24,610
luckily there's two tools which I think

790
00:32:22,900 --> 00:32:26,140
are awesome and if you think about what

791
00:32:24,610 --> 00:32:27,669
is this is doing and what we need to do

792
00:32:26,140 --> 00:32:31,660
this we really just need a spider that

793
00:32:27,670 --> 00:32:35,440
can recursively land on things and then

794
00:32:31,660 --> 00:32:37,450
parse out links from them right and then

795
00:32:35,440 --> 00:32:39,940
from there if we see a whole bunch of

796
00:32:37,450 --> 00:32:41,980
links or subdomains or things like that

797
00:32:39,940 --> 00:32:43,360
we can we could probably use bash to

798
00:32:41,980 --> 00:32:45,970
pare down what we wanted from that

799
00:32:43,360 --> 00:32:48,100
information so in link discovery you can

800
00:32:45,970 --> 00:32:49,570
also use you know two tools that I

801
00:32:48,100 --> 00:32:54,040
really like right now which one is

802
00:32:49,570 --> 00:32:58,389
called go spider by Jessie JJJ and it's

803
00:32:54,040 --> 00:33:00,250
just a generally well rounded spider it

804
00:32:58,390 --> 00:33:01,960
can do a lot of stuff and here you can

805
00:33:00,250 --> 00:33:04,060
see it it's the left kind of grayscale

806
00:33:01,960 --> 00:33:06,700
image here and it'll separate out

807
00:33:04,060 --> 00:33:09,370
everything so I can run go spider to

808
00:33:06,700 --> 00:33:11,830
twitch.tv and you can see it parses the

809
00:33:09,370 --> 00:33:15,310
robots.txt it starts parsing out

810
00:33:11,830 --> 00:33:18,159
subdomains it'll give me verbatim URLs

811
00:33:15,310 --> 00:33:19,290
and endpoints it will give me JavaScript

812
00:33:18,160 --> 00:33:22,410
files and there

813
00:33:19,290 --> 00:33:24,629
nicely notated yes and it'll give me

814
00:33:22,410 --> 00:33:26,820
status codes for URLs that it does visit

815
00:33:24,630 --> 00:33:28,410
so it will give you back a lot of stuff

816
00:33:26,820 --> 00:33:30,240
and then you can parse you know using

817
00:33:28,410 --> 00:33:33,920
regex or grapper whatever you want to do

818
00:33:30,240 --> 00:33:36,960
and start pulling this stuff out now

819
00:33:33,920 --> 00:33:38,250
what you what you want to do what you

820
00:33:36,960 --> 00:33:40,020
need to do here is you need to add that

821
00:33:38,250 --> 00:33:41,850
recursion and so you'd need to code the

822
00:33:40,020 --> 00:33:43,730
you know recursion yourself and

823
00:33:41,850 --> 00:33:47,219
something like goes by there I believe

824
00:33:43,730 --> 00:33:49,740
now another one is hack crawler by hack

825
00:33:47,220 --> 00:33:51,660
Luke and hack Luke is awesome and I

826
00:33:49,740 --> 00:33:53,550
think he'll probably be around today

827
00:33:51,660 --> 00:33:56,520
maybe I'm not sure the time zones weird

828
00:33:53,550 --> 00:33:58,919
but hack crawler is also another crawler

829
00:33:56,520 --> 00:34:02,160
that does you know similar things but

830
00:33:58,920 --> 00:34:04,110
has a lot more strategies in the parsing

831
00:34:02,160 --> 00:34:06,780
that are interesting to bug hunters and

832
00:34:04,110 --> 00:34:07,919
I believe it has recursion so these are

833
00:34:06,780 --> 00:34:11,130
two things where you could implement

834
00:34:07,920 --> 00:34:13,679
this link discovery process on your own

835
00:34:11,130 --> 00:34:15,270
on the command line and so I try to give

836
00:34:13,679 --> 00:34:17,220
a lot of options there for people who

837
00:34:15,270 --> 00:34:18,989
are manual and tactical you want to do

838
00:34:17,219 --> 00:34:20,580
it manually or people who want to work

839
00:34:18,989 --> 00:34:23,129
on the command line and script all this

840
00:34:20,580 --> 00:34:25,350
together into a giant recon framework

841
00:34:23,130 --> 00:34:26,730
you have a lot of options here and these

842
00:34:25,350 --> 00:34:30,000
are the two most stable ones I've seen

843
00:34:26,730 --> 00:34:35,880
with kind of command line spiders so far

844
00:34:30,000 --> 00:34:40,168
so these are awesome another one to find

845
00:34:35,880 --> 00:34:42,560
subdomains is is this tool called

846
00:34:40,168 --> 00:34:45,779
subdomain Iser that I've used before by

847
00:34:42,560 --> 00:34:47,130
niraj Edwards and I really like this one

848
00:34:45,780 --> 00:34:49,169
because it has kind of a special feature

849
00:34:47,130 --> 00:34:51,270
which I really appreciate and I think is

850
00:34:49,168 --> 00:34:52,409
kind of forward thinking and a lot some

851
00:34:51,270 --> 00:34:55,350
other tools are starting to do it now

852
00:34:52,409 --> 00:34:59,399
but it was the first one I saw do it and

853
00:34:55,350 --> 00:35:03,390
so subdomain subdomain Iser basically

854
00:34:59,400 --> 00:35:05,130
will you give it a a URL and it will go

855
00:35:03,390 --> 00:35:07,319
there and will find all JavaScript files

856
00:35:05,130 --> 00:35:09,630
referenced on that URL and then it will

857
00:35:07,320 --> 00:35:12,150
visit them and will start parsing out

858
00:35:09,630 --> 00:35:14,370
subdomains which is great it has some

859
00:35:12,150 --> 00:35:16,500
good parsing logic for getting

860
00:35:14,370 --> 00:35:20,430
subdomains out of JavaScript files it'll

861
00:35:16,500 --> 00:35:22,290
also separate out cloud services that

862
00:35:20,430 --> 00:35:24,029
the site might be using so on the right

863
00:35:22,290 --> 00:35:27,150
hand side you can see that you note

864
00:35:24,030 --> 00:35:30,570
which uses cloud front and then it also

865
00:35:27,150 --> 00:35:34,020
has a feature to detect what it thinks

866
00:35:30,570 --> 00:35:35,579
are maybe API keys or

867
00:35:34,020 --> 00:35:37,740
anything that's leaked that kind of

868
00:35:35,579 --> 00:35:40,410
looks like a key of some sort and it

869
00:35:37,740 --> 00:35:42,509
uses the Shannon entropy formula to find

870
00:35:40,410 --> 00:35:44,788
these potentially sensitive items and

871
00:35:42,510 --> 00:35:47,010
all the JavaScript files it goes to so

872
00:35:44,789 --> 00:35:50,250
here you can see in the left-hand side

873
00:35:47,010 --> 00:35:53,339
two keys that showed up that I could go

874
00:35:50,250 --> 00:35:54,809
back in my burp traffic or back in the

875
00:35:53,339 --> 00:35:56,670
crawler traffic and try to find out

876
00:35:54,809 --> 00:35:58,200
where these came from and to see if

877
00:35:56,670 --> 00:35:59,940
they're sensitive keys hard-coded in

878
00:35:58,200 --> 00:36:01,710
JavaScript which is you know a pretty

879
00:35:59,940 --> 00:36:05,039
common finding sometimes in bug bounty

880
00:36:01,710 --> 00:36:07,079
programs unfortunately if you're just

881
00:36:05,039 --> 00:36:08,970
looking for subdomains and you're not

882
00:36:07,079 --> 00:36:11,460
looking for this algorithm or this

883
00:36:08,970 --> 00:36:14,490
formula the Shannon entropy thing to

884
00:36:11,460 --> 00:36:19,200
find Keys there is another tool called

885
00:36:14,490 --> 00:36:20,520
some scraper by Cillian Collins that

886
00:36:19,200 --> 00:36:22,109
might be better because it supports

887
00:36:20,520 --> 00:36:24,450
recursion so not only will it take the

888
00:36:22,109 --> 00:36:26,069
first page that you visit and grab all

889
00:36:24,450 --> 00:36:29,368
the JavaScript files from there but

890
00:36:26,069 --> 00:36:32,069
it'll take subsequent pages and scan

891
00:36:29,369 --> 00:36:34,680
it'll kind of do like a light spider and

892
00:36:32,069 --> 00:36:38,160
scan those and and find domains from

893
00:36:34,680 --> 00:36:40,470
from those pages but again it doesn't

894
00:36:38,160 --> 00:36:48,230
have the the key finding that subdomain

895
00:36:40,470 --> 00:36:51,808
Iser has so now we've done you know some

896
00:36:48,230 --> 00:36:53,400
analysis of JavaScript we've done leak

897
00:36:51,809 --> 00:36:54,960
to discovery and basically pulled

898
00:36:53,400 --> 00:36:56,400
everything out of the HTML source that

899
00:36:54,960 --> 00:36:57,539
we could find and we've found a whole

900
00:36:56,400 --> 00:36:59,309
bunch of subdomains and maybe some

901
00:36:57,539 --> 00:37:01,500
potential new routes and we can feed

902
00:36:59,309 --> 00:37:03,569
those routes back into the subdomain

903
00:37:01,500 --> 00:37:06,630
enumeration process and remember this is

904
00:37:03,569 --> 00:37:08,549
an iterative thing so you can you'll end

905
00:37:06,630 --> 00:37:10,289
up going forward and then taking some

906
00:37:08,549 --> 00:37:11,670
new information and starting getting the

907
00:37:10,289 --> 00:37:14,670
Recon flow which makes it you know

908
00:37:11,670 --> 00:37:16,589
somewhat hard to sometimes script and

909
00:37:14,670 --> 00:37:17,549
build a toolset out of but a lot of

910
00:37:16,589 --> 00:37:20,609
people are getting there which will

911
00:37:17,549 --> 00:37:23,700
we'll talk about later so subdomain

912
00:37:20,609 --> 00:37:27,000
scraping is the next iteration of tools

913
00:37:23,700 --> 00:37:29,520
that we're going to use to find more

914
00:37:27,000 --> 00:37:31,500
assets or more subdomains and remember

915
00:37:29,520 --> 00:37:34,049
the more we find the more we have to

916
00:37:31,500 --> 00:37:38,660
look at the more chance we you know we

917
00:37:34,049 --> 00:37:41,670
have to find a bounty right so subdomain

918
00:37:38,660 --> 00:37:42,960
scraping sources are the crux of ganda

919
00:37:41,670 --> 00:37:44,819
the next two tools we're going to talk

920
00:37:42,960 --> 00:37:46,840
about and there's all kinds of sources

921
00:37:44,819 --> 00:37:48,310
out there on the Internet right so

922
00:37:46,840 --> 00:37:53,350
there's like a whole bunch of sites like

923
00:37:48,310 --> 00:37:56,470
net craft and Rob tax and DNS DB and DNS

924
00:37:53,350 --> 00:38:00,310
dumpster which are basically websites

925
00:37:56,470 --> 00:38:03,459
that house databases of URLs or domain

926
00:38:00,310 --> 00:38:05,730
information and it's for IT purposes

927
00:38:03,460 --> 00:38:08,170
it's not really for hackers or you know

928
00:38:05,730 --> 00:38:09,340
you know the Wayback Machine and then

929
00:38:08,170 --> 00:38:11,680
there's there's other types of sources

930
00:38:09,340 --> 00:38:14,560
too there's search engines we we know

931
00:38:11,680 --> 00:38:16,060
Google and Yahoo by Baidu being asked

932
00:38:14,560 --> 00:38:18,340
you know these are all search engines

933
00:38:16,060 --> 00:38:19,810
that people use and they also have

934
00:38:18,340 --> 00:38:21,490
datasets that they're holding that we

935
00:38:19,810 --> 00:38:24,009
could ask if they know about subdomains

936
00:38:21,490 --> 00:38:25,810
related to twitch and then we have like

937
00:38:24,010 --> 00:38:29,560
these certificate projects like serratus

938
00:38:25,810 --> 00:38:32,170
H and certs Potter and cert DB and then

939
00:38:29,560 --> 00:38:33,759
we have like security sites like hacker

940
00:38:32,170 --> 00:38:35,080
target and security trails and

941
00:38:33,760 --> 00:38:36,640
virustotal and these things are all

942
00:38:35,080 --> 00:38:39,040
doing projects related around security

943
00:38:36,640 --> 00:38:40,569
but in the end they have a lot of URL or

944
00:38:39,040 --> 00:38:42,580
domain information in these sites and

945
00:38:40,570 --> 00:38:45,280
they have searches that we can do to

946
00:38:42,580 --> 00:38:46,960
look up our domain so we might not be

947
00:38:45,280 --> 00:38:48,400
using these sites for exactly what

948
00:38:46,960 --> 00:38:49,900
they're meant to be used for but we're

949
00:38:48,400 --> 00:38:52,330
going to take advantage of all of these

950
00:38:49,900 --> 00:38:55,690
sources to try to find subdomains based

951
00:38:52,330 --> 00:38:58,240
on in this case twitch.tv so there's new

952
00:38:55,690 --> 00:39:00,340
sources coming out all the time right

953
00:38:58,240 --> 00:39:03,819
this is not an exhaustive list this is

954
00:39:00,340 --> 00:39:05,470
actually a very small listing of sources

955
00:39:03,820 --> 00:39:08,680
and some of the ones we're going to talk

956
00:39:05,470 --> 00:39:11,319
about aren't even in some of these boxes

957
00:39:08,680 --> 00:39:13,899
here and I'll talk about the tools and

958
00:39:11,320 --> 00:39:15,520
and stuff that parse out these sites or

959
00:39:13,900 --> 00:39:18,640
that visit these sites and parse out our

960
00:39:15,520 --> 00:39:20,710
domains that we want our subdomains so

961
00:39:18,640 --> 00:39:23,080
this is just an example of using Google

962
00:39:20,710 --> 00:39:24,880
for this for this right so Google is a

963
00:39:23,080 --> 00:39:26,920
search engine and you can give it the

964
00:39:24,880 --> 00:39:29,740
site operator twitchtv and that will

965
00:39:26,920 --> 00:39:31,450
return only sites that are twitchtv

966
00:39:29,740 --> 00:39:33,009
and then on the first page you know you

967
00:39:31,450 --> 00:39:35,109
probably get back dub dub dub that's

968
00:39:33,010 --> 00:39:38,560
which TV so you can add a - dub dub dub

969
00:39:35,110 --> 00:39:40,000
twitch TV and then you won't get that in

970
00:39:38,560 --> 00:39:42,790
the output and then you'll find other

971
00:39:40,000 --> 00:39:46,630
stuff like watch twitch.tv and dev dot

972
00:39:42,790 --> 00:39:48,490
twitch TV and you can iteratively - out

973
00:39:46,630 --> 00:39:49,870
all the new ones that you find until you

974
00:39:48,490 --> 00:39:51,250
don't find anything else and then that's

975
00:39:49,870 --> 00:39:54,160
pretty much everything Google's ever

976
00:39:51,250 --> 00:39:56,650
seen as far as subdomains for twitch TV

977
00:39:54,160 --> 00:39:57,730
so this is the way that you do it with

978
00:39:56,650 --> 00:39:59,420
search engines this is how you

979
00:39:57,730 --> 00:40:00,829
iteratively

980
00:39:59,420 --> 00:40:02,869
pull out all the subdomains that Google

981
00:40:00,829 --> 00:40:04,309
knows about twitch.tv and there's you

982
00:40:02,869 --> 00:40:05,210
know other ways that you can do it with

983
00:40:04,309 --> 00:40:07,609
all the other sites they're all

984
00:40:05,210 --> 00:40:08,900
different so each one is a specific

985
00:40:07,609 --> 00:40:09,890
piece of technology that has to be

986
00:40:08,900 --> 00:40:14,299
written their code that has to be

987
00:40:09,890 --> 00:40:17,180
written to go scrape the surface so

988
00:40:14,299 --> 00:40:19,910
amass and you know we just got out of an

989
00:40:17,180 --> 00:40:23,210
awesome workshop with Jeff and his team

990
00:40:19,910 --> 00:40:26,089
about a mass is is pretty much the one I

991
00:40:23,210 --> 00:40:29,890
use for a lot of stuff inside of my

992
00:40:26,089 --> 00:40:33,558
recon workflow so for subdomain scraping

993
00:40:29,890 --> 00:40:35,960
there's two frontrunners amass and sub

994
00:40:33,559 --> 00:40:39,700
finder and I you know I use them both

995
00:40:35,960 --> 00:40:42,410
because between both of them they parse

996
00:40:39,700 --> 00:40:44,450
they parse a lot of the same sites but

997
00:40:42,410 --> 00:40:46,879
they also have a couple of variances in

998
00:40:44,450 --> 00:40:48,919
what they can do and so in my workflow

999
00:40:46,880 --> 00:40:50,240
using both of them in automation I just

1000
00:40:48,920 --> 00:40:52,339
kicked them off at the same time in a

1001
00:40:50,240 --> 00:40:53,990
script they go off and do their thing

1002
00:40:52,339 --> 00:40:57,710
they don't take too long usually

1003
00:40:53,990 --> 00:40:59,808
anywhere from you know two to ten

1004
00:40:57,710 --> 00:41:03,980
minutes to go gather all of the

1005
00:40:59,809 --> 00:41:05,329
subdomains for the route or seed that

1006
00:41:03,980 --> 00:41:08,150
I'm looking for and then they'll come

1007
00:41:05,329 --> 00:41:10,309
back and give me the output right so a

1008
00:41:08,150 --> 00:41:11,809
mess has the most sources I'm pretty

1009
00:41:10,309 --> 00:41:14,059
sure that it's looking for and you can

1010
00:41:11,809 --> 00:41:15,950
you know you can go and all these all

1011
00:41:14,059 --> 00:41:17,690
these slides are hyperlinked so when I

1012
00:41:15,950 --> 00:41:20,328
send them out you'll be able to click on

1013
00:41:17,690 --> 00:41:22,040
here or just google AMS obviously and

1014
00:41:20,329 --> 00:41:24,349
it'll tell you what sources that it uses

1015
00:41:22,040 --> 00:41:26,390
and so will the sub find your page and

1016
00:41:24,349 --> 00:41:28,520
it also has like extensible output it

1017
00:41:26,390 --> 00:41:29,930
gives you brute-forcing options it does

1018
00:41:28,520 --> 00:41:31,520
permutation scanning which we're gonna

1019
00:41:29,930 --> 00:41:34,759
talk about a little bit has a whole

1020
00:41:31,520 --> 00:41:37,040
bunch of other modes and basically a

1021
00:41:34,760 --> 00:41:38,299
mass is just kind of awesome so here on

1022
00:41:37,040 --> 00:41:42,170
the right hand side you can see I'm just

1023
00:41:38,299 --> 00:41:44,750
using a mass enum in this case I think

1024
00:41:42,170 --> 00:41:46,880
and name it this might be actually an

1025
00:41:44,750 --> 00:41:48,380
old screenshot but I might be using a

1026
00:41:46,880 --> 00:41:50,119
mess in um here just to look for a

1027
00:41:48,380 --> 00:41:52,220
twitch TV and it's going out to all of

1028
00:41:50,119 --> 00:41:55,160
these sources like we talked about and

1029
00:41:52,220 --> 00:41:56,868
pulling back subdomains that it's seen

1030
00:41:55,160 --> 00:42:02,029
in those website are those websites have

1031
00:41:56,869 --> 00:42:05,299
seen and giving us all back a list so a

1032
00:42:02,030 --> 00:42:07,520
mess also and I say a mess and amass

1033
00:42:05,299 --> 00:42:11,410
pretty interchangeably I don't know I

1034
00:42:07,520 --> 00:42:15,190
don't know why but a mess also

1035
00:42:11,410 --> 00:42:19,029
a mass also will give us this nice

1036
00:42:15,190 --> 00:42:21,309
little table at the end of the run and I

1037
00:42:19,030 --> 00:42:23,380
really appreciate this table and I use

1038
00:42:21,309 --> 00:42:25,599
it a lot because what it'll do is it'll

1039
00:42:23,380 --> 00:42:30,130
say okay I've discovered in this case

1040
00:42:25,599 --> 00:42:32,230
439 names and they came from these

1041
00:42:30,130 --> 00:42:38,170
sources and that's great and then it'll

1042
00:42:32,230 --> 00:42:40,240
tell us where these names were in an ASN

1043
00:42:38,170 --> 00:42:43,210
or you know what a s and they came out

1044
00:42:40,240 --> 00:42:45,368
of so you can see that you know

1045
00:42:43,210 --> 00:42:49,390
something like sixty something came out

1046
00:42:45,369 --> 00:42:51,460
of a fastly a SN and you can see that a

1047
00:42:49,390 --> 00:42:54,420
ton of them came out of Amazon which

1048
00:42:51,460 --> 00:42:57,309
makes sense because Amazon owns twitch

1049
00:42:54,420 --> 00:43:00,220
and then you can see that there's also

1050
00:42:57,309 --> 00:43:04,180
an ASN for justin.tv now I'm not sure if

1051
00:43:00,220 --> 00:43:05,439
I had that you know in in my a ascends

1052
00:43:04,180 --> 00:43:07,029
list I think I did I think it was the

1053
00:43:05,440 --> 00:43:08,470
first one I I had but you can see most

1054
00:43:07,030 --> 00:43:11,980
of their infrastructure resides in in

1055
00:43:08,470 --> 00:43:14,259
that ASN justin.tv twitch interactive

1056
00:43:11,980 --> 00:43:17,079
and then there's you know some other

1057
00:43:14,260 --> 00:43:19,089
stuff hosted an amazon a couple of

1058
00:43:17,079 --> 00:43:21,569
services that are for during the bitly

1059
00:43:19,089 --> 00:43:24,880
they have one site which is using Google

1060
00:43:21,569 --> 00:43:26,740
and this is just a good overview of kind

1061
00:43:24,880 --> 00:43:28,299
of the technology they're using the

1062
00:43:26,740 --> 00:43:29,709
cloud technology that they're using or

1063
00:43:28,299 --> 00:43:32,500
the third-party services they may be

1064
00:43:29,710 --> 00:43:35,920
using in all of these sites that we've

1065
00:43:32,500 --> 00:43:38,920
discovered and so you know here I

1066
00:43:35,920 --> 00:43:41,170
definitely found sites that have landed

1067
00:43:38,920 --> 00:43:44,170
in ASNs that I didn't have in the

1068
00:43:41,170 --> 00:43:47,109
beginning of my testing not specifically

1069
00:43:44,170 --> 00:43:49,690
with twitch but but other sites when I'm

1070
00:43:47,109 --> 00:43:52,960
doing bug bounty in a wide-scale bug

1071
00:43:49,690 --> 00:43:54,940
bounty so you can feed these a these new

1072
00:43:52,960 --> 00:43:56,770
a SN's that you found in this table back

1073
00:43:54,940 --> 00:43:59,319
into a mess until like we did earlier

1074
00:43:56,770 --> 00:44:01,059
and find all of the top-level seed

1075
00:43:59,319 --> 00:44:03,190
domains and then start the whole process

1076
00:44:01,059 --> 00:44:04,960
over so like I said it's a iterative

1077
00:44:03,190 --> 00:44:07,299
process so some tools will give you back

1078
00:44:04,960 --> 00:44:08,740
a new stuff and you send you know seeds

1079
00:44:07,299 --> 00:44:10,930
back to the beginning of the workflow

1080
00:44:08,740 --> 00:44:13,299
and you do subdomain enumeration for

1081
00:44:10,930 --> 00:44:17,680
them and you scan their ASN etc etc so

1082
00:44:13,299 --> 00:44:19,960
iterative workflow so the next tool to

1083
00:44:17,680 --> 00:44:22,660
do the subdomain scraping is sub finder

1084
00:44:19,960 --> 00:44:25,000
and some finder was originally written

1085
00:44:22,660 --> 00:44:29,109
by Iceman and Michael Skelton who's

1086
00:44:25,000 --> 00:44:31,300
Oh dingo and he's an awesome guy and so

1087
00:44:29,110 --> 00:44:33,580
as ice man and recently it's been taken

1088
00:44:31,300 --> 00:44:35,440
over by a group called project discovery

1089
00:44:33,580 --> 00:44:38,259
and project discovery has been doing

1090
00:44:35,440 --> 00:44:41,410
some sick tools lately trying to retool

1091
00:44:38,260 --> 00:44:42,850
a lot of stuff in the recon world and

1092
00:44:41,410 --> 00:44:44,740
they've also built a framework that I

1093
00:44:42,850 --> 00:44:46,799
think they're releasing excuse me later

1094
00:44:44,740 --> 00:44:50,640
this year which is actually really cool

1095
00:44:46,800 --> 00:44:54,400
so sub Finder incorporates other sources

1096
00:44:50,640 --> 00:44:58,529
and has extensible output is really

1097
00:44:54,400 --> 00:45:02,800
stable and so I use both sub finder and

1098
00:44:58,530 --> 00:45:08,950
amass in in subdomain enumeration for

1099
00:45:02,800 --> 00:45:10,420
something scraping so this is you know

1100
00:45:08,950 --> 00:45:13,029
I'm not sure it's like a secret

1101
00:45:10,420 --> 00:45:14,890
obviously but it's it's definitely one

1102
00:45:13,030 --> 00:45:18,760
of the things that has been making me a

1103
00:45:14,890 --> 00:45:23,020
lot of money on bounties recently and

1104
00:45:18,760 --> 00:45:24,850
this is Gwen doe lyke huic I'm not sure

1105
00:45:23,020 --> 00:45:27,250
if I said your name last night your name

1106
00:45:24,850 --> 00:45:31,540
right your last name right Gwen told my

1107
00:45:27,250 --> 00:45:34,960
bad but Gwendolyn aid a whole repo

1108
00:45:31,540 --> 00:45:36,279
around github enumeration and one of the

1109
00:45:34,960 --> 00:45:38,920
tools he made is called github

1110
00:45:36,280 --> 00:45:40,660
subdomains dot py and this thing is

1111
00:45:38,920 --> 00:45:43,180
amazing because what it does is it goes

1112
00:45:40,660 --> 00:45:45,399
out to github and you give it your

1113
00:45:43,180 --> 00:45:48,700
github token for your personal github

1114
00:45:45,400 --> 00:45:53,020
account and it will do just a search for

1115
00:45:48,700 --> 00:45:55,990
twitch.tv in the github search and then

1116
00:45:53,020 --> 00:45:59,020
it will parse all of the results that

1117
00:45:55,990 --> 00:46:02,109
come back in code and parse them into a

1118
00:45:59,020 --> 00:46:05,290
list of subdomains it sees for twitch.tv

1119
00:46:02,110 --> 00:46:07,840
and such it's a github inherently is

1120
00:46:05,290 --> 00:46:10,000
like the you know the buckets of the

1121
00:46:07,840 --> 00:46:13,570
world right there's so much code in

1122
00:46:10,000 --> 00:46:16,030
github and so many developers who have

1123
00:46:13,570 --> 00:46:18,700
probably worked with twitch or for

1124
00:46:16,030 --> 00:46:20,860
twitch and maybe it's not even like a

1125
00:46:18,700 --> 00:46:24,040
secret that these you know subdomains

1126
00:46:20,860 --> 00:46:26,920
exist but but they're definitely not

1127
00:46:24,040 --> 00:46:29,020
referenced anywhere else and I find

1128
00:46:26,920 --> 00:46:31,960
stuff using this script that I have not

1129
00:46:29,020 --> 00:46:33,970
found anywhere else so the original run

1130
00:46:31,960 --> 00:46:38,950
of github subdomains here for twitch

1131
00:46:33,970 --> 00:46:42,779
gave me 1828 subdomains which is a lot

1132
00:46:38,950 --> 00:46:48,189
what I did notice though is that in that

1133
00:46:42,780 --> 00:46:49,810
1828 that it found on twitch it's a lot

1134
00:46:48,190 --> 00:46:51,670
of them were custom branded subdomains

1135
00:46:49,810 --> 00:46:53,650
right so if you think about twitch the

1136
00:46:51,670 --> 00:46:55,690
streamers sometimes when they get big

1137
00:46:53,650 --> 00:47:00,280
enough I think you can get like a custom

1138
00:46:55,690 --> 00:47:02,710
branded custom branded subdomain and so

1139
00:47:00,280 --> 00:47:07,300
all those custom branded subdomain zin

1140
00:47:02,710 --> 00:47:09,430
them had this term dot TMI or like name

1141
00:47:07,300 --> 00:47:11,829
of the streamer dot T mi dot twitch TV

1142
00:47:09,430 --> 00:47:14,230
or something like that so I just took

1143
00:47:11,829 --> 00:47:17,050
the output of this and catted it through

1144
00:47:14,230 --> 00:47:19,660
grep and took out all the TMI domains

1145
00:47:17,050 --> 00:47:23,440
the dot TMI ones and then these were the

1146
00:47:19,660 --> 00:47:25,118
ones that were not player based these

1147
00:47:23,440 --> 00:47:27,430
were the the other ones so Usher and

1148
00:47:25,119 --> 00:47:29,560
clips and player and API cetera et

1149
00:47:27,430 --> 00:47:31,569
cetera so this this script is awesome I

1150
00:47:29,560 --> 00:47:32,740
don't know I don't know if a lot of

1151
00:47:31,570 --> 00:47:34,359
people are using it's been out for a

1152
00:47:32,740 --> 00:47:37,720
long time he wrote it as a written his

1153
00:47:34,359 --> 00:47:39,940
original set of github tools a while ago

1154
00:47:37,720 --> 00:47:41,950
I just discovered it this year and I've

1155
00:47:39,940 --> 00:47:43,630
been using it and I feel like I'm

1156
00:47:41,950 --> 00:47:46,750
finding all kinds of domains that other

1157
00:47:43,630 --> 00:47:48,609
people aren't finding using using this

1158
00:47:46,750 --> 00:47:50,770
source right this is a different source

1159
00:47:48,609 --> 00:47:53,980
github which people are not using the

1160
00:47:50,770 --> 00:47:57,880
whole repo is actually epic so he has

1161
00:47:53,980 --> 00:47:59,530
other tools that can do github dorks you

1162
00:47:57,880 --> 00:48:02,470
know a whole bunch of searching you can

1163
00:47:59,530 --> 00:48:04,839
find email addresses from a repo or from

1164
00:48:02,470 --> 00:48:07,089
a related term there's there's a whole

1165
00:48:04,839 --> 00:48:08,440
article so if you go to if you click on

1166
00:48:07,089 --> 00:48:10,270
that link that says get up search it'll

1167
00:48:08,440 --> 00:48:13,540
take you to this script but if you

1168
00:48:10,270 --> 00:48:15,640
backup one into the repo there's a whole

1169
00:48:13,540 --> 00:48:17,560
bunch of scripts and an article that he

1170
00:48:15,640 --> 00:48:19,420
wrote on medium or another site one or

1171
00:48:17,560 --> 00:48:21,339
maybe his own personal site about how he

1172
00:48:19,420 --> 00:48:24,130
uses it and he does github enumeration

1173
00:48:21,339 --> 00:48:26,740
it's absolutely awesome now the thing

1174
00:48:24,130 --> 00:48:29,079
about github subdomains that py to find

1175
00:48:26,740 --> 00:48:31,328
some domains related to twitch or

1176
00:48:29,079 --> 00:48:33,700
anything else is that the github API is

1177
00:48:31,329 --> 00:48:37,329
kind of wonky so it will return random

1178
00:48:33,700 --> 00:48:38,799
results and is rate limited every once

1179
00:48:37,329 --> 00:48:41,140
in a while so when I baked these into my

1180
00:48:38,800 --> 00:48:45,220
subdomain finding script which I call

1181
00:48:41,140 --> 00:48:49,180
hunter I basically run it about I think

1182
00:48:45,220 --> 00:48:51,629
five or six times and I add a I add a

1183
00:48:49,180 --> 00:48:54,180
sleep in there between each run

1184
00:48:51,630 --> 00:48:56,040
so I do I think five iterations with the

1185
00:48:54,180 --> 00:48:57,990
sleep of six seconds because I think

1186
00:48:56,040 --> 00:49:01,529
that's around where the rate-limiting is

1187
00:48:57,990 --> 00:49:05,040
and then the last one I wait 10 seconds

1188
00:49:01,530 --> 00:49:06,180
and then I do I do one and I basically

1189
00:49:05,040 --> 00:49:07,980
take the output of each one of those

1190
00:49:06,180 --> 00:49:11,160
runs and dump it to a file then when

1191
00:49:07,980 --> 00:49:13,200
it's all done my unique that file I cut

1192
00:49:11,160 --> 00:49:14,790
it out and I sort it and I unique it and

1193
00:49:13,200 --> 00:49:17,129
then that gives me pretty good coverage

1194
00:49:14,790 --> 00:49:19,860
and some consistency from running the

1195
00:49:17,130 --> 00:49:22,620
tool because you can get you know API

1196
00:49:19,860 --> 00:49:24,480
rate limited so you know if you want to

1197
00:49:22,620 --> 00:49:26,220
be super safe you can increase those

1198
00:49:24,480 --> 00:49:27,570
sleeps a little bit longer right I'm not

1199
00:49:26,220 --> 00:49:29,100
in a hurry when I'm looking for

1200
00:49:27,570 --> 00:49:31,380
subdomain enumeration I have plenty of

1201
00:49:29,100 --> 00:49:32,850
stuff to do when I start a project so I

1202
00:49:31,380 --> 00:49:35,310
can let this run in the background I

1203
00:49:32,850 --> 00:49:37,710
don't have any problem if it takes ten

1204
00:49:35,310 --> 00:49:39,660
minutes to enumerate you know all of

1205
00:49:37,710 --> 00:49:42,600
these subdomains for a site using all my

1206
00:49:39,660 --> 00:49:44,190
tools or I do start to get a LAN see

1207
00:49:42,600 --> 00:49:46,080
when it takes like 20 minutes or

1208
00:49:44,190 --> 00:49:48,990
something like that to run all of my

1209
00:49:46,080 --> 00:49:50,490
automation so you know set your your

1210
00:49:48,990 --> 00:49:53,250
sleeps as you know high as you can to

1211
00:49:50,490 --> 00:49:55,169
avoid rate limiting but you know as low

1212
00:49:53,250 --> 00:49:58,350
as you can to you know like not make

1213
00:49:55,170 --> 00:50:00,510
your iterative runs of this bat and like

1214
00:49:58,350 --> 00:50:01,740
I said you take the output and you cat

1215
00:50:00,510 --> 00:50:05,270
it all the little file all those runs

1216
00:50:01,740 --> 00:50:05,270
and you sort of unique it at the end so

1217
00:50:06,080 --> 00:50:11,880
the next one that I've been using to

1218
00:50:09,120 --> 00:50:13,529
great success and the ones I really like

1219
00:50:11,880 --> 00:50:16,530
obviously I put this little fire icon in

1220
00:50:13,530 --> 00:50:19,680
the bottom right hand corner is this one

1221
00:50:16,530 --> 00:50:21,510
which is called show sub go and it is a

1222
00:50:19,680 --> 00:50:23,069
parser for show Don right which we

1223
00:50:21,510 --> 00:50:24,750
mentioned earlier that we can get some

1224
00:50:23,070 --> 00:50:26,130
information from but this is a

1225
00:50:24,750 --> 00:50:28,350
command-line tool that will look

1226
00:50:26,130 --> 00:50:31,220
specifically for subdomains based on a

1227
00:50:28,350 --> 00:50:34,700
seed like twitchtv or a root domain and

1228
00:50:31,220 --> 00:50:38,430
this is written by in cog bytes which

1229
00:50:34,700 --> 00:50:39,750
which is awesome and the reason I use

1230
00:50:38,430 --> 00:50:40,919
this one and there's several of these

1231
00:50:39,750 --> 00:50:43,140
types of tools out there is because it

1232
00:50:40,920 --> 00:50:46,260
seems to be the most stable and gives

1233
00:50:43,140 --> 00:50:48,900
the most output and so it's also written

1234
00:50:46,260 --> 00:50:53,670
and go which is you know well managed

1235
00:50:48,900 --> 00:50:57,050
coding language etc so this one you see

1236
00:50:53,670 --> 00:51:00,090
I ran it here and I basically give it my

1237
00:50:57,050 --> 00:51:01,500
domain and then my key which is blurred

1238
00:51:00,090 --> 00:51:02,640
out there and it gives me back a whole

1239
00:51:01,500 --> 00:51:05,220
bunch of stuff that showed in the scene

1240
00:51:02,640 --> 00:51:05,700
related to twitch.tv so this one has

1241
00:51:05,220 --> 00:51:09,569
been

1242
00:51:05,700 --> 00:51:14,580
very great for me and testing and along

1243
00:51:09,570 --> 00:51:15,870
with along with the github one it gives

1244
00:51:14,580 --> 00:51:19,110
me you know kind of a little bit of edge

1245
00:51:15,870 --> 00:51:24,089
in the subdomain scraping kind of world

1246
00:51:19,110 --> 00:51:26,730
I guess now this is the next one is is

1247
00:51:24,090 --> 00:51:29,040
scraping cloud ranges and and this one

1248
00:51:26,730 --> 00:51:30,600
is kind of the level two or like kind of

1249
00:51:29,040 --> 00:51:32,400
the higher echelon of what you know a

1250
00:51:30,600 --> 00:51:36,390
lot of bug bug hunters are doing like

1251
00:51:32,400 --> 00:51:38,370
that are pretty successful and I'm

1252
00:51:36,390 --> 00:51:40,350
pretty sure all of them now have either

1253
00:51:38,370 --> 00:51:43,650
built their own tools or subscribing to

1254
00:51:40,350 --> 00:51:45,930
a tool that is is doing this technique

1255
00:51:43,650 --> 00:51:48,120
and so you know that it's not the first

1256
00:51:45,930 --> 00:51:50,660
time anyone has mentioned it but it's

1257
00:51:48,120 --> 00:51:55,259
not exactly plug and play run a tool

1258
00:51:50,660 --> 00:51:57,810
type method what this is doing or what

1259
00:51:55,260 --> 00:52:02,100
this basically technique is saying is is

1260
00:51:57,810 --> 00:52:05,430
going going to all of the AWS all the

1261
00:52:02,100 --> 00:52:08,220
cloud ranges like AWS GCP azure and all

1262
00:52:05,430 --> 00:52:11,370
of those huge ranges is scanning them

1263
00:52:08,220 --> 00:52:14,609
every so often and looking for only port

1264
00:52:11,370 --> 00:52:16,350
443 which is SSL and connecting and

1265
00:52:14,610 --> 00:52:21,150
looking at the SSL certificate and

1266
00:52:16,350 --> 00:52:23,160
seeing if our term twitch.tv is in the

1267
00:52:21,150 --> 00:52:25,320
certificate data and so you know

1268
00:52:23,160 --> 00:52:29,279
invariably especially for twitch here

1269
00:52:25,320 --> 00:52:31,620
you know they will spin up a dev site or

1270
00:52:29,280 --> 00:52:32,820
you know some like single-shot site and

1271
00:52:31,620 --> 00:52:34,350
they'll not promote it and they'll think

1272
00:52:32,820 --> 00:52:37,200
it's private and security by obscurity

1273
00:52:34,350 --> 00:52:39,720
etc etc and so they'll put something out

1274
00:52:37,200 --> 00:52:42,000
on the internet that isn't in any of our

1275
00:52:39,720 --> 00:52:43,560
other sources but because we're doing

1276
00:52:42,000 --> 00:52:46,470
this proactive scanning of all of the

1277
00:52:43,560 --> 00:52:48,740
ranges for all of these cloud services

1278
00:52:46,470 --> 00:52:51,330
and we're looking at the SSL certs for

1279
00:52:48,740 --> 00:52:53,069
twitch.tv and it hasn't filtered into

1280
00:52:51,330 --> 00:52:55,710
something like you know the certificate

1281
00:52:53,070 --> 00:52:58,440
or you know repositories yet will will

1282
00:52:55,710 --> 00:53:00,150
find this before anybody else and you

1283
00:52:58,440 --> 00:53:01,920
know several companies have made you

1284
00:53:00,150 --> 00:53:04,230
know lots of lots of money off of off of

1285
00:53:01,920 --> 00:53:07,380
this and so you can build this tooling

1286
00:53:04,230 --> 00:53:10,590
yourself you can build it with masscan

1287
00:53:07,380 --> 00:53:13,650
and end map and you can cron job out

1288
00:53:10,590 --> 00:53:17,460
those scans and you know a lot of people

1289
00:53:13,650 --> 00:53:18,750
are doing and you know you could do that

1290
00:53:17,460 --> 00:53:19,230
yourself and there's a wonderful article

1291
00:53:18,750 --> 00:53:21,960
out there

1292
00:53:19,230 --> 00:53:23,700
by dahi part which outlines kind of

1293
00:53:21,960 --> 00:53:26,520
building this yourself

1294
00:53:23,700 --> 00:53:28,560
there's also luckily last DEFCON Sam

1295
00:53:26,520 --> 00:53:31,109
herb did a wonderful DEFCON talk on this

1296
00:53:28,560 --> 00:53:33,960
whole process that that he did and he

1297
00:53:31,109 --> 00:53:37,710
created a service called buffer buffer

1298
00:53:33,960 --> 00:53:40,440
over dot run which queries the ranges

1299
00:53:37,710 --> 00:53:42,720
every week and then you can just query

1300
00:53:40,440 --> 00:53:45,630
this service and it will give you back

1301
00:53:42,720 --> 00:53:48,149
whatever it knows from the last week and

1302
00:53:45,630 --> 00:53:51,750
so this is this is what I use right now

1303
00:53:48,150 --> 00:53:53,970
although I you know I do have I do have

1304
00:53:51,750 --> 00:53:56,820
access to a service that will do it on

1305
00:53:53,970 --> 00:53:58,950
command and building my own boxes to do

1306
00:53:56,820 --> 00:54:03,630
it right now so this is kind of the next

1307
00:53:58,950 --> 00:54:05,009
level of scanning it proactively now you

1308
00:54:03,630 --> 00:54:07,980
can query here you see I've queried

1309
00:54:05,010 --> 00:54:09,540
twitch.tv or dot twitch.tv and the query

1310
00:54:07,980 --> 00:54:12,810
string where it's outlined in red and

1311
00:54:09,540 --> 00:54:15,240
then I have to parse the results with JQ

1312
00:54:12,810 --> 00:54:18,480
and then do some other bash foo and then

1313
00:54:15,240 --> 00:54:20,430
I get a list back of the domains related

1314
00:54:18,480 --> 00:54:21,570
to twitch.tv which some of these you

1315
00:54:20,430 --> 00:54:25,230
know we're definitely not in the other

1316
00:54:21,570 --> 00:54:28,560
data that I've seen so far so that's

1317
00:54:25,230 --> 00:54:30,450
awesome and and a tool you can see in

1318
00:54:28,560 --> 00:54:33,840
the right hand corner I've represented

1319
00:54:30,450 --> 00:54:35,160
kind of the ones that are really finding

1320
00:54:33,840 --> 00:54:40,170
good stuff for me with a little fire

1321
00:54:35,160 --> 00:54:42,839
icon so now that we've done subdomain

1322
00:54:40,170 --> 00:54:44,460
scraping throughout sources that I think

1323
00:54:42,840 --> 00:54:46,020
are valuable you know a mess and sub

1324
00:54:44,460 --> 00:54:48,750
finder are doing a ton of different

1325
00:54:46,020 --> 00:54:51,330
sources and then we've added some ones

1326
00:54:48,750 --> 00:54:52,980
that are kind of bespoke now that we're

1327
00:54:51,330 --> 00:54:56,310
done scraping sources we're gonna move

1328
00:54:52,980 --> 00:54:58,410
on to subdomain brute force which is

1329
00:54:56,310 --> 00:55:03,240
kind of one of the last pillars of

1330
00:54:58,410 --> 00:55:04,890
subdomain enumeration so subdomain

1331
00:55:03,240 --> 00:55:06,810
brooding at this point we're guessing

1332
00:55:04,890 --> 00:55:08,819
for life subdomain so we're just gonna

1333
00:55:06,810 --> 00:55:12,540
you know try and resolve you know

1334
00:55:08,820 --> 00:55:13,590
something you know at twitch.tv or in

1335
00:55:12,540 --> 00:55:15,480
this case you know in this little

1336
00:55:13,590 --> 00:55:16,740
example company comm and so you know

1337
00:55:15,480 --> 00:55:18,210
usually if you look at something like

1338
00:55:16,740 --> 00:55:19,560
this totally does not exist out company

1339
00:55:18,210 --> 00:55:21,600
comm will usually not to get a record

1340
00:55:19,560 --> 00:55:23,369
will usually not get a record so we can

1341
00:55:21,600 --> 00:55:25,140
use a large list of common subdomain

1342
00:55:23,369 --> 00:55:26,730
names and just try to resolve them over

1343
00:55:25,140 --> 00:55:28,680
and over and seeing if anything succeeds

1344
00:55:26,730 --> 00:55:31,020
on the problem with this method is that

1345
00:55:28,680 --> 00:55:32,669
it you know normally we've done this in

1346
00:55:31,020 --> 00:55:34,259
the olden days with screw

1347
00:55:32,670 --> 00:55:36,000
it's like fierce and some other stuff

1348
00:55:34,260 --> 00:55:39,079
like that I figure was a really popular

1349
00:55:36,000 --> 00:55:41,819
one for most of my pentesting career and

1350
00:55:39,079 --> 00:55:45,930
it was only using one DNS server at a

1351
00:55:41,819 --> 00:55:48,509
time so it took forever to run these the

1352
00:55:45,930 --> 00:55:51,200
analysis on a large domain like you know

1353
00:55:48,510 --> 00:55:54,030
twitch which has like a lot of assets so

1354
00:55:51,200 --> 00:55:56,160
you know about three years ago or four

1355
00:55:54,030 --> 00:55:59,700
years ago some tools came out that we're

1356
00:55:56,160 --> 00:56:01,589
both threaded and used multiple DNS

1357
00:55:59,700 --> 00:56:02,899
resolvers simultaneously to do this

1358
00:56:01,589 --> 00:56:06,450
process so it sped up the process

1359
00:56:02,900 --> 00:56:09,660
infinitely the first one of those was

1360
00:56:06,450 --> 00:56:13,259
mass DNS by blush mint and he was the

1361
00:56:09,660 --> 00:56:15,859
pioneer pioneer that kind of idea now

1362
00:56:13,260 --> 00:56:19,380
you know a mass has basically

1363
00:56:15,859 --> 00:56:21,598
implemented this into their tool and

1364
00:56:19,380 --> 00:56:24,299
they use eight resolvers by default and

1365
00:56:21,599 --> 00:56:26,970
you can add a larger resolver list with

1366
00:56:24,299 --> 00:56:30,329
the dash RF flag if you want to

1367
00:56:26,970 --> 00:56:32,910
distribute it even more so in order to

1368
00:56:30,329 --> 00:56:36,630
do this you can just do a mass enum -

1369
00:56:32,910 --> 00:56:40,770
brute - D for domain and twitchtv and

1370
00:56:36,630 --> 00:56:42,210
then here I've added the - source -

1371
00:56:40,770 --> 00:56:45,000
source command just to show you where

1372
00:56:42,210 --> 00:56:46,829
this where the domains are coming from

1373
00:56:45,000 --> 00:56:47,910
the subdomains are coming from so you

1374
00:56:46,829 --> 00:56:50,130
can see a whole bunch of coming back

1375
00:56:47,910 --> 00:56:52,140
from Sirte SH and then one came back

1376
00:56:50,130 --> 00:56:53,819
from brute-forcing and then pulled more

1377
00:56:52,140 --> 00:56:55,529
but pulled one from threat crowd and a

1378
00:56:53,819 --> 00:56:56,940
sublist or API and then the from threat

1379
00:56:55,530 --> 00:56:58,589
crowd and Mort it searched it and then

1380
00:56:56,940 --> 00:57:00,089
there's you know this list was super

1381
00:56:58,589 --> 00:57:01,319
long I just took a snippet of it and

1382
00:57:00,089 --> 00:57:03,779
there were a whole bunch more that came

1383
00:57:01,319 --> 00:57:05,790
from brute-forcing etc and a mass has

1384
00:57:03,780 --> 00:57:08,819
its own list built in so it's using a

1385
00:57:05,790 --> 00:57:12,359
you know pretty stock kind of generic

1386
00:57:08,819 --> 00:57:14,849
brute forcing list and then you can also

1387
00:57:12,359 --> 00:57:16,098
specify you know your resolvers if you

1388
00:57:14,849 --> 00:57:18,660
have more resolvers and want to

1389
00:57:16,099 --> 00:57:22,950
basically make this process a little bit

1390
00:57:18,660 --> 00:57:26,490
faster for the brute force so another

1391
00:57:22,950 --> 00:57:28,500
one if you like separating the workload

1392
00:57:26,490 --> 00:57:30,629
and not just using AMS to do all of your

1393
00:57:28,500 --> 00:57:32,549
stuff there's another tool called

1394
00:57:30,630 --> 00:57:34,200
shuffle DNS by the project discovery

1395
00:57:32,549 --> 00:57:37,530
team which we've mentioned before who

1396
00:57:34,200 --> 00:57:39,660
are doing amazing work and this one

1397
00:57:37,530 --> 00:57:41,819
actually is a wrapper around mass DNS

1398
00:57:39,660 --> 00:57:46,230
the old tool and it the reason why it's

1399
00:57:41,819 --> 00:57:48,390
a wrapper around this is that you can

1400
00:57:46,230 --> 00:57:49,470
you can basically handle wildcard

1401
00:57:48,390 --> 00:57:53,069
domains there's a whole bunch of

1402
00:57:49,470 --> 00:57:56,098
advantages in using shuffle DNS here so

1403
00:57:53,070 --> 00:57:58,470
if you prefer the mass DNS core you can

1404
00:57:56,099 --> 00:58:01,170
use the shuffle dummy shuffle DNS

1405
00:57:58,470 --> 00:58:04,500
wrapper and and add your own word list

1406
00:58:01,170 --> 00:58:08,839
and resolvers just like a mass as well

1407
00:58:04,500 --> 00:58:08,839
if you want to flip it up a little bit

1408
00:58:09,260 --> 00:58:15,810
so a multi resolver you know threaded

1409
00:58:13,320 --> 00:58:18,240
subdomain brooder is only as good as its

1410
00:58:15,810 --> 00:58:20,220
word list really right I mean at the end

1411
00:58:18,240 --> 00:58:22,020
of the day you're you're trying you know

1412
00:58:20,220 --> 00:58:23,189
a list of things and if you have a

1413
00:58:22,020 --> 00:58:25,230
horrible list you're not gonna find

1414
00:58:23,190 --> 00:58:28,740
anything so there are two trains of

1415
00:58:25,230 --> 00:58:30,570
thought out here for lists and so you

1416
00:58:28,740 --> 00:58:32,399
have people who really like to use

1417
00:58:30,570 --> 00:58:34,560
tailored worst lists or build them on

1418
00:58:32,400 --> 00:58:35,940
the fly and there's people who use like

1419
00:58:34,560 --> 00:58:37,890
to use like all and company

1420
00:58:35,940 --> 00:58:39,900
all-encompassing massive word lists for

1421
00:58:37,890 --> 00:58:41,520
everything they've ever seen both of

1422
00:58:39,900 --> 00:58:43,650
these have advantages they're both

1423
00:58:41,520 --> 00:58:46,680
absolutely great strategies they both

1424
00:58:43,650 --> 00:58:48,630
worked for me in the past I released as

1425
00:58:46,680 --> 00:58:52,109
part of the blog Hunter's methodology I

1426
00:58:48,630 --> 00:58:55,140
think to my all dot txt file which was

1427
00:58:52,109 --> 00:58:57,660
basically every DNS tool that I had ever

1428
00:58:55,140 --> 00:59:00,180
seen in the hacker world all had their

1429
00:58:57,660 --> 00:59:01,740
own word list so I took all of those and

1430
00:59:00,180 --> 00:59:05,190
you can see the list of the files on the

1431
00:59:01,740 --> 00:59:07,560
right and all of those lists for those

1432
00:59:05,190 --> 00:59:10,740
tools I just kind of combined them into

1433
00:59:07,560 --> 00:59:14,130
one massive file and then I added I

1434
00:59:10,740 --> 00:59:16,649
added the comments peak data that the

1435
00:59:14,130 --> 00:59:18,930
asset note folks released as well for

1436
00:59:16,650 --> 00:59:20,160
subdomains and so it was a giant giant

1437
00:59:18,930 --> 00:59:22,529
file I think it's something like you

1438
00:59:20,160 --> 00:59:24,509
know 15 Meg's of words that it's gonna

1439
00:59:22,530 --> 00:59:26,220
try to brute force and that is

1440
00:59:24,510 --> 00:59:28,740
considered a massive word list right and

1441
00:59:26,220 --> 00:59:30,480
it takes a while to run not too long

1442
00:59:28,740 --> 00:59:32,279
with the technology that we have with

1443
00:59:30,480 --> 00:59:33,930
these multi resolver threaded subdomain

1444
00:59:32,280 --> 00:59:38,160
brute force sirs but it still takes a

1445
00:59:33,930 --> 00:59:40,430
little while but that's normally what I

1446
00:59:38,160 --> 00:59:42,629
use in this phase of my testing and

1447
00:59:40,430 --> 00:59:45,060
yesterday Tom and I'm not talked about

1448
00:59:42,630 --> 00:59:46,950
building custom word lists using a whole

1449
00:59:45,060 --> 00:59:51,420
bunch of awesome tricks and he released

1450
00:59:46,950 --> 00:59:53,759
some cool tools around around that as

1451
00:59:51,420 --> 00:59:55,829
well specifically I loved his his little

1452
00:59:53,760 --> 00:59:58,290
like googors Google scraper extension

1453
00:59:55,829 --> 00:59:59,790
which was awesome Tom my mom's one of

1454
00:59:58,290 --> 01:00:00,000
the guys that I suggest you just like

1455
00:59:59,790 --> 01:00:01,520
fall

1456
01:00:00,000 --> 01:00:06,060
everything he does he's super smart

1457
01:00:01,520 --> 01:00:08,640
great person and yeah I just I love the

1458
01:00:06,060 --> 01:00:10,710
guy so yeah so he released a talk

1459
01:00:08,640 --> 01:00:12,930
yesterday on who what where when

1460
01:00:10,710 --> 01:00:16,080
wordlist and he talked all about this

1461
01:00:12,930 --> 01:00:17,730
idea of tailored wordless or um you know

1462
01:00:16,080 --> 01:00:18,779
kind of custom word list and so I highly

1463
01:00:17,730 --> 01:00:20,730
suggest you go back on the video

1464
01:00:18,780 --> 01:00:23,760
yesterday if you didn't see it and watch

1465
01:00:20,730 --> 01:00:25,170
his talk there was also a tool that did

1466
01:00:23,760 --> 01:00:26,370
this recently I know I bookmarked it

1467
01:00:25,170 --> 01:00:29,580
somewhere but there was a new tool that

1468
01:00:26,370 --> 01:00:31,920
basically parsed keywords on a web page

1469
01:00:29,580 --> 01:00:33,750
and I can't remember the name of the

1470
01:00:31,920 --> 01:00:37,350
tool if one of you wants to like you

1471
01:00:33,750 --> 01:00:38,610
know paste it in chat cool was the first

1472
01:00:37,350 --> 01:00:41,520
one to do this but I know that there was

1473
01:00:38,610 --> 01:00:43,920
a new one C ewl I know there was a new

1474
01:00:41,520 --> 01:00:46,590
one that came out that I think I saw on

1475
01:00:43,920 --> 01:00:48,570
Twitter but basically parsed key words

1476
01:00:46,590 --> 01:00:51,300
from a web page and tried to build a

1477
01:00:48,570 --> 01:00:52,950
customized word list based on keywords

1478
01:00:51,300 --> 01:00:54,570
right so since you know we're testing

1479
01:00:52,950 --> 01:00:58,279
twitch probably a you know a majority

1480
01:00:54,570 --> 01:01:01,920
not a majority but like some some of the

1481
01:00:58,280 --> 01:01:03,690
some of the users who are some of the

1482
01:01:01,920 --> 01:01:04,800
domains might be related to twitch

1483
01:01:03,690 --> 01:01:06,360
infrastructure right and have twitch

1484
01:01:04,800 --> 01:01:08,250
keywords in them so if you parse the

1485
01:01:06,360 --> 01:01:10,260
site and you break it all down and you

1486
01:01:08,250 --> 01:01:12,540
make a custom word list from you know

1487
01:01:10,260 --> 01:01:14,160
terms or words that might be related to

1488
01:01:12,540 --> 01:01:16,620
twitch and then you turn that into a

1489
01:01:14,160 --> 01:01:18,779
word list for your DNS subverting you

1490
01:01:16,620 --> 01:01:21,480
might find something that's the the

1491
01:01:18,780 --> 01:01:22,410
general idea there so I can't remember

1492
01:01:21,480 --> 01:01:23,760
the name of that tool hopefully

1493
01:01:22,410 --> 01:01:25,200
hopefully somebody could find it

1494
01:01:23,760 --> 01:01:26,970
something like security who's just like

1495
01:01:25,200 --> 01:01:29,600
he's got his finger on the pulse all the

1496
01:01:26,970 --> 01:01:29,600
time so

1497
01:01:29,910 --> 01:01:36,480
so for subdomain lists there wasn't like

1498
01:01:33,420 --> 01:01:38,280
a ton of iteration going on it kind of

1499
01:01:36,480 --> 01:01:40,260
stayed the same

1500
01:01:38,280 --> 01:01:42,480
you know generic brute forcing words and

1501
01:01:40,260 --> 01:01:44,520
some people were you know putting out

1502
01:01:42,480 --> 01:01:46,560
some data but the the first team to

1503
01:01:44,520 --> 01:01:48,600
really iterate on like a new type of

1504
01:01:46,560 --> 01:01:51,450
list was the asset note team with their

1505
01:01:48,600 --> 01:01:54,150
common speak data which they used they

1506
01:01:51,450 --> 01:01:56,520
use Google bigquery and a whole bunch of

1507
01:01:54,150 --> 01:02:00,180
data sites like Reddit and and some

1508
01:01:56,520 --> 01:02:02,070
other places to parse out subdomains and

1509
01:02:00,180 --> 01:02:04,950
so they're their first collection common

1510
01:02:02,070 --> 01:02:07,830
speak one was included in the all that

1511
01:02:04,950 --> 01:02:09,720
text file but only version one they they

1512
01:02:07,830 --> 01:02:13,110
you know year two ago they released

1513
01:02:09,720 --> 01:02:16,169
version two and so you can grab that

1514
01:02:13,110 --> 01:02:18,510
at their github repo so asset no comment

1515
01:02:16,170 --> 01:02:20,790
speak to and that has a second run and

1516
01:02:18,510 --> 01:02:22,950
some more some more sources where they

1517
01:02:20,790 --> 01:02:24,210
parse that subdomain name and URL data

1518
01:02:22,950 --> 01:02:25,620
and all kinds of cool stuff it's a

1519
01:02:24,210 --> 01:02:28,680
really cool project and they're really

1520
01:02:25,620 --> 01:02:33,779
iterating on the idea of a massive list

1521
01:02:28,680 --> 01:02:36,750
there too so the next thing is now we

1522
01:02:33,780 --> 01:02:38,640
have some brute-forcing and we have we

1523
01:02:36,750 --> 01:02:40,650
have scraping we have brute-forcing we

1524
01:02:38,640 --> 01:02:41,879
have analysis of javascript we've got

1525
01:02:40,650 --> 01:02:44,040
all kinds of sources to find the

1526
01:02:41,880 --> 01:02:46,200
subdomains the next one is alteration

1527
01:02:44,040 --> 01:02:48,900
scanning and so this is the idea that a

1528
01:02:46,200 --> 01:02:51,060
company has like dev comm and then they

1529
01:02:48,900 --> 01:02:54,780
might have like dev one calm or dev to

1530
01:02:51,060 --> 01:02:57,450
calm or dev - one or dev - - or dev dot

1531
01:02:54,780 --> 01:03:00,680
one company calm or dev dot-to-dot

1532
01:02:57,450 --> 01:03:03,390
company calm and so applying these

1533
01:03:00,680 --> 01:03:06,600
alterations or permutations sometimes

1534
01:03:03,390 --> 01:03:09,180
people call them - - common words when

1535
01:03:06,600 --> 01:03:12,000
you're brute-forcing is is a method to

1536
01:03:09,180 --> 01:03:13,890
find subdomains and it's a pretty valid

1537
01:03:12,000 --> 01:03:17,360
method a lot of people find some cool

1538
01:03:13,890 --> 01:03:20,670
obscure stuff with this with this method

1539
01:03:17,360 --> 01:03:23,100
now this method was kind of first

1540
01:03:20,670 --> 01:03:26,100
pioneered at least I know by naffy and

1541
01:03:23,100 --> 01:03:27,720
chubbs the shrubs you know as part of

1542
01:03:26,100 --> 01:03:31,170
the asset no team and naffy is just an

1543
01:03:27,720 --> 01:03:33,629
awesome bug hunter and pretty cool dude

1544
01:03:31,170 --> 01:03:35,190
and they wrote a tool called alt DNS and

1545
01:03:33,630 --> 01:03:38,220
that was kind of the first one to do

1546
01:03:35,190 --> 01:03:41,280
this permutation scanning or alteration

1547
01:03:38,220 --> 01:03:44,879
scanning is now also included in a mass

1548
01:03:41,280 --> 01:03:46,590
and yeah and so I can show you some like

1549
01:03:44,880 --> 01:03:48,090
experience of you know where this has

1550
01:03:46,590 --> 01:03:49,530
helped me in the past not only find

1551
01:03:48,090 --> 01:03:52,470
obscure subdomains but do some other

1552
01:03:49,530 --> 01:03:56,340
stuff as well so I just grabbed some of

1553
01:03:52,470 --> 01:03:59,580
the instances that I had you know in the

1554
01:03:56,340 --> 01:04:03,030
last you know a couple years and you

1555
01:03:59,580 --> 01:04:05,250
know I had some projects where I had a

1556
01:04:03,030 --> 01:04:07,860
web location firewall on both of these

1557
01:04:05,250 --> 01:04:10,890
projects and so the target or the

1558
01:04:07,860 --> 01:04:12,930
organization had the wife enabled on dub

1559
01:04:10,890 --> 01:04:15,089
dub dub because I had used a permutation

1560
01:04:12,930 --> 01:04:17,759
scanner a scanner and I'd found dub dub

1561
01:04:15,090 --> 01:04:19,260
to target I was able to bypass the

1562
01:04:17,760 --> 01:04:21,030
laughs because it was enabled on that

1563
01:04:19,260 --> 01:04:23,910
domain and I was able to do sequel

1564
01:04:21,030 --> 01:04:26,010
injection there and another one was I

1565
01:04:23,910 --> 01:04:27,000
was just trying to test generally in

1566
01:04:26,010 --> 01:04:30,750
spider and I was getting

1567
01:04:27,000 --> 01:04:33,120
bye Akamai and I you know one of the

1568
01:04:30,750 --> 01:04:37,410
permutations I always use in all my list

1569
01:04:33,120 --> 01:04:39,509
is origin and origin sub because what I

1570
01:04:37,410 --> 01:04:42,390
want to look for is someone who has

1571
01:04:39,510 --> 01:04:45,390
predictably named their Akamai origin

1572
01:04:42,390 --> 01:04:47,069
server their CDN origin and the

1573
01:04:45,390 --> 01:04:48,240
permutation scanner if I give it that

1574
01:04:47,070 --> 01:04:50,220
term will come up with the hole which

1575
01:04:48,240 --> 01:04:52,799
permutations and if I find the right one

1576
01:04:50,220 --> 01:04:55,560
I can bypass filtering and go to the

1577
01:04:52,800 --> 01:04:57,090
source so these are these are two

1578
01:04:55,560 --> 01:05:00,390
instances where this is absolutely

1579
01:04:57,090 --> 01:05:01,710
worked for me in in different cases I've

1580
01:05:00,390 --> 01:05:04,140
also just found really obscure

1581
01:05:01,710 --> 01:05:08,850
subdomains with with alteration scanning

1582
01:05:04,140 --> 01:05:10,799
as well so now kind of the other

1583
01:05:08,850 --> 01:05:13,529
category is is just like a whole bunch

1584
01:05:10,800 --> 01:05:15,840
of things that I think go into recon

1585
01:05:13,530 --> 01:05:17,430
that don't fit anywhere right I mean

1586
01:05:15,840 --> 01:05:19,590
they could be getting us subdomains they

1587
01:05:17,430 --> 01:05:21,390
could be getting us other stuff some of

1588
01:05:19,590 --> 01:05:23,930
them bleed into vulnerability analysis

1589
01:05:21,390 --> 01:05:27,000
but we put it in the Recon version of

1590
01:05:23,930 --> 01:05:29,580
the bug hunters methodology because we

1591
01:05:27,000 --> 01:05:31,950
do them at a mass scale instead of you

1592
01:05:29,580 --> 01:05:33,930
know digging into one site so we're just

1593
01:05:31,950 --> 01:05:38,339
going to talk about some of those things

1594
01:05:33,930 --> 01:05:40,350
that I use here so you know eventually

1595
01:05:38,340 --> 01:05:42,090
I'm going to do you know after I get all

1596
01:05:40,350 --> 01:05:44,430
of these domains and subdomains right

1597
01:05:42,090 --> 01:05:48,150
I'm going to have to or I want to port

1598
01:05:44,430 --> 01:05:50,129
scan them I want to find first of all I

1599
01:05:48,150 --> 01:05:53,430
want to find obscure web ports right you

1600
01:05:50,130 --> 01:05:55,320
know maybe web services or web sites

1601
01:05:53,430 --> 01:05:58,200
that are running on ports other than 80

1602
01:05:55,320 --> 01:06:00,900
and 443 so a port scan is going to be

1603
01:05:58,200 --> 01:06:02,970
needed to find those and because you've

1604
01:06:00,900 --> 01:06:05,430
already seen how massive and how many

1605
01:06:02,970 --> 01:06:07,919
subdomains and how many seed domains I

1606
01:06:05,430 --> 01:06:10,919
have and how big this type of a project

1607
01:06:07,920 --> 01:06:12,480
can get for a big company you know I'm

1608
01:06:10,920 --> 01:06:14,730
gonna need something fast and so the

1609
01:06:12,480 --> 01:06:16,470
most you know like most hacker education

1610
01:06:14,730 --> 01:06:17,640
would have you use nmap right about here

1611
01:06:16,470 --> 01:06:19,850
right they'd be like port scan within

1612
01:06:17,640 --> 01:06:22,350
map but actually the workflow is more

1613
01:06:19,850 --> 01:06:24,060
used something faster and quick and then

1614
01:06:22,350 --> 01:06:25,290
once you find out stuff is up and

1615
01:06:24,060 --> 01:06:28,230
there's ports up then you can feed that

1616
01:06:25,290 --> 01:06:29,850
to end map so the tool that we use here

1617
01:06:28,230 --> 01:06:32,520
is mask and by Robert Graham and it's

1618
01:06:29,850 --> 01:06:34,680
much faster in that general kind of just

1619
01:06:32,520 --> 01:06:36,270
finding open TCP ports it doesn't do any

1620
01:06:34,680 --> 01:06:39,750
of the fancy like end map scripting

1621
01:06:36,270 --> 01:06:40,880
engine or version version analysis or

1622
01:06:39,750 --> 01:06:42,590
anything like that

1623
01:06:40,880 --> 01:06:44,180
but you know when you find out the ports

1624
01:06:42,590 --> 01:06:47,300
open just with something like this then

1625
01:06:44,180 --> 01:06:49,279
you can feed out feed the open ports to

1626
01:06:47,300 --> 01:06:50,720
get scanned in and map to do the fancy

1627
01:06:49,280 --> 01:06:54,290
scanning and that's what I do in my tool

1628
01:06:50,720 --> 01:06:56,029
chain so you can basically scan way

1629
01:06:54,290 --> 01:06:58,490
faster in masks and it has a rewritten

1630
01:06:56,030 --> 01:07:00,230
tcp/ip stack it's got multi-threading

1631
01:06:58,490 --> 01:07:02,750
and is written and see it's probably the

1632
01:07:00,230 --> 01:07:05,570
fastest port scanner out there I would

1633
01:07:02,750 --> 01:07:08,030
say maybe maybe there's some other ones

1634
01:07:05,570 --> 01:07:11,750
but it's the one I've been using so

1635
01:07:08,030 --> 01:07:14,390
syntax is pretty simple masscan - p1

1636
01:07:11,750 --> 01:07:19,040
through 65,000 335 so the whole range

1637
01:07:14,390 --> 01:07:23,150
and then you can take a input file of

1638
01:07:19,040 --> 01:07:25,220
IPs and so this is one of the the things

1639
01:07:23,150 --> 01:07:26,420
here is masking only scans IP is it

1640
01:07:25,220 --> 01:07:28,220
won't scan domain so don't do the

1641
01:07:26,420 --> 01:07:30,650
resolution for you so you have to have

1642
01:07:28,220 --> 01:07:33,310
an IP list not a domain list which a lot

1643
01:07:30,650 --> 01:07:37,160
of our tools and a lot of the data we've

1644
01:07:33,310 --> 01:07:39,980
amassed you know sorry but a lot of the

1645
01:07:37,160 --> 01:07:41,600
data we've we've gotten our domains or

1646
01:07:39,980 --> 01:07:43,250
subdomains and so we're gonna talk about

1647
01:07:41,600 --> 01:07:45,529
that in a second but then you can set a

1648
01:07:43,250 --> 01:07:49,010
max rate I usually hover around you know

1649
01:07:45,530 --> 01:07:52,700
1800 and then you can set an output file

1650
01:07:49,010 --> 01:07:54,560
of OG which will give you a log and it

1651
01:07:52,700 --> 01:07:56,600
will give you and then you can do Oh a

1652
01:07:54,560 --> 01:07:57,860
as well and it'll give you like an nmap

1653
01:07:56,600 --> 01:07:59,390
output file there's a whole bunch of

1654
01:07:57,860 --> 01:08:01,760
outputs it does and it can do an nmap

1655
01:07:59,390 --> 01:08:05,379
out file which we can use later to great

1656
01:08:01,760 --> 01:08:08,240
success so the full syntax of masscan

1657
01:08:05,380 --> 01:08:11,660
you know the readme is is somewhat

1658
01:08:08,240 --> 01:08:13,339
in-depth but Daniel Miller who who is

1659
01:08:11,660 --> 01:08:17,059
one of my best friends in the world and

1660
01:08:13,340 --> 01:08:19,520
just all-around awesome human and and he

1661
01:08:17,060 --> 01:08:20,960
does some great InfoSec research he does

1662
01:08:19,520 --> 01:08:23,720
these study pages where he just like

1663
01:08:20,960 --> 01:08:28,100
breaks down a tool into like you know a

1664
01:08:23,720 --> 01:08:29,690
very succinct guide he did one on math

1665
01:08:28,100 --> 01:08:33,080
scan and it shows all of the different

1666
01:08:29,689 --> 01:08:34,219
ways you can use math skin and I highly

1667
01:08:33,080 --> 01:08:36,519
suggest you check that out if you're

1668
01:08:34,220 --> 01:08:41,089
gonna be using this in your in your

1669
01:08:36,520 --> 01:08:44,450
recon so we talked a little bit about

1670
01:08:41,089 --> 01:08:47,300
that mask and only does ip's right which

1671
01:08:44,450 --> 01:08:53,019
a lot of the data that we have is is not

1672
01:08:47,300 --> 01:08:54,880
IPS it's domains and so rest rest a ting

1673
01:08:53,020 --> 01:08:59,770
rhasta tating i'm not exactly how you

1674
01:08:54,880 --> 01:09:01,870
say that but this person made a tool

1675
01:08:59,770 --> 01:09:04,630
called en masse scan which basically

1676
01:09:01,870 --> 01:09:07,540
adds the ability to do or resolve on a

1677
01:09:04,630 --> 01:09:10,690
domain get the IP address from it and

1678
01:09:07,540 --> 01:09:12,460
then pass that to masscan so you can

1679
01:09:10,689 --> 01:09:15,580
it's a wrapper around mask and you need

1680
01:09:12,460 --> 01:09:19,210
masks and installed and then you can see

1681
01:09:15,580 --> 01:09:20,620
you basically give it you can send it a

1682
01:09:19,210 --> 01:09:22,450
list or you can give it a single domain

1683
01:09:20,620 --> 01:09:25,540
but here I've you know the user is given

1684
01:09:22,450 --> 01:09:27,189
to the list example about txt the

1685
01:09:25,540 --> 01:09:30,910
outputs gonna go to a file called DNS

1686
01:09:27,189 --> 01:09:33,759
log it's he's looking for port 80 and

1687
01:09:30,910 --> 01:09:36,399
443 only and then setting an output file

1688
01:09:33,760 --> 01:09:38,170
of mask and log and so the first thing

1689
01:09:36,399 --> 01:09:41,290
that this script does is it will resolve

1690
01:09:38,170 --> 01:09:44,470
the domains into the DNS log folder and

1691
01:09:41,290 --> 01:09:47,319
then have masscan scan everything in the

1692
01:09:44,470 --> 01:09:50,589
DNS log folder so if you cat the DNS log

1693
01:09:47,319 --> 01:09:51,819
here you can see you know github these

1694
01:09:50,589 --> 01:09:54,790
are the sites that he had in that

1695
01:09:51,819 --> 01:09:56,950
example dot txt file github rest eating

1696
01:09:54,790 --> 01:09:59,470
that kid I've gotta go in Google and so

1697
01:09:56,950 --> 01:10:02,290
then you can see that it scanned all of

1698
01:09:59,470 --> 01:10:04,210
those IPs for ports 80 and 443 and

1699
01:10:02,290 --> 01:10:07,620
that's the general output of masking

1700
01:10:04,210 --> 01:10:10,000
right there which is parsable bye bye

1701
01:10:07,620 --> 01:10:13,180
grepping and you know our awk or sad or

1702
01:10:10,000 --> 01:10:14,710
something like that so so this is a good

1703
01:10:13,180 --> 01:10:16,120
way if you don't want to write a wrapper

1704
01:10:14,710 --> 01:10:18,880
of your own

1705
01:10:16,120 --> 01:10:20,710
I wrote a wrapper of my own but I might

1706
01:10:18,880 --> 01:10:24,130
be replacing it with something like DN

1707
01:10:20,710 --> 01:10:29,410
masscan so yeah good way to get around

1708
01:10:24,130 --> 01:10:33,430
that that limitation so once once we

1709
01:10:29,410 --> 01:10:35,110
have everything from a couple steps ago

1710
01:10:33,430 --> 01:10:39,100
we'll have a whole bunch of output files

1711
01:10:35,110 --> 01:10:46,509
from port scanning and if you do if you

1712
01:10:39,100 --> 01:10:48,730
do mask an and you and you then output

1713
01:10:46,510 --> 01:10:50,050
it and then you then use Oh a which

1714
01:10:48,730 --> 01:10:51,639
gives you all of the outputs that

1715
01:10:50,050 --> 01:10:53,970
normally nmap will give you it's a weird

1716
01:10:51,640 --> 01:10:59,530
feature mask and outputs in that output

1717
01:10:53,970 --> 01:11:03,070
you can use the nmap OG file and pass it

1718
01:10:59,530 --> 01:11:04,389
to this tool which will do service

1719
01:11:03,070 --> 01:11:06,400
scanning this is the next thing we want

1720
01:11:04,390 --> 01:11:07,390
to kind of do at a wide-scale so we want

1721
01:11:06,400 --> 01:11:09,360
to take all of those

1722
01:11:07,390 --> 01:11:12,820
mode administration protocols like FTP

1723
01:11:09,360 --> 01:11:15,549
an SMTP and SSH and telnet and just run

1724
01:11:12,820 --> 01:11:17,620
a small brute force word list

1725
01:11:15,550 --> 01:11:20,380
mostly default passwords like admin

1726
01:11:17,620 --> 01:11:23,170
admin or you know blank blank or root

1727
01:11:20,380 --> 01:11:25,540
root there's a small list in this in

1728
01:11:23,170 --> 01:11:28,870
this tool called bruits Bay bye bye

1729
01:11:25,540 --> 01:11:30,580
sneaks Nick and this will go out and

1730
01:11:28,870 --> 01:11:33,460
basically take all of the output from

1731
01:11:30,580 --> 01:11:35,860
our previous tools and identify the

1732
01:11:33,460 --> 01:11:37,450
ports you know that these remote

1733
01:11:35,860 --> 01:11:38,950
administration protocols are on from

1734
01:11:37,450 --> 01:11:41,290
that output and then it'll do a small

1735
01:11:38,950 --> 01:11:43,780
brute-force with Medusa across all of

1736
01:11:41,290 --> 01:11:44,950
them and so I've been using this for a

1737
01:11:43,780 --> 01:11:46,420
long time I haven't found like a

1738
01:11:44,950 --> 01:11:47,889
successor to this if you guys know of

1739
01:11:46,420 --> 01:11:51,580
something that's you know that's cool

1740
01:11:47,890 --> 01:11:54,490
that does this but it has found me you

1741
01:11:51,580 --> 01:11:57,809
know a bunch of dear you know default

1742
01:11:54,490 --> 01:12:00,460
FTP that you know had a anonymous login

1743
01:11:57,810 --> 01:12:02,890
I've definitely found SSH with like

1744
01:12:00,460 --> 01:12:05,770
admin stuff on it with admin admin I

1745
01:12:02,890 --> 01:12:09,430
found databases on you know on three

1746
01:12:05,770 --> 01:12:14,050
3:06 but other ports as well with

1747
01:12:09,430 --> 01:12:16,150
default passwords so a lot of a lot of

1748
01:12:14,050 --> 01:12:18,100
good can be found from just a simple

1749
01:12:16,150 --> 01:12:19,540
default credential tech on all of the

1750
01:12:18,100 --> 01:12:21,220
remote services and so this isn't

1751
01:12:19,540 --> 01:12:23,590
necessarily web a lot of people forget

1752
01:12:21,220 --> 01:12:25,810
about this step but service scanning and

1753
01:12:23,590 --> 01:12:31,600
doing a small group force is it's very

1754
01:12:25,810 --> 01:12:33,220
valuable so the next method which kind

1755
01:12:31,600 --> 01:12:36,610
of didn't fit anywhere but is still wide

1756
01:12:33,220 --> 01:12:39,430
scale ish I would I would call it wide

1757
01:12:36,610 --> 01:12:40,719
scale as github working so you know a

1758
01:12:39,430 --> 01:12:42,460
lot of organizations will quickly

1759
01:12:40,720 --> 01:12:44,200
outgrow their engineering teams or their

1760
01:12:42,460 --> 01:12:46,450
engineering teams will outgrow them or

1761
01:12:44,200 --> 01:12:48,330
you know whatever sooner or later a

1762
01:12:46,450 --> 01:12:50,980
developer is gonna put code on github

1763
01:12:48,330 --> 01:12:52,690
it's going to be in developer and in

1764
01:12:50,980 --> 01:12:54,009
turn a contractor they're gonna leak

1765
01:12:52,690 --> 01:12:57,960
some source code that's supposed to be

1766
01:12:54,010 --> 01:13:00,100
private in a public repo on github and

1767
01:12:57,960 --> 01:13:01,810
and they're gonna forget that they

1768
01:13:00,100 --> 01:13:03,280
didn't set it to private or they're

1769
01:13:01,810 --> 01:13:06,430
gonna sync it to their personal repo

1770
01:13:03,280 --> 01:13:11,110
instead of their work repo etc so I

1771
01:13:06,430 --> 01:13:13,840
built a little bash grip to basically in

1772
01:13:11,110 --> 01:13:16,000
the spirit of Google Dorking do some

1773
01:13:13,840 --> 01:13:18,580
github Dorking and so a lot of these

1774
01:13:16,000 --> 01:13:21,040
came from pre-existing tools like all of

1775
01:13:18,580 --> 01:13:24,510
the github repo kind of

1776
01:13:21,040 --> 01:13:26,620
ripping tools but I built them into

1777
01:13:24,510 --> 01:13:28,780
generic string so what it does is it's

1778
01:13:26,620 --> 01:13:30,280
just a Bosch file you entering your

1779
01:13:28,780 --> 01:13:32,290
domain in this case I've entered in

1780
01:13:30,280 --> 01:13:34,179
twitch.tv and it gives you a list of

1781
01:13:32,290 --> 01:13:36,160
clickable links hopefully your shell you

1782
01:13:34,180 --> 01:13:37,810
know can handle will build these as

1783
01:13:36,160 --> 01:13:40,720
clickable links and it'll just open

1784
01:13:37,810 --> 01:13:42,370
github if you're logged in it'll take

1785
01:13:40,720 --> 01:13:44,620
you to the search query for twitch.tv

1786
01:13:42,370 --> 01:13:48,519
and in this case password or docker

1787
01:13:44,620 --> 01:13:51,010
config or PEM private or s3 CFG and

1788
01:13:48,520 --> 01:13:53,290
these are all things I'm looking for so

1789
01:13:51,010 --> 01:13:56,980
I want to find the keyword twitch TV and

1790
01:13:53,290 --> 01:13:59,170
this keyword in in a repo somewhere

1791
01:13:56,980 --> 01:14:00,370
hopefully someone's you know done

1792
01:13:59,170 --> 01:14:02,680
something wrong and leaked something

1793
01:14:00,370 --> 01:14:04,140
online so I'm not necessarily looking at

1794
01:14:02,680 --> 01:14:07,390
twitches repos right these are

1795
01:14:04,140 --> 01:14:08,710
individuals repos that they've that you

1796
01:14:07,390 --> 01:14:11,470
know might be you know employees or

1797
01:14:08,710 --> 01:14:13,510
something like that so this is a very

1798
01:14:11,470 --> 01:14:15,220
common you know information disclosure

1799
01:14:13,510 --> 01:14:18,130
type vulnerability it can range from

1800
01:14:15,220 --> 01:14:21,190
benign when you find something using one

1801
01:14:18,130 --> 01:14:22,720
of these dorks that is no longer on the

1802
01:14:21,190 --> 01:14:25,210
internet or is internal so there's not a

1803
01:14:22,720 --> 01:14:26,920
lot of risk to critical where something

1804
01:14:25,210 --> 01:14:29,680
is on the internet and a password is

1805
01:14:26,920 --> 01:14:31,900
exposed and it works and or an API key

1806
01:14:29,680 --> 01:14:34,960
and there's tons of sensitive data you

1807
01:14:31,900 --> 01:14:36,820
can find in repos so you can automate

1808
01:14:34,960 --> 01:14:39,310
some of this instead of using kind of my

1809
01:14:36,820 --> 01:14:42,940
get my github clicking kind of

1810
01:14:39,310 --> 01:14:46,090
method here with gwendal github search

1811
01:14:42,940 --> 01:14:48,849
repo he's got some automated tools to do

1812
01:14:46,090 --> 01:14:50,170
github working as well so I would

1813
01:14:48,850 --> 01:14:54,070
suggest you check that out and then a

1814
01:14:50,170 --> 01:14:56,710
whole kind of roundup of this topic was

1815
01:14:54,070 --> 01:14:58,990
done by the gentleman who I consider to

1816
01:14:56,710 --> 01:15:00,580
be an expert in this domain and so he

1817
01:14:58,990 --> 01:15:02,320
did it for the bugcrowd university

1818
01:15:00,580 --> 01:15:04,540
project it's called github recon and

1819
01:15:02,320 --> 01:15:06,880
sensitive data exposure I highly

1820
01:15:04,540 --> 01:15:08,920
recommend checking that out because it's

1821
01:15:06,880 --> 01:15:11,020
got some great information

1822
01:15:08,920 --> 01:15:14,410
probably better tooling than I have here

1823
01:15:11,020 --> 01:15:16,120
maybe and just all-around good and smart

1824
01:15:14,410 --> 01:15:18,370
guy and gives you examples of stuff

1825
01:15:16,120 --> 01:15:21,210
you're supposed to look at but maybe you

1826
01:15:18,370 --> 01:15:24,460
can script up yourself so github working

1827
01:15:21,210 --> 01:15:27,310
in my workflow I'm doing github Dorking

1828
01:15:24,460 --> 01:15:30,460
Wow my subdomain scanners are running

1829
01:15:27,310 --> 01:15:31,960
and so you know I start everything off

1830
01:15:30,460 --> 01:15:34,000
with one script I've built my own

1831
01:15:31,960 --> 01:15:34,780
framework to start everything off I give

1832
01:15:34,000 --> 01:15:36,940
it a

1833
01:15:34,780 --> 01:15:38,950
i seed domain usually one like twitch.tv

1834
01:15:36,940 --> 01:15:40,500
calm it goes out

1835
01:15:38,950 --> 01:15:43,269
uses all the tools we've talked about

1836
01:15:40,500 --> 01:15:45,100
polls and new seed domains runs on those

1837
01:15:43,270 --> 01:15:45,970
does subdomain enumeration on those and

1838
01:15:45,100 --> 01:15:48,550
while it's doing the subdomain

1839
01:15:45,970 --> 01:15:50,410
enumeration which is usually the longest

1840
01:15:48,550 --> 01:15:52,780
thing to wait for in the whole process I

1841
01:15:50,410 --> 01:15:55,120
am doing this I am doing github working

1842
01:15:52,780 --> 01:15:57,670
and a lot of the times that well spent

1843
01:15:55,120 --> 01:16:00,010
20 minutes finds me if not verbatim

1844
01:15:57,670 --> 01:16:02,380
vulnerabilities valuable information

1845
01:16:00,010 --> 01:16:08,110
about how the infrastructure works or or

1846
01:16:02,380 --> 01:16:09,580
other things like that so the next area

1847
01:16:08,110 --> 01:16:10,900
that we have is you have a lot of

1848
01:16:09,580 --> 01:16:13,660
domains right now we have a lot of

1849
01:16:10,900 --> 01:16:15,400
attack service and you know you may feel

1850
01:16:13,660 --> 01:16:17,200
overwhelmed with just kind of opening

1851
01:16:15,400 --> 01:16:19,360
this up one by one this is a very

1852
01:16:17,200 --> 01:16:20,580
contentious kind to model I don't know

1853
01:16:19,360 --> 01:16:24,250
why

1854
01:16:20,580 --> 01:16:25,990
basically when I have a mind map of all

1855
01:16:24,250 --> 01:16:29,310
of the subdomains I found and I know

1856
01:16:25,990 --> 01:16:32,530
they're valid and I know they're live I

1857
01:16:29,310 --> 01:16:34,090
I just opened them up one by one in the

1858
01:16:32,530 --> 01:16:36,099
browser area I take ten at a time and I

1859
01:16:34,090 --> 01:16:38,110
open them up in chrome and when I opened

1860
01:16:36,100 --> 01:16:40,240
up in chrome I look at it and I'm like I

1861
01:16:38,110 --> 01:16:41,980
give it a quick eyeball I'm like is this

1862
01:16:40,240 --> 01:16:45,190
you know something I'm interested in

1863
01:16:41,980 --> 01:16:47,259
hacking you know is you know what kind

1864
01:16:45,190 --> 01:16:50,080
of functionality is on this site you

1865
01:16:47,260 --> 01:16:52,870
know or on this subdomain is it like a

1866
01:16:50,080 --> 01:16:55,269
redirect or etc so I can I have the

1867
01:16:52,870 --> 01:16:58,170
eyeball to do that and I do it manually

1868
01:16:55,270 --> 01:17:01,390
I want to do it in the browser because

1869
01:16:58,170 --> 01:17:04,810
it I don't miss anything basically but

1870
01:17:01,390 --> 01:17:06,910
it can be helpful to prioritize your

1871
01:17:04,810 --> 01:17:09,190
testing and your large list of attack

1872
01:17:06,910 --> 01:17:11,380
surface that we've gathered by taking a

1873
01:17:09,190 --> 01:17:14,860
screenshot via the command line and so

1874
01:17:11,380 --> 01:17:17,230
there's several tools that do this aqua

1875
01:17:14,860 --> 01:17:19,809
tone does this HTTP screenshot does this

1876
01:17:17,230 --> 01:17:23,490
and eyewitness does this I've used all

1877
01:17:19,810 --> 01:17:23,490
three and you know

1878
01:17:29,059 --> 01:17:34,679
it's interesting because I thought that

1879
01:17:32,479 --> 01:17:36,150
aqua tone was doing the best job of

1880
01:17:34,679 --> 01:17:38,090
actually not failing at taking

1881
01:17:36,150 --> 01:17:40,079
screenshots sometimes because the

1882
01:17:38,090 --> 01:17:41,880
screenshotting technology is there based

1883
01:17:40,079 --> 01:17:43,710
off of headless browsers sometimes or

1884
01:17:41,880 --> 01:17:47,369
chromium command line or you know

1885
01:17:43,710 --> 01:17:48,840
whatever but then I talked to Ben and we

1886
01:17:47,369 --> 01:17:50,999
are talking about our experience in

1887
01:17:48,840 --> 01:17:52,889
recon he actually finds the Aqua tone

1888
01:17:50,999 --> 01:17:54,389
doesn't work as well or is less stable

1889
01:17:52,889 --> 01:17:55,559
than eyewitness and then you talk to

1890
01:17:54,389 --> 01:17:57,030
other people and they use HTTP

1891
01:17:55,559 --> 01:17:59,849
screenshots to find the one you think

1892
01:17:57,030 --> 01:18:02,070
works well for you in the end what it

1893
01:17:59,849 --> 01:18:04,019
will give you is a directory of

1894
01:18:02,070 --> 01:18:07,228
screenshots one of the reasons I used

1895
01:18:04,019 --> 01:18:09,690
eyewitness is because back then when I

1896
01:18:07,229 --> 01:18:13,679
started my recon scripts Tom nom noms

1897
01:18:09,690 --> 01:18:17,369
HTTP probe wasn't out yet and so I

1898
01:18:13,679 --> 01:18:20,969
witness will prepend HTTP and HTTPS and

1899
01:18:17,369 --> 01:18:22,920
take a screenshot of both and and that

1900
01:18:20,969 --> 01:18:24,630
does that work for me of adding a domain

1901
01:18:22,920 --> 01:18:26,340
to it and telling me if you know which

1902
01:18:24,630 --> 01:18:28,739
one of those is active because remember

1903
01:18:26,340 --> 01:18:30,900
we're feeding it a list of domains not

1904
01:18:28,739 --> 01:18:32,369
necessarily with a protocol and so here

1905
01:18:30,900 --> 01:18:34,199
it'll just try both protocols for each

1906
01:18:32,369 --> 01:18:36,030
domain and that was useful to me so

1907
01:18:34,199 --> 01:18:37,348
that's why I used eyewitness to start

1908
01:18:36,030 --> 01:18:40,889
out in a lot of my testing but now

1909
01:18:37,349 --> 01:18:43,979
before I even get here I'm using Tom nom

1910
01:18:40,889 --> 01:18:46,050
noms HTTP probe to verify if HTTP or

1911
01:18:43,979 --> 01:18:48,539
HTTPS is up for that domain and only

1912
01:18:46,050 --> 01:18:53,639
feeding then that domain to or that URL

1913
01:18:48,539 --> 01:18:56,009
to iwitness later next on the topic list

1914
01:18:53,639 --> 01:18:57,389
of wide recon and kind of exhilarating

1915
01:18:56,010 --> 01:18:59,670
is to do is this idea of subdomain

1916
01:18:57,389 --> 01:19:01,710
takeover and I talked about this before

1917
01:18:59,670 --> 01:19:03,900
in previous talks and there's been a lot

1918
01:19:01,710 --> 01:19:05,699
of tooling that's gone up and down

1919
01:19:03,900 --> 01:19:08,549
around this topic but the idea here is

1920
01:19:05,699 --> 01:19:09,839
that is that subdomain vulnerability so

1921
01:19:08,550 --> 01:19:13,650
sometime a takeover vulnerabilities

1922
01:19:09,840 --> 01:19:16,469
exist when someone basically points or

1923
01:19:13,650 --> 01:19:21,268
registers a service which supplies a

1924
01:19:16,469 --> 01:19:22,829
cname to a service company like github

1925
01:19:21,269 --> 01:19:25,499
pages or Heroku or something like that

1926
01:19:22,829 --> 01:19:27,599
and then they discontinue their service

1927
01:19:25,499 --> 01:19:29,190
and so that cname is still out in the

1928
01:19:27,599 --> 01:19:32,360
wild and if you go to it it will

1929
01:19:29,190 --> 01:19:34,768
basically forward you to a page that

1930
01:19:32,360 --> 01:19:36,808
then says there's no more service for

1931
01:19:34,769 --> 01:19:40,320
that and so a hacker can go ahead and

1932
01:19:36,809 --> 01:19:41,429
register with that service the same

1933
01:19:40,320 --> 01:19:43,380
cname

1934
01:19:41,429 --> 01:19:47,459
and then they can take over legitimate

1935
01:19:43,380 --> 01:19:51,780
traffic of one of your former domains so

1936
01:19:47,459 --> 01:19:53,789
this is this is a parent in a lot of

1937
01:19:51,780 --> 01:19:55,530
places it's pretty common decently

1938
01:19:53,789 --> 01:19:57,268
common in bug bounty and you can

1939
01:19:55,530 --> 01:19:59,429
automate this in the Recon flow to look

1940
01:19:57,269 --> 01:20:00,959
for this because the signatures are

1941
01:19:59,429 --> 01:20:04,139
literally just error pages that you're

1942
01:20:00,959 --> 01:20:07,469
parsing for a great database that many

1943
01:20:04,139 --> 01:20:11,849
of the newer tools are using to parse

1944
01:20:07,469 --> 01:20:14,969
out this data is e d overflows can I

1945
01:20:11,849 --> 01:20:18,300
take over XYZ repo which has definitions

1946
01:20:14,969 --> 01:20:20,729
for all of these services and small

1947
01:20:18,300 --> 01:20:23,550
tidbit about you know if you can take

1948
01:20:20,729 --> 01:20:26,729
over this the answer is yes and how so

1949
01:20:23,550 --> 01:20:28,579
and it's a really cool repo in fact Edie

1950
01:20:26,729 --> 01:20:31,499
overflow is one of the community's

1951
01:20:28,579 --> 01:20:33,959
coolest ambassadors and really cool

1952
01:20:31,499 --> 01:20:39,599
hacker he does a lot of great work so I

1953
01:20:33,959 --> 01:20:41,309
really appreciate that repo so for

1954
01:20:39,599 --> 01:20:44,010
something may take over there's two

1955
01:20:41,309 --> 01:20:46,380
tools that I prefer and they're kind of

1956
01:20:44,010 --> 01:20:49,139
related right so sub over and nuclei and

1957
01:20:46,380 --> 01:20:52,170
so sub over previously was written as a

1958
01:20:49,139 --> 01:20:53,880
standalone tool by Iceman who joined the

1959
01:20:52,170 --> 01:20:58,619
again we're mentioning the project

1960
01:20:53,880 --> 01:21:02,280
Discovery's team basically and so sub

1961
01:20:58,619 --> 01:21:05,159
over had the most signatures for

1962
01:21:02,280 --> 01:21:09,179
subdomain takeover to find these

1963
01:21:05,159 --> 01:21:11,009
services and see names and recently

1964
01:21:09,179 --> 01:21:15,780
that's been incorporated into project

1965
01:21:11,010 --> 01:21:19,530
discoveries nuclei scanner and so nuclei

1966
01:21:15,780 --> 01:21:22,889
is a larger scanning framework it is it

1967
01:21:19,530 --> 01:21:24,239
is part of their overall I think you

1968
01:21:22,889 --> 01:21:25,769
know what's gonna be either a paid

1969
01:21:24,239 --> 01:21:27,919
offering or something like that but

1970
01:21:25,769 --> 01:21:31,199
they're open sourcing all of the small

1971
01:21:27,920 --> 01:21:34,650
individual components and so nuclei has

1972
01:21:31,199 --> 01:21:37,499
scans for misconfigurations like buckets

1973
01:21:34,650 --> 01:21:39,749
and subdomain takeover and for batum

1974
01:21:37,499 --> 01:21:41,340
vulnerabilities and token leaks and can

1975
01:21:39,749 --> 01:21:44,539
do technology profiles so nuclei can

1976
01:21:41,340 --> 01:21:49,530
really do a ton of stuff but its

1977
01:21:44,539 --> 01:21:52,499
subdomain takeover templates are the

1978
01:21:49,530 --> 01:21:54,449
most comprehensive I've seen at this

1979
01:21:52,499 --> 01:21:55,739
point in

1980
01:21:54,449 --> 01:21:57,419
and kind of bounty hunting so I think

1981
01:21:55,739 --> 01:21:59,789
there's I think there's upwards of like

1982
01:21:57,420 --> 01:22:03,389
forty or fifty or something like that in

1983
01:21:59,789 --> 01:22:05,759
the subdomain take over part of the tool

1984
01:22:03,389 --> 01:22:09,179
so these would be the ones I would use

1985
01:22:05,760 --> 01:22:10,920
to integrate that I would actually spin

1986
01:22:09,179 --> 01:22:13,050
up nucleus and just use their template

1987
01:22:10,920 --> 01:22:14,340
and their checks for subdomain takeover

1988
01:22:13,050 --> 01:22:18,449
although all of their checks were

1989
01:22:14,340 --> 01:22:21,659
probably useful so now I'm going to talk

1990
01:22:18,449 --> 01:22:24,058
a little bit about automation plus plus

1991
01:22:21,659 --> 01:22:25,920
and this is just the idea of like you

1992
01:22:24,059 --> 01:22:28,340
know a lot of this is a work flow and

1993
01:22:25,920 --> 01:22:30,570
you've heard me talk about I have my own

1994
01:22:28,340 --> 01:22:32,940
automation and if you've ever watched me

1995
01:22:30,570 --> 01:22:35,039
stream you can see that I have some like

1996
01:22:32,940 --> 01:22:36,659
you know really crummy bash scripts that

1997
01:22:35,039 --> 01:22:40,170
I used to do some of this stuff and

1998
01:22:36,659 --> 01:22:42,570
we're gonna go through a little bit of

1999
01:22:40,170 --> 01:22:43,920
some automation helpers and then some

2000
01:22:42,570 --> 01:22:47,940
frameworks that exist and stuff like

2001
01:22:43,920 --> 01:22:49,829
that so one of the extending tools you

2002
01:22:47,940 --> 01:22:51,900
can use in automation is a tool called

2003
01:22:49,829 --> 01:22:53,780
interlace which i think is awesome so

2004
01:22:51,900 --> 01:22:57,259
this is again written by Michael Skelton

2005
01:22:53,780 --> 01:23:00,059
coding go and what interlaced will do is

2006
01:22:57,260 --> 01:23:02,150
basically at some point you'll make one

2007
01:23:00,059 --> 01:23:04,469
of these recon frameworks at yourself

2008
01:23:02,150 --> 01:23:07,348
hopefully and you'll notice that not all

2009
01:23:04,469 --> 01:23:09,959
the tools take certain types of input or

2010
01:23:07,349 --> 01:23:12,119
some like threading or not all can be

2011
01:23:09,959 --> 01:23:14,010
distributed across across different

2012
01:23:12,119 --> 01:23:15,268
servers and proxies and so you have a

2013
01:23:14,010 --> 01:23:18,959
couple options you can rewrite these

2014
01:23:15,269 --> 01:23:20,369
tools yourself but you can also if you

2015
01:23:18,959 --> 01:23:22,229
don't want to do that you can use a tool

2016
01:23:20,369 --> 01:23:24,690
like interlace to help you write so

2017
01:23:22,229 --> 01:23:26,789
inner lace will basically allow you to

2018
01:23:24,690 --> 01:23:29,308
take a tool that doesn't support

2019
01:23:26,789 --> 01:23:31,199
something like cider input or glob input

2020
01:23:29,309 --> 01:23:33,179
those are usually you're used to using

2021
01:23:31,199 --> 01:23:36,119
those an nmap right you can scan a whole

2022
01:23:33,179 --> 01:23:37,949
range and map or you can scan you know

2023
01:23:36,119 --> 01:23:40,228
three octaves and then put a star and

2024
01:23:37,949 --> 01:23:43,379
that's a glob right or an asterisk and

2025
01:23:40,229 --> 01:23:47,070
that's glob input so you can add support

2026
01:23:43,380 --> 01:23:49,380
for cider input and glob input to to any

2027
01:23:47,070 --> 01:23:52,579
tool by wrapping it in interlace you can

2028
01:23:49,380 --> 01:23:55,559
thread any tool which is amazing by

2029
01:23:52,579 --> 01:23:58,530
wrapping it with interlace you can proxy

2030
01:23:55,559 --> 01:24:01,079
any tool and you can build giant sets of

2031
01:23:58,530 --> 01:24:05,219
cute commands or even threaded commands

2032
01:24:01,079 --> 01:24:07,739
to be applied to a set of commands that

2033
01:24:05,219 --> 01:24:10,199
you build for

2034
01:24:07,739 --> 01:24:11,730
for your automation so it can do some

2035
01:24:10,199 --> 01:24:14,280
really cool stuff hack Luke wrote a

2036
01:24:11,730 --> 01:24:15,900
great guide on it if you click that link

2037
01:24:14,280 --> 01:24:17,670
down there this is from his guy he

2038
01:24:15,900 --> 01:24:20,969
basically talks about you know before

2039
01:24:17,670 --> 01:24:22,530
when he wanted to run nikto he would

2040
01:24:20,969 --> 01:24:24,809
have to write a bash drip right which

2041
01:24:22,530 --> 01:24:27,268
would take all of the hosts you know

2042
01:24:24,809 --> 01:24:29,460
that he had in a targets file and run

2043
01:24:27,269 --> 01:24:31,530
NICTA one-on-one secuence okay

2044
01:24:29,460 --> 01:24:34,739
sequentially I mean I guess you could

2045
01:24:31,530 --> 01:24:36,329
have done this with parallels but you

2046
01:24:34,739 --> 01:24:38,669
know it's kind of glom me to script it

2047
01:24:36,329 --> 01:24:40,590
up that way too but this way he's

2048
01:24:38,670 --> 01:24:42,630
wrapped it in interlace and he's given

2049
01:24:40,590 --> 01:24:45,059
it a target file and he said I want five

2050
01:24:42,630 --> 01:24:48,409
threads and he's put his Nick Doe syntax

2051
01:24:45,059 --> 01:24:50,969
and now it will thread it will thread up

2052
01:24:48,409 --> 01:24:52,739
Nick doe which is pretty cool so he has

2053
01:24:50,969 --> 01:24:54,599
other examples in this file and so

2054
01:24:52,739 --> 01:24:56,579
interlace is really one of those tools

2055
01:24:54,599 --> 01:25:00,659
that will help you kind of get past some

2056
01:24:56,579 --> 01:25:03,058
of the deficiencies in in automating

2057
01:25:00,659 --> 01:25:04,860
some of your workflow so we've mentioned

2058
01:25:03,059 --> 01:25:06,929
Tom nomnom and he was on yesterday with

2059
01:25:04,860 --> 01:25:09,780
a great presentation about building word

2060
01:25:06,929 --> 01:25:11,519
lists and I didn't just want to make

2061
01:25:09,780 --> 01:25:13,079
like a whole giant section of every one

2062
01:25:11,519 --> 01:25:15,559
of his tools because honestly every one

2063
01:25:13,079 --> 01:25:18,929
of his tools is awesome so Tom nomnom

2064
01:25:15,559 --> 01:25:20,099
first of all great person at least you

2065
01:25:18,929 --> 01:25:21,570
know I don't know I'm super super well

2066
01:25:20,099 --> 01:25:23,039
but Tom nomnom has always been like

2067
01:25:21,570 --> 01:25:24,268
super cool in the streams and just seems

2068
01:25:23,039 --> 01:25:26,880
like a chill dude

2069
01:25:24,269 --> 01:25:29,670
and you know I use several of these

2070
01:25:26,880 --> 01:25:31,019
tools to glue together glue together

2071
01:25:29,670 --> 01:25:33,630
different parts of the methodology

2072
01:25:31,019 --> 01:25:36,059
grande makes JSON grep bubble so it's an

2073
01:25:33,630 --> 01:25:38,309
awesome tool to parse things too I use

2074
01:25:36,059 --> 01:25:40,320
HTTP probe a bunch when I get a list of

2075
01:25:38,309 --> 01:25:42,480
domains out of all of these tools it is

2076
01:25:40,320 --> 01:25:45,900
the middleware that verifies that the

2077
01:25:42,480 --> 01:25:47,669
HTTPS or HTTP server is up and it will I

2078
01:25:45,900 --> 01:25:50,009
just feed it lists of subdomains and

2079
01:25:47,670 --> 01:25:51,480
domains and it will check so it sits

2080
01:25:50,010 --> 01:25:53,070
right in the middle of all my automated

2081
01:25:51,480 --> 01:25:56,009
tooling he has an asset finder tool

2082
01:25:53,070 --> 01:26:00,179
which I haven't used yet so I check it

2083
01:25:56,010 --> 01:26:01,559
out he has a wayback tool meg is a is a

2084
01:26:00,179 --> 01:26:02,849
really awesome tool so he's got a ton of

2085
01:26:01,559 --> 01:26:05,610
stuff you should definitely check out

2086
01:26:02,849 --> 01:26:08,539
his repo and any of his streams or

2087
01:26:05,610 --> 01:26:11,249
interviews he's also just a bash ninja

2088
01:26:08,539 --> 01:26:16,289
so yeah check out the stuff that he does

2089
01:26:11,249 --> 01:26:18,150
it's pretty awesome so now I'm gonna

2090
01:26:16,289 --> 01:26:19,739
talk a tiny bit about frameworks right

2091
01:26:18,150 --> 01:26:21,099
and so you know we've talked about all

2092
01:26:19,739 --> 01:26:23,440
these tools and you

2093
01:26:21,100 --> 01:26:25,660
leading into the idea of automation and

2094
01:26:23,440 --> 01:26:26,950
I use automation when I feel like it's

2095
01:26:25,660 --> 01:26:27,970
right and then in other places I'm

2096
01:26:26,950 --> 01:26:30,660
pretty stubborn and I won't use

2097
01:26:27,970 --> 01:26:33,460
automation at all so I'm a weirdo but

2098
01:26:30,660 --> 01:26:36,940
frameworks frameworks nowadays are

2099
01:26:33,460 --> 01:26:39,160
pretty are pretty prevalent for recon

2100
01:26:36,940 --> 01:26:41,559
right recon frameworks and so if recon

2101
01:26:39,160 --> 01:26:44,559
is not really your thing that's cool

2102
01:26:41,560 --> 01:26:46,300
several hunters or pen testers of open

2103
01:26:44,560 --> 01:26:49,450
source their automation at this point so

2104
01:26:46,300 --> 01:26:51,040
you can choose one and just not worry

2105
01:26:49,450 --> 01:26:52,780
about it too much install you know a

2106
01:26:51,040 --> 01:26:55,450
docker container or just set up their

2107
01:26:52,780 --> 01:26:57,519
bash script and it will you know string

2108
01:26:55,450 --> 01:26:59,230
together a whole bunch of tools and get

2109
01:26:57,520 --> 01:27:02,140
you the output you need to do the

2110
01:26:59,230 --> 01:27:04,360
application analysis park so I usually

2111
01:27:02,140 --> 01:27:06,610
classify recon frameworks in in rough

2112
01:27:04,360 --> 01:27:10,839
tears veteran rough is very subjective

2113
01:27:06,610 --> 01:27:14,349
and very rough right CTR btr-80 R and s

2114
01:27:10,840 --> 01:27:16,930
here and when I when I talk about CT R I

2115
01:27:14,350 --> 01:27:18,280
talk about you know automation or

2116
01:27:16,930 --> 01:27:20,560
frameworks that are really just

2117
01:27:18,280 --> 01:27:23,380
scripting together other tools and bash

2118
01:27:20,560 --> 01:27:24,700
or Python sometimes they're step based

2119
01:27:23,380 --> 01:27:26,560
and they don't really have a workflow to

2120
01:27:24,700 --> 01:27:28,630
bring back into information to the start

2121
01:27:26,560 --> 01:27:30,430
of the workflow there's not a ton of

2122
01:27:28,630 --> 01:27:33,700
techniques and there's not a lot of

2123
01:27:30,430 --> 01:27:38,110
extensibility for the framework in beats

2124
01:27:33,700 --> 01:27:39,910
here I talked about automation you know

2125
01:27:38,110 --> 01:27:41,200
the automation in it maybe they're

2126
01:27:39,910 --> 01:27:43,480
writing some of their own checks or

2127
01:27:41,200 --> 01:27:45,070
modules that could possibly put

2128
01:27:43,480 --> 01:27:49,299
something in the beat here they have

2129
01:27:45,070 --> 01:27:50,889
maybe a GUI or an advanced workflow that

2130
01:27:49,300 --> 01:27:53,890
does bring things back into a queueing

2131
01:27:50,890 --> 01:27:57,280
system to restart on them they have a

2132
01:27:53,890 --> 01:27:58,750
medium amount of techniques you know so

2133
01:27:57,280 --> 01:28:02,440
they're looking for more than just

2134
01:27:58,750 --> 01:28:04,390
subdomain enumeration they run point in

2135
01:28:02,440 --> 01:28:06,129
time usually so this is a negative right

2136
01:28:04,390 --> 01:28:07,630
they run once and then you have output

2137
01:28:06,130 --> 01:28:10,180
that's done and usually they're tracking

2138
01:28:07,630 --> 01:28:13,120
everything via flat files or output like

2139
01:28:10,180 --> 01:28:15,490
a JSON or XML or flat files right then

2140
01:28:13,120 --> 01:28:17,349
you move on to like a tier which is you

2141
01:28:15,490 --> 01:28:19,840
could be writing all your own modules or

2142
01:28:17,350 --> 01:28:21,730
most your own modules or you have a ton

2143
01:28:19,840 --> 01:28:25,090
of modules could also push you up into a

2144
01:28:21,730 --> 01:28:26,589
tier usually has like a GUI it runs

2145
01:28:25,090 --> 01:28:30,400
iteratively which means that it

2146
01:28:26,590 --> 01:28:32,260
basically will run at one point in time

2147
01:28:30,400 --> 01:28:34,719
and then run again and show you the diff

2148
01:28:32,260 --> 01:28:35,030
and usually manages data via database

2149
01:28:34,720 --> 01:28:36,619
there's

2150
01:28:35,030 --> 01:28:37,579
a ton and eights here in fact the ones I

2151
01:28:36,619 --> 01:28:40,429
put in eighths here in this presentation

2152
01:28:37,579 --> 01:28:41,808
are like they don't even actually have

2153
01:28:40,429 --> 01:28:45,079
all of these they could probably fit

2154
01:28:41,809 --> 01:28:46,730
more into beats here but but I thought

2155
01:28:45,079 --> 01:28:49,039
some were better than beat here so I

2156
01:28:46,730 --> 01:28:52,098
kind of pushed open it here anyway and

2157
01:28:49,039 --> 01:28:53,780
then s tier and these are these are the

2158
01:28:52,099 --> 01:28:56,150
tools that most likely you're gonna run

2159
01:28:53,780 --> 01:28:57,349
into that are paid right like these are

2160
01:28:56,150 --> 01:28:59,780
these are things that people are trying

2161
01:28:57,349 --> 01:29:01,940
to build a business off or or something

2162
01:28:59,780 --> 01:29:04,730
like that but they have all their own

2163
01:29:01,940 --> 01:29:07,549
modules rewritten usually they have an

2164
01:29:04,730 --> 01:29:09,500
extensively pretty GUI they run

2165
01:29:07,550 --> 01:29:11,210
iteratively and show you changes they

2166
01:29:09,500 --> 01:29:13,670
manage everything be a database they

2167
01:29:11,210 --> 01:29:16,369
have lots of extensibility they scale

2168
01:29:13,670 --> 01:29:18,260
across multiple boxes usually they're

2169
01:29:16,369 --> 01:29:20,239
run as a SAS service they'll send alerts

2170
01:29:18,260 --> 01:29:22,190
to you when things happen and they have

2171
01:29:20,239 --> 01:29:23,869
like novel techniques and they iterate

2172
01:29:22,190 --> 01:29:26,449
quickly when new technologies come out

2173
01:29:23,869 --> 01:29:28,429
or when new when new ways of doing recon

2174
01:29:26,449 --> 01:29:31,400
come out and sometimes they're supported

2175
01:29:28,429 --> 01:29:33,260
by like actual algorithms I say ml or AI

2176
01:29:31,400 --> 01:29:34,429
and usually those are just buzzwords a

2177
01:29:33,260 --> 01:29:36,079
lot of time it's just like actual

2178
01:29:34,429 --> 01:29:38,719
algorithms that are that are coded

2179
01:29:36,079 --> 01:29:41,389
pretty well so I didn't have a ton of

2180
01:29:38,719 --> 01:29:43,460
time to like you know like go over each

2181
01:29:41,389 --> 01:29:45,079
of these right but what I wanted to do

2182
01:29:43,460 --> 01:29:47,030
is list out some of the ones I had found

2183
01:29:45,079 --> 01:29:48,829
to just give you an idea right if you

2184
01:29:47,030 --> 01:29:50,630
want to write your own you want to see

2185
01:29:48,829 --> 01:29:51,769
what other people are doing or if you

2186
01:29:50,630 --> 01:29:53,329
want to go through every one of these

2187
01:29:51,770 --> 01:29:54,980
and like you know add the things that

2188
01:29:53,329 --> 01:29:56,780
you're missing to yours or just kind of

2189
01:29:54,980 --> 01:29:58,129
see what other people have done and each

2190
01:29:56,780 --> 01:30:00,650
one of these there's something special

2191
01:29:58,130 --> 01:30:02,960
each one of them each one of them the

2192
01:30:00,650 --> 01:30:05,000
person has you know done a couple of

2193
01:30:02,960 --> 01:30:08,090
lines of adding this tool or they've

2194
01:30:05,000 --> 01:30:09,980
parsed in some better way or you know if

2195
01:30:08,090 --> 01:30:11,690
you're doing argh parsing you know what

2196
01:30:09,980 --> 01:30:13,070
the other ones aren't or you know just

2197
01:30:11,690 --> 01:30:15,860
random stuff and I'd love to look at

2198
01:30:13,070 --> 01:30:19,039
other people's code it's always better

2199
01:30:15,860 --> 01:30:21,139
than mine and and check it out and see

2200
01:30:19,039 --> 01:30:22,849
see what's going on so in the seater

2201
01:30:21,139 --> 01:30:24,530
list I have a bunch here the one that's

2202
01:30:22,849 --> 01:30:26,869
shown on the right is ultimate recon and

2203
01:30:24,530 --> 01:30:29,539
I like this one this one's pretty new

2204
01:30:26,869 --> 01:30:33,199
and they're actually using that nuclei

2205
01:30:29,539 --> 01:30:37,130
scanner as a subcomponent of their their

2206
01:30:33,199 --> 01:30:40,759
kind of tree of recon right and and just

2207
01:30:37,130 --> 01:30:42,619
for you know just for transparency sake

2208
01:30:40,760 --> 01:30:44,989
this was this would be the tier that my

2209
01:30:42,619 --> 01:30:48,920
automation fits into would be seat here

2210
01:30:44,989 --> 01:30:50,570
right mine is all bosch based it is

2211
01:30:48,920 --> 01:30:52,130
read it and it does have a workflow but

2212
01:30:50,570 --> 01:30:55,219
it's still all in the command line it's

2213
01:30:52,130 --> 01:30:58,310
only doing certain things no you know no

2214
01:30:55,219 --> 01:30:59,929
GUI and I'm still utilizing other tools

2215
01:30:58,310 --> 01:31:02,179
I'm not writing a lot of my own checks

2216
01:30:59,929 --> 01:31:04,370
and that's a personal preference and

2217
01:31:02,179 --> 01:31:06,679
ability kind of thing but um but yeah

2218
01:31:04,370 --> 01:31:09,739
absolutely so mine would fit into C tier

2219
01:31:06,679 --> 01:31:12,010
as well then you have kind of like B

2220
01:31:09,739 --> 01:31:14,449
tier and a tier

2221
01:31:12,010 --> 01:31:16,130
lazy recon uh she was the first one here

2222
01:31:14,449 --> 01:31:17,419
and it's it shows like their workflow in

2223
01:31:16,130 --> 01:31:19,429
the upper right and I actually say lazy

2224
01:31:17,420 --> 01:31:22,179
recon probably fits in a tier if I had

2225
01:31:19,429 --> 01:31:24,320
to think about it a little bit more but

2226
01:31:22,179 --> 01:31:25,580
there's a whole bunch in here that you

2227
01:31:24,320 --> 01:31:28,519
know basically have a whole bunch more

2228
01:31:25,580 --> 01:31:29,929
checks and you can check them out eight

2229
01:31:28,520 --> 01:31:33,140
here you know you're starting to get

2230
01:31:29,929 --> 01:31:37,040
some goo ease and or just like massive

2231
01:31:33,140 --> 01:31:38,929
amounts of checks or maybe even some

2232
01:31:37,040 --> 01:31:41,449
writing of your own stuff maybe even

2233
01:31:38,929 --> 01:31:44,929
even some alerting I mean when you start

2234
01:31:41,449 --> 01:31:46,339
to get into a tier frameworks you know

2235
01:31:44,929 --> 01:31:47,960
like you'll notice that some of them are

2236
01:31:46,340 --> 01:31:50,210
turning into these like managed service

2237
01:31:47,960 --> 01:31:52,760
type things so like find domain used to

2238
01:31:50,210 --> 01:31:55,190
be a you know free and there is still a

2239
01:31:52,760 --> 01:31:57,260
free version but the sat there's like a

2240
01:31:55,190 --> 01:31:59,570
SAS offering now that includes these

2241
01:31:57,260 --> 01:32:02,870
functions of like you know slacking you

2242
01:31:59,570 --> 01:32:05,000
or telegram in you when a new domain is

2243
01:32:02,870 --> 01:32:06,739
found and it keeps iterative scan data

2244
01:32:05,000 --> 01:32:08,600
over you know years or months or

2245
01:32:06,739 --> 01:32:11,089
something like that and so that one's a

2246
01:32:08,600 --> 01:32:12,739
SAS service now that you know someone's

2247
01:32:11,090 --> 01:32:14,780
trying to get you know paid for which

2248
01:32:12,739 --> 01:32:15,709
you know makes a little sense but you

2249
01:32:14,780 --> 01:32:19,670
know you're starting to get to that

2250
01:32:15,710 --> 01:32:22,280
level in a tier and then you have what I

2251
01:32:19,670 --> 01:32:24,050
consider s tier right so Jake ran was on

2252
01:32:22,280 --> 01:32:25,730
yesterday I hope he doesn't get mad at

2253
01:32:24,050 --> 01:32:29,960
me because I took a screenshot of the

2254
01:32:25,730 --> 01:32:32,030
dashboard but intrigue is super powerful

2255
01:32:29,960 --> 01:32:36,860
not only is Jake ran writing all of his

2256
01:32:32,030 --> 01:32:38,780
own modules he works fast

2257
01:32:36,860 --> 01:32:40,699
in fact anytime I give him an idea and

2258
01:32:38,780 --> 01:32:42,110
probably seconds after I finished his

2259
01:32:40,699 --> 01:32:43,549
presentation if there's anything that he

2260
01:32:42,110 --> 01:32:45,679
doesn't have an intrigue it's gonna be

2261
01:32:43,550 --> 01:32:48,230
in there really quick he's just a sharp

2262
01:32:45,679 --> 01:32:51,980
dude I'm lucky to know him and an

2263
01:32:48,230 --> 01:32:55,000
intrigue is awesome it it has you know

2264
01:32:51,980 --> 01:32:58,129
all of the tracking and iterative

2265
01:32:55,000 --> 01:33:01,100
features and it's just it's just really

2266
01:32:58,130 --> 01:33:02,539
good asset note there's another one

2267
01:33:01,100 --> 01:33:04,369
right so ask that note orig

2268
01:33:02,539 --> 01:33:05,959
was open-source you know like five years

2269
01:33:04,369 --> 01:33:09,619
ago or six years ago or something like

2270
01:33:05,959 --> 01:33:11,959
that and then they turned it into they

2271
01:33:09,619 --> 01:33:14,808
turned it into a SAS offering right so

2272
01:33:11,959 --> 01:33:17,479
this is a paid service but you can see

2273
01:33:14,809 --> 01:33:19,879
the kind of advancements on the GUI

2274
01:33:17,479 --> 01:33:21,289
right and assets discovered and they

2275
01:33:19,879 --> 01:33:24,469
have vulnerability checks that they're

2276
01:33:21,289 --> 01:33:25,938
doing and it's just really really slick

2277
01:33:24,469 --> 01:33:28,819
right and you know asset and that's

2278
01:33:25,939 --> 01:33:32,569
probably a b2b business to business type

2279
01:33:28,819 --> 01:33:37,010
SAS software so you know many bounty

2280
01:33:32,569 --> 01:33:38,899
hunters are not gonna pay to that large

2281
01:33:37,010 --> 01:33:40,760
amount of money to get access to asset

2282
01:33:38,899 --> 01:33:43,369
note but if you're a company and you

2283
01:33:40,760 --> 01:33:45,319
want to do asset management and you want

2284
01:33:43,369 --> 01:33:47,808
like hardcore recon you know you could

2285
01:33:45,319 --> 01:33:49,609
pay for something like intrigue or asset

2286
01:33:47,809 --> 01:33:50,959
no right the cool thing about intrigue

2287
01:33:49,609 --> 01:33:54,289
is that you know Jake ran talked about

2288
01:33:50,959 --> 01:33:57,679
it is that the core is open source and a

2289
01:33:54,289 --> 01:34:00,339
lot of the code is open source so you

2290
01:33:57,679 --> 01:34:04,939
know what you pay for is the SAS hosted

2291
01:34:00,339 --> 01:34:06,519
version asset note I don't think is is

2292
01:34:04,939 --> 01:34:10,129
like that anymore

2293
01:34:06,519 --> 01:34:13,369
another one is Spyder foot I haven't had

2294
01:34:10,129 --> 01:34:15,649
a ton of experience with Spyder foot in

2295
01:34:13,369 --> 01:34:16,759
fact I was given like a review copy to

2296
01:34:15,649 --> 01:34:18,319
just check it out I just didn't have

2297
01:34:16,760 --> 01:34:21,019
time because like everything was crazy

2298
01:34:18,319 --> 01:34:22,879
with Co vid but I did check I did kind

2299
01:34:21,019 --> 01:34:25,189
of like log in for a little while and

2300
01:34:22,879 --> 01:34:28,608
the visualization is kind of off the

2301
01:34:25,189 --> 01:34:32,479
chart it's got more than just like kind

2302
01:34:28,609 --> 01:34:36,409
of your your normal recon and analysis

2303
01:34:32,479 --> 01:34:39,469
tools do so yeah I like Spyder foot it

2304
01:34:36,409 --> 01:34:41,268
might not be as pointed to bounty as

2305
01:34:39,469 --> 01:34:43,069
some of the other stuff and it is a SAS

2306
01:34:41,269 --> 01:34:45,649
service that you pay for and then

2307
01:34:43,069 --> 01:34:47,629
project discovery so project discovery

2308
01:34:45,649 --> 01:34:50,479
team we've talked about him a lot Iceman

2309
01:34:47,629 --> 01:34:53,239
and everybody else in that team and this

2310
01:34:50,479 --> 01:34:54,649
is unreleased but you know about six or

2311
01:34:53,239 --> 01:34:56,928
seven months ago they released some

2312
01:34:54,649 --> 01:34:59,539
screenshots of their dashboard that

2313
01:34:56,929 --> 01:35:01,459
they're making I imagine it will go you

2314
01:34:59,539 --> 01:35:04,309
know a SAS paid model but what we're

2315
01:35:01,459 --> 01:35:08,539
waiting for in this s tier has bug

2316
01:35:04,309 --> 01:35:10,399
hunters is one that is assessed here

2317
01:35:08,539 --> 01:35:12,589
because I'm I'm happy to pay for a good

2318
01:35:10,399 --> 01:35:14,929
product but as in a price point of a bug

2319
01:35:12,589 --> 01:35:16,429
bounty hunter right because most of

2320
01:35:14,929 --> 01:35:19,099
these SAS b2b Pro

2321
01:35:16,429 --> 01:35:21,199
will you know run you a decent amount of

2322
01:35:19,099 --> 01:35:22,959
money and they're not trying to sell to

2323
01:35:21,199 --> 01:35:25,249
individual bounty hunters right so

2324
01:35:22,959 --> 01:35:26,688
hoping that project discovery might be

2325
01:35:25,249 --> 01:35:28,309
one of the first ones that's really

2326
01:35:26,689 --> 01:35:29,630
slick that that works like this

2327
01:35:28,309 --> 01:35:32,510
otherwise you know I would I would

2328
01:35:29,630 --> 01:35:34,519
choose intrigue and use the core open

2329
01:35:32,510 --> 01:35:38,209
source code and and do stuff with that

2330
01:35:34,519 --> 01:35:41,329
so yeah so you know this is what it can

2331
01:35:38,209 --> 01:35:43,550
be right when people get to this this

2332
01:35:41,329 --> 01:35:46,820
stage usually you know the amount of

2333
01:35:43,550 --> 01:35:48,709
development required is parent is giant

2334
01:35:46,820 --> 01:35:52,429
so they they get to this stage and then

2335
01:35:48,709 --> 01:35:55,070
they kind of and they kind of go to you

2336
01:35:52,429 --> 01:35:56,479
know a paid model so those are just like

2337
01:35:55,070 --> 01:35:57,619
some discussions around frameworks I

2338
01:35:56,479 --> 01:35:59,900
encourage you to click all these links

2339
01:35:57,619 --> 01:36:03,619
and check them out by no means are they

2340
01:35:59,900 --> 01:36:05,089
exhaustive I you know I I really wanted

2341
01:36:03,619 --> 01:36:07,699
to say that every every person who

2342
01:36:05,090 --> 01:36:10,789
writes code out there and open sources

2343
01:36:07,699 --> 01:36:11,959
it is a goddamn hero so like you know it

2344
01:36:10,789 --> 01:36:14,389
takes a lot of courage to put something

2345
01:36:11,959 --> 01:36:17,209
out there and you know like I just

2346
01:36:14,389 --> 01:36:19,429
wanted to showcase some of them I hope I

2347
01:36:17,209 --> 01:36:20,840
didn't hurt anyone's feelings I I love I

2348
01:36:19,429 --> 01:36:23,059
love everything on those lists and I

2349
01:36:20,840 --> 01:36:24,679
only put you know good ones right eating

2350
01:36:23,059 --> 01:36:29,840
stuff that's in CT and again my stuff's

2351
01:36:24,679 --> 01:36:34,309
in seat here too so yeah so that is the

2352
01:36:29,840 --> 01:36:36,860
last slide for today for recon so just

2353
01:36:34,309 --> 01:36:41,929
some wrap-up so I will put the slides

2354
01:36:36,860 --> 01:36:45,380
out on on the interwebs for you guys to

2355
01:36:41,929 --> 01:36:49,059
have the video will be up Ben will take

2356
01:36:45,380 --> 01:36:51,860
all that and I thank you for your time

2357
01:36:49,059 --> 01:36:53,360
so the second part of the bug hunters

2358
01:36:51,860 --> 01:36:56,509
methodology which is application

2359
01:36:53,360 --> 01:37:00,949
analysis I wanted to have it ready today

2360
01:36:56,510 --> 01:37:02,360
but it just is not ready yet and you

2361
01:37:00,949 --> 01:37:05,058
know even though these slides are a mess

2362
01:37:02,360 --> 01:37:07,098
I have kind of a perfectionist and I

2363
01:37:05,059 --> 01:37:09,050
want to make it good and the other thing

2364
01:37:07,099 --> 01:37:11,360
I'm trying to do is that in in this

2365
01:37:09,050 --> 01:37:14,539
version for I'm going back to the

2366
01:37:11,360 --> 01:37:16,909
beginning to not just includes updates

2367
01:37:14,539 --> 01:37:18,469
every time I do the bug hunters

2368
01:37:16,909 --> 01:37:21,920
methodology right since the beginning

2369
01:37:18,469 --> 01:37:23,420
you know I had very general descriptions

2370
01:37:21,920 --> 01:37:25,789
and people have come to us like it's

2371
01:37:23,420 --> 01:37:28,909
really hard when you have you know one

2372
01:37:25,789 --> 01:37:30,170
to two point one three point one or

2373
01:37:28,909 --> 01:37:32,259
three three point one

2374
01:37:30,170 --> 01:37:35,090
or I have to pull up all of these

2375
01:37:32,260 --> 01:37:38,540
presentations so really I'm trying to

2376
01:37:35,090 --> 01:37:40,340
include at the bug hunters methodology

2377
01:37:38,540 --> 01:37:43,040
as a holistic presentation and it'll run

2378
01:37:40,340 --> 01:37:44,840
pretty long so the next one is still

2379
01:37:43,040 --> 01:37:47,870
being drafted I'm pulling stuff all the

2380
01:37:44,840 --> 01:37:51,170
way back from the DEFCON talk and you

2381
01:37:47,870 --> 01:37:52,730
know six years ago now because people

2382
01:37:51,170 --> 01:37:55,070
really liked a lot of that content and

2383
01:37:52,730 --> 01:37:56,750
wanted you know updated you know tools

2384
01:37:55,070 --> 01:37:58,280
and techniques and stuff like that so

2385
01:37:56,750 --> 01:38:00,140
I'm working on that right now and

2386
01:37:58,280 --> 01:38:02,269
hopefully Ben will have another event

2387
01:38:00,140 --> 01:38:04,489
pretty soon and I can drop that or I'll

2388
01:38:02,270 --> 01:38:07,580
just drop it myself on on the Twitter

2389
01:38:04,489 --> 01:38:12,009
you guys can always reach me jay Haddix

2390
01:38:07,580 --> 01:38:14,500
on twitter so Twitter comm /a Haddix and

2391
01:38:12,010 --> 01:38:18,230
thank you thank you thank you for

2392
01:38:14,500 --> 01:38:20,030
everyone spending time and also for all

2393
01:38:18,230 --> 01:38:22,160
the people who wrote you know these

2394
01:38:20,030 --> 01:38:26,719
amazing tools and came up with these

2395
01:38:22,160 --> 01:38:28,099
amazing techniques and etc I'm just you

2396
01:38:26,719 --> 01:38:29,660
know I always say but the the bug bounty

2397
01:38:28,100 --> 01:38:32,900
community and the pen test community

2398
01:38:29,660 --> 01:38:34,940
that kind of hangs with us the iteration

2399
01:38:32,900 --> 01:38:38,509
and last you know five years has been

2400
01:38:34,940 --> 01:38:39,980
amazing and in how we're how we're

2401
01:38:38,510 --> 01:38:43,429
finding vulnerabilities and how our

2402
01:38:39,980 --> 01:38:44,540
discovery assets and in recon so I hope

2403
01:38:43,429 --> 01:38:45,969
you guys have a wonderful day I think

2404
01:38:44,540 --> 01:38:48,410
that's the last thing of the day and

2405
01:38:45,969 --> 01:38:51,460
yeah have a good one have a safe weekend

2406
01:38:48,410 --> 01:38:51,460
talk to you later bye

2407
01:38:58,910 --> 01:39:00,970
you

