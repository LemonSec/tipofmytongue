1
00:00:04,770 --> 00:00:11,440
all right we have two more talks this

2
00:00:08,138 --> 00:00:14,590
next talk is by Jonathan crane also

3
00:00:11,440 --> 00:00:16,480
known as Jake ran on Twitter it's for

4
00:00:14,590 --> 00:00:18,580
all of you out there who enjoy the

5
00:00:16,480 --> 00:00:21,250
process of recon this talk is called

6
00:00:18,580 --> 00:00:23,770
scaling up automated attack surface

7
00:00:21,250 --> 00:00:25,570
discovery with intrigue core so if you

8
00:00:23,770 --> 00:00:27,730
have watched one of my Sunday interviews

9
00:00:25,570 --> 00:00:31,360
with the gentleman we actually talked

10
00:00:27,730 --> 00:00:32,829
about intrigue and it was you know the

11
00:00:31,360 --> 00:00:36,910
gentleman talked about how he uses

12
00:00:32,829 --> 00:00:40,000
intrigue to manage his recon so let's

13
00:00:36,910 --> 00:00:42,569
give it up for Jonathan cran and let's

14
00:00:40,000 --> 00:00:45,400
get right into it

15
00:00:42,570 --> 00:00:47,830
hey everybody I'm super excited to be

16
00:00:45,400 --> 00:00:50,260
here my name is Jonathan and this is the

17
00:00:47,830 --> 00:00:52,150
first in a Hong Kong and so thank you

18
00:00:50,260 --> 00:00:54,010
very much for the invite today I'm gonna

19
00:00:52,150 --> 00:00:55,629
talk to you about automated attack

20
00:00:54,010 --> 00:01:00,099
service discovery with intrigue core

21
00:00:55,630 --> 00:01:03,190
scaling up so let's get into it

22
00:01:00,100 --> 00:01:04,599
as I mentioned Jonathan is my name and I

23
00:01:03,190 --> 00:01:06,310
go by Jake ran everybody calls me Jake

24
00:01:04,599 --> 00:01:08,079
ran yeah

25
00:01:06,310 --> 00:01:09,460
currently head of research at kena

26
00:01:08,079 --> 00:01:11,050
security which does risk-based

27
00:01:09,460 --> 00:01:13,029
vulnerability management and I'm also

28
00:01:11,050 --> 00:01:14,800
the founder of intrigued on Io which is

29
00:01:13,030 --> 00:01:15,940
does attack surface monitoring for about

30
00:01:14,800 --> 00:01:19,810
a hundred thousand companies on a

31
00:01:15,940 --> 00:01:22,840
regular basis and formally a book crowd

32
00:01:19,810 --> 00:01:24,490
rapid7 and Pony Express and so you know

33
00:01:22,840 --> 00:01:25,990
the the kind of thought behind this talk

34
00:01:24,490 --> 00:01:28,570
is that there is a lot of attack surface

35
00:01:25,990 --> 00:01:30,850
out there and as researchers and testers

36
00:01:28,570 --> 00:01:33,130
it's it's up to us to kind of scale to

37
00:01:30,850 --> 00:01:34,479
the challenge and the challenge isn't

38
00:01:33,130 --> 00:01:36,759
getting smaller it's getting much bigger

39
00:01:34,479 --> 00:01:38,170
more quickly especially with the recent

40
00:01:36,760 --> 00:01:41,170
changes the attack surf is just growing

41
00:01:38,170 --> 00:01:43,900
pretty rapidly and so you know this is a

42
00:01:41,170 --> 00:01:46,000
good reminder of there's a lot more

43
00:01:43,900 --> 00:01:47,979
stuff getting built than there is people

44
00:01:46,000 --> 00:01:51,040
to look at it especially as as regularly

45
00:01:47,979 --> 00:01:53,200
as it needs to look at and so I like to

46
00:01:51,040 --> 00:01:55,030
start with intrigue intrigue ident

47
00:01:53,200 --> 00:01:56,680
which is our fingerprinting library and

48
00:01:55,030 --> 00:01:58,659
the reason I like to start with it is

49
00:01:56,680 --> 00:02:00,310
because it's a it's a it's a component

50
00:01:58,659 --> 00:02:01,840
of the overall ecosystem but it's a good

51
00:02:00,310 --> 00:02:04,750
way to to really understand the

52
00:02:01,840 --> 00:02:05,470
capabilities and the power and so what

53
00:02:04,750 --> 00:02:07,540
is it

54
00:02:05,470 --> 00:02:11,500
ident is a application and network

55
00:02:07,540 --> 00:02:14,310
fingerprinting library it has over 700

56
00:02:11,500 --> 00:02:16,930
unique fingerprints for software in it

57
00:02:14,310 --> 00:02:18,040
that software is specifically built to

58
00:02:16,930 --> 00:02:19,750
be or those finger

59
00:02:18,040 --> 00:02:23,078
are specifically built to be mapable two

60
00:02:19,750 --> 00:02:26,409
CVEs and with the integration of recog

61
00:02:23,079 --> 00:02:28,900
recently that that significantly bumped

62
00:02:26,409 --> 00:02:31,239
the number of checks up to two almost

63
00:02:28,900 --> 00:02:32,170
five thousand now and so you know

64
00:02:31,239 --> 00:02:33,640
traditionally it's been on the

65
00:02:32,170 --> 00:02:36,339
application side but more recently

66
00:02:33,640 --> 00:02:37,750
telnet SSH these other network protocols

67
00:02:36,340 --> 00:02:39,519
so you can see on the right-hand side

68
00:02:37,750 --> 00:02:42,730
the different things that we can use to

69
00:02:39,519 --> 00:02:45,609
fingerprint and these are kind of very

70
00:02:42,730 --> 00:02:46,959
recently being being added to and

71
00:02:45,609 --> 00:02:49,989
there's quite a lot of activity around

72
00:02:46,959 --> 00:02:52,599
this and so it's a good way to kind of

73
00:02:49,989 --> 00:02:55,480
show what's possible so I'll just show

74
00:02:52,599 --> 00:02:58,209
you a quick check and in this case this

75
00:02:55,480 --> 00:03:01,899
is a check for Acme micro httpd which i

76
00:02:58,209 --> 00:03:03,879
think is an IOT e-type web server and

77
00:03:01,900 --> 00:03:05,730
you can see the match type says it's

78
00:03:03,879 --> 00:03:08,649
using the content headers

79
00:03:05,730 --> 00:03:10,540
- so headers basically to look for a

80
00:03:08,650 --> 00:03:13,690
server header match content is really

81
00:03:10,540 --> 00:03:15,608
the regex that matters here so it's

82
00:03:13,690 --> 00:03:18,489
looking for a server header micro G B D

83
00:03:15,609 --> 00:03:21,430
and it's looking for it if you look at

84
00:03:18,489 --> 00:03:24,010
the paths attribute near the bottom it's

85
00:03:21,430 --> 00:03:25,269
looking at the base URL inferences

86
00:03:24,010 --> 00:03:27,970
turned off so we won't try to find

87
00:03:25,269 --> 00:03:32,260
vulnerabilities on this it is not

88
00:03:27,970 --> 00:03:34,269
specific enough and so ultimately this

89
00:03:32,260 --> 00:03:35,918
is this is a very simple check it looks

90
00:03:34,269 --> 00:03:37,540
when it finds that particular server

91
00:03:35,919 --> 00:03:40,030
header will tell us that that was

92
00:03:37,540 --> 00:03:42,910
accurate acne my micro HD BD and that's

93
00:03:40,030 --> 00:03:44,650
web server now simple check contrast

94
00:03:42,910 --> 00:03:47,198
that with a relatively complicated check

95
00:03:44,650 --> 00:03:49,180
this one's for Microsoft Exchange and so

96
00:03:47,199 --> 00:03:51,160
in this case we're using the dynamic

97
00:03:49,180 --> 00:03:54,790
version grabber features the dynamic

98
00:03:51,160 --> 00:03:56,500
update grabber features of ident to go

99
00:03:54,790 --> 00:03:59,319
out and find a specific string in this

100
00:03:56,500 --> 00:04:01,180
case from Outlook Web Access and convert

101
00:03:59,319 --> 00:04:02,708
that you see that OA to exchange version

102
00:04:01,180 --> 00:04:04,739
convert that into the actual exchange

103
00:04:02,709 --> 00:04:07,030
version so it can get very complicated

104
00:04:04,739 --> 00:04:09,549
in order to give you information about

105
00:04:07,030 --> 00:04:10,989
what the underlying system is and this

106
00:04:09,549 --> 00:04:13,299
is you know this is an example of kind

107
00:04:10,989 --> 00:04:16,269
of the power so in this case we first

108
00:04:13,299 --> 00:04:18,370
match on EXO a version but then from

109
00:04:16,269 --> 00:04:19,959
there turned that into an exchange

110
00:04:18,370 --> 00:04:23,229
version so it's going to inference upon

111
00:04:19,959 --> 00:04:25,000
inference and so you can actually try

112
00:04:23,229 --> 00:04:28,419
this out today all you have to do is run

113
00:04:25,000 --> 00:04:29,729
a single command docker on ite entry go

114
00:04:28,419 --> 00:04:33,270
ident and then

115
00:04:29,729 --> 00:04:34,710
pasady URL and this will give you the

116
00:04:33,270 --> 00:04:37,740
fingerprint itself it'll give you some

117
00:04:34,710 --> 00:04:39,150
metadata around at the CPE tags if there

118
00:04:37,740 --> 00:04:44,069
are vulnerabilities and you pass the

119
00:04:39,150 --> 00:04:46,830
vulnerabilities command-line argument it

120
00:04:44,069 --> 00:04:49,889
will give those to you as well you can

121
00:04:46,830 --> 00:04:51,089
actually get JSON outputs and if you

122
00:04:49,889 --> 00:04:53,099
wanted just a list of all the

123
00:04:51,089 --> 00:04:55,949
vulnerabilities give you a list and

124
00:04:53,099 --> 00:04:59,248
again a key and core feature of this

125
00:04:55,949 --> 00:05:03,059
particular capability and library is

126
00:04:59,249 --> 00:05:06,210
that it's fast it will run those those

127
00:05:03,059 --> 00:05:09,389
checks against a single URL in order to

128
00:05:06,210 --> 00:05:11,128
be very very quick and so this is a key

129
00:05:09,389 --> 00:05:13,349
component of our ability to scale not

130
00:05:11,129 --> 00:05:17,009
the only thing but a necessary condition

131
00:05:13,349 --> 00:05:18,389
not a sufficient one so entry core is

132
00:05:17,009 --> 00:05:20,669
the engine that ident

133
00:05:18,389 --> 00:05:21,629
folds into so let's expand our scope a

134
00:05:20,669 --> 00:05:24,508
little bit in terms of what we're

135
00:05:21,629 --> 00:05:27,719
talking about and dig into what is entry

136
00:05:24,509 --> 00:05:30,120
core well it is the core engine behind

137
00:05:27,719 --> 00:05:31,589
intrigued at i/o so it's powering data

138
00:05:30,120 --> 00:05:34,050
collection for a hundred thousand

139
00:05:31,589 --> 00:05:36,479
companies it's quite scalable we

140
00:05:34,050 --> 00:05:39,149
distribute this this core version open

141
00:05:36,479 --> 00:05:41,969
open license anybody can play with it

142
00:05:39,149 --> 00:05:43,349
anybody can use it it's distributed via

143
00:05:41,969 --> 00:05:45,659
docker and so that you can see on the

144
00:05:43,349 --> 00:05:46,979
right hand side that docker command line

145
00:05:45,659 --> 00:05:47,969
to get you started and I'll talk you

146
00:05:46,979 --> 00:05:50,399
through that in just a moment

147
00:05:47,969 --> 00:05:51,839
and it says scriptable engine it's

148
00:05:50,399 --> 00:05:53,430
really designed to do automation and

149
00:05:51,839 --> 00:05:56,879
attack service discovery kind of an

150
00:05:53,430 --> 00:05:59,039
orchestration engine the command on the

151
00:05:56,879 --> 00:06:00,330
right you can actually just directly

152
00:05:59,039 --> 00:06:05,159
copy and paste a couple things to point

153
00:06:00,330 --> 00:06:06,688
out that - V option is for docker it it

154
00:06:05,159 --> 00:06:09,058
gives you a volume on your local system

155
00:06:06,689 --> 00:06:12,270
in this case in your home directory

156
00:06:09,059 --> 00:06:15,870
intrigue core data maps that - slash

157
00:06:12,270 --> 00:06:17,758
data in the container which gives you

158
00:06:15,870 --> 00:06:20,069
the ability to preserve data across

159
00:06:17,759 --> 00:06:24,120
different runs and the - P option will

160
00:06:20,069 --> 00:06:26,189
map your local 77077 ports to the

161
00:06:24,120 --> 00:06:27,539
container which will give you the

162
00:06:26,189 --> 00:06:31,439
ability to see the web interface and

163
00:06:27,539 --> 00:06:33,360
interact with the system and so you know

164
00:06:31,439 --> 00:06:35,039
we can we can bore you with slides all

165
00:06:33,360 --> 00:06:38,009
day but I find it's best to just give

166
00:06:35,039 --> 00:06:41,279
you a super quick demo so let's just do

167
00:06:38,009 --> 00:06:44,810
that and so we start out here on the

168
00:06:41,279 --> 00:06:44,810
project page we can create a

169
00:06:44,900 --> 00:06:50,758
Netflix is a good example so let's just

170
00:06:47,910 --> 00:06:53,280
put them in and actually all those

171
00:06:50,759 --> 00:06:55,620
different tasks and capabilities are

172
00:06:53,280 --> 00:07:02,068
here we're gonna give it to start with a

173
00:06:55,620 --> 00:07:09,139
domain put in Netflix calm and go ahead

174
00:07:02,069 --> 00:07:11,340
and create an entity and so it does that

175
00:07:09,139 --> 00:07:14,340
and it gets a little bit of information

176
00:07:11,340 --> 00:07:15,568
here around that and you'll notice you

177
00:07:14,340 --> 00:07:17,599
know we just put in that domain but

178
00:07:15,569 --> 00:07:19,590
actually it came back and enriched that

179
00:07:17,599 --> 00:07:21,780
and came back with a bunch of

180
00:07:19,590 --> 00:07:23,609
information now you can iterate here and

181
00:07:21,780 --> 00:07:26,219
let's say we want to subdomain brute

182
00:07:23,610 --> 00:07:33,000
force give you a bunch of different

183
00:07:26,220 --> 00:07:37,110
options use a file and you can just keep

184
00:07:33,000 --> 00:07:38,759
going like this and so it Ron's doing

185
00:07:37,110 --> 00:07:42,120
its thing thread it out checking about

186
00:07:38,759 --> 00:07:43,560
5,000 subdomains and so we'll just let

187
00:07:42,120 --> 00:07:45,870
it do that and come back to that in a

188
00:07:43,560 --> 00:07:47,969
moment so you know if there's all these

189
00:07:45,870 --> 00:07:49,680
capabilities here what are they there's

190
00:07:47,969 --> 00:07:51,360
things like web spidering we mentioned

191
00:07:49,680 --> 00:07:52,949
fingerprinting already this web

192
00:07:51,360 --> 00:07:55,620
interface that you just saw it also has

193
00:07:52,949 --> 00:07:58,020
an API it can automatically grab web

194
00:07:55,620 --> 00:08:00,529
screenshots give you notifications

195
00:07:58,020 --> 00:08:03,359
alerts check for exposures

196
00:08:00,529 --> 00:08:04,800
cross-reference with threat data tell

197
00:08:03,360 --> 00:08:06,900
you whether a cloud providers there or

198
00:08:04,800 --> 00:08:10,830
not and ultimately it's meant to be kind

199
00:08:06,900 --> 00:08:12,120
of an integration engine alright so what

200
00:08:10,830 --> 00:08:14,758
are the types of entities that core

201
00:08:12,120 --> 00:08:16,710
cares about well it's things that matter

202
00:08:14,759 --> 00:08:19,650
to testers so that can be things like an

203
00:08:16,710 --> 00:08:21,989
application what we call URI things like

204
00:08:19,650 --> 00:08:24,929
subdomains what we call it DNS record or

205
00:08:21,990 --> 00:08:27,000
just domains phone number phone numbers

206
00:08:24,930 --> 00:08:29,130
a little little less comment but but

207
00:08:27,000 --> 00:08:30,389
there they're found on webpages things

208
00:08:29,130 --> 00:08:32,789
like that will parse amount will create

209
00:08:30,389 --> 00:08:36,659
entities around them github accounts

210
00:08:32,789 --> 00:08:39,799
network services being things like SMTP

211
00:08:36,659 --> 00:08:43,260
or FTP and so these these are really

212
00:08:39,799 --> 00:08:45,060
with real-world things that can be

213
00:08:43,260 --> 00:08:47,730
pushed into a task you know they're

214
00:08:45,060 --> 00:08:49,709
loaded into a task the task runs and

215
00:08:47,730 --> 00:08:52,170
creates more entities and so this is

216
00:08:49,709 --> 00:08:54,750
kind of a set of concerns they're simple

217
00:08:52,170 --> 00:08:57,089
to create they're effectively just a

218
00:08:54,750 --> 00:08:59,490
regex and some metadata

219
00:08:57,090 --> 00:09:03,060
and so you know those entities are

220
00:08:59,490 --> 00:09:06,750
loaded into tasks in the form of nmap

221
00:09:03,060 --> 00:09:08,010
scan masks and things like URI

222
00:09:06,750 --> 00:09:10,350
screenshot which will take a screenshot

223
00:09:08,010 --> 00:09:14,220
of a web page in numerating WordPress

224
00:09:10,350 --> 00:09:17,880
plugins harvesting emails harvesting

225
00:09:14,220 --> 00:09:18,900
phone numbers this is you know there's

226
00:09:17,880 --> 00:09:20,580
there's a bunch of different techniques

227
00:09:18,900 --> 00:09:22,650
that can be used to grab information

228
00:09:20,580 --> 00:09:25,620
about an organization and that's really

229
00:09:22,650 --> 00:09:27,860
what tasks do it can be content

230
00:09:25,620 --> 00:09:33,680
discovery so things like brute-forcing

231
00:09:27,860 --> 00:09:36,120
directories discovering known

232
00:09:33,680 --> 00:09:37,530
information leaks in the case of uri

233
00:09:36,120 --> 00:09:41,100
brute focused content that's a

234
00:09:37,530 --> 00:09:43,829
particularly useful one so yeah these

235
00:09:41,100 --> 00:09:46,950
are these are these are the capabilities

236
00:09:43,830 --> 00:09:48,540
that can generate more entities and in

237
00:09:46,950 --> 00:09:51,750
fact there's lots of different data set

238
00:09:48,540 --> 00:09:55,079
integrations like show dan census binary

239
00:09:51,750 --> 00:09:58,350
edge security trails and quite a few

240
00:09:55,080 --> 00:10:01,290
others that that you know provide useful

241
00:09:58,350 --> 00:10:05,760
information to a researcher an attacker

242
00:10:01,290 --> 00:10:08,610
trying to enumerate the the attack

243
00:10:05,760 --> 00:10:10,230
surface of a given organization so you

244
00:10:08,610 --> 00:10:12,000
know with these capabilities in mind how

245
00:10:10,230 --> 00:10:13,410
can we scale up you know rather than

246
00:10:12,000 --> 00:10:15,620
doing this manually and rather than

247
00:10:13,410 --> 00:10:18,030
building a bunch of different automation

248
00:10:15,620 --> 00:10:19,490
each individually are there ways we can

249
00:10:18,030 --> 00:10:21,750
kind of string these things together

250
00:10:19,490 --> 00:10:24,570
and that's really what intrigued core

251
00:10:21,750 --> 00:10:26,670
was built to do and so our required

252
00:10:24,570 --> 00:10:28,410
condition though is scoping and so

253
00:10:26,670 --> 00:10:29,099
there's there's some automated scoping

254
00:10:28,410 --> 00:10:31,410
that's built in

255
00:10:29,100 --> 00:10:32,610
it's rule-based so basically anything

256
00:10:31,410 --> 00:10:35,370
the user scopes in or anything

257
00:10:32,610 --> 00:10:37,770
explicitly requested to be scoped will

258
00:10:35,370 --> 00:10:39,240
will be discovered and then on a per

259
00:10:37,770 --> 00:10:40,800
entity basis it kind of makes a guess

260
00:10:39,240 --> 00:10:43,710
about whether it thinks that that should

261
00:10:40,800 --> 00:10:46,439
be scoped in and discovered and so these

262
00:10:43,710 --> 00:10:48,660
scoping rules combined with the tasks

263
00:10:46,440 --> 00:10:50,370
and combined with the entities and now

264
00:10:48,660 --> 00:10:53,760
combined with what we call machines

265
00:10:50,370 --> 00:10:56,040
which are these automation units that

266
00:10:53,760 --> 00:10:57,950
kind of enable these these decisions of

267
00:10:56,040 --> 00:11:00,810
whether to try and try more things

268
00:10:57,950 --> 00:11:02,700
they're recursive so they they kind of

269
00:11:00,810 --> 00:11:05,189
build this graph of an organization

270
00:11:02,700 --> 00:11:06,060
they're either active or passive and and

271
00:11:05,190 --> 00:11:08,670
they're designed with this sort of

272
00:11:06,060 --> 00:11:09,349
organizational collection in purpose in

273
00:11:08,670 --> 00:11:11,209
mind

274
00:11:09,350 --> 00:11:14,090
general though they can be designed for

275
00:11:11,210 --> 00:11:15,980
other things like SSL specifically SSL

276
00:11:14,090 --> 00:11:17,690
certificate grabbing or maybe just

277
00:11:15,980 --> 00:11:21,680
specifically scanning network ranges

278
00:11:17,690 --> 00:11:24,620
machines are very flexible and example

279
00:11:21,680 --> 00:11:26,030
is here on the right hand side where you

280
00:11:24,620 --> 00:11:27,650
give it a domain and it tries to

281
00:11:26,030 --> 00:11:30,829
subdomain brute force that and then you

282
00:11:27,650 --> 00:11:36,410
check the project sonar which is a you

283
00:11:30,830 --> 00:11:38,570
know a good set of subdomains so as it

284
00:11:36,410 --> 00:11:41,829
finds those it'll create DNS records and

285
00:11:38,570 --> 00:11:44,060
those things will be iterated upon and

286
00:11:41,830 --> 00:11:46,070
you know for example within an IP

287
00:11:44,060 --> 00:11:47,930
address comes into the system either

288
00:11:46,070 --> 00:11:50,450
automatically or from the user will try

289
00:11:47,930 --> 00:11:51,800
to nmap scan it and with the network

290
00:11:50,450 --> 00:11:54,740
service will grab the banner and try to

291
00:11:51,800 --> 00:11:56,719
fingerprint so you know these these

292
00:11:54,740 --> 00:11:59,840
features put together combined with that

293
00:11:56,720 --> 00:12:02,420
enrichment that we talked about as we we

294
00:11:59,840 --> 00:12:04,600
loaded in an entity with a created

295
00:12:02,420 --> 00:12:07,550
entity function which you know

296
00:12:04,600 --> 00:12:14,000
effectively ensures that we can automate

297
00:12:07,550 --> 00:12:15,620
and build upon the entity you know lets

298
00:12:14,000 --> 00:12:19,370
us build automation without overwhelming

299
00:12:15,620 --> 00:12:20,480
complexity and once we do that and we

300
00:12:19,370 --> 00:12:21,740
combine it with that fingerprinting

301
00:12:20,480 --> 00:12:24,590
function at the beginning that I

302
00:12:21,740 --> 00:12:28,430
mentioned ident this gives us really a

303
00:12:24,590 --> 00:12:31,640
quite a powerful powerful capability so

304
00:12:28,430 --> 00:12:35,239
let's just do a quick demo of that okay

305
00:12:31,640 --> 00:12:36,470
so going back into the engine we're back

306
00:12:35,240 --> 00:12:40,430
here on the dashboard page you'll see

307
00:12:36,470 --> 00:12:43,490
there's again a few pre-loaded let's go

308
00:12:40,430 --> 00:12:45,170
ahead and create a new one and project

309
00:12:43,490 --> 00:12:47,540
names don't really matter so much it's

310
00:12:45,170 --> 00:12:49,790
all about the seeds that get entered and

311
00:12:47,540 --> 00:12:51,260
so we're gonna create an entity and

312
00:12:49,790 --> 00:12:56,300
create a domain in this case let's give

313
00:12:51,260 --> 00:12:57,350
it Tesla this was a good one and in this

314
00:12:56,300 --> 00:12:59,630
case we're actually gonna start a

315
00:12:57,350 --> 00:13:02,600
machine iterations this external

316
00:12:59,630 --> 00:13:03,740
discovery is usually a good place to to

317
00:13:02,600 --> 00:13:06,980
start when you do it this sort of thing

318
00:13:03,740 --> 00:13:12,380
and so you'll notice it creates that

319
00:13:06,980 --> 00:13:14,780
entity and here we go again or load and

320
00:13:12,380 --> 00:13:16,160
and so based on the scoping rules these

321
00:13:14,780 --> 00:13:19,610
IP addresses are pretty much always

322
00:13:16,160 --> 00:13:21,260
scoped in so even though these are mime

323
00:13:19,610 --> 00:13:23,900
cast we're gonna go ahead and say yes

324
00:13:21,260 --> 00:13:32,210
that's part of Tesla at least for for

325
00:13:23,900 --> 00:13:33,920
our purposes sound grid and you can see

326
00:13:32,210 --> 00:13:36,650
a little bit of the information here in

327
00:13:33,920 --> 00:13:41,390
terms of like what the services that are

328
00:13:36,650 --> 00:13:43,280
being used are and we've got some system

329
00:13:41,390 --> 00:13:46,010
information so I'm just gonna showing

330
00:13:43,280 --> 00:13:48,500
you a few of the analysis views you know

331
00:13:46,010 --> 00:13:49,640
what which networks are these on what

332
00:13:48,500 --> 00:13:52,850
are the system names what are the IP

333
00:13:49,640 --> 00:13:54,920
addresses which countries we don't have

334
00:13:52,850 --> 00:13:56,900
any issues yet and so these are the

335
00:13:54,920 --> 00:13:59,300
results meaning these are the things

336
00:13:56,900 --> 00:14:01,699
that are actually getting run and each

337
00:13:59,300 --> 00:14:06,349
one of those has a log associated with

338
00:14:01,700 --> 00:14:07,790
it so that information is all there so

339
00:14:06,350 --> 00:14:11,900
we'll just give it a moment to build

340
00:14:07,790 --> 00:14:13,370
this out now in the meantime you can see

341
00:14:11,900 --> 00:14:14,959
that there's some analysis features here

342
00:14:13,370 --> 00:14:18,140
I mean we can always type in anything

343
00:14:14,960 --> 00:14:19,550
with Tesla just show us Tesla and so

344
00:14:18,140 --> 00:14:22,370
it's just showing us that domain right

345
00:14:19,550 --> 00:14:25,130
now we can filter that by the individual

346
00:14:22,370 --> 00:14:26,420
entity type you can do a little bit of

347
00:14:25,130 --> 00:14:29,480
analysis here I showed you a few of the

348
00:14:26,420 --> 00:14:32,120
views but if you want to go analysis to

349
00:14:29,480 --> 00:14:36,020
the next level just what I want to do

350
00:14:32,120 --> 00:14:39,530
hopefully you do too we want to scale up

351
00:14:36,020 --> 00:14:43,100
and so let's do that with elasticsearch

352
00:14:39,530 --> 00:14:46,100
and so just today for Anaheim con we

353
00:14:43,100 --> 00:14:48,590
built a feature called a handler an AWS

354
00:14:46,100 --> 00:14:50,540
elasticsearch Handler and AWS has this

355
00:14:48,590 --> 00:14:52,130
really great elasticsearch service that

356
00:14:50,540 --> 00:14:53,740
you don't have to think about much you

357
00:14:52,130 --> 00:14:57,530
can just set up a development system

358
00:14:53,740 --> 00:14:59,090
configure a kit a name you know there's

359
00:14:57,530 --> 00:15:00,260
some specifics here I'll leave these in

360
00:14:59,090 --> 00:15:02,180
the slides I won't spend too much time

361
00:15:00,260 --> 00:15:04,120
on them here but basically just set up

362
00:15:02,180 --> 00:15:07,339
IP based whitelisting on this one and

363
00:15:04,120 --> 00:15:10,900
create that and we just wait for it to

364
00:15:07,340 --> 00:15:13,820
spin up and it gives you a URL and a

365
00:15:10,900 --> 00:15:16,069
Cabana instance as well which can be

366
00:15:13,820 --> 00:15:18,440
really great for doing analysis and so

367
00:15:16,070 --> 00:15:24,630
if you come in here to handler config

368
00:15:18,440 --> 00:15:28,389
and set these send to AWS elastic search

369
00:15:24,630 --> 00:15:29,680
settings to the appropriate things which

370
00:15:28,389 --> 00:15:31,060
we've already pre-configured here so

371
00:15:29,680 --> 00:15:33,279
this is going to be the URL it provides

372
00:15:31,060 --> 00:15:35,979
you whatever region you spun it up in

373
00:15:33,279 --> 00:15:37,509
your AWS access keys so that you can

374
00:15:35,980 --> 00:15:39,190
push information into it

375
00:15:37,509 --> 00:15:41,800
in fact you might even you might not

376
00:15:39,190 --> 00:15:42,910
even need these if if it's white listed

377
00:15:41,800 --> 00:15:45,219
you could probably just put anything in

378
00:15:42,910 --> 00:15:47,529
there the way we set it up or the way

379
00:15:45,220 --> 00:15:49,329
it's the way we suggested setting it up

380
00:15:47,529 --> 00:15:53,040
in the in the slide should make these

381
00:15:49,329 --> 00:15:57,069
unnecessary and once that's configured

382
00:15:53,040 --> 00:15:58,569
come here to project list select the

383
00:15:57,069 --> 00:16:01,779
project you'd like to do more analysis

384
00:15:58,569 --> 00:16:04,750
on let's just say Yahoo and let's

385
00:16:01,779 --> 00:16:07,149
actually just send to AWS elastic search

386
00:16:04,750 --> 00:16:09,940
and what you'll see is that it starts to

387
00:16:07,149 --> 00:16:12,699
push that information directly up to

388
00:16:09,940 --> 00:16:14,889
that elastic search instance now take a

389
00:16:12,699 --> 00:16:16,479
little bit to upload it that's fine

390
00:16:14,889 --> 00:16:18,339
we're just doing this on a super small

391
00:16:16,480 --> 00:16:21,339
scale right now just so we can be quick

392
00:16:18,339 --> 00:16:23,620
for the demo and you know I leave it to

393
00:16:21,339 --> 00:16:25,449
an exercise for you at home to play

394
00:16:23,620 --> 00:16:26,860
around with pull down the docker

395
00:16:25,449 --> 00:16:31,060
container spin up an elastic search

396
00:16:26,860 --> 00:16:33,160
instance all pretty easy so let's just

397
00:16:31,060 --> 00:16:34,508
take a look and see and in fact we can

398
00:16:33,160 --> 00:16:36,459
see there's information already starting

399
00:16:34,509 --> 00:16:37,930
to populate it in here with elastic

400
00:16:36,459 --> 00:16:39,758
search if you're not familiar you'll

401
00:16:37,930 --> 00:16:42,430
want to set up an index pattern we've

402
00:16:39,759 --> 00:16:44,050
already set to up index patterns are

403
00:16:42,430 --> 00:16:46,329
created based on the stuff that's coming

404
00:16:44,050 --> 00:16:49,508
in and so every project will come in

405
00:16:46,329 --> 00:16:51,099
with entities and issues and you can

406
00:16:49,509 --> 00:16:54,069
create a new one you know if we we

407
00:16:51,100 --> 00:16:55,959
uploaded Tesla we can just say Tesla and

408
00:16:54,069 --> 00:16:58,779
we may not have any information there

409
00:16:55,959 --> 00:17:01,599
yet it may not even let us create one if

410
00:16:58,779 --> 00:17:02,829
there's no information in there but for

411
00:17:01,600 --> 00:17:05,709
our purposes today we can leave that

412
00:17:02,829 --> 00:17:07,270
alone come over here and now we can

413
00:17:05,709 --> 00:17:11,770
start to type in anything let's give us

414
00:17:07,270 --> 00:17:14,910
anything that says yeah and in fact turn

415
00:17:11,770 --> 00:17:17,430
off some of our filters here

416
00:17:14,910 --> 00:17:20,160
cool and you can see we get very rich

417
00:17:17,430 --> 00:17:24,480
very detailed information things like

418
00:17:20,160 --> 00:17:25,500
ports and we get some aggregations here

419
00:17:24,480 --> 00:17:28,920
which is really nice

420
00:17:25,500 --> 00:17:31,170
protocols providers being the network

421
00:17:28,920 --> 00:17:34,710
providers you know and you can start to

422
00:17:31,170 --> 00:17:36,840
filter on these now it's really handy so

423
00:17:34,710 --> 00:17:38,460
anything on o'the networks you know

424
00:17:36,840 --> 00:17:40,500
really elasticsearch is quite great for

425
00:17:38,460 --> 00:17:41,850
this sort of analysis and so you know

426
00:17:40,500 --> 00:17:43,830
when we thought about what's the best

427
00:17:41,850 --> 00:17:45,179
way to be able to do this is a great way

428
00:17:43,830 --> 00:17:47,100
and there's some really really great

429
00:17:45,180 --> 00:17:52,950
calculated fields in here like sod

430
00:17:47,100 --> 00:18:03,469
hosted geolocation let's actually remove

431
00:17:52,950 --> 00:18:03,470
that and let's add in maybe our

432
00:18:08,169 --> 00:18:18,899
scoped

433
00:18:11,049 --> 00:18:22,629
URI let's try remove that remove that

434
00:18:18,899 --> 00:18:28,090
really what we want to see is all the

435
00:18:22,629 --> 00:18:30,689
different end points might need the name

436
00:18:28,090 --> 00:18:30,689
to do that

437
00:18:36,700 --> 00:18:42,190
well you get the idea there's lots of

438
00:18:40,149 --> 00:18:44,049
power and lots of functionality here so

439
00:18:42,190 --> 00:18:48,429
we hope you have fun with this

440
00:18:44,049 --> 00:18:52,359
you know I be please please share you

441
00:18:48,429 --> 00:18:53,529
can effectively and by the way there's

442
00:18:52,359 --> 00:18:58,480
more information about how to set this

443
00:18:53,529 --> 00:19:00,789
up and some details in here and some

444
00:18:58,480 --> 00:19:03,009
examples but really thank you all very

445
00:19:00,789 --> 00:19:04,809
much for the time I know we got to go

446
00:19:03,009 --> 00:19:06,190
you can join us in slack just shoot us

447
00:19:04,809 --> 00:19:08,408
an email to hello it intrigued that IO

448
00:19:06,190 --> 00:19:11,259
if you find this useful you can find us

449
00:19:08,409 --> 00:19:14,109
at at intrigued io you can find me at at

450
00:19:11,259 --> 00:19:15,789
Jake Ram feel free to join us in slack

451
00:19:14,109 --> 00:19:17,529
just shoot us an email to this will give

452
00:19:15,789 --> 00:19:20,470
you an invite we'll bring in please

453
00:19:17,529 --> 00:19:21,340
please use responsibly and and hope you

454
00:19:20,470 --> 00:19:24,480
have a great rest of your conference

455
00:19:21,340 --> 00:19:24,480
thank you very much for the time

456
00:19:31,030 --> 00:19:33,090
you

