1
00:00:00,740 --> 00:00:06,600
well hello and welcome to the second day

2
00:00:03,750 --> 00:00:08,370
of nam khan if you're not familiar with

3
00:00:06,600 --> 00:00:10,200
the second day all we're doing today is

4
00:00:08,370 --> 00:00:13,049
workshops all the workshops are going to

5
00:00:10,200 --> 00:00:16,290
be free the first workshop we have going

6
00:00:13,049 --> 00:00:19,439
on will be with Jeff Foley the author of

7
00:00:16,290 --> 00:00:22,619
a mass he's going to show us how he uses

8
00:00:19,439 --> 00:00:25,140
a mass and how to be efficient while

9
00:00:22,619 --> 00:00:28,109
using it so before we get started do me

10
00:00:25,140 --> 00:00:29,580
a favor go ahead and check into discord

11
00:00:28,109 --> 00:00:32,279
make sure you're looking at all the

12
00:00:29,580 --> 00:00:34,829
announcements we're still doing the IOT

13
00:00:32,279 --> 00:00:36,989
village workshops all day that's going

14
00:00:34,829 --> 00:00:38,399
to be offline within this chord all you

15
00:00:36,989 --> 00:00:42,149
have to do is go to the website and

16
00:00:38,399 --> 00:00:44,190
enroll and if you're lacking the content

17
00:00:42,149 --> 00:00:46,649
and you want to give back and you want

18
00:00:44,190 --> 00:00:47,640
to donate consider donating to Isis by

19
00:00:46,649 --> 00:00:51,020
going through Isis

20
00:00:47,640 --> 00:00:56,219
org slash donate you can also use the

21
00:00:51,020 --> 00:00:59,160
donate command on this cord and go to

22
00:00:56,219 --> 00:01:01,350
the link the way the workshops are going

23
00:00:59,160 --> 00:01:03,419
to work is the first workshop is going

24
00:01:01,350 --> 00:01:05,040
to be live but we have a very packed

25
00:01:03,420 --> 00:01:07,230
schedule so if you have any questions

26
00:01:05,040 --> 00:01:08,910
just hold on to it until the end of the

27
00:01:07,230 --> 00:01:11,010
workshop if we have time we'll make sure

28
00:01:08,910 --> 00:01:12,300
to get to it and if we run out of time

29
00:01:11,010 --> 00:01:14,190
and don't have time to come to the

30
00:01:12,300 --> 00:01:16,230
questions we'll make sure to answer all

31
00:01:14,190 --> 00:01:18,780
of your questions either on discord or

32
00:01:16,230 --> 00:01:20,760
on Twitter also if you have any

33
00:01:18,780 --> 00:01:23,970
questions and make sure you hold on to

34
00:01:20,760 --> 00:01:26,730
them until the end so let's jump right

35
00:01:23,970 --> 00:01:29,280
into it please give it up for Jeff he's

36
00:01:26,730 --> 00:01:34,890
going to give us a very cool workshop on

37
00:01:29,280 --> 00:01:39,420
amass Jeff thank you so much for doing

38
00:01:34,890 --> 00:01:43,770
this and the floor is yours all right

39
00:01:39,420 --> 00:01:46,260
thank you then yeah I'd like to start by

40
00:01:43,770 --> 00:01:51,420
just saying you know thank you to nam

41
00:01:46,260 --> 00:01:54,810
khan for inviting me to do this it's a

42
00:01:51,420 --> 00:01:59,430
pleasure to be supporting women in

43
00:01:54,810 --> 00:02:01,200
cybersecurity and I want to thank Kwan

44
00:01:59,430 --> 00:02:06,300
Tyrion for making it possible for me to

45
00:02:01,200 --> 00:02:08,520
make time to prepare all this and just

46
00:02:06,300 --> 00:02:11,460
uh if you have any additional questions

47
00:02:08,520 --> 00:02:14,100
or interests in attack surface

48
00:02:11,460 --> 00:02:19,200
management feel free to reach out to

49
00:02:14,100 --> 00:02:26,010
kuan Tyrion so I've broken this workshop

50
00:02:19,200 --> 00:02:28,410
up into an intro to this project the

51
00:02:26,010 --> 00:02:30,929
OWASP amassed project in case some

52
00:02:28,410 --> 00:02:35,790
people aren't familiar with it and then

53
00:02:30,930 --> 00:02:38,880
some basic usage which could include

54
00:02:35,790 --> 00:02:41,700
things that people are not used to doing

55
00:02:38,880 --> 00:02:46,079
with it and then some more advanced

56
00:02:41,700 --> 00:02:48,420
usage which I where I address some ways

57
00:02:46,080 --> 00:02:52,200
to get better performance from a mass

58
00:02:48,420 --> 00:02:56,239
and then I'm going to use the end of

59
00:02:52,200 --> 00:02:59,579
this workshop to cover the new mass

60
00:02:56,240 --> 00:03:04,970
scripting engine where you can script

61
00:02:59,580 --> 00:03:12,300
your own data sources for for mass

62
00:03:04,970 --> 00:03:13,620
alright so with that start with so where

63
00:03:12,300 --> 00:03:21,150
do you go get this if you're not already

64
00:03:13,620 --> 00:03:29,100
familiar with us hopefully everyone can

65
00:03:21,150 --> 00:03:30,720
see this yeah we can see it oh yeah you

66
00:03:29,100 --> 00:03:32,970
should just be able to type in OWASP a

67
00:03:30,720 --> 00:03:39,300
mess it should bring you right to the

68
00:03:32,970 --> 00:03:45,020
repo a few things about what to do once

69
00:03:39,300 --> 00:03:47,070
you get here so you can go to releases

70
00:03:45,020 --> 00:03:51,060
these are updated on a pretty regular

71
00:03:47,070 --> 00:03:53,010
basis I would definitely recommend

72
00:03:51,060 --> 00:03:55,740
always getting the latest release since

73
00:03:53,010 --> 00:03:57,540
we put out bug fixes pretty frequently

74
00:03:55,740 --> 00:04:01,050
for instance this one went out last

75
00:03:57,540 --> 00:04:05,190
night we get a lot of great feedback

76
00:04:01,050 --> 00:04:09,900
from all the users so we try to respond

77
00:04:05,190 --> 00:04:16,100
as quickly as possible to the issues

78
00:04:09,900 --> 00:04:16,100
that they present to us also you can

79
00:04:16,370 --> 00:04:22,969
come down

80
00:04:18,108 --> 00:04:24,229
here and find our documentation so I

81
00:04:22,969 --> 00:04:28,969
definitely recommend if you haven't

82
00:04:24,229 --> 00:04:30,199
already take a look at this since there

83
00:04:28,969 --> 00:04:32,599
are a lot of things you can do with this

84
00:04:30,199 --> 00:04:39,560
tool and we've tried to capture at least

85
00:04:32,599 --> 00:04:41,360
some of it in these documents but I

86
00:04:39,560 --> 00:04:42,770
don't know I'm not sure how much to

87
00:04:41,360 --> 00:04:46,370
assume people know about this already

88
00:04:42,770 --> 00:04:49,099
but in case you're not familiar you know

89
00:04:46,370 --> 00:04:51,710
just like this says this tools focus or

90
00:04:49,099 --> 00:04:55,789
scope is all has always been to provide

91
00:04:51,710 --> 00:04:59,960
in-depth attack surface mapping and

92
00:04:55,789 --> 00:05:02,930
asset discovery so it's to try to give

93
00:04:59,960 --> 00:05:07,068
you the greatest number of findings

94
00:05:02,930 --> 00:05:11,389
possible and as I'm sure some of you are

95
00:05:07,069 --> 00:05:14,389
aware that hasn't always meant as fast

96
00:05:11,389 --> 00:05:18,340
as possible since it takes longer to

97
00:05:14,389 --> 00:05:23,900
find more and not all the techniques

98
00:05:18,340 --> 00:05:29,869
that amass uses are passive so we'll get

99
00:05:23,900 --> 00:05:31,068
into that a little bit so those are the

100
00:05:29,870 --> 00:05:33,319
basics I just want to cover about

101
00:05:31,069 --> 00:05:34,969
project if if you have any further

102
00:05:33,319 --> 00:05:38,379
questions about the project of course

103
00:05:34,969 --> 00:05:44,509
please feel free to come to our discord

104
00:05:38,379 --> 00:05:46,909
which you can find right here it's

105
00:05:44,509 --> 00:05:51,680
that's the preferred location to bring

106
00:05:46,909 --> 00:05:54,740
questions troubleshooting you asking us

107
00:05:51,680 --> 00:05:58,789
for help for things like that if you

108
00:05:54,740 --> 00:06:00,710
have problems like you know for sure

109
00:05:58,789 --> 00:06:04,580
there's something wrong with the tool or

110
00:06:00,710 --> 00:06:07,099
a release has broken something or you

111
00:06:04,580 --> 00:06:15,050
just have feature requests then please

112
00:06:07,099 --> 00:06:15,539
feel free to go to the issues all right

113
00:06:15,050 --> 00:06:21,650
so enough

114
00:06:15,540 --> 00:06:28,250
I think so one thing I wanted to cover

115
00:06:21,650 --> 00:06:32,729
before we jump into using this is how

116
00:06:28,250 --> 00:06:38,190
what is the mass doing when you execute

117
00:06:32,730 --> 00:06:41,280
it because it's as I mentioned a moment

118
00:06:38,190 --> 00:06:47,580
ago it's not simply reaching out the

119
00:06:41,280 --> 00:06:50,900
data sources pulling data and getting

120
00:06:47,580 --> 00:06:57,840
unique results and printing them out

121
00:06:50,900 --> 00:07:00,479
it's a mass has a cyclic process where

122
00:06:57,840 --> 00:07:03,419
the results from each data source are

123
00:07:00,480 --> 00:07:07,710
feeding that engine that that cyclic

124
00:07:03,420 --> 00:07:09,420
process and they are feeding off of each

125
00:07:07,710 --> 00:07:11,190
other right the results from one are

126
00:07:09,420 --> 00:07:14,400
then being fed back into other ones and

127
00:07:11,190 --> 00:07:18,330
they're using that to find more and more

128
00:07:14,400 --> 00:07:20,690
and more results which is why it can

129
00:07:18,330 --> 00:07:25,800
take a long time for it to finish

130
00:07:20,690 --> 00:07:28,680
because it only takes one more finding

131
00:07:25,800 --> 00:07:36,740
to potentially fire off a lot of

132
00:07:28,680 --> 00:07:38,539
additional activity and mass attempts

133
00:07:36,740 --> 00:07:45,530
keep that going until it can actually

134
00:07:38,539 --> 00:07:48,380
say there's nothing more I can do so if

135
00:07:45,530 --> 00:07:50,840
if you know for sure that you just can't

136
00:07:48,380 --> 00:07:55,669
wait for the exhaustive process to

137
00:07:50,840 --> 00:07:58,758
complete then I would recommend using

138
00:07:55,669 --> 00:08:01,130
the timeout flag and people have asked

139
00:07:58,759 --> 00:08:03,620
questions like what do I do to address

140
00:08:01,130 --> 00:08:05,060
this if I have it in a you know a

141
00:08:03,620 --> 00:08:06,830
workflow or something like that where

142
00:08:05,060 --> 00:08:11,240
I'd like to know I can complete it in

143
00:08:06,830 --> 00:08:14,258
two hours if that's a requirement then I

144
00:08:11,240 --> 00:08:16,759
would say just use the timeout feature

145
00:08:14,259 --> 00:08:19,880
because then then you know it will stop

146
00:08:16,759 --> 00:08:24,199
at that point and the rest of your

147
00:08:19,880 --> 00:08:27,949
workflow will continue all right so

148
00:08:24,199 --> 00:08:29,210
before we go again into me putting hands

149
00:08:27,949 --> 00:08:34,760
on the tool another thing I'd like to

150
00:08:29,210 --> 00:08:38,659
show is the configuration file so this

151
00:08:34,760 --> 00:08:45,130
configuration file is the same one that

152
00:08:38,659 --> 00:08:48,920
you can get from the repo under examples

153
00:08:45,130 --> 00:08:52,550
and there's a lot of things that you can

154
00:08:48,920 --> 00:08:55,250
provide on the command line with a mass

155
00:08:52,550 --> 00:09:03,120
that can also be provided in your config

156
00:08:55,250 --> 00:09:07,380
file so a lot of people

157
00:09:03,120 --> 00:09:09,600
myself used this as a way to save their

158
00:09:07,380 --> 00:09:12,830
fingers from having to type these things

159
00:09:09,600 --> 00:09:17,910
over and over again what I'm going to do

160
00:09:12,830 --> 00:09:20,550
today on this call so that we can I can

161
00:09:17,910 --> 00:09:23,130
aim this at a couple interesting targets

162
00:09:20,550 --> 00:09:30,719
is I'm going to include the target

163
00:09:23,130 --> 00:09:32,960
domain in this config file and then I'm

164
00:09:30,720 --> 00:09:35,370
going to turn on the demo feature which

165
00:09:32,960 --> 00:09:39,240
will turn will make it so you only see

166
00:09:35,370 --> 00:09:40,170
some of the output so that we can feel

167
00:09:39,240 --> 00:09:43,760
like we're doing the right thing you're

168
00:09:40,170 --> 00:09:46,020
not exposing organizations

169
00:09:43,760 --> 00:09:48,510
infrastructure yet we can get some

170
00:09:46,020 --> 00:09:51,360
interesting results to see during the

171
00:09:48,510 --> 00:09:56,850
workshop so I'll be using like these

172
00:09:51,360 --> 00:09:59,370
here so if you what you're gonna see me

173
00:09:56,850 --> 00:10:01,230
doing is just providing the config file

174
00:09:59,370 --> 00:10:04,110
normally if a lot of people I think

175
00:10:01,230 --> 00:10:09,089
would be instead putting those arguments

176
00:10:04,110 --> 00:10:11,400
on the command line all right

177
00:10:09,089 --> 00:10:12,750
another important thing is and I get

178
00:10:11,400 --> 00:10:16,890
questions about this law so I want to

179
00:10:12,750 --> 00:10:22,140
make sure to cover this so the amass

180
00:10:16,890 --> 00:10:25,010
tool has an output directory which you

181
00:10:22,140 --> 00:10:26,699
can see here in the configuration file

182
00:10:25,010 --> 00:10:28,680
but it's common

183
00:10:26,700 --> 00:10:34,350
because this this is the default value

184
00:10:28,680 --> 00:10:39,569
and actually interesting this right here

185
00:10:34,350 --> 00:10:43,500
is not the statement is a little off so

186
00:10:39,570 --> 00:10:45,170
let me let me explain what is actually

187
00:10:43,500 --> 00:10:47,480
happening here

188
00:10:45,170 --> 00:10:51,079
if you

189
00:10:47,480 --> 00:10:54,680
with no direct output directory

190
00:10:51,080 --> 00:10:58,310
specified it picks a location that's

191
00:10:54,680 --> 00:11:01,310
based on the OS that you're using so for

192
00:10:58,310 --> 00:11:05,209
this operating system which is Linux

193
00:11:01,310 --> 00:11:12,709
this is Kali Linux it is it should be

194
00:11:05,210 --> 00:11:14,930
located under dot config I'm asked which

195
00:11:12,710 --> 00:11:20,210
is where it stores as you can see the

196
00:11:14,930 --> 00:11:24,010
log file the JSON output the text output

197
00:11:20,210 --> 00:11:30,070
you would receive if you said - oh and

198
00:11:24,010 --> 00:11:34,700
the dot bolt file is the local graph

199
00:11:30,070 --> 00:11:35,900
database but there's other things that

200
00:11:34,700 --> 00:11:39,110
we're going to get into later in this

201
00:11:35,900 --> 00:11:43,040
workshop where if you include them under

202
00:11:39,110 --> 00:11:48,680
your output directory you can get

203
00:11:43,040 --> 00:11:51,050
special a mass we'll go looking for it

204
00:11:48,680 --> 00:11:55,250
there so it's important to know about it

205
00:11:51,050 --> 00:11:59,030
for instance if you build yourself a

206
00:11:55,250 --> 00:12:01,670
config file and you put it under the

207
00:11:59,030 --> 00:12:05,829
output directory a mass will

208
00:12:01,670 --> 00:12:08,750
automatically consume it or use it

209
00:12:05,830 --> 00:12:10,190
there's other files like that like later

210
00:12:08,750 --> 00:12:12,500
I'm going to talk about the scripting

211
00:12:10,190 --> 00:12:14,590
engine there's a special location under

212
00:12:12,500 --> 00:12:20,330
this directory where it will look for

213
00:12:14,590 --> 00:12:22,340
custom scripts so this is an important

214
00:12:20,330 --> 00:12:25,340
place to know about but if you don't

215
00:12:22,340 --> 00:12:27,860
want to have to remember where these

216
00:12:25,340 --> 00:12:31,970
directories are for each OS like for

217
00:12:27,860 --> 00:12:35,680
instance under Mac OS it's your home

218
00:12:31,970 --> 00:12:40,610
directory library application support

219
00:12:35,680 --> 00:12:44,120
amass kind of kind of a long path to be

220
00:12:40,610 --> 00:12:50,750
worrying about it's just easier in my

221
00:12:44,120 --> 00:12:51,800
opinion to use the - der flag and just

222
00:12:50,750 --> 00:12:54,950
give it

223
00:12:51,800 --> 00:12:57,439
a directory that you want to use since

224
00:12:54,950 --> 00:12:59,269
it needs the directory anyway and some

225
00:12:57,440 --> 00:13:01,130
people just you know and would prefer

226
00:12:59,269 --> 00:13:07,060
use the default and I have to think

227
00:13:01,130 --> 00:13:11,689
about it it uses those special locations

228
00:13:07,060 --> 00:13:13,160
or default locations so I thought I'd

229
00:13:11,690 --> 00:13:16,070
mention that since many people have

230
00:13:13,160 --> 00:13:20,050
asked about you know how exactly does

231
00:13:16,070 --> 00:13:22,190
the output directory work and you know

232
00:13:20,050 --> 00:13:28,640
what they use for why is it being

233
00:13:22,190 --> 00:13:30,589
created things like that yeah I get a

234
00:13:28,640 --> 00:13:36,610
lot of questions too about the graph

235
00:13:30,589 --> 00:13:41,420
database so the graph database is not

236
00:13:36,610 --> 00:13:48,610
necessary it is used by default there's

237
00:13:41,420 --> 00:13:48,610
a flag pretty sure it's no local

238
00:13:56,800 --> 00:14:06,109
no local DB that sort of so if you use

239
00:14:00,620 --> 00:14:08,990
this flag you can cause the local

240
00:14:06,110 --> 00:14:11,990
database not to be created the effect

241
00:14:08,990 --> 00:14:16,279
that has on your experience using this

242
00:14:11,990 --> 00:14:19,730
tool is that you will not be able to use

243
00:14:16,279 --> 00:14:21,439
the tracking features you will not be

244
00:14:19,730 --> 00:14:27,050
able to use the visualization generation

245
00:14:21,439 --> 00:14:28,849
and you will not be able to ask the tool

246
00:14:27,050 --> 00:14:32,060
to produce previous you know previous

247
00:14:28,850 --> 00:14:36,470
discoveries or findings since it's not

248
00:14:32,060 --> 00:14:38,239
going to save it anywhere but it would

249
00:14:36,470 --> 00:14:43,009
cause your workflow if you're simply

250
00:14:38,240 --> 00:14:46,459
going to use the data from say an output

251
00:14:43,009 --> 00:14:48,649
text file and send it to something else

252
00:14:46,459 --> 00:14:51,050
and you have no intention of using the

253
00:14:48,649 --> 00:14:53,540
data later then it could speed up the

254
00:14:51,050 --> 00:14:56,170
process since it's one less thing that a

255
00:14:53,540 --> 00:14:59,240
mass has to handle before it's finished

256
00:14:56,170 --> 00:15:04,309
mm-hmm so it's worth noting or being

257
00:14:59,240 --> 00:15:08,420
aware of the graph database is generated

258
00:15:04,309 --> 00:15:09,620
at runtime in memory but it does not

259
00:15:08,420 --> 00:15:13,009
have to save it for you if you don't

260
00:15:09,620 --> 00:15:19,000
want it and the reason it uses the graph

261
00:15:13,009 --> 00:15:22,670
database is because graphs are the

262
00:15:19,000 --> 00:15:27,819
structure that infrastructure pipe is

263
00:15:22,670 --> 00:15:31,579
actually laid out in it's more natural

264
00:15:27,819 --> 00:15:35,689
than say relational database are a list

265
00:15:31,579 --> 00:15:37,099
of some type so it just it works better

266
00:15:35,689 --> 00:15:48,319
it allows makes it easier to work with

267
00:15:37,100 --> 00:15:51,440
the data alright so moving along another

268
00:15:48,319 --> 00:16:05,640
thing I was going to quickly go

269
00:15:51,440 --> 00:16:08,640
is the subcommands so we will not have

270
00:16:05,640 --> 00:16:14,250
time to go in depth on each of these

271
00:16:08,640 --> 00:16:15,870
today but I do want to mention what what

272
00:16:14,250 --> 00:16:19,440
are these though or what are the

273
00:16:15,870 --> 00:16:22,050
differences between them so the one that

274
00:16:19,440 --> 00:16:24,450
most people I imagine are familiar with

275
00:16:22,050 --> 00:16:29,270
is this one right because this is the

276
00:16:24,450 --> 00:16:33,050
vertical domain domain name correlation

277
00:16:29,270 --> 00:16:39,620
or DNS enumeration of the main

278
00:16:33,050 --> 00:16:39,620
numeration which many people are fond of

279
00:16:39,740 --> 00:16:47,550
but the other one that is probably of

280
00:16:43,290 --> 00:16:50,490
interest as well is Intel so in the

281
00:16:47,550 --> 00:16:52,349
future I'm thinking of changing these

282
00:16:50,490 --> 00:16:54,930
names to be a little bit more clear I

283
00:16:52,350 --> 00:16:57,300
might call them horizontal and vertical

284
00:16:54,930 --> 00:16:59,540
just to make it perfectly clear what

285
00:16:57,300 --> 00:17:04,440
what the differences but the goal of

286
00:16:59,540 --> 00:17:07,200
Intel was really to allow you to provide

287
00:17:04,440 --> 00:17:09,840
what you know about the target and find

288
00:17:07,200 --> 00:17:14,660
more of its attack surface or more of

289
00:17:09,839 --> 00:17:14,659
its infrastructure more of its namespace

290
00:17:15,349 --> 00:17:21,869
so that you could expand your scope so

291
00:17:20,430 --> 00:17:23,450
if you're not trying to expand your

292
00:17:21,869 --> 00:17:26,790
scope then it's probably not of interest

293
00:17:23,450 --> 00:17:30,150
but if you're looking to know as much

294
00:17:26,790 --> 00:17:35,100
about the target say organization or

295
00:17:30,150 --> 00:17:39,540
network as possible then Intel would be

296
00:17:35,100 --> 00:17:41,939
of interest to you and and I'll mention

297
00:17:39,540 --> 00:17:45,450
a few things today about how the two of

298
00:17:41,940 --> 00:17:46,920
these can feed each other which Jason

299
00:17:45,450 --> 00:17:55,360
Haddix has covered in the past and some

300
00:17:46,920 --> 00:17:56,980
of his previous presentations is

301
00:17:55,360 --> 00:17:59,309
quite simple it really just takes data

302
00:17:56,980 --> 00:18:04,420
that you feel already collected and then

303
00:17:59,309 --> 00:18:07,860
makes it possible to generate files that

304
00:18:04,420 --> 00:18:11,260
can then be used to visualize your

305
00:18:07,860 --> 00:18:14,169
discoveries I personally find this very

306
00:18:11,260 --> 00:18:16,570
helpful I'm a very visual person and I

307
00:18:14,170 --> 00:18:18,580
also like being able to present the

308
00:18:16,570 --> 00:18:22,360
findings this way to other people since

309
00:18:18,580 --> 00:18:25,210
I have personally found that people who

310
00:18:22,360 --> 00:18:27,010
aren't doing this like we are tend to

311
00:18:25,210 --> 00:18:29,200
understand it better when you can point

312
00:18:27,010 --> 00:18:33,179
at something and say that this is what

313
00:18:29,200 --> 00:18:39,450
that is this is why it shouldn't be here

314
00:18:33,179 --> 00:18:42,850
things like that the tracking feature is

315
00:18:39,450 --> 00:18:45,040
so that if you're doing these

316
00:18:42,850 --> 00:18:48,490
enumerations multiple times against the

317
00:18:45,040 --> 00:18:50,409
same target and your goal when it's all

318
00:18:48,490 --> 00:18:52,480
over is you just want to know what

319
00:18:50,410 --> 00:18:54,309
showed up or what changed from the last

320
00:18:52,480 --> 00:18:57,190
time I did it don't bother me with the

321
00:18:54,309 --> 00:18:59,080
things I already know then you would

322
00:18:57,190 --> 00:19:01,480
like this feature because it allows you

323
00:18:59,080 --> 00:19:04,480
to just get the highlights or just get

324
00:19:01,480 --> 00:19:07,179
the changes what's been removed what's

325
00:19:04,480 --> 00:19:14,169
been added what has moved to a new

326
00:19:07,179 --> 00:19:17,799
location the DB sub command is becoming

327
00:19:14,169 --> 00:19:20,770
more and more important it's it's the

328
00:19:17,799 --> 00:19:24,960
command that allows you to take control

329
00:19:20,770 --> 00:19:27,668
of your data after it's been collected

330
00:19:24,960 --> 00:19:30,190
we have a lot of work to do on this as

331
00:19:27,669 --> 00:19:31,390
we keep moving along with this project

332
00:19:30,190 --> 00:19:34,840
because there's a lot of things that

333
00:19:31,390 --> 00:19:37,030
currently I'd like to see users be able

334
00:19:34,840 --> 00:19:38,040
to do with this that you you can't right

335
00:19:37,030 --> 00:19:41,230
now

336
00:19:38,040 --> 00:19:44,320
right now you kind of get what you get

337
00:19:41,230 --> 00:19:46,299
and the DB command can tell you what's

338
00:19:44,320 --> 00:19:49,570
in there but for instance it doesn't

339
00:19:46,299 --> 00:19:52,679
really let you make changes to the data

340
00:19:49,570 --> 00:19:58,840
or maybe add things in that you know

341
00:19:52,679 --> 00:20:01,060
should be in there and to be honest

342
00:19:58,840 --> 00:20:03,429
last one is a little bit of an

343
00:20:01,060 --> 00:20:06,690
experimental feature right now it's just

344
00:20:03,430 --> 00:20:11,500
in here at the moment

345
00:20:06,690 --> 00:20:14,470
for testing kind of eventually I'd like

346
00:20:11,500 --> 00:20:16,720
to think it could be exactly what it

347
00:20:14,470 --> 00:20:19,420
says it could be if you have a list of

348
00:20:16,720 --> 00:20:22,810
names and you just want to resolve all

349
00:20:19,420 --> 00:20:27,160
the names and be able to get them into

350
00:20:22,810 --> 00:20:29,080
your amassed data then this would be the

351
00:20:27,160 --> 00:20:35,590
sub command to do it as opposed to doing

352
00:20:29,080 --> 00:20:40,120
a full enumeration all right so moving

353
00:20:35,590 --> 00:20:43,300
along so let's let's see what this up

354
00:20:40,120 --> 00:20:48,510
what does this all mean what does this

355
00:20:43,300 --> 00:20:51,159
look like it's all I'll start out with

356
00:20:48,510 --> 00:20:53,080
what I would guess everyone is or

357
00:20:51,160 --> 00:20:58,180
everyone that's uses before is already

358
00:20:53,080 --> 00:21:04,300
familiar with which is you have a domain

359
00:20:58,180 --> 00:21:05,980
name and you'd like to get sub domain

360
00:21:04,300 --> 00:21:10,300
enumeration performed against that

361
00:21:05,980 --> 00:21:13,630
domain so I tend to use these to make

362
00:21:10,300 --> 00:21:18,250
sure I can see all the results for all

363
00:21:13,630 --> 00:21:29,890
the data available and then we'll just

364
00:21:18,250 --> 00:21:32,380
put in a wasp or gray now so what

365
00:21:29,890 --> 00:21:36,880
happens right now is it it's firing up

366
00:21:32,380 --> 00:21:40,360
the engine where the various data

367
00:21:36,880 --> 00:21:44,610
sources that the services get fired off

368
00:21:40,360 --> 00:21:47,139
and the engine that sends out the

369
00:21:44,610 --> 00:21:53,669
requests are starting to send them out

370
00:21:47,140 --> 00:21:53,670
and then soon you'll see it say that uh

371
00:21:53,730 --> 00:21:59,220
it's engaging actually I'm surprised I'm

372
00:21:57,070 --> 00:22:02,530
not seeing it there we go

373
00:21:59,220 --> 00:22:08,860
but it's engaging the various data

374
00:22:02,530 --> 00:22:09,850
sources in asking about OAuth org I'm

375
00:22:08,860 --> 00:22:12,060
gonna have to make this a little bigger

376
00:22:09,850 --> 00:22:12,060
I think

377
00:22:22,880 --> 00:22:31,910
so as you can see it tells you what

378
00:22:26,400 --> 00:22:33,240
which source found it first what the

379
00:22:31,910 --> 00:22:35,580
name was

380
00:22:33,240 --> 00:22:42,090
and then what the IP address or

381
00:22:35,580 --> 00:22:43,949
addresses was that for that name now one

382
00:22:42,090 --> 00:22:47,090
thing that many people perhaps would

383
00:22:43,950 --> 00:22:51,870
know is that let's say that this is the

384
00:22:47,090 --> 00:22:54,899
data source that gets reported for

385
00:22:51,870 --> 00:22:58,290
finding this it does not mean that if

386
00:22:54,900 --> 00:23:01,830
the only data source that found it it's

387
00:22:58,290 --> 00:23:05,790
just the first one or the or the one

388
00:23:01,830 --> 00:23:07,139
that was chosen to be printed since

389
00:23:05,790 --> 00:23:09,180
there's only really room here to be

390
00:23:07,140 --> 00:23:12,510
printing one but the chances are

391
00:23:09,180 --> 00:23:15,060
actually pretty good that there could be

392
00:23:12,510 --> 00:23:20,460
several data sources that found the same

393
00:23:15,060 --> 00:23:24,659
name and in the future we're thinking of

394
00:23:20,460 --> 00:23:26,970
creating a DB sub command like flag or

395
00:23:24,660 --> 00:23:29,100
requests where you could say for this

396
00:23:26,970 --> 00:23:36,930
name show me all the sources that found

397
00:23:29,100 --> 00:23:39,709
it I think there's some value in knowing

398
00:23:36,930 --> 00:23:44,570
that because it would allow you to know

399
00:23:39,710 --> 00:23:44,570
how likely is it that people can find it

400
00:23:44,720 --> 00:23:54,770
how known is that is the target for that

401
00:23:50,010 --> 00:23:58,230
or the asset because if you found it and

402
00:23:54,770 --> 00:24:02,100
says well only one data source knew

403
00:23:58,230 --> 00:24:04,770
about it then in your mind you could say

404
00:24:02,100 --> 00:24:06,389
this the chances are pretty low that

405
00:24:04,770 --> 00:24:11,270
other people know about this maybe it

406
00:24:06,390 --> 00:24:14,460
hasn't been checked yet for security

407
00:24:11,270 --> 00:24:16,340
vulnerabilities perhaps it's worth my

408
00:24:14,460 --> 00:24:21,120
time to take a look at it

409
00:24:16,340 --> 00:24:21,689
relative to some of the other ones so

410
00:24:21,120 --> 00:24:25,979
anyway this

411
00:24:21,690 --> 00:24:29,190
small domain rate got very small number

412
00:24:25,980 --> 00:24:33,389
of names it only found the results from

413
00:24:29,190 --> 00:24:39,029
you know a few places and they all are

414
00:24:33,389 --> 00:24:40,699
under Cloud Fleur so it printed it gives

415
00:24:39,029 --> 00:24:42,960
you the summary information at the end

416
00:24:40,700 --> 00:24:45,210
you know it indicates that it's finished

417
00:24:42,960 --> 00:24:48,720
and then it moves on to if you didn't

418
00:24:45,210 --> 00:24:53,639
turn off the local DB storage then it

419
00:24:48,720 --> 00:24:57,120
migrates the data into the local DB that

420
00:24:53,639 --> 00:25:00,149
that's in my mind at least typical usage

421
00:24:57,120 --> 00:25:05,758
of this tool many people I've seen on

422
00:25:00,149 --> 00:25:10,489
Twitter use this in passive mode I would

423
00:25:05,759 --> 00:25:12,480
argue if you use it that way you are

424
00:25:10,490 --> 00:25:16,639
guaranteeing probably that it's going to

425
00:25:12,480 --> 00:25:23,009
be faster to complete but you're also

426
00:25:16,639 --> 00:25:26,340
only using a mass for the most basic of

427
00:25:23,009 --> 00:25:28,919
of capabilities that it has you're only

428
00:25:26,340 --> 00:25:32,789
engaging the data sources pulling the

429
00:25:28,919 --> 00:25:35,759
results and printing them out

430
00:25:32,789 --> 00:25:38,070
it doesn't even allow a mask to validate

431
00:25:35,759 --> 00:25:41,190
that the names are still being used or

432
00:25:38,070 --> 00:25:46,289
still in the DNS records of the target

433
00:25:41,190 --> 00:25:49,799
organization so it's extremely limited

434
00:25:46,289 --> 00:25:52,470
it's just faster because there's less

435
00:25:49,799 --> 00:25:55,830
work to do but if you take off the

436
00:25:52,470 --> 00:25:59,070
passive flag it's pulling the same data

437
00:25:55,830 --> 00:26:02,990
but now it's checking that those names

438
00:25:59,070 --> 00:26:07,019
are still legitimate or they're still it

439
00:26:02,990 --> 00:26:09,509
valid and it allows you to get the

440
00:26:07,019 --> 00:26:11,519
additional information of not just that

441
00:26:09,509 --> 00:26:15,570
the you know what are the names but what

442
00:26:11,519 --> 00:26:20,250
are the IP addresses and it allows you

443
00:26:15,570 --> 00:26:22,049
to find more of the infrastructure for

444
00:26:20,250 --> 00:26:25,289
the target organization and it's going

445
00:26:22,049 --> 00:26:28,500
to find more names name is that that the

446
00:26:25,289 --> 00:26:31,049
passive data sources didn't know for

447
00:26:28,500 --> 00:26:35,429
instance by using things like reverse

448
00:26:31,049 --> 00:26:38,400
DNS queries and things like that

449
00:26:35,429 --> 00:26:44,040
Oh me

450
00:26:38,400 --> 00:26:44,930
check how we're doing on time here then

451
00:26:44,040 --> 00:26:47,870
real quick do we have

452
00:26:44,930 --> 00:26:53,060
questions at the moment about output or

453
00:26:47,870 --> 00:27:02,659
what I've covered so far or is everyone

454
00:26:53,060 --> 00:27:05,629
holding their questions as asked I'll

455
00:27:02,660 --> 00:27:08,840
assume that's no one will continue

456
00:27:05,630 --> 00:27:14,750
moving forward so that's basic usage or

457
00:27:08,840 --> 00:27:15,360
what I would call basic usage once you

458
00:27:14,750 --> 00:27:19,170
have the

459
00:27:15,360 --> 00:27:20,580
information though as I mentioned

460
00:27:19,170 --> 00:27:28,429
earlier earlier there's other things you

461
00:27:20,580 --> 00:27:28,428
can do with it so right now if I bring

462
00:27:29,570 --> 00:27:40,950
this to the top of the screen I type a

463
00:27:33,720 --> 00:27:47,660
mass and I say DB and I'll just say show

464
00:27:40,950 --> 00:27:49,860
me the summary information for Alice org

465
00:27:47,660 --> 00:27:52,740
so it will print the same

466
00:27:49,860 --> 00:27:56,879
we saw a moment ago when it completed

467
00:27:52,740 --> 00:27:59,100
the enumeration mmm

468
00:27:56,880 --> 00:28:01,920
thing that's interesting about doing it

469
00:27:59,100 --> 00:28:04,139
this way though is if if you've done

470
00:28:01,920 --> 00:28:08,370
that enumeration ten times say over the

471
00:28:04,140 --> 00:28:15,510
course of a couple weeks this summer

472
00:28:08,370 --> 00:28:17,520
information will will include only the

473
00:28:15,510 --> 00:28:19,290
information you've collected so each

474
00:28:17,520 --> 00:28:22,379
enumeration isn't guaranteed to give you

475
00:28:19,290 --> 00:28:28,020
the same results all right it depends on

476
00:28:22,380 --> 00:28:33,150
how each data source behaved it depends

477
00:28:28,020 --> 00:28:37,230
on how the resolvers behaved that you

478
00:28:33,150 --> 00:28:38,610
know you queried for the names there's

479
00:28:37,230 --> 00:28:41,910
all sorts of reasons why you could get

480
00:28:38,610 --> 00:28:46,918
different answers each time you fire

481
00:28:41,910 --> 00:28:50,870
this off also though if you have data in

482
00:28:46,919 --> 00:28:54,030
the database a mass pulls the data as

483
00:28:50,870 --> 00:28:58,379
input for future enumerations against

484
00:28:54,030 --> 00:29:04,649
the same target so if I if I do another

485
00:28:58,380 --> 00:29:07,410
org enumeration all those names that

486
00:29:04,650 --> 00:29:13,940
showed up the first time which we can

487
00:29:07,410 --> 00:29:19,740
look at despite typing this so all those

488
00:29:13,940 --> 00:29:22,490
will end up in the next enumeration mmm

489
00:29:19,740 --> 00:29:26,630
you'll just get added in immediately in

490
00:29:22,490 --> 00:29:30,000
order to encourage consistency from one

491
00:29:26,630 --> 00:29:31,919
enumeration to the next so that we're

492
00:29:30,000 --> 00:29:35,580
not missing anything we already knew

493
00:29:31,919 --> 00:29:36,210
about assuming it's still there which

494
00:29:35,580 --> 00:29:37,560
hopeful

495
00:29:36,210 --> 00:29:40,260
the effect of that is that every time

496
00:29:37,560 --> 00:29:44,520
you run this you should only be getting

497
00:29:40,260 --> 00:29:48,710
more and more results as long as you're

498
00:29:44,520 --> 00:29:54,240
not wiping out the database in between

499
00:29:48,710 --> 00:29:57,060
executions so that's a nice feature it

500
00:29:54,240 --> 00:29:59,880
also helps the tracking so that again it

501
00:29:57,060 --> 00:30:03,330
creates consistency so that hopefully if

502
00:29:59,880 --> 00:30:05,370
you're using tracking and it says you

503
00:30:03,330 --> 00:30:07,320
know a name was still you know removed

504
00:30:05,370 --> 00:30:10,709
hopefully that actually means it was

505
00:30:07,320 --> 00:30:19,560
removed not just that you didn't get

506
00:30:10,710 --> 00:30:23,430
lucky this time and discover it all

507
00:30:19,560 --> 00:30:30,600
right so another thing you can do once

508
00:30:23,430 --> 00:30:40,460
the data is in the database is visualize

509
00:30:30,600 --> 00:30:40,459
it so what you're seeing here is this up

510
00:30:40,820 --> 00:30:53,540
lots of to hear but d3 is the format

511
00:30:47,760 --> 00:30:56,820
that I'm going to ask it to export the

512
00:30:53,540 --> 00:31:00,420
data in which allows us to open it up in

513
00:30:56,820 --> 00:31:03,629
a browser because it's got HTML around

514
00:31:00,420 --> 00:31:08,700
it and allows us to just look at the

515
00:31:03,630 --> 00:31:10,530
results in the web browser so it's nice

516
00:31:08,700 --> 00:31:13,950
when you have a small number of findings

517
00:31:10,530 --> 00:31:16,050
because I would say III can probably

518
00:31:13,950 --> 00:31:20,160
handle at least with the way I'm using

519
00:31:16,050 --> 00:31:22,860
it up to maybe a thousand discoveries if

520
00:31:20,160 --> 00:31:24,540
you start getting higher than that it

521
00:31:22,860 --> 00:31:26,760
starts getting overwhelmed I think and

522
00:31:24,540 --> 00:31:34,700
probably want to consider other formats

523
00:31:26,760 --> 00:31:36,330
other programs to visualize it so if we

524
00:31:34,700 --> 00:31:48,140
D 3

525
00:31:36,330 --> 00:31:51,350
hell it wast org should end up with our

526
00:31:48,140 --> 00:31:54,710
d3 information in the output directory

527
00:31:51,350 --> 00:31:54,709
say about that

528
00:31:57,950 --> 00:32:04,190
Clara t'v go look at it

529
00:32:56,480 --> 00:33:01,110
that's interesting

530
00:32:58,289 --> 00:33:09,960
I imagine though what we're hoping to

531
00:33:01,110 --> 00:33:10,879
see is right here so yeah this isn't the

532
00:33:09,960 --> 00:33:15,110
most

533
00:33:10,880 --> 00:33:15,770
and graph to look at but that's your

534
00:33:15,110 --> 00:33:19,270
domain

535
00:33:15,770 --> 00:33:21,500
the subdomains these are the addresses

536
00:33:19,270 --> 00:33:22,850
which the fact that they're so huge

537
00:33:21,500 --> 00:33:25,640
probably means a lot of these are

538
00:33:22,850 --> 00:33:27,139
pointing to the same addresses maybe

539
00:33:25,640 --> 00:33:29,270
maybe all of them are pointing to the

540
00:33:27,140 --> 00:33:33,740
same ones which I think what we saw

541
00:33:29,270 --> 00:33:36,830
earlier and we have the different net

542
00:33:33,740 --> 00:33:42,890
blocks the IP addresses belong to the a

543
00:33:36,830 --> 00:33:47,449
s information and I've got some pointer

544
00:33:42,890 --> 00:33:53,360
records that are pointing back to some

545
00:33:47,450 --> 00:33:54,890
of these names and that's about it now

546
00:33:53,360 --> 00:33:56,990
larger targets give you more interesting

547
00:33:54,890 --> 00:34:00,410
things to look at but um anyway that

548
00:33:56,990 --> 00:34:03,440
that's how you would output that and

549
00:34:00,410 --> 00:34:05,840
open it up quick to take a look at it if

550
00:34:03,440 --> 00:34:10,220
you had a more interesting graph you'd

551
00:34:05,840 --> 00:34:13,580
probably have structure more interesting

552
00:34:10,219 --> 00:34:16,509
to look at which could give you ideas

553
00:34:13,580 --> 00:34:19,969
for where you want to spend your time

554
00:34:16,510 --> 00:34:24,290
investigating the the assets maybe where

555
00:34:19,969 --> 00:34:27,949
you would if you start to see say a lot

556
00:34:24,290 --> 00:34:30,139
of names that are indicating maybe

557
00:34:27,949 --> 00:34:32,000
there's development activity going on

558
00:34:30,139 --> 00:34:33,889
there you know things that would cause

559
00:34:32,000 --> 00:34:37,130
people to make bad decisions and could

560
00:34:33,889 --> 00:34:39,679
be again worth looking into more perhaps

561
00:34:37,130 --> 00:34:44,360
you don't hone in on those parts of

562
00:34:39,679 --> 00:34:45,830
their network I also notice you can just

563
00:34:44,360 --> 00:34:48,740
quickly see relationships between

564
00:34:45,830 --> 00:34:50,690
organizations you know such as people

565
00:34:48,739 --> 00:34:53,359
using certain services and you know it's

566
00:34:50,690 --> 00:34:55,790
interesting to be able to quickly pull

567
00:34:53,360 --> 00:34:59,390
that out of the realization whereas you

568
00:34:55,790 --> 00:35:02,330
know trying to glean that from you know

569
00:34:59,390 --> 00:35:07,700
a list of names and IP addresses at

570
00:35:02,330 --> 00:35:08,520
least for me is not quite as easy all

571
00:35:07,700 --> 00:35:14,069
right so

572
00:35:08,520 --> 00:35:18,840
think this would be a good time to move

573
00:35:14,070 --> 00:35:20,240
along to not just basic usage but I mean

574
00:35:18,840 --> 00:35:23,820
if you haven't noticed already I'm I'm

575
00:35:20,240 --> 00:35:26,359
skimming and trying to hit points that I

576
00:35:23,820 --> 00:35:29,520
feel I get a lot of questions on our

577
00:35:26,360 --> 00:35:31,830
discord server about if I were going to

578
00:35:29,520 --> 00:35:33,630
try to cover everything about this tool

579
00:35:31,830 --> 00:35:35,180
we'd have to have a probably a full-day

580
00:35:33,630 --> 00:35:37,710
training session or something like that

581
00:35:35,180 --> 00:35:39,660
I've done training sessions in the past

582
00:35:37,710 --> 00:35:42,720
where there at least twice as long as

583
00:35:39,660 --> 00:35:45,740
this workshop and still like at the end

584
00:35:42,720 --> 00:35:48,180
feel like there's more to talk about so

585
00:35:45,740 --> 00:35:51,930
I'm trying to use this as a opportunity

586
00:35:48,180 --> 00:35:54,330
to share with people answers to

587
00:35:51,930 --> 00:35:56,700
questions I feel like I get frequently

588
00:35:54,330 --> 00:35:59,009
so that in the future people would have

589
00:35:56,700 --> 00:36:07,470
a place to go get answers to these

590
00:35:59,010 --> 00:36:13,130
things faster so one thing I use a lot

591
00:36:07,470 --> 00:36:20,120
and I'm not sure everyone realizes

592
00:36:13,130 --> 00:36:20,120
realizes is that their disposal is the

593
00:36:21,020 --> 00:36:28,160
include flag this up again

594
00:36:34,150 --> 00:36:46,750
so include and exclude allow you to

595
00:36:46,960 --> 00:36:54,460
control which data sources are being

596
00:36:49,790 --> 00:36:54,460
used went during your enumeration

597
00:36:54,940 --> 00:37:04,700
so perhaps you you know for sure that

598
00:36:58,520 --> 00:37:07,009
you just don't want to use some some

599
00:37:04,700 --> 00:37:09,500
data sources maybe you know that you

600
00:37:07,010 --> 00:37:12,670
only want to use a few or you'd like to

601
00:37:09,500 --> 00:37:16,420
see only what comes back from from those

602
00:37:12,670 --> 00:37:20,240
so there's some some ways that you can

603
00:37:16,420 --> 00:37:22,310
leverage this in order to I would say

604
00:37:20,240 --> 00:37:27,919
get finer green control over what

605
00:37:22,310 --> 00:37:35,840
happens when you execute a mass so for

606
00:37:27,920 --> 00:37:43,250
instance as an example if I I say a mass

607
00:37:35,840 --> 00:37:45,530
you know so actually let me let me

608
00:37:43,250 --> 00:37:51,170
mention one more thing if you say

609
00:37:45,530 --> 00:37:56,690
passive what this will do for you

610
00:37:51,170 --> 00:37:58,280
when you're using the include flag is it

611
00:37:56,690 --> 00:38:01,400
will allow you to say I'm only going to

612
00:37:58,280 --> 00:38:03,980
mention one data source and I I just

613
00:38:01,400 --> 00:38:05,390
want it print it out I I really don't

614
00:38:03,980 --> 00:38:07,760
want anything else done with it or

615
00:38:05,390 --> 00:38:10,160
almost pretty much nothing done with it

616
00:38:07,760 --> 00:38:13,160
I just want to see the results that come

617
00:38:10,160 --> 00:38:19,180
from it so if you say passive and

618
00:38:13,160 --> 00:38:19,180
include and let's just

619
00:38:27,380 --> 00:38:36,119
fire that off what should happen is that

620
00:38:31,859 --> 00:38:41,190
it's only going to ask that one data

621
00:38:36,119 --> 00:38:45,869
source for the subdomains for OWASP org

622
00:38:41,190 --> 00:38:47,670
and it's just going to print it out so

623
00:38:45,869 --> 00:38:54,089
there's there's some things that happen

624
00:38:47,670 --> 00:38:55,589
anyway in the the engine the amass

625
00:38:54,089 --> 00:38:57,450
engine that you really just can't avoid

626
00:38:55,589 --> 00:39:02,279
like for instance it's gonna do this in

627
00:38:57,450 --> 00:39:04,189
Iowa this uh first one here but for the

628
00:39:02,279 --> 00:39:05,940
most part all you're gonna get is

629
00:39:04,190 --> 00:39:10,289
exactly what you requested

630
00:39:05,940 --> 00:39:11,849
mmm so that can be a helpful feature I

631
00:39:10,289 --> 00:39:14,579
mean I use that all the time when I'm

632
00:39:11,849 --> 00:39:16,049
testing if I want to say look I just

633
00:39:14,579 --> 00:39:19,740
want to see what happens when I engage

634
00:39:16,049 --> 00:39:22,589
that one data source and that it's going

635
00:39:19,740 --> 00:39:26,399
to give me what I'm expecting it to give

636
00:39:22,589 --> 00:39:28,109
me but I imagine that could be pretty

637
00:39:26,400 --> 00:39:30,319
useful for people who want to have that

638
00:39:28,109 --> 00:39:33,690
kind of fine-grained control over their

639
00:39:30,319 --> 00:39:37,230
enumeration process the other similar

640
00:39:33,690 --> 00:39:38,940
thing here is now let's say you wanted

641
00:39:37,230 --> 00:39:41,700
to do something like that but you didn't

642
00:39:38,940 --> 00:39:45,029
want passive one thing that I don't

643
00:39:41,700 --> 00:39:46,828
think enough people realize is if you do

644
00:39:45,029 --> 00:39:49,079
if you were to just fire this off right

645
00:39:46,829 --> 00:39:52,349
here it's it's probably not going to do

646
00:39:49,079 --> 00:39:55,380
quite what you had in mind because what

647
00:39:52,349 --> 00:39:58,710
will happen is you're now asking it to

648
00:39:55,380 --> 00:40:03,599
go get the names for the sub domain

649
00:39:58,710 --> 00:40:06,059
names for Alice org but then when the

650
00:40:03,599 --> 00:40:09,180
rest of the process attempts to get IP

651
00:40:06,059 --> 00:40:12,630
addresses what you will do

652
00:40:09,180 --> 00:40:15,089
it'll get IP addresses because the DNS

653
00:40:12,630 --> 00:40:17,609
will take care of that but then when

654
00:40:15,089 --> 00:40:19,740
it's going to take those IP address as

655
00:40:17,609 --> 00:40:24,480
an attempt to get network or

656
00:40:19,740 --> 00:40:26,390
infrastructure information about what

657
00:40:24,480 --> 00:40:29,880
network does that IP address reside in

658
00:40:26,390 --> 00:40:32,980
it's going to not be able to find that

659
00:40:29,880 --> 00:40:37,119
because CRTs

660
00:40:32,980 --> 00:40:39,310
does not provide that information so if

661
00:40:37,119 --> 00:40:42,340
you if the effect you're looking for is

662
00:40:39,310 --> 00:40:47,170
I want to run a math not in passive mode

663
00:40:42,340 --> 00:40:49,060
I want but in normal mode but the only

664
00:40:47,170 --> 00:40:53,859
data source that produces names that I

665
00:40:49,060 --> 00:40:55,270
want to use is crts H then you actually

666
00:40:53,859 --> 00:40:59,440
need to do something more like this

667
00:40:55,270 --> 00:41:01,780
where you give it the the name data

668
00:40:59,440 --> 00:41:04,980
source and the data source capable of

669
00:41:01,780 --> 00:41:11,770
looking up the infrastructure

670
00:41:04,980 --> 00:41:17,650
information so that way it will be able

671
00:41:11,770 --> 00:41:29,770
to get all the data necessary to to

672
00:41:17,650 --> 00:41:31,570
produce or build the database so for

673
00:41:29,770 --> 00:41:33,250
instance if it wasn't able to

674
00:41:31,570 --> 00:41:34,750
you wouldn't see these things getting

675
00:41:33,250 --> 00:41:36,550
printed out right now the only reason

676
00:41:34,750 --> 00:41:39,220
they don't have IP addresses it at the

677
00:41:36,550 --> 00:41:42,280
end is because I didn't ask a mask to

678
00:41:39,220 --> 00:41:49,540
give it to me as the command line flag

679
00:41:42,280 --> 00:41:54,400
but mm but if it wasn't using our ADB to

680
00:41:49,540 --> 00:41:57,240
get the AAS information then these

681
00:41:54,400 --> 00:42:01,810
things wouldn't be getting printed out

682
00:41:57,240 --> 00:42:07,990
and it wouldn't be able to tell you what

683
00:42:01,810 --> 00:42:12,580
ASN you know these things are on Susan

684
00:42:07,990 --> 00:42:14,049
so that I think is something that you

685
00:42:12,580 --> 00:42:15,670
know I've had people come and ask how

686
00:42:14,050 --> 00:42:19,840
they can have that kind of control over

687
00:42:15,670 --> 00:42:24,220
their enumeration but I think maybe the

688
00:42:19,840 --> 00:42:26,050
project hasn't communicated all this as

689
00:42:24,220 --> 00:42:28,660
well as possible or as well as we could

690
00:42:26,050 --> 00:42:29,620
so here's here's us making our first

691
00:42:28,660 --> 00:42:31,390
attempt

692
00:42:29,620 --> 00:42:33,730
I already told Ben in previous

693
00:42:31,390 --> 00:42:37,930
discussions that you know this project

694
00:42:33,730 --> 00:42:42,790
has goals to clarify some of this in our

695
00:42:37,930 --> 00:42:44,080
documentation in in the future we just

696
00:42:42,790 --> 00:42:48,190
have a lot of things that are going on

697
00:42:44,080 --> 00:42:52,990
and haven't managed to do this as of now

698
00:42:48,190 --> 00:42:55,260
all right so that's what I wanted to

699
00:42:52,990 --> 00:42:59,399
show at least with the include exclude

700
00:42:55,260 --> 00:43:02,320
and just having better control over your

701
00:42:59,400 --> 00:43:04,540
your data sources you'll probably find

702
00:43:02,320 --> 00:43:06,660
this all very useful too as we move to

703
00:43:04,540 --> 00:43:10,390
the discussion of the scripting engine

704
00:43:06,660 --> 00:43:13,000
because when you want to only fire off

705
00:43:10,390 --> 00:43:15,029
your script your custom scripts you're

706
00:43:13,000 --> 00:43:17,530
gonna want to know how to do this

707
00:43:15,030 --> 00:43:19,420
otherwise you're gonna find you're

708
00:43:17,530 --> 00:43:21,580
running your scripts along with all the

709
00:43:19,420 --> 00:43:24,280
other data sources and it'll be hard to

710
00:43:21,580 --> 00:43:28,930
tell what kind of performance you're

711
00:43:24,280 --> 00:43:34,630
getting from your data sources so you'll

712
00:43:28,930 --> 00:43:37,069
probably like this as time goes on all

713
00:43:34,630 --> 00:43:38,210
right so another thing

714
00:43:37,070 --> 00:43:41,090
gonna mention I don't think I'm gonna

715
00:43:38,210 --> 00:43:48,340
spend a lot of time on this I was gonna

716
00:43:41,090 --> 00:43:55,820
show it is so a mask is not by default

717
00:43:48,340 --> 00:44:00,940
perform brute-forcing but it will so if

718
00:43:55,820 --> 00:44:04,570
it's not that difficult to do right so

719
00:44:00,940 --> 00:44:06,680
if we're doing our typical enumeration

720
00:44:04,570 --> 00:44:10,120
you know we say yeah we want to see

721
00:44:06,680 --> 00:44:10,120
where these things are coming from

722
00:44:10,240 --> 00:44:16,819
you can just say brew and what this will

723
00:44:14,600 --> 00:44:22,880
give you if that's all you give it hmm

724
00:44:16,820 --> 00:44:26,690
is it will turn on brute-forcing with

725
00:44:22,880 --> 00:44:29,960
the default configurations and with the

726
00:44:26,690 --> 00:44:34,760
default word list that being the big one

727
00:44:29,960 --> 00:44:36,590
right because most people of course have

728
00:44:34,760 --> 00:44:42,430
their own word lists or ones that they'd

729
00:44:36,590 --> 00:44:46,490
prefer to be using so if you give it the

730
00:44:42,430 --> 00:44:48,589
W flag then you can provide any word

731
00:44:46,490 --> 00:44:51,279
list you like and it will use that

732
00:44:48,590 --> 00:44:54,050
instead keeping in mind of course though

733
00:44:51,280 --> 00:44:55,970
the default behavior of this

734
00:44:54,050 --> 00:44:57,800
brute-forcing if you if you execute it

735
00:44:55,970 --> 00:45:02,509
like this is it's recursive

736
00:44:57,800 --> 00:45:08,330
brute-forcing so the default value which

737
00:45:02,510 --> 00:45:13,029
i think is in here if I'm not correct

738
00:45:08,330 --> 00:45:17,589
about that if not then we

739
00:45:13,029 --> 00:45:19,900
to make sure it makes its way in all

740
00:45:17,589 --> 00:45:27,099
right right here so brute-forcing it is

741
00:45:19,900 --> 00:45:30,489
not enabled by default because these are

742
00:45:27,099 --> 00:45:32,259
commented out but if you enable it it is

743
00:45:30,489 --> 00:45:35,919
recursive by default you can turn that

744
00:45:32,259 --> 00:45:40,089
off let's see number of all right so

745
00:45:35,919 --> 00:45:41,109
this is actually out of date oh good

746
00:45:40,089 --> 00:45:43,869
think good thing I'm going through all

747
00:45:41,109 --> 00:45:48,069
these burn up is update these but this

748
00:45:43,869 --> 00:45:54,099
value by default is 1 not 0 so what does

749
00:45:48,069 --> 00:46:01,709
this mean so the min for recursive value

750
00:45:54,099 --> 00:46:06,009
is it means come up here if I if I have

751
00:46:01,709 --> 00:46:09,729
you know example.com or something like

752
00:46:06,009 --> 00:46:14,019
that that's our domain now that is going

753
00:46:09,729 --> 00:46:15,279
to be brute-force right away like we're

754
00:46:14,019 --> 00:46:20,948
gonna we're gonna end up for instance

755
00:46:15,279 --> 00:46:23,380
trying you know these kinds of names no

756
00:46:20,949 --> 00:46:30,130
matter what but what happened the

757
00:46:23,380 --> 00:46:33,459
question becomes so what happens if it

758
00:46:30,130 --> 00:46:38,079
discovers a another name I'm just

759
00:46:33,459 --> 00:46:42,489
thinking of one like let's make make

760
00:46:38,079 --> 00:46:47,019
something up but discovers this now

761
00:46:42,489 --> 00:46:48,819
people have often asked the project so

762
00:46:47,019 --> 00:46:51,609
what what does the recursive

763
00:46:48,819 --> 00:46:55,409
brute-forcing do does it find that and

764
00:46:51,609 --> 00:46:58,419
then just automatically start forcing

765
00:46:55,409 --> 00:47:02,910
you know for instance trying something

766
00:46:58,419 --> 00:47:06,808
like like that so the the

767
00:47:02,910 --> 00:47:11,009
answer is the default is no the default

768
00:47:06,809 --> 00:47:17,670
behavior is until one label shows up off

769
00:47:11,010 --> 00:47:20,220
of this one like that when that name

770
00:47:17,670 --> 00:47:23,240
shows up or something like it then it

771
00:47:20,220 --> 00:47:27,859
says okay we've now seen evidence that

772
00:47:23,240 --> 00:47:30,779
there's names off of this label and

773
00:47:27,859 --> 00:47:32,460
let's start the recursive or forcing

774
00:47:30,780 --> 00:47:40,049
meaning let's take the entire word list

775
00:47:32,460 --> 00:47:43,289
and apply it to this so if this was

776
00:47:40,049 --> 00:47:46,250
still zero the answer would have been we

777
00:47:43,289 --> 00:47:52,140
just start right away through forcing

778
00:47:46,250 --> 00:47:55,319
the default value of this is one so like

779
00:47:52,140 --> 00:47:57,690
I said it has to see one before will it

780
00:47:55,319 --> 00:47:59,160
will start the way I think of that is it

781
00:47:57,690 --> 00:48:02,010
needs to see evidence that it's worth

782
00:47:59,160 --> 00:48:04,828
doing the recursive enforcing before it

783
00:48:02,010 --> 00:48:06,329
does it but what if for instance for

784
00:48:04,829 --> 00:48:08,039
your target organization that you're

785
00:48:06,329 --> 00:48:10,470
working in you know you're doing your

786
00:48:08,039 --> 00:48:11,970
bug bounty what if you happen to know

787
00:48:10,470 --> 00:48:15,990
that one isn't enough

788
00:48:11,970 --> 00:48:19,859
maybe maybe every subdomain or far too

789
00:48:15,990 --> 00:48:21,328
many of them have www but it doesn't

790
00:48:19,859 --> 00:48:25,078
necessarily mean that it's worth doing

791
00:48:21,329 --> 00:48:30,329
the recursive forcing well so you could

792
00:48:25,079 --> 00:48:31,180
change the value to two or three but

793
00:48:30,329 --> 00:48:32,829
what if

794
00:48:31,180 --> 00:48:35,379
what if you're in the different position

795
00:48:32,829 --> 00:48:37,869
what if your your attitude about it is I

796
00:48:35,380 --> 00:48:41,020
want to do it I want to perforce

797
00:48:37,869 --> 00:48:45,190
everything hold it then set it back to

798
00:48:41,020 --> 00:48:48,759
zero and then it will it's gonna take a

799
00:48:45,190 --> 00:48:53,109
lot longer and but it will brute force

800
00:48:48,760 --> 00:48:55,150
everything it can so that these are

801
00:48:53,109 --> 00:48:56,380
important values that I've had a lot of

802
00:48:55,150 --> 00:48:58,420
people come to me and say they're not

803
00:48:56,380 --> 00:49:01,170
sure what these mean or they or they

804
00:48:58,420 --> 00:49:01,170
don't know how this works

805
00:49:02,280 --> 00:49:10,480
another thing I unfortunately don't have

806
00:49:04,809 --> 00:49:13,530
time to cover during this talk is that

807
00:49:10,480 --> 00:49:15,819
we we provide the ability to do masking

808
00:49:13,530 --> 00:49:18,339
which allows you even greater

809
00:49:15,819 --> 00:49:19,630
flexibility in your brute-forcing like I

810
00:49:18,339 --> 00:49:23,440
said unfortunately I had to leave that

811
00:49:19,630 --> 00:49:25,990
out of this talk but I'd recommend it if

812
00:49:23,440 --> 00:49:27,819
this is important to you you probably

813
00:49:25,990 --> 00:49:31,660
want to go find out what that what that

814
00:49:27,819 --> 00:49:36,900
is because it's it's a feature that is

815
00:49:31,660 --> 00:49:36,899
available to parts of our brute-forcing

816
00:49:38,069 --> 00:49:43,750
all right I could probably spend a lot

817
00:49:41,859 --> 00:49:46,598
of time on this like I said I I have to

818
00:49:43,750 --> 00:49:51,069
cut the Porsche number forcing a little

819
00:49:46,599 --> 00:49:55,599
short but like I like I said it's pretty

820
00:49:51,069 --> 00:50:00,130
typical for me to use a mass where I

821
00:49:55,599 --> 00:50:02,740
just run it you know like this or not

822
00:50:00,130 --> 00:50:05,260
not against this target but like that

823
00:50:02,740 --> 00:50:07,839
would be typical use for me mmm

824
00:50:05,260 --> 00:50:09,790
where I activate you know those two

825
00:50:07,839 --> 00:50:13,808
types of pieces of output that I like to

826
00:50:09,790 --> 00:50:16,540
see I turn on brute-forcing and I give

827
00:50:13,809 --> 00:50:17,770
it the target you can also specify a

828
00:50:16,540 --> 00:50:20,410
list of targets I haven't done that

829
00:50:17,770 --> 00:50:22,839
during the discussion but DF allows you

830
00:50:20,410 --> 00:50:26,078
to give it a text file where you know it

831
00:50:22,839 --> 00:50:31,690
could be domains dot txt or something

832
00:50:26,079 --> 00:50:33,609
like that and it can ingest however many

833
00:50:31,690 --> 00:50:37,180
domains you need although I wouldn't I

834
00:50:33,609 --> 00:50:39,279
wouldn't necessarily encourage doing all

835
00:50:37,180 --> 00:50:42,970
all of them at once if you don't really

836
00:50:39,280 --> 00:50:44,650
need to instead maybe the ones that have

837
00:50:42,970 --> 00:50:49,750
a relationship

838
00:50:44,650 --> 00:50:51,160
each other and then because the more you

839
00:50:49,750 --> 00:50:58,539
try to do it once the more memory you're

840
00:50:51,160 --> 00:51:02,828
going to use so I would keep it in

841
00:50:58,539 --> 00:51:05,289
reasonable chunks if you can although

842
00:51:02,829 --> 00:51:06,970
I've you know we've also worked lately

843
00:51:05,289 --> 00:51:09,789
to try to keep the memory consumption

844
00:51:06,970 --> 00:51:12,640
down so it's been doing much better

845
00:51:09,789 --> 00:51:14,619
these these days but I wouldn't say it's

846
00:51:12,640 --> 00:51:19,859
impossible to overwhelm it if you give

847
00:51:14,619 --> 00:51:22,210
it too much too much to do all right so

848
00:51:19,859 --> 00:51:24,759
I'd like to move on to a topic that I

849
00:51:22,210 --> 00:51:27,190
feel a lot of people are going to get

850
00:51:24,760 --> 00:51:32,799
value out of and I only have a little

851
00:51:27,190 --> 00:51:35,740
bit longer to cover it so let's move on

852
00:51:32,799 --> 00:51:37,809
to that so in the past you know I've

853
00:51:35,740 --> 00:51:45,058
gotten lots of questions about so how

854
00:51:37,809 --> 00:51:48,430
can I get a mask to go even faster and

855
00:51:45,059 --> 00:51:52,420
the speed that this tool goes that is

856
00:51:48,430 --> 00:51:56,640
very related to the number of DNS

857
00:51:52,420 --> 00:51:56,640
resolvers that you give it to work with

858
00:51:57,539 --> 00:52:05,790
so the default number of resolvers

859
00:52:03,360 --> 00:52:08,820
has to work with I believe is something

860
00:52:05,790 --> 00:52:14,130
like eight and they're fairly

861
00:52:08,820 --> 00:52:17,550
high-performance resolvers and reliable

862
00:52:14,130 --> 00:52:19,860
but I would also say if you're using

863
00:52:17,550 --> 00:52:23,970
them a lot and you only have eight to

864
00:52:19,860 --> 00:52:25,440
work with then you're and you're coming

865
00:52:23,970 --> 00:52:28,189
from the same ip that's another thing

866
00:52:25,440 --> 00:52:30,150
that changes the game quite a bit but

867
00:52:28,190 --> 00:52:32,070
assuming for this discussion that you're

868
00:52:30,150 --> 00:52:35,580
coming from the same ip address they

869
00:52:32,070 --> 00:52:37,430
will eventually figure out that you're

870
00:52:35,580 --> 00:52:39,810
over you know you're abusing their sir

871
00:52:37,430 --> 00:52:41,669
service so to speak and you'll start

872
00:52:39,810 --> 00:52:45,870
getting throttled either by the

873
00:52:41,670 --> 00:52:49,410
resolvers or by the authoritative name

874
00:52:45,870 --> 00:52:52,339
server for your target not for every

875
00:52:49,410 --> 00:52:53,879
single one but it all too many I feel

876
00:52:52,340 --> 00:52:57,960
this happened

877
00:52:53,880 --> 00:53:00,120
all too often this happens to me but it

878
00:52:57,960 --> 00:53:06,210
won't happen quite as much or maybe not

879
00:53:00,120 --> 00:53:07,859
at all if you give a mass more resolvers

880
00:53:06,210 --> 00:53:14,090
to work with and if you're changing the

881
00:53:07,860 --> 00:53:16,730
resolvers you know on a regular basis so

882
00:53:14,090 --> 00:53:22,040
for this discussion what I'd like to

883
00:53:16,730 --> 00:53:26,790
encourage is before this workshop I ran

884
00:53:22,040 --> 00:53:28,290
a DNS validator so I imagine many people

885
00:53:26,790 --> 00:53:32,180
are familiar with what that is but just

886
00:53:28,290 --> 00:53:32,180
in case you're not

887
00:53:44,130 --> 00:53:52,900
all right so this is your friend if you

888
00:53:48,339 --> 00:53:57,180
haven't taken a look at it already so

889
00:53:52,900 --> 00:54:01,959
what what I do with this personally is I

890
00:53:57,180 --> 00:54:04,229
build the docker image and I run it just

891
00:54:01,959 --> 00:54:06,489
like they say well except I give it a

892
00:54:04,229 --> 00:54:08,439
quite a few more threads to run but

893
00:54:06,489 --> 00:54:11,949
that's my you know to each their own

894
00:54:08,440 --> 00:54:13,479
because they warn you if you bring that

895
00:54:11,949 --> 00:54:15,069
number up too high you're gonna you're

896
00:54:13,479 --> 00:54:16,598
probably going to regret it but for

897
00:54:15,069 --> 00:54:20,829
instance like I I don't have any problem

898
00:54:16,599 --> 00:54:23,410
running it with 100 or 200 threads but

899
00:54:20,829 --> 00:54:25,839
this works really well and it's pretty

900
00:54:23,410 --> 00:54:27,969
easy to you know you'll have to think

901
00:54:25,839 --> 00:54:30,749
too hard about this when it's all over

902
00:54:27,969 --> 00:54:34,479
you just end up with a file called

903
00:54:30,749 --> 00:54:38,308
resolvers text and you know it can

904
00:54:34,479 --> 00:54:44,259
easily have say something like 9 9,000

905
00:54:38,309 --> 00:54:48,219
public dns servers to work with so I

906
00:54:44,259 --> 00:54:59,769
would definitely recommend case you

907
00:54:48,219 --> 00:55:02,670
can't see this but some put that right

908
00:54:59,769 --> 00:55:08,618
there I would definitely recommend you

909
00:55:02,670 --> 00:55:12,160
take a look at that now one little thing

910
00:55:08,619 --> 00:55:14,829
I'll throw in there though I use

911
00:55:12,160 --> 00:55:17,410
pretty regularly you know I appreciate

912
00:55:14,829 --> 00:55:20,260
all the work that was put into making

913
00:55:17,410 --> 00:55:22,960
this but at the same time it does not

914
00:55:20,260 --> 00:55:25,660
prevent all it doesn't make it so all

915
00:55:22,960 --> 00:55:29,670
the resolvers you get are are good

916
00:55:25,660 --> 00:55:29,670
resolvers mmm so what do I mean by that

917
00:55:31,079 --> 00:55:35,530
so first of all you're gonna give

918
00:55:33,250 --> 00:55:39,099
varying performance right because

919
00:55:35,530 --> 00:55:41,289
there's no telling so whose resolvers

920
00:55:39,099 --> 00:55:42,880
are these are deeper our servers are

921
00:55:41,289 --> 00:55:44,680
these were they being hosted what's you

922
00:55:42,880 --> 00:55:48,700
know what's the latency on them but also

923
00:55:44,680 --> 00:55:51,069
perhaps more concerning some of them

924
00:55:48,700 --> 00:55:53,078
will look legitimate to the validator

925
00:55:51,069 --> 00:55:56,770
and then when you go use them for a

926
00:55:53,079 --> 00:56:00,549
while they could start giving you false

927
00:55:56,770 --> 00:56:03,130
or malicious results so sometimes you

928
00:56:00,549 --> 00:56:06,460
have to play with the your resolver list

929
00:56:03,130 --> 00:56:09,069
quite a bit before you find say a

930
00:56:06,460 --> 00:56:13,150
healthy list that is working well for

931
00:56:09,069 --> 00:56:15,339
you a little bit annoying but I would

932
00:56:13,150 --> 00:56:18,160
still say it's certainly better than not

933
00:56:15,339 --> 00:56:20,339
using this because it's gonna find a you

934
00:56:18,160 --> 00:56:22,960
know weed out a lot of bad ones for you

935
00:56:20,339 --> 00:56:28,410
increasing the chances you can produce a

936
00:56:22,960 --> 00:56:31,390
a good list but going a little further I

937
00:56:28,410 --> 00:56:35,940
don't just take 9,000 resolvers and now

938
00:56:31,390 --> 00:56:44,109
say amass please utilize 9,000 resolvers

939
00:56:35,940 --> 00:56:49,410
what I do is so I have the file produced

940
00:56:44,109 --> 00:56:52,410
already right here so I did it oh nice

941
00:56:49,410 --> 00:56:52,410
okay

942
00:56:57,390 --> 00:57:06,480
so I made this before the workshop but

943
00:57:04,300 --> 00:57:09,750
it's got a lot of resolvers in it right

944
00:57:06,480 --> 00:57:13,090
so what I do is you know for a given

945
00:57:09,750 --> 00:57:16,990
target where I have an idea maybe of how

946
00:57:13,090 --> 00:57:20,560
large it is and maybe I even know how

947
00:57:16,990 --> 00:57:23,379
sensitive they are to you know the

948
00:57:20,560 --> 00:57:26,020
requests coming from the same resolvers

949
00:57:23,380 --> 00:57:27,550
or how likely they are to pick up on my

950
00:57:26,020 --> 00:57:27,910
activity and throttle me and things like

951
00:57:27,550 --> 00:57:30,790
that

952
00:57:27,910 --> 00:57:33,910
you know I'll decide how many do I think

953
00:57:30,790 --> 00:57:37,509
I need mm-hmm but to be honest I think I

954
00:57:33,910 --> 00:57:40,120
I do well oftentimes with like 25 or 50

955
00:57:37,510 --> 00:57:43,960
or 100 you don't you certainly don't

956
00:57:40,120 --> 00:57:51,569
need a thousand least I really don't

957
00:57:43,960 --> 00:57:54,580
think you do so what I do is I take the

958
00:57:51,570 --> 00:58:02,770
list that we have right here and I say

959
00:57:54,580 --> 00:58:06,549
sort randomize and then I just take the

960
00:58:02,770 --> 00:58:22,990
number I want so let's say it's 25 and

961
00:58:06,550 --> 00:58:26,299
then I'll call that 25 so now we just

962
00:58:22,990 --> 00:58:29,058
have that many but that that's a

963
00:58:26,299 --> 00:58:31,549
good number it really is mm-hm it works

964
00:58:29,059 --> 00:58:32,809
quite well for me I if I have that many

965
00:58:31,549 --> 00:58:35,839
in there working well for me I don't

966
00:58:32,809 --> 00:58:38,209
tend to have problems usually against

967
00:58:35,839 --> 00:58:40,459
even large targets where it could take

968
00:58:38,209 --> 00:58:44,899
hours to finish the whole entire

969
00:58:40,459 --> 00:58:52,069
enumeration but with that many you tend

970
00:58:44,900 --> 00:58:53,239
to stay under the radar so but you but

971
00:58:52,069 --> 00:58:55,779
you're gonna have to ask yourself

972
00:58:53,239 --> 00:58:58,329
something when you when you start

973
00:58:55,779 --> 00:59:01,130
tweaking these things with a mask so

974
00:58:58,329 --> 00:59:04,969
let's assume we have we now have

975
00:59:01,130 --> 00:59:08,119
twenty-five resolvers right and if we're

976
00:59:04,969 --> 00:59:11,239
going to use them you would you would

977
00:59:08,119 --> 00:59:16,279
use the RF flag and say I want to use my

978
00:59:11,239 --> 00:59:18,920
25 resolvers but the maximum number of

979
00:59:16,279 --> 00:59:22,910
DNS queries that the amass is going to

980
00:59:18,920 --> 00:59:25,160
send out at any given moment is is the

981
00:59:22,910 --> 00:59:28,339
default value for that is tweaked to the

982
00:59:25,160 --> 00:59:29,959
number of default resolvers so if you

983
00:59:28,339 --> 00:59:31,788
just fire this off with your with your

984
00:59:29,959 --> 00:59:33,979
other arguments you're gonna find that

985
00:59:31,789 --> 00:59:40,299
it's probably not as fast as you would

986
00:59:33,979 --> 00:59:50,749
like so so you're going to need to set

987
00:59:40,299 --> 00:59:53,449
this value right here if you really want

988
00:59:50,749 --> 00:59:54,890
to see like decent performance I would

989
00:59:53,449 --> 00:59:59,630
say you're gonna need to set that value

990
00:59:54,890 --> 01:00:02,029
and you probably want it to be I mean I

991
00:59:59,630 --> 01:00:06,049
would say play with this and come up

992
01:00:02,029 --> 01:00:10,699
with your own conclusion about this but

993
01:00:06,049 --> 01:00:14,109
I like to keep the numbers so that at

994
01:00:10,699 --> 01:00:16,509
any given moment each of those

995
01:00:14,109 --> 01:00:22,259
five resolvers could have between 500

996
01:00:16,509 --> 01:00:27,900
and 1,000 queries being sent to it so

997
01:00:22,259 --> 01:00:30,970
you know you might want to say 25,000 or

998
01:00:27,900 --> 01:00:34,539
maybe 20,000 you know something like

999
01:00:30,970 --> 01:00:36,640
that I mean just the other night I had

1000
01:00:34,539 --> 01:00:38,230
something like this set up or these were

1001
01:00:36,640 --> 01:00:40,089
the this is the way I had to set up I

1002
01:00:38,230 --> 01:00:43,720
had my 25 resolvers they were working

1003
01:00:40,089 --> 01:00:48,808
well for me and I had the Mac set to 20

1004
01:00:43,720 --> 01:00:51,899
20,000 and I was quite happy with the

1005
01:00:48,809 --> 01:00:55,569
consistent high performance I was seeing

1006
01:00:51,900 --> 01:01:01,119
but you need to be aware of which again

1007
01:00:55,569 --> 01:01:04,450
this is my on my shoulders we need to

1008
01:01:01,119 --> 01:01:05,650
get this more documented but these are

1009
01:01:04,450 --> 01:01:07,538
the kinds of things that if you really

1010
01:01:05,650 --> 01:01:09,220
want to have complete control over

1011
01:01:07,539 --> 01:01:15,299
what's happening with a mass you need to

1012
01:01:09,220 --> 01:01:17,439
be aware of these configuration options

1013
01:01:15,299 --> 01:01:19,839
but this kind of this is the kind of

1014
01:01:17,440 --> 01:01:23,700
thing that will allow you to take more

1015
01:01:19,839 --> 01:01:26,619
control over the performance of a mass

1016
01:01:23,700 --> 01:01:30,788
now I'll also say it won't necessarily

1017
01:01:26,619 --> 01:01:35,440
mean that these enumerations are gonna

1018
01:01:30,789 --> 01:01:40,059
finish lightening fast what you could

1019
01:01:35,440 --> 01:01:43,839
find is by having your query spread out

1020
01:01:40,059 --> 01:01:47,440
better you could end up getting more

1021
01:01:43,839 --> 01:01:51,038
results which are only going to cause

1022
01:01:47,440 --> 01:01:53,079
more you know events to take place

1023
01:01:51,039 --> 01:01:57,260
within a mass and it's going to ask more

1024
01:01:53,079 --> 01:01:59,300
questions so you know there's

1025
01:01:57,260 --> 01:02:01,340
things of course to consider like

1026
01:01:59,300 --> 01:02:05,120
earlier I mentioned be careful how much

1027
01:02:01,340 --> 01:02:06,320
you want forcing to fire off because

1028
01:02:05,120 --> 01:02:09,650
that's certainly going to create a lot

1029
01:02:06,320 --> 01:02:12,530
of additional traffic if you aren't

1030
01:02:09,650 --> 01:02:14,330
interested in name alterations which

1031
01:02:12,530 --> 01:02:16,940
personally I I really like name

1032
01:02:14,330 --> 01:02:21,790
alterations but if you don't have any

1033
01:02:16,940 --> 01:02:21,790
interest in it then turn them off so

1034
01:02:21,850 --> 01:02:28,690
that way you're reducing you know the

1035
01:02:26,060 --> 01:02:31,160
additional traffic that occurs I

1036
01:02:28,690 --> 01:02:32,450
personally don't really find myself ever

1037
01:02:31,160 --> 01:02:34,640
turning them off because I think they're

1038
01:02:32,450 --> 01:02:37,970
it's amazing how many results come back

1039
01:02:34,640 --> 01:02:43,759
from name alterations but it also allows

1040
01:02:37,970 --> 01:02:48,350
for the alt and sweep effect where your

1041
01:02:43,760 --> 01:02:52,070
alter permuting names they're finding

1042
01:02:48,350 --> 01:02:55,339
new subnets and then you're doing

1043
01:02:52,070 --> 01:02:57,290
reverse DNS sweeps in those subnets than

1044
01:02:55,340 --> 01:03:00,560
finding new names which then get altered

1045
01:02:57,290 --> 01:03:04,190
or permuting again and the cycle just

1046
01:03:00,560 --> 01:03:06,380
keeps going I'm not sure I would ever

1047
01:03:04,190 --> 01:03:14,840
give that up I think it's a powerful

1048
01:03:06,380 --> 01:03:15,569
effect all right so those are the things

1049
01:03:14,840 --> 01:03:19,920
I

1050
01:03:15,569 --> 01:03:22,650
show for advanced features that I feel

1051
01:03:19,920 --> 01:03:23,849
like these are things that you know I

1052
01:03:22,650 --> 01:03:27,239
don't see people talking about on

1053
01:03:23,849 --> 01:03:30,329
Twitter but I do get questions coming to

1054
01:03:27,239 --> 01:03:31,979
the discord server from some users about

1055
01:03:30,329 --> 01:03:35,099
how they can have better control over

1056
01:03:31,979 --> 01:03:37,049
these aspects of the tool so I thought

1057
01:03:35,099 --> 01:03:43,140
this would be a good place to share with

1058
01:03:37,049 --> 01:03:46,650
hopefully a lot of people I mean I could

1059
01:03:43,140 --> 01:03:50,788
be running these right to show you just

1060
01:03:46,650 --> 01:03:54,390
how you know the impact that it has but

1061
01:03:50,789 --> 01:03:58,170
I think it would use up a lot of our

1062
01:03:54,390 --> 01:03:59,819
time and what I'm gonna do instead is

1063
01:03:58,170 --> 01:04:02,009
I'd like to use that time we have

1064
01:03:59,819 --> 01:04:05,609
available to show you this new scripting

1065
01:04:02,009 --> 01:04:08,819
engine where I will show you we will run

1066
01:04:05,609 --> 01:04:14,750
it a couple times to actually see what's

1067
01:04:08,819 --> 01:04:16,940
happening here at this point though I

1068
01:04:14,750 --> 01:04:20,690
we're at a good spot we're at about one

1069
01:04:16,940 --> 01:04:24,470
hour I think you could do a quick just

1070
01:04:20,690 --> 01:04:27,770
five minute break and I'll be right back

1071
01:04:24,470 --> 01:04:30,220
and then we'll pick up with the

1072
01:04:27,770 --> 01:04:30,220
scripting engine

1073
01:04:51,269 --> 01:05:28,769
I know where is Jeff yeah everyone will

1074
01:05:27,390 --> 01:05:32,269
take a five-minute break and then we'll

1075
01:05:28,769 --> 01:05:36,508
continue with our workshop with a mass

1076
01:05:32,269 --> 01:05:38,189
while we wait since again this is the

1077
01:05:36,509 --> 01:05:41,069
second day we have one more workshop

1078
01:05:38,189 --> 01:05:44,969
coming up with Jason Haddix on the bug

1079
01:05:41,069 --> 01:05:46,558
bounty hunters methodology the fourth

1080
01:05:44,969 --> 01:05:49,079
version of it this is the first time

1081
01:05:46,559 --> 01:05:53,429
Haddix is actually presenting this which

1082
01:05:49,079 --> 01:05:56,429
I'm really really excited about but

1083
01:05:53,429 --> 01:05:59,729
while we wait a few announcements if you

1084
01:05:56,429 --> 01:06:02,849
are a new subscriber just make sure you

1085
01:05:59,729 --> 01:06:04,828
link your discord and your twitch all

1086
01:06:02,849 --> 01:06:10,709
subscribers do actually get their own

1087
01:06:04,829 --> 01:06:12,479
drops every once in a while if you're

1088
01:06:10,709 --> 01:06:14,969
enjoying the material you enjoy the

1089
01:06:12,479 --> 01:06:17,158
conversations you enjoy all of these

1090
01:06:14,969 --> 01:06:20,279
different talks and workshops and you

1091
01:06:17,159 --> 01:06:21,839
want to sorry my phone's going off how's

1092
01:06:20,279 --> 01:06:24,029
this thing on this on twitch but if you

1093
01:06:21,839 --> 01:06:28,469
want to donate and give back do me a

1094
01:06:24,029 --> 01:06:30,419
favor go to Isis org slash donate every

1095
01:06:28,469 --> 01:06:33,389
dollar counts even if it is five dollars

1096
01:06:30,419 --> 01:06:34,979
one dollar two dollars there's 500

1097
01:06:33,389 --> 01:06:36,719
people here if everybody donuts two

1098
01:06:34,979 --> 01:06:38,968
dollars we have raised a thousand fro

1099
01:06:36,719 --> 01:06:40,969
Isis within minutes so do me a favor if

1100
01:06:38,969 --> 01:06:49,260
you're enjoying it head over there and

1101
01:06:40,969 --> 01:06:53,070
make a donation and ask

1102
01:06:49,260 --> 01:06:59,490
least there's also an IOT workshop

1103
01:06:53,070 --> 01:07:03,900
happening so if you want to if you want

1104
01:06:59,490 --> 01:07:06,240
to go enjoy the IOT stuff and you want

1105
01:07:03,900 --> 01:07:08,580
to learn about IOT hacking go ahead and

1106
01:07:06,240 --> 01:07:10,830
head over to discord and go to the IOT

1107
01:07:08,580 --> 01:07:30,779
village and make sure you check out the

1108
01:07:10,830 --> 01:07:33,029
content and also there's five hundred

1109
01:07:30,780 --> 01:07:36,030
people here watching right now let us

1110
01:07:33,030 --> 01:07:37,380
know if you're not a bot Java animo

1111
01:07:36,030 --> 01:07:40,260
tell me what are you watching this slide

1112
01:07:37,380 --> 01:07:43,170
from are you in the US somewhere in

1113
01:07:40,260 --> 01:07:46,170
Europe a PAC let us know where you're at

1114
01:07:43,170 --> 01:07:47,700
I want to hear everybody drop something

1115
01:07:46,170 --> 01:07:49,560
in the chat that's he I mean without

1116
01:07:47,700 --> 01:07:56,720
actually listening and not just walking

1117
01:07:49,560 --> 01:07:59,750
away or being a bot see India Romania us

1118
01:07:56,720 --> 01:08:05,009
Chile Mars

1119
01:07:59,750 --> 01:08:09,330
Brazil Germany Europe hello from Jordan

1120
01:08:05,010 --> 01:08:13,860
Canada beep boop wassup JP Russia India

1121
01:08:09,330 --> 01:08:16,620
Jamaica Nashville Panama Canada UK

1122
01:08:13,860 --> 01:08:18,080
there's a lot of people here Iran South

1123
01:08:16,620 --> 01:08:23,460
Africa Portugal

1124
01:08:18,080 --> 01:08:29,960
India North Korea it's far Texas baby

1125
01:08:23,460 --> 01:08:34,410
what up Texas Indonesia San Diego

1126
01:08:29,960 --> 01:08:36,089
Iceland Puerto Rico all right there is

1127
01:08:34,410 --> 01:08:42,540
not a lot of bots in here today we're

1128
01:08:36,089 --> 01:08:43,890
good Alabama West Virginia Denver and I

1129
01:08:42,540 --> 01:08:47,899
drop your addresses but stalks

1130
01:08:43,890 --> 01:08:47,900
yourselves I'm kidding I'm kidding

1131
01:08:48,109 --> 01:08:53,940
watching from the Homme sex house all

1132
01:08:50,729 --> 01:08:56,790
right all right let's give Jeff a few

1133
01:08:53,939 --> 01:08:59,669
more minutes and take some time to

1134
01:08:56,790 --> 01:09:02,420
stretch get some coffee

1135
01:08:59,670 --> 01:09:02,420
got some drinks

1136
01:09:04,529 --> 01:09:11,068
Ryan will continue with the unmask

1137
01:09:08,500 --> 01:09:11,069
workshop

1138
01:09:16,210 --> 01:09:18,270
you

1139
01:10:42,030 --> 01:10:45,870
all right we're back again with Jeff

1140
01:10:45,510 --> 01:10:48,630
Foley

1141
01:10:45,870 --> 01:10:52,290
we're gonna carry on with our amassed

1142
01:10:48,630 --> 01:10:52,710
bootcamp you're up Jeff excellent Thank

1143
01:10:52,290 --> 01:10:57,030
You Ven

1144
01:10:52,710 --> 01:11:00,960
yeah so we're back and we're switching

1145
01:10:57,030 --> 01:11:06,630
gears to the new mass scripting engine

1146
01:11:00,960 --> 01:11:10,670
so this scripting engine allows you to

1147
01:11:06,630 --> 01:11:15,570
create your own data sources for a mass

1148
01:11:10,670 --> 01:11:18,560
now eventually you know what what it

1149
01:11:15,570 --> 01:11:21,110
means to be a data source could could be

1150
01:11:18,560 --> 01:11:23,450
you know just about anything it could be

1151
01:11:21,110 --> 01:11:27,660
your own brute-forcing

1152
01:11:23,450 --> 01:11:31,160
you know algorithms or your own name

1153
01:11:27,660 --> 01:11:35,160
permutation algorithms

1154
01:11:31,160 --> 01:11:38,070
it could be firing off a local program

1155
01:11:35,160 --> 01:11:39,480
or accessing you know your own database

1156
01:11:38,070 --> 01:11:42,900
or something like that and then bringing

1157
01:11:39,480 --> 01:11:45,570
the results in to the enumeration

1158
01:11:42,900 --> 01:11:48,299
process you know this guy could be the

1159
01:11:45,570 --> 01:11:52,650
limit pretty much on what exactly could

1160
01:11:48,300 --> 01:11:56,070
you pull in to a mess but it would pull

1161
01:11:52,650 --> 01:11:57,420
it in on request just like all these

1162
01:11:56,070 --> 01:12:05,700
other data sources they're receiving

1163
01:11:57,420 --> 01:12:08,850
these events from the engine saying we

1164
01:12:05,700 --> 01:12:13,470
want you know names for this domain name

1165
01:12:08,850 --> 01:12:17,220
and then it's listening for the answers

1166
01:12:13,470 --> 01:12:18,840
coming back so it would just make it

1167
01:12:17,220 --> 01:12:24,560
possible for your script to be one of

1168
01:12:18,840 --> 01:12:30,110
those services or that are listening and

1169
01:12:24,560 --> 01:12:30,110
able to respond to those requests

1170
01:12:36,389 --> 01:12:46,439
all right so what I thought I would use

1171
01:12:40,169 --> 01:12:49,439
as an example today is I'm sure you know

1172
01:12:46,439 --> 01:12:50,969
many people are familiar with Tom nom

1173
01:12:49,439 --> 01:12:55,649
nom and his excellent work that he's

1174
01:12:50,969 --> 01:12:58,079
done and his asset finder you know Tom

1175
01:12:55,649 --> 01:13:01,289
nom nom spoke yesterday at this

1176
01:12:58,079 --> 01:13:05,789
conference and you know I thought I

1177
01:13:01,289 --> 01:13:09,648
would use his program as an example of a

1178
01:13:05,789 --> 01:13:16,169
program that you could pull into your

1179
01:13:09,649 --> 01:13:18,239
mass enumeration so before we just jump

1180
01:13:16,169 --> 01:13:22,669
right into it though taking a couple

1181
01:13:18,239 --> 01:13:22,669
steps back I mentioned earlier that

1182
01:13:23,239 --> 01:13:29,579
scripts can be found within your output

1183
01:13:26,639 --> 01:13:32,489
directory so what I'm gonna do here is

1184
01:13:29,579 --> 01:13:33,599
we're going to create our own output

1185
01:13:32,489 --> 01:13:39,119
directory so we're not messing around

1186
01:13:33,599 --> 01:13:39,940
with the default one so I'm going to I'm

1187
01:13:39,119 --> 01:13:43,620
going to create it

1188
01:13:39,940 --> 01:13:51,400
just call it I know let's call it a test

1189
01:13:43,620 --> 01:13:53,349
it could be called anything so that's

1190
01:13:51,400 --> 01:14:06,120
just a empty directory but now we're

1191
01:13:53,350 --> 01:14:12,550
going to create script so I have a

1192
01:14:06,120 --> 01:14:14,050
script that I've written and what I'd

1193
01:14:12,550 --> 01:14:15,910
like to do it to save us some time is

1194
01:14:14,050 --> 01:14:18,250
I'm going to just open it up and we're

1195
01:14:15,910 --> 01:14:24,960
gonna I'm going to go through the

1196
01:14:18,250 --> 01:14:33,550
various parts of this script to explain

1197
01:14:24,960 --> 01:14:35,380
what are what are the critical portions

1198
01:14:33,550 --> 01:14:37,090
of the script what do they mean what

1199
01:14:35,380 --> 01:14:46,510
what does the mask to do with them

1200
01:14:37,090 --> 01:14:52,469
things like that second here I have a

1201
01:14:46,510 --> 01:14:52,469
feeling though yeah we don't want that

1202
01:15:09,010 --> 01:15:28,170
I didn't do it to me any good well hold

1203
01:15:19,989 --> 01:15:28,169
it what I'll do is I'll rename it

1204
01:15:48,060 --> 01:16:14,630
alright so we're going to put this in

1205
01:15:50,720 --> 01:16:17,570
- or scripts okay so first thing

1206
01:16:14,630 --> 01:16:24,260
actually I'll show you is it the math

1207
01:16:17,570 --> 01:16:26,030
scripting engine is uses Lua which is

1208
01:16:24,260 --> 01:16:28,520
also you know you're probably familiar

1209
01:16:26,030 --> 01:16:32,630
with the fact that that's what nmap uses

1210
01:16:28,520 --> 01:16:41,180
there's lots of tools out there that use

1211
01:16:32,630 --> 01:16:45,530
Lua so this is a very basic amass data

1212
01:16:41,180 --> 01:16:48,470
source script so a couple things to take

1213
01:16:45,530 --> 01:16:53,990
note of as you can see in the name right

1214
01:16:48,470 --> 01:16:56,660
here it has to be named dot EDS or it

1215
01:16:53,990 --> 01:17:06,139
won't be recognized by the amass

1216
01:16:56,660 --> 01:17:11,690
scripting engine but it is Lua so what

1217
01:17:06,140 --> 01:17:16,910
we have in this script is here we're in

1218
01:17:11,690 --> 01:17:23,280
check I'll change this we'll call it a

1219
01:17:16,910 --> 01:17:27,889
set finder or I suppose

1220
01:17:23,280 --> 01:17:27,889
could easily leave it like that and

1221
01:17:29,090 --> 01:17:38,520
actually it should be this type mm-hmm

1222
01:17:34,070 --> 01:17:40,769
which stands for external so that it's

1223
01:17:38,520 --> 01:17:44,610
just a way to say it came from outside

1224
01:17:40,770 --> 01:17:46,949
of I mean unless you unless you know for

1225
01:17:44,610 --> 01:17:51,480
sure that your implementation for

1226
01:17:46,949 --> 01:17:54,030
instance is using a certain type of data

1227
01:17:51,480 --> 01:17:55,829
source like an API or scraping a web

1228
01:17:54,030 --> 01:17:57,000
page or you know something like that but

1229
01:17:55,829 --> 01:17:59,308
in this case since we're using another

1230
01:17:57,000 --> 01:18:03,030
tool that could be doing any number of

1231
01:17:59,309 --> 01:18:08,219
things to get the data it'd probably be

1232
01:18:03,030 --> 01:18:10,559
easier to say external and you can find

1233
01:18:08,219 --> 01:18:13,079
details on well how do you know how do I

1234
01:18:10,559 --> 01:18:20,880
know what the types are it's in the

1235
01:18:13,079 --> 01:18:24,780
documentation in the the amass repo but

1236
01:18:20,880 --> 01:18:26,960
these two values have to be set so if

1237
01:18:24,780 --> 01:18:29,820
you create a script and it doesn't find

1238
01:18:26,960 --> 01:18:34,320
this global variable in this global

1239
01:18:29,820 --> 01:18:37,320
variable it will not load your script so

1240
01:18:34,320 --> 01:18:41,599
you could have you know whatever file

1241
01:18:37,320 --> 01:18:50,000
name DDS and then when it tries to load

1242
01:18:41,599 --> 01:18:53,300
the Lua chunks so first of all it's

1243
01:18:50,000 --> 01:18:55,490
that will quickly end the whole process

1244
01:18:53,300 --> 01:18:58,450
right there but if it is and it doesn't

1245
01:18:55,490 --> 01:19:03,340
find those two global variables to find

1246
01:18:58,450 --> 01:19:09,590
it then it will it will not load your

1247
01:19:03,340 --> 01:19:10,750
data source so these are these are very

1248
01:19:09,590 --> 01:19:15,560
important

1249
01:19:10,750 --> 01:19:23,800
then what you're seeing here and here

1250
01:19:15,560 --> 01:19:28,130
are two of the possible callbacks that

1251
01:19:23,800 --> 01:19:31,490
amass uses to call in to the scripts so

1252
01:19:28,130 --> 01:19:33,410
in this case the start you know callback

1253
01:19:31,490 --> 01:19:35,450
as you can imagine is the one that gets

1254
01:19:33,410 --> 01:19:37,700
called before any of the other callbacks

1255
01:19:35,450 --> 01:19:41,000
and gives your scripts an opportunity to

1256
01:19:37,700 --> 01:19:43,639
do some initial like setup in this case

1257
01:19:41,000 --> 01:19:44,990
it's just setting the rate limit for the

1258
01:19:43,640 --> 01:19:50,930
data source which actually we don't even

1259
01:19:44,990 --> 01:19:54,559
need necessarily for asset finder so we

1260
01:19:50,930 --> 01:19:57,640
could just take this out but if you

1261
01:19:54,560 --> 01:20:02,090
wanted if you want a rate limit that's a

1262
01:19:57,640 --> 01:20:04,760
proper way to do it would be when when

1263
01:20:02,090 --> 01:20:07,990
your data source first starts set the

1264
01:20:04,760 --> 01:20:12,590
rate limits because then these other

1265
01:20:07,990 --> 01:20:22,099
callbacks will not fire off any faster

1266
01:20:12,590 --> 01:20:25,250
than once per that many seconds and

1267
01:20:22,100 --> 01:20:29,450
there's there's a ways to within your

1268
01:20:25,250 --> 01:20:31,910
say algorithms ask it to check the rate

1269
01:20:29,450 --> 01:20:33,320
limit again if you know your invoke you

1270
01:20:31,910 --> 01:20:35,599
know you're accessing the data source

1271
01:20:33,320 --> 01:20:41,750
more than once and you need to adhere to

1272
01:20:35,600 --> 01:20:48,160
the Ray limit and there's a handful of

1273
01:20:41,750 --> 01:20:50,690
these a mass custom function calls that

1274
01:20:48,160 --> 01:20:55,040
similar to set rate limit that are

1275
01:20:50,690 --> 01:20:56,929
defined in the documentation so the

1276
01:20:55,040 --> 01:21:01,360
vertical call is the one that gets

1277
01:20:56,930 --> 01:21:03,040
called when as we've seen so far

1278
01:21:01,360 --> 01:21:05,230
when amass

1279
01:21:03,040 --> 01:21:08,380
okay I've got a domain name and I want

1280
01:21:05,230 --> 01:21:11,559
sub domain names it calls

1281
01:21:08,380 --> 01:21:15,960
vertical so in this case you know we're

1282
01:21:11,560 --> 01:21:18,730
all we're gonna do is we're gonna find

1283
01:21:15,960 --> 01:21:20,740
asset finder so we're what we're gonna

1284
01:21:18,730 --> 01:21:24,599
the way we're going to do that is I'm

1285
01:21:20,740 --> 01:21:33,210
going to create another directory under

1286
01:21:24,600 --> 01:21:33,210
my output directory and then we'll copy

1287
01:21:34,170 --> 01:21:50,500
asset finder into into there so that way

1288
01:21:43,890 --> 01:21:57,010
the binary is is in a location that's

1289
01:21:50,500 --> 01:22:01,810
easily found by by a mask so this way

1290
01:21:57,010 --> 01:22:03,130
its output directory slash bin asset

1291
01:22:01,810 --> 01:22:03,940
finder and then you know we're just

1292
01:22:03,130 --> 01:22:11,010
going to give it the appropriate

1293
01:22:03,940 --> 01:22:14,139
arguments and we will execute it and

1294
01:22:11,010 --> 01:22:17,770
gather the output and then just go

1295
01:22:14,140 --> 01:22:21,370
through the lines of output and send

1296
01:22:17,770 --> 01:22:26,110
them along to amass as new names or

1297
01:22:21,370 --> 01:22:33,360
potentially new names and then close it

1298
01:22:26,110 --> 01:22:36,989
and then we're done so there's a hand

1299
01:22:33,360 --> 01:22:39,599
although of these callbacks so if you're

1300
01:22:36,989 --> 01:22:44,459
really interested in doing this you're

1301
01:22:39,600 --> 01:22:47,880
you're definitely going to want to take

1302
01:22:44,460 --> 01:22:49,710
a look at this so real quick let's just

1303
01:22:47,880 --> 01:23:01,130
make sure everyone's aware of so where

1304
01:22:49,710 --> 01:23:01,130
can you find this so if we go down

1305
01:23:02,960 --> 01:23:08,210
documentation this is the manual

1306
01:23:09,989 --> 01:23:16,718
so it covers at least the basics of the

1307
01:23:14,080 --> 01:23:22,780
script format like I said the various

1308
01:23:16,719 --> 01:23:27,640
types of scripts or data sources there's

1309
01:23:22,780 --> 01:23:30,699
some things that are made available into

1310
01:23:27,640 --> 01:23:34,030
your lua environment from a mass that

1311
01:23:30,699 --> 01:23:37,599
are related to the type of activity that

1312
01:23:34,030 --> 01:23:43,389
these scripts are likely to be involved

1313
01:23:37,600 --> 01:23:49,449
in including for instance if you're if

1314
01:23:43,390 --> 01:23:56,860
you've put API key say information in

1315
01:23:49,449 --> 01:24:04,690
the config file we if we go down here

1316
01:23:56,860 --> 01:24:09,130
let's say you created a new entry in

1317
01:24:04,690 --> 01:24:17,259
here where you know it's it's named the

1318
01:24:09,130 --> 01:24:18,820
same thing as this name so I mean FF

1319
01:24:17,260 --> 01:24:23,890
finder of course doesn't have an API key

1320
01:24:18,820 --> 01:24:26,860
but or at least not I mean maybe it's it

1321
01:24:23,890 --> 01:24:31,780
looks like it supports supports using

1322
01:24:26,860 --> 01:24:34,210
API keys but anyway let let's just say

1323
01:24:31,780 --> 01:24:40,090
we had a way to use it so you'd write it

1324
01:24:34,210 --> 01:24:46,900
in here you could say TPI keep API key

1325
01:24:40,090 --> 01:24:52,140
and then you know put the

1326
01:24:46,900 --> 01:24:52,139
in here and then when you get into your

1327
01:24:53,010 --> 01:24:59,770
Lua script you would have this table

1328
01:24:57,760 --> 01:25:01,690
already exported into your environment

1329
01:24:59,770 --> 01:25:04,510
so you would be able to check if it's

1330
01:25:01,690 --> 01:25:08,650
nil and it wouldn't be and then you

1331
01:25:04,510 --> 01:25:12,370
would be able to go get API key and it's

1332
01:25:08,650 --> 01:25:18,000
going to be equal to whatever value is

1333
01:25:12,370 --> 01:25:20,980
over here so these are the kinds of

1334
01:25:18,000 --> 01:25:22,330
convenience things that are there's

1335
01:25:20,980 --> 01:25:24,370
gonna be more and more of those kinds of

1336
01:25:22,330 --> 01:25:26,559
things made available to these scripts

1337
01:25:24,370 --> 01:25:28,890
like for instance this isn't available

1338
01:25:26,560 --> 01:25:30,970
yet but we're going to put it put it in

1339
01:25:28,890 --> 01:25:33,730
the word lists are going to be made

1340
01:25:30,970 --> 01:25:35,110
available and other things that are

1341
01:25:33,730 --> 01:25:38,889
going to be necessary if you want to

1342
01:25:35,110 --> 01:25:45,610
take full advantage of scripting for

1343
01:25:38,890 --> 01:25:46,180
masks but moving along you know these

1344
01:25:45,610 --> 01:25:47,559
are these

1345
01:25:46,180 --> 01:25:53,260
Haldex I was talking about so you've got

1346
01:25:47,560 --> 01:25:55,270
start/stop vertical horizontal resolved

1347
01:25:53,260 --> 01:25:58,900
for each name that was successfully

1348
01:25:55,270 --> 01:26:02,590
resolved by DNS you've got callback

1349
01:25:58,900 --> 01:26:06,480
which only gets called when if a what I

1350
01:26:02,590 --> 01:26:10,960
call a proper sub domain name where

1351
01:26:06,480 --> 01:26:13,089
earlier I mentioned for instance FTP

1352
01:26:10,960 --> 01:26:14,320
example.com would have been a proper

1353
01:26:13,090 --> 01:26:20,580
subdomain

1354
01:26:14,320 --> 01:26:24,910
once we discovered that WWF TP

1355
01:26:20,580 --> 01:26:27,040
example.com existed mm-hmm so when that

1356
01:26:24,910 --> 01:26:29,590
happens this gets called and it tells

1357
01:26:27,040 --> 01:26:34,060
you how many times one of those labels

1358
01:26:29,590 --> 01:26:39,730
like www has shown up within the proper

1359
01:26:34,060 --> 01:26:42,750
sub domain we've got address for the IP

1360
01:26:39,730 --> 01:26:48,280
addresses that have been determined

1361
01:26:42,750 --> 01:26:53,820
related to the enumeration request for

1362
01:26:48,280 --> 01:26:55,870
ASN information and then these are the

1363
01:26:53,820 --> 01:26:58,630
convenience functions that are currently

1364
01:26:55,870 --> 01:27:01,990
implemented like logging letting the

1365
01:26:58,630 --> 01:27:03,820
engine know that there's activity so

1366
01:27:01,990 --> 01:27:07,300
essentially don't stop yet

1367
01:27:03,820 --> 01:27:08,710
because there's more going on as we've

1368
01:27:07,300 --> 01:27:12,420
already seen obtaining the output

1369
01:27:08,710 --> 01:27:14,650
directory checking if a name is in scope

1370
01:27:12,420 --> 01:27:18,540
setting the rate limit checking the rate

1371
01:27:14,650 --> 01:27:25,570
you know if checking meaning block until

1372
01:27:18,540 --> 01:27:30,210
the Ray limit has expired or it's safe

1373
01:27:25,570 --> 01:27:34,830
to continue find is a regular expression

1374
01:27:30,210 --> 01:27:34,830
pattern-matching function so a sub-match

1375
01:27:35,820 --> 01:27:44,449
request is for

1376
01:27:38,840 --> 01:27:46,909
it's a HTTP client requests grape is

1377
01:27:44,449 --> 01:27:49,339
very similar it's just that it doesn't

1378
01:27:46,909 --> 01:27:53,559
actually give you back the response it

1379
01:27:49,340 --> 01:27:57,349
just scrapes it for names are being a

1380
01:27:53,560 --> 01:27:59,780
names are of interest crawl does

1381
01:27:57,349 --> 01:28:02,000
something similar to that but of course

1382
01:27:59,780 --> 01:28:04,489
it doesn't just scrape the one response

1383
01:28:02,000 --> 01:28:09,199
that continues looking for more pages to

1384
01:28:04,489 --> 01:28:13,489
spider and then these are primarily ways

1385
01:28:09,199 --> 01:28:17,598
to send back discovered data like new

1386
01:28:13,489 --> 01:28:21,678
name associated names are for the

1387
01:28:17,599 --> 01:28:24,250
horizontal domain name correlation so

1388
01:28:21,679 --> 01:28:27,070
this would be like a another domain name

1389
01:28:24,250 --> 01:28:32,619
that's associated with this domain name

1390
01:28:27,070 --> 01:28:34,610
new IP addresses new ASN information

1391
01:28:32,619 --> 01:28:37,540
those are the things that are currently

1392
01:28:34,610 --> 01:28:42,170
available and like I said it's going to

1393
01:28:37,540 --> 01:28:49,239
grow as we continue to add features but

1394
01:28:42,170 --> 01:28:49,239
let's see what this ends up looking like

1395
01:28:52,630 --> 01:29:09,500
so we have our script so if we here's

1396
01:29:07,070 --> 01:29:16,990
the peers hello we'll keep this some

1397
01:29:09,500 --> 01:29:16,990
as possible so the enum Durer test

1398
01:29:17,020 --> 01:29:41,540
source and let's just do passive right

1399
01:29:23,180 --> 01:29:49,400
now include asset finder so this should

1400
01:29:41,540 --> 01:29:51,430
only fire off our custom script and just

1401
01:29:49,400 --> 01:30:05,750
print out the results without further

1402
01:29:51,430 --> 01:30:07,670
analysis see if it likes so it looks

1403
01:30:05,750 --> 01:30:17,150
like it they loaded it it rent it's

1404
01:30:07,670 --> 01:30:24,400
running it and that's what it discovered

1405
01:30:17,150 --> 01:30:27,080
and it's printing out so that of course

1406
01:30:24,400 --> 01:30:29,780
you know this is a maybe a little bit of

1407
01:30:27,080 --> 01:30:32,269
a silly example because of course you

1408
01:30:29,780 --> 01:30:34,940
could just run this yourself and but

1409
01:30:32,270 --> 01:30:37,550
maybe not mmm right maybe you would like

1410
01:30:34,940 --> 01:30:41,389
to take these various tool that you're

1411
01:30:37,550 --> 01:30:45,590
using wrap them up like this so that you

1412
01:30:41,390 --> 01:30:47,390
only have to actually use one tool like

1413
01:30:45,590 --> 01:30:50,000
a mask to drive your reconnaissance

1414
01:30:47,390 --> 01:30:51,710
process and you would just know it's

1415
01:30:50,000 --> 01:30:55,250
going to pull in the data from all these

1416
01:30:51,710 --> 01:30:57,710
different tools and use all of it and

1417
01:30:55,250 --> 01:31:02,690
bring all the names into the cyclic

1418
01:30:57,710 --> 01:31:04,220
process I mentioned earlier and I guess

1419
01:31:02,690 --> 01:31:06,259
you could say take full advantage of all

1420
01:31:04,220 --> 01:31:09,850
the data that you can get your hands on

1421
01:31:06,260 --> 01:31:13,940
and I don't know about you but I think

1422
01:31:09,850 --> 01:31:18,820
this is a pretty small amount of code to

1423
01:31:13,940 --> 01:31:22,269
write to be able to pull something like

1424
01:31:18,820 --> 01:31:23,980
in and like I said I mean some of it's

1425
01:31:22,270 --> 01:31:26,110
just not even necessary like I would

1426
01:31:23,980 --> 01:31:27,759
argue for this particular script you

1427
01:31:26,110 --> 01:31:35,769
don't really need that you could just

1428
01:31:27,760 --> 01:31:39,820
write this so that was a simple script I

1429
01:31:35,770 --> 01:31:42,150
put together just to demonstrate how you

1430
01:31:39,820 --> 01:31:45,719
could easily take a command line tool

1431
01:31:42,150 --> 01:31:50,500
that could find you say more names and

1432
01:31:45,720 --> 01:31:54,520
then have it called upon when a mass

1433
01:31:50,500 --> 01:31:59,830
wants it and it becomes part of them the

1434
01:31:54,520 --> 01:32:02,680
amass enumeration process but in the

1435
01:31:59,830 --> 01:32:05,680
future this this could just as easily be

1436
01:32:02,680 --> 01:32:10,900
as I mentioned earlier you could be

1437
01:32:05,680 --> 01:32:12,040
accessing a private database and it

1438
01:32:10,900 --> 01:32:15,790
could be pulling the results from that

1439
01:32:12,040 --> 01:32:19,390
it could be anything you want so that

1440
01:32:15,790 --> 01:32:22,390
using a mass now could could be

1441
01:32:19,390 --> 01:32:25,150
customized it could be it could have

1442
01:32:22,390 --> 01:32:28,150
your say secret sauce rolled into it

1443
01:32:25,150 --> 01:32:29,589
right things that it's not just doing

1444
01:32:28,150 --> 01:32:33,059
what it's doing for everyone else it can

1445
01:32:29,590 --> 01:32:35,560
be doing what you needed to do for you

1446
01:32:33,060 --> 01:32:39,210
it also could be a nice way if you're

1447
01:32:35,560 --> 01:32:43,150
looking to contribute back to easily now

1448
01:32:39,210 --> 01:32:46,260
write up new ways of getting names or

1449
01:32:43,150 --> 01:32:49,719
getting the structure information and

1450
01:32:46,260 --> 01:32:52,290
contributing it back to the a wasp amass

1451
01:32:49,720 --> 01:32:54,910
project because you know I would say

1452
01:32:52,290 --> 01:32:59,260
writing these small little Lua scripts

1453
01:32:54,910 --> 01:33:02,849
is really easy and not very

1454
01:32:59,260 --> 01:33:05,430
time-consuming and before you know it

1455
01:33:02,850 --> 01:33:07,680
gonna have all the data sources written

1456
01:33:05,430 --> 01:33:12,810
up this way about half of them have

1457
01:33:07,680 --> 01:33:15,750
already been ported over you know this

1458
01:33:12,810 --> 01:33:25,260
is how we'll be accepting contributions

1459
01:33:15,750 --> 01:33:26,970
for new data sources all right so that

1460
01:33:25,260 --> 01:33:29,730
that went pretty quick I mean I don't

1461
01:33:26,970 --> 01:33:31,710
know how firehose everyone feels about

1462
01:33:29,730 --> 01:33:37,919
that obviously I don't have time to

1463
01:33:31,710 --> 01:33:38,910
teach Lua it so if people you know

1464
01:33:37,920 --> 01:33:42,660
there's there's some really good

1465
01:33:38,910 --> 01:33:46,950
resources for Lua out there if you go

1466
01:33:42,660 --> 01:33:50,360
back to the documentation I was showing

1467
01:33:46,950 --> 01:33:53,130
a moment ago the OWASP amass

1468
01:33:50,360 --> 01:33:55,700
documentation for the scripting there's

1469
01:33:53,130 --> 01:34:00,150
references in there for where to find

1470
01:33:55,700 --> 01:34:04,559
freely available documentation and even

1471
01:34:00,150 --> 01:34:09,030
books for how to use Lua but honestly

1472
01:34:04,560 --> 01:34:12,240
it's mmm it's extremely easy and it's a

1473
01:34:09,030 --> 01:34:15,360
it's a it's a powerful language this

1474
01:34:12,240 --> 01:34:18,360
kind of work where it's just data

1475
01:34:15,360 --> 01:34:20,190
crunching you know it's just get me some

1476
01:34:18,360 --> 01:34:24,809
data put it into the format I want it

1477
01:34:20,190 --> 01:34:28,379
and send it away so it works really good

1478
01:34:24,810 --> 01:34:30,060
for this some of you perhaps are already

1479
01:34:28,380 --> 01:34:32,130
familiar with it since so many video

1480
01:34:30,060 --> 01:34:40,110
games use Ulua is there's scripting

1481
01:34:32,130 --> 01:34:42,060
language it's it's quite popular so

1482
01:34:40,110 --> 01:34:45,690
then it looks like this worked out

1483
01:34:42,060 --> 01:34:49,139
pretty well I have a little bit of a few

1484
01:34:45,690 --> 01:34:52,199
things to conclude but then we could

1485
01:34:49,139 --> 01:34:57,119
open the floor for about say 15 minutes

1486
01:34:52,199 --> 01:35:00,000
worth of questions that if that sounds

1487
01:34:57,119 --> 01:35:00,750
good to you I just wanted to mention a

1488
01:35:00,000 --> 01:35:06,600
few

1489
01:35:00,750 --> 01:35:10,920
going back to project centric things so

1490
01:35:06,600 --> 01:35:16,830
we made a couple changes recently that I

1491
01:35:10,920 --> 01:35:33,000
was hoping to share me bring this back

1492
01:35:16,830 --> 01:35:38,219
up so if you find you have a a question

1493
01:35:33,000 --> 01:35:41,550
about a wasp Emes we definitely want to

1494
01:35:38,219 --> 01:35:45,210
help you but I would really prefer that

1495
01:35:41,550 --> 01:35:47,699
the project who would prefer that you

1496
01:35:45,210 --> 01:35:49,920
you do not take the concerns or the

1497
01:35:47,699 --> 01:35:58,678
questions or the mm troubleshooting

1498
01:35:49,920 --> 01:36:00,540
requests to the github issues I'd really

1499
01:35:58,679 --> 01:36:03,239
prefer that most of these questions

1500
01:36:00,540 --> 01:36:04,619
started in the discord server and then

1501
01:36:03,239 --> 01:36:07,489
if it's determined that oh this this

1502
01:36:04,619 --> 01:36:10,049
isn't just a you know a troubleshooting

1503
01:36:07,489 --> 01:36:12,959
well you know let's support or help the

1504
01:36:10,050 --> 01:36:15,900
community this is a problem with the

1505
01:36:12,960 --> 01:36:22,320
project then then we can take it to the

1506
01:36:15,900 --> 01:36:25,259
issues and officially post the problem

1507
01:36:22,320 --> 01:36:27,780
so that we remember to take care of it

1508
01:36:25,260 --> 01:36:29,850
but what I what I don't want to see

1509
01:36:27,780 --> 01:36:33,090
happening is that we get a pile of

1510
01:36:29,850 --> 01:36:35,340
people's questions and the issues and it

1511
01:36:33,090 --> 01:36:37,050
makes it hard for people to use the

1512
01:36:35,340 --> 01:36:38,520
issues for what they're really there for

1513
01:36:37,050 --> 01:36:41,880
just to keep track of what we're working

1514
01:36:38,520 --> 01:36:43,590
on and the problems we've act you know

1515
01:36:41,880 --> 01:36:51,330
the that we've validated our true

1516
01:36:43,590 --> 01:36:51,790
problems with the project so that's kind

1517
01:36:51,330 --> 01:36:54,850
of

1518
01:36:51,790 --> 01:36:57,340
protocol I'm hoping we can achieve is

1519
01:36:54,850 --> 01:36:59,410
that everything starts in the discord we

1520
01:36:57,340 --> 01:37:05,980
can we can talk we can help people we

1521
01:36:59,410 --> 01:37:07,269
can you know take it to the DMS and you

1522
01:37:05,980 --> 01:37:09,519
know try to make sure that you're

1523
01:37:07,270 --> 01:37:14,050
getting it working or getting the right

1524
01:37:09,520 --> 01:37:16,060
experience but we only are posting

1525
01:37:14,050 --> 01:37:21,940
things in the issues when it's a real

1526
01:37:16,060 --> 01:37:27,460
issue you know it's a serious issue also

1527
01:37:21,940 --> 01:37:32,950
if you know that you are writing about a

1528
01:37:27,460 --> 01:37:34,510
mass or your ear you have things you

1529
01:37:32,950 --> 01:37:36,309
would like to share with the community

1530
01:37:34,510 --> 01:37:38,830
you know the amass community are the

1531
01:37:36,310 --> 01:37:41,740
people using it please don't hesitate to

1532
01:37:38,830 --> 01:37:45,610
come to the you know again either the

1533
01:37:41,740 --> 01:37:49,300
discord server or you know to let us

1534
01:37:45,610 --> 01:37:51,280
know or just create a PR and you can you

1535
01:37:49,300 --> 01:37:53,110
can add it to our Hall of Fame where

1536
01:37:51,280 --> 01:37:55,929
we're we're trying to do our best to

1537
01:37:53,110 --> 01:37:58,150
keep track of them or sorry not hall of

1538
01:37:55,930 --> 01:38:02,920
fame the references we're trying to keep

1539
01:37:58,150 --> 01:38:06,129
track of you know the people are taking

1540
01:38:02,920 --> 01:38:08,140
the time to share good things with the

1541
01:38:06,130 --> 01:38:10,180
community about how to how to use this

1542
01:38:08,140 --> 01:38:12,700
you know how they're getting success

1543
01:38:10,180 --> 01:38:15,130
with it things like that so you know

1544
01:38:12,700 --> 01:38:16,960
we've we've tried to keep track of some

1545
01:38:15,130 --> 01:38:21,760
of this stuff people have let us know

1546
01:38:16,960 --> 01:38:25,720
but definitely don't hesitate to bring

1547
01:38:21,760 --> 01:38:29,230
it to our attention so we can get you in

1548
01:38:25,720 --> 01:38:31,270
the list because I really appreciate

1549
01:38:29,230 --> 01:38:33,370
everything everyone's doing and the time

1550
01:38:31,270 --> 01:38:36,480
people are taking to to write about

1551
01:38:33,370 --> 01:38:39,480
these experiences that they're having

1552
01:38:36,480 --> 01:38:39,480
and

1553
01:38:39,660 --> 01:38:48,330
the last thing on on this note was if

1554
01:38:45,930 --> 01:38:52,260
you if you would like to become a

1555
01:38:48,330 --> 01:38:56,160
contributor so you feel that you know

1556
01:38:52,260 --> 01:38:58,200
you like go as much as we do and maybe

1557
01:38:56,160 --> 01:39:00,990
like you know now you could add a little

1558
01:38:58,200 --> 01:39:02,460
bit to the list but if these seem like

1559
01:39:00,990 --> 01:39:05,610
fun things for you and you'd like to

1560
01:39:02,460 --> 01:39:07,410
contribute to this project you know

1561
01:39:05,610 --> 01:39:10,650
we're always interested in talking with

1562
01:39:07,410 --> 01:39:13,620
people about people becoming

1563
01:39:10,650 --> 01:39:15,299
contributors so yeah I get the feeling

1564
01:39:13,620 --> 01:39:18,690
when I've spoken with people about this

1565
01:39:15,300 --> 01:39:21,450
that there's this attitude like maybe

1566
01:39:18,690 --> 01:39:24,089
they're not good enough that this to

1567
01:39:21,450 --> 01:39:26,540
contribute or they don't you know they

1568
01:39:24,090 --> 01:39:30,750
don't feel they know enough about it yet

1569
01:39:26,540 --> 01:39:32,850
but personally I don't look at things

1570
01:39:30,750 --> 01:39:36,480
that way I'd prefer to think if you have

1571
01:39:32,850 --> 01:39:39,150
the if you're excited about it or you

1572
01:39:36,480 --> 01:39:42,929
have the motivation you know we can help

1573
01:39:39,150 --> 01:39:44,309
you to say season your skill you know

1574
01:39:42,930 --> 01:39:47,700
get your skills where they need to be or

1575
01:39:44,310 --> 01:39:49,920
or that you'll just pick it up as you

1576
01:39:47,700 --> 01:39:54,480
put your hands on it so you know I'm

1577
01:39:49,920 --> 01:39:56,550
willing to invest the cycles for people

1578
01:39:54,480 --> 01:39:58,290
who are willing to do the same for the

1579
01:39:56,550 --> 01:40:02,190
project so don't hesitate to come and

1580
01:39:58,290 --> 01:40:04,610
and speak with us about becoming a

1581
01:40:02,190 --> 01:40:08,219
contributor if that's of interest to you

1582
01:40:04,610 --> 01:40:10,620
alright so with that I think we're at a

1583
01:40:08,220 --> 01:40:14,790
good point here this leaves us with well

1584
01:40:10,620 --> 01:40:20,910
then maybe about 15 minutes to answer

1585
01:40:14,790 --> 01:40:22,530
questions yeah sounds good so again

1586
01:40:20,910 --> 01:40:26,010
thinking if we're doing this with us

1587
01:40:22,530 --> 01:40:28,290
Jeff chat if you have any questions make

1588
01:40:26,010 --> 01:40:29,700
sure you drop them and twitch out right

1589
01:40:28,290 --> 01:40:32,580
now and maybe we can get to a few

1590
01:40:29,700 --> 01:40:34,980
questions before we head out and take a

1591
01:40:32,580 --> 01:40:38,059
quick break for our next workshop with

1592
01:40:34,980 --> 01:40:38,059
Jason Haddix

1593
01:40:44,429 --> 01:40:51,060
yeah Ben I'm not watching the questions

1594
01:40:49,199 --> 01:40:52,919
coming in so if you could maybe do me

1595
01:40:51,060 --> 01:40:57,090
the favor of picking out the ones you

1596
01:40:52,920 --> 01:40:58,980
think are should be answered yeah just

1597
01:40:57,090 --> 01:41:00,989
let me know somebody's asking they said

1598
01:40:58,980 --> 01:41:06,589
what is the difference between a mass a

1599
01:41:00,989 --> 01:41:11,780
new active and only a mass a new mesh D

1600
01:41:06,590 --> 01:41:14,159
yeah no that's a good question yes so I

1601
01:41:11,780 --> 01:41:16,530
guess you could say there's there's like

1602
01:41:14,159 --> 01:41:18,989
three different modes that a mass

1603
01:41:16,530 --> 01:41:21,900
supports right there's passive there was

1604
01:41:18,989 --> 01:41:26,699
just normal which is when you just say -

1605
01:41:21,900 --> 01:41:29,969
D or you don't specify the mode and then

1606
01:41:26,699 --> 01:41:32,000
there's active so you know I already

1607
01:41:29,969 --> 01:41:34,460
mentioned earlier passive is simply

1608
01:41:32,000 --> 01:41:37,489
grabbing it from the data sources and

1609
01:41:34,460 --> 01:41:43,830
you know creating the unique list and

1610
01:41:37,489 --> 01:41:46,349
printing it out normal is when we're

1611
01:41:43,830 --> 01:41:50,659
we're taking the data sources mm-hmm

1612
01:41:46,350 --> 01:41:53,250
we're getting the names and we are

1613
01:41:50,659 --> 01:41:54,989
resolving those names and getting the IP

1614
01:41:53,250 --> 01:41:58,320
addresses so that's where it becomes not

1615
01:41:54,989 --> 01:42:00,269
completely passive anymore mm-hmm and

1616
01:41:58,320 --> 01:42:02,460
we're doing you know we're finding out

1617
01:42:00,270 --> 01:42:04,949
all the other infrastructure information

1618
01:42:02,460 --> 01:42:08,159
but we're not sending any traffic

1619
01:42:04,949 --> 01:42:11,820
directly to the target organization

1620
01:42:08,159 --> 01:42:14,429
right so let's say we received a name

1621
01:42:11,820 --> 01:42:18,420
and we got an IP address and we wanted

1622
01:42:14,429 --> 01:42:22,969
to do something more like ask their web

1623
01:42:18,420 --> 01:42:25,469
server directly for TLS certificates

1624
01:42:22,969 --> 01:42:30,090
that's something that the active mode

1625
01:42:25,469 --> 01:42:30,770
will do the normal mode won't mmm the

1626
01:42:30,090 --> 01:42:33,680
act

1627
01:42:30,770 --> 01:42:40,040
mode is also a bit more aggressive with

1628
01:42:33,680 --> 01:42:43,850
the reverse DNS then it is in the normal

1629
01:42:40,040 --> 01:42:50,360
mode also

1630
01:42:43,850 --> 01:42:55,340
active mode will attempt the DNS zone

1631
01:42:50,360 --> 01:43:01,280
transfers but it will not do that in the

1632
01:42:55,340 --> 01:43:03,740
normal mode very cool

1633
01:43:01,280 --> 01:43:06,950
you mentioned the DNS sub command was

1634
01:43:03,740 --> 01:43:11,710
kind of in beta testing what are the

1635
01:43:06,950 --> 01:43:15,080
future plans for that future exactly

1636
01:43:11,710 --> 01:43:17,420
yeah so that the sub command I think

1637
01:43:15,080 --> 01:43:22,610
they're referring to is the the DNS of

1638
01:43:17,420 --> 01:43:24,980
command so I the future I think it has

1639
01:43:22,610 --> 01:43:27,920
mmm it would be a way that you could say

1640
01:43:24,980 --> 01:43:29,929
so I just have a list of names and I

1641
01:43:27,920 --> 01:43:31,760
want to resolve them similar to perhaps

1642
01:43:29,930 --> 01:43:33,500
what you would do is like mass DNS or

1643
01:43:31,760 --> 01:43:37,040
something like that but the point of

1644
01:43:33,500 --> 01:43:39,140
doing it with a mass would be so that

1645
01:43:37,040 --> 01:43:43,370
the findings can be put into the

1646
01:43:39,140 --> 01:43:45,020
database so it's it's not really you

1647
01:43:43,370 --> 01:43:49,550
know I'm not trying to replace existing

1648
01:43:45,020 --> 01:43:52,670
tools like mass DNS we were thinking of

1649
01:43:49,550 --> 01:43:54,530
rolling it in for the purpose of if you

1650
01:43:52,670 --> 01:43:56,150
have that list in you and you want to

1651
01:43:54,530 --> 01:44:02,120
make sure that all those findings are

1652
01:43:56,150 --> 01:44:08,059
being brought into your database then we

1653
01:44:02,120 --> 01:44:10,130
are providing a way to do that the

1654
01:44:08,060 --> 01:44:11,960
secure B asks the question about what

1655
01:44:10,130 --> 01:44:14,560
does it benefit to limit the amount of

1656
01:44:11,960 --> 01:44:21,080
resolvers is that the shorter runtime

1657
01:44:14,560 --> 01:44:21,470
anything else besides that maybe that's

1658
01:44:21,080 --> 01:44:25,769
a good

1659
01:44:21,470 --> 01:44:27,870
question so a couple things that

1660
01:44:25,770 --> 01:44:30,180
the current situation when it comes to

1661
01:44:27,870 --> 01:44:32,580
obtaining the list of resolvers in my

1662
01:44:30,180 --> 01:44:37,140
experience the larger the list you give

1663
01:44:32,580 --> 01:44:40,740
it the more you're inviting malicious

1664
01:44:37,140 --> 01:44:45,360
resolvers or not you know unreliable

1665
01:44:40,740 --> 01:44:47,480
resolvers to get into the list so I you

1666
01:44:45,360 --> 01:44:50,309
know I I always ask myself the question

1667
01:44:47,480 --> 01:44:52,370
how many do we need but you know we

1668
01:44:50,310 --> 01:44:55,680
don't need to be going higher than that

1669
01:44:52,370 --> 01:44:58,290
because I end up the larger the list

1670
01:44:55,680 --> 01:45:02,550
more I seem to end up fighting with it

1671
01:44:58,290 --> 01:45:04,950
until it gets to be a good list maybe

1672
01:45:02,550 --> 01:45:09,420
that's something that you know if if we

1673
01:45:04,950 --> 01:45:10,980
could work further on validating the DNS

1674
01:45:09,420 --> 01:45:13,700
resolvers you know we wouldn't have to

1675
01:45:10,980 --> 01:45:19,799
worry about things like that

1676
01:45:13,700 --> 01:45:22,920
the other reason though is you are also

1677
01:45:19,800 --> 01:45:26,660
bringing in as I mentioned earlier more

1678
01:45:22,920 --> 01:45:30,420
resolvers of varying performance so

1679
01:45:26,660 --> 01:45:32,250
while a mask does try to notice which

1680
01:45:30,420 --> 01:45:37,680
resolvers are performing better and then

1681
01:45:32,250 --> 01:45:41,070
use them more so that it's pushing the

1682
01:45:37,680 --> 01:45:43,470
names through as fast as I can it's not

1683
01:45:41,070 --> 01:45:46,019
perfect and if you bring in a lot of

1684
01:45:43,470 --> 01:45:52,680
poor performing resolvers you are going

1685
01:45:46,020 --> 01:45:53,489
to slow down your process a bit the

1686
01:45:52,680 --> 01:45:54,929
other thing of course

1687
01:45:53,489 --> 01:45:56,999
there's only so many of those you can

1688
01:45:54,929 --> 01:46:00,719
fire up in a single process before it

1689
01:45:56,999 --> 01:46:09,420
just kind of gets to be too much like

1690
01:46:00,719 --> 01:46:12,690
you can't have all 9,000 of them running

1691
01:46:09,420 --> 01:46:14,510
at the same time not likely I'd have to

1692
01:46:12,690 --> 01:46:18,690
double-check what the exact limit is but

1693
01:46:14,510 --> 01:46:25,110
every resolver you instantiate with in a

1694
01:46:18,690 --> 01:46:27,089
mask creates two file handles so while

1695
01:46:25,110 --> 01:46:29,308
that's not that bad it could be worse

1696
01:46:27,090 --> 01:46:31,679
mmm there is a limit to how many you can

1697
01:46:29,309 --> 01:46:37,650
create in a single process at least in

1698
01:46:31,679 --> 01:46:39,210
some os's you know I suppose for

1699
01:46:37,650 --> 01:46:41,339
instance I think on Kali look there is

1700
01:46:39,210 --> 01:46:44,909
no limit hmm so maybe it wouldn't matter

1701
01:46:41,340 --> 01:46:47,429
but it's also just more work you know

1702
01:46:44,909 --> 01:46:49,879
more resolvers equals more messages that

1703
01:46:47,429 --> 01:46:52,289
have to be passed around I would say

1704
01:46:49,880 --> 01:46:59,120
there's really no reason to have more

1705
01:46:52,289 --> 01:47:00,830
than say like 500 of them yeah Jason

1706
01:46:59,120 --> 01:47:03,200
see if there is any options coming to

1707
01:47:00,830 --> 01:47:07,600
distribute a mass over a cluster to

1708
01:47:03,200 --> 01:47:11,210
avoid rate limiting and other badness

1709
01:47:07,600 --> 01:47:15,350
yeah so I've been speaking with some

1710
01:47:11,210 --> 01:47:19,490
people in the community about so there's

1711
01:47:15,350 --> 01:47:21,860
already been some effort put into the

1712
01:47:19,490 --> 01:47:26,330
amass project to make it so that in the

1713
01:47:21,860 --> 01:47:30,230
future we could easily have what you

1714
01:47:26,330 --> 01:47:34,220
might think of as like a mass agents so

1715
01:47:30,230 --> 01:47:36,320
that only a slice of your enumeration

1716
01:47:34,220 --> 01:47:38,210
process would exist within each agent

1717
01:47:36,320 --> 01:47:42,440
and they would work in a distributed

1718
01:47:38,210 --> 01:47:45,110
fashion and the fact that we're already

1719
01:47:42,440 --> 01:47:48,080
using messaging like event based

1720
01:47:45,110 --> 01:47:49,969
messaging within the architecture makes

1721
01:47:48,080 --> 01:47:52,730
it so that lets say you were to you know

1722
01:47:49,970 --> 01:47:57,950
put this into the cloud it would be

1723
01:47:52,730 --> 01:48:01,330
quite easy to then send the messages you

1724
01:47:57,950 --> 01:48:04,580
know in within the cloud to the various

1725
01:48:01,330 --> 01:48:06,920
like micro services or places where

1726
01:48:04,580 --> 01:48:08,240
these agents are being run so we've

1727
01:48:06,920 --> 01:48:10,220
definitely thought of these things it's

1728
01:48:08,240 --> 01:48:13,160
not ready to do this yet

1729
01:48:10,220 --> 01:48:15,620
but I'd like to think that that could be

1730
01:48:13,160 --> 01:48:18,430
part of the future of this project is

1731
01:48:15,620 --> 01:48:22,960
that eventually you could deploy this

1732
01:48:18,430 --> 01:48:25,160
you know across more than just a single

1733
01:48:22,960 --> 01:48:28,820
hosted environment or a single machine

1734
01:48:25,160 --> 01:48:32,240
and you know by running it that way it'd

1735
01:48:28,820 --> 01:48:35,780
also be easy to rotate ip's things like

1736
01:48:32,240 --> 01:48:38,210
that so that it would be pretty hard for

1737
01:48:35,780 --> 01:48:40,670
people to start throttling your activity

1738
01:48:38,210 --> 01:48:42,380
I don't know if that's where he was

1739
01:48:40,670 --> 01:48:45,350
going with it but those are the kinds of

1740
01:48:42,380 --> 01:48:46,790
things we've been thinking of yeah and

1741
01:48:45,350 --> 01:48:49,370
then there's also a question about the

1742
01:48:46,790 --> 01:48:52,160
scripting engine is it going to be an

1743
01:48:49,370 --> 01:48:54,890
option to use other languages or does it

1744
01:48:52,160 --> 01:49:01,599
have to be the same way that you have

1745
01:48:54,890 --> 01:49:05,270
demonstrated yeah right now that's a

1746
01:49:01,600 --> 01:49:08,720
embedded Lua environment so similar to

1747
01:49:05,270 --> 01:49:11,210
how an map does it so it doesn't allow

1748
01:49:08,720 --> 01:49:12,940
for me to say let's interpret a

1749
01:49:11,210 --> 01:49:16,220
different language

1750
01:49:12,940 --> 01:49:17,629
and I don't know if I'd want I mean I

1751
01:49:16,220 --> 01:49:19,220
haven't really haven't given it much

1752
01:49:17,630 --> 01:49:22,460
thought but I'm not sure how I feel

1753
01:49:19,220 --> 01:49:23,150
about claiming will support all sorts of

1754
01:49:22,460 --> 01:49:26,450
different languages

1755
01:49:23,150 --> 01:49:28,610
hmm I like the simplicity of Lua how

1756
01:49:26,450 --> 01:49:34,700
just about anybody could probably pick

1757
01:49:28,610 --> 01:49:38,660
it up and it it's easy to look at easier

1758
01:49:34,700 --> 01:49:41,750
to read I think so but of course who

1759
01:49:38,660 --> 01:49:43,990
knows I'm open to anything people want

1760
01:49:41,750 --> 01:49:48,440
to talk about as far as possibilities I

1761
01:49:43,990 --> 01:49:50,870
like the way nmap does it so I was and

1762
01:49:48,440 --> 01:49:52,660
I've used loo embedded loo environments

1763
01:49:50,870 --> 01:49:55,240
in previous projects in previous lives

1764
01:49:52,660 --> 01:49:58,190
and it's worked out really well for me

1765
01:49:55,240 --> 01:50:04,070
so I'm kind of biased I guess you could

1766
01:49:58,190 --> 01:50:05,450
say it's doing it this way let's see I

1767
01:50:04,070 --> 01:50:08,990
think we have time for a few more

1768
01:50:05,450 --> 01:50:11,389
questions how to make sure resolvers

1769
01:50:08,990 --> 01:50:13,880
giving good results with time if they

1770
01:50:11,390 --> 01:50:16,100
start to act bad do we have any way to

1771
01:50:13,880 --> 01:50:24,310
detect them using no mass and exclude

1772
01:50:16,100 --> 01:50:27,530
them in the next run interesting so

1773
01:50:24,310 --> 01:50:29,990
currently a mask does have some code in

1774
01:50:27,530 --> 01:50:37,940
there that as I mentioned it watches the

1775
01:50:29,990 --> 01:50:44,349
performance and it does try to fun it

1776
01:50:37,940 --> 01:50:48,500
tries to notice if some of them are just

1777
01:50:44,350 --> 01:50:50,210
not answering the queries anymore and

1778
01:50:48,500 --> 01:50:55,100
eventually just not using them any

1779
01:50:50,210 --> 01:50:57,620
longer but it doesn't record that as the

1780
01:50:55,100 --> 01:50:59,870
person asked the question said in order

1781
01:50:57,620 --> 01:51:03,440
to say make a bad list or something like

1782
01:50:59,870 --> 01:51:07,340
that so while it's not impossible it's

1783
01:51:03,440 --> 01:51:10,580
not currently being performed also a

1784
01:51:07,340 --> 01:51:13,370
mass used to have the ability it was

1785
01:51:10,580 --> 01:51:18,019
removed at least temporarily mm to do

1786
01:51:13,370 --> 01:51:21,650
this kind of like voting system where it

1787
01:51:18,020 --> 01:51:26,630
would ask it would query the same query

1788
01:51:21,650 --> 01:51:28,940
to three different resolvers and then

1789
01:51:26,630 --> 01:51:33,140
pick the answer with that two out of the

1790
01:51:28,940 --> 01:51:37,009
three provided and mark the one who gave

1791
01:51:33,140 --> 01:51:38,300
the false answer you know as less

1792
01:51:37,010 --> 01:51:40,550
reliable or something like that

1793
01:51:38,300 --> 01:51:43,750
hmm there were different reasons why it

1794
01:51:40,550 --> 01:51:46,490
was taken out at least for now but if

1795
01:51:43,750 --> 01:51:51,640
assuming it was be you know

1796
01:51:46,490 --> 01:51:56,780
reimplemented safely it could be useful

1797
01:51:51,640 --> 01:52:00,080
to further catch these unreliable

1798
01:51:56,780 --> 01:52:03,860
resolvers even the ones that slipped

1799
01:52:00,080 --> 01:52:05,450
through DNS validator so there's

1800
01:52:03,860 --> 01:52:07,580
possibilities of room for improvement in

1801
01:52:05,450 --> 01:52:09,139
this area especially if again we maybe

1802
01:52:07,580 --> 01:52:12,309
had people that wanted to dig into it

1803
01:52:09,140 --> 01:52:15,790
learn more about it and implement it

1804
01:52:12,310 --> 01:52:15,790
really well for us

1805
01:52:16,600 --> 01:52:20,510
yeah no worries

1806
01:52:18,500 --> 01:52:22,760
there's one last question I think you

1807
01:52:20,510 --> 01:52:24,590
already mentioned this but for people

1808
01:52:22,760 --> 01:52:27,650
that have more questions want to

1809
01:52:24,590 --> 01:52:29,240
contribute where can they contribute to

1810
01:52:27,650 --> 01:52:30,769
the project or how can they contribute

1811
01:52:29,240 --> 01:52:33,980
to the project and if they have any more

1812
01:52:30,770 --> 01:52:39,080
questions where can they ask their

1813
01:52:33,980 --> 01:52:42,500
questions yeah so if you go to the repo

1814
01:52:39,080 --> 01:52:44,450
readme you know that the chat link is

1815
01:52:42,500 --> 01:52:46,540
right there and it'll bring you to the

1816
01:52:44,450 --> 01:52:50,050
discord server that's where all the

1817
01:52:46,540 --> 01:52:53,660
questions are being thrown around the

1818
01:52:50,050 --> 01:52:55,010
debates potential debates about why is

1819
01:52:53,660 --> 01:52:59,330
it being done this way can we do it

1820
01:52:55,010 --> 01:53:00,170
better and it's it's really the place

1821
01:52:59,330 --> 01:53:01,760
where if you want to get the

1822
01:53:00,170 --> 01:53:04,100
conversation started you want to you

1823
01:53:01,760 --> 01:53:07,090
want to get the debate going and

1824
01:53:04,100 --> 01:53:09,560
definitely come there and usually these

1825
01:53:07,090 --> 01:53:12,110
discussions end up ending with someone

1826
01:53:09,560 --> 01:53:13,520
saying yeah that sounds like a great

1827
01:53:12,110 --> 01:53:14,179
idea or that's probably what we should

1828
01:53:13,520 --> 01:53:16,760
do

1829
01:53:14,180 --> 01:53:21,020
can you write up the feature request or

1830
01:53:16,760 --> 01:53:21,300
do you want to write as a contribute

1831
01:53:21,020 --> 01:53:23,730
that

1832
01:53:21,300 --> 01:53:26,940
yourself and raise the PR and things

1833
01:53:23,730 --> 01:53:30,839
like that so definitely the discord

1834
01:53:26,940 --> 01:53:33,030
server well it sounds good

1835
01:53:30,840 --> 01:53:36,480
again if you have any more questions as

1836
01:53:33,030 --> 01:53:39,960
you heard head over to D on my discord

1837
01:53:36,480 --> 01:53:43,079
server before we like Jeff go please

1838
01:53:39,960 --> 01:53:44,579
give him a big THANK YOU in the chat it

1839
01:53:43,079 --> 01:53:46,558
was an honor to have you on here Jeff I

1840
01:53:44,579 --> 01:53:48,659
appreciate all their work and I look

1841
01:53:46,559 --> 01:53:51,119
forward to seeing where our mass goes in

1842
01:53:48,659 --> 01:53:54,150
a year from now yeah thank you this was

1843
01:53:51,119 --> 01:53:56,250
a great opportunity to you know reach

1844
01:53:54,150 --> 01:53:59,250
out a little more to the community help

1845
01:53:56,250 --> 01:54:03,750
the community in the process and yeah

1846
01:53:59,250 --> 01:54:07,110
please don't hesitate anyone to come

1847
01:54:03,750 --> 01:54:10,940
visit us at the discord server Thank You

1848
01:54:07,110 --> 01:54:10,940
Ven awesome thank you so much Jeff

1849
01:54:15,770 --> 01:54:17,830
you

