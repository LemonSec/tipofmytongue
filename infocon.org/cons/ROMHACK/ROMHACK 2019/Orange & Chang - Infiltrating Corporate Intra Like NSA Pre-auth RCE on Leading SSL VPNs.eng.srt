1
00:00:02,870 --> 00:00:22,199
thank you and welcome on stage or enjoy

2
00:00:06,359 --> 00:00:24,539
Messiah please thank you hi my best

3
00:00:22,199 --> 00:00:28,199
virtual private network becomes more and

4
00:00:24,539 --> 00:00:30,509
more prevalent for enterprise sslvpn is

5
00:00:28,199 --> 00:00:32,790
the most community convenient way for

6
00:00:30,509 --> 00:00:36,840
the employee to assess the cooperation

7
00:00:32,790 --> 00:00:39,500
network for hackers is also the shortest

8
00:00:36,840 --> 00:00:43,710
path to compromise your intranet

9
00:00:39,500 --> 00:00:49,170
so today let's take a look at how your

10
00:00:43,710 --> 00:00:51,930
SSL VPN could be well hi an orange

11
00:00:49,170 --> 00:00:55,140
we are the Deaf coral research team from

12
00:00:51,930 --> 00:00:56,970
Taiwan and now as the other researcher

13
00:00:55,140 --> 00:00:58,280
and focusing our web and application

14
00:00:56,970 --> 00:01:01,980
security

15
00:00:58,280 --> 00:01:07,259
apart from that and also a speaker ct8

16
00:01:01,980 --> 00:01:12,329
prayer and bug bounty hunter hello

17
00:01:07,259 --> 00:01:15,390
everyone oh my god hello everyone I'm a

18
00:01:12,329 --> 00:01:18,869
job I'm also a security researcher from

19
00:01:15,390 --> 00:01:22,200
deaf core in Taiwan and I play CDF in he

20
00:01:18,869 --> 00:01:26,240
come in to our 7c hip ting and I'm when

21
00:01:22,200 --> 00:01:29,310
they focus on binary exploitation

22
00:01:26,240 --> 00:01:31,798
here is the highlights today we will

23
00:01:29,310 --> 00:01:34,590
disclose free all three moto exclusion

24
00:01:31,799 --> 00:01:38,819
on both protein net and Perl secure SSL

25
00:01:34,590 --> 00:01:41,090
VPN in the 49 cast we will show you the

26
00:01:38,819 --> 00:01:43,979
hot core the reliable binary

27
00:01:41,090 --> 00:01:47,579
exploitation with the magic string to

28
00:01:43,979 --> 00:01:50,850
open the door in the prosecutor we were

29
00:01:47,579 --> 00:01:53,068
presented out of box web shaking and how

30
00:01:50,850 --> 00:01:56,369
if I pass the two-factor authentication

31
00:01:53,069 --> 00:02:00,509
and Twitter and hack into their most

32
00:01:56,369 --> 00:02:02,999
important server last but not least we

33
00:02:00,509 --> 00:02:06,329
will introduce how we leverage a hidden

34
00:02:02,999 --> 00:02:10,669
feature to take over not only your SSL

35
00:02:06,329 --> 00:02:14,100
VPN but also all of your clients and

36
00:02:10,669 --> 00:02:15,950
this is the agenda we first introduced

37
00:02:14,100 --> 00:02:19,010
the SSL VPN and

38
00:02:15,950 --> 00:02:22,339
we'll focus on that most of the sslvpn

39
00:02:19,010 --> 00:02:25,160
don't provide a show so we will

40
00:02:22,340 --> 00:02:28,280
elaborate how interpret the trials and

41
00:02:25,160 --> 00:02:32,090
introduce the attack vectors we pick to

42
00:02:28,280 --> 00:02:35,600
discover box of course we will have case

43
00:02:32,090 --> 00:02:37,989
studies and demonstration and last is

44
00:02:35,600 --> 00:02:44,349
the sslvpn weaponization and

45
00:02:37,989 --> 00:02:46,970
recommendations so what is sslvpn

46
00:02:44,349 --> 00:02:50,839
compared to the situs time appears

47
00:02:46,970 --> 00:02:54,170
such as the IPSec and PPTP sslvpn is

48
00:02:50,840 --> 00:02:57,440
more ease of use and compatible with any

49
00:02:54,170 --> 00:03:00,679
network environments all you need is

50
00:02:57,440 --> 00:03:03,680
just a browser because of the

51
00:03:00,680 --> 00:03:06,080
convenience SSL VPN because the most

52
00:03:03,680 --> 00:03:11,230
popular will not as this way for

53
00:03:06,080 --> 00:03:14,840
enterprise SSL VPN are everywhere and

54
00:03:11,230 --> 00:03:18,170
protect the cooperation SS from in the

55
00:03:14,840 --> 00:03:21,140
next portion they are trusted to be

56
00:03:18,170 --> 00:03:25,548
secure and considers the only way to

57
00:03:21,140 --> 00:03:29,988
your private network but what if your

58
00:03:25,549 --> 00:03:35,090
trusted SS Olivia is actual they will

59
00:03:29,989 --> 00:03:40,989
become your virtual public network yes

60
00:03:35,090 --> 00:03:45,560
public so that's why we focus on SSL VPN

61
00:03:40,989 --> 00:03:48,079
they are important but applies part they

62
00:03:45,560 --> 00:03:51,859
are widely used by corporations of all

63
00:03:48,079 --> 00:03:55,359
size but only few vendors dominate

64
00:03:51,859 --> 00:03:58,359
market according to our survey

65
00:03:55,359 --> 00:04:04,100
unfortunately the top three SSL VPN

66
00:03:58,359 --> 00:04:07,400
vendors dominate about 75% Maki sure so

67
00:04:04,100 --> 00:04:10,608
if you fire high impact vulnerability

68
00:04:07,400 --> 00:04:14,980
and one of the leading SSL VPN you can

69
00:04:10,609 --> 00:04:19,549
have the permit the most important is

70
00:04:14,980 --> 00:04:24,710
SSL VPN must be exposed to outside so it

71
00:04:19,548 --> 00:04:28,130
must have direct intranet answers beauty

72
00:04:24,710 --> 00:04:30,530
OS importance even an essay is County

73
00:04:28,130 --> 00:04:34,069
for SSL VPN

74
00:04:30,530 --> 00:04:38,099
SSL VPN is trusted by large corporations

75
00:04:34,069 --> 00:04:43,729
industry leaders and tech giants such as

76
00:04:38,099 --> 00:04:49,080
the Facebook Twitter and Marvel

77
00:04:43,729 --> 00:04:53,998
yeah the logo is very cool even the NSA

78
00:04:49,080 --> 00:04:57,628
use the sslvpn they are everywhere but

79
00:04:53,999 --> 00:05:02,759
usually forgotten sometimes even a

80
00:04:57,629 --> 00:05:05,550
hacker knows your SSL VPN more so

81
00:05:02,759 --> 00:05:08,279
extender with this cross a pretty remote

82
00:05:05,550 --> 00:05:12,680
code execution and pollute or SSL VPN in

83
00:05:08,279 --> 00:05:15,680
July the Palo Alto is also the sponsor

84
00:05:12,680 --> 00:05:15,680
okay

85
00:05:17,199 --> 00:05:23,510
yeah we fight about essa dentally

86
00:05:20,560 --> 00:05:27,320
however while the prophecy and the

87
00:05:23,510 --> 00:05:31,460
latest version we failed so we started

88
00:05:27,320 --> 00:05:33,680
out if this is an availability we

89
00:05:31,460 --> 00:05:37,039
searched all over the internet but

90
00:05:33,680 --> 00:05:40,840
cannot cite anything related there is no

91
00:05:37,040 --> 00:05:44,330
CVE advisory or any official

92
00:05:40,840 --> 00:05:49,489
announcement therefore we believe this

93
00:05:44,330 --> 00:05:51,919
is a style fix one day so we submit we

94
00:05:49,490 --> 00:05:55,070
submit all over the world and fight over

95
00:05:51,919 --> 00:05:58,190
suffered from this so will be pro to

96
00:05:55,070 --> 00:06:02,169
tear but panda program this is not a

97
00:05:58,190 --> 00:06:05,120
fault our birth they are also the victim

98
00:06:02,169 --> 00:06:08,320
we also report this to the palate or

99
00:06:05,120 --> 00:06:12,440
pistol but we cut a following lip line

100
00:06:08,320 --> 00:06:16,430
they do not see v8 hence fault

101
00:06:12,440 --> 00:06:21,500
internally so that's the reason why

102
00:06:16,430 --> 00:06:27,260
there is no official advisory okay this

103
00:06:21,500 --> 00:06:33,500
is fine nice no Stevie II so there's no

104
00:06:27,260 --> 00:06:37,190
vulnerability anyway follow us to your

105
00:06:33,500 --> 00:06:42,260
science TV for that trust my after we

106
00:06:37,190 --> 00:06:45,410
published all the story once we decide

107
00:06:42,260 --> 00:06:49,340
to research into sslvpn the next

108
00:06:45,410 --> 00:06:52,940
question is how to choose tackles we did

109
00:06:49,340 --> 00:06:55,460
a little survey and leading sslvpn as

110
00:06:52,940 --> 00:07:00,020
you can see even in the high stability

111
00:06:55,460 --> 00:07:04,909
label CVE the pro secure and 14 a are

112
00:07:00,020 --> 00:07:07,820
the most secure one we want to change

113
00:07:04,910 --> 00:07:11,139
the mission impossible so we put out for

114
00:07:07,820 --> 00:07:14,210
allergy and rescue and voting name or

115
00:07:11,139 --> 00:07:16,849
press q is the most famous Vivien

116
00:07:14,210 --> 00:07:20,810
solution in the world and has the least

117
00:07:16,849 --> 00:07:23,330
high level CBS is trusted by large

118
00:07:20,810 --> 00:07:26,900
corporations service providers and

119
00:07:23,330 --> 00:07:29,590
government departments 40 names more

120
00:07:26,900 --> 00:07:32,380
useful and useless and media

121
00:07:29,590 --> 00:07:36,369
sighs the enterprise is common in Asia

122
00:07:32,380 --> 00:07:39,520
and Europe both vendors have little

123
00:07:36,370 --> 00:07:41,680
high-level CVS so our mission is to

124
00:07:39,520 --> 00:07:48,820
fight the pretty remote code execution

125
00:07:41,680 --> 00:07:51,460
on them so last stop shaking to

126
00:07:48,820 --> 00:07:52,180
kick-start a new research is always not

127
00:07:51,460 --> 00:07:55,539
easy

128
00:07:52,180 --> 00:07:58,690
SSO Vivian is a breadbox and closing so

129
00:07:55,540 --> 00:08:01,210
suppliers they usually build their own

130
00:07:58,690 --> 00:08:05,410
architectural stacks from scratch and

131
00:08:01,210 --> 00:08:08,049
don't provide a shell to dive into so

132
00:08:05,410 --> 00:08:11,080
the job rack is the essential step for

133
00:08:08,050 --> 00:08:16,090
researchers to turn the break box into

134
00:08:11,080 --> 00:08:19,890
bread box as you can see most of the

135
00:08:16,090 --> 00:08:25,380
sslvpn only provided a restricted show

136
00:08:19,890 --> 00:08:28,510
so let's talk about how to direct them

137
00:08:25,380 --> 00:08:30,340
we are not a hard work guys so we

138
00:08:28,510 --> 00:08:34,090
started searching from the virtual

139
00:08:30,340 --> 00:08:37,150
trials all the virtual parents can be

140
00:08:34,090 --> 00:08:41,440
classified into the typical one and the

141
00:08:37,150 --> 00:08:44,290
encrypted one it's trivial for typical

142
00:08:41,440 --> 00:08:46,960
ones so we don't pay a lot of time here

143
00:08:44,290 --> 00:08:51,040
you can just enter the single user mode

144
00:08:46,960 --> 00:08:56,380
or multi relatives on your box to modify

145
00:08:51,040 --> 00:09:00,459
the files instant to get a show but what

146
00:08:56,380 --> 00:09:02,560
if the disk has been encrypted we saw

147
00:09:00,460 --> 00:09:06,010
the routing process we cannot see

148
00:09:02,560 --> 00:09:11,949
anything so today we will show you a

149
00:09:06,010 --> 00:09:14,650
trick to bypass the encryption here is

150
00:09:11,950 --> 00:09:17,680
the leanest booting process the color

151
00:09:14,650 --> 00:09:20,470
red in past to prep encryption is to

152
00:09:17,680 --> 00:09:23,650
analyze the revert to analyze and

153
00:09:20,470 --> 00:09:27,520
reverse the villainess kernel to get the

154
00:09:23,650 --> 00:09:31,329
encryption key however we focus on

155
00:09:27,520 --> 00:09:34,090
another stage here we keep an example to

156
00:09:31,330 --> 00:09:39,280
show how memories forensics

157
00:09:34,090 --> 00:09:41,740
tackles take us to the window as we know

158
00:09:39,280 --> 00:09:42,870
the booting process is stuff from the

159
00:09:41,740 --> 00:09:45,750
BIOS

160
00:09:42,870 --> 00:09:48,420
balota and the colonel to drop the first

161
00:09:45,750 --> 00:09:52,500
process to initialize the operating

162
00:09:48,420 --> 00:09:56,880
system improve secure the initial

163
00:09:52,500 --> 00:09:58,410
process show your plant press enter to

164
00:09:56,880 --> 00:10:03,060
view or update your

165
00:09:58,410 --> 00:10:07,380
appliers savings and once we press the

166
00:10:03,060 --> 00:10:10,560
enter the initial process spot another

167
00:10:07,380 --> 00:10:14,670
process to allow you modify and view the

168
00:10:10,560 --> 00:10:20,189
settings we suspend a virtual machine at

169
00:10:14,670 --> 00:10:24,689
this time and scan the entire memory to

170
00:10:20,190 --> 00:10:28,529
do the memory forensic a host OS from

171
00:10:24,690 --> 00:10:32,100
the memory forensics we observe that the

172
00:10:28,529 --> 00:10:36,540
spawn process is a pro screen the name

173
00:10:32,100 --> 00:10:39,330
is BS convict up here and since it can

174
00:10:36,540 --> 00:10:42,990
be the whit point of how the booting

175
00:10:39,330 --> 00:10:47,130
processes so it's time to show the magic

176
00:10:42,990 --> 00:10:51,930
we will just pack a few bytes to pop our

177
00:10:47,130 --> 00:10:57,150
show we patch the memory and we'll press

178
00:10:51,930 --> 00:10:59,790
the PS call vector PL to ping Sh so once

179
00:10:57,150 --> 00:11:02,689
the modification is done the only thing

180
00:10:59,790 --> 00:11:08,040
we need is just to press the enter and

181
00:11:02,690 --> 00:11:10,740
we got a show so now we have the full

182
00:11:08,040 --> 00:11:19,880
control of the stings turn and can do

183
00:11:10,740 --> 00:11:19,880
further debugging and analyzing ok

184
00:11:25,190 --> 00:11:31,170
okay so now we got a show and we can

185
00:11:28,350 --> 00:11:35,430
start debugging and hacking the SSL

186
00:11:31,170 --> 00:11:37,709
Vivian's but where's the buck there are

187
00:11:35,430 --> 00:11:40,500
many demons from the on the server and

188
00:11:37,710 --> 00:11:43,260
there's really complicated and how to

189
00:11:40,500 --> 00:11:46,830
analyze ting and the CRO place is

190
00:11:43,260 --> 00:11:51,090
important first so if a proton attack

191
00:11:46,830 --> 00:11:54,420
vectors specific for SSL VPN will talk

192
00:11:51,090 --> 00:11:57,150
about a special feature called web VPN

193
00:11:54,420 --> 00:11:59,550
it's powerful but also vulnerable

194
00:11:57,150 --> 00:12:02,189
sometimes we got a lot of bounties to

195
00:11:59,550 --> 00:12:05,339
release features it's just like our idea

196
00:12:02,190 --> 00:12:08,700
and the next one is the native script

197
00:12:05,340 --> 00:12:11,400
language extensions SSO VPNs and how

198
00:12:08,700 --> 00:12:13,050
that can be dangerous and we also

199
00:12:11,400 --> 00:12:16,770
introduced a multi layer architecture

200
00:12:13,050 --> 00:12:20,790
problems so that star wave will be here

201
00:12:16,770 --> 00:12:24,060
well Vivian is is a convenient proxy

202
00:12:20,790 --> 00:12:27,150
feature it's Prosecco and canvas it

203
00:12:24,060 --> 00:12:29,459
proxies all kinds of traffic's to low

204
00:12:27,150 --> 00:12:35,459
web browser its approach various

205
00:12:29,460 --> 00:12:38,120
protocols like HTTP FTP and RDP and also

206
00:12:35,460 --> 00:12:42,390
handles many web resources such as

207
00:12:38,120 --> 00:12:45,180
WebSocket JavaScript and flash we don't

208
00:12:42,390 --> 00:12:47,490
need to install any software only click

209
00:12:45,180 --> 00:12:51,439
on the browser and we can connect you

210
00:12:47,490 --> 00:12:54,450
other services and sounds powerful right

211
00:12:51,440 --> 00:12:59,220
apparently is not easy to implement this

212
00:12:54,450 --> 00:13:02,550
feature some vendors do to implement by

213
00:12:59,220 --> 00:13:05,780
themselves however protocols and web

214
00:13:02,550 --> 00:13:09,599
resources handling a prone to memory box

215
00:13:05,780 --> 00:13:13,530
think about SSL VPN processing SMB or

216
00:13:09,600 --> 00:13:15,860
flash you know how hard it could be also

217
00:13:13,530 --> 00:13:18,990
this requires high security awareness

218
00:13:15,860 --> 00:13:21,510
for example we found some debug

219
00:13:18,990 --> 00:13:24,300
functions in sensitive data without

220
00:13:21,510 --> 00:13:29,340
encryption and information exposed

221
00:13:24,300 --> 00:13:32,280
carelessly so some vendors decided not

222
00:13:29,340 --> 00:13:34,480
to revenge the will they modify from an

223
00:13:32,280 --> 00:13:38,240
open source project

224
00:13:34,480 --> 00:13:41,780
but they copy the code and also Capulet

225
00:13:38,240 --> 00:13:46,490
box so it's kind of tougher are hard to

226
00:13:41,780 --> 00:13:50,260
maintain update or patch or some vendors

227
00:13:46,490 --> 00:13:53,510
choose to Co existing levels but without

228
00:13:50,260 --> 00:13:56,540
the vendors are often neglect to after

229
00:13:53,510 --> 00:14:01,030
this libraries we found the curl and

230
00:13:56,540 --> 00:14:03,800
lips XML from over 10 years ago

231
00:14:01,030 --> 00:14:05,930
implementing web VPN is really not easy

232
00:14:03,800 --> 00:14:10,060
and this is the most serious attack

233
00:14:05,930 --> 00:14:12,890
vector we found on the SSL Vivian's and

234
00:14:10,060 --> 00:14:15,560
during our research we found that most

235
00:14:12,890 --> 00:14:19,010
SSL Vivian's have their own native

236
00:14:15,560 --> 00:14:22,489
script language extensions like PHP

237
00:14:19,010 --> 00:14:26,689
extensions returning C or Pro extension

238
00:14:22,490 --> 00:14:29,600
returning C++ vendors like to use these

239
00:14:26,690 --> 00:14:32,410
extensions to do encoding decoding or

240
00:14:29,600 --> 00:14:36,290
other operations to improving features

241
00:14:32,410 --> 00:14:38,600
which may be vulnerable and it's really

242
00:14:36,290 --> 00:14:43,730
prone to type confusion between these

243
00:14:38,600 --> 00:14:46,970
different languages as we know string

244
00:14:43,730 --> 00:14:50,150
operation is always difficult for C like

245
00:14:46,970 --> 00:14:52,480
proper size calculation dangerous

246
00:14:50,150 --> 00:14:56,630
functions such as string copy or

247
00:14:52,480 --> 00:14:59,000
misunderstood functions for example do

248
00:14:56,630 --> 00:15:03,290
you really know how the return value of

249
00:14:59,000 --> 00:15:08,480
a sampling F should be can exist the

250
00:15:03,290 --> 00:15:10,760
power size actually is possible so

251
00:15:08,480 --> 00:15:15,440
calculation like this will cause an

252
00:15:10,760 --> 00:15:18,800
integer overflow and the type of these

253
00:15:15,440 --> 00:15:21,830
extensions are also confusing although

254
00:15:18,800 --> 00:15:25,339
less things sin but to really know what

255
00:15:21,830 --> 00:15:30,020
time it is or to know you're using

256
00:15:25,340 --> 00:15:34,760
safely who knows and this may cause

257
00:15:30,020 --> 00:15:37,610
serious problems and the last one is the

258
00:15:34,760 --> 00:15:39,860
material architectural problems when

259
00:15:37,610 --> 00:15:42,290
there are different standards for

260
00:15:39,860 --> 00:15:44,839
processing the same thing the

261
00:15:42,290 --> 00:15:46,049
inconsistency between them will lead to

262
00:15:44,839 --> 00:15:49,119
problems

263
00:15:46,049 --> 00:15:51,848
such as the attack surface on reverse

264
00:15:49,119 --> 00:15:55,599
proxy and Java web back end the talk

265
00:15:51,849 --> 00:15:59,349
from Orange in Baja this year and here

266
00:15:55,599 --> 00:16:02,589
we give another example this is also in

267
00:15:59,349 --> 00:16:06,129
an SS control bypassed it's on Steam

268
00:16:02,589 --> 00:16:08,889
observer and RESTful API back-end the

269
00:16:06,129 --> 00:16:12,579
rebbe expression that class matches too

270
00:16:08,889 --> 00:16:15,639
much so we can leverage list to match

271
00:16:12,579 --> 00:16:20,709
the data / to assess the privileged

272
00:16:15,639 --> 00:16:23,879
pages okay so here's the special attack

273
00:16:20,709 --> 00:16:26,768
vectors we found on the SSO Vivien's and

274
00:16:23,879 --> 00:16:29,919
following we're going to talk about two

275
00:16:26,769 --> 00:16:32,139
case studies we will show how we get

276
00:16:29,919 --> 00:16:35,978
free odds remote code execution and

277
00:16:32,139 --> 00:16:37,899
first gate and post occur and here is

278
00:16:35,979 --> 00:16:40,239
the disclaimer all the Seavey's

279
00:16:37,899 --> 00:16:42,909
mentioned below have been reported and

280
00:16:40,239 --> 00:16:46,319
patched by Frattini post occur in

281
00:16:42,909 --> 00:16:49,149
Twitter and some hackers have published

282
00:16:46,319 --> 00:16:51,159
exploit and it's being used in the world

283
00:16:49,149 --> 00:16:55,749
so please go updater

284
00:16:51,159 --> 00:16:58,869
SSO Vivien's as soon as possible so

285
00:16:55,749 --> 00:17:01,089
that's star we've what gate we first

286
00:16:58,869 --> 00:17:03,879
draw breath into the red gate and look

287
00:17:01,089 --> 00:17:07,269
into the binaries we try to list the

288
00:17:03,879 --> 00:17:10,509
boundaries in / ping and without there

289
00:17:07,269 --> 00:17:13,750
are all symbolic links xx - rings -

290
00:17:10,509 --> 00:17:17,159
signatures like this snapshot and

291
00:17:13,750 --> 00:17:19,689
fruitcake compels all the programs and

292
00:17:17,159 --> 00:17:22,240
configurations into one single binary

293
00:17:19,689 --> 00:17:25,899
this makes the evening program really

294
00:17:22,240 --> 00:17:30,580
huge and annoying the IDB file of unit

295
00:17:25,898 --> 00:17:33,158
is about 500 megabytes with 85,000

296
00:17:30,580 --> 00:17:36,639
functions and they are all stripped so

297
00:17:33,159 --> 00:17:39,039
there's no single and it contains plenty

298
00:17:36,639 --> 00:17:42,360
of function tables to mean to manage

299
00:17:39,039 --> 00:17:45,639
each progress including the web demon

300
00:17:42,360 --> 00:17:48,330
through our investigation we found a

301
00:17:45,639 --> 00:17:53,769
webserver is modified from a patch but

302
00:17:48,330 --> 00:17:56,350
it's the patch from 2002 so the web

303
00:17:53,769 --> 00:18:00,720
server running under SSL VPN

304
00:17:56,350 --> 00:18:00,719
is actually as old as your grandmother

305
00:18:00,899 --> 00:18:05,758
compared to the admin page the user

306
00:18:03,669 --> 00:18:09,549
living interface is the only one that

307
00:18:05,759 --> 00:18:11,559
definitely exposed to the Internet it

308
00:18:09,549 --> 00:18:16,210
looks like this it's a simple logging

309
00:18:11,559 --> 00:18:18,100
page no other patterns or functions so

310
00:18:16,210 --> 00:18:22,120
we're gonna explore is truly secure

311
00:18:18,100 --> 00:18:24,158
faced without authentication and we'll

312
00:18:22,120 --> 00:18:24,668
talk about three was mentioning parks

313
00:18:24,159 --> 00:18:27,250
today

314
00:18:24,669 --> 00:18:30,250
first is the pre auth remote code

315
00:18:27,250 --> 00:18:33,429
execution chip we can buy two bucks of

316
00:18:30,250 --> 00:18:36,250
prios observable reading two logging and

317
00:18:33,429 --> 00:18:39,279
the postal hip over flow together shoe

318
00:18:36,250 --> 00:18:43,059
and we also think introduced an

319
00:18:39,279 --> 00:18:45,429
interesting bug the magic factor which

320
00:18:43,059 --> 00:18:49,120
can modify any users password with a

321
00:18:45,429 --> 00:18:52,779
magic key so let's start with the

322
00:18:49,120 --> 00:18:55,559
foiling heart it was a function used to

323
00:18:52,779 --> 00:18:58,690
show corresponding language for users it

324
00:18:55,559 --> 00:19:02,918
concatenate strings directly without a

325
00:18:58,690 --> 00:19:06,639
data / filter but but trace an extension

326
00:19:02,919 --> 00:19:10,019
appended automatically so it's things

327
00:19:06,639 --> 00:19:13,330
like we can only read json files right

328
00:19:10,019 --> 00:19:20,440
think about it can we remove the Chasen

329
00:19:13,330 --> 00:19:23,769
and read any file we want the answer is

330
00:19:20,440 --> 00:19:27,669
yes we can utilize the feature of SNP

331
00:19:23,769 --> 00:19:32,169
near Akron to the main page it's right

332
00:19:27,669 --> 00:19:35,769
at the most size - one of the buffer

333
00:19:32,169 --> 00:19:37,899
size so libertà is fixed here and we

334
00:19:35,769 --> 00:19:43,090
only need to make exceeds to parasites

335
00:19:37,899 --> 00:19:45,789
like this we fairly always slashes so

336
00:19:43,090 --> 00:19:50,590
the path after a sampling F becomes like

337
00:19:45,789 --> 00:19:53,200
this the appended that jason exceeds the

338
00:19:50,590 --> 00:19:55,689
parasite so it stripped

339
00:19:53,200 --> 00:19:58,500
pirates and printf then we can read

340
00:19:55,690 --> 00:19:58,500
anything we want

341
00:19:59,720 --> 00:20:04,580
working observe already we follow

342
00:20:02,090 --> 00:20:08,418
something interesting and we call it in

343
00:20:04,580 --> 00:20:10,879
sslvpn Moochie it appears in many

344
00:20:08,419 --> 00:20:13,789
products has only for decades but for

345
00:20:10,880 --> 00:20:17,179
secure or other vendors in this mystery

346
00:20:13,789 --> 00:20:18,740
is the hold an excessively detailed such

347
00:20:17,179 --> 00:20:22,640
a file on the sslvpn

348
00:20:18,740 --> 00:20:27,200
the first called web live en sslvpn web

349
00:20:22,640 --> 00:20:32,289
session so hustler accountant session

350
00:20:27,200 --> 00:20:37,820
token' of course IV edgers sure username

351
00:20:32,289 --> 00:20:42,158
indeed and plan hacks password yeah

352
00:20:37,820 --> 00:20:45,289
that's that's really friendly I like it

353
00:20:42,159 --> 00:20:47,840
anyway this connects password are really

354
00:20:45,289 --> 00:20:51,039
convenient we don't need to crack

355
00:20:47,840 --> 00:20:54,559
password anymore and we can login easy

356
00:20:51,039 --> 00:20:57,169
today we're going to utilize the web BPM

357
00:20:54,559 --> 00:21:01,220
feature as you can see it supports many

358
00:20:57,169 --> 00:21:04,130
protocols and not try the HTTP we only

359
00:21:01,220 --> 00:21:08,210
need to type your URL and we can connect

360
00:21:04,130 --> 00:21:10,549
to the website through web Vivian and if

361
00:21:08,210 --> 00:21:14,030
we look at URL we can see that we're

362
00:21:10,549 --> 00:21:17,960
still connecting to the SSL VPN so it

363
00:21:14,030 --> 00:21:20,809
proxies the whole website for us and if

364
00:21:17,960 --> 00:21:23,900
we look into the elements we can find a

365
00:21:20,809 --> 00:21:26,928
URL of resources are also from the SSL

366
00:21:23,900 --> 00:21:30,289
VPN so it will writes all the URLs for

367
00:21:26,929 --> 00:21:33,770
us as you can imagine this involves in

368
00:21:30,289 --> 00:21:35,408
heavy string operation so with powder

369
00:21:33,770 --> 00:21:39,530
keyboard well here

370
00:21:35,409 --> 00:21:42,200
it occurs in JavaScript parsing in it's

371
00:21:39,530 --> 00:21:44,990
simply because Lake of blinchik while

372
00:21:42,200 --> 00:21:47,780
memory coffee the power is only there at

373
00:21:44,990 --> 00:21:51,650
few thousand but the input string is

374
00:21:47,780 --> 00:21:54,950
unlimited generally we do some key

375
00:21:51,650 --> 00:21:57,320
function to overflow or nice target and

376
00:21:54,950 --> 00:22:00,380
control a program counter in dual code

377
00:21:57,320 --> 00:22:03,559
execution but a situation is difficult

378
00:22:00,380 --> 00:22:08,000
in photogate we've pasted stunning this

379
00:22:03,559 --> 00:22:11,178
type destabilizing first of all the web

380
00:22:08,000 --> 00:22:13,309
demon handles connections with people so

381
00:22:11,179 --> 00:22:16,789
it's a single third process

382
00:22:13,309 --> 00:22:19,850
in the main process in libraries used to

383
00:22:16,789 --> 00:22:23,480
send heap it means all the memory

384
00:22:19,850 --> 00:22:26,809
locations of all the operations in all

385
00:22:23,480 --> 00:22:30,830
the connections are on the same heap so

386
00:22:26,809 --> 00:22:33,110
LIHEAP is really unstable moreover there

387
00:22:30,830 --> 00:22:35,570
are some operations regulating triggered

388
00:22:33,110 --> 00:22:39,168
they interfere LIHEAP arrangement in

389
00:22:35,570 --> 00:22:41,840
it's uncontrollable so we cannot arrange

390
00:22:39,169 --> 00:22:44,870
the heap allocation carefully that would

391
00:22:41,840 --> 00:22:47,480
just make a mess and there is something

392
00:22:44,870 --> 00:22:51,018
even more ironic apart implements and

393
00:22:47,480 --> 00:22:53,690
additional memory management so there is

394
00:22:51,019 --> 00:22:55,730
no free until the connection ends and we

395
00:22:53,690 --> 00:22:59,929
cannot arrange the heap in a single

396
00:22:55,730 --> 00:23:02,929
connection in the locator also limits

397
00:22:59,929 --> 00:23:05,870
our export it's called je may lock it's

398
00:23:02,929 --> 00:23:07,970
centralized small objects and maintains

399
00:23:05,870 --> 00:23:10,428
these objects with a bitmap

400
00:23:07,970 --> 00:23:12,710
let's effectively reduce the

401
00:23:10,429 --> 00:23:16,330
interference between small and large

402
00:23:12,710 --> 00:23:20,120
objects it also limits our attractions

403
00:23:16,330 --> 00:23:24,620
so it's hard to put small objects nearby

404
00:23:20,120 --> 00:23:27,320
our buffer so we're stuck at a time and

405
00:23:24,620 --> 00:23:32,689
therefore we started too fast the server

406
00:23:27,320 --> 00:23:36,678
in it cost and we almost control a

407
00:23:32,690 --> 00:23:39,159
program counter and yeah this is why we

408
00:23:36,679 --> 00:23:39,159
love fuzzy

409
00:23:42,430 --> 00:23:49,640
so we crush a function table pointer in

410
00:23:46,340 --> 00:23:52,340
SSL structure this structure stores

411
00:23:49,640 --> 00:23:54,680
information of each connection it's used

412
00:23:52,340 --> 00:23:58,720
for connection handling and it's an

413
00:23:54,680 --> 00:24:02,390
ideal target for our hip exploit why

414
00:23:58,720 --> 00:24:04,370
first every new connection locates in a

415
00:24:02,390 --> 00:24:08,030
sense of structure so we can trigger it

416
00:24:04,370 --> 00:24:11,000
easy and its size is close to our

417
00:24:08,030 --> 00:24:13,010
traffic buffer and therefore it can be

418
00:24:11,000 --> 00:24:16,490
placed nearby our buffer with the

419
00:24:13,010 --> 00:24:20,330
regular offset and the most important is

420
00:24:16,490 --> 00:24:23,300
it has some useful structural members it

421
00:24:20,330 --> 00:24:25,699
contains a function table pointer called

422
00:24:23,300 --> 00:24:29,540
method and this is how we trigger the

423
00:24:25,700 --> 00:24:32,210
crash but we found one even better it's

424
00:24:29,540 --> 00:24:35,240
a function pointer called handshake

425
00:24:32,210 --> 00:24:37,310
function with least the expo it can be

426
00:24:35,240 --> 00:24:40,160
much easier we don't need a whole

427
00:24:37,310 --> 00:24:44,899
function table anymore we only need a

428
00:24:40,160 --> 00:24:47,540
function of just we cannot arrange the

429
00:24:44,900 --> 00:24:50,630
hip in a single connection but we can

430
00:24:47,540 --> 00:24:54,139
mess up connections and spray the hip

431
00:24:50,630 --> 00:24:58,340
the SSL structures in this way we can

432
00:24:54,140 --> 00:25:00,080
also assess all structures is d so we

433
00:24:58,340 --> 00:25:02,510
send lots of low more requests and

434
00:25:00,080 --> 00:25:06,220
attack the server within overflow

435
00:25:02,510 --> 00:25:10,430
requests in the main channel for example

436
00:25:06,220 --> 00:25:13,100
here we build three connections so the

437
00:25:10,430 --> 00:25:17,530
program allocates three SSL structures

438
00:25:13,100 --> 00:25:21,050
on heap and SS structure is like this

439
00:25:17,530 --> 00:25:23,330
some basic information in a function

440
00:25:21,050 --> 00:25:27,230
table and the function pointer is now

441
00:25:23,330 --> 00:25:30,980
pointing to SSL stepped now if we

442
00:25:27,230 --> 00:25:33,440
trigger a JavaScript parsing and the

443
00:25:30,980 --> 00:25:37,640
chakra buffer is allocated ahead of

444
00:25:33,440 --> 00:25:40,460
these SSL structures then we can trigger

445
00:25:37,640 --> 00:25:44,530
overflow and override the SS of

446
00:25:40,460 --> 00:25:44,530
structured members like this

447
00:25:45,340 --> 00:25:50,860
so now if you upload SS or structures

448
00:25:48,190 --> 00:25:53,950
with capital ace and make the program

449
00:25:50,860 --> 00:25:58,719
crashes so how we need to do next is

450
00:25:53,950 --> 00:26:00,970
clear we all need to forge a correct SS

451
00:25:58,720 --> 00:26:04,779
of structure with a fake function

452
00:26:00,970 --> 00:26:07,389
pointer like the address of system so

453
00:26:04,779 --> 00:26:10,120
when a whip turn connection is trying to

454
00:26:07,389 --> 00:26:14,049
to handshake the program executes

455
00:26:10,120 --> 00:26:16,389
forever we want anyway low hip is

456
00:26:14,049 --> 00:26:19,059
unstable so we need to say in the fuzzy

457
00:26:16,389 --> 00:26:22,240
connections to meet a condition the

458
00:26:19,059 --> 00:26:24,399
server maker sometimes what is fine Fred

459
00:26:22,240 --> 00:26:27,549
gait has a reliable watchdog

460
00:26:24,399 --> 00:26:30,899
we just need several attempts taking

461
00:26:27,549 --> 00:26:34,629
about one to two minutes and get it sure

462
00:26:30,899 --> 00:26:37,268
so this is the whole detail of how we

463
00:26:34,629 --> 00:26:39,789
achieve remote code execution maybe some

464
00:26:37,269 --> 00:26:42,220
of you are not binary guys so you may

465
00:26:39,789 --> 00:26:46,330
wonder is there any other way to get

466
00:26:42,220 --> 00:26:50,230
into a server yes why not find another

467
00:26:46,330 --> 00:26:53,649
tour to make your life easier we found a

468
00:26:50,230 --> 00:26:56,309
magic back door in the login page this

469
00:26:53,649 --> 00:26:59,559
function was originally used to update

470
00:26:56,309 --> 00:27:02,559
outdated password however they fail to

471
00:26:59,559 --> 00:27:06,428
authenticate so we can simply use this

472
00:27:02,559 --> 00:27:12,158
secret key which is called magic to

473
00:27:06,429 --> 00:27:14,200
restate the user's password ok so now

474
00:27:12,159 --> 00:27:17,710
we're going to demonstrate how we pop a

475
00:27:14,200 --> 00:27:20,039
root shell from the only exposed HGVs

476
00:27:17,710 --> 00:27:20,039
port

477
00:27:24,800 --> 00:27:31,669
okay so we put our PHP exploit on an SUV

478
00:27:29,000 --> 00:27:34,130
server and this is our exploit you know

479
00:27:31,670 --> 00:27:37,610
that you control a parameter of season

480
00:27:34,130 --> 00:27:40,610
refers to a stack the odds and make our

481
00:27:37,610 --> 00:27:45,770
perfer become the stack after that we do

482
00:27:40,610 --> 00:27:48,800
an arbitrary to call system in here is

483
00:27:45,770 --> 00:27:55,940
the reversal comment we use Python to

484
00:27:48,800 --> 00:28:02,500
build a reversal and we concatenate

485
00:27:55,940 --> 00:28:02,500
these strings to overall SSL structure

486
00:28:04,210 --> 00:28:11,090
so now we can start hacking in the first

487
00:28:07,910 --> 00:28:17,840
panel we open a port to receive the

488
00:28:11,090 --> 00:28:21,280
reversal and we start a falling third to

489
00:28:17,840 --> 00:28:21,280
build mutable connections

490
00:28:27,179 --> 00:28:33,119
okay so then we attack the server we

491
00:28:30,149 --> 00:28:41,849
first try to leak username in Pentax

492
00:28:33,119 --> 00:28:50,099
password from the web session a certain

493
00:28:41,849 --> 00:28:53,070
C we found a username me in a password

494
00:28:50,099 --> 00:28:56,099
this is password for me we can use this

495
00:28:53,070 --> 00:29:07,259
account to log in and make the SSL VPN

496
00:28:56,099 --> 00:29:09,479
proxy our PHP exploit okay so here we

497
00:29:07,259 --> 00:29:10,460
got the root shell and thank you very

498
00:29:09,479 --> 00:29:30,070
much

499
00:29:10,460 --> 00:29:32,570
[Applause]

500
00:29:30,070 --> 00:29:35,090
the next case we talk about his

501
00:29:32,570 --> 00:29:36,799
persecutor press carries the Mucky

502
00:29:35,090 --> 00:29:39,559
leader of sslvpn

503
00:29:36,799 --> 00:29:42,799
and was foreign divestiture of Juniper

504
00:29:39,559 --> 00:29:45,080
Networks they are pro lover and build

505
00:29:42,799 --> 00:29:48,950
all the architecture stack from scratch

506
00:29:45,080 --> 00:29:52,639
the architecture is old but stable and

507
00:29:48,950 --> 00:29:55,549
secure and it's worth to mention first

508
00:29:52,639 --> 00:29:58,658
cure hooks all the process by LD preload

509
00:29:55,549 --> 00:30:01,339
due to the monitor and security

510
00:29:58,659 --> 00:30:03,129
considerations we will discuss this

511
00:30:01,339 --> 00:30:06,859
later

512
00:30:03,129 --> 00:30:09,109
here is the vulnerabilities we fight and

513
00:30:06,859 --> 00:30:11,839
now then we were introduced a free also

514
00:30:09,109 --> 00:30:14,749
arbitrary file reading and a post ass

515
00:30:11,839 --> 00:30:17,210
command injection we turn these two

516
00:30:14,749 --> 00:30:21,919
bucks into the pre also remote code

517
00:30:17,210 --> 00:30:25,159
execution the first valve is the pre Oz

518
00:30:21,919 --> 00:30:28,969
file reading press Q introduce a new

519
00:30:25,159 --> 00:30:32,479
feature called html5 assess since

520
00:30:28,969 --> 00:30:36,109
version at point you it can assess the

521
00:30:32,479 --> 00:30:39,289
telnet SSH and remote desktop by

522
00:30:36,109 --> 00:30:42,049
browsers in order to adapt the new

523
00:30:39,289 --> 00:30:44,899
feature first Kirkley add a new if

524
00:30:42,049 --> 00:30:48,440
conviction to hand out all static

525
00:30:44,899 --> 00:30:51,349
resources cells to the new feature and

526
00:30:48,440 --> 00:30:56,509
the original strict validation has been

527
00:30:51,349 --> 00:31:00,139
bypassed so another effect by this all

528
00:30:56,509 --> 00:31:03,529
unpatched version expect of extract the

529
00:31:00,139 --> 00:31:06,849
end-of-life version are affected here is

530
00:31:03,529 --> 00:31:10,429
the pelo for you to check the sslvpn

531
00:31:06,849 --> 00:31:13,879
when there's a special pass in the end

532
00:31:10,429 --> 00:31:20,539
of the URL the PES validation because

533
00:31:13,879 --> 00:31:23,418
loose and what can we get from this we

534
00:31:20,539 --> 00:31:25,820
can get numbers useful information such

535
00:31:23,419 --> 00:31:29,679
as the server perfectly to decrypt the

536
00:31:25,820 --> 00:31:32,178
ssl connection we can also get important

537
00:31:29,679 --> 00:31:36,769
configurations such as the radius and

538
00:31:32,179 --> 00:31:40,130
LDAP password and all users password

539
00:31:36,769 --> 00:31:43,250
hash insensitive cookie which are

540
00:31:40,130 --> 00:31:46,789
in the web Vivian like Google job apps

541
00:31:43,250 --> 00:31:53,260
in iCloud the last and the most

542
00:31:46,789 --> 00:31:53,260
important is yes print X password again

543
00:31:54,250 --> 00:32:00,230
so now we get a credential so we are

544
00:31:57,590 --> 00:32:04,189
able to assess the cooperation network

545
00:32:00,230 --> 00:32:06,650
easily however our goal is to get Co

546
00:32:04,190 --> 00:32:11,600
execution for persistent and further

547
00:32:06,650 --> 00:32:14,000
actions so here it send a wish and a

548
00:32:11,600 --> 00:32:17,689
comment Junction in management in the

549
00:32:14,000 --> 00:32:21,110
first to cater from the code fragment

550
00:32:17,690 --> 00:32:25,070
it's very obvious and straightforward if

551
00:32:21,110 --> 00:32:28,059
we can count road actions we can inject

552
00:32:25,070 --> 00:32:32,899
archery comment into this perl function

553
00:32:28,059 --> 00:32:35,500
and of course we can we can control

554
00:32:32,900 --> 00:32:38,230
options from the troubleshooting patch

555
00:32:35,500 --> 00:32:42,760
so it's that simple

556
00:32:38,230 --> 00:32:45,830
no I don't think so in order to avoid

557
00:32:42,760 --> 00:32:48,110
potential vulnerabilities first cure a

558
00:32:45,830 --> 00:32:52,370
tried a lot of hardening and their

559
00:32:48,110 --> 00:32:55,850
products such as the sensor in the grade

560
00:32:52,370 --> 00:32:59,449
teacher and the read-only first sinston

561
00:32:55,850 --> 00:33:03,309
to protect to protect one doctoral in

562
00:32:59,450 --> 00:33:07,100
chrome tab or web load the most

563
00:33:03,309 --> 00:33:10,490
effective hardening is the DSS merger

564
00:33:07,100 --> 00:33:16,158
it's like the safe guard to protect pro

565
00:33:10,490 --> 00:33:19,909
from dangerous operations the BSF is a

566
00:33:16,159 --> 00:33:23,360
third major the BSF is a perl module

567
00:33:19,909 --> 00:33:27,020
which is written in c++ the major

568
00:33:23,360 --> 00:33:29,809
increment is uncomment pastor and hooks

569
00:33:27,020 --> 00:33:34,970
several dangerous functions such as the

570
00:33:29,809 --> 00:33:38,210
sinston open and back ste it also dis

571
00:33:34,970 --> 00:33:41,240
the low numbers bad characters every

572
00:33:38,210 --> 00:33:45,110
increment lowliness i'll redirections

573
00:33:41,240 --> 00:33:50,419
imperial so due to the hardening we

574
00:33:45,110 --> 00:33:53,120
cannot perform any command injection we

575
00:33:50,419 --> 00:33:54,169
try several ways to bypass the hardening

576
00:33:53,120 --> 00:33:56,389
of

577
00:33:54,169 --> 00:33:57,909
the first color of the my mind is the

578
00:33:56,389 --> 00:34:01,549
argument injection

579
00:33:57,909 --> 00:34:05,179
however the TCP dump Imperials curious

580
00:34:01,549 --> 00:34:08,480
to all so we felt because it didn't

581
00:34:05,179 --> 00:34:13,069
support several juicy features such as

582
00:34:08,480 --> 00:34:16,460
the post no Ted comment higher exam in

583
00:34:13,069 --> 00:34:20,629
the system we fight pearls cures though

584
00:34:16,460 --> 00:34:24,139
the temperate cash in a directory we try

585
00:34:20,629 --> 00:34:26,598
to write into this directory but we can

586
00:34:24,139 --> 00:34:30,619
use them out because it's already

587
00:34:26,599 --> 00:34:34,089
directed to neuro device how we can do

588
00:34:30,619 --> 00:34:38,060
is only abusing the set fire argument

589
00:34:34,089 --> 00:34:41,960
but if since there is no way to generate

590
00:34:38,060 --> 00:34:47,480
a polyglot file in both Pro and pre cap

591
00:34:41,960 --> 00:34:51,319
format so it's time to take deeper we

592
00:34:47,480 --> 00:34:54,770
type into the TSS implementation to see

593
00:34:51,319 --> 00:34:58,369
is there anything we can leverage we

594
00:34:54,770 --> 00:35:01,250
fight a flaw in the comment parcel when

595
00:34:58,369 --> 00:35:03,890
there's an incomplete i'll redirection

596
00:35:01,250 --> 00:35:08,450
the rest of the i/o part will be

597
00:35:03,890 --> 00:35:11,270
truncated however also we can recount

598
00:35:08,450 --> 00:35:14,810
roll the standard out we still can't

599
00:35:11,270 --> 00:35:20,170
fight any way to generate the valid

600
00:35:14,810 --> 00:35:25,339
pearl so last thing out of the box

601
00:35:20,170 --> 00:35:30,800
standard out is uncontrollable but could

602
00:35:25,339 --> 00:35:33,619
we write a squid by standard error when

603
00:35:30,800 --> 00:35:37,400
you Falls the TCP dump to open another

604
00:35:33,619 --> 00:35:41,390
existing non-existence file it will show

605
00:35:37,400 --> 00:35:45,010
that error no such file or directory

606
00:35:41,390 --> 00:35:49,098
well the arrow is since we can partially

607
00:35:45,010 --> 00:35:52,160
control the message we try to pipe the

608
00:35:49,099 --> 00:35:57,290
standard error - perl but we still get

609
00:35:52,160 --> 00:36:00,140
nothing however when we when we try to

610
00:35:57,290 --> 00:36:03,890
use another file names such as the print

611
00:36:00,140 --> 00:36:05,569
industry with the hashtag we try to type

612
00:36:03,890 --> 00:36:09,259
the standard error in the

613
00:36:05,570 --> 00:36:13,600
again and the magic happens the pearl

614
00:36:09,260 --> 00:36:14,780
print of the one two three we saw arrows

615
00:36:13,600 --> 00:36:18,200
okay

616
00:36:14,780 --> 00:36:21,830
the pearl 101 pearls supposed to go to

617
00:36:18,200 --> 00:36:25,790
label so the PC Rita with the Koren

618
00:36:21,830 --> 00:36:28,520
because a label in pearl and we use the

619
00:36:25,790 --> 00:36:32,180
hashtag to comment the rest of the part

620
00:36:28,520 --> 00:36:38,120
so the standard error because a valid

621
00:36:32,180 --> 00:36:41,930
pronoun so this is our final export we

622
00:36:38,120 --> 00:36:44,990
were experiencing on one by one the

623
00:36:41,930 --> 00:36:48,410
first is the first is to make the TCP

624
00:36:44,990 --> 00:36:50,839
tab open an existing file the file name

625
00:36:48,410 --> 00:36:55,940
will be part of the error message in

626
00:36:50,840 --> 00:36:58,040
standard error and then with redirect

627
00:36:55,940 --> 00:37:01,300
the standard error into the cache

628
00:36:58,040 --> 00:37:04,040
directory here in then of file Earth

629
00:37:01,300 --> 00:37:08,570
setcookie that he actually an error that

630
00:37:04,040 --> 00:37:11,840
it is see the last is the incomplete

631
00:37:08,570 --> 00:37:14,720
I'll symbol this symbol is this symbol

632
00:37:11,840 --> 00:37:18,710
appeals the common pasture to ignore the

633
00:37:14,720 --> 00:37:21,560
rest of the i/o redirection so West our

634
00:37:18,710 --> 00:37:25,100
standard error has been written into the

635
00:37:21,560 --> 00:37:27,290
cache directory we can just fetch the

636
00:37:25,100 --> 00:37:30,380
corresponding cache to ask you to our

637
00:37:27,290 --> 00:37:33,440
command by chaining these two

638
00:37:30,380 --> 00:37:36,850
vulnerabilities we can get a reliable

639
00:37:33,440 --> 00:37:36,850
pre also remote code execution

640
00:37:37,180 --> 00:37:43,339
we have report all of our fighting to

641
00:37:40,730 --> 00:37:46,700
procure pieces sir and this is the

642
00:37:43,340 --> 00:37:49,640
response from them the fix Oded Box

643
00:37:46,700 --> 00:37:52,310
wasting amounts the reaction is very

644
00:37:49,640 --> 00:37:55,370
crude and professional it's a creative

645
00:37:52,310 --> 00:38:02,090
work with pearls and they are such a

646
00:37:55,370 --> 00:38:04,339
really responsible vendor after procure

647
00:38:02,090 --> 00:38:06,950
release all the patches we kept

648
00:38:04,340 --> 00:38:10,400
monitoring the internet to see the large

649
00:38:06,950 --> 00:38:11,210
operations response time Twitter is one

650
00:38:10,400 --> 00:38:12,950
of them

651
00:38:11,210 --> 00:38:17,150
they are known for their bug bounty

652
00:38:12,950 --> 00:38:19,580
program and nice to hackers however is

653
00:38:17,150 --> 00:38:23,300
not good to explore your one

654
00:38:19,580 --> 00:38:24,980
right after the patch relist so we went

655
00:38:23,300 --> 00:38:30,350
30 tests for tritter

656
00:38:24,980 --> 00:38:30,770
to upgrade the sslvpn this is the

657
00:38:30,350 --> 00:38:37,100
tweeter

658
00:38:30,770 --> 00:38:39,470
sslvpn is just a simple login page from

659
00:38:37,100 --> 00:38:42,799
the reconnaissance we know the last time

660
00:38:39,470 --> 00:38:47,689
Twitter upgrade is in last December so

661
00:38:42,800 --> 00:38:50,750
Twitter is likely vulnerable we have the

662
00:38:47,690 --> 00:38:55,100
verified a bug and got a bunch of user

663
00:38:50,750 --> 00:38:58,280
credentials in print text however we

664
00:38:55,100 --> 00:39:03,140
encounter some problems while trying to

665
00:38:58,280 --> 00:39:06,940
pop a share on Twitter yes the first

666
00:39:03,140 --> 00:39:06,940
problem is the two-factor authentication

667
00:39:07,090 --> 00:39:13,790
due to the two factor authentication

668
00:39:10,120 --> 00:39:17,359
also we can get a Pentax password we

669
00:39:13,790 --> 00:39:19,820
still can't do anything so the first

670
00:39:17,360 --> 00:39:24,620
thing we need is to find a way to bypass

671
00:39:19,820 --> 00:39:27,620
that we observed Twitter in a model

672
00:39:24,620 --> 00:39:31,970
immunization lomi session is a feature

673
00:39:27,620 --> 00:39:35,470
to enhance the mobility it's it allows a

674
00:39:31,970 --> 00:39:39,109
session from multiple like IP locations

675
00:39:35,470 --> 00:39:42,439
so once we know that we download the

676
00:39:39,110 --> 00:39:46,750
database and fudge the session to bypass

677
00:39:42,440 --> 00:39:51,730
toaster two-factor authentication and

678
00:39:46,750 --> 00:39:55,310
finally finally we log into their system

679
00:39:51,730 --> 00:39:58,610
the next forum is the SS control in

680
00:39:55,310 --> 00:40:01,840
management in the fest as we mentioned

681
00:39:58,610 --> 00:40:05,690
before we have a command injection here

682
00:40:01,840 --> 00:40:08,660
however for security consideration most

683
00:40:05,690 --> 00:40:12,320
of the company disabled in the fest and

684
00:40:08,660 --> 00:40:17,029
public so we need to find another way to

685
00:40:12,320 --> 00:40:19,820
answer staying the fest we leverage the

686
00:40:17,030 --> 00:40:24,680
web Vivien feature again to telnet to

687
00:40:19,820 --> 00:40:27,830
itself it's just like the SS RF we use

688
00:40:24,680 --> 00:40:30,480
this video to bypass the SSF protection

689
00:40:27,830 --> 00:40:37,859
and assess the management in

690
00:40:30,480 --> 00:40:41,119
fess finally we got there however the

691
00:40:37,859 --> 00:40:44,960
last problem is that we don't find any

692
00:40:41,119 --> 00:40:48,330
managers print hacks password in cache

693
00:40:44,960 --> 00:40:51,540
practically most of the manager only log

694
00:40:48,330 --> 00:40:53,970
into their system at the first time the

695
00:40:51,540 --> 00:40:56,720
only thing we need although the only

696
00:40:53,970 --> 00:41:00,629
thing we have is the password hash

697
00:40:56,720 --> 00:41:06,839
inserted and if I trip and shuttle 56

698
00:41:00,630 --> 00:41:09,590
format so we launcher 70 coral AWS to

699
00:41:06,840 --> 00:41:09,590
crack the hash

700
00:41:09,920 --> 00:41:16,360
[Music]

701
00:41:11,890 --> 00:41:18,549
see hours later yeah we crack the hash

702
00:41:16,360 --> 00:41:21,730
and successfully log into their

703
00:41:18,550 --> 00:41:24,430
management in the fest we are lucky

704
00:41:21,730 --> 00:41:27,340
because the less of the less of the

705
00:41:24,430 --> 00:41:30,970
passwords is only ten and the first

706
00:41:27,340 --> 00:41:35,590
character is kept Toby it's a very early

707
00:41:30,970 --> 00:41:37,959
stage of our cracking Q so we exploit

708
00:41:35,590 --> 00:41:41,650
our karma injection and try to run the

709
00:41:37,960 --> 00:41:46,360
comment I have come fake and yes we got

710
00:41:41,650 --> 00:41:49,930
a shell we're proud of our fighting to

711
00:41:46,360 --> 00:41:53,830
their bug bounty program and got a

712
00:41:49,930 --> 00:41:56,710
highest bounty from Twitter also we

713
00:41:53,830 --> 00:42:01,080
cannot prove that it since this is the

714
00:41:56,710 --> 00:42:01,080
first remote code execution on Twitter

715
00:42:01,590 --> 00:42:07,060
okay

716
00:42:03,010 --> 00:42:09,550
the last is the bonus for you our colony

717
00:42:07,060 --> 00:42:13,509
deathcore provides the most professional

718
00:42:09,550 --> 00:42:18,300
rating service in Asia so let's talk

719
00:42:13,510 --> 00:42:21,850
about how to make the rating more read

720
00:42:18,300 --> 00:42:25,420
in a rating operation the personal

721
00:42:21,850 --> 00:42:28,630
computer is more valuable so in order to

722
00:42:25,420 --> 00:42:32,440
tag culture of all the class we need to

723
00:42:28,630 --> 00:42:35,770
weaponize the sslvpn there are several

724
00:42:32,440 --> 00:42:38,710
old-school maesters before such as the

725
00:42:35,770 --> 00:42:43,509
waterhole attack and repress the VPN

726
00:42:38,710 --> 00:42:47,740
installer but here we propose a new

727
00:42:43,510 --> 00:42:51,310
master is the local sweep local scrip is

728
00:42:47,740 --> 00:42:55,029
a feature in almost every sslvpn

729
00:42:51,310 --> 00:42:58,330
it can ask a skewed corresponding scrip

730
00:42:55,030 --> 00:43:03,220
to mount a network file system or change

731
00:42:58,330 --> 00:43:05,920
the loading table so here we will show

732
00:43:03,220 --> 00:43:14,490
you how we compromise all the VPN

733
00:43:05,920 --> 00:43:17,860
clients okay this is our demonstration

734
00:43:14,490 --> 00:43:18,609
as you can see in the extranet one

735
00:43:17,860 --> 00:43:24,120
argument

736
00:43:18,610 --> 00:43:24,120
so we append our target right after that

737
00:43:25,119 --> 00:43:35,359
it's a real target here we gotta Uslan

738
00:43:32,330 --> 00:43:38,359
and hash of a de me also we could not

739
00:43:35,359 --> 00:43:42,319
find a Pentax password we can still

740
00:43:38,359 --> 00:43:52,940
change our cookie to the session ID of a

741
00:43:42,320 --> 00:43:58,660
de me so we change our cookie to the

742
00:43:52,940 --> 00:44:01,700
session idea of a demeans so once our

743
00:43:58,660 --> 00:44:09,680
modification is done we can assess the

744
00:44:01,700 --> 00:44:15,919
management in the fest and we have to

745
00:44:09,680 --> 00:44:21,710
become the enemy Wow so here we leverage

746
00:44:15,920 --> 00:44:26,450
the feature on the user laws and VPN

747
00:44:21,710 --> 00:44:28,820
gallery we fight a local script section

748
00:44:26,450 --> 00:44:32,629
here you can see the local script

749
00:44:28,820 --> 00:44:39,200
suppose not only Windows but also Lina's

750
00:44:32,630 --> 00:44:47,180
and Mac OS we we use the calculator as

751
00:44:39,200 --> 00:44:51,230
our backdoor and once our modification

752
00:44:47,180 --> 00:45:01,040
is done we change the lab laptop to our

753
00:44:51,230 --> 00:45:05,690
victim yeah it's cute the victor lunch

754
00:45:01,040 --> 00:45:08,990
the pearls cured agent and try to

755
00:45:05,690 --> 00:45:11,859
connect to the ssl VPN with his username

756
00:45:08,990 --> 00:45:11,859
and password

757
00:45:12,010 --> 00:45:21,109
so once the connection has been

758
00:45:17,060 --> 00:45:23,500
established the calculator will pop out

759
00:45:21,109 --> 00:45:23,500
of metal

760
00:45:37,380 --> 00:45:45,650
yeah yeah okay

761
00:45:42,380 --> 00:45:48,539
okay here we'll finish all of our slides

762
00:45:45,650 --> 00:45:51,269
but how do you make how do you mitigate

763
00:45:48,539 --> 00:45:54,299
such attacks here it is several

764
00:45:51,269 --> 00:45:56,640
recommendations the first is the class

765
00:45:54,299 --> 00:45:59,190
science certificate we saw the

766
00:45:56,640 --> 00:46:01,859
certificate the malicious connection

767
00:45:59,190 --> 00:46:05,220
will be job during SSL negotiation and

768
00:46:01,859 --> 00:46:08,249
the next is to enable multi-factor

769
00:46:05,220 --> 00:46:11,609
authentication it can decrease numerous

770
00:46:08,249 --> 00:46:15,149
attack surface and the last remember to

771
00:46:11,609 --> 00:46:18,058
enable floor lock audit to n subscribe

772
00:46:15,150 --> 00:46:21,869
the vendors advisory to keep your system

773
00:46:18,059 --> 00:46:24,089
updated this is the end of our

774
00:46:21,869 --> 00:46:26,839
presentations thank you for being here

775
00:46:24,089 --> 00:46:26,839
thanks

776
00:46:35,570 --> 00:46:42,380
thank you guys so if there is any

777
00:46:39,380 --> 00:46:44,660
question we have two or three question

778
00:46:42,380 --> 00:46:47,690
we can ask to Orange

779
00:46:44,660 --> 00:46:55,670
I'm very one close Maori okay race

780
00:46:47,690 --> 00:46:57,740
character on stage smoke hi hi I would

781
00:46:55,670 --> 00:47:00,800
like to ask you how much time did

782
00:46:57,740 --> 00:47:04,759
invested on this project and if it was

783
00:47:00,800 --> 00:47:08,120
like a full-time or part-time okay and

784
00:47:04,760 --> 00:47:10,520
also which mitigations were in place on

785
00:47:08,120 --> 00:47:19,190
the system between appliances acid

786
00:47:10,520 --> 00:47:22,580
I mean binary protections we spend a lot

787
00:47:19,190 --> 00:47:26,840
about the half half half year to do this

788
00:47:22,580 --> 00:47:32,029
research it's for maybe less less this

789
00:47:26,840 --> 00:47:36,740
last September through the this much

790
00:47:32,030 --> 00:47:41,180
yeah about six months yeah we and yes

791
00:47:36,740 --> 00:47:50,410
for time okay but only only two

792
00:47:41,180 --> 00:47:54,069
[Applause]

793
00:47:50,410 --> 00:48:04,149
in the first one or two months

794
00:47:54,070 --> 00:48:08,710
only because I'm busy I need to fly over

795
00:48:04,150 --> 00:48:09,640
the world yeah and finally medication I

796
00:48:08,710 --> 00:48:14,260
can I stink

797
00:48:09,640 --> 00:48:19,450
you can insert that the firing giving a

798
00:48:14,260 --> 00:48:22,810
binary medication for the gate yeah

799
00:48:19,450 --> 00:48:27,250
there is an ex it's a general protection

800
00:48:22,810 --> 00:48:30,970
like an ex and SOR mmm no partial

801
00:48:27,250 --> 00:48:34,090
partial role and I think that's it it's

802
00:48:30,970 --> 00:48:37,149
a very common medication yeah and the

803
00:48:34,090 --> 00:48:40,480
prosecutor use a very old medication

804
00:48:37,150 --> 00:48:44,380
called Lipsett it's a very old library

805
00:48:40,480 --> 00:48:47,140
to protect us at the past such as the

806
00:48:44,380 --> 00:48:52,320
main copy or the spec overflow yeah

807
00:48:47,140 --> 00:49:00,580
place very old yeah so easy and yeah

808
00:48:52,320 --> 00:49:03,630
okay another question no one okay just

809
00:49:00,580 --> 00:49:03,630
for Christopher okay

810
00:49:16,930 --> 00:49:23,558
I'm just curious after the question of

811
00:49:20,319 --> 00:49:26,259
Maori about the type of mitigation and

812
00:49:23,559 --> 00:49:28,509
these libraries that were preloaded in

813
00:49:26,259 --> 00:49:30,910
the boundary right why not

814
00:49:28,509 --> 00:49:33,640
for example second or other type of

815
00:49:30,910 --> 00:49:37,299
mitigation at the system level

816
00:49:33,640 --> 00:49:38,049
what what were the purpose of this

817
00:49:37,299 --> 00:49:42,579
library

818
00:49:38,049 --> 00:49:47,740
just for curiosity like they are the

819
00:49:42,579 --> 00:49:51,099
randomization layup or something yeah

820
00:49:47,740 --> 00:49:54,999
because you mean stick stick is a very

821
00:49:51,099 --> 00:49:59,950
very good way to protect such attacks

822
00:49:54,999 --> 00:50:02,640
but in a real real product is also there

823
00:49:59,950 --> 00:50:07,240
are lots of features you cannot use a

824
00:50:02,640 --> 00:50:10,200
universal yeah it will be to to

825
00:50:07,240 --> 00:50:13,240
restricted you have users account yeah

826
00:50:10,200 --> 00:50:19,629
you have many features to do it yeah

827
00:50:13,240 --> 00:50:21,808
we'll talk all of this yeah is that your

828
00:50:19,630 --> 00:50:21,809
question

829
00:50:26,100 --> 00:50:30,299
we have time for one more question

830
00:50:30,810 --> 00:50:39,420
scared monsters okay that's okay mister

831
00:50:34,930 --> 00:50:39,419
thank our native speakers

832
00:50:39,980 --> 00:50:45,300
[Applause]

