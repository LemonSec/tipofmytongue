1
00:00:09,960 --> 00:00:16,240
prossimo dolkha parley amo sebastian

2
00:00:13,330 --> 00:00:17,950
Sheila Sarah I mean windows Rivia IJ

3
00:00:16,239 --> 00:00:20,348
Ginga maintaining access to Windows

4
00:00:17,950 --> 00:00:23,669
machine a Badshah da privilege

5
00:00:20,349 --> 00:00:25,840
escalation adesso distance

6
00:00:23,669 --> 00:00:29,110
universes which receive I remain tied

7
00:00:25,840 --> 00:00:31,320
unit taco Sebastian a present LJ wasted

8
00:00:29,110 --> 00:00:34,239
all our black hat merchants old

9
00:00:31,320 --> 00:00:37,719
interesante seguramente Anna technique a

10
00:00:34,239 --> 00:00:40,180
gas cover to Louie a K per favore a

11
00:00:37,719 --> 00:00:42,820
silencer Grazia Technica's cover - Louie

12
00:00:40,180 --> 00:00:44,769
a came more - very gallows a consent a

13
00:00:42,820 --> 00:00:55,480
comedy delivery Bertie stanza pass

14
00:00:44,770 --> 00:00:57,610
Oliver Alice Sebastian today I'll be

15
00:00:55,480 --> 00:01:00,220
sharing with you a research I have made

16
00:00:57,610 --> 00:01:02,680
on windows persistence as Giovanni said

17
00:01:00,220 --> 00:01:06,700
I have presented this also in black hat

18
00:01:02,680 --> 00:01:08,350
this year I have named it it already

19
00:01:06,700 --> 00:01:10,840
hijacking maintaining access from

20
00:01:08,350 --> 00:01:14,259
windows machines I would like to thank

21
00:01:10,840 --> 00:01:18,429
to Giovanni and all of the staff from

22
00:01:14,259 --> 00:01:23,079
Rome hat for letting me share with you

23
00:01:18,429 --> 00:01:27,789
this research so this is about me

24
00:01:23,079 --> 00:01:30,458
this is also my Twitter rotor I am an

25
00:01:27,789 --> 00:01:32,530
info security nerd light exploit

26
00:01:30,459 --> 00:01:37,030
development and I am a window security

27
00:01:32,530 --> 00:01:40,420
emphasis I am NOT an expert and I am the

28
00:01:37,030 --> 00:01:43,149
current technical research lead as ESL

29
00:01:40,420 --> 00:01:45,340
labs which is a Colombian company that

30
00:01:43,149 --> 00:01:48,639
works mainly on providing pen testing

31
00:01:45,340 --> 00:01:52,709
services may lead to financial companies

32
00:01:48,639 --> 00:01:56,889
I have been working on the field since

33
00:01:52,709 --> 00:02:03,609
2003 and I got interested and the window

34
00:01:56,889 --> 00:02:06,249
security since I I have started so this

35
00:02:03,609 --> 00:02:08,919
will be the agenda of this talk first of

36
00:02:06,249 --> 00:02:13,540
all I will expose the attack what is

37
00:02:08,919 --> 00:02:16,809
properly they are ID hijacking and how a

38
00:02:13,540 --> 00:02:18,679
quick overview of how it looks how does

39
00:02:16,810 --> 00:02:23,989
it look like

40
00:02:18,680 --> 00:02:26,360
when it's executed right after to

41
00:02:23,989 --> 00:02:28,209
properly understand the attack I will

42
00:02:26,360 --> 00:02:32,840
explain shortly the Windows security

43
00:02:28,209 --> 00:02:36,290
architecture and the security tasks

44
00:02:32,840 --> 00:02:39,550
related to the hook here in current

45
00:02:36,290 --> 00:02:42,950
hijacking they are ID I will point out

46
00:02:39,550 --> 00:02:46,690
where exactly the security issues are

47
00:02:42,950 --> 00:02:49,429
found that make this attack possible and

48
00:02:46,690 --> 00:02:52,359
to demonstrate the effectiveness of this

49
00:02:49,430 --> 00:02:55,430
attack I will do a live demonstration

50
00:02:52,360 --> 00:02:59,329
with a Windows 10 virtual machine I have

51
00:02:55,430 --> 00:03:01,730
updated last night and will test the

52
00:02:59,329 --> 00:03:04,280
already hijacking attacked with a model

53
00:03:01,730 --> 00:03:07,488
of Metasploit I have developed to

54
00:03:04,280 --> 00:03:10,670
automatically after that some final

55
00:03:07,489 --> 00:03:13,220
conclusions of course I'll be glad to

56
00:03:10,670 --> 00:03:16,640
answer all your questions at the end of

57
00:03:13,220 --> 00:03:20,569
the talk so let's meet up there already

58
00:03:16,640 --> 00:03:23,388
hijacking attack what is the Arabic

59
00:03:20,569 --> 00:03:25,970
hijacking attack it is a new post

60
00:03:23,389 --> 00:03:30,139
exploitation vector which is reliable on

61
00:03:25,970 --> 00:03:33,079
all OS windows OS version since NT I

62
00:03:30,139 --> 00:03:37,190
have tested it from Windows XP to

63
00:03:33,079 --> 00:03:42,019
Windows 10 and Windows Server 2003 to

64
00:03:37,190 --> 00:03:44,239
2012 haven't tested it on Windows 95 it

65
00:03:42,019 --> 00:03:49,130
you can test it and it even works let me

66
00:03:44,239 --> 00:03:52,850
know please it will create and stealthy

67
00:03:49,130 --> 00:03:56,299
access on the target all by using always

68
00:03:52,850 --> 00:03:59,209
resources which means that no noisy

69
00:03:56,299 --> 00:04:03,340
extra files are needed that could

70
00:03:59,209 --> 00:04:03,340
trigger any alert from the victim

71
00:04:03,370 --> 00:04:09,889
properly this attack takes advantage of

72
00:04:06,200 --> 00:04:13,429
some integrity issues I have found when

73
00:04:09,889 --> 00:04:16,190
the security and it is reliable on two

74
00:04:13,430 --> 00:04:18,200
main member workstations and server not

75
00:04:16,190 --> 00:04:20,810
currently on domain controllers I am

76
00:04:18,200 --> 00:04:25,030
working on a similar attack which is

77
00:04:20,810 --> 00:04:25,030
reliable on domain controllers

78
00:04:27,039 --> 00:04:35,120
so assured this attack will hijack or

79
00:04:32,030 --> 00:04:37,789
assign the relative identifier of an

80
00:04:35,120 --> 00:04:41,120
existing account and we'll set it up to

81
00:04:37,789 --> 00:04:43,580
another one just a our ID

82
00:04:41,120 --> 00:04:46,039
meaning that all the other account

83
00:04:43,580 --> 00:04:48,198
properties such as the username such as

84
00:04:46,039 --> 00:04:51,498
the password hash the account status

85
00:04:48,199 --> 00:04:59,150
will remain the same before and after

86
00:04:51,499 --> 00:05:02,840
the attack by hijacking the our ID also

87
00:04:59,150 --> 00:05:04,849
the privileges are spoofed but once your

88
00:05:02,840 --> 00:05:06,859
interesting interesting thing sorry is

89
00:05:04,849 --> 00:05:10,580
that no matter the hijacked account

90
00:05:06,860 --> 00:05:14,900
status active or now the hijacker

91
00:05:10,580 --> 00:05:19,060
account will be capable of retrieved the

92
00:05:14,900 --> 00:05:23,448
privileges of this booked account as on

93
00:05:19,060 --> 00:05:26,509
so remembering that the only only the r

94
00:05:23,449 --> 00:05:29,779
ID attribute is Moloch fired an attacker

95
00:05:26,509 --> 00:05:30,229
could log on with a specific credential

96
00:05:29,779 --> 00:05:33,680
ski-out

97
00:05:30,229 --> 00:05:36,949
and we'll grab the privileges of the

98
00:05:33,680 --> 00:05:39,889
another account and almost

99
00:05:36,949 --> 00:05:42,710
configurations i have seemingly owned on

100
00:05:39,889 --> 00:05:45,349
domain members under my enjoying my

101
00:05:42,710 --> 00:05:48,169
chain sorry a remote access is permitted

102
00:05:45,349 --> 00:05:52,719
so you can access by by using this

103
00:05:48,169 --> 00:05:55,639
attack by using Remote Desktop PSX a

104
00:05:52,719 --> 00:05:59,569
would be possible to authenticate with

105
00:05:55,639 --> 00:06:02,449
the ant potentials by you remotely in

106
00:05:59,569 --> 00:06:04,250
most computer ages and after a

107
00:06:02,449 --> 00:06:06,020
successful are gonna do the victim with

108
00:06:04,250 --> 00:06:08,930
these credentials

109
00:06:06,020 --> 00:06:11,930
the system will register any operation

110
00:06:08,930 --> 00:06:16,219
which has which has taken place during

111
00:06:11,930 --> 00:06:21,439
the hijacker session and will raise

112
00:06:16,219 --> 00:06:26,029
there as done by this poofed account so

113
00:06:21,439 --> 00:06:32,810
this is how how it looks like so in this

114
00:06:26,029 --> 00:06:35,060
image we are authenticated let me see we

115
00:06:32,810 --> 00:06:38,389
can say that we are authenticated as the

116
00:06:35,060 --> 00:06:39,620
guest user if we query our privileges by

117
00:06:38,389 --> 00:06:42,020
using the net user to

118
00:06:39,620 --> 00:06:46,250
we can see that we are only members of

119
00:06:42,020 --> 00:06:48,770
the local group guests but we are

120
00:06:46,250 --> 00:06:51,740
capable of riding unprotected folders in

121
00:06:48,770 --> 00:07:00,560
this case we were riding on system32

122
00:06:51,740 --> 00:07:02,450
folder which is cool so to understand

123
00:07:00,560 --> 00:07:04,670
the magic behind this I will briefly

124
00:07:02,450 --> 00:07:08,599
explain how the logon process work I

125
00:07:04,670 --> 00:07:15,640
forgot to say something about me and is

126
00:07:08,600 --> 00:07:15,640
that I am terrible at paint okay so I

127
00:07:16,210 --> 00:07:22,750
told you interval well I think that the

128
00:07:21,320 --> 00:07:25,820
windows authentication and authorization

129
00:07:22,750 --> 00:07:28,130
architecture is similar to the security

130
00:07:25,820 --> 00:07:31,159
concept of some buildings have been on

131
00:07:28,130 --> 00:07:33,860
so do you introduce yourself in front of

132
00:07:31,160 --> 00:07:35,780
the person in charge the person in

133
00:07:33,860 --> 00:07:38,870
charge profiles if you are registered

134
00:07:35,780 --> 00:07:42,320
and if you are then he provides you an

135
00:07:38,870 --> 00:07:43,910
access card which permits you to get

136
00:07:42,320 --> 00:07:45,380
into the zone you are allowed to this is

137
00:07:43,910 --> 00:07:47,860
the access token that Andrea have

138
00:07:45,380 --> 00:07:51,020
mentioned in the last talk

139
00:07:47,860 --> 00:07:52,340
so for understanding your purposes this

140
00:07:51,020 --> 00:07:55,460
will be your character so this will be

141
00:07:52,340 --> 00:07:57,700
the administrator account this will be

142
00:07:55,460 --> 00:08:00,049
our main character which will be an

143
00:07:57,700 --> 00:08:02,620
unprivileged account on privileged

144
00:08:00,050 --> 00:08:05,150
account in this case is the guest one

145
00:08:02,620 --> 00:08:09,080
the blood but with that I will represent

146
00:08:05,150 --> 00:08:12,169
the window security and this oculi

147
00:08:09,080 --> 00:08:14,990
building the windows operative system we

148
00:08:12,170 --> 00:08:17,540
are attacking so inside this building

149
00:08:14,990 --> 00:08:21,320
imagine that there is an RFID light

150
00:08:17,540 --> 00:08:23,300
control system managed also by this blue

151
00:08:21,320 --> 00:08:27,590
bag so to keep it simple I have drawn

152
00:08:23,300 --> 00:08:31,070
three floors to represent the privileges

153
00:08:27,590 --> 00:08:32,659
an account can get as we have seen there

154
00:08:31,070 --> 00:08:36,710
are a lot of privileges but it's hard to

155
00:08:32,659 --> 00:08:39,819
draw them all so the pension sir

156
00:08:36,710 --> 00:08:42,890
depending on configuration gives users

157
00:08:39,820 --> 00:08:45,890
access or only can access to the first

158
00:08:42,890 --> 00:08:47,540
door a standard account will acquire the

159
00:08:45,890 --> 00:08:49,550
privileges of the first floor and the

160
00:08:47,540 --> 00:08:52,769
second floor an administrator one will

161
00:08:49,550 --> 00:08:58,319
get all everywhere inside the building

162
00:08:52,769 --> 00:09:00,329
a more technical way when an act when an

163
00:08:58,319 --> 00:09:02,910
interactive logon takes place on a

164
00:09:00,329 --> 00:09:05,399
Windows machine many objects of the

165
00:09:02,910 --> 00:09:08,429
system get involved but the most

166
00:09:05,399 --> 00:09:15,869
noticeable are window go on the LSA SS

167
00:09:08,429 --> 00:09:19,290
which is all of this security hive the

168
00:09:15,869 --> 00:09:23,369
some pipe and in this case which is

169
00:09:19,290 --> 00:09:31,199
related to domain controllers the ad DB

170
00:09:23,369 --> 00:09:33,269
which is sorting the NTDs a however they

171
00:09:31,199 --> 00:09:37,378
already hijacking attacks focused on

172
00:09:33,269 --> 00:09:40,499
local user login attempts so we will

173
00:09:37,379 --> 00:09:42,299
ignore by now the KDC and all the

174
00:09:40,499 --> 00:09:45,660
authentication packages related to

175
00:09:42,299 --> 00:09:50,869
Kerberos and will be focused on the LSA

176
00:09:45,660 --> 00:09:50,868
server the MSB one dll and some server

177
00:09:55,970 --> 00:10:02,939
okay in a nutshell the logon task is

178
00:10:00,149 --> 00:10:07,949
this I know that many of you have seen

179
00:10:02,939 --> 00:10:12,170
this graphic before so we are here

180
00:10:07,949 --> 00:10:12,170
authenticating as administrator account

181
00:10:12,439 --> 00:10:16,649
but it is in the administrator and

182
00:10:14,579 --> 00:10:20,489
possible trying dream we authenticate by

183
00:10:16,649 --> 00:10:24,079
using log window burn and after that if

184
00:10:20,490 --> 00:10:28,519
you really have access to this machine

185
00:10:24,079 --> 00:10:31,469
the window on the LSA SS with a

186
00:10:28,519 --> 00:10:33,779
connection an lel pc connection with the

187
00:10:31,470 --> 00:10:37,829
security reference monitor will create

188
00:10:33,779 --> 00:10:42,480
an access token that will define the

189
00:10:37,829 --> 00:10:44,459
security context of the user session the

190
00:10:42,480 --> 00:10:46,679
security reference monitor is a kernel

191
00:10:44,459 --> 00:10:49,589
mode process which is in charge of

192
00:10:46,679 --> 00:10:52,199
creating that and also teach is in

193
00:10:49,589 --> 00:10:55,339
charge of checking the security context

194
00:10:52,199 --> 00:10:58,309
or I mean the access token with the file

195
00:10:55,339 --> 00:11:02,009
discretionary access control list to

196
00:10:58,309 --> 00:11:06,049
verify if an hour an user has permission

197
00:11:02,009 --> 00:11:06,049
to access or not to an object

198
00:11:06,600 --> 00:11:14,020
all of these is done by using security

199
00:11:10,570 --> 00:11:17,200
identifiers so this is the structure of

200
00:11:14,020 --> 00:11:22,439
every security identifier that is used

201
00:11:17,200 --> 00:11:25,780
to represent all the security principles

202
00:11:22,440 --> 00:11:28,860
and as on our Windows systems so the

203
00:11:25,780 --> 00:11:32,800
first part in yellow is the one which

204
00:11:28,860 --> 00:11:35,350
differentiates of the machine on our

205
00:11:32,800 --> 00:11:40,329
domain and among others but the last one

206
00:11:35,350 --> 00:11:44,230
this one is the relative identifier that

207
00:11:40,330 --> 00:11:45,850
can be the same across all machines for

208
00:11:44,230 --> 00:11:48,310
example in a very Windows machine you

209
00:11:45,850 --> 00:11:52,330
can find that the administrator building

210
00:11:48,310 --> 00:11:55,329
account will have the 500 or a relative

211
00:11:52,330 --> 00:12:00,460
identifier the gas tax will have the 501

212
00:11:55,330 --> 00:12:04,030
that's it so remember that every user

213
00:12:00,460 --> 00:12:09,880
account built-in or not has its own are

214
00:12:04,030 --> 00:12:12,939
ID so suppose that the administrator

215
00:12:09,880 --> 00:12:17,439
wants to look on here so he provides its

216
00:12:12,940 --> 00:12:21,640
username and password to win logon to do

217
00:12:17,440 --> 00:12:23,710
that Windows needs to initialize some

218
00:12:21,640 --> 00:12:26,740
tasks and connections between processes

219
00:12:23,710 --> 00:12:32,860
and right after window one will call log

220
00:12:26,740 --> 00:12:34,480
on UI to grab the credential provide the

221
00:12:32,860 --> 00:12:36,940
credentials by using credential

222
00:12:34,480 --> 00:12:41,200
providers that will define the way that

223
00:12:36,940 --> 00:12:44,140
windows will process the entered

224
00:12:41,200 --> 00:12:46,600
credentials after that with this

225
00:12:44,140 --> 00:12:52,210
information whenever we create an unique

226
00:12:46,600 --> 00:12:55,660
identifier to differentiate this logon

227
00:12:52,210 --> 00:12:59,080
attempt and win the gun will call let's

228
00:12:55,660 --> 00:13:02,350
say SS retrieve a handle for an

229
00:12:59,080 --> 00:13:04,000
authentication package but what is an

230
00:13:02,350 --> 00:13:07,660
authentication package as I have told

231
00:13:04,000 --> 00:13:10,210
you there are two that are more than the

232
00:13:07,660 --> 00:13:11,829
most common are the MSB one oh and a

233
00:13:10,210 --> 00:13:15,130
Kerberos one

234
00:13:11,830 --> 00:13:18,800
these are delos that verify the

235
00:13:15,130 --> 00:13:23,149
authentication policies such as

236
00:13:18,800 --> 00:13:27,679
machine users passwords verifying some

237
00:13:23,149 --> 00:13:29,239
account restrictions but for the

238
00:13:27,679 --> 00:13:36,259
original jacket attack we will be

239
00:13:29,239 --> 00:13:37,759
focused on the MSB one one so continue

240
00:13:36,259 --> 00:13:39,649
with the authentication process will

241
00:13:37,759 --> 00:13:44,179
know gone will send the authentication

242
00:13:39,649 --> 00:13:46,540
package come we wait the combination of

243
00:13:44,179 --> 00:13:52,509
user name and password and the recent

244
00:13:46,540 --> 00:13:58,969
created tea fire forties log and then

245
00:13:52,509 --> 00:14:02,360
this critical step the MSB will send the

246
00:13:58,970 --> 00:14:06,350
ether name password combination to the

247
00:14:02,360 --> 00:14:09,139
server DLL and right after the some

248
00:14:06,350 --> 00:14:11,089
third bird will query up the Sam

249
00:14:09,139 --> 00:14:13,309
registry hive and will retrieve some

250
00:14:11,089 --> 00:14:19,399
important information associated with

251
00:14:13,309 --> 00:14:20,839
this account and now to sum it up the

252
00:14:19,399 --> 00:14:23,839
MSB one will check the information

253
00:14:20,839 --> 00:14:26,449
retrieved if it is ok we'll it will

254
00:14:23,839 --> 00:14:30,670
generate an identifier which is called

255
00:14:26,449 --> 00:14:42,618
fluid and all these day will be used

256
00:14:30,670 --> 00:14:45,920
afterwards to create their token hello

257
00:14:42,619 --> 00:14:47,720
ok now that everything is the Windows

258
00:14:45,920 --> 00:14:51,049
security subsystem proceeds to

259
00:14:47,720 --> 00:14:53,809
transition process to create the access

260
00:14:51,049 --> 00:14:58,160
token will define the security context

261
00:14:53,809 --> 00:15:00,410
of this user the access token is used to

262
00:14:58,160 --> 00:15:05,059
define the security context of a process

263
00:15:00,410 --> 00:15:07,339
and also of user session this object as

264
00:15:05,059 --> 00:15:11,299
I've told you is created by tequila t

265
00:15:07,339 --> 00:15:16,069
reference monitor and to note is that

266
00:15:11,299 --> 00:15:20,419
every child process will inherit talking

267
00:15:16,069 --> 00:15:24,618
copy of decree one so meaning that every

268
00:15:20,419 --> 00:15:30,339
use every process in a user session will

269
00:15:24,619 --> 00:15:30,339
be active with the same access token

270
00:15:33,240 --> 00:15:41,380
well right after they first the initial

271
00:15:37,329 --> 00:15:43,989
access check on the LSA ss will receive

272
00:15:41,380 --> 00:15:46,930
delivered information from the SB as we

273
00:15:43,990 --> 00:15:52,029
won I will check it up it sounded a bit

274
00:15:46,930 --> 00:15:54,599
with the which is the securities we have

275
00:15:52,029 --> 00:15:57,279
to determine the users allowed access

276
00:15:54,600 --> 00:16:04,140
this check is done by using the security

277
00:15:57,279 --> 00:16:07,839
identifier that has been added here and

278
00:16:04,140 --> 00:16:09,910
right after the LSA SS will add all the

279
00:16:07,839 --> 00:16:13,269
privileges associated with these

280
00:16:09,910 --> 00:16:16,779
security identifiers that differentiates

281
00:16:13,269 --> 00:16:18,430
this user and finally it will create the

282
00:16:16,779 --> 00:16:21,760
primary active that will define the

283
00:16:18,430 --> 00:16:25,959
security context so in this case we can

284
00:16:21,760 --> 00:16:29,019
see that administrator has received his

285
00:16:25,959 --> 00:16:34,979
own access token and it will be allowed

286
00:16:29,019 --> 00:16:34,980
to move everywhere inside the system so

287
00:16:38,010 --> 00:16:45,819
now that we went through the standard

288
00:16:41,110 --> 00:16:47,949
user logon process let's take a look at

289
00:16:45,820 --> 00:16:50,790
the things we're interested on so we're

290
00:16:47,949 --> 00:16:54,130
in the process are something exploitable

291
00:16:50,790 --> 00:16:56,230
so here's a quick question oh is it

292
00:16:54,130 --> 00:16:59,880
right but this is after being

293
00:16:56,230 --> 00:17:05,500
successfully authenticated

294
00:16:59,880 --> 00:17:08,679
yes it's identified by 6 by this D which

295
00:17:05,500 --> 00:17:12,429
is unique in this host how does the

296
00:17:08,679 --> 00:17:18,220
system associate a user with his

297
00:17:12,429 --> 00:17:22,329
security ire using black magic so let's

298
00:17:18,220 --> 00:17:27,000
see that so remember this part of the

299
00:17:22,329 --> 00:17:30,389
process here is the exact moment that

300
00:17:27,000 --> 00:17:35,740
username is translated into his

301
00:17:30,390 --> 00:17:38,770
associated security identifier so right

302
00:17:35,740 --> 00:17:40,870
after this translation some important

303
00:17:38,770 --> 00:17:45,430
security information is retrieved from

304
00:17:40,870 --> 00:17:47,620
the sound so it's properly

305
00:17:45,430 --> 00:17:50,560
the user name associated with this

306
00:17:47,620 --> 00:17:55,510
security identifier and what security

307
00:17:50,560 --> 00:17:57,940
4-3-3 the Sam the Sam server is in

308
00:17:55,510 --> 00:18:02,350
charge of querying up these registry

309
00:17:57,940 --> 00:18:05,680
hive will translate from her name to

310
00:18:02,350 --> 00:18:09,120
password each step so he goes into the

311
00:18:05,680 --> 00:18:12,640
Sam database on this registry key and

312
00:18:09,120 --> 00:18:18,250
we'll select the specified user name we

313
00:18:12,640 --> 00:18:21,240
can see it here right after it will

314
00:18:18,250 --> 00:18:24,940
enter inside the key and each of these

315
00:18:21,240 --> 00:18:29,350
registry hives will contain rec binary

316
00:18:24,940 --> 00:18:31,960
instead of them that have an attribute

317
00:18:29,350 --> 00:18:34,540
called type and this attribute contains

318
00:18:31,960 --> 00:18:37,830
the an accessible version of the

319
00:18:34,540 --> 00:18:42,250
relative identifier of the user in this

320
00:18:37,830 --> 00:18:49,149
the relative identifier is 3 9 in

321
00:18:42,250 --> 00:18:52,660
decimal basis 1001 and now that the some

322
00:18:49,150 --> 00:18:56,620
server knows which are associated with

323
00:18:52,660 --> 00:19:01,590
this user curly query another registry

324
00:18:56,620 --> 00:19:04,300
hive which is this one and we'll choose

325
00:19:01,590 --> 00:19:06,639
the one whose name is the same relative

326
00:19:04,300 --> 00:19:10,810
identify restored reg binary we have

327
00:19:06,640 --> 00:19:13,210
seen before then drop all the

328
00:19:10,810 --> 00:19:18,090
information stored in there into the

329
00:19:13,210 --> 00:19:22,500
referenced key and it goes back to the

330
00:19:18,090 --> 00:19:27,159
authentication package MSB one oh and

331
00:19:22,500 --> 00:19:32,260
after under well so some questions may

332
00:19:27,160 --> 00:19:36,040
rise after understanding this process so

333
00:19:32,260 --> 00:19:43,750
why does the Sam does only store the if

334
00:19:36,040 --> 00:19:46,510
identifiers in every machine every user

335
00:19:43,750 --> 00:19:49,840
will have the same first part of the

336
00:19:46,510 --> 00:19:51,580
security identifier and the last one

337
00:19:49,840 --> 00:19:56,280
will be the one that will be changing

338
00:19:51,580 --> 00:19:59,699
inside that system so what information

339
00:19:56,280 --> 00:19:59,700
from tom

340
00:19:59,960 --> 00:20:07,620
they obtained from the registry will

341
00:20:03,990 --> 00:20:10,169
contain the password hash is entered

342
00:20:07,620 --> 00:20:13,258
with the system boot will contain the

343
00:20:10,169 --> 00:20:16,889
account stages active for now it will

344
00:20:13,259 --> 00:20:19,830
contain some addition account

345
00:20:16,889 --> 00:20:22,320
restriction but it will contain some

346
00:20:19,830 --> 00:20:25,620
tear extinguishes a copy of the user's

347
00:20:22,320 --> 00:20:30,899
relief identifier inside this binary

348
00:20:25,620 --> 00:20:33,408
so let's exemplify the attack so let's

349
00:20:30,899 --> 00:20:39,268
try to do the authentication process

350
00:20:33,409 --> 00:20:41,580
with this red girl and we'll meet some

351
00:20:39,269 --> 00:20:43,889
parts of the authentication process and

352
00:20:41,580 --> 00:20:48,600
we will be focused on their interesting

353
00:20:43,889 --> 00:20:51,019
one so immediately beginning related to

354
00:20:48,600 --> 00:20:53,189
the authentication and window GaN stuff

355
00:20:51,019 --> 00:20:55,980
let's assume that we log on has done

356
00:20:53,190 --> 00:20:59,070
everything well and sent the logon

357
00:20:55,980 --> 00:21:02,460
information to the MSB one and after

358
00:20:59,070 --> 00:21:04,678
that the package MSB one will send a

359
00:21:02,460 --> 00:21:09,019
combination of the username and the

360
00:21:04,679 --> 00:21:11,610
password to the Sam server

361
00:21:09,019 --> 00:21:13,620
now the Sam server will query the Sam

362
00:21:11,610 --> 00:21:17,269
database looking for the associated

363
00:21:13,620 --> 00:21:19,350
guest key then it will retrieve the

364
00:21:17,269 --> 00:21:23,820
accessible version of the relative

365
00:21:19,350 --> 00:21:26,668
identifier in this case it's one f5

366
00:21:23,820 --> 00:21:30,990
some server will query a grain based on

367
00:21:26,669 --> 00:21:34,830
this recently acquired information this

368
00:21:30,990 --> 00:21:37,799
specific registry have and the process

369
00:21:34,830 --> 00:21:39,779
will retrieve the security data related

370
00:21:37,799 --> 00:21:42,690
to the user including this our ID copy

371
00:21:39,779 --> 00:21:47,850
which is stored in these in one of these

372
00:21:42,690 --> 00:21:50,820
Bibles and after that Sam server will

373
00:21:47,850 --> 00:21:53,129
send this back there's this information

374
00:21:50,820 --> 00:21:56,189
back to the MSB one authentication

375
00:21:53,129 --> 00:21:59,009
package and these guys well does his job

376
00:21:56,190 --> 00:22:01,139
well Joseph will do his job so this

377
00:21:59,009 --> 00:22:04,409
could lead to two possible scenarios the

378
00:22:01,139 --> 00:22:07,320
first one is that the hacker gate which

379
00:22:04,409 --> 00:22:09,450
is reporting is taka will not

380
00:22:07,320 --> 00:22:11,399
authenticate because on every Windows

381
00:22:09,450 --> 00:22:13,549
machine by default against the county

382
00:22:11,399 --> 00:22:18,830
tables

383
00:22:13,549 --> 00:22:18,830
so we are going to get an access denied

384
00:22:19,640 --> 00:22:27,720
on the second engine area supposing that

385
00:22:23,760 --> 00:22:31,559
for some reason the count can

386
00:22:27,720 --> 00:22:35,850
authenticate against this chip she will

387
00:22:31,559 --> 00:22:39,480
receive her access token and then she

388
00:22:35,850 --> 00:22:43,290
doesn't get kicked off but has access

389
00:22:39,480 --> 00:22:49,049
only to this first floor so how could we

390
00:22:43,290 --> 00:22:52,139
improve this situation so what would

391
00:22:49,049 --> 00:22:57,299
happen if the already cop change it to

392
00:22:52,140 --> 00:23:00,110
another bottle so this is the core of

393
00:22:57,299 --> 00:23:03,600
the already hijacking I have found that

394
00:23:00,110 --> 00:23:07,500
this particular value which is stored in

395
00:23:03,600 --> 00:23:10,559
a specific memory inside we have is to

396
00:23:07,500 --> 00:23:13,020
use it by activity reference monitor to

397
00:23:10,559 --> 00:23:16,500
create a primary access token which

398
00:23:13,020 --> 00:23:21,350
means that if that value is modified to

399
00:23:16,500 --> 00:23:24,000
another one it will assume that this is

400
00:23:21,350 --> 00:23:26,100
the correct value associated with the

401
00:23:24,000 --> 00:23:26,730
user when creating the primary access

402
00:23:26,100 --> 00:23:30,870
token

403
00:23:26,730 --> 00:23:34,470
so we are changing from 104 105 sorry

404
00:23:30,870 --> 00:23:37,080
one of four and we are switching the

405
00:23:34,470 --> 00:23:42,929
relative identifier from the guest 1 to

406
00:23:37,080 --> 00:23:46,350
the administrator so repeating all the

407
00:23:42,929 --> 00:23:48,690
process MSB 1 will send a user hash

408
00:23:46,350 --> 00:23:50,850
through some server some server will

409
00:23:48,690 --> 00:23:53,370
query of the somme with the guest user

410
00:23:50,850 --> 00:23:56,820
name it will retrieve this registry hive

411
00:23:53,370 --> 00:24:00,719
this reg binary and will obtain the

412
00:23:56,820 --> 00:24:05,280
relative identifier 105 right after that

413
00:24:00,720 --> 00:24:08,700
it will query again this 105 registry

414
00:24:05,280 --> 00:24:11,910
and now it will receive the security

415
00:24:08,700 --> 00:24:16,260
data from the Sam included modify it our

416
00:24:11,910 --> 00:24:19,500
ID copy this data is sent back to the

417
00:24:16,260 --> 00:24:21,690
MSB authentication package and now the

418
00:24:19,500 --> 00:24:24,720
MSB 1 package will check for

419
00:24:21,690 --> 00:24:25,799
restrictions for this user obtained from

420
00:24:24,720 --> 00:24:28,350
the same as

421
00:24:25,799 --> 00:24:32,720
summers a security data the thing is

422
00:24:28,350 --> 00:24:36,080
that MSP one will take the status of the

423
00:24:32,720 --> 00:24:38,489
guest account which active in this case

424
00:24:36,080 --> 00:24:41,039
but we'll assume that it is the

425
00:24:38,489 --> 00:24:47,249
administrator one so it will be possible

426
00:24:41,039 --> 00:24:54,179
to authenticate with privileges of

427
00:24:47,249 --> 00:24:56,700
administrator so when the MSB one does

428
00:24:54,179 --> 00:24:58,919
the authentication verifications it

429
00:24:56,700 --> 00:25:02,609
would seem that the hash password

430
00:24:58,919 --> 00:25:05,070
entered right the right at the beginning

431
00:25:02,609 --> 00:25:10,259
of authentication process will be the

432
00:25:05,070 --> 00:25:13,439
same unwish is stored into the Sam so

433
00:25:10,259 --> 00:25:15,570
now that everything is okay the

434
00:25:13,440 --> 00:25:18,659
authentication package will retrieve the

435
00:25:15,570 --> 00:25:20,570
information to the LSA SS and then with

436
00:25:18,659 --> 00:25:26,669
the help of security reference monitor

437
00:25:20,570 --> 00:25:29,700
will create the primary access token all

438
00:25:26,669 --> 00:25:32,759
security properties of this account will

439
00:25:29,700 --> 00:25:35,489
paint but they are ID the critical one

440
00:25:32,759 --> 00:25:39,029
so getting the r ID in this case is

441
00:25:35,489 --> 00:25:44,730
equal to acquiring the privileges of the

442
00:25:39,029 --> 00:25:46,710
spoofed account so doing everything you

443
00:25:44,730 --> 00:25:49,169
can do everything you want with this new

444
00:25:46,710 --> 00:25:52,499
privileges acquired in this case this

445
00:25:49,169 --> 00:25:55,440
red girl is authenticating with Eastown

446
00:25:52,499 --> 00:25:58,169
presidentials but she is getting the

447
00:25:55,440 --> 00:26:00,919
privileges of the Ministry of one so she

448
00:25:58,169 --> 00:26:05,369
can do anything inside the system ou

449
00:26:00,919 --> 00:26:09,379
have the administrator account so this

450
00:26:05,369 --> 00:26:13,379
is our the proper charity issues that

451
00:26:09,379 --> 00:26:16,350
keep that allow this attack being

452
00:26:13,379 --> 00:26:18,779
possible so the first of all is that Tom

453
00:26:16,350 --> 00:26:22,619
server does not check if the relative

454
00:26:18,779 --> 00:26:26,059
identifier as you see it consistent with

455
00:26:22,619 --> 00:26:28,889
the our ID copy which is stored in the

456
00:26:26,059 --> 00:26:33,899
binary if guilt by the security

457
00:26:28,889 --> 00:26:37,039
reference monitor to create LS a SS not

458
00:26:33,899 --> 00:26:39,600
operate the our ID with the username

459
00:26:37,039 --> 00:26:44,820
before creating the access token

460
00:26:39,600 --> 00:26:47,879
and the LSAs s never looks for our ID

461
00:26:44,820 --> 00:26:54,360
and consistencies during day per second

462
00:26:47,880 --> 00:26:57,480
after vein of so this will be the

463
00:26:54,360 --> 00:26:59,669
interesting part so this is the

464
00:26:57,480 --> 00:27:02,580
architecture of the demonstration I am

465
00:26:59,670 --> 00:27:05,070
planning to do so it's quite simple we

466
00:27:02,580 --> 00:27:09,330
all try to authenticate with the guest

467
00:27:05,070 --> 00:27:13,189
account and privilege it one which is

468
00:27:09,330 --> 00:27:16,080
not different than standard user account

469
00:27:13,190 --> 00:27:19,770
will try to authenticate against a

470
00:27:16,080 --> 00:27:20,220
Windows 10 machine I have updated last

471
00:27:19,770 --> 00:27:24,210
night

472
00:27:20,220 --> 00:27:28,680
by using interactive log on remote desk

473
00:27:24,210 --> 00:27:30,660
and PS Excel and we will do the already

474
00:27:28,680 --> 00:27:33,420
hijacking attack with the Metasploit

475
00:27:30,660 --> 00:27:34,530
model I have developed by using this

476
00:27:33,420 --> 00:27:39,980
kali linux attacker

477
00:27:34,530 --> 00:27:39,980
so getting to you

478
00:27:43,860 --> 00:27:48,229
yeah okay so

479
00:27:52,179 --> 00:28:01,210
you can see here that no we cannot see

480
00:27:55,340 --> 00:28:11,330
that let me see okay I got it

481
00:28:01,210 --> 00:28:14,690
yeah so jeez this is the virtual machine

482
00:28:11,330 --> 00:28:16,820
we are attacking we can see that dude is

483
00:28:14,690 --> 00:28:23,629
the live version actually yeah it's

484
00:28:16,820 --> 00:28:28,220
updated early this morning we can see

485
00:28:23,629 --> 00:28:36,949
here the IP address we are tacky in they

486
00:28:28,220 --> 00:28:40,190
say yes this will be the Tucker one this

487
00:28:36,950 --> 00:28:43,580
is the model we are going to use you can

488
00:28:40,190 --> 00:28:53,080
find it on the latest metroid official

489
00:28:43,580 --> 00:28:59,860
release this is the attacker IP address

490
00:28:53,080 --> 00:29:03,309
okay so let's try to authenticate with

491
00:28:59,860 --> 00:29:06,428
the in version of PS xxxx

492
00:29:03,309 --> 00:29:06,428
against it

493
00:29:21,550 --> 00:29:26,710
okay it's not possible I have been able

494
00:29:24,310 --> 00:29:30,610
to guest accounts in this case but we

495
00:29:26,710 --> 00:29:37,680
get a type not granted kill the one type

496
00:29:30,610 --> 00:29:37,679
not granted let's see here

497
00:29:41,710 --> 00:29:48,730
these are these are available in these

498
00:29:44,410 --> 00:29:51,760
machines trader built-in account weary

499
00:29:48,730 --> 00:29:54,220
guest account and curious one a standard

500
00:29:51,760 --> 00:29:57,390
user account we are going to use to

501
00:29:54,220 --> 00:30:01,270
exemplify the already hijacking too

502
00:29:57,390 --> 00:30:04,000
so if we query up the user cast you can

503
00:30:01,270 --> 00:30:08,830
see it is only member of the local group

504
00:30:04,000 --> 00:30:13,800
guests now in different is enabled the

505
00:30:08,830 --> 00:30:13,800
 is enabled net user administrator

506
00:30:13,830 --> 00:30:22,020
this account is the building one and it

507
00:30:16,990 --> 00:30:25,440
is tables we can see it here

508
00:30:22,020 --> 00:30:25,440
all right

509
00:30:32,340 --> 00:30:38,909
so since this is a post exploitation

510
00:30:35,310 --> 00:30:42,149
technique it requires meterpreter

511
00:30:38,910 --> 00:30:43,800
session to properly ultimate I this

512
00:30:42,150 --> 00:30:51,230
attack by using the Metasploit model I

513
00:30:43,800 --> 00:30:51,230
have developed but is it please executed

514
00:30:53,120 --> 00:31:03,229
resources so let's see this interpreter

515
00:31:03,560 --> 00:31:23,550
these are the session ok so these are

516
00:31:18,510 --> 00:31:26,180
the options of the module these are the

517
00:31:23,550 --> 00:31:30,290
gas system will try to acquire required

518
00:31:26,180 --> 00:31:32,820
regarded privileges to automatize stack

519
00:31:30,290 --> 00:31:34,620
this will be the boolean with that will

520
00:31:32,820 --> 00:31:37,649
define if we are going to use the guest

521
00:31:34,620 --> 00:31:40,709
account as an attacker one the pipework

522
00:31:37,650 --> 00:31:43,500
if we want to change the guest account

523
00:31:40,710 --> 00:31:47,160
passport the relative identifier we are

524
00:31:43,500 --> 00:31:51,030
planning to set and the session of

525
00:31:47,160 --> 00:31:57,450
meterpreter so in this case will try to

526
00:31:51,030 --> 00:32:05,760
set these values we are going to use the

527
00:31:57,450 --> 00:32:08,750
guest account and let's set password an

528
00:32:05,760 --> 00:32:08,750
on-set session

529
00:32:09,690 --> 00:32:12,560
okay

530
00:32:12,780 --> 00:32:21,270
so right before to something I will try

531
00:32:17,460 --> 00:32:27,050
to interactive logon by using the gas

532
00:32:21,270 --> 00:32:27,050
potentials so we can see it more clearly

533
00:32:32,549 --> 00:32:38,320
okay it is not possible for us to

534
00:32:34,929 --> 00:32:44,889
authenticate even in this interactive

535
00:32:38,320 --> 00:32:47,529
logon by now and let's execute they

536
00:32:44,889 --> 00:32:55,359
already hit you can attack these are

537
00:32:47,529 --> 00:33:01,210
your values let's write exploit okay now

538
00:32:55,359 --> 00:33:04,629
we have change it from our ID 501 to our

539
00:33:01,210 --> 00:33:10,359
ID 500 so let's try again to

540
00:33:04,629 --> 00:33:13,658
authenticate with the guest account okay

541
00:33:10,359 --> 00:33:18,939
it seems that we are capable of Akkadian

542
00:33:13,659 --> 00:33:23,309
nothing by now but if we try to do the

543
00:33:18,940 --> 00:33:23,309
basic subversion of in pocket

544
00:33:31,049 --> 00:33:33,739
here

545
00:33:35,130 --> 00:33:41,880
okay will be possible for us to get a

546
00:33:37,780 --> 00:33:48,010
shell a system with by using their guest

547
00:33:41,880 --> 00:33:51,400
credentials so it is possible also to do

548
00:33:48,010 --> 00:33:56,100
an interactive logon so in this case we

549
00:33:51,400 --> 00:33:56,100
can see that we are guest

550
00:34:00,900 --> 00:34:10,929
but the interesting thing here is like

551
00:34:03,370 --> 00:34:20,469
we are we have the relative identifier

552
00:34:10,929 --> 00:34:25,230
of the invader okay it is possible for

553
00:34:20,469 --> 00:34:31,350
us to do some interesting things like

554
00:34:25,230 --> 00:34:31,350
creating some interesting phallic

555
00:34:52,310 --> 00:34:55,310
okay

556
00:34:55,350 --> 00:35:08,040
[Applause]

557
00:35:03,950 --> 00:35:11,299
pretty cool I'm thinking is that if we

558
00:35:08,040 --> 00:35:15,150
query up or privileges here let me see

559
00:35:11,300 --> 00:35:19,880
if we do something like Annette just do

560
00:35:15,150 --> 00:35:19,880
it here first

561
00:35:20,330 --> 00:35:25,880
we are only members of the guests group

562
00:35:23,070 --> 00:35:28,950
so when administrator will check

563
00:35:25,880 --> 00:35:31,890
privileges we're only guests but we are

564
00:35:28,950 --> 00:35:35,910
capable of things at the administrator

565
00:35:31,890 --> 00:35:38,540
and if we take a look of the

566
00:35:35,910 --> 00:35:38,540
administrator

567
00:35:48,200 --> 00:35:56,489
you will see that the disabled so they

568
00:35:51,989 --> 00:36:00,390
are doing things as a disabled user we

569
00:35:56,489 --> 00:36:02,400
are a spoof indeed privileges all by

570
00:36:00,390 --> 00:36:04,379
doing this attacks but something will

571
00:36:02,400 --> 00:36:05,849
someone will say no but this only works

572
00:36:04,380 --> 00:36:07,769
with the guest account now that

573
00:36:05,849 --> 00:36:11,789
insulates yes that's interesting because

574
00:36:07,769 --> 00:36:14,488
this is reliable for every standard

575
00:36:11,789 --> 00:36:16,650
local user account so if we try to use

576
00:36:14,489 --> 00:36:32,089
let's query they contribute idiot

577
00:36:16,650 --> 00:36:36,180
account ok we see that we are only

578
00:36:32,089 --> 00:36:40,920
membership we are only users local group

579
00:36:36,180 --> 00:36:44,430
which is a standard user account if we

580
00:36:40,920 --> 00:36:47,190
try to do a PSX act of the remember that

581
00:36:44,430 --> 00:36:50,430
the impacted version of vsx AK will try

582
00:36:47,190 --> 00:36:58,499
to act system privileges if possible so

583
00:36:50,430 --> 00:37:00,859
if we do that do that ok now didn't work

584
00:36:58,499 --> 00:37:00,859
as well

585
00:37:04,790 --> 00:37:10,500
now it's pretty weird I think that I

586
00:37:08,640 --> 00:37:21,270
have already hijacked the unprivileged

587
00:37:10,500 --> 00:37:23,400
account but yeah I have already hijacked

588
00:37:21,270 --> 00:37:25,170
it you can see that we are only members

589
00:37:23,400 --> 00:37:30,750
of the Reeves Law Group of this group

590
00:37:25,170 --> 00:37:34,700
but we are capable of employing system

591
00:37:30,750 --> 00:37:37,910
session with these credentials

592
00:37:34,700 --> 00:37:49,020
associated with the implemented account

593
00:37:37,910 --> 00:37:53,960
okay so are some final conclusions by

594
00:37:49,020 --> 00:37:58,020
now as you have seen there no existing

595
00:37:53,960 --> 00:38:01,590
provided by Windows to protect their

596
00:37:58,020 --> 00:38:05,610
system from this attack the only way I

597
00:38:01,590 --> 00:38:09,270
think a machine is by detection by now

598
00:38:05,610 --> 00:38:13,430
of course there are solutions that are

599
00:38:09,270 --> 00:38:16,140
related to modify improperly those deep

600
00:38:13,430 --> 00:38:31,529
related with the authentication and

601
00:38:16,140 --> 00:38:33,710
authorization process ok ok sorry about

602
00:38:31,530 --> 00:38:33,710
that

603
00:38:39,130 --> 00:38:47,400
yeah it's working it's not working

604
00:38:42,039 --> 00:38:47,400
properly okay yeah sure

605
00:38:51,270 --> 00:39:01,810
okay better yeah can you hear me okay so

606
00:38:58,500 --> 00:39:05,700
I told you by now the only way to defend

607
00:39:01,810 --> 00:39:09,609
from this attack is by detection you can

608
00:39:05,700 --> 00:39:11,649
verify if this our ID copy is consistent

609
00:39:09,609 --> 00:39:16,319
with the one which is associated for

610
00:39:11,650 --> 00:39:20,380
this user there are some workarounds to

611
00:39:16,319 --> 00:39:26,020
detect this like developing some scripts

612
00:39:20,380 --> 00:39:30,609
which high privileges to check the Sam

613
00:39:26,020 --> 00:39:32,470
registry hive and compare the the value

614
00:39:30,609 --> 00:39:36,250
which is stored inside the REC binary

615
00:39:32,470 --> 00:39:41,680
with the already ID value which is

616
00:39:36,250 --> 00:39:45,390
assigned to this user of course this

617
00:39:41,680 --> 00:39:47,259
kind of detection is more complicated on

618
00:39:45,390 --> 00:39:49,750
big windows domains

619
00:39:47,260 --> 00:39:53,650
since a simple workstation can have this

620
00:39:49,750 --> 00:39:59,109
and it can be used to an entry point for

621
00:39:53,650 --> 00:40:01,480
an attacker so I have worked on some

622
00:39:59,109 --> 00:40:03,940
workaround so you will try to I'm trying

623
00:40:01,480 --> 00:40:07,060
to Oh too much highs the way to verify

624
00:40:03,940 --> 00:40:11,619
if the relative identifier as you say to

625
00:40:07,060 --> 00:40:14,319
be with the with the user is consistent

626
00:40:11,619 --> 00:40:21,550
with the one which is stored inside of

627
00:40:14,319 --> 00:40:24,070
this binary so I think that's it thank

628
00:40:21,550 --> 00:40:31,100
you so much and I hope you like

629
00:40:24,070 --> 00:40:34,880
[Applause]

630
00:40:31,100 --> 00:40:34,880
grete Sebastian

631
00:40:40,030 --> 00:40:42,090
you

