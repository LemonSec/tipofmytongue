1
00:00:00,030 --> 00:00:07,649
so we are going to to start this second

2
00:00:07,649 --> 00:00:13,830
day welcome everyone for the for this

3
00:00:13,830 --> 00:00:19,260
afternoon it will be dedicated to in the

4
00:00:19,260 --> 00:00:21,689
first time red teaming on the internet

5
00:00:21,689 --> 00:00:27,539
to offensive security talks and then we

6
00:00:27,539 --> 00:00:32,159
are going to give the stage to our blue

7
00:00:32,159 --> 00:00:35,660
team and at the end of of the afternoon

8
00:00:35,660 --> 00:00:39,120
it will be a concept time we are going

9
00:00:39,120 --> 00:00:42,120
to speak about it later and now please

10
00:00:42,120 --> 00:00:46,219
welcome Matthew about he's going to

11
00:00:46,219 --> 00:00:52,050
speak about some phony pen testing at

12
00:00:52,050 --> 00:00:53,750
you the stage is yours

13
00:00:53,750 --> 00:01:00,170
thank you can you see my screen yeah

14
00:01:00,170 --> 00:01:04,229
okay so hi everyone my name is materia

15
00:01:04,229 --> 00:01:06,390
and today I'm going to introduce you a

16
00:01:06,390 --> 00:01:10,080
tool we developed effective to look

17
00:01:10,080 --> 00:01:12,750
information from misconfigured Symphony

18
00:01:12,750 --> 00:01:16,619
invitations so just a few words before

19
00:01:16,619 --> 00:01:19,470
beginnings in selective is an IT

20
00:01:19,470 --> 00:01:22,830
security company and based in Paris but

21
00:01:22,830 --> 00:01:25,200
we also have teams in Toulouse room and

22
00:01:25,200 --> 00:01:28,110
REM as well as other remote place

23
00:01:28,110 --> 00:01:31,020
throughout the country we focus on

24
00:01:31,020 --> 00:01:33,780
offensive security and our activities

25
00:01:33,780 --> 00:01:36,150
can be divided between pen test reverse

26
00:01:36,150 --> 00:01:40,920
engineering and development projects so

27
00:01:40,920 --> 00:01:43,560
a bit of context about this presentation

28
00:01:43,560 --> 00:01:46,140
a symphony is an open source PHP

29
00:01:46,140 --> 00:01:49,140
framework used for building web web

30
00:01:49,140 --> 00:01:52,170
applications and during assessments we

31
00:01:52,170 --> 00:01:54,570
came across some Symphony instances

32
00:01:54,570 --> 00:01:57,750
deployed with debug features enabled in

33
00:01:57,750 --> 00:02:00,990
the production environment so these

34
00:02:00,990 --> 00:02:03,780
features are actually parts of symfony

35
00:02:03,780 --> 00:02:06,229
components called the web profiler and

36
00:02:06,229 --> 00:02:09,000
from there there were two things we

37
00:02:09,000 --> 00:02:10,899
wanted to do we wanted to do

38
00:02:10,899 --> 00:02:12,640
the first was to Lutz as much

39
00:02:12,640 --> 00:02:15,159
information as we could and the second

40
00:02:15,159 --> 00:02:17,409
was to automate everything because doing

41
00:02:17,409 --> 00:02:19,090
me doing it manually would have been

42
00:02:19,090 --> 00:02:24,640
painful so before going further I'd like

43
00:02:24,640 --> 00:02:26,920
to emphasize the fact that we are not

44
00:02:26,920 --> 00:02:29,909
dealing with a symphony of vulnerability

45
00:02:29,909 --> 00:02:33,069
we are only taking advantage of a

46
00:02:33,069 --> 00:02:34,900
symphony components they were profiler

47
00:02:34,900 --> 00:02:38,260
and in fact symphony documentation

48
00:02:38,260 --> 00:02:39,909
clearly states at the very beginning

49
00:02:39,909 --> 00:02:42,129
that this component should never be

50
00:02:42,129 --> 00:02:43,900
enabled in the production environments

51
00:02:43,900 --> 00:02:46,660
because it will lead to major security

52
00:02:46,660 --> 00:02:52,000
vulnerabilities so the core the core

53
00:02:52,000 --> 00:02:55,200
components of symphony is its kernel and

54
00:02:55,200 --> 00:02:58,150
according to the symphony version your

55
00:02:58,150 --> 00:03:02,049
application is using the kernel will be

56
00:03:02,049 --> 00:03:03,519
instance eight it's definitely

57
00:03:03,519 --> 00:03:07,329
differently in older symphony versions

58
00:03:07,329 --> 00:03:10,620
there were two files for two Karen old

59
00:03:10,620 --> 00:03:14,739
terminals the first one in that PHP was

60
00:03:14,739 --> 00:03:17,049
the default kernel created with

61
00:03:17,049 --> 00:03:20,200
production parameters and the second the

62
00:03:20,200 --> 00:03:22,480
second one in append discord tape that

63
00:03:22,480 --> 00:03:28,450
PHP was development colonel with debug

64
00:03:28,450 --> 00:03:31,780
features enabled so in this case

65
00:03:31,780 --> 00:03:34,209
according to the URL you use to reach

66
00:03:34,209 --> 00:03:37,090
your application your request will

67
00:03:37,090 --> 00:03:38,739
either go through the first or the

68
00:03:38,739 --> 00:03:41,680
second kernel and in the second case you

69
00:03:41,680 --> 00:03:44,049
will be able to use the sensitive

70
00:03:44,049 --> 00:03:48,910
features however however in the latest

71
00:03:48,910 --> 00:03:51,400
symphony versions they merged those two

72
00:03:51,400 --> 00:03:54,129
files and now there's only one kernel

73
00:03:54,129 --> 00:03:56,739
instantiated for each symphony

74
00:03:56,739 --> 00:03:59,230
application which is in the public slash

75
00:03:59,230 --> 00:04:04,720
index dot PHP file so in this case there

76
00:04:04,720 --> 00:04:06,669
as there is only one kernel your

77
00:04:06,669 --> 00:04:08,620
application can either be deployed in

78
00:04:08,620 --> 00:04:11,949
production or development mode so from

79
00:04:11,949 --> 00:04:15,519
this I can see two scenarios from for

80
00:04:15,519 --> 00:04:19,570
Earth attackers in the first case there

81
00:04:19,570 --> 00:04:22,360
is only one symphony instance and all

82
00:04:22,360 --> 00:04:23,650
the information you will

83
00:04:23,650 --> 00:04:26,290
able to get from the debug features

84
00:04:26,290 --> 00:04:28,960
would be valid on the same symfony

85
00:04:28,960 --> 00:04:31,440
instance so this is the best case

86
00:04:31,440 --> 00:04:33,970
however in the second case you will have

87
00:04:33,970 --> 00:04:36,669
to have access to both a production and

88
00:04:36,669 --> 00:04:41,350
development server because and because

89
00:04:41,350 --> 00:04:45,370
they are separated not all the

90
00:04:45,370 --> 00:04:47,229
information you will be able to loot

91
00:04:47,229 --> 00:04:49,080
from the development features

92
00:04:49,080 --> 00:04:50,229
wildernesses

93
00:04:50,229 --> 00:04:52,539
they will not necessarily necessarily be

94
00:04:52,539 --> 00:04:56,320
valid on the production server and so

95
00:04:56,320 --> 00:04:58,960
this will focus what kind of information

96
00:04:58,960 --> 00:05:03,240
we want to loot from the debug features

97
00:05:03,240 --> 00:05:06,130
so this is actually the first thing you

98
00:05:06,130 --> 00:05:09,039
see when you you come across a symphony

99
00:05:09,039 --> 00:05:11,110
application that has been misconfigured

100
00:05:11,110 --> 00:05:15,099
and this is the profiler toolbar so this

101
00:05:15,099 --> 00:05:18,460
is this is not much but there is also

102
00:05:18,460 --> 00:05:21,160
there is already some information and

103
00:05:21,160 --> 00:05:23,889
the symphony exact version the PHP

104
00:05:23,889 --> 00:05:26,410
version and some of the parameters after

105
00:05:26,410 --> 00:05:31,000
of the deployment and then if you go

106
00:05:31,000 --> 00:05:34,690
through the links and there is for

107
00:05:34,690 --> 00:05:39,250
example the PHP info and as Symphony

108
00:05:39,250 --> 00:05:41,289
usually relies on environment variables

109
00:05:41,289 --> 00:05:44,650
to pass parameters to the kernel when

110
00:05:44,650 --> 00:05:48,580
the application is starting in this

111
00:05:48,580 --> 00:05:50,770
section of the PHP info you will be able

112
00:05:50,770 --> 00:05:53,349
to find very valuable information such

113
00:05:53,349 --> 00:05:56,830
as secrets to external applications API

114
00:05:56,830 --> 00:05:58,360
tokens and so on

115
00:05:58,360 --> 00:06:04,030
and there is also the application secret

116
00:06:04,030 --> 00:06:07,150
which is which symphony uses internally

117
00:06:07,150 --> 00:06:09,970
to perform some actions that we will see

118
00:06:09,970 --> 00:06:13,690
later then

119
00:06:13,690 --> 00:06:16,539
if you move to the profiler the actual

120
00:06:16,539 --> 00:06:20,440
profiler panel there are multiple tabs

121
00:06:20,440 --> 00:06:22,840
on the left and one of them is the

122
00:06:22,840 --> 00:06:26,110
routing panel and this panel will

123
00:06:26,110 --> 00:06:28,510
enumerate all the routes of the

124
00:06:28,510 --> 00:06:31,360
application in fact when you request a

125
00:06:31,360 --> 00:06:34,120
resource from the for the under website

126
00:06:34,120 --> 00:06:36,400
the profiler will go through the list of

127
00:06:36,400 --> 00:06:36,840
the

128
00:06:36,840 --> 00:06:40,320
mr. roots for the application until one

129
00:06:40,320 --> 00:06:42,830
matches the resource you are requesting

130
00:06:42,830 --> 00:06:46,530
but if you trigger a follow for Aurora

131
00:06:46,530 --> 00:06:49,470
and then the profiler will simply list

132
00:06:49,470 --> 00:06:51,960
everything so this is in valuable

133
00:06:51,960 --> 00:06:53,910
information when you want to actually

134
00:06:53,910 --> 00:06:59,639
the application then the second panel is

135
00:06:59,639 --> 00:07:02,970
even more interesting because this panel

136
00:07:02,970 --> 00:07:06,480
will list all the requests that have

137
00:07:06,480 --> 00:07:09,840
been issued to the application and for

138
00:07:09,840 --> 00:07:12,030
us attackers we are especially

139
00:07:12,030 --> 00:07:15,080
interested in requests continuing data

140
00:07:15,080 --> 00:07:19,530
especially post requests and even more

141
00:07:19,530 --> 00:07:24,120
especially the login requests because we

142
00:07:24,120 --> 00:07:25,889
will be able to extract the information

143
00:07:25,889 --> 00:07:27,990
that have been tested in to the

144
00:07:27,990 --> 00:07:31,740
application and here we can see symphony

145
00:07:31,740 --> 00:07:34,490
tries to hide the sensitive fields of

146
00:07:34,490 --> 00:07:38,550
the form such as passwords but actually

147
00:07:38,550 --> 00:07:40,229
if you scroll down and there is a

148
00:07:40,229 --> 00:07:42,750
section where symphony the symphony

149
00:07:42,750 --> 00:07:45,000
profiler will just display the raw

150
00:07:45,000 --> 00:07:47,280
request contents so you can grab the

151
00:07:47,280 --> 00:07:53,390
passwords from there and another feature

152
00:07:53,390 --> 00:07:56,190
regarding authentication on your

153
00:07:56,190 --> 00:07:58,550
application is the remember with cookies

154
00:07:58,550 --> 00:08:01,740
this feature is actually not enabled by

155
00:08:01,740 --> 00:08:04,740
default on symphony applications but it

156
00:08:04,740 --> 00:08:06,780
is popular in north enough to be

157
00:08:06,780 --> 00:08:11,039
considered so symphony provides built-in

158
00:08:11,039 --> 00:08:13,740
interfaces to create such cookies

159
00:08:13,740 --> 00:08:15,960
remember my cookies and one of them

160
00:08:15,960 --> 00:08:18,270
which has the default one uses the

161
00:08:18,270 --> 00:08:21,600
function here generate cookie ash and

162
00:08:21,600 --> 00:08:24,630
this function relies on multiple

163
00:08:24,630 --> 00:08:28,860
parameters and these parameters are the

164
00:08:28,860 --> 00:08:31,350
user name and then at the user password

165
00:08:31,350 --> 00:08:33,870
ash and some other elements around the

166
00:08:33,870 --> 00:08:37,559
user so the tech oldest parameters put

167
00:08:37,559 --> 00:08:41,099
them together then perform an inch match

168
00:08:41,099 --> 00:08:45,030
using secret a secret key and the

169
00:08:45,030 --> 00:08:48,360
resulting value is used is passed to the

170
00:08:48,360 --> 00:08:49,889
cookie so that the user

171
00:08:49,889 --> 00:08:54,949
fanta change the application again so

172
00:08:54,949 --> 00:08:58,410
secret key that is used to craft the

173
00:08:58,410 --> 00:09:00,029
cookies is actually the application

174
00:09:00,029 --> 00:09:03,089
secrets that which is so earlier in the

175
00:09:03,089 --> 00:09:07,319
PHP info so with this value and with the

176
00:09:07,319 --> 00:09:09,809
value we can find in the profiler panel

177
00:09:09,809 --> 00:09:12,839
in the session section that we can see

178
00:09:12,839 --> 00:09:15,720
here we have all the elements we need to

179
00:09:15,720 --> 00:09:20,609
craft cookies ourselves and we just have

180
00:09:20,609 --> 00:09:25,019
to base 64 everything we can add an

181
00:09:25,019 --> 00:09:27,239
unlimited lifetime for this cookie

182
00:09:27,239 --> 00:09:29,189
because we also control the timestamp

183
00:09:29,189 --> 00:09:33,419
until when the cookies the cookie is is

184
00:09:33,419 --> 00:09:39,779
working and we will be able to log to

185
00:09:39,779 --> 00:09:43,290
the education as another user so we just

186
00:09:43,290 --> 00:09:45,569
saw that we we can already get the

187
00:09:45,569 --> 00:09:48,509
credentials that have been issued to the

188
00:09:48,509 --> 00:09:51,209
applications but there may be some cases

189
00:09:51,209 --> 00:09:54,209
where you can't use them directly for

190
00:09:54,209 --> 00:09:55,919
instance if the application is

191
00:09:55,919 --> 00:09:58,139
implementing multi-factor authentication

192
00:09:58,139 --> 00:10:01,079
and then this technique could be used to

193
00:10:01,079 --> 00:10:06,600
bypass such protections and the last

194
00:10:06,600 --> 00:10:10,199
feature that Symphony provides the web

195
00:10:10,199 --> 00:10:14,399
profiler provides is a file viewer when

196
00:10:14,399 --> 00:10:16,439
you are working on the application when

197
00:10:16,439 --> 00:10:19,410
you are developing it and this feature

198
00:10:19,410 --> 00:10:22,439
is pretty handy because if for instance

199
00:10:22,439 --> 00:10:25,169
ever are raised in the individual source

200
00:10:25,169 --> 00:10:27,509
code the profiling will show you the

201
00:10:27,509 --> 00:10:31,439
file where the arrow was raised and it

202
00:10:31,439 --> 00:10:34,799
will even show you the exact line so

203
00:10:34,799 --> 00:10:37,559
this allows you to to view the file

204
00:10:37,559 --> 00:10:41,279
contents and for as attackers we will

205
00:10:41,279 --> 00:10:43,499
not restrict ourselves to the files that

206
00:10:43,499 --> 00:10:45,689
the word profiler wants to show us in

207
00:10:45,689 --> 00:10:48,119
fact we can choose whether of whatever

208
00:10:48,119 --> 00:10:51,779
file is in the in the root directory of

209
00:10:51,779 --> 00:10:55,649
the application and this is the case for

210
00:10:55,649 --> 00:10:59,189
the config files for example so here the

211
00:10:59,189 --> 00:11:01,679
config slash services that Hamel file is

212
00:11:01,679 --> 00:11:02,560
that

213
00:11:02,560 --> 00:11:04,840
holds one of the default configuration

214
00:11:04,840 --> 00:11:08,230
files for symphony and this file is

215
00:11:08,230 --> 00:11:11,410
interesting because some of the

216
00:11:11,410 --> 00:11:13,150
parameters that are passed to the kernel

217
00:11:13,150 --> 00:11:17,470
are in this file and as well as some

218
00:11:17,470 --> 00:11:22,180
secrets for external services so once

219
00:11:22,180 --> 00:11:24,490
again this information is useful this

220
00:11:24,490 --> 00:11:27,550
but as I told you earlier and there may

221
00:11:27,550 --> 00:11:30,820
be cases where all these informations

222
00:11:30,820 --> 00:11:33,370
all the secrets you've got from the web

223
00:11:33,370 --> 00:11:35,410
profiler are not valid and the

224
00:11:35,410 --> 00:11:38,950
prediction server so in this case the

225
00:11:38,950 --> 00:11:41,529
information we want is the actual source

226
00:11:41,529 --> 00:11:44,550
code of the application because if you

227
00:11:44,550 --> 00:11:47,589
manage to go to get the source code then

228
00:11:47,589 --> 00:11:49,930
you will start to look for

229
00:11:49,930 --> 00:11:51,910
vulnerabilities and then you could

230
00:11:51,910 --> 00:11:55,360
attack the production server so the only

231
00:11:55,360 --> 00:11:58,270
problem is the web profiler has no

232
00:11:58,270 --> 00:12:03,270
directory listing feature you have to

233
00:12:03,270 --> 00:12:06,760
file path to the file you want and you

234
00:12:06,760 --> 00:12:09,880
can't guess reliably in the files that

235
00:12:09,880 --> 00:12:13,950
you want download the source code files

236
00:12:13,950 --> 00:12:18,370
so the way to get around this is to look

237
00:12:18,370 --> 00:12:22,600
in the cache files for each symphony

238
00:12:22,600 --> 00:12:26,380
application and the symphony embeds a

239
00:12:26,380 --> 00:12:29,589
caching system and all the files that

240
00:12:29,589 --> 00:12:32,260
are cached for your applications for

241
00:12:32,260 --> 00:12:34,780
your application are under the VAR cache

242
00:12:34,780 --> 00:12:39,460
and a folder name depending on the

243
00:12:39,460 --> 00:12:41,620
deployment environment which will likely

244
00:12:41,620 --> 00:12:45,190
be look likely be dead because your

245
00:12:45,190 --> 00:12:49,089
petition is in development mode so the

246
00:12:49,089 --> 00:12:52,780
files under this directory will be you

247
00:12:52,780 --> 00:12:54,520
will be able to view them through the

248
00:12:54,520 --> 00:12:56,860
features because they are under the same

249
00:12:56,860 --> 00:13:00,850
root directory and the file we are

250
00:13:00,850 --> 00:13:03,370
really interested in is the kernel cache

251
00:13:03,370 --> 00:13:06,459
file because in this file and you will

252
00:13:06,459 --> 00:13:10,060
found all you'll find all the parameters

253
00:13:10,060 --> 00:13:12,000
that have been passed to the kernel and

254
00:13:12,000 --> 00:13:15,200
also the services the PHP classes

255
00:13:15,200 --> 00:13:18,070
in registered for your application and

256
00:13:18,070 --> 00:13:21,769
with with the PHP namespaces that you

257
00:13:21,769 --> 00:13:23,930
will find in this file you will be able

258
00:13:23,930 --> 00:13:26,810
to test the file path and extract the

259
00:13:26,810 --> 00:13:31,850
source code so luckily for us the file

260
00:13:31,850 --> 00:13:35,089
the file name for the disk cache file is

261
00:13:35,089 --> 00:13:38,120
not random because that would have been

262
00:13:38,120 --> 00:13:41,000
a problem but instead is commits it is

263
00:13:41,000 --> 00:13:45,980
composed of constant parts and and parts

264
00:13:45,980 --> 00:13:49,670
that depend on the deployment so for

265
00:13:49,670 --> 00:13:52,940
instance SRC will be the root directory

266
00:13:52,940 --> 00:13:54,649
for it the source code of the

267
00:13:54,649 --> 00:13:57,339
application def is the deployment

268
00:13:57,339 --> 00:14:00,410
deployment mode debug is whether your

269
00:14:00,410 --> 00:14:02,060
application is in the background or not

270
00:14:02,060 --> 00:14:05,690
AB kernel is the PHP namespace to the

271
00:14:05,690 --> 00:14:09,740
symphony kernel and the green part is if

272
00:14:09,740 --> 00:14:14,600
it's fits part so then we just have to

273
00:14:14,600 --> 00:14:17,660
request this file using the word

274
00:14:17,660 --> 00:14:21,050
profiler feature and as you can see in

275
00:14:21,050 --> 00:14:23,750
the highlighted line and you will find

276
00:14:23,750 --> 00:14:27,199
to PHP namespaces to the to the PHP

277
00:14:27,199 --> 00:14:30,860
classes of the application and as

278
00:14:30,860 --> 00:14:35,060
Symphony uses default name spaces which

279
00:14:35,060 --> 00:14:38,990
are add for instance or a bundle and you

280
00:14:38,990 --> 00:14:42,199
will be able to convert those namespaces

281
00:14:42,199 --> 00:14:46,220
to actual file system paths and tend to

282
00:14:46,220 --> 00:14:48,860
download the source code files that you

283
00:14:48,860 --> 00:14:53,860
are interested in so in the end this is

284
00:14:53,860 --> 00:14:57,680
actually all that all what the the tool

285
00:14:57,680 --> 00:15:02,630
us is doing you start the tool you scan

286
00:15:02,630 --> 00:15:05,060
your target it will go through the

287
00:15:05,060 --> 00:15:06,949
request logs it will extract all the

288
00:15:06,949 --> 00:15:09,589
credentials it finds it will extract

289
00:15:09,589 --> 00:15:12,350
also the user roles it will go to the

290
00:15:12,350 --> 00:15:14,060
page pin for each one all the secrets

291
00:15:14,060 --> 00:15:17,149
from there it will try to download the

292
00:15:17,149 --> 00:15:18,829
project files the configuration files

293
00:15:18,829 --> 00:15:24,260
and the source code files so in this

294
00:15:24,260 --> 00:15:25,940
example for instance on the right you

295
00:15:25,940 --> 00:15:28,410
can see all the part

296
00:15:28,410 --> 00:15:30,870
a part of the of the files that have

297
00:15:30,870 --> 00:15:34,610
been downloaded by us by the tool so

298
00:15:34,610 --> 00:15:37,470
then from the from there you can start

299
00:15:37,470 --> 00:15:40,139
looking for vulnerabilities in the

300
00:15:40,139 --> 00:15:42,269
source code and attacking the actual

301
00:15:42,269 --> 00:15:46,829
production Java server so the tool has

302
00:15:46,829 --> 00:15:49,620
been released under github a few weeks

303
00:15:49,620 --> 00:15:52,949
ago feel free to use it and if you just

304
00:15:52,949 --> 00:15:55,339
want to test it see how it works

305
00:15:55,339 --> 00:15:58,110
symphonie actually provides a demo

306
00:15:58,110 --> 00:16:00,709
application containing real-world

307
00:16:00,709 --> 00:16:03,870
conference which has a user managing

308
00:16:03,870 --> 00:16:05,970
mechanism you can edit content and so on

309
00:16:05,970 --> 00:16:09,389
so this is a perfect target for the tool

310
00:16:09,389 --> 00:16:12,000
and this is what I actually used for

311
00:16:12,000 --> 00:16:13,860
this presentation anyone as well when I

312
00:16:13,860 --> 00:16:18,149
was working in the tool so to conclude

313
00:16:18,149 --> 00:16:22,379
and these are very basic tasks and

314
00:16:22,379 --> 00:16:26,850
nothing very complicated but the tool

315
00:16:26,850 --> 00:16:29,430
now does it automatically you don't have

316
00:16:29,430 --> 00:16:31,740
to worry about anything it does it in

317
00:16:31,740 --> 00:16:35,550
within a few seconds and once again this

318
00:16:35,550 --> 00:16:38,790
reminds us not to expose debug features

319
00:16:38,790 --> 00:16:41,189
in production environments because this

320
00:16:41,189 --> 00:16:42,720
will lead to major security

321
00:16:42,720 --> 00:16:44,430
vulnerabilities in your in your

322
00:16:44,430 --> 00:16:48,899
infrastructure so this is it for me and

323
00:16:48,899 --> 00:16:51,660
thank you for your attention and I'm

324
00:16:51,660 --> 00:16:54,949
ready to answer questions if you awesome

325
00:16:54,949 --> 00:17:03,149
thank you very much okay no question for

326
00:17:03,149 --> 00:17:08,959
the moment in the Q&A but I have got one

327
00:17:08,959 --> 00:17:14,640
cell phonee is really used in the PHP

328
00:17:14,640 --> 00:17:21,380
world and you got some idea to extend

329
00:17:21,380 --> 00:17:27,539
your tool further to check the debug

330
00:17:27,539 --> 00:17:30,830
and developments in production to

331
00:17:30,830 --> 00:17:32,729
another world

332
00:17:32,729 --> 00:17:37,100
would you like to extend to to check the

333
00:17:37,100 --> 00:17:39,090
vulnerabilities potential winner

334
00:17:39,090 --> 00:17:41,669
vulnerabilities of the different

335
00:17:41,669 --> 00:17:44,039
application deployed on that kind of

336
00:17:44,039 --> 00:17:46,950
environment and have you got some ideas

337
00:17:46,950 --> 00:17:49,710
to extend your tool or it is only

338
00:17:49,710 --> 00:17:55,590
focused on the the debug portion yeah

339
00:17:55,590 --> 00:17:58,559
good question at the moment the tool is

340
00:17:58,559 --> 00:18:01,349
only focusing on debug features but

341
00:18:01,349 --> 00:18:04,859
there may be components that can be

342
00:18:04,859 --> 00:18:08,389
reused in in the production environment

343
00:18:08,389 --> 00:18:11,909
I'm thinking about for instance if you

344
00:18:11,909 --> 00:18:14,909
have an SQL injection and you are able

345
00:18:14,909 --> 00:18:19,769
to extract the user ashes and you you

346
00:18:19,769 --> 00:18:22,649
may be able to use these ashes to craft

347
00:18:22,649 --> 00:18:25,379
remember me cookies as I just explained

348
00:18:25,379 --> 00:18:30,690
that is apart from this I cannot see

349
00:18:30,690 --> 00:18:33,929
direct direct application for it for

350
00:18:33,929 --> 00:18:40,849
this tool if it's not in okay thank you

351
00:18:40,849 --> 00:18:43,440
people outside have you got some

352
00:18:43,440 --> 00:18:45,600
question to match

353
00:18:45,600 --> 00:18:48,830
[Music]

354
00:18:57,240 --> 00:19:02,039
so we are going to to be able to say

355
00:19:02,039 --> 00:19:04,830
thank you very much mature and we are

356
00:19:04,830 --> 00:19:08,970
going to stay on pause for five minutes

357
00:19:08,970 --> 00:19:12,960
to stay on track with the schedule thank

358
00:19:12,960 --> 00:19:16,340
you very much Mathieu thank you everyone

359
00:19:21,330 --> 00:19:23,389
you

360
00:21:14,200 --> 00:21:16,260
you

361
00:22:47,820 --> 00:22:51,119
[Music]

362
00:23:16,560 --> 00:23:19,720
[Music]

363
00:24:50,700 --> 00:24:57,999
so we are we are back to to launch our

364
00:24:57,999 --> 00:25:01,889
second offensive talk we are going to

365
00:25:01,889 --> 00:25:05,590
give the stage to Shana town to speak

366
00:25:05,590 --> 00:25:11,859
about net IOT network mapping so donut

367
00:25:11,859 --> 00:25:29,499
on the stage is yours yes so today I'm

368
00:25:29,499 --> 00:25:32,739
going to talk about a huge map system of

369
00:25:32,739 --> 00:25:36,909
modeling news networks before that I

370
00:25:36,909 --> 00:25:40,059
will present myself so I'm Janet or Tony

371
00:25:40,059 --> 00:25:43,179
I'm a PhD student in a chief agreement

372
00:25:43,179 --> 00:25:46,659
with the city inside you and I go Sofia

373
00:25:46,659 --> 00:25:49,629
I'm also reaching a pen tester and

374
00:25:49,629 --> 00:25:52,529
security constituents at a go Sofia

375
00:25:52,529 --> 00:25:55,330
so let's go back to the main subject so

376
00:25:55,330 --> 00:25:57,999
what are you a genius aug networks to

377
00:25:57,999 --> 00:26:00,460
understand what it is I took the example

378
00:26:00,460 --> 00:26:03,700
of the IOT deployments for a small

379
00:26:03,700 --> 00:26:06,700
company or personal usage and the first

380
00:26:06,700 --> 00:26:08,289
thing to do is to choose the huge

381
00:26:08,289 --> 00:26:11,139
technology you want to deploy in my case

382
00:26:11,139 --> 00:26:13,299
I choose the ZigBee protocols so I

383
00:26:13,299 --> 00:26:16,809
bought some devices compatible with CB

384
00:26:16,809 --> 00:26:20,129
protocols and deploy it in my network I

385
00:26:20,129 --> 00:26:23,889
connect the herb of the CB network to

386
00:26:23,889 --> 00:26:27,519
the private networks to use the smart

387
00:26:27,519 --> 00:26:29,169
phone applications or the web

388
00:26:29,169 --> 00:26:33,070
applications to manage or under the IOT

389
00:26:33,070 --> 00:26:37,419
networks sometimes later maybe months

390
00:26:37,419 --> 00:26:40,239
maybe years you want to extend the IOT

391
00:26:40,239 --> 00:26:46,690
networks and sorry and a new protocol is

392
00:26:46,690 --> 00:26:48,669
released with better performance and

393
00:26:48,669 --> 00:26:50,549
more suitable for your needs or your

394
00:26:50,549 --> 00:26:54,279
requirements in this case is the 6lowpan

395
00:26:54,279 --> 00:26:56,169
protocols so I choose these protocols

396
00:26:56,169 --> 00:26:58,690
and I want to deploy it in my network

397
00:26:58,690 --> 00:27:00,669
so just eyes for the ZigBee networks I

398
00:27:00,669 --> 00:27:03,609
bought some devices compatible with the

399
00:27:03,609 --> 00:27:05,859
6lowpan protocols and deploying it many

400
00:27:05,859 --> 00:27:09,639
deploy it in my network I connect the

401
00:27:09,639 --> 00:27:12,009
urban 6lowpan networks to my private

402
00:27:12,009 --> 00:27:15,849
networks and I can use the smartphone

403
00:27:15,849 --> 00:27:17,919
applications or the web applications to

404
00:27:17,919 --> 00:27:20,700
manage and secure pan

405
00:27:20,700 --> 00:27:24,729
but the thing I really want to do is to

406
00:27:24,729 --> 00:27:27,609
be able to connect some devices from the

407
00:27:27,609 --> 00:27:30,220
ZigBee networks to some devices to be

408
00:27:30,220 --> 00:27:33,399
6lowpan networks or in this current

409
00:27:33,399 --> 00:27:35,919
States none of the devices are able to

410
00:27:35,919 --> 00:27:38,619
communicate with develop protocols but

411
00:27:38,619 --> 00:27:41,710
to device our multi-protocol the

412
00:27:41,710 --> 00:27:46,929
neighbor and to good one one use the

413
00:27:46,929 --> 00:27:49,029
ZigBee protocols and the p80 protocols

414
00:27:49,029 --> 00:27:51,070
and you well use the secure Fence

415
00:27:51,070 --> 00:27:54,639
protocols and so I deployed a ble

416
00:27:54,639 --> 00:27:56,590
communications between food to hotels

417
00:27:56,590 --> 00:28:00,039
and I developed some applications to

418
00:28:00,039 --> 00:28:02,499
ensure that object from the ZigBee

419
00:28:02,499 --> 00:28:04,659
networks can be communicate can

420
00:28:04,659 --> 00:28:06,519
communicate to object from the sixth

421
00:28:06,519 --> 00:28:11,049
open protocols from Japan and to

422
00:28:11,049 --> 00:28:14,169
increase the functionalities or in my

423
00:28:14,169 --> 00:28:17,559
networks I deployed two of the object

424
00:28:17,559 --> 00:28:22,629
with PID communications so is the final

425
00:28:22,629 --> 00:28:24,849
state of my networks and in this

426
00:28:24,849 --> 00:28:27,129
networks there are three different

427
00:28:27,129 --> 00:28:29,320
protocols with different smartphone

428
00:28:29,320 --> 00:28:30,970
application or web applications to

429
00:28:30,970 --> 00:28:38,049
manage independently each network so it

430
00:28:38,049 --> 00:28:41,259
caused some security issues regarding

431
00:28:41,259 --> 00:28:44,229
some devices using different protocols

432
00:28:44,229 --> 00:28:48,070
and uncorrupted applications so what

433
00:28:48,070 --> 00:28:51,580
about the iut security the edge security

434
00:28:51,580 --> 00:28:55,389
is just as we slide very confused we can

435
00:28:55,389 --> 00:28:58,330
find every every kind of security

436
00:28:58,330 --> 00:29:01,899
threats from the information leaked with

437
00:29:01,899 --> 00:29:04,090
the teddy bear for examples to the most

438
00:29:04,090 --> 00:29:06,700
critical threats such as the human life

439
00:29:06,700 --> 00:29:11,229
attack where an attacker can make him

440
00:29:11,229 --> 00:29:12,370
would he take the control of

441
00:29:12,370 --> 00:29:16,420
bigger and activate or Disick reached so

442
00:29:16,420 --> 00:29:19,510
I'll can how can we improve the IOT

443
00:29:19,510 --> 00:29:23,410
security from my experiences as a pen

444
00:29:23,410 --> 00:29:26,320
tester I think that the penetration

445
00:29:26,320 --> 00:29:28,870
penetration testing solution is a good

446
00:29:28,870 --> 00:29:30,850
thing to evaluate or improve the

447
00:29:30,850 --> 00:29:34,900
security of networks and penetration

448
00:29:34,900 --> 00:29:38,380
testing follows some methodology divided

449
00:29:38,380 --> 00:29:41,410
in different steps and in this

450
00:29:41,410 --> 00:29:43,900
presentation we will focus on the first

451
00:29:43,900 --> 00:29:47,320
step the information given step or more

452
00:29:47,320 --> 00:29:52,150
precisely how to model networks of

453
00:29:52,150 --> 00:29:55,960
course it exists very multiple tools to

454
00:29:55,960 --> 00:30:00,130
playing with with IU chip attackers I

455
00:30:00,130 --> 00:30:03,250
said I said some killer bees a good

456
00:30:03,250 --> 00:30:06,240
mentor for ZigBee protocols we are

457
00:30:06,240 --> 00:30:08,530
Beetlejuice orbital trap for ble

458
00:30:08,530 --> 00:30:13,350
communication and so and so on however

459
00:30:13,350 --> 00:30:17,650
in this list of tools its tools are its

460
00:30:17,650 --> 00:30:20,140
tools is specific to unique protocols

461
00:30:20,140 --> 00:30:24,309
and cannot use to analyze or play with

462
00:30:24,309 --> 00:30:27,460
another protocols so what about 800

463
00:30:27,460 --> 00:30:30,040
genius networks in which there are

464
00:30:30,040 --> 00:30:34,179
multiple protocols deploys in this

465
00:30:34,179 --> 00:30:39,370
presentation I present a IOT map that is

466
00:30:39,370 --> 00:30:42,670
a tools that may have different existing

467
00:30:42,670 --> 00:30:46,000
tools to be able to intercept to play

468
00:30:46,000 --> 00:30:49,590
and analyze different iug protocols

469
00:30:49,590 --> 00:30:54,059
simultaneously to do that we provide

470
00:30:54,059 --> 00:30:57,190
enough stick to divide it in three parts

471
00:30:57,190 --> 00:31:01,750
with the sniffing - sniffing parts that

472
00:31:01,750 --> 00:31:05,530
collect and instantiate different

473
00:31:05,530 --> 00:31:10,110
existing tools for instance we can use

474
00:31:10,110 --> 00:31:13,030
the USB stick with the key table

475
00:31:13,030 --> 00:31:16,030
firmware embedded to intercept ZigBee

476
00:31:16,030 --> 00:31:21,520
communications we can use CC 25:31

477
00:31:21,520 --> 00:31:23,950
device with the same sniff

478
00:31:23,950 --> 00:31:25,630
film where to intercept check slope and

479
00:31:25,630 --> 00:31:26,000
come

480
00:31:26,000 --> 00:31:28,280
chants or we can use the Beatles action

481
00:31:28,280 --> 00:31:31,700
we're in the mobile devices to intercept

482
00:31:31,700 --> 00:31:35,800
VLE communications its devices produce

483
00:31:35,800 --> 00:31:40,420
its device produce pickup of the

484
00:31:40,420 --> 00:31:43,760
intercepted communications and we merge

485
00:31:43,760 --> 00:31:45,980
our food speak app using a unified

486
00:31:45,980 --> 00:31:50,390
format we defined and use this this this

487
00:31:50,390 --> 00:31:54,020
file to produce the modeling so the file

488
00:31:54,020 --> 00:31:59,600
is is take as input by the modeling

489
00:31:59,600 --> 00:32:02,960
modules regenerate modeling as we can

490
00:32:02,960 --> 00:32:05,330
see on the on the right side of the

491
00:32:05,330 --> 00:32:09,470
slide and database and visualization

492
00:32:09,470 --> 00:32:12,410
module is partly to allow the user of

493
00:32:12,410 --> 00:32:17,060
the eh map to see the UH presentation of

494
00:32:17,060 --> 00:32:20,570
the network let's get deeper in the

495
00:32:20,570 --> 00:32:24,740
modeling modules as I said the modeling

496
00:32:24,740 --> 00:32:26,930
modules produce a modeling based on a

497
00:32:26,930 --> 00:32:30,350
graph and we decline the modeling into

498
00:32:30,350 --> 00:32:33,710
four different graphs where it's greif

499
00:32:33,710 --> 00:32:37,430
brings a new knowledge a new level of

500
00:32:37,430 --> 00:32:40,550
informations that can be used to the

501
00:32:40,550 --> 00:32:43,940
second to the next graph to be built we

502
00:32:43,940 --> 00:32:46,130
use an iterative approach and start from

503
00:32:46,130 --> 00:32:49,250
the Telegraph the turtling graph I'll

504
00:32:49,250 --> 00:32:52,060
add some point-to-point communications

505
00:32:52,060 --> 00:32:55,370
so as we can see in the future writes in

506
00:32:55,370 --> 00:32:58,910
the picture right right to the text we

507
00:32:58,910 --> 00:33:03,490
are four different devices where it's

508
00:33:03,490 --> 00:33:06,170
communication between two device our

509
00:33:06,170 --> 00:33:09,050
present is represented by you draw with

510
00:33:09,050 --> 00:33:11,360
the arrow representing the orientation

511
00:33:11,360 --> 00:33:16,520
of the communication and the unified

512
00:33:16,520 --> 00:33:19,070
file format is used to produce this data

513
00:33:19,070 --> 00:33:21,920
data link graph when this graph is

514
00:33:21,920 --> 00:33:25,280
produced the information blinked proof

515
00:33:25,280 --> 00:33:28,370
that this this graph is used to build

516
00:33:28,370 --> 00:33:32,320
the network graph so the network graph

517
00:33:32,320 --> 00:33:34,670
highlights end-to-end communications

518
00:33:34,670 --> 00:33:37,100
what I mean by entwine communications is

519
00:33:37,100 --> 00:33:39,860
the real destination of the

520
00:33:39,860 --> 00:33:42,290
when the device want to send an

521
00:33:42,290 --> 00:33:45,440
information to a device if this device

522
00:33:45,440 --> 00:33:51,280
is not in the radio range the message

523
00:33:51,280 --> 00:33:54,050
passed through differents up to reach

524
00:33:54,050 --> 00:33:56,530
the destination in the network graph

525
00:33:56,530 --> 00:33:59,810
represent directly the the final

526
00:33:59,810 --> 00:34:02,870
destinations so as we can see the lights

527
00:34:02,870 --> 00:34:06,530
on top of the picture in reality

528
00:34:06,530 --> 00:34:09,620
communicate with the router in bottom

529
00:34:09,620 --> 00:34:14,840
right of the picture and to do to make

530
00:34:14,840 --> 00:34:17,659
this graph we use network relative

531
00:34:17,659 --> 00:34:21,429
information store into data link graph

532
00:34:21,429 --> 00:34:26,270
now weave the information bring print by

533
00:34:26,270 --> 00:34:29,780
the way to network graph we produce two

534
00:34:29,780 --> 00:34:31,989
transport craft transport graph

535
00:34:31,989 --> 00:34:34,909
highlights expose the role of each

536
00:34:34,909 --> 00:34:39,590
device and exposed to data flow so as we

537
00:34:39,590 --> 00:34:42,739
can see here we have a video external

538
00:34:42,739 --> 00:34:44,239
communication between the light and the

539
00:34:44,239 --> 00:34:47,500
water and in the transport graph we

540
00:34:47,500 --> 00:34:50,120
replace this video channel

541
00:34:50,120 --> 00:34:55,489
communications to an oriented one-way

542
00:34:55,489 --> 00:34:58,160
communications from the light to the

543
00:34:58,160 --> 00:35:02,060
controller and we tag the delight with

544
00:35:02,060 --> 00:35:04,100
the sauce hole and the controller and

545
00:35:04,100 --> 00:35:07,130
hotel with the controller hole we have

546
00:35:07,130 --> 00:35:10,250
three different hole source sink and

547
00:35:10,250 --> 00:35:14,180
controller and to determine the hole of

548
00:35:14,180 --> 00:35:17,330
a device we define some patterns we use

549
00:35:17,330 --> 00:35:19,040
to the network graph in the network

550
00:35:19,040 --> 00:35:22,490
graph to produce the result as we can

551
00:35:22,490 --> 00:35:26,720
see you know finally we have the

552
00:35:26,720 --> 00:35:28,550
application graph the last graph of the

553
00:35:28,550 --> 00:35:32,060
modelling and this application graph

554
00:35:32,060 --> 00:35:35,840
represents all focus on an application

555
00:35:35,840 --> 00:35:38,810
that I each map is able to detect we

556
00:35:38,810 --> 00:35:42,380
defined different patterns where one

557
00:35:42,380 --> 00:35:44,960
patterns present one application data

558
00:35:44,960 --> 00:35:49,100
each map is able to detect and on the on

559
00:35:49,100 --> 00:35:52,130
the picture on the right of the text we

560
00:35:52,130 --> 00:35:53,500
can see that

561
00:35:53,500 --> 00:35:57,830
finally the lights interact according to

562
00:35:57,830 --> 00:36:03,340
our patterns to the outlets in this case

563
00:36:03,580 --> 00:36:10,100
so before to do a small demonstration I

564
00:36:10,100 --> 00:36:13,220
will present the setup I used to make

565
00:36:13,220 --> 00:36:16,580
the demonstrations so we deploy physical

566
00:36:16,580 --> 00:36:19,910
test bed with three different protocols

567
00:36:19,910 --> 00:36:22,460
to see people to curse the ble protocols

568
00:36:22,460 --> 00:36:27,950
and the 6lowpan protocols we deploy 12

569
00:36:27,950 --> 00:36:32,050
and devices with the different specific

570
00:36:32,050 --> 00:36:35,570
specificities sorry and we develop

571
00:36:35,570 --> 00:36:37,400
several applicants and several

572
00:36:37,400 --> 00:36:39,380
applications such as monitoring

573
00:36:39,380 --> 00:36:41,540
applications or actuator sensor

574
00:36:41,540 --> 00:36:44,960
applications to the demo I intercept one

575
00:36:44,960 --> 00:36:48,650
hour of traffic to be to to make the

576
00:36:48,650 --> 00:36:52,010
demonstration moralist so let's go to

577
00:36:52,010 --> 00:36:55,160
the demonstrations everyone can see the

578
00:36:55,160 --> 00:37:03,140
two part of the screen so on the boot on

579
00:37:03,140 --> 00:37:04,870
the bottom of the screen we are the

580
00:37:04,870 --> 00:37:06,650
framework which map

581
00:37:06,650 --> 00:37:09,410
I already launched and import different

582
00:37:09,410 --> 00:37:14,000
caps from IOT networks because regarding

583
00:37:14,000 --> 00:37:15,800
the size of the pickups it may take some

584
00:37:15,800 --> 00:37:19,670
times to import the pickups in the

585
00:37:19,670 --> 00:37:23,000
database and on the tab on the top of

586
00:37:23,000 --> 00:37:27,410
the screen we have the new FRG web

587
00:37:27,410 --> 00:37:30,770
applications allowing us to see the

588
00:37:30,770 --> 00:37:32,800
whole presentation the Moody

589
00:37:32,800 --> 00:37:38,270
so the when we import the epic apps the

590
00:37:38,270 --> 00:37:41,740
first thing the ihe Maps automatically

591
00:37:41,740 --> 00:37:44,510
generates the first the first graph the

592
00:37:44,510 --> 00:37:47,960
data in graph and as we can see here the

593
00:37:47,960 --> 00:37:50,930
relation type the relationship type

594
00:37:50,930 --> 00:37:55,520
sections highlight the different graph

595
00:37:55,520 --> 00:37:58,970
but a store but a stone in the database

596
00:37:58,970 --> 00:38:02,360
so if we click on the layer two we

597
00:38:02,360 --> 00:38:05,020
observe some

598
00:38:05,690 --> 00:38:07,610
we observed a graph representing the

599
00:38:07,610 --> 00:38:11,240
data in graph ihe map is able to produce

600
00:38:11,240 --> 00:38:14,750
according to the difference interception

601
00:38:14,750 --> 00:38:18,920
from different huger networks so from

602
00:38:18,920 --> 00:38:22,730
from this graph we're gonna create the

603
00:38:22,730 --> 00:38:27,980
network graph so it may take some times

604
00:38:27,980 --> 00:38:33,490
to to new 4G to refresh the patch so so

605
00:38:33,490 --> 00:38:36,980
the network graph appear here but if if

606
00:38:36,980 --> 00:38:38,900
you take some times you can just replace

607
00:38:38,900 --> 00:38:43,760
the page to accelerate the directory

608
00:38:43,760 --> 00:38:47,540
search so if we if we click on the new

609
00:38:47,540 --> 00:38:51,590
layer 3 the layer 3 is just a simple

610
00:38:51,590 --> 00:38:52,850
version of the network graph

611
00:38:52,850 --> 00:38:57,110
representing here and compared to the

612
00:38:57,110 --> 00:39:00,740
layer 2 we have some more edges between

613
00:39:00,740 --> 00:39:05,380
devices representing the network

614
00:39:05,380 --> 00:39:09,620
communications so from this graph let's

615
00:39:09,620 --> 00:39:17,570
create the transport graph database and

616
00:39:17,570 --> 00:39:20,540
here we have the control curve as you

617
00:39:20,540 --> 00:39:24,050
can see it's not on the layer free graph

618
00:39:24,050 --> 00:39:27,710
has been tagged with the whole of the

619
00:39:27,710 --> 00:39:30,610
devices into networks and HP directional

620
00:39:30,610 --> 00:39:34,400
communications are replaced by one-way

621
00:39:34,400 --> 00:39:36,080
communications from the source to the

622
00:39:36,080 --> 00:39:40,660
sink or the controller so we have a some

623
00:39:40,660 --> 00:39:43,040
representation of device and the whole

624
00:39:43,040 --> 00:39:45,470
of each device in the networks and

625
00:39:45,470 --> 00:39:50,180
finally we just read the application

626
00:39:50,180 --> 00:39:51,839
graph

627
00:39:51,839 --> 00:39:57,520
let's confess to adapt to to get the

628
00:39:57,520 --> 00:40:00,520
graph yeah we have

629
00:40:00,520 --> 00:40:05,349
so the the interact pattern but I each

630
00:40:05,349 --> 00:40:08,050
map is able to detect and we can see

631
00:40:08,050 --> 00:40:12,180
that some nodes are involved in the

632
00:40:12,180 --> 00:40:15,849
applications do you think that is

633
00:40:15,849 --> 00:40:18,790
important to say is that this node with

634
00:40:18,790 --> 00:40:20,980
the name hz2 is involved in three

635
00:40:20,980 --> 00:40:24,490
different interaction with do not with

636
00:40:24,490 --> 00:40:27,430
an M 81 with an M 85 and the device

637
00:40:27,430 --> 00:40:31,510
we've done emoji for if we go back to

638
00:40:31,510 --> 00:40:35,920
the translate and take do not with the

639
00:40:35,920 --> 00:40:41,380
name ID with animate

640
00:40:41,380 --> 00:40:45,010
too but that is involved in the three

641
00:40:45,010 --> 00:40:48,280
different attraction and with the name

642
00:40:48,280 --> 00:40:52,180
85 we can see that normally first two

643
00:40:52,180 --> 00:40:53,589
device are not able to communicate

644
00:40:53,589 --> 00:41:04,780
directly and this device is usually

645
00:41:04,780 --> 00:41:06,819
using ble communications to to

646
00:41:06,819 --> 00:41:10,000
communicate and this device use ZigBee

647
00:41:10,000 --> 00:41:12,520
communications so the pattern we define

648
00:41:12,520 --> 00:41:14,680
to detect interaction between

649
00:41:14,680 --> 00:41:17,730
device in the networks is able to

650
00:41:17,730 --> 00:41:21,030
abstract the protocol use to communicate

651
00:41:21,030 --> 00:41:24,910
in order to detect if some devices

652
00:41:24,910 --> 00:41:29,500
interact with other devices so let's go

653
00:41:29,500 --> 00:41:31,060
back to the demonstration the

654
00:41:31,060 --> 00:41:34,569
presentation sorry so to conclude we

655
00:41:34,569 --> 00:41:38,380
have different statements in currently

656
00:41:38,380 --> 00:41:41,020
aut security is mostly focused on model

657
00:41:41,020 --> 00:41:43,180
protocol as we can see there are some

658
00:41:43,180 --> 00:41:45,940
tools but providing some security

659
00:41:45,940 --> 00:41:52,050
features to a unique protocol and

660
00:41:52,050 --> 00:41:54,970
etiologies heterogeneous networks will

661
00:41:54,970 --> 00:41:57,670
be more and more presence making legacy

662
00:41:57,670 --> 00:42:01,200
networks that are highly updated

663
00:42:01,200 --> 00:42:04,640
remaining the weaknesses of two networks

664
00:42:04,640 --> 00:42:11,239
and what we consider is - today the huge

665
00:42:11,239 --> 00:42:13,729
security from Google vision and not from

666
00:42:13,729 --> 00:42:17,119
a single point of view from the protocol

667
00:42:17,119 --> 00:42:20,479
or the device for example as future

668
00:42:20,479 --> 00:42:23,319
works you know a lot of future works

669
00:42:23,319 --> 00:42:27,469
such as to improve aut map for different

670
00:42:27,469 --> 00:42:29,689
tasks such as the information gathering

671
00:42:29,689 --> 00:42:34,009
by adding an encrypted traffic analysis

672
00:42:34,009 --> 00:42:36,019
add more patterns who to take more

673
00:42:36,019 --> 00:42:38,929
applications and add more protocols to

674
00:42:38,929 --> 00:42:43,309
be able to analyze more networks so

675
00:42:43,309 --> 00:42:45,910
thank you for your attentions if you are

676
00:42:45,910 --> 00:42:50,229
some questions feel free to ask them

677
00:42:50,349 --> 00:42:52,549
thank you very much for this

678
00:42:52,549 --> 00:42:57,489
presentation I think you have already

679
00:42:57,489 --> 00:43:00,559
two question if you can read them and

680
00:43:00,559 --> 00:43:04,009
then Anne thousand you have got it you

681
00:43:04,009 --> 00:43:09,019
have got them on Q&A section so the

682
00:43:09,019 --> 00:43:10,309
first question how do different

683
00:43:10,309 --> 00:43:13,039
interfaces on different thickness of one

684
00:43:13,039 --> 00:43:14,989
single device can be mapped as belonging

685
00:43:14,989 --> 00:43:17,509
on the same note typically they have

686
00:43:17,509 --> 00:43:21,559
different mics so yeah it's not done

687
00:43:21,559 --> 00:43:24,249
automatically we need the human

688
00:43:24,249 --> 00:43:27,579
interaction to make the mapping between

689
00:43:27,579 --> 00:43:31,449
devices between device using different

690
00:43:31,449 --> 00:43:37,609
interfaces the second questions are the

691
00:43:37,609 --> 00:43:39,469
automated Austin don't wait to see some

692
00:43:39,469 --> 00:43:43,539
part of the traffic being encapsulated

693
00:43:44,349 --> 00:43:47,539
traffic being encapsulated on another

694
00:43:47,539 --> 00:43:48,969
physical layer

695
00:43:48,969 --> 00:43:51,319
ZigBee trafficking they did in some

696
00:43:51,319 --> 00:43:56,469
intermediate fulfilling I don't know we

697
00:43:56,469 --> 00:44:02,799
use devices intercepting Aug photo calls

698
00:44:02,799 --> 00:44:07,179
communications we don't use an

699
00:44:07,179 --> 00:44:11,239
encapsulated traffic better it's it's a

700
00:44:11,239 --> 00:44:16,660
very good point to to explore

701
00:44:21,200 --> 00:44:25,260
maybe yeah maybe another question

702
00:44:25,260 --> 00:44:35,580
question yeah I had another question do

703
00:44:35,580 --> 00:44:37,950
you think he could be interesting and on

704
00:44:37,950 --> 00:44:41,670
the graph representation to put

705
00:44:41,670 --> 00:44:43,920
different colors

706
00:44:43,920 --> 00:44:47,340
regarding the the protocol yeah yeah

707
00:44:47,340 --> 00:44:54,210
yeah it's a it's a request I will do to

708
00:44:54,210 --> 00:44:56,130
make sure that we represent each

709
00:44:56,130 --> 00:44:59,310
protocol for the device to be able to

710
00:44:59,310 --> 00:45:03,030
separate some some devices using photo

711
00:45:03,030 --> 00:45:06,660
cards okay it's a new 4G configuration

712
00:45:06,660 --> 00:45:08,790
it's a bit confused

713
00:45:08,790 --> 00:45:13,440
to use them for okay I see and yeah my

714
00:45:13,440 --> 00:45:17,280
other idea was a our question was do you

715
00:45:17,280 --> 00:45:20,790
think you can have something the graph

716
00:45:20,790 --> 00:45:24,360
representation would you be able to have

717
00:45:24,360 --> 00:45:26,960
a graph representation that will evolve

718
00:45:26,960 --> 00:45:30,840
in real time if you add new information

719
00:45:30,840 --> 00:45:35,370
like some kind of discovery progressive

720
00:45:35,370 --> 00:45:40,680
discovery it it may be possible as if

721
00:45:40,680 --> 00:45:45,000
you walk for examples but as we treat

722
00:45:45,000 --> 00:45:47,730
each packets intercepted from each

723
00:45:47,730 --> 00:45:52,820
protocols we can we cannot really have a

724
00:45:52,820 --> 00:45:55,980
live representation from the scene to

725
00:45:55,980 --> 00:46:02,880
the to the model but we I think the

726
00:46:02,880 --> 00:46:05,250
representation he will be a bit delay

727
00:46:05,250 --> 00:46:09,960
from the the interceptions so for but

728
00:46:09,960 --> 00:46:13,140
for forties demonstrations I'm not able

729
00:46:13,140 --> 00:46:16,020
to to make the demo for live stiffing

730
00:46:16,020 --> 00:46:18,360
and a representation of the networks but

731
00:46:18,360 --> 00:46:22,160
I think it's possible

732
00:46:30,490 --> 00:46:33,269
[Music]

733
00:46:33,269 --> 00:47:26,469
we have to if if we have some auditors

734
00:47:26,469 --> 00:47:30,419
to some more data to a huge map you will

735
00:47:30,419 --> 00:47:36,130
add some devices during the analysis of

736
00:47:36,130 --> 00:47:39,640
the data so I think if I knew that if a

737
00:47:39,640 --> 00:47:43,059
new device start communications it will

738
00:47:43,059 --> 00:47:45,429
represent it in the it will be

739
00:47:45,429 --> 00:47:49,979
represented in in the integral yeah

740
00:47:50,650 --> 00:47:54,369
a new feature I think it it will better

741
00:47:54,369 --> 00:48:00,029
weapons to your questions is to make

742
00:48:00,029 --> 00:48:05,109
time feature a timestamp feature to to

743
00:48:05,109 --> 00:48:07,749
the generation of of the network for

744
00:48:07,749 --> 00:48:10,749
example we want to generate only the

745
00:48:10,749 --> 00:48:15,729
21st minutes of the interceptions and if

746
00:48:15,729 --> 00:48:19,209
a device did not communicate during

747
00:48:19,209 --> 00:48:21,939
these these 20 minutes of of

748
00:48:21,939 --> 00:48:24,519
interceptions it will be that present in

749
00:48:24,519 --> 00:48:28,959
the graph and if we if we are focused on

750
00:48:28,959 --> 00:48:34,839
the 20 remaining minute of of intubation

751
00:48:34,839 --> 00:48:36,549
deceptions sorry

752
00:48:36,549 --> 00:48:40,029
it will be appear in the graph so we

753
00:48:40,029 --> 00:48:42,789
just have to manage to add some

754
00:48:42,789 --> 00:48:46,719
timestamp to fix the analysis of the

755
00:48:46,719 --> 00:48:55,449
interceptions while I think you managed

756
00:48:55,449 --> 00:49:02,529
which time limit live demonstration with

757
00:49:02,529 --> 00:49:07,239
question it's perfect so Alice Frank for

758
00:49:07,239 --> 00:49:11,679
your chalk and I am going to to let

759
00:49:11,679 --> 00:49:16,380
Matthew to introduce you our blue team

760
00:49:16,380 --> 00:49:19,209
time part of the aussie afternoon

761
00:49:19,209 --> 00:49:20,650
nigeria thank you

762
00:49:20,650 --> 00:49:27,579
all right thanks okay so the next orc of

763
00:49:27,579 --> 00:49:29,939
the afternoon will be more about

764
00:49:29,939 --> 00:49:33,160
detection and and defense against

765
00:49:33,160 --> 00:49:37,719
attacks next stork will be by Eric low

766
00:49:37,719 --> 00:49:42,489
blow and determine F from ysf so there

767
00:49:42,489 --> 00:49:46,029
they will talk about the well the rise

768
00:49:46,029 --> 00:49:47,920
of encrypted traffic on the internet on

769
00:49:47,920 --> 00:49:54,249
our IDs tools can be used today to try

770
00:49:54,249 --> 00:49:58,809
to detect attack patterns now regarding

771
00:49:58,809 --> 00:50:04,630
this and well Eric and Peter as you did

772
00:50:04,630 --> 00:50:06,339
not participate in the documentation

773
00:50:06,339 --> 00:50:24,130
test we will completely trust you sure

774
00:50:24,130 --> 00:50:28,080
I'm going to be presenting now fast

775
00:50:28,080 --> 00:50:31,219
[Music]

776
00:50:39,790 --> 00:50:45,940
just once acronyms okay so we see Peter

777
00:50:46,270 --> 00:50:50,650
you folks see me I hear me okay yeah

778
00:50:50,650 --> 00:50:55,280
okay great so we have you should

779
00:50:55,280 --> 00:50:59,480
probably see by our slides here that's

780
00:50:59,480 --> 00:51:02,020
coming up all right

781
00:51:02,290 --> 00:51:07,570
okay perfect so welcome to this talk

782
00:51:07,570 --> 00:51:11,150
Eric and myself will be actually walking

783
00:51:11,150 --> 00:51:13,430
you through some slides and actual

784
00:51:13,430 --> 00:51:16,970
hands-on example how to hunt threats

785
00:51:16,970 --> 00:51:20,120
that use encrypted network traffic more

786
00:51:20,120 --> 00:51:25,660
on the ideas in NSM part of the defense

787
00:51:25,660 --> 00:51:29,620
first a couple of words for us

788
00:51:29,620 --> 00:51:34,190
Sarah myself Peter Manaf I am part of

789
00:51:34,190 --> 00:51:38,180
the USF exact team involved with QA and

790
00:51:38,180 --> 00:51:39,200
training

791
00:51:39,200 --> 00:51:43,280
I'm also chief strategy officer at Sam's

792
00:51:43,280 --> 00:51:45,830
networks and it's always safe and by

793
00:51:45,830 --> 00:51:47,420
open source work boots so the candidate

794
00:51:47,420 --> 00:51:51,560
I met Eric and we became very good

795
00:51:51,560 --> 00:52:05,480
friends and colleagues so that is a

796
00:52:05,480 --> 00:52:08,060
company but he's doing sense that we

797
00:52:08,060 --> 00:52:12,650
will be using this torch and project

798
00:52:12,650 --> 00:52:18,680
based on soy data so he's talking about

799
00:52:18,680 --> 00:52:19,280
sericata

800
00:52:19,280 --> 00:52:21,530
what it is you probably have heard about

801
00:52:21,530 --> 00:52:25,370
it it's a basically ids/ips network

802
00:52:25,370 --> 00:52:27,260
security monitoring engine very high

803
00:52:27,260 --> 00:52:31,250
performance multivariate scales very

804
00:52:31,250 --> 00:52:33,670
good it's open source software of course

805
00:52:33,670 --> 00:52:36,680
it's alton developed by nonprofit

806
00:52:36,680 --> 00:52:38,480
foundation the open security the open

807
00:52:38,480 --> 00:52:44,230
Information Security foundation and

808
00:52:44,230 --> 00:52:46,970
produces high level situational words

809
00:52:46,970 --> 00:52:48,710
and detail application layer transaction

810
00:52:48,710 --> 00:52:51,470
records which will demo hands-on as well

811
00:52:51,470 --> 00:52:54,220
especially when we're talking about

812
00:52:54,220 --> 00:52:59,120
malware using encrypted traffic so I'll

813
00:52:59,120 --> 00:53:01,070
transfer here over to Eric and then I'll

814
00:53:01,070 --> 00:53:03,020
come back to your folks when when we

815
00:53:03,020 --> 00:53:05,330
turned some hands on I will you tackle

816
00:53:05,330 --> 00:53:08,390
some hands-on strains yeah so what

817
00:53:08,390 --> 00:53:11,090
should we cook up here is basically what

818
00:53:11,090 --> 00:53:15,080
can we get out of keyless when if you

819
00:53:15,080 --> 00:53:21,080
consider a network network as the

820
00:53:21,080 --> 00:53:23,810
polygon to company so that's a big

821
00:53:23,810 --> 00:53:25,940
problem as for visibility because all

822
00:53:25,940 --> 00:53:29,810
the other ideas we are just considering

823
00:53:29,810 --> 00:53:32,150
like a grip on the network to find some

824
00:53:32,150 --> 00:53:34,130
pattern it will not work anymore because

825
00:53:34,130 --> 00:53:36,470
everything is encrypted so we need to be

826
00:53:36,470 --> 00:53:38,060
a little bit more clever so it will show

827
00:53:38,060 --> 00:53:40,010
you what has been done in sericata

828
00:53:40,010 --> 00:53:46,850
to analyze with heinous actions get

829
00:53:46,850 --> 00:53:48,800
information out of it that can be used

830
00:53:48,800 --> 00:53:52,550
for certainty on for detection so what

831
00:53:52,550 --> 00:53:54,470
we have is that we have genus event so

832
00:53:54,470 --> 00:53:57,050
with generic transaction for every GS on

833
00:53:57,050 --> 00:53:59,480
shake where we're not very event where

834
00:53:59,480 --> 00:54:01,280
we did take something strange on a photo

835
00:54:01,280 --> 00:54:01,790
car

836
00:54:01,790 --> 00:54:03,920
elapse besan cheela some very good

837
00:54:03,920 --> 00:54:06,260
something that we focused on which is

838
00:54:06,260 --> 00:54:07,910
esp on SPS

839
00:54:07,910 --> 00:54:12,670
so if triumph on summer identification

840
00:54:13,480 --> 00:54:15,470
of implementation Zowie

841
00:54:15,470 --> 00:54:18,340
and for that we will be using the cell

842
00:54:18,340 --> 00:54:21,530
phones on part but is a freely available

843
00:54:21,530 --> 00:54:28,280
open source distribution which is ready

844
00:54:28,280 --> 00:54:30,350
to users so you can turn on interfaces

845
00:54:30,350 --> 00:54:33,680
so telephone shake I think we have been

846
00:54:33,680 --> 00:54:35,990
lot of people here should know what is a

847
00:54:35,990 --> 00:54:37,310
terrace on shake so that's the

848
00:54:37,310 --> 00:54:40,790
negotiation at the beginning of

849
00:54:40,790 --> 00:54:42,950
illustration so it's everything that is

850
00:54:42,950 --> 00:54:45,170
actions before encryption where we

851
00:54:45,170 --> 00:54:48,800
negotiate the public key cryptography

852
00:54:48,800 --> 00:54:55,670
organism this kind of so jealous once

853
00:54:55,670 --> 00:54:57,410
it's switched from PG if you are not

854
00:54:57,410 --> 00:54:59,060
doing interception

855
00:54:59,060 --> 00:55:00,800
like many familiar on finger but you

856
00:55:00,800 --> 00:55:02,330
don't see anything whether you can see

857
00:55:02,330 --> 00:55:04,220
things in particular some

858
00:55:04,220 --> 00:55:11,510
that's where I can taste doing so what

859
00:55:11,510 --> 00:55:13,520
so you gotta is doing is a unshaken that

860
00:55:13,520 --> 00:55:15,820
easy so it decode the tedious message

861
00:55:15,820 --> 00:55:18,170
extract information on it output

862
00:55:18,170 --> 00:55:20,630
information and dedicated events so for

863
00:55:20,630 --> 00:55:23,450
every TLS connection you can generate a

864
00:55:23,450 --> 00:55:26,360
visa event with all the information but

865
00:55:26,360 --> 00:55:30,290
we cater was able to extract from the

866
00:55:30,290 --> 00:55:33,950
connection so basic information the

867
00:55:33,950 --> 00:55:37,760
subject of certificate on name

868
00:55:37,760 --> 00:55:40,730
indication the subject of issue again

869
00:55:40,730 --> 00:55:43,510
the fingerprint but it's quite useful to

870
00:55:43,510 --> 00:55:46,100
identify your Bible certificate in the

871
00:55:46,100 --> 00:55:51,620
way we can use this feature extraction

872
00:55:51,620 --> 00:55:55,970
to elect on this so you can make match

873
00:55:55,970 --> 00:55:59,840
on us on this Sheila's field to be able

874
00:55:59,840 --> 00:56:03,700
to detect some bad behavior or some bad

875
00:56:03,700 --> 00:56:06,950
certificate or someone hidden substitute

876
00:56:06,950 --> 00:56:09,260
Authority for example we can also

877
00:56:09,260 --> 00:56:12,170
extract on disk the certificate so if

878
00:56:12,170 --> 00:56:15,530
you want to you can modify an alert to

879
00:56:15,530 --> 00:56:19,610
say oh if I see that certificate said to

880
00:56:19,610 --> 00:56:22,270
be exactly honest there is two

881
00:56:22,270 --> 00:56:25,250
additional mythologies on this yes that

882
00:56:25,250 --> 00:56:28,460
will be detail later but in fact

883
00:56:28,460 --> 00:56:30,290
client or server but its implementation

884
00:56:30,290 --> 00:56:33,050
basically we can get jealous user agent

885
00:56:33,050 --> 00:56:40,310
concept using viciously so every is an

886
00:56:40,310 --> 00:56:46,820
example of gs-12 event in Qatar so the

887
00:56:46,820 --> 00:56:54,410
first is this is the information about

888
00:56:54,410 --> 00:57:04,450
the certificate design the negotiation

889
00:57:04,450 --> 00:57:06,680
when you will resist here we get into

890
00:57:06,680 --> 00:57:09,770
the time into that later after you can

891
00:57:09,770 --> 00:57:12,230
not after elevation within your feet but

892
00:57:12,230 --> 00:57:15,830
is the same as you can expect farm but

893
00:57:15,830 --> 00:57:17,330
was that when you connect website if you

894
00:57:17,330 --> 00:57:19,510
ask you Firefox or Chrome to display the

895
00:57:19,510 --> 00:57:22,460
GS information typically fingerprint so

896
00:57:22,460 --> 00:57:25,040
that's where you can use that and you've

897
00:57:25,040 --> 00:57:27,020
got a nice cell phone name indication

898
00:57:27,020 --> 00:57:31,760
but it's really just because just it's

899
00:57:31,760 --> 00:57:34,670
in fact the host name of the post about

900
00:57:34,670 --> 00:57:37,400
22 so when we open when you open the

901
00:57:37,400 --> 00:57:39,640
collation the connection to a DNS server

902
00:57:39,640 --> 00:57:42,080
there is this extortion based on a

903
00:57:42,080 --> 00:57:44,180
medication where the client is asking

904
00:57:44,180 --> 00:57:46,640
I want this website so this was affixed

905
00:57:46,640 --> 00:57:49,880
to otherwise the fact that we cannot

906
00:57:49,880 --> 00:57:56,830
keep running a website on keep others

907
00:57:56,830 --> 00:58:03,950
jealous service on using this mechanism

908
00:58:03,950 --> 00:58:05,960
to know which did you get to it on then

909
00:58:05,960 --> 00:58:07,220
we've got the subject which is the

910
00:58:07,220 --> 00:58:10,610
subject of a certificate so which side

911
00:58:10,610 --> 00:58:21,619
is supposed to be used on so you see we

912
00:58:21,619 --> 00:58:24,260
get a lot of feel but I expected from

913
00:58:24,260 --> 00:58:27,109
the surrogate I event on then we've got

914
00:58:27,109 --> 00:58:30,200
mesh that keyword from the surrogate our

915
00:58:30,200 --> 00:58:33,170
own ways that we can be used to say but

916
00:58:33,170 --> 00:58:35,180
we want to match on some specific heat

917
00:58:35,180 --> 00:58:39,170
to find information on to generate to

918
00:58:39,170 --> 00:58:41,960
direct from the IDS part of circuit up

919
00:58:41,960 --> 00:58:45,230
on then we say that we'd be honored by

920
00:58:45,230 --> 00:58:48,260
at least to see if if we're if we need

921
00:58:48,260 --> 00:58:50,450
to trigger instant response so for

922
00:58:50,450 --> 00:58:54,340
example when the first example I give is

923
00:58:54,340 --> 00:58:57,950
you want to check whether you pay over

924
00:58:57,950 --> 00:59:01,550
expensive PGI is used correctly in your

925
00:59:01,550 --> 00:59:02,180
network

926
00:59:02,180 --> 00:59:04,460
so when way to do it will be to connect

927
00:59:04,460 --> 00:59:08,440
on all the server on shake when both

928
00:59:08,619 --> 00:59:11,030
properties of every software and

929
00:59:11,030 --> 00:59:11,690
encoding

930
00:59:11,690 --> 00:59:14,000
indeed whatever ways that we passively

931
00:59:14,000 --> 00:59:16,310
make sure I can tell you just say I want

932
00:59:16,310 --> 00:59:18,859
the self I want an alert as soon as the

933
00:59:18,859 --> 00:59:21,650
certissue a service ticket authority

934
00:59:21,650 --> 00:59:22,940
that design

935
00:59:22,940 --> 00:59:24,800
certificate is not the one for my

936
00:59:24,800 --> 00:59:27,560
company so this whiskey on the left and

937
00:59:27,560 --> 00:59:29,240
but you can just under very eternally we

938
00:59:29,240 --> 00:59:32,230
know oh this is not using the correct

939
00:59:32,230 --> 00:59:35,380
correct ability so it's very useful to

940
00:59:35,380 --> 00:59:40,670
detect one certificate another one what

941
00:59:40,670 --> 00:59:44,869
you can do is to if you want to avoid in

942
00:59:44,869 --> 00:59:48,050
the middle or interception you can set

943
00:59:48,050 --> 00:59:51,440
up an alert to say cell fingerprint or

944
00:59:51,440 --> 00:59:52,790
the certificate fingerprint to be

945
00:59:52,790 --> 00:59:54,829
checked against the value you get an apt

946
00:59:54,829 --> 01:00:00,920
as soon as you don't have as soon as you

947
01:00:00,920 --> 01:00:03,050
don't have fingerprint for your

948
01:00:03,050 --> 01:00:04,790
specifics other so if somebody's

949
01:00:04,790 --> 01:00:22,609
defacing yourself so we'll be talking a

950
01:00:22,609 --> 01:00:24,829
little bit on about what he actually

951
01:00:24,829 --> 01:00:27,740
have in that in in such a word so you

952
01:00:27,740 --> 01:00:31,160
should probably see my screen alright

953
01:00:31,160 --> 01:00:37,339
folks I hope you let me know okay so for

954
01:00:37,339 --> 01:00:39,160
example let's just pick up this is

955
01:00:39,160 --> 01:00:41,630
threat accounting interface as part of

956
01:00:41,630 --> 01:00:44,630
cells is called serious and if actually

957
01:00:44,630 --> 01:00:47,810
zoom in on for example we want to look

958
01:00:47,810 --> 01:00:52,069
at strictly what is what do we have in

959
01:00:52,069 --> 01:00:54,260
terms of J 3 J 3 hashes in that

960
01:00:54,260 --> 01:00:56,630
encryption connection so let's have a

961
01:00:56,630 --> 01:00:58,630
look at an example of an alert where

962
01:00:58,630 --> 01:01:03,530
Sophia but this is a one traditional

963
01:01:03,530 --> 01:01:05,630
sericata alert I would say where you

964
01:01:05,630 --> 01:01:07,940
actually have information not only about

965
01:01:07,940 --> 01:01:10,880
the source and the destination of IP you

966
01:01:10,880 --> 01:01:12,530
can also have different informations

967
01:01:12,530 --> 01:01:14,270
like for example the offload you know

968
01:01:14,270 --> 01:01:17,720
packets to server to client and TLS

969
01:01:17,720 --> 01:01:19,460
information that we're talking about so

970
01:01:19,460 --> 01:01:23,300
actually here is our ji three hash that

971
01:01:23,300 --> 01:01:26,470
we that we have in here so basically

972
01:01:26,470 --> 01:01:30,200
there is a lot that you can still do

973
01:01:30,200 --> 01:01:32,960
with that information because even if

974
01:01:32,960 --> 01:01:35,390
you go encrypted you've starts first

975
01:01:35,390 --> 01:01:36,110
with fear

976
01:01:36,110 --> 01:01:38,750
during that exchange we can we can have

977
01:01:38,750 --> 01:01:41,210
that hashed also what is very powerful

978
01:01:41,210 --> 01:01:44,000
is as part of the flow we have the so

979
01:01:44,000 --> 01:01:48,500
called flow identification and all the

980
01:01:48,500 --> 01:01:52,220
specific looks from a particular session

981
01:01:52,220 --> 01:01:53,900
or conversation if you will share the

982
01:01:53,900 --> 01:01:56,480
same flow ID and in this game example

983
01:01:56,480 --> 01:01:57,410
you can see that

984
01:01:57,410 --> 01:01:59,840
besides the alert we also have the

985
01:01:59,840 --> 01:02:02,900
actual TLS record and all the

986
01:02:02,900 --> 01:02:04,490
information that Eric was mentioning

987
01:02:04,490 --> 01:02:06,470
about is in here too so it's really easy

988
01:02:06,470 --> 01:02:09,590
to kind of relate that info in there as

989
01:02:09,590 --> 01:02:12,350
well there is also something that is

990
01:02:12,350 --> 01:02:14,860
called community ID and that allows for

991
01:02:14,860 --> 01:02:18,020
cross matching of flows between

992
01:02:18,020 --> 01:02:21,590
sreekuttan other systems as well so

993
01:02:21,590 --> 01:02:24,680
anyway I just want to show you just we

994
01:02:24,680 --> 01:02:26,210
wanted to show you the actually

995
01:02:26,210 --> 01:02:30,160
usability of of it and how it come into

996
01:02:30,160 --> 01:03:08,780
play with this example so generate the

997
01:03:08,780 --> 01:03:19,310
certificate otherwise you will have the

998
01:03:19,310 --> 01:03:22,550
traffic and it's awesome that is working

999
01:03:22,550 --> 01:03:24,380
for your company or it can be an

1000
01:03:24,380 --> 01:03:30,080
attacker but is very basic and we get

1001
01:03:30,080 --> 01:03:32,000
into the type which is a just account

1002
01:03:32,000 --> 01:03:36,230
that is various official so we identify

1003
01:03:36,230 --> 01:03:38,990
with supplementation so in this case we

1004
01:03:38,990 --> 01:03:41,060
didn't--we for instance maybe investing

1005
01:03:41,060 --> 01:03:43,940
at you yes we ask for monkey fishing but

1006
01:03:43,940 --> 01:03:47,810
detect a phishing website official site

1007
01:03:47,810 --> 01:03:48,869
so I

1008
01:03:48,869 --> 01:03:50,969
based on the implementation but that is

1009
01:03:50,969 --> 01:03:57,839
used yeah so there is some existing

1010
01:03:57,839 --> 01:03:59,989
signature list that I made about

1011
01:03:59,989 --> 01:04:04,049
publicly some case you need to pay for

1012
01:04:04,049 --> 01:04:09,479
them to for a cheap hole but contain yes

1013
01:04:09,479 --> 01:04:17,119
so that will be a fingerprint of none

1014
01:04:17,119 --> 01:04:19,950
come on don't follow from my wife found

1015
01:04:19,950 --> 01:04:21,900
in the web so that's the best way to use

1016
01:04:21,900 --> 01:04:27,499
to identify bad bad communication to

1017
01:04:27,499 --> 01:04:31,140
because you didn't see so that's quite

1018
01:04:31,140 --> 01:04:33,539
useful on you've got switched based on

1019
01:04:33,539 --> 01:04:37,170
the fingerprint so we find a ticket when

1020
01:04:37,170 --> 01:04:39,779
you get the GSP but I know if I was

1021
01:04:39,779 --> 01:04:42,119
fellow implementation so there is also

1022
01:04:42,119 --> 01:04:45,299
an interesting list and then you got we

1023
01:04:45,299 --> 01:04:47,999
show you with some example here this

1024
01:04:47,999 --> 01:04:50,130
always on yes yes foods but I'm also

1025
01:04:50,130 --> 01:04:52,079
available in shut when I wake you

1026
01:04:52,079 --> 01:04:56,969
I'm but use this feature of also get a

1027
01:04:56,969 --> 01:05:03,779
button a nice PhD associate bikini she

1028
01:05:03,779 --> 01:05:06,569
has feared the reason as always forget

1029
01:05:06,569 --> 01:05:08,640
with that it has been confronted by

1030
01:05:08,640 --> 01:05:09,900
three people

1031
01:05:09,900 --> 01:05:12,930
well edition of g8 so that's why it's

1032
01:05:12,930 --> 01:05:16,019
called CSV so don't look at somebody do

1033
01:05:16,019 --> 01:05:18,329
it and Mickey explain Yashoda Venegas

1034
01:05:18,329 --> 01:05:25,140
just because people which initially so

1035
01:05:25,140 --> 01:05:29,130
what we see is where the way negotiation

1036
01:05:29,130 --> 01:05:32,160
is done at the beginning it start if you

1037
01:05:32,160 --> 01:05:35,880
clean up messes on this trap message as

1038
01:05:35,880 --> 01:05:37,710
some characteristic on you should take

1039
01:05:37,710 --> 01:05:41,489
them it's almost it's very possible to

1040
01:05:41,489 --> 01:05:43,979
detect on it identify with

1041
01:05:43,979 --> 01:05:46,349
implementation it's always the little

1042
01:05:46,349 --> 01:05:48,420
difference and this little difference

1043
01:05:48,420 --> 01:05:51,440
very we can be seen

1044
01:05:52,960 --> 01:05:55,940
[Music]

1045
01:05:55,940 --> 01:06:44,760
yes okay two dollars less we see that

1046
01:06:44,760 --> 01:06:47,820
for the movies well the good thing will

1047
01:06:47,820 --> 01:06:49,740
work is that is compatible with jealous

1048
01:06:49,740 --> 01:06:58,349
1.3 so we can really use it responded so

1049
01:06:58,349 --> 01:07:00,900
viciously example we are taking Pacific

1050
01:07:00,900 --> 01:07:05,359
software as default so we have a 3.3

1051
01:07:05,359 --> 01:07:08,190
something if statement 701 but it's a

1052
01:07:08,190 --> 01:07:10,380
long trip and in fact it's just to

1053
01:07:10,380 --> 01:07:12,570
series of parameter using we are donkey

1054
01:07:12,570 --> 01:07:14,670
failure of a message in with TLS

1055
01:07:14,670 --> 01:07:17,700
connection this one is the one that

1056
01:07:17,700 --> 01:07:21,480
found as syndicate chief to identify

1057
01:07:21,480 --> 01:07:25,380
which Ellison foundation using this they

1058
01:07:25,380 --> 01:07:27,599
produce an instruction that is a little

1059
01:07:27,599 --> 01:07:30,900
bit more easy to do it it is very that

1060
01:07:30,900 --> 01:07:32,550
is just as we are shown understand

1061
01:07:32,550 --> 01:07:35,670
so by using that we are able to identify

1062
01:07:35,670 --> 01:07:39,780
by intimidation and for version yes yes

1063
01:07:39,780 --> 01:07:41,400
we've got the same thing so it'll be

1064
01:07:41,400 --> 01:07:51,720
shorter brush what you can do with this

1065
01:07:51,720 --> 01:07:54,119
also web synchronously that you can

1066
01:07:54,119 --> 01:07:59,070
identify bad

1067
01:07:59,070 --> 01:08:05,140
imitation you also can do a Mac team so

1068
01:08:05,140 --> 01:08:09,510
come from viciously Ashe to a username

1069
01:08:09,510 --> 01:08:13,330
because this way you can I got to fight

1070
01:08:13,330 --> 01:08:20,850
fire fox 64 32 obviously this packing so

1071
01:08:20,850 --> 01:08:24,700
that's quite interesting to to identify

1072
01:08:24,700 --> 01:08:28,960
your sources because you are you can

1073
01:08:28,960 --> 01:08:37,359
also detect badges missed by abuse - and

1074
01:08:37,359 --> 01:08:42,339
you can also use a guitar to generate

1075
01:08:42,339 --> 01:08:47,500
comes to the data set up shop on an

1076
01:08:47,500 --> 01:08:51,850
artist but you can use to generate event

1077
01:08:51,850 --> 01:08:56,140
and I left based on estrogen or good on

1078
01:08:56,140 --> 01:09:03,089
average in the rabbit so where's STS is

1079
01:09:03,089 --> 01:09:07,689
stand outside obviously so we take

1080
01:09:07,689 --> 01:09:10,839
another set of field but as I said

1081
01:09:10,839 --> 01:09:16,390
before what is happening is that the

1082
01:09:16,390 --> 01:09:19,839
server is also into the first one to

1083
01:09:19,839 --> 01:09:22,240
send a message so because of that the

1084
01:09:22,240 --> 01:09:26,260
context of the message better sent Bob

1085
01:09:26,260 --> 01:09:28,899
did not on the client so in fact the

1086
01:09:28,899 --> 01:09:32,170
GSEs is not unique for one server on it

1087
01:09:32,170 --> 01:09:34,810
depends on the type of clay on reddit

1088
01:09:34,810 --> 01:09:37,689
connect to the server so you get a look

1089
01:09:37,689 --> 01:09:40,870
at humidity for the same client a

1090
01:09:40,870 --> 01:09:42,790
limitation on self-serve accommodation

1091
01:09:42,790 --> 01:09:47,020
not a unicity for just one single server

1092
01:09:47,020 --> 01:09:50,319
but that's quite useful because if you

1093
01:09:50,319 --> 01:09:53,620
have a malware but you know that connect

1094
01:09:53,620 --> 01:09:56,230
to the same a common on control when in

1095
01:09:56,230 --> 01:09:58,360
this case you will have every time the

1096
01:09:58,360 --> 01:10:00,040
saintly out on the same server so you

1097
01:10:00,040 --> 01:10:05,010
can identify quickly a manual step

1098
01:10:08,310 --> 01:10:11,000
so I'm not a we on the blooper awesome

1099
01:10:11,000 --> 01:10:13,500
OpenSSL don t disturb you

1100
01:10:13,500 --> 01:10:17,400
so I will do shortened jealous

1101
01:10:17,400 --> 01:10:21,179
one two three so from a certain point

1102
01:10:21,179 --> 01:10:24,090
it's just a nightmare because they did

1103
01:10:24,090 --> 01:10:32,010
improve piracy or interception but we

1104
01:10:32,010 --> 01:10:35,550
see in this is almost all my own

1105
01:10:35,550 --> 01:10:36,719
Shakey's on Katrina

1106
01:10:36,719 --> 01:10:38,730
so we don't see a lot of you matter

1107
01:10:38,730 --> 01:10:42,449
we're seeing if off like subject issue

1108
01:10:42,449 --> 01:10:45,510
at the end is not available anymore we

1109
01:10:45,510 --> 01:10:48,690
can not really we get a far less

1110
01:10:48,690 --> 01:10:56,130
information but what we can do is team

1111
01:10:56,130 --> 01:10:57,960
we can we hopefully we still appreciate

1112
01:10:57,960 --> 01:11:03,270
ski on GSEs working we still on a

1113
01:11:03,270 --> 01:11:07,080
medication so that's quite useful so we

1114
01:11:07,080 --> 01:11:10,290
can see which were site we are panicking

1115
01:11:10,290 --> 01:11:16,920
too so we still have some information so

1116
01:11:16,920 --> 01:11:19,050
what we are left with yes yes yes the

1117
01:11:19,050 --> 01:11:21,800
Savannah medication doesn't have about a

1118
01:11:21,800 --> 01:11:29,659
medication kind of if it happens for us

1119
01:11:29,659 --> 01:11:32,610
but what we would have left anyway

1120
01:11:32,610 --> 01:11:35,790
is the flow on trees swing cat is able

1121
01:11:35,790 --> 01:11:40,619
to produce net flow like data so by Beth

1122
01:11:40,619 --> 01:11:45,679
we mean for every connection TCP or UDP

1123
01:11:45,679 --> 01:11:51,480
we have the volume III in on out from

1124
01:11:51,480 --> 01:11:54,480
this the destination destination on some

1125
01:11:54,480 --> 01:11:57,840
information and we can use that to find

1126
01:11:57,840 --> 01:12:00,510
fins so in a lot of case the people

1127
01:12:00,510 --> 01:12:01,920
without doing machine learning and a

1128
01:12:01,920 --> 01:12:04,230
network data while you're just using the

1129
01:12:04,230 --> 01:12:07,530
flow because so as where it's convenient

1130
01:12:07,530 --> 01:12:12,510
there is a lot of number which are

1131
01:12:12,510 --> 01:12:15,749
easier to understand sting

1132
01:12:15,749 --> 01:12:20,729
using that yeah so thrown three circuit

1133
01:12:20,729 --> 01:12:22,440
is looking like that so we have the

1134
01:12:22,440 --> 01:12:25,229
typical thing that we have associated

1135
01:12:25,229 --> 01:12:27,479
destination IP on when we're going

1136
01:12:27,479 --> 01:12:29,400
between time of packet by two server

1137
01:12:29,400 --> 01:12:32,579
will start on end day to no longer quest

1138
01:12:32,579 --> 01:12:37,050
and in case of TCP we've got information

1139
01:12:37,050 --> 01:12:39,269
about the TCP flags but can be used to

1140
01:12:39,269 --> 01:12:42,690
see in which stage of the connection so

1141
01:12:42,690 --> 01:12:47,478
that's something that is quite useful

1142
01:12:50,360 --> 01:12:54,179
alright so I suggest we have a few

1143
01:12:54,179 --> 01:12:56,670
minutes left so that allows folks to

1144
01:12:56,670 --> 01:12:59,880
walk into a quick demo of different

1145
01:12:59,880 --> 01:13:01,440
angles that you can use for hunting and

1146
01:13:01,440 --> 01:13:03,409
encrypted traffic and I'm going to

1147
01:13:03,409 --> 01:13:08,820
switch over to one of the South's

1148
01:13:08,820 --> 01:13:10,610
interfaces here

1149
01:13:10,610 --> 01:13:12,780
subsidy basically is database uses

1150
01:13:12,780 --> 01:13:16,889
elasticsearch and so ricotta produces a

1151
01:13:16,889 --> 01:13:18,989
lot and different types of log so for

1152
01:13:18,989 --> 01:13:21,179
example so it's not just about alert

1153
01:13:21,179 --> 01:13:23,699
it's about being able to correlate that

1154
01:13:23,699 --> 01:13:26,039
information different protocol breakdown

1155
01:13:26,039 --> 01:13:28,590
so anything and everything there for

1156
01:13:28,590 --> 01:13:33,510
example HTTP RDP RP sip DNS TLS all

1157
01:13:33,510 --> 01:13:35,699
those protocols can all the information

1158
01:13:35,699 --> 01:13:37,889
there and the logs can be there even

1159
01:13:37,889 --> 01:13:39,719
without so we've got the running without

1160
01:13:39,719 --> 01:13:43,679
any alerts and without any idea but the

1161
01:13:43,679 --> 01:13:45,749
combination of those actually makes it

1162
01:13:45,749 --> 01:13:49,349
really good for kind of hunting and the

1163
01:13:49,349 --> 01:13:50,789
network security monitoring as it

1164
01:13:50,789 --> 01:13:53,630
combines in all the ideas and the actual

1165
01:13:53,630 --> 01:13:57,349
log log views from from the network and

1166
01:13:57,349 --> 01:14:01,670
in this case here we actually loaded

1167
01:14:01,670 --> 01:14:04,199
detonated pick up from trick both the

1168
01:14:04,199 --> 01:14:05,820
pick up is available you see it and the

1169
01:14:05,820 --> 01:14:07,949
end slides or you can download it from

1170
01:14:07,949 --> 01:14:09,599
and reproduce the exact same take

1171
01:14:09,599 --> 01:14:11,400
yourself so what we're looking at here

1172
01:14:11,400 --> 01:14:13,860
is basically the TLS protocol breakdown

1173
01:14:13,860 --> 01:14:17,670
for that specific detonation if you will

1174
01:14:17,670 --> 01:14:20,099
in the specific case we have about nine

1175
01:14:20,099 --> 01:14:21,929
and eighty lakhs and what does this mean

1176
01:14:21,929 --> 01:14:24,900
so it gives us a basic overview of like

1177
01:14:24,900 --> 01:14:28,229
you know TLS versions subject name

1178
01:14:28,229 --> 01:14:29,970
identify

1179
01:14:29,970 --> 01:14:32,910
you know issuers geoip location similar

1180
01:14:32,910 --> 01:14:36,360
it takes so sir kara can detect here

1181
01:14:36,360 --> 01:14:41,010
less regardless of port so you can see

1182
01:14:41,010 --> 01:14:43,920
here how you have the traditional 443

1183
01:14:43,920 --> 01:14:46,860
port but you also have others source and

1184
01:14:46,860 --> 01:14:48,540
destination at peace and here is

1185
01:14:48,540 --> 01:14:53,070
actually where for example the j-3 and

1186
01:14:53,070 --> 01:14:56,250
j3 s hash is coming to play so a very

1187
01:14:56,250 --> 01:14:58,620
easy way to peel it around those and if

1188
01:14:58,620 --> 01:15:00,510
you look so J trees on the client side

1189
01:15:00,510 --> 01:15:03,570
j3s is on the server side they're

1190
01:15:03,570 --> 01:15:06,750
describing so it can basically sort

1191
01:15:06,750 --> 01:15:08,700
through anything and people then you see

1192
01:15:08,700 --> 01:15:12,270
that you know the same basically j-3

1193
01:15:12,270 --> 01:15:16,170
server kind of hash is present for all

1194
01:15:16,170 --> 01:15:18,540
sorts of different public IP s basically

1195
01:15:18,540 --> 01:15:21,660
means that this is same application

1196
01:15:21,660 --> 01:15:24,300
running on their server side interface

1197
01:15:24,300 --> 01:15:27,180
in terms of encryption so we actually if

1198
01:15:27,180 --> 01:15:30,150
you want to zoom in on that let me just

1199
01:15:30,150 --> 01:15:31,530
confirm that so something interesting

1200
01:15:31,530 --> 01:15:34,830
begins to happen you see how is starting

1201
01:15:34,830 --> 01:15:37,140
to see more and more kind of the

1202
01:15:37,140 --> 01:15:41,100
traditional expectation of beacons but

1203
01:15:41,100 --> 01:15:43,920
they're but they're not all the same and

1204
01:15:43,920 --> 01:15:46,140
we won't just keep that a little bit

1205
01:15:46,140 --> 01:15:49,050
into that and and show you around so you

1206
01:15:49,050 --> 01:15:51,870
have three different I'm sorry five

1207
01:15:51,870 --> 01:15:53,430
different public eye piece with

1208
01:15:53,430 --> 01:15:56,040
different counts you know there's more

1209
01:15:56,040 --> 01:15:57,960
people everywhere not just the good and

1210
01:15:57,960 --> 01:16:03,090
bad not just good but bad as well and in

1211
01:16:03,090 --> 01:16:06,030
our case like you might keep wondering

1212
01:16:06,030 --> 01:16:08,310
what's what's one and what's the other

1213
01:16:08,310 --> 01:16:10,620
why do we have a big account here and a

1214
01:16:10,620 --> 01:16:13,080
lesser count there and here I'll show

1215
01:16:13,080 --> 01:16:16,950
you an example of a flow a very sorry

1216
01:16:16,950 --> 01:16:20,880
log record for TLS and in this case you

1217
01:16:20,880 --> 01:16:23,580
know we have a community ID some some

1218
01:16:23,580 --> 01:16:26,880
other information including JYP we also

1219
01:16:26,880 --> 01:16:31,110
have all the TLS information about that

1220
01:16:31,110 --> 01:16:33,960
connection as well and it's very easy to

1221
01:16:33,960 --> 01:16:36,120
people tired of this for example you can

1222
01:16:36,120 --> 01:16:37,860
click on correlate flow and that's will

1223
01:16:37,860 --> 01:16:40,590
bring it to a box which is develop of

1224
01:16:40,590 --> 01:16:42,270
one another to recover

1225
01:16:42,270 --> 01:16:45,840
member jasonich we're actually as you

1226
01:16:45,840 --> 01:16:49,680
can see this is correlating on the

1227
01:16:49,680 --> 01:16:52,920
actual flow ID here of that specific

1228
01:16:52,920 --> 01:16:56,970
look or in other words this is this this

1229
01:16:56,970 --> 01:17:01,320
ID this ID number here and so it's an

1230
01:17:01,320 --> 01:17:03,450
easy way to people to Alton see oh okay

1231
01:17:03,450 --> 01:17:05,190
this is the same flow what else has

1232
01:17:05,190 --> 01:17:07,740
happened and you can see that there is a

1233
01:17:07,740 --> 01:17:09,900
there is an alert here until this

1234
01:17:09,900 --> 01:17:12,690
records and some flow records as well as

1235
01:17:12,690 --> 01:17:15,870
that you might be might as well be

1236
01:17:15,870 --> 01:17:18,600
wondering so if you are looking at the

1237
01:17:18,600 --> 01:17:20,850
alert and this is the SSL demo that's

1238
01:17:20,850 --> 01:17:22,890
actually if you go back to hunting

1239
01:17:22,890 --> 01:17:28,440
interface this is the actual alert that

1240
01:17:28,440 --> 01:17:30,450
actually run game you can see of course

1241
01:17:30,450 --> 01:17:32,670
some patterns in here but what I wanted

1242
01:17:32,670 --> 01:17:34,890
to bring to your attention is like if

1243
01:17:34,890 --> 01:17:37,860
you look at all the all the different

1244
01:17:37,860 --> 01:17:40,890
signatures there is a bunch of different

1245
01:17:40,890 --> 01:17:43,920
stuff that rings in so it is encrypted

1246
01:17:43,920 --> 01:17:46,110
and you can definitely come up with a

1247
01:17:46,110 --> 01:17:48,540
pattern you can definitely come up with

1248
01:17:48,540 --> 01:17:50,130
a positive but there is other hints

1249
01:17:50,130 --> 01:17:53,640
there that will show us will give us a

1250
01:17:53,640 --> 01:17:57,060
major visibility to what's happening and

1251
01:17:57,060 --> 01:17:58,950
those hints are actually all the

1252
01:17:58,950 --> 01:18:02,240
different alert metadata if you will

1253
01:18:02,240 --> 01:18:06,090
that is provided by so ricotta and even

1254
01:18:06,090 --> 01:18:09,540
much more massive availability on it

1255
01:18:09,540 --> 01:18:12,540
when it actually provides more things

1256
01:18:12,540 --> 01:18:14,610
like correlation and the safe flow of

1257
01:18:14,610 --> 01:18:16,950
user agents or similar things so here we

1258
01:18:16,950 --> 01:18:19,980
have all the TLS information in here

1259
01:18:19,980 --> 01:18:23,580
including issuer subject finger bring

1260
01:18:23,580 --> 01:18:24,330
hashes and

1261
01:18:24,330 --> 01:18:29,160
and similar stuff and other hunting

1262
01:18:29,160 --> 01:18:31,380
angles that you can use we have these

1263
01:18:31,380 --> 01:18:34,920
so-called presets filter sets and what's

1264
01:18:34,920 --> 01:18:37,430
interesting here what I want to show you

1265
01:18:37,430 --> 01:18:42,300
about about these different beacons is

1266
01:18:42,300 --> 01:18:44,520
actually it might as well sit and wonder

1267
01:18:44,520 --> 01:18:48,870
you know why why are they there and I'm

1268
01:18:48,870 --> 01:18:52,050
clicking here and because what I wanted

1269
01:18:52,050 --> 01:18:54,300
to show is like we have different geoip

1270
01:18:54,300 --> 01:18:55,389
where these two

1271
01:18:55,389 --> 01:18:57,460
locations where this is going you know

1272
01:18:57,460 --> 01:18:59,639
and in that case why we want

1273
01:18:59,639 --> 01:19:01,150
investigating we find out with

1274
01:19:01,150 --> 01:19:02,710
interesting tanks if you actually look

1275
01:19:02,710 --> 01:19:05,500
at the alerts themselves so let's have a

1276
01:19:05,500 --> 01:19:07,600
look at the first one okay so we have a

1277
01:19:07,600 --> 01:19:09,310
generic post

1278
01:19:09,310 --> 01:19:12,219
so that's post infection but that's

1279
01:19:12,219 --> 01:19:13,600
where we can detect them as well so

1280
01:19:13,600 --> 01:19:15,940
apparently it went through all defenses

1281
01:19:15,940 --> 01:19:19,000
to go to post infection and here I

1282
01:19:19,000 --> 01:19:24,880
actually have a so apparently Open VPN

1283
01:19:24,880 --> 01:19:26,440
passwords and convicts are being

1284
01:19:26,440 --> 01:19:27,820
extracted from here and this is actually

1285
01:19:27,820 --> 01:19:30,580
all data generated by Sarika so the

1286
01:19:30,580 --> 01:19:32,739
payload printable the request bodied the

1287
01:19:32,739 --> 01:19:35,440
response body so what this means is

1288
01:19:35,440 --> 01:19:39,130
actually this public IP here actually

1289
01:19:39,130 --> 01:19:41,380
wants to know about all Open VPN

1290
01:19:41,380 --> 01:19:43,780
password sent convicts and if you need

1291
01:19:43,780 --> 01:19:46,480
if you go to another to the next one

1292
01:19:46,480 --> 01:19:48,489
here rather this one sorry let's have a

1293
01:19:48,489 --> 01:19:50,800
look what's in here and this one

1294
01:19:50,800 --> 01:19:53,469
actually wants to know about open SSH

1295
01:19:53,469 --> 01:19:56,949
private keys so that's the task of this

1296
01:19:56,949 --> 01:20:01,750
IP let's say and then on the top one we

1297
01:20:01,750 --> 01:20:05,170
have a different collection mechanism or

1298
01:20:05,170 --> 01:20:06,760
a different collection that that

1299
01:20:06,760 --> 01:20:09,639
specific IP is interesting so coming

1300
01:20:09,639 --> 01:20:12,760
back on to the TLS itself actually it

1301
01:20:12,760 --> 01:20:16,030
really it's a perfect be concise you

1302
01:20:16,030 --> 01:20:18,130
know they're trying to as I mentioned

1303
01:20:18,130 --> 01:20:19,989
the smart people everywhere so they're

1304
01:20:19,989 --> 01:20:23,440
trying to you know get different

1305
01:20:23,440 --> 01:20:25,780
different volumes different intervals to

1306
01:20:25,780 --> 01:20:27,610
different counts and all that so it will

1307
01:20:27,610 --> 01:20:30,010
make it much harder and harder to detect

1308
01:20:30,010 --> 01:20:34,750
but the escapable truth is that it needs

1309
01:20:34,750 --> 01:20:36,159
to start with a clear text you cannot

1310
01:20:36,159 --> 01:20:38,080
start encrypted right away it just can't

1311
01:20:38,080 --> 01:20:40,449
so we needs to start with clear text or

1312
01:20:40,449 --> 01:20:42,610
handshake somewhere and then some part

1313
01:20:42,610 --> 01:20:44,530
of the exfiltration or other stuff is

1314
01:20:44,530 --> 01:20:48,010
also clear text but with respect to J 3

1315
01:20:48,010 --> 01:20:50,920
and J 3 yes you can actually do a lot

1316
01:20:50,920 --> 01:20:55,780
you can actually do graphs detect new J

1317
01:20:55,780 --> 01:20:59,260
3 years is that or J 3 client hashes

1318
01:20:59,260 --> 01:21:04,780
that have been there and and you know

1319
01:21:04,780 --> 01:21:06,520
map him out and see what's new in the

1320
01:21:06,520 --> 01:21:07,810
network today that wasn't there

1321
01:21:07,810 --> 01:21:08,920
yesterday for

1322
01:21:08,920 --> 01:21:10,630
example and similar think I just wanted

1323
01:21:10,630 --> 01:21:12,929
to show you the correlation for the

1324
01:21:12,929 --> 01:21:15,550
full-blown you know detonation district

1325
01:21:15,550 --> 01:21:18,969
book of which Telus is part of you know

1326
01:21:18,969 --> 01:21:21,580
mostly for command and control or

1327
01:21:21,580 --> 01:21:24,100
beacons rather but there's also other

1328
01:21:24,100 --> 01:21:26,410
aspects of the different levels of the

1329
01:21:26,410 --> 01:21:29,199
attacked involved but TLS even though

1330
01:21:29,199 --> 01:21:31,989
it's entirely encrypted even though you

1331
01:21:31,989 --> 01:21:35,320
don't need to look at any alerts you can

1332
01:21:35,320 --> 01:21:38,230
discover or look just by you know a

1333
01:21:38,230 --> 01:21:41,440
correlating different data you know j3s

1334
01:21:41,440 --> 01:21:44,679
razor j3 you know what's what's new

1335
01:21:44,679 --> 01:21:48,160
what's old what's not traditionally seen

1336
01:21:48,160 --> 01:21:50,380
on your networking similar stuff where

1337
01:21:50,380 --> 01:21:53,410
you can actually tell what in a similar

1338
01:21:53,410 --> 01:21:55,960
fashion circa also provides anomaly

1339
01:21:55,960 --> 01:21:57,969
events that will actually tell you

1340
01:21:57,969 --> 01:22:01,480
things like you know protocol only one

1341
01:22:01,480 --> 01:22:04,179
direction or unable to much response to

1342
01:22:04,179 --> 01:22:06,040
requests and this will also detect any

1343
01:22:06,040 --> 01:22:08,250
specific anomaly in the encryption layer

1344
01:22:08,250 --> 01:22:11,110
in the Krypton part as well so there's

1345
01:22:11,110 --> 01:22:15,420
ways to do it without entirely being

1346
01:22:15,420 --> 01:22:19,270
reliant on rules and alerts which is not

1347
01:22:19,270 --> 01:22:21,370
bad but the combination of rules on the

1348
01:22:21,370 --> 01:22:25,120
worlds with the logs with the other NSM

1349
01:22:25,120 --> 01:22:29,170
logs produced was ricotta our

1350
01:22:29,170 --> 01:22:31,570
combination allows for actually a pretty

1351
01:22:31,570 --> 01:22:33,280
good metal traffic analysis hunting

1352
01:22:33,280 --> 01:22:37,510
exercise as we were mentioning here here

1353
01:22:37,510 --> 01:22:44,020
in this case and again it could very

1354
01:22:44,020 --> 01:22:46,120
well be revealing just by looking at TLS

1355
01:22:46,120 --> 01:22:48,010
records from the different aspects of

1356
01:22:48,010 --> 01:22:49,960
the network and correlating that back

1357
01:22:49,960 --> 01:22:54,670
and forth with into 24-hour period Eric

1358
01:22:54,670 --> 01:22:56,110
anything I have ways to cover cause

1359
01:22:56,110 --> 01:22:57,520
we'll be running actually short on time

1360
01:22:57,520 --> 01:22:59,679
Orlov talk about that and you can do a

1361
01:22:59,679 --> 01:23:01,989
full day workshop actually which we

1362
01:23:01,989 --> 01:23:04,150
should do but Erika something I maybe

1363
01:23:04,150 --> 01:23:07,210
forgot to answer or anything to add if

1364
01:23:07,210 --> 01:23:09,280
you can just get back to the to show

1365
01:23:09,280 --> 01:23:11,500
that in fact even if it's

1366
01:23:11,500 --> 01:23:14,579
[Music]

1367
01:23:36,860 --> 01:23:40,009
[Music]

1368
01:24:00,420 --> 01:24:03,100
yeah the combination of those is really

1369
01:24:03,100 --> 01:24:06,040
powerful like regular traditional logs

1370
01:24:06,040 --> 01:24:09,340
plus their lives together I think it's

1371
01:24:09,340 --> 01:24:11,950
really cool I'm gonna switch back to our

1372
01:24:11,950 --> 01:24:14,550
slides here

1373
01:24:14,550 --> 01:24:21,520
conclusion so TLS is of course a serious

1374
01:24:21,520 --> 01:24:22,650
challenge

1375
01:24:22,650 --> 01:24:24,730
visibility is decreasing but there's

1376
01:24:24,730 --> 01:24:26,610
ways and things you could do about it

1377
01:24:26,610 --> 01:24:29,380
including analyzing encrypted traffic

1378
01:24:29,380 --> 01:24:31,030
including looking for anomalies

1379
01:24:31,030 --> 01:24:33,450
including better positioning your

1380
01:24:33,450 --> 01:24:35,680
sniffing devices and all the stuff for

1381
01:24:35,680 --> 01:24:36,970
different parts of the network you know

1382
01:24:36,970 --> 01:24:39,190
behind load balancers proxies from

1383
01:24:39,190 --> 01:24:41,050
behind and similar things there's ways

1384
01:24:41,050 --> 01:24:43,870
around to do it and play with it

1385
01:24:43,870 --> 01:24:46,810
including modern gateways and firewalls

1386
01:24:46,810 --> 01:24:48,430
allowed to decrypt traffic and pass it

1387
01:24:48,430 --> 01:24:53,470
over to sniffing solution as well the

1388
01:24:53,470 --> 01:24:55,570
pcap itself is located on the link

1389
01:24:55,570 --> 01:24:58,770
provided is actually it was done by

1390
01:24:58,770 --> 01:25:02,050
Joseph Stein who's actually director

1391
01:25:02,050 --> 01:25:04,990
training at OSF he actually did

1392
01:25:04,990 --> 01:25:09,430
detonated catch of the pcap please

1393
01:25:09,430 --> 01:25:12,340
welcome and join the forums of acara and

1394
01:25:12,340 --> 01:25:16,630
ask all our user base of for help or any

1395
01:25:16,630 --> 01:25:19,330
exchange of experience I will be happy

1396
01:25:19,330 --> 01:25:22,060
to actually help out anytime we can

1397
01:25:22,060 --> 01:25:24,420
there are certain trainings and webinars

1398
01:25:24,420 --> 01:25:27,260
we can visit the

1399
01:25:27,260 --> 01:25:31,670
/ ideas dot o-r-g training to learn more

1400
01:25:31,670 --> 01:25:36,100
to have more information about those and

1401
01:25:36,100 --> 01:25:39,080
of course you can download self six and

1402
01:25:39,080 --> 01:25:46,100
try it out yourself is there so one of

1403
01:25:46,100 --> 01:26:35,060
the so I think forward on this now is

1404
01:26:35,060 --> 01:26:38,330
the plan I figure is already

1405
01:26:38,330 --> 01:26:39,890
transformation from a very elastic

1406
01:26:39,890 --> 01:26:41,660
search so they provide a module to

1407
01:26:41,660 --> 01:26:46,400
converse we get to perform at reform at

1408
01:26:46,400 --> 01:26:49,940
least at plan maybe in a few years Bob

1409
01:26:49,940 --> 01:26:56,750
at least question I'm not sure if I have

1410
01:26:56,750 --> 01:26:58,580
understood your justice packet itself

1411
01:26:58,580 --> 01:27:01,130
not only period yes we're expecting the

1412
01:27:01,130 --> 01:27:07,820
TV's on Shaq just negotiation encryption

1413
01:27:07,820 --> 01:27:10,340
at the beginning with it teasing clear

1414
01:27:10,340 --> 01:27:14,480
tanks for tennis 1.2 1.2 L window see is

1415
01:27:14,480 --> 01:27:16,970
injected but we can use information on

1416
01:27:16,970 --> 01:27:20,030
yes you can do interception by

1417
01:27:20,030 --> 01:27:23,910
commanding circuit I will

1418
01:27:23,910 --> 01:27:27,019
[Music]

1419
01:27:49,070 --> 01:27:52,179
[Music]

1420
01:27:53,460 --> 01:27:58,720
yes can you make any check on expecting

1421
01:27:58,720 --> 01:28:00,910
such pathetic social values not

1422
01:28:00,910 --> 01:28:03,100
currently is not yet available but we

1423
01:28:03,100 --> 01:28:05,200
are doing the passing so it's not a big

1424
01:28:05,200 --> 01:28:08,770
code yourself Israeli community I want

1425
01:28:08,770 --> 01:28:14,760
it so bad shall wake up with a

1426
01:28:14,760 --> 01:28:17,110
certificate change so we are doing the

1427
01:28:17,110 --> 01:28:26,110
passing of all my certification but no

1428
01:28:26,110 --> 01:28:30,550
no okay yeah so now it's just the first

1429
01:28:30,550 --> 01:28:40,690
certificate and we don't get down one

1430
01:28:40,690 --> 01:28:41,910
more question

1431
01:28:41,910 --> 01:28:47,500
do you know regarding the j3m method if

1432
01:28:47,500 --> 01:28:52,060
it will still be reliable with the the

1433
01:28:52,060 --> 01:28:59,200
evolutions of TLS and with the much

1434
01:28:59,200 --> 01:29:14,650
shorter negotiation phase responded to

1435
01:29:14,650 --> 01:29:15,460
so in Swift

1436
01:29:15,460 --> 01:29:18,760
it's very faster to do the negotiation

1437
01:29:18,760 --> 01:29:21,180
on in some case you can resume

1438
01:29:21,180 --> 01:29:24,070
organization so miss Castano it's video

1439
01:29:24,070 --> 01:29:27,610
problem on we will just see which is TLS

1440
01:29:27,610 --> 01:29:30,430
Congrats it will come to know

1441
01:29:30,430 --> 01:29:34,210
yeah okay and finally

1442
01:29:34,210 --> 01:29:37,090
the dashboards that you presented in the

1443
01:29:37,090 --> 01:29:41,050
in the various tools and in elastic in

1444
01:29:41,050 --> 01:29:53,950
particular they are shipped with so we

1445
01:29:53,950 --> 01:29:56,950
have both cases one is the ready to

1446
01:29:56,950 --> 01:29:58,960
built in destroy and then the other one

1447
01:29:58,960 --> 01:30:01,840
they stand alone so underneath some of

1448
01:30:01,840 --> 01:30:04,270
network github repo we you'll see them

1449
01:30:04,270 --> 01:30:07,960
they called kts seven for elastic for

1450
01:30:07,960 --> 01:30:09,460
the XML stack or you can use them

1451
01:30:09,460 --> 01:30:12,520
standalone - okay and any suggestions

1452
01:30:12,520 --> 01:30:14,620
the contributions to those are more a

1453
01:30:14,620 --> 01:30:15,940
welcome of course we'll be happy to

1454
01:30:15,940 --> 01:30:24,250
automate okay well thank you I don't

1455
01:30:24,250 --> 01:30:26,410
think there are any more question and so

1456
01:30:26,410 --> 01:30:30,400
it will be a time for a little ten

1457
01:30:30,400 --> 01:30:33,310
minute puzzle and then we will resume

1458
01:30:33,310 --> 01:30:36,460
the the afternoon talks with with two

1459
01:30:36,460 --> 01:30:40,590
more talks for the end of this session

1460
01:30:40,590 --> 01:30:43,690
so thank you thank you very much for

1461
01:30:43,690 --> 01:30:45,990
your time

1462
01:31:34,110 --> 01:31:45,499
[Music]

1463
01:36:14,380 --> 01:36:26,759
[Music]

1464
01:37:14,080 --> 01:37:16,140
you

1465
01:39:52,190 --> 01:39:56,940
okay so we are back for the next two

1466
01:39:56,940 --> 01:39:58,890
talks and a lot of doors

1467
01:39:58,890 --> 01:40:04,500
so next talk is bye-bye Peters and it

1468
01:40:04,500 --> 01:40:09,270
will talk about how to use sister Jen

1469
01:40:09,270 --> 01:40:12,420
chieh and in a more general way how to

1470
01:40:12,420 --> 01:40:17,730
create a log chain from the log

1471
01:40:17,730 --> 01:40:21,150
collection to the log analysis so every

1472
01:40:21,150 --> 01:40:26,670
every step will be detailed so the stage

1473
01:40:26,670 --> 01:40:29,790
is yours Peter thank you can you hear me

1474
01:40:29,790 --> 01:40:33,020
yes all right

1475
01:40:33,020 --> 01:40:36,270
so a few words about me I'm Peter

1476
01:40:36,270 --> 01:40:37,890
stomach from hungry open source

1477
01:40:37,890 --> 01:40:40,290
evangelist that one identities system mg

1478
01:40:40,290 --> 01:40:43,830
subscreen developer I'm doing packaging

1479
01:40:43,830 --> 01:40:48,810
support advocacy so what I will be

1480
01:40:48,810 --> 01:40:51,990
talking about today first I will go back

1481
01:40:51,990 --> 01:40:54,150
to the basics I mean this entire

1482
01:40:54,150 --> 01:41:00,300
collection even now it cannot be

1483
01:41:00,300 --> 01:41:05,880
everywhere to get for granted then have

1484
01:41:05,880 --> 01:41:09,140
you talked about how complexity grows

1485
01:41:09,140 --> 01:41:15,110
together with your organization and how

1486
01:41:15,110 --> 01:41:17,400
log management becomes more and more

1487
01:41:17,400 --> 01:41:20,310
difficult and how you can reduce its

1488
01:41:20,310 --> 01:41:22,740
complexity using dedicated load

1489
01:41:22,740 --> 01:41:26,640
management they are and then as a

1490
01:41:26,640 --> 01:41:29,190
cystogram GTI at the end I will show you

1491
01:41:29,190 --> 01:41:33,170
how to implement it using Cisco Gangji

1492
01:41:33,170 --> 01:41:36,000
so first of all let's go back to the

1493
01:41:36,000 --> 01:41:42,570
basics even in larger companies I often

1494
01:41:42,570 --> 01:41:45,840
see that there is no central collection

1495
01:41:45,840 --> 01:41:48,780
implemented or just some very minimal

1496
01:41:48,780 --> 01:41:52,530
for the for some of the servers

1497
01:41:52,530 --> 01:41:57,700
which is not really good thing as we

1498
01:41:57,700 --> 01:42:00,520
know santero collection is the basis of

1499
01:42:00,520 --> 01:42:03,640
log analysis and we had not interested

1500
01:42:03,640 --> 01:42:06,610
only in the main servers but we only

1501
01:42:06,610 --> 01:42:08,770
know about our security and if the

1502
01:42:08,770 --> 01:42:15,670
infrastructure if we lock everything so

1503
01:42:15,670 --> 01:42:18,750
let's talk about a few words about

1504
01:42:18,750 --> 01:42:21,670
central login and why is it so important

1505
01:42:21,670 --> 01:42:25,420
first of all its ease of use one place

1506
01:42:25,420 --> 01:42:30,040
to check instead of many so you don't

1507
01:42:30,040 --> 01:42:31,989
have to look into each of your system to

1508
01:42:31,989 --> 01:42:33,880
figure out what happened but check a

1509
01:42:33,880 --> 01:42:37,690
center block repository it's also

1510
01:42:37,690 --> 01:42:39,730
availability even if you're sending

1511
01:42:39,730 --> 01:42:43,540
machine is down you can still check your

1512
01:42:43,540 --> 01:42:47,020
logs at this century and it's also

1513
01:42:47,020 --> 01:42:49,989
security the first thing when a machine

1514
01:42:49,989 --> 01:42:53,050
is compromised is to delete or altered

1515
01:42:53,050 --> 01:42:55,330
Roman cities but if they are already

1516
01:42:55,330 --> 01:42:57,700
sent to the central location then you

1517
01:42:57,700 --> 01:43:02,080
can check them there and obviously if

1518
01:43:02,080 --> 01:43:03,670
you want to analyze your log messages

1519
01:43:03,670 --> 01:43:05,739
then you also need to collect em

1520
01:43:05,739 --> 01:43:14,218
Centauri but as your company grows

1521
01:43:14,550 --> 01:43:17,190
complexity complexity grows as well

1522
01:43:17,190 --> 01:43:19,989
people start to use multiple analytic

1523
01:43:19,989 --> 01:43:26,860
systems and that way also please waste

1524
01:43:26,860 --> 01:43:31,060
quite a lot of resources a proposed

1525
01:43:31,060 --> 01:43:32,710
solution for this problem is

1526
01:43:32,710 --> 01:43:40,180
consolidating the system the system in

1527
01:43:40,180 --> 01:43:44,760
the unified load management layer so

1528
01:43:44,760 --> 01:43:50,320
once your system once your company or

1529
01:43:50,320 --> 01:43:53,530
organization grows you will have more

1530
01:43:53,530 --> 01:43:59,860
than one type of person there exactly

1531
01:43:59,860 --> 01:44:01,900
you'll most likely have security

1532
01:44:01,900 --> 01:44:04,580
developers operators

1533
01:44:04,580 --> 01:44:08,490
and probably a few more mixture of these

1534
01:44:08,490 --> 01:44:13,730
guys in your team and all of these have

1535
01:44:13,730 --> 01:44:17,310
office use log messages they analyzed

1536
01:44:17,310 --> 01:44:19,350
them but they have quite a lot of quite

1537
01:44:19,350 --> 01:44:22,500
different tools the problem is that all

1538
01:44:22,500 --> 01:44:25,470
of these analytics tools come with that

1539
01:44:25,470 --> 01:44:28,170
usually with their own local location to

1540
01:44:28,170 --> 01:44:31,920
us so here are some examples

1541
01:44:31,920 --> 01:44:36,680
elastic comes with bits and locks -

1542
01:44:36,680 --> 01:44:40,350
spawn comes with forwarders most sim

1543
01:44:40,350 --> 01:44:43,980
systems have their own local actors just

1544
01:44:43,980 --> 01:44:45,390
as logging

1545
01:44:45,390 --> 01:44:50,790
looking for the service providers these

1546
01:44:50,790 --> 01:44:54,800
are most of the time on top of local

1547
01:44:54,800 --> 01:44:58,820
system collection so you see here for

1548
01:44:58,820 --> 01:45:02,760
the elastic stack on top of system they

1549
01:45:02,760 --> 01:45:05,580
have beats then cough cough or order

1550
01:45:05,580 --> 01:45:08,010
release for message giving 10 blocks -

1551
01:45:08,010 --> 01:45:13,320
and finally elastic search but also see

1552
01:45:13,320 --> 01:45:17,330
more logging as a service software

1553
01:45:17,450 --> 01:45:20,790
creates an additional layer on top of

1554
01:45:20,790 --> 01:45:25,530
the existing clock management why is it

1555
01:45:25,530 --> 01:45:31,050
a problem because the most of that you

1556
01:45:31,050 --> 01:45:33,540
use the more computing resources you use

1557
01:45:33,540 --> 01:45:38,360
so if you have three four different

1558
01:45:38,360 --> 01:45:40,980
recognizes software and debt collectors

1559
01:45:40,980 --> 01:45:44,670
installed on each host then it can waste

1560
01:45:44,670 --> 01:45:47,010
quite a lot of computing resources but

1561
01:45:47,010 --> 01:45:49,530
it's just the smaller program but for

1562
01:45:49,530 --> 01:45:52,920
example if your systems are in the cloud

1563
01:45:52,920 --> 01:45:55,950
then you are often paying for network

1564
01:45:55,950 --> 01:46:00,540
bandwidth as well and sending the same

1565
01:46:00,540 --> 01:46:05,520
data over the network multiple times can

1566
01:46:05,520 --> 01:46:09,900
be pretty expensive it's also more Human

1567
01:46:09,900 --> 01:46:12,780
Resources just think back on the

1568
01:46:12,780 --> 01:46:17,990
previous slide that get engrossed

1569
01:46:18,640 --> 01:46:23,960
host:2 elasticsearch can take up to four

1570
01:46:23,960 --> 01:46:29,240
different software to configure it and

1571
01:46:29,240 --> 01:46:32,360
Betar it also might mean more security

1572
01:46:32,360 --> 01:46:34,610
problems as if you have more soft and

1573
01:46:34,610 --> 01:46:37,400
there is a better chance that there is

1574
01:46:37,400 --> 01:46:43,820
some security program as well in them so

1575
01:46:43,820 --> 01:46:50,540
this is why it is recommended to change

1576
01:46:50,540 --> 01:46:53,330
the unified block management layer

1577
01:46:53,330 --> 01:46:56,990
instead of using maybe a different a

1578
01:46:56,990 --> 01:46:59,060
great look at the theatres on your

1579
01:46:59,060 --> 01:47:02,840
systems it saves you save some computing

1580
01:47:02,840 --> 01:47:07,670
network and human resources it's a it's

1581
01:47:07,670 --> 01:47:10,670
also easier to push through security and

1582
01:47:10,670 --> 01:47:12,650
security and operation themes as they

1583
01:47:12,650 --> 01:47:15,230
have to check out a single soft word

1584
01:47:15,230 --> 01:47:17,600
instead of four or five different

1585
01:47:17,600 --> 01:47:19,480
different applications

1586
01:47:19,480 --> 01:47:22,690
this way you can separate log management

1587
01:47:22,690 --> 01:47:26,290
from analytics which means that you can

1588
01:47:26,290 --> 01:47:31,070
easier replace either components on your

1589
01:47:31,070 --> 01:47:35,600
system and as an added bonus if the

1590
01:47:35,600 --> 01:47:41,180
analytics solution you use is based on

1591
01:47:41,180 --> 01:47:45,230
the amount of data then you can save

1592
01:47:45,230 --> 01:47:47,300
quite a lot on licensing and hardware

1593
01:47:47,300 --> 01:47:53,210
cost as well when the next slides I will

1594
01:47:53,210 --> 01:47:56,600
show you how to implement block manage

1595
01:47:56,600 --> 01:47:58,430
block management based on system mg

1596
01:47:58,430 --> 01:48:00,620
first of all a quick introduction to

1597
01:48:00,620 --> 01:48:04,540
system mg and its four major roles then

1598
01:48:04,540 --> 01:48:09,430
a few words about modes of operation and

1599
01:48:09,430 --> 01:48:13,750
finally I will show you a configuration

1600
01:48:13,750 --> 01:48:22,040
of system mg so what is syste Gangji

1601
01:48:22,040 --> 01:48:24,260
it's an enhanced rocking demon with a

1602
01:48:24,260 --> 01:48:26,270
strong focus on portability and high

1603
01:48:26,270 --> 01:48:28,580
performance entire collection it's

1604
01:48:28,580 --> 01:48:31,860
originally developed in C

1605
01:48:31,860 --> 01:48:34,610
which is good both for performance and

1606
01:48:34,610 --> 01:48:40,290
portability but it can be extended in

1607
01:48:40,290 --> 01:48:43,430
Python and Java as well

1608
01:48:43,430 --> 01:48:47,540
the first major role is data collection

1609
01:48:47,540 --> 01:48:51,540
this is what I already mentioned earlier

1610
01:48:51,540 --> 01:48:54,060
that if you have a unified load

1611
01:48:54,060 --> 01:48:56,940
management clear then you can use the

1612
01:48:56,940 --> 01:48:59,910
very same software for collecting system

1613
01:48:59,910 --> 01:49:02,220
and application logs together which can

1614
01:49:02,220 --> 01:49:04,470
provide quite interesting contextual

1615
01:49:04,470 --> 01:49:07,530
data for either side syslog-ng supports

1616
01:49:07,530 --> 01:49:09,840
a wide variety of platforms of specific

1617
01:49:09,840 --> 01:49:12,720
sources like dev local to Jordan are

1618
01:49:12,720 --> 01:49:15,690
sunscreens and so on as a central

1619
01:49:15,690 --> 01:49:19,860
collector it knows both the legacy and

1620
01:49:19,860 --> 01:49:22,680
the new system protocol over UDP TCP and

1621
01:49:22,680 --> 01:49:25,710
encrypted connections and can collect

1622
01:49:25,710 --> 01:49:29,450
locks or any kind of the text data from

1623
01:49:29,450 --> 01:49:32,580
applications through five circuits and

1624
01:49:32,580 --> 01:49:36,330
so on and we also have now George Walker

1625
01:49:36,330 --> 01:49:39,690
a bit slower than implementing in C but

1626
01:49:39,690 --> 01:49:43,490
a lot easier to develop it's you can

1627
01:49:43,490 --> 01:49:48,440
write source source drivers in Python

1628
01:49:48,440 --> 01:49:53,190
some examples are HTTP servers like the

1629
01:49:53,190 --> 01:49:55,770
satirist planck HDTVs and collector or

1630
01:49:55,770 --> 01:50:02,480
the Kafka source and quite a few more

1631
01:50:04,430 --> 01:50:08,340
the next row is processing you can

1632
01:50:08,340 --> 01:50:09,510
classify normalizer

1633
01:50:09,510 --> 01:50:11,670
and structural messages with built in

1634
01:50:11,670 --> 01:50:16,170
parsers like CSV parts are for columnar

1635
01:50:16,170 --> 01:50:18,300
data pattern BB for unstructured data

1636
01:50:18,300 --> 01:50:22,410
like an SSH login message but we also

1637
01:50:22,410 --> 01:50:28,380
have Jason XML a value these parts are

1638
01:50:28,380 --> 01:50:30,660
for some as a trick date format and so

1639
01:50:30,660 --> 01:50:34,590
on systems we can also rewrite log

1640
01:50:34,590 --> 01:50:36,360
messages and you don't have to think

1641
01:50:36,360 --> 01:50:38,340
about falsifying messages here but for

1642
01:50:38,340 --> 01:50:40,980
example an immunization was needed by

1643
01:50:40,980 --> 01:50:43,530
quite a few computer components

1644
01:50:43,530 --> 01:50:47,530
requirements you can also enrich data

1645
01:50:47,530 --> 01:50:51,370
like adding geolocation based on the IP

1646
01:50:51,370 --> 01:50:54,250
addresses or additional fields based on

1647
01:50:54,250 --> 01:51:03,520
the message content and we also you can

1648
01:51:03,520 --> 01:51:08,190
also extend syslog-ng here using Python

1649
01:51:08,190 --> 01:51:10,840
you can implement any of the above

1650
01:51:10,840 --> 01:51:15,340
features in python or enrich locks from

1651
01:51:15,340 --> 01:51:20,739
external databases and also do filtering

1652
01:51:20,739 --> 01:51:24,130
from python which brings us to our next

1653
01:51:24,130 --> 01:51:28,660
topic data filtering it has two main

1654
01:51:28,660 --> 01:51:33,730
uses both of them are very important if

1655
01:51:33,730 --> 01:51:37,810
you have central collection and

1656
01:51:37,810 --> 01:51:41,950
forwarding log messages to different

1657
01:51:41,950 --> 01:51:47,650
analytics of softwares the first one is

1658
01:51:47,650 --> 01:51:50,590
discarding service dog messages like not

1659
01:51:50,590 --> 01:51:54,430
storing debug level messages the other

1660
01:51:54,430 --> 01:51:56,110
one is message routing

1661
01:51:56,110 --> 01:51:59,320
making sure that all relevant

1662
01:51:59,320 --> 01:52:00,790
information reaches the right

1663
01:52:00,790 --> 01:52:03,070
destination right for example all

1664
01:52:03,070 --> 01:52:06,220
authentication related even reach your

1665
01:52:06,220 --> 01:52:09,640
same system there are quite a few

1666
01:52:09,640 --> 01:52:12,250
possibilities it can be based on message

1667
01:52:12,250 --> 01:52:15,190
content different parameters you can do

1668
01:52:15,190 --> 01:52:17,470
comparisons many different filtering

1669
01:52:17,470 --> 01:52:20,500
functions and best of all any of these

1670
01:52:20,500 --> 01:52:25,680
can be combined using boolean operators

1671
01:52:26,910 --> 01:52:32,230
finally you want to store your dog

1672
01:52:32,230 --> 01:52:34,720
message store or forward your messages

1673
01:52:34,720 --> 01:52:38,050
somewhere traditional system messages

1674
01:52:38,050 --> 01:52:42,370
were collected into flat files and this

1675
01:52:42,370 --> 01:52:46,060
is still the most used format for long

1676
01:52:46,060 --> 01:52:48,520
term long term arriving with log

1677
01:52:48,520 --> 01:52:55,780
messages but you can store looks to

1678
01:52:55,780 --> 01:52:57,310
database is too

1679
01:52:57,310 --> 01:52:58,900
different big data destinations

1680
01:52:58,900 --> 01:53:04,650
elasticsearch and forward two different

1681
01:53:04,650 --> 01:53:09,870
locality systems as well if an

1682
01:53:10,410 --> 01:53:14,010
destination is not yet readily available

1683
01:53:14,010 --> 01:53:16,330
there is a good chance that you can

1684
01:53:16,330 --> 01:53:20,440
create your own based on HTTP

1685
01:53:20,440 --> 01:53:23,490
destination that is what we use for

1686
01:53:23,490 --> 01:53:29,230
Splunk or elasticsearch or you can code

1687
01:53:29,230 --> 01:53:37,090
it in Python or Java as well most people

1688
01:53:37,090 --> 01:53:41,850
are most people know only two modes of

1689
01:53:41,850 --> 01:53:44,500
system the operation the client mode and

1690
01:53:44,500 --> 01:53:47,140
the server mode I'm the client is

1691
01:53:47,140 --> 01:53:50,470
sending the blog messages to a central

1692
01:53:50,470 --> 01:53:52,690
location and the server is collecting

1693
01:53:52,690 --> 01:53:57,030
globe messages but there is also an

1694
01:53:57,150 --> 01:53:59,980
third possible bits it's called the

1695
01:53:59,980 --> 01:54:04,840
romaine node it's an intermediate so you

1696
01:54:04,840 --> 01:54:08,710
can your clients can send log messages

1697
01:54:08,710 --> 01:54:11,710
to the relay which collects messages

1698
01:54:11,710 --> 01:54:15,310
from a department or a geographical

1699
01:54:15,310 --> 01:54:17,920
location and forwards it to a server

1700
01:54:17,920 --> 01:54:24,700
why arrays are so important for example

1701
01:54:24,700 --> 01:54:26,680
if you have a UDP source you want to

1702
01:54:26,680 --> 01:54:28,600
collect these log messages as close to

1703
01:54:28,600 --> 01:54:31,840
the source as possible so if you have an

1704
01:54:31,840 --> 01:54:37,840
or oiled router or switch or networking

1705
01:54:37,840 --> 01:54:43,210
device you want to have syslog-ng

1706
01:54:43,210 --> 01:54:45,940
collecting these messages as close to it

1707
01:54:45,940 --> 01:54:49,300
as possible and forward it to the center

1708
01:54:49,300 --> 01:54:53,500
server using a multi-layer protocol it's

1709
01:54:53,500 --> 01:55:01,210
also scalability if you have many hosts

1710
01:55:01,210 --> 01:55:05,100
to collect messages from then you can

1711
01:55:05,100 --> 01:55:07,929
distribute

1712
01:55:07,929 --> 01:55:10,880
parsing and filtering of these messages

1713
01:55:10,880 --> 01:55:16,219
to the delays and it also gives

1714
01:55:16,219 --> 01:55:18,949
structure to your network so you can put

1715
01:55:18,949 --> 01:55:22,519
a delay to each of your departments or

1716
01:55:22,519 --> 01:55:25,659
each of your geographical locations and

1717
01:55:25,659 --> 01:55:29,090
collect log messages there and for water

1718
01:55:29,090 --> 01:55:30,139
central server

1719
01:55:30,139 --> 01:55:34,400
it can be quite useful for example if

1720
01:55:34,400 --> 01:55:37,999
you have your network down or the

1721
01:55:37,999 --> 01:55:39,650
central server down for mental

1722
01:55:39,650 --> 01:55:44,570
maintenance plus log messages are sent

1723
01:55:44,570 --> 01:55:49,010
from the hosts even if the central

1724
01:55:49,010 --> 01:55:54,619
server is an another let's talk a few

1725
01:55:54,619 --> 01:55:58,909
words about log messages if you take a

1726
01:55:58,909 --> 01:56:02,840
look at your water log messages you will

1727
01:56:02,840 --> 01:56:05,389
find many similar messages like the one

1728
01:56:05,389 --> 01:56:06,079
in on-screen

1729
01:56:06,079 --> 01:56:10,190
it's an SSH login message and you will

1730
01:56:10,190 --> 01:56:12,860
see that it's practical at date a host

1731
01:56:12,860 --> 01:56:16,460
name and some texts after it that tax

1732
01:56:16,460 --> 01:56:20,119
part is almost complete English sentence

1733
01:56:20,119 --> 01:56:22,489
with some variable pardoning it's pretty

1734
01:56:22,489 --> 01:56:27,110
easy to read by a human but as soon as

1735
01:56:27,110 --> 01:56:29,719
you want to create alerts or reports on

1736
01:56:29,719 --> 01:56:34,429
it or want to decide to which analytics

1737
01:56:34,429 --> 01:56:37,670
tool to forward this message you will

1738
01:56:37,670 --> 01:56:40,579
have difficulties as you don't really

1739
01:56:40,579 --> 01:56:43,340
know what is inside it's easy to read by

1740
01:56:43,340 --> 01:56:46,699
you but not easy to act on it by a

1741
01:56:46,699 --> 01:56:49,150
computer

1742
01:56:49,449 --> 01:56:52,280
the solution for this is structured

1743
01:56:52,280 --> 01:56:57,739
locking if we come back to my SSH login

1744
01:56:57,739 --> 01:57:01,849
example you see that it can be described

1745
01:57:01,849 --> 01:57:05,719
as a application name user name and the

1746
01:57:05,719 --> 01:57:09,289
source IP the good news is that sister

1747
01:57:09,289 --> 01:57:11,570
Angie has named a new purse inside right

1748
01:57:11,570 --> 01:57:14,420
from the beginning the date facility

1749
01:57:14,420 --> 01:57:17,289
priority program name and so on were all

1750
01:57:17,289 --> 01:57:21,030
stored as name value pairs inside system

1751
01:57:21,030 --> 01:57:24,240
ng right from the beginning and parsers

1752
01:57:24,240 --> 01:57:27,510
of Cecil Genji can turn unstructured and

1753
01:57:27,510 --> 01:57:30,330
some of the structured data into name

1754
01:57:30,330 --> 01:57:35,760
value pairs as well why name value pairs

1755
01:57:35,760 --> 01:57:41,510
are so important because they can make

1756
01:57:41,510 --> 01:57:47,520
filtering a lot more precise if you just

1757
01:57:47,520 --> 01:57:53,850
see that it's an SSH it's a message from

1758
01:57:53,850 --> 01:57:58,470
SSH then you don't know much about what

1759
01:57:58,470 --> 01:58:01,290
is going on but if the message is parsed

1760
01:58:01,290 --> 01:58:04,080
and you see but it's a login by root

1761
01:58:04,080 --> 01:58:08,490
then you can act on this message and

1762
01:58:08,490 --> 01:58:13,350
create an alert for example to receive

1763
01:58:13,350 --> 01:58:14,940
an email or a slot machine

1764
01:58:14,940 --> 01:58:17,820
smack message as soon as root logged

1765
01:58:17,820 --> 01:58:24,840
into this one bar when it comes to

1766
01:58:24,840 --> 01:58:27,540
configuring system mg my initial initial

1767
01:58:27,540 --> 01:58:30,600
advice is always don't panic it's simple

1768
01:58:30,600 --> 01:58:32,840
and logical even even if it looks

1769
01:58:32,840 --> 01:58:36,870
difficult at first it has a PI prime

1770
01:58:36,870 --> 01:58:38,490
owner with many different building

1771
01:58:38,490 --> 01:58:40,740
blocks like source destination floaters

1772
01:58:40,740 --> 01:58:43,710
and so on and these building blocks are

1773
01:58:43,710 --> 01:58:48,090
connected into a pipeline using log

1774
01:58:48,090 --> 01:58:52,080
statements on the flag on the next slide

1775
01:58:52,080 --> 01:58:56,730
I will show you a very basic system G

1776
01:58:56,730 --> 01:58:59,760
configuration which is good for VAR log

1777
01:58:59,760 --> 01:59:08,510
messages and then I will show you

1778
01:59:10,860 --> 01:59:13,350
a configuration for Center collecting

1779
01:59:13,350 --> 01:59:16,590
and processing log messages from

1780
01:59:16,590 --> 01:59:20,100
Surakarta so that's why I'm quite happy

1781
01:59:20,100 --> 01:59:22,680
that I'm coming right after Basilicata

1782
01:59:22,680 --> 01:59:31,740
presentation so here is a basic syslog

1783
01:59:31,740 --> 01:59:33,930
and reconfiguration as you can see it

1784
01:59:33,930 --> 01:59:34,830
starts with

1785
01:59:34,830 --> 01:59:38,810
version number then you can include

1786
01:59:38,810 --> 01:59:42,480
external configurations the first one

1787
01:59:42,480 --> 01:59:46,320
here is SEO conf which stands for Cisco

1788
01:59:46,320 --> 01:59:51,740
Eng configuration library it has lots of

1789
01:59:51,740 --> 01:59:57,450
good configuration snippets in it doing

1790
01:59:57,450 --> 02:00:03,840
some magic work like finding credit card

1791
02:00:03,840 --> 02:00:06,120
numbers in log messages and masking them

1792
02:00:06,120 --> 02:00:12,030
and/or process part things to do log

1793
02:00:12,030 --> 02:00:20,940
messages and for Cisco devices lock with

1794
02:00:20,940 --> 02:00:23,730
pretty broken message format and this

1795
02:00:23,730 --> 02:00:29,310
using us you can still part most of the

1796
02:00:29,310 --> 02:00:31,980
Cisco log messages so there are quite a

1797
02:00:31,980 --> 02:00:34,670
lot of interesting stuff included

1798
02:00:34,670 --> 02:00:38,210
obviously you can comment your

1799
02:00:38,210 --> 02:00:42,780
configuration options is for configuring

1800
02:00:42,780 --> 02:00:45,660
global options so if you want to

1801
02:00:45,660 --> 02:00:48,240
configure something globally for all all

1802
02:00:48,240 --> 02:00:50,610
of your sources or destinations that you

1803
02:00:50,610 --> 02:00:56,630
can set here next we can see a bunch of

1804
02:00:56,630 --> 02:01:01,890
building blocks a source destination and

1805
02:01:01,890 --> 02:01:08,280
the filter and on the fourth though you

1806
02:01:08,280 --> 02:01:11,370
can see that there is a log statement

1807
02:01:11,370 --> 02:01:13,230
which connects all of these together so

1808
02:01:13,230 --> 02:01:17,460
a source for local log messages filter

1809
02:01:17,460 --> 02:01:19,890
and the destination for water log

1810
02:01:19,890 --> 02:01:23,730
messages at the bottom of the screen you

1811
02:01:23,730 --> 02:01:26,790
can see another include this is used in

1812
02:01:26,790 --> 02:01:29,700
most of the system country packet

1813
02:01:29,700 --> 02:01:32,970
packages now so that you can easily

1814
02:01:32,970 --> 02:01:36,180
extend system energy configuration

1815
02:01:36,180 --> 02:01:41,670
without modifying the basic

1816
02:01:41,670 --> 02:01:46,730
configuration and

1817
02:01:46,920 --> 02:01:51,170
and this is what I used for Surakarta

1818
02:01:51,170 --> 02:01:54,390
it's an additional configuration in this

1819
02:01:54,390 --> 02:02:01,980
directory surakarta looks in JSON format

1820
02:02:01,980 --> 02:02:10,770
and here I have DP TCP source with some

1821
02:02:10,770 --> 02:02:13,650
ink and it has a flag called no pars

1822
02:02:13,650 --> 02:02:15,990
meaning that the incoming clock messages

1823
02:02:15,990 --> 02:02:19,980
are not part immediately by syslog-ng as

1824
02:02:19,980 --> 02:02:24,590
it expects syslog messages not Jason so

1825
02:02:24,590 --> 02:02:28,890
here we disable parsing and on at the

1826
02:02:28,890 --> 02:02:31,020
bottom of the screen you can see another

1827
02:02:31,020 --> 02:02:31,800
parser

1828
02:02:31,800 --> 02:02:35,880
it's a JSON parser which is parsing the

1829
02:02:35,880 --> 02:02:39,780
incoming Jason messages creating name

1830
02:02:39,780 --> 02:02:44,580
value pairs from it and all of them have

1831
02:02:44,580 --> 02:02:52,250
the silica top graphics here we do some

1832
02:02:52,250 --> 02:02:57,390
geolocation magic at the top of the

1833
02:02:57,390 --> 02:03:01,430
screen we see the GIP parser which takes

1834
02:03:01,430 --> 02:03:05,130
name value pair containing an IP address

1835
02:03:05,130 --> 02:03:09,630
and creates a new name value pair from

1836
02:03:09,630 --> 02:03:14,640
it using the GIP parser at the bottom of

1837
02:03:14,640 --> 02:03:16,770
the screen you can see a divided rule

1838
02:03:16,770 --> 02:03:22,400
this one is used to change the

1839
02:03:22,400 --> 02:03:25,560
geolocation into a format which is

1840
02:03:25,560 --> 02:03:35,640
understood by elasticsearch here we

1841
02:03:35,640 --> 02:03:41,040
define two destinations one for local

1842
02:03:41,040 --> 02:03:45,990
arriving of the log messages in JSON

1843
02:03:45,990 --> 02:03:48,300
format so we have all of the name value

1844
02:03:48,300 --> 02:03:50,610
pairs but not just the one coming from

1845
02:03:50,610 --> 02:03:56,010
silicon but also those which we created

1846
02:03:56,010 --> 02:04:01,940
through message parsing this like GIP

1847
02:04:01,940 --> 02:04:06,360
and at the bottom of the screen we see

1848
02:04:06,360 --> 02:04:09,150
an elastic search destination using the

1849
02:04:09,150 --> 02:04:18,570
very same Jason formatting here we can

1850
02:04:18,570 --> 02:04:22,170
see a few additional possibilities by a

1851
02:04:22,170 --> 02:04:24,480
Python we defined here a python parser

1852
02:04:24,480 --> 02:04:28,940
we will see the code later on and at

1853
02:04:28,940 --> 02:04:33,740
contextual data can be used to add

1854
02:04:33,740 --> 02:04:37,680
additional information fields based on

1855
02:04:37,680 --> 02:04:47,880
the message content so here we have list

1856
02:04:47,880 --> 02:04:51,780
we take sort the source IP add in source

1857
02:04:51,780 --> 02:04:57,900
IP address as a data selector and based

1858
02:04:57,900 --> 02:05:01,380
on that we add a few more information

1859
02:05:01,380 --> 02:05:07,350
from an external CSV file it can be we

1860
02:05:07,350 --> 02:05:10,470
use it on local IP addresses it can be

1861
02:05:10,470 --> 02:05:13,740
good for example to add the room number

1862
02:05:13,740 --> 02:05:19,550
or rack number or administrate or name

1863
02:05:19,550 --> 02:05:23,990
whatever you want to add to speed up

1864
02:05:23,990 --> 02:05:29,160
investigation here you can see the

1865
02:05:29,160 --> 02:05:32,820
Python code shorter code can be included

1866
02:05:32,820 --> 02:05:36,210
within Cisco Gangi as well for longer

1867
02:05:36,210 --> 02:05:41,610
one it's not really recommended but for

1868
02:05:41,610 --> 02:05:45,180
short it's pretty easy just enter a few

1869
02:05:45,180 --> 02:05:50,280
lines in this case it's resolved in IP

1870
02:05:50,280 --> 02:05:56,760
addresses the host names and here we

1871
02:05:56,760 --> 02:06:00,780
have a log statement it's quite a long

1872
02:06:00,780 --> 02:06:07,920
one as with recent versions it's easy to

1873
02:06:07,920 --> 02:06:12,480
add additional logic not just the source

1874
02:06:12,480 --> 02:06:13,990
filter

1875
02:06:13,990 --> 02:06:17,830
in destination but a lot more so what

1876
02:06:17,830 --> 02:06:21,120
you see here that we have the silk at

1877
02:06:21,120 --> 02:06:23,560
source what we defined earlier me

1878
02:06:23,560 --> 02:06:25,420
reference it from here then the

1879
02:06:25,420 --> 02:06:33,760
jsonparser is referenced and next we use

1880
02:06:33,760 --> 02:06:37,210
the Python parser but only for those IP

1881
02:06:37,210 --> 02:06:40,500
addresses which are not local this is a

1882
02:06:40,500 --> 02:06:47,490
simple filter on the suited I feel field

1883
02:06:47,490 --> 02:06:52,090
so if it doesn't match hundred twenty

1884
02:06:52,090 --> 02:06:58,840
two dot 168 then we consider it as

1885
02:06:58,840 --> 02:07:04,020
external and we use the Python resolver

1886
02:07:05,880 --> 02:07:12,870
next we use the at contact to our data

1887
02:07:12,870 --> 02:07:17,440
on local IP addresses which I have shown

1888
02:07:17,440 --> 02:07:20,860
you earlier that it's using an external

1889
02:07:20,860 --> 02:07:26,220
as CSV file so you can easily add

1890
02:07:26,220 --> 02:07:28,600
additional fields based on the IP

1891
02:07:28,600 --> 02:07:37,290
address in this case here I show you

1892
02:07:37,290 --> 02:07:43,270
another filtering it's checking the

1893
02:07:43,270 --> 02:07:47,670
Kira's information from the surakarta

1894
02:07:47,670 --> 02:07:51,850
locks and if it's matching slash dot

1895
02:07:51,850 --> 02:07:56,680
slash dot dot org then it's writing to a

1896
02:07:56,680 --> 02:08:01,360
separate file but it could be sent to an

1897
02:08:01,360 --> 02:08:04,210
assembly B destination to slack or

1898
02:08:04,210 --> 02:08:07,870
whatever you want to receive real-time

1899
02:08:07,870 --> 02:08:11,790
alerting that one of your user is

1900
02:08:11,790 --> 02:08:14,920
reading something what he shouldn't do

1901
02:08:14,920 --> 02:08:18,180
in work time

1902
02:08:21,990 --> 02:08:25,870
Sisto Kenji can also do black and white

1903
02:08:25,870 --> 02:08:33,600
list filtering here I added a filter

1904
02:08:33,600 --> 02:08:38,260
which is checking an IP address list of

1905
02:08:38,260 --> 02:08:41,880
Marvel control and command and control

1906
02:08:41,880 --> 02:08:46,210
machines and if the IP address is

1907
02:08:46,210 --> 02:08:51,930
matching then it creates a name value

1908
02:08:51,930 --> 02:08:58,140
with the content of same problem as it

1909
02:08:58,140 --> 02:09:05,110
right okay as value here you can use it

1910
02:09:05,110 --> 02:09:14,770
for our King or create a table in Cabana

1911
02:09:14,770 --> 02:09:18,300
or whatever you want

1912
02:09:18,900 --> 02:09:22,570
next we reference the GIP parser and

1913
02:09:22,570 --> 02:09:28,630
rewrite rule and finally we store log

1914
02:09:28,630 --> 02:09:31,750
messages both local to the local file

1915
02:09:31,750 --> 02:09:36,240
destination and do elasticsearch and

1916
02:09:36,240 --> 02:09:40,800
here is a screen shot from elasticsearch

1917
02:09:40,800 --> 02:09:47,590
the VIP part results of the GIP parsing

1918
02:09:47,590 --> 02:09:55,510
can be seen here so as a summary using

1919
02:09:55,510 --> 02:09:59,530
Cisco Gangji you get high performance

1920
02:09:59,530 --> 02:10:01,660
and reliable local action you can

1921
02:10:01,660 --> 02:10:06,700
greatly simplify your looking retoucher

1922
02:10:06,700 --> 02:10:11,530
as you can use a single application for

1923
02:10:11,530 --> 02:10:16,560
call both for cash collecting both local

1924
02:10:16,560 --> 02:10:19,060
syslog messages and application data

1925
02:10:19,060 --> 02:10:22,630
it's also easier to use data as messages

1926
02:10:22,630 --> 02:10:25,330
can be parsed and presented in a

1927
02:10:25,330 --> 02:10:29,920
ready-to-use format and Cisco Gangi can

1928
02:10:29,920 --> 02:10:32,290
also greatly lower the load on your

1929
02:10:32,290 --> 02:10:33,880
destinations

1930
02:10:33,880 --> 02:10:37,150
by efficient message filtering and

1931
02:10:37,150 --> 02:10:42,420
routing if you became interested

1932
02:10:42,420 --> 02:10:46,510
checking out sister Gangi our website is

1933
02:10:46,510 --> 02:10:49,570
sister ganji.com the source code and

1934
02:10:49,570 --> 02:10:54,010
issued the king is on github and you can

1935
02:10:54,010 --> 02:10:57,429
contact developers and users on our

1936
02:10:57,429 --> 02:11:03,940
mailing list and also jitter if you

1937
02:11:03,940 --> 02:11:11,170
prefer chatting do you have any

1938
02:11:11,170 --> 02:11:25,090
questions thanks for your talk so we

1939
02:11:25,090 --> 02:11:29,159
have no question in the queue a system

1940
02:11:29,159 --> 02:11:34,199
at the moment I I do have one question

1941
02:11:34,199 --> 02:11:40,840
right now so my question is in history

1942
02:11:40,840 --> 02:11:45,489
NJ currently are there a lot of passes

1943
02:11:45,489 --> 02:11:49,780
that are implemented and available for

1944
02:11:49,780 --> 02:11:52,300
example for Iost

1945
02:11:52,300 --> 02:11:57,840
classical linux logs or things like that

1946
02:11:58,230 --> 02:12:05,139
there are quite a few parsers for where

1947
02:12:05,139 --> 02:12:07,840
to start I don't know all of them from

1948
02:12:07,840 --> 02:12:11,380
the top of my head one of the oldest one

1949
02:12:11,380 --> 02:12:15,070
is the CSV parser which I mentioned

1950
02:12:15,070 --> 02:12:19,360
that's good for anything columnar data

1951
02:12:19,360 --> 02:12:27,670
like a batch common log or similar log

1952
02:12:27,670 --> 02:12:32,409
messages then we have patent baby that's

1953
02:12:32,409 --> 02:12:40,540
for regular Linux or UNIX love messages

1954
02:12:40,540 --> 02:12:44,530
that's for freeform text we don't have

1955
02:12:44,530 --> 02:12:46,330
too many parts

1956
02:12:46,330 --> 02:12:51,120
patterns in that one but if you have

1957
02:12:51,120 --> 02:12:55,750
lock messages we can have on the mailing

1958
02:12:55,750 --> 02:12:59,770
list or ninja tart have to write you one

1959
02:12:59,770 --> 02:13:03,400
for your specific blog message then we

1960
02:13:03,400 --> 02:13:11,020
also have Jason X Mar who partners we

1961
02:13:11,020 --> 02:13:15,660
have many different parsers for

1962
02:13:15,660 --> 02:13:18,490
different network devices as most of

1963
02:13:18,490 --> 02:13:21,460
them mess up the system format and try

1964
02:13:21,460 --> 02:13:25,660
to do syslog but they do just something

1965
02:13:25,660 --> 02:13:28,900
similar but we can correct those

1966
02:13:28,900 --> 02:13:34,990
mistakes by combining these parsers so

1967
02:13:34,990 --> 02:13:38,640
there are quite a lot of possibilities

1968
02:13:38,640 --> 02:13:41,740
okay and so for example it would be

1969
02:13:41,740 --> 02:13:45,790
possible to to have like an XML source

1970
02:13:45,790 --> 02:13:50,560
and to transform this to JSON message to

1971
02:13:50,560 --> 02:13:52,630
forward it to elasticsearch for example

1972
02:13:52,630 --> 02:13:58,690
yes I'm not hundred percent sure if all

1973
02:13:58,690 --> 02:14:06,700
of X XML is implemented I mean I recall

1974
02:14:06,700 --> 02:14:11,830
that there are some parts of XML which

1975
02:14:11,830 --> 02:14:14,170
currently are not yet possible to be

1976
02:14:14,170 --> 02:14:16,570
parsed correctly wise sister Kenji but

1977
02:14:16,570 --> 02:14:23,740
most of it and then you can simply it as

1978
02:14:23,740 --> 02:14:27,070
its parts in XML it creates name value

1979
02:14:27,070 --> 02:14:29,260
pairs and from that you can create the

1980
02:14:29,260 --> 02:14:34,300
JSON on the output side so yes it is

1981
02:14:34,300 --> 02:14:42,960
possible with some limitations okay okay

1982
02:14:48,880 --> 02:14:52,940
well don't think we have any more

1983
02:14:52,940 --> 02:14:57,949
question right now so well then thank

1984
02:14:57,949 --> 02:15:01,449
you again for for the talk thank you

1985
02:15:01,449 --> 02:15:05,870
and then we'll just have a quick pose

1986
02:15:05,870 --> 02:15:09,500
waiting for the right time to start the

1987
02:15:09,500 --> 02:15:11,920
next talk

1988
02:19:32,590 --> 02:19:37,010
[Music]

1989
02:19:46,590 --> 02:19:49,840
[Music]

1990
02:19:56,230 --> 02:20:02,630
okay so we will have the nest the next

1991
02:20:02,630 --> 02:20:06,710
torque now the last hole for today so it

1992
02:20:06,710 --> 02:20:09,710
will be by Philip and Tebow from the

1993
02:20:09,710 --> 02:20:12,910
crowd psych project so that they will

1994
02:20:12,910 --> 02:20:15,980
they will present us this project which

1995
02:20:15,980 --> 02:20:21,471
is about trying to a better sharing in

1996
02:20:21,471 --> 02:20:25,761
terms of attack detection and attack

1997
02:20:25,761 --> 02:20:31,311
patterns and in reaction to attacks okay

1998
02:20:31,311 --> 02:20:52,490
so everything set up okay well right now

1999
02:20:52,490 --> 02:20:56,540
we can hear you both so right and we

2000
02:20:56,540 --> 02:21:02,511
have your your presentation okay thank

2001
02:21:02,511 --> 02:21:04,400
you for having us first of all we'd like

2002
02:21:04,400 --> 02:21:06,051
to make our first pass assault

2003
02:21:06,051 --> 02:21:07,880
thanks for the team selecting our paper

2004
02:21:07,880 --> 02:21:09,920
and we are very very proud to introduce

2005
02:21:09,920 --> 02:21:13,880
this for the first time actually in an

2006
02:21:13,880 --> 02:21:17,000
open community environment it's about

2007
02:21:17,000 --> 02:21:21,820
project about a new product that is a

2008
02:21:26,110 --> 02:21:34,130
situation is right we do see them yeah

2009
02:21:34,130 --> 02:21:41,990
it's it's ok we right now ok so yeah so

2010
02:21:41,990 --> 02:21:43,790
sorry so the product is about security

2011
02:21:43,790 --> 02:21:45,561
right it's about having a global

2012
02:21:45,561 --> 02:21:49,040
security system network worldwide with a

2013
02:21:49,040 --> 02:21:51,620
lot of participant that will help secure

2014
02:21:51,620 --> 02:21:54,710
each other ok so let's see a bit how it

2015
02:21:54,710 --> 02:21:57,891
works so first of all the problem is

2016
02:21:57,891 --> 02:22:00,380
known to everyone I guess in the room we

2017
02:22:00,380 --> 02:22:01,011
have a problem

2018
02:22:01,011 --> 02:22:03,970
when we are CQC so whatever your name

2019
02:22:03,970 --> 02:22:06,670
on the card you have a time problem the

2020
02:22:06,670 --> 02:22:09,160
time between you know where the fewer

2021
02:22:09,160 --> 02:22:10,989
day is out on the market and the moment

2022
02:22:10,989 --> 02:22:12,160
where you get compromised

2023
02:22:12,160 --> 02:22:13,899
you want where you get compromised I'm

2024
02:22:13,899 --> 02:22:15,520
not worried detect the hacker and so on

2025
02:22:15,520 --> 02:22:16,840
its first so the time is you always

2026
02:22:16,840 --> 02:22:18,430
against you I'm sad you don't even

2027
02:22:18,430 --> 02:22:20,770
choose when it starts its the hacker

2028
02:22:20,770 --> 02:22:23,680
choosing when it attacks you then does a

2029
02:22:23,680 --> 02:22:25,810
hack that's the problem of action so

2030
02:22:25,810 --> 02:22:27,550
there are a lot of ports that are just

2031
02:22:27,550 --> 02:22:31,229
unfiltered like you know web ports ABS

2032
02:22:31,229 --> 02:22:34,510
maze DNS and so on you name it you know

2033
02:22:34,510 --> 02:22:35,260
it's not a problem

2034
02:22:35,260 --> 02:22:36,939
there's a lot of ports actually there

2035
02:22:36,939 --> 02:22:38,649
are more ports but are unfiltered

2036
02:22:38,649 --> 02:22:41,979
compared to the filtered one there's the

2037
02:22:41,979 --> 02:22:44,260
parameter that is changing also a lot so

2038
02:22:44,260 --> 02:22:46,630
with cloud and shadow IT you don't

2039
02:22:46,630 --> 02:22:48,670
really know where is what when things

2040
02:22:48,670 --> 02:22:50,350
are happening when your people are

2041
02:22:50,350 --> 02:22:53,109
publishing code and where and beside now

2042
02:22:53,109 --> 02:22:55,149
with this Kovac crisis we have like an

2043
02:22:55,149 --> 02:22:57,370
extension of the parameter I mean people

2044
02:22:57,370 --> 02:22:59,620
are bring literally their home network

2045
02:22:59,620 --> 02:23:07,750
at work so when someone is looking on

2046
02:23:07,750 --> 02:23:10,300
internet forever and and everything is

2047
02:23:10,300 --> 02:23:11,649
happening at home and you bring this to

2048
02:23:11,649 --> 02:23:16,029
your company some ask for the parameter

2049
02:23:16,029 --> 02:23:18,100
is changing a lot and money obviously

2050
02:23:18,100 --> 02:23:20,380
because the people that you are using

2051
02:23:20,380 --> 02:23:23,020
for resources that they stole free tools

2052
02:23:23,020 --> 02:23:25,810
like open-source tools and at that time

2053
02:23:25,810 --> 02:23:28,210
so basically it's nearly free for them

2054
02:23:28,210 --> 02:23:30,729
to attack you so these four cogwheels

2055
02:23:30,729 --> 02:23:32,620
are really the main problem we're trying

2056
02:23:32,620 --> 02:23:35,140
to solve here how do we do it it's

2057
02:23:35,140 --> 02:23:36,729
pretty simple actually what a solution

2058
02:23:36,729 --> 02:23:39,910
to be real time obviously we want to be

2059
02:23:39,910 --> 02:23:42,910
reputation based so we don't trust an IP

2060
02:23:42,910 --> 02:23:44,529
because it's coming from a known range

2061
02:23:44,529 --> 02:23:46,720
which was an IP because it has not done

2062
02:23:46,720 --> 02:23:49,739
crap for the last 72 hours for example

2063
02:23:49,739 --> 02:23:52,300
you want to decouple detection and

2064
02:23:52,300 --> 02:23:54,340
remediation like things are in very

2065
02:23:54,340 --> 02:23:56,200
modern architectures you have very

2066
02:23:56,200 --> 02:23:59,080
complex systems and you don't want maybe

2067
02:23:59,080 --> 02:24:00,880
your logs are stored on one place and

2068
02:24:00,880 --> 02:24:02,590
you want to Remini the problem at

2069
02:24:02,590 --> 02:24:04,210
another place so you want it to be

2070
02:24:04,210 --> 02:24:06,850
loosely coupled then you have the

2071
02:24:06,850 --> 02:24:08,560
behavior assessment this is what we will

2072
02:24:08,560 --> 02:24:11,170
see just right after so it's both

2073
02:24:11,170 --> 02:24:13,359
reputation based and behavior based and

2074
02:24:13,359 --> 02:24:15,880
we share that with the crowd all the

2075
02:24:15,880 --> 02:24:17,949
findings so this is where it's real

2076
02:24:17,949 --> 02:24:20,049
so smile video see we share everything

2077
02:24:20,049 --> 02:24:22,029
we find out together so that we are all

2078
02:24:22,029 --> 02:24:26,680
together more secure if you want I mean

2079
02:24:26,680 --> 02:24:33,459
whether fairly loud which is like your

2080
02:24:33,459 --> 02:24:34,989
parents used to use the left hand map

2081
02:24:34,989 --> 02:24:37,600
and we want to do what ways did with the

2082
02:24:37,600 --> 02:24:42,699
map you know Vegas so basically what the

2083
02:24:42,699 --> 02:24:44,949
firewall does everybody is very familiar

2084
02:24:44,949 --> 02:24:47,169
with this it does just basically filter

2085
02:24:47,169 --> 02:24:50,409
imports okay it's about like ports

2086
02:24:50,409 --> 02:24:54,069
ranges IP source as IP destinations and

2087
02:24:54,069 --> 02:24:57,069
so and so forth mainly this but then on

2088
02:24:57,069 --> 02:25:00,449
the right hand side what we do is we do

2089
02:25:00,449 --> 02:25:03,159
filter behavior so if we see someone

2090
02:25:03,159 --> 02:25:04,659
trying to do brute force for example

2091
02:25:04,659 --> 02:25:07,329
okay we do with the brute force or port

2092
02:25:07,329 --> 02:25:09,879
scan our web crawler exploit we try to

2093
02:25:09,879 --> 02:25:12,549
identify the behavior and not a fixed

2094
02:25:12,549 --> 02:25:16,180
pattern of a firewall how do we do that

2095
02:25:16,180 --> 02:25:19,089
actually we take a lot the locks you

2096
02:25:19,089 --> 02:25:21,759
want to share with with the system you

2097
02:25:21,759 --> 02:25:24,549
receive constantly bad IP least a block

2098
02:25:24,549 --> 02:25:26,229
list you know of people that we know are

2099
02:25:26,229 --> 02:25:28,930
malevolent or attacking your connection

2100
02:25:28,930 --> 02:25:31,239
or are taking your IP or taking your

2101
02:25:31,239 --> 02:25:33,430
technical stack we take for example

2102
02:25:33,430 --> 02:25:38,469
train from the cloud phrase from your

2103
02:25:38,469 --> 02:25:40,749
cloud or third-party connection we take

2104
02:25:40,749 --> 02:25:43,959
any any source of that I want then we

2105
02:25:43,959 --> 02:25:45,520
use a scenario that is written in a very

2106
02:25:45,520 --> 02:25:48,759
simple manner in Yemen actually it's

2107
02:25:48,759 --> 02:25:50,919
very descriptive language very easy to

2108
02:25:50,919 --> 02:25:54,699
do to write yourself so they are our

2109
02:25:54,699 --> 02:25:56,680
scenarios the community scenarios and

2110
02:25:56,680 --> 02:25:58,479
your scenarios that you might want to

2111
02:25:58,479 --> 02:26:00,549
write for example say you have a

2112
02:26:00,549 --> 02:26:03,879
customer is doing e-commerce and he's

2113
02:26:03,879 --> 02:26:05,709
warming up his cash flow is crawling

2114
02:26:05,709 --> 02:26:07,810
he's on site to warm up his cash but he

2115
02:26:07,810 --> 02:26:11,109
forgot to update his a system and he's

2116
02:26:11,109 --> 02:26:12,759
figuring for for himself

2117
02:26:12,759 --> 02:26:15,100
okay not a problem we know about it you

2118
02:26:15,100 --> 02:26:16,539
can put it in your scenario that you

2119
02:26:16,539 --> 02:26:19,569
didn't know that's not a problem you can

2120
02:26:19,569 --> 02:26:21,459
use then remedy you want the way you

2121
02:26:21,459 --> 02:26:24,129
want you can block if you want just

2122
02:26:24,129 --> 02:26:26,199
simply you can use a capture for example

2123
02:26:26,199 --> 02:26:27,969
if you're using your web layer or not

2124
02:26:27,969 --> 02:26:29,890
player instead of just blocking you can

2125
02:26:29,890 --> 02:26:30,700
just send a cat

2126
02:26:30,700 --> 02:26:33,280
in case you know you think this IP is a

2127
02:26:33,280 --> 02:26:35,620
large nut network it could be useful to

2128
02:26:35,620 --> 02:26:37,840
not block everyone you can limit right

2129
02:26:37,840 --> 02:26:40,930
for example like say you don't have the

2130
02:26:40,930 --> 02:26:43,689
right to access - admin you've been

2131
02:26:43,689 --> 02:26:46,450
looking for trouble with slash admin for

2132
02:26:46,450 --> 02:26:48,520
a while on many different IP so we don't

2133
02:26:48,520 --> 02:26:51,100
trust you - access - admin or you can

2134
02:26:51,100 --> 02:26:52,960
say for example send a multi-factor

2135
02:26:52,960 --> 02:26:54,430
authentication because we want to be

2136
02:26:54,430 --> 02:26:55,030
sure it's you right

2137
02:26:55,030 --> 02:26:56,800
and then once you found something that

2138
02:26:56,800 --> 02:26:58,300
is potentially a problem be a

2139
02:26:58,300 --> 02:27:00,700
problematic behavior you share this IP

2140
02:27:00,700 --> 02:27:02,590
with the rest of the community so you

2141
02:27:02,590 --> 02:27:04,479
get this idea has been doing aggressive

2142
02:27:04,479 --> 02:27:07,780
crawling toward me I blocked it you may

2143
02:27:07,780 --> 02:27:11,290
want to block it as well and more than

2144
02:27:11,290 --> 02:27:13,000
anything else in the world we all like

2145
02:27:13,000 --> 02:27:16,150
demos right cos particular demo for you

2146
02:27:16,150 --> 02:27:17,920
and then we go on with the flow of the

2147
02:27:17,920 --> 02:27:19,570
presentation but demo is you know

2148
02:27:19,570 --> 02:27:28,619
looking at all of the things I can't

2149
02:27:29,910 --> 02:27:38,439
stop ok you should be seeing my desktop

2150
02:27:38,439 --> 02:27:45,760
normally so ok I let that be wizard so

2151
02:27:45,760 --> 02:27:49,240
the idea is to demonstrate setup and the

2152
02:27:49,240 --> 02:27:52,150
users of cortex it's an open source

2153
02:27:52,150 --> 02:27:53,650
pretend one of the things that were

2154
02:27:53,650 --> 02:27:56,640
really committed to is to try to other

2155
02:27:56,640 --> 02:27:58,930
software that is very user friendly so

2156
02:27:58,930 --> 02:28:00,790
to show this we are going to demo the

2157
02:28:00,790 --> 02:28:03,990
setup and usage under quite classical

2158
02:28:03,990 --> 02:28:07,630
Linux setup which is like a Windows

2159
02:28:07,630 --> 02:28:12,340
server with nginx and SSH server so of

2160
02:28:12,340 --> 02:28:13,870
course everything that can be done in

2161
02:28:13,870 --> 02:28:15,460
your entire chip fashion can as well be

2162
02:28:15,460 --> 02:28:17,650
done without detection who are not so

2163
02:28:17,650 --> 02:28:20,650
much but what says you set up more than

2164
02:28:20,650 --> 02:28:24,820
a wizard so the idea of the wizard and

2165
02:28:24,820 --> 02:28:27,010
this is why we take a bit from software

2166
02:28:27,010 --> 02:28:28,390
such as free to buy new and we say

2167
02:28:28,390 --> 02:28:30,070
processing look first of all is going to

2168
02:28:30,070 --> 02:28:31,930
try and be thanks to a software that are

2169
02:28:31,930 --> 02:28:33,939
deployed on the machine so that's the

2170
02:28:33,939 --> 02:28:35,650
out of the box configuration would be

2171
02:28:35,650 --> 02:28:38,140
relevant so hey the tags that have nginx

2172
02:28:38,140 --> 02:28:40,330
web server ssh server and that it's a

2173
02:28:40,330 --> 02:28:43,540
linear space distribution then for the

2174
02:28:43,540 --> 02:28:44,500
value services

2175
02:28:44,500 --> 02:28:46,990
going to try and find where the logs are

2176
02:28:46,990 --> 02:28:49,300
so here's a looks for Ingenix and the

2177
02:28:49,300 --> 02:28:51,910
log for stsh and finally the logs for

2178
02:28:51,910 --> 02:28:54,330
the system so now that it has a bitter

2179
02:28:54,330 --> 02:28:56,560
identify the environment is going to

2180
02:28:56,560 --> 02:28:59,350
start suggest as collections so what we

2181
02:28:59,350 --> 02:29:03,040
call a collection is a passes and one or

2182
02:29:03,040 --> 02:29:04,810
more scenarios that are supposed to fit

2183
02:29:04,810 --> 02:29:07,300
technology call stack so here for

2184
02:29:07,300 --> 02:29:09,280
example was okay for ssh I'm going to

2185
02:29:09,280 --> 02:29:11,950
give you ssh parser and brute force

2186
02:29:11,950 --> 02:29:13,660
detection which is one of the most

2187
02:29:13,660 --> 02:29:16,030
common attacks when it comes for example

2188
02:29:16,030 --> 02:29:17,920
to engine each it would be an genex log

2189
02:29:17,920 --> 02:29:20,350
support and classic or HD speed

2190
02:29:20,350 --> 02:29:24,490
detection scenarios so more or less for

2191
02:29:24,490 --> 02:29:26,770
another set up is also configuration

2192
02:29:26,770 --> 02:29:29,350
surface finish so we managed to identify

2193
02:29:29,350 --> 02:29:31,090
the services we managed to identify the

2194
02:29:31,090 --> 02:29:33,820
logs and we managed to dig connections

2195
02:29:33,820 --> 02:29:36,250
that should be fitting our environment

2196
02:29:36,250 --> 02:29:38,830
and out of safety we deploying some what

2197
02:29:38,830 --> 02:29:41,380
is just to avoid the binding some

2198
02:29:41,380 --> 02:29:44,800
private IP addresses so once the setup

2199
02:29:44,800 --> 02:29:46,930
is finished as we can see across X is

2200
02:29:46,930 --> 02:29:48,970
immediately registering to the API so

2201
02:29:48,970 --> 02:29:51,820
that is that as we said earlier the APL

2202
02:29:51,820 --> 02:29:55,600
would be used to push signals to our

2203
02:29:55,600 --> 02:29:57,520
central plate so that in turn we can

2204
02:29:57,520 --> 02:29:59,710
redistribute and share information

2205
02:29:59,710 --> 02:30:02,020
amongst all the participant of music

2206
02:30:02,020 --> 02:30:03,970
acting what'n who you should protect

2207
02:30:03,970 --> 02:30:06,640
yourself from the main way for the

2208
02:30:06,640 --> 02:30:08,170
administrator to interact with frantic

2209
02:30:08,170 --> 02:30:10,690
would be through CST so safety for

2210
02:30:10,690 --> 02:30:12,370
example allow you to interact with bands

2211
02:30:12,370 --> 02:30:15,940
as we can see whoever something but more

2212
02:30:15,940 --> 02:30:20,170
importantly we can see that the API

2213
02:30:20,170 --> 02:30:22,960
already fed us with some IP that are

2214
02:30:22,960 --> 02:30:24,340
susceptible of attacking the

2215
02:30:24,340 --> 02:30:25,870
technologies that we said that we're

2216
02:30:25,870 --> 02:30:28,300
exposing and we want to protect what we

2217
02:30:28,300 --> 02:30:31,300
can do is that here I'm going to keep an

2218
02:30:31,300 --> 02:30:33,340
eye out the log and what I'm going to do

2219
02:30:33,340 --> 02:30:36,550
is that I'm going to start me talk so

2220
02:30:36,550 --> 02:30:38,830
you need to fall so that our analyzer

2221
02:30:38,830 --> 02:30:42,820
quite old-fashioned web application with

2222
02:30:42,820 --> 02:30:44,800
this channel but it has an advantage of

2223
02:30:44,800 --> 02:30:47,860
being quite representative in terms of

2224
02:30:47,860 --> 02:30:51,610
behavior so I'm starting Neto and he

2225
02:30:51,610 --> 02:30:54,790
okay I can stop and we can see here my

2226
02:30:54,790 --> 02:30:56,770
IP so this bypass on IP has been

2227
02:30:56,770 --> 02:30:58,240
triggered because it does

2228
02:30:58,240 --> 02:31:01,090
triggered value scenario so one for

2229
02:31:01,090 --> 02:31:03,880
trying to access a lot of non existing

2230
02:31:03,880 --> 02:31:06,580
pages one for trying to access to a lot

2231
02:31:06,580 --> 02:31:08,590
of non static pages and want to try to

2232
02:31:08,590 --> 02:31:11,110
access some city files so if I know I

2233
02:31:11,110 --> 02:31:13,830
look back in my banished I can see here

2234
02:31:13,830 --> 02:31:18,130
is that my my PS Dingman however as an

2235
02:31:18,130 --> 02:31:22,000
attacker I still have access to to my

2236
02:31:22,000 --> 02:31:24,160
target because we only different contact

2237
02:31:24,160 --> 02:31:26,410
which is a detection part so now I'm

2238
02:31:26,410 --> 02:31:29,110
going to jump into the hub and into them

2239
02:31:29,110 --> 02:31:30,760
as we said earlier we won't wither

2240
02:31:30,760 --> 02:31:32,800
blockers to allow people to de correlate

2241
02:31:32,800 --> 02:31:35,860
detection and blocking so I'm going to

2242
02:31:35,860 --> 02:31:38,650
take a blocker for Ingenix okay so the

2243
02:31:38,650 --> 02:31:40,270
broker for engineer something that we is

2244
02:31:40,270 --> 02:31:42,550
going to allow me to block IP that I

2245
02:31:42,550 --> 02:31:43,870
have identified and I've decided to

2246
02:31:43,870 --> 02:31:51,580
block other Ingenix limit so I do this

2247
02:31:51,580 --> 02:31:55,240
so behind her since there is no magic

2248
02:31:55,240 --> 02:31:55,660
sir

2249
02:31:55,660 --> 02:31:58,560
and Jenny's blocker is simply leveraging

2250
02:31:58,560 --> 02:32:01,780
the power of us that she's embeddable to

2251
02:32:01,780 --> 02:32:04,840
Ingenix to be able to other system this

2252
02:32:04,840 --> 02:32:07,750
feature so I'm going to restart Ingenix

2253
02:32:07,750 --> 02:32:11,440
I know because my EP here has been

2254
02:32:11,440 --> 02:32:14,620
banned if I try to access my website now

2255
02:32:14,620 --> 02:32:16,360
I'm block at the engine so that I get

2256
02:32:16,360 --> 02:32:18,430
four three so I did means that if

2257
02:32:18,430 --> 02:32:20,200
instead of using like your engine with

2258
02:32:20,200 --> 02:32:22,870
dragging you would use something that

2259
02:32:22,870 --> 02:32:24,910
Samardzija protective layer like Harper

2260
02:32:24,910 --> 02:32:28,600
you can I use kind of remediation so

2261
02:32:28,600 --> 02:32:30,670
this is for third block kappa however

2262
02:32:30,670 --> 02:32:32,020
the things that for example on my

2263
02:32:32,020 --> 02:32:36,130
machine i have configured my firewall to

2264
02:32:36,130 --> 02:32:38,979
like the connections that are being

2265
02:32:38,979 --> 02:32:41,260
established our wishes in terms of

2266
02:32:41,260 --> 02:32:43,140
security this is a very interesting

2267
02:32:43,140 --> 02:32:46,300
information so here again we can go and

2268
02:32:46,300 --> 02:32:48,040
use the hub in order to find the

2269
02:32:48,040 --> 02:32:49,840
collections and the configuration

2270
02:32:49,840 --> 02:32:52,540
configuration that are relevant so here

2271
02:32:52,540 --> 02:32:54,610
i can look for example for the IPE

2272
02:32:54,610 --> 02:32:55,570
tables collection

2273
02:32:55,570 --> 02:32:57,460
so the repeatable scalation will be a

2274
02:32:57,460 --> 02:33:00,280
passer so yeah Mel file to I know as to

2275
02:33:00,280 --> 02:33:02,500
pass along generated by pay tables plus

2276
02:33:02,500 --> 02:33:04,930
a single which will allow us to detect

2277
02:33:04,930 --> 02:33:07,810
port scan so I simply are here to copy

2278
02:33:07,810 --> 02:33:11,290
this terrain and pass it here it's going

2279
02:33:11,290 --> 02:33:12,101
to download

2280
02:33:12,101 --> 02:33:14,710
is a new collection so as we see if we

2281
02:33:14,710 --> 02:33:18,551
look into the decoy author in signals we

2282
02:33:18,551 --> 02:33:21,460
can see that now I have a parser to be

2283
02:33:21,460 --> 02:33:24,221
able to pass her logs of eatables and I

2284
02:33:24,221 --> 02:33:26,230
have a scenario that allows me to detect

2285
02:33:26,230 --> 02:33:31,530
false camp so I'm going to reload I'm

2286
02:33:31,530 --> 02:33:34,210
going to protect we are going to keep

2287
02:33:34,210 --> 02:33:38,021
again I like and now what I should be

2288
02:33:38,021 --> 02:33:41,500
able to do is that I'm going to be able

2289
02:33:41,500 --> 02:33:44,950
to stop and post canvas and map on my

2290
02:33:44,950 --> 02:33:48,190
target machine I can stop and here we

2291
02:33:48,190 --> 02:33:49,960
can see that now because we just added

2292
02:33:49,960 --> 02:33:52,120
these passes and set out to be able to

2293
02:33:52,120 --> 02:33:54,880
detect post can from the logs that are

2294
02:33:54,880 --> 02:33:56,891
generated by tables maipi has been

2295
02:33:56,891 --> 02:34:00,851
flagged again and if I try to access to

2296
02:34:00,851 --> 02:34:05,891
the website emblem so of course if we

2297
02:34:05,891 --> 02:34:12,280
decide like to remove here I will be

2298
02:34:12,280 --> 02:34:15,181
able to access to my to my website again

2299
02:34:15,181 --> 02:34:18,910
so that is that says it's a main

2300
02:34:18,910 --> 02:34:21,790
interaction point but as well we believe

2301
02:34:21,790 --> 02:34:23,771
that visualization is something that is

2302
02:34:23,771 --> 02:34:27,551
quite important so using the fantastic

2303
02:34:27,551 --> 02:34:30,480
meta based software which is a

2304
02:34:30,480 --> 02:34:33,431
visualization interface for values

2305
02:34:33,431 --> 02:34:34,480
database each other

2306
02:34:34,480 --> 02:34:39,580
SQLite mescal etcetera we can deploy we

2307
02:34:39,580 --> 02:34:42,610
are going to deploy dashboard on the

2308
02:34:42,610 --> 02:34:44,370
machine in order to be able to visualize

2309
02:34:44,370 --> 02:34:48,490
so I think that we just so it's going to

2310
02:34:48,490 --> 02:34:50,620
take a few minutes because the machine

2311
02:34:50,620 --> 02:34:53,320
is not quite powerful but you'll see in

2312
02:34:53,320 --> 02:34:56,620
the meanwhile so when we did the initial

2313
02:34:56,620 --> 02:35:00,070
setup we can see that the software

2314
02:35:00,070 --> 02:35:02,080
without context with which kind of

2315
02:35:02,080 --> 02:35:04,150
scenario etc we want to deploy and this

2316
02:35:04,150 --> 02:35:07,420
is how we are able to be sure that the

2317
02:35:07,420 --> 02:35:09,190
out-of-the-box configuration on the

2318
02:35:09,190 --> 02:35:11,080
machine is going to more or less really

2319
02:35:11,080 --> 02:35:14,440
fit the setup of the user for the

2320
02:35:14,440 --> 02:35:16,271
configuration themselves when we speak

2321
02:35:16,271 --> 02:35:18,851
about the cinema that I it always ml5

2322
02:35:18,851 --> 02:35:22,210
for example if we look at port scan how

2323
02:35:22,210 --> 02:35:23,980
we can detect article we are going to

2324
02:35:23,980 --> 02:35:25,960
say it one single IP

2325
02:35:25,960 --> 02:35:28,870
that is trying to connect to a high

2326
02:35:28,870 --> 02:35:32,590
number of distinct target pots on my

2327
02:35:32,590 --> 02:35:34,210
mesh and this is exactly a

2328
02:35:34,210 --> 02:35:37,270
representation of the scenarios that we

2329
02:35:37,270 --> 02:35:40,750
we use just to show Big Ben jacket okay

2330
02:35:40,750 --> 02:35:43,510
so the setup of the dashboard is initial

2331
02:35:43,510 --> 02:35:50,440
so now I will be able to access so it

2332
02:35:50,440 --> 02:35:53,290
just deployed so meta based our spot and

2333
02:35:53,290 --> 02:35:59,229
will be able to access it here so of

2334
02:35:59,229 --> 02:36:00,790
course we are not going to see much data

2335
02:36:00,790 --> 02:36:02,590
because we just deployed the software

2336
02:36:02,590 --> 02:36:04,479
and we already did a few atoms but he

2337
02:36:04,479 --> 02:36:06,430
already we can have a video sessions of

2338
02:36:06,430 --> 02:36:09,010
information with the gelatinization

2339
02:36:09,010 --> 02:36:12,670
etcetera so timeline the kind of events

2340
02:36:12,670 --> 02:36:15,330
that were detected and the kind of of

2341
02:36:15,330 --> 02:36:18,820
operators and one thing that is I didn't

2342
02:36:18,820 --> 02:36:21,040
mention which is a rather interesting is

2343
02:36:21,040 --> 02:36:24,400
that for now we only see the part when

2344
02:36:24,400 --> 02:36:26,800
it comes to the life detection however

2345
02:36:26,800 --> 02:36:28,870
protected as well able to work on code

2346
02:36:28,870 --> 02:36:30,820
logs because we know one of the record

2347
02:36:30,820 --> 02:36:32,440
and fear when you write the scenarios or

2348
02:36:32,440 --> 02:36:34,330
something that is supposed to block an

2349
02:36:34,330 --> 02:36:36,850
attacker is a false positive what we can

2350
02:36:36,850 --> 02:36:40,960
do here is that we can we are going to

2351
02:36:40,960 --> 02:36:44,950
launch protect and I'm going to use some

2352
02:36:44,950 --> 02:36:47,110
old logs for the Wojtek my engine

2353
02:36:47,110 --> 02:36:50,950
eclipse from last year and by injecting

2354
02:36:50,950 --> 02:36:53,650
like this we are going to see that here

2355
02:36:53,650 --> 02:36:56,110
it start to pass co logs and we can see

2356
02:36:56,110 --> 02:36:57,790
that the time stamp already in the past

2357
02:36:57,790 --> 02:36:59,800
so that if we go back to our web

2358
02:36:59,800 --> 02:37:04,420
interface and see this yes thank you

2359
02:37:04,420 --> 02:37:06,280
we can see that the old logs are being

2360
02:37:06,280 --> 02:37:08,229
ingested with a correct time it set up

2361
02:37:08,229 --> 02:37:09,640
so that is that when you are writing

2362
02:37:09,640 --> 02:37:13,270
signals or you want to try something you

2363
02:37:13,270 --> 02:37:14,620
will be able I thought to run it on

2364
02:37:14,620 --> 02:37:16,330
collogues we see whether or not it would

2365
02:37:16,330 --> 02:37:18,070
have trigger false positive or if you

2366
02:37:18,070 --> 02:37:20,470
are doing for some awesome friend seeker

2367
02:37:20,470 --> 02:37:24,610
energies so this is about the demo just

2368
02:37:24,610 --> 02:37:27,100
to show the super set up it's a transit

2369
02:37:27,100 --> 02:37:29,110
we can have on a machine and how we try

2370
02:37:29,110 --> 02:37:32,680
to provide improve security here somehow

2371
02:37:32,680 --> 02:37:37,050
out of the box I don't Philip if you

2372
02:37:37,050 --> 02:37:39,550
write also some Internet

2373
02:37:39,550 --> 02:37:46,090
issues okay so I'm going to confuse the

2374
02:37:46,090 --> 02:37:47,979
presentations and while waiting for

2375
02:37:47,979 --> 02:37:49,530
Philip

2376
02:37:49,530 --> 02:37:53,200
so a bit of starting I'd know how clear

2377
02:37:53,200 --> 02:37:55,330
was the dimmable societies that it's

2378
02:37:55,330 --> 02:37:57,880
something that on one hand can be used

2379
02:37:57,880 --> 02:37:59,920
as simple as a software like if a

2380
02:37:59,920 --> 02:38:02,500
turbine used to used to be n that is

2381
02:38:02,500 --> 02:38:04,540
very lightweight to depend so you can

2382
02:38:04,540 --> 02:38:06,399
deploy directly on your machine to

2383
02:38:06,399 --> 02:38:09,220
provide some security but as we saw the

2384
02:38:09,220 --> 02:38:11,530
blocking enter detection are really two

2385
02:38:11,530 --> 02:38:14,260
separate parts so that it allows us in a

2386
02:38:14,260 --> 02:38:16,720
rather I'm going to use my pointer here

2387
02:38:16,720 --> 02:38:21,640
you can see myself idea so we can see in

2388
02:38:21,640 --> 02:38:23,530
a more classical information systems

2389
02:38:23,530 --> 02:38:24,729
that some of the infrastructure

2390
02:38:24,729 --> 02:38:27,220
unpromising something is under insert

2391
02:38:27,220 --> 02:38:28,930
loud etcetera and very often you are

2392
02:38:28,930 --> 02:38:30,640
going to process your logs at a

2393
02:38:30,640 --> 02:38:31,990
different place while you are going to

2394
02:38:31,990 --> 02:38:34,569
want to act you have some subsidies into

2395
02:38:34,569 --> 02:38:37,569
Travis for example another guy an IP

2396
02:38:37,569 --> 02:38:40,030
that is trying to breach our WordPress

2397
02:38:40,030 --> 02:38:42,310
server also legitimate users and here on

2398
02:38:42,310 --> 02:38:44,410
the very right one more users at white

2399
02:38:44,410 --> 02:38:46,630
seems to have a rather legit behavior is

2400
02:38:46,630 --> 02:38:49,030
frequency is way too high to just be a

2401
02:38:49,030 --> 02:38:49,720
normal human

2402
02:38:49,720 --> 02:38:52,510
so all those logs that can be here

2403
02:38:52,510 --> 02:38:54,700
analyze visual context so we don't have

2404
02:38:54,700 --> 02:38:56,530
to centralize all the solids at the same

2405
02:38:56,530 --> 02:38:58,689
time so I did that you can analyze the

2406
02:38:58,689 --> 02:39:00,850
logs were as well and they are say going

2407
02:39:00,850 --> 02:39:03,939
to push to a data rate plus standards

2408
02:39:03,939 --> 02:39:05,380
information when we say senders

2409
02:39:05,380 --> 02:39:07,630
informations are these two same as it

2410
02:39:07,630 --> 02:39:09,670
all information as possible we're only

2411
02:39:09,670 --> 02:39:11,319
going to censor meta information which

2412
02:39:11,319 --> 02:39:15,010
is so your source IP that triggers are

2413
02:39:15,010 --> 02:39:16,660
taken that you block the name of the

2414
02:39:16,660 --> 02:39:18,520
scenario if it comes from them as we so

2415
02:39:18,520 --> 02:39:21,069
enter the timeline so very little

2416
02:39:21,069 --> 02:39:22,660
information and at the same time you

2417
02:39:22,660 --> 02:39:24,490
stop you stop this information locally

2418
02:39:24,490 --> 02:39:26,649
so that add value stable of your

2419
02:39:26,649 --> 02:39:28,780
information system for example Matt and

2420
02:39:28,780 --> 02:39:31,479
Joe arranged an external but rather the

2421
02:39:31,479 --> 02:39:33,069
word festival with a wordpress plugin

2422
02:39:33,069 --> 02:39:34,750
we're going to be able to block the

2423
02:39:34,750 --> 02:39:36,970
attacker and here on a more like let's

2424
02:39:36,970 --> 02:39:38,590
say business application rather than

2425
02:39:38,590 --> 02:39:41,649
purely blocking the suspect IP we are

2426
02:39:41,649 --> 02:39:43,300
going to present him with a captcha in

2427
02:39:43,300 --> 02:39:44,649
order to check whether it's a human or

2428
02:39:44,649 --> 02:39:47,680
it's a robot so this was an idea for

2429
02:39:47,680 --> 02:39:50,620
which speaking the detection Enzo

2430
02:39:50,620 --> 02:39:54,101
forcement of the decision so why we say

2431
02:39:54,101 --> 02:39:57,250
brokers at anyway so I did that the

2432
02:39:57,250 --> 02:39:59,800
blocker it's the old stick to the same

2433
02:39:59,800 --> 02:40:01,480
behavior whenever they see a new IP

2434
02:40:01,480 --> 02:40:02,800
address that they don't know they are

2435
02:40:02,800 --> 02:40:04,811
going to look into a local database or

2436
02:40:04,811 --> 02:40:07,480
query and API to know whether or not

2437
02:40:07,480 --> 02:40:09,550
this reproduction and depending on the

2438
02:40:09,550 --> 02:40:11,710
and so on they are going to apply said

2439
02:40:11,710 --> 02:40:14,040
action or not for example we just

2440
02:40:14,040 --> 02:40:17,380
demonstrating the demo the nginx module

2441
02:40:17,380 --> 02:40:19,090
that is using yeah so which is a low

2442
02:40:19,090 --> 02:40:22,660
lowest who simply block the user at HTTP

2443
02:40:22,660 --> 02:40:24,880
level but at the same time and following

2444
02:40:24,880 --> 02:40:26,380
the same principle we developed for

2445
02:40:26,380 --> 02:40:28,540
example a wordpress plugin so what first

2446
02:40:28,540 --> 02:40:31,990
bring in developed in PHP only not only

2447
02:40:31,990 --> 02:40:33,910
to block the user like giving in

2448
02:40:33,910 --> 02:40:36,280
forestry in HTTP but rather like for

2449
02:40:36,280 --> 02:40:38,080
example to present English capture or to

2450
02:40:38,080 --> 02:40:41,790
reduce its privileges or limited section

2451
02:40:41,790 --> 02:40:49,510
the concept is that okay the idea is

2452
02:40:49,510 --> 02:40:52,210
that this approach is was a simple I

2453
02:40:52,210 --> 02:40:54,220
think a meeting if you look into the

2454
02:40:54,220 --> 02:40:56,290
reverse is that we implemented brokers

2455
02:40:56,290 --> 02:40:59,110
for is on offer what rs4 Ingenix or more

2456
02:40:59,110 --> 02:41:01,601
like feel to binder going demon that is

2457
02:41:01,601 --> 02:41:04,000
going to interact with your NF tables or

2458
02:41:04,000 --> 02:41:07,900
if a tables system or even leverage or

2459
02:41:07,900 --> 02:41:10,510
says provider for example cloud fair to

2460
02:41:10,510 --> 02:41:12,851
be able to block larger scale attacks as

2461
02:41:12,851 --> 02:41:15,340
we know are quite common in some web

2462
02:41:15,340 --> 02:41:17,740
context so that is that these brokers

2463
02:41:17,740 --> 02:41:19,360
are rather simple to implement you

2464
02:41:19,360 --> 02:41:21,790
career database or an API and you decide

2465
02:41:21,790 --> 02:41:23,980
or not what so that we can use them at

2466
02:41:23,980 --> 02:41:27,340
various levels of the stack as a jpg

2467
02:41:27,340 --> 02:41:29,110
achievable with something like a

2468
02:41:29,110 --> 02:41:31,000
wordpress begin also infrastructure

2469
02:41:31,000 --> 02:41:32,800
level with engines where you can protect

2470
02:41:32,800 --> 02:41:34,811
your developers without them even be

2471
02:41:34,811 --> 02:41:36,340
aware or even and to infrastructure

2472
02:41:36,340 --> 02:41:38,320
level looking at so far all of it and

2473
02:41:38,320 --> 02:41:40,510
the fact that the blocker itself is

2474
02:41:40,510 --> 02:41:42,370
something that is very stateless it

2475
02:41:42,370 --> 02:41:44,710
makes it a good candidate to fit into

2476
02:41:44,710 --> 02:41:46,780
the club if you want to use it as honor

2477
02:41:46,780 --> 02:41:48,250
to burn letters for an ingress

2478
02:41:48,250 --> 02:41:50,890
controller or to user lambda or some

2479
02:41:50,890 --> 02:41:52,930
signals in order to be able to protect

2480
02:41:52,930 --> 02:41:57,580
your cloud assets so in all this so for

2481
02:41:57,580 --> 02:42:00,670
the target of the project is we to be

2482
02:42:00,670 --> 02:42:02,530
able to create and maintain this huge

2483
02:42:02,530 --> 02:42:04,120
reputation database to be

2484
02:42:04,120 --> 02:42:06,040
to share with everybody and you know

2485
02:42:06,040 --> 02:42:08,050
that so we need to have as many users as

2486
02:42:08,050 --> 02:42:10,930
possible and that's why we go on a quite

2487
02:42:10,930 --> 02:42:12,280
perishability

2488
02:42:12,280 --> 02:42:14,561
open source license we chose an MHC

2489
02:42:14,561 --> 02:42:16,690
license to although many usage including

2490
02:42:16,690 --> 02:42:19,480
a binary distribution and commercial

2491
02:42:19,480 --> 02:42:21,851
usage and we are really committed to

2492
02:42:21,851 --> 02:42:24,460
creating a community and making the

2493
02:42:24,460 --> 02:42:25,990
usage as easy as possible

2494
02:42:25,990 --> 02:42:27,940
hence the herbs that we saw earlier that

2495
02:42:27,940 --> 02:42:29,950
forest is in ten years a place for

2496
02:42:29,950 --> 02:42:32,140
people to be able to find configurations

2497
02:42:32,140 --> 02:42:33,580
that fit their use case so that the

2498
02:42:33,580 --> 02:42:36,250
technical barriers as well as possible

2499
02:42:36,250 --> 02:42:38,320
but as well for people to push

2500
02:42:38,320 --> 02:42:40,180
contribution and propose a contribution

2501
02:42:40,180 --> 02:42:44,680
to the to the others so here we are

2502
02:42:44,680 --> 02:42:48,760
speaking about energy security so I did

2503
02:42:48,760 --> 02:42:50,561
that as we saw during the set ups are

2504
02:42:50,561 --> 02:42:53,440
set up for a system administrator is so

2505
02:42:53,440 --> 02:42:56,260
technical Bari is intended to be very

2506
02:42:56,260 --> 02:42:58,180
low it's very a system we really detects

2507
02:42:58,180 --> 02:43:00,280
a service for him so that we can only do

2508
02:43:00,280 --> 02:43:02,320
next next next next next continue and

2509
02:43:02,320 --> 02:43:03,640
you have already a significant

2510
02:43:03,640 --> 02:43:06,010
improvement of your situation the fact

2511
02:43:06,010 --> 02:43:07,780
that the blockers are three library in

2512
02:43:07,780 --> 02:43:09,490
various languages that can be M and B

2513
02:43:09,490 --> 02:43:11,320
give in to your application or in to

2514
02:43:11,320 --> 02:43:13,540
your infrastructure stack make it a good

2515
02:43:13,540 --> 02:43:15,220
companion as well for the developer so

2516
02:43:15,220 --> 02:43:18,820
that they can give appreciative response

2517
02:43:18,820 --> 02:43:20,351
as we already saw in some case where

2518
02:43:20,351 --> 02:43:22,390
developers will be afraid to rely on

2519
02:43:22,390 --> 02:43:24,521
infrastructure to simply ban I t's a

2520
02:43:24,521 --> 02:43:26,950
special for example a senior ecommerce

2521
02:43:26,950 --> 02:43:29,920
contacts our since ladies while for

2522
02:43:29,920 --> 02:43:31,720
device because we come as well for up

2523
02:43:31,720 --> 02:43:33,521
from operation background I didn't work

2524
02:43:33,521 --> 02:43:36,340
in a hosting company for quite a while

2525
02:43:36,340 --> 02:43:38,320
we try to do some things that is really

2526
02:43:38,320 --> 02:43:41,200
compelling with modern buildings of the

2527
02:43:41,200 --> 02:43:42,820
department such as public cloud

2528
02:43:42,820 --> 02:43:46,811
containers Cuba energies and so on one

2529
02:43:46,811 --> 02:43:48,700
hand you have a very easy an assisted

2530
02:43:48,700 --> 02:43:49,840
setup and on the other one you have

2531
02:43:49,840 --> 02:43:52,271
something that is stateless and easy to

2532
02:43:52,271 --> 02:43:55,200
deploy in highly industrial

2533
02:43:55,200 --> 02:43:59,800
infrastructures so the software itself

2534
02:43:59,800 --> 02:44:03,400
so cross-check its drags a bit closer

2535
02:44:03,400 --> 02:44:05,561
let's say from failed to abandon from a

2536
02:44:05,561 --> 02:44:07,811
reflection because I did that we are

2537
02:44:07,811 --> 02:44:10,360
only going to stream the data and we're

2538
02:44:10,360 --> 02:44:12,340
never going to do retention it's not

2539
02:44:12,340 --> 02:44:14,920
meant to be using like elastic such as a

2540
02:44:14,920 --> 02:44:17,730
back-end or to be storing a lot of info

2541
02:44:17,730 --> 02:44:20,311
on this suspected drugs more from Victor

2542
02:44:20,311 --> 02:44:22,141
when you twist the lugs it apply some

2543
02:44:22,141 --> 02:44:23,911
transformation some you ristic and then

2544
02:44:23,911 --> 02:44:24,811
you forget about it

2545
02:44:24,811 --> 02:44:28,110
so this is a aggregation so the

2546
02:44:28,110 --> 02:44:30,121
acquisition of flux it can be is a

2547
02:44:30,121 --> 02:44:32,041
classical log files but it's intended as

2548
02:44:32,041 --> 02:44:34,021
well to be something like your AWS crew

2549
02:44:34,021 --> 02:44:36,181
trailer strings of information that

2550
02:44:36,181 --> 02:44:37,921
comes from the cloud or also providers

2551
02:44:37,921 --> 02:44:41,791
the logs are then passed and enriched so

2552
02:44:41,791 --> 02:44:44,011
for passing we rely on the classical

2553
02:44:44,011 --> 02:44:45,961
rock pattern and beginning to email file

2554
02:44:45,961 --> 02:44:48,031
to allow easy passing and for enrichment

2555
02:44:48,031 --> 02:44:50,041
it can be things as simple as a

2556
02:44:50,041 --> 02:44:53,131
geolocation that as we saw but it can

2557
02:44:53,131 --> 02:44:54,690
also be an which won't pass on your own

2558
02:44:54,690 --> 02:44:57,711
database or existing straight an

2559
02:44:57,711 --> 02:45:00,241
information database once this

2560
02:45:00,241 --> 02:45:01,801
information at the end which we can

2561
02:45:01,801 --> 02:45:03,511
confront them against the scenario so

2562
02:45:03,511 --> 02:45:05,400
the preview cement finds that we saw

2563
02:45:05,400 --> 02:45:07,291
that I'll do you to describe this is a

2564
02:45:07,291 --> 02:45:09,301
brute force this is aggressive koishi

2565
02:45:09,301 --> 02:45:11,631
the earth cannot settle and then

2566
02:45:11,631 --> 02:45:13,891
resulting of this work what we call

2567
02:45:13,891 --> 02:45:17,041
racino that can such is then pushed

2568
02:45:17,041 --> 02:45:18,781
locally to local database across of

2569
02:45:18,781 --> 02:45:21,631
SQLite on my my sequel to be be able

2570
02:45:21,631 --> 02:45:25,221
later to be read by visualization

2571
02:45:25,221 --> 02:45:27,690
interfaces engine brokers and to be

2572
02:45:27,690 --> 02:45:30,421
pushed to our club and we hope that this

2573
02:45:30,421 --> 02:45:33,001
approach will make it very easy to be

2574
02:45:33,001 --> 02:45:36,571
quite potable in a lot of context so we

2575
02:45:36,571 --> 02:45:38,491
saw that but this is an example of our

2576
02:45:38,491 --> 02:45:39,751
commitment to make something that is

2577
02:45:39,751 --> 02:45:42,301
quite easy to use we really hope that we

2578
02:45:42,301 --> 02:45:46,501
can make the installation as easy as

2579
02:45:46,501 --> 02:45:48,751
possible and that the user would be able

2580
02:45:48,751 --> 02:45:49,351
to

2581
02:45:49,351 --> 02:45:51,181
out-of-the-box after a significant

2582
02:45:51,181 --> 02:45:52,381
security however we know that

2583
02:45:52,381 --> 02:45:54,841
maintaining some security software in

2584
02:45:54,841 --> 02:45:56,641
time can be rather challenging as well

2585
02:45:56,641 --> 02:45:58,711
and that's why the hub is here Andalusia

2586
02:45:58,711 --> 02:46:00,571
for example to update your collection or

2587
02:46:00,571 --> 02:46:03,061
to automatic automatically sorry

2588
02:46:03,061 --> 02:46:05,371
update your collection so that people

2589
02:46:05,371 --> 02:46:07,230
can add new detection and you can get

2590
02:46:07,230 --> 02:46:10,021
them automatically without having to do

2591
02:46:10,021 --> 02:46:12,391
extra steps but it should await as well

2592
02:46:12,391 --> 02:46:15,961
allow you to keep up to date with your

2593
02:46:15,961 --> 02:46:17,701
evolution of technologies and the

2594
02:46:17,701 --> 02:46:20,451
evolution of the rest rest

2595
02:46:20,451 --> 02:46:24,291
so visualization we sleep Roger is that

2596
02:46:24,291 --> 02:46:27,211
for a lot of people visualization of

2597
02:46:27,211 --> 02:46:28,801
security something rather important

2598
02:46:28,801 --> 02:46:31,141
things are clear when the cn4

2599
02:46:31,141 --> 02:46:32,881
who are relying on the open source or

2600
02:46:32,881 --> 02:46:34,980
meta base to provide out of the box

2601
02:46:34,980 --> 02:46:38,730
that's what as we sew drinks drinks the

2602
02:46:38,730 --> 02:46:43,921
demo so to a bit of takeaways to sum up

2603
02:46:43,921 --> 02:46:46,171
a bit Clarissa so it's written in go

2604
02:46:46,171 --> 02:46:46,501
lang

2605
02:46:46,501 --> 02:46:48,541
so I did both the community and

2606
02:46:48,541 --> 02:46:51,141
opportunity because we intend as well to

2607
02:46:51,141 --> 02:46:53,631
target Windows environment because

2608
02:46:53,631 --> 02:46:56,311
sometimes not so there's not too many

2609
02:46:56,311 --> 02:46:59,011
open source and free possibilities in

2610
02:46:59,011 --> 02:47:01,921
terms of defensive security in something

2611
02:47:01,921 --> 02:47:03,871
that has been intended for observability

2612
02:47:03,871 --> 02:47:06,751
everybody hates black box especially it

2613
02:47:06,751 --> 02:47:08,570
come in terms of defensive security so

2614
02:47:08,570 --> 02:47:11,150
is like a very strong probative

2615
02:47:11,150 --> 02:47:12,900
instrumentation that she's already

2616
02:47:12,900 --> 02:47:14,581
present to a low season mean to

2617
02:47:14,581 --> 02:47:16,471
understand re what is going on and what

2618
02:47:16,471 --> 02:47:18,841
action does the scene taken for more

2619
02:47:18,841 --> 02:47:21,811
classical humans we have the metal base

2620
02:47:21,811 --> 02:47:24,900
there's water that we so n for system

2621
02:47:24,900 --> 02:47:27,391
and misrata it seems to be as friendly

2622
02:47:27,391 --> 02:47:29,910
as possible and then something that is

2623
02:47:29,910 --> 02:47:31,681
like to attend did not even turn in for

2624
02:47:31,681 --> 02:47:33,801
various such in deployment such as

2625
02:47:33,801 --> 02:47:37,921
containers etcetera so last but not

2626
02:47:37,921 --> 02:47:39,931
least because so far we only spoke about

2627
02:47:39,931 --> 02:47:43,021
the software the software needs to call

2628
02:47:43,021 --> 02:47:45,660
capacity capabilities so a real idea

2629
02:47:45,660 --> 02:47:49,681
behind the code fitted aspect is that

2630
02:47:49,681 --> 02:47:51,511
some of the threats are very hard to

2631
02:47:51,511 --> 02:47:53,551
count on your own even if you have a

2632
02:47:53,551 --> 02:47:55,410
strong security team and good

2633
02:47:55,410 --> 02:47:56,881
infrastructure for you suppose things

2634
02:47:56,881 --> 02:48:00,211
such as credential stuffing way easier

2635
02:48:00,211 --> 02:48:01,650
to be thought when you have a crowd and

2636
02:48:01,650 --> 02:48:03,030
many people can report the same

2637
02:48:03,030 --> 02:48:05,371
sightings because the attacks the

2638
02:48:05,371 --> 02:48:07,681
extremely short span and very sporadic

2639
02:48:07,681 --> 02:48:10,471
plus we think that when you speak about

2640
02:48:10,471 --> 02:48:12,091
those threats a stretch it has two

2641
02:48:12,091 --> 02:48:14,070
aspect first of all it has a time

2642
02:48:14,070 --> 02:48:16,891
because an IP that is tagged malevolent

2643
02:48:16,891 --> 02:48:20,280
at one moment was legit a few hours or

2644
02:48:20,280 --> 02:48:22,950
maybe days or even weeks ago but it has

2645
02:48:22,950 --> 02:48:24,811
been hiked and then now it's taking part

2646
02:48:24,811 --> 02:48:26,400
in two attacks and here it's legitimate

2647
02:48:26,400 --> 02:48:29,461
owner will be informed that the machine

2648
02:48:29,461 --> 02:48:31,501
is getting really and it will do what is

2649
02:48:31,501 --> 02:48:33,391
necessary to fix and then to machine

2650
02:48:33,391 --> 02:48:35,041
will be coming at it again so whenever

2651
02:48:35,041 --> 02:48:37,261
we tagged with the consensus system when

2652
02:48:37,261 --> 02:48:38,851
a pure being marvel at its ally for a

2653
02:48:38,851 --> 02:48:42,871
short time we are in a big shot of them

2654
02:48:42,871 --> 02:48:44,029
so

2655
02:48:44,029 --> 02:48:46,729
then the consensus we know that the

2656
02:48:46,729 --> 02:48:48,260
consensus was the fact of centralizing

2657
02:48:48,260 --> 02:48:50,120
all the signals from all the community

2658
02:48:50,120 --> 02:48:53,239
and redistributing them to the players

2659
02:48:53,239 --> 02:48:54,830
and the people that are using the

2660
02:48:54,830 --> 02:48:56,300
software is going to be the main change

2661
02:48:56,300 --> 02:48:59,750
namely the risk of poisoning so for this

2662
02:48:59,750 --> 02:49:01,670
we have what we call a system of trust

2663
02:49:01,670 --> 02:49:03,739
factor so that when you start and you

2664
02:49:03,739 --> 02:49:04,760
deploy the software

2665
02:49:04,760 --> 02:49:06,410
your voice is not going to count in any

2666
02:49:06,410 --> 02:49:08,109
way even if you report a piece your

2667
02:49:08,109 --> 02:49:10,340
settings are not going to be listened to

2668
02:49:10,340 --> 02:49:12,140
until your trust factor reach a

2669
02:49:12,140 --> 02:49:14,149
significant ribbon trust factor is

2670
02:49:14,149 --> 02:49:15,620
intended to be something that will be

2671
02:49:15,620 --> 02:49:18,710
hard or expensive to fake so - based on

2672
02:49:18,710 --> 02:49:20,689
things like final posture persistent at

2673
02:49:20,689 --> 02:49:23,510
which repo signal or the consistency of

2674
02:49:23,510 --> 02:49:26,689
the signals that you report then because

2675
02:49:26,689 --> 02:49:28,430
we know that the project is Radeon we

2676
02:49:28,430 --> 02:49:30,229
did the first wizard around the months

2677
02:49:30,229 --> 02:49:33,380
ago we are relying on a honeypot network

2678
02:49:33,380 --> 02:49:35,120
we deploy honey pots so that they

2679
02:49:35,120 --> 02:49:37,520
intended to first of all help us at the

2680
02:49:37,520 --> 02:49:39,290
beginning to compensate the small size

2681
02:49:39,290 --> 02:49:41,510
of the network and to Kenichi and to be

2682
02:49:41,510 --> 02:49:43,580
bought as well to fill the gaps in terms

2683
02:49:43,580 --> 02:49:45,380
of technologies like for example if

2684
02:49:45,380 --> 02:49:47,479
tumors as a huge trip alga don't Villa a

2685
02:49:47,479 --> 02:49:49,520
beauty that comes out a twist so as we

2686
02:49:49,520 --> 02:49:51,560
saw like a few years ago we can easily

2687
02:49:51,560 --> 02:49:54,229
deploy one two hundred Drupal server so

2688
02:49:54,229 --> 02:49:56,510
that we can catch very early the early

2689
02:49:56,510 --> 02:49:58,489
signal of exploitation and share them as

2690
02:49:58,489 --> 02:50:01,060
quickly as possible with a community

2691
02:50:01,060 --> 02:50:03,830
then we have Canaries so idea that we

2692
02:50:03,830 --> 02:50:05,840
don't want to be seen as people taking

2693
02:50:05,840 --> 02:50:08,060
into hostage other people reputation on

2694
02:50:08,060 --> 02:50:10,130
the internet so we intend to apply the

2695
02:50:10,130 --> 02:50:12,770
same transparent approach to whitelist

2696
02:50:12,770 --> 02:50:15,920
and blacklist with canary system that

2697
02:50:15,920 --> 02:50:18,859
will allow us and people under github

2698
02:50:18,859 --> 02:50:23,000
for possible to declare pieces offer in

2699
02:50:23,000 --> 02:50:24,590
fact sheet on internet or this from Jay

2700
02:50:24,590 --> 02:50:26,600
Gould to Bill to Google but they might

2701
02:50:26,600 --> 02:50:27,109
seem

2702
02:50:27,109 --> 02:50:29,000
machiners and receive colors but they

2703
02:50:29,000 --> 02:50:30,950
are very legit etcetera so never abandon

2704
02:50:30,950 --> 02:50:34,790
this were helpers to both make people

2705
02:50:34,790 --> 02:50:36,710
more responsible and somehow guarantee

2706
02:50:36,710 --> 02:50:38,300
to the users that out of the box even

2707
02:50:38,300 --> 02:50:40,130
with fully configured scenario is not

2708
02:50:40,130 --> 02:50:42,290
going to ruin his SEO because he is

2709
02:50:42,290 --> 02:50:45,020
banning the Google BOTS from his from me

2710
02:50:45,020 --> 02:50:48,620
servers and last but not least so it's

2711
02:50:48,620 --> 02:50:51,080
really like the relative path so the

2712
02:50:51,080 --> 02:50:52,700
thing that right now were strongly

2713
02:50:52,700 --> 02:50:54,770
massive laying on our honeypot or

2714
02:50:54,770 --> 02:50:57,520
futures and partners in order to charge

2715
02:50:57,520 --> 02:50:59,229
and to be able to conservative consensus

2716
02:50:59,229 --> 02:51:01,600
but the Mosel network rope the more we

2717
02:51:01,600 --> 02:51:03,430
can really rely on all the open-source

2718
02:51:03,430 --> 02:51:05,710
participants at our fingers signal to be

2719
02:51:05,710 --> 02:51:07,779
able to detect with good with bad and to

2720
02:51:07,779 --> 02:51:10,560
give back the racino to other

2721
02:51:10,560 --> 02:51:16,750
participants so forth positive are being

2722
02:51:16,750 --> 02:51:17,979
the main issue and that's why we're

2723
02:51:17,979 --> 02:51:20,920
strongly believing that the cannery

2724
02:51:20,920 --> 02:51:22,479
approach will be a good end because it

2725
02:51:22,479 --> 02:51:26,380
will as well help us to detect to

2726
02:51:26,380 --> 02:51:29,529
prevent scenarios with false positive

2727
02:51:29,529 --> 02:51:31,779
from blocking legitimate i piece and it

2728
02:51:31,779 --> 02:51:34,029
was as well opposed to detective some

2729
02:51:34,029 --> 02:51:36,460
canary stern malevolent or even as a

2730
02:51:36,460 --> 02:51:38,500
good way to rate so she knows that have

2731
02:51:38,500 --> 02:51:40,600
produced by the committee because she

2732
02:51:40,600 --> 02:51:42,369
knows that starts to band for example

2733
02:51:42,369 --> 02:51:45,520
google boat all such and rainboots it

2734
02:51:45,520 --> 02:51:47,500
means that the cells are sensitive to

2735
02:51:47,500 --> 02:51:50,050
false positive any intent to chip or

2736
02:51:50,050 --> 02:51:52,270
this as open as possible and II Turbo

2737
02:51:52,270 --> 02:51:54,390
search platform where people can

2738
02:51:54,390 --> 02:51:58,960
contribute challenge etc can revisit we

2739
02:51:58,960 --> 02:52:02,350
are going to talk about this is the end

2740
02:52:02,350 --> 02:52:09,210
of the slides do you have any questions

2741
02:52:09,630 --> 02:52:16,899
okay well Santa follow up a little sad

2742
02:52:16,899 --> 02:52:24,609
that that Philippa add to so well no no

2743
02:52:24,609 --> 02:52:28,739
question in the key way at the moment I

2744
02:52:28,739 --> 02:52:34,630
had I had an idea that came to mine yes

2745
02:52:34,630 --> 02:52:37,689
yesterday we had the speaker it's alex

2746
02:52:37,689 --> 02:52:41,340
on board Villanova is one of the

2747
02:52:41,340 --> 02:52:44,260
initiators of a project that is called

2748
02:52:44,260 --> 02:52:50,289
the HISP yes the marijuana information

2749
02:52:50,289 --> 02:52:52,180
sharing platform I was thinking that it

2750
02:52:52,180 --> 02:52:55,479
could be a source of information for Oak

2751
02:52:55,479 --> 02:53:00,159
Road SEC so you do you have these

2752
02:53:00,159 --> 02:53:04,750
databases as an input yes yes so the

2753
02:53:04,750 --> 02:53:07,000
things that the project is very

2754
02:53:07,000 --> 02:53:09,220
early-stage fauna we really like open

2755
02:53:09,220 --> 02:53:10,399
beta around a lot

2756
02:53:10,399 --> 02:53:12,800
where are taking steps let's say to

2757
02:53:12,800 --> 02:53:14,750
ensure that things are going well and we

2758
02:53:14,750 --> 02:53:18,020
start our first scale big scale let's

2759
02:53:18,020 --> 02:53:20,930
say the payments but the idea is we to

2760
02:53:20,930 --> 02:53:22,850
be able to leverage on the committee as

2761
02:53:22,850 --> 02:53:25,010
much as possible miss could be one

2762
02:53:25,010 --> 02:53:26,390
example as well you can take your

2763
02:53:26,390 --> 02:53:28,820
inspiration from also black this

2764
02:53:28,820 --> 02:53:32,060
mechanism that may exist for span with

2765
02:53:32,060 --> 02:53:33,790
the difference that we are really

2766
02:53:33,790 --> 02:53:36,380
convinced that the temporality of the

2767
02:53:36,380 --> 02:53:38,000
information of who's good who's bad is

2768
02:53:38,000 --> 02:53:39,830
something that needs to be taken whisker

2769
02:53:39,830 --> 02:53:42,109
especially with a pretty cloud now and

2770
02:53:42,109 --> 02:53:44,840
the reuse of public IP address we need

2771
02:53:44,840 --> 02:53:47,470
to give this small temporality

2772
02:53:47,470 --> 02:53:53,689
yeah of course this detecting yeah or

2773
02:53:53,689 --> 02:53:58,040
the injection of of for example your own

2774
02:53:58,040 --> 02:54:03,200
IP addresses is in this important Wow

2775
02:54:03,200 --> 02:54:05,540
may I I had another question but it's

2776
02:54:05,540 --> 02:54:09,250
it's not technical I was just wondering

2777
02:54:09,250 --> 02:54:12,290
what what is if you could talk about

2778
02:54:12,290 --> 02:54:14,899
your background or what compelled you

2779
02:54:14,899 --> 02:54:18,830
not this project yes so yes sorry I

2780
02:54:18,830 --> 02:54:20,570
forgot to point miss her so I'm she

2781
02:54:20,570 --> 02:54:22,399
boutique now or I used to work in a

2782
02:54:22,399 --> 02:54:25,280
company called NBS system we can come

2783
02:54:25,280 --> 02:54:28,010
for more offensive background pentester

2784
02:54:28,010 --> 02:54:29,780
it's a Talbot for viewers have been

2785
02:54:29,780 --> 02:54:31,820
really focused on building the offensive

2786
02:54:31,820 --> 02:54:35,270
system for hosting infrastructure in the

2787
02:54:35,270 --> 02:54:37,609
pathways of our written knack C which is

2788
02:54:37,609 --> 02:54:39,620
a web application for for Ingenix

2789
02:54:39,620 --> 02:54:42,620
all more recently we published sniffle

2790
02:54:42,620 --> 02:54:44,000
package of years ago which is a

2791
02:54:44,000 --> 02:54:47,090
hardening module for PHP so lettuce that

2792
02:54:47,090 --> 02:54:49,399
I've been focusing on defensive system

2793
02:54:49,399 --> 02:54:51,710
for quite a while now and in our past

2794
02:54:51,710 --> 02:54:54,229
experience we already had the occasion

2795
02:54:54,229 --> 02:54:56,660
to work on let's say some homemade same

2796
02:54:56,660 --> 02:55:00,439
approach so passing logs and trying to

2797
02:55:00,439 --> 02:55:02,720
detect things automatic a to give

2798
02:55:02,720 --> 02:55:04,910
automatic answers because we believe

2799
02:55:04,910 --> 02:55:07,310
that in terms of defense it's really

2800
02:55:07,310 --> 02:55:10,609
become like a economic as the best way

2801
02:55:10,609 --> 02:55:12,470
to fight with articles on the economic

2802
02:55:12,470 --> 02:55:14,630
aspect and making it as painful as

2803
02:55:14,630 --> 02:55:16,970
possible for him so that he switched to

2804
02:55:16,970 --> 02:55:19,539
another target

2805
02:55:21,141 --> 02:55:26,530
yeah understandable approach yeah okay

2806
02:55:26,530 --> 02:55:29,751
well so I guess we were all right on

2807
02:55:29,751 --> 02:55:34,851
time I will stick around on a aiya

2808
02:55:34,851 --> 02:55:37,400
system people are I've questions etc I

2809
02:55:37,400 --> 02:55:40,341
forgot to I realize I forgot wings I get

2810
02:55:40,341 --> 02:55:41,780
a bit sad but I will put it in the

2811
02:55:41,780 --> 02:55:44,331
presentation if people want to come in

2812
02:55:44,331 --> 02:55:47,381
were happy be looking for beta tester so

2813
02:55:47,381 --> 02:55:50,631
yeah so someone asking question what's

2814
02:55:50,631 --> 02:55:52,311
your plan to prevent but that you muted

2815
02:55:52,311 --> 02:55:55,341
signal to a zealot and attacked us is a

2816
02:55:55,341 --> 02:55:57,831
very good question so someone is asking

2817
02:55:57,831 --> 02:55:59,961
so it's more or less about poison people

2818
02:55:59,961 --> 02:56:02,751
like using botnet that will feed us some

2819
02:56:02,751 --> 02:56:08,331
wrong signal so so plan is we are using

2820
02:56:08,331 --> 02:56:10,221
a system out of stress factor if you

2821
02:56:10,221 --> 02:56:12,021
deploy right now so software and you

2822
02:56:12,021 --> 02:56:14,331
feed us some messages your messages are

2823
02:56:14,331 --> 02:56:16,251
going to be somehow in not because your

2824
02:56:16,251 --> 02:56:17,780
trust factor is considered to be very

2825
02:56:17,780 --> 02:56:20,061
low what we are going to do is that we

2826
02:56:20,061 --> 02:56:23,121
are going to give a trust factor to

2827
02:56:23,121 --> 02:56:26,751
every users based on value stuff such as

2828
02:56:26,751 --> 02:56:29,001
for example purchased and so if you want

2829
02:56:29,001 --> 02:56:30,501
to have a chance to be able to even

2830
02:56:30,501 --> 02:56:32,751
contribute to a decision or consensus

2831
02:56:32,751 --> 02:56:34,761
you will have to let's have the software

2832
02:56:34,761 --> 02:56:37,280
running for at least one month with a

2833
02:56:37,280 --> 02:56:40,461
very frequent and recurrent submission

2834
02:56:40,461 --> 02:56:42,681
of information then says as was the

2835
02:56:42,681 --> 02:56:44,900
consistency of the information for

2836
02:56:44,900 --> 02:56:46,820
example your trust factor is only going

2837
02:56:46,820 --> 02:56:49,971
to increase when you submit a report for

2838
02:56:49,971 --> 02:56:52,551
an IP that will later other consensus

2839
02:56:52,551 --> 02:56:54,621
from stronger ip's like you report are

2840
02:56:54,621 --> 02:56:56,450
one two three four is doing ssh brute

2841
02:56:56,450 --> 02:56:58,160
force and then 20 minutes later have

2842
02:56:58,160 --> 02:57:00,771
several other people reporting it and we

2843
02:57:00,771 --> 02:57:02,570
are seeing okay there's a consensus that

2844
02:57:02,570 --> 02:57:04,251
one two three four is really performing

2845
02:57:04,251 --> 02:57:05,480
sss-bok

2846
02:57:05,480 --> 02:57:07,251
so it means that this peer he's

2847
02:57:07,251 --> 02:57:09,410
releasing to some real Internet traffic

2848
02:57:09,410 --> 02:57:12,501
and his fingers and write information so

2849
02:57:12,501 --> 02:57:14,931
to answer other questions IDs to relive

2850
02:57:14,931 --> 02:57:18,650
accessed factors to every participant so

2851
02:57:18,650 --> 02:57:21,291
that we can decide whether or not to

2852
02:57:21,291 --> 02:57:23,990
trust some sightings and we're using a

2853
02:57:23,990 --> 02:57:26,240
fact that more than one IP a chat I need

2854
02:57:26,240 --> 02:57:28,221
to be reporting the same attack for us

2855
02:57:28,221 --> 02:57:31,841
to make it part of the consensus

2856
02:57:39,680 --> 02:57:42,870
so he says no circus anywhere will be

2857
02:57:42,870 --> 02:57:45,689
available and since actually I will

2858
02:57:45,689 --> 02:57:47,790
include github links it's a tie into the

2859
02:57:47,790 --> 02:57:49,560
presentation and enjoy meanwhile you

2860
02:57:49,560 --> 02:57:51,689
think you everybody for your time and

2861
02:57:51,689 --> 02:57:52,580
your attention

2862
02:57:52,580 --> 02:57:56,520
thanks and don't forget to send us our

2863
02:57:56,520 --> 02:58:02,310
your slides with all the info okay so

2864
02:58:02,310 --> 02:58:08,479
this will conclude the talks for today

2865
02:58:08,479 --> 02:58:15,420
so just a quick reminder you can find on

2866
02:58:15,420 --> 02:58:18,660
the website on the schedule page you

2867
02:58:18,660 --> 02:58:20,760
will you can find the link to the slides

2868
02:58:20,760 --> 02:58:25,710
and the videos at least for yesterday's

2869
02:58:25,710 --> 02:58:28,680
talks and we will put the link to the

2870
02:58:28,680 --> 02:58:34,609
links to the videos this this evening

2871
02:58:34,609 --> 02:58:38,279
when the videos have been processed and

2872
02:58:38,279 --> 02:58:43,740
then so I will leave the the mic to to

2873
02:58:43,740 --> 02:58:47,069
Clemmie to so that he can introduce his

2874
02:58:47,069 --> 02:58:53,750
concerts that will be at 15 plus 5 so

2875
02:58:53,750 --> 02:59:01,740
Clem oh I'm talking English for the

2876
02:59:01,740 --> 02:59:04,470
presentation but the concert will be in

2877
02:59:04,470 --> 02:59:08,609
French because I only write songs in

2878
02:59:08,609 --> 02:59:13,410
French and I hope that a lot of you work

2879
02:59:13,410 --> 02:59:18,870
on it will not be broadcasted on zoom'

2880
02:59:18,870 --> 02:59:21,029
it would be directly broadcasted on

2881
02:59:21,029 --> 02:59:24,630
YouTube and I think you have all the

2882
02:59:24,630 --> 02:59:29,700
information on the website and maybe

2883
02:59:29,700 --> 02:59:35,910
some some the first one what you you you

2884
02:59:35,910 --> 02:59:37,970
want to hear

2885
02:59:37,970 --> 02:59:56,208
[Music]

2886
03:00:02,960 --> 03:00:13,830
[Music]

2887
03:00:35,510 --> 03:00:37,850
for those who are following us on

2888
03:00:37,850 --> 03:00:40,909
YouTube it will be another youtube link

2889
03:00:40,909 --> 03:00:43,600
so pay attention check the website and

2890
03:00:43,600 --> 03:00:48,709
switch to the other stream thank you -

2891
03:00:48,709 --> 03:00:51,619
see you for the concert and see you

2892
03:00:51,619 --> 03:00:56,989
tomorrow for the the next talks and the

2893
03:00:56,989 --> 03:00:59,539
the final day of this possess alt

2894
03:00:59,539 --> 03:01:05,439
edition thank you it's you tomorrow

