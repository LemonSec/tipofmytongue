1
00:00:00,000 --> 00:00:06,390
mornin aye my name is George Beckman and

2
00:00:02,879 --> 00:00:08,220
I have the opportunity to share some of

3
00:00:06,390 --> 00:00:10,290
this information with this morning I'm a

4
00:00:08,220 --> 00:00:12,509
little surprised that the number of

5
00:00:10,290 --> 00:00:15,690
people that are here because there's a

6
00:00:12,509 --> 00:00:18,000
badge hacking session going on and if I

7
00:00:15,690 --> 00:00:21,390
was not presenting I'd probably be there

8
00:00:18,000 --> 00:00:23,759
so I guess you guys may have a little

9
00:00:21,390 --> 00:00:25,470
bit of interest in in DNS but I'm gonna

10
00:00:23,760 --> 00:00:29,420
tell you just a little bit a little bit

11
00:00:25,470 --> 00:00:34,410
about myself before I get into the topic

12
00:00:29,420 --> 00:00:37,050
first of all the father in this story is

13
00:00:34,410 --> 00:00:40,260
me this was just a couple of weeks ago

14
00:00:37,050 --> 00:00:42,269
you can check it out on ksl but I'll

15
00:00:40,260 --> 00:00:44,250
tell you a couple of things what they

16
00:00:42,270 --> 00:00:47,340
say about make sure that you meet in a

17
00:00:44,250 --> 00:00:50,910
public well-lit place when you're doing

18
00:00:47,340 --> 00:00:53,340
a caseload transaction is true and and

19
00:00:50,910 --> 00:00:54,690
it's important to carry with you if

20
00:00:53,340 --> 00:00:59,070
you're gonna do something shady like

21
00:00:54,690 --> 00:01:01,500
this so anyways so that's me and then

22
00:00:59,070 --> 00:01:04,739
another thing about me yeah this is me

23
00:01:01,500 --> 00:01:07,590
as well I'm running for Utah House seat

24
00:01:04,739 --> 00:01:10,320
and Herrmann district where I live so a

25
00:01:07,590 --> 00:01:14,760
couple of personal things about me thank

26
00:01:10,320 --> 00:01:17,970
you and so I work for cash Valley

27
00:01:14,760 --> 00:01:20,400
Electric the technology division and we

28
00:01:17,970 --> 00:01:24,650
I've been there about three years I've

29
00:01:20,400 --> 00:01:24,650
I've been working in this industry for

30
00:01:24,740 --> 00:01:31,798
20-something years I've I've worked a

31
00:01:27,509 --> 00:01:35,729
lot in DoD space for a long time I

32
00:01:31,799 --> 00:01:37,829
worked supporting an MCI network in San

33
00:01:35,729 --> 00:01:39,780
Diego I've supported organizations in

34
00:01:37,829 --> 00:01:41,669
Northern Virginia some I can't mention

35
00:01:39,780 --> 00:01:45,119
some I can White House communications

36
00:01:41,670 --> 00:01:47,189
agency is on the list of organizations

37
00:01:45,119 --> 00:01:50,630
that I support it so anyway so that's a

38
00:01:47,189 --> 00:01:55,619
little bit about me this this session

39
00:01:50,630 --> 00:01:58,979
there there's a lot changing with DNS

40
00:01:55,619 --> 00:02:01,680
and privacy on the Internet and so what

41
00:01:58,979 --> 00:02:05,189
I want to talk about today is is how

42
00:02:01,680 --> 00:02:07,710
those changes are affecting our ability

43
00:02:05,189 --> 00:02:11,008
to provide content filtering and

44
00:02:07,710 --> 00:02:13,780
security but in order to do that I want

45
00:02:11,008 --> 00:02:15,458
to walk us through a little bit of

46
00:02:13,780 --> 00:02:17,620
DNS to make sure that we have a good

47
00:02:15,459 --> 00:02:19,660
foundation but I don't like going

48
00:02:17,620 --> 00:02:22,240
against a lot of details about the

49
00:02:19,660 --> 00:02:25,180
protocol but just enough hopefully that

50
00:02:22,240 --> 00:02:27,180
everybody understands banned and then

51
00:02:25,180 --> 00:02:31,030
we'll talk about the privacy concerns

52
00:02:27,180 --> 00:02:34,470
associated with DNS and then get into

53
00:02:31,030 --> 00:02:36,910
some of these DNS SEC Dane DNS crypt

54
00:02:34,470 --> 00:02:41,109
d-o-t though so a lot of these things

55
00:02:36,910 --> 00:02:43,630
and DNS over quick I took some of those

56
00:02:41,110 --> 00:02:45,580
slides out because I'm concerned about

57
00:02:43,630 --> 00:02:49,570
time boat so we'll see what happens and

58
00:02:45,580 --> 00:02:52,959
then and then we'll I have a little demo

59
00:02:49,570 --> 00:02:56,170
if I have time I'll show you do H that

60
00:02:52,959 --> 00:02:57,730
way and then then we'll talk about it at

61
00:02:56,170 --> 00:02:58,208
the end okay well what does this all

62
00:02:57,730 --> 00:03:02,200
mean

63
00:02:58,209 --> 00:03:06,040
TLS 1.3 how many of you guys are

64
00:03:02,200 --> 00:03:08,230
concerned about TLS 1.3 out here so

65
00:03:06,040 --> 00:03:12,220
there's there's a few hands how many of

66
00:03:08,230 --> 00:03:16,899
you guys do content filtering leveraging

67
00:03:12,220 --> 00:03:20,739
DNS today okay that's that's good maybe

68
00:03:16,900 --> 00:03:23,530
a quarter of you so alright let's go

69
00:03:20,739 --> 00:03:26,019
ahead and get right into it a little bit

70
00:03:23,530 --> 00:03:28,989
so DNS is something that's been around

71
00:03:26,019 --> 00:03:32,470
for a long time right it was over 30

72
00:03:28,989 --> 00:03:34,750
years and it's it's crucial to be able

73
00:03:32,470 --> 00:03:37,930
to you have something to resolve names

74
00:03:34,750 --> 00:03:41,799
to IP addresses and so but when DNS was

75
00:03:37,930 --> 00:03:43,690
first you know ratified and implemented

76
00:03:41,799 --> 00:03:47,290
privacy was not something that they were

77
00:03:43,690 --> 00:03:49,440
thinking about and so so we're we're

78
00:03:47,290 --> 00:03:53,560
here today talking about this because

79
00:03:49,440 --> 00:03:56,560
hindsight is 20/20 but DNS runs over UDP

80
00:03:53,560 --> 00:03:59,500
I think a lot of us know this and it's

81
00:03:56,560 --> 00:04:03,250
in clear text but why is privacy even

82
00:03:59,500 --> 00:04:05,560
important when it comes to DNS and we're

83
00:04:03,250 --> 00:04:09,579
gonna talk about that in just a second

84
00:04:05,560 --> 00:04:10,870
but just real quick for DNS privacy is

85
00:04:09,579 --> 00:04:14,170
important because not only are we

86
00:04:10,870 --> 00:04:17,228
resolving IP addresses DNS also carries

87
00:04:14,170 --> 00:04:22,659
other informations today right so for

88
00:04:17,228 --> 00:04:25,390
example when there's been some all right

89
00:04:22,659 --> 00:04:26,909
some additions to DNS these text records

90
00:04:25,390 --> 00:04:29,969
for example are used

91
00:04:26,910 --> 00:04:32,400
you for things like I want to secure

92
00:04:29,970 --> 00:04:37,580
email transactions and/or email of

93
00:04:32,400 --> 00:04:41,130
communication so how do I validate that

94
00:04:37,580 --> 00:04:43,950
SMTP server that is sending email from a

95
00:04:41,130 --> 00:04:46,320
certain domain is actually supposed to

96
00:04:43,950 --> 00:04:52,560
be sending email for that domain right

97
00:04:46,320 --> 00:04:54,960
so we leverage text records in DNS to

98
00:04:52,560 --> 00:04:57,000
you pull down a list of IP addresses of

99
00:04:54,960 --> 00:05:00,780
servers that are valid right so those

100
00:04:57,000 --> 00:05:04,920
kinds of things so DNS is used for a lot

101
00:05:00,780 --> 00:05:07,020
more than just name resolution right and

102
00:05:04,920 --> 00:05:09,150
so this is how do a lot of times people

103
00:05:07,020 --> 00:05:12,000
think about DNS and you think this is

104
00:05:09,150 --> 00:05:16,289
how DNS works the client on the left is

105
00:05:12,000 --> 00:05:19,770
is making a request to go to see be calm

106
00:05:16,290 --> 00:05:21,660
let's say and they were and you make

107
00:05:19,770 --> 00:05:24,599
that request of your recursive DNS

108
00:05:21,660 --> 00:05:28,620
server either on site or the ISP but

109
00:05:24,600 --> 00:05:31,260
that DNS server will request go to the

110
00:05:28,620 --> 00:05:33,900
root server and ask where is calm live

111
00:05:31,260 --> 00:05:37,530
and that server responds and then the

112
00:05:33,900 --> 00:05:38,940
server will say ok where does CVE com

113
00:05:37,530 --> 00:05:41,460
live and then that server responds with

114
00:05:38,940 --> 00:05:44,070
the DNS server that tv.com lives on and

115
00:05:41,460 --> 00:05:49,289
then finally the authoritative server

116
00:05:44,070 --> 00:05:51,540
that that can respond 4cv com will give

117
00:05:49,290 --> 00:05:56,730
us an IP address for ww

118
00:05:51,540 --> 00:05:58,980
but danus doesn't exactly work this way

119
00:05:56,730 --> 00:06:00,950
and we'll talk about that a little bit

120
00:05:58,980 --> 00:06:04,320
but before that I want to talk about

121
00:06:00,950 --> 00:06:08,130
limitations of DNS again DNS being over

122
00:06:04,320 --> 00:06:09,900
30 years old right they didn't know back

123
00:06:08,130 --> 00:06:14,480
then and what we might be wanting to do

124
00:06:09,900 --> 00:06:17,549
with DNS and so the protocol itself is

125
00:06:14,480 --> 00:06:20,850
the original protocol itself is pretty

126
00:06:17,550 --> 00:06:23,370
much exhausted as far as space left in

127
00:06:20,850 --> 00:06:26,810
the headers and and the payload and it

128
00:06:23,370 --> 00:06:29,520
was a limit of 512 byte payload and so

129
00:06:26,810 --> 00:06:32,190
something had to be done because there's

130
00:06:29,520 --> 00:06:38,340
just no room to put anything else in

131
00:06:32,190 --> 00:06:39,810
here and so there came a DNS and edn

132
00:06:38,340 --> 00:06:43,049
desk

133
00:06:39,810 --> 00:06:46,470
was ratified and it extended the NS and

134
00:06:43,050 --> 00:06:49,590
allowed a negotiations take place to be

135
00:06:46,470 --> 00:06:53,160
able to send larger payloads in DNS

136
00:06:49,590 --> 00:06:58,560
packets and without having to revert to

137
00:06:53,160 --> 00:07:02,160
TCP so so it didn't fundamentally change

138
00:06:58,560 --> 00:07:06,919
the way the NS works but but it extended

139
00:07:02,160 --> 00:07:10,380
the NS in that way right you see there's

140
00:07:06,919 --> 00:07:12,539
and this I think we share a slides later

141
00:07:10,380 --> 00:07:15,960
but you can read this slide later if you

142
00:07:12,539 --> 00:07:18,360
want but basically there's an opt record

143
00:07:15,960 --> 00:07:20,849
on the DNS server that the client will

144
00:07:18,360 --> 00:07:22,729
look up and say if that record exists

145
00:07:20,849 --> 00:07:27,180
that it knows that the server can

146
00:07:22,729 --> 00:07:32,610
support a DNS and an expanded packet

147
00:07:27,180 --> 00:07:35,699
sizes and stuff like that and with when

148
00:07:32,610 --> 00:07:40,440
a DNS came out there were the firewalls

149
00:07:35,699 --> 00:07:43,380
were knew that DNS by standard was 512

150
00:07:40,440 --> 00:07:45,840
bytes UDP packets well now with e DNS

151
00:07:43,380 --> 00:07:48,659
firewalls had to be modified to inspect

152
00:07:45,840 --> 00:07:52,039
the traffic and to learn what the

153
00:07:48,659 --> 00:07:56,789
negotiated payload size was in order to

154
00:07:52,039 --> 00:08:00,090
to make sure that if if we negotiated a

155
00:07:56,789 --> 00:08:02,400
3,000 PI by payload then the firewall

156
00:08:00,090 --> 00:08:04,169
shouldn't allow the server to send more

157
00:08:02,400 --> 00:08:06,448
than that but it also should not

158
00:08:04,169 --> 00:08:08,490
restrict the traffic to only 512 bytes

159
00:08:06,449 --> 00:08:09,870
right so firewalls needed to be more

160
00:08:08,490 --> 00:08:13,860
intelligent and understanding this

161
00:08:09,870 --> 00:08:17,819
protocol as well as a result of the DNS

162
00:08:13,860 --> 00:08:19,580
enhancements so then e DNS comes out and

163
00:08:17,819 --> 00:08:21,840
some interesting things start happening

164
00:08:19,580 --> 00:08:26,370
one of the things is because we can

165
00:08:21,840 --> 00:08:31,020
extend DNS with more fields now ISP

166
00:08:26,370 --> 00:08:33,479
started using a DNS for maybe to share

167
00:08:31,020 --> 00:08:35,880
the MAC address of the client so that

168
00:08:33,479 --> 00:08:38,520
they can provide parental controls all

169
00:08:35,880 --> 00:08:41,640
right so that's one use case of a DNS

170
00:08:38,520 --> 00:08:46,260
that that maybe wasn't originally

171
00:08:41,640 --> 00:08:50,730
implement predicted but ended up

172
00:08:46,260 --> 00:08:53,000
happening and then what happens is now

173
00:08:50,730 --> 00:08:56,120
we start leaking more data

174
00:08:53,000 --> 00:08:57,440
you today is to the network right to the

175
00:08:56,120 --> 00:09:01,040
public Internet we don't know whether

176
00:08:57,440 --> 00:09:02,960
it's your ISP whether it's any any node

177
00:09:01,040 --> 00:09:05,140
in between your ISP and authoritative

178
00:09:02,960 --> 00:09:09,050
nameservers we're leaking information

179
00:09:05,140 --> 00:09:11,660
that is in clear text and not only that

180
00:09:09,050 --> 00:09:15,410
the way DNS really works is remember

181
00:09:11,660 --> 00:09:18,050
that originally I had dot-com in the

182
00:09:15,410 --> 00:09:21,530
first recursive request well really what

183
00:09:18,050 --> 00:09:26,000
DNS has the recursive DNS server does is

184
00:09:21,530 --> 00:09:29,000
it sends the entire request WWC Viacom

185
00:09:26,000 --> 00:09:31,850
to the route authoritative server even

186
00:09:29,000 --> 00:09:33,860
though that server doesn't need all that

187
00:09:31,850 --> 00:09:35,720
information to tell me where com lives

188
00:09:33,860 --> 00:09:40,370
right similarly it's the next level

189
00:09:35,720 --> 00:09:43,820
server it it's sending the entire lookup

190
00:09:40,370 --> 00:09:46,600
right request but all all the

191
00:09:43,820 --> 00:09:50,630
second-level DNS server needs to know is

192
00:09:46,600 --> 00:09:54,410
CVE com so we're leaking a lot of

193
00:09:50,630 --> 00:09:56,750
information and and if we don't trust

194
00:09:54,410 --> 00:09:58,760
the Pat you know the carriers they can

195
00:09:56,750 --> 00:10:01,700
be collecting that information they know

196
00:09:58,760 --> 00:10:02,420
our source address and who knows what

197
00:10:01,700 --> 00:10:06,680
they're doing with that information

198
00:10:02,420 --> 00:10:10,370
logging it using it for whatever and

199
00:10:06,680 --> 00:10:13,010
then there was an enhancement another

200
00:10:10,370 --> 00:10:16,400
one that leverages e DNS is the client

201
00:10:13,010 --> 00:10:18,830
subnet and it within the DNS requests

202
00:10:16,400 --> 00:10:20,750
anybody think they know why it's

203
00:10:18,830 --> 00:10:24,200
important to be able to share the client

204
00:10:20,750 --> 00:10:29,650
and subnet indiana's with when you're

205
00:10:24,200 --> 00:10:32,300
doing name lookups well think about

206
00:10:29,650 --> 00:10:35,780
content delivery networks right so

207
00:10:32,300 --> 00:10:36,829
there's a here's an example that I run

208
00:10:35,780 --> 00:10:40,610
through let just say that we have a

209
00:10:36,830 --> 00:10:43,820
client that is living in Sweden and that

210
00:10:40,610 --> 00:10:46,300
clients recursive DNS server is pointing

211
00:10:43,820 --> 00:10:50,330
to an ISP in Germany for some reason

212
00:10:46,300 --> 00:10:54,439
then well then when the lookup happens

213
00:10:50,330 --> 00:10:58,339
then that ISP will request the

214
00:10:54,440 --> 00:11:00,230
resolution for a WWE example net but

215
00:10:58,339 --> 00:11:03,140
what happens is the authoritative DNS

216
00:11:00,230 --> 00:11:04,730
server for example dotnet sees the

217
00:11:03,140 --> 00:11:06,410
source IP address that's coming from a

218
00:11:04,730 --> 00:11:10,610
IP address and Germany

219
00:11:06,410 --> 00:11:13,250
and so it says okay I know that there's

220
00:11:10,610 --> 00:11:15,170
a content delivery node in Germany and

221
00:11:13,250 --> 00:11:17,810
then it replies with that IP address

222
00:11:15,170 --> 00:11:19,579
gets back to the client and all of a

223
00:11:17,810 --> 00:11:23,630
sudden the client is streaming that

224
00:11:19,580 --> 00:11:25,430
media from Germany and it may not be the

225
00:11:23,630 --> 00:11:29,600
best exactly the best experience for

226
00:11:25,430 --> 00:11:32,030
that client right so with the extension

227
00:11:29,600 --> 00:11:35,450
that shares the subnet of the client

228
00:11:32,030 --> 00:11:39,430
what happens is the client again makes

229
00:11:35,450 --> 00:11:44,300
the request for for that IP address and

230
00:11:39,430 --> 00:11:46,849
then the that recursive DNS server sends

231
00:11:44,300 --> 00:11:48,109
the subnet of the clock of the original

232
00:11:46,850 --> 00:11:49,940
client where it's coming from

233
00:11:48,110 --> 00:11:52,690
so now the authoritative name server

234
00:11:49,940 --> 00:11:59,210
knows that that client is coming from

235
00:11:52,690 --> 00:12:01,460
Sweden and so the response can be more

236
00:11:59,210 --> 00:12:04,160
intelligent and say okay since the

237
00:12:01,460 --> 00:12:06,830
client is in Sweden I will give you an

238
00:12:04,160 --> 00:12:09,110
IP address for a node that resides in

239
00:12:06,830 --> 00:12:12,650
Sweden and so now it goes back to the

240
00:12:09,110 --> 00:12:16,480
client and the client is streaming his

241
00:12:12,650 --> 00:12:19,010
data or her data from some from a more

242
00:12:16,480 --> 00:12:21,070
geographically friendly place for him so

243
00:12:19,010 --> 00:12:24,950
the experience ends up being better

244
00:12:21,070 --> 00:12:28,340
again so good reasons for these

245
00:12:24,950 --> 00:12:31,550
enhancements right it improves the

246
00:12:28,340 --> 00:12:36,500
experience for the end user which is a

247
00:12:31,550 --> 00:12:38,420
good thing but there again there are

248
00:12:36,500 --> 00:12:41,420
some concerns because while we were in

249
00:12:38,420 --> 00:12:44,810
flight now we are sending in clear text

250
00:12:41,420 --> 00:12:50,150
a lot of metadata a lot of information

251
00:12:44,810 --> 00:12:52,969
and the question becomes even at rest

252
00:12:50,150 --> 00:12:55,699
what happens with this data how many how

253
00:12:52,970 --> 00:12:58,790
many ISPs how many DNS servers DNS

254
00:12:55,700 --> 00:13:00,350
providers are collecting logging how

255
00:12:58,790 --> 00:13:04,040
long are they logging that information

256
00:13:00,350 --> 00:13:06,170
for and and nobody right nobody knows

257
00:13:04,040 --> 00:13:07,849
but we're gonna focus today on the

258
00:13:06,170 --> 00:13:10,849
in-flight portion all right how do we

259
00:13:07,850 --> 00:13:13,580
secure and minimize the amount of

260
00:13:10,850 --> 00:13:16,670
information leaked and this is this is a

261
00:13:13,580 --> 00:13:19,490
problem that the internet gods are

262
00:13:16,670 --> 00:13:20,150
trying to solve because they care about

263
00:13:19,490 --> 00:13:22,850
our private

264
00:13:20,150 --> 00:13:25,010
see sometimes they care about our

265
00:13:22,850 --> 00:13:29,210
privacy more than they care about our

266
00:13:25,010 --> 00:13:31,670
security but that's okay that's our job

267
00:13:29,210 --> 00:13:34,970
is to make sure that security continues

268
00:13:31,670 --> 00:13:39,860
to happen so there was an RFC it was RFC

269
00:13:34,970 --> 00:13:41,630
7816 and what that did is it was it's

270
00:13:39,860 --> 00:13:43,730
not a standard but it's just kind of a

271
00:13:41,630 --> 00:13:46,280
guideline that says hey when we're doing

272
00:13:43,730 --> 00:13:48,110
DNS lookups let's send the minimal

273
00:13:46,280 --> 00:13:51,920
amount of information we need as a best

274
00:13:48,110 --> 00:13:52,880
practice to so that we minimize the

275
00:13:51,920 --> 00:13:56,240
amount of information that we're leaking

276
00:13:52,880 --> 00:13:58,370
and you can go read that it's it's

277
00:13:56,240 --> 00:14:01,220
pretty good stuff actually and and

278
00:13:58,370 --> 00:14:02,840
there's another reference here on the NS

279
00:14:01,220 --> 00:14:06,220
privacy and that's a really good

280
00:14:02,840 --> 00:14:09,170
resource to you it talks about a lot of

281
00:14:06,220 --> 00:14:12,050
privacy issues encryption issues and

282
00:14:09,170 --> 00:14:15,339
just help you get deeper into this

283
00:14:12,050 --> 00:14:18,199
subject if you're interested but if your

284
00:14:15,340 --> 00:14:21,290
resolver is implementing these best

285
00:14:18,200 --> 00:14:23,000
practices then it will actually act the

286
00:14:21,290 --> 00:14:25,310
way we talked about at the beginning

287
00:14:23,000 --> 00:14:30,370
where it's just sending what's needed

288
00:14:25,310 --> 00:14:34,010
per authoritative server instead of

289
00:14:30,370 --> 00:14:37,460
blasting it with with a firehose with

290
00:14:34,010 --> 00:14:40,910
all information right all right so

291
00:14:37,460 --> 00:14:42,980
whenever gonna get into DNS security one

292
00:14:40,910 --> 00:14:45,860
thing that's interesting is a lot of

293
00:14:42,980 --> 00:14:49,430
times people hear DNS SEC and they think

294
00:14:45,860 --> 00:14:51,470
great DNS SEC makes everything secure

295
00:14:49,430 --> 00:14:55,180
for me and it and there's nothing else

296
00:14:51,470 --> 00:14:58,640
to worry about how many of you guys here

297
00:14:55,180 --> 00:15:01,280
managed DNS any anybody in here they're

298
00:14:58,640 --> 00:15:04,160
a couple of have how many of you who

299
00:15:01,280 --> 00:15:10,760
managed DNS have actually implemented

300
00:15:04,160 --> 00:15:16,240
DNS SEC 1 good so I I did some research

301
00:15:10,760 --> 00:15:19,240
online and it looks like DNS SEC is like

302
00:15:16,240 --> 00:15:21,380
the numbers are not that clear because

303
00:15:19,240 --> 00:15:22,970
because there's not a lot of

304
00:15:21,380 --> 00:15:26,180
authoritative information but what I

305
00:15:22,970 --> 00:15:29,000
have what I glean from it is maybe three

306
00:15:26,180 --> 00:15:32,569
to four percent of domains actually have

307
00:15:29,000 --> 00:15:34,230
implemented DNS X so it's really

308
00:15:32,570 --> 00:15:36,240
miniscule

309
00:15:34,230 --> 00:15:39,990
well understand why as we go through

310
00:15:36,240 --> 00:15:41,460
this presentation all right so then you

311
00:15:39,990 --> 00:15:43,890
know DNS SEC will provide authentication

312
00:15:41,460 --> 00:15:47,700
and integrity but there's no encryption

313
00:15:43,890 --> 00:15:51,060
and so the encryption piece is important

314
00:15:47,700 --> 00:15:52,980
for privacy authentication integrity is

315
00:15:51,060 --> 00:15:55,290
important it's a good thing and we want

316
00:15:52,980 --> 00:15:57,090
those things but it doesn't solve the

317
00:15:55,290 --> 00:16:00,120
DNS privacy problems but we'll talk a

318
00:15:57,090 --> 00:16:02,970
little bit about how this works so so

319
00:16:00,120 --> 00:16:04,980
DNS SEC how does this actually work we

320
00:16:02,970 --> 00:16:10,260
have a domain and we have a record in

321
00:16:04,980 --> 00:16:13,050
our domain and that record has gets

322
00:16:10,260 --> 00:16:14,580
signed from us by using a server key one

323
00:16:13,050 --> 00:16:16,530
nice thing about DNS SEC is there are no

324
00:16:14,580 --> 00:16:19,010
certificates alright so anyways that

325
00:16:16,530 --> 00:16:22,410
record gets signed by a server key and

326
00:16:19,010 --> 00:16:25,710
the server has a public key that it

327
00:16:22,410 --> 00:16:27,900
publishes and so you can you can query

328
00:16:25,710 --> 00:16:31,050
for the public key and then you can look

329
00:16:27,900 --> 00:16:35,850
to see if that record is actually signed

330
00:16:31,050 --> 00:16:38,579
by that public key that's great

331
00:16:35,850 --> 00:16:41,670
maybe but what what do you think the

332
00:16:38,580 --> 00:16:44,550
problem might be with this model right

333
00:16:41,670 --> 00:16:49,290
how do you know whether that public key

334
00:16:44,550 --> 00:16:50,939
is is actually valid right or it comes

335
00:16:49,290 --> 00:16:55,829
from that domain because it's hosted on

336
00:16:50,940 --> 00:16:58,020
the same server so then we think ok so

337
00:16:55,830 --> 00:17:00,120
and how else how do we solve the problem

338
00:16:58,020 --> 00:17:03,120
of rotating keys - if I rotate a key

339
00:17:00,120 --> 00:17:06,690
then the public key has to change and

340
00:17:03,120 --> 00:17:08,520
and you could have thousands of records

341
00:17:06,690 --> 00:17:11,100
that you have to resign and anyway it's

342
00:17:08,520 --> 00:17:14,129
like that can get messy so then there's

343
00:17:11,099 --> 00:17:16,109
another they thought ok we have a public

344
00:17:14,130 --> 00:17:18,209
key that signs we have a private key

345
00:17:16,109 --> 00:17:20,550
that signs all the all of our records

346
00:17:18,209 --> 00:17:23,580
and we have a public key but how about

347
00:17:20,550 --> 00:17:27,260
if we have another add another layer to

348
00:17:23,579 --> 00:17:30,179
it we have a zone signing key that signs

349
00:17:27,260 --> 00:17:31,290
the records in our zone and then we have

350
00:17:30,180 --> 00:17:34,590
a key signing key

351
00:17:31,290 --> 00:17:37,379
so the key signing key could be a larger

352
00:17:34,590 --> 00:17:40,470
key more entropy and doesn't get rotated

353
00:17:37,380 --> 00:17:43,620
as often and then the zone signing key

354
00:17:40,470 --> 00:17:45,810
would would be getting rotated at some

355
00:17:43,620 --> 00:17:46,860
interval because it's being used a lot

356
00:17:45,810 --> 00:17:49,500
more often and so

357
00:17:46,860 --> 00:17:53,459
there's more data out there to be able

358
00:17:49,500 --> 00:17:56,370
to maybe solve for the private key for

359
00:17:53,460 --> 00:17:59,490
that one anyway so what happens in this

360
00:17:56,370 --> 00:18:03,260
model is great except if we look up here

361
00:17:59,490 --> 00:18:07,230
the arrow circling back on itself that

362
00:18:03,260 --> 00:18:12,990
key signing key is self signed and again

363
00:18:07,230 --> 00:18:15,870
it's hosted on on itself and so if my

364
00:18:12,990 --> 00:18:18,750
DNS server is the authoritative of not

365
00:18:15,870 --> 00:18:22,139
only the content but of the of the

366
00:18:18,750 --> 00:18:23,370
signatures and the keys then it still

367
00:18:22,140 --> 00:18:27,210
didn't really help a whole lot about

368
00:18:23,370 --> 00:18:29,850
validating integrity right so we needed

369
00:18:27,210 --> 00:18:32,370
one more thing to happen and what we so

370
00:18:29,850 --> 00:18:35,790
what DNS SEC actually does is it creates

371
00:18:32,370 --> 00:18:38,549
the hierarchy and and so there's this

372
00:18:35,790 --> 00:18:41,309
idea of a delegation signer so comm

373
00:18:38,549 --> 00:18:43,950
would be a delegation signer for CVE

374
00:18:41,309 --> 00:18:47,809
comm and then there's our route above

375
00:18:43,950 --> 00:18:51,299
com that's the delegation Center for

376
00:18:47,809 --> 00:18:54,690
4.com and so now we have the Zelan

377
00:18:51,299 --> 00:18:57,210
signing key that is signed by the key

378
00:18:54,690 --> 00:19:01,650
signing key that was signed by the

379
00:18:57,210 --> 00:19:04,830
delegation signer and so that there's a

380
00:19:01,650 --> 00:19:09,270
chain for the chain all the way up to

381
00:19:04,830 --> 00:19:12,678
the root key and your resolver only has

382
00:19:09,270 --> 00:19:15,210
to have one certificate that's

383
00:19:12,679 --> 00:19:17,130
pre-installed or not certificate one

384
00:19:15,210 --> 00:19:19,350
public key that's pre-installed and

385
00:19:17,130 --> 00:19:22,679
that's for their route so if it can

386
00:19:19,350 --> 00:19:25,290
validate the root key is actually valid

387
00:19:22,679 --> 00:19:28,110
then they can use that chain of trust

388
00:19:25,290 --> 00:19:32,129
all the way down to the the bottom right

389
00:19:28,110 --> 00:19:36,750
into two years own well that's our

390
00:19:32,130 --> 00:19:38,490
that's all great and the problem is like

391
00:19:36,750 --> 00:19:41,790
I said earlier it hasn't been

392
00:19:38,490 --> 00:19:45,390
implemented why why was widely enough

393
00:19:41,790 --> 00:19:48,990
and it's been a long time actually since

394
00:19:45,390 --> 00:19:52,970
DNS SEC was ratified but here earlier

395
00:19:48,990 --> 00:19:56,130
this year and there was I can the

396
00:19:52,970 --> 00:19:58,050
internet corporation corporation for you

397
00:19:56,130 --> 00:20:00,750
know naming and numbering

398
00:19:58,050 --> 00:20:02,700
they assigning names the numbers

399
00:20:00,750 --> 00:20:05,880
I decided that like there's a serious

400
00:20:02,700 --> 00:20:09,420
problem because because of the lack of

401
00:20:05,880 --> 00:20:13,640
integrity in DNS it is leading to more

402
00:20:09,420 --> 00:20:17,460
and more DNS attacks and and so they're

403
00:20:13,640 --> 00:20:20,930
encouraging people to fully deploy DNS

404
00:20:17,460 --> 00:20:24,780
SEC right so there's a nice little tool

405
00:20:20,930 --> 00:20:28,410
if you go to DNS vis net you can put in

406
00:20:24,780 --> 00:20:29,970
a domain and here I put Vera sign in by

407
00:20:28,410 --> 00:20:35,520
the way was really hard to find a domain

408
00:20:29,970 --> 00:20:37,530
that was actually signed that actually

409
00:20:35,520 --> 00:20:40,139
has DNS SEC implemented I tried some

410
00:20:37,530 --> 00:20:42,690
Bank sites and I've tried you know some

411
00:20:40,140 --> 00:20:46,110
technology company sites and a lot of

412
00:20:42,690 --> 00:20:48,330
them have not implemented DNS SEC but I

413
00:20:46,110 --> 00:20:50,760
know this is small you can go look at it

414
00:20:48,330 --> 00:20:53,510
later on your own to you but these blue

415
00:20:50,760 --> 00:20:55,770
these arrows down here that are green

416
00:20:53,510 --> 00:20:59,370
indicate that there's a trust between

417
00:20:55,770 --> 00:21:01,650
each of these zones and so this shows

418
00:20:59,370 --> 00:21:06,239
you all the details key signing keys and

419
00:21:01,650 --> 00:21:08,310
and their public keys and anyway the

420
00:21:06,240 --> 00:21:12,270
whole chain all the way up so that's

421
00:21:08,310 --> 00:21:14,970
great but with DNS SEC all right what do

422
00:21:12,270 --> 00:21:17,910
we solve well we we authenticate the

423
00:21:14,970 --> 00:21:20,340
record which is really good and we make

424
00:21:17,910 --> 00:21:23,210
sure that it hasn't been modified again

425
00:21:20,340 --> 00:21:26,850
aren't really really good things and

426
00:21:23,210 --> 00:21:28,560
it's easy to to do because there's not

427
00:21:26,850 --> 00:21:32,100
there are no certificates involved which

428
00:21:28,560 --> 00:21:33,780
again is a benefit but it still doesn't

429
00:21:32,100 --> 00:21:39,570
solve our problem of encryption and

430
00:21:33,780 --> 00:21:45,990
privacy so now we get to a little bit

431
00:21:39,570 --> 00:21:49,740
more interesting topics right the this

432
00:21:45,990 --> 00:21:52,290
idea of okay because it's important to

433
00:21:49,740 --> 00:21:54,800
have integrity because of what we talked

434
00:21:52,290 --> 00:21:55,980
about earlier if you're using the DNS

435
00:21:54,800 --> 00:21:59,610
server

436
00:21:55,980 --> 00:22:01,140
alright so Dane so here I don't know if

437
00:21:59,610 --> 00:22:03,060
anybody a lot of you guys I've heard

438
00:22:01,140 --> 00:22:05,280
about Dane but domain authentication for

439
00:22:03,060 --> 00:22:08,280
named entities what this does is it says

440
00:22:05,280 --> 00:22:09,750
let's say it can be used for mail in

441
00:22:08,280 --> 00:22:13,879
this example but it could also be used

442
00:22:09,750 --> 00:22:18,600
for any website just because I go to say

443
00:22:13,880 --> 00:22:22,650
let's say I go to espn.com right and

444
00:22:18,600 --> 00:22:25,050
that's I see the little green lock that

445
00:22:22,650 --> 00:22:28,170
says that one of the my browser

446
00:22:25,050 --> 00:22:30,810
pre-installed sir trusted certificate

447
00:22:28,170 --> 00:22:32,940
authorities validates that that

448
00:22:30,810 --> 00:22:35,220
certificate that Seitz certificate is

449
00:22:32,940 --> 00:22:37,890
signed by something I trust but it

450
00:22:35,220 --> 00:22:42,230
doesn't necessarily mean that that it's

451
00:22:37,890 --> 00:22:44,970
signed by the certificate that espn.com

452
00:22:42,230 --> 00:22:48,360
intended to before that site to be

453
00:22:44,970 --> 00:22:51,060
signed with so anyway what Dane will do

454
00:22:48,360 --> 00:22:55,020
is it can you can put a record in DNS

455
00:22:51,060 --> 00:22:57,600
and say here is the here's the signature

456
00:22:55,020 --> 00:23:01,980
of the certificate you should expect

457
00:22:57,600 --> 00:23:04,830
when you go to espn.com and so that's

458
00:23:01,980 --> 00:23:06,960
another level of security right fidelity

459
00:23:04,830 --> 00:23:10,490
that says Orion Dane you could say

460
00:23:06,960 --> 00:23:13,040
here's the certificate authorities

461
00:23:10,490 --> 00:23:14,220
signature that should have signed

462
00:23:13,040 --> 00:23:16,290
espn.com

463
00:23:14,220 --> 00:23:20,520
so maybe espn.com should be signed by

464
00:23:16,290 --> 00:23:22,409
Verisign but it's signed by you know

465
00:23:20,520 --> 00:23:26,670
GoDaddy or something like that and and

466
00:23:22,410 --> 00:23:28,170
so that would tell the client that that

467
00:23:26,670 --> 00:23:30,900
there's still something wrong even

468
00:23:28,170 --> 00:23:33,480
though the signature even though the URL

469
00:23:30,900 --> 00:23:37,590
and the certificate match it's not the

470
00:23:33,480 --> 00:23:40,890
right certificate that data espn.com

471
00:23:37,590 --> 00:23:43,590
should be using so anyway so Danes a

472
00:23:40,890 --> 00:23:45,750
good a good protocol it can help with

473
00:23:43,590 --> 00:23:48,510
integrity and security on the internet

474
00:23:45,750 --> 00:23:50,550
but you wouldn't want to do this if you

475
00:23:48,510 --> 00:23:53,520
don't already have DNS SEC right because

476
00:23:50,550 --> 00:23:55,560
you want the DNS architecture to be

477
00:23:53,520 --> 00:23:58,920
secure before you're going to trust DNS

478
00:23:55,560 --> 00:24:02,490
to provide Ark you know security for

479
00:23:58,920 --> 00:24:03,750
other protocols and other traffic and if

480
00:24:02,490 --> 00:24:05,760
you want to learn more about Dane

481
00:24:03,750 --> 00:24:08,070
there's a really good video that goes

482
00:24:05,760 --> 00:24:14,190
into the details on YouTube feel free to

483
00:24:08,070 --> 00:24:15,870
to go watch that and and so we're gonna

484
00:24:14,190 --> 00:24:18,270
we're gonna get up we're going to keep

485
00:24:15,870 --> 00:24:20,969
going to DNS encryption now right

486
00:24:18,270 --> 00:24:24,570
because again the internet wants privacy

487
00:24:20,970 --> 00:24:26,850
for people and so DNS encryption is the

488
00:24:24,570 --> 00:24:30,019
way that we're going to do that but

489
00:24:26,850 --> 00:24:32,639
the solutions we're gonna discuss only

490
00:24:30,019 --> 00:24:36,029
address encryption between the client

491
00:24:32,639 --> 00:24:38,008
and that recursive server not between

492
00:24:36,029 --> 00:24:40,769
the recursive server and the other

493
00:24:38,009 --> 00:24:42,450
authoritative servers that might be

494
00:24:40,769 --> 00:24:44,880
doing lookups for so I just wanted to

495
00:24:42,450 --> 00:24:46,470
point that out here that's where we're

496
00:24:44,880 --> 00:24:51,269
gonna focus and we're gonna start first

497
00:24:46,470 --> 00:24:54,330
with DNS Script DNS crypt is a really

498
00:24:51,269 --> 00:24:56,549
it's a good protocol it's open source

499
00:24:54,330 --> 00:24:58,470
it's free it has a lot of

500
00:24:56,549 --> 00:25:00,720
implementations out there you can go

501
00:24:58,470 --> 00:25:03,440
download you can download application

502
00:25:00,720 --> 00:25:06,840
you can download a library and there are

503
00:25:03,440 --> 00:25:11,279
servers out there for example Open DNS

504
00:25:06,840 --> 00:25:13,110
will has a DNS script support already so

505
00:25:11,279 --> 00:25:16,320
if you have a client that does DNS

506
00:25:13,110 --> 00:25:19,350
script server does DNS Script you can

507
00:25:16,320 --> 00:25:23,370
have encryption and then from client to

508
00:25:19,350 --> 00:25:25,439
that resolver and it solves the problems

509
00:25:23,370 --> 00:25:30,590
of encryption and authentication and it

510
00:25:25,440 --> 00:25:33,600
can actually coexist with DNS SEC so

511
00:25:30,590 --> 00:25:37,769
there's no again there's no conflict

512
00:25:33,600 --> 00:25:40,129
there that's move on so here's an

513
00:25:37,769 --> 00:25:42,809
example have how DNS crypt would work

514
00:25:40,129 --> 00:25:47,428
where you have an app the browser or

515
00:25:42,809 --> 00:25:57,690
whatever the app requests a URL um www

516
00:25:47,429 --> 00:26:00,210
dot yes pls and to do the resolution but

517
00:25:57,690 --> 00:26:04,019
the application you have installed your

518
00:26:00,210 --> 00:26:06,539
agent would actually be a shim in the OS

519
00:26:04,019 --> 00:26:09,179
so the OS is aware of this the OS sends

520
00:26:06,539 --> 00:26:12,899
that request to the application and then

521
00:26:09,179 --> 00:26:16,980
the application goes and does the lookup

522
00:26:12,899 --> 00:26:19,018
and and so that's one model and then if

523
00:26:16,980 --> 00:26:21,360
we look here it's kind of hard to see

524
00:26:19,019 --> 00:26:23,039
probably a packet capture but to think

525
00:26:21,360 --> 00:26:27,779
to note on the packet capture is that

526
00:26:23,039 --> 00:26:31,080
that the the traffic is not standard DNS

527
00:26:27,779 --> 00:26:36,200
you don't see DNS it's unencrypted it's

528
00:26:31,080 --> 00:26:39,090
encrypted over UDP port 443 so yeah

529
00:26:36,200 --> 00:26:40,820
banned but also you will see that the

530
00:26:39,090 --> 00:26:44,610
site is still

531
00:26:40,820 --> 00:26:48,179
despite the fact that we can't see the

532
00:26:44,610 --> 00:26:52,199
content of the request so then we go to

533
00:26:48,180 --> 00:26:58,110
DNS or TLS so DNS over TLS is a standard

534
00:26:52,200 --> 00:27:02,910
and you can do either DNS over you UDP

535
00:26:58,110 --> 00:27:06,719
right so TLS or you can do or that's

536
00:27:02,910 --> 00:27:10,590
about DTLS or you can do DNS over

537
00:27:06,720 --> 00:27:12,660
standard TLS and so this standard the

538
00:27:10,590 --> 00:27:14,760
you the DTLS down there it isn't really

539
00:27:12,660 --> 00:27:16,860
implemented there's not any

540
00:27:14,760 --> 00:27:19,830
implementation out there but the DNS or

541
00:27:16,860 --> 00:27:25,439
a TLS standard is supported already by I

542
00:27:19,830 --> 00:27:26,850
think Google does this CloudFlare and so

543
00:27:25,440 --> 00:27:28,920
there are lots of open public

544
00:27:26,850 --> 00:27:33,389
implementations of DNS server TLS

545
00:27:28,920 --> 00:27:36,500
already today and and so they had to

546
00:27:33,390 --> 00:27:38,520
decide a few things right I'm dad to

547
00:27:36,500 --> 00:27:42,000
decide whether they're going to use an

548
00:27:38,520 --> 00:27:44,610
existing port like port 443 or are they

549
00:27:42,000 --> 00:27:46,440
going to do something differently or

550
00:27:44,610 --> 00:27:50,520
something unique for this protocol and

551
00:27:46,440 --> 00:27:54,540
in the end they've decided on a port 48

552
00:27:50,520 --> 00:27:56,280
v 3 and as hard as it is to allocate a

553
00:27:54,540 --> 00:27:59,370
port they were able to do it for this

554
00:27:56,280 --> 00:28:04,560
protocol which which is a good thing so

555
00:27:59,370 --> 00:28:08,520
we can identify that there's DTLS or DNS

556
00:28:04,560 --> 00:28:09,600
over TLS happening in our network by by

557
00:28:08,520 --> 00:28:12,270
looking at

558
00:28:09,600 --> 00:28:13,980
TCP 8 v 3 and also there's one other

559
00:28:12,270 --> 00:28:17,070
thing that I'll show you a little bit

560
00:28:13,980 --> 00:28:20,250
you know in a few slides that gives us

561
00:28:17,070 --> 00:28:23,429
an idea of DTI DNS or a TLS taking place

562
00:28:20,250 --> 00:28:25,470
but the model for DNS over TLS is pretty

563
00:28:23,430 --> 00:28:31,350
similar you have a client on your

564
00:28:25,470 --> 00:28:33,540
workstation our device and it the

565
00:28:31,350 --> 00:28:36,840
browser it basically is the same model

566
00:28:33,540 --> 00:28:40,230
as DNS script but the one thing that

567
00:28:36,840 --> 00:28:42,990
could be different with DNS over TLS is

568
00:28:40,230 --> 00:28:46,650
a browser might natively implement that

569
00:28:42,990 --> 00:28:49,230
protocol in so that it bypasses the

570
00:28:46,650 --> 00:28:52,560
network stack right so here's an example

571
00:28:49,230 --> 00:28:54,210
of an application it's W DNS that

572
00:28:52,560 --> 00:28:56,580
anybody can download and

573
00:28:54,210 --> 00:29:00,270
test and invalidate what happens but

574
00:28:56,580 --> 00:29:03,740
basically you do a look up using stubby

575
00:29:00,270 --> 00:29:06,900
TLS and you will see that the traffic

576
00:29:03,740 --> 00:29:11,070
the name resolution is happening over

577
00:29:06,900 --> 00:29:14,400
the deport eight five three and the one

578
00:29:11,070 --> 00:29:17,730
thing that's important to note is the in

579
00:29:14,400 --> 00:29:19,650
the packet the record the TLS wants you

580
00:29:17,730 --> 00:29:23,340
header it actually tells you right there

581
00:29:19,650 --> 00:29:28,890
that it's the application is DNS so it's

582
00:29:23,340 --> 00:29:30,840
more friendly for security or in content

583
00:29:28,890 --> 00:29:33,840
filtering to be able to identify that

584
00:29:30,840 --> 00:29:36,449
and then you could block it if you want

585
00:29:33,840 --> 00:29:38,340
it to you right hopefully they fall back

586
00:29:36,450 --> 00:29:41,090
to regular DNS or something you have

587
00:29:38,340 --> 00:29:45,350
visibility into you well here are some

588
00:29:41,090 --> 00:29:51,300
there's some examples of public

589
00:29:45,350 --> 00:29:53,100
implementations of DNS over TLS the one

590
00:29:51,300 --> 00:29:56,669
other thing to keep in mind is this list

591
00:29:53,100 --> 00:30:01,980
is constantly growing so what that means

592
00:29:56,670 --> 00:30:03,960
is is that a right if the client

593
00:30:01,980 --> 00:30:07,290
implement the browser implements it

594
00:30:03,960 --> 00:30:10,890
directly you lose visibility into it but

595
00:30:07,290 --> 00:30:14,639
also you can blacklist destinations on a

596
00:30:10,890 --> 00:30:18,990
firewall based on the known growing list

597
00:30:14,640 --> 00:30:22,440
of public resolvers that implemented the

598
00:30:18,990 --> 00:30:24,150
NS over TLS the problem with that though

599
00:30:22,440 --> 00:30:26,760
is it's kind of like playing

600
00:30:24,150 --> 00:30:28,440
whack-a-mole right because you might

601
00:30:26,760 --> 00:30:31,410
block the known servers a new server

602
00:30:28,440 --> 00:30:33,090
pops up and it's it's a losing game so

603
00:30:31,410 --> 00:30:34,560
you're not probably going to want to

604
00:30:33,090 --> 00:30:38,399
play that game where your blacklisting

605
00:30:34,560 --> 00:30:43,050
destinations for to prevent DNS or a TLS

606
00:30:38,400 --> 00:30:47,100
on your network so let's now go to do H

607
00:30:43,050 --> 00:30:51,510
or DNS over HTTP this one is the more

608
00:30:47,100 --> 00:30:54,600
controversial one because are the

609
00:30:51,510 --> 00:30:57,600
browser's Chrome and Firefox have native

610
00:30:54,600 --> 00:31:03,600
implementations of do H already alright

611
00:30:57,600 --> 00:31:06,360
and and and they can already bypass

612
00:31:03,600 --> 00:31:08,010
anything we're doing but the good news

613
00:31:06,360 --> 00:31:11,100
is that they're not

614
00:31:08,010 --> 00:31:13,890
enabled by default yet and there's a lot

615
00:31:11,100 --> 00:31:17,310
of pressure on those browser companies

616
00:31:13,890 --> 00:31:19,080
to to be careful about how they

617
00:31:17,310 --> 00:31:20,370
implement this and I'll time again we'll

618
00:31:19,080 --> 00:31:25,710
talk a little bit more about that but

619
00:31:20,370 --> 00:31:28,949
the the nice thing about DNS over HTTPS

620
00:31:25,710 --> 00:31:31,200
is that it's it's really easy to

621
00:31:28,950 --> 00:31:33,300
implement it's really easy for the

622
00:31:31,200 --> 00:31:39,840
end-user it provides them privacy

623
00:31:33,300 --> 00:31:42,210
security and of course it means that as

624
00:31:39,840 --> 00:31:43,980
owners of the network's it makes us

625
00:31:42,210 --> 00:31:46,410
completely blind to what they're doing

626
00:31:43,980 --> 00:31:50,580
if they they do choose to go that route

627
00:31:46,410 --> 00:31:53,640
and so this this model will completely

628
00:31:50,580 --> 00:31:58,370
bypass the operating system stack and so

629
00:31:53,640 --> 00:32:02,340
if if the client is doing this you're

630
00:31:58,370 --> 00:32:08,159
there really is no real recourse to stop

631
00:32:02,340 --> 00:32:10,590
it except for you have to inspect HTTP

632
00:32:08,160 --> 00:32:14,340
or a TLS traffic on your firewalls or

633
00:32:10,590 --> 00:32:15,720
under prop or explicit proxies but we'll

634
00:32:14,340 --> 00:32:18,959
talk a little bit more about that to you

635
00:32:15,720 --> 00:32:21,240
and here sometimes some people think ok

636
00:32:18,960 --> 00:32:26,880
here's that here's an example in Firefox

637
00:32:21,240 --> 00:32:30,140
on how to enable do H and the first

638
00:32:26,880 --> 00:32:33,750
thing to note is down here where it says

639
00:32:30,140 --> 00:32:39,560
network TR our mode this is that's where

640
00:32:33,750 --> 00:32:42,600
you 0 is by default disabled and Firefox

641
00:32:39,560 --> 00:32:45,090
today is still disabled by default your

642
00:32:42,600 --> 00:32:46,620
mileage may vary though if you look at

643
00:32:45,090 --> 00:32:47,540
your configuration I'll tell you why in

644
00:32:46,620 --> 00:32:50,280
a minute

645
00:32:47,540 --> 00:32:51,720
but the other thing to you is down below

646
00:32:50,280 --> 00:32:54,690
a little bit we can see where it says

647
00:32:51,720 --> 00:32:58,470
the network trrr URI

648
00:32:54,690 --> 00:33:04,250
well that URI is telling Firefox use

649
00:32:58,470 --> 00:33:07,140
this as your resolver for a do H ok

650
00:33:04,250 --> 00:33:10,110
that's good if so if we know that it's

651
00:33:07,140 --> 00:33:14,070
using CloudFlare and we own DNS for the

652
00:33:10,110 --> 00:33:17,310
first look up when when the user looks

653
00:33:14,070 --> 00:33:20,040
up for cloud Flair's DNS server we can

654
00:33:17,310 --> 00:33:21,418
block that request and then the client

655
00:33:20,040 --> 00:33:23,668
the browser will never again

656
00:33:21,419 --> 00:33:26,489
CloudFlare is DNS servers IP address and

657
00:33:23,669 --> 00:33:30,719
so then they will have to fall back to

658
00:33:26,489 --> 00:33:32,219
traditional DNS but there's a field up

659
00:33:30,719 --> 00:33:35,669
here at the top where it says the

660
00:33:32,219 --> 00:33:37,709
bootstrap address and so if somebody

661
00:33:35,669 --> 00:33:41,399
puts in the bootstrap address there say

662
00:33:37,709 --> 00:33:43,919
quad ones then the browser will never do

663
00:33:41,399 --> 00:33:47,609
a traditional DNS lookup and it will go

664
00:33:43,919 --> 00:33:52,200
directly to that DNS server to do its

665
00:33:47,609 --> 00:33:56,189
lookups and now you couldn't block this

666
00:33:52,200 --> 00:34:01,639
behavior from from you know from a

667
00:33:56,190 --> 00:34:03,450
traditional DNS security perspective but

668
00:34:01,639 --> 00:34:06,109
there's some good news

669
00:34:03,450 --> 00:34:10,619
Google Chrome has said that they're

670
00:34:06,109 --> 00:34:13,049
working on implementing do H in a way

671
00:34:10,619 --> 00:34:15,029
that is enterprise friendly because some

672
00:34:13,049 --> 00:34:17,969
of the problems with do H are first of

673
00:34:15,029 --> 00:34:19,619
all imagine if I am a user in your

674
00:34:17,969 --> 00:34:22,319
network or I'm an employee in your

675
00:34:19,619 --> 00:34:24,210
company and I have do H what if I want

676
00:34:22,319 --> 00:34:26,819
to look up an internal record internal

677
00:34:24,210 --> 00:34:30,149
resource if I have DNA do H enabled and

678
00:34:26,819 --> 00:34:31,918
that's the default behavior it breaks me

679
00:34:30,149 --> 00:34:35,038
functioning right it breaks me working

680
00:34:31,918 --> 00:34:39,658
and so there that's potential help desk

681
00:34:35,039 --> 00:34:41,970
calls and so nobody wants to have that

682
00:34:39,659 --> 00:34:44,669
problem right well Google is saying

683
00:34:41,969 --> 00:34:49,199
we're gonna work with enterprises we're

684
00:34:44,668 --> 00:34:52,949
gonna have a way to to have group

685
00:34:49,199 --> 00:34:55,799
policies manage this configuration also

686
00:34:52,949 --> 00:35:00,359
what they're gonna do is have a list a

687
00:34:55,799 --> 00:35:03,240
table of known DNS providers so umbrella

688
00:35:00,359 --> 00:35:05,009
Google you know CloudFlare I'm sure

689
00:35:03,240 --> 00:35:07,529
those some of the big ones at least will

690
00:35:05,009 --> 00:35:11,369
be on the list and if those known dns

691
00:35:07,529 --> 00:35:15,569
providers have equivalent do h service

692
00:35:11,369 --> 00:35:18,779
they're going to leverage that same DNS

693
00:35:15,569 --> 00:35:23,910
provider and but using the Oh H so

694
00:35:18,779 --> 00:35:25,769
that's that's user friendly and it's you

695
00:35:23,910 --> 00:35:29,788
know it's it's a little bit better for

696
00:35:25,769 --> 00:35:31,410
for the environment right but this

697
00:35:29,789 --> 00:35:33,450
system that you can turn on and off

698
00:35:31,410 --> 00:35:34,720
right now if you wanted to by editing

699
00:35:33,450 --> 00:35:38,529
the flags in your

700
00:35:34,720 --> 00:35:42,339
browser okay one thing that's really

701
00:35:38,530 --> 00:35:47,050
interesting about do H is how quickly do

702
00:35:42,339 --> 00:35:48,970
H went from a draft to ratified right in

703
00:35:47,050 --> 00:35:50,170
under I think what it was like under a

704
00:35:48,970 --> 00:35:54,910
year and a half or something like that

705
00:35:50,170 --> 00:35:56,890
so this is another sign that that this

706
00:35:54,910 --> 00:35:59,710
standards body and the people behind

707
00:35:56,890 --> 00:36:02,440
them are really serious about making

708
00:35:59,710 --> 00:36:05,530
sure that we're they're providing

709
00:36:02,440 --> 00:36:09,280
privacy for users they feel this

710
00:36:05,530 --> 00:36:11,890
responsibility to do so and so this was

711
00:36:09,280 --> 00:36:13,780
fast-tracked and there's no reason to

712
00:36:11,890 --> 00:36:15,549
think that it's gonna slow down right

713
00:36:13,780 --> 00:36:18,490
here are a couple of really recent

714
00:36:15,550 --> 00:36:21,310
articles with just from last month where

715
00:36:18,490 --> 00:36:23,200
we he see that chrome seventy eight

716
00:36:21,310 --> 00:36:24,880
there were playing a little bit catch up

717
00:36:23,200 --> 00:36:27,129
but they're they are catching up pretty

718
00:36:24,880 --> 00:36:31,119
fast with their implementation of do H

719
00:36:27,130 --> 00:36:34,300
and then Mozilla is already dead it

720
00:36:31,119 --> 00:36:37,359
committed to slowly rolling out do H by

721
00:36:34,300 --> 00:36:40,000
default so this was last month they said

722
00:36:37,359 --> 00:36:42,279
that but the default behavior is going

723
00:36:40,000 --> 00:36:44,530
to be do H enabled I don't know how

724
00:36:42,280 --> 00:36:48,010
they're choosing which which users to

725
00:36:44,530 --> 00:36:53,050
enable it for but the so they're testing

726
00:36:48,010 --> 00:36:54,369
is going live already right so again the

727
00:36:53,050 --> 00:36:56,770
regardless of whether or not what the

728
00:36:54,369 --> 00:37:02,319
default is you can obviously as a user

729
00:36:56,770 --> 00:37:04,420
enable that for yourself and so who

730
00:37:02,319 --> 00:37:06,000
thinks this scary or is it good or I

731
00:37:04,420 --> 00:37:08,890
mean what are what are your thoughts

732
00:37:06,000 --> 00:37:14,109
it's there's certainly reason to be

733
00:37:08,890 --> 00:37:19,328
concerned right well it's just kind of

734
00:37:14,109 --> 00:37:22,299
summary for a do H is that it's a great

735
00:37:19,329 --> 00:37:24,880
for an individual user it's you know if

736
00:37:22,300 --> 00:37:26,680
I'm just at a coffee shop or even at

737
00:37:24,880 --> 00:37:29,319
home maybe I don't know but it's really

738
00:37:26,680 --> 00:37:31,598
bad for enterprises and corporations and

739
00:37:29,319 --> 00:37:33,819
even if you're providing guest services

740
00:37:31,599 --> 00:37:35,650
for somebody in your network and you're

741
00:37:33,819 --> 00:37:38,589
liable for what what they do on your

742
00:37:35,650 --> 00:37:40,780
network right so it's it makes it really

743
00:37:38,589 --> 00:37:45,578
hard for you to provide a layer of

744
00:37:40,780 --> 00:37:47,350
filtering and security for them and and

745
00:37:45,579 --> 00:37:49,360
then the other thing is

746
00:37:47,350 --> 00:37:52,600
if you could choose to play this

747
00:37:49,360 --> 00:37:54,460
whack-a-mole game again known the o8

748
00:37:52,600 --> 00:37:57,730
servers services on the internet

749
00:37:54,460 --> 00:38:01,120
blocking them but it's it's futile

750
00:37:57,730 --> 00:38:04,690
because anybody can set up a doah proxy

751
00:38:01,120 --> 00:38:11,049
any IP address and you're you're not

752
00:38:04,690 --> 00:38:13,300
gonna win that battle so so what so what

753
00:38:11,050 --> 00:38:15,640
next right yeah this is just the list of

754
00:38:13,300 --> 00:38:19,000
publicly known do eight servers and this

755
00:38:15,640 --> 00:38:20,830
list is growing constantly one thing

756
00:38:19,000 --> 00:38:23,860
that's interesting I thought one of

757
00:38:20,830 --> 00:38:26,920
those articles it quoted a this Paul

758
00:38:23,860 --> 00:38:32,770
vixie who who is one of the founders of

759
00:38:26,920 --> 00:38:34,090
DNS and his eye what he said is I'm just

760
00:38:32,770 --> 00:38:39,100
going to read the last sentence here it

761
00:38:34,090 --> 00:38:41,440
says do T is a universal good do H will

762
00:38:39,100 --> 00:38:46,060
be a net harm no matter what good it

763
00:38:41,440 --> 00:38:50,490
made you so there's that there's that a

764
00:38:46,060 --> 00:38:53,770
whole you know um contention between the

765
00:38:50,490 --> 00:38:56,560
privacy advocates and security advocates

766
00:38:53,770 --> 00:38:58,990
and it's they're clashing and they're

767
00:38:56,560 --> 00:39:04,420
trying to figure out where the happy

768
00:38:58,990 --> 00:39:07,450
medium is and then there's there are a

769
00:39:04,420 --> 00:39:10,030
couple of RFC's you can go read talking

770
00:39:07,450 --> 00:39:15,549
about the risks and concerns of the OAH

771
00:39:10,030 --> 00:39:17,800
as well and one of those things dns was

772
00:39:15,550 --> 00:39:21,910
designed to be a highly distributed

773
00:39:17,800 --> 00:39:25,660
architecture right so dns failure and

774
00:39:21,910 --> 00:39:28,379
one network or one service wasn't gonna

775
00:39:25,660 --> 00:39:30,879
be a broadly impacting internet

776
00:39:28,380 --> 00:39:33,250
availability service availability stuff

777
00:39:30,880 --> 00:39:36,280
like that but what's happened over the

778
00:39:33,250 --> 00:39:39,360
last maybe eight years or ten years is

779
00:39:36,280 --> 00:39:45,460
there's there's been a consolidation of

780
00:39:39,360 --> 00:39:47,470
DNS services I am I think Diane DNS had

781
00:39:45,460 --> 00:39:49,210
a pretty big outage I think it was in

782
00:39:47,470 --> 00:39:51,069
the past year or something like that and

783
00:39:49,210 --> 00:39:54,820
it took down some pretty serious

784
00:39:51,070 --> 00:39:59,080
services because so many people were

785
00:39:54,820 --> 00:40:00,940
using that service and and so this draft

786
00:39:59,080 --> 00:40:05,190
talks a little bit about

787
00:40:00,940 --> 00:40:07,990
the concerns of consolidation of DNS -

788
00:40:05,190 --> 00:40:11,590
handful of service providers and also

789
00:40:07,990 --> 00:40:14,890
talks about the concern wait we're if we

790
00:40:11,590 --> 00:40:16,930
are protecting users privacy by making

791
00:40:14,890 --> 00:40:19,810
sure that what they're doing isn't

792
00:40:16,930 --> 00:40:22,330
visible all on the path is there not a

793
00:40:19,810 --> 00:40:23,980
concern that you're sending all that

794
00:40:22,330 --> 00:40:26,950
same information that you're trying to

795
00:40:23,980 --> 00:40:29,290
hide from intermediaries all to Google

796
00:40:26,950 --> 00:40:31,540
right and what is Google gonna do with

797
00:40:29,290 --> 00:40:36,670
that information they're certainly not

798
00:40:31,540 --> 00:40:38,170
gonna not take advantage of it and try

799
00:40:36,670 --> 00:40:40,840
to make more money off of it or make

800
00:40:38,170 --> 00:40:43,690
more money off of you - right so I'm not

801
00:40:40,840 --> 00:40:45,700
knocking Google I'm just saying that we

802
00:40:43,690 --> 00:40:49,330
have to be careful about where we're

803
00:40:45,700 --> 00:40:51,129
sending our data just because the ISPs

804
00:40:49,330 --> 00:40:56,830
not seeing it doesn't mean that it's in

805
00:40:51,130 --> 00:41:01,140
a safe place so and then so there's

806
00:40:56,830 --> 00:41:04,480
another I idea that hey maybe we can

807
00:41:01,140 --> 00:41:08,470
give enterprises more control by having

808
00:41:04,480 --> 00:41:11,110
doah be specified in a DHCP attribute so

809
00:41:08,470 --> 00:41:13,959
the client dynamically learns the do 8

810
00:41:11,110 --> 00:41:17,800
server to use met and then but the

811
00:41:13,960 --> 00:41:19,900
concern there is if you if you have DHCP

812
00:41:17,800 --> 00:41:23,470
be hijacked for some reason or somebody

813
00:41:19,900 --> 00:41:28,030
injects you know a response then they're

814
00:41:23,470 --> 00:41:30,910
using encrypted DNS - a service that you

815
00:41:28,030 --> 00:41:33,130
have no visibility to and you couldn't

816
00:41:30,910 --> 00:41:35,080
you can't protect that user anymore so

817
00:41:33,130 --> 00:41:39,220
there again people are trying to solve

818
00:41:35,080 --> 00:41:41,740
these problems for enterprises but it's

819
00:41:39,220 --> 00:41:45,310
there's a tangled mess there's a lot to

820
00:41:41,740 --> 00:41:49,750
concern to consider this is really good

821
00:41:45,310 --> 00:41:53,259
it's so the canary domain idea what what

822
00:41:49,750 --> 00:41:54,820
Firefox is doing is saying look even

823
00:41:53,260 --> 00:41:57,820
though we're enabling it by default

824
00:41:54,820 --> 00:42:01,240
we're giving enterprises an opportunity

825
00:41:57,820 --> 00:42:04,450
to disable it by if the network signals

826
00:42:01,240 --> 00:42:07,990
to the browser that we don't we're doing

827
00:42:04,450 --> 00:42:09,640
filtering so don't use do H so what that

828
00:42:07,990 --> 00:42:12,270
what they do that how they do that is

829
00:42:09,640 --> 00:42:14,279
they created this application - DNS

830
00:42:12,270 --> 00:42:17,820
dotnet

831
00:42:14,280 --> 00:42:19,980
host that it will it'll look up so that

832
00:42:17,820 --> 00:42:22,530
the browser will look up that the host

833
00:42:19,980 --> 00:42:26,130
and then depending on their response if

834
00:42:22,530 --> 00:42:32,720
you own the DNS server and it you

835
00:42:26,130 --> 00:42:36,119
respond with with a no error then then

836
00:42:32,720 --> 00:42:39,959
the that'll signal whether or not the

837
00:42:36,119 --> 00:42:41,760
client should should employ do H or

838
00:42:39,960 --> 00:42:44,369
should use its local DNS servers

839
00:42:41,760 --> 00:42:47,670
configured on the end OS stack so this

840
00:42:44,369 --> 00:42:50,700
is something that today everybody should

841
00:42:47,670 --> 00:42:52,980
be doing until they figure out how to

842
00:42:50,700 --> 00:42:54,689
solve this problem long term right and

843
00:42:52,980 --> 00:42:58,020
Firefox says this is just a temporary

844
00:42:54,690 --> 00:43:01,140
solution we're doing this until the

845
00:42:58,020 --> 00:43:02,759
industry agrees on how to address this

846
00:43:01,140 --> 00:43:06,020
problem but again they're giving you an

847
00:43:02,760 --> 00:43:11,340
opportunity to signal to their browser

848
00:43:06,020 --> 00:43:14,820
do or do not use do H but only if it

849
00:43:11,340 --> 00:43:17,369
doesn't have the you know manually

850
00:43:14,820 --> 00:43:21,570
enabled the flag right in their browser

851
00:43:17,369 --> 00:43:25,020
so if a user decides I want do H then

852
00:43:21,570 --> 00:43:26,580
this isn't gonna change you know keep

853
00:43:25,020 --> 00:43:29,790
them from doing it it's only the

854
00:43:26,580 --> 00:43:35,430
automatic enabled flag that that is

855
00:43:29,790 --> 00:43:37,080
affected by the canary domain okay so

856
00:43:35,430 --> 00:43:39,290
this parts a little bit fun I thought

857
00:43:37,080 --> 00:43:41,369
that I'd I'd add this in here because

858
00:43:39,290 --> 00:43:47,940
there's some pretty cool things you can

859
00:43:41,369 --> 00:43:50,730
do with DNS and CloudFlare lets you send

860
00:43:47,940 --> 00:43:53,780
an email right in this case i i send an

861
00:43:50,730 --> 00:43:57,750
e-mail to look up at resolver email and

862
00:43:53,780 --> 00:44:00,869
Utah house 52 com I put in I said a

863
00:43:57,750 --> 00:44:02,550
record Utah house 50 calm and within you

864
00:44:00,869 --> 00:44:06,030
know in about a minute I got an email

865
00:44:02,550 --> 00:44:10,130
back with an IP address so out-of-band

866
00:44:06,030 --> 00:44:14,400
resolution for that IP address another

867
00:44:10,130 --> 00:44:16,230
kind of a cool thing a couple of cool

868
00:44:14,400 --> 00:44:17,820
things is I know how many of you guys

869
00:44:16,230 --> 00:44:20,910
use telegram however know what telegram

870
00:44:17,820 --> 00:44:24,800
is it's a secure messaging platform and

871
00:44:20,910 --> 00:44:27,810
you can add a friend in telegram and

872
00:44:24,800 --> 00:44:30,660
that's the quad one resolver and you

873
00:44:27,810 --> 00:44:32,609
send it a message and it'll respond back

874
00:44:30,660 --> 00:44:34,589
to you and similarly you can use text

875
00:44:32,609 --> 00:44:37,730
message if you wanted right I sent it I

876
00:44:34,589 --> 00:44:42,810
sent a text message and I get back the

877
00:44:37,730 --> 00:44:46,520
resolution for that domain so it's it's

878
00:44:42,810 --> 00:44:51,210
pretty cool B I was like let me show you

879
00:44:46,520 --> 00:44:53,540
just a little quick demo hopefully this

880
00:44:51,210 --> 00:44:53,540
works

881
00:45:12,440 --> 00:45:17,569
that's because it's hard for me to see I

882
00:45:14,520 --> 00:45:17,569
need a mirror my screen

883
00:45:28,809 --> 00:45:36,259
okay so so there are Python libraries

884
00:45:32,779 --> 00:45:41,119
out there and application so this was

885
00:45:36,259 --> 00:45:45,950
Facebook as a as an open-source Python

886
00:45:41,119 --> 00:45:53,660
library for do h and so I I downloaded

887
00:45:45,950 --> 00:45:58,578
that I installed it and and and so I it

888
00:45:53,660 --> 00:46:01,399
was easy to do and so if I do this

889
00:45:58,579 --> 00:46:09,950
resolution here I think for gambling

890
00:46:01,400 --> 00:46:12,259
comm right where's my there yeah so this

891
00:46:09,950 --> 00:46:14,450
is real time right so I get an IP

892
00:46:12,259 --> 00:46:18,650
address I really think I'm just a minute

893
00:46:14,450 --> 00:46:20,660
let me let me go ahead and mirror my

894
00:46:18,650 --> 00:46:22,069
screen so I can see it because that

895
00:46:20,660 --> 00:46:24,759
little screen up there is not good

896
00:46:22,069 --> 00:46:24,759
enough for me

897
00:46:30,950 --> 00:46:36,500
all right there we go all right that's

898
00:46:33,650 --> 00:46:40,220
better so we can see here I ran this

899
00:46:36,500 --> 00:46:42,170
just for two things first of all I put

900
00:46:40,220 --> 00:46:44,118
in the time command in front of it so if

901
00:46:42,170 --> 00:46:46,430
you this is a in case you're wondering

902
00:46:44,119 --> 00:46:49,369
you can type any command you run from a

903
00:46:46,430 --> 00:46:51,140
CLI so you can see how long it takes and

904
00:46:49,369 --> 00:46:54,440
that's what this down here is it tells

905
00:46:51,140 --> 00:46:56,808
me that it took you know sub-second to

906
00:46:54,440 --> 00:47:00,950
do this resolution for gambling comm

907
00:46:56,809 --> 00:47:03,730
using the doah client and that went

908
00:47:00,950 --> 00:47:05,899
against CloudFlare one zero zero one D

909
00:47:03,730 --> 00:47:06,619
but what's interesting is so on my

910
00:47:05,900 --> 00:47:11,660
client

911
00:47:06,619 --> 00:47:15,650
I have Cisco's anyconnect running and

912
00:47:11,660 --> 00:47:17,450
and what it's doing is it's protecting

913
00:47:15,650 --> 00:47:20,410
it's doing roaming security and it's

914
00:47:17,450 --> 00:47:23,450
protecting my DNS lookups so we're gonna

915
00:47:20,410 --> 00:47:33,618
but we can see here we got gambling comm

916
00:47:23,450 --> 00:47:36,740
this IP address but if I did time so if

917
00:47:33,619 --> 00:47:40,190
I did this natively on the client

918
00:47:36,740 --> 00:47:44,118
without using do H I get this IP address

919
00:47:40,190 --> 00:47:45,160
and if I do a dig minus X for that IP

920
00:47:44,119 --> 00:47:49,880
address

921
00:47:45,160 --> 00:47:52,250
okay so umbrella would have blocked that

922
00:47:49,880 --> 00:47:56,170
request right so it resolved actually to

923
00:47:52,250 --> 00:48:00,230
a block page using the native stack but

924
00:47:56,170 --> 00:48:05,900
using the do H client it resolved to you

925
00:48:00,230 --> 00:48:09,650
the real gambling comm address so just

926
00:48:05,900 --> 00:48:15,410
the just an example here of how you know

927
00:48:09,650 --> 00:48:20,020
how that works and so I'm going to go

928
00:48:15,410 --> 00:48:20,020
back to you the presentation

929
00:48:21,849 --> 00:48:30,170
all right so all right what what can we

930
00:48:27,259 --> 00:48:31,670
do about this stuff all right the first

931
00:48:30,170 --> 00:48:35,119
thing you can do is we can decide hey

932
00:48:31,670 --> 00:48:38,690
maybe I will just abandon DNS based

933
00:48:35,119 --> 00:48:40,400
security and we can trust or rely on our

934
00:48:38,690 --> 00:48:41,059
firewalls to do application layer

935
00:48:40,400 --> 00:48:44,359
firewalls

936
00:48:41,059 --> 00:48:47,289
server name indicator leveraging a field

937
00:48:44,359 --> 00:48:51,348
in the TLS requests that's in clear text

938
00:48:47,289 --> 00:48:54,319
to be able to determine what site that

939
00:48:51,349 --> 00:48:58,460
the user is going to and the other thing

940
00:48:54,319 --> 00:49:00,200
we can do with TLS 1.2 and below is we

941
00:48:58,460 --> 00:49:02,480
can actually spy on the certificate

942
00:49:00,200 --> 00:49:05,660
exchange where when they're negotiating

943
00:49:02,480 --> 00:49:08,240
the encrypted channel in TLS 1.2 and

944
00:49:05,660 --> 00:49:10,549
below you can see the certificate that

945
00:49:08,240 --> 00:49:15,919
comes down from the server and you can

946
00:49:10,549 --> 00:49:19,869
act based on that information but there

947
00:49:15,920 --> 00:49:22,160
are a couple of problems with TLS 1.3

948
00:49:19,869 --> 00:49:24,920
first of all that certificate exchange

949
00:49:22,160 --> 00:49:26,598
is moved from the clear text portion of

950
00:49:24,920 --> 00:49:28,279
the communication into the encrypted

951
00:49:26,599 --> 00:49:32,900
portion so they do a diffie-hellman

952
00:49:28,279 --> 00:49:35,630
exchange initially and so they have they

953
00:49:32,900 --> 00:49:36,680
have encryption keys that they use that

954
00:49:35,630 --> 00:49:39,200
they generate with that through that

955
00:49:36,680 --> 00:49:42,730
exchange in order to then encrypt the

956
00:49:39,200 --> 00:49:45,410
actual security certificate exchange and

957
00:49:42,730 --> 00:49:49,849
the other thing that's happened with TLS

958
00:49:45,410 --> 00:49:52,249
1.3 it wasn't in their original standard

959
00:49:49,849 --> 00:49:55,249
but since then there's been an extension

960
00:49:52,249 --> 00:49:59,149
that is still draft but it's coming

961
00:49:55,249 --> 00:50:02,058
where they're going to encrypt the SNI

962
00:49:59,150 --> 00:50:06,109
the server name indicator and so you

963
00:50:02,059 --> 00:50:06,619
might think well we're we're dead right

964
00:50:06,109 --> 00:50:09,650
there ánoá

965
00:50:06,619 --> 00:50:12,619
there's no way to solve this problem but

966
00:50:09,650 --> 00:50:15,109
I don't think it's quite that bad and

967
00:50:12,619 --> 00:50:19,660
I'll tell you explain to you why all

968
00:50:15,109 --> 00:50:23,749
right so sni encryption is dependent on

969
00:50:19,660 --> 00:50:25,578
DNS SEC being implemented because the

970
00:50:23,749 --> 00:50:30,410
way SMI encryption is supposed to work

971
00:50:25,579 --> 00:50:34,160
is that the there's still there's still

972
00:50:30,410 --> 00:50:34,759
an SN I in the TLS 103 header but it's

973
00:50:34,160 --> 00:50:38,930
encrypted

974
00:50:34,760 --> 00:50:43,430
and the way what what's supposed to

975
00:50:38,930 --> 00:50:46,060
happen is the client does a DNS request

976
00:50:43,430 --> 00:50:49,460
and gets the public key of the server

977
00:50:46,060 --> 00:50:51,650
that it's trying to communicate with

978
00:50:49,460 --> 00:50:53,900
over a secure Channel and then it

979
00:50:51,650 --> 00:50:56,560
encrypts the sni using that public key

980
00:50:53,900 --> 00:51:00,010
and so then the server would have to

981
00:50:56,560 --> 00:51:03,110
decrypt the SNI in order to determine

982
00:51:00,010 --> 00:51:05,720
whether or not you know what what domain

983
00:51:03,110 --> 00:51:09,170
what URL the user the user is actually

984
00:51:05,720 --> 00:51:11,660
trying to get to you but the again

985
00:51:09,170 --> 00:51:15,650
remember what I said earlier DNS SEC is

986
00:51:11,660 --> 00:51:19,399
not very broadly deployed I I think that

987
00:51:15,650 --> 00:51:23,750
there are years of runway still between

988
00:51:19,400 --> 00:51:26,750
now and when DNS SEC is deployed ASN

989
00:51:23,750 --> 00:51:30,800
encrypted sni is not ratified as a

990
00:51:26,750 --> 00:51:32,990
standard yet and so there are there are

991
00:51:30,800 --> 00:51:35,560
lots of hurdles to get from here to

992
00:51:32,990 --> 00:51:39,319
there but as important to know about

993
00:51:35,560 --> 00:51:41,360
that it's coming right so we we can plan

994
00:51:39,320 --> 00:51:45,470
for it before it comes the other thing

995
00:51:41,360 --> 00:51:47,270
is that there are a lot of people you go

996
00:51:45,470 --> 00:51:49,490
read around online and they say well you

997
00:51:47,270 --> 00:51:52,460
can't you can't do man-in-the-middle in

998
00:51:49,490 --> 00:51:56,299
TLS 1.3 well that's not true

999
00:51:52,460 --> 00:51:58,820
TLS 1.3 can be man in the middle just

1000
00:51:56,300 --> 00:52:03,980
like TLS 1.2 could have right if you do

1001
00:51:58,820 --> 00:52:06,500
if the client it's a you know if they

1002
00:52:03,980 --> 00:52:08,360
get the untrusted message if they say

1003
00:52:06,500 --> 00:52:09,830
ignore or move on then you command in

1004
00:52:08,360 --> 00:52:12,740
the middle of them or if it's an

1005
00:52:09,830 --> 00:52:15,350
enterprise or corporate device and your

1006
00:52:12,740 --> 00:52:17,089
certificate your trust you know you

1007
00:52:15,350 --> 00:52:19,970
trust that certificate is on that device

1008
00:52:17,090 --> 00:52:23,660
as so you can man the middle that again

1009
00:52:19,970 --> 00:52:26,029
the same way you could today but with es

1010
00:52:23,660 --> 00:52:29,450
ni that will get a little bit trickier

1011
00:52:26,030 --> 00:52:34,880
with encrypted sni so that's that's

1012
00:52:29,450 --> 00:52:37,960
where we'll see you know we'll see what

1013
00:52:34,880 --> 00:52:45,920
happens as we get closer to that right

1014
00:52:37,960 --> 00:52:48,260
so conclusion here is that DNS is one of

1015
00:52:45,920 --> 00:52:51,500
the core protocols right it

1016
00:52:48,260 --> 00:52:53,390
it it's not going away it's just how

1017
00:52:51,500 --> 00:52:58,010
it's going to be used is going to be

1018
00:52:53,390 --> 00:53:00,170
modified but I don't think that that we

1019
00:52:58,010 --> 00:53:02,060
should abandon DNS based security

1020
00:53:00,170 --> 00:53:05,890
because it provides a layer of security

1021
00:53:02,060 --> 00:53:08,509
that first of all will protect

1022
00:53:05,890 --> 00:53:11,900
applications outside of just web traffic

1023
00:53:08,510 --> 00:53:13,460
right it's not and also with DNS we

1024
00:53:11,900 --> 00:53:15,770
shouldn't abandon it because layered

1025
00:53:13,460 --> 00:53:19,010
security is still the right thing to do

1026
00:53:15,770 --> 00:53:21,829
and maybe we're we're not going to get a

1027
00:53:19,010 --> 00:53:24,500
hundred percent of the users traffic

1028
00:53:21,829 --> 00:53:26,750
using DNS based security but if we

1029
00:53:24,500 --> 00:53:30,320
abandon it then we're we're given the

1030
00:53:26,750 --> 00:53:34,609
bad guys another another avenue to do

1031
00:53:30,320 --> 00:53:38,359
whatever they want to do so but again it

1032
00:53:34,609 --> 00:53:40,430
is gonna be fully encrypted but if that

1033
00:53:38,359 --> 00:53:43,069
full encryption is to your server or

1034
00:53:40,430 --> 00:53:44,930
your service provider or where you have

1035
00:53:43,070 --> 00:53:47,630
control over then so what it's not

1036
00:53:44,930 --> 00:53:50,210
that's not a bad thing it's providing to

1037
00:53:47,630 --> 00:53:52,910
keep privacy but it's still allowing you

1038
00:53:50,210 --> 00:53:58,490
to have control as as an organization

1039
00:53:52,910 --> 00:53:59,960
and so I think that that's all I have

1040
00:53:58,490 --> 00:54:02,629
I appreciate it I hope this was

1041
00:53:59,960 --> 00:54:04,339
informative for you guys and if you have

1042
00:54:02,630 --> 00:54:06,020
any questions you know you come up to me

1043
00:54:04,339 --> 00:54:07,290
and ask me afterwards but thank you very

1044
00:54:06,020 --> 00:54:12,530
much appreciate

1045
00:54:07,290 --> 00:54:12,529
[Applause]

