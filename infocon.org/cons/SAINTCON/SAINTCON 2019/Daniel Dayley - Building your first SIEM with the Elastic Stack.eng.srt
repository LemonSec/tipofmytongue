1
00:00:00,030 --> 00:00:06,029
there you go all right hello everyone

2
00:00:03,389 --> 00:00:08,280
welcome to our 11 o'clock presentation

3
00:00:06,029 --> 00:00:10,920
this is building your first sim with the

4
00:00:08,280 --> 00:00:15,149
elastic stack my name is daniel daly aka

5
00:00:10,920 --> 00:00:16,980
Chronos I'd and just to make sure you're

6
00:00:15,150 --> 00:00:19,529
kind of in the right presentation here

7
00:00:16,980 --> 00:00:22,410
where this presentation I was kind of

8
00:00:19,529 --> 00:00:24,900
gearing towards a kind of an entry level

9
00:00:22,410 --> 00:00:27,029
dive into what a sim is kind of an

10
00:00:24,900 --> 00:00:30,538
overview of the architecture we will go

11
00:00:27,029 --> 00:00:33,690
ahead and do a setup demo where we'll

12
00:00:30,539 --> 00:00:36,210
get one running and do a quick detection

13
00:00:33,690 --> 00:00:38,190
and alert if we get enough time we'll

14
00:00:36,210 --> 00:00:40,260
take a look at some visualizations but

15
00:00:38,190 --> 00:00:42,269
there's a lot of really cool technology

16
00:00:40,260 --> 00:00:44,250
in the sim space right now and not gonna

17
00:00:42,270 --> 00:00:46,230
dive deep into a lot of it I'll make

18
00:00:44,250 --> 00:00:48,059
references to some stuff for you to go

19
00:00:46,230 --> 00:00:50,550
look up later but this is really more

20
00:00:48,059 --> 00:00:54,089
about getting you introduced to what a

21
00:00:50,550 --> 00:00:57,030
sim is and kind of get you going or

22
00:00:54,090 --> 00:00:59,789
introduced to the elastic stack and how

23
00:00:57,030 --> 00:01:02,219
to get it in integrated into your sim

24
00:00:59,789 --> 00:01:06,119
and how to kind of use it to build a sim

25
00:01:02,219 --> 00:01:08,460
off of kind of an overview we'll talk

26
00:01:06,119 --> 00:01:10,080
about what a sim is we'll go over kind

27
00:01:08,460 --> 00:01:13,020
of some considerations when you're

28
00:01:10,080 --> 00:01:14,310
designing your sim we'll do an overview

29
00:01:13,020 --> 00:01:16,679
of the software that we're going to use

30
00:01:14,310 --> 00:01:19,080
in this demo to design and build it

31
00:01:16,680 --> 00:01:21,060
we'll get a dashboard going kind of go

32
00:01:19,080 --> 00:01:22,770
through that process we'll get some

33
00:01:21,060 --> 00:01:24,570
alerts generated through a last alert

34
00:01:22,770 --> 00:01:25,950
and then I'll talk about some things

35
00:01:24,570 --> 00:01:28,258
that you can do to kind of expand your

36
00:01:25,950 --> 00:01:31,380
sim and improve the threat detection

37
00:01:28,259 --> 00:01:33,540
capabilities of it so we'll start out

38
00:01:31,380 --> 00:01:36,539
what is a sim when people talk about sim

39
00:01:33,540 --> 00:01:38,100
it's actually a security information and

40
00:01:36,540 --> 00:01:40,820
event manager it's kind of a combination

41
00:01:38,100 --> 00:01:43,048
of two technologies that have kind of

42
00:01:40,820 --> 00:01:45,898
existed in some form or another in the

43
00:01:43,049 --> 00:01:47,970
past an event manager and an information

44
00:01:45,899 --> 00:01:49,680
manager both geared towards security

45
00:01:47,970 --> 00:01:52,320
events and threat analysis Incident

46
00:01:49,680 --> 00:01:54,780
Response basically what it is is it's

47
00:01:52,320 --> 00:01:57,719
gonna be a place that you can go as a

48
00:01:54,780 --> 00:02:00,060
security engineer to get visibility into

49
00:01:57,719 --> 00:02:03,449
your environment to be able to analyze

50
00:02:00,060 --> 00:02:05,159
threats handle incidents and just get a

51
00:02:03,450 --> 00:02:07,710
good view of what's going on in your

52
00:02:05,159 --> 00:02:09,340
network there's I think a lot of

53
00:02:07,710 --> 00:02:11,680
misconceptions is in

54
00:02:09,340 --> 00:02:14,610
the sim space is the market has kind of

55
00:02:11,680 --> 00:02:16,870
developed as to what a sim does not do

56
00:02:14,610 --> 00:02:18,400
the the first two number one thing is

57
00:02:16,870 --> 00:02:21,569
that a sim is not a replacement for good

58
00:02:18,400 --> 00:02:26,950
security controls good firewall rules

59
00:02:21,569 --> 00:02:29,019
ACLs your traditional network security

60
00:02:26,950 --> 00:02:30,700
techniques your sim is not going to

61
00:02:29,020 --> 00:02:33,520
replace those you still need those the

62
00:02:30,700 --> 00:02:35,019
sim basically gives you visibility into

63
00:02:33,520 --> 00:02:37,209
those but doesn't do the work for you

64
00:02:35,020 --> 00:02:39,220
and one thing that I hear a lot a

65
00:02:37,209 --> 00:02:40,989
misconception is that sim is just

66
00:02:39,220 --> 00:02:44,140
central logging just a place to collect

67
00:02:40,989 --> 00:02:47,890
all of your logs central logging is good

68
00:02:44,140 --> 00:02:49,630
and for a lot of companies that use it

69
00:02:47,890 --> 00:02:53,049
for marketing or research purposes or

70
00:02:49,630 --> 00:02:56,230
for customer database research it's

71
00:02:53,050 --> 00:02:58,420
great for that but a sim is takes the

72
00:02:56,230 --> 00:03:01,090
logging a step further to give you

73
00:02:58,420 --> 00:03:02,859
alerts and dashboards and things that

74
00:03:01,090 --> 00:03:05,080
are really tailored to you as a security

75
00:03:02,860 --> 00:03:08,290
professional to help you you know keep

76
00:03:05,080 --> 00:03:09,970
the bad guys out so if you if you have

77
00:03:08,290 --> 00:03:11,440
central logging you can actually expand

78
00:03:09,970 --> 00:03:13,989
that into a sim by adding that

79
00:03:11,440 --> 00:03:15,400
functionality so and then the number one

80
00:03:13,989 --> 00:03:17,440
thing that I think a lot of people have

81
00:03:15,400 --> 00:03:20,320
misconceptions with is in in a sim

82
00:03:17,440 --> 00:03:21,940
especially with a lot of the the vendor

83
00:03:20,320 --> 00:03:24,640
claims these days in the sim space is

84
00:03:21,940 --> 00:03:26,350
that a sim does not just understand your

85
00:03:24,640 --> 00:03:28,359
threats and vulnerabilities for you out

86
00:03:26,350 --> 00:03:31,120
of the box you still need to understand

87
00:03:28,360 --> 00:03:32,620
at some level as a security engineer the

88
00:03:31,120 --> 00:03:35,290
sort of threats and vulnerabilities that

89
00:03:32,620 --> 00:03:38,049
you are trying to defend against your

90
00:03:35,290 --> 00:03:39,310
sim can only help you as far as you know

91
00:03:38,049 --> 00:03:41,350
what you're looking for and you know

92
00:03:39,310 --> 00:03:42,850
what you're trying to stop it's

93
00:03:41,350 --> 00:03:44,170
basically just that tool to give you the

94
00:03:42,850 --> 00:03:48,060
visibility that you need to be able to

95
00:03:44,170 --> 00:03:51,130
make those intelligent decisions so

96
00:03:48,060 --> 00:03:52,780
there's a lot of terminology in the sim

97
00:03:51,130 --> 00:03:54,820
space and a lot of it means sort of the

98
00:03:52,780 --> 00:03:56,290
same thing from vendor to vendor there's

99
00:03:54,820 --> 00:03:58,030
slight variations in sort of the

100
00:03:56,290 --> 00:04:00,459
definitions of what things are and what

101
00:03:58,030 --> 00:04:03,820
things do but generally you have

102
00:04:00,459 --> 00:04:06,940
forwarders agents sensors basically

103
00:04:03,820 --> 00:04:09,299
endpoints that generate log events and

104
00:04:06,940 --> 00:04:12,190
these can generate raw logs or

105
00:04:09,299 --> 00:04:13,600
pre-processed logs things that is going

106
00:04:12,190 --> 00:04:16,478
to are going to give you information

107
00:04:13,600 --> 00:04:18,548
into your environment you have

108
00:04:16,478 --> 00:04:20,858
enrichment normalization and parsing

109
00:04:18,548 --> 00:04:23,169
basically the process of taking a raw

110
00:04:20,858 --> 00:04:26,650
log event and making it use of

111
00:04:23,169 --> 00:04:28,289
to the salmon to you as a human user and

112
00:04:26,650 --> 00:04:31,030
we'll talk a little bit more about that

113
00:04:28,290 --> 00:04:33,039
collectors in jester's aggregators are

114
00:04:31,030 --> 00:04:34,989
kind of used liberally across the sim

115
00:04:33,039 --> 00:04:37,180
space as to what they do and where

116
00:04:34,990 --> 00:04:39,130
they're placed they're basically

117
00:04:37,180 --> 00:04:42,009
endpoints that can collect logs either

118
00:04:39,130 --> 00:04:44,770
raw logs or enriched logs and store them

119
00:04:42,009 --> 00:04:48,550
either for enrichment or for long-term

120
00:04:44,770 --> 00:04:50,680
storage and searching so if that's all

121
00:04:48,550 --> 00:04:52,300
kind of the same thing and then your

122
00:04:50,680 --> 00:04:54,310
indexers or storage nodes and search

123
00:04:52,300 --> 00:04:56,680
nodes are basically the places where

124
00:04:54,310 --> 00:04:59,650
your long-term logs are going to be

125
00:04:56,680 --> 00:05:01,240
stored your long-term events and one

126
00:04:59,650 --> 00:05:02,830
that I didn't put on here is kind of the

127
00:05:01,240 --> 00:05:05,740
difference between a login an event an

128
00:05:02,830 --> 00:05:09,159
event generally refers to an enriched

129
00:05:05,740 --> 00:05:11,979
log that has the data that you need to

130
00:05:09,160 --> 00:05:14,710
make your sim work a log generally

131
00:05:11,979 --> 00:05:16,780
refers to the unformatted you know raw

132
00:05:14,710 --> 00:05:18,370
mineral sort of data that you get out of

133
00:05:16,780 --> 00:05:23,109
something like syslog or Windows Event

134
00:05:18,370 --> 00:05:24,910
Manager so there are a ton of really

135
00:05:23,110 --> 00:05:28,389
great products in the sim space each

136
00:05:24,910 --> 00:05:30,520
with their own excellent features and

137
00:05:28,389 --> 00:05:32,590
different topographies great use cases

138
00:05:30,520 --> 00:05:34,030
they all kind of flex a little bit on

139
00:05:32,590 --> 00:05:36,698
some of the things they're good at and

140
00:05:34,030 --> 00:05:38,380
some of their pain points here are some

141
00:05:36,699 --> 00:05:42,280
of the examples here we've got logarithm

142
00:05:38,380 --> 00:05:44,080
alienvault SolarWinds sem are some great

143
00:05:42,280 --> 00:05:46,119
ones an interesting thing that I put up

144
00:05:44,080 --> 00:05:47,320
here we've got Splunk and elastic search

145
00:05:46,120 --> 00:05:49,240
up here which I think are some of the

146
00:05:47,320 --> 00:05:53,110
more popular ones but those services by

147
00:05:49,240 --> 00:05:55,630
themselves are not simpler

148
00:05:53,110 --> 00:05:58,449
mass data products or structured data

149
00:05:55,630 --> 00:06:00,159
search products and the way that you use

150
00:05:58,449 --> 00:06:01,840
them as a sim is really just the way

151
00:06:00,159 --> 00:06:03,789
that you implement your enrichment and

152
00:06:01,840 --> 00:06:05,260
your threat detection and so that's what

153
00:06:03,789 --> 00:06:06,789
we'll be doing today with elastic

154
00:06:05,260 --> 00:06:08,680
searches will set up the elastic search

155
00:06:06,789 --> 00:06:10,479
cluster or well it's just a single

156
00:06:08,680 --> 00:06:12,250
instance and then we'll go ahead and

157
00:06:10,479 --> 00:06:14,229
implement some threat detection examples

158
00:06:12,250 --> 00:06:16,300
here so that I can kind of explain how

159
00:06:14,229 --> 00:06:19,000
you would use an existing log

160
00:06:16,300 --> 00:06:20,050
infrastructure to build a sim or even if

161
00:06:19,000 --> 00:06:23,289
you're starting from the ground up how

162
00:06:20,050 --> 00:06:24,789
you could build that on the cheap so

163
00:06:23,289 --> 00:06:26,440
what what we're talking about when we

164
00:06:24,789 --> 00:06:27,820
talk about the elastic stack it used to

165
00:06:26,440 --> 00:06:30,550
be called the elk stack you might have

166
00:06:27,820 --> 00:06:32,320
heard it referred to as that is the

167
00:06:30,550 --> 00:06:34,840
suite of software produced by elastic

168
00:06:32,320 --> 00:06:36,130
for managing

169
00:06:34,840 --> 00:06:38,138
massive amounts of structured data

170
00:06:36,130 --> 00:06:39,730
you've got beats which are generally

171
00:06:38,139 --> 00:06:41,980
those agents they'll go on your

172
00:06:39,730 --> 00:06:43,900
endpoints to forward vlogs from windows

173
00:06:41,980 --> 00:06:46,780
or from Linux to tell you what's going

174
00:06:43,900 --> 00:06:48,549
on in and you can configure beats pretty

175
00:06:46,780 --> 00:06:50,799
extensively to get whatever sort of

176
00:06:48,550 --> 00:06:53,050
information you need off the host

177
00:06:50,800 --> 00:06:55,320
you've got great options and windows for

178
00:06:53,050 --> 00:06:58,000
event logging and Linux has a great

179
00:06:55,320 --> 00:07:02,080
audit D tool that will give you a ton of

180
00:06:58,000 --> 00:07:03,699
great logs here log stash is an

181
00:07:02,080 --> 00:07:05,770
excellent excellent tool that I

182
00:07:03,699 --> 00:07:08,580
recommend in almost any sim space for

183
00:07:05,770 --> 00:07:11,049
enrichment because it has very

184
00:07:08,580 --> 00:07:12,370
extensible capabilities it's it has its

185
00:07:11,050 --> 00:07:13,780
own programming language essentially

186
00:07:12,370 --> 00:07:16,210
that lets you write your own detections

187
00:07:13,780 --> 00:07:18,190
for the events that are going through it

188
00:07:16,210 --> 00:07:20,109
whether they come from a network sensor

189
00:07:18,190 --> 00:07:21,910
or from an agent wherever you're getting

190
00:07:20,110 --> 00:07:25,090
these logs from Wallach stash can make

191
00:07:21,910 --> 00:07:26,200
them better elasticsearch is really that

192
00:07:25,090 --> 00:07:28,599
kind of the core of it that's your

193
00:07:26,200 --> 00:07:30,430
database or your where all the data is

194
00:07:28,600 --> 00:07:33,130
going to be stored your storage node

195
00:07:30,430 --> 00:07:34,270
there and then Cabana is really just

196
00:07:33,130 --> 00:07:37,000
your UI for that

197
00:07:34,270 --> 00:07:41,830
it's your interface into elasticsearch

198
00:07:37,000 --> 00:07:44,500
and so there's also a lot of great tools

199
00:07:41,830 --> 00:07:46,599
that you can add to this stack to enrich

200
00:07:44,500 --> 00:07:48,700
your sim and give it more Sims Pacific

201
00:07:46,600 --> 00:07:51,099
capabilities to that I'm gonna talk

202
00:07:48,700 --> 00:07:53,169
about today our Zeke formerly bro the

203
00:07:51,099 --> 00:07:54,610
network security monitor and a last

204
00:07:53,169 --> 00:07:56,549
alert which is actually developed by

205
00:07:54,610 --> 00:07:59,470
Yelp as part of their security

206
00:07:56,550 --> 00:08:02,919
infrastructure to do automatic alerting

207
00:07:59,470 --> 00:08:04,389
out of elasticsearch and give you any

208
00:08:02,919 --> 00:08:07,900
sort of alert you want whether it's

209
00:08:04,389 --> 00:08:10,539
email JIRA tickets or slack messages

210
00:08:07,900 --> 00:08:15,520
elastic or last Laura can do pretty much

211
00:08:10,539 --> 00:08:16,900
anything you need it to so the with the

212
00:08:15,520 --> 00:08:18,639
architecture that I'm about to kind of

213
00:08:16,900 --> 00:08:20,440
demonstrate there are some advantages

214
00:08:18,639 --> 00:08:22,360
and there are some disadvantages that I

215
00:08:20,440 --> 00:08:24,039
think you ought to be aware of when

216
00:08:22,360 --> 00:08:26,320
you're thinking about designing your sim

217
00:08:24,039 --> 00:08:27,909
the obvious advantages with using

218
00:08:26,320 --> 00:08:29,740
something like elasticsearch is that

219
00:08:27,910 --> 00:08:32,169
it's free and open source it scales

220
00:08:29,740 --> 00:08:34,120
really well either your weather your

221
00:08:32,169 --> 00:08:36,939
container izing it whether you just want

222
00:08:34,120 --> 00:08:38,640
to stick it on a big host it scales

223
00:08:36,940 --> 00:08:41,860
really well however you want to scale it

224
00:08:38,640 --> 00:08:43,598
and as I'll talk about here in a second

225
00:08:41,860 --> 00:08:44,920
it actually is the backend for a lot of

226
00:08:43,599 --> 00:08:47,320
open source sim projects that you've

227
00:08:44,920 --> 00:08:47,860
probably heard of as well so if you get

228
00:08:47,320 --> 00:08:49,930
familiar

229
00:08:47,860 --> 00:08:51,880
with this model of Sim you're probably

230
00:08:49,930 --> 00:08:53,979
gonna be pretty conversant and some of

231
00:08:51,880 --> 00:08:56,709
these sim technologies that you may have

232
00:08:53,980 --> 00:08:57,940
already heard about and a lot of these

233
00:08:56,709 --> 00:08:59,920
things like I was talking about logstash

234
00:08:57,940 --> 00:09:02,220
and beets they're actually compatible

235
00:08:59,920 --> 00:09:05,529
with most of the proprietary components

236
00:09:02,220 --> 00:09:07,510
things like elasticsearch can receive

237
00:09:05,529 --> 00:09:09,700
logs from other proprietary forwarders

238
00:09:07,510 --> 00:09:11,019
so if you have for example an anti-virus

239
00:09:09,700 --> 00:09:13,329
that you've distributed across your

240
00:09:11,019 --> 00:09:15,880
environment and it's dumping you know

241
00:09:13,329 --> 00:09:18,339
antivirus logs you can still pick those

242
00:09:15,880 --> 00:09:19,329
up and put those into your elasticsearch

243
00:09:18,339 --> 00:09:23,440
environment even though there's

244
00:09:19,329 --> 00:09:25,959
proprietary logs and it's easy to kind

245
00:09:23,440 --> 00:09:28,480
of build out and expand one of the major

246
00:09:25,959 --> 00:09:29,380
disadvantages to elasticsearch is the

247
00:09:28,480 --> 00:09:30,399
amount of legwork

248
00:09:29,380 --> 00:09:32,529
that's required to get everything

249
00:09:30,399 --> 00:09:34,180
running it takes a little bit of time

250
00:09:32,529 --> 00:09:35,829
and understanding to really get what's

251
00:09:34,180 --> 00:09:38,140
going on there's a lot of moving pieces

252
00:09:35,829 --> 00:09:40,540
as I've kind of talked about already it

253
00:09:38,140 --> 00:09:42,670
is very in my opinion it's difficult to

254
00:09:40,540 --> 00:09:46,420
update like you can have a major issue

255
00:09:42,670 --> 00:09:48,339
if you do not update it correctly and if

256
00:09:46,420 --> 00:09:50,860
enterprise support is going to be an

257
00:09:48,339 --> 00:09:52,209
issue in your environment then open

258
00:09:50,860 --> 00:09:56,019
source software you're always going to

259
00:09:52,209 --> 00:09:57,910
run into some trouble with that and the

260
00:09:56,019 --> 00:09:59,110
probably the biggest disadvantage to

261
00:09:57,910 --> 00:10:01,439
this is that your threat detection

262
00:09:59,110 --> 00:10:04,300
definitions are going to be all handmade

263
00:10:01,440 --> 00:10:05,320
this is where a proprietary solution is

264
00:10:04,300 --> 00:10:07,599
really going to shine because it will

265
00:10:05,320 --> 00:10:09,160
give you threat definitions and they'll

266
00:10:07,600 --> 00:10:10,810
sell you on those threat definitions and

267
00:10:09,160 --> 00:10:14,410
they'll be great you know threat

268
00:10:10,810 --> 00:10:16,420
detection ability there but it's like I

269
00:10:14,410 --> 00:10:18,219
kind of said earlier it's kind of our

270
00:10:16,420 --> 00:10:19,449
job as security engineers to know what

271
00:10:18,220 --> 00:10:20,589
kind of threats were up against and to

272
00:10:19,449 --> 00:10:22,479
know what vulnerabilities were up

273
00:10:20,589 --> 00:10:24,579
against and to do our best to kind of

274
00:10:22,480 --> 00:10:26,050
identify those and to build that sort of

275
00:10:24,579 --> 00:10:27,939
detection into our environment because

276
00:10:26,050 --> 00:10:29,859
what you're detecting at your

277
00:10:27,940 --> 00:10:32,860
organization is going to be different

278
00:10:29,860 --> 00:10:33,970
than what someone else is vulnerable to

279
00:10:32,860 --> 00:10:35,890
or the type of threat that another

280
00:10:33,970 --> 00:10:38,860
organization may have so you do still

281
00:10:35,890 --> 00:10:41,290
need to understand that these are three

282
00:10:38,860 --> 00:10:43,810
great projects that I recommend that are

283
00:10:41,290 --> 00:10:46,569
all elastic based Sims the first one

284
00:10:43,810 --> 00:10:48,010
Malcolm is actually started out at the

285
00:10:46,570 --> 00:10:49,779
Idaho National Lab which just released

286
00:10:48,010 --> 00:10:52,360
this summer and it is a great project

287
00:10:49,779 --> 00:10:53,470
that integrates basically most of the

288
00:10:52,360 --> 00:10:55,510
components that we've talked about here

289
00:10:53,470 --> 00:10:57,250
with some additional network security

290
00:10:55,510 --> 00:10:59,380
analysis tools that are really great

291
00:10:57,250 --> 00:11:00,670
security onion in the middle is probably

292
00:10:59,380 --> 00:11:01,059
one you've heard about quite a bit it's

293
00:11:00,670 --> 00:11:03,218
an all

294
00:11:01,059 --> 00:11:05,199
one package with kind of a its own

295
00:11:03,219 --> 00:11:06,699
interface to manage all these different

296
00:11:05,199 --> 00:11:08,439
components without needing to go to each

297
00:11:06,699 --> 00:11:09,909
one and configure them all manually and

298
00:11:08,439 --> 00:11:11,228
then the third one is a patterning

299
00:11:09,909 --> 00:11:12,819
Metron which I actually haven't had a

300
00:11:11,229 --> 00:11:15,009
ton of experience with it's a relatively

301
00:11:12,819 --> 00:11:18,939
new player in the game but it's a it's

302
00:11:15,009 --> 00:11:20,919
getting quite a name for itself so kind

303
00:11:18,939 --> 00:11:22,509
of a you know a general overview of how

304
00:11:20,919 --> 00:11:26,228
a sim is going to be implemented in your

305
00:11:22,509 --> 00:11:28,029
environment you're gonna have the you're

306
00:11:26,229 --> 00:11:29,319
gonna have network loggers of some kind

307
00:11:28,029 --> 00:11:33,869
whether they're network security

308
00:11:29,319 --> 00:11:36,459
monitors or taps that go to some sort of

309
00:11:33,869 --> 00:11:38,499
quality assurance analyzer or something

310
00:11:36,459 --> 00:11:40,329
and those are all going to generate logs

311
00:11:38,499 --> 00:11:42,159
you'll have workstations that will

312
00:11:40,329 --> 00:11:43,718
generate their endpoint logs and along

313
00:11:42,159 --> 00:11:45,519
with workstations you probably want to

314
00:11:43,719 --> 00:11:47,529
get your server logs as well with those

315
00:11:45,519 --> 00:11:49,749
and those are all endpoint logs they all

316
00:11:47,529 --> 00:11:52,839
go to some single place where they can

317
00:11:49,749 --> 00:11:55,059
be either enriched or stored or both

318
00:11:52,839 --> 00:11:56,679
depending on you know how many resources

319
00:11:55,059 --> 00:11:57,999
you want to throw at it and then from

320
00:11:56,679 --> 00:12:00,218
there you'll query it with your

321
00:11:57,999 --> 00:12:05,049
dashboards searching and reporting and

322
00:12:00,219 --> 00:12:06,209
things like that so basically the way

323
00:12:05,049 --> 00:12:09,009
that we're going to implement it today

324
00:12:06,209 --> 00:12:10,718
we've got Zeke which is that network

325
00:12:09,009 --> 00:12:12,069
monitor it's gonna take traffic from

326
00:12:10,719 --> 00:12:14,439
anything it hears on the network and

327
00:12:12,069 --> 00:12:16,089
start generating events say I saw a DNS

328
00:12:14,439 --> 00:12:18,519
query I saw the connection here things

329
00:12:16,089 --> 00:12:20,049
like that it's gonna be collected by our

330
00:12:18,519 --> 00:12:22,089
beats agent which is also going to live

331
00:12:20,049 --> 00:12:25,239
on the host and beats is also going to

332
00:12:22,089 --> 00:12:28,689
pick up our syslog messages and going to

333
00:12:25,239 --> 00:12:30,339
start sending those over to log stash

334
00:12:28,689 --> 00:12:31,809
where we'll go ahead and do some basic

335
00:12:30,339 --> 00:12:33,639
enrichment on those logs

336
00:12:31,809 --> 00:12:37,718
we'll put it into elasticsearch and then

337
00:12:33,639 --> 00:12:41,229
visualize it in cabana so I do have I

338
00:12:37,719 --> 00:12:43,959
have the demo here which I don't know if

339
00:12:41,229 --> 00:12:47,049
we'll if we can see it very well I've

340
00:12:43,959 --> 00:12:48,488
got the URL down at the bottom but

341
00:12:47,049 --> 00:12:51,009
basically we start out with a default

342
00:12:48,489 --> 00:12:53,409
just kind of Ubuntu box and a bun to 18

343
00:12:51,009 --> 00:12:56,589
instance we'll install everything on

344
00:12:53,409 --> 00:12:59,499
this single box and we'll go ahead and

345
00:12:56,589 --> 00:13:01,089
and run it all in a normal architecture

346
00:12:59,499 --> 00:13:02,139
I wouldn't necessarily recommend doing

347
00:13:01,089 --> 00:13:03,399
that maybe it works for your

348
00:13:02,139 --> 00:13:04,449
organization but you're probably gonna

349
00:13:03,399 --> 00:13:06,759
have a more distributed architecture

350
00:13:04,449 --> 00:13:08,738
like what I was talking about earlier so

351
00:13:06,759 --> 00:13:12,309
the first thing that we'll want to do is

352
00:13:08,739 --> 00:13:13,470
go ahead and get the sources added for

353
00:13:12,309 --> 00:13:16,500
the elastic stack

354
00:13:13,470 --> 00:13:18,510
we'll just add it to our apt repo that

355
00:13:16,500 --> 00:13:21,890
makes it real easy to do the rest of the

356
00:13:18,510 --> 00:13:25,580
installs we just do a apt install

357
00:13:21,890 --> 00:13:31,140
elasticsearch we'll do an apt install

358
00:13:25,580 --> 00:13:32,700
Cabana an apt install logs - and then

359
00:13:31,140 --> 00:13:35,600
we'll do an app to install file beeped

360
00:13:32,700 --> 00:13:37,320
and all this goes relatively quickly

361
00:13:35,600 --> 00:13:39,060
what we're doing here we're probably

362
00:13:37,320 --> 00:13:40,320
gonna get it going in about 10 or 15

363
00:13:39,060 --> 00:13:41,869
minutes it might take you a little bit

364
00:13:40,320 --> 00:13:44,130
longer depending on your environment

365
00:13:41,870 --> 00:13:47,490
this is having to have a blazing fast

366
00:13:44,130 --> 00:13:49,590
internet connection which was great but

367
00:13:47,490 --> 00:13:51,600
I'm gonna have the instructions for this

368
00:13:49,590 --> 00:13:53,820
as well posted at the end so if you want

369
00:13:51,600 --> 00:13:55,230
to follow along with the kind of what

370
00:13:53,820 --> 00:13:56,430
these commands are what we're doing I'll

371
00:13:55,230 --> 00:13:59,160
have all of those laid out in a

372
00:13:56,430 --> 00:14:01,880
walkthrough for you as well as links to

373
00:13:59,160 --> 00:14:03,839
the the recordings here into the slides

374
00:14:01,880 --> 00:14:06,720
so we'll go ahead and get those

375
00:14:03,840 --> 00:14:09,870
installed we're getting Cabana installed

376
00:14:06,720 --> 00:14:11,370
here and so this is the those those

377
00:14:09,870 --> 00:14:15,540
first four pieces of software we talked

378
00:14:11,370 --> 00:14:17,400
about beats elasticsearch Cabana and log

379
00:14:15,540 --> 00:14:19,230
stash and those all come from the same

380
00:14:17,400 --> 00:14:22,110
place so it's relatively quick to get

381
00:14:19,230 --> 00:14:32,610
going and then that's going to continue

382
00:14:22,110 --> 00:14:35,840
to download here you see if we just

383
00:14:32,610 --> 00:14:35,840
fast-forward some of this

384
00:14:38,430 --> 00:14:45,060
yeah it's still logs - all right so then

385
00:14:42,810 --> 00:14:46,859
we installing a last alert is a little

386
00:14:45,060 --> 00:14:48,810
bit more complicated we actually have to

387
00:14:46,860 --> 00:14:51,270
kind of install it from source and

388
00:14:48,810 --> 00:14:52,890
that's I mean it's not the worst thing

389
00:14:51,270 --> 00:14:55,790
in the world there's about six commands

390
00:14:52,890 --> 00:14:58,170
here that we run to install Python

391
00:14:55,790 --> 00:14:59,550
install pit to install last alert again

392
00:14:58,170 --> 00:15:01,949
a last alert is going to be that service

393
00:14:59,550 --> 00:15:03,900
it's going to check elasticsearch every

394
00:15:01,950 --> 00:15:05,280
minute or every 10 minutes or ever F and

395
00:15:03,900 --> 00:15:07,500
you want it to and it's going to

396
00:15:05,280 --> 00:15:09,750
generate alerts based on definitions

397
00:15:07,500 --> 00:15:11,160
that we provide so if you want to detect

398
00:15:09,750 --> 00:15:12,000
certain things and alert when certain

399
00:15:11,160 --> 00:15:13,260
things happen

400
00:15:12,000 --> 00:15:15,900
alas alert it's going to provide that

401
00:15:13,260 --> 00:15:19,740
for us so we'll go ahead and clone that

402
00:15:15,900 --> 00:15:22,380
down and start building it here that

403
00:15:19,740 --> 00:15:25,740
will take just a second

404
00:15:22,380 --> 00:15:27,180
one interesting thing about Alaska is it

405
00:15:25,740 --> 00:15:28,800
doesn't come with a service I go ahead

406
00:15:27,180 --> 00:15:30,660
and give you the instructions here on

407
00:15:28,800 --> 00:15:32,209
how to make a service so that it starts

408
00:15:30,660 --> 00:15:38,760
up automatically for you

409
00:15:32,210 --> 00:15:40,350
and so that'll be kind of nice here I'm

410
00:15:38,760 --> 00:15:44,520
gonna just move forward to make sure we

411
00:15:40,350 --> 00:15:47,870
don't go over here alright so we get a

412
00:15:44,520 --> 00:15:47,870
last alert installed

413
00:15:56,390 --> 00:16:01,970
so the first thing that we're gonna do

414
00:15:58,220 --> 00:16:04,670
here with last alert is create that

415
00:16:01,970 --> 00:16:05,959
service like I said that's pretty

416
00:16:04,670 --> 00:16:09,140
straightforward you just kind of enter

417
00:16:05,959 --> 00:16:13,518
the service details and we'll get it

418
00:16:09,140 --> 00:16:15,230
enabled here one of the I think probably

419
00:16:13,519 --> 00:16:16,550
the most difficult one to get installed

420
00:16:15,230 --> 00:16:22,190
here is Zeke which we'll go ahead and

421
00:16:16,550 --> 00:16:24,290
get that installed so we we're gonna

422
00:16:22,190 --> 00:16:25,790
clone down the the app to repo order I

423
00:16:24,290 --> 00:16:28,939
guess add the app to repo and then we'll

424
00:16:25,790 --> 00:16:30,079
go ahead and pull it from there in your

425
00:16:28,940 --> 00:16:33,290
environment you may want to consider

426
00:16:30,079 --> 00:16:34,880
building it because you but could

427
00:16:33,290 --> 00:16:37,699
potentially get performance benefits

428
00:16:34,880 --> 00:16:41,420
from it it does take a little bit to

429
00:16:37,700 --> 00:16:45,529
compile though just be warned on that so

430
00:16:41,420 --> 00:16:47,180
that will go ahead and install it may

431
00:16:45,529 --> 00:16:48,769
prompt you if you want to configure Zeke

432
00:16:47,180 --> 00:16:51,019
to send email I just go ahead and hit

433
00:16:48,769 --> 00:16:55,220
the default prompts and then it will not

434
00:16:51,019 --> 00:16:57,470
send email by default so all right so we

435
00:16:55,220 --> 00:17:02,420
get that set up now we want to go ahead

436
00:16:57,470 --> 00:17:03,890
and get configure we want to configure

437
00:17:02,420 --> 00:17:06,109
Zeke to be able to grab all of our

438
00:17:03,890 --> 00:17:07,549
packets off of this one host so I just

439
00:17:06,109 --> 00:17:10,790
went ahead and enabled promiscuous mode

440
00:17:07,549 --> 00:17:12,349
here and typically on your Zeke you're

441
00:17:10,790 --> 00:17:13,879
gonna have a separate interface that you

442
00:17:12,349 --> 00:17:15,319
want to have a tap off your network

443
00:17:13,880 --> 00:17:17,510
getting a copy of all the traffic that's

444
00:17:15,319 --> 00:17:19,579
going to and from your core router or

445
00:17:17,510 --> 00:17:21,169
your main firewall into your environment

446
00:17:19,579 --> 00:17:22,579
so you can kind of see everything that's

447
00:17:21,169 --> 00:17:24,530
coming in and out this could generate a

448
00:17:22,579 --> 00:17:25,879
lot of data for you and so that's why

449
00:17:24,530 --> 00:17:27,079
there's a you should take into

450
00:17:25,880 --> 00:17:29,059
consideration basically how many

451
00:17:27,079 --> 00:17:31,280
resources you want to give your Zeke box

452
00:17:29,059 --> 00:17:32,809
or maybe even a Zeke cluster to handle

453
00:17:31,280 --> 00:17:35,030
all of this data depending on how much

454
00:17:32,809 --> 00:17:36,500
you have but for this one we're just

455
00:17:35,030 --> 00:17:39,200
going to install we're just going to use

456
00:17:36,500 --> 00:17:41,929
the promiscuous mode on the adapter and

457
00:17:39,200 --> 00:17:43,730
we'll go ahead and and listen on that

458
00:17:41,929 --> 00:17:46,429
traffic so we'll change the adapter

459
00:17:43,730 --> 00:17:54,410
interface here to the one that we have

460
00:17:46,429 --> 00:17:56,830
and we'll move on to to changing the

461
00:17:54,410 --> 00:18:00,200
output policy this is actually a big one

462
00:17:56,830 --> 00:18:03,620
the Zeke has to logging modes one is

463
00:18:00,200 --> 00:18:05,660
JSON and one is plain text plain text

464
00:18:03,620 --> 00:18:07,250
logs or sis logs are just a pain in the

465
00:18:05,660 --> 00:18:09,060
butt to enrich and parse because they

466
00:18:07,250 --> 00:18:10,860
have weird delimiter - some of them have

467
00:18:09,060 --> 00:18:12,629
some of them have commas if you have a

468
00:18:10,860 --> 00:18:15,780
common parsable format something like

469
00:18:12,630 --> 00:18:17,910
JSON or llamo even XML like windows

470
00:18:15,780 --> 00:18:19,770
event logs is he really easy to parse

471
00:18:17,910 --> 00:18:22,290
because it's already structured somewhat

472
00:18:19,770 --> 00:18:24,629
so log stash can intuitively pull out

473
00:18:22,290 --> 00:18:26,460
fields and you can enrich those fields

474
00:18:24,630 --> 00:18:28,290
without having to do your own extraction

475
00:18:26,460 --> 00:18:29,550
you can do that in log sesh you can do

476
00:18:28,290 --> 00:18:31,590
anything you want and log stash with

477
00:18:29,550 --> 00:18:35,399
vlogs but it just takes quite a bit more

478
00:18:31,590 --> 00:18:37,050
legwork so after we do that we're gonna

479
00:18:35,400 --> 00:18:40,140
go ahead and start Zeke on the interface

480
00:18:37,050 --> 00:18:42,270
and when we do that should start

481
00:18:40,140 --> 00:18:45,290
generating logs for us what we're gonna

482
00:18:42,270 --> 00:18:49,320
do here is I just did a ping of

483
00:18:45,290 --> 00:18:50,850
yahoo.com and wait a second and then we

484
00:18:49,320 --> 00:18:53,129
just take a look at the bottom of that

485
00:18:50,850 --> 00:18:55,770
DNS log that Zeke generated Zeke

486
00:18:53,130 --> 00:18:57,630
detected that DNS query and put it in a

487
00:18:55,770 --> 00:18:59,550
log and said this is the IP this is the

488
00:18:57,630 --> 00:19:02,430
hostname looked up this is great for now

489
00:18:59,550 --> 00:19:04,860
we are moving into a DNS over HTTP world

490
00:19:02,430 --> 00:19:07,140
where this will become less effective so

491
00:19:04,860 --> 00:19:08,909
keep that in mind as you're considering

492
00:19:07,140 --> 00:19:10,080
some of your threat detection but for

493
00:19:08,910 --> 00:19:12,000
now it seems to work well enough and

494
00:19:10,080 --> 00:19:14,669
it's a great way to catch low-hanging

495
00:19:12,000 --> 00:19:16,830
fruit you sometimes have to use your

496
00:19:14,670 --> 00:19:18,530
imagination with your threat signatures

497
00:19:16,830 --> 00:19:21,480
on some of the things you want to catch

498
00:19:18,530 --> 00:19:23,910
and there's a lot of low-hanging fruit

499
00:19:21,480 --> 00:19:25,320
that you can catch like taking every DNS

500
00:19:23,910 --> 00:19:27,180
name that's queried and putting it

501
00:19:25,320 --> 00:19:29,280
against a known malware list I mean

502
00:19:27,180 --> 00:19:30,840
that's real easy way if you if you have

503
00:19:29,280 --> 00:19:32,520
some common malware that gets into your

504
00:19:30,840 --> 00:19:34,620
environment and it's querying out on the

505
00:19:32,520 --> 00:19:36,480
network then you're gonna catch it by

506
00:19:34,620 --> 00:19:37,469
just looking at your logs and seeing

507
00:19:36,480 --> 00:19:40,890
that it's hey it's squaring a known

508
00:19:37,470 --> 00:19:43,440
malware list so now let's see we're

509
00:19:40,890 --> 00:19:45,480
gonna go and setup file beat file beat

510
00:19:43,440 --> 00:19:46,170
again is that agent that was gonna live

511
00:19:45,480 --> 00:19:47,850
on the machine

512
00:19:46,170 --> 00:19:50,100
you're gonna put these on maybe your

513
00:19:47,850 --> 00:19:52,560
Linux servers or your Windows servers to

514
00:19:50,100 --> 00:19:54,419
grab event logs and send it into elastic

515
00:19:52,560 --> 00:19:56,129
I've got a config here that's already

516
00:19:54,420 --> 00:19:59,340
configured to send it into our local

517
00:19:56,130 --> 00:20:01,200
elastic stack or elastic search and

518
00:19:59,340 --> 00:20:03,120
again I'll have all these configs

519
00:20:01,200 --> 00:20:05,970
available here at the end for you to go

520
00:20:03,120 --> 00:20:07,169
ahead and read on your own time and I'll

521
00:20:05,970 --> 00:20:10,140
be available if you guys have any

522
00:20:07,170 --> 00:20:11,340
questions about setting this up we're

523
00:20:10,140 --> 00:20:14,370
kind of going through a lot of

524
00:20:11,340 --> 00:20:17,909
information really quick here so we'll

525
00:20:14,370 --> 00:20:19,350
get that we'll get that file be

526
00:20:17,910 --> 00:20:22,080
configured here and we'll get it

527
00:20:19,350 --> 00:20:22,719
restarted so that it's running the last

528
00:20:22,080 --> 00:20:26,110
thing that we'll need

529
00:20:22,720 --> 00:20:27,940
to do is make a quick change to Zeke's

530
00:20:26,110 --> 00:20:32,139
path so that it knows where to look for

531
00:20:27,940 --> 00:20:34,480
these logs well sorry I misspoke we'll

532
00:20:32,140 --> 00:20:34,990
change file beats path so it knows how

533
00:20:34,480 --> 00:20:37,000
to pick up

534
00:20:34,990 --> 00:20:39,070
Zeke's logs off the host and put them

535
00:20:37,000 --> 00:20:41,409
into elasticsearch and then so we'll

536
00:20:39,070 --> 00:20:48,220
just add those paths here and get those

537
00:20:41,409 --> 00:20:51,580
done then the last thing we're gonna do

538
00:20:48,220 --> 00:20:53,380
on the elastic sack is probably the most

539
00:20:51,580 --> 00:20:55,780
intensive and if you are using an

540
00:20:53,380 --> 00:20:57,580
elastic based threat detection system

541
00:20:55,780 --> 00:21:00,129
log stash might be where you spend most

542
00:20:57,580 --> 00:21:01,720
of your time it's the enrichment part of

543
00:21:00,130 --> 00:21:05,559
the pipeline where we're taking raw log

544
00:21:01,720 --> 00:21:07,059
events and doing things with them what's

545
00:21:05,559 --> 00:21:09,639
really cool about this is that you can

546
00:21:07,059 --> 00:21:11,740
you can go as far as you want with log

547
00:21:09,640 --> 00:21:15,429
stash enrichments you can use look-up

548
00:21:11,740 --> 00:21:16,780
tables you can use you can use rest

549
00:21:15,429 --> 00:21:18,669
queries you can do just about whatever

550
00:21:16,780 --> 00:21:21,158
you want to put additional data into

551
00:21:18,669 --> 00:21:25,000
your log and so you can end up with

552
00:21:21,159 --> 00:21:26,919
these massive massive files that

553
00:21:25,000 --> 00:21:28,780
continue to do this great threat

554
00:21:26,919 --> 00:21:30,850
detection so like Sasha is a great way

555
00:21:28,780 --> 00:21:33,428
of helping you organize all that with

556
00:21:30,850 --> 00:21:35,770
these ideas called pipelines and a

557
00:21:33,429 --> 00:21:39,039
pipeline is basically a step by step

558
00:21:35,770 --> 00:21:41,200
process that logstash takes to make your

559
00:21:39,039 --> 00:21:43,450
log better it has an input where do I

560
00:21:41,200 --> 00:21:45,610
get my logs from a filter what do I do

561
00:21:43,450 --> 00:21:48,039
with my logs and an output is and where

562
00:21:45,610 --> 00:21:49,719
do I put them something to consider that

563
00:21:48,039 --> 00:21:51,340
I didn't really have time to go over in

564
00:21:49,720 --> 00:21:53,620
this and I've mentioned it earlier is to

565
00:21:51,340 --> 00:21:55,570
put a message queue somewhere in here

566
00:21:53,620 --> 00:21:57,850
and all that the message queue does is

567
00:21:55,570 --> 00:21:59,649
it's a place for your logs to sit either

568
00:21:57,850 --> 00:22:00,760
before they're being enriched or after

569
00:21:59,650 --> 00:22:02,799
they're being rich before they go into

570
00:22:00,760 --> 00:22:05,289
elasticsearch and it's just kind of a

571
00:22:02,799 --> 00:22:08,440
great way to buffer when when your

572
00:22:05,289 --> 00:22:11,169
events throughput doesn't match for

573
00:22:08,440 --> 00:22:12,700
example if you have a normal logging ray

574
00:22:11,169 --> 00:22:14,200
and you're enriching just fine but all

575
00:22:12,700 --> 00:22:15,880
of a sudden you have a major traffic

576
00:22:14,200 --> 00:22:18,100
spike and all of a sudden you're getting

577
00:22:15,880 --> 00:22:20,799
three times as many Network events as

578
00:22:18,100 --> 00:22:22,149
you were before coming into log stash

579
00:22:20,799 --> 00:22:23,350
you know log stash you're gonna say wow

580
00:22:22,150 --> 00:22:25,440
this is going to take me a little bit

581
00:22:23,350 --> 00:22:27,908
and it's going to start to queue up and

582
00:22:25,440 --> 00:22:29,679
the rule of thumb with your sim and with

583
00:22:27,909 --> 00:22:32,260
log in richmond is to always make sure

584
00:22:29,679 --> 00:22:33,490
that your enrichment events per second

585
00:22:32,260 --> 00:22:34,299
the number of logs that you're going

586
00:22:33,490 --> 00:22:38,080
through and make

587
00:22:34,299 --> 00:22:39,519
better or is higher or faster than the

588
00:22:38,080 --> 00:22:41,109
number of events that you are ingesting

589
00:22:39,519 --> 00:22:43,239
or taking in from the rest of your

590
00:22:41,109 --> 00:22:44,678
environment this takes some calculation

591
00:22:43,239 --> 00:22:46,869
as to the number of resources that you

592
00:22:44,679 --> 00:22:48,909
want to actually throw at it because if

593
00:22:46,869 --> 00:22:51,488
you get to a situation where you have

594
00:22:48,909 --> 00:22:53,019
more coming in you may be able to buffer

595
00:22:51,489 --> 00:22:56,080
that for a period of time you know maybe

596
00:22:53,019 --> 00:22:57,190
you know that it at 8 P 8 a.m. every

597
00:22:56,080 --> 00:22:58,509
morning everyone's logging into their

598
00:22:57,190 --> 00:23:00,639
workstations you can have a spike of

599
00:22:58,509 --> 00:23:01,629
logs but that's gonna go down so you can

600
00:23:00,639 --> 00:23:03,279
buffer that for a little bit you don't

601
00:23:01,629 --> 00:23:05,498
need to throw a ton of resources at it

602
00:23:03,279 --> 00:23:07,269
but if you just are constantly having

603
00:23:05,499 --> 00:23:08,859
more events come in then you can handle

604
00:23:07,269 --> 00:23:10,570
you need to consider potentially putting

605
00:23:08,859 --> 00:23:12,879
a message queue in potentially giving

606
00:23:10,570 --> 00:23:15,879
more resources to your log stash

607
00:23:12,879 --> 00:23:17,379
instance so we've gone ahead and

608
00:23:15,879 --> 00:23:18,519
implemented our pipeline's here and I'm

609
00:23:17,379 --> 00:23:21,279
just checking to make sure that file

610
00:23:18,519 --> 00:23:23,320
beet is running we're gonna go ahead and

611
00:23:21,279 --> 00:23:25,269
modify log stash log stash is a really

612
00:23:23,320 --> 00:23:27,129
cool feature here where when you make a

613
00:23:25,269 --> 00:23:28,929
change to any of your configuration or

614
00:23:27,129 --> 00:23:30,428
any of your enrichment pipelines it will

615
00:23:28,929 --> 00:23:32,289
go ahead and reload that pipeline

616
00:23:30,429 --> 00:23:33,639
automatically so you don't need to

617
00:23:32,289 --> 00:23:35,739
restart the service you need to edit

618
00:23:33,639 --> 00:23:38,498
anything and I'm just enabling that here

619
00:23:35,739 --> 00:23:43,929
in the default config file so that will

620
00:23:38,499 --> 00:23:46,059
work for us so then our main enrichment

621
00:23:43,929 --> 00:23:47,289
pipeline we're gonna go ahead and build

622
00:23:46,059 --> 00:23:50,049
this and what we're gonna do is this is

623
00:23:47,289 --> 00:23:51,789
a quick and simple enrichment pipeline

624
00:23:50,049 --> 00:23:54,129
that will go through and look for any

625
00:23:51,789 --> 00:23:56,139
source or destination IP address that we

626
00:23:54,129 --> 00:23:58,029
get from our zeke logs and compare it

627
00:23:56,139 --> 00:24:00,908
with a table that i've prepared here of

628
00:23:58,029 --> 00:24:02,259
known tour endpoints now in our previous

629
00:24:00,909 --> 00:24:04,599
speaker robert was just talking about

630
00:24:02,259 --> 00:24:07,119
the great uses of using the darknet and

631
00:24:04,599 --> 00:24:07,718
and bringing it to the light and i think

632
00:24:07,119 --> 00:24:09,279
that's great

633
00:24:07,719 --> 00:24:11,259
i think right now in some of my use

634
00:24:09,279 --> 00:24:13,389
cases i there's not a lot of real

635
00:24:11,259 --> 00:24:15,159
legitimate uses for users in my

636
00:24:13,389 --> 00:24:16,658
organization to be on tour you know I

637
00:24:15,159 --> 00:24:17,769
think that more often than not that's

638
00:24:16,659 --> 00:24:19,539
gonna be a good indicator that

639
00:24:17,769 --> 00:24:21,159
something's not right in the environment

640
00:24:19,539 --> 00:24:23,679
so what this is gonna do is this is

641
00:24:21,159 --> 00:24:26,440
gonna tag any log file that comes in

642
00:24:23,679 --> 00:24:28,749
whose IP addresses has a destination or

643
00:24:26,440 --> 00:24:30,459
a source address that it is tor and it's

644
00:24:28,749 --> 00:24:32,079
just gonna let me know in the log so

645
00:24:30,459 --> 00:24:33,969
then when I can go through the logs and

646
00:24:32,079 --> 00:24:35,889
start searching I can say hey you know

647
00:24:33,969 --> 00:24:37,329
show me all of the connections to tor

648
00:24:35,889 --> 00:24:39,488
and it can go through and show me all

649
00:24:37,329 --> 00:24:40,899
the IP addresses when it happened any

650
00:24:39,489 --> 00:24:43,839
other connections to tor and this is

651
00:24:40,899 --> 00:24:45,668
just an example kind of starter threat

652
00:24:43,839 --> 00:24:47,860
detection example so we've gone ahead

653
00:24:45,669 --> 00:24:52,150
and implemented that config there

654
00:24:47,860 --> 00:24:58,479
and we were going ahead and and starting

655
00:24:52,150 --> 00:25:02,320
the logstash service here and now we're

656
00:24:58,480 --> 00:25:04,030
gonna be ready to we're gonna be ready

657
00:25:02,320 --> 00:25:05,470
to move over to cabana which is our

658
00:25:04,030 --> 00:25:11,920
dashboard it's kind of our visualization

659
00:25:05,470 --> 00:25:13,750
interface here all right I'm gonna kind

660
00:25:11,920 --> 00:25:17,800
of skip this part because we're running

661
00:25:13,750 --> 00:25:31,390
short on time here make sure we still

662
00:25:17,800 --> 00:25:33,580
got it here there we go all right so

663
00:25:31,390 --> 00:25:35,620
once we get cabana running you can pull

664
00:25:33,580 --> 00:25:36,879
up the web UI and this is going to be

665
00:25:35,620 --> 00:25:38,229
kind of your dashboard this is what

666
00:25:36,880 --> 00:25:43,210
you're gonna see when you first get in

667
00:25:38,230 --> 00:25:45,660
and right now we do we have been sending

668
00:25:43,210 --> 00:25:48,130
data to it through file beat and

669
00:25:45,660 --> 00:25:50,020
elasticsearch remember Caban is just a

670
00:25:48,130 --> 00:25:52,690
visualization for your elasticsearch

671
00:25:50,020 --> 00:25:55,780
elasticsearch bundles your logs by type

672
00:25:52,690 --> 00:25:57,310
into bundles called indexes and it

673
00:25:55,780 --> 00:25:58,570
usually bundles them on a daily basis

674
00:25:57,310 --> 00:26:00,010
there's other ways that you can do it

675
00:25:58,570 --> 00:26:02,230
but the first thing that we need to do

676
00:26:00,010 --> 00:26:03,760
to really use these is are to make index

677
00:26:02,230 --> 00:26:05,530
patterns so we'll go ahead and create

678
00:26:03,760 --> 00:26:10,510
two index patterns here that will help

679
00:26:05,530 --> 00:26:12,160
us distinguish our data and you know

680
00:26:10,510 --> 00:26:14,170
kind of keep our logs separate because

681
00:26:12,160 --> 00:26:15,490
not every log has the same events our

682
00:26:14,170 --> 00:26:17,590
system logs certainly aren't going to

683
00:26:15,490 --> 00:26:19,750
have the same fields in them that our

684
00:26:17,590 --> 00:26:21,669
network logs are so we'll go ahead and

685
00:26:19,750 --> 00:26:23,560
create those two indexes here those

686
00:26:21,670 --> 00:26:26,320
index patterns here this will just

687
00:26:23,560 --> 00:26:29,860
basically help us see all of the indexes

688
00:26:26,320 --> 00:26:31,000
that elasticsearch or that log stash is

689
00:26:29,860 --> 00:26:32,649
going to make when it puts them into

690
00:26:31,000 --> 00:26:35,410
elastic search and search all that data

691
00:26:32,650 --> 00:26:37,360
all as one so once we get those added I

692
00:26:35,410 --> 00:26:40,870
gotta make sure I remember to select the

693
00:26:37,360 --> 00:26:44,530
timestamp for these we can go over to

694
00:26:40,870 --> 00:26:47,290
the discover tab here and we can start

695
00:26:44,530 --> 00:26:48,670
searching our data so let's see if we've

696
00:26:47,290 --> 00:26:52,720
got any data that we can actually pull

697
00:26:48,670 --> 00:26:54,340
up here we can see our events and we can

698
00:26:52,720 --> 00:26:55,870
see some of the data from the event so

699
00:26:54,340 --> 00:26:57,959
I'm gonna switch over to Zeke because if

700
00:26:55,870 --> 00:27:00,699
I want to look at our network monitor

701
00:26:57,960 --> 00:27:01,149
these are all of our network log events

702
00:27:00,700 --> 00:27:03,519
that are coming

703
00:27:01,149 --> 00:27:05,049
from Zeke so now we can check and see if

704
00:27:03,519 --> 00:27:07,899
any of our data that we were just

705
00:27:05,049 --> 00:27:10,210
setting up with logstash is working

706
00:27:07,899 --> 00:27:12,820
first of all I've got this destination

707
00:27:10,210 --> 00:27:15,580
dot tor filter applied so we can only

708
00:27:12,820 --> 00:27:17,529
see events here that that have a

709
00:27:15,580 --> 00:27:20,259
destination of Tor so I'm going to go

710
00:27:17,529 --> 00:27:22,899
ahead and make a connection to a tor

711
00:27:20,259 --> 00:27:25,269
example just using netcat just to to

712
00:27:22,899 --> 00:27:27,549
kind of prove the point here and this

713
00:27:25,269 --> 00:27:30,219
will this should generate a log that's

714
00:27:27,549 --> 00:27:35,049
detected by Zeke and that has my IP

715
00:27:30,219 --> 00:27:36,789
address and the IP address of the IP

716
00:27:35,049 --> 00:27:41,859
address of tor in it and then that will

717
00:27:36,789 --> 00:27:44,440
show up as a as a flagged log for us to

718
00:27:41,859 --> 00:27:51,999
review so we'll go ahead and refresh

719
00:27:44,440 --> 00:27:53,499
that all right there we go so you can

720
00:27:51,999 --> 00:27:57,159
see these three events that just showed

721
00:27:53,499 --> 00:28:01,479
up here it says the that these are

722
00:27:57,159 --> 00:28:03,969
indeed tourist destinations so if we

723
00:28:01,479 --> 00:28:05,529
come down we can see that was you know

724
00:28:03,969 --> 00:28:07,719
what the IP address of the machine was

725
00:28:05,529 --> 00:28:09,669
what its name was when it was that it

726
00:28:07,719 --> 00:28:12,940
connected and that it was indeed a tor

727
00:28:09,669 --> 00:28:15,070
endpoint so we're kind of at a time here

728
00:28:12,940 --> 00:28:16,599
so I'm gonna go ahead and give you some

729
00:28:15,070 --> 00:28:19,359
further reading or some things that you

730
00:28:16,599 --> 00:28:22,149
can do to continue to build this out as

731
00:28:19,359 --> 00:28:24,428
well as links to our slides

732
00:28:22,149 --> 00:28:25,988
things that you can continue to do are

733
00:28:24,429 --> 00:28:28,179
just enable control and elasticsearch

734
00:28:25,989 --> 00:28:31,179
elastic made that free as of May you get

735
00:28:28,179 --> 00:28:32,950
free user accounts for HTTP all included

736
00:28:31,179 --> 00:28:35,019
they just bought a great company called

737
00:28:32,950 --> 00:28:37,269
endgame so they're building out their

738
00:28:35,019 --> 00:28:39,549
their sim and they do have a SIM module

739
00:28:37,269 --> 00:28:41,529
in here I've used it and it's still in

740
00:28:39,549 --> 00:28:43,809
its infancy it's still really finicky to

741
00:28:41,529 --> 00:28:44,950
get working ID but I think that it shows

742
00:28:43,809 --> 00:28:46,029
some promise I think in the future

743
00:28:44,950 --> 00:28:47,169
they're gonna have some really cool

744
00:28:46,029 --> 00:28:50,469
stuff with this so that's something to

745
00:28:47,169 --> 00:28:53,830
keep your eye on just understand what

746
00:28:50,469 --> 00:28:55,479
data that you have try to understand

747
00:28:53,830 --> 00:28:57,879
where you aren't seeing things where you

748
00:28:55,479 --> 00:28:59,259
need to see things and shave down your

749
00:28:57,879 --> 00:29:01,718
false pauses so that you're only getting

750
00:28:59,259 --> 00:29:03,519
alerts on things that you want I'll go

751
00:29:01,719 --> 00:29:05,379
ahead and give you the the links to the

752
00:29:03,519 --> 00:29:07,719
slides here so you can go ahead and

753
00:29:05,379 --> 00:29:08,619
review that the walkthrough is posted

754
00:29:07,719 --> 00:29:10,929
here if you want to go through and

755
00:29:08,619 --> 00:29:14,168
finish that up and watch the last alert

756
00:29:10,929 --> 00:29:14,440
section here and the slides are here as

757
00:29:14,169 --> 00:29:15,610
well

758
00:29:14,440 --> 00:29:16,990
so that you have all of that information

759
00:29:15,610 --> 00:29:18,549
and of course if you have any questions

760
00:29:16,990 --> 00:29:20,620
feel free to hit me up here at the con

761
00:29:18,549 --> 00:29:22,920
or on twitter my handle is chrono side

762
00:29:20,620 --> 00:29:31,008
and thank you so much for coming

763
00:29:22,920 --> 00:29:31,009
[Applause]

