1
00:00:00,000 --> 00:00:02,820
hello everybody my name is John Whiteman

2
00:00:02,820 --> 00:00:03,899
and

3
00:00:03,899 --> 00:00:07,379
so happy to be here first time in Utah

4
00:00:07,379 --> 00:00:10,139
spent some time in Moab this weekend I

5
00:00:10,139 --> 00:00:12,900
that's just talk about entropy and rocks

6
00:00:12,900 --> 00:00:15,179
I've never seen anything like that in my

7
00:00:15,179 --> 00:00:16,500
life so

8
00:00:16,500 --> 00:00:18,420
um today the opinions Express I have to

9
00:00:18,420 --> 00:00:20,699
say this are solely my own and do not

10
00:00:20,699 --> 00:00:22,439
express the views or opinions of my

11
00:00:22,439 --> 00:00:24,900
employer or myself for that matter

12
00:00:24,900 --> 00:00:27,119
doesn't really matter so a little bit

13
00:00:27,119 --> 00:00:29,760
about me uh my experience literally does

14
00:00:29,760 --> 00:00:33,780
span two centuries and 15 years of which

15
00:00:33,780 --> 00:00:37,579
were related in security

16
00:00:37,680 --> 00:00:39,660
I'm a security researcher at Intel

17
00:00:39,660 --> 00:00:41,579
Corporation uh this is in the Portland

18
00:00:41,579 --> 00:00:43,680
Oregon area I think some of you've heard

19
00:00:43,680 --> 00:00:46,500
of that place uh also I do an adjunct

20
00:00:46,500 --> 00:00:48,000
some adjunct work cyber security

21
00:00:48,000 --> 00:00:49,559
instructor for University of Portland

22
00:00:49,559 --> 00:00:51,600
and last year I taught the cyber

23
00:00:51,600 --> 00:00:53,579
security boot camp at UC Berkeley

24
00:00:53,579 --> 00:00:56,280
extension and also did some technical

25
00:00:56,280 --> 00:00:59,520
editing for Wiley and you can hear me in

26
00:00:59,520 --> 00:01:01,500
addition to some other folks on the OAS

27
00:01:01,500 --> 00:01:05,280
PDX chapter security podcast we had uh

28
00:01:05,280 --> 00:01:06,720
one of my favorite guests I shouldn't

29
00:01:06,720 --> 00:01:08,040
say favorite because they're all they're

30
00:01:08,040 --> 00:01:10,200
all my favorite on the record but Bruce

31
00:01:10,200 --> 00:01:13,280
Schneider one of the crypto crypto

32
00:01:13,280 --> 00:01:15,659
and you know you know what I'm thinking

33
00:01:15,659 --> 00:01:19,380
of and then also I grow Wasabi and a

34
00:01:19,380 --> 00:01:21,840
kombucha maker so if you're interested

35
00:01:21,840 --> 00:01:23,280
in that and feel free to reach out if

36
00:01:23,280 --> 00:01:26,820
you want to talk so why am I here

37
00:01:26,820 --> 00:01:29,040
talk about some best practices in crypto

38
00:01:29,040 --> 00:01:30,720
but we're not going to be doing any deep

39
00:01:30,720 --> 00:01:33,119
dies in cryptography this is more of a

40
00:01:33,119 --> 00:01:36,299
General Session and sorry no Bitcoin or

41
00:01:36,299 --> 00:01:38,340
ethereum so I yeah see everybody walking

42
00:01:38,340 --> 00:01:39,720
out now

43
00:01:39,720 --> 00:01:42,740
um if any consolation I have to type

44
00:01:42,740 --> 00:01:45,720
cryptography the whole word out on

45
00:01:45,720 --> 00:01:48,240
Google to get real cryptography so just

46
00:01:48,240 --> 00:01:51,180
just saying and what is the Golden Rule

47
00:01:51,180 --> 00:01:52,979
so this slide should go with any crypto

48
00:01:52,979 --> 00:01:55,560
talk don't roll your own crypto and what

49
00:01:55,560 --> 00:01:57,780
we're saying here is that there's

50
00:01:57,780 --> 00:01:59,399
already ciphers out there there's

51
00:01:59,399 --> 00:02:00,720
already Primitives that have been

52
00:02:00,720 --> 00:02:03,119
approved you can Implement them but

53
00:02:03,119 --> 00:02:04,799
don't come up with your own and you're

54
00:02:04,799 --> 00:02:06,960
going to see some examples of the other

55
00:02:06,960 --> 00:02:08,818
way too why that's dangerous even if

56
00:02:08,818 --> 00:02:12,000
they you use a cipher but they're not

57
00:02:12,000 --> 00:02:14,099
um they're not really well done so let's

58
00:02:14,099 --> 00:02:16,560
start with a very simple threat model on

59
00:02:16,560 --> 00:02:17,760
the right hand side we have this

60
00:02:17,760 --> 00:02:20,760
application it's a web API you've got a

61
00:02:20,760 --> 00:02:22,860
web server I've got all the major brands

62
00:02:22,860 --> 00:02:27,180
on there nginx Apache node.js one time I

63
00:02:27,180 --> 00:02:30,060
just said nginx and some node.js gang

64
00:02:30,060 --> 00:02:31,980
keyed my car I don't know so I'm just

65
00:02:31,980 --> 00:02:33,780
going to put all of that up there

66
00:02:33,780 --> 00:02:37,020
I've got storage down here on my floppy

67
00:02:37,020 --> 00:02:39,660
disk this place was so poor that they

68
00:02:39,660 --> 00:02:41,220
had to go to Goodwill to get floppy

69
00:02:41,220 --> 00:02:43,440
disks for storage we got a database as

70
00:02:43,440 --> 00:02:44,280
well

71
00:02:44,280 --> 00:02:46,379
on the left hand side we got two types

72
00:02:46,379 --> 00:02:48,060
of clients we got Alice who's going to

73
00:02:48,060 --> 00:02:50,340
be a typical client and then we have a

74
00:02:50,340 --> 00:02:52,500
developer who's in a really good sitting

75
00:02:52,500 --> 00:02:54,599
posture like if you work half days like

76
00:02:54,599 --> 00:02:57,300
12 hours that's how you want to sit we

77
00:02:57,300 --> 00:02:59,340
have this developer here now this

78
00:02:59,340 --> 00:03:01,500
network of course is an untrusted zone

79
00:03:01,500 --> 00:03:04,019
right so the dotted lines are trust

80
00:03:04,019 --> 00:03:06,420
boundaries we never trust networks right

81
00:03:06,420 --> 00:03:08,459
that's the goal and so we have a network

82
00:03:08,459 --> 00:03:10,739
connection through there then our

83
00:03:10,739 --> 00:03:12,720
application with our web API it's

84
00:03:12,720 --> 00:03:15,420
serving of course through the web server

85
00:03:15,420 --> 00:03:17,400
and then there's also the actual

86
00:03:17,400 --> 00:03:19,920
software which is down on storage on our

87
00:03:19,920 --> 00:03:21,959
floppy drive and then we also have a

88
00:03:21,959 --> 00:03:23,879
database and then we also have a

89
00:03:23,879 --> 00:03:25,500
connection from the developer as well

90
00:03:25,500 --> 00:03:27,959
and that's kind of a simple threat model

91
00:03:27,959 --> 00:03:31,019
but what I want to do today is look at

92
00:03:31,019 --> 00:03:33,360
just the crypto assets what our Target

93
00:03:33,360 --> 00:03:35,580
what are opportunities for putting

94
00:03:35,580 --> 00:03:37,440
crypto there and the first thing would

95
00:03:37,440 --> 00:03:38,879
be probably something like the network

96
00:03:38,879 --> 00:03:42,000
and we would do something like HTTP with

97
00:03:42,000 --> 00:03:46,739
TLS which is the S right in HTTP s and

98
00:03:46,739 --> 00:03:48,659
we also have a second Network here it's

99
00:03:48,659 --> 00:03:50,879
in a different domain or trust zone so

100
00:03:50,879 --> 00:03:52,319
we're going to call this a separate

101
00:03:52,319 --> 00:03:55,860
connection and then we also have SSH and

102
00:03:55,860 --> 00:03:57,000
that's normally something where the

103
00:03:57,000 --> 00:03:58,920
developers will go in different protocol

104
00:03:58,920 --> 00:04:01,680
right but still we have security some

105
00:04:01,680 --> 00:04:04,260
other things an API token which would be

106
00:04:04,260 --> 00:04:06,780
normal so this could be this application

107
00:04:06,780 --> 00:04:08,940
could be on premise it could be out in

108
00:04:08,940 --> 00:04:11,700
the cloud somewhere but right now we

109
00:04:11,700 --> 00:04:13,319
have it could be anything it doesn't

110
00:04:13,319 --> 00:04:15,299
really matter but what does matter is

111
00:04:15,299 --> 00:04:17,940
the asset itself this API token what's

112
00:04:17,940 --> 00:04:19,918
interesting about it is that you could

113
00:04:19,918 --> 00:04:22,380
have two instances of this thing of this

114
00:04:22,380 --> 00:04:24,419
asset which poses to have some

115
00:04:24,419 --> 00:04:26,280
interesting challenges in terms of

116
00:04:26,280 --> 00:04:28,199
protecting that asset

117
00:04:28,199 --> 00:04:30,120
we have a password the passwords

118
00:04:30,120 --> 00:04:32,340
themselves aren't necessarily crypto but

119
00:04:32,340 --> 00:04:34,500
how we manage them for example salting

120
00:04:34,500 --> 00:04:38,100
and hashing and some other things we

121
00:04:38,100 --> 00:04:39,900
will put that there as a crypto asset as

122
00:04:39,900 --> 00:04:42,240
well then we have encryption for data at

123
00:04:42,240 --> 00:04:44,040
rest for the database and we have

124
00:04:44,040 --> 00:04:46,740
encryption for the storage as well and

125
00:04:46,740 --> 00:04:50,720
so I'm keeping them separate for now

126
00:04:51,120 --> 00:04:53,820
so these new assets that I defined and

127
00:04:53,820 --> 00:04:55,800
by the way you'll see throughout this if

128
00:04:55,800 --> 00:04:57,600
I give examples I usually have like

129
00:04:57,600 --> 00:04:59,940
prime numbers we have seven assets right

130
00:04:59,940 --> 00:05:02,880
now but new crypto assets means new

131
00:05:02,880 --> 00:05:05,460
attack surfaces we actually are creating

132
00:05:05,460 --> 00:05:07,979
new problems for us in a way to keep

133
00:05:07,979 --> 00:05:10,560
things secure now the threat model that

134
00:05:10,560 --> 00:05:13,800
I show here where I work at we deal with

135
00:05:13,800 --> 00:05:15,720
tons of projects and we look at all of

136
00:05:15,720 --> 00:05:17,580
these different projects coming in and

137
00:05:17,580 --> 00:05:19,500
we do threat modeling and normally I'll

138
00:05:19,500 --> 00:05:21,360
get something like this but the threat

139
00:05:21,360 --> 00:05:22,919
modeling stops there

140
00:05:22,919 --> 00:05:24,539
they say well this is a good job you

141
00:05:24,539 --> 00:05:26,580
have https you got your you know you're

142
00:05:26,580 --> 00:05:28,740
encrypting your data everything's good

143
00:05:28,740 --> 00:05:30,840
high five everybody goes home

144
00:05:30,840 --> 00:05:33,060
but for crypto we really haven't started

145
00:05:33,060 --> 00:05:35,639
yet and that's why I'm here today is we

146
00:05:35,639 --> 00:05:38,400
need to Deep dive

147
00:05:38,400 --> 00:05:41,820
so ADI Samir he's the S and RSA I would

148
00:05:41,820 --> 00:05:43,919
always say that if they were kind of

149
00:05:43,919 --> 00:05:45,479
like the Beatles in crypto except

150
00:05:45,479 --> 00:05:47,759
missing the drummer or beat best but

151
00:05:47,759 --> 00:05:49,080
audio I would say probably be John

152
00:05:49,080 --> 00:05:51,060
Lennon or somebody but he said something

153
00:05:51,060 --> 00:05:53,220
and I use the slide every time when I

154
00:05:53,220 --> 00:05:55,259
talk about crypto he says cryptography

155
00:05:55,259 --> 00:05:58,620
is typically bypassed not penetrated

156
00:05:58,620 --> 00:06:01,160
and he gave this this speech it's online

157
00:06:01,160 --> 00:06:03,720
he gave the speech at the touring Awards

158
00:06:03,720 --> 00:06:04,800
which was like the biggest computer

159
00:06:04,800 --> 00:06:08,060
award that you can get and rightfully so

160
00:06:08,060 --> 00:06:11,100
these Primitives these algorithms have

161
00:06:11,100 --> 00:06:13,020
been tested vetted over the years right

162
00:06:13,020 --> 00:06:15,900
and and they're good and so yes every

163
00:06:15,900 --> 00:06:18,120
primitive is breakable you can Brute

164
00:06:18,120 --> 00:06:20,580
Force keys and but that's usually

165
00:06:20,580 --> 00:06:22,680
computationally and feasible as long as

166
00:06:22,680 --> 00:06:25,259
the algorithm is okay and what he's

167
00:06:25,259 --> 00:06:27,900
saying is that it's typical that an

168
00:06:27,900 --> 00:06:30,300
attacker will not go in and Brute Force

169
00:06:30,300 --> 00:06:32,340
like we say but they'd be more like

170
00:06:32,340 --> 00:06:34,620
Bruce Bruce Lee and you want to be

171
00:06:34,620 --> 00:06:37,979
formless shapeless and like water and

172
00:06:37,979 --> 00:06:39,600
you find the least resistance to get

173
00:06:39,600 --> 00:06:41,400
what you want particularly for those

174
00:06:41,400 --> 00:06:43,758
assets

175
00:06:44,280 --> 00:06:47,160
I hope you all know the CIA right for

176
00:06:47,160 --> 00:06:49,139
crypto and for crypto 101 it's the same

177
00:06:49,139 --> 00:06:50,639
thing in fact we already know

178
00:06:50,639 --> 00:06:53,639
confidentiality we know integrity and we

179
00:06:53,639 --> 00:06:55,440
know availability which some people say

180
00:06:55,440 --> 00:06:56,699
well what do you mean by availability

181
00:06:56,699 --> 00:06:59,699
we'll get into that a little bit but

182
00:06:59,699 --> 00:07:01,560
what I like to do because I think that

183
00:07:01,560 --> 00:07:03,360
thing is totally wrong I think this is

184
00:07:03,360 --> 00:07:06,600
the real world Triad that we face today

185
00:07:06,600 --> 00:07:08,819
because just one mistake this thing will

186
00:07:08,819 --> 00:07:11,280
tip over it's the center of gravity and

187
00:07:11,280 --> 00:07:12,720
that's what takes

188
00:07:12,720 --> 00:07:14,400
um to I don't think it's always perfect

189
00:07:14,400 --> 00:07:16,740
to what we see for crypto

190
00:07:16,740 --> 00:07:19,740
so let's talk about confidentiality

191
00:07:19,740 --> 00:07:22,080
symmetric encryption first we usually

192
00:07:22,080 --> 00:07:24,840
look at AES 256 now some folks are

193
00:07:24,840 --> 00:07:26,639
probably using something smaller and

194
00:07:26,639 --> 00:07:29,580
this of course is the bit length 192 128

195
00:07:29,580 --> 00:07:31,500
but you're going to see we want to try

196
00:07:31,500 --> 00:07:32,819
to go for

197
00:07:32,819 --> 00:07:34,500
a larger number of bids for a couple of

198
00:07:34,500 --> 00:07:37,259
reasons computers are getting faster and

199
00:07:37,259 --> 00:07:38,819
there's something called post Quantum

200
00:07:38,819 --> 00:07:40,020
that's coming

201
00:07:40,020 --> 00:07:42,060
we want to avoid weak ciphers like

202
00:07:42,060 --> 00:07:43,800
deaths so if you're using deaths that's

203
00:07:43,800 --> 00:07:46,139
really a bad thing triple deaths bad

204
00:07:46,139 --> 00:07:49,620
thing you want to avoid weak modes and I

205
00:07:49,620 --> 00:07:51,360
refuse to put the Penguin on there with

206
00:07:51,360 --> 00:07:53,220
talks to Linux penguin where you see it

207
00:07:53,220 --> 00:07:55,259
everybody I think knows that in security

208
00:07:55,259 --> 00:07:58,259
but if you don't do a Google on the

209
00:07:58,259 --> 00:08:01,860
Linux ECB Linux block ciphers

210
00:08:01,860 --> 00:08:03,900
now one of the challenges we find

211
00:08:03,900 --> 00:08:07,259
particularly where I work or most places

212
00:08:07,259 --> 00:08:09,900
is that they're really on teams there

213
00:08:09,900 --> 00:08:11,819
really aren't any crypto experts there

214
00:08:11,819 --> 00:08:13,440
there's some people that know some

215
00:08:13,440 --> 00:08:15,720
crypto and that's it and where do you

216
00:08:15,720 --> 00:08:17,520
start especially if you're brand new so

217
00:08:17,520 --> 00:08:19,440
I'm assuming the audience here has some

218
00:08:19,440 --> 00:08:22,500
level of expertise and some maybe not so

219
00:08:22,500 --> 00:08:24,419
I often tell people just referred to

220
00:08:24,419 --> 00:08:27,419
niss and fips the 140.2 that's where

221
00:08:27,419 --> 00:08:29,220
it's going to give you a good start to

222
00:08:29,220 --> 00:08:31,740
find out what our good crypto ciphers to

223
00:08:31,740 --> 00:08:34,940
use and some of the bad ones

224
00:08:37,679 --> 00:08:39,958
on the asymmetric side

225
00:08:39,958 --> 00:08:41,640
I'm going to wave my hands here a little

226
00:08:41,640 --> 00:08:43,200
bit but you want to use what's

227
00:08:43,200 --> 00:08:45,140
recommended today asymmetric

228
00:08:45,140 --> 00:08:46,980
cryptography there's a lot but when

229
00:08:46,980 --> 00:08:48,180
we're talking specifically for

230
00:08:48,180 --> 00:08:50,820
encryption use what's today look at the

231
00:08:50,820 --> 00:08:54,120
fips 140-2 and you should be fine what

232
00:08:54,120 --> 00:08:55,860
you want to do is think post Quantum

233
00:08:55,860 --> 00:08:58,740
crypto from here especially coming in

234
00:08:58,740 --> 00:08:59,640
the future

235
00:08:59,640 --> 00:09:01,500
so today

236
00:09:01,500 --> 00:09:04,140
um there post qualm crypto is a reality

237
00:09:04,140 --> 00:09:06,300
but not enough qubits meaning the

238
00:09:06,300 --> 00:09:08,339
strength is not there and some may

239
00:09:08,339 --> 00:09:09,779
predict I've seen all the way from two

240
00:09:09,779 --> 00:09:12,660
years up to ten years but there is going

241
00:09:12,660 --> 00:09:15,660
to be an effect an asymmetric encryption

242
00:09:15,660 --> 00:09:17,580
cryptography in general will be probably

243
00:09:17,580 --> 00:09:20,820
the first to go down and within that the

244
00:09:20,820 --> 00:09:24,060
experts say is that ECC elliptic curve

245
00:09:24,060 --> 00:09:25,680
which was great right when we had small

246
00:09:25,680 --> 00:09:28,680
devices low power quick will be probably

247
00:09:28,680 --> 00:09:31,500
the first to go RSA is probably a better

248
00:09:31,500 --> 00:09:33,959
choice if you just want to stretch time

249
00:09:33,959 --> 00:09:35,940
out the other thing that you want to do

250
00:09:35,940 --> 00:09:38,580
is more bits are better so if you're

251
00:09:38,580 --> 00:09:41,760
doing 2K RSA you may want to go 3K and

252
00:09:41,760 --> 00:09:44,220
on a that's a stop Gap measure it's not

253
00:09:44,220 --> 00:09:45,899
going to prevent everything eventually

254
00:09:45,899 --> 00:09:48,360
falling in but it will give you time

255
00:09:48,360 --> 00:09:50,399
there isn't this cut off date and then

256
00:09:50,399 --> 00:09:51,899
it's the end of the world

257
00:09:51,899 --> 00:09:53,580
Maybe

258
00:09:53,580 --> 00:09:55,260
and encoding by the way is not

259
00:09:55,260 --> 00:09:57,660
encryption base64.

260
00:09:57,660 --> 00:10:01,620
Integrity hashes right sha3 and sha2 how

261
00:10:01,620 --> 00:10:03,180
many people knew that there was multiple

262
00:10:03,180 --> 00:10:05,760
Shaw families just out of curiosity

263
00:10:05,760 --> 00:10:08,040
okay did anybody know there was a Shaw

264
00:10:08,040 --> 00:10:10,019
zero in the shaw one

265
00:10:10,019 --> 00:10:13,860
yeah good less yeah avoid using the

266
00:10:13,860 --> 00:10:17,459
older Shaws the sha-2 and the sha-3 I'm

267
00:10:17,459 --> 00:10:20,580
I prefer shot three which is uh more of

268
00:10:20,580 --> 00:10:22,980
a cake the k-check sponge design it has

269
00:10:22,980 --> 00:10:25,500
resistance to side Channel but most

270
00:10:25,500 --> 00:10:27,360
people today are probably using shot too

271
00:10:27,360 --> 00:10:29,820
and they're probably using 256 which is

272
00:10:29,820 --> 00:10:32,339
fine but again you want to start to do

273
00:10:32,339 --> 00:10:35,940
384 you want to start expanding to 512

274
00:10:35,940 --> 00:10:38,600
from there

275
00:10:38,880 --> 00:10:41,040
and stop it with the Mickey D digest

276
00:10:41,040 --> 00:10:43,140
anybody know what I mean by Mickey D's

277
00:10:43,140 --> 00:10:46,019
Digest yell it out

278
00:10:46,019 --> 00:10:50,040
oh yeah so I still see it you see it we

279
00:10:50,040 --> 00:10:52,260
all see it that is the right color by

280
00:10:52,260 --> 00:10:55,440
the way so don't use it I see it in

281
00:10:55,440 --> 00:10:57,420
books even let's let's talk about digest

282
00:10:57,420 --> 00:10:59,579
let's go to md5 and these are crypto

283
00:10:59,579 --> 00:11:02,100
books that's just bad at the time well

284
00:11:02,100 --> 00:11:03,899
it's so 80s right it's kind of the Disco

285
00:11:03,899 --> 00:11:06,440
era thing it needs to go check sums

286
00:11:06,440 --> 00:11:08,700
crc's kind of a checked some as well

287
00:11:08,700 --> 00:11:11,040
they're not cryptographically secure

288
00:11:11,040 --> 00:11:13,500
functions these are fast they're great

289
00:11:13,500 --> 00:11:17,760
but other than that don't use them

290
00:11:17,760 --> 00:11:19,800
this is the availability part that I was

291
00:11:19,800 --> 00:11:21,899
talking about I'm talking about software

292
00:11:21,899 --> 00:11:23,640
crashes it could be Hardware as well but

293
00:11:23,640 --> 00:11:26,040
software crashes and hangs denial of

294
00:11:26,040 --> 00:11:26,880
service

295
00:11:26,880 --> 00:11:29,279
so I did a query of cve I think most of

296
00:11:29,279 --> 00:11:30,720
us know what these are but publicly

297
00:11:30,720 --> 00:11:33,000
known vulnerabilities I did this a few

298
00:11:33,000 --> 00:11:35,160
days ago which shows how quickly I

299
00:11:35,160 --> 00:11:37,260
prepare for the slides here

300
00:11:37,260 --> 00:11:39,959
um but I just take I did a type in there

301
00:11:39,959 --> 00:11:41,940
of crypto like that was my search query

302
00:11:41,940 --> 00:11:44,160
came up with 306 which I thought was

303
00:11:44,160 --> 00:11:46,940
kind of small but I wanted to focus on

304
00:11:46,940 --> 00:11:49,620
crypto libraries you know third-party

305
00:11:49,620 --> 00:11:51,959
libraries that that build crypto like go

306
00:11:51,959 --> 00:11:54,360
and some of these other python that have

307
00:11:54,360 --> 00:11:56,640
these and of these I just grabbed the

308
00:11:56,640 --> 00:11:58,740
first 11 and I was looking for things

309
00:11:58,740 --> 00:12:00,540
that look like a crash or look like

310
00:12:00,540 --> 00:12:02,579
something would be a hang so this one

311
00:12:02,579 --> 00:12:04,560
says unreasonable amount of time to

312
00:12:04,560 --> 00:12:06,480
finish kind of a hang here's an

313
00:12:06,480 --> 00:12:08,640
indefinite hang here's a buffer overflow

314
00:12:08,640 --> 00:12:10,920
here's an attacker can crash a server

315
00:12:10,920 --> 00:12:13,560
and here's one with the stack Overflow

316
00:12:13,560 --> 00:12:16,800
nearly half of these today of the latest

317
00:12:16,800 --> 00:12:19,140
at least for a few days ago are related

318
00:12:19,140 --> 00:12:21,720
to denial service attacks now

319
00:12:21,720 --> 00:12:24,240
this is more of a code robustness so

320
00:12:24,240 --> 00:12:26,160
when we tell teams that for example you

321
00:12:26,160 --> 00:12:28,320
need to go fuzz something whatever he

322
00:12:28,320 --> 00:12:30,180
said well that's a security issue it can

323
00:12:30,180 --> 00:12:32,519
be of course but it's really code

324
00:12:32,519 --> 00:12:34,380
robustness so any developer should be

325
00:12:34,380 --> 00:12:36,660
doing something of this testing and I'll

326
00:12:36,660 --> 00:12:38,220
show you what I mean by that and it's

327
00:12:38,220 --> 00:12:41,040
not really a crypto issue at all it's

328
00:12:41,040 --> 00:12:43,260
just an implementation of secure coding

329
00:12:43,260 --> 00:12:45,300
particularly for cryptography so

330
00:12:45,300 --> 00:12:47,519
recommendations if you're doing scans of

331
00:12:47,519 --> 00:12:49,500
your own code you should be doing that

332
00:12:49,500 --> 00:12:51,480
you should always have people looking at

333
00:12:51,480 --> 00:12:54,060
your own code manual code reviews and I

334
00:12:54,060 --> 00:12:56,040
highly recommend fuzzing

335
00:12:56,040 --> 00:12:58,680
fuzzing is where it's at and fuzzing is

336
00:12:58,680 --> 00:13:00,839
the kind of thing that will find these

337
00:13:00,839 --> 00:13:05,339
and easily find them in most cases

338
00:13:05,339 --> 00:13:08,220
all right the Cornerstone in my opinion

339
00:13:08,220 --> 00:13:11,160
of cryptography is randomization and

340
00:13:11,160 --> 00:13:13,680
Anonymous dog says cryptographically

341
00:13:13,680 --> 00:13:16,019
pseudo-random acts of kindness are

342
00:13:16,019 --> 00:13:18,779
deterministic my dog said that to me and

343
00:13:18,779 --> 00:13:20,940
I said you know right because the true

344
00:13:20,940 --> 00:13:23,820
happiness starts with the seed so when

345
00:13:23,820 --> 00:13:26,040
you hear the word pseudorandom think of

346
00:13:26,040 --> 00:13:29,579
it as a function made by a person but we

347
00:13:29,579 --> 00:13:33,060
can't make truly random things by coding

348
00:13:33,060 --> 00:13:36,420
it in software what we need is a seed a

349
00:13:36,420 --> 00:13:39,360
truly random seed to start things off

350
00:13:39,360 --> 00:13:41,700
but before I continue let me go over a

351
00:13:41,700 --> 00:13:43,560
bit on Randomness and I think most of us

352
00:13:43,560 --> 00:13:45,600
know but it has to deal with

353
00:13:45,600 --> 00:13:47,880
Independence right throwing the dice

354
00:13:47,880 --> 00:13:49,620
shouldn't matter what you threw the time

355
00:13:49,620 --> 00:13:50,880
before it shouldn't matter what you

356
00:13:50,880 --> 00:13:52,440
throw the time after it's like the

357
00:13:52,440 --> 00:13:54,180
gambler's dilemma I'm just going to keep

358
00:13:54,180 --> 00:13:57,000
playing the slot machine until it works

359
00:13:57,000 --> 00:14:00,120
uniformity we want to make sure that all

360
00:14:00,120 --> 00:14:02,279
of the bits if you have zero to six or

361
00:14:02,279 --> 00:14:03,779
zero to one I don't think there's a zero

362
00:14:03,779 --> 00:14:04,800
dice but

363
00:14:04,800 --> 00:14:06,540
um zero to ten we want to make sure that

364
00:14:06,540 --> 00:14:08,940
everything is evenly distributed and

365
00:14:08,940 --> 00:14:10,980
unpredictable even if you have even

366
00:14:10,980 --> 00:14:13,380
distribution we don't want to say 0 1 2

367
00:14:13,380 --> 00:14:15,480
3 4 and then come back again that's what

368
00:14:15,480 --> 00:14:17,100
we're talking about these are the three

369
00:14:17,100 --> 00:14:19,380
characteristics of randomization so

370
00:14:19,380 --> 00:14:20,459
we're going to do a thought exercise

371
00:14:20,459 --> 00:14:22,980
right now and this is something I do in

372
00:14:22,980 --> 00:14:26,040
my classes what I do is I ask them which

373
00:14:26,040 --> 00:14:29,579
bit string Is Random so number one I

374
00:14:29,579 --> 00:14:30,600
would give them something like that

375
00:14:30,600 --> 00:14:32,279
raise your hand if you think this is a

376
00:14:32,279 --> 00:14:34,320
random string

377
00:14:34,320 --> 00:14:36,000
nobody

378
00:14:36,000 --> 00:14:37,800
these security people man listen okay

379
00:14:37,800 --> 00:14:40,459
how about this

380
00:14:42,779 --> 00:14:45,779
okay this I got 3 000 of these so I'm

381
00:14:45,779 --> 00:14:47,519
going to go through every one of them

382
00:14:47,519 --> 00:14:49,860
okay so I kind of keep going and and and

383
00:14:49,860 --> 00:14:51,899
most okay most of these classes they're

384
00:14:51,899 --> 00:14:53,399
not security people it's an elective

385
00:14:53,399 --> 00:14:55,380
right so I I expect the people that

386
00:14:55,380 --> 00:14:57,540
already tell me before I did it and I

387
00:14:57,540 --> 00:14:58,680
kind of keep going then all of a sudden

388
00:14:58,680 --> 00:15:00,660
I see this thing where it's repeating

389
00:15:00,660 --> 00:15:02,579
and then I get something new like this

390
00:15:02,579 --> 00:15:04,139
so then I ask him the same question

391
00:15:04,139 --> 00:15:07,740
again based on these strings I said yes

392
00:15:07,740 --> 00:15:11,160
they're random no they're not random or

393
00:15:11,160 --> 00:15:12,959
not sure

394
00:15:12,959 --> 00:15:15,480
how many say not sure

395
00:15:15,480 --> 00:15:18,540
all right how many say these are random

396
00:15:18,540 --> 00:15:21,240
okay no not random

397
00:15:21,240 --> 00:15:22,380
okay

398
00:15:22,380 --> 00:15:23,699
somebody's giving me middle finger out

399
00:15:23,699 --> 00:15:27,060
there I know okay that is a one

400
00:15:27,060 --> 00:15:28,320
so

401
00:15:28,320 --> 00:15:30,959
it's not Randall and the reason why or

402
00:15:30,959 --> 00:15:32,880
I'm not saying not random we don't know

403
00:15:32,880 --> 00:15:34,440
because we don't know where the random

404
00:15:34,440 --> 00:15:35,699
numbers come from

405
00:15:35,699 --> 00:15:37,380
that is what the question should be in

406
00:15:37,380 --> 00:15:39,240
the beginning where do these random

407
00:15:39,240 --> 00:15:40,560
numbers come from

408
00:15:40,560 --> 00:15:44,519
and we don't know so a cryptographically

409
00:15:44,519 --> 00:15:47,040
secure pseudorandom number generator is

410
00:15:47,040 --> 00:15:49,920
a great name for your first kid and what

411
00:15:49,920 --> 00:15:52,500
I want to talk about is what is that it

412
00:15:52,500 --> 00:15:54,120
should have entropy now I'm talking

413
00:15:54,120 --> 00:15:56,339
about like on our computer system it

414
00:15:56,339 --> 00:15:58,320
should be like the keyboard the mouse

415
00:15:58,320 --> 00:16:00,000
movement maybe disk these are all device

416
00:16:00,000 --> 00:16:01,740
things right there's even special

417
00:16:01,740 --> 00:16:03,920
purpose Hardware that will look at

418
00:16:03,920 --> 00:16:06,420
Thermals and and temperatures and all of

419
00:16:06,420 --> 00:16:07,980
this thing in the entropy but these

420
00:16:07,980 --> 00:16:09,240
aren't things that we create from

421
00:16:09,240 --> 00:16:12,000
software this is sort of semi-natural

422
00:16:12,000 --> 00:16:13,440
occurring events because we invent these

423
00:16:13,440 --> 00:16:15,300
things but you get my point

424
00:16:15,300 --> 00:16:17,339
then through the generation is where we

425
00:16:17,339 --> 00:16:19,260
have this algorithm that somebody

426
00:16:19,260 --> 00:16:22,079
creates but it's taking that entropy

427
00:16:22,079 --> 00:16:24,779
pool and it's bringing it in and it's

428
00:16:24,779 --> 00:16:26,699
got some other things that make it

429
00:16:26,699 --> 00:16:28,079
cryptographic particularly

430
00:16:28,079 --> 00:16:30,240
cryptographically secure like the three

431
00:16:30,240 --> 00:16:32,399
things that we saw before the attributes

432
00:16:32,399 --> 00:16:34,740
of that that's what this is doing now

433
00:16:34,740 --> 00:16:36,660
I'm picking on Linux here you've

434
00:16:36,660 --> 00:16:38,399
probably seen the dev random and Dev U

435
00:16:38,399 --> 00:16:40,380
random you probably did Google all of

436
00:16:40,380 --> 00:16:42,000
them and those things go back all the

437
00:16:42,000 --> 00:16:45,720
way from like 1998 forms about this

438
00:16:45,720 --> 00:16:48,660
stuff and they're both getting their

439
00:16:48,660 --> 00:16:50,759
Source from the same place the

440
00:16:50,759 --> 00:16:53,040
difference is like blocking it could

441
00:16:53,040 --> 00:16:56,100
deplete it if you're using let's say you

442
00:16:56,100 --> 00:16:57,839
have an Amazon web server and you're

443
00:16:57,839 --> 00:17:00,180
using this constantly you could actually

444
00:17:00,180 --> 00:17:03,120
run out but for you random is the one

445
00:17:03,120 --> 00:17:05,939
that you want if you want this constant

446
00:17:05,939 --> 00:17:08,099
bit Source but it's a trick it isn't

447
00:17:08,099 --> 00:17:09,540
getting the bits all the way from the

448
00:17:09,540 --> 00:17:12,240
back it's actually using a stream Cipher

449
00:17:12,240 --> 00:17:15,000
called Chach on most distros and chachos

450
00:17:15,000 --> 00:17:16,679
are streams Cipher and does this magic

451
00:17:16,679 --> 00:17:18,900
where it just takes a nice seed and

452
00:17:18,900 --> 00:17:21,059
keeps putting the bits out it's the same

453
00:17:21,059 --> 00:17:22,859
with the Shah does with the k-cha care

454
00:17:22,859 --> 00:17:24,240
now I know somebody over there is

455
00:17:24,240 --> 00:17:25,799
complaining because they see this

456
00:17:25,799 --> 00:17:27,780
dancing couple over here and I know

457
00:17:27,780 --> 00:17:29,880
you're right it's not Cha-Cha it is

458
00:17:29,880 --> 00:17:32,160
salsa and the reason why I put that is

459
00:17:32,160 --> 00:17:34,559
salsa 20 was the original one same

460
00:17:34,559 --> 00:17:37,320
writer about a year before

461
00:17:37,320 --> 00:17:39,240
good catch

462
00:17:39,240 --> 00:17:42,620
all right next one

463
00:17:43,080 --> 00:17:45,179
this is the pathetically stupid random

464
00:17:45,179 --> 00:17:46,559
number generator

465
00:17:46,559 --> 00:17:50,160
and it's seen it a lot so the entropy is

466
00:17:50,160 --> 00:17:52,679
this there is no entropy that's the end

467
00:17:52,679 --> 00:17:55,020
if there's no entropy

468
00:17:55,020 --> 00:17:57,240
all bets are off but what happens is

469
00:17:57,240 --> 00:17:59,340
we'll get somebody that's using like

470
00:17:59,340 --> 00:18:01,559
SRAM how many use SRAM before

471
00:18:01,559 --> 00:18:04,679
and and say your confession Okay so

472
00:18:04,679 --> 00:18:07,500
esran is a seed and if you don't and and

473
00:18:07,500 --> 00:18:09,960
see in Linux like a c program you don't

474
00:18:09,960 --> 00:18:11,400
give any arguments it's going to give

475
00:18:11,400 --> 00:18:13,140
you Epoch seconds that's a number of

476
00:18:13,140 --> 00:18:16,620
seconds since January 1st 1970. that's

477
00:18:16,620 --> 00:18:19,380
that's your entropy right there and

478
00:18:19,380 --> 00:18:22,440
linearness is not incremental right and

479
00:18:22,440 --> 00:18:25,620
then Rand will take that and it'll give

480
00:18:25,620 --> 00:18:26,940
you again a pseudo-random number

481
00:18:26,940 --> 00:18:28,740
generator but you're already starting on

482
00:18:28,740 --> 00:18:31,559
a false Foundation

483
00:18:31,559 --> 00:18:33,120
so some developers will say well I'm

484
00:18:33,120 --> 00:18:35,280
just going to take my PID my process ID

485
00:18:35,280 --> 00:18:37,500
and I'm just going to concatenate that

486
00:18:37,500 --> 00:18:40,200
and what I get is this really big number

487
00:18:40,200 --> 00:18:41,820
so I'll take again this is about a week

488
00:18:41,820 --> 00:18:44,580
ago Epoch seconds and then I looked at

489
00:18:44,580 --> 00:18:47,160
what's the maximum number of process IDs

490
00:18:47,160 --> 00:18:50,820
I can have on my Kali Linux 64-bit and

491
00:18:50,820 --> 00:18:53,580
it's something like 4.1 million 4.2

492
00:18:53,580 --> 00:18:55,679
that's a lot right and if I take this

493
00:18:55,679 --> 00:18:57,720
total just create a big concatenated

494
00:18:57,720 --> 00:18:59,160
string and then

495
00:18:59,160 --> 00:19:02,280
turning into a long or whatever I get

496
00:19:02,280 --> 00:19:05,100
like 1.66 to the 10 to the 16th that's

497
00:19:05,100 --> 00:19:06,419
pretty good it's something you're not

498
00:19:06,419 --> 00:19:09,720
going to guess by yourself but

499
00:19:09,720 --> 00:19:11,280
remember I talked about deaths before

500
00:19:11,280 --> 00:19:13,559
AES right and why we don't use desk

501
00:19:13,559 --> 00:19:17,340
before so deaths it's key strength it's

502
00:19:17,340 --> 00:19:19,740
um it's about 2 to 56. the effective key

503
00:19:19,740 --> 00:19:22,440
strength is which is about 7.2 to 10 to

504
00:19:22,440 --> 00:19:27,299
16. in 1998 it was cracked I think for a

505
00:19:27,299 --> 00:19:29,100
few days but in 1999 it was broken

506
00:19:29,100 --> 00:19:30,840
within 22 hours

507
00:19:30,840 --> 00:19:34,260
so Das itself back a hundred years ago

508
00:19:34,260 --> 00:19:36,840
previous century

509
00:19:36,840 --> 00:19:38,520
seven to Tenth was already broke within

510
00:19:38,520 --> 00:19:40,919
a day so this is the problem with this

511
00:19:40,919 --> 00:19:42,840
first of all the key space is too small

512
00:19:42,840 --> 00:19:45,419
not enough bits and there's no entropy

513
00:19:45,419 --> 00:19:47,340
the reason why I bring this up and some

514
00:19:47,340 --> 00:19:49,080
of you probably already knew this

515
00:19:49,080 --> 00:19:50,880
is that

516
00:19:50,880 --> 00:19:53,820
when you borrow or you integrate say a

517
00:19:53,820 --> 00:19:56,100
python module that has cryptography

518
00:19:56,100 --> 00:19:59,840
a.net module or something like in go

519
00:19:59,840 --> 00:20:02,340
make sure you look under the covers to

520
00:20:02,340 --> 00:20:05,100
see where the randomness is coming from

521
00:20:05,100 --> 00:20:06,660
find out if they're doing something

522
00:20:06,660 --> 00:20:08,820
nonsense like that or they're not

523
00:20:08,820 --> 00:20:10,559
returning the number four I think

524
00:20:10,559 --> 00:20:12,780
somebody knows that joke already

525
00:20:12,780 --> 00:20:14,940
but you want to make sure that the

526
00:20:14,940 --> 00:20:16,740
randomness is indeed random where it's

527
00:20:16,740 --> 00:20:17,880
coming from because the rest of your

528
00:20:17,880 --> 00:20:19,559
crypto is is useless if it's not

529
00:20:19,559 --> 00:20:21,539
happening

530
00:20:21,539 --> 00:20:22,799
all right a little bit about Key

531
00:20:22,799 --> 00:20:23,760
Management

532
00:20:23,760 --> 00:20:25,799
um Charles Dickens of all people said a

533
00:20:25,799 --> 00:20:27,299
very little key will open a very heavy

534
00:20:27,299 --> 00:20:29,700
door door and so even Chuck knew that

535
00:20:29,700 --> 00:20:31,860
small bit keys can have disastrous

536
00:20:31,860 --> 00:20:34,200
consequences from there

537
00:20:34,200 --> 00:20:36,120
most of us probably already know that

538
00:20:36,120 --> 00:20:38,280
that not one key fits all so don't use

539
00:20:38,280 --> 00:20:40,620
the same key for multiple assets like

540
00:20:40,620 --> 00:20:42,419
your encryption one encryption 2 and

541
00:20:42,419 --> 00:20:44,940
whatever else that you have here and my

542
00:20:44,940 --> 00:20:46,980
analogy is a house and then you have a

543
00:20:46,980 --> 00:20:49,620
skeleton key with your Tesla which I

544
00:20:49,620 --> 00:20:51,120
think we can make money off of this I

545
00:20:51,120 --> 00:20:52,620
think that's kind of cool or something

546
00:20:52,620 --> 00:20:55,740
else and it's obvious if this key is

547
00:20:55,740 --> 00:20:57,179
defeated or leaked or whatever

548
00:20:57,179 --> 00:20:59,880
everything is released and or or

549
00:20:59,880 --> 00:21:02,160
discovered if you will so it defeats the

550
00:21:02,160 --> 00:21:04,020
defense in-depth thing the thing I want

551
00:21:04,020 --> 00:21:06,600
to tell more about is

552
00:21:06,600 --> 00:21:08,520
don't use the same key for different

553
00:21:08,520 --> 00:21:10,320
cryptographic schemes that's a little

554
00:21:10,320 --> 00:21:12,539
bit different so if you have a symmetric

555
00:21:12,539 --> 00:21:16,380
key and you say okay I'm also going to

556
00:21:16,380 --> 00:21:19,380
use the same key for hmacking or

557
00:21:19,380 --> 00:21:21,360
something like that that's a very very

558
00:21:21,360 --> 00:21:22,860
bad thing to do

559
00:21:22,860 --> 00:21:25,380
and what will happen over time if you're

560
00:21:25,380 --> 00:21:26,880
using this key especially in these

561
00:21:26,880 --> 00:21:29,400
different schemes is that the key will

562
00:21:29,400 --> 00:21:31,140
weaken and there's various crypto

563
00:21:31,140 --> 00:21:32,880
attacks that could take place and I've

564
00:21:32,880 --> 00:21:35,640
seen teams do this one alternative for

565
00:21:35,640 --> 00:21:36,960
whatever reason if you're just stuck

566
00:21:36,960 --> 00:21:39,179
with a single key is look into what they

567
00:21:39,179 --> 00:21:41,280
call Key derivation functions and

568
00:21:41,280 --> 00:21:42,480
there's different key derivation

569
00:21:42,480 --> 00:21:44,640
functions for different purposes again

570
00:21:44,640 --> 00:21:46,679
go back to look at nist or fips to find

571
00:21:46,679 --> 00:21:48,720
out the one that best described for you

572
00:21:48,720 --> 00:21:50,580
but all of these should have their own

573
00:21:50,580 --> 00:21:53,039
key and that's the takeaway from here

574
00:21:53,039 --> 00:21:54,960
never use your password as a key

575
00:21:54,960 --> 00:21:56,940
hopefully nobody's doing that I won't go

576
00:21:56,940 --> 00:21:58,679
over the math but at the end of the day

577
00:21:58,679 --> 00:22:00,299
if you're doing something like eight

578
00:22:00,299 --> 00:22:02,520
characters and you got 94 printable

579
00:22:02,520 --> 00:22:04,440
characters you just end up with

580
00:22:04,440 --> 00:22:05,940
something that's even less than what the

581
00:22:05,940 --> 00:22:08,039
desk key was and that's not a good idea

582
00:22:08,039 --> 00:22:10,679
but nist you says Hey nist told us about

583
00:22:10,679 --> 00:22:12,840
three years ago four years ago that

584
00:22:12,840 --> 00:22:15,000
complexity is dead that if we continue

585
00:22:15,000 --> 00:22:17,400
to expand on our keys we're gonna you

586
00:22:17,400 --> 00:22:19,679
know long passphrases is okay but

587
00:22:19,679 --> 00:22:21,960
remember it's not just about size but

588
00:22:21,960 --> 00:22:23,520
it's about having

589
00:22:23,520 --> 00:22:26,460
proper randomization in there and so I I

590
00:22:26,460 --> 00:22:28,440
kind of went off on a tangent and said

591
00:22:28,440 --> 00:22:31,200
to myself can a human being be a truly

592
00:22:31,200 --> 00:22:33,480
random number generator and if you go

593
00:22:33,480 --> 00:22:35,580
out you go down to this you know some

594
00:22:35,580 --> 00:22:38,100
people say yes some say no this is an

595
00:22:38,100 --> 00:22:40,500
actual age-old question so could you

596
00:22:40,500 --> 00:22:43,679
actually sit there and do like 256 bits

597
00:22:43,679 --> 00:22:46,200
of zeros and ones zeros and ones anybody

598
00:22:46,200 --> 00:22:48,360
can you be a truly random who says you

599
00:22:48,360 --> 00:22:50,658
can be

600
00:22:50,880 --> 00:22:53,100
who says you can't

601
00:22:53,100 --> 00:22:54,360
all right

602
00:22:54,360 --> 00:22:56,520
so I tried it I said well I don't know

603
00:22:56,520 --> 00:22:58,980
it seems like it's out so I sat in a

604
00:22:58,980 --> 00:23:01,020
dark room and I kept thinking of truly

605
00:23:01,020 --> 00:23:03,240
random numbers and I kept trying and I

606
00:23:03,240 --> 00:23:05,460
kept trying and this is what was coming

607
00:23:05,460 --> 00:23:07,140
out of my head and eventually I just

608
00:23:07,140 --> 00:23:08,880
flatlined so for me

609
00:23:08,880 --> 00:23:10,740
this could be truly random but probably

610
00:23:10,740 --> 00:23:13,320
not and would you want to actually think

611
00:23:13,320 --> 00:23:15,960
about that like 256 bits

612
00:23:15,960 --> 00:23:17,880
um Stow keys where the sun don't shine

613
00:23:17,880 --> 00:23:20,460
that's another piece Hardware is what we

614
00:23:20,460 --> 00:23:23,940
recommend so an HSN module a TPMS as

615
00:23:23,940 --> 00:23:26,120
well Windows 8 or Windows 11

616
00:23:26,120 --> 00:23:28,860
requires now that TPM is enabled at

617
00:23:28,860 --> 00:23:30,240
least but it's been there for quite a

618
00:23:30,240 --> 00:23:32,520
while or it may be something like a

619
00:23:32,520 --> 00:23:34,980
manageability engine as well the other

620
00:23:34,980 --> 00:23:36,299
piece that people kind of forget about

621
00:23:36,299 --> 00:23:39,120
is transmission of keys receiving keys

622
00:23:39,120 --> 00:23:40,799
so if you're doing something like Docker

623
00:23:40,799 --> 00:23:42,720
or kubernetes you might want to look

624
00:23:42,720 --> 00:23:45,059
into doing like Secrets which are

625
00:23:45,059 --> 00:23:46,620
awesome because you don't have to embed

626
00:23:46,620 --> 00:23:50,220
the keys into your program and it's if I

627
00:23:50,220 --> 00:23:51,539
mean if they're able to get the secrets

628
00:23:51,539 --> 00:23:53,400
they're already on the system itself and

629
00:23:53,400 --> 00:23:55,320
key encryption key so you're encrypting

630
00:23:55,320 --> 00:23:56,820
that secret key which means you have

631
00:23:56,820 --> 00:23:59,039
another key right so you might have to

632
00:23:59,039 --> 00:24:00,720
use something like hsms or whatever to

633
00:24:00,720 --> 00:24:03,539
do that also rotate your keys like you

634
00:24:03,539 --> 00:24:06,059
rotate your tires and do you rotate your

635
00:24:06,059 --> 00:24:08,159
tires do you rotate your keys when I'm

636
00:24:08,159 --> 00:24:09,539
talking about rotating Keys here

637
00:24:09,539 --> 00:24:11,880
changing them not like changing your

638
00:24:11,880 --> 00:24:14,580
your Mac key with your symmetric key or

639
00:24:14,580 --> 00:24:15,960
something like that I'm just saying

640
00:24:15,960 --> 00:24:18,059
actually refreshing your keys you got to

641
00:24:18,059 --> 00:24:19,980
do both but here's where people kind of

642
00:24:19,980 --> 00:24:22,799
get it wrong if I generated a key a year

643
00:24:22,799 --> 00:24:23,700
ago

644
00:24:23,700 --> 00:24:26,280
but I never use that key and I know that

645
00:24:26,280 --> 00:24:29,100
key for whatever reason is safe you

646
00:24:29,100 --> 00:24:30,960
don't need to generate another key

647
00:24:30,960 --> 00:24:33,360
it's the use of the key the number of

648
00:24:33,360 --> 00:24:35,400
bits that go across that key which

649
00:24:35,400 --> 00:24:37,380
matters so if you're generating a lot of

650
00:24:37,380 --> 00:24:40,320
data a lot of information that rotation

651
00:24:40,320 --> 00:24:42,960
cycle might be less than say a normal

652
00:24:42,960 --> 00:24:45,299
website that you have for every year now

653
00:24:45,299 --> 00:24:48,059
I often say that you know no means less

654
00:24:48,059 --> 00:24:51,000
rotation you might not be 100 certain

655
00:24:51,000 --> 00:24:52,860
that that key was not compromised anyway

656
00:24:52,860 --> 00:24:55,500
and even if you don't use it it might be

657
00:24:55,500 --> 00:24:57,299
a good idea to rotate it just for that

658
00:24:57,299 --> 00:24:58,559
reason only

659
00:24:58,559 --> 00:25:00,960
and a little bit about code signing

660
00:25:00,960 --> 00:25:04,080
never cross code signing key streams so

661
00:25:04,080 --> 00:25:06,419
code signing is good it protects you and

662
00:25:06,419 --> 00:25:08,340
your user so when you're Distributing

663
00:25:08,340 --> 00:25:10,380
your software code signing is the

664
00:25:10,380 --> 00:25:12,299
Integrity part in addition to the

665
00:25:12,299 --> 00:25:14,220
authenticity part with your certificates

666
00:25:14,220 --> 00:25:16,620
and it's also a very good strong

667
00:25:16,620 --> 00:25:19,080
mitigation against supply chain attacks

668
00:25:19,080 --> 00:25:21,240
so this is great we see teams do that

669
00:25:21,240 --> 00:25:24,000
but we do reviews to find out again how

670
00:25:24,000 --> 00:25:25,919
you're generating these certificates

671
00:25:25,919 --> 00:25:26,700
Etc

672
00:25:26,700 --> 00:25:28,500
and what we recommend is that you have

673
00:25:28,500 --> 00:25:31,620
two sets of keys one test this is the

674
00:25:31,620 --> 00:25:32,760
keys that you're running in your test

675
00:25:32,760 --> 00:25:34,980
environment and the other are production

676
00:25:34,980 --> 00:25:37,500
Keys which are golden and in all reality

677
00:25:37,500 --> 00:25:39,059
you should probably never have access to

678
00:25:39,059 --> 00:25:41,159
them as well so if you do something like

679
00:25:41,159 --> 00:25:43,620
on Amazon or apple you'll have a key

680
00:25:43,620 --> 00:25:45,659
Vault for the production Keys you

681
00:25:45,659 --> 00:25:48,360
probably read sometimes where test Keys

682
00:25:48,360 --> 00:25:50,580
become production keys in production

683
00:25:50,580 --> 00:25:52,799
release software that's a very bad thing

684
00:25:52,799 --> 00:25:55,080
so try to avoid that as much as possible

685
00:25:55,080 --> 00:25:57,419
but Adrian's wall here think of that one

686
00:25:57,419 --> 00:26:00,320
think of it that way

687
00:26:01,020 --> 00:26:04,440
okay practice yourization as well so in

688
00:26:04,440 --> 00:26:06,000
this case this is more for the

689
00:26:06,000 --> 00:26:09,059
developers if you're writing code and

690
00:26:09,059 --> 00:26:10,860
you're using a secret in your code make

691
00:26:10,860 --> 00:26:12,419
sure you use it just when you need it

692
00:26:12,419 --> 00:26:14,340
and then you zeroize it so if you got

693
00:26:14,340 --> 00:26:16,020
buffers or whatever you're programming

694
00:26:16,020 --> 00:26:18,480
delete it make sure it's gone remember

695
00:26:18,480 --> 00:26:20,580
heart bleed heart bleed is where they're

696
00:26:20,580 --> 00:26:22,080
getting asked hey can I get as much

697
00:26:22,080 --> 00:26:24,419
information as I can that type of thing

698
00:26:24,419 --> 00:26:26,880
and it was getting Secrets because these

699
00:26:26,880 --> 00:26:29,460
secrets were resident in memory and they

700
00:26:29,460 --> 00:26:31,559
weren't clean so many of that this type

701
00:26:31,559 --> 00:26:33,539
of thing probably could have prevented a

702
00:26:33,539 --> 00:26:36,179
lot of secret releases also for this

703
00:26:36,179 --> 00:26:37,799
hygiene storage

704
00:26:37,799 --> 00:26:40,919
zero eyes that is no longer needed as we

705
00:26:40,919 --> 00:26:43,140
would expect on the disk but when we do

706
00:26:43,140 --> 00:26:45,240
red teaming where I work the first place

707
00:26:45,240 --> 00:26:47,820
I go is I look at your uninstall install

708
00:26:47,820 --> 00:26:49,980
install Scripts particularly on install

709
00:26:49,980 --> 00:26:52,080
scripts because a lot of times

710
00:26:52,080 --> 00:26:54,179
you didn't clean it up enough and if

711
00:26:54,179 --> 00:26:56,520
this is a multi-tenant system that could

712
00:26:56,520 --> 00:26:58,080
be a problem so remember all of the

713
00:26:58,080 --> 00:27:00,059
other things in your Universe in your

714
00:27:00,059 --> 00:27:01,440
product for that

715
00:27:01,440 --> 00:27:03,179
and this really quick and I'm sorry it's

716
00:27:03,179 --> 00:27:04,860
a code example but I wanted to make a

717
00:27:04,860 --> 00:27:06,059
really good point

718
00:27:06,059 --> 00:27:08,100
this program here all it's doing this

719
00:27:08,100 --> 00:27:09,480
little function it's getting a secret

720
00:27:09,480 --> 00:27:11,760
key it's decrypting some stuff and then

721
00:27:11,760 --> 00:27:13,740
you see at the bottom here this zero

722
00:27:13,740 --> 00:27:15,419
eyes key right

723
00:27:15,419 --> 00:27:17,880
if you're Optimizer we're talking C C

724
00:27:17,880 --> 00:27:20,159
plus plus here your favorite languages

725
00:27:20,159 --> 00:27:22,860
Fortran I hear somebody over there

726
00:27:22,860 --> 00:27:23,880
um

727
00:27:23,880 --> 00:27:25,799
the optimizer might actually take that

728
00:27:25,799 --> 00:27:27,960
away that zeroized key it might say hey

729
00:27:27,960 --> 00:27:29,880
that key is not being used anymore I'm

730
00:27:29,880 --> 00:27:31,919
your friend I'm not going to do that for

731
00:27:31,919 --> 00:27:33,720
you so be very careful of that

732
00:27:33,720 --> 00:27:37,340
particularly for optimizations

733
00:27:37,799 --> 00:27:39,779
how many people here have put secrets in

734
00:27:39,779 --> 00:27:41,640
their code and where and what git repo

735
00:27:41,640 --> 00:27:44,779
was that I just want to know

736
00:27:44,779 --> 00:27:47,580
yeah I mean we're doing API tokens

737
00:27:47,580 --> 00:27:49,500
passwords again not necessarily crypto

738
00:27:49,500 --> 00:27:51,480
but it all kind of comes together right

739
00:27:51,480 --> 00:27:53,760
last year from get Guardian I think some

740
00:27:53,760 --> 00:27:55,559
of you have seen is six million secrets

741
00:27:55,559 --> 00:27:59,460
in GitHub double from the year before

742
00:27:59,460 --> 00:28:04,020
place bets on 2023 2022 yeah no there's

743
00:28:04,020 --> 00:28:05,940
no excuse I think war crimes I think

744
00:28:05,940 --> 00:28:07,260
that's what I'm thinking here you should

745
00:28:07,260 --> 00:28:09,240
never do that and there's a lot of good

746
00:28:09,240 --> 00:28:11,100
stuff out there if it happens to you

747
00:28:11,100 --> 00:28:13,740
just change that secret right away

748
00:28:13,740 --> 00:28:15,600
then then they can't use it anymore and

749
00:28:15,600 --> 00:28:18,600
then go and try to fix the code for that

750
00:28:18,600 --> 00:28:20,820
all right last thing I'm going to talk

751
00:28:20,820 --> 00:28:22,260
about and this is going to be probably

752
00:28:22,260 --> 00:28:24,240
about a 30 seconds here

753
00:28:24,240 --> 00:28:26,520
TLS everybody knows a Rube Goldberg

754
00:28:26,520 --> 00:28:29,460
machine this is TLS 11 things prime

755
00:28:29,460 --> 00:28:31,620
number this is all the stuff you have to

756
00:28:31,620 --> 00:28:34,140
do in order to protect that website from

757
00:28:34,140 --> 00:28:36,299
whatever it is that you're having on

758
00:28:36,299 --> 00:28:38,340
that website so

759
00:28:38,340 --> 00:28:40,500
um I think these are passed out but many

760
00:28:40,500 --> 00:28:42,720
of the things I talked about today are

761
00:28:42,720 --> 00:28:45,120
there but through this list I would

762
00:28:45,120 --> 00:28:47,220
ultimately say towards the bottom make

763
00:28:47,220 --> 00:28:49,080
sure you test your environment there's a

764
00:28:49,080 --> 00:28:51,960
good script called test SSL dot sh and

765
00:28:51,960 --> 00:28:53,220
all of that just make sure that your

766
00:28:53,220 --> 00:28:55,200
configurations are correct but most of

767
00:28:55,200 --> 00:28:56,400
the other stuff that I talked about

768
00:28:56,400 --> 00:28:58,440
using weak ciphers and all that are

769
00:28:58,440 --> 00:29:01,200
covered here and that's it so any

770
00:29:01,200 --> 00:29:03,559
questions

771
00:29:07,440 --> 00:29:11,539
all right that's good thanks guys

