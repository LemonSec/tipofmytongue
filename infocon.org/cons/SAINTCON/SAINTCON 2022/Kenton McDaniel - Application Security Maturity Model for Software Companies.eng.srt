1
00:00:00,060 --> 00:00:01,680
hey everyone thanks for coming to my

2
00:00:01,680 --> 00:00:03,600
presentation about uh application

3
00:00:03,600 --> 00:00:06,600
security maturity model this is most of

4
00:00:06,600 --> 00:00:08,220
this presentation is specifically geared

5
00:00:08,220 --> 00:00:10,380
towards software companies but it's also

6
00:00:10,380 --> 00:00:13,019
about how we can approach the vendors

7
00:00:13,019 --> 00:00:14,639
that we deal with and ask them about

8
00:00:14,639 --> 00:00:16,199
their application security maturity

9
00:00:16,199 --> 00:00:18,660
model and ask them what pieces they do

10
00:00:18,660 --> 00:00:20,760
and do not have implemented so to start

11
00:00:20,760 --> 00:00:22,800
off my name is Kenton McDaniel I love

12
00:00:22,800 --> 00:00:24,720
cracking passwords and I love prevask

13
00:00:24,720 --> 00:00:26,820
those are my two favorite things about

14
00:00:26,820 --> 00:00:28,619
infosec I like lots of other stuff too

15
00:00:28,619 --> 00:00:30,920
but those two things are my favorite

16
00:00:30,920 --> 00:00:32,700
so talking a little bit about

17
00:00:32,700 --> 00:00:34,440
application security and by the way it's

18
00:00:34,440 --> 00:00:35,940
super bright up here and super dark out

19
00:00:35,940 --> 00:00:38,219
there if you have a question and I don't

20
00:00:38,219 --> 00:00:40,460
see you raise your hand just yell

21
00:00:40,460 --> 00:00:43,640
but feel free to ask questions during

22
00:00:43,640 --> 00:00:46,020
and just interrupt me you can Heckle if

23
00:00:46,020 --> 00:00:48,000
you want to as well so

24
00:00:48,000 --> 00:00:50,820
application security is the idea that we

25
00:00:50,820 --> 00:00:53,520
as software vendors should secure our

26
00:00:53,520 --> 00:00:55,920
applications to protect the company and

27
00:00:55,920 --> 00:00:58,440
to protect our customers

28
00:00:58,440 --> 00:01:00,660
and the methodology by which we develop

29
00:01:00,660 --> 00:01:02,219
software is the software development

30
00:01:02,219 --> 00:01:04,500
lifecycle or the sdlc so sdlc is a term

31
00:01:04,500 --> 00:01:06,180
I'm going to be using

32
00:01:06,180 --> 00:01:08,400
um if you've ever heard of it it's just

33
00:01:08,400 --> 00:01:10,740
the idea that my developers write some

34
00:01:10,740 --> 00:01:12,840
code it goes through a testing process

35
00:01:12,840 --> 00:01:15,000
whether that's automated or manual and

36
00:01:15,000 --> 00:01:16,260
it gets deployed so there's this

37
00:01:16,260 --> 00:01:18,119
software development life cycle that all

38
00:01:18,119 --> 00:01:19,799
code should go through before it reaches

39
00:01:19,799 --> 00:01:21,659
our customers hands where does security

40
00:01:21,659 --> 00:01:24,780
fit inside of that sdlc as your org

41
00:01:24,780 --> 00:01:28,080
matures it's sdlc security should be

42
00:01:28,080 --> 00:01:30,060
adopted earlier and earlier into the

43
00:01:30,060 --> 00:01:31,799
life cycle to the point where it's

44
00:01:31,799 --> 00:01:33,900
embedded in every single stage and

45
00:01:33,900 --> 00:01:36,000
thought of in every single stage but it

46
00:01:36,000 --> 00:01:38,159
is a process no company

47
00:01:38,159 --> 00:01:40,400
goes from zero to best practice

48
00:01:40,400 --> 00:01:42,600
overnight you don't even get there

49
00:01:42,600 --> 00:01:45,420
within years it's a long process to

50
00:01:45,420 --> 00:01:46,740
implement your application security

51
00:01:46,740 --> 00:01:48,240
maturity

52
00:01:48,240 --> 00:01:52,500
so you need significant investment in

53
00:01:52,500 --> 00:01:56,280
people and tools no one platform no one

54
00:01:56,280 --> 00:01:58,380
anything will solve this problem for you

55
00:01:58,380 --> 00:02:00,540
you have to invest heavily in the right

56
00:02:00,540 --> 00:02:02,579
people and the right tools which

57
00:02:02,579 --> 00:02:05,399
requires a lot of executive buy-in as

58
00:02:05,399 --> 00:02:07,500
well so if your Executives aren't bought

59
00:02:07,500 --> 00:02:09,360
into application security you won't be

60
00:02:09,360 --> 00:02:10,739
successful

61
00:02:10,739 --> 00:02:13,620
if your team is not bought into

62
00:02:13,620 --> 00:02:14,879
application security you won't be

63
00:02:14,879 --> 00:02:17,760
successful so these are rough outlines

64
00:02:17,760 --> 00:02:20,160
in my head of what the phases are any of

65
00:02:20,160 --> 00:02:21,840
these disciplines can be adopted at any

66
00:02:21,840 --> 00:02:23,700
time it doesn't have to go beginning

67
00:02:23,700 --> 00:02:26,040
maturing platform and Innovative but

68
00:02:26,040 --> 00:02:28,260
where I see it is when you're starting

69
00:02:28,260 --> 00:02:31,379
out you focus on certain things and when

70
00:02:31,379 --> 00:02:32,760
you're starting to get more mature you

71
00:02:32,760 --> 00:02:34,800
focus on different things

72
00:02:34,800 --> 00:02:36,480
but that doesn't mean that you can't

73
00:02:36,480 --> 00:02:38,520
adopt them all at once I don't recommend

74
00:02:38,520 --> 00:02:40,500
it unless you really feel like you

75
00:02:40,500 --> 00:02:42,900
understand the space though you need to

76
00:02:42,900 --> 00:02:45,420
be flexible too because as soon as you

77
00:02:45,420 --> 00:02:46,980
start introducing application security

78
00:02:46,980 --> 00:02:50,760
into your sdlc your developers will

79
00:02:50,760 --> 00:02:52,980
either be super excited and want to help

80
00:02:52,980 --> 00:02:55,379
or hate it hate it completely and not

81
00:02:55,379 --> 00:02:57,060
want to buy in or somewhere in between

82
00:02:57,060 --> 00:02:59,819
so you have to gauge your process

83
00:02:59,819 --> 00:03:01,620
small incremental steps of building

84
00:03:01,620 --> 00:03:05,180
appsec is the way to do it

85
00:03:05,519 --> 00:03:07,560
so like I said you have to have funding

86
00:03:07,560 --> 00:03:10,019
and executive commitment I said that

87
00:03:10,019 --> 00:03:11,879
twice because it's incredibly important

88
00:03:11,879 --> 00:03:13,680
if you don't have executive commitment

89
00:03:13,680 --> 00:03:16,019
you won't be successful because at times

90
00:03:16,019 --> 00:03:18,360
your application security process will

91
00:03:18,360 --> 00:03:20,220
slow your development

92
00:03:20,220 --> 00:03:22,620
and could stop development completely so

93
00:03:22,620 --> 00:03:24,420
if you don't have that commitment from

94
00:03:24,420 --> 00:03:26,000
your executive level

95
00:03:26,000 --> 00:03:29,099
leadership when you stop development to

96
00:03:29,099 --> 00:03:31,620
address application security issues they

97
00:03:31,620 --> 00:03:33,120
will be upset but if you have that

98
00:03:33,120 --> 00:03:34,560
buy-in there will be an understanding

99
00:03:34,560 --> 00:03:36,599
there and a commitment to application

100
00:03:36,599 --> 00:03:38,940
security excellence

101
00:03:38,940 --> 00:03:40,680
and by the way I'm going to talk about

102
00:03:40,680 --> 00:03:42,959
multiple disciplines no one person

103
00:03:42,959 --> 00:03:45,659
should accept all of these disciplines

104
00:03:45,659 --> 00:03:48,840
as their role if they do they are not

105
00:03:48,840 --> 00:03:51,120
able to be excellent in those roles

106
00:03:51,120 --> 00:03:52,440
right we're spreading people Way Too

107
00:03:52,440 --> 00:03:54,720
Thin if we say I've got you know one

108
00:03:54,720 --> 00:03:56,220
abstract person who does all of it

109
00:03:56,220 --> 00:03:59,099
that's not good for our app SEC people

110
00:03:59,099 --> 00:04:01,319
we need to spread out the role and hire

111
00:04:01,319 --> 00:04:03,120
more people and I and I know hiring is

112
00:04:03,120 --> 00:04:04,860
tough right it's all about time money

113
00:04:04,860 --> 00:04:07,680
and resources so but in order to be

114
00:04:07,680 --> 00:04:09,299
truly excellent you have to have the

115
00:04:09,299 --> 00:04:10,500
right people

116
00:04:10,500 --> 00:04:12,659
so beginning discipline when you're

117
00:04:12,659 --> 00:04:14,519
beginning you recognize hey we should do

118
00:04:14,519 --> 00:04:16,620
something about application security the

119
00:04:16,620 --> 00:04:18,478
code that we write is consumed by our

120
00:04:18,478 --> 00:04:20,880
customers we should do something to

121
00:04:20,880 --> 00:04:23,280
secure that code even spreading

122
00:04:23,280 --> 00:04:26,160
awareness of that is a step right even

123
00:04:26,160 --> 00:04:27,900
just saying hey we should do something

124
00:04:27,900 --> 00:04:30,120
is a step it puts it in your developers

125
00:04:30,120 --> 00:04:32,400
minds and your their leadership Minds

126
00:04:32,400 --> 00:04:34,800
that we should be doing something about

127
00:04:34,800 --> 00:04:37,820
our application security

128
00:04:38,100 --> 00:04:40,199
the tools tactics and procedures for the

129
00:04:40,199 --> 00:04:42,419
beginning discipline are static source

130
00:04:42,419 --> 00:04:44,580
code analysis so sast

131
00:04:44,580 --> 00:04:46,440
by raise of hands has anyone ever dealt

132
00:04:46,440 --> 00:04:49,080
with a SAS tool I'm shielding my

133
00:04:49,080 --> 00:04:51,240
instructions okay cool awesome so we

134
00:04:51,240 --> 00:04:52,740
have we have some awareness of what SAS

135
00:04:52,740 --> 00:04:54,240
is right and then we've got manual

136
00:04:54,240 --> 00:04:55,740
application testing and secure code

137
00:04:55,740 --> 00:04:57,660
reviews I would say those are your

138
00:04:57,660 --> 00:04:59,580
foundational pieces that help you build

139
00:04:59,580 --> 00:05:01,919
your appsec program so let's talk a

140
00:05:01,919 --> 00:05:04,740
little bit about sast so

141
00:05:04,740 --> 00:05:06,300
the for anyone who's not familiar the

142
00:05:06,300 --> 00:05:09,060
idea behind sast is my code gets scanned

143
00:05:09,060 --> 00:05:11,940
on regular interval intervals hopefully

144
00:05:11,940 --> 00:05:13,680
every single time someone commits a

145
00:05:13,680 --> 00:05:16,740
piece of code or pre-commit even that

146
00:05:16,740 --> 00:05:18,600
code gets scanned

147
00:05:18,600 --> 00:05:21,300
four known vulnerability patterns and

148
00:05:21,300 --> 00:05:23,940
types that's all it is so it's not a

149
00:05:23,940 --> 00:05:25,560
silver bullet a lot of

150
00:05:25,560 --> 00:05:27,360
there's some really good SAS vendors out

151
00:05:27,360 --> 00:05:28,740
there and there's some that try to tell

152
00:05:28,740 --> 00:05:30,120
you all you have to do is Implement our

153
00:05:30,120 --> 00:05:32,280
SAS tool and you will remediate all

154
00:05:32,280 --> 00:05:33,840
vulnerabilities before they hit

155
00:05:33,840 --> 00:05:35,820
production they're lying to you they

156
00:05:35,820 --> 00:05:37,919
can't do that right I mean there's logic

157
00:05:37,919 --> 00:05:39,840
bugs there's configuration bugs they

158
00:05:39,840 --> 00:05:42,060
don't understand the space completely so

159
00:05:42,060 --> 00:05:44,639
SAS is just one tool in Your Arsenal to

160
00:05:44,639 --> 00:05:47,039
help your code be secure by checking for

161
00:05:47,039 --> 00:05:48,539
patterns

162
00:05:48,539 --> 00:05:50,820
and it gives you baselines though if

163
00:05:50,820 --> 00:05:52,979
you're adopting Legacy code bases into

164
00:05:52,979 --> 00:05:55,259
your SAS platform you get baselines of

165
00:05:55,259 --> 00:05:57,360
what do we look like now so that we can

166
00:05:57,360 --> 00:06:00,120
set goals achievable goals for what the

167
00:06:00,120 --> 00:06:01,500
future of the code base looks like

168
00:06:01,500 --> 00:06:03,600
because it's very

169
00:06:03,600 --> 00:06:05,639
not very often that we just get to go

170
00:06:05,639 --> 00:06:07,440
full Greenfield right we know we hardly

171
00:06:07,440 --> 00:06:09,000
ever get to be like let's just build a

172
00:06:09,000 --> 00:06:10,979
complete code base from scratch that

173
00:06:10,979 --> 00:06:12,720
never has had any other Legacy code

174
00:06:12,720 --> 00:06:14,699
we're bringing Legacy Solutions in and

175
00:06:14,699 --> 00:06:16,680
we're implementing controls within those

176
00:06:16,680 --> 00:06:18,479
Legacy Solutions

177
00:06:18,479 --> 00:06:21,120
there's a lot of paid options for SAS

178
00:06:21,120 --> 00:06:24,259
there's a ton of free options as well

179
00:06:24,259 --> 00:06:27,240
so you have to mix your budget your

180
00:06:27,240 --> 00:06:28,860
hosting model your licensing model and

181
00:06:28,860 --> 00:06:30,360
the features that you want talk a little

182
00:06:30,360 --> 00:06:32,580
bit about the budget part that's just

183
00:06:32,580 --> 00:06:34,319
the dollars and cents the hosting model

184
00:06:34,319 --> 00:06:36,720
though is it Cloud hosted is that okay

185
00:06:36,720 --> 00:06:40,620
to take your source off-prem and take it

186
00:06:40,620 --> 00:06:42,720
up to the cloud is that okay for some

187
00:06:42,720 --> 00:06:45,060
orgs nope not okay so you got to go okay

188
00:06:45,060 --> 00:06:47,580
I got to be on-prem completely

189
00:06:47,580 --> 00:06:50,220
so you have to understand the risk

190
00:06:50,220 --> 00:06:51,600
profile that your company is willing to

191
00:06:51,600 --> 00:06:53,639
accept with their source code and it may

192
00:06:53,639 --> 00:06:55,560
change and so that opens up some doors

193
00:06:55,560 --> 00:06:57,479
for you for vendors the licensing model

194
00:06:57,479 --> 00:07:00,419
as well is it licensed per developer is

195
00:07:00,419 --> 00:07:02,340
it licensed for the entire company is it

196
00:07:02,340 --> 00:07:04,380
licensed by the number of times you run

197
00:07:04,380 --> 00:07:06,960
the tool there's all kinds of Licensing

198
00:07:06,960 --> 00:07:08,280
models that you can get into and if you

199
00:07:08,280 --> 00:07:09,720
don't pay attention

200
00:07:09,720 --> 00:07:12,240
your spend will Skyrocket right because

201
00:07:12,240 --> 00:07:13,740
you're thinking oh cool we're licensed

202
00:07:13,740 --> 00:07:15,300
for everything well yeah you may be

203
00:07:15,300 --> 00:07:17,280
licensed up to a threshold you turn it

204
00:07:17,280 --> 00:07:19,199
on for all your legacy products all of a

205
00:07:19,199 --> 00:07:20,880
sudden you spend just eclipsed what you

206
00:07:20,880 --> 00:07:22,319
were supposed to be able to spend on it

207
00:07:22,319 --> 00:07:24,180
and then the features

208
00:07:24,180 --> 00:07:25,979
does it support all the languages that

209
00:07:25,979 --> 00:07:27,780
you want to scan does it support the

210
00:07:27,780 --> 00:07:30,120
platforms that you want to scan not all

211
00:07:30,120 --> 00:07:32,340
of these are equal and some of them are

212
00:07:32,340 --> 00:07:34,020
super awesome at the specific thing they

213
00:07:34,020 --> 00:07:35,759
do but they're not great at the others

214
00:07:35,759 --> 00:07:37,979
so you have to balance what is most

215
00:07:37,979 --> 00:07:41,340
impactful for your organization

216
00:07:41,340 --> 00:07:43,139
and also all tools will have false

217
00:07:43,139 --> 00:07:45,479
positives any sales person that tells

218
00:07:45,479 --> 00:07:47,460
you their tool has zero false positives

219
00:07:47,460 --> 00:07:49,080
is lying to you because they don't

220
00:07:49,080 --> 00:07:50,340
understand the nature of a false

221
00:07:50,340 --> 00:07:51,180
positive

222
00:07:51,180 --> 00:07:53,280
right so you have to have someone who

223
00:07:53,280 --> 00:07:54,780
can deal with that you have to have

224
00:07:54,780 --> 00:07:56,160
someone who can triage the false

225
00:07:56,160 --> 00:07:58,020
positives turn them into workable

226
00:07:58,020 --> 00:08:00,900
tickets if they are true positives and

227
00:08:00,900 --> 00:08:02,400
look at the false positive and say you

228
00:08:02,400 --> 00:08:04,440
know what yeah that looks like that SQL

229
00:08:04,440 --> 00:08:06,060
injection but it's really not and here's

230
00:08:06,060 --> 00:08:07,080
why

231
00:08:07,080 --> 00:08:09,180
because these SAS tools are pretty good

232
00:08:09,180 --> 00:08:10,979
at finding what they think are

233
00:08:10,979 --> 00:08:12,780
vulnerable implementation patterns but

234
00:08:12,780 --> 00:08:14,160
they're not perfect because no piece of

235
00:08:14,160 --> 00:08:16,560
software is and then

236
00:08:16,560 --> 00:08:18,539
it takes a lot of discipline and

237
00:08:18,539 --> 00:08:20,580
studying to be the person who can triage

238
00:08:20,580 --> 00:08:22,319
those results

239
00:08:22,319 --> 00:08:24,300
look at them and say yeah that's a true

240
00:08:24,300 --> 00:08:26,099
positive or yeah that's a false positive

241
00:08:26,099 --> 00:08:28,560
because it's not just a developer thing

242
00:08:28,560 --> 00:08:31,020
you have to be able to look beyond the

243
00:08:31,020 --> 00:08:33,360
code that's written and say yes this is

244
00:08:33,360 --> 00:08:35,219
vulnerable and here's why you know

245
00:08:35,219 --> 00:08:37,260
ideally it's because I've exploited it

246
00:08:37,260 --> 00:08:38,880
in the past in this type of

247
00:08:38,880 --> 00:08:40,200
implementation

248
00:08:40,200 --> 00:08:43,020
so I know that it's vulnerable

249
00:08:43,020 --> 00:08:44,940
manually testing so I talked a little

250
00:08:44,940 --> 00:08:45,899
bit about SAS now we'll talk about

251
00:08:45,899 --> 00:08:48,240
manual application security testing you

252
00:08:48,240 --> 00:08:50,459
strive for maximum coverage by testing

253
00:08:50,459 --> 00:08:52,740
with a proven methodology whether that

254
00:08:52,740 --> 00:08:54,540
methodology is homegrown if you make

255
00:08:54,540 --> 00:08:56,519
your own methodology but you prove it

256
00:08:56,519 --> 00:08:59,279
over a time frame fantastic

257
00:08:59,279 --> 00:09:01,500
but developing a proven methodology

258
00:09:01,500 --> 00:09:04,140
takes time OAS top 10 is a great

259
00:09:04,140 --> 00:09:06,300
methodology to go by there's tons of

260
00:09:06,300 --> 00:09:09,000
resources out there about application

261
00:09:09,000 --> 00:09:11,160
security testing methodologies I

262
00:09:11,160 --> 00:09:12,959
recommend you build your own by taking

263
00:09:12,959 --> 00:09:15,360
the best pieces of other methodologies

264
00:09:15,360 --> 00:09:16,920
and Frameworks out there it's like

265
00:09:16,920 --> 00:09:18,959
compliance Frameworks if you implement

266
00:09:18,959 --> 00:09:20,580
one single compliance framework you're

267
00:09:20,580 --> 00:09:22,500
going to be missing pieces of what's

268
00:09:22,500 --> 00:09:24,540
important to your organization

269
00:09:24,540 --> 00:09:26,459
so your app SEC team should strive to

270
00:09:26,459 --> 00:09:28,560
implement a testing methodology that

271
00:09:28,560 --> 00:09:30,660
works for them and manual testing is

272
00:09:30,660 --> 00:09:33,600
still huge manual testing is a very

273
00:09:33,600 --> 00:09:35,580
crucial part of your application

274
00:09:35,580 --> 00:09:37,560
security platform you have to have

275
00:09:37,560 --> 00:09:39,360
people there trying to exploit those

276
00:09:39,360 --> 00:09:41,519
vulnerabilities because like I said

277
00:09:41,519 --> 00:09:43,260
you've got the source code but then

278
00:09:43,260 --> 00:09:45,480
you've got how it's deployed when the

279
00:09:45,480 --> 00:09:47,220
source code's fine but I deploy it in an

280
00:09:47,220 --> 00:09:48,480
environment

281
00:09:48,480 --> 00:09:50,700
that creates a new vulnerability can I

282
00:09:50,700 --> 00:09:52,080
prove it by exploiting it right it's

283
00:09:52,080 --> 00:09:55,080
either POC or get out that's that's the

284
00:09:55,080 --> 00:09:57,360
thing right can I exploit it yes if I

285
00:09:57,360 --> 00:09:59,820
can as a ticket if I can't it's not a

286
00:09:59,820 --> 00:10:01,620
ticket

287
00:10:01,620 --> 00:10:04,320
okay so secure code review the idea

288
00:10:04,320 --> 00:10:05,459
behind

289
00:10:05,459 --> 00:10:08,279
implementing a security focus into your

290
00:10:08,279 --> 00:10:10,019
code review process with your developers

291
00:10:10,019 --> 00:10:12,360
so that they recognize some of these

292
00:10:12,360 --> 00:10:14,339
things and this takes time but it's a

293
00:10:14,339 --> 00:10:16,260
great thing you can start to create

294
00:10:16,260 --> 00:10:18,420
pockets of security Excellence within

295
00:10:18,420 --> 00:10:19,860
your development organizations I'll talk

296
00:10:19,860 --> 00:10:22,140
a little bit about security champions

297
00:10:22,140 --> 00:10:25,740
so maturing discipline so you'll see the

298
00:10:25,740 --> 00:10:27,660
maturing discipline adds one new thing

299
00:10:27,660 --> 00:10:30,060
but we're just expanding our coverage

300
00:10:30,060 --> 00:10:32,220
and our focus of two of the prior things

301
00:10:32,220 --> 00:10:35,279
right so SAS manual security testing and

302
00:10:35,279 --> 00:10:36,720
now we're adding Dynamic application

303
00:10:36,720 --> 00:10:39,060
security testing so

304
00:10:39,060 --> 00:10:41,820
the difference here is so I'll go back

305
00:10:41,820 --> 00:10:43,980
real quick SAS we're just expanding our

306
00:10:43,980 --> 00:10:45,839
usage of it right where when we're

307
00:10:45,839 --> 00:10:47,339
beginning we may have just targeted one

308
00:10:47,339 --> 00:10:49,019
critical code base but now we're trying

309
00:10:49,019 --> 00:10:50,880
to roll it out to everything that we own

310
00:10:50,880 --> 00:10:52,440
to make sure that we've got full

311
00:10:52,440 --> 00:10:55,200
coverage everywhere that matters to us

312
00:10:55,200 --> 00:10:56,820
and we're expanding out our manual

313
00:10:56,820 --> 00:10:58,860
security testing so we're we're trying

314
00:10:58,860 --> 00:11:00,600
to get better at developing those and

315
00:11:00,600 --> 00:11:02,940
then Dynamic is using tools to perform

316
00:11:02,940 --> 00:11:05,160
Dynamic testing against the running

317
00:11:05,160 --> 00:11:06,360
applications so that's the difference

318
00:11:06,360 --> 00:11:08,220
static is I've got some Source I'm

319
00:11:08,220 --> 00:11:10,260
analyzing it Dynamic is hey something's

320
00:11:10,260 --> 00:11:12,300
running here I'm going to start running

321
00:11:12,300 --> 00:11:14,220
something against it who's ever has

322
00:11:14,220 --> 00:11:15,839
anyone ever used a burp Suite in the

323
00:11:15,839 --> 00:11:17,100
room

324
00:11:17,100 --> 00:11:19,140
love those show of hands love burp sweet

325
00:11:19,140 --> 00:11:21,120
so much has anyone ever used burp sweet

326
00:11:21,120 --> 00:11:23,100
Enterprise

327
00:11:23,100 --> 00:11:25,140
I think it's a fantastic tool and that's

328
00:11:25,140 --> 00:11:27,180
kind of the idea behind Burke Street

329
00:11:27,180 --> 00:11:30,000
Enterprise was to be able to have

330
00:11:30,000 --> 00:11:31,560
something persistently running against

331
00:11:31,560 --> 00:11:33,240
new workloads

332
00:11:33,240 --> 00:11:35,579
that you can point at it with a steady

333
00:11:35,579 --> 00:11:37,440
set of tests

334
00:11:37,440 --> 00:11:39,240
and have it execute those tests and give

335
00:11:39,240 --> 00:11:41,339
you back results now that sounds static

336
00:11:41,339 --> 00:11:43,740
it is static the dynamic part is the

337
00:11:43,740 --> 00:11:45,420
application that's actually running and

338
00:11:45,420 --> 00:11:47,339
providing feedback

339
00:11:47,339 --> 00:11:51,240
so the test itself is rarely Dynamic but

340
00:11:51,240 --> 00:11:53,100
the application is running so that's the

341
00:11:53,100 --> 00:11:54,480
important distinction a lot of people

342
00:11:54,480 --> 00:11:56,519
are like oh so Dynamic testing means it

343
00:11:56,519 --> 00:11:58,980
learns and you know it's Ai and ml

344
00:11:58,980 --> 00:12:00,420
driven and it learns and adapts the

345
00:12:00,420 --> 00:12:02,339
payloads I've never seen the tool do

346
00:12:02,339 --> 00:12:04,140
that successfully if you have please

347
00:12:04,140 --> 00:12:05,519
tell me because I would love to see it

348
00:12:05,519 --> 00:12:07,920
it's just that it's running and you're

349
00:12:07,920 --> 00:12:09,360
getting real feedback from the running

350
00:12:09,360 --> 00:12:11,959
application

351
00:12:12,480 --> 00:12:15,180
so performing your Dynamic testing is

352
00:12:15,180 --> 00:12:16,980
close to close to post deployment as

353
00:12:16,980 --> 00:12:18,660
possible will give you your best

354
00:12:18,660 --> 00:12:21,660
visibility so pipeline driven right we

355
00:12:21,660 --> 00:12:23,279
all want our development practices to be

356
00:12:23,279 --> 00:12:25,920
pipeline driven putting the dynamic

357
00:12:25,920 --> 00:12:28,019
right post deployment in your pipeline

358
00:12:28,019 --> 00:12:30,839
gives you the absolute best availability

359
00:12:30,839 --> 00:12:32,820
to find those exploits and those

360
00:12:32,820 --> 00:12:35,640
vulnerabilities post deployment

361
00:12:35,640 --> 00:12:37,380
so now I want to talk about platform

362
00:12:37,380 --> 00:12:39,240
security so talked about beginning

363
00:12:39,240 --> 00:12:40,380
maturing now we're talking about

364
00:12:40,380 --> 00:12:42,660
platform because we're all hosting our

365
00:12:42,660 --> 00:12:44,339
application somewhere or they're on Prem

366
00:12:44,339 --> 00:12:48,120
if you sell solely on-prem stuff then

367
00:12:48,120 --> 00:12:49,860
applicate our platform security is what

368
00:12:49,860 --> 00:12:52,320
we preach to our customers right but if

369
00:12:52,320 --> 00:12:55,260
we're hosting SAS platform security is a

370
00:12:55,260 --> 00:12:57,300
shared responsibility between us and the

371
00:12:57,300 --> 00:12:59,519
SAS hosting vendor

372
00:12:59,519 --> 00:13:02,339
right so if we host something in Azure

373
00:13:02,339 --> 00:13:05,339
is it secure no right that just because

374
00:13:05,339 --> 00:13:07,560
you host something on a platform that

375
00:13:07,560 --> 00:13:08,940
takes good security practices doesn't

376
00:13:08,940 --> 00:13:11,700
mean your application is secure so

377
00:13:11,700 --> 00:13:14,160
talking about looking beyond the code

378
00:13:14,160 --> 00:13:15,839
you're deploying into the way you're

379
00:13:15,839 --> 00:13:19,160
deploying it on the platform

380
00:13:19,260 --> 00:13:21,180
I talked about how

381
00:13:21,180 --> 00:13:22,740
it's a shared responsibility model

382
00:13:22,740 --> 00:13:25,200
posture management applications are

383
00:13:25,200 --> 00:13:27,660
great I cannot remember the name of the

384
00:13:27,660 --> 00:13:29,339
NCC tool because I'm on the stage and it

385
00:13:29,339 --> 00:13:31,200
flew my mind but there's a tool written

386
00:13:31,200 --> 00:13:34,560
by NCC group that will do posture scans

387
00:13:34,560 --> 00:13:37,260
for you against your Cloud tenant

388
00:13:37,260 --> 00:13:39,300
for free

389
00:13:39,300 --> 00:13:41,880
um and I I can't my my friends are going

390
00:13:41,880 --> 00:13:42,839
to be laughing at me when they watch

391
00:13:42,839 --> 00:13:43,920
this but I can't remember the name of

392
00:13:43,920 --> 00:13:45,540
the tool fantastic tool I think it's

393
00:13:45,540 --> 00:13:48,779
Scout so look for NCC groups Scout and

394
00:13:48,779 --> 00:13:51,000
it'll perform this posture analysis for

395
00:13:51,000 --> 00:13:53,760
you free and there's tons of paid

396
00:13:53,760 --> 00:13:56,820
options right but the whole idea is it

397
00:13:56,820 --> 00:13:58,440
looks at how you've deployed In This

398
00:13:58,440 --> 00:14:01,500
Cloud In This Cloud tenant

399
00:14:01,500 --> 00:14:03,540
tells you what your issues are and how

400
00:14:03,540 --> 00:14:05,519
you can remediate ideally if you're

401
00:14:05,519 --> 00:14:08,220
deployed hybrid cloud or multi-cloud it

402
00:14:08,220 --> 00:14:09,720
would aggregate all this data for you

403
00:14:09,720 --> 00:14:11,700
into a single place so that you have it

404
00:14:11,700 --> 00:14:14,899
for all of your deployments

405
00:14:15,360 --> 00:14:17,700
so Innovation this is where we talk

406
00:14:17,700 --> 00:14:20,459
about finding ways to build our

407
00:14:20,459 --> 00:14:22,620
application security platform that

408
00:14:22,620 --> 00:14:25,200
involve more commitment so before I

409
00:14:25,200 --> 00:14:26,880
talked about things that you know most

410
00:14:26,880 --> 00:14:28,560
of your infosec team can do a lot of

411
00:14:28,560 --> 00:14:30,240
those you need you need some involvement

412
00:14:30,240 --> 00:14:32,459
from your Dev organization now we talk

413
00:14:32,459 --> 00:14:34,380
about really deep involvement from your

414
00:14:34,380 --> 00:14:36,360
Dev organization and really deep

415
00:14:36,360 --> 00:14:38,279
involvement from your organization as a

416
00:14:38,279 --> 00:14:39,180
whole

417
00:14:39,180 --> 00:14:41,519
you can't reach Innovation stages

418
00:14:41,519 --> 00:14:45,000
without really really deep commitment

419
00:14:45,000 --> 00:14:47,880
so security Champions programs ctfs

420
00:14:47,880 --> 00:14:50,040
secure coding training programs and Bug

421
00:14:50,040 --> 00:14:52,139
Bounty so bug bound is the absolute last

422
00:14:52,139 --> 00:14:54,480
one because I believe you should never

423
00:14:54,480 --> 00:14:57,000
Implement a bug Bounty program until you

424
00:14:57,000 --> 00:15:00,600
have got your the rest of your app site

425
00:15:00,600 --> 00:15:02,760
program buttoned down

426
00:15:02,760 --> 00:15:06,060
to where you feel it performs highly

427
00:15:06,060 --> 00:15:07,680
bug bounties should not be an

428
00:15:07,680 --> 00:15:09,360
entry-level requirement of an appsec

429
00:15:09,360 --> 00:15:11,639
program in my opinion so security

430
00:15:11,639 --> 00:15:13,560
Champions the idea behind a security

431
00:15:13,560 --> 00:15:16,199
Champion is you put people on

432
00:15:16,199 --> 00:15:18,660
development teams that are responsible

433
00:15:18,660 --> 00:15:20,880
for the security of the product they're

434
00:15:20,880 --> 00:15:22,199
creating

435
00:15:22,199 --> 00:15:24,120
now what that responsibility means is

436
00:15:24,120 --> 00:15:26,279
they get access to maybe if you're using

437
00:15:26,279 --> 00:15:28,500
a SAS tool which I recommend you do they

438
00:15:28,500 --> 00:15:30,120
get access to the results from the SAS

439
00:15:30,120 --> 00:15:32,399
tool they get access to the results from

440
00:15:32,399 --> 00:15:34,740
the dynamic tools they're the ones who

441
00:15:34,740 --> 00:15:36,959
can Champion these initiatives on the

442
00:15:36,959 --> 00:15:39,120
development teams but they still report

443
00:15:39,120 --> 00:15:41,279
through development so you've got your

444
00:15:41,279 --> 00:15:42,959
application security people and they

445
00:15:42,959 --> 00:15:44,519
collaborate with your security Champions

446
00:15:44,519 --> 00:15:46,320
you want to push the ownership of

447
00:15:46,320 --> 00:15:48,839
security into everybody else's hands not

448
00:15:48,839 --> 00:15:50,519
because you're abdicating ownership

449
00:15:50,519 --> 00:15:51,839
right

450
00:15:51,839 --> 00:15:53,519
you want to push it into their hands so

451
00:15:53,519 --> 00:15:54,779
that there's a shared responsibility

452
00:15:54,779 --> 00:15:57,480
there because then you can truly get

453
00:15:57,480 --> 00:15:59,339
some great results if everyone shares

454
00:15:59,339 --> 00:16:01,019
that responsibility

455
00:16:01,019 --> 00:16:04,079
um it's it's not an easy thing to do you

456
00:16:04,079 --> 00:16:05,639
have to get deep commitment from your

457
00:16:05,639 --> 00:16:08,339
Dev teams and from your orgs to be okay

458
00:16:08,339 --> 00:16:10,740
with losing some time each of your

459
00:16:10,740 --> 00:16:13,740
Sprint's iterations to security

460
00:16:13,740 --> 00:16:16,440
but it will pay dividends for you

461
00:16:16,440 --> 00:16:18,660
um CTF has anyone ever participated in a

462
00:16:18,660 --> 00:16:19,800
CTF

463
00:16:19,800 --> 00:16:22,560
great I would guess most people have so

464
00:16:22,560 --> 00:16:24,300
the idea is

465
00:16:24,300 --> 00:16:27,959
your CTF gives your developers exposure

466
00:16:27,959 --> 00:16:29,459
to a vulnerable application that's

467
00:16:29,459 --> 00:16:31,860
running and you help them through the

468
00:16:31,860 --> 00:16:34,440
process right like I created a CTF put

469
00:16:34,440 --> 00:16:36,480
some videos up on YouTube about it about

470
00:16:36,480 --> 00:16:38,100
how to compromise the running services

471
00:16:38,100 --> 00:16:42,060
and applications walk people through it

472
00:16:42,060 --> 00:16:44,160
to help them gain the understanding so

473
00:16:44,160 --> 00:16:46,500
when we think CTF sometimes you know

474
00:16:46,500 --> 00:16:48,959
infosec people think oh CTF is a black

475
00:16:48,959 --> 00:16:50,519
box I just look at it I don't know

476
00:16:50,519 --> 00:16:52,320
what's in there and I have to exploit it

477
00:16:52,320 --> 00:16:54,480
just by enumeration that's one approach

478
00:16:54,480 --> 00:16:56,160
to take with your devs I would recommend

479
00:16:56,160 --> 00:16:58,380
an interactive approach where you guide

480
00:16:58,380 --> 00:17:00,480
them through the process

481
00:17:00,480 --> 00:17:02,399
help them get the flags help them be

482
00:17:02,399 --> 00:17:04,980
successful put out videos showing them

483
00:17:04,980 --> 00:17:07,380
exactly how to do it because as soon as

484
00:17:07,380 --> 00:17:08,699
they exploit their first vulnerability

485
00:17:08,699 --> 00:17:10,140
that's where you find your security

486
00:17:10,140 --> 00:17:12,720
champions right because some of them

487
00:17:12,720 --> 00:17:15,179
will be like man that was awesome I got

488
00:17:15,179 --> 00:17:16,859
a shell on that host through SQL

489
00:17:16,859 --> 00:17:19,199
injection tell me more

490
00:17:19,199 --> 00:17:20,939
some of them be like that was boring I

491
00:17:20,939 --> 00:17:22,260
don't want to know about it but you can

492
00:17:22,260 --> 00:17:24,119
identify your security Champions by

493
00:17:24,119 --> 00:17:26,040
giving them the Avail the opportunity to

494
00:17:26,040 --> 00:17:27,419
exploit things maybe none of them have

495
00:17:27,419 --> 00:17:29,400
ever had a shell before you know that

496
00:17:29,400 --> 00:17:30,780
dopamine hit when you get your first

497
00:17:30,780 --> 00:17:33,360
reverse shell get them hooked on it it's

498
00:17:33,360 --> 00:17:34,740
a great way to identify your security

499
00:17:34,740 --> 00:17:36,840
champions

500
00:17:36,840 --> 00:17:38,160
um and then secure coding training so

501
00:17:38,160 --> 00:17:40,140
secure coding training teaches your

502
00:17:40,140 --> 00:17:42,360
developers how to code in a secure

503
00:17:42,360 --> 00:17:44,880
manner so there's lots of vendors out

504
00:17:44,880 --> 00:17:46,200
there that'll sell these products to you

505
00:17:46,200 --> 00:17:48,120
there's lots of free resources online as

506
00:17:48,120 --> 00:17:48,840
well

507
00:17:48,840 --> 00:17:50,760
this is where you're challenging your

508
00:17:50,760 --> 00:17:52,919
developers every single one of them to

509
00:17:52,919 --> 00:17:54,539
take security as a priority while

510
00:17:54,539 --> 00:17:55,919
they're writing their code

511
00:17:55,919 --> 00:17:57,600
so that they're looking at the code

512
00:17:57,600 --> 00:17:58,559
they're writing for security

513
00:17:58,559 --> 00:17:59,760
vulnerabilities and they're being

514
00:17:59,760 --> 00:18:01,320
trained about recent security

515
00:18:01,320 --> 00:18:05,418
vulnerabilities as well yes

516
00:18:14,280 --> 00:18:16,380
with support for management in a way

517
00:18:16,380 --> 00:18:18,840
that makes it consistent and effective

518
00:18:18,840 --> 00:18:21,419
fantastic question the question was do I

519
00:18:21,419 --> 00:18:24,179
have any experience in negotiating time

520
00:18:24,179 --> 00:18:26,820
within Sprints to dedicate towards

521
00:18:26,820 --> 00:18:29,280
security functions

522
00:18:29,280 --> 00:18:31,559
um and the answer is the best thing that

523
00:18:31,559 --> 00:18:34,260
I've found is incentive incentivization

524
00:18:34,260 --> 00:18:37,380
programs that you can build for simple

525
00:18:37,380 --> 00:18:39,720
things like swag or things like that and

526
00:18:39,720 --> 00:18:41,760
then really emphasizing it at the

527
00:18:41,760 --> 00:18:44,400
executive level down because then when

528
00:18:44,400 --> 00:18:46,440
you go to your product people and you go

529
00:18:46,440 --> 00:18:48,360
to your Dev people you're not the one

530
00:18:48,360 --> 00:18:49,880
asking for it right

531
00:18:49,880 --> 00:18:51,900
infosec's not asking for it it's already

532
00:18:51,900 --> 00:18:54,900
been negotiated at the executive level

533
00:18:54,900 --> 00:18:57,480
and it's now just how do we fit that

534
00:18:57,480 --> 00:18:58,799
into our Sprint I had a wonderful

535
00:18:58,799 --> 00:19:00,960
conversation with a group of devs about

536
00:19:00,960 --> 00:19:03,059
you know their time allocation and it

537
00:19:03,059 --> 00:19:04,320
was great because they were already said

538
00:19:04,320 --> 00:19:06,240
security is a Time allocation I didn't

539
00:19:06,240 --> 00:19:08,580
even have to bring it up but you have to

540
00:19:08,580 --> 00:19:11,460
get that executive support because in

541
00:19:11,460 --> 00:19:14,640
infosec group alone can't push that

542
00:19:14,640 --> 00:19:15,960
through

543
00:19:15,960 --> 00:19:18,179
the dev teams have to serve a lot of

544
00:19:18,179 --> 00:19:19,740
different purposes

545
00:19:19,740 --> 00:19:22,200
infosec is just one of those and so you

546
00:19:22,200 --> 00:19:24,240
have to be mindful of that number one

547
00:19:24,240 --> 00:19:26,220
and number two you have to negotiate at

548
00:19:26,220 --> 00:19:28,679
the right level and if the executives

549
00:19:28,679 --> 00:19:29,940
aren't willing to negotiate with you

550
00:19:29,940 --> 00:19:31,679
force them to

551
00:19:31,679 --> 00:19:33,840
right so and that can be a tough

552
00:19:33,840 --> 00:19:35,100
conversation

553
00:19:35,100 --> 00:19:37,020
to have but you've forced that

554
00:19:37,020 --> 00:19:39,539
negotiation you say look listen we've

555
00:19:39,539 --> 00:19:40,740
got these kind we've got these tickets

556
00:19:40,740 --> 00:19:42,480
we've got all these things we need to

557
00:19:42,480 --> 00:19:44,400
take this seriously we need to have this

558
00:19:44,400 --> 00:19:46,620
negotiation and then at that point if

559
00:19:46,620 --> 00:19:48,840
there's no negotiation to be had at

560
00:19:48,840 --> 00:19:50,820
least we've done our part to make sure

561
00:19:50,820 --> 00:19:52,740
that we've brought this up so sometimes

562
00:19:52,740 --> 00:19:54,360
we have to be willing to accept that

563
00:19:54,360 --> 00:19:56,100
it's not going to happen and that's the

564
00:19:56,100 --> 00:19:58,440
part that sucks right you make a ticket

565
00:19:58,440 --> 00:20:01,320
and the ticket doesn't move and you're

566
00:20:01,320 --> 00:20:03,000
like hey I really need this movement on

567
00:20:03,000 --> 00:20:03,960
this ticket

568
00:20:03,960 --> 00:20:06,120
and that's the part where you have to

569
00:20:06,120 --> 00:20:09,000
walk away and it really sucks but I feel

570
00:20:09,000 --> 00:20:11,160
like managing that expectation at the

571
00:20:11,160 --> 00:20:13,380
executive level and letting the dev

572
00:20:13,380 --> 00:20:15,600
leads communicate to the devs the

573
00:20:15,600 --> 00:20:17,340
priority makes all the difference

574
00:20:17,340 --> 00:20:19,320
because if it's just infosec

575
00:20:19,320 --> 00:20:21,179
communicating the priority they're less

576
00:20:21,179 --> 00:20:22,980
likely to listen in my experience but

577
00:20:22,980 --> 00:20:24,480
when Dev management communicates it

578
00:20:24,480 --> 00:20:26,280
completely different ball game so that's

579
00:20:26,280 --> 00:20:28,020
my recommendation and that was a super

580
00:20:28,020 --> 00:20:31,020
long-winded answer I'm sorry so

581
00:20:31,020 --> 00:20:31,620
um

582
00:20:31,620 --> 00:20:34,860
now for those who don't run Dev teams

583
00:20:34,860 --> 00:20:37,260
right how or if you're consuming

584
00:20:37,260 --> 00:20:39,480
software as a service

585
00:20:39,480 --> 00:20:41,340
here are some questions to ask your

586
00:20:41,340 --> 00:20:43,559
vendors about their appsec program

587
00:20:43,559 --> 00:20:46,080
do they do security code scans so static

588
00:20:46,080 --> 00:20:48,539
stands in their stlc do they have

589
00:20:48,539 --> 00:20:50,820
dynamic in their SCLC and do they have

590
00:20:50,820 --> 00:20:53,100
dedicated security engineers

591
00:20:53,100 --> 00:20:55,620
those three questions will tell us a lot

592
00:20:55,620 --> 00:20:57,840
about an organization if the answer to

593
00:20:57,840 --> 00:21:00,059
all three of those is yes I feel really

594
00:21:00,059 --> 00:21:01,320
comfortable partnering with that

595
00:21:01,320 --> 00:21:04,260
organization because I know that they at

596
00:21:04,260 --> 00:21:06,780
least are trying so I mean we could you

597
00:21:06,780 --> 00:21:08,340
could ask like a 100 page questionnaire

598
00:21:08,340 --> 00:21:10,500
and get every single part of it but if

599
00:21:10,500 --> 00:21:12,720
we get these three answers we know that

600
00:21:12,720 --> 00:21:13,799
they're trying and they take it

601
00:21:13,799 --> 00:21:15,900
seriously that tells me that's someone I

602
00:21:15,900 --> 00:21:17,820
want to partner with if you do if you're

603
00:21:17,820 --> 00:21:18,900
doing these things even if you're doing

604
00:21:18,900 --> 00:21:20,520
two of these three

605
00:21:20,520 --> 00:21:22,799
I want to partner with you because when

606
00:21:22,799 --> 00:21:24,419
I talk to you about security I know that

607
00:21:24,419 --> 00:21:26,580
you care and that's the huge difference

608
00:21:26,580 --> 00:21:28,740
maker and then the last thing is bug

609
00:21:28,740 --> 00:21:31,140
Bounty programs so a bug bounding

610
00:21:31,140 --> 00:21:32,880
program is super expensive to maintain

611
00:21:32,880 --> 00:21:34,740
and requires specialized training has

612
00:21:34,740 --> 00:21:36,900
anyone ever done triage in a bug Bounty

613
00:21:36,900 --> 00:21:39,080
program

614
00:21:39,120 --> 00:21:41,400
so I feel you

615
00:21:41,400 --> 00:21:43,799
right I've done triage in a bug Bounty

616
00:21:43,799 --> 00:21:46,919
program and it's different it's

617
00:21:46,919 --> 00:21:49,559
different than triaging anything else

618
00:21:49,559 --> 00:21:51,539
you have to maintain a relationship with

619
00:21:51,539 --> 00:21:53,700
your researchers that's profitable for

620
00:21:53,700 --> 00:21:55,980
them and for you and so you have to

621
00:21:55,980 --> 00:21:58,799
triage on certain slas right you have

622
00:21:58,799 --> 00:22:00,299
you have to keep your slas for triage

623
00:22:00,299 --> 00:22:01,919
you have to have someone who knows how

624
00:22:01,919 --> 00:22:03,539
to triage because it's a completely

625
00:22:03,539 --> 00:22:04,919
different ball game you're getting

626
00:22:04,919 --> 00:22:06,600
vulnerability reports from researchers

627
00:22:06,600 --> 00:22:08,880
who may or may not give you all the data

628
00:22:08,880 --> 00:22:10,740
that you need you know sometimes they'll

629
00:22:10,740 --> 00:22:12,299
just be like hey I heard cross-site

630
00:22:12,299 --> 00:22:13,799
scripting on this endpoint and you're

631
00:22:13,799 --> 00:22:15,900
like cool there's like 150 routes on

632
00:22:15,900 --> 00:22:18,600
that endpoint you know so you have to

633
00:22:18,600 --> 00:22:20,940
maintain and cultivate that relationship

634
00:22:20,940 --> 00:22:22,559
with your researchers they're they are

635
00:22:22,559 --> 00:22:24,780
your most valuable resource

636
00:22:24,780 --> 00:22:26,820
then you have to know what payout is you

637
00:22:26,820 --> 00:22:28,799
have to pay attention to payouts because

638
00:22:28,799 --> 00:22:30,480
if your program's not attractive enough

639
00:22:30,480 --> 00:22:31,679
to researchers they're going to move on

640
00:22:31,679 --> 00:22:33,480
to something more attractive so if I'm

641
00:22:33,480 --> 00:22:35,159
paying out five bucks for cross-site

642
00:22:35,159 --> 00:22:37,140
scripting and 10 bucks for command

643
00:22:37,140 --> 00:22:38,940
injection I'm going to get zero reports

644
00:22:38,940 --> 00:22:40,919
right unless someone can find it with an

645
00:22:40,919 --> 00:22:43,080
automated scanner I'm getting nothing

646
00:22:43,080 --> 00:22:45,840
I have to make my payouts attractive

647
00:22:45,840 --> 00:22:49,679
I have to make my disclosure meet what

648
00:22:49,679 --> 00:22:53,220
the company wants right so bug Bounty is

649
00:22:53,220 --> 00:22:55,320
in my opinion the last thing you should

650
00:22:55,320 --> 00:22:57,179
try to implement unless you've got

651
00:22:57,179 --> 00:22:59,159
everything else in order

652
00:22:59,159 --> 00:23:01,080
otherwise it's a bad experience for you

653
00:23:01,080 --> 00:23:03,000
the company and it can be a bad

654
00:23:03,000 --> 00:23:04,980
experience for your researchers and if

655
00:23:04,980 --> 00:23:06,059
it's a bad experience for your

656
00:23:06,059 --> 00:23:08,880
researchers then researchers talk right

657
00:23:08,880 --> 00:23:11,159
so I'm a I'm a vulnerability researcher

658
00:23:11,159 --> 00:23:12,900
myself I'm on

659
00:23:12,900 --> 00:23:14,700
um all the major platforms

660
00:23:14,700 --> 00:23:17,280
we talk we talk to each other you know I

661
00:23:17,280 --> 00:23:18,840
had a bad experience with this vendor

662
00:23:18,840 --> 00:23:20,460
I'm probably not going to go back to

663
00:23:20,460 --> 00:23:22,380
them again and then my friends will be

664
00:23:22,380 --> 00:23:23,760
like oh you had a bad experience here

665
00:23:23,760 --> 00:23:25,919
I'm not going to touch them

666
00:23:25,919 --> 00:23:27,780
so you have to maintain and cultivate

667
00:23:27,780 --> 00:23:29,760
that relationship

668
00:23:29,760 --> 00:23:31,559
um does anyone have any questions that's

669
00:23:31,559 --> 00:23:32,760
all I've got does anyone have any

670
00:23:32,760 --> 00:23:35,000
questions

671
00:23:35,039 --> 00:23:38,100
no thank you so much for your time guys

672
00:23:38,100 --> 00:23:39,740
I really appreciate it

673
00:23:39,740 --> 00:23:46,269
[Applause]

