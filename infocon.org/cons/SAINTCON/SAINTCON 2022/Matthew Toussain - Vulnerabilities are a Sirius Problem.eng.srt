1
00:00:00,000 --> 00:00:02,520
all right everyone welcome to the talk

2
00:00:02,520 --> 00:00:04,980
I'll be your uh presenter for this one

3
00:00:04,980 --> 00:00:06,420
my name is Matthew Tucson it is an

4
00:00:06,420 --> 00:00:07,560
absolute pleasure to be here having a

5
00:00:07,560 --> 00:00:10,080
good Saint con so far yeah it's my first

6
00:00:10,080 --> 00:00:11,460
time here moving the family out to the

7
00:00:11,460 --> 00:00:13,620
area in fact and I am astonished by this

8
00:00:13,620 --> 00:00:15,420
conference loving it to death but you

9
00:00:15,420 --> 00:00:17,940
didn't come here to hear me wax poetic

10
00:00:17,940 --> 00:00:19,920
about the conference that you and I are

11
00:00:19,920 --> 00:00:21,060
both attending so let's go ahead and

12
00:00:21,060 --> 00:00:22,380
dive in we're going to talk a little bit

13
00:00:22,380 --> 00:00:24,840
about vulnerabilities today but not in

14
00:00:24,840 --> 00:00:26,699
the boring sense we're going to talk a

15
00:00:26,699 --> 00:00:28,199
little bit more about how we can

16
00:00:28,199 --> 00:00:30,240
leverage these from two aspects

17
00:00:30,240 --> 00:00:32,220
vulnerability assessment and penetration

18
00:00:32,220 --> 00:00:33,840
testing and how we can do a little bit

19
00:00:33,840 --> 00:00:37,100
more than what perhaps our de facto

20
00:00:37,100 --> 00:00:39,840
proprietary tools allow us to accomplish

21
00:00:39,840 --> 00:00:41,820
we're essentially going to take a

22
00:00:41,820 --> 00:00:43,079
journey together

23
00:00:43,079 --> 00:00:45,239
to unlock the potential of our

24
00:00:45,239 --> 00:00:47,399
vulnerability data itself we'll throw

25
00:00:47,399 --> 00:00:49,980
some code at it and release maybe a

26
00:00:49,980 --> 00:00:52,079
little tool to help out as well so I'm

27
00:00:52,079 --> 00:00:54,180
very very passionate about this topic in

28
00:00:54,180 --> 00:00:55,500
infosec in general I used to work for

29
00:00:55,500 --> 00:00:57,600
the Air Force then I moved on to Black

30
00:00:57,600 --> 00:00:59,399
Hills information security counter hack

31
00:00:59,399 --> 00:01:00,480
and then I found in my own company

32
00:01:00,480 --> 00:01:02,280
called open security we do all kinds of

33
00:01:02,280 --> 00:01:04,619
security services and so I've been

34
00:01:04,619 --> 00:01:07,200
dealing with vulnerabilities for well

35
00:01:07,200 --> 00:01:09,960
over a decade I'm getting old but I'm

36
00:01:09,960 --> 00:01:13,320
also the Sans institute's author for the

37
00:01:13,320 --> 00:01:14,640
vulnerability assessment course the

38
00:01:14,640 --> 00:01:16,500
Sands Institute and we're seeing a lot

39
00:01:16,500 --> 00:01:18,420
of issues when it comes to discovering

40
00:01:18,420 --> 00:01:20,520
vulnerabilities and most specifically

41
00:01:20,520 --> 00:01:23,400
identifying what matters what if I told

42
00:01:23,400 --> 00:01:26,159
you for example that the vast majority

43
00:01:26,159 --> 00:01:28,619
of vulnerabilities that get a cve oh

44
00:01:28,619 --> 00:01:30,000
yeah cve

45
00:01:30,000 --> 00:01:33,960
don't matter to anyone at all ever

46
00:01:33,960 --> 00:01:36,780
period forget about it no attacker in

47
00:01:36,780 --> 00:01:38,520
their right mind would even pay

48
00:01:38,520 --> 00:01:40,259
attention to the fact that there's a cve

49
00:01:40,259 --> 00:01:41,939
for that condition

50
00:01:41,939 --> 00:01:44,700
well that's how it actually works it

51
00:01:44,700 --> 00:01:46,740
really is but there's a way that we can

52
00:01:46,740 --> 00:01:48,900
extract a lot of value by identifying

53
00:01:48,900 --> 00:01:50,640
what it is that we really want that we

54
00:01:50,640 --> 00:01:52,380
care about for example as a penetration

55
00:01:52,380 --> 00:01:55,079
tester I find myself wasting time

56
00:01:55,079 --> 00:01:57,659
scanning for vulnerabilities in fact you

57
00:01:57,659 --> 00:02:00,060
might even go as far as to say that for

58
00:02:00,060 --> 00:02:02,159
penetration testers vulnerability

59
00:02:02,159 --> 00:02:05,340
scanners may not actually be required I

60
00:02:05,340 --> 00:02:06,960
know strong words right there that's a

61
00:02:06,960 --> 00:02:08,340
hot take and a half

62
00:02:08,340 --> 00:02:10,500
should we use them yeah probably at the

63
00:02:10,500 --> 00:02:12,120
very least it's a good backstop right if

64
00:02:12,120 --> 00:02:13,440
we found a vulnerability or if we've

65
00:02:13,440 --> 00:02:15,180
done our pen test maybe we've got domain

66
00:02:15,180 --> 00:02:16,980
admin at the very least we won't want to

67
00:02:16,980 --> 00:02:19,080
miss something that's obvious as well

68
00:02:19,080 --> 00:02:20,459
and if all of the scanner maybe gives a

69
00:02:20,459 --> 00:02:22,140
little bit of extra confidence going in

70
00:02:22,140 --> 00:02:24,120
but I'll be completely honest with you

71
00:02:24,120 --> 00:02:26,280
when I'm doing a penetration test most

72
00:02:26,280 --> 00:02:27,780
of the time

73
00:02:27,780 --> 00:02:29,459
I run the vulnerability scanner I don't

74
00:02:29,459 --> 00:02:30,959
look at it until the pen test is almost

75
00:02:30,959 --> 00:02:33,720
over because it wastes my time so much

76
00:02:33,720 --> 00:02:36,120
but we can do a lot better especially

77
00:02:36,120 --> 00:02:38,640
when we work together as a community and

78
00:02:38,640 --> 00:02:39,959
so from all of this this is a little bit

79
00:02:39,959 --> 00:02:41,819
about me but at the end of the day I

80
00:02:41,819 --> 00:02:44,040
identify as a communist I'm a communist

81
00:02:44,040 --> 00:02:48,120
specifically an infosec communist

82
00:02:48,120 --> 00:02:49,379
why

83
00:02:49,379 --> 00:02:51,900
because together we can take advantage

84
00:02:51,900 --> 00:02:54,420
of our of our capabilities that we share

85
00:02:54,420 --> 00:02:56,340
as a whole as a community and so a

86
00:02:56,340 --> 00:02:57,360
number of months ago I was having a

87
00:02:57,360 --> 00:02:59,220
conversation with a friend of mine named

88
00:02:59,220 --> 00:03:02,519
John John gornflow and so John we were

89
00:03:02,519 --> 00:03:03,360
having a conversation about

90
00:03:03,360 --> 00:03:04,920
vulnerability scanners and he said you

91
00:03:04,920 --> 00:03:06,599
know our choice here with vulnerability

92
00:03:06,599 --> 00:03:09,420
scanners sucks we just don't have a lot

93
00:03:09,420 --> 00:03:12,180
of fantastic options

94
00:03:12,180 --> 00:03:14,220
the vulnerability scanning vendors we're

95
00:03:14,220 --> 00:03:15,840
probably talking here about rapid seven

96
00:03:15,840 --> 00:03:18,300
tenable and koalas well they have a

97
00:03:18,300 --> 00:03:20,459
monopoly a soft Monopoly but it's a

98
00:03:20,459 --> 00:03:22,260
monopoly and the world is on fire I

99
00:03:22,260 --> 00:03:23,400
don't know about you but if you've been

100
00:03:23,400 --> 00:03:24,659
paying attention to ransomware over the

101
00:03:24,659 --> 00:03:27,720
past couple years yikes last year Asus

102
00:03:27,720 --> 00:03:29,819
ransomware 40 million and they paid it

103
00:03:29,819 --> 00:03:32,940
they paid it holy goodness the world is

104
00:03:32,940 --> 00:03:35,099
on fire and so me and John were having

105
00:03:35,099 --> 00:03:36,780
this conversation it's really more of a

106
00:03:36,780 --> 00:03:39,239
rant and I'm saying preach preach my

107
00:03:39,239 --> 00:03:40,980
friend say it from the top of the

108
00:03:40,980 --> 00:03:43,080
mountains and in the valley as well you

109
00:03:43,080 --> 00:03:45,120
are absolutely correct

110
00:03:45,120 --> 00:03:47,220
so John continues the conversation and

111
00:03:47,220 --> 00:03:48,840
he says the open source Community is

112
00:03:48,840 --> 00:03:51,480
really close like we are so darn close

113
00:03:51,480 --> 00:03:53,760
to having an option that is accessible

114
00:03:53,760 --> 00:03:55,799
across the board and this is rather

115
00:03:55,799 --> 00:03:57,540
important you see as a penetration

116
00:03:57,540 --> 00:03:59,220
tester I find myself dealing with the

117
00:03:59,220 --> 00:04:01,080
same problems over and over and over

118
00:04:01,080 --> 00:04:02,519
again maybe on the same vulnerabilities

119
00:04:02,519 --> 00:04:04,620
but the same problems for example

120
00:04:04,620 --> 00:04:06,420
perhaps I'm doing a penetration test and

121
00:04:06,420 --> 00:04:08,220
we get domain admin and we knock over

122
00:04:08,220 --> 00:04:09,840
the entire network we find all kinds of

123
00:04:09,840 --> 00:04:10,799
stuff

124
00:04:10,799 --> 00:04:12,659
great now the organization has some

125
00:04:12,659 --> 00:04:14,879
stuff to work on fantastic we come back

126
00:04:14,879 --> 00:04:16,500
the next year and we just smash the

127
00:04:16,500 --> 00:04:18,720
network all over again there's a couple

128
00:04:18,720 --> 00:04:21,000
reasons why this might happen a well

129
00:04:21,000 --> 00:04:22,979
there's a whole year let's say it's an

130
00:04:22,979 --> 00:04:24,360
annual pen test of course you might have

131
00:04:24,360 --> 00:04:26,100
PCI quarterly vulnerability assessments

132
00:04:26,100 --> 00:04:27,600
annual pen test all that kind of stuff

133
00:04:27,600 --> 00:04:29,639
let's assume this is an annual test what

134
00:04:29,639 --> 00:04:31,919
that means is after we've taken a

135
00:04:31,919 --> 00:04:33,120
snapshot of what's wrong with an

136
00:04:33,120 --> 00:04:34,620
organization at a given point in time

137
00:04:34,620 --> 00:04:37,680
there's a whole year that can go by and

138
00:04:37,680 --> 00:04:40,500
there's likely nothing happening in that

139
00:04:40,500 --> 00:04:42,360
intervening time now if it's a bigger

140
00:04:42,360 --> 00:04:43,560
Enterprise and they have dedicated

141
00:04:43,560 --> 00:04:45,120
information security staff that might

142
00:04:45,120 --> 00:04:47,220
not hold true but for a lot of clients

143
00:04:47,220 --> 00:04:50,580
that do get third-party tests well

144
00:04:50,580 --> 00:04:52,680
yeah that's the reality of the situation

145
00:04:52,680 --> 00:04:54,240
and what you might see is that maybe

146
00:04:54,240 --> 00:04:56,160
they have a patch management issue in

147
00:04:56,160 --> 00:04:57,419
the first place so the real

148
00:04:57,419 --> 00:05:00,240
vulnerability isn't the issue itself the

149
00:05:00,240 --> 00:05:01,560
real vulnerability is their

150
00:05:01,560 --> 00:05:03,540
configuration management their processes

151
00:05:03,540 --> 00:05:05,100
if you will so they're constantly going

152
00:05:05,100 --> 00:05:06,900
to get vulnerabilities over time

153
00:05:06,900 --> 00:05:10,199
that's possible but in either case what

154
00:05:10,199 --> 00:05:12,720
matters is this as a pen tester I would

155
00:05:12,720 --> 00:05:15,360
love love love to leave something behind

156
00:05:15,360 --> 00:05:16,979
after I'm done where they can just click

157
00:05:16,979 --> 00:05:19,500
go and they get a list of basic stuff to

158
00:05:19,500 --> 00:05:21,240
work on so not as an expensive

159
00:05:21,240 --> 00:05:24,300
penetration tester and not showing up to

160
00:05:24,300 --> 00:05:27,360
talk about basic things alternatively as

161
00:05:27,360 --> 00:05:28,919
a pen tester I would also really

162
00:05:28,919 --> 00:05:30,660
appreciate it if my vulnerability

163
00:05:30,660 --> 00:05:32,280
scanners were designed

164
00:05:32,280 --> 00:05:35,280
for me yeah they really aren't consider

165
00:05:35,280 --> 00:05:36,479
this let's say that most vulnerabilities

166
00:05:36,479 --> 00:05:37,800
don't matter

167
00:05:37,800 --> 00:05:38,940
I'll prove this to you in just a little

168
00:05:38,940 --> 00:05:40,500
bit but let's just assume for now most

169
00:05:40,500 --> 00:05:42,240
vulnerabilities don't matter

170
00:05:42,240 --> 00:05:44,340
in that case I don't really care about

171
00:05:44,340 --> 00:05:46,380
discovering all of them I care about

172
00:05:46,380 --> 00:05:48,240
discovering the ones that carry

173
00:05:48,240 --> 00:05:50,580
significant risk and our vulnerably

174
00:05:50,580 --> 00:05:52,259
scanners let's say rapid sevens and

175
00:05:52,259 --> 00:05:55,560
expose Appliance it focuses on finding

176
00:05:55,560 --> 00:05:58,199
everything or trying to not saying it's

177
00:05:58,199 --> 00:06:00,180
successful it's not successful but tries

178
00:06:00,180 --> 00:06:02,820
okay so John here says hey look you know

179
00:06:02,820 --> 00:06:03,720
what

180
00:06:03,720 --> 00:06:05,940
we're really close and there's a lot of

181
00:06:05,940 --> 00:06:08,340
government and public projects that that

182
00:06:08,340 --> 00:06:10,440
seek to help address this problem but

183
00:06:10,440 --> 00:06:12,240
nobody knows about them

184
00:06:12,240 --> 00:06:14,340
you should check out my talk Matt and I

185
00:06:14,340 --> 00:06:15,720
highly recommend his talk it's fantastic

186
00:06:15,720 --> 00:06:18,600
uh so I'll give away a copy of all these

187
00:06:18,600 --> 00:06:20,460
slides and there's a link to his talk

188
00:06:20,460 --> 00:06:23,160
right here as well and so I look at John

189
00:06:23,160 --> 00:06:24,419
because we're having ourselves a

190
00:06:24,419 --> 00:06:26,039
communist powwow right here and I say

191
00:06:26,039 --> 00:06:29,280
yes absolutely my friend the means of

192
00:06:29,280 --> 00:06:30,960
vulnerability Discovery belong in the

193
00:06:30,960 --> 00:06:33,300
hands of the hacker class Revolution

194
00:06:33,300 --> 00:06:36,060
Let's Go All right I may have

195
00:06:36,060 --> 00:06:38,100
made up half of that conversation I'm

196
00:06:38,100 --> 00:06:40,139
not saying John is an infosec communist

197
00:06:40,139 --> 00:06:42,479
but I am however he did actually approve

198
00:06:42,479 --> 00:06:44,160
the conversation before I went out and

199
00:06:44,160 --> 00:06:46,500
made up words out of his mouth

200
00:06:46,500 --> 00:06:47,940
all right let's take a look at some of

201
00:06:47,940 --> 00:06:49,560
these products here real quickly and see

202
00:06:49,560 --> 00:06:51,120
what we're working with so the United

203
00:06:51,120 --> 00:06:53,699
Kingdom right an actual government their

204
00:06:53,699 --> 00:06:57,360
ncsc has a program called scanning Made

205
00:06:57,360 --> 00:07:00,600
Easy scanning Made Easy is there to

206
00:07:00,600 --> 00:07:03,120
accomplish one of our major issues that

207
00:07:03,120 --> 00:07:05,639
we have in the open source community and

208
00:07:05,639 --> 00:07:07,860
our open source vulnerability Discovery

209
00:07:07,860 --> 00:07:10,740
capability set and that is this

210
00:07:10,740 --> 00:07:14,280
did you know that way back eons and eons

211
00:07:14,280 --> 00:07:16,259
ago when the dinosaurs roamed the earth

212
00:07:16,259 --> 00:07:19,020
and the world was young and Equifax got

213
00:07:19,020 --> 00:07:21,300
hacked yes 2017 Equifax got hacked right

214
00:07:21,300 --> 00:07:23,400
we all know this one yikes did you know

215
00:07:23,400 --> 00:07:25,139
that Equifax scanned their vulnerable

216
00:07:25,139 --> 00:07:26,039
system

217
00:07:26,039 --> 00:07:28,800
before they got hacked and the scanner

218
00:07:28,800 --> 00:07:31,740
missed it it did and then months go by

219
00:07:31,740 --> 00:07:33,479
and we're talking September here so

220
00:07:33,479 --> 00:07:35,819
September 3rd a brand new zero day for

221
00:07:35,819 --> 00:07:38,039
Apache struts it was remote code

222
00:07:38,039 --> 00:07:39,900
execution was released this is not the

223
00:07:39,900 --> 00:07:41,759
one that was used against Equifax but it

224
00:07:41,759 --> 00:07:43,319
is a funny part of the story because

225
00:07:43,319 --> 00:07:45,539
four days later Xbox comes down and says

226
00:07:45,539 --> 00:07:47,160
oh shoot we got hacked and they tried to

227
00:07:47,160 --> 00:07:49,680
make it look like it was zero day it was

228
00:07:49,680 --> 00:07:52,440
not it was absolutely not Equifax told a

229
00:07:52,440 --> 00:07:54,240
lot of interesting stories but what's

230
00:07:54,240 --> 00:07:56,460
particularly Nifty about this one is

231
00:07:56,460 --> 00:07:58,319
that that vulnerability September 3rd

232
00:07:58,319 --> 00:08:01,440
2017 the first scanner to have a

233
00:08:01,440 --> 00:08:03,300
scanning module to find it

234
00:08:03,300 --> 00:08:05,400
was nmap it was nmap scripting engine it

235
00:08:05,400 --> 00:08:07,560
was the open source free tool so that

236
00:08:07,560 --> 00:08:08,639
means from our perspective if we're

237
00:08:08,639 --> 00:08:10,979
dealing on Day Zero through five of a

238
00:08:10,979 --> 00:08:13,199
new significant condition coming out we

239
00:08:13,199 --> 00:08:15,419
may only have an open source option

240
00:08:15,419 --> 00:08:17,699
the second scanner to have a module to

241
00:08:17,699 --> 00:08:20,220
discover that issue was qualis here's

242
00:08:20,220 --> 00:08:22,199
what qualis did qualis went to the open

243
00:08:22,199 --> 00:08:24,780
source nmap product and said hmm this

244
00:08:24,780 --> 00:08:26,879
code looks juicy highlight everything

245
00:08:26,879 --> 00:08:29,460
copy paste into their own data set they

246
00:08:29,460 --> 00:08:31,259
changed one thing one thing

247
00:08:31,259 --> 00:08:33,899
they changed the user agent string from

248
00:08:33,899 --> 00:08:36,839
nmap to X qualis yes this is what we

249
00:08:36,839 --> 00:08:38,700
paid for they literally took our free

250
00:08:38,700 --> 00:08:42,059
stuff The Communist Manifesto branded it

251
00:08:42,059 --> 00:08:44,159
and sold it to us dang it you

252
00:08:44,159 --> 00:08:47,160
capitalists ah but so what it really

253
00:08:47,160 --> 00:08:48,720
turns out is that the information

254
00:08:48,720 --> 00:08:50,820
security Community is absolutely on the

255
00:08:50,820 --> 00:08:52,260
ball in building these modules to

256
00:08:52,260 --> 00:08:53,820
discover them let's take this a little

257
00:08:53,820 --> 00:08:55,140
bit further in the future anyone

258
00:08:55,140 --> 00:08:56,519
remember log4j

259
00:08:56,519 --> 00:08:57,959
oh yeah I canceled your Christmas

260
00:08:57,959 --> 00:09:00,300
vacation over that one didn't we yikes

261
00:09:00,300 --> 00:09:02,519
guess what you picked this career field

262
00:09:02,519 --> 00:09:04,740
you will never have a December that's

263
00:09:04,740 --> 00:09:06,899
free last year along 4J year before that

264
00:09:06,899 --> 00:09:09,600
say it with me solarwinds yes what's

265
00:09:09,600 --> 00:09:11,220
coming out this year I don't know yet

266
00:09:11,220 --> 00:09:12,959
but go ahead and cancel your Christmas

267
00:09:12,959 --> 00:09:15,200
break right now it ain't happening

268
00:09:15,200 --> 00:09:17,700
historic data says so

269
00:09:17,700 --> 00:09:19,620
long 4J first scanning modules for that

270
00:09:19,620 --> 00:09:21,959
commercial or open source

271
00:09:21,959 --> 00:09:24,779
open source absolutely open source and

272
00:09:24,779 --> 00:09:26,519
so regardless of whether we want to or

273
00:09:26,519 --> 00:09:28,440
not we're going to be using open source

274
00:09:28,440 --> 00:09:30,779
Discovery at least we should be on a

275
00:09:30,779 --> 00:09:32,160
regular basis if we want the best

276
00:09:32,160 --> 00:09:34,620
results and sometimes these open source

277
00:09:34,620 --> 00:09:37,500
scanning modules are bananas the open

278
00:09:37,500 --> 00:09:39,899
source scanning module for log4j that is

279
00:09:39,899 --> 00:09:42,300
inside of nmap scripting engine sort of

280
00:09:42,300 --> 00:09:43,740
inside of my script engine I'll explain

281
00:09:43,740 --> 00:09:45,060
in a second

282
00:09:45,060 --> 00:09:48,360
actually has capability built into it to

283
00:09:48,360 --> 00:09:50,760
identify and bypass web application

284
00:09:50,760 --> 00:09:52,920
firewalls in order to identify the

285
00:09:52,920 --> 00:09:55,860
condition behind a WAFF that is bananas

286
00:09:55,860 --> 00:09:57,959
attack tools for exploitation purposes

287
00:09:57,959 --> 00:10:00,180
don't even do this stuff but the

288
00:10:00,180 --> 00:10:01,740
scanning modules of the open source

289
00:10:01,740 --> 00:10:03,660
Community puts out really are amazing

290
00:10:03,660 --> 00:10:06,779
they're fantastic and they do

291
00:10:06,779 --> 00:10:09,000
all right so if open source scanning

292
00:10:09,000 --> 00:10:11,459
modules are this option awesome what's

293
00:10:11,459 --> 00:10:13,380
the issue why aren't we all using nmap

294
00:10:13,380 --> 00:10:15,480
scripting engine for everything well it

295
00:10:15,480 --> 00:10:18,060
turns out rapid7 is if you install rapid

296
00:10:18,060 --> 00:10:19,800
7's next bows and actually in your

297
00:10:19,800 --> 00:10:21,420
programs folder creates nmat because it

298
00:10:21,420 --> 00:10:23,880
runs nmap behind the scenes

299
00:10:23,880 --> 00:10:25,260
h i shouldn't know that

300
00:10:25,260 --> 00:10:28,980
but what the actual issue is is this is

301
00:10:28,980 --> 00:10:30,779
that NSC module I was just talking about

302
00:10:30,779 --> 00:10:33,540
is that part of nmap Main

303
00:10:33,540 --> 00:10:36,180
it's not because the nmap project and

304
00:10:36,180 --> 00:10:38,100
the nmap team doesn't really go out

305
00:10:38,100 --> 00:10:39,899
there and collect the modules that the

306
00:10:39,899 --> 00:10:41,640
community creates and integrate them

307
00:10:41,640 --> 00:10:43,800
into the nmap project as a whole anyone

308
00:10:43,800 --> 00:10:46,019
hear familiar with metasploits yeah so

309
00:10:46,019 --> 00:10:48,720
Metasploit uses pen testers got tons and

310
00:10:48,720 --> 00:10:50,279
tons of exploits in it the biggest

311
00:10:50,279 --> 00:10:51,779
repository of exploits on the planet

312
00:10:51,779 --> 00:10:54,540
today outside of NSA

313
00:10:54,540 --> 00:10:56,459
Etc but

314
00:10:56,459 --> 00:10:58,560
if you create a metasplay module you can

315
00:10:58,560 --> 00:10:59,940
set a pull request to the minutes away

316
00:10:59,940 --> 00:11:01,860
project and get that integrated directly

317
00:11:01,860 --> 00:11:03,839
that gets reviewed it gets added it's

318
00:11:03,839 --> 00:11:06,420
fabulous there is no similar mechanism

319
00:11:06,420 --> 00:11:08,700
for nmap scripting engine and so if

320
00:11:08,700 --> 00:11:10,680
you'd like to do this with nmap here's

321
00:11:10,680 --> 00:11:12,420
what you've got to do you've got to go

322
00:11:12,420 --> 00:11:14,279
out and use your Google

323
00:11:14,279 --> 00:11:16,440
for every vulnerability and any module

324
00:11:16,440 --> 00:11:18,779
GitHub find it add it in manually and

325
00:11:18,779 --> 00:11:21,779
it's over and over again and pray

326
00:11:21,779 --> 00:11:24,120
that you didn't miss one that kind of

327
00:11:24,120 --> 00:11:27,180
sucks there's no single repository that

328
00:11:27,180 --> 00:11:29,640
has all of these modules in it on its

329
00:11:29,640 --> 00:11:30,360
own

330
00:11:30,360 --> 00:11:33,180
the scanning made easy project exists to

331
00:11:33,180 --> 00:11:35,339
accomplish this issue it has a little

332
00:11:35,339 --> 00:11:37,740
bit of documentation on recommendations

333
00:11:37,740 --> 00:11:39,899
and guidelines for creating nmap scripts

334
00:11:39,899 --> 00:11:42,660
which is really nice because if anyone's

335
00:11:42,660 --> 00:11:44,279
read the nmap book I don't suggest you

336
00:11:44,279 --> 00:11:46,380
do this it's really really long and in a

337
00:11:46,380 --> 00:11:47,760
map scripting engine on its own is

338
00:11:47,760 --> 00:11:49,620
chapter nine and chapter nine is

339
00:11:49,620 --> 00:11:51,899
basically a book it sucks so these

340
00:11:51,899 --> 00:11:54,300
guidelines are really really nice on top

341
00:11:54,300 --> 00:11:56,760
of that the idea is you make project an

342
00:11:56,760 --> 00:11:59,220
NSA script you send it to ncsc they

343
00:11:59,220 --> 00:12:02,040
review it and they add it on plus while

344
00:12:02,040 --> 00:12:04,320
this might not be a novel idea it's

345
00:12:04,320 --> 00:12:05,519
backed by an actual government

346
00:12:05,519 --> 00:12:08,339
organization which means that it has the

347
00:12:08,339 --> 00:12:10,620
staying power that we really need in an

348
00:12:10,620 --> 00:12:12,600
open source context so this is really

349
00:12:12,600 --> 00:12:15,060
cool this kind of seeks to accomplish

350
00:12:15,060 --> 00:12:16,760
one of our primary objectives to be fair

351
00:12:16,760 --> 00:12:19,380
ncsc's project is

352
00:12:19,380 --> 00:12:22,019
not holistic yet it's going to take some

353
00:12:22,019 --> 00:12:23,640
growing time they created this thing

354
00:12:23,640 --> 00:12:26,519
earlier this year it's very new but it

355
00:12:26,519 --> 00:12:28,620
does directly affect one of our primary

356
00:12:28,620 --> 00:12:31,140
issues with open source style scanning

357
00:12:31,140 --> 00:12:32,760
but it is by no means the only

358
00:12:32,760 --> 00:12:34,680
government institution that has

359
00:12:34,680 --> 00:12:36,720
implications for our vulnerability not

360
00:12:36,720 --> 00:12:39,360
only Discovery but also identifying what

361
00:12:39,360 --> 00:12:41,519
does it do why does it matter for

362
00:12:41,519 --> 00:12:43,320
example the cyber security and

363
00:12:43,320 --> 00:12:45,899
infrastructure Security Agency that's a

364
00:12:45,899 --> 00:12:48,660
mouthful CSUB has done a lot of work

365
00:12:48,660 --> 00:12:50,639
lately Jenny easterly as he says she's

366
00:12:50,639 --> 00:12:52,260
just been absolutely amazing for the

367
00:12:52,260 --> 00:12:53,880
open source Community because while they

368
00:12:53,880 --> 00:12:56,459
focus on infrastructure it turns out

369
00:12:56,459 --> 00:12:57,839
that they release a lot of this

370
00:12:57,839 --> 00:12:59,579
information to the public and one of

371
00:12:59,579 --> 00:13:01,560
their sets of data that happens to be

372
00:13:01,560 --> 00:13:03,360
extremely useful for us is going to be

373
00:13:03,360 --> 00:13:05,760
their kevs known exploited

374
00:13:05,760 --> 00:13:07,980
vulnerabilities you see if we're kind of

375
00:13:07,980 --> 00:13:10,019
walking with me here on this one and we

376
00:13:10,019 --> 00:13:12,000
assume that most vulnerabilities aren't

377
00:13:12,000 --> 00:13:13,740
going to be exploited by adversaries at

378
00:13:13,740 --> 00:13:16,019
all and we want to fix the ones that

379
00:13:16,019 --> 00:13:17,820
will be

380
00:13:17,820 --> 00:13:20,040
which ones are those well if we look at

381
00:13:20,040 --> 00:13:21,240
this project

382
00:13:21,240 --> 00:13:22,980
it says these are the ones that

383
00:13:22,980 --> 00:13:25,500
adversaries are using today or that we

384
00:13:25,500 --> 00:13:27,180
have seen adversaries use in the past

385
00:13:27,180 --> 00:13:29,040
these are the known vulnerabilities in

386
00:13:29,040 --> 00:13:30,300
the wild that an adversary is exploiting

387
00:13:30,300 --> 00:13:32,279
does that mean it's all of them no by no

388
00:13:32,279 --> 00:13:34,019
means does it mean it's all of them but

389
00:13:34,019 --> 00:13:35,639
if we're trying to prioritize what

390
00:13:35,639 --> 00:13:37,380
things that maybe I as a hacker a pen

391
00:13:37,380 --> 00:13:39,660
tester would also like to exploit guess

392
00:13:39,660 --> 00:13:42,420
what if it's known that an attacker in

393
00:13:42,420 --> 00:13:44,040
the wild is successfully exploiting

394
00:13:44,040 --> 00:13:46,200
these things and I see them

395
00:13:46,200 --> 00:13:48,600
in an Enterprise that I'm pen testing I

396
00:13:48,600 --> 00:13:49,860
should probably be able to do that as

397
00:13:49,860 --> 00:13:51,800
well right makes a lot of sense

398
00:13:51,800 --> 00:13:53,700
furthermore if I'm a vulnerability

399
00:13:53,700 --> 00:13:55,620
assessor and I don't really know which

400
00:13:55,620 --> 00:13:57,480
vulnerabilities matter the most this

401
00:13:57,480 --> 00:14:00,000
certainly helps me identify how I should

402
00:14:00,000 --> 00:14:01,800
triage them because they're being used

403
00:14:01,800 --> 00:14:03,959
in the wild absolutely fantastic project

404
00:14:03,959 --> 00:14:07,380
and unlike NCSE scanning Made Easy sisa

405
00:14:07,380 --> 00:14:09,240
has been on the ball with updates here

406
00:14:09,240 --> 00:14:10,740
like we're talking hundreds of

407
00:14:10,740 --> 00:14:12,540
vulnerabilities added to this on a month

408
00:14:12,540 --> 00:14:14,399
by month basis it's also very new also

409
00:14:14,399 --> 00:14:16,139
from this year but they have put in a

410
00:14:16,139 --> 00:14:17,880
lot of effort and it shows it's

411
00:14:17,880 --> 00:14:19,380
absolutely fantastic there's anything

412
00:14:19,380 --> 00:14:21,420
you grab from this presentation that's

413
00:14:21,420 --> 00:14:22,860
going to have just Direct Value for you

414
00:14:22,860 --> 00:14:24,660
I imagine it might be this one because

415
00:14:24,660 --> 00:14:26,700
it's easy from a programmatic

416
00:14:26,700 --> 00:14:27,959
perspective remember I said we're going

417
00:14:27,959 --> 00:14:30,060
to sling some code you can also download

418
00:14:30,060 --> 00:14:33,660
this archive as a Json key value system

419
00:14:33,660 --> 00:14:35,399
all the way through we're going to use

420
00:14:35,399 --> 00:14:36,839
that here in just a little bit

421
00:14:36,839 --> 00:14:38,279
what we're talking about here is

422
00:14:38,279 --> 00:14:39,959
actually this concept of vulnerability

423
00:14:39,959 --> 00:14:42,839
intelligence it's a subsection of threat

424
00:14:42,839 --> 00:14:44,220
intelligence right so in the case of

425
00:14:44,220 --> 00:14:45,480
threat intelligence we often want to

426
00:14:45,480 --> 00:14:47,040
know what is an attacker using what's a

427
00:14:47,040 --> 00:14:48,600
tooling like well vulnerability

428
00:14:48,600 --> 00:14:50,040
intelligence looks at this from the

429
00:14:50,040 --> 00:14:52,320
context of the vulnerability itself you

430
00:14:52,320 --> 00:14:53,399
might actually see a little of this in

431
00:14:53,399 --> 00:14:55,260
your scanners for example let's say I'm

432
00:14:55,260 --> 00:14:57,300
scanning with rapid 7's Insight VM

433
00:14:57,300 --> 00:14:59,940
Appliance okay well if I find a

434
00:14:59,940 --> 00:15:01,620
vulnerability it might specifically say

435
00:15:01,620 --> 00:15:04,019
hey look this vulnerability has a module

436
00:15:04,019 --> 00:15:06,480
inside of Metasploit which means it's

437
00:15:06,480 --> 00:15:08,639
really easy low capability really easy

438
00:15:08,639 --> 00:15:10,199
for an attacker to take advantage of

439
00:15:10,199 --> 00:15:12,360
that and use it against us if I'm a pen

440
00:15:12,360 --> 00:15:14,220
tester this is Pay Dirt right

441
00:15:14,220 --> 00:15:16,440
I scanned it I clicked the Metasploit

442
00:15:16,440 --> 00:15:18,120
button and it takes me to exactly what

443
00:15:18,120 --> 00:15:19,440
exploit I might want to load up in

444
00:15:19,440 --> 00:15:21,660
Metasploit to leverage there might be a

445
00:15:21,660 --> 00:15:22,800
little bit more to it than that but

446
00:15:22,800 --> 00:15:24,959
that's the idea this is useful for us as

447
00:15:24,959 --> 00:15:27,000
a pen tester everything else perhaps not

448
00:15:27,000 --> 00:15:29,880
so much but can we integrate other data

449
00:15:29,880 --> 00:15:31,980
sets to show us what's useful we just

450
00:15:31,980 --> 00:15:34,380
talked about kevs absolutely but there

451
00:15:34,380 --> 00:15:36,839
are more maybe exploit DB what about the

452
00:15:36,839 --> 00:15:38,699
community you see whenever something big

453
00:15:38,699 --> 00:15:40,860
happens we are all talking about it

454
00:15:40,860 --> 00:15:43,380
right infosec Twitter explodes at least

455
00:15:43,380 --> 00:15:45,839
on a monthly basis now it might just be

456
00:15:45,839 --> 00:15:46,740
drama

457
00:15:46,740 --> 00:15:49,500
probably just drama but every now and

458
00:15:49,500 --> 00:15:50,820
then it's about something that really

459
00:15:50,820 --> 00:15:53,519
matters and that conversation is in fact

460
00:15:53,519 --> 00:15:55,320
encapsulated in something called CBE

461
00:15:55,320 --> 00:15:57,360
Trends and there's actually a command

462
00:15:57,360 --> 00:15:59,220
line tool called cve Pooler that you can

463
00:15:59,220 --> 00:16:01,199
use to pull down this information if you

464
00:16:01,199 --> 00:16:02,760
were to add that into your vulnerability

465
00:16:02,760 --> 00:16:04,680
data set as well you can see we're

466
00:16:04,680 --> 00:16:05,880
really starting to enrich that

467
00:16:05,880 --> 00:16:08,040
information right what sisa says is

468
00:16:08,040 --> 00:16:09,779
known to be exploited regularly what

469
00:16:09,779 --> 00:16:11,940
Metasploit says has modules that exist

470
00:16:11,940 --> 00:16:14,459
what the community is talking about all

471
00:16:14,459 --> 00:16:17,160
of this can help us identify where we

472
00:16:17,160 --> 00:16:19,680
want to go next after we discover a

473
00:16:19,680 --> 00:16:21,000
given issue

474
00:16:21,000 --> 00:16:22,440
and so when we look at vulnerability

475
00:16:22,440 --> 00:16:24,060
Discovery what we want to know is why

476
00:16:24,060 --> 00:16:25,199
does this condition matter to us and

477
00:16:25,199 --> 00:16:26,579
there could be a number of things active

478
00:16:26,579 --> 00:16:28,740
exploitation in the wild obvious easy to

479
00:16:28,740 --> 00:16:30,120
exploit maybe this Metasploit module

480
00:16:30,120 --> 00:16:32,220
great what about some other things

481
00:16:32,220 --> 00:16:34,139
though for example

482
00:16:34,139 --> 00:16:37,199
log 4J when log 4J came out sisa again

483
00:16:37,199 --> 00:16:38,699
Jenny easterly said this is the worst

484
00:16:38,699 --> 00:16:40,800
vulnerability that she has ever seen in

485
00:16:40,800 --> 00:16:42,420
her career

486
00:16:42,420 --> 00:16:43,620
I'm not saying it's not a bad

487
00:16:43,620 --> 00:16:45,720
vulnerability but it didn't turn out to

488
00:16:45,720 --> 00:16:48,120
be nearly as significant as we thought

489
00:16:48,120 --> 00:16:50,399
it was compare that to say Eternal blue

490
00:16:50,399 --> 00:16:53,459
which won a cry leverage right big big

491
00:16:53,459 --> 00:16:56,459
difference and the reason why is very

492
00:16:56,459 --> 00:16:58,920
direct lateral exposure through trust

493
00:16:58,920 --> 00:17:00,660
relationships you see it turns out in

494
00:17:00,660 --> 00:17:02,220
the case of long 4J the primary

495
00:17:02,220 --> 00:17:03,779
exploitation mechanism that we thought

496
00:17:03,779 --> 00:17:05,760
was going to happen in December actually

497
00:17:05,760 --> 00:17:08,040
proved to be true in December of last

498
00:17:08,040 --> 00:17:09,720
year we thought they were going to go

499
00:17:09,720 --> 00:17:11,400
after say Java based web applications

500
00:17:11,400 --> 00:17:12,780
and that's exactly what the attackers

501
00:17:12,780 --> 00:17:14,939
did but Java web servers particularly

502
00:17:14,939 --> 00:17:16,260
those exposed to the internet are

503
00:17:16,260 --> 00:17:18,540
typically running on Unix systems maybe

504
00:17:18,540 --> 00:17:20,939
it's Red Hat maybe it's Ubuntu who knows

505
00:17:20,939 --> 00:17:22,500
who cares the point is it's probably not

506
00:17:22,500 --> 00:17:24,179
connected to active directory and if

507
00:17:24,179 --> 00:17:27,059
we're looking at incident response it's

508
00:17:27,059 --> 00:17:28,980
almost always active directory I do

509
00:17:28,980 --> 00:17:31,440
instant response all the time and it's

510
00:17:31,440 --> 00:17:33,240
very very sad like if I have to do one

511
00:17:33,240 --> 00:17:34,860
more instant response and it's because

512
00:17:34,860 --> 00:17:37,740
the domain admin password is password123

513
00:17:37,740 --> 00:17:39,780
I'm going to lose it it's over I'm going

514
00:17:39,780 --> 00:17:41,460
to lose it this happens all the time

515
00:17:41,460 --> 00:17:43,140
right

516
00:17:43,140 --> 00:17:45,179
but this is because of those trust

517
00:17:45,179 --> 00:17:47,220
relationships between systems in the

518
00:17:47,220 --> 00:17:48,900
case of log4j have we seen ransomware

519
00:17:48,900 --> 00:17:50,580
yes we have we've actually seen a little

520
00:17:50,580 --> 00:17:51,660
bit of ransomware the first one we saw

521
00:17:51,660 --> 00:17:53,220
was in January by a group called night

522
00:17:53,220 --> 00:17:55,860
sky and they were ransoming servers for

523
00:17:55,860 --> 00:17:59,280
about 800k a piece this seems like a lot

524
00:17:59,280 --> 00:18:01,740
of money I'm here to tell you today

525
00:18:01,740 --> 00:18:04,559
it's not that much money an 800 or 800

526
00:18:04,559 --> 00:18:07,140
800 Grand ransomware that's kind of

527
00:18:07,140 --> 00:18:11,100
pennies I mean Aces last year 40 million

528
00:18:11,100 --> 00:18:14,220
and they paid it caseya I believe that

529
00:18:14,220 --> 00:18:16,080
one was 60 million because I didn't pay

530
00:18:16,080 --> 00:18:18,720
it but 60 million wow there's some upper

531
00:18:18,720 --> 00:18:22,140
uppity hackers over here right well all

532
00:18:22,140 --> 00:18:23,940
of those related to Windows Active

533
00:18:23,940 --> 00:18:25,620
Directory Colonial pipeline same story

534
00:18:25,620 --> 00:18:27,179
fair at Colonial pipeline is a bad

535
00:18:27,179 --> 00:18:28,860
password but the attackers still went

536
00:18:28,860 --> 00:18:31,559
after it systems that trusted each other

537
00:18:31,559 --> 00:18:33,840
they didn't focus on individual servers

538
00:18:33,840 --> 00:18:36,299
which is what log4j kind of exposed So

539
00:18:36,299 --> 00:18:37,980
based off of this we could theoretically

540
00:18:37,980 --> 00:18:40,140
have identified that Christmas break

541
00:18:40,140 --> 00:18:42,419
last year probably didn't need to be

542
00:18:42,419 --> 00:18:45,360
canceled ah hindsight is 20 20. but

543
00:18:45,360 --> 00:18:46,860
let's not go back to 2020. we've been

544
00:18:46,860 --> 00:18:49,200
there it wasn't fun

545
00:18:49,200 --> 00:18:51,120
the thing is most vulnerabilities will

546
00:18:51,120 --> 00:18:53,220
never matter to anyone for any reason

547
00:18:53,220 --> 00:18:56,220
period whatsoever they really utterly

548
00:18:56,220 --> 00:18:58,080
don't take a look at this this is from

549
00:18:58,080 --> 00:19:00,000
the national vulnerability database I

550
00:19:00,000 --> 00:19:02,520
took this screenshot about two weeks ago

551
00:19:02,520 --> 00:19:04,320
before these slides and you'll notice

552
00:19:04,320 --> 00:19:07,100
the cve that's been issued here is 2022

553
00:19:07,100 --> 00:19:10,320
39 292.

554
00:19:10,320 --> 00:19:12,600
39 that means this week we probably are

555
00:19:12,600 --> 00:19:15,679
over cve 40 000. does anyone here

556
00:19:15,679 --> 00:19:19,380
adopted 40 000 plus new techniques into

557
00:19:19,380 --> 00:19:20,820
their toolkit that they leverage this

558
00:19:20,820 --> 00:19:23,280
year yeah no right nobody's doing that

559
00:19:23,280 --> 00:19:24,780
what about attackers are they doing this

560
00:19:24,780 --> 00:19:28,380
no in fact attackers rarely ever if they

561
00:19:28,380 --> 00:19:30,600
can help it change their methodology

562
00:19:30,600 --> 00:19:34,140
here's why we often think about hackers

563
00:19:34,140 --> 00:19:35,820
as criminals which is to say we say oh

564
00:19:35,820 --> 00:19:37,200
they're a bad guy if they were to hack

565
00:19:37,200 --> 00:19:38,400
this thing they could get a million

566
00:19:38,400 --> 00:19:39,960
dollars they definitely are going to go

567
00:19:39,960 --> 00:19:42,179
after that thing guess what there are a

568
00:19:42,179 --> 00:19:43,980
lot of fish in the ocean a lot of fish

569
00:19:43,980 --> 00:19:46,980
in the ocean if I'm an attacker I want

570
00:19:46,980 --> 00:19:49,260
to have a high billable rate I'm not

571
00:19:49,260 --> 00:19:51,539
kidding a high billable rate right so

572
00:19:51,539 --> 00:19:53,400
I'm an adversary I'm doing a job that

573
00:19:53,400 --> 00:19:55,500
has a high degree of risk I could get uh

574
00:19:55,500 --> 00:19:57,660
discovered I could get extradited I

575
00:19:57,660 --> 00:19:59,880
could go to jail for many many years I

576
00:19:59,880 --> 00:20:01,140
don't really want to go to jail which

577
00:20:01,140 --> 00:20:03,299
means to make this worth my while you

578
00:20:03,299 --> 00:20:05,280
better pay me right ten thousand dollars

579
00:20:05,280 --> 00:20:07,140
an hour not that measly hundred dollars

580
00:20:07,140 --> 00:20:09,360
an hour pen test stuff get out of here

581
00:20:09,360 --> 00:20:11,220
with that but this is how attackers

582
00:20:11,220 --> 00:20:13,919
think guess what if I as an attacker and

583
00:20:13,919 --> 00:20:15,840
learning a new technique or I am

584
00:20:15,840 --> 00:20:18,059
updating or creating new tools am I

585
00:20:18,059 --> 00:20:19,440
getting paid for that

586
00:20:19,440 --> 00:20:21,780
no I mean it might make my next attack

587
00:20:21,780 --> 00:20:24,299
more efficient but it is definitely not

588
00:20:24,299 --> 00:20:27,600
billable work and so I by and large will

589
00:20:27,600 --> 00:20:29,400
prefer to use features over

590
00:20:29,400 --> 00:20:31,260
vulnerabilities especially over cves

591
00:20:31,260 --> 00:20:33,720
that could be patched

592
00:20:33,720 --> 00:20:36,299
instead because my billable rate will be

593
00:20:36,299 --> 00:20:37,320
higher

594
00:20:37,320 --> 00:20:39,120
all right now let's take a look here's

595
00:20:39,120 --> 00:20:40,380
some more information that comes out of

596
00:20:40,380 --> 00:20:43,080
this it also includes a cdsf score and

597
00:20:43,080 --> 00:20:45,179
in this case we can even see exactly how

598
00:20:45,179 --> 00:20:48,179
it calculated the base CBS F score cbss

599
00:20:48,179 --> 00:20:49,799
is a little bit of a contentious Topic

600
00:20:49,799 --> 00:20:52,260
in infosec some people love it other

601
00:20:52,260 --> 00:20:55,799
people hate it and both both groups are

602
00:20:55,799 --> 00:20:57,240
completely wrong because they just don't

603
00:20:57,240 --> 00:20:59,100
understand what cbss does you see the

604
00:20:59,100 --> 00:21:00,840
way we use CVS as by and large in the

605
00:21:00,840 --> 00:21:03,179
community today is we take the CVSs

606
00:21:03,179 --> 00:21:04,860
score from whatever tool gave us a score

607
00:21:04,860 --> 00:21:06,960
and then we do things with that maybe we

608
00:21:06,960 --> 00:21:10,500
just rate by uh Rank by severity and

609
00:21:10,500 --> 00:21:12,240
then we start patching from the top down

610
00:21:12,240 --> 00:21:14,160
perhaps can we do better things do

611
00:21:14,160 --> 00:21:15,840
people do better things absolutely but

612
00:21:15,840 --> 00:21:17,220
here's the main issue right off the bat

613
00:21:17,220 --> 00:21:19,559
you're not using cbss

614
00:21:19,559 --> 00:21:23,100
you're using the CVSs base score

615
00:21:23,100 --> 00:21:25,080
it turns out there are three components

616
00:21:25,080 --> 00:21:28,919
to CVSs base score temporal score and

617
00:21:28,919 --> 00:21:30,960
the environmental score so most

618
00:21:30,960 --> 00:21:32,760
organizations were using CVSs are

619
00:21:32,760 --> 00:21:35,100
actually only using a third of it and

620
00:21:35,100 --> 00:21:37,080
that gives you a really good business

621
00:21:37,080 --> 00:21:39,960
opportunity if you're a capitalist with

622
00:21:39,960 --> 00:21:42,179
tenable and you come up with BPR anyone

623
00:21:42,179 --> 00:21:45,299
from the VPR VPR is tenable's custom

624
00:21:45,299 --> 00:21:47,400
risk calculation system a lot of people

625
00:21:47,400 --> 00:21:49,620
really like VPR because it's better than

626
00:21:49,620 --> 00:21:52,679
cbss but the thing is VPR is actually

627
00:21:52,679 --> 00:21:55,860
basically cdss they just completed most

628
00:21:55,860 --> 00:21:57,299
of it and they tacked on a couple extra

629
00:21:57,299 --> 00:21:59,280
little bits of salt and pepper on top of

630
00:21:59,280 --> 00:22:01,860
it so if you like VPR it turns out

631
00:22:01,860 --> 00:22:04,799
technically like CVSs you just don't

632
00:22:04,799 --> 00:22:08,280
know it yet oh nice so if I'm a

633
00:22:08,280 --> 00:22:09,840
penetration tester I hate all of this

634
00:22:09,840 --> 00:22:12,960
right I hate all of this CBS has 10 you

635
00:22:12,960 --> 00:22:14,220
see those for Internet Explorer

636
00:22:14,220 --> 00:22:16,140
client-side vulnerabilities on servers

637
00:22:16,140 --> 00:22:17,340
where Internet Explorer has literally

638
00:22:17,340 --> 00:22:20,820
never been run simultaneously the nvd

639
00:22:20,820 --> 00:22:22,980
score for Eternal blue that's that Wanna

640
00:22:22,980 --> 00:22:25,080
Cry thing right Merc this year actually

641
00:22:25,080 --> 00:22:27,299
they just won their court case against

642
00:22:27,299 --> 00:22:30,120
their insurance firm for 1.2 billion

643
00:22:30,120 --> 00:22:31,980
dollars in Damages so it took them five

644
00:22:31,980 --> 00:22:33,900
years for that court case but by the end

645
00:22:33,900 --> 00:22:37,020
of it they won and they got 1.2 billion

646
00:22:37,020 --> 00:22:40,640
for it that is an 8.1 CVSs According to

647
00:22:40,640 --> 00:22:43,260
nvd which is what is used by all three

648
00:22:43,260 --> 00:22:45,840
of the major proprietary scanners this

649
00:22:45,840 --> 00:22:48,539
is not tenable pun intended

650
00:22:48,539 --> 00:22:50,400
and so what we need to understand here

651
00:22:50,400 --> 00:22:52,200
is that they there is a lot of

652
00:22:52,200 --> 00:22:54,299
opportunity our scanners may not be

653
00:22:54,299 --> 00:22:55,980
leveraging it but if we can take control

654
00:22:55,980 --> 00:22:58,500
of our vulnerability data set itself we

655
00:22:58,500 --> 00:23:00,419
can enrich that information and we can

656
00:23:00,419 --> 00:23:01,799
walk away with something that is much

657
00:23:01,799 --> 00:23:04,380
more viable and useful for us plus if we

658
00:23:04,380 --> 00:23:06,659
control our data we can also leverage it

659
00:23:06,659 --> 00:23:09,179
to do more for example

660
00:23:09,179 --> 00:23:10,919
if we had a vulnerably scanning agent

661
00:23:10,919 --> 00:23:13,020
that was designed for penetration

662
00:23:13,020 --> 00:23:15,419
testers what other features might that

663
00:23:15,419 --> 00:23:17,400
agent have

664
00:23:17,400 --> 00:23:19,620
maybe it dumps passwords maybe it cracks

665
00:23:19,620 --> 00:23:21,539
passwords if I'm a vulnerability

666
00:23:21,539 --> 00:23:23,280
assessor I want to know if my domain

667
00:23:23,280 --> 00:23:25,500
admin password is password123 if you're

668
00:23:25,500 --> 00:23:27,120
doing a VA and you have not checked for

669
00:23:27,120 --> 00:23:29,400
that that's a mistake like come on you

670
00:23:29,400 --> 00:23:31,080
gotta do that right so as a

671
00:23:31,080 --> 00:23:32,340
vulnerability scanner shouldn't the

672
00:23:32,340 --> 00:23:33,900
vulnerability scanners potentially do

673
00:23:33,900 --> 00:23:34,919
this

674
00:23:34,919 --> 00:23:36,900
well it could it definitely could and it

675
00:23:36,900 --> 00:23:38,640
could add that to the vulnerability

676
00:23:38,640 --> 00:23:40,080
database

677
00:23:40,080 --> 00:23:42,240
but if it's a proprietary tool we can't

678
00:23:42,240 --> 00:23:43,500
do this

679
00:23:43,500 --> 00:23:44,940
could the scanner identify privileged

680
00:23:44,940 --> 00:23:47,580
escalation opportunities heck yeah what

681
00:23:47,580 --> 00:23:49,500
if I've got an agent right and I've put

682
00:23:49,500 --> 00:23:50,820
this around my environment and it's

683
00:23:50,820 --> 00:23:52,200
scanning for local vulnerabilities maybe

684
00:23:52,200 --> 00:23:53,580
misconfiguration once and I'm a pen

685
00:23:53,580 --> 00:23:56,100
tester right well maybe I would like to

686
00:23:56,100 --> 00:23:57,780
escalate privileges wouldn't it be

687
00:23:57,780 --> 00:24:00,600
lovely for my say pen testing agent like

688
00:24:00,600 --> 00:24:02,280
interpreter to have scanning

689
00:24:02,280 --> 00:24:04,740
functionality built into it yeah I'd

690
00:24:04,740 --> 00:24:06,480
like that password auditing talked about

691
00:24:06,480 --> 00:24:08,460
that one and what about system hardening

692
00:24:08,460 --> 00:24:09,840
details this is actually a pretty

693
00:24:09,840 --> 00:24:12,240
interesting one likely more useful for

694
00:24:12,240 --> 00:24:14,039
vulnerability assessors than penetration

695
00:24:14,039 --> 00:24:16,020
testers but if we're looking at risk of

696
00:24:16,020 --> 00:24:18,419
a given system and we want to downgrade

697
00:24:18,419 --> 00:24:20,940
that risk based off of security controls

698
00:24:20,940 --> 00:24:22,380
that have been put in place on the

699
00:24:22,380 --> 00:24:24,539
systems where those controls exist and

700
00:24:24,539 --> 00:24:26,520
upgrade the risk for systems where those

701
00:24:26,520 --> 00:24:28,500
controls do not exist shouldn't the

702
00:24:28,500 --> 00:24:30,240
scanner be able to identify those or

703
00:24:30,240 --> 00:24:31,919
shouldn't we at least be able to add

704
00:24:31,919 --> 00:24:34,799
those into something like our host asset

705
00:24:34,799 --> 00:24:36,900
configuration that the scanner adjusts

706
00:24:36,900 --> 00:24:38,940
and addresses space on

707
00:24:38,940 --> 00:24:40,980
that would be really nice with

708
00:24:40,980 --> 00:24:43,380
proprietary tooling all of that data set

709
00:24:43,380 --> 00:24:45,120
is not accessible to us their

710
00:24:45,120 --> 00:24:47,940
vulnerability database itself belongs to

711
00:24:47,940 --> 00:24:50,039
the vendor and therefore

712
00:24:50,039 --> 00:24:52,080
any brainstorming any thoughts that we

713
00:24:52,080 --> 00:24:53,640
have that we can come up with to do

714
00:24:53,640 --> 00:24:57,419
better are not accessible to us and so

715
00:24:57,419 --> 00:24:58,740
let's put this all together shall we

716
00:24:58,740 --> 00:25:00,179
let's build ourselves a vulnerability

717
00:25:00,179 --> 00:25:02,220
database and move on

718
00:25:02,220 --> 00:25:03,600
and so I was talking with a friend of

719
00:25:03,600 --> 00:25:06,059
mine Mick Douglass he recently got out

720
00:25:06,059 --> 00:25:07,799
of brain surgery he's okay good for Mick

721
00:25:07,799 --> 00:25:10,020
and he asked me a question over the

722
00:25:10,020 --> 00:25:11,880
summer he said Matt what vulnerability

723
00:25:11,880 --> 00:25:13,320
scanner on the open source side would

724
00:25:13,320 --> 00:25:15,960
you recommend and I respond with a very

725
00:25:15,960 --> 00:25:18,440
eloquent

726
00:25:18,659 --> 00:25:21,360
and he's like you right over there why

727
00:25:21,360 --> 00:25:23,039
must you cause me so much harm because I

728
00:25:23,039 --> 00:25:25,200
am a melodramatic in the extreme oh by

729
00:25:25,200 --> 00:25:26,520
the way I'm riding one and that's why

730
00:25:26,520 --> 00:25:29,400
this question hurts me passionately

731
00:25:29,400 --> 00:25:31,380
and then he asks me this question which

732
00:25:31,380 --> 00:25:33,299
is just amazing he says

733
00:25:33,299 --> 00:25:36,480
can I help can I help with this

734
00:25:36,480 --> 00:25:37,860
and that's because he's a terrible

735
00:25:37,860 --> 00:25:41,100
capitalist right help with this for free

736
00:25:41,100 --> 00:25:43,919
for the community that's communism 101

737
00:25:43,919 --> 00:25:46,140
baby but it turns out that infosec

738
00:25:46,140 --> 00:25:48,419
Communists live and reside amongst us

739
00:25:48,419 --> 00:25:51,059
and they were the Genesis of a lot of

740
00:25:51,059 --> 00:25:52,799
the project and code that we're about to

741
00:25:52,799 --> 00:25:54,240
go through here in this next little

742
00:25:54,240 --> 00:25:56,880
section specifically I was talking on

743
00:25:56,880 --> 00:25:58,620
Twitter as one does I'm like oh my gosh

744
00:25:58,620 --> 00:25:59,760
wouldn't it be nice if there was

745
00:25:59,760 --> 00:26:01,020
something that could control and work

746
00:26:01,020 --> 00:26:03,720
with the NBD data set and Lucas over

747
00:26:03,720 --> 00:26:06,059
here he goes by the handle pendantix

748
00:26:06,059 --> 00:26:07,500
he sent me a message he's like hey look

749
00:26:07,500 --> 00:26:08,880
I was working on this project a while

750
00:26:08,880 --> 00:26:09,840
ago

751
00:26:09,840 --> 00:26:11,640
here's his source code for that project

752
00:26:11,640 --> 00:26:13,679
and it does pretty much what you're

753
00:26:13,679 --> 00:26:15,779
asking for so I took it tweaked it and

754
00:26:15,779 --> 00:26:17,940
slapped it in absolutely we don't have

755
00:26:17,940 --> 00:26:20,100
to start from scratch in this endeavor a

756
00:26:20,100 --> 00:26:21,299
lot of the work has already been done

757
00:26:21,299 --> 00:26:22,980
for us all we need to do is put a couple

758
00:26:22,980 --> 00:26:25,860
things together and then profit on it so

759
00:26:25,860 --> 00:26:27,120
first off let's go ahead and build

760
00:26:27,120 --> 00:26:29,400
ourselves that database

761
00:26:29,400 --> 00:26:31,140
in this case we want to pull down the

762
00:26:31,140 --> 00:26:33,360
information from nvd and we might be

763
00:26:33,360 --> 00:26:36,000
able to send an API request to add in a

764
00:26:36,000 --> 00:26:38,400
vulnerability to the database itself

765
00:26:38,400 --> 00:26:40,500
this means that we get to control what

766
00:26:40,500 --> 00:26:42,360
vulnerabilities live in that it turns

767
00:26:42,360 --> 00:26:44,039
out that your scanning vendors aren't

768
00:26:44,039 --> 00:26:45,779
doing this manually themselves they're

769
00:26:45,779 --> 00:26:48,659
using nvd's data set as well so if we

770
00:26:48,659 --> 00:26:51,539
can pull down their Json format it

771
00:26:51,539 --> 00:26:53,760
thanks Lucas and put it into our own

772
00:26:53,760 --> 00:26:56,279
database now we have a very solid place

773
00:26:56,279 --> 00:26:58,799
to start that is a 90 solution of what

774
00:26:58,799 --> 00:27:01,140
our vendors already sell us that's

775
00:27:01,140 --> 00:27:03,600
fantastic but let's not stop there what

776
00:27:03,600 --> 00:27:05,039
if we want to enrich this data let's

777
00:27:05,039 --> 00:27:10,200
take KV kevs from say cisa's Json setup

778
00:27:10,200 --> 00:27:12,240
and let's go ahead and plop those in as

779
00:27:12,240 --> 00:27:14,100
well in order to do this if we're

780
00:27:14,100 --> 00:27:15,659
interactive with the API we can just

781
00:27:15,659 --> 00:27:18,120
make rest requests against it kind of

782
00:27:18,120 --> 00:27:20,279
like you see here in this case this is

783
00:27:20,279 --> 00:27:23,460
the nvd formatted output for a

784
00:27:23,460 --> 00:27:25,620
vulnerability if we add additional

785
00:27:25,620 --> 00:27:29,159
fields to that and send it to our API

786
00:27:29,159 --> 00:27:30,840
we will now have

787
00:27:30,840 --> 00:27:32,820
an adjusted vulnerability there and in

788
00:27:32,820 --> 00:27:34,200
this case we're just saying hey look

789
00:27:34,200 --> 00:27:35,760
this is listed in kbvs and there's a

790
00:27:35,760 --> 00:27:37,440
Metasploit exploit for it and we fire

791
00:27:37,440 --> 00:27:39,419
that off super easy to do this

792
00:27:39,419 --> 00:27:42,360
this here is a tool called uh

793
00:27:42,360 --> 00:27:44,100
Postman yes that's the name of the tool

794
00:27:44,100 --> 00:27:46,320
and all of the apis here are fully

795
00:27:46,320 --> 00:27:47,880
documented and you can leverage them

796
00:27:47,880 --> 00:27:49,620
plus if you really want to get a little

797
00:27:49,620 --> 00:27:52,620
bit handsy with it you can also open up

798
00:27:52,620 --> 00:27:56,340
the say curl output of it and we could

799
00:27:56,340 --> 00:27:58,140
just script this all straight on say a

800
00:27:58,140 --> 00:28:01,740
Unix command line like this

801
00:28:01,740 --> 00:28:03,779
and then Bob's your uncle we get the

802
00:28:03,779 --> 00:28:05,220
data and we can do whatever we want with

803
00:28:05,220 --> 00:28:06,779
it and this is a really important piece

804
00:28:06,779 --> 00:28:08,460
because if I want to script something I

805
00:28:08,460 --> 00:28:10,020
just slap it into curl and then do

806
00:28:10,020 --> 00:28:11,039
something with that data Maybe write

807
00:28:11,039 --> 00:28:12,840
myself a real quick python script to do

808
00:28:12,840 --> 00:28:13,679
a check through the vulnerability

809
00:28:13,679 --> 00:28:15,480
database to identify maybe all the

810
00:28:15,480 --> 00:28:17,880
vulnerabilities tag KV I can now do that

811
00:28:17,880 --> 00:28:19,380
from the command line really quickly

812
00:28:19,380 --> 00:28:20,940
really easily if I didn't want to do it

813
00:28:20,940 --> 00:28:23,220
from the command line all of the postman

814
00:28:23,220 --> 00:28:25,620
API requests are documented and they're

815
00:28:25,620 --> 00:28:27,960
public you can use those too or of

816
00:28:27,960 --> 00:28:30,480
course we could go one step further now

817
00:28:30,480 --> 00:28:31,320
the next question we're going to ask

818
00:28:31,320 --> 00:28:34,559
ourselves is that's lovely and I get how

819
00:28:34,559 --> 00:28:36,840
that might be useful but how does this

820
00:28:36,840 --> 00:28:39,120
help me find vulnerabilities in the

821
00:28:39,120 --> 00:28:41,580
first place well here's this thing

822
00:28:41,580 --> 00:28:43,799
called cpes CB stands for common

823
00:28:43,799 --> 00:28:45,720
platform enumeration and is a

824
00:28:45,720 --> 00:28:48,600
specification much like cve a common

825
00:28:48,600 --> 00:28:50,100
vulnerability vulnerabilities and

826
00:28:50,100 --> 00:28:52,140
exposures and it allows us to identify

827
00:28:52,140 --> 00:28:55,080
and fingerprint a piece of software it

828
00:28:55,080 --> 00:28:57,360
calls them products so here we see inner

829
00:28:57,360 --> 00:28:58,980
Explorer the exact version of Explorer

830
00:28:58,980 --> 00:29:00,720
Etc et cetera et cetera and if we did

831
00:29:00,720 --> 00:29:02,940
this which you might have noticed if you

832
00:29:02,940 --> 00:29:04,559
look really carefully here

833
00:29:04,559 --> 00:29:05,580
is that each one of these

834
00:29:05,580 --> 00:29:07,980
vulnerabilities has a CPE there it is

835
00:29:07,980 --> 00:29:11,279
associated with it as well and so we can

836
00:29:11,279 --> 00:29:13,559
technically do is fingerprint our

837
00:29:13,559 --> 00:29:15,960
software and look it up against that API

838
00:29:15,960 --> 00:29:18,539
and boom we're going to get a list of

839
00:29:18,539 --> 00:29:20,640
every cve that is associated with any

840
00:29:20,640 --> 00:29:23,580
given CPE sounds like magic let's see

841
00:29:23,580 --> 00:29:25,260
how this works so first off we probably

842
00:29:25,260 --> 00:29:26,820
want to create ourselves a host in our

843
00:29:26,820 --> 00:29:27,779
data set as well we're talking about

844
00:29:27,779 --> 00:29:29,340
vulnerability so far but now we're going

845
00:29:29,340 --> 00:29:30,899
to assign vulnerabilities to something

846
00:29:30,899 --> 00:29:33,059
that might be a host product whatever it

847
00:29:33,059 --> 00:29:34,440
might be we can just create a host real

848
00:29:34,440 --> 00:29:35,940
quick you wouldn't necessarily need to

849
00:29:35,940 --> 00:29:37,200
put all of this information in but

850
00:29:37,200 --> 00:29:39,299
that's a template example and now we

851
00:29:39,299 --> 00:29:41,940
want to find out what plot products are

852
00:29:41,940 --> 00:29:44,460
on our system very easy to do this open

853
00:29:44,460 --> 00:29:46,980
up Windows applications and features and

854
00:29:46,980 --> 00:29:49,080
read it Google Chrome here's the version

855
00:29:49,080 --> 00:29:51,179
there's our CPE

856
00:29:51,179 --> 00:29:52,740
lovely

857
00:29:52,740 --> 00:29:55,500
then we can push that CBE to the host by

858
00:29:55,500 --> 00:29:56,880
just making API request here we're doing

859
00:29:56,880 --> 00:29:58,320
it with curl you don't necessarily have

860
00:29:58,320 --> 00:29:59,700
to do it with curl here's an example of

861
00:29:59,700 --> 00:30:01,380
doing that with curl

862
00:30:01,380 --> 00:30:04,140
all right lovely so far so good there

863
00:30:04,140 --> 00:30:06,000
are a couple problems here though notice

864
00:30:06,000 --> 00:30:08,039
that these cpes are by version number

865
00:30:08,039 --> 00:30:10,679
and if you look at the nvd data set it

866
00:30:10,679 --> 00:30:12,539
says this is from version X until

867
00:30:12,539 --> 00:30:14,940
Version Y in this case it says all the

868
00:30:14,940 --> 00:30:18,539
way up to 3.2 so technically with cpes

869
00:30:18,539 --> 00:30:20,580
you might just get a lot of stars at the

870
00:30:20,580 --> 00:30:22,140
end and it doesn't actually say which

871
00:30:22,140 --> 00:30:24,659
version because it might be a gamut of

872
00:30:24,659 --> 00:30:26,220
different version of the software that

873
00:30:26,220 --> 00:30:27,840
are affected so you need to go through

874
00:30:27,840 --> 00:30:29,460
and manually

875
00:30:29,460 --> 00:30:31,620
parse those all out

876
00:30:31,620 --> 00:30:34,140
no you don't the API itself will do that

877
00:30:34,140 --> 00:30:35,580
for you automatically inside of the

878
00:30:35,580 --> 00:30:36,480
background

879
00:30:36,480 --> 00:30:37,679
we'll take a look at that here in just a

880
00:30:37,679 --> 00:30:39,960
second so this is fantastic

881
00:30:39,960 --> 00:30:42,059
but it's really tedious I mean go to

882
00:30:42,059 --> 00:30:43,559
every single one of your systems open up

883
00:30:43,559 --> 00:30:45,120
Windows applications and features

884
00:30:45,120 --> 00:30:47,580
fingerprint the version craft a CPE and

885
00:30:47,580 --> 00:30:49,500
shove that into a curl request this

886
00:30:49,500 --> 00:30:50,760
sounds like we need some code to

887
00:30:50,760 --> 00:30:52,679
automate this now two pieces on this the

888
00:30:52,679 --> 00:30:53,760
reason why I wanted to talk about how it

889
00:30:53,760 --> 00:30:55,919
works is because let's say that we're

890
00:30:55,919 --> 00:30:57,779
dealing with an organization that maybe

891
00:30:57,779 --> 00:31:00,000
has it time but they don't have a single

892
00:31:00,000 --> 00:31:01,980
infosec role I find myself in this

893
00:31:01,980 --> 00:31:03,659
position pretty frequently we're talking

894
00:31:03,659 --> 00:31:05,100
about mid cap companies here normally

895
00:31:05,100 --> 00:31:07,500
between 50 million to 150 million in

896
00:31:07,500 --> 00:31:09,000
annual revenue so not small companies

897
00:31:09,000 --> 00:31:12,179
but not big enough to have a dedicated

898
00:31:12,179 --> 00:31:14,820
information security position at 150

899
00:31:14,820 --> 00:31:16,260
should you

900
00:31:16,260 --> 00:31:18,360
I'll leave that up to the business to

901
00:31:18,360 --> 00:31:19,799
answer that question but in my

902
00:31:19,799 --> 00:31:21,960
experience the answer tends to be no in

903
00:31:21,960 --> 00:31:24,059
that case is there a tedious mechanism

904
00:31:24,059 --> 00:31:25,980
that they could employ in order to get a

905
00:31:25,980 --> 00:31:27,179
good idea of vulnerabilities in their

906
00:31:27,179 --> 00:31:30,240
systems yes so could be useful but for

907
00:31:30,240 --> 00:31:31,380
us if we're dealing with a lot of

908
00:31:31,380 --> 00:31:33,240
vulnerabilities we probably want to

909
00:31:33,240 --> 00:31:36,419
automate this and here we have an agent

910
00:31:36,419 --> 00:31:38,880
so this case is an agent written in go

911
00:31:38,880 --> 00:31:41,220
and it goes through and scrapes out all

912
00:31:41,220 --> 00:31:43,679
of the cpes and then submits that curl

913
00:31:43,679 --> 00:31:46,860
request essentially steam go to the API

914
00:31:46,860 --> 00:31:49,559
Bam Bam Bam Bam Bam and now we have a

915
00:31:49,559 --> 00:31:51,240
list of all the software products are

916
00:31:51,240 --> 00:31:52,919
installed on that system and has

917
00:31:52,919 --> 00:31:54,419
resolved a full list of vulnerabilities

918
00:31:54,419 --> 00:31:56,520
that affect that system based off of the

919
00:31:56,520 --> 00:31:59,279
software that is installed now this is

920
00:31:59,279 --> 00:32:00,419
for more application style

921
00:32:00,419 --> 00:32:01,919
vulnerabilities it will work for some

922
00:32:01,919 --> 00:32:03,840
say window system issues however if

923
00:32:03,840 --> 00:32:06,120
we're looking for an issue with say SMB

924
00:32:06,120 --> 00:32:07,880
version one

925
00:32:07,880 --> 00:32:09,899
fingerprinting the host level

926
00:32:09,899 --> 00:32:11,820
applications is probably not going to

927
00:32:11,820 --> 00:32:13,679
give us a huge amount of insight on that

928
00:32:13,679 --> 00:32:16,020
but it is going to give us the first

929
00:32:16,020 --> 00:32:17,520
half of the story

930
00:32:17,520 --> 00:32:19,140
so if we go through a little more agent

931
00:32:19,140 --> 00:32:20,460
scanning here

932
00:32:20,460 --> 00:32:22,860
um oh right

933
00:32:22,860 --> 00:32:24,899
I have a problem you see I'm a red

934
00:32:24,899 --> 00:32:27,059
teamer I'm a pen tester and I do a

935
00:32:27,059 --> 00:32:28,140
decent amount of security conference

936
00:32:28,140 --> 00:32:30,059
presentations normally I'm releasing

937
00:32:30,059 --> 00:32:31,799
something on a red team site like a back

938
00:32:31,799 --> 00:32:33,840
door or an implant I've done this at

939
00:32:33,840 --> 00:32:36,000
Derby con Wild West hack Fest b-sizes

940
00:32:36,000 --> 00:32:38,640
all kinds of things and I blame the NSA

941
00:32:38,640 --> 00:32:41,220
for making me do this I cannot build an

942
00:32:41,220 --> 00:32:43,140
agent without turning it into an implant

943
00:32:43,140 --> 00:32:45,299
and so in this case the agent itself can

944
00:32:45,299 --> 00:32:48,720
execute arbitrary commands why I

945
00:32:48,720 --> 00:32:51,419
couldn't help myself I wanted it and it

946
00:32:51,419 --> 00:32:54,360
does but here's an idea do EDR agents

947
00:32:54,360 --> 00:32:57,179
give the blue team the ability to

948
00:32:57,179 --> 00:32:59,220
respond perhaps on the command line to

949
00:32:59,220 --> 00:33:00,419
remote systems that they want to query

950
00:33:00,419 --> 00:33:03,299
absolutely they do just execution isn't

951
00:33:03,299 --> 00:33:05,220
necessarily an attack style feature set

952
00:33:05,220 --> 00:33:07,799
but if I am a penetration tester and

953
00:33:07,799 --> 00:33:09,120
there's an agent that I can use to run

954
00:33:09,120 --> 00:33:10,620
arbitrary commands upload and download

955
00:33:10,620 --> 00:33:12,899
and execute then I can easily switch off

956
00:33:12,899 --> 00:33:14,760
of this agent to interpreter or Cobalt

957
00:33:14,760 --> 00:33:15,960
strike or whatever it is that I want to

958
00:33:15,960 --> 00:33:18,539
maybe go on with plus I now have an

959
00:33:18,539 --> 00:33:19,980
agent that I can use to do scanning

960
00:33:19,980 --> 00:33:22,200
locally on the system itself

961
00:33:22,200 --> 00:33:25,380
plus Matt has again a problem and I

962
00:33:25,380 --> 00:33:26,760
added extensibility into this by

963
00:33:26,760 --> 00:33:28,860
extensibility I mean it can execute

964
00:33:28,860 --> 00:33:31,260
arbitrary.net assemblies you want sharp

965
00:33:31,260 --> 00:33:33,419
splits you got sharp split what else is

966
00:33:33,419 --> 00:33:35,700
the.net assembly mini cats yes you can

967
00:33:35,700 --> 00:33:37,019
do that so technically none of the stuff

968
00:33:37,019 --> 00:33:38,700
is in the tool itself because it's not

969
00:33:38,700 --> 00:33:40,980
an attack tool but you can certainly use

970
00:33:40,980 --> 00:33:44,100
it as one a pen testers all right so

971
00:33:44,100 --> 00:33:45,240
that's pretty fabulous we're still

972
00:33:45,240 --> 00:33:46,500
talking about these application issues

973
00:33:46,500 --> 00:33:48,600
what about scanning itself across the

974
00:33:48,600 --> 00:33:51,120
network well here's the tool it's

975
00:33:51,120 --> 00:33:53,940
serious yes pretty uis dashboards all of

976
00:33:53,940 --> 00:33:54,960
that stuff

977
00:33:54,960 --> 00:33:58,019
but more importantly it's scanning

978
00:33:58,019 --> 00:34:00,360
engine or it's a framework of engine

979
00:34:00,360 --> 00:34:02,940
specifically so any kind of engine that

980
00:34:02,940 --> 00:34:04,080
you use to scan and identify

981
00:34:04,080 --> 00:34:06,480
vulnerability you can wrap it

982
00:34:06,480 --> 00:34:08,339
so that it submits the proper API

983
00:34:08,339 --> 00:34:10,800
queries in order to get that data into

984
00:34:10,800 --> 00:34:12,359
your vulnerability scanner as a whole

985
00:34:12,359 --> 00:34:14,460
regardless of what it is so obviously

986
00:34:14,460 --> 00:34:17,280
the first engine that we employed is

987
00:34:17,280 --> 00:34:19,260
nmap scripting engine is it the last one

988
00:34:19,260 --> 00:34:21,780
by no means and in fact we didn't have

989
00:34:21,780 --> 00:34:23,159
to do most of it or I didn't have to do

990
00:34:23,159 --> 00:34:24,599
most of this myself because there's

991
00:34:24,599 --> 00:34:26,159
another tool out there called the layer

992
00:34:26,159 --> 00:34:28,980
framework layer was actually a uh attack

993
00:34:28,980 --> 00:34:31,918
management Appliance for identifying

994
00:34:31,918 --> 00:34:33,119
where you want to go next if you're

995
00:34:33,119 --> 00:34:35,460
doing a red team or a pen test Etc but

996
00:34:35,460 --> 00:34:36,960
as a result it has the ability to import

997
00:34:36,960 --> 00:34:40,619
data from all kinds of different tools

998
00:34:40,619 --> 00:34:42,599
that may create vulnerability data

999
00:34:42,599 --> 00:34:45,599
like nmap and so here to take your nmap

1000
00:34:45,599 --> 00:34:47,460
output and normalize it all you do is

1001
00:34:47,460 --> 00:34:49,440
say hey import this layer business and

1002
00:34:49,440 --> 00:34:50,699
go

1003
00:34:50,699 --> 00:34:53,460
and that's exactly what we did Lair has

1004
00:34:53,460 --> 00:34:56,460
these go agents for anything you can

1005
00:34:56,460 --> 00:34:58,680
imagine from Recon NG to next pose to

1006
00:34:58,680 --> 00:35:00,900
acunetics they're all out there so

1007
00:35:00,900 --> 00:35:02,820
wrapping something like that to get it

1008
00:35:02,820 --> 00:35:04,500
integrated is extremely simple because

1009
00:35:04,500 --> 00:35:06,900
again we're building off of the

1010
00:35:06,900 --> 00:35:09,000
shoulders of giants we're building off

1011
00:35:09,000 --> 00:35:10,200
what the information security Community

1012
00:35:10,200 --> 00:35:13,200
has created for us sorry about the pop

1013
00:35:13,200 --> 00:35:15,540
I'm breathing too hard I think alrighty

1014
00:35:15,540 --> 00:35:16,800
so here's an example of doing a little

1015
00:35:16,800 --> 00:35:18,660
bit of this with the curl request

1016
00:35:18,660 --> 00:35:20,400
there you go did a little live demo of

1017
00:35:20,400 --> 00:35:21,599
that instead though

1018
00:35:21,599 --> 00:35:23,880
you could use it instead with something

1019
00:35:23,880 --> 00:35:25,740
like Postman if you wanted to have a bit

1020
00:35:25,740 --> 00:35:27,720
more of a ui-centric use case against

1021
00:35:27,720 --> 00:35:30,180
that data set or finally you could just

1022
00:35:30,180 --> 00:35:32,579
use the UI for the tool itself in this

1023
00:35:32,579 --> 00:35:34,200
case we're adding a host we're assigning

1024
00:35:34,200 --> 00:35:35,760
some cpes to it and then we're going to

1025
00:35:35,760 --> 00:35:37,560
get a list of vulnerabilities I

1026
00:35:37,560 --> 00:35:39,060
mentioned the agent has a terminal

1027
00:35:39,060 --> 00:35:41,280
here's the terminal again I'm sorry I

1028
00:35:41,280 --> 00:35:43,079
have a problem I can't stop myself

1029
00:35:43,079 --> 00:35:45,359
everything must have a shell I love it

1030
00:35:45,359 --> 00:35:47,520
when shells rain down from the sky that

1031
00:35:47,520 --> 00:35:49,320
just makes me feel good which means

1032
00:35:49,320 --> 00:35:50,820
here's a shell

1033
00:35:50,820 --> 00:35:52,440
but at the end of the day here's what's

1034
00:35:52,440 --> 00:35:54,480
cool with this project we were working

1035
00:35:54,480 --> 00:35:56,520
on it over the course of the summer and

1036
00:35:56,520 --> 00:35:57,780
we were also asking a number of

1037
00:35:57,780 --> 00:35:59,940
questions the community on Twitter yes

1038
00:35:59,940 --> 00:36:02,760
the twitters and there were hundreds and

1039
00:36:02,760 --> 00:36:04,260
hundreds and hundreds of people who

1040
00:36:04,260 --> 00:36:07,079
responded which is to say

1041
00:36:07,079 --> 00:36:09,300
we ask questions like what techniques

1042
00:36:09,300 --> 00:36:11,339
what what capabilities do you need to

1043
00:36:11,339 --> 00:36:13,260
have in a vulnerability scanner what

1044
00:36:13,260 --> 00:36:15,420
would make it useful for you and people

1045
00:36:15,420 --> 00:36:18,000
in droves had ideas ideas that we

1046
00:36:18,000 --> 00:36:19,500
quickly even in fact incorporated into

1047
00:36:19,500 --> 00:36:21,839
it for example someone came to me or

1048
00:36:21,839 --> 00:36:23,760
came to me somebody mentioned on Twitter

1049
00:36:23,760 --> 00:36:26,280
I really need my vulnerability scanner

1050
00:36:26,280 --> 00:36:28,920
to have integration with a cmdb you can

1051
00:36:28,920 --> 00:36:30,060
also think that as like an asset

1052
00:36:30,060 --> 00:36:32,280
inventory a list of stuff right I need

1053
00:36:32,280 --> 00:36:34,020
to be able to import that so I can see

1054
00:36:34,020 --> 00:36:35,760
vulnerabilities or issues on the actual

1055
00:36:35,760 --> 00:36:37,380
device and I looked at this and I went

1056
00:36:37,380 --> 00:36:39,900
ew I don't want to deal with

1057
00:36:39,900 --> 00:36:42,180
spreadsheets that's gross but then I

1058
00:36:42,180 --> 00:36:43,980
thought about a little bit further and

1059
00:36:43,980 --> 00:36:45,420
you know if we're dealing with a small

1060
00:36:45,420 --> 00:36:47,940
mom-and-pop shop of you know probably

1061
00:36:47,940 --> 00:36:49,440
bigger than 10 million annual revenue if

1062
00:36:49,440 --> 00:36:51,060
we're dealing with something like this

1063
00:36:51,060 --> 00:36:52,859
do they have dedicated Personnel that

1064
00:36:52,859 --> 00:36:55,800
can do that no but if we said Hey look

1065
00:36:55,800 --> 00:36:58,619
take your data set put it in a

1066
00:36:58,619 --> 00:37:00,000
configuration management database or

1067
00:37:00,000 --> 00:37:02,160
just a spreadsheet and then plug it in

1068
00:37:02,160 --> 00:37:05,760
and you'll have access to this and it's

1069
00:37:05,760 --> 00:37:08,400
free we're going to get a lot of folks

1070
00:37:08,400 --> 00:37:10,920
who have that accessible right where

1071
00:37:10,920 --> 00:37:12,480
it's accessible within their capability

1072
00:37:12,480 --> 00:37:14,820
and that might have some really big

1073
00:37:14,820 --> 00:37:17,640
implications on ransomware that we're

1074
00:37:17,640 --> 00:37:19,560
dealing with today because right now

1075
00:37:19,560 --> 00:37:21,599
we're missing so many of the basics

1076
00:37:21,599 --> 00:37:23,400
attackers aren't doing anything crazy

1077
00:37:23,400 --> 00:37:25,440
they don't have to and if they try to do

1078
00:37:25,440 --> 00:37:27,119
something crazy their billable rate goes

1079
00:37:27,119 --> 00:37:29,099
down so they don't even want to

1080
00:37:29,099 --> 00:37:31,140
this might be somewhere to get started

1081
00:37:31,140 --> 00:37:32,940
to help out other questions we were

1082
00:37:32,940 --> 00:37:34,380
asking is like what kind of feature sets

1083
00:37:34,380 --> 00:37:35,220
would you like to have in your

1084
00:37:35,220 --> 00:37:36,660
vulnerably scanning agent or even

1085
00:37:36,660 --> 00:37:38,160
specifically pen testers what do you

1086
00:37:38,160 --> 00:37:40,020
want to have in this agent and so as a

1087
00:37:40,020 --> 00:37:41,700
result the community is really kind of

1088
00:37:41,700 --> 00:37:43,680
directed where the project has been

1089
00:37:43,680 --> 00:37:45,839
going where it's gone over the course of

1090
00:37:45,839 --> 00:37:46,980
the year

1091
00:37:46,980 --> 00:37:49,560
and that's been absolutely fabulous so I

1092
00:37:49,560 --> 00:37:51,599
think we're all infosight Communists at

1093
00:37:51,599 --> 00:37:53,700
least in a certain degree now this tool

1094
00:37:53,700 --> 00:37:55,320
of course has some future work as all

1095
00:37:55,320 --> 00:37:58,020
tools do it is currently in Alpha so you

1096
00:37:58,020 --> 00:37:59,220
can actually pull it down and you can

1097
00:37:59,220 --> 00:38:01,440
use it today the back end is pretty darn

1098
00:38:01,440 --> 00:38:03,839
robust but the front end

1099
00:38:03,839 --> 00:38:06,240
yeah gooey's

1100
00:38:06,240 --> 00:38:08,880
it's all right but I would probably not

1101
00:38:08,880 --> 00:38:12,000
give it to a small I.T shop in a small

1102
00:38:12,000 --> 00:38:14,700
company today but absolutely all of the

1103
00:38:14,700 --> 00:38:15,720
things that would get us there are in

1104
00:38:15,720 --> 00:38:17,280
this little future work section if you

1105
00:38:17,280 --> 00:38:18,900
are a little bit more Savvy on computers

1106
00:38:18,900 --> 00:38:20,339
you can actually get it running in fact

1107
00:38:20,339 --> 00:38:21,839
I'll tell you right now exactly what two

1108
00:38:21,839 --> 00:38:23,579
features are missing it doesn't have an

1109
00:38:23,579 --> 00:38:24,900
installer so you have to install it

1110
00:38:24,900 --> 00:38:27,420
manually yikes if you're not very Savvy

1111
00:38:27,420 --> 00:38:29,460
getting mongodb up and running for your

1112
00:38:29,460 --> 00:38:31,440
back end may not be that easy for you

1113
00:38:31,440 --> 00:38:33,540
though it is just dockerized and then

1114
00:38:33,540 --> 00:38:35,220
the second piece that's missing is the

1115
00:38:35,220 --> 00:38:36,240
UI

1116
00:38:36,240 --> 00:38:38,099
feature set isn't the greatest if you're

1117
00:38:38,099 --> 00:38:39,420
doing everything command line it all

1118
00:38:39,420 --> 00:38:40,980
kind of works but the UI needs a little

1119
00:38:40,980 --> 00:38:42,720
bit of tweaks as well and all that stuff

1120
00:38:42,720 --> 00:38:43,920
is going to be rolling out here over the

1121
00:38:43,920 --> 00:38:45,599
next month or two I would imagine by

1122
00:38:45,599 --> 00:38:47,339
December regardless of whether we get

1123
00:38:47,339 --> 00:38:48,660
more contribution from the open source

1124
00:38:48,660 --> 00:38:50,940
Community or not it will be a pretty

1125
00:38:50,940 --> 00:38:54,240
fancy little tool

1126
00:38:54,240 --> 00:38:56,940
alrighty well this does leave us some

1127
00:38:56,940 --> 00:38:59,280
time for questions anybody got questions

1128
00:38:59,280 --> 00:39:01,700
out there

1129
00:39:04,380 --> 00:39:06,839
no oh there it is I'm sorry I can't save

1130
00:39:06,839 --> 00:39:08,520
the lights so maybe just shout out hey I

1131
00:39:08,520 --> 00:39:11,780
got a question go for it

1132
00:39:18,060 --> 00:39:20,400
it's a really good question uh Beyond

1133
00:39:20,400 --> 00:39:22,079
just identifying vulnerabilities what

1134
00:39:22,079 --> 00:39:24,060
about patches uh the agent right now

1135
00:39:24,060 --> 00:39:26,520
already will look at Microsoft KBS and

1136
00:39:26,520 --> 00:39:27,900
patches that are installed and it'll

1137
00:39:27,900 --> 00:39:29,160
push it to the scanner so you'll see

1138
00:39:29,160 --> 00:39:31,740
every single uh system patch that's

1139
00:39:31,740 --> 00:39:34,079
missing on any given device so yes

1140
00:39:34,079 --> 00:39:35,640
that's already there

1141
00:39:35,640 --> 00:39:37,980
good question

1142
00:39:37,980 --> 00:39:39,420
uh again shout it out if you've got

1143
00:39:39,420 --> 00:39:41,760
questions I'm getting blitz so I can't

1144
00:39:41,760 --> 00:39:43,859
see

1145
00:39:43,859 --> 00:39:45,599
does it have authentication this is a

1146
00:39:45,599 --> 00:39:46,859
very very good question because the

1147
00:39:46,859 --> 00:39:48,300
answer to that question is no and I'm

1148
00:39:48,300 --> 00:39:49,320
embarrassed to give you that answer

1149
00:39:49,320 --> 00:39:50,880
that's one of the things that's in the

1150
00:39:50,880 --> 00:39:52,500
future work list that'll be coming out

1151
00:39:52,500 --> 00:39:53,820
here that's probably one of the first

1152
00:39:53,820 --> 00:39:55,500
ones that we'll be working on so it'll

1153
00:39:55,500 --> 00:39:57,060
probably come out in the next month or

1154
00:39:57,060 --> 00:39:59,460
so don't quote me on that but uh yes it

1155
00:39:59,460 --> 00:40:01,079
should have authentication it currently

1156
00:40:01,079 --> 00:40:03,500
does not

1157
00:40:04,859 --> 00:40:07,260
it does in fact if you want to see it

1158
00:40:07,260 --> 00:40:10,980
run on Mac we can do that live demo time

1159
00:40:10,980 --> 00:40:12,240
this is where I start breathing really

1160
00:40:12,240 --> 00:40:13,440
hard

1161
00:40:13,440 --> 00:40:14,940
I don't know if I sacrificed enough

1162
00:40:14,940 --> 00:40:18,380
chickens for this to work but we'll see

1163
00:40:19,980 --> 00:40:21,900
so here's it running on Mac

1164
00:40:21,900 --> 00:40:23,820
uh the back end is written fully in go

1165
00:40:23,820 --> 00:40:25,560
and so as a result it is

1166
00:40:25,560 --> 00:40:27,420
cross-compatible the same is true of the

1167
00:40:27,420 --> 00:40:29,880
agent the agent also will work on Mac

1168
00:40:29,880 --> 00:40:32,820
Linux Windows all of that jazz but it

1169
00:40:32,820 --> 00:40:35,520
doesn't have the proper support for

1170
00:40:35,520 --> 00:40:37,980
identifying missing patches on Linux yet

1171
00:40:37,980 --> 00:40:40,200
so right now the agent it runs on

1172
00:40:40,200 --> 00:40:41,940
everything but it really only produces

1173
00:40:41,940 --> 00:40:44,220
significant results on Windows Mac and

1174
00:40:44,220 --> 00:40:47,220
Linux results are coming the actual tool

1175
00:40:47,220 --> 00:40:49,320
itself here it is running on a Mac it'll

1176
00:40:49,320 --> 00:40:51,540
run a Mac Windows you name it it's got

1177
00:40:51,540 --> 00:40:53,220
it

1178
00:40:53,220 --> 00:40:55,140
yeah oh I didn't actually show off

1179
00:40:55,140 --> 00:40:57,920
vulnerabilities in this thing

1180
00:40:58,920 --> 00:41:01,520
we'll grab a system

1181
00:41:01,619 --> 00:41:03,000
and this is uh this is canned

1182
00:41:03,000 --> 00:41:04,920
information I just hard-coded that for

1183
00:41:04,920 --> 00:41:06,960
the demo but uh but this will populate

1184
00:41:06,960 --> 00:41:08,820
live so in this case you see one

1185
00:41:08,820 --> 00:41:10,200
vulnerability that's come back from the

1186
00:41:10,200 --> 00:41:12,780
actual system it's nvd data but it's not

1187
00:41:12,780 --> 00:41:14,579
actually enriched in this case if you

1188
00:41:14,579 --> 00:41:16,680
enrich the information your your output

1189
00:41:16,680 --> 00:41:18,119
here will of course be significantly

1190
00:41:18,119 --> 00:41:20,220
greater

1191
00:41:20,220 --> 00:41:22,939
other questions

1192
00:41:24,839 --> 00:41:26,880
are you able to scan container hosts

1193
00:41:26,880 --> 00:41:28,560
that's a really good question not

1194
00:41:28,560 --> 00:41:30,540
directly but you can technically install

1195
00:41:30,540 --> 00:41:32,940
the agent onto a container and then it

1196
00:41:32,940 --> 00:41:36,359
will scan it locally so sort of it

1197
00:41:36,359 --> 00:41:37,680
doesn't understand containers on its own

1198
00:41:37,680 --> 00:41:39,300
though

1199
00:41:39,300 --> 00:41:42,079
same with cloud

1200
00:41:44,220 --> 00:41:45,480
what kind of resources required that's

1201
00:41:45,480 --> 00:41:47,160
actually a really good question so the

1202
00:41:47,160 --> 00:41:48,660
reason why it's written in go and not

1203
00:41:48,660 --> 00:41:51,000
python ah yikes I love Pi or I used to

1204
00:41:51,000 --> 00:41:52,680
love Python and then python has kept

1205
00:41:52,680 --> 00:41:54,180
stabbing me in the back over the past

1206
00:41:54,180 --> 00:41:55,800
few years but the reason it's written in

1207
00:41:55,800 --> 00:41:57,780
go is actually for resources so

1208
00:41:57,780 --> 00:42:00,599
ironically the agent this might break

1209
00:42:00,599 --> 00:42:02,900
actually

1210
00:42:03,720 --> 00:42:05,820
sort of worked it's my it's my aspect

1211
00:42:05,820 --> 00:42:06,960
ratio

1212
00:42:06,960 --> 00:42:07,560
um

1213
00:42:07,560 --> 00:42:09,839
so ironically the uh

1214
00:42:09,839 --> 00:42:11,880
the agent itself is designed to be able

1215
00:42:11,880 --> 00:42:13,320
to control many many systems

1216
00:42:13,320 --> 00:42:14,760
simultaneously so this might be one of

1217
00:42:14,760 --> 00:42:16,800
the best C2 tools if you're trying to

1218
00:42:16,800 --> 00:42:19,079
control a botnet and the reason why is

1219
00:42:19,079 --> 00:42:20,760
because of the go back end that sucker

1220
00:42:20,760 --> 00:42:22,859
is fast I had no idea how fast it was

1221
00:42:22,859 --> 00:42:24,660
going to be and so we were halfway done

1222
00:42:24,660 --> 00:42:27,180
with the project if you take nvd's data

1223
00:42:27,180 --> 00:42:30,180
set right 40 000 cves

1224
00:42:30,180 --> 00:42:33,180
per year going back over 20 years you

1225
00:42:33,180 --> 00:42:35,280
can shove that entire thing in a mongodb

1226
00:42:35,280 --> 00:42:39,119
through the go API where every

1227
00:42:39,119 --> 00:42:41,339
vulnerability is getting put into it at

1228
00:42:41,339 --> 00:42:45,240
.01 to 0.1 microseconds a piece it'll

1229
00:42:45,240 --> 00:42:47,099
shove the entire thing into it faster

1230
00:42:47,099 --> 00:42:48,960
you can go grab coffee that wasn't

1231
00:42:48,960 --> 00:42:50,220
actually an intent from the design

1232
00:42:50,220 --> 00:42:52,740
perspective it's really nice to have but

1233
00:42:52,740 --> 00:42:55,079
as a result it's pretty hard fast

1234
00:42:55,079 --> 00:42:57,300
nmap also is an engine on the back end

1235
00:42:57,300 --> 00:42:59,099
is very fast a lot of people think nmap

1236
00:42:59,099 --> 00:43:01,560
is not fast that's not true nmap has

1237
00:43:01,560 --> 00:43:04,020
really bad rules for discovery that

1238
00:43:04,020 --> 00:43:06,180
determine which scanning module it will

1239
00:43:06,180 --> 00:43:08,280
send out and as a result nmap sends out

1240
00:43:08,280 --> 00:43:09,660
a lot and the scripting engine that is

1241
00:43:09,660 --> 00:43:11,700
sends out a ton of different scanning

1242
00:43:11,700 --> 00:43:13,619
modules for vulnerabilities that could

1243
00:43:13,619 --> 00:43:16,500
not possibly exist whereas the uh the

1244
00:43:16,500 --> 00:43:17,940
proprietary scanners do a lot better

1245
00:43:17,940 --> 00:43:20,760
Discovery Sirius also has its own back

1246
00:43:20,760 --> 00:43:23,819
end engine for scanning on its own and

1247
00:43:23,819 --> 00:43:25,800
it uses that for a lot of Discovery in

1248
00:43:25,800 --> 00:43:27,660
conjunction with nmap so it ignores

1249
00:43:27,660 --> 00:43:30,540
nmap's Port rules and then sends out the

1250
00:43:30,540 --> 00:43:32,099
scanning module that's ideal given the

1251
00:43:32,099 --> 00:43:33,900
system and its fingerprint for example

1252
00:43:33,900 --> 00:43:37,560
it won't send a Java module against a

1253
00:43:37,560 --> 00:43:40,440
web application that isn't Java whereas

1254
00:43:40,440 --> 00:43:42,839
nmap scripting engine on its own often

1255
00:43:42,839 --> 00:43:45,060
does so nmap's also pretty fast the

1256
00:43:45,060 --> 00:43:46,980
back-end engine it's just the way we use

1257
00:43:46,980 --> 00:43:51,079
it might make it look slow

1258
00:43:51,660 --> 00:43:54,560
any other questions

1259
00:44:09,780 --> 00:44:11,280
all right you'll have to expand on that

1260
00:44:11,280 --> 00:44:12,300
one for me just a little bit we're

1261
00:44:12,300 --> 00:44:13,680
talking about intelligence in this

1262
00:44:13,680 --> 00:44:17,040
system itself the intelligence is um

1263
00:44:17,040 --> 00:44:19,079
a factor of what you've decided to add

1264
00:44:19,079 --> 00:44:20,640
in and you can add in anything you would

1265
00:44:20,640 --> 00:44:22,619
like it does have built-in intelligence

1266
00:44:22,619 --> 00:44:24,540
for a couple things like metasploy

1267
00:44:24,540 --> 00:44:27,119
modules and kevs but at the end of the

1268
00:44:27,119 --> 00:44:29,700
day the whole point is what intelligence

1269
00:44:29,700 --> 00:44:31,140
do you want for example consider this

1270
00:44:31,140 --> 00:44:32,880
let's say that you are a penetration

1271
00:44:32,880 --> 00:44:35,460
testing shop of 20 people all right

1272
00:44:35,460 --> 00:44:38,099
let's say that one of your testers has

1273
00:44:38,099 --> 00:44:39,960
consistently found a vulnerability that

1274
00:44:39,960 --> 00:44:42,060
really gets them paid dirt results and

1275
00:44:42,060 --> 00:44:43,920
so you tag that vulnerability with your

1276
00:44:43,920 --> 00:44:45,720
company names and like take a look at

1277
00:44:45,720 --> 00:44:47,819
this well then every other tester now

1278
00:44:47,819 --> 00:44:49,500
suddenly has access to that as well

1279
00:44:49,500 --> 00:44:51,180
because of the vulnerability database

1280
00:44:51,180 --> 00:44:52,920
perhaps being shared now I do want to

1281
00:44:52,920 --> 00:44:53,640
make sure that you know that the

1282
00:44:53,640 --> 00:44:54,599
vulnerability database and the

1283
00:44:54,599 --> 00:44:55,680
vulnerability data set are different

1284
00:44:55,680 --> 00:44:58,079
data set is vulnerabilities for a given

1285
00:44:58,079 --> 00:45:00,240
engagement or set of hosts the database

1286
00:45:00,240 --> 00:45:02,099
itself is what is queried against for

1287
00:45:02,099 --> 00:45:03,480
that so you can share the database

1288
00:45:03,480 --> 00:45:05,400
without actually disclosing any

1289
00:45:05,400 --> 00:45:06,720
sensitive data because they're fully

1290
00:45:06,720 --> 00:45:09,480
separate but what it means is yeah if

1291
00:45:09,480 --> 00:45:10,680
you want it to be but you might have to

1292
00:45:10,680 --> 00:45:12,119
collect that intelligence yourself if

1293
00:45:12,119 --> 00:45:13,800
intelligence already exists for that you

1294
00:45:13,800 --> 00:45:15,119
could totally script it real quick with

1295
00:45:15,119 --> 00:45:16,800
curl requests to get it in there but at

1296
00:45:16,800 --> 00:45:18,780
the moment it's a bit more Global so

1297
00:45:18,780 --> 00:45:20,579
nothing SAS specific is built in by

1298
00:45:20,579 --> 00:45:22,319
default

1299
00:45:22,319 --> 00:45:23,640
if they didn't answer your question feel

1300
00:45:23,640 --> 00:45:25,020
free to uh

1301
00:45:25,020 --> 00:45:29,060
hit me with a rebound on it

1302
00:45:29,099 --> 00:45:32,119
no alley-oop

1303
00:45:34,260 --> 00:45:36,960
any other questions

1304
00:45:36,960 --> 00:45:38,099
all right if you don't have any more

1305
00:45:38,099 --> 00:45:39,540
here's a couple more things about it so

1306
00:45:39,540 --> 00:45:41,460
on the case of contribution for the

1307
00:45:41,460 --> 00:45:44,640
application itself these are the links

1308
00:45:44,640 --> 00:45:46,740
that you might want to consider going to

1309
00:45:46,740 --> 00:45:48,300
the top link is for the scanner itself

1310
00:45:48,300 --> 00:45:52,500
the third link here is for the API and

1311
00:45:52,500 --> 00:45:54,839
engine behind the system as a whole that

1312
00:45:54,839 --> 00:45:57,420
middle link is a repository of

1313
00:45:57,420 --> 00:45:58,980
additional scripts and scanning and such

1314
00:45:58,980 --> 00:46:00,960
much like ncsc but it's a little bit

1315
00:46:00,960 --> 00:46:02,579
tailored for Sirius not really all that

1316
00:46:02,579 --> 00:46:04,619
important the most important link

1317
00:46:04,619 --> 00:46:06,900
probably is this last one and that's

1318
00:46:06,900 --> 00:46:08,400
that projects link and the reason why

1319
00:46:08,400 --> 00:46:10,200
this one's important is because there

1320
00:46:10,200 --> 00:46:12,060
are so many ways that we can contribute

1321
00:46:12,060 --> 00:46:14,040
as a group right as a community

1322
00:46:14,040 --> 00:46:17,400
sometimes that might be as simple as hey

1323
00:46:17,400 --> 00:46:19,740
look share with us your thoughts and

1324
00:46:19,740 --> 00:46:21,660
challenges that you're dealing with with

1325
00:46:21,660 --> 00:46:23,339
the tooling that is currently available

1326
00:46:23,339 --> 00:46:25,200
and accessible and since the community

1327
00:46:25,200 --> 00:46:27,359
itself controls this tool maybe we'll

1328
00:46:27,359 --> 00:46:29,280
add that in there right so be part of

1329
00:46:29,280 --> 00:46:31,319
the conversation the second bit is this

1330
00:46:31,319 --> 00:46:32,819
product is fully open so you can

1331
00:46:32,819 --> 00:46:34,319
actually go to the project and submit

1332
00:46:34,319 --> 00:46:36,900
feature requests as well to it directly

1333
00:46:36,900 --> 00:46:38,880
plus if you wanted to contribute

1334
00:46:38,880 --> 00:46:41,579
anything more directly this will also

1335
00:46:41,579 --> 00:46:42,780
tell you exactly what we're working on

1336
00:46:42,780 --> 00:46:45,000
where it is in the pipeline like is it

1337
00:46:45,000 --> 00:46:47,880
an in-progress update is depleted is it

1338
00:46:47,880 --> 00:46:50,520
going to be moved into I don't say prawn

1339
00:46:50,520 --> 00:46:51,900
since it's technically still in Alpha

1340
00:46:51,900 --> 00:46:54,060
but into the actual build next all of

1341
00:46:54,060 --> 00:46:55,619
that kind of stuff so if you want to be

1342
00:46:55,619 --> 00:46:57,480
part of it I'd say a join the

1343
00:46:57,480 --> 00:46:58,920
conversation B take a look at this board

1344
00:46:58,920 --> 00:47:00,540
because it might give you some insight

1345
00:47:00,540 --> 00:47:02,040
on where the Project's going what's

1346
00:47:02,040 --> 00:47:03,900
coming next and also the opportunity to

1347
00:47:03,900 --> 00:47:06,420
have your voice heard as well

1348
00:47:06,420 --> 00:47:09,060
alrighty

1349
00:47:09,060 --> 00:47:10,500
that's a perfect way to end it throw

1350
00:47:10,500 --> 00:47:12,540
your pointer across the room anybody

1351
00:47:12,540 --> 00:47:15,000
catch it nice all right well this has

1352
00:47:15,000 --> 00:47:17,520
been series of uh vulnerabilities are a

1353
00:47:17,520 --> 00:47:18,839
serious problem my name is Matthew

1354
00:47:18,839 --> 00:47:20,819
dusain it's an absolute pleasure to talk

1355
00:47:20,819 --> 00:47:22,619
with you all and share this with you if

1356
00:47:22,619 --> 00:47:24,480
you've got more questions or feedback or

1357
00:47:24,480 --> 00:47:26,579
just reach out to me right afterwards

1358
00:47:26,579 --> 00:47:28,319
I'll be around tap me on the shoulder

1359
00:47:28,319 --> 00:47:30,359
and say hey Matt your tool sucks I've

1360
00:47:30,359 --> 00:47:31,619
heard that before

1361
00:47:31,619 --> 00:47:33,240
alrighty we'll catch you all later thank

1362
00:47:33,240 --> 00:47:35,479
you again

