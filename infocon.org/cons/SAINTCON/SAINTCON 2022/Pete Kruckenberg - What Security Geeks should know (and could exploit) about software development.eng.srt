1
00:00:00,000 --> 00:00:02,820
so my name is Pete kruckenberg I'm a

2
00:00:02,820 --> 00:00:05,120
software developer at weave

3
00:00:05,120 --> 00:00:08,280
if you came down from the North or

4
00:00:08,280 --> 00:00:09,720
you're heading north tonight

5
00:00:09,720 --> 00:00:12,780
you'll see our building just off to the

6
00:00:12,780 --> 00:00:15,299
whatever the east side of the road

7
00:00:15,299 --> 00:00:18,060
it's got a logo that looks just like

8
00:00:18,060 --> 00:00:19,859
this

9
00:00:19,859 --> 00:00:22,920
and just a little bit about weave since

10
00:00:22,920 --> 00:00:24,300
they're giving me the time to come

11
00:00:24,300 --> 00:00:26,480
present today

12
00:00:26,480 --> 00:00:28,859
it's a little hard to describe so I'll

13
00:00:28,859 --> 00:00:31,019
describe our I'll describe it in two

14
00:00:31,019 --> 00:00:34,320
ways so we're an all-in-one platform for

15
00:00:34,320 --> 00:00:37,140
interacting with customers patients pet

16
00:00:37,140 --> 00:00:42,059
parents our customers are dentists

17
00:00:42,059 --> 00:00:43,820
um

18
00:00:43,820 --> 00:00:46,579
optometrists veterinarians

19
00:00:46,579 --> 00:00:49,500
the other way I describe it is if you

20
00:00:49,500 --> 00:00:51,180
are able to

21
00:00:51,180 --> 00:00:53,539
set up an appointment with your dentist

22
00:00:53,539 --> 00:00:56,160
make a payment get a reminder all

23
00:00:56,160 --> 00:00:58,020
without having to make a phone call to

24
00:00:58,020 --> 00:00:59,879
them there's a pretty good chance that

25
00:00:59,879 --> 00:01:02,780
they're a weave customer

26
00:01:02,780 --> 00:01:08,479
I also should mention that we are hiring

27
00:01:08,479 --> 00:01:11,159
we actually have an opening that just

28
00:01:11,159 --> 00:01:12,659
opened up recently for our head of

29
00:01:12,659 --> 00:01:14,280
security

30
00:01:14,280 --> 00:01:16,320
so if you're interested in knowing more

31
00:01:16,320 --> 00:01:19,140
about Weaver that position go to our

32
00:01:19,140 --> 00:01:22,380
website or come talk to me afterwards

33
00:01:22,380 --> 00:01:24,420
I'll be hanging out here at least at

34
00:01:24,420 --> 00:01:25,740
least for a little while after this

35
00:01:25,740 --> 00:01:28,080
would love to tell you more about

36
00:01:28,080 --> 00:01:30,360
our company and and what it's like to

37
00:01:30,360 --> 00:01:33,240
work there okay so

38
00:01:33,240 --> 00:01:35,460
let's talk about what's wrong with this

39
00:01:35,460 --> 00:01:39,119
picture and I apologize I had to kind of

40
00:01:39,119 --> 00:01:41,220
guess at most of this but let's go back

41
00:01:41,220 --> 00:01:44,280
here for just a second and see how close

42
00:01:44,280 --> 00:01:45,780
I was to

43
00:01:45,780 --> 00:01:47,700
what kind of problems so

44
00:01:47,700 --> 00:01:51,180
this is the audience participation part

45
00:01:51,180 --> 00:01:52,140
um

46
00:01:52,140 --> 00:01:54,840
what's problem tell me a problem that

47
00:01:54,840 --> 00:01:57,360
you can see with this scenario

48
00:01:57,360 --> 00:01:59,899
yes

49
00:02:02,040 --> 00:02:05,040
yes so and and what's the problem with

50
00:02:05,040 --> 00:02:06,600
that what's wrong with developers being

51
00:02:06,600 --> 00:02:10,399
able to get to a production system

52
00:02:24,739 --> 00:02:28,260
right so usually a compliance and just

53
00:02:28,260 --> 00:02:31,379
good practice is to have a separation of

54
00:02:31,379 --> 00:02:34,140
responsibilities that the person writing

55
00:02:34,140 --> 00:02:37,260
the code can't also be in charge of how

56
00:02:37,260 --> 00:02:39,180
it gets deployed into production good

57
00:02:39,180 --> 00:02:40,739
one all right another one maybe somebody

58
00:02:40,739 --> 00:02:43,080
over on this side

59
00:02:43,080 --> 00:02:45,840
just shout it out

60
00:02:45,840 --> 00:02:48,900
in the orange there

61
00:02:48,900 --> 00:02:52,560
cicd um okay so tell me more about cicd

62
00:02:52,560 --> 00:02:55,340
what's the problem there

63
00:02:58,080 --> 00:03:00,420
but he's probably really competent and

64
00:03:00,420 --> 00:03:02,640
he's been doing it for a long time

65
00:03:02,640 --> 00:03:04,019
right

66
00:03:04,019 --> 00:03:07,760
okay uh orange shirt

67
00:03:08,879 --> 00:03:11,760
and that single system isn't even the

68
00:03:11,760 --> 00:03:14,099
same as the one that's being run in

69
00:03:14,099 --> 00:03:15,599
production right and there was one up

70
00:03:15,599 --> 00:03:17,340
here

71
00:03:17,340 --> 00:03:19,980
are we gonna say revision control okay

72
00:03:19,980 --> 00:03:21,480
tell me more

73
00:03:21,480 --> 00:03:24,500
revision control

74
00:03:30,980 --> 00:03:34,940
yeah okay Dave

75
00:03:37,319 --> 00:03:40,500
yep okay so a couple more maybe on this

76
00:03:40,500 --> 00:03:41,940
side

77
00:03:41,940 --> 00:03:44,819
these are all really good

78
00:03:44,819 --> 00:03:47,179
yeah

79
00:03:49,680 --> 00:03:51,659
yeah so How likely do you think it is

80
00:03:51,659 --> 00:03:53,819
that that server has a bunch of

81
00:03:53,819 --> 00:03:55,019
vulnerabilities

82
00:03:55,019 --> 00:03:57,540
pretty likely right okay so last

83
00:03:57,540 --> 00:03:59,840
question

84
00:04:00,000 --> 00:04:01,860
um how many of you

85
00:04:01,860 --> 00:04:05,580
have ever worked in a place where

86
00:04:05,580 --> 00:04:07,860
something close to this actually was

87
00:04:07,860 --> 00:04:09,239
going on

88
00:04:09,239 --> 00:04:11,400
okay

89
00:04:11,400 --> 00:04:13,860
hopefully I'm not going to ask the

90
00:04:13,860 --> 00:04:15,120
second question how many of you are

91
00:04:15,120 --> 00:04:18,120
working there now but um

92
00:04:18,120 --> 00:04:20,519
no this is a pretty real thing

93
00:04:20,519 --> 00:04:23,460
so what I want to run through today

94
00:04:23,460 --> 00:04:27,419
is kind of the basics of

95
00:04:27,419 --> 00:04:29,100
what I'm calling modern software

96
00:04:29,100 --> 00:04:31,560
development it's I don't know that it's

97
00:04:31,560 --> 00:04:33,600
modern other than because I'm sure there

98
00:04:33,600 --> 00:04:35,100
are plenty of people that still work

99
00:04:35,100 --> 00:04:37,740
this way unfortunately but it is stuff

100
00:04:37,740 --> 00:04:38,880
that

101
00:04:38,880 --> 00:04:41,580
solves those kind of problems in a

102
00:04:41,580 --> 00:04:43,380
pretty good way

103
00:04:43,380 --> 00:04:45,300
so what I did was I don't know that this

104
00:04:45,300 --> 00:04:46,919
represents everything that we just

105
00:04:46,919 --> 00:04:49,380
talked about but I'm going to try to go

106
00:04:49,380 --> 00:04:51,240
through and show each of the kind of

107
00:04:51,240 --> 00:04:53,580
basic components of a modern software

108
00:04:53,580 --> 00:04:55,860
development system

109
00:04:55,860 --> 00:04:58,020
I'm going to actually try to do this

110
00:04:58,020 --> 00:05:01,560
live and hopefully that will either be

111
00:05:01,560 --> 00:05:04,560
entertaining or educational and then I'm

112
00:05:04,560 --> 00:05:06,720
going to try to point out how each of

113
00:05:06,720 --> 00:05:07,979
those things

114
00:05:07,979 --> 00:05:10,199
addresses each of these issues that I

115
00:05:10,199 --> 00:05:12,060
have on this list

116
00:05:12,060 --> 00:05:15,000
okay so just a very high level when I

117
00:05:15,000 --> 00:05:17,520
talk about modern software development I

118
00:05:17,520 --> 00:05:21,419
think of two specific pieces one is code

119
00:05:21,419 --> 00:05:24,660
versioning which is this ability to keep

120
00:05:24,660 --> 00:05:27,479
track of changes over time as well as

121
00:05:27,479 --> 00:05:30,060
have your code somewhere else other than

122
00:05:30,060 --> 00:05:32,340
on your server

123
00:05:32,340 --> 00:05:34,560
and those usually go together pretty

124
00:05:34,560 --> 00:05:35,780
nicely

125
00:05:35,780 --> 00:05:38,639
the other thing is this idea of

126
00:05:38,639 --> 00:05:40,259
automating everything so somebody said

127
00:05:40,259 --> 00:05:41,840
cicd

128
00:05:41,840 --> 00:05:45,660
the general idea there is rather than

129
00:05:45,660 --> 00:05:47,520
somebody manually performing these steps

130
00:05:47,520 --> 00:05:49,320
and hopefully hoping they do them

131
00:05:49,320 --> 00:05:50,400
correctly

132
00:05:50,400 --> 00:05:54,419
that we can build all that stuff one of

133
00:05:54,419 --> 00:05:56,220
the terms that we use is something is

134
00:05:56,220 --> 00:05:58,520
code infrastructure is Code test is code

135
00:05:58,520 --> 00:06:01,620
code checks is code deployment is code

136
00:06:01,620 --> 00:06:04,320
the idea here is let's put that in a

137
00:06:04,320 --> 00:06:06,600
machine readable format that then we can

138
00:06:06,600 --> 00:06:08,940
look at and say this is what we want to

139
00:06:08,940 --> 00:06:10,979
have happen and that happens the same

140
00:06:10,979 --> 00:06:12,900
way every time

141
00:06:12,900 --> 00:06:14,460
the other thing that we try to do with

142
00:06:14,460 --> 00:06:16,320
this is more focused on the developer

143
00:06:16,320 --> 00:06:18,080
side

144
00:06:18,080 --> 00:06:21,620
and as a person who once

145
00:06:21,620 --> 00:06:23,160
ran

146
00:06:23,160 --> 00:06:26,100
in a scenario way too close to that to

147
00:06:26,100 --> 00:06:28,080
feel comfortable

148
00:06:28,080 --> 00:06:30,900
needing to know not only how to code and

149
00:06:30,900 --> 00:06:32,400
all that comes with that understanding

150
00:06:32,400 --> 00:06:33,900
the customer requirements and

151
00:06:33,900 --> 00:06:37,860
interacting with the different parts of

152
00:06:37,860 --> 00:06:39,360
the company and other developers and so

153
00:06:39,360 --> 00:06:42,360
forth having to be a good sysadmin a

154
00:06:42,360 --> 00:06:44,819
good operations person

155
00:06:44,819 --> 00:06:46,979
that's just a lot for somebody to keep

156
00:06:46,979 --> 00:06:48,840
in their brain and frankly from a

157
00:06:48,840 --> 00:06:50,460
developed perspective perspective those

158
00:06:50,460 --> 00:06:53,100
things are pretty annoying to have to do

159
00:06:53,100 --> 00:06:56,340
so the other thing we try to do is get

160
00:06:56,340 --> 00:06:58,259
as much of that off of the developer's

161
00:06:58,259 --> 00:07:00,319
plate and

162
00:07:00,319 --> 00:07:03,660
into the system so we're not trying to

163
00:07:03,660 --> 00:07:05,460
move it to another group like the Ops

164
00:07:05,460 --> 00:07:07,979
group we're trying to not have a human

165
00:07:07,979 --> 00:07:09,840
have to do it so

166
00:07:09,840 --> 00:07:12,240
the piece that of stuff that we don't

167
00:07:12,240 --> 00:07:14,340
want to have to do we call toil which I

168
00:07:14,340 --> 00:07:16,800
think is a great word and then cognitive

169
00:07:16,800 --> 00:07:18,479
load is what the developer needs to keep

170
00:07:18,479 --> 00:07:21,300
in their brain to do something right

171
00:07:21,300 --> 00:07:23,340
a couple other a few other terms that

172
00:07:23,340 --> 00:07:25,319
you may have heard that kind of all fit

173
00:07:25,319 --> 00:07:26,360
into this

174
00:07:26,360 --> 00:07:28,620
these two concepts are kind of the

175
00:07:28,620 --> 00:07:30,080
foundation for

176
00:07:30,080 --> 00:07:34,800
devops there's now net Ops finops devs

177
00:07:34,800 --> 00:07:36,960
secops different combinations of those

178
00:07:36,960 --> 00:07:39,960
things the idea that

179
00:07:39,960 --> 00:07:42,300
um teams work together to deliver

180
00:07:42,300 --> 00:07:44,880
software deliver Reliable Software more

181
00:07:44,880 --> 00:07:46,280
quickly

182
00:07:46,280 --> 00:07:49,319
may have heard of microservices the

183
00:07:49,319 --> 00:07:51,780
cloud kubernetes containers

184
00:07:51,780 --> 00:07:53,160
I'm not going to cover any of those

185
00:07:53,160 --> 00:07:54,900
things today

186
00:07:54,900 --> 00:07:59,180
okay so the plan in the next 45 minutes

187
00:07:59,180 --> 00:08:03,120
is to try to cover a bunch of this stuff

188
00:08:03,120 --> 00:08:04,800
I I don't know if we'll get through all

189
00:08:04,800 --> 00:08:06,419
of it but

190
00:08:06,419 --> 00:08:08,160
we're going to build a Hello World app

191
00:08:08,160 --> 00:08:10,680
I'm going to show you what git works

192
00:08:10,680 --> 00:08:12,539
like it's a code versioning system what

193
00:08:12,539 --> 00:08:14,819
GitHub works like

194
00:08:14,819 --> 00:08:16,819
um then we're going to do some

195
00:08:16,819 --> 00:08:19,020
automation we're going to write an

196
00:08:19,020 --> 00:08:20,419
automated test

197
00:08:20,419 --> 00:08:22,860
I'm going to show you how to do some

198
00:08:22,860 --> 00:08:25,139
workflow things this idea of having

199
00:08:25,139 --> 00:08:28,259
something else do the work for you and

200
00:08:28,259 --> 00:08:30,180
then if we get time we're going to look

201
00:08:30,180 --> 00:08:33,599
at Docker for deployment

202
00:08:33,599 --> 00:08:36,479
okay here we go

203
00:08:36,479 --> 00:08:39,140
so

204
00:08:41,700 --> 00:08:45,800
I'm going to be using GitHub desktop

205
00:08:45,800 --> 00:08:49,019
I generally don't reckon recommend using

206
00:08:49,019 --> 00:08:50,519
this but

207
00:08:50,519 --> 00:08:51,420
um

208
00:08:51,420 --> 00:08:55,320
I I'm more of a command line get person

209
00:08:55,320 --> 00:08:57,480
but I think if this is the first time

210
00:08:57,480 --> 00:08:59,640
you've seen git it's a good place to

211
00:08:59,640 --> 00:09:01,819
start

212
00:09:02,100 --> 00:09:05,040
okay so we're going to start by

213
00:09:05,040 --> 00:09:07,740
creating a new repository we're going to

214
00:09:07,740 --> 00:09:10,320
just call it modern

215
00:09:10,320 --> 00:09:12,779
and a repository is essentially a

216
00:09:12,779 --> 00:09:14,940
storage place for code that's set up to

217
00:09:14,940 --> 00:09:17,279
be able to do the things we want to do

218
00:09:17,279 --> 00:09:20,940
with tracking history and who did what

219
00:09:20,940 --> 00:09:21,420
[Music]

220
00:09:21,420 --> 00:09:22,860
um

221
00:09:22,860 --> 00:09:24,600
just some niceties we're going to be

222
00:09:24,600 --> 00:09:26,160
working in Python

223
00:09:26,160 --> 00:09:29,820
and so we're going to create that

224
00:09:29,820 --> 00:09:33,660
and then we're going to open this up in

225
00:09:33,660 --> 00:09:36,540
Visual Studio code

226
00:09:36,540 --> 00:09:38,940
and

227
00:09:38,940 --> 00:09:43,459
I apologize let's see here

228
00:09:45,420 --> 00:09:49,200
Okay so we've got our directory here and

229
00:09:49,200 --> 00:09:50,279
the first thing we're going to do is

230
00:09:50,279 --> 00:09:52,500
just create a little simple web server

231
00:09:52,500 --> 00:09:53,519
so

232
00:09:53,519 --> 00:09:56,180
connect

233
00:09:56,300 --> 00:09:59,339
and I'm going to copy that from

234
00:09:59,339 --> 00:10:02,779
this thing I already wrote up

235
00:10:07,080 --> 00:10:09,540
and let me increase the font size on

236
00:10:09,540 --> 00:10:11,459
this

237
00:10:11,459 --> 00:10:13,019
can everyone see that like in the back

238
00:10:13,019 --> 00:10:14,640
can you see that okay raise your hand if

239
00:10:14,640 --> 00:10:17,160
it okay

240
00:10:17,160 --> 00:10:21,860
all right and then let's um

241
00:10:24,300 --> 00:10:27,380
hang on a sec here

242
00:10:29,880 --> 00:10:32,880
okay I wanted to run a terminal but

243
00:10:32,880 --> 00:10:34,860
a little button that I had for terminal

244
00:10:34,860 --> 00:10:37,700
is not showing up

245
00:10:39,360 --> 00:10:42,980
okay I'm going to switch over here

246
00:10:54,120 --> 00:10:56,660
all right

247
00:11:00,600 --> 00:11:04,700
okay so I'm going to just run this uh

248
00:11:16,620 --> 00:11:19,140
gotta remember to save

249
00:11:19,140 --> 00:11:21,980
there we go

250
00:11:26,279 --> 00:11:30,439
all right and cut and paste properly

251
00:11:44,820 --> 00:11:48,500
oh there's the problem

252
00:12:01,560 --> 00:12:05,640
spaces apparently

253
00:12:15,060 --> 00:12:17,339
I got a

254
00:12:17,339 --> 00:12:19,200
apparently I did not get all of the

255
00:12:19,200 --> 00:12:21,060
files that I needed here

256
00:12:21,060 --> 00:12:24,680
so let me um

257
00:13:07,860 --> 00:13:10,399
okay

258
00:13:10,740 --> 00:13:13,440
so let's um

259
00:13:13,440 --> 00:13:17,160
open open that up and see if it actually

260
00:13:17,160 --> 00:13:19,880
works

261
00:13:20,519 --> 00:13:23,899
all right so we got hello world

262
00:13:24,079 --> 00:13:27,420
thank you thank you all right hopefully

263
00:13:27,420 --> 00:13:30,420
uh things don't continue like that okay

264
00:13:30,420 --> 00:13:34,639
so we've got a

265
00:13:36,180 --> 00:13:37,800
all right so we've got some code ready

266
00:13:37,800 --> 00:13:41,760
let's go make a commit so a commit is

267
00:13:41,760 --> 00:13:44,459
basically a record of the chain of

268
00:13:44,459 --> 00:13:45,779
changes that were made we're going to

269
00:13:45,779 --> 00:13:48,180
make it into our repository one of the

270
00:13:48,180 --> 00:13:49,860
things that goes along with a commit is

271
00:13:49,860 --> 00:13:52,079
a little description who made it and

272
00:13:52,079 --> 00:13:53,579
when it's made

273
00:13:53,579 --> 00:13:56,110
so we're going to just say

274
00:13:56,110 --> 00:13:59,190
[Music]

275
00:14:02,279 --> 00:14:05,040
and we're going to commit and then we

276
00:14:05,040 --> 00:14:06,720
can actually go look at so we haven't

277
00:14:06,720 --> 00:14:08,700
done anything outside of our machine yet

278
00:14:08,700 --> 00:14:10,500
but we can actually go look at this

279
00:14:10,500 --> 00:14:14,300
commit and we can see that I made it and

280
00:14:14,300 --> 00:14:16,680
we can actually see when it was made it

281
00:14:16,680 --> 00:14:19,260
actually has a time stamp in there

282
00:14:19,260 --> 00:14:21,839
all right so

283
00:14:21,839 --> 00:14:25,800
let's make a small change to that and

284
00:14:25,800 --> 00:14:29,399
just show how a small change looks so

285
00:14:29,399 --> 00:14:31,980
we're going to change this from being

286
00:14:31,980 --> 00:14:34,800
about the Earth to the people

287
00:14:34,800 --> 00:14:36,839
and if we go back to

288
00:14:36,839 --> 00:14:39,660
our changes now we can see

289
00:14:39,660 --> 00:14:42,060
this is actually really nice it shows us

290
00:14:42,060 --> 00:14:47,479
exactly what's changed between these two

291
00:14:52,980 --> 00:14:56,519
all right and

292
00:14:58,740 --> 00:15:01,320
let's run that again

293
00:15:01,320 --> 00:15:04,260
and there we go

294
00:15:04,260 --> 00:15:06,360
Okay so

295
00:15:06,360 --> 00:15:10,260
what we have so far is keeping track of

296
00:15:10,260 --> 00:15:12,720
the changes that were made

297
00:15:12,720 --> 00:15:14,519
but they're still on our local machine

298
00:15:14,519 --> 00:15:17,820
so we don't have any way to get them to

299
00:15:17,820 --> 00:15:19,560
the server we don't have any way to

300
00:15:19,560 --> 00:15:22,079
recover them if they get lost

301
00:15:22,079 --> 00:15:24,120
so the way that we

302
00:15:24,120 --> 00:15:24,660
um

303
00:15:24,660 --> 00:15:27,839
solve those problems is we use a service

304
00:15:27,839 --> 00:15:30,480
called GitHub and we're going to publish

305
00:15:30,480 --> 00:15:32,760
this repository to GitHub

306
00:15:32,760 --> 00:15:34,740
to do that

307
00:15:34,740 --> 00:15:36,740
um

308
00:15:43,740 --> 00:15:45,480
oops

309
00:15:45,480 --> 00:15:49,100
okay so we're going to call this

310
00:15:49,620 --> 00:15:55,339
forgot to delete my repository on GitHub

311
00:15:55,740 --> 00:15:58,320
Okay so we've now got this on GitHub

312
00:15:58,320 --> 00:16:00,420
let's go take a look at what that looks

313
00:16:00,420 --> 00:16:02,100
like

314
00:16:02,100 --> 00:16:05,279
so this is uh GitHub looking at our

315
00:16:05,279 --> 00:16:07,440
modern 2 repo

316
00:16:07,440 --> 00:16:09,839
what I should see here is the same thing

317
00:16:09,839 --> 00:16:12,420
that we were looking at on my machine

318
00:16:12,420 --> 00:16:14,519
so if I look at the commits here

319
00:16:14,519 --> 00:16:16,680
there are the same commits that we just

320
00:16:16,680 --> 00:16:17,699
made

321
00:16:17,699 --> 00:16:19,980
and then I can also go look at

322
00:16:19,980 --> 00:16:22,320
is this file the same as what I expect

323
00:16:22,320 --> 00:16:25,560
yes it says hello everyone

324
00:16:25,560 --> 00:16:27,779
and um

325
00:16:27,779 --> 00:16:31,139
so at this point I could actually

326
00:16:31,139 --> 00:16:34,980
this gives us a couple of benefits one

327
00:16:34,980 --> 00:16:36,839
is that we have a backup now of the code

328
00:16:36,839 --> 00:16:39,360
if my machine were to lose all of that

329
00:16:39,360 --> 00:16:42,779
we could go get it off of GitHub

330
00:16:42,779 --> 00:16:45,600
um this also is available to anyone who

331
00:16:45,600 --> 00:16:47,940
has access to this repo so just by

332
00:16:47,940 --> 00:16:49,560
having it on GitHub

333
00:16:49,560 --> 00:16:51,420
one of the problems that can be solved

334
00:16:51,420 --> 00:16:55,440
is I think I'd pointed out that nobody

335
00:16:55,440 --> 00:16:57,420
could actually see that code that Bob

336
00:16:57,420 --> 00:17:00,540
was developing on his machine putting on

337
00:17:00,540 --> 00:17:02,459
the server unless they went and talked

338
00:17:02,459 --> 00:17:06,299
to Bob well now a security person could

339
00:17:06,299 --> 00:17:07,980
have access to GitHub and you could at

340
00:17:07,980 --> 00:17:10,880
least inspect the code

341
00:17:10,980 --> 00:17:13,020
this also solves a little bit the

342
00:17:13,020 --> 00:17:15,240
problem of Bob what happens if he gets

343
00:17:15,240 --> 00:17:17,040
sick or if he's on vacation or if he

344
00:17:17,040 --> 00:17:20,520
leaves now somebody else could actually

345
00:17:20,520 --> 00:17:24,319
get this code and deploy it

346
00:17:24,359 --> 00:17:26,880
all right so

347
00:17:26,880 --> 00:17:29,220
um let's look at

348
00:17:29,220 --> 00:17:31,380
one other concept with

349
00:17:31,380 --> 00:17:33,000
um with Git

350
00:17:33,000 --> 00:17:36,860
uh git has this concept of branches and

351
00:17:36,860 --> 00:17:39,720
I'm not going to go into this uh in

352
00:17:39,720 --> 00:17:42,059
detail but git is kind of set up like a

353
00:17:42,059 --> 00:17:45,960
tree structure so one of the things that

354
00:17:45,960 --> 00:17:50,160
you can do is create kind of a a branch

355
00:17:50,160 --> 00:17:52,320
off of that tree and it's called a

356
00:17:52,320 --> 00:17:54,000
branch

357
00:17:54,000 --> 00:17:56,160
um you can the idea with that is that

358
00:17:56,160 --> 00:17:58,039
you can then work on that code base

359
00:17:58,039 --> 00:18:00,539
while other people other developers

360
00:18:00,539 --> 00:18:02,100
might be working on it you can make

361
00:18:02,100 --> 00:18:04,860
changes to it uh separate from that and

362
00:18:04,860 --> 00:18:06,600
then when you're done with those you can

363
00:18:06,600 --> 00:18:10,080
put those back in merge them into the

364
00:18:10,080 --> 00:18:12,299
main branch

365
00:18:12,299 --> 00:18:15,360
so as you as it shows here we're

366
00:18:15,360 --> 00:18:16,860
currently on the main branch we're going

367
00:18:16,860 --> 00:18:19,260
to create a new branch

368
00:18:19,260 --> 00:18:22,760
someone decided that we should be

369
00:18:22,760 --> 00:18:26,039
responding in Spanish instead

370
00:18:26,039 --> 00:18:29,160
so we're going to create a branch

371
00:18:29,160 --> 00:18:34,460
we're going to then go into our code

372
00:18:38,880 --> 00:18:40,320
all right

373
00:18:40,320 --> 00:18:43,320
so now when we make this

374
00:18:43,320 --> 00:18:44,580
commit

375
00:18:44,580 --> 00:18:46,860
we're going to be committing it to this

376
00:18:46,860 --> 00:18:49,320
separate branch

377
00:18:49,320 --> 00:18:51,799
so

378
00:18:55,919 --> 00:18:58,380
okay so I'm going to publish this branch

379
00:18:58,380 --> 00:19:01,020
and remember last time when we published

380
00:19:01,020 --> 00:19:03,020
when we went to

381
00:19:03,020 --> 00:19:05,760
GitHub we saw

382
00:19:05,760 --> 00:19:08,220
the changes that we had made

383
00:19:08,220 --> 00:19:11,039
but if I go look at this what's in the

384
00:19:11,039 --> 00:19:13,620
main branch it still is there's no

385
00:19:13,620 --> 00:19:15,900
Spanish there

386
00:19:15,900 --> 00:19:19,260
if if I want to be able to see this

387
00:19:19,260 --> 00:19:20,880
change I have to switch the branch here

388
00:19:20,880 --> 00:19:22,380
as well so if I switch over to the

389
00:19:22,380 --> 00:19:25,039
Spanish branch

390
00:19:26,220 --> 00:19:28,380
there's a

391
00:19:28,380 --> 00:19:32,280
there's the Spanish translation

392
00:19:32,280 --> 00:19:34,260
okay so

393
00:19:34,260 --> 00:19:35,100
um

394
00:19:35,100 --> 00:19:37,260
one of the things that

395
00:19:37,260 --> 00:19:39,960
so this is this is uh useful but really

396
00:19:39,960 --> 00:19:41,700
this is where the power of this

397
00:19:41,700 --> 00:19:45,299
combination of branches and git in

398
00:19:45,299 --> 00:19:47,419
GitHub uh

399
00:19:47,419 --> 00:19:49,799
we can see kind of the interaction

400
00:19:49,799 --> 00:19:52,260
between or the the ability that that

401
00:19:52,260 --> 00:19:55,679
provides to let somebody else inspect

402
00:19:55,679 --> 00:19:57,780
the code or inspect the change before

403
00:19:57,780 --> 00:20:00,720
it's committed to the main branch

404
00:20:00,720 --> 00:20:03,480
so I'm going to show you how that works

405
00:20:03,480 --> 00:20:05,220
we're going to create what's called a

406
00:20:05,220 --> 00:20:06,380
pull request

407
00:20:06,380 --> 00:20:10,080
and what a pull request is is I made a

408
00:20:10,080 --> 00:20:12,900
change to this code I would like to

409
00:20:12,900 --> 00:20:15,600
propose that we make this change and

410
00:20:15,600 --> 00:20:18,299
with the intent that if it's approved

411
00:20:18,299 --> 00:20:20,520
it'll get pulled into the main branch

412
00:20:20,520 --> 00:20:22,260
so I'm going to create a pull request

413
00:20:22,260 --> 00:20:26,299
here off of the changes that I made

414
00:20:33,660 --> 00:20:38,220
okay so usually this next process would

415
00:20:38,220 --> 00:20:39,780
be handled by somebody else but for

416
00:20:39,780 --> 00:20:42,320
today I'm going to have to switch to

417
00:20:42,320 --> 00:20:45,900
this other persona who's going to review

418
00:20:45,900 --> 00:20:47,580
this code review

419
00:20:47,580 --> 00:20:51,539
so again this is proposed changes and if

420
00:20:51,539 --> 00:20:54,059
I were if uh if I were to ask somebody

421
00:20:54,059 --> 00:20:56,280
to review that I would say can you go

422
00:20:56,280 --> 00:20:59,220
look at pull request number one

423
00:20:59,220 --> 00:21:02,100
the reviewer then can go look at

424
00:21:02,100 --> 00:21:04,020
these are the changes that we want to

425
00:21:04,020 --> 00:21:05,600
make I want to change it to Spanish

426
00:21:05,600 --> 00:21:07,500
these are the

427
00:21:07,500 --> 00:21:10,799
uh this is the actually actual change

428
00:21:10,799 --> 00:21:12,660
that's being proposed

429
00:21:12,660 --> 00:21:15,660
and then they can actually make comments

430
00:21:15,660 --> 00:21:17,700
they can approve this they can request

431
00:21:17,700 --> 00:21:21,240
changes so let's add a comment here

432
00:21:21,240 --> 00:21:23,940
and one of the big problems with this is

433
00:21:23,940 --> 00:21:27,059
that I believe they're supposed to be a

434
00:21:27,059 --> 00:21:29,220
um an accent on this

435
00:21:29,220 --> 00:21:31,080
I might be wrong but

436
00:21:31,080 --> 00:21:34,460
so I'm going to say

437
00:21:39,299 --> 00:21:42,860
okay and then I'm going to

438
00:21:48,780 --> 00:21:51,120
Okay so

439
00:21:51,120 --> 00:21:54,059
I'm going to submit the review with that

440
00:21:54,059 --> 00:21:55,919
comment

441
00:21:55,919 --> 00:21:58,380
so switching back to the person who

442
00:21:58,380 --> 00:22:00,780
submitted this proposal this is what

443
00:22:00,780 --> 00:22:02,400
they see now they would see that

444
00:22:02,400 --> 00:22:05,280
somebody had started a review and that

445
00:22:05,280 --> 00:22:08,460
they made this comment and oh yeah I

446
00:22:08,460 --> 00:22:10,260
totally should have done that so I can

447
00:22:10,260 --> 00:22:11,780
actually take this little change here

448
00:22:11,780 --> 00:22:14,520
and just say yes

449
00:22:14,520 --> 00:22:17,179
add

450
00:22:17,400 --> 00:22:20,539
add the accent

451
00:22:21,360 --> 00:22:24,059
so now in my commits

452
00:22:24,059 --> 00:22:26,280
I've now got the original one as well as

453
00:22:26,280 --> 00:22:28,620
this new add-on accent

454
00:22:28,620 --> 00:22:31,620
all right so that looks good so I'm now

455
00:22:31,620 --> 00:22:32,880
going to

456
00:22:32,880 --> 00:22:35,780
merge this

457
00:22:41,820 --> 00:22:44,299
okay

458
00:22:47,760 --> 00:22:51,860
so I can I didn't hear that

459
00:22:53,640 --> 00:22:55,919
that's a whole other topic

460
00:22:55,919 --> 00:22:57,360
um

461
00:22:57,360 --> 00:22:59,340
it's uh

462
00:22:59,340 --> 00:23:01,440
that tree structure that I was talking

463
00:23:01,440 --> 00:23:02,720
about

464
00:23:02,720 --> 00:23:04,860
there are different preferences about

465
00:23:04,860 --> 00:23:08,100
this I like to keep my tree very

466
00:23:08,100 --> 00:23:11,940
straight A rebase lets me add that

467
00:23:11,940 --> 00:23:15,059
change onto the end of that tree of of

468
00:23:15,059 --> 00:23:16,260
commits

469
00:23:16,260 --> 00:23:18,260
a merge

470
00:23:18,260 --> 00:23:22,740
creates it retains that branch and so in

471
00:23:22,740 --> 00:23:24,419
the history I can actually see that

472
00:23:24,419 --> 00:23:25,740
branch

473
00:23:25,740 --> 00:23:29,159
uh to me that it's a little bit messy so

474
00:23:29,159 --> 00:23:31,200
I don't I don't like to do it that way I

475
00:23:31,200 --> 00:23:33,960
prefer to do the rebase way that is a

476
00:23:33,960 --> 00:23:36,960
topic like Windows versus MAC emacs

477
00:23:36,960 --> 00:23:39,720
versus VI so

478
00:23:39,720 --> 00:23:42,179
um kind of a personal preference with

479
00:23:42,179 --> 00:23:43,260
some

480
00:23:43,260 --> 00:23:45,240
reasons behind each

481
00:23:45,240 --> 00:23:48,600
okay so now in this good question though

482
00:23:48,600 --> 00:23:51,059
so now I should be able to see yep

483
00:23:51,059 --> 00:23:53,880
there's our Spanish now let's go back to

484
00:23:53,880 --> 00:23:56,340
our local environment

485
00:23:56,340 --> 00:23:59,520
so we don't have the accent here and

486
00:23:59,520 --> 00:24:02,940
actually we're still on the branch

487
00:24:02,940 --> 00:24:05,760
so how do we get that back well what we

488
00:24:05,760 --> 00:24:07,860
need to do is switch back to the main

489
00:24:07,860 --> 00:24:09,299
branch

490
00:24:09,299 --> 00:24:11,520
and then we need to retrieve those

491
00:24:11,520 --> 00:24:12,720
changes

492
00:24:12,720 --> 00:24:14,760
so get Works in kind of this

493
00:24:14,760 --> 00:24:18,840
peer-to-peer fashion and um

494
00:24:18,840 --> 00:24:21,240
so I can keep a copy of it on my on my

495
00:24:21,240 --> 00:24:23,100
local machine I can also keep a copy in

496
00:24:23,100 --> 00:24:25,080
the cloud and I can decide when to

497
00:24:25,080 --> 00:24:27,000
synchronize those so in this case we're

498
00:24:27,000 --> 00:24:28,919
going to now pull that down

499
00:24:28,919 --> 00:24:31,500
and what I should see in

500
00:24:31,500 --> 00:24:33,860
here

501
00:24:34,140 --> 00:24:36,679
is

502
00:24:39,299 --> 00:24:41,159
okay let's see did I get okay I got

503
00:24:41,159 --> 00:24:43,980
those I probably have to

504
00:24:43,980 --> 00:24:46,440
open this up again

505
00:24:46,440 --> 00:24:49,100
there we go

506
00:24:50,340 --> 00:24:54,539
visit vs code is not my normal editor so

507
00:24:54,539 --> 00:24:56,640
trying to learn it as I go here all

508
00:24:56,640 --> 00:24:59,940
right so now we've got that in there

509
00:24:59,940 --> 00:25:03,600
all right so we've we've now added see I

510
00:25:03,600 --> 00:25:04,620
think we're doing a little bit of a

511
00:25:04,620 --> 00:25:07,080
checkpoint here

512
00:25:07,080 --> 00:25:09,199
um

513
00:25:11,580 --> 00:25:14,460
okay two other things so let's say that

514
00:25:14,460 --> 00:25:16,260
after we do that

515
00:25:16,260 --> 00:25:19,320
um we get some feedback that Spanish is

516
00:25:19,320 --> 00:25:21,960
not it's not the right time to

517
00:25:21,960 --> 00:25:25,980
uh to to translate into Spanish how do

518
00:25:25,980 --> 00:25:27,779
we undo that well we have two ways that

519
00:25:27,779 --> 00:25:29,039
we can do it what I'm going to show at

520
00:25:29,039 --> 00:25:31,820
the command line here

521
00:25:31,860 --> 00:25:33,860
um

522
00:25:34,260 --> 00:25:38,640
so one is I can actually so I've got

523
00:25:38,640 --> 00:25:41,520
this long list of commits

524
00:25:41,520 --> 00:25:44,340
um I can either undo those commits or I

525
00:25:44,340 --> 00:25:47,100
can actually say I just want to work

526
00:25:47,100 --> 00:25:49,320
with the code at this particular commit

527
00:25:49,320 --> 00:25:51,120
so in this case I'd want to work with

528
00:25:51,120 --> 00:25:53,220
this one

529
00:25:53,220 --> 00:25:55,860
and I can just do that and then if I

530
00:25:55,860 --> 00:25:58,699
look at my code again

531
00:25:59,100 --> 00:26:01,860
we're back to the original version now

532
00:26:01,860 --> 00:26:04,620
that those commits are also there this

533
00:26:04,620 --> 00:26:06,539
mechanism is one of the ways that we do

534
00:26:06,539 --> 00:26:09,900
releases so we might say I want to

535
00:26:09,900 --> 00:26:13,260
release as of this particular commit and

536
00:26:13,260 --> 00:26:15,179
I can actually do a deployment based off

537
00:26:15,179 --> 00:26:17,279
of that particular commit even though

538
00:26:17,279 --> 00:26:19,799
there's later stuff

539
00:26:19,799 --> 00:26:21,419
um but in this case we actually don't

540
00:26:21,419 --> 00:26:23,159
we've decided we're not going to be

541
00:26:23,159 --> 00:26:26,480
adding Spanish for quite a while

542
00:26:27,800 --> 00:26:29,820
[Music]

543
00:26:29,820 --> 00:26:32,880
so we're going to go back to the desktop

544
00:26:32,880 --> 00:26:36,299
and we can actually revert these changes

545
00:26:36,299 --> 00:26:40,080
so this adds a new commit that undoes

546
00:26:40,080 --> 00:26:41,580
that commit

547
00:26:41,580 --> 00:26:44,418
let's see if

548
00:26:46,260 --> 00:26:48,419
okay so I'm now going to undo those two

549
00:26:48,419 --> 00:26:51,020
commits

550
00:26:51,720 --> 00:26:55,520
and let's see here hopefully

551
00:26:57,659 --> 00:27:00,900
okay so we're now back to where we would

552
00:27:00,900 --> 00:27:02,700
like to be and then I need to

553
00:27:02,700 --> 00:27:05,100
synchronize those

554
00:27:05,100 --> 00:27:07,879
to

555
00:27:10,200 --> 00:27:12,299
uh to GitHub

556
00:27:12,299 --> 00:27:15,299
so then back on GitHub again I should be

557
00:27:15,299 --> 00:27:18,059
able to see the same code that we've got

558
00:27:18,059 --> 00:27:21,179
locally all right there we go

559
00:27:21,179 --> 00:27:25,140
okay so let's do a quick check-in on

560
00:27:25,140 --> 00:27:27,539
kind of where how this affects those

561
00:27:27,539 --> 00:27:31,260
problems that we were looking at before

562
00:27:31,260 --> 00:27:35,039
okay so with Git and GitHub

563
00:27:35,039 --> 00:27:36,480
we don't have to worry about software

564
00:27:36,480 --> 00:27:38,940
being copied incorrectly because one of

565
00:27:38,940 --> 00:27:40,440
the things we can do as somebody

566
00:27:40,440 --> 00:27:43,440
mentioned here is we can retrieve we can

567
00:27:43,440 --> 00:27:45,840
pull that code down to the server we

568
00:27:45,840 --> 00:27:46,919
don't have to worry about changes

569
00:27:46,919 --> 00:27:49,020
getting lost we're covering our history

570
00:27:49,020 --> 00:27:52,860
outside visibility we have a way to get

571
00:27:52,860 --> 00:27:55,559
at the code if Bob quits and we don't

572
00:27:55,559 --> 00:27:59,899
have to do those manual code backups

573
00:28:00,240 --> 00:28:03,620
okay so what about

574
00:28:04,020 --> 00:28:06,360
testing

575
00:28:06,360 --> 00:28:08,220
um

576
00:28:08,220 --> 00:28:10,260
actually let's go to this slide

577
00:28:10,260 --> 00:28:12,299
so this changes this is how this changes

578
00:28:12,299 --> 00:28:13,799
the process

579
00:28:13,799 --> 00:28:17,460
so Bob now uh code uh does the coding

580
00:28:17,460 --> 00:28:19,320
and testing on his machine he now

581
00:28:19,320 --> 00:28:21,360
commits with Git and pushes to GitHub

582
00:28:21,360 --> 00:28:24,539
and then he SSH is to the Linux server

583
00:28:24,539 --> 00:28:27,960
he retrieves the code from GitHub he

584
00:28:27,960 --> 00:28:29,700
does some quick testing if he does make

585
00:28:29,700 --> 00:28:31,380
a change on the server he can now push

586
00:28:31,380 --> 00:28:34,860
that to GitHub or he can check out an

587
00:28:34,860 --> 00:28:37,200
earlier commit like we showed

588
00:28:37,200 --> 00:28:40,159
so it's getting better

589
00:28:40,440 --> 00:28:41,640
all right

590
00:28:41,640 --> 00:28:42,360
um

591
00:28:42,360 --> 00:28:47,100
so back to so how do we address testing

592
00:28:47,100 --> 00:28:51,960
all right let's first start by in in our

593
00:28:51,960 --> 00:28:53,940
code we can actually add an automated

594
00:28:53,940 --> 00:28:57,080
test so let's do that

595
00:29:01,080 --> 00:29:03,799
and

596
00:29:06,900 --> 00:29:08,820
hopefully this one pace a little bit

597
00:29:08,820 --> 00:29:09,840
better

598
00:29:09,840 --> 00:29:12,860
and last time

599
00:29:26,340 --> 00:29:28,500
all right who said something about how I

600
00:29:28,500 --> 00:29:30,659
fixed the indentation like I had to

601
00:29:30,659 --> 00:29:34,039
select all or something like that

602
00:29:34,980 --> 00:29:37,500
maybe that person left already oh wait

603
00:29:37,500 --> 00:29:39,120
it's actually this

604
00:29:39,120 --> 00:29:40,520
okay

605
00:29:40,520 --> 00:29:43,440
there we go

606
00:29:43,440 --> 00:29:46,700
Okay so

607
00:29:46,860 --> 00:29:49,140
let me fix my test because so you can

608
00:29:49,140 --> 00:29:51,600
see here that what the test is checking

609
00:29:51,600 --> 00:29:54,020
is is the response that we're given

610
00:29:54,020 --> 00:29:57,059
giving what we are supposed to be giving

611
00:29:57,059 --> 00:30:00,120
and let's go look at our test so in our

612
00:30:00,120 --> 00:30:01,980
code we're saying we're going to send

613
00:30:01,980 --> 00:30:04,320
back hello everyone but in our test

614
00:30:04,320 --> 00:30:08,000
we're still on hello world

615
00:30:08,159 --> 00:30:10,820
oops

616
00:30:11,220 --> 00:30:14,220
all right so now our

617
00:30:14,220 --> 00:30:17,820
now our test pass passes

618
00:30:17,820 --> 00:30:19,919
okay so we have a way to be able to run

619
00:30:19,919 --> 00:30:23,520
the test so Bob can now run the test

620
00:30:23,520 --> 00:30:26,940
um before he commits and before he puts

621
00:30:26,940 --> 00:30:28,500
it on the server

622
00:30:28,500 --> 00:30:32,279
what we'd really like is

623
00:30:32,279 --> 00:30:35,399
to not have to rely on him doing that

624
00:30:35,399 --> 00:30:37,980
so this is where we're going to use

625
00:30:37,980 --> 00:30:41,399
something called GitHub actions

626
00:30:41,399 --> 00:30:45,659
and the idea with

627
00:30:45,659 --> 00:30:48,240
um this is one of the automation steps

628
00:30:48,240 --> 00:30:50,340
so what we're going to try to do is set

629
00:30:50,340 --> 00:30:52,980
up something that every time somebody

630
00:30:52,980 --> 00:30:55,860
creates a pull request it runs the test

631
00:30:55,860 --> 00:30:57,600
and then it they don't even have to

632
00:30:57,600 --> 00:31:00,199
think about it

633
00:31:00,240 --> 00:31:02,700
so we're going to add to the way that we

634
00:31:02,700 --> 00:31:06,539
add that automation we put that under a

635
00:31:06,539 --> 00:31:09,659
directory called GitHub workflows

636
00:31:09,659 --> 00:31:12,600
and we're going to add to that a file

637
00:31:12,600 --> 00:31:14,520
we'll just call check

638
00:31:14,520 --> 00:31:19,220
this is going to be defined in yaml

639
00:31:28,620 --> 00:31:31,500
okay so what this action is going to

640
00:31:31,500 --> 00:31:35,840
this action is going to do is check out

641
00:31:35,840 --> 00:31:40,279
our code it's going to install some

642
00:31:40,279 --> 00:31:43,500
python stuff into this environment

643
00:31:43,500 --> 00:31:47,159
and then we're going to run the test

644
00:31:47,159 --> 00:31:50,659
this is going to run on a essentially a

645
00:31:50,659 --> 00:31:53,039
what's a container but it's a virtual

646
00:31:53,039 --> 00:31:56,640
machine in the GitHub environment so I

647
00:31:56,640 --> 00:31:58,980
don't have to do anything to be able to

648
00:31:58,980 --> 00:32:01,500
set that up other than I'd say I want it

649
00:32:01,500 --> 00:32:03,600
to run on Ubuntu and then it's it's

650
00:32:03,600 --> 00:32:06,419
going to take care of the rest

651
00:32:06,419 --> 00:32:11,659
okay so we're going to create a branch

652
00:32:12,419 --> 00:32:15,380
called test

653
00:32:16,440 --> 00:32:20,899
and I'm going to bring that change over

654
00:32:21,840 --> 00:32:23,340
all right and then let's look at the

655
00:32:23,340 --> 00:32:24,960
changes so what I should see here is my

656
00:32:24,960 --> 00:32:30,140
test and my action

657
00:32:39,960 --> 00:32:42,919
sorry can you

658
00:32:44,340 --> 00:32:47,539
GitHub documentation

659
00:32:48,299 --> 00:32:52,320
yeah just um if you just do a search on

660
00:32:52,320 --> 00:32:54,659
Google for an example of

661
00:32:54,659 --> 00:32:56,940
you know GitHub action

662
00:32:56,940 --> 00:32:58,320
um there's plenty of them I think I

663
00:32:58,320 --> 00:33:01,200
probably took that from one of them

664
00:33:01,200 --> 00:33:03,299
okay so I'm going to create a pull

665
00:33:03,299 --> 00:33:06,020
request here

666
00:33:07,260 --> 00:33:09,779
all right and now we're going to see if

667
00:33:09,779 --> 00:33:11,820
if this worked

668
00:33:11,820 --> 00:33:14,399
oh awesome

669
00:33:14,399 --> 00:33:16,440
okay so

670
00:33:16,440 --> 00:33:18,480
um

671
00:33:18,480 --> 00:33:20,580
under this actions tab this is going to

672
00:33:20,580 --> 00:33:22,320
show all of the GitHub actions that have

673
00:33:22,320 --> 00:33:23,880
run

674
00:33:23,880 --> 00:33:26,340
and it'll show the detail of what

675
00:33:26,340 --> 00:33:28,620
happened so this is pretty close to if

676
00:33:28,620 --> 00:33:30,960
you would run it yourself so we can see

677
00:33:30,960 --> 00:33:32,640
that it checked out the repo it did the

678
00:33:32,640 --> 00:33:36,120
setup it did the dependencies and then

679
00:33:36,120 --> 00:33:38,519
it ran the test and we'll actually see

680
00:33:38,519 --> 00:33:40,980
the same output from the test that

681
00:33:40,980 --> 00:33:43,860
uh that we saw in our local machine

682
00:33:43,860 --> 00:33:45,600
so just to make sure that this is

683
00:33:45,600 --> 00:33:49,679
working uh let's break our test and

684
00:33:49,679 --> 00:33:52,100
again

685
00:33:52,860 --> 00:33:56,519
and we'll push that again

686
00:33:56,519 --> 00:33:59,100
so the cool thing about this is this is

687
00:33:59,100 --> 00:34:01,080
extending that Branch concept now not

688
00:34:01,080 --> 00:34:03,240
only can I do development on that Branch

689
00:34:03,240 --> 00:34:05,340
without interfering with anyone else I

690
00:34:05,340 --> 00:34:07,620
can actually play around with what it

691
00:34:07,620 --> 00:34:10,859
takes to make my Branch pass all of the

692
00:34:10,859 --> 00:34:15,918
tests and nobody else is affected by it

693
00:34:16,800 --> 00:34:18,080
foreign

694
00:34:18,080 --> 00:34:22,098
okay so I'm going to push that

695
00:34:23,699 --> 00:34:25,980
and go back and look at

696
00:34:25,980 --> 00:34:28,460
so each of these action runs will be

697
00:34:28,460 --> 00:34:32,659
logged kind of separately so

698
00:34:32,659 --> 00:34:35,040
we see the first one that passed there

699
00:34:35,040 --> 00:34:37,440
and then this one

700
00:34:37,440 --> 00:34:40,940
we should actually see it fail

701
00:34:43,619 --> 00:34:46,379
and there we go so

702
00:34:46,379 --> 00:34:49,460
there it failed

703
00:34:50,580 --> 00:34:52,080
okay

704
00:34:52,080 --> 00:34:54,080
um

705
00:34:56,099 --> 00:34:59,880
okay so at this point

706
00:34:59,880 --> 00:35:01,680
um one of the things I had promised was

707
00:35:01,680 --> 00:35:04,200
that I would show you some ways to so we

708
00:35:04,200 --> 00:35:07,200
talked about a couple of Basics I

709
00:35:07,200 --> 00:35:09,000
promised I would show you some ways that

710
00:35:09,000 --> 00:35:11,280
you could exploit these

711
00:35:11,280 --> 00:35:14,160
um so this is the this is where we can

712
00:35:14,160 --> 00:35:15,780
start doing this kind of stuff we now

713
00:35:15,780 --> 00:35:19,880
have stuff in our repo that executes

714
00:35:19,880 --> 00:35:23,160
commands essentially that if we go back

715
00:35:23,160 --> 00:35:25,440
and look at this

716
00:35:25,440 --> 00:35:27,060
um

717
00:35:27,060 --> 00:35:30,500
if we look at our yaml

718
00:35:31,140 --> 00:35:33,440
okay

719
00:35:36,839 --> 00:35:39,240
so this looks kind of like a shell

720
00:35:39,240 --> 00:35:41,160
script doesn't it in fact that's

721
00:35:41,160 --> 00:35:42,720
actually what's happening here this run

722
00:35:42,720 --> 00:35:44,880
command basically says take the rest of

723
00:35:44,880 --> 00:35:47,460
this and run it as a shell script

724
00:35:47,460 --> 00:35:50,460
well you can do some pretty interesting

725
00:35:50,460 --> 00:35:53,940
stuff with shell Scripts and uh and

726
00:35:53,940 --> 00:35:55,980
that's one of the things that you can do

727
00:35:55,980 --> 00:35:58,320
here so let's start with something

728
00:35:58,320 --> 00:36:00,780
really basic

729
00:36:00,780 --> 00:36:03,540
um one of the problems with the way that

730
00:36:03,540 --> 00:36:07,859
Bob works is how do you

731
00:36:07,859 --> 00:36:11,400
make sure that secure coding practices

732
00:36:11,400 --> 00:36:15,180
are happening your your only option is

733
00:36:15,180 --> 00:36:18,000
to go talk to him maybe sit down with

734
00:36:18,000 --> 00:36:20,000
him and have him look at the code

735
00:36:20,000 --> 00:36:24,000
but that's pretty cumbersome wouldn't it

736
00:36:24,000 --> 00:36:25,920
be awesome if there was a way that you

737
00:36:25,920 --> 00:36:28,440
could make it so that certain Security

738
00:36:28,440 --> 00:36:31,560
checks happened every time a code change

739
00:36:31,560 --> 00:36:33,420
was made

740
00:36:33,420 --> 00:36:35,280
well let me show you one way that we can

741
00:36:35,280 --> 00:36:37,579
do that

742
00:36:38,060 --> 00:36:41,160
so really basic one is

743
00:36:41,160 --> 00:36:44,480
let's add a linter

744
00:36:46,740 --> 00:36:52,520
so we uh we can go into this workflow

745
00:36:58,140 --> 00:37:01,020
and we can add another step

746
00:37:01,020 --> 00:37:02,940
and this because you would have access

747
00:37:02,940 --> 00:37:04,200
to

748
00:37:04,200 --> 00:37:06,180
uh GitHub you could actually do this

749
00:37:06,180 --> 00:37:09,960
either with or without Bob's involvement

750
00:37:09,960 --> 00:37:11,579
so we're going to check to make sure at

751
00:37:11,579 --> 00:37:13,740
least that the code doesn't have some

752
00:37:13,740 --> 00:37:17,419
any kind of egregious errors

753
00:37:17,700 --> 00:37:20,579
um okay so let's fix this test so it

754
00:37:20,579 --> 00:37:23,040
doesn't fail in that

755
00:37:23,040 --> 00:37:27,060
and then let's add a linter

756
00:37:27,060 --> 00:37:28,560
something that we know will cause a

757
00:37:28,560 --> 00:37:31,400
problem with linter

758
00:37:31,740 --> 00:37:34,680
so this should cause a problem because

759
00:37:34,680 --> 00:37:37,380
it doesn't have parentheses around it

760
00:37:37,380 --> 00:37:40,560
and then let's uh

761
00:37:40,560 --> 00:37:43,640
push that change

762
00:38:02,040 --> 00:38:03,660
so one thing that's kind of cool about

763
00:38:03,660 --> 00:38:08,118
actions is that

764
00:38:09,420 --> 00:38:10,560
weight

765
00:38:10,560 --> 00:38:13,140
did my linter not get added

766
00:38:13,140 --> 00:38:15,000
I thought it did let me go look at the

767
00:38:15,000 --> 00:38:17,880
changes that I made and see did I add a

768
00:38:17,880 --> 00:38:20,160
linter

769
00:38:20,160 --> 00:38:22,680
no apparently I didn't

770
00:38:22,680 --> 00:38:26,299
probably because I didn't hit save

771
00:38:30,660 --> 00:38:33,259
there we go

772
00:38:42,480 --> 00:38:44,339
okay so one of the things that you might

773
00:38:44,339 --> 00:38:47,579
notice is that every time this action

774
00:38:47,579 --> 00:38:50,099
runs it does the same thing over and

775
00:38:50,099 --> 00:38:51,240
over again

776
00:38:51,240 --> 00:38:53,880
all right this might be kind of annoying

777
00:38:53,880 --> 00:38:56,520
if you're having to wait for it but it's

778
00:38:56,520 --> 00:39:00,900
really good in in that it runs the same

779
00:39:00,900 --> 00:39:05,180
thing exactly the same way every time

780
00:39:06,480 --> 00:39:08,579
um okay so there we go uh we have a

781
00:39:08,579 --> 00:39:11,520
linter built in

782
00:39:11,520 --> 00:39:14,700
so if Bob were to check in Bad Code we

783
00:39:14,700 --> 00:39:17,220
would at least get this check

784
00:39:17,220 --> 00:39:20,460
one I'm not going to show this just

785
00:39:20,460 --> 00:39:22,740
because I want to move on to another

786
00:39:22,740 --> 00:39:25,800
exploit but one of the tools that's

787
00:39:25,800 --> 00:39:28,200
really awesome for static analysis of

788
00:39:28,200 --> 00:39:30,119
code for security issues is called sem

789
00:39:30,119 --> 00:39:31,160
grep

790
00:39:31,160 --> 00:39:34,500
does anyone know about sem grep yeah

791
00:39:34,500 --> 00:39:36,960
it's good to see a few of you so some

792
00:39:36,960 --> 00:39:38,820
grub actually has an action that you

793
00:39:38,820 --> 00:39:40,440
could add just as easily as what we did

794
00:39:40,440 --> 00:39:41,780
with lint

795
00:39:41,780 --> 00:39:44,280
and it does

796
00:39:44,280 --> 00:39:46,800
many many more checks it can do checks

797
00:39:46,800 --> 00:39:49,440
specific to the language you're working

798
00:39:49,440 --> 00:39:51,960
on it can do checks for other things

799
00:39:51,960 --> 00:39:54,240
about the environment and it comes with

800
00:39:54,240 --> 00:39:57,060
a ton of them that I guess some grapp or

801
00:39:57,060 --> 00:39:59,220
the community have created but you can

802
00:39:59,220 --> 00:40:01,020
also create your own custom ones and

803
00:40:01,020 --> 00:40:02,520
it's pretty easy to do

804
00:40:02,520 --> 00:40:05,339
so linting and semrep I would say are

805
00:40:05,339 --> 00:40:08,880
probably linting some grep and tests are

806
00:40:08,880 --> 00:40:11,579
three of the most basic ones that are

807
00:40:11,579 --> 00:40:14,760
easy to add they catch a ton of things

808
00:40:14,760 --> 00:40:17,940
that developers might not notice kind of

809
00:40:17,940 --> 00:40:19,440
in their rush or they just might not be

810
00:40:19,440 --> 00:40:21,780
aware of

811
00:40:21,780 --> 00:40:25,800
okay so let's look at one other

812
00:40:25,800 --> 00:40:28,079
I'm going to just show a way that you

813
00:40:28,079 --> 00:40:30,900
can get to where you could exploit some

814
00:40:30,900 --> 00:40:33,359
more about this environment

815
00:40:33,359 --> 00:40:37,380
so this thing is a Linux machine running

816
00:40:37,380 --> 00:40:39,200
this uh

817
00:40:39,200 --> 00:40:43,200
running this shell script

818
00:40:43,200 --> 00:40:45,300
wouldn't it be cool if you could SSH

819
00:40:45,300 --> 00:40:48,300
into it and maybe poke around a little

820
00:40:48,300 --> 00:40:50,700
bit this this might be helpful if you're

821
00:40:50,700 --> 00:40:52,740
trying to debug but from a security

822
00:40:52,740 --> 00:40:54,780
perspective it might be interesting to

823
00:40:54,780 --> 00:40:56,520
see like what is this thing and what

824
00:40:56,520 --> 00:40:58,440
kind of stuff could I do inside of this

825
00:40:58,440 --> 00:41:01,680
environment that maybe I could

826
00:41:01,680 --> 00:41:05,339
use for other purposes one of the one of

827
00:41:05,339 --> 00:41:06,839
the interesting things you can do with

828
00:41:06,839 --> 00:41:08,940
actions is we're showing actions

829
00:41:08,940 --> 00:41:11,280
triggered by

830
00:41:11,280 --> 00:41:14,880
um by a pull request but actions can

831
00:41:14,880 --> 00:41:18,000
also be run on demand through either the

832
00:41:18,000 --> 00:41:21,060
API or the GitHub API or there's a

833
00:41:21,060 --> 00:41:23,460
little drop down in their UI you can

834
00:41:23,460 --> 00:41:25,859
also set them up to run on a like a Cron

835
00:41:25,859 --> 00:41:28,560
job so think about some things that

836
00:41:28,560 --> 00:41:31,560
right now you have to do you know either

837
00:41:31,560 --> 00:41:33,900
from your machine or maybe you're trying

838
00:41:33,900 --> 00:41:35,520
to figure out a way to set up something

839
00:41:35,520 --> 00:41:38,099
to run somewhere actions might be a way

840
00:41:38,099 --> 00:41:40,079
to do that

841
00:41:40,079 --> 00:41:44,119
so let's um add in

842
00:41:45,240 --> 00:41:48,599
this ability to SSH into it so we're

843
00:41:48,599 --> 00:41:51,859
going to just add this action

844
00:41:51,960 --> 00:41:54,800
and then

845
00:41:56,940 --> 00:41:58,619
okay so we're going to just run this

846
00:41:58,619 --> 00:42:01,320
right after

847
00:42:01,320 --> 00:42:04,880
we get the environment set up

848
00:42:30,960 --> 00:42:32,820
okay so what we're going to see here if

849
00:42:32,820 --> 00:42:34,260
it works

850
00:42:34,260 --> 00:42:37,079
is it's actually going to stop our flow

851
00:42:37,079 --> 00:42:41,240
and tell us how we can connect to this

852
00:42:41,240 --> 00:42:43,980
container that is running

853
00:42:43,980 --> 00:42:45,780
our workflow

854
00:42:45,780 --> 00:42:50,119
so if I click on this link here

855
00:42:57,660 --> 00:43:00,799
hopefully it connects

856
00:43:17,160 --> 00:43:19,700
we can also run

857
00:43:19,700 --> 00:43:24,379
SSH if this doesn't work but

858
00:43:24,480 --> 00:43:28,520
okay let's try the SSH command

859
00:43:50,400 --> 00:43:53,000
okay

860
00:43:53,940 --> 00:43:56,640
all right so there there I am inside

861
00:43:56,640 --> 00:43:58,619
this environment so I've got my code

862
00:43:58,619 --> 00:44:00,599
there

863
00:44:00,599 --> 00:44:01,859
um

864
00:44:01,859 --> 00:44:04,680
we can see that this is a

865
00:44:04,680 --> 00:44:06,780
oh that's interesting this is apparently

866
00:44:06,780 --> 00:44:11,339
running something with Azure and

867
00:44:14,880 --> 00:44:17,819
so this is Ubuntu I don't know what kind

868
00:44:17,819 --> 00:44:19,079
of stuff might I be able to do with

869
00:44:19,079 --> 00:44:21,560
Ubuntu

870
00:44:23,300 --> 00:44:26,220
doesn't I don't know if let's see if we

871
00:44:26,220 --> 00:44:28,939
can run curl

872
00:44:33,720 --> 00:44:35,819
well I can do that

873
00:44:35,819 --> 00:44:37,800
I don't know a lot of possibilities

874
00:44:37,800 --> 00:44:41,540
there outbound network access

875
00:44:42,480 --> 00:44:44,819
so

876
00:44:44,819 --> 00:44:46,680
a couple ways that you can exploit that

877
00:44:46,680 --> 00:44:49,020
second one probably is a lot more has a

878
00:44:49,020 --> 00:44:51,720
lot more opportunities

879
00:44:51,720 --> 00:44:54,379
all right

880
00:44:57,960 --> 00:44:59,640
okay so

881
00:44:59,640 --> 00:45:03,359
um let's go look at where we're at again

882
00:45:03,359 --> 00:45:05,480
um

883
00:45:09,020 --> 00:45:12,599
all right so we have added some

884
00:45:12,599 --> 00:45:14,460
automated tests we've added some GitHub

885
00:45:14,460 --> 00:45:15,780
actions

886
00:45:15,780 --> 00:45:18,000
so we've now taken taking care of

887
00:45:18,000 --> 00:45:21,480
checking coding standards testing Under

888
00:45:21,480 --> 00:45:24,540
Pressure how is the site tested

889
00:45:24,540 --> 00:45:27,180
and the only things we have left now are

890
00:45:27,180 --> 00:45:29,280
like how do we get this software onto

891
00:45:29,280 --> 00:45:30,540
the server and

892
00:45:30,540 --> 00:45:32,700
without having to evolve Bob

893
00:45:32,700 --> 00:45:34,560
so that's what the so this is what the

894
00:45:34,560 --> 00:45:36,900
workflow looks like now so Bob now

895
00:45:36,900 --> 00:45:39,020
writes code and test

896
00:45:39,020 --> 00:45:43,680
on his iMac he pushes those Co that code

897
00:45:43,680 --> 00:45:47,099
and tests to get and GitHub and then

898
00:45:47,099 --> 00:45:49,200
those tests and other code checks run

899
00:45:49,200 --> 00:45:51,799
automatically

900
00:45:51,900 --> 00:45:55,200
um and then step three is pretty much

901
00:45:55,200 --> 00:45:58,079
gone uh like I guess there might be some

902
00:45:58,079 --> 00:46:00,660
value in testing it but with a good set

903
00:46:00,660 --> 00:46:02,400
of automated tests don't need to do that

904
00:46:02,400 --> 00:46:04,140
anymore so we've just got this last

905
00:46:04,140 --> 00:46:08,400
piece of how do we get this thing onto

906
00:46:08,400 --> 00:46:10,880
the server

907
00:46:11,339 --> 00:46:14,359
so I'm going to show an example of that

908
00:46:14,359 --> 00:46:18,119
and let me just say that that piece is

909
00:46:18,119 --> 00:46:19,380
actually

910
00:46:19,380 --> 00:46:21,660
a whole other talk about infrastructure

911
00:46:21,660 --> 00:46:23,579
automation so I'm going to just show a

912
00:46:23,579 --> 00:46:26,420
small piece of how this works

913
00:46:26,420 --> 00:46:29,940
and elaborate a little bit on how that

914
00:46:29,940 --> 00:46:32,400
automation might happen

915
00:46:32,400 --> 00:46:36,839
okay so we're going to use Docker to

916
00:46:36,839 --> 00:46:38,599
create a container

917
00:46:38,599 --> 00:46:41,040
this could also be so I'm going to use

918
00:46:41,040 --> 00:46:43,079
Docker as an example because I can run

919
00:46:43,079 --> 00:46:46,319
it here on my machine but this what

920
00:46:46,319 --> 00:46:48,060
we're looking for is automating this

921
00:46:48,060 --> 00:46:51,000
process of keeping the server up to date

922
00:46:51,000 --> 00:46:53,339
um more importantly what we want is to

923
00:46:53,339 --> 00:46:56,579
have a consistent environment so we know

924
00:46:56,579 --> 00:47:00,480
that when we run this python code the

925
00:47:00,480 --> 00:47:02,520
environment is going to be exactly the

926
00:47:02,520 --> 00:47:05,400
same way that we expect it to be so

927
00:47:05,400 --> 00:47:07,140
Docker is one way we can do that we

928
00:47:07,140 --> 00:47:08,819
could also use if you were using for

929
00:47:08,819 --> 00:47:11,280
example virtual machines you could use

930
00:47:11,280 --> 00:47:13,740
something like ansible or puppet or Chef

931
00:47:13,740 --> 00:47:17,700
to kind of automate the management of

932
00:47:17,700 --> 00:47:19,160
that

933
00:47:19,160 --> 00:47:22,380
if your Docker creates what are called

934
00:47:22,380 --> 00:47:24,420
containers which are like kind of small

935
00:47:24,420 --> 00:47:26,819
virtual machines those typically are

936
00:47:26,819 --> 00:47:28,200
used with something like kubernetes

937
00:47:28,200 --> 00:47:31,980
which is like a whole separate topic so

938
00:47:31,980 --> 00:47:33,540
we're going to just leave the how it

939
00:47:33,540 --> 00:47:36,060
gets automated as

940
00:47:36,060 --> 00:47:38,339
a topic for another time and just show

941
00:47:38,339 --> 00:47:39,839
you an example of what the automation

942
00:47:39,839 --> 00:47:42,720
could look like

943
00:47:42,720 --> 00:47:46,200
okay so we're going to add to

944
00:47:46,200 --> 00:47:49,680
our Repository

945
00:47:49,680 --> 00:47:50,460
um

946
00:47:50,460 --> 00:47:54,020
what's called a Docker file

947
00:47:59,099 --> 00:48:02,720
I'm going to type Docker file

948
00:48:04,800 --> 00:48:08,760
okay so this is super simple let me just

949
00:48:08,760 --> 00:48:10,680
explain kind of what

950
00:48:10,680 --> 00:48:13,800
you could do with this so this from is

951
00:48:13,800 --> 00:48:15,839
we're going to start from an image so

952
00:48:15,839 --> 00:48:17,640
this would be kind of like the iso you

953
00:48:17,640 --> 00:48:19,220
might download for an operating system

954
00:48:19,220 --> 00:48:23,040
but it's uh it's actually prepared in a

955
00:48:23,040 --> 00:48:24,900
certain way already so in this case we

956
00:48:24,900 --> 00:48:27,119
just care that we're going to run Python

957
00:48:27,119 --> 00:48:29,040
and we want to make sure it's version

958
00:48:29,040 --> 00:48:30,660
three

959
00:48:30,660 --> 00:48:33,000
um that image is actually an official

960
00:48:33,000 --> 00:48:35,160
image creating created by the python

961
00:48:35,160 --> 00:48:37,980
Community or I don't know somebody that

962
00:48:37,980 --> 00:48:40,440
knows what they're doing so if I want to

963
00:48:40,440 --> 00:48:42,300
run python I can actually trust that

964
00:48:42,300 --> 00:48:44,579
that that is going to have the right

965
00:48:44,579 --> 00:48:46,380
environment I could actually be even

966
00:48:46,380 --> 00:48:48,780
more specific I could say I want to go

967
00:48:48,780 --> 00:48:49,640
get

968
00:48:49,640 --> 00:48:53,480
this particular version of that Python 3

969
00:48:53,480 --> 00:48:56,700
image and make sure that it only gets

970
00:48:56,700 --> 00:48:58,980
changed when I control it but for our

971
00:48:58,980 --> 00:49:00,900
exercise today that doesn't that's

972
00:49:00,900 --> 00:49:03,599
that's not necessary and then I'm going

973
00:49:03,599 --> 00:49:06,300
to add this server.pi well so what's

974
00:49:06,300 --> 00:49:09,359
going to happen in this is when we build

975
00:49:09,359 --> 00:49:12,960
this image it's going to copy that file

976
00:49:12,960 --> 00:49:15,660
from our repo into the image

977
00:49:15,660 --> 00:49:17,660
and then it's going to run this command

978
00:49:17,660 --> 00:49:21,660
python just like we've been running

979
00:49:21,660 --> 00:49:26,359
so I'm going to just run this locally

980
00:49:43,740 --> 00:49:45,740
okay so

981
00:49:45,740 --> 00:49:48,359
Docker well that was pretty quick so

982
00:49:48,359 --> 00:49:51,720
Docker just built that image

983
00:49:51,720 --> 00:49:54,119
I can actually see it here there's uh

984
00:49:54,119 --> 00:49:56,099
the image sitting in my Docker

985
00:49:56,099 --> 00:49:58,380
repository similar concept but for

986
00:49:58,380 --> 00:50:01,819
images and now

987
00:50:06,960 --> 00:50:08,940
okay let's make so it's done eight

988
00:50:08,940 --> 00:50:10,740
thousand we're going to put this on 8001

989
00:50:10,740 --> 00:50:12,480
just so we can

990
00:50:12,480 --> 00:50:14,760
show that we're connecting to the docker

991
00:50:14,760 --> 00:50:18,240
container and not the uh the server

992
00:50:18,240 --> 00:50:20,160
running locally

993
00:50:20,160 --> 00:50:21,540
and

994
00:50:21,540 --> 00:50:23,599
um

995
00:50:25,859 --> 00:50:28,260
oh look at that it couldn't run it

996
00:50:28,260 --> 00:50:31,740
because we still had that broken code in

997
00:50:31,740 --> 00:50:34,260
there so let's go fix that real quick

998
00:50:34,260 --> 00:50:37,579
and then we'll rebuild that

999
00:50:44,280 --> 00:50:47,300
all right so

1000
00:50:50,220 --> 00:50:51,599
there we go

1001
00:50:51,599 --> 00:50:54,119
so there would be a couple of other

1002
00:50:54,119 --> 00:50:55,980
steps once we built this image we would

1003
00:50:55,980 --> 00:50:58,319
have to somehow get that image onto the

1004
00:50:58,319 --> 00:51:01,440
server but that is also something that

1005
00:51:01,440 --> 00:51:02,880
could be automated with that whole

1006
00:51:02,880 --> 00:51:04,619
process

1007
00:51:04,619 --> 00:51:08,180
so with that you've gotten kind of a

1008
00:51:08,180 --> 00:51:11,339
brief overview of all of the component

1009
00:51:11,339 --> 00:51:13,859
all of the basic components of modern

1010
00:51:13,859 --> 00:51:15,960
software development

1011
00:51:15,960 --> 00:51:20,300
um going back to our little diagram here

1012
00:51:24,480 --> 00:51:27,180
so we're using git and GitHub to store

1013
00:51:27,180 --> 00:51:30,540
the code and track changes we're adding

1014
00:51:30,540 --> 00:51:32,460
automated tests we're running those

1015
00:51:32,460 --> 00:51:34,980
tests and other checks in an automated

1016
00:51:34,980 --> 00:51:36,660
fashion where the developer doesn't have

1017
00:51:36,660 --> 00:51:39,059
to remember to do it and now with Docker

1018
00:51:39,059 --> 00:51:43,140
or the other ones I mentioned we have a

1019
00:51:43,140 --> 00:51:45,780
way to control the OS environment and we

1020
00:51:45,780 --> 00:51:47,460
have some documentation on what that

1021
00:51:47,460 --> 00:51:50,940
environment looks like and oh I forgot

1022
00:51:50,940 --> 00:51:52,740
to mark this one off running the wrong

1023
00:51:52,740 --> 00:51:55,079
software so we've checked off every one

1024
00:51:55,079 --> 00:51:56,099
of these

1025
00:51:56,099 --> 00:51:59,880
and um the last change there is that Bob

1026
00:51:59,880 --> 00:52:02,940
now just checks in his code

1027
00:52:02,940 --> 00:52:05,180
um we still have to solve this problem

1028
00:52:05,180 --> 00:52:09,300
but automation is going to admin that

1029
00:52:09,300 --> 00:52:11,099
production server

1030
00:52:11,099 --> 00:52:14,099
so I hope with this uh one of my main

1031
00:52:14,099 --> 00:52:16,380
goals was you know if you're if you're

1032
00:52:16,380 --> 00:52:18,000
doing development here are some things

1033
00:52:18,000 --> 00:52:21,359
that if you aren't using might be really

1034
00:52:21,359 --> 00:52:23,160
helpful I would you know definitely

1035
00:52:23,160 --> 00:52:24,720
recommend them if you're not already

1036
00:52:24,720 --> 00:52:26,880
using them a little bit of ramp up time

1037
00:52:26,880 --> 00:52:29,940
but it's a kind of the spend a day or

1038
00:52:29,940 --> 00:52:32,220
two to save yourself

1039
00:52:32,220 --> 00:52:35,280
um time over the next however long

1040
00:52:35,280 --> 00:52:37,380
you're a developer the other thing I

1041
00:52:37,380 --> 00:52:39,780
hope is this has given you

1042
00:52:39,780 --> 00:52:42,780
some perspective on what is either

1043
00:52:42,780 --> 00:52:44,460
happening in your development

1044
00:52:44,460 --> 00:52:46,559
environment with the developers that you

1045
00:52:46,559 --> 00:52:47,880
might work with as Security

1046
00:52:47,880 --> 00:52:49,859
Professionals or what should be

1047
00:52:49,859 --> 00:52:52,680
happening and give you some way to kind

1048
00:52:52,680 --> 00:52:55,740
of relate to them maybe understand what

1049
00:52:55,740 --> 00:52:57,540
uh what's going on with what they're

1050
00:52:57,540 --> 00:52:59,579
doing so thank you very much for your

1051
00:52:59,579 --> 00:53:03,200
time I hope this has been really helpful

1052
00:53:05,839 --> 00:53:08,839
thank you

