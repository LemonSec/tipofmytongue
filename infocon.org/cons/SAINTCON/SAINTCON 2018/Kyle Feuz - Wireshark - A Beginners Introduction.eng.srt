1
00:00:00,060 --> 00:00:17,038
what's that<font color="#E5E5E5"> okay okay so I'm Kyle fate</font>

2
00:00:13,349 --> 00:00:20,250
<font color="#CCCCCC">and I'm with the School of Computing at</font>

3
00:00:17,039 --> 00:00:22,230
Weber<font color="#CCCCCC"> State University I've been</font><font color="#E5E5E5"> coming</font>

4
00:00:20,250 --> 00:00:25,619
to<font color="#E5E5E5"> st.</font><font color="#CCCCCC"> Cohn for I think this is my</font>

5
00:00:22,230 --> 00:00:28,140
fourth year now<font color="#E5E5E5"> and I've</font><font color="#CCCCCC"> been doing</font>

6
00:00:25,619 --> 00:00:33,030
<font color="#E5E5E5">trainings and presentations on Wireshark</font>

7
00:00:28,140 --> 00:00:35,130
<font color="#CCCCCC">for three</font><font color="#E5E5E5"> years at</font><font color="#CCCCCC"> same time if you've</font>

8
00:00:33,030 --> 00:00:38,809
<font color="#E5E5E5">been to any of the previous Wireshark</font>

9
00:00:35,130 --> 00:00:43,200
trainings I've done at st.<font color="#CCCCCC"> Cohn</font><font color="#E5E5E5"> then</font>

10
00:00:38,809 --> 00:00:45,180
you'll either be bored<font color="#E5E5E5"> or you'll find</font>

11
00:00:43,200 --> 00:00:49,260
out that<font color="#E5E5E5"> you didn't pay very</font><font color="#CCCCCC"> much</font>

12
00:00:45,180 --> 00:00:50,940
attention last time or you know years a

13
00:00:49,260 --> 00:00:51,809
long<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you might</font><font color="#E5E5E5"> have forgotten</font>

14
00:00:50,940 --> 00:00:55,920
everything

15
00:00:51,809 --> 00:01:01,680
so it's largely<font color="#E5E5E5"> the same stuff that I've</font>

16
00:00:55,920 --> 00:01:03,149
talked about<font color="#CCCCCC"> before and if you so</font><font color="#E5E5E5"> just a</font>

17
00:01:01,680 --> 00:01:05,430
disclaimer there<font color="#E5E5E5"> if you if you've</font>

18
00:01:03,149 --> 00:01:08,689
already listened to this talk<font color="#CCCCCC"> and you</font>

19
00:01:05,430 --> 00:01:08,689
want to step out that's fine

20
00:01:11,119 --> 00:01:16,409
if you're coming<font color="#E5E5E5"> in make sure you get</font>

21
00:01:15,060 --> 00:01:18,750
the files that<font color="#E5E5E5"> we're going to be working</font>

22
00:01:16,409 --> 00:01:21,360
<font color="#CCCCCC">with</font><font color="#E5E5E5"> you need the Wireshark program</font>

23
00:01:18,750 --> 00:01:24,360
which is available<font color="#E5E5E5"> at the first link and</font>

24
00:01:21,360 --> 00:01:27,869
you need the capture files<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> the</font>

25
00:01:24,360 --> 00:01:29,939
second<font color="#E5E5E5"> link and this gap here there's</font>

26
00:01:27,869 --> 00:01:33,360
<font color="#E5E5E5">actually a underscore</font><font color="#CCCCCC"> that you can</font>

27
00:01:29,939 --> 00:01:40,100
barely see so make sure you<font color="#E5E5E5"> include the</font>

28
00:01:33,360 --> 00:01:43,590
underscore in the URL we're<font color="#E5E5E5"> going to be</font>

29
00:01:40,100 --> 00:01:46,949
focusing on<font color="#E5E5E5"> using wireshark</font><font color="#CCCCCC"> to analyze</font>

30
00:01:43,590 --> 00:01:50,850
network traffic<font color="#E5E5E5"> not on using it to</font>

31
00:01:46,950 --> 00:01:53,130
<font color="#E5E5E5">capture network traffic so Wireshark is</font>

32
00:01:50,850 --> 00:01:56,250
capable<font color="#CCCCCC"> of both</font><font color="#E5E5E5"> capturing the traffic</font>

33
00:01:53,130 --> 00:01:58,829
and analyzing it<font color="#E5E5E5"> but when you capture</font>

34
00:01:56,250 --> 00:02:01,469
the traffic<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to worry about what</font>

35
00:01:58,829 --> 00:02:03,149
are the<font color="#E5E5E5"> legal ramifications</font><font color="#CCCCCC"> of doing</font>

36
00:02:01,469 --> 00:02:06,360
<font color="#E5E5E5">that do you actually have the</font>

37
00:02:03,149 --> 00:02:09,119
permissions you<font color="#E5E5E5"> need to capture that</font>

38
00:02:06,360 --> 00:02:12,569
<font color="#CCCCCC">traffic and</font>

39
00:02:09,119 --> 00:02:14,550
if you're using this at work or<font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font>

40
00:02:12,569 --> 00:02:17,099
<font color="#E5E5E5">own at</font><font color="#CCCCCC"> home whatever</font><font color="#E5E5E5"> just make sure you</font>

41
00:02:14,550 --> 00:02:20,550
know<font color="#E5E5E5"> what those legal ramifications are</font>

42
00:02:17,099 --> 00:02:23,640
<font color="#E5E5E5">what your company policy is in terms of</font>

43
00:02:20,550 --> 00:02:31,440
you<font color="#E5E5E5"> know what</font><font color="#CCCCCC"> traffic you can and cannot</font>

44
00:02:23,640 --> 00:02:35,279
look at we<font color="#CCCCCC"> will provide a this is an</font>

45
00:02:31,440 --> 00:02:38,099
introduction<font color="#E5E5E5"> level class or you know</font>

46
00:02:35,280 --> 00:02:39,989
presentation training<font color="#E5E5E5"> so it's not going</font>

47
00:02:38,099 --> 00:02:42,600
<font color="#E5E5E5">to give you if</font><font color="#CCCCCC"> you are if you're already</font>

48
00:02:39,989 --> 00:02:45,120
familiar with Wireshark<font color="#E5E5E5"> and you're</font>

49
00:02:42,600 --> 00:02:47,549
<font color="#E5E5E5">hoping to go deep into its other</font>

50
00:02:45,120 --> 00:02:50,640
features<font color="#CCCCCC"> this isn't the training for</font>

51
00:02:47,549 --> 00:02:52,650
<font color="#CCCCCC">that this is no meant for people</font><font color="#E5E5E5"> who</font>

52
00:02:50,640 --> 00:02:55,230
have never used<font color="#E5E5E5"> Wireshark before or who</font>

53
00:02:52,650 --> 00:02:56,610
have some<font color="#E5E5E5"> familiarity with</font><font color="#CCCCCC"> it but if you</font>

54
00:02:55,230 --> 00:02:58,280
know just<font color="#E5E5E5"> dabbled</font><font color="#CCCCCC"> with it a little bit</font>

55
00:02:56,610 --> 00:03:03,200
<font color="#CCCCCC">and</font><font color="#E5E5E5"> want to know</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit more</font>

56
00:02:58,280 --> 00:03:06,120
<font color="#E5E5E5">that's what the the target audience is</font>

57
00:03:03,200 --> 00:03:09,450
we will provide some<font color="#CCCCCC"> background</font>

58
00:03:06,120 --> 00:03:13,019
<font color="#E5E5E5">knowledge in terms of network protocols</font>

59
00:03:09,450 --> 00:03:18,030
<font color="#E5E5E5">and you know what they look like how</font>

60
00:03:13,019 --> 00:03:22,230
they're used<font color="#E5E5E5"> but again we'll consider</font>

61
00:03:18,030 --> 00:03:24,959
<font color="#E5E5E5">that required knowledge coming in so a</font>

62
00:03:22,230 --> 00:03:26,880
<font color="#E5E5E5">little bit of a review</font><font color="#CCCCCC"> and happy to</font>

63
00:03:24,959 --> 00:03:29,940
<font color="#E5E5E5">answer any</font><font color="#CCCCCC"> questions but</font><font color="#E5E5E5"> we won't</font><font color="#CCCCCC"> focus</font>

64
00:03:26,880 --> 00:03:32,609
<font color="#CCCCCC">on understanding the protocols</font><font color="#E5E5E5"> we'll</font>

65
00:03:29,940 --> 00:03:38,970
focus on using wireshark<font color="#E5E5E5"> to to look</font><font color="#CCCCCC"> at</font>

66
00:03:32,609 --> 00:03:41,040
<font color="#E5E5E5">and analyze the</font><font color="#CCCCCC"> network protocols we'll</font>

67
00:03:38,970 --> 00:03:44,069
<font color="#E5E5E5">talk about a little bit what Wireshark</font>

68
00:03:41,040 --> 00:03:46,620
is<font color="#E5E5E5"> where and how to sniff or capture</font>

69
00:03:44,069 --> 00:03:48,238
packets<font color="#CCCCCC"> I told you we're not going to be</font>

70
00:03:46,620 --> 00:03:51,870
doing<font color="#E5E5E5"> that but we will you know talk</font>

71
00:03:48,239 --> 00:03:54,510
<font color="#CCCCCC">about how you would</font><font color="#E5E5E5"> do that</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> we'll</font>

72
00:03:51,870 --> 00:03:55,799
take a look<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> interface and some of</font>

73
00:03:54,510 --> 00:03:58,290
the<font color="#E5E5E5"> features and</font><font color="#CCCCCC"> some of the</font>

74
00:03:55,799 --> 00:04:00,690
customizations<font color="#E5E5E5"> you can make we'll get</font>

75
00:03:58,290 --> 00:04:03,530
into<font color="#CCCCCC"> network protocols and actually</font>

76
00:04:00,690 --> 00:04:07,920
analyzing them with Wireshark<font color="#E5E5E5"> and then</font>

77
00:04:03,530 --> 00:04:12,680
finally some more advanced<font color="#E5E5E5"> uses as time</font>

78
00:04:07,920 --> 00:04:15,168
allows<font color="#E5E5E5"> it's going to be very hands-on so</font>

79
00:04:12,680 --> 00:04:18,500
<font color="#CCCCCC">you know if</font><font color="#E5E5E5"> we go back</font><font color="#CCCCCC"> here make sure</font>

80
00:04:15,169 --> 00:04:20,880
you have the materials you<font color="#E5E5E5"> need to</font>

81
00:04:18,500 --> 00:04:22,330
<font color="#E5E5E5">participate that's the way you'll get</font>

82
00:04:20,880 --> 00:04:24,490
<font color="#E5E5E5">the</font><font color="#CCCCCC"> most out of this</font>

83
00:04:22,330 --> 00:04:29,440
training is<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> following along</font>

84
00:04:24,490 --> 00:04:34,810
doing the activities asking<font color="#E5E5E5"> questions so</font>

85
00:04:29,440 --> 00:04:37,120
that you<font color="#CCCCCC"> maximize your</font><font color="#E5E5E5"> time here</font><font color="#CCCCCC"> I teach</font>

86
00:04:34,810 --> 00:04:40,570
so I<font color="#E5E5E5"> mentioned I'm from Weber</font><font color="#CCCCCC"> State I</font>

87
00:04:37,120 --> 00:04:43,449
teach up there in our programming

88
00:04:40,570 --> 00:04:48,099
<font color="#E5E5E5">classes our network security classes and</font>

89
00:04:43,449 --> 00:04:50,710
so I we<font color="#E5E5E5"> have a whole class dedicated to</font>

90
00:04:48,100 --> 00:04:54,340
Wireshark code<font color="#E5E5E5"> entire semester for</font><font color="#CCCCCC"> four</font>

91
00:04:50,710 --> 00:04:57,609
credit hour class and<font color="#E5E5E5"> which means in one</font>

92
00:04:54,340 --> 00:05:00,039
week<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> four hours of class</font><font color="#CCCCCC"> time</font>

93
00:04:57,610 --> 00:05:03,280
<font color="#E5E5E5">that's what we're</font><font color="#CCCCCC"> getting in this</font>

94
00:05:00,039 --> 00:05:05,800
training<font color="#E5E5E5"> and then times at times</font><font color="#CCCCCC"> fifteen</font>

95
00:05:03,280 --> 00:05:07,570
weeks<font color="#E5E5E5"> of all the stuff we could talk</font>

96
00:05:05,800 --> 00:05:08,800
about with Wireshark<font color="#CCCCCC"> so that gives you</font>

97
00:05:07,570 --> 00:05:18,030
an<font color="#E5E5E5"> idea we're just scratching</font><font color="#CCCCCC"> the</font>

98
00:05:08,800 --> 00:05:21,789
<font color="#CCCCCC">surface of what we</font><font color="#E5E5E5"> can do here okay so</font>

99
00:05:18,030 --> 00:05:25,770
let's talk<font color="#CCCCCC"> about what is Wireshark</font><font color="#E5E5E5"> how</font>

100
00:05:21,789 --> 00:05:28,090
many of you have used Wireshark before

101
00:05:25,770 --> 00:05:33,909
<font color="#E5E5E5">okay how many of you would</font><font color="#CCCCCC"> say you're</font>

102
00:05:28,090 --> 00:05:35,080
comfortable with Wireshark good<font color="#CCCCCC"> so I was</font>

103
00:05:33,910 --> 00:05:36,580
a little<font color="#CCCCCC"> bit scared at first</font><font color="#E5E5E5"> when</font>

104
00:05:35,080 --> 00:05:39,039
everyone said they used it<font color="#E5E5E5"> I was like oh</font>

105
00:05:36,580 --> 00:05:41,889
<font color="#E5E5E5">no you're all gonna you know know all</font>

106
00:05:39,039 --> 00:05:43,330
this stuff<font color="#E5E5E5"> but much I feel better that</font>

107
00:05:41,889 --> 00:05:45,280
most of you aren't<font color="#E5E5E5"> comfortable with</font>

108
00:05:43,330 --> 00:05:48,340
Wireshark you've you<font color="#CCCCCC"> used it maybe</font>

109
00:05:45,280 --> 00:05:51,119
you've<font color="#E5E5E5"> heard of it but not a</font><font color="#CCCCCC"> lot so</font>

110
00:05:48,340 --> 00:05:54,520
Wireshark is a way to look at the

111
00:05:51,120 --> 00:05:58,300
network traffic<font color="#E5E5E5"> that's flowing across</font>

112
00:05:54,520 --> 00:06:03,039
our<font color="#CCCCCC"> Ethernet cables is of going</font><font color="#E5E5E5"> across</font>

113
00:05:58,300 --> 00:06:08,020
our wireless airwaves<font color="#E5E5E5"> it's very</font>

114
00:06:03,039 --> 00:06:11,590
versatile<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the types of packets and</font>

115
00:06:08,020 --> 00:06:13,690
protocols<font color="#CCCCCC"> it can work with and what do I</font>

116
00:06:11,590 --> 00:06:16,330
mean<font color="#CCCCCC"> when I say it lets you look at</font><font color="#E5E5E5"> the</font>

117
00:06:13,690 --> 00:06:20,380
<font color="#CCCCCC">traffic it lets you see</font><font color="#E5E5E5"> the actual ones</font>

118
00:06:16,330 --> 00:06:22,570
and<font color="#CCCCCC"> zeros the</font><font color="#E5E5E5"> the bits and bytes that</font>

119
00:06:20,380 --> 00:06:26,110
<font color="#E5E5E5">are being sent when you connect to</font>

120
00:06:22,570 --> 00:06:29,289
Google<font color="#CCCCCC"> or when you open up an</font><font color="#E5E5E5"> SSH</font>

121
00:06:26,110 --> 00:06:32,590
connection or when you launch<font color="#CCCCCC"> Metasploit</font>

122
00:06:29,289 --> 00:06:34,719
attack on<font color="#E5E5E5"> another device</font><font color="#CCCCCC"> all that's</font>

123
00:06:32,590 --> 00:06:36,609
going creating traffic<font color="#E5E5E5"> across our</font>

124
00:06:34,719 --> 00:06:41,159
network<font color="#E5E5E5"> and Wireshark</font><font color="#CCCCCC"> lets</font>

125
00:06:36,610 --> 00:06:43,780
see that traffic<font color="#E5E5E5"> how many of you are</font>

126
00:06:41,159 --> 00:06:46,810
<font color="#E5E5E5">participating in the hackers Challenge</font>

127
00:06:43,780 --> 00:06:51,250
game<font color="#E5E5E5"> okay</font>

128
00:06:46,810 --> 00:06:56,050
so an example<font color="#E5E5E5"> of how Wireshark could</font>

129
00:06:51,250 --> 00:06:57,729
help<font color="#E5E5E5"> with hackers challenge I I was so</font>

130
00:06:56,050 --> 00:07:00,009
I'm playing hackers challenge and I was

131
00:06:57,729 --> 00:07:01,990
<font color="#E5E5E5">doing the I forget the name</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> it but</font>

132
00:07:00,009 --> 00:07:04,960
<font color="#CCCCCC">the one get</font><font color="#E5E5E5"> bashed</font>

133
00:07:01,990 --> 00:07:05,860
<font color="#E5E5E5">or get bashed by a pipe was the hint or</font>

134
00:07:04,960 --> 00:07:08,888
<font color="#CCCCCC">something like that</font>

135
00:07:05,860 --> 00:07:13,750
and it<font color="#E5E5E5"> has you download a bash script</font>

136
00:07:08,889 --> 00:07:17,080
<font color="#CCCCCC">and</font><font color="#E5E5E5"> and install it well so I downloaded</font>

137
00:07:13,750 --> 00:07:18,819
<font color="#E5E5E5">it</font><font color="#CCCCCC"> and if you like me</font><font color="#E5E5E5"> you know</font><font color="#CCCCCC"> just</font>

138
00:07:17,080 --> 00:07:21,460
tried to<font color="#E5E5E5"> simple download you'll notice</font>

139
00:07:18,819 --> 00:07:28,569
the script says something like<font color="#E5E5E5"> sleep</font>

140
00:07:21,460 --> 00:07:33,008
<font color="#E5E5E5">some number three and then echo hmm</font><font color="#CCCCCC"> not</font>

141
00:07:28,569 --> 00:07:34,449
here<font color="#E5E5E5"> or something like that well I</font><font color="#CCCCCC"> was</font>

142
00:07:33,009 --> 00:07:36,099
<font color="#E5E5E5">confused by that because obviously there</font>

143
00:07:34,449 --> 00:07:38,860
should<font color="#CCCCCC"> be more so what did I do</font>

144
00:07:36,099 --> 00:07:40,930
I turned to Wireshark<font color="#E5E5E5"> and I said my</font>

145
00:07:38,860 --> 00:07:43,330
program<font color="#E5E5E5"> told me this was all that</font><font color="#CCCCCC"> was</font>

146
00:07:40,930 --> 00:07:45,430
<font color="#E5E5E5">there but maybe there was something</font>

147
00:07:43,330 --> 00:07:47,620
<font color="#CCCCCC">behind the scenes</font><font color="#E5E5E5"> and when I fired up</font>

148
00:07:45,430 --> 00:07:49,719
Wireshark<font color="#E5E5E5"> and captured the traffic as I</font>

149
00:07:47,620 --> 00:07:53,229
was actually<font color="#E5E5E5"> downloading the script then</font>

150
00:07:49,719 --> 00:07:57,509
I saw<font color="#E5E5E5"> oh yeah there really is</font><font color="#CCCCCC"> more here</font>

151
00:07:53,229 --> 00:08:00,339
<font color="#E5E5E5">and you know that there's a saying in</font>

152
00:07:57,509 --> 00:08:02,650
<font color="#CCCCCC">the network world that the packets never</font>

153
00:08:00,339 --> 00:08:05,069
lie<font color="#E5E5E5"> what the actual packets on your</font>

154
00:08:02,650 --> 00:08:07,810
network art and seeing<font color="#E5E5E5"> that actual data</font>

155
00:08:05,069 --> 00:08:09,879
<font color="#E5E5E5">that's like that's your ground truth and</font>

156
00:08:07,810 --> 00:08:12,219
then what the application does with it

157
00:08:09,879 --> 00:08:18,099
or what<font color="#CCCCCC"> it says about it can sometimes</font>

158
00:08:12,219 --> 00:08:20,560
lie but the packets<font color="#E5E5E5"> never lie so you</font>

159
00:08:18,099 --> 00:08:24,069
<font color="#CCCCCC">might have a network like this</font><font color="#E5E5E5"> you know</font>

160
00:08:20,560 --> 00:08:25,839
this<font color="#E5E5E5"> is a fairly simple</font><font color="#CCCCCC"> network where</font>

161
00:08:24,069 --> 00:08:28,839
we've got a couple routers<font color="#E5E5E5"> you know a</font>

162
00:08:25,839 --> 00:08:30,400
wireless router<font color="#CCCCCC"> a couple switches with</font>

163
00:08:28,839 --> 00:08:33,039
you know<font color="#E5E5E5"> maybe some network segmentation</font>

164
00:08:30,400 --> 00:08:36,189
here<font color="#CCCCCC"> to</font><font color="#E5E5E5"> maybe these ones are the ones</font>

165
00:08:33,039 --> 00:08:38,559
<font color="#CCCCCC">that we want available</font><font color="#E5E5E5"> externally our</font>

166
00:08:36,190 --> 00:08:44,100
web server<font color="#CCCCCC"> or something</font><font color="#E5E5E5"> like that</font><font color="#CCCCCC"> and</font>

167
00:08:38,559 --> 00:08:46,510
these<font color="#E5E5E5"> are our desktop workstations</font><font color="#CCCCCC"> ok</font>

168
00:08:44,100 --> 00:08:49,450
<font color="#E5E5E5">the reason</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> have this picture is to</font>

169
00:08:46,510 --> 00:08:51,939
talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> how to capture</font>

170
00:08:49,450 --> 00:08:54,190
I said Wireshark can see the packets

171
00:08:51,940 --> 00:08:56,589
<font color="#E5E5E5">across your</font><font color="#CCCCCC"> network</font><font color="#E5E5E5"> but it can only see</font>

172
00:08:54,190 --> 00:08:59,529
packets that<font color="#E5E5E5"> are going across your</font>

173
00:08:56,589 --> 00:09:04,180
network<font color="#CCCCCC"> if you</font><font color="#E5E5E5"> are running a Wireshark</font>

174
00:08:59,529 --> 00:09:07,750
instance on this laptop here it's only

175
00:09:04,180 --> 00:09:10,029
going<font color="#E5E5E5"> to see</font><font color="#CCCCCC"> the traffic going here or</font>

176
00:09:07,750 --> 00:09:13,480
going<font color="#E5E5E5"> here it's not going to see traffic</font>

177
00:09:10,029 --> 00:09:16,300
<font color="#CCCCCC">from n 10 to</font><font color="#E5E5E5"> n 8 because it's not on</font>

178
00:09:13,480 --> 00:09:19,420
<font color="#CCCCCC">that path if</font><font color="#E5E5E5"> you're you know it's not</font>

179
00:09:16,300 --> 00:09:22,180
<font color="#E5E5E5">going to see traffic</font><font color="#CCCCCC"> from n 2 to n 8</font>

180
00:09:19,420 --> 00:09:23,849
because<font color="#CCCCCC"> it's not on that path so that's</font>

181
00:09:22,180 --> 00:09:28,029
the first<font color="#CCCCCC"> thing</font><font color="#E5E5E5"> to understand about</font>

182
00:09:23,850 --> 00:09:30,040
<font color="#E5E5E5">Wireshark is it will show</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> all of the</font>

183
00:09:28,029 --> 00:09:31,389
traffic<font color="#E5E5E5"> but</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> only shows you the</font>

184
00:09:30,040 --> 00:09:33,969
<font color="#CCCCCC">traffic that's</font><font color="#E5E5E5"> actually there the</font>

185
00:09:31,389 --> 00:09:35,500
traffic you can<font color="#E5E5E5"> actually see and so that</font>

186
00:09:33,970 --> 00:09:37,810
becomes an important consideration<font color="#CCCCCC"> when</font>

187
00:09:35,500 --> 00:09:39,430
<font color="#E5E5E5">you're troubleshooting a problem and</font>

188
00:09:37,810 --> 00:09:43,869
you're using Wireshark and you want to

189
00:09:39,430 --> 00:09:48,339
know<font color="#E5E5E5"> you know why</font><font color="#CCCCCC"> isn't my desktop able</font>

190
00:09:43,870 --> 00:09:49,959
to talk to<font color="#CCCCCC"> our</font><font color="#E5E5E5"> intranet server</font><font color="#CCCCCC"> if you're</font>

191
00:09:48,339 --> 00:09:52,480
<font color="#E5E5E5">trying to capture from someone else's</font>

192
00:09:49,959 --> 00:09:55,180
desktop it's not going to work<font color="#CCCCCC"> if you're</font>

193
00:09:52,480 --> 00:09:59,699
trying to<font color="#E5E5E5"> capture here at the router</font>

194
00:09:55,180 --> 00:10:10,420
<font color="#CCCCCC">that will give you the best picture of</font>

195
00:09:59,699 --> 00:10:12,969
you know<font color="#E5E5E5"> seeing all this traffic</font><font color="#CCCCCC"> I don't</font>

196
00:10:10,420 --> 00:10:15,370
like to talk<font color="#E5E5E5"> too long without doing</font>

197
00:10:12,970 --> 00:10:18,390
<font color="#E5E5E5">something interesting so let's actually</font>

198
00:10:15,370 --> 00:10:18,390
bring<font color="#E5E5E5"> up Wireshark</font>

199
00:10:24,899 --> 00:10:39,579
<font color="#E5E5E5">hmm so then here's Wireshark</font><font color="#CCCCCC"> it's kind</font>

200
00:10:30,369 --> 00:10:44,009
of hard to see the interface<font color="#CCCCCC"> let me use</font>

201
00:10:39,579 --> 00:10:44,008
our magnifier<font color="#E5E5E5"> up here</font>

202
00:11:04,470 --> 00:11:07,010
<font color="#E5E5E5">okay</font>

203
00:11:10,570 --> 00:11:17,020
so now if we<font color="#E5E5E5"> at the top of the screen</font>

204
00:11:13,720 --> 00:11:18,670
will be<font color="#E5E5E5"> a larger view is that large</font>

205
00:11:17,020 --> 00:11:20,290
enough probably<font color="#E5E5E5"> not I urge enough for</font>

206
00:11:18,670 --> 00:11:22,420
the very back but large<font color="#CCCCCC"> enough for</font><font color="#E5E5E5"> you</font>

207
00:11:20,290 --> 00:11:28,750
know the first half<font color="#CCCCCC"> of the room to see</font>

208
00:11:22,420 --> 00:11:41,949
these menu items<font color="#CCCCCC"> and stuff now yes okay</font>

209
00:11:28,750 --> 00:11:47,200
<font color="#CCCCCC">so you start Wireshark</font><font color="#E5E5E5"> and if you have</font>

210
00:11:41,950 --> 00:11:50,560
it configured correctly<font color="#E5E5E5"> you will see</font>

211
00:11:47,200 --> 00:11:55,200
some interfaces listed here you'll

212
00:11:50,560 --> 00:11:58,810
<font color="#E5E5E5">notice my list of interfaces is blank</font>

213
00:11:55,200 --> 00:12:01,060
normally you'd have<font color="#E5E5E5"> you know your your</font>

214
00:11:58,810 --> 00:12:03,849
<font color="#E5E5E5">LAN your local area connection your</font>

215
00:12:01,060 --> 00:12:05,500
wireless connection<font color="#CCCCCC"> maybe a USB</font>

216
00:12:03,850 --> 00:12:07,120
connection or something<font color="#CCCCCC"> you might see a</font>

217
00:12:05,500 --> 00:12:12,040
whole bunch<font color="#CCCCCC"> of interfaces</font><font color="#E5E5E5"> here if you're</font>

218
00:12:07,120 --> 00:12:13,390
running<font color="#E5E5E5"> in Linux or a Mac or Windows the</font>

219
00:12:12,040 --> 00:12:15,400
interfaces might be slightly<font color="#CCCCCC"> different</font>

220
00:12:13,390 --> 00:12:18,340
<font color="#CCCCCC">but there'll be a list of</font><font color="#E5E5E5"> the different</font>

221
00:12:15,400 --> 00:12:22,930
interfaces<font color="#E5E5E5"> that you can capture traffic</font>

222
00:12:18,340 --> 00:12:25,240
<font color="#E5E5E5">from you have to have administrative</font>

223
00:12:22,930 --> 00:12:30,359
privileges<font color="#CCCCCC"> to do that or</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to set</font>

224
00:12:25,240 --> 00:12:33,130
it<font color="#CCCCCC"> up</font><font color="#E5E5E5"> so that it can access those</font>

225
00:12:30,360 --> 00:12:34,840
without<font color="#E5E5E5"> those privileges and I haven't</font>

226
00:12:33,130 --> 00:12:37,810
<font color="#E5E5E5">done that on this machine</font><font color="#CCCCCC"> because I</font>

227
00:12:34,840 --> 00:12:41,140
don't usually capture traffic<font color="#E5E5E5"> on this</font>

228
00:12:37,810 --> 00:12:42,459
machine<font color="#E5E5E5"> so</font><font color="#CCCCCC"> it doesn't have</font><font color="#E5E5E5"> the</font>

229
00:12:41,140 --> 00:12:46,870
permissions and<font color="#E5E5E5"> it doesn't have any</font>

230
00:12:42,460 --> 00:12:48,580
interfaces it can work with like<font color="#E5E5E5"> I said</font>

231
00:12:46,870 --> 00:12:52,060
we're not<font color="#E5E5E5"> actually capturing traffic in</font>

232
00:12:48,580 --> 00:12:54,370
this training so if your list is<font color="#E5E5E5"> empty</font>

233
00:12:52,060 --> 00:12:57,369
as<font color="#CCCCCC"> well that's fine</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> have things</font>

234
00:12:54,370 --> 00:13:00,130
listed here that's fine I<font color="#E5E5E5"> want just</font>

235
00:12:57,370 --> 00:13:02,140
<font color="#CCCCCC">wanted</font><font color="#E5E5E5"> to show you this is where you</font>

236
00:13:00,130 --> 00:13:06,670
<font color="#E5E5E5">would select an interface to capture</font>

237
00:13:02,140 --> 00:13:10,870
<font color="#E5E5E5">traffic from and then there's this extra</font>

238
00:13:06,670 --> 00:13:13,870
thing<font color="#CCCCCC"> using</font><font color="#E5E5E5"> this filter so when we</font>

239
00:13:10,870 --> 00:13:15,760
<font color="#CCCCCC">captured</font><font color="#E5E5E5"> traffic sometimes we want all</font>

240
00:13:13,870 --> 00:13:18,250
<font color="#CCCCCC">of the traffic</font><font color="#E5E5E5"> and sometimes we just</font>

241
00:13:15,760 --> 00:13:22,060
<font color="#CCCCCC">want</font><font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the traffic like maybe we</font>

242
00:13:18,250 --> 00:13:23,640
just want TCP traffic<font color="#E5E5E5"> or maybe we</font><font color="#CCCCCC"> just</font>

243
00:13:22,060 --> 00:13:25,739
want<font color="#E5E5E5"> SSH traffic</font>

244
00:13:23,640 --> 00:13:30,000
or<font color="#E5E5E5"> maybe we want traffic to a specific</font>

245
00:13:25,740 --> 00:13:36,720
IP address we<font color="#CCCCCC"> can limit that in our</font>

246
00:13:30,000 --> 00:13:39,120
filter here<font color="#CCCCCC"> and the little</font><font color="#E5E5E5"> bookmark has</font>

247
00:13:36,720 --> 00:13:40,590
some that are<font color="#E5E5E5"> already built in that</font>

248
00:13:39,120 --> 00:13:43,740
Wireshark says hey these are useful

249
00:13:40,590 --> 00:13:45,180
<font color="#E5E5E5">people sometimes like them so I talked</font>

250
00:13:43,740 --> 00:13:51,780
<font color="#CCCCCC">about you know you could do it by a</font>

251
00:13:45,180 --> 00:13:58,890
specific<font color="#E5E5E5"> IP so we could say you</font><font color="#CCCCCC"> know</font>

252
00:13:51,780 --> 00:14:03,390
this one here it's an IP address<font color="#E5E5E5"> 192 dot</font>

253
00:13:58,890 --> 00:14:05,900
0 dot two dot one dot<font color="#CCCCCC"> one and when I</font>

254
00:14:03,390 --> 00:14:10,040
click<font color="#CCCCCC"> on it it sets this capture filter</font>

255
00:14:05,900 --> 00:14:13,260
of<font color="#CCCCCC"> hosts</font>

256
00:14:10,040 --> 00:14:14,910
192<font color="#E5E5E5"> dot 0 dot two dot one and if I</font>

257
00:14:13,260 --> 00:14:18,600
applied this capture filter when I was

258
00:14:14,910 --> 00:14:21,630
capturing then if the IP address<font color="#E5E5E5"> didn't</font>

259
00:14:18,600 --> 00:14:24,120
match this IP<font color="#CCCCCC"> address here it wouldn't</font>

260
00:14:21,630 --> 00:14:27,080
<font color="#E5E5E5">capture the traffic</font><font color="#CCCCCC"> and we would exclude</font>

261
00:14:24,120 --> 00:14:32,460
traffic<font color="#E5E5E5"> that wasn't destined for this</font>

262
00:14:27,080 --> 00:14:37,940
<font color="#E5E5E5">host now I don't recommend using a</font>

263
00:14:32,460 --> 00:14:41,130
capture filter unless there are legal

264
00:14:37,940 --> 00:14:44,310
reasons for doing so<font color="#CCCCCC"> so if you need</font><font color="#E5E5E5"> to</font>

265
00:14:41,130 --> 00:14:47,730
restrict<font color="#CCCCCC"> what packets you capture then</font>

266
00:14:44,310 --> 00:14:51,060
yes<font color="#E5E5E5"> use a capture filter but most of the</font>

267
00:14:47,730 --> 00:14:53,190
time it's better to just<font color="#E5E5E5"> capture all of</font>

268
00:14:51,060 --> 00:14:55,380
<font color="#CCCCCC">it that</font><font color="#E5E5E5"> way you don't</font><font color="#CCCCCC"> miss something</font>

269
00:14:53,190 --> 00:14:59,010
<font color="#E5E5E5">because</font><font color="#CCCCCC"> you might think</font><font color="#E5E5E5"> oh I've got a</font>

270
00:14:55,380 --> 00:15:02,580
problem with<font color="#E5E5E5"> SSH I'm not able to connect</font>

271
00:14:59,010 --> 00:15:04,860
<font color="#CCCCCC">to my desktop</font><font color="#E5E5E5"> at work</font><font color="#CCCCCC"> I'm gonna use</font>

272
00:15:02,580 --> 00:15:06,870
Wireshark<font color="#E5E5E5"> and I'm just going to</font><font color="#CCCCCC"> capture</font>

273
00:15:04,860 --> 00:15:09,900
the ssh traffic because that's where my

274
00:15:06,870 --> 00:15:12,750
problem<font color="#CCCCCC"> is well if you do that and you</font>

275
00:15:09,900 --> 00:15:16,410
do a capture filter so that<font color="#CCCCCC"> it's only</font>

276
00:15:12,750 --> 00:15:18,660
<font color="#E5E5E5">capturing the ssh protocol and the</font>

277
00:15:16,410 --> 00:15:22,319
problem turns out to be you couldn't

278
00:15:18,660 --> 00:15:25,620
resolve the domain name of the<font color="#CCCCCC"> system</font>

279
00:15:22,320 --> 00:15:30,780
you're<font color="#CCCCCC"> trying</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> ssh into</font><font color="#E5E5E5"> or you</font><font color="#CCCCCC"> know</font>

280
00:15:25,620 --> 00:15:33,330
there is a another system creating a

281
00:15:30,780 --> 00:15:35,819
denial of<font color="#E5E5E5"> service</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it wasn't</font><font color="#CCCCCC"> doing</font>

282
00:15:33,330 --> 00:15:37,000
<font color="#E5E5E5">you know ssh protocol it was because it</font>

283
00:15:35,820 --> 00:15:40,390
was flooding<font color="#E5E5E5"> your network</font>

284
00:15:37,000 --> 00:15:43,260
with<font color="#CCCCCC"> samba packets</font><font color="#E5E5E5"> if you excluded all</font>

285
00:15:40,390 --> 00:15:45,790
that traffic<font color="#E5E5E5"> you won't see it</font><font color="#CCCCCC"> so it's</font>

286
00:15:43,260 --> 00:15:48,280
<font color="#E5E5E5">usually better unless there's</font><font color="#CCCCCC"> legal</font>

287
00:15:45,790 --> 00:15:51,849
reasons not to to<font color="#E5E5E5"> capture all</font><font color="#CCCCCC"> of the</font>

288
00:15:48,280 --> 00:15:53,530
traffic<font color="#CCCCCC"> and then go back and limit what</font>

289
00:15:51,850 --> 00:15:55,000
traffic you look at because<font color="#E5E5E5"> you don't</font>

290
00:15:53,530 --> 00:15:56,680
necessarily<font color="#E5E5E5"> want to look at all of it</font>

291
00:15:55,000 --> 00:16:12,340
but<font color="#E5E5E5"> you want to have it all available in</font>

292
00:15:56,680 --> 00:16:20,650
case<font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to look at it</font><font color="#E5E5E5"> okay so let</font>

293
00:16:12,340 --> 00:16:23,650
me<font color="#CCCCCC"> show you some tricks</font><font color="#E5E5E5"> here when we're</font>

294
00:16:20,650 --> 00:16:28,290
using Wireshark if you look down in<font color="#CCCCCC"> this</font>

295
00:16:23,650 --> 00:16:29,829
<font color="#E5E5E5">corner</font><font color="#CCCCCC"> so the bottom right corner and</font>

296
00:16:28,290 --> 00:16:32,290
I've got it

297
00:16:29,830 --> 00:16:36,820
you know big up here<font color="#E5E5E5"> but it's actually</font>

298
00:16:32,290 --> 00:16:39,550
down<font color="#E5E5E5"> here it says profile and in this</font>

299
00:16:36,820 --> 00:16:41,589
case profile default and if you<font color="#CCCCCC"> click on</font>

300
00:16:39,550 --> 00:16:44,130
that<font color="#E5E5E5"> profile there's some other options</font>

301
00:16:41,589 --> 00:16:48,280
like<font color="#E5E5E5"> Bluetooth and classic is what I</font>

302
00:16:44,130 --> 00:16:52,720
have currently available<font color="#E5E5E5"> profiles can</font>

303
00:16:48,280 --> 00:16:55,569
help you manage<font color="#CCCCCC"> your interface</font><font color="#E5E5E5"> so if you</font>

304
00:16:52,720 --> 00:16:58,290
have if you<font color="#E5E5E5"> start using Wireshark a lot</font>

305
00:16:55,570 --> 00:17:02,070
<font color="#E5E5E5">you'll find that certain customizations</font>

306
00:16:58,290 --> 00:17:05,159
<font color="#E5E5E5">work well for</font><font color="#CCCCCC"> certain situations</font><font color="#E5E5E5"> like</font>

307
00:17:02,070 --> 00:17:08,230
you know<font color="#E5E5E5"> maybe I want to</font><font color="#CCCCCC"> have a set of</font>

308
00:17:05,160 --> 00:17:12,490
<font color="#E5E5E5">capture packet filters</font><font color="#CCCCCC"> available when</font>

309
00:17:08,230 --> 00:17:15,579
I'm working with FTP traffic<font color="#E5E5E5"> but I don't</font>

310
00:17:12,490 --> 00:17:18,540
need<font color="#E5E5E5"> those same filters available</font><font color="#CCCCCC"> when</font>

311
00:17:15,579 --> 00:17:21,639
I'm<font color="#E5E5E5"> working with HTTP traffic and</font>

312
00:17:18,540 --> 00:17:25,659
profiles is the way to do that you can

313
00:17:21,640 --> 00:17:27,250
customize<font color="#CCCCCC"> your interface</font><font color="#E5E5E5"> for the you</font>

314
00:17:25,660 --> 00:17:35,050
know<font color="#E5E5E5"> different</font><font color="#CCCCCC"> test that you're working</font>

315
00:17:27,250 --> 00:17:36,730
on if instead of clicking on<font color="#E5E5E5"> the profile</font>

316
00:17:35,050 --> 00:17:39,370
if we<font color="#E5E5E5"> right click on it then we get a</font>

317
00:17:36,730 --> 00:17:41,740
<font color="#E5E5E5">slightly different menu where we can</font>

318
00:17:39,370 --> 00:17:44,709
<font color="#E5E5E5">manage profiles or we can create a new</font>

319
00:17:41,740 --> 00:17:48,470
profile directly<font color="#E5E5E5"> I'm going to click</font>

320
00:17:44,710 --> 00:17:54,049
manage<font color="#E5E5E5"> profile here and it</font>

321
00:17:48,470 --> 00:17:56,630
brings up a new<font color="#CCCCCC"> window with the list of</font>

322
00:17:54,049 --> 00:18:00,789
<font color="#E5E5E5">profiles some buttons down here</font><font color="#CCCCCC"> to add</font>

323
00:17:56,630 --> 00:18:04,730
or<font color="#E5E5E5"> remove a profile or copy a profile</font>

324
00:18:00,789 --> 00:18:10,340
and I'm just going<font color="#CCCCCC"> to add one and let's</font>

325
00:18:04,730 --> 00:18:12,500
call<font color="#E5E5E5"> it demo</font><font color="#CCCCCC"> and I like this</font><font color="#E5E5E5"> especially</font>

326
00:18:10,340 --> 00:18:14,990
when I'm<font color="#CCCCCC"> presenting because</font><font color="#E5E5E5"> if I work in</font>

327
00:18:12,500 --> 00:18:17,059
my demo profile and make changes to<font color="#E5E5E5"> how</font>

328
00:18:14,990 --> 00:18:19,549
the<font color="#E5E5E5"> interfaces is configured it won't</font>

329
00:18:17,059 --> 00:18:21,470
affect any<font color="#E5E5E5"> of these other profiles in</font>

330
00:18:19,549 --> 00:18:23,360
and so I can you know<font color="#E5E5E5"> completely mess</font>

331
00:18:21,470 --> 00:18:25,580
things up and break them<font color="#E5E5E5"> and at</font><font color="#CCCCCC"> the end</font>

332
00:18:23,360 --> 00:18:28,428
of the day<font color="#E5E5E5"> just throw away my demo</font>

333
00:18:25,580 --> 00:18:33,980
profile and go back to my default

334
00:18:28,429 --> 00:18:36,710
<font color="#E5E5E5">settings so take a minute create a</font>

335
00:18:33,980 --> 00:18:40,659
profile<font color="#E5E5E5"> at least one maybe you want to</font>

336
00:18:36,710 --> 00:18:40,659
<font color="#E5E5E5">call it you know demo or training</font><font color="#CCCCCC"> and</font>

337
00:18:43,030 --> 00:18:51,289
once you have created<font color="#E5E5E5"> it select it click</font>

338
00:18:47,480 --> 00:18:53,000
<font color="#E5E5E5">OK</font><font color="#CCCCCC"> so that you're</font><font color="#E5E5E5"> actually using that</font>

339
00:18:51,289 --> 00:18:55,220
profile<font color="#E5E5E5"> and you should see it down in</font>

340
00:18:53,000 --> 00:19:00,020
the bottom<font color="#E5E5E5"> right corner with the profile</font>

341
00:18:55,220 --> 00:19:08,870
name questions on how to<font color="#E5E5E5"> create</font><font color="#CCCCCC"> the</font>

342
00:19:00,020 --> 00:19:10,940
<font color="#E5E5E5">profile or why we create a profile</font><font color="#CCCCCC"> ok</font>

343
00:19:08,870 --> 00:19:18,289
<font color="#CCCCCC">does anyone not have their profile</font>

344
00:19:10,940 --> 00:19:25,850
created<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> alright</font>

345
00:19:18,289 --> 00:19:31,549
so most people<font color="#E5E5E5"> are ready let's clear</font>

346
00:19:25,850 --> 00:19:35,240
that<font color="#E5E5E5"> out hopefully you've had a chance</font>

347
00:19:31,549 --> 00:19:40,460
<font color="#CCCCCC">to download</font><font color="#E5E5E5"> the files now let's go</font><font color="#CCCCCC"> ahead</font>

348
00:19:35,240 --> 00:19:46,659
and<font color="#CCCCCC"> open a capture file so we go file</font>

349
00:19:40,460 --> 00:19:46,659
<font color="#E5E5E5">open and wherever you downloaded</font><font color="#CCCCCC"> it to</font>

350
00:19:55,770 --> 00:20:01,210
and the one we want<font color="#E5E5E5"> to open if you</font>

351
00:19:58,840 --> 00:20:04,570
downloaded<font color="#E5E5E5"> the entire zip file it's in</font>

352
00:20:01,210 --> 00:20:09,399
the basic folder and<font color="#E5E5E5"> it's the baseline</font>

353
00:20:04,570 --> 00:20:12,158
dot<font color="#E5E5E5"> pcap ng file okay so in the</font>

354
00:20:09,399 --> 00:20:15,449
downloaded capture zip file the unzip it

355
00:20:12,159 --> 00:20:18,100
in the<font color="#CCCCCC"> basic</font><font color="#E5E5E5"> folder there's a baseline</font>

356
00:20:15,450 --> 00:20:20,919
<font color="#E5E5E5">pcap ng that's the one that we're going</font>

357
00:20:18,100 --> 00:20:33,428
<font color="#E5E5E5">to be working with for 90% of this</font>

358
00:20:20,919 --> 00:20:35,980
<font color="#E5E5E5">training when you open it up</font><font color="#CCCCCC"> now our</font>

359
00:20:33,429 --> 00:20:40,539
interface changes<font color="#E5E5E5"> we no longer have the</font>

360
00:20:35,980 --> 00:20:42,340
list of devices<font color="#CCCCCC"> to capture</font><font color="#E5E5E5"> from you can</font>

361
00:20:40,539 --> 00:20:51,970
keep my mouse in a spot<font color="#CCCCCC"> where it's</font>

362
00:20:42,340 --> 00:20:56,080
<font color="#CCCCCC">useful instead we have this list</font><font color="#E5E5E5"> of IP</font>

363
00:20:51,970 --> 00:20:59,679
addresses<font color="#CCCCCC"> timestamps protocols some</font>

364
00:20:56,080 --> 00:21:02,740
information these are is a summary of

365
00:20:59,679 --> 00:21:05,470
the packets that<font color="#CCCCCC"> we've captured one</font><font color="#E5E5E5"> per</font>

366
00:21:02,740 --> 00:21:10,360
line<font color="#CCCCCC"> and then underneath that is a</font>

367
00:21:05,470 --> 00:21:13,120
detailed view<font color="#E5E5E5"> of those packets and as I</font>

368
00:21:10,360 --> 00:21:15,750
change<font color="#E5E5E5"> which packet is selected this</font>

369
00:21:13,120 --> 00:21:19,149
detailed view in the middle section<font color="#CCCCCC"> here</font>

370
00:21:15,750 --> 00:21:21,850
<font color="#E5E5E5">will change</font><font color="#CCCCCC"> so right now the</font><font color="#E5E5E5"> first</font>

371
00:21:19,149 --> 00:21:28,629
<font color="#CCCCCC">packets selected</font><font color="#E5E5E5"> if I select the second</font>

372
00:21:21,850 --> 00:21:31,750
packet let's see one that's a little<font color="#E5E5E5"> bit</font>

373
00:21:28,630 --> 00:21:33,730
<font color="#E5E5E5">completely different there we go so I</font>

374
00:21:31,750 --> 00:21:38,500
select the fifth packet<font color="#E5E5E5"> and these</font>

375
00:21:33,730 --> 00:21:41,679
details change<font color="#E5E5E5"> so both the middle and</font>

376
00:21:38,500 --> 00:21:45,429
the<font color="#CCCCCC"> bottom section are a per packet</font><font color="#E5E5E5"> view</font>

377
00:21:41,679 --> 00:21:48,520
<font color="#CCCCCC">and it's</font><font color="#E5E5E5"> showing</font><font color="#CCCCCC"> the fifth packet what</font>

378
00:21:45,429 --> 00:21:54,190
are its details<font color="#CCCCCC"> and what are the actual</font>

379
00:21:48,520 --> 00:21:57,029
bytes<font color="#E5E5E5"> of that packet let's fix one thing</font>

380
00:21:54,190 --> 00:21:57,029
<font color="#E5E5E5">here</font>

381
00:22:01,820 --> 00:22:10,110
<font color="#E5E5E5">okay so I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> keep my magnifying</font>

382
00:22:06,990 --> 00:22:13,620
<font color="#CCCCCC">glass</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> here because</font><font color="#E5E5E5"> the file menu</font>

383
00:22:10,110 --> 00:22:17,669
sizes<font color="#E5E5E5"> don't change but</font><font color="#CCCCCC"> I can increase my</font>

384
00:22:13,620 --> 00:22:19,100
font size<font color="#E5E5E5"> of my display so that most of</font>

385
00:22:17,670 --> 00:22:24,060
the time you don't have<font color="#E5E5E5"> to look at the</font>

386
00:22:19,100 --> 00:22:27,360
magnifier<font color="#CCCCCC"> ctrl+ will increase the font</font>

387
00:22:24,060 --> 00:22:27,750
size<font color="#E5E5E5"> and you know there's other ways</font><font color="#CCCCCC"> to</font>

388
00:22:27,360 --> 00:22:31,020
do it

389
00:22:27,750 --> 00:22:35,480
<font color="#E5E5E5">but that's how I usually do it that's a</font>

390
00:22:31,020 --> 00:22:35,480
profile setting<font color="#E5E5E5"> if I switch my profile</font>

391
00:22:36,500 --> 00:22:46,800
back<font color="#CCCCCC"> to default it switches</font><font color="#E5E5E5"> the display</font>

392
00:22:42,480 --> 00:22:49,110
<font color="#E5E5E5">back to unzoom so you you know like I</font>

393
00:22:46,800 --> 00:22:51,810
said<font color="#E5E5E5"> create</font><font color="#CCCCCC"> a profile and then start</font>

394
00:22:49,110 --> 00:22:53,699
customizing it<font color="#E5E5E5"> and if you like those</font>

395
00:22:51,810 --> 00:22:55,679
customizations<font color="#CCCCCC"> keep it around if you</font>

396
00:22:53,700 --> 00:23:04,640
<font color="#E5E5E5">don't like those</font><font color="#CCCCCC"> customizations</font><font color="#E5E5E5"> throw it</font>

397
00:22:55,680 --> 00:23:04,640
away<font color="#CCCCCC"> create a new profile okay</font>

398
00:23:08,980 --> 00:23:11,980
<font color="#E5E5E5">whoops</font>

399
00:23:15,630 --> 00:23:22,990
so these three windows<font color="#CCCCCC"> under our</font><font color="#E5E5E5"> view</font>

400
00:23:21,160 --> 00:23:25,030
are the three that we just looked at<font color="#E5E5E5"> the</font>

401
00:23:22,990 --> 00:23:27,040
packet<font color="#E5E5E5"> list the packet details and then</font>

402
00:23:25,030 --> 00:23:30,550
I<font color="#E5E5E5"> accidentally just check</font><font color="#CCCCCC"> uncheck this</font>

403
00:23:27,040 --> 00:23:38,950
<font color="#E5E5E5">packet bytes so it went away now</font><font color="#CCCCCC"> we have</font>

404
00:23:30,550 --> 00:23:43,659
<font color="#CCCCCC">my model</font><font color="#E5E5E5"> three back</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> always go I like</font>

405
00:23:38,950 --> 00:23:46,930
<font color="#E5E5E5">to have all three available the list of</font>

406
00:23:43,660 --> 00:23:48,850
packets<font color="#CCCCCC"> a detailed view</font><font color="#E5E5E5"> of what the</font>

407
00:23:46,930 --> 00:23:52,120
packets are and then the actual bytes<font color="#CCCCCC"> if</font>

408
00:23:48,850 --> 00:23:56,429
you don't need one of<font color="#E5E5E5"> them get rid of it</font>

409
00:23:52,120 --> 00:23:56,429
I like to<font color="#CCCCCC"> keep them</font><font color="#E5E5E5"> around</font>

410
00:24:07,990 --> 00:24:17,260
up here at the<font color="#E5E5E5"> top it's got this bar</font>

411
00:24:12,220 --> 00:24:25,000
<font color="#CCCCCC">that says apply a display filter yeah go</font>

412
00:24:17,260 --> 00:24:28,720
<font color="#CCCCCC">ahead yes</font><font color="#E5E5E5"> so I used the bytes often and</font>

413
00:24:25,000 --> 00:24:31,690
the bytes will show you this<font color="#E5E5E5"> is the</font>

414
00:24:28,720 --> 00:24:32,590
<font color="#CCCCCC">actual</font><font color="#E5E5E5"> data of the packet</font><font color="#CCCCCC"> and so for</font>

415
00:24:31,690 --> 00:24:36,760
<font color="#E5E5E5">example you know I talked about</font>

416
00:24:32,590 --> 00:24:40,360
downloading<font color="#CCCCCC"> the</font><font color="#E5E5E5"> the bash install script</font>

417
00:24:36,760 --> 00:24:42,550
<font color="#E5E5E5">and what happens is when I looked at</font>

418
00:24:40,360 --> 00:24:46,600
<font color="#E5E5E5">those packets and looked at the bytes</font>

419
00:24:42,550 --> 00:24:50,320
<font color="#CCCCCC">they were very different</font><font color="#E5E5E5"> than what the</font>

420
00:24:46,600 --> 00:24:54,399
<font color="#E5E5E5">final file ended up being and so you</font>

421
00:24:50,320 --> 00:24:57,428
know that was an example<font color="#E5E5E5"> of the binary</font>

422
00:24:54,400 --> 00:24:59,320
data<font color="#E5E5E5"> or interpreted as</font><font color="#CCCCCC"> ascii was</font>

423
00:24:57,429 --> 00:25:01,179
actually very<font color="#CCCCCC"> useful in terms</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> showing</font>

424
00:24:59,320 --> 00:25:03,790
me hey you know what the final<font color="#E5E5E5"> product</font>

425
00:25:01,179 --> 00:25:06,600
<font color="#E5E5E5">isn't matching what was originally being</font>

426
00:25:03,790 --> 00:25:06,600
sent

427
00:25:14,190 --> 00:25:18,060
so we talked<font color="#E5E5E5"> about that you</font><font color="#CCCCCC"> could use a</font>

428
00:25:16,200 --> 00:25:20,670
capture filter and I said<font color="#CCCCCC"> don't do that</font>

429
00:25:18,060 --> 00:25:23,010
<font color="#CCCCCC">in</font><font color="#E5E5E5"> general but</font><font color="#CCCCCC"> you can do a display</font>

430
00:25:20,670 --> 00:25:24,780
filter and right here is<font color="#CCCCCC"> where you do</font>

431
00:25:23,010 --> 00:25:27,420
the<font color="#E5E5E5"> display filter in this bar at the</font>

432
00:25:24,780 --> 00:25:29,940
top and I highly<font color="#E5E5E5"> recommend</font><font color="#CCCCCC"> you use</font>

433
00:25:27,420 --> 00:25:32,580
display filters<font color="#E5E5E5"> they're going to be very</font>

434
00:25:29,940 --> 00:25:35,460
<font color="#E5E5E5">helpful in</font><font color="#CCCCCC"> finding what you're</font><font color="#E5E5E5"> looking</font>

435
00:25:32,580 --> 00:25:37,980
<font color="#CCCCCC">for and they're very</font><font color="#E5E5E5"> powerful</font><font color="#CCCCCC"> there</font>

436
00:25:35,460 --> 00:25:40,710
there's way more that you<font color="#E5E5E5"> can do with</font><font color="#CCCCCC"> a</font>

437
00:25:37,980 --> 00:25:43,350
display filter then we can you know talk

438
00:25:40,710 --> 00:25:48,660
<font color="#CCCCCC">about in four hours so let</font><font color="#E5E5E5"> me just show</font>

439
00:25:43,350 --> 00:25:51,300
you a<font color="#CCCCCC"> few tricks</font><font color="#E5E5E5"> the first is the</font>

440
00:25:48,660 --> 00:25:56,130
built-in display filters so<font color="#E5E5E5"> you click</font>

441
00:25:51,300 --> 00:25:59,760
the little bookmark<font color="#E5E5E5"> looking icon right</font>

442
00:25:56,130 --> 00:26:03,210
next<font color="#CCCCCC"> to the display filter bar and it's</font>

443
00:25:59,760 --> 00:26:04,860
got some built-ins<font color="#CCCCCC"> just like we saw with</font>

444
00:26:03,210 --> 00:26:07,500
<font color="#CCCCCC">the capture filters and they're</font><font color="#E5E5E5"> very</font>

445
00:26:04,860 --> 00:26:09,209
similar in<font color="#E5E5E5"> terms</font><font color="#CCCCCC"> of what's built-in</font><font color="#E5E5E5"> if</font>

446
00:26:07,500 --> 00:26:12,120
you want to look<font color="#E5E5E5"> at a</font><font color="#CCCCCC"> specific IP</font>

447
00:26:09,210 --> 00:26:16,230
address you<font color="#E5E5E5"> can do that if you want to</font>

448
00:26:12,120 --> 00:26:18,409
only you<font color="#E5E5E5"> want to exclude</font><font color="#CCCCCC"> ARP traffic you</font>

449
00:26:16,230 --> 00:26:21,360
can<font color="#CCCCCC"> do</font><font color="#E5E5E5"> that</font>

450
00:26:18,410 --> 00:26:24,480
the syntax you'll notice is different

451
00:26:21,360 --> 00:26:27,240
between capture filters and display

452
00:26:24,480 --> 00:26:29,430
filters it's another good<font color="#CCCCCC"> reason not to</font>

453
00:26:27,240 --> 00:26:31,590
<font color="#CCCCCC">use capture filters</font><font color="#E5E5E5"> because then you</font>

454
00:26:29,430 --> 00:26:36,890
<font color="#E5E5E5">don't have to learn two different</font>

455
00:26:31,590 --> 00:26:36,889
filtering<font color="#E5E5E5"> syntaxes you just focus on the</font>

456
00:26:37,850 --> 00:26:45,469
analysis filters and ignore the capture

457
00:26:41,580 --> 00:26:51,240
filters<font color="#E5E5E5"> so if I want to</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> see traffic</font>

458
00:26:45,470 --> 00:26:55,050
that's<font color="#E5E5E5"> to or from</font><font color="#CCCCCC"> 190 2.0 2.1 i put in</font>

459
00:26:51,240 --> 00:26:57,210
this filter<font color="#E5E5E5"> IP dot adder double equal</font>

460
00:26:55,050 --> 00:26:59,070
sign<font color="#CCCCCC"> the IP</font><font color="#E5E5E5"> address I'm looking for and</font>

461
00:26:57,210 --> 00:27:02,250
you'll notice<font color="#E5E5E5"> what that did to my</font>

462
00:26:59,070 --> 00:27:06,659
display they're all gone<font color="#CCCCCC"> there are no</font>

463
00:27:02,250 --> 00:27:13,940
packets in this capture file that have

464
00:27:06,660 --> 00:27:20,259
that IP<font color="#CCCCCC"> address so look</font>

465
00:27:13,940 --> 00:27:20,259
you clear that out and get one that

466
00:27:26,160 --> 00:27:34,600
so if I expand out these columns so I

467
00:27:29,440 --> 00:27:37,090
can see the<font color="#E5E5E5"> faux IP address</font><font color="#CCCCCC"> I can see</font>

468
00:27:34,600 --> 00:27:38,889
the<font color="#E5E5E5"> first couple packets</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> one ninety</font>

469
00:27:37,090 --> 00:27:40,629
two<font color="#CCCCCC"> dot one sixty eight dot 3 dot 112</font>

470
00:27:38,890 --> 00:27:43,600
and some of them are one ninety two<font color="#CCCCCC"> dot</font>

471
00:27:40,630 --> 00:27:48,520
one<font color="#CCCCCC"> six eight dot 3.1 and if I scroll</font>

472
00:27:43,600 --> 00:27:51,129
down<font color="#E5E5E5"> through all these packets</font><font color="#CCCCCC"> I can see</font>

473
00:27:48,520 --> 00:27:54,040
there's lots of other IP<font color="#E5E5E5"> addresses as</font>

474
00:27:51,130 --> 00:27:56,830
<font color="#E5E5E5">well well if I'm troubleshooting a</font>

475
00:27:54,040 --> 00:27:58,930
problem and I know<font color="#E5E5E5"> or I think the</font>

476
00:27:56,830 --> 00:28:01,419
problems related to<font color="#E5E5E5"> a certain IP address</font>

477
00:27:58,930 --> 00:28:05,250
<font color="#CCCCCC">I can get rid of all this extraneous</font>

478
00:28:01,420 --> 00:28:12,340
stuff say I only care about IP address

479
00:28:05,250 --> 00:28:21,070
<font color="#E5E5E5">equal to one ninety two dot</font><font color="#CCCCCC"> one six</font>

480
00:28:12,340 --> 00:28:23,409
eight<font color="#CCCCCC"> three</font><font color="#E5E5E5"> dot one twelve and now any</font>

481
00:28:21,070 --> 00:28:25,409
packet that doesn't have that IP address

482
00:28:23,410 --> 00:28:30,940
<font color="#CCCCCC">as either a</font><font color="#E5E5E5"> source or destination</font>

483
00:28:25,410 --> 00:28:31,900
address is gone from<font color="#CCCCCC"> my view it's</font><font color="#E5E5E5"> not</font>

484
00:28:30,940 --> 00:28:33,580
gone for good

485
00:28:31,900 --> 00:28:35,590
we can always go<font color="#CCCCCC"> back if we find out the</font>

486
00:28:33,580 --> 00:28:37,360
problem<font color="#E5E5E5"> was somewhere</font><font color="#CCCCCC"> else</font><font color="#E5E5E5"> but we don't</font>

487
00:28:35,590 --> 00:28:45,209
have to<font color="#CCCCCC"> focus on it when we're trying</font><font color="#E5E5E5"> to</font>

488
00:28:37,360 --> 00:28:55,419
pick<font color="#E5E5E5"> out this needle in the haystack yep</font>

489
00:28:45,210 --> 00:28:58,840
it's<font color="#E5E5E5"> that better you bet so that's great</font>

490
00:28:55,420 --> 00:29:00,930
there's<font color="#E5E5E5"> these built-in filters that can</font>

491
00:28:58,840 --> 00:29:06,429
get you started<font color="#CCCCCC"> but there's only</font><font color="#E5E5E5"> like</font>

492
00:29:00,930 --> 00:29:08,140
what<font color="#E5E5E5"> ten filters listed there maybe</font><font color="#CCCCCC"> oh a</font>

493
00:29:06,430 --> 00:29:10,780
few<font color="#E5E5E5"> more at the top that we're</font><font color="#CCCCCC"> getting</font>

494
00:29:08,140 --> 00:29:17,140
cut<font color="#E5E5E5"> off by my magnifying glass but not a</font>

495
00:29:10,780 --> 00:29:23,290
<font color="#E5E5E5">ton is it let's actually do this one for</font>

496
00:29:17,140 --> 00:29:25,620
<font color="#E5E5E5">a minute except I can't I'll do it</font>

497
00:29:23,290 --> 00:29:25,620
directly

498
00:29:28,870 --> 00:29:34,219
so we could do a<font color="#E5E5E5"> filter based on a</font>

499
00:29:31,580 --> 00:29:39,290
protocol<font color="#CCCCCC"> were interested</font><font color="#E5E5E5"> in because they</font>

500
00:29:34,220 --> 00:29:40,670
will only<font color="#E5E5E5"> show me the HTTP traffic and</font>

501
00:29:39,290 --> 00:29:42,740
<font color="#E5E5E5">that's nice that got rid of all those</font>

502
00:29:40,670 --> 00:29:45,020
<font color="#E5E5E5">DNS packets it got rid</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> all the ARP</font>

503
00:29:42,740 --> 00:29:49,610
packets everything else and<font color="#CCCCCC"> is now</font><font color="#E5E5E5"> just</font>

504
00:29:45,020 --> 00:29:55,970
<font color="#E5E5E5">going to show me the web traffic the</font>

505
00:29:49,610 --> 00:29:58,610
HTTP traffic<font color="#E5E5E5"> okay but what if you want</font>

506
00:29:55,970 --> 00:30:04,340
<font color="#E5E5E5">more than this you know this list so I</font>

507
00:29:58,610 --> 00:30:11,560
said is fairly limiting if you click

508
00:30:04,340 --> 00:30:17,510
over<font color="#CCCCCC"> on the</font><font color="#E5E5E5"> right hand side there's this</font>

509
00:30:11,560 --> 00:30:26,530
expression button and so when you<font color="#E5E5E5"> click</font>

510
00:30:17,510 --> 00:30:34,180
on<font color="#CCCCCC"> that oops</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> comes it brings up a</font>

511
00:30:26,530 --> 00:30:38,149
<font color="#CCCCCC">where's this wireless display filter</font>

512
00:30:34,180 --> 00:30:41,510
expression box<font color="#E5E5E5"> that has all of</font><font color="#CCCCCC"> the</font>

513
00:30:38,150 --> 00:30:43,340
possible filters you can<font color="#CCCCCC"> apply so before</font>

514
00:30:41,510 --> 00:30:45,800
it<font color="#E5E5E5"> was a very limiting list now it's</font>

515
00:30:43,340 --> 00:30:49,790
almost too much<font color="#CCCCCC"> of a list</font><font color="#E5E5E5"> too much</font>

516
00:30:45,800 --> 00:30:55,790
information<font color="#E5E5E5"> but any possible filter you</font>

517
00:30:49,790 --> 00:30:58,580
can find the right pieces<font color="#E5E5E5"> here and the</font>

518
00:30:55,790 --> 00:31:00,950
cool thing<font color="#CCCCCC"> about Wireshark</font><font color="#E5E5E5"> is every</font>

519
00:30:58,580 --> 00:31:03,110
single<font color="#CCCCCC"> fields every single piece</font><font color="#E5E5E5"> of</font>

520
00:31:00,950 --> 00:31:08,240
<font color="#E5E5E5">information it knows about you can</font>

521
00:31:03,110 --> 00:31:20,169
filter on so if you are<font color="#CCCCCC"> dealing with for</font>

522
00:31:08,240 --> 00:31:20,170
<font color="#CCCCCC">example let's</font><font color="#E5E5E5"> go with HTTP</font><font color="#CCCCCC"> it's common</font>

523
00:31:21,190 --> 00:31:28,880
if you're<font color="#CCCCCC"> dealing with HTTP traffic</font><font color="#E5E5E5"> and</font>

524
00:31:24,920 --> 00:31:31,430
you want to create a<font color="#E5E5E5"> filter</font><font color="#CCCCCC"> you can find</font>

525
00:31:28,880 --> 00:31:33,350
the protocol and then you can see all of

526
00:31:31,430 --> 00:31:38,030
<font color="#E5E5E5">the different</font><font color="#CCCCCC"> things that it knows about</font>

527
00:31:33,350 --> 00:31:40,428
about HTTP<font color="#E5E5E5"> and it's you know all the</font>

528
00:31:38,030 --> 00:31:44,499
different headers<font color="#CCCCCC"> that HTTP provides</font>

529
00:31:40,429 --> 00:31:46,419
they accept header<font color="#E5E5E5"> accept-encoding</font>

530
00:31:44,499 --> 00:31:49,460
<font color="#E5E5E5">different forms of authentication</font>

531
00:31:46,419 --> 00:31:51,799
whether it's doing chunking<font color="#E5E5E5"> and all of</font>

532
00:31:49,460 --> 00:31:55,539
those things<font color="#E5E5E5"> you could then create a</font>

533
00:31:51,799 --> 00:31:55,539
<font color="#E5E5E5">filter on and you could say well show me</font>

534
00:31:59,259 --> 00:32:11,350
something like<font color="#E5E5E5"> HDPE off basic</font><font color="#CCCCCC"> okay so</font>

535
00:32:06,259 --> 00:32:15,440
I'm doing<font color="#E5E5E5"> this HTTP dot auth basic</font>

536
00:32:11,350 --> 00:32:21,529
<font color="#E5E5E5">credentials</font><font color="#CCCCCC"> this is a not</font><font color="#E5E5E5"> so great way</font>

537
00:32:15,440 --> 00:32:23,869
to do logins over HTTP and<font color="#CCCCCC"> so I select</font>

538
00:32:21,529 --> 00:32:28,399
<font color="#CCCCCC">that and then I</font><font color="#E5E5E5"> can choose over here</font>

539
00:32:23,869 --> 00:32:30,740
what I want that field to be do<font color="#E5E5E5"> I just</font>

540
00:32:28,399 --> 00:32:32,479
want it<font color="#E5E5E5"> to be present</font><font color="#CCCCCC"> do I want it</font><font color="#E5E5E5"> to</font>

541
00:32:30,740 --> 00:32:34,700
have a<font color="#E5E5E5"> certain value that's equal to</font>

542
00:32:32,480 --> 00:32:36,799
<font color="#E5E5E5">something</font><font color="#CCCCCC"> do I want it to not be</font><font color="#E5E5E5"> equal</font>

543
00:32:34,700 --> 00:32:38,990
<font color="#CCCCCC">to something less than greater than we</font>

544
00:32:36,799 --> 00:32:42,019
have all these different<font color="#E5E5E5"> relationships</font>

545
00:32:38,990 --> 00:32:44,929
we can<font color="#E5E5E5"> apply to this field</font><font color="#CCCCCC"> and in this</font>

546
00:32:42,019 --> 00:32:47,690
case I probably<font color="#E5E5E5"> just want to know if</font>

547
00:32:44,929 --> 00:32:51,019
<font color="#E5E5E5">it's present</font><font color="#CCCCCC"> are they</font><font color="#E5E5E5"> using an HTTP off</font>

548
00:32:47,690 --> 00:32:54,350
basic header and<font color="#E5E5E5"> I want to see those</font>

549
00:32:51,019 --> 00:32:57,679
packets<font color="#E5E5E5"> and so</font><font color="#CCCCCC"> I'm gonna do is</font><font color="#E5E5E5"> president</font>

550
00:32:54,350 --> 00:33:01,340
if I wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> check for</font><font color="#E5E5E5"> a specific</font>

551
00:32:57,679 --> 00:33:04,009
value<font color="#E5E5E5"> I could do this you know equals</font>

552
00:33:01,340 --> 00:33:07,779
and then down here<font color="#CCCCCC"> I'd put the value</font>

553
00:33:04,009 --> 00:33:07,779
that I'm interested in

554
00:33:08,139 --> 00:33:15,649
as I click around and<font color="#E5E5E5"> change the field</font>

555
00:33:13,519 --> 00:33:20,360
and the relationship you'll notice<font color="#CCCCCC"> down</font>

556
00:33:15,649 --> 00:33:22,610
here<font color="#CCCCCC"> it's changing the filter and let me</font>

557
00:33:20,360 --> 00:33:27,049
put my<font color="#E5E5E5"> mouse</font><font color="#CCCCCC"> down there and so down at</font>

558
00:33:22,610 --> 00:33:30,549
the<font color="#CCCCCC"> bottom of</font><font color="#E5E5E5"> the window as I selected</font>

559
00:33:27,049 --> 00:33:35,029
the HTTP off basic it added it to my

560
00:33:30,549 --> 00:33:38,389
filter<font color="#E5E5E5"> if I click the equal sign instead</font>

561
00:33:35,029 --> 00:33:40,220
<font color="#E5E5E5">of is present it adds the equal sign and</font>

562
00:33:38,389 --> 00:33:42,320
<font color="#E5E5E5">you'll notice it</font><font color="#CCCCCC"> changes the</font><font color="#E5E5E5"> coloring to</font>

563
00:33:40,220 --> 00:33:45,289
red<font color="#E5E5E5"> because it's not currently a valid</font>

564
00:33:42,320 --> 00:33:46,070
filter<font color="#E5E5E5"> it's missing what is it supposed</font>

565
00:33:45,289 --> 00:33:50,389
<font color="#E5E5E5">to</font><font color="#CCCCCC"> be equal to</font>

566
00:33:46,070 --> 00:33:53,790
<font color="#CCCCCC">it needs a value and this isn't a real</font>

567
00:33:50,389 --> 00:33:57,240
value that<font color="#CCCCCC"> would actually come up</font><font color="#E5E5E5"> but</font>

568
00:33:53,790 --> 00:34:00,250
so we put in some value over here<font color="#CCCCCC"> and</font>

569
00:33:57,240 --> 00:34:03,100
down at the<font color="#CCCCCC"> bottom it's changed it</font><font color="#E5E5E5"> to</font>

570
00:34:00,250 --> 00:34:05,410
back to being green<font color="#CCCCCC"> green doesn't mean</font>

571
00:34:03,100 --> 00:34:07,360
it's a good filter<font color="#E5E5E5"> that it's actually</font>

572
00:34:05,410 --> 00:34:12,070
going to<font color="#CCCCCC"> do what you want</font><font color="#E5E5E5"> it just means</font>

573
00:34:07,360 --> 00:34:13,870
it's valid that<font color="#E5E5E5"> the</font><font color="#CCCCCC"> syntax is correct so</font>

574
00:34:12,070 --> 00:34:15,490
whether it's actually going to<font color="#E5E5E5"> give you</font>

575
00:34:13,870 --> 00:34:19,199
what<font color="#CCCCCC"> you want that's a different thing</font>

576
00:34:15,489 --> 00:34:28,719
<font color="#E5E5E5">but is it at</font><font color="#CCCCCC"> least the correct syntax</font>

577
00:34:19,199 --> 00:34:36,460
<font color="#E5E5E5">okay go ahead yeah so how did</font><font color="#CCCCCC"> we even</font>

578
00:34:28,719 --> 00:34:42,129
<font color="#E5E5E5">get here there is a button over here on</font>

579
00:34:36,460 --> 00:34:45,100
the right hand<font color="#CCCCCC"> side next to</font><font color="#E5E5E5"> our bar</font>

580
00:34:42,130 --> 00:34:50,429
called<font color="#CCCCCC"> expression</font><font color="#E5E5E5"> and you click that</font><font color="#CCCCCC"> and</font>

581
00:34:45,100 --> 00:34:54,489
it opens<font color="#CCCCCC"> up</font><font color="#E5E5E5"> this expression builder yep</font>

582
00:34:50,429 --> 00:35:02,160
and so let<font color="#E5E5E5"> me add back</font><font color="#CCCCCC"> in what did we</font>

583
00:34:54,489 --> 00:35:05,709
<font color="#E5E5E5">have we had maybe you don't know exactly</font>

584
00:35:02,160 --> 00:35:08,740
<font color="#E5E5E5">what it is</font><font color="#CCCCCC"> that you're trying to the</font>

585
00:35:05,710 --> 00:35:11,820
exact name of<font color="#E5E5E5"> the field you can search</font>

586
00:35:08,740 --> 00:35:17,589
and it'll show<font color="#E5E5E5"> you all fields that have</font>

587
00:35:11,820 --> 00:35:19,600
that text<font color="#E5E5E5"> and so I can search for HTTP</font>

588
00:35:17,590 --> 00:35:23,140
<font color="#E5E5E5">that</font><font color="#CCCCCC"> way I don't have</font><font color="#E5E5E5"> to scroll</font><font color="#CCCCCC"> through</font>

589
00:35:19,600 --> 00:35:27,310
and find HTTP and reselect what I had

590
00:35:23,140 --> 00:35:31,420
before<font color="#CCCCCC"> I want to find packets with the</font>

591
00:35:27,310 --> 00:35:33,930
HTTP off basic<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> once you have it built</font>

592
00:35:31,420 --> 00:35:39,430
you click<font color="#E5E5E5"> OK</font>

593
00:35:33,930 --> 00:35:43,620
and it<font color="#E5E5E5"> will add</font><font color="#CCCCCC"> it to your expression</font>

594
00:35:39,430 --> 00:35:46,330
which probably isn't<font color="#E5E5E5"> what you</font><font color="#CCCCCC"> wanted and</font>

595
00:35:43,620 --> 00:35:54,210
so in my case<font color="#E5E5E5"> let's get my mouse over</font>

596
00:35:46,330 --> 00:35:56,860
there so we can<font color="#CCCCCC"> see it it kept the old</font>

597
00:35:54,210 --> 00:36:00,370
HTTP<font color="#CCCCCC"> that I had there before and it just</font>

598
00:35:56,860 --> 00:36:02,320
added this<font color="#E5E5E5"> to it that's just</font><font color="#CCCCCC"> something</font>

599
00:36:00,370 --> 00:36:04,210
<font color="#E5E5E5">to</font><font color="#CCCCCC"> keep in mind</font><font color="#E5E5E5"> when you do the</font>

600
00:36:02,320 --> 00:36:05,519
expression builder<font color="#CCCCCC"> maybe you want</font><font color="#E5E5E5"> to</font>

601
00:36:04,210 --> 00:36:08,459
clear<font color="#CCCCCC"> it out may</font>

602
00:36:05,519 --> 00:36:10,678
you really did want<font color="#E5E5E5"> to add it and it's</font>

603
00:36:08,459 --> 00:36:13,828
the<font color="#E5E5E5"> expression builder we'll just add it</font>

604
00:36:10,679 --> 00:36:17,329
to whatever's<font color="#E5E5E5"> there so I can just get</font>

605
00:36:13,829 --> 00:36:20,749
rid of what I didn't need you have<font color="#E5E5E5"> to</font>

606
00:36:17,329 --> 00:36:24,539
<font color="#E5E5E5">apply it so I've got it</font><font color="#CCCCCC"> all typed there</font>

607
00:36:20,749 --> 00:36:26,519
but it's a turned green<font color="#E5E5E5"> it hasn't</font>

608
00:36:24,539 --> 00:36:32,309
actually done anything until I you there

609
00:36:26,519 --> 00:36:34,529
click the<font color="#CCCCCC"> little arrow or hit</font><font color="#E5E5E5"> enter</font><font color="#CCCCCC"> so</font>

610
00:36:32,309 --> 00:36:36,809
the<font color="#CCCCCC"> arrow is</font><font color="#E5E5E5"> over here on</font><font color="#CCCCCC"> the right</font><font color="#E5E5E5"> if I</font>

611
00:36:34,529 --> 00:36:39,089
hit<font color="#E5E5E5"> enter that does the same</font><font color="#CCCCCC"> thing as</font>

612
00:36:36,809 --> 00:36:42,390
the arrow and<font color="#CCCCCC"> that</font><font color="#E5E5E5"> will actually then</font>

613
00:36:39,089 --> 00:36:46,649
<font color="#E5E5E5">apply the filter and this is nice this</font>

614
00:36:42,390 --> 00:36:49,859
is<font color="#CCCCCC"> good sign we say there was no HTTP</font>

615
00:36:46,649 --> 00:36:52,709
off basic and I guess<font color="#E5E5E5"> it depends on what</font>

616
00:36:49,859 --> 00:36:54,390
<font color="#E5E5E5">side of things you're on if it's a good</font>

617
00:36:52,709 --> 00:36:56,459
sign<font color="#CCCCCC"> or not</font><font color="#E5E5E5"> if you're</font><font color="#CCCCCC"> on the security</font>

618
00:36:54,390 --> 00:36:58,499
side of things<font color="#E5E5E5"> and you're verifying your</font>

619
00:36:56,459 --> 00:37:00,839
network you're saying yes<font color="#E5E5E5"> this is a good</font>

620
00:36:58,499 --> 00:37:02,308
<font color="#CCCCCC">thing my users</font><font color="#E5E5E5"> aren't using auth basic</font>

621
00:37:00,839 --> 00:37:04,709
and giving away<font color="#CCCCCC"> their credentials</font><font color="#E5E5E5"> if</font>

622
00:37:02,309 --> 00:37:07,049
you're on the attacking<font color="#E5E5E5"> side this is</font><font color="#CCCCCC"> a</font>

623
00:37:04,709 --> 00:37:09,989
bad sign<font color="#CCCCCC"> because now you</font><font color="#E5E5E5"> have to work</font>

624
00:37:07,049 --> 00:37:21,149
harder<font color="#E5E5E5"> to get the users credentials</font>

625
00:37:09,989 --> 00:37:23,389
<font color="#E5E5E5">right so I think I have a slide</font><font color="#CCCCCC"> yeah</font>

626
00:37:21,149 --> 00:37:23,388
<font color="#CCCCCC">it's</font>

627
00:37:31,820 --> 00:37:36,560
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> mm-hmm</font>

628
00:37:34,820 --> 00:37:39,520
need to<font color="#E5E5E5"> get rid</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> magnifying</font><font color="#CCCCCC"> glass</font>

629
00:37:36,560 --> 00:37:39,520
when<font color="#E5E5E5"> we're on the sides</font>

630
00:37:50,570 --> 00:37:58,560
<font color="#E5E5E5">okay so we haven't gone over</font><font color="#CCCCCC"> all this</font>

631
00:37:55,200 --> 00:38:00,600
and this is actually by design<font color="#E5E5E5"> is first</font>

632
00:37:58,560 --> 00:38:03,799
I want<font color="#CCCCCC"> you to struggle with</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> try</font>

633
00:38:00,600 --> 00:38:06,029
and<font color="#E5E5E5"> get</font><font color="#CCCCCC"> it and</font><font color="#E5E5E5"> then we'll talk about how</font>

634
00:38:03,800 --> 00:38:09,150
<font color="#CCCCCC">you can get it and how we</font><font color="#E5E5E5"> can do these</font>

635
00:38:06,030 --> 00:38:12,780
things<font color="#CCCCCC"> easier</font><font color="#E5E5E5"> than maybe what you've</font>

636
00:38:09,150 --> 00:38:15,990
done so far<font color="#E5E5E5"> so make sure you've got</font><font color="#CCCCCC"> the</font>

637
00:38:12,780 --> 00:38:20,370
baseline pcap file<font color="#E5E5E5"> and there should</font><font color="#CCCCCC"> be</font>

638
00:38:15,990 --> 00:38:23,339
at<font color="#CCCCCC"> least one machine</font><font color="#E5E5E5"> who we've captured</font>

639
00:38:20,370 --> 00:38:27,569
traffic from<font color="#E5E5E5"> that is acting as an</font><font color="#CCCCCC"> ssh</font>

640
00:38:23,340 --> 00:38:29,840
server<font color="#E5E5E5"> it is accepting connections</font><font color="#CCCCCC"> over</font>

641
00:38:27,570 --> 00:38:33,510
<font color="#E5E5E5">SSH</font>

642
00:38:29,840 --> 00:38:39,060
there's several UDP protocols that<font color="#CCCCCC"> are</font>

643
00:38:33,510 --> 00:38:41,220
showing<font color="#E5E5E5"> up in this capture file this MAC</font>

644
00:38:39,060 --> 00:38:43,350
address shows up<font color="#E5E5E5"> somewhere in the the</font>

645
00:38:41,220 --> 00:38:45,149
capture file and is associated<font color="#CCCCCC"> with an</font>

646
00:38:43,350 --> 00:38:48,630
IP address<font color="#CCCCCC"> what is</font><font color="#E5E5E5"> that</font>

647
00:38:45,150 --> 00:38:52,070
see if you can answer these questions

648
00:38:48,630 --> 00:38:55,470
<font color="#CCCCCC">okay and</font><font color="#E5E5E5"> I'll give you a hint is that</font>

649
00:38:52,070 --> 00:38:58,370
<font color="#E5E5E5">filters might make your life easier in</font>

650
00:38:55,470 --> 00:38:58,370
answering<font color="#E5E5E5"> these questions</font>

651
00:39:06,270 --> 00:39:17,720
yes<font color="#E5E5E5"> so let's</font><font color="#CCCCCC"> see let's put a little</font>

652
00:39:59,729 --> 00:40:07,749
someone put it on slack<font color="#E5E5E5"> okay and I will</font>

653
00:40:05,920 --> 00:40:13,329
<font color="#E5E5E5">I'll just keep this down here at the</font>

654
00:40:07,749 --> 00:40:16,738
bottom<font color="#E5E5E5"> for now with the URL so it should</font>

655
00:40:13,329 --> 00:40:16,739
<font color="#E5E5E5">be aggress</font>

656
00:41:04,569 --> 00:41:17,079
<font color="#E5E5E5">okay so we'll just leave that</font><font color="#CCCCCC"> down there</font>

657
00:41:09,489 --> 00:41:19,059
at<font color="#CCCCCC"> the</font><font color="#E5E5E5"> bottom if you need I'm going to</font>

658
00:41:17,079 --> 00:41:21,309
use this time to<font color="#CCCCCC"> wander around and see</font>

659
00:41:19,059 --> 00:41:24,069
how you guys<font color="#CCCCCC"> are doing with</font><font color="#E5E5E5"> this if you</font>

660
00:41:21,309 --> 00:41:26,679
have questions you<font color="#CCCCCC"> can shout them out or</font>

661
00:41:24,069 --> 00:41:30,029
raise your<font color="#CCCCCC"> hand and let's see if we can</font>

662
00:41:26,679 --> 00:41:30,029
answer<font color="#E5E5E5"> these questions</font>

663
00:41:44,550 --> 00:41:59,520
so<font color="#E5E5E5"> they're an ad now downloads</font><font color="#CCCCCC"> slash the</font>

664
00:41:54,130 --> 00:41:59,520
sink on 2017 there's four captures

665
00:42:32,880 --> 00:42:34,940
you

666
00:42:53,440 --> 00:43:00,600
can you turn my mic off when I'm

667
00:42:55,660 --> 00:43:00,600
<font color="#E5E5E5">wandering around down here</font><font color="#CCCCCC"> Thanks</font>

668
00:49:52,530 --> 00:49:57,660
okay so how many people<font color="#E5E5E5"> want more time</font>

669
00:49:58,020 --> 00:50:07,900
<font color="#CCCCCC">alright so most people are ready to talk</font>

670
00:50:00,460 --> 00:50:09,700
<font color="#E5E5E5">about this you're gonna have to help me</font>

671
00:50:07,900 --> 00:50:12,600
remember<font color="#E5E5E5"> what my three questions</font><font color="#CCCCCC"> are as</font>

672
00:50:09,700 --> 00:50:12,600
we look at this

673
00:50:25,959 --> 00:50:32,180
<font color="#E5E5E5">okay so first of all we asked about the</font>

674
00:50:29,150 --> 00:50:35,799
<font color="#E5E5E5">SSH server what was the IP address of</font>

675
00:50:32,180 --> 00:50:35,799
<font color="#E5E5E5">the SSH server or something</font><font color="#CCCCCC"> like that</font>

676
00:50:39,430 --> 00:51:00,019
yeah okay<font color="#CCCCCC"> okay 3.1 okay so you know</font>

677
00:50:55,299 --> 00:51:03,019
here's that IP address<font color="#E5E5E5"> 192 168 3.1</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is</font>

678
00:51:00,019 --> 00:51:05,598
this one here tell<font color="#CCCCCC"> me that this is a SSH</font>

679
00:51:03,019 --> 00:51:15,348
server<font color="#E5E5E5"> how did you guys figure</font><font color="#CCCCCC"> out that</font>

680
00:51:05,599 --> 00:51:27,009
this one's the SSH server okay so what

681
00:51:15,349 --> 00:51:36,619
filter okay so we can do a<font color="#E5E5E5"> TCP port</font>

682
00:51:27,009 --> 00:51:39,289
equals 22 and this works<font color="#E5E5E5"> because</font><font color="#CCCCCC"> usually</font>

683
00:51:36,619 --> 00:51:43,219
or that the default or standard port for

684
00:51:39,289 --> 00:51:45,440
SSH<font color="#E5E5E5"> is port 22 and so we can say well</font>

685
00:51:43,219 --> 00:51:45,949
show me<font color="#E5E5E5"> all the traffic where this is</font>

686
00:51:45,440 --> 00:51:49,809
true

687
00:51:45,949 --> 00:51:49,809
let me bring<font color="#E5E5E5"> back my magnifier</font>

688
00:51:56,750 --> 00:52:03,620
<font color="#E5E5E5">okay so</font><font color="#CCCCCC"> TCP port equals 22</font><font color="#E5E5E5"> will show me</font>

689
00:52:00,500 --> 00:52:06,710
<font color="#E5E5E5">not necessarily all</font><font color="#CCCCCC"> of my ssh traffic</font>

690
00:52:03,620 --> 00:52:09,250
<font color="#E5E5E5">but it'll at least show me</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the ssh</font>

691
00:52:06,710 --> 00:52:13,790
traffic that's actually<font color="#E5E5E5"> using port 22</font>

692
00:52:09,250 --> 00:52:19,150
<font color="#E5E5E5">and now</font><font color="#CCCCCC"> i've got you know some IP IP</font>

693
00:52:13,790 --> 00:52:25,520
<font color="#E5E5E5">addresses there make sure you've got</font>

694
00:52:19,150 --> 00:52:32,240
<font color="#E5E5E5">double equal signs</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> is it showing up</font>

695
00:52:25,520 --> 00:52:37,759
green make sure you do<font color="#CCCCCC"> enter and apply</font>

696
00:52:32,240 --> 00:52:39,680
the filter<font color="#CCCCCC"> i've had that and i've also</font>

697
00:52:37,760 --> 00:52:43,790
had it depending<font color="#E5E5E5"> on what version of</font>

698
00:52:39,680 --> 00:52:45,460
Wireshark<font color="#CCCCCC"> you're using i know some</font><font color="#E5E5E5"> of</font>

699
00:52:43,790 --> 00:52:48,470
the versions<font color="#CCCCCC"> had some bugs where</font>

700
00:52:45,460 --> 00:52:50,240
depending<font color="#E5E5E5"> on how you cleared</font><font color="#CCCCCC"> the</font>

701
00:52:48,470 --> 00:52:53,930
previous filter it would actually<font color="#E5E5E5"> lock</font>

702
00:52:50,240 --> 00:52:58,310
up and so<font color="#CCCCCC"> that might be what you're</font>

703
00:52:53,930 --> 00:53:00,710
running<font color="#E5E5E5"> into so but we're not done with</font>

704
00:52:58,310 --> 00:53:03,529
the question yet<font color="#E5E5E5"> we've found some IP</font>

705
00:53:00,710 --> 00:53:05,120
addresses associated with<font color="#E5E5E5"> ssh but we</font>

706
00:53:03,530 --> 00:53:07,880
need to finish the question which one of

707
00:53:05,120 --> 00:53:10,750
these<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the server so how do</font><font color="#E5E5E5"> we go how</font>

708
00:53:07,880 --> 00:53:10,750
do we figure that<font color="#CCCCCC"> out</font>

709
00:53:18,180 --> 00:53:27,750
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> yeah so if you look over here</font><font color="#E5E5E5"> in</font>

710
00:53:22,200 --> 00:53:30,450
the info<font color="#E5E5E5"> it's showing us the syn syn ack</font>

711
00:53:27,750 --> 00:53:32,549
ack which if you're<font color="#E5E5E5"> familiar with TCP</font>

712
00:53:30,450 --> 00:53:34,140
connections you'll know<font color="#E5E5E5"> and if you're</font>

713
00:53:32,549 --> 00:53:34,799
not that's<font color="#E5E5E5"> okay we'll talk about</font><font color="#CCCCCC"> it for</font>

714
00:53:34,140 --> 00:53:37,770
<font color="#CCCCCC">a minute</font>

715
00:53:34,799 --> 00:53:40,309
<font color="#E5E5E5">anytime you establish a connection it</font>

716
00:53:37,770 --> 00:53:44,069
goes through this<font color="#E5E5E5"> three-step process of</font>

717
00:53:40,309 --> 00:53:47,609
the client<font color="#CCCCCC"> the one that's establishing</font>

718
00:53:44,069 --> 00:53:50,788
the connection<font color="#E5E5E5"> sends a syn packet the</font>

719
00:53:47,609 --> 00:53:54,420
server responds<font color="#E5E5E5"> back</font><font color="#CCCCCC"> with a syn ACK</font>

720
00:53:50,789 --> 00:53:57,900
packet<font color="#E5E5E5"> and the client responds with a</font>

721
00:53:54,420 --> 00:54:00,359
final<font color="#E5E5E5"> AK and that's true of all TCP</font>

722
00:53:57,900 --> 00:54:02,160
connections<font color="#CCCCCC"> decide initiating the</font>

723
00:54:00,359 --> 00:54:05,970
connection<font color="#E5E5E5"> which we all normally call</font>

724
00:54:02,160 --> 00:54:09,259
<font color="#CCCCCC">the client is the you know sentence thus</font>

725
00:54:05,970 --> 00:54:13,649
in the other side syn<font color="#E5E5E5"> ACK</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a final AK</font>

726
00:54:09,260 --> 00:54:18,690
so using that we<font color="#CCCCCC"> can say okay well the</font>

727
00:54:13,650 --> 00:54:21,420
source IP<font color="#CCCCCC"> address the 3.34 is the one</font>

728
00:54:18,690 --> 00:54:25,559
that's initiating the connection<font color="#E5E5E5"> it's</font>

729
00:54:21,420 --> 00:54:28,380
the client it's sending<font color="#E5E5E5"> the packet</font><font color="#CCCCCC"> to</font>

730
00:54:25,559 --> 00:54:32,400
the 3.1<font color="#E5E5E5"> it's sending</font><font color="#CCCCCC"> it to the server</font>

731
00:54:28,380 --> 00:54:35,460
so our destination 3.1 this must be<font color="#CCCCCC"> our</font>

732
00:54:32,400 --> 00:54:37,319
server IP address<font color="#CCCCCC"> now that's not the</font>

733
00:54:35,460 --> 00:54:39,150
only<font color="#E5E5E5"> way</font><font color="#CCCCCC"> you could have solved</font><font color="#E5E5E5"> this</font>

734
00:54:37,319 --> 00:54:44,009
problem<font color="#E5E5E5"> who solved this problem a</font>

735
00:54:39,150 --> 00:54:47,900
different<font color="#CCCCCC"> way yeah go ahead here</font><font color="#E5E5E5"> okay</font>

736
00:54:44,010 --> 00:54:51,960
<font color="#E5E5E5">good I was hoping someone would do this</font>

737
00:54:47,900 --> 00:54:56,220
<font color="#E5E5E5">so you might instead of doing TCP port 2</font>

738
00:54:51,960 --> 00:54:59,520
equals 22<font color="#E5E5E5"> you might try a filter</font><font color="#CCCCCC"> ssh</font>

739
00:54:56,220 --> 00:55:01,680
<font color="#E5E5E5">sort of like we did with HTTP where you</font>

740
00:54:59,520 --> 00:55:05,910
just put in the<font color="#E5E5E5"> protocol and say you</font>

741
00:55:01,680 --> 00:55:07,500
know show me<font color="#CCCCCC"> everything that's ssh now</font>

742
00:55:05,910 --> 00:55:12,029
there's some slight<font color="#CCCCCC"> differences here</font>

743
00:55:07,500 --> 00:55:15,900
you'll notice<font color="#E5E5E5"> our</font><font color="#CCCCCC"> TCP connection packets</font>

744
00:55:12,029 --> 00:55:22,950
<font color="#E5E5E5">the handshake is gone it's not part of</font>

745
00:55:15,900 --> 00:55:26,069
that<font color="#E5E5E5"> filter which</font><font color="#CCCCCC"> is okay and if we look</font>

746
00:55:22,950 --> 00:55:29,549
at the info here we can make the same

747
00:55:26,069 --> 00:55:31,799
type<font color="#CCCCCC"> of</font><font color="#E5E5E5"> analysis our server is sending</font>

748
00:55:29,549 --> 00:55:32,520
message our<font color="#CCCCCC"> clients sending message</font><font color="#E5E5E5"> well</font>

749
00:55:31,799 --> 00:55:36,030
which one's the

750
00:55:32,520 --> 00:55:40,350
source<font color="#E5E5E5"> in this case the 3.1 so our</font>

751
00:55:36,030 --> 00:55:43,040
servers are 3.1 address our 34 is the

752
00:55:40,350 --> 00:55:47,460
<font color="#E5E5E5">source on this client packet it's the</font>

753
00:55:43,040 --> 00:55:49,529
client now<font color="#CCCCCC"> okay so one of</font><font color="#E5E5E5"> the</font>

754
00:55:47,460 --> 00:55:53,640
<font color="#E5E5E5">differences is</font><font color="#CCCCCC"> you don't get the</font><font color="#E5E5E5"> TCP</font>

755
00:55:49,530 --> 00:55:58,860
handshake<font color="#E5E5E5"> and closing connection packets</font>

756
00:55:53,640 --> 00:56:02,009
if you<font color="#E5E5E5"> filter by SSH how about if</font>

757
00:55:58,860 --> 00:56:05,480
they're<font color="#CCCCCC"> using a different</font><font color="#E5E5E5"> SSH port if</font>

758
00:56:02,010 --> 00:56:09,540
they're using<font color="#CCCCCC"> you know port 2 2 2 2</font><font color="#E5E5E5"> is</font>

759
00:56:05,480 --> 00:56:11,490
Wireshark<font color="#E5E5E5"> gonna magically know and look</font>

760
00:56:09,540 --> 00:56:13,800
at does it look at the packets and

761
00:56:11,490 --> 00:56:16,799
understand<font color="#CCCCCC"> oh this looks</font><font color="#E5E5E5"> like an SSH</font>

762
00:56:13,800 --> 00:56:22,620
packet<font color="#E5E5E5"> or is it</font><font color="#CCCCCC"> just using</font><font color="#E5E5E5"> the port to</font>

763
00:56:16,800 --> 00:56:24,980
do this filtering does anyone know so it

764
00:56:22,620 --> 00:56:27,720
<font color="#E5E5E5">actually just uses the port number so</font>

765
00:56:24,980 --> 00:56:30,740
<font color="#E5E5E5">keep that in</font><font color="#CCCCCC"> mind</font><font color="#E5E5E5"> if you're applying an</font>

766
00:56:27,720 --> 00:56:34,649
<font color="#CCCCCC">SSH filter and expecting</font><font color="#E5E5E5"> it to capture</font>

767
00:56:30,740 --> 00:56:37,950
<font color="#E5E5E5">traffic to your SSH server that's using</font>

768
00:56:34,650 --> 00:56:45,180
a non-standard port like 2<font color="#E5E5E5"> 2 2 2</font><font color="#CCCCCC"> okay</font>

769
00:56:37,950 --> 00:56:49,100
<font color="#E5E5E5">it's not</font><font color="#CCCCCC"> gonna find</font><font color="#E5E5E5"> that traffic</font><font color="#CCCCCC"> let's</font>

770
00:56:45,180 --> 00:56:49,100
see if we can

771
00:56:54,450 --> 00:57:03,220
so if down<font color="#E5E5E5"> here in the list there's this</font>

772
00:56:59,230 --> 00:57:06,850
SSH protocol part of the packet<font color="#E5E5E5"> if you</font>

773
00:57:03,220 --> 00:57:11,200
<font color="#CCCCCC">right-click on it</font><font color="#E5E5E5"> you can go to protocol</font>

774
00:57:06,850 --> 00:57:13,630
preferences<font color="#CCCCCC"> and it lists the</font><font color="#E5E5E5"> preferences</font>

775
00:57:11,200 --> 00:57:19,839
right<font color="#E5E5E5"> here or you</font><font color="#CCCCCC"> can click</font><font color="#E5E5E5"> on open</font>

776
00:57:13,630 --> 00:57:22,180
SSH preferences here and<font color="#CCCCCC"> there's</font><font color="#E5E5E5"> some</font>

777
00:57:19,840 --> 00:57:31,030
<font color="#E5E5E5">settings you can configure with your SSH</font>

778
00:57:22,180 --> 00:57:34,140
protocol so we<font color="#E5E5E5"> get this nice window that</font>

779
00:57:31,030 --> 00:57:34,140
I can't see half of it

780
00:57:47,770 --> 00:57:56,230
and you'll see it has port numbers

781
00:57:50,890 --> 00:58:01,589
listed and the port numbers listed are

782
00:57:56,230 --> 00:58:01,590
<font color="#CCCCCC">twenty-two and two nine four one eight</font>

783
00:58:03,600 --> 00:58:09,670
okay so if you<font color="#E5E5E5"> know that you run your</font>

784
00:58:06,790 --> 00:58:11,560
<font color="#E5E5E5">SSH server on some other port or you</font>

785
00:58:09,670 --> 00:58:13,630
know the server<font color="#E5E5E5"> you're connecting to is</font>

786
00:58:11,560 --> 00:58:17,020
using<font color="#CCCCCC"> a different port and you want</font>

787
00:58:13,630 --> 00:58:19,660
Wireshark to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to filter when you</font>

788
00:58:17,020 --> 00:58:21,790
type in an<font color="#E5E5E5"> SSH for your filter</font><font color="#CCCCCC"> all you</font>

789
00:58:19,660 --> 00:58:23,890
have<font color="#E5E5E5"> to do is add it to the list here</font>

790
00:58:21,790 --> 00:58:30,910
and then it will start<font color="#CCCCCC"> interpreting</font>

791
00:58:23,890 --> 00:58:33,940
those as SSH so if I want you know to to

792
00:58:30,910 --> 00:58:37,029
to to<font color="#E5E5E5"> the example gave you to be treated</font>

793
00:58:33,940 --> 00:58:40,380
as<font color="#E5E5E5"> an ssh traffic</font><font color="#CCCCCC"> I just add it</font><font color="#E5E5E5"> to the</font>

794
00:58:37,030 --> 00:58:40,380
list of<font color="#E5E5E5"> ports</font>

795
00:58:52,810 --> 00:58:58,310
[Music]

796
00:58:55,030 --> 00:59:03,820
yes well<font color="#CCCCCC"> depends so wireshark has it in</font>

797
00:58:58,310 --> 00:59:03,820
there<font color="#CCCCCC"> for a reason</font><font color="#E5E5E5"> of and I'm not oh</font>

798
00:59:10,000 --> 00:59:13,000
okay

799
00:59:18,510 --> 00:59:25,190
yes<font color="#E5E5E5"> yes okay eyes</font><font color="#CCCCCC"> I hadn't seen in my</font>

800
00:59:22,920 --> 00:59:29,880
packet that that was the client

801
00:59:25,190 --> 00:59:34,880
<font color="#CCCCCC">ephemeral port that</font><font color="#E5E5E5"> was being used yeah</font>

802
00:59:29,880 --> 00:59:38,990
well thank you for verifying<font color="#CCCCCC"> that so yes</font>

803
00:59:34,880 --> 00:59:42,270
<font color="#E5E5E5">this will now provide a better list of</font>

804
00:59:38,990 --> 00:59:44,939
<font color="#CCCCCC">twenty two and</font><font color="#E5E5E5"> two two two two</font><font color="#CCCCCC"> will be</font>

805
00:59:42,270 --> 00:59:46,920
recognized as the SSH ports and you

806
00:59:44,940 --> 00:59:50,160
<font color="#E5E5E5">could like I said add any to your this</font>

807
00:59:46,920 --> 00:59:59,609
that you need for<font color="#E5E5E5"> the traffic you're</font>

808
00:59:50,160 --> 01:00:02,399
working with profile<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> this is pretty</font>

809
00:59:59,609 --> 01:00:05,790
much<font color="#E5E5E5"> every single setting in Wireshark</font>

810
01:00:02,400 --> 01:00:08,130
is<font color="#E5E5E5"> profile specific so if I change it</font>

811
01:00:05,790 --> 01:00:09,720
here and<font color="#E5E5E5"> then I switch profiles it'll go</font>

812
01:00:08,130 --> 01:00:11,840
back<font color="#CCCCCC"> to its default</font><font color="#E5E5E5"> and we can even</font>

813
01:00:09,720 --> 01:00:15,680
<font color="#E5E5E5">verify that and so let's go ahead and</font>

814
01:00:11,840 --> 01:00:15,680
<font color="#E5E5E5">click OK and</font>

815
01:00:36,790 --> 01:00:43,029
so instead of<font color="#E5E5E5"> right clicking on the</font>

816
01:00:39,540 --> 01:00:47,110
Profoto call you can<font color="#E5E5E5"> also go to</font><font color="#CCCCCC"> your</font>

817
01:00:43,030 --> 01:00:49,110
edit preferences<font color="#E5E5E5"> and find protocols in</font>

818
01:00:47,110 --> 01:01:01,060
<font color="#E5E5E5">the list and find</font><font color="#CCCCCC"> the protocol</font><font color="#E5E5E5"> that way</font>

819
01:00:49,110 --> 01:01:04,990
it's more scrolling<font color="#E5E5E5"> each so it's I've</font>

820
01:01:01,060 --> 01:01:08,680
got my<font color="#E5E5E5"> two here they did save</font>

821
01:01:04,990 --> 01:01:18,009
successfully<font color="#E5E5E5"> and now</font><font color="#CCCCCC"> if I switch my</font>

822
01:01:08,680 --> 01:01:27,089
profile<font color="#E5E5E5"> back to the default if I check</font>

823
01:01:18,010 --> 01:01:27,090
my preferences under<font color="#CCCCCC"> my protocols</font>

824
01:01:32,500 --> 01:01:35,500
<font color="#CCCCCC">is</font>

825
01:01:37,799 --> 01:01:58,670
<font color="#CCCCCC">H</font><font color="#E5E5E5"> it's back to the original values okay</font>

826
01:02:00,559 --> 01:02:07,829
it's odd that that<font color="#E5E5E5"> would be the happen</font>

827
01:02:05,099 --> 01:02:10,679
to be the ephemeral port<font color="#CCCCCC"> oh it wasn't</font>

828
01:02:07,829 --> 01:02:12,329
<font color="#E5E5E5">even</font><font color="#CCCCCC"> a fragment report</font><font color="#E5E5E5"> okay yeah so I</font>

829
01:02:10,679 --> 01:02:14,069
that's<font color="#E5E5E5"> what I was thinking is that</font><font color="#CCCCCC"> it</font>

830
01:02:12,329 --> 01:02:18,420
was<font color="#CCCCCC"> probably in the</font><font color="#E5E5E5"> list for a reason</font>

831
01:02:14,069 --> 01:02:20,549
<font color="#CCCCCC">it's it's not the</font><font color="#E5E5E5"> standard SSH port but</font>

832
01:02:18,420 --> 01:02:26,939
it<font color="#E5E5E5"> you know apparently would be one that</font>

833
01:02:20,549 --> 01:02:33,199
is<font color="#CCCCCC"> commonly used okay</font><font color="#E5E5E5"> so yeah switching</font>

834
01:02:26,939 --> 01:02:37,129
profiles<font color="#E5E5E5"> changes these preferences and</font>

835
01:02:33,199 --> 01:02:50,699
I'm going back just<font color="#CCCCCC"> one second</font>

836
01:02:37,130 --> 01:02:53,189
okay okay that's<font color="#CCCCCC"> a good question yeah so</font>

837
01:02:50,699 --> 01:02:55,109
the question<font color="#CCCCCC"> was back to capturing</font><font color="#E5E5E5"> the</font>

838
01:02:53,189 --> 01:02:57,269
traffic<font color="#E5E5E5"> what if you're not seeing the</font>

839
01:02:55,109 --> 01:03:01,920
traffic that you want to capture<font color="#CCCCCC"> right</font>

840
01:02:57,269 --> 01:03:08,879
that's what you're<font color="#CCCCCC"> asking right</font><font color="#E5E5E5"> so get</font>

841
01:03:01,920 --> 01:03:12,839
<font color="#E5E5E5">rid of my magnifier if we come back</font><font color="#CCCCCC"> to</font>

842
01:03:08,880 --> 01:03:16,049
<font color="#CCCCCC">this picture here there's a couple</font>

843
01:03:12,839 --> 01:03:18,989
<font color="#CCCCCC">options depending</font><font color="#E5E5E5"> on how much control</font><font color="#CCCCCC"> of</font>

844
01:03:16,049 --> 01:03:20,369
the environment<font color="#CCCCCC"> you have so if</font><font color="#E5E5E5"> you don't</font>

845
01:03:18,989 --> 01:03:23,189
have any control<font color="#CCCCCC"> over the environment</font>

846
01:03:20,369 --> 01:03:25,859
<font color="#CCCCCC">there's not much you can do</font><font color="#E5E5E5"> right the</font>

847
01:03:23,189 --> 01:03:30,269
traffic you sees the traffic you see<font color="#E5E5E5"> but</font>

848
01:03:25,859 --> 01:03:32,489
if you<font color="#CCCCCC"> can change</font><font color="#E5E5E5"> what devices are here</font>

849
01:03:30,269 --> 01:03:34,649
or how they're configured<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> then</font>

850
01:03:32,489 --> 01:03:38,789
change what traffic you can<font color="#E5E5E5"> see or</font>

851
01:03:34,650 --> 01:03:40,890
<font color="#CCCCCC">change where you're capturing so if</font>

852
01:03:38,789 --> 01:03:45,359
you've got<font color="#E5E5E5"> just a dumb switch here a</font>

853
01:03:40,890 --> 01:03:47,640
normal switch<font color="#E5E5E5"> that's going to route</font>

854
01:03:45,359 --> 01:03:49,470
<font color="#E5E5E5">traffic based on your MAC address and</font>

855
01:03:47,640 --> 01:03:52,618
<font color="#E5E5E5">exclude and</font><font color="#CCCCCC"> ten</font>

856
01:03:49,470 --> 01:03:55,618
from seeing and twelves traffic<font color="#E5E5E5"> well if</font>

857
01:03:52,619 --> 01:03:58,530
you can change this device or how its

858
01:03:55,619 --> 01:04:00,900
configured to<font color="#E5E5E5"> do like port mirroring and</font>

859
01:03:58,530 --> 01:04:04,290
say hey everything that's going out

860
01:04:00,900 --> 01:04:10,670
these ports also<font color="#E5E5E5"> send it out this</font><font color="#CCCCCC"> port</font>

861
01:04:04,290 --> 01:04:15,840
so that<font color="#CCCCCC"> n 12 can see all that</font><font color="#E5E5E5"> traffic or</font>

862
01:04:10,670 --> 01:04:18,869
<font color="#E5E5E5">you know if you can either run Wireshark</font>

863
01:04:15,840 --> 01:04:23,720
directly or run a capture software<font color="#CCCCCC"> on</font>

864
01:04:18,869 --> 01:04:26,520
<font color="#E5E5E5">your router and then send the traffic to</font>

865
01:04:23,720 --> 01:04:28,560
Wireshark<font color="#E5E5E5"> so so you'll see that done a</font>

866
01:04:26,520 --> 01:04:30,359
lot where it's not Wireshark that's

867
01:04:28,560 --> 01:04:32,460
actually doing the capture<font color="#E5E5E5"> you'll use</font>

868
01:04:30,359 --> 01:04:35,250
you know<font color="#E5E5E5"> built-in tools on the router or</font>

869
01:04:32,460 --> 01:04:40,800
whatever and dump them to a pcap file

870
01:04:35,250 --> 01:04:43,530
and then load them<font color="#E5E5E5"> into Wireshark from</font>

871
01:04:40,800 --> 01:04:44,520
an attackers perspective<font color="#E5E5E5"> they have the</font>

872
01:04:43,530 --> 01:04:46,230
same problem

873
01:04:44,520 --> 01:04:49,200
they want to see traffic that<font color="#E5E5E5"> they don't</font>

874
01:04:46,230 --> 01:04:51,380
<font color="#CCCCCC">normally see</font><font color="#E5E5E5"> so there's other ways</font><font color="#CCCCCC"> you</font>

875
01:04:49,200 --> 01:04:53,399
<font color="#E5E5E5">could go about doing it in terms of</font>

876
01:04:51,380 --> 01:04:56,580
essentially you<font color="#E5E5E5"> want to create a</font>

877
01:04:53,400 --> 01:05:00,119
man-in-the-middle<font color="#E5E5E5"> scenario where you are</font>

878
01:04:56,580 --> 01:05:03,119
<font color="#E5E5E5">you know seeing the traffic in between</font>

879
01:05:00,119 --> 01:05:04,890
two devices<font color="#E5E5E5"> and so there's techniques</font>

880
01:05:03,119 --> 01:05:06,720
<font color="#E5E5E5">for that</font><font color="#CCCCCC"> as well does</font><font color="#E5E5E5"> that help answer</font>

881
01:05:04,890 --> 01:05:09,598
<font color="#E5E5E5">your question</font><font color="#CCCCCC"> okay</font>

882
01:05:06,720 --> 01:05:14,009
<font color="#CCCCCC">the other</font><font color="#E5E5E5"> thing I should mention is you</font>

883
01:05:09,599 --> 01:05:15,839
can get dedicated<font color="#E5E5E5"> devices</font><font color="#CCCCCC"> that will you</font>

884
01:05:14,010 --> 01:05:20,220
know<font color="#CCCCCC"> you plug in the cable on one end</font>

885
01:05:15,839 --> 01:05:21,779
<font color="#E5E5E5">the cable on the other end and then a</font>

886
01:05:20,220 --> 01:05:28,790
cable running<font color="#E5E5E5"> out to your computer and</font>

887
01:05:21,780 --> 01:05:28,790
so you<font color="#E5E5E5"> splice into the traffic</font>

888
01:05:37,220 --> 01:05:43,200
<font color="#E5E5E5">okay the other thing I wanted to point</font>

889
01:05:40,590 --> 01:05:45,930
<font color="#E5E5E5">out with using SSH</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> making sure it</font>

890
01:05:43,200 --> 01:05:47,640
was clear<font color="#CCCCCC"> of why it matters of you know</font>

891
01:05:45,930 --> 01:05:49,379
with the port numbers and setting those

892
01:05:47,640 --> 01:05:52,230
port numbers<font color="#CCCCCC"> is from a</font><font color="#E5E5E5"> security</font>

893
01:05:49,380 --> 01:05:55,260
<font color="#E5E5E5">perspective if you're expecting to get</font>

894
01:05:52,230 --> 01:05:57,980
to find<font color="#E5E5E5"> all of the ssh traffic</font><font color="#CCCCCC"> by simply</font>

895
01:05:55,260 --> 01:06:00,600
applying<font color="#E5E5E5"> this ssh filter your</font>

896
01:05:57,980 --> 01:06:02,520
expectations are going to<font color="#E5E5E5"> be incorrect</font>

897
01:06:00,600 --> 01:06:04,620
<font color="#CCCCCC">all they have</font><font color="#E5E5E5"> to do is use a different</font>

898
01:06:02,520 --> 01:06:07,110
port number and you won't see<font color="#E5E5E5"> it when</font>

899
01:06:04,620 --> 01:06:09,480
you do your ssh filter<font color="#E5E5E5"> okay</font>

900
01:06:07,110 --> 01:06:11,670
Wireshark<font color="#E5E5E5"> doesn't have some magic built</font>

901
01:06:09,480 --> 01:06:13,050
<font color="#E5E5E5">in where it's doing a deep analysis of</font>

902
01:06:11,670 --> 01:06:23,010
the packets<font color="#E5E5E5"> and saying oh this looks</font>

903
01:06:13,050 --> 01:06:25,760
<font color="#E5E5E5">like an</font><font color="#CCCCCC"> SSH packet other questions on</font>

904
01:06:23,010 --> 01:06:25,760
SSH

905
01:06:31,670 --> 01:06:57,700
yeah so there's well let's take a look

906
01:06:41,380 --> 01:07:03,140
where's our so it's common<font color="#CCCCCC"> for your</font>

907
01:06:57,700 --> 01:07:05,569
server to announce its what version of

908
01:07:03,140 --> 01:07:10,370
SSH<font color="#E5E5E5"> it's using that</font><font color="#CCCCCC"> kind of stuff and so</font>

909
01:07:05,570 --> 01:07:15,620
<font color="#CCCCCC">you</font><font color="#E5E5E5"> could filter based on those values</font>

910
01:07:10,370 --> 01:07:19,460
<font color="#CCCCCC">and you could</font><font color="#E5E5E5"> even if you so we could</font>

911
01:07:15,620 --> 01:07:23,560
filter<font color="#E5E5E5"> specifically you know SSH</font>

912
01:07:19,460 --> 01:07:27,950
protocol<font color="#E5E5E5"> right click on that apply as</font>

913
01:07:23,560 --> 01:07:31,279
filter<font color="#E5E5E5"> show me</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> packets</font><font color="#CCCCCC"> that are</font>

914
01:07:27,950 --> 01:07:34,430
that<font color="#E5E5E5"> have the SSH protocol field</font><font color="#CCCCCC"> set to</font>

915
01:07:31,280 --> 01:07:36,740
drop<font color="#CCCCCC"> bear</font><font color="#E5E5E5"> well that's still relying on</font>

916
01:07:34,430 --> 01:07:40,790
Wireshark first<font color="#E5E5E5"> recognizing what an SSH</font>

917
01:07:36,740 --> 01:07:42,740
packet is but if we change<font color="#E5E5E5"> this to and</font>

918
01:07:40,790 --> 01:07:52,660
I'd probably<font color="#E5E5E5"> mess up the exact syntax</font>

919
01:07:42,740 --> 01:07:52,660
here maybe we can get it<font color="#E5E5E5"> frame contains</font>

920
01:07:56,920 --> 01:08:15,140
sweet and I'll bring<font color="#E5E5E5"> my magnifying</font><font color="#CCCCCC"> glass</font>

921
01:08:01,430 --> 01:08:18,349
so you can<font color="#CCCCCC"> see it so</font><font color="#E5E5E5"> I can filter on the</font>

922
01:08:15,140 --> 01:08:20,990
entire frame that is<font color="#E5E5E5"> the whole packet</font>

923
01:08:18,350 --> 01:08:23,089
and instead of<font color="#E5E5E5"> the filtering or specific</font>

924
01:08:20,990 --> 01:08:26,510
field<font color="#CCCCCC"> I could look for</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> specific text</font>

925
01:08:23,089 --> 01:08:29,299
specific data<font color="#E5E5E5"> and so I could say well if</font>

926
01:08:26,510 --> 01:08:31,819
it contains this text<font color="#E5E5E5"> now I don't have</font>

927
01:08:29,299 --> 01:08:34,970
to know that<font color="#CCCCCC"> it was actually ssh traffic</font>

928
01:08:31,819 --> 01:08:38,690
<font color="#E5E5E5">or that it was using port 22 but</font>

929
01:08:34,970 --> 01:08:42,530
anything whether<font color="#E5E5E5"> it's you know i'm port</font>

930
01:08:38,689 --> 01:08:46,250
22<font color="#E5E5E5"> or port 622 or tu-tu-tu-tu-tu if it</font>

931
01:08:42,529 --> 01:08:54,349
has this data in it<font color="#E5E5E5"> it will be picked</font><font color="#CCCCCC"> up</font>

932
01:08:46,250 --> 01:08:56,149
by<font color="#CCCCCC"> the filter yeah yeah if you you know</font>

933
01:08:54,350 --> 01:08:59,120
<font color="#E5E5E5">if it contains this whole thing it would</font>

934
01:08:56,149 --> 01:09:03,290
also contain<font color="#E5E5E5"> just SSH</font><font color="#CCCCCC"> and so you could</font>

935
01:08:59,120 --> 01:09:14,689
you know do more or less<font color="#CCCCCC"> based on what</font>

936
01:09:03,290 --> 01:09:17,660
you were looking<font color="#E5E5E5"> for</font><font color="#CCCCCC"> oh okay</font><font color="#E5E5E5"> so that's</font><font color="#CCCCCC"> a</font>

937
01:09:14,689 --> 01:09:19,580
<font color="#E5E5E5">good question it would depend on what</font>

938
01:09:17,660 --> 01:09:22,068
port number it was<font color="#E5E5E5"> using and how</font>

939
01:09:19,580 --> 01:09:26,720
Wireshark was interpreting it<font color="#E5E5E5"> so if it</font>

940
01:09:22,069 --> 01:09:29,020
was<font color="#E5E5E5"> using a port that's</font><font color="#CCCCCC"> a commonly</font>

941
01:09:26,720 --> 01:09:31,910
associated with some other protocol it

942
01:09:29,020 --> 01:09:35,180
might try and<font color="#E5E5E5"> interpret it as that</font>

943
01:09:31,910 --> 01:09:37,339
protocol if the packets were different

944
01:09:35,180 --> 01:09:39,020
enough<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it couldn't interpret it you</font>

945
01:09:37,339 --> 01:09:43,850
know then you'd get some different

946
01:09:39,020 --> 01:09:46,660
<font color="#E5E5E5">behavior so it's</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> it's usually</font><font color="#CCCCCC"> based</font>

947
01:09:43,850 --> 01:09:49,310
off port number but it's<font color="#E5E5E5"> not a guarantee</font>

948
01:09:46,660 --> 01:09:51,519
in terms of what you would see listed

949
01:09:49,310 --> 01:09:51,520
<font color="#CCCCCC">here</font>

950
01:09:54,590 --> 01:10:01,090
<font color="#E5E5E5">okay so let's look at the next</font><font color="#CCCCCC"> question</font>

951
01:10:02,380 --> 01:10:13,670
and what did that do so what UDP

952
01:10:10,810 --> 01:10:26,119
protocols are used<font color="#CCCCCC"> what did you guys</font>

953
01:10:13,670 --> 01:10:30,969
find on<font color="#E5E5E5"> that one yeah okay</font><font color="#CCCCCC"> DNS DHCP mdns</font>

954
01:10:26,119 --> 01:10:33,650
<font color="#E5E5E5">was there any others people said</font><font color="#CCCCCC"> okay</font>

955
01:10:30,969 --> 01:10:37,580
how<font color="#CCCCCC"> many</font><font color="#E5E5E5"> of you use the some sort of</font>

956
01:10:33,650 --> 01:10:41,409
filter<font color="#E5E5E5"> to find that information okay</font>

957
01:10:37,580 --> 01:10:41,409
what what sort<font color="#E5E5E5"> of filter did you use</font>

958
01:10:42,310 --> 01:10:51,920
<font color="#E5E5E5">makes sense looking for UDP traffic make</font>

959
01:10:46,790 --> 01:10:57,199
it up by a UDP filter but this<font color="#E5E5E5"> doesn't</font>

960
01:10:51,920 --> 01:11:00,139
give me<font color="#CCCCCC"> the answer this shows</font><font color="#E5E5E5"> me of the</font>

961
01:10:57,199 --> 01:11:12,409
packets<font color="#E5E5E5"> but I still have to go</font><font color="#CCCCCC"> through</font>

962
01:11:00,139 --> 01:11:20,540
and<font color="#E5E5E5"> find the individual protocols yeah</font>

963
01:11:12,409 --> 01:11:23,629
<font color="#E5E5E5">but so these fields are sortable</font><font color="#CCCCCC"> and you</font>

964
01:11:20,540 --> 01:11:27,830
could say<font color="#E5E5E5"> well right now they're ordered</font>

965
01:11:23,630 --> 01:11:31,250
by their arrival<font color="#E5E5E5"> and instead let me</font>

966
01:11:27,830 --> 01:11:33,199
order<font color="#E5E5E5"> them by their protocol now though</font>

967
01:11:31,250 --> 01:11:35,510
I'll be grouped together and it'll<font color="#E5E5E5"> make</font>

968
01:11:33,199 --> 01:11:37,669
it easier<font color="#CCCCCC"> to go through</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> list</font><font color="#E5E5E5"> and</font>

969
01:11:35,510 --> 01:11:40,909
<font color="#CCCCCC">that's a</font><font color="#E5E5E5"> great approach for answering</font>

970
01:11:37,670 --> 01:11:49,429
this question<font color="#E5E5E5"> how else did people answer</font>

971
01:11:40,909 --> 01:11:51,348
this question<font color="#E5E5E5"> okay yeah so let's look at</font>

972
01:11:49,429 --> 01:11:56,420
some<font color="#E5E5E5"> of the other options that are</font>

973
01:11:51,349 --> 01:11:58,099
available<font color="#E5E5E5"> with Wireshark here and again</font>

974
01:11:56,420 --> 01:12:02,570
<font color="#E5E5E5">we're just scratching</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> surface of</font>

975
01:11:58,099 --> 01:12:05,900
what we<font color="#CCCCCC"> can do but we can come under</font>

976
01:12:02,570 --> 01:12:08,009
statistics and there's a whole bunch<font color="#E5E5E5"> of</font>

977
01:12:05,900 --> 01:12:11,490
<font color="#CCCCCC">different</font><font color="#E5E5E5"> options the one that</font>

978
01:12:08,010 --> 01:12:13,230
going to be most<font color="#E5E5E5"> useful for us answering</font>

979
01:12:11,490 --> 01:12:15,630
this question is<font color="#E5E5E5"> probably the protocol</font>

980
01:12:13,230 --> 01:12:19,740
hierarchy which<font color="#E5E5E5"> I think that's what you</font>

981
01:12:15,630 --> 01:12:22,800
were saying<font color="#E5E5E5"> as well right so if I click</font>

982
01:12:19,740 --> 01:12:27,960
on that<font color="#CCCCCC"> it separates out all of</font><font color="#E5E5E5"> my</font>

983
01:12:22,800 --> 01:12:30,480
packets by protocol in a hierarchy<font color="#CCCCCC"> or it</font>

984
01:12:27,960 --> 01:12:32,010
says there<font color="#E5E5E5"> are all frames a hundred</font>

985
01:12:30,480 --> 01:12:34,980
percent<font color="#E5E5E5"> of them are frames a hundred</font>

986
01:12:32,010 --> 01:12:37,910
percent<font color="#E5E5E5"> of them are Ethernet but you</font>

987
01:12:34,980 --> 01:12:41,040
know 0.2 percent of them are ipv6<font color="#E5E5E5"> and</font>

988
01:12:37,910 --> 01:12:46,760
point<font color="#CCCCCC"> ninety-nine point eight</font><font color="#E5E5E5"> percent of</font>

989
01:12:41,040 --> 01:12:52,320
them are ipv4 well what we care about<font color="#E5E5E5"> is</font>

990
01:12:46,760 --> 01:12:56,190
the of those ipv4 packets<font color="#CCCCCC"> are UDP and we</font>

991
01:12:52,320 --> 01:12:58,580
have this list mdns<font color="#CCCCCC"> DNS and the</font>

992
01:12:56,190 --> 01:13:02,759
bootstrap protocol which<font color="#E5E5E5"> is our DHCP</font>

993
01:12:58,580 --> 01:13:07,559
protocol<font color="#CCCCCC"> you guys mentioned you'll</font>

994
01:13:02,760 --> 01:13:10,980
notice this list<font color="#E5E5E5"> where's our SSH</font><font color="#CCCCCC"> where's</font>

995
01:13:07,560 --> 01:13:13,020
our HTTP<font color="#E5E5E5"> I know those are in the capture</font>

996
01:13:10,980 --> 01:13:19,320
file we<font color="#CCCCCC"> just saw them</font><font color="#E5E5E5"> how come they're</font>

997
01:13:13,020 --> 01:13:21,350
<font color="#CCCCCC">not in this list yeah yeah they're on</font>

998
01:13:19,320 --> 01:13:24,900
your list but they're not on my<font color="#CCCCCC"> list</font>

999
01:13:21,350 --> 01:13:27,810
<font color="#CCCCCC">I've got a</font><font color="#E5E5E5"> filter</font><font color="#CCCCCC"> going and the</font>

1000
01:13:24,900 --> 01:13:32,759
statistics are<font color="#E5E5E5"> going to be based off of</font>

1001
01:13:27,810 --> 01:13:34,740
that<font color="#E5E5E5"> filter you'll notice as if like I</font>

1002
01:13:32,760 --> 01:13:36,330
said we<font color="#E5E5E5"> won't go through all of them but</font>

1003
01:13:34,740 --> 01:13:38,250
<font color="#CCCCCC">hopefully you'll take</font><font color="#E5E5E5"> some time to look</font>

1004
01:13:36,330 --> 01:13:41,610
through<font color="#E5E5E5"> the different statistics options</font>

1005
01:13:38,250 --> 01:13:44,460
<font color="#CCCCCC">Wireshark</font><font color="#E5E5E5"> isn't consistent in terms of</font>

1006
01:13:41,610 --> 01:13:47,099
when it applies<font color="#CCCCCC"> the filter to your</font>

1007
01:13:44,460 --> 01:13:49,500
statistics<font color="#E5E5E5"> and when it</font><font color="#CCCCCC"> doesn't but when</font>

1008
01:13:47,100 --> 01:13:52,560
it's<font color="#E5E5E5"> not applying the</font><font color="#CCCCCC"> filter there's</font>

1009
01:13:49,500 --> 01:13:55,830
almost always a checkbox<font color="#E5E5E5"> down here that</font>

1010
01:13:52,560 --> 01:14:03,330
lets you say<font color="#E5E5E5"> either apply or don't apply</font>

1011
01:13:55,830 --> 01:14:05,960
<font color="#E5E5E5">the filter and let's see</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> we can pull</font>

1012
01:14:03,330 --> 01:14:05,960
<font color="#CCCCCC">up one of</font><font color="#E5E5E5"> those</font>

1013
01:14:09,750 --> 01:14:15,880
so for<font color="#E5E5E5"> example I just pulled up the end</font>

1014
01:14:12,700 --> 01:14:18,220
<font color="#CCCCCC">points statistic and you'll</font><font color="#E5E5E5"> notice down</font>

1015
01:14:15,880 --> 01:14:21,820
<font color="#CCCCCC">here there's a box that says limit to</font>

1016
01:14:18,220 --> 01:14:24,520
display filter so<font color="#E5E5E5"> the</font><font color="#CCCCCC"> default list of</font>

1017
01:14:21,820 --> 01:14:26,380
<font color="#CCCCCC">endpoints is all of the packets</font><font color="#E5E5E5"> even</font>

1018
01:14:24,520 --> 01:14:28,750
though I have a<font color="#E5E5E5"> filter if I want it</font>

1019
01:14:26,380 --> 01:14:31,090
limited<font color="#E5E5E5"> to</font><font color="#CCCCCC"> that filter I have to check</font>

1020
01:14:28,750 --> 01:14:34,120
the box<font color="#CCCCCC"> so watch out for</font><font color="#E5E5E5"> that when</font>

1021
01:14:31,090 --> 01:14:36,910
you're getting<font color="#E5E5E5"> your statistics is if you</font>

1022
01:14:34,120 --> 01:14:42,150
have a filter<font color="#CCCCCC"> applied or not</font><font color="#E5E5E5"> and if it's</font>

1023
01:14:36,910 --> 01:14:46,480
counting in<font color="#CCCCCC"> your statistics or not if</font>

1024
01:14:42,150 --> 01:14:49,089
there's no<font color="#CCCCCC"> check box</font><font color="#E5E5E5"> it is using the</font>

1025
01:14:46,480 --> 01:14:52,650
filter if there's a<font color="#E5E5E5"> checkbox then it</font>

1026
01:14:49,090 --> 01:14:52,650
depends<font color="#E5E5E5"> on if</font><font color="#CCCCCC"> the checkbox is checked</font>

1027
01:14:56,100 --> 01:15:07,000
<font color="#CCCCCC">okay so</font><font color="#E5E5E5"> all right we did the UDP</font>

1028
01:15:00,640 --> 01:15:11,710
question what I P address is<font color="#E5E5E5"> associated</font>

1029
01:15:07,000 --> 01:15:13,920
<font color="#CCCCCC">with this specific MAC address what</font><font color="#E5E5E5"> you</font>

1030
01:15:11,710 --> 01:15:13,920
find

1031
01:15:17,400 --> 01:15:24,030
<font color="#E5E5E5">okay 192.168.255.255</font>

1032
01:15:41,219 --> 01:16:00,660
yeah<font color="#E5E5E5"> so you can do and that's not gonna</font>

1033
01:15:47,580 --> 01:16:02,519
let me copy it<font color="#E5E5E5"> you're gonna cheat</font><font color="#CCCCCC"> okay</font>

1034
01:16:00,660 --> 01:16:05,340
so I'm<font color="#E5E5E5"> gonna cheat but it's actually a</font>

1035
01:16:02,520 --> 01:16:08,280
good thing<font color="#E5E5E5"> because it'll show</font><font color="#CCCCCC"> you other</font>

1036
01:16:05,340 --> 01:16:11,940
ways<font color="#E5E5E5"> to build your filters</font><font color="#CCCCCC"> I didn't</font><font color="#E5E5E5"> want</font>

1037
01:16:08,280 --> 01:16:14,790
to type in that<font color="#E5E5E5"> MAC address if you know</font>

1038
01:16:11,940 --> 01:16:17,070
what you want to filter on<font color="#E5E5E5"> and you can</font>

1039
01:16:14,790 --> 01:16:19,199
you find it somewhere<font color="#E5E5E5"> you're like oh</font>

1040
01:16:17,070 --> 01:16:21,480
this is the<font color="#E5E5E5"> value I'm looking for this</font>

1041
01:16:19,199 --> 01:16:27,449
<font color="#E5E5E5">is the thing I want</font><font color="#CCCCCC"> to filter you</font><font color="#E5E5E5"> can</font>

1042
01:16:21,480 --> 01:16:32,190
<font color="#CCCCCC">right-click on it down in the list so if</font>

1043
01:16:27,449 --> 01:16:36,530
I find a it is<font color="#E5E5E5"> cheating right I told you</font>

1044
01:16:32,190 --> 01:16:39,719
I was gonna cheat yeah so this is<font color="#E5E5E5"> the</font>

1045
01:16:36,530 --> 01:16:47,370
<font color="#E5E5E5">source address I can</font><font color="#CCCCCC"> right-click</font><font color="#E5E5E5"> on it</font>

1046
01:16:39,719 --> 01:16:50,989
<font color="#E5E5E5">and there's let's get a little more room</font>

1047
01:16:47,370 --> 01:16:55,010
there<font color="#CCCCCC"> so it'll show up in</font><font color="#E5E5E5"> the menu</font><font color="#CCCCCC"> okay</font>

1048
01:16:50,989 --> 01:16:57,809
there's two<font color="#CCCCCC"> options that</font><font color="#E5E5E5"> are good for</font>

1049
01:16:55,010 --> 01:17:00,870
<font color="#E5E5E5">your filter</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> either apply it</font>

1050
01:16:57,810 --> 01:17:02,570
directly<font color="#E5E5E5"> or you can just prepare it</font>

1051
01:17:00,870 --> 01:17:05,940
which will<font color="#E5E5E5"> build it but won't actually</font>

1052
01:17:02,570 --> 01:17:08,940
apply it yet<font color="#CCCCCC"> and in this case I just</font>

1053
01:17:05,940 --> 01:17:10,919
<font color="#E5E5E5">want to apply it directly and so I'm</font>

1054
01:17:08,940 --> 01:17:13,679
going<font color="#CCCCCC"> to choose so I right right clicked</font>

1055
01:17:10,920 --> 01:17:16,469
on<font color="#CCCCCC"> my MAC address and I'm going</font><font color="#E5E5E5"> to apply</font>

1056
01:17:13,680 --> 01:17:18,870
as filter and then<font color="#CCCCCC"> you can choose how</font>

1057
01:17:16,469 --> 01:17:20,940
<font color="#CCCCCC">you want to filter</font><font color="#E5E5E5"> do you want to filter</font>

1058
01:17:18,870 --> 01:17:23,699
everything<font color="#E5E5E5"> that has that</font><font color="#CCCCCC"> value</font><font color="#E5E5E5"> that</font>

1059
01:17:20,940 --> 01:17:26,910
<font color="#CCCCCC">doesn't have</font><font color="#E5E5E5"> that value do you want to</font>

1060
01:17:23,699 --> 01:17:32,280
build<font color="#E5E5E5"> onto your existing</font><font color="#CCCCCC"> filter and add</font>

1061
01:17:26,910 --> 01:17:34,830
and this thing or an or or<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> not</font>

1062
01:17:32,280 --> 01:17:38,809
or or not<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so you can build them as</font>

1063
01:17:34,830 --> 01:17:38,809
you go<font color="#E5E5E5"> which is really</font><font color="#CCCCCC"> nice</font>

1064
01:17:41,940 --> 01:17:46,980
<font color="#E5E5E5">you have to be careful though</font><font color="#CCCCCC"> because</font>

1065
01:17:43,260 --> 01:17:48,540
<font color="#E5E5E5">sometimes what you select isn't quite</font>

1066
01:17:46,980 --> 01:17:52,799
what you meant

1067
01:17:48,540 --> 01:17:56,010
so before<font color="#E5E5E5"> in our example we you were</font>

1068
01:17:52,800 --> 01:17:58,890
saying to filter F dot<font color="#E5E5E5"> adder</font><font color="#CCCCCC"> a bedr</font>

1069
01:17:56,010 --> 01:18:00,390
and put it in the<font color="#CCCCCC"> address</font><font color="#E5E5E5"> and then I</font>

1070
01:17:58,890 --> 01:18:02,010
cheated and I came down<font color="#CCCCCC"> here</font><font color="#E5E5E5"> and I</font>

1071
01:18:00,390 --> 01:18:04,470
clicked on the source address<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I said</font>

1072
01:18:02,010 --> 01:18:06,660
well apply this as a filter well it

1073
01:18:04,470 --> 01:18:09,600
applied it as a filter but<font color="#E5E5E5"> it's</font>

1074
01:18:06,660 --> 01:18:15,420
filtering specifically for that<font color="#CCCCCC"> address</font>

1075
01:18:09,600 --> 01:18:18,060
as the source address<font color="#CCCCCC"> and so you'll</font>

1076
01:18:15,420 --> 01:18:23,300
<font color="#E5E5E5">notice all of</font><font color="#CCCCCC"> these have the same source</font>

1077
01:18:18,060 --> 01:18:26,700
cuz it's filtered by your source address

1078
01:18:23,300 --> 01:18:29,220
<font color="#E5E5E5">if I want just the</font><font color="#CCCCCC"> address</font><font color="#E5E5E5"> in general</font>

1079
01:18:26,700 --> 01:18:32,880
not source or destination<font color="#CCCCCC"> then I can</font>

1080
01:18:29,220 --> 01:18:35,430
<font color="#E5E5E5">change it to the adder</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> now we see</font>

1081
01:18:32,880 --> 01:18:36,930
both<font color="#E5E5E5"> sides because in one it's the</font>

1082
01:18:35,430 --> 01:18:48,020
source<font color="#E5E5E5"> and in the other one it's the</font>

1083
01:18:36,930 --> 01:18:48,020
destination<font color="#E5E5E5"> okay how about if</font><font color="#CCCCCC"> we</font>

1084
01:18:55,189 --> 01:18:58,599
change this back

1085
01:19:09,970 --> 01:19:15,610
so<font color="#E5E5E5"> I've changed it back to filtering as</font>

1086
01:19:12,610 --> 01:19:17,349
a source address<font color="#E5E5E5"> but</font><font color="#CCCCCC"> we haven't answered</font>

1087
01:19:15,610 --> 01:19:19,900
the<font color="#CCCCCC"> question yet I mean</font><font color="#E5E5E5"> we did answer</font>

1088
01:19:17,350 --> 01:19:23,770
<font color="#E5E5E5">the question but we haven't seen the</font>

1089
01:19:19,900 --> 01:19:25,809
answer<font color="#E5E5E5"> I have this MAC address now how</font>

1090
01:19:23,770 --> 01:19:30,700
do I<font color="#E5E5E5"> find out which IP address it's</font>

1091
01:19:25,810 --> 01:19:33,370
associated<font color="#E5E5E5"> with I can either line up you</font>

1092
01:19:30,700 --> 01:19:35,559
know<font color="#E5E5E5"> filtering by source makes it easy</font>

1093
01:19:33,370 --> 01:19:37,349
because<font color="#CCCCCC"> now I know</font><font color="#E5E5E5"> I just look in the</font>

1094
01:19:35,560 --> 01:19:41,490
<font color="#E5E5E5">source column and that's the</font>

1095
01:19:37,350 --> 01:19:49,660
corresponding IP address when I do it by

1096
01:19:41,490 --> 01:19:52,590
address now if I'm just looking<font color="#E5E5E5"> here I</font>

1097
01:19:49,660 --> 01:19:55,660
see both those<font color="#E5E5E5"> addresses and I have to</font>

1098
01:19:52,590 --> 01:19:58,620
select one of the packets which I've got

1099
01:19:55,660 --> 01:20:00,880
you know this one selected currently and

1100
01:19:58,620 --> 01:20:02,410
then I have to come down<font color="#CCCCCC"> here and say</font>

1101
01:20:00,880 --> 01:20:06,040
well is this the<font color="#E5E5E5"> source or the</font>

1102
01:20:02,410 --> 01:20:16,980
destination<font color="#CCCCCC"> MAC</font><font color="#E5E5E5"> address it's the source</font>

1103
01:20:06,040 --> 01:20:20,410
so it's my<font color="#CCCCCC"> three Oh</font><font color="#E5E5E5"> which MAC address</font>

1104
01:20:16,980 --> 01:20:23,080
it's gonna say yeah<font color="#E5E5E5"> I</font><font color="#CCCCCC"> I was</font><font color="#E5E5E5"> working on</font>

1105
01:20:20,410 --> 01:20:25,720
the wrong<font color="#CCCCCC"> mac dress we want the two emac</font>

1106
01:20:23,080 --> 01:20:28,690
dress so it's the destination<font color="#E5E5E5"> and which</font>

1107
01:20:25,720 --> 01:20:39,390
is our so we come up<font color="#CCCCCC"> the</font><font color="#E5E5E5"> destination IP</font>

1108
01:20:28,690 --> 01:20:44,530
<font color="#CCCCCC">address of 232 it's showing IP addresses</font>

1109
01:20:39,390 --> 01:20:48,580
<font color="#E5E5E5">let's switch our filter for a second I'm</font>

1110
01:20:44,530 --> 01:20:51,790
going to<font color="#CCCCCC"> filter to</font><font color="#E5E5E5"> ARP packets ARP</font>

1111
01:20:48,580 --> 01:20:55,540
packets don't<font color="#E5E5E5"> have IP addresses</font><font color="#CCCCCC"> they are</font>

1112
01:20:51,790 --> 01:20:57,970
at a lower level in our networking OSI

1113
01:20:55,540 --> 01:20:58,780
model and they communicate on the data

1114
01:20:57,970 --> 01:21:01,300
link layer

1115
01:20:58,780 --> 01:21:04,389
they don't use our<font color="#E5E5E5"> networking layer so</font>

1116
01:21:01,300 --> 01:21:07,030
they<font color="#E5E5E5"> don't have an IP address in this</font>

1117
01:21:04,390 --> 01:21:10,150
case<font color="#CCCCCC"> it automatically switches the</font>

1118
01:21:07,030 --> 01:21:14,610
source and destination over<font color="#E5E5E5"> to be the</font>

1119
01:21:10,150 --> 01:21:14,610
source and destination MAC addresses

1120
01:21:17,160 --> 01:21:23,769
<font color="#E5E5E5">depending on settings you might have the</font>

1121
01:21:19,870 --> 01:21:28,269
actual MAC address<font color="#E5E5E5"> or you might have the</font>

1122
01:21:23,770 --> 01:21:42,490
named<font color="#CCCCCC"> Mac address and you can you</font><font color="#E5E5E5"> know</font>

1123
01:21:28,270 --> 01:21:46,210
change those settings<font color="#CCCCCC"> I think under our</font>

1124
01:21:42,490 --> 01:21:48,340
Oh<font color="#CCCCCC"> actually it doesn't look like it's</font>

1125
01:21:46,210 --> 01:21:50,820
listed there it's under<font color="#CCCCCC"> our name filter</font>

1126
01:21:48,340 --> 01:21:50,820
instead

1127
01:22:03,420 --> 01:22:09,480
<font color="#E5E5E5">we go</font><font color="#CCCCCC"> into edit preferences and do name</font>

1128
01:22:06,239 --> 01:22:11,910
resolution<font color="#E5E5E5"> and so I've got the box check</font>

1129
01:22:09,480 --> 01:22:14,519
that says<font color="#CCCCCC"> resolve MAC addresses that's</font>

1130
01:22:11,910 --> 01:22:18,660
<font color="#E5E5E5">how come you know I put my mouse over</font><font color="#CCCCCC"> in</font>

1131
01:22:14,520 --> 01:22:21,150
there that's how come I get<font color="#CCCCCC"> a partial</font>

1132
01:22:18,660 --> 01:22:23,400
<font color="#E5E5E5">name with the MAC</font><font color="#CCCCCC"> address because</font><font color="#E5E5E5"> it's</font>

1133
01:22:21,150 --> 01:22:26,809
using<font color="#CCCCCC"> those first</font><font color="#E5E5E5"> three bytes to</font>

1134
01:22:23,400 --> 01:22:31,469
identify the manufacturer based<font color="#E5E5E5"> on its</font>

1135
01:22:26,810 --> 01:22:34,260
list<font color="#E5E5E5"> and putting that manufacturer name</font>

1136
01:22:31,469 --> 01:22:37,800
instead<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the bytes if you uncheck the</font>

1137
01:22:34,260 --> 01:22:40,830
box<font color="#E5E5E5"> then</font><font color="#CCCCCC"> you just get the actual</font><font color="#E5E5E5"> MAC</font>

1138
01:22:37,800 --> 01:22:43,920
address you can do the same<font color="#E5E5E5"> thing with</font>

1139
01:22:40,830 --> 01:22:44,640
these other addresses<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can have it</font>

1140
01:22:43,920 --> 01:22:46,590
<font color="#E5E5E5">resolved</font>

1141
01:22:44,640 --> 01:22:51,929
your transport names and instead<font color="#CCCCCC"> of</font>

1142
01:22:46,590 --> 01:22:53,910
showing port 22 it'll show<font color="#E5E5E5"> SSH</font><font color="#CCCCCC"> and you</font>

1143
01:22:51,929 --> 01:22:55,710
can<font color="#E5E5E5"> resolve network IP addresses and</font>

1144
01:22:53,910 --> 01:22:59,309
instead<font color="#CCCCCC"> of showing</font><font color="#E5E5E5"> an IP address it'll</font>

1145
01:22:55,710 --> 01:23:01,850
<font color="#E5E5E5">show you</font><font color="#CCCCCC"> the domain</font><font color="#E5E5E5"> name a caution on</font>

1146
01:22:59,310 --> 01:23:06,690
<font color="#CCCCCC">that</font><font color="#E5E5E5"> especially if you're capturing</font>

1147
01:23:01,850 --> 01:23:09,980
traffic on a network<font color="#E5E5E5"> is the way it</font>

1148
01:23:06,690 --> 01:23:14,040
resolves IP addresses is through the

1149
01:23:09,980 --> 01:23:17,218
domain name System DNS<font color="#CCCCCC"> it will actually</font>

1150
01:23:14,040 --> 01:23:19,230
send out requests queries for all of

1151
01:23:17,219 --> 01:23:21,929
those IP<font color="#CCCCCC"> addresses and so for large</font>

1152
01:23:19,230 --> 01:23:24,259
capture files<font color="#E5E5E5"> or on networks where</font><font color="#CCCCCC"> you</font>

1153
01:23:21,929 --> 01:23:27,000
want to remain silent

1154
01:23:24,260 --> 01:23:29,730
turning<font color="#E5E5E5"> this on is a bad idea</font><font color="#CCCCCC"> because</font>

1155
01:23:27,000 --> 01:23:32,640
it's generating Wireshark is<font color="#E5E5E5"> then</font>

1156
01:23:29,730 --> 01:23:36,718
generating traffic<font color="#CCCCCC"> to resolve these IP</font>

1157
01:23:32,640 --> 01:23:39,449
addresses<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> do some cool things</font>

1158
01:23:36,719 --> 01:23:41,520
though<font color="#E5E5E5"> when you resolve IP addresses in</font>

1159
01:23:39,449 --> 01:23:45,509
terms of you get the actual<font color="#CCCCCC"> domain names</font>

1160
01:23:41,520 --> 01:23:49,260
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can turn</font><font color="#E5E5E5"> on geolocation</font><font color="#CCCCCC"> if you</font>

1161
01:23:45,510 --> 01:23:50,670
download a Geo IP database and then<font color="#E5E5E5"> you</font>

1162
01:23:49,260 --> 01:23:52,710
can<font color="#E5E5E5"> get a map of</font><font color="#CCCCCC"> where all your</font>

1163
01:23:50,670 --> 01:23:55,199
<font color="#E5E5E5">communications coming from so there's</font>

1164
01:23:52,710 --> 01:23:57,739
fun things you<font color="#CCCCCC"> can do with it but do be</font>

1165
01:23:55,199 --> 01:24:01,320
aware<font color="#CCCCCC"> that it is</font><font color="#E5E5E5"> if you turn on</font>

1166
01:23:57,739 --> 01:24:07,820
resolving<font color="#E5E5E5"> network names it will be</font>

1167
01:24:01,320 --> 01:24:12,869
<font color="#E5E5E5">generating traffic</font><font color="#CCCCCC"> okay</font>

1168
01:24:07,820 --> 01:24:14,699
what if you want the<font color="#CCCCCC"> Mac and destination</font>

1169
01:24:12,869 --> 01:24:17,549
<font color="#E5E5E5">source and destination MAC addresses</font>

1170
01:24:14,699 --> 01:24:22,169
listed<font color="#E5E5E5"> here even when you're looking at</font>

1171
01:24:17,550 --> 01:24:26,820
IP<font color="#E5E5E5"> traffic so let's go back</font><font color="#CCCCCC"> to you know</font>

1172
01:24:22,170 --> 01:24:29,219
maybe<font color="#CCCCCC"> we'll filter for HTTP traffic</font><font color="#E5E5E5"> and</font>

1173
01:24:26,820 --> 01:24:39,409
my source and<font color="#E5E5E5"> destination go back to</font>

1174
01:24:29,219 --> 01:24:43,860
being IP addresses we can add<font color="#E5E5E5"> columns</font><font color="#CCCCCC"> to</font>

1175
01:24:39,409 --> 01:24:46,759
this list<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so we can you know</font><font color="#CCCCCC"> come</font>

1176
01:24:43,860 --> 01:24:50,489
<font color="#E5E5E5">into</font><font color="#CCCCCC"> our column preferences and add</font>

1177
01:24:46,760 --> 01:24:51,690
columns that way for me I<font color="#CCCCCC"> always find</font>

1178
01:24:50,489 --> 01:24:55,820
that harder because<font color="#E5E5E5"> then you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to go</font>

1179
01:24:51,690 --> 01:25:00,110
in<font color="#E5E5E5"> select the preference protocol add it</font>

1180
01:24:55,820 --> 01:25:02,369
<font color="#CCCCCC">I'll cook the little plus button</font><font color="#E5E5E5"> add it</font>

1181
01:25:00,110 --> 01:25:11,880
I'm gonna remove it<font color="#CCCCCC"> because I don't</font><font color="#E5E5E5"> want</font>

1182
01:25:02,369 --> 01:25:15,119
it<font color="#CCCCCC"> oops the easier</font><font color="#E5E5E5"> way for me is just</font>

1183
01:25:11,880 --> 01:25:20,040
<font color="#CCCCCC">like I cheated</font><font color="#E5E5E5"> with my filter I can</font>

1184
01:25:15,119 --> 01:25:22,848
cheat excuse me<font color="#E5E5E5"> when I want to add a</font>

1185
01:25:20,040 --> 01:25:27,199
column<font color="#CCCCCC"> and at the top of my list</font><font color="#E5E5E5"> is</font>

1186
01:25:22,849 --> 01:25:30,780
apply as column so I can come<font color="#CCCCCC"> up here</font>

1187
01:25:27,199 --> 01:25:33,570
<font color="#E5E5E5">apply as column and now I get a new</font>

1188
01:25:30,780 --> 01:25:35,929
column over<font color="#E5E5E5"> here that is my source MAC</font>

1189
01:25:33,570 --> 01:25:35,929
address

1190
01:25:40,229 --> 01:25:48,269
and I'll line that up<font color="#E5E5E5"> with</font><font color="#CCCCCC"> my source IP</font>

1191
01:25:46,679 --> 01:25:50,519
address<font color="#CCCCCC"> and now it becomes</font><font color="#E5E5E5"> much</font><font color="#CCCCCC"> easier</font>

1192
01:25:48,269 --> 01:25:52,469
<font color="#E5E5E5">to answer that question of which IP</font>

1193
01:25:50,519 --> 01:25:53,959
address is associated<font color="#CCCCCC"> with which MAC</font>

1194
01:25:52,469 --> 01:26:02,999
address because<font color="#CCCCCC"> I have them</font><font color="#E5E5E5"> listed</font>

1195
01:25:53,959 --> 01:26:12,289
<font color="#CCCCCC">side-by-side alright any questions on</font>

1196
01:26:02,999 --> 01:26:12,289
<font color="#E5E5E5">any of</font><font color="#CCCCCC"> these that we</font><font color="#E5E5E5"> worked through</font><font color="#CCCCCC"> okay</font>

1197
01:26:19,139 --> 01:26:32,840
<font color="#E5E5E5">get rid of our magnifier again so let's</font>

1198
01:26:29,880 --> 01:26:36,810
look at another feature of<font color="#E5E5E5"> Wireshark</font>

1199
01:26:32,840 --> 01:26:39,480
called<font color="#CCCCCC"> coloring rules</font><font color="#E5E5E5"> coloring rules are</font>

1200
01:26:36,810 --> 01:26:42,360
a little<font color="#CCCCCC"> bit different than display</font>

1201
01:26:39,480 --> 01:26:46,019
filters display filters actually<font color="#E5E5E5"> change</font>

1202
01:26:42,360 --> 01:26:48,989
what's visible<font color="#E5E5E5"> coloring rules are going</font>

1203
01:26:46,020 --> 01:26:51,270
<font color="#CCCCCC">to</font><font color="#E5E5E5"> leave it</font><font color="#CCCCCC"> all visible but it</font><font color="#E5E5E5"> it's</font>

1204
01:26:48,989 --> 01:26:53,459
<font color="#E5E5E5">going to let us highlight things</font><font color="#CCCCCC"> were</font>

1205
01:26:51,270 --> 01:26:55,080
<font color="#E5E5E5">interested in so maybe we still want the</font>

1206
01:26:53,460 --> 01:26:56,909
big picture<font color="#E5E5E5"> of what's</font><font color="#CCCCCC"> going on we want</font>

1207
01:26:55,080 --> 01:27:00,469
<font color="#CCCCCC">to be</font><font color="#E5E5E5"> seeing all the traffic but</font><font color="#CCCCCC"> we want</font>

1208
01:26:56,909 --> 01:27:02,969
to be<font color="#CCCCCC"> able to easily</font><font color="#E5E5E5"> hone in on specific</font>

1209
01:27:00,469 --> 01:27:07,050
<font color="#E5E5E5">areas of the traffic or specific</font>

1210
01:27:02,969 --> 01:27:11,250
features<font color="#E5E5E5"> of our data we can do that with</font>

1211
01:27:07,050 --> 01:27:15,210
coloring rules and again<font color="#E5E5E5"> I recommend</font>

1212
01:27:11,250 --> 01:27:17,790
<font color="#E5E5E5">using these generously and using them</font>

1213
01:27:15,210 --> 01:27:21,510
specifically<font color="#E5E5E5"> in different profile</font>

1214
01:27:17,790 --> 01:27:23,790
configurations so<font color="#E5E5E5"> on my machine</font><font color="#CCCCCC"> that I</font>

1215
01:27:21,510 --> 01:27:27,239
regularly<font color="#CCCCCC"> use for Wireshark I have</font>

1216
01:27:23,790 --> 01:27:32,340
<font color="#E5E5E5">several profiles</font><font color="#CCCCCC"> I have one for HTTP</font>

1217
01:27:27,239 --> 01:27:35,638
analysis<font color="#CCCCCC"> I have one for ICMP analysis</font>

1218
01:27:32,340 --> 01:27:38,400
and one for you know targeted attacks

1219
01:27:35,639 --> 01:27:39,719
<font color="#E5E5E5">and each one</font><font color="#CCCCCC"> of them has a</font><font color="#E5E5E5"> different set</font>

1220
01:27:38,400 --> 01:27:42,119
of filters<font color="#CCCCCC"> and a different set of</font>

1221
01:27:39,719 --> 01:27:44,460
<font color="#CCCCCC">colouring rules to make the information</font>

1222
01:27:42,119 --> 01:27:47,809
<font color="#E5E5E5">I'm interested in for that type of</font>

1223
01:27:44,460 --> 01:27:47,810
<font color="#E5E5E5">traffic</font><font color="#CCCCCC"> stand out</font>

1224
01:27:53,139 --> 01:27:58,849
you might<font color="#E5E5E5"> have noticed</font><font color="#CCCCCC"> already let's</font>

1225
01:27:56,269 --> 01:28:03,530
clear my filter that Wireshark<font color="#E5E5E5"> is</font>

1226
01:27:58,849 --> 01:28:12,050
coloring things differently<font color="#CCCCCC"> its coloring</font>

1227
01:28:03,530 --> 01:28:16,070
<font color="#CCCCCC">these kind</font><font color="#E5E5E5"> of a greenish</font><font color="#CCCCCC"> color there's</font>

1228
01:28:12,050 --> 01:28:21,820
some yellow some blue black red<font color="#E5E5E5"> it's</font>

1229
01:28:16,070 --> 01:28:26,749
already using colors but it's the

1230
01:28:21,820 --> 01:28:29,239
<font color="#E5E5E5">default colors of Wireshark maybe I want</font>

1231
01:28:26,749 --> 01:28:38,869
something more<font color="#E5E5E5"> specific</font><font color="#CCCCCC"> I'm going to</font>

1232
01:28:29,239 --> 01:28:41,138
create a new profile<font color="#CCCCCC"> and I'll call this</font>

1233
01:28:38,869 --> 01:28:41,139
<font color="#CCCCCC">one</font>

1234
01:28:50,070 --> 01:28:52,610
<font color="#E5E5E5">ttp</font>

1235
01:29:00,590 --> 01:29:15,980
and in my<font color="#CCCCCC"> HTTP coloring or profile I'm</font>

1236
01:29:05,330 --> 01:29:18,590
gonna set up<font color="#CCCCCC"> some new</font><font color="#E5E5E5"> coloring rules if</font>

1237
01:29:15,980 --> 01:29:20,480
it depends<font color="#CCCCCC"> on how you</font><font color="#E5E5E5"> created</font><font color="#CCCCCC"> so in the</font>

1238
01:29:18,590 --> 01:29:23,060
one where I just<font color="#E5E5E5"> did and I click</font><font color="#CCCCCC"> the new</font>

1239
01:29:20,480 --> 01:29:25,759
it<font color="#CCCCCC"> creates it based off the default</font>

1240
01:29:23,060 --> 01:29:27,489
protocol<font color="#CCCCCC"> if instead you go into manage</font>

1241
01:29:25,760 --> 01:29:31,159
profiles and<font color="#E5E5E5"> you click the copy button</font>

1242
01:29:27,489 --> 01:29:34,159
<font color="#E5E5E5">then it'll start with your whatever</font>

1243
01:29:31,159 --> 01:29:40,250
profile is<font color="#E5E5E5"> selected as the base for the</font>

1244
01:29:34,159 --> 01:29:49,670
new proto<font color="#E5E5E5"> profile</font><font color="#CCCCCC"> okay so if I go to</font>

1245
01:29:40,250 --> 01:29:51,380
<font color="#CCCCCC">view and coloring rules we can see of</font>

1246
01:29:49,670 --> 01:29:59,060
<font color="#E5E5E5">the coloring rules that wire sharks</font>

1247
01:29:51,380 --> 01:30:07,400
currently applying bring your magnifier

1248
01:29:59,060 --> 01:30:12,409
back okay so as rules for problems with

1249
01:30:07,400 --> 01:30:14,929
TCP it has rules for ICMP<font color="#CCCCCC"> airs</font>

1250
01:30:12,409 --> 01:30:18,799
it has<font color="#E5E5E5"> different colored packets for</font>

1251
01:30:14,929 --> 01:30:21,710
different types of protocols<font color="#E5E5E5"> yellow for</font>

1252
01:30:18,800 --> 01:30:28,699
the ARP<font color="#E5E5E5"> pink for</font><font color="#CCCCCC"> the ICMP which is</font>

1253
01:30:21,710 --> 01:30:31,489
commonly our pink stuff more errors<font color="#E5E5E5"> HTTP</font>

1254
01:30:28,699 --> 01:30:34,098
is the<font color="#E5E5E5"> greenish which is why we're</font>

1255
01:30:31,489 --> 01:30:38,839
<font color="#E5E5E5">seeing that in the background there okay</font>

1256
01:30:34,099 --> 01:30:42,230
<font color="#E5E5E5">so if this is my HTTP protocol or</font>

1257
01:30:38,840 --> 01:30:44,599
profile<font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> I want to add a new rule</font>

1258
01:30:42,230 --> 01:30:48,409
<font color="#CCCCCC">and I want to say</font><font color="#E5E5E5"> I want to know when</font>

1259
01:30:44,599 --> 01:30:54,710
there's<font color="#E5E5E5"> a file not found error and when</font>

1260
01:30:48,409 --> 01:31:01,929
I get<font color="#CCCCCC"> a 404 on my HTTP</font><font color="#E5E5E5"> request so I'm</font>

1261
01:30:54,710 --> 01:31:05,750
going to create a new<font color="#CCCCCC"> coloring rule and</font>

1262
01:31:01,929 --> 01:31:09,020
you'll see<font color="#E5E5E5"> that it</font><font color="#CCCCCC"> uses the display</font>

1263
01:31:05,750 --> 01:31:10,699
filter syntax<font color="#E5E5E5"> which is really nice</font>

1264
01:31:09,020 --> 01:31:12,679
<font color="#E5E5E5">because it means we don't have to learn</font>

1265
01:31:10,699 --> 01:31:14,009
<font color="#E5E5E5">something</font><font color="#CCCCCC"> new</font><font color="#E5E5E5"> what we already learned</font>

1266
01:31:12,679 --> 01:31:17,070
with display filters up

1267
01:31:14,010 --> 01:31:20,460
<font color="#E5E5E5">is equally well</font><font color="#CCCCCC"> to coloring rules</font>

1268
01:31:17,070 --> 01:31:23,070
<font color="#E5E5E5">anything that would be filtered and</font>

1269
01:31:20,460 --> 01:31:25,080
displayed in a display filter<font color="#E5E5E5"> we could</font>

1270
01:31:23,070 --> 01:31:27,120
also say hey instead<font color="#E5E5E5"> of changing whether</font>

1271
01:31:25,080 --> 01:31:33,620
you show this or<font color="#E5E5E5"> not just change how you</font>

1272
01:31:27,120 --> 01:31:43,559
color it so maybe I want<font color="#E5E5E5"> to filter HTTP</font>

1273
01:31:33,620 --> 01:31:55,130
response response code equals<font color="#E5E5E5"> or let's</font>

1274
01:31:43,560 --> 01:32:04,170
say greater than 399<font color="#CCCCCC"> and HTTP response</font>

1275
01:31:55,130 --> 01:32:08,210
code<font color="#E5E5E5"> less than 500 okay so I don't want</font>

1276
01:32:04,170 --> 01:32:14,270
<font color="#CCCCCC">just 404 errors but</font><font color="#E5E5E5"> 403 years any other</font>

1277
01:32:08,210 --> 01:32:14,270
400 level<font color="#E5E5E5"> error</font><font color="#CCCCCC"> I want to color the same</font>

1278
01:32:17,390 --> 01:32:27,090
so I've got my rule defined<font color="#CCCCCC"> I still need</font>

1279
01:32:22,590 --> 01:32:29,460
to<font color="#CCCCCC"> define my colors and</font><font color="#E5E5E5"> right now my</font>

1280
01:32:27,090 --> 01:32:33,720
colors<font color="#E5E5E5"> are a white background with black</font>

1281
01:32:29,460 --> 01:32:35,220
text<font color="#E5E5E5"> and I need to name my rule so if I</font>

1282
01:32:33,720 --> 01:32:37,500
click over<font color="#E5E5E5"> here where</font><font color="#CCCCCC"> it said new</font>

1283
01:32:35,220 --> 01:32:41,030
coloring rule<font color="#E5E5E5"> now it lets me change the</font>

1284
01:32:37,500 --> 01:32:49,830
text and<font color="#CCCCCC"> maybe I'll call</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> one HTTP</font>

1285
01:32:41,030 --> 01:32:53,340
client errors down here at the bottom<font color="#E5E5E5"> is</font>

1286
01:32:49,830 --> 01:32:55,650
where<font color="#E5E5E5"> I change the actual colors so it's</font>

1287
01:32:53,340 --> 01:32:59,070
<font color="#E5E5E5">currently and this one always confuses</font>

1288
01:32:55,650 --> 01:33:02,940
me a<font color="#E5E5E5"> little bit because the background</font>

1289
01:32:59,070 --> 01:33:06,660
<font color="#CCCCCC">of the button</font><font color="#E5E5E5"> is black and the words</font>

1290
01:33:02,940 --> 01:33:09,360
foreground<font color="#E5E5E5"> are white but it's the black</font>

1291
01:33:06,660 --> 01:33:12,000
that's going to be the color<font color="#E5E5E5"> of the</font>

1292
01:33:09,360 --> 01:33:15,000
foreground<font color="#E5E5E5"> same thing here the</font>

1293
01:33:12,000 --> 01:33:18,030
background<font color="#CCCCCC"> is</font><font color="#E5E5E5"> white the text is black</font>

1294
01:33:15,000 --> 01:33:20,250
it's the<font color="#E5E5E5"> background of the button that's</font>

1295
01:33:18,030 --> 01:33:23,009
<font color="#E5E5E5">going to be the background</font><font color="#CCCCCC"> so even</font>

1296
01:33:20,250 --> 01:33:24,900
though you know<font color="#E5E5E5"> we use foreground and</font>

1297
01:33:23,010 --> 01:33:26,090
background<font color="#E5E5E5"> it's always the background</font>

1298
01:33:24,900 --> 01:33:30,400
color of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> button</font>

1299
01:33:26,090 --> 01:33:30,400
that's actually applying to that<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't</font>

1300
01:33:31,180 --> 01:33:45,170
so I want this to<font color="#CCCCCC"> be this</font><font color="#E5E5E5"> is my</font>

1301
01:33:35,570 --> 01:33:48,920
<font color="#E5E5E5">foreground</font><font color="#CCCCCC"> let's go with like</font><font color="#E5E5E5"> a well</font>

1302
01:33:45,170 --> 01:33:54,050
let's keep the foreground black yeah

1303
01:33:48,920 --> 01:33:59,630
we'll go reddish indicate an error<font color="#E5E5E5"> type</font>

1304
01:33:54,050 --> 01:34:01,370
condition so I can specify you know I

1305
01:33:59,630 --> 01:34:04,630
click the color is set the color<font color="#E5E5E5"> value</font>

1306
01:34:01,370 --> 01:34:04,630
<font color="#E5E5E5">is</font><font color="#CCCCCC"> however</font><font color="#E5E5E5"> you want to choose</font><font color="#CCCCCC"> them</font><font color="#E5E5E5"> so</font>

1307
01:34:06,460 --> 01:34:12,980
<font color="#CCCCCC">I'm going with</font><font color="#E5E5E5"> the red foreground and</font>

1308
01:34:09,080 --> 01:34:22,570
<font color="#E5E5E5">you'll notice that changed my text to</font>

1309
01:34:12,980 --> 01:34:27,669
<font color="#E5E5E5">read and let's go with a yellowish</font>

1310
01:34:22,570 --> 01:34:32,330
background because it's not a complete

1311
01:34:27,670 --> 01:34:38,570
error<font color="#E5E5E5"> but a warning type that we want</font><font color="#CCCCCC"> to</font>

1312
01:34:32,330 --> 01:34:42,470
pay attention<font color="#E5E5E5"> to okay so that's kind</font><font color="#CCCCCC"> of</font>

1313
01:34:38,570 --> 01:34:44,960
an ugly yellow color but whatever now

1314
01:34:42,470 --> 01:34:50,270
I've got<font color="#E5E5E5"> yellow background</font><font color="#CCCCCC"> red text and</font>

1315
01:34:44,960 --> 01:34:52,850
if I have any 404 errors or any<font color="#CCCCCC"> 400</font>

1316
01:34:50,270 --> 01:34:54,920
<font color="#CCCCCC">level errors</font><font color="#E5E5E5"> in this capture file</font>

1317
01:34:52,850 --> 01:34:56,840
<font color="#E5E5E5">they'll be displayed right</font><font color="#CCCCCC"> along with</font>

1318
01:34:54,920 --> 01:34:59,620
<font color="#E5E5E5">all the other packets but they'll be</font>

1319
01:34:56,840 --> 01:35:04,820
colored<font color="#CCCCCC"> with this yellow and red</font>

1320
01:34:59,620 --> 01:35:13,010
coloring so I'll go ahead<font color="#E5E5E5"> and click OK</font>

1321
01:35:04,820 --> 01:35:15,400
and<font color="#CCCCCC"> it should have started</font><font color="#E5E5E5"> coloring</font>

1322
01:35:13,010 --> 01:35:15,400
those

1323
01:35:29,510 --> 01:35:35,260
so this is one that<font color="#CCCCCC"> I have</font><font color="#E5E5E5"> seen you</font><font color="#CCCCCC"> know</font>

1324
01:35:32,660 --> 01:35:38,269
I talked<font color="#CCCCCC"> about there's</font><font color="#E5E5E5"> a bug with the</font>

1325
01:35:35,260 --> 01:35:41,450
<font color="#E5E5E5">application of filters there's a bug</font>

1326
01:35:38,270 --> 01:35:44,620
with<font color="#E5E5E5"> coloring rules of when you set them</font>

1327
01:35:41,450 --> 01:35:48,590
on an existing<font color="#E5E5E5"> file it doesn't always</font>

1328
01:35:44,620 --> 01:36:01,150
reload them sometimes it does but<font color="#E5E5E5"> I'm</font>

1329
01:35:48,590 --> 01:36:01,150
<font color="#E5E5E5">just going to that could be the problem</font>

1330
01:36:01,239 --> 01:36:13,040
<font color="#E5E5E5">so let's go</font><font color="#CCCCCC"> back in there sure enough</font>

1331
01:36:10,820 --> 01:36:14,900
not checked<font color="#E5E5E5"> all right blaming</font><font color="#CCCCCC"> the</font>

1332
01:36:13,040 --> 01:36:20,650
<font color="#E5E5E5">software when it was my own</font><font color="#CCCCCC"> fault right</font>

1333
01:36:14,900 --> 01:36:23,980
oh good<font color="#E5E5E5"> I still get a blame the software</font>

1334
01:36:20,650 --> 01:36:23,980
didn't change it

1335
01:36:25,750 --> 01:36:37,060
where's my<font color="#E5E5E5"> four hundreds now it should</font>

1336
01:36:30,380 --> 01:36:37,060
change it<font color="#CCCCCC"> will see it should be</font><font color="#E5E5E5"> response</font>

1337
01:36:49,560 --> 01:36:57,850
<font color="#E5E5E5">okay so when we see eye all the 404s are</font>

1338
01:36:54,460 --> 01:37:05,770
showing up bright yellow and<font color="#E5E5E5"> red and let</font>

1339
01:36:57,850 --> 01:37:07,750
me clear my<font color="#CCCCCC"> filter and the nice thing is</font>

1340
01:37:05,770 --> 01:37:10,000
that<font color="#E5E5E5"> we can still see those</font><font color="#CCCCCC"> within the</font>

1341
01:37:07,750 --> 01:37:12,640
context of what<font color="#E5E5E5"> else was going</font><font color="#CCCCCC"> around</font>

1342
01:37:10,000 --> 01:37:16,060
<font color="#E5E5E5">and</font><font color="#CCCCCC"> we don't have to</font><font color="#E5E5E5"> filter and only see</font>

1343
01:37:12,640 --> 01:37:18,100
those<font color="#E5E5E5"> 404 packets we can say oh look who</font>

1344
01:37:16,060 --> 01:37:22,600
it<font color="#E5E5E5"> you know this one was fine this one</font>

1345
01:37:18,100 --> 01:37:23,140
was fine<font color="#CCCCCC"> this one not so much</font><font color="#E5E5E5"> this one</font>

1346
01:37:22,600 --> 01:37:25,210
not so<font color="#E5E5E5"> much</font>

1347
01:37:23,140 --> 01:37:28,120
<font color="#CCCCCC">this was sorry I told you the</font><font color="#E5E5E5"> coloring</font>

1348
01:37:25,210 --> 01:37:36,489
rules<font color="#E5E5E5"> when you create them and</font><font color="#CCCCCC"> apply</font>

1349
01:37:28,120 --> 01:37:38,409
them there and<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> something</font>

1350
01:37:36,489 --> 01:37:43,839
selected<font color="#E5E5E5"> sometimes coming gets a little</font>

1351
01:37:38,409 --> 01:37:47,110
<font color="#E5E5E5">off but</font><font color="#CCCCCC"> now it's all</font><font color="#E5E5E5"> showing up and this</font>

1352
01:37:43,840 --> 01:37:50,920
shows actually some quite<font color="#E5E5E5"> nice context</font>

1353
01:37:47,110 --> 01:37:54,059
of we didn't just get one 404 error we

1354
01:37:50,920 --> 01:38:01,350
got a whole list of them<font color="#CCCCCC"> all right</font>

1355
01:37:54,060 --> 01:38:04,500
we're sorted by something there we go

1356
01:38:01,350 --> 01:38:04,500
that's better

1357
01:38:09,210 --> 01:38:17,139
over here on<font color="#E5E5E5"> the far right is kind of a</font>

1358
01:38:13,949 --> 01:38:20,440
macro<font color="#E5E5E5"> level picture of all of your</font>

1359
01:38:17,139 --> 01:38:23,050
colors and so if you yellow is hard to

1360
01:38:20,440 --> 01:38:26,769
distinguish from<font color="#CCCCCC"> green</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> chose a</font>

1361
01:38:23,050 --> 01:38:29,139
slightly more prominent color you<font color="#E5E5E5"> could</font>

1362
01:38:26,770 --> 01:38:30,550
look<font color="#CCCCCC"> over here and you'd</font><font color="#E5E5E5"> see and you can</font>

1363
01:38:29,139 --> 01:38:33,369
kind of see like<font color="#E5E5E5"> right there it's</font>

1364
01:38:30,550 --> 01:38:36,639
<font color="#CCCCCC">probably a yellow</font><font color="#E5E5E5"> stripe and that can</font>

1365
01:38:33,369 --> 01:38:43,690
<font color="#E5E5E5">help you look</font><font color="#CCCCCC"> for problems</font><font color="#E5E5E5"> and say okay</font>

1366
01:38:36,639 --> 01:38:46,119
you<font color="#E5E5E5"> know where are my 404 errors and as</font>

1367
01:38:43,690 --> 01:38:47,820
you scroll through<font color="#E5E5E5"> you see the colors</font>

1368
01:38:46,119 --> 01:38:50,589
<font color="#E5E5E5">over here on the right</font>

1369
01:38:47,820 --> 01:39:00,849
changing and updating<font color="#CCCCCC"> based on where we</font>

1370
01:38:50,590 --> 01:39:03,969
<font color="#CCCCCC">currently</font><font color="#E5E5E5"> are yes yep that's exactly</font>

1371
01:39:00,849 --> 01:39:06,610
<font color="#CCCCCC">what it does</font><font color="#E5E5E5"> is it applies</font><font color="#CCCCCC"> the coloring</font>

1372
01:39:03,969 --> 01:39:10,000
rules in order<font color="#CCCCCC"> of the first one that</font>

1373
01:39:06,610 --> 01:39:12,280
matches<font color="#CCCCCC"> so if a coloring rule is at the</font>

1374
01:39:10,000 --> 01:39:14,320
very top<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> matches</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> will apply</font>

1375
01:39:12,280 --> 01:39:15,820
<font color="#CCCCCC">that</font><font color="#E5E5E5"> one and then it stops looking at</font>

1376
01:39:14,320 --> 01:39:18,790
all of<font color="#E5E5E5"> the others and it won't try to</font>

1377
01:39:15,820 --> 01:39:20,769
apply<font color="#E5E5E5"> anything below</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> if it gets</font>

1378
01:39:18,790 --> 01:39:22,300
through<font color="#CCCCCC"> the</font><font color="#E5E5E5"> whole list and there was</font>

1379
01:39:20,770 --> 01:39:25,329
nothing matching then it'll use the

1380
01:39:22,300 --> 01:39:28,780
default color which is probably white in

1381
01:39:25,329 --> 01:39:32,019
<font color="#E5E5E5">black so the order does matter</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> your</font>

1382
01:39:28,780 --> 01:39:33,849
coloring rules and a great<font color="#E5E5E5"> example you</font>

1383
01:39:32,020 --> 01:39:38,710
know we have this one right<font color="#E5E5E5"> here we just</font>

1384
01:39:33,849 --> 01:39:41,730
<font color="#E5E5E5">did the HTTP errors</font><font color="#CCCCCC"> if we go back into</font>

1385
01:39:38,710 --> 01:39:41,730
our coloring rules

1386
01:39:49,300 --> 01:40:00,010
if we put this<font color="#CCCCCC"> one below HTTP now</font><font color="#E5E5E5"> HTTP</font>

1387
01:39:56,860 --> 01:40:02,830
is always going<font color="#E5E5E5"> to match a packet</font><font color="#CCCCCC"> that</font>

1388
01:40:00,010 --> 01:40:05,770
it's also HTTP response code<font color="#E5E5E5"> and so</font>

1389
01:40:02,830 --> 01:40:08,740
<font color="#E5E5E5">we'll never see a yellow colored packet</font>

1390
01:40:05,770 --> 01:40:19,980
because<font color="#E5E5E5"> it'll get matched by this green</font>

1391
01:40:08,740 --> 01:40:19,980
<font color="#E5E5E5">colored packet first and we can verify</font>

1392
01:40:25,889 --> 01:40:27,949
you

1393
01:40:29,970 --> 01:40:34,500
filtered back to those<font color="#CCCCCC"> four or</font><font color="#E5E5E5"> fours and</font>

1394
01:40:32,430 --> 01:40:38,100
they're just the green with<font color="#E5E5E5"> the black</font>

1395
01:40:34,500 --> 01:40:39,590
text<font color="#CCCCCC"> so order matters and used to think</font>

1396
01:40:38,100 --> 01:40:42,590
about<font color="#CCCCCC"> that when</font><font color="#E5E5E5"> you're creating your</font>

1397
01:40:39,590 --> 01:40:42,590
<font color="#E5E5E5">filters</font>

1398
01:40:45,890 --> 01:41:01,520
okay so here's another you try it<font color="#E5E5E5"> get</font>

1399
01:40:51,180 --> 01:41:06,180
<font color="#E5E5E5">rid of our magnifying glass same file</font>

1400
01:41:01,520 --> 01:41:09,960
let's color of the<font color="#CCCCCC"> SSH</font><font color="#E5E5E5"> traffic and color</font>

1401
01:41:06,180 --> 01:41:12,000
<font color="#CCCCCC">all traffic on</font><font color="#E5E5E5"> port 443 and how you want</font>

1402
01:41:09,960 --> 01:41:15,090
<font color="#E5E5E5">to color them you know red blue</font><font color="#CCCCCC"> green</font>

1403
01:41:12,000 --> 01:41:17,810
purple<font color="#E5E5E5"> whatever I don't</font><font color="#CCCCCC"> care just create</font>

1404
01:41:15,090 --> 01:41:17,810
some coloring<font color="#CCCCCC"> routes</font>

1405
01:41:40,180 --> 01:41:42,240
you

1406
01:42:13,949 --> 01:42:31,888
<font color="#CCCCCC">should be under view yeah</font>

1407
01:42:51,310 --> 01:42:53,370
you

1408
01:43:53,389 --> 01:44:05,090
<font color="#E5E5E5">okay any questions</font><font color="#CCCCCC"> on coloring rules so</font>

1409
01:44:02,000 --> 01:44:07,699
it's for things<font color="#E5E5E5"> like this is why I</font>

1410
01:44:05,090 --> 01:44:09,469
<font color="#CCCCCC">recommend creating</font><font color="#E5E5E5"> those demo profiles</font>

1411
01:44:07,699 --> 01:44:11,750
because<font color="#E5E5E5"> if you're anything like me and</font>

1412
01:44:09,469 --> 01:44:13,429
<font color="#CCCCCC">I'm just you know in a hurry creating</font>

1413
01:44:11,750 --> 01:44:15,980
some coloring rules I end up with ugly

1414
01:44:13,429 --> 01:44:18,739
colors that I don't want to<font color="#E5E5E5"> keep around</font>

1415
01:44:15,980 --> 01:44:20,599
so hopefully you did that in a you<font color="#E5E5E5"> know</font>

1416
01:44:18,739 --> 01:44:27,230
demo profile that you<font color="#E5E5E5"> can just throw</font>

1417
01:44:20,600 --> 01:44:29,090
<font color="#CCCCCC">away alright so we spent a ton of time</font>

1418
01:44:27,230 --> 01:44:31,638
<font color="#E5E5E5">talking about the interface and we've</font>

1419
01:44:29,090 --> 01:44:33,770
looked<font color="#CCCCCC"> at</font><font color="#E5E5E5"> you know a few things that you</font>

1420
01:44:31,639 --> 01:44:35,360
can<font color="#E5E5E5"> do to customize the interface</font><font color="#CCCCCC"> and</font>

1421
01:44:33,770 --> 01:44:39,650
some of the things you can learn<font color="#E5E5E5"> now</font>

1422
01:44:35,360 --> 01:44:41,570
let's actually use Wireshark to analyze

1423
01:44:39,650 --> 01:44:44,989
some protocols<font color="#E5E5E5"> we answered some</font>

1424
01:44:41,570 --> 01:44:48,409
<font color="#CCCCCC">questions with it</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> let's go</font><font color="#E5E5E5"> into more</font>

1425
01:44:44,989 --> 01:44:49,940
detail on different protocols<font color="#E5E5E5"> and things</font>

1426
01:44:48,409 --> 01:44:52,960
that<font color="#E5E5E5"> you might be</font><font color="#CCCCCC"> interested</font><font color="#E5E5E5"> in learning</font>

1427
01:44:49,940 --> 01:44:56,419
<font color="#E5E5E5">when you're looking at your traffic</font>

1428
01:44:52,960 --> 01:45:02,530
<font color="#CCCCCC">we'll cover these protocols in different</font>

1429
01:44:56,420 --> 01:45:09,230
<font color="#E5E5E5">levels of detail Ethernet as our layer 2</font>

1430
01:45:02,530 --> 01:45:11,559
protocol<font color="#E5E5E5"> ARP to help manage</font><font color="#CCCCCC"> write</font>

1431
01:45:09,230 --> 01:45:15,980
<font color="#E5E5E5">network addresses and MAC addresses</font>

1432
01:45:11,560 --> 01:45:20,020
<font color="#CCCCCC">we'll look at our IP protocol mm-hmm I</font>

1433
01:45:15,980 --> 01:45:23,360
think these<font color="#CCCCCC"> base signs are almost 99%</font>

1434
01:45:20,020 --> 01:45:24,790
ipv4<font color="#E5E5E5"> traffic</font><font color="#CCCCCC"> that will mostly focus</font><font color="#E5E5E5"> on</font>

1435
01:45:23,360 --> 01:45:32,509
that

1436
01:45:24,790 --> 01:45:34,400
ICMP<font color="#E5E5E5"> UDP TCP HTTP there's you know tons</font>

1437
01:45:32,510 --> 01:45:38,150
<font color="#CCCCCC">other protocols</font><font color="#E5E5E5"> and like I said this</font>

1438
01:45:34,400 --> 01:45:41,330
isn't<font color="#E5E5E5"> so much a let's learn about these</font>

1439
01:45:38,150 --> 01:45:45,070
protocols<font color="#E5E5E5"> as a let's learn about how to</font>

1440
01:45:41,330 --> 01:45:45,070
look at<font color="#E5E5E5"> these protocols with Wireshark</font>

1441
01:45:45,940 --> 01:45:52,699
<font color="#CCCCCC">ok so we're back to</font><font color="#E5E5E5"> this network picture</font>

1442
01:45:49,000 --> 01:45:55,070
if you<font color="#E5E5E5"> remember we said you can only</font>

1443
01:45:52,699 --> 01:45:57,919
<font color="#E5E5E5">capture what you can see how do you know</font>

1444
01:45:55,070 --> 01:45:59,840
what you can see well to know<font color="#E5E5E5"> that you</font>

1445
01:45:57,920 --> 01:46:01,550
have to understand the protocols that

1446
01:45:59,840 --> 01:46:04,070
<font color="#CCCCCC">are at work and how our networks are</font>

1447
01:46:01,550 --> 01:46:07,720
working so if

1448
01:46:04,070 --> 01:46:09,259
assuming these boxes are switches they

1449
01:46:07,720 --> 01:46:12,260
route

1450
01:46:09,260 --> 01:46:16,400
<font color="#CCCCCC">well they</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> right they direct</font>

1451
01:46:12,260 --> 01:46:20,540
traffic<font color="#E5E5E5"> based off the MAC</font><font color="#CCCCCC"> address</font><font color="#E5E5E5"> if</font>

1452
01:46:16,400 --> 01:46:23,570
we're<font color="#E5E5E5"> using the Ethernet protocol what</font>

1453
01:46:20,540 --> 01:46:25,640
that means is that they look at<font color="#E5E5E5"> that</font>

1454
01:46:23,570 --> 01:46:27,230
packet that comes<font color="#E5E5E5"> in and they look at</font>

1455
01:46:25,640 --> 01:46:29,660
the source address<font color="#CCCCCC"> the</font><font color="#E5E5E5"> destination</font>

1456
01:46:27,230 --> 01:46:33,019
address<font color="#E5E5E5"> and they say oh this destination</font>

1457
01:46:29,660 --> 01:46:36,740
address is on this port it's on this

1458
01:46:33,020 --> 01:46:42,320
line and it sends it to that device<font color="#E5E5E5"> and</font>

1459
01:46:36,740 --> 01:46:44,750
none<font color="#CCCCCC"> of the others right it doesn't look</font>

1460
01:46:42,320 --> 01:46:49,490
at the<font color="#E5E5E5"> IP address our Ethernet protocol</font>

1461
01:46:44,750 --> 01:46:51,410
<font color="#E5E5E5">and our routing at our layer 2 switches</font>

1462
01:46:49,490 --> 01:46:53,090
<font color="#E5E5E5">they don't care what the IP address</font><font color="#CCCCCC"> is I</font>

1463
01:46:51,410 --> 01:46:54,650
<font color="#E5E5E5">pick address can be anything it wants</font>

1464
01:46:53,090 --> 01:46:56,810
<font color="#E5E5E5">all it does is it</font><font color="#CCCCCC"> looks at that</font><font color="#E5E5E5"> MAC</font>

1465
01:46:54,650 --> 01:46:59,240
address<font color="#CCCCCC"> and says is</font><font color="#E5E5E5"> this in my</font><font color="#CCCCCC"> table</font><font color="#E5E5E5"> if</font>

1466
01:46:56,810 --> 01:47:00,710
yes<font color="#CCCCCC"> you know send it to this port</font><font color="#E5E5E5"> if I</font>

1467
01:46:59,240 --> 01:47:04,960
don't know<font color="#CCCCCC"> about it send it</font><font color="#E5E5E5"> to everyone</font>

1468
01:47:00,710 --> 01:47:04,960
<font color="#E5E5E5">and how I figure out where</font><font color="#CCCCCC"> to send it</font>

1469
01:47:07,030 --> 01:47:17,900
so let's look at ARP<font color="#E5E5E5"> in conjunction with</font>

1470
01:47:12,280 --> 01:47:22,040
<font color="#CCCCCC">Ethernet</font><font color="#E5E5E5"> our is our address</font><font color="#CCCCCC"> resolution</font>

1471
01:47:17,900 --> 01:47:24,019
protocol and it's the way that<font color="#E5E5E5"> we take</font>

1472
01:47:22,040 --> 01:47:27,710
an IP<font color="#CCCCCC"> address and we find a</font>

1473
01:47:24,020 --> 01:47:33,260
corresponding<font color="#E5E5E5"> MAC address and</font><font color="#CCCCCC"> we say hey</font>

1474
01:47:27,710 --> 01:47:35,750
I'm back to our network picture on this

1475
01:47:33,260 --> 01:47:42,080
computer number<font color="#E5E5E5"> 12 and I know I need</font><font color="#CCCCCC"> to</font>

1476
01:47:35,750 --> 01:47:45,470
talk<font color="#E5E5E5"> to the IP address of my internet</font>

1477
01:47:42,080 --> 01:47:48,680
server well to do that<font color="#E5E5E5"> I have to go</font>

1478
01:47:45,470 --> 01:47:51,530
through my router<font color="#E5E5E5"> my default gateway</font><font color="#CCCCCC"> so</font>

1479
01:47:48,680 --> 01:47:54,320
it's gonna say<font color="#E5E5E5"> I need to</font><font color="#CCCCCC"> know the MAC</font>

1480
01:47:51,530 --> 01:47:57,320
<font color="#CCCCCC">address</font><font color="#E5E5E5"> of my default gateway</font><font color="#CCCCCC"> so that I</font>

1481
01:47:54,320 --> 01:48:00,799
can send<font color="#E5E5E5"> a packet that</font><font color="#CCCCCC"> the switch can</font>

1482
01:47:57,320 --> 01:48:02,269
understand and get<font color="#E5E5E5"> it there ARP is how</font>

1483
01:48:00,800 --> 01:48:04,490
we're going to<font color="#E5E5E5"> do that we're going</font><font color="#CCCCCC"> to</font>

1484
01:48:02,270 --> 01:48:06,110
<font color="#E5E5E5">say I know the IP address of</font><font color="#CCCCCC"> my default</font>

1485
01:48:04,490 --> 01:48:08,780
<font color="#E5E5E5">gateway</font><font color="#CCCCCC"> because it was provided to</font><font color="#E5E5E5"> me</font>

1486
01:48:06,110 --> 01:48:11,030
<font color="#CCCCCC">through DHCP or it was configured</font>

1487
01:48:08,780 --> 01:48:13,370
statically or<font color="#E5E5E5"> whatever but I don't</font><font color="#CCCCCC"> know</font>

1488
01:48:11,030 --> 01:48:15,889
the MAC<font color="#CCCCCC"> address</font><font color="#E5E5E5"> so here's this IP</font>

1489
01:48:13,370 --> 01:48:17,180
address<font color="#CCCCCC"> who has the corresponding Mac</font>

1490
01:48:15,890 --> 01:48:21,950
dress<font color="#E5E5E5"> whose is it</font>

1491
01:48:17,180 --> 01:48:24,860
what is it<font color="#E5E5E5"> that's what</font><font color="#CCCCCC"> our does so</font>

1492
01:48:21,950 --> 01:48:25,519
normally we see<font color="#E5E5E5"> this process</font><font color="#CCCCCC"> send out a</font>

1493
01:48:24,860 --> 01:48:27,769
<font color="#E5E5E5">request</font>

1494
01:48:25,520 --> 01:48:30,410
who has this IP address<font color="#CCCCCC"> we get back a</font>

1495
01:48:27,770 --> 01:48:32,080
response<font color="#CCCCCC"> oh that's me and here's my MAC</font>

1496
01:48:30,410 --> 01:48:34,940
address

1497
01:48:32,080 --> 01:48:38,390
sometimes we see what we call<font color="#E5E5E5"> gratuitous</font>

1498
01:48:34,940 --> 01:48:40,339
<font color="#CCCCCC">Arps where no</font><font color="#E5E5E5"> one asked for the IP</font>

1499
01:48:38,390 --> 01:48:43,220
address we're just announcing to the

1500
01:48:40,340 --> 01:48:45,140
world<font color="#CCCCCC"> in case anyone's wondering</font><font color="#E5E5E5"> I have</font>

1501
01:48:43,220 --> 01:48:47,420
this<font color="#E5E5E5"> IP address and this is my MAC</font>

1502
01:48:45,140 --> 01:48:54,860
address<font color="#E5E5E5"> and</font><font color="#CCCCCC"> we call that a gratuitous</font>

1503
01:48:47,420 --> 01:48:57,500
<font color="#E5E5E5">ARP so let's pull up your baseline</font>

1504
01:48:54,860 --> 01:49:01,370
capture filter so<font color="#CCCCCC"> that you're just</font>

1505
01:48:57,500 --> 01:49:06,260
<font color="#E5E5E5">looking for ARP packets looking at our</font>

1506
01:49:01,370 --> 01:49:09,380
packets<font color="#E5E5E5"> and then see if you can identify</font>

1507
01:49:06,260 --> 01:49:14,710
the normal<font color="#E5E5E5"> request response pairs versus</font>

1508
01:49:09,380 --> 01:49:14,710
<font color="#E5E5E5">the gratuitous ARP packets</font>

1509
01:50:05,579 --> 01:50:10,429
okay so I've<font color="#E5E5E5"> filtered</font>

1510
01:50:19,000 --> 01:50:27,550
- my ARP protocol and I come<font color="#CCCCCC"> up with</font><font color="#E5E5E5"> a</font>

1511
01:50:23,860 --> 01:50:32,019
list of packets and down here at the

1512
01:50:27,550 --> 01:50:36,370
bottom<font color="#CCCCCC"> it tells me</font><font color="#E5E5E5"> you know 34 packets</font>

1513
01:50:32,020 --> 01:50:39,760
or 0.1% of my packets<font color="#CCCCCC"> our ARP packets in</font>

1514
01:50:36,370 --> 01:50:42,640
this capture file<font color="#E5E5E5"> and as I look through</font>

1515
01:50:39,760 --> 01:50:46,330
<font color="#E5E5E5">those I can see this request response</font>

1516
01:50:42,640 --> 01:50:56,530
pattern that<font color="#E5E5E5"> I talked about and so we</font>

1517
01:50:46,330 --> 01:51:02,050
see a request<font color="#E5E5E5"> from our five five one</font><font color="#CCCCCC"> ba8</font>

1518
01:50:56,530 --> 01:51:05,940
MAC address and<font color="#E5E5E5"> it's looking for IP</font>

1519
01:51:02,050 --> 01:51:09,700
address 3.1<font color="#E5E5E5"> this is the exact scenario</font>

1520
01:51:05,940 --> 01:51:11,919
<font color="#CCCCCC">we described in</font><font color="#E5E5E5"> the picture of we were</font>

1521
01:51:09,700 --> 01:51:16,530
looking for the<font color="#E5E5E5"> gateway routers IP</font>

1522
01:51:11,920 --> 01:51:19,570
address 3.1<font color="#E5E5E5"> is our gateway router and so</font>

1523
01:51:16,530 --> 01:51:21,429
3.34 is trying to communicate<font color="#E5E5E5"> with it to</font>

1524
01:51:19,570 --> 01:51:27,179
do so it needs to know what MAC address

1525
01:51:21,430 --> 01:51:27,180
to use and it sends<font color="#E5E5E5"> out this</font><font color="#CCCCCC"> ARP</font><font color="#E5E5E5"> request</font>

1526
01:51:27,540 --> 01:51:36,300
the good news is the very next packet is

1527
01:51:31,320 --> 01:51:41,590
the response<font color="#E5E5E5"> and it says you know</font>

1528
01:51:36,300 --> 01:51:45,760
192.168.0.1 is at this MAC address<font color="#CCCCCC"> now</font>

1529
01:51:41,590 --> 01:51:48,220
Wireshark<font color="#E5E5E5"> is providing this info summary</font>

1530
01:51:45,760 --> 01:51:53,220
<font color="#E5E5E5">this isn't what's actually in the packet</font>

1531
01:51:48,220 --> 01:51:53,220
if we look at this ARP protocol

1532
01:51:57,929 --> 01:52:04,350
what's actually in the packet is of

1533
01:52:00,750 --> 01:52:10,650
these<font color="#E5E5E5"> bytes down here and they all have</font>

1534
01:52:04,350 --> 01:52:12,840
<font color="#E5E5E5">meaning and if we expand out our address</font>

1535
01:52:10,650 --> 01:52:15,780
resolution protocol and click on<font color="#E5E5E5"> these</font>

1536
01:52:12,840 --> 01:52:21,570
different<font color="#E5E5E5"> fields we can see what the</font>

1537
01:52:15,780 --> 01:52:26,610
meaning<font color="#E5E5E5"> of each of those bytes are</font><font color="#CCCCCC"> and</font>

1538
01:52:21,570 --> 01:52:29,989
<font color="#CCCCCC">so we can say oh this 0 0</font><font color="#E5E5E5"> 0 1 it means</font>

1539
01:52:26,610 --> 01:52:34,259
something it means that we're using

1540
01:52:29,989 --> 01:52:40,739
Ethernet addresses<font color="#E5E5E5"> that our</font><font color="#CCCCCC"> Hardware</font>

1541
01:52:34,260 --> 01:52:42,750
type is Ethernet<font color="#E5E5E5"> ARP is can be used with</font>

1542
01:52:40,739 --> 01:52:45,839
lots of<font color="#E5E5E5"> different data link layer</font>

1543
01:52:42,750 --> 01:52:48,870
protocols same thing it could<font color="#E5E5E5"> be used</font>

1544
01:52:45,840 --> 01:52:53,070
with<font color="#CCCCCC"> different</font><font color="#E5E5E5"> network layer protocols</font>

1545
01:52:48,870 --> 01:52:57,120
<font color="#CCCCCC">so our</font><font color="#E5E5E5"> next two bytes this is 0 0 0 it</font>

1546
01:52:53,070 --> 01:52:58,830
is indicating that the network<font color="#E5E5E5"> layer</font>

1547
01:52:57,120 --> 01:53:03,599
protocol<font color="#E5E5E5"> we're trying to</font><font color="#CCCCCC"> resolve an</font>

1548
01:52:58,830 --> 01:53:07,170
address for is ipv4<font color="#E5E5E5"> and then a byte to</font>

1549
01:53:03,600 --> 01:53:10,800
say how big the address is MAC addresses

1550
01:53:07,170 --> 01:53:15,360
<font color="#CCCCCC">are 6 bytes long</font><font color="#E5E5E5"> ipv4 addresses are 4</font>

1551
01:53:10,800 --> 01:53:17,940
bytes<font color="#E5E5E5"> on so Wireshark provides a nice</font>

1552
01:53:15,360 --> 01:53:21,150
summary telling us what the packet means

1553
01:53:17,940 --> 01:53:23,969
and it provides us<font color="#CCCCCC"> the actual</font><font color="#E5E5E5"> details of</font>

1554
01:53:21,150 --> 01:53:27,230
what the bytes are and how to<font color="#E5E5E5"> interpret</font>

1555
01:53:23,969 --> 01:53:27,230
those bytes

1556
01:53:33,300 --> 01:53:39,420
to say<font color="#CCCCCC"> I</font><font color="#E5E5E5"> don't just want to filter art</font>

1557
01:53:36,750 --> 01:53:42,180
packets I want to find out the replies

1558
01:53:39,420 --> 01:53:45,690
<font color="#E5E5E5">so that I can</font><font color="#CCCCCC"> actually match up IP</font>

1559
01:53:42,180 --> 01:53:50,120
<font color="#E5E5E5">addresses and MAC addresses we could do</font>

1560
01:53:45,690 --> 01:53:50,120
that<font color="#E5E5E5"> and we can apply</font><font color="#CCCCCC"> this as a filter</font>

1561
01:53:52,190 --> 01:53:59,849
and so I can do the opcode<font color="#E5E5E5"> equals</font><font color="#CCCCCC"> to</font>

1562
01:53:56,720 --> 01:54:02,520
which<font color="#CCCCCC"> wire sharks</font><font color="#E5E5E5"> tell me as a reply</font>

1563
01:53:59,850 --> 01:54:05,850
<font color="#E5E5E5">and now when</font><font color="#CCCCCC"> I filter that all of the</font>

1564
01:54:02,520 --> 01:54:10,170
packets I see are replies<font color="#CCCCCC"> and I can use</font>

1565
01:54:05,850 --> 01:54:13,280
this for troubleshooting<font color="#E5E5E5"> problems and</font>

1566
01:54:10,170 --> 01:54:17,370
saying look why<font color="#CCCCCC"> can't I talk to my</font>

1567
01:54:13,280 --> 01:54:19,590
router<font color="#E5E5E5"> well can I even figure out what</font>

1568
01:54:17,370 --> 01:54:22,290
its MAC addresses do I see it here is

1569
01:54:19,590 --> 01:54:24,300
<font color="#E5E5E5">art working</font><font color="#CCCCCC"> correctly or is that where</font>

1570
01:54:22,290 --> 01:54:25,860
things<font color="#E5E5E5"> are</font><font color="#CCCCCC"> broken and that's</font><font color="#E5E5E5"> what</font>

1571
01:54:24,300 --> 01:54:27,660
Wireshark lets us do it lets us see

1572
01:54:25,860 --> 01:54:30,120
<font color="#CCCCCC">exactly what's being sent on in our</font>

1573
01:54:27,660 --> 01:54:32,580
network<font color="#CCCCCC"> it lets us drill</font><font color="#E5E5E5"> down and say</font>

1574
01:54:30,120 --> 01:54:34,440
here's<font color="#CCCCCC"> all this information just</font><font color="#E5E5E5"> show me</font>

1575
01:54:32,580 --> 01:54:37,860
that<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> just show me</font><font color="#CCCCCC"> the replies and</font>

1576
01:54:34,440 --> 01:54:46,889
now<font color="#E5E5E5"> here's my list of devices and here's</font>

1577
01:54:37,860 --> 01:54:51,679
their IP addresses<font color="#E5E5E5"> okay do we see any</font>

1578
01:54:46,890 --> 01:54:51,680
gratuitous<font color="#CCCCCC"> arts in this capture file</font>

1579
01:54:56,469 --> 01:55:15,550
what's that<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> so yeah if where</font><font color="#E5E5E5"> is</font>

1580
01:55:08,030 --> 01:55:18,889
<font color="#E5E5E5">that right here all of these replies</font>

1581
01:55:15,550 --> 01:55:21,619
<font color="#CCCCCC">there replies to a specific destination</font>

1582
01:55:18,889 --> 01:55:24,409
<font color="#E5E5E5">right someone asked the question</font><font color="#CCCCCC"> who has</font>

1583
01:55:21,619 --> 01:55:26,630
this IP<font color="#CCCCCC"> address and then</font><font color="#E5E5E5"> we get we're</font>

1584
01:55:24,409 --> 01:55:31,339
sending back<font color="#CCCCCC"> the answer so we're sending</font>

1585
01:55:26,630 --> 01:55:36,710
it to a specific<font color="#E5E5E5"> location the gratuitous</font>

1586
01:55:31,340 --> 01:55:42,350
ARP switch<font color="#E5E5E5"> we could quickly go</font><font color="#CCCCCC"> through</font>

1587
01:55:36,710 --> 01:55:45,889
the list all of these appear to be

1588
01:55:42,350 --> 01:55:47,869
replies and we could verify that with a

1589
01:55:45,889 --> 01:56:05,290
filter<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we could say well show me</font>

1590
01:55:47,869 --> 01:56:08,290
<font color="#E5E5E5">after opcode</font><font color="#CCCCCC"> two and ether and ER equals</font>

1591
01:56:05,290 --> 01:56:08,290
ffff

1592
01:56:22,179 --> 01:56:27,670
so that's our broadcast<font color="#E5E5E5"> address that</font>

1593
01:56:25,400 --> 01:56:33,769
means send this to everyone

1594
01:56:27,670 --> 01:56:37,159
and we see there<font color="#E5E5E5"> are none</font><font color="#CCCCCC"> we do let's</font>

1595
01:56:33,770 --> 01:56:47,420
clear in my filter<font color="#E5E5E5"> well keep it go back</font>

1596
01:56:37,159 --> 01:56:49,909
<font color="#E5E5E5">to filtering just ARP the questions we</font>

1597
01:56:47,420 --> 01:56:52,540
are<font color="#E5E5E5"> when we're looking for a particular</font>

1598
01:56:49,909 --> 01:57:03,860
<font color="#E5E5E5">address</font><font color="#CCCCCC"> you'll notice those are</font>

1599
01:56:52,540 --> 01:57:06,909
<font color="#E5E5E5">sometimes sent as a broadcast in</font>

1600
01:57:03,860 --> 01:57:10,690
particular this first one<font color="#E5E5E5"> we're saying</font>

1601
01:57:06,909 --> 01:57:13,429
who has<font color="#E5E5E5"> this IP address</font><font color="#CCCCCC"> I'm interested</font>

1602
01:57:10,690 --> 01:57:15,440
we don't know who has<font color="#CCCCCC"> it so we send it</font>

1603
01:57:13,429 --> 01:57:23,570
to<font color="#E5E5E5"> everyone</font><font color="#CCCCCC"> and the way we do that is</font>

1604
01:57:15,440 --> 01:57:29,299
through a broadcast<font color="#CCCCCC"> on this one</font><font color="#E5E5E5"> when we</font>

1605
01:57:23,570 --> 01:57:32,030
are asking about<font color="#E5E5E5"> IP address 34 you'll</font>

1606
01:57:29,300 --> 01:57:34,989
<font color="#E5E5E5">notice it</font><font color="#CCCCCC"> doesn't send it as a broadcast</font>

1607
01:57:32,030 --> 01:57:38,780
<font color="#E5E5E5">it's sending it to the device</font><font color="#CCCCCC"> that it</font>

1608
01:57:34,989 --> 01:57:40,099
thinks has that IP address<font color="#CCCCCC"> says I've</font>

1609
01:57:38,780 --> 01:57:42,559
<font color="#CCCCCC">already seen this before</font>

1610
01:57:40,100 --> 01:57:44,719
<font color="#CCCCCC">I just want to verify that</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

1611
01:57:42,560 --> 01:57:47,179
actually still correct<font color="#CCCCCC"> and so I'm going</font>

1612
01:57:44,719 --> 01:57:49,850
<font color="#CCCCCC">to send it to where I think it goes</font><font color="#E5E5E5"> and</font>

1613
01:57:47,179 --> 01:57:51,739
if they respond back then that's great

1614
01:57:49,850 --> 01:57:53,900
<font color="#CCCCCC">and I</font><font color="#E5E5E5"> don't have to flood the rest of my</font>

1615
01:57:51,739 --> 01:57:56,209
<font color="#E5E5E5">network by sending this packet</font><font color="#CCCCCC"> to</font>

1616
01:57:53,900 --> 01:57:57,559
everyone<font color="#E5E5E5"> I can target it and say you</font>

1617
01:57:56,210 --> 01:58:01,190
should have<font color="#CCCCCC"> this IP address</font>

1618
01:57:57,560 --> 01:58:03,409
do you still is it still yours<font color="#E5E5E5"> and if I</font>

1619
01:58:01,190 --> 01:58:05,059
<font color="#CCCCCC">don't get back a response then I can go</font>

1620
01:58:03,409 --> 01:58:07,759
back<font color="#CCCCCC"> and say okay well now let's</font><font color="#E5E5E5"> send it</font>

1621
01:58:05,060 --> 01:58:10,630
to<font color="#E5E5E5"> everyone and see who has this IP</font>

1622
01:58:07,760 --> 01:58:10,630
address currently

1623
01:58:18,560 --> 01:58:35,490
so yeah so in this capture file there is

1624
01:58:26,910 --> 01:58:38,910
<font color="#E5E5E5">no gratuitous</font><font color="#CCCCCC"> Arps alright so that</font>

1625
01:58:35,490 --> 01:58:42,719
broadcast we saw<font color="#E5E5E5"> I wasn't a reply back</font>

1626
01:58:38,910 --> 01:58:50,309
<font color="#E5E5E5">it it was a it</font><font color="#CCCCCC"> was a question out and</font>

1627
01:58:42,720 --> 01:58:52,500
those can be<font color="#CCCCCC"> broadcast so if</font><font color="#E5E5E5"> yeah if we</font>

1628
01:58:50,310 --> 01:59:04,580
do opcode equals<font color="#E5E5E5"> one that will show you</font>

1629
01:58:52,500 --> 01:59:07,440
all<font color="#CCCCCC"> the requests are code equals what</font>

1630
01:59:04,580 --> 01:59:10,800
and so it's not<font color="#E5E5E5"> doesn't have to be a</font>

1631
01:59:07,440 --> 01:59:19,410
broadcast<font color="#CCCCCC"> because they can be sent</font>

1632
01:59:10,800 --> 01:59:21,540
targeted<font color="#E5E5E5"> okay other questions about the</font>

1633
01:59:19,410 --> 01:59:25,080
<font color="#E5E5E5">ARP protocol or the things that we can</font>

1634
01:59:21,540 --> 01:59:33,000
look<font color="#E5E5E5"> at with Wireshark in relation to</font>

1635
01:59:25,080 --> 01:59:36,240
<font color="#E5E5E5">art we're building from the foundation</font>

1636
01:59:33,000 --> 01:59:37,440
up<font color="#E5E5E5"> in terms of our protocols so if if</font>

1637
01:59:36,240 --> 01:59:41,010
we're thinking<font color="#E5E5E5"> about using wireshark</font>

1638
01:59:37,440 --> 01:59:45,030
from a troubleshooting perspective we're

1639
01:59:41,010 --> 01:59:48,000
saying what's<font color="#E5E5E5"> the you know communication</font>

1640
01:59:45,030 --> 01:59:50,639
<font color="#CCCCCC">at the lowest level its</font><font color="#E5E5E5"> Ethernet and art</font>

1641
01:59:48,000 --> 01:59:52,890
and so if we were trying<font color="#CCCCCC"> to troubleshoot</font>

1642
01:59:50,640 --> 01:59:54,150
<font color="#CCCCCC">a problem and we wanted to take</font><font color="#E5E5E5"> that</font>

1643
01:59:52,890 --> 01:59:56,600
approach you<font color="#CCCCCC"> know a bottom-up approach</font>

1644
01:59:54,150 --> 01:59:59,219
and say well can<font color="#CCCCCC"> I at least communicate</font>

1645
01:59:56,600 --> 02:00:01,980
<font color="#E5E5E5">to my router can I at least figure out</font>

1646
01:59:59,220 --> 02:00:04,980
what my routers IP address and MAC

1647
02:00:01,980 --> 02:00:09,000
address pairing our ARP is the place

1648
02:00:04,980 --> 02:00:12,360
that<font color="#E5E5E5"> we would look for that from a</font>

1649
02:00:09,000 --> 02:00:15,270
<font color="#E5E5E5">security perspective</font><font color="#CCCCCC"> ARP</font><font color="#E5E5E5"> can be useful</font>

1650
02:00:12,360 --> 02:00:21,870
for<font color="#CCCCCC"> detecting man-in-the-middle attacks</font>

1651
02:00:15,270 --> 02:00:26,580
and<font color="#CCCCCC"> our poisoning or ARP spoofing and so</font>

1652
02:00:21,870 --> 02:00:27,320
we could use our art filters and say is

1653
02:00:26,580 --> 02:00:29,670
this

1654
02:00:27,320 --> 02:00:33,480
information matching<font color="#E5E5E5"> what's in my</font>

1655
02:00:29,670 --> 02:00:36,000
records<font color="#CCCCCC"> are the IP addresses shown here</font>

1656
02:00:33,480 --> 02:00:38,388
matching the MAC addresses<font color="#E5E5E5"> of my devices</font>

1657
02:00:36,000 --> 02:00:41,400
<font color="#CCCCCC">or is</font><font color="#E5E5E5"> someone else on my network</font>

1658
02:00:38,389 --> 02:00:46,290
<font color="#E5E5E5">pretending</font><font color="#CCCCCC"> to be my router</font><font color="#E5E5E5"> and trying to</font>

1659
02:00:41,400 --> 02:00:50,670
man in the<font color="#E5E5E5"> middle that way we probably</font>

1660
02:00:46,290 --> 02:00:52,590
won't<font color="#E5E5E5"> have</font><font color="#CCCCCC"> time today</font><font color="#E5E5E5"> but there's in the</font>

1661
02:00:50,670 --> 02:00:55,619
capture files you downloaded there's an

1662
02:00:52,590 --> 02:00:59,849
<font color="#CCCCCC">Advanced section and one of the capture</font>

1663
02:00:55,619 --> 02:01:02,089
files well two<font color="#CCCCCC"> of them are</font><font color="#E5E5E5"> related to</font>

1664
02:00:59,849 --> 02:01:02,090
<font color="#E5E5E5">ARP</font>

1665
02:01:11,989 --> 02:01:19,900
so in the fates<font color="#E5E5E5"> folder there's this</font><font color="#CCCCCC"> Mac</font>

1666
02:01:16,730 --> 02:01:23,750
off<font color="#E5E5E5"> flood and that has some interesting</font>

1667
02:01:19,900 --> 02:01:24,080
<font color="#E5E5E5">art packets and there's this man in the</font>

1668
02:01:23,750 --> 02:01:27,410
<font color="#E5E5E5">middle</font>

1669
02:01:24,080 --> 02:01:32,050
art poisoning capture<font color="#E5E5E5"> that also has some</font>

1670
02:01:27,410 --> 02:01:32,050
<font color="#E5E5E5">interesting stuff going</font><font color="#CCCCCC"> on with</font><font color="#E5E5E5"> ARP</font>

1671
02:01:44,209 --> 02:01:54,499
<font color="#E5E5E5">okay so let's keep moving up the chain</font>

1672
02:01:48,869 --> 02:01:54,499
<font color="#CCCCCC">and start talking</font><font color="#E5E5E5"> about the IP protocol</font>

1673
02:01:54,919 --> 02:01:59,880
similar<font color="#E5E5E5"> idea we're going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> load our</font>

1674
02:01:57,239 --> 02:02:03,598
pcap file same<font color="#CCCCCC"> one we've been</font><font color="#E5E5E5"> working</font>

1675
02:01:59,880 --> 02:02:06,659
with<font color="#E5E5E5"> now let's filter</font><font color="#CCCCCC"> to IP traffic</font><font color="#E5E5E5"> so</font>

1676
02:02:03,599 --> 02:02:08,610
<font color="#CCCCCC">that we only see traffic that's involved</font>

1677
02:02:06,659 --> 02:02:10,978
with<font color="#E5E5E5"> this protocol and let's look at</font>

1678
02:02:08,610 --> 02:02:12,659
<font color="#E5E5E5">some of</font><font color="#CCCCCC"> the things that go wrong</font><font color="#E5E5E5"> with IP</font>

1679
02:02:10,979 --> 02:02:15,619
traffic<font color="#CCCCCC"> so we're</font><font color="#E5E5E5"> going to look at</font>

1680
02:02:12,659 --> 02:02:20,268
fragmentation<font color="#E5E5E5"> we'll look at</font><font color="#CCCCCC"> time to live</font>

1681
02:02:15,619 --> 02:02:20,268
<font color="#E5E5E5">we'll look at</font><font color="#CCCCCC"> different IP options</font>

1682
02:02:35,059 --> 02:02:42,679
<font color="#CCCCCC">okay so I can apply an IP filter</font><font color="#E5E5E5"> and now</font>

1683
02:02:38,750 --> 02:02:45,559
all<font color="#CCCCCC"> of my</font><font color="#E5E5E5"> art packets are gone they're</font>

1684
02:02:42,679 --> 02:02:49,340
<font color="#E5E5E5">not displayed because they operate</font><font color="#CCCCCC"> below</font>

1685
02:02:45,559 --> 02:02:51,020
<font color="#CCCCCC">that Network layer and when</font><font color="#E5E5E5"> I wanted you</font>

1686
02:02:49,340 --> 02:02:52,489
know troubleshoot what's going on at the

1687
02:02:51,020 --> 02:02:54,440
network layer<font color="#E5E5E5"> I've already looked it up</font>

1688
02:02:52,489 --> 02:03:05,539
<font color="#CCCCCC">I'm done</font><font color="#E5E5E5"> with that I'm</font><font color="#CCCCCC"> ready</font><font color="#E5E5E5"> to look at</font>

1689
02:02:54,440 --> 02:03:09,348
my IP packets<font color="#E5E5E5"> hmm so one of the things</font>

1690
02:03:05,539 --> 02:03:13,239
that happens with<font color="#E5E5E5"> ipv4 in particular</font>

1691
02:03:09,349 --> 02:03:16,159
<font color="#E5E5E5">ipv6 doesn't suffer the same problem is</font>

1692
02:03:13,239 --> 02:03:18,589
fragmentation<font color="#CCCCCC"> that is our packets as</font>

1693
02:03:16,159 --> 02:03:20,480
<font color="#CCCCCC">they travel through the network they</font>

1694
02:03:18,590 --> 02:03:24,619
might<font color="#E5E5E5"> have to be split</font><font color="#CCCCCC"> up into smaller</font>

1695
02:03:20,480 --> 02:03:27,409
packets and the IP protocol has a way of

1696
02:03:24,619 --> 02:03:31,848
<font color="#CCCCCC">dealing</font><font color="#E5E5E5"> with that and it does it through</font>

1697
02:03:27,409 --> 02:03:35,960
<font color="#CCCCCC">the set through a couple fields</font><font color="#E5E5E5"> and a</font>

1698
02:03:31,849 --> 02:03:43,610
set of<font color="#E5E5E5"> flags so if I expand out the</font>

1699
02:03:35,960 --> 02:03:47,239
details on<font color="#CCCCCC"> my IP header</font><font color="#E5E5E5"> I can see things</font>

1700
02:03:43,610 --> 02:03:51,949
like oh it's ipv4<font color="#E5E5E5"> because it's got the</font>

1701
02:03:47,239 --> 02:03:53,959
<font color="#E5E5E5">four set</font><font color="#CCCCCC"> it's twenty bytes long</font><font color="#E5E5E5"> there's</font>

1702
02:03:51,949 --> 02:03:55,549
all kinds of information<font color="#E5E5E5"> but the ones</font>

1703
02:03:53,960 --> 02:03:58,219
<font color="#E5E5E5">that are interesting from a</font>

1704
02:03:55,550 --> 02:04:01,760
fragmentation perspective<font color="#CCCCCC"> is this</font>

1705
02:03:58,219 --> 02:04:05,539
identification<font color="#E5E5E5"> field so each IP packet</font>

1706
02:04:01,760 --> 02:04:08,659
gets<font color="#E5E5E5"> a number and if that packet gets</font>

1707
02:04:05,539 --> 02:04:10,789
fragmented<font color="#E5E5E5"> it keeps it same number so</font>

1708
02:04:08,659 --> 02:04:12,949
that<font color="#E5E5E5"> we know at the end</font><font color="#CCCCCC"> how to put it</font>

1709
02:04:10,789 --> 02:04:16,809
<font color="#E5E5E5">back together</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> oh all of the packets</font>

1710
02:04:12,949 --> 02:04:19,789
<font color="#E5E5E5">that</font><font color="#CCCCCC"> have number hex nine one zero eight</font>

1711
02:04:16,809 --> 02:04:31,429
belong<font color="#E5E5E5"> they were originally all the same</font>

1712
02:04:19,789 --> 02:04:36,829
packet this particular packet has a<font color="#CCCCCC"> one</font>

1713
02:04:31,429 --> 02:04:41,210
<font color="#E5E5E5">in this field right here</font><font color="#CCCCCC"> that indicates</font>

1714
02:04:36,829 --> 02:04:43,699
don't<font color="#E5E5E5"> fragment so we know this one</font>

1715
02:04:41,210 --> 02:04:45,980
hasn't<font color="#E5E5E5"> had any hasn't been fragmented</font>

1716
02:04:43,699 --> 02:04:46,739
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it's specifically</font><font color="#E5E5E5"> been</font><font color="#CCCCCC"> date</font>

1717
02:04:45,980 --> 02:04:50,700
designee

1718
02:04:46,739 --> 02:04:51,989
as don't<font color="#CCCCCC"> fragment which means if it's</font>

1719
02:04:50,700 --> 02:04:55,920
traveling<font color="#CCCCCC"> through the network and</font>

1720
02:04:51,989 --> 02:04:58,080
reaches a network<font color="#CCCCCC"> segment</font><font color="#E5E5E5"> that it's too</font>

1721
02:04:55,920 --> 02:05:00,930
<font color="#E5E5E5">large to travel on and it would normally</font>

1722
02:04:58,080 --> 02:05:03,930
<font color="#E5E5E5">have to</font><font color="#CCCCCC"> be fragmented</font><font color="#E5E5E5"> instead if this</font>

1723
02:05:00,930 --> 02:05:07,530
<font color="#CCCCCC">bits set it'll drop the packet and it'll</font>

1724
02:05:03,930 --> 02:05:09,150
say<font color="#E5E5E5"> well sorry it's too big to go on</font>

1725
02:05:07,530 --> 02:05:10,980
this<font color="#E5E5E5"> network and you've told me</font><font color="#CCCCCC"> I can't</font>

1726
02:05:09,150 --> 02:05:14,070
split it<font color="#E5E5E5"> up so the only thing I can do</font>

1727
02:05:10,980 --> 02:05:19,709
is<font color="#E5E5E5"> throw it away this is a great way for</font>

1728
02:05:14,070 --> 02:05:21,809
<font color="#E5E5E5">things to go</font><font color="#CCCCCC"> wrong</font><font color="#E5E5E5"> if you're working on</font>

1729
02:05:19,710 --> 02:05:24,120
this diverse network with the different

1730
02:05:21,810 --> 02:05:26,250
network segments<font color="#E5E5E5"> and you need</font>

1731
02:05:24,120 --> 02:05:29,760
fragmentation<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get it across and</font>

1732
02:05:26,250 --> 02:05:31,230
you've<font color="#CCCCCC"> said don't fragment well now your</font>

1733
02:05:29,760 --> 02:05:32,940
packets<font color="#E5E5E5"> aren't going to be</font><font color="#CCCCCC"> reaching your</font>

1734
02:05:31,230 --> 02:05:35,610
destination<font color="#CCCCCC"> and you'll be going what's</font>

1735
02:05:32,940 --> 02:05:37,950
going<font color="#CCCCCC"> on because</font><font color="#E5E5E5"> sometimes they might if</font>

1736
02:05:35,610 --> 02:05:42,110
it's a smaller packet and then you try

1737
02:05:37,950 --> 02:05:45,090
<font color="#CCCCCC">and send in a larger one and it drops</font>

1738
02:05:42,110 --> 02:05:48,360
most<font color="#E5E5E5"> IP packets will actually have this</font>

1739
02:05:45,090 --> 02:05:49,739
bit set because it's much<font color="#E5E5E5"> more efficient</font>

1740
02:05:48,360 --> 02:05:51,630
<font color="#CCCCCC">if you don't have to worry about</font>

1741
02:05:49,739 --> 02:05:54,150
<font color="#E5E5E5">fragmentation</font><font color="#CCCCCC"> you can just send the</font>

1742
02:05:51,630 --> 02:05:57,600
packet<font color="#E5E5E5"> make city faster to route things</font>

1743
02:05:54,150 --> 02:06:02,599
and so it's<font color="#E5E5E5"> common to see</font><font color="#CCCCCC"> it set</font><font color="#E5E5E5"> but it</font>

1744
02:05:57,600 --> 02:06:02,600
also can be<font color="#E5E5E5"> a source of your problems</font>

1745
02:06:03,950 --> 02:06:09,719
these other<font color="#E5E5E5"> two fields are more</font>

1746
02:06:06,840 --> 02:06:11,730
fragments<font color="#E5E5E5"> and our fragment offset go</font>

1747
02:06:09,719 --> 02:06:14,040
back to helping put the packet<font color="#E5E5E5"> back</font>

1748
02:06:11,730 --> 02:06:17,129
together<font color="#E5E5E5"> so if a packet gets fragmented</font>

1749
02:06:14,040 --> 02:06:19,050
<font color="#E5E5E5">we're going to keep track</font><font color="#CCCCCC"> of where it</font>

1750
02:06:17,130 --> 02:06:21,960
got fragmented<font color="#E5E5E5"> and we call that</font><font color="#CCCCCC"> our</font>

1751
02:06:19,050 --> 02:06:25,710
fragmentation offset how many bytes into

1752
02:06:21,960 --> 02:06:27,420
<font color="#E5E5E5">the packet is this piece well this one's</font>

1753
02:06:25,710 --> 02:06:30,090
zero bytes in because it's not

1754
02:06:27,420 --> 02:06:32,700
<font color="#E5E5E5">fragmented if we had the thousand byte</font>

1755
02:06:30,090 --> 02:06:36,210
packet and<font color="#CCCCCC"> we</font><font color="#E5E5E5"> split it half way at the</font>

1756
02:06:32,700 --> 02:06:38,670
<font color="#E5E5E5">500th byte the first piece would be</font>

1757
02:06:36,210 --> 02:06:42,630
<font color="#E5E5E5">offset zero and the second piece would</font>

1758
02:06:38,670 --> 02:06:44,700
<font color="#CCCCCC">be</font><font color="#E5E5E5"> offset</font><font color="#CCCCCC"> 500 and that's</font><font color="#E5E5E5"> nice because</font><font color="#CCCCCC"> if</font>

1759
02:06:42,630 --> 02:06:50,130
later we have<font color="#E5E5E5"> to further split that</font>

1760
02:06:44,700 --> 02:06:52,349
packet<font color="#CCCCCC"> into offset 500 and offset 700</font><font color="#E5E5E5"> we</font>

1761
02:06:50,130 --> 02:06:55,800
can do that<font color="#E5E5E5"> because it's just the byte</font>

1762
02:06:52,350 --> 02:06:58,080
<font color="#CCCCCC">number in the packet</font><font color="#E5E5E5"> and when we put</font><font color="#CCCCCC"> it</font>

1763
02:06:55,800 --> 02:07:00,650
<font color="#CCCCCC">back together now we know exactly which</font>

1764
02:06:58,080 --> 02:07:00,650
piece<font color="#CCCCCC"> goes where</font>

1765
02:07:07,939 --> 02:07:13,679
yeah so so jumbo packets<font color="#E5E5E5"> actually end up</font>

1766
02:07:12,570 --> 02:07:19,619
<font color="#E5E5E5">being</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little different because they</font>

1767
02:07:13,679 --> 02:07:21,630
use extra options but<font color="#E5E5E5"> it's yeah similar</font>

1768
02:07:19,619 --> 02:07:23,459
idea of you could actually come in and

1769
02:07:21,630 --> 02:07:26,309
<font color="#E5E5E5">look at Wireshark and see you know</font>

1770
02:07:23,459 --> 02:07:33,360
what's being said<font color="#CCCCCC"> and</font><font color="#E5E5E5"> why is this packet</font>

1771
02:07:26,309 --> 02:07:35,550
not making it and our more fragment lets

1772
02:07:33,360 --> 02:07:38,219
us know when we've reached the<font color="#E5E5E5"> last one</font>

1773
02:07:35,550 --> 02:07:42,899
<font color="#E5E5E5">because if you get some number you know</font>

1774
02:07:38,219 --> 02:07:44,820
<font color="#E5E5E5">pack it off set 200</font><font color="#CCCCCC"> and 500 and 700</font><font color="#E5E5E5"> how</font>

1775
02:07:42,899 --> 02:07:48,030
do you know there's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> a packet number</font>

1776
02:07:44,820 --> 02:07:50,820
<font color="#CCCCCC">1000 coming the way you know is when</font>

1777
02:07:48,030 --> 02:07:59,639
this<font color="#E5E5E5"> is set to</font><font color="#CCCCCC"> 1 then you know</font><font color="#E5E5E5"> oh that's</font>

1778
02:07:50,820 --> 02:08:02,159
the last fragment<font color="#CCCCCC"> okay this is one of my</font>

1779
02:07:59,639 --> 02:08:06,539
favorite fields<font color="#E5E5E5"> in the IP header is</font><font color="#CCCCCC"> the</font>

1780
02:08:02,159 --> 02:08:09,148
time to live field<font color="#E5E5E5"> it's just a number</font><font color="#CCCCCC"> in</font>

1781
02:08:06,539 --> 02:08:11,969
this<font color="#E5E5E5"> case it's you know the number 64</font>

1782
02:08:09,149 --> 02:08:14,909
but<font color="#E5E5E5"> that number will actually change as</font>

1783
02:08:11,969 --> 02:08:17,699
it moves through<font color="#E5E5E5"> your network every time</font>

1784
02:08:14,909 --> 02:08:22,348
it passes a router the router subtracts

1785
02:08:17,699 --> 02:08:24,478
<font color="#CCCCCC">1 from that number and so if you've gone</font>

1786
02:08:22,349 --> 02:08:28,590
through<font color="#E5E5E5"> you know</font><font color="#CCCCCC"> three routers at the</font>

1787
02:08:24,479 --> 02:08:30,510
end it would have number 61<font color="#E5E5E5"> because</font>

1788
02:08:28,590 --> 02:08:35,340
<font color="#CCCCCC">you've each router will have subtracted</font>

1789
02:08:30,510 --> 02:08:38,219
<font color="#CCCCCC">one from that number people do fun</font>

1790
02:08:35,340 --> 02:08:41,880
things with<font color="#E5E5E5"> this like figure out how far</font>

1791
02:08:38,219 --> 02:08:44,999
<font color="#CCCCCC">away the server is by specifically</font>

1792
02:08:41,880 --> 02:08:47,519
setting the time to live<font color="#CCCCCC"> to a small</font>

1793
02:08:44,999 --> 02:08:50,188
<font color="#E5E5E5">value and saying well what</font><font color="#CCCCCC"> if I</font><font color="#E5E5E5"> just say</font>

1794
02:08:47,519 --> 02:08:53,340
<font color="#E5E5E5">time to live is one and try sending a</font>

1795
02:08:50,189 --> 02:08:56,550
packet if it reaches the destination<font color="#CCCCCC"> I</font>

1796
02:08:53,340 --> 02:08:58,769
know that destination is on<font color="#E5E5E5"> my same</font>

1797
02:08:56,550 --> 02:09:01,739
network<font color="#E5E5E5"> but if it doesn't reach the</font>

1798
02:08:58,769 --> 02:09:04,199
<font color="#E5E5E5">destination well it must have been</font>

1799
02:09:01,739 --> 02:09:06,688
<font color="#E5E5E5">further away</font><font color="#CCCCCC"> so I know it's at least one</font>

1800
02:09:04,199 --> 02:09:08,938
<font color="#E5E5E5">step away</font><font color="#CCCCCC"> now I could send another</font>

1801
02:09:06,689 --> 02:09:11,820
packet with the<font color="#CCCCCC"> time to live of two</font><font color="#E5E5E5"> and</font>

1802
02:09:08,939 --> 02:09:14,570
if it reaches the destination<font color="#CCCCCC"> now I know</font>

1803
02:09:11,820 --> 02:09:17,639
it's two steps away

1804
02:09:14,570 --> 02:09:19,410
well what if it did let's set<font color="#CCCCCC"> 1 was the</font>

1805
02:09:17,640 --> 02:09:21,600
time<font color="#CCCCCC"> to live of 3 and</font><font color="#E5E5E5"> we can</font>

1806
02:09:19,410 --> 02:09:26,300
<font color="#CCCCCC">progressively increase our time to live</font>

1807
02:09:21,600 --> 02:09:29,730
<font color="#CCCCCC">to figure out how far away</font><font color="#E5E5E5"> a server is</font>

1808
02:09:26,300 --> 02:09:34,590
this is<font color="#E5E5E5"> exactly what the traceroute</font>

1809
02:09:29,730 --> 02:09:37,830
utility<font color="#E5E5E5"> does it sends out successive</font>

1810
02:09:34,590 --> 02:09:40,620
<font color="#E5E5E5">packets each time incrementing the time</font>

1811
02:09:37,830 --> 02:09:45,500
<font color="#E5E5E5">to live field so</font><font color="#CCCCCC"> that you can figure out</font>

1812
02:09:40,620 --> 02:09:49,410
how<font color="#E5E5E5"> far away your destination is and</font>

1813
02:09:45,500 --> 02:09:51,360
using ICMP<font color="#E5E5E5"> it'll actually get back</font>

1814
02:09:49,410 --> 02:09:55,830
responses from the routers along<font color="#E5E5E5"> the way</font>

1815
02:09:51,360 --> 02:09:57,960
if you haven't blocked them and figure

1816
02:09:55,830 --> 02:10:00,750
<font color="#CCCCCC">out not only how far away it is but what</font>

1817
02:09:57,960 --> 02:10:12,240
router names<font color="#E5E5E5"> are between you and the</font>

1818
02:10:00,750 --> 02:10:14,280
server<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> hmm let's see</font>

1819
02:10:12,240 --> 02:10:20,519
<font color="#E5E5E5">was there one other one on</font><font color="#CCCCCC"> the list oh</font><font color="#E5E5E5"> I</font>

1820
02:10:14,280 --> 02:10:23,219
<font color="#E5E5E5">P options so we had this field up here</font>

1821
02:10:20,520 --> 02:10:27,120
<font color="#CCCCCC">that told us how long</font><font color="#E5E5E5"> our header was and</font>

1822
02:10:23,220 --> 02:10:29,490
it was 20 bytes long that's a standard

1823
02:10:27,120 --> 02:10:31,680
IP header that means it has all the

1824
02:10:29,490 --> 02:10:36,059
standard<font color="#E5E5E5"> information that every IP</font>

1825
02:10:31,680 --> 02:10:39,180
packet has you can have options in your

1826
02:10:36,060 --> 02:10:41,160
packets<font color="#E5E5E5"> and if you do this number would</font>

1827
02:10:39,180 --> 02:10:46,350
be<font color="#E5E5E5"> bigger because you'd have more bytes</font>

1828
02:10:41,160 --> 02:10:48,710
<font color="#E5E5E5">for those options things like jumbo</font>

1829
02:10:46,350 --> 02:10:52,350
packets<font color="#E5E5E5"> can be done through options</font>

1830
02:10:48,710 --> 02:10:54,870
<font color="#CCCCCC">things like source and routing</font><font color="#E5E5E5"> can be</font>

1831
02:10:52,350 --> 02:10:59,880
done through IP options most<font color="#E5E5E5"> of the time</font>

1832
02:10:54,870 --> 02:11:12,559
you won't<font color="#E5E5E5"> see options in fact if we</font>

1833
02:10:59,880 --> 02:11:17,940
filter for IP header length not equal to

1834
02:11:12,560 --> 02:11:20,250
20 bytes<font color="#CCCCCC"> oh</font><font color="#E5E5E5"> this is a good example see</font>

1835
02:11:17,940 --> 02:11:22,460
how it turned yellow on me when I put in

1836
02:11:20,250 --> 02:11:22,460
this

1837
02:11:23,700 --> 02:11:30,780
filter<font color="#CCCCCC"> it means syntactically</font><font color="#E5E5E5"> it's</font>

1838
02:11:27,700 --> 02:11:34,269
correct<font color="#E5E5E5"> but it's likely not what you're</font>

1839
02:11:30,780 --> 02:11:36,490
<font color="#E5E5E5">expecting and let's go ahead and</font><font color="#CCCCCC"> apply</font>

1840
02:11:34,270 --> 02:11:39,880
it and we'll see why it's<font color="#CCCCCC"> not what we're</font>

1841
02:11:36,490 --> 02:11:54,460
expecting<font color="#E5E5E5"> so it's not what we're</font>

1842
02:11:39,880 --> 02:11:57,450
expecting<font color="#CCCCCC"> because it includes oh yes we</font>

1843
02:11:54,460 --> 02:11:57,450
got<font color="#E5E5E5"> away okay</font>

1844
02:11:58,410 --> 02:12:05,099
it would<font color="#E5E5E5"> include things like if it</font>

1845
02:12:01,360 --> 02:12:09,429
didn't have a header length field<font color="#E5E5E5"> at all</font>

1846
02:12:05,100 --> 02:12:15,130
<font color="#E5E5E5">then this would be included in that</font>

1847
02:12:09,430 --> 02:12:20,410
filter<font color="#E5E5E5"> the better way to do a not equals</font>

1848
02:12:15,130 --> 02:12:29,250
<font color="#CCCCCC">and usually get more of what you mean is</font>

1849
02:12:20,410 --> 02:12:29,250
to say not<font color="#E5E5E5"> IP header equals 20</font>

1850
02:12:33,989 --> 02:12:40,679
and so you'll notice<font color="#E5E5E5"> we did get a few</font>

1851
02:12:36,840 --> 02:12:44,520
<font color="#E5E5E5">packets 48 of our packets had a</font>

1852
02:12:40,680 --> 02:12:48,450
different header length<font color="#E5E5E5"> and they had you</font>

1853
02:12:44,520 --> 02:12:53,760
know<font color="#E5E5E5"> an extra</font><font color="#CCCCCC"> four bytes</font><font color="#E5E5E5"> which we can</font>

1854
02:12:48,450 --> 02:12:55,889
see down here<font color="#CCCCCC"> they have this options and</font>

1855
02:12:53,760 --> 02:12:59,510
in this case it's a router alert option

1856
02:12:55,890 --> 02:13:02,880
<font color="#CCCCCC">and so the reason it's</font><font color="#E5E5E5"> because these are</font>

1857
02:12:59,510 --> 02:13:07,680
<font color="#CCCCCC">IGMP group management</font><font color="#E5E5E5"> protocols and they</font>

1858
02:13:02,880 --> 02:13:09,680
have to alert the router to that fact

1859
02:13:07,680 --> 02:13:15,180
<font color="#CCCCCC">and so they're doing</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> an IP</font>

1860
02:13:09,680 --> 02:13:18,480
option like<font color="#E5E5E5"> I said most of your IP</font>

1861
02:13:15,180 --> 02:13:20,460
traffic<font color="#E5E5E5"> won't have any</font><font color="#CCCCCC"> option set so we</font>

1862
02:13:18,480 --> 02:13:26,700
can see what the filter<font color="#CCCCCC"> every once while</font>

1863
02:13:20,460 --> 02:13:29,219
<font color="#E5E5E5">you'll find an option questions about</font>

1864
02:13:26,700 --> 02:13:31,440
our IP protocol or things we might<font color="#E5E5E5"> be</font>

1865
02:13:29,219 --> 02:13:35,210
<font color="#E5E5E5">looking</font><font color="#CCCCCC"> for in Wireshark</font><font color="#E5E5E5"> when we're</font>

1866
02:13:31,440 --> 02:13:35,210
dealing<font color="#E5E5E5"> with our IP protocol</font>

1867
02:13:40,890 --> 02:13:46,560
one of the things you might do in terms

1868
02:13:42,840 --> 02:13:49,470
<font color="#E5E5E5">of</font><font color="#CCCCCC"> creating coloring rules is create a</font>

1869
02:13:46,560 --> 02:13:52,110
profile for<font color="#E5E5E5"> when you're specifically</font>

1870
02:13:49,470 --> 02:13:55,230
looking<font color="#CCCCCC"> at IP</font><font color="#E5E5E5"> traffic and then create</font>

1871
02:13:52,110 --> 02:13:57,929
coloring rules to match the<font color="#E5E5E5"> first packet</font>

1872
02:13:55,230 --> 02:14:00,000
of a fragment to match all of the<font color="#CCCCCC"> middle</font>

1873
02:13:57,930 --> 02:14:03,720
fragments and<font color="#E5E5E5"> to match the last fragment</font>

1874
02:14:00,000 --> 02:14:06,450
<font color="#CCCCCC">and then you can</font><font color="#E5E5E5"> visually see a green</font>

1875
02:14:03,720 --> 02:14:09,390
packet a bunch of<font color="#E5E5E5"> yellow packets and a</font>

1876
02:14:06,450 --> 02:14:11,429
red<font color="#CCCCCC"> packet and you know</font><font color="#E5E5E5"> oh you know</font><font color="#CCCCCC"> I</font>

1877
02:14:09,390 --> 02:14:14,370
<font color="#CCCCCC">got the first I got</font><font color="#E5E5E5"> the middle</font><font color="#CCCCCC"> I got the</font>

1878
02:14:11,430 --> 02:14:16,680
last<font color="#E5E5E5"> fragmentations working but if you</font>

1879
02:14:14,370 --> 02:14:20,849
saw a green packet and yellow packet and

1880
02:14:16,680 --> 02:14:22,290
no red packet you'd know there's

1881
02:14:20,850 --> 02:14:29,430
something wrong and<font color="#E5E5E5"> it's with the</font>

1882
02:14:22,290 --> 02:14:34,470
fragmentation another good<font color="#CCCCCC"> coloring</font><font color="#E5E5E5"> rule</font>

1883
02:14:29,430 --> 02:14:36,750
is the the time to live<font color="#E5E5E5"> if you're seeing</font>

1884
02:14:34,470 --> 02:14:39,930
a<font color="#CCCCCC"> very small time to live</font>

1885
02:14:36,750 --> 02:14:42,240
that's probably problematic<font color="#CCCCCC"> you don't</font>

1886
02:14:39,930 --> 02:14:44,700
want the time to live to<font color="#CCCCCC"> run out when</font><font color="#E5E5E5"> it</font>

1887
02:14:42,240 --> 02:14:46,530
<font color="#E5E5E5">runs out the packet dies the only time</font>

1888
02:14:44,700 --> 02:14:48,720
you<font color="#E5E5E5"> want it to run out</font><font color="#CCCCCC"> is specifically</font>

1889
02:14:46,530 --> 02:14:53,000
when you're doing<font color="#E5E5E5"> you know the trace</font>

1890
02:14:48,720 --> 02:14:53,000
right route<font color="#E5E5E5"> type functionality</font>

1891
02:15:03,709 --> 02:15:13,169
let's<font color="#E5E5E5"> say so there's one</font><font color="#CCCCCC"> other thing and</font>

1892
02:15:10,949 --> 02:15:17,728
it ties into the<font color="#CCCCCC"> next protocols we'll</font>

1893
02:15:13,169 --> 02:15:21,389
look at with IP<font color="#E5E5E5"> and that is the IP</font>

1894
02:15:17,729 --> 02:15:23,909
header<font color="#E5E5E5"> tells us what's coming next</font><font color="#CCCCCC"> so</font>

1895
02:15:21,389 --> 02:15:24,780
when we did a filter for UDP<font color="#CCCCCC"> or a filter</font>

1896
02:15:23,909 --> 02:15:29,039
<font color="#CCCCCC">for TCP</font>

1897
02:15:24,780 --> 02:15:31,949
how did Wireshark know what packets

1898
02:15:29,039 --> 02:15:35,659
matched<font color="#E5E5E5"> that filter well the way they</font>

1899
02:15:31,949 --> 02:15:38,989
knew is by looking<font color="#E5E5E5"> at the IP header and</font>

1900
02:15:35,659 --> 02:15:41,820
checking the type field<font color="#E5E5E5"> and each</font>

1901
02:15:38,989 --> 02:15:46,079
protocol gets a different<font color="#E5E5E5"> number and so</font>

1902
02:15:41,820 --> 02:15:56,579
UDP is number 17<font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> is number</font><font color="#CCCCCC"> 6</font>

1903
02:15:46,079 --> 02:15:57,599
ICMP<font color="#E5E5E5"> is number 1 and this is just a few</font>

1904
02:15:56,579 --> 02:15:59,849
<font color="#CCCCCC">of them you'll notice there's a whole</font>

1905
02:15:57,599 --> 02:16:01,769
bunch<font color="#E5E5E5"> of gaps in</font><font color="#CCCCCC"> between for all</font><font color="#E5E5E5"> kinds</font>

1906
02:15:59,849 --> 02:16:04,919
of other<font color="#E5E5E5"> random protocols if you're</font>

1907
02:16:01,769 --> 02:16:10,619
interested here's the whole<font color="#E5E5E5"> list of all</font>

1908
02:16:04,919 --> 02:16:15,709
the IP protocols<font color="#E5E5E5"> and their numbers that</font>

1909
02:16:10,619 --> 02:16:17,728
have been<font color="#E5E5E5"> assigned by</font><font color="#CCCCCC"> our by ia na</font>

1910
02:16:15,709 --> 02:16:26,898
institution of names and<font color="#E5E5E5"> numbers</font>

1911
02:16:17,729 --> 02:16:26,899
<font color="#CCCCCC">something like</font><font color="#E5E5E5"> that where's sir</font>

1912
02:16:28,920 --> 02:16:31,920
<font color="#E5E5E5">Eppie</font>

1913
02:16:40,820 --> 02:16:52,260
so this protocol<font color="#E5E5E5"> field hex 11 which</font><font color="#CCCCCC"> is</font>

1914
02:16:47,250 --> 02:16:56,099
decimal 17 tells us that UDP is the type

1915
02:16:52,260 --> 02:17:04,080
<font color="#CCCCCC">of packet that's being encapsulated in</font>

1916
02:16:56,099 --> 02:17:05,429
this IP header this is something<font color="#CCCCCC"> that</font>

1917
02:17:04,080 --> 02:17:10,289
you<font color="#E5E5E5"> don't have to worry about an</font>

1918
02:17:05,429 --> 02:17:15,090
attacker spoofing<font color="#CCCCCC"> in terms of if it's</font>

1919
02:17:10,290 --> 02:17:18,439
UDP traffic<font color="#E5E5E5"> it will have number 17</font><font color="#CCCCCC"> if</font>

1920
02:17:15,090 --> 02:17:21,929
it's TCP traffic<font color="#E5E5E5"> it will have number 6</font>

1921
02:17:18,439 --> 02:17:24,990
<font color="#E5E5E5">the port numbers like SSH ports and</font>

1922
02:17:21,929 --> 02:17:29,370
stuff those an attacker can change at

1923
02:17:24,990 --> 02:17:35,638
<font color="#CCCCCC">will but</font><font color="#E5E5E5"> these numbers are fixed as</font>

1924
02:17:29,370 --> 02:17:39,630
<font color="#CCCCCC">their it's how our IP stack interprets</font>

1925
02:17:35,638 --> 02:17:42,978
and knows what<font color="#E5E5E5"> protocol to give it for</font>

1926
02:17:39,629 --> 02:17:42,978
interpreting<font color="#E5E5E5"> the rest of the packet</font>

1927
02:17:52,840 --> 02:17:55,840
<font color="#E5E5E5">okay</font>

1928
02:17:57,670 --> 02:17:59,728
you

1929
02:18:00,250 --> 02:18:07,870
oh I thought there<font color="#E5E5E5"> were some in this one</font>

1930
02:18:03,818 --> 02:18:09,369
so let's look at ICMP next for a minute

1931
02:18:07,870 --> 02:18:20,340
<font color="#E5E5E5">to do so we'll have to</font><font color="#CCCCCC"> use a different</font>

1932
02:18:09,370 --> 02:18:20,340
<font color="#E5E5E5">capture file maybe not</font>

1933
02:18:32,129 --> 02:18:38,539
is it just my baseline file or do you

1934
02:18:34,439 --> 02:18:38,540
guys have any ICMP packets in your file

1935
02:18:38,990 --> 02:18:49,010
<font color="#E5E5E5">okay I don't know where they went</font>

1936
02:18:44,670 --> 02:18:52,250
that's okay so let's look at in the

1937
02:18:49,010 --> 02:18:52,250
advanced folder

1938
02:19:00,350 --> 02:19:07,040
do this nmap SN<font color="#E5E5E5"> baseline</font>

1939
02:19:21,510 --> 02:19:40,440
the nmap SN<font color="#E5E5E5"> baseline so we can add that</font>

1940
02:19:37,170 --> 02:19:54,330
<font color="#CCCCCC">to our notes here so we're working</font><font color="#E5E5E5"> with</font>

1941
02:19:40,440 --> 02:19:57,860
<font color="#E5E5E5">nmap SN baseline now and this one should</font>

1942
02:19:54,330 --> 02:19:57,860
<font color="#CCCCCC">have some is it not</font>

1943
02:20:19,319 --> 02:20:25,569
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> wanted</font><font color="#E5E5E5"> the one with the</font><font color="#CCCCCC"> bassline</font>

1944
02:20:22,779 --> 02:20:35,829
mixed in<font color="#E5E5E5"> but let's see if this one at</font>

1945
02:20:25,569 --> 02:20:39,840
least<font color="#E5E5E5"> has them all right we'll</font><font color="#CCCCCC"> use this</font>

1946
02:20:35,829 --> 02:20:39,840
one<font color="#CCCCCC"> so nmap SNP</font>

1947
02:20:54,811 --> 02:20:59,431
and if you<font color="#E5E5E5"> filter because there's some</font>

1948
02:20:56,940 --> 02:21:05,690
other traffic mostly ARP traffic and

1949
02:20:59,431 --> 02:21:15,120
this one it'll show you a whole<font color="#E5E5E5"> bunch of</font>

1950
02:21:05,690 --> 02:21:17,880
ICMP<font color="#E5E5E5"> packets ICMP is our</font><font color="#CCCCCC"> Internet</font>

1951
02:21:15,120 --> 02:21:23,790
control message protocol<font color="#E5E5E5"> so it's the</font>

1952
02:21:17,880 --> 02:21:30,740
protocol<font color="#CCCCCC"> that</font><font color="#E5E5E5"> lets the IP protocol did</font>

1953
02:21:23,790 --> 02:21:34,351
manage errors and do<font color="#CCCCCC"> management queries</font>

1954
02:21:30,740 --> 02:21:39,271
<font color="#E5E5E5">it's the protocol</font><font color="#CCCCCC"> that ping uses it's</font>

1955
02:21:34,351 --> 02:21:43,110
the protocol<font color="#CCCCCC"> that</font><font color="#E5E5E5"> traceroute uses or can</font>

1956
02:21:39,271 --> 02:21:46,920
use and it's the protocol<font color="#CCCCCC"> that you get</font>

1957
02:21:43,110 --> 02:21:51,800
error messages<font color="#E5E5E5"> about if there's a you</font>

1958
02:21:46,920 --> 02:21:54,450
know destination unreachable<font color="#E5E5E5"> or a if</font>

1959
02:21:51,800 --> 02:21:56,960
fragmentation is required<font color="#E5E5E5"> you'll get an</font>

1960
02:21:54,450 --> 02:22:03,570
error<font color="#CCCCCC"> message if it dropped the packet</font>

1961
02:21:56,960 --> 02:22:08,641
ICMP covers all<font color="#CCCCCC"> of that this capture</font>

1962
02:22:03,570 --> 02:22:13,141
file probably only<font color="#E5E5E5"> has one type of ICMP</font>

1963
02:22:08,641 --> 02:22:17,490
packet well two types but essentially

1964
02:22:13,141 --> 02:22:20,880
one so it has the echo<font color="#E5E5E5"> requests and the</font>

1965
02:22:17,490 --> 02:22:25,380
echo replies or<font color="#E5E5E5"> ping requests and ping</font>

1966
02:22:20,880 --> 02:22:28,561
replies and there are<font color="#E5E5E5"> simple ways of</font>

1967
02:22:25,380 --> 02:22:32,039
<font color="#E5E5E5">testing network connectivity when you</font>

1968
02:22:28,561 --> 02:22:33,869
ping a you know ping google.com<font color="#E5E5E5"> it sends</font>

1969
02:22:32,040 --> 02:22:36,420
<font color="#E5E5E5">out a packet</font><font color="#CCCCCC"> what kind of packets it's</font>

1970
02:22:33,870 --> 02:22:39,811
<font color="#E5E5E5">sending out it's sending out an ICMP</font>

1971
02:22:36,420 --> 02:22:41,730
echo request<font color="#E5E5E5"> and it's saying hey I'm</font>

1972
02:22:39,811 --> 02:22:44,520
just<font color="#E5E5E5"> sending you this packet can you</font>

1973
02:22:41,730 --> 02:22:48,090
echo it back<font color="#CCCCCC"> so I can verify that</font><font color="#E5E5E5"> the</font>

1974
02:22:44,521 --> 02:22:52,460
connectivity<font color="#E5E5E5"> from here to there is good</font>

1975
02:22:48,090 --> 02:22:56,040
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the nice thing about it is</font><font color="#E5E5E5"> that</font>

1976
02:22:52,460 --> 02:22:58,410
<font color="#E5E5E5">because it's at the</font><font color="#CCCCCC"> network layer</font><font color="#E5E5E5"> we</font>

1977
02:22:56,040 --> 02:23:00,420
don't have to worry<font color="#E5E5E5"> about if it's a</font>

1978
02:22:58,410 --> 02:23:01,830
problem<font color="#CCCCCC"> with something</font><font color="#E5E5E5"> else</font><font color="#CCCCCC"> you know is</font>

1979
02:23:00,420 --> 02:23:04,891
<font color="#E5E5E5">that</font><font color="#CCCCCC"> a problem with the port</font><font color="#E5E5E5"> not being</font>

1980
02:23:01,830 --> 02:23:07,431
open is it a problem<font color="#E5E5E5"> with the service</font>

1981
02:23:04,891 --> 02:23:09,381
not running it won't

1982
02:23:07,431 --> 02:23:12,681
<font color="#E5E5E5">those problems it'll only detect</font>

1983
02:23:09,381 --> 02:23:16,131
<font color="#E5E5E5">connectivity between you and the</font>

1984
02:23:12,681 --> 02:23:19,250
<font color="#CCCCCC">endpoint</font><font color="#E5E5E5"> and it's not perfect because</font>

1985
02:23:16,131 --> 02:23:20,270
<font color="#E5E5E5">the endpoint can choose to ignore you in</font>

1986
02:23:19,250 --> 02:23:22,131
which<font color="#E5E5E5"> case you</font><font color="#CCCCCC"> might still</font><font color="#E5E5E5"> have</font>

1987
02:23:20,271 --> 02:23:24,290
<font color="#CCCCCC">connectivity and they're just not</font>

1988
02:23:22,131 --> 02:23:26,480
telling<font color="#E5E5E5"> you but if you do get back a</font>

1989
02:23:24,290 --> 02:23:29,120
response<font color="#E5E5E5"> then you know there is</font>

1990
02:23:26,480 --> 02:23:37,971
connectivity<font color="#E5E5E5"> from your device to</font><font color="#CCCCCC"> the</font>

1991
02:23:29,120 --> 02:23:41,091
<font color="#E5E5E5">endpoint so ICMP packets they build on</font>

1992
02:23:37,971 --> 02:23:43,011
top<font color="#E5E5E5"> of</font><font color="#CCCCCC"> our IP packets they have your</font>

1993
02:23:41,091 --> 02:23:45,471
source and<font color="#CCCCCC"> destination addresses they</font>

1994
02:23:43,011 --> 02:23:48,471
have the fragmentation<font color="#E5E5E5"> and all that as</font>

1995
02:23:45,471 --> 02:23:51,619
part of our IP header and then<font color="#E5E5E5"> they have</font>

1996
02:23:48,471 --> 02:23:59,420
their<font color="#CCCCCC"> own additional extra information a</font>

1997
02:23:51,620 --> 02:24:02,030
type like an echo request<font color="#E5E5E5"> or an echo</font>

1998
02:23:59,420 --> 02:24:05,301
<font color="#E5E5E5">reply and you'll notice the number</font>

1999
02:24:02,030 --> 02:24:07,780
changed<font color="#E5E5E5"> there from zero to eight an</font>

2000
02:24:05,301 --> 02:24:07,779
<font color="#E5E5E5">eight to zero</font>

2001
02:24:08,261 --> 02:24:15,980
they have<font color="#CCCCCC"> identifier</font><font color="#E5E5E5"> x' and this is the</font>

2002
02:24:12,891 --> 02:24:17,811
exact same identifier it's just

2003
02:24:15,980 --> 02:24:20,750
Wireshark showing it to you two

2004
02:24:17,811 --> 02:24:23,539
different<font color="#E5E5E5"> ways so they</font><font color="#CCCCCC"> identifier it's</font>

2005
02:24:20,750 --> 02:24:27,410
<font color="#E5E5E5">five three five D or if you reverse the</font>

2006
02:24:23,540 --> 02:24:30,080
<font color="#E5E5E5">bytes</font><font color="#CCCCCC"> 5</font><font color="#E5E5E5"> D</font><font color="#CCCCCC"> five three and interpreted as</font>

2007
02:24:27,410 --> 02:24:32,900
a decimal<font color="#E5E5E5"> number</font><font color="#CCCCCC"> when they're ordered</font>

2008
02:24:30,080 --> 02:24:36,230
this way it's<font color="#E5E5E5"> 21</font><font color="#CCCCCC"> three four</font><font color="#E5E5E5"> one and</font><font color="#CCCCCC"> when</font>

2009
02:24:32,900 --> 02:24:39,410
they're ordered this<font color="#E5E5E5"> way 23</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> nine</font>

2010
02:24:36,230 --> 02:24:42,920
<font color="#E5E5E5">one so you know the</font><font color="#CCCCCC"> BER</font>

2011
02:24:39,410 --> 02:24:45,681
le<font color="#E5E5E5"> big-endian or little-endian which</font>

2012
02:24:42,920 --> 02:24:53,030
side of the<font color="#E5E5E5"> byte is the most significant</font>

2013
02:24:45,681 --> 02:24:55,940
value same thing with our sequence

2014
02:24:53,030 --> 02:24:58,851
number we can show it<font color="#E5E5E5"> two different ways</font>

2015
02:24:55,940 --> 02:25:02,120
<font color="#E5E5E5">in the case of it all being zero we</font>

2016
02:24:58,851 --> 02:25:10,391
won't see that<font color="#CCCCCC"> difference we should see</font>

2017
02:25:02,120 --> 02:25:14,240
a sequence number that's not<font color="#E5E5E5"> zero maybe</font>

2018
02:25:10,391 --> 02:25:18,230
all the ones in this packet are zero but

2019
02:25:14,240 --> 02:25:19,910
it works<font color="#CCCCCC"> just like</font><font color="#E5E5E5"> our identifier</font><font color="#CCCCCC"> if you</font>

2020
02:25:18,230 --> 02:25:23,020
know which way you<font color="#E5E5E5"> order the bytes will</font>

2021
02:25:19,910 --> 02:25:23,021
change what the decimal

2022
02:25:23,351 --> 02:25:29,620
<font color="#E5E5E5">so some</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> to watch</font><font color="#CCCCCC"> for when</font><font color="#E5E5E5"> you're</font>

2023
02:25:26,030 --> 02:25:32,990
<font color="#CCCCCC">looking for problems</font><font color="#E5E5E5"> with ICMP is error</font>

2024
02:25:29,620 --> 02:25:41,690
responses and there's<font color="#CCCCCC"> already built in</font>

2025
02:25:32,990 --> 02:25:45,710
to<font color="#CCCCCC"> some colouring rules this ICMP errors</font>

2026
02:25:41,690 --> 02:25:47,391
<font color="#CCCCCC">coloring rule and so it's already you</font>

2027
02:25:45,710 --> 02:25:57,561
know Wireshark knows most people care

2028
02:25:47,391 --> 02:26:01,100
about<font color="#CCCCCC"> if there's errors here and so it's</font>

2029
02:25:57,561 --> 02:26:06,190
created a filter<font color="#E5E5E5"> to</font><font color="#CCCCCC"> say well if the type</font>

2030
02:26:01,101 --> 02:26:11,141
is<font color="#CCCCCC"> three or four or five or 11 or</font><font color="#E5E5E5"> one</font>

2031
02:26:06,190 --> 02:26:14,000
ipv6 types 1 2 etc those are error

2032
02:26:11,141 --> 02:26:17,141
<font color="#E5E5E5">packets those are things like</font><font color="#CCCCCC"> the</font>

2033
02:26:14,000 --> 02:26:19,670
destinations unreachable<font color="#CCCCCC"> or the</font>

2034
02:26:17,141 --> 02:26:30,141
fragmentations required and we had to

2035
02:26:19,670 --> 02:26:32,480
drop<font color="#E5E5E5"> your packet so as you're scrolling</font>

2036
02:26:30,141 --> 02:26:35,391
through<font color="#E5E5E5"> and you see</font><font color="#CCCCCC"> this black line with</font>

2037
02:26:32,480 --> 02:26:39,320
green text<font color="#CCCCCC"> you</font><font color="#E5E5E5"> say oh here's my problem</font>

2038
02:26:35,391 --> 02:26:41,960
<font color="#E5E5E5">it's because I can't reach</font><font color="#CCCCCC"> that</font>

2039
02:26:39,320 --> 02:26:42,670
destination<font color="#E5E5E5"> an ICMP</font><font color="#CCCCCC"> s telling me about</font>

2040
02:26:41,960 --> 02:26:45,740
<font color="#E5E5E5">it</font>

2041
02:26:42,670 --> 02:26:50,230
your your application may or may not

2042
02:26:45,740 --> 02:26:50,230
communicate that information to<font color="#CCCCCC"> you</font>

2043
02:26:57,000 --> 02:27:11,760
questions about ICMP or the things we

2044
02:27:00,909 --> 02:27:11,760
might look<font color="#E5E5E5"> for with Wireshark yeah</font>

2045
02:27:16,530 --> 02:27:23,220
<font color="#E5E5E5">okay that's a great one so</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> you look</font>

2046
02:27:19,110 --> 02:27:30,630
and is that shown<font color="#CCCCCC"> in the info or down</font>

2047
02:27:23,220 --> 02:27:35,220
here<font color="#E5E5E5"> in the summary okay so the question</font>

2048
02:27:30,630 --> 02:27:37,140
<font color="#CCCCCC">was what does it mean</font><font color="#E5E5E5"> over here</font><font color="#CCCCCC"> where</font>

2049
02:27:35,220 --> 02:27:41,880
you<font color="#CCCCCC"> can't see on mine because</font><font color="#E5E5E5"> I'm zoomed</font>

2050
02:27:37,140 --> 02:27:45,210
in too much when it says reply<font color="#CCCCCC"> in some</font>

2051
02:27:41,880 --> 02:27:48,599
number<font color="#E5E5E5"> requests in some number so this</font>

2052
02:27:45,210 --> 02:27:50,669
is pairing up your requests<font color="#E5E5E5"> and your</font>

2053
02:27:48,600 --> 02:27:53,840
replies and it's doing it based<font color="#E5E5E5"> off of</font>

2054
02:27:50,670 --> 02:27:59,100
the source<font color="#E5E5E5"> and destination address and</font>

2055
02:27:53,840 --> 02:28:10,230
the sequence and identify our<font color="#E5E5E5"> values and</font>

2056
02:27:59,100 --> 02:28:15,270
so it says there was a request<font color="#E5E5E5"> in in</font>

2057
02:28:10,230 --> 02:28:17,220
packet<font color="#CCCCCC"> 216 that matches this reply has</font>

2058
02:28:15,270 --> 02:28:19,950
the same sequence<font color="#E5E5E5"> number it was sent to</font>

2059
02:28:17,220 --> 02:28:22,109
<font color="#E5E5E5">the you know opposite source</font><font color="#CCCCCC"> destination</font>

2060
02:28:19,950 --> 02:28:25,700
<font color="#E5E5E5">because now it's a reply instead of a</font>

2061
02:28:22,110 --> 02:28:28,890
request and it lets you then match up

2062
02:28:25,700 --> 02:28:31,760
<font color="#E5E5E5">where the request was with the reply</font><font color="#CCCCCC"> and</font>

2063
02:28:28,890 --> 02:28:41,010
it's so that number<font color="#CCCCCC"> is the packet number</font>

2064
02:28:31,760 --> 02:28:43,680
<font color="#E5E5E5">over</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> too so I've got it filtered</font>

2065
02:28:41,010 --> 02:28:47,730
right now to only show ICMP but you can

2066
02:28:43,680 --> 02:28:50,640
see there is<font color="#CCCCCC"> actually</font><font color="#E5E5E5"> five packets in</font>

2067
02:28:47,730 --> 02:28:52,439
between these so<font color="#CCCCCC"> that's just a way to if</font>

2068
02:28:50,640 --> 02:28:54,060
they're not filtered and they're not

2069
02:28:52,440 --> 02:28:56,400
directly<font color="#E5E5E5"> one right after the other</font>

2070
02:28:54,060 --> 02:28:58,939
you can still match up the request with

2071
02:28:56,400 --> 02:28:58,940
the reply

2072
02:29:03,740 --> 02:29:10,900
yeah so we<font color="#CCCCCC"> can take a look</font><font color="#E5E5E5"> at that</font><font color="#CCCCCC"> probe</font>

2073
02:29:11,050 --> 02:29:17,920
<font color="#E5E5E5">- okay so if you look at probe - pcap</font>

2074
02:29:25,130 --> 02:29:28,060
yeah

2075
02:29:32,291 --> 02:29:36,701
so you'll see most<font color="#E5E5E5"> of</font><font color="#CCCCCC"> its these nice</font>

2076
02:29:34,181 --> 02:29:41,440
pink ICMP echo requests and replies but

2077
02:29:36,701 --> 02:29:44,760
over here we<font color="#CCCCCC"> see some of that</font><font color="#E5E5E5"> black bars</font>

2078
02:29:41,440 --> 02:29:48,551
and we might just<font color="#CCCCCC"> come right down</font><font color="#E5E5E5"> here</font>

2079
02:29:44,761 --> 02:29:51,521
<font color="#E5E5E5">and sure enough it's indicating some</font>

2080
02:29:48,551 --> 02:29:59,621
problems for<font color="#E5E5E5"> us</font><font color="#CCCCCC"> like the destination is</font>

2081
02:29:51,521 --> 02:30:02,530
unreachable so we see the types<font color="#CCCCCC"> three</font>

2082
02:29:59,621 --> 02:30:05,891
the destinations unreachable<font color="#CCCCCC"> and in this</font>

2083
02:30:02,530 --> 02:30:13,181
case the code is<font color="#E5E5E5"> three meaning it was</font>

2084
02:30:05,891 --> 02:30:17,801
the port that<font color="#E5E5E5"> was unreachable if it's an</font>

2085
02:30:13,181 --> 02:30:20,621
error packet<font color="#E5E5E5"> ICMP includes part of the</font>

2086
02:30:17,801 --> 02:30:23,131
original<font color="#E5E5E5"> packet in</font><font color="#CCCCCC"> the response so</font><font color="#E5E5E5"> that</font>

2087
02:30:20,621 --> 02:30:25,241
you can match it<font color="#E5E5E5"> up so you can say well</font>

2088
02:30:23,131 --> 02:30:28,811
destination unreachable what was the

2089
02:30:25,241 --> 02:30:31,871
<font color="#E5E5E5">destination what's the where was I</font>

2090
02:30:28,811 --> 02:30:35,681
trying to<font color="#E5E5E5"> go and that information gets</font>

2091
02:30:31,871 --> 02:30:39,820
<font color="#CCCCCC">included</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> our ICMP header</font><font color="#E5E5E5"> we have</font>

2092
02:30:35,681 --> 02:30:44,471
another IP header<font color="#E5E5E5"> so this one you</font><font color="#CCCCCC"> know</font>

2093
02:30:39,820 --> 02:30:48,491
if let's make this smaller<font color="#E5E5E5"> we have this</font>

2094
02:30:44,471 --> 02:30:51,939
<font color="#E5E5E5">original IP header and we have the one</font>

2095
02:30:48,491 --> 02:30:54,161
<font color="#E5E5E5">that's packaged up with the response and</font>

2096
02:30:51,940 --> 02:30:59,110
it says well the original<font color="#E5E5E5"> packet came</font>

2097
02:30:54,161 --> 02:31:03,671
from 3.2<font color="#E5E5E5"> 32 and we were trying to reach</font>

2098
02:30:59,110 --> 02:31:06,431
<font color="#E5E5E5">three</font><font color="#CCCCCC"> one twelve</font><font color="#E5E5E5"> on port four three</font>

2099
02:31:03,671 --> 02:31:09,971
three<font color="#E5E5E5"> five seven and that's where we're</font>

2100
02:31:06,431 --> 02:31:11,551
getting<font color="#E5E5E5"> the destination unreachable so I</font>

2101
02:31:09,971 --> 02:31:15,121
<font color="#E5E5E5">don't know the lights off sudden came on</font>

2102
02:31:11,551 --> 02:31:15,121
what's going on<font color="#CCCCCC"> nothing</font>

2103
02:31:15,480 --> 02:31:20,891
<font color="#E5E5E5">okay you guys like the lights on or I</font>

2104
02:31:17,971 --> 02:31:23,491
want<font color="#CCCCCC"> them</font><font color="#E5E5E5"> back off yeah that's what I</font>

2105
02:31:20,891 --> 02:31:23,491
<font color="#E5E5E5">was kind of thinking</font>

2106
02:31:28,760 --> 02:31:34,310
<font color="#CCCCCC">I just checked my clock I was like maybe</font>

2107
02:31:33,080 --> 02:31:36,109
it's already<font color="#CCCCCC"> 5 o'clock and they're</font>

2108
02:31:34,310 --> 02:31:38,500
<font color="#E5E5E5">kicking us out but we've still</font><font color="#CCCCCC"> got</font>

2109
02:31:36,109 --> 02:31:38,500
<font color="#CCCCCC">plenty</font><font color="#E5E5E5"> of time</font>

2110
02:31:44,830 --> 02:31:49,870
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> that might be a little too dark</font>

2111
02:31:53,500 --> 02:32:05,569
there thanks<font color="#CCCCCC"> Rd oh I'll come back</font>

2112
02:32:02,410 --> 02:32:07,930
who's got the<font color="#CCCCCC"> magic</font><font color="#E5E5E5"> remote playing with</font>

2113
02:32:05,569 --> 02:32:07,930
my head

2114
02:32:21,039 --> 02:32:38,229
<font color="#CCCCCC">what</font><font color="#E5E5E5"> the sides go</font><font color="#CCCCCC"> oh let's see if there</font>

2115
02:32:33,529 --> 02:32:38,229
<font color="#CCCCCC">is a traceroute</font>

2116
02:32:53,649 --> 02:32:56,649
<font color="#E5E5E5">okay</font>

2117
02:32:58,721 --> 02:33:07,391
I'm not sure what happened<font color="#E5E5E5"> to my ICMP</font>

2118
02:33:01,931 --> 02:33:09,221
packets in the<font color="#CCCCCC"> baseline file</font><font color="#E5E5E5"> but the</font>

2119
02:33:07,391 --> 02:33:12,490
other one the error we might see is the

2120
02:33:09,221 --> 02:33:16,150
time exceeded<font color="#E5E5E5"> and that's given when your</font>

2121
02:33:12,490 --> 02:33:22,201
time to live<font color="#E5E5E5"> expires so you'd see a time</font>

2122
02:33:16,150 --> 02:33:22,201
exceeded<font color="#E5E5E5"> ICMP error message in</font><font color="#CCCCCC"> that case</font>

2123
02:33:28,051 --> 02:33:33,671
some of<font color="#E5E5E5"> the common types again there's a</font>

2124
02:33:31,331 --> 02:33:38,530
whole list<font color="#E5E5E5"> of all</font><font color="#CCCCCC"> of the different types</font>

2125
02:33:33,671 --> 02:33:42,490
<font color="#E5E5E5">of ICMP packets you might see</font><font color="#CCCCCC"> 0</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> echo</font>

2126
02:33:38,530 --> 02:33:44,771
replies<font color="#E5E5E5"> 8 for echo requests destination</font>

2127
02:33:42,490 --> 02:33:52,621
unreachable is 3 which we just saw<font color="#E5E5E5"> time</font>

2128
02:33:44,771 --> 02:33:55,480
exceeded would have a type<font color="#E5E5E5"> of 11 a good</font>

2129
02:33:52,621 --> 02:34:01,320
rule to turn on a good<font color="#CCCCCC"> coloring rule</font><font color="#E5E5E5"> to</font>

2130
02:33:55,480 --> 02:34:05,471
turn on is unexpected ICMP type codes

2131
02:34:01,320 --> 02:34:07,181
you don't<font color="#CCCCCC"> necessarily you know want</font><font color="#E5E5E5"> to</font>

2132
02:34:05,471 --> 02:34:08,980
<font color="#E5E5E5">have to</font><font color="#CCCCCC"> always go in</font><font color="#E5E5E5"> and check every</font>

2133
02:34:07,181 --> 02:34:12,671
<font color="#E5E5E5">time you're looking is there some weird</font>

2134
02:34:08,980 --> 02:34:14,591
ICMP code here<font color="#E5E5E5"> but if you just color it</font>

2135
02:34:12,671 --> 02:34:17,951
you know anything<font color="#E5E5E5"> that's not a ping</font>

2136
02:34:14,591 --> 02:34:20,411
<font color="#CCCCCC">request or</font><font color="#E5E5E5"> apply a destination</font>

2137
02:34:17,951 --> 02:34:23,650
<font color="#E5E5E5">unreachable maybe everything else let's</font>

2138
02:34:20,411 --> 02:34:26,351
color<font color="#E5E5E5"> they're not errors necessarily</font>

2139
02:34:23,650 --> 02:34:28,661
they don't fall into<font color="#CCCCCC"> our</font><font color="#E5E5E5"> existing error</font>

2140
02:34:26,351 --> 02:34:30,551
<font color="#E5E5E5">coloring rule but they're</font><font color="#CCCCCC"> probably</font>

2141
02:34:28,661 --> 02:34:36,190
indicative<font color="#E5E5E5"> of someone doing something</font>

2142
02:34:30,551 --> 02:34:38,591
<font color="#E5E5E5">weird on your network often when you're</font>

2143
02:34:36,190 --> 02:34:43,061
doing like<font color="#CCCCCC"> nmap scans to try and</font>

2144
02:34:38,591 --> 02:34:45,101
identify a operating system one of<font color="#E5E5E5"> the</font>

2145
02:34:43,061 --> 02:34:46,931
<font color="#CCCCCC">ways they identify operating systems</font><font color="#E5E5E5"> is</font>

2146
02:34:45,101 --> 02:34:50,530
by giving<font color="#E5E5E5"> it weird</font>

2147
02:34:46,931 --> 02:34:52,181
ICMP<font color="#E5E5E5"> type codes and seeing how it</font>

2148
02:34:50,530 --> 02:34:53,650
responds to<font color="#E5E5E5"> those because different</font>

2149
02:34:52,181 --> 02:34:56,740
<font color="#E5E5E5">operating systems respond differently</font>

2150
02:34:53,650 --> 02:34:58,451
<font color="#E5E5E5">and so it's a good way to say I don't</font>

2151
02:34:56,740 --> 02:35:01,391
<font color="#E5E5E5">want to always have</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> looking for</font>

2152
02:34:58,451 --> 02:35:03,580
these but if I color<font color="#E5E5E5"> them different so</font>

2153
02:35:01,391 --> 02:35:06,181
<font color="#CCCCCC">they've</font><font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of pop out that way when I</font>

2154
02:35:03,581 --> 02:35:08,681
<font color="#E5E5E5">am analyzing</font><font color="#CCCCCC"> traffic I'll see</font><font color="#E5E5E5"> Oh</font>

2155
02:35:06,181 --> 02:35:12,181
<font color="#E5E5E5">something weirds going</font><font color="#CCCCCC"> on my</font><font color="#E5E5E5"> network let</font>

2156
02:35:08,681 --> 02:35:12,181
me look into this<font color="#E5E5E5"> closer</font>

2157
02:35:15,990 --> 02:35:24,039
<font color="#CCCCCC">all right next</font><font color="#E5E5E5"> protocol on the list is</font>

2158
02:35:19,779 --> 02:35:28,120
UDP so we saw UDP a little bit<font color="#E5E5E5"> already</font>

2159
02:35:24,040 --> 02:35:34,600
<font color="#E5E5E5">in</font><font color="#CCCCCC"> that we filtered by UDP we saw that</font>

2160
02:35:28,120 --> 02:35:36,010
there is DNS DHCP mdns let's look at a

2161
02:35:34,600 --> 02:35:39,640
few<font color="#E5E5E5"> more</font><font color="#CCCCCC"> details here</font>

2162
02:35:36,010 --> 02:35:42,120
<font color="#E5E5E5">and I'm going to go back</font><font color="#CCCCCC"> to my</font><font color="#E5E5E5"> baseline</font>

2163
02:35:39,640 --> 02:35:42,119
file

2164
02:35:57,670 --> 02:36:02,920
one of my favorite things about the UDP

2165
02:36:00,360 --> 02:36:06,221
<font color="#E5E5E5">protocol</font><font color="#CCCCCC"> so it's a what we call</font><font color="#E5E5E5"> a</font>

2166
02:36:02,920 --> 02:36:09,431
transport layer protocol it gets wrapped

2167
02:36:06,221 --> 02:36:11,141
inside of<font color="#CCCCCC"> an IP packet but one of</font><font color="#E5E5E5"> my</font>

2168
02:36:09,431 --> 02:36:14,500
favorite things about it<font color="#CCCCCC"> is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> they're</font>

2169
02:36:11,141 --> 02:36:19,000
<font color="#E5E5E5">relatively simple especially compared to</font>

2170
02:36:14,500 --> 02:36:26,370
<font color="#E5E5E5">our IP protocol and our TCP protocol if</font>

2171
02:36:19,000 --> 02:36:26,370
we look at the header values of our UDP

2172
02:36:28,591 --> 02:36:33,940
there's not<font color="#CCCCCC"> a lot to it</font>

2173
02:36:30,990 --> 02:36:39,811
we have<font color="#E5E5E5"> source and destination port</font>

2174
02:36:33,940 --> 02:36:39,811
numbers we have a length<font color="#E5E5E5"> and a checksum</font>

2175
02:36:39,990 --> 02:36:48,521
and that's it that's our UDP header<font color="#CCCCCC"> all</font>

2176
02:36:46,511 --> 02:36:51,271
we need<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know is where it's coming</font>

2177
02:36:48,521 --> 02:36:55,660
<font color="#CCCCCC">from where it's</font><font color="#E5E5E5"> going in terms of ports</font>

2178
02:36:51,271 --> 02:36:57,341
<font color="#E5E5E5">how long it is and optionally we don't</font>

2179
02:36:55,660 --> 02:36:59,351
even have to<font color="#E5E5E5"> have a checksum we can</font>

2180
02:36:57,341 --> 02:37:01,480
leave the checksum blank if we want

2181
02:36:59,351 --> 02:37:05,290
optionally<font color="#E5E5E5"> you'll make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that the</font>

2182
02:37:01,480 --> 02:37:09,189
date<font color="#CCCCCC"> is good there's a reason UDP is so</font>

2183
02:37:05,290 --> 02:37:13,540
simple<font color="#E5E5E5"> the reason is because we wanted a</font>

2184
02:37:09,190 --> 02:37:17,591
protocol<font color="#E5E5E5"> that</font><font color="#CCCCCC"> can be low overhead and</font>

2185
02:37:13,540 --> 02:37:21,190
<font color="#CCCCCC">it's easy to</font><font color="#E5E5E5"> send and use and able to</font>

2186
02:37:17,591 --> 02:37:23,170
<font color="#E5E5E5">send data quickly people talk about you</font>

2187
02:37:21,190 --> 02:37:26,620
<font color="#E5E5E5">know UDP is good for when</font><font color="#CCCCCC"> you're doing</font>

2188
02:37:23,170 --> 02:37:30,221
live streaming or when you're doing

2189
02:37:26,620 --> 02:37:33,190
simple<font color="#CCCCCC"> requests and</font><font color="#E5E5E5"> response</font><font color="#CCCCCC"> cuz UDP is</font>

2190
02:37:30,221 --> 02:37:35,641
not so good<font color="#CCCCCC"> if you need to guarantee</font>

2191
02:37:33,190 --> 02:37:38,801
your data makes it to the destination

2192
02:37:35,641 --> 02:37:41,170
<font color="#E5E5E5">there's nothing in here</font><font color="#CCCCCC"> to help manage</font>

2193
02:37:38,801 --> 02:37:44,949
that<font color="#CCCCCC"> what happens if our packets come</font>

2194
02:37:41,170 --> 02:37:48,370
out of order what happens if a packets

2195
02:37:44,950 --> 02:37:51,940
gets lost with UDP we can't do anything

2196
02:37:48,370 --> 02:37:53,761
<font color="#CCCCCC">about those</font><font color="#E5E5E5"> all we can say is here's our</font>

2197
02:37:51,940 --> 02:37:56,070
data<font color="#E5E5E5"> hopefully it gets there and</font>

2198
02:37:53,761 --> 02:38:01,780
<font color="#E5E5E5">sometimes that's</font><font color="#CCCCCC"> good enough</font>

2199
02:37:56,070 --> 02:38:04,690
like with DNS the<font color="#CCCCCC"> reason it's good</font>

2200
02:38:01,780 --> 02:38:07,380
<font color="#E5E5E5">enough with DNS is because we're</font><font color="#CCCCCC"> gonna</font>

2201
02:38:04,690 --> 02:38:09,940
<font color="#E5E5E5">send a question and get</font><font color="#CCCCCC"> back an answer</font>

2202
02:38:07,380 --> 02:38:11,399
<font color="#E5E5E5">that's it it's like two packets</font><font color="#CCCCCC"> if</font>

2203
02:38:09,940 --> 02:38:14,319
something goes<font color="#CCCCCC"> wrong</font>

2204
02:38:11,399 --> 02:38:16,510
well fine we'll just<font color="#E5E5E5"> send the question</font>

2205
02:38:14,319 --> 02:38:18,670
again<font color="#E5E5E5"> we don't need a whole</font><font color="#CCCCCC"> bunch of</font>

2206
02:38:16,510 --> 02:38:27,279
overhead to<font color="#E5E5E5"> figure out that we didn't</font>

2207
02:38:18,670 --> 02:38:30,790
get a<font color="#E5E5E5"> response</font><font color="#CCCCCC"> a few things to point</font><font color="#E5E5E5"> out</font>

2208
02:38:27,279 --> 02:38:34,330
<font color="#E5E5E5">in working with</font><font color="#CCCCCC"> UDP is just like we</font>

2209
02:38:30,790 --> 02:38:38,290
talked<font color="#E5E5E5"> about with TCP and like our port</font>

2210
02:38:34,330 --> 02:38:42,130
number port 22<font color="#E5E5E5"> just because we say you</font>

2211
02:38:38,290 --> 02:38:45,670
know DNS here is using port 53<font color="#E5E5E5"> that</font>

2212
02:38:42,130 --> 02:38:48,970
doesn't mean it has to we can port

2213
02:38:45,670 --> 02:38:52,750
numbers can always be configured<font color="#E5E5E5"> and</font><font color="#CCCCCC"> so</font>

2214
02:38:48,970 --> 02:38:55,390
if you're you<font color="#CCCCCC"> know wanting to find all</font>

2215
02:38:52,750 --> 02:39:02,800
of your DNS traffic<font color="#E5E5E5"> and say oh</font><font color="#CCCCCC"> although</font>

2216
02:38:55,390 --> 02:39:06,909
UDP port equals 53 well<font color="#E5E5E5"> that'll find all</font>

2217
02:39:02,800 --> 02:39:08,938
your<font color="#E5E5E5"> DNS traffic that's using port 53</font><font color="#CCCCCC"> it</font>

2218
02:39:06,909 --> 02:39:19,449
won't find it if you're running<font color="#E5E5E5"> it on</font><font color="#CCCCCC"> a</font>

2219
02:39:08,939 --> 02:39:22,409
non-standard<font color="#E5E5E5"> port questions about our</font>

2220
02:39:19,449 --> 02:39:22,409
UDP protocol

2221
02:39:27,540 --> 02:39:46,880
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> I think I yep so I've got us DNS</font>

2222
02:39:39,810 --> 02:39:51,199
DHCP<font color="#CCCCCC"> are</font><font color="#E5E5E5"> two common protocols</font><font color="#CCCCCC"> SMPP</font>

2223
02:39:46,880 --> 02:39:54,660
<font color="#CCCCCC">NetBIOS</font><font color="#E5E5E5"> are some additional common UDP</font>

2224
02:39:51,200 --> 02:39:58,080
protocols<font color="#E5E5E5"> and their associated port</font>

2225
02:39:54,660 --> 02:39:58,590
numbers<font color="#E5E5E5"> again this is just the</font><font color="#CCCCCC"> default</font>

2226
02:39:58,080 --> 02:40:01,289
port<font color="#E5E5E5"> number</font>

2227
02:39:58,590 --> 02:40:04,021
<font color="#CCCCCC">it</font><font color="#E5E5E5"> doesn't mean you couldn't</font><font color="#CCCCCC"> run it on</font>

2228
02:40:01,290 --> 02:40:06,150
some<font color="#CCCCCC"> other port and that attacker</font><font color="#E5E5E5"> an</font>

2229
02:40:04,021 --> 02:40:08,690
attacker wouldn't be running<font color="#E5E5E5"> it on some</font>

2230
02:40:06,150 --> 02:40:08,690
<font color="#E5E5E5">other port</font>

2231
02:40:09,380 --> 02:40:15,380
these are usually<font color="#CCCCCC"> tcp over here on the</font>

2232
02:40:12,300 --> 02:40:19,470
Left these are UDP<font color="#E5E5E5"> on the right</font>

2233
02:40:15,380 --> 02:40:22,770
typically and again<font color="#E5E5E5"> a link with an</font>

2234
02:40:19,470 --> 02:40:24,779
entire list of<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of the different TCP</font>

2235
02:40:22,771 --> 02:40:27,660
<font color="#CCCCCC">and UDP protocols well not all of them</font>

2236
02:40:24,780 --> 02:40:30,890
but a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> them and their designated</font>

2237
02:40:27,660 --> 02:40:30,890
port numbers

2238
02:40:37,150 --> 02:40:43,300
so before we move<font color="#E5E5E5"> on to DNS I mean to</font>

2239
02:40:39,521 --> 02:40:44,771
TCP<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> look at our DNS protocol for a</font>

2240
02:40:43,300 --> 02:40:49,179
minute<font color="#E5E5E5"> because this is another one</font>

2241
02:40:44,771 --> 02:40:51,550
that's often<font color="#E5E5E5"> a source of errors with our</font>

2242
02:40:49,180 --> 02:40:53,110
network<font color="#CCCCCC"> why</font><font color="#E5E5E5"> isn't something working a</font>

2243
02:40:51,550 --> 02:40:56,850
lot<font color="#E5E5E5"> of times it's</font><font color="#CCCCCC"> because we can't</font>

2244
02:40:53,110 --> 02:41:02,070
<font color="#E5E5E5">figure out what its name and IP address</font>

2245
02:40:56,851 --> 02:41:07,630
<font color="#CCCCCC">Association</font><font color="#E5E5E5"> is so DNS is our domain</font><font color="#CCCCCC"> name</font>

2246
02:41:02,070 --> 02:41:10,930
service and its job is<font color="#E5E5E5"> to map a name to</font>

2247
02:41:07,630 --> 02:41:17,529
an IP<font color="#E5E5E5"> address like in this</font><font color="#CCCCCC"> example the</font>

2248
02:41:10,930 --> 02:41:23,250
name<font color="#E5E5E5"> github.com</font><font color="#CCCCCC"> to some IP address</font><font color="#E5E5E5"> over</font>

2249
02:41:17,530 --> 02:41:23,250
here<font color="#CCCCCC"> oh let</font><font color="#E5E5E5"> me get my magnifier back up</font>

2250
02:41:26,730 --> 02:41:34,000
just like<font color="#CCCCCC"> we had the arrows with our</font>

2251
02:41:30,271 --> 02:41:36,370
echo requests and replies<font color="#CCCCCC"> we have arrows</font>

2252
02:41:34,000 --> 02:41:38,590
with DNS requests and replies<font color="#CCCCCC"> so that</font>

2253
02:41:36,370 --> 02:41:42,130
you can match up<font color="#E5E5E5"> here's the</font><font color="#CCCCCC"> request</font>

2254
02:41:38,590 --> 02:41:48,220
<font color="#CCCCCC">where's the corresponding reply oh it's</font>

2255
02:41:42,130 --> 02:41:55,990
right here in packet number<font color="#CCCCCC"> 3</font><font color="#E5E5E5"> and if we</font>

2256
02:41:48,220 --> 02:41:58,811
look the summary is mostly sufficient

2257
02:41:55,990 --> 02:42:00,580
for you<font color="#E5E5E5"> mo for what we are normally</font>

2258
02:41:58,811 --> 02:42:03,101
looking for with DNS we want to know

2259
02:42:00,580 --> 02:42:06,070
what domain<font color="#E5E5E5"> we're looking for and what</font>

2260
02:42:03,101 --> 02:42:10,780
the response<font color="#E5E5E5"> was but there's more</font>

2261
02:42:06,070 --> 02:42:16,930
information<font color="#E5E5E5"> available</font><font color="#CCCCCC"> in the packet</font>

2262
02:42:10,780 --> 02:42:19,480
itself<font color="#E5E5E5"> if we</font><font color="#CCCCCC"> need it so we have a</font>

2263
02:42:16,930 --> 02:42:24,820
<font color="#E5E5E5">transaction ID that lets us pair up the</font>

2264
02:42:19,480 --> 02:42:26,800
<font color="#E5E5E5">request with the reply we can</font><font color="#CCCCCC"> actually</font>

2265
02:42:24,820 --> 02:42:29,949
make multiple requests with a single

2266
02:42:26,800 --> 02:42:31,960
packet so in this case we're only<font color="#E5E5E5"> making</font>

2267
02:42:29,950 --> 02:42:35,950
<font color="#CCCCCC">one request that's why I give the</font>

2268
02:42:31,960 --> 02:42:39,009
<font color="#CCCCCC">questions one and we're only</font><font color="#E5E5E5"> getting one</font>

2269
02:42:35,950 --> 02:42:42,160
reply<font color="#E5E5E5"> sometimes these numbers will be</font>

2270
02:42:39,010 --> 02:42:44,860
more you<font color="#E5E5E5"> know a single domain name could</font>

2271
02:42:42,160 --> 02:42:47,490
have<font color="#E5E5E5"> multiple IP addresses</font><font color="#CCCCCC"> in which case</font>

2272
02:42:44,860 --> 02:42:51,190
<font color="#E5E5E5">or maybe we'd</font><font color="#CCCCCC"> have three or fifteen</font><font color="#E5E5E5"> or</font>

2273
02:42:47,490 --> 02:42:53,960
when you start getting<font color="#CCCCCC"> fifteen</font>

2274
02:42:51,190 --> 02:42:58,040
that's usually<font color="#CCCCCC"> a sign of</font><font color="#E5E5E5"> either it could</font>

2275
02:42:53,960 --> 02:43:00,680
be a like cloud distribution network

2276
02:42:58,040 --> 02:43:04,250
sometimes those will<font color="#E5E5E5"> have lots of IP</font>

2277
02:43:00,681 --> 02:43:06,940
addresses<font color="#CCCCCC"> or the others that have</font><font color="#E5E5E5"> lots</font>

2278
02:43:04,250 --> 02:43:09,950
of IP addresses<font color="#CCCCCC"> are botnets and so</font>

2279
02:43:06,940 --> 02:43:12,431
that's a<font color="#E5E5E5"> coloring rule that you might</font>

2280
02:43:09,950 --> 02:43:15,320
want<font color="#E5E5E5"> to apply is if I'm seeing more than</font>

2281
02:43:12,431 --> 02:43:18,110
<font color="#CCCCCC">you know 10 or 12 or</font><font color="#E5E5E5"> 15</font><font color="#CCCCCC"> or whatever</font>

2282
02:43:15,320 --> 02:43:20,360
<font color="#CCCCCC">makes sense</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> network maybe color</font>

2283
02:43:18,110 --> 02:43:28,311
those<font color="#E5E5E5"> because something weird could be</font>

2284
02:43:20,360 --> 02:43:32,200
going<font color="#E5E5E5"> on so here was the query it was</font>

2285
02:43:28,311 --> 02:43:35,261
<font color="#E5E5E5">for github.com</font><font color="#CCCCCC"> this type a here</font>

2286
02:43:32,200 --> 02:43:40,790
indicates<font color="#CCCCCC"> that we're looking</font><font color="#E5E5E5"> for an ipv4</font>

2287
02:43:35,261 --> 02:43:43,400
address<font color="#E5E5E5"> if it's the type aaaa</font>

2288
02:43:40,790 --> 02:43:49,900
so<font color="#CCCCCC"> for A's that would be a</font><font color="#E5E5E5"> request for</font>

2289
02:43:43,400 --> 02:43:57,320
an ipv6 address<font color="#E5E5E5"> and here's our</font><font color="#CCCCCC"> answer</font>

2290
02:43:49,900 --> 02:44:03,820
<font color="#E5E5E5">github.com</font><font color="#CCCCCC"> has address 192 dot 32 53.1</font>

2291
02:43:57,320 --> 02:44:03,820
<font color="#CCCCCC">13 okay</font>

2292
02:44:07,230 --> 02:44:10,221
questions on<font color="#E5E5E5"> DNS</font>

2293
02:44:15,460 --> 02:44:18,179
perfect

2294
02:44:22,460 --> 02:44:29,990
go ahead and start talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> TCP TCP</font>

2295
02:44:26,900 --> 02:44:34,810
<font color="#E5E5E5">is a very complex protocol especially</font>

2296
02:44:29,990 --> 02:44:38,660
compared to UDP we won't hardly even

2297
02:44:34,810 --> 02:44:41,359
scratch the<font color="#CCCCCC"> surface</font><font color="#E5E5E5"> of all of the things</font>

2298
02:44:38,660 --> 02:44:42,890
that<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> going on</font><font color="#E5E5E5"> with TCP we'll look</font>

2299
02:44:41,360 --> 02:44:45,500
at a few<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> you know we'll talk</font>

2300
02:44:42,890 --> 02:44:50,000
<font color="#E5E5E5">about the three-way handshake which we</font>

2301
02:44:45,500 --> 02:44:54,380
mentioned<font color="#E5E5E5"> earlier</font><font color="#CCCCCC"> we've talked about</font>

2302
02:44:50,000 --> 02:44:56,030
port numbers already retransmissions is

2303
02:44:54,380 --> 02:44:59,660
one of the biggest<font color="#CCCCCC"> issues we see with</font>

2304
02:44:56,030 --> 02:45:01,910
TCP and you know<font color="#E5E5E5"> figuring out why are we</font>

2305
02:44:59,660 --> 02:45:04,670
doing retransmissions where the packets

2306
02:45:01,910 --> 02:45:06,590
getting dropped<font color="#E5E5E5"> hopefully we're doing it</font>

2307
02:45:04,670 --> 02:45:07,910
with what's called selective

2308
02:45:06,590 --> 02:45:10,310
<font color="#CCCCCC">acknowledgment so we don't have</font><font color="#E5E5E5"> to</font>

2309
02:45:07,910 --> 02:45:19,610
retransmit<font color="#E5E5E5"> everything and we look at how</font>

2310
02:45:10,310 --> 02:45:22,539
to<font color="#CCCCCC"> find all that information so back</font><font color="#E5E5E5"> in</font>

2311
02:45:19,610 --> 02:45:22,540
the<font color="#E5E5E5"> baseline file</font>

2312
02:45:28,970 --> 02:45:34,899
we can apply<font color="#CCCCCC"> our tcp filter</font>

2313
02:45:41,610 --> 02:45:50,440
and the first thing we notice is that

2314
02:45:46,110 --> 02:45:55,750
what we talked about earlier<font color="#CCCCCC"> every</font>

2315
02:45:50,440 --> 02:45:58,811
<font color="#E5E5E5">single TCP connection has</font><font color="#CCCCCC"> to have this</font>

2316
02:45:55,750 --> 02:46:01,150
sequence<font color="#E5E5E5"> of packets where it's</font>

2317
02:45:58,811 --> 02:46:04,029
establishing<font color="#E5E5E5"> the connection</font><font color="#CCCCCC"> its</font>

2318
02:46:01,150 --> 02:46:08,109
negotiating parameters and<font color="#E5E5E5"> it's figuring</font>

2319
02:46:04,030 --> 02:46:10,300
out who's talking what their sequence

2320
02:46:08,110 --> 02:46:13,360
number<font color="#CCCCCC"> is what their window size is all</font>

2321
02:46:10,300 --> 02:46:17,250
of these<font color="#CCCCCC"> different parameters have to</font><font color="#E5E5E5"> be</font>

2322
02:46:13,360 --> 02:46:21,690
negotiated<font color="#CCCCCC"> before you can send any data</font>

2323
02:46:17,250 --> 02:46:32,021
<font color="#E5E5E5">so what it looks</font><font color="#CCCCCC"> like this one's a</font><font color="#E5E5E5"> SSH</font>

2324
02:46:21,690 --> 02:46:36,330
<font color="#CCCCCC">let's see so it's a</font><font color="#E5E5E5"> TLS connection</font><font color="#CCCCCC"> that</font>

2325
02:46:32,021 --> 02:46:39,490
we're looking at<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we want to you know</font>

2326
02:46:36,330 --> 02:46:43,480
<font color="#E5E5E5">probably</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> sort of HTTP request</font>

2327
02:46:39,490 --> 02:46:46,780
<font color="#CCCCCC">that's being sent</font><font color="#E5E5E5"> here before any of the</font>

2328
02:46:43,480 --> 02:46:48,369
the<font color="#E5E5E5"> URL</font><font color="#CCCCCC"> or anything</font><font color="#E5E5E5"> can be sent the very</font>

2329
02:46:46,780 --> 02:46:56,440
first thing we<font color="#E5E5E5"> have to do is establish</font>

2330
02:46:48,370 --> 02:46:58,780
this connection if you're not able to

2331
02:46:56,440 --> 02:47:01,150
connect this would be one thing<font color="#CCCCCC"> to check</font>

2332
02:46:58,780 --> 02:47:04,061
<font color="#CCCCCC">well is it something you know at the</font>

2333
02:47:01,150 --> 02:47:06,730
application layer<font color="#E5E5E5"> going on or is</font><font color="#CCCCCC"> it with</font>

2334
02:47:04,061 --> 02:47:11,010
my<font color="#E5E5E5"> TCP where I can't even go through</font>

2335
02:47:06,730 --> 02:47:11,010
<font color="#E5E5E5">this three-way handshake process</font>

2336
02:47:12,061 --> 02:47:18,820
<font color="#CCCCCC">colouring rules can be</font><font color="#E5E5E5"> nice here in fact</font>

2337
02:47:15,190 --> 02:47:21,311
let's create let's do this one<font color="#CCCCCC"> on your</font>

2338
02:47:18,820 --> 02:47:25,119
<font color="#E5E5E5">own</font><font color="#CCCCCC"> so that I</font><font color="#E5E5E5"> can stop</font><font color="#CCCCCC"> talking for a</font>

2339
02:47:21,311 --> 02:47:27,641
minute<font color="#E5E5E5"> create a coloring rule for TCP</font>

2340
02:47:25,120 --> 02:47:31,780
syn packets and a different coloring

2341
02:47:27,641 --> 02:47:35,920
rule for<font color="#E5E5E5"> TCP syn ACK packets and</font><font color="#CCCCCC"> so that</font>

2342
02:47:31,780 --> 02:47:39,521
you can visually find the first two

2343
02:47:35,920 --> 02:47:42,220
<font color="#E5E5E5">pieces of the handshake and if you want</font>

2344
02:47:39,521 --> 02:47:46,650
you could<font color="#E5E5E5"> actually do all three</font><font color="#CCCCCC"> saying</font>

2345
02:47:42,220 --> 02:47:46,650
this in<font color="#CCCCCC"> ACK and the final ACK packet</font>

2346
02:52:54,750 --> 02:53:00,880
so

2347
02:52:57,700 --> 02:53:00,880
there<font color="#CCCCCC"> we go</font>

2348
02:53:02,681 --> 02:53:07,010
let's see

2349
02:53:04,130 --> 02:53:09,670
coloring rule for our sin<font color="#E5E5E5"> and</font><font color="#CCCCCC"> act</font>

2350
02:53:07,010 --> 02:53:09,670
packets

2351
02:53:18,170 --> 02:53:24,460
for the first one with the the<font color="#CCCCCC"> syn</font>

2352
02:53:20,810 --> 02:53:27,439
packet what<font color="#CCCCCC"> coloring rule or what</font>

2353
02:53:24,460 --> 02:53:43,279
<font color="#CCCCCC">display filter</font><font color="#E5E5E5"> did you use for this</font>

2354
02:53:27,439 --> 02:53:54,650
<font color="#E5E5E5">coloring rule TCP flags and then let me</font>

2355
02:53:43,280 --> 02:53:57,110
assuming that sin<font color="#E5E5E5"> but yeah so I'm not</font>

2356
02:53:54,650 --> 02:53:59,260
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> have to set it</font><font color="#CCCCCC"> to one or if</font>

2357
02:53:57,110 --> 02:53:59,260
just

2358
02:54:05,520 --> 02:54:08,569
this should work

2359
02:54:13,310 --> 02:54:19,249
yeah you can also instead of doing

2360
02:54:15,649 --> 02:54:21,799
individual flag bits<font color="#E5E5E5"> you could say I'm</font>

2361
02:54:19,249 --> 02:54:24,589
<font color="#E5E5E5">looking for one that has this pattern of</font>

2362
02:54:21,799 --> 02:54:33,649
bits which would be the what did you<font color="#E5E5E5"> say</font>

2363
02:54:24,589 --> 02:54:40,819
<font color="#E5E5E5">zero yeah zero zero two and</font><font color="#CCCCCC"> maybe I'll</font>

2364
02:54:33,649 --> 02:54:48,079
color these with a green<font color="#E5E5E5"> foreground okay</font>

2365
02:54:40,819 --> 02:54:50,319
<font color="#E5E5E5">and then let's do a new coloring rule so</font>

2366
02:54:48,079 --> 02:54:54,189
how would<font color="#E5E5E5"> I do the second packet the sin</font>

2367
02:54:50,319 --> 02:54:54,189
<font color="#E5E5E5">plus AK packet</font>

2368
02:55:04,510 --> 02:55:11,560
yeah so let me why I'm<font color="#E5E5E5"> here and I'll</font>

2369
02:55:09,430 --> 02:55:18,359
type these and then I'll show<font color="#E5E5E5"> you that</font>

2370
02:55:11,560 --> 02:55:18,359
you can cheat<font color="#CCCCCC"> so we're doing TCP flags</font>

2371
02:55:19,260 --> 02:55:45,329
dot equals<font color="#CCCCCC"> one and TCP dot flags okay</font>

2372
02:55:38,229 --> 02:55:45,329
maybe we'll<font color="#E5E5E5"> color that one blue</font>

2373
02:55:51,310 --> 02:55:55,618
now and I forgot<font color="#E5E5E5"> to check the</font><font color="#CCCCCC"> boxes</font>

2374
02:56:01,711 --> 02:56:09,561
so we check the<font color="#CCCCCC"> box</font><font color="#E5E5E5"> okay</font>

2375
02:56:14,360 --> 02:56:19,090
let's find<font color="#E5E5E5"> another one because that one</font>

2376
02:56:16,250 --> 02:56:23,840
<font color="#CCCCCC">was highlighted</font><font color="#E5E5E5"> there we go</font>

2377
02:56:19,090 --> 02:56:26,350
so our sins<font color="#CCCCCC"> colored green our X in X</font>

2378
02:56:23,840 --> 02:56:30,561
blue<font color="#E5E5E5"> looks like our coloring rules are</font>

2379
02:56:26,350 --> 02:56:34,250
working correctly<font color="#E5E5E5"> in helping us</font>

2380
02:56:30,561 --> 02:56:35,869
highlight that pairing<font color="#CCCCCC"> right so then</font>

2381
02:56:34,250 --> 02:56:40,250
someone mentioned<font color="#CCCCCC"> that well couldn't we</font>

2382
02:56:35,870 --> 02:56:44,480
<font color="#E5E5E5">have just cheated like we always do and</font>

2383
02:56:40,250 --> 02:56:46,340
<font color="#CCCCCC">we certainly can</font><font color="#E5E5E5"> we expand our TCP we</font>

2384
02:56:44,480 --> 02:56:49,880
come<font color="#E5E5E5"> down</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> to the flags and</font>

2385
02:56:46,340 --> 02:56:54,200
depending on how you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to do it if we</font>

2386
02:56:49,880 --> 02:56:59,000
want you<font color="#E5E5E5"> know this flag combination we</font>

2387
02:56:54,200 --> 02:57:11,090
could do that<font color="#CCCCCC"> and right</font><font color="#E5E5E5"> quick</font><font color="#CCCCCC"> norm a lot</font>

2388
02:56:59,000 --> 02:57:12,740
normally<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so we can see the menu so</font>

2389
02:57:11,090 --> 02:57:16,910
we've seen we could apply this as a

2390
02:57:12,740 --> 02:57:18,410
filter well you can also<font color="#E5E5E5"> colorize buy</font>

2391
02:57:16,910 --> 02:57:21,140
filter and you could just<font color="#E5E5E5"> say</font>

2392
02:57:18,410 --> 02:57:25,430
temporarily<font color="#E5E5E5"> apply this coloring rule</font>

2393
02:57:21,140 --> 02:57:28,490
with one of<font color="#E5E5E5"> these colors here</font><font color="#CCCCCC"> or you</font>

2394
02:57:25,430 --> 02:57:31,180
could say use this to create<font color="#E5E5E5"> a new</font>

2395
02:57:28,490 --> 02:57:31,180
coloring rule

2396
02:57:38,159 --> 02:57:44,920
one of the other things we can do with

2397
02:57:41,979 --> 02:57:48,729
<font color="#E5E5E5">TCP because it establishes this</font>

2398
02:57:44,920 --> 02:57:51,370
connection Wireshark<font color="#CCCCCC"> as well as you know</font>

2399
02:57:48,729 --> 02:57:54,099
that<font color="#E5E5E5"> application is able to follow the</font>

2400
02:57:51,370 --> 02:57:56,590
entire sequence<font color="#CCCCCC"> of bytes so it</font><font color="#E5E5E5"> doesn't</font>

2401
02:57:54,100 --> 02:57:58,029
<font color="#E5E5E5">matter how many packets you send how</font>

2402
02:57:56,590 --> 02:57:59,710
many come<font color="#CCCCCC"> from the server how many who</font>

2403
02:57:58,029 --> 02:58:03,250
<font color="#E5E5E5">come from the client because</font><font color="#CCCCCC"> we've</font>

2404
02:57:59,710 --> 02:58:05,979
established this connection<font color="#CCCCCC"> we can track</font>

2405
02:58:03,250 --> 02:58:10,290
all<font color="#CCCCCC"> of those packets</font><font color="#E5E5E5"> and with Wireshark</font>

2406
02:58:05,979 --> 02:58:10,289
we can make it very easy<font color="#CCCCCC"> to follow those</font>

2407
02:58:10,859 --> 02:58:23,649
if<font color="#E5E5E5"> I right-click on any TCP packet in</font>

2408
02:58:16,330 --> 02:58:27,789
the<font color="#CCCCCC"> top list one of the</font><font color="#E5E5E5"> options is this</font>

2409
02:58:23,649 --> 02:58:36,069
follow option<font color="#CCCCCC"> and if I choose follow</font><font color="#E5E5E5"> TCP</font>

2410
02:58:27,790 --> 02:58:41,949
stream now<font color="#E5E5E5"> it pulls up this new window</font>

2411
02:58:36,069 --> 02:58:45,760
<font color="#E5E5E5">where all of the data from those packets</font>

2412
02:58:41,949 --> 02:58:48,510
are shown here<font color="#E5E5E5"> and this isn't that</font>

2413
02:58:45,760 --> 02:58:54,300
interesting<font color="#E5E5E5"> of a TCP stream because</font><font color="#CCCCCC"> it's</font>

2414
02:58:48,510 --> 02:59:01,630
looks<font color="#CCCCCC"> like probably</font><font color="#E5E5E5"> a HTTP s encrypted</font>

2415
02:58:54,300 --> 02:59:03,909
<font color="#E5E5E5">conversation but it colors the</font><font color="#CCCCCC"> one side</font>

2416
02:59:01,630 --> 02:59:06,390
of it<font color="#CCCCCC"> red the other side blue so in</font><font color="#E5E5E5"> this</font>

2417
02:59:03,909 --> 02:59:09,489
case it's our client<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> read our</font>

2418
02:59:06,390 --> 02:59:11,470
server that's blue and we<font color="#E5E5E5"> can go back</font>

2419
02:59:09,489 --> 02:59:13,330
<font color="#CCCCCC">and</font><font color="#E5E5E5"> forth and we can see that it wasn't</font>

2420
02:59:11,470 --> 02:59:15,399
<font color="#E5E5E5">I could single request in a single</font>

2421
02:59:13,330 --> 02:59:17,529
response it's actually intermixed<font color="#E5E5E5"> the</font>

2422
02:59:15,399 --> 02:59:19,778
client said something<font color="#E5E5E5"> the server</font>

2423
02:59:17,529 --> 02:59:21,670
responded<font color="#E5E5E5"> back</font><font color="#CCCCCC"> the client said something</font>

2424
02:59:19,779 --> 02:59:23,409
else<font color="#CCCCCC"> the</font><font color="#E5E5E5"> server responded back the</font>

2425
02:59:21,670 --> 02:59:28,330
client said something else<font color="#E5E5E5"> and so we get</font>

2426
02:59:23,409 --> 02:59:33,580
<font color="#E5E5E5">this red and blue intermixed and</font><font color="#CCCCCC"> we can</font>

2427
02:59:28,330 --> 02:59:35,529
do you know fun<font color="#CCCCCC"> things with</font><font color="#E5E5E5"> this like we</font>

2428
02:59:33,580 --> 02:59:39,899
could say well only<font color="#E5E5E5"> show me the</font><font color="#CCCCCC"> client</font>

2429
02:59:35,529 --> 02:59:44,260
side<font color="#E5E5E5"> or the server side or</font><font color="#CCCCCC"> vice-versa</font>

2430
02:59:39,899 --> 02:59:46,479
we could save that<font color="#CCCCCC"> data and we could</font>

2431
02:59:44,260 --> 02:59:50,970
save the ASCII data<font color="#E5E5E5"> we could save the</font>

2432
02:59:46,479 --> 02:59:50,970
raw<font color="#E5E5E5"> version of it</font>

2433
02:59:55,300 --> 03:00:02,778
when I'm analyzing TCP traffic<font color="#CCCCCC"> I almost</font>

2434
03:00:00,350 --> 03:00:05,090
always end up<font color="#E5E5E5"> following</font><font color="#CCCCCC"> the stream</font><font color="#E5E5E5"> and</font>

2435
03:00:02,779 --> 03:00:08,660
<font color="#E5E5E5">this is one</font><font color="#CCCCCC"> of the features I use most</font>

2436
03:00:05,090 --> 03:00:10,370
<font color="#E5E5E5">often with Wireshark as I say look I've</font>

2437
03:00:08,660 --> 03:00:12,529
got all this other<font color="#E5E5E5"> data</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> just want to</font>

2438
03:00:10,370 --> 03:00:16,880
focus in<font color="#E5E5E5"> on what happened</font><font color="#CCCCCC"> between</font><font color="#E5E5E5"> these</font>

2439
03:00:12,529 --> 03:00:19,399
two devices<font color="#E5E5E5"> in their connection and so</font>

2440
03:00:16,880 --> 03:00:21,800
following<font color="#E5E5E5"> the stream lets me do that the</font>

2441
03:00:19,399 --> 03:00:24,560
other<font color="#E5E5E5"> thing you might have</font><font color="#CCCCCC"> noticed when</font>

2442
03:00:21,800 --> 03:00:27,319
you do that is it<font color="#CCCCCC"> automatically applies</font>

2443
03:00:24,560 --> 03:00:31,519
a new<font color="#CCCCCC"> filter</font><font color="#E5E5E5"> and the filter in this case</font>

2444
03:00:27,319 --> 03:00:34,250
is TCP stream<font color="#E5E5E5"> equals</font><font color="#CCCCCC"> zero and the number</font>

2445
03:00:31,520 --> 03:00:39,560
<font color="#E5E5E5">will change based on which packet you</font>

2446
03:00:34,250 --> 03:00:41,479
happen to<font color="#E5E5E5"> click on and which a set of</font>

2447
03:00:39,560 --> 03:00:47,600
communication<font color="#CCCCCC"> it was you know maybe</font>

2448
03:00:41,479 --> 03:00:50,119
it'll<font color="#E5E5E5"> be stream</font><font color="#CCCCCC"> 1 or 2 or 3 or 10 but</font>

2449
03:00:47,600 --> 03:00:51,859
what it's done is after you follow that

2450
03:00:50,120 --> 03:00:55,100
conversation what you're left<font color="#CCCCCC"> with in</font>

2451
03:00:51,859 --> 03:00:58,069
<font color="#CCCCCC">the window</font><font color="#E5E5E5"> is all of the packets of that</font>

2452
03:00:55,100 --> 03:01:02,510
<font color="#CCCCCC">conversation</font><font color="#E5E5E5"> and nothing else</font><font color="#CCCCCC"> so we see</font>

2453
03:00:58,069 --> 03:01:08,720
<font color="#E5E5E5">the</font><font color="#CCCCCC"> syn we see the</font><font color="#E5E5E5"> ack syn ack ack</font><font color="#CCCCCC"> now</font>

2454
03:01:02,510 --> 03:01:10,939
is our<font color="#E5E5E5"> HTTP certificate negotiation</font><font color="#CCCCCC"> and</font>

2455
03:01:08,720 --> 03:01:14,239
<font color="#CCCCCC">we get the actual data being exchanged</font>

2456
03:01:10,939 --> 03:01:19,160
<font color="#CCCCCC">and finally we get our connection</font>

2457
03:01:14,239 --> 03:01:21,680
closing just<font color="#E5E5E5"> like we have a sequence</font><font color="#CCCCCC"> of</font>

2458
03:01:19,160 --> 03:01:26,260
packets that<font color="#E5E5E5"> starts our TCP connection</font>

2459
03:01:21,680 --> 03:01:30,380
we have a sequence<font color="#CCCCCC"> of packets</font><font color="#E5E5E5"> that</font>

2460
03:01:26,260 --> 03:01:33,590
finishes our TCP connection and so<font color="#CCCCCC"> we'll</font>

2461
03:01:30,380 --> 03:01:35,929
<font color="#CCCCCC">usually see a fin ack from one side and</font>

2462
03:01:33,590 --> 03:01:38,989
a fin ack from the other side and

2463
03:01:35,930 --> 03:01:44,300
<font color="#CCCCCC">that'll</font><font color="#E5E5E5"> indicate both sides are closing</font>

2464
03:01:38,989 --> 03:01:47,810
the connection<font color="#E5E5E5"> most of the time servers</font>

2465
03:01:44,300 --> 03:01:50,660
today<font color="#E5E5E5"> will</font><font color="#CCCCCC"> also include these reset</font>

2466
03:01:47,810 --> 03:01:52,340
packets<font color="#E5E5E5"> afterwards and that's just an</font>

2467
03:01:50,660 --> 03:01:55,069
efficiency<font color="#E5E5E5"> thing so they don't have to</font>

2468
03:01:52,340 --> 03:01:57,470
wait around for<font color="#E5E5E5"> confirmation of the</font>

2469
03:01:55,069 --> 03:02:01,028
final act<font color="#E5E5E5"> they say I've told you I'm</font>

2470
03:01:57,470 --> 03:02:04,020
<font color="#E5E5E5">done</font><font color="#CCCCCC"> and now I'm actually quitting</font><font color="#E5E5E5"> I'm</font>

2471
03:02:01,029 --> 03:02:08,040
resetting<font color="#E5E5E5"> this</font>

2472
03:02:04,021 --> 03:02:10,080
so when I teach<font color="#E5E5E5"> I mentioned I teach this</font>

2473
03:02:08,040 --> 03:02:11,311
at Weber State when I teach this to<font color="#CCCCCC"> my</font>

2474
03:02:10,080 --> 03:02:12,990
students a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> times they get</font>

2475
03:02:11,311 --> 03:02:14,760
<font color="#CCCCCC">confused and they think this is a</font>

2476
03:02:12,990 --> 03:02:16,590
<font color="#E5E5E5">problem or this is an</font><font color="#CCCCCC"> error'</font><font color="#E5E5E5"> this is</font>

2477
03:02:14,760 --> 03:02:18,690
something unusual<font color="#E5E5E5"> because it's colored</font>

2478
03:02:16,590 --> 03:02:20,400
that way<font color="#CCCCCC"> now it's bright red</font><font color="#E5E5E5"> it stands</font>

2479
03:02:18,690 --> 03:02:24,860
<font color="#E5E5E5">out you're thinking this is maybe</font>

2480
03:02:20,400 --> 03:02:28,260
<font color="#E5E5E5">something weird is going on it can</font><font color="#CCCCCC"> be if</font>

2481
03:02:24,860 --> 03:02:29,851
it's not<font color="#E5E5E5"> part of closing a connection</font>

2482
03:02:28,260 --> 03:02:31,670
<font color="#E5E5E5">and when it's part of closing a</font>

2483
03:02:29,851 --> 03:02:35,311
connection it's just<font color="#CCCCCC"> normal behavior in</font>

2484
03:02:31,670 --> 03:02:38,130
other<font color="#E5E5E5"> contexts</font><font color="#CCCCCC"> it indicates something's</font>

2485
03:02:35,311 --> 03:02:39,840
gone wrong<font color="#E5E5E5"> you know if you try</font><font color="#CCCCCC"> and open</font>

2486
03:02:38,130 --> 03:02:42,570
a connection<font color="#E5E5E5"> and instead of getting</font><font color="#CCCCCC"> a</font>

2487
03:02:39,840 --> 03:02:47,190
<font color="#CCCCCC">syn/ack back</font><font color="#E5E5E5"> you get a reset well that</font>

2488
03:02:42,570 --> 03:02:53,039
means the server is actively<font color="#CCCCCC"> rejecting</font>

2489
03:02:47,190 --> 03:02:54,721
those connections on that port<font color="#E5E5E5"> if you're</font>

2490
03:02:53,040 --> 03:02:57,721
in the<font color="#E5E5E5"> middle of a conversation</font><font color="#CCCCCC"> and you</font>

2491
03:02:54,721 --> 03:03:00,000
get a reset again<font color="#E5E5E5"> something's gone wrong</font>

2492
03:02:57,721 --> 03:03:03,350
there's that is an indication of a

2493
03:03:00,000 --> 03:03:06,920
<font color="#E5E5E5">problem but</font><font color="#CCCCCC"> a reset as part of a Finnick</font>

2494
03:03:03,351 --> 03:03:09,920
sequence<font color="#CCCCCC"> is just normal expected</font>

2495
03:03:06,920 --> 03:03:09,920
<font color="#E5E5E5">behavior</font>

2496
03:03:18,811 --> 03:03:29,190
let's see if we have<font color="#E5E5E5"> an</font><font color="#CCCCCC"> example of some</font>

2497
03:03:22,410 --> 03:03:32,521
retransmissions so<font color="#CCCCCC"> Wireshark in the</font>

2498
03:03:29,190 --> 03:03:36,450
bottom<font color="#CCCCCC"> left-hand corner there's this</font>

2499
03:03:32,521 --> 03:03:40,471
<font color="#E5E5E5">circle and it changes color</font><font color="#CCCCCC"> based on</font>

2500
03:03:36,450 --> 03:03:42,360
what information Wireshark sees in<font color="#E5E5E5"> your</font>

2501
03:03:40,471 --> 03:03:44,400
capture<font color="#CCCCCC"> file</font><font color="#E5E5E5"> right now it's yellow</font>

2502
03:03:42,360 --> 03:03:47,040
indicating there's some warnings but

2503
03:03:44,400 --> 03:03:50,699
nothing super serious as far as why<font color="#E5E5E5"> our</font>

2504
03:03:47,040 --> 03:03:51,030
shirt<font color="#E5E5E5"> considers things but if you pop it</font>

2505
03:03:50,700 --> 03:03:58,920
<font color="#E5E5E5">up</font>

2506
03:03:51,030 --> 03:04:02,511
most of these are<font color="#E5E5E5"> related to TCP and so</font>

2507
03:03:58,920 --> 03:04:04,771
<font color="#CCCCCC">we'll</font><font color="#E5E5E5"> see you know like this warning</font><font color="#CCCCCC"> and</font>

2508
03:04:02,511 --> 03:04:09,061
there's<font color="#E5E5E5"> actually a whole</font><font color="#CCCCCC"> bunch of them</font>

2509
03:04:04,771 --> 03:04:11,070
<font color="#E5E5E5">where packets were out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> order we were</font>

2510
03:04:09,061 --> 03:04:15,270
<font color="#E5E5E5">expecting one packet and</font><font color="#CCCCCC"> we got another</font>

2511
03:04:11,070 --> 03:04:17,820
one<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> necessarily a problem no as</font>

2512
03:04:15,271 --> 03:04:20,181
long as eventually we got<font color="#E5E5E5"> the packet we</font>

2513
03:04:17,820 --> 03:04:23,520
were looking for it does indicate that

2514
03:04:20,181 --> 03:04:31,740
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> some congestion</font><font color="#CCCCCC"> on the network</font>

2515
03:04:23,521 --> 03:04:33,660
<font color="#E5E5E5">that there's you know</font><font color="#CCCCCC"> unn not abnormal</font>

2516
03:04:31,740 --> 03:04:36,119
<font color="#E5E5E5">but maybe unexpected behavior in that</font>

2517
03:04:33,660 --> 03:04:37,650
<font color="#E5E5E5">normally whatever you send first you</font>

2518
03:04:36,120 --> 03:04:41,340
expect to get there first

2519
03:04:37,650 --> 03:04:43,800
unless there's extenuating circumstances

2520
03:04:41,340 --> 03:04:46,290
you know a route change<font color="#E5E5E5"> congestion on</font>

2521
03:04:43,800 --> 03:04:48,300
<font color="#CCCCCC">the network packets getting dropped or</font>

2522
03:04:46,290 --> 03:04:51,840
lost and having<font color="#E5E5E5"> to be retransmitted all</font>

2523
03:04:48,300 --> 03:04:55,949
of those might cause packets to arrive

2524
03:04:51,840 --> 03:05:00,320
out of order<font color="#CCCCCC"> and the way it tracks</font><font color="#E5E5E5"> order</font>

2525
03:04:55,950 --> 03:05:02,641
is these sequence numbers<font color="#E5E5E5"> so we said</font>

2526
03:05:00,320 --> 03:05:04,920
we're establishing<font color="#E5E5E5"> a connection we're</font>

2527
03:05:02,641 --> 03:05:07,320
negotiating parameters<font color="#E5E5E5"> one of the things</font>

2528
03:05:04,920 --> 03:05:12,210
we negotiate is where to start<font color="#CCCCCC"> counting</font>

2529
03:05:07,320 --> 03:05:15,000
<font color="#E5E5E5">and every single TCP connection both</font>

2530
03:05:12,210 --> 03:05:16,641
sides of it have a<font color="#E5E5E5"> number that says this</font>

2531
03:05:15,000 --> 03:05:19,681
<font color="#E5E5E5">is byte</font><font color="#CCCCCC"> number one this is byte number</font>

2532
03:05:16,641 --> 03:05:22,199
<font color="#CCCCCC">3000 this</font><font color="#E5E5E5"> is byte number</font><font color="#CCCCCC"> 7000 and we</font>

2533
03:05:19,681 --> 03:05:23,431
count and<font color="#E5E5E5"> that's how we know when</font>

2534
03:05:22,200 --> 03:05:27,391
something comes<font color="#E5E5E5"> out of order</font>

2535
03:05:23,431 --> 03:05:30,620
<font color="#E5E5E5">because it's number is off</font><font color="#CCCCCC"> from what we</font>

2536
03:05:27,391 --> 03:05:30,619
were expecting next

2537
03:05:38,430 --> 03:05:45,070
yeah so I got this<font color="#E5E5E5"> one down here</font><font color="#CCCCCC"> in the</font>

2538
03:05:41,920 --> 03:05:47,710
bottom corner there's this circle icon

2539
03:05:45,070 --> 03:05:51,330
<font color="#CCCCCC">it's color won't</font><font color="#E5E5E5"> always be yellow its</font>

2540
03:05:47,710 --> 03:05:54,490
colors based on the highest severity of

2541
03:05:51,330 --> 03:05:56,860
note<font color="#E5E5E5"> here</font><font color="#CCCCCC"> and so in this</font><font color="#E5E5E5"> case our</font>

2542
03:05:54,490 --> 03:06:04,510
highest severity is yellow and so the

2543
03:05:56,860 --> 03:06:06,330
buttons yellow the you know you can look

2544
03:06:04,510 --> 03:06:09,460
through some<font color="#E5E5E5"> of these</font><font color="#CCCCCC"> other warnings</font>

2545
03:06:06,330 --> 03:06:13,690
<font color="#E5E5E5">here's one that we were just talking</font>

2546
03:06:09,460 --> 03:06:16,269
<font color="#CCCCCC">about connection reset</font><font color="#E5E5E5"> there's a whole</font>

2547
03:06:13,690 --> 03:06:18,820
bunch<font color="#E5E5E5"> of packets where the connection</font>

2548
03:06:16,270 --> 03:06:20,140
was reset Wireshark<font color="#CCCCCC"> has said hey this</font><font color="#E5E5E5"> is</font>

2549
03:06:18,820 --> 03:06:26,560
<font color="#CCCCCC">a warning maybe it's</font><font color="#E5E5E5"> something you want</font>

2550
03:06:20,140 --> 03:06:36,939
to<font color="#E5E5E5"> look at yes if it's not next to a</font><font color="#CCCCCC"> fin</font>

2551
03:06:26,560 --> 03:06:39,100
<font color="#E5E5E5">fin</font><font color="#CCCCCC"> ACK these notes</font><font color="#E5E5E5"> deal with you know</font>

2552
03:06:36,940 --> 03:06:42,490
keeping packets in order retransmitting

2553
03:06:39,100 --> 03:06:45,340
when necessary<font color="#CCCCCC"> so we get packets</font><font color="#E5E5E5"> where</font>

2554
03:06:42,490 --> 03:06:49,470
we say<font color="#CCCCCC"> hey we've already seen this</font>

2555
03:06:45,340 --> 03:06:52,600
packet in fact we saw it multiple<font color="#CCCCCC"> times</font>

2556
03:06:49,470 --> 03:06:55,080
<font color="#E5E5E5">this is what we call a TCP fast</font>

2557
03:06:52,600 --> 03:06:57,520
retransmission where the<font color="#E5E5E5"> original packet</font>

2558
03:06:55,080 --> 03:07:04,060
didn't make<font color="#E5E5E5"> it to its destination</font><font color="#CCCCCC"> and</font>

2559
03:06:57,520 --> 03:07:06,610
we're retransmitting it similar type of

2560
03:07:04,060 --> 03:07:11,140
<font color="#CCCCCC">thing on the duplicate acknowledgments</font>

2561
03:07:06,610 --> 03:07:13,180
they<font color="#CCCCCC"> usually indicate that packets have</font>

2562
03:07:11,140 --> 03:07:15,789
arrived out<font color="#CCCCCC"> of order</font><font color="#E5E5E5"> or have been lost</font>

2563
03:07:13,180 --> 03:07:17,680
<font color="#E5E5E5">and so we're saying okay I got packet</font>

2564
03:07:15,790 --> 03:07:20,500
number<font color="#E5E5E5"> 3000 but I'm still waiting for</font>

2565
03:07:17,680 --> 03:07:21,970
<font color="#E5E5E5">packet</font><font color="#CCCCCC"> number 2000 and that's and I'm</font>

2566
03:07:20,500 --> 03:07:24,220
going<font color="#CCCCCC"> to keep telling</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> that I'm</font>

2567
03:07:21,970 --> 03:07:30,279
<font color="#E5E5E5">waiting for packet</font><font color="#CCCCCC"> number 2000 until</font>

2568
03:07:24,220 --> 03:07:33,910
<font color="#CCCCCC">you've retransmitted as you</font><font color="#E5E5E5"> can see</font>

2569
03:07:30,280 --> 03:07:37,690
there's lots of these it's not<font color="#E5E5E5"> a problem</font>

2570
03:07:33,910 --> 03:07:39,670
per se<font color="#E5E5E5"> but it can be reasons why your</font>

2571
03:07:37,690 --> 03:07:42,370
<font color="#CCCCCC">network</font><font color="#E5E5E5"> slow</font><font color="#CCCCCC"> so if you're</font>

2572
03:07:39,670 --> 03:07:44,620
troubleshooting<font color="#E5E5E5"> and you're saying I feel</font>

2573
03:07:42,370 --> 03:07:47,890
like every time<font color="#E5E5E5"> I go</font><font color="#CCCCCC"> to this site</font><font color="#E5E5E5"> it's</font>

2574
03:07:44,620 --> 03:07:49,930
<font color="#E5E5E5">pull up</font><font color="#CCCCCC"> Wireshark and</font><font color="#E5E5E5"> see is there a lot</font>

2575
03:07:47,890 --> 03:07:52,119
<font color="#CCCCCC">of dropped packets</font><font color="#E5E5E5"> between you and that</font>

2576
03:07:49,930 --> 03:07:53,710
site and are you<font color="#E5E5E5"> getting lots of</font>

2577
03:07:52,120 --> 03:07:56,530
<font color="#CCCCCC">retransmissions lots of duplicate</font>

2578
03:07:53,710 --> 03:07:58,149
acknowledgments<font color="#E5E5E5"> if so that's one of</font><font color="#CCCCCC"> the</font>

2579
03:07:56,530 --> 03:08:00,130
reasons why it's<font color="#CCCCCC"> slow</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> you're</font>

2580
03:07:58,149 --> 03:08:09,550
having to resend things send it<font color="#E5E5E5"> you know</font>

2581
03:08:00,130 --> 03:08:18,550
three<font color="#E5E5E5"> times instead</font><font color="#CCCCCC"> of just once let's</font>

2582
03:08:09,550 --> 03:08:22,720
look at one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> these packets if you</font>

2583
03:08:18,550 --> 03:08:25,740
click on these it should take you<font color="#CCCCCC"> to</font>

2584
03:08:22,720 --> 03:08:25,740
that packet<font color="#CCCCCC"> number</font>

2585
03:08:31,120 --> 03:08:50,800
<font color="#E5E5E5">oh it's cuz</font><font color="#CCCCCC"> it's filtered out of my okay</font>

2586
03:08:41,470 --> 03:08:52,899
so duplicate<font color="#CCCCCC"> Dodge</font><font color="#E5E5E5"> manse okay so when</font>

2587
03:08:50,800 --> 03:08:54,670
you click on them<font color="#E5E5E5"> in here</font><font color="#CCCCCC"> as long</font><font color="#E5E5E5"> as</font>

2588
03:08:52,899 --> 03:09:02,849
they're not filtered out<font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> take you</font>

2589
03:08:54,670 --> 03:09:05,740
to them in the display<font color="#CCCCCC"> and so we can see</font>

2590
03:09:02,850 --> 03:09:07,420
you know<font color="#E5E5E5"> what we've we get an</font>

2591
03:09:05,740 --> 03:09:08,140
<font color="#E5E5E5">acknowledgment another one another one</font>

2592
03:09:07,420 --> 03:09:12,729
another one

2593
03:09:08,140 --> 03:09:15,010
all acknowledging the same set<font color="#E5E5E5"> of</font>

2594
03:09:12,729 --> 03:09:17,649
packets<font color="#E5E5E5"> the same byte</font><font color="#CCCCCC"> number that we're</font>

2595
03:09:15,010 --> 03:09:23,590
looking<font color="#CCCCCC"> for we're saying</font><font color="#E5E5E5"> now I need one</font>

2596
03:09:17,649 --> 03:09:27,760
<font color="#E5E5E5">one five four zero</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> next what we</font>

2597
03:09:23,590 --> 03:09:37,660
hope also<font color="#E5E5E5"> happens with these duplicate</font>

2598
03:09:27,760 --> 03:09:40,330
acknowledgments is an option and the

2599
03:09:37,660 --> 03:09:42,760
option we're looking for is this<font color="#E5E5E5"> sack</font>

2600
03:09:40,330 --> 03:09:45,160
option and<font color="#E5E5E5"> that stands for selective</font>

2601
03:09:42,760 --> 03:09:47,050
<font color="#E5E5E5">acknowledgement and what that means is</font>

2602
03:09:45,160 --> 03:09:50,880
that<font color="#E5E5E5"> even though we're saying we still</font>

2603
03:09:47,050 --> 03:09:56,140
need packet<font color="#E5E5E5"> one one five four</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> four</font>

2604
03:09:50,880 --> 03:09:58,960
<font color="#E5E5E5">we can let the other</font><font color="#CCCCCC"> in know</font><font color="#E5E5E5"> that we</font>

2605
03:09:56,140 --> 03:10:02,740
<font color="#E5E5E5">already got packets one two one one one</font>

2606
03:09:58,960 --> 03:10:04,660
six<font color="#E5E5E5"> up to one two eight</font><font color="#CCCCCC"> two five six so</font>

2607
03:10:02,740 --> 03:10:07,479
that<font color="#CCCCCC"> they don't</font><font color="#E5E5E5"> have to retransmit those</font>

2608
03:10:04,660 --> 03:10:10,450
packets when they're retransmitting this

2609
03:10:07,479 --> 03:10:13,358
one they can say<font color="#E5E5E5"> look I'm missing</font>

2610
03:10:10,450 --> 03:10:17,950
everything<font color="#E5E5E5"> from 115 onward accept</font>

2611
03:10:13,359 --> 03:10:20,560
<font color="#E5E5E5">starting at 121 116 I've got those if</font>

2612
03:10:17,950 --> 03:10:22,840
you don't have selective<font color="#CCCCCC"> acknowledgement</font>

2613
03:10:20,560 --> 03:10:24,490
<font color="#E5E5E5">that's going to be a reason why your</font>

2614
03:10:22,840 --> 03:10:27,310
<font color="#CCCCCC">connections slow</font><font color="#E5E5E5"> because you're going to</font>

2615
03:10:24,490 --> 03:10:30,310
<font color="#E5E5E5">have</font><font color="#CCCCCC"> be transmitting information</font><font color="#E5E5E5"> that</font>

2616
03:10:27,310 --> 03:10:37,180
was already<font color="#E5E5E5"> received by both ends and</font>

2617
03:10:30,310 --> 03:10:41,100
just<font color="#E5E5E5"> wasn't properly acknowledged let's</font>

2618
03:10:37,180 --> 03:10:41,100
go let's follow this stream

2619
03:10:49,391 --> 03:10:54,910
okay<font color="#CCCCCC"> oh so here's a good example of</font>

2620
03:10:52,900 --> 03:10:59,710
<font color="#E5E5E5">following a stream where it's not all</font>

2621
03:10:54,910 --> 03:11:02,289
<font color="#E5E5E5">encrypted so we can actually see it so</font>

2622
03:10:59,710 --> 03:11:06,100
<font color="#E5E5E5">you can i just right-clicked on packet</font>

2623
03:11:02,290 --> 03:11:11,620
<font color="#CCCCCC">numbers 1602</font><font color="#E5E5E5"> and followed the tcp stream</font>

2624
03:11:06,101 --> 03:11:13,690
<font color="#E5E5E5">and what I get is the request and then</font>

2625
03:11:11,620 --> 03:11:17,230
the response<font color="#E5E5E5"> another request another</font>

2626
03:11:13,690 --> 03:11:21,030
response<font color="#E5E5E5"> all in plain text because it's</font>

2627
03:11:17,230 --> 03:11:25,210
done over HTTP and I can actually<font color="#E5E5E5"> see</font>

2628
03:11:21,030 --> 03:11:30,070
<font color="#CCCCCC">all of</font><font color="#E5E5E5"> the data that was sent between</font>

2629
03:11:25,210 --> 03:11:33,359
<font color="#CCCCCC">these two devices</font><font color="#E5E5E5"> and some of it was</font>

2630
03:11:30,070 --> 03:11:39,130
<font color="#CCCCCC">even this is probably gzip compressed</font>

2631
03:11:33,360 --> 03:11:41,110
<font color="#E5E5E5">what is that oh yeah so this where it</font>

2632
03:11:39,130 --> 03:11:50,260
starts looking<font color="#E5E5E5"> like garbage</font><font color="#CCCCCC"> it's because</font>

2633
03:11:41,110 --> 03:11:52,420
it's been compressed<font color="#CCCCCC"> alright but all</font>

2634
03:11:50,261 --> 03:11:58,000
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is beside the</font><font color="#CCCCCC"> point of what I was</font>

2635
03:11:52,420 --> 03:12:00,880
showing with our selective

2636
03:11:58,000 --> 03:12:03,070
<font color="#CCCCCC">acknowledgement</font><font color="#E5E5E5"> the time that we decide</font>

2637
03:12:00,880 --> 03:12:06,340
if selective<font color="#CCCCCC"> acknowledgement is going to</font>

2638
03:12:03,070 --> 03:12:16,020
be used<font color="#E5E5E5"> is in this handshake our sin and</font>

2639
03:12:06,341 --> 03:12:22,021
<font color="#CCCCCC">Cenac packets and if you look at these</font>

2640
03:12:16,021 --> 03:12:26,761
sin<font color="#CCCCCC"> and sin AK packets under the</font><font color="#E5E5E5"> TCP</font>

2641
03:12:22,021 --> 03:12:28,630
section there's some<font color="#E5E5E5"> options where</font>

2642
03:12:26,761 --> 03:12:30,790
different parameters are<font color="#CCCCCC"> being</font>

2643
03:12:28,630 --> 03:12:33,789
negotiated<font color="#E5E5E5"> and what you want to see is</font>

2644
03:12:30,790 --> 03:12:36,641
that<font color="#CCCCCC"> sack permitted is one of the</font>

2645
03:12:33,790 --> 03:12:41,230
<font color="#E5E5E5">options being set and so we do see that</font>

2646
03:12:36,641 --> 03:12:45,341
<font color="#E5E5E5">in</font><font color="#CCCCCC"> this case and we</font><font color="#E5E5E5"> can filter based on</font>

2647
03:12:41,230 --> 03:12:53,039
that we could say you<font color="#E5E5E5"> know show me all</font>

2648
03:12:45,341 --> 03:12:53,040
of<font color="#CCCCCC"> the packets</font><font color="#E5E5E5"> that do not have</font>

2649
03:12:57,391 --> 03:13:02,230
<font color="#CCCCCC">TCP option kind equal to</font><font color="#E5E5E5"> four and you'll</font>

2650
03:13:00,730 --> 03:13:07,779
notice we<font color="#E5E5E5"> get a bunch</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> stuff that</font>

2651
03:13:02,230 --> 03:13:20,430
<font color="#E5E5E5">isn't our initial handshake</font><font color="#CCCCCC"> so maybe we</font>

2652
03:13:07,780 --> 03:13:29,070
<font color="#CCCCCC">want</font><font color="#E5E5E5"> to say and</font><font color="#CCCCCC"> oh of those and TCP dot</font>

2653
03:13:20,431 --> 03:13:29,070
flags that sin equals<font color="#E5E5E5"> one</font>

2654
03:13:33,470 --> 03:13:42,528
and we actually see<font color="#CCCCCC"> several connections</font>

2655
03:13:38,410 --> 03:13:47,539
<font color="#CCCCCC">let me actually</font><font color="#E5E5E5"> check because I</font><font color="#CCCCCC"> think Oh</font>

2656
03:13:42,529 --> 03:13:54,010
<font color="#CCCCCC">yep</font><font color="#E5E5E5"> sure we're at least one side of the</font>

2657
03:13:47,540 --> 03:13:56,450
<font color="#CCCCCC">connection isn't</font><font color="#E5E5E5"> going to be using the</font>

2658
03:13:54,010 --> 03:13:59,510
selective<font color="#CCCCCC"> acknowledgement</font><font color="#E5E5E5"> and we've got</font>

2659
03:13:56,450 --> 03:14:04,040
this whole<font color="#E5E5E5"> set of packets</font><font color="#CCCCCC"> that the</font>

2660
03:13:59,510 --> 03:14:08,510
selective<font color="#CCCCCC"> acknowledgement option wasn't</font>

2661
03:14:04,040 --> 03:14:10,370
<font color="#E5E5E5">set and this would be if it's a device</font>

2662
03:14:08,510 --> 03:14:12,410
under<font color="#E5E5E5"> our control</font><font color="#CCCCCC"> this would be one</font>

2663
03:14:10,370 --> 03:14:14,569
where<font color="#E5E5E5"> we would want to go in and change</font>

2664
03:14:12,410 --> 03:14:16,369
the<font color="#E5E5E5"> configuration so</font><font color="#CCCCCC"> that it did</font>

2665
03:14:14,569 --> 03:14:19,420
selective<font color="#CCCCCC"> acknowledgement</font><font color="#E5E5E5"> and we would</font>

2666
03:14:16,370 --> 03:14:24,430
likely see a noticeable<font color="#CCCCCC"> improvement in</font>

2667
03:14:19,420 --> 03:14:24,430
how our network connections functioned

2668
03:14:27,489 --> 03:14:35,810
these are all<font color="#E5E5E5"> just</font><font color="#CCCCCC"> double-checking but</font>

2669
03:14:33,739 --> 03:14:42,410
it looks<font color="#E5E5E5"> like they're all</font><font color="#CCCCCC"> IP addresses</font>

2670
03:14:35,810 --> 03:14:44,569
that<font color="#CCCCCC"> are outside of so the ones under my</font>

2671
03:14:42,410 --> 03:14:47,810
control in this packet capture are the

2672
03:14:44,569 --> 03:14:51,590
one 92168 packets<font color="#E5E5E5"> so I can't do</font><font color="#CCCCCC"> anything</font>

2673
03:14:47,810 --> 03:14:54,319
about the<font color="#CCCCCC"> fact that you know</font><font color="#E5E5E5"> 68 168 184</font>

2674
03:14:51,590 --> 03:14:56,920
57 doesn't want to use selective

2675
03:14:54,319 --> 03:14:56,920
<font color="#CCCCCC">acknowledgement</font>

2676
03:15:02,039 --> 03:15:04,669
<font color="#E5E5E5">all right</font>

2677
03:15:09,000 --> 03:15:16,530
one other issue with TCP connections<font color="#CCCCCC"> and</font>

2678
03:15:12,260 --> 03:15:18,150
that is the<font color="#E5E5E5"> timing of these packets it's</font>

2679
03:15:16,530 --> 03:15:26,970
one<font color="#E5E5E5"> of the things that's easy to get</font>

2680
03:15:18,150 --> 03:15:28,470
lost<font color="#CCCCCC"> when we're</font><font color="#E5E5E5"> looking at a list is the</font>

2681
03:15:26,970 --> 03:15:31,289
fact<font color="#CCCCCC"> that not all of</font><font color="#E5E5E5"> these packets</font>

2682
03:15:28,470 --> 03:15:40,230
arrived<font color="#E5E5E5"> the same distance apart or the</font>

2683
03:15:31,290 --> 03:15:43,490
<font color="#E5E5E5">same timing apart so I I'm</font><font color="#CCCCCC"> filtering so</font>

2684
03:15:40,230 --> 03:15:43,490
I'm just looking<font color="#E5E5E5"> at TCP</font>

2685
03:15:51,110 --> 03:16:00,830
and you'll notice these are all arriving

2686
03:15:56,660 --> 03:16:04,760
fairly close together<font color="#CCCCCC"> I mean we're</font>

2687
03:16:00,830 --> 03:16:08,450
talking<font color="#E5E5E5"> about what is that milliseconds</font>

2688
03:16:04,760 --> 03:16:10,480
apart<font color="#E5E5E5"> in or less than milliseconds in</font>

2689
03:16:08,450 --> 03:16:14,390
some cases<font color="#CCCCCC"> that</font><font color="#E5E5E5"> these packets are</font>

2690
03:16:10,480 --> 03:16:17,960
arriving<font color="#CCCCCC"> but in other</font><font color="#E5E5E5"> places</font><font color="#CCCCCC"> the gap</font>

2691
03:16:14,390 --> 03:16:20,480
might be you know<font color="#E5E5E5"> seconds or tens of</font>

2692
03:16:17,960 --> 03:16:23,150
seconds between packets<font color="#E5E5E5"> and when we just</font>

2693
03:16:20,480 --> 03:16:25,189
look at<font color="#E5E5E5"> the list it's easy to forget</font>

2694
03:16:23,150 --> 03:16:26,570
<font color="#CCCCCC">that as we look at the list and</font><font color="#E5E5E5"> say oh</font>

2695
03:16:25,190 --> 03:16:28,190
well this one came right after<font color="#CCCCCC"> this one</font>

2696
03:16:26,570 --> 03:16:29,869
<font color="#E5E5E5">which came right after</font><font color="#CCCCCC"> this one</font><font color="#E5E5E5"> and we</font>

2697
03:16:28,190 --> 03:16:40,210
forget to<font color="#CCCCCC"> look over at how much</font><font color="#E5E5E5"> time</font>

2698
03:16:29,870 --> 03:16:51,980
elapsed<font color="#E5E5E5"> between those two packets one</font>

2699
03:16:40,210 --> 03:16:54,650
change<font color="#E5E5E5"> we can make is we can we can go</font>

2700
03:16:51,980 --> 03:17:00,199
under<font color="#CCCCCC"> the</font><font color="#E5E5E5"> View menu and the time display</font>

2701
03:16:54,650 --> 03:17:03,320
format and instead<font color="#CCCCCC"> of showing</font><font color="#E5E5E5"> so the</font>

2702
03:17:00,200 --> 03:17:06,320
default<font color="#CCCCCC"> is the time since the start of</font>

2703
03:17:03,320 --> 03:17:10,460
the capture we could instead look at

2704
03:17:06,320 --> 03:17:13,970
time elapsed between packets and<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font>

2705
03:17:10,460 --> 03:17:17,150
could<font color="#E5E5E5"> say where's packets since previous</font>

2706
03:17:13,970 --> 03:17:20,480
captured packet or previous displayed

2707
03:17:17,150 --> 03:17:22,490
packet and I<font color="#E5E5E5"> like previous displayed</font>

2708
03:17:20,480 --> 03:17:26,090
packet<font color="#E5E5E5"> because</font><font color="#CCCCCC"> that way as I'm applying</font>

2709
03:17:22,490 --> 03:17:27,561
filters<font color="#E5E5E5"> on just my TCP data my timing</font>

2710
03:17:26,090 --> 03:17:29,990
doesn't get messed<font color="#E5E5E5"> up by some random</font>

2711
03:17:27,561 --> 03:17:35,779
ping mixed in the middle of my

2712
03:17:29,990 --> 03:17:37,760
communication now we can start to see

2713
03:17:35,780 --> 03:17:40,460
without having<font color="#CCCCCC"> to do</font><font color="#E5E5E5"> the math the</font>

2714
03:17:37,760 --> 03:17:43,100
difference in time<font color="#CCCCCC"> between these packets</font>

2715
03:17:40,460 --> 03:17:49,150
which was in our you<font color="#E5E5E5"> know tens of</font>

2716
03:17:43,100 --> 03:17:49,150
thousands of<font color="#E5E5E5"> seconds</font><font color="#CCCCCC"> and I could</font>

2717
03:17:53,950 --> 03:17:58,880
<font color="#CCCCCC">most</font><font color="#E5E5E5"> of these are</font><font color="#CCCCCC"> oh here's one that</font>

2718
03:17:57,021 --> 03:18:01,670
<font color="#E5E5E5">took three tenths of a second instead of</font>

2719
03:17:58,880 --> 03:18:02,990
tens<font color="#E5E5E5"> of thousands of a second and when</font>

2720
03:18:01,670 --> 03:18:14,750
we're<font color="#E5E5E5"> just scrolling through the list we</font>

2721
03:18:02,990 --> 03:18:15,289
wouldn't necessarily<font color="#E5E5E5"> see</font><font color="#CCCCCC"> that well let's</font>

2722
03:18:14,750 --> 03:18:17,240
do<font color="#CCCCCC"> it</font>

2723
03:18:15,290 --> 03:18:25,910
cheat<font color="#E5E5E5"> so I don't have to remember</font>

2724
03:18:17,240 --> 03:18:28,850
<font color="#CCCCCC">exactly</font><font color="#E5E5E5"> what to type so there's a whole</font>

2725
03:18:25,910 --> 03:18:31,039
<font color="#CCCCCC">bunch of time</font><font color="#E5E5E5"> information that's not</font>

2726
03:18:28,850 --> 03:18:33,200
part of the<font color="#CCCCCC"> actual packet but Wireshark</font>

2727
03:18:31,040 --> 03:18:36,170
<font color="#E5E5E5">includes in the information and you can</font>

2728
03:18:33,200 --> 03:18:39,650
<font color="#CCCCCC">filter on that this information as well</font>

2729
03:18:36,170 --> 03:18:44,530
<font color="#E5E5E5">so I can</font><font color="#CCCCCC"> say well time since my previous</font>

2730
03:18:39,650 --> 03:18:47,090
displayed frame let's create a filter

2731
03:18:44,530 --> 03:18:50,090
and say well let's find all of them that

2732
03:18:47,090 --> 03:18:53,410
we're exactly<font color="#CCCCCC"> you know 0.43 500 seconds</font>

2733
03:18:50,090 --> 03:18:56,450
apart<font color="#E5E5E5"> well that's not that useful</font>

2734
03:18:53,410 --> 03:18:58,521
<font color="#E5E5E5">because they're not likely to be exactly</font>

2735
03:18:56,450 --> 03:19:05,540
but more<font color="#CCCCCC"> useful would be well show me</font>

2736
03:18:58,521 --> 03:19:08,470
<font color="#CCCCCC">everything</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> was more than oops one</font>

2737
03:19:05,540 --> 03:19:08,470
second apart<font color="#E5E5E5"> maybe</font>

2738
03:19:19,279 --> 03:19:24,229
<font color="#E5E5E5">okay and this one's</font><font color="#CCCCCC"> actually saying</font>

2739
03:19:22,579 --> 03:19:34,458
there was never a packet<font color="#E5E5E5"> that was more</font>

2740
03:19:24,229 --> 03:19:36,019
than one second apart let's make sure

2741
03:19:34,459 --> 03:19:41,659
this is actually<font color="#E5E5E5"> doing what it's</font>

2742
03:19:36,020 --> 03:19:43,489
<font color="#CCCCCC">supposed to yeah okay so in</font><font color="#E5E5E5"> this capture</font>

2743
03:19:41,659 --> 03:19:46,159
file which isn't that<font color="#E5E5E5"> surprising because</font>

2744
03:19:43,489 --> 03:19:47,839
it's all<font color="#E5E5E5"> done on a couple virtual</font>

2745
03:19:46,159 --> 03:19:50,899
machines<font color="#CCCCCC"> where networking is</font><font color="#E5E5E5"> going to be</font>

2746
03:19:47,839 --> 03:19:53,749
practically instantaneous<font color="#E5E5E5"> everything</font>

2747
03:19:50,899 --> 03:19:58,329
happened fast<font color="#CCCCCC"> nothing took</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> than a</font>

2748
03:19:53,749 --> 03:19:58,329
<font color="#E5E5E5">second from one packet to the next</font><font color="#CCCCCC"> Oh</font>

2749
03:19:58,479 --> 03:20:05,470
actually<font color="#E5E5E5"> let's do TCP</font>

2750
03:20:13,831 --> 03:20:18,141
<font color="#E5E5E5">okay yeah so it's still happening fast</font>

2751
03:20:28,460 --> 03:20:39,000
yeah and<font color="#E5E5E5"> this filter</font><font color="#CCCCCC"> is not quite doing</font>

2752
03:20:31,500 --> 03:20:42,560
<font color="#CCCCCC">what it's supposed to let's try a</font>

2753
03:20:39,000 --> 03:20:42,560
<font color="#CCCCCC">different filter here</font>

2754
03:20:49,210 --> 03:20:51,269
you

2755
03:20:55,690 --> 03:21:09,460
there we go this one's<font color="#CCCCCC"> gonna work better</font>

2756
03:20:57,900 --> 03:21:13,150
because<font color="#E5E5E5"> when you're okay so if you can</font>

2757
03:21:09,460 --> 03:21:14,770
see<font color="#E5E5E5"> before we were doing time since the</font>

2758
03:21:13,150 --> 03:21:16,480
previous<font color="#CCCCCC"> displayed packet</font>

2759
03:21:14,771 --> 03:21:18,641
well that's problematic<font color="#E5E5E5"> if you're trying</font>

2760
03:21:16,480 --> 03:21:21,369
<font color="#CCCCCC">to filter</font><font color="#E5E5E5"> what packets are displayed</font>

2761
03:21:18,641 --> 03:21:23,710
<font color="#E5E5E5">how is it going to calculate from</font>

2762
03:21:21,370 --> 03:21:25,421
previous displayed packet<font color="#E5E5E5"> it doesn't</font>

2763
03:21:23,710 --> 03:21:28,689
know which<font color="#E5E5E5"> ones are displayed</font>

2764
03:21:25,421 --> 03:21:31,900
and so but filtering on our time<font color="#CCCCCC"> Delta</font>

2765
03:21:28,690 --> 03:21:34,030
<font color="#E5E5E5">so time</font><font color="#CCCCCC"> sends previous packet that works</font>

2766
03:21:31,900 --> 03:21:37,631
much better<font color="#E5E5E5"> but then we have to worry</font>

2767
03:21:34,030 --> 03:21:40,570
<font color="#E5E5E5">about extraneous</font><font color="#CCCCCC"> you know what happens</font>

2768
03:21:37,631 --> 03:21:42,869
when the packets<font color="#E5E5E5"> are from two</font><font color="#CCCCCC"> different</font>

2769
03:21:40,570 --> 03:21:48,221
sources<font color="#E5E5E5"> and they're messing up our</font>

2770
03:21:42,870 --> 03:22:06,870
timing<font color="#E5E5E5"> there's other time values you can</font>

2771
03:21:48,221 --> 03:22:11,471
look at so if we expand out<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> TCP</font>

2772
03:22:06,870 --> 03:22:15,551
options now<font color="#E5E5E5"> we can say show me you know</font>

2773
03:22:11,471 --> 03:22:17,051
the time between packets<font color="#CCCCCC"> in this TCP</font>

2774
03:22:15,551 --> 03:22:19,869
<font color="#E5E5E5">stream</font><font color="#CCCCCC"> so I</font><font color="#E5E5E5"> don't have to worry about</font>

2775
03:22:17,051 --> 03:22:22,029
another<font color="#E5E5E5"> TCP stream or a random ping or</font>

2776
03:22:19,870 --> 03:22:31,061
something<font color="#E5E5E5"> like</font><font color="#CCCCCC"> that so</font><font color="#E5E5E5"> we can say time</font>

2777
03:22:22,030 --> 03:22:33,040
since previous<font color="#CCCCCC"> frame in this stream and</font>

2778
03:22:31,061 --> 03:22:36,391
<font color="#E5E5E5">then maybe I want to say show me</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> of</font>

2779
03:22:33,040 --> 03:22:43,240
them that took<font color="#CCCCCC"> more than</font><font color="#E5E5E5"> one second</font>

2780
03:22:36,391 --> 03:22:48,940
<font color="#E5E5E5">there we go and the good news is all</font>

2781
03:22:43,240 --> 03:22:51,101
<font color="#E5E5E5">most of those if not</font><font color="#CCCCCC"> all of them are the</font>

2782
03:22:48,940 --> 03:22:53,440
last packets right our<font color="#CCCCCC"> fin ACK packets</font>

2783
03:22:51,101 --> 03:22:55,960
and that's normal<font color="#CCCCCC"> for there to be a</font>

2784
03:22:53,440 --> 03:22:57,851
bigger time<font color="#E5E5E5"> between those packets and in</font>

2785
03:22:55,960 --> 03:23:01,449
fact<font color="#E5E5E5"> some of these are quite large</font><font color="#CCCCCC"> 22</font>

2786
03:22:57,851 --> 03:23:04,271
seconds in this case that's<font color="#E5E5E5"> okay those</font>

2787
03:23:01,450 --> 03:23:06,431
time values aren't problematic<font color="#E5E5E5"> it means</font>

2788
03:23:04,271 --> 03:23:08,290
we were communicating<font color="#CCCCCC"> with this</font><font color="#E5E5E5"> client</font>

2789
03:23:06,431 --> 03:23:09,430
<font color="#E5E5E5">there's a server sending packets back</font>

2790
03:23:08,290 --> 03:23:11,439
and forth

2791
03:23:09,430 --> 03:23:13,779
and then we were done but<font color="#CCCCCC"> we didn't</font>

2792
03:23:11,439 --> 03:23:15,880
close<font color="#CCCCCC"> the connection</font><font color="#E5E5E5"> in case we had more</font>

2793
03:23:13,779 --> 03:23:18,189
<font color="#E5E5E5">things to communicate and we kept it</font>

2794
03:23:15,880 --> 03:23:20,800
<font color="#CCCCCC">open for 22 more seconds before we said</font>

2795
03:23:18,189 --> 03:23:24,729
okay<font color="#E5E5E5"> we're really done let's close this</font>

2796
03:23:20,800 --> 03:23:28,210
connection<font color="#E5E5E5"> so a time a long</font><font color="#CCCCCC"> time with a</font>

2797
03:23:24,729 --> 03:23:32,170
<font color="#CCCCCC">fin</font><font color="#E5E5E5"> AK is usually not a problem</font><font color="#CCCCCC"> but if</font>

2798
03:23:28,210 --> 03:23:35,319
you did this filter<font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> time Delta</font><font color="#CCCCCC"> and</font>

2799
03:23:32,170 --> 03:23:39,250
<font color="#CCCCCC">one seconds not super long but</font><font color="#E5E5E5"> you know</font>

2800
03:23:35,319 --> 03:23:42,369
<font color="#CCCCCC">five seconds</font><font color="#E5E5E5"> or 10 seconds and it's the</font>

2801
03:23:39,250 --> 03:23:44,290
<font color="#E5E5E5">middle of a communication now maybe</font>

2802
03:23:42,370 --> 03:23:46,779
that's indicative of a<font color="#CCCCCC"> problem why is</font>

2803
03:23:44,290 --> 03:23:48,910
the server taking so long to respond<font color="#CCCCCC"> why</font>

2804
03:23:46,779 --> 03:23:52,210
is the client taking so long to generate

2805
03:23:48,910 --> 03:23:53,920
data<font color="#E5E5E5"> and it's it gives you an indication</font>

2806
03:23:52,210 --> 03:23:55,448
of where<font color="#E5E5E5"> to look for the problem you</font>

2807
03:23:53,920 --> 03:23:57,489
<font color="#CCCCCC">know the packet made it there just</font><font color="#E5E5E5"> fine</font>

2808
03:23:55,449 --> 03:23:59,800
<font color="#CCCCCC">but then the server sat there for</font><font color="#E5E5E5"> five</font>

2809
03:23:57,489 --> 03:24:02,109
seconds before it did anything what was

2810
03:23:59,800 --> 03:24:03,970
it doing was it querying<font color="#CCCCCC"> your database</font>

2811
03:24:02,109 --> 03:24:05,949
and pulling from a billion<font color="#CCCCCC"> different</font>

2812
03:24:03,970 --> 03:24:08,140
<font color="#E5E5E5">records and that took five seconds or</font>

2813
03:24:05,949 --> 03:24:10,620
<font color="#E5E5E5">was it you know stuck in a while loop</font>

2814
03:24:08,140 --> 03:24:10,619
<font color="#E5E5E5">somewhere</font>

2815
03:24:21,690 --> 03:24:27,921
<font color="#E5E5E5">all right so we can</font><font color="#CCCCCC"> look at HTTP next</font>

2816
03:24:37,521 --> 03:24:45,271
depending on some settings here<font color="#CCCCCC"> what you</font>

2817
03:24:41,070 --> 03:24:48,570
get<font color="#E5E5E5"> displayed with HTTP will change and</font>

2818
03:24:45,271 --> 03:24:54,181
I<font color="#E5E5E5"> think under the</font><font color="#CCCCCC"> default</font><font color="#E5E5E5"> settings which</font>

2819
03:24:48,570 --> 03:24:56,490
I should be<font color="#CCCCCC"> using</font><font color="#E5E5E5"> it shows you that when</font>

2820
03:24:54,181 --> 03:24:59,580
<font color="#E5E5E5">you make</font><font color="#CCCCCC"> an HTTP request it shows you</font>

2821
03:24:56,490 --> 03:25:02,150
that request packet and the packet<font color="#E5E5E5"> that</font>

2822
03:24:59,580 --> 03:25:11,570
it shows for the response is actually

2823
03:25:02,150 --> 03:25:11,570
<font color="#E5E5E5">the last packet so you see</font><font color="#CCCCCC"> our get and</font>

2824
03:25:19,761 --> 03:25:29,040
let's so let me illustrate what I'm

2825
03:25:24,181 --> 03:25:31,891
talking<font color="#CCCCCC"> about here so I've got this get</font>

2826
03:25:29,040 --> 03:25:35,700
request<font color="#E5E5E5"> let's not do</font><font color="#CCCCCC"> that one</font><font color="#E5E5E5"> because</font>

2827
03:25:31,891 --> 03:25:38,551
it's a 404<font color="#E5E5E5"> let's do this one</font><font color="#CCCCCC"> okay so</font>

2828
03:25:35,700 --> 03:25:41,671
I've got this get request with so packet

2829
03:25:38,551 --> 03:25:49,939
<font color="#CCCCCC">five thousand forty nine and this</font>

2830
03:25:41,671 --> 03:25:52,471
<font color="#E5E5E5">response 5095</font><font color="#CCCCCC"> as the response and it's</font>

2831
03:25:49,940 --> 03:25:55,471
that's it that's<font color="#E5E5E5"> all it's showing me</font>

2832
03:25:52,471 --> 03:26:00,631
it's not showing<font color="#E5E5E5"> me all of</font><font color="#CCCCCC"> the data in</font>

2833
03:25:55,471 --> 03:26:10,710
<font color="#E5E5E5">between those if there was any data so</font>

2834
03:26:00,631 --> 03:26:14,971
let's follow the<font color="#E5E5E5"> TCP stream here and</font><font color="#CCCCCC"> we</font>

2835
03:26:10,710 --> 03:26:17,311
can see yes there was in<font color="#CCCCCC"> fact five</font>

2836
03:26:14,971 --> 03:26:19,141
thousand forty nine air<font color="#CCCCCC"> all right so</font>

2837
03:26:17,311 --> 03:26:22,591
there's<font color="#CCCCCC"> pack at five thousand forty nine</font>

2838
03:26:19,141 --> 03:26:24,301
still there's<font color="#CCCCCC"> the HTTP response in five</font>

2839
03:26:22,591 --> 03:26:25,771
thousand ninety five but there was a

2840
03:26:24,301 --> 03:26:28,801
whole<font color="#CCCCCC"> bunch of not a whole bunch but</font>

2841
03:26:25,771 --> 03:26:32,570
some data in between<font color="#E5E5E5"> that didn't get</font>

2842
03:26:28,801 --> 03:26:37,789
included in<font color="#E5E5E5"> our HTTP filter and it's</font>

2843
03:26:32,570 --> 03:26:42,330
because it's<font color="#CCCCCC"> only marking the packets</font><font color="#E5E5E5"> as</font>

2844
03:26:37,790 --> 03:26:47,370
HTTP if it's the actual<font color="#E5E5E5"> request or if</font>

2845
03:26:42,330 --> 03:26:55,561
it's the last packet of the response you

2846
03:26:47,370 --> 03:26:59,210
can change<font color="#E5E5E5"> that behavior with our TCP</font>

2847
03:26:55,561 --> 03:26:59,210
protocol preferences

2848
03:27:04,260 --> 03:27:06,319
you

2849
03:27:07,800 --> 03:27:13,769
and this allows sub dissector to

2850
03:27:10,350 --> 03:27:24,829
reassemble TCP streams<font color="#CCCCCC"> so if we uncheck</font>

2851
03:27:13,770 --> 03:27:24,829
that now<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of that</font><font color="#E5E5E5"> data in</font><font color="#CCCCCC"> between so</font>

2852
03:27:26,869 --> 03:27:40,260
<font color="#CCCCCC">5040 you</font><font color="#E5E5E5"> I can't remember which numbers</font>

2853
03:27:30,329 --> 03:27:47,270
we're at<font color="#CCCCCC"> I think this is it 40 49 8</font><font color="#E5E5E5"> and</font>

2854
03:27:40,260 --> 03:27:52,079
91 there we go

2855
03:27:47,270 --> 03:27:53,760
so what it's done is<font color="#E5E5E5"> it's taken it gives</font>

2856
03:27:52,079 --> 03:27:56,840
us these packets in between where<font color="#CCCCCC"> it</font>

2857
03:27:53,760 --> 03:28:07,229
says this is just a<font color="#CCCCCC"> continuation of our</font>

2858
03:27:56,840 --> 03:28:10,260
HTTP data<font color="#E5E5E5"> I get stuck on this</font><font color="#CCCCCC"> one of</font>

2859
03:28:07,229 --> 03:28:12,179
<font color="#CCCCCC">which behavior I prefer</font><font color="#E5E5E5"> I actually don't</font>

2860
03:28:10,260 --> 03:28:17,220
<font color="#E5E5E5">like either one of the behaviors I wish</font>

2861
03:28:12,180 --> 03:28:26,869
they would let me<font color="#CCCCCC"> have an</font><font color="#E5E5E5"> in-between</font>

2862
03:28:17,220 --> 03:28:26,868
behavior<font color="#E5E5E5"> let's switch that back</font>

2863
03:28:36,041 --> 03:28:39,041
<font color="#E5E5E5">okay</font>

2864
03:28:39,520 --> 03:28:47,680
so I usually<font color="#E5E5E5"> have the second box checked</font>

2865
03:28:43,020 --> 03:28:50,350
allow the sub dissectors to reassemble

2866
03:28:47,680 --> 03:28:53,709
data<font color="#E5E5E5"> and then when I do that I just</font>

2867
03:28:50,350 --> 03:28:57,909
<font color="#E5E5E5">remember that if I filter for HTTP it's</font>

2868
03:28:53,709 --> 03:29:01,119
not giving<font color="#E5E5E5"> me everything that's port 80</font>

2869
03:28:57,909 --> 03:29:03,520
<font color="#E5E5E5">it's only giving</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> it's only marking</font>

2870
03:29:01,119 --> 03:29:04,989
<font color="#CCCCCC">that first and last packet and the</font>

2871
03:29:03,520 --> 03:29:08,319
reason it does the<font color="#E5E5E5"> last packet is</font>

2872
03:29:04,989 --> 03:29:10,839
because it's reassembling the data in

2873
03:29:08,319 --> 03:29:18,009
<font color="#E5E5E5">that packet and so if I go to that</font>

2874
03:29:10,839 --> 03:29:21,659
example<font color="#E5E5E5"> which was somewhere there mostly</font>

2875
03:29:18,009 --> 03:29:21,659
<font color="#E5E5E5">I</font><font color="#CCCCCC"> just want one</font><font color="#E5E5E5"> that's not a 404</font>

2876
03:29:30,470 --> 03:29:34,670
<font color="#CCCCCC">enjoy</font><font color="#E5E5E5"> okay</font>

2877
03:29:35,551 --> 03:29:44,841
<font color="#CCCCCC">549 that's the one I</font><font color="#E5E5E5"> was using before so</font>

2878
03:29:38,701 --> 03:29:52,260
in this last packet<font color="#E5E5E5"> 595 if I look at the</font>

2879
03:29:44,841 --> 03:29:55,411
details it's actually reassembled<font color="#CCCCCC"> of</font>

2880
03:29:52,261 --> 03:29:59,461
those<font color="#E5E5E5"> packets in the middle and it's put</font>

2881
03:29:55,411 --> 03:30:01,171
them together here<font color="#E5E5E5"> in one big packet so</font>

2882
03:29:59,461 --> 03:30:03,510
the thing I don't like about this is now

2883
03:30:01,171 --> 03:30:05,641
all of a sudden<font color="#CCCCCC"> my packets are kind of</font>

2884
03:30:03,511 --> 03:30:08,311
lying to me again<font color="#CCCCCC"> in that they didn't</font>

2885
03:30:05,641 --> 03:30:10,711
come all in<font color="#E5E5E5"> one big packet but at least</font>

2886
03:30:08,311 --> 03:30:14,551
it does tell me<font color="#E5E5E5"> hey these actually came</font>

2887
03:30:10,711 --> 03:30:18,530
in four different packets but what I do

2888
03:30:14,551 --> 03:30:21,980
like is<font color="#CCCCCC"> that then it's all here in one</font>

2889
03:30:18,531 --> 03:30:35,820
response<font color="#E5E5E5"> and so I can see the entire</font>

2890
03:30:21,980 --> 03:30:44,961
response down here in the data<font color="#CCCCCC"> okay we</font>

2891
03:30:35,820 --> 03:30:50,671
can see the data we can see<font color="#E5E5E5"> the headers</font>

2892
03:30:44,961 --> 03:30:58,381
<font color="#E5E5E5">whoops</font><font color="#CCCCCC"> nice so we see you know our</font>

2893
03:30:50,671 --> 03:31:00,631
<font color="#E5E5E5">status code we see the HTTP headers you</font>

2894
03:30:58,381 --> 03:31:02,641
know accept-ranges content<font color="#E5E5E5"> length of</font>

2895
03:31:00,631 --> 03:31:08,900
those and then we see the actual

2896
03:31:02,641 --> 03:31:12,261
response<font color="#E5E5E5"> data</font>

2897
03:31:08,900 --> 03:31:12,261
let's do

2898
03:31:15,280 --> 03:31:19,990
one of the cool things<font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> do with</font>

2899
03:31:17,261 --> 03:31:23,950
Wireshark<font color="#E5E5E5"> is under the file export</font>

2900
03:31:19,990 --> 03:31:27,369
objects<font color="#E5E5E5"> and there's different protocols</font>

2901
03:31:23,950 --> 03:31:30,910
here the one that<font color="#CCCCCC"> I use most</font><font color="#E5E5E5"> is the HTTP</font>

2902
03:31:27,370 --> 03:31:35,110
<font color="#E5E5E5">one because I'm rarely analyzing</font><font color="#CCCCCC"> DICOM</font>

2903
03:31:30,910 --> 03:31:40,000
or IMF traffic but if I choose this

2904
03:31:35,110 --> 03:31:42,150
export<font color="#E5E5E5"> HTTP objects then it gives me a</font>

2905
03:31:40,000 --> 03:31:45,431
whole list of all the stuff that

2906
03:31:42,150 --> 03:31:48,190
Wireshark saw that came<font color="#CCCCCC"> over HTTP</font>

2907
03:31:45,431 --> 03:31:51,490
protocol and it reassembles them into

2908
03:31:48,190 --> 03:31:55,030
one coherent piece of data<font color="#E5E5E5"> and it says</font>

2909
03:31:51,490 --> 03:32:01,511
of those<font color="#E5E5E5"> packets that made up the</font>

2910
03:31:55,030 --> 03:32:06,271
request<font color="#E5E5E5"> to secure</font><font color="#CCCCCC"> data' cali org</font><font color="#E5E5E5"> here is</font>

2911
03:32:01,511 --> 03:32:11,050
<font color="#E5E5E5">that data in a text HTML format</font><font color="#CCCCCC"> and</font>

2912
03:32:06,271 --> 03:32:17,070
hopefully there'll be one<font color="#E5E5E5"> that's an</font>

2913
03:32:11,050 --> 03:32:17,070
image<font color="#CCCCCC"> let's sort by content</font><font color="#E5E5E5"> type</font>

2914
03:32:27,120 --> 03:32:40,250
<font color="#CCCCCC">in this</font><font color="#E5E5E5"> example pretty much all the data</font>

2915
03:32:34,620 --> 03:32:44,250
it looks<font color="#E5E5E5"> like was just HTML data or</font>

2916
03:32:40,250 --> 03:32:46,530
compressed data<font color="#E5E5E5"> but if you you know</font>

2917
03:32:44,250 --> 03:32:48,300
included<font color="#E5E5E5"> when you're doing normal web</font>

2918
03:32:46,530 --> 03:32:50,520
browsing and you<font color="#E5E5E5"> download an</font><font color="#CCCCCC"> image or</font>

2919
03:32:48,300 --> 03:32:54,688
<font color="#E5E5E5">whatever it'll show up here</font><font color="#CCCCCC"> in the list</font>

2920
03:32:50,520 --> 03:32:59,780
and you<font color="#CCCCCC"> can grab it and</font><font color="#E5E5E5"> hit save or</font>

2921
03:32:54,689 --> 03:33:03,229
export whichever the button says<font color="#E5E5E5"> I'm</font>

2922
03:32:59,780 --> 03:33:03,229
magnifiers in the way

2923
03:33:10,051 --> 03:33:16,199
yeah say you<font color="#E5E5E5"> grab whatever it is hit</font>

2924
03:33:13,440 --> 03:33:18,030
save<font color="#E5E5E5"> and it'll pull out that image</font><font color="#CCCCCC"> you</font>

2925
03:33:16,200 --> 03:33:19,740
don't<font color="#E5E5E5"> have to go in and find all the</font>

2926
03:33:18,030 --> 03:33:29,521
bytes that<font color="#E5E5E5"> make up the image it does it</font>

2927
03:33:19,740 --> 03:33:30,690
for<font color="#CCCCCC"> you if</font><font color="#E5E5E5"> you didn't get all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> bytes</font>

2928
03:33:29,521 --> 03:33:32,851
<font color="#E5E5E5">it won't work</font>

2929
03:33:30,690 --> 03:33:35,190
obviously if there<font color="#E5E5E5"> were you</font><font color="#CCCCCC"> know drop</font>

2930
03:33:32,851 --> 03:33:37,141
packets<font color="#E5E5E5"> or you started capturing halfway</font>

2931
03:33:35,190 --> 03:33:38,881
through the transmission<font color="#CCCCCC"> you won't</font>

2932
03:33:37,141 --> 03:33:43,100
receive the<font color="#CCCCCC"> full image</font><font color="#E5E5E5"> but if you</font>

2933
03:33:38,881 --> 03:33:46,680
captured the entire process<font color="#E5E5E5"> of packets</font>

2934
03:33:43,101 --> 03:33:48,841
from<font color="#E5E5E5"> source to destination when you</font>

2935
03:33:46,681 --> 03:33:50,521
export<font color="#CCCCCC"> that image</font><font color="#E5E5E5"> it'll just it'll be</font>

2936
03:33:48,841 --> 03:33:54,830
the<font color="#E5E5E5"> actual image as if you had you know</font>

2937
03:33:50,521 --> 03:33:54,830
downloaded and saved it to your<font color="#E5E5E5"> computer</font>

2938
03:33:57,950 --> 03:34:05,490
any<font color="#E5E5E5"> of these values the</font><font color="#CCCCCC"> host the user</font>

2939
03:34:01,801 --> 03:34:07,381
agent cookies the<font color="#E5E5E5"> base basic</font>

2940
03:34:05,490 --> 03:34:10,190
authentication we talked<font color="#CCCCCC"> about that at</font>

2941
03:34:07,381 --> 03:34:13,529
the very<font color="#E5E5E5"> beginning</font><font color="#CCCCCC"> they all show up here</font>

2942
03:34:10,190 --> 03:34:17,240
so if you're<font color="#E5E5E5"> doing HTTP and you're using</font>

2943
03:34:13,530 --> 03:34:21,030
<font color="#E5E5E5">basic authentication</font><font color="#CCCCCC"> it's not encrypted</font>

2944
03:34:17,240 --> 03:34:28,381
<font color="#CCCCCC">it shows up</font><font color="#E5E5E5"> anyone that can sniff that</font>

2945
03:34:21,030 --> 03:34:30,601
data can grab those<font color="#E5E5E5"> credentials we saw</font>

2946
03:34:28,381 --> 03:34:33,869
this with cookies<font color="#E5E5E5"> you know not so much</font>

2947
03:34:30,601 --> 03:34:38,070
today<font color="#CCCCCC"> most people have gotten smarter</font>

2948
03:34:33,870 --> 03:34:40,021
but instead of using a session<font color="#E5E5E5"> cookie</font>

2949
03:34:38,070 --> 03:34:42,061
and storing the<font color="#CCCCCC"> information on a</font>

2950
03:34:40,021 --> 03:34:43,891
database<font color="#E5E5E5"> or</font><font color="#CCCCCC"> something on the backend it</font>

2951
03:34:42,061 --> 03:34:45,811
<font color="#E5E5E5">actually just put the information</font><font color="#CCCCCC"> in the</font>

2952
03:34:43,891 --> 03:34:48,471
cookie<font color="#CCCCCC"> I'd say you</font><font color="#E5E5E5"> know admin equals</font>

2953
03:34:45,811 --> 03:34:52,289
true or whatever<font color="#E5E5E5"> well all that</font>

2954
03:34:48,471 --> 03:34:54,001
<font color="#E5E5E5">information if it's HTTP</font><font color="#CCCCCC"> plain text</font>

2955
03:34:52,290 --> 03:35:00,841
anyone<font color="#E5E5E5"> can grab</font><font color="#CCCCCC"> it anyone</font><font color="#E5E5E5"> can modify it</font>

2956
03:34:54,001 --> 03:35:04,200
anyone can change it<font color="#CCCCCC"> you can follow the</font>

2957
03:35:00,841 --> 03:35:08,040
HTTP stream<font color="#E5E5E5"> instead of following</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> TCP</font>

2958
03:35:04,200 --> 03:35:16,891
stream if it's HTTP and let's look<font color="#E5E5E5"> at an</font>

2959
03:35:08,040 --> 03:35:18,479
example<font color="#E5E5E5"> there so I'll just grab one of</font>

2960
03:35:16,891 --> 03:35:23,368
these

2961
03:35:18,479 --> 03:35:30,510
I'm on<font color="#CCCCCC"> pack at 6:41</font><font color="#E5E5E5"> if I follow the HTTP</font>

2962
03:35:23,369 --> 03:35:33,199
stream it gives me what looks<font color="#CCCCCC"> like very</font>

2963
03:35:30,510 --> 03:35:41,029
<font color="#E5E5E5">similar to when I when I followed the</font>

2964
03:35:33,199 --> 03:35:44,029
TCP stream and it's almost<font color="#E5E5E5"> identical</font>

2965
03:35:41,029 --> 03:35:44,029
except

2966
03:36:00,490 --> 03:36:07,600
if you're also<font color="#E5E5E5"> there might be some other</font>

2967
03:36:04,770 --> 03:36:11,130
differences<font color="#CCCCCC"> the main difference that</font><font color="#E5E5E5"> I</font>

2968
03:36:07,600 --> 03:36:15,220
notice is if you're actually<font color="#E5E5E5"> doing</font>

2969
03:36:11,130 --> 03:36:19,300
<font color="#CCCCCC">decryption so if it's HTTP and you have</font>

2970
03:36:15,220 --> 03:36:21,970
the key to<font color="#CCCCCC"> do the decryption if you just</font>

2971
03:36:19,300 --> 03:36:24,849
<font color="#E5E5E5">follow the</font><font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> stream it still shows you</font>

2972
03:36:21,970 --> 03:36:28,119
the encrypted<font color="#E5E5E5"> data</font><font color="#CCCCCC"> but if you follow the</font>

2973
03:36:24,850 --> 03:36:40,330
<font color="#E5E5E5">HTTP stream it'll show you the decrypted</font>

2974
03:36:28,120 --> 03:36:43,450
<font color="#CCCCCC">data just</font><font color="#E5E5E5"> like we can calculate timing</font>

2975
03:36:40,330 --> 03:36:47,670
information<font color="#CCCCCC"> with TCP we can calculate</font>

2976
03:36:43,450 --> 03:36:47,670
timing<font color="#CCCCCC"> information with HTTP</font>

2977
03:36:55,240 --> 03:37:01,180
so for<font color="#E5E5E5"> example I have</font><font color="#CCCCCC"> this you know</font>

2978
03:36:58,030 --> 03:37:05,430
request that was<font color="#E5E5E5"> made</font><font color="#CCCCCC"> in packet 590 the</font>

2979
03:37:01,180 --> 03:37:11,350
response in<font color="#CCCCCC"> 599 and if I scroll</font><font color="#E5E5E5"> down</font>

2980
03:37:05,430 --> 03:37:17,710
<font color="#CCCCCC">here under the</font><font color="#E5E5E5"> HTTP header</font><font color="#CCCCCC"> Wireshark</font>

2981
03:37:11,350 --> 03:37:25,780
<font color="#E5E5E5">adds this field time sense request and</font>

2982
03:37:17,710 --> 03:37:29,140
we can create a filter<font color="#CCCCCC"> I can show you</font>

2983
03:37:25,780 --> 03:37:34,540
know show me all<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the HTTP times</font>

2984
03:37:29,140 --> 03:37:37,720
greater than<font color="#E5E5E5"> one second and quite a few</font>

2985
03:37:34,540 --> 03:37:42,300
<font color="#CCCCCC">of them</font><font color="#E5E5E5"> the entire this is the from</font>

2986
03:37:37,720 --> 03:37:42,300
start to finish<font color="#CCCCCC"> of request and response</font>

2987
03:37:42,450 --> 03:37:48,640
and<font color="#E5E5E5"> if we say well how many of them took</font>

2988
03:37:44,650 --> 03:37:50,440
more<font color="#CCCCCC"> than 10 seconds and the good</font><font color="#E5E5E5"> news</font>

2989
03:37:48,640 --> 03:37:57,070
<font color="#CCCCCC">is none of</font><font color="#E5E5E5"> them took more</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> 10</font>

2990
03:37:50,440 --> 03:37:59,890
seconds about<font color="#CCCCCC"> 5 seconds so we just had</font>

2991
03:37:57,070 --> 03:38:05,440
two requests that took more than<font color="#CCCCCC"> five</font>

2992
03:37:59,890 --> 03:38:08,890
seconds<font color="#E5E5E5"> and neither one of them were</font>

2993
03:38:05,440 --> 03:38:12,460
super large<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that wasn't the</font><font color="#E5E5E5"> problem</font>

2994
03:38:08,890 --> 03:38:14,800
<font color="#CCCCCC">it was you know</font><font color="#E5E5E5"> likely you'll notice</font>

2995
03:38:12,460 --> 03:38:18,609
they're both from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same server</font><font color="#E5E5E5"> so</font>

2996
03:38:14,800 --> 03:38:21,490
here's a nice<font color="#CCCCCC"> example of how this</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> be</font>

2997
03:38:18,610 --> 03:38:23,620
useful<font color="#E5E5E5"> everything else happened in under</font>

2998
03:38:21,490 --> 03:38:27,010
<font color="#E5E5E5">five seconds except to this one server</font>

2999
03:38:23,620 --> 03:38:30,820
where it you know<font color="#E5E5E5"> two of the requests</font>

3000
03:38:27,010 --> 03:38:33,580
ended up taking more<font color="#CCCCCC"> than</font><font color="#E5E5E5"> five seconds</font>

3001
03:38:30,820 --> 03:38:37,750
to get<font color="#CCCCCC"> a</font><font color="#E5E5E5"> response back to</font><font color="#CCCCCC"> get the entire</font>

3002
03:38:33,580 --> 03:38:42,820
response back<font color="#E5E5E5"> this will also</font><font color="#CCCCCC"> change</font><font color="#E5E5E5"> this</font>

3003
03:38:37,750 --> 03:38:46,390
timing will change<font color="#E5E5E5"> if</font><font color="#CCCCCC"> your if you have</font>

3004
03:38:42,820 --> 03:38:48,460
<font color="#E5E5E5">it reassemble the packets or not if you</font>

3005
03:38:46,390 --> 03:38:52,029
so right now<font color="#CCCCCC"> i've rechecked it so that</font>

3006
03:38:48,460 --> 03:38:54,369
it is reassembling the packets that<font color="#CCCCCC"> will</font>

3007
03:38:52,030 --> 03:38:56,440
measure time from<font color="#E5E5E5"> start</font><font color="#CCCCCC"> to finish if you</font>

3008
03:38:54,370 --> 03:38:59,590
don't have it reassemble packets it

3009
03:38:56,440 --> 03:39:02,380
measures time from the request to<font color="#E5E5E5"> the</font>

3010
03:38:59,590 --> 03:39:04,600
start of the response<font color="#E5E5E5"> which is very</font>

3011
03:39:02,380 --> 03:39:07,439
different but can<font color="#E5E5E5"> also be useful</font>

3012
03:39:04,600 --> 03:39:07,440
<font color="#CCCCCC">information</font>

3013
03:39:19,669 --> 03:39:25,529
yeah that's a great<font color="#CCCCCC"> point is one of the</font>

3014
03:39:23,819 --> 03:39:27,778
<font color="#E5E5E5">useful features</font><font color="#CCCCCC"> of Wireshark is</font>

3015
03:39:25,529 --> 03:39:29,399
<font color="#E5E5E5">capturing at different points in your</font>

3016
03:39:27,779 --> 03:39:32,430
<font color="#CCCCCC">network and saying you know what's the</font>

3017
03:39:29,399 --> 03:39:34,649
timing look like here versus here<font color="#CCCCCC"> and</font>

3018
03:39:32,430 --> 03:39:47,060
that can<font color="#E5E5E5"> help you pinpoint you know</font>

3019
03:39:34,649 --> 03:39:49,560
where the slowness is happening<font color="#E5E5E5"> okay</font>

3020
03:39:47,060 --> 03:39:52,109
that's it<font color="#E5E5E5"> we made</font><font color="#CCCCCC"> it through</font><font color="#E5E5E5"> all the</font>

3021
03:39:49,560 --> 03:39:55,069
protocols<font color="#E5E5E5"> that we had scheduled to talk</font>

3022
03:39:52,109 --> 03:39:55,069
about any<font color="#E5E5E5"> questions</font>

3023
03:39:57,649 --> 03:40:04,079
<font color="#E5E5E5">all right well those</font><font color="#CCCCCC"> of you that are</font>

3024
03:39:59,850 --> 03:40:06,779
left<font color="#E5E5E5"> you're troopers</font><font color="#CCCCCC"> would</font><font color="#E5E5E5"> way to go</font><font color="#CCCCCC"> I'm</font>

3025
03:40:04,079 --> 03:40:09,270
happy to talk<font color="#CCCCCC"> to</font><font color="#E5E5E5"> you if you have</font>

3026
03:40:06,779 --> 03:40:10,799
<font color="#E5E5E5">questions about Wireshark if you have</font>

3027
03:40:09,270 --> 03:40:12,869
questions<font color="#CCCCCC"> about other things I'm happy</font>

3028
03:40:10,799 --> 03:40:14,789
to you know<font color="#E5E5E5"> talk with you</font>

3029
03:40:12,869 --> 03:40:17,909
<font color="#CCCCCC">saint</font><font color="#E5E5E5"> cons one of</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> favorite</font>

3030
03:40:14,789 --> 03:40:20,489
conferences because<font color="#E5E5E5"> it's so personal</font><font color="#CCCCCC"> you</font>

3031
03:40:17,909 --> 03:40:22,979
<font color="#CCCCCC">get to interact</font><font color="#E5E5E5"> a lot with one another</font>

3032
03:40:20,489 --> 03:40:25,489
so thanks again<font color="#E5E5E5"> for</font><font color="#CCCCCC"> coming and enjoy the</font>

3033
03:40:22,979 --> 03:40:25,489
rest<font color="#CCCCCC"> of the conference</font>

3034
03:40:27,350 --> 03:40:29,409
<font color="#E5E5E5">you</font>

