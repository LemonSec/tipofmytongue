1
00:00:00,030 --> 00:00:06,180
hello Kringle Con attendee I'm Mike

2
00:00:02,520 --> 00:00:08,189
Saunders Mike at red sitcom I am a

3
00:00:06,180 --> 00:00:10,830
principal consultant for red siege

4
00:00:08,189 --> 00:00:12,509
information security and I'm hard water

5
00:00:10,830 --> 00:00:15,269
hacker on Twitter today I want to talk

6
00:00:12,509 --> 00:00:17,490
to you about web app 101 getting the lay

7
00:00:15,269 --> 00:00:19,710
of the land what I'm going to do today

8
00:00:17,490 --> 00:00:21,630
is give you three stories that

9
00:00:19,710 --> 00:00:27,570
illustrate the importance of scoping and

10
00:00:21,630 --> 00:00:30,240
enumeration methodology so scoping why

11
00:00:27,570 --> 00:00:33,750
is it important scoping informs the

12
00:00:30,240 --> 00:00:35,910
entire read as to the pen test when you

13
00:00:33,750 --> 00:00:39,300
do a proper scope you have an informed

14
00:00:35,910 --> 00:00:41,010
pen test and you're able to test the

15
00:00:39,300 --> 00:00:43,319
application for common kinds of

16
00:00:41,010 --> 00:00:45,690
vulnerabilities but also find the things

17
00:00:43,320 --> 00:00:48,030
that are important to the client which

18
00:00:45,690 --> 00:00:50,820
may not be just sequel injection and

19
00:00:48,030 --> 00:00:54,180
cross-site scripting it may be logic

20
00:00:50,820 --> 00:00:56,550
kinds of vulnerability such as being

21
00:00:54,180 --> 00:00:58,890
able to prevent user to user interaction

22
00:00:56,550 --> 00:01:01,349
on a web application or maybe they want

23
00:00:58,890 --> 00:01:04,379
to make sure that you can't gain an

24
00:01:01,350 --> 00:01:06,090
admin role in the application or maybe

25
00:01:04,379 --> 00:01:07,439
you have a shopping cart and they want

26
00:01:06,090 --> 00:01:11,700
to make sure that you can't use

27
00:01:07,439 --> 00:01:13,559
discounts you're not entitled to now the

28
00:01:11,700 --> 00:01:15,270
reality in pen testing is that sometimes

29
00:01:13,560 --> 00:01:18,150
we need to help the client decide what

30
00:01:15,270 --> 00:01:19,649
the scope is they may not know they may

31
00:01:18,150 --> 00:01:21,390
have had an auditor tell them hey you

32
00:01:19,650 --> 00:01:24,390
need to have a pen test done and that's

33
00:01:21,390 --> 00:01:26,250
all the information they have and this

34
00:01:24,390 --> 00:01:29,340
is especially true when we're dealing

35
00:01:26,250 --> 00:01:32,700
with large applications how do we scope

36
00:01:29,340 --> 00:01:34,740
large applications in a very large

37
00:01:32,700 --> 00:01:36,600
application a client might not have the

38
00:01:34,740 --> 00:01:39,179
budget to support thorough testing and

39
00:01:36,600 --> 00:01:40,649
that may be a budget of time if you're

40
00:01:39,180 --> 00:01:42,180
an internal pen tester it may be a

41
00:01:40,650 --> 00:01:45,509
budget of money if you're a consultant

42
00:01:42,180 --> 00:01:47,189
in very large applications we have to

43
00:01:45,509 --> 00:01:50,009
make choices we have to make compromises

44
00:01:47,189 --> 00:01:52,048
about the things we're going to test

45
00:01:50,009 --> 00:01:55,350
versus things we might not have time to

46
00:01:52,049 --> 00:01:57,960
test that happened to me as an internal

47
00:01:55,350 --> 00:02:01,439
pen tester my team sat down with the

48
00:01:57,960 --> 00:02:04,079
internal client and we talked about a

49
00:02:01,439 --> 00:02:06,089
very large financial application and

50
00:02:04,079 --> 00:02:09,119
during discussions with the client we

51
00:02:06,090 --> 00:02:10,590
found that there was actually seven or

52
00:02:09,119 --> 00:02:13,319
eight different applications wrapped

53
00:02:10,590 --> 00:02:14,010
into one application with hundreds of

54
00:02:13,319 --> 00:02:17,579
user role

55
00:02:14,010 --> 00:02:19,739
and dozens upon dozens of different

56
00:02:17,580 --> 00:02:24,810
types of functions within each app in

57
00:02:19,739 --> 00:02:26,940
this one site based on our assessment we

58
00:02:24,810 --> 00:02:28,709
determined that we thought this would

59
00:02:26,940 --> 00:02:30,660
take four to six months for a team of

60
00:02:28,709 --> 00:02:33,360
two people its test thoroughly its test

61
00:02:30,660 --> 00:02:36,510
and end and that wasn't acceptable for

62
00:02:33,360 --> 00:02:39,840
the clients budget of time so how do we

63
00:02:36,510 --> 00:02:42,239
approach doing an inform test do we just

64
00:02:39,840 --> 00:02:43,769
log in and test whatever resources that

65
00:02:42,239 --> 00:02:46,680
we can find and hope that we find the

66
00:02:43,769 --> 00:02:49,349
things that have the highest impact or

67
00:02:46,680 --> 00:02:51,209
do we use an informed approach based on

68
00:02:49,349 --> 00:02:52,828
interactions with the client and that's

69
00:02:51,209 --> 00:02:55,260
what we did we we went with the latter

70
00:02:52,829 --> 00:02:58,980
we interviewed the client and found out

71
00:02:55,260 --> 00:03:00,720
what does this application do and it we

72
00:02:58,980 --> 00:03:03,660
know that it's a financial application

73
00:03:00,720 --> 00:03:05,879
that has the ability to do currency

74
00:03:03,660 --> 00:03:08,390
exchanges for instance we get paid in

75
00:03:05,879 --> 00:03:12,000
one denomination maybe we get paid in

76
00:03:08,390 --> 00:03:14,578
Euros but we can take that money out in

77
00:03:12,000 --> 00:03:17,760
US dollars because of a favorable

78
00:03:14,579 --> 00:03:20,160
exchange rate that's based on analysis

79
00:03:17,760 --> 00:03:22,440
the application performs for us we also

80
00:03:20,160 --> 00:03:25,639
have things like sweeping accounts

81
00:03:22,440 --> 00:03:29,370
sweeping money from a paying account

82
00:03:25,639 --> 00:03:31,440
into our master account and if we delay

83
00:03:29,370 --> 00:03:33,239
that process we may make thousands of

84
00:03:31,440 --> 00:03:35,010
dollars in interest because of the

85
00:03:33,239 --> 00:03:38,930
amounts of money that are in these

86
00:03:35,010 --> 00:03:41,250
accounts and again that's informed by

87
00:03:38,930 --> 00:03:46,019
analysis that the application performs

88
00:03:41,250 --> 00:03:49,349
for us we also have the ability to send

89
00:03:46,019 --> 00:03:51,180
payments in this application so how do

90
00:03:49,349 --> 00:03:52,888
we figure out what's important we asked

91
00:03:51,180 --> 00:03:55,200
the client you know what are the areas

92
00:03:52,889 --> 00:03:56,549
of highest impact and that didn't

93
00:03:55,200 --> 00:03:59,760
translate for them because we weren't

94
00:03:56,549 --> 00:04:02,400
speaking in business terms so we went

95
00:03:59,760 --> 00:04:04,290
back to them and we found out these

96
00:04:02,400 --> 00:04:06,180
things about the application and that

97
00:04:04,290 --> 00:04:08,578
it's a financial application the kinds

98
00:04:06,180 --> 00:04:11,099
of transactions it can do we also found

99
00:04:08,579 --> 00:04:13,260
out who can use the application this is

100
00:04:11,099 --> 00:04:15,268
an internal application only it's not

101
00:04:13,260 --> 00:04:17,488
exposed to the Internet accessible only

102
00:04:15,269 --> 00:04:19,470
by employees of the corporation there's

103
00:04:17,488 --> 00:04:21,539
no third parties that are accessing the

104
00:04:19,470 --> 00:04:24,180
app and the employees who do have access

105
00:04:21,539 --> 00:04:26,969
to it had a special firewall role that

106
00:04:24,180 --> 00:04:27,570
allowed them to access the application

107
00:04:26,969 --> 00:04:30,060
with

108
00:04:27,570 --> 00:04:33,420
they couldn't get to it so we've greatly

109
00:04:30,060 --> 00:04:35,660
reduced the scope of threat actors to

110
00:04:33,420 --> 00:04:38,670
this application we're now talking about

111
00:04:35,660 --> 00:04:40,080
employees who have a grudge maybe they

112
00:04:38,670 --> 00:04:42,330
didn't get the raise they felt they

113
00:04:40,080 --> 00:04:45,740
deserved or employees who want to steal

114
00:04:42,330 --> 00:04:48,300
money by sending themselves a payment

115
00:04:45,740 --> 00:04:51,450
with those kinds of things in mind we

116
00:04:48,300 --> 00:04:54,570
were able ask the client what areas

117
00:04:51,450 --> 00:04:56,849
would have the highest financial impact

118
00:04:54,570 --> 00:04:59,760
what areas would someone be able to

119
00:04:56,850 --> 00:05:02,850
steal the most money or impact her

120
00:04:59,760 --> 00:05:05,159
ability to make money and then they

121
00:05:02,850 --> 00:05:07,430
understood what we were asking and they

122
00:05:05,160 --> 00:05:09,600
were able to put together a list of

123
00:05:07,430 --> 00:05:11,850
functions within the application that

124
00:05:09,600 --> 00:05:15,180
had the highest potential for damage if

125
00:05:11,850 --> 00:05:17,690
they were exploited and we were able to

126
00:05:15,180 --> 00:05:21,720
perform a test that provided value

127
00:05:17,690 --> 00:05:23,880
provided things provided validation that

128
00:05:21,720 --> 00:05:26,090
areas that were important to the client

129
00:05:23,880 --> 00:05:28,500
about the application were vetted

130
00:05:26,090 --> 00:05:30,869
meanwhile we didn't cover everything but

131
00:05:28,500 --> 00:05:33,480
we gave it a good effort in the time

132
00:05:30,870 --> 00:05:37,850
that was acceptable to the client and we

133
00:05:33,480 --> 00:05:37,850
were able to provide value based on that

134
00:05:38,330 --> 00:05:42,419
now when you're doing a web app test

135
00:05:40,800 --> 00:05:44,640
maybe you're running into that here at

136
00:05:42,420 --> 00:05:47,370
Kringle kahn and you're going through

137
00:05:44,640 --> 00:05:50,099
hackfest or holiday hat fest and you're

138
00:05:47,370 --> 00:05:52,140
on santa's journey and any encounter web

139
00:05:50,100 --> 00:05:54,080
application how do you thoroughly test

140
00:05:52,140 --> 00:05:57,810
that application for vulnerabilities

141
00:05:54,080 --> 00:06:00,870
well when I test an application I

142
00:05:57,810 --> 00:06:02,940
manually browse to every link submit

143
00:06:00,870 --> 00:06:05,610
every form in an app before I do any

144
00:06:02,940 --> 00:06:07,230
kind of automated testing before I run

145
00:06:05,610 --> 00:06:08,820
my crawlers and before I run any

146
00:06:07,230 --> 00:06:10,200
automated scanning I want to make sure

147
00:06:08,820 --> 00:06:13,230
that I've fully mapped out the

148
00:06:10,200 --> 00:06:14,909
application and while I'm doing this

149
00:06:13,230 --> 00:06:16,850
while I'm clicking on links and

150
00:06:14,910 --> 00:06:19,500
submitting forms I'm making note of

151
00:06:16,850 --> 00:06:20,970
sensitive and dangerous functions one of

152
00:06:19,500 --> 00:06:24,300
the things we want to know about is the

153
00:06:20,970 --> 00:06:26,370
logout function it might not be called

154
00:06:24,300 --> 00:06:28,440
logout in your application but we need

155
00:06:26,370 --> 00:06:31,380
to know what it is to make sure that our

156
00:06:28,440 --> 00:06:34,580
crawler doesn't automatically log us out

157
00:06:31,380 --> 00:06:37,290
of the application by visiting that link

158
00:06:34,580 --> 00:06:39,380
we also need to be aware of sensitive

159
00:06:37,290 --> 00:06:41,360
functions that can modify or delete data

160
00:06:39,380 --> 00:06:44,780
we don't want to modify

161
00:06:41,360 --> 00:06:47,300
delete data just with automated

162
00:06:44,780 --> 00:06:49,250
processes because the application may

163
00:06:47,300 --> 00:06:52,189
rely on that data later on and that will

164
00:06:49,250 --> 00:06:54,409
impact our ability to do testing so I

165
00:06:52,189 --> 00:06:56,539
make note of sensitive functions and I

166
00:06:54,409 --> 00:06:59,659
add them to the exclusion list in my

167
00:06:56,539 --> 00:07:02,419
scanning utility or my proxy utility to

168
00:06:59,659 --> 00:07:05,240
make sure that I don't send automated

169
00:07:02,419 --> 00:07:07,068
traffic to those kinds of resources and

170
00:07:05,240 --> 00:07:10,250
only after I've fully mapped out the

171
00:07:07,069 --> 00:07:12,830
application do i run any automated

172
00:07:10,250 --> 00:07:14,509
processes now I'll tell you why that's

173
00:07:12,830 --> 00:07:17,120
important it's based on my own

174
00:07:14,509 --> 00:07:19,099
experience early on in my career I was

175
00:07:17,120 --> 00:07:22,669
working as an internal tent pen tester

176
00:07:19,099 --> 00:07:24,770
and testing apps mainly involved getting

177
00:07:22,669 --> 00:07:27,198
a URL from the client and putting it in

178
00:07:24,770 --> 00:07:29,840
an automated scanner we scanned an

179
00:07:27,199 --> 00:07:32,210
application that was essentially a

180
00:07:29,840 --> 00:07:34,989
bookmarking application where developers

181
00:07:32,210 --> 00:07:39,049
had the ability to add a resource that

182
00:07:34,990 --> 00:07:40,580
was a link to maybe article that they

183
00:07:39,050 --> 00:07:43,009
felt was important and they could add

184
00:07:40,580 --> 00:07:44,750
information about that resource they

185
00:07:43,009 --> 00:07:48,560
could modify those resources and they

186
00:07:44,750 --> 00:07:50,150
could delete them now they knew that

187
00:07:48,560 --> 00:07:51,710
they didn't want us deleting any data in

188
00:07:50,150 --> 00:07:54,440
the application so they modified the

189
00:07:51,710 --> 00:07:56,479
application to comment out the delete

190
00:07:54,440 --> 00:08:00,830
function so if you viewed the source

191
00:07:56,479 --> 00:08:02,449
code you'd see a commented link we asked

192
00:08:00,830 --> 00:08:04,878
them do you have a backup they said yes

193
00:08:02,449 --> 00:08:06,529
and so we started our automated test and

194
00:08:04,879 --> 00:08:08,449
within about a minute we had a developer

195
00:08:06,529 --> 00:08:10,490
running down the hall yelling for us to

196
00:08:08,449 --> 00:08:12,979
stop and we were able to stop the test

197
00:08:10,490 --> 00:08:15,409
but not before most of the data had been

198
00:08:12,979 --> 00:08:17,378
deleted from the application and the

199
00:08:15,409 --> 00:08:20,629
reason that happened was because the

200
00:08:17,379 --> 00:08:23,839
crawler saw those commented out links as

201
00:08:20,629 --> 00:08:25,430
most crawlers do it and it visited those

202
00:08:23,839 --> 00:08:27,560
links and those links didn't have any

203
00:08:25,430 --> 00:08:30,919
kind of confirmations tab if you visited

204
00:08:27,560 --> 00:08:32,419
them the data was deleted unfortunately

205
00:08:30,919 --> 00:08:33,708
while they had backups they hadn't

206
00:08:32,419 --> 00:08:36,708
tested them and they weren't able to

207
00:08:33,708 --> 00:08:38,659
recover the data I learned from that

208
00:08:36,708 --> 00:08:40,098
experience and I wanted to make sure

209
00:08:38,659 --> 00:08:42,529
that that never happened again

210
00:08:40,099 --> 00:08:44,720
so I spent as much time learning about

211
00:08:42,529 --> 00:08:47,470
web app and testing as possible I read

212
00:08:44,720 --> 00:08:50,240
the web application hacker's handbook I

213
00:08:47,470 --> 00:08:53,390
watched as many YouTube Doc's as I could

214
00:08:50,240 --> 00:08:55,150
I attended sans training and I learned

215
00:08:53,390 --> 00:08:57,250
about the process of an

216
00:08:55,150 --> 00:08:59,530
raishin the methodology of doing pen

217
00:08:57,250 --> 00:09:03,190
testing and that's one thing I want to

218
00:08:59,530 --> 00:09:06,550
talk about is methodology now when I'm

219
00:09:03,190 --> 00:09:09,310
crawling and doing my enumeration this

220
00:09:06,550 --> 00:09:13,359
have to two windows open one is my

221
00:09:09,310 --> 00:09:14,890
browser and one is my proxy and as I'm

222
00:09:13,360 --> 00:09:16,060
navigating through the applications

223
00:09:14,890 --> 00:09:18,670
submitting forms

224
00:09:16,060 --> 00:09:21,880
I'm looking at every request and every

225
00:09:18,670 --> 00:09:23,800
response is coming back in my proxy in

226
00:09:21,880 --> 00:09:27,130
my request I'm looking at the parameters

227
00:09:23,800 --> 00:09:29,380
to see what parameters are unique what

228
00:09:27,130 --> 00:09:31,470
parameters kind of exist across all

229
00:09:29,380 --> 00:09:33,580
portions of the application are there

230
00:09:31,470 --> 00:09:36,580
significant cookies that I need to pay

231
00:09:33,580 --> 00:09:38,320
attention to I'm looking for anything

232
00:09:36,580 --> 00:09:41,830
significant or anything out of the

233
00:09:38,320 --> 00:09:44,770
ordinary in the applications responses

234
00:09:41,830 --> 00:09:47,110
and the reason I do this is you often

235
00:09:44,770 --> 00:09:51,520
find functionality that's been commented

236
00:09:47,110 --> 00:09:53,170
out of an application sometimes it's old

237
00:09:51,520 --> 00:09:56,260
functionality that hasn't been removed

238
00:09:53,170 --> 00:09:58,180
from the server but isn't part of the

239
00:09:56,260 --> 00:09:59,560
application anymore and may not have the

240
00:09:58,180 --> 00:10:01,780
same security controls

241
00:09:59,560 --> 00:10:04,599
so what's commented out but if you were

242
00:10:01,780 --> 00:10:06,970
to access it directly it would the

243
00:10:04,600 --> 00:10:08,740
server would serve up that content same

244
00:10:06,970 --> 00:10:10,420
thing goes with pre-production content

245
00:10:08,740 --> 00:10:13,450
that's been staged on a server maybe

246
00:10:10,420 --> 00:10:14,709
commented out you're not supposed to see

247
00:10:13,450 --> 00:10:17,020
it and you won't see it in your browser

248
00:10:14,710 --> 00:10:18,520
but if you're looking in the responses

249
00:10:17,020 --> 00:10:19,780
and looking in the source code and

250
00:10:18,520 --> 00:10:21,910
looking in the Java scripts that are

251
00:10:19,780 --> 00:10:24,850
coming back you will find links to these

252
00:10:21,910 --> 00:10:27,280
kinds of resources and that's exactly

253
00:10:24,850 --> 00:10:30,070
what happens I was doing a pen test on

254
00:10:27,280 --> 00:10:32,920
an application where I was provided a

255
00:10:30,070 --> 00:10:35,710
user role and I was able to log into the

256
00:10:32,920 --> 00:10:37,120
application and I could do typical kinds

257
00:10:35,710 --> 00:10:39,220
of shopping things with his application

258
00:10:37,120 --> 00:10:41,230
I could view products and search for

259
00:10:39,220 --> 00:10:44,470
them and I could add them to my cart

260
00:10:41,230 --> 00:10:46,420
check them out I didn't have any admin

261
00:10:44,470 --> 00:10:49,120
functions and I couldn't see any in the

262
00:10:46,420 --> 00:10:51,520
browser however when I was looking in

263
00:10:49,120 --> 00:10:54,070
the proxy and looking at my responses I

264
00:10:51,520 --> 00:10:56,949
was able to see that there were

265
00:10:54,070 --> 00:10:59,170
JavaScript files being sent back those

266
00:10:56,950 --> 00:11:01,900
JavaScript files contained what appeared

267
00:10:59,170 --> 00:11:05,170
to be admin functionality the crawler

268
00:11:01,900 --> 00:11:07,390
did not detect this did not send me any

269
00:11:05,170 --> 00:11:08,870
links to hey here's the admin section in

270
00:11:07,390 --> 00:11:11,689
your application

271
00:11:08,870 --> 00:11:13,930
instead I looked at this at this

272
00:11:11,690 --> 00:11:17,660
JavaScript and it appeared that it drew

273
00:11:13,930 --> 00:11:20,469
menus for admin functionality on the web

274
00:11:17,660 --> 00:11:23,180
page based on a certain cookie value

275
00:11:20,470 --> 00:11:24,800
upon further inspection I realized that

276
00:11:23,180 --> 00:11:26,839
there was a cookie that was being set

277
00:11:24,800 --> 00:11:30,709
when I logged in that said whether I was

278
00:11:26,840 --> 00:11:33,440
a user or an admin and by changing that

279
00:11:30,710 --> 00:11:35,330
cookie to an admin cookie which I could

280
00:11:33,440 --> 00:11:36,980
understand by reading the source code by

281
00:11:35,330 --> 00:11:39,680
reading the JavaScript that came back

282
00:11:36,980 --> 00:11:41,830
and in my proxy I was able to create an

283
00:11:39,680 --> 00:11:44,449
admin cookie at which point the browser

284
00:11:41,830 --> 00:11:46,820
displayed the admin functionality to me

285
00:11:44,450 --> 00:11:49,670
because the application Rico relied on

286
00:11:46,820 --> 00:11:52,070
client-side validation and I was

287
00:11:49,670 --> 00:11:55,339
actually able to take full admin control

288
00:11:52,070 --> 00:11:57,590
of the application because I was looking

289
00:11:55,340 --> 00:12:00,230
in the proxy and seeing that my scanner

290
00:11:57,590 --> 00:12:01,790
didn't find any vulnerabilities and my

291
00:12:00,230 --> 00:12:04,010
crawler didn't find any advant

292
00:12:01,790 --> 00:12:06,380
functionality but looking in those

293
00:12:04,010 --> 00:12:08,150
responses I was able to gain admin

294
00:12:06,380 --> 00:12:11,360
control over this app because I was

295
00:12:08,150 --> 00:12:13,120
looking at the proxy and not just paying

296
00:12:11,360 --> 00:12:16,760
attention to what's in the browser so

297
00:12:13,120 --> 00:12:19,220
that's extremely important I want to let

298
00:12:16,760 --> 00:12:21,470
you know that this talk is a little

299
00:12:19,220 --> 00:12:23,360
brief out of a larger talk that I've

300
00:12:21,470 --> 00:12:25,400
given and these slides from that full

301
00:12:23,360 --> 00:12:29,420
talk are available here at Red Sea's

302
00:12:25,400 --> 00:12:31,610
comm /w a 101 and you can find the talk

303
00:12:29,420 --> 00:12:33,439
on youtube it's been recorded a couple

304
00:12:31,610 --> 00:12:37,340
of times where I go into a lot more

305
00:12:33,440 --> 00:12:39,410
detail about scoping and methodology in

306
00:12:37,340 --> 00:12:41,360
the enumeration or I also provide some

307
00:12:39,410 --> 00:12:43,370
tips and tricks that make my life easier

308
00:12:41,360 --> 00:12:46,130
on a day to day basis as a web app pen

309
00:12:43,370 --> 00:12:48,320
tester I want to thank you for taking

310
00:12:46,130 --> 00:12:51,410
the time out of your Kringle khan to

311
00:12:48,320 --> 00:12:53,450
talk with me about web application pen

312
00:12:51,410 --> 00:12:55,010
testing if you have any questions you

313
00:12:53,450 --> 00:12:56,750
can reach out to me i'm mike at red sage

314
00:12:55,010 --> 00:12:59,510
calm and i'm hard water hacker on

315
00:12:56,750 --> 00:13:00,920
twitter follow red siege InfoSec on

316
00:12:59,510 --> 00:13:03,439
twitter to get information about our

317
00:13:00,920 --> 00:13:05,780
latest blogs and research and thank you

318
00:13:03,440 --> 00:13:08,260
I hope you enjoy the rest of your crank

319
00:13:05,780 --> 00:13:08,260
O'Connell

