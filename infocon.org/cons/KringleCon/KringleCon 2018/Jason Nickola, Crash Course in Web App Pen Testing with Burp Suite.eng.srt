1
00:00:00,030 --> 00:00:05,220
thank you so much for coming to my talk

2
00:00:02,009 --> 00:00:07,080
today Kringle con when Santa reached out

3
00:00:05,220 --> 00:00:09,629
to me and asked me to be a presenter

4
00:00:07,080 --> 00:00:12,300
here at Kengo con I was so excited to do

5
00:00:09,630 --> 00:00:13,650
it some of the issues that we've had at

6
00:00:12,300 --> 00:00:15,269
the North Pole over the last few years

7
00:00:13,650 --> 00:00:17,730
have been a little bit problematic

8
00:00:15,269 --> 00:00:20,850
around Christmastime so it's it's a real

9
00:00:17,730 --> 00:00:22,560
honor to be here helping out and helping

10
00:00:20,850 --> 00:00:24,900
to train the crowd and how we can try to

11
00:00:22,560 --> 00:00:26,939
protect the North Pole and Santa moving

12
00:00:24,900 --> 00:00:28,830
forward I'm from New Hampshire and it's

13
00:00:26,939 --> 00:00:30,420
usually pretty cold there I thought that

14
00:00:28,830 --> 00:00:32,969
would prepare me pretty well but boy it

15
00:00:30,420 --> 00:00:35,280
is cold up here in the North Pole but on

16
00:00:32,969 --> 00:00:37,290
the on the positive side the hot

17
00:00:35,280 --> 00:00:38,690
chocolate is just so much better here

18
00:00:37,290 --> 00:00:40,710
than it is in other parts of the world

19
00:00:38,690 --> 00:00:43,170
so today what we're going to talk about

20
00:00:40,710 --> 00:00:45,420
is burp suite and and how we can use

21
00:00:43,170 --> 00:00:48,450
burp suite to perform on webapp

22
00:00:45,420 --> 00:00:50,910
penetration testing and we'll try to use

23
00:00:48,450 --> 00:00:53,699
that in the ongoing fight to protect the

24
00:00:50,910 --> 00:00:56,218
North Pole so let's get started so a

25
00:00:53,699 --> 00:00:58,019
basic overview of what burp suite is it

26
00:00:56,219 --> 00:01:00,420
is a web app penetration testing

27
00:00:58,020 --> 00:01:03,359
framework and the way that we use it is

28
00:01:00,420 --> 00:01:06,479
we're able to proxy requests from the

29
00:01:03,359 --> 00:01:08,130
browser to the server and perform some

30
00:01:06,479 --> 00:01:10,409
manipulation either to learn more about

31
00:01:08,130 --> 00:01:12,960
a web application or to try to make the

32
00:01:10,409 --> 00:01:15,330
web app do things that it's not intended

33
00:01:12,960 --> 00:01:18,389
to do right we're able to do that for

34
00:01:15,330 --> 00:01:20,789
both HTTP and HTTPS traffic and we can

35
00:01:18,390 --> 00:01:22,290
do that in in manual ways just us kind

36
00:01:20,790 --> 00:01:24,479
of poking around with at an application

37
00:01:22,290 --> 00:01:26,280
seeing what it does or it can queue up

38
00:01:24,479 --> 00:01:28,500
lots of different requests at once and

39
00:01:26,280 --> 00:01:31,680
see how a web app might respond to more

40
00:01:28,500 --> 00:01:33,659
automated techniques so when developers

41
00:01:31,680 --> 00:01:35,700
say things like why would anyone use it

42
00:01:33,659 --> 00:01:36,780
that way why do we have to protect for

43
00:01:35,700 --> 00:01:39,090
this kind of thing how would that ever

44
00:01:36,780 --> 00:01:40,950
happen our job is to then say well

45
00:01:39,090 --> 00:01:43,829
because burp and we'll see a little bit

46
00:01:40,950 --> 00:01:45,659
of that here coming up so how do you get

47
00:01:43,829 --> 00:01:47,820
burp it is included in default

48
00:01:45,659 --> 00:01:49,860
installations of Kali which a lot of you

49
00:01:47,820 --> 00:01:52,258
may be familiar with you can also get

50
00:01:49,860 --> 00:01:54,509
native versions on Mac OS Windows and

51
00:01:52,259 --> 00:01:56,640
Linux it's also written in Java so you

52
00:01:54,509 --> 00:01:58,079
can get a jar file to run burp and you

53
00:01:56,640 --> 00:02:00,600
can do that at ports wiggers website

54
00:01:58,079 --> 00:02:03,570
there are three main versions the

55
00:02:00,600 --> 00:02:05,699
community version is free it is more

56
00:02:03,570 --> 00:02:06,869
than enough for the basic average use

57
00:02:05,700 --> 00:02:08,789
especially if you're just getting

58
00:02:06,869 --> 00:02:11,819
started with burp suite but the pro

59
00:02:08,788 --> 00:02:13,890
version is 399 a year it is a really

60
00:02:11,819 --> 00:02:16,319
great tool and it's

61
00:02:13,890 --> 00:02:17,579
worth the costs if you burp often or

62
00:02:16,319 --> 00:02:19,140
you're trying to do more automated

63
00:02:17,580 --> 00:02:20,520
attacks where you don't want to have

64
00:02:19,140 --> 00:02:21,929
some of the rate-limiting that we'll see

65
00:02:20,520 --> 00:02:24,600
here coming up in a few slides

66
00:02:21,930 --> 00:02:27,680
there is also an enterprise version that

67
00:02:24,600 --> 00:02:31,380
runs you about four grand a year

68
00:02:27,680 --> 00:02:34,080
so the essential core of what burp is is

69
00:02:31,380 --> 00:02:35,040
a proxy you have your browser you make

70
00:02:34,080 --> 00:02:37,050
requests through it

71
00:02:35,040 --> 00:02:39,000
burp caches those you can manipulate

72
00:02:37,050 --> 00:02:40,380
them and then you send them off to the

73
00:02:39,000 --> 00:02:42,239
server again and you can see things

74
00:02:40,380 --> 00:02:44,819
coming out from your browser and then

75
00:02:42,239 --> 00:02:47,010
coming back on the server as well you do

76
00:02:44,819 --> 00:02:49,470
need to configure the proxy by default

77
00:02:47,010 --> 00:02:50,730
it runs on localhost with port 8080 but

78
00:02:49,470 --> 00:02:52,769
you can configure that any way that you

79
00:02:50,730 --> 00:02:54,899
want to so if you wanted to have

80
00:02:52,769 --> 00:02:56,820
requests coming from a remote machine

81
00:02:54,900 --> 00:02:59,220
you could buy into an interface that is

82
00:02:56,820 --> 00:03:00,930
localhost also if you wanted to listen

83
00:02:59,220 --> 00:03:03,300
on the port that's not 8080 you could do

84
00:03:00,930 --> 00:03:06,000
that as well you do have to configure

85
00:03:03,300 --> 00:03:08,580
your browser to match so here we see a

86
00:03:06,000 --> 00:03:11,670
proxy configuration screen for Firefox

87
00:03:08,580 --> 00:03:13,230
and most of the the major browsers have

88
00:03:11,670 --> 00:03:14,730
similar options you see to make sure

89
00:03:13,230 --> 00:03:18,149
that you set that to whatever you said

90
00:03:14,730 --> 00:03:19,530
in the bird proxy listener in a tip from

91
00:03:18,150 --> 00:03:21,720
Santa here that he wanted to make sure

92
00:03:19,530 --> 00:03:24,060
that I included you do have to make sure

93
00:03:21,720 --> 00:03:26,670
that you install burps certificate in

94
00:03:24,060 --> 00:03:28,350
order to avoid some of the HTTP warnings

95
00:03:26,670 --> 00:03:31,230
that you might see in browsers from time

96
00:03:28,350 --> 00:03:35,489
to time as well as to proxy HSTs sites

97
00:03:31,230 --> 00:03:37,018
it won't work otherwise so let's dig

98
00:03:35,489 --> 00:03:39,150
into some of the bag of goodies that

99
00:03:37,019 --> 00:03:40,920
make burb so useful to us one of the

100
00:03:39,150 --> 00:03:42,810
major features that you'll notice right

101
00:03:40,920 --> 00:03:45,030
away just firing bird pup is that it

102
00:03:42,810 --> 00:03:46,500
does have a feature called intercept now

103
00:03:45,030 --> 00:03:48,450
another tip that Santa wanted me to

104
00:03:46,500 --> 00:03:50,610
include is that intercept is enabled by

105
00:03:48,450 --> 00:03:52,560
default for people who are new to using

106
00:03:50,610 --> 00:03:54,329
burp and are just getting started this

107
00:03:52,560 --> 00:03:57,030
can be a little bit tricky because what

108
00:03:54,329 --> 00:03:59,280
intercept does is it catches and holds

109
00:03:57,030 --> 00:04:01,829
you requests so that you can modify it

110
00:03:59,280 --> 00:04:03,810
in flight this can be things like cookie

111
00:04:01,829 --> 00:04:06,000
values post parameters you could even

112
00:04:03,810 --> 00:04:08,519
swap the entire request method from a

113
00:04:06,000 --> 00:04:10,859
get to post for example but this can

114
00:04:08,519 --> 00:04:11,250
seem broken if you don't know this ahead

115
00:04:10,859 --> 00:04:12,870
of time

116
00:04:11,250 --> 00:04:14,609
essentially what ends up happening is

117
00:04:12,870 --> 00:04:16,769
you make a request in your browser the

118
00:04:14,609 --> 00:04:19,260
intercept catches it in verbs proxy and

119
00:04:16,769 --> 00:04:21,750
you just see the little wheel and your

120
00:04:19,260 --> 00:04:23,669
browser spinning waiting for burp to

121
00:04:21,750 --> 00:04:24,990
release the request so if you don't know

122
00:04:23,669 --> 00:04:26,789
that it's there it might seem like it's

123
00:04:24,990 --> 00:04:27,639
broken and I have I've actually seen

124
00:04:26,789 --> 00:04:29,110
more than a few

125
00:04:27,639 --> 00:04:31,090
we'll get caught up at the step just

126
00:04:29,110 --> 00:04:33,430
know it's working as it should it's

127
00:04:31,090 --> 00:04:35,349
holding it so that you can modify the

128
00:04:33,430 --> 00:04:37,060
request if you just want the history and

129
00:04:35,349 --> 00:04:38,620
you don't want to modify it you can turn

130
00:04:37,060 --> 00:04:41,169
intercept off and it will work

131
00:04:38,620 --> 00:04:45,009
seamlessly giving you a history of the

132
00:04:41,169 --> 00:04:46,568
requests and responses invert another

133
00:04:45,009 --> 00:04:48,789
item in the bag of goodies here that we

134
00:04:46,569 --> 00:04:51,250
that we have is the burp spider what

135
00:04:48,789 --> 00:04:53,050
this does is it crawls a site and it

136
00:04:51,250 --> 00:04:54,699
allows you to identify additional

137
00:04:53,050 --> 00:04:57,729
resources that might be hosted by that

138
00:04:54,699 --> 00:05:00,849
site it will do things like follow links

139
00:04:57,729 --> 00:05:03,039
if there are any forms such as logins or

140
00:05:00,849 --> 00:05:05,169
or other types of forms it will submit

141
00:05:03,039 --> 00:05:08,378
them it will also take some well-known

142
00:05:05,169 --> 00:05:10,029
resources such as WP admin for example

143
00:05:08,379 --> 00:05:12,219
and it will determine whether or not

144
00:05:10,029 --> 00:05:13,900
those are available at the site now in

145
00:05:12,219 --> 00:05:16,810
terms of professional penetration

146
00:05:13,900 --> 00:05:19,388
testing which is what we all are a burp

147
00:05:16,810 --> 00:05:21,189
does have a concept of scope right so if

148
00:05:19,389 --> 00:05:22,900
if there are links included in a site

149
00:05:21,189 --> 00:05:24,849
that are not within our scope we can

150
00:05:22,900 --> 00:05:26,529
configure burp to only follow the things

151
00:05:24,849 --> 00:05:30,460
that are within our scope which is a

152
00:05:26,529 --> 00:05:33,909
really useful feature to have the

153
00:05:30,460 --> 00:05:35,650
repeater is a really super useful tool

154
00:05:33,909 --> 00:05:37,690
within burp and what this does is it

155
00:05:35,650 --> 00:05:40,388
allows you to take any requests whether

156
00:05:37,690 --> 00:05:44,289
you get it from HTTP proxy history or

157
00:05:40,389 --> 00:05:46,509
you get it from capturing the traffic

158
00:05:44,289 --> 00:05:48,068
and holding it that we can send that to

159
00:05:46,509 --> 00:05:50,800
repeater and what this allows us to do

160
00:05:48,069 --> 00:05:52,900
is manually manipulate that request and

161
00:05:50,800 --> 00:05:55,060
see the response immediately side by

162
00:05:52,900 --> 00:05:55,719
side so we're not proxying requests from

163
00:05:55,060 --> 00:05:58,150
the browser

164
00:05:55,719 --> 00:05:59,560
the request is originating within burp

165
00:05:58,150 --> 00:06:01,330
and we're getting the response right

166
00:05:59,560 --> 00:06:04,900
there in line as well this is really

167
00:06:01,330 --> 00:06:06,580
useful for quick targeted repeated tests

168
00:06:04,900 --> 00:06:08,529
within burp if we're trying to do

169
00:06:06,580 --> 00:06:10,449
something like get a string just

170
00:06:08,529 --> 00:06:13,240
perfectly correct for sequel injection

171
00:06:10,449 --> 00:06:15,039
or try to determine what values might be

172
00:06:13,240 --> 00:06:17,589
allowed through a filter for Peter is a

173
00:06:15,039 --> 00:06:18,909
really great way of doing this and in

174
00:06:17,589 --> 00:06:20,800
general if you see a request that you

175
00:06:18,909 --> 00:06:22,419
want to add to repeater you can find a

176
00:06:20,800 --> 00:06:24,310
little action button click action and

177
00:06:22,419 --> 00:06:25,900
say Center repeater or you can typically

178
00:06:24,310 --> 00:06:30,069
right click and send a repeater and that

179
00:06:25,900 --> 00:06:31,989
will work as well intruder is a really

180
00:06:30,069 --> 00:06:34,089
really cool feature and what this does

181
00:06:31,990 --> 00:06:37,149
is it basically automates some of the

182
00:06:34,089 --> 00:06:39,580
functionality of repeater so instead of

183
00:06:37,149 --> 00:06:41,380
sending one-off requests that that we've

184
00:06:39,580 --> 00:06:42,940
immediately view the

185
00:06:41,380 --> 00:06:45,430
response to in the manipulate

186
00:06:42,940 --> 00:06:48,040
accordingly we can queue up some number

187
00:06:45,430 --> 00:06:49,600
of requests and have this automated so

188
00:06:48,040 --> 00:06:52,690
if we have a word list that we want to

189
00:06:49,600 --> 00:06:54,310
try or we have different strings that we

190
00:06:52,690 --> 00:06:56,890
want to test sequel injection with or

191
00:06:54,310 --> 00:06:59,560
modify cookie values or or see if we can

192
00:06:56,890 --> 00:07:01,719
predict session IDs for example you can

193
00:06:59,560 --> 00:07:04,120
configure positions within the request

194
00:07:01,720 --> 00:07:06,540
and populate them with pre specified

195
00:07:04,120 --> 00:07:09,400
payloads these can be things like

196
00:07:06,540 --> 00:07:11,620
numbers within a range or even load it

197
00:07:09,400 --> 00:07:14,229
in from files that have a list of items

198
00:07:11,620 --> 00:07:15,670
you'd like to include now what's really

199
00:07:14,230 --> 00:07:18,280
interesting is you do have the ability

200
00:07:15,670 --> 00:07:19,810
to manipulate each of these payloads and

201
00:07:18,280 --> 00:07:22,059
do some additional processing on them

202
00:07:19,810 --> 00:07:23,590
for example let's say that we're testing

203
00:07:22,060 --> 00:07:26,470
a web application and we want to

204
00:07:23,590 --> 00:07:29,320
determine a list of likely active users

205
00:07:26,470 --> 00:07:31,960
so we we have some email addresses in a

206
00:07:29,320 --> 00:07:34,330
file and we know that the @ symbol for

207
00:07:31,960 --> 00:07:36,489
example needs to be URL encode did

208
00:07:34,330 --> 00:07:38,469
before we submit the request but is able

209
00:07:36,490 --> 00:07:39,940
to do that for you with some auto

210
00:07:38,470 --> 00:07:41,410
processing of the payload you can do

211
00:07:39,940 --> 00:07:42,000
other things like match and replace as

212
00:07:41,410 --> 00:07:45,040
well

213
00:07:42,000 --> 00:07:47,920
there are a few different modes for both

214
00:07:45,040 --> 00:07:49,540
burp intruder the the the most common

215
00:07:47,920 --> 00:07:51,850
one and one that we talked about already

216
00:07:49,540 --> 00:07:54,220
is sniper and what this does is it takes

217
00:07:51,850 --> 00:07:56,290
a payload in a single position so we

218
00:07:54,220 --> 00:07:58,270
have just one spot that we want to swap

219
00:07:56,290 --> 00:08:01,840
out for different items in our list of

220
00:07:58,270 --> 00:08:04,060
payloads battering ram is similar but it

221
00:08:01,840 --> 00:08:06,700
will take that individual payload and in

222
00:08:04,060 --> 00:08:08,530
Sirte at multiple positions so imagine

223
00:08:06,700 --> 00:08:11,590
we have a username that is in a post

224
00:08:08,530 --> 00:08:13,450
parameter and it's also in a included in

225
00:08:11,590 --> 00:08:17,380
the URL for example we might want that

226
00:08:13,450 --> 00:08:20,920
same payload in multiple spots pitchfork

227
00:08:17,380 --> 00:08:22,750
will also have multiple positions but it

228
00:08:20,920 --> 00:08:24,790
will have different payloads in each

229
00:08:22,750 --> 00:08:27,220
position so we're battering ram is the

230
00:08:24,790 --> 00:08:29,650
same payload in multiple positions pitch

231
00:08:27,220 --> 00:08:31,180
for work is different payloads in

232
00:08:29,650 --> 00:08:32,530
multiple positions and then you have

233
00:08:31,180 --> 00:08:34,960
cluster bomb which is kind of a

234
00:08:32,530 --> 00:08:37,089
combination of all of them all possible

235
00:08:34,960 --> 00:08:39,789
payload positions with all possible

236
00:08:37,090 --> 00:08:42,190
payloads a requested one after another

237
00:08:39,789 --> 00:08:44,530
so it's probably the closest to proove

238
00:08:42,190 --> 00:08:47,280
forcing of any of the options but it

239
00:08:44,530 --> 00:08:51,010
does generate a large number of requests

240
00:08:47,280 --> 00:08:53,620
another thing that I see newcomers to

241
00:08:51,010 --> 00:08:54,939
burp typically get caught up with is the

242
00:08:53,620 --> 00:08:56,380
modes and trying to understand that

243
00:08:54,940 --> 00:08:58,540
for instance between the modes the main

244
00:08:56,380 --> 00:08:59,860
thing to remember is in general if

245
00:08:58,540 --> 00:09:01,300
you're looking to modify one thing

246
00:08:59,860 --> 00:09:02,950
you're gonna be looking at sniper and

247
00:09:01,300 --> 00:09:04,380
you'll use that for a little bit and

248
00:09:02,950 --> 00:09:07,180
then you realize that the sniper feature

249
00:09:04,380 --> 00:09:09,790
doesn't really meet your needs for for a

250
00:09:07,180 --> 00:09:11,199
new type of attack that pops up and then

251
00:09:09,790 --> 00:09:13,089
you'll start to escalate through some of

252
00:09:11,200 --> 00:09:14,500
the other modes and get a better feel

253
00:09:13,090 --> 00:09:18,760
for them but hopefully this gets you

254
00:09:14,500 --> 00:09:21,430
started sequencer is very interesting

255
00:09:18,760 --> 00:09:23,230
and and what this does is it is it takes

256
00:09:21,430 --> 00:09:26,770
something like a session ID for example

257
00:09:23,230 --> 00:09:28,870
and it will take the request that the

258
00:09:26,770 --> 00:09:31,449
server responds to to set your session

259
00:09:28,870 --> 00:09:34,720
ID and it will repeat that as many times

260
00:09:31,450 --> 00:09:37,450
as it needs to in order to determine the

261
00:09:34,720 --> 00:09:39,340
number of bits of entropy in that

262
00:09:37,450 --> 00:09:40,930
session ID and the reason why we're

263
00:09:39,340 --> 00:09:43,450
interested in that is because maybe

264
00:09:40,930 --> 00:09:46,030
there's some predictable pattern or

265
00:09:43,450 --> 00:09:48,160
they're pseudo-random number generator

266
00:09:46,030 --> 00:09:51,850
implementation is flawed in some way and

267
00:09:48,160 --> 00:09:54,390
we can determine what likely useable

268
00:09:51,850 --> 00:09:56,530
session IDs are and with some other

269
00:09:54,390 --> 00:09:58,660
approaches and flaws built in we might

270
00:09:56,530 --> 00:10:01,150
be able to predict those session IDs and

271
00:09:58,660 --> 00:10:03,370
use them to access portions of the

272
00:10:01,150 --> 00:10:05,740
system that we shouldn't be able to

273
00:10:03,370 --> 00:10:09,160
access without logging in we could do a

274
00:10:05,740 --> 00:10:11,230
lot of this manually right but the math

275
00:10:09,160 --> 00:10:13,780
is difficult and it's not something that

276
00:10:11,230 --> 00:10:15,970
we can do very quickly and burp can do

277
00:10:13,780 --> 00:10:17,949
it in an automated way and then at the

278
00:10:15,970 --> 00:10:20,590
end spit out some nice graphs that show

279
00:10:17,950 --> 00:10:22,900
you four different significance levels

280
00:10:20,590 --> 00:10:24,730
and confidence levels the the level of

281
00:10:22,900 --> 00:10:26,500
entropy and something like a session ID

282
00:10:24,730 --> 00:10:30,220
which is a really really useful feature

283
00:10:26,500 --> 00:10:32,530
to have built right into the proxy so

284
00:10:30,220 --> 00:10:34,240
there's a lot more to burp suite right

285
00:10:32,530 --> 00:10:37,410
there's there's things like the extender

286
00:10:34,240 --> 00:10:40,780
which allow you to build your own custom

287
00:10:37,410 --> 00:10:43,780
custom options to load into burp in in

288
00:10:40,780 --> 00:10:46,569
Java and other languages scanner is is a

289
00:10:43,780 --> 00:10:48,610
pro feature that as you're going through

290
00:10:46,570 --> 00:10:50,230
and making some of your quests burp will

291
00:10:48,610 --> 00:10:52,210
automatically do some analysis on

292
00:10:50,230 --> 00:10:55,510
looking for things like clear text

293
00:10:52,210 --> 00:10:57,640
passwords sequel injection cross-site

294
00:10:55,510 --> 00:10:59,290
scripting and other vulnerabilities it

295
00:10:57,640 --> 00:11:01,870
happens automatically in the background

296
00:10:59,290 --> 00:11:04,680
and you can trigger it to happen on

297
00:11:01,870 --> 00:11:07,120
demand decoder is a way of taking

298
00:11:04,680 --> 00:11:08,739
different payloads something that might

299
00:11:07,120 --> 00:11:10,540
look like it's basics t4

300
00:11:08,740 --> 00:11:13,090
and trying to determine if you can

301
00:11:10,540 --> 00:11:15,189
decode it compare we'll take different

302
00:11:13,090 --> 00:11:17,380
requests and basically do a diff on them

303
00:11:15,190 --> 00:11:19,030
and tell you what's different in between

304
00:11:17,380 --> 00:11:21,820
them which is a really useful thing and

305
00:11:19,030 --> 00:11:23,650
if you're making small changes and the

306
00:11:21,820 --> 00:11:25,570
response generates a large amount of

307
00:11:23,650 --> 00:11:27,850
traffic compared ik and can do that for

308
00:11:25,570 --> 00:11:29,740
you very easily macros are a way of

309
00:11:27,850 --> 00:11:31,330
automating and stringing together

310
00:11:29,740 --> 00:11:34,270
several tasks that you would perform

311
00:11:31,330 --> 00:11:35,590
manually which is really cool you can

312
00:11:34,270 --> 00:11:37,540
schedule some of this as well

313
00:11:35,590 --> 00:11:38,950
and then you also have collaborator that

314
00:11:37,540 --> 00:11:41,020
you can you can have a separate server

315
00:11:38,950 --> 00:11:42,490
that you report back to to get more

316
00:11:41,020 --> 00:11:45,490
up-to-date information on some

317
00:11:42,490 --> 00:11:46,780
vulnerabilities that might exist in a

318
00:11:45,490 --> 00:11:48,520
site that you're looking at well I'd

319
00:11:46,780 --> 00:11:50,350
love to have the time to dig in all

320
00:11:48,520 --> 00:11:52,420
these things right now we don't have

321
00:11:50,350 --> 00:11:54,400
enough time here to cover it but

322
00:11:52,420 --> 00:11:55,660
hopefully and I think we've covered some

323
00:11:54,400 --> 00:11:59,590
of the basics to at least get you

324
00:11:55,660 --> 00:12:01,660
started so so what what happens next we

325
00:11:59,590 --> 00:12:04,270
have a decent basic level understanding

326
00:12:01,660 --> 00:12:05,980
of how to jump in and start using burp

327
00:12:04,270 --> 00:12:06,970
what do we want to look at now so the

328
00:12:05,980 --> 00:12:09,700
first thing that you can do is you can

329
00:12:06,970 --> 00:12:11,230
find me on Twitter at your mod X and you

330
00:12:09,700 --> 00:12:12,310
can ask me any questions you might have

331
00:12:11,230 --> 00:12:14,320
if you have comments about the

332
00:12:12,310 --> 00:12:16,030
presentation or you you want somebody to

333
00:12:14,320 --> 00:12:17,170
just take you through a more individual

334
00:12:16,030 --> 00:12:19,569
deep dive it would be more than willing

335
00:12:17,170 --> 00:12:22,420
to do that port swagger has some great

336
00:12:19,570 --> 00:12:26,950
resources available san it also has two

337
00:12:22,420 --> 00:12:28,449
courses SEK 542 and 6 642 which sex 542

338
00:12:26,950 --> 00:12:30,940
gives you a great introductory level

339
00:12:28,450 --> 00:12:32,560
hold up herb and sex 642 digs into some

340
00:12:30,940 --> 00:12:34,240
of the higher level features you can

341
00:12:32,560 --> 00:12:37,959
also test your skills with holiday hack

342
00:12:34,240 --> 00:12:39,100
challenge dvwa net Wars hack the box and

343
00:12:37,960 --> 00:12:41,470
some other things that you find out

344
00:12:39,100 --> 00:12:42,730
there also just teach someone what you

345
00:12:41,470 --> 00:12:45,370
know if you learn something here today

346
00:12:42,730 --> 00:12:46,270
or you dig in on your own and you find

347
00:12:45,370 --> 00:12:47,830
some stuff that's interesting

348
00:12:46,270 --> 00:12:49,600
communicate that back to other people

349
00:12:47,830 --> 00:12:52,450
one of the best ways to learn is to

350
00:12:49,600 --> 00:12:54,700
teach and not only is that good for you

351
00:12:52,450 --> 00:12:57,370
but you're spreading the burp and web

352
00:12:54,700 --> 00:12:58,540
app pentesting love which is which is

353
00:12:57,370 --> 00:13:02,170
kind of what this season is all about

354
00:12:58,540 --> 00:13:04,270
right giving so I sincerely hope you

355
00:13:02,170 --> 00:13:06,189
enjoyed this presentation today have a

356
00:13:04,270 --> 00:13:08,140
great time at the rest of cringle con

357
00:13:06,190 --> 00:13:10,000
and holiday act challenge I do have some

358
00:13:08,140 --> 00:13:11,680
people that I want to thank not the

359
00:13:10,000 --> 00:13:14,380
least of which among them are Santa

360
00:13:11,680 --> 00:13:16,510
Claus himself the Star Wars Holiday

361
00:13:14,380 --> 00:13:17,830
Special deserves always deserves a

362
00:13:16,510 --> 00:13:20,830
concerted call-out

363
00:13:17,830 --> 00:13:22,480
Jason Blanchard ed SCOTUS and the SANS

364
00:13:20,830 --> 00:13:24,310
Institute as well

365
00:13:22,480 --> 00:13:26,050
and and and that's all I have for you

366
00:13:24,310 --> 00:13:29,040
thank you very much for attending and

367
00:13:26,050 --> 00:13:29,040
enjoy the rest of the con

