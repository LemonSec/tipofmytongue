1
00:00:00,000 --> 00:00:05,670
hi this is JBL and I'm here Ingle Khan

2
00:00:03,720 --> 00:00:08,519
and I want to give you a quick

3
00:00:05,670 --> 00:00:12,450
introduction to attacking a kubernetes

4
00:00:08,519 --> 00:00:14,700
cluster at in guardians we do a ton of

5
00:00:12,450 --> 00:00:19,230
red teaming and we get to do some

6
00:00:14,700 --> 00:00:21,330
defense too and we do quite a bit of

7
00:00:19,230 --> 00:00:23,130
attack and lately we've been attacking a

8
00:00:21,330 --> 00:00:25,139
lot of uh kerbin any's clusters and so I

9
00:00:23,130 --> 00:00:27,419
want to tell you how to do that look for

10
00:00:25,140 --> 00:00:30,210
some my other talks for for a for a

11
00:00:27,420 --> 00:00:33,270
longer introduction or for the next kind

12
00:00:30,210 --> 00:00:36,329
of a you know mediate episode so let's

13
00:00:33,270 --> 00:00:38,520
see um this is my bio slide so you're

14
00:00:36,329 --> 00:00:41,850
looking at a real life picture of me and

15
00:00:38,520 --> 00:00:44,820
and of course a bio is a sea of text and

16
00:00:41,850 --> 00:00:47,250
so I have another kind of bio slide so

17
00:00:44,820 --> 00:00:49,079
if you were here to pause here and look

18
00:00:47,250 --> 00:00:50,760
every single one of these images has

19
00:00:49,079 --> 00:00:53,910
something to do with with some part of

20
00:00:50,760 --> 00:00:56,039
my career over the last 20 years so

21
00:00:53,910 --> 00:00:57,000
without further ado let's talk let's

22
00:00:56,039 --> 00:00:58,469
communities

23
00:00:57,000 --> 00:01:00,780
so here's we're gonna talk about want to

24
00:00:58,469 --> 00:01:02,460
tell you what kubernetes is just a

25
00:01:00,780 --> 00:01:04,530
little bit cuz we're in a very short

26
00:01:02,460 --> 00:01:05,820
intro here I'm gonna talk talk to you

27
00:01:04,530 --> 00:01:08,400
about how you attack it and then I'm

28
00:01:05,820 --> 00:01:11,039
gonna demo a basic attack on a cobra

29
00:01:08,400 --> 00:01:13,020
dice cluster where our goal is to start

30
00:01:11,040 --> 00:01:15,119
from having from having and compromised

31
00:01:13,020 --> 00:01:17,658
one program and this running on

32
00:01:15,119 --> 00:01:19,770
kubernetes and turning that into

33
00:01:17,659 --> 00:01:21,390
complete control of the Plus through it

34
00:01:19,770 --> 00:01:23,490
although and all the machines that it's

35
00:01:21,390 --> 00:01:24,960
running on so when we're getting to that

36
00:01:23,490 --> 00:01:27,509
I'm gonna be doing a demo and my demo

37
00:01:24,960 --> 00:01:29,639
was recorded because the demo gods are

38
00:01:27,509 --> 00:01:34,409
just they're all descended from Loki and

39
00:01:29,640 --> 00:01:38,100
they are tricky tricky gods or demons

40
00:01:34,409 --> 00:01:41,820
perhaps so um let's start first with

41
00:01:38,100 --> 00:01:43,589
what is kubernetes so if you've never if

42
00:01:41,820 --> 00:01:46,320
you've heard of kubernetes but have no

43
00:01:43,590 --> 00:01:49,790
idea what it does count yourself in the

44
00:01:46,320 --> 00:01:51,539
majority of the of the InfoSec field

45
00:01:49,790 --> 00:01:54,350
communities is something that's been

46
00:01:51,540 --> 00:01:58,020
around for five or more years but it's

47
00:01:54,350 --> 00:02:01,079
but it's becoming incredibly popular

48
00:01:58,020 --> 00:02:03,570
lately and it's basically to make it

49
00:02:01,079 --> 00:02:04,798
really really simple if you've got if

50
00:02:03,570 --> 00:02:06,839
you're used to the idea that you have a

51
00:02:04,799 --> 00:02:09,060
home host that runs docker or it runs

52
00:02:06,840 --> 00:02:11,510
some other way of creating Linux

53
00:02:09,060 --> 00:02:13,740
containers on a system

54
00:02:11,510 --> 00:02:15,480
what would happen if you decided you

55
00:02:13,740 --> 00:02:17,640
wanted a cluster of machines that were

56
00:02:15,480 --> 00:02:19,500
running docker and then you wanted to

57
00:02:17,640 --> 00:02:20,760
basically organize everything that they

58
00:02:19,500 --> 00:02:25,200
were doing so that you're creating kind

59
00:02:20,760 --> 00:02:26,429
of a almost a software-defined data

60
00:02:25,200 --> 00:02:29,940
center not just the software-defined

61
00:02:26,430 --> 00:02:31,800
network so think of it just to make

62
00:02:29,940 --> 00:02:33,210
things really simple if you have a

63
00:02:31,800 --> 00:02:35,160
cluster full of machines running docker

64
00:02:33,210 --> 00:02:38,160
all those machines running docker

65
00:02:35,160 --> 00:02:40,020
we call them notes and kubernetes is

66
00:02:38,160 --> 00:02:41,820
basically and is basically going to

67
00:02:40,020 --> 00:02:45,780
coordinate between its gonna coordinate

68
00:02:41,820 --> 00:02:48,299
multiple nodes it's gonna coordinate

69
00:02:45,780 --> 00:02:50,100
that that by having a bunch of central

70
00:02:48,300 --> 00:02:51,990
role infrastructure that runs on one or

71
00:02:50,100 --> 00:02:53,700
more masters so let's just say the runs

72
00:02:51,990 --> 00:02:55,350
on a master node and then there'll be a

73
00:02:53,700 --> 00:02:59,730
whole bunch of worker nodes and all

74
00:02:55,350 --> 00:03:01,530
those and all the nodes all the nodes

75
00:02:59,730 --> 00:03:04,859
even even the master are running docker

76
00:03:01,530 --> 00:03:06,360
or some or some other container or some

77
00:03:04,860 --> 00:03:07,470
of they're gonna container runtime and

78
00:03:06,360 --> 00:03:10,830
they're running something called a

79
00:03:07,470 --> 00:03:14,010
couplet and the couplet is there to tie

80
00:03:10,830 --> 00:03:17,370
that machine that node into the rest of

81
00:03:14,010 --> 00:03:19,440
kubernetes so kubernetes in essence

82
00:03:17,370 --> 00:03:22,350
orchestrates docker or whatever your

83
00:03:19,440 --> 00:03:25,470
container runtime is and and the couplet

84
00:03:22,350 --> 00:03:29,160
and well and a coop proxy but we're not

85
00:03:25,470 --> 00:03:32,580
gonna get into that and and those do the

86
00:03:29,160 --> 00:03:35,250
real work so to take over cluster would

87
00:03:32,580 --> 00:03:37,290
mean would mean violating that would

88
00:03:35,250 --> 00:03:39,450
mean violating expectations in any way

89
00:03:37,290 --> 00:03:41,130
so I've got a little slide on some of

90
00:03:39,450 --> 00:03:42,359
the attack steps these are just some of

91
00:03:41,130 --> 00:03:46,920
the kinds of text that's the yellow of

92
00:03:42,360 --> 00:03:48,270
available kubernetes so one is and and

93
00:03:46,920 --> 00:03:50,250
these steps are all taken from the

94
00:03:48,270 --> 00:03:51,150
perspective that you your already you've

95
00:03:50,250 --> 00:03:56,400
already got remote code execution

96
00:03:51,150 --> 00:03:58,440
usually in a container on the cluster

97
00:03:56,400 --> 00:04:01,530
and I'm going to add one more term for

98
00:03:58,440 --> 00:04:04,170
us and that term is pod so kubernetes

99
00:04:01,530 --> 00:04:07,920
clusters work from the perspective not

100
00:04:04,170 --> 00:04:10,859
of containers but of pods and each pod

101
00:04:07,920 --> 00:04:12,359
has one or more containers in it so if

102
00:04:10,860 --> 00:04:13,440
I'd say if I say the word containers

103
00:04:12,360 --> 00:04:16,710
sometimes and I said the word pods

104
00:04:13,440 --> 00:04:20,279
sometimes think of them as think of a

105
00:04:16,709 --> 00:04:23,010
think of a pod as having one or more

106
00:04:20,279 --> 00:04:26,369
containers often very very often

107
00:04:23,010 --> 00:04:28,020
apologist has one container in it

108
00:04:26,370 --> 00:04:30,060
look some other talks for finding out

109
00:04:28,020 --> 00:04:31,889
why you have multiple containers in a

110
00:04:30,060 --> 00:04:33,690
pod and so on so here are the kinds of

111
00:04:31,889 --> 00:04:35,490
things we can do to attack kubernetes

112
00:04:33,690 --> 00:04:39,630
so once we've landed and you're gonna

113
00:04:35,490 --> 00:04:41,970
see some of these in the demo today once

114
00:04:39,630 --> 00:04:44,490
you've landed in a pod in a container

115
00:04:41,970 --> 00:04:47,759
you might choose to ask the API server

116
00:04:44,490 --> 00:04:50,550
the kind of the API server the component

117
00:04:47,759 --> 00:04:53,400
that lives on the master and and accepts

118
00:04:50,550 --> 00:04:54,870
your commands via a REST API you're

119
00:04:53,400 --> 00:04:56,190
gonna you could ask it to basically do

120
00:04:54,870 --> 00:04:57,930
this equivalent of a docker exact you

121
00:04:56,190 --> 00:04:59,840
can say hey I'd like to I'd like to

122
00:04:57,930 --> 00:05:02,039
create a shell in some other container

123
00:04:59,840 --> 00:05:03,960
would you let me and if you're allowed

124
00:05:02,039 --> 00:05:06,060
then you'll be you'll be running a shell

125
00:05:03,960 --> 00:05:08,400
in that other container you'll or you

126
00:05:06,060 --> 00:05:10,039
can just run a single command what else

127
00:05:08,400 --> 00:05:12,780
can you do you can launch a container

128
00:05:10,039 --> 00:05:14,280
onto the cluster by talking to the API

129
00:05:12,780 --> 00:05:15,570
server you can say hey I know I'm in a

130
00:05:14,280 --> 00:05:17,369
container but I'd like to start another

131
00:05:15,570 --> 00:05:19,909
container and maybe that container could

132
00:05:17,370 --> 00:05:22,139
have more privilege I'm the one I'm in

133
00:05:19,910 --> 00:05:25,050
you could abuse or you could set up

134
00:05:22,139 --> 00:05:27,419
what's called a volume mount where where

135
00:05:25,050 --> 00:05:30,030
you're basically mounting directories

136
00:05:27,419 --> 00:05:31,349
directories on the node on that kind of

137
00:05:30,030 --> 00:05:34,679
host file system outside of the

138
00:05:31,349 --> 00:05:36,270
container into the container you can ask

139
00:05:34,680 --> 00:05:37,979
the couplet that's the thing that's

140
00:05:36,270 --> 00:05:41,070
running that's running on the node

141
00:05:37,979 --> 00:05:42,570
talking to docker and also talking to

142
00:05:41,070 --> 00:05:46,199
the sentence talking with the kubernetes

143
00:05:42,570 --> 00:05:47,940
master to exact a command or a shell in

144
00:05:46,199 --> 00:05:49,889
an existing containers so you don't

145
00:05:47,940 --> 00:05:53,460
there's kind of multiple attack service

146
00:05:49,889 --> 00:05:55,139
not just as acting the central part you

147
00:05:53,460 --> 00:05:56,880
can interact with and let's attack the

148
00:05:55,139 --> 00:05:58,830
docker daemon on the host and then you

149
00:05:56,880 --> 00:06:00,180
can interact with say the internal

150
00:05:58,830 --> 00:06:01,919
external external networks that are

151
00:06:00,180 --> 00:06:06,150
available so you're gonna see some of

152
00:06:01,919 --> 00:06:07,740
this we're gonna get into a demo and and

153
00:06:06,150 --> 00:06:10,948
I've got like I said I pre-recorded my

154
00:06:07,740 --> 00:06:14,190
demo and I'll just kind of show you what

155
00:06:10,949 --> 00:06:15,389
a what a kubernetes cluster your

156
00:06:14,190 --> 00:06:16,740
compromise looks like from the

157
00:06:15,389 --> 00:06:20,250
perspective of the person doing the

158
00:06:16,740 --> 00:06:21,780
compromise so this cluster is the

159
00:06:20,250 --> 00:06:23,190
cluster that you're seeing is one that

160
00:06:21,780 --> 00:06:25,739
I'm gonna be released as soon as an open

161
00:06:23,190 --> 00:06:29,130
source projects called bust a cube like

162
00:06:25,740 --> 00:06:30,900
kubernetes bustah Kubb so so here we are

163
00:06:29,130 --> 00:06:34,010
so you'll be able to you'll be able to

164
00:06:30,900 --> 00:06:37,830
kind of repeat my attack later on so

165
00:06:34,010 --> 00:06:38,949
we've got the we I've started this off

166
00:06:37,830 --> 00:06:40,719
in Metasploit

167
00:06:38,949 --> 00:06:44,169
I've kind of you know fast forwarded as

168
00:06:40,720 --> 00:06:46,990
it were and we are inside of a container

169
00:06:44,169 --> 00:06:49,719
that's running in kubernetes but we've

170
00:06:46,990 --> 00:06:52,000
got a shell so I've you've seen I just

171
00:06:49,720 --> 00:06:54,430
type PWD and it says you're in far dub

172
00:06:52,000 --> 00:06:55,229
dub HTML so we got this shell because we

173
00:06:54,430 --> 00:06:58,120
found a remote code execution

174
00:06:55,229 --> 00:06:59,590
vulnerability in a web app so now where

175
00:06:58,120 --> 00:07:02,050
we do well I have to know where in

176
00:06:59,590 --> 00:07:03,568
kubernetes but here's a nice little way

177
00:07:02,050 --> 00:07:05,409
of checking and also of getting

178
00:07:03,569 --> 00:07:07,720
remembering the director of the service

179
00:07:05,409 --> 00:07:09,940
council capped at this mountain grep

180
00:07:07,720 --> 00:07:11,770
that for kubernetes and this directory

181
00:07:09,940 --> 00:07:14,800
that you see runs secrets kubernetes is

182
00:07:11,770 --> 00:07:16,060
service account this is where the well

183
00:07:14,800 --> 00:07:17,620
this is where the service account that

184
00:07:16,060 --> 00:07:20,199
the pod is running on there will be

185
00:07:17,620 --> 00:07:21,520
mounted into the pod unless the unless

186
00:07:20,199 --> 00:07:23,380
the cluster is one where it's been -

187
00:07:21,520 --> 00:07:25,750
pretty good not - which is not very

188
00:07:23,380 --> 00:07:27,849
common yet so what I'm going to do is

189
00:07:25,750 --> 00:07:29,319
I've uploaded been using them

190
00:07:27,849 --> 00:07:31,690
interpreter before this before the start

191
00:07:29,319 --> 00:07:34,150
of this demo I've uploaded a copy of

192
00:07:31,690 --> 00:07:36,280
coop CTL and coop CTL own but coop

193
00:07:34,150 --> 00:07:39,250
controls how it's not like anounced is a

194
00:07:36,280 --> 00:07:41,619
binary that will that basically issues

195
00:07:39,250 --> 00:07:43,300
those API requests those REST API

196
00:07:41,620 --> 00:07:46,330
requests that have the kubernetes api

197
00:07:43,300 --> 00:07:48,580
server I'll use coop CTL and I'll tell

198
00:07:46,330 --> 00:07:51,008
it get the token get your security token

199
00:07:48,580 --> 00:07:52,990
for the service account from that magic

200
00:07:51,009 --> 00:07:55,719
service account directory in the token

201
00:07:52,990 --> 00:07:58,300
file just cat it out and you'll find the

202
00:07:55,719 --> 00:08:01,449
certificate authorities root cert in the

203
00:07:58,300 --> 00:08:03,069
same directory in the CA cert file and I

204
00:08:01,449 --> 00:08:04,300
have to tell it where the server is and

205
00:08:03,069 --> 00:08:07,090
I can get the set of an environment

206
00:08:04,300 --> 00:08:09,819
variable but I'd have to tell it where

207
00:08:07,090 --> 00:08:12,340
the master API server is is to be found

208
00:08:09,819 --> 00:08:13,840
and I do that and that namespace file

209
00:08:12,340 --> 00:08:15,130
tells me I'm in the default namespace if

210
00:08:13,840 --> 00:08:17,739
I were to look at it I'm not gonna look

211
00:08:15,130 --> 00:08:19,779
at it interest of time so this is my

212
00:08:17,740 --> 00:08:21,580
this whole VAR dub dub normally just

213
00:08:19,779 --> 00:08:24,009
type coop CTL but when you've hacked

214
00:08:21,580 --> 00:08:25,840
your way into a cluster there probably

215
00:08:24,009 --> 00:08:27,639
won't be a coop CTL in there much less a

216
00:08:25,840 --> 00:08:29,529
configuration setup so we're just

217
00:08:27,639 --> 00:08:31,599
passing on the command line you'll do

218
00:08:29,529 --> 00:08:33,099
coop CTL and then some commands and so

219
00:08:31,599 --> 00:08:34,838
you're gonna see me copy and paste this

220
00:08:33,099 --> 00:08:37,029
long string and then whatever command

221
00:08:34,839 --> 00:08:38,469
I'd use so the first one I choose is get

222
00:08:37,029 --> 00:08:40,360
pods and this shows me all the

223
00:08:38,469 --> 00:08:43,510
containers that are running on the

224
00:08:40,360 --> 00:08:45,100
system in the current namespace which is

225
00:08:43,510 --> 00:08:47,500
kind of where the app has been deployed

226
00:08:45,100 --> 00:08:49,240
so this is a this is the guest a book

227
00:08:47,500 --> 00:08:51,490
that came with the that's in the

228
00:08:49,240 --> 00:08:52,930
kubernetes example Docs

229
00:08:51,490 --> 00:08:54,190
to have a funny little vulnerability

230
00:08:52,930 --> 00:08:55,810
that doesn't lead to remote code

231
00:08:54,190 --> 00:08:58,270
execution and I've added another bone

232
00:08:55,810 --> 00:09:00,520
that you can tie together with it so

233
00:08:58,270 --> 00:09:03,790
I've got a I've got three front end pods

234
00:09:00,520 --> 00:09:05,860
and I've got a reddest master and a pair

235
00:09:03,790 --> 00:09:07,380
of Redis slaves so there's a Redis data

236
00:09:05,860 --> 00:09:11,050
basically news and there's a front end

237
00:09:07,380 --> 00:09:13,839
web server that I that I got into I pass

238
00:09:11,050 --> 00:09:15,279
along that get pods - output wide and I

239
00:09:13,839 --> 00:09:17,620
get to find out what nodes they're all

240
00:09:15,279 --> 00:09:19,660
running on so kubernetes will go and

241
00:09:17,620 --> 00:09:21,850
distribute things as much as they can

242
00:09:19,660 --> 00:09:24,300
onto multiple computers because part of

243
00:09:21,850 --> 00:09:26,709
the purpose of kubernetes is to handle

244
00:09:24,300 --> 00:09:28,180
machines failing and having the

245
00:09:26,709 --> 00:09:30,939
applications or programs they were

246
00:09:28,180 --> 00:09:33,279
running still continue running and lose

247
00:09:30,940 --> 00:09:34,600
as little compute time as possible so

248
00:09:33,279 --> 00:09:35,470
what I'm trying to do the very first

249
00:09:34,600 --> 00:09:38,950
thing I'm trying to do is I'm saying

250
00:09:35,470 --> 00:09:40,660
okay I ran get pods and now I've created

251
00:09:38,950 --> 00:09:42,970
this thing called attack pod and this

252
00:09:40,660 --> 00:09:45,459
attack pod llamo is a yellow file that

253
00:09:42,970 --> 00:09:47,110
says here's a description of in essence

254
00:09:45,459 --> 00:09:50,020
a container and I'd like this to run the

255
00:09:47,110 --> 00:09:52,120
kubernetes pod and and I'm trying to

256
00:09:50,020 --> 00:09:54,760
stage a part of the cluster and I get

257
00:09:52,120 --> 00:09:56,200
this error that says nope sorry your

258
00:09:54,760 --> 00:09:57,910
service account the service account

259
00:09:56,200 --> 00:09:59,350
front-end isn't allowed to create pods

260
00:09:57,910 --> 00:10:02,319
in this namespace is it allowed to

261
00:09:59,350 --> 00:10:03,520
create pots so I can't stage pods well

262
00:10:02,320 --> 00:10:07,600
let me see what else I might be able to

263
00:10:03,520 --> 00:10:09,069
do let's say I let's say I try to see if

264
00:10:07,600 --> 00:10:10,810
I can get to another service account if

265
00:10:09,070 --> 00:10:12,640
I could move laterally to another pot

266
00:10:10,810 --> 00:10:14,349
but it might have a service account that

267
00:10:12,640 --> 00:10:15,819
can do things I want so I'm gonna use

268
00:10:14,350 --> 00:10:18,790
another koop CTL command the coop

269
00:10:15,820 --> 00:10:20,920
control I'm gonna use Kubb off module

270
00:10:18,790 --> 00:10:22,719
and can i and then say can i exec in

271
00:10:20,920 --> 00:10:24,910
deposits can i run programs in other

272
00:10:22,720 --> 00:10:28,620
pods and it says yes you can

273
00:10:24,910 --> 00:10:30,790
oh oh that's my favorite word here so

274
00:10:28,620 --> 00:10:32,440
that's great that means I can move

275
00:10:30,790 --> 00:10:33,880
laterally so I'm gonna go and run that

276
00:10:32,440 --> 00:10:36,070
same kind of thing and I'll use the same

277
00:10:33,880 --> 00:10:39,850
kind of doctor syntax I use and do this

278
00:10:36,070 --> 00:10:41,230
docker exec IT and think of it like

279
00:10:39,850 --> 00:10:44,079
interactive terminal it's not quite that

280
00:10:41,230 --> 00:10:45,279
but it's a great way of so I I keep

281
00:10:44,079 --> 00:10:47,349
track of it and I'm gonna say I'm going

282
00:10:45,279 --> 00:10:49,959
to the Redis master and I want to run an

283
00:10:47,350 --> 00:10:51,220
interactive bash shell if the if there's

284
00:10:49,959 --> 00:10:53,649
a bash shell in there I would like to

285
00:10:51,220 --> 00:10:55,480
run it and this is what I've done I'm in

286
00:10:53,649 --> 00:10:58,899
that now I'll take Aidid says your route

287
00:10:55,480 --> 00:11:00,880
and I type host name and it says your

288
00:10:58,899 --> 00:11:02,829
new host name is Redis master so I'm now

289
00:11:00,880 --> 00:11:04,270
in a different container and actually if

290
00:11:02,829 --> 00:11:05,109
we were looking we'd also find I'm not

291
00:11:04,270 --> 00:11:07,990
just in a different

292
00:11:05,110 --> 00:11:10,180
I'm on a different machine I've hopped

293
00:11:07,990 --> 00:11:11,560
machines in here so now from that

294
00:11:10,180 --> 00:11:13,000
contained I'm gonna pull down a copy of

295
00:11:11,560 --> 00:11:15,040
my meterpreter reverse shell right

296
00:11:13,000 --> 00:11:17,980
against this final called mrs. Ben from

297
00:11:15,040 --> 00:11:20,019
interpreter reverse shell Ben and I'll

298
00:11:17,980 --> 00:11:22,420
pull down some yeah mol I'll pull down

299
00:11:20,019 --> 00:11:24,070
that same kind of yeah mo file ya Milles

300
00:11:22,420 --> 00:11:26,260
like yet another markup language it's a

301
00:11:24,070 --> 00:11:27,910
simple markup language but it turns out

302
00:11:26,260 --> 00:11:30,399
in kubernetes the bulk of the way you do

303
00:11:27,910 --> 00:11:33,459
everything is you describe the state

304
00:11:30,399 --> 00:11:35,200
you'd like in yellow and then you pass

305
00:11:33,459 --> 00:11:37,899
that into the API server and it says

306
00:11:35,200 --> 00:11:39,940
sure I'll do that for you so I'm pulling

307
00:11:37,899 --> 00:11:40,870
down some an attack upon gamma file that

308
00:11:39,940 --> 00:11:43,180
already made pulling down the

309
00:11:40,870 --> 00:11:45,519
meterpreter I'm running the meterpreter

310
00:11:43,180 --> 00:11:46,870
binary and that's just to give myself

311
00:11:45,519 --> 00:11:48,399
kind of the opportunity for a better

312
00:11:46,870 --> 00:11:50,860
show or for a better remote access

313
00:11:48,399 --> 00:11:53,829
trojan so I'm gonna background this

314
00:11:50,860 --> 00:11:57,670
channel this first front-end one that I

315
00:11:53,829 --> 00:12:01,209
were I hopped from and I'm now gonna

316
00:11:57,670 --> 00:12:03,040
switch over and back into my image of my

317
00:12:01,209 --> 00:12:05,410
Metasploit console and I'm gonna touch

318
00:12:03,040 --> 00:12:06,399
the next session and the next session is

319
00:12:05,410 --> 00:12:08,620
this Redis pod

320
00:12:06,399 --> 00:12:13,660
so I'll interact with it I'll upload a

321
00:12:08,620 --> 00:12:15,399
copy of coop CTL to it I've cut out some

322
00:12:13,660 --> 00:12:17,319
of the time there it's like Shels that I

323
00:12:15,399 --> 00:12:18,970
can back in the shell and now I want to

324
00:12:17,320 --> 00:12:20,380
take bash - all right ooh get a little

325
00:12:18,970 --> 00:12:22,690
more friendly shell and I've got this

326
00:12:20,380 --> 00:12:24,640
colorization that is so much a pain in

327
00:12:22,690 --> 00:12:26,769
the butt and I'm gonna go to my Cali

328
00:12:24,640 --> 00:12:29,470
system and I'm grab my ps1 variable

329
00:12:26,769 --> 00:12:30,910
which is kind of what defines the which

330
00:12:29,470 --> 00:12:32,800
is what defines what this prompt looks

331
00:12:30,910 --> 00:12:36,160
like I'm gonna set it on a set the one

332
00:12:32,800 --> 00:12:38,680
in the host a compromise - the same one

333
00:12:36,160 --> 00:12:39,339
that I have just things will look a

334
00:12:38,680 --> 00:12:42,130
little bit nicer

335
00:12:39,339 --> 00:12:45,490
I couldn't clear my screen so I go and

336
00:12:42,130 --> 00:12:47,529
set my turn variable to a bt100 anybody

337
00:12:45,490 --> 00:12:50,949
holds full enough to know what that is I

338
00:12:47,529 --> 00:12:54,550
salute you get that service account

339
00:12:50,949 --> 00:12:59,109
directory let's find out what it is I'm

340
00:12:54,550 --> 00:13:03,130
gonna copy it and I'm now going to

341
00:12:59,110 --> 00:13:05,560
create a more a more friendly coupe CTL

342
00:13:03,130 --> 00:13:06,880
file coupe CTL command line we're about

343
00:13:05,560 --> 00:13:08,410
to keep copying pasting so the first

344
00:13:06,880 --> 00:13:11,140
thing I do is I create a token variable

345
00:13:08,410 --> 00:13:13,510
it just has the contents of that token

346
00:13:11,140 --> 00:13:15,790
file this service count token of this

347
00:13:13,510 --> 00:13:16,930
service counts token fun aisle and I'm

348
00:13:15,790 --> 00:13:19,089
going to create a quick little alias

349
00:13:16,930 --> 00:13:22,089
alias cube CTL to the

350
00:13:19,089 --> 00:13:24,129
path where I upload coups ETL and then

351
00:13:22,089 --> 00:13:26,589
all those other arguments like the like

352
00:13:24,129 --> 00:13:28,809
the token equals and maybe now any

353
00:13:26,589 --> 00:13:30,999
dollar sign token and you can find the

354
00:13:28,809 --> 00:13:35,949
shifted Authority in this file path and

355
00:13:30,999 --> 00:13:38,769
so on so I'm setting that up so that I

356
00:13:35,949 --> 00:13:41,170
can run so I can do just like the proper

357
00:13:38,769 --> 00:13:45,309
owners of this cluster as opposed to the

358
00:13:41,170 --> 00:13:47,050
new owner which would be me they just

359
00:13:45,309 --> 00:13:49,149
get to run coop see file commands and

360
00:13:47,050 --> 00:13:50,290
they're much more elegant they look much

361
00:13:49,149 --> 00:13:55,209
more elegant so we're going to do that

362
00:13:50,290 --> 00:13:59,050
to with a nice little alias so keep CTL

363
00:13:55,209 --> 00:14:01,719
get pods - are wide now I've got that

364
00:13:59,050 --> 00:14:03,490
same list that I had earlier I could get

365
00:14:01,720 --> 00:14:05,709
pods real quick just to just to practice

366
00:14:03,490 --> 00:14:07,269
and just to make sure that a DEP thing

367
00:14:05,709 --> 00:14:08,199
working but now what I'm going to do is

368
00:14:07,269 --> 00:14:10,600
I'm going to say coop see if they'll

369
00:14:08,199 --> 00:14:13,420
apply and give it a llamo file and say

370
00:14:10,600 --> 00:14:15,279
make this so right so this is how you

371
00:14:13,420 --> 00:14:17,709
give kubernetes an order give it any

372
00:14:15,279 --> 00:14:19,600
animal file that describe this pod you'd

373
00:14:17,709 --> 00:14:21,489
like to be running this and on the

374
00:14:19,600 --> 00:14:23,920
cluster and here's this llamo file and

375
00:14:21,490 --> 00:14:25,809
if you look over this you pause your

376
00:14:23,920 --> 00:14:27,579
video you can find it's got a name

377
00:14:25,809 --> 00:14:30,339
it's got labels and annotations which

378
00:14:27,579 --> 00:14:32,589
we're not using here it's got an image

379
00:14:30,339 --> 00:14:34,209
and I chose an image by by doing a coop

380
00:14:32,589 --> 00:14:36,610
see tail get pods getting a list of the

381
00:14:34,209 --> 00:14:38,920
pods finding the reddest pod and asking

382
00:14:36,610 --> 00:14:40,509
what image it used that way the docker

383
00:14:38,920 --> 00:14:43,689
hosts wouldn't have to pull down a new

384
00:14:40,509 --> 00:14:44,740
image from the internet and these other

385
00:14:43,689 --> 00:14:46,329
perks I'm highlighting are basically

386
00:14:44,740 --> 00:14:48,519
this is a volume mount I can say I want

387
00:14:46,329 --> 00:14:50,559
this container that I'm asking to run on

388
00:14:48,519 --> 00:14:52,509
the cluster they're not just be running

389
00:14:50,559 --> 00:14:55,240
and to use the Redis image as a as a

390
00:14:52,509 --> 00:14:57,490
base but I'd like it also to have a

391
00:14:55,240 --> 00:14:58,959
volume mount it's gonna mount the hosts

392
00:14:57,490 --> 00:15:04,120
so this host path it's going to mount

393
00:14:58,959 --> 00:15:06,219
the the host the nodes root path and

394
00:15:04,120 --> 00:15:08,019
it's going to us which is slash and it's

395
00:15:06,220 --> 00:15:10,600
going to mount that into the pod into

396
00:15:08,019 --> 00:15:11,980
the container as /root so instead of

397
00:15:10,600 --> 00:15:13,629
mount that it into the container slash

398
00:15:11,980 --> 00:15:15,759
root which is going to give me control

399
00:15:13,629 --> 00:15:18,730
over the host file system the container

400
00:15:15,759 --> 00:15:22,179
is running on so now I do might get pods

401
00:15:18,730 --> 00:15:23,800
Oh wha I did and I find there's my

402
00:15:22,179 --> 00:15:26,709
attack pod it's running on kubernetes

403
00:15:23,800 --> 00:15:28,899
node - so this is a three node cluster

404
00:15:26,709 --> 00:15:30,518
there's node 2 node 1 and there's Cadis

405
00:15:28,899 --> 00:15:32,019
master we're not looking at that right

406
00:15:30,519 --> 00:15:32,740
now

407
00:15:32,019 --> 00:15:35,980
so now

408
00:15:32,740 --> 00:15:38,770
gonna try to run my coop CTL exact into

409
00:15:35,980 --> 00:15:40,000
that attack pod I'm gonna be rude but

410
00:15:38,770 --> 00:15:42,310
even better than being rude I'm also

411
00:15:40,000 --> 00:15:46,920
gonna have mounted the right the right

412
00:15:42,310 --> 00:15:50,619
path so I'm gonna have mounted the hosts

413
00:15:46,920 --> 00:15:52,860
slash the hosts route into / route so I

414
00:15:50,620 --> 00:15:55,300
see Dean slash route and here's the host

415
00:15:52,860 --> 00:15:57,070
so now I'm gonna do another cool little

416
00:15:55,300 --> 00:15:59,020
UNIX you know excellence trick imma do

417
00:15:57,070 --> 00:16:01,270
chroot slash route on the ship I'm gonna

418
00:15:59,020 --> 00:16:04,510
start a shell locked into / root

419
00:16:01,270 --> 00:16:07,630
directory inside this shell / root is

420
00:16:04,510 --> 00:16:09,310
the root / roots much fancy will be the

421
00:16:07,630 --> 00:16:11,770
Etsy so this is basically like kind of

422
00:16:09,310 --> 00:16:13,930
making the key making this part of the

423
00:16:11,770 --> 00:16:15,310
filesystem my image of the computer

424
00:16:13,930 --> 00:16:17,380
which is good because that's the

425
00:16:15,310 --> 00:16:19,689
overarching that's the that's the host

426
00:16:17,380 --> 00:16:21,279
that's the node so look at the server's

427
00:16:19,690 --> 00:16:23,500
file and I find there's an admin group

428
00:16:21,279 --> 00:16:24,730
and a su do group so I grab the sudo

429
00:16:23,500 --> 00:16:26,740
group and I see this user called lock

430
00:16:24,730 --> 00:16:29,709
this down so let's just change Lockley

431
00:16:26,740 --> 00:16:32,350
sounds password so I'll change lock this

432
00:16:29,709 --> 00:16:35,949
towns password and I'll set it to lock

433
00:16:32,350 --> 00:16:37,990
this down and now I will ssh into the

434
00:16:35,950 --> 00:16:40,380
node for my own cali system to node to

435
00:16:37,990 --> 00:16:44,410
where I change lock this downs password

436
00:16:40,380 --> 00:16:48,010
and I mean and if I were to sudo su what

437
00:16:44,410 --> 00:16:49,420
would happen I'm rude on the node okay

438
00:16:48,010 --> 00:16:52,209
that part I cut that video a little

439
00:16:49,420 --> 00:16:54,819
tight that went by in a hurry but that's

440
00:16:52,209 --> 00:16:55,899
where it was I'm rude on the node but

441
00:16:54,820 --> 00:16:56,410
now the thing is how do we do that

442
00:16:55,899 --> 00:16:57,880
scalably

443
00:16:56,410 --> 00:16:59,380
committees cluster doesn't usually have

444
00:16:57,880 --> 00:17:01,420
just two three nodes it has like

445
00:16:59,380 --> 00:17:04,569
hundreds or thousands or you know maybe

446
00:17:01,420 --> 00:17:06,280
in Google's case millions and so what I

447
00:17:04,569 --> 00:17:07,780
wanted to is actually say how do i scale

448
00:17:06,280 --> 00:17:09,490
ibly take over every node in the cluster

449
00:17:07,780 --> 00:17:12,399
and for that I create something called a

450
00:17:09,490 --> 00:17:15,130
demon set it's similar to defining a pod

451
00:17:12,400 --> 00:17:17,170
but this demon set defines a pod that

452
00:17:15,130 --> 00:17:18,850
you'd like to run on every node in the

453
00:17:17,170 --> 00:17:21,400
cluster it's usually for like a logging

454
00:17:18,849 --> 00:17:22,688
demon or a you know security demon or

455
00:17:21,400 --> 00:17:23,170
whatever you know software or

456
00:17:22,689 --> 00:17:25,000
what-have-you

457
00:17:23,170 --> 00:17:27,730
something you need to run everywhere and

458
00:17:25,000 --> 00:17:29,950
this is the same thing this attack root

459
00:17:27,730 --> 00:17:32,350
is the name I'm calling of this

460
00:17:29,950 --> 00:17:34,030
container and I'm using that same Redis

461
00:17:32,350 --> 00:17:35,500
image and remember I pick the Redis

462
00:17:34,030 --> 00:17:39,790
image because it was the same thing with

463
00:17:35,500 --> 00:17:41,830
the Redis master was using and I am and

464
00:17:39,790 --> 00:17:43,059
I'm also doing that volume mouth I'm

465
00:17:41,830 --> 00:17:44,860
saying I'm gonna have a volume out it's

466
00:17:43,059 --> 00:17:46,629
gonna be called host root it's going to

467
00:17:44,860 --> 00:17:48,699
mount host root

468
00:17:46,630 --> 00:17:51,370
to /root and then if i look at the

469
00:17:48,700 --> 00:17:54,130
volume host root it is the node host

470
00:17:51,370 --> 00:17:57,159
path slash so I'm gonna say I'd like to

471
00:17:54,130 --> 00:18:00,730
do that across everything so now let's

472
00:17:57,160 --> 00:18:03,940
take our so that demon set okay clearly

473
00:18:00,730 --> 00:18:08,590
in my video I have not gonna go over

474
00:18:03,940 --> 00:18:11,710
that all again so so here we go I'm

475
00:18:08,590 --> 00:18:15,490
gonna do coop CTL apply and see if I'm

476
00:18:11,710 --> 00:18:17,650
able to apply a demon set and I am okay

477
00:18:15,490 --> 00:18:19,840
so the cool thing was the difference was

478
00:18:17,650 --> 00:18:22,780
the front end pod its service account

479
00:18:19,840 --> 00:18:27,370
couldn't apply couldn't add pods to the

480
00:18:22,780 --> 00:18:29,350
cluster but the Redis masters pod Redis

481
00:18:27,370 --> 00:18:32,320
master pod service account it could and

482
00:18:29,350 --> 00:18:34,840
so I've just added not just out of the

483
00:18:32,320 --> 00:18:36,929
one pot to take over no - but now I'm

484
00:18:34,840 --> 00:18:40,270
adding a demon set I'm adding a

485
00:18:36,930 --> 00:18:42,910
identical set up pods one for everything

486
00:18:40,270 --> 00:18:44,800
in the cluster and it's called a back

487
00:18:42,910 --> 00:18:46,570
demon set and I might have to wait a

488
00:18:44,800 --> 00:18:49,780
minute for it to load but once I do wait

489
00:18:46,570 --> 00:18:53,200
for it to load I can run this group CTL

490
00:18:49,780 --> 00:18:55,450
get pods - Oh wide that tells me which

491
00:18:53,200 --> 00:18:57,340
which nodes each thing is on my grep for

492
00:18:55,450 --> 00:18:59,770
attack and you'll see this attack demon

493
00:18:57,340 --> 00:19:01,179
set I've got three pods each one is

494
00:18:59,770 --> 00:19:04,270
called a tag-team set and then random

495
00:19:01,180 --> 00:19:07,330
string and each one of them is running

496
00:19:04,270 --> 00:19:08,770
on a different node so I've got one

497
00:19:07,330 --> 00:19:10,270
running on the master I've got one

498
00:19:08,770 --> 00:19:14,530
running on node one and one running on

499
00:19:10,270 --> 00:19:15,610
node two so now let's do a little bit of

500
00:19:14,530 --> 00:19:17,260
I've done a little bit of shell

501
00:19:15,610 --> 00:19:20,979
scripting I've written a for loop here

502
00:19:17,260 --> 00:19:22,330
just a for pod e in and that what's

503
00:19:20,980 --> 00:19:24,340
going to be in what's the sentiment a

504
00:19:22,330 --> 00:19:27,370
loop over I'm gonna do coop control get

505
00:19:24,340 --> 00:19:30,129
pods grep that protecting and set pocket

506
00:19:27,370 --> 00:19:32,320
to get the first column and what I'll do

507
00:19:30,130 --> 00:19:34,510
now is that gives me a list of each of

508
00:19:32,320 --> 00:19:35,889
those attack demon set pods and I'm

509
00:19:34,510 --> 00:19:38,790
there do a for loop over them and in my

510
00:19:35,890 --> 00:19:42,130
for loop I'm gonna do coop CTL exec - IT

511
00:19:38,790 --> 00:19:44,110
into the specific pod into the pile that

512
00:19:42,130 --> 00:19:47,610
I'm looping over and then I'll do cat

513
00:19:44,110 --> 00:19:48,909
root @c hostname so in it so that I know

514
00:19:47,610 --> 00:19:51,040
where I am

515
00:19:48,910 --> 00:19:54,610
I'll cat a lot I'll cat root it see

516
00:19:51,040 --> 00:19:56,290
shadow all and then I'll take the output

517
00:19:54,610 --> 00:19:57,389
of all of that I'm going to grab out for

518
00:19:56,290 --> 00:20:00,209
a pattern

519
00:19:57,389 --> 00:20:02,549
that pattern will be helpful so let's

520
00:20:00,209 --> 00:20:05,759
take a look at what that what of how

521
00:20:02,549 --> 00:20:09,239
that looks there's a little bit more

522
00:20:05,759 --> 00:20:11,820
going on but when I'm done this is what

523
00:20:09,239 --> 00:20:15,989
I end up with I get the hostname of each

524
00:20:11,820 --> 00:20:18,299
of these each of these nodes and the

525
00:20:15,989 --> 00:20:20,669
root hash and the lock this down hash

526
00:20:18,299 --> 00:20:23,399
for each node now for me this was to

527
00:20:20,669 --> 00:20:26,099
demonstrate that I had full redraw that

528
00:20:23,399 --> 00:20:28,829
I had full read access to every one of

529
00:20:26,099 --> 00:20:30,239
these and I can get their passwords now

530
00:20:28,829 --> 00:20:34,619
I also pull write and so I'll

531
00:20:30,239 --> 00:20:36,599
demonstrate that real quick and this is

532
00:20:34,619 --> 00:20:38,939
kind of one of the simplest attacks on a

533
00:20:36,599 --> 00:20:42,559
Kerber Nettie's cluster I've put in some

534
00:20:38,940 --> 00:20:45,899
lateral movement I put in starting a pod

535
00:20:42,559 --> 00:20:47,849
but I have much more involved attacks on

536
00:20:45,899 --> 00:20:49,738
Granny's clusters and what's in my other

537
00:20:47,849 --> 00:20:52,168
talks my name is JB I'll find some my

538
00:20:49,739 --> 00:20:53,489
other talks and you will and you'll find

539
00:20:52,169 --> 00:20:55,169
some more involved things and I'll start

540
00:20:53,489 --> 00:20:58,499
to release some that capture the flags

541
00:20:55,169 --> 00:21:01,169
on it so I'm doing a quick loop and I'm

542
00:20:58,499 --> 00:21:03,719
gonna go and basically touch the file /

543
00:21:01,169 --> 00:21:07,139
root slash owned on each of those hosts

544
00:21:03,719 --> 00:21:09,089
and what happens as a result is if I go

545
00:21:07,139 --> 00:21:11,099
and look at one of those so I vegetation

546
00:21:09,089 --> 00:21:12,749
in the master if I go and look for an

547
00:21:11,099 --> 00:21:15,389
owned file there it is

548
00:21:12,749 --> 00:21:18,239
so this means I've compromised every

549
00:21:15,389 --> 00:21:21,779
single node along with the master so

550
00:21:18,239 --> 00:21:24,089
that's basically the that's basically

551
00:21:21,779 --> 00:21:25,889
the long and short of it we have let's

552
00:21:24,089 --> 00:21:28,859
look back at our what our tech steps

553
00:21:25,889 --> 00:21:30,658
were so I exact like Zack to command

554
00:21:28,859 --> 00:21:32,489
into a container via the API server we

555
00:21:30,659 --> 00:21:35,489
did that we launched a container another

556
00:21:32,489 --> 00:21:39,169
clusters we used a volume mount to steal

557
00:21:35,489 --> 00:21:42,119
or modify data on the host itself

558
00:21:39,169 --> 00:21:44,099
we didn't ask a Kubla to do anything we

559
00:21:42,119 --> 00:21:46,649
didn't interact with the docker team in

560
00:21:44,099 --> 00:21:47,609
our internal or external networks so

561
00:21:46,649 --> 00:21:48,928
those are clearly some of the other

562
00:21:47,609 --> 00:21:50,908
things we have and there are a bunch of

563
00:21:48,929 --> 00:21:53,339
other attacks one of mine one of the

564
00:21:50,909 --> 00:21:56,969
most fun ones honestly is to see if your

565
00:21:53,339 --> 00:22:02,399
clusters running on on AWS or is running

566
00:21:56,969 --> 00:22:04,259
on GC P or on Azure and see if you can

567
00:22:02,399 --> 00:22:06,059
reach the metadata server and basically

568
00:22:04,259 --> 00:22:08,249
get a copy of your service account token

569
00:22:06,059 --> 00:22:10,079
the whole cluster is running under

570
00:22:08,249 --> 00:22:10,770
because then you have not just the hosts

571
00:22:10,079 --> 00:22:13,530
but you X

572
00:22:10,770 --> 00:22:14,940
we have the account which means you're

573
00:22:13,530 --> 00:22:16,139
basically a kind of the data center or

574
00:22:14,940 --> 00:22:19,260
at least whatever your account can do

575
00:22:16,140 --> 00:22:20,970
the data center so anyway that's all I

576
00:22:19,260 --> 00:22:23,850
have to I'll have to tell you about I do

577
00:22:20,970 --> 00:22:25,260
want to tell you that in guardians is

578
00:22:23,850 --> 00:22:27,090
I'm one of the co-founders being

579
00:22:25,260 --> 00:22:30,240
Guardians and we've been around for

580
00:22:27,090 --> 00:22:31,949
about 15 years now hacking and defending

581
00:22:30,240 --> 00:22:33,780
and I would love to hear from you but

582
00:22:31,950 --> 00:22:35,160
most of all right now I just want to say

583
00:22:33,780 --> 00:22:37,050
we have an awesome executive briefing

584
00:22:35,160 --> 00:22:40,770
newsletter comes out once a week and

585
00:22:37,050 --> 00:22:42,510
it's basically one topic insecurity

586
00:22:40,770 --> 00:22:46,200
that's come up usually in the news and

587
00:22:42,510 --> 00:22:48,390
what we think you should do if that's if

588
00:22:46,200 --> 00:22:50,940
that things applicable to you or if it's

589
00:22:48,390 --> 00:22:52,560
applicable to somebody you know we won't

590
00:22:50,940 --> 00:22:54,180
spam you the most you'll ever get from

591
00:22:52,560 --> 00:22:56,310
subscribing to this news look to this to

592
00:22:54,180 --> 00:23:00,210
this mailing list is one newsletter so

593
00:22:56,310 --> 00:23:02,210
anyway that's me and I hope you'll hope

594
00:23:00,210 --> 00:23:05,010
you'll maybe find me around Kringle Kahn

595
00:23:02,210 --> 00:23:11,180
I'm gonna be I may be in here now and

596
00:23:05,010 --> 00:23:11,180
then so yeah thank you very much

