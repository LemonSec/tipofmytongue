1
00:00:00,000 --> 00:00:04,230
alright thanks for stopping in to my

2
00:00:01,730 --> 00:00:06,420
talk here at the North Pole at Kringle

3
00:00:04,230 --> 00:00:08,160
con Thank You Santa for inviting me up

4
00:00:06,420 --> 00:00:11,010
here it's really exciting to be here but

5
00:00:08,160 --> 00:00:12,719
man is it cold I didn't expect it to be

6
00:00:11,010 --> 00:00:16,170
quite this cold I was in San Francisco

7
00:00:12,719 --> 00:00:18,600
last week and man I would have brought

8
00:00:16,170 --> 00:00:20,970
the thicker gloves makes it hard to type

9
00:00:18,600 --> 00:00:22,350
but yeah that's right Oh we'll keep

10
00:00:20,970 --> 00:00:24,509
rolling here

11
00:00:22,350 --> 00:00:26,550
appreciate everybody listening on hash

12
00:00:24,510 --> 00:00:28,230
cat the goal this talk is to kind of

13
00:00:26,550 --> 00:00:32,130
give you an introduction to hash cab

14
00:00:28,230 --> 00:00:34,680
what it is how it works and a little bit

15
00:00:32,130 --> 00:00:36,390
of overview of the history of kind of

16
00:00:34,680 --> 00:00:37,769
where it came from when it kind of went

17
00:00:36,390 --> 00:00:40,559
open-source we'll talk about the

18
00:00:37,770 --> 00:00:42,270
differences between CPUs and GPUs and

19
00:00:40,559 --> 00:00:45,390
how hash cat takes advantage of those

20
00:00:42,270 --> 00:00:47,250
and then I will take a look at the

21
00:00:45,390 --> 00:00:49,649
different attack modes that haschke has

22
00:00:47,250 --> 00:00:51,870
we'll talk about each one I'll do a very

23
00:00:49,649 --> 00:00:55,590
brief demonstration of each attack mode

24
00:00:51,870 --> 00:00:58,640
and at the very end here just you can

25
00:00:55,590 --> 00:01:01,050
kind of see how hash cat goes about

26
00:00:58,640 --> 00:01:03,629
processing at the input you give it and

27
00:01:01,050 --> 00:01:08,908
guessing passwords to crack password

28
00:01:03,629 --> 00:01:10,710
hashes so hash cat has been around for

29
00:01:08,909 --> 00:01:13,920
quite a while but it was closed sourced

30
00:01:10,710 --> 00:01:16,679
until about 2015 and at that point it

31
00:01:13,920 --> 00:01:20,670
went open-source and released by its

32
00:01:16,680 --> 00:01:24,299
lead developer Adam um prior to hash cat

33
00:01:20,670 --> 00:01:25,530
version 3 a hash cat was had three

34
00:01:24,299 --> 00:01:27,840
different binaries that had actually

35
00:01:25,530 --> 00:01:30,240
used to do the password cracking the

36
00:01:27,840 --> 00:01:32,100
first one was just hash cat and I was

37
00:01:30,240 --> 00:01:34,439
used to do cpu-based password cracking

38
00:01:32,100 --> 00:01:37,140
and then the next two were ocl hash cat

39
00:01:34,439 --> 00:01:40,470
and CUDA hash cat now those were based

40
00:01:37,140 --> 00:01:42,479
on the different types of graphics cards

41
00:01:40,470 --> 00:01:45,539
that the tool could work with and the

42
00:01:42,479 --> 00:01:48,590
driver sets and all that required but

43
00:01:45,540 --> 00:01:50,729
when we got the version 3.0 and later

44
00:01:48,590 --> 00:01:52,860
adamant and the hash cat team can bind

45
00:01:50,729 --> 00:01:55,560
all that into a single binary so that

46
00:01:52,860 --> 00:01:58,289
you know it would only require a single

47
00:01:55,560 --> 00:02:00,240
binary to run all the different password

48
00:01:58,290 --> 00:02:04,110
cracking capabilities whether it's CPU

49
00:02:00,240 --> 00:02:06,419
based or GPU based the latest version is

50
00:02:04,110 --> 00:02:10,440
hash cat 5.1 which was released on

51
00:02:06,420 --> 00:02:11,940
December 2nd just a few days ago and so

52
00:02:10,440 --> 00:02:13,620
that's a nice little Christmas present

53
00:02:11,940 --> 00:02:15,540
from the hash cat

54
00:02:13,620 --> 00:02:17,790
you can find out more about the tool

55
00:02:15,540 --> 00:02:20,340
self download the latest version read

56
00:02:17,790 --> 00:02:26,970
the Wikipedia or read the the tools wiki

57
00:02:20,340 --> 00:02:29,069
etc out of hash cat dotnet alright so as

58
00:02:26,970 --> 00:02:31,230
we get into looking at hash cat it'll do

59
00:02:29,069 --> 00:02:34,220
two types of cracking mentioned a CPU

60
00:02:31,230 --> 00:02:37,319
base cracking and GPU based cracking and

61
00:02:34,220 --> 00:02:40,440
to quickly establish the difference

62
00:02:37,319 --> 00:02:41,760
between a CPU and a GPU I just want you

63
00:02:40,440 --> 00:02:43,950
know kind of define each one and explain

64
00:02:41,760 --> 00:02:46,048
what they're good for so a CPU obviously

65
00:02:43,950 --> 00:02:48,540
is your central processing unit it is a

66
00:02:46,049 --> 00:02:50,430
general-purpose processor does the vast

67
00:02:48,540 --> 00:02:52,739
majority of processing on your computer

68
00:02:50,430 --> 00:02:54,989
on a daily basis works great for

69
00:02:52,739 --> 00:02:57,120
password cracking but the speed itself

70
00:02:54,989 --> 00:02:59,400
is depends on the number of cores that

71
00:02:57,120 --> 00:03:02,970
has available and that the hashing

72
00:02:59,400 --> 00:03:05,250
algorithm that's in use because a CPU

73
00:03:02,970 --> 00:03:08,489
tends to have less cores it maybe

74
00:03:05,250 --> 00:03:11,040
doesn't process as much as a or as fast

75
00:03:08,489 --> 00:03:14,579
as a GPU does when it comes to password

76
00:03:11,040 --> 00:03:16,379
cracking now with GPUs the graphics

77
00:03:14,579 --> 00:03:19,470
processing it the design for high-end

78
00:03:16,379 --> 00:03:21,179
graphics display and with high graphics

79
00:03:19,470 --> 00:03:23,250
display there's a lot of math that has

80
00:03:21,180 --> 00:03:25,590
to be done the exact same time I mean

81
00:03:23,250 --> 00:03:27,239
it's done in parallel and it's doing all

82
00:03:25,590 --> 00:03:30,060
that math as it tries to update the

83
00:03:27,239 --> 00:03:31,639
screen so that I you know it's a fancy

84
00:03:30,060 --> 00:03:33,959
graphics that you're doing either in

85
00:03:31,639 --> 00:03:35,760
video games or maybe designing something

86
00:03:33,959 --> 00:03:40,010
it's like AutoCAD or some other type of

87
00:03:35,760 --> 00:03:43,138
CAD utility is its peak it's it's a

88
00:03:40,010 --> 00:03:48,120
maximum level of granularity and

89
00:03:43,139 --> 00:03:49,680
sophistication so there ends up being a

90
00:03:48,120 --> 00:03:51,329
little bit of confusion sometimes when

91
00:03:49,680 --> 00:03:54,870
people try to talk about which one's

92
00:03:51,329 --> 00:03:56,669
faster and it really looks a little bit

93
00:03:54,870 --> 00:03:58,650
more like this so if you're going to

94
00:03:56,669 --> 00:04:00,510
compare it processor to processor the

95
00:03:58,650 --> 00:04:03,299
corridor core and in terms of the

96
00:04:00,510 --> 00:04:07,858
processing power your CPU is much much

97
00:04:03,299 --> 00:04:10,319
faster than than a GPU each GPU core

98
00:04:07,859 --> 00:04:13,859
tends to be a little bit slower however

99
00:04:10,319 --> 00:04:17,310
if we measure what the the processing

100
00:04:13,859 --> 00:04:20,579
units do and and how they work we would

101
00:04:17,310 --> 00:04:21,870
say that it's more like the purpose of a

102
00:04:20,579 --> 00:04:24,060
car because we've got two cars on the

103
00:04:21,870 --> 00:04:27,240
screen here we've got purple cars to get

104
00:04:24,060 --> 00:04:30,030
a passenger from point A to point B well

105
00:04:27,240 --> 00:04:31,860
the the Corvette here on the left is

106
00:04:30,030 --> 00:04:33,840
gonna go a lot faster and it's going to

107
00:04:31,860 --> 00:04:37,410
get from point A to point B a lot faster

108
00:04:33,840 --> 00:04:39,690
right and it's going to take that a

109
00:04:37,410 --> 00:04:44,430
passenger and whatever that distance is

110
00:04:39,690 --> 00:04:45,780
now if you have but a nice little smart

111
00:04:44,430 --> 00:04:47,580
car over here on the right going the

112
00:04:45,780 --> 00:04:48,630
same path it may not move as fast but

113
00:04:47,580 --> 00:04:52,229
still going to get from point A to point

114
00:04:48,630 --> 00:04:54,840
B but where we get the additional speed

115
00:04:52,229 --> 00:04:58,139
with the seat with the GPU over the CPU

116
00:04:54,840 --> 00:05:00,599
is actually the number of cores okay so

117
00:04:58,139 --> 00:05:02,340
if we're comparing how many people we

118
00:05:00,599 --> 00:05:05,460
can move and some of the race to get

119
00:05:02,340 --> 00:05:09,030
people from point A to point B it would

120
00:05:05,460 --> 00:05:12,388
be a bit more like this it's more like

121
00:05:09,030 --> 00:05:14,099
the CPU you get one car moving one

122
00:05:12,389 --> 00:05:18,210
person at a time back and forth it may

123
00:05:14,099 --> 00:05:20,310
move that individual person faster but

124
00:05:18,210 --> 00:05:23,400
it's competing against an army of smart

125
00:05:20,310 --> 00:05:25,919
cars and with you know in multiples of

126
00:05:23,400 --> 00:05:27,150
how many cores there so it's each one of

127
00:05:25,919 --> 00:05:28,948
those cars carrying individual

128
00:05:27,150 --> 00:05:31,289
passengers and so a lot more passengers

129
00:05:28,949 --> 00:05:33,300
are getting moved at the same time so

130
00:05:31,289 --> 00:05:35,340
when you compare a CPU to the GPU you

131
00:05:33,300 --> 00:05:37,259
can end up with speeds of up to maybe 50

132
00:05:35,340 --> 00:05:40,229
times faster than what you'll get in

133
00:05:37,259 --> 00:05:42,330
terms of password cracking between a CPU

134
00:05:40,229 --> 00:05:46,080
and a GPU on the same hashing algorithm

135
00:05:42,330 --> 00:05:48,810
right so you know interesting note that

136
00:05:46,080 --> 00:05:51,539
is that GPUs are actually slower on the

137
00:05:48,810 --> 00:05:53,190
individual cores are slower however with

138
00:05:51,539 --> 00:05:56,430
the thousands of cores that make up a

139
00:05:53,190 --> 00:06:00,330
GPU you're actually moving at a really

140
00:05:56,430 --> 00:06:02,190
good rate so to fully utilize that GPU

141
00:06:00,330 --> 00:06:06,359
all that work gets parallelized across

142
00:06:02,190 --> 00:06:08,280
all the cores okay it hash cat as it

143
00:06:06,360 --> 00:06:10,259
does this takes work that is going to

144
00:06:08,280 --> 00:06:12,960
use to do its password cracking and

145
00:06:10,259 --> 00:06:15,270
guessing and it sends those to the cheek

146
00:06:12,960 --> 00:06:18,359
few and then expands those words out

147
00:06:15,270 --> 00:06:20,758
with rules once they're on the GPU it

148
00:06:18,360 --> 00:06:22,770
kind of breaks into a bay a sloop and a

149
00:06:20,759 --> 00:06:24,150
mod loop and so the base loop is kind of

150
00:06:22,770 --> 00:06:26,310
handled by the central processing unit

151
00:06:24,150 --> 00:06:28,138
helps create that base list of workers

152
00:06:26,310 --> 00:06:30,240
and it sends those on over to the GPU

153
00:06:28,139 --> 00:06:33,570
where the mod loop which is run on the

154
00:06:30,240 --> 00:06:35,639
GPU expands out the words and that's

155
00:06:33,570 --> 00:06:38,169
where we get that additional speed with

156
00:06:35,639 --> 00:06:41,620
all the parallelization okay

157
00:06:38,169 --> 00:06:44,919
now okay so we can do all that now hash

158
00:06:41,620 --> 00:06:47,379
cat when it's running for on CPUs or

159
00:06:44,919 --> 00:06:49,389
GPUs it will do either one of those just

160
00:06:47,379 --> 00:06:51,789
fantastic right and it'll do for

161
00:06:49,389 --> 00:06:54,849
different attack types well well there's

162
00:06:51,789 --> 00:06:56,740
really five but you know the hybrid at

163
00:06:54,849 --> 00:06:58,719
the bottom it just switches which side

164
00:06:56,740 --> 00:06:59,919
the word list and the master on so I'm

165
00:06:58,719 --> 00:07:03,610
going to lump those together for this

166
00:06:59,919 --> 00:07:04,568
slide so the first one is the dictionary

167
00:07:03,610 --> 00:07:07,389
attack this is where it just goes

168
00:07:04,569 --> 00:07:11,080
straight through a dictionary and goes

169
00:07:07,389 --> 00:07:13,479
word for word it calculates the password

170
00:07:11,080 --> 00:07:15,878
hash for each and compares against the

171
00:07:13,479 --> 00:07:17,469
hash that you're trying to crack in

172
00:07:15,879 --> 00:07:19,300
Combinator mode it goes through and

173
00:07:17,469 --> 00:07:22,509
concatenates words from multiple word

174
00:07:19,300 --> 00:07:25,779
lists and then so take you know maybe

175
00:07:22,509 --> 00:07:27,430
word list one word list to combine the

176
00:07:25,779 --> 00:07:29,560
first word from wordless one with all

177
00:07:27,430 --> 00:07:31,810
the words from word list to go down to

178
00:07:29,560 --> 00:07:34,180
where the number two on from word list

179
00:07:31,810 --> 00:07:36,669
one and combine with all the words from

180
00:07:34,180 --> 00:07:39,009
word list you it goes you know word by

181
00:07:36,669 --> 00:07:41,049
word combining with everything between

182
00:07:39,009 --> 00:07:42,909
the the left and the right word list at

183
00:07:41,050 --> 00:07:44,589
that point it categorizes as left and

184
00:07:42,909 --> 00:07:47,289
right based on where they show up on the

185
00:07:44,589 --> 00:07:48,520
command line and then lack exception is

186
00:07:47,289 --> 00:07:50,438
the brute force and it goes through with

187
00:07:48,520 --> 00:07:54,339
a given character set and per position

188
00:07:50,439 --> 00:07:55,509
tries all potential characters for those

189
00:07:54,339 --> 00:07:57,639
character sets and positions and

190
00:07:55,509 --> 00:07:59,560
typically what you'll see in the force

191
00:07:57,639 --> 00:08:01,839
knows it goes through and and tries a

192
00:07:59,560 --> 00:08:03,610
variety of different masks and it tries

193
00:08:01,839 --> 00:08:07,240
to master the most common to what

194
00:08:03,610 --> 00:08:11,319
individuals tend to see were used as

195
00:08:07,240 --> 00:08:13,060
their passwords so very common masks

196
00:08:11,319 --> 00:08:16,029
that you'll see is maybe a capital

197
00:08:13,060 --> 00:08:19,270
letter and then all lowercase letters

198
00:08:16,029 --> 00:08:22,419
and numbers and then out to maybe eight

199
00:08:19,270 --> 00:08:24,219
nine or ten characters and then may the

200
00:08:22,419 --> 00:08:26,830
the last couple characters may be either

201
00:08:24,219 --> 00:08:28,750
a number or a special character and so

202
00:08:26,830 --> 00:08:32,380
then it tries all the combinations where

203
00:08:28,750 --> 00:08:33,729
capital letter all the lower case of

204
00:08:32,380 --> 00:08:35,948
everything and then the numbers and

205
00:08:33,729 --> 00:08:37,599
special characters is there and very

206
00:08:35,948 --> 00:08:39,848
easy to set up and I'll do a quick demo

207
00:08:37,599 --> 00:08:42,310
with them just second here and then the

208
00:08:39,849 --> 00:08:43,959
last option is the hybrid attack and so

209
00:08:42,309 --> 00:08:46,209
what the hybrid attack actually does is

210
00:08:43,958 --> 00:08:49,420
it kind of does what the Combinator

211
00:08:46,209 --> 00:08:50,768
attack did before and it kind of

212
00:08:49,420 --> 00:08:51,579
combines what I just talked about with

213
00:08:50,769 --> 00:08:54,360
the masks

214
00:08:51,580 --> 00:08:58,120
from the brute force and it lets you

215
00:08:54,360 --> 00:09:01,149
define those on the right and left side

216
00:08:58,120 --> 00:09:02,740
so with the hybrid where you end up with

217
00:09:01,149 --> 00:09:06,550
is you'll start with that base list

218
00:09:02,740 --> 00:09:09,339
right and then from the base list you

219
00:09:06,550 --> 00:09:11,560
can add masks to the other side or to

220
00:09:09,339 --> 00:09:13,240
use as that the other side that

221
00:09:11,560 --> 00:09:15,459
dictionary allows you to brute force and

222
00:09:13,240 --> 00:09:18,040
let's say all of the character there's

223
00:09:15,459 --> 00:09:21,459
up to three in length all right it'll

224
00:09:18,040 --> 00:09:22,839
spit those out so I'm gonna demo that

225
00:09:21,459 --> 00:09:25,630
stuff real quick for you just so you can

226
00:09:22,839 --> 00:09:28,779
kind of get an idea of what this looks

227
00:09:25,630 --> 00:09:31,660
like this is on the slingshot image so

228
00:09:28,779 --> 00:09:33,160
if you've taken by six year or would be

229
00:09:31,660 --> 00:09:35,589
interesting taking by six we've got a

230
00:09:33,160 --> 00:09:39,579
hash cat lab where we go deep into that

231
00:09:35,589 --> 00:09:43,089
it sands but the we're gonna demo real

232
00:09:39,579 --> 00:09:45,640
quick hash cat 4.1 lotto and I'm gonna

233
00:09:43,089 --> 00:09:57,130
do I have three different word lists

234
00:09:45,640 --> 00:10:00,339
here okay and some point to get a quick

235
00:09:57,130 --> 00:10:01,750
idea what's their three different word

236
00:10:00,339 --> 00:10:03,520
lists there's only two words in each one

237
00:10:01,750 --> 00:10:08,440
just to keep this simple so I've got dog

238
00:10:03,520 --> 00:10:11,890
cat apple banana car and truck okay so

239
00:10:08,440 --> 00:10:18,130
if we take a look at what we do with

240
00:10:11,890 --> 00:10:19,630
hash cat and you okay I'm gonna play it

241
00:10:18,130 --> 00:10:23,200
through the less just some kind of see

242
00:10:19,630 --> 00:10:25,029
where we are we're starting here so this

243
00:10:23,200 --> 00:10:27,850
is the help file and we can we're gonna

244
00:10:25,029 --> 00:10:29,709
give it an attack mode M gives us the

245
00:10:27,850 --> 00:10:32,800
hash that mean that the type of hash

246
00:10:29,709 --> 00:10:34,209
that we're going to break and then

247
00:10:32,800 --> 00:10:37,660
there's a lot of other options in here

248
00:10:34,209 --> 00:10:43,209
to fine tune hash cap but to do the very

249
00:10:37,660 --> 00:10:48,029
baby six get to this is the different

250
00:10:43,209 --> 00:10:48,029
hash modes each hash it has a number

251
00:10:49,110 --> 00:10:56,430
passed all the hash moves here and show

252
00:10:52,959 --> 00:10:59,589
you the attack boats and their numbers

253
00:10:56,430 --> 00:11:02,140
all right so here's our attack notes so

254
00:10:59,589 --> 00:11:04,360
we have the straight which straight is

255
00:11:02,140 --> 00:11:05,390
also the same as a dictionary attack as

256
00:11:04,360 --> 00:11:07,310
I meant

257
00:11:05,390 --> 00:11:10,750
one is a combination meaning it's going

258
00:11:07,310 --> 00:11:13,550
to take the combination of two different

259
00:11:10,750 --> 00:11:15,770
two different word lists

260
00:11:13,550 --> 00:11:18,939
brute force will actually do a brute

261
00:11:15,770 --> 00:11:21,350
force based on a specific mask and then

262
00:11:18,940 --> 00:11:22,700
six and seven are the hybrid attacks

263
00:11:21,350 --> 00:11:26,510
that I was talking about and the only

264
00:11:22,700 --> 00:11:34,130
difference there is which side the masks

265
00:11:26,510 --> 00:11:38,630
end up showing up okay so real quick if

266
00:11:34,130 --> 00:11:43,100
we just do - cat now I'm gonna do

267
00:11:38,630 --> 00:11:46,820
something called STD out this is just so

268
00:11:43,100 --> 00:11:48,410
you can see what what words - cat

269
00:11:46,820 --> 00:11:50,870
generates as it goes through with these

270
00:11:48,410 --> 00:11:57,040
different types of attacks so for

271
00:11:50,870 --> 00:11:57,040
instance if I do a standard out and I do

272
00:11:57,070 --> 00:12:09,680
a attack mode of zero and then I'll give

273
00:12:03,620 --> 00:12:11,270
it word list one okay let's see it

274
00:12:09,680 --> 00:12:13,370
basically goes through well I can ignore

275
00:12:11,270 --> 00:12:16,699
that error but it tries each word

276
00:12:13,370 --> 00:12:20,870
exactly as it shows up in the password

277
00:12:16,700 --> 00:12:26,300
file okay now if I do the same thing but

278
00:12:20,870 --> 00:12:29,860
I switched to the Combinator since the

279
00:12:26,300 --> 00:12:34,160
Combinator attack and I can now give it

280
00:12:29,860 --> 00:12:36,650
the second word list and you can see it

281
00:12:34,160 --> 00:12:38,569
went word by word in the first word list

282
00:12:36,650 --> 00:12:40,699
and appended the words from the second

283
00:12:38,570 --> 00:12:43,570
word list to the end of it so we have

284
00:12:40,700 --> 00:12:47,390
dog Apple dog banana cat Apple happening

285
00:12:43,570 --> 00:12:51,470
okay if we do the exact same thing here

286
00:12:47,390 --> 00:12:56,420
we're gonna take a look we can mix it up

287
00:12:51,470 --> 00:13:01,970
completely by doing switching which side

288
00:12:56,420 --> 00:13:03,620
these guys love one so this one and you

289
00:13:01,970 --> 00:13:05,420
can see everything is then completely

290
00:13:03,620 --> 00:13:06,710
inverted right so we start with the

291
00:13:05,420 --> 00:13:10,599
fruit fruits and then we have the

292
00:13:06,710 --> 00:13:15,790
animals after that okay that's cool

293
00:13:10,600 --> 00:13:17,230
now we'll go back up to the the straight

294
00:13:15,790 --> 00:13:20,099
attack so if I'm doing a straight attack

295
00:13:17,230 --> 00:13:24,700
with a dictionary I can also apply rules

296
00:13:20,100 --> 00:13:27,310
in hash Kappa okay and there's a few

297
00:13:24,700 --> 00:13:35,350
different rules that it will allow you

298
00:13:27,310 --> 00:13:37,270
to do all right so this is the bass best

299
00:13:35,350 --> 00:13:39,190
64 it's one of the most basic rule sets

300
00:13:37,270 --> 00:13:40,930
available in hash cat but what you'll

301
00:13:39,190 --> 00:13:42,970
see is it's going to take that word list

302
00:13:40,930 --> 00:13:44,530
one which is dog cat and it's going to

303
00:13:42,970 --> 00:13:48,400
apply a whole bunch of different rules

304
00:13:44,530 --> 00:13:51,339
to that word list and what you'll see is

305
00:13:48,400 --> 00:13:53,410
variations of dog and cat pop out with

306
00:13:51,340 --> 00:13:56,680
all sorts of substitutions and things

307
00:13:53,410 --> 00:14:02,439
appended to the beginning the end etc so

308
00:13:56,680 --> 00:14:04,030
all right so we're very quickly there if

309
00:14:02,440 --> 00:14:06,100
I go back through here you can see it's

310
00:14:04,030 --> 00:14:08,170
appended numbers it's doubled the word

311
00:14:06,100 --> 00:14:11,650
right it doubled the last letter and

312
00:14:08,170 --> 00:14:16,000
then doubled the word right tripled the

313
00:14:11,650 --> 00:14:19,360
last letter of the word I substituted an

314
00:14:16,000 --> 00:14:21,520
L for the D and C it just us all sorts

315
00:14:19,360 --> 00:14:23,940
of mangling to try different things now

316
00:14:21,520 --> 00:14:29,760
if I want to know okay

317
00:14:23,940 --> 00:14:33,420
roughly then your standard error to

318
00:14:29,760 --> 00:14:38,590
Devon also it doesn't get counted and

319
00:14:33,420 --> 00:14:40,770
then like 3 to WC - well you see that my

320
00:14:38,590 --> 00:14:47,620
two words were then turned into about

321
00:14:40,770 --> 00:14:52,540
154 words ok cool now if we come back up

322
00:14:47,620 --> 00:14:54,160
here go back to here we're gonna do a

323
00:14:52,540 --> 00:14:57,610
brute force now brute force it's gonna

324
00:14:54,160 --> 00:15:00,240
be a little bit different here I'm not

325
00:14:57,610 --> 00:15:05,490
gonna let this run for very long but

326
00:15:00,240 --> 00:15:08,020
it's gonna run and stuff out but it'll

327
00:15:05,490 --> 00:15:11,410
begin iterating through and you'll

328
00:15:08,020 --> 00:15:14,640
you'll see the changes as it goes maybe

329
00:15:11,410 --> 00:15:14,640
it won't let me do that on standard

330
00:15:22,829 --> 00:15:26,859
there we go

331
00:15:24,249 --> 00:15:28,480
needed a mask okay so that the three

332
00:15:26,860 --> 00:15:34,809
that I gave it just said try every

333
00:15:28,480 --> 00:15:37,480
single type of character and do three of

334
00:15:34,809 --> 00:15:46,019
them okay and so I could do the same

335
00:15:37,480 --> 00:15:46,019
thing here by doing lower lower

336
00:15:46,379 --> 00:15:51,459
nice way of a it's going to lower a

337
00:15:49,480 --> 00:15:55,600
lowercase a lowercase and then a digit

338
00:15:51,459 --> 00:15:59,459
I'm just going to just - just so you can

339
00:15:55,600 --> 00:16:01,870
see the output without it being too much

340
00:15:59,459 --> 00:16:03,939
okay so you can see it went straight

341
00:16:01,870 --> 00:16:05,410
through the alphabet and then it's went

342
00:16:03,939 --> 00:16:09,189
number by number through through the

343
00:16:05,410 --> 00:16:11,819
alphabet as well I spits all that house

344
00:16:09,189 --> 00:16:13,269
you can't force character by character

345
00:16:11,819 --> 00:16:16,800
okay cool

346
00:16:13,269 --> 00:16:19,350
so the last piece here is the

347
00:16:16,800 --> 00:16:24,430
combination so if I give it word list

348
00:16:19,350 --> 00:16:26,769
one and I give it a digit digit so what

349
00:16:24,430 --> 00:16:28,420
this is gonna do is take wordless one

350
00:16:26,769 --> 00:16:32,050
which is dog cat and it's going to

351
00:16:28,420 --> 00:16:36,628
append every combination of zero through

352
00:16:32,050 --> 00:16:39,040
nine to the right side of the word list

353
00:16:36,629 --> 00:16:40,750
let's go thank you for a second and spit

354
00:16:39,040 --> 00:16:44,980
that out and you can see that it goes

355
00:16:40,750 --> 00:16:49,839
through word by word with my number you

356
00:16:44,980 --> 00:16:53,829
can see that the the order isn't quite

357
00:16:49,839 --> 00:16:56,079
what you would expect but that still

358
00:16:53,829 --> 00:16:57,699
goes through every single one and then

359
00:16:56,079 --> 00:17:00,939
you can do other interesting things here

360
00:16:57,699 --> 00:17:04,178
too so for instance we could add a J

361
00:17:00,939 --> 00:17:07,839
just going to apply a rule and say let's

362
00:17:04,179 --> 00:17:11,110
say we want to append a DAC so that it's

363
00:17:07,839 --> 00:17:13,299
the word - and then let's do one number

364
00:17:11,109 --> 00:17:15,688
so that it's nice and easy to see the

365
00:17:13,299 --> 00:17:15,689
output

366
00:17:23,109 --> 00:17:27,439
so that's the basics of kind of how hash

367
00:17:25,849 --> 00:17:29,149
cat works you can then use this now this

368
00:17:27,440 --> 00:17:31,640
is printing all that out to the screen

369
00:17:29,150 --> 00:17:34,180
but the only thing that I would need to

370
00:17:31,640 --> 00:17:37,780
do to apply this to an actual password

371
00:17:34,180 --> 00:17:43,360
would be to add something like dashing

372
00:17:37,780 --> 00:17:47,060
1000 which is yeah NT alone password and

373
00:17:43,360 --> 00:17:49,040
then give it something like ashes dot

374
00:17:47,060 --> 00:17:51,649
txt which would have all the password

375
00:17:49,040 --> 00:17:54,710
hashes that I was trying to crack when I

376
00:17:51,650 --> 00:17:56,360
hit go and it would go through and and

377
00:17:54,710 --> 00:17:57,590
try you know exactly what you see on the

378
00:17:56,360 --> 00:18:00,350
screen at the moment against all those

379
00:17:57,590 --> 00:18:01,520
password hashes right well I really

380
00:18:00,350 --> 00:18:03,379
appreciate your time hopefully you all

381
00:18:01,520 --> 00:18:05,660
have a fantastic time here at crank will

382
00:18:03,380 --> 00:18:08,480
come and enjoy the rest of the

383
00:18:05,660 --> 00:18:10,460
conference if you have any questions for

384
00:18:08,480 --> 00:18:13,160
me please don't hesitate to reach out

385
00:18:10,460 --> 00:18:15,590
this is my Twitter account and and my

386
00:18:13,160 --> 00:18:19,930
email address Merry Christmas Happy

387
00:18:15,590 --> 00:18:19,929
Holidays and about Happy New Year

