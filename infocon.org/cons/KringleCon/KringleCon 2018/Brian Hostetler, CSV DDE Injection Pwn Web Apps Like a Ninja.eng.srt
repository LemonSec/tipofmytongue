1
00:00:00,690 --> 00:00:04,400
[Music]

2
00:00:06,290 --> 00:00:11,010
hello after chrome Khan in this talk

3
00:00:09,150 --> 00:00:12,660
we're discussing our CSV injections and

4
00:00:11,010 --> 00:00:15,780
able the ability of pone web apps like a

5
00:00:12,660 --> 00:00:17,460
ninja I'm here sensei Brian hustler can

6
00:00:15,780 --> 00:00:19,230
follow me on twitter at hustler Brian 3

7
00:00:17,460 --> 00:00:20,640
I'm currently working with a talented

8
00:00:19,230 --> 00:00:23,490
counter hack team under the airforce

9
00:00:20,640 --> 00:00:24,779
education with a street program as its

10
00:00:23,490 --> 00:00:26,669
claimed that content this presentation

11
00:00:24,779 --> 00:00:28,980
is not endorsed or representative of the

12
00:00:26,670 --> 00:00:30,300
airforce I'll click overview of what

13
00:00:28,980 --> 00:00:32,460
we're covering in this presentation

14
00:00:30,300 --> 00:00:34,530
we're going to explain what a CSP

15
00:00:32,460 --> 00:00:36,719
injection is and how this vulnerability

16
00:00:34,530 --> 00:00:38,100
continues to be exploited we'll provide

17
00:00:36,719 --> 00:00:40,170
a demonstration on how to read teams can

18
00:00:38,100 --> 00:00:41,280
craft payloads then we'll provide a

19
00:00:40,170 --> 00:00:43,890
quick frequently asked questions

20
00:00:41,280 --> 00:00:45,270
overview finally we'll provide some ways

21
00:00:43,890 --> 00:00:48,329
blue teams can mitigate against these

22
00:00:45,270 --> 00:00:50,090
attacks so what exactly is a CSP

23
00:00:48,329 --> 00:00:52,649
injection why should you care

24
00:00:50,090 --> 00:00:54,420
according wasp a CSP injection occurs

25
00:00:52,649 --> 00:00:58,140
when websites allow untrusted input

26
00:00:54,420 --> 00:00:59,730
inside CSV files this is common among

27
00:00:58,140 --> 00:01:02,030
websites with input forms exploitable

28
00:00:59,730 --> 00:01:04,199
CSV that allow command strings

29
00:01:02,030 --> 00:01:07,049
spreadsheet software's is Excel or

30
00:01:04,199 --> 00:01:08,429
LibreOffice interpret as a formula it

31
00:01:07,049 --> 00:01:10,409
provides a vector for remote code

32
00:01:08,430 --> 00:01:13,320
execution or remote exfiltration of

33
00:01:10,409 --> 00:01:14,760
sensitive data is a spearfishing of ants

34
00:01:13,320 --> 00:01:16,559
persistent threat favorite among high

35
00:01:14,760 --> 00:01:20,250
profile attacks by sponsored groups and

36
00:01:16,560 --> 00:01:22,200
red teams alike CSP formal injections

37
00:01:20,250 --> 00:01:24,360
work thanks to dynamic data exchange

38
00:01:22,200 --> 00:01:26,189
protocol that enables interaction from

39
00:01:24,360 --> 00:01:28,470
spreadsheet software to perform shell

40
00:01:26,189 --> 00:01:29,789
execution there are numerous warnings

41
00:01:28,470 --> 00:01:32,158
that are often ignored by users clicking

42
00:01:29,790 --> 00:01:36,360
ok which provide access to leaked

43
00:01:32,159 --> 00:01:39,329
contents of spreadsheets over over

44
00:01:36,360 --> 00:01:42,090
listening port there are countless ways

45
00:01:39,329 --> 00:01:43,770
to run arbitrary commands 32e some

46
00:01:42,090 --> 00:01:45,750
simplistic while others highly

47
00:01:43,770 --> 00:01:48,539
sophisticated beyond the scope of this

48
00:01:45,750 --> 00:01:50,040
presentation in the first example we

49
00:01:48,540 --> 00:01:51,060
have a command string that calls back to

50
00:01:50,040 --> 00:01:53,670
malicious file on our server

51
00:01:51,060 --> 00:01:55,649
the second example is a basic hyperlink

52
00:01:53,670 --> 00:01:58,140
to leek cell contents over our listening

53
00:01:55,649 --> 00:02:00,119
port there are plenty of open-source

54
00:01:58,140 --> 00:02:01,680
tools available on github to facilitate

55
00:02:00,119 --> 00:02:04,110
the crafting of CSV injections to

56
00:02:01,680 --> 00:02:06,420
include Metasploit unicorn and office D

57
00:02:04,110 --> 00:02:07,890
de payload of course he invents your own

58
00:02:06,420 --> 00:02:11,099
tailor generating script just make sure

59
00:02:07,890 --> 00:02:12,900
to contribute to our community next I'll

60
00:02:11,099 --> 00:02:13,679
provide a demonstration with a hyperlink

61
00:02:12,900 --> 00:02:15,780
to our local

62
00:02:13,680 --> 00:02:19,079
over listening board and show how easy

63
00:02:15,780 --> 00:02:25,739
it is to leak CSV contents through DD e

64
00:02:19,079 --> 00:02:27,239
to execution so I have a generic port

65
00:02:25,739 --> 00:02:29,579
listener here you can use whatever you

66
00:02:27,239 --> 00:02:32,849
want command command prompts or in this

67
00:02:29,579 --> 00:02:34,109
instance is a GUI but report 5500 we're

68
00:02:32,849 --> 00:02:39,869
gonna cut and start listening on that

69
00:02:34,109 --> 00:02:41,939
port and we're gonna run a command to

70
00:02:39,870 --> 00:02:45,959
validate that we are in fact listening

71
00:02:41,939 --> 00:02:48,500
on that port which we are and for our

72
00:02:45,959 --> 00:02:53,010
payload we're gonna craft a simple

73
00:02:48,500 --> 00:02:55,530
hyperlink for our users to click that's

74
00:02:53,010 --> 00:02:59,638
gonna go back to our server in this case

75
00:02:55,530 --> 00:03:04,620
localhost but report 5500 and leave the

76
00:02:59,639 --> 00:03:18,150
contents of cells a2 a3 a4 a5 simulating

77
00:03:04,620 --> 00:03:19,229
an information disclosure leak so as you

78
00:03:18,150 --> 00:03:22,349
can see when the user clicked the link

79
00:03:19,229 --> 00:03:30,720
all those contents were leaked over port

80
00:03:22,349 --> 00:03:32,909
5500 now the second example is a simple

81
00:03:30,720 --> 00:03:38,599
command string with a callback back to

82
00:03:32,909 --> 00:03:41,430
our server to run a remote access Trojan

83
00:03:38,599 --> 00:03:43,379
and as you see we get some some generic

84
00:03:41,430 --> 00:03:44,849
you know warnings for Microsoft Excel

85
00:03:43,379 --> 00:03:46,319
for saying hey looked and are you sure

86
00:03:44,849 --> 00:03:48,238
you want to access these excellent

87
00:03:46,319 --> 00:03:50,369
external sources you know most people

88
00:03:48,239 --> 00:03:53,220
click OK they don't care about the

89
00:03:50,370 --> 00:03:55,169
attention we get another prompt that

90
00:03:53,220 --> 00:03:58,259
says hey are your sure to accesses

91
00:03:55,169 --> 00:03:59,489
remote data you can obfuscate this this

92
00:03:58,259 --> 00:04:02,009
warning message to make it look more

93
00:03:59,489 --> 00:04:04,739
legitimate and most people just click OK

94
00:04:02,009 --> 00:04:06,988
anyway and we've successfully downloaded

95
00:04:04,739 --> 00:04:09,319
and ran our remote access trojan from

96
00:04:06,989 --> 00:04:09,319
our server

97
00:04:16,039 --> 00:04:19,620
so some freaking last questions you know

98
00:04:18,209 --> 00:04:21,120
what if the client on the server ports

99
00:04:19,620 --> 00:04:23,630
are locked down they won't allow remote

100
00:04:21,120 --> 00:04:26,699
code execution or callbacks to my server

101
00:04:23,630 --> 00:04:29,400
you can there's workarounds one of them

102
00:04:26,699 --> 00:04:31,229
being just simply use a command string

103
00:04:29,400 --> 00:04:33,270
to move those files

104
00:04:31,229 --> 00:04:37,199
you know Linux or Windows depend on the

105
00:04:33,270 --> 00:04:40,080
OS to a location that is browsable

106
00:04:37,199 --> 00:04:43,259
through a public directory that you can

107
00:04:40,080 --> 00:04:44,310
take you can actually access it once the

108
00:04:43,259 --> 00:04:46,560
commands and the payload look too

109
00:04:44,310 --> 00:04:48,750
obvious to a user trained eye you can

110
00:04:46,560 --> 00:04:50,610
obfuscate the commands which happens a

111
00:04:48,750 --> 00:04:52,500
lot just to just make it look more

112
00:04:50,610 --> 00:04:54,840
legitimate so when you get those

113
00:04:52,500 --> 00:04:56,630
warnings people say oh yes okay we're

114
00:04:54,840 --> 00:04:59,880
gonna click on it and click on it and

115
00:04:56,630 --> 00:05:08,039
and they've successfully X will trigger

116
00:04:59,880 --> 00:05:10,620
that data so how do we mitigate against

117
00:05:08,039 --> 00:05:13,409
CSP formal attacks Oh Louis recommends

118
00:05:10,620 --> 00:05:17,669
that no cell begins with equals plus

119
00:05:13,410 --> 00:05:21,259
minus or at symbols they're difficult to

120
00:05:17,669 --> 00:05:23,609
mitigate it abates most anti viruses and

121
00:05:21,259 --> 00:05:24,870
actually some bug bounty programs have

122
00:05:23,610 --> 00:05:28,440
disallowed this attack because they

123
00:05:24,870 --> 00:05:31,380
think it's a user problem there's a

124
00:05:28,440 --> 00:05:34,020
Microsoft security advisory in the

125
00:05:31,380 --> 00:05:35,460
registry if you have Microsoft OS I

126
00:05:34,020 --> 00:05:37,979
highly recommend you go ahead and check

127
00:05:35,460 --> 00:05:42,780
this out and apply it to your servers or

128
00:05:37,979 --> 00:05:45,090
systems if you haven't already you know

129
00:05:42,780 --> 00:05:48,119
use a sandbox to analyze routines and

130
00:05:45,090 --> 00:05:50,280
identify any type of anomalies and most

131
00:05:48,120 --> 00:05:51,720
importantly make sure users aware of any

132
00:05:50,280 --> 00:05:54,030
types of warnings like this to connect

133
00:05:51,720 --> 00:05:55,320
to outside sources most of you should

134
00:05:54,030 --> 00:05:58,229
know better click OK make sure they're

135
00:05:55,320 --> 00:05:59,690
trained to say hey you know this this

136
00:05:58,229 --> 00:06:02,280
doesn't mean you send someone click no

137
00:05:59,690 --> 00:06:04,349
but unfortunately it still happens where

138
00:06:02,280 --> 00:06:07,619
users just just ignore it or social

139
00:06:04,349 --> 00:06:10,919
engineer to click OK and successfully

140
00:06:07,620 --> 00:06:12,479
you know open that back door and that

141
00:06:10,919 --> 00:06:14,900
concludes our presentation thank you for

142
00:06:12,479 --> 00:06:14,900
watching

