1
00:00:03,780 --> 00:00:06,869
[Music]

2
00:00:07,700 --> 00:00:10,800
thank you hello everyone I hope you're

3
00:00:10,800 --> 00:00:12,840
having a great time and learning lots of

4
00:00:12,840 --> 00:00:15,599
cool stuff at kringlecon so far my name

5
00:00:15,599 --> 00:00:17,940
is Eric Pursley I'm a technical engineer

6
00:00:17,940 --> 00:00:20,279
at counter hack and I'm very happy to be

7
00:00:20,279 --> 00:00:22,740
speaking at kringlecon this year in this

8
00:00:22,740 --> 00:00:24,359
talk I'll be giving an introductory

9
00:00:24,359 --> 00:00:26,580
lesson on analyzing Powershell logs

10
00:00:26,580 --> 00:00:29,820
using built-in tools and methods

11
00:00:29,820 --> 00:00:32,279
a little more about myself relative to

12
00:00:32,279 --> 00:00:34,860
the rest of the counter hack team and

13
00:00:34,860 --> 00:00:37,440
probably some of the other speakers I'm

14
00:00:37,440 --> 00:00:39,780
fairly new to cyber security but in the

15
00:00:39,780 --> 00:00:41,280
five years I've been working in the

16
00:00:41,280 --> 00:00:43,379
industry I've gained both red and blue

17
00:00:43,379 --> 00:00:46,140
team experience I'm a cyber warfare

18
00:00:46,140 --> 00:00:49,079
operator at the Air National Guard where

19
00:00:49,079 --> 00:00:51,780
I do vulnerability assessments and

20
00:00:51,780 --> 00:00:53,520
incident response for state government

21
00:00:53,520 --> 00:00:56,699
and Military networks and I joined the

22
00:00:56,699 --> 00:00:58,800
counter hack team this year where I do

23
00:00:58,800 --> 00:01:01,079
penetration testing and challenge

24
00:01:01,079 --> 00:01:04,699
creation for the holiday hack challenge

25
00:01:04,739 --> 00:01:07,020
so more specifically I'll be talking

26
00:01:07,020 --> 00:01:09,420
about why enabling Powershell logs is

27
00:01:09,420 --> 00:01:11,580
important why knowing how to use

28
00:01:11,580 --> 00:01:14,100
built-in tools is useful and I'll be

29
00:01:14,100 --> 00:01:16,920
giving a demonstration for or of log

30
00:01:16,920 --> 00:01:19,200
analysis using Event Viewer and

31
00:01:19,200 --> 00:01:21,720
Powershell just so I don't keep you here

32
00:01:21,720 --> 00:01:24,360
too long so you can get back to questing

33
00:01:24,360 --> 00:01:27,180
this is meant to be introductory to

34
00:01:27,180 --> 00:01:29,040
introduce you to these Concepts and

35
00:01:29,040 --> 00:01:31,920
methods so you're aware of them and if

36
00:01:31,920 --> 00:01:33,840
you're interested can research and

37
00:01:33,840 --> 00:01:36,299
practice more and who knows you may even

38
00:01:36,299 --> 00:01:38,700
need to pull these out of your fancy bag

39
00:01:38,700 --> 00:01:41,159
of holding to solve a challenge on your

40
00:01:41,159 --> 00:01:43,020
quest

41
00:01:43,020 --> 00:01:46,380
so why is enabling Powershell logging

42
00:01:46,380 --> 00:01:47,520
important

43
00:01:47,520 --> 00:01:50,100
well there is a very common attack

44
00:01:50,100 --> 00:01:52,500
technique called living off the land

45
00:01:52,500 --> 00:01:55,560
where attackers use native or legitimate

46
00:01:55,560 --> 00:01:57,180
software that is already installed on

47
00:01:57,180 --> 00:01:59,820
the victim's machine for their nefarious

48
00:01:59,820 --> 00:02:02,640
goals using legitimate software enables

49
00:02:02,640 --> 00:02:04,680
the attackers to better blend in and

50
00:02:04,680 --> 00:02:07,680
bypass antivirus signatures and

51
00:02:07,680 --> 00:02:09,660
intrusion prevention and detection

52
00:02:09,660 --> 00:02:11,940
systems Powershell isn't named what it

53
00:02:11,940 --> 00:02:15,420
is for no reason it's powerful and has

54
00:02:15,420 --> 00:02:19,020
extremely broad functionality from basic

55
00:02:19,020 --> 00:02:21,300
commands to running lengthy complex

56
00:02:21,300 --> 00:02:24,360
scripts attackers love it and use it

57
00:02:24,360 --> 00:02:26,819
frequently because it's often not locked

58
00:02:26,819 --> 00:02:29,760
even when command prompt is which

59
00:02:29,760 --> 00:02:32,280
happens more than you'd think while lock

60
00:02:32,280 --> 00:02:33,959
command prompts but allow the more

61
00:02:33,959 --> 00:02:36,540
capable option I don't know it just it's

62
00:02:36,540 --> 00:02:38,580
never made any sense to me Powershell

63
00:02:38,580 --> 00:02:41,700
also executes commands from memory which

64
00:02:41,700 --> 00:02:44,300
leaves no trace or artifacts behind

65
00:02:44,300 --> 00:02:47,940
unless we enable logging

66
00:02:47,940 --> 00:02:50,220
here's a few examples of attack tools

67
00:02:50,220 --> 00:02:52,620
that are based off or used within

68
00:02:52,620 --> 00:02:54,840
Powershell these tools were intended for

69
00:02:54,840 --> 00:02:57,360
ethical purposes but like many others

70
00:02:57,360 --> 00:02:59,940
are a double-edged sword and are also

71
00:02:59,940 --> 00:03:02,160
used maliciously they're very well known

72
00:03:02,160 --> 00:03:04,980
at this point so most AV software will

73
00:03:04,980 --> 00:03:07,440
catch and block them but they can be

74
00:03:07,440 --> 00:03:10,200
obfuscated to bypass that in which case

75
00:03:10,200 --> 00:03:12,239
having Powershell logs enabled would be

76
00:03:12,239 --> 00:03:14,760
very beneficial and as you probably

77
00:03:14,760 --> 00:03:17,760
noticed I included Powershell itself

78
00:03:17,760 --> 00:03:20,580
here and noted a few basic commands that

79
00:03:20,580 --> 00:03:22,440
you might look for when analyzing the

80
00:03:22,440 --> 00:03:24,900
logs including those that will create

81
00:03:24,900 --> 00:03:27,900
new users for persistence run scripts

82
00:03:27,900 --> 00:03:31,560
and remote commands list folder contents

83
00:03:31,560 --> 00:03:34,500
and read files and also create remote

84
00:03:34,500 --> 00:03:36,180
sessions for things like file

85
00:03:36,180 --> 00:03:38,400
transferring

86
00:03:38,400 --> 00:03:40,620
um okay so enabling Powershell logs is

87
00:03:40,620 --> 00:03:43,379
good but why is it good to know how to

88
00:03:43,379 --> 00:03:46,739
analyze them using built-in tools

89
00:03:46,739 --> 00:03:49,560
the answer comes down to you should

90
00:03:49,560 --> 00:03:52,560
always have a backup plan ideally we'd

91
00:03:52,560 --> 00:03:55,500
have access to something that says you

92
00:03:55,500 --> 00:03:57,540
know all your logs are belong to me and

93
00:03:57,540 --> 00:04:00,120
in just every log that's generated and

94
00:04:00,120 --> 00:04:02,700
makes analysis way easier sometimes

95
00:04:02,700 --> 00:04:05,640
these even do some level of analysis for

96
00:04:05,640 --> 00:04:07,620
us but there are going to be times where

97
00:04:07,620 --> 00:04:10,140
these are not available as an example on

98
00:04:10,140 --> 00:04:12,299
a recent Mission with my airguard unit

99
00:04:12,299 --> 00:04:14,340
the mission partner was forwarding logs

100
00:04:14,340 --> 00:04:16,560
to a collector but only minimal

101
00:04:16,560 --> 00:04:18,899
information was being ingested not

102
00:04:18,899 --> 00:04:21,000
enough to really do what we needed to do

103
00:04:21,000 --> 00:04:24,199
so we went into every individual server

104
00:04:24,199 --> 00:04:29,100
uh pulls the logs and used deep blue CLI

105
00:04:29,100 --> 00:04:31,440
which is a tool created by Sansa Zone

106
00:04:31,440 --> 00:04:34,139
Eric Conrad in Powershell to quickly

107
00:04:34,139 --> 00:04:36,540
parse the logs for possible malicious

108
00:04:36,540 --> 00:04:38,940
activity and then use the Event Viewer

109
00:04:38,940 --> 00:04:41,160
to further investigate any hits we got

110
00:04:41,160 --> 00:04:43,680
if attackers are living off the land uh

111
00:04:43,680 --> 00:04:46,380
Defenders should know how to as well and

112
00:04:46,380 --> 00:04:48,360
for log analysis that's where Event

113
00:04:48,360 --> 00:04:50,699
Viewer and Powershell come in it's more

114
00:04:50,699 --> 00:04:53,280
it's a more manual process so it does

115
00:04:53,280 --> 00:04:55,560
take longer but these tools are

116
00:04:55,560 --> 00:04:57,479
installed on every Windows machine by

117
00:04:57,479 --> 00:04:59,699
default and if you have any kind of

118
00:04:59,699 --> 00:05:01,740
information on what you're looking for

119
00:05:01,740 --> 00:05:04,560
finding these logs finding the logs you

120
00:05:04,560 --> 00:05:06,600
need can be done much quicker

121
00:05:06,600 --> 00:05:08,759
all right let's jump into the

122
00:05:08,759 --> 00:05:10,560
demonstration

123
00:05:10,560 --> 00:05:13,199
first thing we need to do is open Event

124
00:05:13,199 --> 00:05:16,139
Viewer and Powershell

125
00:05:16,139 --> 00:05:18,180
under our search bar

126
00:05:18,180 --> 00:05:21,199
Event Viewer

127
00:05:23,940 --> 00:05:27,960
and will open Powershell as well

128
00:05:27,960 --> 00:05:30,680
admin

129
00:05:32,600 --> 00:05:35,709
[Music]

130
00:05:36,539 --> 00:05:39,180
oh this prompt loads there it is next

131
00:05:39,180 --> 00:05:43,220
Event Viewer open saved log

132
00:05:48,120 --> 00:05:49,620
I'm gonna give this one a special folder

133
00:05:49,620 --> 00:05:52,940
over here under save logs

134
00:05:53,100 --> 00:05:55,680
first thing we need to do is narrow down

135
00:05:55,680 --> 00:05:57,500
our search as you can see here we have

136
00:05:57,500 --> 00:06:01,560
688 events and realistically that's not

137
00:06:01,560 --> 00:06:04,979
a whole lot uh in a real environment you

138
00:06:04,979 --> 00:06:07,620
probably see a lot more but regardless

139
00:06:07,620 --> 00:06:09,919
680 is still a lot and we still need to

140
00:06:09,919 --> 00:06:14,280
filter some things out especially if

141
00:06:14,280 --> 00:06:16,259
like in our case we have no Intel to

142
00:06:16,259 --> 00:06:18,139
work off of other than find the thing

143
00:06:18,139 --> 00:06:22,080
one place to start to narrow down which

144
00:06:22,080 --> 00:06:23,940
logs we're looking at that would be

145
00:06:23,940 --> 00:06:25,860
determining the date of the attack when

146
00:06:25,860 --> 00:06:27,240
the attack took place

147
00:06:27,240 --> 00:06:31,080
so one way we can do that is to right

148
00:06:31,080 --> 00:06:33,539
click here the date and time column and

149
00:06:33,539 --> 00:06:37,699
then select group events by this column

150
00:06:41,240 --> 00:06:43,560
start us down here at the bottom so if

151
00:06:43,560 --> 00:06:45,000
we scroll all the way up

152
00:06:45,000 --> 00:06:47,639
we can see here there's new headers uh

153
00:06:47,639 --> 00:06:51,740
with the dates we'll just minimize these

154
00:06:51,900 --> 00:06:55,440
and here we can see

155
00:06:55,440 --> 00:06:58,919
there's three dates here and

156
00:06:58,919 --> 00:07:02,759
the number of events within each date

157
00:07:02,759 --> 00:07:04,680
now to do the same thing in Powershell

158
00:07:04,680 --> 00:07:08,039
is a little more complex so first we're

159
00:07:08,039 --> 00:07:10,560
going to cd2

160
00:07:10,560 --> 00:07:12,060
directory

161
00:07:12,060 --> 00:07:14,520
where our logs are

162
00:07:14,520 --> 00:07:15,960
and then in the interest of time I'm

163
00:07:15,960 --> 00:07:18,180
just going to paste in the command

164
00:07:18,180 --> 00:07:21,360
so what this is doing is

165
00:07:21,360 --> 00:07:25,380
getting everything within our

166
00:07:25,380 --> 00:07:27,960
log file essentially cutting it out

167
00:07:27,960 --> 00:07:31,199
piping that to aware object which says

168
00:07:31,199 --> 00:07:35,639
where an item matches

169
00:07:35,639 --> 00:07:39,599
a date in this format and this is regex

170
00:07:39,599 --> 00:07:43,020
and then we're piping that to a 4H so

171
00:07:43,020 --> 00:07:46,620
for each object within here we're

172
00:07:46,620 --> 00:07:50,819
splitting it on the space

173
00:07:50,819 --> 00:07:53,400
and then we're piping that to a group

174
00:07:53,400 --> 00:07:56,759
object which is just the easiest way to

175
00:07:56,759 --> 00:07:59,280
get a count of each resulting resulting

176
00:07:59,280 --> 00:08:01,580
object

177
00:08:03,180 --> 00:08:05,400
and here you can see we have the three

178
00:08:05,400 --> 00:08:09,120
dates and the same counts as we saw in

179
00:08:09,120 --> 00:08:13,139
even fewer and this you can just ignore

180
00:08:13,139 --> 00:08:14,819
that we could probably refine this

181
00:08:14,819 --> 00:08:15,900
command a little bit more so we don't

182
00:08:15,900 --> 00:08:17,940
get this but for our purposes it's not

183
00:08:17,940 --> 00:08:19,199
really necessary

184
00:08:19,199 --> 00:08:21,360
a typical process for analysis is

185
00:08:21,360 --> 00:08:24,000
looking for outliers such as the group

186
00:08:24,000 --> 00:08:26,520
that has either the least or most events

187
00:08:26,520 --> 00:08:29,160
and combine that with context and some

188
00:08:29,160 --> 00:08:31,620
critical thinking in this case December

189
00:08:31,620 --> 00:08:34,440
26th has by far the most events and

190
00:08:34,440 --> 00:08:37,500
there's a date of significance so that's

191
00:08:37,500 --> 00:08:41,940
probably a good place to start

192
00:08:41,940 --> 00:08:44,399
let's keep filtering these down since

193
00:08:44,399 --> 00:08:46,760
smaller numbers are easier to work with

194
00:08:46,760 --> 00:08:50,399
as you can see everything here

195
00:08:50,399 --> 00:08:55,380
is the same except for the event IDs and

196
00:08:55,380 --> 00:08:58,260
the task categories

197
00:08:58,260 --> 00:09:01,260
so just having a closer look

198
00:09:01,260 --> 00:09:05,220
down through each one in the general

199
00:09:05,220 --> 00:09:08,720
pane here where the details are

200
00:09:08,720 --> 00:09:11,700
for me the most interesting thing is

201
00:09:11,700 --> 00:09:14,399
this one because it shows the actual

202
00:09:14,399 --> 00:09:16,740
command

203
00:09:16,740 --> 00:09:20,040
and looks like the event ID is 4104 so

204
00:09:20,040 --> 00:09:21,959
let's create a filter

205
00:09:21,959 --> 00:09:25,459
for this event ID

206
00:09:30,420 --> 00:09:32,820
and we'll go ahead and collapse these

207
00:09:32,820 --> 00:09:34,200
first

208
00:09:34,200 --> 00:09:36,060
now let's take a look through these

209
00:09:36,060 --> 00:09:38,599
events

210
00:09:41,640 --> 00:09:45,420
all right so here we see a variable

211
00:09:45,420 --> 00:09:48,660
um variables start with a

212
00:09:48,660 --> 00:09:52,080
dollar sign so that's a good character

213
00:09:52,080 --> 00:09:54,060
to search for to see what they were

214
00:09:54,060 --> 00:09:55,800
doing with these variables

215
00:09:55,800 --> 00:09:58,140
so we'll go ahead and click on the find

216
00:09:58,140 --> 00:09:59,820
button here

217
00:09:59,820 --> 00:10:02,640
enter the dollar sign

218
00:10:02,640 --> 00:10:06,680
and we'll click on find next

219
00:10:07,260 --> 00:10:09,420
okay

220
00:10:09,420 --> 00:10:14,180
so far so good nothing too nefarious

221
00:10:16,560 --> 00:10:20,940
there it looks like they were adding

222
00:10:20,940 --> 00:10:22,019
content

223
00:10:22,019 --> 00:10:26,220
to The Naughty Nice List not necessarily

224
00:10:26,220 --> 00:10:30,800
nefarious but something to keep in mind

225
00:10:31,080 --> 00:10:35,100
now here we see uh the dollar sign that

226
00:10:35,100 --> 00:10:38,700
was not used in a variable and this is

227
00:10:38,700 --> 00:10:42,320
where Powershell comes in handy because

228
00:10:42,320 --> 00:10:45,240
find will show us everywhere the dollar

229
00:10:45,240 --> 00:10:47,700
sign is not just where it's being used

230
00:10:47,700 --> 00:10:50,279
to create a variable now with Powershell

231
00:10:50,279 --> 00:10:51,959
we can use regex

232
00:10:51,959 --> 00:10:55,740
in order to better search for

233
00:10:55,740 --> 00:10:57,660
when the dollar sign was used for

234
00:10:57,660 --> 00:11:00,560
variable creation

235
00:11:00,779 --> 00:11:04,079
something to keep in mind is that

236
00:11:04,079 --> 00:11:06,300
Windows logs are listed in Reverse

237
00:11:06,300 --> 00:11:07,560
chronological order

238
00:11:07,560 --> 00:11:10,440
so in order to more easily analyze them

239
00:11:10,440 --> 00:11:12,440
in Powershell we're first going to

240
00:11:12,440 --> 00:11:15,000
reverse that so that they are in

241
00:11:15,000 --> 00:11:16,920
chronological order

242
00:11:16,920 --> 00:11:19,440
and to do that we're going to create a

243
00:11:19,440 --> 00:11:22,760
variable that has

244
00:11:22,760 --> 00:11:27,060
the contents of the logs

245
00:11:27,060 --> 00:11:29,719
um within it

246
00:11:32,279 --> 00:11:35,880
and then we are going to

247
00:11:35,880 --> 00:11:39,380
reverse that order

248
00:11:41,519 --> 00:11:44,820
and now this Chrono variable short for

249
00:11:44,820 --> 00:11:47,700
Chronological will contain all of the

250
00:11:47,700 --> 00:11:51,720
logs in correct chronological order

251
00:11:51,720 --> 00:11:54,720
since variable creation is likely at the

252
00:11:54,720 --> 00:11:56,040
start of the line

253
00:11:56,040 --> 00:11:59,100
we're going to

254
00:11:59,100 --> 00:12:03,660
type the logs into a select string and

255
00:12:03,660 --> 00:12:05,700
then use the regex pattern which

256
00:12:05,700 --> 00:12:09,300
basically says that look for patterns

257
00:12:09,300 --> 00:12:11,040
where the dollar sign is at the

258
00:12:11,040 --> 00:12:12,959
beginning of the line and then we pipe

259
00:12:12,959 --> 00:12:15,540
it to a more in case there's a bunch of

260
00:12:15,540 --> 00:12:18,300
results so we can go Page by Page and

261
00:12:18,300 --> 00:12:20,779
review it

262
00:12:22,440 --> 00:12:24,360
looks like there's only a few results

263
00:12:24,360 --> 00:12:28,079
here we have a couple Simple Text

264
00:12:28,079 --> 00:12:32,279
variables and then we have the contents

265
00:12:32,279 --> 00:12:33,899
of the Naughty Nice List being stored in

266
00:12:33,899 --> 00:12:37,440
the variable we have that twice so they

267
00:12:37,440 --> 00:12:39,839
must have changed it at some point

268
00:12:39,839 --> 00:12:42,660
and then we see them

269
00:12:42,660 --> 00:12:45,420
adding the contents

270
00:12:45,420 --> 00:12:47,579
of the naughty nice list

271
00:12:47,579 --> 00:12:50,459
back into the Naughty Nice List so this

272
00:12:50,459 --> 00:12:54,000
must have been edited at some point

273
00:12:54,000 --> 00:12:55,320
so

274
00:12:55,320 --> 00:12:59,100
let's find that again and this remote

275
00:12:59,100 --> 00:13:00,899
script block it looks like it's empty so

276
00:13:00,899 --> 00:13:04,380
that can be ignored so let's go back and

277
00:13:04,380 --> 00:13:06,660
see what they did here with this 90 nice

278
00:13:06,660 --> 00:13:08,899
list

279
00:13:12,300 --> 00:13:15,439
back up to the top

280
00:13:15,839 --> 00:13:17,940
find the add content again

281
00:13:17,940 --> 00:13:21,039
[Music]

282
00:13:24,120 --> 00:13:26,899
there it is

283
00:13:26,940 --> 00:13:27,960
close this window

284
00:13:27,960 --> 00:13:29,100
[Music]

285
00:13:29,100 --> 00:13:31,320
now we're just going to scroll up

286
00:13:31,320 --> 00:13:33,540
to see if we see something interesting

287
00:13:33,540 --> 00:13:35,100
such as this

288
00:13:35,100 --> 00:13:38,579
we have the person putting Grinch equals

289
00:13:38,579 --> 00:13:39,660
nice

290
00:13:39,660 --> 00:13:42,959
into the Naughty Nice List now I don't

291
00:13:42,959 --> 00:13:43,980
know about you but that's a little

292
00:13:43,980 --> 00:13:46,500
suspicious because

293
00:13:46,500 --> 00:13:49,200
we all know that the Grinch

294
00:13:49,200 --> 00:13:52,940
should probably be labeled naughty

295
00:13:54,600 --> 00:13:58,800
so we can either pivot and look for

296
00:13:58,800 --> 00:14:03,120
Grinch or we can continue looking at the

297
00:14:03,120 --> 00:14:05,820
Naughty Nice List and my thought process

298
00:14:05,820 --> 00:14:08,880
is let's finish the analysis of the list

299
00:14:08,880 --> 00:14:11,880
and then we can keep Grinch in mind

300
00:14:11,880 --> 00:14:13,200
for later

301
00:14:13,200 --> 00:14:15,899
so what we'll do is go back up to the

302
00:14:15,899 --> 00:14:17,040
top

303
00:14:17,040 --> 00:14:18,839
click on find again

304
00:14:18,839 --> 00:14:21,720
and then do a search for

305
00:14:21,720 --> 00:14:24,500
naughty nice

306
00:14:26,100 --> 00:14:29,100
all right get content we're reading it

307
00:14:29,100 --> 00:14:31,579
okay so here we see that they have

308
00:14:31,579 --> 00:14:33,420
deleted it

309
00:14:33,420 --> 00:14:35,220
we've seen that this potential attacker

310
00:14:35,220 --> 00:14:37,079
is editing deleting and probably

311
00:14:37,079 --> 00:14:40,079
creating new versions of important files

312
00:14:40,079 --> 00:14:41,880
so let's go into Powershell and see

313
00:14:41,880 --> 00:14:43,680
everything they may have done with the

314
00:14:43,680 --> 00:14:46,399
naughty nice list

315
00:14:47,639 --> 00:14:50,760
we're again going to use our kernel

316
00:14:50,760 --> 00:14:54,600
variable which is just the the logs in

317
00:14:54,600 --> 00:14:56,639
chronological order we're going to pipe

318
00:14:56,639 --> 00:14:58,320
those to a select string and this time

319
00:14:58,320 --> 00:14:59,820
we're going to search for Naughty Nice

320
00:14:59,820 --> 00:15:02,779
List dot text

321
00:15:03,300 --> 00:15:06,120
okay now we have this parameter binding

322
00:15:06,120 --> 00:15:08,639
line in here it's a little

323
00:15:08,639 --> 00:15:11,459
messy so let's go ahead and clean that

324
00:15:11,459 --> 00:15:13,638
up

325
00:15:14,279 --> 00:15:16,920
select string again this time

326
00:15:16,920 --> 00:15:19,639
enter

327
00:15:19,740 --> 00:15:22,860
perimeter Splat so parameter and then

328
00:15:22,860 --> 00:15:25,199
anything after parameter it will be

329
00:15:25,199 --> 00:15:27,839
included and then we're going to

330
00:15:27,839 --> 00:15:31,500
give it a not match to filter it out

331
00:15:31,500 --> 00:15:33,540
it doesn't look like they did much with

332
00:15:33,540 --> 00:15:35,160
it so they

333
00:15:35,160 --> 00:15:37,079
store the contents into this variable

334
00:15:37,079 --> 00:15:38,760
and did it again

335
00:15:38,760 --> 00:15:40,380
deleted it

336
00:15:40,380 --> 00:15:43,500
they put that Grinch equals nice into it

337
00:15:43,500 --> 00:15:45,240
and then they added the original

338
00:15:45,240 --> 00:15:51,120
contents back into the list now

339
00:15:51,120 --> 00:15:53,579
this you know seems like an important

340
00:15:53,579 --> 00:15:55,139
pretty important file

341
00:15:55,139 --> 00:15:58,079
um that was altered uh so this is

342
00:15:58,079 --> 00:16:00,600
definitely a finding that if this were

343
00:16:00,600 --> 00:16:03,240
an actual investigation I would report

344
00:16:03,240 --> 00:16:05,399
to the customer

345
00:16:05,399 --> 00:16:07,260
since they've showed that they're not

346
00:16:07,260 --> 00:16:10,560
afraid to delete files just for good

347
00:16:10,560 --> 00:16:11,579
measure

348
00:16:11,579 --> 00:16:15,060
we should go ahead and make sure that

349
00:16:15,060 --> 00:16:18,000
nothing else was deleted

350
00:16:18,000 --> 00:16:20,699
so we will

351
00:16:20,699 --> 00:16:23,639
pipe the chronological logs into a

352
00:16:23,639 --> 00:16:25,440
select string again

353
00:16:25,440 --> 00:16:27,480
and we'll tell it

354
00:16:27,480 --> 00:16:29,820
every line with delete

355
00:16:29,820 --> 00:16:31,860
at the beginning of the line since as we

356
00:16:31,860 --> 00:16:35,519
can see here the delete command is at

357
00:16:35,519 --> 00:16:37,259
the beginning

358
00:16:37,259 --> 00:16:38,940
and we'll give it the

359
00:16:38,940 --> 00:16:41,519
context argument

360
00:16:41,519 --> 00:16:46,320
of one one and that just says show me

361
00:16:46,320 --> 00:16:49,800
one line before and one line after

362
00:16:49,800 --> 00:16:53,279
the line that contains delete just so we

363
00:16:53,279 --> 00:16:55,139
get some additional information along

364
00:16:55,139 --> 00:16:57,360
with it

365
00:16:57,360 --> 00:16:59,639
all right looks like

366
00:16:59,639 --> 00:17:02,279
there's only this one result which we've

367
00:17:02,279 --> 00:17:04,380
already seen but again this time we have

368
00:17:04,380 --> 00:17:05,880
some extra context

369
00:17:05,880 --> 00:17:08,040
we see the date time

370
00:17:08,040 --> 00:17:09,959
the

371
00:17:09,959 --> 00:17:12,419
application that was ran

372
00:17:12,419 --> 00:17:14,520
the event ID

373
00:17:14,520 --> 00:17:17,220
as well as the description of the event

374
00:17:17,220 --> 00:17:20,220
ID so a little bit of extra information

375
00:17:20,220 --> 00:17:22,919
a little bit more than this all right I

376
00:17:22,919 --> 00:17:25,859
think we've completed the analysis on

377
00:17:25,859 --> 00:17:27,419
the Naughty Nice List doesn't seem like

378
00:17:27,419 --> 00:17:29,580
there's anything more defined so let's

379
00:17:29,580 --> 00:17:34,440
pivot back over to our Grinch finding

380
00:17:34,440 --> 00:17:38,640
we'll go back into Event Viewer

381
00:17:38,640 --> 00:17:41,160
close this

382
00:17:41,160 --> 00:17:44,880
back to the top do another find

383
00:17:44,880 --> 00:17:47,600
Grinch

384
00:17:48,900 --> 00:17:51,179
all right we see them labeling

385
00:17:51,179 --> 00:17:53,880
themselves as nice already seen that now

386
00:17:53,880 --> 00:17:55,679
here's something new

387
00:17:55,679 --> 00:17:59,280
we see them adding themselves uh as a

388
00:17:59,280 --> 00:18:01,500
user onto the system

389
00:18:01,500 --> 00:18:04,260
is says not Grinch but

390
00:18:04,260 --> 00:18:05,940
they're not very clever we know it's the

391
00:18:05,940 --> 00:18:07,620
Grinch

392
00:18:07,620 --> 00:18:10,080
uh we'll keep

393
00:18:10,080 --> 00:18:12,179
going to here looks like they did it a

394
00:18:12,179 --> 00:18:13,440
few times

395
00:18:13,440 --> 00:18:15,360
uh probably because they were doing the

396
00:18:15,360 --> 00:18:18,900
password function incorrectly

397
00:18:18,900 --> 00:18:23,400
and it looks like that's going to be it

398
00:18:23,400 --> 00:18:26,160
yep no more Grinch findings

399
00:18:26,160 --> 00:18:29,039
and then just to demonstrate

400
00:18:29,039 --> 00:18:31,980
that in Powershell

401
00:18:31,980 --> 00:18:32,890
we would again

402
00:18:32,890 --> 00:18:35,959
[Music]

403
00:18:37,320 --> 00:18:42,020
to a select string

404
00:18:43,020 --> 00:18:47,059
this time we'll search for Grinch

405
00:18:47,340 --> 00:18:50,400
and we see these parameter bindings we

406
00:18:50,400 --> 00:18:52,160
can ignore those

407
00:18:52,160 --> 00:18:55,200
looks like we get the same things that

408
00:18:55,200 --> 00:18:56,700
we saw

409
00:18:56,700 --> 00:18:58,740
in Event Viewer

410
00:18:58,740 --> 00:19:00,600
so we could spend some more time digging

411
00:19:00,600 --> 00:19:02,400
through these logs there may be other

412
00:19:02,400 --> 00:19:04,860
things to find but for now I think we

413
00:19:04,860 --> 00:19:06,419
found enough we found some things to

414
00:19:06,419 --> 00:19:09,360
report so that'll conclude the

415
00:19:09,360 --> 00:19:13,080
demonstration hopefully it was a good uh

416
00:19:13,080 --> 00:19:15,120
you know kind of introductory demo on

417
00:19:15,120 --> 00:19:17,940
how you can use both Event Viewer and

418
00:19:17,940 --> 00:19:21,360
Powershell to complement each other and

419
00:19:21,360 --> 00:19:24,539
invest in an investigation if

420
00:19:24,539 --> 00:19:26,100
um you know there you don't have any

421
00:19:26,100 --> 00:19:29,760
other more fancy more robust tools

422
00:19:29,760 --> 00:19:32,220
again this is meant to be introductory

423
00:19:32,220 --> 00:19:34,860
so this was a simple scenario and

424
00:19:34,860 --> 00:19:37,200
Analysis isn't always going to be this

425
00:19:37,200 --> 00:19:39,480
easy but hopefully this showed you that

426
00:19:39,480 --> 00:19:41,580
at least basic analysis can be done

427
00:19:41,580 --> 00:19:44,400
using basic pre-installed tools and

428
00:19:44,400 --> 00:19:46,559
helps should you find yourself needing

429
00:19:46,559 --> 00:19:48,960
it during your adventures

430
00:19:48,960 --> 00:19:51,179
thank you very much for attending my

431
00:19:51,179 --> 00:19:53,340
talk please do check out the resources

432
00:19:53,340 --> 00:19:55,080
there's some really good stuff there

433
00:19:55,080 --> 00:19:58,200
including how to get Powershell logging

434
00:19:58,200 --> 00:19:59,299
up and running

435
00:19:59,299 --> 00:20:01,620
thanks again and enjoy the rest of your

436
00:20:01,620 --> 00:20:04,280
time at kringlecon

437
00:20:06,490 --> 00:20:09,569
[Music]

438
00:20:10,100 --> 00:20:13,100
thank you

