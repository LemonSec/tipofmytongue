1
00:00:03,780 --> 00:00:06,869
[Music]

2
00:00:07,700 --> 00:00:09,360
thank you

3
00:00:09,360 --> 00:00:11,880
well hello and welcome to All I Want for

4
00:00:11,880 --> 00:00:14,940
AWS is allow star my name is Chris elgy

5
00:00:14,940 --> 00:00:16,920
I work for counter hack challenges we

6
00:00:16,920 --> 00:00:19,440
have the great privilege of bringing you

7
00:00:19,440 --> 00:00:21,420
the Sans Auto hack challenge every year

8
00:00:21,420 --> 00:00:23,640
I'm so glad that Santa invited us

9
00:00:23,640 --> 00:00:26,640
invited us all back to the North Pole I

10
00:00:26,640 --> 00:00:29,039
am a challenge developer and also a

11
00:00:29,039 --> 00:00:32,098
penetration tester at counterhack I also

12
00:00:32,098 --> 00:00:34,500
have the great honor of being a Sans

13
00:00:34,500 --> 00:00:36,239
instructor for both Enterprise and cloud

14
00:00:36,239 --> 00:00:40,339
pen testing let's get on with the talk

15
00:00:42,600 --> 00:00:44,280
so we're going to talk about control

16
00:00:44,280 --> 00:00:46,079
plane versus data plane what they are

17
00:00:46,079 --> 00:00:47,700
why they're important and we'll spend

18
00:00:47,700 --> 00:00:49,920
most of our day really working in the

19
00:00:49,920 --> 00:00:51,539
control plane we'll talk some about

20
00:00:51,539 --> 00:00:53,520
identity and you can decide whether or

21
00:00:53,520 --> 00:00:55,620
not it is the new perimeter we'll look

22
00:00:55,620 --> 00:00:58,079
at different ways to get to AWS the web

23
00:00:58,079 --> 00:01:01,620
console the CLI and some others will go

24
00:01:01,620 --> 00:01:04,500
through the interesting set of rules

25
00:01:04,500 --> 00:01:06,840
that govern how the AWS permissions

26
00:01:06,840 --> 00:01:10,320
model works and we'll spend some time in

27
00:01:10,320 --> 00:01:13,380
the AWS CLI and hopefully that will help

28
00:01:13,380 --> 00:01:16,640
you get a little farther along in

29
00:01:16,640 --> 00:01:19,880
alabaster's terminal

30
00:01:20,520 --> 00:01:23,040
okay so first control plane versus data

31
00:01:23,040 --> 00:01:25,259
plane we have assets they are rocket

32
00:01:25,259 --> 00:01:27,360
ships and I guess maybe a view Master

33
00:01:27,360 --> 00:01:29,100
wheel and the Pixar ball we have things

34
00:01:29,100 --> 00:01:31,259
we want to get to in and we're used to

35
00:01:31,259 --> 00:01:33,420
we're normally used to interacting with

36
00:01:33,420 --> 00:01:35,100
these things over the data plane we use

37
00:01:35,100 --> 00:01:38,400
TCP and UDP and ping and Tracer out we

38
00:01:38,400 --> 00:01:41,340
use all these types of uh connective

39
00:01:41,340 --> 00:01:44,880
tissues right uh to to go from where we

40
00:01:44,880 --> 00:01:47,759
are via a web browser or maybe curl or

41
00:01:47,759 --> 00:01:48,780
nmap

42
00:01:48,780 --> 00:01:50,759
to connect to these resources and that

43
00:01:50,759 --> 00:01:53,340
that depends on on DNS name resolution

44
00:01:53,340 --> 00:01:57,360
and internet gateways and routes and uh

45
00:01:57,360 --> 00:01:59,100
and firewall rules right so that we can

46
00:01:59,100 --> 00:02:01,079
we can go from where we are across the

47
00:02:01,079 --> 00:02:03,540
internet to those resources to hit that

48
00:02:03,540 --> 00:02:07,820
open port and interact in a specific way

49
00:02:08,098 --> 00:02:11,160
enter the control plane this is the

50
00:02:11,160 --> 00:02:14,700
other way to get to things in in AWS the

51
00:02:14,700 --> 00:02:17,760
way to get to these assets and the

52
00:02:17,760 --> 00:02:20,040
easiest way is the web console this is

53
00:02:20,040 --> 00:02:23,280
where we log into a web browser and we

54
00:02:23,280 --> 00:02:25,980
we navigate to our account

55
00:02:25,980 --> 00:02:28,620
and we can view our ec2 instances or

56
00:02:28,620 --> 00:02:31,200
Lambda functions or S3 buckets and deal

57
00:02:31,200 --> 00:02:32,760
with them there now you might say well

58
00:02:32,760 --> 00:02:34,379
Chris you said the web browser is part

59
00:02:34,379 --> 00:02:36,900
of the data plan down bottom and we'll

60
00:02:36,900 --> 00:02:39,599
yes but not in this case here this we're

61
00:02:39,599 --> 00:02:42,660
we're using the web console to reach in

62
00:02:42,660 --> 00:02:44,640
through the top and interact with these

63
00:02:44,640 --> 00:02:47,400
these resources whether they have IP

64
00:02:47,400 --> 00:02:49,980
addresses or not you can think of this

65
00:02:49,980 --> 00:02:53,220
kind of like when you spin up a VM in

66
00:02:53,220 --> 00:02:56,819
virtualbox or VMware and you can

67
00:02:56,819 --> 00:02:59,099
interact with it right right through its

68
00:02:59,099 --> 00:03:00,780
desktop regardless of whether or not

69
00:03:00,780 --> 00:03:02,640
that VM even has a network interface

70
00:03:02,640 --> 00:03:04,260
you're you're more or less going through

71
00:03:04,260 --> 00:03:06,540
the control plane in that instance so we

72
00:03:06,540 --> 00:03:09,060
can use the web console the CLI and some

73
00:03:09,060 --> 00:03:13,260
other things here to to connect to AWS

74
00:03:13,260 --> 00:03:15,360
via the control plane we'll look at a

75
00:03:15,360 --> 00:03:16,319
few of those

76
00:03:16,319 --> 00:03:19,200
so identity is what gets us access to

77
00:03:19,200 --> 00:03:20,640
our assets we get them there in the

78
00:03:20,640 --> 00:03:24,659
upper right and now I am a dog no I am a

79
00:03:24,659 --> 00:03:26,280
curly-haired person no I have to keep my

80
00:03:26,280 --> 00:03:28,260
hair short for drill I'm also not a cat

81
00:03:28,260 --> 00:03:30,659
I'm not a long-haired person

82
00:03:30,659 --> 00:03:33,360
um that might be Lynn actually she has

83
00:03:33,360 --> 00:03:34,980
all the magic that runs the counter hack

84
00:03:34,980 --> 00:03:36,959
offices anyway I'm actually the guy with

85
00:03:36,959 --> 00:03:38,760
the the nice haircut thanks for noticing

86
00:03:38,760 --> 00:03:41,280
and the polo shirt and I need to access

87
00:03:41,280 --> 00:03:44,340
some of these assets but to do that I

88
00:03:44,340 --> 00:03:45,599
need to have

89
00:03:45,599 --> 00:03:48,299
some kind of policy document allowing me

90
00:03:48,299 --> 00:03:51,239
to do so so we have all these documents

91
00:03:51,239 --> 00:03:53,280
that might be attached to users or

92
00:03:53,280 --> 00:03:56,040
identities or or groups and they might

93
00:03:56,040 --> 00:03:57,840
say that I'm allowed to access the

94
00:03:57,840 --> 00:04:00,540
rocket ship or S3 buckets or maybe only

95
00:04:00,540 --> 00:04:02,959
in certain circumstances may I access

96
00:04:02,959 --> 00:04:07,200
the uh the cloud watch resources

97
00:04:07,200 --> 00:04:09,239
on the other side of this we can also

98
00:04:09,239 --> 00:04:10,019
have

99
00:04:10,019 --> 00:04:11,879
policy documents attached to the

100
00:04:11,879 --> 00:04:13,980
resources themselves so maybe there's a

101
00:04:13,980 --> 00:04:16,440
policy document attached to that bouncy

102
00:04:16,440 --> 00:04:19,380
ball that says if you are a member of

103
00:04:19,380 --> 00:04:22,620
this project or if you are coming from

104
00:04:22,620 --> 00:04:24,660
this specific resource you may access

105
00:04:24,660 --> 00:04:27,000
the the bouncy ball

106
00:04:27,000 --> 00:04:28,979
so policy documents can be attached to

107
00:04:28,979 --> 00:04:32,100
identities or to resources net effect is

108
00:04:32,100 --> 00:04:34,740
they say yes you can access this

109
00:04:34,740 --> 00:04:37,500
resource and where does this actually

110
00:04:37,500 --> 00:04:39,780
happen is this over the data plane

111
00:04:39,780 --> 00:04:41,460
no this is over the control plane

112
00:04:41,460 --> 00:04:44,100
through AWS Magic

113
00:04:44,100 --> 00:04:45,780
doesn't matter where in the world I am

114
00:04:45,780 --> 00:04:48,900
what my IP address is it matters what my

115
00:04:48,900 --> 00:04:50,940
identity is and whether or not I'm

116
00:04:50,940 --> 00:04:52,740
allowed explicitly allowed to access

117
00:04:52,740 --> 00:04:55,280
that object

118
00:04:56,460 --> 00:04:58,139
so with the right document on the

119
00:04:58,139 --> 00:05:02,100
internet AWS will know that I'm a dog

120
00:05:02,100 --> 00:05:04,139
so here's the list of 316 Services

121
00:05:04,139 --> 00:05:07,500
across the AWS CLI that we might

122
00:05:07,500 --> 00:05:10,500
interact with it feels like a lot don't

123
00:05:10,500 --> 00:05:12,180
worry there are usually only a few that

124
00:05:12,180 --> 00:05:13,560
you actually need to interact with and

125
00:05:13,560 --> 00:05:16,199
we'll explore some of those here

126
00:05:16,199 --> 00:05:18,780
uh and we can do that through the AWS

127
00:05:18,780 --> 00:05:21,120
web console here it is I'm logged in I'm

128
00:05:21,120 --> 00:05:23,460
looking at my console home I can go to

129
00:05:23,460 --> 00:05:26,160
ec2 and maybe spin up some some virtual

130
00:05:26,160 --> 00:05:28,740
private servers I can go into IAM that's

131
00:05:28,740 --> 00:05:31,020
identity and access management and

132
00:05:31,020 --> 00:05:34,039
create users or manage Keys

133
00:05:34,039 --> 00:05:38,880
here I am listing my my instances my ec2

134
00:05:38,880 --> 00:05:41,699
instances I have none that's sad

135
00:05:41,699 --> 00:05:45,240
maybe I can create a bucket in S3

136
00:05:45,240 --> 00:05:48,539
or here I am playing with users and see

137
00:05:48,539 --> 00:05:50,759
what I have for existing keys and what

138
00:05:50,759 --> 00:05:52,500
what's out there maybe I should delete

139
00:05:52,500 --> 00:05:54,240
those test Keys those look old and

140
00:05:54,240 --> 00:05:57,180
unused so this is the web console

141
00:05:57,180 --> 00:05:59,280
there are also programmatic ways to

142
00:05:59,280 --> 00:06:03,300
interact with AWS I like using uh python

143
00:06:03,300 --> 00:06:05,220
for a lot of things and there's a

144
00:06:05,220 --> 00:06:07,199
library the boto3 library that lets you

145
00:06:07,199 --> 00:06:10,020
interact with AWS using your permissions

146
00:06:10,020 --> 00:06:12,919
whatever you have via the CLI typically

147
00:06:12,919 --> 00:06:15,780
you can use Python to do all the same

148
00:06:15,780 --> 00:06:18,300
things create buckets copy files create

149
00:06:18,300 --> 00:06:20,820
users create vpcs you can do all that

150
00:06:20,820 --> 00:06:23,280
with boto3

151
00:06:23,280 --> 00:06:25,919
there's a separate platform called

152
00:06:25,919 --> 00:06:28,500
terraform that can do all the things not

153
00:06:28,500 --> 00:06:31,560
just in AWS but also in Azure and Google

154
00:06:31,560 --> 00:06:34,620
cloud and it can create and interact

155
00:06:34,620 --> 00:06:37,740
with resources at any scale really if

156
00:06:37,740 --> 00:06:40,319
you take SEC 588 the cloud pen testing

157
00:06:40,319 --> 00:06:43,259
class the script that Moses Frost wrote

158
00:06:43,259 --> 00:06:46,500
to create the range for that class is I

159
00:06:46,500 --> 00:06:48,840
think 170 000 lines long it's all

160
00:06:48,840 --> 00:06:52,440
terraform and it creates a very large

161
00:06:52,440 --> 00:06:55,080
environment so so boto 3 terraform these

162
00:06:55,080 --> 00:06:57,000
are some programmatic ways that we could

163
00:06:57,000 --> 00:07:00,240
interact with AWS over the

164
00:07:00,240 --> 00:07:03,060
control plane

165
00:07:03,060 --> 00:07:06,960
the focus today is the AWS CLI here is a

166
00:07:06,960 --> 00:07:09,240
shot from alabaster's terminal he needs

167
00:07:09,240 --> 00:07:12,000
help please hop over there and the first

168
00:07:12,000 --> 00:07:13,560
one isn't too bad it's largely just

169
00:07:13,560 --> 00:07:14,759
getting started running the help

170
00:07:14,759 --> 00:07:16,560
function uh he needs a little help

171
00:07:16,560 --> 00:07:19,380
getting getting his IAM credentials

172
00:07:19,380 --> 00:07:21,300
entered in and then just a couple of

173
00:07:21,300 --> 00:07:23,160
quick commands and you should be all set

174
00:07:23,160 --> 00:07:25,199
there the second terminal is going to

175
00:07:25,199 --> 00:07:27,539
get a lot more complicated we're going

176
00:07:27,539 --> 00:07:29,400
to be looking at policy documents and

177
00:07:29,400 --> 00:07:31,740
how those allow us to get to certain

178
00:07:31,740 --> 00:07:33,300
resources that maybe we shouldn't be

179
00:07:33,300 --> 00:07:36,120
able to it's it's kind of a an audit

180
00:07:36,120 --> 00:07:37,919
slash privilege escalation situation

181
00:07:37,919 --> 00:07:43,139
there and this can all happen by the CLI

182
00:07:43,139 --> 00:07:45,840
so here's this in this second instance

183
00:07:45,840 --> 00:07:47,400
here a much more complex command

184
00:07:47,400 --> 00:07:48,900
beginning with AWS and then which

185
00:07:48,900 --> 00:07:52,319
service IAM and then which sub function

186
00:07:52,319 --> 00:07:55,199
of IAM well I want to get a policy a

187
00:07:55,199 --> 00:07:57,539
specific version of it well which policy

188
00:07:57,539 --> 00:07:58,919
is it well let's set an argument here

189
00:07:58,919 --> 00:08:03,240
the policy Arn Arns are Amazon resource

190
00:08:03,240 --> 00:08:05,580
notation uh they're these long strings

191
00:08:05,580 --> 00:08:07,919
of things these are the reason why copy

192
00:08:07,919 --> 00:08:09,840
and paste are so popular with the AWS

193
00:08:09,840 --> 00:08:13,139
CLI there's just a lot going on but this

194
00:08:13,139 --> 00:08:15,060
command is asking for version one of

195
00:08:15,060 --> 00:08:16,560
this particular policy and it gets

196
00:08:16,560 --> 00:08:18,900
dumped out in Json format you know it's

197
00:08:18,900 --> 00:08:20,699
Json because it's curly braces and

198
00:08:20,699 --> 00:08:22,440
colons all the way down

199
00:08:22,440 --> 00:08:25,879
all right so that is a look at the CLI

200
00:08:25,879 --> 00:08:28,199
before we start playing with it a bit

201
00:08:28,199 --> 00:08:30,000
ourselves let's talk about how those

202
00:08:30,000 --> 00:08:31,740
permissions work because this is really

203
00:08:31,740 --> 00:08:35,279
key to Security in AWS so so first

204
00:08:35,279 --> 00:08:37,320
things first uh there's the root account

205
00:08:37,320 --> 00:08:41,399
when you create a new uh organization in

206
00:08:41,399 --> 00:08:44,099
AWS there will be one root account and

207
00:08:44,099 --> 00:08:45,720
the root account can do everything so

208
00:08:45,720 --> 00:08:46,980
from here on we're going to be talking

209
00:08:46,980 --> 00:08:48,779
about different policy documents that

210
00:08:48,779 --> 00:08:50,220
allow certain things that disallow

211
00:08:50,220 --> 00:08:52,080
certain things none of that applies to

212
00:08:52,080 --> 00:08:54,420
root root can do all the things so do

213
00:08:54,420 --> 00:08:56,279
not get root wet do not feed it after

214
00:08:56,279 --> 00:08:58,440
midnight and do not generate access keys

215
00:08:58,440 --> 00:08:59,760
and we'll see access Keys here in a

216
00:08:59,760 --> 00:09:02,160
minute we instead want to create other

217
00:09:02,160 --> 00:09:04,620
users and they can have password access

218
00:09:04,620 --> 00:09:07,980
right because winter 2022 exclamation

219
00:09:07,980 --> 00:09:09,240
mark is going to keep everything safe

220
00:09:09,240 --> 00:09:11,459
just kidding you can also uh Federate it

221
00:09:11,459 --> 00:09:14,700
if you have maybe Azure ID or ping or

222
00:09:14,700 --> 00:09:16,560
OCTA you can Federate your

223
00:09:16,560 --> 00:09:19,320
organization's identities to AWS so that

224
00:09:19,320 --> 00:09:21,120
they can just they can log in with the

225
00:09:21,120 --> 00:09:22,920
credentials they already have

226
00:09:22,920 --> 00:09:26,100
or we can use key based access and this

227
00:09:26,100 --> 00:09:28,740
is wonderful for uh for the CLI and

228
00:09:28,740 --> 00:09:30,240
here's what that might look like so

229
00:09:30,240 --> 00:09:32,040
maybe I'm going to create a new user

230
00:09:32,040 --> 00:09:34,080
here someone named shell and I'm going

231
00:09:34,080 --> 00:09:36,899
to create it with an access key so I go

232
00:09:36,899 --> 00:09:38,459
through the the web console here create

233
00:09:38,459 --> 00:09:40,440
the user and then it gives me this

234
00:09:40,440 --> 00:09:43,860
access key ID which is more or less kind

235
00:09:43,860 --> 00:09:45,720
of a it's not a username but it's it's

236
00:09:45,720 --> 00:09:48,120
similar a similar concept and a secret

237
00:09:48,120 --> 00:09:50,160
access key which is more or less a

238
00:09:50,160 --> 00:09:52,860
password it's long so I guess we don't

239
00:09:52,860 --> 00:09:55,320
call it a password we call it a key but

240
00:09:55,320 --> 00:09:58,380
anyway that's all you need to access AWS

241
00:09:58,380 --> 00:10:01,800
as this user shell now imagine if you

242
00:10:01,800 --> 00:10:03,779
had done this with a root account and

243
00:10:03,779 --> 00:10:05,100
then shared it in a presentation at

244
00:10:05,100 --> 00:10:06,240
kringlecon

245
00:10:06,240 --> 00:10:07,800
people across the internet could do

246
00:10:07,800 --> 00:10:10,500
whatever they want with your root

247
00:10:10,500 --> 00:10:11,519
credentials so we don't want to create

248
00:10:11,519 --> 00:10:13,440
keys for the root account but for for

249
00:10:13,440 --> 00:10:15,899
lower privileged accounts it's generally

250
00:10:15,899 --> 00:10:18,260
okay

251
00:10:18,300 --> 00:10:19,560
so

252
00:10:19,560 --> 00:10:23,279
what can my shell user do well it

253
00:10:23,279 --> 00:10:25,019
depends on what those policy documents

254
00:10:25,019 --> 00:10:26,700
say and there are different flavors of

255
00:10:26,700 --> 00:10:29,459
policy document the first kind is AWS

256
00:10:29,459 --> 00:10:31,800
managed this is where AWS has created

257
00:10:31,800 --> 00:10:35,580
some example policies for maybe a a log

258
00:10:35,580 --> 00:10:38,880
user or a backup operator or a certain

259
00:10:38,880 --> 00:10:40,080
Developers

260
00:10:40,080 --> 00:10:42,480
and these are policy documents managed

261
00:10:42,480 --> 00:10:44,279
policy documents that we can assign to

262
00:10:44,279 --> 00:10:45,720
specific users or maybe it makes sense

263
00:10:45,720 --> 00:10:47,940
to assign them to a resource if we

264
00:10:47,940 --> 00:10:49,800
create our own managed policies like

265
00:10:49,800 --> 00:10:51,899
this these are customer managed policies

266
00:10:51,899 --> 00:10:54,540
and we can make our own backup operator

267
00:10:54,540 --> 00:10:55,920
policy

268
00:10:55,920 --> 00:10:58,260
and apply it to whoever needs that

269
00:10:58,260 --> 00:11:01,620
third type is an inline policy an inline

270
00:11:01,620 --> 00:11:04,380
policy is one that a user creates an

271
00:11:04,380 --> 00:11:06,540
organization creates and then applies to

272
00:11:06,540 --> 00:11:09,600
one specific Identity or resource so

273
00:11:09,600 --> 00:11:11,160
it's like a customer managed policy

274
00:11:11,160 --> 00:11:12,899
except it only lives in this one place

275
00:11:12,899 --> 00:11:16,140
and can't be applied to other entities

276
00:11:16,140 --> 00:11:19,200
now what makes up a a statement what

277
00:11:19,200 --> 00:11:22,560
makes up a policy document well

278
00:11:22,560 --> 00:11:23,820
it's going to look something like this

279
00:11:23,820 --> 00:11:25,800
again we're in Json Lan right curly

280
00:11:25,800 --> 00:11:28,800
braces square brackets quotes and uh and

281
00:11:28,800 --> 00:11:30,600
they always begin with this version up

282
00:11:30,600 --> 00:11:33,240
at the top there and then one or more

283
00:11:33,240 --> 00:11:35,820
statements here we have one statement

284
00:11:35,820 --> 00:11:38,040
the statement says I want to allow the

285
00:11:38,040 --> 00:11:39,899
effect of this statement is I want to

286
00:11:39,899 --> 00:11:43,860
allow Whoever has this policy to do some

287
00:11:43,860 --> 00:11:45,079
things

288
00:11:45,079 --> 00:11:47,820
who is doing this who is the the subject

289
00:11:47,820 --> 00:11:49,320
of this policy it depends where it's

290
00:11:49,320 --> 00:11:51,720
attached now the author of the policy

291
00:11:51,720 --> 00:11:54,000
who is this acting on in this case it's

292
00:11:54,000 --> 00:11:56,279
star everything so this is I'm going to

293
00:11:56,279 --> 00:11:58,800
allow someone to to interact with

294
00:11:58,800 --> 00:12:00,060
everything

295
00:12:00,060 --> 00:12:02,040
with a certain condition the condition

296
00:12:02,040 --> 00:12:05,220
here is only between December 1st 2022

297
00:12:05,220 --> 00:12:08,760
and January 10 2023. so this this policy

298
00:12:08,760 --> 00:12:11,880
only will do anything is only useful in

299
00:12:11,880 --> 00:12:15,120
that roughly 41 day time period

300
00:12:15,120 --> 00:12:17,519
now what can someone do with this policy

301
00:12:17,519 --> 00:12:20,040
well they can list all my buckets so

302
00:12:20,040 --> 00:12:22,200
they can get a listing of the S3 buckets

303
00:12:22,200 --> 00:12:25,560
that uh that they have access to right

304
00:12:25,560 --> 00:12:27,180
so that is an example permissions

305
00:12:27,180 --> 00:12:30,240
document let's look at another

306
00:12:30,240 --> 00:12:33,000
this one gets a bit more complex here we

307
00:12:33,000 --> 00:12:35,459
again have an allow and it's going to

308
00:12:35,459 --> 00:12:38,100
let us describe star so describe

309
00:12:38,100 --> 00:12:41,339
instances describe internet gateways

310
00:12:41,339 --> 00:12:44,040
whatever also get console star so get

311
00:12:44,040 --> 00:12:47,160
console output get console screenshots

312
00:12:47,160 --> 00:12:50,519
and in resource star so if you have this

313
00:12:50,519 --> 00:12:52,260
you're going to be able to do those

314
00:12:52,260 --> 00:12:54,420
functions those ec2 functions these are

315
00:12:54,420 --> 00:12:57,899
the ec2 services with anything

316
00:12:57,899 --> 00:13:00,180
additionally we're going to allow you to

317
00:13:00,180 --> 00:13:03,240
run instances in ec2 for these these

318
00:13:03,240 --> 00:13:05,579
types of resources so another allow type

319
00:13:05,579 --> 00:13:07,860
policy

320
00:13:07,860 --> 00:13:10,860
what if we do something else instead

321
00:13:10,860 --> 00:13:12,480
what if rather than just explicitly

322
00:13:12,480 --> 00:13:14,579
saying this person this identity can do

323
00:13:14,579 --> 00:13:16,139
this thing with this resource what if we

324
00:13:16,139 --> 00:13:17,459
say

325
00:13:17,459 --> 00:13:19,860
you are allowed to assume certain roles

326
00:13:19,860 --> 00:13:23,579
so you are maybe a a new employee here

327
00:13:23,579 --> 00:13:25,380
at the at the North Pole and you need to

328
00:13:25,380 --> 00:13:27,839
be able to help with with kringlecon5

329
00:13:27,839 --> 00:13:31,380
you're here at Helena hack 2022

330
00:13:31,380 --> 00:13:33,240
we're going to allow you to assume the

331
00:13:33,240 --> 00:13:34,980
role of any

332
00:13:34,980 --> 00:13:38,519
resource that is tagged with project hhc

333
00:13:38,519 --> 00:13:40,920
2022 so we're going to allow you to

334
00:13:40,920 --> 00:13:45,300
assume role for any Resource as long as

335
00:13:45,300 --> 00:13:49,260
It Is Tag hhc 2022 so maybe we have a

336
00:13:49,260 --> 00:13:52,260
terminal or some some crazy elevator

337
00:13:52,260 --> 00:13:54,300
that we need you to impersonate to do

338
00:13:54,300 --> 00:13:55,500
some testing

339
00:13:55,500 --> 00:13:58,620
this when attached to your identity will

340
00:13:58,620 --> 00:14:00,420
allow you to assume the roles of those

341
00:14:00,420 --> 00:14:03,300
resources and then see you know how they

342
00:14:03,300 --> 00:14:04,860
work

343
00:14:04,860 --> 00:14:06,899
on the other side of that

344
00:14:06,899 --> 00:14:09,899
is the pass rule let's say you have

345
00:14:09,899 --> 00:14:12,620
certain abilities you can

346
00:14:12,620 --> 00:14:15,779
you can read S3 buckets or different

347
00:14:15,779 --> 00:14:17,459
types of logs

348
00:14:17,459 --> 00:14:20,519
we want you to be able to pass that role

349
00:14:20,519 --> 00:14:22,740
in you know for whatever resource

350
00:14:22,740 --> 00:14:26,519
specifically to cloudwatch so you want

351
00:14:26,519 --> 00:14:29,279
to uh maybe maybe this is to enable some

352
00:14:29,279 --> 00:14:30,720
security function right you want to be

353
00:14:30,720 --> 00:14:32,339
able to track different things going on

354
00:14:32,339 --> 00:14:38,040
Via cloudwatch so you are allowing users

355
00:14:38,040 --> 00:14:40,019
you're allowing identities to pass roll

356
00:14:40,019 --> 00:14:41,820
to pass their privileges onto the cloud

357
00:14:41,820 --> 00:14:43,920
watch service so it can keep an eye on

358
00:14:43,920 --> 00:14:45,660
the things that they have access to so

359
00:14:45,660 --> 00:14:48,120
assume role is when you when you pull in

360
00:14:48,120 --> 00:14:51,120
access to some other resource and a pass

361
00:14:51,120 --> 00:14:52,920
role is when you give that access to

362
00:14:52,920 --> 00:14:55,399
another resource

363
00:14:55,399 --> 00:14:58,680
all right let's get a little weirder so

364
00:14:58,680 --> 00:15:01,079
first what if there's an allow and a

365
00:15:01,079 --> 00:15:04,320
deny here's an allow it is for getting

366
00:15:04,320 --> 00:15:06,600
S3 objects anywhere so I can download

367
00:15:06,600 --> 00:15:08,339
all the things out of out of the buckets

368
00:15:08,339 --> 00:15:10,620
that's great maybe I can't list them but

369
00:15:10,620 --> 00:15:13,019
if I know what they are I can get them

370
00:15:13,019 --> 00:15:14,940
at the same time though I have a deny

371
00:15:14,940 --> 00:15:19,139
for S3 buckets when the project is

372
00:15:19,139 --> 00:15:22,139
marked Santa's tool so with this policy

373
00:15:22,139 --> 00:15:24,240
here with these two statements I can get

374
00:15:24,240 --> 00:15:27,000
anything except things tagged as Santa's

375
00:15:27,000 --> 00:15:29,240
tools

376
00:15:29,639 --> 00:15:33,420
so far we've had actions this is our

377
00:15:33,420 --> 00:15:36,899
first not action it looks strange it is

378
00:15:36,899 --> 00:15:41,760
strange what this is saying is not that

379
00:15:41,760 --> 00:15:45,000
we're denying S3 access is that we are

380
00:15:45,000 --> 00:15:47,459
allowing everything but S3 access so

381
00:15:47,459 --> 00:15:50,579
with this policy attached to a user they

382
00:15:50,579 --> 00:15:53,579
could now perform all IAM functions all

383
00:15:53,579 --> 00:15:56,459
Lambda functions all whatever but they

384
00:15:56,459 --> 00:15:59,279
just can't do S3 functions this is a

385
00:15:59,279 --> 00:16:01,079
really weird and dangerous concept that

386
00:16:01,079 --> 00:16:04,260
not only does AWS not recommend

387
00:16:04,260 --> 00:16:08,220
but also hacking tools here's pacu some

388
00:16:08,220 --> 00:16:09,660
of the uh some of the help text and pack

389
00:16:09,660 --> 00:16:11,699
you saying yeah not actions are really

390
00:16:11,699 --> 00:16:13,260
strange if we see any of these we're

391
00:16:13,260 --> 00:16:14,699
just going to flag them for you and you

392
00:16:14,699 --> 00:16:16,920
can you can kind of poke them another

393
00:16:16,920 --> 00:16:18,779
tool a security auditing tool Scout

394
00:16:18,779 --> 00:16:20,760
Suite when it sees not actions with

395
00:16:20,760 --> 00:16:22,800
allow it says uh yeah there's a

396
00:16:22,800 --> 00:16:24,120
non-action with allow this is probably

397
00:16:24,120 --> 00:16:26,519
bad go ahead and take a look and let let

398
00:16:26,519 --> 00:16:29,339
the uh let the individual know

399
00:16:29,339 --> 00:16:32,100
so not actions really weird really

400
00:16:32,100 --> 00:16:33,480
strange

401
00:16:33,480 --> 00:16:35,820
all right so let's go to the CLI here

402
00:16:35,820 --> 00:16:38,100
for a minute and just and play around a

403
00:16:38,100 --> 00:16:40,440
little bit with uh with how that goes so

404
00:16:40,440 --> 00:16:43,380
let's start by doing something like AWS

405
00:16:43,380 --> 00:16:46,320
configure now this is what we do to

406
00:16:46,320 --> 00:16:49,500
initially set up our CLI so it knows who

407
00:16:49,500 --> 00:16:51,600
we are so we've gone in we've created

408
00:16:51,600 --> 00:16:53,759
keys for for that that username shell

409
00:16:53,759 --> 00:16:55,560
and then we can just copy and paste them

410
00:16:55,560 --> 00:16:57,839
in here

411
00:16:57,839 --> 00:17:00,240
and and then I can set configuration

412
00:17:00,240 --> 00:17:01,860
things like all right I want to use us

413
00:17:01,860 --> 00:17:04,140
yeast one because that's kind of close

414
00:17:04,140 --> 00:17:06,540
to where I'm at and then all right I

415
00:17:06,540 --> 00:17:09,240
should be all set now here in my DOT AWS

416
00:17:09,240 --> 00:17:11,339
directory

417
00:17:11,339 --> 00:17:12,900
I see

418
00:17:12,900 --> 00:17:14,760
I config and credential clicking pad

419
00:17:14,760 --> 00:17:18,480
config and this is uh all right Us East

420
00:17:18,480 --> 00:17:20,459
one so by default for region because

421
00:17:20,459 --> 00:17:21,900
about resources it's all live in

422
00:17:21,900 --> 00:17:23,099
different regions it's going to default

423
00:17:23,099 --> 00:17:25,500
to us yeast one if I'd pack credentials

424
00:17:25,500 --> 00:17:27,000
I can see the stuff that I just put in

425
00:17:27,000 --> 00:17:29,880
there so the access key ID and the X AWS

426
00:17:29,880 --> 00:17:32,299
secret access key so cool

427
00:17:32,299 --> 00:17:36,360
now the the who am I in Windows and in

428
00:17:36,360 --> 00:17:38,760
bash is who am I and it tells you oh hey

429
00:17:38,760 --> 00:17:41,220
you're Chris in AWS

430
00:17:41,220 --> 00:17:45,660
it is AWS STS get color identity

431
00:17:45,660 --> 00:17:47,160
now I'm going to run this through a

432
00:17:47,160 --> 00:17:48,660
little function here to obfuscate what

433
00:17:48,660 --> 00:17:51,179
comes out of it but you can see here I

434
00:17:51,179 --> 00:17:53,820
am this user ID that's interesting I'm

435
00:17:53,820 --> 00:17:57,240
this username so I am that shell user my

436
00:17:57,240 --> 00:17:58,799
little obfuscation function changed my

437
00:17:58,799 --> 00:18:01,559
account number to to this

438
00:18:01,559 --> 00:18:02,220
um

439
00:18:02,220 --> 00:18:04,440
those aren't exactly like a password but

440
00:18:04,440 --> 00:18:05,580
it's still not supposed to be public

441
00:18:05,580 --> 00:18:07,559
information so as we go through this

442
00:18:07,559 --> 00:18:10,919
forgive my security guy skepticism of

443
00:18:10,919 --> 00:18:12,900
the of the internet but I'm gonna I'm

444
00:18:12,900 --> 00:18:15,059
gonna obfuscate my account ID as we as

445
00:18:15,059 --> 00:18:16,080
we go through

446
00:18:16,080 --> 00:18:18,840
all right so we can also uh now that we

447
00:18:18,840 --> 00:18:19,980
know the word shell we can say all right

448
00:18:19,980 --> 00:18:21,900
what access do I have so I want to use

449
00:18:21,900 --> 00:18:25,200
the IAM service AWS IAM if I want I can

450
00:18:25,200 --> 00:18:27,240
I can help and I can see all the

451
00:18:27,240 --> 00:18:29,340
different commands available under the

452
00:18:29,340 --> 00:18:31,919
IAM service that's cool

453
00:18:31,919 --> 00:18:33,660
but in this case I know I Want To Do

454
00:18:33,660 --> 00:18:35,900
List attached

455
00:18:35,900 --> 00:18:38,880
user policies

456
00:18:38,880 --> 00:18:42,360
and this is asking hey for all the

457
00:18:42,360 --> 00:18:44,940
managed policies available

458
00:18:44,940 --> 00:18:47,520
which ones are attached

459
00:18:47,520 --> 00:18:49,860
to this user

460
00:18:49,860 --> 00:18:51,299
and it'll search through and say oh

461
00:18:51,299 --> 00:18:53,039
actually some great ones you can do all

462
00:18:53,039 --> 00:18:55,260
kinds of crazy cool things that's neat

463
00:18:55,260 --> 00:18:56,820
awesome

464
00:18:56,820 --> 00:18:59,280
we can also do a slightly different

465
00:18:59,280 --> 00:19:01,440
command list user policies this looks

466
00:19:01,440 --> 00:19:03,660
for inline policies and in this case we

467
00:19:03,660 --> 00:19:05,340
don't have any inline policies that

468
00:19:05,340 --> 00:19:08,760
apply directly here to Shell

469
00:19:08,760 --> 00:19:12,560
so all right how about AWS ec2 describe

470
00:19:12,560 --> 00:19:15,780
[Music]

471
00:19:15,780 --> 00:19:17,220
it's always harder to type when people

472
00:19:17,220 --> 00:19:19,260
are watching

473
00:19:19,260 --> 00:19:20,640
and I'm going to run this through

474
00:19:20,640 --> 00:19:23,039
obfuscate as well

475
00:19:23,039 --> 00:19:25,440
and bang I got a huge blob of Json back

476
00:19:25,440 --> 00:19:28,020
telling me all about my instances now in

477
00:19:28,020 --> 00:19:30,240
this case I I'm just really interested

478
00:19:30,240 --> 00:19:34,260
in let's say the public IPS

479
00:19:34,260 --> 00:19:36,360
and here we see I have a public IP

480
00:19:36,360 --> 00:19:38,460
address so if I want

481
00:19:38,460 --> 00:19:41,240
I could SSH

482
00:19:41,240 --> 00:19:44,580
ec2user at that IP address

483
00:19:44,580 --> 00:19:46,919
with this certain key

484
00:19:46,919 --> 00:19:49,620
that I generated in the web console

485
00:19:49,620 --> 00:19:51,000
and then I can connect up to that

486
00:19:51,000 --> 00:19:53,340
instance great

487
00:19:53,340 --> 00:19:57,720
over the data plane all right uh how

488
00:19:57,720 --> 00:20:02,340
about S3 buckets well I can AWS S3 API

489
00:20:02,340 --> 00:20:04,919
and list buckets so I don't know what

490
00:20:04,919 --> 00:20:06,419
buckets I have I just want to see what's

491
00:20:06,419 --> 00:20:08,820
out there and it says oh you have this

492
00:20:08,820 --> 00:20:10,919
one called the holiday hack bucket 2022.

493
00:20:10,919 --> 00:20:13,919
interesting thing by the way those names

494
00:20:13,919 --> 00:20:16,260
have to be globally unique so I tried to

495
00:20:16,260 --> 00:20:18,360
create a bucket called holiday bucket

496
00:20:18,360 --> 00:20:20,820
and AWS said sorry you can't do that

497
00:20:20,820 --> 00:20:23,520
there already is one so this is part of

498
00:20:23,520 --> 00:20:25,140
the reason why exposed buckets are such

499
00:20:25,140 --> 00:20:26,820
an issue if you can guess a name of a

500
00:20:26,820 --> 00:20:28,919
bucket and it's open then you're going

501
00:20:28,919 --> 00:20:30,320
to be able to

502
00:20:30,320 --> 00:20:33,720
uh to access the things in there

503
00:20:33,720 --> 00:20:37,440
all right so anyways S3 LS so uh I'm

504
00:20:37,440 --> 00:20:40,260
sorry uh listing buckets is an S3 API

505
00:20:40,260 --> 00:20:42,000
service function the rest that we're

506
00:20:42,000 --> 00:20:44,700
going to use are S3 service functions

507
00:20:44,700 --> 00:20:46,740
um that's just kind of how it goes so I

508
00:20:46,740 --> 00:20:48,660
want to list uh what files are in that

509
00:20:48,660 --> 00:20:49,740
bucket

510
00:20:49,740 --> 00:20:51,480
I get nothing back there are no files in

511
00:20:51,480 --> 00:20:53,700
that bucket I can just copy things to

512
00:20:53,700 --> 00:20:55,919
that since I have you know S3 star

513
00:20:55,919 --> 00:20:59,340
permissions so I'm going to S3 copy this

514
00:20:59,340 --> 00:21:03,660
file I have here regions.txt up into S3

515
00:21:03,660 --> 00:21:05,640
that name

516
00:21:05,640 --> 00:21:09,059
and then bang it it uploaded the file so

517
00:21:09,059 --> 00:21:10,799
I can go back to my list function or my

518
00:21:10,799 --> 00:21:13,440
list command and I see all right my

519
00:21:13,440 --> 00:21:18,000
my 203 byte regions.txt went from my

520
00:21:18,000 --> 00:21:20,220
local system up into the cloud

521
00:21:20,220 --> 00:21:22,080
so if I accidentally delete my regions

522
00:21:22,080 --> 00:21:23,400
file

523
00:21:23,400 --> 00:21:30,360
then I could AWS S3 copy from the cloud

524
00:21:30,360 --> 00:21:33,360
down to localhost

525
00:21:33,360 --> 00:21:35,640
and then I can cap my re my regions file

526
00:21:35,640 --> 00:21:39,080
oops not that one

527
00:21:39,840 --> 00:21:42,539
oh you know what I didn't grab the file

528
00:21:42,539 --> 00:21:45,240
name how about that regions.txt copy

529
00:21:45,240 --> 00:21:46,679
that locally

530
00:21:46,679 --> 00:21:49,679
there we go now I can cat regions and

531
00:21:49,679 --> 00:21:50,940
pipe it through all cat to make it

532
00:21:50,940 --> 00:21:52,740
beautiful and there we go all right so

533
00:21:52,740 --> 00:21:54,419
getting back we're out of time but if

534
00:21:54,419 --> 00:21:56,700
you'd like to learn more about the AWS

535
00:21:56,700 --> 00:21:59,159
CLI I recommend first helping Alabaster

536
00:21:59,159 --> 00:22:00,600
he could really use your help with those

537
00:22:00,600 --> 00:22:02,820
terminals please please give Alabaster

538
00:22:02,820 --> 00:22:04,620
next I would recommend just building

539
00:22:04,620 --> 00:22:07,380
something play around open the web

540
00:22:07,380 --> 00:22:09,360
console create some instances create

541
00:22:09,360 --> 00:22:12,299
some policies some users and and just

542
00:22:12,299 --> 00:22:14,340
see what you can make once you've made

543
00:22:14,340 --> 00:22:16,380
something try Pacquiao or Scout Suite

544
00:22:16,380 --> 00:22:18,179
run those tools against your

545
00:22:18,179 --> 00:22:21,600
infrastructure your your iaas candy up

546
00:22:21,600 --> 00:22:25,020
there and see what comes out of it see

547
00:22:25,020 --> 00:22:26,880
what me what mistakes maybe you made or

548
00:22:26,880 --> 00:22:28,559
things you could do differently

549
00:22:28,559 --> 00:22:31,260
lastly you can take a class right AWS

550
00:22:31,260 --> 00:22:32,940
has lots of classes and certifications

551
00:22:32,940 --> 00:22:35,100
and so does Sans I would love to have

552
00:22:35,100 --> 00:22:37,440
you in the classroom sometime so check

553
00:22:37,440 --> 00:22:39,780
them out and see what fits your needs

554
00:22:39,780 --> 00:22:41,460
and where you're trying to go

555
00:22:41,460 --> 00:22:43,020
with that thank you very much for coming

556
00:22:43,020 --> 00:22:44,340
up to the North Pole thanks for

557
00:22:44,340 --> 00:22:47,039
listening to all I want for AWS is allow

558
00:22:47,039 --> 00:22:50,960
star have a great con

559
00:22:54,180 --> 00:23:00,819
[Music]

