1
00:00:05,800 --> 00:00:11,318
[Music]

2
00:00:12,240 --> 00:00:14,320
hi there my name is andy and thank you

3
00:00:14,320 --> 00:00:16,320
so much for stopping by to listening on

4
00:00:16,320 --> 00:00:18,640
my talk here on how you can create your

5
00:00:18,640 --> 00:00:20,960
very own naughty lists in order to

6
00:00:20,960 --> 00:00:23,920
automate security response

7
00:00:23,920 --> 00:00:26,000
a little about me before we start i've

8
00:00:26,000 --> 00:00:28,080
been working on a variety of information

9
00:00:28,080 --> 00:00:30,320
security roles over the past 15 years or

10
00:00:30,320 --> 00:00:33,920
so most recently as a security architect

11
00:00:33,920 --> 00:00:35,840
and whilst this is the first year that i

12
00:00:35,840 --> 00:00:37,440
have the honor of presenting at

13
00:00:37,440 --> 00:00:39,760
kringlecon i've been an attendee myself

14
00:00:39,760 --> 00:00:41,680
for the past few years

15
00:00:41,680 --> 00:00:44,399
and if my voice sounds a little familiar

16
00:00:44,399 --> 00:00:46,160
well maybe you've watched some of my

17
00:00:46,160 --> 00:00:48,239
video walkthroughs that i've created for

18
00:00:48,239 --> 00:00:50,239
previous holiday hack challenges and

19
00:00:50,239 --> 00:00:52,640
published on youtube

20
00:00:52,640 --> 00:00:54,879
but on to today's topic we start with

21
00:00:54,879 --> 00:00:57,520
the perennial problem of passwords

22
00:00:57,520 --> 00:00:58,960
if you were to see something a little

23
00:00:58,960 --> 00:01:00,960
like this in a log file it should be

24
00:01:00,960 --> 00:01:02,879
pretty clear that someone's trying to

25
00:01:02,879 --> 00:01:05,840
brute force their way into an account

26
00:01:05,840 --> 00:01:07,520
and the traditional approach that we'd

27
00:01:07,520 --> 00:01:09,840
use to deal with this type of attack is

28
00:01:09,840 --> 00:01:12,000
to lock user accounts after a certain

29
00:01:12,000 --> 00:01:14,159
number of failed logins

30
00:01:14,159 --> 00:01:16,320
now whilst that does indeed prevent an

31
00:01:16,320 --> 00:01:18,799
attacker from then accessing an account

32
00:01:18,799 --> 00:01:20,479
if they do eventually guess the right

33
00:01:20,479 --> 00:01:22,560
password it's unfortunately a really

34
00:01:22,560 --> 00:01:24,720
really bad user experience

35
00:01:24,720 --> 00:01:26,720
after all we're also locking out the

36
00:01:26,720 --> 00:01:29,280
genuine user as well

37
00:01:29,280 --> 00:01:30,720
this approach can also not be

38
00:01:30,720 --> 00:01:32,640
particularly effective against password

39
00:01:32,640 --> 00:01:35,119
spraying attacks where an attacker is

40
00:01:35,119 --> 00:01:37,439
trying to log into a very wide number of

41
00:01:37,439 --> 00:01:39,680
different user accounts using just one

42
00:01:39,680 --> 00:01:42,880
or two particularly weak passwords

43
00:01:42,880 --> 00:01:44,960
so instead of punishing the victim

44
00:01:44,960 --> 00:01:46,240
wouldn't it be so much better if we

45
00:01:46,240 --> 00:01:48,320
could punish the attacker

46
00:01:48,320 --> 00:01:50,320
after all we know their ip address

47
00:01:50,320 --> 00:01:52,479
because it's here in the log files

48
00:01:52,479 --> 00:01:55,600
and firewalls are a thing that exists so

49
00:01:55,600 --> 00:01:58,079
can we not just find some clever way of

50
00:01:58,079 --> 00:02:00,399
converting these failed logins into

51
00:02:00,399 --> 00:02:02,399
firewall blocks to prevent any more

52
00:02:02,399 --> 00:02:04,399
malicious traffic from an offending ip

53
00:02:04,399 --> 00:02:05,680
address

54
00:02:05,680 --> 00:02:07,600
well that's exactly what fail to ban

55
00:02:07,600 --> 00:02:08,399
does

56
00:02:08,399 --> 00:02:11,038
it reads in log files and uses pattern

57
00:02:11,038 --> 00:02:13,360
matching to try and identify which lines

58
00:02:13,360 --> 00:02:15,760
of those log files relate to potentially

59
00:02:15,760 --> 00:02:17,840
malicious activity

60
00:02:17,840 --> 00:02:20,400
if the activity breaches a certain limit

61
00:02:20,400 --> 00:02:23,040
a ban is triggered typically adding the

62
00:02:23,040 --> 00:02:25,200
offending ip address to a firewall block

63
00:02:25,200 --> 00:02:28,239
list for a certain period of time

64
00:02:28,239 --> 00:02:30,480
it's important here to note that we only

65
00:02:30,480 --> 00:02:32,879
want to trigger a ban if there is a

66
00:02:32,879 --> 00:02:35,200
certain level of malicious activity

67
00:02:35,200 --> 00:02:37,280
after all we don't want to block genuine

68
00:02:37,280 --> 00:02:39,680
users each time that they accidentally

69
00:02:39,680 --> 00:02:42,640
fat finger their password

70
00:02:42,640 --> 00:02:44,560
now there's plenty of guides already out

71
00:02:44,560 --> 00:02:46,640
there on the internet that explain how

72
00:02:46,640 --> 00:02:49,760
to set up a basic fail to ban instance

73
00:02:49,760 --> 00:02:52,879
in this case a jail to protect the ssh

74
00:02:52,879 --> 00:02:55,519
service you just need to create a config

75
00:02:55,519 --> 00:02:57,920
file in the right location with these

76
00:02:57,920 --> 00:02:59,920
parameters

77
00:02:59,920 --> 00:03:02,000
the most important is enabled equals

78
00:03:02,000 --> 00:03:04,480
true otherwise fail to ban won't start

79
00:03:04,480 --> 00:03:06,720
this particular jail

80
00:03:06,720 --> 00:03:09,760
the others relate to how much activity

81
00:03:09,760 --> 00:03:12,480
constitutes a ban and for how long a ban

82
00:03:12,480 --> 00:03:13,760
should last

83
00:03:13,760 --> 00:03:16,400
in this case if there are more than 10

84
00:03:16,400 --> 00:03:18,879
failed logins from the same source ip

85
00:03:18,879 --> 00:03:21,599
address within a 15 minute period

86
00:03:21,599 --> 00:03:23,680
then that ip address should be blocked

87
00:03:23,680 --> 00:03:27,200
for a period of 1 hour

88
00:03:27,200 --> 00:03:29,280
now the precise values that you pick for

89
00:03:29,280 --> 00:03:31,519
these parameters is going to depend on

90
00:03:31,519 --> 00:03:33,920
your particular use cases and the level

91
00:03:33,920 --> 00:03:36,319
of risk that you want to take on

92
00:03:36,319 --> 00:03:37,840
the tighter that you make these

93
00:03:37,840 --> 00:03:40,799
parameters the more malicious activity

94
00:03:40,799 --> 00:03:43,120
that you're likely to block but also you

95
00:03:43,120 --> 00:03:45,680
may start to block some genuine users as

96
00:03:45,680 --> 00:03:47,360
well

97
00:03:47,360 --> 00:03:49,440
conversely if you loosen these

98
00:03:49,440 --> 00:03:51,760
parameters you're less likely to have

99
00:03:51,760 --> 00:03:54,319
false positives blocking genuine users

100
00:03:54,319 --> 00:03:56,480
but also you're less likely to detect

101
00:03:56,480 --> 00:03:59,519
some of the low and slow activity

102
00:03:59,519 --> 00:04:02,159
by an attacker

103
00:04:02,159 --> 00:04:04,720
let's see this in action

104
00:04:04,720 --> 00:04:07,280
i've got this exact config configured on

105
00:04:07,280 --> 00:04:09,920
this server here

106
00:04:09,920 --> 00:04:12,000
after saving the config we must restart

107
00:04:12,000 --> 00:04:13,840
the fail to ban service for that config

108
00:04:13,840 --> 00:04:15,610
to take effect

109
00:04:15,610 --> 00:04:17,279
[Music]

110
00:04:17,279 --> 00:04:19,440
in the fail to ban log file we can

111
00:04:19,440 --> 00:04:21,680
indeed see that this jail has now been

112
00:04:21,680 --> 00:04:24,160
started and with the parameters that we

113
00:04:24,160 --> 00:04:28,240
specified in the config file

114
00:04:28,240 --> 00:04:29,680
on the machine on the left i'm

115
00:04:29,680 --> 00:04:31,919
simulating an attacker's behavior

116
00:04:31,919 --> 00:04:35,199
in this case using the hydra tool to

117
00:04:35,199 --> 00:04:38,479
simulate a password spraying attack

118
00:04:38,479 --> 00:04:40,880
this command will attempt to log in over

119
00:04:40,880 --> 00:04:43,759
ssh to the machine on the right side of

120
00:04:43,759 --> 00:04:45,120
the screen

121
00:04:45,120 --> 00:04:48,240
using the list of usernames provided in

122
00:04:48,240 --> 00:04:49,919
usernames.txt

123
00:04:49,919 --> 00:04:52,960
and trying the password winter 2021 for

124
00:04:52,960 --> 00:04:55,199
each user

125
00:04:55,199 --> 00:04:57,199
hydra starts up and initiates this

126
00:04:57,199 --> 00:04:59,600
attack but after a while it just seems

127
00:04:59,600 --> 00:05:01,840
to hang

128
00:05:01,840 --> 00:05:04,320
back on the target server we can see in

129
00:05:04,320 --> 00:05:06,880
the fail to ban log file that it has

130
00:05:06,880 --> 00:05:08,800
successfully identified the malicious

131
00:05:08,800 --> 00:05:11,680
activity coming from this ip address and

132
00:05:11,680 --> 00:05:14,960
has implemented a ban

133
00:05:15,120 --> 00:05:17,120
we can verify this ban has indeed

134
00:05:17,120 --> 00:05:19,919
resulted in a firewall block by

135
00:05:19,919 --> 00:05:22,719
examining ip

136
00:05:22,840 --> 00:05:26,080
tables so that was pretty easy right

137
00:05:26,080 --> 00:05:28,160
we just needed to create one config file

138
00:05:28,160 --> 00:05:30,800
with a few lines and we had our desired

139
00:05:30,800 --> 00:05:32,160
effect

140
00:05:32,160 --> 00:05:34,880
but in reality our config file was just

141
00:05:34,880 --> 00:05:36,960
laid on top of a whole bunch of

142
00:05:36,960 --> 00:05:38,800
additional config that comes

143
00:05:38,800 --> 00:05:41,759
pre-packaged as part of fail to ban

144
00:05:41,759 --> 00:05:45,199
in particular the gel.com file

145
00:05:45,199 --> 00:05:47,120
this contains the configuration for a

146
00:05:47,120 --> 00:05:49,199
whole bunch of different jails that will

147
00:05:49,199 --> 00:05:52,080
protect a bunch of different services

148
00:05:52,080 --> 00:05:54,320
each of those configurations include

149
00:05:54,320 --> 00:05:56,639
parameters to define which log files

150
00:05:56,639 --> 00:05:58,240
should be read

151
00:05:58,240 --> 00:06:01,120
the regular expressions to define

152
00:06:01,120 --> 00:06:03,759
what type of entry in each of those log

153
00:06:03,759 --> 00:06:06,319
files should be deemed to be potentially

154
00:06:06,319 --> 00:06:07,680
malicious

155
00:06:07,680 --> 00:06:09,600
a set of parameters to define the

156
00:06:09,600 --> 00:06:12,400
threshold of what level of bad activity

157
00:06:12,400 --> 00:06:14,160
should trigger a ban

158
00:06:14,160 --> 00:06:17,120
and what actions to take in the event of

159
00:06:17,120 --> 00:06:20,240
an offending ip address breaching those

160
00:06:20,240 --> 00:06:22,880
threshold limits

161
00:06:22,880 --> 00:06:25,360
the filters and the actions are actually

162
00:06:25,360 --> 00:06:28,080
referenced from separate config files

163
00:06:28,080 --> 00:06:30,960
that exist within the filter.d and

164
00:06:30,960 --> 00:06:34,400
action.d subfolders within etc fail to

165
00:06:34,400 --> 00:06:34,810
ban

166
00:06:34,810 --> 00:06:36,479
[Music]

167
00:06:36,479 --> 00:06:38,720
we can examine these folders to see what

168
00:06:38,720 --> 00:06:40,720
other options are available to us just

169
00:06:40,720 --> 00:06:41,810
out of the box

170
00:06:41,810 --> 00:06:43,199
[Music]

171
00:06:43,199 --> 00:06:46,400
within the filter.d folder we can see

172
00:06:46,400 --> 00:06:49,120
that there are configurations here to

173
00:06:49,120 --> 00:06:51,759
monitor a whole bunch of different web

174
00:06:51,759 --> 00:06:53,199
servers

175
00:06:53,199 --> 00:06:55,360
we've got email servers we've got

176
00:06:55,360 --> 00:06:57,280
database servers and a whole bunch of

177
00:06:57,280 --> 00:06:59,680
other stuff as well

178
00:06:59,680 --> 00:07:02,800
also within the action.d folder not only

179
00:07:02,800 --> 00:07:05,919
do we have the action to take to add an

180
00:07:05,919 --> 00:07:09,280
ip address to an iptables block list but

181
00:07:09,280 --> 00:07:11,120
we've got commands for some other

182
00:07:11,120 --> 00:07:13,840
firewall technologies here as well

183
00:07:13,840 --> 00:07:16,319
we've also got commands to send an email

184
00:07:16,319 --> 00:07:18,400
to a system administrator to alert them

185
00:07:18,400 --> 00:07:19,759
to a ban

186
00:07:19,759 --> 00:07:22,639
or we've got actions here to submit an

187
00:07:22,639 --> 00:07:24,880
offending ip address to a public block

188
00:07:24,880 --> 00:07:27,120
list as well

189
00:07:27,120 --> 00:07:29,520
but what happens if the application you

190
00:07:29,520 --> 00:07:31,840
want to monitor isn't already listed in

191
00:07:31,840 --> 00:07:34,400
that filter.d folder

192
00:07:34,400 --> 00:07:36,400
or what if you want to perform some kind

193
00:07:36,400 --> 00:07:38,960
of action that isn't already existing in

194
00:07:38,960 --> 00:07:40,639
action.d

195
00:07:40,639 --> 00:07:42,720
well the great thing is you can create

196
00:07:42,720 --> 00:07:45,520
your own filters gels and actions for

197
00:07:45,520 --> 00:07:47,919
your custom applications

198
00:07:47,919 --> 00:07:49,680
let's start with creating a custom

199
00:07:49,680 --> 00:07:50,720
filter

200
00:07:50,720 --> 00:07:53,039
it's as simple as creating a file in the

201
00:07:53,039 --> 00:07:56,160
filter.d folder that follows a certain

202
00:07:56,160 --> 00:07:57,360
format

203
00:07:57,360 --> 00:07:58,400
the key definition

204
00:07:58,400 --> 00:08:01,360
is that of fail regex and this is the

205
00:08:01,360 --> 00:08:03,440
regular expression to match lines in a

206
00:08:03,440 --> 00:08:05,840
log file that relates to malicious

207
00:08:05,840 --> 00:08:07,440
activity

208
00:08:07,440 --> 00:08:09,680
the example on the screen here is a

209
00:08:09,680 --> 00:08:12,639
simplified version of the configuration

210
00:08:12,639 --> 00:08:15,599
for the dropbear ssh server

211
00:08:15,599 --> 00:08:18,240
it contains three particular formats of

212
00:08:18,240 --> 00:08:21,440
potentially malicious activity that may

213
00:08:21,440 --> 00:08:24,400
be logged in that log file

214
00:08:24,400 --> 00:08:26,240
a key parameter to include in these

215
00:08:26,240 --> 00:08:29,280
values is that of host in triangular

216
00:08:29,280 --> 00:08:30,560
brackets

217
00:08:30,560 --> 00:08:34,000
fail to ban uses this to know where in

218
00:08:34,000 --> 00:08:36,559
each individual log file entry it can

219
00:08:36,559 --> 00:08:38,958
find the attacker's ip address or

220
00:08:38,958 --> 00:08:40,958
hostname because of course it needs to

221
00:08:40,958 --> 00:08:42,640
be able to pick that out in order to

222
00:08:42,640 --> 00:08:45,519
take action on it later

223
00:08:45,519 --> 00:08:47,040
it's a similar story for creating a

224
00:08:47,040 --> 00:08:49,279
custom action we just need to create a

225
00:08:49,279 --> 00:08:52,399
file in the action.d folder

226
00:08:52,399 --> 00:08:54,399
some of the key parameters to set

227
00:08:54,399 --> 00:08:57,680
are action ban and action unban which

228
00:08:57,680 --> 00:09:00,160
are the commands to run in order to ban

229
00:09:00,160 --> 00:09:03,760
or unban a particular ip address

230
00:09:03,760 --> 00:09:05,920
now in some cases there may need to be

231
00:09:05,920 --> 00:09:09,680
some kind of preparation in order to set

232
00:09:09,680 --> 00:09:13,440
up a system to accept a ban or an unban

233
00:09:13,440 --> 00:09:16,240
so we have the additional definitions of

234
00:09:16,240 --> 00:09:19,200
action start and action stop

235
00:09:19,200 --> 00:09:21,200
these are the commands that are run when

236
00:09:21,200 --> 00:09:24,000
failed to ban first starts that jail

237
00:09:24,000 --> 00:09:27,760
or when fail to ban shuts down

238
00:09:27,760 --> 00:09:29,440
the example on the screen here hopefully

239
00:09:29,440 --> 00:09:31,360
brings this to life a little bit

240
00:09:31,360 --> 00:09:33,760
this is a simplified version of the

241
00:09:33,760 --> 00:09:35,839
action that's used to implement an

242
00:09:35,839 --> 00:09:38,399
iptables block

243
00:09:38,399 --> 00:09:41,519
the ban and the unban actions either add

244
00:09:41,519 --> 00:09:44,399
or remove the offending ip address from

245
00:09:44,399 --> 00:09:47,360
a chain called custom jail

246
00:09:47,360 --> 00:09:50,560
now that chain doesn't normally exist so

247
00:09:50,560 --> 00:09:53,440
therefore this configuration uses action

248
00:09:53,440 --> 00:09:56,000
start to define the commands to create

249
00:09:56,000 --> 00:09:59,360
that chain and link it into the input

250
00:09:59,360 --> 00:10:01,120
chain

251
00:10:01,120 --> 00:10:04,240
conversely action stop then undoes those

252
00:10:04,240 --> 00:10:07,200
activities to clean up after fail to ban

253
00:10:07,200 --> 00:10:09,600
shuts down

254
00:10:09,600 --> 00:10:12,079
a key thing to note here is that when

255
00:10:12,079 --> 00:10:14,959
the fail to ban service is shut down it

256
00:10:14,959 --> 00:10:17,920
will run the unban command for any of

257
00:10:17,920 --> 00:10:19,440
the ip addresses that are currently

258
00:10:19,440 --> 00:10:20,640
banned

259
00:10:20,640 --> 00:10:22,959
and then run the action stop commands to

260
00:10:22,959 --> 00:10:25,440
tidy up after it so effectively if you

261
00:10:25,440 --> 00:10:27,760
shut the fail to ban service down then

262
00:10:27,760 --> 00:10:30,839
any bans that currently exist are

263
00:10:30,839 --> 00:10:33,600
undone however when the fail to ban

264
00:10:33,600 --> 00:10:35,920
service is then started again

265
00:10:35,920 --> 00:10:38,880
it consults its internal database of

266
00:10:38,880 --> 00:10:41,360
currently banned ip addresses and will

267
00:10:41,360 --> 00:10:44,320
run the action ban command for any of

268
00:10:44,320 --> 00:10:47,040
those addresses where a ban is still in

269
00:10:47,040 --> 00:10:49,120
effect

270
00:10:49,120 --> 00:10:51,040
another thing to note here is that you

271
00:10:51,040 --> 00:10:52,640
don't necessarily have to fill out

272
00:10:52,640 --> 00:10:54,880
values for all of these parameters for

273
00:10:54,880 --> 00:10:57,519
example if you don't need any set up or

274
00:10:57,519 --> 00:10:59,600
tear down actions for your jail you can

275
00:10:59,600 --> 00:11:01,680
just completely emit action start and

276
00:11:01,680 --> 00:11:03,839
action stop

277
00:11:03,839 --> 00:11:06,160
to then actually use your custom filter

278
00:11:06,160 --> 00:11:08,160
or your custom action you need to create

279
00:11:08,160 --> 00:11:10,880
custom jail and again this is as simple

280
00:11:10,880 --> 00:11:13,200
as creating a new file in the jl.d

281
00:11:13,200 --> 00:11:15,680
folder that follows the format a little

282
00:11:15,680 --> 00:11:17,120
similar to the example on the screen

283
00:11:17,120 --> 00:11:18,800
here

284
00:11:18,800 --> 00:11:20,720
make sure that you've set enabled equals

285
00:11:20,720 --> 00:11:23,040
true otherwise fail to ban will not

286
00:11:23,040 --> 00:11:25,279
enable your jail

287
00:11:25,279 --> 00:11:27,440
you need to define log path to point to

288
00:11:27,440 --> 00:11:29,279
the log file that you want fail to band

289
00:11:29,279 --> 00:11:31,760
to monitor and you can set some custom

290
00:11:31,760 --> 00:11:34,959
parameters for the find time max retry

291
00:11:34,959 --> 00:11:36,800
and band time

292
00:11:36,800 --> 00:11:38,240
you also need to reference the

293
00:11:38,240 --> 00:11:40,000
particular filter that you want to be

294
00:11:40,000 --> 00:11:42,959
applied to the log path and also the

295
00:11:42,959 --> 00:11:44,480
list of actions that you want to be

296
00:11:44,480 --> 00:11:45,440
taken

297
00:11:45,440 --> 00:11:47,839
just make sure that your filter and your

298
00:11:47,839 --> 00:11:50,160
action names match the name of the

299
00:11:50,160 --> 00:11:53,040
config file that is created in action d

300
00:11:53,040 --> 00:11:56,240
and filter d folders

301
00:11:56,240 --> 00:11:58,480
one final word of warning though

302
00:11:58,480 --> 00:12:00,399
log files can include data that is

303
00:12:00,399 --> 00:12:02,560
supplied by an attacker

304
00:12:02,560 --> 00:12:05,120
for example in this regular expression

305
00:12:05,120 --> 00:12:08,079
there's a user-provided username that

306
00:12:08,079 --> 00:12:10,720
appears in the log entry

307
00:12:10,720 --> 00:12:13,279
what happens if a malicious user say

308
00:12:13,279 --> 00:12:14,519
from address

309
00:12:14,519 --> 00:12:16,160
1.2.3.4

310
00:12:16,160 --> 00:12:19,279
specifies their username as blah from

311
00:12:19,279 --> 00:12:21,839
9.8.7.6

312
00:12:21,839 --> 00:12:23,600
the resulting log entry looks a little

313
00:12:23,600 --> 00:12:24,639
like this

314
00:12:24,639 --> 00:12:26,480
however with the above regular

315
00:12:26,480 --> 00:12:28,800
expression the pattern matching stops

316
00:12:28,800 --> 00:12:30,160
here

317
00:12:30,160 --> 00:12:32,720
this means that fail-to-band thinks that

318
00:12:32,720 --> 00:12:35,120
this particular malicious log file entry

319
00:12:35,120 --> 00:12:39,639
has actually come from 9.8.7.

320
00:12:40,160 --> 00:12:42,160
with this particular regular expression

321
00:12:42,160 --> 00:12:44,800
an attacker can trick fail to ban into

322
00:12:44,800 --> 00:12:46,959
thinking that malicious activity is

323
00:12:46,959 --> 00:12:48,560
actually coming from a different ip

324
00:12:48,560 --> 00:12:49,440
address

325
00:12:49,440 --> 00:12:51,839
causing that ip to be blocked and in

326
00:12:51,839 --> 00:12:54,000
effect undertaken a denali service

327
00:12:54,000 --> 00:12:56,880
against that particular ip

328
00:12:56,880 --> 00:12:58,880
the solution is to be as specific as

329
00:12:58,880 --> 00:13:00,800
possible with your filters

330
00:13:00,800 --> 00:13:03,360
so in this example here we've added the

331
00:13:03,360 --> 00:13:05,360
dollar symbol to the end of this regular

332
00:13:05,360 --> 00:13:07,600
expression to force matching to the end

333
00:13:07,600 --> 00:13:08,959
of the line

334
00:13:08,959 --> 00:13:11,279
this eliminates the premature stopping

335
00:13:11,279 --> 00:13:12,880
of the pattern matching that we've just

336
00:13:12,880 --> 00:13:14,880
seen

337
00:13:14,880 --> 00:13:17,600
hopefully by now you feel like fail to

338
00:13:17,600 --> 00:13:20,399
ban is as awesome as i think it is it

339
00:13:20,399 --> 00:13:22,480
really is a great baseline control for

340
00:13:22,480 --> 00:13:24,639
internet connected services even if

341
00:13:24,639 --> 00:13:26,880
you're only using it for that basic case

342
00:13:26,880 --> 00:13:29,440
of protecting an ssh server

343
00:13:29,440 --> 00:13:30,880
but of course with a customized

344
00:13:30,880 --> 00:13:32,959
configuration fail to ban can be applied

345
00:13:32,959 --> 00:13:35,680
to any application

346
00:13:35,680 --> 00:13:37,519
the other key takeaway that i hope you

347
00:13:37,519 --> 00:13:40,160
leave with is to not be the blue team

348
00:13:40,160 --> 00:13:42,399
equivalent of a script kitty

349
00:13:42,399 --> 00:13:44,560
now i mentioned before that there's

350
00:13:44,560 --> 00:13:46,800
already a bunch of guides out on the

351
00:13:46,800 --> 00:13:48,800
internet that explain the basic fail to

352
00:13:48,800 --> 00:13:51,279
ban configuration for protecting an ssh

353
00:13:51,279 --> 00:13:52,320
service

354
00:13:52,320 --> 00:13:54,639
but if you just blindly copy and paste

355
00:13:54,639 --> 00:13:57,120
the config well maybe the parameters

356
00:13:57,120 --> 00:13:58,560
aren't tuned correctly for your

357
00:13:58,560 --> 00:14:01,040
environment and you also miss out on all

358
00:14:01,040 --> 00:14:03,279
the knowledge that you can also apply

359
00:14:03,279 --> 00:14:05,920
fail to ban to other services too

360
00:14:05,920 --> 00:14:08,240
so do take the time to learn how your

361
00:14:08,240 --> 00:14:11,360
defensive tools work and also how you

362
00:14:11,360 --> 00:14:13,519
need to configure and tune them to match

363
00:14:13,519 --> 00:14:16,480
your particular environment

364
00:14:16,480 --> 00:14:18,639
so that's all from me thank you again

365
00:14:18,639 --> 00:14:20,399
for stopping by to listen to my talk

366
00:14:20,399 --> 00:14:23,040
here and if you want more infosec

367
00:14:23,040 --> 00:14:25,040
content from me well feel free to follow

368
00:14:25,040 --> 00:14:27,279
me on youtube and twitter

369
00:14:27,279 --> 00:14:28,800
other than that i hope you have an

370
00:14:28,800 --> 00:14:31,120
awesome rest of your day and enjoy your

371
00:14:31,120 --> 00:14:35,000
time here at kringlecon

