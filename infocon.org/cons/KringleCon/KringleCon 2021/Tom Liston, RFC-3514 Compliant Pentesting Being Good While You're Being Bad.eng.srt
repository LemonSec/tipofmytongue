1
00:00:05,800 --> 00:00:11,318
[Music]

2
00:00:14,080 --> 00:00:16,960
hello and welcome to cringlecon 4. my

3
00:00:16,960 --> 00:00:19,039
name's tom liston i'm a senior technical

4
00:00:19,039 --> 00:00:20,720
engineer and breaker of things at

5
00:00:20,720 --> 00:00:23,359
counter hack and today i'm going to do a

6
00:00:23,359 --> 00:00:26,279
presentation on rfc

7
00:00:26,279 --> 00:00:31,199
3514 compliant pen testing

8
00:00:31,199 --> 00:00:32,880
you may have heard somebody say

9
00:00:32,880 --> 00:00:34,320
something like

10
00:00:34,320 --> 00:00:36,719
this before sometimes

11
00:00:36,719 --> 00:00:40,640
there are good reasons to do bad things

12
00:00:40,640 --> 00:00:42,719
as pen testers

13
00:00:42,719 --> 00:00:45,760
that's kind of our motto

14
00:00:45,760 --> 00:00:47,280
we're good folks

15
00:00:47,280 --> 00:00:49,760
but we do bad things

16
00:00:49,760 --> 00:00:50,719
uh

17
00:00:50,719 --> 00:00:53,039
actually if i'm out and being introduced

18
00:00:53,039 --> 00:00:54,960
to a bunch of new people and i'm in one

19
00:00:54,960 --> 00:00:57,600
of those moods uh sometimes i will

20
00:00:57,600 --> 00:01:00,239
introduce myself to people and say that

21
00:01:00,239 --> 00:01:02,879
i'm a professional thief or i'll say i

22
00:01:02,879 --> 00:01:04,799
break into networks for a living or i

23
00:01:04,799 --> 00:01:07,200
steal data for a living

24
00:01:07,200 --> 00:01:09,760
because i do

25
00:01:09,760 --> 00:01:12,400
but those of us who do these things

26
00:01:12,400 --> 00:01:14,960
on on a regular basis

27
00:01:14,960 --> 00:01:17,520
know that there are some rules that we

28
00:01:17,520 --> 00:01:20,000
have to follow in fact we probably have

29
00:01:20,000 --> 00:01:22,080
more rules

30
00:01:22,080 --> 00:01:24,320
that we follow personally than most

31
00:01:24,320 --> 00:01:26,400
people do

32
00:01:26,400 --> 00:01:28,479
even if you're doing bad things you

33
00:01:28,479 --> 00:01:31,360
still need to follow some rules

34
00:01:31,360 --> 00:01:32,720
interestingly

35
00:01:32,720 --> 00:01:36,880
back on april 1st of 2003 a gentleman uh

36
00:01:36,880 --> 00:01:38,960
an amazing gentleman by the name of

37
00:01:38,960 --> 00:01:43,640
stephen m bellovin released uh rfc

38
00:01:43,640 --> 00:01:46,240
3514 via the network

39
00:01:46,240 --> 00:01:49,119
working group of the ietf

40
00:01:49,119 --> 00:01:53,920
now rfc 3514 put forth a pretty radical

41
00:01:53,920 --> 00:01:55,360
proposal

42
00:01:55,360 --> 00:01:57,439
for the use of

43
00:01:57,439 --> 00:02:00,640
what was previously unused the high bit

44
00:02:00,640 --> 00:02:03,840
of the ip flags field now that has

45
00:02:03,840 --> 00:02:06,399
always been called the reserved bit

46
00:02:06,399 --> 00:02:09,280
because uh they didn't have any use for

47
00:02:09,280 --> 00:02:12,239
it it was the only bit in the ip

48
00:02:12,239 --> 00:02:14,640
header that wasn't used

49
00:02:14,640 --> 00:02:17,360
but mr velvin

50
00:02:17,360 --> 00:02:21,120
came up with this utterly ingenious idea

51
00:02:21,120 --> 00:02:23,360
uh in this rfc

52
00:02:23,360 --> 00:02:25,920
uh and his idea was to provide a

53
00:02:25,920 --> 00:02:28,879
solution for the growing problem

54
00:02:28,879 --> 00:02:31,360
of malicious traffic on the internet and

55
00:02:31,360 --> 00:02:33,280
this was back you know at the beginning

56
00:02:33,280 --> 00:02:37,040
of of 2003

57
00:02:37,040 --> 00:02:38,080
his

58
00:02:38,080 --> 00:02:40,400
proposal was

59
00:02:40,400 --> 00:02:43,599
that this bit should be set

60
00:02:43,599 --> 00:02:46,000
in order to

61
00:02:46,000 --> 00:02:49,360
show whether a packet had evil intent or

62
00:02:49,360 --> 00:02:52,000
not so if you set the bit to zero the

63
00:02:52,000 --> 00:02:54,640
packet has no evil intent at all you

64
00:02:54,640 --> 00:02:56,319
should just assume that the packet is

65
00:02:56,319 --> 00:02:58,400
harmless you should not take any

66
00:02:58,400 --> 00:03:02,480
defensive measures against it uh because

67
00:03:02,480 --> 00:03:05,040
this is telling you that

68
00:03:05,040 --> 00:03:08,480
there is no evil intent here if however

69
00:03:08,480 --> 00:03:11,440
the bid is set to one the packet has

70
00:03:11,440 --> 00:03:14,720
evil intent and you should uh secure

71
00:03:14,720 --> 00:03:16,879
yourself try to defend yourself against

72
00:03:16,879 --> 00:03:19,599
this packet um

73
00:03:19,599 --> 00:03:20,640
so

74
00:03:20,640 --> 00:03:23,040
with this proposal he also came up with

75
00:03:23,040 --> 00:03:25,120
a name for that it was only fitting that

76
00:03:25,120 --> 00:03:28,640
once was this this this register this

77
00:03:28,640 --> 00:03:31,680
bit that was once named the reserve bit

78
00:03:31,680 --> 00:03:36,959
now became known as the evil bit

79
00:03:37,280 --> 00:03:38,319
now

80
00:03:38,319 --> 00:03:41,200
suddenly security was easy this was a

81
00:03:41,200 --> 00:03:43,280
boon for the makers of firewalls why

82
00:03:43,280 --> 00:03:44,959
would you need to do deep packet

83
00:03:44,959 --> 00:03:47,280
inspection why would you need a next

84
00:03:47,280 --> 00:03:49,280
generation firewall

85
00:03:49,280 --> 00:03:52,159
it's simple it's so simple now all you

86
00:03:52,159 --> 00:03:54,720
have to do is look at this one bit and

87
00:03:54,720 --> 00:03:56,319
decide whether or not you're going to

88
00:03:56,319 --> 00:03:59,200
drop the packet if it's if it's one

89
00:03:59,200 --> 00:04:03,200
meaning that the packet is evil drop it

90
00:04:03,519 --> 00:04:07,120
interestingly gartner declared the ids

91
00:04:07,120 --> 00:04:10,799
dead in june of 2003 two months after

92
00:04:10,799 --> 00:04:14,480
the release of rfc 3514. is that a

93
00:04:14,480 --> 00:04:16,959
coincidence i don't think so because why

94
00:04:16,959 --> 00:04:19,839
would you need an ids anymore security

95
00:04:19,839 --> 00:04:23,198
was now easy

96
00:04:24,880 --> 00:04:26,720
but maybe that isn't how it all worked

97
00:04:26,720 --> 00:04:28,960
out

98
00:04:29,440 --> 00:04:33,199
what happened well rfc 3514 was a

99
00:04:33,199 --> 00:04:36,639
wonderful incredibly innovative idea but

100
00:04:36,639 --> 00:04:38,560
it did not deliver

101
00:04:38,560 --> 00:04:41,280
on its early promises

102
00:04:41,280 --> 00:04:44,160
why not well i'll tell you why not it's

103
00:04:44,160 --> 00:04:49,280
because the bad guys failed to comply

104
00:04:49,280 --> 00:04:53,360
and why did the bad guys fail to comply

105
00:04:53,360 --> 00:04:57,280
well i don't think there's any question

106
00:04:57,280 --> 00:04:59,280
it's because we in the security

107
00:04:59,280 --> 00:05:02,240
community have been setting a horrible

108
00:05:02,240 --> 00:05:03,759
example

109
00:05:03,759 --> 00:05:06,320
my question to you is this if you are a

110
00:05:06,320 --> 00:05:08,000
pen tester if you are a security

111
00:05:08,000 --> 00:05:10,320
professional and you do any kind of

112
00:05:10,320 --> 00:05:12,160
security testing

113
00:05:12,160 --> 00:05:13,600
are you

114
00:05:13,600 --> 00:05:18,479
rfc 3514 compliant

115
00:05:20,320 --> 00:05:23,039
how do we expect others to follow the

116
00:05:23,039 --> 00:05:24,960
rules when we don't

117
00:05:24,960 --> 00:05:28,000
the second the security community really

118
00:05:28,000 --> 00:05:30,400
needs to step up in this instance and

119
00:05:30,400 --> 00:05:32,320
set a good example

120
00:05:32,320 --> 00:05:34,720
well i'm here today

121
00:05:34,720 --> 00:05:39,000
to help you do just that

122
00:05:39,520 --> 00:05:41,680
i've created a fun little piece of

123
00:05:41,680 --> 00:05:45,199
python code called evil bit dot pie and

124
00:05:45,199 --> 00:05:47,199
well i think it's fun you may not think

125
00:05:47,199 --> 00:05:48,639
it's fun but i think it's fun and

126
00:05:48,639 --> 00:05:49,919
interesting

127
00:05:49,919 --> 00:05:53,360
it uses iptable's net filter queue

128
00:05:53,360 --> 00:05:54,800
capabilities

129
00:05:54,800 --> 00:05:57,600
and then it also uses some of scabies

130
00:05:57,600 --> 00:06:00,720
packet crafting and editing magic

131
00:06:00,720 --> 00:06:04,080
to make your linux box proudly proclaim

132
00:06:04,080 --> 00:06:07,199
its evil intent when you're doing pen

133
00:06:07,199 --> 00:06:10,720
testing you can now boldly be

134
00:06:10,720 --> 00:06:14,960
rfc 3514 compliant

135
00:06:14,960 --> 00:06:18,400
the way it works is this

136
00:06:19,520 --> 00:06:22,479
net filter queue allows you to tag

137
00:06:22,479 --> 00:06:23,759
packets

138
00:06:23,759 --> 00:06:27,199
uh with a with a an identifier that can

139
00:06:27,199 --> 00:06:28,319
then

140
00:06:28,319 --> 00:06:30,240
be pulled those packets can then be

141
00:06:30,240 --> 00:06:32,800
pulled out of the packet stream prior to

142
00:06:32,800 --> 00:06:34,400
being sent

143
00:06:34,400 --> 00:06:37,840
and uh you can do many things with that

144
00:06:37,840 --> 00:06:40,160
by using scapy what we're doing is we're

145
00:06:40,160 --> 00:06:42,080
pulling these packets in

146
00:06:42,080 --> 00:06:45,440
we are altering the ip flags field to

147
00:06:45,440 --> 00:06:49,919
turn on the evil bit we're then updating

148
00:06:49,919 --> 00:06:52,960
the checksum the ip checksum for that

149
00:06:52,960 --> 00:06:53,919
packet

150
00:06:53,919 --> 00:06:55,039
and then

151
00:06:55,039 --> 00:06:57,919
tossing the packet back into the queue

152
00:06:57,919 --> 00:07:00,160
and allowing it to be sent

153
00:07:00,160 --> 00:07:03,840
all on done on the fly all done uh

154
00:07:03,840 --> 00:07:06,240
without any interaction with any other

155
00:07:06,240 --> 00:07:08,560
piece of software on your system your

156
00:07:08,560 --> 00:07:10,639
system doesn't even need to know that

157
00:07:10,639 --> 00:07:13,840
this is happening all of your normal

158
00:07:13,840 --> 00:07:16,720
uh pen testing tools work just fine

159
00:07:16,720 --> 00:07:19,280
all of your network connections will

160
00:07:19,280 --> 00:07:22,080
work just fine all that will happen is

161
00:07:22,080 --> 00:07:24,880
that every ip packet that goes out will

162
00:07:24,880 --> 00:07:27,680
have the evil bit set

163
00:07:27,680 --> 00:07:31,599
i've got a a github a github repo for

164
00:07:31,599 --> 00:07:33,680
this uh it's down there at the bottom of

165
00:07:33,680 --> 00:07:34,960
the screen it'll continue to be on the

166
00:07:34,960 --> 00:07:36,400
bottom of the screen for the next slide

167
00:07:36,400 --> 00:07:39,039
or two here

168
00:07:39,039 --> 00:07:41,759
i would strongly suggest that if you do

169
00:07:41,759 --> 00:07:46,080
pen testing and you want to be rfc 3514

170
00:07:46,080 --> 00:07:47,440
compliant

171
00:07:47,440 --> 00:07:49,440
go take a look at the code because it'll

172
00:07:49,440 --> 00:07:53,599
really help you out in that regard

173
00:07:53,680 --> 00:07:55,759
but then i'm sure there are some of you

174
00:07:55,759 --> 00:07:58,160
out there who are just thinking well i'm

175
00:07:58,160 --> 00:08:00,879
an anti-social buffoon who doesn't care

176
00:08:00,879 --> 00:08:03,280
i don't want to set a good example by

177
00:08:03,280 --> 00:08:06,800
being rfc 3514 compliant while pen

178
00:08:06,800 --> 00:08:08,319
testing

179
00:08:08,319 --> 00:08:10,000
well

180
00:08:10,000 --> 00:08:11,199
hey

181
00:08:11,199 --> 00:08:13,199
if that's what you want to do

182
00:08:13,199 --> 00:08:15,599
that's fine i suppose but i'm just going

183
00:08:15,599 --> 00:08:17,840
to have to say it shame on you shame on

184
00:08:17,840 --> 00:08:19,759
you for not wanting to set a good

185
00:08:19,759 --> 00:08:20,879
example

186
00:08:20,879 --> 00:08:24,000
this is why you are why we cannot have

187
00:08:24,000 --> 00:08:27,840
nice things on the internet

188
00:08:28,319 --> 00:08:30,319
but even if

189
00:08:30,319 --> 00:08:33,279
you are a horrible horrible human being

190
00:08:33,279 --> 00:08:36,320
who doesn't want to set a good example

191
00:08:36,320 --> 00:08:39,120
far be it from me to deny you a learning

192
00:08:39,120 --> 00:08:42,159
opportunity so

193
00:08:42,159 --> 00:08:44,959
the github repo is still there perhaps

194
00:08:44,959 --> 00:08:47,200
you might find this little example to be

195
00:08:47,200 --> 00:08:50,399
an opportunity uh where you could

196
00:08:50,399 --> 00:08:52,959
uh take a look

197
00:08:52,959 --> 00:08:54,399
at uh

198
00:08:54,399 --> 00:08:56,399
the code that i'm providing to you be

199
00:08:56,399 --> 00:08:58,800
impressed by my incredibly amazing

200
00:08:58,800 --> 00:09:01,440
programming prowess i i know it it's a

201
00:09:01,440 --> 00:09:04,560
little intimidating but that's okay um

202
00:09:04,560 --> 00:09:07,680
you might want to take a look and see

203
00:09:07,680 --> 00:09:09,839
a little about how you could use

204
00:09:09,839 --> 00:09:12,560
iptable's net filter cue combined with

205
00:09:12,560 --> 00:09:16,160
scapy to alter packets on the ply on the

206
00:09:16,160 --> 00:09:17,440
fly

207
00:09:17,440 --> 00:09:18,720
from

208
00:09:18,720 --> 00:09:21,120
you know the warm wonderful comfortable

209
00:09:21,120 --> 00:09:24,160
embrace of python

210
00:09:24,160 --> 00:09:26,880
you may find that this has some other

211
00:09:26,880 --> 00:09:30,399
potential possibilities

212
00:09:31,040 --> 00:09:34,560
i may or may not have used

213
00:09:34,560 --> 00:09:37,040
this kind of technique to do some

214
00:09:37,040 --> 00:09:39,760
editing of packets uh that i needed to

215
00:09:39,760 --> 00:09:42,959
change within a pcap file at one point

216
00:09:42,959 --> 00:09:45,200
in time or another

217
00:09:45,200 --> 00:09:47,360
learning this kind of stuff learning how

218
00:09:47,360 --> 00:09:49,839
you can use scapy

219
00:09:49,839 --> 00:09:53,360
edit packets while still

220
00:09:53,360 --> 00:09:57,600
fixing things like ip checksums or tcp

221
00:09:57,600 --> 00:10:00,480
checksums or udp checksums

222
00:10:00,480 --> 00:10:02,720
really really interesting stuff stuff

223
00:10:02,720 --> 00:10:06,079
that has a lot of imp implications a lot

224
00:10:06,079 --> 00:10:09,839
of uses uh in other types of activities

225
00:10:09,839 --> 00:10:12,480
so take a look look at the github repo

226
00:10:12,480 --> 00:10:15,519
or as my friend josh wright says github

227
00:10:15,519 --> 00:10:19,360
repo repo um and uh

228
00:10:19,360 --> 00:10:21,279
i hope you have a really really

229
00:10:21,279 --> 00:10:24,399
wonderful rest of your day i hope you

230
00:10:24,399 --> 00:10:27,519
enjoy the rest of your trip here to the

231
00:10:27,519 --> 00:10:28,720
north pole

232
00:10:28,720 --> 00:10:31,360
and that you enjoy the rest of

233
00:10:31,360 --> 00:10:35,240
kringlecon 4.

