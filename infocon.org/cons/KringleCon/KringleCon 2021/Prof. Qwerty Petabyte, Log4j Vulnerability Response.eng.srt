1
00:00:05,800 --> 00:00:11,318
[Music]

2
00:00:15,360 --> 00:00:17,119
hello and welcome

3
00:00:17,119 --> 00:00:19,760
i'm courtney petabyte professor emeritus

4
00:00:19,760 --> 00:00:22,560
at elf university and i'm here today to

5
00:00:22,560 --> 00:00:25,119
give you a short overview on the log for

6
00:00:25,119 --> 00:00:29,199
j or log forge vulnerability and to give

7
00:00:29,199 --> 00:00:31,039
you some information on how best to

8
00:00:31,039 --> 00:00:34,160
respond to this highly critical security

9
00:00:34,160 --> 00:00:36,559
issue

10
00:00:37,200 --> 00:00:38,879
first of all i think we need to

11
00:00:38,879 --> 00:00:41,600
acknowledge the lack of consensus over

12
00:00:41,600 --> 00:00:43,840
how exactly to say the name of this

13
00:00:43,840 --> 00:00:46,320
vulnerability

14
00:00:46,320 --> 00:00:48,960
there are constant wars raging on the

15
00:00:48,960 --> 00:00:51,280
internet over various things like the

16
00:00:51,280 --> 00:00:54,160
best text editor or the correct way to

17
00:00:54,160 --> 00:00:56,079
pronounce the name of a graphic file

18
00:00:56,079 --> 00:00:58,160
format

19
00:00:58,160 --> 00:01:00,239
here at the north pole santa has

20
00:01:00,239 --> 00:01:02,800
expressed some definite opinions on

21
00:01:02,800 --> 00:01:05,519
those two questions and while i won't

22
00:01:05,519 --> 00:01:07,439
give away his answers

23
00:01:07,439 --> 00:01:10,320
let's just say that santa has a sixth

24
00:01:10,320 --> 00:01:12,880
sense when it comes to good editors and

25
00:01:12,880 --> 00:01:16,640
a real gift for pronunciation

26
00:01:16,640 --> 00:01:19,280
but now we're faced with another debate

27
00:01:19,280 --> 00:01:22,240
is it log forge or

28
00:01:22,240 --> 00:01:24,320
log4j

29
00:01:24,320 --> 00:01:26,560
earlier today i spoke with santa and he

30
00:01:26,560 --> 00:01:28,960
had some wonderful advice

31
00:01:28,960 --> 00:01:31,840
qwerty old friend he said to me

32
00:01:31,840 --> 00:01:35,280
let's not contribute to the problem

33
00:01:35,280 --> 00:01:37,680
so for the purposes of this presentation

34
00:01:37,680 --> 00:01:39,920
we're just going to alternate between

35
00:01:39,920 --> 00:01:43,759
the two ways of saying the name

36
00:01:44,640 --> 00:01:47,200
let's start with a little background

37
00:01:47,200 --> 00:01:49,840
on december 9th security researchers

38
00:01:49,840 --> 00:01:51,680
published information on a high

39
00:01:51,680 --> 00:01:54,960
criticality flaw in a widely used

40
00:01:54,960 --> 00:01:57,680
software logging library called log

41
00:01:57,680 --> 00:01:58,799
forge

42
00:01:58,799 --> 00:02:02,719
written in the coding language java

43
00:02:02,719 --> 00:02:04,240
log for j

44
00:02:04,240 --> 00:02:07,520
is hugely popular and it is estimated to

45
00:02:07,520 --> 00:02:11,200
be present in over 100 million systems

46
00:02:11,200 --> 00:02:13,840
worldwide and unfortunately many

47
00:02:13,840 --> 00:02:16,400
organizations are running tools that use

48
00:02:16,400 --> 00:02:19,680
this library well under the hood so they

49
00:02:19,680 --> 00:02:22,800
may not be aware that they're vulnerable

50
00:02:22,800 --> 00:02:24,959
obviously any flaw that affects 100

51
00:02:24,959 --> 00:02:27,760
million systems is concerning but this

52
00:02:27,760 --> 00:02:30,879
vulnerability is both easily exploited

53
00:02:30,879 --> 00:02:33,200
and gives attackers the ability to run

54
00:02:33,200 --> 00:02:37,840
arbitrary code on systems this issue is

55
00:02:37,840 --> 00:02:41,280
perhaps the most dangerous vulnerability

56
00:02:41,280 --> 00:02:43,599
ever

57
00:02:44,400 --> 00:02:47,280
the log forge library is widely used

58
00:02:47,280 --> 00:02:49,360
because it allows developers to handle

59
00:02:49,360 --> 00:02:52,000
event logging in a clean consistent

60
00:02:52,000 --> 00:02:54,560
manner in their code

61
00:02:54,560 --> 00:02:57,760
but what exactly is the vulnerability in

62
00:02:57,760 --> 00:02:59,680
log for j

63
00:02:59,680 --> 00:03:00,640
well

64
00:03:00,640 --> 00:03:03,519
by default log forge supports a feature

65
00:03:03,519 --> 00:03:07,840
known as message lookup substitution

66
00:03:07,840 --> 00:03:09,840
this feature allows programmers to

67
00:03:09,840 --> 00:03:12,159
include special strings that are

68
00:03:12,159 --> 00:03:14,800
replaced by log forge with other

69
00:03:14,800 --> 00:03:16,840
dynamically generated

70
00:03:16,840 --> 00:03:20,239
strings for example if you log the

71
00:03:20,239 --> 00:03:23,200
string shown in green on this slide

72
00:03:23,200 --> 00:03:25,120
java run time

73
00:03:25,120 --> 00:03:27,360
that string will be looked up and

74
00:03:27,360 --> 00:03:30,640
replaced in log for j's output with

75
00:03:30,640 --> 00:03:32,560
another string that specifies the

76
00:03:32,560 --> 00:03:35,280
version of java on which log forge is

77
00:03:35,280 --> 00:03:37,599
running

78
00:03:38,560 --> 00:03:41,040
the problem is one of these lookup

79
00:03:41,040 --> 00:03:42,080
methods

80
00:03:42,080 --> 00:03:44,480
specifically the java naming and

81
00:03:44,480 --> 00:03:46,840
directory interface or

82
00:03:46,840 --> 00:03:48,480
jndi

83
00:03:48,480 --> 00:03:50,799
can be used in conjunction with the

84
00:03:50,799 --> 00:03:53,439
lightweight directory access protocol or

85
00:03:53,439 --> 00:03:54,560
ldap

86
00:03:54,560 --> 00:03:56,959
to fetch a specific

87
00:03:56,959 --> 00:03:59,599
user specified java class file from a

88
00:03:59,599 --> 00:04:01,680
remote system

89
00:04:01,680 --> 00:04:04,480
when this class file is deserialized or

90
00:04:04,480 --> 00:04:07,760
turned back into a java object in memory

91
00:04:07,760 --> 00:04:12,399
some of the classes code gets executed

92
00:04:13,360 --> 00:04:15,840
all of this is a rather involved way of

93
00:04:15,840 --> 00:04:18,478
saying that this vulnerability in log

94
00:04:18,478 --> 00:04:21,440
forge allows an attacker to execute

95
00:04:21,440 --> 00:04:26,320
arbitrary code on vulnerable systems

96
00:04:26,320 --> 00:04:31,040
millions of vulnerable systems

97
00:04:31,040 --> 00:04:33,040
unfortunately that's not even the only

98
00:04:33,040 --> 00:04:35,680
issue with these lookups there are other

99
00:04:35,680 --> 00:04:37,759
non-default protocols that can exhibit

100
00:04:37,759 --> 00:04:40,560
this same vulnerability and even other

101
00:04:40,560 --> 00:04:42,720
lookup requests that can expose

102
00:04:42,720 --> 00:04:45,919
sensitive information like configuration

103
00:04:45,919 --> 00:04:49,199
options or environment variables

104
00:04:49,199 --> 00:04:53,919
this is an incredibly bad vulnerability

105
00:04:55,680 --> 00:04:58,320
recently on december 14th it was

106
00:04:58,320 --> 00:05:00,560
determined that the original patched

107
00:05:00,560 --> 00:05:03,600
version of log4j that was released by

108
00:05:03,600 --> 00:05:08,479
apache that was version 2.16.0

109
00:05:08,479 --> 00:05:10,560
was not fully effective in preventing

110
00:05:10,560 --> 00:05:12,720
various types of attacks

111
00:05:12,720 --> 00:05:16,000
so on december 17th apache released

112
00:05:16,000 --> 00:05:19,440
version 2.17.0

113
00:05:19,440 --> 00:05:23,120
to provide additional protection

114
00:05:23,120 --> 00:05:25,039
since the discovery of the log forge

115
00:05:25,039 --> 00:05:26,560
vulnerability there have been

116
00:05:26,560 --> 00:05:29,039
wide-ranging discussions of various

117
00:05:29,039 --> 00:05:31,759
mitigation steps that organizations can

118
00:05:31,759 --> 00:05:34,880
take to protect themselves from attack

119
00:05:34,880 --> 00:05:37,520
unfortunately there's strong evidence

120
00:05:37,520 --> 00:05:40,400
that many of those manual workarounds

121
00:05:40,400 --> 00:05:44,638
may not be entirely effective

122
00:05:44,960 --> 00:05:46,720
as of the date i'm recording this

123
00:05:46,720 --> 00:05:50,320
presentation which is december 20th

124
00:05:50,320 --> 00:05:52,320
it's our recommendation that

125
00:05:52,320 --> 00:05:56,680
organizations update log4j to version

126
00:05:56,680 --> 00:05:58,319
2.17.0

127
00:05:58,319 --> 00:06:02,319
and not attempt to use various manual

128
00:06:02,319 --> 00:06:05,120
mitigations

129
00:06:05,600 --> 00:06:06,479
now

130
00:06:06,479 --> 00:06:08,319
let's talk about some of the tools that

131
00:06:08,319 --> 00:06:10,960
defenders can use to assist them in

132
00:06:10,960 --> 00:06:14,799
protecting their systems from attack

133
00:06:15,680 --> 00:06:18,080
first of all the fine folks at counter

134
00:06:18,080 --> 00:06:21,360
hack have created new bonus challenges

135
00:06:21,360 --> 00:06:24,319
as part of kringlecon 4 and holiday hack

136
00:06:24,319 --> 00:06:25,759
2021

137
00:06:25,759 --> 00:06:28,080
where you can confront the log forge

138
00:06:28,080 --> 00:06:30,880
vulnerability head on and can practice

139
00:06:30,880 --> 00:06:33,520
both your offensive red team skills as

140
00:06:33,520 --> 00:06:36,720
well as your defensive blue teen skills

141
00:06:36,720 --> 00:06:39,120
just follow the signs to the north pole

142
00:06:39,120 --> 00:06:42,240
when you're at kringlecon

143
00:06:43,759 --> 00:06:45,759
the first and most important step in

144
00:06:45,759 --> 00:06:47,919
protecting your systems against the

145
00:06:47,919 --> 00:06:51,440
log4j vulnerability is identifying any

146
00:06:51,440 --> 00:06:53,039
vulnerable application in your

147
00:06:53,039 --> 00:06:54,560
environment

148
00:06:54,560 --> 00:06:58,560
we strongly recommend using the logpreso

149
00:06:58,560 --> 00:07:02,560
log for j2 scan utility

150
00:07:02,560 --> 00:07:05,199
and in fact you'll be using that very

151
00:07:05,199 --> 00:07:08,560
tool in the holiday hack bonus blue log

152
00:07:08,560 --> 00:07:10,880
forge challenge

153
00:07:10,880 --> 00:07:12,880
while this tool offers the option to

154
00:07:12,880 --> 00:07:14,479
automatically fix any vulnerable

155
00:07:14,479 --> 00:07:16,800
applications that it finds

156
00:07:16,800 --> 00:07:19,120
we strongly recommend doing those

157
00:07:19,120 --> 00:07:21,360
changes manually

158
00:07:21,360 --> 00:07:23,520
it's incredibly simple to use this tool

159
00:07:23,520 --> 00:07:25,840
just point it to the directory

160
00:07:25,840 --> 00:07:28,000
where you want to scan it it'll scan the

161
00:07:28,000 --> 00:07:31,599
directory for you and all subdirectories

162
00:07:31,599 --> 00:07:33,840
looking for vulnerable applications

163
00:07:33,840 --> 00:07:36,639
it'll even scan inside of jar files and

164
00:07:36,639 --> 00:07:41,440
nested jar files for problematic code

165
00:07:43,520 --> 00:07:45,039
unfortunately

166
00:07:45,039 --> 00:07:46,960
if you find that you have vulnerable

167
00:07:46,960 --> 00:07:48,319
applications

168
00:07:48,319 --> 00:07:50,240
you may have only gotten through half

169
00:07:50,240 --> 00:07:52,160
the battle

170
00:07:52,160 --> 00:07:54,400
because this vulnerability is so

171
00:07:54,400 --> 00:07:55,599
dangerous

172
00:07:55,599 --> 00:07:57,360
naughty folks on the internet have been

173
00:07:57,360 --> 00:07:59,280
very busy attempting to exploit it

174
00:07:59,280 --> 00:08:00,879
wherever they can

175
00:08:00,879 --> 00:08:02,800
so you'll need to check and see if your

176
00:08:02,800 --> 00:08:05,199
systems have been attacked and

177
00:08:05,199 --> 00:08:09,280
more importantly have been compromised

178
00:08:09,280 --> 00:08:11,360
the best way to do this is to examine

179
00:08:11,360 --> 00:08:14,160
your logs for any signs of attack and

180
00:08:14,160 --> 00:08:16,400
then use that to determine if the

181
00:08:16,400 --> 00:08:19,680
attacks succeeded

182
00:08:19,680 --> 00:08:22,720
in the holiday hack bonus blue log forge

183
00:08:22,720 --> 00:08:23,919
challenge

184
00:08:23,919 --> 00:08:26,080
you'll use a tool provided by josh

185
00:08:26,080 --> 00:08:28,400
wright from counter hack to identify log

186
00:08:28,400 --> 00:08:32,958
lines that may show log4j attacks

187
00:08:32,958 --> 00:08:35,599
once again this tool is also simple to

188
00:08:35,599 --> 00:08:38,479
use just point it at a log file and it

189
00:08:38,479 --> 00:08:40,799
will dump out a list of suspicious log

190
00:08:40,799 --> 00:08:44,159
lines for you to review

191
00:08:46,000 --> 00:08:47,760
let's take a quick moment to review the

192
00:08:47,760 --> 00:08:49,279
information that we've covered in this

193
00:08:49,279 --> 00:08:51,279
presentation

194
00:08:51,279 --> 00:08:54,320
the log forge vulnerability is a high

195
00:08:54,320 --> 00:08:57,279
criticality flaw in a widely deployed

196
00:08:57,279 --> 00:08:59,279
logging library

197
00:08:59,279 --> 00:09:01,279
many organizations aren't even aware

198
00:09:01,279 --> 00:09:03,600
that they're running code that uses the

199
00:09:03,600 --> 00:09:07,040
log4j logging library

200
00:09:07,040 --> 00:09:09,519
our best recommendation at this time is

201
00:09:09,519 --> 00:09:11,600
to pass on the various manual

202
00:09:11,600 --> 00:09:13,360
mitigations that are being discussed on

203
00:09:13,360 --> 00:09:16,560
the internet and to patch your systems

204
00:09:16,560 --> 00:09:19,200
with the 2.17.0

205
00:09:19,200 --> 00:09:20,160
version

206
00:09:20,160 --> 00:09:23,640
of the library

207
00:09:24,399 --> 00:09:26,720
finally here are a couple of additional

208
00:09:26,720 --> 00:09:28,800
tools that you may find helpful in

209
00:09:28,800 --> 00:09:31,279
addressing this vulnerability

210
00:09:31,279 --> 00:09:33,519
the first is a constantly updated

211
00:09:33,519 --> 00:09:35,920
listing of vendors and applications that

212
00:09:35,920 --> 00:09:39,279
are known to be affected by this issue

213
00:09:39,279 --> 00:09:40,880
while you should take a look at that

214
00:09:40,880 --> 00:09:43,279
list to determine if your organization

215
00:09:43,279 --> 00:09:45,920
is potentially vulnerable we strongly

216
00:09:45,920 --> 00:09:48,320
recommend scanning systems wherever

217
00:09:48,320 --> 00:09:51,040
possible

218
00:09:51,040 --> 00:09:53,120
the second link is to another scanning

219
00:09:53,120 --> 00:09:55,200
tool made available by the commute

220
00:09:55,200 --> 00:09:57,760
computer emergency response team

221
00:09:57,760 --> 00:10:00,160
coordination center at carnegie mellon

222
00:10:00,160 --> 00:10:02,399
university

223
00:10:02,399 --> 00:10:04,720
you can never have too many high quality

224
00:10:04,720 --> 00:10:06,079
tools when you're looking for a

225
00:10:06,079 --> 00:10:09,920
vulnerability of this magnitude

226
00:10:11,680 --> 00:10:13,120
thank you for joining me in this

227
00:10:13,120 --> 00:10:15,680
presentation i sincerely hope you've

228
00:10:15,680 --> 00:10:17,680
learned something useful

229
00:10:17,680 --> 00:10:20,880
please use the holiday hack 2021 bonus

230
00:10:20,880 --> 00:10:23,200
log for j challenges

231
00:10:23,200 --> 00:10:25,440
to practice your defensive skills and

232
00:10:25,440 --> 00:10:27,200
learn more about how you can best

233
00:10:27,200 --> 00:10:29,680
protect your organization

234
00:10:29,680 --> 00:10:31,200
finally

235
00:10:31,200 --> 00:10:33,279
once you've gotten past your response to

236
00:10:33,279 --> 00:10:35,760
this vulnerability please

237
00:10:35,760 --> 00:10:37,360
have a safe

238
00:10:37,360 --> 00:10:40,480
happy and healthy holiday season

239
00:10:40,480 --> 00:10:42,640
and try your very best

240
00:10:42,640 --> 00:10:47,560
to stay on santa's nice list

