1
00:00:05,800 --> 00:00:11,318
[Music]

2
00:00:11,679 --> 00:00:13,440
hi this is jay beel i'm going to show

3
00:00:13,440 --> 00:00:16,320
you a fun kubernetes attack path today

4
00:00:16,320 --> 00:00:18,400
it's freezing here at the north pole

5
00:00:18,400 --> 00:00:21,279
even inside jack frost's casino so let's

6
00:00:21,279 --> 00:00:23,439
take our mind off it and hack jack

7
00:00:23,439 --> 00:00:26,800
frost's kubernetes cluster

8
00:00:28,080 --> 00:00:30,240
okay here's the story jack frost is

9
00:00:30,240 --> 00:00:31,840
cheating the casino players using a

10
00:00:31,840 --> 00:00:33,600
kubernetes cluster to coordinate the

11
00:00:33,600 --> 00:00:36,160
games in the casino it's queering his

12
00:00:36,160 --> 00:00:39,040
vendors casino monitor 1225

13
00:00:39,040 --> 00:00:41,440
which tracks the players winnings

14
00:00:41,440 --> 00:00:43,520
against their initial chip purchase if

15
00:00:43,520 --> 00:00:44,960
they're up by 50

16
00:00:44,960 --> 00:00:47,120
the cluster directs all the casino games

17
00:00:47,120 --> 00:00:49,520
to cheat the player skewing the odds

18
00:00:49,520 --> 00:00:52,239
until the players below 50 again

19
00:00:52,239 --> 00:00:55,120
so uh this doesn't sound very uh this

20
00:00:55,120 --> 00:00:56,719
doesn't sound very good so let's see if

21
00:00:56,719 --> 00:00:58,879
we can set things right

22
00:00:58,879 --> 00:01:01,920
we're going to get right into a demo

23
00:01:01,920 --> 00:01:04,640
so here we go so we've got jack frost's

24
00:01:04,640 --> 00:01:07,119
kubernetes cluster we've got a

25
00:01:07,119 --> 00:01:08,880
just one port it's listening on and on

26
00:01:08,880 --> 00:01:11,439
that one port we find a web server so

27
00:01:11,439 --> 00:01:13,439
let's try an old pen test trick and hit

28
00:01:13,439 --> 00:01:15,840
robots.txt see that it says please don't

29
00:01:15,840 --> 00:01:17,920
hit contractors.php

30
00:01:17,920 --> 00:01:20,880
and we'll go hit contractors.php

31
00:01:20,880 --> 00:01:22,720
and when we look at this it basically

32
00:01:22,720 --> 00:01:25,200
says hey we're some wronged contractors

33
00:01:25,200 --> 00:01:28,240
who got stiffed by jack frost he's

34
00:01:28,240 --> 00:01:30,640
frozen out too many of us

35
00:01:30,640 --> 00:01:31,920
the contractors built the computer

36
00:01:31,920 --> 00:01:34,320
systems so let's see if we can stop jack

37
00:01:34,320 --> 00:01:36,159
frost from cheating the casino patrons

38
00:01:36,159 --> 00:01:37,680
the way he cheated us

39
00:01:37,680 --> 00:01:39,200
so we're just going to check and see if

40
00:01:39,200 --> 00:01:41,360
this thing just lets us run commands so

41
00:01:41,360 --> 00:01:42,960
we type id

42
00:01:42,960 --> 00:01:45,040
yep this is a web shell

43
00:01:45,040 --> 00:01:47,680
so we're going to turn around and and uh

44
00:01:47,680 --> 00:01:48,799
make this

45
00:01:48,799 --> 00:01:51,600
pull down an interpreter binary from our

46
00:01:51,600 --> 00:01:53,600
kali linux's web server

47
00:01:53,600 --> 00:01:54,399
and

48
00:01:54,399 --> 00:01:55,840
that's going to get us some interpreter

49
00:01:55,840 --> 00:01:58,000
session running right in that first pod

50
00:01:58,000 --> 00:02:00,000
in the contractor's pod

51
00:02:00,000 --> 00:02:02,560
and we set up a quick little shell

52
00:02:02,560 --> 00:02:04,240
i'm going to do one more thing with the

53
00:02:04,240 --> 00:02:06,320
web shell first though i'm going to run

54
00:02:06,320 --> 00:02:09,119
env for environment and that's going to

55
00:02:09,119 --> 00:02:11,920
give us a bunch of services now

56
00:02:11,920 --> 00:02:14,239
kubernetes services are kind of load

57
00:02:14,239 --> 00:02:17,040
balancers they can be external like that

58
00:02:17,040 --> 00:02:19,040
contractors one was or they can be

59
00:02:19,040 --> 00:02:20,560
internal

60
00:02:20,560 --> 00:02:22,480
so if we're looking at the environment

61
00:02:22,480 --> 00:02:24,560
variables anything that was uh any of

62
00:02:24,560 --> 00:02:25,920
the services

63
00:02:25,920 --> 00:02:27,840
um that are you know that are in the

64
00:02:27,840 --> 00:02:30,560
same name spaces are pod are going to

65
00:02:30,560 --> 00:02:33,920
have the services listed um listed out

66
00:02:33,920 --> 00:02:35,840
as environment variables with ip

67
00:02:35,840 --> 00:02:37,120
addresses even

68
00:02:37,120 --> 00:02:38,720
so we find

69
00:02:38,720 --> 00:02:40,800
the interesting one here is the sku

70
00:02:40,800 --> 00:02:42,080
level

71
00:02:42,080 --> 00:02:45,040
service host the sku level service and

72
00:02:45,040 --> 00:02:47,120
here's its ip address and it's on port

73
00:02:47,120 --> 00:02:48,400
80. so

74
00:02:48,400 --> 00:02:52,080
let's go and uh take that ip address

75
00:02:52,080 --> 00:02:53,840
and curl it

76
00:02:53,840 --> 00:02:55,280
so curl that ip address from our

77
00:02:55,280 --> 00:02:58,319
contractor's pod and uh we see a whole

78
00:02:58,319 --> 00:03:00,480
bunch of we see a json object and it's a

79
00:03:00,480 --> 00:03:01,840
bunch of players

80
00:03:01,840 --> 00:03:04,400
and we have a player kate libby whose

81
00:03:04,400 --> 00:03:06,560
win rate is 90 percent

82
00:03:06,560 --> 00:03:09,680
and uh and so the the casino is going to

83
00:03:09,680 --> 00:03:12,159
skew things against her by 10

84
00:03:12,159 --> 00:03:14,319
and you see a bunch of the other a bunch

85
00:03:14,319 --> 00:03:16,080
of the other players here

86
00:03:16,080 --> 00:03:18,800
so this is what we're trying to break

87
00:03:18,800 --> 00:03:20,000
we're trying to break the casino

88
00:03:20,000 --> 00:03:21,040
cheating

89
00:03:21,040 --> 00:03:22,560
so we're going to upload a copy of coop

90
00:03:22,560 --> 00:03:24,239
control

91
00:03:24,239 --> 00:03:28,239
and go back to our shell in that pod

92
00:03:28,239 --> 00:03:29,760
and what we're going to do is find that

93
00:03:29,760 --> 00:03:31,760
if we look in that pod there's an auto

94
00:03:31,760 --> 00:03:34,159
mounted service count token in var run

95
00:03:34,159 --> 00:03:36,080
secrets kubernetes io

96
00:03:36,080 --> 00:03:38,400
and so you'll see if you look in one of

97
00:03:38,400 --> 00:03:40,080
these service count directories i'm just

98
00:03:40,080 --> 00:03:43,040
going to set a variable

99
00:03:43,040 --> 00:03:46,159
to that service count directory if we

100
00:03:46,159 --> 00:03:47,680
look in that service count directory

101
00:03:47,680 --> 00:03:49,440
we'll see a certificate authority cert a

102
00:03:49,440 --> 00:03:52,560
namespace and a token that tokens a jwt

103
00:03:52,560 --> 00:03:54,959
a service count token

104
00:03:54,959 --> 00:03:56,480
for

105
00:03:56,480 --> 00:04:00,959
for this pods service count so

106
00:04:00,959 --> 00:04:02,640
if we look at the namespace we see we're

107
00:04:02,640 --> 00:04:04,799
in the default namespace

108
00:04:04,799 --> 00:04:06,319
and

109
00:04:06,319 --> 00:04:07,760
what we can do is just set up a coup

110
00:04:07,760 --> 00:04:10,239
control command that's going to have all

111
00:04:10,239 --> 00:04:12,000
of the values we need the certificate

112
00:04:12,000 --> 00:04:13,680
authority path will be among them so

113
00:04:13,680 --> 00:04:16,000
we'll set up an alias for coupe control

114
00:04:16,000 --> 00:04:18,560
that says use the token use that jwt we

115
00:04:18,560 --> 00:04:21,199
saw use a certificate authority path we

116
00:04:21,199 --> 00:04:24,720
just found um use the uh and for server

117
00:04:24,720 --> 00:04:28,080
just the traditional um uh dns name

118
00:04:28,080 --> 00:04:30,639
coordinates name that's going to get us

119
00:04:30,639 --> 00:04:32,400
to what we need so we'll make group

120
00:04:32,400 --> 00:04:34,639
control executable and we'll run cube

121
00:04:34,639 --> 00:04:36,000
control versions see that we've got a

122
00:04:36,000 --> 00:04:40,160
cluster version that's not out of date

123
00:04:40,160 --> 00:04:42,960
we'll do get pods and we'll see that in

124
00:04:42,960 --> 00:04:44,080
this namespace we've got that

125
00:04:44,080 --> 00:04:45,520
contractors pod that we're already in

126
00:04:45,520 --> 00:04:47,840
we've got a sku level pod which is where

127
00:04:47,840 --> 00:04:50,479
that service is actually pointing um so

128
00:04:50,479 --> 00:04:52,800
let's go and say coupe control describe

129
00:04:52,800 --> 00:04:54,000
pod

130
00:04:54,000 --> 00:04:56,320
sku level and see what we learned about

131
00:04:56,320 --> 00:04:59,120
it we find a specific image um this is

132
00:04:59,120 --> 00:05:01,680
going to be a public busta kube um

133
00:05:01,680 --> 00:05:03,919
holiday hack challenge 2021 sku level

134
00:05:03,919 --> 00:05:06,880
pod image um a skew level container

135
00:05:06,880 --> 00:05:09,919
image um it gets passed in a couple

136
00:05:09,919 --> 00:05:11,120
environment variables one of them is

137
00:05:11,120 --> 00:05:13,280
called monitor and that monitor is that

138
00:05:13,280 --> 00:05:16,160
casinomonitor.pit

139
00:05:16,160 --> 00:05:17,759
mme.com

140
00:05:17,759 --> 00:05:20,400
that's for a person in the middle me

141
00:05:20,400 --> 00:05:22,800
and then redis password um but redis

142
00:05:22,800 --> 00:05:24,320
password we can't see the contents

143
00:05:24,320 --> 00:05:26,720
because the contents of reddit's

144
00:05:26,720 --> 00:05:29,840
password are in a secret called redis

145
00:05:29,840 --> 00:05:32,080
called red as pwd so we can try and get

146
00:05:32,080 --> 00:05:34,080
that secret we try listing secrets and

147
00:05:34,080 --> 00:05:35,520
we're not allowed to list it i'll tell

148
00:05:35,520 --> 00:05:37,440
you that if we try to get that secret we

149
00:05:37,440 --> 00:05:39,199
aren't allowed to do that either so

150
00:05:39,199 --> 00:05:40,160
we're going to turn around and try

151
00:05:40,160 --> 00:05:41,600
something else we're going to go and

152
00:05:41,600 --> 00:05:44,960
pull a copy of that container image

153
00:05:44,960 --> 00:05:46,400
and

154
00:05:46,400 --> 00:05:48,080
because it was public we're able to just

155
00:05:48,080 --> 00:05:50,080
pull it straight to our own cali system

156
00:05:50,080 --> 00:05:51,840
and now we'll run a container based on

157
00:05:51,840 --> 00:05:53,440
an image so we can kind of explore its

158
00:05:53,440 --> 00:05:55,840
file system and the cool thing is we're

159
00:05:55,840 --> 00:05:57,039
going to do something a little bit

160
00:05:57,039 --> 00:05:58,400
better than just

161
00:05:58,400 --> 00:06:01,360
exploring its its file system you know

162
00:06:01,360 --> 00:06:03,199
in the running container

163
00:06:03,199 --> 00:06:05,440
turns out that um we're going to take

164
00:06:05,440 --> 00:06:06,720
that

165
00:06:06,720 --> 00:06:09,039
that container find secrets

166
00:06:09,039 --> 00:06:11,360
and we'll run docker inspect and this is

167
00:06:11,360 --> 00:06:13,600
going to show us that this container

168
00:06:13,600 --> 00:06:15,360
image is actually built up from a bunch

169
00:06:15,360 --> 00:06:17,840
of layers and each of the layers is

170
00:06:17,840 --> 00:06:19,840
basically a diff

171
00:06:19,840 --> 00:06:21,919
and introduces some you know introduces

172
00:06:21,919 --> 00:06:24,080
some file changes and they're all

173
00:06:24,080 --> 00:06:26,160
mounted they're union mounted together

174
00:06:26,160 --> 00:06:29,120
in an overlay file system and it's it's

175
00:06:29,120 --> 00:06:30,560
pretty cool

176
00:06:30,560 --> 00:06:32,960
what that means is similar to git

177
00:06:32,960 --> 00:06:36,160
nothing's truly ever gone um

178
00:06:36,160 --> 00:06:38,000
in here if you make a change

179
00:06:38,000 --> 00:06:40,000
in the file system and then you you know

180
00:06:40,000 --> 00:06:41,440
and then you make it you know and you

181
00:06:41,440 --> 00:06:43,919
publish that container image and then

182
00:06:43,919 --> 00:06:45,280
from that container image you make

183
00:06:45,280 --> 00:06:48,479
another change um they're all all the

184
00:06:48,479 --> 00:06:49,840
changes you ever made are there even if

185
00:06:49,840 --> 00:06:52,160
they overwrite each other um and by

186
00:06:52,160 --> 00:06:53,840
there i mean we we get them all when we

187
00:06:53,840 --> 00:06:54,960
pull down that container image and

188
00:06:54,960 --> 00:06:56,400
you're going to see that now

189
00:06:56,400 --> 00:06:59,199
so if we you know this is

190
00:06:59,199 --> 00:07:00,720
everything between the colons are these

191
00:07:00,720 --> 00:07:02,720
different images and you see from that

192
00:07:02,720 --> 00:07:05,039
those diff directories so let's go and

193
00:07:05,039 --> 00:07:06,319
take a look at the things that were

194
00:07:06,319 --> 00:07:09,599
named in there let's take one layer

195
00:07:09,599 --> 00:07:11,919
of that image and we see it's got a diff

196
00:07:11,919 --> 00:07:13,599
directory and that dif directory has

197
00:07:13,599 --> 00:07:15,120
read his password and this is just

198
00:07:15,120 --> 00:07:17,599
deleting the redis password that was in

199
00:07:17,599 --> 00:07:19,599
the image prior to this

200
00:07:19,599 --> 00:07:22,000
so let's look at an earlier point in the

201
00:07:22,000 --> 00:07:23,360
image

202
00:07:23,360 --> 00:07:25,680
and look at its diff and there we see

203
00:07:25,680 --> 00:07:27,919
there's a redis password in it and we

204
00:07:27,919 --> 00:07:29,599
can cut that redis password out so we've

205
00:07:29,599 --> 00:07:31,840
got this password that wouldn't show up

206
00:07:31,840 --> 00:07:33,280
in the image if you just pull it and

207
00:07:33,280 --> 00:07:34,800
look at it but if you go and look at the

208
00:07:34,800 --> 00:07:37,680
layers you find it and

209
00:07:37,680 --> 00:07:40,319
bob's your uncle so

210
00:07:40,319 --> 00:07:41,759
let's go and play with this the next

211
00:07:41,759 --> 00:07:42,720
thing i want to do is now that we have

212
00:07:42,720 --> 00:07:44,319
this red is password i want to see if i

213
00:07:44,319 --> 00:07:46,479
can find a service and so i'm going to

214
00:07:46,479 --> 00:07:48,800
upload an open source tool that some of

215
00:07:48,800 --> 00:07:50,800
us said uh uh in guardian started

216
00:07:50,800 --> 00:07:54,080
writing um called paradise and parity's

217
00:07:54,080 --> 00:07:55,520
got a cool little feature we just added

218
00:07:55,520 --> 00:07:58,160
recently um so i've uploaded that

219
00:07:58,160 --> 00:08:00,639
paradise into the contractor's pod and

220
00:08:00,639 --> 00:08:02,400
i'm just going to run this enumerate dns

221
00:08:02,400 --> 00:08:04,960
it's a recent feature and what it does

222
00:08:04,960 --> 00:08:08,720
is it makes a single simple simple um

223
00:08:08,720 --> 00:08:10,879
srv

224
00:08:10,879 --> 00:08:12,319
dns request for

225
00:08:12,319 --> 00:08:15,319
any.ne.service.cluster.local

226
00:08:15,759 --> 00:08:17,759
and that gets us a list of all the

227
00:08:17,759 --> 00:08:19,440
services and their ip addresses and

228
00:08:19,440 --> 00:08:20,560
their ports

229
00:08:20,560 --> 00:08:21,759
um

230
00:08:21,759 --> 00:08:24,160
and uh

231
00:08:24,160 --> 00:08:25,840
so we'll we see there's a con there's

232
00:08:25,840 --> 00:08:27,759
sku level service and contractor service

233
00:08:27,759 --> 00:08:29,759
things we were expecting but there's

234
00:08:29,759 --> 00:08:32,399
also redis dot control that means the

235
00:08:32,399 --> 00:08:35,039
control means the control name space

236
00:08:35,039 --> 00:08:37,360
um so in the control name space which we

237
00:08:37,360 --> 00:08:38,958
didn't know about yet that's a new

238
00:08:38,958 --> 00:08:42,320
namespace besides default or coop system

239
00:08:42,320 --> 00:08:45,440
there's redis and there's also dashboard

240
00:08:45,440 --> 00:08:47,200
so let's hit that dashboard first

241
00:08:47,200 --> 00:08:48,959
because it's on port 80 and that could

242
00:08:48,959 --> 00:08:50,880
be interesting so we'll exit out of

243
00:08:50,880 --> 00:08:52,640
paradise

244
00:08:52,640 --> 00:08:54,959
and we'll set up a port forward to port

245
00:08:54,959 --> 00:08:59,680
forward r80 8813 into port 80 on that

246
00:08:59,680 --> 00:09:01,120
service

247
00:09:01,120 --> 00:09:03,839
and then we'll hit this in our browser

248
00:09:03,839 --> 00:09:05,600
and we'll see this dashboards giving us

249
00:09:05,600 --> 00:09:08,399
the same information that api gave us we

250
00:09:08,399 --> 00:09:10,720
see each of the users kate libby's got a

251
00:09:10,720 --> 00:09:13,920
win rate of 90 and skew being applied to

252
00:09:13,920 --> 00:09:17,200
her casino's cheating against her by 10.

253
00:09:17,200 --> 00:09:18,000
so

254
00:09:18,000 --> 00:09:21,040
um let's go and pull up this reddit cli

255
00:09:21,040 --> 00:09:23,600
now it turns out that the dashboard and

256
00:09:23,600 --> 00:09:26,160
the redis or in the redis server are

257
00:09:26,160 --> 00:09:29,440
both running in the same container and

258
00:09:29,440 --> 00:09:30,959
let's just stipulate that we could fit

259
00:09:30,959 --> 00:09:32,880
that we figured that out

260
00:09:32,880 --> 00:09:35,360
and uh and go make use of it so

261
00:09:35,360 --> 00:09:38,640
we're using redis cli and hitting that

262
00:09:38,640 --> 00:09:40,560
redis service by name

263
00:09:40,560 --> 00:09:42,640
we're using the password we found

264
00:09:42,640 --> 00:09:44,080
and now what we're going to do is tell

265
00:09:44,080 --> 00:09:46,880
redis that it's um that its database

266
00:09:46,880 --> 00:09:49,920
file is in var dub dub html and it's

267
00:09:49,920 --> 00:09:51,680
called shell.php we're going to use that

268
00:09:51,680 --> 00:09:53,680
to create a reverse to create a web

269
00:09:53,680 --> 00:09:54,480
shell

270
00:09:54,480 --> 00:09:56,240
so flush all will empty the database and

271
00:09:56,240 --> 00:09:58,080
then we'll set one key

272
00:09:58,080 --> 00:10:00,320
to some php

273
00:10:00,320 --> 00:10:03,279
that runs cmd that runs whatever command

274
00:10:03,279 --> 00:10:05,519
is passed in on on the get

275
00:10:05,519 --> 00:10:07,839
on the get cmd parameter just runs it

276
00:10:07,839 --> 00:10:09,839
and this was in holiday heck challenge

277
00:10:09,839 --> 00:10:11,839
last year in uh one of the terminal

278
00:10:11,839 --> 00:10:12,720
games

279
00:10:12,720 --> 00:10:15,040
um

280
00:10:15,279 --> 00:10:18,079
so we'll create this we'll create this

281
00:10:18,079 --> 00:10:20,000
key we'll hit save

282
00:10:20,000 --> 00:10:22,320
and exit and now that means that we've

283
00:10:22,320 --> 00:10:24,480
created this shell.php so let's go and

284
00:10:24,480 --> 00:10:27,360
curl that dashboard

285
00:10:27,360 --> 00:10:29,200
on shell.php

286
00:10:29,200 --> 00:10:33,600
pass in command equal to id and

287
00:10:33,600 --> 00:10:36,480
it worked we've gotta we've got users so

288
00:10:36,480 --> 00:10:38,800
we'll do minus s for silent mode

289
00:10:38,800 --> 00:10:41,120
and now let's try a more complicated

290
00:10:41,120 --> 00:10:42,880
version and this complicated version is

291
00:10:42,880 --> 00:10:45,279
just gonna run um i'm interpreter is

292
00:10:45,279 --> 00:10:46,320
going to pull down and run an

293
00:10:46,320 --> 00:10:48,240
interpreter binary just like we did with

294
00:10:48,240 --> 00:10:51,440
uh with the uh with the first um web

295
00:10:51,440 --> 00:10:53,040
application we saw here

296
00:10:53,040 --> 00:10:54,320
so

297
00:10:54,320 --> 00:10:55,920
let's go interact

298
00:10:55,920 --> 00:10:56,959
with

299
00:10:56,959 --> 00:10:58,560
that pod that we're in with the one

300
00:10:58,560 --> 00:11:00,880
that's running redis and we just set up

301
00:11:00,880 --> 00:11:03,120
a terminal variable and uh and now we'll

302
00:11:03,120 --> 00:11:04,000
clear

303
00:11:04,000 --> 00:11:06,720
and so if we take a look we see flag we

304
00:11:06,720 --> 00:11:08,720
can go read the flag to get a hint it

305
00:11:08,720 --> 00:11:11,600
says hey you could replace the the

306
00:11:11,600 --> 00:11:13,839
um the skew amounts the cheating amounts

307
00:11:13,839 --> 00:11:15,120
in the redis database but they'll get

308
00:11:15,120 --> 00:11:16,399
overwritten because the way this thing

309
00:11:16,399 --> 00:11:19,040
actually works is there's a sku level

310
00:11:19,040 --> 00:11:20,160
api

311
00:11:20,160 --> 00:11:21,760
and you know that was that thing we saw

312
00:11:21,760 --> 00:11:23,440
in the default namespace and it

313
00:11:23,440 --> 00:11:25,920
populates the sku amounts by checking

314
00:11:25,920 --> 00:11:28,480
the win rates with this api that isn't

315
00:11:28,480 --> 00:11:30,320
hosted in the cluster the that casino

316
00:11:30,320 --> 00:11:32,880
monitor one and so it says listen if you

317
00:11:32,880 --> 00:11:34,720
can person in the middle

318
00:11:34,720 --> 00:11:37,760
this api the casino monitor api

319
00:11:37,760 --> 00:11:40,000
then you could break this and so that's

320
00:11:40,000 --> 00:11:42,160
we're gonna do because there's a cool

321
00:11:42,160 --> 00:11:45,120
cbe in kubernetes

322
00:11:45,120 --> 00:11:47,920
that's kind of almost a feature

323
00:11:47,920 --> 00:11:49,680
there are workarounds being introduced

324
00:11:49,680 --> 00:11:52,079
but this is just kind of a function

325
00:11:52,079 --> 00:11:54,000
and so it's not quickly it wasn't

326
00:11:54,000 --> 00:11:55,600
quickly and easily patched was found

327
00:11:55,600 --> 00:11:56,880
last year

328
00:11:56,880 --> 00:12:00,000
so let's first to so we can first in the

329
00:12:00,000 --> 00:12:01,600
middle this let's just interact with the

330
00:12:01,600 --> 00:12:03,200
api so we know what it's supposed to be

331
00:12:03,200 --> 00:12:04,480
sending out so that we can send out

332
00:12:04,480 --> 00:12:06,800
something that's similar um so we do

333
00:12:06,800 --> 00:12:09,200
this curl against that api against up or

334
00:12:09,200 --> 00:12:11,279
down it says you need a player name so

335
00:12:11,279 --> 00:12:12,959
let's go grab that player name right off

336
00:12:12,959 --> 00:12:15,519
the dashboard kate libby and throw that

337
00:12:15,519 --> 00:12:16,240
in

338
00:12:16,240 --> 00:12:18,720
kate.libby it's we get back an answer

339
00:12:18,720 --> 00:12:20,639
90. okay so it's

340
00:12:20,639 --> 00:12:23,519
this api is just giving win rate it's

341
00:12:23,519 --> 00:12:26,320
not giving skew it's nice and simple so

342
00:12:26,320 --> 00:12:28,240
that means that we can if we can person

343
00:12:28,240 --> 00:12:29,839
in the middle this we can make it so we

344
00:12:29,839 --> 00:12:30,880
control

345
00:12:30,880 --> 00:12:33,040
what win rate the kubernetes cluster is

346
00:12:33,040 --> 00:12:35,040
seeing and thus whether it'll cheat or

347
00:12:35,040 --> 00:12:36,000
not

348
00:12:36,000 --> 00:12:39,279
so we've got our we've got our uh

349
00:12:39,279 --> 00:12:41,120
control setup that we do

350
00:12:41,120 --> 00:12:42,880
um and

351
00:12:42,880 --> 00:12:45,519
uh in this player db in the redis pod

352
00:12:45,519 --> 00:12:47,279
and now we say okay in the default

353
00:12:47,279 --> 00:12:48,959
namespace give me a list of all the

354
00:12:48,959 --> 00:12:51,360
things that i can do we use auth can i

355
00:12:51,360 --> 00:12:55,200
and we get back um hey for services

356
00:12:55,200 --> 00:12:57,279
you're allowed to create them and get

357
00:12:57,279 --> 00:12:59,680
them and and get them and list them um

358
00:12:59,680 --> 00:13:03,040
well that's cool so let's let's use our

359
00:13:03,040 --> 00:13:04,399
let's use our privileges to do that

360
00:13:04,399 --> 00:13:06,399
first let's take a look at the services

361
00:13:06,399 --> 00:13:08,240
that are there there's a contractor

362
00:13:08,240 --> 00:13:09,920
service and we're going to use the

363
00:13:09,920 --> 00:13:12,639
contractor service um so that we can get

364
00:13:12,639 --> 00:13:14,160
traffic so we can get the traffic that

365
00:13:14,160 --> 00:13:15,600
we're going to create we're going to

366
00:13:15,600 --> 00:13:17,519
create our own service we want to send

367
00:13:17,519 --> 00:13:18,560
it the same

368
00:13:18,560 --> 00:13:19,920
send it

369
00:13:19,920 --> 00:13:21,360
its traffic to the same place the

370
00:13:21,360 --> 00:13:23,360
contractor service goes because the

371
00:13:23,360 --> 00:13:25,519
contractors pause the one is the one

372
00:13:25,519 --> 00:13:26,959
that we've got code execution in where

373
00:13:26,959 --> 00:13:28,399
we can affect

374
00:13:28,399 --> 00:13:30,720
how it responds to requests

375
00:13:30,720 --> 00:13:33,440
so if we look at this contractor service

376
00:13:33,440 --> 00:13:35,600
there's a selector and that's what

377
00:13:35,600 --> 00:13:37,360
that's what controls where the traffic

378
00:13:37,360 --> 00:13:40,000
goes it goes to any pods where app is

379
00:13:40,000 --> 00:13:41,680
set to contractors

380
00:13:41,680 --> 00:13:44,079
so in our service we just have to set

381
00:13:44,079 --> 00:13:45,839
the same selector

382
00:13:45,839 --> 00:13:47,279
so we're going to create our own service

383
00:13:47,279 --> 00:13:49,360
we're i'm uploading it i've built it

384
00:13:49,360 --> 00:13:51,040
already and

385
00:13:51,040 --> 00:13:53,120
i'm going to show you that service here

386
00:13:53,120 --> 00:13:56,160
we go so the service is kind service

387
00:13:56,160 --> 00:13:57,760
it's got a name that name doesn't matter

388
00:13:57,760 --> 00:13:59,839
so much what matters here is what's in

389
00:13:59,839 --> 00:14:01,920
the spec so the external ips anything

390
00:14:01,920 --> 00:14:04,639
going to these ips and this is the ip

391
00:14:04,639 --> 00:14:06,959
address that that dns name maps to

392
00:14:06,959 --> 00:14:10,000
um is going to instead be sent to pods

393
00:14:10,000 --> 00:14:12,000
in the cluster

394
00:14:12,000 --> 00:14:15,040
with apps at the contractors

395
00:14:15,040 --> 00:14:17,279
and it's going to be only for things

396
00:14:17,279 --> 00:14:18,880
that we're going to port 80 on that

397
00:14:18,880 --> 00:14:20,399
external ip

398
00:14:20,399 --> 00:14:22,079
and they'll instead go to port 8000 on

399
00:14:22,079 --> 00:14:24,880
those pods so if we apply this we can

400
00:14:24,880 --> 00:14:26,720
create this service we're able to person

401
00:14:26,720 --> 00:14:28,880
in the middle anything going anything

402
00:14:28,880 --> 00:14:30,399
from this namespace

403
00:14:30,399 --> 00:14:32,639
going out to that external ip outside

404
00:14:32,639 --> 00:14:34,240
the cluster it's not going to go to the

405
00:14:34,240 --> 00:14:36,079
outside it's going to go instead to what

406
00:14:36,079 --> 00:14:37,600
we want it to go to

407
00:14:37,600 --> 00:14:40,000
so now we've got that set up we need to

408
00:14:40,000 --> 00:14:42,160
go back over to the

409
00:14:42,160 --> 00:14:46,480
contractors pod and set up answers for

410
00:14:46,480 --> 00:14:48,720
any of the incoming requests we get

411
00:14:48,720 --> 00:14:50,079
so we're going to do a little quick

412
00:14:50,079 --> 00:14:51,680
little thing we're going to say wait if

413
00:14:51,680 --> 00:14:52,959
all the requests are going to be against

414
00:14:52,959 --> 00:14:54,720
these users this is kind of the simplest

415
00:14:54,720 --> 00:14:57,120
way to do it um against you know these

416
00:14:57,120 --> 00:14:58,480
urls are going to be

417
00:14:58,480 --> 00:15:00,639
slash up or down slash you know

418
00:15:00,639 --> 00:15:03,680
kate.libby or dot murphy well let's just

419
00:15:03,680 --> 00:15:06,160
take these and we'll create a little

420
00:15:06,160 --> 00:15:08,399
loop

421
00:15:08,399 --> 00:15:09,760
um and we're just going to create a

422
00:15:09,760 --> 00:15:11,519
directory we create a directory called

423
00:15:11,519 --> 00:15:13,600
up or down we create a file

424
00:15:13,600 --> 00:15:16,000
for each of these users in the directory

425
00:15:16,000 --> 00:15:18,000
and if you look at the contents of one

426
00:15:18,000 --> 00:15:19,839
of these files we'll look at the one for

427
00:15:19,839 --> 00:15:21,279
dave murphy

428
00:15:21,279 --> 00:15:24,000
it just returns five so

429
00:15:24,000 --> 00:15:26,720
not that complex in api but

430
00:15:26,720 --> 00:15:29,040
now if you hit skew level skew level

431
00:15:29,040 --> 00:15:32,000
goes and queries um the skew the skew

432
00:15:32,000 --> 00:15:34,399
level program you're acting with here

433
00:15:34,399 --> 00:15:37,199
goes and queries that external ip but it

434
00:15:37,199 --> 00:15:39,120
gets rerouted to us so a person in the

435
00:15:39,120 --> 00:15:41,600
middling it and now everybody shows up

436
00:15:41,600 --> 00:15:43,839
with a win rate of five um which means

437
00:15:43,839 --> 00:15:46,160
they get a skew a cheating of zero no

438
00:15:46,160 --> 00:15:48,800
cheating and uh and that means we're

439
00:15:48,800 --> 00:15:50,399
that means we're kind of saving the day

440
00:15:50,399 --> 00:15:52,800
so when we we will re when we reload

441
00:15:52,800 --> 00:15:55,600
this dashboard we see five we see zero

442
00:15:55,600 --> 00:15:57,839
and things are good

443
00:15:57,839 --> 00:16:00,320
we were victorious

444
00:16:00,320 --> 00:16:01,920
okay some resources you might find

445
00:16:01,920 --> 00:16:03,040
helpful

446
00:16:03,040 --> 00:16:05,279
the first link is paradise the tool we

447
00:16:05,279 --> 00:16:07,519
used here it's got a lot more features

448
00:16:07,519 --> 00:16:09,360
and we'd love your help developing it

449
00:16:09,360 --> 00:16:12,720
the cve is the second link the act that

450
00:16:12,720 --> 00:16:14,320
led us to the person in the middle

451
00:16:14,320 --> 00:16:16,240
external ip

452
00:16:16,240 --> 00:16:19,120
the third link is the slides which also

453
00:16:19,120 --> 00:16:21,759
contain an extra slide with a summary of

454
00:16:21,759 --> 00:16:23,199
the attack path

455
00:16:23,199 --> 00:16:25,040
the fourth link is in guardian's

456
00:16:25,040 --> 00:16:27,759
communities page where you can find

457
00:16:27,759 --> 00:16:30,639
tools like paradise and bust a cube

458
00:16:30,639 --> 00:16:32,079
videos and

459
00:16:32,079 --> 00:16:34,959
other resources and then finally the

460
00:16:34,959 --> 00:16:38,240
last link is a youtube link for

461
00:16:38,240 --> 00:16:42,320
a longer um kubernetes introduction talk

462
00:16:42,320 --> 00:16:44,959
it's got some good introduction to how

463
00:16:44,959 --> 00:16:47,279
kubernetes works and then it's got its

464
00:16:47,279 --> 00:16:49,360
own really cool attack path themed on

465
00:16:49,360 --> 00:16:50,560
scott pilgrim

466
00:16:50,560 --> 00:16:53,199
versus the world a classic movie so

467
00:16:53,199 --> 00:16:55,600
anyway i hope to see you around

468
00:16:55,600 --> 00:16:57,040
kringlecon i know i'll be playing the

469
00:16:57,040 --> 00:16:58,560
holiday hack challenge so hopefully

470
00:16:58,560 --> 00:17:00,560
we'll meet each other virtually

471
00:17:00,560 --> 00:17:04,519
thank you so much for your time

472
00:17:07,119 --> 00:17:09,198
you

