1
00:00:00,030 --> 00:00:05,670
yeah man yeah all right no problem yeah

2
00:00:04,110 --> 00:00:08,400
listen I'm just finishing up some eggnog

3
00:00:05,670 --> 00:00:10,769
I get I record this thing for for

4
00:00:08,400 --> 00:00:13,500
Kringle con yeah no problem

5
00:00:10,769 --> 00:00:15,450
she loves fruitcake sure just get a

6
00:00:13,500 --> 00:00:22,948
fruitcake again it'll be fine all right

7
00:00:15,450 --> 00:00:24,689
dude Thanks hey everyone thanks for

8
00:00:22,949 --> 00:00:28,019
coming to Kringle Kong two turtledoves

9
00:00:24,689 --> 00:00:30,029
and thanks for attending my talk my name

10
00:00:28,019 --> 00:00:31,229
is James Brodsky I work for Splunk and

11
00:00:30,029 --> 00:00:33,870
I'm based just outside of Boulder

12
00:00:31,230 --> 00:00:35,460
Colorado this is my first time speaking

13
00:00:33,870 --> 00:00:39,000
at Kringle con that I couldn't be more

14
00:00:35,460 --> 00:00:41,640
excited I think I have one of the best

15
00:00:39,000 --> 00:00:43,350
jobs in the world I lead a small global

16
00:00:41,640 --> 00:00:45,629
team of Splunk most senior field

17
00:00:43,350 --> 00:00:47,160
security resources now I've been a

18
00:00:45,629 --> 00:00:48,690
Splunk a long time about six and a half

19
00:00:47,160 --> 00:00:50,730
years one of the things I do every year

20
00:00:48,690 --> 00:00:52,289
at Splunk is to speak at our user

21
00:00:50,730 --> 00:00:54,919
conference on the collection and

22
00:00:52,289 --> 00:00:57,840
analysis of granular endpoint data

23
00:00:54,920 --> 00:01:01,530
I'm also an occasional scenario creator

24
00:00:57,840 --> 00:01:03,480
a constant author and co-owner of our

25
00:01:01,530 --> 00:01:06,210
boss of the sock blue team CTF

26
00:01:03,480 --> 00:01:08,670
experience when we created boss of the

27
00:01:06,210 --> 00:01:10,530
sock or box four years ago we were

28
00:01:08,670 --> 00:01:11,970
heavily influenced by what sands and

29
00:01:10,530 --> 00:01:13,860
counter Haqq have done with the holiday

30
00:01:11,970 --> 00:01:16,560
hack challenge so it's really great to

31
00:01:13,860 --> 00:01:17,850
be able to contribute back to it and

32
00:01:16,560 --> 00:01:19,680
most of what you're gonna see in the

33
00:01:17,850 --> 00:01:22,140
Splunk portion of holiday hack challenge

34
00:01:19,680 --> 00:01:25,200
this year was created by my teammate and

35
00:01:22,140 --> 00:01:29,130
friend Dave Harold huge shout out to him

36
00:01:25,200 --> 00:01:30,509
for what he has done there now the point

37
00:01:29,130 --> 00:01:32,670
of this session is to teach you the

38
00:01:30,509 --> 00:01:34,950
basics of searching through log data in

39
00:01:32,670 --> 00:01:37,439
Splunk Enterprise we of course use

40
00:01:34,950 --> 00:01:40,049
Splunk at Splunk to search log data

41
00:01:37,439 --> 00:01:42,119
because we work force look but in

42
00:01:40,049 --> 00:01:44,490
general you don't have to use Splunk and

43
00:01:42,119 --> 00:01:46,229
these techniques can be generically

44
00:01:44,490 --> 00:01:49,079
applied no matter how you are searching

45
00:01:46,229 --> 00:01:51,090
this data however you will need to use

46
00:01:49,079 --> 00:01:53,130
Splunk to solve a grand challenge and

47
00:01:51,090 --> 00:01:54,840
holiday hack challenge so you have come

48
00:01:53,130 --> 00:01:56,270
to the right place for some pointers on

49
00:01:54,840 --> 00:02:00,060
how to do that

50
00:01:56,270 --> 00:02:02,969
our agenda today looks like this first

51
00:02:00,060 --> 00:02:04,950
I'm gonna tell you what Splunk is that

52
00:02:02,969 --> 00:02:05,399
might get a little salesy but bear with

53
00:02:04,950 --> 00:02:07,710
me

54
00:02:05,399 --> 00:02:09,750
then we'll show you what data we put in

55
00:02:07,710 --> 00:02:11,310
Splunk for you we'll tell you the basics

56
00:02:09,750 --> 00:02:13,770
on how to search it using fields

57
00:02:11,310 --> 00:02:15,300
extracted automatically from it then

58
00:02:13,770 --> 00:02:18,090
touch on pivoting through the data based

59
00:02:15,300 --> 00:02:19,590
on time stamps and finally we'll show

60
00:02:18,090 --> 00:02:21,960
you how our automatically processing

61
00:02:19,590 --> 00:02:24,090
email going to and from elf University

62
00:02:21,960 --> 00:02:28,620
and how you can search through that

63
00:02:24,090 --> 00:02:32,280
metadata in Splunk as well but first

64
00:02:28,620 --> 00:02:33,930
what is look it really is like a giant

65
00:02:32,280 --> 00:02:36,690
frying pan where you put all your

66
00:02:33,930 --> 00:02:38,640
chestnuts of data you roast them up over

67
00:02:36,690 --> 00:02:40,770
an open fire until they're extremely

68
00:02:38,640 --> 00:02:42,660
delicious you crack them open and then

69
00:02:40,770 --> 00:02:46,920
you use them to investigate security

70
00:02:42,660 --> 00:02:48,720
incidents no really it is very much just

71
00:02:46,920 --> 00:02:51,510
like that any data with a timestamp

72
00:02:48,720 --> 00:02:53,880
regardless of source or schema or format

73
00:02:51,510 --> 00:02:55,530
is fair game for Splunk enterprise and

74
00:02:53,880 --> 00:02:58,290
it's wise bug has become a de facto

75
00:02:55,530 --> 00:03:00,510
standard for searching timestamp machine

76
00:02:58,290 --> 00:03:02,160
data we're particularly popular within

77
00:03:00,510 --> 00:03:04,829
security organizations across the world

78
00:03:02,160 --> 00:03:07,590
large and small we provide the ability

79
00:03:04,830 --> 00:03:10,260
to consume all of your security related

80
00:03:07,590 --> 00:03:12,150
data in one scaleable place provisioned

81
00:03:10,260 --> 00:03:14,130
either on Prem or in the cloud or both

82
00:03:12,150 --> 00:03:16,110
and then we allow you to search it

83
00:03:14,130 --> 00:03:18,390
quickly manipulate it to your heart's

84
00:03:16,110 --> 00:03:21,360
content gain significant insights from

85
00:03:18,390 --> 00:03:23,130
it we are insanely graded security

86
00:03:21,360 --> 00:03:25,020
incident investigation and Incident

87
00:03:23,130 --> 00:03:27,060
Response which is what we'll ask you to

88
00:03:25,020 --> 00:03:29,459
do in this challenge but we're also

89
00:03:27,060 --> 00:03:32,610
useful across many other security use

90
00:03:29,459 --> 00:03:34,350
cases as well and of course any other

91
00:03:32,610 --> 00:03:37,170
data-driven use case you might have

92
00:03:34,350 --> 00:03:38,970
outside security okay that's the end of

93
00:03:37,170 --> 00:03:42,958
the salesy stuff let's get down to some

94
00:03:38,970 --> 00:03:44,609
details when you first log into the

95
00:03:42,959 --> 00:03:47,010
Splunk instance we've provided it will

96
00:03:44,610 --> 00:03:48,720
look like this dave has customized it

97
00:03:47,010 --> 00:03:50,970
extensively for you to interact with

98
00:03:48,720 --> 00:03:54,090
several of the elf you stock personnel

99
00:03:50,970 --> 00:03:55,680
using a slack like interface and you

100
00:03:54,090 --> 00:03:57,000
really should do so in order to start

101
00:03:55,680 --> 00:03:59,280
getting some hints and some guidance

102
00:03:57,000 --> 00:04:01,560
about how to solve the seven training

103
00:03:59,280 --> 00:04:03,300
questions and the capstone challenge

104
00:04:01,560 --> 00:04:05,490
question now mind you if you are a

105
00:04:03,300 --> 00:04:07,320
Splunk ninja you might just go right to

106
00:04:05,490 --> 00:04:09,930
that challenge question and answer it be

107
00:04:07,320 --> 00:04:12,120
our guest but for the rest of you to get

108
00:04:09,930 --> 00:04:17,820
to the Splunk search interface click the

109
00:04:12,120 --> 00:04:19,048
search option in the menu bar now the

110
00:04:17,820 --> 00:04:21,149
first thing you may want to know about

111
00:04:19,048 --> 00:04:22,799
any Splunk instance is what data isn't

112
00:04:21,149 --> 00:04:24,690
two ways to figure that out are listed

113
00:04:22,800 --> 00:04:26,770
on this slide when you have a leading

114
00:04:24,690 --> 00:04:28,000
pipe before a search command it

115
00:04:26,770 --> 00:04:29,799
means you're not searching the raw data

116
00:04:28,000 --> 00:04:32,199
stored on disk you're specifying what we

117
00:04:29,800 --> 00:04:34,389
call a generating command when you run

118
00:04:32,199 --> 00:04:39,370
that first metadata one it will look

119
00:04:34,389 --> 00:04:41,740
just like this here you would take that

120
00:04:39,370 --> 00:04:43,720
command type it in just like it appeared

121
00:04:41,740 --> 00:04:45,430
in the previous slide and hit enter and

122
00:04:43,720 --> 00:04:47,319
you'll immediately see a list of all the

123
00:04:45,430 --> 00:04:48,909
source types of data stored and your

124
00:04:47,319 --> 00:04:51,759
Splunk instance now source type in

125
00:04:48,909 --> 00:04:54,099
general maps to a particular variety and

126
00:04:51,759 --> 00:04:57,370
source of machine data we'll cover these

127
00:04:54,099 --> 00:04:59,110
four in some detail during this talk we

128
00:04:57,370 --> 00:05:00,880
really do have just a little data in

129
00:04:59,110 --> 00:05:02,380
this flunk instance to make it very

130
00:05:00,880 --> 00:05:07,270
approachable and easy to learn from

131
00:05:02,380 --> 00:05:08,740
there are only 17 types of data one of

132
00:05:07,270 --> 00:05:10,539
the most popular types of data that

133
00:05:08,740 --> 00:05:12,069
splints security customers collect our

134
00:05:10,539 --> 00:05:13,780
windows event wallets and the most

135
00:05:12,069 --> 00:05:15,490
popular way they do it is through

136
00:05:13,780 --> 00:05:17,318
something called our Splunk universal

137
00:05:15,490 --> 00:05:19,960
folder which runs on just about any

138
00:05:17,319 --> 00:05:22,150
version of Windows or Mac or Linux or

139
00:05:19,960 --> 00:05:23,680
some other operating systems as well now

140
00:05:22,150 --> 00:05:25,719
in this case we put a universal

141
00:05:23,680 --> 00:05:28,750
forwarder on a particular Windows 10

142
00:05:25,719 --> 00:05:30,759
desktop at elf you we use some common

143
00:05:28,750 --> 00:05:33,250
best practices to set up Windows Event

144
00:05:30,759 --> 00:05:35,620
log Auto policies as you can see on the

145
00:05:33,250 --> 00:05:37,030
slide what are the most important things

146
00:05:35,620 --> 00:05:39,909
we're collecting from this machine are

147
00:05:37,030 --> 00:05:42,309
the 40 688 events which are processed

148
00:05:39,909 --> 00:05:45,430
stored events and we also configured

149
00:05:42,310 --> 00:05:47,289
full command-line argument logging one

150
00:05:45,430 --> 00:05:49,919
thing about these events the process IDs

151
00:05:47,289 --> 00:05:55,060
are reported by windows in a hexadecimal

152
00:05:49,919 --> 00:05:57,250
format here's a basics flunk search to

153
00:05:55,060 --> 00:05:59,199
show you all the 46 88 Windows events in

154
00:05:57,250 --> 00:06:00,610
the system you could pause the video if

155
00:05:59,199 --> 00:06:05,770
you'd like and try it for yourself if

156
00:06:00,610 --> 00:06:07,419
you want note up in the upper right that

157
00:06:05,770 --> 00:06:09,789
we are searching all times flood

158
00:06:07,419 --> 00:06:11,680
collects all data and accurately

159
00:06:09,789 --> 00:06:14,139
timestamps each event as it comes in and

160
00:06:11,680 --> 00:06:16,569
is written to disk in a normal Splunk

161
00:06:14,139 --> 00:06:18,460
instance you always specify a time range

162
00:06:16,569 --> 00:06:20,830
to improve the performance of your

163
00:06:18,460 --> 00:06:22,599
search now in this case there's very

164
00:06:20,830 --> 00:06:24,580
little data in the splink system so feel

165
00:06:22,599 --> 00:06:29,080
free to leave this time picker at all

166
00:06:24,580 --> 00:06:32,169
time now Splunk reads the raw collected

167
00:06:29,080 --> 00:06:33,430
events off disk and it extracts all of

168
00:06:32,169 --> 00:06:35,380
the interesting fields from the data

169
00:06:33,430 --> 00:06:38,020
automatically at search time it's a late

170
00:06:35,380 --> 00:06:39,580
binding schema but it allows you to

171
00:06:38,020 --> 00:06:42,340
quickly see what's important in the day

172
00:06:39,580 --> 00:06:43,688
and explore it via mouse-click now

173
00:06:42,340 --> 00:06:45,340
because of the way we've configured

174
00:06:43,689 --> 00:06:46,240
these systems for the challenge your

175
00:06:45,340 --> 00:06:48,520
fields on the Left

176
00:06:46,240 --> 00:06:50,229
may not look exactly the same as this

177
00:06:48,520 --> 00:06:51,878
screen shot you may have them

178
00:06:50,229 --> 00:06:56,889
categorized differently in terms of

179
00:06:51,879 --> 00:06:59,139
selected versus interesting here are

180
00:06:56,889 --> 00:07:00,759
some interesting bits of data in a 46 88

181
00:06:59,139 --> 00:07:03,610
event is highlighted at the bottom the

182
00:07:00,759 --> 00:07:05,650
process ID in X and the parent or

183
00:07:03,610 --> 00:07:07,659
creator process ID and then the full

184
00:07:05,650 --> 00:07:09,938
process command line of the process that

185
00:07:07,659 --> 00:07:14,379
executed on the Windows system of this

186
00:07:09,939 --> 00:07:15,969
particular time stamp now what can we do

187
00:07:14,379 --> 00:07:18,129
about those hex values to make them

188
00:07:15,969 --> 00:07:20,050
regular integers to correlate them with

189
00:07:18,129 --> 00:07:22,569
other data sources well that's the

190
00:07:20,050 --> 00:07:25,539
holidays so let's get fancy you can use

191
00:07:22,569 --> 00:07:28,930
an eval statement like the one above on

192
00:07:25,539 --> 00:07:31,270
the slide to add a new field in your

193
00:07:28,930 --> 00:07:32,860
results and what that new fields gonna

194
00:07:31,270 --> 00:07:35,318
do is it's gonna contain the integer

195
00:07:32,860 --> 00:07:38,830
value corresponding to the hex field the

196
00:07:35,319 --> 00:07:41,139
eval command takes whatever is in the

197
00:07:38,830 --> 00:07:43,060
new process ID field and then what it

198
00:07:41,139 --> 00:07:45,610
does is it runs the two number function

199
00:07:43,060 --> 00:07:47,529
against it with an argument of 16

200
00:07:45,610 --> 00:07:50,199
because we are telling the function to

201
00:07:47,529 --> 00:07:52,210
convert to base 16 which is also the

202
00:07:50,199 --> 00:07:54,039
same as hexadecimal then we take that

203
00:07:52,210 --> 00:07:56,109
result and we make a new field in the

204
00:07:54,039 --> 00:08:00,279
data called hex underscore convert

205
00:07:56,110 --> 00:08:04,419
underscore pid' with that value if you

206
00:08:00,279 --> 00:08:06,219
try it the result will look like this we

207
00:08:04,419 --> 00:08:07,628
also have another extremely popular end

208
00:08:06,219 --> 00:08:09,610
point data source and our Splunk

209
00:08:07,629 --> 00:08:11,740
instance system on written by mark

210
00:08:09,610 --> 00:08:13,690
russinovich at Microsoft this is a

211
00:08:11,740 --> 00:08:15,550
fantastic free add-on for Windows that

212
00:08:13,690 --> 00:08:17,110
provides very granular forensic data

213
00:08:15,550 --> 00:08:19,150
about many activities on a Windows

214
00:08:17,110 --> 00:08:21,460
endpoint including as you can see on the

215
00:08:19,150 --> 00:08:23,500
screen file creations DNS lookups

216
00:08:21,460 --> 00:08:25,989
network information tied to process

217
00:08:23,500 --> 00:08:28,000
process creations registry changes image

218
00:08:25,990 --> 00:08:30,219
loads and so on it's extremely

219
00:08:28,000 --> 00:08:32,260
configurable but don't start from

220
00:08:30,219 --> 00:08:35,169
scratch with your system on configs we

221
00:08:32,260 --> 00:08:37,929
certainly didn't our friend Olaf hartong

222
00:08:35,169 --> 00:08:39,640
has provided an excellent modular system

223
00:08:37,929 --> 00:08:41,679
on config that we recommend and that we

224
00:08:39,640 --> 00:08:44,140
used this year in the holiday hack

225
00:08:41,679 --> 00:08:46,750
challenge it was forked originally from

226
00:08:44,140 --> 00:08:49,630
Swift on Security's work just Google

227
00:08:46,750 --> 00:08:51,730
Olaf sis Mon and you'll find his github

228
00:08:49,630 --> 00:08:53,209
repo by the way I'll show you how we get

229
00:08:51,730 --> 00:08:56,629
this pretty output

230
00:08:53,209 --> 00:08:58,790
a few slides anyway let's talk a little

231
00:08:56,629 --> 00:09:00,589
bit more about searching type this into

232
00:08:58,790 --> 00:09:02,748
your Splunk search bar next we're saying

233
00:09:00,589 --> 00:09:05,029
search the source type called win event

234
00:09:02,749 --> 00:09:07,129
log for the free text string see bonus

235
00:09:05,029 --> 00:09:09,670
which is a username we might be

236
00:09:07,129 --> 00:09:11,839
interested in

237
00:09:09,670 --> 00:09:13,128
Splunk responds what the interesting

238
00:09:11,839 --> 00:09:15,649
fields on the left and then shows the

239
00:09:13,129 --> 00:09:21,019
raw event and highlights the free text

240
00:09:15,649 --> 00:09:23,509
in that event that we searched for okay

241
00:09:21,019 --> 00:09:25,759
let's pivot out remove the source type

242
00:09:23,509 --> 00:09:27,949
portion of the search and see what other

243
00:09:25,759 --> 00:09:32,809
source types that the string see bonus

244
00:09:27,949 --> 00:09:35,719
shows up in now we are just searching

245
00:09:32,809 --> 00:09:37,368
for the text see bonus and we can see it

246
00:09:35,720 --> 00:09:41,059
shows up in a total of three source

247
00:09:37,369 --> 00:09:43,899
types and there's 1421 events that

248
00:09:41,059 --> 00:09:43,899
contain that string

249
00:09:44,559 --> 00:09:48,259
here's another useful thing to do

250
00:09:46,579 --> 00:09:50,239
summarizing our data by the fields we

251
00:09:48,259 --> 00:09:52,429
extract from it I told you I'd show you

252
00:09:50,240 --> 00:09:54,589
how we get table output well here's a

253
00:09:52,429 --> 00:09:59,629
search I'll talk through it on the next

254
00:09:54,589 --> 00:10:02,059
slide here's the output we're saying

255
00:09:59,629 --> 00:10:03,769
take the system on data count it up by

256
00:10:02,059 --> 00:10:05,269
each unique combination of event code

257
00:10:03,769 --> 00:10:07,730
and event description then sort the

258
00:10:05,269 --> 00:10:10,009
output descending by the resulting count

259
00:10:07,730 --> 00:10:11,809
so that's three search commands strung

260
00:10:10,009 --> 00:10:13,790
together with pipes the first one

261
00:10:11,809 --> 00:10:18,259
returns the data the second counts it up

262
00:10:13,790 --> 00:10:20,329
and the third one sorts it now we have a

263
00:10:18,259 --> 00:10:21,769
very strong relationship with time at

264
00:10:20,329 --> 00:10:23,359
Splunk in fact we have many patents

265
00:10:21,769 --> 00:10:25,790
surrounding our use of timestamps in the

266
00:10:23,360 --> 00:10:27,649
product one very popular technique for

267
00:10:25,790 --> 00:10:30,679
analysts to use during investigations is

268
00:10:27,649 --> 00:10:32,809
to find events that are time adjacent to

269
00:10:30,679 --> 00:10:37,220
other interesting events let's see how

270
00:10:32,809 --> 00:10:39,740
to do that in Splunk here I have landed

271
00:10:37,220 --> 00:10:41,269
on a search that returns a single system

272
00:10:39,740 --> 00:10:44,209
own event that's interesting to me it's

273
00:10:41,269 --> 00:10:45,410
Outlook opening up a Word document maybe

274
00:10:44,209 --> 00:10:47,959
I want to know what happened on this

275
00:10:45,410 --> 00:10:50,299
system or on any system in the 5 seconds

276
00:10:47,959 --> 00:10:53,170
before and after this one event how do I

277
00:10:50,299 --> 00:10:53,170
get split to do that

278
00:10:53,649 --> 00:10:57,350
assuming you landed on an event of

279
00:10:55,670 --> 00:11:00,319
interest you just click the time stamp

280
00:10:57,350 --> 00:11:02,509
and you'll see a pop-up that looks like

281
00:11:00,319 --> 00:11:04,490
this you can enter a time range in this

282
00:11:02,509 --> 00:11:06,830
case I've chosen 5 seconds before and

283
00:11:04,490 --> 00:11:10,460
after this event then click

284
00:11:06,830 --> 00:11:12,200
and notice here that my search time

285
00:11:10,460 --> 00:11:14,540
range automatically changed to five

286
00:11:12,200 --> 00:11:19,550
seconds before and five seconds after my

287
00:11:14,540 --> 00:11:21,410
initial event now we pin it and we make

288
00:11:19,550 --> 00:11:23,150
our search term broader in this case

289
00:11:21,410 --> 00:11:25,310
I'll just put in a wild-card asterisk

290
00:11:23,150 --> 00:11:27,470
and hit enter you'll probably be more

291
00:11:25,310 --> 00:11:29,119
specific in a real splint production

292
00:11:27,470 --> 00:11:30,950
instance like specifying a host or an

293
00:11:29,120 --> 00:11:33,380
index but to keep this simple will use a

294
00:11:30,950 --> 00:11:35,090
start hit enter and you'll see all

295
00:11:33,380 --> 00:11:36,920
events anchored to your original time

296
00:11:35,090 --> 00:11:39,710
but that happened in the five seconds

297
00:11:36,920 --> 00:11:42,530
before and after it very useful to see a

298
00:11:39,710 --> 00:11:43,910
sequence of events or or to correlate

299
00:11:42,530 --> 00:11:48,740
activity that happened around the same

300
00:11:43,910 --> 00:11:50,600
time okay finally we'll talk about how L

301
00:11:48,740 --> 00:11:52,910
few processes all incoming and outgoing

302
00:11:50,600 --> 00:11:54,770
email we installed an open source

303
00:11:52,910 --> 00:11:56,000
automation framework called Stoke that's

304
00:11:54,770 --> 00:11:57,860
now used by some of the largest

305
00:11:56,000 --> 00:11:59,570
companies in the world to provide

306
00:11:57,860 --> 00:12:02,450
automatic processing of interesting

307
00:11:59,570 --> 00:12:04,070
payloads think files items stripped from

308
00:12:02,450 --> 00:12:07,070
network traffic attachments and other

309
00:12:04,070 --> 00:12:09,740
metadata from emails an elf use case it

310
00:12:07,070 --> 00:12:12,170
gets a copy of each email processes all

311
00:12:09,740 --> 00:12:14,060
SMTP headers and body and so forth

312
00:12:12,170 --> 00:12:16,280
strips off the attachment and performs a

313
00:12:14,060 --> 00:12:19,339
full analysis against the payload which

314
00:12:16,280 --> 00:12:21,709
in most cases is attachments Stoke is

315
00:12:19,340 --> 00:12:23,660
very flexible and configurable and has a

316
00:12:21,710 --> 00:12:25,700
whole library of these plugins one thing

317
00:12:23,660 --> 00:12:28,069
it's doing for us at health U is to open

318
00:12:25,700 --> 00:12:30,350
up zip files even password-protected

319
00:12:28,070 --> 00:12:32,300
ones by trying various common passwords

320
00:12:30,350 --> 00:12:34,850
against them then it expands and

321
00:12:32,300 --> 00:12:37,160
analyzes everything it finds normalizes

322
00:12:34,850 --> 00:12:41,120
the output and sends all of that data to

323
00:12:37,160 --> 00:12:43,310
store in nested JSON format it can also

324
00:12:41,120 --> 00:12:45,380
send to other destinations of course and

325
00:12:43,310 --> 00:12:47,089
it stores a copy of everything at

326
00:12:45,380 --> 00:12:52,280
processes in a file system those are

327
00:12:47,090 --> 00:12:53,930
called artifacts once stoke's data gets

328
00:12:52,280 --> 00:12:56,449
over to Splunk it looks like this

329
00:12:53,930 --> 00:12:58,550
Splunk in general automatically parses

330
00:12:56,450 --> 00:13:03,050
json data and pretty prints it in the

331
00:12:58,550 --> 00:13:05,150
search interface Splunk automatically

332
00:13:03,050 --> 00:13:06,890
navigates all the nested json and pulls

333
00:13:05,150 --> 00:13:09,410
out interesting fields again on the left

334
00:13:06,890 --> 00:13:11,810
but you can also click the Chevron as

335
00:13:09,410 --> 00:13:14,300
indicated here and scroll down to see

336
00:13:11,810 --> 00:13:18,829
the contents of the fields - they look

337
00:13:14,300 --> 00:13:19,939
like this ok one last thing and then

338
00:13:18,830 --> 00:13:22,189
we'll finish I just told

339
00:13:19,939 --> 00:13:23,868
stok doesn't send the actual artifact

340
00:13:22,189 --> 00:13:25,848
that extracts from the payload display

341
00:13:23,869 --> 00:13:28,279
it just sends the JSON off' ID results

342
00:13:25,849 --> 00:13:30,949
but there's pointers in that JSON to get

343
00:13:28,279 --> 00:13:32,659
back to the archived data stores but how

344
00:13:30,949 --> 00:13:34,939
can we navigate the output that Stoke

345
00:13:32,659 --> 00:13:37,279
sends us and understand where to look in

346
00:13:34,939 --> 00:13:39,319
the archive a search like the above will

347
00:13:37,279 --> 00:13:41,509
help us and if you want to understand

348
00:13:39,319 --> 00:13:43,488
better what it does you can DM me on

349
00:13:41,509 --> 00:13:47,569
twitter or email us I'll provide you

350
00:13:43,489 --> 00:13:49,369
with contact info in just a bit the

351
00:13:47,569 --> 00:13:52,248
output for a single Stoke event might

352
00:13:49,369 --> 00:13:54,199
look like this all artifacts extracted

353
00:13:52,249 --> 00:13:56,449
by Stoke from a single email or list on

354
00:13:54,199 --> 00:14:00,949
the left and the full path to where they

355
00:13:56,449 --> 00:14:02,929
live in the archive is on the right okay

356
00:14:00,949 --> 00:14:05,029
well I'm just about out of time so not

357
00:14:02,929 --> 00:14:06,829
only should I wrap this up I have gifts

358
00:14:05,029 --> 00:14:09,049
sitting in the corner that I should be

359
00:14:06,829 --> 00:14:10,309
wrapping up as well if you have any

360
00:14:09,049 --> 00:14:12,470
questions about the content in this

361
00:14:10,309 --> 00:14:14,598
presentation feel free to DM me at the

362
00:14:12,470 --> 00:14:16,809
Twitter handle listed you can also DM

363
00:14:14,599 --> 00:14:18,769
the main elf Wrangler Dave Herold

364
00:14:16,809 --> 00:14:20,329
another way to get a hold of us at

365
00:14:18,769 --> 00:14:22,669
Splunk is to send email to the bots

366
00:14:20,329 --> 00:14:26,089
alias that we all monitor it is bots at

367
00:14:22,669 --> 00:14:28,098
splint comm and with that enjoy the rest

368
00:14:26,089 --> 00:14:30,470
of your time at Kringle con two

369
00:14:28,099 --> 00:14:33,470
turtledoves pick up your complimentary

370
00:14:30,470 --> 00:14:37,419
Turtledove at the kiosk outside happy

371
00:14:33,470 --> 00:14:37,419
holidays and happy spelunking

