1
00:00:00,290 --> 00:00:04,859
hello welcome to Kringle Con this talk

2
00:00:03,090 --> 00:00:06,569
is going to be on machine learning and

3
00:00:04,859 --> 00:00:09,210
some use cases of how we can apply that

4
00:00:06,569 --> 00:00:11,190
in cyber security a little bit about me

5
00:00:09,210 --> 00:00:12,300
my name is Chris Davis I worked for

6
00:00:11,190 --> 00:00:15,209
counter hack as a senior technical

7
00:00:12,300 --> 00:00:18,449
engineer challenge developer pen tester

8
00:00:15,210 --> 00:00:19,310
I am GOC number 144 I got the OS CP and

9
00:00:18,449 --> 00:00:21,810
a bunch of other certs

10
00:00:19,310 --> 00:00:23,759
okay so what is machine learning machine

11
00:00:21,810 --> 00:00:25,380
learning is basically uses computer

12
00:00:23,760 --> 00:00:26,880
science and statistics to enable

13
00:00:25,380 --> 00:00:29,279
computers to learn how to perform a

14
00:00:26,880 --> 00:00:30,900
given task dynamically using models

15
00:00:29,279 --> 00:00:33,510
created through a process of trial and

16
00:00:30,900 --> 00:00:35,969
error or through training it unknown

17
00:00:33,510 --> 00:00:37,260
good inputs this is especially useful

18
00:00:35,969 --> 00:00:39,960
for when you're trying to create a

19
00:00:37,260 --> 00:00:42,839
program to accomplish a given task that

20
00:00:39,960 --> 00:00:45,510
has thousands or millions of possible

21
00:00:42,840 --> 00:00:47,969
combinations of inputs that you can't

22
00:00:45,510 --> 00:00:50,640
possibly account for stat by statically

23
00:00:47,969 --> 00:00:52,980
typing in you know all the ifs then else

24
00:00:50,640 --> 00:00:54,300
logic that would be required to account

25
00:00:52,980 --> 00:00:56,699
for all of those different possible

26
00:00:54,300 --> 00:00:58,288
numbers of situations right basically at

27
00:00:56,699 --> 00:01:00,269
that point it would become infeasible or

28
00:00:58,289 --> 00:01:02,760
too difficult or a pain in the butt to

29
00:01:00,270 --> 00:01:04,500
keep that code updated and actually code

30
00:01:02,760 --> 00:01:05,670
it in the first place and so in that

31
00:01:04,500 --> 00:01:07,890
case we can actually use machine

32
00:01:05,670 --> 00:01:10,049
learning trainer model and in that model

33
00:01:07,890 --> 00:01:11,369
we can plug into our program which can

34
00:01:10,049 --> 00:01:14,939
then account for all of those different

35
00:01:11,369 --> 00:01:17,100
possible inputs machine learning

36
00:01:14,939 --> 00:01:18,809
requires some known good data to more

37
00:01:17,100 --> 00:01:21,119
finely tuned it's learning algorithm and

38
00:01:18,810 --> 00:01:24,090
based upon how much of that data we give

39
00:01:21,119 --> 00:01:26,549
it the it increases its accuracy and

40
00:01:24,090 --> 00:01:28,290
being able to predict those inputs and

41
00:01:26,549 --> 00:01:31,470
what what they are or how to react to a

42
00:01:28,290 --> 00:01:32,909
given task just like we humans also

43
00:01:31,470 --> 00:01:34,710
learn through trial and error and the

44
00:01:32,909 --> 00:01:37,350
more experience we have with a given

45
00:01:34,710 --> 00:01:39,119
topic or situation the more accurate and

46
00:01:37,350 --> 00:01:41,970
the better we become a handling those

47
00:01:39,119 --> 00:01:44,220
situations it's exactly the same or at

48
00:01:41,970 --> 00:01:47,579
least fundamentally the same as machine

49
00:01:44,220 --> 00:01:49,590
learning so some common machine learning

50
00:01:47,579 --> 00:01:51,479
flame frameworks that are often used are

51
00:01:49,590 --> 00:01:53,970
tensorflow it's an open source library

52
00:01:51,479 --> 00:01:55,320
it's very extensive it's the one that

53
00:01:53,970 --> 00:01:58,829
I'm going to be using here in the demo

54
00:01:55,320 --> 00:02:02,369
here I can use CPUs or GPUs it's very

55
00:01:58,829 --> 00:02:05,399
very robust but typically it uses static

56
00:02:02,369 --> 00:02:06,659
computational graphs another one is PI

57
00:02:05,399 --> 00:02:08,878
torch it's a little different from

58
00:02:06,659 --> 00:02:10,470
tensorflow because it uses dynamically

59
00:02:08,878 --> 00:02:11,549
updated graphs which is really good if

60
00:02:10,470 --> 00:02:13,560
you're trying to create a model and

61
00:02:11,550 --> 00:02:16,680
architecture that can

62
00:02:13,560 --> 00:02:18,390
be modified on-the-fly basically it is a

63
00:02:16,680 --> 00:02:20,280
lot simpler than tensorflow

64
00:02:18,390 --> 00:02:22,529
though it is somewhat more limited and

65
00:02:20,280 --> 00:02:24,600
as a result it's better for smaller

66
00:02:22,530 --> 00:02:25,980
tasks and projects there's a bunch of

67
00:02:24,600 --> 00:02:28,140
other machine learning frameworks out

68
00:02:25,980 --> 00:02:30,149
there to like Azure machine learning

69
00:02:28,140 --> 00:02:31,500
which is actually really comprehensive

70
00:02:30,150 --> 00:02:33,450
it's really really good for businesses

71
00:02:31,500 --> 00:02:36,000
and the websites very easy intuitive to

72
00:02:33,450 --> 00:02:38,730
learn and to use there's a bunch of

73
00:02:36,000 --> 00:02:41,130
others like Amazon sonic Kerris MX net

74
00:02:38,730 --> 00:02:44,730
gluon swift and even more that I'm not

75
00:02:41,130 --> 00:02:46,650
listening so some common use cases this

76
00:02:44,730 --> 00:02:49,200
is how it's most commonly used in our

77
00:02:46,650 --> 00:02:51,420
every day for example speech recognition

78
00:02:49,200 --> 00:02:53,070
you know everybody has Siri or Alexa or

79
00:02:51,420 --> 00:02:55,829
Google home or you know at least a lot

80
00:02:53,070 --> 00:02:57,660
of us do you know facial recognition so

81
00:02:55,830 --> 00:03:00,300
when you open up your Apple iPhone or

82
00:02:57,660 --> 00:03:02,400
your iPhone and it sees your face it

83
00:03:00,300 --> 00:03:04,110
recognizes your face and then it unlocks

84
00:03:02,400 --> 00:03:05,880
your phone for you also it actually

85
00:03:04,110 --> 00:03:07,800
learns over time too so as your face

86
00:03:05,880 --> 00:03:09,750
changes maybe you get facial hair maybe

87
00:03:07,800 --> 00:03:11,700
you're wearing glasses now it can

88
00:03:09,750 --> 00:03:14,489
actually pick up on those things and it

89
00:03:11,700 --> 00:03:16,649
can learn your face as it goes on

90
00:03:14,489 --> 00:03:19,709
same way with image image recognition a

91
00:03:16,650 --> 00:03:21,360
perfect example of that is in social

92
00:03:19,709 --> 00:03:22,950
media right maybe a lot a lot of social

93
00:03:21,360 --> 00:03:24,510
media websites they want to be able to

94
00:03:22,950 --> 00:03:26,578
filter out that images right maybe they

95
00:03:24,510 --> 00:03:29,670
don't like firearms or nudity and their

96
00:03:26,579 --> 00:03:31,590
content and so it would be painstakingly

97
00:03:29,670 --> 00:03:34,170
difficult to hire a bunch of people to

98
00:03:31,590 --> 00:03:36,120
monitor all those images constantly and

99
00:03:34,170 --> 00:03:37,768
to delete them as somebody upload

100
00:03:36,120 --> 00:03:40,340
something bad but you can at least get

101
00:03:37,769 --> 00:03:43,560
rid of most of the the low-hanging fruit

102
00:03:40,340 --> 00:03:46,170
using machine learning to do image

103
00:03:43,560 --> 00:03:48,209
recognition for things like rifles or

104
00:03:46,170 --> 00:03:51,000
something like that or nudity right they

105
00:03:48,209 --> 00:03:52,980
could filter that out it's also commonly

106
00:03:51,000 --> 00:03:54,690
used for targeted ads right so as you

107
00:03:52,980 --> 00:03:57,328
surf the web as you look for things it

108
00:03:54,690 --> 00:03:59,579
tracks that it's easier usage and then

109
00:03:57,329 --> 00:04:02,579
it gives you targeted ads YouTube also

110
00:03:59,579 --> 00:04:04,560
uses machine learning to basically

111
00:04:02,579 --> 00:04:06,870
curate your content so if you look at a

112
00:04:04,560 --> 00:04:08,940
video and you watch a video it'll

113
00:04:06,870 --> 00:04:10,980
actually say hey I think based upon your

114
00:04:08,940 --> 00:04:14,010
patterns here we think you would also

115
00:04:10,980 --> 00:04:16,440
like this right the spam filter he's

116
00:04:14,010 --> 00:04:17,849
also another example of where machine

117
00:04:16,440 --> 00:04:20,728
learning can be applied and is applied

118
00:04:17,850 --> 00:04:22,950
so more specifically we want to talk

119
00:04:20,728 --> 00:04:24,570
about cyber security use cases right so

120
00:04:22,950 --> 00:04:25,950
there's some really easy ones that we

121
00:04:24,570 --> 00:04:27,130
can point out real quickly obviously

122
00:04:25,950 --> 00:04:31,030
like credit card fraud

123
00:04:27,130 --> 00:04:33,219
detection identity-theft OSINT more

124
00:04:31,030 --> 00:04:35,260
specifically what I'm thinking of is

125
00:04:33,220 --> 00:04:37,780
like network based heuristics host based

126
00:04:35,260 --> 00:04:39,430
heuristics log analysis and incident

127
00:04:37,780 --> 00:04:41,080
correlation right using pattern

128
00:04:39,430 --> 00:04:43,630
recognition anomaly detection and

129
00:04:41,080 --> 00:04:45,729
predictive analysis for example I mean

130
00:04:43,630 --> 00:04:48,070
we as analysts now write if you're a

131
00:04:45,730 --> 00:04:49,630
blue team analyst very you probably know

132
00:04:48,070 --> 00:04:51,849
what your network looks like right you

133
00:04:49,630 --> 00:04:54,400
probably know what normal a baseline

134
00:04:51,850 --> 00:04:55,990
network traffic looks like and if all of

135
00:04:54,400 --> 00:04:57,609
a sudden you see something different or

136
00:04:55,990 --> 00:04:58,870
outside of that maybe it's a different

137
00:04:57,610 --> 00:05:01,150
protocol being used that shouldn't be

138
00:04:58,870 --> 00:05:02,440
used or maybe it's an increased

139
00:05:01,150 --> 00:05:03,609
bandwidth because somebody's scanning

140
00:05:02,440 --> 00:05:04,719
right those are all things that stick

141
00:05:03,610 --> 00:05:05,890
out in your mind and those are things

142
00:05:04,720 --> 00:05:07,780
that you could probably pick up on

143
00:05:05,890 --> 00:05:09,550
quickly because you've trained yourself

144
00:05:07,780 --> 00:05:11,440
right you've trained yourself and you've

145
00:05:09,550 --> 00:05:13,240
learned what those kinds of anomalies

146
00:05:11,440 --> 00:05:14,740
look like it's the same way with machine

147
00:05:13,240 --> 00:05:17,080
learning we could train a machine

148
00:05:14,740 --> 00:05:19,210
learning model to say hey this is what

149
00:05:17,080 --> 00:05:21,940
normal network looks like and based upon

150
00:05:19,210 --> 00:05:24,549
that if you see an anomaly report it

151
00:05:21,940 --> 00:05:26,370
right or host based heuristics right and

152
00:05:24,550 --> 00:05:29,050
a lot of endpoint protections Bost

153
00:05:26,370 --> 00:05:32,410
machine learning artificial intelligence

154
00:05:29,050 --> 00:05:35,050
which basically looks at what a normal

155
00:05:32,410 --> 00:05:37,240
host baseline or traffic looks like and

156
00:05:35,050 --> 00:05:38,860
how it changes and then over time it

157
00:05:37,240 --> 00:05:39,970
learns better and then eventually says

158
00:05:38,860 --> 00:05:41,740
hey there's some anomalous activity

159
00:05:39,970 --> 00:05:43,600
going on that doesn't normally happen

160
00:05:41,740 --> 00:05:45,970
based upon that you know create an alert

161
00:05:43,600 --> 00:05:48,550
same thing with logs we could feed it a

162
00:05:45,970 --> 00:05:50,530
bunch of bad logs and based upon that it

163
00:05:48,550 --> 00:05:53,620
could potentially find statistically

164
00:05:50,530 --> 00:05:55,869
high variations of abnormal logs that we

165
00:05:53,620 --> 00:05:58,330
could be used to again leverage and help

166
00:05:55,870 --> 00:06:01,750
an analyst determine what's what's what

167
00:05:58,330 --> 00:06:03,070
what bad is or quickly identify bad and

168
00:06:01,750 --> 00:06:05,410
you know same thing with incident

169
00:06:03,070 --> 00:06:06,940
correlation if you have a Incident

170
00:06:05,410 --> 00:06:10,180
Response reporting framework like the

171
00:06:06,940 --> 00:06:12,130
hive you could correlate you could feed

172
00:06:10,180 --> 00:06:14,140
a machine learning model something like

173
00:06:12,130 --> 00:06:16,870
indicators compromised like an IP

174
00:06:14,140 --> 00:06:18,550
address or maybe user age of string or

175
00:06:16,870 --> 00:06:19,810
you know based upon it a you know

176
00:06:18,550 --> 00:06:22,120
plethora of incidents that have happened

177
00:06:19,810 --> 00:06:24,100
over four or five years and then based

178
00:06:22,120 --> 00:06:26,590
upon that you could train that machine

179
00:06:24,100 --> 00:06:28,600
learning model to basically predictably

180
00:06:26,590 --> 00:06:30,700
come up with things that could be

181
00:06:28,600 --> 00:06:34,690
happening or or that you could use to

182
00:06:30,700 --> 00:06:36,400
find more evil basically it's it's not

183
00:06:34,690 --> 00:06:38,020
just for blue team it's easy to apply

184
00:06:36,400 --> 00:06:39,789
machine learning into blue team

185
00:06:38,020 --> 00:06:40,900
scenarios is because there's usually so

186
00:06:39,790 --> 00:06:43,210
much data available to

187
00:06:40,900 --> 00:06:46,719
teams but it could also be applied to

188
00:06:43,210 --> 00:06:48,820
red teamers - for example automating

189
00:06:46,720 --> 00:06:51,639
repetitive tasks like scanning and

190
00:06:48,820 --> 00:06:53,289
enumeration right typically you know the

191
00:06:51,639 --> 00:06:55,090
way scanning an enumeration is done is

192
00:06:53,289 --> 00:06:58,360
we just have a bunch of scripts we have

193
00:06:55,090 --> 00:07:00,008
much tools we have n map we have burp

194
00:06:58,360 --> 00:07:01,720
suite and we just point them at our

195
00:07:00,009 --> 00:07:03,370
target and let it just slam the crap out

196
00:07:01,720 --> 00:07:04,900
of it right and that's fine I think from

197
00:07:03,370 --> 00:07:07,570
a temp n testing perspective but if

198
00:07:04,900 --> 00:07:09,849
you're trying to be you know smarter

199
00:07:07,570 --> 00:07:11,380
about it you could do manual testing but

200
00:07:09,850 --> 00:07:13,389
we could also train machine learning

201
00:07:11,380 --> 00:07:14,800
especially as it gets more robust in the

202
00:07:13,389 --> 00:07:17,020
future to be able to train machine

203
00:07:14,800 --> 00:07:20,050
learning to reflexively learn networks

204
00:07:17,020 --> 00:07:22,150
learn what that is and intelligently

205
00:07:20,050 --> 00:07:24,100
scan things instead of just slamming

206
00:07:22,150 --> 00:07:27,580
them right so that's something that we

207
00:07:24,100 --> 00:07:28,810
could basically automate a way so that

208
00:07:27,580 --> 00:07:32,080
we could focus our energies on other

209
00:07:28,810 --> 00:07:35,020
things using machine learning same thing

210
00:07:32,080 --> 00:07:37,448
with payloads right we could have a

211
00:07:35,020 --> 00:07:39,698
trained model for executing a power

212
00:07:37,449 --> 00:07:41,889
payload on a remote target for example

213
00:07:39,699 --> 00:07:44,410
maybe we have remote code execution of

214
00:07:41,889 --> 00:07:45,940
some by some means but we don't have but

215
00:07:44,410 --> 00:07:48,460
it's blind we don't have a way to know

216
00:07:45,940 --> 00:07:50,949
what's going on so we can train our

217
00:07:48,460 --> 00:07:52,719
payloads ahead of time using machine

218
00:07:50,949 --> 00:07:55,630
learning and then based upon that we

219
00:07:52,720 --> 00:07:58,090
could have it intelligently try to find

220
00:07:55,630 --> 00:08:00,190
a method of privilege escalation instead

221
00:07:58,090 --> 00:08:01,750
of just slamming it with every possible

222
00:08:00,190 --> 00:08:04,210
combination of privilege escalation own

223
00:08:01,750 --> 00:08:05,760
a man which would probably be picked up

224
00:08:04,210 --> 00:08:08,349
by some kind of endpoint protection

225
00:08:05,760 --> 00:08:10,440
again same thing with network pivoting

226
00:08:08,349 --> 00:08:12,490
really the possibilities are endless

227
00:08:10,440 --> 00:08:16,240
especially as machine learning gets

228
00:08:12,490 --> 00:08:19,030
easier to do to do and as it gets more

229
00:08:16,240 --> 00:08:20,229
robust I really think red teamers are

230
00:08:19,030 --> 00:08:22,359
gonna be able to leverage machine

231
00:08:20,229 --> 00:08:23,859
learning to really do some amazing stuff

232
00:08:22,360 --> 00:08:26,590
and I think there there is actually some

233
00:08:23,860 --> 00:08:29,250
instances of that happening now a

234
00:08:26,590 --> 00:08:32,079
perfect quick example of a Red Team

235
00:08:29,250 --> 00:08:34,390
machine learning exploits so CAPTCHAs

236
00:08:32,080 --> 00:08:35,680
are those annoying little boxes that pop

237
00:08:34,390 --> 00:08:38,080
up and say hey prove you're not a robot

238
00:08:35,679 --> 00:08:40,449
by telling me what this text is when

239
00:08:38,080 --> 00:08:43,240
you're signing up for a website or maybe

240
00:08:40,450 --> 00:08:45,040
you're you're submitting a form online

241
00:08:43,240 --> 00:08:46,480
you know they're kind of a pain in the

242
00:08:45,040 --> 00:08:49,719
butt and sometimes I can't even as a

243
00:08:46,480 --> 00:08:51,820
human tell what they are but they just

244
00:08:49,720 --> 00:08:54,250
help prevent things like spam bots right

245
00:08:51,820 --> 00:08:55,930
and machine learning actually has been

246
00:08:54,250 --> 00:08:58,120
used to defeat these CAPTCHAs and

247
00:08:55,930 --> 00:09:00,790
CAPTCHAs have had to get more robust

248
00:08:58,120 --> 00:09:01,960
over time as a direct results you know

249
00:09:00,790 --> 00:09:03,640
thinking of the Google capture for

250
00:09:01,960 --> 00:09:06,040
example is very very robust and

251
00:09:03,640 --> 00:09:07,810
difficult to try to beat with something

252
00:09:06,040 --> 00:09:10,480
like machine learning but probably

253
00:09:07,810 --> 00:09:11,560
theoretically possible so what I'm gonna

254
00:09:10,480 --> 00:09:13,180
do now is I'm actually going to

255
00:09:11,560 --> 00:09:15,579
demonstrate our image recognition

256
00:09:13,180 --> 00:09:16,660
through machine learning so we're gonna

257
00:09:15,580 --> 00:09:18,190
do is we're gonna train a machine

258
00:09:16,660 --> 00:09:20,829
learning model to identify the

259
00:09:18,190 --> 00:09:23,680
difference between apples from bananas

260
00:09:20,830 --> 00:09:24,880
and PNG files right so we're gonna be

261
00:09:23,680 --> 00:09:27,459
using Python we're going to be using

262
00:09:24,880 --> 00:09:29,170
tensorflow 1.15 and I have a github

263
00:09:27,460 --> 00:09:30,460
repository set up with all of these

264
00:09:29,170 --> 00:09:32,439
files so if you want to try this out

265
00:09:30,460 --> 00:09:37,990
yourself just go to that link so I'll

266
00:09:32,440 --> 00:09:39,340
put that up for just a second okay so

267
00:09:37,990 --> 00:09:41,620
let's jump over that repo I'll just

268
00:09:39,340 --> 00:09:43,390
quickly show you what it is

269
00:09:41,620 --> 00:09:45,070
so the repository here has to read me

270
00:09:43,390 --> 00:09:48,580
which has basically all the steps you'll

271
00:09:45,070 --> 00:09:50,200
need to be able to run the code so we

272
00:09:48,580 --> 00:09:53,140
have a few things here we have the

273
00:09:50,200 --> 00:09:55,570
retrain pie we have the predict images

274
00:09:53,140 --> 00:09:58,120
using trained model PI and then we have

275
00:09:55,570 --> 00:10:00,520
two sets of data so we have our training

276
00:09:58,120 --> 00:10:03,370
images which is just a directory with

277
00:10:00,520 --> 00:10:05,740
labeled apple and banana directories and

278
00:10:03,370 --> 00:10:12,700
then inside of them is a bunch of images

279
00:10:05,740 --> 00:10:15,790
of an apple or bananas and ten each so

280
00:10:12,700 --> 00:10:19,089
basically what what this retrain dot pie

281
00:10:15,790 --> 00:10:20,589
does right here is it just iterates over

282
00:10:19,089 --> 00:10:22,540
this directory and it says hey if it's

283
00:10:20,589 --> 00:10:23,770
in the apples folder it's an apple and

284
00:10:22,540 --> 00:10:25,660
I'm going to I'm going to train myself

285
00:10:23,770 --> 00:10:27,430
on those images and if it's in a bananas

286
00:10:25,660 --> 00:10:29,410
folder it's a banana and I'm training

287
00:10:27,430 --> 00:10:31,449
myself on those images it's going to

288
00:10:29,410 --> 00:10:33,730
create a trained model and then it's

289
00:10:31,450 --> 00:10:36,130
going to output that to this direct temp

290
00:10:33,730 --> 00:10:37,839
directory here and then it's going to

291
00:10:36,130 --> 00:10:39,670
output the labels for all of the

292
00:10:37,839 --> 00:10:43,300
different possible accommodations of

293
00:10:39,670 --> 00:10:45,339
images to another file here in the

294
00:10:43,300 --> 00:10:47,620
temperature rectory and we'll run it

295
00:10:45,339 --> 00:10:50,110
using this commands and then finally

296
00:10:47,620 --> 00:10:52,510
we're going to run our predict images

297
00:10:50,110 --> 00:10:55,030
using train model dot pi to predict

298
00:10:52,510 --> 00:10:56,920
what's what these images are here so I

299
00:10:55,030 --> 00:10:58,780
have a folder called unknown images and

300
00:10:56,920 --> 00:11:01,449
it's basically going to iterate over

301
00:10:58,780 --> 00:11:03,220
each of these and based upon what it had

302
00:11:01,450 --> 00:11:05,580
learned previously it's going to detect

303
00:11:03,220 --> 00:11:07,660
if this is an apple or a banana

304
00:11:05,580 --> 00:11:08,790
okay so let's jump over the code real

305
00:11:07,660 --> 00:11:11,980
quick

306
00:11:08,790 --> 00:11:13,839
okay so here again we have our code this

307
00:11:11,980 --> 00:11:15,430
these are actually these scripts are

308
00:11:13,839 --> 00:11:17,620
actually based upon two scripts that

309
00:11:15,430 --> 00:11:20,800
tensorflow themselves put out you can

310
00:11:17,620 --> 00:11:22,839
see that here at the top of the the the

311
00:11:20,800 --> 00:11:25,329
file itself so can't take complete

312
00:11:22,839 --> 00:11:27,130
credit for this code though I did have

313
00:11:25,329 --> 00:11:29,560
to adapt it a good bit to fit the

314
00:11:27,130 --> 00:11:31,959
scenario exactly you can feel free to

315
00:11:29,560 --> 00:11:33,430
use this again as long as you if you

316
00:11:31,959 --> 00:11:34,989
want to train your own models to do

317
00:11:33,430 --> 00:11:37,719
image recognition you can actually use

318
00:11:34,990 --> 00:11:39,640
this get repository you just have to

319
00:11:37,720 --> 00:11:40,630
create directories based upon the type

320
00:11:39,640 --> 00:11:43,180
of labels that you want to give those

321
00:11:40,630 --> 00:11:45,550
images give it known good inputs you

322
00:11:43,180 --> 00:11:48,579
know you cats and dogs for example as an

323
00:11:45,550 --> 00:11:50,229
own example and then you could train

324
00:11:48,579 --> 00:11:53,829
your own model and plug it into any kind

325
00:11:50,230 --> 00:11:55,149
of situation you want to use okay so

326
00:11:53,829 --> 00:11:57,609
we're gonna go ahead and run our command

327
00:11:55,149 --> 00:12:02,620
here see here it's going to train our

328
00:11:57,610 --> 00:12:05,470
images all right okay so I'm gonna train

329
00:12:02,620 --> 00:12:07,170
this model based upon that directory

330
00:12:05,470 --> 00:12:10,390
with the contents of that directory and

331
00:12:07,170 --> 00:12:11,469
so right now it's training it and so

332
00:12:10,390 --> 00:12:13,089
what it's gonna do is it's gonna iterate

333
00:12:11,470 --> 00:12:15,279
over each one of those and you can

334
00:12:13,089 --> 00:12:17,290
actually see here how its it's actually

335
00:12:15,279 --> 00:12:18,610
training itself based upon those images

336
00:12:17,290 --> 00:12:21,219
and it could actually take a while it

337
00:12:18,610 --> 00:12:22,600
could take up to five ten minutes right

338
00:12:21,220 --> 00:12:25,029
now I'll only have 20 images that it's

339
00:12:22,600 --> 00:12:28,120
turning on so it should complete

340
00:12:25,029 --> 00:12:29,709
relatively quickly but if you have a lot

341
00:12:28,120 --> 00:12:31,240
more images right like let's say ten or

342
00:12:29,709 --> 00:12:33,310
twelve or thirteen thousand right the

343
00:12:31,240 --> 00:12:36,070
more you give it the better but it could

344
00:12:33,310 --> 00:12:37,599
take even longer it potentially depends

345
00:12:36,070 --> 00:12:39,820
on your machine speed and a number of

346
00:12:37,600 --> 00:12:40,839
other factors so I'm going to end the

347
00:12:39,820 --> 00:12:44,320
video right here and then come right

348
00:12:40,839 --> 00:12:46,899
back as soon as this is complete okay so

349
00:12:44,320 --> 00:12:50,019
our trained model is complete we now

350
00:12:46,899 --> 00:12:52,180
have our files so the the train model

351
00:12:50,019 --> 00:12:53,500
and the labels itself are loaded so what

352
00:12:52,180 --> 00:12:56,170
this script is going to do is it's going

353
00:12:53,500 --> 00:12:57,699
to load that up it's going to load our

354
00:12:56,170 --> 00:12:59,410
train model into a session and then

355
00:12:57,699 --> 00:13:02,199
using that session we're going to

356
00:12:59,410 --> 00:13:03,969
predict what the contents of the unknown

357
00:13:02,199 --> 00:13:06,729
images folder are right so we have our

358
00:13:03,970 --> 00:13:09,070
images here of a couple apples and a

359
00:13:06,730 --> 00:13:10,990
couple bananas and so what it's going to

360
00:13:09,070 --> 00:13:12,640
do is it's going to use some threading

361
00:13:10,990 --> 00:13:15,279
as well to to speed up the process

362
00:13:12,640 --> 00:13:16,540
because if we had thousands of images we

363
00:13:15,279 --> 00:13:19,089
needed to predict we wouldn't want to do

364
00:13:16,540 --> 00:13:20,890
one at a time so based upon those

365
00:13:19,089 --> 00:13:21,990
results it's going to iterate over the

366
00:13:20,890 --> 00:13:24,330
results and it's going to

367
00:13:21,990 --> 00:13:26,910
tell what each of those are for us so

368
00:13:24,330 --> 00:13:33,330
let's see if our train model is actually

369
00:13:26,910 --> 00:13:36,209
working here okay so it processed all

370
00:13:33,330 --> 00:13:39,230
four images and we can see that based

371
00:13:36,210 --> 00:13:42,570
upon the training data that we gave it

372
00:13:39,230 --> 00:13:47,310
Apple our image number one is an apple

373
00:13:42,570 --> 00:13:49,670
and it's 99.9% accuracy image number two

374
00:13:47,310 --> 00:13:53,219
is also an apple which it has right here

375
00:13:49,670 --> 00:13:55,620
image number three is a banana with 100%

376
00:13:53,220 --> 00:13:57,570
accuracy and image number four is also a

377
00:13:55,620 --> 00:13:59,190
banana with nine percent accuracy so

378
00:13:57,570 --> 00:14:01,080
again that just goes to show you

379
00:13:59,190 --> 00:14:03,450
especially in the example of image

380
00:14:01,080 --> 00:14:06,480
recognition it's incredibly easy to

381
00:14:03,450 --> 00:14:08,460
quickly identify images and use machine

382
00:14:06,480 --> 00:14:09,840
learning to train images that's one of

383
00:14:08,460 --> 00:14:11,550
the more common examples and this is a

384
00:14:09,840 --> 00:14:13,560
very simple example but you could

385
00:14:11,550 --> 00:14:15,810
potentially apply this to almost any

386
00:14:13,560 --> 00:14:18,689
project that required any kind of image

387
00:14:15,810 --> 00:14:20,520
processing so that's it I hope you enjoy

388
00:14:18,690 --> 00:14:25,280
your holiday hack challenge for krinkle

389
00:14:20,520 --> 00:14:25,280
con 2019 Thanks

