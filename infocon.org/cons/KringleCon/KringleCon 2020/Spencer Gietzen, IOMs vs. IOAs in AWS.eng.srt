1
00:00:02,560 --> 00:00:04,400
hi my name is spencer keatson

2
00:00:04,400 --> 00:00:05,920
and today i'm going to talk to you about

3
00:00:05,920 --> 00:00:07,839
ioms versus ioas

4
00:00:07,839 --> 00:00:11,120
in aws um first a little bit much about

5
00:00:11,120 --> 00:00:11,679
myself

6
00:00:11,679 --> 00:00:13,840
i'm a cloud security researcher at

7
00:00:13,840 --> 00:00:14,880
crowdstrike and

8
00:00:14,880 --> 00:00:17,039
previously did pen testing over at rhino

9
00:00:17,039 --> 00:00:19,039
security labs

10
00:00:19,039 --> 00:00:21,600
you can find me on twitter at spangeets

11
00:00:21,600 --> 00:00:23,600
pretty much just tweet about the cloud

12
00:00:23,600 --> 00:00:26,560
so come check it out first we're gonna

13
00:00:26,560 --> 00:00:27,599
talk about ioms

14
00:00:27,599 --> 00:00:30,080
or indicators of misconfiguration

15
00:00:30,080 --> 00:00:32,159
they're signs of a potentially risky

16
00:00:32,159 --> 00:00:33,360
configuration in an

17
00:00:33,360 --> 00:00:35,760
environment essentially they help

18
00:00:35,760 --> 00:00:38,879
prevent bad guys

19
00:00:39,280 --> 00:00:40,640
some examples of indicators of

20
00:00:40,640 --> 00:00:42,640
misconfiguration are

21
00:00:42,640 --> 00:00:45,680
like public aws s3 bucket uh

22
00:00:45,680 --> 00:00:48,160
that could be data exfiltration overly

23
00:00:48,160 --> 00:00:50,640
permissive policy applied to a user

24
00:00:50,640 --> 00:00:53,360
that could be privilege escalation uh an

25
00:00:53,360 --> 00:00:54,320
im role

26
00:00:54,320 --> 00:00:57,199
trusts an unknown principle that could

27
00:00:57,199 --> 00:00:58,719
be some actor

28
00:00:58,719 --> 00:01:01,440
establishing persistence a lot of

29
00:01:01,440 --> 00:01:03,039
different examples or a lot of different

30
00:01:03,039 --> 00:01:05,600
things that this could be the reason

31
00:01:05,600 --> 00:01:06,799
they're indicators

32
00:01:06,799 --> 00:01:08,799
instead of just misconfigurations is

33
00:01:08,799 --> 00:01:11,200
because they're not always wrong

34
00:01:11,200 --> 00:01:14,320
a public s3 bucket might be supposed to

35
00:01:14,320 --> 00:01:14,640
be

36
00:01:14,640 --> 00:01:18,640
public if overly permissive policies

37
00:01:18,640 --> 00:01:20,240
apply to a user maybe they're the

38
00:01:20,240 --> 00:01:22,159
administrator of the environment

39
00:01:22,159 --> 00:01:24,080
so you can't just assume things are

40
00:01:24,080 --> 00:01:25,840
misconfigurations because they seem

41
00:01:25,840 --> 00:01:26,960
risky

42
00:01:26,960 --> 00:01:28,720
it's more of an indicator and needs to

43
00:01:28,720 --> 00:01:31,360
be looked into

44
00:01:31,600 --> 00:01:34,560
so discovery of ioms and environment

45
00:01:34,560 --> 00:01:36,400
there's a few different ways to do it

46
00:01:36,400 --> 00:01:38,799
you could do it natively in aws through

47
00:01:38,799 --> 00:01:41,360
something like aws config

48
00:01:41,360 --> 00:01:43,600
there's third party tools like cspm

49
00:01:43,600 --> 00:01:45,600
tools such as falcon horizon by

50
00:01:45,600 --> 00:01:47,280
crowdstrike

51
00:01:47,280 --> 00:01:49,119
there's open source scanning tools as

52
00:01:49,119 --> 00:01:51,119
well such as scout suite by

53
00:01:51,119 --> 00:01:54,880
ncc group so now we're gonna dive into

54
00:01:54,880 --> 00:01:57,920
ioas or indicators of attack signs that

55
00:01:57,920 --> 00:02:00,719
something suspicious is going on

56
00:02:00,719 --> 00:02:02,719
and it helps us detect the bad guys once

57
00:02:02,719 --> 00:02:04,960
they're in

58
00:02:04,960 --> 00:02:07,119
some examples i always like to start the

59
00:02:07,119 --> 00:02:09,440
examples with git caller identity

60
00:02:09,440 --> 00:02:12,160
because that's basically the who am i of

61
00:02:12,160 --> 00:02:14,160
the cloud and a lot of attackers do it

62
00:02:14,160 --> 00:02:15,200
just to figure out

63
00:02:15,200 --> 00:02:16,959
where they landed in an environment you

64
00:02:16,959 --> 00:02:18,480
know test the credentials

65
00:02:18,480 --> 00:02:23,599
see what the name of my user role is etc

66
00:02:23,599 --> 00:02:26,800
so that followed by something like a

67
00:02:26,800 --> 00:02:28,239
data exfiltration attempt

68
00:02:28,239 --> 00:02:30,160
might look like s3 list buckets they

69
00:02:30,160 --> 00:02:32,080
list out the buckets in the account

70
00:02:32,080 --> 00:02:34,400
and then they use put bucket policy or

71
00:02:34,400 --> 00:02:36,239
put bucket acl to make

72
00:02:36,239 --> 00:02:38,640
a bucket public and steal data through

73
00:02:38,640 --> 00:02:39,920
that

74
00:02:39,920 --> 00:02:41,599
it could be followed by a spam or a

75
00:02:41,599 --> 00:02:43,519
phishing attack through something like

76
00:02:43,519 --> 00:02:45,200
simple email service

77
00:02:45,200 --> 00:02:47,760
so you might see ses get send quota

78
00:02:47,760 --> 00:02:49,760
across each region in an account

79
00:02:49,760 --> 00:02:52,080
to identify regions that are outside of

80
00:02:52,080 --> 00:02:52,959
the ses

81
00:02:52,959 --> 00:02:55,280
sandbox meaning that they can send mass

82
00:02:55,280 --> 00:02:56,560
amounts of emails

83
00:02:56,560 --> 00:02:58,159
whether that's for spam or phishing or

84
00:02:58,159 --> 00:03:00,319
something else

85
00:03:00,319 --> 00:03:02,560
another example would be a bad ip

86
00:03:02,560 --> 00:03:03,680
address

87
00:03:03,680 --> 00:03:06,239
so this could be any api really it's

88
00:03:06,239 --> 00:03:07,040
just that

89
00:03:07,040 --> 00:03:10,560
a api call coming from a malicious ip

90
00:03:10,560 --> 00:03:11,200
address

91
00:03:11,200 --> 00:03:13,120
is definitely an indicator there is

92
00:03:13,120 --> 00:03:14,640
something going wrong

93
00:03:14,640 --> 00:03:16,879
and something suspicious going on so

94
00:03:16,879 --> 00:03:18,400
it's important to kind of check those

95
00:03:18,400 --> 00:03:20,800
things out

96
00:03:20,800 --> 00:03:23,120
discovery of ioas it's a lot different

97
00:03:23,120 --> 00:03:24,799
than ioms

98
00:03:24,799 --> 00:03:27,360
although there are cloud native services

99
00:03:27,360 --> 00:03:29,599
like aws cloud trail

100
00:03:29,599 --> 00:03:33,200
aws guard duty to monitor logs that

101
00:03:33,200 --> 00:03:34,799
might be flowing through cloudtrail and

102
00:03:34,799 --> 00:03:36,239
other sources

103
00:03:36,239 --> 00:03:39,680
um amazon event bridge just to build

104
00:03:39,680 --> 00:03:41,519
your own detections and respond to

105
00:03:41,519 --> 00:03:43,599
events and patterns that you might see

106
00:03:43,599 --> 00:03:44,640
in an environment

107
00:03:44,640 --> 00:03:46,720
that is are it's not already built into

108
00:03:46,720 --> 00:03:49,120
something like guard duty

109
00:03:49,120 --> 00:03:50,799
uh and then there's other open source

110
00:03:50,799 --> 00:03:52,239
hunting tools like

111
00:03:52,239 --> 00:03:55,040
trail scrapers one uh i have some links

112
00:03:55,040 --> 00:03:56,959
to that at the end

113
00:03:56,959 --> 00:04:00,400
but there are not many third-party tools

114
00:04:00,400 --> 00:04:03,680
or open source tools that really

115
00:04:03,680 --> 00:04:06,879
monitor and take care of this stuff even

116
00:04:06,879 --> 00:04:08,239
though they're just as important or

117
00:04:08,239 --> 00:04:10,319
maybe possibly more important than

118
00:04:10,319 --> 00:04:13,040
ioms but it's hard to say because they

119
00:04:13,040 --> 00:04:15,599
tie together so much

120
00:04:15,599 --> 00:04:18,320
so for example i'm going to do a case

121
00:04:18,320 --> 00:04:19,120
study on

122
00:04:19,120 --> 00:04:22,880
s3 data exfiltration and how the ioms

123
00:04:22,880 --> 00:04:26,800
compare to the ioas in this situation so

124
00:04:26,800 --> 00:04:28,479
we're gonna have an attacker and we're

125
00:04:28,479 --> 00:04:30,320
gonna have cloud trail logs of what the

126
00:04:30,320 --> 00:04:31,120
attack's

127
00:04:31,120 --> 00:04:33,840
doing essentially they're gonna start

128
00:04:33,840 --> 00:04:35,040
off with aws

129
00:04:35,040 --> 00:04:37,520
sts get caller identity we're gonna see

130
00:04:37,520 --> 00:04:39,280
a get caller identity log

131
00:04:39,280 --> 00:04:42,320
they're gonna run aws s3 ls

132
00:04:42,320 --> 00:04:45,840
we're going to see a list buckets log

133
00:04:45,840 --> 00:04:47,280
they're going to list objects in the

134
00:04:47,280 --> 00:04:49,520
target bucket that they enumerated we

135
00:04:49,520 --> 00:04:51,520
might see s3 list objects

136
00:04:51,520 --> 00:04:53,520
depending whether or not you have object

137
00:04:53,520 --> 00:04:56,320
level logging enabled

138
00:04:56,320 --> 00:04:59,360
aws s3 api put bucket acl

139
00:04:59,360 --> 00:05:01,360
and they're applying a public read acl

140
00:05:01,360 --> 00:05:04,000
to make that bucket publicly accessible

141
00:05:04,000 --> 00:05:07,680
we'll see a put bucket acl log

142
00:05:07,680 --> 00:05:09,680
and then maybe they finish up with aws

143
00:05:09,680 --> 00:05:10,720
s3 sync

144
00:05:10,720 --> 00:05:14,000
from the target bucket to a local folder

145
00:05:14,000 --> 00:05:16,560
or another s3 bucket to exfiltrate all

146
00:05:16,560 --> 00:05:19,039
that data that they have just found

147
00:05:19,039 --> 00:05:21,360
so we might see lots of s3 get objects

148
00:05:21,360 --> 00:05:25,039
lots of s3 head objects things like that

149
00:05:25,039 --> 00:05:26,880
but again this relies on object level

150
00:05:26,880 --> 00:05:30,479
logging so it's possible to miss it

151
00:05:32,560 --> 00:05:35,199
so in this scenario there are both ions

152
00:05:35,199 --> 00:05:36,479
and ioas

153
00:05:36,479 --> 00:05:40,160
that are applicable so we will say that

154
00:05:40,160 --> 00:05:41,600
the keys got compromised

155
00:05:41,600 --> 00:05:43,199
originally through a web application

156
00:05:43,199 --> 00:05:45,280
vulnerability

157
00:05:45,280 --> 00:05:48,400
um and that's an iom on its own then

158
00:05:48,400 --> 00:05:49,199
there's

159
00:05:49,199 --> 00:05:51,360
an overly permissive im policy applied

160
00:05:51,360 --> 00:05:53,440
which allowed the user to enumerate

161
00:05:53,440 --> 00:05:57,039
objects and buckets in s3

162
00:05:57,039 --> 00:05:59,360
and exfiltrate that data all from one

163
00:05:59,360 --> 00:06:01,120
account and change the permissions by

164
00:06:01,120 --> 00:06:03,280
making it public

165
00:06:03,280 --> 00:06:05,280
non-existent or overly permissive s3

166
00:06:05,280 --> 00:06:07,120
bucket policy applied

167
00:06:07,120 --> 00:06:09,039
kind of the same as number two just on

168
00:06:09,039 --> 00:06:10,639
the s3 bucket side

169
00:06:10,639 --> 00:06:12,160
they were able to perform actions that

170
00:06:12,160 --> 00:06:14,560
they shouldn't have been able to

171
00:06:14,560 --> 00:06:16,479
and then we'll say s3 object level

172
00:06:16,479 --> 00:06:18,160
logging was disabled so they actually

173
00:06:18,160 --> 00:06:20,319
missed out on some of the logs of this

174
00:06:20,319 --> 00:06:21,680
pattern

175
00:06:21,680 --> 00:06:24,800
or of this ioa these

176
00:06:24,800 --> 00:06:27,199
here are the kinds of things that con

177
00:06:27,199 --> 00:06:28,000
config

178
00:06:28,000 --> 00:06:30,720
falcon horizon scout suite etc detect

179
00:06:30,720 --> 00:06:31,199
and

180
00:06:31,199 --> 00:06:33,199
assist with remediation and findings and

181
00:06:33,199 --> 00:06:34,800
all that

182
00:06:34,800 --> 00:06:36,960
but there are also ioas taking place

183
00:06:36,960 --> 00:06:38,000
here

184
00:06:38,000 --> 00:06:39,680
so we're going to assume they're all

185
00:06:39,680 --> 00:06:42,000
coming from the same ip address and user

186
00:06:42,000 --> 00:06:45,120
agent because this is the same attacker

187
00:06:45,120 --> 00:06:46,880
and all these calls are going to be in a

188
00:06:46,880 --> 00:06:48,560
row so

189
00:06:48,560 --> 00:06:50,880
for that entry point which said it's a

190
00:06:50,880 --> 00:06:52,720
server-side request forgery in a web

191
00:06:52,720 --> 00:06:54,639
application so basically they steal the

192
00:06:54,639 --> 00:06:56,400
credentials from

193
00:06:56,400 --> 00:07:00,080
the ec2 instance metadata service

194
00:07:00,080 --> 00:07:03,360
following that they run who am i figure

195
00:07:03,360 --> 00:07:03,680
out

196
00:07:03,680 --> 00:07:05,840
who they are and what they can do or

197
00:07:05,840 --> 00:07:07,280
well not what they can do

198
00:07:07,280 --> 00:07:09,199
but maybe find hints about what they can

199
00:07:09,199 --> 00:07:11,120
do in the environment

200
00:07:11,120 --> 00:07:12,479
then they're going to list all s3

201
00:07:12,479 --> 00:07:14,720
buckets and objects

202
00:07:14,720 --> 00:07:16,880
uh they made an s3 bucket public and

203
00:07:16,880 --> 00:07:19,039
then they exfiltrated all those objects

204
00:07:19,039 --> 00:07:20,800
and these are things that cloudtrail

205
00:07:20,800 --> 00:07:23,120
guard duty eventbridge trailscraper etc

206
00:07:23,120 --> 00:07:23,840
can help you

207
00:07:23,840 --> 00:07:27,039
find and identify

208
00:07:27,039 --> 00:07:28,319
and if they're all coming from the same

209
00:07:28,319 --> 00:07:31,440
ip address each one of these steps from

210
00:07:31,440 --> 00:07:31,840
a

211
00:07:31,840 --> 00:07:35,520
through e are going to be more

212
00:07:35,520 --> 00:07:37,360
risky or something we need to pay more

213
00:07:37,360 --> 00:07:39,199
attention to it's like

214
00:07:39,199 --> 00:07:41,599
in ssrf in a web application

215
00:07:41,599 --> 00:07:44,000
exploitation of that is bad news

216
00:07:44,000 --> 00:07:47,680
but exploitation of that plus

217
00:07:47,680 --> 00:07:50,400
then the im role on the ec2 instance is

218
00:07:50,400 --> 00:07:53,280
being used to run get caller identity

219
00:07:53,280 --> 00:07:55,759
that's a little more scary then if their

220
00:07:55,759 --> 00:07:57,440
listing has three buckets in the account

221
00:07:57,440 --> 00:07:57,759
and

222
00:07:57,759 --> 00:07:59,280
objects in those buckets that's even

223
00:07:59,280 --> 00:08:01,199
more scary then they make something

224
00:08:01,199 --> 00:08:03,280
public and it gets real scary at that

225
00:08:03,280 --> 00:08:03,840
point

226
00:08:03,840 --> 00:08:05,680
and by then they're stealing all your

227
00:08:05,680 --> 00:08:07,120
objects

228
00:08:07,120 --> 00:08:09,280
so these kinds of patterns and ioas can

229
00:08:09,280 --> 00:08:10,319
be built up

230
00:08:10,319 --> 00:08:11,919
or the confidence in them can be built

231
00:08:11,919 --> 00:08:13,840
up over time by adding steps to the

232
00:08:13,840 --> 00:08:15,440
process

233
00:08:15,440 --> 00:08:17,599
but it doesn't mean you need all the

234
00:08:17,599 --> 00:08:19,919
steps maybe you just have

235
00:08:19,919 --> 00:08:23,280
b c e maybe that's all you see

236
00:08:23,280 --> 00:08:26,319
but that's potentially lower confidence

237
00:08:26,319 --> 00:08:30,240
than a through e um for the same attack

238
00:08:30,240 --> 00:08:32,320
so it's you have to build around the

239
00:08:32,320 --> 00:08:33,919
patterns and

240
00:08:33,919 --> 00:08:35,839
detect what's likely what's not likely

241
00:08:35,839 --> 00:08:38,320
etc

242
00:08:38,320 --> 00:08:41,039
so through together a little uh just

243
00:08:41,039 --> 00:08:42,640
exercise for the viewer for anyone

244
00:08:42,640 --> 00:08:43,760
interested

245
00:08:43,760 --> 00:08:47,040
do it or not i won't know um but build

246
00:08:47,040 --> 00:08:50,320
an ioa pattern for an aws attack tool

247
00:08:50,320 --> 00:08:52,640
this tool we're going to use is paku

248
00:08:52,640 --> 00:08:54,720
it's an open source aws attack tool by

249
00:08:54,720 --> 00:08:57,519
rhino security labs

250
00:08:57,519 --> 00:09:00,560
so what you should do go to the paku

251
00:09:00,560 --> 00:09:02,399
github which is

252
00:09:02,399 --> 00:09:05,760
linked at the end identify one attack

253
00:09:05,760 --> 00:09:07,440
module in paku that you'd like to

254
00:09:07,440 --> 00:09:08,560
profile

255
00:09:08,560 --> 00:09:10,880
run it against your environment check

256
00:09:10,880 --> 00:09:12,640
out the cloud trail logs see what's

257
00:09:12,640 --> 00:09:13,279
unique

258
00:09:13,279 --> 00:09:15,680
see if you can iden or associate those

259
00:09:15,680 --> 00:09:16,399
logs with

260
00:09:16,399 --> 00:09:18,800
paku in particular or something like

261
00:09:18,800 --> 00:09:20,720
that

262
00:09:20,720 --> 00:09:23,600
can you identify the next time someone

263
00:09:23,600 --> 00:09:25,040
uses paku against you

264
00:09:25,040 --> 00:09:28,160
can you tell when cert these set of

265
00:09:28,160 --> 00:09:29,040
actions

266
00:09:29,040 --> 00:09:32,399
are scarier than other times such as if

267
00:09:32,399 --> 00:09:34,320
you can associate them with paku and you

268
00:09:34,320 --> 00:09:35,200
know that

269
00:09:35,200 --> 00:09:37,360
is being used that's much scarier than

270
00:09:37,360 --> 00:09:39,360
if you maybe saw the same

271
00:09:39,360 --> 00:09:42,000
actions being taken from just a regular

272
00:09:42,000 --> 00:09:42,959
user

273
00:09:42,959 --> 00:09:45,360
uh so this is just something kind of fun

274
00:09:45,360 --> 00:09:47,200
but again i won't know if you don't do

275
00:09:47,200 --> 00:09:48,720
it so

276
00:09:48,720 --> 00:09:52,160
have fun or don't um so thanks

277
00:09:52,160 --> 00:09:54,399
for listening and i wanted to shout out

278
00:09:54,399 --> 00:09:56,560
a few different people here uh the sans

279
00:09:56,560 --> 00:09:57,200
and

280
00:09:57,200 --> 00:09:59,600
kringlecon staff uh my team at

281
00:09:59,600 --> 00:10:00,720
crowdstrike

282
00:10:00,720 --> 00:10:04,000
daniel greslack the og aws security

283
00:10:04,000 --> 00:10:07,519
expert cloud security forum slack uh

284
00:10:07,519 --> 00:10:12,399
trail scraper scout suite and paku

285
00:10:12,880 --> 00:10:15,360
and check out holidayhackchallenge.com

286
00:10:15,360 --> 00:10:16,480
for

287
00:10:16,480 --> 00:10:19,920
for some some fun and uh thank you for

288
00:10:19,920 --> 00:10:27,279
listening to my presentation

