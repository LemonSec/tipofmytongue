1
00:00:00,450 --> 00:00:05,410
so my name is Mario and first of all

2
00:00:04,180 --> 00:00:07,270
thank you very much for having me here

3
00:00:05,410 --> 00:00:09,549
it's a great honor and I would like to

4
00:00:07,270 --> 00:00:12,160
present a continuation of a talk that I

5
00:00:09,549 --> 00:00:13,809
already gave 1.5 years before and I want

6
00:00:12,160 --> 00:00:15,519
to see how the situation has developed

7
00:00:13,809 --> 00:00:17,919
and so the talk is called cross-site

8
00:00:15,519 --> 00:00:19,630
scripting is still dead we just don't

9
00:00:17,920 --> 00:00:20,980
get it and there's one person in this

10
00:00:19,630 --> 00:00:22,779
room who certainly saw this stuff

11
00:00:20,980 --> 00:00:25,179
because the initial version I gave on

12
00:00:22,779 --> 00:00:27,189
Hawaii and Jim is right over there which

13
00:00:25,179 --> 00:00:29,400
is pretty awesome and I hope everybody's

14
00:00:27,189 --> 00:00:35,340
gonna enjoy this particular talk and

15
00:00:29,400 --> 00:00:37,410
let's see if we can get things work yes

16
00:00:35,340 --> 00:00:42,699
almost there

17
00:00:37,410 --> 00:00:44,410
sorry for the trouble alright first a

18
00:00:42,699 --> 00:00:46,989
quick word about myself my name is Mario

19
00:00:44,410 --> 00:00:48,519
um I am sort of like an ex security

20
00:00:46,989 --> 00:00:50,550
researcher because I just don't find the

21
00:00:48,520 --> 00:00:52,690
time anymore to do actual research and

22
00:00:50,550 --> 00:00:54,669
I'm an aspiring lecturer through

23
00:00:52,690 --> 00:00:57,010
University in Bochum where I also teach

24
00:00:54,670 --> 00:00:59,379
my PhD thesis um I created the company

25
00:00:57,010 --> 00:01:01,920
called Q 53 we do penetration tests and

26
00:00:59,379 --> 00:01:03,730
we're located in Berlin and I have been

27
00:01:01,920 --> 00:01:05,140
serving a couple of talks and

28
00:01:03,730 --> 00:01:07,539
presentations wrote a couple of papers

29
00:01:05,140 --> 00:01:13,180
wrote a couple of books and I'm

30
00:01:07,540 --> 00:01:15,070
currently the maintainer of the the

31
00:01:13,180 --> 00:01:17,350
maintainer of the suffered on purify

32
00:01:15,070 --> 00:01:21,339
which is like a specialized tool capable

33
00:01:17,350 --> 00:01:22,929
of sanitizing HTML in the client in the

34
00:01:21,340 --> 00:01:24,460
browser only and this tool was pretty

35
00:01:22,930 --> 00:01:27,159
much like the proof of concept from a

36
00:01:24,460 --> 00:01:29,139
PhD thesis which was mostly about the

37
00:01:27,159 --> 00:01:31,000
same topic looking at the Dom looking at

38
00:01:29,140 --> 00:01:33,100
the browser looking at rest capabilities

39
00:01:31,000 --> 00:01:36,610
all in the context of cross-site

40
00:01:33,100 --> 00:01:39,039
scripting you can contact me if you want

41
00:01:36,610 --> 00:01:40,479
to during or after the talk you can just

42
00:01:39,040 --> 00:01:42,369
like drop me an email or give me a call

43
00:01:40,479 --> 00:01:44,530
I don't use Twitter anymore but you will

44
00:01:42,369 --> 00:01:47,500
reach me very much well with email as

45
00:01:44,530 --> 00:01:48,939
well or any other medium so before we

46
00:01:47,500 --> 00:01:50,979
get started I would like to see who is

47
00:01:48,939 --> 00:01:52,508
here this morning who here in the

48
00:01:50,979 --> 00:01:56,890
audience would call themself a

49
00:01:52,509 --> 00:02:00,490
penetration tester one person excellent

50
00:01:56,890 --> 00:02:02,170
two people who here would say that

51
00:02:00,490 --> 00:02:05,289
they're rather a developer defender of

52
00:02:02,170 --> 00:02:06,670
web applications or similar and do lots

53
00:02:05,289 --> 00:02:07,270
of people lots of developers here

54
00:02:06,670 --> 00:02:09,789
excellent

55
00:02:07,270 --> 00:02:11,680
who here would rather put themselves in

56
00:02:09,789 --> 00:02:14,108
the category of eyesore or seesaw

57
00:02:11,680 --> 00:02:16,349
or more of the material type thank you

58
00:02:14,109 --> 00:02:18,310
much and who hears about bounty hunter

59
00:02:16,349 --> 00:02:20,170
okay you might not like me after this

60
00:02:18,310 --> 00:02:22,659
talk anymore I hope that's okay anyway

61
00:02:20,170 --> 00:02:26,798
so the talks rapture that we're gonna

62
00:02:22,659 --> 00:02:29,319
present today is pretty much split into

63
00:02:26,799 --> 00:02:30,639
four pieces like one the onboarding

64
00:02:29,319 --> 00:02:32,888
because I want to kind of get across

65
00:02:30,639 --> 00:02:34,269
what I'm talking about then a historic

66
00:02:32,889 --> 00:02:36,219
overview to kind of illustrate what

67
00:02:34,269 --> 00:02:37,750
happened in the past and why we are here

68
00:02:36,219 --> 00:02:39,579
then I want to formulate a problem

69
00:02:37,750 --> 00:02:41,319
statement and last but not least I want

70
00:02:39,579 --> 00:02:42,790
to propose solutions most of them are

71
00:02:41,319 --> 00:02:44,319
pretty bad but maybe in a discussion

72
00:02:42,790 --> 00:02:47,650
later on we can make them a bit better

73
00:02:44,319 --> 00:02:49,869
and see where we can go with these Act

74
00:02:47,650 --> 00:02:52,959
one the onboarding what are we going to

75
00:02:49,870 --> 00:02:54,639
be talking about today so we're gonna

76
00:02:52,959 --> 00:02:56,019
talk about cross-site scripting and as

77
00:02:54,639 --> 00:02:57,969
the talk title implies we're going to

78
00:02:56,019 --> 00:02:59,919
talk about Chris at scripting that it's

79
00:02:57,969 --> 00:03:01,510
dead and we want to wonder why it's dead

80
00:02:59,919 --> 00:03:03,549
and if it's actually dead because that

81
00:03:01,510 --> 00:03:05,108
sounds a bit bold I guess now my first

82
00:03:03,549 --> 00:03:06,969
question to you would be this would this

83
00:03:05,109 --> 00:03:09,730
thing that we can see here like this URL

84
00:03:06,969 --> 00:03:11,769
with the parameter called ID and the

85
00:03:09,730 --> 00:03:13,450
attach script tag is this across that

86
00:03:11,769 --> 00:03:14,799
scripting attack would you say this is

87
00:03:13,450 --> 00:03:16,000
cross-site scripting who would think

88
00:03:14,799 --> 00:03:18,819
this is cross that scripting like

89
00:03:16,000 --> 00:03:21,159
typical across that scripting nobody

90
00:03:18,819 --> 00:03:23,828
excellent because that's not cross-site

91
00:03:21,159 --> 00:03:25,929
scripting that's a script ejection

92
00:03:23,829 --> 00:03:28,540
that's basically someone trying to

93
00:03:25,930 --> 00:03:30,129
inject a script into a website but we

94
00:03:28,540 --> 00:03:31,989
keep call it and call it sprout trust at

95
00:03:30,129 --> 00:03:34,418
scripting because that term just like

96
00:03:31,989 --> 00:03:35,859
rolls off the tongue quite well and it's

97
00:03:34,419 --> 00:03:37,510
easy to remember but it's not cross that

98
00:03:35,859 --> 00:03:38,889
scripting because the actual name

99
00:03:37,510 --> 00:03:40,239
cross-site scripting comes from

100
00:03:38,889 --> 00:03:43,329
something else cross-site scripting

101
00:03:40,239 --> 00:03:45,759
actually means that one site scripts

102
00:03:43,329 --> 00:03:47,769
another across origins cross-site

103
00:03:45,759 --> 00:03:48,939
scripting that is not happening here and

104
00:03:47,769 --> 00:03:50,259
that is not happening in most of the

105
00:03:48,939 --> 00:03:51,638
situations that we actually call

106
00:03:50,259 --> 00:03:52,720
cross-site scripting or where we say

107
00:03:51,639 --> 00:03:54,459
that there is a cross-cut scripting

108
00:03:52,720 --> 00:03:56,470
vulnerability it's just something else

109
00:03:54,459 --> 00:03:58,060
what is actual cross-site scripting

110
00:03:56,470 --> 00:03:59,530
benign cross-site scripting in most

111
00:03:58,060 --> 00:04:01,540
cases I guess is google analytics

112
00:03:59,530 --> 00:04:04,030
because there we include a script from a

113
00:04:01,540 --> 00:04:06,638
different domain that scripts our domain

114
00:04:04,030 --> 00:04:09,579
for various purposes that would be true

115
00:04:06,639 --> 00:04:11,859
cross site scripting and maybe this

116
00:04:09,579 --> 00:04:13,449
naming flaw is one of the reasons where

117
00:04:11,859 --> 00:04:15,189
we don't fully grasp the attack and what

118
00:04:13,449 --> 00:04:17,139
we don't fully grasp how we can fix it

119
00:04:15,189 --> 00:04:18,909
but we still want to kind of talk about

120
00:04:17,139 --> 00:04:19,820
why I believe that it's actually dead

121
00:04:18,909 --> 00:04:22,099
and

122
00:04:19,820 --> 00:04:23,599
might be unnecessary anyway we don't

123
00:04:22,100 --> 00:04:25,400
want to make it overly complicated let's

124
00:04:23,600 --> 00:04:26,720
call this whole thing this one here

125
00:04:25,400 --> 00:04:28,130
across that scripting and be fine with

126
00:04:26,720 --> 00:04:30,530
it because as mentioned it's just like

127
00:04:28,130 --> 00:04:33,560
very easy to remember and it goes off

128
00:04:30,530 --> 00:04:36,289
the tongue quite well there is

129
00:04:33,560 --> 00:04:37,880
supposedly four kinds of cross-site

130
00:04:36,290 --> 00:04:39,590
scripting the first one would be

131
00:04:37,880 --> 00:04:40,940
reflected cross description it's the

132
00:04:39,590 --> 00:04:42,799
thing that we just saw like someone

133
00:04:40,940 --> 00:04:44,480
enters something via a parameter and

134
00:04:42,800 --> 00:04:46,160
then it shows up in the page because the

135
00:04:44,480 --> 00:04:48,770
result is not being filtered properly or

136
00:04:46,160 --> 00:04:51,020
escaped or encoded properly that usually

137
00:04:48,770 --> 00:04:52,460
happens only once you go to a page you

138
00:04:51,020 --> 00:04:54,440
have a real parameter you inject your

139
00:04:52,460 --> 00:04:55,940
code and then it reflects and then if

140
00:04:54,440 --> 00:04:57,560
you leave that page then the payload

141
00:04:55,940 --> 00:04:59,030
doesn't work anymore because on the next

142
00:04:57,560 --> 00:05:01,310
page of course the parameter is missing

143
00:04:59,030 --> 00:05:02,750
so it's reflected then we have

144
00:05:01,310 --> 00:05:04,640
persistent exercise that it's the kind

145
00:05:02,750 --> 00:05:06,710
of XSS to the store in a database or in

146
00:05:04,640 --> 00:05:08,599
a file system that basically stays after

147
00:05:06,710 --> 00:05:09,979
you left you put it somewhere it gets

148
00:05:08,600 --> 00:05:11,930
written to the database and the next

149
00:05:09,980 --> 00:05:14,630
user comes gets the payload reflected

150
00:05:11,930 --> 00:05:16,850
again and hence it has sir amount of

151
00:05:14,630 --> 00:05:18,170
resistance then there's bomb base

152
00:05:16,850 --> 00:05:19,790
cross-site scripting which makes use of

153
00:05:18,170 --> 00:05:21,830
Dom properties that are not securely

154
00:05:19,790 --> 00:05:22,940
handled which effectively means for

155
00:05:21,830 --> 00:05:24,109
example someone is touching

156
00:05:22,940 --> 00:05:25,700
location.href

157
00:05:24,110 --> 00:05:27,920
or location hash or any other DOM

158
00:05:25,700 --> 00:05:30,140
property and then puts their quantity to

159
00:05:27,920 --> 00:05:32,360
an eval or inner HTML or anything else

160
00:05:30,140 --> 00:05:34,640
that is capable of turning a string into

161
00:05:32,360 --> 00:05:36,710
actual code needless to say atomic

162
00:05:34,640 --> 00:05:38,330
success can also be reflected cannot be

163
00:05:36,710 --> 00:05:40,669
persistent so it's kind of getting a bit

164
00:05:38,330 --> 00:05:43,070
blurry already then there is mutation

165
00:05:40,670 --> 00:05:44,450
XSS a rather nasty kind of cross-site

166
00:05:43,070 --> 00:05:45,920
scripting because that is the kind of

167
00:05:44,450 --> 00:05:48,050
cross-site scripting that first looks

168
00:05:45,920 --> 00:05:49,550
very benign and certain layers of the

169
00:05:48,050 --> 00:05:51,170
stack that fuel a web application would

170
00:05:49,550 --> 00:05:52,910
say that's actually okay we can work

171
00:05:51,170 --> 00:05:54,620
with that that validates we don't have

172
00:05:52,910 --> 00:05:56,360
to sanitize anything but once the

173
00:05:54,620 --> 00:05:57,710
browser attaches it and does some

174
00:05:56,360 --> 00:05:59,750
transformations internally in

175
00:05:57,710 --> 00:06:01,520
optimizations it always turns certain

176
00:05:59,750 --> 00:06:03,410
turns into something that can execute

177
00:06:01,520 --> 00:06:05,419
active code on people's websites and

178
00:06:03,410 --> 00:06:07,910
hence this very tricky to detect and

179
00:06:05,420 --> 00:06:10,160
rather dangerous there's lots of blind

180
00:06:07,910 --> 00:06:11,450
XSS as another category where that would

181
00:06:10,160 --> 00:06:13,370
be the kind of cross-site scripting that

182
00:06:11,450 --> 00:06:15,200
you as the attacker don't necessarily

183
00:06:13,370 --> 00:06:17,360
see because you inject something here

184
00:06:15,200 --> 00:06:18,830
and maybe it executes somewhere in

185
00:06:17,360 --> 00:06:21,350
someone's back and/or intranet or

186
00:06:18,830 --> 00:06:23,870
something like this double the dangerous

187
00:06:21,350 --> 00:06:26,750
but very sneaky and harder to test for I

188
00:06:23,870 --> 00:06:28,610
would say those categories are highly

189
00:06:26,750 --> 00:06:30,050
debatable but in the end

190
00:06:28,610 --> 00:06:34,580
go with them because that's all we have

191
00:06:30,050 --> 00:06:38,449
right now let's go back in time and see

192
00:06:34,580 --> 00:06:40,400
how it all started and let's go and call

193
00:06:38,449 --> 00:06:42,650
that year we're cross that scripting was

194
00:06:40,400 --> 00:06:45,169
first found slash named slash

195
00:06:42,650 --> 00:06:48,378
categorized the year zero the Crick's

196
00:06:45,169 --> 00:06:50,150
vxs miss miracle and hence we entered

197
00:06:48,379 --> 00:06:52,099
the historic overview we want to learn

198
00:06:50,150 --> 00:06:55,969
about how it all came together and what

199
00:06:52,099 --> 00:06:57,740
kind of cost the whole exercise topic

200
00:06:55,969 --> 00:06:58,819
and this whole vulnerability scheme to

201
00:06:57,740 --> 00:07:01,069
still be here

202
00:06:58,819 --> 00:07:04,759
despite twenty years having passed

203
00:07:01,069 --> 00:07:08,360
because the year 0 after XSS is

204
00:07:04,759 --> 00:07:09,860
effectively the year 1999 and in this

205
00:07:08,360 --> 00:07:11,569
year across the scripting was given a

206
00:07:09,860 --> 00:07:13,819
name and people were quite insecure

207
00:07:11,569 --> 00:07:15,680
about how to call it at first they

208
00:07:13,819 --> 00:07:18,050
wanted to call it unauthorized site

209
00:07:15,680 --> 00:07:20,719
scripting USS they wanted to call it

210
00:07:18,050 --> 00:07:23,180
unofficial site scripting USS they

211
00:07:20,719 --> 00:07:25,400
wanted to call it u error l parameter

212
00:07:23,180 --> 00:07:28,090
script insertion that's a bitch that

213
00:07:25,400 --> 00:07:30,080
doesn't really work with you know they

214
00:07:28,090 --> 00:07:32,419
they also wanted to call it cross that

215
00:07:30,080 --> 00:07:33,919
scripting synthesized scripting and last

216
00:07:32,419 --> 00:07:35,599
but not least fraud alert scripting

217
00:07:33,919 --> 00:07:37,878
there was indeed a list where people

218
00:07:35,599 --> 00:07:39,830
swore off could vote and could have kind

219
00:07:37,879 --> 00:07:41,960
of decide what name they liked best and

220
00:07:39,830 --> 00:07:43,609
in the end cross-site scripting made it

221
00:07:41,960 --> 00:07:45,198
and then they realized a terrible

222
00:07:43,610 --> 00:07:47,770
mistake because they said well across

223
00:07:45,199 --> 00:07:52,430
that scripting CSS that's a cool

224
00:07:47,770 --> 00:07:54,680
abbreviated and so well they decided to

225
00:07:52,430 --> 00:07:56,960
call it XSS because that was not taken

226
00:07:54,680 --> 00:07:58,219
yet and simply went with that the naming

227
00:07:56,960 --> 00:07:59,659
was wrong but it was more or less a

228
00:07:58,219 --> 00:08:01,129
spontaneous decision there was like

229
00:07:59,659 --> 00:08:03,500
choiceless change last-minute again

230
00:08:01,129 --> 00:08:06,080
because of the CSS versus XSS but here

231
00:08:03,500 --> 00:08:06,529
we are now we call it XSS I would have

232
00:08:06,080 --> 00:08:08,438
liked

233
00:08:06,529 --> 00:08:11,990
unauthorized site scripting the most

234
00:08:08,439 --> 00:08:13,699
it's not that nice to kind of squeeze

235
00:08:11,990 --> 00:08:15,529
out between your teeth but in the end

236
00:08:13,699 --> 00:08:16,430
that is like more truthful than any of

237
00:08:15,529 --> 00:08:18,680
the other names but fair enough

238
00:08:16,430 --> 00:08:21,469
cross-site scripting as a term made it

239
00:08:18,680 --> 00:08:24,349
in the end soon after that soon after it

240
00:08:21,469 --> 00:08:26,300
got a name a search advisory was issued

241
00:08:24,349 --> 00:08:28,099
and it said a website may inadvertently

242
00:08:26,300 --> 00:08:29,419
include malicious HTML text or script in

243
00:08:28,099 --> 00:08:31,430
the dynamic generated page based on

244
00:08:29,419 --> 00:08:35,789
unvalidated input from untrusted

245
00:08:31,430 --> 00:08:37,930
[Music]

246
00:08:35,789 --> 00:08:40,539
when a web server does not adequately

247
00:08:37,929 --> 00:08:43,359
ensure that generated pages are properly

248
00:08:40,539 --> 00:08:44,949
encoded to prevent unintended execution

249
00:08:43,360 --> 00:08:46,660
of scripts and when input is not

250
00:08:44,950 --> 00:08:48,460
validated to prevent malicious HTML from

251
00:08:46,660 --> 00:08:51,010
being presented to the user that's quite

252
00:08:48,460 --> 00:08:53,230
accurate like in the year 1999 and the

253
00:08:51,010 --> 00:08:56,439
year 0 after XSS they had this very

254
00:08:53,230 --> 00:08:58,030
accurate description of the cause and

255
00:08:56,440 --> 00:08:59,440
one might think well if we have this

256
00:08:58,030 --> 00:09:01,420
accurate of a description of the extra

257
00:08:59,440 --> 00:09:05,110
problem we should be having an easy time

258
00:09:01,420 --> 00:09:07,030
to fix the whole thing back then there

259
00:09:05,110 --> 00:09:08,680
was no experts on the field cross-site

260
00:09:07,030 --> 00:09:10,000
scripting now we have that but back then

261
00:09:08,680 --> 00:09:12,189
there wasn't because it was just so

262
00:09:10,000 --> 00:09:13,150
young and it was so simple to grasp that

263
00:09:12,190 --> 00:09:14,890
there was like so-called

264
00:09:13,150 --> 00:09:16,270
interdisciplinary expertise like people

265
00:09:14,890 --> 00:09:18,580
who were experts in entirely different

266
00:09:16,270 --> 00:09:20,829
fields all of a sudden had something to

267
00:09:18,580 --> 00:09:24,520
say about cross-site scripting there was

268
00:09:20,830 --> 00:09:26,470
for example Lincoln Dean who was a human

269
00:09:24,520 --> 00:09:28,420
genome researcher at Cold Spring Harbor

270
00:09:26,470 --> 00:09:30,610
Laboratory and author of a book on web

271
00:09:28,420 --> 00:09:32,319
security well this was kind of possible

272
00:09:30,610 --> 00:09:34,180
back then to be an expert in both and he

273
00:09:32,320 --> 00:09:36,460
said cross-site scripting allows a bad

274
00:09:34,180 --> 00:09:39,910
guy to trick an innocent guy into

275
00:09:36,460 --> 00:09:43,290
running code the bad guy wrote sure fair

276
00:09:39,910 --> 00:09:45,600
enough it's also a valid description

277
00:09:43,290 --> 00:09:47,949
then there was the development site

278
00:09:45,600 --> 00:09:49,270
commenting on the issue and developing

279
00:09:47,950 --> 00:09:51,340
ideas on how to actually prevent

280
00:09:49,270 --> 00:09:53,560
cross-site scripting and the one that I

281
00:09:51,340 --> 00:09:54,820
liked the most I found on php.net in the

282
00:09:53,560 --> 00:09:57,400
comments which is like an excellent

283
00:09:54,820 --> 00:09:59,950
source of information and it's from Jake

284
00:09:57,400 --> 00:10:02,350
underscore mcmayhem at hotmail.com

285
00:09:59,950 --> 00:10:03,700
and he states that this function and

286
00:10:02,350 --> 00:10:05,080
he's talking about the filter function

287
00:10:03,700 --> 00:10:06,730
about an encoding function this function

288
00:10:05,080 --> 00:10:08,230
is particularly useful against

289
00:10:06,730 --> 00:10:09,850
cross-site scripting cross-site

290
00:10:08,230 --> 00:10:13,750
scripting makes use of holes in code

291
00:10:09,850 --> 00:10:15,970
whether it be in JavaScript or PHP XSS

292
00:10:13,750 --> 00:10:19,540
often if not always uses HTML entities

293
00:10:15,970 --> 00:10:21,100
to do its evil deeds really so this

294
00:10:19,540 --> 00:10:22,780
function in cooperation with your

295
00:10:21,100 --> 00:10:24,700
scripts particularly search or

296
00:10:22,780 --> 00:10:28,420
submitting scripts is a very useful tool

297
00:10:24,700 --> 00:10:29,800
in combating hexamers right I think it

298
00:10:28,420 --> 00:10:31,660
didn't fully get the point but at least

299
00:10:29,800 --> 00:10:34,030
you can see that this community also

300
00:10:31,660 --> 00:10:36,339
looked for solutions and slowly piece by

301
00:10:34,030 --> 00:10:40,329
piece a browser to develop something

302
00:10:36,340 --> 00:10:42,100
that might actually work so back then in

303
00:10:40,330 --> 00:10:43,660
the early years we had not that many

304
00:10:42,100 --> 00:10:45,339
tools to combat cross-site script we

305
00:10:43,660 --> 00:10:46,319
just learned that it existed and the

306
00:10:45,339 --> 00:10:48,860
tools that we had

307
00:10:46,320 --> 00:10:51,630
basically content transformation related

308
00:10:48,860 --> 00:10:54,540
we would escape things before processing

309
00:10:51,630 --> 00:10:56,220
them and we would encode things before

310
00:10:54,540 --> 00:10:58,770
echoing them or using them any further

311
00:10:56,220 --> 00:11:00,000
and technically we could say well there

312
00:10:58,770 --> 00:11:01,740
was already a we're protecting our

313
00:11:00,000 --> 00:11:03,300
database and protecting the output no

314
00:11:01,740 --> 00:11:06,620
more secret injections no more process

315
00:11:03,300 --> 00:11:09,780
scripting done case closed

316
00:11:06,620 --> 00:11:11,190
turns out it wasn't that easy and case

317
00:11:09,780 --> 00:11:12,930
was not closed because those things were

318
00:11:11,190 --> 00:11:15,660
simply forgotten in most situations or

319
00:11:12,930 --> 00:11:17,280
people were not aware of it so other

320
00:11:15,660 --> 00:11:19,469
measurements need to be taken and in

321
00:11:17,280 --> 00:11:21,270
2002 with the release of Microsoft

322
00:11:19,470 --> 00:11:22,860
Internet Explorer 6 one of the best

323
00:11:21,270 --> 00:11:25,350
browsers ever specifically service pack

324
00:11:22,860 --> 00:11:28,350
2 a new feature was introduced that was

325
00:11:25,350 --> 00:11:30,540
called HTTP only cookies an HTTP only

326
00:11:28,350 --> 00:11:32,580
cookies were explicitly invented for the

327
00:11:30,540 --> 00:11:35,670
purpose of fighting cross-site scripting

328
00:11:32,580 --> 00:11:37,800
attacks because now the evil attacker

329
00:11:35,670 --> 00:11:39,750
cannot steal cookies any much longer

330
00:11:37,800 --> 00:11:41,520
that cookies are now safe and secure big

331
00:11:39,750 --> 00:11:44,100
win huge win cross the scripting

332
00:11:41,520 --> 00:11:45,750
defeated well I don't think so because

333
00:11:44,100 --> 00:11:47,730
it turns out that across that scripting

334
00:11:45,750 --> 00:11:50,010
attacks the attacker is interested in a

335
00:11:47,730 --> 00:11:51,810
lot of things not just cookies I mean

336
00:11:50,010 --> 00:11:54,030
why would I be interested in cookies yes

337
00:11:51,810 --> 00:11:55,859
they might allow me to directly

338
00:11:54,030 --> 00:11:57,480
impersonate the user but there are so

339
00:11:55,860 --> 00:12:00,240
many more powerful things I can actually

340
00:11:57,480 --> 00:12:01,950
do so this wasn't really doing anything

341
00:12:00,240 --> 00:12:03,090
but it's still around and still being

342
00:12:01,950 --> 00:12:04,470
recommended and we still write our

343
00:12:03,090 --> 00:12:06,090
tickets and pen test reports when we

344
00:12:04,470 --> 00:12:07,590
notice that someone is missing the HTTP

345
00:12:06,090 --> 00:12:09,000
only cookies although we all know that

346
00:12:07,590 --> 00:12:12,900
they're fairly useless in those

347
00:12:09,000 --> 00:12:15,480
situations meanwhile these days

348
00:12:12,900 --> 00:12:17,579
cookies are frowned upon and there is

349
00:12:15,480 --> 00:12:18,600
presentations and work and research the

350
00:12:17,580 --> 00:12:19,830
basically says we should get rid of

351
00:12:18,600 --> 00:12:22,350
cookies we should get our for them all

352
00:12:19,830 --> 00:12:24,390
together and the hot stuff that is

353
00:12:22,350 --> 00:12:26,130
happening right now is pretty much HTTP

354
00:12:24,390 --> 00:12:27,510
state tokens I urge you to look at this

355
00:12:26,130 --> 00:12:29,970
because this is very interesting it's

356
00:12:27,510 --> 00:12:31,800
coming from my quest and it's a far

357
00:12:29,970 --> 00:12:33,750
better approach of getting rid of

358
00:12:31,800 --> 00:12:35,640
cookies then for example thinking about

359
00:12:33,750 --> 00:12:37,560
storing everything in local storage of

360
00:12:35,640 --> 00:12:39,330
the likes because that's a horrible idea

361
00:12:37,560 --> 00:12:42,119
and let's see where this goes

362
00:12:39,330 --> 00:12:44,970
so maybe HTTP all the cookies will lose

363
00:12:42,120 --> 00:12:51,150
the final bit of reason for existing and

364
00:12:44,970 --> 00:12:53,640
will be deprecated by batiste tokens so

365
00:12:51,150 --> 00:12:54,670
we have encoding and we have escaping

366
00:12:53,640 --> 00:12:57,130
and we have the possum

367
00:12:54,670 --> 00:12:58,870
to use the browser to invent new

368
00:12:57,130 --> 00:13:00,970
features that prohibit access to certain

369
00:12:58,870 --> 00:13:03,580
credentials let's add something that we

370
00:13:00,970 --> 00:13:06,100
call trust and to be quite honest if

371
00:13:03,580 --> 00:13:08,800
we're at the point on the Internet where

372
00:13:06,100 --> 00:13:10,150
Trust has to be added then the security

373
00:13:08,800 --> 00:13:11,709
of something might already be quite

374
00:13:10,150 --> 00:13:15,130
broken be trusted because Trust is

375
00:13:11,710 --> 00:13:16,900
rather a wobbly term and Trust was first

376
00:13:15,130 --> 00:13:19,630
added in this particular Riel with the

377
00:13:16,900 --> 00:13:21,730
invention of restricted iframes we all

378
00:13:19,630 --> 00:13:23,290
know sandboxed iframes I guess like

379
00:13:21,730 --> 00:13:24,940
these iframes that allow us to embed

380
00:13:23,290 --> 00:13:26,410
other people's pages and we give them an

381
00:13:24,940 --> 00:13:27,580
attribute that says sandbox and then

382
00:13:26,410 --> 00:13:31,150
they can't execute JavaScript anymore

383
00:13:27,580 --> 00:13:33,100
it's a great thing but before those we

384
00:13:31,150 --> 00:13:35,470
already had restricted iframes another

385
00:13:33,100 --> 00:13:38,020
invention that was added in Microsoft

386
00:13:35,470 --> 00:13:39,940
Internet Explorer far far far before

387
00:13:38,020 --> 00:13:41,620
sandboxes even existed we could

388
00:13:39,940 --> 00:13:43,240
basically say hey here's an iframe this

389
00:13:41,620 --> 00:13:44,680
iframe loads a certain resource and a

390
00:13:43,240 --> 00:13:48,970
certain resource can't execute any

391
00:13:44,680 --> 00:13:50,709
JavaScript so we should be fine here so

392
00:13:48,970 --> 00:13:52,150
we had additional tools content on

393
00:13:50,710 --> 00:13:53,590
summation escaping things before

394
00:13:52,150 --> 00:13:55,510
processing encoding things before

395
00:13:53,590 --> 00:13:57,580
echoing them and now content

396
00:13:55,510 --> 00:13:59,650
restrictions can't access cookies

397
00:13:57,580 --> 00:14:01,480
anymore through JavaScript and certain

398
00:13:59,650 --> 00:14:04,420
things can't execute JavaScript anymore

399
00:14:01,480 --> 00:14:06,460
in the first place define who and what

400
00:14:04,420 --> 00:14:07,930
can do what and where which is quite

401
00:14:06,460 --> 00:14:09,970
nice but you can also see that at X

402
00:14:07,930 --> 00:14:11,829
complexity and we're still fighting with

403
00:14:09,970 --> 00:14:16,000
it struggling to fix this general or

404
00:14:11,830 --> 00:14:17,440
inability pattern then of course another

405
00:14:16,000 --> 00:14:19,660
problem appeared I hope I got the

406
00:14:17,440 --> 00:14:21,190
headline right I'm not super sure I use

407
00:14:19,660 --> 00:14:22,689
Google Translate I have to admit it's

408
00:14:21,190 --> 00:14:24,430
supposed to say something like yuck

409
00:14:22,690 --> 00:14:27,130
worms because we're talking about worms

410
00:14:24,430 --> 00:14:28,930
about cross-site scripting worms crusher

411
00:14:27,130 --> 00:14:31,090
scripting as people figure it out back

412
00:14:28,930 --> 00:14:33,670
then can do a lot of things pretty much

413
00:14:31,090 --> 00:14:35,710
anything the user can do in the Dom you

414
00:14:33,670 --> 00:14:38,140
can perfectly impersonate someone in the

415
00:14:35,710 --> 00:14:39,640
DOM and do all the interactions that the

416
00:14:38,140 --> 00:14:41,260
user can do as well clicking and

417
00:14:39,640 --> 00:14:43,000
submitting and reading stuff and

418
00:14:41,260 --> 00:14:44,590
modifying stuff and interacting with the

419
00:14:43,000 --> 00:14:45,190
password manager of your browser and so

420
00:14:44,590 --> 00:14:47,470
on and so on

421
00:14:45,190 --> 00:14:49,240
and someone found out at some point that

422
00:14:47,470 --> 00:14:50,800
you can use all the JavaScript that you

423
00:14:49,240 --> 00:14:53,050
might be able to inject into other

424
00:14:50,800 --> 00:14:55,599
people's websites to create something

425
00:14:53,050 --> 00:14:57,280
that is self propagating that basically

426
00:14:55,600 --> 00:14:58,420
propagates over the website and other

427
00:14:57,280 --> 00:14:59,890
people who would visit that website

428
00:14:58,420 --> 00:15:01,569
would be getting affected to the

429
00:14:59,890 --> 00:15:03,949
profiles would be getting infected and

430
00:15:01,570 --> 00:15:06,350
then you would have an actual worm like

431
00:15:03,950 --> 00:15:09,470
like outbreak just done with cross-site

432
00:15:06,350 --> 00:15:12,350
scripting which is pretty cool and it

433
00:15:09,470 --> 00:15:14,690
took only three years for researchers

434
00:15:12,350 --> 00:15:17,209
and the bad guys to find out that it's

435
00:15:14,690 --> 00:15:19,190
possible because in the year 2002 there

436
00:15:17,209 --> 00:15:22,339
was the first write-up about the advil

437
00:15:19,190 --> 00:15:24,079
godoh virus and the advocare virus was

438
00:15:22,339 --> 00:15:25,820
an XSS worm if you look at the

439
00:15:24,079 --> 00:15:27,199
description of this thing this fulfills

440
00:15:25,820 --> 00:15:30,470
all the characteristics of them actually

441
00:15:27,200 --> 00:15:32,480
it's accessible then a couple of years

442
00:15:30,470 --> 00:15:36,170
later there was Sammy Sammy Kamkar who

443
00:15:32,480 --> 00:15:37,730
wrote the semi worm or the how was it

444
00:15:36,170 --> 00:15:40,189
called the mice boy swarm effectively

445
00:15:37,730 --> 00:15:42,529
where he wanted to as he said himself

446
00:15:40,190 --> 00:15:44,450
impress his girlfriend by showing how

447
00:15:42,529 --> 00:15:46,010
many friends he has on MySpace but that

448
00:15:44,450 --> 00:15:47,540
went sideways and all of a sudden the

449
00:15:46,010 --> 00:15:49,899
myspace servers were down because his

450
00:15:47,540 --> 00:15:53,810
worm actually propagated with

451
00:15:49,899 --> 00:15:55,760
exponential rates and the FBI found him

452
00:15:53,810 --> 00:15:59,420
and put him in jail so there was not

453
00:15:55,760 --> 00:16:00,950
that good then a couple of years a

454
00:15:59,420 --> 00:16:03,349
couple of months later that was a very

455
00:16:00,950 --> 00:16:05,360
thorough write-up from Wade Alcorn also

456
00:16:03,350 --> 00:16:06,649
about cross-site scripting viruses and

457
00:16:05,360 --> 00:16:08,390
he quickly also referred to the

458
00:16:06,649 --> 00:16:10,070
possibility of having them be warm abble

459
00:16:08,390 --> 00:16:11,750
having them so propagate themselves and

460
00:16:10,070 --> 00:16:13,610
infect other websites other people and

461
00:16:11,750 --> 00:16:15,649
so on and the following years were

462
00:16:13,610 --> 00:16:17,870
accompanied by more XSS worms and

463
00:16:15,649 --> 00:16:19,490
similar publications so that concept

464
00:16:17,870 --> 00:16:21,519
actually work javascript was already

465
00:16:19,490 --> 00:16:24,250
powerful enough and so web browsers now

466
00:16:21,519 --> 00:16:27,890
you might notice that in this particular

467
00:16:24,250 --> 00:16:30,050
situation you just don't need a small

468
00:16:27,890 --> 00:16:31,699
and simple JavaScript injection you need

469
00:16:30,050 --> 00:16:34,609
something more powerful and usually

470
00:16:31,699 --> 00:16:38,149
those worms came together when working

471
00:16:34,610 --> 00:16:40,940
on websites who were accepting users or

472
00:16:38,149 --> 00:16:42,529
user generated HTML something such as my

473
00:16:40,940 --> 00:16:44,779
script on myspace where you had the

474
00:16:42,529 --> 00:16:46,430
possibility to influence the lock the

475
00:16:44,779 --> 00:16:48,949
looks and the optics of your profile and

476
00:16:46,430 --> 00:16:52,339
use actual HTML so they would allow you

477
00:16:48,949 --> 00:16:54,170
to post HTML to their servers and then

478
00:16:52,339 --> 00:16:55,699
they would sanitize that HTML to make

479
00:16:54,170 --> 00:16:57,439
sure that there's no bad stuff in there

480
00:16:55,699 --> 00:16:59,000
and only the remaining good parts would

481
00:16:57,440 --> 00:17:01,550
be added to the database and then shown

482
00:16:59,000 --> 00:17:03,440
to other users so the problem here of

483
00:17:01,550 --> 00:17:05,000
course is that encoding is Sascha's of

484
00:17:03,440 --> 00:17:07,220
the two ridges we want to also be able

485
00:17:05,000 --> 00:17:09,740
to allow users HTML not encode all the

486
00:17:07,220 --> 00:17:12,020
HTML part tell apart the bad from the

487
00:17:09,740 --> 00:17:13,030
good parts and we can only do so with a

488
00:17:12,020 --> 00:17:15,339
tool that is called

489
00:17:13,030 --> 00:17:17,260
sanitize is effectively a tool that

490
00:17:15,339 --> 00:17:18,789
accepts the string then it mang us that

491
00:17:17,260 --> 00:17:20,169
string and does things with it either by

492
00:17:18,789 --> 00:17:22,179
their irregular expressions or in

493
00:17:20,169 --> 00:17:24,069
smarter ways and then what falls out is

494
00:17:22,179 --> 00:17:26,350
a string of HTML that is considered safe

495
00:17:24,069 --> 00:17:29,260
safe meaning no scripting no interactive

496
00:17:26,349 --> 00:17:31,360
content no forms no pollution no denial

497
00:17:29,260 --> 00:17:34,780
of service just plain presentation or

498
00:17:31,360 --> 00:17:37,209
maybe semantic HTML there's a lot of

499
00:17:34,780 --> 00:17:38,980
sanitizers meanwhile there is HTML

500
00:17:37,210 --> 00:17:41,020
purifier which is written in PHP and

501
00:17:38,980 --> 00:17:42,940
it's actually despite being written in

502
00:17:41,020 --> 00:17:44,200
PHP are very good too then there's anti

503
00:17:42,940 --> 00:17:46,059
semi which is pretty much dead but I

504
00:17:44,200 --> 00:17:50,530
think it's like now more or less

505
00:17:46,059 --> 00:17:51,850
maintained by Mike Samuel who calls it

506
00:17:50,530 --> 00:17:53,230
Oh busted it has a project or something

507
00:17:51,850 --> 00:17:55,719
like this which is very very good

508
00:17:53,230 --> 00:17:57,309
there's HTML lot which was quite bad but

509
00:17:55,720 --> 00:17:59,409
it's getting a bit better there is what

510
00:17:57,309 --> 00:18:00,970
HTML horrible sanitizer that's

511
00:17:59,409 --> 00:18:03,490
completely broken but still being used

512
00:18:00,970 --> 00:18:04,960
by a couple of tools kay says that was

513
00:18:03,490 --> 00:18:07,720
horrible in the past but now it's a bit

514
00:18:04,960 --> 00:18:10,360
better safe HTML sanitized HTML HTML

515
00:18:07,720 --> 00:18:12,940
sanitizer HTML - sanitizer HTML based

516
00:18:10,360 --> 00:18:14,949
sanitizer HTML rule sanitizer and last

517
00:18:12,940 --> 00:18:16,570
but not least google's kaha which

518
00:18:14,950 --> 00:18:18,700
unfortunately is not being maintained

519
00:18:16,570 --> 00:18:20,530
anymore you might see that my own

520
00:18:18,700 --> 00:18:21,760
sanitizer is missing here because I

521
00:18:20,530 --> 00:18:23,590
don't want to smack-talk my own stuff

522
00:18:21,760 --> 00:18:26,110
because all these solutions here had one

523
00:18:23,590 --> 00:18:28,299
problem they have all been bypassed at

524
00:18:26,110 --> 00:18:30,100
some point they have all been broken at

525
00:18:28,299 --> 00:18:33,520
some point and when you bypass and break

526
00:18:30,100 --> 00:18:35,799
sanitizer well then it loses its purpose

527
00:18:33,520 --> 00:18:38,139
so a sanitizer needs someone to maintain

528
00:18:35,799 --> 00:18:40,210
it and someone whose reverse of the

529
00:18:38,140 --> 00:18:42,190
matter and can actually maintain it can

530
00:18:40,210 --> 00:18:44,559
fix bugs and so on and I love this

531
00:18:42,190 --> 00:18:46,659
statement from the cases maintainer it's

532
00:18:44,559 --> 00:18:48,879
an outdated statement we have to admit

533
00:18:46,659 --> 00:18:52,179
that but it's just brilliant cases it's

534
00:18:48,880 --> 00:18:54,880
an HTML XHTML filter written in PHP it

535
00:18:52,179 --> 00:18:56,980
removes all unwanted HTML elements and

536
00:18:54,880 --> 00:18:59,140
attributes and it's also does several

537
00:18:56,980 --> 00:19:01,000
checks and attribute values cases can be

538
00:18:59,140 --> 00:19:03,400
used to avoid cross-site scripting note

539
00:19:01,000 --> 00:19:05,710
I don't have time for cases right now

540
00:19:03,400 --> 00:19:07,600
this is awesome like this is definitely

541
00:19:05,710 --> 00:19:08,860
the sanitizer you wanna use right where

542
00:19:07,600 --> 00:19:14,980
the maintainer says no I don't have time

543
00:19:08,860 --> 00:19:16,840
for this anyway not really secure not

544
00:19:14,980 --> 00:19:18,100
really a great concept because all of

545
00:19:16,840 --> 00:19:20,020
them as mentioned have been bypassed in

546
00:19:18,100 --> 00:19:21,040
the past some of them have fixed their

547
00:19:20,020 --> 00:19:22,840
bypasses

548
00:19:21,040 --> 00:19:25,240
some of them have tried to fix their

549
00:19:22,840 --> 00:19:26,050
bypasses but failed and some simply

550
00:19:25,240 --> 00:19:27,790
didn't care

551
00:19:26,050 --> 00:19:29,770
well then don't write a sanitizer in the

552
00:19:27,790 --> 00:19:32,020
first place so maintaining a Senators is

553
00:19:29,770 --> 00:19:34,420
a tough job and you have to be aware

554
00:19:32,020 --> 00:19:35,379
that at any point in time even if you're

555
00:19:34,420 --> 00:19:36,970
on vacation

556
00:19:35,380 --> 00:19:38,830
someone might fire the bypass and you

557
00:19:36,970 --> 00:19:40,660
have to fix it and you have to deploy it

558
00:19:38,830 --> 00:19:42,220
so it's not easy work and most of the

559
00:19:40,660 --> 00:19:46,030
maintainer actually didn't see that some

560
00:19:42,220 --> 00:19:47,260
do many don't so much secure not really

561
00:19:46,030 --> 00:19:49,360
XSS is dead

562
00:19:47,260 --> 00:19:50,740
no we've seemingly not smart enough

563
00:19:49,360 --> 00:19:52,240
we're trying to develop tools that

564
00:19:50,740 --> 00:19:54,040
actually can defeat this were nobility

565
00:19:52,240 --> 00:19:55,630
class but none of them really were

566
00:19:54,040 --> 00:19:57,730
Calista Klee either they're too strict

567
00:19:55,630 --> 00:19:59,620
or they're addressing the wrong thing

568
00:19:57,730 --> 00:20:01,420
like for example HTTP only cookies or

569
00:19:59,620 --> 00:20:03,550
that just under maintained a not

570
00:20:01,420 --> 00:20:05,350
functional because skill is missing or

571
00:20:03,550 --> 00:20:09,370
motivation is missing or engagement is

572
00:20:05,350 --> 00:20:10,480
missing so we're not there yet the tools

573
00:20:09,370 --> 00:20:12,159
we have right now are contents

574
00:20:10,480 --> 00:20:14,710
information to escape things and to

575
00:20:12,160 --> 00:20:15,880
encode things content sanitization tell

576
00:20:14,710 --> 00:20:17,140
apart the bed from the good and leave

577
00:20:15,880 --> 00:20:19,060
only the good and last but not least

578
00:20:17,140 --> 00:20:21,610
content restriction define who and what

579
00:20:19,060 --> 00:20:24,040
can do what and where technically we

580
00:20:21,610 --> 00:20:26,290
should assume that those tools can fix

581
00:20:24,040 --> 00:20:28,120
99.9% of all cases of cross-site

582
00:20:26,290 --> 00:20:29,860
scripting but as mentioned we're sort of

583
00:20:28,120 --> 00:20:34,449
not there yet so something seems to

584
00:20:29,860 --> 00:20:35,860
still be missing well we do have most of

585
00:20:34,450 --> 00:20:37,540
process scripting covered which we just

586
00:20:35,860 --> 00:20:39,250
have to remember to actually implemented

587
00:20:37,540 --> 00:20:43,210
and we're looking at the year eight

588
00:20:39,250 --> 00:20:45,400
after XSS and we want to find out how

589
00:20:43,210 --> 00:20:47,470
many people have actually invested time

590
00:20:45,400 --> 00:20:49,600
into studying and researching cross-site

591
00:20:47,470 --> 00:20:51,280
scripting and I check Google Scholar and

592
00:20:49,600 --> 00:20:52,719
I check the custom date range from

593
00:20:51,280 --> 00:20:55,149
pretty much dimension of cross-site

594
00:20:52,720 --> 00:20:58,450
scripting 1999 to the year 2007 and

595
00:20:55,150 --> 00:21:01,900
there was already 1930 papers about

596
00:20:58,450 --> 00:21:03,760
cross-site scripting 1930 yet we still

597
00:21:01,900 --> 00:21:05,080
haven't solved the problem if that would

598
00:21:03,760 --> 00:21:08,410
happen medicine we would have a severe

599
00:21:05,080 --> 00:21:09,730
problem anyway we need to of course also

600
00:21:08,410 --> 00:21:11,680
think about all those these cases

601
00:21:09,730 --> 00:21:12,880
what about Dom XSS what about a mixer

602
00:21:11,680 --> 00:21:15,070
says what about this what about that

603
00:21:12,880 --> 00:21:17,260
what if the tools that we do have are

604
00:21:15,070 --> 00:21:18,639
actually not enough to fix all of it to

605
00:21:17,260 --> 00:21:21,490
kind of fully eliminate the variability

606
00:21:18,640 --> 00:21:23,500
class and for sure that's the case and

607
00:21:21,490 --> 00:21:25,630
there was lots of niche cases back then

608
00:21:23,500 --> 00:21:27,310
and then still is there's for example

609
00:21:25,630 --> 00:21:29,980
mime sniffing exercise where you can

610
00:21:27,310 --> 00:21:32,929
force certain browsers to render a text

611
00:21:29,980 --> 00:21:34,400
file as if it were HTML and

612
00:21:32,930 --> 00:21:35,660
and what how do you sanitize that you

613
00:21:34,400 --> 00:21:37,880
need to be aware that this is even

614
00:21:35,660 --> 00:21:40,130
possible the same would go for J's and

615
00:21:37,880 --> 00:21:42,860
in other formats or XML and many other

616
00:21:40,130 --> 00:21:44,360
things or PDF or presentations we saw a

617
00:21:42,860 --> 00:21:45,679
case once where you had a conference

618
00:21:44,360 --> 00:21:47,540
server where you could upload your

619
00:21:45,680 --> 00:21:51,710
slides and the slides were uploaded as

620
00:21:47,540 --> 00:21:54,020
pptx PowerPoint and then when you wanted

621
00:21:51,710 --> 00:21:56,060
to download the slides you would get raw

622
00:21:54,020 --> 00:21:58,010
text back well then you could just put a

623
00:21:56,060 --> 00:21:59,300
script tech into this light binary and

624
00:21:58,010 --> 00:22:00,350
then you get the text back in the

625
00:21:59,300 --> 00:22:01,909
numbers cross-site scripting from a

626
00:22:00,350 --> 00:22:05,240
slight tech that would work as well

627
00:22:01,910 --> 00:22:07,310
that's another in each case then there's

628
00:22:05,240 --> 00:22:09,560
plugin a XSS for example back then when

629
00:22:07,310 --> 00:22:11,060
people had the Adobe Reader plugin

630
00:22:09,560 --> 00:22:12,290
installed and anyone's tool is the Adobe

631
00:22:11,060 --> 00:22:16,100
Reader plugin installed for the browser

632
00:22:12,290 --> 00:22:17,990
I hope not no no one good well that had

633
00:22:16,100 --> 00:22:20,360
XSS as well there was a spectacular case

634
00:22:17,990 --> 00:22:22,040
because the only precondition that was

635
00:22:20,360 --> 00:22:25,820
there to have a vulnerable website was

636
00:22:22,040 --> 00:22:27,350
to store one PDF and your web prude not

637
00:22:25,820 --> 00:22:28,970
even a verb and you just needed to have

638
00:22:27,350 --> 00:22:30,830
a PDF from there was it because what

639
00:22:28,970 --> 00:22:33,950
would you wanted to do here was to use

640
00:22:30,830 --> 00:22:35,929
the URL to the PDF app and a hash and

641
00:22:33,950 --> 00:22:38,270
then whatever name of parameter you want

642
00:22:35,930 --> 00:22:40,340
could be any name of parameter would be

643
00:22:38,270 --> 00:22:42,500
equals JavaScript and then alert one or

644
00:22:40,340 --> 00:22:44,360
whatever and that would work that was

645
00:22:42,500 --> 00:22:46,760
like Universal everybody who hosted to

646
00:22:44,360 --> 00:22:50,360
PDF across that scripting your encoding

647
00:22:46,760 --> 00:22:51,890
and escaping and restrictions and Trust

648
00:22:50,360 --> 00:22:53,510
models they don't work here anymore so

649
00:22:51,890 --> 00:22:57,970
that's in each case that is completely

650
00:22:53,510 --> 00:22:57,970
off the grid and needs special treatment

651
00:22:59,230 --> 00:23:04,130
sorry so as we can see the tools are not

652
00:23:02,780 --> 00:23:05,389
enough encoding is not enough sanitize

653
00:23:04,130 --> 00:23:07,670
nation is not enough we need stronger

654
00:23:05,390 --> 00:23:10,460
tools we need something that is as

655
00:23:07,670 --> 00:23:12,470
granular enough as to decide when to

656
00:23:10,460 --> 00:23:13,940
execute scripts and when not to execute

657
00:23:12,470 --> 00:23:16,790
scripts something that can make

658
00:23:13,940 --> 00:23:18,710
decisions or at least generate policies

659
00:23:16,790 --> 00:23:22,310
where the browser has enough material to

660
00:23:18,710 --> 00:23:23,780
generate decisions on its own and the

661
00:23:22,310 --> 00:23:25,460
thing we're talking about is probably

662
00:23:23,780 --> 00:23:28,910
something that everybody knows here that

663
00:23:25,460 --> 00:23:30,650
is content restrictions 0.5 content

664
00:23:28,910 --> 00:23:32,930
restriction 0.5 was born in the year

665
00:23:30,650 --> 00:23:34,790
five after XSS and was getting more

666
00:23:32,930 --> 00:23:36,650
serious in the year eight after XSS with

667
00:23:34,790 --> 00:23:39,680
first implementations took place this

668
00:23:36,650 --> 00:23:39,970
was developed by Jarvis mark Ham and was

669
00:23:39,680 --> 00:23:42,370
it

670
00:23:39,970 --> 00:23:43,750
genius idea only that someone else then

671
00:23:42,370 --> 00:23:45,610
took the idea and turn it into something

672
00:23:43,750 --> 00:23:47,680
else because they turned it into content

673
00:23:45,610 --> 00:23:49,179
security policy and just renamed it

674
00:23:47,680 --> 00:23:51,220
rebranded it and all of a sudden someone

675
00:23:49,180 --> 00:23:52,780
else owned it which was not very nice

676
00:23:51,220 --> 00:23:55,030
but anyway that was the beginning of

677
00:23:52,780 --> 00:23:57,280
adding more granularity and more checks

678
00:23:55,030 --> 00:23:58,870
and more power to the browser and other

679
00:23:57,280 --> 00:24:02,080
instances in controlling JavaScript

680
00:23:58,870 --> 00:24:05,260
execution and the likes contact security

681
00:24:02,080 --> 00:24:07,389
policy is a tool that I personally don't

682
00:24:05,260 --> 00:24:08,830
like and I also think it's dead and

683
00:24:07,390 --> 00:24:11,890
we're gonna get to that in a second I

684
00:24:08,830 --> 00:24:14,080
think the idea as its core is great but

685
00:24:11,890 --> 00:24:16,000
it became something that is too complex

686
00:24:14,080 --> 00:24:17,889
because what they try to make out of it

687
00:24:16,000 --> 00:24:20,380
is pretty much a multi-tool that can do

688
00:24:17,890 --> 00:24:22,600
anything relating to the security you

689
00:24:20,380 --> 00:24:24,370
can set headers from your server and

690
00:24:22,600 --> 00:24:25,570
instruct your browser to do things and

691
00:24:24,370 --> 00:24:27,129
the original plan was to kind of

692
00:24:25,570 --> 00:24:29,200
restrict scripts and content from

693
00:24:27,130 --> 00:24:31,360
executing but what actually came out was

694
00:24:29,200 --> 00:24:34,480
like HTTP leak protection and privacy

695
00:24:31,360 --> 00:24:36,639
tools and the tools to kind of manage

696
00:24:34,480 --> 00:24:39,640
whether your page is loading in SSL or

697
00:24:36,640 --> 00:24:40,990
not an SSL TLS or not in TLS and so on

698
00:24:39,640 --> 00:24:43,510
and so on and became something that is

699
00:24:40,990 --> 00:24:45,280
so gloaty and so complex that sometimes

700
00:24:43,510 --> 00:24:46,840
developers don't really have a chance to

701
00:24:45,280 --> 00:24:48,730
understand what is going on and generate

702
00:24:46,840 --> 00:24:51,550
policies that make actual sense we see

703
00:24:48,730 --> 00:24:54,010
stuff that we would refer to as LP or

704
00:24:51,550 --> 00:24:55,960
cargo called CSP CSP rules that don't

705
00:24:54,010 --> 00:24:57,490
make any sense at all they just eat up

706
00:24:55,960 --> 00:25:00,400
bytes with every request and every

707
00:24:57,490 --> 00:25:03,970
response we've seen CSP rules where you

708
00:25:00,400 --> 00:25:06,880
could say well we have a massive CSP

709
00:25:03,970 --> 00:25:08,800
rule pointing at tons of your else but

710
00:25:06,880 --> 00:25:09,940
we also whitelist everything then why do

711
00:25:08,800 --> 00:25:11,230
what do you have it in the first place

712
00:25:09,940 --> 00:25:12,850
it makes no sense at all

713
00:25:11,230 --> 00:25:14,860
so I don't think that this particular

714
00:25:12,850 --> 00:25:22,600
idea is on the right track and we're

715
00:25:14,860 --> 00:25:24,699
still not there yes no because I think

716
00:25:22,600 --> 00:25:27,159
there are just like spot-on they kind of

717
00:25:24,700 --> 00:25:29,050
address one specific issue where CSP

718
00:25:27,160 --> 00:25:31,650
tries to address them all which is like

719
00:25:29,050 --> 00:25:34,389
an approach that is doomed to fail and

720
00:25:31,650 --> 00:25:36,220
others agree actually because here's a

721
00:25:34,390 --> 00:25:37,450
statement from my quest that is pretty

722
00:25:36,220 --> 00:25:39,220
much answering your question

723
00:25:37,450 --> 00:25:41,170
Cornette security policy is a thing

724
00:25:39,220 --> 00:25:43,450
we've been iterating on it for years and

725
00:25:41,170 --> 00:25:44,710
years now and it shows the backwards

726
00:25:43,450 --> 00:25:46,450
compatibility constraints are increased

727
00:25:44,710 --> 00:25:48,640
to be contorted we've moved past scope

728
00:25:46,450 --> 00:25:50,170
creep into scope kudzu and the

729
00:25:48,640 --> 00:25:51,040
implementation status between browsers

730
00:25:50,170 --> 00:25:54,070
is in

731
00:25:51,040 --> 00:25:56,260
distant at best I think it would be

732
00:25:54,070 --> 00:25:58,990
somewhat irresponsible to make these

733
00:25:56,260 --> 00:26:01,240
problems worse by starting on another

734
00:25:58,990 --> 00:26:02,920
iteration of CSP that did anything other

735
00:26:01,240 --> 00:26:05,260
than remove features and I don't intend

736
00:26:02,920 --> 00:26:07,150
to do so so one of the creators of CSP

737
00:26:05,260 --> 00:26:09,670
says it's dead we can't have it anymore

738
00:26:07,150 --> 00:26:12,760
it's too big it's too complex we screwed

739
00:26:09,670 --> 00:26:16,420
it up and now the rock UNC is P next so

740
00:26:12,760 --> 00:26:18,100
we have two standards and as much more

741
00:26:16,420 --> 00:26:19,420
that people actually add it to Edward

742
00:26:18,100 --> 00:26:21,370
granularity and more control for

743
00:26:19,420 --> 00:26:23,380
browsers to do stuff to automate Li

744
00:26:21,370 --> 00:26:24,909
reach the goal of defeating cross-site

745
00:26:23,380 --> 00:26:26,980
scripting we have sandbox iframes as

746
00:26:24,910 --> 00:26:28,420
mentioned we have sub resource integrity

747
00:26:26,980 --> 00:26:30,070
we have sub origins permission

748
00:26:28,420 --> 00:26:32,170
delegation trusted types referral

749
00:26:30,070 --> 00:26:34,570
policies and so many things we can do I

750
00:26:32,170 --> 00:26:36,070
believe that at some point the websites

751
00:26:34,570 --> 00:26:40,419
headers will be bigger than the

752
00:26:36,070 --> 00:26:42,939
website's body but anyway here is an

753
00:26:40,420 --> 00:26:45,400
example on how to implement trusted

754
00:26:42,940 --> 00:26:47,080
types look at it it's easy no problem at

755
00:26:45,400 --> 00:26:48,730
all trusted types are cool because with

756
00:26:47,080 --> 00:26:50,230
trusted types once you turn them on you

757
00:26:48,730 --> 00:26:52,300
basically say we don't have Dom access

758
00:26:50,230 --> 00:26:54,790
anymore because all the possible Dominic

759
00:26:52,300 --> 00:26:56,800
says things won't be able to execute

760
00:26:54,790 --> 00:26:58,750
code from strings anymore that they

761
00:26:56,800 --> 00:27:01,540
receive you have to create an explicit

762
00:26:58,750 --> 00:27:03,430
policy for each sing and configure what

763
00:27:01,540 --> 00:27:06,280
it's supposed to happen with it as you

764
00:27:03,430 --> 00:27:08,500
can see here we first set this header

765
00:27:06,280 --> 00:27:11,080
content security policy trusted types

766
00:27:08,500 --> 00:27:12,820
asterisk then we defined some JavaScript

767
00:27:11,080 --> 00:27:14,740
cons template ID equals location hash

768
00:27:12,820 --> 00:27:16,480
match template ID this is a parent of

769
00:27:14,740 --> 00:27:18,010
the parameter we wanna watch then we say

770
00:27:16,480 --> 00:27:20,200
document had Aaron HTML plus equals

771
00:27:18,010 --> 00:27:22,000
template ID if we try to do this then it

772
00:27:20,200 --> 00:27:23,950
throws an error because we have trusted

773
00:27:22,000 --> 00:27:25,540
types enabled so instead we have to do

774
00:27:23,950 --> 00:27:27,490
something else we have to define a

775
00:27:25,540 --> 00:27:29,050
template policy that says trusted types

776
00:27:27,490 --> 00:27:31,180
that create policies the template great

777
00:27:29,050 --> 00:27:33,669
HTML and so on I mean who wants to do

778
00:27:31,180 --> 00:27:35,950
this for masses of things and masses of

779
00:27:33,670 --> 00:27:37,420
parameters it's a great idea but I think

780
00:27:35,950 --> 00:27:39,400
it's security for the rich because you

781
00:27:37,420 --> 00:27:41,050
have to invest a lot of energy a lot of

782
00:27:39,400 --> 00:27:42,370
research and a lot of resources into

783
00:27:41,050 --> 00:27:45,780
actually implementing this for your

784
00:27:42,370 --> 00:27:45,780
existing website yes please

785
00:27:50,220 --> 00:27:55,090
might work on a framework level 2

786
00:27:52,830 --> 00:27:56,530
however the frameworks need to actually

787
00:27:55,090 --> 00:27:58,300
implement it the browser's need to be

788
00:27:56,530 --> 00:27:59,740
compatible and so on that we still have

789
00:27:58,300 --> 00:28:01,300
a couple of years until this is the case

790
00:27:59,740 --> 00:28:02,950
I do believe in trust the types

791
00:28:01,300 --> 00:28:04,360
eventually but I don't think that it's a

792
00:28:02,950 --> 00:28:07,810
silver bullet for everybody to use quite

793
00:28:04,360 --> 00:28:09,669
easily so this is there and you can see

794
00:28:07,810 --> 00:28:12,490
how complex things have gotten meanwhile

795
00:28:09,670 --> 00:28:14,410
so the tools we have are still content

796
00:28:12,490 --> 00:28:15,820
transformation escaping and encoding

797
00:28:14,410 --> 00:28:17,170
content sanitization heading about to

798
00:28:15,820 --> 00:28:19,120
the web from the good leave only the

799
00:28:17,170 --> 00:28:21,790
good content restrictions define who and

800
00:28:19,120 --> 00:28:24,070
what can do what and where and how that

801
00:28:21,790 --> 00:28:27,780
the trustee is actually trustable in

802
00:28:24,070 --> 00:28:30,250
this situation maybe it is maybe not so

803
00:28:27,780 --> 00:28:31,480
technically we are in a good position to

804
00:28:30,250 --> 00:28:33,490
state that cross the scripting is

805
00:28:31,480 --> 00:28:35,500
actually dead but the progress we just

806
00:28:33,490 --> 00:28:37,030
forget about it we just forget about the

807
00:28:35,500 --> 00:28:38,800
tools that we have to forget about how

808
00:28:37,030 --> 00:28:40,840
to use them the right way and so also

809
00:28:38,800 --> 00:28:42,760
the bug is still around we could squish

810
00:28:40,840 --> 00:28:45,100
it but we haven't done it yet we're

811
00:28:42,760 --> 00:28:47,020
humans we forget about stuff we don't

812
00:28:45,100 --> 00:28:49,330
fully get things we don't really care

813
00:28:47,020 --> 00:28:51,370
about all the things we really easily

814
00:28:49,330 --> 00:28:53,290
get distracted by other stuff and we

815
00:28:51,370 --> 00:28:55,060
have limited capacity and resources like

816
00:28:53,290 --> 00:28:57,580
we can't remember all that stuff I

817
00:28:55,060 --> 00:28:59,020
pretty much dedicated a lot of time to

818
00:28:57,580 --> 00:29:00,310
that in the past and I don't remember

819
00:28:59,020 --> 00:29:02,470
all these things because it's such a

820
00:29:00,310 --> 00:29:07,000
vast and huge field meanwhile and it's

821
00:29:02,470 --> 00:29:08,590
so hard to implement fully so we know

822
00:29:07,000 --> 00:29:10,360
the tools that we have but now we look

823
00:29:08,590 --> 00:29:12,520
at the things that actually happen were

824
00:29:10,360 --> 00:29:14,290
the tools that we have contents

825
00:29:12,520 --> 00:29:16,900
transformation whoa people forget to

826
00:29:14,290 --> 00:29:19,080
escape into it code happens or people

827
00:29:16,900 --> 00:29:21,490
encoded escape the wrong way happens

828
00:29:19,080 --> 00:29:23,949
content sanitization the sanitizer gets

829
00:29:21,490 --> 00:29:25,750
bypassed happens don't sure if I

830
00:29:23,950 --> 00:29:27,550
recently got bypass the fix was there in

831
00:29:25,750 --> 00:29:29,710
six hours and then we head back and

832
00:29:27,550 --> 00:29:31,570
Google sanitizer as well and there was a

833
00:29:29,710 --> 00:29:33,160
Nexus S and the Google index page there

834
00:29:31,570 --> 00:29:35,950
was cool our bag was faster fix that one

835
00:29:33,160 --> 00:29:38,290
and Google sanitizer but anyway senators

836
00:29:35,950 --> 00:29:40,000
get bypassed happens for humans or the

837
00:29:38,290 --> 00:29:41,860
Senators a library their website uses

838
00:29:40,000 --> 00:29:43,330
outdated and no one updates it because

839
00:29:41,860 --> 00:29:45,820
they feel that the API breaks or

840
00:29:43,330 --> 00:29:47,590
something like this happens content

841
00:29:45,820 --> 00:29:49,060
restriction implementing CSP and trusted

842
00:29:47,590 --> 00:29:52,419
types are so much work I don't want to

843
00:29:49,060 --> 00:29:54,050
do it happens or if we do it then our

844
00:29:52,420 --> 00:29:56,530
advertising doesn't work anymore

845
00:29:54,050 --> 00:29:59,270
all the money is gonna be gone happens

846
00:29:56,530 --> 00:30:01,160
so maybe you're not really overly

847
00:29:59,270 --> 00:30:04,820
motivated to fully tackle the problem

848
00:30:01,160 --> 00:30:06,530
maybe that's the actual deal here let's

849
00:30:04,820 --> 00:30:08,570
talk about the problem statement what

850
00:30:06,530 --> 00:30:10,730
seems to be the problem with us not

851
00:30:08,570 --> 00:30:13,070
being able to fix cross-site scripting

852
00:30:10,730 --> 00:30:15,320
and I think we can also generalize this

853
00:30:13,070 --> 00:30:18,950
to other problems maybe in info second

854
00:30:15,320 --> 00:30:22,550
and maybe even beyond we're in the year

855
00:30:18,950 --> 00:30:24,890
2000 XSS we have all the research we

856
00:30:22,550 --> 00:30:26,570
have all the tools we know pretty much

857
00:30:24,890 --> 00:30:28,370
all those tricks there's people like

858
00:30:26,570 --> 00:30:30,439
file descriptor Massaro and those still

859
00:30:28,370 --> 00:30:32,780
do research and I think they have

860
00:30:30,440 --> 00:30:34,190
explored the area to the very max they

861
00:30:32,780 --> 00:30:35,540
have seen it all we know all those

862
00:30:34,190 --> 00:30:38,150
tricks and if there's like one more

863
00:30:35,540 --> 00:30:39,950
trick well so be it but we have seen it

864
00:30:38,150 --> 00:30:41,090
all pretty much we know all the risks we

865
00:30:39,950 --> 00:30:42,290
know what can happen with cross-site

866
00:30:41,090 --> 00:30:43,970
scripting we know that worms are

867
00:30:42,290 --> 00:30:47,030
possible and that they happen in real

868
00:30:43,970 --> 00:30:48,770
what in the real world we do know how to

869
00:30:47,030 --> 00:30:50,240
kill cross-site scripting but we don't

870
00:30:48,770 --> 00:30:52,129
do it we just don't do it and the

871
00:30:50,240 --> 00:30:54,580
question is why why don't we do it we

872
00:30:52,130 --> 00:30:56,980
could do it we have everything we need I

873
00:30:54,580 --> 00:30:59,960
think there's a variety of reasons I

874
00:30:56,980 --> 00:31:02,870
mean this is just like samples

875
00:30:59,960 --> 00:31:04,850
oh we just forgot to escape the

876
00:31:02,870 --> 00:31:07,550
user-generated content this one time

877
00:31:04,850 --> 00:31:09,290
we're gonna fix it right away oh this is

878
00:31:07,550 --> 00:31:11,000
a legacy system we're building a newer

879
00:31:09,290 --> 00:31:12,830
one and slowly merging them together the

880
00:31:11,000 --> 00:31:15,620
new one is fortunately safe but it takes

881
00:31:12,830 --> 00:31:16,790
time we can't really afford to add

882
00:31:15,620 --> 00:31:19,489
security right now we don't have

883
00:31:16,790 --> 00:31:21,170
management budget oh no we don't use

884
00:31:19,490 --> 00:31:23,990
frameworks because our custom code is

885
00:31:21,170 --> 00:31:26,060
much better and much faster Oh

886
00:31:23,990 --> 00:31:27,650
our advertisers they don't like CSP

887
00:31:26,060 --> 00:31:28,850
because then they don't have a drannit

888
00:31:27,650 --> 00:31:32,030
venue and every morning we don't get at

889
00:31:28,850 --> 00:31:33,679
revenue and everybody loses money or the

890
00:31:32,030 --> 00:31:36,470
developer who wrote this particular code

891
00:31:33,680 --> 00:31:40,240
is now selling used cars and nobody can

892
00:31:36,470 --> 00:31:44,090
maintain this mess we had this actually

893
00:31:40,240 --> 00:31:45,620
so we kind of becoming chief excused

894
00:31:44,090 --> 00:31:47,360
officers when coming to these things

895
00:31:45,620 --> 00:31:51,139
we're really good with delivering

896
00:31:47,360 --> 00:31:53,149
excuses we can't do this because that I

897
00:31:51,140 --> 00:31:54,770
was dehydrated when writing that code

898
00:31:53,150 --> 00:31:57,560
that was so sad the water was so far

899
00:31:54,770 --> 00:31:59,300
away over a meter or we delegate bills

900
00:31:57,560 --> 00:32:00,919
and responsibilities that was the filthy

901
00:31:59,300 --> 00:32:03,320
intern who wrote that code that was this

902
00:32:00,920 --> 00:32:04,940
person or the project lead actually

903
00:32:03,320 --> 00:32:06,110
except that there is like one X's s

904
00:32:04,940 --> 00:32:07,940
isn't that bad I mean what could

905
00:32:06,110 --> 00:32:10,070
happen who's actually gonna do this in

906
00:32:07,940 --> 00:32:11,210
the first place right or as mentioned

907
00:32:10,070 --> 00:32:13,070
management doesn't run in a security

908
00:32:11,210 --> 00:32:15,020
budget or yeah we have like the

909
00:32:13,070 --> 00:32:16,970
second-tier protection against XSS

910
00:32:15,020 --> 00:32:18,440
because we passed scope or cookies what

911
00:32:16,970 --> 00:32:20,900
are you doing yeah we passed cope our

912
00:32:18,440 --> 00:32:23,120
cookies and yeah that's good protection

913
00:32:20,900 --> 00:32:24,980
no it's not we had this just two weeks

914
00:32:23,120 --> 00:32:27,020
ago someone told us that and of course

915
00:32:24,980 --> 00:32:32,480
was broken in five minutes they took a

916
00:32:27,020 --> 00:32:36,740
year to build it so I mean one could now

917
00:32:32,480 --> 00:32:38,809
assume that we can blame the others

918
00:32:36,740 --> 00:32:40,429
above you will say well the fish rots

919
00:32:38,809 --> 00:32:42,678
from the head down it's like other

920
00:32:40,429 --> 00:32:44,120
people who make decisions they pretty

921
00:32:42,679 --> 00:32:45,590
much leave us in the position of not

922
00:32:44,120 --> 00:32:47,809
being able to do anything about the

923
00:32:45,590 --> 00:32:49,570
problem we also want but I don't think

924
00:32:47,809 --> 00:32:52,460
so I think it's all of us things me

925
00:32:49,570 --> 00:32:55,189
maybe you or some people here maybe even

926
00:32:52,460 --> 00:32:57,650
Jim but I think we need to kind of be

927
00:32:55,190 --> 00:32:59,210
more reflective about why we are not

928
00:32:57,650 --> 00:33:00,679
capable of solving these problems not

929
00:32:59,210 --> 00:33:05,510
only this but also other problems in

930
00:33:00,679 --> 00:33:08,059
InfoSec I think one of the reasons might

931
00:33:05,510 --> 00:33:10,790
be money none less might be a little bit

932
00:33:08,059 --> 00:33:13,460
of a provocative hypothesis here I think

933
00:33:10,790 --> 00:33:15,649
right now it's more lucrative for

934
00:33:13,460 --> 00:33:17,150
everyone involved to keep the things as

935
00:33:15,650 --> 00:33:19,070
they are to keep the status quo

936
00:33:17,150 --> 00:33:20,720
there is no intrinsic motivation to

937
00:33:19,070 --> 00:33:22,580
solve cross-site scripting or almost any

938
00:33:20,720 --> 00:33:26,270
other security bug unless you get like

939
00:33:22,580 --> 00:33:28,129
negative press and I would kind of ask a

940
00:33:26,270 --> 00:33:29,510
provocative question that would be if

941
00:33:28,130 --> 00:33:31,549
cross-site scripting got completely

942
00:33:29,510 --> 00:33:33,830
eliminated in it if the entire bug class

943
00:33:31,549 --> 00:33:38,720
would be gone who here in this room

944
00:33:33,830 --> 00:33:40,460
would suffer financially me for sure I'm

945
00:33:38,720 --> 00:33:42,200
a pen tester if we don't find XSS bugs

946
00:33:40,460 --> 00:33:44,000
anymore well then our reports are just

947
00:33:42,200 --> 00:33:45,799
half as thick and we get less money so

948
00:33:44,000 --> 00:33:47,000
that would suck and I believe that some

949
00:33:45,799 --> 00:33:48,559
people here in this room would also

950
00:33:47,000 --> 00:33:50,900
suffer financially Park bounty hunters

951
00:33:48,559 --> 00:33:53,360
for sure penetration testers for sure in

952
00:33:50,900 --> 00:33:54,919
a couple of other people as well so it's

953
00:33:53,360 --> 00:33:56,479
actually not the worst we have all this

954
00:33:54,919 --> 00:33:58,100
mess around right like all the sturdy

955
00:33:56,480 --> 00:33:59,480
intersex stuff it's actually quite cool

956
00:33:58,100 --> 00:34:03,260
that we have otherwise you wouldn't be

957
00:33:59,480 --> 00:34:04,429
here in the first place so the question

958
00:34:03,260 --> 00:34:06,230
is that we have to ask ourselves what we

959
00:34:04,429 --> 00:34:10,220
actually really want do we want to solve

960
00:34:06,230 --> 00:34:12,500
XSS and other problems as well or do we

961
00:34:10,219 --> 00:34:13,230
just pretend that we do want to solve

962
00:34:12,500 --> 00:34:14,639
them it would be

963
00:34:13,230 --> 00:34:17,159
you want to do is make money hang out

964
00:34:14,639 --> 00:34:20,550
and drink together it could be possible

965
00:34:17,159 --> 00:34:21,960
wouldn't even be the worst thing so what

966
00:34:20,550 --> 00:34:24,389
do you think so we want to solve

967
00:34:21,960 --> 00:34:26,159
cross-site scripting once and for all or

968
00:34:24,389 --> 00:34:28,859
do we want to leave things as they are

969
00:34:26,159 --> 00:34:30,300
who is here for solving this issue so

970
00:34:28,859 --> 00:34:34,830
really actually putting like an end to

971
00:34:30,300 --> 00:34:37,080
this you better racer who wants to leave

972
00:34:34,830 --> 00:34:39,179
things as they are anybody yes I like

973
00:34:37,080 --> 00:34:40,469
the honesty I kind of also want to leave

974
00:34:39,179 --> 00:34:44,730
things that stay a little bit but then I

975
00:34:40,469 --> 00:34:46,560
was I'm torn I'm torn anyway now the

976
00:34:44,730 --> 00:34:47,460
question is what do we do now like where

977
00:34:46,560 --> 00:34:48,869
do we go from here

978
00:34:47,460 --> 00:34:50,100
I mean this is a keynote and after the

979
00:34:48,869 --> 00:34:52,169
conference happened so we need to kind

980
00:34:50,100 --> 00:34:53,609
of have some motivation some some motive

981
00:34:52,168 --> 00:34:55,109
to actually move on to the next talks

982
00:34:53,609 --> 00:34:59,279
and do the discussions and all these

983
00:34:55,109 --> 00:35:01,529
things what are we going to do if we

984
00:34:59,280 --> 00:35:04,170
want to solve XSS do we really need more

985
00:35:01,530 --> 00:35:05,910
tools do we really need an other CSP do

986
00:35:04,170 --> 00:35:08,670
we really need CSP next we need our

987
00:35:05,910 --> 00:35:10,170
itu-r or whatever other proposals do we

988
00:35:08,670 --> 00:35:11,970
need SEC metadata do we need another

989
00:35:10,170 --> 00:35:14,220
layer and the stack that makes things

990
00:35:11,970 --> 00:35:15,450
even more complex do we need this to

991
00:35:14,220 --> 00:35:17,129
meet that we really move in the right

992
00:35:15,450 --> 00:35:18,839
direction of adding more on top with

993
00:35:17,130 --> 00:35:22,410
like bloating the step even further I

994
00:35:18,840 --> 00:35:24,390
don't know here's the thing

995
00:35:22,410 --> 00:35:26,220
that kind of describes the situation

996
00:35:24,390 --> 00:35:27,868
quite well in my opinion and the

997
00:35:26,220 --> 00:35:30,180
describes the mindset that we have right

998
00:35:27,869 --> 00:35:32,580
now and I don't like it too much and I

999
00:35:30,180 --> 00:35:35,040
found it on Google Groups when

1000
00:35:32,580 --> 00:35:37,950
discussing a couple of new features for

1001
00:35:35,040 --> 00:35:40,020
blink and it says as this mechanism and

1002
00:35:37,950 --> 00:35:42,210
I think there was SEC metadata as this

1003
00:35:40,020 --> 00:35:43,350
mechanism is simply an additional HTTP

1004
00:35:42,210 --> 00:35:45,270
header just simply one more header

1005
00:35:43,350 --> 00:35:47,368
there's little risk created by shipping

1006
00:35:45,270 --> 00:35:49,500
it that the vendors can pick it up if

1007
00:35:47,369 --> 00:35:50,940
they like it over time or if it turns

1008
00:35:49,500 --> 00:35:52,680
out to be a bad idea we can just like

1009
00:35:50,940 --> 00:35:54,000
drop it again without fanfare this is

1010
00:35:52,680 --> 00:35:55,830
like the state of security right now we

1011
00:35:54,000 --> 00:35:57,510
don't really know what to do so we

1012
00:35:55,830 --> 00:35:59,460
implement something hoping that it's

1013
00:35:57,510 --> 00:36:01,020
gonna be fine if it's not then we just

1014
00:35:59,460 --> 00:36:03,000
delete the code again like who cares in

1015
00:36:01,020 --> 00:36:06,060
the end I don't know I don't know I

1016
00:36:03,000 --> 00:36:09,510
don't know this guy here I think he gets

1017
00:36:06,060 --> 00:36:10,920
it he is pretty much Occam's razor of

1018
00:36:09,510 --> 00:36:13,410
the web because he says there's a

1019
00:36:10,920 --> 00:36:14,850
feature I don't like it it has to go we

1020
00:36:13,410 --> 00:36:17,910
need to remove complexity that's my

1021
00:36:14,850 --> 00:36:20,640
quest and he was also the one to

1022
00:36:17,910 --> 00:36:22,200
basically publicly say CSP is dead we

1023
00:36:20,640 --> 00:36:26,098
need to do something we need to kind of

1024
00:36:22,200 --> 00:36:28,710
break it apart and he thought get up

1025
00:36:26,099 --> 00:36:30,720
my quest CSP dot next is a for

1026
00:36:28,710 --> 00:36:32,489
experiment what if we broke CSP in half

1027
00:36:30,720 --> 00:36:34,738
removed some of the esoteric options a

1028
00:36:32,489 --> 00:36:36,660
bit policy primitives that specifically

1029
00:36:34,739 --> 00:36:38,940
targeted XSS on the one hand and

1030
00:36:36,660 --> 00:36:40,140
resource environment on the other yes

1031
00:36:38,940 --> 00:36:42,089
that's the way to go

1032
00:36:40,140 --> 00:36:43,979
target the problem and only the problem

1033
00:36:42,089 --> 00:36:45,299
not the rest around it and I'm really

1034
00:36:43,979 --> 00:36:47,430
excited for this thing

1035
00:36:45,299 --> 00:36:50,400
maybe indeed we can go this path and

1036
00:36:47,430 --> 00:36:51,629
kill CSP and only go with CSP next but

1037
00:36:50,400 --> 00:36:53,130
I'm scared that it's not kind of work

1038
00:36:51,630 --> 00:36:54,749
out because we tried this before with so

1039
00:36:53,130 --> 00:36:56,160
many other technologies we wanted to

1040
00:36:54,749 --> 00:36:58,140
deprecate to standards with the third

1041
00:36:56,160 --> 00:36:59,910
button then we had three so that didn't

1042
00:36:58,140 --> 00:37:03,900
work out in many cases before but let's

1043
00:36:59,910 --> 00:37:07,410
see I'm optimistic well meanwhile I was

1044
00:37:03,900 --> 00:37:10,529
checking how the situation looked with

1045
00:37:07,410 --> 00:37:13,499
the papers and I checked round about a

1046
00:37:10,529 --> 00:37:15,720
year ago when I first gave this talk arm

1047
00:37:13,499 --> 00:37:18,839
for gems conference and it turns out

1048
00:37:15,720 --> 00:37:20,519
that until then we had nineteen thousand

1049
00:37:18,839 --> 00:37:22,170
five hundred papers on cross-site

1050
00:37:20,519 --> 00:37:24,779
scripting and Google Scholar oh my god

1051
00:37:22,170 --> 00:37:26,910
like seriously who reads all these who

1052
00:37:24,779 --> 00:37:29,519
writes all these did any of those help

1053
00:37:26,910 --> 00:37:32,129
or did it just give people enough

1054
00:37:29,519 --> 00:37:37,078
academic credit to get their PhD I don't

1055
00:37:32,130 --> 00:37:39,660
know but it's just and then I checked

1056
00:37:37,079 --> 00:37:41,999
again short before finalizing the slides

1057
00:37:39,660 --> 00:37:44,009
for this talk there is like about half

1058
00:37:41,999 --> 00:37:45,660
one point five years in between I think

1059
00:37:44,009 --> 00:37:50,130
your comfort was in April and over in

1060
00:37:45,660 --> 00:37:52,649
August and we have in those eighteen

1061
00:37:50,130 --> 00:37:54,839
months added two thousand four hundred

1062
00:37:52,650 --> 00:37:57,479
additional papers about the same topic

1063
00:37:54,839 --> 00:37:59,460
please stop writing papers about XSS we

1064
00:37:57,479 --> 00:38:01,609
have enough we don't need another one

1065
00:37:59,460 --> 00:38:06,210
that's it

1066
00:38:01,609 --> 00:38:07,828
how many other 21900 who's gonna read

1067
00:38:06,210 --> 00:38:09,239
all these no one they're just they're

1068
00:38:07,829 --> 00:38:10,219
they're just rotting that doesn't make

1069
00:38:09,239 --> 00:38:13,170
any sense

1070
00:38:10,219 --> 00:38:14,609
so pencils down please let's step back a

1071
00:38:13,170 --> 00:38:16,369
little bit and look at the problem with

1072
00:38:14,609 --> 00:38:18,210
more distance and more reflection and

1073
00:38:16,369 --> 00:38:20,249
let's look about what were maybe

1074
00:38:18,210 --> 00:38:21,900
actually missing and I think I still

1075
00:38:20,249 --> 00:38:23,729
think it's maybe the motivation to

1076
00:38:21,900 --> 00:38:25,440
actually fix this s we kind of talked

1077
00:38:23,729 --> 00:38:27,239
about before with the voting of the

1078
00:38:25,440 --> 00:38:29,150
election who wants to stuff for the fix

1079
00:38:27,239 --> 00:38:32,099
things to who doesn't want to fix things

1080
00:38:29,150 --> 00:38:33,779
well maybe we can motivate people that

1081
00:38:32,099 --> 00:38:35,700
punishing them I think punishment is

1082
00:38:33,779 --> 00:38:39,030
great motivation we use it for fighting

1083
00:38:35,700 --> 00:38:41,819
crime for keeping people from speeding

1084
00:38:39,030 --> 00:38:44,370
for sometimes raising our kids why don't

1085
00:38:41,820 --> 00:38:46,500
we punish developers for the security

1086
00:38:44,370 --> 00:38:48,930
bugs that they create maybe just like

1087
00:38:46,500 --> 00:38:50,040
you know take some kitty litter and in

1088
00:38:48,930 --> 00:38:53,700
it goes with the head or something like

1089
00:38:50,040 --> 00:38:55,259
this like punish them maybe that doesn't

1090
00:38:53,700 --> 00:38:56,790
work maybe that's an ancient concept now

1091
00:38:55,260 --> 00:38:58,530
maybe we can think about other concept

1092
00:38:56,790 --> 00:38:59,759
maybe gratification put some candy in

1093
00:38:58,530 --> 00:39:02,190
the case that hurt something in this

1094
00:38:59,760 --> 00:39:04,380
bonus systems giving our trophies badges

1095
00:39:02,190 --> 00:39:06,390
awards inviting them to parties or

1096
00:39:04,380 --> 00:39:07,050
organizing parties hurt them candy for

1097
00:39:06,390 --> 00:39:09,060
good grades

1098
00:39:07,050 --> 00:39:13,230
maybe reward them maybe that's a good

1099
00:39:09,060 --> 00:39:14,700
thing maybe we should also kind of think

1100
00:39:13,230 --> 00:39:16,350
about responsibilities for issues in

1101
00:39:14,700 --> 00:39:17,970
robot let's start tracking down who

1102
00:39:16,350 --> 00:39:19,560
introduced the security bug and who

1103
00:39:17,970 --> 00:39:20,850
reviewed the code and then greenlit it

1104
00:39:19,560 --> 00:39:22,529
and why and let's talk to these folks

1105
00:39:20,850 --> 00:39:24,990
and explain to them what they did wrong

1106
00:39:22,530 --> 00:39:26,670
and make sure that the same issues the

1107
00:39:24,990 --> 00:39:28,709
same birds that will come back with the

1108
00:39:26,670 --> 00:39:31,830
next commit because that happens ever so

1109
00:39:28,710 --> 00:39:33,330
often how about a fix of the month for

1110
00:39:31,830 --> 00:39:34,890
developers to praise them for like the

1111
00:39:33,330 --> 00:39:36,690
coolest fix that they did or like the

1112
00:39:34,890 --> 00:39:37,890
most holistic security measurement that

1113
00:39:36,690 --> 00:39:39,930
they installed without losing too much

1114
00:39:37,890 --> 00:39:42,629
performance let's praise those who fix

1115
00:39:39,930 --> 00:39:44,520
the issue and spread how slowly build up

1116
00:39:42,630 --> 00:39:46,320
security culture and companies and

1117
00:39:44,520 --> 00:39:48,480
development communities and replace

1118
00:39:46,320 --> 00:39:49,950
security nuisance with security being

1119
00:39:48,480 --> 00:39:52,590
fun and being useful and fully

1120
00:39:49,950 --> 00:39:54,930
understood sustainability instead of

1121
00:39:52,590 --> 00:39:56,640
additional complexity process cryptic

1122
00:39:54,930 --> 00:39:58,500
fixed generation stop the alert instead

1123
00:39:56,640 --> 00:40:00,600
of pop the alert unit test suits plugins

1124
00:39:58,500 --> 00:40:02,820
extra desired for XSS to find it and

1125
00:40:00,600 --> 00:40:04,860
close it or mitigate it darling sucess

1126
00:40:02,820 --> 00:40:06,090
regression tests webdriver browsers

1127
00:40:04,860 --> 00:40:07,800
think we have all the tools to actually

1128
00:40:06,090 --> 00:40:09,480
do this but we don't do this and if we

1129
00:40:07,800 --> 00:40:14,430
do this then in small-scale but not in

1130
00:40:09,480 --> 00:40:15,630
large-scale yeah let's show them let's

1131
00:40:14,430 --> 00:40:19,620
show all of them how they actually can

1132
00:40:15,630 --> 00:40:21,510
do this by punishing by gratification by

1133
00:40:19,620 --> 00:40:23,160
figuring out responsibilities all these

1134
00:40:21,510 --> 00:40:25,350
things but wait a second because we're

1135
00:40:23,160 --> 00:40:27,960
again talking about others what we would

1136
00:40:25,350 --> 00:40:29,339
do to others and that's not exactly

1137
00:40:27,960 --> 00:40:30,810
great because we're making the same

1138
00:40:29,340 --> 00:40:32,670
mistake that we have been making all the

1139
00:40:30,810 --> 00:40:35,250
time maybe we should be more reflective

1140
00:40:32,670 --> 00:40:37,020
as I mentioned earlier before and start

1141
00:40:35,250 --> 00:40:38,910
with ourselves instead I think what we

1142
00:40:37,020 --> 00:40:40,110
could do better because before we start

1143
00:40:38,910 --> 00:40:43,680
discussing what all of us could do

1144
00:40:40,110 --> 00:40:45,090
better and one of the things and that's

1145
00:40:43,680 --> 00:40:47,580
a statement that people don't always

1146
00:40:45,090 --> 00:40:48,180
like but I think it's important let's

1147
00:40:47,580 --> 00:40:50,578
stop the

1148
00:40:48,180 --> 00:40:53,009
fetish let's stop be so focused about

1149
00:40:50,579 --> 00:40:55,500
box we keep fetishizing the back but not

1150
00:40:53,010 --> 00:40:57,240
the fix we keep praising the finders in

1151
00:40:55,500 --> 00:40:59,130
the back hunters which is okay but we

1152
00:40:57,240 --> 00:41:01,890
also need to praise those who develop

1153
00:40:59,130 --> 00:41:02,730
the fixes or who develops a cool coat in

1154
00:41:01,890 --> 00:41:05,549
the first place

1155
00:41:02,730 --> 00:41:06,089
we almost ignore all of those who do the

1156
00:41:05,550 --> 00:41:08,010
dirty work

1157
00:41:06,089 --> 00:41:09,808
after the bug has been found we don't

1158
00:41:08,010 --> 00:41:11,550
give praise to those who invested their

1159
00:41:09,809 --> 00:41:13,440
nights and days into fixing this issue

1160
00:41:11,550 --> 00:41:15,270
as quickly as possible and still deliver

1161
00:41:13,440 --> 00:41:17,790
secure and stable software that is still

1162
00:41:15,270 --> 00:41:20,339
maybe even fast our entire mindset in

1163
00:41:17,790 --> 00:41:22,980
this particular community it's almost

1164
00:41:20,339 --> 00:41:24,630
exclusively around box and not around

1165
00:41:22,980 --> 00:41:28,079
the fixes the state that we actually

1166
00:41:24,630 --> 00:41:29,400
want to produce maybe we could think

1167
00:41:28,079 --> 00:41:31,230
about fixed bounties a couple of

1168
00:41:29,400 --> 00:41:33,390
companies actually already do this right

1169
00:41:31,230 --> 00:41:36,809
now our Exile ecosystem is back centric

1170
00:41:33,390 --> 00:41:39,270
if you ask Google for example for back

1171
00:41:36,809 --> 00:41:40,770
bounty and fixed bounty and similar

1172
00:41:39,270 --> 00:41:42,540
terms because that's actually hard to

1173
00:41:40,770 --> 00:41:45,530
find something like this then you arrive

1174
00:41:42,540 --> 00:41:48,619
at numbers where you would see there's

1175
00:41:45,530 --> 00:41:50,790
515 hits for bug bounty program have

1176
00:41:48,619 --> 00:41:52,980
550,000 hits for back bounty programs

1177
00:41:50,790 --> 00:41:54,299
but round about only 2,000 hits on the

1178
00:41:52,980 --> 00:41:56,640
entire internet for fixed bounty

1179
00:41:54,299 --> 00:41:57,450
programs or fix or patch bounty programs

1180
00:41:56,640 --> 00:41:59,520
or something that is actually

1181
00:41:57,450 --> 00:42:02,069
constructive and productive we keep

1182
00:41:59,520 --> 00:42:03,839
glorifying the finder but not the fix or

1183
00:42:02,069 --> 00:42:06,808
all the person who created secure code

1184
00:42:03,839 --> 00:42:09,540
in the first place we see interviews

1185
00:42:06,809 --> 00:42:10,859
with legendary buck hunters we see media

1186
00:42:09,540 --> 00:42:13,020
campaigns her box to raise awareness

1187
00:42:10,859 --> 00:42:15,180
like the stuff with bad luck oh my god

1188
00:42:13,020 --> 00:42:17,309
that was so bad we see self-proclaimed

1189
00:42:15,180 --> 00:42:19,440
super hexes and gurus and experts and

1190
00:42:17,309 --> 00:42:21,540
charlatans we see top lists and halls of

1191
00:42:19,440 --> 00:42:23,490
fame awards ceremonies buck hunter

1192
00:42:21,540 --> 00:42:24,930
parties and all these scents audiences

1193
00:42:23,490 --> 00:42:26,848
with the Pope but is it really necessary

1194
00:42:24,930 --> 00:42:28,740
maybe it is but what about the other

1195
00:42:26,849 --> 00:42:30,990
people don't they deserve praise as well

1196
00:42:28,740 --> 00:42:35,308
I mean can we like just like stop having

1197
00:42:30,990 --> 00:42:36,899
this whole thing be so one-sided I don't

1198
00:42:35,309 --> 00:42:39,599
think we have a working solution yet and

1199
00:42:36,900 --> 00:42:41,250
I don't think I just from proposed any

1200
00:42:39,599 --> 00:42:43,020
working solution I just kind of pointed

1201
00:42:41,250 --> 00:42:44,099
the problem through in some raw ideas

1202
00:42:43,020 --> 00:42:47,009
that we might be able to discuss later

1203
00:42:44,099 --> 00:42:48,869
on and I'm certainly part of the problem

1204
00:42:47,010 --> 00:42:50,760
as well as the penetration tester but

1205
00:42:48,869 --> 00:42:52,260
maybe maybe if you all kind of stick

1206
00:42:50,760 --> 00:42:54,420
your heads together and start realizing

1207
00:42:52,260 --> 00:42:55,920
what the problem is and that were part

1208
00:42:54,420 --> 00:42:57,299
of the problem at that we can also all

1209
00:42:55,920 --> 00:42:59,400
be part of the solution maybe we can

1210
00:42:57,299 --> 00:43:00,099
actually get there together and find a

1211
00:42:59,400 --> 00:43:01,630
way

1212
00:43:00,099 --> 00:43:03,249
actually making introspect less of a

1213
00:43:01,630 --> 00:43:04,959
destructive of more for constructive

1214
00:43:03,249 --> 00:43:06,788
field and have more of a community

1215
00:43:04,959 --> 00:43:07,930
feeling rather than how you had a bad

1216
00:43:06,789 --> 00:43:09,579
look at this used to be developer

1217
00:43:07,930 --> 00:43:10,808
because that doesn't work we noticed for

1218
00:43:09,579 --> 00:43:14,829
the past 20 years that it doesn't work

1219
00:43:10,809 --> 00:43:16,329
yet we keep doing it so maybe we should

1220
00:43:14,829 --> 00:43:18,369
just like start by being dead honest

1221
00:43:16,329 --> 00:43:20,079
with ourselves and maybe we want to say

1222
00:43:18,369 --> 00:43:21,849
I don't want to fix the system as it is

1223
00:43:20,079 --> 00:43:23,229
I like it as it is I want to keep making

1224
00:43:21,849 --> 00:43:24,489
money tons of it with popping alerts

1225
00:43:23,229 --> 00:43:26,769
well fair enough

1226
00:43:24,489 --> 00:43:29,019
no judgment here that's fine you can do

1227
00:43:26,769 --> 00:43:30,578
that there's enough legacy web

1228
00:43:29,019 --> 00:43:32,680
applications left where this is gonna be

1229
00:43:30,579 --> 00:43:34,690
possible the Internet is huge it will

1230
00:43:32,680 --> 00:43:36,399
never run out of box it's not gonna

1231
00:43:34,690 --> 00:43:38,349
happen anytime soon no one here will

1232
00:43:36,400 --> 00:43:39,940
ever lose work if you're in offensive

1233
00:43:38,349 --> 00:43:42,609
security or defensive security this is

1234
00:43:39,940 --> 00:43:44,170
like a certain job guarantee because

1235
00:43:42,609 --> 00:43:46,779
there's just like so many bugs and so

1236
00:43:44,170 --> 00:43:48,160
many issues out there but then if you're

1237
00:43:46,779 --> 00:43:50,109
actually on that side and believe that

1238
00:43:48,160 --> 00:43:51,430
things should stay as they are then

1239
00:43:50,109 --> 00:43:53,229
please don't throat on the others who

1240
00:43:51,430 --> 00:43:54,999
don't and maybe rethink your business

1241
00:43:53,229 --> 00:43:56,709
model maybe at some point we are gonna

1242
00:43:54,999 --> 00:43:58,089
run out of box I don't think so but at

1243
00:43:56,709 --> 00:44:00,328
least think about what you're actually

1244
00:43:58,089 --> 00:44:02,589
doing what the value of their office or

1245
00:44:00,329 --> 00:44:04,539
you see yourself on the side of those

1246
00:44:02,589 --> 00:44:06,099
who say I do want to fix things I do

1247
00:44:04,539 --> 00:44:07,359
want to fix the internet I want to fix

1248
00:44:06,099 --> 00:44:10,420
cross-site scripting I want to fix

1249
00:44:07,359 --> 00:44:11,619
things on a large scale and that's

1250
00:44:10,420 --> 00:44:13,269
interesting because then I would ask

1251
00:44:11,619 --> 00:44:14,589
let's discuss how all its kind of get

1252
00:44:13,269 --> 00:44:16,299
together stick your heads together let's

1253
00:44:14,589 --> 00:44:18,640
do something constructive let's together

1254
00:44:16,299 --> 00:44:20,529
use Occam's razor and slice of all the

1255
00:44:18,640 --> 00:44:22,690
complexity and all the crafts and other

1256
00:44:20,529 --> 00:44:26,380
useless things identify the actual

1257
00:44:22,690 --> 00:44:28,869
obstacles and create a new post XSS

1258
00:44:26,380 --> 00:44:30,549
post SQL injection post RCT and so on

1259
00:44:28,869 --> 00:44:32,380
security business model that still works

1260
00:44:30,549 --> 00:44:34,119
and feeds our families because I think

1261
00:44:32,380 --> 00:44:35,410
that's possible we just have to do it we

1262
00:44:34,119 --> 00:44:37,209
just have to think about how to do it

1263
00:44:35,410 --> 00:44:40,328
right now it's very easy maybe then it's

1264
00:44:37,209 --> 00:44:42,249
a bit harder but it's possible so I

1265
00:44:40,329 --> 00:44:44,289
think Crusher scripting and a couple of

1266
00:44:42,249 --> 00:44:45,819
other things are indeed dead we just

1267
00:44:44,289 --> 00:44:47,619
need to accept it we just need to kind

1268
00:44:45,819 --> 00:44:49,269
of talk to ourselves be honest with

1269
00:44:47,619 --> 00:44:51,190
ourselves and realize that a certain

1270
00:44:49,269 --> 00:44:53,468
amount of box that we working with right

1271
00:44:51,190 --> 00:44:55,329
now and see popping up left and right

1272
00:44:53,469 --> 00:44:58,209
they are actually dead we just need to

1273
00:44:55,329 --> 00:44:59,979
kind of get there understand what we

1274
00:44:58,209 --> 00:45:02,140
need to do use the tools the right way

1275
00:44:59,979 --> 00:45:04,149
and most importantly develop the right

1276
00:45:02,140 --> 00:45:05,859
mindset to actually fix the whole thing

1277
00:45:04,150 --> 00:45:07,530
the big thing the big picture and not

1278
00:45:05,859 --> 00:45:09,750
just the bushfires left and right

1279
00:45:07,530 --> 00:45:11,220
and now I would say that's a good moment

1280
00:45:09,750 --> 00:45:13,230
to kind of stop this presentation

1281
00:45:11,220 --> 00:45:15,299
because I'm out of material and let's

1282
00:45:13,230 --> 00:45:17,880
just do it let's just get together and

1283
00:45:15,300 --> 00:45:21,360
do it because we can and we just have to

1284
00:45:17,880 --> 00:45:23,730
want to and discuss and plan and work

1285
00:45:21,360 --> 00:45:24,900
and build and then something comes out

1286
00:45:23,730 --> 00:45:27,750
that's good and everybody wins in the

1287
00:45:24,900 --> 00:45:32,880
end thank you very much

1288
00:45:27,750 --> 00:45:32,880
[Applause]

