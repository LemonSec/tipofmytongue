1
00:00:00,198 --> 00:00:00,660


2
00:00:00,660 --> 00:00:05,264
♪♪

3
00:00:05,264 --> 00:00:09,132
HALDERMAN: So, in my work
at the University of Michigan,

4
00:00:09,132 --> 00:00:10,858
I like to study problems

5
00:00:10,858 --> 00:00:14,594
that interface between security
and the real world.

6
00:00:14,594 --> 00:00:17,692
And there isn't really
a problem to me

7
00:00:17,693 --> 00:00:21,099
that does that in a stronger
way than the idea

8
00:00:21,099 --> 00:00:25,066
of using computers
for the democratic process.

9
00:00:25,066 --> 00:00:29,165
So studying security in voting
is fascinating

10
00:00:29,165 --> 00:00:31,791
both because of
its real-world importance

11
00:00:31,792 --> 00:00:33,858
and because the shape
of the problem

12
00:00:33,858 --> 00:00:36,791
is so unique and interesting.

13
00:00:36,792 --> 00:00:38,429
Unlike other problems

14
00:00:38,429 --> 00:00:42,858
that we know how to solve well
with security techniques today,

15
00:00:42,858 --> 00:00:45,660
oh, easy things
like online commerce

16
00:00:45,660 --> 00:00:48,759
and banking security, right?,

17
00:00:48,759 --> 00:00:50,858
where nothing
could possibly go wrong,

18
00:00:50,858 --> 00:00:53,297
voting has this really
interesting shape

19
00:00:53,297 --> 00:00:56,000
because we want properties
simultaneously

20
00:00:56,000 --> 00:00:59,033
of high integrity --
in other words,

21
00:00:59,033 --> 00:01:04,132
that the election outcome
is the "correct one" --

22
00:01:04,132 --> 00:01:08,627
and also ballot secrecy because
the secrecy of your ballot,

23
00:01:08,627 --> 00:01:11,396
that privacy is
what protects not only you,

24
00:01:11,396 --> 00:01:14,330
but all of us from you
being coerced

25
00:01:14,330 --> 00:01:17,429
into voting a certain way
or you selling your vote.

26
00:01:17,429 --> 00:01:19,792
But observe that these
two properties are intention,

27
00:01:19,792 --> 00:01:23,033
things we might want to do
to protect integrity

28
00:01:23,033 --> 00:01:27,165
in an electronic voting system,
like maintaining detailed logs,

29
00:01:27,165 --> 00:01:29,759
also make it really hard
to protect ballot secrecy,

30
00:01:29,759 --> 00:01:33,165
especially from the people
who are operating the system.

31
00:01:33,165 --> 00:01:36,330
And protecting that
from the operators of the system

32
00:01:36,330 --> 00:01:38,495
is really important in voting

33
00:01:38,495 --> 00:01:40,462
because we also
have this situation

34
00:01:40,462 --> 00:01:43,264
where we really don't have
any trusted parties.

35
00:01:43,264 --> 00:01:46,429
In an election for
a high-stakes, public office,

36
00:01:46,429 --> 00:01:50,066
try to find me
a person or an organization

37
00:01:50,066 --> 00:01:53,330
that doesn't have a strong
interest in the outcome.

38
00:01:53,330 --> 00:01:56,923
So this is the shape
of the problem, in theory.

39
00:01:56,924 --> 00:01:59,462
But let's see
how this plays out in practice

40
00:01:59,462 --> 00:02:02,231
because, even though it's
an extremely difficult problem,

41
00:02:02,231 --> 00:02:04,363
because of this tension,

42
00:02:04,363 --> 00:02:07,660
the actual practice
has moved along and, in fact,

43
00:02:07,660 --> 00:02:11,264
may places have tried
or used electronic voting

44
00:02:11,264 --> 00:02:15,759
and we've seen,
over the past 15 years or so,

45
00:02:15,759 --> 00:02:18,297
many instances
where security researchers

46
00:02:18,297 --> 00:02:22,000
have gotten their hands on
voting machines used in practice

47
00:02:22,000 --> 00:02:24,396
and found some problems.

48
00:02:24,396 --> 00:02:26,857
And those problems stem
from the fact that

49
00:02:26,858 --> 00:02:28,924
an electronic voting machine
you might see

50
00:02:28,924 --> 00:02:32,594
in a polling place,
something like this,

51
00:02:32,594 --> 00:02:35,297
under the surface is really
a lot more like this.

52
00:02:35,297 --> 00:02:40,066
E-voting security,
from a systems perspective,

53
00:02:40,066 --> 00:02:44,627
imports almost all of the
problems of system security

54
00:02:44,627 --> 00:02:46,165
more broadly.

55
00:02:46,165 --> 00:02:48,660
So, a few years ago,
I took a look at this system,

56
00:02:48,660 --> 00:02:51,924
the Diebold AccuVote-TS,
which was, at the time,

57
00:02:51,924 --> 00:02:54,627
the most widely used
electronic voting system

58
00:02:54,627 --> 00:02:57,858
in the United States,
and colleagues and I

59
00:02:57,858 --> 00:03:00,330
at Princeton
took this machine apart.

60
00:03:00,330 --> 00:03:03,132
We got one
from an anonymous source

61
00:03:03,132 --> 00:03:05,858
and reverse-engineered it
in the laboratory

62
00:03:05,858 --> 00:03:09,033
and what we found was
that we could very easily,

63
00:03:09,033 --> 00:03:11,494
by exploiting a backdoor

64
00:03:11,495 --> 00:03:13,495
that was there
for updating the software

65
00:03:13,495 --> 00:03:16,264
in the field,
install vote-stealing malware

66
00:03:16,264 --> 00:03:19,198
and engineer
whatever outcomes we wanted.

67
00:03:19,198 --> 00:03:20,726
But not only that,

68
00:03:20,726 --> 00:03:24,132
we could also exploit
the power of computing

69
00:03:24,132 --> 00:03:25,792
to make a new kind of attack,

70
00:03:25,792 --> 00:03:29,792
something that wasn't possible
in traditional elections,

71
00:03:29,792 --> 00:03:32,231
which is that we could make
a vote-stealing virus

72
00:03:32,231 --> 00:03:34,263
that would spread
from machine to machine

73
00:03:34,264 --> 00:03:36,297
in the course
of a normal election cycle

74
00:03:36,297 --> 00:03:39,231
and let us compromise
the outcome in an entire state,

75
00:03:39,231 --> 00:03:42,462
just from one infected machine.

76
00:03:42,462 --> 00:03:44,759
That's not the only place,
by any extent,

77
00:03:44,759 --> 00:03:46,329
where these things
have been studied.

78
00:03:46,330 --> 00:03:49,198
In India, the world's
largest democracy,

79
00:03:49,198 --> 00:03:52,924
they're also the world's largest
user of electronic voting.

80
00:03:52,924 --> 00:03:56,495
And, again, a few years ago,
some colleagues and I

81
00:03:56,495 --> 00:04:02,231
went to India and
a government whistleblower,

82
00:04:02,231 --> 00:04:04,099
who remains anonymous
to this day,

83
00:04:04,099 --> 00:04:07,891
provided us with one of the
Indian voting machines to study.

84
00:04:07,891 --> 00:04:09,429
Even though
the government claimed

85
00:04:09,429 --> 00:04:12,462
that these were absolutely
secure and tamperproof,

86
00:04:12,462 --> 00:04:15,759
we found some ways to engineer
very low-cost attacks

87
00:04:15,759 --> 00:04:18,659
on the hardware that would
allow us to make the machines

88
00:04:18,660 --> 00:04:22,165
behave dishonestly,
by replacing parts in the field

89
00:04:22,165 --> 00:04:26,165
that could be done

90
00:04:26,165 --> 00:04:32,363
at very low cost by attackers
with minimal skills.

91
00:04:32,363 --> 00:04:34,825
Today, new attacks

92
00:04:34,825 --> 00:04:37,066
against polling-place
electronic voting machines

93
00:04:37,066 --> 00:04:38,330
are practically assumed

94
00:04:38,330 --> 00:04:41,000
by anyone with a computer
security background,

95
00:04:41,000 --> 00:04:43,264
so it's really not interesting,
as research,

96
00:04:43,264 --> 00:04:46,429
to show that yet another one
of these is broken.

97
00:04:46,429 --> 00:04:50,395
So, a couple of years ago,
when some colleagues

98
00:04:50,396 --> 00:04:54,132
obtained this machine,
the Sequoia AVC Edge,

99
00:04:54,132 --> 00:04:56,627
which is still used
in some parts of the country,

100
00:04:56,627 --> 00:05:00,066
Arie Feldman,
another professor, and I

101
00:05:00,066 --> 00:05:03,429
spent a long weekend
reverse-engineering it for fun

102
00:05:03,429 --> 00:05:05,296
and we turned it
into a Pac-Man machine.

103
00:05:05,297 --> 00:05:06,594
[ Laughter ]

104
00:05:06,594 --> 00:05:09,858
So the point is that,
today, it's well understood

105
00:05:09,858 --> 00:05:12,858
that this simple model
of electronic voting

106
00:05:12,858 --> 00:05:15,297
in the polling place,
where you have a machine

107
00:05:15,297 --> 00:05:17,528
that's just collecting votes
in memory,

108
00:05:17,528 --> 00:05:18,858
that's the only record,

109
00:05:18,858 --> 00:05:20,660
it's under the control
of computer hardware

110
00:05:20,660 --> 00:05:22,594
and software
that can be manipulated,

111
00:05:22,594 --> 00:05:25,627
this model is is no longer

112
00:05:25,627 --> 00:05:29,363
a safe and respected way
of counting votes.

113
00:05:29,363 --> 00:05:32,033
And, today, I'm happy to say
that, because of the work

114
00:05:32,033 --> 00:05:33,957
of many researchers
in this field,

115
00:05:33,957 --> 00:05:38,495
more than 70% of American voters
get to see some physical record

116
00:05:38,495 --> 00:05:42,660
of their vote that's safe
from computer-based tampering.

117
00:05:42,660 --> 00:05:44,000
But what's next?

118
00:05:44,000 --> 00:05:46,528
So Internet voting
is the big question today

119
00:05:46,528 --> 00:05:48,693
because, you know,
I'm a technologist.

120
00:05:48,693 --> 00:05:53,627
Most or all of you are, too, and
we live on the Internet, right?

121
00:05:53,627 --> 00:05:56,000
It would be so great,
if one of the things

122
00:05:56,000 --> 00:05:59,165
that we could do with the
Internet was cast our votes.

123
00:05:59,165 --> 00:06:01,660
But, when we think
about Internet voting

124
00:06:01,660 --> 00:06:04,528
as a security problem, right?,
it's even harder

125
00:06:04,528 --> 00:06:09,429
than voting in a polling place
on a possibly secured machine.

126
00:06:09,429 --> 00:06:12,527
So you have to think
about server side threats

127
00:06:12,528 --> 00:06:14,363
to Internet voting
because your server

128
00:06:14,363 --> 00:06:17,066
must be online,
in order to let people vote,

129
00:06:17,066 --> 00:06:19,395
so, if it's subject
to denial of service

130
00:06:19,396 --> 00:06:21,099
during the limited
election period,

131
00:06:21,099 --> 00:06:25,429
to people hacking in
or insiders manipulating it,

132
00:06:25,429 --> 00:06:29,131
or even thinking about
the stakes of a major election,

133
00:06:29,132 --> 00:06:31,726
the incentive for
state-sponsored attackers

134
00:06:31,726 --> 00:06:34,066
to compromise the election,
change the results

135
00:06:34,066 --> 00:06:39,726
a rival country's election for
national leadership are so high

136
00:06:39,726 --> 00:06:42,627
that we really need to think
about Internet voting systems

137
00:06:42,627 --> 00:06:44,495
as a kind of
critical infrastructure

138
00:06:44,495 --> 00:06:48,462
that has to be protected
from state-level attackers.

139
00:06:48,462 --> 00:06:50,659
And then, on the client side
of Internet voting,

140
00:06:50,660 --> 00:06:52,759
things look pretty grim
there, too,

141
00:06:52,759 --> 00:06:55,330
because you're thinking
about voters casting votes

142
00:06:55,330 --> 00:06:58,495
from their untrusted devices
and they're going to fall

143
00:06:58,495 --> 00:07:01,264
for all the same attacks
that users do today:

144
00:07:01,264 --> 00:07:04,495
to phishing, to decoy websites
that claim to be

145
00:07:04,495 --> 00:07:07,132
the real election,
to malware on their clients,

146
00:07:07,132 --> 00:07:09,726
and we know that an enormous
fraction of clients

147
00:07:09,726 --> 00:07:11,495
already have malware.

148
00:07:11,495 --> 00:07:13,198
Okay.
So those are some of the issues.

149
00:07:13,198 --> 00:07:15,659
But how does this play
out in practice?

150
00:07:15,660 --> 00:07:17,693
And I'm going to use
the rest of my time

151
00:07:17,693 --> 00:07:21,132
to give you a couple of stories
about Internet voting systems

152
00:07:21,132 --> 00:07:24,660
that have been attempted
around the world, so far.

153
00:07:24,660 --> 00:07:27,660
And we can see
what actually went wrong.

154
00:07:27,660 --> 00:07:30,594
So the first story is
in Washington DC,

155
00:07:30,594 --> 00:07:34,957
where, in 2010, the
District of Columbia government

156
00:07:34,957 --> 00:07:36,594
designed
an Internet voting system

157
00:07:36,594 --> 00:07:39,726
to let absentee voters abroad
and military voters

158
00:07:39,726 --> 00:07:42,660
cast their votes remotely,
using a website.

159
00:07:42,660 --> 00:07:44,132
And they did a lot
of things right:

160
00:07:44,132 --> 00:07:47,396
they hired good developers;
they open-sourced the system;

161
00:07:47,396 --> 00:07:49,165
they solicited public input.

162
00:07:49,165 --> 00:07:52,759
They even decided to hold
a public challenge

163
00:07:52,759 --> 00:07:54,825
a couple of weeks
before the general election,

164
00:07:54,825 --> 00:07:57,759
where anyone from the public
who wanted to try to hack in

165
00:07:57,759 --> 00:08:02,099
and show that the system
was vulnerable was invited to.

166
00:08:02,099 --> 00:08:04,462
It's not every day that you
get invited to hack

167
00:08:04,462 --> 00:08:06,627
into government computers
without going to jail,

168
00:08:06,627 --> 00:08:08,528
and so my students and I
couldn't resist

169
00:08:08,528 --> 00:08:10,198
taking them up on that.

170
00:08:10,198 --> 00:08:12,462
So let me show you
what the system looked like.

171
00:08:12,462 --> 00:08:14,264
Pretty nice web design here.

172
00:08:14,264 --> 00:08:17,561
You log in through this website,
enter a PIN

173
00:08:17,561 --> 00:08:21,363
that you got in the mail
a few weeks before the election.

174
00:08:21,363 --> 00:08:24,594
You download your ballot
as a PDF file,

175
00:08:24,594 --> 00:08:27,000
fill it out
in Acrobat or something

176
00:08:27,000 --> 00:08:29,264
and then upload it back
to the system.

177
00:08:29,264 --> 00:08:31,330
Now, this convoluted process
is because

178
00:08:31,330 --> 00:08:33,890
what they ultimately want to do,
under the regulations,

179
00:08:33,890 --> 00:08:36,000
is have the same
ballot design for everyone

180
00:08:36,000 --> 00:08:37,429
and just print these out later,

181
00:08:37,429 --> 00:08:40,528
in order to count them
with postal votes.

182
00:08:40,528 --> 00:08:43,066
Then, you send in your ballot
and it thanks you for voting

183
00:08:43,066 --> 00:08:45,165
and tells you to let
your friends know you voted

184
00:08:45,165 --> 00:08:47,231
on Facebook and Twitter.

185
00:08:47,231 --> 00:08:49,495
[Laughter]
Nice. All right.

186
00:08:49,495 --> 00:08:51,429
So my students and I,
who are, you know,

187
00:08:51,429 --> 00:08:54,198
just PhD students
in computer science,

188
00:08:54,198 --> 00:08:57,924
not professional hackers
or champion CTF folks,

189
00:08:57,924 --> 00:09:00,329
decided to take a look at this.

190
00:09:00,330 --> 00:09:04,396
So what we did was we started
by just going

191
00:09:04,396 --> 00:09:07,065
through the source code
that was publicly available.

192
00:09:07,066 --> 00:09:09,726
And it was written
in Ruby on Rails,

193
00:09:09,726 --> 00:09:12,297
a reasonable choice
for something like this.

194
00:09:12,297 --> 00:09:15,363
And we went through this
and none of us had ever done

195
00:09:15,363 --> 00:09:18,033
any programming in Ruby before,
but we still sorta

196
00:09:18,033 --> 00:09:21,264
followed along, along the attack
surface and, after a few hours

197
00:09:21,264 --> 00:09:24,792
of reviewing the source code,
we noticed this line here.

198
00:09:24,792 --> 00:09:26,693
And what's happening here
is the server

199
00:09:26,693 --> 00:09:29,528
is processing
each uploaded ballot

200
00:09:29,528 --> 00:09:32,825
by encrypting it,
using the GPG command.

201
00:09:32,825 --> 00:09:35,198
And it encrypts it
using a public key,

202
00:09:35,198 --> 00:09:38,792
so that the ballots
can't be read

203
00:09:38,792 --> 00:09:41,165
by someone who breaks in
to the server.

204
00:09:41,165 --> 00:09:43,693
They'll later be transferred
to another machine

205
00:09:43,693 --> 00:09:46,924
and decrypted with a private
key, which is kept offline.

206
00:09:46,924 --> 00:09:50,858
So the problem
we noticed here was there.

207
00:09:50,858 --> 00:09:52,693
The developer here
has used double quotes

208
00:09:52,693 --> 00:09:54,033
instead of single quotes.

209
00:09:54,033 --> 00:09:56,561
That let us change
all the votes.

210
00:09:56,561 --> 00:09:59,132
[chuckle] And here's why.
All right.

211
00:09:59,132 --> 00:10:02,858
So the framework they're using
processes encrypted ballots

212
00:10:02,858 --> 00:10:06,329
after they're stored
under a temporary file name.

213
00:10:06,330 --> 00:10:09,132
It sanitizes the base name
of the file

214
00:10:09,132 --> 00:10:11,495
by replacing it
with a random value,

215
00:10:11,495 --> 00:10:13,132
but this particular version

216
00:10:13,132 --> 00:10:15,791
didn't sanitize
the file extension.

217
00:10:15,792 --> 00:10:18,759
The extension
that the user uploaded

218
00:10:18,759 --> 00:10:21,561
would be used as part
of that file name

219
00:10:21,561 --> 00:10:24,231
and, in fact,
if you put shell meta commands

220
00:10:24,231 --> 00:10:27,858
in the extension
of the ballot file,

221
00:10:27,858 --> 00:10:30,494
they'd become part
of the command

222
00:10:30,495 --> 00:10:33,297
that would be invoked
on the server system.

223
00:10:33,297 --> 00:10:35,363
So we had
a shell injection attack.

224
00:10:35,363 --> 00:10:40,066
And the quotes are just because
Bash with double quotes

225
00:10:40,066 --> 00:10:43,759
will allow shell meta characters
to be interpreted.

226
00:10:43,759 --> 00:10:46,429
If it was only single quotes,
they would not.

227
00:10:46,429 --> 00:10:49,033
So this is
what we actually tested,

228
00:10:49,033 --> 00:10:51,759
this "sleep 5" command
just tells

229
00:10:51,759 --> 00:10:54,495
the shell on the server
to wait for 5 seconds

230
00:10:54,495 --> 00:10:56,561
and, when we uploaded
a ballot with this name,

231
00:10:56,561 --> 00:10:59,627
the server took 5 extra
seconds to respond,

232
00:10:59,627 --> 00:11:01,693
we knew we had a way in.

233
00:11:01,693 --> 00:11:03,231
But let's not get too far ahead.

234
00:11:03,231 --> 00:11:05,561
They also gave us

235
00:11:05,561 --> 00:11:08,165
a block of IP addresses
that we could test.

236
00:11:08,165 --> 00:11:10,396
And what we found,
when we went through this,

237
00:11:10,396 --> 00:11:12,363
was a lot of other
interesting devices

238
00:11:12,363 --> 00:11:15,627
that would also potentially
give us a way into the system:

239
00:11:15,627 --> 00:11:18,296
terminal servers
with default passwords

240
00:11:18,297 --> 00:11:20,363
plugged in by serial cables
to all of their

241
00:11:20,363 --> 00:11:22,858
router infrastructure,
for instance,

242
00:11:22,858 --> 00:11:25,660
that was going to be used
in the actual election.

243
00:11:25,660 --> 00:11:28,231
We also found
these very nice IP cameras

244
00:11:28,231 --> 00:11:31,099
just sitting on the network,
with no passwords, or anything,

245
00:11:31,099 --> 00:11:33,066
that had views
into the data center,

246
00:11:33,066 --> 00:11:35,297
so we could see
the election server hardware,

247
00:11:35,297 --> 00:11:38,693
if they were changing it
or upgrading it.

248
00:11:38,693 --> 00:11:41,165
We could see
the system administrators,

249
00:11:41,165 --> 00:11:42,593
what times they were at work,

250
00:11:42,594 --> 00:11:44,066
when they were
in the data center.

251
00:11:44,066 --> 00:11:46,759
It also let us,
like a real attacker,

252
00:11:46,759 --> 00:11:49,297
get some sense
of whether our actions,

253
00:11:49,297 --> 00:11:50,825
in trying to tamper
with the system,

254
00:11:50,825 --> 00:11:54,297
had been discovered because,
until the moment

255
00:11:54,297 --> 00:11:57,825
when they found out,
everything seemed normal.

256
00:11:57,825 --> 00:11:59,759
Oh, here's the night watchman.

257
00:11:59,759 --> 00:12:01,726
We could see when he
was making his rounds.

258
00:12:01,726 --> 00:12:04,627
But when they found out
that they had been attacked,

259
00:12:04,627 --> 00:12:06,957
they came bursting
into the server room

260
00:12:06,957 --> 00:12:08,363
and were none too happy.

261
00:12:08,363 --> 00:12:10,759
[Laughter]
-[Laugh-coughs]

262
00:12:10,759 --> 00:12:12,363
But I'm getting
ahead of myself.

263
00:12:12,363 --> 00:12:13,891
The actual attack.

264
00:12:13,891 --> 00:12:17,660
The first thing we did
was we waited until after 5:00,

265
00:12:17,660 --> 00:12:20,693
when we knew they went home,
thanks to the cameras,

266
00:12:20,693 --> 00:12:22,132
and then, we started exploiting

267
00:12:22,132 --> 00:12:24,098
this shell injection
vulnerability

268
00:12:24,099 --> 00:12:26,066
to run commands on the servers.

269
00:12:26,066 --> 00:12:28,957
The first thing we did,
just like a real attacker would,

270
00:12:28,957 --> 00:12:31,627
wasn't to change the votes,
but to steal anything

271
00:12:31,627 --> 00:12:34,263
that would help us get back
into the election servers later,

272
00:12:34,264 --> 00:12:36,792
in case we were discovered
and cut off.

273
00:12:36,792 --> 00:12:39,330
The system would never be
as secure again.

274
00:12:39,330 --> 00:12:41,528
After that, we changed
all the votes.

275
00:12:41,528 --> 00:12:43,957
And we replaced all
of the ballots on the server

276
00:12:43,957 --> 00:12:45,297
with our own ballots,

277
00:12:45,297 --> 00:12:47,363
with write-in candidates
for the names

278
00:12:47,363 --> 00:12:49,957
of evil AI and robots
from the movies in sci-fi.

279
00:12:49,957 --> 00:12:52,198
Who would the computer
want to win?

280
00:12:52,198 --> 00:12:54,066
All right.
After that, we rigged the system

281
00:12:54,066 --> 00:12:57,396
to replace any new votes
with our slate of evil robots

282
00:12:57,396 --> 00:13:00,495
and we added a backdoor
that would reveal any new votes

283
00:13:00,495 --> 00:13:03,198
and violate
secret voter privacy.

284
00:13:03,198 --> 00:13:05,824
Just let us know how people
really tried to vote.

285
00:13:05,825 --> 00:13:08,693
Then, we cleared the logs
and we left a calling card,

286
00:13:08,693 --> 00:13:12,429
just so they would have
some sense of who had done it.

287
00:13:12,429 --> 00:13:14,396
What we did was
we changed the thank-you page

288
00:13:14,396 --> 00:13:17,957
at the end to add this code.

289
00:13:17,957 --> 00:13:19,693
After a delay of a few seconds,

290
00:13:19,693 --> 00:13:22,231
the voter's computer
starts playing

291
00:13:22,231 --> 00:13:24,561
the University of Michigan's
football fight song,

292
00:13:24,561 --> 00:13:26,396
which goes "Hail
to the victors", et cetera.

293
00:13:26,396 --> 00:13:27,891
[ Laughter ]

294
00:13:27,891 --> 00:13:29,759
Now, DC did a very smart thing.

295
00:13:29,759 --> 00:13:31,594
They eventually discovered this

296
00:13:31,594 --> 00:13:33,363
when someone else
testing the system

297
00:13:33,363 --> 00:13:35,066
wrote in to say,
"Everything looks good,

298
00:13:35,066 --> 00:13:36,594
but I don't like
the music at the end.

299
00:13:36,594 --> 00:13:39,231
It's too distracting."
[Laughter]

300
00:13:39,231 --> 00:13:40,858
But they did
a very sensible thing:

301
00:13:40,858 --> 00:13:43,758
they didn't use the online
ballot return portion

302
00:13:43,759 --> 00:13:45,198
in the real election.

303
00:13:45,198 --> 00:13:49,165
They just let people print out
a blank ballot and mail it back.

304
00:13:49,165 --> 00:13:52,198
So this is great
because there's no single point

305
00:13:52,198 --> 00:13:54,759
we can hack into anymore
and change all the votes.

306
00:13:54,759 --> 00:13:58,693
Yeah, the mailman, in a few
places, might be dishonest,

307
00:13:58,693 --> 00:14:00,561
but I can't change all the votes

308
00:14:00,561 --> 00:14:03,462
in the election result
for Michigan.

309
00:14:03,462 --> 00:14:06,858
So I wanna give you
a second case study

310
00:14:06,858 --> 00:14:07,957
and this is more recent.

311
00:14:07,957 --> 00:14:09,924
So this is just
earlier this year

312
00:14:09,924 --> 00:14:13,066
in New South Wales, Australia,
where the largest-ever

313
00:14:13,066 --> 00:14:16,924
Internet voting deployment
was conducted.

314
00:14:16,924 --> 00:14:19,132
So New South Wales
has been experimenting

315
00:14:19,132 --> 00:14:21,263
with online voting
for several years

316
00:14:21,264 --> 00:14:24,825
and, in 2015, they deployed
a system engineered

317
00:14:24,825 --> 00:14:29,495
by online voting vendor Scytl,
that was designed

318
00:14:29,495 --> 00:14:31,594
to let absentee voters
cast their votes

319
00:14:31,594 --> 00:14:35,726
and it received more
than 280,000 online ballots.

320
00:14:35,726 --> 00:14:37,297
They said the system

321
00:14:37,297 --> 00:14:40,033
allowed people's votes
to be "completely secret.

322
00:14:40,033 --> 00:14:42,231
It's fully encrypted
and safeguarded,

323
00:14:42,231 --> 00:14:44,066
it can't be tampered with."

324
00:14:44,066 --> 00:14:45,825
Well, let's see about that.

325
00:14:45,825 --> 00:14:48,594
So, Vanessa Teague,
who's going to be speaking

326
00:14:48,594 --> 00:14:51,429
at the end of the session,
and I got together.

327
00:14:51,429 --> 00:14:54,165
And Vanessa is based
in in Melbourne,

328
00:14:54,165 --> 00:14:57,660
so she's been
interacting with and studying

329
00:14:57,660 --> 00:15:00,957
the Australian online voting
attempts for years.

330
00:15:00,957 --> 00:15:03,792
We, together, started looking
at the system

331
00:15:03,792 --> 00:15:06,099
and this is just quickly
what it looks like.

332
00:15:06,099 --> 00:15:08,561
You go to a webpage,

333
00:15:08,561 --> 00:15:12,627
managed by the electoral
authority, and log in.

334
00:15:12,627 --> 00:15:14,032
You then fill out your ballot

335
00:15:14,033 --> 00:15:16,627
and Australian ballots
are hopelessly complicated.

336
00:15:16,627 --> 00:15:19,429
I think they're, what?
More than 100?

337
00:15:19,429 --> 00:15:21,231
How many candidates?
-ATTENDEE: 300.

338
00:15:21,231 --> 00:15:24,000
300? Yeah.
Something like 300 choices

339
00:15:24,000 --> 00:15:25,792
you have to make on here.

340
00:15:25,792 --> 00:15:29,264
And then you upload the ballot,
the system thanks you

341
00:15:29,264 --> 00:15:32,594
for voting, and it gives you
a receipt number.

342
00:15:32,594 --> 00:15:35,000
And this number,
you can use to actually

343
00:15:35,000 --> 00:15:36,726
dial a telephone number,
[Laughter]

344
00:15:36,726 --> 00:15:39,330
punch in the receipt number
you get here,

345
00:15:39,330 --> 00:15:43,660
and the telephone system
will read back how you voted.

346
00:15:43,660 --> 00:15:46,593
Now, this is not really
at all privacy-preserving.

347
00:15:46,594 --> 00:15:49,660
This is a total disaster, from
a point of view of coercion,

348
00:15:49,660 --> 00:15:51,495
but this is what they built.

349
00:15:51,495 --> 00:15:53,924
So what could go wrong here?

350
00:15:53,924 --> 00:15:56,231
They actually planned
for what could go wrong

351
00:15:56,231 --> 00:15:58,066
and they did a number
of security studies.

352
00:15:58,066 --> 00:15:59,462
They brought in experts.

353
00:15:59,462 --> 00:16:02,429
They have a detailed threat
model that includes attacks

354
00:16:02,429 --> 00:16:07,065
by Al Qaeda, by North Korea,
and by Internet voting hackers,

355
00:16:07,066 --> 00:16:08,660
which, if you read
the details here,

356
00:16:08,660 --> 00:16:10,528
is my grad student
Scott Wolchock,

357
00:16:10,528 --> 00:16:12,198
who worked on
the DC voting experiment.

358
00:16:12,198 --> 00:16:14,462
[ Laughter ]

359
00:16:14,462 --> 00:16:17,165
So, anyway,
the election took place

360
00:16:17,165 --> 00:16:19,495
in the middle of March,
during 13 days

361
00:16:19,495 --> 00:16:22,462
and, due to various constraints,
I landed in Australia

362
00:16:22,462 --> 00:16:25,165
the day before
the election system opened

363
00:16:25,165 --> 00:16:27,065
and after recovering
from the jet lag,

364
00:16:27,066 --> 00:16:29,462
Vanessa and I started
looking at the site.

365
00:16:29,462 --> 00:16:31,693
So we did the basic tests

366
00:16:31,693 --> 00:16:33,528
that you would do
with limited time

367
00:16:33,528 --> 00:16:36,627
to try to determine whether
there were classic web attacks

368
00:16:36,627 --> 00:16:38,165
this was vulnerable to.

369
00:16:38,165 --> 00:16:44,033
And we also ran the HTTPS URL
through SSL labs

370
00:16:44,033 --> 00:16:47,396
and other tools to look
for known vulnerabilities there.

371
00:16:47,396 --> 00:16:48,891
And we didn't find anything.

372
00:16:48,891 --> 00:16:52,759
In fact, it looked like the SSL
configuration was really good.

373
00:16:52,759 --> 00:16:55,660
But then we noticed one thing,
which is that the server

374
00:16:55,660 --> 00:17:00,165
imported some other JavaScript
from an external site,

375
00:17:00,165 --> 00:17:05,825
from a tool called Piwik Pro,
that's used for analytics.

376
00:17:05,825 --> 00:17:09,759
And, when we ran the Piwik
server through SSL labs,

377
00:17:09,759 --> 00:17:12,132
this is what we got.

378
00:17:12,132 --> 00:17:15,957
The server turns out to be
vulnerable to the FREAK attack

379
00:17:15,957 --> 00:17:18,759
and to have other
configuration problems.

380
00:17:18,759 --> 00:17:20,495
So FREAK and Logjam

381
00:17:20,494 --> 00:17:23,890
were two TLS vulnerabilities
discovered in 2015

382
00:17:23,891 --> 00:17:26,627
and both allow you to downgrade
a vulnerable server

383
00:17:26,627 --> 00:17:31,495
to export-grade cryptography
and then to arbitrarily read

384
00:17:31,495 --> 00:17:34,033
and change
the connection content.

385
00:17:34,033 --> 00:17:36,396
So FREAK affected
most major browsers.

386
00:17:36,396 --> 00:17:39,363
It was discovered in March,

387
00:17:39,363 --> 00:17:41,495
patched about a week
before the election.

388
00:17:41,495 --> 00:17:43,792
Many browsers still not patched.

389
00:17:43,792 --> 00:17:46,462
But then, there was Logjam,
which is a vulnerability

390
00:17:46,462 --> 00:17:49,066
that I was involved
in the discovery of.

391
00:17:49,066 --> 00:17:52,792
Logjam, we discovered
at the beginning of March,

392
00:17:52,792 --> 00:17:54,924
but didn't make public
until May.

393
00:17:54,924 --> 00:17:57,726
But it was a vulnerability that
would allow a man in the middle

394
00:17:57,726 --> 00:18:01,462
to compromise these connections
with any major browser.

395
00:18:01,462 --> 00:18:04,627
In other words,
we had a zero-day against TLS

396
00:18:04,627 --> 00:18:06,428
that would allow us to affect

397
00:18:06,429 --> 00:18:10,132
any vote submitted
through iVote.

398
00:18:10,132 --> 00:18:12,132
So what could we do
with this knowledge?

399
00:18:12,132 --> 00:18:15,132
So, if an attacker wanted
to manipulate votes,

400
00:18:15,132 --> 00:18:17,297
they could become a network-
based man in the middle

401
00:18:17,297 --> 00:18:21,594
and watch connections
to the iVote and Piwik servers.

402
00:18:21,594 --> 00:18:24,264
So when a voter
loads the iVote site,

403
00:18:24,264 --> 00:18:27,462
it makes a secondary connection
to this other server,

404
00:18:27,462 --> 00:18:30,264
to load the analytics
JavaScript.

405
00:18:30,264 --> 00:18:33,659
Our malicious network,
our man in the middle,

406
00:18:33,660 --> 00:18:37,066
can exploit FREAK or Logjam,
to compromise that connection,

407
00:18:37,066 --> 00:18:39,660
and replace the JavaScript
that comes back

408
00:18:39,660 --> 00:18:41,363
with vote-stealing malware.

409
00:18:41,363 --> 00:18:45,396
That malware then runs within
the origin of the iVote site

410
00:18:45,396 --> 00:18:47,890
and can allow us to substitute
fraudulent votes

411
00:18:47,891 --> 00:18:50,726
for any affected ballot.

412
00:18:50,726 --> 00:18:54,132
So, the one, last thing
that we need a way to do is

413
00:18:54,132 --> 00:18:58,066
to defeat that pesky, telephone-
based verification system.

414
00:18:58,066 --> 00:18:59,330
And how do we do that?

415
00:18:59,330 --> 00:19:01,033
So, it turns out,
the verification,

416
00:19:01,033 --> 00:19:03,561
as designed,
was really easily side-stepped

417
00:19:03,561 --> 00:19:05,099
and there are many
different tricks

418
00:19:05,099 --> 00:19:06,858
that an attacker could use.

419
00:19:06,858 --> 00:19:10,231
One is just to delay
showing this receipt number

420
00:19:10,231 --> 00:19:13,660
for a little while, in hopes
that the voter doesn't care,

421
00:19:13,660 --> 00:19:16,726
doesn't wanna write it down,
just closes the window.

422
00:19:16,726 --> 00:19:18,759
If the voter closes the window,

423
00:19:18,759 --> 00:19:22,198
the attacker submits
a fake ballot.

424
00:19:22,198 --> 00:19:25,066
Otherwise, if the voter has
a chance to write this down,

425
00:19:25,066 --> 00:19:27,165
it submits the real ballot.

426
00:19:27,165 --> 00:19:28,792
Another thing you could do
is just replace

427
00:19:28,792 --> 00:19:31,362
the telephone number that
the voter is supposed to call,

428
00:19:31,363 --> 00:19:33,099
which is only something
that the voter

429
00:19:33,099 --> 00:19:35,593
gets through these websites, so,
if you're a man in the middle,

430
00:19:35,594 --> 00:19:38,297
that's easy to do as well
and, in fact, that, I think,

431
00:19:38,297 --> 00:19:40,561
was my cellphone number
in Australia,

432
00:19:40,561 --> 00:19:42,297
rather than the real one.

433
00:19:42,297 --> 00:19:45,660
Verification should be
a failsafe mechanism, right?

434
00:19:45,660 --> 00:19:47,330
If you have to rely on it

435
00:19:47,330 --> 00:19:50,561
for the security and integrity
of your election,

436
00:19:50,561 --> 00:19:54,824
your security has already failed
in another significant way.

437
00:19:54,825 --> 00:19:59,462
So we went public with
we discovered the attack

438
00:19:59,462 --> 00:20:02,000
in the middle of the election,
unfortunately,

439
00:20:02,000 --> 00:20:06,033
and we did disclose it promptly
to the election authorities,

440
00:20:06,033 --> 00:20:09,659
via the Australian CERT.
but, by that time,

441
00:20:09,660 --> 00:20:12,825
over 66,000 votes
had already been cast;

442
00:20:12,825 --> 00:20:16,198
we had a live vulnerability
in the real election system.

443
00:20:16,198 --> 00:20:22,099
In contrast, the closest margin
was only about 3,000 votes.

444
00:20:22,099 --> 00:20:24,726
So the future. What's next
for Internet voting?

445
00:20:24,726 --> 00:20:28,528
Well, in California right now,
there is an initiative

446
00:20:28,528 --> 00:20:30,693
that they're trying
to get on the ballot,

447
00:20:30,693 --> 00:20:32,660
that a group is trying to get
on the ballot, that would

448
00:20:32,660 --> 00:20:36,330
essentially mandate that the
Secretary of State of California

449
00:20:36,330 --> 00:20:39,890
implement online voting.

450
00:20:39,891 --> 00:20:43,066
The technology,
however, is not ready

451
00:20:43,066 --> 00:20:44,891
and what we have to take away

452
00:20:44,891 --> 00:20:47,462
from these case studies
we've seen, so far,

453
00:20:47,462 --> 00:20:50,297
is several lessons
about why this is challenging.

454
00:20:50,297 --> 00:20:52,759
So, first, Internet voting
involves some

455
00:20:52,759 --> 00:20:56,231
of the most challenging, open
problems in computer security.

456
00:20:56,231 --> 00:20:58,231
We have to get
these things right.

457
00:20:58,231 --> 00:20:59,858
Second, that the commodity tools

458
00:20:59,858 --> 00:21:01,825
and frameworks
we use for other applications

459
00:21:01,825 --> 00:21:04,066
are too fragile
for something as critical

460
00:21:04,066 --> 00:21:07,231
as determining who's
going to lead the nation.

461
00:21:07,231 --> 00:21:11,660
Voters have good reasons
to be skeptical.

462
00:21:11,660 --> 00:21:14,924
The history of these systems,
everything we've studied so far,

463
00:21:14,924 --> 00:21:17,000
shows problems can happen.

464
00:21:17,000 --> 00:21:20,165
New systems need
to earn their trust.

465
00:21:20,165 --> 00:21:22,495
And my take,
based on everything we found

466
00:21:22,495 --> 00:21:25,000
from researching systems
deployed, so far,

467
00:21:25,000 --> 00:21:27,429
is that it's going to be
decades, if ever,

468
00:21:27,429 --> 00:21:30,825
before the technology used
for security is at a point

469
00:21:30,825 --> 00:21:33,858
where online voting can be
done with high confidence

470
00:21:33,858 --> 00:21:36,659
and that this is going to take
fundamental advances

471
00:21:36,660 --> 00:21:39,132
in the way we approach security.
Thank you.

472
00:21:39,132 --> 00:21:42,792
[ Applause ]

473
00:21:42,792 --> 00:21:48,131
♪♪

474
00:21:48,132 --> 00:21:47,132


