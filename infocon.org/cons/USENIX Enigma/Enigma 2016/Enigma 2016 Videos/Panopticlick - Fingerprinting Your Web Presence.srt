1
00:00:00,198 --> 00:00:00,660


2
00:00:00,660 --> 00:00:04,924
♪♪

3
00:00:10,264 --> 00:00:11,561
BUDINGTON: Hello, everyone.

4
00:00:11,561 --> 00:00:13,891
I hope you're enjoying the first Enigma conference.

5
00:00:13,891 --> 00:00:15,429
My name is Bill Budington.

6
00:00:15,429 --> 00:00:18,924
I work on a tool called Panopticlick

7
00:00:18,924 --> 00:00:23,231
and it is a tracker and fingerprint-detection tool.

8
00:00:23,231 --> 00:00:25,660
But, as much as this is a talk about a tool,

9
00:00:25,660 --> 00:00:28,495
it's also a talk about how, when it comes to combating

10
00:00:28,495 --> 00:00:32,297
pervasive online surveillance, all hope is not lost.

11
00:00:32,296 --> 00:00:35,528
We should not succumb to privacy nihilism.

12
00:00:38,660 --> 00:00:42,065
So, before I get into what Panopticlick does,

13
00:00:42,066 --> 00:00:44,297
I really wanted to talk about the history

14
00:00:44,297 --> 00:00:45,759
of online surveillance,

15
00:00:45,759 --> 00:00:48,924
which deals with the history of surveillance more generally.

16
00:00:48,924 --> 00:00:52,759
Before you, you see this model of the mythical schematic

17
00:00:52,759 --> 00:00:54,495
for the Panopticon,

18
00:00:54,495 --> 00:00:56,726
from which Panopticlick derives its name.

19
00:00:56,726 --> 00:00:58,330
Now, this was conceptualized, first,

20
00:00:58,330 --> 00:01:02,099
by Jeremy Bentham in 1787 as, really,

21
00:01:02,099 --> 00:01:06,429
a first new type of prison that would keep track of inmates

22
00:01:06,429 --> 00:01:08,198
as they go about their daily lives,

23
00:01:08,198 --> 00:01:11,594
every single little interaction they have and every movement

24
00:01:11,594 --> 00:01:14,198
they have being tracked in this prison.

25
00:01:14,198 --> 00:01:16,726
You can see that they can be monitored

26
00:01:16,726 --> 00:01:19,923
through a central node here, marked by N,

27
00:01:19,924 --> 00:01:24,099
and all the prisoners are lined up in the A blocks.

28
00:01:24,099 --> 00:01:26,066
We thought of this as a great analogy

29
00:01:26,066 --> 00:01:28,627
for what web trackers attempt to do

30
00:01:28,627 --> 00:01:31,792
when they track you and your web movements online.

31
00:01:34,165 --> 00:01:39,033
So, really, the history of online tracking begins

32
00:01:39,033 --> 00:01:44,594
in the late '90s and really hits the media spotlight by 1999.

33
00:01:44,594 --> 00:01:47,726
This article by Glenn Fleishman from that year

34
00:01:47,726 --> 00:01:51,264
laments the fact that browser cookies can be used

35
00:01:51,264 --> 00:01:54,198
as a way to track users.

36
00:01:54,198 --> 00:01:58,594
Now, not only can they be used as a way to track users

37
00:01:58,594 --> 00:02:00,957
across their movements, but we were seeing

38
00:02:00,957 --> 00:02:04,527
a real change in the way that the web is structured.

39
00:02:04,528 --> 00:02:06,825
The old web, which can be modeled

40
00:02:06,825 --> 00:02:10,429
as a simple lookup table, was starting to fade away,

41
00:02:10,429 --> 00:02:13,066
as we see more and more user data

42
00:02:13,066 --> 00:02:16,363
starting to be gathered by servers.

43
00:02:16,363 --> 00:02:20,792
Now, this old web, the web as we know it,

44
00:02:20,792 --> 00:02:25,429
changed in the late '90s, and, you know,

45
00:02:25,429 --> 00:02:30,858
the unidirectional kind of information flow started to be

46
00:02:30,858 --> 00:02:33,924
superceded by a bidirectional information flow,

47
00:02:33,924 --> 00:02:38,099
as the information was not only being delivered

48
00:02:38,099 --> 00:02:39,692
from servers to clients,

49
00:02:39,693 --> 00:02:44,825
but from clients to servers, as well.

50
00:02:44,825 --> 00:02:49,726
By 2009, 10 years later, the situation had gotten so bad

51
00:02:49,726 --> 00:02:51,561
that this article by Ed Felten

52
00:02:51,561 --> 00:02:55,891
in Freedom to Tinker really reminisces on the good old days,

53
00:02:55,891 --> 00:03:01,000
when online trackers would just use cookies to track users.

54
00:03:01,000 --> 00:03:04,099
The idea is that cookies are

55
00:03:04,099 --> 00:03:06,692
really a transparent way to track users.

56
00:03:06,693 --> 00:03:11,165
This idea of the cookies being

57
00:03:11,165 --> 00:03:13,726
this transparent way to track users

58
00:03:13,726 --> 00:03:16,462
really gives us a sense of how bad

59
00:03:16,462 --> 00:03:21,429
things had gotten already, by this point.

60
00:03:21,429 --> 00:03:22,891
So, what happened?

61
00:03:22,891 --> 00:03:26,462
How did things get this bad in the span of a single decade?

62
00:03:26,462 --> 00:03:30,692
Well, trackers started to rely on the pervasive usage

63
00:03:30,693 --> 00:03:34,759
of browser plugins like Flash, Java, and Silverlight

64
00:03:34,759 --> 00:03:39,626
to really act as a persistent data store for users' data.

65
00:03:39,627 --> 00:03:42,066
Not only was it a persistent data store,

66
00:03:42,066 --> 00:03:45,660
but it also circumvented the normal mechanisms

67
00:03:45,660 --> 00:03:48,891
that are built into the browser for purging cookies.

68
00:03:48,891 --> 00:03:51,825
In this way, the trackers were becoming much more sneaky

69
00:03:51,825 --> 00:03:54,857
about what they were doing and this was the first

70
00:03:54,858 --> 00:03:57,495
kind of instance that we saw of them trying

71
00:03:57,495 --> 00:04:00,066
to really be covert about their actions.

72
00:04:03,561 --> 00:04:08,033
And what's more, in this, you know, basically,

73
00:04:08,033 --> 00:04:11,494
these plugins were able to collude with one another

74
00:04:11,495 --> 00:04:15,858
in tracking users and respawn cookies,

75
00:04:15,858 --> 00:04:17,692
if they're not simultaneously deleted

76
00:04:17,692 --> 00:04:21,627
in every single one of these three.

77
00:04:21,627 --> 00:04:25,594
In 2010, security researcher Samy Kamkar

78
00:04:25,594 --> 00:04:29,296
really published this proof of concept of this Evercookie,

79
00:04:29,297 --> 00:04:30,693
as he labeled it.

80
00:04:30,693 --> 00:04:36,627
The Evercookie could be used in this way: if you have cookies

81
00:04:36,627 --> 00:04:41,132
that are purged in Silverlight and Java, but not Flash,

82
00:04:41,132 --> 00:04:44,528
the Flash cookie code can be used to propagate it

83
00:04:44,528 --> 00:04:46,132
to the other plugins immediately,

84
00:04:46,132 --> 00:04:49,660
just after it's deleted, so this really makes it

85
00:04:49,660 --> 00:04:51,891
so that the trackers can achieve a level

86
00:04:51,891 --> 00:04:54,165
of persistence that's very, very, difficult to break.

87
00:04:57,231 --> 00:04:59,495
In addition to the persistent source of data,

88
00:04:59,495 --> 00:05:01,693
we have this thing called fingerprinting.

89
00:05:01,693 --> 00:05:04,198
So, whenever your browser accesses a site,

90
00:05:04,198 --> 00:05:06,231
it leaves bits of information

91
00:05:06,231 --> 00:05:09,429
about what it's doing upon every request.

92
00:05:09,429 --> 00:05:13,000
These bits of information can be correlated and combined

93
00:05:13,000 --> 00:05:17,165
to form a unique picture of your browser.

94
00:05:17,165 --> 00:05:20,495
The techniques that are used, particularly, are

95
00:05:20,495 --> 00:05:25,693
there's like, for instance, font detection,

96
00:05:25,693 --> 00:05:29,758
which can be done in JavaScript, Java, and Flash,

97
00:05:29,759 --> 00:05:31,825
as well detecting client headers

98
00:05:31,825 --> 00:05:34,198
that are sent upon every request.

99
00:05:34,198 --> 00:05:36,792
So these two things, persistent data stores

100
00:05:36,792 --> 00:05:41,066
and fingerprinting, can be used to pinpoint individuals.

101
00:05:41,066 --> 00:05:44,131
And, you know, not only that, but the inclusion

102
00:05:44,132 --> 00:05:48,198
of adbased trackers on the web really made it so that

103
00:05:48,198 --> 00:05:50,626
you can be tracked across the entire web

104
00:05:50,627 --> 00:05:52,957
and not just on individual pages.

105
00:05:55,792 --> 00:05:58,825
So, at EFF, we really were confident

106
00:05:58,825 --> 00:06:01,396
that browser fingerprinting was possible,

107
00:06:01,396 --> 00:06:04,000
and not only that, we wanted to gather more

108
00:06:04,000 --> 00:06:07,066
and learn more about the ways that this was possible,

109
00:06:07,066 --> 00:06:09,890
the ways that browsers were delivering these unique bits

110
00:06:09,891 --> 00:06:12,594
of information about users.

111
00:06:12,594 --> 00:06:17,726
And so, in January 2010, we launched Panopticlick 1.0.

112
00:06:17,726 --> 00:06:22,066
We asked volunteers to participate in this experiment

113
00:06:22,066 --> 00:06:24,561
and this was not just to learn more

114
00:06:24,561 --> 00:06:28,561
about users' unique browsers and the little bits of information

115
00:06:28,561 --> 00:06:31,825
that they're leaving, but also for users themselves

116
00:06:31,825 --> 00:06:37,561
to get a good idea about how unique their browsers are.

117
00:06:37,561 --> 00:06:42,231
So, when I talk about this idea of uniqueness,

118
00:06:42,231 --> 00:06:44,825
what I'm really talking about is entropy.

119
00:06:44,825 --> 00:06:49,627
And entropy is measured in bits, so it's log base 2.

120
00:06:49,627 --> 00:06:51,957
In order to find out the number of bits

121
00:06:51,957 --> 00:06:54,528
that you need to uniquely identify someone,

122
00:06:54,528 --> 00:06:56,066
you take the log base 2

123
00:06:56,066 --> 00:06:59,066
of the entire population that you're measuring from.

124
00:06:59,066 --> 00:07:02,363
For instance, it takes 32.7 bits of entropy

125
00:07:02,363 --> 00:07:05,033
to uniquely identify someone on planet Earth,

126
00:07:05,033 --> 00:07:10,957
because 2 to the 32.7 is about 7.1 billion,

127
00:07:10,957 --> 00:07:14,726
or about how many people there are on planet Earth.

128
00:07:14,726 --> 00:07:17,033
In order to measure the change in entropy

129
00:07:17,033 --> 00:07:19,561
when something new is revealed about someone,

130
00:07:19,561 --> 00:07:21,462
we can use this equation here.

131
00:07:21,462 --> 00:07:24,495
Now, this is best illustrated by example.

132
00:07:24,495 --> 00:07:26,957
In order to measure the change in entropy

133
00:07:26,957 --> 00:07:29,198
when we learn that someone is a Capricorn,

134
00:07:29,198 --> 00:07:32,527
we take the log base 2 of 1/12 of the population,

135
00:07:32,528 --> 00:07:34,594
which is the portion of the population, roughly,

136
00:07:34,594 --> 00:07:36,033
that is a Capricorn.

137
00:07:36,033 --> 00:07:39,891
That gives us 3.5 bits.

138
00:07:39,891 --> 00:07:41,660
In order to measure the change in entropy

139
00:07:41,660 --> 00:07:44,891
when we learn someone is born on January 2nd,

140
00:07:44,891 --> 00:07:47,825
we take log base 2 of 1/365,

141
00:07:47,825 --> 00:07:50,957
about the amount of population that is born on that date.

142
00:07:50,957 --> 00:07:54,296
That give us 8.51 bits.

143
00:07:54,297 --> 00:07:57,825
Really, we can measure and we can kind of correlate

144
00:07:57,825 --> 00:08:01,164
and combine these facts and come up with --

145
00:08:01,165 --> 00:08:04,231
And by combining independent facts about someone,

146
00:08:04,231 --> 00:08:06,528
we can learn their unique identity

147
00:08:06,528 --> 00:08:09,792
and measure and actually add these bits of entropy

148
00:08:09,792 --> 00:08:12,527
to come up with a total

149
00:08:12,528 --> 00:08:15,264
and uniquely identify them personally.

150
00:08:15,264 --> 00:08:18,066
Now, you might notice that, in this example,

151
00:08:18,066 --> 00:08:20,561
these are not actually independent facts.

152
00:08:20,561 --> 00:08:23,527
If you know that someone is born on January 2nd,

153
00:08:23,528 --> 00:08:25,726
then you already know that they're a Capricorn,

154
00:08:25,726 --> 00:08:27,825
thus you can't add up the bits of entropy

155
00:08:27,825 --> 00:08:30,066
to get you 12 bits.

156
00:08:30,066 --> 00:08:32,593
So, this kind of, you know,

157
00:08:32,594 --> 00:08:36,165
a way to uniquely identify someone, but, you know,

158
00:08:36,164 --> 00:08:38,659
the upshot of all this is that the more entropy,

159
00:08:38,659 --> 00:08:42,065
the more uniqueness you have and the less your privacy is.

160
00:08:44,693 --> 00:08:47,396
So, the metrics that we were using with Panopticlick

161
00:08:47,396 --> 00:08:49,165
were a mixture of headers

162
00:08:49,165 --> 00:08:51,198
and JavaScript-detected properties,

163
00:08:51,198 --> 00:08:53,462
and the total population that we were measuring from

164
00:08:53,462 --> 00:08:58,000
was all the volunteers that came and took the test.

165
00:08:58,000 --> 00:09:02,858
And you know that, if you have JavaScript enabled,

166
00:09:02,858 --> 00:09:06,527
for example, then you can use JavaScript and headers

167
00:09:06,528 --> 00:09:08,396
and, if you have JavaScript disabled,

168
00:09:08,396 --> 00:09:10,462
then you only have the headers to go on.

169
00:09:10,462 --> 00:09:14,627
So, in that case, the users were much better-protected.

170
00:09:14,627 --> 00:09:18,429
For instance, if users were using Tor,

171
00:09:18,429 --> 00:09:21,560
then they were also much better- protected by this metric.

172
00:09:21,561 --> 00:09:23,495
So, we were gathering these statistics

173
00:09:23,495 --> 00:09:26,660
and we were gathering it in a way that we were making sure

174
00:09:26,660 --> 00:09:30,660
that users were very well- protected and their anonymity

175
00:09:30,660 --> 00:09:32,957
was guaranteed by a stringent privacy policy.

176
00:09:35,759 --> 00:09:40,363
So, in May 2010, our lead technologist at EFF

177
00:09:40,363 --> 00:09:42,693
and Panopticlick author Peter Eckersley,

178
00:09:42,693 --> 00:09:44,792
who's going to speak next,

179
00:09:44,792 --> 00:09:48,198
published this kind of paper that describes the results

180
00:09:48,198 --> 00:09:50,098
that we had from the Panopticlick experiment

181
00:09:50,099 --> 00:09:52,363
and it found that the overwhelming majority

182
00:09:52,363 --> 00:09:55,198
of browsers were uniquely identifiable.

183
00:09:55,198 --> 00:09:58,000
In fact, 84% of browsers

184
00:09:58,000 --> 00:10:00,396
had uniquely identifiable fingerprints.

185
00:10:00,396 --> 00:10:04,791
Among those with Flash enabled, that number jumps to 94%

186
00:10:04,792 --> 00:10:07,462
with uniquely identifiable fingerprints.

187
00:10:07,462 --> 00:10:10,561
Now, this was enough to drive home the fact

188
00:10:10,561 --> 00:10:12,891
that users needed to take concrete steps

189
00:10:12,891 --> 00:10:16,560
in order to ensure that, and get a reassurance that,

190
00:10:16,561 --> 00:10:19,165
their browsers were protecting them.

191
00:10:22,396 --> 00:10:24,264
So, at the same time,

192
00:10:24,264 --> 00:10:27,792
tracking techniques were kind of going to new levels.

193
00:10:27,792 --> 00:10:29,198
Show of hands: how many people

194
00:10:29,198 --> 00:10:32,495
know what this graphic is describing here?

195
00:10:32,495 --> 00:10:34,198
Okay, a few of you.

196
00:10:34,198 --> 00:10:37,165
Well, this is a technique called canvas fingerprinting,

197
00:10:37,165 --> 00:10:42,560
and it renders text onto a HTML5 canvas element.

198
00:10:42,561 --> 00:10:46,132
And the interesting thing about this is that

199
00:10:46,132 --> 00:10:49,098
even small changes in the configuration

200
00:10:49,099 --> 00:10:53,066
of the browser fonts and operating system

201
00:10:53,066 --> 00:10:56,000
can, you know, really change the resulting image

202
00:10:56,000 --> 00:10:58,495
that's rendered to the canvas element.

203
00:10:58,495 --> 00:11:02,132
If you serialize this image and do a hashing function

204
00:11:02,132 --> 00:11:05,065
over it, you get a pretty good metric,

205
00:11:05,066 --> 00:11:08,561
another, really, you know, actually very good metric,

206
00:11:08,561 --> 00:11:09,759
for fingerprinting

207
00:11:09,759 --> 00:11:13,462
and, according to a study by Mechanical Turk,

208
00:11:13,462 --> 00:11:15,759
a small study that was conducted,

209
00:11:15,759 --> 00:11:20,594
you get 5.7 bits of entropy from this technique, alone.

210
00:11:20,594 --> 00:11:23,825
This was described in a paper called "Pixel Perfect"

211
00:11:23,825 --> 00:11:28,198
in 2012, by the way, and, by 2014, this technique

212
00:11:28,198 --> 00:11:31,098
was already being used across the board by trackers.

213
00:11:34,000 --> 00:11:36,330
This is an example of canvas fingerprinting

214
00:11:36,330 --> 00:11:39,627
from a library called Fingerprint2.

215
00:11:39,627 --> 00:11:42,957
In order to maximize the chances of the generated image

216
00:11:42,957 --> 00:11:46,033
being unique, you can see a complex interplay

217
00:11:46,033 --> 00:11:49,231
of different shapes and colors and fonts

218
00:11:49,231 --> 00:11:51,792
and UTF characters being used.

219
00:11:51,792 --> 00:11:54,165
So, really, you know, canvas fingerprinters

220
00:11:54,165 --> 00:11:55,957
have gotten much, much smarter

221
00:11:55,957 --> 00:11:59,593
in the years since this was introduced.

222
00:11:59,594 --> 00:12:03,363
Canvas fingerprinting became a big problem in 2014

223
00:12:03,363 --> 00:12:05,594
when two of the largest trackers,

224
00:12:05,594 --> 00:12:09,363
AddThis and Ligatus, implemented it.

225
00:12:09,363 --> 00:12:13,891
As much as 5% of the Alexa top 100,000 sites

226
00:12:13,891 --> 00:12:17,824
were found to be tracking users in this specific way.

227
00:12:17,825 --> 00:12:21,561
A paper published in 2014, in July, called

228
00:12:21,561 --> 00:12:24,396
"The Web Never Forgets" really started to shine a spotlight

229
00:12:24,396 --> 00:12:26,759
on the practices of these two trackers

230
00:12:26,759 --> 00:12:28,957
and, as a result, they stopped doing it.

231
00:12:28,957 --> 00:12:31,891
They actually stopped tracking users in this way.

232
00:12:31,891 --> 00:12:34,165
Although, it's very much still possible

233
00:12:34,165 --> 00:12:36,231
and other trackers are still doing it.

234
00:12:38,528 --> 00:12:41,066
At the same time, tracking techniques

235
00:12:41,066 --> 00:12:44,363
have started to go into whole new arenas

236
00:12:44,363 --> 00:12:47,330
and very novel techniques are starting to emerge.

237
00:12:47,330 --> 00:12:49,858
I'm gonna play a sound for you, right quick.

238
00:12:51,594 --> 00:12:53,858
[ Sustained beep ]

239
00:12:53,858 --> 00:12:55,000
[ Beep ]

240
00:12:55,000 --> 00:12:57,264
[ Beep ]

241
00:12:57,264 --> 00:13:02,033
Show of hands: how many people know what that sound is?

242
00:13:02,033 --> 00:13:04,561
Yeah. One or two of you.

243
00:13:04,561 --> 00:13:08,825
So, you know, if you haven't heard it,

244
00:13:08,825 --> 00:13:10,891
then your dog might recognize it.

245
00:13:10,891 --> 00:13:16,065
This is not really ordinarily audible by the human ear,

246
00:13:16,066 --> 00:13:19,660
but I lowered the pitch, to make sure that you can hear it.

247
00:13:19,660 --> 00:13:23,329
This is a tracking beacon by a company called SilverPush

248
00:13:23,330 --> 00:13:27,363
and SilverPush really wants to link together

249
00:13:27,363 --> 00:13:30,033
all your devices, using these tracking beacons.

250
00:13:30,033 --> 00:13:35,495
So, what it does is it conveys user data using this beacon

251
00:13:35,495 --> 00:13:39,627
and then, if any of your devices that have

252
00:13:39,627 --> 00:13:43,924
the SilverPush SDK installed are within audible range,

253
00:13:43,924 --> 00:13:47,924
then those devices will log your viewing habits

254
00:13:47,924 --> 00:13:51,297
and try to link to the other devices, as well,

255
00:13:51,297 --> 00:13:52,924
across your home.

256
00:13:52,924 --> 00:13:55,429
Now, this is really nefarious, right?

257
00:13:55,429 --> 00:13:56,792
They're doing this in secret.

258
00:13:56,792 --> 00:13:59,297
Why would they be hiding their activities?

259
00:13:59,297 --> 00:14:00,693
Why would they be hiding

260
00:14:00,693 --> 00:14:02,593
everything they're doing in this way?

261
00:14:02,594 --> 00:14:04,462
Well, I mean, there are good reasons

262
00:14:04,462 --> 00:14:06,627
they're hiding it: because they know that,

263
00:14:06,627 --> 00:14:07,957
if people found out about it,

264
00:14:07,957 --> 00:14:10,132
they'd be outraged that they're doing this

265
00:14:10,132 --> 00:14:13,627
and really try to start fighting back against it.

266
00:14:13,627 --> 00:14:16,693
And, in fact, it has raised concerns and complaints

267
00:14:16,693 --> 00:14:22,429
to the FTC, where, you know, certain organizations

268
00:14:22,429 --> 00:14:26,033
had started saying -- cross-device fingerprinting

269
00:14:26,033 --> 00:14:30,165
is what the category of these fingerprintings are called --

270
00:14:30,165 --> 00:14:32,098
"Cross-device fingerprinting is a big problem

271
00:14:32,099 --> 00:14:35,000
and we want to see some regulation in this area."

272
00:14:35,000 --> 00:14:38,429
Unfortunately, we haven't seen any results, just yet,

273
00:14:38,429 --> 00:14:42,924
so this is also still available.

274
00:14:42,924 --> 00:14:46,824
So, all this paints a really like pretty bleak picture.

275
00:14:46,825 --> 00:14:49,330
Trackers are getting smarter and smarter

276
00:14:49,330 --> 00:14:51,264
and they can even jump devices.

277
00:14:51,264 --> 00:14:54,594
When I started this talk, I said that we should really,

278
00:14:54,594 --> 00:14:55,924
you know, we should have some hope

279
00:14:55,924 --> 00:14:58,495
and we shouldn't subscribe to privacy nihilism.

280
00:14:58,495 --> 00:14:59,726
So why? You know,

281
00:14:59,726 --> 00:15:05,000
why am I actually this hopeful for a future

282
00:15:05,000 --> 00:15:10,495
without trackers eroding our privacy?

283
00:15:10,495 --> 00:15:12,627
Well, there are some encouraging trends,

284
00:15:12,627 --> 00:15:15,032
even outside of protection software.

285
00:15:15,033 --> 00:15:18,198
Flash is dying and it's dying really quickly.

286
00:15:18,198 --> 00:15:20,924
We've seen the prevalence of Flash on pages

287
00:15:20,924 --> 00:15:25,066
go from just under 50% to just above 20%

288
00:15:25,066 --> 00:15:27,099
in the last 5 years, alone.

289
00:15:27,099 --> 00:15:29,330
And it's not just Flash.

290
00:15:29,330 --> 00:15:32,462
Java, Silverlight: the other plugins are also dying, as well,

291
00:15:32,462 --> 00:15:34,297
very quickly, and good riddance.

292
00:15:34,297 --> 00:15:39,891
Really, they erode our ability to take control of our browsers.

293
00:15:39,891 --> 00:15:43,495
When they're, you know, declining,

294
00:15:43,495 --> 00:15:47,000
and really, what this means is that we can start

295
00:15:47,000 --> 00:15:49,891
to use the normal browser APIs to rein in some

296
00:15:49,891 --> 00:15:53,891
of the worst abuses of the past, to really start to just start

297
00:15:53,891 --> 00:15:58,000
to regain control of our browsers again.

298
00:15:58,000 --> 00:16:01,033
In 2010, browsers implemented the Do Not Track header

299
00:16:01,033 --> 00:16:04,396
and started supporting it.

300
00:16:04,396 --> 00:16:06,098
What this header does

301
00:16:06,099 --> 00:16:10,924
is it allows users to actually opt out of being tracked.

302
00:16:10,924 --> 00:16:13,329
Now, this is a nice idea,

303
00:16:13,330 --> 00:16:15,891
but it's really not legally enforceable

304
00:16:15,891 --> 00:16:18,296
and there's no reason that trackers

305
00:16:18,297 --> 00:16:20,297
have any incentive to obey this,

306
00:16:20,297 --> 00:16:22,561
to actually stop tracking users,

307
00:16:22,561 --> 00:16:25,000
if users just say "I don't want to be tracked."

308
00:16:25,000 --> 00:16:27,132
Unfortunately, that's not quite enough

309
00:16:27,132 --> 00:16:29,296
for users not to be tracked.

310
00:16:32,132 --> 00:16:35,065
So, at EFF, we started to change the dynamic

311
00:16:35,066 --> 00:16:36,528
by providing an incentive

312
00:16:36,528 --> 00:16:39,957
for tracking companies and adtracking companies

313
00:16:39,957 --> 00:16:44,858
to really respect user privacy and not to track them.

314
00:16:44,858 --> 00:16:46,726
On August 3rd of last year,

315
00:16:46,726 --> 00:16:49,396
we launched the Do Not Track policy,

316
00:16:49,396 --> 00:16:51,329
along with a coalition of organizations,

317
00:16:51,330 --> 00:16:55,231
such as Disconnect, Medium, AdBlock,

318
00:16:55,231 --> 00:16:58,363
and ad-tech company Adzerk.

319
00:16:58,363 --> 00:17:01,528
Participating companies, they post this policy

320
00:17:01,528 --> 00:17:04,726
onto a well-known location behind their web route

321
00:17:04,726 --> 00:17:07,792
and it promises not to track users.

322
00:17:07,791 --> 00:17:09,131
They could do this out of the goodness

323
00:17:09,132 --> 00:17:10,660
of their hearts, but why would they?

324
00:17:10,660 --> 00:17:15,924
What's the real incentive here that I'm talking about?

325
00:17:15,924 --> 00:17:17,462
Well, just a few days after launching

326
00:17:17,462 --> 00:17:20,297
our Do Not Track policy, we launched Privacy Badger.

327
00:17:20,297 --> 00:17:21,560
You might have heard of it.

328
00:17:21,560 --> 00:17:25,098
Privacy Badger, it's a tracker blocker,

329
00:17:25,098 --> 00:17:29,000
but it also selectively allows resources that have promised

330
00:17:29,000 --> 00:17:32,891
to protect users in this way, promised to not track users

331
00:17:32,891 --> 00:17:35,132
by posting the Do Not Track policy,

332
00:17:35,132 --> 00:17:36,825
so if a site wants to ensure

333
00:17:36,825 --> 00:17:39,528
that its resources are maximally available,

334
00:17:39,528 --> 00:17:43,231
then what they do is they, you know,

335
00:17:43,231 --> 00:17:45,033
promise not to track users.

336
00:17:45,033 --> 00:17:48,296
And then, users with Privacy Badger installed

337
00:17:48,297 --> 00:17:52,231
will actually be able to access all their site.

338
00:17:52,231 --> 00:17:56,429
You know, version 1.0 of Privacy Badger was launched

339
00:17:56,429 --> 00:17:58,924
on August 6th of last year

340
00:17:58,924 --> 00:18:02,759
and it's really unlike any other tracker blocker that we've seen.

341
00:18:02,759 --> 00:18:06,792
It takes a heuristic approach to blocking, so, basically,

342
00:18:06,792 --> 00:18:10,561
it looks when third parties start setting cookies

343
00:18:10,561 --> 00:18:13,165
and, if it does this, if these, you know, cookies

344
00:18:13,165 --> 00:18:21,066
are set, you know, across three first-party domains,

345
00:18:21,066 --> 00:18:23,462
then that means that this is a shady behavior,

346
00:18:23,462 --> 00:18:26,363
this is a tracker; we'll start blocking it.

347
00:18:26,363 --> 00:18:29,297
And it's not just cookies.

348
00:18:29,297 --> 00:18:31,693
For instance, that canvas fingerprinting thing

349
00:18:31,693 --> 00:18:33,198
that we've been doing?

350
00:18:33,198 --> 00:18:35,429
Well, you know, we have seen this

351
00:18:35,429 --> 00:18:38,792
and these third parties, that's shady when they do that,

352
00:18:38,792 --> 00:18:41,264
so we look to that as another indication

353
00:18:41,264 --> 00:18:44,561
that these are trackers that, you know, are really nefarious

354
00:18:44,561 --> 00:18:47,396
and we should block them.

355
00:18:47,396 --> 00:18:51,363
Here, we can see Privacy Badger in action.

356
00:18:51,363 --> 00:18:53,132
The wider the adoption of Privacy Badger

357
00:18:53,132 --> 00:18:56,627
in other tools that support the Do Not Track policy,

358
00:18:56,627 --> 00:18:59,033
the more incentive ad-tech companies have

359
00:18:59,033 --> 00:19:01,956
to really try to make, you know,

360
00:19:01,957 --> 00:19:04,660
and subscribe to the Do Not Track policy, itself,

361
00:19:04,660 --> 00:19:08,198
so that their resources are maximally available.

362
00:19:11,759 --> 00:19:16,396
In December, we launched Panopticlick 2.0.

363
00:19:16,396 --> 00:19:18,627
With this second iteration of Panopticlick,

364
00:19:18,627 --> 00:19:23,197
we really try to bring you a new suite of tools

365
00:19:23,198 --> 00:19:27,462
and test whether your tracker and adblocking software,

366
00:19:27,462 --> 00:19:29,231
how well that's working.

367
00:19:29,231 --> 00:19:31,594
So we've set up a number of domains

368
00:19:31,594 --> 00:19:35,561
and those domains are really mimicking the behavior

369
00:19:35,561 --> 00:19:38,561
of ad-tech and tracker companies.

370
00:19:38,561 --> 00:19:41,428
So the way it works is that these domains

371
00:19:41,429 --> 00:19:44,528
include resources in such a way that they'll trigger

372
00:19:44,528 --> 00:19:46,957
three different types of tracker blockers:

373
00:19:46,957 --> 00:19:50,363
those that use domain blacklisting;

374
00:19:50,363 --> 00:19:53,792
also those that use URL fragments to block;

375
00:19:53,792 --> 00:19:55,858
and also those, like Privacy Badger,

376
00:19:55,858 --> 00:19:59,000
that take the heuristic approach.

377
00:19:59,000 --> 00:20:01,891
If you see that these tracker blockers

378
00:20:01,891 --> 00:20:03,231
are being triggered,

379
00:20:03,231 --> 00:20:06,198
then we can be assured that they're working properly.

380
00:20:06,198 --> 00:20:09,495
Where your protection is absent or misconfigured,

381
00:20:09,495 --> 00:20:12,330
then we really try to nudge you in the direction

382
00:20:12,330 --> 00:20:15,956
of installing Privacy Badger to protect yourself.

383
00:20:15,957 --> 00:20:19,330
In this third row, we see that, you know,

384
00:20:19,330 --> 00:20:21,033
is your tracker blocker

385
00:20:21,033 --> 00:20:23,593
respecting the Do Not Track commitment?

386
00:20:23,594 --> 00:20:26,099
So that's, you know, another good indication

387
00:20:26,099 --> 00:20:29,297
that you have a good privacy mechanism

388
00:20:29,297 --> 00:20:31,462
in place in your browser.

389
00:20:31,462 --> 00:20:34,264
And, finally, we radically simplified the results

390
00:20:34,264 --> 00:20:37,428
of the fingerprinting test, so that users that are novice

391
00:20:37,429 --> 00:20:39,825
or they don't have good technical abilities

392
00:20:39,825 --> 00:20:42,495
can really get a good at-a-glance look

393
00:20:42,495 --> 00:20:46,792
at how unique their browser is, so, you know,

394
00:20:46,792 --> 00:20:49,462
don't worry, though: we have the full fingerprint results

395
00:20:49,462 --> 00:20:51,891
available behind a single click, so that you can look

396
00:20:51,891 --> 00:20:56,462
at those fine-grained results for yourself.

397
00:20:56,462 --> 00:21:01,066
In addition to trackerblocking and adblocking tests,

398
00:21:01,066 --> 00:21:02,858
we've open-sourced the codebase

399
00:21:02,858 --> 00:21:06,000
and rewritten the back end completely in Python Flask

400
00:21:06,000 --> 00:21:11,297
so that you can look at it and see how it works yourself.

401
00:21:11,297 --> 00:21:15,165
We've also added six new fingerprinting metrics

402
00:21:15,165 --> 00:21:21,000
that include the Do Not Track header, canvas fingerprinting,

403
00:21:21,000 --> 00:21:24,066
WebGL fingerprinting, and a few others.

404
00:21:24,066 --> 00:21:27,627
Really, these are intended to make the results

405
00:21:27,627 --> 00:21:31,659
more accurate, to reflect, really,

406
00:21:31,660 --> 00:21:34,924
how unique your browser fingerprint is right now.

407
00:21:37,396 --> 00:21:43,000
And finally, we've really tried to measure up your browser

408
00:21:43,000 --> 00:21:45,198
against those other browsers that we're seeing

409
00:21:45,198 --> 00:21:47,528
in the moment, in real time,

410
00:21:47,528 --> 00:21:50,363
instead of every other browser that we've ever seen,

411
00:21:50,363 --> 00:21:53,759
because that's another good way to get more accurate results

412
00:21:53,759 --> 00:21:57,330
for your fingerprinting and uniqueness.

413
00:21:57,330 --> 00:22:00,099
So, in the last month, we've seen the tracker test run

414
00:22:00,099 --> 00:22:02,956
over 250,000 times

415
00:22:02,957 --> 00:22:08,462
and we've seen over 8,900 unique IPs start to be protected.

416
00:22:08,462 --> 00:22:12,594
Now, if this second number seems low, consider the fact that,

417
00:22:12,594 --> 00:22:15,462
if you're running in a VPN, or you're running Tor,

418
00:22:15,462 --> 00:22:20,396
for instance, that's only one, single IP that'll be recorded,

419
00:22:20,396 --> 00:22:23,462
because that's only one exit node that you'll see.

420
00:22:23,462 --> 00:22:28,363
Also, if a tracker blocker or protection tool is installed

421
00:22:28,363 --> 00:22:30,561
after they see that their results

422
00:22:30,561 --> 00:22:34,528
are less than perfect, then we'll log that on a separate IP

423
00:22:34,528 --> 00:22:36,528
and we won't catch that in the second statistic.

424
00:22:39,495 --> 00:22:42,099
So, now that I've shown you what Panopticlick can do,

425
00:22:42,099 --> 00:22:46,858
I want to show a little bit of our plans for the future.

426
00:22:46,858 --> 00:22:50,000
We plan to open up the data as much as we possibly can,

427
00:22:50,000 --> 00:22:52,726
without risking the anonymity of our users,

428
00:22:52,726 --> 00:22:54,858
so that you can actually use these statistics

429
00:22:54,858 --> 00:22:58,924
in the projects that you run.

430
00:22:58,924 --> 00:23:02,495
We've already started to use Panopticlick

431
00:23:02,495 --> 00:23:04,561
as a testing framework for Privacy Badger,

432
00:23:04,561 --> 00:23:07,726
so that, when Privacy Badger blocks resources,

433
00:23:07,726 --> 00:23:10,033
we want to make sure that it's behaving properly

434
00:23:10,033 --> 00:23:13,000
and we hope other tracker blockers will implement

435
00:23:13,000 --> 00:23:17,858
Panopticlick as their testing framework, as well.

436
00:23:17,858 --> 00:23:21,165
And, finally, we want to add additional tracking tests

437
00:23:21,165 --> 00:23:25,231
to Panopticlick; for instance, local storage objects,

438
00:23:25,231 --> 00:23:29,528
when they're set by third-party resources, they're included

439
00:23:29,528 --> 00:23:31,561
on your first-party pages, that's kind of shady.

440
00:23:31,561 --> 00:23:35,593
We want to be ensured that that is also being checked

441
00:23:35,594 --> 00:23:38,693
and make sure that your blocking protection

442
00:23:38,693 --> 00:23:42,000
is using that, as well.

443
00:23:42,000 --> 00:23:44,462
So, how can I be so, you know,

444
00:23:44,462 --> 00:23:46,891
how can I have so much hope for a future

445
00:23:46,891 --> 00:23:49,858
without web trackers watching our every move?

446
00:23:49,858 --> 00:23:52,726
Well, it's because, with tools like Privacy Badger

447
00:23:52,726 --> 00:23:55,792
and Panopticlick, we can see exactly how much data

448
00:23:55,792 --> 00:24:01,000
they're gathering against us and set some rules and limits

449
00:24:01,000 --> 00:24:02,825
around what they can gather about us

450
00:24:02,825 --> 00:24:09,000
and start fighting back against it.

451
00:24:09,000 --> 00:24:10,297
So, if you'd like to get involved,

452
00:24:10,297 --> 00:24:11,825
please go to our GitHub at

453
00:24:11,825 --> 00:24:15,033
github.com/efforg/ panopticlick-python.

454
00:24:15,033 --> 00:24:18,824
I know that's a mouthful, but just go to the URL.

455
00:24:18,825 --> 00:24:22,759
And please test it for yourself at panopticlick.eff.org.

456
00:24:22,759 --> 00:24:25,792
Thanks very much. [Applause]

457
00:24:25,792 --> 00:24:31,131
♪♪

458
00:24:31,132 --> 00:24:30,132


