1
00:00:00,033 --> 00:00:06,033
 

2
00:00:08,594 --> 00:00:11,626
[ Applause ]

3
00:00:11,627 --> 00:00:13,858
-Bonjour.

4
00:00:13,858 --> 00:00:15,330
My name is Elie Bursztein,

5
00:00:15,330 --> 00:00:18,594
and first, thank you for the nice introduction.

6
00:00:18,594 --> 00:00:23,033
I said I lead Google anti-fraud and abuse research.

7
00:00:23,033 --> 00:00:27,264
And today, I would like to talk about Gmail.

8
00:00:27,264 --> 00:00:31,396
So, e-mail account, like the Gmail one,

9
00:00:31,396 --> 00:00:33,132
are very valuable for attackers.

10
00:00:33,132 --> 00:00:34,330
Many, many websites

11
00:00:34,330 --> 00:00:37,660
use e-mail account for registration,

12
00:00:37,660 --> 00:00:40,428
and also to send some privileged information to their client.

13
00:00:40,429 --> 00:00:43,759
These include banks, social network,

14
00:00:43,759 --> 00:00:46,429
e-commerce website, and of course, healthcare.

15
00:00:46,429 --> 00:00:47,825
And so, when an attacker

16
00:00:47,825 --> 00:00:49,396
is about to break through an e-mail account,

17
00:00:49,396 --> 00:00:52,066
he get access to most of the user online life,

18
00:00:52,066 --> 00:00:55,066
which is why it's so valuable and so important to protect.

19
00:00:55,066 --> 00:00:57,528
Gmail has -- more of the decade now,

20
00:00:57,528 --> 00:01:00,099
we've been protecting it for over 10 years,

21
00:01:00,099 --> 00:01:01,528
and what we wanted to share today

22
00:01:01,528 --> 00:01:05,132
is some of the lessons we learned while doing so.

23
00:01:05,132 --> 00:01:08,627
And so, Gmail --

24
00:01:08,627 --> 00:01:12,461
one thing which makes Gmail really hard to defend is care.

25
00:01:12,462 --> 00:01:13,825
You always heard about big data,

26
00:01:13,825 --> 00:01:17,396
but why does care change the way you defend things.

27
00:01:17,396 --> 00:01:19,462
It changes it at least for three things.

28
00:01:19,462 --> 00:01:24,000
So first one is, you have a very, very limited amount

29
00:01:24,000 --> 00:01:26,396
of margin for errors.

30
00:01:26,396 --> 00:01:28,198
Try to think of a classifier.

31
00:01:28,198 --> 00:01:30,693
I want to remove bad e-mail from my inbox.

32
00:01:30,693 --> 00:01:33,858
Well, if I have 1% false positive,

33
00:01:33,858 --> 00:01:36,429
then now I have billions of e-mails

34
00:01:36,429 --> 00:01:39,132
through my user e-mail, so it's not good enough.

35
00:01:39,132 --> 00:01:41,660
Remember, we have recently announced we have

36
00:01:41,660 --> 00:01:43,264
more than 900 million users,

37
00:01:43,264 --> 00:01:45,857
and we are processing hundreds of billions of messages.

38
00:01:45,858 --> 00:01:47,363
So 1% is too much.

39
00:01:47,363 --> 00:01:48,858
Similarly, when you have

40
00:01:48,858 --> 00:01:51,429
hundreds of billions of messages a week,

41
00:01:51,429 --> 00:01:53,528
we have to be very fast.

42
00:01:53,528 --> 00:01:54,924
We have to process a torrent,

43
00:01:54,924 --> 00:01:57,396
a mountain of data, so we have to be fast.

44
00:01:57,396 --> 00:02:00,792
Well, as you all know, we have a very, very good technique,

45
00:02:00,792 --> 00:02:02,924
but they're very slow, but we need to be very fast.

46
00:02:02,924 --> 00:02:06,495
So, how you solve this conundrum is a daily fight.

47
00:02:06,495 --> 00:02:09,396
And last but not least,

48
00:02:09,395 --> 00:02:11,099
one day, someone was very impressed

49
00:02:11,099 --> 00:02:13,263
that we said that -- I think that was Sergey

50
00:02:13,264 --> 00:02:14,792
that said we have more than 1,000 people

51
00:02:14,792 --> 00:02:16,297
working on security at Google.

52
00:02:16,297 --> 00:02:18,891
Well, it turns out that as you become bigger and bigger,

53
00:02:18,891 --> 00:02:20,329
you attract more attackers.

54
00:02:20,330 --> 00:02:22,891
More attackers does not mean the same kind again and again.

55
00:02:22,891 --> 00:02:24,626
It's just that you move up

56
00:02:24,627 --> 00:02:26,462
to the world of criminal organization.

57
00:02:26,462 --> 00:02:29,726
And today, we face the largest botnet.

58
00:02:29,726 --> 00:02:33,660
Very, very highly motivated and sophisticated attacker

59
00:02:33,660 --> 00:02:35,891
who want to get to our inbox for various reason --

60
00:02:35,891 --> 00:02:38,197
commercial reason, state reason.

61
00:02:38,198 --> 00:02:41,330
And those guys are really, really going after our accounts,

62
00:02:41,330 --> 00:02:43,330
so we have to keep growing the team

63
00:02:43,330 --> 00:02:45,891
and keep building new defense again and again.

64
00:02:45,891 --> 00:02:48,429
And we do iteration after iteration.

65
00:02:48,429 --> 00:02:50,528
So, this is why security is so hard.

66
00:02:50,528 --> 00:02:51,923
Security is so hard for those three reasons

67
00:02:51,924 --> 00:02:53,231
and many others.

68
00:02:53,231 --> 00:02:57,396
So, we defend Gmail against a plethora of threats,

69
00:02:57,396 --> 00:02:59,759
but the five one which are always coming back,

70
00:02:59,759 --> 00:03:02,131
always coming back to our malware.

71
00:03:02,132 --> 00:03:05,561
We don't our user to be infected.

72
00:03:05,561 --> 00:03:06,924
Account security, account hijacking.

73
00:03:06,924 --> 00:03:09,693
You don't want our user account to be breached into

74
00:03:09,693 --> 00:03:13,264
because, as we said, this is a kingdom to their online life.

75
00:03:13,264 --> 00:03:15,231
Phishing -- we don't want to be a platform

76
00:03:15,231 --> 00:03:18,429
for other services to be compromised.

77
00:03:18,429 --> 00:03:20,957
Web front and security, and in particular access,

78
00:03:20,957 --> 00:03:22,429
which I believe is a plague,

79
00:03:22,429 --> 00:03:25,825
and we should actually have as little as possible, of course.

80
00:03:25,825 --> 00:03:27,660
And finally, of course, spam.

81
00:03:27,660 --> 00:03:29,528
We want the inbox to be clean

82
00:03:29,528 --> 00:03:31,560
and people to have only e-mail they care about

83
00:03:31,561 --> 00:03:33,297
and not the rest.

84
00:03:33,297 --> 00:03:35,231
So, this is the five.

85
00:03:35,231 --> 00:03:36,726
Threats we always come back,

86
00:03:36,726 --> 00:03:39,099
and we try really hard to mitigate.

87
00:03:39,099 --> 00:03:42,000
So, let's start with an...

88
00:03:42,000 --> 00:03:44,858
In 2011, we launch a login challenge.

89
00:03:44,858 --> 00:03:46,726
So, a login challenge is idea that

90
00:03:46,726 --> 00:03:48,924
if you have the right login and password,

91
00:03:48,924 --> 00:03:50,297
we might ask you an extra question

92
00:03:50,297 --> 00:03:51,692
if we're not quite sure it's you.

93
00:03:51,693 --> 00:03:53,000
So, it's a risk in cyberspace,

94
00:03:53,000 --> 00:03:55,297
and we are erring on the side of being cautious,

95
00:03:55,297 --> 00:03:56,660
like it may be not you.

96
00:03:56,660 --> 00:03:59,132
You come from a weird location or weird device,

97
00:03:59,132 --> 00:04:00,528
we will ask you,

98
00:04:00,528 --> 00:04:03,957
"Well, what is your e-mail recovery address?"

99
00:04:03,957 --> 00:04:05,263
And what is your --

100
00:04:05,264 --> 00:04:06,858
what is the city usually logged in, right?

101
00:04:06,858 --> 00:04:09,891
Try to assert it's you by asking extra knowledge.

102
00:04:09,891 --> 00:04:13,692
Well, the first lesson that we really want to drive home

103
00:04:13,693 --> 00:04:16,561
is, if you do that, your attacker

104
00:04:16,560 --> 00:04:18,032
will react almost immediately.

105
00:04:18,033 --> 00:04:19,825
So, we've been monitoring phishing kits

106
00:04:19,825 --> 00:04:21,495
against Google for a while.

107
00:04:21,495 --> 00:04:25,297
And then almost immediately, we saw a phishing kit phishing,

108
00:04:25,297 --> 00:04:27,660
as you can see on the slide, for this exact question.

109
00:04:27,660 --> 00:04:29,660
So, they changed the phishing kit, and they're like,

110
00:04:29,660 --> 00:04:31,066
"Oh, you asked for this question.

111
00:04:31,066 --> 00:04:33,131
Fine, I'll just phish for it."

112
00:04:33,132 --> 00:04:35,396
And so, this is the first question.

113
00:04:35,396 --> 00:04:37,198
You can never stop running.

114
00:04:37,198 --> 00:04:39,000
You write, you design a new technique,

115
00:04:39,000 --> 00:04:40,693
so technique will be under attack,

116
00:04:40,693 --> 00:04:41,858
and they will find a way.

117
00:04:41,858 --> 00:04:43,462
They will find a way in an unexpected manner.

118
00:04:43,462 --> 00:04:46,099
so you have to keep a pulse on your attackers,

119
00:04:46,099 --> 00:04:48,759
and you have to be willing to keep going at it.

120
00:04:48,759 --> 00:04:50,561
And security is an ongoing battle.

121
00:04:50,561 --> 00:04:51,594
You never win.

122
00:04:51,594 --> 00:04:53,693
You just work hard to stay on top,

123
00:04:53,693 --> 00:04:55,726
and this is what we do.

124
00:04:55,726 --> 00:04:58,198
The second thing we learn very early on is,

125
00:04:58,198 --> 00:04:59,626
there is no silver bullet.

126
00:04:59,627 --> 00:05:04,099
So, we recently announced that we passed 99.9% accuracy

127
00:05:04,099 --> 00:05:05,792
at flagging spam e-mail,

128
00:05:05,792 --> 00:05:07,263
but we don't do that with one technique.

129
00:05:07,264 --> 00:05:10,528
Actually, no technique will reach the accuracy we want.

130
00:05:10,528 --> 00:05:14,528
What it did was, we used our large e-mail machine classifier,

131
00:05:14,528 --> 00:05:15,693
which was a base one.

132
00:05:15,693 --> 00:05:17,231
And then we added more and more technique.

133
00:05:17,231 --> 00:05:19,858
We use repetition, we use rules, base system,

134
00:05:19,858 --> 00:05:22,462
and we recently launched a deep running classifier,

135
00:05:22,462 --> 00:05:24,330
based off TensorFlow, which is a framework

136
00:05:24,330 --> 00:05:25,957
we just released publicly.

137
00:05:25,957 --> 00:05:28,495
And this helped us to get to where we are.

138
00:05:28,495 --> 00:05:29,627
But we don't stop there.

139
00:05:29,627 --> 00:05:31,660
Remember, attackers are getting better,

140
00:05:31,660 --> 00:05:33,759
so we're already working on the next generation

141
00:05:33,759 --> 00:05:36,000
because we know that the chain stack is today,

142
00:05:36,000 --> 00:05:37,858
where it should be, but tomorrow, it will not be,

143
00:05:37,858 --> 00:05:41,792
so we're already working out the next generation of systems.

144
00:05:41,792 --> 00:05:45,527
So, no silver bullet. Combined techniques.

145
00:05:45,528 --> 00:05:47,594
Even if I created a very great matrix,

146
00:05:47,594 --> 00:05:49,693
it's not telling you the full story.

147
00:05:49,693 --> 00:05:52,164
Your classifiers need to be tuned to your product.

148
00:05:52,165 --> 00:05:54,396
For example, on the Gmail case,

149
00:05:54,396 --> 00:05:56,132
a user will be very upset

150
00:05:56,132 --> 00:05:58,264
if one the good e-mails end up in the spam folder

151
00:05:58,264 --> 00:05:59,825
because it will never show up in his inbox.

152
00:05:59,825 --> 00:06:01,164
It's very costly.

153
00:06:01,165 --> 00:06:03,231
You expect a mail from your boss, from your wife,

154
00:06:03,231 --> 00:06:04,693
and then you don't see it,

155
00:06:04,693 --> 00:06:06,924
and then, you know, dispute ensues.

156
00:06:06,924 --> 00:06:09,924
Whereas, if you would put a spam e-mail into your inbox,

157
00:06:09,924 --> 00:06:11,231
well, you are a little bit annoyed,

158
00:06:11,231 --> 00:06:14,000
but you can just report it as spam, and it's gone.

159
00:06:14,000 --> 00:06:15,462
So, the cost is not the same,

160
00:06:15,462 --> 00:06:18,924
and so the classifiers need to account for those trade off.

161
00:06:18,924 --> 00:06:20,395
Of course, you need to keep both in check,

162
00:06:20,396 --> 00:06:22,264
but you can secure it one way or another.

163
00:06:22,264 --> 00:06:24,792
For your product, it may be completely different.

164
00:06:24,792 --> 00:06:26,263
For instance, the cost of letting

165
00:06:26,264 --> 00:06:27,957
a hijacker go through an account

166
00:06:27,957 --> 00:06:30,000
is way higher than just asking your login challenge.

167
00:06:30,000 --> 00:06:31,396
So for login challenge,

168
00:06:31,396 --> 00:06:33,330
we actually do the complete reverse.

169
00:06:33,330 --> 00:06:35,032
But so, tune your classifier

170
00:06:35,033 --> 00:06:37,924
so that it reflects your priority of your product,

171
00:06:37,924 --> 00:06:40,890
and that's something we strive to do.

172
00:06:40,891 --> 00:06:44,693
And then forget about pride, about ego.

173
00:06:44,693 --> 00:06:46,330
You will make mistakes.

174
00:06:46,330 --> 00:06:50,296
We do, but we know about it, so we create catch-up mechanism.

175
00:06:50,297 --> 00:06:51,957
We know that sometime we will miss something,

176
00:06:51,957 --> 00:06:54,165
but we want to be able to mitigate this

177
00:06:54,165 --> 00:06:55,660
by having catch-up mechanism.

178
00:06:55,660 --> 00:07:00,132
One of them, the most visible to our user is this red banner.

179
00:07:00,132 --> 00:07:01,891
So, the mail was received,

180
00:07:01,891 --> 00:07:04,462
and we didn't catch right away it was a phishing e-mail

181
00:07:04,462 --> 00:07:06,132
because we didn't detect properly

182
00:07:06,132 --> 00:07:07,957
the page was a phishing page.

183
00:07:07,957 --> 00:07:09,659
It happens, so in that case,

184
00:07:09,660 --> 00:07:11,561
we had after the e-mail was delivered

185
00:07:11,561 --> 00:07:13,957
to put this red banner and say, "Hey, we're wrong.

186
00:07:13,957 --> 00:07:15,594
Sorry, it's a bad e-mail, don't click on it,

187
00:07:15,594 --> 00:07:17,659
don't click it on it," and it helps us to catch up.

188
00:07:17,660 --> 00:07:19,759
So assume you will make mistakes,

189
00:07:19,759 --> 00:07:21,825
make it part of your process

190
00:07:21,825 --> 00:07:23,296
and just have catch-up mechanism.

191
00:07:23,297 --> 00:07:25,528
Really important.

192
00:07:25,528 --> 00:07:28,198
Similarly, your user are your best ally

193
00:07:28,198 --> 00:07:29,495
when it comes to security.

194
00:07:29,495 --> 00:07:32,000
These are your spam fighters, your foot fighters.

195
00:07:32,000 --> 00:07:33,660
They can really help you

196
00:07:33,660 --> 00:07:35,264
if you give them the real tool to do it.

197
00:07:35,264 --> 00:07:37,330
So, provide, empower of your user

198
00:07:37,330 --> 00:07:40,659
to help them fight abuse by providing with them

199
00:07:40,660 --> 00:07:42,429
meaningful U.I. and meaningful tools.

200
00:07:42,429 --> 00:07:44,792
For instance, we do it for end user.

201
00:07:44,792 --> 00:07:48,296
We offer for a very long time the ability to do --

202
00:07:48,297 --> 00:07:49,726
report spam and phishing,

203
00:07:49,726 --> 00:07:52,429
and we recently added the ability to block a sender

204
00:07:52,429 --> 00:07:55,957
or to also unsubscribe directly with one click.

205
00:07:55,957 --> 00:07:59,924
Similarly, for the sender of e-mail, we provide dashboard

206
00:07:59,924 --> 00:08:01,495
so they know how well they're doing,

207
00:08:01,495 --> 00:08:03,099
how much we spam folder and so forth

208
00:08:03,099 --> 00:08:05,462
so they can improve their practice.

209
00:08:05,462 --> 00:08:07,330
It turns out that the unsubscribe button

210
00:08:07,330 --> 00:08:10,792
has an interesting back story.

211
00:08:10,792 --> 00:08:13,131
Early on, we had only report for spam and phishing,

212
00:08:13,132 --> 00:08:14,462
and we discovered that people

213
00:08:14,462 --> 00:08:16,759
will actually use the "spam report" button

214
00:08:16,759 --> 00:08:19,132
for e-mail who they subscribe before,

215
00:08:19,132 --> 00:08:20,726
maybe a mailing list or social network,

216
00:08:20,726 --> 00:08:22,825
and they didn't want to see it, so what are they doing?

217
00:08:22,825 --> 00:08:24,198
Well, did not unsubscribe.

218
00:08:24,198 --> 00:08:26,164
What they do is they click on "spam," "spam," "spam,"

219
00:08:26,165 --> 00:08:29,858
and as a result, wind up clamping a good sender

220
00:08:29,858 --> 00:08:31,429
that people are tired of and spammers

221
00:08:31,429 --> 00:08:32,528
into the same bucket.

222
00:08:32,528 --> 00:08:34,462
And remember, reputation is something

223
00:08:34,462 --> 00:08:36,693
which e-mail use a lot to decide spamming or not spamming.

224
00:08:36,693 --> 00:08:39,561
How many of you have reported a commercial e-mail as spam?

225
00:08:39,561 --> 00:08:40,693
Come on, raise your hand.

226
00:08:40,693 --> 00:08:43,726
Oh, yeah, here you go, so for all of you,

227
00:08:43,726 --> 00:08:45,429
you probably don't want that because you have to click

228
00:08:45,429 --> 00:08:46,759
multiple time on "report spam"

229
00:08:46,759 --> 00:08:49,231
before we do it, so we provide you a new option

230
00:08:49,231 --> 00:08:51,099
which is block the sender or unsubscribe.

231
00:08:51,099 --> 00:08:52,330
You tell us, "It's not spam.

232
00:08:52,330 --> 00:08:54,000
It's just, I don't want to see it."

233
00:08:54,000 --> 00:08:57,132
Get rid of it, so it's good for the end user.

234
00:08:57,132 --> 00:08:59,165
It's immediate feedback on what you want.

235
00:08:59,165 --> 00:09:00,693
It's also good for the sender

236
00:09:00,693 --> 00:09:04,033
because they're not clamped together with spammer again,

237
00:09:04,033 --> 00:09:05,528
so they have all the incentive in the world

238
00:09:05,528 --> 00:09:06,693
to implement this feature.

239
00:09:06,693 --> 00:09:09,462
That's why it has been such a huge success.

240
00:09:09,462 --> 00:09:11,660
In both ways, you provide something meaningful to people,

241
00:09:11,660 --> 00:09:15,231
and they're able to self-police themself.

242
00:09:15,231 --> 00:09:17,033
Use overwhelming force.

243
00:09:17,033 --> 00:09:18,693
Might seem abstract, it's not.

244
00:09:18,693 --> 00:09:21,066
Remember, adaptive adversary means

245
00:09:21,066 --> 00:09:22,858
they're going to probe through your system.

246
00:09:22,858 --> 00:09:25,791
They're going to tell this, tell that how to react.

247
00:09:25,792 --> 00:09:27,231
So when you change your system,

248
00:09:27,231 --> 00:09:30,429
and you put a fix, don't put one at once.

249
00:09:30,429 --> 00:09:32,297
Put multiple at once so it's harder for them

250
00:09:32,297 --> 00:09:33,693
to figure out what changed.

251
00:09:33,693 --> 00:09:35,759
Especially if you have code, then they can look at code,

252
00:09:35,759 --> 00:09:37,594
and they can figure out exactly what lines change.

253
00:09:37,594 --> 00:09:40,429
So if you have a huge patch with thousands of lines,

254
00:09:40,429 --> 00:09:43,000
it's harder for them to understand what you change,

255
00:09:43,000 --> 00:09:45,033
so it makes your life harder.

256
00:09:45,033 --> 00:09:48,528
So, don't release patches one at a time.

257
00:09:48,528 --> 00:09:51,693
Cram them together and do a three week cycle

258
00:09:51,693 --> 00:09:54,132
or weekly cycle or even if you make yourself,

259
00:09:54,132 --> 00:09:56,627
a monthly cycle, but don't do it one at a time.

260
00:09:56,627 --> 00:09:58,824
It's too easy for them.

261
00:09:58,825 --> 00:10:00,528
I would like to focus a little bit

262
00:10:00,528 --> 00:10:02,165
on e-mail attachment.

263
00:10:02,165 --> 00:10:05,528
E-mail attachment is something which is its own bit by itself.

264
00:10:05,528 --> 00:10:08,792
We process billions of documents every day,

265
00:10:08,792 --> 00:10:10,528
and so the first thing

266
00:10:10,528 --> 00:10:12,891
which is important to understand about attack

267
00:10:12,891 --> 00:10:14,891
is that they do not come as a steady flow.

268
00:10:14,891 --> 00:10:18,462
You don't have 20 attackers knocking on your door every day.

269
00:10:18,462 --> 00:10:20,792
You have nothing, then you have 100,

270
00:10:20,792 --> 00:10:22,957
and then you have 100 million, and then you have nothing.

271
00:10:22,957 --> 00:10:24,825
These are bursts, and to show you really

272
00:10:24,825 --> 00:10:28,495
what it look like, this is data taken from monitoring services.

273
00:10:28,495 --> 00:10:31,759
This is three months of data from the end of 2015,

274
00:10:31,759 --> 00:10:32,792
and as you can see,

275
00:10:32,792 --> 00:10:34,297
the important thing is the spike.

276
00:10:34,297 --> 00:10:36,660
Sometimes we see 40 times more malware

277
00:10:36,660 --> 00:10:39,560
on a given day than the day before.

278
00:10:39,561 --> 00:10:40,957
So, attack come in bursts.

279
00:10:40,957 --> 00:10:42,132
They have a new idea,

280
00:10:42,132 --> 00:10:44,560
and they just try to bombard our user with it,

281
00:10:44,561 --> 00:10:46,759
and then you defeat it and then come back.

282
00:10:46,759 --> 00:10:49,330
So, it's planned for this huge burst.

283
00:10:49,330 --> 00:10:51,792
It's not a steady system. It's a burst system.

284
00:10:51,792 --> 00:10:53,363
And it actually influences deeply

285
00:10:53,363 --> 00:10:54,924
how you should build your system.

286
00:10:54,924 --> 00:10:58,231
For example, when we process data,

287
00:10:58,231 --> 00:11:01,033
the first rule we have, do not process twice.

288
00:11:01,033 --> 00:11:03,396
Processing malware in documents is very expensive,

289
00:11:03,396 --> 00:11:06,726
and remember, at billion scale, we can't process that much.

290
00:11:06,726 --> 00:11:07,825
We have to be very fast,

291
00:11:07,825 --> 00:11:10,198
so we never, ever process things twice.

292
00:11:10,198 --> 00:11:12,429
We use storage, which is cheap,

293
00:11:12,429 --> 00:11:15,033
to record every decision we make,

294
00:11:15,033 --> 00:11:17,726
and in some cases, when we have this huge outbreak,

295
00:11:17,726 --> 00:11:22,330
it save us up to 50% of the competition we do.

296
00:11:22,330 --> 00:11:24,561
Then, hindsight,

297
00:11:24,561 --> 00:11:26,792
this was probably the smartest decision we made.

298
00:11:26,792 --> 00:11:28,561
I didn't make it, but the person who made it

299
00:11:28,561 --> 00:11:30,000
was really, really smart.

300
00:11:30,000 --> 00:11:32,759
They had discussion about how Gmail will look like.

301
00:11:32,759 --> 00:11:35,825
It was 2004, and someone say,

302
00:11:35,825 --> 00:11:39,825
"Why would we authorize executable?"

303
00:11:39,825 --> 00:11:42,231
It was irrational, but do we really have a business case

304
00:11:42,231 --> 00:11:44,924
of exchanging executables through e-mail?

305
00:11:44,924 --> 00:11:49,000
Probably not, and it won't impair the use of the product.

306
00:11:49,000 --> 00:11:51,495
And remember, it's easier to not deploy a feature

307
00:11:51,495 --> 00:11:53,000
than to take it over from the user.

308
00:11:53,000 --> 00:11:54,429
User gets really upset.

309
00:11:54,429 --> 00:11:56,363
If you remember the PlayStation 3 example

310
00:11:56,363 --> 00:11:58,792
where we removed Linux, people were really upset.

311
00:11:58,792 --> 00:12:00,528
Taking away from people is really hard,

312
00:12:00,528 --> 00:12:02,231
so ask yourself beforehand.

313
00:12:02,231 --> 00:12:03,495
Do you really need this?

314
00:12:03,495 --> 00:12:05,924
Is it really something you want for your product?

315
00:12:05,924 --> 00:12:07,660
And we know that we don't want executable.

316
00:12:07,660 --> 00:12:09,165
It's really hard.

317
00:12:09,165 --> 00:12:10,560
I mean, honestly, there is backer.

318
00:12:10,561 --> 00:12:12,396
There's also those authentication techniques,

319
00:12:12,396 --> 00:12:13,396
testing services.

320
00:12:13,396 --> 00:12:14,759
It would have been miserable.

321
00:12:14,759 --> 00:12:18,264
So, by policy, we don't have executable, so we're fine.

322
00:12:18,264 --> 00:12:20,957
And actually, no one complained about it as of this day,

323
00:12:20,957 --> 00:12:24,528
so I've seen it is one of the smartest decision.

324
00:12:24,528 --> 00:12:27,165
When you do design, always ask yourself,

325
00:12:27,165 --> 00:12:28,660
do I need it for my business purposes?

326
00:12:28,660 --> 00:12:31,396
If I don't, I am opening an area of attack.

327
00:12:31,396 --> 00:12:34,329
Do I really want to live with the rest of my life with this?

328
00:12:34,330 --> 00:12:35,693
Maybe, maybe not,

329
00:12:35,693 --> 00:12:37,924
but it's worth it to actually think about that.

330
00:12:37,924 --> 00:12:41,066
And we reject a ton of things because of this.

331
00:12:41,066 --> 00:12:43,957
The second thing is,

332
00:12:43,957 --> 00:12:45,165
even if you use the same techniques,

333
00:12:45,165 --> 00:12:46,858
you can use multiple implementation of it.

334
00:12:46,858 --> 00:12:48,494
So antivirus is a great example

335
00:12:48,495 --> 00:12:51,264
where we realize on many antivirus together.

336
00:12:51,264 --> 00:12:52,693
We use ensemble learning.

337
00:12:52,693 --> 00:12:55,759
Ensemble learning states that if you have an engine

338
00:12:55,759 --> 00:12:58,264
which is above 50%, by combining multiple of those,

339
00:12:58,264 --> 00:13:01,330
you get a greater accuracy than using one.

340
00:13:01,330 --> 00:13:03,033
So use multiple antivirus

341
00:13:03,033 --> 00:13:05,528
to protect Gmail so you can do the same.

342
00:13:05,528 --> 00:13:06,825
It not only use different technique,

343
00:13:06,825 --> 00:13:08,231
it's also within the same technique,

344
00:13:08,231 --> 00:13:09,726
use different implementation

345
00:13:09,726 --> 00:13:13,099
because it would have different result.

346
00:13:13,099 --> 00:13:17,198
Last but not least, that's one of the most question we get is,

347
00:13:17,198 --> 00:13:20,231
how do we deal with thing which are undetected?

348
00:13:20,231 --> 00:13:23,825
First, they are very, very rare and few, but they do exist.

349
00:13:23,825 --> 00:13:27,033
And they are either mutation of an old thing

350
00:13:27,033 --> 00:13:30,231
that people have mutated, so it bypass antivirus

351
00:13:30,231 --> 00:13:32,231
on all our system before this one.

352
00:13:32,231 --> 00:13:34,264
Or because they are completely new.

353
00:13:34,264 --> 00:13:36,660
Again, very, very rare, but we have to catch those,

354
00:13:36,660 --> 00:13:38,891
and to do that, we rely on dynamic execution,

355
00:13:38,891 --> 00:13:43,165
which is running the document in a fully environment.

356
00:13:43,165 --> 00:13:44,957
This is extremely costly, so we can only do it

357
00:13:44,957 --> 00:13:46,231
for a few, few documents,

358
00:13:46,231 --> 00:13:48,825
and we have a complex system to decide which one.

359
00:13:48,825 --> 00:13:54,000
But this is how we deal with the "undetectable" malware.

360
00:13:54,000 --> 00:13:58,000
Last but not least, implement an emergency blocking system.

361
00:13:58,000 --> 00:14:01,528
How many of you heard about black swan?

362
00:14:01,528 --> 00:14:02,858
Only very few people.

363
00:14:02,858 --> 00:14:05,396
Okay, so black swan is theory by Nassim Taleb

364
00:14:05,396 --> 00:14:08,098
which says the thing which you choose the most

365
00:14:08,099 --> 00:14:12,561
is not what you plan for, but what you cannot predict.

366
00:14:12,561 --> 00:14:14,000
There is no point of trying,

367
00:14:14,000 --> 00:14:16,561
you just can't flag a market crash.

368
00:14:16,561 --> 00:14:18,627
You want to go to the office,

369
00:14:18,627 --> 00:14:21,791
so guy in front of you died of a heart attack in the freeway.

370
00:14:21,792 --> 00:14:23,132
You can't predict that,

371
00:14:23,132 --> 00:14:25,429
and it affects every aspect of our life.

372
00:14:25,429 --> 00:14:28,098
An unpredictable thing is a thing that you can't --

373
00:14:28,099 --> 00:14:29,693
there is no prediction possible for that,

374
00:14:29,693 --> 00:14:31,264
and you have to account for that.

375
00:14:31,264 --> 00:14:34,000
What you know is, unforeseeable bugs,

376
00:14:34,000 --> 00:14:36,066
unforeseeable attack will actually hit you,

377
00:14:36,066 --> 00:14:38,000
so you have to have a process,

378
00:14:38,000 --> 00:14:39,693
and you have to have an emergency big button

379
00:14:39,693 --> 00:14:41,660
you can push and stop.

380
00:14:41,660 --> 00:14:44,759
Understand what is happening, correct, and then resume.

381
00:14:44,759 --> 00:14:46,924
I'm going to give you a concrete example.

382
00:14:46,924 --> 00:14:49,429
Remember, we don't authorize executables, so we fine.

383
00:14:49,429 --> 00:14:53,495
Well, someone very, very clever realized that we authorized

384
00:14:53,495 --> 00:14:57,660
and NK file at some point, which is a link file.

385
00:14:57,660 --> 00:15:00,329
A link file, turns out, you can actually run executable wizard

386
00:15:00,330 --> 00:15:02,165
by launching the shell command,

387
00:15:02,165 --> 00:15:03,759
which is already on Windows, and they come up

388
00:15:03,759 --> 00:15:05,957
and decide to have a very, very clever attack.

389
00:15:05,957 --> 00:15:07,132
We didn't foresee it.

390
00:15:07,132 --> 00:15:08,824
We didn't even see that link would be used

391
00:15:08,825 --> 00:15:11,396
to exploit our user, even though it can.

392
00:15:11,396 --> 00:15:14,363
So we actually push a red button, say, "Stop."

393
00:15:14,363 --> 00:15:16,627
What's happening with that NK, we stop the traffic.

394
00:15:16,627 --> 00:15:18,363
We look at what was happening,

395
00:15:18,363 --> 00:15:20,759
and then we resume having defense in place.

396
00:15:20,759 --> 00:15:24,099
As a result, no more LiNK on Gmail.

397
00:15:24,099 --> 00:15:26,429
No one complain except maybe the bad guys,

398
00:15:26,429 --> 00:15:28,198
so that's one of the examples of black swan

399
00:15:28,198 --> 00:15:31,066
where we didn't foresee it, and then we had to react,

400
00:15:31,066 --> 00:15:35,132
and we were glad to have a "black swan process."

401
00:15:36,363 --> 00:15:39,495
Okay, guys, it's 2015 -- 16.

402
00:15:39,495 --> 00:15:40,825
Encrypt everything.

403
00:15:40,825 --> 00:15:43,066
Encryption is cheap. Encryption is fast.

404
00:15:43,066 --> 00:15:45,825
We work last year, for instance, to change it on mobile devices

405
00:15:45,825 --> 00:15:47,066
to make it even faster.

406
00:15:47,066 --> 00:15:49,198
No reason. Encrypt data in transit.

407
00:15:49,198 --> 00:15:50,924
Encrypt data at rest.

408
00:15:50,924 --> 00:15:53,891
You cannot talk about security if you don't have encryption.

409
00:15:53,891 --> 00:15:55,627
Encryption is a foundation.

410
00:15:55,627 --> 00:15:57,527
Whatever you blogged, which I don't have encryption

411
00:15:57,528 --> 00:15:58,891
is building a castle in the sand.

412
00:15:58,891 --> 00:16:02,363
It's going to collapse, so we really want that.

413
00:16:02,363 --> 00:16:04,891
You should have data encryption.

414
00:16:04,891 --> 00:16:08,924
We were one of the early adopters of data encryption

415
00:16:08,924 --> 00:16:11,429
in transit for e-mail in 2010.

416
00:16:11,429 --> 00:16:15,792
And then in 2014, piggybacking on the previous talk,

417
00:16:15,792 --> 00:16:19,528
we try to nudge people to use it by using a transparency report.

418
00:16:19,528 --> 00:16:23,330
We show you exactly how much traffic we see encrypted.

419
00:16:23,330 --> 00:16:25,957
As of today, we have about 62%

420
00:16:25,957 --> 00:16:27,593
of our inbound traffic which is encrypted,

421
00:16:27,594 --> 00:16:31,594
and then about 82% outbound which is encrypted.

422
00:16:31,594 --> 00:16:32,627
It's double from when

423
00:16:32,627 --> 00:16:34,396
we launched the transparency reports,

424
00:16:34,396 --> 00:16:37,495
so, yes, probably fresher works, but it's not enough.

425
00:16:37,495 --> 00:16:39,297
We want to be at 100%.

426
00:16:39,297 --> 00:16:41,528
And understanding why we cannot reach this 100%

427
00:16:41,528 --> 00:16:43,297
is really important because we want that.

428
00:16:43,297 --> 00:16:45,693
It's the same thing as TPS.

429
00:16:45,693 --> 00:16:47,759
Why is no one running TPS?

430
00:16:47,759 --> 00:16:49,396
Why is there still in-transit data

431
00:16:49,396 --> 00:16:52,693
that are not encrypted in 2016?

432
00:16:52,693 --> 00:16:55,429
That's a big problem.

433
00:16:56,792 --> 00:16:59,132
Be metric driven. It's good for you.

434
00:16:59,132 --> 00:17:00,693
It's good for you in the long run

435
00:17:00,693 --> 00:17:02,165
because you get a sense of progress.

436
00:17:02,165 --> 00:17:04,066
If you don't have metrics, it's really hard to know

437
00:17:04,066 --> 00:17:07,000
where you are and how much you have traveled

438
00:17:07,000 --> 00:17:08,198
and how much you need to travel.

439
00:17:08,198 --> 00:17:10,132
It help you to find your pinpoint,

440
00:17:10,132 --> 00:17:13,396
and maybe also even show your boss

441
00:17:13,396 --> 00:17:15,693
you're doing a good job, right?

442
00:17:15,693 --> 00:17:17,660
For Gmail, one of the key metrics we have

443
00:17:17,660 --> 00:17:20,264
is the number of exercises which are affecting our fountain

444
00:17:20,263 --> 00:17:23,263
because we believe XSS is the most daily attack

445
00:17:23,263 --> 00:17:25,098
that we can have against Gmail.

446
00:17:25,098 --> 00:17:27,066
And so we track them quarter by quarter.

447
00:17:27,066 --> 00:17:29,891
What this metric shows you is that in 2015,

448
00:17:29,891 --> 00:17:31,165
in the first three quarters,

449
00:17:31,165 --> 00:17:33,792
we only had one XSS reported which is way lower

450
00:17:33,792 --> 00:17:37,000
than what we had in 2011 or 2012.

451
00:17:37,000 --> 00:17:39,924
It helped our team to feel that we are making progress,

452
00:17:39,924 --> 00:17:42,066
that Gmail is increasingly secure,

453
00:17:42,066 --> 00:17:45,099
and that we are in the right direction.

454
00:17:45,099 --> 00:17:47,066
We're sort of using SQL injection as a metric,

455
00:17:47,066 --> 00:17:49,957
but we don't use SQL, so that's would be cheating.

456
00:17:49,957 --> 00:17:51,561
It would be just flat.

457
00:17:54,726 --> 00:17:58,033
Sometimes you need to make big bets.

458
00:17:58,033 --> 00:18:00,792
About four or five years ago, we were discussing access,

459
00:18:00,792 --> 00:18:02,924
and we realize that one of the pain points

460
00:18:02,924 --> 00:18:05,197
and the difficulty is to tell engineer,

461
00:18:05,198 --> 00:18:07,594
for engineer is to figure out how to escape there.

462
00:18:07,594 --> 00:18:10,066
Remember, an e-mail is usually HTML plus CSS

463
00:18:10,066 --> 00:18:12,363
plus JavaScript plus God knows what,

464
00:18:12,363 --> 00:18:14,132
and they be combined in any order.

465
00:18:14,132 --> 00:18:16,429
And so it's really hard for an engineer to figure out,

466
00:18:16,429 --> 00:18:18,561
how am I going to escape this piece of content?

467
00:18:18,561 --> 00:18:21,231
And so, the human is course of errors,

468
00:18:21,231 --> 00:18:23,825
and then you have to teach people doing it,

469
00:18:23,825 --> 00:18:25,297
and they are electing to do it because they have

470
00:18:25,297 --> 00:18:27,066
to achieve the feature in time.

471
00:18:27,066 --> 00:18:28,165
So really bad idea.

472
00:18:28,165 --> 00:18:30,231
So we bit the bullet, and we're like,

473
00:18:30,231 --> 00:18:33,363
"Okay, we need something better. Let's build a new technology."

474
00:18:33,363 --> 00:18:34,957
And we build auto escaping.

475
00:18:34,957 --> 00:18:36,363
And auto escaping is basically,

476
00:18:36,363 --> 00:18:39,396
as you can see on the site, you say, escape my document,

477
00:18:39,396 --> 00:18:41,495
and then the compiler do all of it.

478
00:18:41,495 --> 00:18:45,659
It's a great technology, but as I before said,

479
00:18:45,660 --> 00:18:47,363
it's actually costly to implement.

480
00:18:47,363 --> 00:18:50,165
It actually took our security team one year and a half

481
00:18:50,165 --> 00:18:52,594
to migrate all our code.

482
00:18:52,594 --> 00:18:54,396
You probably used Gmail today.

483
00:18:54,396 --> 00:18:56,528
Some of you might be even typing as I speak,

484
00:18:56,528 --> 00:18:58,825
but we also have the legacy fountain,

485
00:18:58,825 --> 00:19:00,099
and we also have inbox.

486
00:19:00,099 --> 00:19:01,528
And we have many, many, many fountains,

487
00:19:01,528 --> 00:19:03,759
so retrofitting and securing in all of them

488
00:19:03,759 --> 00:19:06,066
was a huge effort.

489
00:19:06,066 --> 00:19:10,627
But we believe it was worth it becomes sometimes the best way

490
00:19:10,627 --> 00:19:12,825
to prevent bug is to change the software design,

491
00:19:12,825 --> 00:19:14,165
to accommodate with this new idea,

492
00:19:14,165 --> 00:19:15,858
and some idea are worth pursuing.

493
00:19:15,858 --> 00:19:18,066
And we believe that auto-escaping for template

494
00:19:18,066 --> 00:19:20,726
is the way to end most of the excess bug.

495
00:19:20,726 --> 00:19:22,165
You don't have to worry about escaping.

496
00:19:22,165 --> 00:19:24,462
You don't have -- your team on the long run is better off

497
00:19:24,462 --> 00:19:26,792
because it don't have to sync and write his code.

498
00:19:26,792 --> 00:19:28,131
You can execute faster.

499
00:19:28,132 --> 00:19:30,693
It takes year and a half, but then you pay up front costs,

500
00:19:30,693 --> 00:19:32,297
and the dividends are really worth it.

501
00:19:32,297 --> 00:19:34,495
So that's one other story.

502
00:19:34,495 --> 00:19:36,362
Similarly, one of the big endeavors

503
00:19:36,363 --> 00:19:40,495
we did was launching CSPS, a blocking system for Gmail.

504
00:19:40,495 --> 00:19:42,659
We wanted to use that as defense in depth.

505
00:19:42,660 --> 00:19:45,726
So CSP is when a secure content policy,

506
00:19:45,726 --> 00:19:47,924
content security policy, which is a broader directive,

507
00:19:47,924 --> 00:19:50,528
which has which script

508
00:19:50,528 --> 00:19:52,528
from which origin you can include into the pages.

509
00:19:52,528 --> 00:19:55,363
And we wanted to have that to mitigate the excesses

510
00:19:55,363 --> 00:19:57,000
because then you cannot include the script

511
00:19:57,000 --> 00:19:58,396
which is controlled by the attacker.

512
00:19:58,396 --> 00:20:00,528
It's not in the domain.

513
00:20:00,528 --> 00:20:05,396
By doing so, we actually believe we helped keeping people in box.

514
00:20:05,396 --> 00:20:09,693
Secret. Google inbox was CSP compliant from day one.

515
00:20:09,693 --> 00:20:11,693
And when we released it to alpha tester,

516
00:20:11,693 --> 00:20:14,726
we realize that some of them had malware on their computer.

517
00:20:14,726 --> 00:20:15,858
And what the malware would do,

518
00:20:15,858 --> 00:20:17,693
it will inject JavaScript into inbox,

519
00:20:17,693 --> 00:20:19,429
and then CSP would block it.

520
00:20:19,429 --> 00:20:20,957
And we believe that this prevented

521
00:20:20,957 --> 00:20:21,957
a lot of extra traffic,

522
00:20:21,957 --> 00:20:23,858
which could lead to potential leak.

523
00:20:23,858 --> 00:20:25,528
Also, by re-factoring our code,

524
00:20:25,528 --> 00:20:27,660
it forced us to think of, "why do I have the JavaScript,

525
00:20:27,660 --> 00:20:28,792
why do I do that?"

526
00:20:28,792 --> 00:20:30,924
And then we found a bunch of potential leaks

527
00:20:30,924 --> 00:20:32,462
in our code that we removed.

528
00:20:32,462 --> 00:20:36,198
So, it not only has this layer of depth of doing what it do,

529
00:20:36,198 --> 00:20:39,495
but also a side benefit that we found very valuable.

530
00:20:39,495 --> 00:20:43,792
So, all in all, view your product as a castle.

531
00:20:43,792 --> 00:20:46,165
You need as many defenses as you can.

532
00:20:46,165 --> 00:20:49,792
For instance, have the planning, encryption, antivirus.

533
00:20:49,792 --> 00:20:51,759
One other one we need to mention is fuzzing.

534
00:20:51,759 --> 00:20:54,066
Fuzzing is really, really useful.

535
00:20:54,066 --> 00:20:56,825
It gets rid of a ton of stupid bugs.

536
00:20:56,825 --> 00:21:00,891
We provide our fuzzing framework publicly.

537
00:21:00,891 --> 00:21:02,264
You can use it or any other fuzzer.

538
00:21:02,264 --> 00:21:04,000
Just fuzz your system.

539
00:21:04,000 --> 00:21:06,363
It costs you a few CPUs. What's the downside?

540
00:21:06,363 --> 00:21:07,594
It works pretty well,

541
00:21:07,594 --> 00:21:09,561
and we found a ton of bugs like this, for instance.

542
00:21:09,561 --> 00:21:13,131
So defense in depth for your particular castle,

543
00:21:13,132 --> 00:21:14,231
you should do that.

544
00:21:14,231 --> 00:21:15,594
And then you need to man your castle.

545
00:21:15,594 --> 00:21:17,726
You need to have more people looking at the data,

546
00:21:17,726 --> 00:21:20,396
and honestly, pay for bug.

547
00:21:20,396 --> 00:21:22,297
It is absolutely worth it.

548
00:21:22,297 --> 00:21:24,825
Everyone else who tell you to use something else is wrong.

549
00:21:24,825 --> 00:21:27,363
This is absolutely the right thing to do.

550
00:21:27,363 --> 00:21:29,165
It is the right thing to do for three reasons.

551
00:21:29,165 --> 00:21:33,099
First, those guys have a different pair of eyes,

552
00:21:33,099 --> 00:21:35,726
so they will find bugs that you never thought of.

553
00:21:35,726 --> 00:21:38,165
And so you get a lot of interesting bugs.

554
00:21:38,165 --> 00:21:40,033
Secondly, it sends the right message

555
00:21:40,033 --> 00:21:43,824
which is, you embrace security as an ever-moving target,

556
00:21:43,825 --> 00:21:45,627
and you work on people's feedback.

557
00:21:45,627 --> 00:21:48,428
It's responsible, and you also recognize its hard work,

558
00:21:48,429 --> 00:21:50,462
so people work hard to help you.

559
00:21:50,462 --> 00:21:51,693
You give them money, why not?

560
00:21:51,693 --> 00:21:53,066
They help you to make your product better,

561
00:21:53,066 --> 00:21:55,099
and so they're part of your research team

562
00:21:55,099 --> 00:21:56,956
and your security team, that's great.

563
00:21:56,957 --> 00:21:59,792
And finally, remember, be metric driven.

564
00:21:59,792 --> 00:22:01,792
Well, actually, as you can see on the graph,

565
00:22:01,792 --> 00:22:03,759
we get less reports of vulnerability,

566
00:22:03,759 --> 00:22:05,759
which means it's harder for them to work.

567
00:22:05,759 --> 00:22:08,231
So the reason why the pay out increase is because we pay more.

568
00:22:08,231 --> 00:22:09,627
We pay more because it's harder,

569
00:22:09,627 --> 00:22:12,594
and we will keep paying more because, well, that's great.

570
00:22:12,594 --> 00:22:14,627
If we have to pay more, but for harder bugs, that's great.

571
00:22:14,627 --> 00:22:16,693
We also have this whole internal metric that,

572
00:22:16,693 --> 00:22:18,561
we look at the complexity of the report.

573
00:22:18,561 --> 00:22:21,362
And if you look at that, the bugs reported in 2010

574
00:22:21,363 --> 00:22:24,495
versus 2015 has nothing to do in common.

575
00:22:24,495 --> 00:22:26,527
2010, that was pretty easy.

576
00:22:26,528 --> 00:22:29,462
2015, people really work hard for their money.

577
00:22:29,462 --> 00:22:31,066
So, it's also a good internal metric that,

578
00:22:31,066 --> 00:22:32,396
for a security searcher, it's hard.

579
00:22:32,396 --> 00:22:34,066
So it's hard for them, it's hard for the attacker,

580
00:22:34,066 --> 00:22:35,066
so that's great.

581
00:22:35,066 --> 00:22:37,000
It's a great confirmation matrix.

582
00:22:37,000 --> 00:22:38,627
If you don't want to do it yourself,

583
00:22:38,627 --> 00:22:40,132
there are plenty of companies

584
00:22:40,132 --> 00:22:43,264
who actually will help you to set up your bug --

585
00:22:43,264 --> 00:22:46,000
your real-life program, so but run one.

586
00:22:46,000 --> 00:22:47,297
Even if you pay a small amount,

587
00:22:47,297 --> 00:22:49,000
you get some people reporting it,

588
00:22:49,000 --> 00:22:50,231
even a user who finds the bug,

589
00:22:50,231 --> 00:22:53,099
and they should be rewarded for that.

590
00:22:53,099 --> 00:22:56,231
So, key challenge.

591
00:22:56,231 --> 00:22:59,825
Briefly, the key challenge we have is, dynamic rendering.

592
00:22:59,825 --> 00:23:01,363
As the world become more complex

593
00:23:01,363 --> 00:23:02,891
and will also become more complicated,

594
00:23:02,891 --> 00:23:06,297
we see an increasingly sophisticated phishing pages

595
00:23:06,297 --> 00:23:10,429
and spam e-mail who use JavaScript, CSS, media queries,

596
00:23:10,429 --> 00:23:11,660
broader fingerprinting

597
00:23:11,660 --> 00:23:14,726
to be able to show different view

598
00:23:14,726 --> 00:23:16,033
to Gmail and to the user

599
00:23:16,033 --> 00:23:18,726
so we have to recognize those permit all the time.

600
00:23:18,726 --> 00:23:20,099
So, dynamic rendering is complicated.

601
00:23:20,099 --> 00:23:21,231
Hacked website.

602
00:23:21,231 --> 00:23:22,627
I always say the reputation of the sender

603
00:23:22,627 --> 00:23:23,956
is really important for us.

604
00:23:23,957 --> 00:23:27,132
So when a site is hacked, we have to react very quickly.

605
00:23:27,132 --> 00:23:30,759
It's really hard to reach those people that have been hacked.

606
00:23:30,759 --> 00:23:32,627
E-mail security standard,

607
00:23:32,627 --> 00:23:33,956
it's really hard to get things adapted.

608
00:23:33,957 --> 00:23:35,660
We have authentication standard.

609
00:23:35,660 --> 00:23:37,297
We have encryption standard.

610
00:23:37,297 --> 00:23:38,660
We're not at 100% for things

611
00:23:38,660 --> 00:23:40,561
that everyone agrees should be done.

612
00:23:40,561 --> 00:23:42,924
And how to find the pain point and how to help people

613
00:23:42,924 --> 00:23:44,726
to get them adopted is really important.

614
00:23:44,726 --> 00:23:47,594
It's through education and talking and helping people,

615
00:23:47,594 --> 00:23:49,165
and we really want them to be adopted,

616
00:23:49,165 --> 00:23:51,528
like we want TPS to be adopted.

617
00:23:51,528 --> 00:23:55,825
And finally, because I know you guys like scary story, yes,

618
00:23:55,825 --> 00:23:57,759
we do see advanced phishing attacks.

619
00:23:57,759 --> 00:24:01,495
We see very, very clever attacks which target very few users.

620
00:24:01,495 --> 00:24:04,033
One of them, for instance, was the O-token attacks,

621
00:24:04,033 --> 00:24:06,824
where, instead of phishing for the user login and password,

622
00:24:06,825 --> 00:24:09,957
they asked the user for delegation of O-token

623
00:24:09,957 --> 00:24:12,660
so that they can read Gmail content.

624
00:24:12,660 --> 00:24:14,033
And it's really hard for the user

625
00:24:14,033 --> 00:24:16,362
because this is not a usual thing they would check.

626
00:24:16,363 --> 00:24:21,891
So, it's very rare, but, yes, sophisticated attack we see.

627
00:24:21,891 --> 00:24:24,033
Key takeaway in case you fell asleep during the talk,

628
00:24:24,033 --> 00:24:25,924
is three.

629
00:24:25,924 --> 00:24:29,132
First, combine technology at each layer as we said.

630
00:24:29,132 --> 00:24:31,198
Different technology, but also more of the same.

631
00:24:31,198 --> 00:24:32,495
If they are differently implemented

632
00:24:32,495 --> 00:24:34,264
will help you to be stronger.

633
00:24:34,264 --> 00:24:35,726
Secondly, defense in depth,

634
00:24:35,726 --> 00:24:40,957
which means keep at each component a layer of defense,

635
00:24:40,957 --> 00:24:45,858
but also have catch-up mechanism and have an emergency system,

636
00:24:45,858 --> 00:24:47,825
which is like, if something, everything goes wrong,

637
00:24:47,825 --> 00:24:49,627
you have a way to save something.

638
00:24:49,627 --> 00:24:55,000
And finally, having a stronger security team.

639
00:24:55,000 --> 00:24:58,033
And your security team means, the people who work on security,

640
00:24:58,033 --> 00:24:59,462
of course, you need more of those.

641
00:24:59,462 --> 00:25:01,726
But you need also your engineer, who don't work on security

642
00:25:01,726 --> 00:25:03,462
to help for security

643
00:25:03,462 --> 00:25:05,198
because security is not a matter of one guy.

644
00:25:05,198 --> 00:25:07,066
It's a matter of everyone.

645
00:25:07,066 --> 00:25:08,825
It's also the matter of your user.

646
00:25:08,825 --> 00:25:10,231
Your users are part of your security team.

647
00:25:10,231 --> 00:25:12,528
You should build a system for them to help you.

648
00:25:12,528 --> 00:25:13,528
They will find spam for you.

649
00:25:13,528 --> 00:25:15,000
They will report your phishing pages.

650
00:25:15,000 --> 00:25:18,099
They will help you to figure out this unexpected thing because,

651
00:25:18,099 --> 00:25:20,627
well, we have 900 million of those.

652
00:25:20,627 --> 00:25:22,693
So, you know, they spot quite a few things.

653
00:25:22,693 --> 00:25:25,429
And finally, the research community is your team.

654
00:25:25,429 --> 00:25:26,462
Pay them.

655
00:25:26,462 --> 00:25:27,956
If they find a bug, they have an idea

656
00:25:27,957 --> 00:25:30,627
on how to help your product, well, that's great.

657
00:25:30,627 --> 00:25:33,561
You can't have any of it, so that's your security team,

658
00:25:33,561 --> 00:25:35,593
and you should be very welcoming every bug

659
00:25:35,594 --> 00:25:39,099
as a positive contribution and not react badly.

660
00:25:39,099 --> 00:25:40,297
You should be grateful for those.

661
00:25:40,297 --> 00:25:41,594
Those are the --

662
00:25:41,594 --> 00:25:43,363
We believe it's really a sense

663
00:25:43,363 --> 00:25:46,198
of what we believe is making a strong product.

664
00:25:46,198 --> 00:25:49,825
So, thank you very much for listening to the talk,

665
00:25:49,825 --> 00:25:51,858
and if you have any questions, I will take those.

666
00:25:51,858 --> 00:25:53,462
[ Applause ]

667
00:25:53,462 --> 00:25:59,462
 

