1
00:00:10,850 --> 00:00:15,980
insider attacks on computer systems<font color="#CCCCCC"> are</font>

2
00:00:13,870 --> 00:00:18,290
really not<font color="#CCCCCC"> only about intellectual</font>

3
00:00:15,980 --> 00:00:20,599
<font color="#CCCCCC">property or data</font><font color="#E5E5E5"> leaking from</font>

4
00:00:18,290 --> 00:00:23,540
organizations<font color="#E5E5E5"> they can indeed harm</font>

5
00:00:20,599 --> 00:00:25,840
people<font color="#E5E5E5"> and today I don't want to</font>

6
00:00:23,540 --> 00:00:29,540
speculate<font color="#CCCCCC"> about the recent stories on</font>

7
00:00:25,840 --> 00:00:33,440
<font color="#CCCCCC">Hardware implants on server main boards</font>

8
00:00:29,540 --> 00:00:36,140
but we've all seen in public reports<font color="#CCCCCC"> I</font>

9
00:00:33,440 --> 00:00:39,110
think we're all<font color="#CCCCCC"> aware</font><font color="#E5E5E5"> that the lines</font>

10
00:00:36,140 --> 00:00:40,820
between our digital<font color="#E5E5E5"> lives and personal</font>

11
00:00:39,110 --> 00:00:43,310
safety<font color="#CCCCCC"> are</font><font color="#E5E5E5"> actually becoming</font>

12
00:00:40,820 --> 00:00:46,400
increasingly blurry<font color="#E5E5E5"> based on the public</font>

13
00:00:43,310 --> 00:00:48,200
<font color="#E5E5E5">reports</font><font color="#CCCCCC"> on the</font><font color="#E5E5E5"> Twitter insider data</font>

14
00:00:46,400 --> 00:00:51,500
leaks<font color="#E5E5E5"> that we've seen we may actually</font>

15
00:00:48,200 --> 00:00:56,540
never know what the direct impact on

16
00:00:51,500 --> 00:00:59,390
some individual slice was but what we

17
00:00:56,540 --> 00:01:00,769
know<font color="#E5E5E5"> is that some</font><font color="#CCCCCC"> journalists security</font>

18
00:00:59,390 --> 00:01:04,400
researchers and so on<font color="#CCCCCC"> were</font><font color="#E5E5E5"> actually</font>

19
00:01:00,770 --> 00:01:07,670
notified that their personal accounts

20
00:01:04,400 --> 00:01:09,490
were directly impacted<font color="#CCCCCC"> and that there</font>

21
00:01:07,670 --> 00:01:12,710
was some at least<font color="#E5E5E5"> alleged collection</font>

22
00:01:09,490 --> 00:01:15,919
connection<font color="#E5E5E5"> sorry</font><font color="#CCCCCC"> - state-sponsored</font>

23
00:01:12,710 --> 00:01:18,500
<font color="#CCCCCC">actors so when talking</font><font color="#E5E5E5"> about insiders</font>

24
00:01:15,920 --> 00:01:20,450
and what<font color="#CCCCCC"> insert attacks can do what do I</font>

25
00:01:18,500 --> 00:01:26,110
<font color="#CCCCCC">mean with insiders</font><font color="#E5E5E5"> within a scope</font><font color="#CCCCCC"> of</font>

26
00:01:20,450 --> 00:01:28,940
this talk<font color="#E5E5E5"> I mean any person who has</font>

27
00:01:26,110 --> 00:01:31,370
privileged access<font color="#CCCCCC"> to potentially</font>

28
00:01:28,940 --> 00:01:32,990
relevant<font color="#E5E5E5"> informational resources that</font>

29
00:01:31,370 --> 00:01:35,120
can<font color="#E5E5E5"> even include external parties</font>

30
00:01:32,990 --> 00:01:38,270
external parties potentially acting

31
00:01:35,120 --> 00:01:40,880
through remote control<font color="#CCCCCC"> mail ver with</font>

32
00:01:38,270 --> 00:01:43,190
privileges of those insider users so

33
00:01:40,880 --> 00:01:46,330
<font color="#CCCCCC">that intent</font><font color="#E5E5E5"> this definition is</font><font color="#CCCCCC"> actually</font>

34
00:01:43,190 --> 00:01:48,950
intentionally broad and look around<font color="#CCCCCC"> you</font>

35
00:01:46,330 --> 00:01:51,610
pretty much most people inside this room

36
00:01:48,950 --> 00:01:54,290
<font color="#CCCCCC">are insiders</font><font color="#E5E5E5"> in one way</font><font color="#CCCCCC"> or the</font><font color="#E5E5E5"> other</font>

37
00:01:51,610 --> 00:01:57,860
<font color="#CCCCCC">hardware protocol designers software</font>

38
00:01:54,290 --> 00:02:01,820
developers but<font color="#CCCCCC"> also logistics or a</font>

39
00:01:57,860 --> 00:02:03,590
retail shop personnel<font color="#E5E5E5"> now with all the</font>

40
00:02:01,820 --> 00:02:05,689
examples<font color="#E5E5E5"> that I'm gonna use in my talk</font>

41
00:02:03,590 --> 00:02:08,628
will be<font color="#E5E5E5"> based on Android and this</font>

42
00:02:05,689 --> 00:02:10,908
particular<font color="#E5E5E5"> ecosystem I believe that my</font>

43
00:02:08,628 --> 00:02:13,340
conclusions will apply a lot more

44
00:02:10,908 --> 00:02:15,980
broadly to<font color="#CCCCCC"> other areas as</font><font color="#E5E5E5"> well if you</font>

45
00:02:13,340 --> 00:02:18,609
look at<font color="#E5E5E5"> mobile phones what we have in</font>

46
00:02:15,980 --> 00:02:21,108
<font color="#E5E5E5">our pockets</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> then I think it's</font>

47
00:02:18,609 --> 00:02:23,220
<font color="#E5E5E5">undoubtedly true that</font><font color="#CCCCCC"> we currently</font><font color="#E5E5E5"> have</font>

48
00:02:21,109 --> 00:02:26,760
<font color="#CCCCCC">to implicitly</font><font color="#E5E5E5"> trust</font>

49
00:02:23,220 --> 00:02:30,180
a hugely long and complex chain<font color="#CCCCCC"> of</font>

50
00:02:26,760 --> 00:02:33,510
<font color="#E5E5E5">people and organizations</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> keep our</font>

51
00:02:30,180 --> 00:02:34,980
phones secure and to keep the<font color="#E5E5E5"> data that</font>

52
00:02:33,510 --> 00:02:39,299
that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> stored</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> these phones actually</font>

53
00:02:34,980 --> 00:02:42,420
private now insiders<font color="#E5E5E5"> in that chain may</font>

54
00:02:39,300 --> 00:02:45,870
be individuals or maybe even colluding

55
00:02:42,420 --> 00:02:48,089
among multiple<font color="#E5E5E5"> organizations that</font>

56
00:02:45,870 --> 00:02:49,770
picture I have to<font color="#E5E5E5"> admit is a little bit</font>

57
00:02:48,090 --> 00:02:52,080
<font color="#E5E5E5">simplified with hardware at the top</font>

58
00:02:49,770 --> 00:02:54,870
<font color="#CCCCCC">softer</font><font color="#E5E5E5"> the bottom unfortunately the real</font>

59
00:02:52,080 --> 00:02:57,870
supply chain is a tiny<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more complex</font>

60
00:02:54,870 --> 00:03:00,420
so<font color="#E5E5E5"> let's zoom into a still simplified</font>

61
00:02:57,870 --> 00:03:02,340
point of view let's<font color="#E5E5E5"> start here at the</font>

62
00:03:00,420 --> 00:03:05,519
<font color="#CCCCCC">top left corner</font><font color="#E5E5E5"> with chipset designers</font>

63
00:03:02,340 --> 00:03:08,700
<font color="#E5E5E5">that is actually making designs here in</font>

64
00:03:05,520 --> 00:03:13,380
this space<font color="#CCCCCC"> 4 CPUs main memory sensors</font>

65
00:03:08,700 --> 00:03:16,310
GPUs<font color="#E5E5E5"> or low-power always-on DSPs for</font>

66
00:03:13,380 --> 00:03:18,930
voice<font color="#E5E5E5"> assistance or activity recognition</font>

67
00:03:16,310 --> 00:03:21,540
<font color="#E5E5E5">those chips</font><font color="#CCCCCC"> at designs are</font><font color="#E5E5E5"> shipped to</font>

68
00:03:18,930 --> 00:03:23,970
<font color="#E5E5E5">fabs that make the actual chips then we</font>

69
00:03:21,540 --> 00:03:26,250
have a party<font color="#E5E5E5"> that's called the</font><font color="#CCCCCC"> odm the</font>

70
00:03:23,970 --> 00:03:28,950
<font color="#CCCCCC">so called</font><font color="#E5E5E5"> original device manufacturer</font>

71
00:03:26,250 --> 00:03:31,800
which combines these multiple chips<font color="#E5E5E5"> into</font>

72
00:03:28,950 --> 00:03:34,049
<font color="#CCCCCC">a</font><font color="#E5E5E5"> coherent Hardware system design which</font>

73
00:03:31,800 --> 00:03:36,480
then gets shipped off to<font color="#E5E5E5"> an OEM or</font>

74
00:03:34,050 --> 00:03:39,870
original equipment manufacturer which

75
00:03:36,480 --> 00:03:41,700
then finally boxes and<font color="#E5E5E5"> labels that</font>

76
00:03:39,870 --> 00:03:43,320
product<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> actually the first</font>

77
00:03:41,700 --> 00:03:44,820
<font color="#CCCCCC">company name that most users will be</font>

78
00:03:43,320 --> 00:03:47,220
<font color="#CCCCCC">familiar</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> because</font><font color="#E5E5E5"> that's what's</font>

79
00:03:44,820 --> 00:03:49,590
<font color="#E5E5E5">written on the</font><font color="#CCCCCC"> outside of the box</font><font color="#E5E5E5"> now on</font>

80
00:03:47,220 --> 00:03:52,950
the<font color="#E5E5E5"> software side it's at least as</font>

81
00:03:49,590 --> 00:03:55,260
<font color="#CCCCCC">complex the u.s. vendor</font><font color="#E5E5E5"> writes probably</font>

82
00:03:52,950 --> 00:03:58,589
the majority<font color="#CCCCCC"> of code but</font><font color="#E5E5E5"> this is this</font>

83
00:03:55,260 --> 00:04:00,329
integrates<font color="#E5E5E5"> chip drivers and low-level</font>

84
00:03:58,590 --> 00:04:03,180
<font color="#CCCCCC">hardware</font><font color="#E5E5E5"> initialization code from the</font>

85
00:04:00,330 --> 00:04:06,630
<font color="#CCCCCC">chipset designers</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is then bundled</font>

86
00:04:03,180 --> 00:04:09,270
<font color="#E5E5E5">up by the odium and OEM with</font><font color="#CCCCCC"> third-party</font>

87
00:04:06,630 --> 00:04:11,760
services and<font color="#E5E5E5"> sometimes also own apks own</font>

88
00:04:09,270 --> 00:04:15,000
apps that are put onto this<font color="#E5E5E5"> device then</font>

89
00:04:11,760 --> 00:04:17,969
<font color="#E5E5E5">the complete</font><font color="#CCCCCC"> ensemble of hardware and</font>

90
00:04:15,000 --> 00:04:20,519
<font color="#E5E5E5">software</font><font color="#CCCCCC"> is finally shipped to end-users</font>

91
00:04:17,970 --> 00:04:22,919
typically through multiple<font color="#E5E5E5"> hops</font><font color="#CCCCCC"> to an</font>

92
00:04:20,519 --> 00:04:25,109
online<font color="#E5E5E5"> or retail store</font><font color="#CCCCCC"> at which</font><font color="#E5E5E5"> point</font>

93
00:04:22,919 --> 00:04:27,180
shop personnel<font color="#E5E5E5"> may take the phone out</font><font color="#CCCCCC"> of</font>

94
00:04:25,110 --> 00:04:29,580
<font color="#E5E5E5">the box help with inserting</font><font color="#CCCCCC"> the SIM card</font>

95
00:04:27,180 --> 00:04:31,680
<font color="#CCCCCC">help with walking through the first use</font>

96
00:04:29,580 --> 00:04:32,940
<font color="#E5E5E5">wizard even set</font><font color="#CCCCCC"> up some dummy accounts</font>

97
00:04:31,680 --> 00:04:36,030
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is perceived as a</font><font color="#CCCCCC"> value-added</font>

98
00:04:32,940 --> 00:04:36,580
<font color="#E5E5E5">service of course any party within this</font>

99
00:04:36,030 --> 00:04:39,429
long

100
00:04:36,580 --> 00:04:41,830
<font color="#CCCCCC">Chane could potentially add malicious</font>

101
00:04:39,430 --> 00:04:44,470
code to the device<font color="#E5E5E5"> eater in a broad</font>

102
00:04:41,830 --> 00:04:47,590
sweep for all<font color="#E5E5E5"> users of that particular</font>

103
00:04:44,470 --> 00:04:51,090
<font color="#CCCCCC">product</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> even</font><font color="#E5E5E5"> more dangerously</font>

104
00:04:47,590 --> 00:04:55,388
targeted to only select<font color="#E5E5E5"> individual users</font>

105
00:04:51,090 --> 00:04:57,310
it seems daunting<font color="#CCCCCC"> even impossible to try</font>

106
00:04:55,389 --> 00:04:59,259
<font color="#E5E5E5">to get any degree of reassurance or</font>

107
00:04:57,310 --> 00:05:01,599
guarantee<font color="#E5E5E5"> that the device is</font><font color="#CCCCCC"> actually</font>

108
00:04:59,259 --> 00:05:04,509
working<font color="#E5E5E5"> as expected</font><font color="#CCCCCC"> but let's not give</font>

109
00:05:01,599 --> 00:05:06,909
up<font color="#E5E5E5"> I'm proposing to that let's break the</font>

110
00:05:04,509 --> 00:05:08,919
<font color="#E5E5E5">problem part here the first principle</font>

111
00:05:06,909 --> 00:05:12,039
<font color="#CCCCCC">that I suggest is to reduce this</font>

112
00:05:08,919 --> 00:05:14,430
<font color="#E5E5E5">complexity by decomposition</font><font color="#CCCCCC"> every</font>

113
00:05:12,039 --> 00:05:17,500
component<font color="#E5E5E5"> in such a complex system</font>

114
00:05:14,430 --> 00:05:19,990
<font color="#E5E5E5">should be trusted only</font><font color="#CCCCCC"> as</font><font color="#E5E5E5"> far</font><font color="#CCCCCC"> as</font>

115
00:05:17,500 --> 00:05:22,389
strictly necessary<font color="#CCCCCC"> the component should</font>

116
00:05:19,990 --> 00:05:25,719
<font color="#E5E5E5">be</font><font color="#CCCCCC"> as simple as possible</font><font color="#E5E5E5"> in itself and</font>

117
00:05:22,389 --> 00:05:27,069
we should<font color="#E5E5E5"> only have as few of those</font>

118
00:05:25,719 --> 00:05:29,500
trusted components as we can get away

119
00:05:27,069 --> 00:05:32,110
with<font color="#E5E5E5"> now this makes it easier to detect</font>

120
00:05:29,500 --> 00:05:35,020
both genuine mistakes<font color="#E5E5E5"> and malicious</font>

121
00:05:32,110 --> 00:05:37,120
insider attacks one<font color="#E5E5E5"> example is the use</font>

122
00:05:35,020 --> 00:05:39,188
<font color="#CCCCCC">of so-called</font><font color="#E5E5E5"> secure elements secure</font>

123
00:05:37,120 --> 00:05:41,979
elements are<font color="#CCCCCC"> cryptical processors that</font>

124
00:05:39,189 --> 00:05:45,460
<font color="#E5E5E5">can store and use cryptographic keys and</font>

125
00:05:41,979 --> 00:05:48,270
therefore not have to use<font color="#E5E5E5"> those keys on</font>

126
00:05:45,460 --> 00:05:50,529
them significantly<font color="#E5E5E5"> more complex main CPU</font>

127
00:05:48,270 --> 00:05:52,779
both in the server space and<font color="#CCCCCC"> our mobile</font>

128
00:05:50,529 --> 00:05:54,879
<font color="#E5E5E5">phones</font><font color="#CCCCCC"> these are typically used and</font>

129
00:05:52,779 --> 00:05:56,409
given<font color="#CCCCCC"> Spector meltdown</font><font color="#E5E5E5"> row hammer for</font>

130
00:05:54,879 --> 00:05:57,669
<font color="#CCCCCC">shadow and all the other hardware level</font>

131
00:05:56,409 --> 00:05:59,740
attacks<font color="#E5E5E5"> that we've</font><font color="#CCCCCC"> seen and that we are</font>

132
00:05:57,669 --> 00:06:02,500
<font color="#E5E5E5">probably about to see this seems like an</font>

133
00:05:59,740 --> 00:06:05,639
important first step<font color="#CCCCCC"> another example</font>

134
00:06:02,500 --> 00:06:08,440
from Android is project<font color="#CCCCCC"> rebel which</font>

135
00:06:05,639 --> 00:06:09,969
recently<font color="#E5E5E5"> created so-called hardware</font>

136
00:06:08,440 --> 00:06:13,419
abstraction layer components or<font color="#E5E5E5"> hell's</font>

137
00:06:09,969 --> 00:06:15,969
<font color="#E5E5E5">that mediates access between core OS</font>

138
00:06:13,419 --> 00:06:19,240
<font color="#CCCCCC">services and drivers</font><font color="#E5E5E5"> running in the</font>

139
00:06:15,969 --> 00:06:21,039
kernel space by decomposing<font color="#E5E5E5"> those</font>

140
00:06:19,240 --> 00:06:23,620
interfaces<font color="#E5E5E5"> every single one of those</font>

141
00:06:21,039 --> 00:06:25,900
hell's can be made simpler and can be

142
00:06:23,620 --> 00:06:28,690
<font color="#E5E5E5">sent boxed</font><font color="#CCCCCC"> in our case with acid onyx</font>

143
00:06:25,900 --> 00:06:31,539
rules but let's talk<font color="#E5E5E5"> about the different</font>

144
00:06:28,690 --> 00:06:33,490
<font color="#E5E5E5">layers in which we have such hardware</font>

145
00:06:31,539 --> 00:06:37,479
software components the lowest layer

146
00:06:33,490 --> 00:06:39,930
<font color="#CCCCCC">Hardware itself is still hard so for</font>

147
00:06:37,479 --> 00:06:42,520
details on that<font color="#E5E5E5"> I happily</font><font color="#CCCCCC"> refer to</font>

148
00:06:39,930 --> 00:06:45,940
yesterday's yes the<font color="#CCCCCC"> mornings excellent</font>

149
00:06:42,520 --> 00:06:47,799
talks by<font color="#CCCCCC"> Cynthia and</font><font color="#E5E5E5"> Ryan on harder</font>

150
00:06:45,940 --> 00:06:49,910
vulnerabilities in general and hardware

151
00:06:47,800 --> 00:06:51,920
security modules in particular

152
00:06:49,910 --> 00:06:54,020
<font color="#CCCCCC">tenda scope of this talk</font><font color="#E5E5E5"> I would rather</font>

153
00:06:51,920 --> 00:06:56,330
<font color="#CCCCCC">focus on</font><font color="#E5E5E5"> the software</font><font color="#CCCCCC"> side</font><font color="#E5E5E5"> the lowest</font>

154
00:06:54,020 --> 00:06:58,310
layer of<font color="#E5E5E5"> the software stack is what we</font>

155
00:06:56,330 --> 00:07:00,320
typically<font color="#E5E5E5"> call firm</font><font color="#CCCCCC"> Berg firma is</font><font color="#E5E5E5"> what</font>

156
00:06:58,310 --> 00:07:02,710
<font color="#E5E5E5">runs on all the</font><font color="#CCCCCC"> auxilary processors from</font>

157
00:07:00,320 --> 00:07:06,469
radios down to those secure elements

158
00:07:02,710 --> 00:07:09,049
<font color="#E5E5E5">even</font><font color="#CCCCCC"> if we assume that trusted</font><font color="#E5E5E5"> hardware</font>

159
00:07:06,470 --> 00:07:10,550
to be simple<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> assumption might</font>

160
00:07:09,050 --> 00:07:12,440
be warranted simple enough to be

161
00:07:10,550 --> 00:07:15,470
actually correct<font color="#E5E5E5"> then the firm were</font>

162
00:07:12,440 --> 00:07:17,000
running on these<font color="#CCCCCC"> axillary</font><font color="#E5E5E5"> processors can</font>

163
00:07:15,470 --> 00:07:20,300
still make the whole system insecure<font color="#E5E5E5"> and</font>

164
00:07:17,000 --> 00:07:23,060
this is true<font color="#E5E5E5"> for all such systems where</font>

165
00:07:20,300 --> 00:07:26,720
the<font color="#CCCCCC"> forever can be upgraded insiders</font>

166
00:07:23,060 --> 00:07:29,840
with full access to their respective

167
00:07:26,720 --> 00:07:32,600
signing<font color="#E5E5E5"> keys could create forever that</font>

168
00:07:29,840 --> 00:07:33,919
still leaks those user<font color="#E5E5E5"> secret keys and</font>

169
00:07:32,600 --> 00:07:35,360
therefore makes them<font color="#CCCCCC"> available for a</font>

170
00:07:33,920 --> 00:07:40,190
further escalating attacks

171
00:07:35,360 --> 00:07:42,080
<font color="#CCCCCC">no that is since</font><font color="#E5E5E5"> that is true for</font><font color="#CCCCCC"> all</font>

172
00:07:40,190 --> 00:07:45,260
<font color="#CCCCCC">the systems were forever can be updated</font>

173
00:07:42,080 --> 00:07:47,750
<font color="#CCCCCC">from rackmount</font><font color="#E5E5E5"> hardware security modules</font>

174
00:07:45,260 --> 00:07:50,780
used in<font color="#CCCCCC"> the server space to enclaves on</font>

175
00:07:47,750 --> 00:07:54,230
<font color="#E5E5E5">more complex CPUs</font><font color="#CCCCCC"> or systems on</font><font color="#E5E5E5"> chips</font>

176
00:07:50,780 --> 00:07:56,840
down to smart card level chips<font color="#E5E5E5"> we need</font>

177
00:07:54,230 --> 00:07:58,790
to fix<font color="#E5E5E5"> that problem and as Ryan</font>

178
00:07:56,840 --> 00:08:02,090
mentioned yesterday the<font color="#E5E5E5"> fact that most</font>

179
00:07:58,790 --> 00:08:04,010
<font color="#E5E5E5">such HSMs</font><font color="#CCCCCC"> art like boxes</font><font color="#E5E5E5"> is a huge</font>

180
00:08:02,090 --> 00:08:08,119
potential risk for such insider attacks

181
00:08:04,010 --> 00:08:11,659
<font color="#E5E5E5">now there is one hope because there</font><font color="#CCCCCC"> is</font>

182
00:08:08,120 --> 00:08:14,600
at least some primitive<font color="#CCCCCC"> low-level loader</font>

183
00:08:11,660 --> 00:08:16,250
code<font color="#E5E5E5"> that in itself is typically not</font>

184
00:08:14,600 --> 00:08:18,320
modifiable<font color="#CCCCCC"> this is where you can</font><font color="#E5E5E5"> start</font>

185
00:08:16,250 --> 00:08:20,270
to protect insider attacks so in the

186
00:08:18,320 --> 00:08:22,400
following<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> to pick</font><font color="#E5E5E5"> three</font>

187
00:08:20,270 --> 00:08:24,229
<font color="#E5E5E5">specific examples of recent</font><font color="#CCCCCC"> changes that</font>

188
00:08:22,400 --> 00:08:26,200
were made<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the Android platform</font><font color="#E5E5E5"> to</font>

189
00:08:24,230 --> 00:08:29,000
<font color="#E5E5E5">mitigate better against the insiders</font>

190
00:08:26,200 --> 00:08:30,650
<font color="#E5E5E5">Android</font><font color="#CCCCCC"> PI is the first release that</font>

191
00:08:29,000 --> 00:08:33,169
introduced the definition of strongbox

192
00:08:30,650 --> 00:08:35,329
<font color="#CCCCCC">which is an API</font><font color="#E5E5E5"> to exactly do</font><font color="#CCCCCC"> that to</font>

193
00:08:33,169 --> 00:08:37,490
store and process cryptographic keys on

194
00:08:35,330 --> 00:08:39,110
<font color="#CCCCCC">dedicated secure hardware and it is</font>

195
00:08:37,490 --> 00:08:41,630
strongly<font color="#CCCCCC"> recommended for that to be</font>

196
00:08:39,110 --> 00:08:43,490
implemented<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> way that whenever the</font>

197
00:08:41,630 --> 00:08:46,610
<font color="#CCCCCC">firmware on</font><font color="#E5E5E5"> such a secure hardware is</font>

198
00:08:43,490 --> 00:08:52,550
updated users secret keys<font color="#CCCCCC"> read wiped or</font>

199
00:08:46,610 --> 00:08:54,530
otherwise made inaccessible unless the

200
00:08:52,550 --> 00:08:56,420
<font color="#CCCCCC">users knowledge factor and by knowledge</font>

201
00:08:54,530 --> 00:09:00,020
<font color="#E5E5E5">factor I mean pin code password or</font>

202
00:08:56,420 --> 00:09:01,459
pattern is known at that<font color="#CCCCCC"> time</font><font color="#E5E5E5"> it can be</font>

203
00:09:00,020 --> 00:09:02,949
<font color="#CCCCCC">implemented in different ways the</font><font color="#E5E5E5"> Google</font>

204
00:09:01,460 --> 00:09:05,050
pixel<font color="#CCCCCC"> 2 and pixel 3 and</font>

205
00:09:02,950 --> 00:09:07,890
differently in pixel<font color="#CCCCCC"> two in the former</font>

206
00:09:05,050 --> 00:09:11,979
former case we use a secure element

207
00:09:07,890 --> 00:09:13,750
<font color="#E5E5E5">available by</font><font color="#CCCCCC"> n</font><font color="#E5E5E5"> XP</font><font color="#CCCCCC"> and this was modified</font>

208
00:09:11,980 --> 00:09:15,340
<font color="#CCCCCC">with two key points the</font><font color="#E5E5E5"> first key point</font>

209
00:09:13,750 --> 00:09:17,740
being the travel card applet<font color="#CCCCCC"> that</font>

210
00:09:15,340 --> 00:09:19,600
actually stores these<font color="#E5E5E5"> cryptographic keys</font>

211
00:09:17,740 --> 00:09:21,790
<font color="#E5E5E5">source the user secrets</font><font color="#CCCCCC"> does</font>

212
00:09:19,600 --> 00:09:24,490
intentionally not implement<font color="#E5E5E5"> any backup</font>

213
00:09:21,790 --> 00:09:27,550
code<font color="#E5E5E5"> the second key change is that the</font>

214
00:09:24,490 --> 00:09:30,280
OS loader<font color="#E5E5E5"> of that</font><font color="#CCCCCC"> nxp secure element</font><font color="#E5E5E5"> OS</font>

215
00:09:27,550 --> 00:09:33,459
itself has been<font color="#E5E5E5"> modified to</font><font color="#CCCCCC"> only allow</font>

216
00:09:30,280 --> 00:09:34,870
an update<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the u.s. itself when that</font>

217
00:09:33,460 --> 00:09:36,910
particular<font color="#E5E5E5"> Java card applet has</font>

218
00:09:34,870 --> 00:09:38,110
previously been<font color="#CCCCCC"> uninstalled on pixel</font>

219
00:09:36,910 --> 00:09:40,300
<font color="#E5E5E5">three it's different because</font><font color="#CCCCCC"> there is</font>

220
00:09:38,110 --> 00:09:43,330
<font color="#CCCCCC">just too</font><font color="#E5E5E5"> firm</font><font color="#CCCCCC"> were slots they're just</font>

221
00:09:40,300 --> 00:09:44,890
updated atomically<font color="#E5E5E5"> and when in whenever</font>

222
00:09:43,330 --> 00:09:47,350
<font color="#E5E5E5">a new firmware is installed it's put</font>

223
00:09:44,890 --> 00:09:50,470
into a hold state and to transition to

224
00:09:47,350 --> 00:09:52,030
<font color="#CCCCCC">that</font><font color="#E5E5E5"> active</font><font color="#CCCCCC"> state first the user</font>

225
00:09:50,470 --> 00:09:54,520
knowledge factor has to<font color="#CCCCCC"> be modified</font>

226
00:09:52,030 --> 00:09:57,459
which again is ensured by<font color="#CCCCCC"> the</font><font color="#E5E5E5"> little</font>

227
00:09:54,520 --> 00:09:59,890
firmer<font color="#E5E5E5"> in both cases the</font><font color="#CCCCCC"> effect is</font><font color="#E5E5E5"> the</font>

228
00:09:57,460 --> 00:10:01,720
<font color="#CCCCCC">same that whenever firmware is upgraded</font>

229
00:09:59,890 --> 00:10:05,020
without knowing the<font color="#E5E5E5"> user's knowledge</font>

230
00:10:01,720 --> 00:10:07,420
factor at that time the user secrets are

231
00:10:05,020 --> 00:10:11,020
wiped or made inaccessible

232
00:10:07,420 --> 00:10:12,610
now<font color="#E5E5E5"> there is still that other case that</font>

233
00:10:11,020 --> 00:10:13,870
if<font color="#E5E5E5"> you have physical control over the</font>

234
00:10:12,610 --> 00:10:16,210
device and<font color="#E5E5E5"> you don't have to use your</font>

235
00:10:13,870 --> 00:10:18,220
knowledge factor you can still reset and

236
00:10:16,210 --> 00:10:19,720
update the hardware and the firmware

237
00:10:18,220 --> 00:10:21,940
running on that hardware<font color="#E5E5E5"> which is</font>

238
00:10:19,720 --> 00:10:25,140
<font color="#E5E5E5">important for cases like repairs RMA</font>

239
00:10:21,940 --> 00:10:28,510
repairs and so on but<font color="#E5E5E5"> in that case when</font>

240
00:10:25,140 --> 00:10:31,210
updates are<font color="#E5E5E5"> forcibly installed this</font>

241
00:10:28,510 --> 00:10:33,850
<font color="#E5E5E5">behavior ensures that user secrets</font><font color="#CCCCCC"> can</font>

242
00:10:31,210 --> 00:10:36,070
<font color="#CCCCCC">not leak from the</font><font color="#E5E5E5"> device now one layer</font>

243
00:10:33,850 --> 00:10:38,170
up<font color="#E5E5E5"> the system software or that we</font>

244
00:10:36,070 --> 00:10:40,330
typically call the OS<font color="#E5E5E5"> running on</font><font color="#CCCCCC"> a main</font>

245
00:10:38,170 --> 00:10:42,099
<font color="#E5E5E5">CPU the trade off has to be a little bit</font>

246
00:10:40,330 --> 00:10:45,040
<font color="#E5E5E5">different because this layer should</font><font color="#CCCCCC"> be</font>

247
00:10:42,100 --> 00:10:46,540
updated<font color="#E5E5E5"> much more frequently and because</font>

248
00:10:45,040 --> 00:10:47,709
of<font color="#E5E5E5"> the frequency</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> those updates that</font>

249
00:10:46,540 --> 00:10:49,569
should happen<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the background so</font><font color="#CCCCCC"> as</font>

250
00:10:47,710 --> 00:10:52,150
<font color="#E5E5E5">not to bother users so we need a</font>

251
00:10:49,570 --> 00:10:53,980
<font color="#E5E5E5">different</font><font color="#CCCCCC"> approach then wiping and re</font>

252
00:10:52,150 --> 00:10:56,800
importing the<font color="#CCCCCC"> data every time in such an</font>

253
00:10:53,980 --> 00:11:00,940
update<font color="#CCCCCC"> happens I propose that for this</font>

254
00:10:56,800 --> 00:11:04,000
layer transparency is key with open

255
00:11:00,940 --> 00:11:06,280
source operating systems those images

256
00:11:04,000 --> 00:11:09,610
released and signed by<font color="#CCCCCC"> a manufacturer</font>

257
00:11:06,280 --> 00:11:11,199
<font color="#E5E5E5">could be verified</font><font color="#CCCCCC"> by third parties</font>

258
00:11:09,610 --> 00:11:13,480
taking<font color="#E5E5E5"> source code analyzing the source</font>

259
00:11:11,200 --> 00:11:15,910
code rebuilding it in<font color="#CCCCCC"> a reproducible way</font>

260
00:11:13,480 --> 00:11:16,450
<font color="#E5E5E5">and verifying</font><font color="#CCCCCC"> that those hashes</font><font color="#E5E5E5"> actually</font>

261
00:11:15,910 --> 00:11:19,060
<font color="#E5E5E5">match</font><font color="#CCCCCC"> what</font>

262
00:11:16,450 --> 00:11:22,060
has been published<font color="#CCCCCC"> now if we add those</font>

263
00:11:19,060 --> 00:11:25,420
<font color="#CCCCCC">hashes to</font><font color="#E5E5E5"> a public time-stamped</font>

264
00:11:22,060 --> 00:11:27,489
append-only log<font color="#E5E5E5"> it makes it verifiable</font>

265
00:11:25,420 --> 00:11:29,800
<font color="#E5E5E5">and much like certificate transparency</font>

266
00:11:27,490 --> 00:11:31,690
so yes I'm<font color="#E5E5E5"> intentionally not saying</font>

267
00:11:29,800 --> 00:11:33,699
blockchain here<font color="#E5E5E5"> there are other ways of</font>

268
00:11:31,690 --> 00:11:36,310
having an append-only log much like

269
00:11:33,700 --> 00:11:39,550
certificate transparency for TLS

270
00:11:36,310 --> 00:11:42,280
certificates<font color="#E5E5E5"> thank you there are simple</font>

271
00:11:39,550 --> 00:11:45,130
<font color="#E5E5E5">ways much like that there's that only</font>

272
00:11:42,280 --> 00:11:47,860
leaves<font color="#CCCCCC"> an adversary two possible ways</font>

273
00:11:45,130 --> 00:11:49,750
<font color="#CCCCCC">Eater and a tampered with the</font>

274
00:11:47,860 --> 00:11:53,410
potentially malicious<font color="#E5E5E5"> firmware is put</font>

275
00:11:49,750 --> 00:11:54,940
<font color="#E5E5E5">into that log at which point</font><font color="#CCCCCC"> maybe the</font>

276
00:11:53,410 --> 00:11:56,410
<font color="#E5E5E5">firmware itself is only targeted to a</font>

277
00:11:54,940 --> 00:11:58,930
few<font color="#CCCCCC"> devices maybe</font><font color="#E5E5E5"> the firmware itself is</font>

278
00:11:56,410 --> 00:12:01,329
not<font color="#E5E5E5"> public</font><font color="#CCCCCC"> but the existence of such a</font>

279
00:11:58,930 --> 00:12:03,520
<font color="#E5E5E5">firmware is being made public by putting</font>

280
00:12:01,330 --> 00:12:06,010
it into the law<font color="#E5E5E5"> and the existence of</font>

281
00:12:03,520 --> 00:12:08,710
<font color="#E5E5E5">that</font><font color="#CCCCCC"> firm repeating public is in itself</font>

282
00:12:06,010 --> 00:12:12,880
a<font color="#CCCCCC"> very strong deterrence against such</font>

283
00:12:08,710 --> 00:12:14,260
targeted attacks option<font color="#CCCCCC"> B not put the</font>

284
00:12:12,880 --> 00:12:15,910
hash into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> log not put the firmware</font>

285
00:12:14,260 --> 00:12:19,510
the existence of the<font color="#E5E5E5"> fermentor log in</font>

286
00:12:15,910 --> 00:12:21,579
which case OS<font color="#E5E5E5"> uploader code can start to</font>

287
00:12:19,510 --> 00:12:24,910
refuse applying<font color="#E5E5E5"> that update when there</font>

288
00:12:21,580 --> 00:12:27,940
is no proof of inclusion in any of those

289
00:12:24,910 --> 00:12:29,230
logs<font color="#CCCCCC"> while this does not automatically</font>

290
00:12:27,940 --> 00:12:32,290
make the<font color="#CCCCCC"> firmware running on a device</font>

291
00:12:29,230 --> 00:12:34,750
secure it makes updates<font color="#E5E5E5"> transparent and</font>

292
00:12:32,290 --> 00:12:37,689
creates a chain of<font color="#E5E5E5"> auditability</font><font color="#CCCCCC"> and</font>

293
00:12:34,750 --> 00:12:40,330
again<font color="#E5E5E5"> Android</font><font color="#CCCCCC"> Pi enables the first step</font>

294
00:12:37,690 --> 00:12:43,060
toward such a log the<font color="#E5E5E5"> so-called</font><font color="#CCCCCC"> VP meta</font>

295
00:12:40,330 --> 00:12:45,370
structure which is basically a hash<font color="#E5E5E5"> over</font>

296
00:12:43,060 --> 00:12:48,910
all the read-only partitions that<font color="#E5E5E5"> make</font>

297
00:12:45,370 --> 00:12:50,950
up the basic OS<font color="#CCCCCC"> firmware is passed on</font>

298
00:12:48,910 --> 00:12:53,199
<font color="#CCCCCC">from the</font><font color="#E5E5E5"> low-level bootloader that</font>

299
00:12:50,950 --> 00:12:54,970
actually verifies<font color="#CCCCCC"> that during boot up to</font>

300
00:12:53,200 --> 00:12:58,150
the<font color="#CCCCCC"> so-called key master component key</font>

301
00:12:54,970 --> 00:13:00,940
master<font color="#E5E5E5"> is one implementation software</font>

302
00:12:58,150 --> 00:13:02,770
implementation on<font color="#CCCCCC"> a DTE</font><font color="#E5E5E5"> and the other</font>

303
00:13:00,940 --> 00:13:05,110
component would be strongbox<font color="#CCCCCC"> so this</font>

304
00:13:02,770 --> 00:13:07,540
hash<font color="#CCCCCC"> is passed to both implementations</font>

305
00:13:05,110 --> 00:13:10,660
<font color="#E5E5E5">and can then be included in</font><font color="#CCCCCC"> what we call</font>

306
00:13:07,540 --> 00:13:13,599
<font color="#E5E5E5">the key at the station certificates now</font>

307
00:13:10,660 --> 00:13:15,550
how<font color="#CCCCCC"> can we</font><font color="#E5E5E5"> use that if any third party</font>

308
00:13:13,600 --> 00:13:18,220
can now download<font color="#E5E5E5"> images for that say a</font>

309
00:13:15,550 --> 00:13:21,219
pixel 3 device<font color="#E5E5E5"> use the recently updated</font>

310
00:13:18,220 --> 00:13:25,420
<font color="#CCCCCC">ADB tool binary to independently create</font>

311
00:13:21,220 --> 00:13:28,630
<font color="#E5E5E5">that digest</font><font color="#CCCCCC"> VB meta</font><font color="#E5E5E5"> digest and ask the</font>

312
00:13:25,420 --> 00:13:29,170
running<font color="#CCCCCC"> system for a new key</font><font color="#E5E5E5"> attestation</font>

313
00:13:28,630 --> 00:13:30,609
sir

314
00:13:29,170 --> 00:13:32,979
for a newly<font color="#CCCCCC"> create the key that</font><font color="#E5E5E5"> is</font>

315
00:13:30,609 --> 00:13:34,869
<font color="#E5E5E5">stored in</font><font color="#CCCCCC"> the secure hardware</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> key</font>

316
00:13:32,980 --> 00:13:37,839
<font color="#CCCCCC">the station certificate will include</font>

317
00:13:34,869 --> 00:13:39,549
that<font color="#E5E5E5"> VB meta hash of the running system</font>

318
00:13:37,839 --> 00:13:41,019
<font color="#E5E5E5">in the certificate and</font><font color="#CCCCCC"> it can be</font>

319
00:13:39,549 --> 00:13:43,179
independently verified<font color="#CCCCCC"> of what is</font>

320
00:13:41,019 --> 00:13:45,369
actually<font color="#CCCCCC"> running our device</font><font color="#E5E5E5"> in the</font>

321
00:13:43,179 --> 00:13:47,589
appendix<font color="#E5E5E5"> of my slides</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> will be</font>

322
00:13:45,369 --> 00:13:49,269
<font color="#CCCCCC">online after the talk I have more</font>

323
00:13:47,589 --> 00:13:50,739
<font color="#E5E5E5">technical detail on how</font><font color="#CCCCCC"> that actually</font>

324
00:13:49,269 --> 00:13:53,799
<font color="#E5E5E5">works</font><font color="#CCCCCC"> and how everybody</font><font color="#E5E5E5"> can reproduce</font>

325
00:13:50,739 --> 00:13:56,559
that now<font color="#E5E5E5"> the next logical step would be</font>

326
00:13:53,799 --> 00:13:58,329
<font color="#CCCCCC">to establish</font><font color="#E5E5E5"> a public log of all such</font>

327
00:13:56,559 --> 00:14:00,399
released system images<font color="#E5E5E5"> and we are</font>

328
00:13:58,329 --> 00:14:02,829
currently<font color="#E5E5E5"> evaluating</font><font color="#CCCCCC"> various options to</font>

329
00:14:00,399 --> 00:14:04,839
do so if anybody wants<font color="#CCCCCC"> to cooperate</font><font color="#E5E5E5"> on</font>

330
00:14:02,829 --> 00:14:06,819
<font color="#E5E5E5">such efforts please reach out to me</font>

331
00:14:04,839 --> 00:14:10,059
we're very open to<font color="#E5E5E5"> collaboration here to</font>

332
00:14:06,819 --> 00:14:11,919
make this a call the lock the last part

333
00:14:10,059 --> 00:14:14,469
I want to<font color="#E5E5E5"> give a specific example on is</font>

334
00:14:11,919 --> 00:14:16,859
backups which are at the<font color="#CCCCCC"> intersection</font>

335
00:14:14,470 --> 00:14:20,290
<font color="#CCCCCC">between the system OS layer and apps</font>

336
00:14:16,859 --> 00:14:23,139
android<font color="#CCCCCC"> PI</font><font color="#E5E5E5"> again introduced client-side</font>

337
00:14:20,290 --> 00:14:25,029
encrypted backups which we could<font color="#E5E5E5"> also</font>

338
00:14:23,139 --> 00:14:26,980
<font color="#E5E5E5">call end-to-end encrypted from the point</font>

339
00:14:25,029 --> 00:14:29,559
<font color="#E5E5E5">of</font><font color="#CCCCCC"> view</font><font color="#E5E5E5"> of Google Drive being the actual</font>

340
00:14:26,980 --> 00:14:32,529
<font color="#CCCCCC">store for the backups themselves and I'd</font>

341
00:14:29,559 --> 00:14:34,118
like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> run through</font><font color="#E5E5E5"> the core parts of</font>

342
00:14:32,529 --> 00:14:36,610
that protocol<font color="#E5E5E5"> right now because after</font>

343
00:14:34,119 --> 00:14:39,009
<font color="#CCCCCC">all this is</font><font color="#E5E5E5"> enigma so I wanted to have</font>

344
00:14:36,610 --> 00:14:40,809
some<font color="#CCCCCC"> crypt</font><font color="#E5E5E5"> on the slides crypto as in</font>

345
00:14:39,009 --> 00:14:45,369
<font color="#E5E5E5">cryptography not</font><font color="#CCCCCC"> cryptocurrency</font><font color="#E5E5E5"> thank</font>

346
00:14:40,809 --> 00:14:47,980
you so much and therefore<font color="#E5E5E5"> let's take</font>

347
00:14:45,369 --> 00:14:50,559
<font color="#CCCCCC">here</font><font color="#E5E5E5"> two phones on the left side we have</font>

348
00:14:47,980 --> 00:14:51,759
a phone that creates a backup clients

349
00:14:50,559 --> 00:14:53,350
are<font color="#CCCCCC"> decrypted on the right side we have</font>

350
00:14:51,759 --> 00:14:55,179
a phone that<font color="#E5E5E5"> wants to restore that</font>

351
00:14:53,350 --> 00:14:56,919
backup<font color="#E5E5E5"> and in the middle we have the</font>

352
00:14:55,179 --> 00:14:58,689
<font color="#CCCCCC">Google Cloud infrastructure that</font>

353
00:14:56,919 --> 00:15:00,129
facilitates that<font color="#E5E5E5"> as part of that Google</font>

354
00:14:58,689 --> 00:15:03,118
cloud infrastructure<font color="#E5E5E5"> here is what we</font>

355
00:15:00,129 --> 00:15:06,369
call<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Google</font><font color="#E5E5E5"> Cloud key vault service</font>

356
00:15:03,119 --> 00:15:08,019
which uses what we call trusted<font color="#CCCCCC"> Hardware</font>

357
00:15:06,369 --> 00:15:10,449
modules which effectively<font color="#E5E5E5"> are just</font>

358
00:15:08,019 --> 00:15:12,069
tightened chips<font color="#E5E5E5"> that are on the server</font>

359
00:15:10,449 --> 00:15:14,199
side instead of<font color="#E5E5E5"> the phone but pretty</font>

360
00:15:12,069 --> 00:15:16,149
<font color="#CCCCCC">much the same guarantees for insider</font>

361
00:15:14,199 --> 00:15:19,089
attack resistance on updating firmware

362
00:15:16,149 --> 00:15:21,160
<font color="#E5E5E5">on those tightened chips that act as the</font>

363
00:15:19,089 --> 00:15:22,779
trusted<font color="#CCCCCC"> Hardware modules</font><font color="#E5E5E5"> are in place</font>

364
00:15:21,160 --> 00:15:25,899
there<font color="#CCCCCC"> so this is what I said before</font>

365
00:15:22,779 --> 00:15:28,119
holds here as well<font color="#E5E5E5"> first step the device</font>

366
00:15:25,899 --> 00:15:31,239
wanting to create<font color="#E5E5E5"> a backup fetches a</font>

367
00:15:28,119 --> 00:15:34,359
public key of<font color="#E5E5E5"> a cohort of those trusted</font>

368
00:15:31,239 --> 00:15:37,569
<font color="#CCCCCC">Hardware modules from the cloud</font><font color="#E5E5E5"> and asks</font>

369
00:15:34,359 --> 00:15:40,209
the user<font color="#CCCCCC"> for the</font><font color="#E5E5E5"> local knowledge factor</font>

370
00:15:37,569 --> 00:15:42,910
<font color="#E5E5E5">for example the pin code pattern or</font>

371
00:15:40,209 --> 00:15:45,880
password<font color="#E5E5E5"> now and you</font>

372
00:15:42,910 --> 00:15:47,740
the backup key<font color="#CCCCCC"> local</font><font color="#E5E5E5"> client-side backup</font>

373
00:15:45,880 --> 00:15:49,420
encryption key is<font color="#E5E5E5"> created and</font><font color="#CCCCCC"> that is</font>

374
00:15:47,740 --> 00:15:51,040
wrapped twice in two layers of

375
00:15:49,420 --> 00:15:53,650
<font color="#E5E5E5">encryption first layer the inner layer</font>

376
00:15:51,040 --> 00:15:55,150
is with<font color="#E5E5E5"> a key derived directly from the</font>

377
00:15:53,650 --> 00:15:57,220
user knowledge factor on the device and

378
00:15:55,150 --> 00:15:58,720
the second layer<font color="#CCCCCC"> is just</font><font color="#E5E5E5"> public key</font>

379
00:15:57,220 --> 00:16:01,360
encryption with the public<font color="#E5E5E5"> key of that</font>

380
00:15:58,720 --> 00:16:02,950
trusted harder module this<font color="#E5E5E5"> doubly</font>

381
00:16:01,360 --> 00:16:04,660
encrypted backup encryption key is

382
00:16:02,950 --> 00:16:05,410
<font color="#E5E5E5">shipped to the infrastructure and stored</font>

383
00:16:04,660 --> 00:16:08,680
for<font color="#CCCCCC"> later use</font>

384
00:16:05,410 --> 00:16:10,750
<font color="#E5E5E5">then when the second device is not</font>

385
00:16:08,680 --> 00:16:14,859
<font color="#E5E5E5">connected</font><font color="#CCCCCC"> the first</font><font color="#E5E5E5"> one wants to restore</font>

386
00:16:10,750 --> 00:16:17,170
from this backup<font color="#E5E5E5"> set and you key the key</font>

387
00:16:14,860 --> 00:16:20,350
-<font color="#E5E5E5"> here the so-called claim and key is</font>

388
00:16:17,170 --> 00:16:22,390
randomly<font color="#E5E5E5"> created and the device also</font>

389
00:16:20,350 --> 00:16:25,660
fetches the<font color="#E5E5E5"> public key for this cohort</font>

390
00:16:22,390 --> 00:16:28,630
<font color="#CCCCCC">of trusted</font><font color="#E5E5E5"> Hardware modules now asking</font>

391
00:16:25,660 --> 00:16:30,250
<font color="#E5E5E5">the user for the knowledge factor of the</font>

392
00:16:28,630 --> 00:16:33,430
previous<font color="#E5E5E5"> device where the backup was</font>

393
00:16:30,250 --> 00:16:35,680
created this the key derived from this

394
00:16:33,430 --> 00:16:37,479
pin code password or pattern<font color="#E5E5E5"> together</font>

395
00:16:35,680 --> 00:16:38,949
<font color="#CCCCCC">with the claimant key is encrypted</font><font color="#E5E5E5"> with</font>

396
00:16:37,480 --> 00:16:42,130
<font color="#E5E5E5">the same public key and shipped to</font><font color="#CCCCCC"> the</font>

397
00:16:38,950 --> 00:16:43,990
<font color="#E5E5E5">club</font><font color="#CCCCCC"> now within</font><font color="#E5E5E5"> that within one</font><font color="#CCCCCC"> of those</font>

398
00:16:42,130 --> 00:16:45,910
trusted Hardware modules belong to the

399
00:16:43,990 --> 00:16:47,770
same court<font color="#CCCCCC"> and you instances spun up and</font>

400
00:16:45,910 --> 00:16:49,510
everything inside<font color="#CCCCCC"> the</font><font color="#E5E5E5"> green box stays</font>

401
00:16:47,770 --> 00:16:51,400
<font color="#E5E5E5">within the trusted harder module and</font>

402
00:16:49,510 --> 00:16:53,740
never the<font color="#E5E5E5"> intermediate results never</font>

403
00:16:51,400 --> 00:16:55,390
leave that module<font color="#E5E5E5"> so first we remove the</font>

404
00:16:53,740 --> 00:16:58,360
outer layer decrypt with the private key

405
00:16:55,390 --> 00:17:00,790
that's<font color="#E5E5E5"> only kept in there and try to use</font>

406
00:16:58,360 --> 00:17:04,209
the key<font color="#CCCCCC"> that comes</font><font color="#E5E5E5"> from the new restore</font>

407
00:17:00,790 --> 00:17:06,459
device<font color="#CCCCCC"> try to use that</font><font color="#E5E5E5"> key</font><font color="#CCCCCC"> on the inner</font>

408
00:17:04,209 --> 00:17:07,780
layer of<font color="#E5E5E5"> encryption if that works if</font>

409
00:17:06,459 --> 00:17:09,670
that can actually be decrypted<font color="#E5E5E5"> and we</font>

410
00:17:07,780 --> 00:17:12,430
know that the pin matches with some

411
00:17:09,670 --> 00:17:14,800
failure counters and<font color="#E5E5E5"> so on and upon</font>

412
00:17:12,430 --> 00:17:18,130
successful decryption can actually<font color="#CCCCCC"> Rhian</font>

413
00:17:14,800 --> 00:17:19,329
crypt rewrap that backup encryption key

414
00:17:18,130 --> 00:17:21,250
with the claimant key

415
00:17:19,329 --> 00:17:23,589
<font color="#E5E5E5">Shapira store device and restore device</font>

416
00:17:21,250 --> 00:17:27,459
can<font color="#CCCCCC"> actually then decrypt the whole</font>

417
00:17:23,589 --> 00:17:32,530
backup that is strictly stronger than

418
00:17:27,459 --> 00:17:34,090
<font color="#E5E5E5">just having a very often low entropy pin</font>

419
00:17:32,530 --> 00:17:36,430
or password that's used as<font color="#CCCCCC"> the user</font>

420
00:17:34,090 --> 00:17:38,560
<font color="#CCCCCC">local knowledge factor because this</font>

421
00:17:36,430 --> 00:17:41,790
computation is<font color="#CCCCCC"> done within the trust</font>

422
00:17:38,560 --> 00:17:44,139
<font color="#CCCCCC">card model but even if that went</font><font color="#E5E5E5"> wrong</font>

423
00:17:41,790 --> 00:17:45,909
even if this didn't hurt the clouds<font color="#E5E5E5"> that</font>

424
00:17:44,140 --> 00:17:48,910
didn't work as expected<font color="#CCCCCC"> it would</font><font color="#E5E5E5"> still</font>

425
00:17:45,910 --> 00:17:50,740
<font color="#CCCCCC">be protected</font><font color="#E5E5E5"> by the local cloud by the</font>

426
00:17:48,910 --> 00:17:53,140
local knowledge factor so a strong

427
00:17:50,740 --> 00:17:55,660
password<font color="#E5E5E5"> together with this doesn't make</font>

428
00:17:53,140 --> 00:17:57,760
it<font color="#E5E5E5"> any weaker it just makes it stronger</font>

429
00:17:55,660 --> 00:17:59,680
with insider attack resistance

430
00:17:57,760 --> 00:18:02,500
implemented in the<font color="#CCCCCC"> trust charter</font><font color="#E5E5E5"> module</font>

431
00:17:59,680 --> 00:18:06,130
<font color="#E5E5E5">server</font><font color="#CCCCCC"> site</font><font color="#E5E5E5"> even admins with full Google</font>

432
00:18:02,500 --> 00:18:08,500
<font color="#CCCCCC">Cloud</font><font color="#E5E5E5"> access cannot</font><font color="#CCCCCC"> brute</font><font color="#E5E5E5"> force users</font>

433
00:18:06,130 --> 00:18:10,600
knowledge factors at this point<font color="#E5E5E5"> so again</font>

434
00:18:08,500 --> 00:18:12,670
<font color="#CCCCCC">this is the third and last the last</font>

435
00:18:10,600 --> 00:18:15,760
specific example<font color="#CCCCCC"> I'm I wanted to give</font>

436
00:18:12,670 --> 00:18:18,160
for what we did on<font color="#E5E5E5"> Android specifically</font>

437
00:18:15,760 --> 00:18:21,360
<font color="#E5E5E5">in the last release stars insider attack</font>

438
00:18:18,160 --> 00:18:25,120
resistance now<font color="#E5E5E5"> moving to the top</font><font color="#CCCCCC"> player</font>

439
00:18:21,360 --> 00:18:28,629
<font color="#E5E5E5">apps and what apps typically do what we</font>

440
00:18:25,120 --> 00:18:31,300
call dynamic code loading<font color="#E5E5E5"> or</font><font color="#CCCCCC"> DCL</font><font color="#E5E5E5"> is both</font>

441
00:18:28,630 --> 00:18:34,960
easier and harder<font color="#E5E5E5"> from an insider point</font>

442
00:18:31,300 --> 00:18:37,180
of view<font color="#E5E5E5"> it's easier because what apps</font>

443
00:18:34,960 --> 00:18:40,870
can do on the phone is limited by their

444
00:18:37,180 --> 00:18:42,460
permissions it's not perfect and<font color="#E5E5E5"> thanks</font>

445
00:18:40,870 --> 00:18:45,010
search for your talk pointing out that

446
00:18:42,460 --> 00:18:46,540
<font color="#E5E5E5">yes the</font><font color="#CCCCCC"> the app ecosystem does have</font>

447
00:18:45,010 --> 00:18:49,090
issues<font color="#CCCCCC"> that need to be solved and</font><font color="#E5E5E5"> this</font>

448
00:18:46,540 --> 00:18:51,760
is a very hot<font color="#CCCCCC"> topic that people are many</font>

449
00:18:49,090 --> 00:18:53,980
<font color="#E5E5E5">people are</font><font color="#CCCCCC"> working</font><font color="#E5E5E5"> on but on the</font><font color="#CCCCCC"> other</font>

450
00:18:51,760 --> 00:18:55,810
<font color="#E5E5E5">side if an app is removed from the</font>

451
00:18:53,980 --> 00:18:58,450
device<font color="#E5E5E5"> all the side effects manage so</font>

452
00:18:55,810 --> 00:19:00,820
because of the sandbox<font color="#CCCCCC"> an app can only</font>

453
00:18:58,450 --> 00:19:02,680
use<font color="#E5E5E5"> anything within its</font><font color="#CCCCCC"> own permissions</font>

454
00:19:00,820 --> 00:19:05,320
within the sandbox<font color="#CCCCCC"> on the other side</font>

455
00:19:02,680 --> 00:19:06,940
<font color="#E5E5E5">it's also a much harder problem</font><font color="#CCCCCC"> than the</font>

456
00:19:05,320 --> 00:19:09,220
system ice layer<font color="#E5E5E5"> simply because of the</font>

457
00:19:06,940 --> 00:19:11,380
sheer<font color="#CCCCCC"> scale</font><font color="#E5E5E5"> there's millions of app</font>

458
00:19:09,220 --> 00:19:12,580
developers it seems<font color="#E5E5E5"> pretty unrealistic</font>

459
00:19:11,380 --> 00:19:15,310
that all of them would switch to

460
00:19:12,580 --> 00:19:17,159
<font color="#CCCCCC">open-source and would be independently</font>

461
00:19:15,310 --> 00:19:20,230
verified<font color="#CCCCCC"> of what's</font><font color="#E5E5E5"> going on in there so</font>

462
00:19:17,160 --> 00:19:22,210
<font color="#E5E5E5">auditability will get us some step but</font>

463
00:19:20,230 --> 00:19:24,660
it's not the full<font color="#CCCCCC"> picture</font><font color="#E5E5E5"> and we are</font>

464
00:19:22,210 --> 00:19:27,670
still trying to<font color="#E5E5E5"> find a good balance</font>

465
00:19:24,660 --> 00:19:30,070
<font color="#CCCCCC">together with the dynamic coding it's</font>

466
00:19:27,670 --> 00:19:31,690
going on<font color="#CCCCCC"> where the most obvious example</font>

467
00:19:30,070 --> 00:19:33,790
is<font color="#E5E5E5"> web browsers web apps that just</font>

468
00:19:31,690 --> 00:19:36,130
<font color="#E5E5E5">download</font><font color="#CCCCCC"> Java Script and execute that</font>

469
00:19:33,790 --> 00:19:39,399
<font color="#E5E5E5">within the apps process to find a good</font>

470
00:19:36,130 --> 00:19:41,800
<font color="#CCCCCC">balance that will allow legitimate</font>

471
00:19:39,400 --> 00:19:44,770
<font color="#E5E5E5">applications at this scale and diversity</font>

472
00:19:41,800 --> 00:19:47,409
<font color="#E5E5E5">that</font><font color="#CCCCCC"> we see but prevent or at least</font>

473
00:19:44,770 --> 00:19:52,389
mitigate against insider attacks<font color="#E5E5E5"> at the</font>

474
00:19:47,410 --> 00:19:55,720
app developers<font color="#E5E5E5"> organization or libraries</font>

475
00:19:52,390 --> 00:19:58,390
SDKs included by those developers and

476
00:19:55,720 --> 00:20:00,190
that<font color="#CCCCCC"> is a very active problem that is</font>

477
00:19:58,390 --> 00:20:03,100
still hot<font color="#E5E5E5"> field for research and</font>

478
00:20:00,190 --> 00:20:05,650
development<font color="#CCCCCC"> and we are</font><font color="#E5E5E5"> actively looking</font>

479
00:20:03,100 --> 00:20:07,689
<font color="#E5E5E5">for calibration so if you are interested</font>

480
00:20:05,650 --> 00:20:08,040
in working<font color="#E5E5E5"> on this</font><font color="#CCCCCC"> problem please</font><font color="#E5E5E5"> talk</font>

481
00:20:07,690 --> 00:20:11,400
<font color="#CCCCCC">to</font>

482
00:20:08,040 --> 00:20:14,700
we are happy<font color="#CCCCCC"> to collaborate</font><font color="#E5E5E5"> here to work</font>

483
00:20:11,400 --> 00:20:17,850
together<font color="#E5E5E5"> coming</font><font color="#CCCCCC"> to the end</font><font color="#E5E5E5"> of my talk my</font>

484
00:20:14,700 --> 00:20:20,760
<font color="#CCCCCC">call for action here</font><font color="#E5E5E5"> is that everybody</font>

485
00:20:17,850 --> 00:20:23,070
<font color="#CCCCCC">who is</font><font color="#E5E5E5"> building trusted systems should</font>

486
00:20:20,760 --> 00:20:24,600
think hard about insider attacks<font color="#CCCCCC"> if you</font>

487
00:20:23,070 --> 00:20:27,360
are part<font color="#E5E5E5"> of the Android ecosystem for</font>

488
00:20:24,600 --> 00:20:29,990
example at an OEM or developing apps

489
00:20:27,360 --> 00:20:32,790
<font color="#E5E5E5">then I asked you both</font><font color="#CCCCCC"> to support</font>

490
00:20:29,990 --> 00:20:34,500
<font color="#E5E5E5">consolidated efforts to deal with</font><font color="#CCCCCC"> this</font>

491
00:20:32,790 --> 00:20:37,200
<font color="#E5E5E5">problem and to look into</font><font color="#CCCCCC"> your own</font>

492
00:20:34,500 --> 00:20:41,220
organization on how to deep<font color="#CCCCCC"> privileged</font>

493
00:20:37,200 --> 00:20:43,350
insiders<font color="#E5E5E5"> and auditability</font><font color="#CCCCCC"> is a key</font>

494
00:20:41,220 --> 00:20:46,679
defense against<font color="#E5E5E5"> the insider attacks</font><font color="#CCCCCC"> if</font>

495
00:20:43,350 --> 00:20:49,320
you can make<font color="#E5E5E5"> it technically impossible</font>

496
00:20:46,679 --> 00:20:52,080
<font color="#E5E5E5">for insiders to perform an action</font>

497
00:20:49,320 --> 00:20:54,780
against users<font color="#E5E5E5"> make every single</font>

498
00:20:52,080 --> 00:20:57,210
<font color="#E5E5E5">component</font><font color="#CCCCCC"> simple</font><font color="#E5E5E5"> and then force code</font>

499
00:20:54,780 --> 00:20:59,460
transparency<font color="#CCCCCC"> if that's not</font><font color="#E5E5E5"> possible for</font>

500
00:20:57,210 --> 00:21:01,679
various<font color="#E5E5E5"> reasons then make it evident</font>

501
00:20:59,460 --> 00:21:04,500
that an action happens

502
00:21:01,679 --> 00:21:07,320
<font color="#CCCCCC">open-source</font><font color="#E5E5E5"> can help as can</font><font color="#CCCCCC"> logs and</font>

503
00:21:04,500 --> 00:21:10,020
notifications but these<font color="#E5E5E5"> measures don't</font>

504
00:21:07,320 --> 00:21:11,909
<font color="#E5E5E5">make insider attacks impossible however</font>

505
00:21:10,020 --> 00:21:14,250
they can act as very strong<font color="#E5E5E5"> deterrence</font>

506
00:21:11,910 --> 00:21:16,110
against such attacks<font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to</font>

507
00:21:14,250 --> 00:21:18,270
close the loop<font color="#E5E5E5"> and bring the</font><font color="#CCCCCC"> discussion</font>

508
00:21:16,110 --> 00:21:21,000
back to Android when talking about

509
00:21:18,270 --> 00:21:24,240
<font color="#CCCCCC">security</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> privacy in the Android</font>

510
00:21:21,000 --> 00:21:27,090
platform<font color="#CCCCCC"> in my role I would really</font>

511
00:21:24,240 --> 00:21:29,669
personally like to<font color="#CCCCCC"> be able to say</font><font color="#E5E5E5"> don't</font>

512
00:21:27,090 --> 00:21:31,280
take<font color="#E5E5E5"> my word for</font><font color="#CCCCCC"> it I can't abuse user</font>

513
00:21:29,669 --> 00:21:35,100
trust because we made<font color="#E5E5E5"> it technically</font>

514
00:21:31,280 --> 00:21:37,410
<font color="#E5E5E5">impossible for me to do so we're</font><font color="#CCCCCC"> aware</font>

515
00:21:35,100 --> 00:21:39,840
that we're not quite<font color="#CCCCCC"> there yet</font><font color="#E5E5E5"> but we're</font>

516
00:21:37,410 --> 00:21:40,919
<font color="#E5E5E5">getting closer step-by-step so let's</font>

517
00:21:39,840 --> 00:21:44,399
work together<font color="#E5E5E5"> on this one</font>

518
00:21:40,919 --> 00:21:48,030
let's take ourselves out of the trust

519
00:21:44,400 --> 00:21:50,910
equation and make<font color="#E5E5E5"> it impossible for all</font>

520
00:21:48,030 --> 00:21:54,379
of us insiders here<font color="#E5E5E5"> to actually become</font>

521
00:21:50,910 --> 00:21:54,380
attackers thank you

522
00:21:57,080 --> 00:21:59,139
<font color="#CCCCCC">you</font>

