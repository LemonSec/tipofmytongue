1
00:00:10,679 --> 00:00:14,820
I'm gonna<font color="#CCCCCC"> start by giving you kind of</font><font color="#E5E5E5"> a</font>

2
00:00:13,080 --> 00:00:16,280
bit<font color="#CCCCCC"> of a downer that your apps are</font>

3
00:00:14,820 --> 00:00:19,350
vulnerable

4
00:00:16,280 --> 00:00:20,940
now there's probably<font color="#E5E5E5"> a dozen different</font>

5
00:00:19,350 --> 00:00:22,680
<font color="#CCCCCC">ways that you could complete this</font>

6
00:00:20,940 --> 00:00:25,020
thought<font color="#E5E5E5"> because we're at a security</font>

7
00:00:22,680 --> 00:00:27,509
<font color="#CCCCCC">conference here</font><font color="#E5E5E5"> but I want to talk</font><font color="#CCCCCC"> about</font>

8
00:00:25,020 --> 00:00:29,550
one specific<font color="#CCCCCC"> way that I</font><font color="#E5E5E5"> think should be</font>

9
00:00:27,510 --> 00:00:31,800
fixable<font color="#E5E5E5"> so I'm going to talk</font><font color="#CCCCCC"> about</font>

10
00:00:29,550 --> 00:00:33,630
<font color="#E5E5E5">making TLS connections from one of your</font>

11
00:00:31,800 --> 00:00:35,640
<font color="#E5E5E5">devices to</font><font color="#CCCCCC"> a remote server</font>

12
00:00:33,630 --> 00:00:37,800
the idea behind TLS is that you're

13
00:00:35,640 --> 00:00:39,210
supposed to have<font color="#CCCCCC"> a secure connection to</font>

14
00:00:37,800 --> 00:00:41,129
that<font color="#E5E5E5"> remote server</font><font color="#CCCCCC"> and what that means</font>

15
00:00:39,210 --> 00:00:42,450
is that<font color="#E5E5E5"> you get</font><font color="#CCCCCC"> some nice properties you</font>

16
00:00:41,129 --> 00:00:44,970
can authenticate<font color="#CCCCCC"> the identity that</font>

17
00:00:42,450 --> 00:00:46,739
server you can encrypt<font color="#E5E5E5"> all your data so</font>

18
00:00:44,970 --> 00:00:48,510
you get confidentiality<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> data</font>

19
00:00:46,739 --> 00:00:50,699
can't<font color="#CCCCCC"> be modified with</font><font color="#E5E5E5"> your</font><font color="#CCCCCC"> permission</font>

20
00:00:48,510 --> 00:00:53,489
<font color="#CCCCCC">now the fact that there</font><font color="#E5E5E5"> might be</font>

21
00:00:50,700 --> 00:00:55,670
vulnerabilities in how your applications

22
00:00:53,490 --> 00:00:58,440
are<font color="#E5E5E5"> using TLS is a bit disconcerting</font>

23
00:00:55,670 --> 00:01:00,720
<font color="#CCCCCC">because you're supposed to see this nice</font>

24
00:00:58,440 --> 00:01:02,610
little<font color="#E5E5E5"> lock icon and the lock icon</font>

25
00:01:00,720 --> 00:01:05,099
represents all<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is good</font><font color="#CCCCCC"> and pure</font><font color="#E5E5E5"> on</font>

26
00:01:02,610 --> 00:01:09,090
the<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> even if it does tend to</font>

27
00:01:05,099 --> 00:01:10,080
represent<font color="#E5E5E5"> a purse</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> little bit so</font>

28
00:01:09,090 --> 00:01:12,270
there's been some good work

29
00:01:10,080 --> 00:01:14,310
demonstrating that developers<font color="#E5E5E5"> actually</font>

30
00:01:12,270 --> 00:01:17,009
have a difficult time learning<font color="#E5E5E5"> how</font><font color="#CCCCCC"> to</font>

31
00:01:14,310 --> 00:01:18,930
use TLS correctly there's been some<font color="#E5E5E5"> good</font>

32
00:01:17,009 --> 00:01:21,510
studies in the app space in<font color="#E5E5E5"> particular</font>

33
00:01:18,930 --> 00:01:23,700
even banking apps<font color="#E5E5E5"> showing these apps are</font>

34
00:01:21,510 --> 00:01:26,360
vulnerable<font color="#CCCCCC"> to men Mill attacks</font><font color="#E5E5E5"> because</font>

35
00:01:23,700 --> 00:01:28,530
they're not<font color="#E5E5E5"> using TLS properly and</font>

36
00:01:26,360 --> 00:01:30,810
developers often<font color="#E5E5E5"> turn to</font><font color="#CCCCCC"> Stack Overflow</font>

37
00:01:28,530 --> 00:01:32,190
of course there's<font color="#E5E5E5"> been a nice study</font>

38
00:01:30,810 --> 00:01:34,830
showing<font color="#E5E5E5"> that when they try to do that</font>

39
00:01:32,190 --> 00:01:37,440
<font color="#CCCCCC">with respect</font><font color="#E5E5E5"> Android security that over</font>

40
00:01:34,830 --> 00:01:39,360
<font color="#CCCCCC">99% of the code that they copy from</font>

41
00:01:37,440 --> 00:01:41,820
Stack Overflow<font color="#E5E5E5"> has some kind of a</font>

42
00:01:39,360 --> 00:01:44,700
<font color="#E5E5E5">security flaw in it so that's not a good</font>

43
00:01:41,820 --> 00:01:46,529
<font color="#E5E5E5">source for them to turn and this preview</font>

44
00:01:44,700 --> 00:01:49,680
<font color="#E5E5E5">in particular wants you to remember it</font>

45
00:01:46,530 --> 00:01:52,110
showed that<font color="#E5E5E5"> the most</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> part of</font>

46
00:01:49,680 --> 00:01:53,670
<font color="#CCCCCC">this</font><font color="#E5E5E5"> for developers is actually</font>

47
00:01:52,110 --> 00:01:55,110
<font color="#E5E5E5">validating the certificates that</font><font color="#CCCCCC"> they</font>

48
00:01:53,670 --> 00:01:56,340
receive there's a<font color="#E5E5E5"> number of steps you</font>

49
00:01:55,110 --> 00:01:58,679
<font color="#E5E5E5">have to go</font><font color="#CCCCCC"> through</font><font color="#E5E5E5"> to follow best</font>

50
00:01:56,340 --> 00:02:00,090
practices<font color="#E5E5E5"> they often get this wrong</font><font color="#CCCCCC"> and</font>

51
00:01:58,680 --> 00:02:02,220
so this paper called it the most

52
00:02:00,090 --> 00:02:04,049
<font color="#E5E5E5">dangerous code in the world when you try</font>

53
00:02:02,220 --> 00:02:06,110
to implement<font color="#E5E5E5"> this and they looked in</font>

54
00:02:04,049 --> 00:02:10,830
particular<font color="#E5E5E5"> at non browser software</font>

55
00:02:06,110 --> 00:02:13,079
<font color="#E5E5E5">there's one particular assertion from</font>

56
00:02:10,830 --> 00:02:15,540
this paper that I want to<font color="#E5E5E5"> point</font><font color="#CCCCCC"> you to</font>

57
00:02:13,079 --> 00:02:18,390
they say the root cause of<font color="#E5E5E5"> these</font>

58
00:02:15,540 --> 00:02:21,630
<font color="#E5E5E5">vulnerabilities are badly designed api's</font>

59
00:02:18,390 --> 00:02:23,518
of<font color="#E5E5E5"> SSL implementations which present</font>

60
00:02:21,630 --> 00:02:25,799
developers with confusing<font color="#E5E5E5"> array of</font>

61
00:02:23,519 --> 00:02:27,870
settings<font color="#CCCCCC"> and</font><font color="#E5E5E5"> options</font><font color="#CCCCCC"> if you've ever</font>

62
00:02:25,800 --> 00:02:29,620
<font color="#E5E5E5">tried</font><font color="#CCCCCC"> to do this from scratch not</font>

63
00:02:27,870 --> 00:02:31,629
<font color="#E5E5E5">knowing how</font><font color="#CCCCCC"> to do this and look</font>

64
00:02:29,620 --> 00:02:33,519
say the<font color="#CCCCCC"> OpenSSL documentation</font><font color="#E5E5E5"> I think</font>

65
00:02:31,629 --> 00:02:38,379
you could<font color="#E5E5E5"> identify with this kind of</font>

66
00:02:33,519 --> 00:02:40,300
sentiment so what's<font color="#E5E5E5"> being done to fix</font>

67
00:02:38,379 --> 00:02:41,890
<font color="#CCCCCC">this</font><font color="#E5E5E5"> there's actually a</font><font color="#CCCCCC"> variety of</font>

68
00:02:40,300 --> 00:02:43,989
different<font color="#E5E5E5"> libraries</font><font color="#CCCCCC"> that are</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> there</font>

69
00:02:41,890 --> 00:02:45,640
<font color="#CCCCCC">that you could</font><font color="#E5E5E5"> use some of which try to</font>

70
00:02:43,989 --> 00:02:48,940
make life a little<font color="#E5E5E5"> bit simpler for</font>

71
00:02:45,640 --> 00:02:50,708
<font color="#E5E5E5">developer but we've now confused the</font>

72
00:02:48,940 --> 00:02:51,879
space a bit<font color="#E5E5E5"> so now if your developer</font>

73
00:02:50,709 --> 00:02:53,290
you've got to try to choose the<font color="#CCCCCC"> right</font>

74
00:02:51,879 --> 00:02:57,129
library in<font color="#CCCCCC"> addition to learning how</font><font color="#E5E5E5"> to</font>

75
00:02:53,290 --> 00:02:58,690
use TLS properly and some<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> are</font>

76
00:02:57,129 --> 00:03:00,819
<font color="#E5E5E5">going to only work for some particular</font>

77
00:02:58,690 --> 00:03:05,019
languages<font color="#E5E5E5"> so you've got a bit of a</font>

78
00:03:00,819 --> 00:03:06,399
<font color="#E5E5E5">problem there as well</font><font color="#CCCCCC"> now warning</font><font color="#E5E5E5"> sorry</font>

79
00:03:05,019 --> 00:03:11,049
I'm gonna make you feel a little bit

80
00:03:06,400 --> 00:03:12,880
worse right<font color="#E5E5E5"> now there's not much you</font><font color="#CCCCCC"> can</font>

81
00:03:11,049 --> 00:03:16,060
do about vulnerable apps on your device

82
00:03:12,880 --> 00:03:17,829
<font color="#CCCCCC">so if you own a device even</font><font color="#E5E5E5"> if you're a</font>

83
00:03:16,060 --> 00:03:20,200
system<font color="#CCCCCC"> administrator over a set of</font>

84
00:03:17,829 --> 00:03:21,940
<font color="#CCCCCC">devices even if you're an operating</font>

85
00:03:20,200 --> 00:03:24,730
system<font color="#CCCCCC"> vendor so you could control what</font>

86
00:03:21,940 --> 00:03:27,010
goes on<font color="#E5E5E5"> that device you have to rely on</font>

87
00:03:24,730 --> 00:03:29,500
<font color="#E5E5E5">individual developers from</font><font color="#CCCCCC"> a variety of</font>

88
00:03:27,010 --> 00:03:31,298
different<font color="#E5E5E5"> sources and organizations to</font>

89
00:03:29,500 --> 00:03:33,850
<font color="#E5E5E5">find the flaws in</font><font color="#CCCCCC"> their particular</font><font color="#E5E5E5"> use</font>

90
00:03:31,299 --> 00:03:35,560
of<font color="#E5E5E5"> TLS to patch their app</font><font color="#CCCCCC"> and then</font>

91
00:03:33,850 --> 00:03:38,079
deliver that<font color="#E5E5E5"> patch to</font><font color="#CCCCCC"> you and your</font>

92
00:03:35,560 --> 00:03:41,500
device<font color="#E5E5E5"> you're basically left out of the</font>

93
00:03:38,079 --> 00:03:44,230
loop<font color="#E5E5E5"> and on top of</font><font color="#CCCCCC"> that even if they</font>

94
00:03:41,500 --> 00:03:45,700
could ensure that developers<font color="#CCCCCC"> are writing</font>

95
00:03:44,230 --> 00:03:47,260
correct<font color="#E5E5E5"> code if we could somehow get</font>

96
00:03:45,700 --> 00:03:50,260
them all the right<font color="#E5E5E5"> security</font><font color="#CCCCCC"> education</font>

97
00:03:47,260 --> 00:03:52,899
they need<font color="#E5E5E5"> there's no centralized TLS</font>

98
00:03:50,260 --> 00:03:55,388
policy for<font color="#E5E5E5"> your operating system</font><font color="#CCCCCC"> so this</font>

99
00:03:52,900 --> 00:03:57,819
means that<font color="#E5E5E5"> a developer could choose an</font>

100
00:03:55,389 --> 00:04:00,430
old version of TLS that they shouldn't

101
00:03:57,819 --> 00:04:02,608
<font color="#E5E5E5">be choosing or some weak cipher suites</font>

102
00:04:00,430 --> 00:04:07,329
that<font color="#CCCCCC"> have</font><font color="#E5E5E5"> been shown</font><font color="#CCCCCC"> to be insecure</font><font color="#E5E5E5"> and</font>

103
00:04:02,609 --> 00:04:08,950
your apps are at risk<font color="#E5E5E5"> in that case okay</font>

104
00:04:07,329 --> 00:04:12,190
so now you're<font color="#CCCCCC"> all feeling</font><font color="#E5E5E5"> terrible about</font>

105
00:04:08,950 --> 00:04:13,599
<font color="#E5E5E5">life let's figure out how can we</font><font color="#CCCCCC"> solve</font>

106
00:04:12,190 --> 00:04:14,440
<font color="#E5E5E5">this because I'm asserting that this is</font>

107
00:04:13,599 --> 00:04:17,168
a fixable

108
00:04:14,440 --> 00:04:21,190
solution<font color="#E5E5E5"> so I want you to join</font><font color="#CCCCCC"> me on</font><font color="#E5E5E5"> a</font>

109
00:04:17,168 --> 00:04:23,639
quest<font color="#CCCCCC"> we're gonna find the TLS</font><font color="#E5E5E5"> Holy</font>

110
00:04:21,190 --> 00:04:28,510
<font color="#E5E5E5">Grail we're gonna see if we can do this</font>

111
00:04:23,639 --> 00:04:29,020
<font color="#CCCCCC">okay now what do I mean by the TLS Holy</font>

112
00:04:28,510 --> 00:04:31,810
<font color="#CCCCCC">Grail</font>

113
00:04:29,020 --> 00:04:34,630
I mean two<font color="#CCCCCC"> things first of</font><font color="#E5E5E5"> all a single</font>

114
00:04:31,810 --> 00:04:37,270
<font color="#E5E5E5">simple API for developers</font><font color="#CCCCCC"> to use</font><font color="#E5E5E5"> they</font>

115
00:04:34,630 --> 00:04:40,150
<font color="#CCCCCC">can create secure applications use TLS</font>

116
00:04:37,270 --> 00:04:42,909
properly and second<font color="#CCCCCC"> of</font><font color="#E5E5E5"> all the ability</font>

117
00:04:40,150 --> 00:04:43,270
<font color="#CCCCCC">for</font><font color="#E5E5E5"> system administrators</font><font color="#CCCCCC"> an OS or</font>

118
00:04:42,909 --> 00:04:45,340
device

119
00:04:43,270 --> 00:04:48,219
vendors to<font color="#CCCCCC"> ensure that all the apps on a</font>

120
00:04:45,340 --> 00:04:52,690
particular<font color="#CCCCCC"> machine or</font><font color="#E5E5E5"> device follow some</font>

121
00:04:48,220 --> 00:04:55,930
good TLS policy<font color="#E5E5E5"> okay so how are we going</font>

122
00:04:52,690 --> 00:04:57,969
to<font color="#E5E5E5"> accomplish find this TLS</font><font color="#CCCCCC"> holy grail I</font>

123
00:04:55,930 --> 00:05:00,730
know what you're<font color="#E5E5E5"> all thinking</font><font color="#CCCCCC"> you're</font>

124
00:04:57,970 --> 00:05:02,230
thinking<font color="#CCCCCC"> architecture architecture</font><font color="#E5E5E5"> will</font>

125
00:05:00,730 --> 00:05:04,420
solve this<font color="#CCCCCC"> problem for us</font>

126
00:05:02,230 --> 00:05:06,280
now I come from a networking background

127
00:05:04,420 --> 00:05:08,140
architecture is one of my most favorite

128
00:05:06,280 --> 00:05:09,659
things<font color="#E5E5E5"> and there's some great</font><font color="#CCCCCC"> lessons we</font>

129
00:05:08,140 --> 00:05:11,650
can learn from<font color="#CCCCCC"> the internet architecture</font>

130
00:05:09,660 --> 00:05:13,390
<font color="#CCCCCC">first of</font><font color="#E5E5E5"> all we talk about layering</font>

131
00:05:11,650 --> 00:05:15,460
<font color="#E5E5E5">putting different functionality and</font>

132
00:05:13,390 --> 00:05:17,860
different layers<font color="#E5E5E5"> and then abstractions</font>

133
00:05:15,460 --> 00:05:19,530
so that a<font color="#E5E5E5"> particular layer can call up</font>

134
00:05:17,860 --> 00:05:22,780
or down if it needs<font color="#E5E5E5"> to deliver layer</font>

135
00:05:19,530 --> 00:05:24,580
data to a different layer<font color="#E5E5E5"> and then a</font>

136
00:05:22,780 --> 00:05:26,950
really big piece of<font color="#E5E5E5"> this is separation</font>

137
00:05:24,580 --> 00:05:29,349
<font color="#E5E5E5">of concerns so for example we</font><font color="#CCCCCC"> talked</font>

138
00:05:26,950 --> 00:05:31,060
about<font color="#E5E5E5"> IP we talked about implementing a</font>

139
00:05:29,350 --> 00:05:34,030
particular service<font color="#CCCCCC"> best-effort service</font>

140
00:05:31,060 --> 00:05:36,040
<font color="#E5E5E5">and any given router is v if it's</font>

141
00:05:34,030 --> 00:05:38,260
following<font color="#E5E5E5"> the IP specification is going</font>

142
00:05:36,040 --> 00:05:40,330
to try to send packets<font color="#CCCCCC"> as fast as it</font><font color="#E5E5E5"> can</font>

143
00:05:38,260 --> 00:05:42,280
<font color="#E5E5E5">but if those packets happen get to a</font>

144
00:05:40,330 --> 00:05:44,200
router where there's not<font color="#E5E5E5"> enough memory</font>

145
00:05:42,280 --> 00:05:47,070
<font color="#E5E5E5">there's a buffer overflow</font><font color="#CCCCCC"> will just drop</font>

146
00:05:44,200 --> 00:05:49,659
the packet it's not the concern of IP

147
00:05:47,070 --> 00:05:52,030
<font color="#CCCCCC">TCP on the other hand</font><font color="#E5E5E5"> later on top of it</font>

148
00:05:49,660 --> 00:05:54,400
<font color="#CCCCCC">its concern is to try</font><font color="#E5E5E5"> to take that</font><font color="#CCCCCC"> best</font>

149
00:05:52,030 --> 00:05:56,679
<font color="#E5E5E5">over service and turn it into a reliable</font>

150
00:05:54,400 --> 00:05:59,440
<font color="#E5E5E5">ordered byte stream for your application</font>

151
00:05:56,680 --> 00:06:00,880
<font color="#E5E5E5">so this all sounds</font><font color="#CCCCCC"> great hopefully</font>

152
00:05:59,440 --> 00:06:02,530
<font color="#CCCCCC">you're stepping back and looking at</font><font color="#E5E5E5"> this</font>

153
00:06:00,880 --> 00:06:05,230
architecture and saying<font color="#E5E5E5"> there's one</font>

154
00:06:02,530 --> 00:06:07,570
<font color="#E5E5E5">glaring</font><font color="#CCCCCC"> thing missing</font><font color="#E5E5E5"> which is security</font>

155
00:06:05,230 --> 00:06:09,370
<font color="#E5E5E5">and right now we</font><font color="#CCCCCC"> deal with security as</font>

156
00:06:07,570 --> 00:06:10,990
we say<font color="#E5E5E5"> that's the job of</font><font color="#CCCCCC"> the</font>

157
00:06:09,370 --> 00:06:13,510
<font color="#E5E5E5">applications in the application layer</font>

158
00:06:10,990 --> 00:06:15,610
<font color="#E5E5E5">they should all try to implement best</font>

159
00:06:13,510 --> 00:06:16,750
security practices and this<font color="#E5E5E5"> is kind of</font>

160
00:06:15,610 --> 00:06:19,480
the root of the problem<font color="#CCCCCC"> that we're at</font>

161
00:06:16,750 --> 00:06:22,150
here every individual application has to

162
00:06:19,480 --> 00:06:25,050
try<font color="#E5E5E5"> to relearn the same lessons and</font>

163
00:06:22,150 --> 00:06:27,669
re-implement the same best practices

164
00:06:25,050 --> 00:06:29,950
<font color="#CCCCCC">okay so I promised you that we're</font><font color="#E5E5E5"> gonna</font>

165
00:06:27,670 --> 00:06:31,660
<font color="#E5E5E5">find a Holy Grail we're going to use</font>

166
00:06:29,950 --> 00:06:33,400
these same principles layering

167
00:06:31,660 --> 00:06:36,490
abstractions and separation<font color="#E5E5E5"> of concerns</font>

168
00:06:33,400 --> 00:06:38,679
and<font color="#E5E5E5"> see can we design a better solution</font>

169
00:06:36,490 --> 00:06:41,290
for TLS so we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to start off with</font>

170
00:06:38,680 --> 00:06:44,460
layering<font color="#E5E5E5"> we're going to implement</font><font color="#CCCCCC"> a</font>

171
00:06:41,290 --> 00:06:47,710
security layer that has TLS<font color="#E5E5E5"> an</font>

172
00:06:44,460 --> 00:06:50,919
<font color="#E5E5E5">application should</font><font color="#CCCCCC"> be able to call this</font>

173
00:06:47,710 --> 00:06:54,010
layer and not worry about<font color="#E5E5E5"> how TLS is</font>

174
00:06:50,920 --> 00:06:55,810
implemented right<font color="#E5E5E5"> that's the separation</font>

175
00:06:54,010 --> 00:06:57,479
<font color="#CCCCCC">of concerns</font><font color="#E5E5E5"> it's also the proper use of</font>

176
00:06:55,810 --> 00:07:00,100
layering

177
00:06:57,479 --> 00:07:03,460
then we're going<font color="#E5E5E5"> to put on</font><font color="#CCCCCC"> top of</font><font color="#E5E5E5"> that</font>

178
00:07:00,100 --> 00:07:05,979
<font color="#E5E5E5">layer the</font><font color="#CCCCCC"> POSIX socket API</font><font color="#E5E5E5"> this is the</font>

179
00:07:03,460 --> 00:07:07,750
most<font color="#CCCCCC"> well known</font><font color="#E5E5E5"> well use well supported</font>

180
00:07:05,979 --> 00:07:09,729
<font color="#E5E5E5">API there is for interacting</font><font color="#CCCCCC"> with</font><font color="#E5E5E5"> the</font>

181
00:07:07,750 --> 00:07:12,310
network<font color="#E5E5E5"> so we're gonna give applications</font>

182
00:07:09,729 --> 00:07:14,289
that abstraction<font color="#CCCCCC"> okay so if</font><font color="#E5E5E5"> we take</font>

183
00:07:12,310 --> 00:07:17,050
those two<font color="#CCCCCC"> things</font><font color="#E5E5E5"> what does that look</font>

184
00:07:14,289 --> 00:07:18,729
like<font color="#E5E5E5"> well here is</font><font color="#CCCCCC"> your standard</font><font color="#E5E5E5"> POSIX</font>

185
00:07:17,050 --> 00:07:21,220
socket API I've been teaching students

186
00:07:18,729 --> 00:07:22,960
this API for<font color="#E5E5E5"> 25 years we always tell</font>

187
00:07:21,220 --> 00:07:25,030
them<font color="#E5E5E5"> when you</font><font color="#CCCCCC"> want to</font><font color="#E5E5E5"> create a socket</font>

188
00:07:22,960 --> 00:07:26,859
you<font color="#E5E5E5"> call the socket system call your</font>

189
00:07:25,030 --> 00:07:28,869
first<font color="#E5E5E5"> parameter is protocol family</font>

190
00:07:26,860 --> 00:07:32,229
underscore<font color="#CCCCCC"> internet</font><font color="#E5E5E5"> saying I want to use</font>

191
00:07:28,870 --> 00:07:33,789
<font color="#CCCCCC">Internet addresses</font><font color="#E5E5E5"> or IP version 4 then</font>

192
00:07:32,229 --> 00:07:35,380
the second<font color="#E5E5E5"> parameter is sock stream I</font>

193
00:07:33,789 --> 00:07:37,150
want a<font color="#E5E5E5"> reliable</font><font color="#CCCCCC"> order byte stream for</font>

194
00:07:35,380 --> 00:07:38,860
this<font color="#E5E5E5"> and then don't</font><font color="#CCCCCC"> worry</font><font color="#E5E5E5"> about the last</font>

195
00:07:37,150 --> 00:07:41,469
<font color="#CCCCCC">parameter just</font><font color="#E5E5E5"> set it to</font><font color="#CCCCCC"> zero that means</font>

196
00:07:38,860 --> 00:07:44,080
you're<font color="#E5E5E5"> going to use the TCP protocol so</font>

197
00:07:41,470 --> 00:07:46,030
we're gonna<font color="#E5E5E5"> get a secure socket API by</font>

198
00:07:44,080 --> 00:07:48,130
changing<font color="#CCCCCC"> that one parameter we're going</font>

199
00:07:46,030 --> 00:07:50,409
to change that IP proto-tool s a

200
00:07:48,130 --> 00:07:51,820
different constant instead<font color="#E5E5E5"> of zero and</font>

201
00:07:50,410 --> 00:07:54,190
that's<font color="#E5E5E5"> going to signal to the operating</font>

202
00:07:51,820 --> 00:07:56,949
<font color="#E5E5E5">system</font><font color="#CCCCCC"> well I want a secure socket</font><font color="#E5E5E5"> when</font>

203
00:07:54,190 --> 00:08:00,180
I connect it<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> on top</font><font color="#CCCCCC"> of that we'll</font>

204
00:07:56,949 --> 00:08:03,240
use<font color="#E5E5E5"> some gets a cop</font><font color="#CCCCCC"> and sets a cop</font>

205
00:08:00,180 --> 00:08:07,710
options so<font color="#CCCCCC"> that developers configure</font>

206
00:08:03,240 --> 00:08:10,060
their security so here's an<font color="#CCCCCC"> example of a</font>

207
00:08:07,710 --> 00:08:12,789
<font color="#E5E5E5">program that</font><font color="#CCCCCC"> we wrote</font><font color="#E5E5E5"> this is a little</font>

208
00:08:10,060 --> 00:08:14,860
small<font color="#CCCCCC"> web client it just goes in fetches</font>

209
00:08:12,789 --> 00:08:17,380
<font color="#CCCCCC">Google's</font><font color="#E5E5E5"> homepage</font><font color="#CCCCCC"> it's trying to do this</font>

210
00:08:14,860 --> 00:08:19,090
securely<font color="#E5E5E5"> and you'll notice in red there</font>

211
00:08:17,380 --> 00:08:20,740
are two small<font color="#E5E5E5"> changes that</font><font color="#CCCCCC"> we had to</font>

212
00:08:19,090 --> 00:08:23,320
make<font color="#E5E5E5"> in order to turn this into a secure</font>

213
00:08:20,740 --> 00:08:25,630
web client<font color="#E5E5E5"> we had to change the port</font><font color="#CCCCCC"> 443</font>

214
00:08:23,320 --> 00:08:27,219
<font color="#E5E5E5">and then we changed that</font><font color="#CCCCCC"> zero to</font><font color="#E5E5E5"> IP</font>

215
00:08:25,630 --> 00:08:29,409
<font color="#E5E5E5">protocol s when we create a socket</font>

216
00:08:27,220 --> 00:08:31,840
<font color="#E5E5E5">everything else is taken</font><font color="#CCCCCC"> care</font><font color="#E5E5E5"> of for</font><font color="#CCCCCC"> us</font>

217
00:08:29,409 --> 00:08:34,299
<font color="#E5E5E5">by the security layer this is the idea</font>

218
00:08:31,840 --> 00:08:37,449
of<font color="#E5E5E5"> what we want to create</font><font color="#CCCCCC"> ok so how are</font>

219
00:08:34,299 --> 00:08:39,250
we going to<font color="#E5E5E5"> compare that</font><font color="#CCCCCC"> to what we</font><font color="#E5E5E5"> have</font>

220
00:08:37,450 --> 00:08:42,459
to do right<font color="#CCCCCC"> now we took this same</font>

221
00:08:39,250 --> 00:08:44,770
protocol<font color="#CCCCCC"> this is the same application we</font>

222
00:08:42,458 --> 00:08:47,739
wrote<font color="#E5E5E5"> it using the open SSL library and</font>

223
00:08:44,770 --> 00:08:50,860
we ended up with<font color="#E5E5E5"> 317 lines of code</font><font color="#CCCCCC"> and</font>

224
00:08:47,740 --> 00:08:52,959
most of that<font color="#E5E5E5"> is from having</font><font color="#CCCCCC"> to validate</font>

225
00:08:50,860 --> 00:08:58,360
certificates this<font color="#E5E5E5"> tricky area that that</font>

226
00:08:52,959 --> 00:08:59,410
users struggle with<font color="#CCCCCC"> ok so that's the</font>

227
00:08:58,360 --> 00:09:01,589
power of<font color="#CCCCCC"> choosing the</font><font color="#E5E5E5"> right abstraction</font>

228
00:08:59,410 --> 00:09:05,140
how we can actually<font color="#CCCCCC"> implement that</font>

229
00:09:01,589 --> 00:09:08,020
<font color="#CCCCCC">particular transport transport security</font>

230
00:09:05,140 --> 00:09:10,360
layer for us well here in this diagram

231
00:09:08,020 --> 00:09:12,310
<font color="#E5E5E5">you can see on the right</font>

232
00:09:10,360 --> 00:09:14,500
application it calls down to the<font color="#CCCCCC"> POSIX</font>

233
00:09:12,310 --> 00:09:17,349
socket API to<font color="#CCCCCC"> create a socket</font><font color="#E5E5E5"> we've</font>

234
00:09:14,500 --> 00:09:19,690
written a kernel<font color="#E5E5E5"> module that will</font>

235
00:09:17,350 --> 00:09:21,610
intercept those system calls<font color="#CCCCCC"> recognize</font>

236
00:09:19,690 --> 00:09:23,950
<font color="#CCCCCC">that they</font><font color="#E5E5E5"> are trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use a TLS socket</font>

237
00:09:21,610 --> 00:09:26,380
<font color="#E5E5E5">and divert that</font><font color="#CCCCCC"> to an encryption daemon</font>

238
00:09:23,950 --> 00:09:28,810
<font color="#E5E5E5">that runs in user space the encryption</font>

239
00:09:26,380 --> 00:09:29,980
daemon<font color="#E5E5E5"> then will implement all the best</font>

240
00:09:28,810 --> 00:09:33,040
practices<font color="#CCCCCC"> of how to use a particular</font>

241
00:09:29,980 --> 00:09:35,200
<font color="#CCCCCC">security library say open</font><font color="#E5E5E5"> SSL to create</font>

242
00:09:33,040 --> 00:09:37,959
that TLS<font color="#CCCCCC"> connection for that application</font>

243
00:09:35,200 --> 00:09:39,160
<font color="#CCCCCC">and communicate over the</font><font color="#E5E5E5"> Internet</font><font color="#CCCCCC"> and</font>

244
00:09:37,959 --> 00:09:42,099
<font color="#E5E5E5">then there's an important piece here</font>

245
00:09:39,160 --> 00:09:45,189
<font color="#E5E5E5">that we get by using an operating system</font>

246
00:09:42,100 --> 00:09:47,260
service we<font color="#E5E5E5"> get a lever</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> policy</font><font color="#CCCCCC"> and so</font>

247
00:09:45,190 --> 00:09:50,019
that authentic that encryption daemon

248
00:09:47,260 --> 00:09:51,610
can check policy<font color="#E5E5E5"> and ensure that</font><font color="#CCCCCC"> any</font>

249
00:09:50,019 --> 00:09:53,920
<font color="#CCCCCC">outgoing connections are</font><font color="#E5E5E5"> going to adhere</font>

250
00:09:51,610 --> 00:09:56,769
<font color="#E5E5E5">to the policy that</font><font color="#CCCCCC"> you have set for</font><font color="#E5E5E5"> that</font>

251
00:09:53,920 --> 00:09:58,420
particular machine<font color="#E5E5E5"> all right now I</font>

252
00:09:56,769 --> 00:10:00,279
<font color="#E5E5E5">promised you I was</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to follow some</font>

253
00:09:58,420 --> 00:10:02,769
principles so let's walk<font color="#CCCCCC"> through</font>

254
00:10:00,279 --> 00:10:04,810
separation<font color="#CCCCCC"> of concerns here the</font>

255
00:10:02,769 --> 00:10:06,579
operating<font color="#E5E5E5"> system is going</font><font color="#CCCCCC"> to provide</font><font color="#E5E5E5"> the</font>

256
00:10:04,810 --> 00:10:09,640
implementation of<font color="#E5E5E5"> the security layer and</font>

257
00:10:06,579 --> 00:10:11,680
the<font color="#E5E5E5"> enforcement of that policy</font><font color="#CCCCCC"> the</font>

258
00:10:09,640 --> 00:10:13,240
system administrators or the operating

259
00:10:11,680 --> 00:10:15,760
system or device<font color="#CCCCCC"> vendors can specify</font>

260
00:10:13,240 --> 00:10:18,760
policy that's<font color="#E5E5E5"> going to include things</font>

261
00:10:15,760 --> 00:10:21,010
like<font color="#CCCCCC"> minimum TLS versions</font><font color="#E5E5E5"> acceptable</font>

262
00:10:18,760 --> 00:10:24,250
cipher suites even in a preference order

263
00:10:21,010 --> 00:10:25,930
<font color="#E5E5E5">they could include mandating certain</font>

264
00:10:24,250 --> 00:10:27,670
things about certificate validation like

265
00:10:25,930 --> 00:10:28,779
checking revocation status if<font color="#E5E5E5"> you would</font>

266
00:10:27,670 --> 00:10:31,990
like to<font color="#E5E5E5"> enforce that for your</font>

267
00:10:28,779 --> 00:10:33,480
applications<font color="#E5E5E5"> and then developers when</font>

268
00:10:31,990 --> 00:10:37,630
they write code<font color="#E5E5E5"> are going to specify</font>

269
00:10:33,480 --> 00:10:40,690
configuration of that TLS<font color="#CCCCCC"> connection and</font>

270
00:10:37,630 --> 00:10:43,470
that's<font color="#E5E5E5"> an important point what we're</font>

271
00:10:40,690 --> 00:10:45,839
going to do is push developers to use

272
00:10:43,470 --> 00:10:48,790
configuration instead of implementation

273
00:10:45,839 --> 00:10:51,100
<font color="#E5E5E5">so that they can specify how they want</font>

274
00:10:48,790 --> 00:10:53,019
the security<font color="#CCCCCC"> later operate but</font><font color="#E5E5E5"> not</font>

275
00:10:51,100 --> 00:10:54,970
actually have<font color="#E5E5E5"> to implement it themselves</font>

276
00:10:53,019 --> 00:10:57,250
we think<font color="#E5E5E5"> this approach will</font><font color="#CCCCCC"> lead to far</font>

277
00:10:54,970 --> 00:10:59,980
fewer bugs and therefore vulnerabilities

278
00:10:57,250 --> 00:11:02,769
and applications so here's an example<font color="#CCCCCC"> on</font>

279
00:10:59,980 --> 00:11:05,589
the server side<font color="#E5E5E5"> if you want to create a</font>

280
00:11:02,769 --> 00:11:07,930
secure server<font color="#CCCCCC"> you're going to specify IP</font>

281
00:11:05,589 --> 00:11:09,730
<font color="#CCCCCC">protocol s and then you could do things</font>

282
00:11:07,930 --> 00:11:11,170
like<font color="#E5E5E5"> a sign a certificate chain that</font>

283
00:11:09,730 --> 00:11:12,790
<font color="#E5E5E5">your hand out to clients</font><font color="#CCCCCC"> when they</font>

284
00:11:11,170 --> 00:11:15,189
connect to your<font color="#CCCCCC"> server</font><font color="#E5E5E5"> and perhaps</font>

285
00:11:12,790 --> 00:11:17,260
<font color="#E5E5E5">assign a private key</font><font color="#CCCCCC"> so that you can</font>

286
00:11:15,190 --> 00:11:19,769
prove<font color="#CCCCCC"> ownership of the public key that</font>

287
00:11:17,260 --> 00:11:19,769
<font color="#E5E5E5">you're giving out</font>

288
00:11:20,200 --> 00:11:25,180
how important secondary<font color="#CCCCCC"> principle here</font>

289
00:11:23,079 --> 00:11:27,040
is<font color="#CCCCCC"> that in our system developers can</font>

290
00:11:25,180 --> 00:11:30,040
never weaken security relative to the

291
00:11:27,040 --> 00:11:31,839
system policy so if the system<font color="#CCCCCC"> policy</font>

292
00:11:30,040 --> 00:11:33,639
says here is a minimum TLS version<font color="#CCCCCC"> for</font>

293
00:11:31,839 --> 00:11:35,709
<font color="#CCCCCC">example they can request a greater one</font>

294
00:11:33,639 --> 00:11:39,130
than<font color="#E5E5E5"> that but they can't ever request an</font>

295
00:11:35,709 --> 00:11:41,229
old TLS version<font color="#E5E5E5"> or they cannot</font><font color="#CCCCCC"> request a</font>

296
00:11:39,130 --> 00:11:46,570
cipher suite that is not supported<font color="#E5E5E5"> by</font>

297
00:11:41,230 --> 00:11:48,130
<font color="#E5E5E5">the policy if you</font><font color="#CCCCCC"> take</font><font color="#E5E5E5"> them these things</font>

298
00:11:46,570 --> 00:11:50,230
<font color="#E5E5E5">that we've got</font><font color="#CCCCCC"> here in the security</font>

299
00:11:48,130 --> 00:11:52,269
<font color="#E5E5E5">there we've</font><font color="#CCCCCC"> got the POSIX socket API as</font>

300
00:11:50,230 --> 00:11:54,850
an abstraction<font color="#CCCCCC"> the kernel module that</font>

301
00:11:52,269 --> 00:11:56,620
<font color="#E5E5E5">intercept system calls that</font><font color="#CCCCCC"> also gives</font>

302
00:11:54,850 --> 00:12:00,370
us a nice property<font color="#CCCCCC"> of easy</font><font color="#E5E5E5"> language</font>

303
00:11:56,620 --> 00:12:02,380
support<font color="#E5E5E5"> so this isn't just</font><font color="#CCCCCC"> for C we were</font>

304
00:12:00,370 --> 00:12:05,139
able to port this with a very small

305
00:12:02,380 --> 00:12:08,019
amount<font color="#CCCCCC"> of effort</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> cover PHP Python</font><font color="#E5E5E5"> and</font>

306
00:12:05,139 --> 00:12:10,360
go just<font color="#E5E5E5"> as a demonstration and the bulk</font>

307
00:12:08,019 --> 00:12:12,579
of that<font color="#E5E5E5"> work was just finding where to</font>

308
00:12:10,360 --> 00:12:15,370
<font color="#E5E5E5">define the new constant for IP</font><font color="#CCCCCC"> protocol</font>

309
00:12:12,579 --> 00:12:16,599
<font color="#CCCCCC">s that was all that</font><font color="#E5E5E5"> was needed for PHP</font>

310
00:12:15,370 --> 00:12:18,100
and Python<font color="#E5E5E5"> for go</font>

311
00:12:16,600 --> 00:12:22,269
it was adjusting some wrappers around

312
00:12:18,100 --> 00:12:24,399
<font color="#CCCCCC">the</font><font color="#E5E5E5"> system calls we also took a couple</font>

313
00:12:22,269 --> 00:12:27,399
of different web servers<font color="#E5E5E5"> we took caddy</font>

314
00:12:24,399 --> 00:12:29,380
and<font color="#CCCCCC"> fly T and we ported them to use the</font>

315
00:12:27,399 --> 00:12:32,019
secure socket API<font color="#E5E5E5"> instead of open SSL</font>

316
00:12:29,380 --> 00:12:34,420
<font color="#CCCCCC">and to do this we took an undergraduate</font>

317
00:12:32,019 --> 00:12:37,510
student<font color="#CCCCCC"> who knew about sockets but</font><font color="#E5E5E5"> had</font>

318
00:12:34,420 --> 00:12:39,430
never seen the<font color="#CCCCCC"> actual source code for</font>

319
00:12:37,510 --> 00:12:41,620
<font color="#E5E5E5">these web servers before</font><font color="#CCCCCC"> and it</font><font color="#E5E5E5"> took</font>

320
00:12:39,430 --> 00:12:43,689
them a<font color="#E5E5E5"> total of five</font><font color="#CCCCCC"> hours</font><font color="#E5E5E5"> in each</font><font color="#CCCCCC"> case</font>

321
00:12:41,620 --> 00:12:45,850
that<font color="#CCCCCC"> was mainly stripping out about</font>

322
00:12:43,690 --> 00:12:47,649
<font color="#E5E5E5">2,000 lines of code</font><font color="#CCCCCC"> to interact with</font>

323
00:12:45,850 --> 00:12:49,269
open<font color="#E5E5E5"> SSL and</font><font color="#CCCCCC"> putting in a handful of</font>

324
00:12:47,649 --> 00:12:54,250
lines<font color="#CCCCCC"> to use the secure socket API</font>

325
00:12:49,269 --> 00:12:57,130
instead now you<font color="#E5E5E5"> probably noticed that</font>

326
00:12:54,250 --> 00:12:59,380
<font color="#E5E5E5">this is creating some centralized</font>

327
00:12:57,130 --> 00:13:01,810
implementation of TLS for<font color="#CCCCCC"> a given device</font>

328
00:12:59,380 --> 00:13:04,390
<font color="#E5E5E5">there</font><font color="#CCCCCC"> are some pros and cons anytime you</font>

329
00:13:01,810 --> 00:13:07,109
use centralization as a<font color="#E5E5E5"> solution the con</font>

330
00:13:04,390 --> 00:13:09,610
<font color="#E5E5E5">is of course that any bug in our</font>

331
00:13:07,110 --> 00:13:12,790
implementation<font color="#E5E5E5"> of the secure socket API</font>

332
00:13:09,610 --> 00:13:14,740
<font color="#E5E5E5">is going to affect all applications the</font>

333
00:13:12,790 --> 00:13:17,620
<font color="#CCCCCC">Pro is that if we patch that then it</font>

334
00:13:14,740 --> 00:13:19,269
applies to<font color="#E5E5E5"> all applications so we</font><font color="#CCCCCC"> think</font>

335
00:13:17,620 --> 00:13:20,980
<font color="#E5E5E5">this improves the state of the art right</font>

336
00:13:19,269 --> 00:13:22,750
<font color="#CCCCCC">now</font><font color="#E5E5E5"> we're now if there are bugs and</font>

337
00:13:20,980 --> 00:13:24,760
applications each one has to<font color="#E5E5E5"> be patched</font>

338
00:13:22,750 --> 00:13:27,069
individually here we're going<font color="#CCCCCC"> to patch</font>

339
00:13:24,760 --> 00:13:28,890
them all in one<font color="#CCCCCC"> place</font><font color="#E5E5E5"> and hopefully</font><font color="#CCCCCC"> also</font>

340
00:13:27,069 --> 00:13:31,269
reduce the<font color="#CCCCCC"> number of</font><font color="#E5E5E5"> bugs because</font>

341
00:13:28,890 --> 00:13:33,389
<font color="#E5E5E5">developers are focusing on configuration</font>

342
00:13:31,269 --> 00:13:36,430
<font color="#E5E5E5">instead of implementing</font>

343
00:13:33,389 --> 00:13:38,560
ideally if we can get<font color="#E5E5E5"> operating systems</font>

344
00:13:36,430 --> 00:13:41,079
to support<font color="#E5E5E5"> the secure socket API then</font>

345
00:13:38,560 --> 00:13:44,680
they would also be<font color="#CCCCCC"> devoting their</font>

346
00:13:41,079 --> 00:13:48,729
resources<font color="#E5E5E5"> to ensuring that their code is</font>

347
00:13:44,680 --> 00:13:50,290
<font color="#CCCCCC">not got any major bugs in</font><font color="#E5E5E5"> it so the idea</font>

348
00:13:48,730 --> 00:13:52,089
here<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> we can put Google and Apple</font>

349
00:13:50,290 --> 00:13:54,099
to work that that might give<font color="#CCCCCC"> us some</font>

350
00:13:52,089 --> 00:13:55,870
<font color="#CCCCCC">additional advantages</font><font color="#E5E5E5"> and of course with</font>

351
00:13:54,100 --> 00:13:57,910
centralization we also get easy language

352
00:13:55,870 --> 00:14:01,059
<font color="#CCCCCC">support as I described and</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> policy</font>

353
00:13:57,910 --> 00:14:02,800
<font color="#E5E5E5">lever you</font><font color="#CCCCCC"> may be also</font><font color="#E5E5E5"> noticed that with</font>

354
00:14:01,059 --> 00:14:05,079
our<font color="#E5E5E5"> particular</font><font color="#CCCCCC"> implementation we go</font><font color="#E5E5E5"> into</font>

355
00:14:02,800 --> 00:14:08,258
the<font color="#CCCCCC"> kernel out</font><font color="#E5E5E5"> and then back in that</font>

356
00:14:05,079 --> 00:14:10,149
seems a little<font color="#CCCCCC"> bit wonky you might think</font>

357
00:14:08,259 --> 00:14:12,279
of<font color="#E5E5E5"> a better way to implement this but in</font>

358
00:14:10,149 --> 00:14:13,360
our case we did some performance testing

359
00:14:12,279 --> 00:14:15,759
of it and there is no discernible

360
00:14:13,360 --> 00:14:17,319
overhead having to do that<font color="#E5E5E5"> and I can</font>

361
00:14:15,759 --> 00:14:20,040
point you<font color="#E5E5E5"> to a paper that</font><font color="#CCCCCC"> would give you</font>

362
00:14:17,319 --> 00:14:21,219
<font color="#E5E5E5">some details of how we ran these tests</font>

363
00:14:20,040 --> 00:14:22,990
<font color="#E5E5E5">okay</font>

364
00:14:21,220 --> 00:14:25,089
so maybe you're thinking wow this is

365
00:14:22,990 --> 00:14:28,269
<font color="#CCCCCC">fantastic</font><font color="#E5E5E5"> we have found the Holy Grail</font>

366
00:14:25,089 --> 00:14:30,370
<font color="#CCCCCC">but remember there is an old man who</font>

367
00:14:28,269 --> 00:14:32,860
insists that<font color="#E5E5E5"> we first must answer two</font>

368
00:14:30,370 --> 00:14:35,980
questions<font color="#CCCCCC"> before</font><font color="#E5E5E5"> we can get over the</font>

369
00:14:32,860 --> 00:14:38,319
bridge<font color="#E5E5E5"> of</font><font color="#CCCCCC"> death</font><font color="#E5E5E5"> okay so we have first</font>

370
00:14:35,980 --> 00:14:40,839
one important question<font color="#E5E5E5"> how do you</font>

371
00:14:38,319 --> 00:14:43,059
implement<font color="#E5E5E5"> certificate validation in this</font>

372
00:14:40,839 --> 00:14:44,920
<font color="#E5E5E5">architecture you might remember this</font>

373
00:14:43,059 --> 00:14:46,420
paper<font color="#E5E5E5"> where I scared you and said this</font>

374
00:14:44,920 --> 00:14:48,160
<font color="#CCCCCC">is the most dangerous code in the world</font>

375
00:14:46,420 --> 00:14:50,589
<font color="#E5E5E5">how are we going to solve this problem</font>

376
00:14:48,160 --> 00:14:53,500
well we have<font color="#E5E5E5"> another system that</font><font color="#CCCCCC"> we call</font>

377
00:14:50,589 --> 00:14:55,689
trust base that implements best

378
00:14:53,500 --> 00:14:58,329
practices for certificate validation<font color="#E5E5E5"> and</font>

379
00:14:55,689 --> 00:15:00,189
so the secure socket API and the<font color="#CCCCCC"> write</font>

380
00:14:58,329 --> 00:15:02,378
with the encryption daemon<font color="#E5E5E5"> simply has to</font>

381
00:15:00,189 --> 00:15:04,180
<font color="#E5E5E5">call trust base whenever it has a</font>

382
00:15:02,379 --> 00:15:06,220
certificate validate and<font color="#CCCCCC"> we removing</font>

383
00:15:04,180 --> 00:15:09,399
<font color="#E5E5E5">that responsibility from</font><font color="#CCCCCC"> the developer</font>

384
00:15:06,220 --> 00:15:11,139
<font color="#E5E5E5">we've also given system administrators</font>

385
00:15:09,399 --> 00:15:13,360
some additional tools which we call

386
00:15:11,139 --> 00:15:15,329
plugins<font color="#E5E5E5"> that they can use to provide</font>

387
00:15:13,360 --> 00:15:17,920
stronger<font color="#CCCCCC"> authentication if they desire</font>

388
00:15:15,329 --> 00:15:21,160
of those certificates<font color="#E5E5E5"> so that can</font>

389
00:15:17,920 --> 00:15:22,929
<font color="#E5E5E5">include enforcing revocation checking if</font>

390
00:15:21,160 --> 00:15:25,149
a<font color="#CCCCCC"> developer needs to pin a particular</font>

391
00:15:22,929 --> 00:15:27,490
certificate<font color="#CCCCCC"> if they want</font><font color="#E5E5E5"> to check</font>

392
00:15:25,149 --> 00:15:29,170
certificate transparency logs<font color="#CCCCCC"> we give</font>

393
00:15:27,490 --> 00:15:31,420
you the ability<font color="#E5E5E5"> to do that and</font><font color="#CCCCCC"> you have</font>

394
00:15:29,170 --> 00:15:33,219
policy to be able<font color="#E5E5E5"> to set those</font><font color="#CCCCCC"> things</font>

395
00:15:31,420 --> 00:15:35,410
for you<font color="#E5E5E5"> the other really interesting</font>

396
00:15:33,220 --> 00:15:36,939
thing<font color="#CCCCCC"> about</font><font color="#E5E5E5"> this architecture is that we</font>

397
00:15:35,410 --> 00:15:39,189
can apply these<font color="#E5E5E5"> across all applications</font>

398
00:15:36,939 --> 00:15:41,230
<font color="#CCCCCC">that desire to use the secure socket API</font>

399
00:15:39,189 --> 00:15:42,939
<font color="#CCCCCC">so if you've heard</font><font color="#E5E5E5"> of Google</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> our</font>

400
00:15:41,230 --> 00:15:45,189
LSAT checking that they bake that<font color="#CCCCCC"> into</font>

401
00:15:42,939 --> 00:15:45,880
<font color="#CCCCCC">Chrome</font><font color="#E5E5E5"> we've got a plug-in for</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and</font>

402
00:15:45,189 --> 00:15:47,680
we can check

403
00:15:45,880 --> 00:15:49,780
<font color="#CCCCCC">their same serial set service and apply</font>

404
00:15:47,680 --> 00:15:55,569
<font color="#CCCCCC">that</font><font color="#E5E5E5"> to all applications not just</font>

405
00:15:49,780 --> 00:15:57,579
browsers<font color="#CCCCCC"> alright</font><font color="#E5E5E5"> now we have</font><font color="#CCCCCC"> a second</font>

406
00:15:55,570 --> 00:15:59,860
<font color="#CCCCCC">question we've got an</font><font color="#E5E5E5"> answer how do you</font>

407
00:15:57,580 --> 00:16:03,250
handle client authentication<font color="#E5E5E5"> that's a</font>

408
00:15:59,860 --> 00:16:04,630
really thorny part of TLS<font color="#CCCCCC"> we want</font>

409
00:16:03,250 --> 00:16:06,870
sometimes<font color="#E5E5E5"> to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to give</font>

410
00:16:04,630 --> 00:16:09,880
certificates to users not just<font color="#CCCCCC"> to</font>

411
00:16:06,870 --> 00:16:12,220
services and servers so how are<font color="#E5E5E5"> we going</font>

412
00:16:09,880 --> 00:16:15,010
<font color="#E5E5E5">to be able to make that work well you</font>

413
00:16:12,220 --> 00:16:16,840
<font color="#CCCCCC">might</font><font color="#E5E5E5"> be thinking no problem we can just</font>

414
00:16:15,010 --> 00:16:19,300
turn users over to certificate

415
00:16:16,840 --> 00:16:21,130
authorities<font color="#E5E5E5"> we first of all have</font><font color="#CCCCCC"> to tell</font>

416
00:16:19,300 --> 00:16:23,319
them<font color="#E5E5E5"> what a certificate is which kind of</font>

417
00:16:21,130 --> 00:16:24,939
<font color="#E5E5E5">stuff get they want how</font><font color="#CCCCCC"> to choose a</font>

418
00:16:23,320 --> 00:16:26,980
certificate authority that they trust

419
00:16:24,940 --> 00:16:28,540
<font color="#E5E5E5">and then if they choose on static</font>

420
00:16:26,980 --> 00:16:30,760
<font color="#CCCCCC">Authority I</font><font color="#E5E5E5"> don't want a bag on digit</font>

421
00:16:28,540 --> 00:16:32,260
<font color="#CCCCCC">cert in particular</font><font color="#E5E5E5"> but they would turn</font>

422
00:16:30,760 --> 00:16:34,390
<font color="#E5E5E5">around and give you here's a 42 page</font>

423
00:16:32,260 --> 00:16:36,310
document with instructions<font color="#E5E5E5"> on how to</font>

424
00:16:34,390 --> 00:16:37,569
obtain<font color="#E5E5E5"> the certificate</font><font color="#CCCCCC"> from them</font><font color="#E5E5E5"> how to</font>

425
00:16:36,310 --> 00:16:39,640
configure it<font color="#CCCCCC"> with a particular</font>

426
00:16:37,570 --> 00:16:42,040
<font color="#CCCCCC">application you have to configure each</font>

427
00:16:39,640 --> 00:16:44,620
application<font color="#E5E5E5"> or each browser individually</font>

428
00:16:42,040 --> 00:16:46,089
<font color="#E5E5E5">and you have to hand</font><font color="#CCCCCC"> over</font><font color="#E5E5E5"> your private</font>

429
00:16:44,620 --> 00:16:48,940
key to<font color="#CCCCCC"> that application so it can</font>

430
00:16:46,090 --> 00:16:51,850
<font color="#CCCCCC">authenticate on your behalf all</font><font color="#E5E5E5"> right we</font>

431
00:16:48,940 --> 00:16:53,650
think<font color="#CCCCCC"> we can do better</font><font color="#E5E5E5"> than this you</font>

432
00:16:51,850 --> 00:16:55,120
could say well<font color="#CCCCCC"> let's</font><font color="#E5E5E5"> turn to the phyto</font>

433
00:16:53,650 --> 00:16:56,620
<font color="#CCCCCC">two standards they've got this</font><font color="#E5E5E5"> really</font>

434
00:16:55,120 --> 00:16:57,940
<font color="#E5E5E5">great web authentication standard</font>

435
00:16:56,620 --> 00:17:01,840
they're working on<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think this stuff is</font>

436
00:16:57,940 --> 00:17:03,490
<font color="#CCCCCC">fabulous that is punting</font><font color="#E5E5E5"> authentication</font>

437
00:17:01,840 --> 00:17:05,110
to the application layer<font color="#E5E5E5"> maybe that's</font>

438
00:17:03,490 --> 00:17:07,689
the right architectural choice for you

439
00:17:05,109 --> 00:17:10,510
<font color="#E5E5E5">but we want to see can</font><font color="#CCCCCC"> we do something</font>

440
00:17:07,689 --> 00:17:11,589
<font color="#CCCCCC">better with TLS client</font><font color="#E5E5E5"> authentication</font>

441
00:17:10,510 --> 00:17:13,839
and what would that<font color="#CCCCCC"> look like could we</font>

442
00:17:11,589 --> 00:17:16,958
<font color="#E5E5E5">make it</font><font color="#CCCCCC"> as usable</font><font color="#E5E5E5"> as the web offense</font>

443
00:17:13,839 --> 00:17:19,359
standards appeared to be and we also

444
00:17:16,959 --> 00:17:21,310
have<font color="#E5E5E5"> lebron james here reminding us what</font>

445
00:17:19,359 --> 00:17:23,198
<font color="#CCCCCC">about the architecture</font><font color="#E5E5E5"> you promised me</font>

446
00:17:21,310 --> 00:17:25,540
this was an architecture talk<font color="#E5E5E5"> so how</font>

447
00:17:23,199 --> 00:17:26,800
would this actually<font color="#CCCCCC"> work</font><font color="#E5E5E5"> with its TLS</font>

448
00:17:25,540 --> 00:17:28,930
architecture we've been working on the

449
00:17:26,800 --> 00:17:31,180
security layer<font color="#E5E5E5"> so here's what we have</font>

450
00:17:28,930 --> 00:17:33,430
<font color="#CCCCCC">right here</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> Left a server</font>

451
00:17:31,180 --> 00:17:35,140
<font color="#E5E5E5">that is using the secure socket API and</font>

452
00:17:33,430 --> 00:17:38,170
it's making a TLS<font color="#CCCCCC"> connection with this</font>

453
00:17:35,140 --> 00:17:41,800
<font color="#E5E5E5">client application and when the server</font>

454
00:17:38,170 --> 00:17:43,720
asks for client authentication<font color="#E5E5E5"> the</font>

455
00:17:41,800 --> 00:17:45,280
secure socket API is able to intercept

456
00:17:43,720 --> 00:17:47,500
<font color="#CCCCCC">that request and rather than giving it</font>

457
00:17:45,280 --> 00:17:50,020
to the client app turn to an

458
00:17:47,500 --> 00:17:52,600
Authenticator app a separate app which

459
00:17:50,020 --> 00:17:54,580
<font color="#CCCCCC">is going to</font><font color="#E5E5E5"> hold private keys separately</font>

460
00:17:52,600 --> 00:17:57,159
in a trusted<font color="#CCCCCC"> hardware module of some</font>

461
00:17:54,580 --> 00:17:59,629
sort<font color="#CCCCCC"> and also provide a user</font><font color="#E5E5E5"> interface</font>

462
00:17:57,160 --> 00:18:01,790
<font color="#CCCCCC">to these to say do you want to authentic</font>

463
00:17:59,630 --> 00:18:04,940
<font color="#CCCCCC">Kait with a client certificate to this</font>

464
00:18:01,790 --> 00:18:06,889
<font color="#E5E5E5">particular service</font><font color="#CCCCCC"> and if the user says</font>

465
00:18:04,940 --> 00:18:08,090
yes then the Authenticator will work

466
00:18:06,890 --> 00:18:09,860
with trusted hardware to get a

467
00:18:08,090 --> 00:18:12,350
certificate<font color="#CCCCCC"> that we can use to complete</font>

468
00:18:09,860 --> 00:18:15,199
that handshake and we've divorced<font color="#E5E5E5"> that</font>

469
00:18:12,350 --> 00:18:16,790
from the client application<font color="#CCCCCC"> so the</font>

470
00:18:15,200 --> 00:18:18,680
client application<font color="#E5E5E5"> doesn't need to be</font>

471
00:18:16,790 --> 00:18:20,690
built<font color="#E5E5E5"> with this kind of logic with each</font>

472
00:18:18,680 --> 00:18:22,700
individual<font color="#E5E5E5"> application</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can support</font>

473
00:18:20,690 --> 00:18:24,080
client<font color="#E5E5E5"> authentication regardless of</font>

474
00:18:22,700 --> 00:18:28,490
whether you've baked it into<font color="#E5E5E5"> your app or</font>

475
00:18:24,080 --> 00:18:29,990
not now in this case I'm<font color="#CCCCCC"> showing</font><font color="#E5E5E5"> you</font>

476
00:18:28,490 --> 00:18:32,960
<font color="#E5E5E5">that the Authenticator app is living on</font>

477
00:18:29,990 --> 00:18:34,910
top<font color="#E5E5E5"> of</font><font color="#CCCCCC"> or inside of the</font><font color="#E5E5E5"> same device but</font>

478
00:18:32,960 --> 00:18:36,770
we've also pulled that apart<font color="#CCCCCC"> and the</font>

479
00:18:34,910 --> 00:18:39,230
Authenticator app can be<font color="#CCCCCC"> a separate</font>

480
00:18:36,770 --> 00:18:40,879
<font color="#E5E5E5">device</font><font color="#CCCCCC"> in our case here showing you</font><font color="#E5E5E5"> a</font>

481
00:18:39,230 --> 00:18:43,100
smart phone and<font color="#E5E5E5"> that that can</font>

482
00:18:40,880 --> 00:18:44,600
communicate<font color="#E5E5E5"> and</font><font color="#CCCCCC"> completely handshake for</font>

483
00:18:43,100 --> 00:18:46,730
you so I'm going<font color="#CCCCCC"> to walk you through</font>

484
00:18:44,600 --> 00:18:49,790
<font color="#E5E5E5">this very briefly how these steps would</font>

485
00:18:46,730 --> 00:18:51,230
work<font color="#E5E5E5"> step 0 you need to pair your phone</font>

486
00:18:49,790 --> 00:18:54,350
<font color="#E5E5E5">if you're going to use a separate device</font>

487
00:18:51,230 --> 00:18:56,960
<font color="#E5E5E5">with your laptop we have a prototype</font><font color="#CCCCCC"> of</font>

488
00:18:54,350 --> 00:18:58,550
<font color="#E5E5E5">this where we scan a QR code</font><font color="#CCCCCC"> off the</font>

489
00:18:56,960 --> 00:19:00,530
laptops display so we<font color="#E5E5E5"> make</font><font color="#CCCCCC"> sure we're</font>

490
00:18:58,550 --> 00:19:03,879
pairing with the<font color="#E5E5E5"> right device and</font>

491
00:19:00,530 --> 00:19:06,800
securing<font color="#E5E5E5"> that channel then if a server</font>

492
00:19:03,880 --> 00:19:09,500
<font color="#E5E5E5">wants to if you connect to a remote</font>

493
00:19:06,800 --> 00:19:11,270
server using TLS<font color="#E5E5E5"> and that server wants</font>

494
00:19:09,500 --> 00:19:12,950
to make a certificate<font color="#E5E5E5"> request to you to</font>

495
00:19:11,270 --> 00:19:15,110
say please<font color="#CCCCCC"> authenticate to this</font><font color="#E5E5E5"> service</font>

496
00:19:12,950 --> 00:19:16,640
<font color="#E5E5E5">then we</font><font color="#CCCCCC"> direct</font><font color="#E5E5E5"> that authentication</font>

497
00:19:15,110 --> 00:19:19,280
<font color="#E5E5E5">request to your authentic</font><font color="#CCCCCC"> cater device</font>

498
00:19:16,640 --> 00:19:20,450
<font color="#E5E5E5">the user is</font><font color="#CCCCCC"> given a simple yes-no do you</font>

499
00:19:19,280 --> 00:19:23,810
want to log<font color="#E5E5E5"> in to this particular</font>

500
00:19:20,450 --> 00:19:26,120
<font color="#E5E5E5">service and if they say yes</font><font color="#CCCCCC"> we can sign</font>

501
00:19:23,810 --> 00:19:28,550
<font color="#E5E5E5">the certificate data hand that off to</font>

502
00:19:26,120 --> 00:19:30,500
<font color="#CCCCCC">the laptop</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> the laptop in this case</font>

503
00:19:28,550 --> 00:19:31,159
then would complete the handshake on

504
00:19:30,500 --> 00:19:32,690
your behalf

505
00:19:31,160 --> 00:19:35,180
you've now authenticated a separate

506
00:19:32,690 --> 00:19:37,280
device<font color="#E5E5E5"> you've kept your keys separate so</font>

507
00:19:35,180 --> 00:19:39,080
we<font color="#E5E5E5"> have separation of concerns here the</font>

508
00:19:37,280 --> 00:19:41,480
policy<font color="#CCCCCC"> is given to the user in this case</font>

509
00:19:39,080 --> 00:19:43,310
<font color="#E5E5E5">as opposed to the system administrator</font>

510
00:19:41,480 --> 00:19:47,060
because<font color="#E5E5E5"> they can choose how and when</font>

511
00:19:43,310 --> 00:19:48,710
they want to<font color="#E5E5E5"> log in and you can even do</font>

512
00:19:47,060 --> 00:19:51,139
<font color="#E5E5E5">that to Kate or deactivate that</font>

513
00:19:48,710 --> 00:19:53,300
authentication<font color="#E5E5E5"> remotely for this device</font>

514
00:19:51,140 --> 00:19:54,710
<font color="#E5E5E5">so if you're going to use a device in a</font>

515
00:19:53,300 --> 00:19:56,840
public space<font color="#E5E5E5"> that doesn't belong to you</font>

516
00:19:54,710 --> 00:19:59,120
<font color="#E5E5E5">for example you can log in securely</font><font color="#CCCCCC"> you</font>

517
00:19:56,840 --> 00:20:00,649
keep your credentials<font color="#E5E5E5"> safe with you and</font>

518
00:19:59,120 --> 00:20:01,939
you can turn off that authentication

519
00:20:00,650 --> 00:20:05,650
wherever you want and<font color="#E5E5E5"> log out that</font>

520
00:20:01,940 --> 00:20:09,380
device<font color="#E5E5E5"> so no longer</font><font color="#CCCCCC"> can impersonate</font><font color="#E5E5E5"> you</font>

521
00:20:05,650 --> 00:20:10,790
<font color="#CCCCCC">alright now we've solved a big</font><font color="#E5E5E5"> piece of</font>

522
00:20:09,380 --> 00:20:12,590
<font color="#E5E5E5">that puzzle but what about getting</font>

523
00:20:10,790 --> 00:20:13,070
<font color="#CCCCCC">client certificates to users that's a</font>

524
00:20:12,590 --> 00:20:15,500
really

525
00:20:13,070 --> 00:20:17,419
thorny problem<font color="#E5E5E5"> we've got two particular</font>

526
00:20:15,500 --> 00:20:20,180
<font color="#E5E5E5">ways that we're working on to solve this</font>

527
00:20:17,420 --> 00:20:22,310
<font color="#E5E5E5">problem one is that we have</font><font color="#CCCCCC"> a prototype</font>

528
00:20:20,180 --> 00:20:23,720
<font color="#CCCCCC">that automatically creates</font><font color="#E5E5E5"> certificates</font>

529
00:20:22,310 --> 00:20:26,149
for you when you register for<font color="#E5E5E5"> an account</font>

530
00:20:23,720 --> 00:20:28,970
<font color="#E5E5E5">with a service so you're going to</font><font color="#CCCCCC"> a</font>

531
00:20:26,150 --> 00:20:31,100
service and it says<font color="#E5E5E5"> I you want to create</font>

532
00:20:28,970 --> 00:20:32,990
<font color="#E5E5E5">an account simply prove ownership of the</font>

533
00:20:31,100 --> 00:20:34,850
public key<font color="#CCCCCC"> that you presented and then</font>

534
00:20:32,990 --> 00:20:37,520
they will then<font color="#E5E5E5"> sign if certificate for</font>

535
00:20:34,850 --> 00:20:39,439
you deliver<font color="#E5E5E5"> that certificate to you and</font>

536
00:20:37,520 --> 00:20:41,870
you can<font color="#E5E5E5"> represent it at a later point in</font>

537
00:20:39,440 --> 00:20:43,580
<font color="#CCCCCC">time</font><font color="#E5E5E5"> when you want to</font><font color="#CCCCCC"> log in so we've</font>

538
00:20:41,870 --> 00:20:47,179
got a<font color="#CCCCCC"> certificate that is bound simply</font>

539
00:20:43,580 --> 00:20:49,399
to a particular service or site<font color="#E5E5E5"> now</font>

540
00:20:47,180 --> 00:20:52,040
there's some<font color="#E5E5E5"> downsides here of course if</font>

541
00:20:49,400 --> 00:20:54,590
I somehow<font color="#E5E5E5"> lose my Authenticator device I</font>

542
00:20:52,040 --> 00:20:57,649
lose my phone<font color="#E5E5E5"> then I lose</font><font color="#CCCCCC"> access to my</font>

543
00:20:54,590 --> 00:21:00,770
accounts<font color="#E5E5E5"> so we're building a backup</font>

544
00:20:57,650 --> 00:21:02,120
<font color="#E5E5E5">system for this and my lab is mostly</font>

545
00:21:00,770 --> 00:21:03,470
<font color="#CCCCCC">unusable security so we're trying to</font>

546
00:21:02,120 --> 00:21:05,629
<font color="#E5E5E5">figure</font><font color="#CCCCCC"> out how can</font><font color="#E5E5E5"> we provide usable</font>

547
00:21:03,470 --> 00:21:07,310
ways for people to<font color="#E5E5E5"> backup and and be</font>

548
00:21:05,630 --> 00:21:09,920
<font color="#CCCCCC">able</font><font color="#E5E5E5"> to recover accounts in situations</font>

549
00:21:07,310 --> 00:21:11,030
like<font color="#E5E5E5"> this that's the first</font><font color="#CCCCCC"> way the</font>

550
00:21:09,920 --> 00:21:12,560
second way we're<font color="#CCCCCC"> working</font><font color="#E5E5E5"> on building</font>

551
00:21:11,030 --> 00:21:14,810
<font color="#E5E5E5">right now is the system we're calling</font>

552
00:21:12,560 --> 00:21:16,129
let's authenticate<font color="#E5E5E5"> modeled after the</font>

553
00:21:14,810 --> 00:21:18,770
let's encrypt<font color="#CCCCCC"> service for issuing</font>

554
00:21:16,130 --> 00:21:19,970
certificates<font color="#E5E5E5"> automatically to users</font><font color="#CCCCCC"> for</font>

555
00:21:18,770 --> 00:21:21,410
<font color="#CCCCCC">websites here we're</font><font color="#E5E5E5"> going to</font>

556
00:21:19,970 --> 00:21:24,230
<font color="#E5E5E5">automatically issue certificates to</font>

557
00:21:21,410 --> 00:21:26,780
individual<font color="#CCCCCC"> users</font><font color="#E5E5E5"> and we have a couple</font><font color="#CCCCCC"> of</font>

558
00:21:24,230 --> 00:21:28,460
ideas one<font color="#CCCCCC"> of them working</font><font color="#E5E5E5"> on is proving</font>

559
00:21:26,780 --> 00:21:30,230
again ownership of your public<font color="#CCCCCC"> key but</font>

560
00:21:28,460 --> 00:21:31,940
<font color="#CCCCCC">then also</font><font color="#E5E5E5"> proving ownership of your</font>

561
00:21:30,230 --> 00:21:33,350
email<font color="#CCCCCC"> address and the service can bind</font>

562
00:21:31,940 --> 00:21:35,240
<font color="#E5E5E5">those together in sign of certificate</font>

563
00:21:33,350 --> 00:21:37,310
for you<font color="#E5E5E5"> and we can</font><font color="#CCCCCC"> do this automatically</font>

564
00:21:35,240 --> 00:21:38,480
for<font color="#E5E5E5"> users for the most part we simply</font>

565
00:21:37,310 --> 00:21:40,550
have<font color="#E5E5E5"> to have a user check their email</font>

566
00:21:38,480 --> 00:21:43,550
and<font color="#E5E5E5"> get a code which these two doing</font>

567
00:21:40,550 --> 00:21:44,960
already now<font color="#E5E5E5"> this has</font><font color="#CCCCCC"> some different</font>

568
00:21:43,550 --> 00:21:47,120
<font color="#E5E5E5">properties compared to the previous</font>

569
00:21:44,960 --> 00:21:50,540
<font color="#CCCCCC">solution we showed you first</font><font color="#E5E5E5"> of all if I</font>

570
00:21:47,120 --> 00:21:53,510
lose my phone<font color="#CCCCCC"> well I can</font><font color="#E5E5E5"> easily replace</font>

571
00:21:50,540 --> 00:21:55,610
that with a<font color="#E5E5E5"> new phone and reprove</font>

572
00:21:53,510 --> 00:21:57,800
ownership of my email address get a new

573
00:21:55,610 --> 00:21:59,060
certificate<font color="#E5E5E5"> and still have access to</font><font color="#CCCCCC"> my</font>

574
00:21:57,800 --> 00:22:02,960
<font color="#E5E5E5">accounts that has some nice properties</font>

575
00:21:59,060 --> 00:22:04,550
<font color="#CCCCCC">for users but of course has the downside</font>

576
00:22:02,960 --> 00:22:06,980
<font color="#CCCCCC">that we now are adding even more</font>

577
00:22:04,550 --> 00:22:10,700
importance to ensuring<font color="#CCCCCC"> the security of</font>

578
00:22:06,980 --> 00:22:12,170
your<font color="#E5E5E5"> email account</font><font color="#CCCCCC"> so we're working</font><font color="#E5E5E5"> on</font>

579
00:22:10,700 --> 00:22:14,270
looking<font color="#CCCCCC"> at those</font><font color="#E5E5E5"> different trade-offs</font>

580
00:22:12,170 --> 00:22:15,830
<font color="#CCCCCC">this particular</font><font color="#E5E5E5"> one is very similar to</font>

581
00:22:14,270 --> 00:22:17,450
what we do<font color="#CCCCCC"> today where people can reset</font>

582
00:22:15,830 --> 00:22:19,879
passwords through their email accounts

583
00:22:17,450 --> 00:22:22,730
<font color="#E5E5E5">the alternative is to somehow teach them</font>

584
00:22:19,880 --> 00:22:24,830
and help them<font color="#E5E5E5"> protect their private keys</font>

585
00:22:22,730 --> 00:22:26,269
because<font color="#E5E5E5"> they are irreplaceable</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> so</font>

586
00:22:24,830 --> 00:22:30,468
we're<font color="#CCCCCC"> looking at</font><font color="#E5E5E5"> trade-offs of those two</font>

587
00:22:26,269 --> 00:22:32,570
<font color="#CCCCCC">kinds</font><font color="#E5E5E5"> of systems now if I take all</font><font color="#CCCCCC"> that</font>

588
00:22:30,469 --> 00:22:35,059
<font color="#CCCCCC">stuff together that lets us reduce that</font>

589
00:22:32,570 --> 00:22:36,979
42<font color="#CCCCCC"> pages of how to use tickets to one or</font>

590
00:22:35,059 --> 00:22:39,109
<font color="#CCCCCC">two clicks for the users so that's what</font>

591
00:22:36,979 --> 00:22:42,109
we're trying to<font color="#E5E5E5"> get here is to get TLS</font>

592
00:22:39,109 --> 00:22:46,699
certificates is usable as a two-factor

593
00:22:42,109 --> 00:22:48,678
off<font color="#E5E5E5"> a</font><font color="#CCCCCC"> p-- on your phone so you might be</font>

594
00:22:46,700 --> 00:22:51,499
<font color="#CCCCCC">thinking wow this</font><font color="#E5E5E5"> is amazing</font>

595
00:22:48,679 --> 00:22:53,899
secure socket API is<font color="#CCCCCC"> the holy grail we</font>

596
00:22:51,499 --> 00:22:55,969
found it<font color="#CCCCCC"> hey what I hope I've convinced</font>

597
00:22:53,899 --> 00:22:58,158
you of is<font color="#E5E5E5"> that architecture is</font><font color="#CCCCCC"> the holy</font>

598
00:22:55,969 --> 00:23:00,349
<font color="#E5E5E5">grail that when we're designing systems</font>

599
00:22:58,159 --> 00:23:02,179
like this we want<font color="#E5E5E5"> to look very carefully</font>

600
00:23:00,349 --> 00:23:04,700
at principles that we've learned<font color="#E5E5E5"> over</font>

601
00:23:02,179 --> 00:23:06,909
the years<font color="#CCCCCC"> we want to</font><font color="#E5E5E5"> look at layering to</font>

602
00:23:04,700 --> 00:23:09,169
isolate applications<font color="#E5E5E5"> from</font>

603
00:23:06,909 --> 00:23:11,869
implementations<font color="#E5E5E5"> of complicated</font><font color="#CCCCCC"> software</font>

604
00:23:09,169 --> 00:23:14,239
like TLS<font color="#E5E5E5"> we want to try to choose the</font>

605
00:23:11,869 --> 00:23:16,908
<font color="#CCCCCC">right abstraction</font><font color="#E5E5E5"> abstractions give us</font>

606
00:23:14,239 --> 00:23:19,309
usable<font color="#CCCCCC"> security for developers and fewer</font>

607
00:23:16,909 --> 00:23:20,899
vulnerable applications<font color="#E5E5E5"> and we want to</font>

608
00:23:19,309 --> 00:23:22,219
look<font color="#E5E5E5"> at separation</font><font color="#CCCCCC"> of concerns</font><font color="#E5E5E5"> to decide</font>

609
00:23:20,899 --> 00:23:25,248
where do we want<font color="#CCCCCC"> to place that</font>

610
00:23:22,219 --> 00:23:27,259
<font color="#E5E5E5">implementation can we somehow give</font>

611
00:23:25,249 --> 00:23:28,969
<font color="#E5E5E5">developers a configuration interface</font>

612
00:23:27,259 --> 00:23:31,669
<font color="#E5E5E5">rather than requiring them to</font><font color="#CCCCCC"> implement</font>

613
00:23:28,969 --> 00:23:33,829
security<font color="#E5E5E5"> policy</font><font color="#CCCCCC"> can we separate policy</font>

614
00:23:31,669 --> 00:23:36,619
out and give that control to users<font color="#E5E5E5"> to</font>

615
00:23:33,829 --> 00:23:38,658
<font color="#CCCCCC">system administrators</font><font color="#E5E5E5"> or to operating</font>

616
00:23:36,619 --> 00:23:40,579
<font color="#CCCCCC">systems vendors</font><font color="#E5E5E5"> and can we be really</font>

617
00:23:38,659 --> 00:23:42,559
<font color="#E5E5E5">careful about where we place those keys</font>

618
00:23:40,579 --> 00:23:46,158
and ensure that<font color="#E5E5E5"> those keys are</font><font color="#CCCCCC"> in a safe</font>

619
00:23:42,559 --> 00:23:47,690
place<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> love to have you help me</font>

620
00:23:46,159 --> 00:23:49,879
continue<font color="#E5E5E5"> this quest</font><font color="#CCCCCC"> I don't think by any</font>

621
00:23:47,690 --> 00:23:52,820
<font color="#E5E5E5">point we're finished you can visit</font>

622
00:23:49,879 --> 00:23:55,699
secure socket API org<font color="#E5E5E5"> to find papers and</font>

623
00:23:52,820 --> 00:23:57,079
code<font color="#CCCCCC"> we would love to</font><font color="#E5E5E5"> have you help us</font>

624
00:23:55,700 --> 00:23:58,759
<font color="#E5E5E5">whether you're a developer</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> an OS</font>

625
00:23:57,079 --> 00:24:01,039
vendor or a researcher there's lots of

626
00:23:58,759 --> 00:24:02,869
work to<font color="#E5E5E5"> be done</font><font color="#CCCCCC"> there if you're a user</font>

627
00:24:01,039 --> 00:24:04,999
<font color="#E5E5E5">hopefully you've come</font><font color="#CCCCCC"> out of</font><font color="#E5E5E5"> this talk</font>

628
00:24:02,869 --> 00:24:06,889
and<font color="#CCCCCC"> said</font><font color="#E5E5E5"> I really</font><font color="#CCCCCC"> want to ask</font><font color="#E5E5E5"> for policy</font>

629
00:24:04,999 --> 00:24:09,789
control I think<font color="#CCCCCC"> that will make</font><font color="#E5E5E5"> me safer</font>

630
00:24:06,889 --> 00:24:09,789
thank you<font color="#E5E5E5"> very much</font>

631
00:24:11,240 --> 00:24:13,300
<font color="#E5E5E5">you</font>

