1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:13,219 --> 00:00:16,079
well I hope you are all buckled in we

3
00:00:16,079 --> 00:00:18,539
are about to have a very cozy fireside

4
00:00:18,539 --> 00:00:22,320
chat this morning on memory safety uh

5
00:00:22,320 --> 00:00:24,840
memory safety vulnerability is a

6
00:00:24,840 --> 00:00:27,359
critical issue

7
00:00:27,359 --> 00:00:29,160
um and I'm really excited to be here

8
00:00:29,160 --> 00:00:31,199
today to moderate this panel and talk

9
00:00:31,199 --> 00:00:33,960
about it my name is Amir adala and I

10
00:00:33,960 --> 00:00:36,360
work at consumer reports that has

11
00:00:36,360 --> 00:00:37,680
nothing to do with Consumer Reports I

12
00:00:37,680 --> 00:00:38,940
just got really excited about the fire

13
00:00:38,940 --> 00:00:42,120
coming on the screen it's like yes this

14
00:00:42,120 --> 00:00:43,620
is the coziness that I've been talking

15
00:00:43,620 --> 00:00:45,480
about

16
00:00:45,480 --> 00:00:47,100
um yeah I'm and I'm really excited to

17
00:00:47,100 --> 00:00:49,200
talk about memory safety today because

18
00:00:49,200 --> 00:00:51,420
it is such a critical issue but you

19
00:00:51,420 --> 00:00:52,680
don't have to take my word for it

20
00:00:52,680 --> 00:00:55,440
because I have data

21
00:00:55,440 --> 00:00:58,379
recent study found that 60 to 70 percent

22
00:00:58,379 --> 00:01:01,079
of vulnerabilities in iOS and Mac OS are

23
00:01:01,079 --> 00:01:03,840
memory safety vulnerabilities Microsoft

24
00:01:03,840 --> 00:01:06,119
estimates that 70 of all vulnerabilities

25
00:01:06,119 --> 00:01:07,680
in their product over the last decade

26
00:01:07,680 --> 00:01:10,740
have been memory safety issues and

27
00:01:10,740 --> 00:01:13,080
Google estimated that 90 of Android

28
00:01:13,080 --> 00:01:16,140
vulnerabilities are memory safety and so

29
00:01:16,140 --> 00:01:18,119
it is a really critical issue and with

30
00:01:18,119 --> 00:01:19,979
the rise of Bad actors and figuring out

31
00:01:19,979 --> 00:01:22,080
how we're going to secure our products

32
00:01:22,080 --> 00:01:24,360
our tools and our services it's ever

33
00:01:24,360 --> 00:01:26,580
more critical time with private and

34
00:01:26,580 --> 00:01:28,500
public pressure to switch to memory safe

35
00:01:28,500 --> 00:01:29,720
languages

36
00:01:29,720 --> 00:01:33,900
and not only that there is just a lot of

37
00:01:33,900 --> 00:01:35,460
challenges that have kept coming up over

38
00:01:35,460 --> 00:01:36,960
the last few years as we've been talking

39
00:01:36,960 --> 00:01:39,060
about this and today we're going to talk

40
00:01:39,060 --> 00:01:40,380
about those challenges with our

41
00:01:40,380 --> 00:01:42,479
panelists and I'd love for them to

42
00:01:42,479 --> 00:01:43,979
introduce themselves so if you all would

43
00:01:43,979 --> 00:01:45,840
just do your name your org or

44
00:01:45,840 --> 00:01:47,700
affiliation and what brings you to the

45
00:01:47,700 --> 00:01:49,979
conversation on memory safety

46
00:01:49,979 --> 00:01:53,040
okay hi everybody I'm Yael and I work

47
00:01:53,040 --> 00:01:55,159
for Consumer Reports on security planner

48
00:01:55,159 --> 00:01:57,420
and I started thinking about memory

49
00:01:57,420 --> 00:02:00,180
safety I think we're reading Alex's blog

50
00:02:00,180 --> 00:02:01,200
actually

51
00:02:01,200 --> 00:02:02,820
um and I was looking at the number of

52
00:02:02,820 --> 00:02:04,380
vulnerabilities and I'm like this sounds

53
00:02:04,380 --> 00:02:06,600
really high and just kind of pulling on

54
00:02:06,600 --> 00:02:10,080
that string and then at the same time my

55
00:02:10,080 --> 00:02:11,099
background is in investigative

56
00:02:11,099 --> 00:02:13,260
journalism and so you know like we're

57
00:02:13,260 --> 00:02:15,120
all terrified of Pegasus and I had a

58
00:02:15,120 --> 00:02:17,099
friend who was helping me figure out if

59
00:02:17,099 --> 00:02:20,220
I had Pegasus on my phone or not and um

60
00:02:20,220 --> 00:02:22,920
you know I didn't which was great but I

61
00:02:22,920 --> 00:02:25,220
remember we were talking about it and

62
00:02:25,220 --> 00:02:27,780
they said well until there's memory

63
00:02:27,780 --> 00:02:29,400
safety we can't really do a whole lot

64
00:02:29,400 --> 00:02:31,020
about all the Pegasuses we don't know

65
00:02:31,020 --> 00:02:33,840
about to like lower that risk and so

66
00:02:33,840 --> 00:02:35,220
working on security planner we give

67
00:02:35,220 --> 00:02:37,920
people a lot of tips on how to be more

68
00:02:37,920 --> 00:02:39,300
secure online and so it's really

69
00:02:39,300 --> 00:02:40,739
frustrating to me that we can't tell

70
00:02:40,739 --> 00:02:43,319
people these are behaviors that you need

71
00:02:43,319 --> 00:02:46,440
to do to protect yourself here or these

72
00:02:46,440 --> 00:02:48,000
are tools that you need to buy because

73
00:02:48,000 --> 00:02:50,099
there's like nothing you can do and it

74
00:02:50,099 --> 00:02:52,379
requires a more systemic change and so

75
00:02:52,379 --> 00:02:54,780
that's kind of how I came on board

76
00:02:54,780 --> 00:02:57,180
hey I'm Alex I work for the Federal

77
00:02:57,180 --> 00:02:58,739
Trade Commission though I'm not here

78
00:02:58,739 --> 00:03:00,480
representing the commission this morning

79
00:03:00,480 --> 00:03:03,900
uh and I came to memory safety uh I was

80
00:03:03,900 --> 00:03:05,280
academically kind of like interested in

81
00:03:05,280 --> 00:03:07,080
the topic oh it seems important fewer

82
00:03:07,080 --> 00:03:09,900
vulnerabilities and then around 2016

83
00:03:09,900 --> 00:03:13,500
2017 I got involved in doing buzzing and

84
00:03:13,500 --> 00:03:15,659
security research on some open source

85
00:03:15,659 --> 00:03:17,760
projects and kind of at the time I

86
00:03:17,760 --> 00:03:19,019
started that effort it was like oh these

87
00:03:19,019 --> 00:03:21,659
are widely used open source projects TLS

88
00:03:21,659 --> 00:03:24,000
Library image parser like I'm not the

89
00:03:24,000 --> 00:03:25,440
first one to this table like maybe I'll

90
00:03:25,440 --> 00:03:28,080
find something but you know this this is

91
00:03:28,080 --> 00:03:32,280
not going to be you know a serious you

92
00:03:32,280 --> 00:03:34,640
know High vulnerability count and then

93
00:03:34,640 --> 00:03:36,900
the this vulnerabilities just started

94
00:03:36,900 --> 00:03:38,519
like fall falling off the bottom of it

95
00:03:38,519 --> 00:03:40,799
like there was no tomorrow and kind of

96
00:03:40,799 --> 00:03:42,840
at this point that buzzing like campaign

97
00:03:42,840 --> 00:03:45,780
is racked up it's in the hundreds if not

98
00:03:45,780 --> 00:03:48,900
close to a thousand findings and just

99
00:03:48,900 --> 00:03:50,940
kind of the flood of emails that started

100
00:03:50,940 --> 00:03:52,440
coming in of like

101
00:03:52,440 --> 00:03:54,599
buzzer found this buffer overflow fuzzer

102
00:03:54,599 --> 00:03:56,459
found this uninitialized variable fuzzer

103
00:03:56,459 --> 00:03:58,980
found this use after free was kind of

104
00:03:58,980 --> 00:04:02,000
radicalizing particularly when I saw

105
00:04:02,000 --> 00:04:06,980
that the developers like fixing this was

106
00:04:06,980 --> 00:04:09,180
trying to engage seriously with the

107
00:04:09,180 --> 00:04:11,099
number of these vulnerabilities and like

108
00:04:11,099 --> 00:04:12,480
fix all of them and treat them all

109
00:04:12,480 --> 00:04:15,120
responsibly and you know get a cve for

110
00:04:15,120 --> 00:04:16,620
all them it was like burnout inducing

111
00:04:16,620 --> 00:04:17,399
like

112
00:04:17,399 --> 00:04:19,858
trying to take seriously the this number

113
00:04:19,858 --> 00:04:21,478
of vulnerabilities was like not

114
00:04:21,478 --> 00:04:23,460
realistic and like that was radicalized

115
00:04:23,460 --> 00:04:24,840
like oh we need to do something totally

116
00:04:24,840 --> 00:04:26,880
different like we can't fix our we can't

117
00:04:26,880 --> 00:04:28,560
find the vulnerabilities or fix our way

118
00:04:28,560 --> 00:04:31,220
out of this problem

119
00:04:31,919 --> 00:04:34,320
I'm Josh OS uh I run an internet

120
00:04:34,320 --> 00:04:36,600
security research group we do lots

121
00:04:36,600 --> 00:04:37,860
encrypt and another project called

122
00:04:37,860 --> 00:04:40,620
prosoma related to memory safety which I

123
00:04:40,620 --> 00:04:42,600
may say more about later

124
00:04:42,600 --> 00:04:46,620
uh for me I came to this problem from a

125
00:04:46,620 --> 00:04:50,040
pretty pedestrian angle like I would get

126
00:04:50,040 --> 00:04:51,840
these security updates for my phone and

127
00:04:51,840 --> 00:04:53,400
I would look at the vulnerability lists

128
00:04:53,400 --> 00:04:56,040
and all the time was like buffer

129
00:04:56,040 --> 00:04:58,620
overflow use after free

130
00:04:58,620 --> 00:05:00,960
and you know to tell my family you got

131
00:05:00,960 --> 00:05:02,820
to fix this and deal with this stuff

132
00:05:02,820 --> 00:05:06,060
through work and I think what's so

133
00:05:06,060 --> 00:05:07,860
frustrating about this to me is not just

134
00:05:07,860 --> 00:05:10,560
the volume but that it's a really

135
00:05:10,560 --> 00:05:13,080
solvable problem I mean we Face a lot of

136
00:05:13,080 --> 00:05:14,940
problems in security and competing in

137
00:05:14,940 --> 00:05:16,560
general where I'm not really sure what

138
00:05:16,560 --> 00:05:19,500
the answer is it's complicated I don't

139
00:05:19,500 --> 00:05:20,820
know if we

140
00:05:20,820 --> 00:05:23,639
have a way out yet but with memory

141
00:05:23,639 --> 00:05:25,020
safety I feel like for the most part we

142
00:05:25,020 --> 00:05:26,580
do know what the answer is you know we

143
00:05:26,580 --> 00:05:28,440
have options we do know what the answers

144
00:05:28,440 --> 00:05:30,360
are it is going to be a lot of work to

145
00:05:30,360 --> 00:05:31,440
address

146
00:05:31,440 --> 00:05:34,020
um but I think problems that are you

147
00:05:34,020 --> 00:05:36,300
know merely a lot of work

148
00:05:36,300 --> 00:05:39,300
that that gets me interested you know I

149
00:05:39,300 --> 00:05:41,100
I don't want us to continue to suffer

150
00:05:41,100 --> 00:05:43,199
from things that we we have the answer

151
00:05:43,199 --> 00:05:45,720
to so I'm excited for us to get to work

152
00:05:45,720 --> 00:05:47,699
make strategies and just put in the

153
00:05:47,699 --> 00:05:49,139
effort to

154
00:05:49,139 --> 00:05:52,320
to rid ourselves of this problem yeah a

155
00:05:52,320 --> 00:05:54,780
lot of work indeed so I want to start

156
00:05:54,780 --> 00:05:56,280
really easy because I know you all are

157
00:05:56,280 --> 00:05:58,080
working on very many different aspects

158
00:05:58,080 --> 00:06:00,419
of memory safety right now can you just

159
00:06:00,419 --> 00:06:01,919
give us a breakdown about the projects

160
00:06:01,919 --> 00:06:03,180
you're working on and how you are

161
00:06:03,180 --> 00:06:06,300
tackling this work

162
00:06:06,300 --> 00:06:09,780
I'm happy to start so uh two of the big

163
00:06:09,780 --> 00:06:11,820
projects I've been working on one is the

164
00:06:11,820 --> 00:06:14,340
python cryptographic Authority uh family

165
00:06:14,340 --> 00:06:16,440
of libraries so we maintain most of the

166
00:06:16,440 --> 00:06:18,720
widely used cryptography libraries in

167
00:06:18,720 --> 00:06:21,240
the python ecosystem and over the last

168
00:06:21,240 --> 00:06:24,240
about two years we've been incorporating

169
00:06:24,240 --> 00:06:26,220
rust into those

170
00:06:26,220 --> 00:06:29,160
um using it for everything from x509

171
00:06:29,160 --> 00:06:31,380
certificate parsing to the

172
00:06:31,380 --> 00:06:34,979
implementation of bcrypt in the cleverly

173
00:06:34,979 --> 00:06:37,020
and bcrypt Library

174
00:06:37,020 --> 00:06:39,539
and that's been I think a really

175
00:06:39,539 --> 00:06:44,220
successful uh efforts uh

176
00:06:44,220 --> 00:06:46,319
a we've we've gotten rid of a lot of

177
00:06:46,319 --> 00:06:48,600
attack surface uh particularly via you

178
00:06:48,600 --> 00:06:50,580
know parsers and other things like that

179
00:06:50,580 --> 00:06:53,039
that have historically been a big source

180
00:06:53,039 --> 00:06:54,539
of vulnerabilities

181
00:06:54,539 --> 00:06:57,419
uh We've also been able to improve our

182
00:06:57,419 --> 00:06:59,759
code a lot through this effort so a

183
00:06:59,759 --> 00:07:02,960
result of migrating the x509 parser from

184
00:07:02,960 --> 00:07:06,960
openssl's C bass parser to rust was a

185
00:07:06,960 --> 00:07:09,000
10x performance Improvement

186
00:07:09,000 --> 00:07:12,680
and the reason for this is openss x509

187
00:07:12,680 --> 00:07:15,660
parser will like copy every strings like

188
00:07:15,660 --> 00:07:17,340
you've got you know the name of the

189
00:07:17,340 --> 00:07:18,960
domain name asserts valid Port like all

190
00:07:18,960 --> 00:07:20,340
right that gets a fresh allocation of

191
00:07:20,340 --> 00:07:21,900
fresh copyright every string in a

192
00:07:21,900 --> 00:07:25,080
certificate and in Rust because we had

193
00:07:25,080 --> 00:07:27,780
compiler guarantees about the lifetime

194
00:07:27,780 --> 00:07:29,400
of variables we're able to just keep all

195
00:07:29,400 --> 00:07:31,800
of those just pointers and lengths into

196
00:07:31,800 --> 00:07:33,960
you know one big allocation so it's much

197
00:07:33,960 --> 00:07:35,639
more efficient it's like not only we

198
00:07:35,639 --> 00:07:37,380
were able to get security that security

199
00:07:37,380 --> 00:07:40,440
then turned into performance

200
00:07:40,440 --> 00:07:42,479
um another thing I've worked on is the

201
00:07:42,479 --> 00:07:44,460
inclusion of rust in the Linux kernel

202
00:07:44,460 --> 00:07:45,780
but I think Josh is going to want to

203
00:07:45,780 --> 00:07:48,240
talk about that you you got there before

204
00:07:48,240 --> 00:07:52,740
I did so go for it all right uh so as of

205
00:07:52,740 --> 00:07:55,979
uh I guess a release ago maybe maybe

206
00:07:55,979 --> 00:07:57,240
it's two releases at this point the

207
00:07:57,240 --> 00:08:00,000
Linux kernel now includes kind of a

208
00:08:00,000 --> 00:08:02,520
skeleton of rust code for writing

209
00:08:02,520 --> 00:08:04,740
drivers in Rust

210
00:08:04,740 --> 00:08:07,139
uh as part of the Linux kernel so this

211
00:08:07,139 --> 00:08:09,120
is an effort that believe it or not got

212
00:08:09,120 --> 00:08:11,759
started at a pycon uh I guess about five

213
00:08:11,759 --> 00:08:13,740
years ago at this point and we were just

214
00:08:13,740 --> 00:08:16,740
kind of abstractly curious if you know

215
00:08:16,740 --> 00:08:18,120
what it would look like to do this you

216
00:08:18,120 --> 00:08:20,819
know is the technology viable and then

217
00:08:20,819 --> 00:08:23,400
two or three years ago uh

218
00:08:23,400 --> 00:08:25,440
big kind of community got interested in

219
00:08:25,440 --> 00:08:26,759
this and started really driving it

220
00:08:26,759 --> 00:08:28,740
Forward figuring out okay what would it

221
00:08:28,740 --> 00:08:30,300
look like to write file systems what

222
00:08:30,300 --> 00:08:31,860
about a USB driver or what about

223
00:08:31,860 --> 00:08:34,080
ethernet and like just really expanding

224
00:08:34,080 --> 00:08:35,700
the set of things you can use it for and

225
00:08:35,700 --> 00:08:38,219
now we're kind of doing the hard work of

226
00:08:38,219 --> 00:08:40,679
upstreaming all of that into the Linux

227
00:08:40,679 --> 00:08:42,479
kernel and I think probably the most

228
00:08:42,479 --> 00:08:44,640
impressive thing that's been done is uh

229
00:08:44,640 --> 00:08:47,700
the Asahi Linux group has built a driver

230
00:08:47,700 --> 00:08:50,940
for uh the Apple silicone gpus and it's

231
00:08:50,940 --> 00:08:53,880
and it's all built in Rust and uh that

232
00:08:53,880 --> 00:08:56,220
like testimonials from them are like you

233
00:08:56,220 --> 00:08:57,959
know we just built it and like it kind

234
00:08:57,959 --> 00:09:00,680
of worked when it compiled when we

235
00:09:00,680 --> 00:09:02,880
scaled it up to run across multiple

236
00:09:02,880 --> 00:09:04,740
cores there were no concurrency bugs

237
00:09:04,740 --> 00:09:07,019
like that that it was a writing this in

238
00:09:07,019 --> 00:09:08,940
memory safe language is really enabling

239
00:09:08,940 --> 00:09:11,700
for them uh I think you know it does a

240
00:09:11,700 --> 00:09:15,140
very positive testimonial to see

241
00:09:16,620 --> 00:09:21,839
yeah so I work my memory safety work is

242
00:09:21,839 --> 00:09:23,700
usually related to a project that

243
00:09:23,700 --> 00:09:25,200
internet security research group called

244
00:09:25,200 --> 00:09:26,760
prosumo

245
00:09:26,760 --> 00:09:28,800
and our goal is to move some of the

246
00:09:28,800 --> 00:09:30,959
lower level components of operating

247
00:09:30,959 --> 00:09:34,260
systems over to memory safe code so

248
00:09:34,260 --> 00:09:35,760
we're pretty focused on things that are

249
00:09:35,760 --> 00:09:37,019
on

250
00:09:37,019 --> 00:09:43,320
Network boundaries so TLS DL DNS ntp the

251
00:09:43,320 --> 00:09:45,800
Linux kernel things like that so we have

252
00:09:45,800 --> 00:09:49,260
a new implementation of ntp server and

253
00:09:49,260 --> 00:09:51,660
client in Rust

254
00:09:51,660 --> 00:09:53,880
it's a great piece of software we're

255
00:09:53,880 --> 00:09:54,839
looking forward to getting that out

256
00:09:54,839 --> 00:09:56,279
there more we're investing heavily into

257
00:09:56,279 --> 00:09:58,440
the Linux kernel work that Alex and

258
00:09:58,440 --> 00:10:00,959
company started so I had nothing to do

259
00:10:00,959 --> 00:10:02,160
with starting that but I'm really

260
00:10:02,160 --> 00:10:04,380
excited about it and through prossimo

261
00:10:04,380 --> 00:10:06,540
we've been funding the developers

262
00:10:06,540 --> 00:10:08,459
working on that so the primary developer

263
00:10:08,459 --> 00:10:10,040
is under contract with us

264
00:10:10,040 --> 00:10:12,180
and there's somebody working on the rust

265
00:10:12,180 --> 00:10:15,120
tool chain as it relates to its ability

266
00:10:15,120 --> 00:10:16,380
to work in the kernel that's also

267
00:10:16,380 --> 00:10:18,180
working for us so we're investing

268
00:10:18,180 --> 00:10:19,560
heavily in the latest kernel stuff

269
00:10:19,560 --> 00:10:22,500
hoping to get into some more drivers

270
00:10:22,500 --> 00:10:25,019
that might be able to get Upstream soon

271
00:10:25,019 --> 00:10:26,519
like I said we got this ntp

272
00:10:26,519 --> 00:10:28,019
implementation we're investing really

273
00:10:28,019 --> 00:10:29,940
heavily in a TLS Library called

274
00:10:29,940 --> 00:10:31,740
Russell's

275
00:10:31,740 --> 00:10:32,279
um

276
00:10:32,279 --> 00:10:35,279
it's a great Library my goal is someday

277
00:10:35,279 --> 00:10:37,920
for that to make a pretty big dent in

278
00:10:37,920 --> 00:10:40,680
open ssl's market share not because we

279
00:10:40,680 --> 00:10:41,880
don't appreciate all the work that they

280
00:10:41,880 --> 00:10:43,560
do but I think we need to move Beyond

281
00:10:43,560 --> 00:10:46,019
TLS implementations written in C

282
00:10:46,019 --> 00:10:47,760
so Russell's I think is our best bet

283
00:10:47,760 --> 00:10:49,380
there we're investing heavily in that

284
00:10:49,380 --> 00:10:52,920
really excited about the the

285
00:10:52,920 --> 00:10:55,079
velocity of development just in the past

286
00:10:55,079 --> 00:10:57,300
few months has really taken off we spent

287
00:10:57,300 --> 00:10:58,920
a couple years building up the community

288
00:10:58,920 --> 00:11:00,540
and the governance around that getting

289
00:11:00,540 --> 00:11:02,279
the funding in place and now we're just

290
00:11:02,279 --> 00:11:04,560
off for the races so really excited

291
00:11:04,560 --> 00:11:05,760
about the progress we're going to make

292
00:11:05,760 --> 00:11:08,120
on Russell's this year

293
00:11:08,120 --> 00:11:10,140
we're going to be making some more

294
00:11:10,140 --> 00:11:12,000
investments in DNS I think that's

295
00:11:12,000 --> 00:11:13,680
another pretty critical area so we're

296
00:11:13,680 --> 00:11:15,120
trying to get these

297
00:11:15,120 --> 00:11:17,220
these lower level services that almost

298
00:11:17,220 --> 00:11:19,740
every system is running and move them

299
00:11:19,740 --> 00:11:23,839
away from code that's not memory safe

300
00:11:24,600 --> 00:11:26,040
um so my work on memory safety has been

301
00:11:26,040 --> 00:11:27,899
more on the consumer advocacy side and

302
00:11:27,899 --> 00:11:29,459
so what we did at Consumer Reports was

303
00:11:29,459 --> 00:11:31,380
we did a convening where we got

304
00:11:31,380 --> 00:11:32,940
everybody that we thought would care

305
00:11:32,940 --> 00:11:35,160
about memory safety from education

306
00:11:35,160 --> 00:11:36,660
government

307
00:11:36,660 --> 00:11:38,700
um Civil Society

308
00:11:38,700 --> 00:11:40,740
um The Tech Community like just got a

309
00:11:40,740 --> 00:11:42,060
lot of different people in the room and

310
00:11:42,060 --> 00:11:45,240
and came up with some ideas on what the

311
00:11:45,240 --> 00:11:47,160
problems are what are the potential

312
00:11:47,160 --> 00:11:49,680
Solutions what are the next steps from

313
00:11:49,680 --> 00:11:52,140
an advocacy side like what should

314
00:11:52,140 --> 00:11:53,640
um what what do we think should happen

315
00:11:53,640 --> 00:11:56,040
next and then we wrote that all up in a

316
00:11:56,040 --> 00:11:57,500
report which came out on Monday

317
00:11:57,500 --> 00:11:59,519
hopefully someone will post it to the

318
00:11:59,519 --> 00:12:00,600
slack and that was really really

319
00:12:00,600 --> 00:12:03,660
exciting and then the next step is to

320
00:12:03,660 --> 00:12:05,459
kind of go back to everybody and figure

321
00:12:05,459 --> 00:12:07,920
out like what what are our next steps

322
00:12:07,920 --> 00:12:09,839
based on the ideas that we came up with

323
00:12:09,839 --> 00:12:11,640
like so that we can more effectively

324
00:12:11,640 --> 00:12:14,160
advocate for companies to take these

325
00:12:14,160 --> 00:12:17,579
steps to either incorporate either

326
00:12:17,579 --> 00:12:19,980
rewrite in memory safe languages or

327
00:12:19,980 --> 00:12:21,899
sandbox or at least come up with a game

328
00:12:21,899 --> 00:12:23,399
plan that they can show us that they're

329
00:12:23,399 --> 00:12:25,440
addressing this issue which I see is

330
00:12:25,440 --> 00:12:26,640
like a really important consumer

331
00:12:26,640 --> 00:12:28,680
advocacy issue

332
00:12:28,680 --> 00:12:30,899
yeah and all of that is really important

333
00:12:30,899 --> 00:12:33,120
work on the broad ecosystem at many

334
00:12:33,120 --> 00:12:35,220
different levels that we really need

335
00:12:35,220 --> 00:12:36,480
um Josh you kind of preempted this

336
00:12:36,480 --> 00:12:38,160
because there was like a you're seeing a

337
00:12:38,160 --> 00:12:39,660
lot of developments going really quickly

338
00:12:39,660 --> 00:12:41,880
and I'm curious like what is the state

339
00:12:41,880 --> 00:12:44,519
of it now versus a few years ago I know

340
00:12:44,519 --> 00:12:47,100
when I started to really dig into memory

341
00:12:47,100 --> 00:12:49,500
safety I was Finding info back to 2020

342
00:12:49,500 --> 00:12:51,779
but not further than then and I'm seeing

343
00:12:51,779 --> 00:12:53,760
a lot more information and resources now

344
00:12:53,760 --> 00:12:55,680
like what is the state and how has it

345
00:12:55,680 --> 00:12:58,560
changed over the last few years

346
00:12:58,560 --> 00:13:01,380
so I gave a talk at Enigma two years ago

347
00:13:01,380 --> 00:13:04,079
and I would characterize kind of the

348
00:13:04,079 --> 00:13:06,480
tone of the conversation then is it was

349
00:13:06,480 --> 00:13:08,579
still a question of is it worth it like

350
00:13:08,579 --> 00:13:10,920
this is an expensive proposition to

351
00:13:10,920 --> 00:13:12,480
think about replacing millions or

352
00:13:12,480 --> 00:13:15,060
billions of lines of C and C plus plus

353
00:13:15,060 --> 00:13:16,860
and

354
00:13:16,860 --> 00:13:19,440
I mean I was optimistic but I think

355
00:13:19,440 --> 00:13:22,620
there was a lot of skepticism that that

356
00:13:22,620 --> 00:13:24,779
was a valid path to walk down I think

357
00:13:24,779 --> 00:13:27,060
now the question is a lot more around

358
00:13:27,060 --> 00:13:28,440
all right what are the techniques that

359
00:13:28,440 --> 00:13:30,000
you can do to make this effective it's a

360
00:13:30,000 --> 00:13:32,459
question of how and not if that's the

361
00:13:32,459 --> 00:13:33,899
biggest change I see

362
00:13:33,899 --> 00:13:35,279
yeah

363
00:13:35,279 --> 00:13:37,139
um Alex uh I'm really happy you brought

364
00:13:37,139 --> 00:13:38,579
that up Yale and I were fighting over

365
00:13:38,579 --> 00:13:41,100
who would bring up Alex's talk from 2021

366
00:13:41,100 --> 00:13:43,320
first because it was it was covering

367
00:13:43,320 --> 00:13:45,480
memory on safety and we both watched him

368
00:13:45,480 --> 00:13:47,399
we were really excited to like drop it

369
00:13:47,399 --> 00:13:49,920
in this talk and then Alex just did it

370
00:13:49,920 --> 00:13:51,899
before us sorry uh but like the

371
00:13:51,899 --> 00:13:53,339
interesting part of that is you talk so

372
00:13:53,339 --> 00:13:55,139
much about the stages of grief like the

373
00:13:55,139 --> 00:13:56,760
grief that it's overwhelming it's too

374
00:13:56,760 --> 00:13:59,100
big of a problem people are scared of it

375
00:13:59,100 --> 00:14:00,720
like do you still feel that grief right

376
00:14:00,720 --> 00:14:01,920
now

377
00:14:01,920 --> 00:14:04,620
um I still think it is the case that

378
00:14:04,620 --> 00:14:07,860
doing a migration for a large project

379
00:14:07,860 --> 00:14:10,980
has to be an incremental effort if you

380
00:14:10,980 --> 00:14:12,540
approach the problem as I have 10

381
00:14:12,540 --> 00:14:15,120
million lines of C or C plus plus code

382
00:14:15,120 --> 00:14:18,180
and I need to replace all of them I I

383
00:14:18,180 --> 00:14:20,399
think that's not setting yourself up for

384
00:14:20,399 --> 00:14:22,440
Success that almost has nothing to do

385
00:14:22,440 --> 00:14:25,079
with memory safety if you've approached

386
00:14:25,079 --> 00:14:27,240
any project as like my only deliverable

387
00:14:27,240 --> 00:14:29,339
is everything that's not a winning

388
00:14:29,339 --> 00:14:32,279
strategy so I I think

389
00:14:32,279 --> 00:14:35,339
the hope is that there's now good proofs

390
00:14:35,339 --> 00:14:38,060
of concept of what it looks like to do

391
00:14:38,060 --> 00:14:40,500
incremental migrations or migrations of

392
00:14:40,500 --> 00:14:42,600
individual components so like Josh

393
00:14:42,600 --> 00:14:45,180
talked about uh their work on Russell's

394
00:14:45,180 --> 00:14:47,820
and part of that has been things like oh

395
00:14:47,820 --> 00:14:50,820
an Apache module for using Russell's for

396
00:14:50,820 --> 00:14:53,760
TLS and you know replacing one Apache

397
00:14:53,760 --> 00:14:55,320
module is like a much more practical

398
00:14:55,320 --> 00:14:57,720
problem than replacing all of Apache so

399
00:14:57,720 --> 00:14:59,040
for me that's the source of hope that

400
00:14:59,040 --> 00:15:00,240
like we have these proofs of concept

401
00:15:00,240 --> 00:15:02,339
like here's here's a path you can walk

402
00:15:02,339 --> 00:15:05,639
down for doing things incrementally

403
00:15:05,639 --> 00:15:07,860
I think an important part that I like to

404
00:15:07,860 --> 00:15:10,260
add on to this incremental approach is

405
00:15:10,260 --> 00:15:12,180
one of the things that comes up a lot is

406
00:15:12,180 --> 00:15:13,740
everybody going to have to learn a new

407
00:15:13,740 --> 00:15:15,899
language and I think the answer to that

408
00:15:15,899 --> 00:15:17,519
because of this incremental approach is

409
00:15:17,519 --> 00:15:19,620
no so for example

410
00:15:19,620 --> 00:15:22,079
you know Russell's is written in Rust

411
00:15:22,079 --> 00:15:25,079
but we built a nice C API for it so when

412
00:15:25,079 --> 00:15:27,120
we talked to

413
00:15:27,120 --> 00:15:29,940
you know the guy who built the module

414
00:15:29,940 --> 00:15:33,779
for Apache or when we we hired the

415
00:15:33,779 --> 00:15:35,639
maintainer of curl to integrate it into

416
00:15:35,639 --> 00:15:37,860
curl neither one of them had to learn

417
00:15:37,860 --> 00:15:40,920
rust they just take the module the Capi

418
00:15:40,920 --> 00:15:42,420
and they use it like they would any

419
00:15:42,420 --> 00:15:44,760
other C library but it's safer

420
00:15:44,760 --> 00:15:46,500
uh I think that's a really important

421
00:15:46,500 --> 00:15:48,060
part of this incremental approach is

422
00:15:48,060 --> 00:15:50,160
that doing your first module doesn't

423
00:15:50,160 --> 00:15:52,260
even necessarily involve learning a new

424
00:15:52,260 --> 00:15:54,360
language if you handle it this way I

425
00:15:54,360 --> 00:15:56,339
think it's unrealistic to expect

426
00:15:56,339 --> 00:15:58,800
everyone to just pick up rust to get in

427
00:15:58,800 --> 00:16:00,600
the game here and that's really not

428
00:16:00,600 --> 00:16:03,019
necessary

429
00:16:03,300 --> 00:16:05,699
to what I've heard when I became a

430
00:16:05,699 --> 00:16:08,220
memory safety evangelist and

431
00:16:08,220 --> 00:16:09,660
you know and just showing everybody this

432
00:16:09,660 --> 00:16:11,519
memo and this deck that I made I think

433
00:16:11,519 --> 00:16:13,620
it was about a year or two years ago and

434
00:16:13,620 --> 00:16:15,240
at first people were like who else is

435
00:16:15,240 --> 00:16:16,740
working on this

436
00:16:16,740 --> 00:16:19,920
um and there was you know um

437
00:16:19,920 --> 00:16:21,720
fish in a barrel there was like Chris

438
00:16:21,720 --> 00:16:23,459
Palmer's blog there was a few like

439
00:16:23,459 --> 00:16:25,019
Atlantic Council wrote something but

440
00:16:25,019 --> 00:16:27,420
there wasn't a lot of super super high

441
00:16:27,420 --> 00:16:29,040
profile names that people had heard of

442
00:16:29,040 --> 00:16:30,660
and they're like why should I care about

443
00:16:30,660 --> 00:16:31,560
this

444
00:16:31,560 --> 00:16:33,839
um you know and that's really changing

445
00:16:33,839 --> 00:16:35,459
and it seems like every week or two

446
00:16:35,459 --> 00:16:37,199
there's some new development and so I

447
00:16:37,199 --> 00:16:39,600
feel like we are getting momentum and

448
00:16:39,600 --> 00:16:41,459
there's fewer like I used to just get

449
00:16:41,459 --> 00:16:42,779
different objections and every time I

450
00:16:42,779 --> 00:16:44,940
got one I would add a new slide and I'd

451
00:16:44,940 --> 00:16:46,800
be like here's my response to this and

452
00:16:46,800 --> 00:16:48,060
like do a little more research and I

453
00:16:48,060 --> 00:16:50,399
feel like that's happening less now

454
00:16:50,399 --> 00:16:52,560
um so just from that the sort of

455
00:16:52,560 --> 00:16:54,959
advocacy side it does seem like things

456
00:16:54,959 --> 00:16:57,540
are kind of slowly changing

457
00:16:57,540 --> 00:17:00,060
yeah three years ago it's unimaginable I

458
00:17:00,060 --> 00:17:01,680
think that you would have written that

459
00:17:01,680 --> 00:17:04,380
report through consumer reports and here

460
00:17:04,380 --> 00:17:05,939
we are like that's a really important

461
00:17:05,939 --> 00:17:07,380
part of the strategy how we're going to

462
00:17:07,380 --> 00:17:09,359
get where we're going and I'm glad we're

463
00:17:09,359 --> 00:17:12,480
at that part of the conversation now

464
00:17:12,480 --> 00:17:14,760
um I can attest to hearing yells

465
00:17:14,760 --> 00:17:17,579
evangelism and being a convert and then

466
00:17:17,579 --> 00:17:19,500
a year ago or so being like yeah we we

467
00:17:19,500 --> 00:17:20,819
really do need to do something about

468
00:17:20,819 --> 00:17:22,799
memory safety and what is our plan and

469
00:17:22,799 --> 00:17:23,699
how are we going to bring people

470
00:17:23,699 --> 00:17:25,859
together and what are we going to do and

471
00:17:25,859 --> 00:17:27,720
I think that's a testimony to like we

472
00:17:27,720 --> 00:17:29,340
need different roles and different

473
00:17:29,340 --> 00:17:31,440
backgrounds of people jumping into this

474
00:17:31,440 --> 00:17:33,840
issue to tackle it from like whether it

475
00:17:33,840 --> 00:17:35,400
is an advocacy side whether it is

476
00:17:35,400 --> 00:17:36,559
building

477
00:17:36,559 --> 00:17:39,660
new ideas and and test solutions to

478
00:17:39,660 --> 00:17:42,179
incrementally go at it and so how how do

479
00:17:42,179 --> 00:17:44,160
we do that across the system we have

480
00:17:44,160 --> 00:17:45,960
four of us who are evangelizing up here

481
00:17:45,960 --> 00:17:47,760
we need a lot more I'm sure we have more

482
00:17:47,760 --> 00:17:49,140
in this room but how do we get out to

483
00:17:49,140 --> 00:17:51,900
the broader network of people who can

484
00:17:51,900 --> 00:17:53,220
hear these stats hear this information

485
00:17:53,220 --> 00:17:56,880
and get evangelized to move that forward

486
00:17:56,880 --> 00:17:58,740
so for me what I found that's really

487
00:17:58,740 --> 00:18:00,179
effective is that I will tie it to

488
00:18:00,179 --> 00:18:01,679
whatever people are most interested in

489
00:18:01,679 --> 00:18:03,419
so if I'm talking to somebody who's like

490
00:18:03,419 --> 00:18:05,340
I care about human rights I'm like this

491
00:18:05,340 --> 00:18:07,440
is absolutely human rights issue this

492
00:18:07,440 --> 00:18:09,059
affects journalists this affects

493
00:18:09,059 --> 00:18:11,220
consumer rights this affects cyber

494
00:18:11,220 --> 00:18:13,559
Readiness this affects patient care like

495
00:18:13,559 --> 00:18:15,600
whatever issue that they have that I can

496
00:18:15,600 --> 00:18:18,000
tie this into like we'll get them more

497
00:18:18,000 --> 00:18:20,520
interested so that's been effective for

498
00:18:20,520 --> 00:18:22,559
me

499
00:18:22,559 --> 00:18:25,799
yeah I think for me the thing I have

500
00:18:25,799 --> 00:18:27,600
tried and query whether it's been

501
00:18:27,600 --> 00:18:30,240
successful it but is to try to highlight

502
00:18:30,240 --> 00:18:31,559
just how many of the major

503
00:18:31,559 --> 00:18:34,140
vulnerabilities we see exploited that

504
00:18:34,140 --> 00:18:36,900
are you know practically name brand have

505
00:18:36,900 --> 00:18:40,919
memory safety as a root cause or as a as

506
00:18:40,919 --> 00:18:43,260
an underlying cause everything from

507
00:18:43,260 --> 00:18:46,380
heart bleed to wannacry you know used

508
00:18:46,380 --> 00:18:49,620
against NHS hospitals in the UK

509
00:18:49,620 --> 00:18:53,760
to many of the Pegasus exploits to a

510
00:18:53,760 --> 00:18:55,860
series of vulnerabilities Google

511
00:18:55,860 --> 00:18:59,360
uncovered that were used against uh

512
00:18:59,360 --> 00:19:03,179
indiscriminately uyghur uh users of like

513
00:19:03,179 --> 00:19:05,640
a popular uyghur Forum uh just like

514
00:19:05,640 --> 00:19:06,780
seeing

515
00:19:06,780 --> 00:19:09,419
surfacing how much below the surface

516
00:19:09,419 --> 00:19:10,320
like

517
00:19:10,320 --> 00:19:12,059
the headline stories you're seeing

518
00:19:12,059 --> 00:19:14,340
actually have a common underlying cause

519
00:19:14,340 --> 00:19:18,080
I think can be eye-opening

520
00:19:18,660 --> 00:19:22,799
yeah no it's a big thing to tackle

521
00:19:22,799 --> 00:19:24,360
um and I'm also like really looking Alex

522
00:19:24,360 --> 00:19:26,580
and Josh should do well for this in

523
00:19:26,580 --> 00:19:29,340
terms of the software systems like where

524
00:19:29,340 --> 00:19:30,480
where are we finding the biggest

525
00:19:30,480 --> 00:19:32,400
challenges today I know we're thinking

526
00:19:32,400 --> 00:19:34,620
about academic institutions like just

527
00:19:34,620 --> 00:19:37,160
demystifying the like rest is hard

528
00:19:37,160 --> 00:19:40,080
there's so many different levels of

529
00:19:40,080 --> 00:19:43,080
buy-in that we need is it more on the

530
00:19:43,080 --> 00:19:44,280
technical side is it on the

531
00:19:44,280 --> 00:19:45,780
implementation side of pushing us

532
00:19:45,780 --> 00:19:47,400
forward where do you feel like are the

533
00:19:47,400 --> 00:19:50,160
challenges we need to focus our energy

534
00:19:50,160 --> 00:19:54,600
uh so the biggest challenge I see or

535
00:19:54,600 --> 00:19:56,039
maybe the biggest unaddressed challenge

536
00:19:56,039 --> 00:19:58,980
I see is accomplishing kind of this

537
00:19:58,980 --> 00:20:01,500
incremental approach that we talked

538
00:20:01,500 --> 00:20:02,120
about

539
00:20:02,120 --> 00:20:04,799
requires having offense kind of

540
00:20:04,799 --> 00:20:08,580
bilingual code bases and uh build system

541
00:20:08,580 --> 00:20:10,919
integration and I think these are two

542
00:20:10,919 --> 00:20:13,620
topics that are like not popular and

543
00:20:13,620 --> 00:20:15,900
deserve much more investment in good

544
00:20:15,900 --> 00:20:17,880
tooling

545
00:20:17,880 --> 00:20:20,039
um particularly you know I see a lot of

546
00:20:20,039 --> 00:20:21,840
breakdown around the edges if you have a

547
00:20:21,840 --> 00:20:24,419
c code base that compiles using Ms build

548
00:20:24,419 --> 00:20:26,400
like the default Visual Studio build

549
00:20:26,400 --> 00:20:29,100
system it's there's not a well-trod path

550
00:20:29,100 --> 00:20:31,679
on like how do you incorporate rust into

551
00:20:31,679 --> 00:20:33,299
that as well

552
00:20:33,299 --> 00:20:35,700
so better Paving these paths and better

553
00:20:35,700 --> 00:20:38,700
tooling around accomplishing these these

554
00:20:38,700 --> 00:20:41,400
bilingual code bases I think is the kind

555
00:20:41,400 --> 00:20:43,200
of thing that would make these projects

556
00:20:43,200 --> 00:20:45,720
much more accessible to more people I

557
00:20:45,720 --> 00:20:48,059
think lots of software Engineers you

558
00:20:48,059 --> 00:20:49,380
know they know multiple programming

559
00:20:49,380 --> 00:20:50,640
languages they're comfortable working in

560
00:20:50,640 --> 00:20:51,360
them

561
00:20:51,360 --> 00:20:54,480
doing this like tool chain stuff is

562
00:20:54,480 --> 00:20:56,400
painful and like a much more foreign

563
00:20:56,400 --> 00:20:58,740
expertise in my experience so I think I

564
00:20:58,740 --> 00:21:00,000
think that's an opportunity for Rich

565
00:21:00,000 --> 00:21:02,100
investment

566
00:21:02,100 --> 00:21:03,000
foreign

567
00:21:03,000 --> 00:21:04,740
yeah I don't have a better answer than

568
00:21:04,740 --> 00:21:06,480
that I run into the same thing where

569
00:21:06,480 --> 00:21:09,120
even even when we have a piece of

570
00:21:09,120 --> 00:21:11,039
software that is really nice memory safe

571
00:21:11,039 --> 00:21:12,840
code and you can make a pretty good

572
00:21:12,840 --> 00:21:14,460
argument for why someone should adopt

573
00:21:14,460 --> 00:21:15,960
that if you're talking to Linux

574
00:21:15,960 --> 00:21:18,240
distributions or other

575
00:21:18,240 --> 00:21:20,220
you know proprietary operating system

576
00:21:20,220 --> 00:21:21,840
vendors

577
00:21:21,840 --> 00:21:23,700
um

578
00:21:23,700 --> 00:21:26,220
even if you can convince them that this

579
00:21:26,220 --> 00:21:27,720
is a good idea there are a lot of

580
00:21:27,720 --> 00:21:30,000
challenges around how you start shipping

581
00:21:30,000 --> 00:21:32,940
rust code at all of any kind inside an

582
00:21:32,940 --> 00:21:34,620
operating system and it's not even just

583
00:21:34,620 --> 00:21:37,500
an issue of a bilingual code base

584
00:21:37,500 --> 00:21:39,780
if you have a Linux distribution or an

585
00:21:39,780 --> 00:21:41,100
operating system contains a bunch of

586
00:21:41,100 --> 00:21:42,480
different programs you should be in your

587
00:21:42,480 --> 00:21:44,159
first rest program your secondary or

588
00:21:44,159 --> 00:21:46,799
third in such a way that you have all

589
00:21:46,799 --> 00:21:49,080
the same safety checks and sort of like

590
00:21:49,080 --> 00:21:52,200
shipping pipeline checks in place

591
00:21:52,200 --> 00:21:54,720
that's tough

592
00:21:54,720 --> 00:21:56,340
operating system vendors are going to

593
00:21:56,340 --> 00:21:57,780
have to invest really heavily in that

594
00:21:57,780 --> 00:21:59,460
and it's a big barrier for adoption

595
00:21:59,460 --> 00:22:01,820
right now

596
00:22:02,100 --> 00:22:03,600
yeah when we think of that investment

597
00:22:03,600 --> 00:22:05,280
there's so much conversation around like

598
00:22:05,280 --> 00:22:09,299
time money energy and I love like what

599
00:22:09,299 --> 00:22:11,700
isrg is doing really like building that

600
00:22:11,700 --> 00:22:14,640
ecosystem and helping fund it do we need

601
00:22:14,640 --> 00:22:16,500
more funding here like where is the

602
00:22:16,500 --> 00:22:18,059
funding coming from because we have a

603
00:22:18,059 --> 00:22:19,559
lot of tech organizations who are

604
00:22:19,559 --> 00:22:20,580
working on the front lines to really

605
00:22:20,580 --> 00:22:22,320
push that but is there like an

606
00:22:22,320 --> 00:22:23,820
obligation to the broader ecosystem

607
00:22:23,820 --> 00:22:26,220
because we're all impacted by this

608
00:22:26,220 --> 00:22:30,360
and how do we potentially get there

609
00:22:30,360 --> 00:22:32,220
we do need more funding

610
00:22:32,220 --> 00:22:33,419
um I think there's a lot more funding

611
00:22:33,419 --> 00:22:35,340
out there now than there was last year

612
00:22:35,340 --> 00:22:37,740
three years ago we do need a lot more

613
00:22:37,740 --> 00:22:41,419
and that's that's going to be both

614
00:22:41,640 --> 00:22:43,860
funding internal ad organizations

615
00:22:43,860 --> 00:22:46,020
especially larger tech companies that

616
00:22:46,020 --> 00:22:47,940
are involved in major operating system

617
00:22:47,940 --> 00:22:49,380
components and things like that I think

618
00:22:49,380 --> 00:22:52,200
they're going to have to move budgets we

619
00:22:52,200 --> 00:22:53,580
also need more funding in the open

620
00:22:53,580 --> 00:22:55,860
source space

621
00:22:55,860 --> 00:22:58,200
yeah my focus has always been on the

622
00:22:58,200 --> 00:23:00,179
open source work that I can do with my

623
00:23:00,179 --> 00:23:03,000
own hands so no funding required for

624
00:23:03,000 --> 00:23:05,820
that I do think the

625
00:23:05,820 --> 00:23:09,600
maybe the biggest uh wins will be when

626
00:23:09,600 --> 00:23:11,340
operating system vendors you know mobile

627
00:23:11,340 --> 00:23:14,880
phones browsers uh incorporate these

628
00:23:14,880 --> 00:23:16,500
things into their own development just

629
00:23:16,500 --> 00:23:19,980
because those are big producers of CNC

630
00:23:19,980 --> 00:23:21,360
plus plus right like those are the

631
00:23:21,360 --> 00:23:23,100
domains the like the core of how you

632
00:23:23,100 --> 00:23:24,960
Justified C plus plus it needs to be

633
00:23:24,960 --> 00:23:26,159
close to the hardware it has these

634
00:23:26,159 --> 00:23:28,140
performance constraints and no run time

635
00:23:28,140 --> 00:23:31,200
right like those are the places that we

636
00:23:31,200 --> 00:23:32,460
see memory safety vulnerabilities

637
00:23:32,460 --> 00:23:35,100
exploited so as those types of places

638
00:23:35,100 --> 00:23:38,159
start to move uh those are I think the

639
00:23:38,159 --> 00:23:40,380
uh big wins and there was uh the Android

640
00:23:40,380 --> 00:23:42,120
security team did a blog post in

641
00:23:42,120 --> 00:23:44,700
December detailing some of their work uh

642
00:23:44,700 --> 00:23:47,640
starting to incorporate uh more rust and

643
00:23:47,640 --> 00:23:50,580
moving away from uh CNC plus plus and

644
00:23:50,580 --> 00:23:51,720
it's particularly impressive because

645
00:23:51,720 --> 00:23:54,179
there's a lot of empirical measures of

646
00:23:54,179 --> 00:23:56,039
how this really did work this really did

647
00:23:56,039 --> 00:23:58,919
reduce the vulnerability counts um

648
00:23:58,919 --> 00:24:00,960
so I I am hopeful that's the start of a

649
00:24:00,960 --> 00:24:02,640
trend

650
00:24:02,640 --> 00:24:04,320
yeah if you haven't read this Android

651
00:24:04,320 --> 00:24:07,080
blog post you should I think that's one

652
00:24:07,080 --> 00:24:08,640
of the most important pieces of

653
00:24:08,640 --> 00:24:10,559
information to come out in this whole

654
00:24:10,559 --> 00:24:14,159
debate I mean I talked to a lot of big

655
00:24:14,159 --> 00:24:16,020
companies about what their strategy is

656
00:24:16,020 --> 00:24:17,460
for moving operating systems and

657
00:24:17,460 --> 00:24:20,880
browsers over to safer languages and

658
00:24:20,880 --> 00:24:22,679
not as a data point we've been missing

659
00:24:22,679 --> 00:24:24,360
and it's going to have a huge impact on

660
00:24:24,360 --> 00:24:25,980
the industry

661
00:24:25,980 --> 00:24:28,620
cool someone dropped that link in the

662
00:24:28,620 --> 00:24:32,100
slack and if not we'll get on it after I

663
00:24:32,100 --> 00:24:33,299
talked to someone from an operating

664
00:24:33,299 --> 00:24:35,700
system and they told me about this huge

665
00:24:35,700 --> 00:24:38,240
tension that they have whether it is

666
00:24:38,240 --> 00:24:40,860
transferring old code into memory safe

667
00:24:40,860 --> 00:24:43,860
languages or working on new products in

668
00:24:43,860 --> 00:24:45,480
memory safe languages both of them

669
00:24:45,480 --> 00:24:47,760
equally had an abundance of like time

670
00:24:47,760 --> 00:24:50,400
and energy and money that's needed to do

671
00:24:50,400 --> 00:24:53,039
it and the tension they felt between how

672
00:24:53,039 --> 00:24:55,440
do I do both at the same time and do I

673
00:24:55,440 --> 00:24:57,960
focus on one over the other and I'm just

674
00:24:57,960 --> 00:25:00,240
curious if you all have a take on if you

675
00:25:00,240 --> 00:25:03,059
are facing that dilemma like which where

676
00:25:03,059 --> 00:25:04,740
do we where do we put the energy do we

677
00:25:04,740 --> 00:25:06,360
ensure that everything coming out in the

678
00:25:06,360 --> 00:25:08,940
future is memory safe language uh like

679
00:25:08,940 --> 00:25:10,500
is that where we want to go or do we

680
00:25:10,500 --> 00:25:11,760
really want to go back and change

681
00:25:11,760 --> 00:25:14,280
someone's Legacy code at a faster speed

682
00:25:14,280 --> 00:25:17,480
than like what we're putting out

683
00:25:17,940 --> 00:25:21,120
I like to focus on existing projects and

684
00:25:21,120 --> 00:25:24,179
my thesis there is they already have an

685
00:25:24,179 --> 00:25:27,000
install base that mostly updates them

686
00:25:27,000 --> 00:25:30,480
regularly hopefully and if we

687
00:25:30,480 --> 00:25:32,880
incorporate and gradually migrate them

688
00:25:32,880 --> 00:25:35,460
to Memory safe languages then there is

689
00:25:35,460 --> 00:25:37,919
just a natural uptake process

690
00:25:37,919 --> 00:25:38,700
um

691
00:25:38,700 --> 00:25:42,059
right and I think we see lots of really

692
00:25:42,059 --> 00:25:43,500
impactful software projects have

693
00:25:43,500 --> 00:25:45,799
incredibly long life cycles Apache is

694
00:25:45,799 --> 00:25:49,380
the httpd is what 20 years old at this

695
00:25:49,380 --> 00:25:51,360
point if not older

696
00:25:51,360 --> 00:25:52,740
um and it doesn't seem to be going away

697
00:25:52,740 --> 00:25:56,340
anytime soon right similarly like a

698
00:25:56,340 --> 00:25:58,500
chrome or Windows or iOS like these are

699
00:25:58,500 --> 00:26:00,120
not going anywhere

700
00:26:00,120 --> 00:26:00,840
um

701
00:26:00,840 --> 00:26:03,480
so while it is great to start something

702
00:26:03,480 --> 00:26:06,840
new like my focus is on what are these

703
00:26:06,840 --> 00:26:08,520
infrastructural things that are not

704
00:26:08,520 --> 00:26:11,120
going anywhere

705
00:26:11,460 --> 00:26:14,100
I think it's easier to make a rule where

706
00:26:14,100 --> 00:26:16,020
all your new code is going to be Memory

707
00:26:16,020 --> 00:26:18,419
safe so I think from a from a fiction

708
00:26:18,419 --> 00:26:20,159
point of view that's an easy and a nice

709
00:26:20,159 --> 00:26:21,539
rule to make

710
00:26:21,539 --> 00:26:23,340
but

711
00:26:23,340 --> 00:26:24,900
in a point that I think is very related

712
00:26:24,900 --> 00:26:27,000
to what Alex is saying

713
00:26:27,000 --> 00:26:28,440
there's no reason to believe that your

714
00:26:28,440 --> 00:26:30,779
new code is more important from a safety

715
00:26:30,779 --> 00:26:32,700
perspective than your old code so I

716
00:26:32,700 --> 00:26:34,080
think you really just need to prioritize

717
00:26:34,080 --> 00:26:35,580
by like what are the most critical

718
00:26:35,580 --> 00:26:37,200
components here and I think in most

719
00:26:37,200 --> 00:26:38,640
cases it's going to be components you're

720
00:26:38,640 --> 00:26:39,960
already shipping

721
00:26:39,960 --> 00:26:41,940
so I think you just need to have a clear

722
00:26:41,940 --> 00:26:44,159
priority list about what is the most

723
00:26:44,159 --> 00:26:46,500
important stuff you know if you're if

724
00:26:46,500 --> 00:26:48,480
your users biggest exposure to memory

725
00:26:48,480 --> 00:26:50,340
safety vulnerabilities is TLS you should

726
00:26:50,340 --> 00:26:53,220
fix your TLS Library it's not a matter

727
00:26:53,220 --> 00:26:55,140
of you know is it new or is it already

728
00:26:55,140 --> 00:26:57,539
shipping or something like that

729
00:26:57,539 --> 00:27:00,179
yeah and speaking of rules like what

730
00:27:00,179 --> 00:27:01,919
room do we have for regulation like

731
00:27:01,919 --> 00:27:03,539
we're talking about also advocacy on

732
00:27:03,539 --> 00:27:05,460
memory safety

733
00:27:05,460 --> 00:27:07,559
um so do we need a better regulation do

734
00:27:07,559 --> 00:27:10,080
we need uh systems to make commitments

735
00:27:10,080 --> 00:27:12,600
to updating x amount of code in the next

736
00:27:12,600 --> 00:27:14,220
few years

737
00:27:14,220 --> 00:27:15,720
um what what is going to push us into

738
00:27:15,720 --> 00:27:17,700
that Mark

739
00:27:17,700 --> 00:27:20,419
unofficially in your point of view Alex

740
00:27:20,419 --> 00:27:24,900
uh my point of view is that uh speaking

741
00:27:24,900 --> 00:27:26,580
only for myself I think you know

742
00:27:26,580 --> 00:27:29,880
regulations that you must be all memory

743
00:27:29,880 --> 00:27:32,580
safe is very challenging with you know

744
00:27:32,580 --> 00:27:34,020
the exact point I just made about all

745
00:27:34,020 --> 00:27:37,320
these uh Legacy code bases so like for

746
00:27:37,320 --> 00:27:38,880
the time being the most important thing

747
00:27:38,880 --> 00:27:41,880
is for people who have these very large

748
00:27:41,880 --> 00:27:43,799
code bases that are memory on safe

749
00:27:43,799 --> 00:27:45,720
languages to be building out their plans

750
00:27:45,720 --> 00:27:48,299
and starting to execute on them and I

751
00:27:48,299 --> 00:27:52,200
think pressure from customers uh and

752
00:27:52,200 --> 00:27:54,000
users of these things is the is the

753
00:27:54,000 --> 00:27:56,760
forcing function there for me

754
00:27:56,760 --> 00:27:57,539
um

755
00:27:57,539 --> 00:28:01,080
you know in an abstract sense uh more

756
00:28:01,080 --> 00:28:03,840
pressure right from a regulatory

757
00:28:03,840 --> 00:28:06,240
perspective on uh secure software

758
00:28:06,240 --> 00:28:08,880
practices as a whole is is a valuable

759
00:28:08,880 --> 00:28:11,159
thing but I think this is a challenging

760
00:28:11,159 --> 00:28:12,720
place where like there is no snapping

761
00:28:12,720 --> 00:28:14,460
your finger and overnight you don't have

762
00:28:14,460 --> 00:28:16,980
a lot of CNC plus plus like that's

763
00:28:16,980 --> 00:28:20,240
that's not what this looks like

764
00:28:21,360 --> 00:28:23,220
yeah

765
00:28:23,220 --> 00:28:25,500
um and I also think there's value in

766
00:28:25,500 --> 00:28:27,240
holding up some of the great migrations

767
00:28:27,240 --> 00:28:29,640
that have happened I know yeah you in

768
00:28:29,640 --> 00:28:31,860
the report like highlighted case studies

769
00:28:31,860 --> 00:28:33,659
and been talking to many people as to

770
00:28:33,659 --> 00:28:35,100
like where's the success you've had and

771
00:28:35,100 --> 00:28:36,600
how does it look like can you talk to

772
00:28:36,600 --> 00:28:38,820
any of that

773
00:28:38,820 --> 00:28:40,140
um yeah we highlighted uh different

774
00:28:40,140 --> 00:28:41,279
projects

775
00:28:41,279 --> 00:28:43,200
um and it was about

776
00:28:43,200 --> 00:28:46,799
um uh getting rest in the kernel we

777
00:28:46,799 --> 00:28:49,799
talked about some of the sandboxing that

778
00:28:49,799 --> 00:28:50,400
um

779
00:28:50,400 --> 00:28:52,799
Firefox had done there was like a bunch

780
00:28:52,799 --> 00:28:54,360
of different case studies where people

781
00:28:54,360 --> 00:28:56,460
explain and I think like the other ones

782
00:28:56,460 --> 00:28:58,940
were a year

783
00:29:00,360 --> 00:29:02,340
yeah yeah I think one of them was around

784
00:29:02,340 --> 00:29:04,080
like the the performance win I talked

785
00:29:04,080 --> 00:29:06,000
about with certificate parsing

786
00:29:06,000 --> 00:29:08,120
um

787
00:29:08,940 --> 00:29:11,820
yeah I also remember when we held the

788
00:29:11,820 --> 00:29:13,500
convening we had

789
00:29:13,500 --> 00:29:16,080
um organizations that were kind of in

790
00:29:16,080 --> 00:29:17,159
this mode where they're like we're

791
00:29:17,159 --> 00:29:19,260
outsourced to get a lot of rest done for

792
00:29:19,260 --> 00:29:21,419
companies and really helped change that

793
00:29:21,419 --> 00:29:22,799
code but they were struggling on

794
00:29:22,799 --> 00:29:24,960
capacity that it was not sustainable for

795
00:29:24,960 --> 00:29:27,120
them so organizations would like

796
00:29:27,120 --> 00:29:29,399
Leverage them but then internally they

797
00:29:29,399 --> 00:29:32,600
were struggling to get more support from

798
00:29:32,600 --> 00:29:35,100
their staff and and they couldn't just

799
00:29:35,100 --> 00:29:37,260
forever have these organizations in

800
00:29:37,260 --> 00:29:40,380
place building more uh building more

801
00:29:40,380 --> 00:29:42,179
safe memory code without the internal

802
00:29:42,179 --> 00:29:43,799
support and I found that really

803
00:29:43,799 --> 00:29:45,419
interesting on the Dynamics of where we

804
00:29:45,419 --> 00:29:47,460
are in the industry which also really

805
00:29:47,460 --> 00:29:49,200
makes me think of like the academic

806
00:29:49,200 --> 00:29:51,299
institutions and yeah you talked about

807
00:29:51,299 --> 00:29:52,620
this in the report on the chicken and

808
00:29:52,620 --> 00:29:56,220
egg we've talked to a few academics who

809
00:29:56,220 --> 00:29:59,039
have said we teach C C and C plus plus

810
00:29:59,039 --> 00:30:01,440
because it helps people get a job and

811
00:30:01,440 --> 00:30:03,899
it's hard to dust the curriculum and

812
00:30:03,899 --> 00:30:05,580
there's so much more that's needed there

813
00:30:05,580 --> 00:30:08,039
and we can't fit in memory safe

814
00:30:08,039 --> 00:30:11,640
languages in and our our curriculum for

815
00:30:11,640 --> 00:30:15,059
computer science or development programs

816
00:30:15,059 --> 00:30:17,760
and it's a really confusing battle as to

817
00:30:17,760 --> 00:30:19,919
like how do we get there and how do we

818
00:30:19,919 --> 00:30:21,899
work with academic institutions I know

819
00:30:21,899 --> 00:30:23,760
that there are many people here

820
00:30:23,760 --> 00:30:26,159
representing some of them uh and so I'm

821
00:30:26,159 --> 00:30:27,960
curious like how can we work with these

822
00:30:27,960 --> 00:30:29,399
communities and the schools in

823
00:30:29,399 --> 00:30:31,080
particular to change some of that

824
00:30:31,080 --> 00:30:33,120
demystification around what is needed

825
00:30:33,120 --> 00:30:34,679
and what tools we're teaching to people

826
00:30:34,679 --> 00:30:36,840
yeah and I'm hoping we can get some of

827
00:30:36,840 --> 00:30:38,340
them talking like create a former and

828
00:30:38,340 --> 00:30:39,360
they can talk to each other about it

829
00:30:39,360 --> 00:30:41,520
because there are people that have it's

830
00:30:41,520 --> 00:30:43,080
a kind of a broad issue and there's

831
00:30:43,080 --> 00:30:44,580
different perspectives on it and it

832
00:30:44,580 --> 00:30:46,559
really depends on the class but there

833
00:30:46,559 --> 00:30:48,600
are some specific classes that are like

834
00:30:48,600 --> 00:30:50,700
so full to the broom that if you add

835
00:30:50,700 --> 00:30:52,380
another concept like people's heads will

836
00:30:52,380 --> 00:30:53,640
explode

837
00:30:53,640 --> 00:30:56,399
um and so like how do you and so like um

838
00:30:56,399 --> 00:30:58,440
yeah they were trying to figure out like

839
00:30:58,440 --> 00:31:00,299
how do we incorporate this or what do we

840
00:31:00,299 --> 00:31:01,500
do

841
00:31:01,500 --> 00:31:02,880
um but and there was like actually a lot

842
00:31:02,880 --> 00:31:04,080
of debate and back and forth on that

843
00:31:04,080 --> 00:31:06,720
because some people are like well people

844
00:31:06,720 --> 00:31:08,640
do want to hire people who I can write

845
00:31:08,640 --> 00:31:11,399
in memory safe languages and so um I

846
00:31:11,399 --> 00:31:13,500
feel like that that's going to need more

847
00:31:13,500 --> 00:31:15,140
kind of conversation

848
00:31:15,140 --> 00:31:18,419
for us to figure out and it's kind of

849
00:31:18,419 --> 00:31:20,159
individualized which is kind of going

850
00:31:20,159 --> 00:31:21,960
back to the whole regulation issue I

851
00:31:21,960 --> 00:31:24,120
think it's going to be difficult to come

852
00:31:24,120 --> 00:31:25,559
up with like this is the one thing

853
00:31:25,559 --> 00:31:27,539
everybody should do because it might not

854
00:31:27,539 --> 00:31:30,179
be applicable to some people and you can

855
00:31:30,179 --> 00:31:32,399
follow certain steps and not actually

856
00:31:32,399 --> 00:31:35,760
create and like changes for the end user

857
00:31:35,760 --> 00:31:37,799
um so like there's like a lot of like

858
00:31:37,799 --> 00:31:39,480
nuance and discussion and thought that

859
00:31:39,480 --> 00:31:41,340
needs to go into that to see like make

860
00:31:41,340 --> 00:31:43,440
sure like if we put a lot of effort into

861
00:31:43,440 --> 00:31:45,419
something like is it actually having

862
00:31:45,419 --> 00:31:48,799
that kind of impact that we want

863
00:31:50,000 --> 00:31:54,059
yeah and then like for funding like

864
00:31:54,059 --> 00:31:56,640
where is that fun is is there room to

865
00:31:56,640 --> 00:31:58,080
fund

866
00:31:58,080 --> 00:31:59,880
um like different curriculum and

867
00:31:59,880 --> 00:32:01,799
academics and help changing this do we

868
00:32:01,799 --> 00:32:05,299
see a space for that in there as well

869
00:32:05,820 --> 00:32:07,440
I'm not very familiar with the

870
00:32:07,440 --> 00:32:10,080
educational funding situation yeah but I

871
00:32:10,080 --> 00:32:12,179
don't I don't know that I have

872
00:32:12,179 --> 00:32:15,000
too much to add to that yeah I I the

873
00:32:15,000 --> 00:32:16,380
reason I'm asking is because there is

874
00:32:16,380 --> 00:32:18,299
conversation around more fellowships

875
00:32:18,299 --> 00:32:20,520
like more student-led school-based

876
00:32:20,520 --> 00:32:22,500
fellowships that really promote

877
00:32:22,500 --> 00:32:23,940
integrating this learning and as we

878
00:32:23,940 --> 00:32:25,380
think of memory safety like it is very

879
00:32:25,380 --> 00:32:27,179
layered there's many places in which we

880
00:32:27,179 --> 00:32:28,440
need to tackle this because of the

881
00:32:28,440 --> 00:32:29,820
challenges

882
00:32:29,820 --> 00:32:31,500
um and so you know hearing that you're

883
00:32:31,500 --> 00:32:33,720
not familiar is is makes sense and I'm

884
00:32:33,720 --> 00:32:35,460
wondering if we can like push towards

885
00:32:35,460 --> 00:32:37,740
that as part of the challenges that

886
00:32:37,740 --> 00:32:39,899
we're facing

887
00:32:39,899 --> 00:32:44,000
yeah I mean it seems like a nice idea

888
00:32:44,279 --> 00:32:46,020
great

889
00:32:46,020 --> 00:32:47,940
um and then I also I feel like one of

890
00:32:47,940 --> 00:32:49,020
the other challenges that's really come

891
00:32:49,020 --> 00:32:50,899
up for people is you know there's

892
00:32:50,899 --> 00:32:52,919
Advocates and and people who are working

893
00:32:52,919 --> 00:32:54,960
deep in this like us who are in

894
00:32:54,960 --> 00:32:57,600
companies talking about these issues uh

895
00:32:57,600 --> 00:32:59,279
and then we really need buy-in of like

896
00:32:59,279 --> 00:33:01,679
business Executives like people at the

897
00:33:01,679 --> 00:33:04,080
top levels these organizations uh who

898
00:33:04,080 --> 00:33:05,820
are not who are not overwhelmed by the

899
00:33:05,820 --> 00:33:09,000
grief because that is strong uh and who

900
00:33:09,000 --> 00:33:10,740
feel like they are empowered to do this

901
00:33:10,740 --> 00:33:12,240
and I'm wondering if we can talk about

902
00:33:12,240 --> 00:33:13,860
Solutions and how to bring those people

903
00:33:13,860 --> 00:33:16,260
on board how people in the room who are

904
00:33:16,260 --> 00:33:18,539
now all evangelizers I'm sure like

905
00:33:18,539 --> 00:33:21,120
you're all converts you're with us

906
00:33:21,120 --> 00:33:23,399
um are are able to go back and talk to

907
00:33:23,399 --> 00:33:25,080
these people and actually like work

908
00:33:25,080 --> 00:33:27,480
through plans uh that we understand are

909
00:33:27,480 --> 00:33:29,100
not going to happen immediately but like

910
00:33:29,100 --> 00:33:31,740
in the short long term uh work on

911
00:33:31,740 --> 00:33:33,179
building something that makes sense for

912
00:33:33,179 --> 00:33:34,799
where they're at

913
00:33:34,799 --> 00:33:37,679
yeah I think part of the answer is that

914
00:33:37,679 --> 00:33:39,240
an investment in memory safety is

915
00:33:39,240 --> 00:33:41,760
essentially an upright cost to reduce

916
00:33:41,760 --> 00:33:44,340
your long-term support costs right you

917
00:33:44,340 --> 00:33:46,080
will not have to deal with incoming

918
00:33:46,080 --> 00:33:47,340
vulnerabilities which is like an

919
00:33:47,340 --> 00:33:49,500
expensive triage process you will not

920
00:33:49,500 --> 00:33:51,899
have as many stability problems you know

921
00:33:51,899 --> 00:33:54,120
non-security crashes

922
00:33:54,120 --> 00:33:55,740
and

923
00:33:55,740 --> 00:33:57,840
part of making that argument that like

924
00:33:57,840 --> 00:34:00,419
this is an effective cost benefit is

925
00:34:00,419 --> 00:34:03,179
building up the the body of data that

926
00:34:03,179 --> 00:34:04,980
shows yes the vulnerability counts

927
00:34:04,980 --> 00:34:06,899
really are lower yes we were able to

928
00:34:06,899 --> 00:34:09,179
ship this performance Improvement uh due

929
00:34:09,179 --> 00:34:11,940
to concurrency more easily and building

930
00:34:11,940 --> 00:34:14,099
up that body of case studies that the

931
00:34:14,099 --> 00:34:16,080
math works out basically and that's what

932
00:34:16,080 --> 00:34:18,119
I think that the Android blog post does

933
00:34:18,119 --> 00:34:21,239
a really effective job of is is showing

934
00:34:21,239 --> 00:34:23,540
the numbers

935
00:34:24,540 --> 00:34:28,440
is it true that it will cost us less to

936
00:34:28,440 --> 00:34:31,500
update memory unsafe code right now as

937
00:34:31,500 --> 00:34:34,199
opposed to waiting and doing it later

938
00:34:34,199 --> 00:34:37,560
yeah I think so code bases have a

939
00:34:37,560 --> 00:34:40,560
tendency to expand so the kind of sooner

940
00:34:40,560 --> 00:34:42,300
we start paying down the technical debt

941
00:34:42,300 --> 00:34:44,339
the lower our interest payments will be

942
00:34:44,339 --> 00:34:48,839
to overextend a metaphor egregiously

943
00:34:48,839 --> 00:34:52,580
I also think it is the case

944
00:34:52,580 --> 00:34:55,739
that there are a lot of benefits that

945
00:34:55,739 --> 00:34:58,380
are very hard for us to measure I know

946
00:34:58,380 --> 00:35:00,720
when I I used to work on Firefox and you

947
00:35:00,720 --> 00:35:03,180
know we get crash reports and it was a

948
00:35:03,180 --> 00:35:05,220
non-trivial amount of time spent kind of

949
00:35:05,220 --> 00:35:07,200
staring at crash reports being like I

950
00:35:07,200 --> 00:35:09,480
can tell there is a bug in this

951
00:35:09,480 --> 00:35:11,940
subsystem but like memory is so

952
00:35:11,940 --> 00:35:14,160
corrupted that you know trying to debug

953
00:35:14,160 --> 00:35:16,260
it is like kind of an hours long like

954
00:35:16,260 --> 00:35:17,760
staring at a hex dump and praying

955
00:35:17,760 --> 00:35:20,820
exercise and it's not well Quantified

956
00:35:20,820 --> 00:35:23,460
what the benefits of getting rid of that

957
00:35:23,460 --> 00:35:25,680
process will be but it it seems

958
00:35:25,680 --> 00:35:27,359
inconceivable to me that's not not a

959
00:35:27,359 --> 00:35:29,640
huge win uh for you know for the

960
00:35:29,640 --> 00:35:31,140
projects that that have kind of this

961
00:35:31,140 --> 00:35:32,760
robust crash reporting infrastructure

962
00:35:32,760 --> 00:35:37,800
and are diligently trying to debug them

963
00:35:37,800 --> 00:35:40,320
yeah I think the number of hours that

964
00:35:40,320 --> 00:35:42,359
senior browser Engineers sink into

965
00:35:42,359 --> 00:35:44,220
trying to debug problems that don't

966
00:35:44,220 --> 00:35:45,480
happen in Rust

967
00:35:45,480 --> 00:35:49,560
is depressing like these are like really

968
00:35:49,560 --> 00:35:51,540
bright talented people and you want to

969
00:35:51,540 --> 00:35:53,339
imagine that they're out you know making

970
00:35:53,339 --> 00:35:55,140
your browser better in ways that matter

971
00:35:55,140 --> 00:35:56,160
to you

972
00:35:56,160 --> 00:35:57,540
and the fact of the matter is they're

973
00:35:57,540 --> 00:35:58,980
spending huge amounts of their time

974
00:35:58,980 --> 00:36:01,380
trying to figure out you know some

975
00:36:01,380 --> 00:36:03,839
problem that is the result of shared

976
00:36:03,839 --> 00:36:06,420
mutable state or something that you know

977
00:36:06,420 --> 00:36:09,359
just doesn't exist in roster or a safer

978
00:36:09,359 --> 00:36:11,160
language it's

979
00:36:11,160 --> 00:36:13,619
it's a heavy toll and it's

980
00:36:13,619 --> 00:36:16,200
not good for anybody I I just keep going

981
00:36:16,200 --> 00:36:18,599
back to that 60 to 70 number and I'm

982
00:36:18,599 --> 00:36:20,940
like if that's not convincing then what

983
00:36:20,940 --> 00:36:23,040
is like um

984
00:36:23,040 --> 00:36:25,380
um that's just huge like um you know

985
00:36:25,380 --> 00:36:26,940
just thinking about personal examples

986
00:36:26,940 --> 00:36:28,859
like I don't take baths when there's

987
00:36:28,859 --> 00:36:30,240
lightning like I don't know it's like

988
00:36:30,240 --> 00:36:33,180
when you look at percentages of risk and

989
00:36:33,180 --> 00:36:35,339
like make changes to behavior based on

990
00:36:35,339 --> 00:36:38,280
that and so like I don't know I kind of

991
00:36:38,280 --> 00:36:39,720
see it as like an expectation for

992
00:36:39,720 --> 00:36:42,000
consumers that if you know this thing is

993
00:36:42,000 --> 00:36:43,980
causing most of our issues that you

994
00:36:43,980 --> 00:36:46,079
would do something about it and like I

995
00:36:46,079 --> 00:36:48,000
can't speak to the specifics of how each

996
00:36:48,000 --> 00:36:50,099
organization should do it

997
00:36:50,099 --> 00:36:52,020
um as well because there are there is a

998
00:36:52,020 --> 00:36:53,520
lot of data I don't have and like a lot

999
00:36:53,520 --> 00:36:56,220
of information but like like please just

1000
00:36:56,220 --> 00:36:57,720
get started working on I don't know I

1001
00:36:57,720 --> 00:36:59,700
feel like the case kind of makes it so

1002
00:36:59,700 --> 00:37:01,380
so

1003
00:37:01,380 --> 00:37:04,140
yeah there is a real business case there

1004
00:37:04,140 --> 00:37:06,480
and that's what I find when we think

1005
00:37:06,480 --> 00:37:07,920
about the problem like it is really

1006
00:37:07,920 --> 00:37:10,140
challenging because like it's very clear

1007
00:37:10,140 --> 00:37:12,599
what are the issues and what needs to be

1008
00:37:12,599 --> 00:37:14,460
done and I

1009
00:37:14,460 --> 00:37:16,200
um I feel like it's so hard for everyone

1010
00:37:16,200 --> 00:37:18,119
to get to the solutions

1011
00:37:18,119 --> 00:37:20,760
uh so I'm wondering like if there is one

1012
00:37:20,760 --> 00:37:22,800
solution you zero in on whether it's

1013
00:37:22,800 --> 00:37:24,300
through your work or something like that

1014
00:37:24,300 --> 00:37:26,640
like where what would you feel like we

1015
00:37:26,640 --> 00:37:30,379
can push forward as Solutions

1016
00:37:30,960 --> 00:37:33,240
I mean I want to see plans I want to see

1017
00:37:33,240 --> 00:37:34,920
you know Microsoft and Apple like I want

1018
00:37:34,920 --> 00:37:36,240
to see these companies tell us what

1019
00:37:36,240 --> 00:37:37,980
they're going to do like I want to see

1020
00:37:37,980 --> 00:37:39,780
them like no I'm not expecting everybody

1021
00:37:39,780 --> 00:37:41,520
to do this overnight but I want to know

1022
00:37:41,520 --> 00:37:42,720
that they are thinking about it and

1023
00:37:42,720 --> 00:37:45,060
working on it incrementally and like

1024
00:37:45,060 --> 00:37:47,099
actually working on it incrementally not

1025
00:37:47,099 --> 00:37:49,020
just like trying to check off boxes to

1026
00:37:49,020 --> 00:37:50,160
look like they're working on it

1027
00:37:50,160 --> 00:37:51,660
incrementally in a way that doesn't

1028
00:37:51,660 --> 00:37:53,760
actually help anybody and like starting

1029
00:37:53,760 --> 00:37:55,079
with

1030
00:37:55,079 --> 00:37:57,000
um you know the most sensitive data

1031
00:37:57,000 --> 00:37:58,619
whether that's government data or

1032
00:37:58,619 --> 00:38:00,780
medical or pii whatever it is like I

1033
00:38:00,780 --> 00:38:02,520
want to like see that there's a

1034
00:38:02,520 --> 00:38:04,980
thoughtful process there and that it is

1035
00:38:04,980 --> 00:38:07,500
on a roadmap so

1036
00:38:07,500 --> 00:38:09,480
yeah for me it is

1037
00:38:09,480 --> 00:38:11,760
kind of similar figure out where the

1038
00:38:11,760 --> 00:38:14,160
biggest source of risk is the component

1039
00:38:14,160 --> 00:38:15,540
that are the most vulnerabilities last

1040
00:38:15,540 --> 00:38:17,220
year the most privileged thing the thing

1041
00:38:17,220 --> 00:38:19,440
on the network boundary the thing on the

1042
00:38:19,440 --> 00:38:21,720
Kernel user space boundary whatever that

1043
00:38:21,720 --> 00:38:24,119
component is and figure out are there

1044
00:38:24,119 --> 00:38:26,579
blockers to this to finding a memory

1045
00:38:26,579 --> 00:38:29,160
safe solution here and if so like how do

1046
00:38:29,160 --> 00:38:31,560
we just start knocking them down and I

1047
00:38:31,560 --> 00:38:33,480
mean I I think several of us have talked

1048
00:38:33,480 --> 00:38:34,560
about rust a lot but like it doesn't

1049
00:38:34,560 --> 00:38:36,240
have to be rust like write it and go

1050
00:38:36,240 --> 00:38:39,000
right in Swift you know right in Java

1051
00:38:39,000 --> 00:38:40,980
like all these things are fine I just

1052
00:38:40,980 --> 00:38:42,960
tend to talk about rust because it is

1053
00:38:42,960 --> 00:38:44,940
usable in the context where historically

1054
00:38:44,940 --> 00:38:46,980
C felt like it did not have any

1055
00:38:46,980 --> 00:38:49,500
alternatives but you know these other

1056
00:38:49,500 --> 00:38:51,000
languages you already you're writing a

1057
00:38:51,000 --> 00:38:53,099
network server you use go you're writing

1058
00:38:53,099 --> 00:38:55,680
an IOS app use Swift uh right there

1059
00:38:55,680 --> 00:38:57,359
there are plenty of good choices out

1060
00:38:57,359 --> 00:38:59,480
there

1061
00:39:00,480 --> 00:39:03,180
yeah I think my answer is basically the

1062
00:39:03,180 --> 00:39:04,680
same and probably unsurprising in that

1063
00:39:04,680 --> 00:39:07,200
it's what my project does is let's find

1064
00:39:07,200 --> 00:39:10,020
the most important places to get going

1065
00:39:10,020 --> 00:39:10,800
um

1066
00:39:10,800 --> 00:39:12,660
I would throw it out there focus on

1067
00:39:12,660 --> 00:39:15,000
network and privilege boundaries

1068
00:39:15,000 --> 00:39:16,260
um

1069
00:39:16,260 --> 00:39:18,300
find those components make a plan and

1070
00:39:18,300 --> 00:39:20,700
get to work

1071
00:39:20,700 --> 00:39:24,480
I will also say there is for individuals

1072
00:39:24,480 --> 00:39:26,339
working on open source projects there is

1073
00:39:26,339 --> 00:39:28,560
often uh there can be quite a bit of

1074
00:39:28,560 --> 00:39:31,079
Leverage right if you incorporate rust

1075
00:39:31,079 --> 00:39:33,839
into your own project then your

1076
00:39:33,839 --> 00:39:36,720
dependencies will kind of need to be

1077
00:39:36,720 --> 00:39:39,359
okay with that and that's that can be

1078
00:39:39,359 --> 00:39:41,640
painful uh some folks might have seen

1079
00:39:41,640 --> 00:39:44,040
like there's a very large and long issue

1080
00:39:44,040 --> 00:39:46,140
where various people are upset about our

1081
00:39:46,140 --> 00:39:48,599
inclusion of rust into the pisca

1082
00:39:48,599 --> 00:39:50,520
cryptography library and the impact it's

1083
00:39:50,520 --> 00:39:54,300
going to have on AIX machines running PA

1084
00:39:54,300 --> 00:39:56,880
risk CPUs that have not been produced in

1085
00:39:56,880 --> 00:39:58,859
a decade like people are genuinely upset

1086
00:39:58,859 --> 00:40:00,420
about this and like it's a little

1087
00:40:00,420 --> 00:40:03,839
mystifying to me but I will say like we

1088
00:40:03,839 --> 00:40:05,640
ate a fair amount of negative feedback

1089
00:40:05,640 --> 00:40:07,980
and then we made the ecosystem better

1090
00:40:07,980 --> 00:40:10,260
it's now possible to ship pre-built

1091
00:40:10,260 --> 00:40:12,720
artifacts for Alpine Linux for example

1092
00:40:12,720 --> 00:40:15,839
in a way that really reduced the pain of

1093
00:40:15,839 --> 00:40:19,079
using rust for a python extension module

1094
00:40:19,079 --> 00:40:20,640
and it was the case when we shipped our

1095
00:40:20,640 --> 00:40:23,460
second module written in Rust there was

1096
00:40:23,460 --> 00:40:25,320
kind of no negative feedback to that

1097
00:40:25,320 --> 00:40:27,240
because the ecosystem had smoothed

1098
00:40:27,240 --> 00:40:29,339
itself out by so by being willing to

1099
00:40:29,339 --> 00:40:31,859
accept a certain amount of uh pain the

1100
00:40:31,859 --> 00:40:33,900
first time it's not much easier for any

1101
00:40:33,900 --> 00:40:35,520
future project that wants to incorporate

1102
00:40:35,520 --> 00:40:38,400
rust so if you are a project kind of in

1103
00:40:38,400 --> 00:40:40,500
that position of having a lot of use you

1104
00:40:40,500 --> 00:40:42,119
know tons of downstreams and you're

1105
00:40:42,119 --> 00:40:44,099
you're willing to accept uh some

1106
00:40:44,099 --> 00:40:45,780
negative feedback and and put in the

1107
00:40:45,780 --> 00:40:48,480
work to improve your ecosystem that can

1108
00:40:48,480 --> 00:40:51,680
be a really high leverage position

1109
00:40:52,380 --> 00:40:55,320
but a challenging one to take on yeah

1110
00:40:55,320 --> 00:40:57,000
like I can't say it's fun to have like

1111
00:40:57,000 --> 00:40:59,099
The Message Board threads like asking

1112
00:40:59,099 --> 00:41:00,839
what is wrong with you and you broke my

1113
00:41:00,839 --> 00:41:03,359
PA risk build and like all of that and

1114
00:41:03,359 --> 00:41:05,579
like there are also people with far more

1115
00:41:05,579 --> 00:41:08,099
reasonable concerns than PA risk like I

1116
00:41:08,099 --> 00:41:10,320
don't want to say everyone had like uh

1117
00:41:10,320 --> 00:41:12,480
ridiculous complaints there were plenty

1118
00:41:12,480 --> 00:41:14,160
of people with reasonable uh complaints

1119
00:41:14,160 --> 00:41:17,460
but uh having done that it seems to have

1120
00:41:17,460 --> 00:41:18,839
worked out well we can see from the

1121
00:41:18,839 --> 00:41:20,579
download metrics the vast majority of

1122
00:41:20,579 --> 00:41:22,740
users have upgraded diversions that

1123
00:41:22,740 --> 00:41:25,079
incorporate rust code it's like it seems

1124
00:41:25,079 --> 00:41:27,440
to be working

1125
00:41:27,960 --> 00:41:30,420
yeah I feel like when you're on reading

1126
00:41:30,420 --> 00:41:32,220
about memory safety online like there's

1127
00:41:32,220 --> 00:41:34,500
a whole slew of people who are like I

1128
00:41:34,500 --> 00:41:36,060
couldn't do this because of these issues

1129
00:41:36,060 --> 00:41:37,560
and

1130
00:41:37,560 --> 00:41:39,420
um I'm in different stages of this grief

1131
00:41:39,420 --> 00:41:42,480
on your video uh there's there's so many

1132
00:41:42,480 --> 00:41:44,099
different versions of where people are

1133
00:41:44,099 --> 00:41:46,079
at and I I feel like with that challenge

1134
00:41:46,079 --> 00:41:48,540
like where where are people where is the

1135
00:41:48,540 --> 00:41:50,520
community to support like can they go to

1136
00:41:50,520 --> 00:41:53,040
press Mo and find support through

1137
00:41:53,040 --> 00:41:54,839
Avenues there like where are places

1138
00:41:54,839 --> 00:41:57,599
where we can support these projects and

1139
00:41:57,599 --> 00:42:00,619
people doing this work

1140
00:42:01,560 --> 00:42:03,900
I don't have a great answer in terms of

1141
00:42:03,900 --> 00:42:06,780
like an organized community of folks who

1142
00:42:06,780 --> 00:42:09,599
are you know done similar things whether

1143
00:42:09,599 --> 00:42:12,420
it's the colonel or G streamer which

1144
00:42:12,420 --> 00:42:15,300
incorporates rust code now or rsvg like

1145
00:42:15,300 --> 00:42:16,619
I don't know that there's an organized

1146
00:42:16,619 --> 00:42:19,020
community that uh is like a place you

1147
00:42:19,020 --> 00:42:20,460
can post your the challenge you're

1148
00:42:20,460 --> 00:42:22,619
having but there's definitely a growing

1149
00:42:22,619 --> 00:42:25,740
body of expertise out there

1150
00:42:25,740 --> 00:42:27,240
yeah yeah really depends on what you're

1151
00:42:27,240 --> 00:42:29,660
working on

1152
00:42:30,240 --> 00:42:32,040
um I feel like we've shared various

1153
00:42:32,040 --> 00:42:35,400
resources whether it's the Android blog

1154
00:42:35,400 --> 00:42:38,160
or the report and we will definitely

1155
00:42:38,160 --> 00:42:40,380
equip everyone with that but like are

1156
00:42:40,380 --> 00:42:42,480
there other resources people can point

1157
00:42:42,480 --> 00:42:44,579
to and go through that are more helpful

1158
00:42:44,579 --> 00:42:47,760
because I do find that there's a small

1159
00:42:47,760 --> 00:42:50,579
ecosystem of resources but sometimes

1160
00:42:50,579 --> 00:42:52,020
they can be really helpful to read

1161
00:42:52,020 --> 00:42:55,440
through Alex's blog I'll start Alex's

1162
00:42:55,440 --> 00:42:57,740
blog's been really helpful

1163
00:42:57,740 --> 00:43:01,020
uh last year Paul carer my my

1164
00:43:01,020 --> 00:43:02,819
co-maintainer myself gave a talk at

1165
00:43:02,819 --> 00:43:04,800
pycon on the experience we had well it's

1166
00:43:04,800 --> 00:43:06,359
it's kind of specific to that ecosystem

1167
00:43:06,359 --> 00:43:08,760
we do kind of walk through what is all

1168
00:43:08,760 --> 00:43:12,060
the things we ended up doing to make

1169
00:43:12,060 --> 00:43:14,700
that ecosystem kind of more compatible

1170
00:43:14,700 --> 00:43:16,680
for the next person who wants to ship

1171
00:43:16,680 --> 00:43:18,660
rust so I think that's a good resource

1172
00:43:18,660 --> 00:43:21,300
on what it looks like to kind of make

1173
00:43:21,300 --> 00:43:22,859
those Investments and make it easier for

1174
00:43:22,859 --> 00:43:25,400
the next person

1175
00:43:28,500 --> 00:43:30,180
uh I can say at the end of the report

1176
00:43:30,180 --> 00:43:33,300
there's a very long list of resources

1177
00:43:33,300 --> 00:43:35,220
um and a lot of it is kind of talking

1178
00:43:35,220 --> 00:43:36,960
about the problem more than Solutions

1179
00:43:36,960 --> 00:43:38,220
but there's also like a lot of

1180
00:43:38,220 --> 00:43:40,260
background knowledge and depending on

1181
00:43:40,260 --> 00:43:41,520
what people are looking for they may

1182
00:43:41,520 --> 00:43:44,480
find something there

1183
00:43:45,240 --> 00:43:47,700
and you have to say memory safety.org

1184
00:43:47,700 --> 00:43:50,940
yeah check out memories.org I mean our

1185
00:43:50,940 --> 00:43:53,819
our remit is not to change

1186
00:43:53,819 --> 00:43:55,740
all the C code in the world we're really

1187
00:43:55,740 --> 00:43:58,560
pretty focused on the most critical

1188
00:43:58,560 --> 00:44:00,900
systems level components but

1189
00:44:00,900 --> 00:44:01,920
I think there's a lot of information

1190
00:44:01,920 --> 00:44:04,200
there in the blog post and uh hopefully

1191
00:44:04,200 --> 00:44:05,819
that'll be even more as our projects

1192
00:44:05,819 --> 00:44:07,500
reach maturity and get more adoption

1193
00:44:07,500 --> 00:44:08,940
yeah

1194
00:44:08,940 --> 00:44:10,980
those are really helpful resources that

1195
00:44:10,980 --> 00:44:12,420
we will share

1196
00:44:12,420 --> 00:44:14,880
um thank you to our panelists and thank

1197
00:44:14,880 --> 00:44:16,619
you all for the questions that was

1198
00:44:16,619 --> 00:44:17,940
really robust and we will get on the

1199
00:44:17,940 --> 00:44:19,980
slack after dance or more

1200
00:44:19,980 --> 00:44:21,900
awesome thank you so much thank you all

1201
00:44:21,900 --> 00:44:24,260
thank you

