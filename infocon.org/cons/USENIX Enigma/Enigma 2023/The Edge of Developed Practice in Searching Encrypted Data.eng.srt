1
00:00:01,199 --> 00:00:04,199
foreign

2
00:00:19,880 --> 00:00:22,619
this is my focus

3
00:00:22,619 --> 00:00:25,800
um my earlier slides had me on Ken white

4
00:00:25,800 --> 00:00:28,500
but you know these uh times being what

5
00:00:28,500 --> 00:00:31,619
they are I'm on Mastodon now

6
00:00:31,619 --> 00:00:33,480
all right let's talk about some popular

7
00:00:33,480 --> 00:00:36,120
misconceptions around encryption and I

8
00:00:36,120 --> 00:00:37,559
don't just mean by developers by the way

9
00:00:37,559 --> 00:00:40,200
I mean by people in the infosec sort of

10
00:00:40,200 --> 00:00:43,520
world or space so

11
00:00:43,520 --> 00:00:46,200
if we think about things that are common

12
00:00:46,200 --> 00:00:48,480
in the vernacular of you know of our

13
00:00:48,480 --> 00:00:49,800
work

14
00:00:49,800 --> 00:00:52,260
um we talk about data in transit we talk

15
00:00:52,260 --> 00:00:54,000
about data at rest

16
00:00:54,000 --> 00:00:55,680
um you know and some of the Technologies

17
00:00:55,680 --> 00:00:58,020
around that that supports it

18
00:00:58,020 --> 00:01:00,360
um but I wanted to kind of dive in a

19
00:01:00,360 --> 00:01:04,319
little deeper because uh in the context

20
00:01:04,319 --> 00:01:06,720
of a database and so the the majority of

21
00:01:06,720 --> 00:01:08,520
the talks are going to be about the work

22
00:01:08,520 --> 00:01:11,040
that we've done with a special type of

23
00:01:11,040 --> 00:01:13,860
encrypted search and some new techniques

24
00:01:13,860 --> 00:01:16,140
um when people refer to database

25
00:01:16,140 --> 00:01:19,080
encryption that's a loaded term it can

26
00:01:19,080 --> 00:01:20,420
mean a whole lot of different things

27
00:01:20,420 --> 00:01:22,619
sometimes The Regulators it just means

28
00:01:22,619 --> 00:01:24,479
you're encrypting your disk and so you

29
00:01:24,479 --> 00:01:26,220
know if you've got like healthcare data

30
00:01:26,220 --> 00:01:28,680
from an analyst work you know laptop or

31
00:01:28,680 --> 00:01:31,439
something and laptop stolen uh the

32
00:01:31,439 --> 00:01:33,479
difference between volume encryption or

33
00:01:33,479 --> 00:01:35,400
not could be a 20 million dollar fine or

34
00:01:35,400 --> 00:01:36,780
no report

35
00:01:36,780 --> 00:01:37,740
um

36
00:01:37,740 --> 00:01:39,720
it's very different when you think from

37
00:01:39,720 --> 00:01:40,979
sort of an operational defense

38
00:01:40,979 --> 00:01:42,659
perspective or just from a an

39
00:01:42,659 --> 00:01:44,939
Institutional risk perspective right so

40
00:01:44,939 --> 00:01:48,180
in the context of of a database disks

41
00:01:48,180 --> 00:01:50,220
rarely rest right once you mount a

42
00:01:50,220 --> 00:01:51,420
database and it's up and it's an

43
00:01:51,420 --> 00:01:53,340
operational workload it's working hard

44
00:01:53,340 --> 00:01:55,200
it's talking it's got caches it's got

45
00:01:55,200 --> 00:01:57,000
buffers it's you know it's it's really

46
00:01:57,000 --> 00:02:00,659
active so storage at rest provides

47
00:02:00,659 --> 00:02:03,720
important control right and so things we

48
00:02:03,720 --> 00:02:05,579
think about are snapshots and backups

49
00:02:05,579 --> 00:02:08,459
and so forth but if a database is up and

50
00:02:08,459 --> 00:02:10,800
running it's not resting and so storage

51
00:02:10,800 --> 00:02:13,200
at rest isn't helping you much from most

52
00:02:13,200 --> 00:02:15,780
kind of common uh you know active

53
00:02:15,780 --> 00:02:18,260
attacks

54
00:02:18,420 --> 00:02:21,660
so when we talk to users a lot of times

55
00:02:21,660 --> 00:02:23,940
we see it's particularly veterans kind

56
00:02:23,940 --> 00:02:25,080
of in the

57
00:02:25,080 --> 00:02:27,480
um you know in the I.T space sometimes I

58
00:02:27,480 --> 00:02:29,160
get these confused looks like this is so

59
00:02:29,160 --> 00:02:30,720
problem right

60
00:02:30,720 --> 00:02:33,060
um you know because X or Y databases had

61
00:02:33,060 --> 00:02:34,379
transparent encryption for over a decade

62
00:02:34,379 --> 00:02:35,640
it's great because you just turn it on

63
00:02:35,640 --> 00:02:37,200
and the developers don't have to change

64
00:02:37,200 --> 00:02:39,120
what they're doing right they just write

65
00:02:39,120 --> 00:02:40,680
their code and their queries and things

66
00:02:40,680 --> 00:02:42,660
just work that's right absolutely it's

67
00:02:42,660 --> 00:02:43,860
transparent they don't even think about

68
00:02:43,860 --> 00:02:45,360
it and the reason it's transparent is

69
00:02:45,360 --> 00:02:46,620
because the server is holding the keys

70
00:02:46,620 --> 00:02:47,900
the server is holding clear text

71
00:02:47,900 --> 00:02:50,459
sometimes there's some uh you know

72
00:02:50,459 --> 00:02:52,500
Cirque du Soleil level gymnastics in

73
00:02:52,500 --> 00:02:53,819
terms of how they get that key but the

74
00:02:53,819 --> 00:02:56,060
point is that somewhere on the database

75
00:02:56,060 --> 00:02:58,200
the sensitive or confidential

76
00:02:58,200 --> 00:03:00,560
information is in clear text right

77
00:03:00,560 --> 00:03:02,940
sometimes people discuss in the context

78
00:03:02,940 --> 00:03:04,560
of secure Hardware enclaves Hardware

79
00:03:04,560 --> 00:03:06,540
enclaves are terrific and they provide

80
00:03:06,540 --> 00:03:08,580
uh you know some really important

81
00:03:08,580 --> 00:03:10,560
controls

82
00:03:10,560 --> 00:03:13,860
in the context of say uh you know clouds

83
00:03:13,860 --> 00:03:17,159
or a cloud database it's less clear

84
00:03:17,159 --> 00:03:20,220
um certainly a lot of cloud providers

85
00:03:20,220 --> 00:03:22,739
have been sort of jumping on uh the

86
00:03:22,739 --> 00:03:25,459
Intel sgx the AMD

87
00:03:25,459 --> 00:03:29,280
SUV the equivalent in the Amazon Nitro

88
00:03:29,280 --> 00:03:32,700
world and that has uh you know has some

89
00:03:32,700 --> 00:03:34,319
nice benefits it actually makes more

90
00:03:34,319 --> 00:03:36,420
sense from the application side right if

91
00:03:36,420 --> 00:03:37,980
you are dealing with keys or sensitive

92
00:03:37,980 --> 00:03:42,780
data it's not so clear though what is

93
00:03:42,780 --> 00:03:44,159
providing you when you run an entire

94
00:03:44,159 --> 00:03:47,340
database inside an enclave and I didn't

95
00:03:47,340 --> 00:03:48,599
even know this existed actually until

96
00:03:48,599 --> 00:03:50,940
about a year ago I assumed from kind of

97
00:03:50,940 --> 00:03:52,799
earlier exposure to this these stress

98
00:03:52,799 --> 00:03:54,360
and enclaves were really small I'm just

99
00:03:54,360 --> 00:03:56,760
you know you know a few Megs or a few

100
00:03:56,760 --> 00:03:58,080
hundred Megs that's not true anymore

101
00:03:58,080 --> 00:04:00,299
these are these are now multi-gigabyte

102
00:04:00,299 --> 00:04:01,940
uh you know

103
00:04:01,940 --> 00:04:06,080
memory spaces active spaces

104
00:04:06,080 --> 00:04:07,760
but

105
00:04:07,760 --> 00:04:11,340
there's a there's a problem because if

106
00:04:11,340 --> 00:04:13,860
it's running on the server and it's

107
00:04:13,860 --> 00:04:16,019
outsourced there's a there's going to be

108
00:04:16,019 --> 00:04:17,880
a question in terms of who has access to

109
00:04:17,880 --> 00:04:19,798
that right and so are some of these

110
00:04:19,798 --> 00:04:21,238
things

111
00:04:21,238 --> 00:04:23,580
um sort of hand wavy are they Pinky

112
00:04:23,580 --> 00:04:25,380
Promise as a service or are they really

113
00:04:25,380 --> 00:04:26,580
getting to kind of first principles

114
00:04:26,580 --> 00:04:28,560
right and I think part of this actually

115
00:04:28,560 --> 00:04:30,600
is a shared lexicon issue right when

116
00:04:30,600 --> 00:04:33,180
cios and developers and crypto people

117
00:04:33,180 --> 00:04:35,340
talk about encrypted search or encrypted

118
00:04:35,340 --> 00:04:36,840
databases a lot of times they mean

119
00:04:36,840 --> 00:04:39,180
something completely different right

120
00:04:39,180 --> 00:04:40,560
um oops sorry

121
00:04:40,560 --> 00:04:44,040
um when I say encrypted search for this

122
00:04:44,040 --> 00:04:46,139
for our purpose so here I'm talking to

123
00:04:46,139 --> 00:04:47,280
the way it's used by cryptographers

124
00:04:47,280 --> 00:04:49,440
right so this is end-to-end data that

125
00:04:49,440 --> 00:04:52,259
can be privately queried right queries

126
00:04:52,259 --> 00:04:54,120
can be performed against a database

127
00:04:54,120 --> 00:04:56,100
server holding crypto database that does

128
00:04:56,100 --> 00:04:58,380
not have keys does not have access to

129
00:04:58,380 --> 00:04:59,580
the clear text and that's the crucial

130
00:04:59,580 --> 00:05:01,800
distinction

131
00:05:01,800 --> 00:05:05,580
so we have to when we're developing

132
00:05:05,580 --> 00:05:09,600
security models and architectures really

133
00:05:09,600 --> 00:05:11,759
think through that trust dilemma because

134
00:05:11,759 --> 00:05:13,320
it is right

135
00:05:13,320 --> 00:05:16,139
um we have to think about authorized

136
00:05:16,139 --> 00:05:17,940
operators right uh privileged

137
00:05:17,940 --> 00:05:21,120
server-side users dbas now obviously

138
00:05:21,120 --> 00:05:24,240
dbas need to be able to uh you know back

139
00:05:24,240 --> 00:05:26,940
up systems and uh you know run patches

140
00:05:26,940 --> 00:05:29,220
and things like that but do dbas by

141
00:05:29,220 --> 00:05:31,139
virtue of their privilege

142
00:05:31,139 --> 00:05:33,840
in say an HR database do they need to

143
00:05:33,840 --> 00:05:35,100
see people's

144
00:05:35,100 --> 00:05:36,720
individual Social Security numbers so

145
00:05:36,720 --> 00:05:38,699
their their payroll routing numbers or

146
00:05:38,699 --> 00:05:40,139
things like this a lot of times the

147
00:05:40,139 --> 00:05:41,400
answer is no

148
00:05:41,400 --> 00:05:43,320
um and so the problem is a lot of

149
00:05:43,320 --> 00:05:44,699
systems don't give you an option it's

150
00:05:44,699 --> 00:05:46,800
either you know sort of God level access

151
00:05:46,800 --> 00:05:49,979
or uh or not uh same with system ends

152
00:05:49,979 --> 00:05:51,960
right on the on the Linux or Windows

153
00:05:51,960 --> 00:05:54,360
side and how about custodians backups

154
00:05:54,360 --> 00:05:57,000
right now that's a case where

155
00:05:57,000 --> 00:05:59,400
um you know encryption at rest actually

156
00:05:59,400 --> 00:06:01,800
makes a lot of sense right if you've got

157
00:06:01,800 --> 00:06:04,320
um snapshots in in the you know the

158
00:06:04,320 --> 00:06:06,539
cloud space for storage or things like

159
00:06:06,539 --> 00:06:09,740
that that may make sense

160
00:06:10,800 --> 00:06:12,680
so

161
00:06:12,680 --> 00:06:15,960
it sort of related to this one of the

162
00:06:15,960 --> 00:06:18,720
things I want to I want to raise is what

163
00:06:18,720 --> 00:06:20,280
are the true security guarantees in the

164
00:06:20,280 --> 00:06:21,720
end encryption so I think a lot of

165
00:06:21,720 --> 00:06:23,280
people in this room think that you've

166
00:06:23,280 --> 00:06:24,780
got a good mental model for but I really

167
00:06:24,780 --> 00:06:27,300
want to push hard on that because

168
00:06:27,300 --> 00:06:30,240
I think most of us do in a sense of like

169
00:06:30,240 --> 00:06:31,979
secure messaging apps like signal and

170
00:06:31,979 --> 00:06:34,259
WhatsApp and so forth

171
00:06:34,259 --> 00:06:35,759
um but

172
00:06:35,759 --> 00:06:38,460
sometimes not right Indian encryption

173
00:06:38,460 --> 00:06:39,840
doesn't help if the device has been

174
00:06:39,840 --> 00:06:43,460
compromised and then does it help if the

175
00:06:43,460 --> 00:06:45,840
application's been compromised because

176
00:06:45,840 --> 00:06:48,240
the application is the end in the

177
00:06:48,240 --> 00:06:50,160
context of the database right

178
00:06:50,160 --> 00:06:52,380
so what's a threat model how do we think

179
00:06:52,380 --> 00:06:53,940
about actual guarantees what are the

180
00:06:53,940 --> 00:06:55,380
data flow who holds the keys these are

181
00:06:55,380 --> 00:06:58,500
these are fundamental questions

182
00:06:58,500 --> 00:07:00,360
and I remind you we should probably post

183
00:07:00,360 --> 00:07:01,860
this at least in one deck in every

184
00:07:01,860 --> 00:07:04,800
Enigma presentation

185
00:07:04,800 --> 00:07:06,560
because

186
00:07:06,560 --> 00:07:09,479
there are

187
00:07:09,479 --> 00:07:11,819
critical distinctions between

188
00:07:11,819 --> 00:07:15,539
levels of trust and uh you know service

189
00:07:15,539 --> 00:07:16,860
providers and people with different

190
00:07:16,860 --> 00:07:18,780
Privileges and I really want to kind of

191
00:07:18,780 --> 00:07:20,759
underscore that point

192
00:07:20,759 --> 00:07:22,380
but again in the context of a database

193
00:07:22,380 --> 00:07:24,180
what can an attacker discover what

194
00:07:24,180 --> 00:07:25,800
information does the database leak what

195
00:07:25,800 --> 00:07:27,180
information

196
00:07:27,180 --> 00:07:27,840
um

197
00:07:27,840 --> 00:07:29,639
if are the leaks exploitable right

198
00:07:29,639 --> 00:07:31,500
because there are some models in the

199
00:07:31,500 --> 00:07:33,419
academic world where

200
00:07:33,419 --> 00:07:35,460
um there's really

201
00:07:35,460 --> 00:07:38,160
virtually no leakage at all the problem

202
00:07:38,160 --> 00:07:41,039
is your keys are now gigabyte sized and

203
00:07:41,039 --> 00:07:43,199
it takes sometimes minutes or hours to

204
00:07:43,199 --> 00:07:46,139
run a query and that's maybe not

205
00:07:46,139 --> 00:07:47,940
practical and you know an operational

206
00:07:47,940 --> 00:07:49,860
workload more importantly can we

207
00:07:49,860 --> 00:07:51,360
describe in all these different sort of

208
00:07:51,360 --> 00:07:52,800
techniques that people have tried over

209
00:07:52,800 --> 00:07:54,900
the years can we describe leakage

210
00:07:54,900 --> 00:07:56,280
formally

211
00:07:56,280 --> 00:07:58,680
um and it looks like we can there's some

212
00:07:58,680 --> 00:08:01,520
really interesting initiatives

213
00:08:01,520 --> 00:08:03,960
originally started out of the brown

214
00:08:03,960 --> 00:08:05,400
University's encrypted systems lab

215
00:08:05,400 --> 00:08:08,840
looking specifically at this looking at

216
00:08:08,840 --> 00:08:12,139
how we can define an approach as a field

217
00:08:12,139 --> 00:08:15,620
the sort of an empirical way of of

218
00:08:15,620 --> 00:08:18,900
formally defining leakage

219
00:08:18,900 --> 00:08:21,419
all right so just a few preliminaries

220
00:08:21,419 --> 00:08:23,099
before we get started

221
00:08:23,099 --> 00:08:23,940
um

222
00:08:23,940 --> 00:08:27,120
sort of uh borrowing from Thomas batasic

223
00:08:27,120 --> 00:08:29,220
you probably shouldn't freelance uh

224
00:08:29,220 --> 00:08:31,379
cryptography right which is to say if

225
00:08:31,379 --> 00:08:32,760
you're if you don't have domain

226
00:08:32,760 --> 00:08:33,958
expertise

227
00:08:33,958 --> 00:08:35,399
um careful what you're walking into

228
00:08:35,399 --> 00:08:37,260
because it could kill you

229
00:08:37,260 --> 00:08:39,059
all right security model should be as

230
00:08:39,059 --> 00:08:40,080
rigorous as possible security

231
00:08:40,080 --> 00:08:43,080
definitions should be as precise as

232
00:08:43,080 --> 00:08:45,380
possible

233
00:08:45,380 --> 00:08:48,899
this slide I love for so many different

234
00:08:48,899 --> 00:08:51,300
reasons because I've looked at a lot of

235
00:08:51,300 --> 00:08:52,680
security models where there is sort of

236
00:08:52,680 --> 00:08:54,720
an implicit step about and then a

237
00:08:54,720 --> 00:08:57,000
miracle happens

238
00:08:57,000 --> 00:08:59,339
uh do it yourself and fail fast makes a

239
00:08:59,339 --> 00:09:00,540
lot of sense in a lot of context

240
00:09:00,540 --> 00:09:03,120
probably doesn't make so much sense in a

241
00:09:03,120 --> 00:09:06,120
crypto context

242
00:09:06,120 --> 00:09:09,240
developer usability right

243
00:09:09,240 --> 00:09:10,620
um there are when I first started

244
00:09:10,620 --> 00:09:12,360
looking at this sort of carefully about

245
00:09:12,360 --> 00:09:15,360
five years ago there's like hundreds of

246
00:09:15,360 --> 00:09:17,459
different options on different GitHub

247
00:09:17,459 --> 00:09:21,440
repos and sort of academic

248
00:09:21,440 --> 00:09:25,260
like proof of Concepts and and you know

249
00:09:25,260 --> 00:09:27,560
these sorts of things but a lot of them

250
00:09:27,560 --> 00:09:30,360
assume that you can do things like well

251
00:09:30,360 --> 00:09:31,920
let's develop a brand new database from

252
00:09:31,920 --> 00:09:34,620
scratch right let's figure out all the

253
00:09:34,620 --> 00:09:38,339
hard problems of say replication and you

254
00:09:38,339 --> 00:09:40,620
know sharding and scaling and you know

255
00:09:40,620 --> 00:09:41,880
and some other things that I'll get to

256
00:09:41,880 --> 00:09:43,860
in just a minute and not really taking

257
00:09:43,860 --> 00:09:45,839
into account what I like to sort of

258
00:09:45,839 --> 00:09:47,580
refer to as a mediocre python developer

259
00:09:47,580 --> 00:09:50,760
right I've been given in my day job a

260
00:09:50,760 --> 00:09:53,160
responsibility of you've got certain

261
00:09:53,160 --> 00:09:55,680
data it's sensitive figure out a way to

262
00:09:55,680 --> 00:09:58,019
make it you know protect it figure out a

263
00:09:58,019 --> 00:09:59,940
way to keep that confidential

264
00:09:59,940 --> 00:10:03,180
and then of course there's lots of lots

265
00:10:03,180 --> 00:10:06,420
of thoughts on on the orange side

266
00:10:06,420 --> 00:10:08,640
um so some things about distributed

267
00:10:08,640 --> 00:10:10,320
Cloud databases right and we don't

268
00:10:10,320 --> 00:10:12,120
necessarily talk about them a lot and if

269
00:10:12,120 --> 00:10:13,740
you're not sort of in the trenches you

270
00:10:13,740 --> 00:10:16,019
may not see this as much but it it's

271
00:10:16,019 --> 00:10:17,880
worth sort of underscoring right things

272
00:10:17,880 --> 00:10:20,580
break they break a lot

273
00:10:20,580 --> 00:10:22,920
um networks get flaky the connection

274
00:10:22,920 --> 00:10:25,560
between a web app or web service and a

275
00:10:25,560 --> 00:10:28,260
database or a database service can

276
00:10:28,260 --> 00:10:30,360
sometimes be unreliable replication is

277
00:10:30,360 --> 00:10:32,820
really hard because it's one thing to

278
00:10:32,820 --> 00:10:36,660
have a developer laptop and one small

279
00:10:36,660 --> 00:10:38,880
database running a few you know thousand

280
00:10:38,880 --> 00:10:40,500
or a hundred thousand records it's

281
00:10:40,500 --> 00:10:42,120
another when

282
00:10:42,120 --> 00:10:44,459
as is the case for some of our users

283
00:10:44,459 --> 00:10:46,620
you're putting tens of billions of

284
00:10:46,620 --> 00:10:48,180
dollars of transactions through a system

285
00:10:48,180 --> 00:10:50,579
right there are there are certain

286
00:10:50,579 --> 00:10:54,120
classes of of data and and system

287
00:10:54,120 --> 00:10:57,180
protections that are just in a different

288
00:10:57,180 --> 00:11:00,360
you know on just a different uh plane of

289
00:11:00,360 --> 00:11:03,240
existence right we have uh some

290
00:11:03,240 --> 00:11:05,279
customers that are running uh entire

291
00:11:05,279 --> 00:11:07,920
National pension systems so by that I

292
00:11:07,920 --> 00:11:11,519
mean every infant uh Mom Dad working

293
00:11:11,519 --> 00:11:14,339
adult pensioner in their country in the

294
00:11:14,339 --> 00:11:16,680
entire country their data are stored uh

295
00:11:16,680 --> 00:11:19,140
in these databases and this is you know

296
00:11:19,140 --> 00:11:21,180
financial information this is

297
00:11:21,180 --> 00:11:22,680
um you know social services this is

298
00:11:22,680 --> 00:11:24,720
pension data these things really matter

299
00:11:24,720 --> 00:11:26,760
all right

300
00:11:26,760 --> 00:11:29,519
um partitions are a problem uh sometimes

301
00:11:29,519 --> 00:11:31,800
things just die and worse for developers

302
00:11:31,800 --> 00:11:34,560
is the sort of difficult to reproduce

303
00:11:34,560 --> 00:11:36,959
bug right why do things sometimes kind

304
00:11:36,959 --> 00:11:39,120
of only semi-die

305
00:11:39,120 --> 00:11:40,800
so let's take a step back for a second

306
00:11:40,800 --> 00:11:44,040
let me be you know the one to ask a

307
00:11:44,040 --> 00:11:46,800
really basic stupid question why do we

308
00:11:46,800 --> 00:11:49,079
use a database right well some of the

309
00:11:49,079 --> 00:11:50,279
useful things that database does

310
00:11:50,279 --> 00:11:53,100
searching

311
00:11:53,100 --> 00:11:54,779
seems kind of obvious but it's important

312
00:11:54,779 --> 00:11:57,060
to say because a lot of the encrypted

313
00:11:57,060 --> 00:11:59,760
search literature is looking at a say

314
00:11:59,760 --> 00:12:03,120
PDF or Word file that's been encrypted

315
00:12:03,120 --> 00:12:05,519
and it's just like you know the

316
00:12:05,519 --> 00:12:08,100
thousands of these static documents and

317
00:12:08,100 --> 00:12:09,480
there's a keyword search or something

318
00:12:09,480 --> 00:12:11,399
and that's useful and there's tons of

319
00:12:11,399 --> 00:12:13,740
use cases for that but it has nothing to

320
00:12:13,740 --> 00:12:16,019
do with an operational uh you know

321
00:12:16,019 --> 00:12:17,940
database

322
00:12:17,940 --> 00:12:20,640
and about concurrency because if you're

323
00:12:20,640 --> 00:12:23,579
one user talking to one Standalone small

324
00:12:23,579 --> 00:12:26,279
uh instance that's fine

325
00:12:26,279 --> 00:12:28,200
but what happens when you have thousands

326
00:12:28,200 --> 00:12:30,480
and thousands of current users what

327
00:12:30,480 --> 00:12:32,519
happens when you have not just one

328
00:12:32,519 --> 00:12:34,380
client application talking to a database

329
00:12:34,380 --> 00:12:35,820
but

330
00:12:35,820 --> 00:12:37,920
hundreds of thousands of concurrent

331
00:12:37,920 --> 00:12:40,440
mobile apps right tons of Legacy

332
00:12:40,440 --> 00:12:41,640
integration things like middleware

333
00:12:41,640 --> 00:12:44,220
things like uh you know these these huge

334
00:12:44,220 --> 00:12:47,040
HR or fulfillment systems

335
00:12:47,040 --> 00:12:48,839
the academic leadership doesn't speak

336
00:12:48,839 --> 00:12:51,360
much to that at all

337
00:12:51,360 --> 00:12:52,920
so one of the kinds of churches we're

338
00:12:52,920 --> 00:12:55,680
talking about well this is a basic one

339
00:12:55,680 --> 00:12:57,660
let's say I want a date of birth on

340
00:12:57,660 --> 00:12:59,880
encrypted data and I've got a birth date

341
00:12:59,880 --> 00:13:02,639
this is

342
00:13:02,639 --> 00:13:04,200
um there are a lot of techniques to do

343
00:13:04,200 --> 00:13:06,480
this but but this sort of exists in in

344
00:13:06,480 --> 00:13:08,760
different places in the world but how

345
00:13:08,760 --> 00:13:11,339
about if I want to search

346
00:13:11,339 --> 00:13:13,440
expressively what if I want to search

347
00:13:13,440 --> 00:13:17,100
for like everyone that's say over 25 or

348
00:13:17,100 --> 00:13:18,720
um anyone whose last name I'm a customer

349
00:13:18,720 --> 00:13:21,120
service person uh and someone's got a

350
00:13:21,120 --> 00:13:22,860
long last name and I want to just type

351
00:13:22,860 --> 00:13:24,600
the first few letters of the last name

352
00:13:24,600 --> 00:13:27,600
and have it sort of fill out

353
00:13:27,600 --> 00:13:29,820
how about if I want records in a

354
00:13:29,820 --> 00:13:31,380
healthcare context of a certain security

355
00:13:31,380 --> 00:13:33,360
number that a social security number

356
00:13:33,360 --> 00:13:34,980
that ends in a certain number

357
00:13:34,980 --> 00:13:37,260
credit cards that's another great one

358
00:13:37,260 --> 00:13:38,279
that we see all the time customer

359
00:13:38,279 --> 00:13:39,959
service agents may not need to have

360
00:13:39,959 --> 00:13:42,839
access to the entire record right how

361
00:13:42,839 --> 00:13:44,579
about full text search

362
00:13:44,579 --> 00:13:46,320
how about if I could search all these

363
00:13:46,320 --> 00:13:48,380
like you know hundreds of millions of

364
00:13:48,380 --> 00:13:50,940
Records to find things that had certain

365
00:13:50,940 --> 00:13:53,100
keywords that would be really useful

366
00:13:53,100 --> 00:13:56,399
that doesn't really exist in a practical

367
00:13:56,399 --> 00:13:59,399
sense in any database right now

368
00:13:59,399 --> 00:14:01,139
what types of data are we talking about

369
00:14:01,139 --> 00:14:03,420
right so this is the data that users

370
00:14:03,420 --> 00:14:06,839
care about strings dates numbers Banks

371
00:14:06,839 --> 00:14:08,459
really care about decimal data types

372
00:14:08,459 --> 00:14:10,920
they really care about precise Financial

373
00:14:10,920 --> 00:14:15,360
values objects and documents like Json

374
00:14:15,360 --> 00:14:16,980
so

375
00:14:16,980 --> 00:14:20,000
from my view as somebody that works with

376
00:14:20,000 --> 00:14:22,740
so many different kinds of use cases and

377
00:14:22,740 --> 00:14:25,700
institutional customers to startups

378
00:14:25,700 --> 00:14:27,839
just to sort of frame the conversation

379
00:14:27,839 --> 00:14:29,579
give you a sense of where where I'm

380
00:14:29,579 --> 00:14:33,180
coming from with with so we run a

381
00:14:33,180 --> 00:14:34,680
globally managed distributed database

382
00:14:34,680 --> 00:14:36,540
service about two and a half million

383
00:14:36,540 --> 00:14:38,880
active clusters around the world and a

384
00:14:38,880 --> 00:14:41,279
cluster means a primary server and

385
00:14:41,279 --> 00:14:43,680
replica sets that that read that data

386
00:14:43,680 --> 00:14:47,399
and if uh the primary server dies the

387
00:14:47,399 --> 00:14:50,040
replica sets uh yes or take over

388
00:14:50,040 --> 00:14:51,600
we're operating in 200 data centers

389
00:14:51,600 --> 00:14:53,339
around the world eight different Cloud

390
00:14:53,339 --> 00:14:55,620
providers everything from like tiny

391
00:14:55,620 --> 00:14:57,660
little developer sandbox instances of

392
00:14:57,660 --> 00:15:00,060
like Hello World to

393
00:15:00,060 --> 00:15:03,420
uh you know petabyte scale where

394
00:15:03,420 --> 00:15:06,420
literally these same database has nodes

395
00:15:06,420 --> 00:15:09,420
running in gcp Azure Amazon and maybe

396
00:15:09,420 --> 00:15:12,360
on-prem really complicated multi-hundred

397
00:15:12,360 --> 00:15:15,480
sharded clusters

398
00:15:15,480 --> 00:15:17,579
we generate about 100 million cluster

399
00:15:17,579 --> 00:15:19,139
nodes certificates

400
00:15:19,139 --> 00:15:23,160
um to date uh actually sorry I take that

401
00:15:23,160 --> 00:15:24,779
back that's about annually we're doing

402
00:15:24,779 --> 00:15:29,060
that now so really massive volume

403
00:15:30,620 --> 00:15:32,940
one sort of thing I should say what's

404
00:15:32,940 --> 00:15:34,980
mongodb it's an open source nosql

405
00:15:34,980 --> 00:15:37,260
database probably not the kinds of

406
00:15:37,260 --> 00:15:39,139
documents that I think a lot of people

407
00:15:39,139 --> 00:15:41,820
you know sort of comes to mind these are

408
00:15:41,820 --> 00:15:43,920
native Json documents and including

409
00:15:43,920 --> 00:15:46,680
complex sub-documents it's distributed

410
00:15:46,680 --> 00:15:48,500
architecture by Design

411
00:15:48,500 --> 00:15:50,880
geolocations around the world really

412
00:15:50,880 --> 00:15:52,860
vibrant developer Community you know

413
00:15:52,860 --> 00:15:56,120
over a quarter billion downloads to date

414
00:15:56,120 --> 00:16:00,120
lots of students lots of Developers

415
00:16:00,120 --> 00:16:02,279
native Json documents you're thinking

416
00:16:02,279 --> 00:16:03,480
yourselves including complex

417
00:16:03,480 --> 00:16:05,760
sub-documents what is a Json document

418
00:16:05,760 --> 00:16:08,220
that's a Json document

419
00:16:08,220 --> 00:16:11,459
this is fake data obviously although I

420
00:16:11,459 --> 00:16:13,019
think that's the actual phone number for

421
00:16:13,019 --> 00:16:14,699
the equivalent of the White House in

422
00:16:14,699 --> 00:16:17,940
Germany and that card number is right

423
00:16:17,940 --> 00:16:20,399
off stripe as one of their test card

424
00:16:20,399 --> 00:16:23,699
numbers and I forget how it's pronounced

425
00:16:23,699 --> 00:16:25,500
in German but the equivalent of the

426
00:16:25,500 --> 00:16:27,300
social security number is that's what's

427
00:16:27,300 --> 00:16:30,420
printed on model application so no no

428
00:16:30,420 --> 00:16:33,800
confidential data leaking here

429
00:16:34,279 --> 00:16:37,980
so mostly I want to talk about uh sort

430
00:16:37,980 --> 00:16:40,620
of a a journey or sort of share a story

431
00:16:40,620 --> 00:16:43,459
with you right

432
00:16:44,279 --> 00:16:46,380
thinking about research models databases

433
00:16:46,380 --> 00:16:48,000
thinking about prototypes some of the

434
00:16:48,000 --> 00:16:49,500
things that we've gone through to sort

435
00:16:49,500 --> 00:16:51,480
of get to uh an interesting

436
00:16:51,480 --> 00:16:53,639
implementation

437
00:16:53,639 --> 00:16:55,139
uh some of the trade-offs we've Made

438
00:16:55,139 --> 00:16:58,079
Real World performance Etc and crucially

439
00:16:58,079 --> 00:16:59,399
here for this audience things that we

440
00:16:59,399 --> 00:17:01,199
got wrong and some lessons that we

441
00:17:01,199 --> 00:17:03,140
learned

442
00:17:03,140 --> 00:17:05,339
uh lots of different approaches to the

443
00:17:05,339 --> 00:17:08,480
academic literature around uh uh

444
00:17:08,480 --> 00:17:11,220
encrypted search tokenization property

445
00:17:11,220 --> 00:17:13,260
preserving encryption Etc

446
00:17:13,260 --> 00:17:13,859
um

447
00:17:13,859 --> 00:17:15,959
but are these actually suitable to a

448
00:17:15,959 --> 00:17:18,240
generalized purpose database that's a

449
00:17:18,240 --> 00:17:20,459
key question

450
00:17:20,459 --> 00:17:21,900
I really encourage you if you don't know

451
00:17:21,900 --> 00:17:23,640
this history I've got a couple of links

452
00:17:23,640 --> 00:17:26,400
in the next slide to read up on your

453
00:17:26,400 --> 00:17:29,340
kubal Kennedy and sort of the golden era

454
00:17:29,340 --> 00:17:31,740
of Arab analysis on the left is an

455
00:17:31,740 --> 00:17:33,419
original manuscript on the right is sort

456
00:17:33,419 --> 00:17:36,200
of a translation of his of one of his

457
00:17:36,200 --> 00:17:38,580
crypto analytic treatises that he did

458
00:17:38,580 --> 00:17:41,280
they sort of considered one of the you

459
00:17:41,280 --> 00:17:45,000
know uh top you know like pioneer sort

460
00:17:45,000 --> 00:17:47,940
of fathers of of uh crypto analysis and

461
00:17:47,940 --> 00:17:50,460
he was a brilliant person the point of

462
00:17:50,460 --> 00:17:52,880
that is that one of his early

463
00:17:52,880 --> 00:17:56,220
works on letter frequencies still works

464
00:17:56,220 --> 00:17:58,620
today on a lot of encrypted systems so

465
00:17:58,620 --> 00:18:00,299
I've got some links there below and I'm

466
00:18:00,299 --> 00:18:02,580
happy to add some more in the slides

467
00:18:02,580 --> 00:18:03,840
that we share online but anyway

468
00:18:03,840 --> 00:18:05,940
fantastic story

469
00:18:05,940 --> 00:18:09,299
so let's Jump Ahead about 1100 years or

470
00:18:09,299 --> 00:18:11,480
so

471
00:18:12,120 --> 00:18:14,700
working with a lot of different users a

472
00:18:14,700 --> 00:18:15,960
lot of different customers a lot of

473
00:18:15,960 --> 00:18:18,539
different complex use cases I got this

474
00:18:18,539 --> 00:18:21,120
question right

475
00:18:21,120 --> 00:18:22,860
um how can we be

476
00:18:22,860 --> 00:18:24,840
safer how can we keep data more

477
00:18:24,840 --> 00:18:26,520
confidential we're not looking for a

478
00:18:26,520 --> 00:18:27,900
silver bullet we're not looking for some

479
00:18:27,900 --> 00:18:30,720
fantasy yet we want ways to be able to

480
00:18:30,720 --> 00:18:32,700
you know keep our data more safe but

481
00:18:32,700 --> 00:18:34,740
still be able to use it

482
00:18:34,740 --> 00:18:39,360
so I took a leap of faith and reached

483
00:18:39,360 --> 00:18:41,340
out on that site which shall not be

484
00:18:41,340 --> 00:18:44,640
named to Sunny Kamara and this is what I

485
00:18:44,640 --> 00:18:48,860
sent this is uh April 2018. a year later

486
00:18:48,860 --> 00:18:51,600
we launched sort of our first generation

487
00:18:51,600 --> 00:18:52,980
of field level encryptions and

488
00:18:52,980 --> 00:18:56,100
end-to-end type in about six months

489
00:18:56,100 --> 00:18:58,440
after that it was in uh in general

490
00:18:58,440 --> 00:19:00,120
availability

491
00:19:00,120 --> 00:19:01,860
the next spring and we had a great

492
00:19:01,860 --> 00:19:03,720
collaboration he and his his team in the

493
00:19:03,720 --> 00:19:06,120
criticisms Lab at Brown University was a

494
00:19:06,120 --> 00:19:07,500
terrific collaboration

495
00:19:07,500 --> 00:19:09,419
he came and visited and we had a

496
00:19:09,419 --> 00:19:11,580
conversation over coffee and that sort

497
00:19:11,580 --> 00:19:14,280
of changed my perspective on so many

498
00:19:14,280 --> 00:19:16,200
things that are possible

499
00:19:16,200 --> 00:19:20,280
partly because the uh the description

500
00:19:20,280 --> 00:19:23,820
the the the way that a lot of the

501
00:19:23,820 --> 00:19:24,900
academic literature was was

502
00:19:24,900 --> 00:19:26,520
characterized and some of their own work

503
00:19:26,520 --> 00:19:28,260
was

504
00:19:28,260 --> 00:19:30,740
we have this really cool way to do

505
00:19:30,740 --> 00:19:33,600
expressive searches Rich searches on

506
00:19:33,600 --> 00:19:35,820
completely encrypted data but step one

507
00:19:35,820 --> 00:19:38,640
you have one laptop and one database

508
00:19:38,640 --> 00:19:43,200
step two you have a cache that runs on

509
00:19:43,200 --> 00:19:44,700
the application side so developers need

510
00:19:44,700 --> 00:19:45,960
to figure out how to run and distributed

511
00:19:45,960 --> 00:19:47,760
cache and kind of keep that to

512
00:19:47,760 --> 00:19:49,919
themselves and manage that and

513
00:19:49,919 --> 00:19:51,480
distribute it and make sure it doesn't

514
00:19:51,480 --> 00:19:53,340
failover in things and then you need to

515
00:19:53,340 --> 00:19:55,740
kind of modify a lot of how the system

516
00:19:55,740 --> 00:19:57,179
works

517
00:19:57,179 --> 00:19:58,860
what he shared with me was a

518
00:19:58,860 --> 00:20:00,539
breakthrough that the lab had done where

519
00:20:00,539 --> 00:20:01,919
you don't have to do that you can

520
00:20:01,919 --> 00:20:04,020
actually emulate that state in a

521
00:20:04,020 --> 00:20:05,820
database in a blinded way

522
00:20:05,820 --> 00:20:08,160
they hadn't published yet it was sort of

523
00:20:08,160 --> 00:20:10,200
you know kind of breaking and it was

524
00:20:10,200 --> 00:20:11,580
just mind-blowing to me that that was

525
00:20:11,580 --> 00:20:14,940
even possible right and so that began a

526
00:20:14,940 --> 00:20:16,919
long journey around this thing that we

527
00:20:16,919 --> 00:20:19,260
now call queryable encryption

528
00:20:19,260 --> 00:20:20,220
so what are some of the design

529
00:20:20,220 --> 00:20:22,380
requirements uh queries that are

530
00:20:22,380 --> 00:20:24,539
actually useful right Legacy friendly

531
00:20:24,539 --> 00:20:26,760
and by Legacy I mean things that shipped

532
00:20:26,760 --> 00:20:28,320
last year or that are still in

533
00:20:28,320 --> 00:20:30,720
development right I don't mean Legacy

534
00:20:30,720 --> 00:20:33,120
you know mainframes multiple clients

535
00:20:33,120 --> 00:20:36,120
concurrently stateless it has to handle

536
00:20:36,120 --> 00:20:37,380
the flakiness that we talked about

537
00:20:37,380 --> 00:20:39,419
before and developers have a hard enough

538
00:20:39,419 --> 00:20:42,600
problem with basic system security

539
00:20:42,600 --> 00:20:44,880
without having to deal with uh you know

540
00:20:44,880 --> 00:20:46,620
client-side caches and distributed

541
00:20:46,620 --> 00:20:48,179
things like that

542
00:20:48,179 --> 00:20:50,100
crucially need to be efficient it has to

543
00:20:50,100 --> 00:20:52,260
be sublinear the difference between a

544
00:20:52,260 --> 00:20:54,240
thousand documents a million 25 100

545
00:20:54,240 --> 00:20:56,220
million documents it should be

546
00:20:56,220 --> 00:20:59,760
sub-linear a lot of the academic work

547
00:20:59,760 --> 00:21:01,620
had been done in a way that's super

548
00:21:01,620 --> 00:21:04,860
linear so works great on 10 records a

549
00:21:04,860 --> 00:21:06,960
hundred a thousand five thousand beyond

550
00:21:06,960 --> 00:21:08,880
that it's painful and so you can throw

551
00:21:08,880 --> 00:21:10,620
cores at it right you can throw more

552
00:21:10,620 --> 00:21:14,100
CPUs but you know it's kind of like

553
00:21:14,100 --> 00:21:16,440
racing the Indy 500 with llamas you're

554
00:21:16,440 --> 00:21:17,760
not you know there's only so much you

555
00:21:17,760 --> 00:21:19,679
can do

556
00:21:19,679 --> 00:21:21,960
high level flow let's say you're a

557
00:21:21,960 --> 00:21:25,200
python developer you have a query on

558
00:21:25,200 --> 00:21:27,480
authenticated client DB billing fine I

559
00:21:27,480 --> 00:21:30,240
need that social security number the the

560
00:21:30,240 --> 00:21:32,640
basic way that we ended up is that the

561
00:21:32,640 --> 00:21:34,620
driver that runs on the the application

562
00:21:34,620 --> 00:21:36,780
side picks that up talks to a key

563
00:21:36,780 --> 00:21:38,700
provider if it's not even cached and

564
00:21:38,700 --> 00:21:40,320
what it sends the database it's a type

565
00:21:40,320 --> 00:21:43,799
of encrypted search tokens they're not

566
00:21:43,799 --> 00:21:45,780
um they're not a one-to-one relationship

567
00:21:45,780 --> 00:21:48,240
with the actual data and the individual

568
00:21:48,240 --> 00:21:50,039
data that are stored in each of the

569
00:21:50,039 --> 00:21:53,340
records are encrypted with randomized

570
00:21:53,340 --> 00:21:55,140
encryption which is to say for this

571
00:21:55,140 --> 00:21:56,400
person's social security number if I've

572
00:21:56,400 --> 00:21:58,440
got three entries in the database each

573
00:21:58,440 --> 00:21:59,700
of those Social Security numbers is

574
00:21:59,700 --> 00:22:01,559
stored differently it's the strongest

575
00:22:01,559 --> 00:22:04,620
form of uh of modern authentic and

576
00:22:04,620 --> 00:22:07,080
encryption that's that's possible

577
00:22:07,080 --> 00:22:09,299
how does it work okay here's the boring

578
00:22:09,299 --> 00:22:12,840
part uh basically pretty standard uh

579
00:22:12,840 --> 00:22:15,240
sort of contemporary

580
00:22:15,240 --> 00:22:17,460
um authenticated encryption here's some

581
00:22:17,460 --> 00:22:19,440
of the the details

582
00:22:19,440 --> 00:22:21,299
there's some derivative keys that are

583
00:22:21,299 --> 00:22:24,780
used uh but these are these are basic

584
00:22:24,780 --> 00:22:27,780
building blocks that uh nist approves

585
00:22:27,780 --> 00:22:30,419
the PCI people approve that are

586
00:22:30,419 --> 00:22:32,400
crucially more important are available

587
00:22:32,400 --> 00:22:34,140
in nearly every operating system in

588
00:22:34,140 --> 00:22:36,260
every language framework Key Management

589
00:22:36,260 --> 00:22:40,020
tons of opinions and thoughts management

590
00:22:40,020 --> 00:22:42,900
people have but all that to say we made

591
00:22:42,900 --> 00:22:45,900
it uh as agnostic as we can right so we

592
00:22:45,900 --> 00:22:47,460
use envelope encryption to protect field

593
00:22:47,460 --> 00:22:49,799
keys if you trust AES to protect your

594
00:22:49,799 --> 00:22:51,539
data you should protect your keys as

595
00:22:51,539 --> 00:22:54,059
well the database can't ever access raw

596
00:22:54,059 --> 00:22:56,039
key material

597
00:22:56,039 --> 00:22:58,380
um and again any of the cloud talk to

598
00:22:58,380 --> 00:23:00,120
Cloud providers if you want to use

599
00:23:00,120 --> 00:23:01,559
Hardware modules that's fine actually

600
00:23:01,559 --> 00:23:03,539
core et cetera these things are crucial

601
00:23:03,539 --> 00:23:06,539
particularly in regulated environments

602
00:23:06,539 --> 00:23:08,460
but here's the key thing here's the

603
00:23:08,460 --> 00:23:10,679
Innovation The Innovation is a new type

604
00:23:10,679 --> 00:23:12,419
of functional search indexes so let's

605
00:23:12,419 --> 00:23:13,919
take that Json document before we

606
00:23:13,919 --> 00:23:16,080
encrypt that with normal uh sort of

607
00:23:16,080 --> 00:23:19,080
standard AES and that's safe in addition

608
00:23:19,080 --> 00:23:22,320
to that we now build encrypted indexes

609
00:23:22,320 --> 00:23:24,240
these are using a technique called

610
00:23:24,240 --> 00:23:27,260
structure encryption client stateless

611
00:23:27,260 --> 00:23:30,000
database mines that maintains minded

612
00:23:30,000 --> 00:23:32,940
State again distributed scheme robust to

613
00:23:32,940 --> 00:23:36,780
failures High contingent Etc

614
00:23:36,780 --> 00:23:38,640
we use a technique called encrypted

615
00:23:38,640 --> 00:23:40,500
multi-maps

616
00:23:40,500 --> 00:23:43,140
just a fancy way of saying an encrypted

617
00:23:43,140 --> 00:23:45,960
dictionary or integrated index here's

618
00:23:45,960 --> 00:23:48,299
some more of the details there

619
00:23:48,299 --> 00:23:50,760
there's a formal security definition

620
00:23:50,760 --> 00:23:53,220
that's in the works we'll be publishing

621
00:23:53,220 --> 00:23:55,440
in the next few months ahead called OST

622
00:23:55,440 --> 00:23:58,080
one that's the the particulars but it

623
00:23:58,080 --> 00:24:00,299
talks about gets and puts and things in

624
00:24:00,299 --> 00:24:03,799
that context and crucially supple linear

625
00:24:03,799 --> 00:24:06,000
response time

626
00:24:06,000 --> 00:24:07,860
about those Json documents so what does

627
00:24:07,860 --> 00:24:08,880
this look like what does it actually

628
00:24:08,880 --> 00:24:11,820
look like to a developer this is a DBA

629
00:24:11,820 --> 00:24:14,580
view in this case I've got Global

630
00:24:14,580 --> 00:24:16,799
cluster admin privilege which to say I'm

631
00:24:16,799 --> 00:24:19,380
God in the database and this is all I

632
00:24:19,380 --> 00:24:20,460
can see

633
00:24:20,460 --> 00:24:22,980
those fields with stars are individually

634
00:24:22,980 --> 00:24:25,260
encrypted right

635
00:24:25,260 --> 00:24:27,299
this is what you see if you've got

636
00:24:27,299 --> 00:24:29,880
access to the end-to-end keys and the

637
00:24:29,880 --> 00:24:31,200
DBA again

638
00:24:31,200 --> 00:24:33,539
won't see that unless they've also been

639
00:24:33,539 --> 00:24:35,700
given the end Keys which kind of defeats

640
00:24:35,700 --> 00:24:37,380
the purpose

641
00:24:37,380 --> 00:24:40,380
so some trade-offs oops sorry uh

642
00:24:40,380 --> 00:24:42,600
preliminary metrics give you a sense of

643
00:24:42,600 --> 00:24:44,940
it maybe two to four x additional

644
00:24:44,940 --> 00:24:46,679
storage costs

645
00:24:46,679 --> 00:24:48,720
um there's some additional details about

646
00:24:48,720 --> 00:24:50,220
the structures and things that we had in

647
00:24:50,220 --> 00:24:52,559
place the actual documents themselves

648
00:24:52,559 --> 00:24:53,820
there's just a minimal amount of

649
00:24:53,820 --> 00:24:57,020
additional storage

650
00:24:58,080 --> 00:25:04,020
fines queries very fast so on 10 20 25

651
00:25:04,020 --> 00:25:06,720
million document data sets these are in

652
00:25:06,720 --> 00:25:08,960
the order of milliseconds

653
00:25:08,960 --> 00:25:11,220
rides are a little more complicated

654
00:25:11,220 --> 00:25:12,840
we're still sort of working through

655
00:25:12,840 --> 00:25:14,760
those looking at parallelization looking

656
00:25:14,760 --> 00:25:17,100
at some other techniques If you're sort

657
00:25:17,100 --> 00:25:20,820
of a 9010 sort of web app or a web

658
00:25:20,820 --> 00:25:22,799
service where the vast majority of what

659
00:25:22,799 --> 00:25:24,059
you're doing is reading and occasionally

660
00:25:24,059 --> 00:25:26,159
you insert your updates it may be a good

661
00:25:26,159 --> 00:25:28,440
fit if you're doing 100 million

662
00:25:28,440 --> 00:25:31,500
documents constantly you know every hour

663
00:25:31,500 --> 00:25:34,260
in in a badge process it may not make

664
00:25:34,260 --> 00:25:35,880
sense but again we'll work on some

665
00:25:35,880 --> 00:25:37,740
parallelization efforts there

666
00:25:37,740 --> 00:25:39,179
take all that with a grain of salt

667
00:25:39,179 --> 00:25:42,299
because we are very much at work in

668
00:25:42,299 --> 00:25:43,760
progress

669
00:25:43,760 --> 00:25:47,000
this software's in public preview

670
00:25:47,000 --> 00:25:50,039
the goal of that is beta level stability

671
00:25:50,039 --> 00:25:52,140
and behavior is not for production use

672
00:25:52,140 --> 00:25:54,539
we literally have a red box at the top

673
00:25:54,539 --> 00:25:56,640
of all our docs pages that say don't use

674
00:25:56,640 --> 00:25:59,279
this we'll have breaking changes date

675
00:25:59,279 --> 00:26:01,559
format changes or data format changes

676
00:26:01,559 --> 00:26:03,240
will be frequent Etc

677
00:26:03,240 --> 00:26:05,279
the key thing is looking at user

678
00:26:05,279 --> 00:26:07,980
experience taking user studies talking

679
00:26:07,980 --> 00:26:09,480
to python developers go developer

680
00:26:09,480 --> 00:26:12,900
c-sharp Java developers step by step

681
00:26:12,900 --> 00:26:14,700
from Hello World to

682
00:26:14,700 --> 00:26:16,980
uh real architectures and everywhere

683
00:26:16,980 --> 00:26:18,960
possible we're trying to think how can

684
00:26:18,960 --> 00:26:21,240
we reduce or eliminate choices right how

685
00:26:21,240 --> 00:26:22,919
can we make it less confusing or less

686
00:26:22,919 --> 00:26:24,960
sort of uh possible to kind of shoot

687
00:26:24,960 --> 00:26:26,640
yourself in the foot

688
00:26:26,640 --> 00:26:29,400
oh and again more towards opinionated

689
00:26:29,400 --> 00:26:31,200
and safer defaults

690
00:26:31,200 --> 00:26:33,960
uh the technology is Apache License it's

691
00:26:33,960 --> 00:26:36,059
a source it's on GitHub

692
00:26:36,059 --> 00:26:38,360
um all the commits are are public

693
00:26:38,360 --> 00:26:40,559
Compass is sort of a graphical viewer

694
00:26:40,559 --> 00:26:42,900
Michelle is a sort of a command line

695
00:26:42,900 --> 00:26:45,720
interface the driver support is beta

696
00:26:45,720 --> 00:26:46,919
experimental I really want to kind of

697
00:26:46,919 --> 00:26:49,380
underscore that are releases that you

698
00:26:49,380 --> 00:26:51,720
can download are probably four or five

699
00:26:51,720 --> 00:26:53,220
six months sometimes behind not any

700
00:26:53,220 --> 00:26:55,799
branches because we're moving so quickly

701
00:26:55,799 --> 00:26:56,760
um these are some of the different

702
00:26:56,760 --> 00:26:59,400
packages and yes we do ship for IBM Z

703
00:26:59,400 --> 00:27:02,539
series if that's your thing

704
00:27:02,640 --> 00:27:03,840
um

705
00:27:03,840 --> 00:27:05,640
wanted to give some special thanks to

706
00:27:05,640 --> 00:27:08,760
our crypto team over the last year and a

707
00:27:08,760 --> 00:27:11,100
half we actually now have a five person

708
00:27:11,100 --> 00:27:15,120
PhD cryptography team in-house these are

709
00:27:15,120 --> 00:27:18,059
some really uh talented people that have

710
00:27:18,059 --> 00:27:19,980
deep subject matter expertise I know

711
00:27:19,980 --> 00:27:24,179
you've seen that that Meme where uh the

712
00:27:24,179 --> 00:27:26,400
guys like there are dozens of us well

713
00:27:26,400 --> 00:27:28,980
this is a very Niche uh you know kind of

714
00:27:28,980 --> 00:27:32,220
community so we we we're very happy to

715
00:27:32,220 --> 00:27:34,520
have this kind of collaboration in-house

716
00:27:34,520 --> 00:27:39,480
uh We've made some changes to the the

717
00:27:39,480 --> 00:27:41,940
core database but not nearly as many as

718
00:27:41,940 --> 00:27:43,620
we have on the application side

719
00:27:43,620 --> 00:27:45,059
okay

720
00:27:45,059 --> 00:27:47,039
um this is just a snapshot of some of

721
00:27:47,039 --> 00:27:49,679
the folks that are involved uh probably

722
00:27:49,679 --> 00:27:52,140
twice as many now at this point across

723
00:27:52,140 --> 00:27:54,779
all our different teams

724
00:27:54,779 --> 00:27:56,220
um I want to leave you with a couple

725
00:27:56,220 --> 00:27:59,279
things and to wrap it up so current

726
00:27:59,279 --> 00:28:01,200
landscape on search this is a really

727
00:28:01,200 --> 00:28:03,600
fast moving area of academic study these

728
00:28:03,600 --> 00:28:05,240
are really interesting Rich expressive

729
00:28:05,240 --> 00:28:07,020
techniques that are kind of being

730
00:28:07,020 --> 00:28:09,419
developed as are the attacks as our

731
00:28:09,419 --> 00:28:12,840
leakage analysis as are sort of

732
00:28:12,840 --> 00:28:14,460
um you know better defining these

733
00:28:14,460 --> 00:28:16,679
security models some really promising

734
00:28:16,679 --> 00:28:18,480
developments I don't want to get a short

735
00:28:18,480 --> 00:28:20,580
shrift to things like homomorphic or

736
00:28:20,580 --> 00:28:22,980
multi-party computation differential

737
00:28:22,980 --> 00:28:26,760
privacy those all have key uses but in

738
00:28:26,760 --> 00:28:28,220
terms of a general

739
00:28:28,220 --> 00:28:32,340
uh you know general purpose database

740
00:28:32,340 --> 00:28:34,440
it's likely that we're going to land on

741
00:28:34,440 --> 00:28:36,659
structure encryption as sort of the

742
00:28:36,659 --> 00:28:38,460
technique going forward

743
00:28:38,460 --> 00:28:39,840
um happy to talk to more folks

744
00:28:39,840 --> 00:28:41,340
afterwards

745
00:28:41,340 --> 00:28:43,980
um but again we're you know never going

746
00:28:43,980 --> 00:28:45,900
to claim any kind of silver bullet or

747
00:28:45,900 --> 00:28:49,080
magic uh you know solution just making

748
00:28:49,080 --> 00:28:50,640
it more difficult raising the bar and

749
00:28:50,640 --> 00:28:52,440
attackers that's the goal and learning

750
00:28:52,440 --> 00:28:54,120
as we go through all this

751
00:28:54,120 --> 00:28:56,220
so I'll leave it there

752
00:28:56,220 --> 00:28:58,980
um the future of uh practical encrypted

753
00:28:58,980 --> 00:29:02,600
search is is bright thank you

