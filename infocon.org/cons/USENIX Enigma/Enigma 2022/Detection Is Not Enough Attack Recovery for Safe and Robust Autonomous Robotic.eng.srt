1
00:00:07,919 --> 00:00:10,160
this picture shows a promotional event

2
00:00:10,160 --> 00:00:13,840
organized by genesis they used over 3200

3
00:00:13,840 --> 00:00:15,920
illuminated drones for a light show in

4
00:00:15,920 --> 00:00:18,160
shanghai to announce their arrival in

5
00:00:18,160 --> 00:00:19,199
china

6
00:00:19,199 --> 00:00:21,279
what do we think when we see this

7
00:00:21,279 --> 00:00:23,119
this is undoubtedly one of the coolest

8
00:00:23,119 --> 00:00:25,359
promotional events and certainly a

9
00:00:25,359 --> 00:00:27,279
display of what autonomous drones are

10
00:00:27,279 --> 00:00:28,480
capable of

11
00:00:28,480 --> 00:00:31,039
i had similar thoughts as well

12
00:00:31,039 --> 00:00:32,719
at the same time i was worried the

13
00:00:32,719 --> 00:00:34,880
thought that struck to me is how secure

14
00:00:34,880 --> 00:00:36,239
are these drones

15
00:00:36,239 --> 00:00:38,399
what happens if an attack is launched

16
00:00:38,399 --> 00:00:40,879
when there are over 3000 target systems

17
00:00:40,879 --> 00:00:43,040
and as we see a large crowd has gathered

18
00:00:43,040 --> 00:00:45,120
to watch the show

19
00:00:45,120 --> 00:00:47,280
hi everyone i'm prietam phd student at

20
00:00:47,280 --> 00:00:49,440
university of british columbia in this

21
00:00:49,440 --> 00:00:51,360
talk i will present the gaps in current

22
00:00:51,360 --> 00:00:53,280
security mechanisms for autonomous

23
00:00:53,280 --> 00:00:55,920
robotic vehicles and our experience in

24
00:00:55,920 --> 00:00:58,480
developing low-cost attack recovery

25
00:00:58,480 --> 00:01:01,039
techniques that ensure safety in robotic

26
00:01:01,039 --> 00:01:02,960
vehicles

27
00:01:02,960 --> 00:01:05,680
robotic vehicles rv in short

28
00:01:05,680 --> 00:01:07,760
rely extensively on sensors for

29
00:01:07,760 --> 00:01:10,240
perception and decision making correct

30
00:01:10,240 --> 00:01:11,840
measurement of physical state is

31
00:01:11,840 --> 00:01:13,840
paramount for deriving appropriate

32
00:01:13,840 --> 00:01:16,000
actuator commands for example an

33
00:01:16,000 --> 00:01:18,479
autonomous ground vehicle relies on gps

34
00:01:18,479 --> 00:01:20,560
to derive current position and navigate

35
00:01:20,560 --> 00:01:22,560
accordingly and in the same way an

36
00:01:22,560 --> 00:01:24,960
autonomous drone relies on gyroscope or

37
00:01:24,960 --> 00:01:27,200
accelerometer sensors to determine its

38
00:01:27,200 --> 00:01:29,439
velocity angular orientation and fly

39
00:01:29,439 --> 00:01:31,840
accordingly

40
00:01:31,840 --> 00:01:33,360
unfortunately rvs have been shown

41
00:01:33,360 --> 00:01:34,720
vulnerable to attacks that raise

42
00:01:34,720 --> 00:01:35,840
concerns

43
00:01:35,840 --> 00:01:37,840
we focus on sensor attacks which cannot

44
00:01:37,840 --> 00:01:39,600
be prevented by traditional software

45
00:01:39,600 --> 00:01:41,520
security techniques like memory

46
00:01:41,520 --> 00:01:43,200
isolation or crypto

47
00:01:43,200 --> 00:01:45,280
examples of physical attacks are gps

48
00:01:45,280 --> 00:01:47,520
spoofing where the rv's position is

49
00:01:47,520 --> 00:01:49,360
manipulated by transmitting malicious

50
00:01:49,360 --> 00:01:50,560
signals

51
00:01:50,560 --> 00:01:53,200
and signal injection attack that injects

52
00:01:53,200 --> 00:01:55,759
acoustic or magnetic noise signals to

53
00:01:55,759 --> 00:01:57,680
manipulate sensors from an external

54
00:01:57,680 --> 00:01:59,840
source

55
00:01:59,840 --> 00:02:01,920
sensor attacks are not just limited to

56
00:02:01,920 --> 00:02:04,320
academic papers we have seen these types

57
00:02:04,320 --> 00:02:06,000
of attacks launched against military

58
00:02:06,000 --> 00:02:08,318
navigation systems for example it is

59
00:02:08,318 --> 00:02:10,080
suspected that one of the lockheed

60
00:02:10,080 --> 00:02:12,319
martin drones used by the us military

61
00:02:12,319 --> 00:02:14,640
was hijacked in 2011 through a gps

62
00:02:14,640 --> 00:02:17,360
proofing attack in a recent incident a

63
00:02:17,360 --> 00:02:21,120
uk warship was uh warship's position was

64
00:02:21,120 --> 00:02:25,280
falsified near a russian base in crimea

65
00:02:25,280 --> 00:02:27,280
these attacks are a looming risk for

66
00:02:27,280 --> 00:02:29,520
industrial rvs something that further

67
00:02:29,520 --> 00:02:32,080
exaggerates the risk is the attacker can

68
00:02:32,080 --> 00:02:33,840
be a complete outsider without any

69
00:02:33,840 --> 00:02:37,040
network or system access and still cause

70
00:02:37,040 --> 00:02:38,800
malfunctions by emitting malicious

71
00:02:38,800 --> 00:02:41,680
signals from an external source

72
00:02:41,680 --> 00:02:44,560
and as rvs are expected to operate in

73
00:02:44,560 --> 00:02:46,879
urban environment attacks against

74
00:02:46,879 --> 00:02:48,640
industrial rvs can cause damages and

75
00:02:48,640 --> 00:02:51,120
injuries

76
00:02:51,120 --> 00:02:53,040
as we have seen that it is important to

77
00:02:53,040 --> 00:02:55,840
secure rvs let's take a look at what has

78
00:02:55,840 --> 00:02:58,239
been done so far to secure rvs and what

79
00:02:58,239 --> 00:03:01,440
are the gaps in the current solutions

80
00:03:01,440 --> 00:03:03,360
a lot of prior work in this domain has

81
00:03:03,360 --> 00:03:04,560
gone into

82
00:03:04,560 --> 00:03:06,239
developing attack detection technique

83
00:03:06,239 --> 00:03:08,800
anomaly detection techniques etc

84
00:03:08,800 --> 00:03:10,800
the state-of-the-art techniques rely on

85
00:03:10,800 --> 00:03:13,760
invariants and or models to detect

86
00:03:13,760 --> 00:03:16,400
attacks if an invariant is not satisfied

87
00:03:16,400 --> 00:03:18,879
during an rv mission or if the model

88
00:03:18,879 --> 00:03:20,640
predictions and the real-time behavior

89
00:03:20,640 --> 00:03:22,480
of the rv are way off

90
00:03:22,480 --> 00:03:25,120
the attack detector raises an alert

91
00:03:25,120 --> 00:03:26,959
and these techniques are very effective

92
00:03:26,959 --> 00:03:29,200
in detecting attack in many cases they

93
00:03:29,200 --> 00:03:31,599
detect attack with 100 true positive and

94
00:03:31,599 --> 00:03:33,280
zero false negatives

95
00:03:33,280 --> 00:03:35,280
which is pretty good

96
00:03:35,280 --> 00:03:37,440
however attacks are often launched when

97
00:03:37,440 --> 00:03:39,200
the rv is in motion

98
00:03:39,200 --> 00:03:40,959
so even if the attack is detected

99
00:03:40,959 --> 00:03:42,879
detected it cannot prevent the

100
00:03:42,879 --> 00:03:44,319
consequences

101
00:03:44,319 --> 00:03:46,239
therefore a detection technique is only

102
00:03:46,239 --> 00:03:47,680
good for raising a lot it's not a

103
00:03:47,680 --> 00:03:50,480
complete solution

104
00:03:51,280 --> 00:03:53,840
some rv manufacturers use secondary

105
00:03:53,840 --> 00:03:55,760
hardware to trigger fail safe once an

106
00:03:55,760 --> 00:03:58,319
attack is detected the idea here is the

107
00:03:58,319 --> 00:04:00,319
secondary set of hardwares do not rely

108
00:04:00,319 --> 00:04:01,599
on sensors

109
00:04:01,599 --> 00:04:02,879
and they are only meant to perform

110
00:04:02,879 --> 00:04:05,200
emergency operations however this

111
00:04:05,200 --> 00:04:07,599
strategy opens new vulnerabilities

112
00:04:07,599 --> 00:04:10,239
now attackers can exploit this to

113
00:04:10,239 --> 00:04:12,159
disrupt and abort rv missions causing a

114
00:04:12,159 --> 00:04:14,959
denial of service further landing in an

115
00:04:14,959 --> 00:04:17,279
arbitrary or hostile territory in case

116
00:04:17,279 --> 00:04:20,880
of drones is is not really desirable

117
00:04:20,880 --> 00:04:22,720
so the key question that still remains

118
00:04:22,720 --> 00:04:24,320
unanswered is

119
00:04:24,320 --> 00:04:26,240
how should we respond once an attack is

120
00:04:26,240 --> 00:04:29,520
detected and how to ensure safety

121
00:04:29,520 --> 00:04:32,080
as robotic vehicles interact with us in

122
00:04:32,080 --> 00:04:34,400
the physical world the goal must be to

123
00:04:34,400 --> 00:04:36,400
develop attack resilient countermeasures

124
00:04:36,400 --> 00:04:39,520
and not just detection

125
00:04:39,840 --> 00:04:42,320
in this talk i will present two low-cost

126
00:04:42,320 --> 00:04:44,880
software solutions to recover rvs from

127
00:04:44,880 --> 00:04:46,240
sensor attacks

128
00:04:46,240 --> 00:04:48,240
low cost means these techniques do not

129
00:04:48,240 --> 00:04:50,080
require any hardware change

130
00:04:50,080 --> 00:04:52,400
and it incurs low performance and energy

131
00:04:52,400 --> 00:04:55,040
overhead and these systems are generally

132
00:04:55,040 --> 00:04:56,639
very resource constrained so ensuring

133
00:04:56,639 --> 00:04:58,960
low overhead is really important

134
00:04:58,960 --> 00:05:00,560
the first technique i will present today

135
00:05:00,560 --> 00:05:02,880
uses a feed forward control

136
00:05:02,880 --> 00:05:04,720
and the second technique uses historic

137
00:05:04,720 --> 00:05:09,280
state replay to recover rvs from attacks

138
00:05:09,280 --> 00:05:10,960
before jumping into the techniques let's

139
00:05:10,960 --> 00:05:12,240
get a little bit of background and

140
00:05:12,240 --> 00:05:15,039
understand rv's internals and see how

141
00:05:15,039 --> 00:05:19,440
attacks disrupt these systems

142
00:05:19,600 --> 00:05:22,479
rvs internal can be broadly classified

143
00:05:22,479 --> 00:05:24,880
into physical components such as motor

144
00:05:24,880 --> 00:05:27,440
sensors etc and cyber components which

145
00:05:27,440 --> 00:05:29,600
are dedicated programs for navigation

146
00:05:29,600 --> 00:05:32,639
control and other autonomous functions

147
00:05:32,639 --> 00:05:34,880
rvs rely on

148
00:05:34,880 --> 00:05:37,280
sensors to derive actuator signals such

149
00:05:37,280 --> 00:05:38,960
as motor thrust

150
00:05:38,960 --> 00:05:41,759
and they use a pid control which

151
00:05:41,759 --> 00:05:43,520
operates in a feedback loop to minimize

152
00:05:43,520 --> 00:05:45,280
environmental noise

153
00:05:45,280 --> 00:05:46,720
let's take an example to quickly

154
00:05:46,720 --> 00:05:49,120
understand this consider a scenario

155
00:05:49,120 --> 00:05:51,199
where a gush of wind deviated a drone

156
00:05:51,199 --> 00:05:53,199
slightly from its trajectory

157
00:05:53,199 --> 00:05:55,600
the pid control receives the actual

158
00:05:55,600 --> 00:05:57,520
state information accounting for the

159
00:05:57,520 --> 00:05:59,759
deviation from the trajectory

160
00:05:59,759 --> 00:06:02,080
and it increases the motor thrust to

161
00:06:02,080 --> 00:06:04,160
compensate for that

162
00:06:04,160 --> 00:06:08,080
error and brings the rv back on track

163
00:06:08,080 --> 00:06:09,680
this measurement

164
00:06:09,680 --> 00:06:11,680
and compensation based error correction

165
00:06:11,680 --> 00:06:14,400
strategy that pid uses is extremely

166
00:06:14,400 --> 00:06:16,560
effective in transient environmental

167
00:06:16,560 --> 00:06:19,600
errors like wind gush

168
00:06:19,600 --> 00:06:21,360
now let's see what happens to the pid

169
00:06:21,360 --> 00:06:23,440
controller under an attack unlike

170
00:06:23,440 --> 00:06:25,440
environmental noise or faults attacks

171
00:06:25,440 --> 00:06:27,919
are not transient in nature this graph

172
00:06:27,919 --> 00:06:30,479
here shows the trajectory in error

173
00:06:30,479 --> 00:06:32,479
incurred due to a gps proofing attack

174
00:06:32,479 --> 00:06:34,960
during a drone mission the y-axis shows

175
00:06:34,960 --> 00:06:36,880
that trajectory error

176
00:06:36,880 --> 00:06:38,479
and the x actually shows how the error

177
00:06:38,479 --> 00:06:40,960
increases as the attack progresses

178
00:06:40,960 --> 00:06:42,720
normally the error will be zero but

179
00:06:42,720 --> 00:06:44,800
however as we see in this figure the

180
00:06:44,800 --> 00:06:46,560
drone incurs persistent and systematic

181
00:06:46,560 --> 00:06:48,800
error throughout the mission

182
00:06:48,800 --> 00:06:50,960
which prompts the pid controller because

183
00:06:50,960 --> 00:06:52,880
it measures and compensates

184
00:06:52,880 --> 00:06:55,280
in this case it measures the systematic

185
00:06:55,280 --> 00:06:57,599
error but ends up overcompensating for

186
00:06:57,599 --> 00:06:59,840
the attack induced error which results

187
00:06:59,840 --> 00:07:02,080
in erroneous actuator signals and

188
00:07:02,080 --> 00:07:05,199
eventually it crashes the rv

189
00:07:05,199 --> 00:07:07,919
so what we learn is pid's

190
00:07:07,919 --> 00:07:10,160
measurement and compensation based error

191
00:07:10,160 --> 00:07:11,520
correction which is effective in

192
00:07:11,520 --> 00:07:13,520
handling faults becomes undesirable

193
00:07:13,520 --> 00:07:14,880
under attacks

194
00:07:14,880 --> 00:07:17,680
we do not blame pid control for the

195
00:07:17,680 --> 00:07:19,280
consequences of the attack it was never

196
00:07:19,280 --> 00:07:21,520
really meant to handle attack induced

197
00:07:21,520 --> 00:07:22,479
errors

198
00:07:22,479 --> 00:07:24,400
however this analysis shows that for a

199
00:07:24,400 --> 00:07:26,479
long time we have considered false

200
00:07:26,479 --> 00:07:28,000
resilience in designing autonomous

201
00:07:28,000 --> 00:07:30,160
systems and we have sort of overlooked

202
00:07:30,160 --> 00:07:32,639
attacks

203
00:07:33,199 --> 00:07:35,120
so now we know that attacks induce

204
00:07:35,120 --> 00:07:37,199
persistent error in sensor measurements

205
00:07:37,199 --> 00:07:39,039
which prompts pid controller to

206
00:07:39,039 --> 00:07:40,800
overcompensate eventually leading to

207
00:07:40,800 --> 00:07:42,800
aeronautics actuator signals

208
00:07:42,800 --> 00:07:45,120
based on this observation we derive two

209
00:07:45,120 --> 00:07:46,879
recovery requirements

210
00:07:46,879 --> 00:07:49,680
in order to recover rvs from attacks we

211
00:07:49,680 --> 00:07:51,680
will have to handle the persistent error

212
00:07:51,680 --> 00:07:53,759
which attacks tend to

213
00:07:53,759 --> 00:07:55,039
um

214
00:07:55,039 --> 00:07:57,039
incur attacks tend to manipulate the

215
00:07:57,039 --> 00:07:58,400
sensors

216
00:07:58,400 --> 00:08:00,639
and we will have to derive safe actuator

217
00:08:00,639 --> 00:08:03,520
signals to maneuver the rv under an

218
00:08:03,520 --> 00:08:05,680
attack

219
00:08:05,680 --> 00:08:07,360
to achieve these recovery requirements

220
00:08:07,360 --> 00:08:09,599
we designed a feed forward controller

221
00:08:09,599 --> 00:08:11,280
using machine learning

222
00:08:11,280 --> 00:08:13,840
and unlike pid which is a feedback

223
00:08:13,840 --> 00:08:15,599
controller the feed forward controller

224
00:08:15,599 --> 00:08:17,759
do not measure and compensate so it

225
00:08:17,759 --> 00:08:19,120
doesn't suffer from the same problem

226
00:08:19,120 --> 00:08:21,759
that pid suffers from instead the ffc

227
00:08:21,759 --> 00:08:23,599
anticipates the error by correlating

228
00:08:23,599 --> 00:08:25,919
past and present sensor measurements and

229
00:08:25,919 --> 00:08:28,479
takes corrective actions preemptively

230
00:08:28,479 --> 00:08:30,479
thus the ffc takes

231
00:08:30,479 --> 00:08:32,240
the current sensor measurements on the

232
00:08:32,240 --> 00:08:34,000
given waypoint and under an attack it

233
00:08:34,000 --> 00:08:38,159
will predict robust actuator signals

234
00:08:38,479 --> 00:08:41,919
we design a framework in which we run

235
00:08:41,919 --> 00:08:44,640
ffc in tandem with the pid control both

236
00:08:44,640 --> 00:08:47,279
the ffc and pid predict actuator signals

237
00:08:47,279 --> 00:08:48,640
in a time series

238
00:08:48,640 --> 00:08:50,640
we monitor the deviation between both

239
00:08:50,640 --> 00:08:53,120
the predictions to flag and attack

240
00:08:53,120 --> 00:08:55,120
once an attack is detected we switch to

241
00:08:55,120 --> 00:08:57,600
ffc's prediction as we know it predicts

242
00:08:57,600 --> 00:09:00,080
robust actuator signals under attack

243
00:09:00,080 --> 00:09:02,480
hence able to recover the rv and once

244
00:09:02,480 --> 00:09:04,480
the attack subsides we switch back to

245
00:09:04,480 --> 00:09:05,519
pid

246
00:09:05,519 --> 00:09:08,080
by using pid and ffc in tandem our

247
00:09:08,080 --> 00:09:10,560
framework offers best of both worlds and

248
00:09:10,560 --> 00:09:12,640
protect the rv from faults and attack

249
00:09:12,640 --> 00:09:14,640
that is pid protects from environmental

250
00:09:14,640 --> 00:09:15,760
noise

251
00:09:15,760 --> 00:09:18,880
faults or if and ffc predict protects it

252
00:09:18,880 --> 00:09:21,600
from the attack

253
00:09:21,760 --> 00:09:23,760
we perform extensive analysis on the

254
00:09:23,760 --> 00:09:26,640
feed forward control recovery technique

255
00:09:26,640 --> 00:09:29,279
on both simulated and real rv systems

256
00:09:29,279 --> 00:09:30,880
and we find this technique is actually

257
00:09:30,880 --> 00:09:32,800
really good in recovering rv from

258
00:09:32,800 --> 00:09:35,279
attacks it prevents crashes in all the

259
00:09:35,279 --> 00:09:36,560
cases

260
00:09:36,560 --> 00:09:38,640
it ensures mission success despite the

261
00:09:38,640 --> 00:09:40,720
attacks and incurs very low performance

262
00:09:40,720 --> 00:09:43,120
and energy overhead

263
00:09:43,120 --> 00:09:45,040
but we also find that this technique is

264
00:09:45,040 --> 00:09:47,760
only effective when a single sensor is

265
00:09:47,760 --> 00:09:49,440
under attack at a time

266
00:09:49,440 --> 00:09:51,440
not effective when multiple sensors are

267
00:09:51,440 --> 00:09:54,640
attacked simultaneously

268
00:09:55,600 --> 00:09:58,720
examples of multiple sensor attacks are

269
00:09:58,720 --> 00:10:01,120
imagine an attack where both the camera

270
00:10:01,120 --> 00:10:02,640
and lidar are manipulated in a

271
00:10:02,640 --> 00:10:05,519
coordinated way or the gps and gyroscope

272
00:10:05,519 --> 00:10:08,079
sensor of a rv is manipulated

273
00:10:08,079 --> 00:10:09,600
simultaneously

274
00:10:09,600 --> 00:10:11,360
recovery from these

275
00:10:11,360 --> 00:10:13,279
strong attacks is a much harder problem

276
00:10:13,279 --> 00:10:14,800
to solve

277
00:10:14,800 --> 00:10:16,560
what makes it more challenging is now

278
00:10:16,560 --> 00:10:18,720
the rv cannot rely on the correctness of

279
00:10:18,720 --> 00:10:21,440
other sensors

280
00:10:21,760 --> 00:10:23,360
we try to understand the attacker's

281
00:10:23,360 --> 00:10:25,360
capabilities in performing this type of

282
00:10:25,360 --> 00:10:26,880
strong attacks

283
00:10:26,880 --> 00:10:29,760
because the attack relies to

284
00:10:29,760 --> 00:10:31,920
relies on emitting malicious signals to

285
00:10:31,920 --> 00:10:34,160
manipulate the sensors realistically the

286
00:10:34,160 --> 00:10:36,240
attack will be confined to a range

287
00:10:36,240 --> 00:10:37,839
after a certain range the malicious

288
00:10:37,839 --> 00:10:40,079
signals will faint and they won't be

289
00:10:40,079 --> 00:10:41,360
strong enough to

290
00:10:41,360 --> 00:10:44,959
manipulate the sensors

291
00:10:45,040 --> 00:10:47,680
based on that observation we derive our

292
00:10:47,680 --> 00:10:49,440
recovery goal

293
00:10:49,440 --> 00:10:50,640
and

294
00:10:50,640 --> 00:10:52,320
the goal is to prevent immediate

295
00:10:52,320 --> 00:10:54,240
disruptions due to multiple sensor

296
00:10:54,240 --> 00:10:55,200
attacks

297
00:10:55,200 --> 00:10:57,279
and safely maneuver the rv out of the

298
00:10:57,279 --> 00:10:59,600
attack zone so imagine the curly brace

299
00:10:59,600 --> 00:11:01,120
that we see in this figure is the attack

300
00:11:01,120 --> 00:11:02,560
zone and as long as we prevent

301
00:11:02,560 --> 00:11:06,479
disruption within that zone we're good

302
00:11:07,040 --> 00:11:09,040
as we know that sensor manipulation

303
00:11:09,040 --> 00:11:11,279
leads to arona's physical states and

304
00:11:11,279 --> 00:11:14,000
results in aeronautics actuator signals

305
00:11:14,000 --> 00:11:15,839
and we know that if we satisfy these two

306
00:11:15,839 --> 00:11:17,680
recovery requirements we should be able

307
00:11:17,680 --> 00:11:19,760
to maneuver the rv out of the attack

308
00:11:19,760 --> 00:11:21,839
zone

309
00:11:21,839 --> 00:11:23,920
to prevent erroneous physical states due

310
00:11:23,920 --> 00:11:26,000
to multiple sensor attacks

311
00:11:26,000 --> 00:11:27,839
first we identify the sensors that are

312
00:11:27,839 --> 00:11:29,440
under attack

313
00:11:29,440 --> 00:11:31,360
and we isolate those sensors from the

314
00:11:31,360 --> 00:11:33,760
control process we don't use the sensor

315
00:11:33,760 --> 00:11:35,360
readings anymore

316
00:11:35,360 --> 00:11:37,200
and this will prevent erroneous physical

317
00:11:37,200 --> 00:11:39,279
states due to the attack

318
00:11:39,279 --> 00:11:40,240
but

319
00:11:40,240 --> 00:11:42,720
simply removing a stream of inputs in a

320
00:11:42,720 --> 00:11:44,480
feedback control loop will lead to

321
00:11:44,480 --> 00:11:46,000
another saturator signal and cause

322
00:11:46,000 --> 00:11:47,920
disruptions

323
00:11:47,920 --> 00:11:49,920
to prevent such disruptions we

324
00:11:49,920 --> 00:11:52,079
substitute the missing sensor input with

325
00:11:52,079 --> 00:11:55,760
a stream of historical physical states

326
00:11:55,760 --> 00:11:58,079
the substitution inputs are recorded

327
00:11:58,079 --> 00:12:00,160
from an attack free phase of the rv

328
00:12:00,160 --> 00:12:02,240
mission and we record physical state

329
00:12:02,240 --> 00:12:04,079
information such as position velocity

330
00:12:04,079 --> 00:12:08,920
throttle angular velocity etc

331
00:12:10,000 --> 00:12:11,200
assume that an attack detection

332
00:12:11,200 --> 00:12:12,560
technique is already in place which

333
00:12:12,560 --> 00:12:15,360
gives us an alert in real time when an

334
00:12:15,360 --> 00:12:17,360
attack is detected we replay the

335
00:12:17,360 --> 00:12:19,360
historic states recorded from attack

336
00:12:19,360 --> 00:12:21,360
free phase

337
00:12:21,360 --> 00:12:23,440
till the rv is outside of that hacker's

338
00:12:23,440 --> 00:12:25,600
range and then we go back to the

339
00:12:25,600 --> 00:12:27,120
original sensors

340
00:12:27,120 --> 00:12:28,959
and that's one of the ways we can

341
00:12:28,959 --> 00:12:33,119
recover from the strong attacks as well

342
00:12:34,000 --> 00:12:36,399
does this sound strange to anyone we

343
00:12:36,399 --> 00:12:38,240
always thought that replay is a type of

344
00:12:38,240 --> 00:12:39,120
attack

345
00:12:39,120 --> 00:12:41,040
and here i'm telling you that we can use

346
00:12:41,040 --> 00:12:43,760
replay to mitigate attacks

347
00:12:43,760 --> 00:12:46,000
so let's take a quick look and

348
00:12:46,000 --> 00:12:47,600
understand

349
00:12:47,600 --> 00:12:49,440
how it really works

350
00:12:49,440 --> 00:12:50,800
so

351
00:12:50,800 --> 00:12:53,440
imagine if the attack starts at t0 and

352
00:12:53,440 --> 00:12:56,079
continues till t and after tn

353
00:12:56,079 --> 00:12:56,880
the

354
00:12:56,880 --> 00:12:58,639
malicious signals are not strong enough

355
00:12:58,639 --> 00:13:01,760
to influence the sensors anymore

356
00:13:01,760 --> 00:13:04,399
and starting t0

357
00:13:04,399 --> 00:13:07,440
we start replaying the historic states

358
00:13:07,440 --> 00:13:08,399
and

359
00:13:08,399 --> 00:13:10,800
the idea here is instead of using bad

360
00:13:10,800 --> 00:13:13,040
sensor inputs under the attack the rv

361
00:13:13,040 --> 00:13:16,480
will use a benign historic input

362
00:13:16,480 --> 00:13:18,880
the idea is to make the rv think that it

363
00:13:18,880 --> 00:13:20,320
is in a pass state so that the

364
00:13:20,320 --> 00:13:23,200
controller realizes oh well i have to go

365
00:13:23,200 --> 00:13:25,200
a long way in my trajectory and i have

366
00:13:25,200 --> 00:13:27,200
to close this gap

367
00:13:27,200 --> 00:13:28,560
that

368
00:13:28,560 --> 00:13:31,519
signals the controller to derive

369
00:13:31,519 --> 00:13:33,279
constant actuator signals instead of

370
00:13:33,279 --> 00:13:35,440
fluctuating actuator signals that's the

371
00:13:35,440 --> 00:13:37,600
difference that historic state replay

372
00:13:37,600 --> 00:13:39,839
really does that instead of

373
00:13:39,839 --> 00:13:41,920
fluctuating actuator signal due to

374
00:13:41,920 --> 00:13:44,000
historic state replay we can ensure that

375
00:13:44,000 --> 00:13:45,600
the actuator signals are now just

376
00:13:45,600 --> 00:13:46,720
constant

377
00:13:46,720 --> 00:13:49,920
and that ensures the rv and it maneuvers

378
00:13:49,920 --> 00:13:53,760
the rv out of the attack zone safely

379
00:13:54,320 --> 00:13:56,720
we started by looking at the current

380
00:13:56,720 --> 00:13:58,959
security mechanisms for rvs and

381
00:13:58,959 --> 00:14:00,880
understanding how secure are the robotic

382
00:14:00,880 --> 00:14:04,079
vehicles today and we saw that detection

383
00:14:04,079 --> 00:14:06,720
is not a complete solution

384
00:14:06,720 --> 00:14:09,680
as it does not ensure safety

385
00:14:09,680 --> 00:14:12,800
this calls for better attack response

386
00:14:12,800 --> 00:14:15,760
and we think that software solutions can

387
00:14:15,760 --> 00:14:17,920
effectively recover rvs from attacks and

388
00:14:17,920 --> 00:14:20,639
ensure safety

389
00:14:20,800 --> 00:14:22,800
that brings me to the end of this talk

390
00:14:22,800 --> 00:14:24,800
the message i want you to take away is

391
00:14:24,800 --> 00:14:27,040
autonomous robotic vehicles are quickly

392
00:14:27,040 --> 00:14:28,639
becoming popular in fast growing

393
00:14:28,639 --> 00:14:30,399
industry 4.0

394
00:14:30,399 --> 00:14:32,399
and the sooner we think about security

395
00:14:32,399 --> 00:14:34,639
and design better security strategy we

396
00:14:34,639 --> 00:14:37,440
will save a lot of pain for later

397
00:14:37,440 --> 00:14:40,959
we won't have a lot of pain later

398
00:14:41,440 --> 00:14:43,680
the focus should be on developing attack

399
00:14:43,680 --> 00:14:45,920
resilient countermeasures that ensure

400
00:14:45,920 --> 00:14:48,240
safety and low-cost software solution

401
00:14:48,240 --> 00:14:49,839
can offer reasonable recovery

402
00:14:49,839 --> 00:14:51,279
capabilities

403
00:14:51,279 --> 00:14:52,800
thank you very much i'm happy to take

404
00:14:52,800 --> 00:14:54,330
questions

405
00:14:54,330 --> 00:14:59,089
[Applause]

406
00:15:04,160 --> 00:15:06,240
you

