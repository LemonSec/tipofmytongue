1
00:00:00,580 --> 00:00:02,640
<font color="#E5E5E5">you</font>

2
00:00:04,930 --> 00:00:11,780
[Music]

3
00:00:06,980 --> 00:00:14,430
hi everyone<font color="#CCCCCC"> today I want to talk about a</font>

4
00:00:11,780 --> 00:00:17,340
protocol<font color="#CCCCCC"> that we have been working on</font>

5
00:00:14,430 --> 00:00:21,300
for<font color="#CCCCCC"> the</font><font color="#E5E5E5"> past</font><font color="#CCCCCC"> couple of years to protect</font>

6
00:00:17,340 --> 00:00:23,849
<font color="#E5E5E5">data that we send</font><font color="#CCCCCC"> to Firefox plan in the</font>

7
00:00:21,300 --> 00:00:25,859
wild and this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> mechanism</font><font color="#E5E5E5"> that we call</font>

8
00:00:23,849 --> 00:00:28,948
<font color="#E5E5E5">content signature that we have built</font>

9
00:00:25,859 --> 00:00:31,679
specifically for Firefox<font color="#E5E5E5"> and my goal</font><font color="#CCCCCC"> is</font>

10
00:00:28,949 --> 00:00:33,750
<font color="#E5E5E5">to explain a little bit how we build</font>

11
00:00:31,679 --> 00:00:36,089
this protocol<font color="#E5E5E5"> what kind of challenges we</font>

12
00:00:33,750 --> 00:00:38,310
had<font color="#CCCCCC"> to work through and maybe give ideas</font>

13
00:00:36,090 --> 00:00:40,170
<font color="#E5E5E5">to other people who might</font><font color="#CCCCCC"> want to be</font>

14
00:00:38,310 --> 00:00:45,110
<font color="#E5E5E5">building the same type things in their</font>

15
00:00:40,170 --> 00:00:47,160
application so Firefox<font color="#E5E5E5"> since the</font>

16
00:00:45,110 --> 00:00:49,290
beginning of Firefox has<font color="#E5E5E5"> had an update</font>

17
00:00:47,160 --> 00:00:51,620
<font color="#CCCCCC">mechanism that we use to release new</font>

18
00:00:49,290 --> 00:00:53,879
versions of Firefox<font color="#E5E5E5"> to all of our users</font>

19
00:00:51,620 --> 00:00:56,669
<font color="#CCCCCC">every time I read is a major version so</font>

20
00:00:53,880 --> 00:00:59,760
regularly every six weeks<font color="#E5E5E5"> and this</font>

21
00:00:56,670 --> 00:01:01,380
update mechanism<font color="#E5E5E5"> takes the</font><font color="#CCCCCC"> output of our</font>

22
00:00:59,760 --> 00:01:05,009
<font color="#E5E5E5">release engineering infrastructure will</font>

23
00:01:01,380 --> 00:01:06,960
create a set of<font color="#E5E5E5"> binary files hundreds of</font>

24
00:01:05,009 --> 00:01:09,659
them per<font color="#CCCCCC"> locale platforms that we</font>

25
00:01:06,960 --> 00:01:11,880
support and<font color="#CCCCCC"> we will ship and distribute</font>

26
00:01:09,659 --> 00:01:15,060
this update<font color="#CCCCCC"> to our users to bring</font><font color="#E5E5E5"> them</font>

27
00:01:11,880 --> 00:01:17,310
to the<font color="#CCCCCC"> next</font><font color="#E5E5E5"> major version of Firefox and</font>

28
00:01:15,060 --> 00:01:18,750
<font color="#E5E5E5">this mechanism is</font><font color="#CCCCCC"> also very heavy</font><font color="#E5E5E5"> and</font>

29
00:01:17,310 --> 00:01:22,320
requires a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> people to do a</font><font color="#E5E5E5"> lot of</font>

30
00:01:18,750 --> 00:01:25,500
<font color="#CCCCCC">work to exercise it</font><font color="#E5E5E5"> so we have another</font>

31
00:01:22,320 --> 00:01:28,080
<font color="#CCCCCC">mechanism that is Adams</font><font color="#E5E5E5"> Firefox add-ons</font>

32
00:01:25,500 --> 00:01:29,900
<font color="#CCCCCC">that is a little more</font><font color="#E5E5E5"> lightweight</font><font color="#CCCCCC"> and</font>

33
00:01:28,080 --> 00:01:32,010
<font color="#E5E5E5">typically add-ons are written by</font>

34
00:01:29,900 --> 00:01:34,020
<font color="#E5E5E5">developers that are outside</font><font color="#CCCCCC"> of Mozilla</font>

35
00:01:32,010 --> 00:01:37,470
to<font color="#CCCCCC"> extend functionalities of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> browser</font>

36
00:01:34,020 --> 00:01:39,929
<font color="#E5E5E5">and but we also use it internally to</font>

37
00:01:37,470 --> 00:01:41,880
<font color="#E5E5E5">develop certain features that we feel</font>

38
00:01:39,930 --> 00:01:43,680
should be<font color="#E5E5E5"> in their own components and we</font>

39
00:01:41,880 --> 00:01:46,229
want to distribute them outside<font color="#CCCCCC"> of the</font>

40
00:01:43,680 --> 00:01:48,600
normal release cycle<font color="#E5E5E5"> so we use</font><font color="#CCCCCC"> errands</font>

41
00:01:46,229 --> 00:01:51,960
for<font color="#CCCCCC"> those but in recent years</font><font color="#E5E5E5"> we've had</font>

42
00:01:48,600 --> 00:01:53,220
a third type<font color="#CCCCCC"> of data that</font><font color="#E5E5E5"> we wanted to</font>

43
00:01:51,960 --> 00:01:55,020
push<font color="#E5E5E5"> to Firefox and</font><font color="#CCCCCC"> do that data</font>

44
00:01:53,220 --> 00:01:58,560
collections and there are corrections

45
00:01:55,020 --> 00:02:01,530
could be anything from<font color="#CCCCCC"> a an entry in a</font>

46
00:01:58,560 --> 00:02:04,440
certificate<font color="#CCCCCC"> blacklist to save browsing</font>

47
00:02:01,530 --> 00:02:06,780
data<font color="#CCCCCC"> - sometimes a be testing experiment</font>

48
00:02:04,440 --> 00:02:09,590
that we want to<font color="#E5E5E5"> run on a small cohort of</font>

49
00:02:06,780 --> 00:02:12,750
Firefox users and so the challenge here

50
00:02:09,590 --> 00:02:16,529
<font color="#E5E5E5">that we faced is essentially how do we</font>

51
00:02:12,750 --> 00:02:17,999
<font color="#CCCCCC">secure that sir type of update our</font>

52
00:02:16,529 --> 00:02:20,489
regular<font color="#CCCCCC"> updates the one that we</font><font color="#E5E5E5"> release</font>

53
00:02:17,999 --> 00:02:20,790
every six<font color="#CCCCCC"> weeks</font><font color="#E5E5E5"> are protected with a</font>

54
00:02:20,489 --> 00:02:24,060
<font color="#CCCCCC">peek</font>

55
00:02:20,790 --> 00:02:27,060
cs1 signature we use<font color="#E5E5E5"> hard-coded RSA keys</font>

56
00:02:24,060 --> 00:02:28,680
<font color="#CCCCCC">to sign these updates and the Firefox</font>

57
00:02:27,060 --> 00:02:30,829
client will<font color="#CCCCCC"> verify these</font><font color="#E5E5E5"> signatures</font>

58
00:02:28,680 --> 00:02:33,989
<font color="#E5E5E5">every time it retrieves the updates</font>

59
00:02:30,829 --> 00:02:37,680
<font color="#E5E5E5">add-ons are also signed we use a pkcs7</font>

60
00:02:33,989 --> 00:02:40,109
signature and<font color="#CCCCCC"> that uses an internal PKI</font>

61
00:02:37,680 --> 00:02:41,879
that is private to<font color="#CCCCCC"> firefox</font><font color="#E5E5E5"> to</font>

62
00:02:40,109 --> 00:02:44,189
essentially issue certificates of sign

63
00:02:41,879 --> 00:02:47,388
add-ons and gets verified when installed

64
00:02:44,189 --> 00:02:49,200
<font color="#E5E5E5">in</font><font color="#CCCCCC"> firefox</font><font color="#E5E5E5"> but for data signing for</font>

65
00:02:47,389 --> 00:02:51,900
verifying the integrity of<font color="#E5E5E5"> data</font>

66
00:02:49,200 --> 00:02:54,839
<font color="#E5E5E5">retrieved from a</font><font color="#CCCCCC"> web api there are no</font>

67
00:02:51,900 --> 00:02:57,530
good solutions the industry best

68
00:02:54,840 --> 00:03:00,720
practice for this problem is essentially

69
00:02:57,530 --> 00:03:02,280
to put your web application<font color="#CCCCCC"> at the edge</font>

70
00:03:00,720 --> 00:03:03,659
of<font color="#E5E5E5"> your infrastructure where clients can</font>

71
00:03:02,280 --> 00:03:07,769
talk to<font color="#E5E5E5"> typically through a load</font>

72
00:03:03,659 --> 00:03:10,560
balancer<font color="#CCCCCC"> to have</font><font color="#E5E5E5"> HTTPS enabled on that</font>

73
00:03:07,769 --> 00:03:14,280
API<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that you can verify</font><font color="#CCCCCC"> that the</font>

74
00:03:10,560 --> 00:03:16,230
connection is<font color="#E5E5E5"> secure</font><font color="#CCCCCC"> and hope</font><font color="#E5E5E5"> that your</font>

75
00:03:14,280 --> 00:03:18,060
web application<font color="#E5E5E5"> doesn't get hacked but</font>

76
00:03:16,230 --> 00:03:21,328
that has<font color="#E5E5E5"> mainly two problems the first</font>

77
00:03:18,060 --> 00:03:24,389
<font color="#E5E5E5">one is</font><font color="#CCCCCC"> HTTP interception and that is</font>

78
00:03:21,329 --> 00:03:27,090
actually<font color="#CCCCCC"> as I discuss a real issue for</font>

79
00:03:24,389 --> 00:03:30,419
<font color="#CCCCCC">us that we want to cover</font><font color="#E5E5E5"> and the second</font>

80
00:03:27,090 --> 00:03:32,010
one is the compromise<font color="#CCCCCC"> of</font><font color="#E5E5E5"> a web</font><font color="#CCCCCC"> front-end</font>

81
00:03:30,419 --> 00:03:35,430
of that web application<font color="#CCCCCC"> that sits</font><font color="#E5E5E5"> at the</font>

82
00:03:32,010 --> 00:03:37,349
edge is a very big issue<font color="#E5E5E5"> for us</font><font color="#CCCCCC"> because</font>

83
00:03:35,430 --> 00:03:39,870
if it is compromised it<font color="#CCCCCC"> can be used</font><font color="#E5E5E5"> to</font>

84
00:03:37,349 --> 00:03:44,488
push fraudulent data to order for users

85
00:03:39,870 --> 00:03:47,069
<font color="#CCCCCC">so I'm</font><font color="#E5E5E5"> gonna cover both of</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> HTTP</font>

86
00:03:44,489 --> 00:03:48,900
interception<font color="#CCCCCC"> is a real issue on the</font>

87
00:03:47,069 --> 00:03:51,388
<font color="#CCCCCC">Internet this</font><font color="#E5E5E5"> is data from a study that</font>

88
00:03:48,900 --> 00:03:53,340
was run last year<font color="#E5E5E5"> in collaboration</font><font color="#CCCCCC"> with</font>

89
00:03:51,389 --> 00:03:57,209
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> Mozilla</font><font color="#E5E5E5"> CloudFlare and a few</font>

90
00:03:53,340 --> 00:03:59,909
universities<font color="#CCCCCC"> to</font><font color="#E5E5E5"> evaluate exactly what</font>

91
00:03:57,209 --> 00:04:02,849
<font color="#E5E5E5">percentage of connections are being</font>

92
00:03:59,909 --> 00:04:06,840
intercepted<font color="#E5E5E5"> and potentially modified and</font>

93
00:04:02,849 --> 00:04:10,228
this is data<font color="#E5E5E5"> that we measured on our</font>

94
00:04:06,840 --> 00:04:13,500
update service so when Firefox clients

95
00:04:10,229 --> 00:04:16,169
on your<font color="#E5E5E5"> mesh on your</font><font color="#CCCCCC"> laptop's make a</font>

96
00:04:13,500 --> 00:04:17,668
connection<font color="#E5E5E5"> to our update service we</font>

97
00:04:16,168 --> 00:04:20,008
actually<font color="#CCCCCC"> measured that four percent</font><font color="#E5E5E5"> of</font>

98
00:04:17,668 --> 00:04:22,169
these<font color="#E5E5E5"> connections</font><font color="#CCCCCC"> where potentially</font>

99
00:04:20,009 --> 00:04:25,560
being intercepted and so<font color="#E5E5E5"> potentially</font>

100
00:04:22,169 --> 00:04:28,919
modified in some countries<font color="#CCCCCC"> that number</font>

101
00:04:25,560 --> 00:04:31,169
goes up<font color="#CCCCCC"> to fifteen percent so that means</font>

102
00:04:28,919 --> 00:04:32,700
that<font color="#E5E5E5"> for</font><font color="#CCCCCC"> us</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> numbers is massive</font>

103
00:04:31,169 --> 00:04:34,289
<font color="#E5E5E5">like when you take a population of</font><font color="#CCCCCC"> users</font>

104
00:04:32,700 --> 00:04:35,639
the size of Firefox

105
00:04:34,289 --> 00:04:38,279
talking millions<font color="#E5E5E5"> of users</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> are</font>

106
00:04:35,639 --> 00:04:40,319
potentially at risk<font color="#CCCCCC"> so it is very</font>

107
00:04:38,279 --> 00:04:42,869
important for<font color="#CCCCCC"> us to have mechanism that</font>

108
00:04:40,319 --> 00:04:44,669
guarantee that we can ship updates to

109
00:04:42,869 --> 00:04:45,719
our<font color="#E5E5E5"> users</font><font color="#CCCCCC"> security and that our users</font>

110
00:04:44,669 --> 00:04:48,119
are<font color="#E5E5E5"> not going</font><font color="#CCCCCC"> to download install</font>

111
00:04:45,719 --> 00:04:50,939
<font color="#E5E5E5">fraudulent</font><font color="#CCCCCC"> updates that's</font><font color="#E5E5E5"> the first</font>

112
00:04:48,119 --> 00:04:53,279
problem<font color="#CCCCCC"> the second problem is</font><font color="#E5E5E5"> the web</font>

113
00:04:50,939 --> 00:04:55,860
<font color="#CCCCCC">application security</font><font color="#E5E5E5"> one it's</font>

114
00:04:53,279 --> 00:04:59,129
essentially<font color="#E5E5E5"> a question of balancing</font>

115
00:04:55,860 --> 00:05:01,889
development agility and security

116
00:04:59,129 --> 00:05:04,139
most of our web applications are written

117
00:05:01,889 --> 00:05:06,479
<font color="#E5E5E5">in modern web frameworks because</font><font color="#CCCCCC"> we want</font>

118
00:05:04,139 --> 00:05:07,649
to give our developers the ability<font color="#CCCCCC"> to</font>

119
00:05:06,479 --> 00:05:09,779
write them quickly

120
00:05:07,649 --> 00:05:12,300
to improve<font color="#E5E5E5"> them quickly and that means</font>

121
00:05:09,779 --> 00:05:16,649
that they<font color="#E5E5E5"> will use the</font><font color="#CCCCCC"> latest flavor of</font>

122
00:05:12,300 --> 00:05:19,709
<font color="#E5E5E5">nodejs of Python of go of those modern</font>

123
00:05:16,649 --> 00:05:21,869
modern<font color="#E5E5E5"> programming languages and those</font>

124
00:05:19,709 --> 00:05:23,759
web framework<font color="#E5E5E5"> they evolve too quickly</font>

125
00:05:21,869 --> 00:05:26,729
<font color="#E5E5E5">for</font><font color="#CCCCCC"> us to really</font><font color="#E5E5E5"> be able</font><font color="#CCCCCC"> to review</font><font color="#E5E5E5"> them</font>

126
00:05:23,759 --> 00:05:28,649
<font color="#E5E5E5">and so we don't</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> have a way to</font>

127
00:05:26,729 --> 00:05:30,779
guarantee<font color="#E5E5E5"> that the latest version of</font>

128
00:05:28,649 --> 00:05:32,399
<font color="#CCCCCC">Gengo for example will not have any</font>

129
00:05:30,779 --> 00:05:34,349
<font color="#CCCCCC">security issue that</font><font color="#E5E5E5"> puts our users and</font>

130
00:05:32,399 --> 00:05:35,939
our<font color="#E5E5E5"> services at risk and even</font><font color="#CCCCCC"> if we</font>

131
00:05:34,349 --> 00:05:38,339
could review the latest<font color="#E5E5E5"> version of</font>

132
00:05:35,939 --> 00:05:40,589
<font color="#CCCCCC">jingle and the Django team does a great</font>

133
00:05:38,339 --> 00:05:43,259
<font color="#CCCCCC">job at</font><font color="#E5E5E5"> this those applications also have</font>

134
00:05:40,589 --> 00:05:45,509
major risks in the supply chain<font color="#CCCCCC"> in the</font>

135
00:05:43,259 --> 00:05:47,909
list<font color="#E5E5E5"> of dependencies that</font><font color="#CCCCCC"> they will</font>

136
00:05:45,509 --> 00:05:51,269
import<font color="#E5E5E5"> in their web applications so we</font>

137
00:05:47,909 --> 00:05:52,740
<font color="#CCCCCC">have the situation where from</font><font color="#E5E5E5"> a software</font>

138
00:05:51,269 --> 00:05:55,830
engineering<font color="#CCCCCC"> perspective it makes sense</font>

139
00:05:52,740 --> 00:05:58,139
to allow<font color="#E5E5E5"> for development agility but it</font>

140
00:05:55,830 --> 00:06:00,120
also<font color="#E5E5E5"> poses a number of risks</font><font color="#CCCCCC"> to the</font>

141
00:05:58,139 --> 00:06:02,099
security of the infrastructure so we

142
00:06:00,120 --> 00:06:03,749
<font color="#E5E5E5">actually try</font><font color="#CCCCCC"> to find a</font><font color="#E5E5E5"> model where we</font>

143
00:06:02,099 --> 00:06:07,589
could allow developers to<font color="#E5E5E5"> have that</font>

144
00:06:03,749 --> 00:06:09,959
agility<font color="#E5E5E5"> but at the same time apply a</font>

145
00:06:07,589 --> 00:06:12,059
sufficient security<font color="#E5E5E5"> so that if the web</font>

146
00:06:09,959 --> 00:06:14,939
application is compromised<font color="#E5E5E5"> data cannot</font>

147
00:06:12,059 --> 00:06:17,209
<font color="#E5E5E5">be compromised so this is content</font>

148
00:06:14,939 --> 00:06:19,219
signature and a<font color="#CCCCCC"> content signature</font>

149
00:06:17,209 --> 00:06:23,219
guarantees the integrity<font color="#E5E5E5"> of data</font>

150
00:06:19,219 --> 00:06:25,769
<font color="#E5E5E5">collections that we send to Firefox</font><font color="#CCCCCC"> it</font>

151
00:06:23,219 --> 00:06:28,289
does not<font color="#E5E5E5"> protect confidentiality</font><font color="#CCCCCC"> it does</font>

152
00:06:25,769 --> 00:06:30,539
not<font color="#E5E5E5"> protect</font><font color="#CCCCCC"> availability it also does</font>

153
00:06:28,289 --> 00:06:32,938
<font color="#CCCCCC">not protect against</font><font color="#E5E5E5"> replay of that</font>

154
00:06:30,539 --> 00:06:34,830
signature<font color="#CCCCCC"> and we left those out</font><font color="#E5E5E5"> of the</font>

155
00:06:32,939 --> 00:06:37,740
design of content signature for

156
00:06:34,830 --> 00:06:39,779
<font color="#CCCCCC">simplicity reasons inside of Firefox you</font>

157
00:06:37,740 --> 00:06:42,629
might very<font color="#E5E5E5"> well have a mechanism</font><font color="#CCCCCC"> that</font>

158
00:06:39,779 --> 00:06:44,370
prevent regressing<font color="#CCCCCC"> to prove a version</font><font color="#E5E5E5"> of</font>

159
00:06:42,629 --> 00:06:47,200
the collection<font color="#E5E5E5"> but</font><font color="#CCCCCC"> Compton's signature</font>

160
00:06:44,370 --> 00:06:49,540
itself<font color="#E5E5E5"> does not</font><font color="#CCCCCC"> provide that</font><font color="#E5E5E5"> security</font>

161
00:06:47,200 --> 00:06:51,460
at a crypto<font color="#E5E5E5"> level and I'm not a</font>

162
00:06:49,540 --> 00:06:52,930
cryptographer but we have some very good

163
00:06:51,460 --> 00:06:55,510
cryptographers at<font color="#CCCCCC"> Masada who came up</font>

164
00:06:52,930 --> 00:06:56,860
<font color="#CCCCCC">with these primitives a company whose</font>

165
00:06:55,510 --> 00:06:59,710
signature is<font color="#E5E5E5"> an ECDSA</font>

166
00:06:56,860 --> 00:07:02,350
signature on the piece really<font color="#E5E5E5"> for NIST</font>

167
00:06:59,710 --> 00:07:05,169
curve<font color="#E5E5E5"> we calculate a hash of the data</font>

168
00:07:02,350 --> 00:07:09,820
using<font color="#CCCCCC"> share</font><font color="#E5E5E5"> to 384 and we sign that hash</font>

169
00:07:05,170 --> 00:07:13,690
with<font color="#CCCCCC"> the</font><font color="#E5E5E5"> CDSA we get a</font><font color="#CCCCCC"> labrat</font><font color="#E5E5E5"> r NS</font>

170
00:07:09,820 --> 00:07:15,250
values that we encode with base64<font color="#E5E5E5"> URL</font>

171
00:07:13,690 --> 00:07:17,710
safe and what you see at the<font color="#CCCCCC"> bottom</font><font color="#E5E5E5"> of</font>

172
00:07:15,250 --> 00:07:19,810
that<font color="#E5E5E5"> slide is a little blob of data that</font>

173
00:07:17,710 --> 00:07:22,390
is an<font color="#E5E5E5"> actual signature</font><font color="#CCCCCC"> so it's</font><font color="#E5E5E5"> very</font>

174
00:07:19,810 --> 00:07:25,060
short<font color="#E5E5E5"> very lightweight very easy to add</font>

175
00:07:22,390 --> 00:07:30,610
and to send to our users without adding

176
00:07:25,060 --> 00:07:32,740
a<font color="#E5E5E5"> whole</font><font color="#CCCCCC"> bunch of</font><font color="#E5E5E5"> data the signing relies</font>

177
00:07:30,610 --> 00:07:36,370
on an internal<font color="#CCCCCC"> PKI</font>

178
00:07:32,740 --> 00:07:39,280
that is private to<font color="#CCCCCC"> firefox we sign</font><font color="#E5E5E5"> data</font>

179
00:07:36,370 --> 00:07:40,900
using n entity certificates that<font color="#CCCCCC"> are</font>

180
00:07:39,280 --> 00:07:42,880
issued<font color="#CCCCCC"> by that</font><font color="#E5E5E5"> PK</font><font color="#CCCCCC"> it's the same one that</font>

181
00:07:40,900 --> 00:07:45,820
we used to sign<font color="#CCCCCC"> add-ons</font><font color="#E5E5E5"> except that we</font>

182
00:07:42,880 --> 00:07:47,980
created a<font color="#E5E5E5"> separate branch for it</font><font color="#CCCCCC"> that is</font>

183
00:07:45,820 --> 00:07:49,540
dedicated<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> namespace content</font>

184
00:07:47,980 --> 00:07:52,030
signature that mozilla.org<font color="#CCCCCC"> will use</font>

185
00:07:49,540 --> 00:07:54,610
certificate constraints<font color="#E5E5E5"> to isolate</font><font color="#CCCCCC"> that</font>

186
00:07:52,030 --> 00:07:57,640
branch and<font color="#CCCCCC"> when firefox will verify a</font>

187
00:07:54,610 --> 00:08:00,370
signature<font color="#E5E5E5"> it will actually download the</font>

188
00:07:57,640 --> 00:08:01,599
certificate<font color="#CCCCCC"> chain</font><font color="#E5E5E5"> using an x5</font><font color="#CCCCCC"> view value</font>

189
00:08:00,370 --> 00:08:04,030
in the signatures<font color="#E5E5E5"> that tells it which</font>

190
00:08:01,600 --> 00:08:06,250
downloaded from and retrieve these

191
00:08:04,030 --> 00:08:09,510
certificates<font color="#E5E5E5"> so in concept it's very</font>

192
00:08:06,250 --> 00:08:12,040
very similar to how TLS works except

193
00:08:09,510 --> 00:08:14,230
<font color="#CCCCCC">weari</font><font color="#E5E5E5"> implemented it at a higher level</font>

194
00:08:12,040 --> 00:08:20,410
<font color="#E5E5E5">and focusing on</font><font color="#CCCCCC"> the data</font><font color="#E5E5E5"> instead of the</font>

195
00:08:14,230 --> 00:08:22,240
transport layer<font color="#CCCCCC"> there are two ways we</font>

196
00:08:20,410 --> 00:08:25,240
can deliver content signatures to

197
00:08:22,240 --> 00:08:27,700
Firefox users the first one is in an

198
00:08:25,240 --> 00:08:30,640
HTTP response header<font color="#E5E5E5"> so imagine you have</font>

199
00:08:27,700 --> 00:08:34,270
<font color="#E5E5E5">an API response that is the body of your</font>

200
00:08:30,640 --> 00:08:35,710
<font color="#E5E5E5">HTTP response</font><font color="#CCCCCC"> and we signed the body of</font>

201
00:08:34,270 --> 00:08:38,169
<font color="#E5E5E5">the entire response and we put the</font>

202
00:08:35,710 --> 00:08:41,620
signature<font color="#E5E5E5"> inside of the headers and if</font>

203
00:08:38,169 --> 00:08:43,478
<font color="#E5E5E5">Firefox</font><font color="#CCCCCC"> we treat the HTTP response</font><font color="#E5E5E5"> and</font>

204
00:08:41,620 --> 00:08:45,550
sees a<font color="#CCCCCC"> compton</font><font color="#E5E5E5"> Singh at your header it</font>

205
00:08:43,479 --> 00:08:47,650
will verify the<font color="#E5E5E5"> body with the signature</font>

206
00:08:45,550 --> 00:08:48,939
that's<font color="#E5E5E5"> in the header</font><font color="#CCCCCC"> and that's great</font>

207
00:08:47,650 --> 00:08:50,560
because<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> completely transparent</font><font color="#E5E5E5"> to</font>

208
00:08:48,940 --> 00:08:53,260
applications but<font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> want to</font>

209
00:08:50,560 --> 00:08:55,719
<font color="#E5E5E5">have a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> more flexibility in</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> we</font>

210
00:08:53,260 --> 00:08:57,760
transport in verify<font color="#E5E5E5"> signature so second</font>

211
00:08:55,720 --> 00:09:00,220
<font color="#E5E5E5">method is the</font><font color="#CCCCCC"> one we use the most</font><font color="#E5E5E5"> which</font>

212
00:08:57,760 --> 00:09:01,120
actually places a signature inside of

213
00:09:00,220 --> 00:09:05,020
the<font color="#CCCCCC"> json dark</font>

214
00:09:01,120 --> 00:09:07,720
and that is returned by the API and we

215
00:09:05,020 --> 00:09:09,730
use<font color="#CCCCCC"> that for</font><font color="#E5E5E5"> example to return responses</font>

216
00:09:07,720 --> 00:09:11,920
on partial collections<font color="#E5E5E5"> for example if</font>

217
00:09:09,730 --> 00:09:14,620
you have a certificate blacklist<font color="#E5E5E5"> and</font>

218
00:09:11,920 --> 00:09:16,990
your<font color="#E5E5E5"> Firefox client maybe two or three</font>

219
00:09:14,620 --> 00:09:20,200
versions<font color="#CCCCCC"> behind</font><font color="#E5E5E5"> when it talks to our API</font>

220
00:09:16,990 --> 00:09:22,300
we will only send<font color="#CCCCCC"> you the the data</font>

221
00:09:20,200 --> 00:09:24,430
entries<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> are missing and the</font>

222
00:09:22,300 --> 00:09:26,680
signature however would<font color="#CCCCCC"> be applied on</font>

223
00:09:24,430 --> 00:09:29,290
the entire<font color="#E5E5E5"> collection and not just these</font>

224
00:09:26,680 --> 00:09:31,719
three entries so Firefox will recompile

225
00:09:29,290 --> 00:09:33,370
the original full collection<font color="#E5E5E5"> and then</font>

226
00:09:31,720 --> 00:09:34,510
verify<font color="#E5E5E5"> the signature and then</font>

227
00:09:33,370 --> 00:09:38,980
<font color="#CCCCCC">interconnection</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> where we</font>

228
00:09:34,510 --> 00:09:41,370
transport it<font color="#E5E5E5"> in the document so how does</font>

229
00:09:38,980 --> 00:09:43,630
<font color="#CCCCCC">it</font><font color="#E5E5E5"> work when we verify</font><font color="#CCCCCC"> Campton signature</font>

230
00:09:41,370 --> 00:09:47,350
<font color="#E5E5E5">Firefox makes a call to</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> web api that</font>

231
00:09:43,630 --> 00:09:49,839
<font color="#E5E5E5">we host and retrieves signed data it</font>

232
00:09:47,350 --> 00:09:52,420
will parse that signed data<font color="#E5E5E5"> and which</font>

233
00:09:49,839 --> 00:09:54,580
reads a signature<font color="#E5E5E5"> and retrieve the</font><font color="#CCCCCC"> x5u</font>

234
00:09:52,420 --> 00:09:56,079
<font color="#E5E5E5">value that locates the chain of</font>

235
00:09:54,580 --> 00:09:58,270
certificates and then<font color="#E5E5E5"> it will go talk to</font>

236
00:09:56,080 --> 00:09:59,680
accountant delivery network and retrieve

237
00:09:58,270 --> 00:10:01,990
that<font color="#E5E5E5"> chain of certificate that just a</font>

238
00:09:59,680 --> 00:10:06,250
text file<font color="#E5E5E5"> with the entity certificate</font>

239
00:10:01,990 --> 00:10:08,920
<font color="#E5E5E5">the intermediate and the</font><font color="#CCCCCC"> route it will</font>

240
00:10:06,250 --> 00:10:10,570
then pass that chain and verify that<font color="#E5E5E5"> the</font>

241
00:10:08,920 --> 00:10:12,880
entity was signed by the<font color="#CCCCCC"> intermediate</font>

242
00:10:10,570 --> 00:10:14,980
that<font color="#E5E5E5"> was signed by the root and then he</font>

243
00:10:12,880 --> 00:10:17,140
would compare the<font color="#CCCCCC"> common name of the</font>

244
00:10:14,980 --> 00:10:19,570
<font color="#E5E5E5">entity with</font><font color="#CCCCCC"> its application or the</font>

245
00:10:17,140 --> 00:10:22,800
application name it expects and that's

246
00:10:19,570 --> 00:10:25,000
similar<font color="#E5E5E5"> to how TLS verifies that the</font>

247
00:10:22,800 --> 00:10:26,979
certificate you're getting matches the

248
00:10:25,000 --> 00:10:28,270
website name that you're connected<font color="#CCCCCC"> to so</font>

249
00:10:26,980 --> 00:10:29,290
for example if you're<font color="#E5E5E5"> retrieving a</font>

250
00:10:28,270 --> 00:10:31,360
certificate blacklist

251
00:10:29,290 --> 00:10:33,670
<font color="#CCCCCC">yeah Firefox would expect the</font>

252
00:10:31,360 --> 00:10:34,690
certificate<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> name once URL that</font>

253
00:10:33,670 --> 00:10:38,260
<font color="#CCCCCC">content seeing</font><font color="#E5E5E5"> should have Mozilla</font>

254
00:10:34,690 --> 00:10:41,230
<font color="#CCCCCC">called and that allows us to to sign</font>

255
00:10:38,260 --> 00:10:43,029
data with their own certificate<font color="#E5E5E5"> with our</font>

256
00:10:41,230 --> 00:10:45,070
own branch and and one<font color="#E5E5E5"> application</font>

257
00:10:43,029 --> 00:10:49,180
cannot<font color="#E5E5E5"> use its certificate</font><font color="#CCCCCC"> designed data</font>

258
00:10:45,070 --> 00:10:50,890
for another<font color="#CCCCCC"> application any</font><font color="#E5E5E5"> favor</font><font color="#CCCCCC"> seeing</font>

259
00:10:49,180 --> 00:10:52,719
passes if we verify<font color="#E5E5E5"> the signature and</font>

260
00:10:50,890 --> 00:10:57,370
load the data and pass it to<font color="#CCCCCC"> the next</font>

261
00:10:52,720 --> 00:10:58,839
<font color="#E5E5E5">level</font><font color="#CCCCCC"> so one interesting aspect here is</font>

262
00:10:57,370 --> 00:11:01,600
<font color="#E5E5E5">your professional security</font><font color="#CCCCCC"> of this</font>

263
00:10:58,839 --> 00:11:03,610
<font color="#E5E5E5">infrastructure</font><font color="#CCCCCC"> what we really wanted I</font>

264
00:11:01,600 --> 00:11:06,040
talked<font color="#CCCCCC"> about this</font><font color="#E5E5E5"> with the web</font>

265
00:11:03,610 --> 00:11:09,910
application security<font color="#CCCCCC"> point is is to have</font>

266
00:11:06,040 --> 00:11:11,380
<font color="#E5E5E5">an air gap between the web application</font>

267
00:11:09,910 --> 00:11:13,360
<font color="#E5E5E5">front ends the one that I exposed</font><font color="#CCCCCC"> to the</font>

268
00:11:11,380 --> 00:11:14,540
<font color="#CCCCCC">Internet and potentially exposed to</font>

269
00:11:13,360 --> 00:11:16,310
compromises

270
00:11:14,540 --> 00:11:18,310
and in the<font color="#E5E5E5"> layer</font><font color="#CCCCCC"> that applies the</font>

271
00:11:16,310 --> 00:11:21,380
<font color="#E5E5E5">signature and the way we do this is</font>

272
00:11:18,310 --> 00:11:22,699
essentially by having admin panels that

273
00:11:21,380 --> 00:11:24,650
<font color="#E5E5E5">are completely isolated</font><font color="#CCCCCC"> from the</font>

274
00:11:22,700 --> 00:11:26,960
<font color="#CCCCCC">internet and when we want to make a</font>

275
00:11:24,650 --> 00:11:28,130
change<font color="#CCCCCC"> to</font><font color="#E5E5E5"> data collection a developer</font>

276
00:11:26,960 --> 00:11:29,510
will go into<font color="#E5E5E5"> that admin panel and</font>

277
00:11:28,130 --> 00:11:32,270
<font color="#E5E5E5">propose a change it would be a peer</font>

278
00:11:29,510 --> 00:11:34,610
review at your<font color="#E5E5E5"> signup step and that</font>

279
00:11:32,270 --> 00:11:36,439
admin panel<font color="#E5E5E5"> will be talking</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> an</font>

280
00:11:34,610 --> 00:11:38,480
internal signing service that we signed

281
00:11:36,440 --> 00:11:39,500
the data<font color="#E5E5E5"> and give it back</font><font color="#CCCCCC"> to the</font><font color="#E5E5E5"> enemy</font>

282
00:11:38,480 --> 00:11:41,300
panel<font color="#E5E5E5"> and that part of the</font>

283
00:11:39,500 --> 00:11:43,400
infrastructure is completely air-gapped

284
00:11:41,300 --> 00:11:45,260
from the internet<font color="#E5E5E5"> that</font><font color="#CCCCCC"> data would be</font>

285
00:11:43,400 --> 00:11:47,840
<font color="#E5E5E5">written in the database and the</font><font color="#CCCCCC"> web</font>

286
00:11:45,260 --> 00:11:50,810
application<font color="#E5E5E5"> front-end will have access</font>

287
00:11:47,840 --> 00:11:52,520
<font color="#E5E5E5">to that database in read-only</font><font color="#CCCCCC"> mode so</font>

288
00:11:50,810 --> 00:11:53,989
<font color="#E5E5E5">that even if it's compromised it can</font>

289
00:11:52,520 --> 00:11:58,520
only read data that was already<font color="#E5E5E5"> signed</font>

290
00:11:53,990 --> 00:11:59,930
it you cannot modify<font color="#E5E5E5"> that data</font><font color="#CCCCCC"> I'm going</font>

291
00:11:58,520 --> 00:12:01,310
<font color="#CCCCCC">to talk a bit</font><font color="#E5E5E5"> more about signing</font>

292
00:11:59,930 --> 00:12:02,660
certificates latex<font color="#E5E5E5"> and interesting</font>

293
00:12:01,310 --> 00:12:04,939
problems here but<font color="#E5E5E5"> we essentially try to</font>

294
00:12:02,660 --> 00:12:06,530
<font color="#E5E5E5">use</font><font color="#CCCCCC"> shortleaf certificates</font><font color="#E5E5E5"> so that in</font>

295
00:12:04,940 --> 00:12:07,820
the unfortunate event<font color="#CCCCCC"> that one of the</font>

296
00:12:06,530 --> 00:12:09,890
certificate would<font color="#E5E5E5"> be left on a</font>

297
00:12:07,820 --> 00:12:13,100
<font color="#E5E5E5">duplicated server then it wouldn't be</font>

298
00:12:09,890 --> 00:12:16,069
able to<font color="#E5E5E5"> be reused</font><font color="#CCCCCC"> down the road by by an</font>

299
00:12:13,100 --> 00:12:18,140
attacker<font color="#CCCCCC"> and like most certificate</font>

300
00:12:16,070 --> 00:12:19,970
authorities we store the<font color="#CCCCCC"> route</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> PKI</font>

301
00:12:18,140 --> 00:12:21,890
<font color="#CCCCCC">in offline HSMs</font>

302
00:12:19,970 --> 00:12:24,050
and<font color="#CCCCCC"> we'll require</font><font color="#E5E5E5"> a physical</font><font color="#CCCCCC"> access to</font>

303
00:12:21,890 --> 00:12:27,650
<font color="#CCCCCC">issue new intermediates and</font><font color="#E5E5E5"> we knew</font>

304
00:12:24,050 --> 00:12:28,969
those intermediates so some of<font color="#E5E5E5"> the</font>

305
00:12:27,650 --> 00:12:31,970
interesting problem we had to solve

306
00:12:28,970 --> 00:12:35,120
implementing this protocol<font color="#CCCCCC"> are first</font>

307
00:12:31,970 --> 00:12:37,100
checking certificate validity<font color="#E5E5E5"> measuring</font>

308
00:12:35,120 --> 00:12:40,550
and getting notifications on

309
00:12:37,100 --> 00:12:42,020
verification failures and preparing<font color="#E5E5E5"> for</font>

310
00:12:40,550 --> 00:12:45,079
emergency revocation and<font color="#E5E5E5"> you will see</font>

311
00:12:42,020 --> 00:12:47,630
that<font color="#E5E5E5"> those are very very close to the</font>

312
00:12:45,080 --> 00:12:53,390
kind<font color="#CCCCCC"> of problem we see in the web key</font>

313
00:12:47,630 --> 00:12:55,520
<font color="#E5E5E5">PKI certificate validity essentially is</font>

314
00:12:53,390 --> 00:12:58,010
a step that<font color="#CCCCCC"> a client</font><font color="#E5E5E5"> will take to verify</font>

315
00:12:55,520 --> 00:13:01,970
that a<font color="#CCCCCC"> certificate is currently valid</font>

316
00:12:58,010 --> 00:13:04,640
<font color="#E5E5E5">and can currently sign data the problem</font>

317
00:13:01,970 --> 00:13:07,520
with this is that<font color="#CCCCCC"> a significant portion</font>

318
00:13:04,640 --> 00:13:11,180
<font color="#E5E5E5">of clients have clocks that</font><font color="#CCCCCC"> are out of</font>

319
00:13:07,520 --> 00:13:14,150
date<font color="#CCCCCC"> so on this graph this graph by the</font>

320
00:13:11,180 --> 00:13:17,349
way uses<font color="#CCCCCC"> logarithmic</font><font color="#E5E5E5"> scale</font><font color="#CCCCCC"> so be careful</font>

321
00:13:14,150 --> 00:13:20,410
how you read<font color="#CCCCCC"> it but the spike on the</font>

322
00:13:17,350 --> 00:13:23,150
<font color="#E5E5E5">right side of the graph in the green box</font>

323
00:13:20,410 --> 00:13:25,250
indicates users that are at the current

324
00:13:23,150 --> 00:13:28,560
time that are up to<font color="#CCCCCC"> date and that's</font><font color="#E5E5E5"> a</font>

325
00:13:25,250 --> 00:13:31,380
<font color="#CCCCCC">majority of our users this</font><font color="#E5E5E5"> is really 98</font>

326
00:13:28,560 --> 00:13:34,229
<font color="#CCCCCC">8% of</font><font color="#E5E5E5"> our users and then inside of</font><font color="#CCCCCC"> that</font>

327
00:13:31,380 --> 00:13:36,029
green box we have<font color="#E5E5E5"> about 1% of our users</font>

328
00:13:34,230 --> 00:13:38,790
that<font color="#E5E5E5"> have clocks that are within 30 days</font>

329
00:13:36,029 --> 00:13:40,110
of current time<font color="#CCCCCC"> they</font><font color="#E5E5E5"> could</font><font color="#CCCCCC"> be in the</font>

330
00:13:38,790 --> 00:13:41,579
past or in the future

331
00:13:40,110 --> 00:13:43,920
they don't have<font color="#E5E5E5"> accurate clocks but</font>

332
00:13:41,580 --> 00:13:46,529
they're not too<font color="#CCCCCC"> far out</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> then we had</font>

333
00:13:43,920 --> 00:13:48,390
<font color="#CCCCCC">0.1% of</font><font color="#E5E5E5"> our users that</font><font color="#CCCCCC"> have clocks</font><font color="#E5E5E5"> that</font>

334
00:13:46,529 --> 00:13:51,060
<font color="#E5E5E5">are completely fubar</font><font color="#CCCCCC"> I completely</font>

335
00:13:48,390 --> 00:13:52,680
outside<font color="#E5E5E5"> of</font><font color="#CCCCCC"> those three windows</font><font color="#E5E5E5"> and for</font>

336
00:13:51,060 --> 00:13:54,000
<font color="#CCCCCC">those users chances are that</font><font color="#E5E5E5"> their</font>

337
00:13:52,680 --> 00:13:55,770
<font color="#E5E5E5">experience on the Internet is already</font>

338
00:13:54,000 --> 00:13:59,520
pretty poor because they can<font color="#E5E5E5"> probably</font>

339
00:13:55,770 --> 00:14:03,170
not connect<font color="#CCCCCC"> to most</font><font color="#E5E5E5"> websites but we are</font>

340
00:13:59,520 --> 00:14:05,579
in a situation<font color="#E5E5E5"> where we actually want to</font>

341
00:14:03,170 --> 00:14:06,719
still<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able to update those users we</font>

342
00:14:05,580 --> 00:14:09,990
don't want to leave them behind because

343
00:14:06,720 --> 00:14:12,930
<font color="#E5E5E5">for</font><font color="#CCCCCC"> us even</font><font color="#E5E5E5"> 0.1% of users is still a</font>

344
00:14:09,990 --> 00:14:14,279
fairly large number<font color="#CCCCCC"> of users</font><font color="#E5E5E5"> so we're</font>

345
00:14:12,930 --> 00:14:16,620
not<font color="#CCCCCC"> just going</font><font color="#E5E5E5"> to cut them out</font><font color="#CCCCCC"> of the</font>

346
00:14:14,279 --> 00:14:22,589
<font color="#CCCCCC">Internet</font><font color="#E5E5E5"> but we had to make a decision</font>

347
00:14:16,620 --> 00:14:25,170
between allowing clients to to verify

348
00:14:22,589 --> 00:14:26,730
<font color="#E5E5E5">certificates</font><font color="#CCCCCC"> that already expired</font><font color="#E5E5E5"> which</font>

349
00:14:25,170 --> 00:14:28,319
potentially could<font color="#E5E5E5"> allow an attacker to</font>

350
00:14:26,730 --> 00:14:30,570
<font color="#CCCCCC">steal certificate and reuse</font><font color="#E5E5E5"> it six</font>

351
00:14:28,320 --> 00:14:32,790
months<font color="#CCCCCC"> from now or leaving</font><font color="#E5E5E5"> some of our</font>

352
00:14:30,570 --> 00:14:35,490
<font color="#E5E5E5">users behind and we try to find a</font>

353
00:14:32,790 --> 00:14:37,620
milligram<font color="#CCCCCC"> with essentially using 90 days</font>

354
00:14:35,490 --> 00:14:41,580
certificates but<font color="#CCCCCC"> only using them for 30</font>

355
00:14:37,620 --> 00:14:43,980
days so we don't use them<font color="#CCCCCC"> we just</font><font color="#E5E5E5"> use</font>

356
00:14:41,580 --> 00:14:46,800
the 30 days in<font color="#E5E5E5"> the mill we let the 30</font>

357
00:14:43,980 --> 00:14:48,420
days prior in<font color="#E5E5E5"> the so it is after a</font><font color="#CCCCCC"> news</font>

358
00:14:46,800 --> 00:14:51,030
so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> clients are</font><font color="#CCCCCC"> a little bit outside</font>

359
00:14:48,420 --> 00:14:53,160
<font color="#E5E5E5">within 30 days of an accurate clock can</font>

360
00:14:51,030 --> 00:14:55,290
still verify those certificates<font color="#E5E5E5"> and that</font>

361
00:14:53,160 --> 00:14:57,150
was an important design decision<font color="#E5E5E5"> when we</font>

362
00:14:55,290 --> 00:14:59,370
were building this in actually<font color="#CCCCCC"> being</font>

363
00:14:57,150 --> 00:15:03,810
<font color="#E5E5E5">able to measure how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> users are going</font>

364
00:14:59,370 --> 00:15:05,700
<font color="#CCCCCC">to be left behind once we implement this</font>

365
00:15:03,810 --> 00:15:08,369
protocol<font color="#E5E5E5"> and that's</font><font color="#CCCCCC"> also the reason why</font>

366
00:15:05,700 --> 00:15:10,770
<font color="#CCCCCC">we haven't yet implemented content</font>

367
00:15:08,370 --> 00:15:14,220
signature on some of our channels that

368
00:15:10,770 --> 00:15:15,360
we think are too sensitive<font color="#CCCCCC"> for this what</font>

369
00:15:14,220 --> 00:15:18,060
we<font color="#E5E5E5"> really don't want</font><font color="#CCCCCC"> to leave users</font>

370
00:15:15,360 --> 00:15:20,490
behind so<font color="#E5E5E5"> more work is needed here</font><font color="#CCCCCC"> to</font>

371
00:15:18,060 --> 00:15:22,709
understand exactly how how big<font color="#CCCCCC"> a</font>

372
00:15:20,490 --> 00:15:24,990
<font color="#CCCCCC">population will be leaving</font><font color="#E5E5E5"> behind if we</font>

373
00:15:22,709 --> 00:15:29,130
apply a strict certificate validation to

374
00:15:24,990 --> 00:15:31,709
some of our channels measuring

375
00:15:29,130 --> 00:15:33,810
validation failures is is also<font color="#CCCCCC"> a very</font>

376
00:15:31,709 --> 00:15:36,079
<font color="#CCCCCC">interesting problem if you apply comes</font>

377
00:15:33,810 --> 00:15:39,359
in signature or any sort of signature

378
00:15:36,080 --> 00:15:41,220
method<font color="#E5E5E5"> to</font><font color="#CCCCCC"> your to your product you want</font>

379
00:15:39,360 --> 00:15:42,030
<font color="#E5E5E5">to know how many people</font><font color="#CCCCCC"> are failing to</font>

380
00:15:41,220 --> 00:15:43,410
<font color="#E5E5E5">verify this</font>

381
00:15:42,030 --> 00:15:45,630
interest but that's actually<font color="#E5E5E5"> really hard</font>

382
00:15:43,410 --> 00:15:48,600
<font color="#CCCCCC">to do TS doesn't have a good mechanism</font>

383
00:15:45,630 --> 00:15:50,070
for<font color="#E5E5E5"> this and in our product in Firefox</font>

384
00:15:48,600 --> 00:15:53,040
we have something called telemetry that

385
00:15:50,070 --> 00:15:55,200
<font color="#CCCCCC">will send a message to us on certain</font>

386
00:15:53,040 --> 00:15:57,540
events<font color="#CCCCCC"> and</font><font color="#E5E5E5"> some of the future work we</font>

387
00:15:55,200 --> 00:15:59,880
want to do here is have better to

388
00:15:57,540 --> 00:16:02,430
demonstrate data when signatures<font color="#E5E5E5"> fail to</font>

389
00:15:59,880 --> 00:16:04,080
verify<font color="#E5E5E5"> do you understand why that</font>

390
00:16:02,430 --> 00:16:06,329
verification failed<font color="#E5E5E5"> it could be because</font>

391
00:16:04,080 --> 00:16:08,430
<font color="#E5E5E5">the client had a bad block but maybe</font>

392
00:16:06,330 --> 00:16:10,740
<font color="#E5E5E5">because I client is in a</font><font color="#CCCCCC"> situation where</font>

393
00:16:08,430 --> 00:16:12,780
the connection is<font color="#E5E5E5"> being intercepted and</font>

394
00:16:10,740 --> 00:16:14,940
modified so there is<font color="#E5E5E5"> more work</font><font color="#CCCCCC"> to do</font>

395
00:16:12,780 --> 00:16:17,010
here as well<font color="#E5E5E5"> to really understand the</font>

396
00:16:14,940 --> 00:16:23,460
situation in<font color="#E5E5E5"> which a user is not able</font><font color="#CCCCCC"> to</font>

397
00:16:17,010 --> 00:16:28,530
verify<font color="#E5E5E5"> content signatures and finally</font>

398
00:16:23,460 --> 00:16:30,930
revocation if you follow the web<font color="#CCCCCC"> PKI a</font>

399
00:16:28,530 --> 00:16:33,089
little bit you<font color="#E5E5E5"> know that revoking</font>

400
00:16:30,930 --> 00:16:37,650
certificates is a hard problem<font color="#E5E5E5"> mostly</font>

401
00:16:33,090 --> 00:16:40,860
unsolved and<font color="#CCCCCC"> CAS</font><font color="#E5E5E5"> have tried to implement</font>

402
00:16:37,650 --> 00:16:42,360
certificate revocation<font color="#E5E5E5"> list and</font><font color="#CCCCCC"> OCSP</font><font color="#E5E5E5"> but</font>

403
00:16:40,860 --> 00:16:44,400
those have<font color="#E5E5E5"> their drawbacks they don't</font>

404
00:16:42,360 --> 00:16:45,840
work<font color="#E5E5E5"> really well so browser vendors have</font>

405
00:16:44,400 --> 00:16:49,920
implemented their<font color="#E5E5E5"> own revocation</font>

406
00:16:45,840 --> 00:16:51,900
techniques Firefox<font color="#E5E5E5"> has one</font><font color="#CCCCCC"> crl</font><font color="#E5E5E5"> Chrome</font>

407
00:16:49,920 --> 00:16:54,660
has another one<font color="#E5E5E5"> we all have a way to say</font>

408
00:16:51,900 --> 00:16:56,610
this certificate<font color="#E5E5E5"> authority or this</font>

409
00:16:54,660 --> 00:16:58,170
<font color="#CCCCCC">intermediator maybe this</font><font color="#E5E5E5"> entity</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> no</font>

410
00:16:56,610 --> 00:16:59,550
longer<font color="#E5E5E5"> trustworthy so we're going to</font>

411
00:16:58,170 --> 00:17:02,160
tell all<font color="#CCCCCC"> of our users to stop trusting</font>

412
00:16:59,550 --> 00:17:04,438
<font color="#CCCCCC">it and we wanted to be able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> reuse a</font>

413
00:17:02,160 --> 00:17:06,119
similar mechanism<font color="#E5E5E5"> for content signature</font>

414
00:17:04,439 --> 00:17:08,069
in the event that one<font color="#CCCCCC"> of our</font>

415
00:17:06,119 --> 00:17:10,319
<font color="#E5E5E5">intermediate or an entity certificate</font>

416
00:17:08,069 --> 00:17:12,300
<font color="#E5E5E5">would leak or we would get attacked and</font>

417
00:17:10,319 --> 00:17:15,329
be able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> protect our</font><font color="#CCCCCC"> user by saying</font>

418
00:17:12,300 --> 00:17:17,849
you should<font color="#E5E5E5"> not trust that particular</font>

419
00:17:15,329 --> 00:17:19,260
signing certificate interestingly here

420
00:17:17,849 --> 00:17:22,980
<font color="#CCCCCC">there is a bit of a</font><font color="#E5E5E5"> chicken and</font><font color="#CCCCCC"> egg</font>

421
00:17:19,260 --> 00:17:24,780
problem<font color="#E5E5E5"> where the once URL data</font>

422
00:17:22,980 --> 00:17:26,310
collection itself<font color="#E5E5E5"> is</font><font color="#CCCCCC"> signed with content</font>

423
00:17:24,780 --> 00:17:27,660
<font color="#CCCCCC">signatures so technically you could</font>

424
00:17:26,310 --> 00:17:30,389
revoke the certificate that<font color="#E5E5E5"> signed</font>

425
00:17:27,660 --> 00:17:32,550
itself<font color="#E5E5E5"> so we had to work around a couple</font>

426
00:17:30,390 --> 00:17:34,080
<font color="#CCCCCC">of interesting</font><font color="#E5E5E5"> issues here and then</font>

427
00:17:32,550 --> 00:17:36,570
there's a problem of<font color="#E5E5E5"> revoking the root</font>

428
00:17:34,080 --> 00:17:39,510
of the internal<font color="#CCCCCC"> PKI itself what happens</font>

429
00:17:36,570 --> 00:17:41,639
if the root itself leaks<font color="#E5E5E5"> and for that</font>

430
00:17:39,510 --> 00:17:44,340
essentially we<font color="#CCCCCC"> would</font><font color="#E5E5E5"> have to issue a</font>

431
00:17:41,640 --> 00:17:46,980
major code change<font color="#E5E5E5"> to Firefox issue a new</font>

432
00:17:44,340 --> 00:17:49,679
release<font color="#CCCCCC"> of Firefox</font><font color="#E5E5E5"> and essentially we</font>

433
00:17:46,980 --> 00:17:51,150
place at<font color="#CCCCCC"> PKI entirely</font><font color="#E5E5E5"> we know that we</font>

434
00:17:49,680 --> 00:17:53,790
will<font color="#E5E5E5"> be</font><font color="#CCCCCC"> living users behind</font><font color="#E5E5E5"> if we do</font>

435
00:17:51,150 --> 00:17:55,090
that<font color="#E5E5E5"> so it's a it's a dramatic event but</font>

436
00:17:53,790 --> 00:18:00,100
we have somewhat of a solution

437
00:17:55,090 --> 00:18:01,889
<font color="#E5E5E5">should that</font><font color="#CCCCCC"> ever happen so if you want</font>

438
00:18:00,100 --> 00:18:05,110
<font color="#E5E5E5">to do something similar in your product</font>

439
00:18:01,890 --> 00:18:07,000
<font color="#CCCCCC">it is actually not that</font><font color="#E5E5E5"> hard to do in</font>

440
00:18:05,110 --> 00:18:09,399
terms<font color="#E5E5E5"> of implementation complexity it</font>

441
00:18:07,000 --> 00:18:12,520
was much easier than<font color="#E5E5E5"> I had expected</font><font color="#CCCCCC"> that</font>

442
00:18:09,400 --> 00:18:14,590
<font color="#CCCCCC">may be</font><font color="#E5E5E5"> because Firefox already has all</font>

443
00:18:12,520 --> 00:18:17,740
of the<font color="#E5E5E5"> components to manage a PKI due to</font>

444
00:18:14,590 --> 00:18:19,899
the<font color="#E5E5E5"> way</font><font color="#CCCCCC"> PGI in HTTP so the code changes</font>

445
00:18:17,740 --> 00:18:22,750
<font color="#E5E5E5">in Firefox were actually very small the</font>

446
00:18:19,900 --> 00:18:25,440
the main patch is only 800<font color="#E5E5E5"> lines so it's</font>

447
00:18:22,750 --> 00:18:28,290
<font color="#E5E5E5">very small for a new signing algorithm</font>

448
00:18:25,440 --> 00:18:30,430
<font color="#CCCCCC">we wrote a</font><font color="#E5E5E5"> back end to sign that data</font>

449
00:18:28,290 --> 00:18:32,830
<font color="#E5E5E5">which is a little bit bigger but</font><font color="#CCCCCC"> still</font>

450
00:18:30,430 --> 00:18:34,510
nothing<font color="#E5E5E5"> nothing too ridiculous here and</font>

451
00:18:32,830 --> 00:18:36,250
the team that<font color="#CCCCCC"> worked on this who is</font>

452
00:18:34,510 --> 00:18:39,430
essentially myself and three<font color="#CCCCCC"> other</font>

453
00:18:36,250 --> 00:18:40,600
people<font color="#CCCCCC"> were part of</font><font color="#E5E5E5"> the core design team</font>

454
00:18:39,430 --> 00:18:42,430
<font color="#CCCCCC">an implementation</font><font color="#E5E5E5"> team and we had</font>

455
00:18:40,600 --> 00:18:43,899
another<font color="#E5E5E5"> four or five people</font><font color="#CCCCCC"> help with</font>

456
00:18:42,430 --> 00:18:46,240
<font color="#E5E5E5">the testing and implementation and</font>

457
00:18:43,900 --> 00:18:49,240
maintenance<font color="#E5E5E5"> of that project</font><font color="#CCCCCC"> so again not</font>

458
00:18:46,240 --> 00:18:50,950
<font color="#CCCCCC">something</font><font color="#E5E5E5"> that required a very large</font>

459
00:18:49,240 --> 00:18:53,080
team or a lot<font color="#E5E5E5"> of resources and I would</font>

460
00:18:50,950 --> 00:18:56,070
really<font color="#E5E5E5"> invite any organization</font><font color="#CCCCCC"> that</font>

461
00:18:53,080 --> 00:18:58,960
publishes products and and<font color="#E5E5E5"> and actually</font>

462
00:18:56,070 --> 00:19:02,800
talks to<font color="#E5E5E5"> Web API is to consider this</font>

463
00:18:58,960 --> 00:19:05,470
kind<font color="#E5E5E5"> of mechanism so this is</font><font color="#CCCCCC"> a Content</font>

464
00:19:02,800 --> 00:19:07,780
signature the code is open<font color="#CCCCCC"> source you</font>

465
00:19:05,470 --> 00:19:09,850
<font color="#CCCCCC">can check obviously the</font><font color="#E5E5E5"> Firefox code in</font>

466
00:19:07,780 --> 00:19:10,930
the Firefox source code repository<font color="#CCCCCC"> and</font>

467
00:19:09,850 --> 00:19:13,270
if you want to take a<font color="#E5E5E5"> look at the</font>

468
00:19:10,930 --> 00:19:16,110
<font color="#CCCCCC">backend its online</font><font color="#E5E5E5"> as well and I'm happy</font>

469
00:19:13,270 --> 00:19:16,110
<font color="#CCCCCC">to</font><font color="#E5E5E5"> take any questions</font>

