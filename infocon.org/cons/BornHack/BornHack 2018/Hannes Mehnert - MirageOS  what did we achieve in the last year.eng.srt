1
00:00:02,750 --> 00:00:05,810
okay so

2
00:02:55,390 --> 00:03:00,950
<font color="#E5E5E5">okay please welcome Hennis and you were</font>

3
00:02:57,950 --> 00:03:05,000
going to talk<font color="#CCCCCC"> about me Asha</font><font color="#E5E5E5"> always thank</font>

4
00:03:00,950 --> 00:03:07,910
you thank you<font color="#E5E5E5"> yeah my name is Hannes and</font>

5
00:03:05,000 --> 00:03:10,850
I talked<font color="#E5E5E5"> on the last two born</font><font color="#CCCCCC"> hacks</font>

6
00:03:07,910 --> 00:03:14,329
already over<font color="#CCCCCC"> midrash yes so this time</font><font color="#E5E5E5"> I</font>

7
00:03:10,850 --> 00:03:16,519
will focus more about the stuff<font color="#CCCCCC"> we did</font>

8
00:03:14,330 --> 00:03:18,890
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> within the last year but I will</font>

9
00:03:16,520 --> 00:03:24,470
<font color="#E5E5E5">also give first a brief introduction</font><font color="#CCCCCC"> to</font>

10
00:03:18,890 --> 00:03:28,339
<font color="#E5E5E5">my office then my current situation</font><font color="#CCCCCC"> also</font>

11
00:03:24,470 --> 00:03:32,540
<font color="#E5E5E5">and then what I what I find noteworthy</font>

12
00:03:28,340 --> 00:03:35,780
over the last year and<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is an old</font>

13
00:03:32,540 --> 00:03:38,989
<font color="#E5E5E5">slide this is mainly three points its</font>

14
00:03:35,780 --> 00:03:42,020
<font color="#CCCCCC">conics which is repository signing then</font>

15
00:03:38,990 --> 00:03:45,560
a<font color="#CCCCCC"> dns stack and then calif project I've</font>

16
00:03:42,020 --> 00:03:49,100
been working on over the<font color="#CCCCCC"> last years so</font>

17
00:03:45,560 --> 00:03:52,130
what<font color="#CCCCCC"> does me</font><font color="#E5E5E5"> Russia is it is well I like</font>

18
00:03:49,100 --> 00:03:54,440
this visualization<font color="#E5E5E5"> of a stack what we</font>

19
00:03:52,130 --> 00:03:57,680
commonly<font color="#CCCCCC"> use</font><font color="#E5E5E5"> as a service so we use</font>

20
00:03:54,440 --> 00:03:59,750
applications so the application<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just</font>

21
00:03:57,680 --> 00:04:01,910
on<font color="#E5E5E5"> top on top of year and the</font>

22
00:03:59,750 --> 00:04:04,040
application contains of some

23
00:04:01,910 --> 00:04:06,170
configuration files distributed in your

24
00:04:04,040 --> 00:04:08,299
file system somewhere<font color="#E5E5E5"> then an</font>

25
00:04:06,170 --> 00:04:15,109
application binary<font color="#E5E5E5"> and the binary is</font>

26
00:04:08,300 --> 00:04:17,690
like the dynamically linked<font color="#E5E5E5"> interpreted</font>

27
00:04:15,110 --> 00:04:19,970
Python script or<font color="#CCCCCC"> something like that so</font>

28
00:04:17,690 --> 00:04:23,690
you also have a<font color="#E5E5E5"> language runtime</font><font color="#CCCCCC"> like</font>

29
00:04:19,970 --> 00:04:26,270
the Python language runtime or the C

30
00:04:23,690 --> 00:04:30,410
language runtime so the<font color="#CCCCCC"> Dipsy and so</font><font color="#E5E5E5"> on</font>

31
00:04:26,270 --> 00:04:32,750
and that's only the<font color="#E5E5E5"> stuff you see or you</font>

32
00:04:30,410 --> 00:04:34,850
you you face on your application side

33
00:04:32,750 --> 00:04:37,100
what you are<font color="#CCCCCC"> actually interested in but</font>

34
00:04:34,850 --> 00:04:39,950
then you also have<font color="#CCCCCC"> this operating</font><font color="#E5E5E5"> system</font>

35
00:04:37,100 --> 00:04:42,590
<font color="#CCCCCC">which is usually a</font><font color="#E5E5E5"> fully fledged system</font>

36
00:04:39,950 --> 00:04:45,469
with user processes kernel threads and

37
00:04:42,590 --> 00:04:47,330
file system<font color="#E5E5E5"> and networks tag and this is</font>

38
00:04:45,470 --> 00:04:50,570
all<font color="#E5E5E5"> implemented in the kernel and this</font>

39
00:04:47,330 --> 00:04:53,930
very general purpose and very much and

40
00:04:50,570 --> 00:04:56,180
then you execute basically that

41
00:04:53,930 --> 00:04:58,790
application within that operating<font color="#CCCCCC"> system</font>

42
00:04:56,180 --> 00:05:00,380
on top of a<font color="#E5E5E5"> hypervisor so the hypervisor</font>

43
00:04:58,790 --> 00:05:02,390
<font color="#E5E5E5">is another operating system</font><font color="#CCCCCC"> which</font>

44
00:05:00,380 --> 00:05:04,400
manages<font color="#E5E5E5"> all these virtual machines</font><font color="#CCCCCC"> so</font>

45
00:05:02,390 --> 00:05:07,210
<font color="#CCCCCC">you have a lot of layers</font><font color="#E5E5E5"> of abstraction</font>

46
00:05:04,400 --> 00:05:10,568
and a lot<font color="#CCCCCC"> of layers</font><font color="#E5E5E5"> of</font>

47
00:05:07,210 --> 00:05:13,539
coat<font color="#E5E5E5"> which are the year and so debugging</font>

48
00:05:10,569 --> 00:05:17,080
<font color="#CCCCCC">all of</font><font color="#E5E5E5"> that stuff is complex because</font><font color="#CCCCCC"> you</font>

49
00:05:13,539 --> 00:05:18,669
need to go down<font color="#E5E5E5"> drill down some layers</font>

50
00:05:17,080 --> 00:05:21,460
every<font color="#E5E5E5"> now and then and then you</font><font color="#CCCCCC"> have to</font>

51
00:05:18,669 --> 00:05:24,068
get to<font color="#E5E5E5"> know to the file system kernel</font>

52
00:05:21,460 --> 00:05:28,270
code or so in order to<font color="#E5E5E5"> debug concrete</font>

53
00:05:24,069 --> 00:05:30,849
problem<font color="#E5E5E5"> so how</font><font color="#CCCCCC"> that application is</font>

54
00:05:28,270 --> 00:05:32,438
<font color="#E5E5E5">basically the top of the iceberg</font><font color="#CCCCCC"> is</font>

55
00:05:30,849 --> 00:05:34,449
basically the code<font color="#E5E5E5"> you actually</font><font color="#CCCCCC"> care</font>

56
00:05:32,439 --> 00:05:37,569
<font color="#CCCCCC">about the code you developed the stuff</font>

57
00:05:34,449 --> 00:05:39,969
you do but then<font color="#E5E5E5"> you have the bottom of</font>

58
00:05:37,569 --> 00:05:42,159
<font color="#E5E5E5">the iceberg which you can't see and that</font>

59
00:05:39,969 --> 00:05:45,460
<font color="#E5E5E5">is the code that</font><font color="#CCCCCC"> the operating system</font>

60
00:05:42,159 --> 00:05:48,639
insists<font color="#CCCCCC"> you to to use and insist you</font><font color="#E5E5E5"> to</font>

61
00:05:45,460 --> 00:05:51,029
you need and whenever there are<font color="#E5E5E5"> security</font>

62
00:05:48,639 --> 00:05:53,919
issues<font color="#E5E5E5"> in an application</font><font color="#CCCCCC"> also</font><font color="#E5E5E5"> or</font>

63
00:05:51,029 --> 00:05:58,330
security application here<font color="#E5E5E5"> two issues in</font>

64
00:05:53,919 --> 00:06:00,370
a whole program<font color="#E5E5E5"> you have to take into</font>

65
00:05:58,330 --> 00:06:02,500
<font color="#CCCCCC">consideration that</font><font color="#E5E5E5"> also the code you</font>

66
00:06:00,370 --> 00:06:04,960
<font color="#CCCCCC">don't care about but which is part of</font>

67
00:06:02,500 --> 00:06:09,099
the operating<font color="#CCCCCC"> system might be</font><font color="#E5E5E5"> vulnerable</font>

68
00:06:04,960 --> 00:06:10,719
<font color="#CCCCCC">so any security issue also</font><font color="#E5E5E5"> in the</font>

69
00:06:09,099 --> 00:06:16,900
operating<font color="#E5E5E5"> system may</font><font color="#CCCCCC"> affect your</font>

70
00:06:10,719 --> 00:06:18,370
application or your deployment<font color="#CCCCCC"> so what</font>

71
00:06:16,900 --> 00:06:21,969
<font color="#CCCCCC">does it</font><font color="#E5E5E5"> mean</font><font color="#CCCCCC"> Russia's me Russia is is a</font>

72
00:06:18,370 --> 00:06:24,580
library<font color="#E5E5E5"> operating system where each of</font>

73
00:06:21,969 --> 00:06:27,069
these systems<font color="#E5E5E5"> is tailored and tailored</font>

74
00:06:24,580 --> 00:06:31,000
<font color="#CCCCCC">exactly for that</font><font color="#E5E5E5"> purpose so only a</font>

75
00:06:27,069 --> 00:06:33,789
single<font color="#E5E5E5"> purpose</font><font color="#CCCCCC"> Virtual Machine it mostly</font>

76
00:06:31,000 --> 00:06:37,620
<font color="#CCCCCC">or mainly</font><font color="#E5E5E5"> targets hypervisor technology</font>

77
00:06:33,789 --> 00:06:40,300
as well<font color="#E5E5E5"> but instead</font><font color="#CCCCCC"> of but we reduce the</font>

78
00:06:37,620 --> 00:06:43,629
trusted code base<font color="#E5E5E5"> so we reduce the</font>

79
00:06:40,300 --> 00:06:46,240
attack<font color="#E5E5E5"> surface drastically and we also</font>

80
00:06:43,629 --> 00:06:49,419
reduce the<font color="#CCCCCC"> number of attack vectors</font><font color="#E5E5E5"> so</font>

81
00:06:46,240 --> 00:06:54,460
the different ways<font color="#CCCCCC"> you can get into the</font>

82
00:06:49,419 --> 00:06:57,128
system<font color="#CCCCCC"> are smaller because we use a high</font>

83
00:06:54,460 --> 00:06:59,258
<font color="#CCCCCC">level program language and we reduce the</font>

84
00:06:57,129 --> 00:07:02,199
<font color="#E5E5E5">trusted code base or the attack surface</font>

85
00:06:59,259 --> 00:07:05,460
by reducing the code size so instead of

86
00:07:02,199 --> 00:07:09,009
having everything in there<font color="#CCCCCC"> you have a</font>

87
00:07:05,460 --> 00:07:12,638
various single purpose<font color="#E5E5E5"> operating system</font>

88
00:07:09,009 --> 00:07:14,740
which solves exactly one problem so

89
00:07:12,639 --> 00:07:17,709
compared to a<font color="#CCCCCC"> conventional stack on the</font>

90
00:07:14,740 --> 00:07:20,289
<font color="#CCCCCC">left me rephrase on the right only</font>

91
00:07:17,709 --> 00:07:23,409
<font color="#CCCCCC">contains runtime system and</font>

92
00:07:20,289 --> 00:07:25,599
the application code itself so you<font color="#CCCCCC"> don't</font>

93
00:07:23,409 --> 00:07:28,149
<font color="#E5E5E5">have the general purpose operating</font>

94
00:07:25,599 --> 00:07:30,550
system and all of<font color="#CCCCCC"> that kernel services</font>

95
00:07:28,149 --> 00:07:32,469
because usually you don't<font color="#E5E5E5"> need it if</font>

96
00:07:30,550 --> 00:07:34,869
you're running a single service and a

97
00:07:32,469 --> 00:07:40,089
single service might now be<font color="#E5E5E5"> a DNS</font>

98
00:07:34,869 --> 00:07:42,270
resolver or something like<font color="#CCCCCC"> that so now I</font>

99
00:07:40,089 --> 00:07:46,149
wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> briefly give you</font><font color="#CCCCCC"> a</font>

100
00:07:42,270 --> 00:07:49,149
demonstration of how such<font color="#CCCCCC"> maraj system</font>

101
00:07:46,149 --> 00:07:51,520
may work and in order<font color="#CCCCCC"> to do that</font><font color="#E5E5E5"> I</font>

102
00:07:49,149 --> 00:07:54,129
prepared a very simple application I

103
00:07:51,520 --> 00:07:57,998
hope you can you can see that this<font color="#E5E5E5"> is</font>

104
00:07:54,129 --> 00:08:00,219
huge as I can get<font color="#CCCCCC"> mm-hmm so what is a</font>

105
00:07:57,999 --> 00:08:01,659
<font color="#CCCCCC">midrash</font><font color="#E5E5E5"> OS what is a simple</font><font color="#CCCCCC"> term in</font>

106
00:08:00,219 --> 00:08:03,959
<font color="#E5E5E5">Russia as</font><font color="#CCCCCC"> eunuch kernel well it is</font>

107
00:08:01,659 --> 00:08:07,959
obviously a<font color="#E5E5E5"> hello world application</font>

108
00:08:03,959 --> 00:08:10,059
<font color="#E5E5E5">which at the moment</font><font color="#CCCCCC"> only says hello but</font>

109
00:08:07,959 --> 00:08:12,399
it does though so it defines here a

110
00:08:10,059 --> 00:08:15,369
<font color="#E5E5E5">function that is a function it's called</font>

111
00:08:12,399 --> 00:08:17,919
start<font color="#E5E5E5"> so it's the main function of an</font>

112
00:08:15,369 --> 00:08:20,680
<font color="#E5E5E5">application and it says oh yeah well</font>

113
00:08:17,919 --> 00:08:22,930
here's a recursive loop and please

114
00:08:20,680 --> 00:08:26,949
<font color="#E5E5E5">execute the loop four times that is done</font>

115
00:08:22,930 --> 00:08:32,049
<font color="#CCCCCC">here and the loop function goes goes</font>

116
00:08:26,949 --> 00:08:36,039
around<font color="#E5E5E5"> and prints prints hello this is</font>

117
00:08:32,049 --> 00:08:39,159
<font color="#E5E5E5">done we had this locks call and then it</font>

118
00:08:36,039 --> 00:08:43,149
sleeps for a second and<font color="#E5E5E5"> then calls</font>

119
00:08:39,159 --> 00:08:46,720
<font color="#E5E5E5">itself with</font><font color="#CCCCCC"> print Assessor</font><font color="#E5E5E5"> will execute</font>

120
00:08:43,149 --> 00:08:49,079
itself four times<font color="#E5E5E5"> this is the</font><font color="#CCCCCC"> whole</font>

121
00:08:46,720 --> 00:08:53,769
<font color="#E5E5E5">operating system I want</font><font color="#CCCCCC"> to show you it's</font>

122
00:08:49,079 --> 00:08:57,120
yeah<font color="#E5E5E5"> only</font><font color="#CCCCCC"> ten lines of</font><font color="#E5E5E5"> code with me</font>

123
00:08:53,769 --> 00:09:01,120
<font color="#CCCCCC">Roger as we now can target different</font>

124
00:08:57,120 --> 00:09:04,860
<font color="#E5E5E5">backends with that thing and we also</font>

125
00:09:01,120 --> 00:09:09,670
need<font color="#CCCCCC"> to take care about</font><font color="#E5E5E5"> some more</font>

126
00:09:04,860 --> 00:09:12,819
<font color="#E5E5E5">compile time dependencies and some</font>

127
00:09:09,670 --> 00:09:16,149
<font color="#E5E5E5">marshaling so we need to configure the</font>

128
00:09:12,819 --> 00:09:18,279
operating system as well and the

129
00:09:16,149 --> 00:09:21,939
configuration<font color="#CCCCCC"> in this case is very</font>

130
00:09:18,279 --> 00:09:24,160
<font color="#E5E5E5">simple we say at the top level that</font><font color="#CCCCCC"> we</font>

131
00:09:21,939 --> 00:09:26,439
<font color="#E5E5E5">want to register</font><font color="#CCCCCC"> a thing a virtual</font>

132
00:09:24,160 --> 00:09:29,110
<font color="#E5E5E5">machine called hello and it should</font><font color="#CCCCCC"> just</font>

133
00:09:26,439 --> 00:09:31,990
execute main with some<font color="#E5E5E5"> default time</font>

134
00:09:29,110 --> 00:09:33,010
source so we<font color="#CCCCCC"> have the time source and</font>

135
00:09:31,990 --> 00:09:34,750
other

136
00:09:33,010 --> 00:09:37,360
sources<font color="#E5E5E5"> from</font><font color="#CCCCCC"> the operating system</font>

137
00:09:34,750 --> 00:09:39,790
explicit instead of them<font color="#CCCCCC"> being implicit</font>

138
00:09:37,360 --> 00:09:41,920
<font color="#E5E5E5">so if you want to use the random number</font>

139
00:09:39,790 --> 00:09:43,810
generator you have<font color="#E5E5E5"> to say so</font><font color="#CCCCCC"> if you want</font>

140
00:09:41,920 --> 00:09:45,790
to use a file system<font color="#E5E5E5"> you have to say so</font>

141
00:09:43,810 --> 00:09:47,890
and<font color="#E5E5E5"> you</font><font color="#CCCCCC"> have to deal with that</font>

142
00:09:45,790 --> 00:09:53,199
complexity already a<font color="#E5E5E5"> programming</font>

143
00:09:47,890 --> 00:09:58,090
<font color="#E5E5E5">language</font><font color="#CCCCCC"> so there's no big</font><font color="#E5E5E5"> UNIX sockets</font>

144
00:09:53,200 --> 00:10:01,090
API or<font color="#E5E5E5"> POSIX API which is</font><font color="#CCCCCC"> there already</font>

145
00:09:58,090 --> 00:10:03,160
<font color="#CCCCCC">but</font><font color="#E5E5E5"> you have you start with</font><font color="#CCCCCC"> nothing so</font>

146
00:10:01,090 --> 00:10:05,470
there's<font color="#E5E5E5"> nothing there</font><font color="#CCCCCC"> and if you want to</font>

147
00:10:03,160 --> 00:10:08,829
use<font color="#E5E5E5"> any resource</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> external resource</font>

148
00:10:05,470 --> 00:10:11,730
<font color="#E5E5E5">also</font><font color="#CCCCCC"> like the console or</font><font color="#E5E5E5"> the network</font>

149
00:10:08,830 --> 00:10:16,090
<font color="#E5E5E5">interface you have to configure</font><font color="#CCCCCC"> that</font>

150
00:10:11,730 --> 00:10:20,220
explicitly now what does this register

151
00:10:16,090 --> 00:10:24,400
here do it<font color="#E5E5E5"> says main and maintenance</font>

152
00:10:20,220 --> 00:10:26,950
<font color="#CCCCCC">just a</font><font color="#E5E5E5"> reference to uni kernel dot hello</font>

153
00:10:24,400 --> 00:10:29,560
<font color="#E5E5E5">that is this stuff we saw here above</font>

154
00:10:26,950 --> 00:10:33,700
<font color="#E5E5E5">it's the module hello and the final</font>

155
00:10:29,560 --> 00:10:35,949
<font color="#CCCCCC">unicorn oh</font><font color="#E5E5E5"> and it gets its signature as</font>

156
00:10:33,700 --> 00:10:39,340
<font color="#E5E5E5">basically it gets</font><font color="#CCCCCC"> passed a time so a</font>

157
00:10:35,950 --> 00:10:42,060
time source and it will<font color="#E5E5E5"> return a drop so</font>

158
00:10:39,340 --> 00:10:46,180
the<font color="#E5E5E5"> start here also</font><font color="#CCCCCC"> actually gets a time</font>

159
00:10:42,060 --> 00:10:48,910
which is<font color="#E5E5E5"> here of of a specific</font><font color="#CCCCCC"> type so</font>

160
00:10:46,180 --> 00:10:51,250
the it's a module<font color="#E5E5E5"> which has a specific</font>

161
00:10:48,910 --> 00:10:54,939
<font color="#E5E5E5">API</font><font color="#CCCCCC"> and that is</font><font color="#E5E5E5"> defined here</font><font color="#CCCCCC"> in the</font>

162
00:10:51,250 --> 00:10:57,340
midrash time LWT<font color="#E5E5E5"> okay now we have those</font>

163
00:10:54,940 --> 00:11:00,160
<font color="#CCCCCC">two files and now we have a command-line</font>

164
00:10:57,340 --> 00:11:02,800
utility which<font color="#E5E5E5"> is called</font><font color="#CCCCCC"> Mirage</font><font color="#E5E5E5"> and now</font>

165
00:11:00,160 --> 00:11:05,140
we can run Mirage configure Mirage

166
00:11:02,800 --> 00:11:08,410
configure will generate<font color="#CCCCCC"> some code and</font>

167
00:11:05,140 --> 00:11:14,010
<font color="#E5E5E5">afterwards we can say make which will</font>

168
00:11:08,410 --> 00:11:14,010
build<font color="#E5E5E5"> the code and now we end up with</font>

169
00:11:14,280 --> 00:11:20,860
<font color="#E5E5E5">for the binary called</font>

170
00:11:16,360 --> 00:11:26,200
hello which is a<font color="#E5E5E5"> symlink to that file</font>

171
00:11:20,860 --> 00:11:30,880
which is which<font color="#CCCCCC"> is 64 bits</font><font color="#E5E5E5"> dynamically</font>

172
00:11:26,200 --> 00:11:33,730
linked executable which in this case

173
00:11:30,880 --> 00:11:35,980
depends on the threading library and the

174
00:11:33,730 --> 00:11:39,250
lip<font color="#E5E5E5"> mm and the lips</font><font color="#CCCCCC"> II so it's</font><font color="#E5E5E5"> a normal</font>

175
00:11:35,980 --> 00:11:42,760
<font color="#E5E5E5">UNIX executable I can execute it on UNIX</font>

176
00:11:39,250 --> 00:11:46,210
and I see the output I would expect so

177
00:11:42,760 --> 00:11:46,720
it says<font color="#CCCCCC"> four</font><font color="#E5E5E5"> times hello to me so that</font>

178
00:11:46,210 --> 00:11:49,600
is the

179
00:11:46,720 --> 00:11:51,850
basic<font color="#E5E5E5"> thing so it's only your next</font>

180
00:11:49,600 --> 00:11:54,940
executable which is dynamically linked

181
00:11:51,850 --> 00:11:56,529
against some more system libraries<font color="#E5E5E5"> plus</font>

182
00:11:54,940 --> 00:11:58,180
it contains<font color="#E5E5E5"> some more criminal code</font>

183
00:11:56,529 --> 00:11:59,800
which<font color="#CCCCCC"> is compiled to native</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> and</font>

184
00:11:58,180 --> 00:12:02,649
then statically linked so although<font color="#CCCCCC"> oh</font>

185
00:11:59,800 --> 00:12:04,750
<font color="#CCCCCC">camon</font><font color="#E5E5E5"> code is directly in there the size</font>

186
00:12:02,649 --> 00:12:12,639
of this unicorn also this is a hello

187
00:12:04,750 --> 00:12:15,730
world<font color="#E5E5E5"> example and the size is at the</font>

188
00:12:12,639 --> 00:12:19,120
moment<font color="#CCCCCC"> 11</font><font color="#E5E5E5"> megabyte which yeah</font>

189
00:12:15,730 --> 00:12:21,939
is not very great<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> distribute</font><font color="#CCCCCC"> that</font>

190
00:12:19,120 --> 00:12:27,009
<font color="#E5E5E5">will become</font><font color="#CCCCCC"> a bit smaller but there's</font>

191
00:12:21,939 --> 00:12:28,779
also a Oh camel o camel itself is a<font color="#E5E5E5"> very</font>

192
00:12:27,009 --> 00:12:31,930
active<font color="#E5E5E5"> language so it's not yet finished</font>

193
00:12:28,779 --> 00:12:34,420
<font color="#CCCCCC">and there are some opportunities</font><font color="#E5E5E5"> to</font>

194
00:12:31,930 --> 00:12:38,680
<font color="#E5E5E5">reduce the code size and we can</font><font color="#CCCCCC"> get it</font>

195
00:12:34,420 --> 00:12:41,430
<font color="#E5E5E5">actually down</font><font color="#CCCCCC"> to 700 kilobytes or</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> but</font>

196
00:12:38,680 --> 00:12:46,589
<font color="#E5E5E5">as an alternative I can say me</font><font color="#CCCCCC"> Raj</font>

197
00:12:41,430 --> 00:12:53,519
<font color="#E5E5E5">configure -</font><font color="#CCCCCC"> t4 targets</font><font color="#E5E5E5"> and then I say</font>

198
00:12:46,589 --> 00:12:56,560
<font color="#CCCCCC">you KVM you</font><font color="#E5E5E5"> KVM is some back-end which</font>

199
00:12:53,519 --> 00:12:58,600
initially targeted only<font color="#CCCCCC"> KVM on linux</font>

200
00:12:56,560 --> 00:13:01,239
which<font color="#CCCCCC"> is a hypervisor</font><font color="#E5E5E5"> technology but</font>

201
00:12:58,600 --> 00:13:03,819
nowadays<font color="#E5E5E5"> is the same piece of software</font>

202
00:13:01,240 --> 00:13:06,130
is<font color="#CCCCCC"> able to target</font><font color="#E5E5E5"> other platforms other</font>

203
00:13:03,819 --> 00:13:08,529
heart of us as well in this case I'm

204
00:13:06,130 --> 00:13:11,259
running here<font color="#CCCCCC"> FreeBSD</font><font color="#E5E5E5"> system so targets</font>

205
00:13:08,529 --> 00:13:14,529
<font color="#E5E5E5">freebies the hypervisor called beehive</font>

206
00:13:11,259 --> 00:13:17,709
and<font color="#CCCCCC"> behalf a similar to a VM</font><font color="#E5E5E5"> type 2</font>

207
00:13:14,529 --> 00:13:20,620
hypervisor so<font color="#E5E5E5"> it requires you to</font><font color="#CCCCCC"> use the</font>

208
00:13:17,709 --> 00:13:23,680
virtualization bits of<font color="#E5E5E5"> your CPU and it</font>

209
00:13:20,620 --> 00:13:27,519
doesn't do the emulation so it requires

210
00:13:23,680 --> 00:13:34,059
<font color="#E5E5E5">EBT for the extended page tables and VDD</font>

211
00:13:27,519 --> 00:13:37,899
and<font color="#CCCCCC"> VTX only but and now I can execute</font>

212
00:13:34,059 --> 00:13:41,439
<font color="#E5E5E5">that now executing a</font><font color="#CCCCCC"> KVM virtual machine</font>

213
00:13:37,899 --> 00:13:43,870
<font color="#E5E5E5">usually on linux requires you to run QA</font>

214
00:13:41,439 --> 00:13:46,089
mode to emulate all the system resources

215
00:13:43,870 --> 00:13:50,709
<font color="#CCCCCC">so the network interfaces</font><font color="#E5E5E5"> and the</font>

216
00:13:46,089 --> 00:13:55,839
console and the<font color="#CCCCCC"> VGA and whatever we</font>

217
00:13:50,709 --> 00:13:58,869
thought this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a bit complex and bit</font>

218
00:13:55,839 --> 00:14:00,940
too<font color="#E5E5E5"> much code so together with some</font>

219
00:13:58,870 --> 00:14:05,490
<font color="#CCCCCC">people from IBM research</font>

220
00:14:00,940 --> 00:14:10,180
children called solo 5 which is minimal

221
00:14:05,490 --> 00:14:12,100
minimal<font color="#E5E5E5"> thing which can run in the host</font>

222
00:14:10,180 --> 00:14:15,969
<font color="#E5E5E5">system in order to manage virtual</font>

223
00:14:12,100 --> 00:14:20,410
<font color="#E5E5E5">machines this is called UK</font><font color="#CCCCCC"> VM bin at the</font>

224
00:14:15,970 --> 00:14:23,649
<font color="#CCCCCC">moment and UK</font><font color="#E5E5E5"> VM bin gets as an argument</font>

225
00:14:20,410 --> 00:14:27,579
so the<font color="#E5E5E5"> midrash configure and make now</font>

226
00:14:23,649 --> 00:14:32,399
<font color="#CCCCCC">producing boundary called hello dot uk'</font>

227
00:14:27,580 --> 00:14:35,620
<font color="#CCCCCC">VM which is completely statically linked</font>

228
00:14:32,399 --> 00:14:38,440
executable so there's no dynamic linking

229
00:14:35,620 --> 00:14:40,209
<font color="#E5E5E5">anymore involved and it doesn't run as a</font>

230
00:14:38,440 --> 00:14:41,770
<font color="#E5E5E5">UNIX binary because it's not a UNIX</font>

231
00:14:40,209 --> 00:14:44,939
binary<font color="#E5E5E5"> it's an elf binary but it</font>

232
00:14:41,770 --> 00:14:51,420
requires to<font color="#CCCCCC"> be run inside of such a</font>

233
00:14:44,940 --> 00:14:54,310
<font color="#CCCCCC">solar 5 system</font><font color="#E5E5E5"> or yeah and so now I can</font>

234
00:14:51,420 --> 00:14:56,050
execute<font color="#CCCCCC"> that what I see here what we see</font>

235
00:14:54,310 --> 00:14:59,500
<font color="#CCCCCC">here is the same output</font>

236
00:14:56,050 --> 00:15:01,899
so again<font color="#E5E5E5"> application said hello</font><font color="#CCCCCC"> four</font>

237
00:14:59,500 --> 00:15:06,490
times<font color="#E5E5E5"> but before that we see the boot</font>

238
00:15:01,899 --> 00:15:09,760
<font color="#E5E5E5">screen of</font><font color="#CCCCCC"> solar 5</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> solar</font><font color="#E5E5E5"> 5 was just</font>

239
00:15:06,490 --> 00:15:12,970
initialized with 500 mega self memory we

240
00:15:09,760 --> 00:15:20,140
<font color="#CCCCCC">can actually would use that by giving</font><font color="#E5E5E5"> it</font>

241
00:15:12,970 --> 00:15:23,350
only let's say 60<font color="#E5E5E5"> megabytes of memory 16</font>

242
00:15:20,140 --> 00:15:27,660
is not enough yeah

243
00:15:23,350 --> 00:15:32,170
24 is enough yet<font color="#CCCCCC"> currently</font><font color="#E5E5E5"> still not</font>

244
00:15:27,660 --> 00:15:34,120
finished<font color="#E5E5E5"> but</font><font color="#CCCCCC"> we can get away with less</font>

245
00:15:32,170 --> 00:15:37,120
memory we just need<font color="#CCCCCC"> to three go to the O</font>

246
00:15:34,120 --> 00:15:40,839
camel runtime environment<font color="#E5E5E5"> mm-hmm which</font>

247
00:15:37,120 --> 00:15:42,520
we haven't<font color="#E5E5E5"> done so so that that</font><font color="#CCCCCC"> is what</font>

248
00:15:40,839 --> 00:15:45,700
we<font color="#E5E5E5"> can do with me</font><font color="#CCCCCC"> ROG so we have the</font>

249
00:15:42,520 --> 00:15:48,850
<font color="#E5E5E5">very same code base and on the one side</font>

250
00:15:45,700 --> 00:15:50,620
we<font color="#E5E5E5"> can execute it as a UNIX binary on</font>

251
00:15:48,850 --> 00:15:54,730
the other side we<font color="#CCCCCC"> can execute it as a</font>

252
00:15:50,620 --> 00:15:57,040
virtual<font color="#CCCCCC"> machine</font><font color="#E5E5E5"> and this wall works not</font>

253
00:15:54,730 --> 00:15:59,500
only with<font color="#E5E5E5"> a hello world applications but</font>

254
00:15:57,040 --> 00:16:02,230
also<font color="#E5E5E5"> with other applications with which</font>

255
00:15:59,500 --> 00:16:07,149
use network connections and block

256
00:16:02,230 --> 00:16:10,570
<font color="#E5E5E5">devices and so on so what is supported</font>

257
00:16:07,149 --> 00:16:13,930
in inside of<font color="#E5E5E5"> Miraj these days in terms</font>

258
00:16:10,570 --> 00:16:16,480
of<font color="#E5E5E5"> protocols is what I</font>

259
00:16:13,930 --> 00:16:21,130
this is likely incomplete but this is at

260
00:16:16,480 --> 00:16:23,560
<font color="#CCCCCC">least first show what what is there</font><font color="#E5E5E5"> and</font>

261
00:16:21,130 --> 00:16:26,110
not the question<font color="#E5E5E5"> is why it is</font><font color="#CCCCCC"> difficult</font>

262
00:16:23,560 --> 00:16:29,079
<font color="#E5E5E5">to implement</font><font color="#CCCCCC"> the new protocol for me</font>

263
00:16:26,110 --> 00:16:32,110
<font color="#CCCCCC">Roger s a fool</font><font color="#E5E5E5"> camel and the reason is</font>

264
00:16:29,080 --> 00:16:34,060
<font color="#E5E5E5">because we actually write that all from</font>

265
00:16:32,110 --> 00:16:37,570
scratch<font color="#E5E5E5"> because we write it in all</font>

266
00:16:34,060 --> 00:16:41,920
<font color="#E5E5E5">camels so we don't reuse any systems</font>

267
00:16:37,570 --> 00:16:44,350
code written<font color="#E5E5E5"> and see and yeah developing</font>

268
00:16:41,920 --> 00:16:45,969
protocols in in<font color="#CCCCCC"> Oh camel like developing</font>

269
00:16:44,350 --> 00:16:53,200
<font color="#E5E5E5">protocols and other</font><font color="#CCCCCC"> high-level languages</font>

270
00:16:45,970 --> 00:16:56,490
is quite some quite some<font color="#E5E5E5"> effort</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> if</font>

271
00:16:53,200 --> 00:16:58,330
we have a<font color="#E5E5E5"> tcp/ip stack we have an HTTP</font>

272
00:16:56,490 --> 00:17:00,490
implementation server implementation

273
00:16:58,330 --> 00:17:04,689
actually<font color="#CCCCCC"> - server implementations then</font>

274
00:17:00,490 --> 00:17:06,730
we have a DHCP server we<font color="#CCCCCC"> have an A</font>

275
00:17:04,689 --> 00:17:10,750
student<font color="#E5E5E5"> and Cambridge also worked on a</font>

276
00:17:06,730 --> 00:17:14,500
BGP implementation<font color="#CCCCCC"> I worked as already</font>

277
00:17:10,750 --> 00:17:17,199
outlined in<font color="#E5E5E5"> on a DNS implementation and</font>

278
00:17:14,500 --> 00:17:20,589
also<font color="#CCCCCC"> some let's encrypt stuff</font><font color="#E5E5E5"> then we</font>

279
00:17:17,199 --> 00:17:23,380
have a partial working<font color="#CCCCCC"> ssh server</font>

280
00:17:20,589 --> 00:17:28,389
implementation<font color="#E5E5E5"> we</font><font color="#CCCCCC"> have a TLS</font>

281
00:17:23,380 --> 00:17:31,809
implementation which is<font color="#E5E5E5"> now for</font><font color="#CCCCCC"> 4 years</font>

282
00:17:28,390 --> 00:17:34,480
old<font color="#CCCCCC"> i think it still legs</font>

283
00:17:31,809 --> 00:17:37,870
TLS 1.3 which was just finalized<font color="#E5E5E5"> the</font>

284
00:17:34,480 --> 00:17:41,050
other day but<font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> i've some some</font>

285
00:17:37,870 --> 00:17:43,540
branches for that then we have a good

286
00:17:41,050 --> 00:17:47,169
implementation which<font color="#CCCCCC"> is pretty complete</font>

287
00:17:43,540 --> 00:17:49,510
<font color="#E5E5E5">so</font><font color="#CCCCCC"> we can pull and push to get</font>

288
00:17:47,170 --> 00:17:51,700
repositories to<font color="#CCCCCC"> the remote site but we</font>

289
00:17:49,510 --> 00:17:53,650
can also<font color="#E5E5E5"> use a git repository inside of</font>

290
00:17:51,700 --> 00:17:55,809
our virtual machine<font color="#CCCCCC"> without</font><font color="#E5E5E5"> having it on</font>

291
00:17:53,650 --> 00:17:58,090
<font color="#E5E5E5">a block</font><font color="#CCCCCC"> device so we can have a git</font>

292
00:17:55,809 --> 00:18:01,840
clone and<font color="#CCCCCC"> a git checkout which is purely</font>

293
00:17:58,090 --> 00:18:04,090
done in memory<font color="#E5E5E5"> so you just yeah you</font>

294
00:18:01,840 --> 00:18:06,610
don't<font color="#E5E5E5"> need to have a lot of persistent</font>

295
00:18:04,090 --> 00:18:10,178
storage for a lot<font color="#E5E5E5"> of services and in my</font>

296
00:18:06,610 --> 00:18:12,428
opinion<font color="#E5E5E5"> then we have a partially working</font>

297
00:18:10,179 --> 00:18:15,960
<font color="#CCCCCC">open PGP</font><font color="#E5E5E5"> implementation which I think</font>

298
00:18:12,429 --> 00:18:18,880
we'll talk<font color="#E5E5E5"> about on Tuesday</font><font color="#CCCCCC"> a bit more</font>

299
00:18:15,960 --> 00:18:21,540
<font color="#E5E5E5">and yeah we</font><font color="#CCCCCC"> have some monitoring and</font>

300
00:18:18,880 --> 00:18:26,370
logging support for syslog<font color="#E5E5E5"> and</font>

301
00:18:21,540 --> 00:18:26,370
Prometheus<font color="#E5E5E5"> and</font><font color="#CCCCCC"> in flux TB and SNMP</font>

302
00:18:26,560 --> 00:18:33,310
what are the<font color="#E5E5E5"> targets so what are the</font>

303
00:18:30,610 --> 00:18:36,189
targeted platforms<font color="#E5E5E5"> and initially</font><font color="#CCCCCC"> it</font>

304
00:18:33,310 --> 00:18:38,560
started<font color="#E5E5E5"> out as a</font><font color="#CCCCCC"> exempt reject meter</font><font color="#E5E5E5"> RS</font>

305
00:18:36,190 --> 00:18:41,380
so the initial target was then it was

306
00:18:38,560 --> 00:18:44,350
<font color="#CCCCCC">done it was initially developed by some</font>

307
00:18:41,380 --> 00:18:48,010
of the people<font color="#CCCCCC"> over</font><font color="#E5E5E5"> also part of the</font><font color="#CCCCCC"> Zen</font>

308
00:18:44,350 --> 00:18:50,610
team then as I mentioned we switched

309
00:18:48,010 --> 00:18:53,260
<font color="#E5E5E5">over to also be able to</font><font color="#CCCCCC"> run on KVM</font>

310
00:18:50,610 --> 00:18:56,379
<font color="#E5E5E5">nowadays we also can run on beehive on</font>

311
00:18:53,260 --> 00:18:59,440
<font color="#E5E5E5">freebsd</font><font color="#CCCCCC"> and even on</font><font color="#E5E5E5"> vm m from</font><font color="#CCCCCC"> the</font>

312
00:18:56,380 --> 00:19:02,050
<font color="#E5E5E5">OpenBSD project another hypervisor we</font>

313
00:18:59,440 --> 00:19:04,180
can run on is mu in separation kernel

314
00:19:02,050 --> 00:19:06,159
which is<font color="#E5E5E5"> in my opinion very interesting</font>

315
00:19:04,180 --> 00:19:08,470
because it<font color="#CCCCCC"> is removing a lot of</font>

316
00:19:06,160 --> 00:19:11,290
<font color="#CCCCCC">dynamically resource allocation</font><font color="#E5E5E5"> away and</font>

317
00:19:08,470 --> 00:19:14,320
<font color="#E5E5E5">also does doesn't only statically</font>

318
00:19:11,290 --> 00:19:18,430
resource allocation and this developed

319
00:19:14,320 --> 00:19:22,899
in<font color="#E5E5E5"> SPARC ADA so in a language which is</font>

320
00:19:18,430 --> 00:19:27,610
also not<font color="#CCCCCC"> prone to various spatial and</font>

321
00:19:22,900 --> 00:19:31,510
temporal<font color="#E5E5E5"> memory safety issues backends</font>

322
00:19:27,610 --> 00:19:36,479
on in the the name of system so<font color="#CCCCCC"> hardware</font>

323
00:19:31,510 --> 00:19:41,200
processors is<font color="#E5E5E5"> MD 64 which is yeah</font>

324
00:19:36,480 --> 00:19:46,840
<font color="#CCCCCC">deployed everywhere</font><font color="#E5E5E5"> so the x86 64 bit</font>

325
00:19:41,200 --> 00:19:52,330
then we also target<font color="#E5E5E5"> arm the post and</font>

326
00:19:46,840 --> 00:19:55,120
3200<font color="#E5E5E5"> 64-bit for Xen and 32</font><font color="#CCCCCC"> and for KVM</font>

327
00:19:52,330 --> 00:19:57,820
and<font color="#E5E5E5"> 64-bit and then we can also target</font>

328
00:19:55,120 --> 00:20:00,879
the<font color="#CCCCCC"> so</font><font color="#E5E5E5"> called cloud like Google compute</font>

329
00:19:57,820 --> 00:20:05,080
engine and Amazon and<font color="#E5E5E5"> telecoms cloud</font>

330
00:20:00,880 --> 00:20:07,480
<font color="#E5E5E5">maybe so what what happened inside</font><font color="#CCCCCC"> of</font>

331
00:20:05,080 --> 00:20:11,199
the Oh camel and<font color="#E5E5E5"> me Raja</font><font color="#CCCCCC"> has ecosystem</font>

332
00:20:07,480 --> 00:20:14,890
<font color="#E5E5E5">within the last year it</font><font color="#CCCCCC"> is I</font><font color="#E5E5E5"> think major</font>

333
00:20:11,200 --> 00:20:18,190
<font color="#E5E5E5">changes that we reworked the build</font>

334
00:20:14,890 --> 00:20:20,530
<font color="#CCCCCC">system and</font><font color="#E5E5E5"> we now adapted to a high</font>

335
00:20:18,190 --> 00:20:23,020
percentage new build system which is

336
00:20:20,530 --> 00:20:25,570
<font color="#E5E5E5">actually easier</font><font color="#CCCCCC"> to use than the</font><font color="#E5E5E5"> others</font>

337
00:20:23,020 --> 00:20:27,639
especially<font color="#E5E5E5"> for newcomers because you</font>

338
00:20:25,570 --> 00:20:29,530
don't<font color="#CCCCCC"> have to deal around</font><font color="#E5E5E5"> you don't have</font>

339
00:20:27,640 --> 00:20:32,560
to<font color="#CCCCCC"> further round with</font><font color="#E5E5E5"> three different</font>

340
00:20:29,530 --> 00:20:35,080
file types and so on and it does not

341
00:20:32,560 --> 00:20:37,990
depend<font color="#E5E5E5"> on the old</font><font color="#CCCCCC"> tools so to say</font><font color="#E5E5E5"> so we</font>

342
00:20:35,080 --> 00:20:40,070
can hopefully in the future get rid of

343
00:20:37,990 --> 00:20:43,040
some layers<font color="#E5E5E5"> of a</font>

344
00:20:40,070 --> 00:20:47,480
strike of abstraction<font color="#E5E5E5"> and layers of</font>

345
00:20:43,040 --> 00:20:50,629
<font color="#E5E5E5">names which are no longer</font><font color="#CCCCCC"> required</font><font color="#E5E5E5"> then</font>

346
00:20:47,480 --> 00:20:54,140
<font color="#E5E5E5">open</font><font color="#CCCCCC"> up amidst the open is okay</font><font color="#E5E5E5"> my own</font>

347
00:20:50,630 --> 00:20:57,080
package manager that is finally that

348
00:20:54,140 --> 00:21:00,830
will finally soon see as major<font color="#E5E5E5"> its</font>

349
00:20:57,080 --> 00:21:03,439
second major release<font color="#E5E5E5"> and that</font><font color="#CCCCCC"> is great</font>

350
00:21:00,830 --> 00:21:06,580
<font color="#E5E5E5">because there has</font><font color="#CCCCCC"> been work over the</font>

351
00:21:03,440 --> 00:21:09,710
<font color="#E5E5E5">last three</font><font color="#CCCCCC"> years on open</font><font color="#E5E5E5"> to and this</font>

352
00:21:06,580 --> 00:21:11,929
finally<font color="#CCCCCC"> dear so there's currently a</font>

353
00:21:09,710 --> 00:21:19,220
fourth release<font color="#E5E5E5"> candidate and it will be</font>

354
00:21:11,930 --> 00:21:20,780
released as the final<font color="#E5E5E5"> in in September</font><font color="#CCCCCC"> we</font>

355
00:21:19,220 --> 00:21:23,030
also worked on<font color="#CCCCCC"> the documentation</font>

356
00:21:20,780 --> 00:21:24,649
<font color="#E5E5E5">generation front so that is more the</font>

357
00:21:23,030 --> 00:21:27,560
local community which<font color="#E5E5E5"> worked on that</font>

358
00:21:24,650 --> 00:21:30,410
which<font color="#E5E5E5"> generates API documentation and</font>

359
00:21:27,560 --> 00:21:32,570
they<font color="#CCCCCC"> even embedded it to have a workflow</font>

360
00:21:30,410 --> 00:21:35,420
<font color="#CCCCCC">to write to be able to write a book so</font>

361
00:21:32,570 --> 00:21:38,139
they write the book and some<font color="#CCCCCC"> Styles some</font>

362
00:21:35,420 --> 00:21:40,850
<font color="#E5E5E5">markdown style thing but include some</font>

363
00:21:38,140 --> 00:21:43,340
code examples<font color="#CCCCCC"> and these code examples</font>

364
00:21:40,850 --> 00:21:47,030
can<font color="#E5E5E5"> be extracted and can be compiled</font>

365
00:21:43,340 --> 00:21:49,100
them so to<font color="#E5E5E5"> ensure that while you've read</font>

366
00:21:47,030 --> 00:21:52,100
<font color="#CCCCCC">your book your code example actually</font>

367
00:21:49,100 --> 00:21:54,469
working and I<font color="#E5E5E5"> think that's great</font><font color="#CCCCCC"> and I</font>

368
00:21:52,100 --> 00:21:58,969
hope that we will<font color="#E5E5E5"> be able to adapt</font><font color="#CCCCCC"> that</font>

369
00:21:54,470 --> 00:22:03,140
same library for writing some some<font color="#E5E5E5"> texts</font>

370
00:21:58,970 --> 00:22:05,420
and somehow tools about mirages<font color="#E5E5E5"> then</font>

371
00:22:03,140 --> 00:22:08,270
also within the<font color="#CCCCCC"> last year</font><font color="#E5E5E5"> Oh camel did</font>

372
00:22:05,420 --> 00:22:12,230
some major releases and one was for six

373
00:22:08,270 --> 00:22:14,180
<font color="#CCCCCC">where strings are no longer mutable they</font>

374
00:22:12,230 --> 00:22:17,180
used to be mutable since the beginning

375
00:22:14,180 --> 00:22:22,100
and then they switched over and<font color="#E5E5E5"> made</font>

376
00:22:17,180 --> 00:22:23,900
strings<font color="#E5E5E5"> immutable and now finally by</font>

377
00:22:22,100 --> 00:22:26,149
default<font color="#E5E5E5"> all</font><font color="#CCCCCC"> the strings are immutable</font>

378
00:22:23,900 --> 00:22:27,680
obviously that breaking change for old

379
00:22:26,150 --> 00:22:30,950
code which hasn't<font color="#E5E5E5"> been maintained for</font>

380
00:22:27,680 --> 00:22:34,340
quite some<font color="#CCCCCC"> time and we also needed to</font>

381
00:22:30,950 --> 00:22:40,790
adapt quite some quite some code<font color="#CCCCCC"> to be</font>

382
00:22:34,340 --> 00:22:43,879
safe with<font color="#E5E5E5"> immutable strings</font><font color="#CCCCCC"> since the</font>

383
00:22:40,790 --> 00:22:46,550
<font color="#E5E5E5">beginning of this year I'm working on at</font>

384
00:22:43,880 --> 00:22:48,080
a<font color="#CCCCCC"> nonprofit</font><font color="#E5E5E5"> company called the Center</font>

385
00:22:46,550 --> 00:22:50,899
for<font color="#E5E5E5"> the cultivation</font><font color="#CCCCCC"> of Technology</font><font color="#E5E5E5"> and</font>

386
00:22:48,080 --> 00:22:53,080
Germany and I<font color="#E5E5E5"> am working there with</font>

387
00:22:50,900 --> 00:22:56,050
project called<font color="#CCCCCC"> whoa</font>

388
00:22:53,080 --> 00:23:00,429
which is which<font color="#E5E5E5"> goal is to develop robust</font>

389
00:22:56,050 --> 00:23:02,649
<font color="#E5E5E5">digital infrastructure and our real goal</font>

390
00:23:00,430 --> 00:23:05,500
is to enable<font color="#E5E5E5"> more people to run their</font>

391
00:23:02,650 --> 00:23:07,480
own<font color="#E5E5E5"> digital infrastructure and and be</font>

392
00:23:05,500 --> 00:23:12,400
<font color="#CCCCCC">able to take</font><font color="#E5E5E5"> back control over their</font>

393
00:23:07,480 --> 00:23:15,160
data we try<font color="#E5E5E5"> to collect money we</font><font color="#CCCCCC"> are</font>

394
00:23:12,400 --> 00:23:17,070
donations or<font color="#E5E5E5"> and</font><font color="#CCCCCC"> and/or commercial</font>

395
00:23:15,160 --> 00:23:20,290
<font color="#E5E5E5">contracts</font><font color="#CCCCCC"> and/or public</font><font color="#E5E5E5"> funding and</font>

396
00:23:17,070 --> 00:23:22,210
<font color="#CCCCCC">everything we develop is open-source and</font>

397
00:23:20,290 --> 00:23:26,530
<font color="#CCCCCC">we are obviously still looking for</font>

398
00:23:22,210 --> 00:23:29,200
donations<font color="#E5E5E5"> and also for contracts</font><font color="#CCCCCC"> now for</font>

399
00:23:26,530 --> 00:23:32,139
the first<font color="#E5E5E5"> big project I've been working</font>

400
00:23:29,200 --> 00:23:35,640
<font color="#CCCCCC">on is Connect which</font><font color="#E5E5E5"> is repository</font>

401
00:23:32,140 --> 00:23:39,100
signing I've been working on<font color="#E5E5E5"> that since</font>

402
00:23:35,640 --> 00:23:42,280
<font color="#E5E5E5">nearly four years I think and this is</font>

403
00:23:39,100 --> 00:23:46,659
<font color="#E5E5E5">now the fifth prototype implementation</font>

404
00:23:42,280 --> 00:23:50,230
and the fifth design after after I met

405
00:23:46,660 --> 00:23:54,130
<font color="#E5E5E5">with one of the professors who designed</font>

406
00:23:50,230 --> 00:23:57,010
the base system<font color="#CCCCCC"> which I base based and</font>

407
00:23:54,130 --> 00:23:59,170
design and the<font color="#E5E5E5"> user</font><font color="#CCCCCC"> Tron so it's based</font>

408
00:23:57,010 --> 00:24:03,490
<font color="#E5E5E5">on the update framework from</font><font color="#CCCCCC"> Justin</font>

409
00:23:59,170 --> 00:24:07,150
couples and others what is<font color="#E5E5E5"> the the main</font>

410
00:24:03,490 --> 00:24:09,640
goal here is to<font color="#E5E5E5"> establish trust into</font>

411
00:24:07,150 --> 00:24:11,920
community repositories and community

412
00:24:09,640 --> 00:24:14,920
repositories are for<font color="#CCCCCC"> example a packet</font>

413
00:24:11,920 --> 00:24:17,890
repository where every author submits

414
00:24:14,920 --> 00:24:19,480
their own<font color="#E5E5E5"> packet so you don't have a you</font>

415
00:24:17,890 --> 00:24:21,070
don't want to have a single<font color="#CCCCCC"> point of</font>

416
00:24:19,480 --> 00:24:22,600
trust<font color="#E5E5E5"> or at least I don't want to have a</font>

417
00:24:21,070 --> 00:24:24,370
thing<font color="#E5E5E5"> upon the frost and I also don't</font>

418
00:24:22,600 --> 00:24:26,919
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have to trust the repository</font>

419
00:24:24,370 --> 00:24:33,540
server<font color="#E5E5E5"> because that might be compromised</font>

420
00:24:26,920 --> 00:24:37,240
at some point so how does<font color="#E5E5E5"> that</font><font color="#CCCCCC"> work in</font>

421
00:24:33,540 --> 00:24:42,399
<font color="#CCCCCC">connects each</font><font color="#E5E5E5"> package is maintained by</font>

422
00:24:37,240 --> 00:24:44,950
<font color="#CCCCCC">its author or a team of authors and the</font>

423
00:24:42,400 --> 00:24:46,920
<font color="#CCCCCC">author is supposed supposed</font><font color="#E5E5E5"> to sign</font>

424
00:24:44,950 --> 00:24:49,030
their package<font color="#E5E5E5"> on every release and</font>

425
00:24:46,920 --> 00:24:51,010
signing<font color="#E5E5E5"> the package includes the</font>

426
00:24:49,030 --> 00:24:53,800
checksum<font color="#CCCCCC"> of the table all of the release</font>

427
00:24:51,010 --> 00:24:56,770
but also the built instructions and the

428
00:24:53,800 --> 00:25:00,940
dependencies like<font color="#E5E5E5"> external dependencies</font>

429
00:24:56,770 --> 00:25:03,730
<font color="#CCCCCC">to libraries and and then if every</font>

430
00:25:00,940 --> 00:25:06,040
package<font color="#CCCCCC"> also does that the</font><font color="#E5E5E5"> only</font>

431
00:25:03,730 --> 00:25:06,730
<font color="#CCCCCC">Connection we are missing is who's now</font>

432
00:25:06,040 --> 00:25:08,940
responsible

433
00:25:06,730 --> 00:25:12,640
for which package name because we have a

434
00:25:08,940 --> 00:25:15,190
globally unique<font color="#CCCCCC"> namespace of oak ml</font>

435
00:25:12,640 --> 00:25:20,340
packages<font color="#E5E5E5"> because we need to</font><font color="#CCCCCC"> formulate</font>

436
00:25:15,190 --> 00:25:25,380
those dependencies in there and this

437
00:25:20,340 --> 00:25:29,199
this<font color="#E5E5E5"> delegation is done by by a set</font><font color="#CCCCCC"> of</font>

438
00:25:25,380 --> 00:25:31,690
generators<font color="#CCCCCC"> Genesis</font><font color="#E5E5E5"> are maintaining the</font>

439
00:25:29,200 --> 00:25:33,700
repository<font color="#CCCCCC"> or the main open repository</font>

440
00:25:31,690 --> 00:25:36,160
<font color="#E5E5E5">and obviously we can have any number of</font>

441
00:25:33,700 --> 00:25:41,280
autumn of repositories with any number

442
00:25:36,160 --> 00:25:41,280
of packages<font color="#CCCCCC"> and any maintenance in there</font>

443
00:25:41,400 --> 00:25:49,480
yeah<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the goal</font><font color="#E5E5E5"> is if the janitors</font>

444
00:25:46,179 --> 00:25:52,080
<font color="#E5E5E5">signed such delegation to a specific</font>

445
00:25:49,480 --> 00:25:54,970
author or to a<font color="#E5E5E5"> specific team of authors</font>

446
00:25:52,080 --> 00:25:56,799
then the authors can do with that

447
00:25:54,970 --> 00:25:58,870
package<font color="#E5E5E5"> whatever they want I mean they</font>

448
00:25:56,799 --> 00:26:01,260
can draft<font color="#E5E5E5"> new releases without the</font>

449
00:25:58,870 --> 00:26:04,479
<font color="#CCCCCC">Genesis having to having to do anything</font>

450
00:26:01,260 --> 00:26:07,510
<font color="#E5E5E5">because they already delegated it to a</font>

451
00:26:04,480 --> 00:26:11,890
<font color="#E5E5E5">specific author and the author can</font><font color="#CCCCCC"> rest</font>

452
00:26:07,510 --> 00:26:13,900
<font color="#CCCCCC">at</font><font color="#E5E5E5"> new at new releases or</font><font color="#CCCCCC"> it that fixes</font>

453
00:26:11,890 --> 00:26:16,299
<font color="#CCCCCC">fix</font><font color="#E5E5E5"> up the build instructions</font><font color="#CCCCCC"> and new</font>

454
00:26:13,900 --> 00:26:21,190
dependencies at new version constraints

455
00:26:16,299 --> 00:26:24,490
and so on<font color="#CCCCCC"> how does</font><font color="#E5E5E5"> that in reality works</font>

456
00:26:21,190 --> 00:26:27,040
well so<font color="#CCCCCC"> this single author for a single</font>

457
00:26:24,490 --> 00:26:28,090
package is no longer true<font color="#E5E5E5"> because there</font>

458
00:26:27,040 --> 00:26:32,379
are lots of packages<font color="#CCCCCC"> which are</font>

459
00:26:28,090 --> 00:26:36,280
maintained<font color="#CCCCCC"> by teams and and</font><font color="#E5E5E5"> also my may</font>

460
00:26:32,380 --> 00:26:38,290
have multiple keys so I may<font color="#E5E5E5"> have a key</font>

461
00:26:36,280 --> 00:26:40,870
<font color="#E5E5E5">on my laptop and a key on my desktop and</font>

462
00:26:38,290 --> 00:26:44,200
<font color="#E5E5E5">I want to be able to specify oh it</font>

463
00:26:40,870 --> 00:26:47,559
<font color="#E5E5E5">doesn't matter which key has signed this</font>

464
00:26:44,200 --> 00:26:50,020
release<font color="#E5E5E5"> it might also</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> that I want</font><font color="#CCCCCC"> to</font>

465
00:26:47,559 --> 00:26:52,780
require<font color="#E5E5E5"> oh I have a Yubikey so an</font>

466
00:26:50,020 --> 00:26:55,000
external hardware security module there

467
00:26:52,780 --> 00:26:59,110
are<font color="#CCCCCC"> stove</font><font color="#E5E5E5"> one of the keys</font><font color="#CCCCCC"> and I want to</font>

468
00:26:55,000 --> 00:27:03,390
have that<font color="#E5E5E5"> HSM need to need to sign the</font>

469
00:26:59,110 --> 00:27:03,389
release<font color="#E5E5E5"> and also one of</font><font color="#CCCCCC"> my other keys</font>

470
00:27:04,020 --> 00:27:12,010
<font color="#E5E5E5">that let also in tough so in the update</font>

471
00:27:07,540 --> 00:27:14,649
framework to the introduction of<font color="#CCCCCC"> forum</font>

472
00:27:12,010 --> 00:27:17,740
signatures<font color="#E5E5E5"> which basically means that</font>

473
00:27:14,650 --> 00:27:20,200
you can specify<font color="#CCCCCC"> oh I want to</font><font color="#E5E5E5"> have three</font>

474
00:27:17,740 --> 00:27:25,179
signatures out of the list of

475
00:27:20,200 --> 00:27:27,489
ballads<font color="#CCCCCC"> people who are valid authors so</font>

476
00:27:25,179 --> 00:27:30,129
if I want to<font color="#E5E5E5"> have if I require three</font>

477
00:27:27,489 --> 00:27:33,549
signatures out of<font color="#CCCCCC"> general a to</font><font color="#E5E5E5"> Jennifer</font>

478
00:27:30,129 --> 00:27:36,100
<font color="#CCCCCC">II some delegation or any delegation is</font>

479
00:27:33,549 --> 00:27:40,658
only<font color="#E5E5E5"> valid if at least three of them</font>

480
00:27:36,100 --> 00:27:44,199
have signed the delegation<font color="#E5E5E5"> it's also</font>

481
00:27:40,659 --> 00:27:46,779
true<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> real open repository like</font>

482
00:27:44,200 --> 00:27:49,830
from running it over<font color="#E5E5E5"> time</font><font color="#CCCCCC"> and we have</font>

483
00:27:46,779 --> 00:27:52,149
just a good repository which we are

484
00:27:49,830 --> 00:27:54,820
hosting on github<font color="#E5E5E5"> at the moment and</font>

485
00:27:52,149 --> 00:27:58,080
<font color="#E5E5E5">there any authors any package also</font>

486
00:27:54,820 --> 00:28:03,220
submit their packages<font color="#E5E5E5"> it turns out that</font>

487
00:27:58,080 --> 00:28:06,428
authors are not responsive enough<font color="#E5E5E5"> for</font>

488
00:28:03,220 --> 00:28:08,700
big breaking changes so if someone

489
00:28:06,429 --> 00:28:11,019
releases their library and<font color="#CCCCCC"> that is</font>

490
00:28:08,700 --> 00:28:15,820
dependent on by a lot of<font color="#E5E5E5"> other libraries</font>

491
00:28:11,019 --> 00:28:18,659
<font color="#CCCCCC">and now he he releases a new</font><font color="#E5E5E5"> version of</font>

492
00:28:15,820 --> 00:28:22,600
<font color="#E5E5E5">that which breaks the API but he didn't</font>

493
00:28:18,659 --> 00:28:25,799
tell that<font color="#CCCCCC"> upfront then we may</font><font color="#E5E5E5"> have to</font>

494
00:28:22,600 --> 00:28:28,928
fix up<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of other packages to</font>

495
00:28:25,799 --> 00:28:31,418
introduce a new version bound so a new

496
00:28:28,929 --> 00:28:34,809
upper version<font color="#E5E5E5"> bond that they are not</font>

497
00:28:31,419 --> 00:28:37,019
compatible with<font color="#CCCCCC"> the new release</font><font color="#E5E5E5"> doing</font>

498
00:28:34,809 --> 00:28:39,850
that by the individual authors would be

499
00:28:37,019 --> 00:28:42,669
the right<font color="#CCCCCC"> thing to do but</font><font color="#E5E5E5"> sometimes</font>

500
00:28:39,850 --> 00:28:44,289
<font color="#CCCCCC">authors are on vacation or so and we</font>

501
00:28:42,669 --> 00:28:47,019
don't<font color="#CCCCCC"> really want to wait for three</font>

502
00:28:44,289 --> 00:28:48,669
weeks or<font color="#CCCCCC"> four month in order to just put</font>

503
00:28:47,019 --> 00:28:52,149
through a new release<font color="#CCCCCC"> of a package</font>

504
00:28:48,669 --> 00:28:54,669
that's why the janitors so the trend

505
00:28:52,149 --> 00:28:56,949
rows are those people<font color="#E5E5E5"> where all the</font>

506
00:28:54,669 --> 00:29:02,169
trust is initially then is initially

507
00:28:56,950 --> 00:29:05,889
delegated to they are able<font color="#E5E5E5"> to also</font>

508
00:29:02,169 --> 00:29:10,259
<font color="#E5E5E5">improve</font><font color="#CCCCCC"> approve</font><font color="#E5E5E5"> checksums of these new</font>

509
00:29:05,889 --> 00:29:14,080
<font color="#CCCCCC">pega dress or of</font><font color="#E5E5E5"> these adjusted packages</font>

510
00:29:10,259 --> 00:29:15,940
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> this this</font><font color="#CCCCCC"> also means to twelve to</font>

511
00:29:14,080 --> 00:29:19,239
required forum here means also<font color="#E5E5E5"> there's</font>

512
00:29:15,940 --> 00:29:21,700
not<font color="#CCCCCC"> a single key which is</font><font color="#E5E5E5"> able to</font>

513
00:29:19,239 --> 00:29:24,820
compromise the<font color="#E5E5E5"> entire system</font><font color="#CCCCCC"> so if</font>

514
00:29:21,700 --> 00:29:28,119
general<font color="#CCCCCC"> becky if the key from general</font>

515
00:29:24,820 --> 00:29:28,899
hobby gets compromised<font color="#E5E5E5"> or if i</font><font color="#CCCCCC"> managed</font>

516
00:29:28,119 --> 00:29:32,349
<font color="#CCCCCC">to</font><font color="#E5E5E5"> steal it</font>

517
00:29:28,899 --> 00:29:34,000
<font color="#E5E5E5">i cannot introduce new packages or make</font>

518
00:29:32,349 --> 00:29:36,250
<font color="#E5E5E5">something valid because i</font>

519
00:29:34,000 --> 00:29:39,610
need at least three keys out of<font color="#E5E5E5"> those</font>

520
00:29:36,250 --> 00:29:43,330
five in<font color="#E5E5E5"> order to to do something which</font>

521
00:29:39,610 --> 00:29:47,229
is<font color="#CCCCCC"> threat valid</font><font color="#E5E5E5"> yet another thing and</font>

522
00:29:43,330 --> 00:29:51,100
reality is<font color="#E5E5E5"> keys get compromised so if I</font>

523
00:29:47,230 --> 00:29:53,560
design a system which relies on public

524
00:29:51,100 --> 00:29:57,280
<font color="#E5E5E5">keys and so on I better think</font><font color="#CCCCCC"> about how</font>

525
00:29:53,560 --> 00:30:01,240
to mitigate<font color="#CCCCCC"> min</font><font color="#E5E5E5"> to mitigate</font><font color="#CCCCCC"> compromised</font>

526
00:29:57,280 --> 00:30:02,980
and how to deal with<font color="#E5E5E5"> it and there are</font>

527
00:30:01,240 --> 00:30:04,450
various<font color="#CCCCCC"> ways to</font><font color="#E5E5E5"> deal with</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so if</font>

528
00:30:02,980 --> 00:30:08,970
here<font color="#CCCCCC"> Jennifer</font>

529
00:30:04,450 --> 00:30:12,040
a for example<font color="#CCCCCC"> gets</font><font color="#E5E5E5"> loses their key then</font>

530
00:30:08,970 --> 00:30:15,340
<font color="#E5E5E5">three out</font><font color="#CCCCCC"> of the other</font><font color="#E5E5E5"> four</font><font color="#CCCCCC"> janitors can</font>

531
00:30:12,040 --> 00:30:17,590
still say oh yeah well that's<font color="#CCCCCC"> fine</font>

532
00:30:15,340 --> 00:30:21,600
<font color="#E5E5E5">Jennifer is no longer part of our group</font>

533
00:30:17,590 --> 00:30:25,090
<font color="#CCCCCC">what I can add janitor a with a new key</font>

534
00:30:21,600 --> 00:30:28,540
so they can actually roll that<font color="#E5E5E5"> over and</font>

535
00:30:25,090 --> 00:30:36,699
they<font color="#E5E5E5"> can expand and shrink their own</font>

536
00:30:28,540 --> 00:30:40,320
team yeah what is the progress<font color="#E5E5E5"> of</font><font color="#CCCCCC"> konnex</font>

537
00:30:36,700 --> 00:30:44,050
well there's as I mentioned there's now

538
00:30:40,320 --> 00:30:46,899
a new<font color="#E5E5E5"> prototype implementation</font><font color="#CCCCCC"> with the</font>

539
00:30:44,050 --> 00:30:50,159
revised design<font color="#E5E5E5"> which I revised together</font>

540
00:30:46,900 --> 00:30:53,140
with one<font color="#E5E5E5"> of the update framework people</font>

541
00:30:50,160 --> 00:30:56,490
<font color="#CCCCCC">that is</font><font color="#E5E5E5"> available</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> it interoperates</font>

542
00:30:53,140 --> 00:30:58,690
also with OPM<font color="#CCCCCC"> - so obviously this</font>

543
00:30:56,490 --> 00:31:00,940
project itself needs<font color="#E5E5E5"> to integrate</font>

544
00:30:58,690 --> 00:31:03,490
somehow<font color="#E5E5E5"> with</font><font color="#CCCCCC"> the package manager because</font>

545
00:31:00,940 --> 00:31:05,440
<font color="#E5E5E5">package manager I would like to tell the</font>

546
00:31:03,490 --> 00:31:13,180
package<font color="#E5E5E5"> manager</font><font color="#CCCCCC"> to only install valid</font>

547
00:31:05,440 --> 00:31:16,090
packages and the only small small area

548
00:31:13,180 --> 00:31:19,030
where needs to<font color="#CCCCCC"> interoperate with OPM</font>

549
00:31:16,090 --> 00:31:22,179
itself<font color="#E5E5E5"> is during repository update so</font>

550
00:31:19,030 --> 00:31:26,620
how a repository update nowadays works

551
00:31:22,180 --> 00:31:29,650
in open<font color="#E5E5E5"> - it is it fetches the diff or</font>

552
00:31:26,620 --> 00:31:32,199
it fetches the<font color="#E5E5E5"> new repository</font><font color="#CCCCCC"> then it</font>

553
00:31:29,650 --> 00:31:35,050
makes a diff then<font color="#E5E5E5"> pass</font><font color="#CCCCCC"> then it passes</font>

554
00:31:32,200 --> 00:31:37,450
that information<font color="#E5E5E5"> or</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> file - connects</font>

555
00:31:35,050 --> 00:31:39,760
and connects<font color="#CCCCCC"> it's just a</font><font color="#E5E5E5"> UNIX boundary</font>

556
00:31:37,450 --> 00:31:42,970
which connects<font color="#CCCCCC"> verify</font><font color="#E5E5E5"> address</font><font color="#CCCCCC"> the UNIX</font>

557
00:31:39,760 --> 00:31:44,610
binary which says<font color="#E5E5E5"> yes or</font><font color="#CCCCCC"> no so which</font>

558
00:31:42,970 --> 00:31:49,730
returns zero of one

559
00:31:44,610 --> 00:31:52,889
and open<font color="#CCCCCC"> to only if it successfully gets</font>

560
00:31:49,730 --> 00:31:56,580
gets a successful return code from

561
00:31:52,890 --> 00:32:02,360
connects very<font color="#E5E5E5"> f5 will continue to adapt</font>

562
00:31:56,580 --> 00:32:05,370
this updated repository<font color="#E5E5E5"> and I so I</font>

563
00:32:02,360 --> 00:32:11,850
prepared some some bits<font color="#E5E5E5"> and pieces</font>

564
00:32:05,370 --> 00:32:13,768
oneness<font color="#E5E5E5"> so open open to is as I said</font>

565
00:32:11,850 --> 00:32:21,080
<font color="#E5E5E5">currently in release can indeed state</font>

566
00:32:13,769 --> 00:32:24,330
but<font color="#CCCCCC"> once it's</font><font color="#E5E5E5"> out we can just add at</font>

567
00:32:21,080 --> 00:32:27,120
repositories with open repository at and

568
00:32:24,330 --> 00:32:35,639
now I have a connects<font color="#E5E5E5"> test and I will</font>

569
00:32:27,120 --> 00:32:40,289
use a<font color="#E5E5E5"> local repository here</font><font color="#CCCCCC"> then I say</font>

570
00:32:35,639 --> 00:32:43,889
the forum for<font color="#E5E5E5"> the for the</font><font color="#CCCCCC"> root so for</font>

571
00:32:40,289 --> 00:32:46,260
the for the main<font color="#E5E5E5"> trust anchor is one and</font>

572
00:32:43,889 --> 00:32:51,029
the public key which is able<font color="#CCCCCC"> to sign</font>

573
00:32:46,260 --> 00:32:53,490
something<font color="#CCCCCC"> is having this</font><font color="#E5E5E5"> sha-256 check</font>

574
00:32:51,029 --> 00:32:55,590
<font color="#E5E5E5">them so in this example is</font><font color="#CCCCCC"> only a single</font>

575
00:32:53,490 --> 00:32:57,750
<font color="#E5E5E5">key it's not</font><font color="#CCCCCC"> the optimal solution</font>

576
00:32:55,590 --> 00:33:01,830
because<font color="#E5E5E5"> I would like to</font><font color="#CCCCCC"> specify here</font>

577
00:32:57,750 --> 00:33:04,639
<font color="#CCCCCC">three out of</font><font color="#E5E5E5"> whatever but this is just</font>

578
00:33:01,830 --> 00:33:04,639
for<font color="#E5E5E5"> test</font>

579
00:33:12,840 --> 00:33:24,030
now that failed because<font color="#E5E5E5"> it</font><font color="#CCCCCC"> already</font><font color="#E5E5E5"> had a</font>

580
00:33:15,990 --> 00:33:26,220
<font color="#E5E5E5">connects test yes</font>

581
00:33:24,030 --> 00:33:32,520
invalid repository signature<font color="#E5E5E5"> update</font>

582
00:33:26,220 --> 00:33:35,400
<font color="#E5E5E5">aborted</font><font color="#CCCCCC"> so something went wrong here in</font>

583
00:33:32,520 --> 00:33:39,540
the test report every year<font color="#CCCCCC"> my itself I</font>

584
00:33:35,400 --> 00:33:42,630
can<font color="#E5E5E5"> also say connects verify</font>

585
00:33:39,540 --> 00:33:42,629
[Music]

586
00:33:55,090 --> 00:34:03,139
so<font color="#E5E5E5"> manually oh it says uncaught</font>

587
00:34:01,999 --> 00:34:06,909
exception<font color="#CCCCCC"> hmm</font>

588
00:34:03,139 --> 00:34:09,649
yeah we'll get to can make to<font color="#CCCCCC"> that later</font>

589
00:34:06,909 --> 00:34:13,429
<font color="#CCCCCC">so what is</font><font color="#E5E5E5"> inside</font><font color="#CCCCCC"> of the repository is</font>

590
00:34:09,649 --> 00:34:17,480
apart from the janitors<font color="#CCCCCC"> it's first file</font>

591
00:34:13,429 --> 00:34:20,329
<font color="#E5E5E5">called</font><font color="#CCCCCC"> root which specifies what are the</font>

592
00:34:17,480 --> 00:34:22,879
janitors<font color="#E5E5E5"> so I have two levels set up</font>

593
00:34:20,329 --> 00:34:25,849
here and next to next to<font color="#CCCCCC"> the generators</font>

594
00:34:22,879 --> 00:34:28,699
also can specify snapshot and the

595
00:34:25,849 --> 00:34:32,060
<font color="#CCCCCC">timestamp bot in order</font><font color="#E5E5E5"> to preserve life</font>

596
00:34:28,699 --> 00:34:35,839
<font color="#CCCCCC">nests guarantees and specify means here</font>

597
00:34:32,060 --> 00:34:38,210
<font color="#CCCCCC">it specifies the</font><font color="#E5E5E5"> the name and then on</font>

598
00:34:35,839 --> 00:34:41,270
the right hand<font color="#E5E5E5"> side an expression in</font>

599
00:34:38,210 --> 00:34:47,540
this case<font color="#E5E5E5"> it is an expression of forum</font>

600
00:34:41,270 --> 00:34:54,379
of<font color="#E5E5E5"> two of the generator 1 and the</font>

601
00:34:47,540 --> 00:34:58,310
generator 2 with their<font color="#CCCCCC"> specific public</font>

602
00:34:54,379 --> 00:35:00,190
key hashes and then the<font color="#CCCCCC"> janitor</font><font color="#E5E5E5"> 3 so</font>

603
00:34:58,310 --> 00:35:03,890
there<font color="#E5E5E5"> are three different generators</font>

604
00:35:00,190 --> 00:35:07,520
with these public key hashes where two

605
00:35:03,890 --> 00:35:11,480
of<font color="#E5E5E5"> them need to sign any delegation</font>

606
00:35:07,520 --> 00:35:14,089
order to make that delegation valid<font color="#CCCCCC"> what</font>

607
00:35:11,480 --> 00:35:18,680
else is in here is named well the name

608
00:35:14,089 --> 00:35:21,078
<font color="#CCCCCC">is root</font><font color="#E5E5E5"> and then a list of public keys</font>

609
00:35:18,680 --> 00:35:24,910
which are the root public keys and this

610
00:35:21,079 --> 00:35:28,640
<font color="#E5E5E5">is the RSA this is just RSA key which</font>

611
00:35:24,910 --> 00:35:31,210
which<font color="#E5E5E5"> checks am I then specified on</font>

612
00:35:28,640 --> 00:35:31,210
command line

613
00:35:32,210 --> 00:35:37,220
what<font color="#CCCCCC"> else is specified here</font><font color="#E5E5E5"> is there</font>

614
00:35:34,190 --> 00:35:40,390
where are the keys and where is the<font color="#E5E5E5"> data</font>

615
00:35:37,220 --> 00:35:44,689
I want<font color="#E5E5E5"> to</font><font color="#CCCCCC"> verify or I want</font><font color="#E5E5E5"> to have and</font>

616
00:35:40,390 --> 00:35:46,970
the list of signatures<font color="#CCCCCC"> and</font><font color="#E5E5E5"> and this in</font>

617
00:35:44,690 --> 00:35:50,150
this<font color="#E5E5E5"> case</font><font color="#CCCCCC"> it's only</font><font color="#E5E5E5"> a single signature</font>

618
00:35:46,970 --> 00:35:56,348
by the key<font color="#E5E5E5"> name the root a and the</font>

619
00:35:50,150 --> 00:35:59,839
signatures in here then each<font color="#CCCCCC"> of the</font>

620
00:35:56,349 --> 00:36:02,569
genitals have their own file where they

621
00:35:59,839 --> 00:36:05,359
also have their own<font color="#E5E5E5"> signature and in</font>

622
00:36:02,569 --> 00:36:07,609
their file they specified their target

623
00:36:05,359 --> 00:36:08,420
so they can specify the delegations and

624
00:36:07,609 --> 00:36:11,180
targets

625
00:36:08,420 --> 00:36:15,890
and the targets are<font color="#CCCCCC"> the actual data</font>

626
00:36:11,180 --> 00:36:20,240
files so they contain the consists of a

627
00:36:15,890 --> 00:36:24,828
file name so<font color="#CCCCCC"> to find them</font><font color="#E5E5E5"> fufu 1.0</font><font color="#CCCCCC"> slash</font>

628
00:36:20,240 --> 00:36:28,729
as the size<font color="#CCCCCC"> 0 eggs</font><font color="#E5E5E5"> 1 FF and</font><font color="#CCCCCC"> it's digest</font>

629
00:36:24,829 --> 00:36:31,250
should be this checksum and then another

630
00:36:28,730 --> 00:36:35,299
file name which is<font color="#E5E5E5"> path slash opium</font>

631
00:36:31,250 --> 00:36:37,849
should have that<font color="#E5E5E5"> digest now this is only</font>

632
00:36:35,299 --> 00:36:40,519
a single<font color="#CCCCCC"> generator</font><font color="#E5E5E5"> and the single</font><font color="#CCCCCC"> gender</font>

633
00:36:37,849 --> 00:36:44,390
then also has their<font color="#E5E5E5"> public key in here</font>

634
00:36:40,519 --> 00:36:45,950
<font color="#E5E5E5">and also</font><font color="#CCCCCC"> has here delegations and it</font>

635
00:36:44,390 --> 00:36:51,160
delegates<font color="#E5E5E5"> the past</font>

636
00:36:45,950 --> 00:36:53,960
fubar<font color="#E5E5E5"> to the user</font><font color="#CCCCCC"> so the user</font><font color="#E5E5E5"> fubar is</font>

637
00:36:51,160 --> 00:36:58,450
here and the user<font color="#E5E5E5"> fubar can only specify</font>

638
00:36:53,960 --> 00:37:01,910
targets which which are below<font color="#E5E5E5"> the</font>

639
00:36:58,450 --> 00:37:05,660
directory food<font color="#E5E5E5"> for example</font><font color="#CCCCCC"> test or txt</font>

640
00:37:01,910 --> 00:37:08,180
<font color="#CCCCCC">and the delegation to</font><font color="#E5E5E5"> fubar here oughta</font>

641
00:37:05,660 --> 00:37:10,730
means that<font color="#CCCCCC"> fuba is the</font><font color="#E5E5E5"> only author</font>

642
00:37:08,180 --> 00:37:12,919
responsible for that<font color="#E5E5E5"> sub directory so</font>

643
00:37:10,730 --> 00:37:17,930
there<font color="#E5E5E5"> doesn't need to be</font><font color="#CCCCCC"> a quorum</font><font color="#E5E5E5"> but</font>

644
00:37:12,920 --> 00:37:20,509
<font color="#E5E5E5">only this single fubar but inside of the</font>

645
00:37:17,930 --> 00:37:22,700
root file<font color="#E5E5E5"> I had an expression</font><font color="#CCCCCC"> that I</font>

646
00:37:20,509 --> 00:37:26,450
need two out of the three Genesis to say

647
00:37:22,700 --> 00:37:28,368
to make something true this<font color="#E5E5E5"> is also the</font>

648
00:37:26,450 --> 00:37:30,769
reason<font color="#CCCCCC"> why there are multiple genders</font>

649
00:37:28,369 --> 00:37:35,269
<font color="#E5E5E5">here and the junction 2 has a different</font>

650
00:37:30,769 --> 00:37:37,939
set of targets files<font color="#E5E5E5"> and no delegations</font>

651
00:37:35,269 --> 00:37:41,359
in this case and the<font color="#E5E5E5"> third generator and</font>

652
00:37:37,940 --> 00:37:45,200
the<font color="#E5E5E5"> third generator also</font><font color="#CCCCCC"> has a different</font>

653
00:37:41,359 --> 00:37:49,400
<font color="#E5E5E5">set of files and then as well the</font>

654
00:37:45,200 --> 00:37:51,589
delegation<font color="#CCCCCC"> to fubar so two of them</font><font color="#E5E5E5"> have</font>

655
00:37:49,400 --> 00:37:54,799
the<font color="#E5E5E5"> delegation</font><font color="#CCCCCC"> to fubar</font><font color="#E5E5E5"> and that makes</font>

656
00:37:51,589 --> 00:37:57,099
the delegation only valid if only a

657
00:37:54,799 --> 00:38:00,769
<font color="#E5E5E5">single janitor says something this</font>

658
00:37:57,099 --> 00:38:09,529
target or delegation<font color="#E5E5E5"> is not treated as</font>

659
00:38:00,769 --> 00:38:12,160
<font color="#E5E5E5">valid so what else I also wanted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> talk</font>

660
00:38:09,529 --> 00:38:19,369
a bit<font color="#CCCCCC"> about micro dinars which is</font>

661
00:38:12,160 --> 00:38:21,950
opinionated<font color="#E5E5E5"> DNS server and resolver</font><font color="#CCCCCC"> dns</font>

662
00:38:19,369 --> 00:38:25,130
itself this protocol used

663
00:38:21,950 --> 00:38:28,910
<font color="#E5E5E5">or over</font><font color="#CCCCCC"> the Internet this decentralized</font>

664
00:38:25,130 --> 00:38:32,030
and delegated key value store where the

665
00:38:28,910 --> 00:38:34,670
<font color="#CCCCCC">root authority is at Jana and her 13</font>

666
00:38:32,030 --> 00:38:37,900
<font color="#CCCCCC">would service and they delegate country</font>

667
00:38:34,670 --> 00:38:40,880
domains and<font color="#CCCCCC"> till these two other</font>

668
00:38:37,900 --> 00:38:44,360
registrar's<font color="#E5E5E5"> and they delegate and for</font>

669
00:38:40,880 --> 00:38:48,290
the<font color="#E5E5E5"> sub domains to other people and name</font>

670
00:38:44,360 --> 00:38:50,930
services the main purpose of<font color="#E5E5E5"> DNS is to</font>

671
00:38:48,290 --> 00:38:57,290
resolve domain names<font color="#E5E5E5"> to IP</font><font color="#CCCCCC"> addresses</font>

672
00:38:50,930 --> 00:38:59,509
<font color="#E5E5E5">that</font><font color="#CCCCCC"> is yeah that is why it is</font><font color="#E5E5E5"> used</font><font color="#CCCCCC"> or</font>

673
00:38:57,290 --> 00:39:03,560
<font color="#CCCCCC">what this use most on</font><font color="#E5E5E5"> the internet but</font>

674
00:38:59,510 --> 00:39:06,200
it does contain<font color="#E5E5E5"> also lots of other fun</font>

675
00:39:03,560 --> 00:39:07,880
stuff so you<font color="#CCCCCC"> don't have to use</font><font color="#E5E5E5"> domain</font>

676
00:39:06,200 --> 00:39:10,730
<font color="#E5E5E5">names and you don't have to use IP</font>

677
00:39:07,880 --> 00:39:13,090
addresses but<font color="#CCCCCC"> you can just or any key</font>

678
00:39:10,730 --> 00:39:18,380
value data for which you are

679
00:39:13,090 --> 00:39:20,240
authoritative<font color="#E5E5E5"> the project itself started</font>

680
00:39:18,380 --> 00:39:23,420
actually<font color="#E5E5E5"> out because I wanted</font><font color="#CCCCCC"> to</font>

681
00:39:20,240 --> 00:39:26,330
implement<font color="#E5E5E5"> DNS resolver recursive</font>

682
00:39:23,420 --> 00:39:29,380
resolver<font color="#E5E5E5"> so my motivation</font><font color="#CCCCCC"> was</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> I</font>

683
00:39:26,330 --> 00:39:31,910
really want to understand<font color="#CCCCCC"> what are the</font>

684
00:39:29,380 --> 00:39:34,280
difficulties<font color="#E5E5E5"> in resolving and domain</font>

685
00:39:31,910 --> 00:39:36,470
name<font color="#E5E5E5"> now obviously I can always go to</font>

686
00:39:34,280 --> 00:39:39,620
Google's name server and<font color="#E5E5E5"> ask Google's</font>

687
00:39:36,470 --> 00:39:43,370
name server what is the IP<font color="#CCCCCC"> address for</font>

688
00:39:39,620 --> 00:39:45,950
google.com or<font color="#E5E5E5"> for facebook.com or so but</font>

689
00:39:43,370 --> 00:39:48,400
<font color="#CCCCCC">I wanted to actually do it</font><font color="#E5E5E5"> how it is</font>

690
00:39:45,950 --> 00:39:53,149
<font color="#E5E5E5">defined in the RFC so instead of going</font>

691
00:39:48,400 --> 00:39:56,390
to to a<font color="#E5E5E5"> caching resolver I want to go to</font>

692
00:39:53,150 --> 00:39:58,850
the name service which run by<font color="#E5E5E5"> Jana and</font>

693
00:39:56,390 --> 00:40:02,990
<font color="#E5E5E5">by</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> but the other companies and just</font>

694
00:39:58,850 --> 00:40:05,360
go<font color="#E5E5E5"> through this whole network to</font><font color="#CCCCCC"> find</font>

695
00:40:02,990 --> 00:40:13,490
out which name<font color="#E5E5E5"> server I have to ask for</font>

696
00:40:05,360 --> 00:40:16,130
<font color="#E5E5E5">what so the motivation was a recursive</font>

697
00:40:13,490 --> 00:40:19,279
resolver<font color="#E5E5E5"> I figured out pretty quickly</font>

698
00:40:16,130 --> 00:40:21,490
<font color="#CCCCCC">that</font><font color="#E5E5E5"> I want to</font><font color="#CCCCCC"> also be able</font><font color="#E5E5E5"> to configure</font>

699
00:40:19,280 --> 00:40:25,780
that<font color="#CCCCCC"> recursive resolver</font><font color="#E5E5E5"> like</font>

700
00:40:21,490 --> 00:40:29,810
blacklisting<font color="#E5E5E5"> advertisement networks or</font>

701
00:40:25,780 --> 00:40:31,700
<font color="#E5E5E5">having local overrides so</font><font color="#CCCCCC"> I if I own my</font>

702
00:40:29,810 --> 00:40:34,020
own<font color="#E5E5E5"> domain I maybe want to have a</font>

703
00:40:31,700 --> 00:40:36,689
<font color="#E5E5E5">different name</font><font color="#CCCCCC"> server response</font>

704
00:40:34,020 --> 00:40:39,660
for me as an internal user<font color="#E5E5E5"> of that</font>

705
00:40:36,690 --> 00:40:42,420
domain so my<font color="#E5E5E5"> development network and so</font>

706
00:40:39,660 --> 00:40:46,379
on does<font color="#CCCCCC"> not need to be</font><font color="#E5E5E5"> public but</font><font color="#CCCCCC"> I on</font>

707
00:40:42,420 --> 00:40:51,080
my laptop<font color="#E5E5E5"> I want to use be able to use</font>

708
00:40:46,380 --> 00:40:54,180
DNS for resolving also my internal names

709
00:40:51,080 --> 00:40:56,220
<font color="#CCCCCC">and then I figured out</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> actually DNS</font>

710
00:40:54,180 --> 00:41:00,049
has a lot of<font color="#CCCCCC"> configuration information</font>

711
00:40:56,220 --> 00:41:04,379
<font color="#E5E5E5">already in band and the protocol itself</font>

712
00:41:00,050 --> 00:41:06,470
specifies zone files which is<font color="#CCCCCC"> a format</font>

713
00:41:04,380 --> 00:41:09,869
<font color="#CCCCCC">for serializing</font>

714
00:41:06,470 --> 00:41:12,689
domain name data and put it<font color="#E5E5E5"> into the</font>

715
00:41:09,869 --> 00:41:16,080
server but<font color="#CCCCCC"> it</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> specifies dynamic</font>

716
00:41:12,690 --> 00:41:19,040
updates of such zones<font color="#E5E5E5"> and it also</font>

717
00:41:16,080 --> 00:41:25,100
specifies<font color="#E5E5E5"> authentication so</font>

718
00:41:19,040 --> 00:41:29,310
authorization of packages of DNS frames

719
00:41:25,100 --> 00:41:32,368
this all let me<font color="#E5E5E5"> think oh yeah I can just</font>

720
00:41:29,310 --> 00:41:35,820
<font color="#E5E5E5">implement the DNS server and then use</font>

721
00:41:32,369 --> 00:41:37,980
the DNS server which has<font color="#E5E5E5"> dynamic updates</font>

722
00:41:35,820 --> 00:41:40,800
and so on as a front-end<font color="#E5E5E5"> or as a</font>

723
00:41:37,980 --> 00:41:43,140
configuration<font color="#E5E5E5"> front end for my recursive</font>

724
00:41:40,800 --> 00:41:45,660
resolver<font color="#E5E5E5"> this also means I don't need</font>

725
00:41:43,140 --> 00:41:49,379
any persistent<font color="#CCCCCC"> state</font><font color="#E5E5E5"> just delegate that</font>

726
00:41:45,660 --> 00:41:52,500
this is not<font color="#E5E5E5"> my problem here right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> I</font>

727
00:41:49,380 --> 00:41:55,109
just<font color="#CCCCCC"> start with a clean</font><font color="#E5E5E5"> state and get as</font>

728
00:41:52,500 --> 00:42:00,540
a boot parameter<font color="#CCCCCC"> may be the secret for</font>

729
00:41:55,109 --> 00:42:03,569
<font color="#CCCCCC">the</font><font color="#E5E5E5"> H Mac and then you can do dynamic</font>

730
00:42:00,540 --> 00:42:07,830
<font color="#E5E5E5">updates or dynamic</font><font color="#CCCCCC"> configuration changes</font>

731
00:42:03,570 --> 00:42:10,590
of the resolver<font color="#E5E5E5"> yet this led</font><font color="#CCCCCC"> me to</font>

732
00:42:07,830 --> 00:42:14,040
<font color="#E5E5E5">actually implement</font><font color="#CCCCCC"> the authoritative</font>

733
00:42:10,590 --> 00:42:16,619
server in DNS or for DNS which

734
00:42:14,040 --> 00:42:19,500
implements zone files<font color="#CCCCCC"> so it can pass</font>

735
00:42:16,619 --> 00:42:21,840
zone files<font color="#E5E5E5"> can receive dynamic updates</font>

736
00:42:19,500 --> 00:42:24,150
and<font color="#E5E5E5"> obviously if I can receive any</font>

737
00:42:21,840 --> 00:42:25,800
dynamic updates<font color="#E5E5E5"> that's not much</font><font color="#CCCCCC"> news</font>

738
00:42:24,150 --> 00:42:27,900
because I want<font color="#E5E5E5"> to have some</font>

739
00:42:25,800 --> 00:42:30,240
authentication<font color="#E5E5E5"> for that and for</font>

740
00:42:27,900 --> 00:42:33,690
authentication<font color="#E5E5E5"> DNS specifies teasing</font>

741
00:42:30,240 --> 00:42:36,479
which are<font color="#CCCCCC"> H Meg</font><font color="#E5E5E5"> secrets so you have</font>

742
00:42:33,690 --> 00:42:38,580
shared secrets which you can do another

743
00:42:36,480 --> 00:42:40,530
method of authentication which<font color="#CCCCCC"> I haven't</font>

744
00:42:38,580 --> 00:42:44,009
implemented<font color="#E5E5E5"> yet but I'm going</font><font color="#CCCCCC"> to</font>

745
00:42:40,530 --> 00:42:47,100
implement soon<font color="#E5E5E5"> is to just use DNS over</font>

746
00:42:44,010 --> 00:42:49,509
<font color="#CCCCCC">tillis</font><font color="#E5E5E5"> and required in TLS client</font>

747
00:42:47,100 --> 00:42:53,240
certificates

748
00:42:49,509 --> 00:42:54,740
the server itself does not<font color="#CCCCCC"> need any</font>

749
00:42:53,240 --> 00:42:58,538
persistent<font color="#CCCCCC"> states</font>

750
00:42:54,740 --> 00:43:02,240
so no persistent block device or<font color="#CCCCCC"> so the</font>

751
00:42:58,539 --> 00:43:04,549
<font color="#CCCCCC">DNS server</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just another virtual</font>

752
00:43:02,240 --> 00:43:09,258
machine<font color="#E5E5E5"> image which you start and which</font>

753
00:43:04,549 --> 00:43:13,009
has its initial data like the<font color="#CCCCCC"> hmx secret</font>

754
00:43:09,259 --> 00:43:18,680
<font color="#CCCCCC">and afterwards you can fill it</font>

755
00:43:13,009 --> 00:43:23,690
dynamically<font color="#E5E5E5"> with more</font><font color="#CCCCCC"> data so if I look</font>

756
00:43:18,680 --> 00:43:25,519
into<font color="#CCCCCC"> my examples I will briefly go to a</font>

757
00:43:23,690 --> 00:43:28,339
primary implementation

758
00:43:25,519 --> 00:43:30,288
this again is a<font color="#E5E5E5"> unicorn also I have a</font>

759
00:43:28,339 --> 00:43:32,808
<font color="#E5E5E5">configuration which</font><font color="#CCCCCC"> is now a bit more</font>

760
00:43:30,289 --> 00:43:35,059
complex because<font color="#CCCCCC"> it already</font><font color="#E5E5E5"> includes some</font>

761
00:43:32,809 --> 00:43:38,960
IP<font color="#E5E5E5"> information because here I'm using</font>

762
00:43:35,059 --> 00:43:43,190
<font color="#E5E5E5">actually in artistic then I have some</font>

763
00:43:38,960 --> 00:43:46,039
<font color="#E5E5E5">more</font><font color="#CCCCCC"> peg addresses dependencies and then</font>

764
00:43:43,190 --> 00:43:48,710
the<font color="#E5E5E5"> unique kernel itself now says oh</font>

765
00:43:46,039 --> 00:43:52,430
yeah<font color="#CCCCCC"> here's</font><font color="#E5E5E5"> actually my data my data</font>

766
00:43:48,710 --> 00:44:01,630
contains of start of authorities of some

767
00:43:52,430 --> 00:44:05,739
entries and some a entries and also some

768
00:44:01,630 --> 00:44:10,420
secret H<font color="#CCCCCC"> Mike secrets some secret keys</font>

769
00:44:05,739 --> 00:44:13,670
which<font color="#E5E5E5"> are all in the end set to the</font>

770
00:44:10,420 --> 00:44:17,390
primary name server which is which done

771
00:44:13,670 --> 00:44:20,269
then does listen listen on the network

772
00:44:17,390 --> 00:44:29,720
<font color="#E5E5E5">stick now I can say Amy Raj configure -</font>

773
00:44:20,269 --> 00:44:34,808
<font color="#E5E5E5">tuk VM and make and I end up with the</font>

774
00:44:29,720 --> 00:44:39,609
primary<font color="#E5E5E5"> dot uk' VM which is another</font>

775
00:44:34,809 --> 00:44:44,839
unicorn<font color="#CCCCCC"> Oh which I can now</font><font color="#E5E5E5"> start so I</font>

776
00:44:39,609 --> 00:44:46,759
now I have to pass the the<font color="#CCCCCC"> UK vm</font><font color="#E5E5E5"> bin so</font>

777
00:44:44,839 --> 00:44:49,788
the whole system process the information

778
00:44:46,759 --> 00:44:54,710
<font color="#CCCCCC">which network device</font><font color="#E5E5E5"> unicorn should use</font>

779
00:44:49,789 --> 00:44:59,239
I use tab<font color="#CCCCCC"> 1 and then I pass the virtual</font>

780
00:44:54,710 --> 00:45:01,779
machine image and now also increase the

781
00:44:59,239 --> 00:45:01,779
<font color="#E5E5E5">lock level</font>

782
00:45:01,920 --> 00:45:08,760
so now I have a server running on the IP

783
00:45:04,950 --> 00:45:13,129
address<font color="#E5E5E5"> 1004</font><font color="#CCCCCC"> t22 on my local</font><font color="#E5E5E5"> machine</font>

784
00:45:08,760 --> 00:45:22,010
which is all connected<font color="#CCCCCC"> to a local</font><font color="#E5E5E5"> bridge</font>

785
00:45:13,130 --> 00:45:26,609
and I can now dig any so I can request<font color="#E5E5E5"> I</font>

786
00:45:22,010 --> 00:45:28,470
can<font color="#E5E5E5"> request information about the zone I</font>

787
00:45:26,609 --> 00:45:31,500
<font color="#E5E5E5">configured</font><font color="#CCCCCC"> here the zone is</font><font color="#E5E5E5"> named me Raj</font>

788
00:45:28,470 --> 00:45:34,558
can also try to<font color="#E5E5E5"> initiate</font><font color="#CCCCCC"> the zone</font>

789
00:45:31,500 --> 00:45:36,990
transfer which doesn't work<font color="#CCCCCC"> because it</font>

790
00:45:34,559 --> 00:45:39,990
doesn't respond that says transfer

791
00:45:36,990 --> 00:45:58,558
failed because zone transfers here

792
00:45:39,990 --> 00:46:03,598
require here require a key so if I give

793
00:45:58,559 --> 00:46:08,760
this dick<font color="#E5E5E5"> Keith with the zone transfer</font><font color="#CCCCCC"> I</font>

794
00:46:03,599 --> 00:46:11,250
actually get<font color="#CCCCCC"> the</font><font color="#E5E5E5"> whole zone out here so</font>

795
00:46:08,760 --> 00:46:13,700
that's that's<font color="#E5E5E5"> basically how I run at the</font>

796
00:46:11,250 --> 00:46:19,559
moment my name<font color="#E5E5E5"> services they are just</font>

797
00:46:13,700 --> 00:46:21,660
those<font color="#E5E5E5"> me Raj unicorn</font><font color="#CCCCCC"> odds which don't</font>

798
00:46:19,559 --> 00:46:24,630
have access<font color="#CCCCCC"> to any block device</font><font color="#E5E5E5"> so they</font>

799
00:46:21,660 --> 00:46:28,410
can actually<font color="#E5E5E5"> not write any any data they</font>

800
00:46:24,630 --> 00:46:32,039
cannot record<font color="#E5E5E5"> IP addresses and so on and</font>

801
00:46:28,410 --> 00:46:34,950
I<font color="#CCCCCC"> don't need</font><font color="#E5E5E5"> to another step once I had</font>

802
00:46:32,039 --> 00:46:37,589
<font color="#E5E5E5">this DNS server is</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I'm continuously</font>

803
00:46:34,950 --> 00:46:41,250
<font color="#CCCCCC">running into this issue of</font><font color="#E5E5E5"> let's encrypt</font>

804
00:46:37,589 --> 00:46:44,250
certificates<font color="#CCCCCC"> needing renewal and let's</font>

805
00:46:41,250 --> 00:46:46,650
encrypt<font color="#E5E5E5"> is a very nice specifies a very</font>

806
00:46:44,250 --> 00:46:49,200
nice protocol where you can prove your

807
00:46:46,650 --> 00:46:54,059
ownership<font color="#E5E5E5"> of a domain we</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> DNS as well</font>

808
00:46:49,200 --> 00:46:56,399
<font color="#E5E5E5">and now that</font><font color="#CCCCCC"> I have</font><font color="#E5E5E5"> a DNS server</font><font color="#CCCCCC"> written</font>

809
00:46:54,059 --> 00:46:58,200
<font color="#E5E5E5">a no camel which does dynamic updates</font>

810
00:46:56,400 --> 00:47:00,210
and so on<font color="#E5E5E5"> I thought oh</font><font color="#CCCCCC"> yeah let's</font>

811
00:46:58,200 --> 00:47:03,210
integrate the let's encrypt<font color="#E5E5E5"> library</font>

812
00:47:00,210 --> 00:47:05,460
which<font color="#E5E5E5"> a friend of mine maker has</font>

813
00:47:03,210 --> 00:47:08,869
implemented<font color="#E5E5E5"> in</font><font color="#CCCCCC"> all camel and just used</font>

814
00:47:05,460 --> 00:47:12,029
it and now now I end up with<font color="#CCCCCC"> having a</font>

815
00:47:08,869 --> 00:47:14,230
unicorn<font color="#E5E5E5"> which is a DNS</font><font color="#CCCCCC"> server and which</font>

816
00:47:12,029 --> 00:47:17,180
is<font color="#E5E5E5"> also able</font><font color="#CCCCCC"> to</font>

817
00:47:14,230 --> 00:47:19,940
<font color="#E5E5E5">deal with the let's</font><font color="#CCCCCC"> encrypts at my</font>

818
00:47:17,180 --> 00:47:22,190
protocol and<font color="#E5E5E5"> provision certificates</font>

819
00:47:19,940 --> 00:47:24,380
<font color="#CCCCCC">provision certificate signing request to</font>

820
00:47:22,190 --> 00:47:26,660
certificates<font color="#CCCCCC"> and</font><font color="#E5E5E5"> how I</font><font color="#CCCCCC"> set that up</font>

821
00:47:24,380 --> 00:47:29,090
<font color="#CCCCCC">because I don't</font><font color="#E5E5E5"> want to have all of</font><font color="#CCCCCC"> that</font>

822
00:47:26,660 --> 00:47:31,879
<font color="#E5E5E5">inside</font><font color="#CCCCCC"> of the primary name server I just</font>

823
00:47:29,090 --> 00:47:33,710
have a secondary<font color="#E5E5E5"> name server which deals</font>

824
00:47:31,880 --> 00:47:35,690
with<font color="#E5E5E5"> the let's</font><font color="#CCCCCC"> encrypt</font><font color="#E5E5E5"> updates they</font>

825
00:47:33,710 --> 00:47:37,490
store the let's encrypt certificates<font color="#E5E5E5"> and</font>

826
00:47:35,690 --> 00:47:40,130
the<font color="#E5E5E5"> lot let's encrypt certificates</font>

827
00:47:37,490 --> 00:47:43,220
running rehearse also in<font color="#E5E5E5"> DNS because it</font>

828
00:47:40,130 --> 00:47:46,220
is a key<font color="#CCCCCC"> value store</font><font color="#E5E5E5"> after all itself</font>

829
00:47:43,220 --> 00:47:48,529
let me just store my signing<font color="#CCCCCC"> request and</font>

830
00:47:46,220 --> 00:47:51,339
my certificates in there all this

831
00:47:48,530 --> 00:47:54,980
storing is obviously<font color="#E5E5E5"> protected or</font>

832
00:47:51,340 --> 00:47:57,320
<font color="#E5E5E5">authenticated by the H max</font><font color="#CCCCCC"> secret which</font>

833
00:47:54,980 --> 00:48:00,560
<font color="#E5E5E5">is only basically</font><font color="#CCCCCC"> a signature but</font>

834
00:47:57,320 --> 00:48:01,700
<font color="#E5E5E5">there's no encryption involved but that</font>

835
00:48:00,560 --> 00:48:04,100
doesn't need to<font color="#E5E5E5"> be any encryption</font>

836
00:48:01,700 --> 00:48:06,140
involved because<font color="#E5E5E5"> it's not private data</font>

837
00:48:04,100 --> 00:48:09,500
<font color="#E5E5E5">there's a certificate</font><font color="#CCCCCC"> signing request</font>

838
00:48:06,140 --> 00:48:13,220
and certificate and now<font color="#E5E5E5"> this let's</font>

839
00:48:09,500 --> 00:48:15,680
encrypt<font color="#CCCCCC"> Dena's secondary server goes</font>

840
00:48:13,220 --> 00:48:17,810
along and<font color="#E5E5E5"> waits for zone updates</font><font color="#CCCCCC"> and</font>

841
00:48:15,680 --> 00:48:19,940
whenever the receives an update<font color="#CCCCCC"> it</font>

842
00:48:17,810 --> 00:48:23,870
checks whether all certificate signing

843
00:48:19,940 --> 00:48:26,090
request<font color="#E5E5E5"> have matching certificates</font><font color="#CCCCCC"> we're</font>

844
00:48:23,870 --> 00:48:28,670
matching<font color="#E5E5E5"> is defined as oh they have the</font>

845
00:48:26,090 --> 00:48:31,280
same they have the they<font color="#CCCCCC"> use the same</font>

846
00:48:28,670 --> 00:48:33,950
public key so the request<font color="#E5E5E5"> and can</font>

847
00:48:31,280 --> 00:48:36,020
<font color="#E5E5E5">actually use it and the certificate is</font>

848
00:48:33,950 --> 00:48:39,020
still inside of the validity range

849
00:48:36,020 --> 00:48:43,480
<font color="#E5E5E5">so since let's encrypt is only valid</font><font color="#CCCCCC"> for</font>

850
00:48:39,020 --> 00:48:46,160
90<font color="#E5E5E5"> days it will renew then after after</font>

851
00:48:43,480 --> 00:48:52,250
<font color="#E5E5E5">89 days I think</font><font color="#CCCCCC"> at the moment or idea it</font>

852
00:48:46,160 --> 00:48:55,549
is<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> now still I haven't</font><font color="#E5E5E5"> had any</font>

853
00:48:52,250 --> 00:48:58,250
persistency so I don't store any<font color="#CCCCCC"> data at</font>

854
00:48:55,550 --> 00:49:00,530
the<font color="#CCCCCC"> moment on disk</font><font color="#E5E5E5"> it's all only in the</font>

855
00:48:58,250 --> 00:49:04,190
memory<font color="#E5E5E5"> you can get away with that by</font>

856
00:49:00,530 --> 00:49:06,530
<font color="#E5E5E5">running multiple DNS services and</font><font color="#CCCCCC"> you</font>

857
00:49:04,190 --> 00:49:10,370
just have a<font color="#CCCCCC"> failover from primary to</font>

858
00:49:06,530 --> 00:49:14,870
secondary if the primary<font color="#CCCCCC"> is down and and</font>

859
00:49:10,370 --> 00:49:18,170
and so on<font color="#CCCCCC"> okay I have to hurry up in</font>

860
00:49:14,870 --> 00:49:20,930
gudinas I also have persistency using

861
00:49:18,170 --> 00:49:23,240
<font color="#CCCCCC">git because as I mentioned in Oklahoma</font>

862
00:49:20,930 --> 00:49:26,000
we<font color="#E5E5E5"> are in</font><font color="#CCCCCC"> Morocco</font><font color="#E5E5E5"> as we have a good</font>

863
00:49:23,240 --> 00:49:27,379
<font color="#CCCCCC">implementation now I can just push zone</font>

864
00:49:26,000 --> 00:49:31,789
<font color="#CCCCCC">update also</font><font color="#E5E5E5"> to a good</font>

865
00:49:27,380 --> 00:49:35,869
<font color="#CCCCCC">three</font><font color="#E5E5E5"> and commit that</font><font color="#CCCCCC"> and the primary</font>

866
00:49:31,789 --> 00:49:39,950
can retrieve<font color="#E5E5E5"> get information</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> can</font>

867
00:49:35,869 --> 00:49:43,869
clone a git repository<font color="#E5E5E5"> and use the zone</font>

868
00:49:39,950 --> 00:49:48,980
file inside of<font color="#E5E5E5"> the git repository as a</font>

869
00:49:43,869 --> 00:49:52,329
zone file<font color="#E5E5E5"> so wrap up I have server and</font>

870
00:49:48,980 --> 00:49:55,309
resolver<font color="#E5E5E5"> I interoperate with other</font>

871
00:49:52,329 --> 00:49:57,319
servers<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> have any custom</font>

872
00:49:55,309 --> 00:49:59,630
configuration language because I thought

873
00:49:57,319 --> 00:50:03,500
Dean as the protocol is expressive

874
00:49:59,630 --> 00:50:07,099
enough<font color="#CCCCCC"> I have this</font><font color="#E5E5E5"> hidden secondary for</font>

875
00:50:03,500 --> 00:50:09,609
persistency and<font color="#E5E5E5"> let's encrypt I let me</font>

876
00:50:07,099 --> 00:50:12,950
briefly talk about<font color="#E5E5E5"> called</font><font color="#CCCCCC"> of Qaddafi's</font>

877
00:50:09,609 --> 00:50:13,519
protocol used by<font color="#E5E5E5"> Columbus to sync</font>

878
00:50:12,950 --> 00:50:16,910
calendars

879
00:50:13,519 --> 00:50:19,189
this is a<font color="#CCCCCC"> project which we got funded by</font>

880
00:50:16,910 --> 00:50:22,730
a<font color="#E5E5E5"> broad</font><font color="#CCCCCC"> track fund</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> a very nice</font>

881
00:50:19,190 --> 00:50:27,109
<font color="#E5E5E5">funding program called off itself is</font>

882
00:50:22,730 --> 00:50:30,859
based on vector which is yeah the data

883
00:50:27,109 --> 00:50:33,200
and versioning in<font color="#CCCCCC"> indie web so it does</font>

884
00:50:30,859 --> 00:50:36,799
some authentication<font color="#CCCCCC"> using HTTP</font>

885
00:50:33,200 --> 00:50:39,529
authentication<font color="#CCCCCC"> does XML</font><font color="#E5E5E5"> request which</font>

886
00:50:36,799 --> 00:50:42,890
specific<font color="#E5E5E5"> for retrieving and uploading</font>

887
00:50:39,529 --> 00:50:45,019
files<font color="#E5E5E5"> we worked on</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> since</font><font color="#CCCCCC"> April this</font>

888
00:50:42,890 --> 00:50:48,230
year and it's still work in progress<font color="#E5E5E5"> but</font>

889
00:50:45,019 --> 00:50:51,410
it's coming along<font color="#CCCCCC"> well</font><font color="#E5E5E5"> and it is just</font>

890
00:50:48,230 --> 00:50:53,809
impressive<font color="#CCCCCC"> how much how complicated</font><font color="#E5E5E5"> such</font>

891
00:50:51,410 --> 00:50:56,930
kind<font color="#E5E5E5"> of protocol is on the one side you</font>

892
00:50:53,809 --> 00:50:59,210
<font color="#CCCCCC">have HTTP and exam embedded XML request</font>

893
00:50:56,930 --> 00:51:02,839
<font color="#E5E5E5">on the other side you have</font><font color="#CCCCCC"> the iCalendar</font>

894
00:50:59,210 --> 00:51:06,440
file format which is more like RFC<font color="#E5E5E5"> eight</font>

895
00:51:02,839 --> 00:51:09,109
to two key value<font color="#E5E5E5"> thing but then they</font>

896
00:51:06,440 --> 00:51:11,779
thought keys and values are not enough

897
00:51:09,109 --> 00:51:14,359
<font color="#CCCCCC">so we need multi-line values and then</font>

898
00:51:11,779 --> 00:51:18,049
also we need parameter keys and values

899
00:51:14,359 --> 00:51:21,470
<font color="#E5E5E5">for each key so it actually turns out to</font>

900
00:51:18,049 --> 00:51:24,109
<font color="#CCCCCC">be pretty</font><font color="#E5E5E5"> complex to pass and to operate</font>

901
00:51:21,470 --> 00:51:26,629
<font color="#E5E5E5">on it also the recurrence</font><font color="#CCCCCC"> rules so you</font>

902
00:51:24,109 --> 00:51:29,750
can define recurrent events like<font color="#E5E5E5"> weekly</font>

903
00:51:26,630 --> 00:51:32,890
event<font color="#CCCCCC"> but</font><font color="#E5E5E5"> not in the 50th week but only</font>

904
00:51:29,750 --> 00:51:36,890
in the<font color="#CCCCCC"> 48</font><font color="#E5E5E5"> week or something like that</font>

905
00:51:32,890 --> 00:51:40,220
<font color="#E5E5E5">that's all</font><font color="#CCCCCC"> I am prepared</font><font color="#E5E5E5"> so what does</font>

906
00:51:36,890 --> 00:51:41,060
<font color="#E5E5E5">manraja is it's an</font><font color="#CCCCCC"> operating system</font>

907
00:51:40,220 --> 00:51:43,100
engineer

908
00:51:41,060 --> 00:51:44,900
using a very radical approach<font color="#CCCCCC"> by just</font>

909
00:51:43,100 --> 00:51:47,990
getting<font color="#CCCCCC"> rid of everything we</font><font color="#E5E5E5"> have right</font>

910
00:51:44,900 --> 00:51:52,640
now and<font color="#E5E5E5"> redeveloping it in inside of a</font>

911
00:51:47,990 --> 00:51:55,580
fresh<font color="#CCCCCC"> high-level language it avoids a</font>

912
00:51:52,640 --> 00:51:58,940
lot<font color="#CCCCCC"> of root causes of common flaws like</font>

913
00:51:55,580 --> 00:52:01,009
memory<font color="#CCCCCC"> safety issues</font><font color="#E5E5E5"> it has a very small</font>

914
00:51:58,940 --> 00:52:02,630
<font color="#CCCCCC">trust computing base and a reasonable</font>

915
00:52:01,010 --> 00:52:06,980
performance<font color="#E5E5E5"> I didn't show any numbers</font>

916
00:52:02,630 --> 00:52:12,070
but from our work on TLS it turns out we

917
00:52:06,980 --> 00:52:14,870
<font color="#E5E5E5">were up to</font><font color="#CCCCCC"> 85% the speed of</font><font color="#E5E5E5"> open SSL</font>

918
00:52:12,070 --> 00:52:17,300
yeah<font color="#CCCCCC"> and let</font><font color="#E5E5E5"> me thank all all the</font>

919
00:52:14,870 --> 00:52:20,240
computer contributors to me<font color="#CCCCCC"> Raj OS which</font>

920
00:52:17,300 --> 00:52:23,600
is<font color="#CCCCCC"> now in the</font><font color="#E5E5E5"> whatever 50</font><font color="#CCCCCC"> people or so</font>

921
00:52:20,240 --> 00:52:26,990
and I'm also organizing every<font color="#CCCCCC"> six months</font>

922
00:52:23,600 --> 00:52:28,970
the heck retreat for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> midrash</font><font color="#E5E5E5"> system</font>

923
00:52:26,990 --> 00:52:31,879
if you're interested in<font color="#CCCCCC"> that</font><font color="#E5E5E5"> the next</font>

924
00:52:28,970 --> 00:52:35,660
<font color="#E5E5E5">one is in early October it's a</font><font color="#CCCCCC"> weekend</font>

925
00:52:31,880 --> 00:52:45,320
<font color="#E5E5E5">Marrakesh and yeah welcome to to join</font><font color="#CCCCCC"> us</font>

926
00:52:35,660 --> 00:52:49,220
there that's all I prepared dear I think

927
00:52:45,320 --> 00:52:59,300
<font color="#CCCCCC">we have some time for questions any</font>

928
00:52:49,220 --> 00:53:05,569
questions<font color="#E5E5E5"> thank you for the nice talk</font>

929
00:52:59,300 --> 00:53:08,570
<font color="#E5E5E5">the konnex it was I did I miss</font><font color="#CCCCCC"> it or is</font>

930
00:53:05,570 --> 00:53:11,480
<font color="#E5E5E5">there some like proof of publication</font>

931
00:53:08,570 --> 00:53:14,900
mechanism so like if if you're a

932
00:53:11,480 --> 00:53:16,460
<font color="#E5E5E5">developer and I've compromised one key</font>

933
00:53:14,900 --> 00:53:20,240
of one developer who's the only

934
00:53:16,460 --> 00:53:22,760
<font color="#E5E5E5">developer of</font><font color="#CCCCCC"> their package and I control</font>

935
00:53:20,240 --> 00:53:24,669
your Wi-Fi<font color="#E5E5E5"> can I do a targeted malicious</font>

936
00:53:22,760 --> 00:53:29,860
software update<font color="#CCCCCC"> and get</font><font color="#E5E5E5"> away with</font><font color="#CCCCCC"> it or</font>

937
00:53:24,670 --> 00:53:32,390
is<font color="#CCCCCC"> there some mechanism to and there's</font>

938
00:53:29,860 --> 00:53:36,320
there's a mechanism<font color="#CCCCCC"> called the snapshot</font>

939
00:53:32,390 --> 00:53:38,150
<font color="#CCCCCC">BOTS</font><font color="#E5E5E5"> which receives the repository</font>

940
00:53:36,320 --> 00:53:40,700
checks all<font color="#CCCCCC"> the signatures</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> makes a</font>

941
00:53:38,150 --> 00:53:43,580
new<font color="#E5E5E5"> signatures over the global view</font><font color="#CCCCCC"> of</font>

942
00:53:40,700 --> 00:53:47,919
the repository<font color="#CCCCCC"> but</font><font color="#E5E5E5"> if you</font><font color="#CCCCCC"> compromised</font>

943
00:53:43,580 --> 00:53:50,870
the repository update mechanism<font color="#CCCCCC"> you can</font>

944
00:53:47,920 --> 00:53:52,700
<font color="#E5E5E5">yeah thanks to the snapshot bought and</font>

945
00:53:50,870 --> 00:53:54,319
the<font color="#E5E5E5"> timestamp board which just does</font>

946
00:53:52,700 --> 00:53:58,009
every five minutes

947
00:53:54,320 --> 00:54:01,220
<font color="#E5E5E5">and times them and a signature on the on</font>

948
00:53:58,010 --> 00:54:04,400
the whole<font color="#CCCCCC"> repository you can</font><font color="#E5E5E5"> check for</font>

949
00:54:01,220 --> 00:54:08,390
liveness properties<font color="#E5E5E5"> like that you don't</font>

950
00:54:04,400 --> 00:54:14,390
get that<font color="#CCCCCC"> the attacker can't freeze you</font>

951
00:54:08,390 --> 00:54:16,279
to an existing bad repository now if if

952
00:54:14,390 --> 00:54:18,020
I<font color="#CCCCCC"> compromise an</font><font color="#E5E5E5"> author key and the</font>

953
00:54:16,280 --> 00:54:21,290
author doesn't<font color="#E5E5E5"> as</font><font color="#CCCCCC"> long as the author</font>

954
00:54:18,020 --> 00:54:25,190
doesn't detect that I can publish<font color="#CCCCCC"> new</font>

955
00:54:21,290 --> 00:54:27,440
packages under<font color="#E5E5E5"> their name</font><font color="#CCCCCC"> that will then</font>

956
00:54:25,190 --> 00:54:29,900
<font color="#CCCCCC">hopefully be discovered by</font><font color="#E5E5E5"> the repulsor</font>

957
00:54:27,440 --> 00:54:33,020
<font color="#CCCCCC">maintain us at some</font><font color="#E5E5E5"> point hopefully</font>

958
00:54:29,900 --> 00:54:35,210
earlier and they can then revoke the

959
00:54:33,020 --> 00:54:45,020
public key or the delegation<font color="#CCCCCC"> to the</font>

960
00:54:35,210 --> 00:54:47,750
public key<font color="#CCCCCC"> I guess I'm more worried</font>

961
00:54:45,020 --> 00:54:50,570
<font color="#CCCCCC">about if it's a targeted attack</font><font color="#E5E5E5"> where</font>

962
00:54:47,750 --> 00:54:52,430
<font color="#CCCCCC">the attacker does not</font><font color="#E5E5E5"> actually put the</font>

963
00:54:50,570 --> 00:54:55,220
new package in the public repository for

964
00:54:52,430 --> 00:55:00,109
<font color="#E5E5E5">everybody but instead</font><font color="#CCCCCC"> just presents it</font>

965
00:54:55,220 --> 00:55:02,839
<font color="#CCCCCC">to their victim</font><font color="#E5E5E5"> so they know you're a</font>

966
00:55:00,110 --> 00:55:04,880
developer<font color="#E5E5E5"> you're on some Wi-Fi and</font><font color="#CCCCCC"> the</font>

967
00:55:02,840 --> 00:55:08,180
attacker is physically near you and has

968
00:55:04,880 --> 00:55:09,770
compromised one author key<font color="#E5E5E5"> is there a</font>

969
00:55:08,180 --> 00:55:11,600
way to be<font color="#CCCCCC"> sure that the package</font><font color="#E5E5E5"> I'm</font>

970
00:55:09,770 --> 00:55:13,900
installing right now is the same package

971
00:55:11,600 --> 00:55:17,480
<font color="#E5E5E5">everybody else would</font><font color="#CCCCCC"> be installing</font><font color="#E5E5E5"> and</font>

972
00:55:13,900 --> 00:55:20,000
<font color="#E5E5E5">yes thanks to the snapshot bot because</font>

973
00:55:17,480 --> 00:55:22,280
you as a client<font color="#CCCCCC"> you first check the</font>

974
00:55:20,000 --> 00:55:26,240
<font color="#E5E5E5">signature</font><font color="#CCCCCC"> of the snapshot</font><font color="#E5E5E5"> pot and that</font>

975
00:55:22,280 --> 00:55:29,440
signed all of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> authors so the</font>

976
00:55:26,240 --> 00:55:32,959
attacker<font color="#E5E5E5"> would first need to inject that</font>

977
00:55:29,440 --> 00:55:35,630
<font color="#E5E5E5">new package into the snapshot bot right</font>

978
00:55:32,960 --> 00:55:38,360
and the<font color="#E5E5E5"> special multiple snapshot watts</font>

979
00:55:35,630 --> 00:55:41,270
or is that yes you<font color="#CCCCCC"> can have you you</font><font color="#E5E5E5"> can</font>

980
00:55:38,360 --> 00:55:43,280
also have a similar to the other forum

981
00:55:41,270 --> 00:55:46,130
signatures you can<font color="#E5E5E5"> specify oh I want to</font>

982
00:55:43,280 --> 00:55:47,840
have three out of<font color="#E5E5E5"> those ten snapshot</font>

983
00:55:46,130 --> 00:55:50,330
<font color="#CCCCCC">BOTS which then hopefully run by</font>

984
00:55:47,840 --> 00:55:53,270
<font color="#CCCCCC">different organizations and they all</font>

985
00:55:50,330 --> 00:55:56,830
need to<font color="#CCCCCC"> agree on the state</font><font color="#E5E5E5"> of the</font>

986
00:55:53,270 --> 00:55:56,830
<font color="#CCCCCC">repository</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> thank you</font>

987
00:56:17,740 --> 00:56:21,109
<font color="#E5E5E5">thanks it up</font>

988
00:56:19,100 --> 00:56:29,069
thank very<font color="#E5E5E5"> nice</font>

989
00:56:21,110 --> 00:56:29,070
[Applause]

