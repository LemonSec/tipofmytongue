1
00:00:59,460 --> 00:01:06,430
hello<font color="#E5E5E5"> now</font><font color="#CCCCCC"> Eric is telling</font><font color="#E5E5E5"> something asks</font>

2
00:01:04,390 --> 00:01:14,050
<font color="#E5E5E5">something about</font><font color="#CCCCCC"> a repeatable functional</font>

3
00:01:06,430 --> 00:01:21,820
<font color="#E5E5E5">builds yes</font><font color="#CCCCCC"> hi I'm</font><font color="#E5E5E5"> Eric</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> coming to you</font>

4
00:01:14,050 --> 00:01:24,280
from a lot<font color="#E5E5E5"> of time wishing for computers</font>

5
00:01:21,820 --> 00:01:25,720
<font color="#CCCCCC">that work long</font><font color="#E5E5E5"> story</font><font color="#CCCCCC"> short</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

6
00:01:24,280 --> 00:01:27,430
going<font color="#E5E5E5"> to be a talk about</font><font color="#CCCCCC"> that and ways</font>

7
00:01:25,720 --> 00:01:33,640
in<font color="#E5E5E5"> which I am sad and ways</font><font color="#CCCCCC"> in which I</font>

8
00:01:27,430 --> 00:01:37,390
hope<font color="#CCCCCC"> to someday</font><font color="#E5E5E5"> be less sad so this talk</font>

9
00:01:33,640 --> 00:01:40,090
is<font color="#E5E5E5"> going to start out with a little bit</font>

10
00:01:37,390 --> 00:01:42,970
<font color="#CCCCCC">of discussion</font><font color="#E5E5E5"> about ways</font><font color="#CCCCCC"> we use</font>

11
00:01:40,090 --> 00:01:44,590
computers today<font color="#E5E5E5"> package</font><font color="#CCCCCC"> management</font><font color="#E5E5E5"> what</font>

12
00:01:42,970 --> 00:01:46,750
role<font color="#CCCCCC"> that has and how</font><font color="#E5E5E5"> we use computers</font>

13
00:01:44,590 --> 00:01:50,380
what role that<font color="#CCCCCC"> has and how we</font><font color="#E5E5E5"> build</font>

14
00:01:46,750 --> 00:01:52,360
software<font color="#CCCCCC"> some things that might be room</font>

15
00:01:50,380 --> 00:01:55,119
for improvement<font color="#E5E5E5"> in package manager as we</font>

16
00:01:52,360 --> 00:01:58,479
know them today<font color="#CCCCCC"> then it's going</font><font color="#E5E5E5"> to move</font>

17
00:01:55,119 --> 00:02:02,020
on to<font color="#E5E5E5"> some examples of what it might it</font>

18
00:01:58,479 --> 00:02:05,170
<font color="#E5E5E5">mean to have repeatable file systems and</font>

19
00:02:02,020 --> 00:02:07,330
repeatable computation<font color="#CCCCCC"> may be</font>

20
00:02:05,170 --> 00:02:09,369
reproducible but I'm going to<font color="#E5E5E5"> carefully</font>

21
00:02:07,330 --> 00:02:12,250
consider that a stretch<font color="#CCCCCC"> goal comes after</font>

22
00:02:09,369 --> 00:02:14,740
repeatability<font color="#CCCCCC"> and then I'm going to try</font>

23
00:02:12,250 --> 00:02:17,140
<font color="#E5E5E5">to do some live demos</font><font color="#CCCCCC"> I hope that the</font>

24
00:02:14,740 --> 00:02:19,000
demo gods are<font color="#E5E5E5"> with me and do</font>

25
00:02:17,140 --> 00:02:20,890
reproducible builds on the screen and

26
00:02:19,000 --> 00:02:22,540
then maybe<font color="#E5E5E5"> even consider</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> it looks</font>

27
00:02:20,890 --> 00:02:27,309
like to do it well<font color="#E5E5E5"> which is probably not</font>

28
00:02:22,540 --> 00:02:34,440
<font color="#E5E5E5">what the demos will be but you</font><font color="#CCCCCC"> know ok</font>

29
00:02:27,310 --> 00:02:37,690
<font color="#CCCCCC">so the way we use computers today is I</font>

30
00:02:34,440 --> 00:02:40,569
think<font color="#E5E5E5"> often it's it has</font><font color="#CCCCCC"> a lot of hope</font>

31
00:02:37,690 --> 00:02:42,700
and a<font color="#CCCCCC"> lot of</font><font color="#E5E5E5"> dreams in it when we want</font>

32
00:02:40,569 --> 00:02:46,269
<font color="#E5E5E5">to use some piece of software we take</font>

33
00:02:42,700 --> 00:02:49,450
our<font color="#E5E5E5"> system package manager and we do my</font>

34
00:02:46,270 --> 00:02:50,770
package manager install<font color="#E5E5E5"> fubar</font><font color="#CCCCCC"> and then</font>

35
00:02:49,450 --> 00:02:53,109
we desperately<font color="#E5E5E5"> hope that some binary</font>

36
00:02:50,770 --> 00:02:55,959
called fubar ends up<font color="#E5E5E5"> on our system that</font>

37
00:02:53,110 --> 00:02:57,459
it works<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> a recent version that it</font>

38
00:02:55,959 --> 00:03:01,240
will continue<font color="#E5E5E5"> working in a couple of</font>

39
00:02:57,459 --> 00:03:04,780
<font color="#E5E5E5">days</font><font color="#CCCCCC"> and we make a stateful change to</font>

40
00:03:01,240 --> 00:03:05,760
our computer and<font color="#CCCCCC"> we call that</font><font color="#E5E5E5"> good</font>

41
00:03:04,780 --> 00:03:07,349
enough

42
00:03:05,760 --> 00:03:13,679
when we are<font color="#CCCCCC"> running tools just for</font>

43
00:03:07,349 --> 00:03:15,179
<font color="#CCCCCC">ourselves often this</font><font color="#E5E5E5"> is okay</font><font color="#CCCCCC"> something</font>

44
00:03:13,680 --> 00:03:18,150
that's<font color="#E5E5E5"> starting</font><font color="#CCCCCC"> to change the ways</font>

45
00:03:15,180 --> 00:03:22,620
people<font color="#E5E5E5"> use</font><font color="#CCCCCC"> computers</font><font color="#E5E5E5"> is the</font><font color="#CCCCCC"> container</font>

46
00:03:18,150 --> 00:03:24,930
revolution and<font color="#E5E5E5"> in this people suddenly</font>

47
00:03:22,620 --> 00:03:27,209
<font color="#CCCCCC">realize like hey maybe my computer being</font>

48
00:03:24,930 --> 00:03:29,640
a<font color="#E5E5E5"> giant ball of state is like not the</font>

49
00:03:27,209 --> 00:03:34,470
greatest and instead we started using

50
00:03:29,640 --> 00:03:37,040
<font color="#CCCCCC">snapshots</font><font color="#E5E5E5"> in order to distribute</font><font color="#CCCCCC"> known</font>

51
00:03:34,470 --> 00:03:39,450
<font color="#CCCCCC">good configurations of our computers and</font>

52
00:03:37,040 --> 00:03:41,640
in some ways this increased<font color="#E5E5E5"> the</font>

53
00:03:39,450 --> 00:03:44,369
reliability of our<font color="#E5E5E5"> machines and in some</font>

54
00:03:41,640 --> 00:03:47,940
ways this<font color="#CCCCCC"> is exciting</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> in a lot of</font>

55
00:03:44,370 --> 00:03:49,680
<font color="#E5E5E5">other ways</font><font color="#CCCCCC"> well we had some regressions</font>

56
00:03:47,940 --> 00:03:52,950
with this at the same time<font color="#E5E5E5"> now it's</font>

57
00:03:49,680 --> 00:03:54,200
become when<font color="#CCCCCC"> we want reliable software we</font>

58
00:03:52,950 --> 00:03:56,369
start shipping<font color="#CCCCCC"> around an entire</font>

59
00:03:54,200 --> 00:04:01,500
multi-gigabyte image of a complete

60
00:03:56,370 --> 00:04:03,890
computer<font color="#E5E5E5"> why do we do that so</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> way we</font>

61
00:04:01,500 --> 00:04:07,290
might wish to<font color="#E5E5E5"> use computers is something</font>

62
00:04:03,890 --> 00:04:09,869
even further<font color="#E5E5E5"> what if we could have</font>

63
00:04:07,290 --> 00:04:11,040
snapshots<font color="#E5E5E5"> of our systems but also these</font>

64
00:04:09,870 --> 00:04:14,150
snapshots<font color="#E5E5E5"> were made</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> of something</font>

65
00:04:11,040 --> 00:04:17,310
composable something we could understand

66
00:04:14,150 --> 00:04:19,530
so this talk holistically is going to be

67
00:04:17,310 --> 00:04:23,000
about<font color="#E5E5E5"> moving to the right side</font><font color="#CCCCCC"> right</font>

68
00:04:19,529 --> 00:04:25,320
<font color="#CCCCCC">yeah believe the era</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> to this side</font>

69
00:04:23,000 --> 00:04:28,919
<font color="#CCCCCC">we want to have computers that we can</font>

70
00:04:25,320 --> 00:04:30,000
understand<font color="#E5E5E5"> and that we can rely on this</font>

71
00:04:28,919 --> 00:04:31,710
might<font color="#E5E5E5"> mean something with both</font>

72
00:04:30,000 --> 00:04:34,020
snapshotting but it also means<font color="#CCCCCC"> something</font>

73
00:04:31,710 --> 00:04:35,909
<font color="#CCCCCC">that</font><font color="#E5E5E5"> is clearly not containers</font><font color="#CCCCCC"> as have</font>

74
00:04:34,020 --> 00:04:41,159
recently been<font color="#E5E5E5"> popularized we might need</font>

75
00:04:35,910 --> 00:04:44,820
something<font color="#CCCCCC"> new so this</font><font color="#E5E5E5"> is easier said</font>

76
00:04:41,160 --> 00:04:46,169
<font color="#E5E5E5">than done</font><font color="#CCCCCC"> it's one</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> to say I want</font>

77
00:04:44,820 --> 00:04:48,270
to understand how my computer is

78
00:04:46,169 --> 00:04:49,560
assembled<font color="#E5E5E5"> it's another thing entirely to</font>

79
00:04:48,270 --> 00:04:52,680
come up<font color="#E5E5E5"> with a tool</font><font color="#CCCCCC"> train that actually</font>

80
00:04:49,560 --> 00:04:57,000
makes this easy<font color="#CCCCCC"> so we're gonna come back</font>

81
00:04:52,680 --> 00:05:00,270
<font color="#CCCCCC">to this and</font><font color="#E5E5E5"> first ask another very</font>

82
00:04:57,000 --> 00:05:02,130
related question which<font color="#CCCCCC"> is how how</font>

83
00:05:00,270 --> 00:05:06,750
composable do we expect installing

84
00:05:02,130 --> 00:05:10,530
software<font color="#CCCCCC"> to be the easiest</font><font color="#E5E5E5"> answer is</font>

85
00:05:06,750 --> 00:05:12,630
always<font color="#E5E5E5"> simply shrugging use global</font>

86
00:05:10,530 --> 00:05:16,169
<font color="#E5E5E5">system package manager</font><font color="#CCCCCC"> installed full</font>

87
00:05:12,630 --> 00:05:18,419
bar and hope<font color="#E5E5E5"> that it does a thing but</font>

88
00:05:16,169 --> 00:05:20,758
<font color="#E5E5E5">this has some</font><font color="#CCCCCC"> baggage</font>

89
00:05:18,419 --> 00:05:22,590
if the thing I<font color="#E5E5E5"> need is not in my global</font>

90
00:05:20,759 --> 00:05:25,469
system<font color="#CCCCCC"> package manager</font><font color="#E5E5E5"> or if I need a</font>

91
00:05:22,590 --> 00:05:27,508
version<font color="#CCCCCC"> that</font><font color="#E5E5E5"> is not the current</font><font color="#CCCCCC"> one in a</font>

92
00:05:25,469 --> 00:05:28,979
lot<font color="#CCCCCC"> of systems I don't want to</font><font color="#E5E5E5"> name</font>

93
00:05:27,509 --> 00:05:31,949
names<font color="#E5E5E5"> but in a lot</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> systems this means</font>

94
00:05:28,979 --> 00:05:33,360
<font color="#E5E5E5">I have</font><font color="#CCCCCC"> to give</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> see there</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> some</font>

95
00:05:31,949 --> 00:05:34,860
<font color="#E5E5E5">people</font><font color="#CCCCCC"> from better distres in the</font>

96
00:05:33,360 --> 00:05:40,319
audience and<font color="#E5E5E5"> you might be snickering at</font>

97
00:05:34,860 --> 00:05:43,009
me but I'll get back to you<font color="#E5E5E5"> much later</font>

98
00:05:40,319 --> 00:05:46,409
though because<font color="#CCCCCC"> that is a better system</font>

99
00:05:43,009 --> 00:05:47,969
<font color="#E5E5E5">so if I'm having a hard time using my</font>

100
00:05:46,409 --> 00:05:49,909
global system<font color="#CCCCCC"> package manager the one</font>

101
00:05:47,969 --> 00:05:51,840
<font color="#E5E5E5">that thinks it owns</font><font color="#CCCCCC"> slash</font><font color="#E5E5E5"> and above</font>

102
00:05:49,909 --> 00:05:55,020
<font color="#E5E5E5">maybe I'm going to go to containers</font>

103
00:05:51,840 --> 00:05:56,310
again<font color="#E5E5E5"> they've given</font><font color="#CCCCCC"> me a way out</font><font color="#E5E5E5"> and</font>

104
00:05:55,020 --> 00:05:57,419
I'll just<font color="#CCCCCC"> run all the same tools</font><font color="#E5E5E5"> I used</font>

105
00:05:56,310 --> 00:05:58,949
to but I'll run them in a container

106
00:05:57,419 --> 00:06:01,349
<font color="#E5E5E5">it'll give these snapshots it'll give me</font>

107
00:05:58,949 --> 00:06:04,500
isolation it'll be fine but<font color="#E5E5E5"> there's</font>

108
00:06:01,349 --> 00:06:08,250
baggage<font color="#E5E5E5"> to this now I'm managing those</font>

109
00:06:04,500 --> 00:06:14,039
whole system images again this isn't

110
00:06:08,250 --> 00:06:17,129
composable so if I start with<font color="#E5E5E5"> the goal</font>

111
00:06:14,039 --> 00:06:19,830
of<font color="#E5E5E5"> simplicity and having a system where</font>

112
00:06:17,129 --> 00:06:23,699
I can just install what I need anywhere

113
00:06:19,830 --> 00:06:26,909
on any machine<font color="#E5E5E5"> or on any path on any</font>

114
00:06:23,699 --> 00:06:28,710
machine<font color="#E5E5E5"> well now I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have any</font>

115
00:06:26,909 --> 00:06:31,050
<font color="#E5E5E5">baggage now I</font><font color="#CCCCCC"> just have an absolute lack</font>

116
00:06:28,710 --> 00:06:35,099
of tools which<font color="#E5E5E5"> can do this in the world</font>

117
00:06:31,050 --> 00:06:36,569
today<font color="#E5E5E5"> it means I want tools that allow</font>

118
00:06:35,099 --> 00:06:39,150
me<font color="#E5E5E5"> to install libraries that are</font>

119
00:06:36,569 --> 00:06:41,339
conflicting<font color="#E5E5E5"> but it shouldn't be</font><font color="#CCCCCC"> a</font>

120
00:06:39,150 --> 00:06:43,080
<font color="#E5E5E5">conflict where did we ever get this idea</font>

121
00:06:41,339 --> 00:06:44,490
that<font color="#E5E5E5"> installing multiple</font><font color="#CCCCCC"> libraries could</font>

122
00:06:43,080 --> 00:06:49,169
be a<font color="#E5E5E5"> conflict we need tooling that's</font>

123
00:06:44,490 --> 00:06:51,839
better than this so this<font color="#E5E5E5"> talk is again</font>

124
00:06:49,169 --> 00:06:53,430
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> be about moving</font><font color="#CCCCCC"> towards the</font>

125
00:06:51,839 --> 00:06:55,110
right<font color="#E5E5E5"> side of the screen</font><font color="#CCCCCC"> moving towards</font>

126
00:06:53,430 --> 00:06:57,089
things that are<font color="#E5E5E5"> some lipstick things</font>

127
00:06:55,110 --> 00:06:59,490
that are aiming to be actually

128
00:06:57,089 --> 00:07:02,849
composable<font color="#E5E5E5"> and this is going to require</font>

129
00:06:59,490 --> 00:07:07,589
<font color="#CCCCCC">some tools that maybe we don't</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> yet</font>

130
00:07:02,849 --> 00:07:10,169
<font color="#E5E5E5">so we've got work</font><font color="#CCCCCC"> to do if we want to</font>

131
00:07:07,589 --> 00:07:11,310
drive reliability up and we want to do

132
00:07:10,169 --> 00:07:16,589
it with something that's<font color="#E5E5E5"> better than</font>

133
00:07:11,310 --> 00:07:18,180
snapshotting we have work<font color="#E5E5E5"> to do and what</font>

134
00:07:16,589 --> 00:07:20,580
we want<font color="#E5E5E5"> to do is probably something</font><font color="#CCCCCC"> in</font>

135
00:07:18,180 --> 00:07:22,949
<font color="#E5E5E5">the general description</font><font color="#CCCCCC"> of reproducible</font>

136
00:07:20,580 --> 00:07:27,508
builds<font color="#E5E5E5"> I'll come back to defining</font><font color="#CCCCCC"> this</font>

137
00:07:22,949 --> 00:07:29,639
better later but repeatable purely

138
00:07:27,509 --> 00:07:31,240
functional builds would<font color="#E5E5E5"> be a lot more</font>

139
00:07:29,639 --> 00:07:33,550
comprehensible<font color="#E5E5E5"> than</font>

140
00:07:31,240 --> 00:07:36,810
<font color="#E5E5E5">global stateful modification to my</font>

141
00:07:33,550 --> 00:07:42,729
machine<font color="#CCCCCC"> and if we want</font><font color="#E5E5E5"> things which are</font>

142
00:07:36,810 --> 00:07:44,770
composable we have to get away from<font color="#E5E5E5"> the</font>

143
00:07:42,729 --> 00:07:48,430
awkward bandage that<font color="#E5E5E5"> is containers and</font>

144
00:07:44,770 --> 00:07:51,789
troops<font color="#E5E5E5"> they are a way</font><font color="#CCCCCC"> to staunch the</font>

145
00:07:48,430 --> 00:07:53,169
bleeding but fundamentally at<font color="#E5E5E5"> root to</font>

146
00:07:51,789 --> 00:07:54,130
pretend<font color="#CCCCCC"> that I have a whole system</font><font color="#E5E5E5"> so</font>

147
00:07:53,169 --> 00:07:55,359
<font color="#E5E5E5">that I can install</font><font color="#CCCCCC"> things that are</font>

148
00:07:54,130 --> 00:07:57,430
global<font color="#E5E5E5"> on my system or a way that's not</font>

149
00:07:55,360 --> 00:08:00,490
actually global on my system these are

150
00:07:57,430 --> 00:08:04,030
epicycles we need to just fix some<font color="#E5E5E5"> of</font>

151
00:08:00,490 --> 00:08:06,780
our fundamental<font color="#E5E5E5"> problems and so I think</font>

152
00:08:04,030 --> 00:08:09,489
we<font color="#CCCCCC"> need</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about standards for</font>

153
00:08:06,780 --> 00:08:12,309
installing<font color="#E5E5E5"> things which are path</font>

154
00:08:09,490 --> 00:08:19,229
agnostic and<font color="#E5E5E5"> which support Co install</font>

155
00:08:12,310 --> 00:08:22,870
herbal libraries so how do<font color="#E5E5E5"> we proceed</font>

156
00:08:19,229 --> 00:08:27,460
these are two<font color="#E5E5E5"> really large concepts each</font>

157
00:08:22,870 --> 00:08:29,229
and both of<font color="#E5E5E5"> them need to be solved this</font>

158
00:08:27,460 --> 00:08:36,968
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> is mostly going to</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> about the</font>

159
00:08:29,229 --> 00:08:40,240
reproducible builds<font color="#E5E5E5"> components so let's</font>

160
00:08:36,969 --> 00:08:42,159
<font color="#CCCCCC">define that</font><font color="#E5E5E5"> better</font><font color="#CCCCCC"> fortunately there</font><font color="#E5E5E5"> are</font>

161
00:08:40,240 --> 00:08:43,479
a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> people working on reproducible</font>

162
00:08:42,159 --> 00:08:45,730
builds at this point<font color="#E5E5E5"> there's a whole</font>

163
00:08:43,479 --> 00:08:48,370
organization<font color="#CCCCCC"> that is meeting a couple</font><font color="#E5E5E5"> of</font>

164
00:08:45,730 --> 00:08:50,620
times a year<font color="#CCCCCC"> if you dive into this</font>

165
00:08:48,370 --> 00:08:53,140
reproducible builds org site you will

166
00:08:50,620 --> 00:08:55,180
find<font color="#CCCCCC"> connections</font><font color="#E5E5E5"> to many people who talk</font>

167
00:08:53,140 --> 00:09:00,310
<font color="#CCCCCC">about this and care</font><font color="#E5E5E5"> and fortunately</font>

168
00:08:55,180 --> 00:09:02,739
<font color="#E5E5E5">they've given us a definition</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> build of</font>

169
00:09:00,310 --> 00:09:04,029
some software<font color="#CCCCCC"> is reproducible if</font><font color="#E5E5E5"> give</font>

170
00:09:02,740 --> 00:09:06,060
<font color="#E5E5E5">them the same source code the build</font>

171
00:09:04,029 --> 00:09:09,279
<font color="#CCCCCC">environment the build instructions</font>

172
00:09:06,060 --> 00:09:15,640
anybody can recreate<font color="#E5E5E5"> bit by bit</font>

173
00:09:09,279 --> 00:09:18,640
identical copies of the outputs this is

174
00:09:15,640 --> 00:09:22,810
a definition that<font color="#E5E5E5"> is again sort</font><font color="#CCCCCC"> of</font>

175
00:09:18,640 --> 00:09:25,510
easier said than done it's great that

176
00:09:22,810 --> 00:09:27,099
everyone<font color="#E5E5E5"> agrees that</font><font color="#CCCCCC"> given some</font><font color="#E5E5E5"> source</font>

177
00:09:25,510 --> 00:09:29,319
<font color="#CCCCCC">code and some</font><font color="#E5E5E5"> tool chains we should have</font>

178
00:09:27,100 --> 00:09:32,649
bit by bit identical results and things

179
00:09:29,320 --> 00:09:34,930
we should<font color="#CCCCCC"> be able to hash</font><font color="#E5E5E5"> in essence but</font>

180
00:09:32,649 --> 00:09:37,660
<font color="#E5E5E5">it's really difficult</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make an</font>

181
00:09:34,930 --> 00:09:40,000
operational<font color="#CCCCCC"> definition of the first half</font>

182
00:09:37,660 --> 00:09:41,020
of that<font color="#E5E5E5"> sentence the same source code</font>

183
00:09:40,000 --> 00:09:43,360
well that's easy

184
00:09:41,020 --> 00:09:44,510
we have<font color="#CCCCCC"> tar</font><font color="#E5E5E5"> balls from the good news</font>

185
00:09:43,360 --> 00:09:47,420
sites or we have get

186
00:09:44,510 --> 00:09:48,890
<font color="#E5E5E5">check outs from wherever these are</font>

187
00:09:47,420 --> 00:09:51,620
things<font color="#CCCCCC"> that we can identify</font><font color="#E5E5E5"> pretty</font>

188
00:09:48,890 --> 00:09:57,430
easily<font color="#E5E5E5"> build environment and build</font>

189
00:09:51,620 --> 00:10:00,410
instructions that can<font color="#E5E5E5"> be quite slippery</font>

190
00:09:57,430 --> 00:10:03,949
so I would<font color="#E5E5E5"> like to introduce a new</font><font color="#CCCCCC"> word</font>

191
00:10:00,410 --> 00:10:05,540
to describe that<font color="#CCCCCC"> entire first part of</font>

192
00:10:03,950 --> 00:10:07,180
<font color="#E5E5E5">the definition</font><font color="#CCCCCC"> of reproducible</font><font color="#E5E5E5"> there's</font>

193
00:10:05,540 --> 00:10:11,209
something we<font color="#CCCCCC"> need first we need</font>

194
00:10:07,180 --> 00:10:14,750
repeatable and that can cover<font color="#E5E5E5"> a lot of</font>

195
00:10:11,210 --> 00:10:17,060
<font color="#E5E5E5">things if we're building some random</font>

196
00:10:14,750 --> 00:10:19,730
<font color="#CCCCCC">seed project on the internet we need the</font>

197
00:10:17,060 --> 00:10:21,920
source code yes but we need the GCC<font color="#CCCCCC"> or</font>

198
00:10:19,730 --> 00:10:25,820
the<font color="#CCCCCC"> clang we need the linker tools we</font>

199
00:10:21,920 --> 00:10:30,620
need possibly<font color="#CCCCCC"> Auto tools or perhaps</font><font color="#E5E5E5"> auto</font>

200
00:10:25,820 --> 00:10:32,480
make<font color="#E5E5E5"> or auto con or C make or we need a</font>

201
00:10:30,620 --> 00:10:34,940
very large<font color="#CCCCCC"> amount of build environment</font>

202
00:10:32,480 --> 00:10:38,510
<font color="#E5E5E5">and the details of the instructions are</font>

203
00:10:34,940 --> 00:10:39,860
also it can become extremely<font color="#E5E5E5"> detailed if</font>

204
00:10:38,510 --> 00:10:43,400
you're<font color="#E5E5E5"> requesting for bit by bit</font>

205
00:10:39,860 --> 00:10:44,180
identical results of some builds<font color="#E5E5E5"> all the</font>

206
00:10:43,400 --> 00:10:46,939
flags matter

207
00:10:44,180 --> 00:10:56,719
you cannot just forget to document your

208
00:10:46,940 --> 00:10:58,510
<font color="#CCCCCC">- - anything so this is where we get</font>

209
00:10:56,720 --> 00:11:02,840
<font color="#E5E5E5">back to things are easier said than done</font>

210
00:10:58,510 --> 00:11:05,540
<font color="#CCCCCC">again</font><font color="#E5E5E5"> sort</font><font color="#CCCCCC"> of a recurring theme we know</font>

211
00:11:02,840 --> 00:11:07,760
that we want reproducible builds if we

212
00:11:05,540 --> 00:11:10,819
want understandable systems and we know

213
00:11:07,760 --> 00:11:15,220
we probably want some repeatable builds

214
00:11:10,820 --> 00:11:18,140
in order to get reproducible builds and

215
00:11:15,220 --> 00:11:20,780
I would go one step further and say we

216
00:11:18,140 --> 00:11:22,790
want<font color="#E5E5E5"> all this to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> easy because I would</font>

217
00:11:20,780 --> 00:11:26,870
really<font color="#E5E5E5"> like people to actually use tools</font>

218
00:11:22,790 --> 00:11:29,930
<font color="#E5E5E5">to make reproducible builds which means</font>

219
00:11:26,870 --> 00:11:33,050
we need to<font color="#E5E5E5"> automate things quite a lot</font><font color="#CCCCCC"> a</font>

220
00:11:29,930 --> 00:11:34,819
bunch of<font color="#CCCCCC"> readings in markdown</font><font color="#E5E5E5"> in prose</font>

221
00:11:33,050 --> 00:11:42,109
<font color="#CCCCCC">that tell you what version</font><font color="#E5E5E5"> of GCC to</font>

222
00:11:34,820 --> 00:11:46,430
install are not good<font color="#E5E5E5"> enough so let's</font>

223
00:11:42,110 --> 00:11:50,120
make<font color="#CCCCCC"> some tools I would love</font><font color="#E5E5E5"> to have</font>

224
00:11:46,430 --> 00:11:52,630
some tooling which is basically pure

225
00:11:50,120 --> 00:11:56,420
functional<font color="#CCCCCC"> programming brought to</font>

226
00:11:52,630 --> 00:11:57,470
building everything<font color="#CCCCCC"> that means we need</font>

227
00:11:56,420 --> 00:12:00,410
<font color="#E5E5E5">to</font>

228
00:11:57,470 --> 00:12:02,270
have a list of inputs to<font color="#E5E5E5"> the function we</font>

229
00:12:00,410 --> 00:12:04,520
need<font color="#E5E5E5"> to know what the function the build</font>

230
00:12:02,270 --> 00:12:07,100
instructions<font color="#CCCCCC"> themselves are and we</font>

231
00:12:04,520 --> 00:12:10,850
should<font color="#CCCCCC"> be able to list the return values</font>

232
00:12:07,100 --> 00:12:12,740
of the function and I've made<font color="#CCCCCC"> a tool</font><font color="#E5E5E5"> for</font>

233
00:12:10,850 --> 00:12:14,270
this which is<font color="#CCCCCC"> called repeater which I am</font>

234
00:12:12,740 --> 00:12:20,170
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> demonstrate to you in the next</font>

235
00:12:14,270 --> 00:12:23,079
couple<font color="#E5E5E5"> of slides this is something that</font>

236
00:12:20,170 --> 00:12:25,400
you could squint and<font color="#E5E5E5"> you could see</font><font color="#CCCCCC"> Lisp</font>

237
00:12:23,080 --> 00:12:28,010
<font color="#E5E5E5">but instead you should squint and see</font>

238
00:12:25,400 --> 00:12:30,290
JSON<font color="#E5E5E5"> because I would love to have some</font>

239
00:12:28,010 --> 00:12:36,530
repeatable build tools which are powered

240
00:12:30,290 --> 00:12:39,260
<font color="#E5E5E5">by api's and to that effect this is a</font>

241
00:12:36,530 --> 00:12:40,810
JSON<font color="#CCCCCC"> object which is called a formula</font>

242
00:12:39,260 --> 00:12:44,000
which can be handed<font color="#CCCCCC"> to the repeater tool</font>

243
00:12:40,810 --> 00:12:46,609
it contains all three parts of<font color="#E5E5E5"> your</font>

244
00:12:44,000 --> 00:12:50,390
lovely<font color="#E5E5E5"> functional</font><font color="#CCCCCC"> programming language</font>

245
00:12:46,610 --> 00:12:52,670
<font color="#E5E5E5">the inputs that you need the thing that</font>

246
00:12:50,390 --> 00:12:55,490
we<font color="#E5E5E5"> are going</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> execute and the output</font>

247
00:12:52,670 --> 00:12:57,560
that<font color="#E5E5E5"> we are looking for this is</font>

248
00:12:55,490 --> 00:13:00,170
<font color="#E5E5E5">something that is about to turn into a</font>

249
00:12:57,560 --> 00:13:02,510
live demo<font color="#CCCCCC"> and what</font><font color="#E5E5E5"> it does it will run</font>

250
00:13:00,170 --> 00:13:05,030
<font color="#E5E5E5">in a container so</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> of these</font>

251
00:13:02,510 --> 00:13:07,480
operations<font color="#E5E5E5"> are defined in</font><font color="#CCCCCC"> this case the</font>

252
00:13:05,030 --> 00:13:09,650
operation is a very simple make<font color="#CCCCCC"> derp</font><font color="#E5E5E5"> and</font>

253
00:13:07,480 --> 00:13:10,010
the<font color="#E5E5E5"> binary to do it is going to come</font>

254
00:13:09,650 --> 00:13:12,439
from

255
00:13:10,010 --> 00:13:15,050
what's unpacked at slash in<font color="#E5E5E5"> the</font>

256
00:13:12,440 --> 00:13:18,560
container file system and that is going

257
00:13:15,050 --> 00:13:22,910
<font color="#E5E5E5">to be fully described by this hash on</font>

258
00:13:18,560 --> 00:13:26,599
the end<font color="#E5E5E5"> sort of skipped over the</font>

259
00:13:22,910 --> 00:13:28,459
introduction<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the hashing part it is</font>

260
00:13:26,600 --> 00:13:30,490
necessary if we're going to<font color="#E5E5E5"> have purely</font>

261
00:13:28,460 --> 00:13:33,680
functional builds that we should have

262
00:13:30,490 --> 00:13:38,420
pure and<font color="#CCCCCC"> well-known inputs</font><font color="#E5E5E5"> so we're</font>

263
00:13:33,680 --> 00:13:41,900
going<font color="#E5E5E5"> to put a hash on it and this is</font>

264
00:13:38,420 --> 00:13:43,640
something<font color="#CCCCCC"> that should be executable so</font>

265
00:13:41,900 --> 00:13:46,390
let's see if I can switch<font color="#E5E5E5"> workspaces and</font>

266
00:13:43,640 --> 00:13:46,390
<font color="#E5E5E5">get something to work</font>

267
00:13:48,529 --> 00:13:53,420
<font color="#E5E5E5">this is the same thing getting ready to</font>

268
00:13:51,319 --> 00:13:57,889
go in live demo mode that I had on<font color="#E5E5E5"> the</font>

269
00:13:53,420 --> 00:14:06,229
<font color="#CCCCCC">screen a moment ago</font><font color="#E5E5E5"> and a tool exists</font>

270
00:13:57,889 --> 00:14:09,499
that will execute<font color="#E5E5E5"> it this is a simple</font>

271
00:14:06,230 --> 00:14:12,050
operation<font color="#E5E5E5"> like make</font><font color="#CCCCCC"> derp it is indeed</font>

272
00:14:09,499 --> 00:14:15,259
reproducible<font color="#E5E5E5"> and so when I evaluate this</font>

273
00:14:12,050 --> 00:14:17,209
<font color="#E5E5E5">thing</font><font color="#CCCCCC"> a whole bunch</font><font color="#E5E5E5"> of work goes on</font>

274
00:14:15,259 --> 00:14:19,879
behind the<font color="#E5E5E5"> scenes</font><font color="#CCCCCC"> repeater is one</font>

275
00:14:17,209 --> 00:14:22,609
<font color="#E5E5E5">process in the POSIX sense is going to</font>

276
00:14:19,879 --> 00:14:24,680
<font color="#E5E5E5">launch one process which goes and</font>

277
00:14:22,610 --> 00:14:27,889
unpacks this<font color="#E5E5E5"> content-addressable</font>

278
00:14:24,680 --> 00:14:30,138
identified hashed<font color="#E5E5E5"> file system launch is</font>

279
00:14:27,889 --> 00:14:34,670
a container afterwards<font color="#E5E5E5"> packs things up</font>

280
00:14:30,139 --> 00:14:36,230
<font color="#E5E5E5">again and hashes them if I run this</font>

281
00:14:34,670 --> 00:14:42,699
<font color="#E5E5E5">repeatedly I expect it to do the same</font>

282
00:14:36,230 --> 00:14:42,699
thing and so it does

283
00:14:42,819 --> 00:14:57,500
where do my slides go right so this is<font color="#E5E5E5"> a</font>

284
00:14:53,120 --> 00:15:01,100
<font color="#E5E5E5">very simple</font><font color="#CCCCCC"> thing doing very little work</font>

285
00:14:57,500 --> 00:15:03,139
<font color="#E5E5E5">but</font><font color="#CCCCCC"> the essence</font><font color="#E5E5E5"> of what it's</font><font color="#CCCCCC"> doing is</font>

286
00:15:01,100 --> 00:15:08,180
<font color="#E5E5E5">anything that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could evaluate in a</font>

287
00:15:03,139 --> 00:15:09,980
Linux container and you can<font color="#CCCCCC"> have as many</font>

288
00:15:08,180 --> 00:15:11,809
inputs<font color="#CCCCCC"> as you need</font><font color="#E5E5E5"> to the system as you</font>

289
00:15:09,980 --> 00:15:15,350
<font color="#CCCCCC">can</font><font color="#E5E5E5"> see this is a</font><font color="#CCCCCC"> json api</font><font color="#E5E5E5"> with a map</font>

290
00:15:11,809 --> 00:15:16,550
right so if you want<font color="#CCCCCC"> to mentally compare</font>

291
00:15:15,350 --> 00:15:18,500
and contrast with<font color="#E5E5E5"> other container</font>

292
00:15:16,550 --> 00:15:22,399
systems you are<font color="#E5E5E5"> not stuck with</font>

293
00:15:18,500 --> 00:15:24,980
monolithic images here you can input as

294
00:15:22,399 --> 00:15:26,870
many file systems as you<font color="#CCCCCC"> need under</font>

295
00:15:24,980 --> 00:15:30,470
whatever paths you need and when<font color="#E5E5E5"> you</font>

296
00:15:26,870 --> 00:15:37,309
<font color="#CCCCCC">repeater</font><font color="#E5E5E5"> run this document you will get</font>

297
00:15:30,470 --> 00:15:40,089
all of<font color="#CCCCCC"> those file systems</font><font color="#E5E5E5"> so yeah let's</font>

298
00:15:37,309 --> 00:15:40,089
jump<font color="#E5E5E5"> ahead one demo</font>

299
00:15:43,060 --> 00:15:51,069
something you can do with this is switch

300
00:15:48,760 --> 00:15:53,770
to<font color="#CCCCCC"> llamo because it's a</font><font color="#E5E5E5"> little less</font>

301
00:15:51,070 --> 00:15:55,630
painful<font color="#CCCCCC"> another demo I can run is having</font>

302
00:15:53,770 --> 00:16:11,590
the repeater tools build the repeater

303
00:15:55,630 --> 00:16:13,570
tools and in this example<font color="#CCCCCC"> no maybe I'm</font>

304
00:16:11,590 --> 00:16:15,640
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> compile some programs and go</font>

305
00:16:13,570 --> 00:16:17,350
and to do this<font color="#CCCCCC"> I have more than one</font>

306
00:16:15,640 --> 00:16:20,530
input file system<font color="#E5E5E5"> and I want</font><font color="#CCCCCC"> to compose</font>

307
00:16:17,350 --> 00:16:23,590
them separately for purposes of both

308
00:16:20,530 --> 00:16:25,420
efficiency and my sanity<font color="#CCCCCC"> and so I have</font>

309
00:16:23,590 --> 00:16:28,030
an input at slash<font color="#E5E5E5"> this is going to</font>

310
00:16:25,420 --> 00:16:29,910
contain some<font color="#E5E5E5"> busybox image add another</font>

311
00:16:28,030 --> 00:16:32,020
path I'm going<font color="#CCCCCC"> to put the go compiler</font>

312
00:16:29,910 --> 00:16:35,680
this<font color="#E5E5E5"> is some horrific piece of</font>

313
00:16:32,020 --> 00:16:37,689
templating<font color="#CCCCCC"> and</font><font color="#E5E5E5"> bash this is one of those</font>

314
00:16:35,680 --> 00:16:39,489
things that works and is nice as an

315
00:16:37,690 --> 00:16:41,440
example<font color="#E5E5E5"> but maybe some better api's</font>

316
00:16:39,490 --> 00:16:45,790
should come<font color="#E5E5E5"> along but it's a great</font>

317
00:16:41,440 --> 00:16:50,020
documentation and this particular<font color="#CCCCCC"> thing</font>

318
00:16:45,790 --> 00:16:54,910
<font color="#E5E5E5">is also going to build given some hash</font>

319
00:16:50,020 --> 00:16:56,829
of a git commit<font color="#E5E5E5"> from github anything</font>

320
00:16:54,910 --> 00:16:58,660
that<font color="#E5E5E5"> can be identified as a hash can be</font>

321
00:16:56,830 --> 00:17:00,160
used as an input<font color="#CCCCCC"> and</font><font color="#E5E5E5"> repeater there's a</font>

322
00:16:58,660 --> 00:17:03,579
whole<font color="#CCCCCC"> plugin architecture here so</font>

323
00:17:00,160 --> 00:17:09,399
tarballs<font color="#E5E5E5"> convenient git repos</font><font color="#CCCCCC"> i heard</font>

324
00:17:03,580 --> 00:17:11,760
that sometimes<font color="#E5E5E5"> people use those and this</font>

325
00:17:09,400 --> 00:17:14,890
particular build is going<font color="#E5E5E5"> to output one</font>

326
00:17:11,760 --> 00:17:16,660
<font color="#E5E5E5">subsection of the file system so again</font>

327
00:17:14,890 --> 00:17:19,660
<font color="#E5E5E5">contrast with other container systems</font>

328
00:17:16,660 --> 00:17:23,319
that you<font color="#CCCCCC"> might know it's quite common</font><font color="#E5E5E5"> to</font>

329
00:17:19,660 --> 00:17:26,260
<font color="#E5E5E5">take one monolithic image in do a bunch</font>

330
00:17:23,319 --> 00:17:29,110
of use your<font color="#E5E5E5"> district egde manager global</font>

331
00:17:26,260 --> 00:17:30,940
<font color="#E5E5E5">side effects thing happens</font><font color="#CCCCCC"> lots of time</font>

332
00:17:29,110 --> 00:17:33,550
is wasted you do who<font color="#E5E5E5"> knows what with the</font>

333
00:17:30,940 --> 00:17:35,680
network and then<font color="#CCCCCC"> you save the entire</font>

334
00:17:33,550 --> 00:17:39,250
root filesystem again and everything in

335
00:17:35,680 --> 00:17:40,870
it<font color="#CCCCCC"> all of the changes and</font><font color="#E5E5E5"> in other</font>

336
00:17:39,250 --> 00:17:44,020
container systems this<font color="#E5E5E5"> is all you can do</font>

337
00:17:40,870 --> 00:17:45,100
<font color="#E5E5E5">and it's slow and good luck explaining</font>

338
00:17:44,020 --> 00:17:48,520
what happened<font color="#E5E5E5"> right</font>

339
00:17:45,100 --> 00:17:50,860
you can run diff on those two monolithic

340
00:17:48,520 --> 00:17:52,780
<font color="#CCCCCC">tarballs at</font><font color="#E5E5E5"> the end and the diff will be</font>

341
00:17:50,860 --> 00:17:53,790
bigger than in each tarball and you will

342
00:17:52,780 --> 00:17:57,930
have no idea<font color="#E5E5E5"> what</font>

343
00:17:53,790 --> 00:17:59,700
right so with<font color="#CCCCCC"> repeater we've designed a</font>

344
00:17:57,930 --> 00:18:02,010
little differently<font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can extract</font>

345
00:17:59,700 --> 00:18:03,690
just the sections of the<font color="#CCCCCC"> filesystem that</font>

346
00:18:02,010 --> 00:18:05,190
you care about<font color="#E5E5E5"> and of course you can</font>

347
00:18:03,690 --> 00:18:06,980
select<font color="#E5E5E5"> several of them so if you have</font>

348
00:18:05,190 --> 00:18:13,590
binaries in<font color="#E5E5E5"> one place</font><font color="#CCCCCC"> log isn't another</font>

349
00:18:06,980 --> 00:18:20,580
separate them<font color="#CCCCCC"> so now if</font><font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to on</font>

350
00:18:13,590 --> 00:18:28,230
<font color="#E5E5E5">this demo I'll skip ahead and warn you</font>

351
00:18:20,580 --> 00:18:29,490
that there<font color="#E5E5E5"> are</font><font color="#CCCCCC"> one two three four</font><font color="#E5E5E5"> yeah</font>

352
00:18:28,230 --> 00:18:31,950
there's four<font color="#CCCCCC"> different things built here</font>

353
00:18:29,490 --> 00:18:35,070
and then there is a fifth formula<font color="#CCCCCC"> which</font>

354
00:18:31,950 --> 00:18:38,040
<font color="#E5E5E5">is now taking all of these other inputs</font>

355
00:18:35,070 --> 00:18:42,810
<font color="#E5E5E5">together at the end of every one of</font>

356
00:18:38,040 --> 00:18:44,670
these horrible<font color="#E5E5E5"> bash hacks</font><font color="#CCCCCC"> did I run the</font>

357
00:18:42,810 --> 00:18:48,240
individual demo<font color="#E5E5E5"> so when I run this</font>

358
00:18:44,670 --> 00:18:49,920
individual demo this<font color="#E5E5E5"> is JSON in JSON out</font>

359
00:18:48,240 --> 00:18:51,810
<font color="#E5E5E5">right this is absolutely meant to be a</font>

360
00:18:49,920 --> 00:18:54,210
<font color="#E5E5E5">low-level programmatic tool that you</font>

361
00:18:51,810 --> 00:18:57,419
<font color="#CCCCCC">should use with some other templating</font>

362
00:18:54,210 --> 00:18:59,430
system on top so it's going<font color="#E5E5E5"> to spit out</font>

363
00:18:57,420 --> 00:19:01,080
<font color="#E5E5E5">JSON</font><font color="#CCCCCC"> at you</font><font color="#E5E5E5"> all</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> standard out these</font>

364
00:18:59,430 --> 00:19:05,250
other log lines above it we're all on

365
00:19:01,080 --> 00:19:06,570
standard errors so just discard them so

366
00:19:05,250 --> 00:19:08,160
when I run<font color="#E5E5E5"> this larger script that's</font>

367
00:19:06,570 --> 00:19:14,580
taking a whole<font color="#CCCCCC"> bunch of</font><font color="#E5E5E5"> things together</font>

368
00:19:08,160 --> 00:19:15,840
<font color="#CCCCCC">it's taking the JSON it's using JQ i</font>

369
00:19:14,580 --> 00:19:18,179
assume most<font color="#CCCCCC"> of the audience has seen</font>

370
00:19:15,840 --> 00:19:20,520
<font color="#E5E5E5">that it's like streaming query selector</font>

371
00:19:18,180 --> 00:19:23,340
thing for<font color="#E5E5E5"> JSON so it's going</font><font color="#CCCCCC"> to take the</font>

372
00:19:20,520 --> 00:19:27,090
results object and<font color="#CCCCCC"> that's key shove</font><font color="#E5E5E5"> it</font>

373
00:19:23,340 --> 00:19:30,360
<font color="#CCCCCC">into a bash variable and template</font><font color="#E5E5E5"> yeah</font>

374
00:19:27,090 --> 00:19:34,709
horrible horrible bash but this is

375
00:19:30,360 --> 00:19:36,659
<font color="#E5E5E5">something that I can run and it just</font>

376
00:19:34,710 --> 00:19:38,550
built all of<font color="#E5E5E5"> these containers</font>

377
00:19:36,660 --> 00:19:41,520
individually and it did so instantly

378
00:19:38,550 --> 00:19:45,389
because well it didn't actually do

379
00:19:41,520 --> 00:19:48,510
<font color="#CCCCCC">anything you see this whole formula</font>

380
00:19:45,390 --> 00:19:51,780
document since it is composed of a<font color="#CCCCCC"> bunch</font>

381
00:19:48,510 --> 00:19:54,330
of hashes<font color="#E5E5E5"> and the spit in the middle is</font>

382
00:19:51,780 --> 00:19:58,020
<font color="#E5E5E5">a static string right we can take this</font>

383
00:19:54,330 --> 00:20:00,179
entire formula<font color="#E5E5E5"> and we can serialize this</font>

384
00:19:58,020 --> 00:20:05,120
in a deterministic<font color="#CCCCCC"> way and hash it again</font>

385
00:20:00,180 --> 00:20:07,820
and we have magical perfect<font color="#CCCCCC"> memorization</font>

386
00:20:05,120 --> 00:20:09,949
so this whole process<font color="#CCCCCC"> just completed</font>

387
00:20:07,820 --> 00:20:16,300
instantly because it remembers<font color="#CCCCCC"> having a</font>

388
00:20:09,950 --> 00:20:18,440
<font color="#CCCCCC">rumble</font><font color="#E5E5E5"> before if I where did I put</font><font color="#CCCCCC"> it</font>

389
00:20:16,300 --> 00:20:25,760
throw away<font color="#E5E5E5"> the previously</font><font color="#CCCCCC"> existing</font>

390
00:20:18,440 --> 00:20:28,010
memorization and<font color="#E5E5E5"> run it again yeah a</font>

391
00:20:25,760 --> 00:20:29,810
<font color="#E5E5E5">little less instantaneous</font><font color="#CCCCCC"> this is now</font>

392
00:20:28,010 --> 00:20:31,250
running<font color="#E5E5E5"> the go compiler for like four</font>

393
00:20:29,810 --> 00:20:34,520
different<font color="#CCCCCC"> binary components of the</font>

394
00:20:31,250 --> 00:20:43,600
repeater<font color="#E5E5E5"> tool chain</font><font color="#CCCCCC"> and should spit out</font>

395
00:20:34,520 --> 00:20:46,790
<font color="#E5E5E5">a binary soon yeah so this is the</font>

396
00:20:43,600 --> 00:20:52,370
<font color="#E5E5E5">overall hash of</font><font color="#CCCCCC"> that system</font><font color="#E5E5E5"> and this is</font>

397
00:20:46,790 --> 00:20:55,510
actually if you go to the<font color="#CCCCCC"> the github</font>

398
00:20:52,370 --> 00:20:55,510
page for<font color="#E5E5E5"> this whole</font><font color="#CCCCCC"> project</font>

399
00:21:04,740 --> 00:21:10,570
the<font color="#CCCCCC"> release tarball right</font><font color="#E5E5E5"> here is going</font>

400
00:21:08,650 --> 00:21:12,910
<font color="#E5E5E5">to have the same hash you can download</font>

401
00:21:10,570 --> 00:21:17,500
this release<font color="#CCCCCC"> tarball open it up get the</font>

402
00:21:12,910 --> 00:21:21,640
binaries<font color="#CCCCCC"> in it go to the same bash</font>

403
00:21:17,500 --> 00:21:24,880
script<font color="#E5E5E5"> and I dare you to rebuild this</font>

404
00:21:21,640 --> 00:21:27,190
you should get the<font color="#E5E5E5"> same hash all of the</font>

405
00:21:24,880 --> 00:21:28,930
tool chains are pinned<font color="#E5E5E5"> and as long as</font>

406
00:21:27,190 --> 00:21:31,870
<font color="#CCCCCC">you are</font><font color="#E5E5E5"> starting from something</font><font color="#CCCCCC"> that</font>

407
00:21:28,930 --> 00:21:33,880
<font color="#E5E5E5">vaguely resembles a Linux kernel you're</font>

408
00:21:31,870 --> 00:21:35,530
gonna get the right thing or if<font color="#E5E5E5"> not like</font>

409
00:21:33,880 --> 00:21:36,850
you should<font color="#CCCCCC"> actually like</font><font color="#E5E5E5"> tackle me later</font>

410
00:21:35,530 --> 00:21:40,660
<font color="#CCCCCC">tell me what different hash you got</font>

411
00:21:36,850 --> 00:21:42,429
somebody somebody<font color="#CCCCCC"> compromised</font><font color="#E5E5E5"> my kernel</font>

412
00:21:40,660 --> 00:21:50,680
your kernel something unbelievably

413
00:21:42,430 --> 00:21:54,700
<font color="#E5E5E5">strange happened</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> back on</font><font color="#CCCCCC"> track</font><font color="#E5E5E5"> so why</font>

414
00:21:50,680 --> 00:21:56,680
is this cool<font color="#E5E5E5"> we can do a lot</font><font color="#CCCCCC"> of things</font>

415
00:21:54,700 --> 00:22:01,570
with this<font color="#E5E5E5"> basic primitive I hope because</font>

416
00:21:56,680 --> 00:22:05,200
all of<font color="#E5E5E5"> these formulas</font><font color="#CCCCCC"> are a completely</font>

417
00:22:01,570 --> 00:22:07,389
specified context the value<font color="#E5E5E5"> and version</font>

418
00:22:05,200 --> 00:22:09,550
of the<font color="#E5E5E5"> compiler that I used is not in</font>

419
00:22:07,390 --> 00:22:12,670
question<font color="#CCCCCC"> it's specified</font><font color="#E5E5E5"> by hash it's</font>

420
00:22:09,550 --> 00:22:17,820
immutable because all these<font color="#E5E5E5"> things</font><font color="#CCCCCC"> are</font>

421
00:22:12,670 --> 00:22:19,990
<font color="#CCCCCC">specified by hash</font><font color="#E5E5E5"> there is no further</font>

422
00:22:17,820 --> 00:22:21,939
trust required<font color="#E5E5E5"> this is something</font><font color="#CCCCCC"> that</font>

423
00:22:19,990 --> 00:22:24,700
can<font color="#CCCCCC"> be completely decentralized I can</font>

424
00:22:21,940 --> 00:22:26,860
<font color="#CCCCCC">actually expect</font><font color="#E5E5E5"> anybody do like you can</font>

425
00:22:24,700 --> 00:22:28,480
paste these formulas on paste bin<font color="#E5E5E5"> and as</font>

426
00:22:26,860 --> 00:22:30,250
long as<font color="#CCCCCC"> somebody like roughly trusts</font>

427
00:22:28,480 --> 00:22:33,610
<font color="#CCCCCC">that first handover of</font><font color="#E5E5E5"> the document you</font>

428
00:22:30,250 --> 00:22:35,320
<font color="#CCCCCC">can build everything specified</font><font color="#E5E5E5"> and you</font>

429
00:22:33,610 --> 00:22:40,540
don't<font color="#E5E5E5"> need any mirrors which are trusted</font>

430
00:22:35,320 --> 00:22:43,179
at all and like maybe most importantly

431
00:22:40,540 --> 00:22:44,409
to my personal sanity<font color="#CCCCCC"> I can</font><font color="#E5E5E5"> assume that</font>

432
00:22:43,180 --> 00:22:47,530
I can<font color="#CCCCCC"> give you</font><font color="#E5E5E5"> something and it will</font>

433
00:22:44,410 --> 00:22:49,630
work because everything is running<font color="#E5E5E5"> in a</font>

434
00:22:47,530 --> 00:22:52,000
container<font color="#E5E5E5"> and</font><font color="#CCCCCC"> all of the inputs are</font>

435
00:22:49,630 --> 00:22:54,370
<font color="#CCCCCC">whitelisted all</font><font color="#E5E5E5"> the outputs are explicit</font>

436
00:22:52,000 --> 00:22:56,580
<font color="#E5E5E5">I'm like pretty sure that</font><font color="#CCCCCC"> that's gonna</font>

437
00:22:54,370 --> 00:22:56,580
work

438
00:22:57,480 --> 00:23:03,340
so I<font color="#E5E5E5"> already did this demo with bash</font><font color="#CCCCCC"> &</font>

439
00:22:59,800 --> 00:23:05,860
<font color="#E5E5E5">JQ so I'm gonna skip</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> and with this</font>

440
00:23:03,340 --> 00:23:08,530
I<font color="#E5E5E5"> would hope I can just hand</font><font color="#CCCCCC"> wittingly</font>

441
00:23:05,860 --> 00:23:10,060
<font color="#E5E5E5">say we could build anything</font><font color="#CCCCCC"> you probably</font>

442
00:23:08,530 --> 00:23:12,639
wouldn't<font color="#CCCCCC"> want to do it with bash it'll</font>

443
00:23:10,060 --> 00:23:15,540
<font color="#E5E5E5">get old fast</font><font color="#CCCCCC"> but you could this</font><font color="#E5E5E5"> is all</font>

444
00:23:12,640 --> 00:23:15,540
API<font color="#CCCCCC"> driven</font>

445
00:23:18,440 --> 00:23:22,200
this might<font color="#E5E5E5"> be a good time</font><font color="#CCCCCC"> to pause</font><font color="#E5E5E5"> are</font>

446
00:23:20,700 --> 00:23:24,210
there any questions that<font color="#CCCCCC"> anyone has</font><font color="#E5E5E5"> at</font>

447
00:23:22,200 --> 00:23:36,299
this<font color="#CCCCCC"> point I'm just like</font><font color="#E5E5E5"> flying around</font>

448
00:23:24,210 --> 00:23:38,789
through demos so you mentioned like

449
00:23:36,299 --> 00:23:41,340
<font color="#E5E5E5">memoization and deterministic hashing</font>

450
00:23:38,789 --> 00:23:44,370
and stuff<font color="#CCCCCC"> and so like with other</font>

451
00:23:41,340 --> 00:23:46,220
container systems I've used and I<font color="#E5E5E5"> think</font>

452
00:23:44,370 --> 00:23:51,360
a lot<font color="#CCCCCC"> of people have used ah</font>

453
00:23:46,220 --> 00:23:54,390
if you rebuild like an image it'll cache

454
00:23:51,360 --> 00:23:57,840
it<font color="#E5E5E5"> but the if you like clear the</font><font color="#CCCCCC"> cache</font>

455
00:23:54,390 --> 00:24:00,059
and rebuild it again<font color="#E5E5E5"> it comes out with a</font>

456
00:23:57,840 --> 00:24:02,399
<font color="#CCCCCC">different hash</font><font color="#E5E5E5"> because I mean you do</font>

457
00:24:00,059 --> 00:24:04,080
like an<font color="#CCCCCC"> apt-get and the thing it does</font>

458
00:24:02,399 --> 00:24:07,320
today<font color="#E5E5E5"> is not going</font><font color="#CCCCCC"> to be the thing it</font>

459
00:24:04,080 --> 00:24:10,289
does tomorrow<font color="#CCCCCC"> so does that does</font><font color="#E5E5E5"> this</font>

460
00:24:07,320 --> 00:24:12,990
tool<font color="#E5E5E5"> have the same kind of thing with</font>

461
00:24:10,289 --> 00:24:14,370
<font color="#E5E5E5">the you know</font><font color="#CCCCCC"> the hash is changing if you</font>

462
00:24:12,990 --> 00:24:17,610
clear the cache or does it<font color="#E5E5E5"> come out</font>

463
00:24:14,370 --> 00:24:21,889
<font color="#CCCCCC">exactly</font><font color="#E5E5E5"> the same</font><font color="#CCCCCC"> again that's a good</font>

464
00:24:17,610 --> 00:24:21,889
question<font color="#CCCCCC"> it depends on what you're doing</font>

465
00:24:22,700 --> 00:24:26,970
this<font color="#E5E5E5"> is sort of the the warm-up</font><font color="#CCCCCC"> that I</font>

466
00:24:25,320 --> 00:24:30,600
was trying<font color="#E5E5E5"> to</font><font color="#CCCCCC"> sneak into the first</font><font color="#E5E5E5"> half</font>

467
00:24:26,970 --> 00:24:32,520
of the talk<font color="#CCCCCC"> repeater and the it's</font>

468
00:24:30,600 --> 00:24:34,709
ecosystem that<font color="#E5E5E5"> is full of things that</font>

469
00:24:32,520 --> 00:24:36,360
<font color="#CCCCCC">we'll use lots of hashes and if you do</font>

470
00:24:34,710 --> 00:24:38,279
sensible things inside<font color="#CCCCCC"> of the repeater</font>

471
00:24:36,360 --> 00:24:41,039
containers it will definitely be

472
00:24:38,279 --> 00:24:43,830
reproducible<font color="#E5E5E5"> if you do two nonsensical</font>

473
00:24:41,039 --> 00:24:46,169
things inside the containers<font color="#E5E5E5"> there is no</font>

474
00:24:43,830 --> 00:24:50,039
salvation<font color="#E5E5E5"> that can like magically come</font>

475
00:24:46,169 --> 00:24:54,510
in for you<font color="#CCCCCC"> so</font><font color="#E5E5E5"> if you're doing like</font>

476
00:24:50,039 --> 00:24:56,730
apt-get install for example you are<font color="#CCCCCC"> I</font>

477
00:24:54,510 --> 00:25:01,350
<font color="#E5E5E5">don't know if I want to say doomed</font>

478
00:24:56,730 --> 00:25:03,480
but yeah you're doomed<font color="#E5E5E5"> unless you use</font>

479
00:25:01,350 --> 00:25:04,889
snapshots<font color="#E5E5E5"> Debian org for example which</font>

480
00:25:03,480 --> 00:25:07,350
is this really<font color="#E5E5E5"> interesting service they</font>

481
00:25:04,890 --> 00:25:09,899
have which can lock things to a set of

482
00:25:07,350 --> 00:25:12,059
<font color="#E5E5E5">packages by date and we assume that the</font>

483
00:25:09,899 --> 00:25:13,649
operators<font color="#CCCCCC"> of snapshots Debian org</font><font color="#E5E5E5"> are</font>

484
00:25:12,059 --> 00:25:14,879
truthful<font color="#CCCCCC"> and honest and returning</font>

485
00:25:13,649 --> 00:25:19,049
packages<font color="#E5E5E5"> and I'm</font><font color="#CCCCCC"> shattered from that</font>

486
00:25:14,880 --> 00:25:20,820
date but<font color="#E5E5E5"> well if you've owned those</font>

487
00:25:19,049 --> 00:25:23,850
processes<font color="#CCCCCC"> in repeater and</font><font color="#E5E5E5"> watch the</font>

488
00:25:20,820 --> 00:25:25,350
hashes<font color="#CCCCCC"> that come out and then you can no</font>

489
00:25:23,850 --> 00:25:27,029
<font color="#E5E5E5">more fully whether or not you trust</font><font color="#CCCCCC"> that</font>

490
00:25:25,350 --> 00:25:28,409
service over time<font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> as long</font>

491
00:25:27,029 --> 00:25:30,480
<font color="#CCCCCC">as you do</font>

492
00:25:28,410 --> 00:25:31,470
sensible<font color="#E5E5E5"> things then you'll get the same</font>

493
00:25:30,480 --> 00:25:34,020
thing<font color="#CCCCCC"> every time</font>

494
00:25:31,470 --> 00:25:36,150
right<font color="#CCCCCC"> the tool is called</font><font color="#E5E5E5"> repeaters</font><font color="#CCCCCC"> so</font>

495
00:25:34,020 --> 00:25:39,629
that it helps<font color="#CCCCCC"> you repeat things it is</font>

496
00:25:36,150 --> 00:25:46,410
not<font color="#CCCCCC"> called reproducer</font><font color="#E5E5E5"> please do make</font>

497
00:25:39,630 --> 00:25:51,050
reproducible things for<font color="#CCCCCC"> example what</font>

498
00:25:46,410 --> 00:25:53,730
will happen<font color="#E5E5E5"> to things</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> built with GCC</font>

499
00:25:51,050 --> 00:25:55,860
<font color="#E5E5E5">normally there would be some build time</font>

500
00:25:53,730 --> 00:25:58,350
and other information<font color="#E5E5E5"> depending on my</font>

501
00:25:55,860 --> 00:26:02,820
<font color="#CCCCCC">current system on that</font><font color="#E5E5E5"> so that would</font>

502
00:25:58,350 --> 00:26:04,679
<font color="#E5E5E5">also change the output right yep</font><font color="#CCCCCC"> but</font>

503
00:26:02,820 --> 00:26:07,490
that's basically<font color="#CCCCCC"> just another case of</font>

504
00:26:04,680 --> 00:26:10,590
that<font color="#E5E5E5"> sensible things you should do all</font>

505
00:26:07,490 --> 00:26:18,390
<font color="#E5E5E5">right I don't</font><font color="#CCCCCC"> want to call GCC</font>

506
00:26:10,590 --> 00:26:20,899
nonsensical but yeah so the lovely<font color="#E5E5E5"> folks</font>

507
00:26:18,390 --> 00:26:25,590
who work on the reproducible builds

508
00:26:20,900 --> 00:26:27,210
<font color="#E5E5E5">organization have a decent amount of</font>

509
00:26:25,590 --> 00:26:29,429
<font color="#E5E5E5">documentation about things that are</font>

510
00:26:27,210 --> 00:26:32,370
frustrating this<font color="#E5E5E5"> is a really great</font>

511
00:26:29,430 --> 00:26:38,190
<font color="#E5E5E5">website and a lot of</font><font color="#CCCCCC"> these things</font>

512
00:26:32,370 --> 00:26:39,689
address<font color="#E5E5E5"> GCC is kind of noteworthy for</font>

513
00:26:38,190 --> 00:26:41,970
embedding build paths in a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> places</font>

514
00:26:39,690 --> 00:26:45,000
or like giving you<font color="#E5E5E5"> flags which lets you</font>

515
00:26:41,970 --> 00:26:46,440
do this which<font color="#CCCCCC"> is bad enough all</font><font color="#E5E5E5"> of these</font>

516
00:26:45,000 --> 00:26:50,610
are things<font color="#E5E5E5"> that need</font><font color="#CCCCCC"> to be fixed</font><font color="#E5E5E5"> in</font>

517
00:26:46,440 --> 00:26:53,220
build scripts<font color="#CCCCCC"> around the world</font><font color="#E5E5E5"> so yeah</font>

518
00:26:50,610 --> 00:26:55,530
<font color="#CCCCCC">so repeater is not a magic selves to do</font>

519
00:26:53,220 --> 00:26:57,000
<font color="#E5E5E5">this</font><font color="#CCCCCC"> but what I hope is that it's a good</font>

520
00:26:55,530 --> 00:27:00,300
<font color="#E5E5E5">tool chain for putting these things in</font>

521
00:26:57,000 --> 00:27:01,950
and now<font color="#E5E5E5"> that we run them and the natural</font>

522
00:27:00,300 --> 00:27:05,010
thing you<font color="#E5E5E5"> see every time</font><font color="#CCCCCC"> you run</font><font color="#E5E5E5"> a</font>

523
00:27:01,950 --> 00:27:07,020
process is the hash I hope this can

524
00:27:05,010 --> 00:27:10,680
incentivize some discussions about<font color="#E5E5E5"> these</font>

525
00:27:07,020 --> 00:27:12,360
things and like make us all culturally

526
00:27:10,680 --> 00:27:16,350
aware that like reproducibility is

527
00:27:12,360 --> 00:27:18,389
important if<font color="#E5E5E5"> you don't have it in any</font>

528
00:27:16,350 --> 00:27:21,929
<font color="#E5E5E5">small detail</font><font color="#CCCCCC"> it's really hard to</font><font color="#E5E5E5"> justify</font>

529
00:27:18,390 --> 00:27:24,590
the rest of your system<font color="#E5E5E5"> and yeah and get</font>

530
00:27:21,930 --> 00:27:24,590
better from there

531
00:27:28,830 --> 00:27:33,340
you mentioned<font color="#E5E5E5"> that it was hard to figure</font>

532
00:27:31,179 --> 00:27:37,419
<font color="#E5E5E5">out what is</font><font color="#CCCCCC"> going on in</font><font color="#E5E5E5"> darayya menses</font>

533
00:27:33,340 --> 00:27:40,689
<font color="#E5E5E5">but not in other containers but don't</font>

534
00:27:37,419 --> 00:27:56,470
you have<font color="#E5E5E5"> like the daughter file to state</font>

535
00:27:40,690 --> 00:28:01,210
<font color="#E5E5E5">that to some degree yes</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> so you could</font>

536
00:27:56,470 --> 00:28:03,279
make a totally awesome super pure no

537
00:28:01,210 --> 00:28:04,870
<font color="#CCCCCC">side-effect dockerfile it's just that</font>

538
00:28:03,279 --> 00:28:08,230
almost everything<font color="#CCCCCC"> about that</font><font color="#E5E5E5"> format is</font>

539
00:28:04,870 --> 00:28:11,139
<font color="#CCCCCC">going to encourage you to</font><font color="#E5E5E5"> not do that</font>

540
00:28:08,230 --> 00:28:13,059
and to<font color="#E5E5E5"> be super</font><font color="#CCCCCC"> messy instead</font><font color="#E5E5E5"> because</font>

541
00:28:11,140 --> 00:28:17,110
the thing that docker does constantly<font color="#E5E5E5"> is</font>

542
00:28:13,059 --> 00:28:19,840
export the<font color="#CCCCCC"> entire root filesystem</font><font color="#E5E5E5"> like</font>

543
00:28:17,110 --> 00:28:24,158
that just that undermines you at every

544
00:28:19,840 --> 00:28:26,320
turn<font color="#E5E5E5"> I think there</font><font color="#CCCCCC"> are some</font><font color="#E5E5E5"> systems now</font>

545
00:28:24,159 --> 00:28:29,279
for multi step docker<font color="#E5E5E5"> bills using some</font>

546
00:28:26,320 --> 00:28:33,428
like - -<font color="#E5E5E5"> from commands and like they're</font>

547
00:28:29,279 --> 00:28:35,740
trying to get there because it's like an

548
00:28:33,429 --> 00:28:37,600
obviously sensible direction to go<font color="#E5E5E5"> make</font>

549
00:28:35,740 --> 00:28:41,289
your images smaller by not<font color="#E5E5E5"> shipping the</font>

550
00:28:37,600 --> 00:28:44,399
universe that you built with<font color="#E5E5E5"> right but</font>

551
00:28:41,289 --> 00:28:46,960
it's so high<font color="#E5E5E5"> friction to do this that</font>

552
00:28:44,399 --> 00:28:51,539
<font color="#E5E5E5">like you can try</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> just like good luck</font>

553
00:28:46,960 --> 00:28:51,539
<font color="#CCCCCC">Godspeed there might be easier tools</font>

554
00:29:03,700 --> 00:29:10,550
um the first example<font color="#E5E5E5"> you gave with the</font>

555
00:29:07,700 --> 00:29:12,110
<font color="#E5E5E5">m'kay dirt was that actually</font>

556
00:29:10,550 --> 00:29:14,060
reproducible or<font color="#CCCCCC"> liar</font><font color="#E5E5E5"> you're doing</font>

557
00:29:12,110 --> 00:29:18,020
something<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have the</font><font color="#CCCCCC"> M time be</font>

558
00:29:14,060 --> 00:29:20,690
<font color="#E5E5E5">normalized there oh good question</font><font color="#CCCCCC"> yes I</font>

559
00:29:18,020 --> 00:29:22,930
am normalizing<font color="#E5E5E5"> M time because that thing</font>

560
00:29:20,690 --> 00:29:22,930
<font color="#CCCCCC">is a monster</font>

561
00:29:24,280 --> 00:29:31,340
yeah so some of the the<font color="#CCCCCC"> format's I'm</font>

562
00:29:27,320 --> 00:29:32,540
using here this<font color="#E5E5E5"> tar</font><font color="#CCCCCC"> plug-in that is kind</font>

563
00:29:31,340 --> 00:29:33,709
<font color="#CCCCCC">of your default for a lot of the work</font>

564
00:29:32,540 --> 00:29:36,680
that<font color="#CCCCCC"> you</font><font color="#E5E5E5"> would do with repeater in</font>

565
00:29:33,710 --> 00:29:38,570
practice<font color="#CCCCCC"> and it will preserve M time and</font>

566
00:29:36,680 --> 00:29:40,460
it will<font color="#E5E5E5"> preserve</font><font color="#CCCCCC"> UID</font><font color="#E5E5E5"> and it it's</font>

567
00:29:38,570 --> 00:29:45,439
literally a<font color="#CCCCCC"> tarball</font><font color="#E5E5E5"> it's like standard</font>

568
00:29:40,460 --> 00:29:47,870
<font color="#E5E5E5">tar</font><font color="#CCCCCC"> but the default</font><font color="#E5E5E5"> behavior is also to</font>

569
00:29:45,440 --> 00:29:50,060
flatten most of the attributes<font color="#E5E5E5"> that are</font>

570
00:29:47,870 --> 00:29:52,699
irritating<font color="#CCCCCC"> like m time is set to a flat</font>

571
00:29:50,060 --> 00:29:54,080
value and UID and GID are also like

572
00:29:52,700 --> 00:29:56,420
usually<font color="#E5E5E5"> when you're passing things</font>

573
00:29:54,080 --> 00:29:59,510
around between<font color="#CCCCCC"> a bunch of images</font><font color="#E5E5E5"> those</font>

574
00:29:56,420 --> 00:30:01,940
just aren't useful<font color="#E5E5E5"> you can add some</font>

575
00:29:59,510 --> 00:30:03,470
flags to keep these permission bits<font color="#CCCCCC"> so</font>

576
00:30:01,940 --> 00:30:06,140
if you are capturing like the base image

577
00:30:03,470 --> 00:30:08,150
<font color="#E5E5E5">out of a Debian system for passing</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> on</font>

578
00:30:06,140 --> 00:30:10,820
further you probably do<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> keep all</font>

579
00:30:08,150 --> 00:30:14,780
<font color="#CCCCCC">of you IDs because reasons like</font><font color="#E5E5E5"> it will</font>

580
00:30:10,820 --> 00:30:16,399
not go well<font color="#CCCCCC"> if you discard them but the</font>

581
00:30:14,780 --> 00:30:19,460
default<font color="#E5E5E5"> for like intermediate processes</font>

582
00:30:16,400 --> 00:30:26,750
<font color="#E5E5E5">in almost anything else</font><font color="#CCCCCC"> like I think</font>

583
00:30:19,460 --> 00:30:29,210
<font color="#E5E5E5">it's sensible yeah good question</font>

584
00:30:26,750 --> 00:30:33,400
yes<font color="#CCCCCC"> maker is non-deterministic</font><font color="#E5E5E5"> on a</font>

585
00:30:29,210 --> 00:30:37,100
regular system<font color="#E5E5E5"> we have a lot of cultural</font>

586
00:30:33,400 --> 00:30:43,220
rethinks to make but yeah flattening<font color="#CCCCCC"> M</font>

587
00:30:37,100 --> 00:30:44,360
times<font color="#E5E5E5"> also very rarely causes trouble it</font>

588
00:30:43,220 --> 00:30:45,860
should also be<font color="#E5E5E5"> mentioned that if you</font>

589
00:30:44,360 --> 00:30:47,479
make this this call to get<font color="#E5E5E5"> the C time</font>

590
00:30:45,860 --> 00:30:54,620
out of any of these<font color="#CCCCCC"> inodes you're</font><font color="#E5E5E5"> going</font>

591
00:30:47,480 --> 00:30:58,610
<font color="#E5E5E5">to don't worry about it okay so slides</font>

592
00:30:54,620 --> 00:31:01,969
come back<font color="#E5E5E5"> okay so</font>

593
00:30:58,610 --> 00:31:06,379
<font color="#CCCCCC">I have one more layer of</font><font color="#E5E5E5"> magic sauce to</font>

594
00:31:01,970 --> 00:31:07,940
toss<font color="#E5E5E5"> on to this so bash</font><font color="#CCCCCC"> and JQ was a way</font>

595
00:31:06,380 --> 00:31:11,299
<font color="#E5E5E5">that we could template things but</font>

596
00:31:07,940 --> 00:31:14,720
honestly<font color="#E5E5E5"> that is terrible</font><font color="#CCCCCC"> outside of</font>

597
00:31:11,299 --> 00:31:16,610
demos<font color="#E5E5E5"> so if you wanted to use some</font>

598
00:31:14,720 --> 00:31:20,299
<font color="#CCCCCC">higher level tools to</font><font color="#E5E5E5"> build more</font>

599
00:31:16,610 --> 00:31:22,100
complicated<font color="#CCCCCC"> pipelines there are</font>

600
00:31:20,299 --> 00:31:23,179
additional optional tools that work

601
00:31:22,100 --> 00:31:26,570
around<font color="#E5E5E5"> repeater</font><font color="#CCCCCC"> that you might be</font>

602
00:31:23,179 --> 00:31:28,940
<font color="#CCCCCC">interested in so again all of this is</font>

603
00:31:26,570 --> 00:31:34,490
API powered repeater is a tool chain you

604
00:31:28,940 --> 00:31:36,440
can<font color="#E5E5E5"> use</font><font color="#CCCCCC"> standalone even this this</font>

605
00:31:34,490 --> 00:31:37,880
component alone does the<font color="#CCCCCC"> filesystem</font>

606
00:31:36,440 --> 00:31:39,799
<font color="#CCCCCC">components you can</font><font color="#E5E5E5"> use it separately</font>

607
00:31:37,880 --> 00:31:41,320
<font color="#CCCCCC">you'll</font><font color="#E5E5E5"> get like a nice PS tree if you're</font>

608
00:31:39,799 --> 00:31:44,299
looking for it

609
00:31:41,320 --> 00:31:46,159
so this is an optional layer on top<font color="#CCCCCC"> of</font>

610
00:31:44,299 --> 00:31:50,299
it<font color="#E5E5E5"> with a working title</font><font color="#CCCCCC"> of stellar</font><font color="#E5E5E5"> I</font>

611
00:31:46,160 --> 00:31:53,660
don't know why about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> and this</font>

612
00:31:50,299 --> 00:31:56,780
is a bit<font color="#CCCCCC"> like the formulas earlier but</font>

613
00:31:53,660 --> 00:31:59,980
now giving up on pure hashing and moving

614
00:31:56,780 --> 00:32:03,710
a little<font color="#CCCCCC"> bit closer to naming things</font><font color="#E5E5E5"> and</font>

615
00:31:59,980 --> 00:32:05,770
this<font color="#E5E5E5"> is a system</font><font color="#CCCCCC"> that's going</font><font color="#E5E5E5"> to keep</font>

616
00:32:03,710 --> 00:32:09,320
more metadata associated<font color="#E5E5E5"> with things and</font>

617
00:32:05,770 --> 00:32:11,179
you could conceivably<font color="#E5E5E5"> this is starting</font>

618
00:32:09,320 --> 00:32:14,178
<font color="#E5E5E5">to angle towards building a distro or</font><font color="#CCCCCC"> a</font>

619
00:32:11,179 --> 00:32:15,799
package manager of some scale so this is

620
00:32:14,179 --> 00:32:17,990
an example<font color="#E5E5E5"> that's going to refer to some</font>

621
00:32:15,799 --> 00:32:22,879
catalog which<font color="#CCCCCC"> is a way of</font><font color="#E5E5E5"> associating</font>

622
00:32:17,990 --> 00:32:26,090
<font color="#E5E5E5">human readable names of hashes</font><font color="#CCCCCC"> and this</font>

623
00:32:22,880 --> 00:32:36,799
is a pretty<font color="#E5E5E5"> simple thing human readable</font>

624
00:32:26,090 --> 00:32:38,480
name<font color="#E5E5E5"> release name hash</font><font color="#CCCCCC"> example yeah so</font>

625
00:32:36,799 --> 00:32:40,900
this is a<font color="#E5E5E5"> system that</font><font color="#CCCCCC"> we'll go look up</font>

626
00:32:38,480 --> 00:32:43,220
this<font color="#E5E5E5"> catalog turn this into a hash</font>

627
00:32:40,900 --> 00:32:49,070
<font color="#E5E5E5">substitute it in and the</font><font color="#CCCCCC"> rest of</font><font color="#E5E5E5"> this</font>

628
00:32:43,220 --> 00:32:51,919
still looks<font color="#CCCCCC"> like a formula and when you</font>

629
00:32:49,070 --> 00:32:55,510
run this tool it will invoke repeater

630
00:32:51,919 --> 00:32:55,510
for<font color="#E5E5E5"> you with all the templated results</font>

631
00:32:56,650 --> 00:33:03,290
that was kind<font color="#CCCCCC"> of boring because</font><font color="#E5E5E5"> it was</font>

632
00:32:58,549 --> 00:33:06,230
<font color="#E5E5E5">just one this is a system that</font><font color="#CCCCCC"> can</font>

633
00:33:03,290 --> 00:33:07,820
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> do multi-step builds as well so</font>

634
00:33:06,230 --> 00:33:11,390
this<font color="#E5E5E5"> is a much more</font><font color="#CCCCCC"> complicated example</font>

635
00:33:07,820 --> 00:33:12,480
where we have more<font color="#E5E5E5"> than</font><font color="#CCCCCC"> one formula</font>

636
00:33:11,390 --> 00:33:15,180
template

637
00:33:12,480 --> 00:33:17,610
it's even a recursive system which has

638
00:33:15,180 --> 00:33:22,080
locally scoped names<font color="#CCCCCC"> can refer to</font><font color="#E5E5E5"> parent</font>

639
00:33:17,610 --> 00:33:23,760
scopes<font color="#E5E5E5"> etc I was can look over this</font>

640
00:33:22,080 --> 00:33:26,220
really<font color="#E5E5E5"> fast because I think the core of</font>

641
00:33:23,760 --> 00:33:27,690
repeater is more interesting<font color="#E5E5E5"> and if</font>

642
00:33:26,220 --> 00:33:29,520
anybody wants<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do experiments</font><font color="#CCCCCC"> later</font>

643
00:33:27,690 --> 00:33:30,810
they should use<font color="#CCCCCC"> that first</font><font color="#E5E5E5"> but if you</font>

644
00:33:29,520 --> 00:33:32,820
<font color="#CCCCCC">also are looking</font><font color="#E5E5E5"> at that you're thinking</font>

645
00:33:30,810 --> 00:33:34,169
<font color="#E5E5E5">wow that's way too many hashes I'm</font>

646
00:33:32,820 --> 00:33:38,189
afraid I'll get stuck copying and

647
00:33:34,170 --> 00:33:41,700
pasting<font color="#CCCCCC"> I hear you already</font><font color="#E5E5E5"> especially</font>

648
00:33:38,190 --> 00:33:43,800
<font color="#CCCCCC">you laughing person yep you're right it</font>

649
00:33:41,700 --> 00:33:49,170
will get old<font color="#CCCCCC"> so here are</font><font color="#E5E5E5"> some tools how</font>

650
00:33:43,800 --> 00:33:55,230
<font color="#CCCCCC">to fix it this</font><font color="#E5E5E5"> can even go so far as</font><font color="#CCCCCC"> to</font>

651
00:33:49,170 --> 00:33:56,790
have<font color="#E5E5E5"> some some very impure ways of</font>

652
00:33:55,230 --> 00:33:58,650
interacting with<font color="#E5E5E5"> the world</font><font color="#CCCCCC"> so this</font>

653
00:33:56,790 --> 00:34:02,040
system<font color="#E5E5E5"> also</font><font color="#CCCCCC"> supports ingesting things</font>

654
00:33:58,650 --> 00:34:03,420
from get for<font color="#E5E5E5"> example so this is a</font>

655
00:34:02,040 --> 00:34:06,510
command<font color="#CCCCCC"> that</font><font color="#E5E5E5"> instead of looking</font><font color="#CCCCCC"> at some</font>

656
00:34:03,420 --> 00:34:10,050
static release<font color="#E5E5E5"> catalog is going to look</font>

657
00:34:06,510 --> 00:34:17,070
at my local impure<font color="#E5E5E5"> State use a git</font>

658
00:34:10,050 --> 00:34:20,600
system<font color="#E5E5E5"> look right here</font><font color="#CCCCCC"> look at head and</font>

659
00:34:17,070 --> 00:34:23,520
it will template<font color="#E5E5E5"> this thing in run a</font>

660
00:34:20,600 --> 00:34:25,799
formula based on this this formula said

661
00:34:23,520 --> 00:34:30,509
hello<font color="#CCCCCC"> and it LS the source tree</font><font color="#E5E5E5"> and</font>

662
00:34:25,800 --> 00:34:34,080
indeed a readme dot MD is the one<font color="#E5E5E5"> thing</font>

663
00:34:30,510 --> 00:34:37,230
this contains so this is a<font color="#E5E5E5"> system that</font>

664
00:34:34,080 --> 00:34:40,049
<font color="#E5E5E5">you can use to basically do CI on</font>

665
00:34:37,230 --> 00:34:41,520
localhost if you want<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> think I'm</font>

666
00:34:40,050 --> 00:34:44,220
<font color="#E5E5E5">going to demonstrate</font><font color="#CCCCCC"> that in entirety</font>

667
00:34:41,520 --> 00:34:45,960
today but like imagine putting a bash

668
00:34:44,219 --> 00:34:53,540
while true<font color="#E5E5E5"> around it and now you have</font><font color="#CCCCCC"> CI</font>

669
00:34:45,960 --> 00:34:53,540
<font color="#E5E5E5">on localhost</font><font color="#CCCCCC"> slides</font>

670
00:34:54,250 --> 00:35:00,260
so what can you<font color="#E5E5E5"> do with that that format</font>

671
00:34:58,820 --> 00:35:01,820
was meant to<font color="#E5E5E5"> introduce human readable</font>

672
00:35:00,260 --> 00:35:03,140
names<font color="#E5E5E5"> again</font><font color="#CCCCCC"> to this system and</font><font color="#E5E5E5"> it's just</font>

673
00:35:01,820 --> 00:35:05,810
one example<font color="#E5E5E5"> of how</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> could do so</font>

674
00:35:03,140 --> 00:35:07,759
because<font color="#CCCCCC"> again repeater</font><font color="#E5E5E5"> API driven</font><font color="#CCCCCC"> build</font>

675
00:35:05,810 --> 00:35:11,029
<font color="#E5E5E5">your own magic on top of this if you</font>

676
00:35:07,760 --> 00:35:12,500
<font color="#E5E5E5">want but if you do use this system the</font>

677
00:35:11,030 --> 00:35:15,550
<font color="#CCCCCC">idea is not just</font><font color="#E5E5E5"> to give you human</font>

678
00:35:12,500 --> 00:35:20,900
readable names for<font color="#CCCCCC"> smoothness it's that</font>

679
00:35:15,550 --> 00:35:23,060
those pipelines they can be used to

680
00:35:20,900 --> 00:35:24,230
build something<font color="#E5E5E5"> but you've had a complex</font>

681
00:35:23,060 --> 00:35:26,810
build and you wanted<font color="#E5E5E5"> to ship the</font><font color="#CCCCCC"> whole</font>

682
00:35:24,230 --> 00:35:29,360
thing to somebody<font color="#E5E5E5"> they could be used for</font>

683
00:35:26,810 --> 00:35:31,549
<font color="#E5E5E5">rebuilding it</font><font color="#CCCCCC"> too as long</font><font color="#E5E5E5"> as you have</font>

684
00:35:29,360 --> 00:35:33,290
the same reference<font color="#E5E5E5"> to the release</font>

685
00:35:31,550 --> 00:35:35,660
<font color="#E5E5E5">catalogs to supply all of the basic</font>

686
00:35:33,290 --> 00:35:36,800
<font color="#CCCCCC">caches and you could vendor that</font><font color="#E5E5E5"> into</font>

687
00:35:35,660 --> 00:35:39,890
your<font color="#E5E5E5"> get tree it's pretty lightweight</font>

688
00:35:36,800 --> 00:35:42,110
it's just text files<font color="#E5E5E5"> then anybody could</font>

689
00:35:39,890 --> 00:35:46,540
rebuild<font color="#E5E5E5"> given that</font><font color="#CCCCCC"> snapshot of the</font>

690
00:35:42,110 --> 00:35:46,540
releases<font color="#E5E5E5"> and the snapshot of your module</font>

691
00:35:46,600 --> 00:35:56,630
this<font color="#CCCCCC"> is something that I</font><font color="#E5E5E5"> would love</font><font color="#CCCCCC"> to</font>

692
00:35:49,070 --> 00:36:03,250
turn into a distro<font color="#E5E5E5"> basically it if you</font>

693
00:35:56,630 --> 00:36:07,370
so much<font color="#E5E5E5"> as let's have</font><font color="#CCCCCC"> let's get in there</font>

694
00:36:03,250 --> 00:36:12,650
if you vendor these files into<font color="#CCCCCC"> a</font><font color="#E5E5E5"> get</font>

695
00:36:07,370 --> 00:36:15,920
repo and you have the module<font color="#CCCCCC"> in the gut</font>

696
00:36:12,650 --> 00:36:21,200
rep oh you have a reproducible build

697
00:36:15,920 --> 00:36:22,550
except for maybe<font color="#E5E5E5"> just this one</font><font color="#CCCCCC"> thing we</font>

698
00:36:21,200 --> 00:36:24,890
could mechanically transform this thing

699
00:36:22,550 --> 00:36:28,670
<font color="#CCCCCC">to because this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> a JSON API we can</font>

700
00:36:24,890 --> 00:36:31,190
reason about<font color="#E5E5E5"> this very clearly</font><font color="#CCCCCC"> I could</font>

701
00:36:28,670 --> 00:36:32,990
take this ingest<font color="#E5E5E5"> get thing and I could</font>

702
00:36:31,190 --> 00:36:38,000
have a tool automatically rewrite it to

703
00:36:32,990 --> 00:36:40,549
<font color="#E5E5E5">just be the current get hash and I could</font>

704
00:36:38,000 --> 00:36:45,530
pin that in a file and<font color="#CCCCCC"> I could put it</font>

705
00:36:40,550 --> 00:36:48,220
inside what's maybe say I would make a

706
00:36:45,530 --> 00:36:48,220
sibling<font color="#E5E5E5"> of this</font>

707
00:36:49,280 --> 00:36:54,080
and I just store the module in there

708
00:36:51,530 --> 00:36:56,960
again<font color="#E5E5E5"> that would make this whole</font><font color="#CCCCCC"> thing</font>

709
00:36:54,080 --> 00:37:01,880
reproducible assuming<font color="#CCCCCC"> again that this is</font>

710
00:36:56,960 --> 00:37:06,200
<font color="#CCCCCC">a reasonable script I could now ship a</font>

711
00:37:01,880 --> 00:37:08,900
single<font color="#E5E5E5"> get repo which has tons of</font>

712
00:37:06,200 --> 00:37:10,549
internal dependencies<font color="#E5E5E5"> very complex tool</font>

713
00:37:08,900 --> 00:37:17,420
chains and I could expect<font color="#CCCCCC"> that the whole</font>

714
00:37:10,550 --> 00:37:23,000
tree is<font color="#E5E5E5"> reproducible maybe that would be</font>

715
00:37:17,420 --> 00:37:29,800
cool I'm gonna<font color="#E5E5E5"> leave a whole bunch</font><font color="#CCCCCC"> of</font>

716
00:37:23,000 --> 00:37:33,170
<font color="#E5E5E5">that as exercise to the reader right so</font>

717
00:37:29,800 --> 00:37:36,860
we had hashes going way<font color="#E5E5E5"> back to the</font>

718
00:37:33,170 --> 00:37:38,210
<font color="#E5E5E5">beginning of the talk repeatable purely</font>

719
00:37:36,860 --> 00:37:39,890
functional hopefully reproducible builds

720
00:37:38,210 --> 00:37:42,170
are one of the major things that<font color="#E5E5E5"> we</font>

721
00:37:39,890 --> 00:37:45,170
<font color="#E5E5E5">would like to improve in order</font><font color="#CCCCCC"> to get a</font>

722
00:37:42,170 --> 00:37:48,020
world that<font color="#E5E5E5"> we can reason about the other</font>

723
00:37:45,170 --> 00:37:50,450
one is and like some<font color="#E5E5E5"> of the questions in</font>

724
00:37:48,020 --> 00:37:51,320
<font color="#E5E5E5">the middle we're aiming at we still kind</font>

725
00:37:50,450 --> 00:37:53,299
of have<font color="#E5E5E5"> this problem where we're using</font>

726
00:37:51,320 --> 00:37:56,750
<font color="#E5E5E5">these massive global system</font><font color="#CCCCCC"> package</font>

727
00:37:53,300 --> 00:37:57,920
managers to have<font color="#E5E5E5"> wild side effects so</font>

728
00:37:56,750 --> 00:37:59,660
<font color="#CCCCCC">that the</font><font color="#E5E5E5"> only thing</font><font color="#CCCCCC"> we can do is</font>

729
00:37:57,920 --> 00:38:05,150
snapshot the whole base image<font color="#E5E5E5"> and we</font>

730
00:37:59,660 --> 00:38:08,450
need to get better<font color="#E5E5E5"> at</font><font color="#CCCCCC"> that and so we</font>

731
00:38:05,150 --> 00:38:09,860
really<font color="#CCCCCC"> need some standards for being</font>

732
00:38:08,450 --> 00:38:12,529
<font color="#E5E5E5">able to install multiple versions of</font>

733
00:38:09,860 --> 00:38:15,740
libraries<font color="#E5E5E5"> multiple versions of binaries</font>

734
00:38:12,530 --> 00:38:20,230
wherever we want<font color="#E5E5E5"> in some of the examples</font>

735
00:38:15,740 --> 00:38:29,149
I had earlier this was super easy

736
00:38:20,230 --> 00:38:30,830
<font color="#CCCCCC">busybox goes there fine</font><font color="#E5E5E5"> and if I'm using</font>

737
00:38:29,150 --> 00:38:32,750
the go compiler<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a particularly</font>

738
00:38:30,830 --> 00:38:34,700
<font color="#E5E5E5">well behaved thing</font><font color="#CCCCCC"> that I can drop in</font>

739
00:38:32,750 --> 00:38:38,620
any path and it's<font color="#E5E5E5"> gonna like do the</font>

740
00:38:34,700 --> 00:38:41,330
thing not<font color="#CCCCCC"> all things</font><font color="#E5E5E5"> are so well behaved</font>

741
00:38:38,620 --> 00:38:43,700
<font color="#E5E5E5">if somebody can give me a GCC build for</font>

742
00:38:41,330 --> 00:38:45,860
example<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be dropped in /foo</font>

743
00:38:43,700 --> 00:38:48,220
slash GCC and<font color="#E5E5E5"> can also be dropped in a</font>

744
00:38:45,860 --> 00:38:52,130
slash bar slash GCC and<font color="#E5E5E5"> it still works</font>

745
00:38:48,220 --> 00:38:54,049
<font color="#E5E5E5">could someone please give me that I</font>

746
00:38:52,130 --> 00:38:56,620
<font color="#E5E5E5">don't think it exists</font><font color="#CCCCCC"> and I</font><font color="#E5E5E5"> think we</font>

747
00:38:54,050 --> 00:38:56,620
<font color="#E5E5E5">need to build it</font>

748
00:38:59,060 --> 00:39:05,310
good<font color="#E5E5E5"> give me links to that later</font><font color="#CCCCCC"> I like</font>

749
00:39:03,750 --> 00:39:07,140
it has to<font color="#CCCCCC"> exist I can't be the first</font>

750
00:39:05,310 --> 00:39:13,049
<font color="#E5E5E5">person</font><font color="#CCCCCC"> to wish for a portable GCC</font>

751
00:39:07,140 --> 00:39:15,900
<font color="#CCCCCC">building so not</font><font color="#E5E5E5"> just with GCC though I</font>

752
00:39:13,050 --> 00:39:18,270
<font color="#E5E5E5">think we could really do well by seeing</font>

753
00:39:15,900 --> 00:39:20,130
this for pretty much<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> right now</font>

754
00:39:18,270 --> 00:39:21,420
<font color="#CCCCCC">we are still</font><font color="#E5E5E5"> really stuck even if</font>

755
00:39:20,130 --> 00:39:23,460
there's a<font color="#E5E5E5"> couple of things somewhere</font>

756
00:39:21,420 --> 00:39:27,780
<font color="#E5E5E5">which are build in this path agnostic</font>

757
00:39:23,460 --> 00:39:31,470
portable mechanism<font color="#E5E5E5"> most of the time if I</font>

758
00:39:27,780 --> 00:39:33,540
want to do real work<font color="#CCCCCC"> today</font><font color="#E5E5E5"> and I'm</font>

759
00:39:31,470 --> 00:39:35,609
<font color="#CCCCCC">working in some desk job in a</font><font color="#E5E5E5"> company</font>

760
00:39:33,540 --> 00:39:36,779
that<font color="#CCCCCC"> has</font><font color="#E5E5E5"> lots of other priorities what</font>

761
00:39:35,610 --> 00:39:39,090
I'm going to<font color="#CCCCCC"> end up doing is running</font>

762
00:39:36,780 --> 00:39:40,560
some global<font color="#E5E5E5"> system package manager</font>

763
00:39:39,090 --> 00:39:43,260
inside<font color="#E5E5E5"> a container and snapshot again</font>

764
00:39:40,560 --> 00:39:44,430
they need<font color="#CCCCCC"> to work and that's probably</font>

765
00:39:43,260 --> 00:39:47,070
what I'm gonna do if I'm pressed for

766
00:39:44,430 --> 00:39:49,740
<font color="#CCCCCC">time</font><font color="#E5E5E5"> but this is not helping with our</font>

767
00:39:47,070 --> 00:39:54,540
<font color="#E5E5E5">goal of having simple things that</font><font color="#CCCCCC"> we can</font>

768
00:39:49,740 --> 00:39:55,919
actually reason about I<font color="#E5E5E5"> think I'm sort</font>

769
00:39:54,540 --> 00:39:57,690
of<font color="#CCCCCC"> running</font><font color="#E5E5E5"> out of time on this and I</font>

770
00:39:55,920 --> 00:40:00,720
<font color="#CCCCCC">just simply didn't prepare enough slides</font>

771
00:39:57,690 --> 00:40:03,030
<font color="#E5E5E5">but if anyone wants to talk about this</font>

772
00:40:00,720 --> 00:40:05,399
after<font color="#E5E5E5"> you'll know where to find me</font><font color="#CCCCCC"> and</font>

773
00:40:03,030 --> 00:40:07,500
there's also another talk coming up at

774
00:40:05,400 --> 00:40:09,180
<font color="#E5E5E5">all systems go in Berlin in a couple</font>

775
00:40:07,500 --> 00:40:11,430
weeks<font color="#E5E5E5"> that's going to be about this</font>

776
00:40:09,180 --> 00:40:14,669
whole topic of path agnostic binaries

777
00:40:11,430 --> 00:40:17,339
and general tools now the one thing<font color="#E5E5E5"> I</font>

778
00:40:14,670 --> 00:40:22,070
want to<font color="#E5E5E5"> leave with today is we should</font>

779
00:40:17,340 --> 00:40:24,270
assume<font color="#CCCCCC"> that this</font><font color="#E5E5E5"> is doable and I think</font>

780
00:40:22,070 --> 00:40:26,520
repeater could be another tool<font color="#CCCCCC"> to help</font>

781
00:40:24,270 --> 00:40:28,620
<font color="#E5E5E5">do</font><font color="#CCCCCC"> it in the same</font><font color="#E5E5E5"> way as having a hash</font>

782
00:40:26,520 --> 00:40:32,009
print out at the end<font color="#E5E5E5"> of every step can</font>

783
00:40:28,620 --> 00:40:35,160
be<font color="#CCCCCC"> a cultural aid</font><font color="#E5E5E5"> towards making</font>

784
00:40:32,010 --> 00:40:36,780
reproducibility the default<font color="#E5E5E5"> wouldn't</font><font color="#CCCCCC"> it</font>

785
00:40:35,160 --> 00:40:39,720
<font color="#E5E5E5">be cool if we</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> make some general</font>

786
00:40:36,780 --> 00:40:40,950
linting scripts<font color="#CCCCCC"> that</font><font color="#E5E5E5"> install command in</font>

787
00:40:39,720 --> 00:40:42,930
a couple of<font color="#E5E5E5"> different paths and make</font>

788
00:40:40,950 --> 00:40:44,399
sure it still<font color="#CCCCCC"> works</font><font color="#E5E5E5"> or install it with</font>

789
00:40:42,930 --> 00:40:45,950
and<font color="#CCCCCC"> without these libraries in certain</font>

790
00:40:44,400 --> 00:40:49,740
paths make sure it works

791
00:40:45,950 --> 00:40:52,790
we could have linters for the

792
00:40:49,740 --> 00:40:52,790
portability<font color="#CCCCCC"> of our binaries</font>

793
00:40:53,790 --> 00:40:59,400
that's all I've got thank you for<font color="#E5E5E5"> your</font>

794
00:40:56,730 --> 00:41:07,950
time<font color="#E5E5E5"> if there are any more</font><font color="#CCCCCC"> questions I</font>

795
00:40:59,400 --> 00:41:13,370
guess sure<font color="#CCCCCC"> this is an HTTP link because</font>

796
00:41:07,950 --> 00:41:13,370
it<font color="#CCCCCC"> is on github pages because I am lazy</font>

797
00:41:13,610 --> 00:41:17,730
well<font color="#CCCCCC"> I maybe</font><font color="#E5E5E5"> have an update</font><font color="#CCCCCC"> at that dock</font>

798
00:41:16,830 --> 00:41:20,520
site in two months

799
00:41:17,730 --> 00:41:29,720
so thank<font color="#E5E5E5"> you for the</font><font color="#CCCCCC"> note I</font><font color="#E5E5E5"> will try to</font>

800
00:41:20,520 --> 00:41:32,280
fix it sorry<font color="#E5E5E5"> I just noticed reasonably</font>

801
00:41:29,720 --> 00:41:36,180
recently I think<font color="#CCCCCC"> it's a year ago so that</font>

802
00:41:32,280 --> 00:41:39,690
<font color="#CCCCCC">read had added</font><font color="#E5E5E5"> added a unique build ID</font>

803
00:41:36,180 --> 00:41:42,600
to their rpms<font color="#CCCCCC"> which by definition is not</font>

804
00:41:39,690 --> 00:41:44,690
repeatable<font color="#CCCCCC"> goals then because do you</font>

805
00:41:42,600 --> 00:41:47,870
<font color="#E5E5E5">think</font><font color="#CCCCCC"> that's the right way to go</font><font color="#E5E5E5"> no</font>

806
00:41:44,690 --> 00:41:47,870
<font color="#E5E5E5">absolutely not</font>

807
00:41:48,950 --> 00:41:55,890
so for part<font color="#CCCCCC"> one my question is if</font><font color="#E5E5E5"> you</font>

808
00:41:53,070 --> 00:41:58,200
ventured into<font color="#E5E5E5"> source</font><font color="#CCCCCC"> based distributions</font>

809
00:41:55,890 --> 00:42:00,509
at all in particular if you<font color="#CCCCCC"> have some</font>

810
00:41:58,200 --> 00:42:06,569
<font color="#E5E5E5">experience using the gen</font><font color="#CCCCCC"> 2 catalyst</font><font color="#E5E5E5"> tool</font>

811
00:42:00,510 --> 00:42:10,290
or the fun to<font color="#E5E5E5"> Metro tool and for part 2</font>

812
00:42:06,570 --> 00:42:13,110
I am I<font color="#E5E5E5"> was thinking about</font><font color="#CCCCCC"> Nix OS which</font>

813
00:42:10,290 --> 00:42:19,290
seems<font color="#CCCCCC"> to</font><font color="#E5E5E5"> be also somewhere in this</font>

814
00:42:13,110 --> 00:42:21,950
<font color="#E5E5E5">direction</font><font color="#CCCCCC"> ok those will have a lot</font><font color="#E5E5E5"> of</font>

815
00:42:19,290 --> 00:42:26,610
<font color="#E5E5E5">there will be a two-part answer as well</font>

816
00:42:21,950 --> 00:42:31,529
so<font color="#CCCCCC"> source based distros gen 2 is</font>

817
00:42:26,610 --> 00:42:33,900
beautiful fun<font color="#E5E5E5"> to EE so when I build</font>

818
00:42:31,530 --> 00:42:36,000
things I look to them a lot<font color="#E5E5E5"> for</font>

819
00:42:33,900 --> 00:42:38,190
reference<font color="#CCCCCC"> because a source</font><font color="#E5E5E5"> based distro</font>

820
00:42:36,000 --> 00:42:39,720
actually involves people<font color="#E5E5E5"> exercising the</font>

821
00:42:38,190 --> 00:42:41,910
source so you<font color="#E5E5E5"> know it's going to work</font>

822
00:42:39,720 --> 00:42:46,890
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> true</font><font color="#CCCCCC"> of all</font><font color="#E5E5E5"> distros out</font>

823
00:42:41,910 --> 00:42:50,330
there<font color="#CCCCCC"> I think the direction I</font><font color="#E5E5E5"> would like</font>

824
00:42:46,890 --> 00:42:52,740
to see development go in the future<font color="#CCCCCC"> is</font>

825
00:42:50,330 --> 00:42:54,630
<font color="#E5E5E5">actually breaking down the distinction</font>

826
00:42:52,740 --> 00:42:57,060
between source based and binary based

827
00:42:54,630 --> 00:42:58,590
distributions<font color="#E5E5E5"> if we have fully</font>

828
00:42:57,060 --> 00:43:01,950
reproducible builds for everything in

829
00:42:58,590 --> 00:43:04,590
the distro then the<font color="#E5E5E5"> distinction becomes</font>

830
00:43:01,950 --> 00:43:06,419
completely nebulous it's a trade of do I

831
00:43:04,590 --> 00:43:06,910
want to use the<font color="#CCCCCC"> network or I do I want</font>

832
00:43:06,420 --> 00:43:11,470
<font color="#E5E5E5">to burn</font>

833
00:43:06,910 --> 00:43:17,460
<font color="#E5E5E5">CPU locally</font><font color="#CCCCCC"> I'm so excited</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> your</font>

834
00:43:11,470 --> 00:43:19,808
<font color="#E5E5E5">nodding to the question of</font><font color="#CCCCCC"> Nick's OS</font>

835
00:43:17,460 --> 00:43:23,920
there was also the<font color="#CCCCCC"> question about tools</font>

836
00:43:19,809 --> 00:43:26,650
<font color="#CCCCCC">so did you have you have you</font><font color="#E5E5E5"> seen seen</font>

837
00:43:23,920 --> 00:43:28,690
or<font color="#E5E5E5"> tried the the catalyst and the</font><font color="#CCCCCC"> Metro</font>

838
00:43:26,650 --> 00:43:31,359
<font color="#E5E5E5">tools</font><font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> think so</font>

839
00:43:28,690 --> 00:43:35,109
<font color="#CCCCCC">alright I can show you they do a</font><font color="#E5E5E5"> lot of</font>

840
00:43:31,359 --> 00:43:37,598
this<font color="#E5E5E5"> on the like using</font><font color="#CCCCCC"> so-so</font>

841
00:43:35,109 --> 00:43:39,400
<font color="#CCCCCC">to provide a spec file with the packages</font>

842
00:43:37,599 --> 00:43:41,289
that<font color="#CCCCCC"> you want and it</font><font color="#E5E5E5"> runs the package</font>

843
00:43:39,400 --> 00:43:44,140
manager<font color="#CCCCCC"> and it builds one full system</font>

844
00:43:41,289 --> 00:43:46,000
with<font color="#E5E5E5"> ax exactly the inputs that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> give</font>

845
00:43:44,140 --> 00:43:49,868
it and with the regular package database

846
00:43:46,000 --> 00:43:53,170
<font color="#CCCCCC">I will be</font><font color="#E5E5E5"> interested I will be</font>

847
00:43:49,869 --> 00:43:55,780
<font color="#E5E5E5">interested</font><font color="#CCCCCC"> to see how deeply</font><font color="#E5E5E5"> true that</font>

848
00:43:53,170 --> 00:43:56,710
is and I don't really true<font color="#E5E5E5"> right so I</font>

849
00:43:55,780 --> 00:43:58,569
<font color="#E5E5E5">don't want a phrase that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> like a</font>

850
00:43:56,710 --> 00:43:59,950
combative thing but this<font color="#CCCCCC"> is also</font>

851
00:43:58,569 --> 00:44:03,339
<font color="#E5E5E5">something that a bunch of other distros</font>

852
00:43:59,950 --> 00:44:08,649
have claimed to<font color="#E5E5E5"> have</font><font color="#CCCCCC"> and it's usually a</font>

853
00:44:03,339 --> 00:44:11,950
little with repeater you have hashes<font color="#E5E5E5"> for</font>

854
00:44:08,650 --> 00:44:14,279
everything<font color="#CCCCCC"> and that is like</font><font color="#E5E5E5"> almost a</font>

855
00:44:11,950 --> 00:44:17,348
religious<font color="#E5E5E5"> level take on the scenario</font>

856
00:44:14,279 --> 00:44:18,940
there is<font color="#CCCCCC"> no trust of mirrors</font><font color="#E5E5E5"> anything</font>

857
00:44:17,349 --> 00:44:21,039
else that does trust mirrors is

858
00:44:18,940 --> 00:44:23,589
interesting but a different<font color="#CCCCCC"> kind of tool</font>

859
00:44:21,039 --> 00:44:25,289
<font color="#CCCCCC">I don't know if that is</font><font color="#E5E5E5"> actually a fair</font>

860
00:44:23,589 --> 00:44:28,900
description of<font color="#E5E5E5"> the things you're naming</font>

861
00:44:25,289 --> 00:44:30,099
no not really<font color="#CCCCCC"> okay okay</font><font color="#E5E5E5"> look at it great</font>

862
00:44:28,900 --> 00:44:31,480
<font color="#CCCCCC">I look</font><font color="#E5E5E5"> forward to hearing</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> this</font>

863
00:44:30,099 --> 00:44:33,990
afterwards<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right but I've been</font><font color="#CCCCCC"> Nix</font>

864
00:44:31,480 --> 00:44:33,990
<font color="#CCCCCC">OS yes</font>

865
00:44:36,480 --> 00:44:43,500
so next to us is also<font color="#CCCCCC"> a really cool</font>

866
00:44:40,270 --> 00:44:46,089
distro and I think they would also<font color="#E5E5E5"> be</font>

867
00:44:43,500 --> 00:44:47,529
super on the page of like functional

868
00:44:46,089 --> 00:44:52,299
builds<font color="#CCCCCC"> I think I hear them</font><font color="#E5E5E5"> say this a</font>

869
00:44:47,529 --> 00:44:56,140
lot<font color="#CCCCCC"> treating compilation</font><font color="#E5E5E5"> that has a pure</font>

870
00:44:52,299 --> 00:44:57,970
functional<font color="#E5E5E5"> system is I think just at</font>

871
00:44:56,140 --> 00:44:59,859
this<font color="#CCCCCC"> point clearly</font><font color="#E5E5E5"> the way to go in part</font>

872
00:44:57,970 --> 00:45:02,078
because Nix and<font color="#E5E5E5"> the geek systems are</font>

873
00:44:59,859 --> 00:45:03,460
<font color="#E5E5E5">being so very successful I'm so very</font>

874
00:45:02,079 --> 00:45:09,220
productive compared to some of the other

875
00:45:03,460 --> 00:45:12,460
distros out there<font color="#E5E5E5"> there are also some</font>

876
00:45:09,220 --> 00:45:14,828
very interesting choices that I think

877
00:45:12,460 --> 00:45:18,730
could still be<font color="#E5E5E5"> improved upon especially</font>

878
00:45:14,829 --> 00:45:20,270
when it comes<font color="#E5E5E5"> to this composable</font>

879
00:45:18,730 --> 00:45:23,600
installation part and<font color="#CCCCCC"> I really</font>

880
00:45:20,270 --> 00:45:24,860
<font color="#CCCCCC">over this</font><font color="#E5E5E5"> too fast</font><font color="#CCCCCC"> because I didn't know</font>

881
00:45:23,600 --> 00:45:30,560
<font color="#CCCCCC">if I wanted to</font><font color="#E5E5E5"> spend</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> huge chunk of</font>

882
00:45:24,860 --> 00:45:33,710
time on it in<font color="#E5E5E5"> this talk but distros have</font>

883
00:45:30,560 --> 00:45:36,440
a tendency<font color="#CCCCCC"> to be vulcanizing just by</font>

884
00:45:33,710 --> 00:45:38,180
their<font color="#CCCCCC"> very nature</font><font color="#E5E5E5"> if you take any</font><font color="#CCCCCC"> to</font>

885
00:45:36,440 --> 00:45:42,260
<font color="#CCCCCC">distros in the world they might</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> have</font>

886
00:45:38,180 --> 00:45:44,419
intended to<font color="#CCCCCC"> come up with such a very</font>

887
00:45:42,260 --> 00:45:47,570
different solutions<font color="#CCCCCC"> to things</font><font color="#E5E5E5"> but</font>

888
00:45:44,420 --> 00:45:50,750
inevitably they do<font color="#CCCCCC"> binaries on Debian</font>

889
00:45:47,570 --> 00:45:52,420
are not portable<font color="#CCCCCC"> to</font><font color="#E5E5E5"> boon to systems even</font>

890
00:45:50,750 --> 00:45:55,270
<font color="#CCCCCC">though those</font><font color="#E5E5E5"> are very close binaries on</font>

891
00:45:52,420 --> 00:45:58,010
Fedora are not portable<font color="#CCCCCC"> to sent us and</font>

892
00:45:55,270 --> 00:45:59,690
quite interestingly binaries on Nix are

893
00:45:58,010 --> 00:46:01,250
not portable<font color="#E5E5E5"> to geeks and vice-versa</font>

894
00:45:59,690 --> 00:46:05,690
<font color="#CCCCCC">even though the tooling</font><font color="#E5E5E5"> is almost</font>

895
00:46:01,250 --> 00:46:08,450
exactly<font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font><font color="#E5E5E5"> at the lower levels the</font>

896
00:46:05,690 --> 00:46:09,980
reason<font color="#E5E5E5"> for this is a whole bunch of</font>

897
00:46:08,450 --> 00:46:12,799
legacy tool chains and basically things

898
00:46:09,980 --> 00:46:16,700
from the<font color="#E5E5E5"> C ecosystem and the way we do</font>

899
00:46:12,800 --> 00:46:21,470
dynamic<font color="#E5E5E5"> linking everything links with</font>

900
00:46:16,700 --> 00:46:23,180
absolute paths the<font color="#CCCCCC"> nicks and</font><font color="#E5E5E5"> the geek</font>

901
00:46:21,470 --> 00:46:28,759
systems have this really cool approach

902
00:46:23,180 --> 00:46:31,310
<font color="#E5E5E5">of linking libraries in sort of content</font>

903
00:46:28,760 --> 00:46:34,490
<font color="#E5E5E5">addressable paths which actually gives</font>

904
00:46:31,310 --> 00:46:36,910
them what was this word<font color="#CCCCCC"> that I used a</font>

905
00:46:34,490 --> 00:46:36,910
million years ago

906
00:46:37,600 --> 00:46:41,630
<font color="#CCCCCC">Nixon geeks have Co installed the</font>

907
00:46:39,830 --> 00:46:46,100
libraries because<font color="#E5E5E5"> they use this sort of</font>

908
00:46:41,630 --> 00:46:47,360
<font color="#E5E5E5">content addressable path but it's sort</font>

909
00:46:46,100 --> 00:46:48,920
of<font color="#E5E5E5"> content addressable because it's</font>

910
00:46:47,360 --> 00:46:50,600
based on<font color="#E5E5E5"> the source hash and they just</font>

911
00:46:48,920 --> 00:46:52,010
<font color="#E5E5E5">assume that all builds are reproducible</font>

912
00:46:50,600 --> 00:46:56,319
<font color="#CCCCCC">and nothing can go wrong with this I</font>

913
00:46:52,010 --> 00:46:56,320
<font color="#CCCCCC">think it's a little</font><font color="#E5E5E5"> interesting and</font>

914
00:46:56,410 --> 00:47:00,049
<font color="#E5E5E5">despite having Co install the libraries</font>

915
00:46:58,640 --> 00:47:03,680
<font color="#E5E5E5">and neither of those systems came up</font>

916
00:47:00,050 --> 00:47:07,010
with path agnostic binaries you if you

917
00:47:03,680 --> 00:47:09,560
<font color="#E5E5E5">install Nix in slash Nix you're fine if</font>

918
00:47:07,010 --> 00:47:12,170
<font color="#E5E5E5">you want to install Nix in slash</font><font color="#CCCCCC"> home</font>

919
00:47:09,560 --> 00:47:15,020
slash my user slash Nix<font color="#E5E5E5"> you're going to</font>

920
00:47:12,170 --> 00:47:18,050
rebuild<font color="#E5E5E5"> everything or you're going to</font>

921
00:47:15,020 --> 00:47:21,890
<font color="#E5E5E5">use an</font><font color="#CCCCCC"> al F Patra which is like I'm just</font>

922
00:47:18,050 --> 00:47:22,970
<font color="#E5E5E5">gonna call that interesting again and I</font>

923
00:47:21,890 --> 00:47:24,620
<font color="#E5E5E5">think this is a problem that</font><font color="#CCCCCC"> is not</font>

924
00:47:22,970 --> 00:47:27,790
necessary to<font color="#CCCCCC"> have and I would love to</font>

925
00:47:24,620 --> 00:47:27,790
build<font color="#E5E5E5"> a system that doesn't have it</font>

926
00:47:28,670 --> 00:47:33,160
sorry that was a lot of<font color="#E5E5E5"> words</font>

927
00:47:30,049 --> 00:47:39,440
<font color="#E5E5E5">off-the-cuff I don't know</font><font color="#CCCCCC"> if thanks</font>

928
00:47:33,160 --> 00:47:41,990
so the path you said<font color="#E5E5E5"> explicit or full</font>

929
00:47:39,440 --> 00:47:45,140
path for the linking that's only the

930
00:47:41,990 --> 00:47:48,140
case<font color="#E5E5E5"> if I linked with our path right in</font>

931
00:47:45,140 --> 00:47:50,808
the C<font color="#E5E5E5"> compiler but I I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> know how</font>

932
00:47:48,140 --> 00:47:53,058
common<font color="#CCCCCC"> that is actually if that's if</font>

933
00:47:50,809 --> 00:48:01,460
it's the norm or<font color="#E5E5E5"> if it's I think it's</font>

934
00:47:53,059 --> 00:48:04,730
the norm<font color="#E5E5E5"> if you don't and getting it is</font>

935
00:48:01,460 --> 00:48:08,059
possible<font color="#CCCCCC"> to use our</font><font color="#E5E5E5"> path in such a way</font>

936
00:48:04,730 --> 00:48:10,519
that<font color="#E5E5E5"> you get path agnostic binaries but</font>

937
00:48:08,059 --> 00:48:12,769
it's quite fiddly<font color="#CCCCCC"> and I very rarely have</font>

938
00:48:10,519 --> 00:48:14,808
seen people do it<font color="#E5E5E5"> and I don't think it's</font>

939
00:48:12,769 --> 00:48:17,808
even<font color="#E5E5E5"> it's definitely not common in any</font>

940
00:48:14,809 --> 00:48:19,519
of the popular distros today<font color="#CCCCCC"> I so the</font>

941
00:48:17,809 --> 00:48:21,710
way I understand<font color="#E5E5E5"> our path it's actually</font>

942
00:48:19,519 --> 00:48:25,609
the opposite so that is so you have<font color="#E5E5E5"> to</font>

943
00:48:21,710 --> 00:48:27,980
sort of opt in to lock a binary<font color="#E5E5E5"> to a</font>

944
00:48:25,609 --> 00:48:30,319
specific library<font color="#E5E5E5"> I wish that that was</font>

945
00:48:27,980 --> 00:48:31,730
true<font color="#E5E5E5"> but run</font><font color="#CCCCCC"> ldd on anything</font><font color="#E5E5E5"> on your</font>

946
00:48:30,319 --> 00:48:35,509
system<font color="#E5E5E5"> and tell me if the past</font><font color="#CCCCCC"> start</font>

947
00:48:31,730 --> 00:48:38,680
<font color="#E5E5E5">with slash or not that those paths are</font>

948
00:48:35,509 --> 00:48:43,579
generated by<font color="#E5E5E5"> LD so according</font><font color="#CCCCCC"> to the</font>

949
00:48:38,680 --> 00:48:47,240
search path that is<font color="#E5E5E5"> configured for LD I</font>

950
00:48:43,579 --> 00:48:53,089
so assuming and and of<font color="#E5E5E5"> course taking</font>

951
00:48:47,240 --> 00:48:59,450
into account any<font color="#CCCCCC"> our path markers in the</font>

952
00:48:53,089 --> 00:49:01,339
libraries like recursively so to say<font color="#E5E5E5"> so</font>

953
00:48:59,450 --> 00:49:04,279
if a library<font color="#E5E5E5"> in the search path</font>

954
00:49:01,339 --> 00:49:06,049
references a specific full path library

955
00:49:04,279 --> 00:49:08,269
then yes that<font color="#CCCCCC"> will get pulled in</font><font color="#E5E5E5"> with a</font>

956
00:49:06,049 --> 00:49:11,049
full path but if none<font color="#CCCCCC"> of my shared</font>

957
00:49:08,269 --> 00:49:15,109
libraries or and none of<font color="#CCCCCC"> my binaries</font>

958
00:49:11,049 --> 00:49:16,940
have our path specified then it will

959
00:49:15,109 --> 00:49:22,180
just do whatever the runtime

960
00:49:16,940 --> 00:49:22,180
configuration says as far as<font color="#E5E5E5"> I know</font>

961
00:49:23,559 --> 00:49:33,980
that's<font color="#E5E5E5"> the evil though LTS all right</font>

962
00:49:27,549 --> 00:49:36,470
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> interesting but</font><font color="#E5E5E5"> that does</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> you</font>

963
00:49:33,980 --> 00:49:39,319
<font color="#E5E5E5">can compare</font><font color="#CCCCCC"> ldd output with read elf</font>

964
00:49:36,470 --> 00:49:41,299
<font color="#E5E5E5">output write and read elf will will say</font>

965
00:49:39,319 --> 00:49:44,090
the libraries that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> needed and</font>

966
00:49:41,300 --> 00:49:46,460
and sometimes with<font color="#E5E5E5"> path if it was</font>

967
00:49:44,090 --> 00:49:48,260
compiled and linked with<font color="#CCCCCC"> our</font><font color="#E5E5E5"> path but</font><font color="#CCCCCC"> I</font>

968
00:49:46,460 --> 00:49:51,110
think most of the time without<font color="#E5E5E5"> a full</font>

969
00:49:48,260 --> 00:49:54,080
path and then it the the dynamic loader

970
00:49:51,110 --> 00:49:57,260
is just searching through the system

971
00:49:54,080 --> 00:49:59,110
search<font color="#CCCCCC"> path to find those somewhere</font>

972
00:49:57,260 --> 00:50:03,710
<font color="#E5E5E5">anywhere and that's why I can also set</font>

973
00:49:59,110 --> 00:50:06,500
LD library path<font color="#CCCCCC"> to oh Sh a mess with or</font>

974
00:50:03,710 --> 00:50:13,100
<font color="#E5E5E5">like influence what gets loaded when and</font>

975
00:50:06,500 --> 00:50:16,700
from where you can definitely use LD

976
00:50:13,100 --> 00:50:23,420
library path that linker has many many

977
00:50:16,700 --> 00:50:30,169
features<font color="#E5E5E5"> what it can do and</font><font color="#CCCCCC"> what would</font>

978
00:50:23,420 --> 00:50:32,930
<font color="#E5E5E5">be wise to use gets fiddly fast</font><font color="#CCCCCC"> so well</font>

979
00:50:30,170 --> 00:50:34,970
I'm I'm I'm I guess I'm not disagreeing

980
00:50:32,930 --> 00:50:38,000
with you<font color="#E5E5E5"> in any way I'm just</font><font color="#CCCCCC"> saying the</font>

981
00:50:34,970 --> 00:50:41,270
the path<font color="#E5E5E5"> agnostic binaries to my</font>

982
00:50:38,000 --> 00:50:44,960
knowledge<font color="#E5E5E5"> is it seems to be more common</font>

983
00:50:41,270 --> 00:50:47,560
<font color="#E5E5E5">than than not and but there is no</font>

984
00:50:44,960 --> 00:50:51,020
<font color="#E5E5E5">standard and I think that's a good point</font>

985
00:50:47,560 --> 00:50:53,810
like it's it's worthwhile to<font color="#E5E5E5"> have a</font>

986
00:50:51,020 --> 00:50:55,910
standard on that<font color="#CCCCCC"> and like to clearly</font>

987
00:50:53,810 --> 00:50:58,970
<font color="#CCCCCC">specify</font><font color="#E5E5E5"> whether whether this is pat</font>

988
00:50:55,910 --> 00:51:01,399
agnostic or whether or not yeah useful

989
00:50:58,970 --> 00:51:05,600
<font color="#E5E5E5">right I guess my my main hope and goal</font>

990
00:51:01,400 --> 00:51:07,400
would be but<font color="#E5E5E5"> we should definitely talk a</font>

991
00:51:05,600 --> 00:51:09,350
lot<font color="#E5E5E5"> more after this</font><font color="#CCCCCC"> I would</font><font color="#E5E5E5"> love to come</font>

992
00:51:07,400 --> 00:51:13,370
up with like<font color="#E5E5E5"> linter scripts for what</font>

993
00:51:09,350 --> 00:51:17,049
this means<font color="#E5E5E5"> because it is easy to talk</font>

994
00:51:13,370 --> 00:51:20,330
about<font color="#E5E5E5"> and hard to prove in any direction</font>

995
00:51:17,050 --> 00:51:25,910
<font color="#CCCCCC">cool</font><font color="#E5E5E5"> thank you for these wonderful</font>

996
00:51:20,330 --> 00:51:28,310
questions so I actually<font color="#CCCCCC"> try to</font><font color="#E5E5E5"> check</font>

997
00:51:25,910 --> 00:51:32,029
this and like for example my<font color="#E5E5E5"> GCC the</font>

998
00:51:28,310 --> 00:51:36,080
<font color="#E5E5E5">only absolute path it has is the</font><font color="#CCCCCC"> LD</font>

999
00:51:32,030 --> 00:51:39,650
Linux<font color="#E5E5E5"> so but like everything else seems</font>

1000
00:51:36,080 --> 00:51:44,390
<font color="#CCCCCC">to be no our path so</font><font color="#E5E5E5"> you just need</font><font color="#CCCCCC"> to</font>

1001
00:51:39,650 --> 00:51:46,160
use<font color="#CCCCCC"> to enter</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> all</font><font color="#E5E5E5"> right yeah okay I</font>

1002
00:51:44,390 --> 00:51:48,440
should spend more<font color="#E5E5E5"> time on</font><font color="#CCCCCC"> Jen</font><font color="#E5E5E5"> to maybe</font>

1003
00:51:46,160 --> 00:51:51,319
try and like and it seems<font color="#E5E5E5"> really that</font>

1004
00:51:48,440 --> 00:51:53,660
he's right that most binaries<font color="#E5E5E5"> don't have</font>

1005
00:51:51,320 --> 00:51:59,660
any reference to lose all the

1006
00:51:53,660 --> 00:52:02,960
or anything in some<font color="#E5E5E5"> cases even if you</font>

1007
00:51:59,660 --> 00:52:04,220
have relative paths than like<font color="#E5E5E5"> what</font>

1008
00:52:02,960 --> 00:52:08,329
<font color="#CCCCCC">exactly to do with them is an</font>

1009
00:52:04,220 --> 00:52:10,069
interesting<font color="#E5E5E5"> question</font><font color="#CCCCCC"> like I don't</font><font color="#E5E5E5"> know</font>

1010
00:52:08,329 --> 00:52:11,960
the name in<font color="#E5E5E5"> Debian but there's some sort</font>

1011
00:52:10,069 --> 00:52:14,029
<font color="#E5E5E5">of like a life cycle</font><font color="#CCCCCC"> event</font><font color="#E5E5E5"> in the distro</font>

1012
00:52:11,960 --> 00:52:16,000
where we're<font color="#CCCCCC"> doing a sufficiently large</font>

1013
00:52:14,030 --> 00:52:18,380
change to some library version<font color="#E5E5E5"> where</font>

1014
00:52:16,000 --> 00:52:20,539
we're going to bump<font color="#E5E5E5"> the number on the</font>

1015
00:52:18,380 --> 00:52:23,990
end<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> dot so path and this can</font>

1016
00:52:20,539 --> 00:52:26,390
create<font color="#E5E5E5"> like a large amount</font><font color="#CCCCCC"> of discussion</font>

1017
00:52:23,990 --> 00:52:29,808
<font color="#E5E5E5">because it's going to</font><font color="#CCCCCC"> propagate</font><font color="#E5E5E5"> a change</font>

1018
00:52:26,390 --> 00:52:31,848
<font color="#E5E5E5">or break things or it requires a lot</font><font color="#CCCCCC"> of</font>

1019
00:52:29,809 --> 00:52:35,630
<font color="#E5E5E5">people to set up and take notice and I</font>

1020
00:52:31,849 --> 00:52:38,450
think that is semantically very very

1021
00:52:35,630 --> 00:52:40,430
different<font color="#CCCCCC"> than</font><font color="#E5E5E5"> what we see in Nixon</font>

1022
00:52:38,450 --> 00:52:41,779
geeks for example where this is<font color="#E5E5E5"> just a</font>

1023
00:52:40,430 --> 00:52:43,460
<font color="#E5E5E5">non-event for them because they have</font>

1024
00:52:41,780 --> 00:52:46,069
this pseudo content-addressable linking

1025
00:52:43,460 --> 00:52:48,500
and I like the latter<font color="#E5E5E5"> end of that</font>

1026
00:52:46,069 --> 00:52:51,230
spectrum<font color="#CCCCCC"> a lot more personally this can</font>

1027
00:52:48,500 --> 00:53:00,260
get into even<font color="#CCCCCC"> more</font><font color="#E5E5E5"> interesting</font>

1028
00:52:51,230 --> 00:53:04,279
discussions yeah<font color="#CCCCCC"> can</font><font color="#E5E5E5"> I declare it last</font>

1029
00:53:00,260 --> 00:53:05,890
one<font color="#E5E5E5"> my throat's getting awfully dry yeah</font>

1030
00:53:04,279 --> 00:53:08,539
I<font color="#CCCCCC"> I was just wondering about the</font>

1031
00:53:05,890 --> 00:53:11,270
content-addressable<font color="#E5E5E5"> part of this where</font>

1032
00:53:08,539 --> 00:53:16,700
<font color="#E5E5E5">where repeater is finding its inputs</font>

1033
00:53:11,270 --> 00:53:17,900
that are specified<font color="#CCCCCC"> by hash and</font><font color="#E5E5E5"> also if</font>

1034
00:53:16,700 --> 00:53:20,149
you have<font color="#E5E5E5"> looked at like other</font>

1035
00:53:17,900 --> 00:53:22,160
<font color="#CCCCCC">content-addressable systems like kamle</font>

1036
00:53:20,150 --> 00:53:24,230
store and ipfs which have both made what

1037
00:53:22,160 --> 00:53:25,578
<font color="#CCCCCC">i think is a good choice of supporting</font>

1038
00:53:24,230 --> 00:53:28,730
different<font color="#E5E5E5"> hash functions and having that</font>

1039
00:53:25,579 --> 00:53:33,380
<font color="#CCCCCC">be part of the address</font><font color="#E5E5E5"> the name of the</font>

1040
00:53:28,730 --> 00:53:38,480
hash<font color="#E5E5E5"> function yes so let's see which</font><font color="#CCCCCC"> is</font>

1041
00:53:33,380 --> 00:53:41,720
<font color="#E5E5E5">the most interesting</font><font color="#CCCCCC"> screen so these</font>

1042
00:53:38,480 --> 00:53:45,619
hashes are of some format which<font color="#CCCCCC"> is known</font>

1043
00:53:41,720 --> 00:53:46,879
to<font color="#E5E5E5"> repeater the most important part in</font>

1044
00:53:45,619 --> 00:53:48,349
my opinion of the way the system is

1045
00:53:46,880 --> 00:53:50,750
<font color="#E5E5E5">implemented right now is that there is a</font>

1046
00:53:48,349 --> 00:53:54,650
<font color="#CCCCCC">plug-in structure there</font><font color="#E5E5E5"> so this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> some</font>

1047
00:53:50,750 --> 00:53:58,520
simple deterministic way of hashing<font color="#E5E5E5"> tar</font>

1048
00:53:54,650 --> 00:54:01,460
contents and earlier I<font color="#E5E5E5"> showed like gets</font>

1049
00:53:58,520 --> 00:54:04,069
<font color="#CCCCCC">his a</font><font color="#E5E5E5"> plug-in as well</font><font color="#CCCCCC"> I would love</font><font color="#E5E5E5"> to</font>

1050
00:54:01,460 --> 00:54:05,260
support<font color="#E5E5E5"> tons of more systems as long as</font>

1051
00:54:04,069 --> 00:54:06,790
<font color="#E5E5E5">something is a hash</font>

1052
00:54:05,260 --> 00:54:09,490
I'm perfectly happy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> put it in the</font>

1053
00:54:06,790 --> 00:54:12,970
<font color="#E5E5E5">middle of a formula and then I hash the</font>

1054
00:54:09,490 --> 00:54:14,470
formula<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> still a Merkel tree and</font>

1055
00:54:12,970 --> 00:54:16,600
as long<font color="#E5E5E5"> as I have a Merkel tree in my</font>

1056
00:54:14,470 --> 00:54:20,410
formula<font color="#CCCCCC"> I'm super</font><font color="#E5E5E5"> happy</font><font color="#CCCCCC"> I can work</font><font color="#E5E5E5"> with</font>

1057
00:54:16,600 --> 00:54:21,850
that IP FS is like not a deeply natively

1058
00:54:20,410 --> 00:54:25,779
supported thing right now<font color="#E5E5E5"> but you could</font>

1059
00:54:21,850 --> 00:54:28,060
actually use an IP FS<font color="#E5E5E5"> mutable directory</font>

1060
00:54:25,780 --> 00:54:29,530
<font color="#E5E5E5">and like drop the tar</font><font color="#CCCCCC"> Transport</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> a</font>

1061
00:54:28,060 --> 00:54:32,790
local path inside<font color="#E5E5E5"> of it and it would</font>

1062
00:54:29,530 --> 00:54:32,790
<font color="#CCCCCC">work sometimes I do this</font>

1063
00:54:34,740 --> 00:54:40,629
the ipfs thing in<font color="#CCCCCC"> particular could use a</font>

1064
00:54:37,300 --> 00:54:42,280
few improvements<font color="#E5E5E5"> to the the UNIX FS</font>

1065
00:54:40,630 --> 00:54:44,410
<font color="#E5E5E5">filesystem spec</font><font color="#CCCCCC"> because right now it is</font>

1066
00:54:42,280 --> 00:54:49,530
not maintaining<font color="#E5E5E5"> things like</font><font color="#CCCCCC"> M time for</font>

1067
00:54:44,410 --> 00:54:49,529
<font color="#E5E5E5">example and that's I would like it to</font>

1068
00:54:50,970 --> 00:54:54,160
feel<font color="#E5E5E5"> like there was a second half of</font>

1069
00:54:52,870 --> 00:55:00,580
that<font color="#CCCCCC"> question than I've forgotten</font><font color="#E5E5E5"> that</font>

1070
00:54:54,160 --> 00:55:01,240
closet where the input from right<font color="#E5E5E5"> good</font>

1071
00:55:00,580 --> 00:55:03,460
good question

1072
00:55:01,240 --> 00:55:06,220
so even<font color="#E5E5E5"> in a</font><font color="#CCCCCC"> content-addressable system</font>

1073
00:55:03,460 --> 00:55:09,310
<font color="#CCCCCC">I still need like some general idea of</font>

1074
00:55:06,220 --> 00:55:12,399
where in<font color="#E5E5E5"> the universe</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> look the hash</font>

1075
00:55:09,310 --> 00:55:14,259
is for identity but that like I can't

1076
00:55:12,400 --> 00:55:19,510
<font color="#CCCCCC">just scream into the</font><font color="#E5E5E5"> void somebody give</font>

1077
00:55:14,260 --> 00:55:22,300
me<font color="#E5E5E5"> 6</font><font color="#CCCCCC"> Q 7 G you know so</font><font color="#E5E5E5"> in this document</font>

1078
00:55:19,510 --> 00:55:25,300
there's actually<font color="#E5E5E5"> two</font><font color="#CCCCCC"> halves this top</font>

1079
00:55:22,300 --> 00:55:27,330
half<font color="#CCCCCC"> that you feed</font><font color="#E5E5E5"> to repeater is the</font>

1080
00:55:25,300 --> 00:55:32,140
part that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> intended to be hashed and</font>

1081
00:55:27,330 --> 00:55:36,850
this bottom<font color="#E5E5E5"> half is not this is full of</font>

1082
00:55:32,140 --> 00:55:38,470
URLs and extra context<font color="#CCCCCC"> information</font><font color="#E5E5E5"> so in</font>

1083
00:55:36,850 --> 00:55:40,690
this case I told<font color="#E5E5E5"> you just use a local</font>

1084
00:55:38,470 --> 00:55:42,730
test file because this is one of<font color="#E5E5E5"> my</font>

1085
00:55:40,690 --> 00:55:46,570
fixtures in<font color="#CCCCCC"> the CI so I don't have it</font>

1086
00:55:42,730 --> 00:55:50,860
network at all<font color="#E5E5E5"> right if you jump</font><font color="#CCCCCC"> into</font>

1087
00:55:46,570 --> 00:55:57,310
<font color="#E5E5E5">using the</font><font color="#CCCCCC"> higher-level</font><font color="#E5E5E5"> systems</font><font color="#CCCCCC"> where is</font>

1088
00:55:50,860 --> 00:55:58,990
my best demo for right if you want to

1089
00:55:57,310 --> 00:56:01,000
<font color="#E5E5E5">use this stellar tool that does the</font>

1090
00:55:58,990 --> 00:56:05,709
modules and<font color="#CCCCCC"> the</font><font color="#E5E5E5"> whole catalog release</font>

1091
00:56:01,000 --> 00:56:10,450
system then<font color="#E5E5E5"> that gives us room</font><font color="#CCCCCC"> to put</font>

1092
00:56:05,710 --> 00:56:13,570
more information<font color="#CCCCCC"> alongside so like with</font>

1093
00:56:10,450 --> 00:56:15,660
this busy<font color="#E5E5E5"> bash thing there's a hash of</font>

1094
00:56:13,570 --> 00:56:17,370
the thing and

1095
00:56:15,660 --> 00:56:22,230
here's a list<font color="#CCCCCC"> of places where you</font><font color="#E5E5E5"> can</font>

1096
00:56:17,370 --> 00:56:24,150
get it in this case it is<font color="#E5E5E5"> some this</font>

1097
00:56:22,230 --> 00:56:26,310
prefix means<font color="#CCCCCC"> running content-addressable</font>

1098
00:56:24,150 --> 00:56:28,550
<font color="#E5E5E5">mode so like</font><font color="#CCCCCC"> mangle the</font><font color="#E5E5E5"> hash</font><font color="#CCCCCC"> and put it</font>

1099
00:56:26,310 --> 00:56:31,650
on the end<font color="#E5E5E5"> of this URL and then go there</font>

1100
00:56:28,550 --> 00:56:36,180
and it applies for everything of<font color="#CCCCCC"> pac</font>

1101
00:56:31,650 --> 00:56:41,760
typed are in this whole module some

1102
00:56:36,180 --> 00:56:43,620
other systems<font color="#E5E5E5"> do I have right so another</font>

1103
00:56:41,760 --> 00:56:46,170
<font color="#E5E5E5">thing that I have a release on hand here</font>

1104
00:56:43,620 --> 00:56:48,330
is<font color="#CCCCCC"> the go compiler</font><font color="#E5E5E5"> because I use that a</font>

1105
00:56:46,170 --> 00:56:49,860
<font color="#E5E5E5">lot this whole thing is built in go and</font>

1106
00:56:48,330 --> 00:56:54,060
<font color="#E5E5E5">the go compiler is deterministic by the</font>

1107
00:56:49,860 --> 00:56:56,160
way it's really<font color="#E5E5E5"> nice so in this case I</font>

1108
00:56:54,060 --> 00:56:59,640
actually have it pointed<font color="#E5E5E5"> at all of the</font>

1109
00:56:56,160 --> 00:57:01,620
upstream<font color="#E5E5E5"> URLs of the go releases so in</font>

1110
00:56:59,640 --> 00:57:03,029
this case<font color="#CCCCCC"> I can't use the content</font>

1111
00:57:01,620 --> 00:57:05,339
addressable mode because that's not<font color="#E5E5E5"> how</font>

1112
00:57:03,030 --> 00:57:11,700
the other people organized it but I can

1113
00:57:05,340 --> 00:57:13,680
index things by the full hash so yes

1114
00:57:11,700 --> 00:57:17,029
<font color="#E5E5E5">that information about where to go get</font>

1115
00:57:13,680 --> 00:57:19,470
the<font color="#CCCCCC"> thing has</font><font color="#E5E5E5"> to come from somewhere</font>

1116
00:57:17,030 --> 00:57:21,510
architecting the system very carefully

1117
00:57:19,470 --> 00:57:23,069
so that that ends<font color="#E5E5E5"> up on the side rather</font>

1118
00:57:21,510 --> 00:57:25,680
<font color="#E5E5E5">than</font><font color="#CCCCCC"> anything that ends</font><font color="#E5E5E5"> up</font><font color="#CCCCCC"> in a</font><font color="#E5E5E5"> Merkel</font>

1119
00:57:23,070 --> 00:57:27,600
tree that is like the definition<font color="#E5E5E5"> of</font>

1120
00:57:25,680 --> 00:57:30,029
what's going<font color="#E5E5E5"> on it's sort of like a very</font>

1121
00:57:27,600 --> 00:57:32,540
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> API design thing but very</font>

1122
00:57:30,030 --> 00:57:32,540
<font color="#E5E5E5">important</font>

1123
00:57:36,550 --> 00:57:43,120
<font color="#CCCCCC">alright ok no</font><font color="#E5E5E5"> more and then thank you</font>

1124
00:57:41,110 --> 00:57:44,980
<font color="#CCCCCC">again and I am sure we will have</font><font color="#E5E5E5"> some</font>

1125
00:57:43,120 --> 00:57:47,290
<font color="#E5E5E5">interesting discussions afterwards with</font>

1126
00:57:44,980 --> 00:57:49,240
you yes<font color="#E5E5E5"> thank you so much everyone who</font>

1127
00:57:47,290 --> 00:57:53,460
jumped in<font color="#CCCCCC"> it's so excited</font>

1128
00:57:49,240 --> 00:57:53,459
[Applause]

