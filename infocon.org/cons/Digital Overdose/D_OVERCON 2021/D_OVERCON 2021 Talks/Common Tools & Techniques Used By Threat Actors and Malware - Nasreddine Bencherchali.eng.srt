1
00:00:05,600 --> 00:00:07,440
and welcome back everybody

2
00:00:07,440 --> 00:00:10,480
um here we have with us nazardeen

3
00:00:10,480 --> 00:00:14,960
venture charlie uh take it away

4
00:00:14,960 --> 00:00:18,160
all right thank you so much first of all

5
00:00:18,160 --> 00:00:19,680
i wanted to thank the organizers for

6
00:00:19,680 --> 00:00:21,520
giving me this opportunity to speak with

7
00:00:21,520 --> 00:00:22,640
you today

8
00:00:22,640 --> 00:00:24,800
today's topic will be common tools and

9
00:00:24,800 --> 00:00:26,720
techniques used by threat actors

10
00:00:26,720 --> 00:00:30,320
and malwa as stated by uh

11
00:00:30,320 --> 00:00:32,640
nicos my name is mr di michel charlie a

12
00:00:32,640 --> 00:00:34,239
little bit about me

13
00:00:34,239 --> 00:00:36,800
well i am a windows internals enthusiast

14
00:00:36,800 --> 00:00:37,360
uh

15
00:00:37,360 --> 00:00:38,800
i really love threat hunting and

16
00:00:38,800 --> 00:00:40,480
detection engineering as you

17
00:00:40,480 --> 00:00:43,040
as i hope you will see in this talk uh i

18
00:00:43,040 --> 00:00:44,000
write an infosec

19
00:00:44,000 --> 00:00:47,360
blog at medium where i talk about

20
00:00:47,360 --> 00:00:49,120
everything related to malware and threat

21
00:00:49,120 --> 00:00:50,000
hunting

22
00:00:50,000 --> 00:00:52,320
on my day job i am a security engineer

23
00:00:52,320 --> 00:00:53,920
at a company called elite here in

24
00:00:53,920 --> 00:00:55,199
algeria

25
00:00:55,199 --> 00:00:57,039
and you can follow me on twitter at

26
00:00:57,039 --> 00:00:58,719
nasspunch

27
00:00:58,719 --> 00:01:01,600
so the agenda for today will be as

28
00:01:01,600 --> 00:01:02,239
follows

29
00:01:02,239 --> 00:01:04,799
i'll first start by talking about the

30
00:01:04,799 --> 00:01:07,280
motivation behind this talk

31
00:01:07,280 --> 00:01:10,320
then i'll dive directly into the tools

32
00:01:10,320 --> 00:01:12,080
and techniques in question

33
00:01:12,080 --> 00:01:13,840
then i'll talk briefly about some

34
00:01:13,840 --> 00:01:15,680
detection opportunities and i'll finish

35
00:01:15,680 --> 00:01:16,799
by some resources

36
00:01:16,799 --> 00:01:18,400
rushing you should check out for further

37
00:01:18,400 --> 00:01:20,320
reading

38
00:01:20,320 --> 00:01:23,200
so not so many months ago as i believe

39
00:01:23,200 --> 00:01:24,640
everyone is familiar

40
00:01:24,640 --> 00:01:26,799
we were introduced to the solar wind

41
00:01:26,799 --> 00:01:28,000
hack

42
00:01:28,000 --> 00:01:30,240
it was such a big hack that it shook the

43
00:01:30,240 --> 00:01:32,720
community

44
00:01:32,720 --> 00:01:36,479
from its base well in this hack

45
00:01:36,479 --> 00:01:38,560
almost everyone got rich when i say

46
00:01:38,560 --> 00:01:40,000
everyone i really do mean it

47
00:01:40,000 --> 00:01:42,320
we have companies such as fire eye

48
00:01:42,320 --> 00:01:44,320
microsoft and cisco

49
00:01:44,320 --> 00:01:46,960
and even us departments such as the

50
00:01:46,960 --> 00:01:48,320
department of defense

51
00:01:48,320 --> 00:01:51,360
and the department of homeland security

52
00:01:51,360 --> 00:01:53,680
seeing this one might assume that this

53
00:01:53,680 --> 00:01:56,399
breach is highly sophisticated

54
00:01:56,399 --> 00:01:59,920
and indeed it was uh reading the many

55
00:01:59,920 --> 00:02:01,040
blog posts out there

56
00:02:01,040 --> 00:02:04,320
describing this attack we have seen that

57
00:02:04,320 --> 00:02:05,840
the attackers have used

58
00:02:05,840 --> 00:02:07,360
some highly sophisticated techniques

59
00:02:07,360 --> 00:02:08,959
such as a unique

60
00:02:08,959 --> 00:02:11,760
domain generation algorithm some highly

61
00:02:11,760 --> 00:02:13,760
sophisticated architecture

62
00:02:13,760 --> 00:02:15,920
and of course they even used some

63
00:02:15,920 --> 00:02:19,519
steganography in their web shells

64
00:02:20,239 --> 00:02:22,560
well one blog post in particular caught

65
00:02:22,560 --> 00:02:23,440
my interest

66
00:02:23,440 --> 00:02:25,599
by crowdstrike titled sunspot and

67
00:02:25,599 --> 00:02:28,560
implant in the build process

68
00:02:28,560 --> 00:02:30,400
in the technical analysis paragraph it

69
00:02:30,400 --> 00:02:31,840
treats something like this stellar

70
00:02:31,840 --> 00:02:32,640
particle

71
00:02:32,640 --> 00:02:34,879
the guys behind this attack maintain the

72
00:02:34,879 --> 00:02:37,040
persistence of sunspot by creating a

73
00:02:37,040 --> 00:02:38,080
scheduled task

74
00:02:38,080 --> 00:02:42,239
set to execute when the host boots

75
00:02:42,239 --> 00:02:44,480
well when i was reading this i really

76
00:02:44,480 --> 00:02:46,560
was i really was intrigued by this

77
00:02:46,560 --> 00:02:49,760
scheduled task for everyone not familiar

78
00:02:49,760 --> 00:02:51,360
with this scheduled task is this very

79
00:02:51,360 --> 00:02:53,360
little thing that is available in every

80
00:02:53,360 --> 00:02:54,720
windows

81
00:02:54,720 --> 00:02:57,840
that comes pre-installed it lets

82
00:02:57,840 --> 00:03:00,640
administrators and users well to

83
00:03:00,640 --> 00:03:02,800
schedule their tasks

84
00:03:02,800 --> 00:03:05,200
and seeing such a highly sophisticated

85
00:03:05,200 --> 00:03:05,840
attack

86
00:03:05,840 --> 00:03:08,879
using such a simple tool made me think

87
00:03:08,879 --> 00:03:10,560
and made me question something what are

88
00:03:10,560 --> 00:03:12,480
the tools that are being used by these

89
00:03:12,480 --> 00:03:14,400
attackers

90
00:03:14,400 --> 00:03:17,760
for that i set up on a journey

91
00:03:17,760 --> 00:03:20,319
well i researched and read more than 51

92
00:03:20,319 --> 00:03:21,599
reports of the last year

93
00:03:21,599 --> 00:03:24,959
from different sources such as fire eye

94
00:03:24,959 --> 00:03:28,239
red canary the differ report and i've

95
00:03:28,239 --> 00:03:29,680
looked at some

96
00:03:29,680 --> 00:03:32,319
sandboxes analysis from hybrid analysis

97
00:03:32,319 --> 00:03:34,080
try edge and hatching dot io

98
00:03:34,080 --> 00:03:37,680
and this presentation will be

99
00:03:37,680 --> 00:03:41,120
the results of my findings so

100
00:03:41,120 --> 00:03:42,799
when we talk about tools and techniques

101
00:03:42,799 --> 00:03:44,400
that the attacker use

102
00:03:44,400 --> 00:03:47,599
we can split them into two categories

103
00:03:47,599 --> 00:03:50,080
the first one we have tools such as

104
00:03:50,080 --> 00:03:51,360
cobalt strike

105
00:03:51,360 --> 00:03:55,360
bloodhound empire mimikat ps exact

106
00:03:55,360 --> 00:03:58,239
but on the other hand we have tools such

107
00:03:58,239 --> 00:03:59,439
as search util

108
00:03:59,439 --> 00:04:03,040
result xc powershell run dll etc

109
00:04:03,040 --> 00:04:05,200
and we when we make this distinction we

110
00:04:05,200 --> 00:04:06,080
can make

111
00:04:06,080 --> 00:04:09,439
make it as so on the left hand side we

112
00:04:09,439 --> 00:04:10,959
have open source custom or commercial

113
00:04:10,959 --> 00:04:12,720
tools that the attacker are using

114
00:04:12,720 --> 00:04:14,560
on the other hand we have windows

115
00:04:14,560 --> 00:04:16,639
utilities or load bins living of the

116
00:04:16,639 --> 00:04:19,120
land binaries

117
00:04:19,120 --> 00:04:22,000
so before we step into wild bins for

118
00:04:22,000 --> 00:04:23,440
everyone not familiar with load bins

119
00:04:23,440 --> 00:04:25,440
load bins are

120
00:04:25,440 --> 00:04:26,800
everything that is that comes

121
00:04:26,800 --> 00:04:28,560
pre-installed that can be used by

122
00:04:28,560 --> 00:04:30,000
attackers

123
00:04:30,000 --> 00:04:33,520
in a malicious way so while opens why

124
00:04:33,520 --> 00:04:35,360
attackers are focusing on this

125
00:04:35,360 --> 00:04:37,199
well first of all they are already there

126
00:04:37,199 --> 00:04:39,280
no download required

127
00:04:39,280 --> 00:04:41,520
so let's say for example an attacker

128
00:04:41,520 --> 00:04:42,960
gets foothold into your

129
00:04:42,960 --> 00:04:47,680
network it doesn't have to download or

130
00:04:47,680 --> 00:04:50,400
install any tools that there are so many

131
00:04:50,400 --> 00:04:51,280
tools available

132
00:04:51,280 --> 00:04:54,479
out there already the second thing that

133
00:04:54,479 --> 00:04:55,360
is most important

134
00:04:55,360 --> 00:04:58,080
is they lets you blend in what what do i

135
00:04:58,080 --> 00:04:59,919
mean by that well

136
00:04:59,919 --> 00:05:01,680
let's say an analyst is looking at its

137
00:05:01,680 --> 00:05:03,520
log and it's seeing mimikatz been

138
00:05:03,520 --> 00:05:05,360
executing it for sure will raise

139
00:05:05,360 --> 00:05:06,479
awareness

140
00:05:06,479 --> 00:05:08,880
but let's say that c is run dll or

141
00:05:08,880 --> 00:05:10,800
powershell being executed it is the same

142
00:05:10,800 --> 00:05:11,919
utility

143
00:05:11,919 --> 00:05:14,960
that their administrator is using so it

144
00:05:14,960 --> 00:05:17,199
will let him blend in

145
00:05:17,199 --> 00:05:19,520
the third thing is the bypass of

146
00:05:19,520 --> 00:05:21,199
application control

147
00:05:21,199 --> 00:05:24,479
in in most organization uh they

148
00:05:24,479 --> 00:05:26,320
they think implementing application

149
00:05:26,320 --> 00:05:28,560
control by allowing a white list of

150
00:05:28,560 --> 00:05:31,840
tools can be run on a particular system

151
00:05:31,840 --> 00:05:34,160
so for example an administrator will

152
00:05:34,160 --> 00:05:35,600
only allow powershell or some

153
00:05:35,600 --> 00:05:36,960
development which will be run

154
00:05:36,960 --> 00:05:39,520
so if an attacker will bring mimi cats

155
00:05:39,520 --> 00:05:40,240
it will not

156
00:05:40,240 --> 00:05:43,039
be run by default but since the

157
00:05:43,039 --> 00:05:44,560
utilities we're talking about are

158
00:05:44,560 --> 00:05:45,600
already there

159
00:05:45,600 --> 00:05:50,080
they can already bypass this whitelist

160
00:05:50,080 --> 00:05:53,039
and the final thing is they offer

161
00:05:53,039 --> 00:05:54,479
powerful capabilities

162
00:05:54,479 --> 00:05:56,240
as we're about to see these powerful

163
00:05:56,240 --> 00:05:57,520
capabilities range from

164
00:05:57,520 --> 00:06:00,960
dumping lsas to downloading any

165
00:06:00,960 --> 00:06:02,880
executable

166
00:06:02,880 --> 00:06:06,800
on the machine and so many more

167
00:06:06,800 --> 00:06:08,720
now before we jump into the tools and

168
00:06:08,720 --> 00:06:10,240
techniques in question

169
00:06:10,240 --> 00:06:11,919
let me introduce some key terms and

170
00:06:11,919 --> 00:06:13,280
concepts the first one

171
00:06:13,280 --> 00:06:15,440
is the miter attack framework from their

172
00:06:15,440 --> 00:06:16,319
website

173
00:06:16,319 --> 00:06:19,280
the definition reads as so the mitre

174
00:06:19,280 --> 00:06:21,360
attack is a globally accessible

175
00:06:21,360 --> 00:06:23,360
knowledge base of adversary tactics and

176
00:06:23,360 --> 00:06:24,880
techniques based on real world

177
00:06:24,880 --> 00:06:27,600
observations

178
00:06:27,680 --> 00:06:30,800
in practice what does it really mean

179
00:06:30,800 --> 00:06:33,600
so basically when we go to the website

180
00:06:33,600 --> 00:06:35,759
of mitre attack we are introduced

181
00:06:35,759 --> 00:06:38,479
with a table like this describing a

182
00:06:38,479 --> 00:06:39,600
bunch of tactics

183
00:06:39,600 --> 00:06:41,600
that the attackers are using so what are

184
00:06:41,600 --> 00:06:44,800
tactics in practice tactics are just

185
00:06:44,800 --> 00:06:47,360
the ideas or the steps taken by

186
00:06:47,360 --> 00:06:49,039
attackers during an attack

187
00:06:49,039 --> 00:06:50,880
so we have for example reconnaissance

188
00:06:50,880 --> 00:06:54,160
resource development initial access etc

189
00:06:54,160 --> 00:06:57,039
if we take the reconnaissance example

190
00:06:57,039 --> 00:06:59,120
and we click on it on the website

191
00:06:59,120 --> 00:07:02,160
we get an id and when it was created but

192
00:07:02,160 --> 00:07:03,919
what is interesting is we get the

193
00:07:03,919 --> 00:07:05,840
techniques related to this tactic

194
00:07:05,840 --> 00:07:07,919
so for each technique is this it

195
00:07:07,919 --> 00:07:09,280
describes

196
00:07:09,280 --> 00:07:11,199
a method that the attacker can use to

197
00:07:11,199 --> 00:07:13,680
gain some information on the network

198
00:07:13,680 --> 00:07:17,039
so for example we have active scanning

199
00:07:17,039 --> 00:07:18,800
and inside that active scanning

200
00:07:18,800 --> 00:07:20,720
attackers can use vulnerability scanning

201
00:07:20,720 --> 00:07:22,000
for example

202
00:07:22,000 --> 00:07:24,479
to get information about the computers

203
00:07:24,479 --> 00:07:26,880
and if they are vulnerable to any cves

204
00:07:26,880 --> 00:07:30,319
or the like now

205
00:07:30,319 --> 00:07:31,840
what are the loadings that are being

206
00:07:31,840 --> 00:07:34,319
used we'll go gradually

207
00:07:34,319 --> 00:07:38,800
so the first one is the who am i utility

208
00:07:38,800 --> 00:07:40,960
by its definition it displays user

209
00:07:40,960 --> 00:07:42,160
groups and privileges

210
00:07:42,160 --> 00:07:43,680
information for the user who is

211
00:07:43,680 --> 00:07:46,560
currently logged on to the local system

212
00:07:46,560 --> 00:07:49,199
so basically this utility offers the

213
00:07:49,199 --> 00:07:50,240
following flag

214
00:07:50,240 --> 00:07:52,160
as you can see here there are a couple

215
00:07:52,160 --> 00:07:54,240
of flags such as slash all slash groups

216
00:07:54,240 --> 00:07:55,319
slash briefs and they are

217
00:07:55,319 --> 00:07:56,639
self-explanatory

218
00:07:56,639 --> 00:07:58,560
for example the slash groups will

219
00:07:58,560 --> 00:07:59,919
provide the groups that a

220
00:07:59,919 --> 00:08:03,599
particular user belongs to

221
00:08:03,599 --> 00:08:05,680
well since this utility is already

222
00:08:05,680 --> 00:08:08,000
available attackers are using it

223
00:08:08,000 --> 00:08:11,599
as we can see in this different report

224
00:08:11,599 --> 00:08:13,759
attackers are using it exactly the same

225
00:08:13,759 --> 00:08:15,680
way as a simple administrator

226
00:08:15,680 --> 00:08:18,160
so for example in this report we have

227
00:08:18,160 --> 00:08:19,680
attackers using

228
00:08:19,680 --> 00:08:22,800
all together all the information on a

229
00:08:22,800 --> 00:08:23,759
particular user

230
00:08:23,759 --> 00:08:26,080
and from that information they can move

231
00:08:26,080 --> 00:08:27,599
laterally and determine if they need

232
00:08:27,599 --> 00:08:28,479
more privileges

233
00:08:28,479 --> 00:08:30,319
or if there are something in interest in

234
00:08:30,319 --> 00:08:32,879
other groups

235
00:08:33,039 --> 00:08:36,240
using mitre we can map this attack

236
00:08:36,240 --> 00:08:39,200
to particular techniques so for example

237
00:08:39,200 --> 00:08:40,320
the following

238
00:08:40,320 --> 00:08:42,240
utility maps to the following techniques

239
00:08:42,240 --> 00:08:43,919
system owner user discovery

240
00:08:43,919 --> 00:08:47,680
and command and scripting interpreter

241
00:08:49,200 --> 00:08:52,640
next we have a another tool that is

242
00:08:52,640 --> 00:08:54,240
used to test location about domain

243
00:08:54,240 --> 00:08:56,480
controller called nl test or network

244
00:08:56,480 --> 00:08:57,920
location test

245
00:08:57,920 --> 00:08:59,839
it is the domain controllers it can

246
00:08:59,839 --> 00:09:02,000
force a remote shutdown query the status

247
00:09:02,000 --> 00:09:03,839
etc

248
00:09:03,839 --> 00:09:07,200
it has the the following flags uh

249
00:09:07,200 --> 00:09:09,279
for example anal test slash domain trust

250
00:09:09,279 --> 00:09:12,640
will give you the trust domain

251
00:09:13,040 --> 00:09:16,080
so once again let's take a look at how

252
00:09:16,080 --> 00:09:19,279
attackers are using this

253
00:09:19,760 --> 00:09:22,240
if you can follow closely here you'll

254
00:09:22,240 --> 00:09:22,880
see that

255
00:09:22,880 --> 00:09:25,920
it is the exact same way that an

256
00:09:25,920 --> 00:09:27,519
administrator would use this

257
00:09:27,519 --> 00:09:30,080
so it really is difficult to to make a

258
00:09:30,080 --> 00:09:32,080
distinction between legitimate use

259
00:09:32,080 --> 00:09:37,600
and malicious usage

260
00:09:37,600 --> 00:09:40,240
once again we can map this to the miter

261
00:09:40,240 --> 00:09:42,160
attack

262
00:09:42,160 --> 00:09:44,000
with the following techniques domain

263
00:09:44,000 --> 00:09:45,600
truss discovery and remote system

264
00:09:45,600 --> 00:09:47,920
discovery

265
00:09:47,920 --> 00:09:51,120
now we've seen a couple of tools such as

266
00:09:51,120 --> 00:09:52,480
who am i in nl test

267
00:09:52,480 --> 00:09:54,880
and those are very cool but they provide

268
00:09:54,880 --> 00:09:56,240
a static flag

269
00:09:56,240 --> 00:09:58,000
what do i mean by that they don't offer

270
00:09:58,000 --> 00:09:59,440
a dynamic way

271
00:09:59,440 --> 00:10:02,240
to modify something now the next tool

272
00:10:02,240 --> 00:10:03,200
that we're going to look at

273
00:10:03,200 --> 00:10:06,320
is reg.xd reg

274
00:10:06,320 --> 00:10:08,880
allows is a windows utility used to

275
00:10:08,880 --> 00:10:10,800
interact with the windows registry

276
00:10:10,800 --> 00:10:14,160
it can let us query add modify or remove

277
00:10:14,160 --> 00:10:18,399
information so if we see here we can use

278
00:10:18,399 --> 00:10:19,440
the following syntax

279
00:10:19,440 --> 00:10:22,480
reg.save to for example save the htklm

280
00:10:22,480 --> 00:10:23,279
security

281
00:10:23,279 --> 00:10:25,200
registry for a particular in a

282
00:10:25,200 --> 00:10:28,000
particular path

283
00:10:28,000 --> 00:10:30,240
now when it gets tricky is our attackers

284
00:10:30,240 --> 00:10:31,120
are using this

285
00:10:31,120 --> 00:10:35,279
in the wild well as we can see attackers

286
00:10:35,279 --> 00:10:36,320
use it

287
00:10:36,320 --> 00:10:38,800
the same way but provide a dynamic

288
00:10:38,800 --> 00:10:40,320
portion to this command line

289
00:10:40,320 --> 00:10:42,399
for example we can see here that the

290
00:10:42,399 --> 00:10:44,959
regio.exe utility is being used to save

291
00:10:44,959 --> 00:10:46,000
the system and the

292
00:10:46,000 --> 00:10:49,519
sam registry hive key to this particular

293
00:10:49,519 --> 00:10:53,600
location to later dump the

294
00:10:53,600 --> 00:10:56,800
the credential from the machine and

295
00:10:56,800 --> 00:10:58,720
we can even see some clever usage and

296
00:10:58,720 --> 00:11:00,560
novel techniques in this report by red

297
00:11:00,560 --> 00:11:01,279
canary

298
00:11:01,279 --> 00:11:04,399
where the the attackers are using a a

299
00:11:04,399 --> 00:11:08,160
very specific location in the registry

300
00:11:08,160 --> 00:11:11,199
to add persistence

301
00:11:12,079 --> 00:11:15,760
once again mita can be used to map

302
00:11:15,760 --> 00:11:19,040
these techniques directly

303
00:11:20,480 --> 00:11:23,120
now if you remember from the start we

304
00:11:23,120 --> 00:11:24,720
talked about scheduled task

305
00:11:24,720 --> 00:11:26,640
that little utility that enables

306
00:11:26,640 --> 00:11:28,320
administrator to create

307
00:11:28,320 --> 00:11:31,440
delete query change or run

308
00:11:31,440 --> 00:11:34,079
any schedule task uh remotely or locally

309
00:11:34,079 --> 00:11:35,760
on any computer

310
00:11:35,760 --> 00:11:38,320
so the syntax go a little like this you

311
00:11:38,320 --> 00:11:40,240
you enter schedule task then slash

312
00:11:40,240 --> 00:11:40,800
create

313
00:11:40,800 --> 00:11:42,880
or slash change or delete whatever the

314
00:11:42,880 --> 00:11:44,240
action you want to take

315
00:11:44,240 --> 00:11:46,880
then you specify a time a time then a

316
00:11:46,880 --> 00:11:48,320
task name then whatever

317
00:11:48,320 --> 00:11:51,839
is going to be run and

318
00:11:51,839 --> 00:11:53,680
you you'll get in the interface

319
00:11:53,680 --> 00:11:55,360
something like this the name of the task

320
00:11:55,360 --> 00:11:56,240
and whatever

321
00:11:56,240 --> 00:11:59,360
the time it triggers at

322
00:12:00,880 --> 00:12:04,399
seeing how it is being used in the wild

323
00:12:04,399 --> 00:12:07,600
well the difficulty here lays in the

324
00:12:07,600 --> 00:12:10,160
parameters that are being provided let's

325
00:12:10,160 --> 00:12:11,440
say that you want to

326
00:12:11,440 --> 00:12:12,880
search for the malicious usage of

327
00:12:12,880 --> 00:12:14,320
scheduled task and make a

328
00:12:14,320 --> 00:12:15,920
differentiation between

329
00:12:15,920 --> 00:12:18,880
benign usage and malicious usage you can

330
00:12:18,880 --> 00:12:20,320
see clearly here

331
00:12:20,320 --> 00:12:22,560
that the arguments are the same but the

332
00:12:22,560 --> 00:12:24,000
path may differ

333
00:12:24,000 --> 00:12:26,079
so you have no other option than to look

334
00:12:26,079 --> 00:12:28,079
at for example the executables that are

335
00:12:28,079 --> 00:12:28,959
being run

336
00:12:28,959 --> 00:12:30,880
in the first example we have a scheduled

337
00:12:30,880 --> 00:12:32,720
task that is being created by the name

338
00:12:32,720 --> 00:12:34,200
of

339
00:12:34,200 --> 00:12:37,519
k0adic that will run the following

340
00:12:37,519 --> 00:12:41,440
hta which is a malware

341
00:12:41,600 --> 00:12:43,279
put yourself in the place of an

342
00:12:43,279 --> 00:12:45,360
administrator or a malware analyst

343
00:12:45,360 --> 00:12:48,560
or a sort analyst looking at this in the

344
00:12:48,560 --> 00:12:50,480
millions of logs of scheduled tasks that

345
00:12:50,480 --> 00:12:52,000
are being executed daily

346
00:12:52,000 --> 00:12:54,399
and you'll soon understand how the

347
00:12:54,399 --> 00:12:56,480
attackers behind the solar winds

348
00:12:56,480 --> 00:12:58,800
bridge were able to hide for months

349
00:12:58,800 --> 00:13:01,839
using such a simple technique

350
00:13:01,839 --> 00:13:04,959
by simply using scheduled task they can

351
00:13:04,959 --> 00:13:07,440
literally hide between millions of lines

352
00:13:07,440 --> 00:13:09,920
of logs

353
00:13:12,639 --> 00:13:15,600
myta can help us map this technique

354
00:13:15,600 --> 00:13:17,120
directly

355
00:13:17,120 --> 00:13:19,760
by looking at the scheduled tasks job

356
00:13:19,760 --> 00:13:21,519
technique

357
00:13:21,519 --> 00:13:24,240
now the final load bins we're gonna take

358
00:13:24,240 --> 00:13:24,959
a look at

359
00:13:24,959 --> 00:13:27,440
is the run dll utility as its name

360
00:13:27,440 --> 00:13:31,040
suggests it will let us run dlls

361
00:13:31,040 --> 00:13:33,519
well the surprising thing about this is

362
00:13:33,519 --> 00:13:35,120
there isn't so many flags

363
00:13:35,120 --> 00:13:37,120
there are all there is only one you

364
00:13:37,120 --> 00:13:40,639
specify run dll and the dln name

365
00:13:40,639 --> 00:13:43,600
so if you look for malicious users with

366
00:13:43,600 --> 00:13:46,079
this utility

367
00:13:46,079 --> 00:13:48,160
you'll be surprised that the system uses

368
00:13:48,160 --> 00:13:49,360
this utility

369
00:13:49,360 --> 00:13:53,040
frequently and attackers discovered

370
00:13:53,040 --> 00:13:55,440
that that this can be used to download

371
00:13:55,440 --> 00:13:57,360
the malicious application directly from

372
00:13:57,360 --> 00:13:59,120
the command line for example

373
00:13:59,120 --> 00:14:00,720
if we look at the first command line

374
00:14:00,720 --> 00:14:02,560
utility we can see that the run dll

375
00:14:02,560 --> 00:14:04,000
utility

376
00:14:04,000 --> 00:14:07,839
is being used to execute and download

377
00:14:07,839 --> 00:14:12,160
this application and as you can see

378
00:14:12,160 --> 00:14:15,040
for example in this uh in this line the

379
00:14:15,040 --> 00:14:16,079
run dll utility

380
00:14:16,079 --> 00:14:18,399
is being used to run the end dot dll

381
00:14:18,399 --> 00:14:21,040
with the function start w

382
00:14:21,040 --> 00:14:22,959
if you put yourself in the place of a

383
00:14:22,959 --> 00:14:24,800
stock analyst looking at this

384
00:14:24,800 --> 00:14:27,199
you cannot determine if this is benign

385
00:14:27,199 --> 00:14:29,519
or malicious without knowing

386
00:14:29,519 --> 00:14:34,480
what is the end.dll file represents

387
00:14:35,760 --> 00:14:38,880
now once again mytech can help us map

388
00:14:38,880 --> 00:14:39,920
this directly

389
00:14:39,920 --> 00:14:41,839
using the following techniques signed

390
00:14:41,839 --> 00:14:45,040
binary proxy execution so

391
00:14:45,040 --> 00:14:47,440
we've only looked at a couple we've only

392
00:14:47,440 --> 00:14:49,120
taken a look at a couple of

393
00:14:49,120 --> 00:14:50,800
living of the land binaries but there

394
00:14:50,800 --> 00:14:52,480
are so many more for example

395
00:14:52,480 --> 00:14:55,040
we didn't look at a trip task skill icar

396
00:14:55,040 --> 00:14:57,440
calls vss admin etc

397
00:14:57,440 --> 00:15:00,320
i highly invite you to take a look at

398
00:15:00,320 --> 00:15:02,000
the other tools and how they are being

399
00:15:02,000 --> 00:15:03,120
used

400
00:15:03,120 --> 00:15:05,519
at my blog where i detailed everything

401
00:15:05,519 --> 00:15:06,639
there

402
00:15:06,639 --> 00:15:10,240
so one might ask a simple question is

403
00:15:10,240 --> 00:15:12,240
there any hope to detect this seeing

404
00:15:12,240 --> 00:15:13,120
that

405
00:15:13,120 --> 00:15:14,880
the same utilities that are being used

406
00:15:14,880 --> 00:15:16,959
by the system or administrators are

407
00:15:16,959 --> 00:15:20,160
being used by attackers themselves

408
00:15:20,160 --> 00:15:22,240
unfortunately there are some

409
00:15:22,240 --> 00:15:25,040
opportunities to detect this

410
00:15:25,040 --> 00:15:28,160
so the first one is always baseline your

411
00:15:28,160 --> 00:15:29,120
environment

412
00:15:29,120 --> 00:15:31,279
what do i mean by that let's take a

413
00:15:31,279 --> 00:15:34,399
simple example of ps exact

414
00:15:34,399 --> 00:15:36,880
well ps exact is a very well known

415
00:15:36,880 --> 00:15:38,079
utility

416
00:15:38,079 --> 00:15:40,399
but its intention was created to be used

417
00:15:40,399 --> 00:15:41,680
by administrator

418
00:15:41,680 --> 00:15:44,720
to remotely target computers

419
00:15:44,720 --> 00:15:47,600
so when you baseline your environment

420
00:15:47,600 --> 00:15:49,360
basically what are you saying what is

421
00:15:49,360 --> 00:15:49,600
the

422
00:15:49,600 --> 00:15:51,680
normal in my environment and when i know

423
00:15:51,680 --> 00:15:53,839
my normal i can detect what is not

424
00:15:53,839 --> 00:15:54,880
normal

425
00:15:54,880 --> 00:15:57,199
so in certain organization

426
00:15:57,199 --> 00:15:59,440
administrators are using ps exact to

427
00:15:59,440 --> 00:16:01,040
administer

428
00:16:01,040 --> 00:16:04,000
the computers of their users but in

429
00:16:04,000 --> 00:16:05,759
certain organization ps exec

430
00:16:05,759 --> 00:16:08,079
is already banned so when you're writing

431
00:16:08,079 --> 00:16:09,120
your detection

432
00:16:09,120 --> 00:16:12,240
you gotta take in consideration this

433
00:16:12,240 --> 00:16:14,720
is this benign for my usage case or is

434
00:16:14,720 --> 00:16:16,320
it not if it's not

435
00:16:16,320 --> 00:16:19,600
i gotta create filters and optimize my

436
00:16:19,600 --> 00:16:21,040
detection

437
00:16:21,040 --> 00:16:22,639
do not take into consideration

438
00:16:22,639 --> 00:16:24,480
everything that is generating

439
00:16:24,480 --> 00:16:27,680
any false positives

440
00:16:29,839 --> 00:16:32,880
next check the

441
00:16:32,880 --> 00:16:36,320
the command line arguments so if we take

442
00:16:36,320 --> 00:16:37,680
a little

443
00:16:37,680 --> 00:16:40,800
uh example here we have the svc host

444
00:16:40,800 --> 00:16:42,000
process

445
00:16:42,000 --> 00:16:43,920
on the left on the left hand side we

446
00:16:43,920 --> 00:16:45,759
have a screenshot from the

447
00:16:45,759 --> 00:16:49,360
a sandbox any run of a malware sample

448
00:16:49,360 --> 00:16:52,560
executing svc host on the

449
00:16:52,560 --> 00:16:54,720
right hand side we have a screenshot

450
00:16:54,720 --> 00:16:56,800
from a windows machine

451
00:16:56,800 --> 00:16:59,920
executing svc host so

452
00:16:59,920 --> 00:17:02,839
if we take a look there is a glaring

453
00:17:02,839 --> 00:17:05,039
difference in the windows machine the

454
00:17:05,039 --> 00:17:06,240
svc host

455
00:17:06,240 --> 00:17:09,439
contains a command line arguments but on

456
00:17:09,439 --> 00:17:11,039
the any run

457
00:17:11,039 --> 00:17:14,240
execution the svc host is without

458
00:17:14,240 --> 00:17:17,760
one other thing to take a look at is svc

459
00:17:17,760 --> 00:17:19,599
host is a parent

460
00:17:19,599 --> 00:17:22,400
is a child sorry for services.exe

461
00:17:22,400 --> 00:17:24,959
whereas in the context of the sandbox

462
00:17:24,959 --> 00:17:29,440
it is a chair of spool svc sv.xy

463
00:17:29,440 --> 00:17:33,840
and that leads me to my next point

464
00:17:35,440 --> 00:17:37,919
knowledge of os internals and standard

465
00:17:37,919 --> 00:17:39,840
behavior

466
00:17:39,840 --> 00:17:42,960
so in the case of svc host

467
00:17:42,960 --> 00:17:44,799
when you dig deeper you will find that

468
00:17:44,799 --> 00:17:49,120
svc host is always a childofservices.exe

469
00:17:49,120 --> 00:17:51,520
meaning that anything that deviates from

470
00:17:51,520 --> 00:17:52,240
this

471
00:17:52,240 --> 00:17:54,320
may might be considered and should be

472
00:17:54,320 --> 00:17:55,679
considered malicious

473
00:17:55,679 --> 00:17:59,440
in some form svc host must always have

474
00:17:59,440 --> 00:18:00,799
arguments starting with the k

475
00:18:00,799 --> 00:18:03,280
flag so for example let's say the

476
00:18:03,280 --> 00:18:04,160
attacker

477
00:18:04,160 --> 00:18:06,799
managed to spawn an svc host as a

478
00:18:06,799 --> 00:18:07,600
service

479
00:18:07,600 --> 00:18:10,080
as a childofservices.exe if it does not

480
00:18:10,080 --> 00:18:12,240
contain the k flag

481
00:18:12,240 --> 00:18:15,840
it should raise some alarms

482
00:18:16,720 --> 00:18:19,760
and finally everything that is there

483
00:18:19,760 --> 00:18:21,440
that follows the k flag

484
00:18:21,440 --> 00:18:24,080
should be loaded from the hklm system

485
00:18:24,080 --> 00:18:25,440
current control services

486
00:18:25,440 --> 00:18:28,400
or or should be defined there at least

487
00:18:28,400 --> 00:18:29,760
and that registry

488
00:18:29,760 --> 00:18:32,480
stores information about every services

489
00:18:32,480 --> 00:18:32,880
that

490
00:18:32,880 --> 00:18:34,559
every service that is declared in the

491
00:18:34,559 --> 00:18:36,960
system

492
00:18:38,480 --> 00:18:42,080
and finally as we have seen uh mitral

493
00:18:42,080 --> 00:18:44,160
attack provide a very good

494
00:18:44,160 --> 00:18:48,720
uh resource to to to to create detection

495
00:18:48,720 --> 00:18:52,880
so as we've seen uh it provides tactics

496
00:18:52,880 --> 00:18:55,520
such as reconnaissance execution etc and

497
00:18:55,520 --> 00:18:57,440
it provides for each tactics it provides

498
00:18:57,440 --> 00:18:58,799
techniques that mapped with that

499
00:18:58,799 --> 00:19:00,320
so for example we have in the case of

500
00:19:00,320 --> 00:19:01,840
powershell we have the command and

501
00:19:01,840 --> 00:19:04,960
scripting interpreter and when we click

502
00:19:04,960 --> 00:19:05,600
on that

503
00:19:05,600 --> 00:19:07,919
we have data sources that can help us

504
00:19:07,919 --> 00:19:09,280
general

505
00:19:09,280 --> 00:19:12,320
where to look to find

506
00:19:12,320 --> 00:19:13,919
maliciousness for example the data

507
00:19:13,919 --> 00:19:15,840
sources to look at to find command and

508
00:19:15,840 --> 00:19:17,679
scripting interpreter techniques

509
00:19:17,679 --> 00:19:19,679
is powershell logs process command line

510
00:19:19,679 --> 00:19:21,600
parameters process monitoring windows

511
00:19:21,600 --> 00:19:23,600
event logs etc

512
00:19:23,600 --> 00:19:25,919
and they even provide a procedure

513
00:19:25,919 --> 00:19:26,799
examples

514
00:19:26,799 --> 00:19:30,080
of previous attack groups using this

515
00:19:30,080 --> 00:19:32,879
same technique

516
00:19:33,120 --> 00:19:36,960
so other resources to look at

517
00:19:36,960 --> 00:19:38,880
the the first one is the lol bass

518
00:19:38,880 --> 00:19:40,799
project

519
00:19:40,799 --> 00:19:42,559
or living of the land binaries and

520
00:19:42,559 --> 00:19:44,960
script it is a very interesting project

521
00:19:44,960 --> 00:19:48,559
that is documenting uh all the or most

522
00:19:48,559 --> 00:19:49,760
of the

523
00:19:49,760 --> 00:19:51,840
load bins and how they can be used in a

524
00:19:51,840 --> 00:19:53,120
malicious way

525
00:19:53,120 --> 00:19:54,880
the second project to look at is the

526
00:19:54,880 --> 00:19:57,679
sigma project which contains

527
00:19:57,679 --> 00:20:00,400
generic rules that can be applied to

528
00:20:00,400 --> 00:20:02,559
your cm solutions

529
00:20:02,559 --> 00:20:05,280
and it's already mapping techniques

530
00:20:05,280 --> 00:20:06,320
directly from meter

531
00:20:06,320 --> 00:20:08,480
so you can already go there search for

532
00:20:08,480 --> 00:20:09,679
techniques and

533
00:20:09,679 --> 00:20:12,880
find a specific sigma rule and with that

534
00:20:12,880 --> 00:20:13,840
sigma rule

535
00:20:13,840 --> 00:20:15,919
you can convert it to your sim solution

536
00:20:15,919 --> 00:20:17,120
and start detecting

537
00:20:17,120 --> 00:20:20,400
at a basic level some of the techniques

538
00:20:20,400 --> 00:20:22,480
one shout out i want to make is the dcp

539
00:20:22,480 --> 00:20:24,640
podcast by the guys at

540
00:20:24,640 --> 00:20:26,880
spectre ops which i really find very

541
00:20:26,880 --> 00:20:27,760
interesting

542
00:20:27,760 --> 00:20:29,679
some interesting discussion about threat

543
00:20:29,679 --> 00:20:31,440
hunting and detection engineering are

544
00:20:31,440 --> 00:20:33,120
there so you should follow that

545
00:20:33,120 --> 00:20:35,520
and of course everything related to this

546
00:20:35,520 --> 00:20:36,320
and many more

547
00:20:36,320 --> 00:20:41,520
follow my blog spanish.medium.com

548
00:20:41,520 --> 00:20:45,679
thank you so much for your time

549
00:20:45,679 --> 00:20:49,120
awesome that was awesome um we we for

550
00:20:49,120 --> 00:20:50,559
the moment only had one question

551
00:20:50,559 --> 00:20:53,039
uh trick one so uh we might get a few

552
00:20:53,039 --> 00:20:55,360
others coming in uh

553
00:20:55,360 --> 00:20:59,280
you know over time um

554
00:20:59,520 --> 00:21:03,120
right yes uh could you let's say

555
00:21:03,120 --> 00:21:06,480
in the context of a big company

556
00:21:06,480 --> 00:21:09,679
uh do a baseline uh for your for your

557
00:21:09,679 --> 00:21:12,320
threat detection

558
00:21:12,320 --> 00:21:15,039
very interesting question technically

559
00:21:15,039 --> 00:21:16,000
well theoretically

560
00:21:16,000 --> 00:21:19,520
you could but it takes a lot of time

561
00:21:19,520 --> 00:21:21,919
since uh even if the company

562
00:21:21,919 --> 00:21:25,039
is small it can take a lot of time so

563
00:21:25,039 --> 00:21:27,600
to my knowledge and to my experience the

564
00:21:27,600 --> 00:21:28,960
best thing to do

565
00:21:28,960 --> 00:21:32,000
is go gradually so for for example

566
00:21:32,000 --> 00:21:34,960
enforce things uh at a smaller scale for

567
00:21:34,960 --> 00:21:37,919
example at a department or a

568
00:21:37,919 --> 00:21:40,559
for example at a couple of peoples and

569
00:21:40,559 --> 00:21:41,360
see

570
00:21:41,360 --> 00:21:43,600
what happens from there so for example

571
00:21:43,600 --> 00:21:44,640
if you want to ban

572
00:21:44,640 --> 00:21:47,919
the usage of some utilities just to stay

573
00:21:47,919 --> 00:21:49,039
out

574
00:21:49,039 --> 00:21:52,080
base it base it with your development

575
00:21:52,080 --> 00:21:53,679
team or your administrator

576
00:21:53,679 --> 00:21:55,440
see what's happened and once you're

577
00:21:55,440 --> 00:21:58,000
happy with it generalize it

578
00:21:58,000 --> 00:22:01,120
that's uh that's what i think a case

579
00:22:01,120 --> 00:22:03,520
awesome and we did get a second question

580
00:22:03,520 --> 00:22:05,440
on your personal opinion which is the

581
00:22:05,440 --> 00:22:08,240
best antivirus for enterprise level

582
00:22:08,240 --> 00:22:12,320
um it's a very difficult question well

583
00:22:12,320 --> 00:22:15,440
there isn't uh such a a thing as

584
00:22:15,440 --> 00:22:18,400
the best antivirus it is a proactive

585
00:22:18,400 --> 00:22:20,080
approach that should be taken

586
00:22:20,080 --> 00:22:22,320
to detect maliciousness so for example

587
00:22:22,320 --> 00:22:24,480
let's say you bought a windows defender

588
00:22:24,480 --> 00:22:25,280
or something

589
00:22:25,280 --> 00:22:28,880
similar you should always

590
00:22:28,880 --> 00:22:31,440
put it and configure it so that it will

591
00:22:31,440 --> 00:22:33,360
generate the logs necessary

592
00:22:33,360 --> 00:22:36,880
and then a human is always necessary

593
00:22:36,880 --> 00:22:39,039
to look at to take a look at these logs

594
00:22:39,039 --> 00:22:40,480
and to determine if something is

595
00:22:40,480 --> 00:22:42,320
malicious or not the human part is

596
00:22:42,320 --> 00:22:43,600
always necessary so

597
00:22:43,600 --> 00:22:46,960
the the the choice of the antivirus

598
00:22:46,960 --> 00:22:49,600
will depends on the telemetry that is

599
00:22:49,600 --> 00:22:50,320
providing

600
00:22:50,320 --> 00:22:52,799
for example defender will provide some

601
00:22:52,799 --> 00:22:54,400
some telemetry

602
00:22:54,400 --> 00:22:56,720
regarding the processes being used and

603
00:22:56,720 --> 00:22:58,240
their import tables

604
00:22:58,240 --> 00:23:00,799
and something in the like this could be

605
00:23:00,799 --> 00:23:02,240
interesting for your contacts

606
00:23:02,240 --> 00:23:04,640
so you should go for it but never

607
00:23:04,640 --> 00:23:07,440
replace the human

608
00:23:07,440 --> 00:23:12,320
awesome well that's um

609
00:23:12,559 --> 00:23:14,400
um did you did you have some other

610
00:23:14,400 --> 00:23:15,679
things that you wanted to uh

611
00:23:15,679 --> 00:23:18,799
to kind of drop in or uh like some

612
00:23:18,799 --> 00:23:20,559
resources uh are you going to be

613
00:23:20,559 --> 00:23:22,640
providing the slides uh as well

614
00:23:22,640 --> 00:23:24,960
or making them available yeah i would

615
00:23:24,960 --> 00:23:26,640
make these slides available

616
00:23:26,640 --> 00:23:28,960
at my github and my twitter account and

617
00:23:28,960 --> 00:23:30,559
anyone wanting the slides or

618
00:23:30,559 --> 00:23:32,240
wanting to chat about this a little bit

619
00:23:32,240 --> 00:23:33,919
more you can find me at twitter

620
00:23:33,919 --> 00:23:36,400
and you can ping me whatever you like i

621
00:23:36,400 --> 00:23:36,960
am

622
00:23:36,960 --> 00:23:40,880
always available thank you so much

