1
00:00:00,079 --> 00:00:05,970
so I'm<font color="#CCCCCC"> zekrom I work</font><font color="#E5E5E5"> for Microsoft as a</font>

2
00:00:04,230 --> 00:00:09,030
senior software engineer on office 365

3
00:00:05,970 --> 00:00:10,769
and we're going to<font color="#E5E5E5"> talk about etw which</font>

4
00:00:09,030 --> 00:00:12,299
seems to<font color="#E5E5E5"> be something that people who</font>

5
00:00:10,769 --> 00:00:16,020
either heard of but don't know anything

6
00:00:12,300 --> 00:00:17,340
about<font color="#CCCCCC"> it or they are interested but have</font>

7
00:00:16,020 --> 00:00:20,880
no idea how to start because<font color="#E5E5E5"> the docs</font>

8
00:00:17,340 --> 00:00:26,189
are atrocious so we'll<font color="#E5E5E5"> start with</font><font color="#CCCCCC"> a</font>

9
00:00:20,880 --> 00:00:27,779
story this<font color="#CCCCCC"> is a little snip of a 4688</font>

10
00:00:26,189 --> 00:00:30,330
event which is<font color="#E5E5E5"> a process start in the</font>

11
00:00:27,779 --> 00:00:31,948
windows security event log anyone who

12
00:00:30,330 --> 00:00:33,660
does windows security has probably seen

13
00:00:31,949 --> 00:00:34,950
this before and looked at it<font color="#CCCCCC"> it's</font>

14
00:00:33,660 --> 00:00:37,110
<font color="#CCCCCC">probably the most</font><font color="#E5E5E5"> common event people</font>

15
00:00:34,950 --> 00:00:39,210
look at and so that first highlighted

16
00:00:37,110 --> 00:00:41,280
line is you can see<font color="#E5E5E5"> bad eggsy has</font>

17
00:00:39,210 --> 00:00:44,340
executed and<font color="#CCCCCC"> the parent process was oh</font>

18
00:00:41,280 --> 00:00:48,690
no w3 WP which is<font color="#CCCCCC"> i is so some of these</font>

19
00:00:44,340 --> 00:00:52,739
<font color="#CCCCCC">hacked your web app from noose we saw it</font>

20
00:00:48,690 --> 00:00:54,480
run and then it's the the<font color="#E5E5E5"> process</font><font color="#CCCCCC"> i did</font>

21
00:00:52,739 --> 00:00:58,530
a couple<font color="#E5E5E5"> hours later then we got on the</font>

22
00:00:54,480 --> 00:01:00,750
box and bad<font color="#CCCCCC"> eggsy was gone we don't know</font>

23
00:00:58,530 --> 00:01:03,090
anything about<font color="#E5E5E5"> it we might be able to</font>

24
00:01:00,750 --> 00:01:07,560
figure<font color="#E5E5E5"> out who created the file using</font>

25
00:01:03,090 --> 00:01:09,630
some file houses and forensics but we

26
00:01:07,560 --> 00:01:11,549
don't<font color="#CCCCCC"> really know what that was where it</font>

27
00:01:09,630 --> 00:01:15,658
came from we don't<font color="#E5E5E5"> have any</font><font color="#CCCCCC"> information</font>

28
00:01:11,549 --> 00:01:18,570
we<font color="#E5E5E5"> don't understand what it did so if we</font>

29
00:01:15,659 --> 00:01:19,740
were to build a forensics wish list what

30
00:01:18,570 --> 00:01:22,798
would we want<font color="#CCCCCC"> all right so we'd want to</font>

31
00:01:19,740 --> 00:01:24,179
<font color="#E5E5E5">know some things about networking so</font>

32
00:01:22,799 --> 00:01:26,340
things like what dns lookups did it

33
00:01:24,180 --> 00:01:29,070
perform what IP addresses did it connect

34
00:01:26,340 --> 00:01:30,750
to how much data was transmission

35
00:01:29,070 --> 00:01:31,889
transmitted whether it's beaconing so

36
00:01:30,750 --> 00:01:34,470
talking to command and control

37
00:01:31,890 --> 00:01:36,420
infrastructure and then maybe some

38
00:01:34,470 --> 00:01:38,908
things<font color="#E5E5E5"> more about what it did as opposed</font>

39
00:01:36,420 --> 00:01:41,159
to it talk<font color="#CCCCCC"> to so what dll's it loaded</font>

40
00:01:38,909 --> 00:01:44,189
did it create any<font color="#E5E5E5"> thread than any other</font>

41
00:01:41,159 --> 00:01:46,770
processes you know proper following any

42
00:01:44,189 --> 00:01:48,539
w my operations for persistence and then

43
00:01:46,770 --> 00:01:49,979
did it call any powershell functions

44
00:01:48,540 --> 00:01:52,530
right you can you can host the

45
00:01:49,979 --> 00:01:54,479
<font color="#CCCCCC">powershell runtime in another process if</font>

46
00:01:52,530 --> 00:01:56,250
you know what you're doing and you don't

47
00:01:54,479 --> 00:02:00,869
need<font color="#CCCCCC"> powershell eggsy we just need the</font>

48
00:01:56,250 --> 00:02:02,310
<font color="#E5E5E5">system automation dll so what if</font><font color="#CCCCCC"> i told</font>

49
00:02:00,869 --> 00:02:04,259
you you could get all this information

50
00:02:02,310 --> 00:02:06,780
and it's already<font color="#E5E5E5"> there you don't have to</font>

51
00:02:04,259 --> 00:02:08,759
<font color="#CCCCCC">write any like telemetry into the OS</font>

52
00:02:06,780 --> 00:02:10,318
itself<font color="#E5E5E5"> it's all just part of the OS and</font>

53
00:02:08,758 --> 00:02:12,769
what if<font color="#E5E5E5"> I told you you didn't</font><font color="#CCCCCC"> need</font><font color="#E5E5E5"> a</font>

54
00:02:10,318 --> 00:02:16,109
kernel driver either

55
00:02:12,770 --> 00:02:20,040
so etw<font color="#E5E5E5"> to the rescue stands for event</font>

56
00:02:16,110 --> 00:02:21,390
tracing for windows<font color="#E5E5E5"> it's originally for</font>

57
00:02:20,040 --> 00:02:24,299
debug scenarios so things like

58
00:02:21,390 --> 00:02:27,480
performance and power management tracing

59
00:02:24,300 --> 00:02:29,610
and seal our behaviors but it also

60
00:02:27,480 --> 00:02:30,989
happens to have a huge<font color="#E5E5E5"> amount</font><font color="#CCCCCC"> of</font>

61
00:02:29,610 --> 00:02:35,760
<font color="#E5E5E5">information on a lot of different</font>

62
00:02:30,990 --> 00:02:38,100
<font color="#E5E5E5">subsystems things like</font><font color="#CCCCCC"> network so send</font>

63
00:02:35,760 --> 00:02:40,320
and receive and connect process

64
00:02:38,100 --> 00:02:42,030
creations thread creations memory

65
00:02:40,320 --> 00:02:43,140
allocations of various sorts and whether

66
00:02:42,030 --> 00:02:45,270
or not they set the<font color="#E5E5E5"> read/write</font>

67
00:02:43,140 --> 00:02:48,209
executable flags on Vanessa on that

68
00:02:45,270 --> 00:02:50,790
section of memory image load which in

69
00:02:48,210 --> 00:02:54,600
parlance for Windows is loading a dll

70
00:02:50,790 --> 00:02:56,400
<font color="#CCCCCC">dll's are called images and then on the</font>

71
00:02:54,600 --> 00:02:59,010
user mode side for all those subsystems

72
00:02:56,400 --> 00:03:01,920
<font color="#E5E5E5">I alluded to powershell has a has an</font><font color="#CCCCCC"> ADW</font>

73
00:02:59,010 --> 00:03:03,750
trace when I net has an ADW trace so you

74
00:03:01,920 --> 00:03:08,179
can see things<font color="#E5E5E5"> like unencrypted requests</font>

75
00:03:03,750 --> 00:03:11,430
and respond<font color="#CCCCCC"> pedders from HTTP or https</font>

76
00:03:08,180 --> 00:03:13,260
<font color="#E5E5E5">wmi when RM which is the remoting</font>

77
00:03:11,430 --> 00:03:14,700
technology for power shell and a whole

78
00:03:13,260 --> 00:03:16,200
bunch of others but kind of<font color="#E5E5E5"> the big</font>

79
00:03:14,700 --> 00:03:19,859
point here is there's over<font color="#CCCCCC"> 1100</font>

80
00:03:16,200 --> 00:03:21,329
providers on Windows 10 right now if you

81
00:03:19,860 --> 00:03:23,280
run<font color="#E5E5E5"> that command at the bottom on your</font>

82
00:03:21,330 --> 00:03:24,570
<font color="#CCCCCC">Windows laptop that shows you every</font>

83
00:03:23,280 --> 00:03:29,700
provider<font color="#E5E5E5"> that's available to you right</font>

84
00:03:24,570 --> 00:03:32,340
now so that's kind of like a brief

85
00:03:29,700 --> 00:03:34,970
<font color="#CCCCCC">overview of</font><font color="#E5E5E5"> what we can see with</font><font color="#CCCCCC"> it what</font>

86
00:03:32,340 --> 00:03:39,360
it looks like what it<font color="#CCCCCC"> was</font><font color="#E5E5E5"> able to do</font>

87
00:03:34,970 --> 00:03:41,220
let's talk<font color="#E5E5E5"> a little bit about the kind</font>

88
00:03:39,360 --> 00:03:44,760
of the shape of it and what it's like to

89
00:03:41,220 --> 00:03:45,960
consume it this is the top half of a

90
00:03:44,760 --> 00:03:47,489
program called Microsoft message

91
00:03:45,960 --> 00:03:50,850
analyzer it's free you can download it

92
00:03:47,490 --> 00:03:51,990
yourself and play with any of the<font color="#E5E5E5"> etw</font>

93
00:03:50,850 --> 00:03:53,489
providers that are on the<font color="#E5E5E5"> operating</font>

94
00:03:51,990 --> 00:03:56,580
system<font color="#E5E5E5"> it's how my team hunts for any</font>

95
00:03:53,490 --> 00:04:00,270
data sources to zoom in a little bit

96
00:03:56,580 --> 00:04:02,570
this is a series of events that<font color="#E5E5E5"> came in</font>

97
00:04:00,270 --> 00:04:05,550
from<font color="#E5E5E5"> the Microsoft Windows PowerShell</font>

98
00:04:02,570 --> 00:04:07,019
that highlighted fourth line is<font color="#E5E5E5"> invoke</font>

99
00:04:05,550 --> 00:04:09,000
<font color="#CCCCCC">Mimi cast which is just me goofing</font>

100
00:04:07,020 --> 00:04:10,320
around but kind of<font color="#E5E5E5"> the point here is</font>

101
00:04:09,000 --> 00:04:12,060
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it's a series of events that you</font>

102
00:04:10,320 --> 00:04:16,039
looking to write<font color="#CCCCCC"> its glorified printf</font>

103
00:04:12,060 --> 00:04:18,620
debugging in with a schema

104
00:04:16,039 --> 00:04:22,199
this is the bottom<font color="#E5E5E5"> half of that program</font>

105
00:04:18,620 --> 00:04:25,020
and so zooming in on the middle portion

106
00:04:22,199 --> 00:04:26,550
the events have different properties and

107
00:04:25,020 --> 00:04:27,990
different providers produce different

108
00:04:26,550 --> 00:04:30,090
types of events with different types<font color="#E5E5E5"> of</font>

109
00:04:27,990 --> 00:04:32,520
schemas but kind of the<font color="#E5E5E5"> big</font><font color="#CCCCCC"> things here</font>

110
00:04:30,090 --> 00:04:35,159
is<font color="#CCCCCC"> that you can look at what kind of</font>

111
00:04:32,520 --> 00:04:36,628
data they're providing in<font color="#E5E5E5"> this case the</font>

112
00:04:35,159 --> 00:04:39,990
two that are interesting or payload and

113
00:04:36,629 --> 00:04:41,819
context info if we zoomed in on what

114
00:04:39,990 --> 00:04:44,909
context info is doing there's a the

115
00:04:41,819 --> 00:04:46,919
right-hand panel of that program we can

116
00:04:44,909 --> 00:04:49,319
see things like the host application so

117
00:04:46,919 --> 00:04:51,750
if<font color="#E5E5E5"> I had been spent a little more time I</font>

118
00:04:49,319 --> 00:04:54,569
could<font color="#E5E5E5"> have made this use PS attack and</font>

119
00:04:51,750 --> 00:04:56,099
we would still get the same logging you

120
00:04:54,569 --> 00:04:57,720
can see the second highlighted line

121
00:04:56,099 --> 00:05:00,719
there is invoked<font color="#CCCCCC"> me me Cass and I'm the</font>

122
00:04:57,720 --> 00:05:03,090
third highlighted line is my username so

123
00:05:00,720 --> 00:05:04,530
Hoover who executed the command what

124
00:05:03,090 --> 00:05:08,609
command was executed in which hosts

125
00:05:04,530 --> 00:05:09,989
process it came from we use eat it<font color="#E5E5E5"> up</font>

126
00:05:08,610 --> 00:05:12,240
<font color="#E5E5E5">for all things now right just turn it</font>

127
00:05:09,990 --> 00:05:13,740
all on let it<font color="#E5E5E5"> go you know flood the</font>

128
00:05:12,240 --> 00:05:16,379
system with information now<font color="#E5E5E5"> you now</font>

129
00:05:13,740 --> 00:05:20,430
you're going<font color="#E5E5E5"> to win the day except not</font>

130
00:05:16,379 --> 00:05:22,409
really it's a debug stream if

131
00:05:20,430 --> 00:05:24,750
<font color="#E5E5E5">high-volume it was never meant for</font>

132
00:05:22,409 --> 00:05:26,460
security and so you've got<font color="#E5E5E5"> to distill</font>

133
00:05:24,750 --> 00:05:29,159
out the most interesting pieces of data

134
00:05:26,460 --> 00:05:30,900
for yourself and so the windows

135
00:05:29,159 --> 00:05:32,729
organization of last I checked is about

136
00:05:30,900 --> 00:05:34,560
five thousand engineers imagine five

137
00:05:32,729 --> 00:05:36,300
thousand engineers adding all the debug

138
00:05:34,560 --> 00:05:38,969
information they ever<font color="#E5E5E5"> wanted to know to</font>

139
00:05:36,300 --> 00:05:39,870
<font color="#CCCCCC">1,100 providers a lot of information if</font>

140
00:05:38,969 --> 00:05:40,770
<font color="#CCCCCC">you were to turn them all on you</font>

141
00:05:39,870 --> 00:05:44,150
<font color="#E5E5E5">wouldn't be able to keep up it'd</font>

142
00:05:40,770 --> 00:05:44,150
probably be writing terabytes a minute

143
00:05:44,960 --> 00:05:49,198
see so looks like it<font color="#CCCCCC"> a little bit about</font>

144
00:05:46,949 --> 00:05:52,830
basics before we get into the how to

145
00:05:49,199 --> 00:05:57,389
consume BTW kind of some important terms

146
00:05:52,830 --> 00:05:59,039
we gotta cover or the<font color="#CCCCCC"> trace session is a</font>

147
00:05:57,389 --> 00:06:02,069
single session that<font color="#CCCCCC"> you can subscribe to</font>

148
00:05:59,039 --> 00:06:05,340
events for provider is a source like

149
00:06:02,069 --> 00:06:06,990
powershell a dns to wmi and then events

150
00:06:05,340 --> 00:06:08,669
are generated by providers and some of

151
00:06:06,990 --> 00:06:11,909
the interesting relationships here are

152
00:06:08,669 --> 00:06:13,859
<font color="#E5E5E5">that trade sessions can subscribe</font><font color="#CCCCCC"> to one</font>

153
00:06:11,909 --> 00:06:16,560
or more providers so you can turn<font color="#CCCCCC"> on all</font>

154
00:06:13,860 --> 00:06:19,770
<font color="#E5E5E5">1100 if you knew what you were doing but</font>

155
00:06:16,560 --> 00:06:21,389
you would<font color="#CCCCCC"> be said and providers produce</font>

156
00:06:19,770 --> 00:06:22,500
the events and it can bruise more than

157
00:06:21,389 --> 00:06:24,389
one type of event there's not a

158
00:06:22,500 --> 00:06:26,610
one-to-one relationship there you define

159
00:06:24,389 --> 00:06:28,160
your events and so I think the

160
00:06:26,610 --> 00:06:33,470
PowerShell one

161
00:06:28,160 --> 00:06:35,270
scribes 20 or so and<font color="#CCCCCC"> then some basic</font>

162
00:06:33,470 --> 00:06:37,250
properties about edw itself when you're

163
00:06:35,270 --> 00:06:40,510
consuming it its user mode you need to

164
00:06:37,250 --> 00:06:43,940
be administrator but it is a user mode

165
00:06:40,510 --> 00:06:45,440
consumption model it's low latency<font color="#E5E5E5"> high</font>

166
00:06:43,940 --> 00:06:47,900
<font color="#E5E5E5">volume like I kind of mentioned earlier</font>

167
00:06:45,440 --> 00:06:50,240
the events<font color="#E5E5E5"> are schema ties but it's not</font>

168
00:06:47,900 --> 00:06:54,710
a perfect data source and I say that in

169
00:06:50,240 --> 00:06:56,120
the respective you can drop event the

170
00:06:54,710 --> 00:06:58,789
way that the<font color="#E5E5E5"> subsystem works there's a</font>

171
00:06:56,120 --> 00:07:00,290
ring buffer and if you don't pump<font color="#E5E5E5"> events</font>

172
00:06:58,790 --> 00:07:01,940
off the ring buffer fast enough you will

173
00:07:00,290 --> 00:07:04,580
start dropping the<font color="#E5E5E5"> oldest events off the</font>

174
00:07:01,940 --> 00:07:06,350
<font color="#E5E5E5">end and</font><font color="#CCCCCC"> then I mentioned corrupted event</font>

175
00:07:04,580 --> 00:07:09,320
they don't<font color="#CCCCCC"> happen often but I've seen</font>

176
00:07:06,350 --> 00:07:11,690
them I would guesstimate one in every

177
00:07:09,320 --> 00:07:13,790
ten million events is corrupted so it's

178
00:07:11,690 --> 00:07:15,800
pretty<font color="#E5E5E5"> good</font><font color="#CCCCCC"> but it does not have any</font>

179
00:07:13,790 --> 00:07:17,720
guarantees that data is always<font color="#E5E5E5"> going to</font>

180
00:07:15,800 --> 00:07:23,420
be one hundred percent accurate and no

181
00:07:17,720 --> 00:07:27,620
not corrupted so there's a couple ways

182
00:07:23,420 --> 00:07:29,060
that we can consume etw we can go real

183
00:07:27,620 --> 00:07:30,080
time where we can<font color="#E5E5E5"> go in on real time and</font>

184
00:07:29,060 --> 00:07:31,970
we'll start<font color="#E5E5E5"> with real time because I</font>

185
00:07:30,080 --> 00:07:36,620
<font color="#CCCCCC">think it's more</font><font color="#E5E5E5"> interesting there's some</font>

186
00:07:31,970 --> 00:07:38,510
<font color="#CCCCCC">Native api's 132 event tracing api's and</font>

187
00:07:36,620 --> 00:07:41,180
then there's crabs BTW which is the

188
00:07:38,510 --> 00:07:43,460
<font color="#E5E5E5">library that my team released you might</font>

189
00:07:41,180 --> 00:07:46,370
ask why crabs we were<font color="#E5E5E5"> trying to come up</font>

190
00:07:43,460 --> 00:07:48,620
with a name for the<font color="#CCCCCC"> library</font><font color="#E5E5E5"> and we</font>

191
00:07:46,370 --> 00:07:50,390
didn't<font color="#CCCCCC"> want to</font><font color="#E5E5E5"> just say</font><font color="#CCCCCC"> atw logging</font>

192
00:07:48,620 --> 00:07:51,710
listener library right because that

193
00:07:50,390 --> 00:07:55,099
would<font color="#E5E5E5"> make it</font><font color="#CCCCCC"> impossible to google for</font>

194
00:07:51,710 --> 00:07:56,690
and for whatever reason we were talking

195
00:07:55,100 --> 00:07:59,150
<font color="#E5E5E5">about it and I was talking about</font>

196
00:07:56,690 --> 00:08:02,030
spongebob and my coworker was like oh

197
00:07:59,150 --> 00:08:05,659
the Krusty Krab will call it Krabs so

198
00:08:02,030 --> 00:08:08,080
there you<font color="#E5E5E5"> go on the manage side we've</font>

199
00:08:05,660 --> 00:08:12,260
<font color="#CCCCCC">got some Diagnostics that eventing and</font>

200
00:08:08,080 --> 00:08:13,880
that is part of the dotnet runtime trace

201
00:08:12,260 --> 00:08:16,430
event which is<font color="#E5E5E5"> an open source library</font>

202
00:08:13,880 --> 00:08:19,520
from<font color="#E5E5E5"> Microsoft Vance Morrison on the.net</font>

203
00:08:16,430 --> 00:08:24,590
perk team released it and then<font color="#E5E5E5"> crab BTW</font>

204
00:08:19,520 --> 00:08:26,690
also as a managed wrapper on the<font color="#CCCCCC"> non</font>

205
00:08:24,590 --> 00:08:28,250
real-time side you've got two phases<font color="#E5E5E5"> you</font>

206
00:08:26,690 --> 00:08:30,260
have to capture a trace<font color="#E5E5E5"> and then you</font>

207
00:08:28,250 --> 00:08:32,240
need to analyze a trace and so for

208
00:08:30,260 --> 00:08:35,210
capturing you can use log man which is

209
00:08:32,240 --> 00:08:37,880
part of the<font color="#E5E5E5"> LS expert which is part of</font>

210
00:08:35,210 --> 00:08:40,230
the driver toolkit and then<font color="#CCCCCC"> Microsoft</font>

211
00:08:37,880 --> 00:08:41,700
message analyzer which is

212
00:08:40,230 --> 00:08:44,760
the tool we talked about<font color="#E5E5E5"> earlier</font><font color="#CCCCCC"> but it</font>

213
00:08:41,700 --> 00:08:47,310
can also capture<font color="#E5E5E5"> ETL traces and then</font>

214
00:08:44,760 --> 00:08:48,840
once you've got your ETL trace file you

215
00:08:47,310 --> 00:08:51,359
can do you load it up into windows

216
00:08:48,840 --> 00:08:52,650
performance analyzer or perfect<font color="#CCCCCC"> you and</font>

217
00:08:51,360 --> 00:08:55,430
these scenarios are typically like

218
00:08:52,650 --> 00:08:58,620
you've<font color="#E5E5E5"> got a new brand new laptop and</font>

219
00:08:55,430 --> 00:08:59,729
the power management team wants to

220
00:08:58,620 --> 00:09:01,560
understand why it doesn't go into

221
00:08:59,730 --> 00:09:02,580
suspend correctly well they would sit

222
00:09:01,560 --> 00:09:03,930
there and they say okay<font color="#E5E5E5"> well we're going</font>

223
00:09:02,580 --> 00:09:06,090
<font color="#E5E5E5">to turn on the power management trace</font>

224
00:09:03,930 --> 00:09:07,170
put slap-up asleep we're gonna<font color="#E5E5E5"> wake it</font>

225
00:09:06,090 --> 00:09:08,970
up in five<font color="#CCCCCC"> minutes and</font><font color="#E5E5E5"> then we're going</font>

226
00:09:07,170 --> 00:09:12,140
<font color="#E5E5E5">to stop the trace we're going to replay</font>

227
00:09:08,970 --> 00:09:13,980
<font color="#E5E5E5">that trace through one of the ETL view</font>

228
00:09:12,140 --> 00:09:16,439
viewers so that you can see what

229
00:09:13,980 --> 00:09:21,840
<font color="#E5E5E5">happened again glorified printf</font>

230
00:09:16,440 --> 00:09:24,810
debugging some people ask<font color="#E5E5E5"> me why they</font>

231
00:09:21,840 --> 00:09:26,970
don't just capture ETL files and analyze

232
00:09:24,810 --> 00:09:29,010
them on the<font color="#E5E5E5"> back end and the problem</font>

233
00:09:26,970 --> 00:09:31,140
there is that there's simply too much

234
00:09:29,010 --> 00:09:34,620
information you<font color="#CCCCCC"> have limited</font><font color="#E5E5E5"> ability to</font>

235
00:09:31,140 --> 00:09:36,870
filter on the ETL files so if you turn

236
00:09:34,620 --> 00:09:38,160
on a couple of high-volume providers

237
00:09:36,870 --> 00:09:40,860
you're going to generate you know

238
00:09:38,160 --> 00:09:42,209
gigabytes a minute which is not<font color="#CCCCCC"> really</font>

239
00:09:40,860 --> 00:09:43,950
feasible to take off of a<font color="#E5E5E5"> host</font>

240
00:09:42,210 --> 00:09:48,770
especially<font color="#E5E5E5"> when the host is serving a</font>

241
00:09:43,950 --> 00:09:50,850
web app to a customer in the context of

242
00:09:48,770 --> 00:09:57,540
intrusion detection then we're mostly

243
00:09:50,850 --> 00:09:59,610
interested in real time<font color="#CCCCCC"> so every etw</font>

244
00:09:57,540 --> 00:10:02,699
subscriber regardless of whether<font color="#CCCCCC"> it's</font>

245
00:09:59,610 --> 00:10:05,730
log man x / microsoft message analyzer

246
00:10:02,700 --> 00:10:06,960
your own custom roll your own agent<font color="#CCCCCC"> i'm</font>

247
00:10:05,730 --> 00:10:08,510
<font color="#E5E5E5">going to follow the same exact flow</font>

248
00:10:06,960 --> 00:10:10,440
you're going to<font color="#E5E5E5"> create a new session</font>

249
00:10:08,510 --> 00:10:11,490
you're going to subscribe to one or more

250
00:10:10,440 --> 00:10:12,930
<font color="#E5E5E5">of those providers that you're</font>

251
00:10:11,490 --> 00:10:15,720
interested in you're going to set up a

252
00:10:12,930 --> 00:10:18,359
call back and<font color="#E5E5E5"> that callback is its</font>

253
00:10:15,720 --> 00:10:20,010
global so it<font color="#E5E5E5"> has to handle every event</font>

254
00:10:18,360 --> 00:10:21,600
from every provider and handling might

255
00:10:20,010 --> 00:10:22,830
mean<font color="#CCCCCC"> you drop it or it might mean you</font>

256
00:10:21,600 --> 00:10:26,030
extract out a particular piece of

257
00:10:22,830 --> 00:10:28,920
information but it has handled them all

258
00:10:26,030 --> 00:10:31,020
you'll start your trace you process your

259
00:10:28,920 --> 00:10:33,180
event and stop the trace nothing

260
00:10:31,020 --> 00:10:34,620
revolutionary nothing really<font color="#CCCCCC"> fancy it's</font>

261
00:10:33,180 --> 00:10:43,109
pretty much like every other tracing

262
00:10:34,620 --> 00:10:44,550
technology so etw<font color="#E5E5E5"> made easy there's some</font>

263
00:10:43,110 --> 00:10:47,430
existing solutions that<font color="#CCCCCC"> I already kind</font>

264
00:10:44,550 --> 00:10:49,589
of talked about win32 event tracing API

265
00:10:47,430 --> 00:10:52,500
<font color="#CCCCCC">Comber cumbersome one into flexible</font>

266
00:10:49,590 --> 00:10:54,820
program like<font color="#CCCCCC"> it's 1992</font>

267
00:10:52,500 --> 00:10:57,040
system.diagnostics that eventing is

268
00:10:54,820 --> 00:10:59,080
unreliable we had a<font color="#E5E5E5"> lot of crashing</font>

269
00:10:57,040 --> 00:11:00,430
issues with it we don't use it<font color="#E5E5E5"> for</font>

270
00:10:59,080 --> 00:11:02,530
basically<font color="#E5E5E5"> anything anymore because of</font>

271
00:11:00,430 --> 00:11:05,170
the<font color="#E5E5E5"> problems there and trace event has</font>

272
00:11:02,530 --> 00:11:07,089
poor performance but not cpu<font color="#E5E5E5"> performance</font>

273
00:11:05,170 --> 00:11:08,800
it has poor performance in memory right

274
00:11:07,090 --> 00:11:10,870
if you create a managed object for every

275
00:11:08,800 --> 00:11:13,240
object or every event that comes through

276
00:11:10,870 --> 00:11:14,980
and you're processing 400 events per

277
00:11:13,240 --> 00:11:18,970
second you're going to end up<font color="#E5E5E5"> with a</font>

278
00:11:14,980 --> 00:11:22,110
memory<font color="#E5E5E5"> problem eventually and so that</font>

279
00:11:18,970 --> 00:11:25,440
kind<font color="#E5E5E5"> of led us to why we built Krabs etw</font>

280
00:11:22,110 --> 00:11:28,320
it's got<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be managed and native the</font>

281
00:11:25,440 --> 00:11:31,930
API the modern people plus for native

282
00:11:28,320 --> 00:11:33,910
it's intended to be<font color="#E5E5E5"> flexible and</font>

283
00:11:31,930 --> 00:11:36,069
intuitive so<font color="#CCCCCC"> I'll show you a demo in a</font>

284
00:11:33,910 --> 00:11:40,750
second that kind of describes the flow

285
00:11:36,070 --> 00:11:42,700
of like hopefully super logical I'm

286
00:11:40,750 --> 00:11:45,390
welcome or I welcome feedback on that

287
00:11:42,700 --> 00:11:48,250
particular point high performance and

288
00:11:45,390 --> 00:11:50,740
also<font color="#E5E5E5"> a goal of reliability right so we</font>

289
00:11:48,250 --> 00:11:53,350
run this for<font color="#E5E5E5"> example in sharepoint</font>

290
00:11:50,740 --> 00:11:55,090
online on around a<font color="#E5E5E5"> hundred thousand</font>

291
00:11:53,350 --> 00:11:57,370
machines and we generate about generate

292
00:11:55,090 --> 00:12:01,330
about<font color="#E5E5E5"> seven terabytes of data a day off</font>

293
00:11:57,370 --> 00:12:03,400
of<font color="#E5E5E5"> these etw sources that's Coast</font>

294
00:12:01,330 --> 00:12:06,160
filtering a little over five hundred

295
00:12:03,400 --> 00:12:10,770
billion events a day across the

296
00:12:06,160 --> 00:12:10,770
environment so it's doing<font color="#E5E5E5"> pretty good</font>

297
00:12:10,800 --> 00:12:15,339
we'll<font color="#E5E5E5"> talk about DNS lookup example one</font>

298
00:12:14,500 --> 00:12:17,560
thing that's really<font color="#E5E5E5"> hard to do on</font>

299
00:12:15,340 --> 00:12:18,940
Windows is to find out dns lookups as

300
00:12:17,560 --> 00:12:20,859
they occur<font color="#CCCCCC"> i'm not aware of another</font>

301
00:12:18,940 --> 00:12:23,110
source where<font color="#CCCCCC"> you can say hey what what</font>

302
00:12:20,860 --> 00:12:25,390
dns lookup occurred and get all the

303
00:12:23,110 --> 00:12:27,910
logging for that by default but there's

304
00:12:25,390 --> 00:12:30,430
a etw stream or a provider<font color="#CCCCCC"> that will</font>

305
00:12:27,910 --> 00:12:31,719
give you that information so up there on

306
00:12:30,430 --> 00:12:32,920
the on the number one we're going<font color="#E5E5E5"> to</font>

307
00:12:31,720 --> 00:12:36,160
make a filter we're<font color="#E5E5E5"> going to look for</font>

308
00:12:32,920 --> 00:12:39,040
two events 30 18 and 30 20 take my word

309
00:12:36,160 --> 00:12:43,120
<font color="#E5E5E5">for that those are interesting 3018 is</font>

310
00:12:39,040 --> 00:12:46,290
cash lookups and 30 20 is the hot look

311
00:12:43,120 --> 00:12:48,690
up like<font color="#E5E5E5"> you don't in the win</font><font color="#CCCCCC"> i net cash</font>

312
00:12:46,290 --> 00:12:51,899
number two setting up<font color="#E5E5E5"> a call back</font>

313
00:12:48,690 --> 00:12:53,610
nothing fancy there that first line with

314
00:12:51,899 --> 00:12:55,769
query is where we're finding out what

315
00:12:53,610 --> 00:12:57,300
the domain name<font color="#E5E5E5"> was that was fetched the</font>

316
00:12:55,769 --> 00:13:00,420
second line is just us getting what the

317
00:12:57,300 --> 00:13:02,849
response was from the<font color="#CCCCCC"> DNS server the</font>

318
00:13:00,420 --> 00:13:04,769
third line is us creating an<font color="#CCCCCC"> object a</font>

319
00:13:02,850 --> 00:13:07,139
provider object that represents the

320
00:13:04,769 --> 00:13:10,319
subscription to that given provider we

321
00:13:07,139 --> 00:13:13,199
think is and then we add the filter that

322
00:13:10,319 --> 00:13:15,180
filter is / provider you don't add it on

323
00:13:13,199 --> 00:13:16,769
the global level you add it / provider

324
00:13:15,180 --> 00:13:19,859
that way you can filter<font color="#E5E5E5"> down each</font>

325
00:13:16,769 --> 00:13:22,110
provider to the only the<font color="#E5E5E5"> things that you</font>

326
00:13:19,860 --> 00:13:23,190
care<font color="#CCCCCC"> about and that filtering happens in</font>

327
00:13:22,110 --> 00:13:25,170
the native layer so it never even

328
00:13:23,190 --> 00:13:28,560
bubbles up into starting to<font color="#E5E5E5"> create</font>

329
00:13:25,170 --> 00:13:31,529
managed<font color="#E5E5E5"> objects and then that last one</font>

330
00:13:28,560 --> 00:13:33,719
number<font color="#CCCCCC"> 4 we just make a trace object and</font>

331
00:13:31,529 --> 00:13:39,930
enable the provider on it and start your

332
00:13:33,720 --> 00:13:41,430
trace and go here's an example of the

333
00:13:39,930 --> 00:13:43,800
data of that program that<font color="#E5E5E5"> I just showed</font>

334
00:13:41,430 --> 00:13:46,709
you so at the top<font color="#E5E5E5"> there you see New York</font>

335
00:13:43,800 --> 00:13:48,479
Times<font color="#CCCCCC"> com that's me this is me fetching</font>

336
00:13:46,709 --> 00:13:51,660
New York Times calm and this was a whole

337
00:13:48,480 --> 00:13:55,019
a subset<font color="#CCCCCC"> of the resolutions that</font>

338
00:13:51,660 --> 00:13:58,350
occurred and so like there there's a

339
00:13:55,019 --> 00:14:00,180
quadruple a record or sorry a record

340
00:13:58,350 --> 00:14:03,149
quadruple a records they're the type

341
00:14:00,180 --> 00:14:07,489
colon 5 is the cname records for you

342
00:14:03,149 --> 00:14:09,930
know this CDM<font color="#E5E5E5"> their ad software or their</font>

343
00:14:07,490 --> 00:14:12,779
<font color="#CCCCCC">Adsense</font><font color="#E5E5E5"> and double click on add that</font>

344
00:14:09,930 --> 00:14:15,120
kind of stuff right<font color="#E5E5E5"> now I'm not aware of</font>

345
00:14:12,779 --> 00:14:16,980
any other way to do this in windows so

346
00:14:15,120 --> 00:14:19,199
if you know of a way to<font color="#E5E5E5"> do it I'd be</font>

347
00:14:16,980 --> 00:14:20,519
<font color="#CCCCCC">happy to talk the old way we used to do</font>

348
00:14:19,199 --> 00:14:22,139
it is scrape the<font color="#E5E5E5"> Lenni net cash</font>

349
00:14:20,519 --> 00:14:27,990
periodically which is actually kind of

350
00:14:22,139 --> 00:14:32,699
<font color="#E5E5E5">disk intensive on a big server so let's</font>

351
00:14:27,990 --> 00:14:34,709
revisit the forensic whitelist so we

352
00:14:32,699 --> 00:14:36,359
wanted<font color="#CCCCCC"> to know what dns lookups happens</font>

353
00:14:34,709 --> 00:14:38,699
with that bad eggsy at the very

354
00:14:36,360 --> 00:14:40,620
beginning we<font color="#E5E5E5"> already</font><font color="#CCCCCC"> looked</font><font color="#E5E5E5"> at that just</font>

355
00:14:38,699 --> 00:14:41,910
<font color="#E5E5E5">not right microsoft windows dns clients</font>

356
00:14:40,620 --> 00:14:44,130
is one source you<font color="#CCCCCC"> can get that</font>

357
00:14:41,910 --> 00:14:45,689
<font color="#E5E5E5">information what IP addresses we</font>

358
00:14:44,130 --> 00:14:46,889
connected to<font color="#CCCCCC"> how much data was</font>

359
00:14:45,689 --> 00:14:50,160
transmitted whether or not it<font color="#CCCCCC"> was</font>

360
00:14:46,889 --> 00:14:51,509
beaconing that's the colonel network

361
00:14:50,160 --> 00:14:52,910
provider will give us that data we kind

362
00:14:51,509 --> 00:14:57,750
of talked about that a little bit<font color="#E5E5E5"> too</font>

363
00:14:52,910 --> 00:14:59,640
<font color="#CCCCCC">dll that loaded the image load provider</font>

364
00:14:57,750 --> 00:15:02,520
what threads were created in other

365
00:14:59,640 --> 00:15:05,189
processes Colonel thread provider<font color="#E5E5E5"> w my</font>

366
00:15:02,520 --> 00:15:08,189
operations w my provider from the user

367
00:15:05,190 --> 00:15:09,900
mode side powershell functions that were

368
00:15:08,190 --> 00:15:12,050
called again we saw that in muscle in

369
00:15:09,900 --> 00:15:16,439
the microsoft message analyzer example

370
00:15:12,050 --> 00:15:19,979
and<font color="#CCCCCC"> i want to be clear these will not</font>

371
00:15:16,440 --> 00:15:21,360
<font color="#E5E5E5">give</font><font color="#CCCCCC"> you these are not detection xin it</font>

372
00:15:19,980 --> 00:15:23,280
of themselves you will have to process

373
00:15:21,360 --> 00:15:25,550
that data a little<font color="#CCCCCC"> bit and</font><font color="#E5E5E5"> it depends on</font>

374
00:15:23,280 --> 00:15:28,290
what detection you're trying to build so

375
00:15:25,550 --> 00:15:33,329
this<font color="#E5E5E5"> is these are ingredients as opposed</font>

376
00:15:28,290 --> 00:15:34,439
to a detection the addendum slides a

377
00:15:33,330 --> 00:15:36,120
little bit<font color="#CCCCCC"> information about Colonel</font>

378
00:15:34,440 --> 00:15:37,260
providers their special snowflakes if

379
00:15:36,120 --> 00:15:39,150
you're really really interested in what

380
00:15:37,260 --> 00:15:43,770
that means come find me afterward it's

381
00:15:39,150 --> 00:15:47,100
kind of it's dumb so how can you<font color="#CCCCCC"> use etw</font>

382
00:15:43,770 --> 00:15:50,340
in your environment<font color="#E5E5E5"> grabs is open source</font>

383
00:15:47,100 --> 00:15:52,860
under the MIT license we have the mutha

384
00:15:50,340 --> 00:15:56,220
both the c++ and managed api's are

385
00:15:52,860 --> 00:15:59,250
available there are nougat packages for

386
00:15:56,220 --> 00:16:01,770
both and that link don't worry i will

387
00:15:59,250 --> 00:16:04,589
have another better link later that's a

388
00:16:01,770 --> 00:16:07,400
shortened form power shell method

389
00:16:04,589 --> 00:16:10,050
auditor is a little program<font color="#CCCCCC"> I wrote for</font>

390
00:16:07,400 --> 00:16:12,569
<font color="#CCCCCC">Daniel Bohannon to play with from</font>

391
00:16:10,050 --> 00:16:13,829
mandiant he was really curious to see

392
00:16:12,570 --> 00:16:15,720
how it worked and I was like okay well

393
00:16:13,830 --> 00:16:17,370
here's a sample project but it also<font color="#E5E5E5"> is a</font>

394
00:16:15,720 --> 00:16:20,520
<font color="#E5E5E5">pretty good</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> am</font><font color="#CCCCCC"> a pretty good example</font>

395
00:16:17,370 --> 00:16:26,070
<font color="#CCCCCC">of how we detect power shell method</font>

396
00:16:20,520 --> 00:16:28,770
invocation today minus<font color="#CCCCCC"> the black list so</font>

397
00:16:26,070 --> 00:16:31,110
any questions you can get get<font color="#CCCCCC"> ahold of</font>

398
00:16:28,770 --> 00:16:33,990
<font color="#CCCCCC">me on twitter or</font><font color="#E5E5E5"> github and then that</font>

399
00:16:31,110 --> 00:16:37,820
top link<font color="#CCCCCC"> AKMs flashy TW will take us</font>

400
00:16:33,990 --> 00:16:40,589
take you<font color="#E5E5E5"> to the crab ddw github page and</font>

401
00:16:37,820 --> 00:16:44,150
<font color="#CCCCCC">akms / GTW demo it takes you to the</font>

402
00:16:40,589 --> 00:16:44,150
github page for that demo code I showed

403
00:16:44,270 --> 00:16:49,579
any questions comment

404
00:17:04,990 --> 00:17:16,240
sure so for<font color="#CCCCCC"> example our agents that we</font>

405
00:17:10,059 --> 00:17:19,209
run in the<font color="#E5E5E5"> opposite 65 today has for</font>

406
00:17:16,240 --> 00:17:22,390
sure phone online i want to say has 15

407
00:17:19,209 --> 00:17:25,540
<font color="#E5E5E5">user mode providers turned on and three</font>

408
00:17:22,390 --> 00:17:27,760
kernel mode providers so that's about<font color="#CCCCCC"> 18</font>

409
00:17:25,540 --> 00:17:32,050
providers the kernel mode providers of

410
00:17:27,760 --> 00:17:33,550
their own are their own thread we shoot

411
00:17:32,050 --> 00:17:35,830
for less than five percent of a single

412
00:17:33,550 --> 00:17:37,389
core in<font color="#E5E5E5"> cpu usage and that's generally</font>

413
00:17:35,830 --> 00:17:40,480
about where we are with the<font color="#E5E5E5"> filtering we</font>

414
00:17:37,390 --> 00:17:42,280
do so and that's that's accounting for

415
00:17:40,480 --> 00:17:43,809
the numbers i mentioned earlier<font color="#CCCCCC"> 100,000</font>

416
00:17:42,280 --> 00:17:46,470
<font color="#CCCCCC">machines there at seven terabytes a day</font>

417
00:17:43,809 --> 00:17:49,149
five hundred billion of them per day

418
00:17:46,470 --> 00:17:52,050
that's all shooting below<font color="#E5E5E5"> five percent</font>

419
00:17:49,150 --> 00:17:52,050
of a single core

420
00:17:56,900 --> 00:18:07,380
do what yeah we our goal was to never

421
00:18:04,980 --> 00:18:08,790
get noticed the perf team was surprised

422
00:18:07,380 --> 00:18:11,310
to find out that we had even deployed

423
00:18:08,790 --> 00:18:13,170
this thing we didn't tell them that<font color="#CCCCCC"> we</font>

424
00:18:11,310 --> 00:18:15,210
were<font color="#E5E5E5"> doing it better to ask for</font>

425
00:18:13,170 --> 00:18:16,800
forgiveness than permission and they

426
00:18:15,210 --> 00:18:18,830
said I mean you stay below one hundred

427
00:18:16,800 --> 00:18:22,710
percent of a single core we don't care

428
00:18:18,830 --> 00:18:26,550
and that's generous other groups<font color="#CCCCCC"> are not</font>

429
00:18:22,710 --> 00:18:27,900
<font color="#E5E5E5">quite so generous in this case but yeah</font>

430
00:18:26,550 --> 00:18:30,780
as opposed to this Mon I don't<font color="#E5E5E5"> have</font>

431
00:18:27,900 --> 00:18:32,190
numbers for performance on sis mom and

432
00:18:30,780 --> 00:18:33,660
I've gotten questions like why use this

433
00:18:32,190 --> 00:18:36,530
instead of system on this was kind of a

434
00:18:33,660 --> 00:18:39,210
build-your-own sis mom in our case we

435
00:18:36,530 --> 00:18:40,800
aren't allowed<font color="#E5E5E5"> to install this mom</font>

436
00:18:39,210 --> 00:18:44,580
because a product team doesn't back it

437
00:18:40,800 --> 00:18:45,810
and so VPS the VP in my group was like

438
00:18:44,580 --> 00:18:48,389
well you can't install the kernel driver

439
00:18:45,810 --> 00:18:50,490
for something that a beep that a product

440
00:18:48,390 --> 00:18:54,210
doesn't get a product team does<font color="#CCCCCC"> not back</font>

441
00:18:50,490 --> 00:18:56,400
right because<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> think I don't</font>

442
00:18:54,210 --> 00:18:58,440
<font color="#CCCCCC">think this moms Creator wants me to call</font>

443
00:18:56,400 --> 00:19:02,570
them<font color="#E5E5E5"> up at two in the morning when it</font>

444
00:18:58,440 --> 00:19:06,110
causes 16 machines to fall over right

445
00:19:02,570 --> 00:19:06,110
any<font color="#CCCCCC"> other questions</font>

446
00:19:08,760 --> 00:19:19,510
daily load seven terabytes a day across

447
00:19:14,290 --> 00:19:21,600
the environment anything else anyone

448
00:19:19,510 --> 00:19:21,600
else

449
00:19:25,260 --> 00:19:33,360
yep there is a separate agent that we

450
00:19:30,450 --> 00:19:35,160
use that<font color="#E5E5E5"> uploads so the way our agent</font>

451
00:19:33,360 --> 00:19:38,790
works is we write our distilled

452
00:19:35,160 --> 00:19:40,590
information so when we consume etw we

453
00:19:38,790 --> 00:19:42,960
don't generally<font color="#CCCCCC"> do a one for one event</font>

454
00:19:40,590 --> 00:19:44,939
generation what we do is we distill out

455
00:19:42,960 --> 00:19:48,000
information we think is interesting so

456
00:19:44,940 --> 00:19:51,480
like will do / process<font color="#CCCCCC"> net flow will</font>

457
00:19:48,000 --> 00:19:53,550
write that event<font color="#E5E5E5"> hourly / process to</font><font color="#CCCCCC"> the</font>

458
00:19:51,480 --> 00:19:55,590
security event log and then there's

459
00:19:53,550 --> 00:20:00,659
another program who is responsible<font color="#E5E5E5"> for</font>

460
00:19:55,590 --> 00:20:02,790
pushing that data off<font color="#CCCCCC"> the box in the old</font>

461
00:20:00,660 --> 00:20:05,040
way it was directly to our cold storage

462
00:20:02,790 --> 00:20:07,350
in the new way it goes through kind of

463
00:20:05,040 --> 00:20:09,600
<font color="#E5E5E5">actually similar to what Sam was talking</font>

464
00:20:07,350 --> 00:20:11,840
about in the first talk it pushes it to

465
00:20:09,600 --> 00:20:14,040
<font color="#E5E5E5">something kind of like</font><font color="#CCCCCC"> Kinesis that</font>

466
00:20:11,840 --> 00:20:16,740
aggregates it out to the correct<font color="#E5E5E5"> end</font>

467
00:20:14,040 --> 00:20:24,540
<font color="#E5E5E5">point so that we can have a hot store as</font>

468
00:20:16,740 --> 00:20:26,580
<font color="#CCCCCC">well as a cold storage mechanism yeah</font>

469
00:20:24,540 --> 00:20:28,409
security event log is not impossible to

470
00:20:26,580 --> 00:20:30,360
tamper with but it's relatively

471
00:20:28,410 --> 00:20:32,190
difficult that it's kind<font color="#E5E5E5"> of noisy to</font>

472
00:20:30,360 --> 00:20:35,790
touch it and so we consider it<font color="#E5E5E5"> a good</font>

473
00:20:32,190 --> 00:20:38,720
place to write to we set a limit of<font color="#E5E5E5"> 2</font>

474
00:20:35,790 --> 00:20:44,030
gigabytes and so and I think<font color="#CCCCCC"> are our</font>

475
00:20:38,720 --> 00:20:44,030
uploaders upload every five minutes so

476
00:20:50,330 --> 00:20:55,340
yeah less than<font color="#E5E5E5"> five percent of a single</font>

477
00:20:52,519 --> 00:20:58,399
core in production there are certain

478
00:20:55,340 --> 00:20:59,990
roles for example sequel does a lot<font color="#CCCCCC"> of</font>

479
00:20:58,399 --> 00:21:01,428
stuff that's<font color="#E5E5E5"> very intensive and a lot of</font>

480
00:20:59,990 --> 00:21:03,519
network traffic and so that once it's

481
00:21:01,429 --> 00:21:06,169
more at around ten or fifteen percent

482
00:21:03,519 --> 00:21:07,789
but it's an acceptable cost and the

483
00:21:06,169 --> 00:21:15,950
<font color="#CCCCCC">perfect team has</font><font color="#E5E5E5"> not come and yelled at</font>

484
00:21:07,789 --> 00:21:20,390
yelled at us yet for any<font color="#E5E5E5"> problems so VMs</font>

485
00:21:15,950 --> 00:21:22,580
are usually I want to say eight core 64

486
00:21:20,390 --> 00:21:24,889
gigs of<font color="#CCCCCC"> RAM that space p machines are</font>

487
00:21:22,580 --> 00:21:33,250
going to be bigger I mean they're big

488
00:21:24,889 --> 00:21:34,939
beefy machine yeah yeah anyone<font color="#E5E5E5"> else cool</font>

489
00:21:33,250 --> 00:21:38,609
thank you

490
00:21:34,940 --> 00:21:38,609
[Applause]

