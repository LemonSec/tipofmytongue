1
00:00:10,080 --> 00:00:12,719
all right well thank you very much I

2
00:00:12,719 --> 00:00:14,580
have to say one of my good friends match

3
00:00:14,580 --> 00:00:17,039
here is also presenting here and I was

4
00:00:17,039 --> 00:00:19,560
really hoping to be able to come and

5
00:00:19,560 --> 00:00:22,439
join you unfortunately I uh caught a

6
00:00:22,439 --> 00:00:25,439
case of the con crud last weekend and uh

7
00:00:25,439 --> 00:00:28,560
felt that this was the best worst

8
00:00:28,560 --> 00:00:32,520
alternative so this slide deck is

9
00:00:32,520 --> 00:00:34,559
was put together based on my experience

10
00:00:34,559 --> 00:00:36,180
that I had as an independent I.T

11
00:00:36,180 --> 00:00:38,520
security practitioner when management

12
00:00:38,520 --> 00:00:40,980
came to me and said we have an existing

13
00:00:40,980 --> 00:00:42,840
laugh project that's been failing for

14
00:00:42,840 --> 00:00:47,460
about three months we had 35 different

15
00:00:47,460 --> 00:00:49,620
web applications that we had to protect

16
00:00:49,620 --> 00:00:52,680
with the web application firewall and we

17
00:00:52,680 --> 00:00:54,960
simply were not making any traction I

18
00:00:54,960 --> 00:00:59,039
was brought in to this project to try to

19
00:00:59,039 --> 00:01:02,359
turn it around and to try to deploy 35

20
00:01:02,359 --> 00:01:05,760
wafts in under three months and this is

21
00:01:05,760 --> 00:01:08,159
the story about how ultimately

22
00:01:08,159 --> 00:01:10,740
I was successful we were successful as a

23
00:01:10,740 --> 00:01:11,520
team

24
00:01:11,520 --> 00:01:14,880
that being said I'm at Mikey K Brown on

25
00:01:14,880 --> 00:01:18,299
Twitter on my GitHub github.com Mikey K

26
00:01:18,299 --> 00:01:20,820
Brown I published this talk and many

27
00:01:20,820 --> 00:01:23,700
other of my talks I'm a fine smoker of

28
00:01:23,700 --> 00:01:26,159
Fine Meats and even finer cocktails in

29
00:01:26,159 --> 00:01:28,020
my spare time

30
00:01:28,020 --> 00:01:30,960
so let's get through and start to

31
00:01:30,960 --> 00:01:33,659
examine what is a laugh or a web

32
00:01:33,659 --> 00:01:36,240
application firewall now I'm not going

33
00:01:36,240 --> 00:01:37,920
to read to you this very technical

34
00:01:37,920 --> 00:01:40,680
definition to me a web application

35
00:01:40,680 --> 00:01:43,020
firewall or WAFF is a compute device

36
00:01:43,020 --> 00:01:47,100
that sits in between your web servers

37
00:01:47,100 --> 00:01:49,979
and your web users

38
00:01:49,979 --> 00:01:52,079
the web users will first make an

39
00:01:52,079 --> 00:01:54,540
encrypted connection between

40
00:01:54,540 --> 00:01:57,060
the or themselves and the web

41
00:01:57,060 --> 00:01:59,040
application firewall the web application

42
00:01:59,040 --> 00:02:01,820
firewall will go through and intercept

43
00:02:01,820 --> 00:02:05,399
decrypt inspect and then if it's chosen

44
00:02:05,399 --> 00:02:09,660
to move forward or if the policy allows

45
00:02:09,660 --> 00:02:11,879
that traffic to move forward the WAFF

46
00:02:11,879 --> 00:02:14,040
will generally re-encrypt that traffic

47
00:02:14,040 --> 00:02:15,840
generally TLS

48
00:02:15,840 --> 00:02:19,319
from the WAFF to the front-end web

49
00:02:19,319 --> 00:02:22,200
server so to me that is what a web

50
00:02:22,200 --> 00:02:24,599
application firewall looks like

51
00:02:24,599 --> 00:02:27,300
and this is one visualized you can see

52
00:02:27,300 --> 00:02:30,599
over here on our left side we have our

53
00:02:30,599 --> 00:02:33,660
user who happens to be in Ireland and

54
00:02:33,660 --> 00:02:35,160
they're wanting to go to my fictitious

55
00:02:35,160 --> 00:02:38,220
website and so when they do a DNS lookup

56
00:02:38,220 --> 00:02:40,160
they're given the IP address

57
00:02:40,160 --> 00:02:42,840
a.a.a.a now

58
00:02:42,840 --> 00:02:46,080
in this visualization I'm going through

59
00:02:46,080 --> 00:02:48,840
and I have a website that has a load

60
00:02:48,840 --> 00:02:50,340
balancer in front of the laughs that's

61
00:02:50,340 --> 00:02:51,780
because I want to be able to go through

62
00:02:51,780 --> 00:02:54,300
and do things like high availability so

63
00:02:54,300 --> 00:02:57,420
I terminate the public DNS record on the

64
00:02:57,420 --> 00:03:00,000
load balancer the load balancer will

65
00:03:00,000 --> 00:03:03,360
pick which and it could be one to many

66
00:03:03,360 --> 00:03:06,360
different laughs to send that traffic

67
00:03:06,360 --> 00:03:09,599
and usually at least the web balancers

68
00:03:09,599 --> 00:03:11,459
that I've used I've always used the

69
00:03:11,459 --> 00:03:13,260
sticky configuration that way if a

70
00:03:13,260 --> 00:03:15,840
specific user starts using laugh three

71
00:03:15,840 --> 00:03:18,239
it's always going to use with three as

72
00:03:18,239 --> 00:03:20,879
long as last 3 is available now from

73
00:03:20,879 --> 00:03:23,099
that end in this case this is an

74
00:03:23,099 --> 00:03:24,780
architectural decision

75
00:03:24,780 --> 00:03:27,900
in general you can have most web

76
00:03:27,900 --> 00:03:30,120
application firewalls that I've played

77
00:03:30,120 --> 00:03:32,040
with have the ability have the

78
00:03:32,040 --> 00:03:35,159
capability to function as a load

79
00:03:35,159 --> 00:03:38,159
balancer themselves however in this

80
00:03:38,159 --> 00:03:40,440
example I've gone through and put a load

81
00:03:40,440 --> 00:03:43,560
of balancer in front of the application

82
00:03:43,560 --> 00:03:46,500
or the web application servers and the

83
00:03:46,500 --> 00:03:50,220
reason why I did that is sometimes I

84
00:03:50,220 --> 00:03:52,980
want to be able to do I want to be able

85
00:03:52,980 --> 00:03:54,900
to put different policies different

86
00:03:54,900 --> 00:03:58,500
access based on whether it's coming from

87
00:03:58,500 --> 00:04:01,080
say external users or maybe internal use

88
00:04:01,080 --> 00:04:03,599
so that might be one reason why you go

89
00:04:03,599 --> 00:04:05,940
through and you have a load balancer in

90
00:04:05,940 --> 00:04:08,760
front of your front-end web devs

91
00:04:08,760 --> 00:04:10,080
so

92
00:04:10,080 --> 00:04:14,280
as I said I came on to this project and

93
00:04:14,280 --> 00:04:16,500
day one I sat down with the various

94
00:04:16,500 --> 00:04:18,418
people the I started off with the

95
00:04:18,418 --> 00:04:21,060
project though or the project manager I

96
00:04:21,060 --> 00:04:23,040
understood what were the challenges

97
00:04:23,040 --> 00:04:25,320
there I went through and I talked to the

98
00:04:25,320 --> 00:04:27,060
people actually working on it figured

99
00:04:27,060 --> 00:04:28,680
out what was going on there and then I

100
00:04:28,680 --> 00:04:31,080
went grabbed a big old bottle of bourbon

101
00:04:31,080 --> 00:04:33,900
sat underneath a tree with my board of

102
00:04:33,900 --> 00:04:35,820
drawing and I started to identify all

103
00:04:35,820 --> 00:04:37,500
the different steps that I would have to

104
00:04:37,500 --> 00:04:41,040
do in order to be successful

105
00:04:41,040 --> 00:04:43,680
and I want to acknowledge many of my

106
00:04:43,680 --> 00:04:46,800
slides are very dense and that's on

107
00:04:46,800 --> 00:04:48,660
purpose because I want you if you find

108
00:04:48,660 --> 00:04:50,880
this talk interesting I want you to be

109
00:04:50,880 --> 00:04:53,040
able to download the slide deck to take

110
00:04:53,040 --> 00:04:55,440
it offline and to have it be something

111
00:04:55,440 --> 00:04:57,900
that is useful for you

112
00:04:57,900 --> 00:05:00,360
and what I learned

113
00:05:00,360 --> 00:05:03,840
from that day from my meditation was I

114
00:05:03,840 --> 00:05:06,360
had identified what parts

115
00:05:06,360 --> 00:05:08,400
of building a web application firewall

116
00:05:08,400 --> 00:05:10,680
were going to come easy to me

117
00:05:10,680 --> 00:05:12,419
I realized what parts were going to come

118
00:05:12,419 --> 00:05:14,699
a little bit harder

119
00:05:14,699 --> 00:05:17,400
you see a good it security program

120
00:05:17,400 --> 00:05:20,759
should touch all aspects of it and I.T

121
00:05:20,759 --> 00:05:22,080
security

122
00:05:22,080 --> 00:05:23,280
and

123
00:05:23,280 --> 00:05:24,960
there's

124
00:05:24,960 --> 00:05:28,800
based on how I came into it who has help

125
00:05:28,800 --> 00:05:30,000
desk

126
00:05:30,000 --> 00:05:33,120
to server admin to network admin to

127
00:05:33,120 --> 00:05:35,699
full-time I.T security person so I'm

128
00:05:35,699 --> 00:05:37,080
really good at like the Enterprise

129
00:05:37,080 --> 00:05:39,000
architecture I'm really good at standing

130
00:05:39,000 --> 00:05:41,039
up new servers I'm really good at the

131
00:05:41,039 --> 00:05:44,220
networking components where am I weakest

132
00:05:44,220 --> 00:05:47,039
if my application security now that

133
00:05:47,039 --> 00:05:48,720
doesn't mean I can't do application

134
00:05:48,720 --> 00:05:51,960
security things but what it means is I

135
00:05:51,960 --> 00:05:54,479
have to spend more effort to go through

136
00:05:54,479 --> 00:05:56,580
and to do application security than

137
00:05:56,580 --> 00:05:58,080
something that's more naturally in my

138
00:05:58,080 --> 00:06:00,500
wheelhouse

139
00:06:00,539 --> 00:06:02,460
and so I thought about

140
00:06:02,460 --> 00:06:06,479
Russ the person that was leading

141
00:06:06,479 --> 00:06:08,160
this project

142
00:06:08,160 --> 00:06:09,600
and it was

143
00:06:09,600 --> 00:06:12,180
something became very clear to me

144
00:06:12,180 --> 00:06:14,940
where I was my strongest

145
00:06:14,940 --> 00:06:18,240
he was his weakest and where I am my

146
00:06:18,240 --> 00:06:19,320
weakest

147
00:06:19,320 --> 00:06:21,960
that's how he got into I.T was through

148
00:06:21,960 --> 00:06:24,919
application development so app Dev app

149
00:06:24,919 --> 00:06:29,039
devsecops that comes natural to us

150
00:06:29,039 --> 00:06:32,639
and so that got me thinking you know we

151
00:06:32,639 --> 00:06:34,520
have been trying to push

152
00:06:34,520 --> 00:06:38,580
one person to do all of the tasks and I

153
00:06:38,580 --> 00:06:40,080
thought that just doesn't make sense

154
00:06:40,080 --> 00:06:41,880
we're not setting each other up for

155
00:06:41,880 --> 00:06:45,780
success and so what I did was I pivoted

156
00:06:45,780 --> 00:06:47,039
I

157
00:06:47,039 --> 00:06:51,240
drew a very crude example of what became

158
00:06:51,240 --> 00:06:55,139
known as the build tune support model

159
00:06:55,139 --> 00:06:56,880
and

160
00:06:56,880 --> 00:06:59,520
I thought I'd hit on something dividing

161
00:06:59,520 --> 00:07:01,979
the laugh it deployment into three

162
00:07:01,979 --> 00:07:03,120
stages

163
00:07:03,120 --> 00:07:06,660
the build the tune and the support

164
00:07:06,660 --> 00:07:09,600
and the way you use this methodology is

165
00:07:09,600 --> 00:07:12,979
you have ideally

166
00:07:15,900 --> 00:07:19,620
any resource or more in each of these

167
00:07:19,620 --> 00:07:22,620
three teams from your deployment side

168
00:07:22,620 --> 00:07:25,199
and you start from the bottom and moving

169
00:07:25,199 --> 00:07:28,500
up and once you pass the top of one

170
00:07:28,500 --> 00:07:31,500
phase then it gets kicked over that gets

171
00:07:31,500 --> 00:07:34,319
kicked over to the next vertical so

172
00:07:34,319 --> 00:07:36,740
foreign

173
00:07:42,020 --> 00:07:43,800
outlining the clear roles and

174
00:07:43,800 --> 00:07:45,479
responsibilities as you can see I've had

175
00:07:45,479 --> 00:07:48,000
them listed here in or to the right of

176
00:07:48,000 --> 00:07:49,800
each step and we're going to finish out

177
00:07:49,800 --> 00:07:52,440
with some architectural considerations

178
00:07:52,440 --> 00:07:55,080
so I jokingly well somewhat jokingly say

179
00:07:55,080 --> 00:07:58,560
that building a web application firewall

180
00:07:58,560 --> 00:08:01,740
is one of the worst projects that I've

181
00:08:01,740 --> 00:08:04,500
actually ever done in fact you'll notice

182
00:08:04,500 --> 00:08:07,440
a running joke in the transition slides

183
00:08:07,440 --> 00:08:11,039
now why is that to me

184
00:08:11,039 --> 00:08:13,500
it's because

185
00:08:13,500 --> 00:08:15,960
you have so many disciplines to have to

186
00:08:15,960 --> 00:08:19,919
converge in one place in my view a WAFF

187
00:08:19,919 --> 00:08:22,620
has a very high total cost of ownership

188
00:08:22,620 --> 00:08:25,259
and we need to be open and honest when

189
00:08:25,259 --> 00:08:27,539
we talk to management about that

190
00:08:27,539 --> 00:08:29,819
we're telling our application developers

191
00:08:29,819 --> 00:08:32,099
many of them which are in some time

192
00:08:32,099 --> 00:08:34,320
incentivized by thought by deed by

193
00:08:34,320 --> 00:08:36,659
action by the amount of their bonus by

194
00:08:36,659 --> 00:08:39,958
what by system uptime now I.T Security

195
00:08:39,958 --> 00:08:42,059
is coming to them and saying we're going

196
00:08:42,059 --> 00:08:44,580
to put the device that the only reason

197
00:08:44,580 --> 00:08:46,920
that it exists is that it goes through

198
00:08:46,920 --> 00:08:49,260
it intercepts your traffic and it makes

199
00:08:49,260 --> 00:08:53,160
permit deny decisions on your traffic

200
00:08:53,160 --> 00:08:54,959
where is their head and immediately

201
00:08:54,959 --> 00:08:56,700
going to go what if it makes the wrong

202
00:08:56,700 --> 00:08:58,440
call what if it takes down production

203
00:08:58,440 --> 00:09:01,560
what if it gets in the way and becomes a

204
00:09:01,560 --> 00:09:04,080
blocker so we need to go through and we

205
00:09:04,080 --> 00:09:07,560
need to show maturity we need to earn

206
00:09:07,560 --> 00:09:09,360
their trust we need to be able to

207
00:09:09,360 --> 00:09:12,720
clearly Define what a post-sdlc life

208
00:09:12,720 --> 00:09:15,600
cycle under a wrath looks like we had

209
00:09:15,600 --> 00:09:17,760
conflicts with work that was already in

210
00:09:17,760 --> 00:09:20,640
the app Dev pipeline stuff that we were

211
00:09:20,640 --> 00:09:22,860
not aware of and now we're asking them

212
00:09:22,860 --> 00:09:26,820
to go through and to give more hours to

213
00:09:26,820 --> 00:09:30,240
IC I.T security that isn't meeting their

214
00:09:30,240 --> 00:09:31,800
goals that they've already committed to

215
00:09:31,800 --> 00:09:33,779
of course a lot of this was about

216
00:09:33,779 --> 00:09:36,240
winning the trust from the app Dev team

217
00:09:36,240 --> 00:09:38,899
and this one caught me by surprise

218
00:09:38,899 --> 00:09:41,940
because I don't run in the devsecops

219
00:09:41,940 --> 00:09:43,440
world a lot

220
00:09:43,440 --> 00:09:45,300
I found out that not all of our

221
00:09:45,300 --> 00:09:47,880
environments were equal when I'm talking

222
00:09:47,880 --> 00:09:50,339
about feature by feature there was one

223
00:09:50,339 --> 00:09:53,160
environment or there's one company that

224
00:09:53,160 --> 00:09:55,680
we were putting laughs in where their

225
00:09:55,680 --> 00:09:58,500
lowest level environment they had five

226
00:09:58,500 --> 00:10:01,620
different versions of it and certain

227
00:10:01,620 --> 00:10:03,899
functionality was only present in one or

228
00:10:03,899 --> 00:10:06,180
two of those so

229
00:10:06,180 --> 00:10:08,940
that made it really challenging and we

230
00:10:08,940 --> 00:10:11,640
ended up not deploying to that lowest

231
00:10:11,640 --> 00:10:13,260
level environment because it wasn't

232
00:10:13,260 --> 00:10:15,779
uniform it wasn't representative of the

233
00:10:15,779 --> 00:10:17,640
higher level environments

234
00:10:17,640 --> 00:10:20,459
and finally how do we put the WAFF in

235
00:10:20,459 --> 00:10:23,040
line typically you can do this one of

236
00:10:23,040 --> 00:10:26,459
two ways either leverage DNS or you can

237
00:10:26,459 --> 00:10:29,100
go through and you can physically put

238
00:10:29,100 --> 00:10:32,519
the actual laugh in bit or

239
00:10:32,519 --> 00:10:35,420
inline of live Network traffic

240
00:10:35,420 --> 00:10:38,580
personally I prefer DNS it makes it much

241
00:10:38,580 --> 00:10:40,800
more easier much more graceful to put

242
00:10:40,800 --> 00:10:42,600
the laugh in line and take it out of

243
00:10:42,600 --> 00:10:45,740
line if needed

244
00:10:45,860 --> 00:10:48,420
so let's talk about the teams that

245
00:10:48,420 --> 00:10:50,100
you're going to need

246
00:10:50,100 --> 00:10:51,600
well first you're going to need someone

247
00:10:51,600 --> 00:10:52,860
on the build team not someone like

248
00:10:52,860 --> 00:10:54,600
myself somebody that understands

249
00:10:54,600 --> 00:10:56,399
networking I.T architecture Cloud

250
00:10:56,399 --> 00:10:59,459
architecture and understands how do we

251
00:10:59,459 --> 00:11:02,399
bring new technologies into our

252
00:11:02,399 --> 00:11:04,380
environment how do we get a server and

253
00:11:04,380 --> 00:11:07,079
turned up how do we go through and

254
00:11:07,079 --> 00:11:09,240
navigate all of the Change Control all

255
00:11:09,240 --> 00:11:11,820
of that bureaucracy

256
00:11:11,820 --> 00:11:13,380
next you're going to need a tuning

257
00:11:13,380 --> 00:11:15,300
resource and this is somebody that's

258
00:11:15,300 --> 00:11:17,180
going to need to understand application

259
00:11:17,180 --> 00:11:21,540
development devsecops app Dev knows how

260
00:11:21,540 --> 00:11:25,019
to respond and remediate vulnerabilities

261
00:11:25,019 --> 00:11:27,600
and finally we're going to need someone

262
00:11:27,600 --> 00:11:29,279
at the end of the end of the day because

263
00:11:29,279 --> 00:11:31,680
the build and the tune resources

264
00:11:31,680 --> 00:11:34,200
at some point in time they're going to

265
00:11:34,200 --> 00:11:35,519
leave

266
00:11:35,519 --> 00:11:37,620
so we need to build

267
00:11:37,620 --> 00:11:39,480
as we're building and as we're tuning

268
00:11:39,480 --> 00:11:42,240
the actual support team skills so that

269
00:11:42,240 --> 00:11:46,019
they can build care maintain these web

270
00:11:46,019 --> 00:11:48,600
application firewalls because these are

271
00:11:48,600 --> 00:11:50,760
critical devices

272
00:11:50,760 --> 00:11:53,040
now on team application

273
00:11:53,040 --> 00:11:54,480
we're going to need the application

274
00:11:54,480 --> 00:11:56,339
owner generally this will be a manager

275
00:11:56,339 --> 00:12:00,240
or an architect of an application they

276
00:12:00,240 --> 00:12:02,820
don't need to be technical but they're

277
00:12:02,820 --> 00:12:04,200
going to be the ones that are usually

278
00:12:04,200 --> 00:12:06,420
held accountable for system uptime or

279
00:12:06,420 --> 00:12:09,060
other key performance indicators they

280
00:12:09,060 --> 00:12:10,680
need to be able to pull in the correct

281
00:12:10,680 --> 00:12:13,620
technical people if there is an issue or

282
00:12:13,620 --> 00:12:15,959
if we need assistance we're going to

283
00:12:15,959 --> 00:12:17,640
need dedicated application developers

284
00:12:17,640 --> 00:12:20,279
people that really understand how their

285
00:12:20,279 --> 00:12:22,320
environment works so that when we get an

286
00:12:22,320 --> 00:12:23,519
alert

287
00:12:23,519 --> 00:12:25,860
we can partner with them and say hey is

288
00:12:25,860 --> 00:12:28,740
this the application running normally

289
00:12:28,740 --> 00:12:30,480
or is this something that really does

290
00:12:30,480 --> 00:12:34,019
look kind of malicious to us so

291
00:12:34,019 --> 00:12:37,500
one of the things that we really learned

292
00:12:37,500 --> 00:12:39,899
early on is the importance of both the

293
00:12:39,899 --> 00:12:42,360
application developers as well as the

294
00:12:42,360 --> 00:12:44,579
testers getting them in

295
00:12:44,579 --> 00:12:48,240
in terms of being in the meetings being

296
00:12:48,240 --> 00:12:50,820
part of the process getting them excited

297
00:12:50,820 --> 00:12:54,839
about this stuff and finally the testers

298
00:12:54,839 --> 00:12:57,480
we need to go through and we need to

299
00:12:57,480 --> 00:13:00,240
have both a

300
00:13:00,240 --> 00:13:03,060
a volumetric appropriate amount of

301
00:13:03,060 --> 00:13:05,100
testing as well as diversity of

302
00:13:05,100 --> 00:13:08,399
functionality testing one of the main

303
00:13:08,399 --> 00:13:10,860
mistakes that we made in one of our

304
00:13:10,860 --> 00:13:14,220
early wafts is we focused on the actual

305
00:13:14,220 --> 00:13:16,980
alerts that happened the most often and

306
00:13:16,980 --> 00:13:18,420
so when

307
00:13:18,420 --> 00:13:21,540
we had that alert that only happened you

308
00:13:21,540 --> 00:13:22,920
know once every month or once every

309
00:13:22,920 --> 00:13:25,980
other month in our case it was an ACH

310
00:13:25,980 --> 00:13:28,019
chargeback

311
00:13:28,019 --> 00:13:29,880
that functionality

312
00:13:29,880 --> 00:13:31,680
was

313
00:13:31,680 --> 00:13:34,500
seen as a vulnerability and so when it

314
00:13:34,500 --> 00:13:37,139
happened the waft blocked it and if you

315
00:13:37,139 --> 00:13:39,420
don't know give a very short time frame

316
00:13:39,420 --> 00:13:41,880
that if you do have to do an ACH charge

317
00:13:41,880 --> 00:13:44,519
back legally it has to be done very

318
00:13:44,519 --> 00:13:46,980
quickly so that required us to go

319
00:13:46,980 --> 00:13:49,980
through and to have to get with the

320
00:13:49,980 --> 00:13:53,040
application developers the wav team and

321
00:13:53,040 --> 00:13:56,100
find out was that block was it really us

322
00:13:56,100 --> 00:13:58,800
and if so why did we go through and why

323
00:13:58,800 --> 00:13:59,880
didn't we catch it in a lower

324
00:13:59,880 --> 00:14:01,920
environment in our case that

325
00:14:01,920 --> 00:14:04,440
functionality was never tested in lower

326
00:14:04,440 --> 00:14:05,880
environments there was no way that we

327
00:14:05,880 --> 00:14:08,399
could have caught it and so

328
00:14:08,399 --> 00:14:11,279
that taught us the lesson that moving

329
00:14:11,279 --> 00:14:13,800
forward we needed to test both diversity

330
00:14:13,800 --> 00:14:17,160
of traffic and volume of traffic

331
00:14:17,160 --> 00:14:18,899
and that's going to be a running phase

332
00:14:18,899 --> 00:14:22,260
with this talk so let's talk about the

333
00:14:22,260 --> 00:14:24,600
best phase of the build tune support and

334
00:14:24,600 --> 00:14:27,180
of course that's the build phase so our

335
00:14:27,180 --> 00:14:28,560
first step is setting up our

336
00:14:28,560 --> 00:14:32,040
architecture and This Is Us defining how

337
00:14:32,040 --> 00:14:34,440
our wafts are going to work how we're

338
00:14:34,440 --> 00:14:36,540
going to deploy them what are we trying

339
00:14:36,540 --> 00:14:39,060
to do with them and so on top of just

340
00:14:39,060 --> 00:14:41,279
building out your overall laugh

341
00:14:41,279 --> 00:14:43,560
architecture you need to think in our

342
00:14:43,560 --> 00:14:46,560
case we had to have separate supporting

343
00:14:46,560 --> 00:14:50,459
a Waf systems to go through and to allow

344
00:14:50,459 --> 00:14:52,740
centralized management centralized

345
00:14:52,740 --> 00:14:55,560
logging as well as licensing

346
00:14:55,560 --> 00:14:57,620
and one of the mistakes that was made

347
00:14:57,620 --> 00:15:00,540
was not understanding the functionality

348
00:15:00,540 --> 00:15:04,079
of say the licensing server any laugh

349
00:15:04,079 --> 00:15:06,720
that we licensed would need to be able

350
00:15:06,720 --> 00:15:09,959
to talk to each of these three

351
00:15:09,959 --> 00:15:13,199
systems so does it make sense to put

352
00:15:13,199 --> 00:15:14,940
these systems

353
00:15:14,940 --> 00:15:19,199
on an internal DM or an internal VLAN

354
00:15:19,199 --> 00:15:21,540
initially that's where they were placed

355
00:15:21,540 --> 00:15:24,139
but then we found out that certain

356
00:15:24,139 --> 00:15:26,820
say cloud native apps that we were

357
00:15:26,820 --> 00:15:28,740
trying to put in they were not able to

358
00:15:28,740 --> 00:15:31,019
reach those because there was no network

359
00:15:31,019 --> 00:15:33,060
connection so how do we work around that

360
00:15:33,060 --> 00:15:35,100
so we had to get a little bit creative

361
00:15:35,100 --> 00:15:37,260
with reverse proxies but you know this

362
00:15:37,260 --> 00:15:38,940
is all part of the discovery process and

363
00:15:38,940 --> 00:15:40,980
we want to make sure that within our

364
00:15:40,980 --> 00:15:43,019
architecture we fully flush out all of

365
00:15:43,019 --> 00:15:45,000
the use cases that we're going to go

366
00:15:45,000 --> 00:15:48,000
through and we're going to need

367
00:15:48,000 --> 00:15:50,699
the next phase really talks about going

368
00:15:50,699 --> 00:15:52,740
through and getting and starting to

369
00:15:52,740 --> 00:15:55,019
build that partnership with the app

370
00:15:55,019 --> 00:15:57,959
owner the app developers to really

371
00:15:57,959 --> 00:16:01,139
understand how that application works

372
00:16:01,139 --> 00:16:03,959
both today and then communicate a

373
00:16:03,959 --> 00:16:06,360
unified vision of how that environment

374
00:16:06,360 --> 00:16:09,839
will work in the future so for us we

375
00:16:09,839 --> 00:16:11,579
created what we called implementation

376
00:16:11,579 --> 00:16:13,920
guides and this was critical for us this

377
00:16:13,920 --> 00:16:17,579
was a key thing that I started because I

378
00:16:17,579 --> 00:16:20,940
realized we weren't winning Trust

379
00:16:20,940 --> 00:16:25,199
and I wanted to prove by thought by deed

380
00:16:25,199 --> 00:16:28,740
by action that we are professional we

381
00:16:28,740 --> 00:16:30,240
have a plan and this is how we're going

382
00:16:30,240 --> 00:16:32,940
to implement a laugh for your

383
00:16:32,940 --> 00:16:35,459
environment so these

384
00:16:35,459 --> 00:16:37,740
implementation guides it was a bunch of

385
00:16:37,740 --> 00:16:39,899
documentation it started out with an

386
00:16:39,899 --> 00:16:42,420
executive summary what is a laugh then

387
00:16:42,420 --> 00:16:44,459
it had a section how does this

388
00:16:44,459 --> 00:16:46,860
environment look today and we would

389
00:16:46,860 --> 00:16:51,240
leverage design documentation from the

390
00:16:51,240 --> 00:16:53,339
Apple application owner application

391
00:16:53,339 --> 00:16:55,500
developers we had described the

392
00:16:55,500 --> 00:16:57,839
environment we get their approval yes

393
00:16:57,839 --> 00:17:00,000
that's how it looks in our environment

394
00:17:00,000 --> 00:17:03,120
and then we create a a formal overview

395
00:17:03,120 --> 00:17:05,819
this is how we're going to implement

396
00:17:05,819 --> 00:17:08,160
a web application

397
00:17:08,160 --> 00:17:10,980
the rest of the document was going

398
00:17:10,980 --> 00:17:13,199
through each phase within the build tune

399
00:17:13,199 --> 00:17:15,780
support document

400
00:17:15,780 --> 00:17:18,900
and it's called out each section

401
00:17:18,900 --> 00:17:22,140
what was needed what tasks were be were

402
00:17:22,140 --> 00:17:25,439
to be done who had what roles and

403
00:17:25,439 --> 00:17:29,460
responsibilities what the slas were and

404
00:17:29,460 --> 00:17:31,020
whenever possible we added

405
00:17:31,020 --> 00:17:33,900
visualizations a lot of these sections

406
00:17:33,900 --> 00:17:35,400
actually would go through and have a

407
00:17:35,400 --> 00:17:36,380
table

408
00:17:36,380 --> 00:17:39,240
for each of the environments that we're

409
00:17:39,240 --> 00:17:41,100
deploying into it's usually like a test

410
00:17:41,100 --> 00:17:45,660
stage prod and so we would fill out and

411
00:17:45,660 --> 00:17:48,059
this is before we built a single weft we

412
00:17:48,059 --> 00:17:50,940
build out the entire configuration in

413
00:17:50,940 --> 00:17:53,640
this implementation guide so that we're

414
00:17:53,640 --> 00:17:56,039
being open or being transparent we're

415
00:17:56,039 --> 00:17:58,140
proving to the application owners and

416
00:17:58,140 --> 00:17:59,520
application developers that we haven't

417
00:17:59,520 --> 00:18:01,919
but what are we also doing

418
00:18:01,919 --> 00:18:04,380
we're also going through and making it

419
00:18:04,380 --> 00:18:07,679
very simple for me to communicate how

420
00:18:07,679 --> 00:18:09,059
this environment was built in a

421
00:18:09,059 --> 00:18:10,500
repeatable way

422
00:18:10,500 --> 00:18:13,679
to not only the tuning team but also to

423
00:18:13,679 --> 00:18:16,020
the support team this document could be

424
00:18:16,020 --> 00:18:19,380
used by or used to give to Auditors to

425
00:18:19,380 --> 00:18:22,260
validate how is this website this web

426
00:18:22,260 --> 00:18:24,539
application being protected by a WAP it

427
00:18:24,539 --> 00:18:27,419
could be used by a support member coming

428
00:18:27,419 --> 00:18:30,059
on figuring out okay how do I support

429
00:18:30,059 --> 00:18:32,760
this specific web environment so this

430
00:18:32,760 --> 00:18:35,460
one document I think it was the key

431
00:18:35,460 --> 00:18:38,760
enabler to allow us to go through and to

432
00:18:38,760 --> 00:18:41,580
roll out quite quickly and that's one of

433
00:18:41,580 --> 00:18:43,500
the interesting things is we had to go

434
00:18:43,500 --> 00:18:45,299
slow in building out this implementation

435
00:18:45,299 --> 00:18:48,780
guide so that we could go fast later and

436
00:18:48,780 --> 00:18:51,120
truthfully we rolled out over 35 web

437
00:18:51,120 --> 00:18:53,700
application firewalls in three months

438
00:18:53,700 --> 00:18:56,160
using this methodology

439
00:18:56,160 --> 00:18:57,900
so once we go through and we get this

440
00:18:57,900 --> 00:18:59,760
implementation guide

441
00:18:59,760 --> 00:19:01,440
we're eventually going to gain the

442
00:19:01,440 --> 00:19:03,000
agreement of the app owner and the app

443
00:19:03,000 --> 00:19:05,820
Dev that yeah we think we have a solid

444
00:19:05,820 --> 00:19:07,440
plan let's move forward that doesn't

445
00:19:07,440 --> 00:19:08,940
mean that the plan doesn't change

446
00:19:08,940 --> 00:19:10,860
because these implementation guides they

447
00:19:10,860 --> 00:19:13,500
are living breathing documents they're

448
00:19:13,500 --> 00:19:15,120
still in use today

449
00:19:15,120 --> 00:19:18,299
but once we get the formal approval for

450
00:19:18,299 --> 00:19:19,740
the design

451
00:19:19,740 --> 00:19:21,960
now comes the fun part the cold Builder

452
00:19:21,960 --> 00:19:24,120
where I work with the various people

453
00:19:24,120 --> 00:19:27,360
that I need to to either

454
00:19:27,360 --> 00:19:29,700
build the new web application firewall

455
00:19:29,700 --> 00:19:32,340
now in our case we went through and

456
00:19:32,340 --> 00:19:35,520
rebuilt them or waxed two ways one was

457
00:19:35,520 --> 00:19:38,400
company provided virtual images that

458
00:19:38,400 --> 00:19:41,940
were are on-prem the other one was arm

459
00:19:41,940 --> 00:19:44,400
templates in the cloud

460
00:19:44,400 --> 00:19:46,080
so we would go through we would roll out

461
00:19:46,080 --> 00:19:48,720
an initial web application policy we

462
00:19:48,720 --> 00:19:50,880
would do the configuration of the WAFF

463
00:19:50,880 --> 00:19:53,520
in our case you know we had all of those

464
00:19:53,520 --> 00:19:56,460
parameters already defined and agreed to

465
00:19:56,460 --> 00:19:58,440
within the implementation guide so that

466
00:19:58,440 --> 00:19:59,700
was pretty simple

467
00:19:59,700 --> 00:20:03,260
and at some point we're ready to enable

468
00:20:03,260 --> 00:20:07,679
the laugh or excuse me the app Dev team

469
00:20:07,679 --> 00:20:09,900
as well as the testers to go through and

470
00:20:09,900 --> 00:20:12,799
modify their host files so that only

471
00:20:12,799 --> 00:20:15,900
that or only their traffic could be

472
00:20:15,900 --> 00:20:17,640
routed through the web application

473
00:20:17,640 --> 00:20:19,559
firewall so that they could do some

474
00:20:19,559 --> 00:20:22,200
testing now it was during this time is

475
00:20:22,200 --> 00:20:24,120
when we first started to have the tuning

476
00:20:24,120 --> 00:20:26,520
resource start to work with app Dev and

477
00:20:26,520 --> 00:20:28,620
testers just to validate the things

478
00:20:28,620 --> 00:20:31,559
we're working and once again both volume

479
00:20:31,559 --> 00:20:34,559
of traffic and diversity of traffic is

480
00:20:34,559 --> 00:20:37,380
critical while it might make sense to

481
00:20:37,380 --> 00:20:39,960
prioritize resolving those alerts that

482
00:20:39,960 --> 00:20:43,320
are happening more frequently also look

483
00:20:43,320 --> 00:20:46,320
at the alerts that only happen very

484
00:20:46,320 --> 00:20:47,940
rarely because

485
00:20:47,940 --> 00:20:49,980
those could actually be critical

486
00:20:49,980 --> 00:20:52,320
functionality that isn't used often in

487
00:20:52,320 --> 00:20:54,299
your environment

488
00:20:54,299 --> 00:20:56,039
at some point

489
00:20:56,039 --> 00:20:58,140
the app owners and the testers are going

490
00:20:58,140 --> 00:21:00,919
to say yeah everything looks to be good

491
00:21:00,919 --> 00:21:04,200
and that's where we get ready to go in

492
00:21:04,200 --> 00:21:05,940
line once we get the app owner's

493
00:21:05,940 --> 00:21:07,020
approval

494
00:21:07,020 --> 00:21:09,000
to go in line in a learning or

495
00:21:09,000 --> 00:21:12,660
transparent mode we'll get a

496
00:21:12,660 --> 00:21:16,740
a date will get the needed resources and

497
00:21:16,740 --> 00:21:19,500
I would do this via an implementation

498
00:21:19,500 --> 00:21:21,240
bridge in fact at the end of this

499
00:21:21,240 --> 00:21:23,940
presentation I've got all of that laid

500
00:21:23,940 --> 00:21:25,440
out for you

501
00:21:25,440 --> 00:21:28,080
and it was a very kind of informal

502
00:21:28,080 --> 00:21:29,700
meeting so I'd open it up about 10

503
00:21:29,700 --> 00:21:31,860
minutes before five minutes before our

504
00:21:31,860 --> 00:21:34,140
implementation window I'd hold a go no

505
00:21:34,140 --> 00:21:38,400
go if we had a go I would go through at

506
00:21:38,400 --> 00:21:39,780
the time that the maintenance window

507
00:21:39,780 --> 00:21:42,780
became valid I'd ask the DNS team to

508
00:21:42,780 --> 00:21:46,260
please migrate the IPS on the DNS

509
00:21:46,260 --> 00:21:49,620
that would put the waft virtually in

510
00:21:49,620 --> 00:21:52,679
line well it would be in line with that

511
00:21:52,679 --> 00:21:55,380
environment real traffic

512
00:21:55,380 --> 00:21:57,780
once that happened I would go through

513
00:21:57,780 --> 00:22:00,900
I'd do a couple different tests One on

514
00:22:00,900 --> 00:22:03,120
network one off Network just make sure

515
00:22:03,120 --> 00:22:05,280
that we were resolving correctly that it

516
00:22:05,280 --> 00:22:07,380
did appear to propagate and by the way

517
00:22:07,380 --> 00:22:09,360
we lowered our ttls to like 90 seconds

518
00:22:09,360 --> 00:22:11,880
so it was very quick for us

519
00:22:11,880 --> 00:22:15,360
but once it looks like we had become in

520
00:22:15,360 --> 00:22:18,299
line I'd ask the networking team or the

521
00:22:18,299 --> 00:22:20,940
whoever had this specific ACLS that

522
00:22:20,940 --> 00:22:23,039
needed to be changed to go ahead and

523
00:22:23,039 --> 00:22:25,799
make any needed changes the idea is that

524
00:22:25,799 --> 00:22:28,140
once a laugh is in line with that

525
00:22:28,140 --> 00:22:30,480
traffic we don't want somebody to go

526
00:22:30,480 --> 00:22:33,299
through and to be able to bypass and

527
00:22:33,299 --> 00:22:35,340
access those front-end web servers or

528
00:22:35,340 --> 00:22:38,220
applications without going through the

529
00:22:38,220 --> 00:22:39,240
laugh

530
00:22:39,240 --> 00:22:41,760
and once that happened I'll be running

531
00:22:41,760 --> 00:22:43,980
some more checks I generally would go

532
00:22:43,980 --> 00:22:46,200
through and test the crypto ciphers and

533
00:22:46,200 --> 00:22:48,780
make sure that qualis SSL Labs was

534
00:22:48,780 --> 00:22:50,340
giving me the same strength to the same

535
00:22:50,340 --> 00:22:52,440
ciphers

536
00:22:52,440 --> 00:22:56,280
in truth I've never had to pull a WAFF

537
00:22:56,280 --> 00:22:58,559
out of line of traffic in one of these

538
00:22:58,559 --> 00:23:00,840
calls it was always smooth it was always

539
00:23:00,840 --> 00:23:03,539
successful but that's because we did a

540
00:23:03,539 --> 00:23:06,419
lot of testing ahead of time

541
00:23:06,419 --> 00:23:08,220
now at the end of this call something

542
00:23:08,220 --> 00:23:10,220
magical happens well two things happens

543
00:23:10,220 --> 00:23:14,220
first I transition the laugh over to the

544
00:23:14,220 --> 00:23:16,559
tuning phase and I'm out of this web I'm

545
00:23:16,559 --> 00:23:19,140
on to the now to the next one the second

546
00:23:19,140 --> 00:23:23,039
is we now start 24 7 support So during

547
00:23:23,039 --> 00:23:25,620
the business day the tune resources have

548
00:23:25,620 --> 00:23:28,620
it but if something happens after hours

549
00:23:28,620 --> 00:23:30,299
our support team was starting to get

550
00:23:30,299 --> 00:23:32,159
hand-on experience and actually

551
00:23:32,159 --> 00:23:34,020
supporting laughs

552
00:23:34,020 --> 00:23:37,740
so now let's talk about the tuning phase

553
00:23:37,740 --> 00:23:40,919
so when we first go in line with the web

554
00:23:40,919 --> 00:23:42,480
we'll be in a learning transparent mode

555
00:23:42,480 --> 00:23:44,700
that means that laugh will alert if it

556
00:23:44,700 --> 00:23:47,460
sees something odd that it would pluck

557
00:23:47,460 --> 00:23:49,980
if we were in blocking but instead it

558
00:23:49,980 --> 00:23:51,720
just gives us an alert and we go through

559
00:23:51,720 --> 00:23:53,340
and we investigate it

560
00:23:53,340 --> 00:23:57,299
so at the start of the tuning phase

561
00:23:57,299 --> 00:23:59,820
our tuning resource would meet with the

562
00:23:59,820 --> 00:24:02,280
app Dev to review every learning

563
00:24:02,280 --> 00:24:04,440
suggestion and they do one or two hours

564
00:24:04,440 --> 00:24:06,299
a day

565
00:24:06,299 --> 00:24:09,659
once again both volume and diversity of

566
00:24:09,659 --> 00:24:11,700
traffic is critical you want to make

567
00:24:11,700 --> 00:24:13,200
sure that if you're doing additional

568
00:24:13,200 --> 00:24:16,559
testing you're not only testing the

569
00:24:16,559 --> 00:24:18,600
common things but also the niche

570
00:24:18,600 --> 00:24:22,260
functionality that happens once or twice

571
00:24:22,260 --> 00:24:24,659
and it's critical at this point that you

572
00:24:24,659 --> 00:24:26,460
do have your testers constantly going in

573
00:24:26,460 --> 00:24:29,520
there and doing both what I call

574
00:24:29,520 --> 00:24:31,799
Hands-On keyboard functionality testing

575
00:24:31,799 --> 00:24:34,320
as well as automated testing

576
00:24:34,320 --> 00:24:38,220
now generally we found that

577
00:24:38,220 --> 00:24:41,700
after the first four or five days of

578
00:24:41,700 --> 00:24:45,059
being in transparent mode the volume of

579
00:24:45,059 --> 00:24:47,039
alerts

580
00:24:47,039 --> 00:24:50,880
as we do our tuning drops dramatically

581
00:24:50,880 --> 00:24:53,039
and at some point it might be one week

582
00:24:53,039 --> 00:24:54,539
it might be two weeks it might be three

583
00:24:54,539 --> 00:24:57,600
weeks but at some point your application

584
00:24:57,600 --> 00:25:00,000
developers your application owners and

585
00:25:00,000 --> 00:25:01,799
your tuning resource are going to feel

586
00:25:01,799 --> 00:25:04,380
comfortable that we've got this specific

587
00:25:04,380 --> 00:25:06,600
laugh tuned for that specific

588
00:25:06,600 --> 00:25:07,980
environment

589
00:25:07,980 --> 00:25:10,080
once you get the app owner's approval

590
00:25:10,080 --> 00:25:12,780
and you get a management hope we're

591
00:25:12,780 --> 00:25:15,000
going to start making plans to put the

592
00:25:15,000 --> 00:25:18,679
laugh into blocking mode

593
00:25:19,200 --> 00:25:22,980
so for the the initial tuning once we

594
00:25:22,980 --> 00:25:23,760
get

595
00:25:23,760 --> 00:25:26,279
the maintenance window and the approval

596
00:25:26,279 --> 00:25:28,200
once again we did this by a bridge call

597
00:25:28,200 --> 00:25:30,900
once again we paid sure we had all

598
00:25:30,900 --> 00:25:34,440
needed parties so the tuning resource we

599
00:25:34,440 --> 00:25:36,419
had one application developers we'd want

600
00:25:36,419 --> 00:25:38,820
testers at a bare minimum as a part of

601
00:25:38,820 --> 00:25:41,220
this call and truthfully

602
00:25:41,220 --> 00:25:43,980
with our web application firewalls

603
00:25:43,980 --> 00:25:46,500
it took longer for our resources to log

604
00:25:46,500 --> 00:25:49,380
in and navigate to the configuration

605
00:25:49,380 --> 00:25:51,600
page than it did for them to go through

606
00:25:51,600 --> 00:25:54,960
and switch the actual web from binding

607
00:25:54,960 --> 00:25:56,820
to transparent

608
00:25:56,820 --> 00:25:59,520
are from transparent to blocking mode it

609
00:25:59,520 --> 00:26:01,200
was really pretty simple they click

610
00:26:01,200 --> 00:26:04,140
apply we'd allowed the testers as well

611
00:26:04,140 --> 00:26:06,120
as the application developers to go

612
00:26:06,120 --> 00:26:08,520
through and to test and once again when

613
00:26:08,520 --> 00:26:10,080
we went into blocking

614
00:26:10,080 --> 00:26:13,320
we did not have to revert back into

615
00:26:13,320 --> 00:26:14,580
tuning

616
00:26:14,580 --> 00:26:17,279
during that maintenance window which was

617
00:26:17,279 --> 00:26:20,460
a really good feeling

618
00:26:20,460 --> 00:26:23,760
and finally the support phase so I'm a

619
00:26:23,760 --> 00:26:25,620
big thing I'm a big believer in like

620
00:26:25,620 --> 00:26:27,360
checklist like step out of day start of

621
00:26:27,360 --> 00:26:30,120
the Week start of month procedures day

622
00:26:30,120 --> 00:26:32,760
in day out support regular review of

623
00:26:32,760 --> 00:26:35,000
learning suggestions for new alerts

624
00:26:35,000 --> 00:26:37,860
tracking any move ad change tickets

625
00:26:37,860 --> 00:26:40,620
troubleshooting performance issues

626
00:26:40,620 --> 00:26:42,659
doing the basics like patching making

627
00:26:42,659 --> 00:26:45,299
sure documentation is updated and for

628
00:26:45,299 --> 00:26:48,240
the sake of Pete Rose making sure that

629
00:26:48,240 --> 00:26:50,039
the support team has the necessary

630
00:26:50,039 --> 00:26:53,460
training so that they can be successful

631
00:26:53,460 --> 00:26:56,039
so now that's the basic of the build

632
00:26:56,039 --> 00:26:59,220
team support phase let's talk a little

633
00:26:59,220 --> 00:27:04,380
bit about uh the actual architecture

634
00:27:04,380 --> 00:27:06,299
so

635
00:27:06,299 --> 00:27:08,279
we had the choice of using physical or

636
00:27:08,279 --> 00:27:11,220
virtual machines as well as Cloud we

637
00:27:11,220 --> 00:27:14,940
leverage virtual machines on premises

638
00:27:14,940 --> 00:27:17,760
and that was a big win for us in my

639
00:27:17,760 --> 00:27:20,700
personal view I love the ideas that

640
00:27:20,700 --> 00:27:22,860
before doing a change take a snapshot

641
00:27:22,860 --> 00:27:25,020
implement the change and if you have to

642
00:27:25,020 --> 00:27:27,720
roll back you got a snapshot for that's

643
00:27:27,720 --> 00:27:32,640
not perfect but it is a great way to go

644
00:27:32,640 --> 00:27:34,740
through and have a plan B

645
00:27:34,740 --> 00:27:37,080
how do you want to intercept well for me

646
00:27:37,080 --> 00:27:39,480
it's a lot easier a lot faster a lot

647
00:27:39,480 --> 00:27:43,260
safer to change a DNS record to pull a

648
00:27:43,260 --> 00:27:45,600
WAFF in and out of line of traffic than

649
00:27:45,600 --> 00:27:47,340
having to go having to have someone go

650
00:27:47,340 --> 00:27:50,299
into the data center and physically move

651
00:27:50,299 --> 00:27:52,860
ethernet cables

652
00:27:52,860 --> 00:27:54,480
we always made sure that the Management

653
00:27:54,480 --> 00:27:56,880
Port was on an internal protected

654
00:27:56,880 --> 00:27:59,400
management VLAN and we wanted to make

655
00:27:59,400 --> 00:28:02,279
sure that the front-end web application

656
00:28:02,279 --> 00:28:05,039
servers should not be internet

657
00:28:05,039 --> 00:28:07,440
accessible once under the protection of

658
00:28:07,440 --> 00:28:09,419
a laugh so we usually usually had to

659
00:28:09,419 --> 00:28:13,340
make some ACL changes

660
00:28:13,559 --> 00:28:17,159
this is a view of our on-prem

661
00:28:17,159 --> 00:28:18,419
architecture

662
00:28:18,419 --> 00:28:21,299
so you'll notice that in general we went

663
00:28:21,299 --> 00:28:23,279
through let me get my mouse over here

664
00:28:23,279 --> 00:28:25,500
we've got our production up here at the

665
00:28:25,500 --> 00:28:27,659
top lower level environment we

666
00:28:27,659 --> 00:28:31,500
terminated the IP directly on the actual

667
00:28:31,500 --> 00:28:33,720
laugh itself whereas in our production

668
00:28:33,720 --> 00:28:36,480
we used a load balancer to go through

669
00:28:36,480 --> 00:28:39,120
and give us High availability

670
00:28:39,120 --> 00:28:42,120
within our on-premise Labs we deployed

671
00:28:42,120 --> 00:28:46,980
them into the same VLAN as the

672
00:28:46,980 --> 00:28:50,520
or the same DMZ where that traffic was

673
00:28:50,520 --> 00:28:52,679
going through originally our front-end

674
00:28:52,679 --> 00:28:56,159
web servers were one VLAN behind there

675
00:28:56,159 --> 00:28:58,919
so we were deploying into the native

676
00:28:58,919 --> 00:29:00,559
existing

677
00:29:00,559 --> 00:29:02,940
locations where the original load

678
00:29:02,940 --> 00:29:05,520
balancers that held the IPS went through

679
00:29:05,520 --> 00:29:07,260
and held originally

680
00:29:07,260 --> 00:29:09,539
that being said that worked very well

681
00:29:09,539 --> 00:29:11,520
for us

682
00:29:11,520 --> 00:29:13,559
so what about some clouds and

683
00:29:13,559 --> 00:29:15,299
considerations

684
00:29:15,299 --> 00:29:18,120
so one of the things that we initially

685
00:29:18,120 --> 00:29:19,500
thought of was we'll just clone what

686
00:29:19,500 --> 00:29:20,940
we're doing

687
00:29:20,940 --> 00:29:23,940
on-prem in the cloud

688
00:29:23,940 --> 00:29:27,120
however the way that

689
00:29:27,120 --> 00:29:29,100
my organization which is a very large

690
00:29:29,100 --> 00:29:31,200
organization does go through a managed

691
00:29:31,200 --> 00:29:32,820
cloud

692
00:29:32,820 --> 00:29:36,179
is we give our devsecop folks a whole

693
00:29:36,179 --> 00:29:39,899
lot of power in the cloud we want them

694
00:29:39,899 --> 00:29:43,260
to be able to innovate we want them to

695
00:29:43,260 --> 00:29:45,919
truly live that devsec

696
00:29:45,919 --> 00:29:50,220
lifestyle Dev sackop's lifestyle and so

697
00:29:50,220 --> 00:29:54,659
all we do want to enable them the way

698
00:29:54,659 --> 00:29:58,140
that we would go through and that

699
00:29:58,140 --> 00:30:00,840
if we put it all in the same virtual

700
00:30:00,840 --> 00:30:03,439
compartment

701
00:30:03,600 --> 00:30:05,640
just like we did on-prem

702
00:30:05,640 --> 00:30:08,100
then the devsecop folks would be able to

703
00:30:08,100 --> 00:30:11,100
go through and to take our laughs in and

704
00:30:11,100 --> 00:30:12,480
out of line

705
00:30:12,480 --> 00:30:15,000
of of traffic for that environment

706
00:30:15,000 --> 00:30:16,860
without having to go through and to

707
00:30:16,860 --> 00:30:18,600
follow the approved Change Control

708
00:30:18,600 --> 00:30:19,980
process

709
00:30:19,980 --> 00:30:21,899
and that's something that just didn't

710
00:30:21,899 --> 00:30:25,799
sit well for us so instead we created a

711
00:30:25,799 --> 00:30:28,440
second in our case v-neck

712
00:30:28,440 --> 00:30:31,760
for I.T security

713
00:30:32,830 --> 00:30:37,740
[Laughter]

714
00:30:39,320 --> 00:30:42,720
v-net that just micro boned and then we

715
00:30:42,720 --> 00:30:46,440
would pass from rvnet onto our customers

716
00:30:46,440 --> 00:30:50,520
the or our applications devsecop teams

717
00:30:50,520 --> 00:30:53,820
v-net cluster once the traffic was

718
00:30:53,820 --> 00:30:55,980
approved

719
00:30:55,980 --> 00:31:00,620
so let's talk a little bit about policy

720
00:31:00,620 --> 00:31:04,559
initially I was very naive about

721
00:31:04,559 --> 00:31:07,380
application and application security I

722
00:31:07,380 --> 00:31:09,779
thought that we would have a single

723
00:31:09,779 --> 00:31:14,039
policy across the entire application

724
00:31:14,039 --> 00:31:16,320
and so one of the applications we were

725
00:31:16,320 --> 00:31:17,580
protecting

726
00:31:17,580 --> 00:31:21,480
had to do with policy how do we how can

727
00:31:21,480 --> 00:31:22,919
people go through and make claims

728
00:31:22,919 --> 00:31:26,039
against their policy how can they pay on

729
00:31:26,039 --> 00:31:28,200
their policy how can they see what their

730
00:31:28,200 --> 00:31:30,539
policy covers what it doesn't

731
00:31:30,539 --> 00:31:33,179
and part of the website

732
00:31:33,179 --> 00:31:37,380
actually allowed users to upload

733
00:31:37,380 --> 00:31:40,020
data directly to us now generally this

734
00:31:40,020 --> 00:31:43,200
was going through improving that if they

735
00:31:43,200 --> 00:31:45,600
did suffer a loss they could upload a

736
00:31:45,600 --> 00:31:49,020
video or a picture or a scan a document

737
00:31:49,020 --> 00:31:51,179
and send it to us

738
00:31:51,179 --> 00:31:53,580
and so

739
00:31:53,580 --> 00:31:57,440
the way that that one space specific

740
00:31:57,440 --> 00:32:00,480
subsection worked

741
00:32:00,480 --> 00:32:05,960
it had what was viewed as a

742
00:32:06,000 --> 00:32:07,799
that it could go through and that it

743
00:32:07,799 --> 00:32:10,020
could be abused and it came up as an

744
00:32:10,020 --> 00:32:11,460
alert and that it would be blocked now

745
00:32:11,460 --> 00:32:15,000
obviously this is functionality that is

746
00:32:15,000 --> 00:32:16,559
critical for the operation of the

747
00:32:16,559 --> 00:32:17,399
business

748
00:32:17,399 --> 00:32:20,820
so we were initially talking well do we

749
00:32:20,820 --> 00:32:24,179
just allow this type of activity across

750
00:32:24,179 --> 00:32:26,520
all the site instead what we chose to do

751
00:32:26,520 --> 00:32:30,000
is our laughs had what was called a

752
00:32:30,000 --> 00:32:32,039
child policy

753
00:32:32,039 --> 00:32:34,440
and so for that particular part of the

754
00:32:34,440 --> 00:32:35,760
website

755
00:32:35,760 --> 00:32:38,279
and only that file upload section was

756
00:32:38,279 --> 00:32:40,679
the only place where we allowed that

757
00:32:40,679 --> 00:32:43,980
type of call to be made and that way we

758
00:32:43,980 --> 00:32:46,320
were able to go through and technically

759
00:32:46,320 --> 00:32:48,779
allow that where it was needed but still

760
00:32:48,779 --> 00:32:51,419
denied across the much larger part of

761
00:32:51,419 --> 00:32:54,299
the application and I think

762
00:32:54,299 --> 00:32:55,919
well it does add a little bit of

763
00:32:55,919 --> 00:32:58,080
complexity I think it was definitely

764
00:32:58,080 --> 00:33:00,678
worth it

765
00:33:00,960 --> 00:33:03,840
also we found that as I mentioned before

766
00:33:03,840 --> 00:33:07,140
lower level environments might not be

767
00:33:07,140 --> 00:33:11,220
identical so my view is is that you want

768
00:33:11,220 --> 00:33:14,519
to deploy a WAFF to the lowest point in

769
00:33:14,519 --> 00:33:16,980
your environment a where it makes sense

770
00:33:16,980 --> 00:33:21,360
and B that is functionally identical

771
00:33:21,360 --> 00:33:23,519
to production

772
00:33:23,519 --> 00:33:27,600
that way hopefully you find bugs lower

773
00:33:27,600 --> 00:33:30,179
in the environment and you can push out

774
00:33:30,179 --> 00:33:33,120
a patch push out an update

775
00:33:33,120 --> 00:33:37,380
as your new code is going through the

776
00:33:37,380 --> 00:33:40,340
test Dev production life cycle

777
00:33:40,340 --> 00:33:42,779
that another interesting lesson we

778
00:33:42,779 --> 00:33:44,880
learned is pay attention to cryptography

779
00:33:44,880 --> 00:33:46,980
there are a bunch of production

780
00:33:46,980 --> 00:33:49,440
applications that we found

781
00:33:49,440 --> 00:33:51,779
that were using vendor Supply slash

782
00:33:51,779 --> 00:33:55,620
generic wild cards we also found that

783
00:33:55,620 --> 00:33:58,620
some of the cipher strengths were not

784
00:33:58,620 --> 00:34:01,860
adequate and we need to make sure that

785
00:34:01,860 --> 00:34:04,080
we're using our trusted and authorized

786
00:34:04,080 --> 00:34:06,379
cas

787
00:34:11,040 --> 00:34:14,460
my apologies there

788
00:34:14,460 --> 00:34:17,399
now this was an artifact of

789
00:34:17,399 --> 00:34:21,060
my naive the Tay when it came to my

790
00:34:21,060 --> 00:34:23,219
understanding of death SEC Ops I was

791
00:34:23,219 --> 00:34:25,800
expecting that we would go through and

792
00:34:25,800 --> 00:34:28,379
we would have find a bug in test

793
00:34:28,379 --> 00:34:31,280
and that once we found that bug in text

794
00:34:31,280 --> 00:34:34,859
we would push that update to stage and

795
00:34:34,859 --> 00:34:37,379
to prod so that as the code migrated

796
00:34:37,379 --> 00:34:39,119
throughout the software development life

797
00:34:39,119 --> 00:34:42,020
cycle we would not be causing

798
00:34:42,020 --> 00:34:45,179
issues in higher level environments in

799
00:34:45,179 --> 00:34:48,000
fact I was using viewing production as

800
00:34:48,000 --> 00:34:50,639
the now state of production I was views

801
00:34:50,639 --> 00:34:54,000
viewing stage as the near future state

802
00:34:54,000 --> 00:34:55,800
of production I was using tests as the

803
00:34:55,800 --> 00:34:59,460
future future version of production

804
00:34:59,460 --> 00:35:01,859
and because we don't have because we

805
00:35:01,859 --> 00:35:04,140
didn't have as much

806
00:35:04,140 --> 00:35:07,140
testing in test originally

807
00:35:07,140 --> 00:35:09,960
what became a very common theme

808
00:35:09,960 --> 00:35:13,380
was we are finding bugs alerts whatever

809
00:35:13,380 --> 00:35:15,839
you want to call them in higher level

810
00:35:15,839 --> 00:35:19,260
environments like stage and prod

811
00:35:19,260 --> 00:35:23,400
and so we had to come out with a way in

812
00:35:23,400 --> 00:35:26,040
how if we found something in a higher

813
00:35:26,040 --> 00:35:28,800
level in prod how do we push it down to

814
00:35:28,800 --> 00:35:30,839
all of the lower level environments as

815
00:35:30,839 --> 00:35:32,880
well as if it's in stage how do we

816
00:35:32,880 --> 00:35:35,160
safely push it both to test and to

817
00:35:35,160 --> 00:35:36,540
production

818
00:35:36,540 --> 00:35:39,380
so that's just one thing that you know

819
00:35:39,380 --> 00:35:41,579
testing especially in lower level

820
00:35:41,579 --> 00:35:43,680
environment but throughout all of your

821
00:35:43,680 --> 00:35:46,740
environments of both diversity and

822
00:35:46,740 --> 00:35:49,800
volume of traffic is absolutely critical

823
00:35:49,800 --> 00:35:52,800
to a proper web application

824
00:35:52,800 --> 00:35:54,440
install

825
00:35:54,440 --> 00:36:00,180
next what triggers a policy push do you

826
00:36:00,180 --> 00:36:03,119
do it regularly do you sync it up with

827
00:36:03,119 --> 00:36:06,480
your sdlc whenever they move code from

828
00:36:06,480 --> 00:36:08,040
lower level environments to higher level

829
00:36:08,040 --> 00:36:09,720
environments and there's no right and

830
00:36:09,720 --> 00:36:12,599
wrong answer here and in fact you're

831
00:36:12,599 --> 00:36:13,859
probably going to have a blended

832
00:36:13,859 --> 00:36:16,380
approach but this is the type of

833
00:36:16,380 --> 00:36:18,359
conversations that you should start to

834
00:36:18,359 --> 00:36:21,180
have with the application team so that

835
00:36:21,180 --> 00:36:23,220
you are seen as

836
00:36:23,220 --> 00:36:25,740
all being on one team trying to make

837
00:36:25,740 --> 00:36:28,320
sure that the web application is not

838
00:36:28,320 --> 00:36:30,839
only protected from All Things external

839
00:36:30,839 --> 00:36:31,980
but also

840
00:36:31,980 --> 00:36:36,180
unfortunately we can cause issues with

841
00:36:36,180 --> 00:36:38,520
the WAFF and cause interruptions to

842
00:36:38,520 --> 00:36:40,800
service to the applications and we need

843
00:36:40,800 --> 00:36:43,160
to acknowledge that and do whatever is

844
00:36:43,160 --> 00:36:45,720
within reason to help lower those

845
00:36:45,720 --> 00:36:47,640
environments

846
00:36:47,640 --> 00:36:50,579
now some of the some of the laughs that

847
00:36:50,579 --> 00:36:52,140
I've worked with they have a centralized

848
00:36:52,140 --> 00:36:54,000
Management Center that if you find a

849
00:36:54,000 --> 00:36:55,560
block let's say in the lower level

850
00:36:55,560 --> 00:36:58,339
environment and you want to allow that

851
00:36:58,339 --> 00:37:01,200
you can click allow and it'll ask you do

852
00:37:01,200 --> 00:37:02,640
you want to allow just in the lower

853
00:37:02,640 --> 00:37:04,619
level environment or do you want to push

854
00:37:04,619 --> 00:37:05,640
that out

855
00:37:05,640 --> 00:37:09,060
and that's a that's great technology

856
00:37:09,060 --> 00:37:12,000
if you have that if you don't then you

857
00:37:12,000 --> 00:37:13,320
probably need to go through and keep

858
00:37:13,320 --> 00:37:16,800
very detailed records of what

859
00:37:16,800 --> 00:37:19,920
environment or what environmental names

860
00:37:19,920 --> 00:37:21,900
each component of the web application

861
00:37:21,900 --> 00:37:24,359
firewall so you can do that manual

862
00:37:24,359 --> 00:37:27,300
transfer so that you know how you can

863
00:37:27,300 --> 00:37:30,300
transfer a test roll to a devil to a

864
00:37:30,300 --> 00:37:32,400
prod rule for example one of the things

865
00:37:32,400 --> 00:37:36,060
that we did is we kept our naming of

866
00:37:36,060 --> 00:37:38,640
environmental variables the same except

867
00:37:38,640 --> 00:37:42,839
for tests would start with a TST Dash a

868
00:37:42,839 --> 00:37:46,500
prod would have a PRD and depending on

869
00:37:46,500 --> 00:37:48,240
what other environments we'd use a

870
00:37:48,240 --> 00:37:50,280
different flag but that way we had

871
00:37:50,280 --> 00:37:52,440
consistency so we knew that if we had a

872
00:37:52,440 --> 00:37:54,480
test rule we could just replace the

873
00:37:54,480 --> 00:37:55,740
first three letters of those

874
00:37:55,740 --> 00:37:57,540
environments all throughout the web

875
00:37:57,540 --> 00:38:00,359
application firewall Rule and we would

876
00:38:00,359 --> 00:38:02,460
be good hopefully you've got a

877
00:38:02,460 --> 00:38:04,020
centralized management tool but if not

878
00:38:04,020 --> 00:38:06,500
you need to be able to do that

879
00:38:06,500 --> 00:38:10,619
manual can or what manual tweaking a

880
00:38:10,619 --> 00:38:12,060
rule so you can move them in the

881
00:38:12,060 --> 00:38:14,280
environment next is when you're going

882
00:38:14,280 --> 00:38:15,480
through

883
00:38:15,480 --> 00:38:18,180
and you're propagating a new learning

884
00:38:18,180 --> 00:38:19,740
suggestion a new alert a new

885
00:38:19,740 --> 00:38:21,900
configuration item whatever you want to

886
00:38:21,900 --> 00:38:23,160
call it

887
00:38:23,160 --> 00:38:25,800
when do you migrate just that one rule

888
00:38:25,800 --> 00:38:28,859
versus the entire policy one thing that

889
00:38:28,859 --> 00:38:32,099
I've seen happen with many with web

890
00:38:32,099 --> 00:38:34,500
applications firewalls is that if you

891
00:38:34,500 --> 00:38:38,400
aren't on top of it if you are not very

892
00:38:38,400 --> 00:38:41,760
meticulous that you can have a drift

893
00:38:41,760 --> 00:38:44,040
between the actual configuration from

894
00:38:44,040 --> 00:38:45,839
lower level environments to higher level

895
00:38:45,839 --> 00:38:48,660
environments and that's not entirely a

896
00:38:48,660 --> 00:38:50,579
good thing so while I do

897
00:38:50,579 --> 00:38:52,680
appreciate doing

898
00:38:52,680 --> 00:38:55,200
the vast majority of pushes being

899
00:38:55,200 --> 00:38:57,180
individual learning suggestions alert

900
00:38:57,180 --> 00:38:58,500
configurations

901
00:38:58,500 --> 00:39:02,160
I also believe that at some point

902
00:39:02,160 --> 00:39:04,500
and this could be quarterly this could

903
00:39:04,500 --> 00:39:07,140
be bi-annually this could be yearly you

904
00:39:07,140 --> 00:39:10,619
ought to go through and go through and

905
00:39:10,619 --> 00:39:12,900
to select one policy usually I choose

906
00:39:12,900 --> 00:39:14,220
production

907
00:39:14,220 --> 00:39:17,220
modify that and push the entire policy

908
00:39:17,220 --> 00:39:19,380
down to the lower level environments

909
00:39:19,380 --> 00:39:23,540
once it has been suitably altered

910
00:39:23,579 --> 00:39:25,920
so we've already talked a little bit

911
00:39:25,920 --> 00:39:29,760
about the child policies uh initially I

912
00:39:29,760 --> 00:39:31,500
was kind of questioning it

913
00:39:31,500 --> 00:39:35,220
but that really became a huge win for us

914
00:39:35,220 --> 00:39:38,940
and so I really did appreciate that the

915
00:39:38,940 --> 00:39:41,880
more that we went on with that and

916
00:39:41,880 --> 00:39:43,079
finally

917
00:39:43,079 --> 00:39:45,180
we're making a lot of decisions a lot of

918
00:39:45,180 --> 00:39:48,119
move ad changes so how do we track this

919
00:39:48,119 --> 00:39:51,420
not only for our sake but audits every

920
00:39:51,420 --> 00:39:54,300
time that we go through and we say allow

921
00:39:54,300 --> 00:39:56,280
this type of traffic that's making up

922
00:39:56,280 --> 00:39:58,140
that's the equivalent of adding a

923
00:39:58,140 --> 00:40:00,660
firewall rule which had to go through

924
00:40:00,660 --> 00:40:02,579
change control so this was something

925
00:40:02,579 --> 00:40:04,079
that was

926
00:40:04,079 --> 00:40:07,200
um we had to set a culture of discipline

927
00:40:07,200 --> 00:40:10,020
as well as we had to go through and

928
00:40:10,020 --> 00:40:13,260
maintain a list of what policy

929
00:40:13,260 --> 00:40:15,000
modifications we are going through in

930
00:40:15,000 --> 00:40:16,619
making

931
00:40:16,619 --> 00:40:19,440
this talk was a part of our 2022 secure

932
00:40:19,440 --> 00:40:21,900
West Virginia Lucky 13 conference if you

933
00:40:21,900 --> 00:40:23,520
would like more information about this

934
00:40:23,520 --> 00:40:25,200
talk or our speaker check the

935
00:40:25,200 --> 00:40:27,420
description below and if you enjoyed the

936
00:40:27,420 --> 00:40:29,160
content consider liking and sharing this

937
00:40:29,160 --> 00:40:31,380
video for more information on secure

938
00:40:31,380 --> 00:40:32,880
West Virginia or you want to stay

939
00:40:32,880 --> 00:40:34,980
updated with the latest upcoming events

940
00:40:34,980 --> 00:40:38,640
follow us on Twitter at securewbcon or

941
00:40:38,640 --> 00:40:41,579
visit our website securewb.org

942
00:40:41,579 --> 00:40:43,800
we would like also like to thank our

943
00:40:43,800 --> 00:40:46,200
2022 sponsors for being a huge part of

944
00:40:46,200 --> 00:40:49,339
Lucky 13 success

