1
00:00:09,599 --> 00:00:11,960
foreign

2
00:00:11,960 --> 00:00:15,480
thanks for coming out and I guess we'll

3
00:00:15,480 --> 00:00:18,240
go ahead and get started

4
00:00:18,240 --> 00:00:20,220
real quick if you don't know me my name

5
00:00:20,220 --> 00:00:22,439
is Phil polstraw I work at Bloomsburg

6
00:00:22,439 --> 00:00:25,680
University in Pennsylvania

7
00:00:25,680 --> 00:00:28,560
and I've been using Linux for a long

8
00:00:28,560 --> 00:00:31,679
time ever since I was in grad school not

9
00:00:31,679 --> 00:00:33,780
studying computer stuff studying physics

10
00:00:33,780 --> 00:00:36,360
actually and one of my friends from the

11
00:00:36,360 --> 00:00:38,700
Cs Department said hey Phil you should

12
00:00:38,700 --> 00:00:42,420
check out this this guy's doing this PC

13
00:00:42,420 --> 00:00:45,600
Unix thing and of course that was Linus

14
00:00:45,600 --> 00:00:48,420
he was talking about so I've been using

15
00:00:48,420 --> 00:00:50,100
Linux for a while

16
00:00:50,100 --> 00:00:52,579
uh used to be a software developer guy

17
00:00:52,579 --> 00:00:55,140
kind of turned into a software security

18
00:00:55,140 --> 00:00:57,420
guy turned it to a general security guy

19
00:00:57,420 --> 00:01:00,480
turned to a forensics guy as I said

20
00:01:00,480 --> 00:01:03,120
currently work at Bloomsburg University

21
00:01:03,120 --> 00:01:05,939
also known to fly planes and helicopters

22
00:01:05,939 --> 00:01:08,640
teach people how to fly those things

23
00:01:08,640 --> 00:01:12,299
and build aircraft and occasionally

24
00:01:12,299 --> 00:01:14,840
Skype it

25
00:01:14,880 --> 00:01:16,860
so what's the motivation for this talk

26
00:01:16,860 --> 00:01:19,200
well I teach a couple of classes on

27
00:01:19,200 --> 00:01:22,560
Linux at the University and one day I

28
00:01:22,560 --> 00:01:24,900
was going through one of my classes

29
00:01:24,900 --> 00:01:27,840
and we were kind of using a python

30
00:01:27,840 --> 00:01:30,600
script from one of my books

31
00:01:30,600 --> 00:01:33,320
and I thought to myself hey I wonder

32
00:01:33,320 --> 00:01:37,020
could I do the same thing using just

33
00:01:37,020 --> 00:01:39,600
straight up bash scripting you know

34
00:01:39,600 --> 00:01:41,939
instead of having to introduce python

35
00:01:41,939 --> 00:01:44,240
which all of my students also know

36
00:01:44,240 --> 00:01:47,400
because it's a required course but I

37
00:01:47,400 --> 00:01:49,380
thought yeah let's just see how this

38
00:01:49,380 --> 00:01:51,000
goes and that was kind of the motivation

39
00:01:51,000 --> 00:01:53,659
for this talk

40
00:01:53,939 --> 00:01:57,540
so for starters I have this script it's

41
00:01:57,540 --> 00:01:59,939
just called find files.pi and what does

42
00:01:59,939 --> 00:02:00,899
it do

43
00:02:00,899 --> 00:02:02,939
it uses something called the magic

44
00:02:02,939 --> 00:02:04,860
Library some of you might be familiar

45
00:02:04,860 --> 00:02:05,960
with that

46
00:02:05,960 --> 00:02:09,239
so if you're not familiar with that the

47
00:02:09,239 --> 00:02:11,940
magic library is essentially a library

48
00:02:11,940 --> 00:02:14,879
of file signatures

49
00:02:14,879 --> 00:02:16,800
in Python

50
00:02:16,800 --> 00:02:19,560
and if you run Linux

51
00:02:19,560 --> 00:02:22,020
you probably know about the file utility

52
00:02:22,020 --> 00:02:24,660
in the file utility lets you say hey

53
00:02:24,660 --> 00:02:26,760
what kind of file is this really right

54
00:02:26,760 --> 00:02:28,680
you know Windows machines what do they

55
00:02:28,680 --> 00:02:30,180
do they rely on

56
00:02:30,180 --> 00:02:33,720
silly things like file extensions

57
00:02:33,720 --> 00:02:36,300
Linux doesn't care Linux looks at the

58
00:02:36,300 --> 00:02:38,940
file and goes oh that's actually a Word

59
00:02:38,940 --> 00:02:40,739
document let me open that with the

60
00:02:40,739 --> 00:02:42,180
appropriate tool

61
00:02:42,180 --> 00:02:43,680
Etc

62
00:02:43,680 --> 00:02:48,060
so magic is an extension

63
00:02:48,060 --> 00:02:51,180
of that or exporting that functionality

64
00:02:51,180 --> 00:02:53,879
if you will to python

65
00:02:53,879 --> 00:02:57,000
so it's a pretty simple script uses the

66
00:02:57,000 --> 00:03:00,120
magic Library uses a couple other things

67
00:03:00,120 --> 00:03:02,700
like opt parse which I use to parse

68
00:03:02,700 --> 00:03:04,340
command line options

69
00:03:04,340 --> 00:03:07,980
regular expressions and the OS libraries

70
00:03:07,980 --> 00:03:09,739
for dealing with files and stuff

71
00:03:09,739 --> 00:03:13,319
originally it was written in Python 2 at

72
00:03:13,319 --> 00:03:15,599
the time that the book was written they

73
00:03:15,599 --> 00:03:17,940
had not ported the magic library to

74
00:03:17,940 --> 00:03:21,780
python3 which has since happened right

75
00:03:21,780 --> 00:03:23,879
Okay so

76
00:03:23,879 --> 00:03:26,899
real quick

77
00:03:28,260 --> 00:03:30,780
just want to give you a quick overview

78
00:03:30,780 --> 00:03:33,300
of

79
00:03:33,300 --> 00:03:36,140
this script

80
00:03:37,500 --> 00:03:39,959
so like all good scripts of course it

81
00:03:39,959 --> 00:03:42,120
starts with a shebang line says hey

82
00:03:42,120 --> 00:03:44,340
please run python

83
00:03:44,340 --> 00:03:46,620
um as I said this script was originally

84
00:03:46,620 --> 00:03:50,400
python 2 but it works on python two or

85
00:03:50,400 --> 00:03:53,099
three if you install the libraries

86
00:03:53,099 --> 00:03:56,519
reports a couple libraries magic dot

87
00:03:56,519 --> 00:03:58,799
bars regular expressions

88
00:03:58,799 --> 00:04:02,580
and the OS Library as well

89
00:04:02,580 --> 00:04:06,599
and I defined a bunch of classes so even

90
00:04:06,599 --> 00:04:08,459
though it's a small simple script it's

91
00:04:08,459 --> 00:04:10,920
actually somewhat object oriented

92
00:04:10,920 --> 00:04:13,739
so I created a class called a file

93
00:04:13,739 --> 00:04:17,220
finder so the file finder

94
00:04:17,220 --> 00:04:21,180
is just something you say hey here is a

95
00:04:21,180 --> 00:04:24,840
sector here's a sector from a file tell

96
00:04:24,840 --> 00:04:27,600
me what it is using the magic library

97
00:04:27,600 --> 00:04:31,080
and look for certain kinds of files

98
00:04:31,080 --> 00:04:33,419
and it has two methods it has one called

99
00:04:33,419 --> 00:04:36,780
matches it says hey was this the kind of

100
00:04:36,780 --> 00:04:38,699
file you were looking for

101
00:04:38,699 --> 00:04:41,880
and then file type which says this is

102
00:04:41,880 --> 00:04:44,580
the kind of things that I find

103
00:04:44,580 --> 00:04:48,419
and from there I just defined a few

104
00:04:48,419 --> 00:04:50,120
different

105
00:04:50,120 --> 00:04:52,740
subclasses for example this one here

106
00:04:52,740 --> 00:04:55,080
we'll find jpegs

107
00:04:55,080 --> 00:04:58,320
and I use the magic library to say give

108
00:04:58,320 --> 00:05:00,060
me the magic

109
00:05:00,060 --> 00:05:03,180
from that file

110
00:05:03,180 --> 00:05:06,660
and let me search through those results

111
00:05:06,660 --> 00:05:08,100
and I'm going to search for some

112
00:05:08,100 --> 00:05:10,979
keywords that I know based on my

113
00:05:10,979 --> 00:05:13,320
previous experience with file and the

114
00:05:13,320 --> 00:05:15,900
magic Library should be there such as

115
00:05:15,900 --> 00:05:18,180
JPEG image

116
00:05:18,180 --> 00:05:22,740
and if I find those words I say yep we

117
00:05:22,740 --> 00:05:25,740
found your file otherwise we say sorry

118
00:05:25,740 --> 00:05:28,740
didn't find your file

119
00:05:28,740 --> 00:05:30,960
and then we have

120
00:05:30,960 --> 00:05:34,440
a file type of jpeg

121
00:05:34,440 --> 00:05:38,520
and the bulk of this script is basically

122
00:05:38,520 --> 00:05:40,680
just doing the exact same thing for

123
00:05:40,680 --> 00:05:44,060
different kinds of files

124
00:05:44,880 --> 00:05:47,699
now if you look at the main method for

125
00:05:47,699 --> 00:05:50,220
this script I'm going to start by

126
00:05:50,220 --> 00:05:52,919
parsing some command line options it

127
00:05:52,919 --> 00:05:55,800
takes a comma summary list of file types

128
00:05:55,800 --> 00:05:58,320
that you're searching for

129
00:05:58,320 --> 00:06:02,280
it also has a couple optimizations you

130
00:06:02,280 --> 00:06:05,520
can say this is my cluster size

131
00:06:05,520 --> 00:06:08,759
so I don't go every sector I can only go

132
00:06:08,759 --> 00:06:11,460
on cluster boundaries and if you use

133
00:06:11,460 --> 00:06:13,560
that option you have to give it the

134
00:06:13,560 --> 00:06:16,620
offset you know because not all the time

135
00:06:16,620 --> 00:06:18,180
will

136
00:06:18,180 --> 00:06:22,919
the Clusters align with an a multiple of

137
00:06:22,919 --> 00:06:26,120
the cluster size

138
00:06:28,919 --> 00:06:35,220
okay so what do I do basically I parse

139
00:06:35,220 --> 00:06:37,800
that list of things you were searching

140
00:06:37,800 --> 00:06:41,039
for this is all pretty straightforward

141
00:06:41,039 --> 00:06:43,340
stuff

142
00:06:44,280 --> 00:06:46,680
and

143
00:06:46,680 --> 00:06:50,539
then I'm going to open this file

144
00:06:53,340 --> 00:06:56,100
and here's sort of the main Loop if you

145
00:06:56,100 --> 00:06:58,080
will

146
00:06:58,080 --> 00:07:00,539
you know open the file

147
00:07:00,539 --> 00:07:03,419
seek to the right place read in a

148
00:07:03,419 --> 00:07:04,979
cluster

149
00:07:04,979 --> 00:07:08,460
and keep on reading stuff and I'm just

150
00:07:08,460 --> 00:07:10,139
going to say hey did you find the stuff

151
00:07:10,139 --> 00:07:13,020
you were looking for here and keep doing

152
00:07:13,020 --> 00:07:16,580
that to get to the end okay

153
00:07:17,100 --> 00:07:19,500
so that was the original python script

154
00:07:19,500 --> 00:07:23,699
so if I go back here to my

155
00:07:23,699 --> 00:07:25,560
presentation

156
00:07:25,560 --> 00:07:27,960
you can see my first crack at this was

157
00:07:27,960 --> 00:07:30,560
trying to emulate this pretty closely

158
00:07:30,560 --> 00:07:33,060
I'm going to use the file utility

159
00:07:33,060 --> 00:07:35,880
instead of the magic Library I'm going

160
00:07:35,880 --> 00:07:40,380
to create an array of items to find in

161
00:07:40,380 --> 00:07:42,240
the corresponding keywords that grep

162
00:07:42,240 --> 00:07:43,319
through

163
00:07:43,319 --> 00:07:46,860
and I'm going to use DD in order to grab

164
00:07:46,860 --> 00:07:49,259
the correct sectors

165
00:07:49,259 --> 00:07:54,020
now how many people are familiar with DD

166
00:07:54,419 --> 00:07:57,120
this Destroyer okay

167
00:07:57,120 --> 00:08:00,120
um so not all of you familiar with it uh

168
00:08:00,120 --> 00:08:03,599
DD is kind of a bit mover if you will uh

169
00:08:03,599 --> 00:08:06,419
you can use it create disk images

170
00:08:06,419 --> 00:08:10,199
it's pretty simple to use once you learn

171
00:08:10,199 --> 00:08:11,699
how to use it

172
00:08:11,699 --> 00:08:13,979
um you know if you're on a Linux box so

173
00:08:13,979 --> 00:08:15,900
you want to image a file system it's

174
00:08:15,900 --> 00:08:17,940
pretty simple you can say something like

175
00:08:17,940 --> 00:08:22,560
DD and then say in file equals and you

176
00:08:22,560 --> 00:08:25,860
give it a device file out file equals

177
00:08:25,860 --> 00:08:28,259
whatever you want to call your image and

178
00:08:28,259 --> 00:08:30,240
there's some other flags you can get it

179
00:08:30,240 --> 00:08:32,520
as well right

180
00:08:32,520 --> 00:08:35,520
so ultimately it's a bit mover now

181
00:08:35,520 --> 00:08:38,339
here's a trivia question uh since a lot

182
00:08:38,339 --> 00:08:39,899
of you are familiar with the disc

183
00:08:39,899 --> 00:08:43,620
Destroyer or DD uh does anyone know what

184
00:08:43,620 --> 00:08:47,360
was the original purpose of DD

185
00:08:50,399 --> 00:08:51,899
um

186
00:08:51,899 --> 00:08:54,899
now

187
00:08:57,019 --> 00:08:59,820
the original purpose was to convert

188
00:08:59,820 --> 00:09:03,420
between ASCII and episodic

189
00:09:03,420 --> 00:09:06,720
that was its original purpose in life

190
00:09:06,720 --> 00:09:08,940
that was what it was made for so you can

191
00:09:08,940 --> 00:09:12,180
do some conversions like that as you

192
00:09:12,180 --> 00:09:14,580
were moving things around but today the

193
00:09:14,580 --> 00:09:17,160
way we use it is mostly just to

194
00:09:17,160 --> 00:09:22,440
push push out our various

195
00:09:22,440 --> 00:09:25,700
bits and move them around okay

196
00:09:25,700 --> 00:09:29,399
so you know here's my first

197
00:09:29,399 --> 00:09:32,820
crack at this and again I said let's

198
00:09:32,820 --> 00:09:35,339
let's try to make it essentially the

199
00:09:35,339 --> 00:09:37,760
same thing

200
00:09:38,160 --> 00:09:40,380
so of course every good script begins

201
00:09:40,380 --> 00:09:43,140
with shebang line and of course I'm

202
00:09:43,140 --> 00:09:45,540
going to say I'm running Ben bash even

203
00:09:45,540 --> 00:09:47,339
though bash is the most common shell

204
00:09:47,339 --> 00:09:49,440
it's not the only one that people run

205
00:09:49,440 --> 00:09:51,540
and I'm going to use some extensions

206
00:09:51,540 --> 00:09:54,240
that only work in Bash

207
00:09:54,240 --> 00:09:57,060
so I Define a usage function this way if

208
00:09:57,060 --> 00:09:58,320
you don't give me any command line

209
00:09:58,320 --> 00:10:01,200
arguments I'm going to yell at you

210
00:10:01,200 --> 00:10:04,800
and I'm going to say Hey look

211
00:10:04,800 --> 00:10:08,420
here's what you should have told me

212
00:10:10,260 --> 00:10:12,420
and then I go through and I'm going to

213
00:10:12,420 --> 00:10:13,620
parse

214
00:10:13,620 --> 00:10:16,500
my command line options I'm going to use

215
00:10:16,500 --> 00:10:18,899
something called get Ops

216
00:10:18,899 --> 00:10:21,420
how many of you do any uh bash shell

217
00:10:21,420 --> 00:10:22,519
scripting

218
00:10:22,519 --> 00:10:25,860
how many have you ever heard of get Ops

219
00:10:25,860 --> 00:10:28,320
okay a couple of you

220
00:10:28,320 --> 00:10:31,560
so it's it's very nice it's a lot nicer

221
00:10:31,560 --> 00:10:34,800
than doing this by hand you know before

222
00:10:34,800 --> 00:10:37,380
I learned about this I tried to do this

223
00:10:37,380 --> 00:10:39,480
stuff by hand but get Ops is much much

224
00:10:39,480 --> 00:10:42,240
easier so again the exact same options

225
00:10:42,240 --> 00:10:46,800
as the python script s gives you hey

226
00:10:46,800 --> 00:10:48,480
here's a list of things I want to search

227
00:10:48,480 --> 00:10:49,800
for please

228
00:10:49,800 --> 00:10:52,560
uh cluster size

229
00:10:52,560 --> 00:10:57,180
image file name and offset

230
00:10:57,180 --> 00:10:58,500
if I don't want to start at the

231
00:10:58,500 --> 00:11:02,720
beginning of my file system image

232
00:11:04,019 --> 00:11:06,779
I create an array which is one of those

233
00:11:06,779 --> 00:11:10,800
bash extensions not every shell has this

234
00:11:10,800 --> 00:11:15,260
and I take my list

235
00:11:15,480 --> 00:11:17,700
that was passed in the comma separated

236
00:11:17,700 --> 00:11:18,959
list

237
00:11:18,959 --> 00:11:22,440
and I say hey my delimiter

238
00:11:22,440 --> 00:11:24,959
that's what the Dash D is for

239
00:11:24,959 --> 00:11:29,820
is going to be either a comma or a space

240
00:11:29,820 --> 00:11:32,000
and get rid of that terminating

241
00:11:32,000 --> 00:11:34,860
delimiter please

242
00:11:34,860 --> 00:11:37,880
and I'm going to put all this stuff into

243
00:11:37,880 --> 00:11:41,339
find array

244
00:11:41,339 --> 00:11:46,100
and now I'm going to load that up

245
00:11:46,140 --> 00:11:49,200
so here I have another bash extension

246
00:11:49,200 --> 00:11:52,140
I'm using a c style for Loop

247
00:11:52,140 --> 00:11:55,320
so if you're not familiar with C A for

248
00:11:55,320 --> 00:11:59,060
Loop has an initializer

249
00:11:59,060 --> 00:12:02,940
a loop condition you know I keep looping

250
00:12:02,940 --> 00:12:04,500
well this is true

251
00:12:04,500 --> 00:12:08,339
and then it also has a modifier or step

252
00:12:08,339 --> 00:12:10,560
expression if you will so every time you

253
00:12:10,560 --> 00:12:11,660
go through

254
00:12:11,660 --> 00:12:17,060
this Loop it adds one to end

255
00:12:17,940 --> 00:12:20,399
and so what do I do

256
00:12:20,399 --> 00:12:23,640
is I get

257
00:12:23,640 --> 00:12:25,200
this

258
00:12:25,200 --> 00:12:29,300
array that I'm going to build out

259
00:12:29,760 --> 00:12:31,620
and I'm going to get rid of this

260
00:12:31,620 --> 00:12:34,019
trailing space which was kind of a pain

261
00:12:34,019 --> 00:12:36,480
in the butt Honestly made this a little

262
00:12:36,480 --> 00:12:40,440
hard and then I look at that and I say

263
00:12:40,440 --> 00:12:42,360
all right

264
00:12:42,360 --> 00:12:45,660
did they say jpeg or jpg you know for

265
00:12:45,660 --> 00:12:47,579
those windows people that can't deal

266
00:12:47,579 --> 00:12:49,860
with more than three characters and

267
00:12:49,860 --> 00:12:51,720
extensions

268
00:12:51,720 --> 00:12:53,459
um

269
00:12:53,459 --> 00:12:57,300
and then I add things to my array

270
00:12:57,300 --> 00:12:59,220
and these are things I'm going to grep

271
00:12:59,220 --> 00:13:04,940
through the results of file to look at

272
00:13:08,519 --> 00:13:10,560
and then I check you know did you give

273
00:13:10,560 --> 00:13:13,620
me an image file if you didn't gonna

274
00:13:13,620 --> 00:13:16,160
yell at you

275
00:13:16,200 --> 00:13:18,600
and now I'm going to look at the image

276
00:13:18,600 --> 00:13:20,459
itself so I'm going to say well how big

277
00:13:20,459 --> 00:13:22,440
was that thing

278
00:13:22,440 --> 00:13:25,620
and here's another one of those nice

279
00:13:25,620 --> 00:13:27,660
bash extensions

280
00:13:27,660 --> 00:13:30,180
you know you probably know this if you

281
00:13:30,180 --> 00:13:31,800
want to run something and take the

282
00:13:31,800 --> 00:13:34,079
results and put it into something else

283
00:13:34,079 --> 00:13:35,940
you just put it in parentheses whatever

284
00:13:35,940 --> 00:13:38,279
command it is put a dollar sign out

285
00:13:38,279 --> 00:13:39,180
front

286
00:13:39,180 --> 00:13:40,740
well if you do that and use two

287
00:13:40,740 --> 00:13:43,440
parentheses you can do math

288
00:13:43,440 --> 00:13:46,800
so here I'm doing some math and I'm

289
00:13:46,800 --> 00:13:49,019
actually calling this command stat to

290
00:13:49,019 --> 00:13:50,760
get file stats

291
00:13:50,760 --> 00:13:53,579
and I'm going to say please give me the

292
00:13:53,579 --> 00:13:55,680
size of the file

293
00:13:55,680 --> 00:14:00,300
and divide it by 512 y512 512 is the

294
00:14:00,300 --> 00:14:03,420
standard size of a sector right

295
00:14:03,420 --> 00:14:05,940
I'm really sad sometimes my students

296
00:14:05,940 --> 00:14:07,980
like they're seniors and they don't

297
00:14:07,980 --> 00:14:09,959
remember that stuff from their first

298
00:14:09,959 --> 00:14:12,480
couple years at the University and I'll

299
00:14:12,480 --> 00:14:14,820
ask them like okay standard sector sizes

300
00:14:14,820 --> 00:14:16,920
and they're just like crickets right

301
00:14:16,920 --> 00:14:18,600
like uh

302
00:14:18,600 --> 00:14:21,420
it's 5 12. what is that in HEX by the

303
00:14:21,420 --> 00:14:23,100
way

304
00:14:23,100 --> 00:14:26,820
more crickets two zero zero right what's

305
00:14:26,820 --> 00:14:28,260
one of the reasons why we like to use

306
00:14:28,260 --> 00:14:31,440
hex right hex is beautiful but you know

307
00:14:31,440 --> 00:14:33,000
how it is a lot of times when people are

308
00:14:33,000 --> 00:14:34,860
starting out they're like oh I'm going

309
00:14:34,860 --> 00:14:37,079
to use that decimal stuff because I'm

310
00:14:37,079 --> 00:14:38,220
used to that

311
00:14:38,220 --> 00:14:40,199
it's like force yourself to learn the

312
00:14:40,199 --> 00:14:41,820
other stuff no I don't want to do that

313
00:14:41,820 --> 00:14:44,220
that's hard

314
00:14:44,220 --> 00:14:46,740
okay so basically this is just going to

315
00:14:46,740 --> 00:14:47,579
tell you

316
00:14:47,579 --> 00:14:51,060
the file size and sectors

317
00:14:51,060 --> 00:14:53,519
I figure out what's the starting sector

318
00:14:53,519 --> 00:14:55,920
you know did you give me an offset or

319
00:14:55,920 --> 00:14:58,099
not

320
00:14:58,680 --> 00:15:01,139
I'm going to set the cluster size you

321
00:15:01,139 --> 00:15:02,820
know if you didn't give me one I'm going

322
00:15:02,820 --> 00:15:05,040
to default to one

323
00:15:05,040 --> 00:15:09,180
and now I'm going to go ahead and read

324
00:15:09,180 --> 00:15:11,639
in a chunk I'm going to read in this

325
00:15:11,639 --> 00:15:13,880
sector

326
00:15:14,339 --> 00:15:15,720
so here you go

327
00:15:15,720 --> 00:15:18,060
I'm going to say what's the info for

328
00:15:18,060 --> 00:15:20,399
this file well I'm going to read my

329
00:15:20,399 --> 00:15:22,920
chunk I'm going to use DD say my block

330
00:15:22,920 --> 00:15:25,320
size is 512.

331
00:15:25,320 --> 00:15:28,500
I'm going to bring in one block please

332
00:15:28,500 --> 00:15:30,500
I'm going to skip ahead

333
00:15:30,500 --> 00:15:33,480
and here's my input file

334
00:15:33,480 --> 00:15:35,940
any errors I'm going to send them to

335
00:15:35,940 --> 00:15:38,940
that big black hole called called Dev

336
00:15:38,940 --> 00:15:40,079
null

337
00:15:40,079 --> 00:15:43,740
right I'm going to pipe that sector to

338
00:15:43,740 --> 00:15:47,579
file and I say hey file the file that

339
00:15:47,579 --> 00:15:50,279
you're going to look at is actually the

340
00:15:50,279 --> 00:15:53,100
standard in that's what the dash means

341
00:15:53,100 --> 00:15:55,260
and by the way if you had any errors

342
00:15:55,260 --> 00:15:57,120
please send that

343
00:15:57,120 --> 00:16:00,079
to devno

344
00:16:00,600 --> 00:16:03,420
and then I'm going to take that

345
00:16:03,420 --> 00:16:05,699
and I'm going to pipe it to this tool

346
00:16:05,699 --> 00:16:08,160
called Bok

347
00:16:08,160 --> 00:16:11,100
and what is octo awk is a great tool for

348
00:16:11,100 --> 00:16:14,579
dealing with data that's arranged let's

349
00:16:14,579 --> 00:16:16,620
say in columns right what they call

350
00:16:16,620 --> 00:16:20,100
Fields most people would say words okay

351
00:16:20,100 --> 00:16:22,040
so you have things that are typically

352
00:16:22,040 --> 00:16:26,639
separated by white space but I'm going

353
00:16:26,639 --> 00:16:28,800
to tell it my field separator that's

354
00:16:28,800 --> 00:16:31,680
what this Dash capital F stands for is

355
00:16:31,680 --> 00:16:34,699
going to be a colon

356
00:16:34,980 --> 00:16:37,680
because the output from file is going to

357
00:16:37,680 --> 00:16:40,259
be something like you know

358
00:16:40,259 --> 00:16:46,100
file Name colon and then results

359
00:16:47,279 --> 00:16:50,399
and what I'm going to do from there is

360
00:16:50,399 --> 00:16:53,519
I'm just going to print the second field

361
00:16:53,519 --> 00:16:55,199
okay

362
00:16:55,199 --> 00:16:57,240
because I don't want the stuff before

363
00:16:57,240 --> 00:16:59,759
the colon I give this stuff to standard

364
00:16:59,759 --> 00:17:02,519
in right it's going to have standard in

365
00:17:02,519 --> 00:17:04,679
and it's just going to look ugly right

366
00:17:04,679 --> 00:17:07,199
so this gets rid of that

367
00:17:07,199 --> 00:17:09,119
okay so now what

368
00:17:09,119 --> 00:17:12,079
now I'm going to say let me go through

369
00:17:12,079 --> 00:17:17,178
and look for things in those results

370
00:17:18,480 --> 00:17:20,819
so I'm going to do something similar

371
00:17:20,819 --> 00:17:24,199
here looking at my results

372
00:17:24,240 --> 00:17:27,199
and

373
00:17:27,419 --> 00:17:30,500
you know if I get anything

374
00:17:31,440 --> 00:17:34,080
was found

375
00:17:34,080 --> 00:17:38,600
so if the last command its status was

376
00:17:38,600 --> 00:17:40,280
zero

377
00:17:40,280 --> 00:17:43,860
zero means success right

378
00:17:43,860 --> 00:17:47,160
anything that's not zero means failure

379
00:17:47,160 --> 00:17:50,700
that's standard Unix Linux stuff right

380
00:17:50,700 --> 00:17:54,539
everything returns a status code

381
00:17:54,539 --> 00:17:57,960
so if my search was successful

382
00:17:57,960 --> 00:18:00,799
then I'm going to print a little message

383
00:18:00,799 --> 00:18:03,780
saying hey look I found

384
00:18:03,780 --> 00:18:06,720
something in the sector

385
00:18:06,720 --> 00:18:08,820
and then I'm going to update

386
00:18:08,820 --> 00:18:12,139
my starting sector

387
00:18:12,600 --> 00:18:16,159
all right super simple

388
00:18:17,160 --> 00:18:19,580
but

389
00:18:19,580 --> 00:18:21,600
horribly slow

390
00:18:21,600 --> 00:18:25,020
this like painfully slow I was searching

391
00:18:25,020 --> 00:18:28,799
through a little sample image and it

392
00:18:28,799 --> 00:18:30,780
took a few hours I don't know how long

393
00:18:30,780 --> 00:18:33,600
it took to finish because I never let it

394
00:18:33,600 --> 00:18:36,120
finish I got tired of it after a couple

395
00:18:36,120 --> 00:18:38,820
hours and I just killed it right

396
00:18:38,820 --> 00:18:41,820
so the python script did it in 18

397
00:18:41,820 --> 00:18:45,059
minutes so from 18 minutes to at least a

398
00:18:45,059 --> 00:18:48,720
couple hours doesn't sound so great

399
00:18:48,720 --> 00:18:51,539
so it was a problem well I'm pretty sure

400
00:18:51,539 --> 00:18:53,940
the biggest problem was using DD

401
00:18:53,940 --> 00:18:56,100
so what's the problem with DD

402
00:18:56,100 --> 00:18:59,280
hey open the file scan to the right

403
00:18:59,280 --> 00:19:02,220
place read a sector close the file

404
00:19:02,220 --> 00:19:04,919
do that a couple million times

405
00:19:04,919 --> 00:19:07,740
that's not fast

406
00:19:07,740 --> 00:19:09,780
so I said okay

407
00:19:09,780 --> 00:19:13,220
let's try something else

408
00:19:14,640 --> 00:19:17,039
maybe there is some way you know the

409
00:19:17,039 --> 00:19:19,080
internet has all these smart people

410
00:19:19,080 --> 00:19:21,059
right

411
00:19:21,059 --> 00:19:23,400
they mostly spend time arguing on social

412
00:19:23,400 --> 00:19:25,260
media but

413
00:19:25,260 --> 00:19:27,059
um there's all these smart people out

414
00:19:27,059 --> 00:19:29,520
there so I'm I'm like I gotta think like

415
00:19:29,520 --> 00:19:31,500
a student what does students do you sign

416
00:19:31,500 --> 00:19:34,140
a problem Google

417
00:19:34,140 --> 00:19:37,039
and they usually end up wear like stack

418
00:19:37,039 --> 00:19:41,340
Overflow other places like that

419
00:19:41,340 --> 00:19:43,620
you know it's amazing I talked to some

420
00:19:43,620 --> 00:19:45,600
of my students I'm like you know

421
00:19:45,600 --> 00:19:48,900
I remember there was a guy that wrote

422
00:19:48,900 --> 00:19:51,419
this word processor for the Apple II

423
00:19:51,419 --> 00:19:53,760
series it was called Apple writer Some

424
00:19:53,760 --> 00:19:56,220
of you may have seen it maybe some of

425
00:19:56,220 --> 00:19:58,679
you even ran it uh

426
00:19:58,679 --> 00:20:00,720
the guy went up to the top of a mountain

427
00:20:00,720 --> 00:20:04,020
with miles of extension cord to go write

428
00:20:04,020 --> 00:20:06,900
that it's like today nobody does that

429
00:20:06,900 --> 00:20:09,360
right be like oh I have to be somewhere

430
00:20:09,360 --> 00:20:11,400
I have internet so I can search and find

431
00:20:11,400 --> 00:20:12,780
out

432
00:20:12,780 --> 00:20:16,020
so I'm looking around thinking

433
00:20:16,020 --> 00:20:18,059
surely somebody

434
00:20:18,059 --> 00:20:21,480
found a way to do this

435
00:20:21,480 --> 00:20:22,200
um

436
00:20:22,200 --> 00:20:23,760
no

437
00:20:23,760 --> 00:20:26,400
you know I see other people asking

438
00:20:26,400 --> 00:20:28,860
similar questions you know one guy even

439
00:20:28,860 --> 00:20:32,220
said just no just use Python just use

440
00:20:32,220 --> 00:20:34,200
Python don't don't even try someone else

441
00:20:34,200 --> 00:20:37,620
said oh well here I wrote you a simple C

442
00:20:37,620 --> 00:20:38,539
program

443
00:20:38,539 --> 00:20:41,280
that will do this for you what what the

444
00:20:41,280 --> 00:20:44,039
guy was asking you're like all right

445
00:20:44,039 --> 00:20:47,039
so I said well maybe we can kind of meet

446
00:20:47,039 --> 00:20:51,120
in the middle right maybe I can have

447
00:20:51,120 --> 00:20:53,100
mostly A bash script

448
00:20:53,100 --> 00:20:56,160
and then a bass script that builds a

449
00:20:56,160 --> 00:20:58,260
command line for very small python

450
00:20:58,260 --> 00:21:00,360
script that just does that last little

451
00:21:00,360 --> 00:21:04,939
bit read a sector redisector Etc

452
00:21:05,340 --> 00:21:09,059
so it looked kind of like

453
00:21:09,059 --> 00:21:14,960
this so here's iteration number two

454
00:21:17,580 --> 00:21:21,379
it starts out pretty similar

455
00:21:21,480 --> 00:21:26,120
I'm going to parse my command line

456
00:21:28,860 --> 00:21:30,840
and

457
00:21:30,840 --> 00:21:33,960
I'm going to use get Ops again

458
00:21:33,960 --> 00:21:37,640
create my array of stuff

459
00:21:39,000 --> 00:21:42,059
and now I'm going to create

460
00:21:42,059 --> 00:21:45,780
an array of things to search for

461
00:21:45,780 --> 00:21:48,659
and I'm going to get really fancy I'm

462
00:21:48,659 --> 00:21:50,700
just going to say search for this or

463
00:21:50,700 --> 00:21:53,400
this or this or this okay

464
00:21:53,400 --> 00:21:56,520
using alternation

465
00:21:56,520 --> 00:21:58,980
and this is another thing I I find kind

466
00:21:58,980 --> 00:22:01,320
of funny often when I'm teaching regular

467
00:22:01,320 --> 00:22:04,679
expressions in a lot of classes you know

468
00:22:04,679 --> 00:22:06,419
we teach it and we teach it and we teach

469
00:22:06,419 --> 00:22:08,700
it because it's kind of an important

470
00:22:08,700 --> 00:22:10,679
topic

471
00:22:10,679 --> 00:22:12,720
I get really sad though sometimes when

472
00:22:12,720 --> 00:22:14,700
students at least claim and they're like

473
00:22:14,700 --> 00:22:18,000
oh yeah I never learned this before like

474
00:22:18,000 --> 00:22:20,640
you took these two classes and it's on

475
00:22:20,640 --> 00:22:22,980
the standard syllabus for that class so

476
00:22:22,980 --> 00:22:25,380
either someone's not teaching it or

477
00:22:25,380 --> 00:22:27,360
you're lying

478
00:22:27,360 --> 00:22:29,460
um so anyway

479
00:22:29,460 --> 00:22:31,380
you'll show them how you can do all

480
00:22:31,380 --> 00:22:32,820
these things with regular expressions

481
00:22:32,820 --> 00:22:35,460
and then I say uh like you know I might

482
00:22:35,460 --> 00:22:37,740
have a test question I want to search

483
00:22:37,740 --> 00:22:40,559
for someone named William

484
00:22:40,559 --> 00:22:41,520
right

485
00:22:41,520 --> 00:22:44,120
and how could I find

486
00:22:44,120 --> 00:22:48,480
a name that contains somebody who is

487
00:22:48,480 --> 00:22:51,299
named William right because William's

488
00:22:51,299 --> 00:22:53,840
great because William could be William

489
00:22:53,840 --> 00:22:57,000
Will Bill

490
00:22:57,000 --> 00:23:01,200
Willie Billy and you know there's a lot

491
00:23:01,200 --> 00:23:02,880
of different variations

492
00:23:02,880 --> 00:23:05,280
so I'm like well you know come up with a

493
00:23:05,280 --> 00:23:06,900
regular expression for this and what do

494
00:23:06,900 --> 00:23:09,539
they come up with William or

495
00:23:09,539 --> 00:23:14,220
Willie or Billy or will or Bill you're

496
00:23:14,220 --> 00:23:17,400
like well it does kind of work

497
00:23:17,400 --> 00:23:19,620
you know so hey basically I'm cheating

498
00:23:19,620 --> 00:23:21,360
here that's that's what I'm doing with

499
00:23:21,360 --> 00:23:22,919
this regular expression

500
00:23:22,919 --> 00:23:26,100
so I'm saying okay I found jpeg

501
00:23:26,100 --> 00:23:28,380
and all of these have that alternation

502
00:23:28,380 --> 00:23:30,900
character or

503
00:23:30,900 --> 00:23:32,820
um altruization I just made up a word

504
00:23:32,820 --> 00:23:35,580
alternation character also known as a

505
00:23:35,580 --> 00:23:37,260
vertical pipe

506
00:23:37,260 --> 00:23:39,659
and then at the end

507
00:23:39,659 --> 00:23:42,539
I concatenate all this stuff together

508
00:23:42,539 --> 00:23:46,580
and then I just strip It Off

509
00:23:47,039 --> 00:23:50,760
I just say hey go ahead and do this

510
00:23:50,760 --> 00:23:54,120
so here what I'm doing

511
00:23:54,120 --> 00:23:57,480
is I'm referencing an environment

512
00:23:57,480 --> 00:24:00,419
variable now in scripting when you do

513
00:24:00,419 --> 00:24:03,240
this there's kind of the normal way like

514
00:24:03,240 --> 00:24:06,659
here I just said dollar sign grep string

515
00:24:06,659 --> 00:24:08,400
that's sort of the normal way you do

516
00:24:08,400 --> 00:24:10,380
that and then there's the safe way

517
00:24:10,380 --> 00:24:12,240
where you put the variable name inside

518
00:24:12,240 --> 00:24:14,640
curly brackets

519
00:24:14,640 --> 00:24:16,799
now when you put things inside curly

520
00:24:16,799 --> 00:24:18,840
brackets there's also some operations

521
00:24:18,840 --> 00:24:21,659
you can do to those things

522
00:24:21,659 --> 00:24:23,460
and believe it or not

523
00:24:23,460 --> 00:24:27,179
if you say percent question mark that'll

524
00:24:27,179 --> 00:24:30,539
strip off the last character

525
00:24:30,539 --> 00:24:32,280
if you want to strip off the last two

526
00:24:32,280 --> 00:24:33,840
characters you just have percent

527
00:24:33,840 --> 00:24:37,500
question mark question mark Etc okay

528
00:24:37,500 --> 00:24:40,320
and how do I know this because I am

529
00:24:40,320 --> 00:24:42,299
God's gift to bad scripting no because I

530
00:24:42,299 --> 00:24:44,360
know how to use Google

531
00:24:44,360 --> 00:24:47,520
you know sometimes I'll have to do

532
00:24:47,520 --> 00:24:49,320
things like this and students will ask

533
00:24:49,320 --> 00:24:51,419
me how did you know that I'm like look

534
00:24:51,419 --> 00:24:53,159
I'm going to be honest with you I don't

535
00:24:53,159 --> 00:24:54,780
do this every day

536
00:24:54,780 --> 00:24:57,000
so every six months when I have to do

537
00:24:57,000 --> 00:24:58,799
something like this I Google it again go

538
00:24:58,799 --> 00:25:00,360
oh yeah that's right that's how that

539
00:25:00,360 --> 00:25:02,100
worked

540
00:25:02,100 --> 00:25:03,539
okay

541
00:25:03,539 --> 00:25:05,880
and once again I'm going to check did

542
00:25:05,880 --> 00:25:08,039
you give me a file

543
00:25:08,039 --> 00:25:09,900
um get the size

544
00:25:09,900 --> 00:25:12,120
and I'm just going to build a command

545
00:25:12,120 --> 00:25:13,020
line

546
00:25:13,020 --> 00:25:15,000
for this little python script called

547
00:25:15,000 --> 00:25:17,720
read chunk

548
00:25:18,840 --> 00:25:21,720
and here's Reed chunk

549
00:25:21,720 --> 00:25:24,419
it has pretty much

550
00:25:24,419 --> 00:25:26,820
that little

551
00:25:26,820 --> 00:25:28,020
Loop

552
00:25:28,020 --> 00:25:30,799
that's about it

553
00:25:31,320 --> 00:25:33,419
because I'm like okay well let's see how

554
00:25:33,419 --> 00:25:35,779
that does

555
00:25:38,760 --> 00:25:41,159
okay so I ran my original python script

556
00:25:41,159 --> 00:25:44,100
on a 19 gigabyte image

557
00:25:44,100 --> 00:25:46,679
for one file type it came out about 18

558
00:25:46,679 --> 00:25:49,039
minutes

559
00:25:50,100 --> 00:25:51,960
hybrid script

560
00:25:51,960 --> 00:25:55,200
came out at slightly under 18 minutes

561
00:25:55,200 --> 00:25:58,500
okay A little progress

562
00:25:58,500 --> 00:26:01,080
then I said let me run it for six

563
00:26:01,080 --> 00:26:03,659
different file types and the python

564
00:26:03,659 --> 00:26:07,039
script went to 90 minutes

565
00:26:07,080 --> 00:26:08,700
and

566
00:26:08,700 --> 00:26:12,179
the hybrid script was still at 17

567
00:26:12,179 --> 00:26:16,080
minutes and change right so I'm like

568
00:26:16,080 --> 00:26:18,678
okay

569
00:26:18,779 --> 00:26:22,799
we should just stop right no

570
00:26:22,799 --> 00:26:26,539
now I'm like

571
00:26:28,559 --> 00:26:30,900
let's try something else

572
00:26:30,900 --> 00:26:33,779
I'm at least happier you know at first I

573
00:26:33,779 --> 00:26:35,820
was like

574
00:26:35,820 --> 00:26:38,460
yeah this this is really working out the

575
00:26:38,460 --> 00:26:40,140
way I wanted

576
00:26:40,140 --> 00:26:42,900
I did crazy things like

577
00:26:42,900 --> 00:26:44,700
I even submitted some possible

578
00:26:44,700 --> 00:26:47,279
conference talks before I'd really done

579
00:26:47,279 --> 00:26:48,960
it

580
00:26:48,960 --> 00:26:51,240
I'm like might have to change a topic or

581
00:26:51,240 --> 00:26:52,860
two but

582
00:26:52,860 --> 00:26:55,440
um so I said well what if I just use

583
00:26:55,440 --> 00:26:58,799
grab you know grep's a great tool

584
00:26:58,799 --> 00:27:02,039
I wasn't in love with this hybrid script

585
00:27:02,039 --> 00:27:03,720
idea

586
00:27:03,720 --> 00:27:06,480
and I just built up a regular expression

587
00:27:06,480 --> 00:27:08,279
to call grep with

588
00:27:08,279 --> 00:27:10,980
didn't use the file utility right so

589
00:27:10,980 --> 00:27:13,380
that was kind of a downside instead I

590
00:27:13,380 --> 00:27:16,260
used Gary Kessler's file signatures if

591
00:27:16,260 --> 00:27:17,700
you do forensics you're probably

592
00:27:17,700 --> 00:27:21,299
familiar uh with Gary Kessler and

593
00:27:21,299 --> 00:27:24,059
possibly his file signature page it's

594
00:27:24,059 --> 00:27:26,460
probably one of the most up-to-date file

595
00:27:26,460 --> 00:27:30,059
signature pages out there

596
00:27:30,059 --> 00:27:33,960
so I said let's do that

597
00:27:33,960 --> 00:27:35,820
but there were a couple of problems

598
00:27:35,820 --> 00:27:37,140
right

599
00:27:37,140 --> 00:27:38,820
so first problem

600
00:27:38,820 --> 00:27:42,120
sometimes I have to search for things

601
00:27:42,120 --> 00:27:45,900
that are binary strengths and those are

602
00:27:45,900 --> 00:27:48,840
kind of hard to enter and how do I get

603
00:27:48,840 --> 00:27:51,960
that stuff into graph okay

604
00:27:51,960 --> 00:27:54,380
and the answer is actually pretty simple

605
00:27:54,380 --> 00:27:58,860
if you want to have a hex string you

606
00:27:58,860 --> 00:28:02,580
just put a dollar sign out front oops

607
00:28:02,580 --> 00:28:04,080
and

608
00:28:04,080 --> 00:28:06,840
then have single quotes not double

609
00:28:06,840 --> 00:28:09,360
quotes and then you put your stuff in

610
00:28:09,360 --> 00:28:12,480
like this backslash X and then your hex

611
00:28:12,480 --> 00:28:17,600
value backslash x value Etc

612
00:28:17,820 --> 00:28:20,400
in general by the way for those of you

613
00:28:20,400 --> 00:28:22,860
who are maybe not scripting in bash all

614
00:28:22,860 --> 00:28:24,120
the time

615
00:28:24,120 --> 00:28:25,740
remember there's a difference between

616
00:28:25,740 --> 00:28:28,440
double and single quotes right and the

617
00:28:28,440 --> 00:28:30,360
difference is this when you put things

618
00:28:30,360 --> 00:28:32,640
in double quotes the shell interprets

619
00:28:32,640 --> 00:28:34,080
them

620
00:28:34,080 --> 00:28:36,120
if you put it in single quotes it's like

621
00:28:36,120 --> 00:28:40,260
hey Shell just pass it along don't even

622
00:28:40,260 --> 00:28:41,700
look at it

623
00:28:41,700 --> 00:28:43,559
so usually if you're dealing with things

624
00:28:43,559 --> 00:28:45,600
like regular Expressions I say always

625
00:28:45,600 --> 00:28:47,940
single quotes that way you don't have to

626
00:28:47,940 --> 00:28:50,340
think about hey Will some of these funny

627
00:28:50,340 --> 00:28:52,919
characters and my regular expression be

628
00:28:52,919 --> 00:28:54,600
interpreted as something by the Shelf

629
00:28:54,600 --> 00:28:57,960
single quotes don't even think about it

630
00:28:57,960 --> 00:28:59,940
it's kind of like one of my other

631
00:28:59,940 --> 00:29:04,140
general rules that I will tell people if

632
00:29:04,140 --> 00:29:06,840
you're searching for anything that's not

633
00:29:06,840 --> 00:29:09,720
a literal strength do not use grep use

634
00:29:09,720 --> 00:29:11,580
egrep

635
00:29:11,580 --> 00:29:13,799
because I don't want to sit and think

636
00:29:13,799 --> 00:29:17,039
because thinking is bad and hard right I

637
00:29:17,039 --> 00:29:19,380
don't want to sit and think hey is this

638
00:29:19,380 --> 00:29:22,080
an extended regular expression element

639
00:29:22,080 --> 00:29:24,779
or is this a basic regular expression

640
00:29:24,779 --> 00:29:27,120
element just use egrep don't have to

641
00:29:27,120 --> 00:29:28,440
worry about it

642
00:29:28,440 --> 00:29:30,559
all right here's a trivia question

643
00:29:30,559 --> 00:29:33,659
this signature I have on the screen here

644
00:29:33,659 --> 00:29:40,080
d0 CF 1 1 e0 is this file signature for

645
00:29:40,080 --> 00:29:42,500
what

646
00:29:43,980 --> 00:29:47,059
anybody know

647
00:29:48,120 --> 00:29:51,559
he's going to Google it no

648
00:29:51,779 --> 00:29:56,279
this is an old school Office document

649
00:29:56,279 --> 00:29:58,200
all right and here's how you can

650
00:29:58,200 --> 00:30:03,380
remember it this is a doc filio

651
00:30:04,140 --> 00:30:08,399
see how it spells out doc file

652
00:30:08,399 --> 00:30:10,559
oh

653
00:30:10,559 --> 00:30:13,260
it's a it's Italian it's a doc filio

654
00:30:13,260 --> 00:30:16,260
right

655
00:30:16,980 --> 00:30:18,720
okay

656
00:30:18,720 --> 00:30:21,480
second problem when you use a tool like

657
00:30:21,480 --> 00:30:24,840
grab and you grab a binary file which

658
00:30:24,840 --> 00:30:26,640
all the files that we're talking about

659
00:30:26,640 --> 00:30:27,960
will be

660
00:30:27,960 --> 00:30:30,720
it typically just says binary file

661
00:30:30,720 --> 00:30:33,240
matches you're like well thank you very

662
00:30:33,240 --> 00:30:37,440
much what matched where did it match

663
00:30:37,440 --> 00:30:41,220
now graph as you may know is a line

664
00:30:41,220 --> 00:30:44,580
oriented tool by default it says let me

665
00:30:44,580 --> 00:30:48,059
search each line and your text file and

666
00:30:48,059 --> 00:30:50,399
there is no such thing as a line in a

667
00:30:50,399 --> 00:30:51,659
binary file

668
00:30:51,659 --> 00:30:54,539
so what does it even print it prints the

669
00:30:54,539 --> 00:30:56,820
line well there is no line so it doesn't

670
00:30:56,820 --> 00:30:58,260
know what to do

671
00:30:58,260 --> 00:31:01,260
so how do you fix that uh you can just

672
00:31:01,260 --> 00:31:05,760
tell it uh dash dash byte offset that'll

673
00:31:05,760 --> 00:31:09,539
say this is where I found it dash dash

674
00:31:09,539 --> 00:31:11,820
only matching

675
00:31:11,820 --> 00:31:14,700
so only the stuff that matched will be

676
00:31:14,700 --> 00:31:16,980
returned dash dash text says please

677
00:31:16,980 --> 00:31:19,679
teach it to treat this thing like a text

678
00:31:19,679 --> 00:31:22,200
file even though it's not

679
00:31:22,200 --> 00:31:25,320
and then I give it my grub string and my

680
00:31:25,320 --> 00:31:28,919
image file right okay not too hard

681
00:31:28,919 --> 00:31:31,200
third problem

682
00:31:31,200 --> 00:31:35,640
decimal numbers decimal numbers are ugly

683
00:31:35,640 --> 00:31:37,200
right

684
00:31:37,200 --> 00:31:39,600
and it's hard to see does this is is

685
00:31:39,600 --> 00:31:42,360
this actually on a sector boundary or

686
00:31:42,360 --> 00:31:45,240
not right if everything's in decimal

687
00:31:45,240 --> 00:31:48,539
you're like is that a multiple of 512

688
00:31:48,539 --> 00:31:51,240
some of those numbers are really big

689
00:31:51,240 --> 00:31:53,460
it's hard to say hey is that is that

690
00:31:53,460 --> 00:31:55,320
what I want or not

691
00:31:55,320 --> 00:31:58,679
so here's the solution you can convert

692
00:31:58,679 --> 00:31:59,340
it

693
00:31:59,340 --> 00:32:04,559
to heads using Ock again

694
00:32:04,559 --> 00:32:07,440
so now what am I going to do I am going

695
00:32:07,440 --> 00:32:09,120
to add

696
00:32:09,120 --> 00:32:11,820
on to this by the way this is part of

697
00:32:11,820 --> 00:32:15,120
the whole Unix Linux philosophy you got

698
00:32:15,120 --> 00:32:17,460
a lot of tools that are really good at

699
00:32:17,460 --> 00:32:19,500
one thing and you paste them all

700
00:32:19,500 --> 00:32:22,980
together and you do cool stuff right so

701
00:32:22,980 --> 00:32:25,860
I've just took my results and I said I'm

702
00:32:25,860 --> 00:32:28,080
going to pipe that to awk and once again

703
00:32:28,080 --> 00:32:30,480
I'm going to say Dash f

704
00:32:30,480 --> 00:32:33,899
this is my separator for Fields is a

705
00:32:33,899 --> 00:32:35,340
colon

706
00:32:35,340 --> 00:32:38,460
I'm going to use printf

707
00:32:38,460 --> 00:32:40,620
print formatted it's very similar to

708
00:32:40,620 --> 00:32:42,500
seize printf

709
00:32:42,500 --> 00:32:45,240
there's also a printf in the Shell

710
00:32:45,240 --> 00:32:46,320
itself

711
00:32:46,320 --> 00:32:48,360
and I'm going to say match found at

712
00:32:48,360 --> 00:32:51,659
offset percent X that says please print

713
00:32:51,659 --> 00:32:54,120
the first thing I give you as a

714
00:32:54,120 --> 00:32:56,760
hexadecimal number

715
00:32:56,760 --> 00:33:01,380
colon percent s the next thing is going

716
00:33:01,380 --> 00:33:03,960
to be a string and add a new line to the

717
00:33:03,960 --> 00:33:06,299
end of that and the first thing is

718
00:33:06,299 --> 00:33:08,640
dollar sign one that's the stuff that

719
00:33:08,640 --> 00:33:10,980
came before that colon that was your

720
00:33:10,980 --> 00:33:13,019
offset it's the way that grep's going to

721
00:33:13,019 --> 00:33:15,419
put that information out there

722
00:33:15,419 --> 00:33:19,559
dollar sign two is all the other stuff

723
00:33:19,559 --> 00:33:20,760
okay

724
00:33:20,760 --> 00:33:23,519
it's starting to shape up

725
00:33:23,519 --> 00:33:27,179
but wait there's still more problems

726
00:33:27,179 --> 00:33:30,179
some of these search strings aren't very

727
00:33:30,179 --> 00:33:33,480
printable like our doc filio

728
00:33:33,480 --> 00:33:35,940
example is one

729
00:33:35,940 --> 00:33:40,620
if I'm looking for things like a JPEG

730
00:33:40,620 --> 00:33:41,580
image

731
00:33:41,580 --> 00:33:45,120
the jpeg image might start with one of

732
00:33:45,120 --> 00:33:47,519
three headers ffda

733
00:33:47,519 --> 00:33:50,299
uh

734
00:33:51,140 --> 00:33:53,779
ffe0 something something

735
00:33:53,779 --> 00:33:56,220
J fifth

736
00:33:56,220 --> 00:33:58,140
uh I say something something because

737
00:33:58,140 --> 00:33:59,519
there's two bytes that you don't know

738
00:33:59,519 --> 00:34:00,840
what they are and it's going to vary

739
00:34:00,840 --> 00:34:02,880
from file to file

740
00:34:02,880 --> 00:34:05,059
um and then there's one that starts out

741
00:34:05,059 --> 00:34:09,659
ffda uh FF e

742
00:34:09,659 --> 00:34:12,540
eight I think it is

743
00:34:12,540 --> 00:34:16,139
something something and then uh that one

744
00:34:16,139 --> 00:34:17,219
is

745
00:34:17,219 --> 00:34:20,879
X if with a certain capitalization and

746
00:34:20,879 --> 00:34:23,040
then there's one that has a spiff in

747
00:34:23,040 --> 00:34:25,320
there it's not as common but

748
00:34:25,320 --> 00:34:28,260
anyway the important thing is this

749
00:34:28,260 --> 00:34:30,899
stuff's not easily printed

750
00:34:30,899 --> 00:34:32,879
okay just looks like garbage on your

751
00:34:32,879 --> 00:34:34,500
screen so you're like hey your match was

752
00:34:34,500 --> 00:34:37,859
and you're like oh what was that

753
00:34:37,859 --> 00:34:39,960
some sort of file

754
00:34:39,960 --> 00:34:41,820
but I might just search for multiple

755
00:34:41,820 --> 00:34:43,320
file types so I don't really know what

756
00:34:43,320 --> 00:34:44,280
it is

757
00:34:44,280 --> 00:34:47,339
so what we do is we use said

758
00:34:47,339 --> 00:34:52,139
so said is great for doing substitutions

759
00:34:52,139 --> 00:34:55,020
so I just added I keep adding to this

760
00:34:55,020 --> 00:34:57,720
command here I said pipe that to said

761
00:34:57,720 --> 00:35:00,960
here's my expression

762
00:35:00,960 --> 00:35:04,680
please substitute that's the S command

763
00:35:04,680 --> 00:35:07,500
and then I say slash whenever you find

764
00:35:07,500 --> 00:35:10,320
this doc filio

765
00:35:10,320 --> 00:35:13,560
please just say Office document

766
00:35:13,560 --> 00:35:16,560
that's a lot more human friendly

767
00:35:16,560 --> 00:35:21,540
similarly if I see this for the new

768
00:35:21,540 --> 00:35:24,420
style office documents they're XML base

769
00:35:24,420 --> 00:35:26,460
which are zipped

770
00:35:26,460 --> 00:35:28,920
with the pkzip algorithm

771
00:35:28,920 --> 00:35:31,980
please just say office XML document or

772
00:35:31,980 --> 00:35:33,240
zip file

773
00:35:33,240 --> 00:35:34,440
okay

774
00:35:34,440 --> 00:35:35,880
getting better

775
00:35:35,880 --> 00:35:38,460
Are We There Yet of course not all right

776
00:35:38,460 --> 00:35:40,859
fifth problem

777
00:35:40,859 --> 00:35:43,400
a lot of false positives

778
00:35:43,400 --> 00:35:45,599
especially with something like a zip

779
00:35:45,599 --> 00:35:48,180
file zip file

780
00:35:48,180 --> 00:35:52,079
is having a signature of PK it's two

781
00:35:52,079 --> 00:35:53,339
characters

782
00:35:53,339 --> 00:35:56,160
gonna get a lot of false positives on

783
00:35:56,160 --> 00:35:58,079
that okay

784
00:35:58,079 --> 00:36:01,700
so what does PK stand for

785
00:36:06,480 --> 00:36:07,560
yeah

786
00:36:07,560 --> 00:36:10,820
I think I heard it

787
00:36:11,099 --> 00:36:13,680
yeah yeah so

788
00:36:13,680 --> 00:36:16,500
it's it's the guy that made the

789
00:36:16,500 --> 00:36:18,300
algorithm right

790
00:36:18,300 --> 00:36:20,099
but

791
00:36:20,099 --> 00:36:22,500
if you look at a Microsoft executable

792
00:36:22,500 --> 00:36:25,740
file it starts with what

793
00:36:25,740 --> 00:36:29,460
MZ which is some other guy's initials we

794
00:36:29,460 --> 00:36:32,579
don't have any egotistical people at all

795
00:36:32,579 --> 00:36:35,220
in this industry right it's like I'm

796
00:36:35,220 --> 00:36:37,740
gonna put my initials in there okay

797
00:36:37,740 --> 00:36:39,839
uh

798
00:36:39,839 --> 00:36:42,240
it's hard to remember that so I always

799
00:36:42,240 --> 00:36:44,040
give people other ways to remember so

800
00:36:44,040 --> 00:36:48,859
like Microsoft executables are Microsoft

801
00:36:48,859 --> 00:36:52,560
executables MZ

802
00:36:52,560 --> 00:36:55,619
uh PK what's a PK

803
00:36:55,619 --> 00:36:57,480
as it applies to a person

804
00:36:57,480 --> 00:37:01,040
you ever heard the term PK

805
00:37:01,560 --> 00:37:03,839
preacher kid what do you know about

806
00:37:03,839 --> 00:37:06,500
preacher kids

807
00:37:08,339 --> 00:37:11,579
they they're like always repressed and

808
00:37:11,579 --> 00:37:14,280
like compressed see that's how I

809
00:37:14,280 --> 00:37:17,220
remember PK creatures okay

810
00:37:17,220 --> 00:37:19,440
and then what happens like they go to

811
00:37:19,440 --> 00:37:20,760
college

812
00:37:20,760 --> 00:37:23,099
pressure release yeah

813
00:37:23,099 --> 00:37:24,780
they call that the pressure cooker

814
00:37:24,780 --> 00:37:26,400
effect right

815
00:37:26,400 --> 00:37:27,599
okay

816
00:37:27,599 --> 00:37:30,780
so now I want

817
00:37:30,780 --> 00:37:33,060
to eliminate those false positives well

818
00:37:33,060 --> 00:37:35,820
this one's probably the easiest one to

819
00:37:35,820 --> 00:37:36,960
solve

820
00:37:36,960 --> 00:37:39,900
I'm just going to say egrep on zero zero

821
00:37:39,900 --> 00:37:42,960
space colon space

822
00:37:42,960 --> 00:37:46,560
so if that offset ended in zero zero

823
00:37:46,560 --> 00:37:51,140
probably not a false positive anymore

824
00:37:51,300 --> 00:37:52,619
all right

825
00:37:52,619 --> 00:37:55,560
and then the next problem okay no

826
00:37:55,560 --> 00:37:58,260
there was no more problems

827
00:37:58,260 --> 00:38:02,240
so here are the results

828
00:38:03,839 --> 00:38:06,920
check out this run time

829
00:38:06,920 --> 00:38:10,339
46 seconds

830
00:38:11,460 --> 00:38:13,920
so I went from

831
00:38:13,920 --> 00:38:16,020
90 minutes

832
00:38:16,020 --> 00:38:18,119
to 46 seconds

833
00:38:18,119 --> 00:38:22,020
that's an improvement of 120 times

834
00:38:22,020 --> 00:38:24,920
faster

835
00:38:25,500 --> 00:38:29,520
should I stop there no okay I kind of

836
00:38:29,520 --> 00:38:33,900
stopped there now to be fair

837
00:38:33,900 --> 00:38:36,180
you know in if you want to well I'll

838
00:38:36,180 --> 00:38:39,140
just show you real quick

839
00:38:39,480 --> 00:38:42,720
I essentially showed you this script

840
00:38:42,720 --> 00:38:45,240
you know again we we parse all this

841
00:38:45,240 --> 00:38:48,839
stuff and here it is it's like this one

842
00:38:48,839 --> 00:38:53,540
liner at the at the very end of it

843
00:38:53,579 --> 00:38:57,000
I'm just like run grab pipe it to this

844
00:38:57,000 --> 00:38:58,500
pipe to that pipe to that just keep

845
00:38:58,500 --> 00:39:00,780
piping it so you get what you want right

846
00:39:00,780 --> 00:39:03,300
keep making those results smaller and

847
00:39:03,300 --> 00:39:06,359
smaller and maybe reformat them a little

848
00:39:06,359 --> 00:39:08,400
bit

849
00:39:08,400 --> 00:39:09,839
so I'm like

850
00:39:09,839 --> 00:39:13,940
yeah I'm feeling pretty good about that

851
00:39:13,980 --> 00:39:15,839
now however

852
00:39:15,839 --> 00:39:20,220
to be fair I'm not getting quite the

853
00:39:20,220 --> 00:39:23,820
level of information I was getting out

854
00:39:23,820 --> 00:39:26,460
of my original script right because I

855
00:39:26,460 --> 00:39:30,380
went from using file which does way more

856
00:39:30,380 --> 00:39:34,740
than just say oh this is a Microsoft

857
00:39:34,740 --> 00:39:38,099
Word document it will tell me this is

858
00:39:38,099 --> 00:39:40,200
the author of that document this is the

859
00:39:40,200 --> 00:39:41,579
program that was used to create the

860
00:39:41,579 --> 00:39:43,740
document this is how long the document

861
00:39:43,740 --> 00:39:44,579
is

862
00:39:44,579 --> 00:39:47,160
right if it's a JPEG it'll tell me what

863
00:39:47,160 --> 00:39:48,780
size the jpeg is

864
00:39:48,780 --> 00:39:51,480
if it's a gif file it'll tell me which

865
00:39:51,480 --> 00:39:53,880
version it is you know it's going to

866
00:39:53,880 --> 00:39:55,859
tell me a lot more so I'm like okay

867
00:39:55,859 --> 00:39:58,920
since I saved all this time

868
00:39:58,920 --> 00:40:00,900
I'm going to write another little script

869
00:40:00,900 --> 00:40:04,020
I could have implemented this as part of

870
00:40:04,020 --> 00:40:06,720
the main script I just chose not to

871
00:40:06,720 --> 00:40:09,780
and I said I'm going to use the full

872
00:40:09,780 --> 00:40:13,140
benefit of using file so I went back to

873
00:40:13,140 --> 00:40:15,599
DD I'm like I'm just going to suck in on

874
00:40:15,599 --> 00:40:18,900
one thing right call it a day I can get

875
00:40:18,900 --> 00:40:20,820
away with it I'm not doing this a

876
00:40:20,820 --> 00:40:22,859
million times anymore

877
00:40:22,859 --> 00:40:25,859
so I said all right let's do this DD

878
00:40:25,859 --> 00:40:31,380
block size 512 standard sector count 4K

879
00:40:31,380 --> 00:40:35,280
I'm like 4K sectors probably ought to be

880
00:40:35,280 --> 00:40:37,079
able to tell me about this file

881
00:40:37,079 --> 00:40:39,660
might be larger than the actual file but

882
00:40:39,660 --> 00:40:41,640
it's gonna work right

883
00:40:41,640 --> 00:40:44,640
file is gonna do a really good job about

884
00:40:44,640 --> 00:40:47,280
telling me about this file

885
00:40:47,280 --> 00:40:49,579
I'm going to skip ahead

886
00:40:49,579 --> 00:40:53,820
to whatever Offset you gave me divided

887
00:40:53,820 --> 00:40:56,760
by 512 again I'm using that little trick

888
00:40:56,760 --> 00:40:59,599
I'm doing math in the shell

889
00:40:59,599 --> 00:41:03,119
my input file is going to be the second

890
00:41:03,119 --> 00:41:06,119
argument you gave me any errors go to

891
00:41:06,119 --> 00:41:09,300
the big black hole known as death null

892
00:41:09,300 --> 00:41:12,180
I'm going to pipe that to file Dash

893
00:41:12,180 --> 00:41:16,819
and errors go to Devon Hall again

894
00:41:16,980 --> 00:41:21,359
and here's an example of it's kind of

895
00:41:21,359 --> 00:41:24,300
hard to read in here but uh anyway this

896
00:41:24,300 --> 00:41:26,280
was looking at

897
00:41:26,280 --> 00:41:29,280
a file that turns out it says I'll just

898
00:41:29,280 --> 00:41:31,320
read it to you composite document file

899
00:41:31,320 --> 00:41:33,660
version 2 document little end in OS

900
00:41:33,660 --> 00:41:37,380
Windows version 5. and creating

901
00:41:37,380 --> 00:41:41,099
application Microsoft installer subject

902
00:41:41,099 --> 00:41:44,099
uh

903
00:41:45,079 --> 00:41:48,420
engnse ship author Microsoft Corporation

904
00:41:48,420 --> 00:41:52,260
here's keywords in it comments

905
00:41:52,260 --> 00:41:54,480
and

906
00:41:54,480 --> 00:41:58,619
it's 30 pages it's a template and all of

907
00:41:58,619 --> 00:42:00,660
this number of words doesn't say number

908
00:42:00,660 --> 00:42:02,579
of words one I don't know if I believe

909
00:42:02,579 --> 00:42:05,099
that but it's 30 pages but there's only

910
00:42:05,099 --> 00:42:06,780
one word in it

911
00:42:06,780 --> 00:42:09,060
maybe that's off my screen here but

912
00:42:09,060 --> 00:42:12,900
anyway so it's telling me all of this

913
00:42:12,900 --> 00:42:15,660
stuff so I'm like I still have that even

914
00:42:15,660 --> 00:42:17,640
if I took the results

915
00:42:17,640 --> 00:42:20,099
from the first script and I piped it to

916
00:42:20,099 --> 00:42:21,540
this script

917
00:42:21,540 --> 00:42:23,579
you know I would still get it to run in

918
00:42:23,579 --> 00:42:25,500
I don't know maybe it would take a a

919
00:42:25,500 --> 00:42:27,839
minute so it'd only be a hundred times

920
00:42:27,839 --> 00:42:31,500
faster instead of 120 but

921
00:42:31,500 --> 00:42:34,500
still I think pretty good

922
00:42:34,500 --> 00:42:37,380
all right so that's pretty much it uh

923
00:42:37,380 --> 00:42:40,579
any questions

924
00:42:43,680 --> 00:42:46,560
everyone's tired it's the second to last

925
00:42:46,560 --> 00:42:49,200
talk slot so thanks for sticking with me

926
00:42:49,200 --> 00:42:50,820
to the end here

927
00:42:50,820 --> 00:42:52,440
no questions

928
00:42:52,440 --> 00:42:55,260
oh just one quick thing I will mention

929
00:42:55,260 --> 00:42:57,240
though uh since I have a couple of

930
00:42:57,240 --> 00:43:00,060
minutes if you didn't know I heard

931
00:43:00,060 --> 00:43:02,099
there's a really cool conference that

932
00:43:02,099 --> 00:43:03,900
happens at the end of March in

933
00:43:03,900 --> 00:43:05,700
Bloomsburg Pennsylvania

934
00:43:05,700 --> 00:43:07,980
called bloomcon and if you want to know

935
00:43:07,980 --> 00:43:11,339
more about that ask me later but we

936
00:43:11,339 --> 00:43:13,819
actually put that on every year

937
00:43:13,819 --> 00:43:18,300
and more than welcome to come up and see

938
00:43:18,300 --> 00:43:20,460
us for that and tell you more about that

939
00:43:20,460 --> 00:43:23,560
later so thanks for listening

940
00:43:23,560 --> 00:43:28,480
[Applause]

941
00:43:29,220 --> 00:43:32,040
this talk was a part of our 2022 secure

942
00:43:32,040 --> 00:43:34,500
West Virginia Lucky 13 conference if you

943
00:43:34,500 --> 00:43:36,060
would like more information about this

944
00:43:36,060 --> 00:43:37,800
talk or our speaker check the

945
00:43:37,800 --> 00:43:40,020
description below and if you enjoyed the

946
00:43:40,020 --> 00:43:41,760
content consider liking and sharing this

947
00:43:41,760 --> 00:43:43,980
video for more information on secure

948
00:43:43,980 --> 00:43:45,480
West Virginia or you want to stay

949
00:43:45,480 --> 00:43:47,579
updated with the latest upcoming events

950
00:43:47,579 --> 00:43:51,240
follow us on Twitter at securewvcon or

951
00:43:51,240 --> 00:43:54,240
visit our website securewv.org

952
00:43:54,240 --> 00:43:56,460
we would like also like to thank our

953
00:43:56,460 --> 00:43:58,859
2022 sponsors for being a huge part of

954
00:43:58,859 --> 00:44:02,000
Lucky 13 success

