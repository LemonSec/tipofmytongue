1
00:00:00,000 --> 00:00:06,230
<font color="#E5E5E5">but you need a group to get into the</font>

2
00:00:01,740 --> 00:00:09,139
<font color="#CCCCCC">director's okay yeah so sorry about that</font>

3
00:00:06,230 --> 00:00:11,370
<font color="#E5E5E5">it's always fun when you're trying to</font>

4
00:00:09,139 --> 00:00:13,919
compromise and point something that

5
00:00:11,370 --> 00:00:24,479
works for everybody<font color="#E5E5E5"> and usually there's</font>

6
00:00:13,920 --> 00:00:29,130
nobody to this workshop is<font color="#E5E5E5"> going to be</font>

7
00:00:24,480 --> 00:00:31,859
about<font color="#CCCCCC"> stack buffer overflows and a</font>

8
00:00:29,130 --> 00:00:34,500
little bit about the format<font color="#E5E5E5"> screen and</font>

9
00:00:31,859 --> 00:00:38,030
<font color="#E5E5E5">exactly what we cover is somewhat</font>

10
00:00:34,500 --> 00:00:43,590
<font color="#E5E5E5">dependent</font><font color="#CCCCCC"> on you guys so this</font><font color="#E5E5E5"> is</font>

11
00:00:38,030 --> 00:00:47,000
shamelessly ripped off from a class I

12
00:00:43,590 --> 00:00:49,379
did for pentester academy<font color="#E5E5E5"> that is</font>

13
00:00:47,000 --> 00:00:52,079
available<font color="#CCCCCC"> this class is actually</font>

14
00:00:49,379 --> 00:00:55,160
completed<font color="#E5E5E5"> it's one of a series</font><font color="#CCCCCC"> of</font>

15
00:00:52,079 --> 00:00:58,859
<font color="#E5E5E5">classes on reverse engineering and stuff</font>

16
00:00:55,160 --> 00:01:01,379
<font color="#E5E5E5">so this is a 32</font><font color="#CCCCCC"> bit we do is reverse</font>

17
00:00:58,859 --> 00:01:04,049
engineering class<font color="#E5E5E5"> if I remember</font>

18
00:01:01,379 --> 00:01:12,060
<font color="#E5E5E5">correctly there's about 19 hours of</font>

19
00:01:04,049 --> 00:01:13,860
<font color="#CCCCCC">stalin's it's a pretty deep dive it's</font>

20
00:01:12,060 --> 00:01:18,390
not just stack buffer overflows it's

21
00:01:13,860 --> 00:01:21,420
like pretty<font color="#CCCCCC"> much everything so this</font><font color="#E5E5E5"> is</font>

22
00:01:18,390 --> 00:01:26,549
sort<font color="#E5E5E5"> of the beginning portions of that</font>

23
00:01:21,420 --> 00:01:29,159
class in a workshop format depending<font color="#E5E5E5"> on</font>

24
00:01:26,549 --> 00:01:33,750
<font color="#E5E5E5">what you guys</font><font color="#CCCCCC"> want and</font><font color="#E5E5E5"> where we get</font>

25
00:01:29,159 --> 00:01:39,210
timewise we'll also talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> format</font>

26
00:01:33,750 --> 00:01:42,420
<font color="#E5E5E5">straighteners so first of all</font><font color="#CCCCCC"> a question</font>

27
00:01:39,210 --> 00:01:49,250
<font color="#E5E5E5">how many of you I've done any kind of</font>

28
00:01:42,420 --> 00:01:54,409
reverse engineering<font color="#CCCCCC"> for how much juice</font>

29
00:01:49,250 --> 00:01:54,409
have done at<font color="#E5E5E5"> least the little pentester</font>

30
00:01:54,439 --> 00:02:00,089
<font color="#E5E5E5">who feels like they completely</font>

31
00:01:56,549 --> 00:02:01,609
understand<font color="#E5E5E5"> all these flaws and software</font>

32
00:02:00,090 --> 00:02:04,859
and they're not<font color="#E5E5E5"> sure whether it's that</font>

33
00:02:01,609 --> 00:02:10,340
anybody did<font color="#E5E5E5"> you get it</font><font color="#CCCCCC"> work</font>

34
00:02:04,859 --> 00:02:10,340
yes<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> popular I got a copy yeah</font>

35
00:02:11,900 --> 00:02:18,030
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> a little bit</font><font color="#CCCCCC"> what we're</font>

36
00:02:15,420 --> 00:02:20,220
<font color="#E5E5E5">gonna talk</font><font color="#CCCCCC"> about you're just</font><font color="#E5E5E5"> gonna start</font>

37
00:02:18,030 --> 00:02:21,780
<font color="#CCCCCC">talking about you know how do</font><font color="#E5E5E5"> you get</font>

38
00:02:20,220 --> 00:02:24,739
<font color="#E5E5E5">started with this</font>

39
00:02:21,780 --> 00:02:27,420
what sort of<font color="#E5E5E5"> software do you need</font>

40
00:02:24,739 --> 00:02:30,480
hopefully at some point<font color="#E5E5E5"> you guys can get</font>

41
00:02:27,420 --> 00:02:32,940
a copy of a little Windows<font color="#CCCCCC"> 7 OVA file</font>

42
00:02:30,480 --> 00:02:37,560
that's on the thumb drives<font color="#E5E5E5"> that some of</font>

43
00:02:32,940 --> 00:02:39,840
you can read then also it might be

44
00:02:37,560 --> 00:02:45,000
available<font color="#E5E5E5"> soon on their web server</font><font color="#CCCCCC"> near</font>

45
00:02:39,840 --> 00:02:46,590
you<font color="#CCCCCC"> so stand</font><font color="#E5E5E5"> by for that</font><font color="#CCCCCC"> and the nice</font>

46
00:02:45,000 --> 00:02:48,569
<font color="#CCCCCC">thing about that</font><font color="#E5E5E5"> is a lot</font><font color="#CCCCCC"> of the tools</font>

47
00:02:46,590 --> 00:02:52,379
that<font color="#CCCCCC"> you would need</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> already</font>

48
00:02:48,569 --> 00:02:58,700
installed we'll talk a little<font color="#E5E5E5"> bit about</font>

49
00:02:52,379 --> 00:03:02,340
assembly<font color="#E5E5E5"> any of you know assembly</font><font color="#CCCCCC"> oh</font>

50
00:02:58,700 --> 00:03:04,429
<font color="#E5E5E5">yeah come on we're gonna kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> get on</font>

51
00:03:02,340 --> 00:03:07,549
<font color="#E5E5E5">the basics and again</font><font color="#CCCCCC"> give this class</font>

52
00:03:04,430 --> 00:03:10,769
<font color="#E5E5E5">came from a class and customer</font><font color="#CCCCCC"> academy</font>

53
00:03:07,549 --> 00:03:13,310
pentester academy has several classes

54
00:03:10,769 --> 00:03:17,040
and not just start with the other one

55
00:03:13,310 --> 00:03:19,260
40-ish classes<font color="#CCCCCC"> they</font><font color="#E5E5E5"> Nick right now on</font>

56
00:03:17,040 --> 00:03:22,470
things like assembly so in that class of

57
00:03:19,260 --> 00:03:27,090
<font color="#CCCCCC">course</font><font color="#E5E5E5"> I just sort of refer people to</font>

58
00:03:22,470 --> 00:03:36,720
the other class not that this is a promo

59
00:03:27,090 --> 00:03:38,849
<font color="#CCCCCC">for pentester academy how many the short</font>

60
00:03:36,720 --> 00:03:41,160
synopsis<font color="#E5E5E5"> pentester academy is a</font>

61
00:03:38,849 --> 00:03:43,260
subscription site<font color="#E5E5E5"> 39 bucks a month</font><font color="#CCCCCC"> to</font>

62
00:03:41,160 --> 00:03:45,959
get<font color="#CCCCCC"> access to every single class they</font>

63
00:03:43,260 --> 00:03:48,510
have<font color="#E5E5E5"> they have some ongoing classes and</font>

64
00:03:45,959 --> 00:03:50,599
then they have classes like the one<font color="#E5E5E5"> that</font>

65
00:03:48,510 --> 00:03:56,370
<font color="#CCCCCC">I extracted</font><font color="#E5E5E5"> this is the problem</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> our</font>

66
00:03:50,599 --> 00:03:58,048
<font color="#E5E5E5">make it</font><font color="#CCCCCC"> capsule I plus it was at one</font>

67
00:03:56,370 --> 00:04:01,230
point<font color="#CCCCCC"> in</font><font color="#E5E5E5"> ongoing costs not finished</font>

68
00:03:58,049 --> 00:04:03,239
there<font color="#E5E5E5"> we got new stuff coming up all</font><font color="#CCCCCC"> the</font>

69
00:04:01,230 --> 00:04:05,269
<font color="#E5E5E5">time</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> people</font><font color="#CCCCCC"> ask me</font><font color="#E5E5E5"> hey I want</font>

70
00:04:03,239 --> 00:04:07,730
<font color="#E5E5E5">to get into</font><font color="#CCCCCC"> Ingleside what should I do</font>

71
00:04:05,270 --> 00:04:10,100
it's like the biggest no-brainer<font color="#CCCCCC"> pepper</font>

72
00:04:07,730 --> 00:04:13,369
<font color="#CCCCCC">yeah 39 blocks them off and get access</font>

73
00:04:10,100 --> 00:04:15,200
<font color="#CCCCCC">to</font><font color="#E5E5E5"> my everything mission to get</font><font color="#CCCCCC"> my if</font>

74
00:04:13,370 --> 00:04:18,519
<font color="#E5E5E5">you need to learn Python or refresher</font>

75
00:04:15,200 --> 00:04:20,019
Python<font color="#E5E5E5"> there's classes</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> 32-bit 64-bit</font>

76
00:04:18,519 --> 00:04:23,740
assembly

77
00:04:20,019 --> 00:04:28,130
you know wireless security<font color="#CCCCCC"> Metasploit</font>

78
00:04:23,740 --> 00:04:29,360
<font color="#E5E5E5">it's probably if you're not familiar to</font>

79
00:04:28,130 --> 00:04:33,680
go<font color="#E5E5E5"> ahead check it out you can actually</font>

80
00:04:29,360 --> 00:04:35,720
see<font color="#CCCCCC"> all of the courses and videos that</font>

81
00:04:33,680 --> 00:04:37,910
<font color="#CCCCCC">are available</font><font color="#E5E5E5"> without subscribe</font>

82
00:04:35,720 --> 00:04:38,900
you just can't watch all but you can see

83
00:04:37,910 --> 00:04:42,410
<font color="#CCCCCC">what they are honorable</font>

84
00:04:38,900 --> 00:04:44,419
<font color="#E5E5E5">get a feel for what's out there so we're</font>

85
00:04:42,410 --> 00:04:47,870
mostly going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> talk about Stack</font>

86
00:04:44,420 --> 00:04:50,600
<font color="#E5E5E5">Overflow today we'll start talking with</font>

87
00:04:47,870 --> 00:04:54,890
a little bit of theory<font color="#CCCCCC"> stack buffer</font>

88
00:04:50,600 --> 00:04:58,190
overflow<font color="#E5E5E5"> is it will talk about how do</font>

89
00:04:54,890 --> 00:05:01,280
<font color="#CCCCCC">you locate them what we'll find is that</font>

90
00:04:58,190 --> 00:05:04,070
<font color="#E5E5E5">you often need</font><font color="#CCCCCC"> to calculate</font><font color="#E5E5E5"> some sort</font><font color="#CCCCCC"> of</font>

91
00:05:01,280 --> 00:05:07,520
offset<font color="#E5E5E5"> basically what that means</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> I</font>

92
00:05:04,070 --> 00:05:12,680
found a<font color="#E5E5E5"> place in some code where I can</font>

93
00:05:07,520 --> 00:05:15,469
<font color="#E5E5E5">inject my bad stuff and I</font><font color="#CCCCCC"> need to figure</font>

94
00:05:12,680 --> 00:05:20,180
<font color="#CCCCCC">out how far into the stuff I'm injecting</font>

95
00:05:15,470 --> 00:05:22,280
<font color="#E5E5E5">I need to start so there's some methods</font>

96
00:05:20,180 --> 00:05:27,320
<font color="#E5E5E5">for doing that</font><font color="#CCCCCC"> talk a</font><font color="#E5E5E5"> little bit about</font>

97
00:05:22,280 --> 00:05:30,109
some exploit<font color="#CCCCCC"> technique</font><font color="#E5E5E5"> and then we will</font>

98
00:05:27,320 --> 00:05:33,590
shift talking about some protections

99
00:05:30,110 --> 00:05:37,520
that are coming out or have come out

100
00:05:33,590 --> 00:05:41,119
that<font color="#CCCCCC"> remake</font><font color="#E5E5E5"> this part</font><font color="#CCCCCC"> if we were talking</font>

101
00:05:37,520 --> 00:05:45,680
<font color="#CCCCCC">about Windows XP you know it</font><font color="#E5E5E5"> would be</font>

102
00:05:41,120 --> 00:05:48,080
<font color="#E5E5E5">easy if</font><font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> Wis</font><font color="#E5E5E5"> out I would have</font>

103
00:05:45,680 --> 00:05:49,430
just<font color="#E5E5E5"> given you a Windows XP OVA and</font>

104
00:05:48,080 --> 00:05:52,099
<font color="#E5E5E5">you'd be like hey look at this</font><font color="#CCCCCC"> back</font>

105
00:05:49,430 --> 00:05:54,080
<font color="#CCCCCC">stack overflow stuff this is super super</font>

106
00:05:52,100 --> 00:05:57,080
<font color="#E5E5E5">easy and you</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have doing things</font>

107
00:05:54,080 --> 00:06:01,430
special<font color="#E5E5E5"> but I</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> want to spend some</font><font color="#CCCCCC"> time</font>

108
00:05:57,080 --> 00:06:04,039
talking about<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of the protections</font>

109
00:06:01,430 --> 00:06:07,220
<font color="#E5E5E5">that compilers</font><font color="#CCCCCC"> and operating systems</font>

110
00:06:04,040 --> 00:06:11,930
have today against these flaws they've

111
00:06:07,220 --> 00:06:14,510
been around for decades<font color="#E5E5E5"> and then</font><font color="#CCCCCC"> we'll</font>

112
00:06:11,930 --> 00:06:17,510
at the end also talk about<font color="#CCCCCC"> format strips</font>

113
00:06:14,510 --> 00:06:22,150
<font color="#CCCCCC">the thing</font><font color="#E5E5E5"> about format string errors</font>

114
00:06:17,510 --> 00:06:26,860
is that this is something<font color="#E5E5E5"> that</font><font color="#CCCCCC"> is</font>

115
00:06:22,150 --> 00:06:31,039
agnostic<font color="#CCCCCC"> someone to the operating system</font>

116
00:06:26,860 --> 00:06:33,500
now turns out if you have a Linux<font color="#E5E5E5"> box</font>

117
00:06:31,040 --> 00:06:35,840
and you took<font color="#CCCCCC"> some of the programs that</font>

118
00:06:33,500 --> 00:06:38,450
we might<font color="#CCCCCC"> use it as an example</font><font color="#E5E5E5"> for this</font>

119
00:06:35,840 --> 00:06:42,190
section<font color="#E5E5E5"> of the class</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> and you</font>

120
00:06:38,450 --> 00:06:44,330
compile them<font color="#E5E5E5"> GCC is an awesome compiler</font>

121
00:06:42,190 --> 00:06:47,719
<font color="#CCCCCC">it'll</font><font color="#E5E5E5"> actually give you a warning like</font>

122
00:06:44,330 --> 00:06:50,930
hey there's a format<font color="#E5E5E5"> spring</font>

123
00:06:47,720 --> 00:06:54,410
vulnerability on this line<font color="#CCCCCC"> you</font><font color="#E5E5E5"> probably</font>

124
00:06:50,930 --> 00:06:56,450
shouldn't do<font color="#E5E5E5"> that and it'll do two</font>

125
00:06:54,410 --> 00:06:59,540
similar things<font color="#E5E5E5"> to detect you from stack</font>

126
00:06:56,450 --> 00:07:03,770
<font color="#CCCCCC">rows you</font><font color="#E5E5E5"> actually have to work harder to</font>

127
00:06:59,540 --> 00:07:06,920
<font color="#CCCCCC">make it</font><font color="#E5E5E5"> vulnerable Linux app then you</font>

128
00:07:03,770 --> 00:07:12,799
<font color="#CCCCCC">know to make one</font><font color="#E5E5E5"> that's not which is a</font>

129
00:07:06,920 --> 00:07:15,860
good thing<font color="#CCCCCC"> okay just a little bit you</font>

130
00:07:12,800 --> 00:07:18,290
<font color="#E5E5E5">know talk</font><font color="#CCCCCC"> about reverse</font><font color="#E5E5E5"> engineering</font><font color="#CCCCCC"> you</font>

131
00:07:15,860 --> 00:07:20,180
know what is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> anyway first</font>

132
00:07:18,290 --> 00:07:22,820
engineering<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is my definition or</font>

133
00:07:20,180 --> 00:07:25,610
reversing is just the art<font color="#E5E5E5"> of determining</font>

134
00:07:22,820 --> 00:07:28,040
how something works<font color="#E5E5E5"> without access to</font>

135
00:07:25,610 --> 00:07:33,590
<font color="#CCCCCC">the original design specifications run</font>

136
00:07:28,040 --> 00:07:37,040
home and<font color="#E5E5E5"> there's a lot of reasons that</font>

137
00:07:33,590 --> 00:07:39,229
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can do reverse engineering</font><font color="#E5E5E5"> you could</font>

138
00:07:37,040 --> 00:07:42,500
do<font color="#E5E5E5"> it for finding flaws that's kind of</font>

139
00:07:39,230 --> 00:07:44,390
what our<font color="#CCCCCC"> focuses today</font><font color="#E5E5E5"> you could do it</font>

140
00:07:42,500 --> 00:07:49,460
if<font color="#E5E5E5"> you're</font><font color="#CCCCCC"> trying to clone somebody's</font>

141
00:07:44,390 --> 00:07:51,440
stuff maybe you're an evil businessman

142
00:07:49,460 --> 00:07:58,880
from<font color="#E5E5E5"> China I don't know if anyone who</font>

143
00:07:51,440 --> 00:08:01,640
heard the FBI<font color="#CCCCCC"> personal pockets name you</font>

144
00:07:58,880 --> 00:08:05,810
can also<font color="#E5E5E5"> just do it because you're</font>

145
00:08:01,640 --> 00:08:09,380
trying<font color="#E5E5E5"> to understand how stuff works or</font>

146
00:08:05,810 --> 00:08:11,540
you<font color="#CCCCCC"> can do reverse engineering</font><font color="#E5E5E5"> to try to</font>

147
00:08:09,380 --> 00:08:13,490
mitigate malicious programs<font color="#E5E5E5"> we try to</font>

148
00:08:11,540 --> 00:08:16,760
understand malicious programs malware

149
00:08:13,490 --> 00:08:21,920
basically in order<font color="#CCCCCC"> to figure out how to</font>

150
00:08:16,760 --> 00:08:23,870
<font color="#E5E5E5">protect against it so in terms of</font>

151
00:08:21,920 --> 00:08:26,030
<font color="#E5E5E5">getting</font><font color="#CCCCCC"> started</font><font color="#E5E5E5"> you're definitely going</font>

152
00:08:23,870 --> 00:08:29,389
to want<font color="#E5E5E5"> some sort of debugger</font><font color="#CCCCCC"> now you</font>

153
00:08:26,030 --> 00:08:31,219
can do reverse engineering

154
00:08:29,389 --> 00:08:35,180
with some of those standard debuggers

155
00:08:31,219 --> 00:08:39,289
like gdb out there<font color="#E5E5E5"> what they're not</font>

156
00:08:35,179 --> 00:08:41,569
<font color="#E5E5E5">really meant for this kind of</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> those</font>

157
00:08:39,289 --> 00:08:44,420
<font color="#CCCCCC">are</font><font color="#E5E5E5"> meant for yeah I wrote a program I</font>

158
00:08:41,570 --> 00:08:47,570
have the code<font color="#CCCCCC"> and I want to know why</font>

159
00:08:44,420 --> 00:08:49,610
<font color="#E5E5E5">we're program doesn't work</font><font color="#CCCCCC"> I mean you</font>

160
00:08:47,570 --> 00:08:54,529
<font color="#CCCCCC">can</font><font color="#E5E5E5"> do this</font><font color="#CCCCCC"> work with it</font><font color="#E5E5E5"> it's just</font>

161
00:08:49,610 --> 00:08:57,529
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> not what they were made so in the</font>

162
00:08:54,529 --> 00:08:59,630
world of reverse engineering<font color="#E5E5E5"> the</font>

163
00:08:57,529 --> 00:09:04,310
debugger is out there one<font color="#CCCCCC"> of the</font>

164
00:08:59,630 --> 00:09:08,450
<font color="#E5E5E5">debuggers that gets used a</font><font color="#CCCCCC"> lot is Ida</font>

165
00:09:04,310 --> 00:09:13,189
<font color="#CCCCCC">Pro</font><font color="#E5E5E5"> who</font><font color="#CCCCCC"> is heard</font><font color="#E5E5E5"> of either</font><font color="#CCCCCC"> pro good</font>

166
00:09:08,450 --> 00:09:14,779
product is it cheap<font color="#E5E5E5"> no that's his</font>

167
00:09:13,190 --> 00:09:17,899
biggest downside it's not a cheap

168
00:09:14,779 --> 00:09:19,490
<font color="#CCCCCC">product there's some free alternatives</font>

169
00:09:17,899 --> 00:09:22,700
there is something called immunity

170
00:09:19,490 --> 00:09:28,040
debugger<font color="#E5E5E5"> we use that a little bit called</font>

171
00:09:22,700 --> 00:09:29,470
<font color="#E5E5E5">Holly</font><font color="#CCCCCC"> TV and about the same thing you</font>

172
00:09:28,040 --> 00:09:33,050
probably want some sort of

173
00:09:29,470 --> 00:09:34,760
virtualization<font color="#E5E5E5"> so you want to run</font>

174
00:09:33,050 --> 00:09:39,620
Windows if you're<font color="#E5E5E5"> doing windows offer</font>

175
00:09:34,760 --> 00:09:42,860
<font color="#CCCCCC">what we're doing today you can say what</font>

176
00:09:39,620 --> 00:09:46,190
version of<font color="#E5E5E5"> Windows do I want we're gonna</font>

177
00:09:42,860 --> 00:09:50,089
<font color="#E5E5E5">use Windows 7 you could use older</font>

178
00:09:46,190 --> 00:09:52,310
versions of<font color="#E5E5E5"> Windows and that's you know</font>

179
00:09:50,089 --> 00:09:57,110
<font color="#E5E5E5">easier if you</font><font color="#CCCCCC"> go out and you look</font><font color="#E5E5E5"> for</font>

180
00:09:52,310 --> 00:09:59,300
<font color="#E5E5E5">shell code other things or</font><font color="#CCCCCC"> Windows you</font>

181
00:09:57,110 --> 00:10:02,420
look under<font color="#E5E5E5"> Windows XP there's all kinds</font>

182
00:09:59,300 --> 00:10:04,219
of stuff well<font color="#E5E5E5"> it's not just because</font>

183
00:10:02,420 --> 00:10:08,360
<font color="#E5E5E5">Windows XP</font><font color="#CCCCCC"> stood out there</font><font color="#E5E5E5"> long terms</font>

184
00:10:04,220 --> 00:10:12,199
because that's that's the other part<font color="#CCCCCC"> of</font>

185
00:10:08,360 --> 00:10:14,390
<font color="#CCCCCC">it</font><font color="#E5E5E5"> so you want virtualization for</font>

186
00:10:12,199 --> 00:10:18,380
<font color="#CCCCCC">Runnings lead of stuff because</font><font color="#E5E5E5"> I always</font>

187
00:10:14,390 --> 00:10:19,939
have Linux<font color="#E5E5E5"> is my</font><font color="#CCCCCC"> base just isolating</font>

188
00:10:18,380 --> 00:10:22,430
suspicious stuff if you<font color="#E5E5E5"> have some</font>

189
00:10:19,940 --> 00:10:27,949
malware<font color="#CCCCCC"> you don't run that</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> a regular</font>

190
00:10:22,430 --> 00:10:32,750
<font color="#E5E5E5">box so normally you're going</font><font color="#CCCCCC"> to want to</font>

191
00:10:27,949 --> 00:10:35,329
<font color="#E5E5E5">install</font><font color="#CCCCCC"> some tools</font><font color="#E5E5E5"> the OVA file has</font><font color="#CCCCCC"> the</font>

192
00:10:32,750 --> 00:10:39,589
green install some scripting tool of

193
00:10:35,329 --> 00:10:42,140
course<font color="#CCCCCC"> python 2 and 3</font>

194
00:10:39,589 --> 00:10:43,010
<font color="#E5E5E5">python 3 is starting to come with a lot</font>

195
00:10:42,140 --> 00:10:45,920
<font color="#CCCCCC">of money</font>

196
00:10:43,010 --> 00:10:47,959
now it<font color="#E5E5E5"> used to be that only Python 2 was</font>

197
00:10:45,920 --> 00:10:50,599
pre-installed<font color="#CCCCCC"> but I</font><font color="#E5E5E5"> think some of the</font>

198
00:10:47,959 --> 00:10:55,000
recent versions of<font color="#CCCCCC"> Debian upon to have a</font>

199
00:10:50,600 --> 00:10:59,209
pulse<font color="#CCCCCC"> bash scripting can be</font><font color="#E5E5E5"> felt as well</font>

200
00:10:55,000 --> 00:11:01,220
on Linux<font color="#E5E5E5"> if you're doing this kind of</font>

201
00:10:59,209 --> 00:11:03,979
stuff<font color="#CCCCCC"> there's a package called build</font>

202
00:11:01,220 --> 00:11:07,190
essential<font color="#CCCCCC"> you should probably</font><font color="#E5E5E5"> need to</font>

203
00:11:03,980 --> 00:11:10,430
install has compilers<font color="#CCCCCC"> and things like</font>

204
00:11:07,190 --> 00:11:13,670
<font color="#E5E5E5">that</font><font color="#CCCCCC"> I always wondered why it's not</font>

205
00:11:10,430 --> 00:11:16,069
called build essentials<font color="#CCCCCC"> I don't know why</font>

206
00:11:13,670 --> 00:11:19,069
it's<font color="#CCCCCC"> not</font><font color="#E5E5E5"> it seems like it makes more</font>

207
00:11:16,070 --> 00:11:21,560
sense<font color="#CCCCCC"> to me because it's really punch of</font>

208
00:11:19,070 --> 00:11:27,680
things it's not<font color="#E5E5E5"> one</font><font color="#CCCCCC"> but I guess that's</font>

209
00:11:21,560 --> 00:11:30,050
<font color="#E5E5E5">the build essential package</font><font color="#CCCCCC"> if you</font><font color="#E5E5E5"> start</font>

210
00:11:27,680 --> 00:11:32,060
<font color="#E5E5E5">getting into this you probably</font><font color="#CCCCCC"> want to</font>

211
00:11:30,050 --> 00:11:34,639
install<font color="#E5E5E5"> things like pleasures we don't</font>

212
00:11:32,060 --> 00:11:38,388
know what buzzer is it's<font color="#E5E5E5"> just something</font>

213
00:11:34,639 --> 00:11:41,209
that<font color="#CCCCCC"> will vary the input</font><font color="#E5E5E5"> to a program in</font>

214
00:11:38,389 --> 00:11:43,970
order<font color="#E5E5E5"> to try</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> find a</font><font color="#CCCCCC"> slot this can</font>

215
00:11:41,209 --> 00:11:46,369
help you find flaws initially and make

216
00:11:43,970 --> 00:11:48,160
your<font color="#E5E5E5"> life a little somewhere there are</font>

217
00:11:46,370 --> 00:11:50,750
different kinds of pleasures out there

218
00:11:48,160 --> 00:11:54,050
<font color="#E5E5E5">some of</font><font color="#CCCCCC"> the applications we're going to</font>

219
00:11:50,750 --> 00:11:55,880
look at are simple and that<font color="#CCCCCC"> they accept</font>

220
00:11:54,050 --> 00:12:00,019
main line parameters and<font color="#E5E5E5"> you can</font>

221
00:11:55,880 --> 00:12:01,790
overflow<font color="#E5E5E5"> those not too many programs out</font>

222
00:12:00,019 --> 00:12:08,060
there that<font color="#CCCCCC"> you're going to</font><font color="#E5E5E5"> actually try</font>

223
00:12:01,790 --> 00:12:09,620
to crash<font color="#CCCCCC"> and do other</font><font color="#E5E5E5"> bad things to work</font>

224
00:12:08,060 --> 00:12:12,410
that way they're probably going to

225
00:12:09,620 --> 00:12:14,870
accept stuff<font color="#E5E5E5"> hoping the network you can</font>

226
00:12:12,410 --> 00:12:17,089
<font color="#CCCCCC">easily translate</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> we learned today</font>

227
00:12:14,870 --> 00:12:20,050
<font color="#CCCCCC">into that kind of situation so there are</font>

228
00:12:17,089 --> 00:12:22,069
<font color="#E5E5E5">Network buzzers</font><font color="#CCCCCC"> main line buzzers</font>

229
00:12:20,050 --> 00:12:24,729
<font color="#E5E5E5">different kinds of tools</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> there for</font>

230
00:12:22,069 --> 00:12:29,060
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so of course you're gonna need a</font>

231
00:12:24,730 --> 00:12:31,370
<font color="#E5E5E5">compiler in some sample apps we also</font>

232
00:12:29,060 --> 00:12:37,219
have programs<font color="#CCCCCC"> called</font><font color="#E5E5E5"> decompilers the</font>

233
00:12:31,370 --> 00:12:40,730
<font color="#E5E5E5">compilers try to take a binary and go</font>

234
00:12:37,220 --> 00:12:45,260
back to see almost<font color="#E5E5E5"> everything in the</font>

235
00:12:40,730 --> 00:12:47,389
world is at some level<font color="#E5E5E5"> written</font><font color="#CCCCCC"> in C you</font>

236
00:12:45,260 --> 00:12:49,939
might use<font color="#CCCCCC"> differently</font><font color="#E5E5E5"> which that</font>

237
00:12:47,389 --> 00:12:52,490
compiler was probably to see operating

238
00:12:49,940 --> 00:12:55,310
systems are all written<font color="#E5E5E5"> in C so d</font>

239
00:12:52,490 --> 00:12:56,450
compilers have different levels of

240
00:12:55,310 --> 00:13:01,609
complexity

241
00:12:56,450 --> 00:13:06,590
<font color="#E5E5E5">and different levels</font><font color="#CCCCCC"> of success in going</font>

242
00:13:01,610 --> 00:13:10,070
<font color="#CCCCCC">from a binary</font><font color="#E5E5E5"> to Seco that's kind of</font>

243
00:13:06,590 --> 00:13:12,170
stuff that<font color="#CCCCCC"> she'll</font><font color="#E5E5E5"> use as well so yeah</font>

244
00:13:10,070 --> 00:13:15,290
some<font color="#CCCCCC"> of the debuggers out there</font><font color="#E5E5E5"> a lady</font>

245
00:13:12,170 --> 00:13:17,469
be you know what's good<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> it's</font>

246
00:13:15,290 --> 00:13:21,829
free it's pretty like weed

247
00:13:17,470 --> 00:13:24,530
somewhat customizable<font color="#E5E5E5"> biggest minuses</font>

248
00:13:21,830 --> 00:13:28,280
<font color="#E5E5E5">only works with 32-bit windows ass</font>

249
00:13:24,530 --> 00:13:33,310
doesn't<font color="#CCCCCC"> do 64-bit not really updated</font><font color="#E5E5E5"> and</font>

250
00:13:28,280 --> 00:13:37,790
it's free there's there's immunity

251
00:13:33,310 --> 00:13:40,579
immunity<font color="#E5E5E5"> same</font><font color="#CCCCCC"> plusses one of the nice</font>

252
00:13:37,790 --> 00:13:42,770
things<font color="#CCCCCC"> about it</font><font color="#E5E5E5"> is it</font><font color="#CCCCCC"> has a</font><font color="#E5E5E5"> Python</font>

253
00:13:40,580 --> 00:13:45,170
scripting engine and you can write your

254
00:13:42,770 --> 00:13:49,329
<font color="#CCCCCC">own</font><font color="#E5E5E5"> Python scripts for it and some</font>

255
00:13:45,170 --> 00:13:54,189
<font color="#CCCCCC">people do and of course</font><font color="#E5E5E5"> biggest -</font><font color="#CCCCCC"> is</font>

256
00:13:49,330 --> 00:13:57,860
pretty<font color="#E5E5E5"> quick windows</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> no support</font>

257
00:13:54,190 --> 00:14:00,950
<font color="#E5E5E5">then</font><font color="#CCCCCC"> there is Ida</font><font color="#E5E5E5"> Pro Ida Pro is a great</font>

258
00:13:57,860 --> 00:14:03,440
<font color="#CCCCCC">prop there's hard books on it</font>

259
00:14:00,950 --> 00:14:12,040
was it black hat<font color="#E5E5E5"> is summer doing</font>

260
00:14:03,440 --> 00:14:15,860
training<font color="#CCCCCC"> on the summer was helping</font><font color="#E5E5E5"> out</font>

261
00:14:12,040 --> 00:14:20,660
PowerShell<font color="#CCCCCC"> last last couple</font><font color="#E5E5E5"> of summers I</font>

262
00:14:15,860 --> 00:14:22,760
helped out<font color="#CCCCCC"> in the wireless class this is</font>

263
00:14:20,660 --> 00:14:26,030
the gold standard<font color="#CCCCCC"> if you a professional</font>

264
00:14:22,760 --> 00:14:30,380
reverse engineer you probably use<font color="#CCCCCC"> an</font>

265
00:14:26,030 --> 00:14:32,900
<font color="#CCCCCC">iron phone I know</font><font color="#E5E5E5"> it black hat</font>

266
00:14:30,380 --> 00:14:34,880
they had like two classes<font color="#E5E5E5"> like a two day</font>

267
00:14:32,900 --> 00:14:37,699
<font color="#E5E5E5">getting started and then a two day</font>

268
00:14:34,880 --> 00:14:40,970
advanced class<font color="#E5E5E5"> that you could spend a</font>

269
00:14:37,700 --> 00:14:45,320
lot of money on Ida Pro supports a ton

270
00:14:40,970 --> 00:14:50,570
of platforms you<font color="#E5E5E5"> can do 32 64 bit</font>

271
00:14:45,320 --> 00:14:54,260
windows linux mac<font color="#E5E5E5"> i think arm they</font>

272
00:14:50,570 --> 00:14:57,790
support a lot<font color="#E5E5E5"> i think they started like</font>

273
00:14:54,260 --> 00:15:00,250
<font color="#E5E5E5">three thousand dollars a year per seat</font>

274
00:14:57,790 --> 00:15:03,560
something like that see you have to be

275
00:15:00,250 --> 00:15:06,680
committed<font color="#CCCCCC"> to doing this stuff if you're</font>

276
00:15:03,560 --> 00:15:09,520
<font color="#E5E5E5">gonna buy item there is a free version</font>

277
00:15:06,680 --> 00:15:11,939
<font color="#E5E5E5">it has less platforms</font>

278
00:15:09,520 --> 00:15:15,130
up until<font color="#E5E5E5"> recently it was one platform</font>

279
00:15:11,940 --> 00:15:18,220
<font color="#CCCCCC">32-bit Windows</font><font color="#E5E5E5"> and of course you don't</font>

280
00:15:15,130 --> 00:15:20,230
get it but<font color="#E5E5E5"> there is a large support</font>

281
00:15:18,220 --> 00:15:29,459
community because it is very popular<font color="#CCCCCC"> -</font>

282
00:15:20,230 --> 00:15:34,600
<font color="#E5E5E5">it's a good problem</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so quick review</font><font color="#CCCCCC"> /</font>

283
00:15:29,459 --> 00:15:36,160
introduction to assembly<font color="#E5E5E5"> so if you want</font>

284
00:15:34,600 --> 00:15:40,390
<font color="#E5E5E5">to learn how stuff works</font>

285
00:15:36,160 --> 00:15:43,029
I'd say learn assembly at least<font color="#CCCCCC"> basic</font>

286
00:15:40,390 --> 00:15:45,699
<font color="#CCCCCC">level you don't have to be God's gift to</font>

287
00:15:43,029 --> 00:15:49,110
assembly programming and all the

288
00:15:45,700 --> 00:15:52,450
<font color="#E5E5E5">pretties to be useful as an exercise but</font>

289
00:15:49,110 --> 00:15:56,709
<font color="#CCCCCC">you know knowing</font><font color="#E5E5E5"> assembly kind of helps</font>

290
00:15:52,450 --> 00:15:59,560
<font color="#E5E5E5">you know how stuff so when it comes to</font>

291
00:15:56,709 --> 00:16:03,910
this<font color="#E5E5E5"> kind of stuff the biggest thing</font>

292
00:15:59,560 --> 00:16:08,829
that we<font color="#CCCCCC"> need to know about</font><font color="#E5E5E5"> are things</font>

293
00:16:03,910 --> 00:16:11,730
<font color="#E5E5E5">like registers and the stock so can</font>

294
00:16:08,830 --> 00:16:16,000
<font color="#E5E5E5">anybody give me kind of a basic</font>

295
00:16:11,730 --> 00:16:24,270
definition<font color="#E5E5E5"> or just tell</font><font color="#CCCCCC"> me what the</font><font color="#E5E5E5"> heck</font>

296
00:16:16,000 --> 00:16:30,550
is a<font color="#E5E5E5"> register</font><font color="#CCCCCC"> please put something right</font>

297
00:16:24,270 --> 00:16:34,770
<font color="#E5E5E5">where is it physically well on the CPU</font>

298
00:16:30,550 --> 00:16:37,930
<font color="#E5E5E5">right so on the CPU stuff is</font><font color="#CCCCCC"> past your</font>

299
00:16:34,770 --> 00:16:41,470
<font color="#CCCCCC">running instance let's say</font><font color="#E5E5E5"> 4</font><font color="#CCCCCC"> gigahertz</font>

300
00:16:37,930 --> 00:16:44,229
<font color="#E5E5E5">yourself on the CPU and</font><font color="#CCCCCC"> you've got</font>

301
00:16:41,470 --> 00:16:47,440
multiple<font color="#E5E5E5"> cores nowadays and you've got</font>

302
00:16:44,230 --> 00:16:47,829
caches on the CPU because everything on

303
00:16:47,440 --> 00:16:50,500
that

304
00:16:47,829 --> 00:16:52,599
<font color="#CCCCCC">Willet chip</font><font color="#E5E5E5"> it's super super fast</font><font color="#CCCCCC"> soon</font>

305
00:16:50,500 --> 00:16:56,620
as you get off<font color="#CCCCCC"> that chip whoa</font>

306
00:16:52,600 --> 00:16:58,930
it slows down<font color="#E5E5E5"> a lot now you're talking</font>

307
00:16:56,620 --> 00:17:01,810
<font color="#E5E5E5">about</font><font color="#CCCCCC"> megahertz means nothing you're</font>

308
00:16:58,930 --> 00:17:04,448
hurt speed and you have to play<font color="#CCCCCC"> with</font>

309
00:17:01,810 --> 00:17:07,419
other people<font color="#E5E5E5"> right</font><font color="#CCCCCC"> if you're on the chip</font>

310
00:17:04,449 --> 00:17:12,280
you<font color="#CCCCCC"> don't have to deal with anybody</font><font color="#E5E5E5"> else</font>

311
00:17:07,420 --> 00:17:15,550
<font color="#E5E5E5">taking</font><font color="#CCCCCC"> up bandwidth so all these CT</font>

312
00:17:12,280 --> 00:17:17,470
years will pass<font color="#CCCCCC"> high-speed memory areas</font>

313
00:17:15,550 --> 00:17:21,389
called registers so if you're<font color="#CCCCCC"> talking</font>

314
00:17:17,470 --> 00:17:25,920
<font color="#CCCCCC">about 32 bit CPU there's</font><font color="#E5E5E5"> 32 bits wide</font><font color="#CCCCCC"> 6</font>

315
00:17:21,390 --> 00:17:28,460
or bit CPU<font color="#CCCCCC"> there's 64</font><font color="#E5E5E5"> bits wide it's one</font>

316
00:17:25,920 --> 00:17:35,100
of the distinguishing features<font color="#CCCCCC"> between</font>

317
00:17:28,460 --> 00:17:37,320
<font color="#CCCCCC">32 bit so these registers these</font>

318
00:17:35,100 --> 00:17:41,490
<font color="#E5E5E5">high-speed areas there's three of them</font>

319
00:17:37,320 --> 00:17:42,240
in<font color="#CCCCCC"> particular that we will look</font><font color="#E5E5E5"> at quite</font>

320
00:17:41,490 --> 00:17:46,200
a bit

321
00:17:42,240 --> 00:17:49,950
one of them is called<font color="#CCCCCC"> EAS just a little</font>

322
00:17:46,200 --> 00:17:54,390
bit about naming<font color="#E5E5E5"> conventions here the e</font>

323
00:17:49,950 --> 00:17:58,110
stands for extended<font color="#E5E5E5"> so before there was</font>

324
00:17:54,390 --> 00:18:02,010
32-bit processors there was 16-bit

325
00:17:58,110 --> 00:18:06,360
<font color="#CCCCCC">processors so in the</font><font color="#E5E5E5"> 16-bit processors</font>

326
00:18:02,010 --> 00:18:10,320
whose original<font color="#E5E5E5"> 8086 for example you</font>

327
00:18:06,360 --> 00:18:11,780
would have a registered<font color="#CCCCCC"> coal ax was 16</font>

328
00:18:10,320 --> 00:18:14,340
bits<font color="#E5E5E5"> long</font>

329
00:18:11,780 --> 00:18:17,190
then when<font color="#E5E5E5"> you came up</font><font color="#CCCCCC"> with a 32-bit</font>

330
00:18:14,340 --> 00:18:23,129
processor<font color="#E5E5E5"> the same register is colorful</font>

331
00:18:17,190 --> 00:18:25,950
<font color="#CCCCCC">EA extended a</font><font color="#E5E5E5"> registers sometimes the</font>

332
00:18:23,130 --> 00:18:28,830
era stirs all the accumulators just

333
00:18:25,950 --> 00:18:31,860
because it is used a lot it's<font color="#E5E5E5"> like the</font>

334
00:18:28,830 --> 00:18:34,620
<font color="#CCCCCC">hardest-working</font><font color="#E5E5E5"> register some of you</font>

335
00:18:31,860 --> 00:18:35,580
might<font color="#E5E5E5"> have seen a show it's a really old</font>

336
00:18:34,620 --> 00:18:37,799
show

337
00:18:35,580 --> 00:18:42,299
shooting there<font color="#E5E5E5"> imagine it living in</font>

338
00:18:37,799 --> 00:18:44,639
living color<font color="#CCCCCC"> and our</font><font color="#E5E5E5"> solution it's time</font>

339
00:18:42,299 --> 00:18:46,740
<font color="#E5E5E5">for a man with the head leaves the</font>

340
00:18:44,640 --> 00:18:48,960
<font color="#E5E5E5">hardest-working to make</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> family you</font>

341
00:18:46,740 --> 00:18:54,240
guys remember that<font color="#CCCCCC"> skit like how many</font>

342
00:18:48,960 --> 00:18:55,919
jobs do<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> I have attention so the</font>

343
00:18:54,240 --> 00:19:00,799
accumulator could be at the heads of

344
00:18:55,919 --> 00:19:05,850
family<font color="#CCCCCC"> ok hardest-working guys use a lot</font>

345
00:19:00,799 --> 00:19:10,830
<font color="#E5E5E5">so the accumulator the air adjuster</font><font color="#CCCCCC"> 8 X</font>

346
00:19:05,850 --> 00:19:14,250
<font color="#E5E5E5">meant the whole 16 minutes you can also</font>

347
00:19:10,830 --> 00:19:18,120
address each<font color="#E5E5E5"> bike separately as a the</font>

348
00:19:14,250 --> 00:19:21,179
high white<font color="#CCCCCC"> inhale the low light</font><font color="#E5E5E5"> and that</font>

349
00:19:18,120 --> 00:19:29,189
exists<font color="#E5E5E5"> even today so you can still refer</font>

350
00:19:21,179 --> 00:19:30,540
<font color="#CCCCCC">to EAX the</font><font color="#E5E5E5"> 32-bit register or ax just</font>

351
00:19:29,190 --> 00:19:34,220
the lower

352
00:19:30,540 --> 00:19:39,860
16 bits or an<font color="#E5E5E5"> H</font>

353
00:19:34,220 --> 00:19:42,200
or<font color="#CCCCCC"> Al</font><font color="#E5E5E5"> and now if you go</font><font color="#CCCCCC"> to 64</font><font color="#E5E5E5"> bits then</font>

354
00:19:39,860 --> 00:19:44,090
they just<font color="#E5E5E5"> call it</font><font color="#CCCCCC"> off they're like</font>

355
00:19:42,200 --> 00:19:48,440
<font color="#CCCCCC">they're really really big really extend</font>

356
00:19:44,090 --> 00:19:50,418
it out<font color="#E5E5E5"> so that's something you'll notice</font>

357
00:19:48,440 --> 00:19:51,860
when you<font color="#CCCCCC"> look into</font><font color="#E5E5E5"> butters all these you</font>

358
00:19:50,419 --> 00:19:56,570
<font color="#E5E5E5">know why does every single one of them</font>

359
00:19:51,860 --> 00:19:59,258
start with E that's why in a 32 bit so

360
00:19:56,570 --> 00:20:02,840
it's<font color="#E5E5E5"> re actions</font><font color="#CCCCCC"> its</font><font color="#E5E5E5"> equal men or just</font>

361
00:19:59,259 --> 00:20:05,240
<font color="#E5E5E5">all right yeah just because isn't the R</font>

362
00:20:02,840 --> 00:20:11,029
is the<font color="#E5E5E5"> prefix that just says</font><font color="#CCCCCC"> case that's</font>

363
00:20:05,240 --> 00:20:14,090
that means all<font color="#CCCCCC"> of it so these two SP</font>

364
00:20:11,029 --> 00:20:16,009
stands for stack pointer<font color="#CCCCCC"> we'll talk a</font>

365
00:20:14,090 --> 00:20:20,570
<font color="#E5E5E5">little about the stack and why it's</font>

366
00:20:16,009 --> 00:20:25,220
important and the<font color="#E5E5E5"> VP</font><font color="#CCCCCC"> is something called</font>

367
00:20:20,570 --> 00:20:28,100
<font color="#CCCCCC">framed so if</font><font color="#E5E5E5"> you look when we look later</font>

368
00:20:25,220 --> 00:20:29,659
<font color="#CCCCCC">at a longer</font><font color="#E5E5E5"> you'll see these different</font>

369
00:20:28,100 --> 00:20:36,639
registers and you'll<font color="#E5E5E5"> notice that there</font>

370
00:20:29,659 --> 00:20:42,429
<font color="#CCCCCC">are couple and with P and</font><font color="#E5E5E5"> V</font><font color="#CCCCCC"> I or I and</font>

371
00:20:36,639 --> 00:20:44,899
then there's<font color="#E5E5E5"> once it just</font><font color="#CCCCCC"> endless acts</font>

372
00:20:42,429 --> 00:20:46,129
but<font color="#E5E5E5"> these are the three most important</font>

373
00:20:44,899 --> 00:20:50,199
<font color="#CCCCCC">ones there are</font><font color="#E5E5E5"> some others out there as</font>

374
00:20:46,129 --> 00:20:53,750
well<font color="#CCCCCC"> so we'll talk about the stack and</font>

375
00:20:50,200 --> 00:20:54,649
how that's important and when we<font color="#E5E5E5"> talk</font>

376
00:20:53,750 --> 00:20:56,450
<font color="#E5E5E5">about all this stuff</font>

377
00:20:54,649 --> 00:20:59,870
we'll also need<font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> calling</font>

378
00:20:56,450 --> 00:21:03,379
conventions<font color="#CCCCCC"> I call a function how does</font>

379
00:20:59,870 --> 00:21:08,750
that<font color="#CCCCCC"> work how do I pass arguments to it</font>

380
00:21:03,379 --> 00:21:12,500
from a function and I need to understand

381
00:21:08,750 --> 00:21:17,419
<font color="#E5E5E5">these three items in order to understand</font>

382
00:21:12,500 --> 00:21:22,909
<font color="#E5E5E5">stack buffer overflows okay so calling</font>

383
00:21:17,419 --> 00:21:25,700
<font color="#E5E5E5">conventions how are we passing things to</font>

384
00:21:22,909 --> 00:21:28,009
our functions<font color="#E5E5E5"> there are three common</font>

385
00:21:25,700 --> 00:21:32,809
common conditions on<font color="#E5E5E5"> windows select</font>

386
00:21:28,009 --> 00:21:38,169
<font color="#E5E5E5">rooms and the first one is called sea</font>

387
00:21:32,809 --> 00:21:41,750
devil<font color="#CCCCCC"> sea the language declare basically</font>

388
00:21:38,169 --> 00:21:45,379
so this pretty standard this<font color="#E5E5E5"> is what is</font>

389
00:21:41,750 --> 00:21:46,390
used<font color="#E5E5E5"> by the fall Percy and how does this</font>

390
00:21:45,379 --> 00:21:49,100
<font color="#E5E5E5">work</font>

391
00:21:46,390 --> 00:21:53,410
you call a function<font color="#E5E5E5"> maybe it has two</font>

392
00:21:49,100 --> 00:21:56,330
<font color="#E5E5E5">arguments you push them on the stack so</font>

393
00:21:53,410 --> 00:21:58,940
<font color="#CCCCCC">you</font><font color="#E5E5E5"> guys understand what</font><font color="#CCCCCC"> a stack is or</font>

394
00:21:56,330 --> 00:22:03,590
do we need<font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about that it's</font><font color="#E5E5E5"> okay</font>

395
00:21:58,940 --> 00:22:08,030
you<font color="#E5E5E5"> don't it probably should okay so</font>

396
00:22:03,590 --> 00:22:14,780
it's back is a data<font color="#E5E5E5"> con strong</font><font color="#CCCCCC"> where</font>

397
00:22:08,030 --> 00:22:17,168
it's called<font color="#E5E5E5"> lastin first-out</font><font color="#CCCCCC"> my phone so</font>

398
00:22:14,780 --> 00:22:20,480
you can think<font color="#E5E5E5"> of it like a stack of</font>

399
00:22:17,169 --> 00:22:22,850
paper if<font color="#CCCCCC"> you</font><font color="#E5E5E5"> will if you</font><font color="#CCCCCC"> want</font><font color="#E5E5E5"> to add</font>

400
00:22:20,480 --> 00:22:25,429
something<font color="#CCCCCC"> to the staff you push it on</font>

401
00:22:22,850 --> 00:22:27,830
<font color="#E5E5E5">the stack</font><font color="#CCCCCC"> you push</font><font color="#E5E5E5"> it on the top and</font>

402
00:22:25,429 --> 00:22:31,610
then if you want to get it back<font color="#CCCCCC"> you</font><font color="#E5E5E5"> pop</font>

403
00:22:27,830 --> 00:22:34,610
<font color="#E5E5E5">it</font><font color="#CCCCCC"> off the top so</font><font color="#E5E5E5"> you if you look at</font>

404
00:22:31,610 --> 00:22:37,189
assembly<font color="#E5E5E5"> you'll see push this</font><font color="#CCCCCC"> on of the</font>

405
00:22:34,610 --> 00:22:39,260
step push this of the stack<font color="#E5E5E5"> and then</font>

406
00:22:37,190 --> 00:22:42,640
you'll see pop and then of<font color="#CCCCCC"> course you</font>

407
00:22:39,260 --> 00:22:45,799
have to reverse<font color="#CCCCCC"> the door</font><font color="#E5E5E5"> and so that's</font>

408
00:22:42,640 --> 00:22:48,440
in a nutshell<font color="#CCCCCC"> with its actions</font><font color="#E5E5E5"> it's just</font>

409
00:22:45,799 --> 00:22:52,549
a place you<font color="#E5E5E5"> can store stuff and just</font>

410
00:22:48,440 --> 00:22:59,299
push<font color="#CCCCCC"> it on pop it off</font><font color="#E5E5E5"> so there's a</font>

411
00:22:52,549 --> 00:23:03,110
notion of<font color="#E5E5E5"> the top seed</font><font color="#CCCCCC"> deck like the</font>

412
00:22:59,299 --> 00:23:07,820
caller must clean<font color="#CCCCCC"> up the stuff so what</font>

413
00:23:03,110 --> 00:23:10,780
is<font color="#E5E5E5"> that I want to call a function that</font>

414
00:23:07,820 --> 00:23:13,700
function takes two arguments

415
00:23:10,780 --> 00:23:15,710
<font color="#CCCCCC">I'm take those two arguments and</font><font color="#E5E5E5"> I go</font>

416
00:23:13,700 --> 00:23:19,130
through<font color="#E5E5E5"> push on the stack push on the</font>

417
00:23:15,710 --> 00:23:23,390
stack call this function function

418
00:23:19,130 --> 00:23:24,230
returns<font color="#E5E5E5"> then I have to pop the stuff off</font>

419
00:23:23,390 --> 00:23:28,880
this<font color="#E5E5E5"> act</font>

420
00:23:24,230 --> 00:23:30,650
let's see<font color="#CCCCCC"> decorate how do they put</font><font color="#E5E5E5"> these</font>

421
00:23:28,880 --> 00:23:32,900
<font color="#CCCCCC">things on the stack</font><font color="#E5E5E5"> they push them on</font>

422
00:23:30,650 --> 00:23:39,650
the stack from right to left<font color="#CCCCCC"> that's</font><font color="#E5E5E5"> the</font>

423
00:23:32,900 --> 00:23:44,720
<font color="#CCCCCC">border of</font><font color="#E5E5E5"> things now why might I use C</font>

424
00:23:39,650 --> 00:23:47,360
<font color="#E5E5E5">deck</font><font color="#CCCCCC"> Hall if I</font><font color="#E5E5E5"> have a function</font><font color="#CCCCCC"> that</font>

425
00:23:44,720 --> 00:23:51,410
<font color="#CCCCCC">takes a variable</font><font color="#E5E5E5"> number of arguments</font><font color="#CCCCCC"> a</font>

426
00:23:47,360 --> 00:23:53,870
great<font color="#CCCCCC"> example that</font><font color="#E5E5E5"> would be</font><font color="#CCCCCC"> printed out</font>

427
00:23:51,410 --> 00:23:59,450
<font color="#E5E5E5">I should have asked how many of you know</font>

428
00:23:53,870 --> 00:24:02,479
at<font color="#CCCCCC"> least a</font><font color="#E5E5E5"> little bit of</font><font color="#CCCCCC"> seating so</font>

429
00:23:59,450 --> 00:24:07,130
print out is a pretty standard function

430
00:24:02,480 --> 00:24:09,560
in Z it allows you<font color="#E5E5E5"> to print stuff off if</font>

431
00:24:07,130 --> 00:24:12,770
you're doing<font color="#CCCCCC"> Python you just</font><font color="#E5E5E5"> just print</font>

432
00:24:09,560 --> 00:24:18,730
a lot of other languages it's just print

433
00:24:12,770 --> 00:24:21,530
<font color="#E5E5E5">but print F is used to print stuff out</font>

434
00:24:18,730 --> 00:24:23,510
<font color="#CCCCCC">what we'll find</font><font color="#E5E5E5"> out later this comes</font>

435
00:24:21,530 --> 00:24:28,940
<font color="#CCCCCC">into play when</font><font color="#E5E5E5"> you talk about format</font>

436
00:24:23,510 --> 00:24:32,720
<font color="#CCCCCC">strengths</font><font color="#E5E5E5"> flaws is that print F will</font>

437
00:24:28,940 --> 00:24:37,250
take one<font color="#E5E5E5"> argument or two argument</font><font color="#CCCCCC"> are</font>

438
00:24:32,720 --> 00:24:39,650
whole bunches of arguments so one of the

439
00:24:37,250 --> 00:24:42,290
things you can actually<font color="#CCCCCC"> specify as this</font>

440
00:24:39,650 --> 00:24:43,550
first<font color="#E5E5E5"> argument is a format string it</font>

441
00:24:42,290 --> 00:24:45,560
says hey I'm<font color="#E5E5E5"> going to pass</font><font color="#CCCCCC"> you a bunch</font>

442
00:24:43,550 --> 00:24:46,600
of other<font color="#E5E5E5"> stuff this is how you make it</font>

443
00:24:45,560 --> 00:24:49,010
pretty

444
00:24:46,600 --> 00:24:50,810
then there's the lazy way<font color="#CCCCCC"> to call it</font>

445
00:24:49,010 --> 00:24:52,879
where you<font color="#E5E5E5"> just say I wanted to print</font>

446
00:24:50,810 --> 00:24:55,580
<font color="#E5E5E5">this one thing so just</font><font color="#CCCCCC"> print that one</font>

447
00:24:52,880 --> 00:25:01,610
thing and that's<font color="#E5E5E5"> problem we'll talk</font>

448
00:24:55,580 --> 00:25:04,760
about<font color="#E5E5E5"> for the end of our time so</font><font color="#CCCCCC"> that's</font>

449
00:25:01,610 --> 00:25:06,740
why<font color="#E5E5E5"> one</font><font color="#CCCCCC"> reason why</font><font color="#E5E5E5"> we have</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> term you</font>

450
00:25:04,760 --> 00:25:09,470
might say I<font color="#E5E5E5"> don't we just used to</font><font color="#CCCCCC"> ever</font>

451
00:25:06,740 --> 00:25:13,610
<font color="#E5E5E5">call of everything your mouth because</font>

452
00:25:09,470 --> 00:25:15,740
<font color="#CCCCCC">you can't now standard call is the</font>

453
00:25:13,610 --> 00:25:19,219
standard<font color="#E5E5E5"> column convention for windows</font>

454
00:25:15,740 --> 00:25:22,730
32-bit<font color="#E5E5E5"> in Theon coughs so API is</font>

455
00:25:19,220 --> 00:25:26,150
application<font color="#E5E5E5"> programming interface so if</font>

456
00:25:22,730 --> 00:25:27,800
I want<font color="#E5E5E5"> to write a</font><font color="#CCCCCC"> Windows app</font><font color="#E5E5E5"> I write a</font>

457
00:25:26,150 --> 00:25:32,800
little bit<font color="#E5E5E5"> of code and I'm also they</font>

458
00:25:27,800 --> 00:25:32,800
call a lot of API<font color="#E5E5E5"> toxins pretty typical</font>

459
00:25:33,220 --> 00:25:39,080
here the colleague<font color="#E5E5E5"> cleans up the stack</font>

460
00:25:36,950 --> 00:25:43,580
<font color="#E5E5E5">so I just pushed up on the stack</font><font color="#CCCCCC"> called</font>

461
00:25:39,080 --> 00:25:45,470
<font color="#CCCCCC">a</font><font color="#E5E5E5"> function and then it returns and I</font>

462
00:25:43,580 --> 00:25:46,550
don't<font color="#E5E5E5"> have to do anything else it's</font>

463
00:25:45,470 --> 00:25:50,450
easier for<font color="#CCCCCC"> me</font>

464
00:25:46,550 --> 00:25:53,780
<font color="#E5E5E5">programmer this same thing arguments</font>

465
00:25:50,450 --> 00:25:56,180
pushed on from right to left<font color="#CCCCCC"> you can't</font>

466
00:25:53,780 --> 00:25:59,420
use<font color="#CCCCCC"> it though</font><font color="#E5E5E5"> we had things like print</font>

467
00:25:56,180 --> 00:26:02,450
out because the<font color="#E5E5E5"> Kali has no way of</font>

468
00:25:59,420 --> 00:26:03,809
<font color="#CCCCCC">knowing what you</font><font color="#E5E5E5"> push</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> it's variable</font>

469
00:26:02,450 --> 00:26:07,879
<font color="#E5E5E5">number of arguments</font>

470
00:26:03,809 --> 00:26:10,200
I put on there<font color="#CCCCCC"> and help it things are</font>

471
00:26:07,879 --> 00:26:13,129
<font color="#E5E5E5">she talked about the</font><font color="#CCCCCC"> sea if you've been</font>

472
00:26:10,200 --> 00:26:15,960
in<font color="#E5E5E5"> DC programming you give me a pointer</font>

473
00:26:13,129 --> 00:26:18,570
<font color="#E5E5E5">do I need to free the space this pointer</font>

474
00:26:15,960 --> 00:26:19,379
points out<font color="#CCCCCC"> I don't know dude I'm</font><font color="#E5E5E5"> not</font>

475
00:26:18,570 --> 00:26:23,658
<font color="#E5E5E5">doing it</font>

476
00:26:19,379 --> 00:26:27,119
that's standard then there's<font color="#E5E5E5"> fast call</font>

477
00:26:23,659 --> 00:26:29,700
you don't<font color="#E5E5E5"> see this use very much in</font>

478
00:26:27,119 --> 00:26:32,039
32-bit<font color="#E5E5E5"> witness you don't see this use</font>

479
00:26:29,700 --> 00:26:34,399
very much<font color="#E5E5E5"> and start talking about 64-bit</font>

480
00:26:32,039 --> 00:26:38,999
programming<font color="#E5E5E5"> you will see this used a lot</font>

481
00:26:34,399 --> 00:26:41,959
<font color="#E5E5E5">and actually if you</font><font color="#CCCCCC"> look</font><font color="#E5E5E5"> at arm this</font><font color="#CCCCCC"> is</font>

482
00:26:38,999 --> 00:26:45,269
<font color="#CCCCCC">sort of the</font><font color="#E5E5E5"> standard thing for arm</font>

483
00:26:41,960 --> 00:26:49,889
art doesn't use the<font color="#E5E5E5"> stack in the same</font>

484
00:26:45,269 --> 00:26:56,669
way that we're<font color="#E5E5E5"> going to use it here just</font>

485
00:26:49,889 --> 00:26:58,439
<font color="#CCCCCC">a little the little</font><font color="#E5E5E5"> tease</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> you know</font>

486
00:26:56,669 --> 00:27:00,419
doing a whole<font color="#CCCCCC"> series of reverse</font>

487
00:26:58,440 --> 00:27:03,049
engineering<font color="#CCCCCC"> courses at</font><font color="#E5E5E5"> test your Academy</font>

488
00:27:00,419 --> 00:27:07,049
<font color="#E5E5E5">and right now I'm working on the arm</font>

489
00:27:03,049 --> 00:27:08,668
<font color="#CCCCCC">claws</font><font color="#E5E5E5"> so first thing I'm going to put</font>

490
00:27:07,049 --> 00:27:10,080
<font color="#E5E5E5">out there</font><font color="#CCCCCC"> is an arm assembly class</font>

491
00:27:08,669 --> 00:27:11,789
because nobody<font color="#CCCCCC"> knows how to</font><font color="#E5E5E5"> do harm</font>

492
00:27:10,080 --> 00:27:14,549
assembly it's a little different<font color="#CCCCCC"> a</font>

493
00:27:11,789 --> 00:27:22,489
<font color="#CCCCCC">little</font><font color="#E5E5E5"> weird</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> then they'll be</font>

494
00:27:14,549 --> 00:27:29,509
<font color="#CCCCCC">Armorer's it comes up very quickly</font><font color="#E5E5E5"> okay</font>

495
00:27:22,489 --> 00:27:29,509
so there's a stack buffer overflow<font color="#CCCCCC"> I</font>

496
00:27:30,139 --> 00:27:39,059
want to explain what<font color="#E5E5E5"> do I need what</font><font color="#CCCCCC"> are</font>

497
00:27:34,169 --> 00:27:42,869
<font color="#E5E5E5">my necessary than just conditions in</font>

498
00:27:39,059 --> 00:27:45,599
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do this</font><font color="#CCCCCC"> often you want to</font><font color="#E5E5E5"> say</font>

499
00:27:42,869 --> 00:27:47,879
what happen has to happen<font color="#CCCCCC"> for something</font>

500
00:27:45,599 --> 00:27:50,339
bad to happen<font color="#E5E5E5"> well you</font><font color="#CCCCCC"> have to have</font>

501
00:27:47,879 --> 00:27:54,019
maybe all three of these<font color="#E5E5E5"> conditions so</font>

502
00:27:50,339 --> 00:27:57,479
for example<font color="#CCCCCC"> ask anyone fly helicopters</font><font color="#E5E5E5"> a</font>

503
00:27:54,019 --> 00:27:58,830
chopper<font color="#CCCCCC"> pilots are never good</font><font color="#E5E5E5"> when</font>

504
00:27:57,479 --> 00:28:00,269
<font color="#E5E5E5">you're flying a helicopter there's</font>

505
00:27:58,830 --> 00:28:02,728
something called settling with power

506
00:28:00,269 --> 00:28:05,820
it's kind of really bad like if you come

507
00:28:02,729 --> 00:28:08,039
<font color="#E5E5E5">in to</font><font color="#CCCCCC"> land</font><font color="#E5E5E5"> your chopper in you keep</font>

508
00:28:05,820 --> 00:28:10,468
<font color="#E5E5E5">adding power you sink faster and faster</font>

509
00:28:08,039 --> 00:28:12,779
and<font color="#E5E5E5"> faster the more power you put it</font>

510
00:28:10,469 --> 00:28:15,509
it's<font color="#E5E5E5"> not a good thing but there are</font>

511
00:28:12,779 --> 00:28:17,250
three conditions<font color="#E5E5E5"> that all three of</font><font color="#CCCCCC"> those</font>

512
00:28:15,509 --> 00:28:19,080
happen<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be there</font>

513
00:28:17,250 --> 00:28:21,000
in order<font color="#CCCCCC"> for this to</font><font color="#E5E5E5"> happen to</font><font color="#CCCCCC"> you right</font>

514
00:28:19,080 --> 00:28:24,990
<font color="#CCCCCC">so you remove one of the conditions and</font>

515
00:28:21,000 --> 00:28:30,060
<font color="#E5E5E5">it's not going to happen so to get a</font>

516
00:28:24,990 --> 00:28:32,730
successful<font color="#E5E5E5"> stack buffer overflow you</font>

517
00:28:30,060 --> 00:28:35,340
have to be able to overwrite the<font color="#CCCCCC"> return</font>

518
00:28:32,730 --> 00:28:39,180
address on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> stack we'll talk a</font><font color="#E5E5E5"> little</font>

519
00:28:35,340 --> 00:28:43,250
<font color="#E5E5E5">bit more about the stock bit but when I</font>

520
00:28:39,180 --> 00:28:46,890
call a function the place I was in

521
00:28:43,250 --> 00:28:49,640
<font color="#E5E5E5">memory in my program that</font><font color="#CCCCCC"> location</font><font color="#E5E5E5"> that</font>

522
00:28:46,890 --> 00:28:52,980
return<font color="#CCCCCC"> address is stored on the stack I</font>

523
00:28:49,640 --> 00:28:55,920
need to overwrite<font color="#CCCCCC"> that address</font><font color="#E5E5E5"> so to say</font>

524
00:28:52,980 --> 00:29:00,380
go somewhere<font color="#E5E5E5"> else</font><font color="#CCCCCC"> that is at</font><font color="#E5E5E5"> the heart</font>

525
00:28:55,920 --> 00:29:04,980
<font color="#CCCCCC">of</font><font color="#E5E5E5"> all stack buffer overflow questions</font>

526
00:29:00,380 --> 00:29:07,320
<font color="#E5E5E5">mostly I don't like to say all this</font>

527
00:29:04,980 --> 00:29:12,200
<font color="#CCCCCC">usually there's some good case for next</font>

528
00:29:07,320 --> 00:29:17,280
time<font color="#E5E5E5"> okay so usually but not always</font>

529
00:29:12,200 --> 00:29:22,830
<font color="#CCCCCC">you might inject yourself Oh</font><font color="#E5E5E5"> shellcode</font>

530
00:29:17,280 --> 00:29:24,240
on the stack<font color="#E5E5E5"> now if you want to learn</font>

531
00:29:22,830 --> 00:29:25,679
how to write your<font color="#E5E5E5"> own shelf</font><font color="#CCCCCC"> go guess</font>

532
00:29:24,240 --> 00:29:28,230
what there's actually a class at

533
00:29:25,680 --> 00:29:30,660
pentester academy about that you can

534
00:29:28,230 --> 00:29:34,290
also just download other people shell

535
00:29:30,660 --> 00:29:37,620
code those places like<font color="#E5E5E5"> shell star never</font>

536
00:29:34,290 --> 00:29:41,550
heard of shell storm<font color="#CCCCCC"> before it's a nice</font>

537
00:29:37,620 --> 00:29:46,459
little site and you can<font color="#E5E5E5"> say I want a</font>

538
00:29:41,550 --> 00:29:50,669
payload some shell code to do this<font color="#CCCCCC"> on</font>

539
00:29:46,460 --> 00:29:55,530
Windows<font color="#CCCCCC"> XP and if you look you'll see a</font>

540
00:29:50,670 --> 00:30:00,420
lot of<font color="#E5E5E5"> stuff for Windows</font><font color="#CCCCCC"> XP</font><font color="#E5E5E5"> not as much</font>

541
00:29:55,530 --> 00:30:02,460
for<font color="#E5E5E5"> more versions</font><font color="#CCCCCC"> of papers by the way</font>

542
00:30:00,420 --> 00:30:05,670
<font color="#E5E5E5">speaking of newer versions of Windows</font>

543
00:30:02,460 --> 00:30:07,560
<font color="#E5E5E5">you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> we have Windows 7</font><font color="#CCCCCC"> there ready</font>

544
00:30:05,670 --> 00:30:11,640
<font color="#E5E5E5">to use here some people are like</font><font color="#CCCCCC"> wow I</font>

545
00:30:07,560 --> 00:30:14,610
<font color="#CCCCCC">don't use Windows 10</font><font color="#E5E5E5"> truth is when you</font>

546
00:30:11,640 --> 00:30:16,920
<font color="#E5E5E5">look at forensics there's not a whole</font>

547
00:30:14,610 --> 00:30:21,840
lot<font color="#CCCCCC"> of difference between this doesn't</font>

548
00:30:16,920 --> 00:30:24,570
<font color="#CCCCCC">end most</font><font color="#E5E5E5"> of the differences between this</font>

549
00:30:21,840 --> 00:30:27,209
<font color="#CCCCCC">dos</font><font color="#E5E5E5"> and windows 10 are just in the user</font>

550
00:30:24,570 --> 00:30:27,570
experience<font color="#E5E5E5"> not in the way fundamentally</font>

551
00:30:27,210 --> 00:30:29,730
works

552
00:30:27,570 --> 00:30:31,769
yeah sure there's more things in the

553
00:30:29,730 --> 00:30:34,139
registry<font color="#E5E5E5"> there's more stuff on the</font>

554
00:30:31,769 --> 00:30:39,259
<font color="#CCCCCC">columns that you can stack but</font>

555
00:30:34,139 --> 00:30:42,689
fundamentally if you say so if you can't

556
00:30:39,259 --> 00:30:45,779
exploit a flaw<font color="#E5E5E5"> at Windows</font><font color="#CCCCCC"> 7 you're</font>

557
00:30:42,690 --> 00:30:57,750
probably<font color="#CCCCCC"> going to read exactly the same</font>

558
00:30:45,779 --> 00:31:03,779
thing<font color="#CCCCCC"> than levitate okay that's the</font>

559
00:30:57,750 --> 00:31:10,669
whole<font color="#E5E5E5"> goal</font><font color="#CCCCCC"> here is I want</font><font color="#E5E5E5"> to over flow</font>

560
00:31:03,779 --> 00:31:20,360
some local<font color="#CCCCCC"> variables and</font><font color="#E5E5E5"> here's why this</font>

561
00:31:10,669 --> 00:31:26,879
works if I look at the stack the stack

562
00:31:20,360 --> 00:31:30,120
<font color="#E5E5E5">actually grows downward in memory for</font>

563
00:31:26,879 --> 00:31:35,610
<font color="#E5E5E5">Windows and most operating systems</font>

564
00:31:30,120 --> 00:31:41,340
actually Windows Linux Mac they all work

565
00:31:35,610 --> 00:31:46,350
like<font color="#CCCCCC"> this so when I push</font><font color="#E5E5E5"> something on</font>

566
00:31:41,340 --> 00:31:53,309
the stack is actually<font color="#E5E5E5"> putting it in a</font>

567
00:31:46,350 --> 00:31:58,439
lower memory<font color="#E5E5E5"> address now I can push</font>

568
00:31:53,309 --> 00:32:01,320
things on<font color="#CCCCCC"> my stack</font><font color="#E5E5E5"> and how do I</font><font color="#CCCCCC"> make</font>

569
00:31:58,440 --> 00:32:05,759
space for<font color="#E5E5E5"> things on my staff</font><font color="#CCCCCC"> I make</font>

570
00:32:01,320 --> 00:32:09,928
space by subtracting from that stack

571
00:32:05,759 --> 00:32:13,110
pointer<font color="#E5E5E5"> we were just mentioning so if</font>

572
00:32:09,929 --> 00:32:20,129
you look at code<font color="#E5E5E5"> you'll see subtract you</font>

573
00:32:13,110 --> 00:32:22,110
know 32 from this pointer okay<font color="#E5E5E5"> why am i</font>

574
00:32:20,129 --> 00:32:28,110
<font color="#CCCCCC">doing that I'm making one 32</font><font color="#E5E5E5"> bytes of</font>

575
00:32:22,110 --> 00:32:31,379
space so what is in this space<font color="#CCCCCC"> I will</font>

576
00:32:28,110 --> 00:32:34,350
<font color="#CCCCCC">have any local</font><font color="#E5E5E5"> variable local variables</font>

577
00:32:31,379 --> 00:32:43,350
are sometimes called automatic variables

578
00:32:34,350 --> 00:32:46,500
or<font color="#E5E5E5"> stack variables in C in C and many</font>

579
00:32:43,350 --> 00:32:48,449
related languages<font color="#E5E5E5"> if I have an automatic</font>

580
00:32:46,500 --> 00:32:53,789
variable<font color="#E5E5E5"> what does that mean</font>

581
00:32:48,450 --> 00:32:59,639
I said int X<font color="#E5E5E5"> I just made an automatic</font>

582
00:32:53,789 --> 00:33:01,500
very<font color="#E5E5E5"> rare that variable lives and dies</font>

583
00:32:59,639 --> 00:33:05,789
in the curly brackets where it is

584
00:33:01,500 --> 00:33:07,980
defined<font color="#E5E5E5"> so I can actually have curly</font>

585
00:33:05,789 --> 00:33:12,929
bracket<font color="#E5E5E5"> you know opening curly bracket</font>

586
00:33:07,980 --> 00:33:16,950
<font color="#E5E5E5">it x equals 5 closing curly bracket</font>

587
00:33:12,929 --> 00:33:20,970
<font color="#E5E5E5">guess what happens it creates</font><font color="#CCCCCC"> it and</font>

588
00:33:16,950 --> 00:33:23,250
<font color="#E5E5E5">destroys it</font><font color="#CCCCCC"> nothing else</font><font color="#E5E5E5"> happened puts</font>

589
00:33:20,970 --> 00:33:28,320
<font color="#E5E5E5">it on the</font><font color="#CCCCCC"> stop</font><font color="#E5E5E5"> there then</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> thought</font>

590
00:33:23,250 --> 00:33:32,700
<font color="#E5E5E5">well</font><font color="#CCCCCC"> all your</font><font color="#E5E5E5"> functions don't those live</font>

591
00:33:28,320 --> 00:33:38,330
in<font color="#CCCCCC"> closed records they took right so any</font>

592
00:33:32,700 --> 00:33:45,600
local variables<font color="#E5E5E5"> from when you create a</font>

593
00:33:38,330 --> 00:33:52,918
function<font color="#E5E5E5"> those will be on the status</font>

594
00:33:45,600 --> 00:34:00,209
line following those you will have the

595
00:33:52,919 --> 00:34:04,169
frame pointer that's that EVP not<font color="#E5E5E5"> SP and</font>

596
00:34:00,210 --> 00:34:07,470
it says hey<font color="#E5E5E5"> we're where do I</font><font color="#CCCCCC"> enter</font><font color="#E5E5E5"> my</font>

597
00:34:04,169 --> 00:34:09,990
little frame if you will for this

598
00:34:07,470 --> 00:34:14,399
<font color="#CCCCCC">function this</font><font color="#E5E5E5"> function is storing</font>

599
00:34:09,989 --> 00:34:17,459
certain things<font color="#E5E5E5"> is that following</font><font color="#CCCCCC"> that is</font>

600
00:34:14,399 --> 00:34:21,719
<font color="#E5E5E5">the return address when this function is</font>

601
00:34:17,460 --> 00:34:25,520
over<font color="#E5E5E5"> where should I go</font><font color="#CCCCCC"> back to and</font>

602
00:34:21,719 --> 00:34:30,689
that's<font color="#E5E5E5"> the reason that</font><font color="#CCCCCC"> that is</font><font color="#E5E5E5"> in red is</font>

603
00:34:25,520 --> 00:34:32,839
here's<font color="#E5E5E5"> what I can do if I</font><font color="#CCCCCC"> have a local</font>

604
00:34:30,690 --> 00:34:37,918
<font color="#CCCCCC">variable that's</font><font color="#E5E5E5"> not been properly</font>

605
00:34:32,839 --> 00:34:41,969
constrained<font color="#CCCCCC"> I can over right let's say</font>

606
00:34:37,918 --> 00:34:46,138
it seem to<font color="#CCCCCC"> bite into</font>

607
00:34:41,969 --> 00:34:48,569
I can override<font color="#E5E5E5"> it overwrite any other</font>

608
00:34:46,139 --> 00:34:50,970
variables<font color="#E5E5E5"> local variables behind it</font>

609
00:34:48,569 --> 00:34:56,399
overwrite this train<font color="#CCCCCC"> bumper and then</font>

610
00:34:50,969 --> 00:34:59,040
over eyes with return address now if<font color="#E5E5E5"> I</font>

611
00:34:56,399 --> 00:35:01,348
overwrite this returns dries<font color="#CCCCCC"> I could</font>

612
00:34:59,040 --> 00:35:03,450
easily crash the<font color="#E5E5E5"> program that's the</font>

613
00:35:01,349 --> 00:35:05,609
easiest<font color="#E5E5E5"> thing you give it some bad</font>

614
00:35:03,450 --> 00:35:08,750
address the tricycle back there an

615
00:35:05,609 --> 00:35:16,529
accessory<font color="#E5E5E5"> whoa I could not access</font><font color="#CCCCCC"> this</font>

616
00:35:08,750 --> 00:35:19,740
that's popping on the version<font color="#CCCCCC"> of Windows</font>

617
00:35:16,530 --> 00:35:22,500
<font color="#CCCCCC">that you're dealing with</font><font color="#E5E5E5"> after you give</font>

618
00:35:19,740 --> 00:35:26,189
it a new return address you can also

619
00:35:22,500 --> 00:35:28,530
give<font color="#CCCCCC"> it some shell code</font><font color="#E5E5E5"> that you</font><font color="#CCCCCC"> got to</font>

620
00:35:26,190 --> 00:35:34,920
the<font color="#CCCCCC"> moon shell storm or these rotar</font>

621
00:35:28,530 --> 00:35:37,920
<font color="#E5E5E5">scheme by the way I will say this once</font>

622
00:35:34,920 --> 00:35:44,069
you start getting<font color="#E5E5E5"> ran into this so you</font>

623
00:35:37,920 --> 00:35:46,500
start to<font color="#E5E5E5"> realize why it's so picky you</font>

624
00:35:44,069 --> 00:35:49,160
run<font color="#CCCCCC"> Metasploit how many of you i'm</font>

625
00:35:46,500 --> 00:35:52,680
<font color="#CCCCCC">Metasploit at least B</font><font color="#E5E5E5"> minor is</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> point</font>

626
00:35:49,160 --> 00:35:55,259
and sometimes<font color="#CCCCCC"> you</font><font color="#E5E5E5"> run an</font><font color="#CCCCCC"> x plate blush</font>

627
00:35:52,680 --> 00:35:59,940
<font color="#CCCCCC">it's like</font><font color="#E5E5E5"> everyone's favorite exploit is</font>

628
00:35:55,260 --> 00:36:02,069
what MSO<font color="#CCCCCC"> 8:06 that works almost all the</font>

629
00:35:59,940 --> 00:36:06,390
time<font color="#E5E5E5"> not all the time</font>

630
00:36:02,069 --> 00:36:09,300
probably good 1995<font color="#CCCCCC"> I really one time was</font>

631
00:36:06,390 --> 00:36:13,200
<font color="#E5E5E5">doing a demo and it was one</font><font color="#CCCCCC"> of the few</font>

632
00:36:09,300 --> 00:36:17,520
times I'm like exploit<font color="#E5E5E5"> I didn't finish</font>

633
00:36:13,200 --> 00:36:23,450
<font color="#E5E5E5">yellow oh no what am I going to do and</font>

634
00:36:17,520 --> 00:36:27,240
some of<font color="#E5E5E5"> my students</font><font color="#CCCCCC"> for exploit</font><font color="#E5E5E5"> oh no</font>

635
00:36:23,450 --> 00:36:29,759
but the more you learn<font color="#E5E5E5"> about these open</font>

636
00:36:27,240 --> 00:36:32,250
<font color="#CCCCCC">these flaws is software the more you</font>

637
00:36:29,760 --> 00:36:34,950
understand why this stuff doesn't always

638
00:36:32,250 --> 00:36:39,630
work<font color="#CCCCCC"> right now I'm teaching</font><font color="#E5E5E5"> a pen</font>

639
00:36:34,950 --> 00:36:42,060
testing class at the University and you

640
00:36:39,630 --> 00:36:43,349
<font color="#CCCCCC">know I</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> remember one year I taught this</font>

641
00:36:42,060 --> 00:36:44,330
class and someone<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> feedback</font>

642
00:36:43,349 --> 00:36:48,440
<font color="#E5E5E5">securities</font>

643
00:36:44,330 --> 00:36:51,380
like stuff didn't<font color="#CCCCCC"> work in</font><font color="#E5E5E5"> this box</font>

644
00:36:48,440 --> 00:36:53,960
welcome to<font color="#CCCCCC"> pen</font><font color="#E5E5E5"> testing you know stuff</font>

645
00:36:51,380 --> 00:36:57,050
doesn't work all<font color="#CCCCCC"> the time</font><font color="#E5E5E5"> sometimes you</font>

646
00:36:53,960 --> 00:37:00,500
got to<font color="#E5E5E5"> try more than</font><font color="#CCCCCC"> one thing</font><font color="#E5E5E5"> why is</font>

647
00:36:57,050 --> 00:37:05,540
that<font color="#E5E5E5"> well it</font><font color="#CCCCCC"> doesn't take much to change</font>

648
00:37:00,500 --> 00:37:07,520
<font color="#E5E5E5">the addresses involved because typically</font>

649
00:37:05,540 --> 00:37:12,170
the return address we're going to point

650
00:37:07,520 --> 00:37:16,490
<font color="#E5E5E5">to is right after that space</font><font color="#CCCCCC"> memory</font><font color="#E5E5E5"> so</font>

651
00:37:12,170 --> 00:37:20,750
we need to know where is that space on

652
00:37:16,490 --> 00:37:24,470
the stack<font color="#CCCCCC"> when I ran and there are</font>

653
00:37:20,750 --> 00:37:26,720
things in fact and change<font color="#CCCCCC"> them and</font>

654
00:37:24,470 --> 00:37:29,629
that's one reason<font color="#E5E5E5"> why it's a lot</font><font color="#CCCCCC"> of</font>

655
00:37:26,720 --> 00:37:32,120
these exploits are highly<font color="#CCCCCC"> dependent on</font>

656
00:37:29,630 --> 00:37:34,040
<font color="#CCCCCC">the exact version of the software and</font>

657
00:37:32,120 --> 00:37:40,520
<font color="#CCCCCC">the exact version of the</font><font color="#E5E5E5"> operating</font>

658
00:37:34,040 --> 00:37:43,310
<font color="#E5E5E5">system so that's this vector space is</font>

659
00:37:40,520 --> 00:37:52,940
you know a big player especially<font color="#CCCCCC"> at</font>

660
00:37:43,310 --> 00:37:54,920
buffer overflows<font color="#E5E5E5"> questions are Chris you</font>

661
00:37:52,940 --> 00:37:58,460
<font color="#E5E5E5">guys feel like you get we're talking</font>

662
00:37:54,920 --> 00:38:00,410
about here sure don't be shy<font color="#E5E5E5"> because</font>

663
00:37:58,460 --> 00:38:10,100
it's it's real important they understand

664
00:38:00,410 --> 00:38:14,690
this or you won't understand<font color="#CCCCCC"> okay we</font>

665
00:38:10,100 --> 00:38:20,270
will get into<font color="#E5E5E5"> some of these protections</font>

666
00:38:14,690 --> 00:38:23,330
<font color="#CCCCCC">a little bit but let's go ahead</font><font color="#E5E5E5"> and try</font>

667
00:38:20,270 --> 00:38:25,640
to do some actual hands-on stuff for a

668
00:38:23,330 --> 00:38:41,450
<font color="#E5E5E5">little bit</font><font color="#CCCCCC"> but maybe we'll take a little</font>

669
00:38:25,640 --> 00:38:44,629
break this how many<font color="#CCCCCC"> of</font><font color="#E5E5E5"> you have managed</font>

670
00:38:41,450 --> 00:38:47,919
to<font color="#E5E5E5"> get this</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> wow you got it running</font>

671
00:38:44,630 --> 00:38:51,620
yep Wow

672
00:38:47,920 --> 00:38:53,300
you've got the pile right<font color="#E5E5E5"> oh yeah but</font>

673
00:38:51,620 --> 00:38:57,020
<font color="#E5E5E5">you don't</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> it up and running</font><font color="#CCCCCC"> it was</font>

674
00:38:53,300 --> 00:39:07,340
in that<font color="#E5E5E5"> big crash oh well it is</font><font color="#CCCCCC"> Windows</font>

675
00:38:57,020 --> 00:39:10,670
<font color="#E5E5E5">that drop so what I'm going</font><font color="#CCCCCC"> to use for</font>

676
00:39:07,340 --> 00:39:13,000
<font color="#CCCCCC">this is a little IDE little integrated</font>

677
00:39:10,670 --> 00:39:19,490
development environment it's called dev

678
00:39:13,000 --> 00:39:24,650
C++ it's free you<font color="#CCCCCC"> can download it off of</font>

679
00:39:19,490 --> 00:40:00,470
github<font color="#E5E5E5"> I believe I think</font><font color="#CCCCCC"> you just search</font>

680
00:39:24,650 --> 00:40:06,380
for it you'll<font color="#E5E5E5"> find it so here's a very</font>

681
00:40:00,470 --> 00:40:09,439
<font color="#CCCCCC">simple program and what is it cab it has</font>

682
00:40:06,380 --> 00:40:15,530
my main function<font color="#CCCCCC"> I got my main function</font>

683
00:40:09,440 --> 00:40:18,440
down<font color="#E5E5E5"> here it takes the standard</font>

684
00:40:15,530 --> 00:40:22,640
arguments<font color="#E5E5E5"> in</font><font color="#CCCCCC"> art see how many things</font><font color="#E5E5E5"> to</font>

685
00:40:18,440 --> 00:40:25,010
<font color="#E5E5E5">pass in this program</font><font color="#CCCCCC"> RV is an array of</font>

686
00:40:22,640 --> 00:40:29,690
<font color="#E5E5E5">strings or</font><font color="#CCCCCC"> everything</font><font color="#E5E5E5"> you pass to this</font>

687
00:40:25,010 --> 00:40:33,710
promise<font color="#CCCCCC"> I create a local screen string</font>

688
00:40:29,690 --> 00:40:35,780
called<font color="#CCCCCC"> Mosel string and I give it the</font>

689
00:40:33,710 --> 00:40:40,760
<font color="#CCCCCC">value main function</font>

690
00:40:35,780 --> 00:40:44,840
and then I create a local integer<font color="#E5E5E5"> I get</font>

691
00:40:40,760 --> 00:40:50,090
with this value<font color="#CCCCCC"> I call function function</font>

692
00:40:44,840 --> 00:40:51,440
<font color="#CCCCCC">I give</font><font color="#E5E5E5"> it our v1 our v1 is just the</font>

693
00:40:50,090 --> 00:40:57,380
<font color="#E5E5E5">first thing you passed it on the</font>

694
00:40:51,440 --> 00:41:00,950
community this function function

695
00:40:57,380 --> 00:41:04,400
function<font color="#E5E5E5"> might</font><font color="#CCCCCC"> make</font><font color="#E5E5E5"> you think</font><font color="#CCCCCC"> of</font>

696
00:41:00,950 --> 00:41:08,330
something<font color="#E5E5E5"> if you're old enough Saturday</font>

697
00:41:04,400 --> 00:41:11,810
morning cartoons<font color="#CCCCCC"> I think you think you</font>

698
00:41:08,330 --> 00:41:15,830
think of conjunction<font color="#E5E5E5"> junction what's</font>

699
00:41:11,810 --> 00:41:16,370
your function<font color="#E5E5E5"> come on don't leave me</font>

700
00:41:15,830 --> 00:41:21,920
hanging

701
00:41:16,370 --> 00:41:29,420
what's your function<font color="#CCCCCC"> hookin up phrases</font>

702
00:41:21,920 --> 00:41:34,580
and words and something like<font color="#E5E5E5"> like</font><font color="#CCCCCC"> now I</font>

703
00:41:29,420 --> 00:41:37,660
forgot<font color="#E5E5E5"> to add Saturday okay so my</font>

704
00:41:34,580 --> 00:41:41,000
function function<font color="#E5E5E5"> takes one parameter</font>

705
00:41:37,660 --> 00:41:44,960
<font color="#E5E5E5">and here's what it does it has a local</font>

706
00:41:41,000 --> 00:41:48,290
strain a local integer and then<font color="#E5E5E5"> it has</font>

707
00:41:44,960 --> 00:41:55,400
<font color="#CCCCCC">another local strain that has ten bytes</font>

708
00:41:48,290 --> 00:42:00,050
of storage<font color="#E5E5E5"> and here's the flaw</font><font color="#CCCCCC"> right</font>

709
00:41:55,400 --> 00:42:01,910
here I use stir copy master copy the way

710
00:42:00,050 --> 00:42:08,050
it works and<font color="#E5E5E5"> the destination actually</font>

711
00:42:01,910 --> 00:42:10,940
comes first<font color="#CCCCCC"> each source comes second</font>

712
00:42:08,050 --> 00:42:14,980
so I'm saying<font color="#E5E5E5"> hey whatever was passed it</font>

713
00:42:10,940 --> 00:42:19,190
please copy that to local spring<font color="#CCCCCC"> food</font>

714
00:42:14,980 --> 00:42:23,090
but problem<font color="#E5E5E5"> and here's the problem</font><font color="#CCCCCC"> local</font>

715
00:42:19,190 --> 00:42:24,980
string<font color="#CCCCCC"> - is it most 10 bytes long</font><font color="#E5E5E5"> so if</font>

716
00:42:23,090 --> 00:42:30,010
you<font color="#E5E5E5"> know how C strings</font><font color="#CCCCCC"> works that means</font>

717
00:42:24,980 --> 00:42:30,010
<font color="#CCCCCC">nine</font><font color="#E5E5E5"> characters was the null</font><font color="#CCCCCC"> terminator</font>

718
00:42:32,350 --> 00:42:35,960
and<font color="#E5E5E5"> then I returned one and that's</font>

719
00:42:35,240 --> 00:42:40,100
<font color="#E5E5E5">pretty</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> it</font>

720
00:42:35,960 --> 00:42:43,280
my<font color="#E5E5E5"> function returns to function</font><font color="#CCCCCC"> two main</font>

721
00:42:40,100 --> 00:42:46,490
main return 0 0 means<font color="#E5E5E5"> at work</font><font color="#CCCCCC"> anything</font>

722
00:42:43,280 --> 00:42:51,740
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> zero means it didn't work</font>

723
00:42:46,490 --> 00:42:55,399
and I go along my<font color="#CCCCCC"> way unless someone</font>

724
00:42:51,740 --> 00:42:59,750
passes something<font color="#E5E5E5"> into this program that</font>

725
00:42:55,400 --> 00:43:06,230
<font color="#E5E5E5">is longer than nine characters as soon</font>

726
00:42:59,750 --> 00:43:11,510
as they do that<font color="#CCCCCC"> this will overflow local</font>

727
00:43:06,230 --> 00:43:16,100
<font color="#CCCCCC">screen - now one of the</font><font color="#E5E5E5"> questions</font><font color="#CCCCCC"> we'll</font>

728
00:43:11,510 --> 00:43:19,280
have to answer is how far after local

729
00:43:16,100 --> 00:43:24,500
<font color="#E5E5E5">string - do I have to go until I hit</font>

730
00:43:19,280 --> 00:43:27,050
that return address<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right so that's</font>

731
00:43:24,500 --> 00:43:28,910
the<font color="#E5E5E5"> first</font><font color="#CCCCCC"> question</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> how do I</font><font color="#CCCCCC"> get</font>

732
00:43:27,050 --> 00:43:32,410
this<font color="#E5E5E5"> offset</font><font color="#CCCCCC"> how to calculate this</font>

733
00:43:28,910 --> 00:43:35,299
awesome<font color="#E5E5E5"> then the second question becomes</font>

734
00:43:32,410 --> 00:43:39,259
how do I know what<font color="#E5E5E5"> to put in that new</font>

735
00:43:35,300 --> 00:43:42,290
<font color="#E5E5E5">return address and</font><font color="#CCCCCC"> how do</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> get my code</font>

736
00:43:39,260 --> 00:43:44,150
<font color="#E5E5E5">that I want</font><font color="#CCCCCC"> to execute</font><font color="#E5E5E5"> so that's kind of</font>

737
00:43:42,290 --> 00:43:45,529
what we're<font color="#CCCCCC"> going to work through today</font>

738
00:43:44,150 --> 00:43:49,160
<font color="#E5E5E5">is we're going to start with this very</font>

739
00:43:45,530 --> 00:43:49,700
<font color="#CCCCCC">simple program and we're gonna go from</font>

740
00:43:49,160 --> 00:43:55,160
there

741
00:43:49,700 --> 00:43:59,660
<font color="#CCCCCC">and say all right I</font><font color="#E5E5E5"> want</font><font color="#CCCCCC"> to abuse this</font>

742
00:43:55,160 --> 00:44:02,720
super super simple<font color="#CCCCCC"> phone so</font><font color="#E5E5E5"> let's go</font>

743
00:43:59,660 --> 00:44:10,100
ahead<font color="#CCCCCC"> and you know</font><font color="#E5E5E5"> it's about 10-ish</font>

744
00:44:02,720 --> 00:44:13,430
<font color="#E5E5E5">yourself this is take a quick</font><font color="#CCCCCC"> break and</font>

745
00:44:10,100 --> 00:44:17,180
<font color="#E5E5E5">we'll</font><font color="#CCCCCC"> come back at it and</font><font color="#E5E5E5"> we try to go</font>

746
00:44:13,430 --> 00:44:21,339
through<font color="#CCCCCC"> this so you have</font><font color="#E5E5E5"> a web server</font><font color="#CCCCCC"> oh</font>

747
00:44:17,180 --> 00:44:21,339
I didn't<font color="#E5E5E5"> I cannot reform on this though</font>

748
00:44:22,600 --> 00:44:25,960
yeah<font color="#CCCCCC"> feel free</font>

749
00:44:42,630 --> 00:44:48,869
well it's not going<font color="#E5E5E5"> to work in fact with</font>

750
00:44:45,930 --> 00:44:51,868
<font color="#E5E5E5">Mac or</font><font color="#CCCCCC"> BiPAP well the files to lunch</font>

751
00:44:48,869 --> 00:44:54,180
<font color="#E5E5E5">oh yeah constantly that's it</font><font color="#CCCCCC"> let's see</font>

752
00:44:51,869 --> 00:44:56,640
<font color="#E5E5E5">that's the whole</font><font color="#CCCCCC"> reason why I understand</font>

753
00:44:54,180 --> 00:44:58,019
you know we could<font color="#E5E5E5"> be working forensics</font>

754
00:44:56,640 --> 00:45:04,078
<font color="#CCCCCC">to</font><font color="#E5E5E5"> render these issues all the</font><font color="#CCCCCC"> time</font>

755
00:44:58,019 --> 00:45:13,049
because you can't just run fat because

756
00:45:04,079 --> 00:46:13,349
fat has<font color="#E5E5E5"> four gigabyte file size so a</font>

757
00:45:13,049 --> 00:46:23,099
little<font color="#E5E5E5"> break we'll see if we get so</font>

758
00:46:13,349 --> 00:46:26,579
there is program is that<font color="#CCCCCC"> principal</font><font color="#E5E5E5"> build</font>

759
00:46:23,099 --> 00:46:29,849
in the West<font color="#E5E5E5"> don't worry if you're doing</font>

760
00:46:26,579 --> 00:46:33,749
this yourself<font color="#E5E5E5"> especially</font><font color="#CCCCCC"> if you're doing</font>

761
00:46:29,849 --> 00:46:40,739
it later<font color="#CCCCCC"> with this tool make sure</font><font color="#E5E5E5"> all</font>

762
00:46:33,749 --> 00:46:41,669
that you want a 32-bit please<font color="#E5E5E5"> you could</font>

763
00:46:40,739 --> 00:46:45,569
cheat a little bit

764
00:46:41,670 --> 00:46:47,670
say<font color="#E5E5E5"> 32-bit debugging and install some</font>

765
00:46:45,569 --> 00:46:50,150
additional symbols but you know<font color="#E5E5E5"> trying</font>

766
00:46:47,670 --> 00:46:54,910
<font color="#E5E5E5">to make it a little more real world</font>

767
00:46:50,150 --> 00:46:58,509
where well I guess somebody<font color="#CCCCCC"> like</font>

768
00:46:54,910 --> 00:47:00,279
do a debug<font color="#CCCCCC"> build each other tool and</font>

769
00:46:58,509 --> 00:47:04,509
release it I'm<font color="#E5E5E5"> sure it's happened more</font>

770
00:47:00,279 --> 00:47:10,259
than<font color="#CCCCCC"> you want</font><font color="#E5E5E5"> with people for God but I</font>

771
00:47:04,509 --> 00:47:10,259
wouldn't<font color="#E5E5E5"> expect go ahead and build this</font>

772
00:47:13,049 --> 00:47:18,460
pilot<font color="#CCCCCC"> compiled</font><font color="#E5E5E5"> it</font>

773
00:47:15,430 --> 00:47:21,299
<font color="#E5E5E5">Oh point</font><font color="#CCCCCC"> for five seconds and</font><font color="#E5E5E5"> now I'm</font>

774
00:47:18,460 --> 00:47:21,299
pretty<font color="#E5E5E5"> much good</font><font color="#CCCCCC"> to go</font>

775
00:47:37,619 --> 00:47:46,269
open a<font color="#E5E5E5"> program</font><font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> open this</font>

776
00:47:41,380 --> 00:47:53,380
buffer overflow program and here in a

777
00:47:46,269 --> 00:47:58,000
trash apologize<font color="#E5E5E5"> given limited resolution</font>

778
00:47:53,380 --> 00:48:00,430
<font color="#E5E5E5">that we have here on the</font><font color="#CCCCCC"> screen you know</font>

779
00:47:58,000 --> 00:48:04,089
<font color="#E5E5E5">stuff</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind of going off on</font><font color="#CCCCCC"> screen and</font>

780
00:48:00,430 --> 00:48:07,509
it's not exactly ideal give you a quick

781
00:48:04,089 --> 00:48:09,250
overview<font color="#E5E5E5"> of this debugger most of these</font>

782
00:48:07,509 --> 00:48:14,019
<font color="#CCCCCC">loggers</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> are used</font><font color="#E5E5E5"> for reverse</font>

783
00:48:09,250 --> 00:48:17,650
<font color="#E5E5E5">engineering</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> about the same over</font>

784
00:48:14,019 --> 00:48:20,319
here<font color="#E5E5E5"> we have our</font><font color="#CCCCCC"> program over here we</font>

785
00:48:17,650 --> 00:48:25,150
have<font color="#CCCCCC"> our registers</font><font color="#E5E5E5"> here we have a</font>

786
00:48:20,319 --> 00:48:27,460
generic memory dump and we can decide

787
00:48:25,150 --> 00:48:30,130
<font color="#E5E5E5">where we're going to dump</font><font color="#CCCCCC"> that right and</font>

788
00:48:27,460 --> 00:48:32,859
over<font color="#CCCCCC"> here is our staffing so we</font><font color="#E5E5E5"> haven't</font>

789
00:48:30,130 --> 00:48:35,259
started running it yet so not much is

790
00:48:32,859 --> 00:48:39,720
<font color="#E5E5E5">going on</font><font color="#CCCCCC"> so if I look</font><font color="#E5E5E5"> over here you'll</font>

791
00:48:35,259 --> 00:48:42,730
<font color="#CCCCCC">notice I have Dax</font><font color="#E5E5E5"> and it says buffer</font>

792
00:48:39,720 --> 00:48:44,919
overflow module entry point

793
00:48:42,730 --> 00:48:51,460
it's basically where it's pointing at

794
00:48:44,920 --> 00:48:56,279
<font color="#CCCCCC">this address there</font><font color="#E5E5E5"> is the a</font><font color="#CCCCCC"> register</font><font color="#E5E5E5"> the</font>

795
00:48:51,460 --> 00:48:56,279
B register<font color="#CCCCCC"> c register you</font>

796
00:48:59,840 --> 00:49:01,900
you

797
00:49:22,050 --> 00:49:30,000
and you'll notice that<font color="#E5E5E5"> all</font><font color="#CCCCCC"> of these</font><font color="#E5E5E5"> are</font>

798
00:49:25,220 --> 00:49:33,480
<font color="#CCCCCC">pretty</font><font color="#E5E5E5"> much well seeing</font><font color="#CCCCCC"> deer</font><font color="#E5E5E5"> set zero my</font>

799
00:49:30,000 --> 00:49:37,890
stack pointer<font color="#E5E5E5"> says here's where my stack</font>

800
00:49:33,480 --> 00:49:40,200
is at the moment<font color="#E5E5E5"> my frame pointer is not</font>

801
00:49:37,890 --> 00:49:44,129
going<font color="#CCCCCC"> do</font><font color="#E5E5E5"> anything yet and I have a</font>

802
00:49:40,200 --> 00:49:46,529
couple<font color="#CCCCCC"> of</font><font color="#E5E5E5"> other registered don't worry</font>

803
00:49:44,130 --> 00:49:53,210
about<font color="#CCCCCC"> cost they're not important for our</font>

804
00:49:46,530 --> 00:49:53,210
<font color="#E5E5E5">purposes</font><font color="#CCCCCC"> any</font><font color="#E5E5E5"> people see some other</font>

805
00:49:53,540 --> 00:50:03,150
registers<font color="#CCCCCC"> one of the things that happen</font>

806
00:49:57,480 --> 00:50:04,800
<font color="#CCCCCC">over time is that</font><font color="#E5E5E5"> we added registers and</font>

807
00:50:03,150 --> 00:50:09,000
a lot of<font color="#CCCCCC"> these are used</font><font color="#E5E5E5"> for things like</font>

808
00:50:04,800 --> 00:50:12,690
<font color="#CCCCCC">floating-point</font><font color="#E5E5E5"> processing if you look at</font>

809
00:50:09,000 --> 00:50:18,270
an old processor it knows how<font color="#E5E5E5"> to do add</font>

810
00:50:12,690 --> 00:50:23,160
subtract multiply<font color="#CCCCCC"> anciently divide some</font>

811
00:50:18,270 --> 00:50:28,369
of them don't<font color="#E5E5E5"> have tonight</font><font color="#CCCCCC"> and it's just</font>

812
00:50:23,160 --> 00:50:31,049
integer math when you look at newer

813
00:50:28,369 --> 00:50:33,420
processors they add in the

814
00:50:31,050 --> 00:50:38,340
<font color="#E5E5E5">floating-point processor and if you go</font>

815
00:50:33,420 --> 00:50:43,170
back<font color="#CCCCCC"> ways</font><font color="#E5E5E5"> in the intel line to the Intel</font>

816
00:50:38,340 --> 00:50:46,050
386 I believe is the last that didn't

817
00:50:43,170 --> 00:50:49,920
have a<font color="#CCCCCC"> built-in math process so you can</font>

818
00:50:46,050 --> 00:51:00,330
<font color="#E5E5E5">find that coprocessor to work on your</font>

819
00:50:49,920 --> 00:51:02,730
386 chip but that's not so much again

820
00:51:00,330 --> 00:51:07,020
understanding this stuff doesn't really

821
00:51:02,730 --> 00:51:11,240
<font color="#E5E5E5">require you they have all that</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so as</font>

822
00:51:07,020 --> 00:51:14,820
far as the<font color="#E5E5E5"> bugging goes you can step</font>

823
00:51:11,240 --> 00:51:17,189
<font color="#CCCCCC">into things</font><font color="#E5E5E5"> this means if I can</font><font color="#CCCCCC"> call a</font>

824
00:51:14,820 --> 00:51:19,560
function<font color="#CCCCCC"> I'll step inside of it I can</font>

825
00:51:17,190 --> 00:51:25,380
step over things and<font color="#E5E5E5"> there's also some</font>

826
00:51:19,560 --> 00:51:29,790
shortcuts<font color="#E5E5E5"> f7 so here I am</font><font color="#CCCCCC"> in a bunch of</font>

827
00:51:25,380 --> 00:51:33,780
library code basically you'll notice it

828
00:51:29,790 --> 00:51:37,500
says<font color="#CCCCCC"> that I'm in the module in DLL</font><font color="#E5E5E5"> I'm</font>

829
00:51:33,780 --> 00:51:54,630
not actually<font color="#CCCCCC"> to my code yet</font><font color="#E5E5E5"> I'll just</font>

830
00:51:37,500 --> 00:52:02,100
step forward this laptop has one of

831
00:51:54,630 --> 00:52:07,650
those annoying features that requires

832
00:52:02,100 --> 00:52:12,180
media<font color="#E5E5E5"> actually push the function</font><font color="#CCCCCC"> one so</font>

833
00:52:07,650 --> 00:52:16,440
<font color="#E5E5E5">here we are at the start of our actual</font>

834
00:52:12,180 --> 00:52:19,830
code<font color="#E5E5E5"> and you notice the address</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> 0</font><font color="#CCCCCC"> 1</font>

835
00:52:16,440 --> 00:52:24,540
<font color="#CCCCCC">for e</font><font color="#E5E5E5"> 0 that was what was stored</font>

836
00:52:19,830 --> 00:52:27,569
previously in one of my registers in the

837
00:52:24,540 --> 00:52:28,050
<font color="#E5E5E5">EA or edge astir</font><font color="#CCCCCC"> and now it's come to</font>

838
00:52:27,570 --> 00:52:32,400
this

839
00:52:28,050 --> 00:52:35,580
so this<font color="#E5E5E5"> is my code and there's going to</font>

840
00:52:32,400 --> 00:52:41,790
be a certain<font color="#CCCCCC"> amount of preambles in this</font>

841
00:52:35,580 --> 00:52:44,450
code and<font color="#E5E5E5"> that's what's here and</font><font color="#CCCCCC"> then I</font>

842
00:52:41,790 --> 00:52:47,720
have<font color="#CCCCCC"> my functions</font>

843
00:52:44,450 --> 00:52:51,390
notice that my functions have been<font color="#E5E5E5"> rude</font>

844
00:52:47,720 --> 00:52:54,419
<font color="#E5E5E5">see these little brackets or whatever</font>

845
00:52:51,390 --> 00:52:56,100
you want<font color="#CCCCCC"> to call these here's my</font>

846
00:52:54,420 --> 00:53:01,340
function function how do I know that

847
00:52:56,100 --> 00:53:03,810
<font color="#CCCCCC">it's function function look at the color</font>

848
00:53:01,340 --> 00:53:07,410
<font color="#CCCCCC">here I have a pointer to conjunction</font>

849
00:53:03,810 --> 00:53:10,790
function that<font color="#E5E5E5"> is local variable</font><font color="#CCCCCC"> we'll</font>

850
00:53:07,410 --> 00:53:10,790
come<font color="#E5E5E5"> back to this little</font><font color="#CCCCCC"> day</font>

851
00:53:12,070 --> 00:53:24,400
here's my<font color="#E5E5E5"> main so it has some preamble</font>

852
00:53:19,000 --> 00:53:25,960
code and then I move some<font color="#E5E5E5"> stuff around</font>

853
00:53:24,400 --> 00:53:31,510
and<font color="#E5E5E5"> then I'm</font><font color="#CCCCCC"> going to call my other</font>

854
00:53:25,960 --> 00:53:45,400
<font color="#CCCCCC">function so let me go ahead and just</font>

855
00:53:31,510 --> 00:53:50,680
step here I'm moving some things and now

856
00:53:45,400 --> 00:54:13,570
I'm getting<font color="#CCCCCC"> ready</font><font color="#E5E5E5"> to call</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> zero one</font>

857
00:53:50,680 --> 00:54:27,370
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> zero one</font><font color="#CCCCCC"> zero</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> now I'm</font><font color="#E5E5E5"> going to</font>

858
00:54:13,570 --> 00:54:30,190
add C or<font color="#CCCCCC"> twelve and I'm just</font><font color="#E5E5E5"> gonna go</font>

859
00:54:27,370 --> 00:54:33,520
ahead and<font color="#CCCCCC"> just run</font><font color="#E5E5E5"> because I</font><font color="#CCCCCC"> already</font>

860
00:54:30,190 --> 00:54:40,450
<font color="#E5E5E5">have some</font><font color="#CCCCCC"> breakpoint</font><font color="#E5E5E5"> and set for sake of</font>

861
00:54:33,520 --> 00:54:43,960
<font color="#E5E5E5">time and</font><font color="#CCCCCC"> now I'm here at the start</font><font color="#E5E5E5"> of my</font>

862
00:54:40,450 --> 00:54:46,270
main function<font color="#E5E5E5"> so there's got always be</font>

863
00:54:43,960 --> 00:54:53,650
some preamble code<font color="#E5E5E5"> it's not terribly</font>

864
00:54:46,270 --> 00:54:54,640
interesting which is<font color="#E5E5E5"> why what's</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> gonna</font>

865
00:54:53,650 --> 00:54:58,590
do first

866
00:54:54,640 --> 00:55:02,819
it's gonna save EBP say please push that

867
00:54:58,590 --> 00:55:06,810
<font color="#E5E5E5">onto the stack so over here's my stack</font>

868
00:55:02,820 --> 00:55:10,960
<font color="#E5E5E5">and notice it says</font><font color="#CCCCCC"> return</font><font color="#E5E5E5"> to this place</font>

869
00:55:06,810 --> 00:55:13,270
from this place<font color="#CCCCCC"> so many doc and return</font>

870
00:55:10,960 --> 00:55:26,120
address

871
00:55:13,270 --> 00:55:39,740
go ahead and step now I have<font color="#CCCCCC"> EBP come on</font>

872
00:55:26,120 --> 00:55:49,150
<font color="#CCCCCC">stop it step 2 - 8 FF 8 8 8 8</font><font color="#E5E5E5"> a little</font>

873
00:55:39,740 --> 00:55:49,149
bit<font color="#E5E5E5"> hey here's my frame I'm saving that</font>

874
00:55:52,720 --> 00:56:03,890
I'm<font color="#E5E5E5"> rounding</font><font color="#CCCCCC"> ESP and then I'm</font><font color="#E5E5E5"> gonna</font>

875
00:55:57,830 --> 00:56:06,830
subtract X<font color="#CCCCCC"> 2</font><font color="#E5E5E5"> 0 or 32 from ESP so</font>

876
00:56:03,890 --> 00:56:09,609
remember what<font color="#E5E5E5"> we said stack grows</font><font color="#CCCCCC"> down</font>

877
00:56:06,830 --> 00:56:15,590
<font color="#CCCCCC">learning them wrong so when I subtract</font>

878
00:56:09,610 --> 00:56:21,860
32 I'm making space for 32 bytes<font color="#CCCCCC"> of</font>

879
00:56:15,590 --> 00:56:26,090
stuff so now I've<font color="#CCCCCC"> made my space I'm</font>

880
00:56:21,860 --> 00:56:30,350
<font color="#E5E5E5">going to call this function buffer</font>

881
00:56:26,090 --> 00:56:33,850
overflow blah blah blah<font color="#CCCCCC"> and</font><font color="#E5E5E5"> then I'm</font>

882
00:56:30,350 --> 00:56:33,850
going<font color="#E5E5E5"> to set</font><font color="#CCCCCC"> up these variables</font>

883
00:56:34,240 --> 00:56:38,770
I'm just going to<font color="#E5E5E5"> step</font><font color="#CCCCCC"> over this call</font>

884
00:56:39,460 --> 00:56:44,540
you might say<font color="#E5E5E5"> why just step over</font><font color="#CCCCCC"> now</font>

885
00:56:41,780 --> 00:56:48,320
<font color="#E5E5E5">that's more preamble table</font><font color="#CCCCCC"> its board's</font>

886
00:56:44,540 --> 00:56:50,600
<font color="#E5E5E5">boilerplate code that I didn't what is</font>

887
00:56:48,320 --> 00:56:58,520
that going to<font color="#E5E5E5"> do that's gonna set up</font><font color="#CCCCCC"> my</font>

888
00:56:50,600 --> 00:57:07,279
arm<font color="#E5E5E5"> be</font><font color="#CCCCCC"> and artsy so now if</font><font color="#E5E5E5"> I step over</font>

889
00:56:58,520 --> 00:57:11,280
<font color="#E5E5E5">this it has moved</font><font color="#CCCCCC"> the address where I</font>

890
00:57:07,280 --> 00:57:18,630
can find main function

891
00:57:11,280 --> 00:57:22,480
<font color="#CCCCCC">- this place</font><font color="#E5E5E5"> on the staff ESP</font><font color="#CCCCCC"> +1 seat</font>

892
00:57:18,630 --> 00:57:25,330
so notice here on my stack what does it

893
00:57:22,480 --> 00:57:29,620
say<font color="#CCCCCC"> right here</font><font color="#E5E5E5"> here's the address</font>

894
00:57:25,330 --> 00:57:35,770
<font color="#CCCCCC">4 0 4 0 1 5 and that</font><font color="#E5E5E5"> address points to</font>

895
00:57:29,620 --> 00:57:39,819
an<font color="#E5E5E5"> ASCII straight main column now I want</font>

896
00:57:35,770 --> 00:57:44,800
<font color="#CCCCCC">to</font><font color="#E5E5E5"> move by other local variable that</font>

897
00:57:39,820 --> 00:57:50,800
contains the value<font color="#CCCCCC"> 1 1 2 2 2 3 3 4 4 2</font>

898
00:57:44,800 --> 00:57:55,960
es p +<font color="#CCCCCC"> 1 8</font><font color="#E5E5E5"> let's do that see what</font>

899
00:57:50,800 --> 00:58:03,010
happens<font color="#E5E5E5"> now I have this value one 1 two</font>

900
00:57:55,960 --> 00:58:07,870
2 three 3 four 4 right above<font color="#E5E5E5"> it a couple</font>

901
00:58:03,010 --> 00:58:10,900
of important<font color="#CCCCCC"> things Intel systems are</font>

902
00:58:07,870 --> 00:58:16,029
little and you guys<font color="#E5E5E5"> remember what that</font>

903
00:58:10,900 --> 00:58:21,280
<font color="#E5E5E5">means if you have a multi byte value for</font>

904
00:58:16,030 --> 00:58:24,670
these significant<font color="#E5E5E5"> byte comes first now</font>

905
00:58:21,280 --> 00:58:27,280
this is being displayed as one 1 two 2

906
00:58:24,670 --> 00:58:30,940
three 3 four 4 because of<font color="#E5E5E5"> the way I have</font>

907
00:58:27,280 --> 00:58:34,600
this set<font color="#E5E5E5"> I have the set to display</font><font color="#CCCCCC"> four</font>

908
00:58:30,940 --> 00:58:37,840
byte chunks<font color="#E5E5E5"> if I looked in the actual</font>

909
00:58:34,600 --> 00:58:40,720
<font color="#CCCCCC">memory they would show up is 4 4 3 3 2 2</font>

910
00:58:37,840 --> 00:58:46,960
<font color="#E5E5E5">1 1 so keep that in mind</font>

911
00:58:40,720 --> 00:58:56,009
that'll be relevant later<font color="#CCCCCC"> so now I'm</font>

912
00:58:46,960 --> 00:58:59,730
going<font color="#E5E5E5"> to move to Yeti</font><font color="#CCCCCC"> axe this location</font>

913
00:58:56,010 --> 00:59:04,350
5 5 0<font color="#E5E5E5"> 5 7 8</font>

914
00:58:59,730 --> 00:59:04,350
I'm going to add 4 to it

915
00:59:06,860 --> 00:59:24,050
and then I'm going to<font color="#CCCCCC"> move this value so</font>

916
00:59:17,660 --> 00:59:29,690
<font color="#CCCCCC">now he ax</font><font color="#E5E5E5"> contains zero I'm going</font><font color="#CCCCCC"> to</font>

917
00:59:24,050 --> 00:59:36,860
call function function but before I do

918
00:59:29,690 --> 00:59:38,360
that I'm gonna<font color="#E5E5E5"> have a problem so notice</font>

919
00:59:36,860 --> 00:59:43,340
it's going<font color="#E5E5E5"> to call the four zero</font><font color="#CCCCCC"> one</font>

920
00:59:38,360 --> 00:59:47,030
five zero zero here's my function

921
00:59:43,340 --> 00:59:47,990
function what's the problem I'm<font color="#E5E5E5"> gonna</font>

922
00:59:47,030 --> 00:59:54,440
run into<font color="#CCCCCC"> here</font>

923
00:59:47,990 --> 00:59:56,950
does anybody know let<font color="#E5E5E5"> me just step ahead</font>

924
00:59:54,440 --> 00:59:56,950
a little<font color="#E5E5E5"> bit</font>

925
00:59:59,830 --> 01:00:04,580
[Music]

926
01:00:01,250 --> 01:00:08,900
access violation<font color="#E5E5E5"> when reading this</font>

927
01:00:04,580 --> 01:00:15,340
address<font color="#E5E5E5"> what am i passing to function</font>

928
01:00:08,900 --> 01:00:17,960
punch it<font color="#CCCCCC"> RB 1 there is no R</font><font color="#E5E5E5"> to be</font><font color="#CCCCCC"> 1 I</font>

929
01:00:15,340 --> 01:00:26,060
didn't pass anything to this program<font color="#E5E5E5"> hit</font>

930
01:00:17,960 --> 01:00:28,640
up<font color="#CCCCCC"> I just said and that's</font><font color="#E5E5E5"> a problem</font><font color="#CCCCCC"> so</font>

931
01:00:26,060 --> 01:00:34,009
here's what I need<font color="#E5E5E5"> to do to fix that</font>

932
01:00:28,640 --> 01:00:37,069
I go to debug say arguments let me give

933
01:00:34,010 --> 01:00:42,950
it some arguments<font color="#CCCCCC"> I'll just give it an</font>

934
01:00:37,070 --> 01:00:47,780
argument<font color="#CCCCCC"> right now 1 2 3 nah</font><font color="#E5E5E5"> I had 9</font>

935
01:00:42,950 --> 01:00:53,060
characters of space<font color="#CCCCCC"> plus</font><font color="#E5E5E5"> 1 byte for the</font>

936
01:00:47,780 --> 01:00:55,010
normal at the end and I'll rerun it he's

937
01:00:53,060 --> 01:01:00,140
gonna tell me<font color="#CCCCCC"> hey</font><font color="#E5E5E5"> you have to restart</font>

938
01:00:55,010 --> 01:01:02,060
this<font color="#E5E5E5"> take effect but restart so that</font>

939
01:01:00,140 --> 01:01:03,859
first example<font color="#E5E5E5"> is just a program sort of</font>

940
01:01:02,060 --> 01:01:05,810
crashing that's<font color="#E5E5E5"> how the debugger sort of</font>

941
01:01:03,860 --> 01:01:08,270
showed you that right I<font color="#E5E5E5"> just want to</font>

942
01:01:05,810 --> 01:01:11,990
kind of walk<font color="#CCCCCC"> you through</font><font color="#E5E5E5"> how</font><font color="#CCCCCC"> do you do</font>

943
01:01:08,270 --> 01:01:14,870
that<font color="#CCCCCC"> and</font><font color="#E5E5E5"> we set a breakpoint</font><font color="#CCCCCC"> so now I</font>

944
01:01:11,990 --> 01:01:17,709
can just<font color="#CCCCCC"> say f9</font>

945
01:01:14,870 --> 01:01:22,910
and I'm gonna go<font color="#E5E5E5"> right to</font><font color="#CCCCCC"> my actual car</font>

946
01:01:17,710 --> 01:01:26,690
<font color="#E5E5E5">and this time around</font><font color="#CCCCCC"> did Webster</font><font color="#E5E5E5"> so go</font>

947
01:01:22,910 --> 01:01:34,009
through<font color="#E5E5E5"> this</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> quicker so I</font><font color="#CCCCCC"> Here</font>

948
01:01:26,690 --> 01:01:39,140
I am in<font color="#E5E5E5"> my main function</font><font color="#CCCCCC"> and you'll see</font>

949
01:01:34,010 --> 01:01:43,220
this<font color="#E5E5E5"> X or EI EI r</font><font color="#CCCCCC"> en ATX have the</font>

950
01:01:39,140 --> 01:01:43,759
external Aircraft Association would it

951
01:01:43,220 --> 01:01:46,399
sell

952
01:01:43,760 --> 01:01:52,850
that's a nice quick way<font color="#CCCCCC"> to make</font>

953
01:01:46,400 --> 01:02:01,280
<font color="#E5E5E5">something 0x to work with itself</font><font color="#CCCCCC"> and now</font>

954
01:01:52,850 --> 01:02:07,040
we're going to move<font color="#CCCCCC"> x11</font><font color="#E5E5E5"> to e CX ESP to</font>

955
01:02:01,280 --> 01:02:13,120
EBP<font color="#CCCCCC"> push some</font><font color="#E5E5E5"> things in the stack load</font>

956
01:02:07,040 --> 01:02:19,550
<font color="#E5E5E5">and effective address or this value</font><font color="#CCCCCC"> into</font>

957
01:02:13,120 --> 01:02:22,490
<font color="#CCCCCC">X so all of this</font><font color="#E5E5E5"> stuff here</font><font color="#CCCCCC"> that you're</font>

958
01:02:19,550 --> 01:02:30,940
thinking<font color="#E5E5E5"> what the heck does this do this</font>

959
01:02:22,490 --> 01:02:30,939
<font color="#E5E5E5">is setting up by</font><font color="#CCCCCC"> army</font>

960
01:02:44,670 --> 01:02:52,559
now same thing<font color="#CCCCCC"> I made 32 bytes of space</font>

961
01:02:53,849 --> 01:03:01,959
here<font color="#E5E5E5"> you can see main function just show</font>

962
01:02:57,400 --> 01:03:05,259
it up step again<font color="#E5E5E5"> and I mean you see my</font>

963
01:03:01,959 --> 01:03:12,868
value<font color="#E5E5E5"> one 1 two 2 three 3 four 4 showing</font>

964
01:03:05,259 --> 01:03:19,539
up<font color="#E5E5E5"> that</font><font color="#CCCCCC"> one I'm going</font><font color="#E5E5E5"> to add</font><font color="#CCCCCC"> 4 to be a X</font>

965
01:03:12,869 --> 01:03:22,449
and I'm going<font color="#CCCCCC"> to move into EAX a pointer</font>

966
01:03:19,539 --> 01:03:26,109
<font color="#E5E5E5">this pointer points to what this ASCII</font>

967
01:03:22,449 --> 01:03:31,660
<font color="#E5E5E5">strength</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> 2</font><font color="#CCCCCC"> 3</font><font color="#E5E5E5"> 4 5 6</font><font color="#CCCCCC"> 7 8 not</font><font color="#E5E5E5"> that's my</font>

968
01:03:26,109 --> 01:03:40,239
<font color="#CCCCCC">rz1</font><font color="#E5E5E5"> now I'm going to call buffer</font>

969
01:03:31,660 --> 01:03:46,239
overflow of<font color="#E5E5E5"> the function function at 4</font><font color="#CCCCCC"> 0</font>

970
01:03:40,239 --> 01:03:53,349
<font color="#CCCCCC">1</font><font color="#E5E5E5"> 5 0 that was its address step we step</font>

971
01:03:46,239 --> 01:03:58,359
into this so notice my stack<font color="#CCCCCC"> I have just</font>

972
01:03:53,349 --> 01:04:07,539
one function<font color="#CCCCCC"> argument here it is top of</font>

973
01:03:58,359 --> 01:04:17,019
<font color="#CCCCCC">the stack</font><font color="#E5E5E5"> what is after that address let</font>

974
01:04:07,539 --> 01:04:19,059
me call<font color="#E5E5E5"> it into this now I'm in function</font>

975
01:04:17,019 --> 01:04:23,019
function<font color="#CCCCCC"> what's the</font><font color="#E5E5E5"> first thing it's</font>

976
01:04:19,059 --> 01:04:30,910
<font color="#CCCCCC">going to do save EBP</font><font color="#E5E5E5"> push it on the</font>

977
01:04:23,019 --> 01:04:35,229
stack<font color="#CCCCCC"> pics</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> now I see this value to</font>

978
01:04:30,910 --> 01:04:40,538
<font color="#E5E5E5">8 f ee c8 is on the step and if I look</font>

979
01:04:35,229 --> 01:04:42,839
down here<font color="#E5E5E5"> I see here's another frame on</font>

980
01:04:40,539 --> 01:04:42,839
myself

981
01:04:43,770 --> 01:04:57,660
I want to subtract x-38 I'm saving a<font color="#E5E5E5"> lot</font>

982
01:04:52,800 --> 01:05:13,110
<font color="#E5E5E5">of space on</font><font color="#CCCCCC"> my stack</font><font color="#E5E5E5"> and now I'm going</font>

983
01:04:57,660 --> 01:05:19,980
<font color="#E5E5E5">to move conjunction function here it's</font>

984
01:05:13,110 --> 01:05:23,880
the EBP - see where's my conjunction

985
01:05:19,980 --> 01:05:30,020
function<font color="#E5E5E5"> there it is right the model</font>

986
01:05:23,880 --> 01:05:30,020
I'm<font color="#E5E5E5"> in display now I'm going to move</font>

987
01:05:30,710 --> 01:05:42,110
<font color="#CCCCCC">dead beef</font>

988
01:05:33,200 --> 01:05:42,109
there<font color="#CCCCCC"> is</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> beef what comes next</font>

989
01:05:42,260 --> 01:05:54,000
I'm moving to<font color="#E5E5E5"> Dax</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> pointer</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> one two</font>

990
01:05:47,010 --> 01:05:59,270
<font color="#CCCCCC">three four five six seventy nine I step</font>

991
01:05:54,000 --> 01:06:04,040
again<font color="#E5E5E5"> and now I'm going to those values</font>

992
01:05:59,270 --> 01:06:08,900
<font color="#E5E5E5">I'm gonna load the effective address of</font>

993
01:06:04,040 --> 01:06:08,900
this that's what led a means

994
01:06:12,740 --> 01:06:21,950
all right now move Dax<font color="#E5E5E5"> that has</font><font color="#CCCCCC"> this</font>

995
01:06:17,340 --> 01:06:21,950
value<font color="#CCCCCC"> - 8 f e7 e</font>

996
01:06:31,130 --> 01:06:37,460
here and now I'm going<font color="#E5E5E5"> to call</font><font color="#CCCCCC"> stir</font>

997
01:06:35,760 --> 01:06:45,170
copier

998
01:06:37,460 --> 01:06:49,380
<font color="#E5E5E5">okay so stir copy has as its arguments</font>

999
01:06:45,170 --> 01:06:53,190
1st argument<font color="#E5E5E5"> destination second argument</font>

1000
01:06:49,380 --> 01:07:00,260
<font color="#E5E5E5">source remember hollows are pushed onto</font>

1001
01:06:53,190 --> 01:07:03,660
<font color="#E5E5E5">the stack</font><font color="#CCCCCC"> and notice that my mic bugger</font>

1002
01:07:00,260 --> 01:07:06,559
<font color="#E5E5E5">is smart</font><font color="#CCCCCC"> enough to know</font><font color="#E5E5E5"> that's the case</font>

1003
01:07:03,660 --> 01:07:11,368
<font color="#CCCCCC">it says</font><font color="#E5E5E5"> oh the source of this</font>

1004
01:07:06,559 --> 01:07:14,849
<font color="#E5E5E5">destination is this address to AFP 72 8f</font>

1005
01:07:11,369 --> 01:07:20,250
<font color="#E5E5E5">b 7e which is kind of midway between</font>

1006
01:07:14,849 --> 01:07:22,020
<font color="#CCCCCC">this so</font><font color="#E5E5E5"> I'm gonna jump</font><font color="#CCCCCC"> over this unless</font>

1007
01:07:20,250 --> 01:07:25,680
you really want<font color="#E5E5E5"> me</font><font color="#CCCCCC"> to trace</font><font color="#E5E5E5"> through stir</font>

1008
01:07:22,020 --> 01:07:32,400
copy it's not<font color="#E5E5E5"> like we'll just kind of</font>

1009
01:07:25,680 --> 01:07:40,828
skip over now what<font color="#E5E5E5"> do I see here</font>

1010
01:07:32,400 --> 01:07:43,559
I see the<font color="#CCCCCC"> value that is stored as hex or</font>

1011
01:07:40,829 --> 01:07:44,579
the ASCII<font color="#E5E5E5"> one two three four five six</font>

1012
01:07:43,559 --> 01:07:46,950
<font color="#E5E5E5">seven</font><font color="#CCCCCC"> eight</font>

1013
01:07:44,579 --> 01:07:49,410
now this looks a little<font color="#CCCCCC"> weird</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> a</font>

1014
01:07:46,950 --> 01:07:53,578
couple of reasons number<font color="#E5E5E5"> one it's little</font>

1015
01:07:49,410 --> 01:07:58,279
ended so remember only half of<font color="#E5E5E5"> this</font>

1016
01:07:53,579 --> 01:08:02,869
entry is relevant here<font color="#CCCCCC"> and it's the</font>

1017
01:07:58,280 --> 01:08:06,720
upper two bikes because they come late

1018
01:08:02,869 --> 01:08:16,279
so it says<font color="#E5E5E5"> 3-1</font><font color="#CCCCCC"> that's the ASCII code</font><font color="#E5E5E5"> for</font>

1019
01:08:06,720 --> 01:08:20,969
1 3 2 3 3<font color="#CCCCCC"> 3 4 3 5</font><font color="#E5E5E5"> 3 6 3 7</font><font color="#CCCCCC"> 3 8 3.0 0</font>

1020
01:08:16,279 --> 01:08:25,440
<font color="#E5E5E5">there is my terminator my null</font>

1021
01:08:20,969 --> 01:08:26,750
terminator it's all good<font color="#CCCCCC"> everything's</font>

1022
01:08:25,439 --> 01:08:30,419
<font color="#E5E5E5">great</font>

1023
01:08:26,750 --> 01:08:34,670
why is everything great because I didn't

1024
01:08:30,420 --> 01:08:37,859
overflow it did up i exactly filled it I

1025
01:08:34,670 --> 01:08:39,929
didn't go further than I need<font color="#E5E5E5"> me to go</font>

1026
01:08:37,859 --> 01:08:42,690
<font color="#E5E5E5">at all</font>

1027
01:08:39,929 --> 01:08:44,850
so now if I just<font color="#E5E5E5"> continue what am I</font>

1028
01:08:42,689 --> 01:08:48,028
<font color="#CCCCCC">gonna do</font><font color="#E5E5E5"> I'm gonna move</font>

1029
01:08:44,850 --> 01:08:50,190
what do yes that's my return value

1030
01:08:48,029 --> 01:08:53,219
remember we said<font color="#CCCCCC"> determine</font><font color="#E5E5E5"> one for this</font>

1031
01:08:50,189 --> 01:08:59,210
function<font color="#CCCCCC"> and now I'm gonna call leave</font>

1032
01:08:53,219 --> 01:09:01,469
what does leave to leave<font color="#E5E5E5"> this is my step</font>

1033
01:08:59,210 --> 01:09:03,540
yes sir if<font color="#E5E5E5"> you</font><font color="#CCCCCC"> just flip the</font><font color="#E5E5E5"> one two</font>

1034
01:09:01,469 --> 01:09:06,420
<font color="#CCCCCC">three what it still pick up three blocks</font>

1035
01:09:03,540 --> 01:09:07,560
<font color="#E5E5E5">and just Pat</font><font color="#CCCCCC"> the zeros like it's not</font><font color="#E5E5E5"> a</font>

1036
01:09:06,420 --> 01:09:09,179
<font color="#CCCCCC">fast</font><font color="#E5E5E5"> thing one two three four five six</font>

1037
01:09:07,560 --> 01:09:12,000
<font color="#E5E5E5">seven</font><font color="#CCCCCC"> eight</font><font color="#E5E5E5"> nine</font><font color="#CCCCCC"> you just passed us I</font>

1038
01:09:09,179 --> 01:09:15,210
<font color="#E5E5E5">believe it will</font><font color="#CCCCCC"> not fill</font><font color="#E5E5E5"> past the</font>

1039
01:09:12,000 --> 01:09:17,908
<font color="#CCCCCC">Terminator</font><font color="#E5E5E5"> okay and that was probably</font>

1040
01:09:15,210 --> 01:09:20,310
dependent on the exact version<font color="#CCCCCC"> of stir</font>

1041
01:09:17,908 --> 01:09:23,219
copy in the library<font color="#CCCCCC"> likes being run but</font>

1042
01:09:20,310 --> 01:09:26,549
I think the standard Microsoft<font color="#E5E5E5"> Visual C</font>

1043
01:09:23,219 --> 01:09:28,049
runtime library is not<font color="#CCCCCC"> good I kind of</font>

1044
01:09:26,549 --> 01:09:30,408
had it<font color="#E5E5E5"> out</font><font color="#CCCCCC"> for that loan I don't believe</font>

1045
01:09:28,049 --> 01:09:30,408
<font color="#E5E5E5">okay</font>

1046
01:09:30,529 --> 01:09:37,710
well let's think<font color="#CCCCCC"> about</font><font color="#E5E5E5"> this one thing if</font>

1047
01:09:35,670 --> 01:09:42,060
you did this light<font color="#E5E5E5"> you should use stir</font>

1048
01:09:37,710 --> 01:09:45,120
<font color="#CCCCCC">and copy</font><font color="#E5E5E5"> but how does</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> know how much</font>

1049
01:09:42,060 --> 01:09:49,799
<font color="#E5E5E5">space is it doesn't know so I guess it</font>

1050
01:09:45,120 --> 01:09:53,189
would we<font color="#E5E5E5"> would never do that I know it's</font>

1051
01:09:49,799 --> 01:09:56,730
still<font color="#E5E5E5"> early this is like day two they do</font>

1052
01:09:53,189 --> 01:09:58,500
in a conference you're always<font color="#CCCCCC"> wrong it</font>

1053
01:09:56,730 --> 01:09:59,900
<font color="#E5E5E5">should be obvious but it's day two in</font>

1054
01:09:58,500 --> 01:10:02,390
common

1055
01:09:59,900 --> 01:10:08,570
I'm sure day three is not any better

1056
01:10:02,390 --> 01:10:11,699
<font color="#E5E5E5">time you get to tomorrow we're</font><font color="#CCCCCC"> in life</font>

1057
01:10:08,570 --> 01:10:14,460
okay so watch what<font color="#E5E5E5"> happens here</font><font color="#CCCCCC"> right</font>

1058
01:10:11,699 --> 01:10:18,210
now this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> at two AFE</font><font color="#E5E5E5"> six zero I'll</font>

1059
01:10:14,460 --> 01:10:24,449
call the<font color="#E5E5E5"> eve yeah I notice</font><font color="#CCCCCC"> that's</font>

1060
01:10:18,210 --> 01:10:31,080
changed<font color="#CCCCCC"> I can go back here</font><font color="#E5E5E5"> this is still</font>

1061
01:10:24,449 --> 01:10:35,879
<font color="#E5E5E5">here right all my values</font><font color="#CCCCCC"> are still there</font>

1062
01:10:31,080 --> 01:10:39,290
here was my<font color="#E5E5E5"> destination which now points</font>

1063
01:10:35,880 --> 01:10:44,640
<font color="#CCCCCC">to the string where's my source</font><font color="#E5E5E5"> my</font>

1064
01:10:39,290 --> 01:10:47,310
<font color="#CCCCCC">return address</font><font color="#E5E5E5"> is etc and now when I</font>

1065
01:10:44,640 --> 01:10:49,489
call return<font color="#CCCCCC"> it's gonna say all right</font>

1066
01:10:47,310 --> 01:10:57,770
where am I going back to

1067
01:10:49,489 --> 01:11:04,849
<font color="#E5E5E5">I'm gonna return back to here so I'm</font>

1068
01:10:57,770 --> 01:11:16,190
<font color="#E5E5E5">back</font><font color="#CCCCCC"> to my main function</font><font color="#E5E5E5"> now okay so I'm</font>

1069
01:11:04,850 --> 01:11:19,730
<font color="#CCCCCC">back to my main</font><font color="#E5E5E5"> and I want to step I</font>

1070
01:11:16,190 --> 01:11:21,889
move<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> that's my return value again I</font>

1071
01:11:19,730 --> 01:11:26,030
<font color="#E5E5E5">call leave and I call return on Hamish</font>

1072
01:11:21,890 --> 01:11:27,820
<font color="#E5E5E5">exits I'm just</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> hit go and it says</font>

1073
01:11:26,030 --> 01:11:32,719
process terminated exit code<font color="#E5E5E5"> error</font>

1074
01:11:27,820 --> 01:11:33,910
<font color="#E5E5E5">there's normal trepidation you guys</font>

1075
01:11:32,719 --> 01:11:38,390
still with me so far

1076
01:11:33,910 --> 01:11:40,210
so this is the regular<font color="#CCCCCC"> ok ran it ran it</font>

1077
01:11:38,390 --> 01:11:42,230
<font color="#CCCCCC">is</font><font color="#E5E5E5"> fun</font>

1078
01:11:40,210 --> 01:11:46,430
one of the things<font color="#E5E5E5"> I</font><font color="#CCCCCC"> said we're gonna</font>

1079
01:11:42,230 --> 01:11:49,580
<font color="#E5E5E5">have to do is we have to</font><font color="#CCCCCC"> figure out how</font>

1080
01:11:46,430 --> 01:11:54,890
far do I need to go get to that return

1081
01:11:49,580 --> 01:11:56,570
address<font color="#E5E5E5"> let's</font><font color="#CCCCCC"> step number one</font><font color="#E5E5E5"> figuring</font>

1082
01:11:54,890 --> 01:11:58,850
out that<font color="#CCCCCC"> an offset</font><font color="#E5E5E5"> there are a couple</font>

1083
01:11:56,570 --> 01:12:02,509
ways<font color="#CCCCCC"> that I can do</font><font color="#E5E5E5"> this I can</font><font color="#CCCCCC"> actually</font>

1084
01:11:58,850 --> 01:12:04,820
try to calculate<font color="#E5E5E5"> it sometimes it's</font>

1085
01:12:02,510 --> 01:12:05,330
easiest just to run<font color="#E5E5E5"> it and see</font><font color="#CCCCCC"> what</font>

1086
01:12:04,820 --> 01:12:08,599
happens

1087
01:12:05,330 --> 01:12:11,210
<font color="#E5E5E5">now sometimes depending on what you pass</font>

1088
01:12:08,600 --> 01:12:15,290
into<font color="#CCCCCC"> a program it will change the</font>

1089
01:12:11,210 --> 01:12:17,150
location<font color="#E5E5E5"> of that awesome so it's one of</font>

1090
01:12:15,290 --> 01:12:20,830
<font color="#CCCCCC">those weird things</font><font color="#E5E5E5"> that you just</font><font color="#CCCCCC"> have to</font>

1091
01:12:17,150 --> 01:12:25,540
<font color="#E5E5E5">play</font><font color="#CCCCCC"> with this</font><font color="#E5E5E5"> is a very simple program</font>

1092
01:12:20,830 --> 01:12:34,540
<font color="#E5E5E5">so it's not really going to</font><font color="#CCCCCC"> happen here</font>

1093
01:12:25,540 --> 01:12:42,880
let's do this<font color="#CCCCCC"> okay so I have my</font><font color="#E5E5E5"> stuff</font>

1094
01:12:34,540 --> 01:12:42,880
and I will<font color="#E5E5E5"> manually give it</font>

1095
01:12:46,250 --> 01:12:52,080
you can see that you know if I<font color="#E5E5E5"> just</font>

1096
01:12:49,590 --> 01:12:52,830
<font color="#E5E5E5">wanted to crash it maybe that's a good</font>

1097
01:12:52,080 --> 01:12:54,990
<font color="#E5E5E5">start</font>

1098
01:12:52,830 --> 01:12:57,600
let's say that you<font color="#E5E5E5"> haven't even gotten</font>

1099
01:12:54,990 --> 01:13:00,929
<font color="#CCCCCC">to this stage</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> those pleasure</font>

1100
01:12:57,600 --> 01:13:02,160
<font color="#E5E5E5">and there's a lot of</font><font color="#CCCCCC"> clusters out there</font>

1101
01:13:00,930 --> 01:13:05,250
or<font color="#CCCCCC"> you could just write</font><font color="#E5E5E5"> a Python script</font>

1102
01:13:02,160 --> 01:13:07,170
<font color="#E5E5E5">this is usually what I do</font><font color="#CCCCCC"> that's right a</font>

1103
01:13:05,250 --> 01:13:14,160
little<font color="#E5E5E5"> Python script and say</font><font color="#CCCCCC"> alright run</font>

1104
01:13:07,170 --> 01:13:15,720
<font color="#E5E5E5">this see if I can get it to class so</font>

1105
01:13:14,160 --> 01:13:17,400
just<font color="#CCCCCC"> so we can say you've done</font><font color="#E5E5E5"> it once</font>

1106
01:13:15,720 --> 01:13:18,890
<font color="#E5E5E5">I'm gonna give it a whole</font><font color="#CCCCCC"> bunch</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> a's</font>

1107
01:13:17,400 --> 01:13:27,599
[Music]

1108
01:13:18,890 --> 01:13:33,000
more than enough again so you have to

1109
01:13:27,600 --> 01:13:44,390
restart<font color="#E5E5E5"> that program exit in anyway I'm</font>

1110
01:13:33,000 --> 01:13:47,340
just<font color="#E5E5E5"> gonna say run it and notice it said</font>

1111
01:13:44,390 --> 01:13:53,000
<font color="#CCCCCC">XS</font><font color="#E5E5E5"> violation when executing for one for</font>

1112
01:13:47,340 --> 01:13:57,570
one<font color="#CCCCCC"> for one for one right that is the</font>

1113
01:13:53,000 --> 01:14:00,890
ASCII value for<font color="#E5E5E5"> a so I would say</font>

1114
01:13:57,570 --> 01:14:04,860
<font color="#E5E5E5">overload so I'm like</font><font color="#CCCCCC"> whew</font><font color="#E5E5E5"> got a flaw</font>

1115
01:14:00,890 --> 01:14:07,730
<font color="#E5E5E5">except what</font><font color="#CCCCCC"> I crashed it and that's easy</font>

1116
01:14:04,860 --> 01:14:10,650
<font color="#CCCCCC">now I can think back to many</font><font color="#E5E5E5"> years ago</font>

1117
01:14:07,730 --> 01:14:13,049
<font color="#E5E5E5">when I first learned about stack buffer</font>

1118
01:14:10,650 --> 01:14:15,960
overflows you notice developer was the

1119
01:14:13,050 --> 01:14:17,790
security<font color="#CCCCCC"> guy</font><font color="#E5E5E5"> and like you can crash my</font>

1120
01:14:15,960 --> 01:14:22,260
program<font color="#CCCCCC"> mmm</font>

1121
01:14:17,790 --> 01:14:24,810
so what you know<font color="#CCCCCC"> very naive back then</font><font color="#E5E5E5"> I</font>

1122
01:14:22,260 --> 01:14:27,470
didn't<font color="#E5E5E5"> realize you could do a lot but</font>

1123
01:14:24,810 --> 01:14:31,010
there's so what there's a lot<font color="#CCCCCC"> to</font><font color="#E5E5E5"> this so</font>

1124
01:14:27,470 --> 01:14:33,270
there's a lot<font color="#E5E5E5"> of things you can do</font>

1125
01:14:31,010 --> 01:14:35,220
beyond just crashing<font color="#CCCCCC"> the program now</font>

1126
01:14:33,270 --> 01:14:38,210
sometimes<font color="#CCCCCC"> especially we're dealing with</font>

1127
01:14:35,220 --> 01:14:42,440
a modern version<font color="#E5E5E5"> of Windows</font><font color="#CCCCCC"> or Linux</font>

1128
01:14:38,210 --> 01:14:44,970
<font color="#E5E5E5">it's hard to do a lot</font><font color="#CCCCCC"> pass just crash</font>

1129
01:14:42,440 --> 01:14:48,059
<font color="#E5E5E5">sometimes</font><font color="#CCCCCC"> that's enough do it in Doss</font>

1130
01:14:44,970 --> 01:14:53,780
attack so I'm<font color="#E5E5E5"> sorry I can do denial of</font>

1131
01:14:48,060 --> 01:14:59,670
service at least you can do that<font color="#CCCCCC"> okay</font>

1132
01:14:53,780 --> 01:15:09,019
so how can I figure<font color="#E5E5E5"> this out</font><font color="#CCCCCC"> I could do</font>

1133
01:14:59,670 --> 01:15:38,280
this manually<font color="#CCCCCC"> I'll just do this phrase</font>

1134
01:15:09,020 --> 01:15:41,400
for<font color="#E5E5E5"> bees and see if that's</font><font color="#CCCCCC"> enough</font>

1135
01:15:38,280 --> 01:15:47,929
obviously<font color="#E5E5E5"> if some programs you might</font>

1136
01:15:41,400 --> 01:15:47,929
need a couple<font color="#E5E5E5"> thousand characters harder</font>

1137
01:15:51,920 --> 01:15:59,750
so I'm just gonna run<font color="#E5E5E5"> it and</font><font color="#CCCCCC"> see if I</font>

1138
01:15:54,510 --> 01:16:03,930
can get it<font color="#E5E5E5"> okay and it did</font>

1139
01:15:59,750 --> 01:16:11,070
and notice what<font color="#E5E5E5"> it's told me it said</font>

1140
01:16:03,930 --> 01:16:19,290
four nine four nine four eight forty so

1141
01:16:11,070 --> 01:16:25,679
how far along is<font color="#CCCCCC"> that so</font><font color="#E5E5E5"> for nine for</font>

1142
01:16:19,290 --> 01:16:32,250
nine<font color="#CCCCCC"> or a</font><font color="#E5E5E5"> forty now that's not too far</font>

1143
01:16:25,680 --> 01:16:37,230
<font color="#CCCCCC">into it I can see how far I've gone</font>

1144
01:16:32,250 --> 01:16:41,190
<font color="#E5E5E5">right here and I could</font><font color="#CCCCCC"> do a little</font><font color="#E5E5E5"> bit</font>

1145
01:16:37,230 --> 01:16:43,379
<font color="#E5E5E5">of math so since I didn't have to go too</font>

1146
01:16:41,190 --> 01:16:45,809
far<font color="#CCCCCC"> now there's some other folks out</font>

1147
01:16:43,380 --> 01:16:47,850
<font color="#E5E5E5">there and they'll you don't say hello</font>

1148
01:16:45,810 --> 01:16:49,830
<font color="#CCCCCC">you can run the script and you can have</font>

1149
01:16:47,850 --> 01:16:53,130
all these random non repeating numbers

1150
01:16:49,830 --> 01:16:57,480
and you do<font color="#CCCCCC"> all this</font><font color="#E5E5E5"> stuff sometimes this</font>

1151
01:16:53,130 --> 01:16:59,969
<font color="#E5E5E5">is too much work</font><font color="#CCCCCC"> so let's try to</font><font color="#E5E5E5"> make it</font>

1152
01:16:57,480 --> 01:17:03,000
simpler<font color="#CCCCCC"> now here's one thing I will warn</font>

1153
01:16:59,969 --> 01:17:03,540
you<font color="#E5E5E5"> about when you're doing stuff like</font>

1154
01:17:03,000 --> 01:17:06,390
<font color="#E5E5E5">this</font>

1155
01:17:03,540 --> 01:17:08,730
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> doing it on</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> command line</font>

1156
01:17:06,390 --> 01:17:10,980
instead of over the<font color="#CCCCCC"> network you can</font><font color="#E5E5E5"> run</font>

1157
01:17:08,730 --> 01:17:15,509
<font color="#CCCCCC">into issues where some of these are</font>

1158
01:17:10,980 --> 01:17:17,849
<font color="#E5E5E5">funny characters like a backspace or a</font>

1159
01:17:15,510 --> 01:17:20,790
null character<font color="#E5E5E5"> or some other control</font>

1160
01:17:17,850 --> 01:17:27,510
character<font color="#E5E5E5"> and it's just like oh that's</font>

1161
01:17:20,790 --> 01:17:36,480
<font color="#CCCCCC">no</font><font color="#E5E5E5"> I don't wanna run this program at all</font>

1162
01:17:27,510 --> 01:17:56,630
you hit<font color="#E5E5E5"> ctrl C so it seems to</font><font color="#CCCCCC"> me like I</font>

1163
01:17:36,480 --> 01:17:56,629
have 1 2<font color="#E5E5E5"> + 4 6 10 14 18</font><font color="#CCCCCC"> 20 - twenty six</font>

1164
01:17:58,220 --> 01:18:15,690
twenty thirty<font color="#E5E5E5"> right</font><font color="#CCCCCC"> thirty and then we</font>

1165
01:18:05,640 --> 01:18:20,100
were<font color="#E5E5E5"> one halfway</font><font color="#CCCCCC"> there for</font><font color="#E5E5E5"> nine so let's</font>

1166
01:18:15,690 --> 01:18:31,919
say is it<font color="#E5E5E5"> thirty or thirty</font><font color="#CCCCCC"> four</font><font color="#E5E5E5"> well</font>

1167
01:18:20,100 --> 01:18:36,570
let's try<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and see if</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> now often I'll</font>

1168
01:18:31,920 --> 01:18:38,730
just write a little<font color="#CCCCCC"> python script let's</font>

1169
01:18:36,570 --> 01:18:44,360
<font color="#E5E5E5">see if we can avoid using Python not</font>

1170
01:18:38,730 --> 01:18:52,040
that I don't like<font color="#CCCCCC"> easy program who</font>

1171
01:18:44,360 --> 01:18:52,040
doesn't know Python<font color="#E5E5E5"> oh I guess because</font>

1172
01:18:54,940 --> 01:19:03,400
how do you do it<font color="#E5E5E5"> with Python</font><font color="#CCCCCC"> 8 times 30</font>

1173
01:18:57,400 --> 01:19:05,739
plus your<font color="#E5E5E5"> strength but just for grants</font>

1174
01:19:03,400 --> 01:19:08,460
let's do it one time man<font color="#E5E5E5"> let's see</font><font color="#CCCCCC"> if I</font>

1175
01:19:05,739 --> 01:19:08,459
can<font color="#CCCCCC"> calculate</font>

1176
01:19:50,100 --> 01:20:08,080
all right so what does<font color="#E5E5E5"> it</font><font color="#CCCCCC"> say</font><font color="#E5E5E5"> my address</font>

1177
01:19:55,920 --> 01:20:09,990
was 4<font color="#CCCCCC"> 2 4</font><font color="#E5E5E5"> 3 4 4 6 5 mm I'm off because I</font>

1178
01:20:08,080 --> 01:20:16,870
want it<font color="#E5E5E5"> to be</font>

1179
01:20:09,990 --> 01:20:21,330
it should say or<font color="#E5E5E5"> - I'm sorry no I'm not</font>

1180
01:20:16,870 --> 01:20:27,730
off<font color="#CCCCCC"> it just looked funny</font><font color="#E5E5E5"> on this display</font>

1181
01:20:21,330 --> 01:20:31,960
<font color="#E5E5E5">it says 4 2 4 3 4 4 4 5 so it was</font>

1182
01:20:27,730 --> 01:20:32,290
<font color="#E5E5E5">exactly right 30 doesn't matter what</font>

1183
01:20:31,960 --> 01:20:43,510
they are

1184
01:20:32,290 --> 01:20:50,560
<font color="#E5E5E5">lights followed</font><font color="#CCCCCC"> by the</font><font color="#E5E5E5"> 3 5</font><font color="#CCCCCC"> times</font><font color="#E5E5E5"> even so</font>

1185
01:20:43,510 --> 01:20:53,080
now<font color="#CCCCCC"> 1 the answer - now what</font><font color="#E5E5E5"> depends on</font>

1186
01:20:50,560 --> 01:20:58,110
the operating system<font color="#CCCCCC"> right if I'm</font>

1187
01:20:53,080 --> 01:21:02,670
running<font color="#CCCCCC"> Windows XP I'm almost done</font>

1188
01:20:58,110 --> 01:21:08,519
five running<font color="#E5E5E5"> Windows XP</font><font color="#CCCCCC"> what can I do I</font>

1189
01:21:02,670 --> 01:21:12,790
can say well<font color="#E5E5E5"> what is my stack address I</font>

1190
01:21:08,520 --> 01:21:16,200
will take<font color="#E5E5E5"> that stack address and I will</font>

1191
01:21:12,790 --> 01:21:16,200
put that next

1192
01:21:16,570 --> 01:21:19,688
[Applause]

1193
01:21:23,620 --> 01:21:34,580
so here it is and<font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to use this</font>

1194
01:21:27,980 --> 01:21:38,019
with<font color="#E5E5E5"> us</font><font color="#CCCCCC"> to 8f va0 I want to put that how</font>

1195
01:21:34,580 --> 01:21:46,540
the heck do<font color="#E5E5E5"> I do that like an intranet</font>

1196
01:21:38,020 --> 01:21:49,010
man like<font color="#CCCCCC"> that's a little</font><font color="#E5E5E5"> bit hard again</font>

1197
01:21:46,540 --> 01:21:54,410
<font color="#E5E5E5">sometimes this is harder to do in the</font>

1198
01:21:49,010 --> 01:22:06,500
<font color="#E5E5E5">community after</font><font color="#CCCCCC"> that I wanted</font><font color="#E5E5E5"> to search</font>

1199
01:21:54,410 --> 01:22:15,170
some shelter let me have a look here my

1200
01:22:06,500 --> 01:22:40,160
<font color="#CCCCCC">windows system I want</font><font color="#E5E5E5"> to look at some of</font>

1201
01:22:15,170 --> 01:22:45,410
<font color="#CCCCCC">my Python scripts and</font><font color="#E5E5E5"> I'll notice that I</font>

1202
01:22:40,160 --> 01:22:52,400
have a few<font color="#E5E5E5"> Python scripts and they see</font>

1203
01:22:45,410 --> 01:22:57,550
one call<font color="#CCCCCC"> Chaney warm and fuzzy we're</font>

1204
01:22:52,400 --> 01:22:57,549
called testy it's a bloke

1205
01:23:22,840 --> 01:23:30,829
so basically how does fuzzy work<font color="#E5E5E5"> I just</font>

1206
01:23:26,780 --> 01:23:35,420
<font color="#CCCCCC">said it a bunch of characters I call my</font>

1207
01:23:30,829 --> 01:23:38,090
program buffer overflow<font color="#E5E5E5"> and I give it a</font>

1208
01:23:35,420 --> 01:23:41,030
bunch of<font color="#CCCCCC"> parameters and then I do some</font>

1209
01:23:38,090 --> 01:23:44,360
math later<font color="#E5E5E5"> so this is the other way we</font>

1210
01:23:41,030 --> 01:23:48,860
could<font color="#E5E5E5"> have gone we might say what what</font>

1211
01:23:44,360 --> 01:23:53,769
do you<font color="#E5E5E5"> mean what I could have done is I</font>

1212
01:23:48,860 --> 01:24:08,380
could<font color="#E5E5E5"> have said all right I want to run</font>

1213
01:23:53,770 --> 01:24:08,380
Python fuzzy duck

1214
01:24:09,610 --> 01:24:21,409
<font color="#E5E5E5">all right this program crashed</font><font color="#CCCCCC"> I look at</font>

1215
01:24:13,040 --> 01:24:25,429
the details<font color="#E5E5E5"> it gives me my offset it</font>

1216
01:24:21,409 --> 01:24:31,129
says C<font color="#E5E5E5"> 2 C 1 C 0 BM right again it's</font>

1217
01:24:25,429 --> 01:24:35,030
little and<font color="#E5E5E5"> him so this is basically BF z</font>

1218
01:24:31,130 --> 01:24:38,510
0 C 1 C<font color="#CCCCCC"> 2 that's how it's</font><font color="#E5E5E5"> gonna appear</font>

1219
01:24:35,030 --> 01:24:42,949
<font color="#E5E5E5">if I look at my script my</font><font color="#CCCCCC"> scripts</font>

1220
01:24:38,510 --> 01:24:49,219
started at<font color="#CCCCCC"> a1</font><font color="#E5E5E5"> so what I</font><font color="#CCCCCC"> need to know is</font>

1221
01:24:42,949 --> 01:24:53,169
what<font color="#CCCCCC"> is BF -</font><font color="#E5E5E5"> main one what's my awesome</font>

1222
01:24:49,219 --> 01:24:53,170
I could use my calculator

1223
01:24:57,430 --> 01:25:15,380
[Music]

1224
01:24:59,650 --> 01:25:17,330
x-mode one that is in fact<font color="#CCCCCC"> one II</font><font color="#E5E5E5"> and</font>

1225
01:25:15,380 --> 01:25:23,060
<font color="#CCCCCC">you slide that a little bit sorry about</font>

1226
01:25:17,330 --> 01:25:25,610
the<font color="#CCCCCC"> thanks the joys of doing all this</font>

1227
01:25:23,060 --> 01:25:29,240
<font color="#CCCCCC">stuff</font><font color="#E5E5E5"> and if I convert</font><font color="#CCCCCC"> that one</font><font color="#E5E5E5"> to</font>

1228
01:25:25,610 --> 01:25:31,580
decimal isn't in fact<font color="#CCCCCC"> thirty right</font><font color="#E5E5E5"> so</font>

1229
01:25:29,240 --> 01:25:36,380
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> another way more</font><font color="#E5E5E5"> scientifically</font>

1230
01:25:31,580 --> 01:25:39,950
scientific way I<font color="#CCCCCC"> could find it so you</font>

1231
01:25:36,380 --> 01:25:48,620
guys understand<font color="#CCCCCC"> how we just did this so</font>

1232
01:25:39,950 --> 01:25:55,280
<font color="#E5E5E5">he said all right 30 characters now from</font>

1233
01:25:48,620 --> 01:25:58,330
here from here<font color="#CCCCCC"> I could take this script</font>

1234
01:25:55,280 --> 01:25:58,330
<font color="#CCCCCC">and I can modify</font>

1235
01:26:08,200 --> 01:26:16,840
and what I'm going to do is build this

1236
01:26:11,630 --> 01:26:23,660
parameter and say this is the parameter

1237
01:26:16,840 --> 01:26:29,750
<font color="#E5E5E5">38 and then to this I can</font><font color="#CCCCCC"> add certain</font>

1238
01:26:23,660 --> 01:26:34,599
value and<font color="#CCCCCC"> then I might add a bunch of</font>

1239
01:26:29,750 --> 01:26:47,080
hex<font color="#CCCCCC"> 9 zeros why do I like hex</font><font color="#E5E5E5"> 9 zeros</font>

1240
01:26:34,600 --> 01:26:52,460
<font color="#E5E5E5">that is a what not</font><font color="#CCCCCC"> know operation so</font>

1241
01:26:47,080 --> 01:26:55,640
what<font color="#E5E5E5"> does it not do get you where you</font>

1242
01:26:52,460 --> 01:26:59,300
want<font color="#CCCCCC"> knops are used for</font><font color="#E5E5E5"> padding like</font>

1243
01:26:55,640 --> 01:27:01,400
legitimately used for<font color="#CCCCCC"> patterning</font><font color="#E5E5E5"> so if</font>

1244
01:26:59,300 --> 01:27:04,880
you're into forensics and you look at

1245
01:27:01,400 --> 01:27:07,309
things<font color="#E5E5E5"> like let's say it's a Master Boot</font>

1246
01:27:04,880 --> 01:27:16,250
Record or a volume Boot Record

1247
01:27:07,310 --> 01:27:18,980
<font color="#CCCCCC">kind of file system</font><font color="#E5E5E5"> you'll see a mass</font>

1248
01:27:16,250 --> 01:27:21,910
now the volume<font color="#CCCCCC"> record yeah click record</font>

1249
01:27:18,980 --> 01:27:26,629
<font color="#E5E5E5">first</font><font color="#CCCCCC"> 3 bytes</font><font color="#E5E5E5"> are a jump instruction</font>

1250
01:27:21,910 --> 01:27:29,690
<font color="#E5E5E5">it'll say EE 9 I think how many bytes to</font>

1251
01:27:26,630 --> 01:27:32,120
jump ahead<font color="#E5E5E5"> let's pull the short jump and</font>

1252
01:27:29,690 --> 01:27:38,290
the next character Linux pipe<font color="#CCCCCC"> would be</font>

1253
01:27:32,120 --> 01:27:43,000
<font color="#CCCCCC">nine zero not placement</font><font color="#E5E5E5"> so in</font>

1254
01:27:38,290 --> 01:27:43,000
exploitation of software<font color="#E5E5E5"> I'm using</font>

1255
01:27:45,670 --> 01:27:52,790
sometimes<font color="#CCCCCC"> I don't</font><font color="#E5E5E5"> have very fine control</font>

1256
01:27:49,070 --> 01:27:55,009
over<font color="#CCCCCC"> where you're going to redirect</font><font color="#E5E5E5"> some</font>

1257
01:27:52,790 --> 01:27:58,330
value in you still sure we're not

1258
01:27:55,010 --> 01:28:02,960
talking about<font color="#E5E5E5"> you today</font>

1259
01:27:58,330 --> 01:28:05,590
<font color="#CCCCCC">look at</font><font color="#E5E5E5"> human problems you might do it's</font>

1260
01:28:02,960 --> 01:28:07,960
called<font color="#E5E5E5"> heaps praise</font>

1261
01:28:05,590 --> 01:28:11,349
<font color="#E5E5E5">three columns it's a web browser</font><font color="#CCCCCC"> and</font>

1262
01:28:07,960 --> 01:28:14,349
<font color="#E5E5E5">like IV has lots of problems</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> some of</font>

1263
01:28:11,349 --> 01:28:16,270
them you can explain easily<font color="#CCCCCC"> spring so</font>

1264
01:28:14,349 --> 01:28:19,719
what you do is you<font color="#CCCCCC"> just fill the right</font>

1265
01:28:16,270 --> 01:28:21,460
just so that way when you redirect<font color="#E5E5E5"> it</font>

1266
01:28:19,719 --> 01:28:25,659
you're probably going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> hit</font><font color="#E5E5E5"> your back</font>

1267
01:28:21,460 --> 01:28:28,330
right so what you do is you put a bunch

1268
01:28:25,659 --> 01:28:30,638
<font color="#E5E5E5">of knobs in there and then you put your</font>

1269
01:28:28,330 --> 01:28:33,250
<font color="#E5E5E5">bad color home there's a bunch more now</font>

1270
01:28:30,639 --> 01:28:34,929
<font color="#E5E5E5">and your bad code again and</font><font color="#CCCCCC"> just repeat</font>

1271
01:28:33,250 --> 01:28:38,860
it<font color="#E5E5E5"> over and over and</font><font color="#CCCCCC"> over again</font>

1272
01:28:34,929 --> 01:28:40,599
now when you load up<font color="#CCCCCC"> Metasploit you'll</font>

1273
01:28:38,860 --> 01:28:43,719
notice it comes<font color="#CCCCCC"> up and says I</font><font color="#E5E5E5"> have this</font>

1274
01:28:40,599 --> 01:28:46,230
many exploits<font color="#E5E5E5"> this many payloads if you</font>

1275
01:28:43,719 --> 01:28:48,550
look it<font color="#CCCCCC"> says I</font><font color="#E5E5E5"> have this many not</font>

1276
01:28:46,230 --> 01:28:51,968
because a lot of intrusion detection

1277
01:28:48,550 --> 01:28:54,400
systems are like why is<font color="#CCCCCC"> my memory</font>

1278
01:28:51,969 --> 01:28:58,449
filling up with hex code<font color="#CCCCCC"> 9d</font><font color="#E5E5E5"> this is not</font>

1279
01:28:54,400 --> 01:29:01,650
<font color="#CCCCCC">even normal</font><font color="#E5E5E5"> so what they do is they have</font>

1280
01:28:58,449 --> 01:29:04,629
alternatives that also<font color="#E5E5E5"> do nothing but</font>

1281
01:29:01,650 --> 01:29:06,848
that way<font color="#CCCCCC"> you have some right and it</font>

1282
01:29:04,630 --> 01:29:08,949
makes it harder<font color="#CCCCCC"> for someone to detect</font>

1283
01:29:06,849 --> 01:29:11,679
<font color="#CCCCCC">what you're doing</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> we call it</font>

1284
01:29:08,949 --> 01:29:15,489
knob slip sometimes<font color="#CCCCCC"> people call</font><font color="#E5E5E5"> them not</font>

1285
01:29:11,679 --> 01:29:18,570
slide not slide or sled if<font color="#E5E5E5"> your boat the</font>

1286
01:29:15,489 --> 01:29:25,928
idea is this if you're a little<font color="#CCCCCC"> bit off</font>

1287
01:29:18,570 --> 01:29:29,019
<font color="#CCCCCC">you'll still get to your shelter</font><font color="#E5E5E5"> so I</font>

1288
01:29:25,929 --> 01:29:33,989
had an<font color="#CCCCCC"> op sled and then I had</font><font color="#E5E5E5"> my</font>

1289
01:29:29,020 --> 01:29:38,590
<font color="#CCCCCC">shellcode thank you</font>

1290
01:29:33,989 --> 01:29:43,750
and this is kind of<font color="#E5E5E5"> a general format for</font>

1291
01:29:38,590 --> 01:29:47,500
exploit now I'm going to go ahead and

1292
01:29:43,750 --> 01:29:50,110
run this<font color="#E5E5E5"> now this will run it and in</font>

1293
01:29:47,500 --> 01:29:53,610
this case<font color="#CCCCCC"> it actually is going</font><font color="#E5E5E5"> to run it</font>

1294
01:29:50,110 --> 01:29:53,610
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> immunity</font>

1295
01:29:54,570 --> 01:30:01,059
because immunity allows me to run

1296
01:29:57,400 --> 01:30:07,360
immunity and then<font color="#CCCCCC"> passed it in program</font>

1297
01:30:01,060 --> 01:30:10,480
<font color="#CCCCCC">to run by the way I can also attach to a</font>

1298
01:30:07,360 --> 01:30:12,519
process if you look at the file menu<font color="#E5E5E5"> and</font>

1299
01:30:10,480 --> 01:30:14,410
<font color="#CCCCCC">the mmunity</font><font color="#E5E5E5"> there's an</font><font color="#CCCCCC"> attached option</font>

1300
01:30:12,520 --> 01:30:17,290
if I have<font color="#CCCCCC"> a daemon or some other system</font>

1301
01:30:14,410 --> 01:30:21,190
process<font color="#E5E5E5"> it's already running</font><font color="#CCCCCC"> I can just</font>

1302
01:30:17,290 --> 01:30:25,300
attach to<font color="#CCCCCC"> it</font><font color="#E5E5E5"> but there's</font><font color="#CCCCCC"> something you</font>

1303
01:30:21,190 --> 01:30:32,650
<font color="#E5E5E5">can't just watch it easy</font><font color="#CCCCCC"> it's another</font>

1304
01:30:25,300 --> 01:30:34,930
option<font color="#CCCCCC"> okay so I'm gonna close this</font>

1305
01:30:32,650 --> 01:30:36,190
because<font color="#E5E5E5"> I'm gonna reopen it here a</font>

1306
01:30:34,930 --> 01:30:38,520
second

1307
01:30:36,190 --> 01:30:53,500
[Music]

1308
01:30:38,520 --> 01:30:55,060
but<font color="#E5E5E5"> now I'm gonna run this test</font><font color="#CCCCCC"> we have</font>

1309
01:30:53,500 --> 01:30:57,220
<font color="#E5E5E5">completion is your friend</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> always tell</font>

1310
01:30:55,060 --> 01:31:00,280
my<font color="#E5E5E5"> students that I</font><font color="#CCCCCC"> see him it's so</font>

1311
01:30:57,220 --> 01:31:04,510
painful<font color="#E5E5E5"> watching them even in an</font>

1312
01:31:00,280 --> 01:31:10,840
advanced class<font color="#CCCCCC"> and like we had we had</font>

1313
01:31:04,510 --> 01:31:13,870
<font color="#E5E5E5">the need to do something</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the command</font>

1314
01:31:10,840 --> 01:31:16,390
is the<font color="#E5E5E5"> tool we had it's called active</font>

1315
01:31:13,870 --> 01:31:18,400
active<font color="#E5E5E5"> scheduler it's great tool but</font>

1316
01:31:16,390 --> 01:31:20,350
some other<font color="#CCCCCC"> classes we're running</font><font color="#E5E5E5"> it and</font>

1317
01:31:18,400 --> 01:31:23,889
they were pointing<font color="#E5E5E5"> toward disk images</font>

1318
01:31:20,350 --> 01:31:25,840
that weren't accessible to<font color="#E5E5E5"> these</font>

1319
01:31:23,890 --> 01:31:29,170
students because they were<font color="#CCCCCC"> mounted under</font>

1320
01:31:25,840 --> 01:31:31,810
other students drives and they also

1321
01:31:29,170 --> 01:31:34,510
didn't<font color="#E5E5E5"> untape the box that says we do</font>

1322
01:31:31,810 --> 01:31:36,580
load the things I<font color="#E5E5E5"> was gonna find last so</font>

1323
01:31:34,510 --> 01:31:37,870
they try<font color="#CCCCCC"> to run it and it</font><font color="#E5E5E5"> like the tool</font>

1324
01:31:36,580 --> 01:31:39,390
be like I can't open those<font color="#E5E5E5"> and even</font>

1325
01:31:37,870 --> 01:31:41,410
<font color="#E5E5E5">close</font>

1326
01:31:39,390 --> 01:31:43,930
<font color="#E5E5E5">and it was really bad because they're</font>

1327
01:31:41,410 --> 01:31:45,910
all time trying<font color="#E5E5E5"> to take a test well I</font>

1328
01:31:43,930 --> 01:31:49,810
found a command<font color="#E5E5E5"> lighting switch for this</font>

1329
01:31:45,910 --> 01:31:53,110
tool it would fix<font color="#E5E5E5"> that problem but these</font>

1330
01:31:49,810 --> 01:31:54,870
<font color="#E5E5E5">are like seniors</font><font color="#CCCCCC"> I don't like I had to</font>

1331
01:31:53,110 --> 01:31:57,870
like<font color="#E5E5E5"> step by step</font>

1332
01:31:54,870 --> 01:31:57,870
<font color="#E5E5E5">cd2</font>

1333
01:31:59,170 --> 01:32:05,980
[Applause]

1334
01:32:00,460 --> 01:32:05,980
<font color="#E5E5E5">okay so here we go</font>

1335
01:32:07,630 --> 01:32:18,829
and it says I'm running<font color="#E5E5E5"> it I'm gonna hit</font>

1336
01:32:12,619 --> 01:32:24,049
up<font color="#E5E5E5"> nine and it's a single step event at</font>

1337
01:32:18,829 --> 01:32:25,780
ntdll block block if do<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want to pass</font>

1338
01:32:24,050 --> 01:32:29,210
this to your program or<font color="#CCCCCC"> not me</font>

1339
01:32:25,780 --> 01:32:30,699
so basically here's what happened<font color="#E5E5E5"> my</font>

1340
01:32:29,210 --> 01:32:35,449
program crashed

1341
01:32:30,699 --> 01:32:49,879
why did my program crash my program

1342
01:32:35,449 --> 01:32:59,989
crashed because notice<font color="#CCCCCC"> how I gave it</font>

1343
01:32:49,880 --> 01:33:04,449
this bad value<font color="#E5E5E5"> dead beef okay</font><font color="#CCCCCC"> I told it</font>

1344
01:32:59,989 --> 01:33:18,789
dead<font color="#E5E5E5"> beef why is that a problem</font>

1345
01:33:04,449 --> 01:33:24,589
<font color="#E5E5E5">well the problem is</font><font color="#CCCCCC"> disk I can't give it</font>

1346
01:33:18,789 --> 01:33:29,530
the<font color="#CCCCCC"> stack address</font><font color="#E5E5E5"> directly and here's</font>

1347
01:33:24,590 --> 01:33:32,739
why I can't do that what is<font color="#E5E5E5"> this address</font>

1348
01:33:29,530 --> 01:33:32,739
start with

1349
01:33:32,950 --> 01:33:44,929
<font color="#E5E5E5">zero-zero what is that it's an old</font>

1350
01:33:39,200 --> 01:33:48,639
<font color="#CCCCCC">terminator</font><font color="#E5E5E5"> you see the problem if I try</font>

1351
01:33:44,930 --> 01:33:53,410
<font color="#CCCCCC">to copy a</font><font color="#E5E5E5"> screen it contains that value</font>

1352
01:33:48,640 --> 01:34:03,980
it goes oh that's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> null we're done</font>

1353
01:33:53,410 --> 01:34:28,040
stops copy so on the command line this

1354
01:34:03,980 --> 01:34:32,269
<font color="#E5E5E5">actually is good real quick before we</font>

1355
01:34:28,040 --> 01:34:35,930
get back into this<font color="#E5E5E5"> when you look</font><font color="#CCCCCC"> at a</font>

1356
01:34:32,270 --> 01:34:39,860
tool like<font color="#E5E5E5"> the medicine</font><font color="#CCCCCC"> wait you see an</font>

1357
01:34:35,930 --> 01:34:47,060
exploit<font color="#E5E5E5"> often you'll say this is how</font>

1358
01:34:39,860 --> 01:34:50,839
much space<font color="#CCCCCC"> I have for your shellcode 50</font>

1359
01:34:47,060 --> 01:34:52,490
bytes that's<font color="#E5E5E5"> not a lot</font><font color="#CCCCCC"> you start</font><font color="#E5E5E5"> looking</font>

1360
01:34:50,840 --> 01:34:56,020
at<font color="#CCCCCC"> some of</font><font color="#E5E5E5"> these shell codes and you</font>

1361
01:34:52,490 --> 01:34:59,380
<font color="#CCCCCC">find you can do a lot with 50</font><font color="#E5E5E5"> bucks</font>

1362
01:34:56,020 --> 01:35:04,370
<font color="#CCCCCC">sometimes you can do a lot of 30</font><font color="#E5E5E5"> months</font>

1363
01:34:59,380 --> 01:35:06,650
you'd be amazed so if I go<font color="#CCCCCC"> back to</font>

1364
01:35:04,370 --> 01:35:08,240
<font color="#CCCCCC">Metasploit they say oh</font><font color="#E5E5E5"> okay you know</font>

1365
01:35:06,650 --> 01:35:13,360
maybe<font color="#CCCCCC"> eventually I want to develop a</font>

1366
01:35:08,240 --> 01:35:13,360
exploit based on this blog<font color="#E5E5E5"> they just</font><font color="#CCCCCC"> out</font>

1367
01:35:13,510 --> 01:35:20,510
when I develop<font color="#CCCCCC"> that</font><font color="#E5E5E5"> I will say this is</font>

1368
01:35:18,020 --> 01:35:25,100
how<font color="#CCCCCC"> many bytes are available one of the</font>

1369
01:35:20,510 --> 01:35:28,670
reasons for<font color="#CCCCCC"> that would be that you</font><font color="#E5E5E5"> know</font>

1370
01:35:25,100 --> 01:35:31,040
we said if<font color="#E5E5E5"> we go back a</font><font color="#CCCCCC"> few slides yeah</font>

1371
01:35:28,670 --> 01:35:32,570
you said<font color="#CCCCCC"> that you often the standard</font>

1372
01:35:31,040 --> 01:35:35,450
thing you do is you overwrite<font color="#CCCCCC"> that</font>

1373
01:35:32,570 --> 01:35:38,340
return address<font color="#CCCCCC"> and immediately after the</font>

1374
01:35:35,450 --> 01:35:40,660
return address<font color="#E5E5E5"> you put your shellcode</font>

1375
01:35:38,340 --> 01:35:46,480
nobody says you<font color="#E5E5E5"> can't put your shellcode</font>

1376
01:35:40,660 --> 01:35:52,090
and<font color="#CCCCCC"> forward it and what is the advantage</font>

1377
01:35:46,480 --> 01:35:55,750
of<font color="#E5E5E5"> doing that beforehand well we said</font>

1378
01:35:52,090 --> 01:35:57,910
that<font color="#CCCCCC"> the address that we have</font><font color="#E5E5E5"> is going</font>

1379
01:35:55,750 --> 01:36:02,620
to start with<font color="#E5E5E5"> zero zero and that's a</font>

1380
01:35:57,910 --> 01:36:05,530
<font color="#E5E5E5">problem that's a null</font><font color="#CCCCCC"> Terminator well</font>

1381
01:36:02,620 --> 01:36:09,670
guess<font color="#E5E5E5"> what am I gonna write a zero</font><font color="#CCCCCC"> zero</font>

1382
01:36:05,530 --> 01:36:12,550
<font color="#E5E5E5">when I call</font><font color="#CCCCCC"> ster copy</font><font color="#E5E5E5"> I am</font><font color="#CCCCCC"> alright it's</font>

1383
01:36:09,670 --> 01:36:18,280
gonna put a null<font color="#E5E5E5"> Terminator in there and</font>

1384
01:36:12,550 --> 01:36:21,610
it's blended so with memory<font color="#E5E5E5"> this address</font>

1385
01:36:18,280 --> 01:36:26,769
<font color="#E5E5E5">is stored as F 0 F</font><font color="#CCCCCC"> at two eight zero</font>

1386
01:36:21,610 --> 01:36:27,839
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> I'm golden</font><font color="#CCCCCC"> out right you see you</font>

1387
01:36:26,770 --> 01:36:32,650
<font color="#E5E5E5">see what I'm saying</font><font color="#CCCCCC"> in here</font>

1388
01:36:27,840 --> 01:36:35,080
if I have a if I have enough<font color="#E5E5E5"> space I can</font>

1389
01:36:32,650 --> 01:36:42,490
put<font color="#E5E5E5"> that shellcode before the return</font>

1390
01:36:35,080 --> 01:36:43,630
address<font color="#CCCCCC"> and I</font><font color="#E5E5E5"> can say go here if I don't</font>

1391
01:36:42,490 --> 01:36:46,780
have some of<font color="#CCCCCC"> the protections</font><font color="#E5E5E5"> we're gonna</font>

1392
01:36:43,630 --> 01:36:51,850
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> about a little bit so</font><font color="#E5E5E5"> that's one</font>

1393
01:36:46,780 --> 01:36:54,670
method there<font color="#E5E5E5"> is another method that you</font>

1394
01:36:51,850 --> 01:37:02,590
<font color="#CCCCCC">can use and it's something</font><font color="#E5E5E5"> called jump</font>

1395
01:36:54,670 --> 01:37:05,050
<font color="#CCCCCC">yes</font><font color="#E5E5E5"> and the idea is this</font><font color="#CCCCCC"> I just loaded</font>

1396
01:37:02,590 --> 01:37:09,820
<font color="#E5E5E5">this program again you'll notice right</font>

1397
01:37:05,050 --> 01:37:12,840
<font color="#E5E5E5">here I'm an ntdll one of the memory</font>

1398
01:37:09,820 --> 01:37:16,299
addresses<font color="#CCCCCC"> for 88 DLL</font>

1399
01:37:12,840 --> 01:37:20,950
hey there's not a<font color="#E5E5E5"> leading null byte is</font>

1400
01:37:16,300 --> 01:37:27,610
there there's more<font color="#E5E5E5"> than just this one</font>

1401
01:37:20,950 --> 01:37:29,860
<font color="#E5E5E5">DLL exposure so what I could do is I</font>

1402
01:37:27,610 --> 01:37:32,559
<font color="#E5E5E5">could go here is you and I can save you</font>

1403
01:37:29,860 --> 01:37:35,730
memory please and I can look at all

1404
01:37:32,560 --> 01:37:42,510
these different memory segments

1405
01:37:35,730 --> 01:37:50,489
I apologize that it's<font color="#CCCCCC"> microscopic but</font><font color="#E5E5E5"> I</font>

1406
01:37:42,510 --> 01:37:53,300
<font color="#E5E5E5">will see things like kernel32 MSB CRT</font>

1407
01:37:50,489 --> 01:37:58,650
that's the Microsoft Visual<font color="#E5E5E5"> C one time</font>

1408
01:37:53,300 --> 01:38:00,719
library<font color="#E5E5E5"> ntdll</font><font color="#CCCCCC"> and here's what you want</font>

1409
01:37:58,650 --> 01:38:04,620
<font color="#CCCCCC">to do if you</font><font color="#E5E5E5"> look at each of these</font>

1410
01:38:00,719 --> 01:38:06,780
sections<font color="#CCCCCC"> there's a text section I don't</font>

1411
01:38:04,620 --> 01:38:09,900
want to get<font color="#E5E5E5"> into all those assembly</font>

1412
01:38:06,780 --> 01:38:18,620
details but the text section has your

1413
01:38:09,900 --> 01:38:18,620
code<font color="#CCCCCC"> I can search for an instruction</font><font color="#E5E5E5"> to</font>

1414
01:38:18,949 --> 01:38:26,540
<font color="#E5E5E5">jump to</font>

1415
01:38:21,960 --> 01:38:28,920
yes people don't recall yes because I

1416
01:38:26,540 --> 01:38:33,110
don't<font color="#CCCCCC"> really</font><font color="#E5E5E5"> care</font><font color="#CCCCCC"> if it's a call on her</font>

1417
01:38:28,920 --> 01:38:35,250
<font color="#CCCCCC">tongue as long</font><font color="#E5E5E5"> as I get</font><font color="#CCCCCC"> it</font>

1418
01:38:33,110 --> 01:38:37,769
so what I<font color="#E5E5E5"> could do is something</font><font color="#CCCCCC"> like</font>

1419
01:38:35,250 --> 01:38:41,670
<font color="#E5E5E5">this</font><font color="#CCCCCC"> let's just say ntdll</font><font color="#E5E5E5"> I've already</font>

1420
01:38:37,770 --> 01:38:44,210
<font color="#E5E5E5">explained it and now I can search let's</font>

1421
01:38:41,670 --> 01:38:47,930
see if I can<font color="#E5E5E5"> remember how to do this I</font>

1422
01:38:44,210 --> 01:38:47,930
[Music]

1423
01:38:48,260 --> 01:39:01,530
want<font color="#E5E5E5"> to find</font><font color="#CCCCCC"> big command</font><font color="#E5E5E5"> I'll search for</font>

1424
01:38:54,150 --> 01:39:08,059
a community command<font color="#E5E5E5"> hey guess what it's</font>

1425
01:39:01,530 --> 01:39:08,059
<font color="#E5E5E5">already here my buffer jump GMP ESP</font><font color="#CCCCCC"> fine</font>

1426
01:39:09,020 --> 01:39:17,010
<font color="#E5E5E5">now I have an address so I take this</font>

1427
01:39:13,380 --> 01:39:23,280
address<font color="#E5E5E5"> and this is the</font><font color="#CCCCCC"> address that</font><font color="#E5E5E5"> I'm</font>

1428
01:39:17,010 --> 01:39:28,550
going to put into<font color="#CCCCCC"> my</font><font color="#E5E5E5"> location so if</font><font color="#CCCCCC"> I if</font>

1429
01:39:23,280 --> 01:39:28,550
<font color="#CCCCCC">I go</font><font color="#E5E5E5"> back</font><font color="#CCCCCC"> to my testing</font>

1430
01:39:36,010 --> 01:39:48,289
you'll notice<font color="#E5E5E5"> I think I actually have</font>

1431
01:39:38,570 --> 01:39:54,889
this<font color="#CCCCCC"> in this exact address okay it's not</font>

1432
01:39:48,289 --> 01:39:58,369
this one<font color="#E5E5E5"> but it's different</font><font color="#CCCCCC"> I think this</font>

1433
01:39:54,889 --> 01:40:01,400
was a different<font color="#CCCCCC"> feel there's</font><font color="#E5E5E5"> more than</font>

1434
01:39:58,369 --> 01:40:04,848
<font color="#CCCCCC">one PLL that you could use but</font><font color="#E5E5E5"> basically</font>

1435
01:40:01,400 --> 01:40:06,920
<font color="#CCCCCC">all you need to do is say that's my</font>

1436
01:40:04,849 --> 01:40:09,829
return<font color="#E5E5E5"> address</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's the one you</font>

1437
01:40:06,920 --> 01:40:17,949
<font color="#E5E5E5">poked in there and it goes back two more</font>

1438
01:40:09,829 --> 01:40:19,219
seconds<font color="#CCCCCC"> and that works</font><font color="#E5E5E5"> very</font><font color="#CCCCCC"> well that is</font>

1439
01:40:17,949 --> 01:40:22,728
<font color="#E5E5E5">useful</font>

1440
01:40:19,219 --> 01:40:26,119
definitely for<font color="#E5E5E5"> Windows some versions of</font>

1441
01:40:22,729 --> 01:40:29,719
<font color="#CCCCCC">lakes</font><font color="#E5E5E5"> it might also be now it turns out</font>

1442
01:40:26,119 --> 01:40:36,320
when<font color="#CCCCCC"> you get</font><font color="#E5E5E5"> into 64-bit totally</font>

1443
01:40:29,719 --> 01:40:38,989
different so the biggest thing<font color="#E5E5E5"> is so far</font>

1444
01:40:36,320 --> 01:40:41,749
let's just check to<font color="#CCCCCC"> make sure you</font><font color="#E5E5E5"> kind</font>

1445
01:40:38,989 --> 01:40:44,718
of<font color="#CCCCCC"> figured</font><font color="#E5E5E5"> out all the stuff works what</font>

1446
01:40:41,749 --> 01:40:48,739
do I<font color="#CCCCCC"> need I need</font><font color="#E5E5E5"> to have something where</font>

1447
01:40:44,719 --> 01:40:51,530
I stupidly let the user input code or

1448
01:40:48,739 --> 01:40:56,079
input data into<font color="#E5E5E5"> a part of my program</font>

1449
01:40:51,530 --> 01:40:58,909
where I'm not checking stuff and that

1450
01:40:56,079 --> 01:41:02,210
results in<font color="#CCCCCC"> something being passed to a</font>

1451
01:40:58,909 --> 01:41:04,759
function<font color="#CCCCCC"> and</font><font color="#E5E5E5"> usually something like stir</font>

1452
01:41:02,210 --> 01:41:07,550
<font color="#CCCCCC">copied is called or</font><font color="#E5E5E5"> something else like</font>

1453
01:41:04,760 --> 01:41:11,300
that<font color="#CCCCCC"> that overwrites</font><font color="#E5E5E5"> a local variable</font>

1454
01:41:07,550 --> 01:41:15,860
<font color="#CCCCCC">some are</font><font color="#E5E5E5"> ultimately</font><font color="#CCCCCC"> authorized return</font>

1455
01:41:11,300 --> 01:41:17,780
address and<font color="#E5E5E5"> type</font><font color="#CCCCCC"> the business so I</font><font color="#E5E5E5"> can</font>

1456
01:41:15,860 --> 01:41:21,460
do a<font color="#E5E5E5"> lot more than</font><font color="#CCCCCC"> crashing program time</font>

1457
01:41:17,780 --> 01:41:21,460
a lot

1458
01:41:21,930 --> 01:41:38,070
<font color="#E5E5E5">okay now let's talk about some of these</font>

1459
01:41:26,440 --> 01:41:44,700
complications<font color="#E5E5E5"> go back here back</font>

1460
01:41:38,070 --> 01:41:44,700
protections<font color="#E5E5E5"> how do I make this difficult</font>

1461
01:41:45,840 --> 01:41:52,450
well there are a couple<font color="#E5E5E5"> of standard</font>

1462
01:41:48,190 --> 01:41:54,030
schemes minutes the first one we're

1463
01:41:52,450 --> 01:41:58,120
going to talk<font color="#CCCCCC"> about is it your</font>

1464
01:41:54,030 --> 01:42:01,200
non-executable<font color="#CCCCCC"> step</font><font color="#E5E5E5"> sometimes you'll</font>

1465
01:41:58,120 --> 01:42:05,559
hear<font color="#CCCCCC"> people talk about</font><font color="#E5E5E5"> the NX bit</font>

1466
01:42:01,200 --> 01:42:10,200
different memory areas in your<font color="#E5E5E5"> Intel</font>

1467
01:42:05,560 --> 01:42:16,540
system can be flagged with<font color="#E5E5E5"> permissions</font>

1468
01:42:10,200 --> 01:42:20,320
read/write/execute<font color="#E5E5E5"> standard legs or unix</font>

1469
01:42:16,540 --> 01:42:25,680
permissions so you can set the don't

1470
01:42:20,320 --> 01:42:27,490
execute bit to another<font color="#E5E5E5"> segment and</font>

1471
01:42:25,680 --> 01:42:31,810
that's a<font color="#E5E5E5"> problem</font>

1472
01:42:27,490 --> 01:42:35,950
you can't just<font color="#E5E5E5"> one the staff if there's</font>

1473
01:42:31,810 --> 01:42:38,950
<font color="#E5E5E5">fit mark is not as you</font><font color="#CCCCCC"> know a another</font>

1474
01:42:35,950 --> 01:42:41,700
thing<font color="#CCCCCC"> you can do is you might have a</font>

1475
01:42:38,950 --> 01:42:48,940
system that<font color="#CCCCCC"> uses address space layout</font>

1476
01:42:41,700 --> 01:42:52,269
for into business<font color="#CCCCCC"> guess alarm now it's</font>

1477
01:42:48,940 --> 01:42:54,219
not always<font color="#CCCCCC"> in the same place I can't</font>

1478
01:42:52,270 --> 01:42:56,350
<font color="#E5E5E5">just put a fixed address in there</font>

1479
01:42:54,220 --> 01:43:02,980
<font color="#CCCCCC">doesn't work</font><font color="#E5E5E5"> yes sir</font>

1480
01:42:56,350 --> 01:43:05,840
was that around<font color="#CCCCCC"> before so we</font><font color="#E5E5E5"> will talk a</font>

1481
01:43:02,980 --> 01:43:08,750
little bit<font color="#CCCCCC"> more about this</font>

1482
01:43:05,840 --> 01:43:11,110
and then we have<font color="#E5E5E5"> something</font><font color="#CCCCCC"> called stack</font>

1483
01:43:08,750 --> 01:43:11,110
Canaries

1484
01:43:11,200 --> 01:43:19,010
so non-executable stacks again

1485
01:43:15,590 --> 01:43:24,530
read/write/execute<font color="#CCCCCC"> flags</font><font color="#E5E5E5"> the stack</font>

1486
01:43:19,010 --> 01:43:30,920
<font color="#E5E5E5">should not be executable Windows XP</font>

1487
01:43:24,530 --> 01:43:33,440
guess what<font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> and honestly you</font>

1488
01:43:30,920 --> 01:43:37,730
shouldn't<font color="#E5E5E5"> have a chunk of memory</font><font color="#CCCCCC"> that is</font>

1489
01:43:33,440 --> 01:43:40,400
<font color="#E5E5E5">writable and executable so okay to me</font>

1490
01:43:37,730 --> 01:43:46,459
writable<font color="#CCCCCC"> and readable</font><font color="#E5E5E5"> but</font><font color="#CCCCCC"> not executable</font>

1491
01:43:40,400 --> 01:43:52,780
but you shouldn't be writable<font color="#CCCCCC"> in X that</font>

1492
01:43:46,460 --> 01:43:57,950
can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> issues so if my stack is</font><font color="#CCCCCC"> not</font>

1493
01:43:52,780 --> 01:44:00,380
executable<font color="#CCCCCC"> I can't just put myself down</font>

1494
01:43:57,950 --> 01:44:06,639
the stack and<font color="#E5E5E5"> write I can't I gotta do</font>

1495
01:44:00,380 --> 01:44:09,560
something<font color="#E5E5E5"> differently in Windows XP</font>

1496
01:44:06,640 --> 01:44:12,890
<font color="#E5E5E5">service pack ooh</font>

1497
01:44:09,560 --> 01:44:15,950
they introduced this non-executable

1498
01:44:12,890 --> 01:44:20,750
<font color="#CCCCCC">staff the Microsoft they had to give it</font>

1499
01:44:15,950 --> 01:44:26,150
its own special and it's called data

1500
01:44:20,750 --> 01:44:31,690
execution prevention<font color="#E5E5E5"> yep the big part of</font>

1501
01:44:26,150 --> 01:44:35,950
it<font color="#CCCCCC"> is a non executable spec guess what</font>

1502
01:44:31,690 --> 01:44:35,950
not<font color="#CCCCCC"> enabled</font><font color="#E5E5E5"> by</font><font color="#CCCCCC"> default</font>

1503
01:44:36,290 --> 01:44:43,420
<font color="#E5E5E5">later versions</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> Windows this might be</font>

1504
01:44:42,350 --> 01:44:47,330
enabled

1505
01:44:43,420 --> 01:44:50,990
sometimes it's enabled for system

1506
01:44:47,330 --> 01:44:53,990
processes<font color="#E5E5E5"> but not for your day programs</font>

1507
01:44:50,990 --> 01:44:56,750
you might say why is<font color="#E5E5E5"> that because</font><font color="#CCCCCC"> people</font>

1508
01:44:53,990 --> 01:45:02,030
<font color="#E5E5E5">get unhappy when their programs don't</font>

1509
01:44:56,750 --> 01:45:06,700
work anymore people<font color="#CCCCCC"> are like</font><font color="#E5E5E5"> my programs</font>

1510
01:45:02,030 --> 01:45:09,889
don't work<font color="#E5E5E5"> but you're safer it's like I</font>

1511
01:45:06,700 --> 01:45:10,400
want<font color="#E5E5E5"> to be safe when I fly stay</font><font color="#CCCCCC"> on the</font>

1512
01:45:09,890 --> 01:45:13,460
ground

1513
01:45:10,400 --> 01:45:15,440
you're safe now<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you're not</font><font color="#E5E5E5"> doing</font>

1514
01:45:13,460 --> 01:45:16,970
<font color="#CCCCCC">what you wanted</font><font color="#E5E5E5"> me well actually you're</font>

1515
01:45:15,440 --> 01:45:18,889
not<font color="#E5E5E5"> going to be as safe because you're</font>

1516
01:45:16,970 --> 01:45:22,360
<font color="#E5E5E5">gonna drive and</font><font color="#CCCCCC"> that's a heck of a lot</font>

1517
01:45:18,890 --> 01:45:26,960
more<font color="#CCCCCC"> dangerous</font><font color="#E5E5E5"> than flying errands isn't</font>

1518
01:45:22,360 --> 01:45:35,570
anyone<font color="#CCCCCC"> freak flying I'll take you flying</font>

1519
01:45:26,960 --> 01:45:37,160
subscribe<font color="#CCCCCC"> they didn't really be free you</font>

1520
01:45:35,570 --> 01:45:42,620
wanna you want to fly a chopper and

1521
01:45:37,160 --> 01:45:44,090
really get the fear gone<font color="#CCCCCC"> twin-engine and</font>

1522
01:45:42,620 --> 01:45:47,530
it seemed like<font color="#CCCCCC"> every nut and</font><font color="#E5E5E5"> bolt was</font>

1523
01:45:44,090 --> 01:45:47,530
just a<font color="#E5E5E5"> little bit loose because all of</font>

1524
01:45:48,100 --> 01:45:57,500
<font color="#E5E5E5">the chopper is everything</font><font color="#CCCCCC"> Wiggles</font><font color="#E5E5E5"> my job</font>

1525
01:45:54,610 --> 01:45:59,690
in fact I remember one<font color="#CCCCCC"> day I was</font>

1526
01:45:57,500 --> 01:46:03,440
watching someone else<font color="#E5E5E5"> they keep it in</font>

1527
01:45:59,690 --> 01:46:05,599
their chopper it's a good thing that<font color="#E5E5E5"> I</font>

1528
01:46:03,440 --> 01:46:07,700
can't see the tail<font color="#CCCCCC"> when I'm in the</font>

1529
01:46:05,600 --> 01:46:09,110
chopper because they're sitting<font color="#E5E5E5"> on the</font>

1530
01:46:07,700 --> 01:46:11,510
ground<font color="#E5E5E5"> just getting ready to shut it</font>

1531
01:46:09,110 --> 01:46:15,040
down<font color="#E5E5E5"> to that whole tail is more like</font>

1532
01:46:11,510 --> 01:46:18,590
definitely<font color="#E5E5E5"> but I can't see these things</font>

1533
01:46:15,040 --> 01:46:21,110
<font color="#CCCCCC">gotta feel like that like like this</font>

1534
01:46:18,590 --> 01:46:25,790
little choppers especially you get a

1535
01:46:21,110 --> 01:46:36,559
little<font color="#CCCCCC"> gust of wind up on your</font><font color="#E5E5E5"> side</font><font color="#CCCCCC"> yeah</font>

1536
01:46:25,790 --> 01:46:38,990
<font color="#E5E5E5">usually goes you okay other things</font><font color="#CCCCCC"> that</font>

1537
01:46:36,560 --> 01:46:42,440
<font color="#E5E5E5">can</font><font color="#CCCCCC"> be done that make your</font><font color="#E5E5E5"> life</font>

1538
01:46:38,990 --> 01:46:44,728
difficult<font color="#CCCCCC"> a SLR address space layout</font>

1539
01:46:42,440 --> 01:46:47,829
randomization

1540
01:46:44,729 --> 01:46:50,320
here's what gets localized<font color="#E5E5E5"> this is for</font>

1541
01:46:47,829 --> 01:46:50,889
Windows Linux is<font color="#CCCCCC"> slightly</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> on</font>

1542
01:46:50,320 --> 01:46:55,239
<font color="#E5E5E5">here</font>

1543
01:46:50,889 --> 01:46:56,889
they will randomize<font color="#E5E5E5"> they keep what's the</font>

1544
01:46:55,239 --> 01:47:01,150
heat<font color="#E5E5E5"> we haven't talked about that you're</font>

1545
01:46:56,889 --> 01:47:04,749
<font color="#E5E5E5">correct we have not but the heat</font><font color="#CCCCCC"> is the</font>

1546
01:47:01,150 --> 01:47:06,999
other way of allocating said<font color="#E5E5E5"> stack</font>

1547
01:47:04,749 --> 01:47:08,709
variables are sometimes called automatic

1548
01:47:06,999 --> 01:47:13,780
variables<font color="#E5E5E5"> let's go</font>

1549
01:47:08,709 --> 01:47:16,300
integer X this is<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> well that's</font><font color="#E5E5E5"> not</font>

1550
01:47:13,780 --> 01:47:19,360
the best<font color="#E5E5E5"> way to allocate</font><font color="#CCCCCC"> memory</font><font color="#E5E5E5"> if I</font>

1551
01:47:16,300 --> 01:47:22,570
have a lot<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> allocated in fact</font>

1552
01:47:19,360 --> 01:47:29,049
with older systems and compilers means

1553
01:47:22,570 --> 01:47:31,150
dad had a fixed size you want to

1554
01:47:29,050 --> 01:47:33,820
forecast that in case that you actually

1555
01:47:31,150 --> 01:47:37,348
<font color="#E5E5E5">haven't specified some microcontrollers</font>

1556
01:47:33,820 --> 01:47:37,349
you still have to specify

1557
01:47:37,949 --> 01:47:47,138
microcontrollers is like this one has 16

1558
01:47:40,689 --> 01:47:52,959
<font color="#E5E5E5">K of RAM it's huge</font><font color="#CCCCCC"> so you still have to</font>

1559
01:47:47,139 --> 01:47:58,419
<font color="#CCCCCC">specify how much tax base you want so</font>

1560
01:47:52,959 --> 01:48:00,880
the heat<font color="#CCCCCC"> is just big chunks of RAM</font><font color="#E5E5E5"> you</font>

1561
01:47:58,419 --> 01:48:03,189
call a function<font color="#E5E5E5"> like malloc it just</font>

1562
01:48:00,880 --> 01:48:09,669
means memory allocate there are a bunch

1563
01:48:03,189 --> 01:48:14,919
of related<font color="#E5E5E5"> functions in c++ java you</font>

1564
01:48:09,669 --> 01:48:18,099
<font color="#CCCCCC">could use you knew that oh not so much</font>

1565
01:48:14,919 --> 01:48:22,630
<font color="#CCCCCC">to the top sequence</font><font color="#E5E5E5"> you can make a huge</font>

1566
01:48:18,099 --> 01:48:26,409
array of<font color="#E5E5E5"> stuff and when you're creating</font>

1567
01:48:22,630 --> 01:48:30,010
huge items in memory<font color="#CCCCCC"> you</font><font color="#E5E5E5"> will tend to</font>

1568
01:48:26,409 --> 01:48:32,320
<font color="#CCCCCC">use the heap</font><font color="#E5E5E5"> there's some people are</font>

1569
01:48:30,010 --> 01:48:35,110
like I<font color="#CCCCCC"> just never</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> this that</font><font color="#E5E5E5"> problem</font>

1570
01:48:32,320 --> 01:48:37,630
solved well I would refer<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to the</font>

1571
01:48:35,110 --> 01:48:39,400
complete reverse engineering class and

1572
01:48:37,630 --> 01:48:42,099
<font color="#E5E5E5">we'll find out even</font><font color="#CCCCCC"> when you're using</font>

1573
01:48:39,400 --> 01:48:44,259
<font color="#CCCCCC">the heap there are other problems</font><font color="#E5E5E5"> they</font>

1574
01:48:42,099 --> 01:48:47,130
can creep up so just not<font color="#E5E5E5"> using the staff</font>

1575
01:48:44,260 --> 01:48:47,130
doesn't

1576
01:48:48,159 --> 01:48:55,070
stay for<font color="#CCCCCC"> the formats criminal part of</font>

1577
01:48:51,979 --> 01:49:03,260
our<font color="#E5E5E5"> workshops</font><font color="#CCCCCC"> today you realize that oh</font>

1578
01:48:55,070 --> 01:49:05,898
there's even<font color="#CCCCCC"> more thanks okay so it</font>

1579
01:49:03,260 --> 01:49:07,999
randomizes<font color="#E5E5E5"> the heat the stack and these</font>

1580
01:49:05,899 --> 01:49:10,610
other things the pad in the<font color="#CCCCCC"> towel the</font>

1581
01:49:07,999 --> 01:49:12,938
process environment block<font color="#E5E5E5"> and the thread</font>

1582
01:49:10,610 --> 01:49:15,799
environments<font color="#E5E5E5"> like these are just</font>

1583
01:49:12,939 --> 01:49:19,459
structures that Windows uses to keep

1584
01:49:15,800 --> 01:49:22,309
track of<font color="#E5E5E5"> processes and friends do you</font>

1585
01:49:19,459 --> 01:49:25,309
guys know what trends are threads or

1586
01:49:22,309 --> 01:49:26,749
processes inside of a process<font color="#CCCCCC"> you know</font>

1587
01:49:25,309 --> 01:49:31,159
sometimes I call them lightweight

1588
01:49:26,749 --> 01:49:34,219
processes multi-threaded programming is

1589
01:49:31,159 --> 01:49:37,759
a beautiful thing<font color="#CCCCCC"> makes</font><font color="#E5E5E5"> life a lot</font>

1590
01:49:34,219 --> 01:49:40,999
better<font color="#E5E5E5"> makes programming easier that</font>

1591
01:49:37,760 --> 01:49:44,719
makes pretty<font color="#CCCCCC"> programming systems more</font>

1592
01:49:40,999 --> 01:49:48,409
efficient<font color="#CCCCCC"> I remember some years</font><font color="#E5E5E5"> ago I</font>

1593
01:49:44,719 --> 01:49:51,530
<font color="#E5E5E5">was at Purdue studying physics not</font>

1594
01:49:48,409 --> 01:49:53,898
computer science and I<font color="#CCCCCC"> was taking a few</font>

1595
01:49:51,530 --> 01:49:55,909
classes just<font color="#E5E5E5"> for</font><font color="#CCCCCC"> grins</font><font color="#E5E5E5"> no it's taking</font>

1596
01:49:53,899 --> 01:49:59,570
algorithms class<font color="#CCCCCC"> people</font><font color="#E5E5E5"> looking around</font>

1597
01:49:55,909 --> 01:50:01,579
<font color="#E5E5E5">but there's this guy</font><font color="#CCCCCC"> all seniors that</font>

1598
01:49:59,570 --> 01:50:02,808
put it off to the<font color="#E5E5E5"> last semester there</font>

1599
01:50:01,579 --> 01:50:06,049
because they didn't want to take this

1600
01:50:02,809 --> 01:50:07,749
class<font color="#CCCCCC"> I haven't seen you</font><font color="#E5E5E5"> before and I've</font>

1601
01:50:06,050 --> 01:50:11,449
been here for four years

1602
01:50:07,749 --> 01:50:13,070
<font color="#E5E5E5">how are you oh my god grad student in</font>

1603
01:50:11,449 --> 01:50:18,110
physics I'm just taking this for<font color="#CCCCCC"> thought</font>

1604
01:50:13,070 --> 01:50:20,478
<font color="#CCCCCC">like what fun</font><font color="#E5E5E5"> what they remember OS</font>

1605
01:50:18,110 --> 01:50:23,148
class I took<font color="#E5E5E5"> and it was taught by the</font>

1606
01:50:20,479 --> 01:50:25,519
professor<font color="#E5E5E5"> he just got a PhD in</font><font color="#CCCCCC"> computer</font>

1607
01:50:23,149 --> 01:50:28,909
science<font color="#E5E5E5"> and someone asked it about</font>

1608
01:50:25,519 --> 01:50:30,499
threading and he said I can<font color="#E5E5E5"> only give</font>

1609
01:50:28,909 --> 01:50:34,429
you hand waving arguments about

1610
01:50:30,499 --> 01:50:37,969
<font color="#CCCCCC">readiness it's like a research</font><font color="#E5E5E5"> topic and</font>

1611
01:50:34,429 --> 01:50:38,689
I'm like at<font color="#CCCCCC"> the time there's</font><font color="#E5E5E5"> a operating</font>

1612
01:50:37,969 --> 01:50:45,559
<font color="#E5E5E5">system called</font>

1613
01:50:38,689 --> 01:50:48,079
<font color="#CCCCCC">os/2 yeah ran it it was</font><font color="#E5E5E5"> awesome that you</font>

1614
01:50:45,559 --> 01:50:51,050
know I'm talking to the Red Hat guys the

1615
01:50:48,079 --> 01:50:54,679
other<font color="#E5E5E5"> day</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> like I just</font><font color="#CCCCCC"> hoped it IDM</font>

1616
01:50:51,050 --> 01:50:56,739
doesn't do<font color="#CCCCCC"> to Red Hat what it did OS</font><font color="#E5E5E5"> to</font>

1617
01:50:54,679 --> 01:51:01,059
you and some other things

1618
01:50:56,739 --> 01:51:02,409
I know this<font color="#E5E5E5"> being</font><font color="#CCCCCC"> recorded so I'm not</font>

1619
01:51:01,059 --> 01:51:05,949
going<font color="#E5E5E5"> to say too much</font><font color="#CCCCCC"> more about I</font><font color="#E5E5E5"> feel</font>

1620
01:51:02,409 --> 01:51:07,989
like<font color="#E5E5E5"> sometimes they take successful</font>

1621
01:51:05,949 --> 01:51:11,759
<font color="#CCCCCC">venturers and make it a little less</font>

1622
01:51:07,989 --> 01:51:14,259
successful<font color="#E5E5E5"> hopefully that doesn't happen</font>

1623
01:51:11,760 --> 01:51:16,929
you know oh it's<font color="#E5E5E5"> to have been out</font><font color="#CCCCCC"> for</font>

1624
01:51:14,260 --> 01:51:19,239
years at that<font color="#CCCCCC"> point</font><font color="#E5E5E5"> and if people</font><font color="#CCCCCC"> are</font>

1625
01:51:16,929 --> 01:51:22,949
running always<font color="#CCCCCC"> like and waving</font><font color="#E5E5E5"> argument</font>

1626
01:51:19,239 --> 01:51:27,209
<font color="#CCCCCC">this</font><font color="#E5E5E5"> guy is not in touch with reality</font>

1627
01:51:22,949 --> 01:51:29,938
<font color="#E5E5E5">get should be an operating</font><font color="#CCCCCC"> system all</font>

1628
01:51:27,209 --> 01:51:32,709
<font color="#CCCCCC">most</font><font color="#E5E5E5"> two programmers are like</font><font color="#CCCCCC"> physicists</font>

1629
01:51:29,939 --> 01:51:34,769
every wants to hire<font color="#E5E5E5"> him not</font><font color="#CCCCCC"> to program</font>

1630
01:51:32,709 --> 01:51:37,119
<font color="#E5E5E5">always</font><font color="#CCCCCC"> good well definitely not today</font>

1631
01:51:34,769 --> 01:51:40,149
<font color="#E5E5E5">but even back then you can still buy</font>

1632
01:51:37,119 --> 01:51:42,669
honesty<font color="#E5E5E5"> but why do</font><font color="#CCCCCC"> people want</font><font color="#E5E5E5"> to hire</font>

1633
01:51:40,149 --> 01:51:44,829
<font color="#E5E5E5">all those two careers because</font><font color="#CCCCCC"> they</font>

1634
01:51:42,669 --> 01:51:47,199
<font color="#CCCCCC">understood</font><font color="#E5E5E5"> it things like hot to drink</font>

1635
01:51:44,829 --> 01:51:50,049
<font color="#E5E5E5">or</font><font color="#CCCCCC"> programming things ready for any</font>

1636
01:51:47,199 --> 01:51:52,409
better than other people<font color="#CCCCCC"> hope</font><font color="#E5E5E5"> it's a</font>

1637
01:51:50,049 --> 01:51:58,929
<font color="#E5E5E5">good one</font>

1638
01:51:52,409 --> 01:52:03,728
so this was introduced in Vista done<font color="#E5E5E5"> not</font>

1639
01:51:58,929 --> 01:52:05,349
enabled<font color="#CCCCCC"> by default the other thing you</font>

1640
01:52:03,729 --> 01:52:08,739
should<font color="#E5E5E5"> know is the 32-bit</font>

1641
01:52:05,349 --> 01:52:12,969
<font color="#E5E5E5">implementations are not the best what is</font>

1642
01:52:08,739 --> 01:52:17,318
that there's only a few<font color="#CCCCCC"> bits that you</font>

1643
01:52:12,969 --> 01:52:20,609
can randomize<font color="#E5E5E5"> in this situation you got</font>

1644
01:52:17,319 --> 01:52:23,169
32 bits you're like<font color="#E5E5E5"> why it's 32 bit no</font>

1645
01:52:20,609 --> 01:52:28,059
because of all their limitations you

1646
01:52:23,169 --> 01:52:32,189
<font color="#E5E5E5">really have</font><font color="#CCCCCC"> about 12 bills and even then</font>

1647
01:52:28,059 --> 01:52:38,339
it's somewhat predictable

1648
01:52:32,189 --> 01:52:42,429
yeah there's four<font color="#E5E5E5"> places it might land</font>

1649
01:52:38,339 --> 01:52:44,859
so I'm gonna guess and if I run

1650
01:52:42,429 --> 01:52:49,209
something<font color="#E5E5E5"> enough times just guessing I</font>

1651
01:52:44,859 --> 01:52:58,530
don't<font color="#CCCCCC"> get it so there are some</font><font color="#E5E5E5"> things</font>

1652
01:52:49,209 --> 01:52:58,530
<font color="#E5E5E5">that you and the other one is staff</font>

1653
01:52:58,600 --> 01:53:06,980
so what is the<font color="#CCCCCC"> stacking area it's a</font>

1654
01:53:01,190 --> 01:53:07,790
known value that you put on let's start

1655
01:53:06,980 --> 01:53:12,559
<font color="#CCCCCC">with a canary</font>

1656
01:53:07,790 --> 01:53:14,450
what is a canary<font color="#CCCCCC"> it's kind of bird what</font>

1657
01:53:12,560 --> 01:53:14,900
is the canary useful or used to<font color="#E5E5E5"> be</font>

1658
01:53:14,450 --> 01:53:18,950
<font color="#CCCCCC">useful</font>

1659
01:53:14,900 --> 01:53:19,969
Oh<font color="#E5E5E5"> in this area is still coal mining so</font>

1660
01:53:18,950 --> 01:53:21,769
the coal mines

1661
01:53:19,970 --> 01:53:25,400
you know<font color="#E5E5E5"> there's none</font><font color="#CCCCCC"> of those around</font>

1662
01:53:21,770 --> 01:53:33,590
<font color="#E5E5E5">here right what do you use a canary for</font>

1663
01:53:25,400 --> 01:53:35,299
<font color="#E5E5E5">coal mine to</font><font color="#CCCCCC"> see if</font><font color="#E5E5E5"> it dies even today</font>

1664
01:53:33,590 --> 01:53:37,370
it places where they don't have coal

1665
01:53:35,300 --> 01:53:41,720
money<font color="#E5E5E5"> if you go to a water treatment</font>

1666
01:53:37,370 --> 01:53:44,480
plant<font color="#E5E5E5"> they often</font><font color="#CCCCCC"> have some fish you have</font>

1667
01:53:41,720 --> 01:53:47,510
some fish that<font color="#CCCCCC"> are very sensitive to</font>

1668
01:53:44,480 --> 01:53:51,080
<font color="#CCCCCC">certain impurities and what and watch</font>

1669
01:53:47,510 --> 01:53:52,700
those<font color="#E5E5E5"> fish those fish dock it shut</font><font color="#CCCCCC"> off</font>

1670
01:53:51,080 --> 01:53:58,400
the water<font color="#E5E5E5"> supply</font><font color="#CCCCCC"> eel</font>

1671
01:53:52,700 --> 01:54:00,230
something bad is gonna do stuff like

1672
01:53:58,400 --> 01:54:02,960
<font color="#CCCCCC">that around</font><font color="#E5E5E5"> here</font><font color="#CCCCCC"> it's some stories last</font>

1673
01:54:00,230 --> 01:54:05,450
night about some incidents<font color="#E5E5E5"> and some</font>

1674
01:54:02,960 --> 01:54:07,880
locals being Donald<font color="#E5E5E5"> I think people come</font>

1675
01:54:05,450 --> 01:54:15,260
to hacker<font color="#E5E5E5"> Colin and taking a shower at</font>

1676
01:54:07,880 --> 01:54:19,040
this hotel and<font color="#CCCCCC"> enough red</font><font color="#E5E5E5"> so canary is</font>

1677
01:54:15,260 --> 01:54:23,540
just there to<font color="#E5E5E5"> tell you hey something's</font>

1678
01:54:19,040 --> 01:54:27,490
wrong<font color="#CCCCCC"> a ABA sometimes</font><font color="#E5E5E5"> they'll talk</font>

1679
01:54:23,540 --> 01:54:27,490
about canary or<font color="#E5E5E5"> actually</font><font color="#CCCCCC"> peri</font>

1680
01:54:27,670 --> 01:54:34,820
transponder<font color="#CCCCCC"> just</font><font color="#E5E5E5"> oh yeah I'm over here</font>

1681
01:54:30,490 --> 01:54:39,380
<font color="#E5E5E5">it's kind of like a community different</font>

1682
01:54:34,820 --> 01:54:42,559
kinds of Canaries you<font color="#E5E5E5"> can have so canary</font>

1683
01:54:39,380 --> 01:54:51,610
is used to detect some sort of tenant<font color="#E5E5E5"> so</font>

1684
01:54:42,560 --> 01:54:53,360
you can have a terminator<font color="#E5E5E5"> get to the top</font>

1685
01:54:51,610 --> 01:54:56,809
<font color="#E5E5E5">we'll do that later</font>

1686
01:54:53,360 --> 01:55:00,679
<font color="#E5E5E5">scared each other I don't</font><font color="#CCCCCC"> think I get</font>

1687
01:54:56,810 --> 01:55:03,239
<font color="#E5E5E5">rid of top come to bloom</font><font color="#CCCCCC"> cut</font>

1688
01:55:00,679 --> 01:55:06,329
we'll get you to<font color="#E5E5E5"> the chopper after</font><font color="#CCCCCC"> Libra</font>

1689
01:55:03,239 --> 01:55:08,218
<font color="#CCCCCC">by the way</font><font color="#E5E5E5"> Luke on March 20 1933 coming</font>

1690
01:55:06,329 --> 01:55:12,688
up with<font color="#CCCCCC"> Burke</font><font color="#E5E5E5"> Pennsylvania</font><font color="#CCCCCC"> lovely have</font>

1691
01:55:08,219 --> 01:55:15,719
you<font color="#CCCCCC"> 20 boxer tickets right now 21</font><font color="#E5E5E5"> your</font>

1692
01:55:12,689 --> 01:55:22,979
student<font color="#CCCCCC"> marshal talked to bill Gardner</font>

1693
01:55:15,719 --> 01:55:26,929
and I told my cookie<font color="#E5E5E5"> so a terminator</font>

1694
01:55:22,979 --> 01:55:30,899
canary<font color="#E5E5E5"> is just there</font><font color="#CCCCCC"> to prevent you</font><font color="#E5E5E5"> from</font>

1695
01:55:26,929 --> 01:55:33,959
putting stuff on the stack and<font color="#CCCCCC"> then</font>

1696
01:55:30,899 --> 01:55:36,689
there's a<font color="#E5E5E5"> random</font><font color="#CCCCCC"> Canaria it doesn't</font>

1697
01:55:33,959 --> 01:55:41,938
prevent stir<font color="#E5E5E5"> coffee and things like it</font>

1698
01:55:36,689 --> 01:55:48,209
from<font color="#E5E5E5"> working but it's</font><font color="#CCCCCC"> detected it's a</font>

1699
01:55:41,939 --> 01:55:54,389
little bit harder<font color="#CCCCCC"> to deal with Microsoft</font>

1700
01:55:48,209 --> 01:56:00,199
<font color="#CCCCCC">Visual Studio introduced disability and</font>

1701
01:55:54,389 --> 01:56:04,649
way<font color="#E5E5E5"> back there</font><font color="#CCCCCC"> have this GS which</font>

1702
01:56:00,199 --> 01:56:12,989
enables Canaries it was introduced<font color="#E5E5E5"> in</font>

1703
01:56:04,649 --> 01:56:21,840
2003 and was not<font color="#E5E5E5"> enabled until</font><font color="#CCCCCC"> 2005 so</font>

1704
01:56:12,989 --> 01:56:31,438
that's a<font color="#E5E5E5"> stack so how do</font><font color="#CCCCCC"> I mitigate some</font>

1705
01:56:21,840 --> 01:56:39,019
of these things<font color="#CCCCCC"> ASLR I can use a few</font>

1706
01:56:31,439 --> 01:56:43,050
<font color="#E5E5E5">different</font><font color="#CCCCCC"> techniques in order to</font>

1707
01:56:39,019 --> 01:56:45,809
<font color="#CCCCCC">mitigate this so let's go back to what</font>

1708
01:56:43,050 --> 01:56:53,710
we just<font color="#E5E5E5"> did we use a jump ESP</font>

1709
01:56:45,809 --> 01:56:57,910
instruction we found it in a<font color="#CCCCCC"> library</font><font color="#E5E5E5"> so</font>

1710
01:56:53,710 --> 01:57:01,330
what am I gonna<font color="#E5E5E5"> do now the libraries are</font>

1711
01:56:57,910 --> 01:57:05,200
loaded in random places<font color="#CCCCCC"> there that mode</font>

1712
01:57:01,330 --> 01:57:07,840
<font color="#E5E5E5">into the same things</font><font color="#CCCCCC"> every time there</font>

1713
01:57:05,200 --> 01:57:11,679
are<font color="#CCCCCC"> a couple of solutions</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> this</font>

1714
01:57:07,840 --> 01:57:13,900
problem<font color="#E5E5E5"> one of</font><font color="#CCCCCC"> them is to use</font><font color="#E5E5E5"> what in</font>

1715
01:57:11,680 --> 01:57:16,210
the<font color="#CCCCCC"> linux world is called a plq</font>

1716
01:57:13,900 --> 01:57:20,549
procedural linkage<font color="#E5E5E5"> tables</font><font color="#CCCCCC"> called</font>

1717
01:57:16,210 --> 01:57:24,850
<font color="#E5E5E5">something something different</font><font color="#CCCCCC"> they</font><font color="#E5E5E5"> don't</font>

1718
01:57:20,550 --> 01:57:27,910
you don't care and here's the way it

1719
01:57:24,850 --> 01:57:32,830
works<font color="#CCCCCC"> whenever I have a library function</font>

1720
01:57:27,910 --> 01:57:37,090
that's being called in my program in the

1721
01:57:32,830 --> 01:57:41,080
space where<font color="#E5E5E5"> I have my main program it</font>

1722
01:57:37,090 --> 01:57:49,080
will create this table<font color="#CCCCCC"> that says I</font><font color="#E5E5E5"> want</font>

1723
01:57:41,080 --> 01:57:51,640
to call<font color="#E5E5E5"> stir copy in</font><font color="#CCCCCC"> MSV CRT where is it</font>

1724
01:57:49,080 --> 01:57:54,610
so instead of<font color="#E5E5E5"> calling stir</font><font color="#CCCCCC"> coffee</font>

1725
01:57:51,640 --> 01:57:59,290
<font color="#E5E5E5">directly what happens is it creates this</font>

1726
01:57:54,610 --> 01:58:02,049
table in memory and then when it loads

1727
01:57:59,290 --> 01:58:08,290
<font color="#E5E5E5">everything in memory it says let me fix</font>

1728
01:58:02,050 --> 01:58:11,110
this say for this<font color="#E5E5E5"> version of this</font>

1729
01:58:08,290 --> 01:58:15,370
<font color="#CCCCCC">program</font><font color="#E5E5E5"> it ran right now this is where I</font>

1730
01:58:11,110 --> 01:58:19,839
<font color="#E5E5E5">can find</font><font color="#CCCCCC"> it's dirty so you</font><font color="#E5E5E5"> can attack</font>

1731
01:58:15,370 --> 01:58:22,630
<font color="#CCCCCC">that you can</font><font color="#E5E5E5"> read the table</font><font color="#CCCCCC"> on the table</font>

1732
01:58:19,840 --> 01:58:25,210
<font color="#CCCCCC">and you're like oh</font><font color="#E5E5E5"> no I</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> I know</font><font color="#CCCCCC"> what</font>

1733
01:58:22,630 --> 01:58:27,750
it<font color="#E5E5E5"> is now I can do some other stuff it's</font>

1734
01:58:25,210 --> 01:58:32,170
a<font color="#E5E5E5"> little complicated but you can do</font><font color="#CCCCCC"> it</font>

1735
01:58:27,750 --> 01:58:36,210
you can<font color="#E5E5E5"> also do something called</font><font color="#CCCCCC"> return</font>

1736
01:58:32,170 --> 01:58:41,200
<font color="#CCCCCC">oriented programming or rock or rope</font>

1737
01:58:36,210 --> 01:58:44,470
<font color="#E5E5E5">depending on</font><font color="#CCCCCC"> the glass and we'll get</font>

1738
01:58:41,200 --> 01:58:46,150
into that a little bit or<font color="#CCCCCC"> you can brute</font>

1739
01:58:44,470 --> 01:58:49,060
force it<font color="#CCCCCC"> you said that there</font><font color="#E5E5E5"> are only a</font>

1740
01:58:46,150 --> 01:58:51,639
<font color="#CCCCCC">few choices that are available</font><font color="#E5E5E5"> and you</font>

1741
01:58:49,060 --> 01:58:54,700
<font color="#CCCCCC">can group forced your way into</font><font color="#E5E5E5"> it so you</font>

1742
01:58:51,640 --> 01:58:59,080
might say<font color="#CCCCCC"> well how</font><font color="#E5E5E5"> would I do that</font><font color="#CCCCCC"> if I</font>

1743
01:58:54,700 --> 01:59:00,610
know<font color="#E5E5E5"> for this version of this</font><font color="#CCCCCC"> DLL what</font>

1744
01:58:59,080 --> 01:59:05,489
the offset is

1745
01:59:00,610 --> 01:59:09,250
to stir copy that never changes

1746
01:59:05,489 --> 01:59:11,919
the base address with vll gets loaded is

1747
01:59:09,250 --> 01:59:14,440
going to<font color="#E5E5E5"> change the offset</font><font color="#CCCCCC"> never changes</font>

1748
01:59:11,920 --> 01:59:19,719
<font color="#CCCCCC">just what</font><font color="#E5E5E5"> I could do</font><font color="#CCCCCC"> I can search</font>

1749
01:59:14,440 --> 01:59:21,549
through<font color="#E5E5E5"> that</font><font color="#CCCCCC"> vll</font><font color="#E5E5E5"> and I can say oh I went</font>

1750
01:59:19,719 --> 01:59:31,420
<font color="#E5E5E5">to this offset this looks like the</font>

1751
01:59:21,550 --> 01:59:35,380
<font color="#E5E5E5">starter stir copy great solved so let's</font>

1752
01:59:31,420 --> 01:59:41,040
talk a<font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit about rope return</font>

1753
01:59:35,380 --> 01:59:46,630
oriented<font color="#E5E5E5"> program execution how does this</font>

1754
01:59:41,040 --> 01:59:52,119
you build the function you<font color="#E5E5E5"> want so what</font>

1755
01:59:46,630 --> 01:59:59,800
<font color="#CCCCCC">you do is you look for code immediately</font>

1756
01:59:52,119 --> 02:00:02,830
<font color="#CCCCCC">before a return instruction and</font><font color="#E5E5E5"> you can</font>

1757
01:59:59,800 --> 02:00:07,230
say this<font color="#E5E5E5"> is how</font><font color="#CCCCCC"> many lights back from a</font>

1758
02:00:02,830 --> 02:00:14,860
return I want<font color="#CCCCCC"> to go oh I wanted to</font><font color="#E5E5E5"> load</font>

1759
02:00:07,230 --> 02:00:21,849
the value 4 into EAS I wanted to add 40

1760
02:00:14,860 --> 02:00:27,900
hands<font color="#E5E5E5"> or I wanted to jump to ESP her</font><font color="#CCCCCC"> EBX</font>

1761
02:00:21,850 --> 02:00:27,900
<font color="#CCCCCC">are wooda right I wanted</font><font color="#E5E5E5"> to do something</font>

1762
02:00:27,960 --> 02:00:33,659
<font color="#E5E5E5">build the function that</font><font color="#CCCCCC"> I would want</font>

1763
02:00:30,969 --> 02:00:37,179
and so I build it using what I call

1764
02:00:33,659 --> 02:00:41,650
<font color="#E5E5E5">gadgets</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> gadget is just a couple of</font>

1765
02:00:37,179 --> 02:00:46,119
assembly instructions<font color="#E5E5E5"> that precede a</font>

1766
02:00:41,650 --> 02:00:47,879
return so I look through<font color="#CCCCCC"> the Kohen</font><font color="#E5E5E5"> and</font>

1767
02:00:46,119 --> 02:00:50,170
what<font color="#E5E5E5"> code do I want to look through I</font>

1768
02:00:47,880 --> 02:00:57,610
probably want to<font color="#E5E5E5"> look to the library</font>

1769
02:00:50,170 --> 02:01:01,690
code why not the actual program know

1770
02:00:57,610 --> 02:01:05,019
what<font color="#E5E5E5"> the address library code my little</font>

1771
02:01:01,690 --> 02:01:06,580
boy unless you pick<font color="#CCCCCC"> badly something that</font>

1772
02:01:05,020 --> 02:01:08,739
<font color="#E5E5E5">just happens to have an embedded null</font>

1773
02:01:06,580 --> 02:01:12,360
<font color="#E5E5E5">somewhere in that just won't find</font>

1774
02:01:08,739 --> 02:01:12,360
<font color="#CCCCCC">another one I'll use that</font>

1775
02:01:12,720 --> 02:01:18,150
so what you do is you<font color="#CCCCCC"> use one of these</font>

1776
02:01:16,480 --> 02:01:21,610
tools and<font color="#E5E5E5"> I've listened to a couple here</font>

1777
02:01:18,150 --> 02:01:26,980
what's called<font color="#CCCCCC"> RP plus plus</font><font color="#E5E5E5"> this called</font>

1778
02:01:21,610 --> 02:01:30,610
<font color="#E5E5E5">wrote me</font><font color="#CCCCCC"> wop gadget our P plus plus is</font>

1779
02:01:26,980 --> 02:01:34,469
my preferred tool tool<font color="#CCCCCC"> I just use that</font>

1780
02:01:30,610 --> 02:01:36,700
tool and it'll search through a<font color="#E5E5E5"> program</font>

1781
02:01:34,470 --> 02:01:38,440
and they'll say<font color="#CCCCCC"> all right well let me</font>

1782
02:01:36,700 --> 02:01:41,860
look through all the<font color="#E5E5E5"> different memory</font>

1783
02:01:38,440 --> 02:01:44,500
segments<font color="#E5E5E5"> and look for return addresses</font>

1784
02:01:41,860 --> 02:01:47,320
and three instructions<font color="#E5E5E5"> up to three</font>

1785
02:01:44,500 --> 02:01:50,460
instructions it'll<font color="#E5E5E5"> tell you here's all</font>

1786
02:01:47,320 --> 02:01:52,840
these places<font color="#E5E5E5"> and here's what is there</font>

1787
02:01:50,460 --> 02:01:57,370
these<font color="#E5E5E5"> three instructions were</font><font color="#CCCCCC"> there</font>

1788
02:01:52,840 --> 02:02:02,200
great and you just build<font color="#E5E5E5"> a part like</font>

1789
02:01:57,370 --> 02:02:08,890
<font color="#CCCCCC">that</font><font color="#E5E5E5"> so what do you do you put on</font><font color="#CCCCCC"> your</font>

1790
02:02:02,200 --> 02:02:10,929
<font color="#CCCCCC">staff a lot so you build this whole</font>

1791
02:02:08,890 --> 02:02:23,800
<font color="#CCCCCC">spring of function calls okay you're</font>

1792
02:02:10,930 --> 02:02:25,330
gonna come here you return<font color="#CCCCCC"> no this is</font>

1793
02:02:23,800 --> 02:02:27,370
<font color="#E5E5E5">gonna be a little hard if you</font><font color="#CCCCCC"> don't know</font>

1794
02:02:25,330 --> 02:02:31,660
is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> there you don't know if</font>

1795
02:02:27,370 --> 02:02:33,099
something very loud it's<font color="#CCCCCC"> gonna be kind</font>

1796
02:02:31,660 --> 02:02:34,750
of difficult<font color="#CCCCCC"> it's like I don't know this</font>

1797
02:02:33,100 --> 02:02:40,420
language but<font color="#E5E5E5"> I want to build programs</font><font color="#CCCCCC"> in</font>

1798
02:02:34,750 --> 02:02:44,080
<font color="#CCCCCC">it if you</font><font color="#E5E5E5"> really don't know assembly</font>

1799
02:02:40,420 --> 02:02:46,380
then a tool like<font color="#E5E5E5"> RP plus plus is your</font>

1800
02:02:44,080 --> 02:02:52,420
best bet<font color="#E5E5E5"> there's</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> link here get it on</font>

1801
02:02:46,380 --> 02:02:55,300
github<font color="#CCCCCC"> you can manually search through</font>

1802
02:02:52,420 --> 02:02:56,100
code sometimes you'll do a little<font color="#E5E5E5"> bit</font>

1803
02:02:55,300 --> 02:03:03,430
better

1804
02:02:56,100 --> 02:03:06,490
<font color="#E5E5E5">it was sounds like very hairy canary is</font>

1805
02:03:03,430 --> 02:03:09,130
<font color="#E5E5E5">uh making a little noise today</font><font color="#CCCCCC"> yesterday</font>

1806
02:03:06,490 --> 02:03:12,179
<font color="#CCCCCC">she was really quiet</font><font color="#E5E5E5"> most of the day</font>

1807
02:03:09,130 --> 02:03:15,330
every evening<font color="#E5E5E5"> she started getting me wow</font>

1808
02:03:12,180 --> 02:03:17,410
it's trying to talk to my<font color="#CCCCCC"> kids lucky</font>

1809
02:03:15,330 --> 02:03:20,040
<font color="#CCCCCC">telling someone you hear that in the</font>

1810
02:03:17,410 --> 02:03:24,820
alley<font color="#CCCCCC"> that's actually</font><font color="#E5E5E5"> not a cat</font>

1811
02:03:20,040 --> 02:03:29,590
it's a bird<font color="#CCCCCC"> alright so you could</font>

1812
02:03:24,820 --> 02:03:30,540
manually do this stuff as well if you're

1813
02:03:29,590 --> 02:03:32,350
gonna do<font color="#E5E5E5"> it manually</font>

1814
02:03:30,540 --> 02:03:35,130
<font color="#E5E5E5">you're getting a little bit better</font>

1815
02:03:32,350 --> 02:03:37,450
understanding<font color="#CCCCCC"> here doing this on Linux</font>

1816
02:03:35,130 --> 02:03:40,210
<font color="#CCCCCC">you can use the tool like pops don't</font>

1817
02:03:37,450 --> 02:03:42,730
<font color="#E5E5E5">there should be little</font><font color="#CCCCCC"> disassembled</font>

1818
02:03:40,210 --> 02:03:44,740
things<font color="#E5E5E5"> there are some caveats we do</font>

1819
02:03:42,730 --> 02:03:53,259
<font color="#E5E5E5">static this is some ways like that</font><font color="#CCCCCC"> if</font>

1820
02:03:44,740 --> 02:03:55,510
you have self-modifying<font color="#CCCCCC"> pull all right a</font>

1821
02:03:53,260 --> 02:03:58,870
<font color="#E5E5E5">little bit about stack Canaries just</font>

1822
02:03:55,510 --> 02:04:02,410
about how<font color="#E5E5E5"> you put</font><font color="#CCCCCC"> on the stack</font><font color="#E5E5E5"> it's not</font>

1823
02:03:58,870 --> 02:04:06,760
a return address<font color="#CCCCCC"> or an argument and what</font>

1824
02:04:02,410 --> 02:04:11,730
happens<font color="#E5E5E5"> if you have step Canaries it'll</font>

1825
02:04:06,760 --> 02:04:14,350
put a little preamble<font color="#CCCCCC"> log every function</font>

1826
02:04:11,730 --> 02:04:17,110
where it's going<font color="#E5E5E5"> to say oh you're</font>

1827
02:04:14,350 --> 02:04:19,690
<font color="#E5E5E5">calling this</font><font color="#CCCCCC"> function let me put this</font>

1828
02:04:17,110 --> 02:04:24,360
<font color="#CCCCCC">stuff on</font><font color="#E5E5E5"> the stack and I'm</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> return</font>

1829
02:04:19,690 --> 02:04:24,360
<font color="#E5E5E5">let me make sure you didn't screw it up</font>

1830
02:04:24,870 --> 02:04:33,450
so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a compiler function we're</font>

1831
02:04:31,120 --> 02:04:42,550
talking about non-executable stacks<font color="#CCCCCC"> that</font>

1832
02:04:33,450 --> 02:04:46,630
<font color="#CCCCCC">isn't operate</font><font color="#E5E5E5"> again</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> common types</font>

1833
02:04:42,550 --> 02:04:51,430
<font color="#E5E5E5">terminator random so what's an example</font>

1834
02:04:46,630 --> 02:04:53,910
of a terminator<font color="#CCCCCC"> this is not the only</font>

1835
02:04:51,430 --> 02:04:58,770
<font color="#E5E5E5">terminator you could use but you know</font>

1836
02:04:53,910 --> 02:05:04,930
it's<font color="#CCCCCC"> probably this</font><font color="#E5E5E5"> rearrangement somehow</font>

1837
02:04:58,770 --> 02:05:08,110
<font color="#CCCCCC">zero zero zero a zero the F F so what</font>

1838
02:05:04,930 --> 02:05:10,930
happens<font color="#E5E5E5"> every</font><font color="#CCCCCC"> one of these</font><font color="#E5E5E5"> bytes will</font>

1839
02:05:08,110 --> 02:05:16,750
cause an issue<font color="#CCCCCC"> for</font><font color="#E5E5E5"> colony to camp</font>

1840
02:05:10,930 --> 02:05:19,120
<font color="#E5E5E5">program some function the null byte stir</font>

1841
02:05:16,750 --> 02:05:25,180
copy and related functions will go whoa

1842
02:05:19,120 --> 02:05:29,620
<font color="#CCCCCC">no</font><font color="#E5E5E5"> bike I'm done I'm going to stop right</font>

1843
02:05:25,180 --> 02:05:32,639
gets gets trained in similar functions

1844
02:05:29,620 --> 02:05:36,659
are blocked<font color="#E5E5E5"> by a new line</font>

1845
02:05:32,639 --> 02:05:48,389
now it good<font color="#E5E5E5"> operating systems and you</font>

1846
02:05:36,659 --> 02:05:53,869
<font color="#CCCCCC">Linus</font><font color="#E5E5E5"> 1x0 me hey there's it 0d i want to</font>

1847
02:05:48,389 --> 02:05:56,420
<font color="#E5E5E5">say zero</font><font color="#CCCCCC"> away and then there's windows</font>

1848
02:05:53,869 --> 02:05:59,639
<font color="#E5E5E5">you probably encountered this before</font>

1849
02:05:56,420 --> 02:06:02,010
<font color="#CCCCCC">you're looking at a text file you're</font>

1850
02:05:59,639 --> 02:06:02,639
like why does every line go off<font color="#CCCCCC"> to</font>

1851
02:06:02,010 --> 02:06:06,330
infinity

1852
02:06:02,639 --> 02:06:08,989
it's because it was<font color="#E5E5E5"> edited on something</font>

1853
02:06:06,330 --> 02:06:08,989
other<font color="#CCCCCC"> than you guys</font>

1854
02:06:09,050 --> 02:06:15,980
<font color="#CCCCCC">Dossett windows are the only</font><font color="#E5E5E5"> operating</font>

1855
02:06:11,580 --> 02:06:20,670
systems to do carry to return line feed

1856
02:06:15,980 --> 02:06:22,949
<font color="#E5E5E5">organelle so just so</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> done so</font>

1857
02:06:20,670 --> 02:06:29,340
those two characters are going<font color="#E5E5E5"> to cause</font>

1858
02:06:22,949 --> 02:06:37,250
problems<font color="#E5E5E5"> for things like</font><font color="#CCCCCC"> jets</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> oh</font>

1859
02:06:29,340 --> 02:06:38,369
you can ever and what<font color="#E5E5E5"> about</font><font color="#CCCCCC"> FF file</font>

1860
02:06:37,250 --> 02:06:40,949
functionals

1861
02:06:38,369 --> 02:06:46,110
will interpret that as an<font color="#CCCCCC"> end of file</font>

1862
02:06:40,949 --> 02:06:49,349
marker so you<font color="#CCCCCC"> know there's</font><font color="#E5E5E5"> something for</font>

1863
02:06:46,110 --> 02:06:52,469
everybody<font color="#E5E5E5"> it's an equal opportunity</font>

1864
02:06:49,350 --> 02:06:56,219
offender<font color="#E5E5E5"> some people are like that</font>

1865
02:06:52,469 --> 02:07:03,179
<font color="#CCCCCC">especially people</font><font color="#E5E5E5"> never separate it's a</font>

1866
02:06:56,219 --> 02:07:05,040
goal I try to offend everybody equal now

1867
02:07:03,179 --> 02:07:08,340
here's what's wrong with<font color="#E5E5E5"> it if it's a</font>

1868
02:07:05,040 --> 02:07:09,589
static value can I search<font color="#CCCCCC"> for a static</font>

1869
02:07:08,340 --> 02:07:15,079
<font color="#CCCCCC">value</font>

1870
02:07:09,589 --> 02:07:21,469
yeah that's<font color="#E5E5E5"> pretty easy can I overwrite</font>

1871
02:07:15,079 --> 02:07:25,789
the static value with itself yeah<font color="#E5E5E5"> you</font>

1872
02:07:21,469 --> 02:07:29,329
possibly do<font color="#CCCCCC"> that again</font><font color="#E5E5E5"> think back</font><font color="#CCCCCC"> to the</font>

1873
02:07:25,789 --> 02:07:33,648
earlier discussion<font color="#CCCCCC"> we had</font><font color="#E5E5E5"> you said if I</font>

1874
02:07:29,329 --> 02:07:36,619
have a problem where I can't use

1875
02:07:33,649 --> 02:07:38,929
something like jump<font color="#CCCCCC"> ESP I have enough</font>

1876
02:07:36,619 --> 02:07:39,499
<font color="#E5E5E5">space I can put my shellcode on the</font>

1877
02:07:38,929 --> 02:07:42,979
stack

1878
02:07:39,499 --> 02:07:47,510
I can<font color="#CCCCCC"> possibly</font><font color="#E5E5E5"> put myself out of the</font>

1879
02:07:42,979 --> 02:07:51,879
stack and overwrite the step canary<font color="#E5E5E5"> with</font>

1880
02:07:47,510 --> 02:07:51,879
us that<font color="#E5E5E5"> canary</font><font color="#CCCCCC"> right done</font>

1881
02:07:52,089 --> 02:07:59,359
in fact<font color="#E5E5E5"> when Microsoft first added this</font>

1882
02:07:56,239 --> 02:08:03,098
protection<font color="#E5E5E5"> they made it worse they made</font>

1883
02:07:59,359 --> 02:08:12,589
<font color="#E5E5E5">it easier to</font><font color="#CCCCCC"> exploit programs compiled</font>

1884
02:08:03,099 --> 02:08:16,699
with<font color="#CCCCCC"> their until they fix ok</font><font color="#E5E5E5"> random</font>

1885
02:08:12,589 --> 02:08:21,079
canary doesn't<font color="#E5E5E5"> stop things it just</font>

1886
02:08:16,699 --> 02:08:24,438
detects<font color="#E5E5E5"> it's like that LifeLock</font>

1887
02:08:21,079 --> 02:08:26,629
<font color="#CCCCCC">commercial life</font><font color="#E5E5E5"> they stir on in this you</font>

1888
02:08:24,439 --> 02:08:30,079
guys<font color="#E5E5E5"> know what I'm talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it's</font>

1889
02:08:26,629 --> 02:08:34,129
like<font color="#E5E5E5"> the</font><font color="#CCCCCC"> dart of the bed you are being</font>

1890
02:08:30,079 --> 02:08:38,989
robbed<font color="#CCCCCC"> why don't you do something</font>

1891
02:08:34,129 --> 02:08:42,818
I only detect<font color="#CCCCCC"> I don't stop things</font><font color="#E5E5E5"> that's</font>

1892
02:08:38,989 --> 02:08:46,129
a random canary you are being hacked

1893
02:08:42,819 --> 02:08:48,199
<font color="#CCCCCC">ok thank you</font><font color="#E5E5E5"> thank you for telling I</font>

1894
02:08:46,129 --> 02:08:53,530
guess it's intrusion to<font color="#E5E5E5"> tax</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> not</font>

1895
02:08:48,199 --> 02:08:56,409
<font color="#CCCCCC">venture that's</font><font color="#E5E5E5"> a topic for another</font><font color="#CCCCCC"> day a</font>

1896
02:08:53,530 --> 02:09:00,228
lot harder<font color="#E5E5E5"> to work though isn't it</font><font color="#CCCCCC"> I</font>

1897
02:08:56,409 --> 02:09:03,679
don't<font color="#CCCCCC"> have a static value so now if I'm</font>

1898
02:09:00,229 --> 02:09:07,159
<font color="#E5E5E5">trying to put my code in that</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> I'm</font>

1899
02:09:03,679 --> 02:09:09,789
<font color="#E5E5E5">trying to say</font><font color="#CCCCCC"> I'm not gonna overwrite</font>

1900
02:09:07,159 --> 02:09:14,329
this I'm<font color="#E5E5E5"> gonna put my</font><font color="#CCCCCC"> shellcode in there</font>

1901
02:09:09,789 --> 02:09:16,509
great<font color="#E5E5E5"> you're like no it is it's not me</font>

1902
02:09:14,329 --> 02:09:22,849
<font color="#CCCCCC">sir</font>

1903
02:09:16,510 --> 02:09:27,040
so that's a random<font color="#E5E5E5"> so how do you attack</font>

1904
02:09:22,850 --> 02:09:30,530
<font color="#CCCCCC">terminator Canary right up to the canary</font>

1905
02:09:27,040 --> 02:09:34,250
again<font color="#E5E5E5"> if the stack</font><font color="#CCCCCC"> is executable this is</font>

1906
02:09:30,530 --> 02:09:45,349
easiest if it's not executable<font color="#E5E5E5"> strictly</font>

1907
02:09:34,250 --> 02:09:48,380
required but still random canary<font color="#E5E5E5"> pretty</font>

1908
02:09:45,350 --> 02:09:51,290
hard<font color="#E5E5E5"> Linux just based on the</font><font color="#CCCCCC"> way that it</font>

1909
02:09:48,380 --> 02:09:54,770
works a little<font color="#E5E5E5"> bit easier than Windows</font>

1910
02:09:51,290 --> 02:09:57,500
still not terribly easy<font color="#CCCCCC"> some things you</font>

1911
02:09:54,770 --> 02:10:01,160
can do remember we said at<font color="#CCCCCC"> the start of</font>

1912
02:09:57,500 --> 02:10:07,430
today<font color="#E5E5E5"> that sometimes you</font><font color="#CCCCCC"> could crash a</font>

1913
02:10:01,160 --> 02:10:09,280
program like<font color="#CCCCCC"> okay fairly</font><font color="#E5E5E5"> Windows has</font>

1914
02:10:07,430 --> 02:10:12,920
something<font color="#CCCCCC"> called an instruction</font>

1915
02:10:09,280 --> 02:10:16,580
<font color="#E5E5E5">exception handler any</font><font color="#CCCCCC"> Windows</font>

1916
02:10:12,920 --> 02:10:20,630
programmers in here anybody ever heard

1917
02:10:16,580 --> 02:10:26,630
of<font color="#E5E5E5"> these before</font><font color="#CCCCCC"> just now a little</font><font color="#E5E5E5"> bit</font>

1918
02:10:20,630 --> 02:10:31,070
<font color="#E5E5E5">yeah I've heard</font><font color="#CCCCCC"> of it so it's sort</font><font color="#E5E5E5"> of</font>

1919
02:10:26,630 --> 02:10:33,850
<font color="#E5E5E5">like faking exception handling such and</font>

1920
02:10:31,070 --> 02:10:38,440
handling is a function of<font color="#CCCCCC"> C++ and Java</font>

1921
02:10:33,850 --> 02:10:44,060
<font color="#E5E5E5">and at the operating system level</font>

1922
02:10:38,440 --> 02:10:49,240
<font color="#E5E5E5">they're essentially thinking that it's</font>

1923
02:10:44,060 --> 02:10:54,380
structured exception handling<font color="#E5E5E5"> and I</font>

1924
02:10:49,240 --> 02:10:59,420
could modify this<font color="#E5E5E5"> back and intentionally</font>

1925
02:10:54,380 --> 02:11:01,790
<font color="#E5E5E5">cause it to raise</font><font color="#CCCCCC"> exception and if I</font>

1926
02:10:59,420 --> 02:11:07,600
have somehow<font color="#CCCCCC"> managed</font><font color="#E5E5E5"> to change the</font>

1927
02:11:01,790 --> 02:11:09,590
exception handler<font color="#CCCCCC"> a goal I have an</font>

1928
02:11:07,600 --> 02:11:14,000
exported an exception

1929
02:11:09,590 --> 02:11:16,790
<font color="#E5E5E5">I've already you know infiltrated your</font>

1930
02:11:14,000 --> 02:11:20,120
exception handler<font color="#CCCCCC"> if you well</font><font color="#E5E5E5"> if you go</font>

1931
02:11:16,790 --> 02:11:23,380
<font color="#E5E5E5">to my Trojan</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> all alternate exception</font>

1932
02:11:20,120 --> 02:11:23,380
handler in<font color="#CCCCCC"> Bevans</font>

1933
02:11:24,820 --> 02:11:29,799
you could try<font color="#E5E5E5"> to</font><font color="#CCCCCC"> brute-force it but yeah</font>

1934
02:11:28,460 --> 02:11:35,590
good<font color="#E5E5E5"> luck with</font><font color="#CCCCCC"> that</font>

1935
02:11:29,800 --> 02:11:40,100
it's a 32-bit value that's<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of bits</font>

1936
02:11:35,590 --> 02:11:42,770
<font color="#E5E5E5">we talked about the</font><font color="#CCCCCC"> aslr mitigation we</font>

1937
02:11:40,100 --> 02:11:44,600
said<font color="#E5E5E5"> that's kind of 12 bits maybe a</font>

1938
02:11:42,770 --> 02:11:53,600
little bit less that<font color="#E5E5E5"> you're effectively</font>

1939
02:11:44,600 --> 02:11:56,050
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> change so you</font><font color="#CCCCCC"> know this is so I</font>

1940
02:11:53,600 --> 02:12:06,110
<font color="#E5E5E5">just want to give</font><font color="#CCCCCC"> you a quick summary of</font>

1941
02:11:56,050 --> 02:12:08,810
at least the<font color="#CCCCCC"> stack overflow of stuff so</font>

1942
02:12:06,110 --> 02:12:11,960
if the user<font color="#E5E5E5"> has</font><font color="#CCCCCC"> control of the variable</font>

1943
02:12:08,810 --> 02:12:14,500
it's passed to a function you could have

1944
02:12:11,960 --> 02:12:14,500
an exploit

1945
02:12:16,150 --> 02:12:21,290
overflowing that variable can overwrite

1946
02:12:19,100 --> 02:12:24,890
other stuff<font color="#CCCCCC"> the return</font><font color="#E5E5E5"> address</font>

1947
02:12:21,290 --> 02:12:26,720
thus redirect your program several

1948
02:12:24,890 --> 02:12:32,980
protections that<font color="#CCCCCC"> you might find</font><font color="#E5E5E5"> in</font>

1949
02:12:26,720 --> 02:12:35,740
modern versions of<font color="#E5E5E5"> Windows</font><font color="#CCCCCC"> or Linux ASLR</font>

1950
02:12:32,980 --> 02:12:41,860
protection provided by<font color="#E5E5E5"> the OS</font>

1951
02:12:35,740 --> 02:12:46,269
non-executable stack is a function that

1952
02:12:41,860 --> 02:12:49,639
<font color="#E5E5E5">you</font><font color="#CCCCCC"> can have provided</font><font color="#E5E5E5"> by the compiler</font>

1953
02:12:46,270 --> 02:12:54,190
and stack Canaries<font color="#E5E5E5"> are also provided by</font>

1954
02:12:49,640 --> 02:12:54,190
<font color="#CCCCCC">the compiler so real quick</font>

1955
02:13:05,199 --> 02:13:13,489
well I just<font color="#E5E5E5"> barely tapped the power but</font>

1956
02:13:08,000 --> 02:13:17,210
<font color="#E5E5E5">you say I know it's about the</font><font color="#CCCCCC"> lunch time</font>

1957
02:13:13,489 --> 02:13:19,190
<font color="#E5E5E5">I wanted to kind of finish up and</font><font color="#CCCCCC"> then</font>

1958
02:13:17,210 --> 02:13:40,280
you know after<font color="#E5E5E5"> lunch we'll talk about</font>

1959
02:13:19,190 --> 02:13:50,928
format string<font color="#CCCCCC"> if it takes too long you</font>

1960
02:13:40,280 --> 02:14:01,790
<font color="#E5E5E5">may just have why is it so</font><font color="#CCCCCC"> easy to</font><font color="#E5E5E5"> sleep</font>

1961
02:13:50,929 --> 02:14:03,770
and<font color="#E5E5E5"> not wake up yeah especially when</font>

1962
02:14:01,790 --> 02:14:06,079
<font color="#E5E5E5">you're</font><font color="#CCCCCC"> traveling right you're always</font>

1963
02:14:03,770 --> 02:14:09,920
like I can't go to sleep<font color="#CCCCCC"> and I have the</font>

1964
02:14:06,079 --> 02:14:13,639
most<font color="#E5E5E5"> horrible room - it's like right by</font>

1965
02:14:09,920 --> 02:14:27,020
the elevator<font color="#CCCCCC"> I mean right by the</font>

1966
02:14:13,639 --> 02:14:29,750
elevator like there's a closet<font color="#E5E5E5"> and right</font>

1967
02:14:27,020 --> 02:14:33,290
behind it is<font color="#CCCCCC"> the elevator but you know</font>

1968
02:14:29,750 --> 02:14:37,699
there's literally<font color="#E5E5E5"> lightning there and</font>

1969
02:14:33,290 --> 02:14:42,040
you have<font color="#E5E5E5"> to walk by it to go to the</font>

1970
02:14:37,699 --> 02:14:42,040
<font color="#E5E5E5">bathroom</font><font color="#CCCCCC"> and then it's</font>

1971
02:14:51,580 --> 02:14:54,890
<font color="#CCCCCC">we're really hoping</font><font color="#E5E5E5"> this is going to go</font>

1972
02:14:53,750 --> 02:15:00,290
back<font color="#CCCCCC"> to where it was</font>

1973
02:14:54,890 --> 02:15:04,540
if not<font color="#CCCCCC"> well I just wanted to</font><font color="#E5E5E5"> show</font><font color="#CCCCCC"> you</font>

1974
02:15:00,290 --> 02:15:05,780
real quick when you look<font color="#E5E5E5"> at those memory</font>

1975
02:15:04,540 --> 02:15:09,470
sections

1976
02:15:05,780 --> 02:15:13,330
he will tell you hey look<font color="#E5E5E5"> these</font>

1977
02:15:09,470 --> 02:15:13,330
architectures on this<font color="#E5E5E5"> Metro section</font>

1978
02:15:13,670 --> 02:15:25,280
you can see that the<font color="#E5E5E5"> stack</font><font color="#CCCCCC"> is not</font>

1979
02:15:17,750 --> 02:15:28,010
<font color="#E5E5E5">executable yeah it totally did</font><font color="#CCCCCC"> after</font>

1980
02:15:25,280 --> 02:15:31,009
<font color="#E5E5E5">after lunch</font><font color="#CCCCCC"> here nothing only the Cody</font>

1981
02:15:28,010 --> 02:15:32,900
<font color="#CCCCCC">Oh</font><font color="#E5E5E5"> God a bunch of</font><font color="#CCCCCC"> tracks</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> they just</font>

1982
02:15:31,010 --> 02:15:34,580
<font color="#CCCCCC">walk around</font><font color="#E5E5E5"> campus</font><font color="#CCCCCC"> for about</font><font color="#E5E5E5"> half your</font>

1983
02:15:32,900 --> 02:15:36,259
<font color="#CCCCCC">everybody muffled oh right yeah loud</font>

1984
02:15:34,580 --> 02:15:37,900
enough I recorded in<font color="#E5E5E5"> straight here's the</font>

1985
02:15:36,260 --> 02:15:39,770
crazy<font color="#E5E5E5"> I go because I was gonna like</font>

1986
02:15:37,900 --> 02:15:42,500
<font color="#E5E5E5">dermatologist string I walk around</font>

1987
02:15:39,770 --> 02:15:46,000
<font color="#E5E5E5">campus</font><font color="#CCCCCC"> laptop I got multiple outlets</font>

1988
02:15:42,500 --> 02:15:48,770
<font color="#CCCCCC">elders we</font><font color="#E5E5E5"> should be</font><font color="#CCCCCC"> gonna walk</font><font color="#E5E5E5"> around</font>

1989
02:15:46,000 --> 02:15:52,190
walking around the quad walk into

1990
02:15:48,770 --> 02:15:54,280
different buildings<font color="#E5E5E5"> and</font><font color="#CCCCCC"> I got I don't</font>

1991
02:15:52,190 --> 02:16:00,980
<font color="#CCCCCC">even know how many hundreds</font><font color="#E5E5E5"> of clients</font>

1992
02:15:54,280 --> 02:16:04,099
access points but<font color="#CCCCCC"> it's a tool</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> they</font>

1993
02:16:00,980 --> 02:16:06,889
have available it's free tool for

1994
02:16:04,100 --> 02:16:10,640
visualizing something<font color="#E5E5E5"> large dumps</font><font color="#CCCCCC"> from</font>

1995
02:16:06,890 --> 02:16:13,330
<font color="#E5E5E5">aircrack web application contesting</font>

1996
02:16:10,640 --> 02:16:16,780
class that repentance and class our

1997
02:16:13,330 --> 02:16:22,160
<font color="#E5E5E5">real-world</font><font color="#CCCCCC"> pen testing windows forensics</font>

1998
02:16:16,780 --> 02:16:25,250
<font color="#CCCCCC">lock file analysis data science and the</font>

1999
02:16:22,160 --> 02:16:39,039
list<font color="#CCCCCC"> goes on</font><font color="#E5E5E5"> and on Oh sent you like to</font>

2000
02:16:25,250 --> 02:16:43,730
do<font color="#CCCCCC"> a set challenges wipe red teaming</font>

2001
02:16:39,040 --> 02:16:45,710
rootkits<font color="#CCCCCC"> reverse engineering it says</font>

2002
02:16:43,730 --> 02:16:48,650
that this<font color="#E5E5E5"> class that this stuff is based</font>

2003
02:16:45,709 --> 02:16:50,558
on is an ongoing class<font color="#E5E5E5"> that's actually</font>

2004
02:16:48,650 --> 02:16:55,849
done it's just that they haven't

2005
02:16:50,558 --> 02:16:58,340
completely uploaded<font color="#E5E5E5"> it and called it</font>

2006
02:16:55,849 --> 02:16:59,728
<font color="#E5E5E5">done neck which they have done</font>

2007
02:16:58,340 --> 02:17:04,728
<font color="#CCCCCC">apparently with my</font>

2008
02:16:59,728 --> 02:17:07,799
limits okay

2009
02:17:04,728 --> 02:17:14,898
well now<font color="#CCCCCC"> come o'clock so we can go ahead</font>

2010
02:17:07,799 --> 02:17:14,898
I just wanted to show<font color="#E5E5E5"> you</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was like</font>

2011
02:17:17,420 --> 02:17:24,210
so<font color="#E5E5E5"> this morning we talked about stack</font>

2012
02:17:20,369 --> 02:17:26,119
buffer overflows<font color="#CCCCCC"> well-known laws been</font>

2013
02:17:24,209 --> 02:17:28,858
there<font color="#E5E5E5"> forever</font>

2014
02:17:26,119 --> 02:17:37,649
and now all I want to<font color="#E5E5E5"> talk a little</font><font color="#CCCCCC"> bit</font>

2015
02:17:28,859 --> 02:17:43,139
about something<font color="#E5E5E5"> here so what is</font><font color="#CCCCCC"> the</font>

2016
02:17:37,648 --> 02:17:45,358
<font color="#E5E5E5">format screen</font><font color="#CCCCCC"> here a format string</font><font color="#E5E5E5"> is</font>

2017
02:17:43,138 --> 02:17:49,920
something<font color="#CCCCCC"> you passed</font><font color="#E5E5E5"> to several</font>

2018
02:17:45,359 --> 02:17:53,840
functions<font color="#E5E5E5"> family functions the typical</font>

2019
02:17:49,920 --> 02:17:56,159
<font color="#E5E5E5">example of these functions is printed</font>

2020
02:17:53,840 --> 02:18:00,689
we've talked about this briefly<font color="#E5E5E5"> this</font>

2021
02:17:56,159 --> 02:18:01,648
morning<font color="#E5E5E5"> we said print up you can give it</font>

2022
02:18:00,689 --> 02:18:03,568
an argument

2023
02:18:01,648 --> 02:18:05,788
the first argument<font color="#E5E5E5"> can be</font><font color="#CCCCCC"> a format</font>

2024
02:18:03,568 --> 02:18:08,099
<font color="#E5E5E5">string that says here's</font><font color="#CCCCCC"> how I would like</font>

2025
02:18:05,789 --> 02:18:12,239
to print out the other things<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> going</font>

2026
02:18:08,099 --> 02:18:17,999
<font color="#E5E5E5">to pass to</font><font color="#CCCCCC"> you is very much</font>

2027
02:18:12,239 --> 02:18:20,849
you can print<font color="#E5E5E5"> things out exactly there</font>

2028
02:18:17,999 --> 02:18:24,808
are related functions like a print death

2029
02:18:20,849 --> 02:18:27,179
and spray<font color="#E5E5E5"> that</font><font color="#CCCCCC"> they do of all the same</font>

2030
02:18:24,808 --> 02:18:31,579
thing<font color="#E5E5E5"> but normally you talk about print</font>

2031
02:18:27,179 --> 02:18:31,579
out but it could be a different<font color="#E5E5E5"> related</font>

2032
02:18:31,849 --> 02:18:40,409
now here's where the<font color="#CCCCCC"> problem comes</font><font color="#E5E5E5"> with</font>

2033
02:18:35,388 --> 02:18:43,079
some<font color="#E5E5E5"> programs or some programmers will</font>

2034
02:18:40,409 --> 02:18:49,260
call this<font color="#CCCCCC"> function assuming there's only</font>

2035
02:18:43,079 --> 02:18:51,989
<font color="#E5E5E5">one argument</font><font color="#CCCCCC"> that's it and I'll admit it</font>

2036
02:18:49,260 --> 02:18:54,529
you know I do<font color="#E5E5E5"> this all the</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> because</font>

2037
02:18:51,989 --> 02:18:54,529
<font color="#CCCCCC">I'm late</font>

2038
02:18:54,920 --> 02:19:04,679
here's where the<font color="#CCCCCC"> problem lies</font>

2039
02:18:56,909 --> 02:19:06,269
if the user can control input again<font color="#E5E5E5"> just</font>

2040
02:19:04,679 --> 02:19:09,898
like stack buffer<font color="#CCCCCC"> overflows</font>

2041
02:19:06,269 --> 02:19:17,489
user controls input there's some<font color="#E5E5E5"> sort of</font>

2042
02:19:09,898 --> 02:19:20,929
a flaw on<font color="#E5E5E5"> the program possible export so</font>

2043
02:19:17,489 --> 02:19:26,429
if I'm trying<font color="#CCCCCC"> to say</font><font color="#E5E5E5"> printf my variable</font>

2044
02:19:20,929 --> 02:19:28,109
but the<font color="#E5E5E5"> user controls my variable some</font>

2045
02:19:26,429 --> 02:19:33,599
bad things can happen either

2046
02:19:28,109 --> 02:19:42,239
<font color="#E5E5E5">I can leak information or I can cause</font>

2047
02:19:33,599 --> 02:19:47,549
the program<font color="#E5E5E5"> to crash what's the simple</font>

2048
02:19:42,239 --> 02:19:50,310
fix<font color="#E5E5E5"> you say printf give it a format</font>

2049
02:19:47,549 --> 02:19:52,920
straighten up your<font color="#CCCCCC"> time</font><font color="#E5E5E5"> percent ass</font>

2050
02:19:50,310 --> 02:19:55,288
let's save<font color="#E5E5E5"> anything can be represented</font>

2051
02:19:52,920 --> 02:20:00,529
as<font color="#CCCCCC"> E</font><font color="#E5E5E5"> string pretty much your variable</font>

2052
02:19:55,289 --> 02:20:04,739
and it's<font color="#E5E5E5"> probably completely goes away</font>

2053
02:20:00,529 --> 02:20:17,159
<font color="#CCCCCC">problems so</font><font color="#E5E5E5"> you know that's like all you</font>

2054
02:20:04,739 --> 02:20:21,779
<font color="#CCCCCC">have to do all you have to do I have a</font>

2055
02:20:17,159 --> 02:20:26,670
few simple functions and<font color="#E5E5E5"> for now at</font>

2056
02:20:21,779 --> 02:20:30,479
least<font color="#E5E5E5"> I'm just gonna stick</font><font color="#CCCCCC"> with my Linux</font>

2057
02:20:26,670 --> 02:20:35,060
system you<font color="#E5E5E5"> can compile the ones that are</font>

2058
02:20:30,479 --> 02:20:35,060
on<font color="#E5E5E5"> the windows images help</font>

2059
02:20:45,110 --> 02:20:53,210
<font color="#CCCCCC">okay so I have</font><font color="#E5E5E5"> this program it's called</font>

2060
02:20:48,930 --> 02:20:53,210
<font color="#E5E5E5">format dot</font><font color="#CCCCCC"> C</font><font color="#E5E5E5"> we'll see if it compiles</font>

2061
02:20:53,360 --> 02:21:12,360
thankfully so GCC format - oh<font color="#E5E5E5"> okay it</font>

2062
02:21:09,601 --> 02:21:16,980
compiled and it made my program

2063
02:21:12,360 --> 02:21:19,851
notice what it did how much do you<font color="#E5E5E5"> love</font>

2064
02:21:16,980 --> 02:21:24,630
<font color="#E5E5E5">Linux</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> the open source community</font>

2065
02:21:19,851 --> 02:21:33,780
<font color="#E5E5E5">warning format not a string literal and</font>

2066
02:21:24,630 --> 02:21:34,679
no format<font color="#E5E5E5"> arguments</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> death argue it</font>

2067
02:21:33,780 --> 02:21:40,891
just<font color="#CCCCCC"> warned me</font>

2068
02:21:34,680 --> 02:21:43,500
hey you could<font color="#CCCCCC"> have a problem and it</font><font color="#E5E5E5"> even</font>

2069
02:21:40,891 --> 02:21:46,949
tells<font color="#E5E5E5"> me this is how if you wanted to</font>

2070
02:21:43,500 --> 02:21:51,030
turn this warning off you can turn it

2071
02:21:46,950 --> 02:21:54,030
off<font color="#E5E5E5"> but by default</font><font color="#CCCCCC"> it's a name so if I</font>

2072
02:21:51,030 --> 02:21:58,280
redo this let's just<font color="#E5E5E5"> go ahead and give</font>

2073
02:21:54,030 --> 02:21:58,280
<font color="#CCCCCC">it -</font><font color="#E5E5E5"> W</font>

2074
02:22:01,101 --> 02:22:09,601
<font color="#E5E5E5">it's don't warn me</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> no oh you</font>

2075
02:22:05,940 --> 02:22:12,530
know what<font color="#CCCCCC"> it's because I didn't say it's</font>

2076
02:22:09,601 --> 02:22:12,530
- W

2077
02:22:20,430 --> 02:22:26,340
okay<font color="#E5E5E5"> well</font><font color="#CCCCCC"> anyway</font><font color="#E5E5E5"> there is a way to turn</font>

2078
02:22:23,080 --> 02:22:26,340
<font color="#CCCCCC">it off</font><font color="#E5E5E5"> I just</font><font color="#CCCCCC"> can't remember what it</font><font color="#E5E5E5"> is</font>

2079
02:22:27,479 --> 02:22:40,000
so let's<font color="#CCCCCC"> look at my simple program this</font>

2080
02:22:37,120 --> 02:22:42,880
<font color="#E5E5E5">doesn't really do much I've got my</font>

2081
02:22:40,000 --> 02:23:07,210
standard includes here<font color="#E5E5E5"> standard lips and</font>

2082
02:22:42,880 --> 02:23:10,528
I<font color="#CCCCCC"> alright now we can read it so I</font>

2083
02:23:07,210 --> 02:23:17,380
include my standard lip standard<font color="#E5E5E5"> I all I</font>

2084
02:23:10,529 --> 02:23:19,600
have my main function in Maine RC RV<font color="#E5E5E5"> and</font>

2085
02:23:17,380 --> 02:23:24,009
it says<font color="#E5E5E5"> this function or this program</font>

2086
02:23:19,600 --> 02:23:28,899
<font color="#E5E5E5">prints what the user inputs say</font><font color="#CCCCCC"> argh C</font>

2087
02:23:24,010 --> 02:23:31,330
is greater than<font color="#CCCCCC"> one print whatever you</font>

2088
02:23:28,899 --> 02:23:42,090
<font color="#E5E5E5">passed that's it</font>

2089
02:23:31,330 --> 02:23:47,109
do something so I<font color="#CCCCCC"> could run</font><font color="#E5E5E5"> it hello</font>

2090
02:23:42,090 --> 02:23:50,710
bring it up<font color="#CCCCCC"> hello I think it's a little</font>

2091
02:23:47,109 --> 02:23:58,000
world<font color="#CCCCCC"> it doesn't do</font><font color="#E5E5E5"> what I expect</font>

2092
02:23:50,710 --> 02:24:02,289
why not<font color="#E5E5E5"> because world is</font><font color="#CCCCCC"> rb2 not are we</font>

2093
02:23:58,000 --> 02:24:11,300
want you could fix that by using quotes

2094
02:24:02,290 --> 02:24:14,590
<font color="#CCCCCC">I</font><font color="#E5E5E5"> can even add a new line itself</font>

2095
02:24:11,300 --> 02:24:19,330
did interpret<font color="#E5E5E5"> in your line but that's</font>

2096
02:24:14,590 --> 02:24:23,120
<font color="#E5E5E5">there are other reasons for that okay so</font>

2097
02:24:19,330 --> 02:24:28,940
<font color="#CCCCCC">that is my</font><font color="#E5E5E5"> simple super simple function</font>

2098
02:24:23,120 --> 02:24:34,431
oh yeah what's<font color="#CCCCCC"> wrong</font><font color="#E5E5E5"> with that</font>

2099
02:24:28,940 --> 02:24:36,860
everything seems great<font color="#CCCCCC"> too</font><font color="#E5E5E5"> easy little</font>

2100
02:24:34,431 --> 02:24:43,340
<font color="#E5E5E5">program nothing bad could ever happen</font>

2101
02:24:36,860 --> 02:24:47,300
right let me<font color="#E5E5E5"> do this you</font><font color="#CCCCCC"> may run it and</font>

2102
02:24:43,340 --> 02:25:01,090
it's very same format let's save<font color="#E5E5E5"> your</font>

2103
02:24:47,300 --> 02:25:01,090
<font color="#CCCCCC">sin</font><font color="#E5E5E5"> yes well that's what did it do huh</font>

2104
02:25:01,510 --> 02:25:11,300
how many<font color="#CCCCCC"> people</font><font color="#E5E5E5"> thought it was gonna</font>

2105
02:25:03,500 --> 02:25:13,101
crash<font color="#CCCCCC"> this ad</font><font color="#E5E5E5"> % s seems like it she</font>

2106
02:25:11,300 --> 02:25:17,449
crashed right I didn't give it<font color="#E5E5E5"> any</font>

2107
02:25:13,101 --> 02:25:28,490
<font color="#E5E5E5">arguments so we're gonna get the</font>

2108
02:25:17,450 --> 02:25:33,700
arguments for printf<font color="#CCCCCC"> I didn't give it on</font>

2109
02:25:28,490 --> 02:25:38,681
<font color="#E5E5E5">the stack right you called for</font><font color="#CCCCCC"> enough</font>

2110
02:25:33,700 --> 02:25:48,050
<font color="#E5E5E5">and there was stuff on the stack and</font>

2111
02:25:38,681 --> 02:25:53,510
<font color="#CCCCCC">appears as</font><font color="#E5E5E5"> though randomly it had</font><font color="#CCCCCC"> %</font><font color="#E5E5E5"> s it</font>

2112
02:25:48,050 --> 02:25:59,539
said<font color="#E5E5E5"> oh the next thing on the</font><font color="#CCCCCC"> stack is</font>

2113
02:25:53,510 --> 02:26:02,590
<font color="#CCCCCC">the pointer to this</font><font color="#E5E5E5"> little string okay</font>

2114
02:25:59,540 --> 02:26:05,391
well I bet I could<font color="#E5E5E5"> get it to crash</font>

2115
02:26:02,590 --> 02:26:10,460
<font color="#CCCCCC">percent</font><font color="#E5E5E5"> ass I'm gonna give</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> a whole</font>

2116
02:26:05,391 --> 02:26:13,880
<font color="#CCCCCC">bunch</font><font color="#E5E5E5"> okay</font>

2117
02:26:10,460 --> 02:26:16,580
<font color="#CCCCCC">no I got the price it still printed out</font>

2118
02:26:13,880 --> 02:26:20,119
my<font color="#CCCCCC"> stock it's a segmentation fault</font><font color="#E5E5E5"> which</font>

2119
02:26:16,580 --> 02:26:22,391
is<font color="#CCCCCC"> UNIX and Linux beeper</font><font color="#E5E5E5"> yeah</font><font color="#CCCCCC"> my</font>

2120
02:26:20,120 --> 02:26:22,391
<font color="#E5E5E5">daughter</font>

2121
02:26:23,511 --> 02:26:28,440
if you have a system and<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> configured</font>

2122
02:26:26,581 --> 02:26:32,360
a certain way<font color="#CCCCCC"> it'll actually come up and</font>

2123
02:26:28,440 --> 02:26:41,551
<font color="#E5E5E5">you say segmentation fault core dumped</font>

2124
02:26:32,360 --> 02:26:48,091
in this case<font color="#E5E5E5"> I don't all right</font><font color="#CCCCCC"> so I can</font>

2125
02:26:41,551 --> 02:26:50,070
<font color="#CCCCCC">crash this step</font><font color="#E5E5E5"> one we found that</font><font color="#CCCCCC"> with</font>

2126
02:26:48,091 --> 02:26:53,671
<font color="#CCCCCC">windows and stack buffer</font><font color="#E5E5E5"> overflows</font>

2127
02:26:50,070 --> 02:26:55,801
that's fairly easy to do even if you

2128
02:26:53,671 --> 02:26:58,921
<font color="#E5E5E5">have all these protections in place you</font>

2129
02:26:55,801 --> 02:27:02,939
can still cause it<font color="#CCCCCC"> to crash so I could</font>

2130
02:26:58,921 --> 02:27:26,521
<font color="#E5E5E5">daus this ever so important program here</font>

2131
02:27:02,940 --> 02:27:30,961
<font color="#CCCCCC">it just</font><font color="#E5E5E5"> prints out</font><font color="#CCCCCC"> okay let's say what</font>

2132
02:27:26,521 --> 02:27:37,650
are these format specifiers well I<font color="#E5E5E5"> have</font>

2133
02:27:30,961 --> 02:27:40,920
<font color="#E5E5E5">percent see a character okay percent</font>

2134
02:27:37,650 --> 02:27:44,631
<font color="#CCCCCC">Oh octal number percent us string</font><font color="#E5E5E5"> pretty</font>

2135
02:27:40,921 --> 02:27:49,530
common percent you an unsigned integer

2136
02:27:44,631 --> 02:28:09,391
<font color="#E5E5E5">percent eggs</font><font color="#CCCCCC"> the number</font><font color="#E5E5E5"> of hex says six</font>

2137
02:27:49,530 --> 02:28:17,371
more rows I have<font color="#E5E5E5"> unsigned numbers hex</font>

2138
02:28:09,391 --> 02:28:22,650
numbers I can<font color="#E5E5E5"> print a %</font><font color="#CCCCCC"> alright so the</font>

2139
02:28:17,371 --> 02:28:25,109
first<font color="#CCCCCC"> thing I went to is</font><font color="#E5E5E5"> okay</font><font color="#CCCCCC"> what it</font>

2140
02:28:22,650 --> 02:28:30,109
<font color="#E5E5E5">doesn't have</font><font color="#CCCCCC"> everything that I would</font>

2141
02:28:25,110 --> 02:28:30,110
<font color="#E5E5E5">want that's okay we'll get</font><font color="#CCCCCC"> back to that</font>

2142
02:28:31,209 --> 02:28:38,419
<font color="#E5E5E5">okay so what if I instead</font><font color="#CCCCCC"> of using</font>

2143
02:28:35,869 --> 02:28:43,539
<font color="#CCCCCC">Elly's percent s as maybe I'll just do</font>

2144
02:28:38,419 --> 02:28:43,539
one percent pass<font color="#E5E5E5"> you say percent X</font>

2145
02:28:47,979 --> 02:29:03,679
<font color="#E5E5E5">hmm did it</font><font color="#CCCCCC"> seg fault</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> it did</font>

2146
02:28:56,119 --> 02:29:08,629
not why last time you were asking<font color="#CCCCCC"> for a</font>

2147
02:29:03,679 --> 02:29:14,509
string and correct<font color="#E5E5E5"> the first thing was</font><font color="#CCCCCC"> a</font>

2148
02:29:08,629 --> 02:29:18,699
string and the things after it weren't

2149
02:29:14,509 --> 02:29:25,850
easily interpreted as a string but

2150
02:29:18,699 --> 02:29:28,869
percent<font color="#CCCCCC"> x is a hex number</font><font color="#E5E5E5"> if I am</font>

2151
02:29:25,850 --> 02:29:31,149
<font color="#E5E5E5">reading things off of</font><font color="#CCCCCC"> my stack</font><font color="#E5E5E5"> which</font>

2152
02:29:28,869 --> 02:29:33,949
what I'm doing

2153
02:29:31,149 --> 02:29:39,739
can I interpret most<font color="#E5E5E5"> anything</font><font color="#CCCCCC"> is that</font>

2154
02:29:33,949 --> 02:29:47,390
hex number yeah<font color="#CCCCCC"> so now what I'm doing is</font>

2155
02:29:39,739 --> 02:29:50,948
I<font color="#CCCCCC"> am reading my stack</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> four byte</font>

2156
02:29:47,390 --> 02:30:00,969
integer<font color="#E5E5E5"> the top since it's 32 bits for</font>

2157
02:29:50,949 --> 02:30:05,749
Linux<font color="#CCCCCC"> actually I shouldn't say 32 bit</font>

2158
02:30:00,969 --> 02:30:11,448
<font color="#CCCCCC">cuz I</font><font color="#E5E5E5"> just realize I</font><font color="#CCCCCC"> forgot to do</font>

2159
02:30:05,749 --> 02:30:16,999
<font color="#CCCCCC">something I forgot</font><font color="#E5E5E5"> to compile it has</font><font color="#CCCCCC"> a</font>

2160
02:30:11,449 --> 02:30:19,729
<font color="#E5E5E5">32 bit</font><font color="#CCCCCC"> act it's</font><font color="#E5E5E5"> not necessarily a bad</font>

2161
02:30:16,999 --> 02:30:21,458
thing<font color="#E5E5E5"> that I forgot</font><font color="#CCCCCC"> and here's why it's</font>

2162
02:30:19,729 --> 02:30:24,259
not bad

2163
02:30:21,459 --> 02:30:26,359
format strings you said the earth

2164
02:30:24,259 --> 02:30:31,419
I ain't Gnostic to operating systems

2165
02:30:26,359 --> 02:30:34,479
birthday and that means that unlike

2166
02:30:31,419 --> 02:30:37,399
stack buffer<font color="#E5E5E5"> overflows which if you did</font>

2167
02:30:34,479 --> 02:30:39,649
<font color="#CCCCCC">64-bit windows and he looked at stack</font>

2168
02:30:37,399 --> 02:30:41,260
buffer overflows you can find those are

2169
02:30:39,649 --> 02:30:47,810
a lot harder to<font color="#E5E5E5"> explain</font>

2170
02:30:41,260 --> 02:30:50,810
much much these are<font color="#E5E5E5"> just as easy</font><font color="#CCCCCC"> to</font>

2171
02:30:47,810 --> 02:30:53,779
exploit all<font color="#E5E5E5"> the time</font><font color="#CCCCCC"> it doesn't matter</font>

2172
02:30:50,810 --> 02:30:57,680
<font color="#E5E5E5">it doesn't matter if it's Windows Linux</font>

2173
02:30:53,780 --> 02:31:00,500
<font color="#E5E5E5">if it's 32-bit or 64-bit</font><font color="#CCCCCC"> now if you're</font>

2174
02:30:57,680 --> 02:31:02,810
wondering<font color="#E5E5E5"> why is 64 bit harder</font><font color="#CCCCCC"> to</font>

2175
02:31:00,500 --> 02:31:05,600
exploit<font color="#E5E5E5"> think about the things we talked</font>

2176
02:31:02,810 --> 02:31:08,420
<font color="#E5E5E5">about the smaller the address space is</font>

2177
02:31:05,600 --> 02:31:13,070
much like if<font color="#E5E5E5"> I randomize the address</font>

2178
02:31:08,420 --> 02:31:17,600
space<font color="#E5E5E5"> now can you find</font><font color="#CCCCCC"> stuff let's say I</font>

2179
02:31:13,070 --> 02:31:20,480
only have 50 bits to randomize<font color="#E5E5E5"> there's a</font>

2180
02:31:17,600 --> 02:31:23,630
lot of bits<font color="#E5E5E5"> you're gonna be</font><font color="#CCCCCC"> brute-force</font>

2181
02:31:20,480 --> 02:31:28,630
it for a long<font color="#E5E5E5"> time that's number one</font>

2182
02:31:23,630 --> 02:31:31,849
<font color="#CCCCCC">number two</font><font color="#E5E5E5"> what you'll find is that for</font>

2183
02:31:28,630 --> 02:31:34,369
64-bit versions of operating systems

2184
02:31:31,850 --> 02:31:39,950
<font color="#E5E5E5">often they don't put things on</font><font color="#CCCCCC"> the stack</font>

2185
02:31:34,370 --> 02:31:43,480
<font color="#CCCCCC">so much these registers instead so</font>

2186
02:31:39,950 --> 02:31:49,010
they'll use what we call fast<font color="#CCCCCC"> deckle</font>

2187
02:31:43,480 --> 02:31:51,289
fast call where you<font color="#CCCCCC"> might put you know</font>

2188
02:31:49,010 --> 02:31:53,960
as much as<font color="#CCCCCC"> you can you</font><font color="#E5E5E5"> put things in the</font>

2189
02:31:51,290 --> 02:31:57,590
registries<font color="#E5E5E5"> what do you do that a lot</font>

2190
02:31:53,960 --> 02:31:59,210
faster so they will<font color="#CCCCCC"> just say</font><font color="#E5E5E5"> okay we're</font>

2191
02:31:57,590 --> 02:32:01,430
<font color="#CCCCCC">going to</font><font color="#E5E5E5"> use the registers to pass all</font>

2192
02:31:59,210 --> 02:32:02,839
these parameters if you look at<font color="#E5E5E5"> arm by</font>

2193
02:32:01,430 --> 02:32:06,440
<font color="#E5E5E5">the way guess what that's what they do</font>

2194
02:32:02,840 --> 02:32:07,130
<font color="#CCCCCC">an arm has a special register</font><font color="#E5E5E5"> for the</font>

2195
02:32:06,440 --> 02:32:09,950
return<font color="#CCCCCC"> adducts</font>

2196
02:32:07,130 --> 02:32:14,080
you call<font color="#E5E5E5"> it function it's not</font>

2197
02:32:09,950 --> 02:32:16,490
<font color="#E5E5E5">necessarily on</font><font color="#CCCCCC"> the stack at all so arm</font>

2198
02:32:14,080 --> 02:32:20,600
<font color="#E5E5E5">exploitation can be a lot more difficult</font>

2199
02:32:16,490 --> 02:32:24,520
than witness also<font color="#E5E5E5"> people don't</font>

2200
02:32:20,600 --> 02:32:27,260
understand it as<font color="#CCCCCC"> part of somebody's we</font>

2201
02:32:24,520 --> 02:32:30,020
sometimes arm you're talking about Java

2202
02:32:27,260 --> 02:32:32,020
<font color="#CCCCCC">machines and there are certain arm</font>

2203
02:32:30,020 --> 02:32:36,920
compilers which will immediately

2204
02:32:32,020 --> 02:32:39,980
<font color="#E5E5E5">interpret Java bytecode</font><font color="#CCCCCC"> which is awesome</font>

2205
02:32:36,920 --> 02:32:45,700
feature<font color="#E5E5E5"> does make your life a little bit</font>

2206
02:32:39,980 --> 02:32:48,560
harder sometimes<font color="#CCCCCC"> okay so I was able to</font>

2207
02:32:45,700 --> 02:32:50,540
<font color="#E5E5E5">print out what's on my stack</font><font color="#CCCCCC"> now if I</font>

2208
02:32:48,560 --> 02:32:53,109
rerun this do I get the exact same

2209
02:32:50,540 --> 02:32:53,110
results

2210
02:32:53,979 --> 02:33:00,220
survey says<font color="#CCCCCC"> no</font><font color="#E5E5E5"> what does</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> tell me</font>

2211
02:33:02,529 --> 02:33:09,670
I'm using a SLR<font color="#E5E5E5"> right address space</font>

2212
02:33:05,930 --> 02:33:14,979
layout randomization<font color="#E5E5E5"> not surprising this</font>

2213
02:33:09,670 --> 02:33:17,949
64-bit<font color="#E5E5E5"> Linux so yeah it's doing that</font>

2214
02:33:14,979 --> 02:33:22,220
how long is Linux been doing this<font color="#E5E5E5"> I</font>

2215
02:33:17,949 --> 02:33:26,390
don't<font color="#CCCCCC"> even know how</font><font color="#E5E5E5"> over a decade</font>

2216
02:33:22,220 --> 02:33:27,938
I remember when Vista came out many

2217
02:33:26,390 --> 02:33:30,470
<font color="#E5E5E5">years late</font>

2218
02:33:27,939 --> 02:33:32,390
there<font color="#E5E5E5"> was like oh it's got this feature</font>

2219
02:33:30,470 --> 02:33:35,960
and it's got this feature it's just so

2220
02:33:32,390 --> 02:33:37,880
awesome<font color="#CCCCCC"> one of the Linux magazines put</font>

2221
02:33:35,960 --> 02:33:40,220
out an article<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know like here's all</font>

2222
02:33:37,880 --> 02:33:42,019
these highly touted features or<font color="#CCCCCC"> Windows</font>

2223
02:33:40,220 --> 02:33:47,560
of this stuff<font color="#CCCCCC"> and here's how long we've</font>

2224
02:33:42,020 --> 02:33:47,560
been in minutes<font color="#E5E5E5"> some were over decades</font>

2225
02:33:49,869 --> 02:34:12,789
<font color="#CCCCCC">okay let's go</font><font color="#E5E5E5"> back let's</font><font color="#CCCCCC"> see if this is</font>

2226
02:34:10,189 --> 02:34:12,789
any<font color="#CCCCCC"> different</font>

2227
02:34:38,350 --> 02:34:45,710
now it's<font color="#CCCCCC"> Windows this management right</font>

2228
02:34:42,250 --> 02:34:48,979
let me just barely<font color="#CCCCCC"> fault</font><font color="#E5E5E5"> that power</font>

2229
02:34:45,710 --> 02:34:51,080
button<font color="#E5E5E5"> and it didn't get go to sleep and</font>

2230
02:34:48,979 --> 02:34:52,510
<font color="#E5E5E5">it</font><font color="#CCCCCC"> just no I'm just gonna shut</font><font color="#E5E5E5"> it down</font>

2231
02:34:51,080 --> 02:35:18,560
<font color="#CCCCCC">and of</font><font color="#E5E5E5"> course</font>

2232
02:34:52,510 --> 02:35:21,020
<font color="#E5E5E5">power it off my machine my</font><font color="#CCCCCC"> virtual</font>

2233
02:35:18,560 --> 02:35:23,689
machine<font color="#CCCCCC"> tips is always full screen or</font>

2234
02:35:21,020 --> 02:35:25,850
virtual machine<font color="#CCCCCC"> I don't know how many</font>

2235
02:35:23,689 --> 02:35:28,520
times I'll<font color="#E5E5E5"> have students really can't</font>

2236
02:35:25,850 --> 02:35:30,439
<font color="#E5E5E5">find this</font><font color="#CCCCCC"> bottle I downloaded</font><font color="#E5E5E5"> did you</font>

2237
02:35:28,520 --> 02:35:34,220
<font color="#CCCCCC">download it</font><font color="#E5E5E5"> to your virtual box or it is</font>

2238
02:35:30,439 --> 02:35:37,910
<font color="#CCCCCC">me downloaded to your host machine if</font>

2239
02:35:34,220 --> 02:36:10,149
you don't<font color="#CCCCCC"> full screen them virtualized</font>

2240
02:35:37,910 --> 02:36:10,149
machine<font color="#CCCCCC"> yes that's more men</font><font color="#E5E5E5"> same program</font>

2241
02:36:15,500 --> 02:36:45,960
by the way we haven't<font color="#E5E5E5"> used it but there</font>

2242
02:36:18,479 --> 02:36:48,688
is a<font color="#CCCCCC"> facing</font><font color="#E5E5E5"> debugger</font><font color="#CCCCCC"> okay notice I got</font>

2243
02:36:45,960 --> 02:36:51,618
<font color="#E5E5E5">slightly different results why is that</font>

2244
02:36:48,689 --> 02:36:55,529
<font color="#E5E5E5">well it's a different operating system</font>

2245
02:36:51,619 --> 02:37:11,540
<font color="#E5E5E5">it's also 32-bit instead of 64-bit at</font>

2246
02:36:55,529 --> 02:37:20,340
least let me verify that yes<font color="#CCCCCC"> percent</font>

2247
02:37:11,540 --> 02:37:30,649
<font color="#E5E5E5">execute</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> okay now what do you notice</font>

2248
02:37:20,340 --> 02:37:34,140
about this it's not exactly this thing

2249
02:37:30,649 --> 02:37:38,149
so it's<font color="#E5E5E5"> not</font><font color="#CCCCCC"> exactly the</font><font color="#E5E5E5"> same because I'm</font>

2250
02:37:34,140 --> 02:37:38,149
using address space layout randomization

2251
02:37:38,989 --> 02:37:46,979
<font color="#E5E5E5">there is a way</font><font color="#CCCCCC"> turn</font><font color="#E5E5E5"> it off</font><font color="#CCCCCC"> I will leave</font>

2252
02:37:44,579 --> 02:37:51,510
<font color="#E5E5E5">it as an</font><font color="#CCCCCC"> exercise to you guys figure it</font>

2253
02:37:46,979 --> 02:37:53,460
<font color="#E5E5E5">out just google it</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> find it but you</font>

2254
02:37:51,510 --> 02:37:59,250
can go into the settings you can say I

2255
02:37:53,460 --> 02:38:03,868
<font color="#E5E5E5">want to turn it off everything or just</font>

2256
02:37:59,250 --> 02:38:05,939
<font color="#E5E5E5">for system processes you might say why</font>

2257
02:38:03,869 --> 02:38:07,710
<font color="#E5E5E5">is there not a everything but system</font>

2258
02:38:05,939 --> 02:38:10,470
processes I don't<font color="#E5E5E5"> think that's an option</font>

2259
02:38:07,710 --> 02:38:11,688
<font color="#E5E5E5">for quickly because that's a security</font>

2260
02:38:10,470 --> 02:38:15,800
<font color="#CCCCCC">problem</font>

2261
02:38:11,689 --> 02:38:18,600
Microsoft control<font color="#CCCCCC"> there dll's</font>

2262
02:38:15,800 --> 02:38:20,278
so they can make sure<font color="#CCCCCC"> that their dll</font>

2263
02:38:18,600 --> 02:38:23,369
still work<font color="#CCCCCC"> even if they're</font><font color="#E5E5E5"> using</font>

2264
02:38:20,279 --> 02:38:25,040
randomization<font color="#E5E5E5"> but</font><font color="#CCCCCC"> they can't</font><font color="#E5E5E5"> control</font>

2265
02:38:23,369 --> 02:38:27,899
your car

2266
02:38:25,040 --> 02:38:44,040
and that's why you can turn<font color="#E5E5E5"> it on and</font>

2267
02:38:27,899 --> 02:38:50,250
<font color="#CCCCCC">off various careers</font><font color="#E5E5E5"> okay so what are</font>

2268
02:38:44,040 --> 02:39:08,700
<font color="#CCCCCC">some</font><font color="#E5E5E5"> of these other</font><font color="#CCCCCC"> things</font><font color="#E5E5E5"> that might</font>

2269
02:38:50,250 --> 02:39:12,149
cause additional and here is an

2270
02:39:08,700 --> 02:39:14,250
additional<font color="#E5E5E5"> issue so we already saw what</font>

2271
02:39:12,149 --> 02:39:18,119
<font color="#E5E5E5">can I do</font><font color="#CCCCCC"> I can just keep on</font><font color="#E5E5E5"> going</font>

2272
02:39:14,250 --> 02:39:22,140
<font color="#CCCCCC">and I can dump</font><font color="#E5E5E5"> huge chunks</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you</font>

2273
02:39:18,120 --> 02:39:26,520
<font color="#E5E5E5">stack so can you guys see how I can leak</font>

2274
02:39:22,140 --> 02:39:28,560
information<font color="#E5E5E5"> pretty easy to see them we</font>

2275
02:39:26,520 --> 02:39:31,100
saw how we<font color="#CCCCCC"> could crash the program I'm</font>

2276
02:39:28,560 --> 02:39:33,689
also<font color="#E5E5E5"> pretty</font><font color="#CCCCCC"> busy</font>

2277
02:39:31,100 --> 02:39:39,569
well here's<font color="#CCCCCC"> something really</font><font color="#E5E5E5"> interesting</font>

2278
02:39:33,689 --> 02:39:46,800
that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> can do there</font><font color="#CCCCCC"> is a parameter</font>

2279
02:39:39,569 --> 02:39:49,500
called<font color="#E5E5E5"> percent and that says nothing's</font>

2280
02:39:46,800 --> 02:39:53,188
printed corresponding argument<font color="#E5E5E5"> must be a</font>

2281
02:39:49,500 --> 02:39:57,870
pointer to assigned it the<font color="#CCCCCC"> number of</font>

2282
02:39:53,189 --> 02:40:05,729
characters<font color="#E5E5E5"> written so</font><font color="#CCCCCC"> far</font><font color="#E5E5E5"> is stored in</font>

2283
02:39:57,870 --> 02:40:14,180
the pointed location<font color="#E5E5E5"> this will write an</font>

2284
02:40:05,729 --> 02:40:14,179
integer<font color="#E5E5E5"> you might say</font>

2285
02:40:17,569 --> 02:40:33,359
here's where this is about the agency

2286
02:40:20,669 --> 02:40:34,529
<font color="#E5E5E5">I want to crash this program all right</font>

2287
02:40:33,359 --> 02:40:42,799
how many<font color="#E5E5E5"> people</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> this is gonna</font>

2288
02:40:34,529 --> 02:40:45,749
crash the program<font color="#CCCCCC"> adults instant why</font>

2289
02:40:42,799 --> 02:40:50,189
<font color="#E5E5E5">percent</font><font color="#CCCCCC"> and says I'm going to give you</font>

2290
02:40:45,749 --> 02:40:53,128
an address and I would like you to write

2291
02:40:50,189 --> 02:40:56,100
the number of<font color="#E5E5E5"> characters</font><font color="#CCCCCC"> outputs so far</font>

2292
02:40:53,129 --> 02:41:01,560
<font color="#E5E5E5">to that variable which is a signed</font>

2293
02:40:56,100 --> 02:41:05,459
<font color="#CCCCCC">integer and then there's no additional</font>

2294
02:41:01,560 --> 02:41:08,429
parameter so where is<font color="#CCCCCC"> it gonna get</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> %</font>

2295
02:41:05,459 --> 02:41:13,729
<font color="#CCCCCC">end it's gonna get the</font><font color="#E5E5E5"> % end off the</font>

2296
02:41:08,429 --> 02:41:21,859
stack very is that a problem

2297
02:41:13,729 --> 02:41:28,169
yeah because<font color="#E5E5E5"> it's not going to</font><font color="#CCCCCC"> fight you</font>

2298
02:41:21,859 --> 02:41:31,889
<font color="#CCCCCC">okay so what</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> we do</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> a format</font>

2299
02:41:28,169 --> 02:41:32,539
string flop crash the program pretty

2300
02:41:31,889 --> 02:41:41,878
easy

2301
02:41:32,539 --> 02:41:53,369
we can also leak information do<font color="#E5E5E5"> you</font>

2302
02:41:41,879 --> 02:42:00,060
think we could<font color="#E5E5E5"> light information yes how</font>

2303
02:41:53,369 --> 02:42:05,719
do we do that we can't put a percent and

2304
02:42:00,060 --> 02:42:09,958
in there and then that<font color="#CCCCCC"> will cause</font>

2305
02:42:05,719 --> 02:42:13,438
whatever<font color="#E5E5E5"> it</font><font color="#CCCCCC"> thinks</font><font color="#E5E5E5"> is the next parameter</font>

2306
02:42:09,959 --> 02:42:16,159
<font color="#E5E5E5">my</font><font color="#CCCCCC"> pronounce all that</font><font color="#E5E5E5"> memory location</font>

2307
02:42:13,439 --> 02:42:18,779
whatever<font color="#E5E5E5"> the heck is stored there</font>

2308
02:42:16,159 --> 02:42:24,020
<font color="#E5E5E5">they'll say let me go to</font><font color="#CCCCCC"> that address</font>

2309
02:42:18,779 --> 02:42:24,020
and<font color="#E5E5E5"> now going like this</font>

2310
02:42:24,900 --> 02:42:40,380
<font color="#CCCCCC">Wow</font><font color="#E5E5E5"> that's interesting that's very so</font>

2311
02:42:33,900 --> 02:42:45,170
let's run this one<font color="#E5E5E5"> yeah instead of</font>

2312
02:42:40,380 --> 02:42:45,170
<font color="#E5E5E5">coming at a longer percent</font><font color="#CCCCCC"> end let me</font>

2313
02:42:45,980 --> 02:42:54,750
some more<font color="#E5E5E5"> percent</font><font color="#CCCCCC"> accidents and of</font>

2314
02:42:50,341 --> 02:42:58,051
course I could use Python<font color="#CCCCCC"> right</font><font color="#E5E5E5"> I could</font>

2315
02:42:54,750 --> 02:42:59,670
use Python to generate this earth<font color="#E5E5E5"> I'm</font>

2316
02:42:58,051 --> 02:43:03,091
really<font color="#E5E5E5"> old</font><font color="#CCCCCC"> school I guess it can use</font>

2317
02:42:59,670 --> 02:43:05,070
Part C generate this<font color="#E5E5E5"> and they</font><font color="#CCCCCC"> could say</font>

2318
02:43:03,091 --> 02:43:09,891
let me just<font color="#E5E5E5"> print out all this stuff</font><font color="#CCCCCC"> I</font>

2319
02:43:05,070 --> 02:43:09,891
can also make my life a little easier

2320
02:43:16,341 --> 02:43:28,440
we'll just use spaces<font color="#E5E5E5"> okay run it and</font>

2321
02:43:26,551 --> 02:43:33,539
I'll notice that I'm getting<font color="#CCCCCC"> certain</font>

2322
02:43:28,440 --> 02:43:45,240
<font color="#CCCCCC">gene lies why is that well because</font><font color="#E5E5E5"> my</font>

2323
02:43:33,540 --> 02:43:49,740
staff I can eventually find<font color="#CCCCCC"> out where</font>

2324
02:43:45,240 --> 02:43:52,740
I'm<font color="#CCCCCC"> gonna be on</font><font color="#E5E5E5"> this back</font><font color="#CCCCCC"> I can move the</font>

2325
02:43:49,740 --> 02:43:56,551
location<font color="#E5E5E5"> that's being printed out really</font>

2326
02:43:52,740 --> 02:44:10,860
well how do you do that<font color="#E5E5E5"> you've changed</font>

2327
02:43:56,551 --> 02:44:16,529
what's being put out there<font color="#E5E5E5"> so for</font>

2328
02:44:10,860 --> 02:44:25,230
<font color="#E5E5E5">example I could print one today okay</font>

2329
02:44:16,530 --> 02:44:28,790
it's<font color="#E5E5E5"> just a few eggs there</font><font color="#CCCCCC"> for now well</font>

2330
02:44:25,230 --> 02:44:28,789
if I give it a ton of<font color="#E5E5E5"> days</font>

2331
02:44:51,950 --> 02:45:02,820
what should happen eventually these

2332
02:44:59,250 --> 02:45:07,620
numbers I'm printing out<font color="#E5E5E5"> might be one</font>

2333
02:45:02,820 --> 02:45:11,340
<font color="#CCCCCC">formal informal as well so just like we</font>

2334
02:45:07,620 --> 02:45:13,021
<font color="#E5E5E5">had this issue with</font><font color="#CCCCCC"> our staff</font><font color="#E5E5E5"> buffer</font>

2335
02:45:11,340 --> 02:45:15,630
overflows<font color="#E5E5E5"> where we had to find that</font>

2336
02:45:13,021 --> 02:45:18,870
<font color="#CCCCCC">asset we went</font><font color="#E5E5E5"> through a couple</font><font color="#CCCCCC"> ways</font><font color="#E5E5E5"> you</font>

2337
02:45:15,630 --> 02:45:22,320
can<font color="#E5E5E5"> calculate that you can do something</font>

2338
02:45:18,870 --> 02:45:26,250
simple<font color="#CCCCCC"> similar here where you could just</font>

2339
02:45:22,320 --> 02:45:29,011
<font color="#E5E5E5">adjust some token characters until you</font>

2340
02:45:26,250 --> 02:45:36,960
started to get<font color="#E5E5E5"> that being pointed out</font>

2341
02:45:29,011 --> 02:45:50,580
here so<font color="#E5E5E5"> that is one part of what you can</font>

2342
02:45:36,960 --> 02:45:54,570
do now in the case of<font color="#CCCCCC"> this particular</font>

2343
02:45:50,580 --> 02:45:59,570
program<font color="#CCCCCC"> is not doing exactly what</font><font color="#E5E5E5"> I</font>

2344
02:45:54,570 --> 02:46:02,340
<font color="#CCCCCC">wanted and there's a reason for</font><font color="#E5E5E5"> this and</font>

2345
02:45:59,570 --> 02:46:09,660
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> because our program is very very</font>

2346
02:46:02,340 --> 02:46:11,730
<font color="#E5E5E5">simple</font><font color="#CCCCCC"> and the compiler is smart I have</font>

2347
02:46:09,660 --> 02:46:15,391
<font color="#CCCCCC">a command line parameter that is passed</font>

2348
02:46:11,730 --> 02:46:21,471
<font color="#E5E5E5">in there's not a local variable being</font>

2349
02:46:15,391 --> 02:46:24,270
created<font color="#CCCCCC"> here</font><font color="#E5E5E5"> it's just directly pretty</font>

2350
02:46:21,471 --> 02:46:27,811
if I go back<font color="#CCCCCC"> to my program</font><font color="#E5E5E5"> it says hey</font>

2351
02:46:24,271 --> 02:46:30,650
she's<font color="#CCCCCC"> pretty right now</font><font color="#E5E5E5"> okay well what</font>

2352
02:46:27,811 --> 02:46:37,460
about<font color="#E5E5E5"> I think there were some other</font>

2353
02:46:30,650 --> 02:46:37,460
programs here try to look<font color="#E5E5E5"> through</font><font color="#CCCCCC"> those</font>

2354
02:46:51,999 --> 02:47:04,839
<font color="#E5E5E5">all right this one's a little different</font>

2355
02:46:53,899 --> 02:47:11,778
<font color="#CCCCCC">now in my Mane I'm going to print</font><font color="#E5E5E5"> out</font>

2356
02:47:04,839 --> 02:47:32,419
two arguments<font color="#E5E5E5"> okay what different</font><font color="#CCCCCC"> this</font>

2357
02:47:11,779 --> 02:47:35,749
<font color="#E5E5E5">is the one okay so here I'm going to</font>

2358
02:47:32,419 --> 02:47:40,909
<font color="#E5E5E5">create</font><font color="#CCCCCC"> a local string in</font><font color="#E5E5E5"> this case it's</font>

2359
02:47:35,749 --> 02:47:44,180
<font color="#CCCCCC">4k</font><font color="#E5E5E5"> long and then I'm gonna call print</font>

2360
02:47:40,909 --> 02:47:47,270
off on that you might say well this

2361
02:47:44,180 --> 02:47:50,810
seems<font color="#E5E5E5"> kind of contrived yeah it is but</font>

2362
02:47:47,270 --> 02:47:54,049
at the same time<font color="#E5E5E5"> our example program</font>

2363
02:47:50,810 --> 02:47:56,028
before<font color="#E5E5E5"> it was super simple you're not</font>

2364
02:47:54,049 --> 02:47:57,979
going to have anything<font color="#CCCCCC"> that</font><font color="#E5E5E5"> supposing I</font>

2365
02:47:56,029 --> 02:48:00,049
took<font color="#E5E5E5"> something on the command line it</font>

2366
02:47:57,979 --> 02:48:02,929
just<font color="#E5E5E5"> did nothing else but</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know</font>

2367
02:48:00,049 --> 02:48:07,249
immediately<font color="#E5E5E5"> print it it's probably</font><font color="#CCCCCC"> gonna</font>

2368
02:48:02,930 --> 02:48:10,310
<font color="#E5E5E5">be some processing so if I take this</font>

2369
02:48:07,249 --> 02:48:11,958
<font color="#E5E5E5">program and I compile it</font><font color="#CCCCCC"> I might have</font>

2370
02:48:10,310 --> 02:48:13,819
some better<font color="#E5E5E5"> results I'm actually</font><font color="#CCCCCC"> gonna</font>

2371
02:48:11,959 --> 02:48:18,189
shorten<font color="#E5E5E5"> this a little bit though feel</font>

2372
02:48:13,819 --> 02:48:18,189
like right now<font color="#CCCCCC"> that much stuff</font>

2373
02:48:35,590 --> 02:48:55,340
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> very similar we'll try this I'll</font>

2374
02:48:42,200 --> 02:49:04,220
go out<font color="#CCCCCC"> here go ahead and once again</font><font color="#E5E5E5"> just</font>

2375
02:48:55,340 --> 02:49:09,620
<font color="#E5E5E5">morning lazy I'm gonna do this exact</font>

2376
02:49:04,220 --> 02:49:26,150
<font color="#CCCCCC">same thing we're back three instead of</font>

2377
02:49:09,620 --> 02:49:29,210
four<font color="#CCCCCC"> and it's</font><font color="#E5E5E5"> like faulted you say why</font>

2378
02:49:26,150 --> 02:49:34,460
<font color="#CCCCCC">didn't stay calm well this is</font><font color="#E5E5E5"> the other</font>

2379
02:49:29,210 --> 02:49:38,300
<font color="#CCCCCC">thing you'll find out when you</font><font color="#E5E5E5"> do these</font>

2380
02:49:34,460 --> 02:49:41,029
kinds<font color="#CCCCCC"> of things</font><font color="#E5E5E5"> if you go too far it'll</font>

2381
02:49:38,300 --> 02:49:43,490
<font color="#E5E5E5">still sick home why is it</font><font color="#CCCCCC"> still gonna</font>

2382
02:49:41,030 --> 02:49:48,021
say Paul<font color="#E5E5E5"> oh you know all those back</font>

2383
02:49:43,490 --> 02:49:58,970
protections we talked about yep<font color="#E5E5E5"> we got</font>

2384
02:49:48,021 --> 02:50:10,310
<font color="#E5E5E5">those you</font><font color="#CCCCCC"> got those in Linux now it</font>

2385
02:49:58,970 --> 02:50:11,779
<font color="#CCCCCC">printed out</font><font color="#E5E5E5"> my stuff and then</font><font color="#CCCCCC"> it so I</font>

2386
02:50:10,310 --> 02:50:16,430
have some<font color="#E5E5E5"> other protections in place</font>

2387
02:50:11,780 --> 02:50:20,320
that<font color="#CCCCCC"> are kind</font><font color="#E5E5E5"> of causing this</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> not do</font>

2388
02:50:16,430 --> 02:50:28,220
exactly<font color="#CCCCCC"> what if I went back to Windows</font><font color="#E5E5E5"> I</font>

2389
02:50:20,320 --> 02:50:31,400
could get<font color="#E5E5E5"> this</font><font color="#CCCCCC"> to happen but here's</font>

2390
02:50:28,220 --> 02:50:33,109
here's the<font color="#E5E5E5"> net of it</font><font color="#CCCCCC"> if you're really</font>

2391
02:50:31,400 --> 02:50:39,061
<font color="#E5E5E5">careful</font>

2392
02:50:33,110 --> 02:50:46,041
you can write a<font color="#E5E5E5"> value to an arbitrary</font>

2393
02:50:39,061 --> 02:50:53,581
place so I<font color="#E5E5E5"> can say oh well I figured out</font>

2394
02:50:46,041 --> 02:51:02,250
that here's a space in memory and it's

2395
02:50:53,581 --> 02:51:05,610
being pointed to I want to and I can

2396
02:51:02,251 --> 02:51:11,041
<font color="#E5E5E5">even somewhat select the value that's</font>

2397
02:51:05,610 --> 02:51:15,690
<font color="#E5E5E5">going to be there by changing these</font>

2398
02:51:11,041 --> 02:51:20,461
<font color="#CCCCCC">values now here's some other</font><font color="#E5E5E5"> things that</font>

2399
02:51:15,690 --> 02:51:25,860
I<font color="#CCCCCC"> could do</font><font color="#E5E5E5"> I could change the</font><font color="#CCCCCC"> length</font><font color="#E5E5E5"> of</font>

2400
02:51:20,461 --> 02:51:28,199
what's being output by<font color="#E5E5E5"> throwing in a</font>

2401
02:51:25,860 --> 02:51:41,461
bunch<font color="#E5E5E5"> of constants as I was doing here</font>

2402
02:51:28,200 --> 02:51:44,211
and<font color="#CCCCCC"> I can also do stuff like this % 0</font><font color="#E5E5E5"> to</font>

2403
02:51:41,461 --> 02:51:44,211
6

2404
02:51:45,891 --> 02:51:54,150
what is % 0 put a zero in there who's

2405
02:51:52,230 --> 02:51:57,921
like<font color="#CCCCCC"> really familiar</font><font color="#E5E5E5"> with these</font><font color="#CCCCCC"> format</font>

2406
02:51:54,150 --> 02:52:00,301
<font color="#CCCCCC">strings you all said</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> you Python</font><font color="#E5E5E5"> write</font>

2407
02:51:57,921 --> 02:52:03,660
Python use the same format strings

2408
02:52:00,301 --> 02:52:12,689
pretty much it says leading<font color="#E5E5E5"> zeros please</font>

2409
02:52:03,660 --> 02:52:17,041
I would like 26 characters so now what

2410
02:52:12,690 --> 02:52:21,331
I've done is<font color="#E5E5E5"> I'm affecting this outfit</font>

2411
02:52:17,041 --> 02:52:24,331
<font color="#CCCCCC">how long is the output when I use the</font>

2412
02:52:21,331 --> 02:52:31,530
<font color="#E5E5E5">percent and</font><font color="#CCCCCC"> I'll just</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> that as my</font>

2413
02:52:24,331 --> 02:52:39,421
last one here it's<font color="#E5E5E5"> going to write a</font>

2414
02:52:31,530 --> 02:52:42,291
number<font color="#CCCCCC"> two pretty much the very next</font>

2415
02:52:39,421 --> 02:52:42,291
thing<font color="#E5E5E5"> on the stack</font>

2416
02:52:42,680 --> 02:52:51,300
so by carefully<font color="#E5E5E5"> manipulating the length</font>

2417
02:52:46,430 --> 02:52:55,040
of<font color="#E5E5E5"> this format string and carefully</font>

2418
02:52:51,300 --> 02:52:59,819
manipulating the output<font color="#E5E5E5"> lane and</font>

2419
02:52:55,040 --> 02:53:05,939
aligning<font color="#E5E5E5"> things just so</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> can actually</font>

2420
02:52:59,819 --> 02:53:11,850
<font color="#E5E5E5">write a specific value to a random</font>

2421
02:53:05,939 --> 02:53:16,470
memory<font color="#E5E5E5"> address so you guys see what</font><font color="#CCCCCC"> I'm</font>

2422
02:53:11,850 --> 02:53:20,130
saying here or is<font color="#E5E5E5"> it a little fuzzy does</font>

2423
02:53:16,470 --> 02:53:25,619
it seem like<font color="#E5E5E5"> this is hard like if I</font>

2424
02:53:20,130 --> 02:53:27,750
wanted<font color="#E5E5E5"> to</font><font color="#CCCCCC"> write 42 to this exact memory</font>

2425
02:53:25,620 --> 02:53:34,670
address is that<font color="#E5E5E5"> maybe a little bit</font>

2426
02:53:27,750 --> 02:53:38,989
difficult<font color="#E5E5E5"> yeah it but at the same time</font>

2427
02:53:34,670 --> 02:53:42,630
you could do it and you<font color="#CCCCCC"> can do it across</font>

2428
02:53:38,989 --> 02:53:44,460
<font color="#E5E5E5">operating systems and you know you can't</font>

2429
02:53:42,630 --> 02:53:47,519
like stack buffer overflows we've known

2430
02:53:44,460 --> 02:53:49,679
<font color="#CCCCCC">about those for decades</font><font color="#E5E5E5"> so we got all</font>

2431
02:53:47,520 --> 02:53:51,300
kinds<font color="#E5E5E5"> of protection against that</font><font color="#CCCCCC"> what's</font>

2432
02:53:49,680 --> 02:53:53,340
our protection against this wall on

2433
02:53:51,300 --> 02:53:59,220
<font color="#E5E5E5">Linux you get a warning that's your</font>

2434
02:53:53,340 --> 02:54:02,819
protection<font color="#E5E5E5"> windows now one thing I did</font>

2435
02:53:59,220 --> 02:54:31,938
want<font color="#CCCCCC"> to show you is that</font><font color="#E5E5E5"> if I go back</font>

2436
02:54:02,819 --> 02:54:37,430
<font color="#CCCCCC">here to add a couple and parently this</font>

2437
02:54:31,939 --> 02:54:42,510
compiler I don't know<font color="#CCCCCC"> Visual Studio</font>

2438
02:54:37,430 --> 02:54:44,279
<font color="#CCCCCC">isn't supporting the percentage so it's</font>

2439
02:54:42,510 --> 02:54:45,810
not compliant with standards you might

2440
02:54:44,279 --> 02:54:51,979
say well<font color="#E5E5E5"> it sounds like the compilers</font>

2441
02:54:45,810 --> 02:54:51,979
dead but where's it getting<font color="#E5E5E5"> printf</font>

2442
02:54:54,779 --> 02:55:04,600
well it's<font color="#CCCCCC"> assistant call or it's a call</font>

2443
02:54:57,609 --> 02:55:10,149
<font color="#E5E5E5">to</font><font color="#CCCCCC"> ms be</font><font color="#E5E5E5"> CRT</font><font color="#CCCCCC"> DLL Microsoft Visual C what</font>

2444
02:55:04,600 --> 02:55:12,460
was runtime Microsoft has<font color="#E5E5E5"> non-standard</font>

2445
02:55:10,149 --> 02:55:15,160
implementations<font color="#CCCCCC"> of princess</font>

2446
02:55:12,460 --> 02:55:16,778
I know<font color="#CCCCCC"> because Microsoft is so in the</font>

2447
02:55:15,160 --> 02:55:20,050
standards<font color="#E5E5E5"> and then climb the standards</font>

2448
02:55:16,779 --> 02:55:22,380
right<font color="#E5E5E5"> they're really great about that</font>

2449
02:55:20,050 --> 02:55:28,720
<font color="#CCCCCC">it's compliant</font><font color="#E5E5E5"> with their own standards</font>

2450
02:55:22,380 --> 02:55:32,769
<font color="#E5E5E5">so Microsoft is not compliant</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> C</font>

2451
02:55:28,720 --> 02:55:34,569
standard<font color="#CCCCCC"> it's kind of</font><font color="#E5E5E5"> a big deal but I</font>

2452
02:55:32,770 --> 02:55:37,810
wanted<font color="#E5E5E5"> to make</font><font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that I pointed</font><font color="#CCCCCC"> that</font>

2453
02:55:34,569 --> 02:55:41,189
out so<font color="#E5E5E5"> that you guys know hey when it</font>

2454
02:55:37,810 --> 02:55:43,949
comes to doing this stuff on Windows

2455
02:55:41,189 --> 02:55:46,810
it's going to be a little<font color="#E5E5E5"> different</font>

2456
02:55:43,950 --> 02:55:53,050
can you disclose information with

2457
02:55:46,810 --> 02:55:57,640
Windows<font color="#E5E5E5"> yes can you get it to write to</font>

2458
02:55:53,050 --> 02:55:58,599
arbitrary memory locations<font color="#E5E5E5"> with this</font>

2459
02:55:57,640 --> 02:56:04,239
version of<font color="#E5E5E5"> Windows</font>

2460
02:55:58,600 --> 02:56:07,080
apparently not<font color="#E5E5E5"> easily yeah but of course</font>

2461
02:56:04,239 --> 02:56:10,720
<font color="#CCCCCC">Linux</font><font color="#E5E5E5"> is compliant</font><font color="#CCCCCC"> with the</font><font color="#E5E5E5"> standard</font><font color="#CCCCCC"> so</font>

2462
02:56:07,080 --> 02:56:15,010
here's an area where things are<font color="#E5E5E5"> I don't</font>

2463
02:56:10,720 --> 02:56:18,220
<font color="#CCCCCC">think that</font><font color="#E5E5E5"> knows but you don't have the</font>

2464
02:56:15,010 --> 02:56:23,760
<font color="#CCCCCC">ability to use this method to</font><font color="#E5E5E5"> like to</font>

2465
02:56:18,220 --> 02:56:30,539
<font color="#CCCCCC">arbitrarily ran with Windows what you do</font>

2466
02:56:23,760 --> 02:56:30,540
because Linux see what time is compliant

2467
02:56:38,520 --> 02:56:45,399
<font color="#CCCCCC">okay and on here in it does you guys</font>

2468
02:56:43,930 --> 02:56:49,270
were<font color="#CCCCCC"> supposed to remind me about this</font>

2469
02:56:45,399 --> 02:56:53,489
and nobody<font color="#CCCCCC"> remember so I feel</font><font color="#E5E5E5"> good I</font>

2470
02:56:49,270 --> 02:56:53,489
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> have being all describing memory</font>

2471
02:56:59,010 --> 02:57:05,670
and I wanted<font color="#E5E5E5"> to show you again you</font><font color="#CCCCCC"> go to</font>

2472
02:57:01,989 --> 02:57:05,670
<font color="#E5E5E5">view memory</font>

2473
02:57:06,300 --> 02:57:14,349
this is where it will<font color="#CCCCCC"> show you what is</font>

2474
02:57:10,149 --> 02:57:18,239
the access for<font color="#E5E5E5"> each of these memory</font>

2475
02:57:14,350 --> 02:57:25,380
areas and you'll notice<font color="#E5E5E5"> a bunch of them</font>

2476
02:57:18,239 --> 02:57:29,698
will say read rewrite read and execute

2477
02:57:25,380 --> 02:57:32,560
<font color="#E5E5E5">none</font><font color="#CCCCCC"> of them will say read write execute</font>

2478
02:57:29,699 --> 02:57:35,289
<font color="#E5E5E5">although over here it has</font><font color="#CCCCCC"> an</font><font color="#E5E5E5"> initial</font>

2479
02:57:32,560 --> 02:57:41,350
<font color="#E5E5E5">comm column so initially when the</font>

2480
02:57:35,289 --> 02:57:43,529
program wrote it everything<font color="#E5E5E5"> was right so</font>

2481
02:57:41,350 --> 02:57:45,819
this<font color="#CCCCCC"> is another one of those areas</font>

2482
02:57:43,529 --> 02:57:49,329
<font color="#CCCCCC">you've probably heard of self-modifying</font>

2483
02:57:45,819 --> 02:57:53,560
code code that when you run<font color="#E5E5E5"> it</font><font color="#CCCCCC"> it</font>

2484
02:57:49,329 --> 02:57:55,210
changes the code that's<font color="#E5E5E5"> running that is</font>

2485
02:57:53,560 --> 02:57:59,170
something if I was going<font color="#E5E5E5"> to write some</font>

2486
02:57:55,210 --> 02:58:01,509
malware<font color="#E5E5E5"> that I might do it is much</font>

2487
02:57:59,170 --> 02:58:06,189
harder<font color="#CCCCCC"> to do that with modern</font><font color="#E5E5E5"> operating</font>

2488
02:58:01,510 --> 02:58:08,260
systems<font color="#E5E5E5"> because of this</font><font color="#CCCCCC"> protection you</font>

2489
02:58:06,189 --> 02:58:14,140
would actually have<font color="#CCCCCC"> to explicitly say I</font>

2490
02:58:08,260 --> 02:58:19,689
want to<font color="#CCCCCC"> make my program</font><font color="#E5E5E5"> able to write to</font>

2491
02:58:14,140 --> 02:58:21,640
the text segment<font color="#E5E5E5"> or you know I've had</font><font color="#CCCCCC"> to</font>

2492
02:58:19,689 --> 02:58:25,270
tweak the permissions it's not very good

2493
02:58:21,640 --> 02:58:27,250
it's not<font color="#E5E5E5"> very easy to do so if you look</font>

2494
02:58:25,270 --> 02:58:30,220
at it<font color="#E5E5E5"> now we're reverse engineering now</font>

2495
02:58:27,250 --> 02:58:34,359
<font color="#E5E5E5">there it</font><font color="#CCCCCC"> Wiis that people will obscure</font>

2496
02:58:30,220 --> 02:58:40,390
that it's much harder to obscure your

2497
02:58:34,359 --> 02:58:46,239
code if you are targeting a modern we do

2498
02:58:40,390 --> 02:58:49,810
is wonderful<font color="#CCCCCC"> all right</font><font color="#E5E5E5"> well that is</font>

2499
02:58:46,239 --> 02:58:55,779
<font color="#E5E5E5">pretty much</font><font color="#CCCCCC"> what I had to talk to</font><font color="#E5E5E5"> you</font>

2500
02:58:49,810 --> 02:58:58,239
<font color="#E5E5E5">guys about</font><font color="#CCCCCC"> just reminder I did rip off</font>

2501
02:58:55,779 --> 02:59:00,460
most of this stuff all of<font color="#CCCCCC"> the stuff in</font>

2502
02:58:58,239 --> 02:59:01,739
<font color="#CCCCCC">my class at Testament cabinet with</font>

2503
02:59:00,460 --> 02:59:05,140
permission

2504
02:59:01,739 --> 02:59:06,090
it's it's being recorded<font color="#E5E5E5"> with my</font>

2505
02:59:05,140 --> 02:59:09,729
permission

2506
02:59:06,090 --> 02:59:12,010
<font color="#CCCCCC">you know just FYI you know I kind of</font>

2507
02:59:09,729 --> 02:59:15,769
watch you<font color="#E5E5E5"> guys through</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> over lunch</font><font color="#CCCCCC"> a</font>

2508
02:59:12,010 --> 02:59:20,750
little bit<font color="#CCCCCC"> lot</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> to get resources</font>

2509
02:59:15,770 --> 02:59:20,750
<font color="#CCCCCC">thanks for</font><font color="#E5E5E5"> your time</font><font color="#CCCCCC"> Joe the restaurant</font>

