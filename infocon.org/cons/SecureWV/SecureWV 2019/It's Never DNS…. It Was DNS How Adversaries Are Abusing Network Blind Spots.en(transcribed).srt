1
00:01:31,180 --> 00:01:37,490
all right baby you got quits messing

2
00:01:33,890 --> 00:01:41,570
with me are we recording awesome all

3
00:01:37,490 --> 00:01:43,460
right yay thanks for the one guy who

4
00:01:41,570 --> 00:01:46,158
potted in the room for getting the a/v

5
00:01:43,460 --> 00:01:48,410
fixed so again now that we have AV going

6
00:01:46,159 --> 00:01:51,670
my name is Matt Scheer

7
00:01:48,410 --> 00:01:55,220
you may follow me on twitter c3 arc aah

8
00:01:51,670 --> 00:01:58,540
or on LinkedIn and also the slide deck

9
00:01:55,220 --> 00:02:01,640
is available so check it out if you want

10
00:01:58,540 --> 00:02:03,800
today's talk is called lend me your irs

11
00:02:01,640 --> 00:02:06,289
so I'm gonna have to kind of go in fast

12
00:02:03,800 --> 00:02:08,570
mode here since we lost some time but

13
00:02:06,289 --> 00:02:11,330
I'm a senior system security engineer at

14
00:02:08,570 --> 00:02:14,420
First Financial Bank in Cincinnati Ohio

15
00:02:11,330 --> 00:02:16,250
I run the simple security sig if you're

16
00:02:14,420 --> 00:02:20,149
ever around Cincinnati third Thursday of

17
00:02:16,250 --> 00:02:23,540
any month we meet in have awesome sort

18
00:02:20,150 --> 00:02:24,620
of visa it's quality meetings and I'm

19
00:02:23,540 --> 00:02:27,890
also a bugcrowd

20
00:02:24,620 --> 00:02:29,480
ambassador and security researcher so

21
00:02:27,890 --> 00:02:31,458
today's objectives are we're going to

22
00:02:29,480 --> 00:02:33,829
show live demo reenactments of real

23
00:02:31,459 --> 00:02:35,989
attacks and it's gonna be on how these

24
00:02:33,830 --> 00:02:39,019
real-world attacks worked how and why

25
00:02:35,989 --> 00:02:39,830
they defeated security solutions and

26
00:02:39,019 --> 00:02:41,810
then we're going to show if the

27
00:02:39,830 --> 00:02:44,209
responses to these attacks demoing the

28
00:02:41,810 --> 00:02:46,070
investigation tools and techniques as

29
00:02:44,209 --> 00:02:48,950
well as discuss lessons learned and key

30
00:02:46,070 --> 00:02:51,230
takeaways so we're all on the same page

31
00:02:48,950 --> 00:02:53,570
to start it off with the acronyms I'm

32
00:02:51,230 --> 00:02:56,060
gonna use and throw about here or IOC

33
00:02:53,570 --> 00:02:59,030
which is indicator of compromise IR

34
00:02:56,060 --> 00:03:00,829
which is Incident Response and D F IR

35
00:02:59,030 --> 00:03:03,019
which is digital forensics and Incident

36
00:03:00,829 --> 00:03:05,630
Response so you may hear these bandied

37
00:03:03,019 --> 00:03:07,820
about throughout today's talk so some

38
00:03:05,630 --> 00:03:11,480
quick disclaimers here that the demos

39
00:03:07,820 --> 00:03:13,459
are all based on 100% true stories they

40
00:03:11,480 --> 00:03:15,530
dutifully recreate actual attacks

41
00:03:13,459 --> 00:03:18,739
however I've altered a lot of the

42
00:03:15,530 --> 00:03:20,660
details so the investigation demos are

43
00:03:18,739 --> 00:03:24,470
sped up considerably in the interest of

44
00:03:20,660 --> 00:03:28,100
time and also when you do these

45
00:03:24,470 --> 00:03:31,070
techniques only do so on a dedicated

46
00:03:28,100 --> 00:03:32,780
securely isolated in volatile sandbox

47
00:03:31,070 --> 00:03:35,329
and if you're like me if you have a

48
00:03:32,780 --> 00:03:38,570
commercial sandbox use that if you don't

49
00:03:35,329 --> 00:03:40,669
have that then use something like sift

50
00:03:38,570 --> 00:03:43,040
or REM knucks or build out your own

51
00:03:40,669 --> 00:03:44,440
whatever you want to do there I'm just

52
00:03:43,040 --> 00:03:46,900
here to give you an informative info

53
00:03:44,440 --> 00:03:48,480
SEC Talk I'm not your parent and I'm not

54
00:03:46,900 --> 00:03:50,890
here to tell you how to live your life

55
00:03:48,480 --> 00:03:53,619
so with that let's go ahead and pick it

56
00:03:50,890 --> 00:03:55,440
off I don't know how many speakers here

57
00:03:53,620 --> 00:03:59,110
at hacker Con are doing live demos

58
00:03:55,440 --> 00:04:07,120
however I am one doing them and it's

59
00:03:59,110 --> 00:04:09,300
either because I'm bold fearless or

60
00:04:07,120 --> 00:04:15,299
crazy

61
00:04:09,300 --> 00:04:18,040
please pick two so I'm not just crazy

62
00:04:15,299 --> 00:04:21,730
all right so my first scenario is called

63
00:04:18,040 --> 00:04:24,580
the mystery attachment so going back to

64
00:04:21,730 --> 00:04:27,940
a news headline on August 17th of 2018

65
00:04:24,580 --> 00:04:31,270
mouth spam campaigns target banks using

66
00:04:27,940 --> 00:04:32,950
Microsoft Publisher the flawed Amy rat

67
00:04:31,270 --> 00:04:35,440
was part of the nickers botnet is

68
00:04:32,950 --> 00:04:36,849
reported by researchers at Trustwave and

69
00:04:35,440 --> 00:04:38,320
if you get the slide deck here's the

70
00:04:36,850 --> 00:04:42,100
link to the article down at the bottom

71
00:04:38,320 --> 00:04:44,740
got reported numerous places but best I

72
00:04:42,100 --> 00:04:48,370
could tell they were the ones who put it

73
00:04:44,740 --> 00:04:50,470
out first so to set the table

74
00:04:48,370 --> 00:04:52,630
one day I'm diligently working my desk

75
00:04:50,470 --> 00:04:55,150
probably on like half a dozen things at

76
00:04:52,630 --> 00:04:56,830
one time and all of a sudden in the

77
00:04:55,150 --> 00:05:00,429
midst of my working on whatever I was

78
00:04:56,830 --> 00:05:04,960
working on have a important person

79
00:05:00,430 --> 00:05:07,570
running up to my desk and say Matt help

80
00:05:04,960 --> 00:05:09,549
one of our VIPs with access to lots of

81
00:05:07,570 --> 00:05:11,680
sensitive information just got hit in

82
00:05:09,550 --> 00:05:12,910
that recent mouth spam campaign

83
00:05:11,680 --> 00:05:15,010
targeting banks

84
00:05:12,910 --> 00:05:17,320
it matches I OCS from reports of that

85
00:05:15,010 --> 00:05:20,230
new flawed Amy rat which is part of the

86
00:05:17,320 --> 00:05:22,240
Dicker's botnet the recipient attempted

87
00:05:20,230 --> 00:05:24,730
to open the MS publisher attachment on

88
00:05:22,240 --> 00:05:26,440
their smartphone I need you to drop

89
00:05:24,730 --> 00:05:28,510
whatever you were doing and investigate

90
00:05:26,440 --> 00:05:31,000
this will get the attachment to you as

91
00:05:28,510 --> 00:05:33,990
soon as possible now I am NOT a mobile

92
00:05:31,000 --> 00:05:37,419
forensics expert we don't necessarily

93
00:05:33,990 --> 00:05:40,570
maybe have great tools for that but I'm

94
00:05:37,419 --> 00:05:42,700
the closest person we have and that can

95
00:05:40,570 --> 00:05:45,880
look at it so all right we'll take a

96
00:05:42,700 --> 00:05:48,580
look see if we can figure out here so I

97
00:05:45,880 --> 00:05:51,490
get the attachment and we'll go ahead

98
00:05:48,580 --> 00:05:54,310
and open it now when I'm demoing stuff

99
00:05:51,490 --> 00:05:56,770
here we have to pretend that I'm using a

100
00:05:54,310 --> 00:05:58,240
sandbox these are live demos I've built

101
00:05:56,770 --> 00:05:59,830
a custom environment here

102
00:05:58,240 --> 00:06:02,110
and in the interest of time I don't have

103
00:05:59,830 --> 00:06:04,060
time to fire up a proper sandbox so when

104
00:06:02,110 --> 00:06:07,389
you see me doing this stuff in the talk

105
00:06:04,060 --> 00:06:10,840
just imagine if you will that I'm doing

106
00:06:07,389 --> 00:06:11,860
this in a sandbox like in real life so

107
00:06:10,840 --> 00:06:16,258
I'm going to go ahead and open it up

108
00:06:11,860 --> 00:06:18,849
here and let me see if I can get the

109
00:06:16,259 --> 00:06:23,229
optimal width so it's not such an eye

110
00:06:18,849 --> 00:06:26,020
chart so open up this publisher file in

111
00:06:23,229 --> 00:06:28,000
the sandbox and I see this text that the

112
00:06:26,020 --> 00:06:30,669
macro is basically have to be enabled to

113
00:06:28,000 --> 00:06:33,009
display the contents click the enable

114
00:06:30,669 --> 00:06:35,109
content button what was really

115
00:06:33,009 --> 00:06:37,780
interesting is I couldn't actually get

116
00:06:35,110 --> 00:06:39,610
that to pop up and execute the macker I

117
00:06:37,780 --> 00:06:41,710
couldn't get the prompt to make it

118
00:06:39,610 --> 00:06:43,660
happen and I thought well this is odd

119
00:06:41,710 --> 00:06:45,549
because clearly that's how this thing

120
00:06:43,660 --> 00:06:47,800
would appear to be staged I've seen this

121
00:06:45,550 --> 00:06:49,750
type of thing before chances are a lot

122
00:06:47,800 --> 00:06:51,270
of people through m-- have seen this

123
00:06:49,750 --> 00:06:53,800
kind of thing before

124
00:06:51,270 --> 00:06:56,830
so anyway I'm dedicating at the sandbox

125
00:06:53,800 --> 00:06:58,590
to get the analysis on it and when I get

126
00:06:56,830 --> 00:07:00,520
the detailed analysis report on it

127
00:06:58,590 --> 00:07:03,310
didn't really necessarily look

128
00:07:00,520 --> 00:07:05,289
particularly bad I couldn't really find

129
00:07:03,310 --> 00:07:07,990
any signs of here's something malicious

130
00:07:05,289 --> 00:07:11,440
so I'm thinking well that's definitely

131
00:07:07,990 --> 00:07:15,159
odd but let's try to understand you know

132
00:07:11,440 --> 00:07:17,320
sort of what's happening with it so I'm

133
00:07:15,159 --> 00:07:21,789
going to go ahead and switch back into

134
00:07:17,320 --> 00:07:23,349
my folder and I will maximize this and

135
00:07:21,789 --> 00:07:28,360
blow it up so everybody can see it

136
00:07:23,349 --> 00:07:31,840
better so there's my publisher file

137
00:07:28,360 --> 00:07:34,139
hopefully folks can see that okay I can

138
00:07:31,840 --> 00:07:36,280
maybe expand it just a little bit more

139
00:07:34,139 --> 00:07:38,860
so what I want to do is run through

140
00:07:36,280 --> 00:07:41,619
strings just as hoop helps my tab

141
00:07:38,860 --> 00:07:49,139
complete that so one news run this thing

142
00:07:41,620 --> 00:07:49,139
through strings oh you know what

143
00:07:50,910 --> 00:07:56,960
I'm gonna pipe it out to less now I

144
00:07:52,980 --> 00:08:00,180
could basically direct this output to a

145
00:07:56,960 --> 00:08:01,560
text file and open open an editor of my

146
00:08:00,180 --> 00:08:04,650
choosing

147
00:08:01,560 --> 00:08:07,470
I or if I don't redirect it to a file I

148
00:08:04,650 --> 00:08:09,810
can basically pipe it out to less and

149
00:08:07,470 --> 00:08:11,550
just kind of scroll through it here and

150
00:08:09,810 --> 00:08:13,380
see if there's anything that stands out

151
00:08:11,550 --> 00:08:15,660
you know maybe some sort of an artifact

152
00:08:13,380 --> 00:08:17,370
left in there in plain text or maybe

153
00:08:15,660 --> 00:08:19,830
some sort of a character string I can

154
00:08:17,370 --> 00:08:22,470
basically search on I'd figure out who's

155
00:08:19,830 --> 00:08:24,780
done this I don't I didn't find anything

156
00:08:22,470 --> 00:08:28,410
crazy in here nothing told me like hey

157
00:08:24,780 --> 00:08:36,419
this is necessarily awful so good and

158
00:08:28,410 --> 00:08:38,010
quit out of there so cuz I'm looking at

159
00:08:36,419 --> 00:08:40,978
that I'm thinking well let's go ahead

160
00:08:38,010 --> 00:08:43,169
and get a hash of this file since I'm

161
00:08:40,979 --> 00:08:45,450
not understanding at this point exactly

162
00:08:43,169 --> 00:08:49,470
what it's doing so I'm gonna go ahead

163
00:08:45,450 --> 00:08:52,470
and so I type in there in communion shot

164
00:08:49,470 --> 00:08:59,130
tivity physics um and the file name in

165
00:08:52,470 --> 00:09:03,960
here I have the hash for the file so

166
00:08:59,130 --> 00:09:07,040
anybody sees that think alright let's go

167
00:09:03,960 --> 00:09:12,270
ahead and do some searching on this

168
00:09:07,040 --> 00:09:16,349
click the wrong thing there so I know

169
00:09:12,270 --> 00:09:18,300
that you're not gonna see the URL but

170
00:09:16,350 --> 00:09:20,340
there's the hash value the same one we

171
00:09:18,300 --> 00:09:24,410
were just looking at this is virustotal

172
00:09:20,340 --> 00:09:26,640
which has about 70 some-odd AV scanners

173
00:09:24,410 --> 00:09:28,800
nothing has seen this particular file

174
00:09:26,640 --> 00:09:30,120
which I found interesting because

175
00:09:28,800 --> 00:09:33,870
usually that's kind of attachment

176
00:09:30,120 --> 00:09:35,640
that'll get repurposed it could be you

177
00:09:33,870 --> 00:09:37,680
know customized the new variant of it

178
00:09:35,640 --> 00:09:39,270
something like that but I really thought

179
00:09:37,680 --> 00:09:41,040
you know had a good chance of finding a

180
00:09:39,270 --> 00:09:47,310
result so here you can see a little

181
00:09:41,040 --> 00:09:49,319
better with an insight here you see a

182
00:09:47,310 --> 00:09:51,359
little better with the hash value but

183
00:09:49,320 --> 00:09:55,560
you can also see nothing again was found

184
00:09:51,360 --> 00:09:58,080
so the question is you know what else

185
00:09:55,560 --> 00:10:00,000
let's take a look on hybrid analysis a

186
00:09:58,080 --> 00:10:02,610
lot of people submit to their to see if

187
00:10:00,000 --> 00:10:04,770
they can find stuff again no results

188
00:10:02,610 --> 00:10:06,780
found

189
00:10:04,770 --> 00:10:09,240
you can see here see it Rolo but

190
00:10:06,780 --> 00:10:13,079
basically the hash value and the URL up

191
00:10:09,240 --> 00:10:15,870
above says last resort let's just search

192
00:10:13,080 --> 00:10:17,820
for it on Google and again absolutely no

193
00:10:15,870 --> 00:10:19,650
results at this point I'm not really

194
00:10:17,820 --> 00:10:21,600
sure what I have I can't really

195
00:10:19,650 --> 00:10:23,880
understand what it's doing it's

196
00:10:21,600 --> 00:10:25,800
basically defeating every security

197
00:10:23,880 --> 00:10:29,040
scanner app that I'm throwing at it and

198
00:10:25,800 --> 00:10:30,990
I found nothing in strings never seen

199
00:10:29,040 --> 00:10:32,430
the hash anywhere and I'm really

200
00:10:30,990 --> 00:10:35,370
contemplating like you know what's my

201
00:10:32,430 --> 00:10:40,229
next step now on this mobile device

202
00:10:35,370 --> 00:10:43,650
and I'm just thinking well you know do

203
00:10:40,230 --> 00:10:45,990
we say well chances a publisher file is

204
00:10:43,650 --> 00:10:49,680
going to do something super malicious on

205
00:10:45,990 --> 00:10:52,020
a an iPhone for example is unlikely and

206
00:10:49,680 --> 00:10:54,180
I think it's an acceptable risk it seems

207
00:10:52,020 --> 00:10:57,540
like a really bad idea so I kind of

208
00:10:54,180 --> 00:10:59,520
instantly set that one aside and then I

209
00:10:57,540 --> 00:11:02,280
think well what if we did a security

210
00:10:59,520 --> 00:11:03,720
wipe with a mobile device and then gave

211
00:11:02,280 --> 00:11:07,589
it back to the user would that be

212
00:11:03,720 --> 00:11:09,240
adequate enough to safely say risk is

213
00:11:07,590 --> 00:11:11,730
pretty low that something happened here

214
00:11:09,240 --> 00:11:13,830
but again thinking who this is then the

215
00:11:11,730 --> 00:11:15,300
type of information they could have it

216
00:11:13,830 --> 00:11:17,220
doesn't seem like a good idea now they

217
00:11:15,300 --> 00:11:19,380
weren't ready for a refresh quite yet

218
00:11:17,220 --> 00:11:21,420
but they were pretty close to it so I'm

219
00:11:19,380 --> 00:11:23,990
thinking well perhaps what we want to do

220
00:11:21,420 --> 00:11:26,640
here is actually comedy or the device

221
00:11:23,990 --> 00:11:29,760
shut it down throw it in the forensics

222
00:11:26,640 --> 00:11:32,340
lab and essentially order them an

223
00:11:29,760 --> 00:11:34,790
updated model and go ahead and replenish

224
00:11:32,340 --> 00:11:36,960
that user with a new device anyway

225
00:11:34,790 --> 00:11:39,360
thinking through all these thoughts in

226
00:11:36,960 --> 00:11:42,060
my head I thought well this is kind of

227
00:11:39,360 --> 00:11:43,980
lame but you know I didn't actually look

228
00:11:42,060 --> 00:11:45,719
at the exit data and it windows it's

229
00:11:43,980 --> 00:11:47,460
pretty simple you right-click on the

230
00:11:45,720 --> 00:11:50,010
file you go into the properties and you

231
00:11:47,460 --> 00:11:52,140
look on the details tab and you look for

232
00:11:50,010 --> 00:11:54,330
you know things like author or other

233
00:11:52,140 --> 00:11:56,189
hints you always have to take that stuff

234
00:11:54,330 --> 00:12:00,870
with a grain of salt but it's pretty

235
00:11:56,190 --> 00:12:05,070
easy to do in Linux if I use the Pearl

236
00:12:00,870 --> 00:12:08,730
exit tool I can take a look at that so

237
00:12:05,070 --> 00:12:10,400
go ahead and pull up the file here and

238
00:12:08,730 --> 00:12:12,780
[Music]

239
00:12:10,400 --> 00:12:14,850
as I'm looking at it

240
00:12:12,780 --> 00:12:17,310
all of these things that seem like a

241
00:12:14,850 --> 00:12:17,950
little weird on the on the file type and

242
00:12:17,310 --> 00:12:21,489
the

243
00:12:17,950 --> 00:12:24,880
and the mimetype all that matches

244
00:12:21,490 --> 00:12:26,500
Microsoft Publisher to a tee so it's

245
00:12:24,880 --> 00:12:28,360
definitely a genuine publisher file no

246
00:12:26,500 --> 00:12:31,210
doubt about that now the author didn't

247
00:12:28,360 --> 00:12:34,630
say test fish but I will give you an

248
00:12:31,210 --> 00:12:37,090
idea what it did actually show me let me

249
00:12:34,630 --> 00:12:40,390
go ahead and pull up the next slide what

250
00:12:37,090 --> 00:12:42,100
it was was a facepalm moment because it

251
00:12:40,390 --> 00:12:47,350
was our test fishing vendor was the

252
00:12:42,100 --> 00:12:48,790
author now I spent hours looking into

253
00:12:47,350 --> 00:12:51,040
this trying to understand what it did

254
00:12:48,790 --> 00:12:54,010
online research I mean you name it I was

255
00:12:51,040 --> 00:12:56,589
looking at details around you know the

256
00:12:54,010 --> 00:12:58,930
bad Amy fall looking for i/o sees that I

257
00:12:56,590 --> 00:13:00,940
could you sort of look at what traits

258
00:12:58,930 --> 00:13:02,199
characteristics you know it's

259
00:13:00,940 --> 00:13:03,910
contemplating doing some memory

260
00:13:02,200 --> 00:13:05,680
forensics on it even though it's not my

261
00:13:03,910 --> 00:13:09,480
bread-and-butter I dabbled in it a

262
00:13:05,680 --> 00:13:11,560
little bit so I spent all that time but

263
00:13:09,480 --> 00:13:13,600
not taking that as a grain of salt

264
00:13:11,560 --> 00:13:17,709
because obviously the EXIF data could be

265
00:13:13,600 --> 00:13:20,680
spoofed I went to the mail server and I

266
00:13:17,710 --> 00:13:24,940
looked at the headers and sure enough it

267
00:13:20,680 --> 00:13:27,849
came from the mail server at our fishing

268
00:13:24,940 --> 00:13:30,220
vendor test fishing vendor what I saw

269
00:13:27,850 --> 00:13:32,710
for the IP address is yes Matt this

270
00:13:30,220 --> 00:13:36,010
really is your test fishing vendors IP

271
00:13:32,710 --> 00:13:39,370
address you don't so it's okay you can

272
00:13:36,010 --> 00:13:42,189
laugh at my pain but let's talk about

273
00:13:39,370 --> 00:13:43,900
what went wrong so what went wrong is I

274
00:13:42,190 --> 00:13:46,380
got caught up in the moment

275
00:13:43,900 --> 00:13:50,110
subconsciously letting somebody else

276
00:13:46,380 --> 00:13:52,270
influence my investigation their anxiety

277
00:13:50,110 --> 00:13:54,430
and their bad assumptions I wore off on

278
00:13:52,270 --> 00:13:56,530
me they were like super amped up about

279
00:13:54,430 --> 00:13:57,969
it and it got me worked up as a result

280
00:13:56,530 --> 00:14:00,040
and they were talking about the

281
00:13:57,970 --> 00:14:02,080
attachment I got so honed in to focus

282
00:14:00,040 --> 00:14:04,750
the attachment there really I lost sight

283
00:14:02,080 --> 00:14:07,210
of my own processes and procedures which

284
00:14:04,750 --> 00:14:08,860
namely and I've given a lot of fishing

285
00:14:07,210 --> 00:14:12,550
forensics talks a lot of different

286
00:14:08,860 --> 00:14:15,370
conferences was you know always start

287
00:14:12,550 --> 00:14:17,319
with the email headers and so I abandon

288
00:14:15,370 --> 00:14:18,880
at this one time I lost focus on what I

289
00:14:17,320 --> 00:14:21,670
was doing

290
00:14:18,880 --> 00:14:23,950
so the road to redemption here was

291
00:14:21,670 --> 00:14:25,479
people lessons learned for reminders and

292
00:14:23,950 --> 00:14:27,730
stick to my standard investigative

293
00:14:25,480 --> 00:14:29,590
processes and procedures if I would have

294
00:14:27,730 --> 00:14:31,540
started by looking at the headers first

295
00:14:29,590 --> 00:14:33,190
instead of getting buried in Thea

296
00:14:31,540 --> 00:14:35,110
attachment I could have closed out this

297
00:14:33,190 --> 00:14:38,050
investigation in minutes instead of

298
00:14:35,110 --> 00:14:40,630
hours but since it was a false alarm in

299
00:14:38,050 --> 00:14:43,810
a sense there are no further technical

300
00:14:40,630 --> 00:14:47,620
actions required on this one so scenario

301
00:14:43,810 --> 00:14:50,258
two is security scanner evasion so what

302
00:14:47,620 --> 00:14:52,420
happened in the environment is identical

303
00:14:50,259 --> 00:14:55,810
identical phishing emails started

304
00:14:52,420 --> 00:14:58,449
hitting inboxes in wild scaled reports

305
00:14:55,810 --> 00:15:00,040
of phishing came pouring in the phishing

306
00:14:58,449 --> 00:15:02,410
page linked no longer appeared to be

307
00:15:00,040 --> 00:15:04,149
working and my security scanner was the

308
00:15:02,410 --> 00:15:07,810
malicious site taken offline already

309
00:15:04,149 --> 00:15:09,490
what's investigate and find out so the

310
00:15:07,810 --> 00:15:11,979
investigation will start by looking at

311
00:15:09,490 --> 00:15:13,810
the message source and looking for

312
00:15:11,980 --> 00:15:16,149
hyperlinks then we're going to look at

313
00:15:13,810 --> 00:15:19,719
the demo page with a or the landing page

314
00:15:16,149 --> 00:15:21,759
rather with a security skier solution or

315
00:15:19,720 --> 00:15:23,350
a pretend one in this case and then

316
00:15:21,759 --> 00:15:26,350
we're gonna look at the source code and

317
00:15:23,350 --> 00:15:28,959
open the phishing page in our sandbox so

318
00:15:26,350 --> 00:15:30,970
let's go ahead and do those things so

319
00:15:28,959 --> 00:15:40,599
let me go ahead and pull up the phishing

320
00:15:30,970 --> 00:15:44,560
email here and I will blow this up so

321
00:15:40,600 --> 00:15:45,790
everybody can see it here now there are

322
00:15:44,560 --> 00:15:46,899
parts of this you won't be able to see

323
00:15:45,790 --> 00:15:49,599
in the room and the headers

324
00:15:46,899 --> 00:15:51,990
unfortunately but it's from evil that's

325
00:15:49,600 --> 00:15:56,010
the Emirate promise we are legit calm

326
00:15:51,990 --> 00:15:59,680
the subject is this link is totally safe

327
00:15:56,010 --> 00:16:02,199
and it's through phishing target which

328
00:15:59,680 --> 00:16:04,569
is unwitting victim at random target org

329
00:16:02,199 --> 00:16:07,089
and the emails you see says hello

330
00:16:04,569 --> 00:16:09,010
phishing target we have a really

331
00:16:07,089 --> 00:16:12,220
important message for you to retrieve

332
00:16:09,010 --> 00:16:15,970
your message click here real subtle

333
00:16:12,220 --> 00:16:17,290
right regards spoof sender now in spite

334
00:16:15,970 --> 00:16:20,439
of the fact that there were more red

335
00:16:17,290 --> 00:16:22,889
flags in this message that he could find

336
00:16:20,439 --> 00:16:26,439
inside of vladimir putin's garage as

337
00:16:22,889 --> 00:16:27,970
souvenirs from his old KGB days you know

338
00:16:26,439 --> 00:16:29,769
if i set this out as a test phishing

339
00:16:27,970 --> 00:16:32,439
campaign there's probably at least that

340
00:16:29,769 --> 00:16:33,759
one person and everybody's organization

341
00:16:32,439 --> 00:16:36,550
it's still gonna click on that link

342
00:16:33,759 --> 00:16:39,250
right so let's go ahead and take a look

343
00:16:36,550 --> 00:16:41,740
at the source code here in thunderbird

344
00:16:39,250 --> 00:16:44,130
we would do that under view and message

345
00:16:41,740 --> 00:16:44,130
source

346
00:16:45,220 --> 00:16:48,330
you know make that a little bit bigger

347
00:16:58,470 --> 00:17:15,030
all right so here's our URL from the

348
00:17:03,030 --> 00:17:19,550
efficient email so Athens when we look

349
00:17:15,030 --> 00:17:19,550
at that inside of a security scanner

350
00:17:20,869 --> 00:17:28,590
pull this up so pull it in get a

351
00:17:24,660 --> 00:17:30,450
screenshot of it for for air we've all

352
00:17:28,590 --> 00:17:32,310
seen this right so when a resource is

353
00:17:30,450 --> 00:17:35,370
taken offline it's not available

354
00:17:32,310 --> 00:17:36,000
something's happened to the server you

355
00:17:35,370 --> 00:17:39,629
name it

356
00:17:36,000 --> 00:17:41,790
essentially this 404 message is hey it's

357
00:17:39,630 --> 00:17:43,740
already gone so nothing to work about

358
00:17:41,790 --> 00:17:46,710
right we just pose this case and and

359
00:17:43,740 --> 00:17:48,480
move on or at least you know we could do

360
00:17:46,710 --> 00:17:56,840
that but we might want to dig just a

361
00:17:48,480 --> 00:17:56,840
little bit deeper so clear that up

362
00:18:00,500 --> 00:18:07,940
and so what we want to do is go ahead

363
00:18:04,980 --> 00:18:12,630
and see if we can grab this information

364
00:18:07,940 --> 00:18:15,000
so well go ahead and do curl you know

365
00:18:12,630 --> 00:18:19,860
still got the website address copied in

366
00:18:15,000 --> 00:18:25,860
here then we'll do output and we'll call

367
00:18:19,860 --> 00:18:28,320
it unknown dot HTML that's one way you

368
00:18:25,860 --> 00:18:30,889
can retrieve it we could also use W get

369
00:18:28,320 --> 00:18:38,419
so let me go ahead and do W get and

370
00:18:30,890 --> 00:18:38,420
paste in the URL now

371
00:18:48,090 --> 00:18:54,870
we look at these we'll notice that

372
00:18:51,390 --> 00:19:04,090
they're the same file size if I

373
00:18:54,870 --> 00:19:06,820
basically do a sha-256 sum both of these

374
00:19:04,090 --> 00:19:09,280
files have the same sha-256 hash value

375
00:19:06,820 --> 00:19:11,379
so forensically it doesn't really matter

376
00:19:09,280 --> 00:19:13,180
a whole lot which we're using now some

377
00:19:11,380 --> 00:19:14,470
of you might say well the timestamps

378
00:19:13,180 --> 00:19:16,450
differ we got one from today's date

379
00:19:14,470 --> 00:19:18,400
that's only because the demo environment

380
00:19:16,450 --> 00:19:21,160
in real life it's going to show you

381
00:19:18,400 --> 00:19:22,690
whatever the if you use W gets gonna

382
00:19:21,160 --> 00:19:24,970
show you the time that you retrieved it

383
00:19:22,690 --> 00:19:26,590
since this is grabbing a local copy in

384
00:19:24,970 --> 00:19:28,390
this case it doesn't actually change

385
00:19:26,590 --> 00:19:30,760
that so in real life you wouldn't have

386
00:19:28,390 --> 00:19:33,040
that benefit of seeing the original date

387
00:19:30,760 --> 00:19:34,900
but you can tell from the hash value in

388
00:19:33,040 --> 00:19:37,149
the file size these are basically the

389
00:19:34,900 --> 00:19:40,060
same file so doesn't matter which method

390
00:19:37,150 --> 00:19:42,760
you use in this case they both work the

391
00:19:40,060 --> 00:19:45,820
same for our purposes so let's go ahead

392
00:19:42,760 --> 00:19:48,900
and pull up the index.html file to see

393
00:19:45,820 --> 00:19:48,899
what was going on with it

394
00:19:57,660 --> 00:20:02,010
so I'll blow this up here a little bit

395
00:19:59,610 --> 00:20:05,219
and I've made this as easy under State

396
00:20:02,010 --> 00:20:07,860
as possible but basically what's going

397
00:20:05,220 --> 00:20:10,200
on is we're doing some user agent checks

398
00:20:07,860 --> 00:20:13,469
in the source code here and it's looking

399
00:20:10,200 --> 00:20:16,530
for things like chrome edge Firefox

400
00:20:13,470 --> 00:20:19,380
Internet Explorer opera and Safari and

401
00:20:16,530 --> 00:20:23,420
if it matches one of those user agent

402
00:20:19,380 --> 00:20:28,470
strings it sends it to a different page

403
00:20:23,420 --> 00:20:31,020
if it is not matching one of those it

404
00:20:28,470 --> 00:20:32,970
sends a traffic to a 404 error page I

405
00:20:31,020 --> 00:20:35,190
thought that was pretty clever because

406
00:20:32,970 --> 00:20:37,620
that actually did pool at least one

407
00:20:35,190 --> 00:20:39,810
security skater that I threw at it was

408
00:20:37,620 --> 00:20:44,850
it actually opened up the website

409
00:20:39,810 --> 00:20:49,500
address in a new browser that it came

410
00:20:44,850 --> 00:20:55,230
through so we're good and do that and

411
00:20:49,500 --> 00:20:59,100
see what that looks like and so in the

412
00:20:55,230 --> 00:21:01,350
sandbox when I pull it up you know what

413
00:20:59,100 --> 00:21:04,139
we essentially have is an office 365

414
00:21:01,350 --> 00:21:05,669
credential harvesting site so the site's

415
00:21:04,140 --> 00:21:07,230
still live in spite of the first

416
00:21:05,670 --> 00:21:10,200
impression that looks like hey this

417
00:21:07,230 --> 00:21:11,640
thing was actually taken down so by

418
00:21:10,200 --> 00:21:14,340
digging a little bit deeper we could see

419
00:21:11,640 --> 00:21:17,070
what happened so let's go ahead and talk

420
00:21:14,340 --> 00:21:28,139
about it a little more just some

421
00:21:17,070 --> 00:21:30,389
observations I had from that so we

422
00:21:28,140 --> 00:21:32,970
talked about the user agent Reede string

423
00:21:30,390 --> 00:21:35,160
based redirection I got lucky in this

424
00:21:32,970 --> 00:21:39,450
case they use JavaScript because if they

425
00:21:35,160 --> 00:21:42,090
had used a server-side language like PHP

426
00:21:39,450 --> 00:21:44,550
or Python or any number of them that's

427
00:21:42,090 --> 00:21:47,850
not even a full representative list but

428
00:21:44,550 --> 00:21:49,409
some of the popular ones I wouldn't have

429
00:21:47,850 --> 00:21:51,870
seen it because you need you know

430
00:21:49,410 --> 00:21:53,430
essentially privilege server access if

431
00:21:51,870 --> 00:21:54,989
you actually see that on the server side

432
00:21:53,430 --> 00:21:56,790
if it's not your server that was

433
00:21:54,990 --> 00:21:59,370
compromised probably not going to get

434
00:21:56,790 --> 00:22:00,810
that at least not legally in most places

435
00:21:59,370 --> 00:22:03,000
aren't just gonna let you hop on their

436
00:22:00,810 --> 00:22:05,129
server and take a ride to see hey can I

437
00:22:03,000 --> 00:22:07,230
see what your hacked web server code

438
00:22:05,130 --> 00:22:08,760
looks like probably not going to be too

439
00:22:07,230 --> 00:22:11,400
supportive unless you have to work like

440
00:22:08,760 --> 00:22:15,870
law enforcement maybe

441
00:22:11,400 --> 00:22:17,130
so something I've thought about is you

442
00:22:15,870 --> 00:22:18,570
know this technique could actually be

443
00:22:17,130 --> 00:22:19,980
used by threat actors let's say they had

444
00:22:18,570 --> 00:22:22,860
an exploit kit that only worked on

445
00:22:19,980 --> 00:22:23,840
Firefox is an arbitrary example what

446
00:22:22,860 --> 00:22:26,490
they could do is they could actually

447
00:22:23,840 --> 00:22:29,010
check to see if visitors have the

448
00:22:26,490 --> 00:22:31,290
Firefox browser if they do direct them

449
00:22:29,010 --> 00:22:33,090
to the exploit payload page and then

450
00:22:31,290 --> 00:22:35,520
round-robin redirect them back to the

451
00:22:33,090 --> 00:22:37,980
real page those browser redirects happen

452
00:22:35,520 --> 00:22:39,900
so fast most users aren't gonna notice

453
00:22:37,980 --> 00:22:42,930
probably need to see it it's gonna

454
00:22:39,900 --> 00:22:45,270
happen so fast and then meanwhile it

455
00:22:42,930 --> 00:22:47,190
would direct everything else to the you

456
00:22:45,270 --> 00:22:48,780
know the actual page it's gonna get

457
00:22:47,190 --> 00:22:51,809
really hard to detect because unless

458
00:22:48,780 --> 00:22:54,870
your security school tools are sending

459
00:22:51,809 --> 00:22:57,300
user agent strings of Firefox for in our

460
00:22:54,870 --> 00:23:00,449
example it's not necessarily gonna hit

461
00:22:57,300 --> 00:23:01,830
that and you could get very detailed

462
00:23:00,450 --> 00:23:03,900
with that you could even look for

463
00:23:01,830 --> 00:23:06,570
specific vulnerable versions and do the

464
00:23:03,900 --> 00:23:09,870
same thing so thread actors could really

465
00:23:06,570 --> 00:23:11,820
sort of take that to the next level in

466
00:23:09,870 --> 00:23:13,500
terms of the first one server-side

467
00:23:11,820 --> 00:23:15,530
languages I think I've actually seen

468
00:23:13,500 --> 00:23:18,179
that one in the wild just a month ago

469
00:23:15,530 --> 00:23:20,670
where one browser took me to one page

470
00:23:18,179 --> 00:23:22,800
and another browser took me to a

471
00:23:20,670 --> 00:23:24,210
different page and I couldn't tell from

472
00:23:22,800 --> 00:23:27,178
the source code what was happening so I

473
00:23:24,210 --> 00:23:29,520
suspect that they actually were using

474
00:23:27,179 --> 00:23:31,440
that first technique that I was talking

475
00:23:29,520 --> 00:23:33,660
about there

476
00:23:31,440 --> 00:23:36,270
so our remediation plan for this was we

477
00:23:33,660 --> 00:23:38,040
determined where the actual phishing

478
00:23:36,270 --> 00:23:40,440
landing page was at and we blocked it

479
00:23:38,040 --> 00:23:42,330
through web content filtering and then

480
00:23:40,440 --> 00:23:44,040
this wide-scale phishing campaign we

481
00:23:42,330 --> 00:23:46,379
worked with our secure email gateway

482
00:23:44,040 --> 00:23:50,040
vendor to block the active phishing

483
00:23:46,380 --> 00:23:51,929
campaign the last scenario I'm going to

484
00:23:50,040 --> 00:23:55,200
talk about is called or I call it the

485
00:23:51,929 --> 00:23:56,970
rabbit hole and so to preface this one I

486
00:23:55,200 --> 00:23:59,460
received a request from a user to

487
00:23:56,970 --> 00:24:01,410
investigate an email message they

488
00:23:59,460 --> 00:24:03,480
received to determine if it's legitimate

489
00:24:01,410 --> 00:24:07,200
or not email certainly looked like it

490
00:24:03,480 --> 00:24:09,720
could be fishy at first glance but is it

491
00:24:07,200 --> 00:24:11,580
just suspicious or is it malicious and I

492
00:24:09,720 --> 00:24:13,290
gave it talk by this title my favorite

493
00:24:11,580 --> 00:24:14,970
version is besides Cleveland if you

494
00:24:13,290 --> 00:24:16,770
search YouTube when East Side's

495
00:24:14,970 --> 00:24:18,570
Cleveland is it just suspicious or is it

496
00:24:16,770 --> 00:24:21,720
malicious you can find that talk if

497
00:24:18,570 --> 00:24:24,270
you're interested to seeing it so the

498
00:24:21,720 --> 00:24:25,290
investigation side I could tell and

499
00:24:24,270 --> 00:24:26,910
we'll take a look at this in a minute

500
00:24:25,290 --> 00:24:30,780
from the message headers the source IP

501
00:24:26,910 --> 00:24:32,520
was was a mismatch but the message

502
00:24:30,780 --> 00:24:35,250
source code was particularly interesting

503
00:24:32,520 --> 00:24:36,810
I noticed that the hyperlink didn't

504
00:24:35,250 --> 00:24:39,150
actually go to where the link text said

505
00:24:36,810 --> 00:24:41,370
it did we'll look at that here in just a

506
00:24:39,150 --> 00:24:42,870
second and then the licious threat

507
00:24:41,370 --> 00:24:45,030
actors objective appeared to be a

508
00:24:42,870 --> 00:24:47,189
credential harvesting site for the

509
00:24:45,030 --> 00:24:48,270
purposes of account takeover so let's

510
00:24:47,190 --> 00:24:50,370
look at this stuff

511
00:24:48,270 --> 00:25:01,620
let me go ahead and open up our phishing

512
00:24:50,370 --> 00:25:05,459
email here and from PayPal support you

513
00:25:01,620 --> 00:25:08,340
know PP support at pwned - server org

514
00:25:05,460 --> 00:25:11,220
and the subject is PayPal bank account

515
00:25:08,340 --> 00:25:13,919
changed confirmation and against to our

516
00:25:11,220 --> 00:25:16,680
unwitting victim phishing target your

517
00:25:13,920 --> 00:25:18,780
PayPal customer your request update your

518
00:25:16,680 --> 00:25:20,250
bank account on file will complete in

519
00:25:18,780 --> 00:25:21,990
the next four hours if you didn't

520
00:25:20,250 --> 00:25:24,090
request this change log in to your

521
00:25:21,990 --> 00:25:25,680
PayPal account account to reject the

522
00:25:24,090 --> 00:25:27,149
pending activity now if you have a

523
00:25:25,680 --> 00:25:28,920
PayPal account and you're an

524
00:25:27,150 --> 00:25:31,530
unsuspecting user you think wait a

525
00:25:28,920 --> 00:25:34,620
minute this is crazy man I didn't

526
00:25:31,530 --> 00:25:37,379
initiate a bank account change I need to

527
00:25:34,620 --> 00:25:39,239
log in and refute this or reject the

528
00:25:37,380 --> 00:25:41,130
change because I've only got four hour

529
00:25:39,240 --> 00:25:43,560
window to do it right that sense of

530
00:25:41,130 --> 00:25:44,880
urgency that's that lure any look at the

531
00:25:43,560 --> 00:25:49,530
URL and it's like yeah that's the

532
00:25:44,880 --> 00:25:51,690
legitimate PayPal login page link looks

533
00:25:49,530 --> 00:25:53,520
good but let's go ahead and take a look

534
00:25:51,690 --> 00:26:01,920
at the message source on this one as

535
00:25:53,520 --> 00:26:05,129
well make a little bigger so notice the

536
00:26:01,920 --> 00:26:07,620
link text actually shows you know the

537
00:26:05,130 --> 00:26:11,730
PayPal sign in but we look at the actual

538
00:26:07,620 --> 00:26:15,830
hyperlink it's you know some de site

539
00:26:11,730 --> 00:26:19,110
which is in Belgium and in this case a

540
00:26:15,830 --> 00:26:22,080
demo attack destination one so we look

541
00:26:19,110 --> 00:26:23,280
at that and we think well hopefully

542
00:26:22,080 --> 00:26:25,560
we've got our first layer of obfuscation

543
00:26:23,280 --> 00:26:28,560
because the link text doesn't match the

544
00:26:25,560 --> 00:26:30,629
actual hyperlink obviously we're not

545
00:26:28,560 --> 00:26:33,510
going to gain anything by copying the

546
00:26:30,630 --> 00:26:37,830
legitimate PayPal address so we'll go

547
00:26:33,510 --> 00:26:39,250
ahead and grab the phishing link to

548
00:26:37,830 --> 00:26:45,399
understand what's happening

549
00:26:39,250 --> 00:26:54,700
here and to sort of show everybody what

550
00:26:45,400 --> 00:26:59,920
that would look like oh I see what

551
00:26:54,700 --> 00:27:01,420
happened had to eat ruff sorry folks I

552
00:26:59,920 --> 00:27:06,850
copied too much all right so here we go

553
00:27:01,420 --> 00:27:09,040
so fake PayPal login page looks like the

554
00:27:06,850 --> 00:27:13,270
PayPal login page you know so people

555
00:27:09,040 --> 00:27:14,740
enter their credentials in here and go

556
00:27:13,270 --> 00:27:16,690
through that process now the threat

557
00:27:14,740 --> 00:27:19,180
actors have their PayPal username and

558
00:27:16,690 --> 00:27:20,830
password anybody think that they our

559
00:27:19,180 --> 00:27:23,590
next step is going to be the log into

560
00:27:20,830 --> 00:27:25,659
PayPal and transfer some funds probably

561
00:27:23,590 --> 00:27:30,040
pretty good chance or go on a shopping

562
00:27:25,660 --> 00:27:31,870
strip for a fake store also maybe use

563
00:27:30,040 --> 00:27:33,370
these credentials to find other payment

564
00:27:31,870 --> 00:27:36,310
services hey are they using the same

565
00:27:33,370 --> 00:27:37,899
password username password and Amazon

566
00:27:36,310 --> 00:27:40,270
probably gonna try some you know

567
00:27:37,900 --> 00:27:42,670
credential stuffing they've got account

568
00:27:40,270 --> 00:27:50,889
credentials for one site service

569
00:27:42,670 --> 00:27:53,890
probably go to the others yeah so

570
00:27:50,890 --> 00:27:56,200
actually it you know the address does

571
00:27:53,890 --> 00:27:59,170
sort of display with interesting as we

572
00:27:56,200 --> 00:28:01,150
started off in Belgium but what we have

573
00:27:59,170 --> 00:28:05,020
here what we're looking at we're looking

574
00:28:01,150 --> 00:28:08,230
at a compromised server in Germany it's

575
00:28:05,020 --> 00:28:10,120
a dot de domain so already we've sort of

576
00:28:08,230 --> 00:28:12,870
got another weird office keishon going

577
00:28:10,120 --> 00:28:14,830
on here where it's not the first page

578
00:28:12,870 --> 00:28:18,429
but we're actually looking at something

579
00:28:14,830 --> 00:28:28,090
else so let's go ahead and good and curl

580
00:28:18,430 --> 00:28:33,010
and we'll grab that URL here and we'll

581
00:28:28,090 --> 00:28:38,639
output that to a first file output - -

582
00:28:33,010 --> 00:28:38,640
output we'll call it first page HTML

583
00:28:43,860 --> 00:28:52,199
and we'll go ahead and open this up so

584
00:28:47,350 --> 00:28:55,090
everybody can see it inside of editor

585
00:28:52,200 --> 00:28:56,880
now this was the URL from the actual

586
00:28:55,090 --> 00:28:59,199
fishing email the actual hyperlink

587
00:28:56,880 --> 00:28:59,980
what's interesting is I log in and look

588
00:28:59,200 --> 00:29:02,200
at it here

589
00:28:59,980 --> 00:29:05,170
and it's actually doing HTTP meta

590
00:29:02,200 --> 00:29:07,660
refresh that's how we got from the

591
00:29:05,170 --> 00:29:09,370
request in Belgium

592
00:29:07,660 --> 00:29:12,730
now it's redirecting to another

593
00:29:09,370 --> 00:29:14,739
compromised web host in Germany so very

594
00:29:12,730 --> 00:29:16,120
interesting and what we want to do to

595
00:29:14,740 --> 00:29:19,390
understand is kind of repeat that

596
00:29:16,120 --> 00:29:22,719
process and look at the source code at

597
00:29:19,390 --> 00:29:25,570
the the German page so we'll go ahead

598
00:29:22,720 --> 00:29:33,250
and repeat that process will do another

599
00:29:25,570 --> 00:29:36,909
curl and we'll put in that web URL - -

600
00:29:33,250 --> 00:29:42,670
output and we'll call it second page dot

601
00:29:36,910 --> 00:29:46,750
HTML we have that so good and do G edit

602
00:29:42,670 --> 00:29:55,810
and we'll do second page the ampersand

603
00:29:46,750 --> 00:29:58,720
so it's in a detached window we'll blow

604
00:29:55,810 --> 00:30:00,990
that up what's interesting is it look

605
00:29:58,720 --> 00:30:03,760
like we were on that German page right

606
00:30:00,990 --> 00:30:07,560
but actually we really weren't because

607
00:30:03,760 --> 00:30:11,830
what had inside the code was actually a

608
00:30:07,560 --> 00:30:13,389
iframe iframe going to another host

609
00:30:11,830 --> 00:30:15,220
so there's another compromised web

610
00:30:13,390 --> 00:30:16,840
server and it's in another different

611
00:30:15,220 --> 00:30:18,820
country now we're in the Netherlands now

612
00:30:16,840 --> 00:30:20,709
we're doing a whole European tour on

613
00:30:18,820 --> 00:30:22,419
this one phishing email so we've gone

614
00:30:20,710 --> 00:30:25,480
for the first layer of obfuscation of

615
00:30:22,420 --> 00:30:27,130
hyperlink text not matching the or the

616
00:30:25,480 --> 00:30:30,010
link text not matching the hyperlink

617
00:30:27,130 --> 00:30:33,840
we've got a meta refresh and then we've

618
00:30:30,010 --> 00:30:37,030
got a word an iframe so now we've got

619
00:30:33,840 --> 00:30:38,649
another layer of obfuscation this is

620
00:30:37,030 --> 00:30:41,560
really becoming the rabbit hole which is

621
00:30:38,650 --> 00:30:45,400
why I titled the attack that for that

622
00:30:41,560 --> 00:30:48,550
reason so we'll go ahead and get the

623
00:30:45,400 --> 00:30:52,620
final destination and see what that

624
00:30:48,550 --> 00:30:56,759
looks like so we'll go ahead and curl

625
00:30:52,620 --> 00:31:04,979
will pick that in here again

626
00:30:56,759 --> 00:31:04,980
will do with - - output third page HTML

627
00:31:05,399 --> 00:31:13,029
now let's go into ug edit here because

628
00:31:09,970 --> 00:31:14,100
it's easy for me to make that readable

629
00:31:13,029 --> 00:31:17,380
oops

630
00:31:14,100 --> 00:31:20,860
paste in that URL we copied from you

631
00:31:17,380 --> 00:31:29,340
know again the second country server now

632
00:31:20,860 --> 00:31:41,229
we're on the third Oh need a third page

633
00:31:29,340 --> 00:31:43,480
third page so bunch of gobbledygook that

634
00:31:41,230 --> 00:31:45,639
we're looking at here I think this is a

635
00:31:43,480 --> 00:31:47,590
readable like we're no longer

636
00:31:45,639 --> 00:31:49,870
redirecting and eye framing and stuff

637
00:31:47,590 --> 00:31:51,908
like that we've got basically what boils

638
00:31:49,870 --> 00:31:53,739
down to a mess so let's go and see what

639
00:31:51,909 --> 00:32:02,919
that looks like in real life when we

640
00:31:53,740 --> 00:32:04,919
punch in that URL and we'll use Google's

641
00:32:02,919 --> 00:32:06,840
built-in developer tools to help us out

642
00:32:04,919 --> 00:32:09,460
which are really great

643
00:32:06,840 --> 00:32:14,019
someday I'd love to do just to talk on

644
00:32:09,460 --> 00:32:18,700
using built in browser developer tools

645
00:32:14,019 --> 00:32:21,700
for forensics so we'll take a look at

646
00:32:18,700 --> 00:32:27,129
the HTML and see if I can make this a

647
00:32:21,700 --> 00:32:28,539
little better so it's like great what

648
00:32:27,129 --> 00:32:31,928
we're kind of looking at here so we've

649
00:32:28,539 --> 00:32:34,360
got a document right in an unescape and

650
00:32:31,929 --> 00:32:36,549
we got a big sequence here and then

651
00:32:34,360 --> 00:32:38,258
that's followed by this DF and another

652
00:32:36,549 --> 00:32:40,029
big sequence now I've intentionally put

653
00:32:38,259 --> 00:32:42,309
whitespace in to make this more readable

654
00:32:40,029 --> 00:32:45,610
and I know looking at it some of you're

655
00:32:42,309 --> 00:32:47,529
thinking that's readable well it kind of

656
00:32:45,610 --> 00:32:48,789
isn't but just to kind of break it down

657
00:32:47,529 --> 00:32:51,509
a little bit a little bit what we're

658
00:32:48,789 --> 00:32:53,769
looking at here so we've got the

659
00:32:51,509 --> 00:32:56,500
document right the own escape sequence

660
00:32:53,769 --> 00:32:59,019
what we can guess is that this is

661
00:32:56,500 --> 00:33:02,340
creating the sequence and it's feeding

662
00:32:59,019 --> 00:33:05,379
in a function into it the sequence here

663
00:33:02,340 --> 00:33:08,320
to basically produce the output now in

664
00:33:05,379 --> 00:33:10,219
the olden days used to have two unescape

665
00:33:08,320 --> 00:33:12,678
this two basically under

666
00:33:10,220 --> 00:33:15,320
the formula that makes the rest of the

667
00:33:12,679 --> 00:33:18,049
stuff work fortunately now the browser

668
00:33:15,320 --> 00:33:19,970
developer tools are so good the best

669
00:33:18,049 --> 00:33:22,220
important thing to remember is that if

670
00:33:19,970 --> 00:33:25,549
it's renderable in a browser has to be

671
00:33:22,220 --> 00:33:27,289
something that can be decoded the good

672
00:33:25,549 --> 00:33:29,929
news is we don't have to necessarily all

673
00:33:27,289 --> 00:33:32,809
that stuff by hand anymore

674
00:33:29,929 --> 00:33:35,929
we can actually scroll down past all the

675
00:33:32,809 --> 00:33:39,250
encoded stuff and now we can actually

676
00:33:35,929 --> 00:33:41,960
see using the browser developer tools

677
00:33:39,250 --> 00:33:45,100
what was in there and so here's the

678
00:33:41,960 --> 00:33:47,539
formula that's nice and decoded for us

679
00:33:45,100 --> 00:33:51,080
we can actually see the HTML code that

680
00:33:47,539 --> 00:33:52,100
makes that work something that's more

681
00:33:51,080 --> 00:33:53,980
interesting like well I thought you

682
00:33:52,100 --> 00:33:57,649
decoded it there's more gobbledygook

683
00:33:53,980 --> 00:33:59,600
actually what this is is there's base64

684
00:33:57,650 --> 00:34:02,090
encoding inside of this JavaScript

685
00:33:59,600 --> 00:34:04,939
encoded page so now we have encoded

686
00:34:02,090 --> 00:34:07,490
elements inside of an encoded page so

687
00:34:04,940 --> 00:34:10,460
this is getting really deep we'll talk

688
00:34:07,490 --> 00:34:13,369
about the stuff here in a moment we'll

689
00:34:10,460 --> 00:34:17,839
keep kind of looking at it and all of a

690
00:34:13,369 --> 00:34:21,290
sudden we've got another base64 encoded

691
00:34:17,839 --> 00:34:23,540
item and we can guess based on the on

692
00:34:21,290 --> 00:34:27,199
the mime type here that's an image file

693
00:34:23,540 --> 00:34:31,580
that's basic ste 4 encoded and just kind

694
00:34:27,199 --> 00:34:34,250
of looking at it we'll go ahead and take

695
00:34:31,580 --> 00:34:37,359
a look at the sources the good thing is

696
00:34:34,250 --> 00:34:40,159
that with I'm sorry the network tab and

697
00:34:37,359 --> 00:34:46,989
look at the image we're going to reload

698
00:34:40,159 --> 00:34:46,990
that page real quick here come back in

699
00:34:54,330 --> 00:35:04,590
what think it's because hold on Lee get

700
00:35:01,470 --> 00:35:07,319
that link out of here and paste it back

701
00:35:04,590 --> 00:35:09,090
in it's not actually rendering it there

702
00:35:07,320 --> 00:35:13,290
because it's that that's that I frame

703
00:35:09,090 --> 00:35:15,060
that we were looking at yeah just

704
00:35:13,290 --> 00:35:16,740
relaunching the Google window here just

705
00:35:15,060 --> 00:35:26,640
to make sure fire up developer tools

706
00:35:16,740 --> 00:35:28,350
again come back paste in again this is

707
00:35:26,640 --> 00:35:33,089
the actual final landing page that we

708
00:35:28,350 --> 00:35:38,640
found through our forensic trail all

709
00:35:33,090 --> 00:35:40,500
right so now here we find within the

710
00:35:38,640 --> 00:35:43,620
headers we can look at the data image

711
00:35:40,500 --> 00:35:46,530
and here's that base64 image and the

712
00:35:43,620 --> 00:35:48,060
nice thing is we hit the preview tab up

713
00:35:46,530 --> 00:35:50,130
the top and actually shows us what the

714
00:35:48,060 --> 00:35:52,259
image file is it decodes it for us

715
00:35:50,130 --> 00:35:55,200
automatically which is fantastic that's

716
00:35:52,260 --> 00:35:57,150
just you know saving us work right there

717
00:35:55,200 --> 00:35:59,129
but you'll notice it only finds one

718
00:35:57,150 --> 00:36:01,860
image there are actually two base64

719
00:35:59,130 --> 00:36:03,530
encoded elements inside of this so let's

720
00:36:01,860 --> 00:36:06,180
go back and take a quick look at that

721
00:36:03,530 --> 00:36:07,830
and just kind of show you if we do this

722
00:36:06,180 --> 00:36:10,109
stuff by he and what that looks like

723
00:36:07,830 --> 00:36:13,920
so our first item didn't show up in that

724
00:36:10,110 --> 00:36:17,910
list which is uh you know basically this

725
00:36:13,920 --> 00:36:19,440
long base64 encoded string so what I

726
00:36:17,910 --> 00:36:22,190
want to do is go ahead and just copy

727
00:36:19,440 --> 00:36:22,190
this out

728
00:36:36,690 --> 00:36:43,210
to the bottom you back off so I'm

729
00:36:41,680 --> 00:36:46,810
grabbing the stuff inside the quotes

730
00:36:43,210 --> 00:36:50,890
here last two you there we go all right

731
00:36:46,810 --> 00:36:53,740
the open up new G edit and just create a

732
00:36:50,890 --> 00:36:56,049
new tab paste all the stuff in here and

733
00:36:53,740 --> 00:36:57,850
we'll go ahead and save it to our d fi

734
00:36:56,050 --> 00:37:07,330
our folder and we'll just call it

735
00:36:57,850 --> 00:37:09,790
unknown dot ICO save it out and so what

736
00:37:07,330 --> 00:37:13,540
I'm thinking again based on the the mime

737
00:37:09,790 --> 00:37:16,779
type here and what we're seeing is you

738
00:37:13,540 --> 00:37:20,200
can see in here shortcut icon' theta for

739
00:37:16,780 --> 00:37:23,110
the mime type data image X icon base64

740
00:37:20,200 --> 00:37:26,970
so I'm guessing this is an icon file so

741
00:37:23,110 --> 00:37:26,970
let's go ahead and now that we have it

742
00:37:30,900 --> 00:37:36,670
here's our file but we can't just look

743
00:37:33,520 --> 00:37:44,009
at it as this so we have to decode that

744
00:37:36,670 --> 00:37:51,100
so we'll go ahead and base64 dash D and

745
00:37:44,010 --> 00:37:53,680
you know it's unknown dot ICO and we'll

746
00:37:51,100 --> 00:38:05,670
put will basically redirect that output

747
00:37:53,680 --> 00:38:05,669
to fav icon that I see oh I did

748
00:38:08,180 --> 00:38:12,948
yeah there we go thank you for that

749
00:38:10,259 --> 00:38:18,509
that's a typo thanks for a good catch

750
00:38:12,949 --> 00:38:21,289
all right so let's see what that looks

751
00:38:18,509 --> 00:38:32,339
like so I'm just gonna launch Chrome and

752
00:38:21,289 --> 00:38:33,509
we'll call up the Save icon I see a file

753
00:38:32,339 --> 00:38:35,549
and there it is

754
00:38:33,509 --> 00:38:41,130
I'm sure enough well if we go back to

755
00:38:35,549 --> 00:38:44,309
the compromised website oops that was on

756
00:38:41,130 --> 00:38:47,099
the first tab you can see I know it's

757
00:38:44,309 --> 00:38:48,839
really tiny but up here in the top you

758
00:38:47,099 --> 00:38:51,119
see it real well but yeah sure enough

759
00:38:48,839 --> 00:38:52,828
it's our fav icon for the page so that's

760
00:38:51,119 --> 00:38:59,009
how we would sort of go back and do that

761
00:38:52,829 --> 00:39:03,109
stuff by hand they didn't pull this back

762
00:38:59,009 --> 00:39:03,109
up oops

763
00:39:03,709 --> 00:39:08,989
so the first destination we talked about

764
00:39:06,359 --> 00:39:12,089
it went to a page in one corn country

765
00:39:08,989 --> 00:39:14,519
the second page was in yet another

766
00:39:12,089 --> 00:39:16,380
foreign country and then landing page

767
00:39:14,519 --> 00:39:17,218
went to a compromise web host in another

768
00:39:16,380 --> 00:39:19,920
foreign country

769
00:39:17,219 --> 00:39:21,630
we got the source code on that stuff the

770
00:39:19,920 --> 00:39:23,400
malicious thread actors use JavaScript

771
00:39:21,630 --> 00:39:26,190
encoding to avoid analysis and detection

772
00:39:23,400 --> 00:39:28,019
while hiding the page source and we

773
00:39:26,190 --> 00:39:29,699
certainly saw that in action so we

774
00:39:28,019 --> 00:39:32,758
decoded the source page using built-in

775
00:39:29,699 --> 00:39:34,920
browser developer tools and so the

776
00:39:32,759 --> 00:39:36,930
encoded elements you know whether the

777
00:39:34,920 --> 00:39:39,690
thread actors used encoded elements to

778
00:39:36,930 --> 00:39:42,569
avoid analysis and detection or keep the

779
00:39:39,690 --> 00:39:45,299
entire site as a single page file they

780
00:39:42,569 --> 00:39:49,619
use base64 encoded elements within their

781
00:39:45,299 --> 00:39:51,479
JavaScript encoded page so by decoding

782
00:39:49,619 --> 00:39:53,519
the elements using the developer tools

783
00:39:51,479 --> 00:39:55,919
we could see what the image files or at

784
00:39:53,519 --> 00:39:59,189
least the one was and then looked at

785
00:39:55,920 --> 00:40:01,229
doing that by hand a remediation plan in

786
00:39:59,190 --> 00:40:02,549
this instance we determined the final

787
00:40:01,229 --> 00:40:04,649
landing page because that third

788
00:40:02,549 --> 00:40:05,759
compromised server in the foreign

789
00:40:04,650 --> 00:40:07,829
country and I was the first thing I

790
00:40:05,759 --> 00:40:09,989
blocked and then went back through and

791
00:40:07,829 --> 00:40:12,150
got the intermediary one so we blocked

792
00:40:09,989 --> 00:40:15,569
the other to you as well and then I

793
00:40:12,150 --> 00:40:18,209
reported the web compromises through the

794
00:40:15,569 --> 00:40:20,759
Whois contacts I don't think I heard

795
00:40:18,209 --> 00:40:22,649
back from any of them but I may at least

796
00:40:20,759 --> 00:40:27,020
the effort of my part

797
00:40:22,650 --> 00:40:30,240
and they were blocked for our users so

798
00:40:27,020 --> 00:40:32,759
with that that's really the demos in the

799
00:40:30,240 --> 00:40:34,379
scenarios I had for you today but as you

800
00:40:32,760 --> 00:40:37,349
see me wandering around hacker con and

801
00:40:34,380 --> 00:40:39,660
I'll be here all weekend please stop by

802
00:40:37,349 --> 00:40:42,420
talk to me share your own digital

803
00:40:39,660 --> 00:40:42,839
forensic incident response stories with

804
00:40:42,420 --> 00:40:46,349
that

805
00:40:42,839 --> 00:40:53,970
friends Romans hacker Con attendees lend

806
00:40:46,349 --> 00:40:58,760
me your irs so if that was going to open

807
00:40:53,970 --> 00:40:58,759
up for questions anybody have anything

808
00:41:02,900 --> 00:41:12,780
all right going once going twice thanks

809
00:41:07,170 --> 00:41:15,300
everybody appreciate it good all right

810
00:41:12,780 --> 00:41:17,820
well welcome everybody hopefully I can

811
00:41:15,300 --> 00:41:19,500
keep y'all awake after lunch here Edna

812
00:41:17,820 --> 00:41:22,440
and I are both part of Cisco's Telus

813
00:41:19,500 --> 00:41:23,970
research team we pretty much analyze

814
00:41:22,440 --> 00:41:29,940
different malware different ways people

815
00:41:23,970 --> 00:41:31,799
are trying to okay okay so I'm going to

816
00:41:29,940 --> 00:41:33,270
try and hold this up and we're gonna

817
00:41:31,800 --> 00:41:34,830
have a challenge here there's two of us

818
00:41:33,270 --> 00:41:36,930
so I'm trying to talk into this mic

819
00:41:34,830 --> 00:41:38,400
Reata here and into here so the

820
00:41:36,930 --> 00:41:40,500
recording can hear so it'll be an

821
00:41:38,400 --> 00:41:43,050
interesting experiment anyways like I

822
00:41:40,500 --> 00:41:45,240
said we baked those but you know Rachel

823
00:41:43,050 --> 00:41:47,280
got malware waste attackers are trying

824
00:41:45,240 --> 00:41:49,410
to target networks so we can feed that

825
00:41:47,280 --> 00:41:51,180
information into our security products

826
00:41:49,410 --> 00:41:52,259
to help protect our customers but today

827
00:41:51,180 --> 00:41:54,060
what we're going to do is basically be

828
00:41:52,260 --> 00:41:56,010
talking about some of the attacks we've

829
00:41:54,060 --> 00:41:58,200
seen over the last couple of years where

830
00:41:56,010 --> 00:42:00,680
the attackers are now starting to

831
00:41:58,200 --> 00:42:03,990
utilize and manipulate DNS as a way to

832
00:42:00,680 --> 00:42:05,819
send data target networks even do

833
00:42:03,990 --> 00:42:07,169
man-in-the-middle attacks because as

834
00:42:05,820 --> 00:42:09,089
everyone knows you can't get around

835
00:42:07,170 --> 00:42:10,380
without DNS so that's one of the things

836
00:42:09,089 --> 00:42:12,330
we're going to show you just seeking an

837
00:42:10,380 --> 00:42:16,380
idea of some of the things the attackers

838
00:42:12,330 --> 00:42:18,029
are doing in the DNS space so a little

839
00:42:16,380 --> 00:42:20,310
bit about myself I've been doing this

840
00:42:18,030 --> 00:42:21,839
forever before the internet was popular

841
00:42:20,310 --> 00:42:23,400
and all this stuff I've been in over 20

842
00:42:21,839 --> 00:42:25,680
years I've worked for the information

843
00:42:23,400 --> 00:42:27,510
warfare Center I've done all kinds of

844
00:42:25,680 --> 00:42:30,270
things I wrote security books I've got

845
00:42:27,510 --> 00:42:32,010
security patents just lots of things in

846
00:42:30,270 --> 00:42:33,690
the security space so got lots of

847
00:42:32,010 --> 00:42:36,030
experience on finding ways to attack

848
00:42:33,690 --> 00:42:37,530
networks try to break devices

849
00:42:36,030 --> 00:42:38,700
and now I'm actually working on breaking

850
00:42:37,530 --> 00:42:40,470
malware if we're gonna know how the

851
00:42:38,700 --> 00:42:42,870
attackers are trying to slip past our

852
00:42:40,470 --> 00:42:45,330
defenses you know I can't resist putting

853
00:42:42,870 --> 00:42:47,339
pictures of my nice dogs there notice at

854
00:42:45,330 --> 00:42:49,380
home I have a deterrent there are very

855
00:42:47,340 --> 00:42:51,420
large dogs it will scare most people

856
00:42:49,380 --> 00:42:53,070
away from the house even though they'll

857
00:42:51,420 --> 00:42:55,620
just lick you to death but hey it works

858
00:42:53,070 --> 00:42:56,820
from a visibility perspective so I'll

859
00:42:55,620 --> 00:43:07,890
turn that over to admin let you

860
00:42:56,820 --> 00:43:09,840
introduce him I'm a security researcher

861
00:43:07,890 --> 00:43:12,120
with Cisco Talos as well I work with

862
00:43:09,840 --> 00:43:13,860
Earl a couple things about me so I love

863
00:43:12,120 --> 00:43:16,290
malware so this is this is what we do

864
00:43:13,860 --> 00:43:17,520
we're where most individuals and

865
00:43:16,290 --> 00:43:18,960
organizations go out of their way to try

866
00:43:17,520 --> 00:43:21,509
to avoid getting you know malware

867
00:43:18,960 --> 00:43:23,130
infections within their environment I'm

868
00:43:21,510 --> 00:43:24,600
constantly spending my days detonating

869
00:43:23,130 --> 00:43:26,100
malware and hoping that it infects the

870
00:43:24,600 --> 00:43:27,720
controlled environments that I'm looking

871
00:43:26,100 --> 00:43:28,740
at so that we can rip it apart figure it

872
00:43:27,720 --> 00:43:31,250
out how it works

873
00:43:28,740 --> 00:43:33,089
figure out how it operates to develop a

874
00:43:31,250 --> 00:43:35,220
protection that we can push out to all

875
00:43:33,090 --> 00:43:36,510
of our customers so I've been with Talos

876
00:43:35,220 --> 00:43:38,040
for a little over three years about

877
00:43:36,510 --> 00:43:39,720
three and a half years but prior to that

878
00:43:38,040 --> 00:43:41,040
I spent the previous decade doing

879
00:43:39,720 --> 00:43:42,959
digital forensics Incident Response

880
00:43:41,040 --> 00:43:44,580
across a variety of different critical

881
00:43:42,960 --> 00:43:46,680
infrastructure sectors so I worked in

882
00:43:44,580 --> 00:43:49,020
nuclear power fossil fuels power

883
00:43:46,680 --> 00:43:50,730
generation financial services high-tech

884
00:43:49,020 --> 00:43:52,259
so I've seen a lot of the problems that

885
00:43:50,730 --> 00:43:54,240
organizations face from a lot of

886
00:43:52,260 --> 00:43:56,640
different viewpoints and a lot of

887
00:43:54,240 --> 00:43:57,359
different constraints also I'm an avid

888
00:43:56,640 --> 00:43:59,069
music fan

889
00:43:57,360 --> 00:44:01,230
so I'm musician I play a lot of stringed

890
00:43:59,070 --> 00:44:03,150
instruments it's just a little bit about

891
00:44:01,230 --> 00:44:05,430
myself but really what we're gonna cover

892
00:44:03,150 --> 00:44:09,180
today is DNS and how adversaries are

893
00:44:05,430 --> 00:44:11,430
making use of DNS for various components

894
00:44:09,180 --> 00:44:12,750
within that the attacks that they're

895
00:44:11,430 --> 00:44:14,190
launching against organizations around

896
00:44:12,750 --> 00:44:16,170
the world so we're gonna start out with

897
00:44:14,190 --> 00:44:17,280
a little bit of a crash course on DNS so

898
00:44:16,170 --> 00:44:20,310
right I'm not going to spend 30 minutes

899
00:44:17,280 --> 00:44:22,470
reading RFC excerpts we're gonna talk

900
00:44:20,310 --> 00:44:25,259
about some very specific portions of how

901
00:44:22,470 --> 00:44:26,640
DNS works that are relevant to the types

902
00:44:25,260 --> 00:44:28,890
of attacks and types of malware that

903
00:44:26,640 --> 00:44:30,180
we're seeing in the wild we're also

904
00:44:28,890 --> 00:44:31,529
gonna talk about the different

905
00:44:30,180 --> 00:44:33,180
techniques that attackers are using

906
00:44:31,530 --> 00:44:35,700
because we're seeing a larger number of

907
00:44:33,180 --> 00:44:37,500
adversaries recognizing that as security

908
00:44:35,700 --> 00:44:40,290
and organizations gets better as

909
00:44:37,500 --> 00:44:42,330
security programs mature in a lot of

910
00:44:40,290 --> 00:44:43,980
cases organizations are doing monitoring

911
00:44:42,330 --> 00:44:48,000
content inspection of more traditional

912
00:44:43,980 --> 00:44:49,410
Network protocols like HTTP HTTP FTP

913
00:44:48,000 --> 00:44:50,940
SMTP but

914
00:44:49,410 --> 00:44:52,500
a lot of the same organizations don't

915
00:44:50,940 --> 00:44:54,450
necessarily do the same level of

916
00:44:52,500 --> 00:44:57,000
stringent inspection of the contents of

917
00:44:54,450 --> 00:44:58,620
DNS queries and the Associated responses

918
00:44:57,000 --> 00:45:00,510
as a result attackers are starting to

919
00:44:58,620 --> 00:45:01,859
leverage that more and we're going to

920
00:45:00,510 --> 00:45:03,360
talk about ways that you can find some

921
00:45:01,860 --> 00:45:04,410
of this sort of activity if you're you

922
00:45:03,360 --> 00:45:14,730
know threat hunting in your environment

923
00:45:04,410 --> 00:45:24,240
or you're looking at log data am I good

924
00:45:14,730 --> 00:45:25,170
on are you from your perspective and

925
00:45:24,240 --> 00:45:27,299
then we're gonna talk about a few ways

926
00:45:25,170 --> 00:45:29,250
that uh you know you can defend against

927
00:45:27,300 --> 00:45:31,590
this sort of DNS abuse in in corporate

928
00:45:29,250 --> 00:45:34,200
environments so let's start out by

929
00:45:31,590 --> 00:45:36,540
talking about DNS in general and how DNS

930
00:45:34,200 --> 00:45:38,279
works right we all know when you put in

931
00:45:36,540 --> 00:45:40,470
an address in the address bar on your on

932
00:45:38,280 --> 00:45:42,300
your browser for instance um you know

933
00:45:40,470 --> 00:45:43,919
you're not actually going to that

934
00:45:42,300 --> 00:45:45,720
resource directly there's a whole

935
00:45:43,920 --> 00:45:47,610
handshake that takes place behind the

936
00:45:45,720 --> 00:45:48,779
scenes that functions very similar to

937
00:45:47,610 --> 00:45:51,000
like the phone book right

938
00:45:48,780 --> 00:45:52,770
it takes the the user readable content

939
00:45:51,000 --> 00:45:55,530
that you associate with host names

940
00:45:52,770 --> 00:45:57,330
domain names website URLs and it

941
00:45:55,530 --> 00:45:59,400
performs the translation to convert that

942
00:45:57,330 --> 00:46:01,069
into the IP address that's actually

943
00:45:59,400 --> 00:46:04,050
going to get routed to to facilitate

944
00:46:01,070 --> 00:46:05,970
connectivity to that resource so that's

945
00:46:04,050 --> 00:46:07,590
that's kind of how most people say DNS

946
00:46:05,970 --> 00:46:09,930
that's the extent of most user

947
00:46:07,590 --> 00:46:11,340
interaction with DNS you put in user

948
00:46:09,930 --> 00:46:13,710
readable information and you get

949
00:46:11,340 --> 00:46:16,020
automatically directed to the resource

950
00:46:13,710 --> 00:46:17,400
that you're requesting but there's

951
00:46:16,020 --> 00:46:19,890
actually a whole lot of steps that take

952
00:46:17,400 --> 00:46:22,470
place to facilitate that name resolution

953
00:46:19,890 --> 00:46:24,839
process and it's it's interesting

954
00:46:22,470 --> 00:46:26,939
because when I talk about DNS attacks to

955
00:46:24,840 --> 00:46:28,620
a lot of organizations one of the first

956
00:46:26,940 --> 00:46:29,820
things that most organizations tell me

957
00:46:28,620 --> 00:46:32,250
is yeah but we don't let our clients

958
00:46:29,820 --> 00:46:33,840
directly connect out to DNS servers on

959
00:46:32,250 --> 00:46:35,340
the internet we block that and only

960
00:46:33,840 --> 00:46:37,410
allow our internal servers to connect

961
00:46:35,340 --> 00:46:39,450
out to you know external resolvers and

962
00:46:37,410 --> 00:46:41,040
that works just fine for the adversary

963
00:46:39,450 --> 00:46:43,319
right when you think about the the flow

964
00:46:41,040 --> 00:46:44,880
of information you've got a a client an

965
00:46:43,320 --> 00:46:46,350
endpoint in your environment that wants

966
00:46:44,880 --> 00:46:48,030
to request resources outside your

967
00:46:46,350 --> 00:46:49,589
environment so they go to your local DNS

968
00:46:48,030 --> 00:46:52,020
server which will then forward the

969
00:46:49,590 --> 00:46:54,900
request out to other DNS servers

970
00:46:52,020 --> 00:46:56,610
upstream following a hierarchy until it

971
00:46:54,900 --> 00:46:58,440
gets to the root server which knows

972
00:46:56,610 --> 00:47:00,330
where the server is that functions is

973
00:46:58,440 --> 00:47:02,789
named resolver for a top-level domain

974
00:47:00,330 --> 00:47:04,019
for instance which then which can then

975
00:47:02,789 --> 00:47:05,640
direct you to the name server that

976
00:47:04,019 --> 00:47:07,109
services the namespace of the domain

977
00:47:05,640 --> 00:47:09,328
you're actually interested in going to

978
00:47:07,109 --> 00:47:11,249
so even though your clients not directly

979
00:47:09,329 --> 00:47:13,469
connecting out there's that that

980
00:47:11,249 --> 00:47:15,089
forwarding process that happens and then

981
00:47:13,469 --> 00:47:16,979
the Associated responses follow that

982
00:47:15,089 --> 00:47:18,299
chain back down into your environment to

983
00:47:16,979 --> 00:47:20,519
the client that actually requested the

984
00:47:18,299 --> 00:47:22,559
resource so even if your clients aren't

985
00:47:20,519 --> 00:47:24,448
directly connecting out to external DNS

986
00:47:22,559 --> 00:47:26,759
servers um this is an avenue that

987
00:47:24,449 --> 00:47:29,549
attackers can use to transfer transfer

988
00:47:26,759 --> 00:47:30,839
information or exfiltrate sensitive

989
00:47:29,549 --> 00:47:32,339
information and in a lot of

990
00:47:30,839 --> 00:47:34,259
organizations there's no security

991
00:47:32,339 --> 00:47:37,769
controls to really detect or block this

992
00:47:34,259 --> 00:47:40,410
sort of activity so attackers recognize

993
00:47:37,769 --> 00:47:41,758
this as I mentioned as security controls

994
00:47:40,410 --> 00:47:43,558
get more comprehensive and get more

995
00:47:41,759 --> 00:47:45,539
effective attackers will realize that

996
00:47:43,559 --> 00:47:47,400
sometimes the soft spot is the DNS

997
00:47:45,539 --> 00:47:48,929
infrastructure in an organization so

998
00:47:47,400 --> 00:47:51,449
they'll use it to tunnel information out

999
00:47:48,929 --> 00:47:53,489
in the form of txt record queries and

1000
00:47:51,449 --> 00:47:55,199
responses they'll use it for command and

1001
00:47:53,489 --> 00:47:56,849
control to send commands to infected

1002
00:47:55,199 --> 00:47:58,109
system to continue operating in

1003
00:47:56,849 --> 00:48:00,479
environments that they're targeting

1004
00:47:58,109 --> 00:48:03,029
although also exfiltrate information in

1005
00:48:00,479 --> 00:48:05,249
the form of a records in the form of

1006
00:48:03,029 --> 00:48:07,919
domain names or the contents of

1007
00:48:05,249 --> 00:48:09,569
different queries we've started to see

1008
00:48:07,919 --> 00:48:11,189
an escalation in these sort of attacks

1009
00:48:09,569 --> 00:48:12,659
so tunneling has been around for a while

1010
00:48:11,189 --> 00:48:14,629
but we're starting to see attackers

1011
00:48:12,659 --> 00:48:16,589
actually start to target the core

1012
00:48:14,630 --> 00:48:19,650
Internet infrastructure that's

1013
00:48:16,589 --> 00:48:21,328
responsible for global DNS to function

1014
00:48:19,650 --> 00:48:23,669
because they recognize that if they can

1015
00:48:21,329 --> 00:48:26,369
compromise the DNS infrastructure itself

1016
00:48:23,669 --> 00:48:28,709
they can maliciously manipulate it such

1017
00:48:26,369 --> 00:48:32,069
that they can direct a you know victims

1018
00:48:28,709 --> 00:48:34,288
to their infrastructure so I want to

1019
00:48:32,069 --> 00:48:35,308
talk about tunneling very briefly we're

1020
00:48:34,289 --> 00:48:37,169
probably all familiar with what

1021
00:48:35,309 --> 00:48:39,689
tunneling is a concept right it's a way

1022
00:48:37,169 --> 00:48:41,788
that you can take a protocol and

1023
00:48:39,689 --> 00:48:43,408
encapsulate it in another protocol to

1024
00:48:41,789 --> 00:48:44,939
facilitate communications between two

1025
00:48:43,409 --> 00:48:47,729
systems you do it all the time when you

1026
00:48:44,939 --> 00:48:49,739
execute and connect to VPN endpoints we

1027
00:48:47,729 --> 00:48:51,479
established VPN tunnels you're tunneling

1028
00:48:49,739 --> 00:48:54,029
a bunch of different protocols within

1029
00:48:51,479 --> 00:48:57,269
that VPN and DNS tunneling works very

1030
00:48:54,029 --> 00:48:58,799
very similar so it's really practically

1031
00:48:57,269 --> 00:49:01,319
applicable when and when it comes to

1032
00:48:58,799 --> 00:49:03,089
things like bypassing captive portals so

1033
00:49:01,319 --> 00:49:04,709
we're all pretty familiar with open

1034
00:49:03,089 --> 00:49:06,449
Wi-Fi right you connect to it your

1035
00:49:04,709 --> 00:49:08,009
system gets on the Y of the Wi-Fi at a

1036
00:49:06,449 --> 00:49:10,079
coffee shop or you know something like

1037
00:49:08,009 --> 00:49:12,479
that and in order for you to be able to

1038
00:49:10,079 --> 00:49:13,890
get web communications work you have to

1039
00:49:12,479 --> 00:49:14,999
like put in your credentials and then it

1040
00:49:13,890 --> 00:49:16,379
has to validate it and then you get

1041
00:49:14,999 --> 00:49:19,470
redirected but one thing you'll notice

1042
00:49:16,380 --> 00:49:22,499
and a lot of configurations while HTTP

1043
00:49:19,470 --> 00:49:24,629
and HTTPS may be blocked DNS is fully

1044
00:49:22,499 --> 00:49:26,129
allowed out to the internet so there's a

1045
00:49:24,630 --> 00:49:28,589
lot of projects that you can look on

1046
00:49:26,130 --> 00:49:31,349
look on github in various places that

1047
00:49:28,589 --> 00:49:33,450
allow you to tunnel HTTP through DNS to

1048
00:49:31,349 --> 00:49:34,920
bypass the requirements associated with

1049
00:49:33,450 --> 00:49:36,749
captive portals so that's a way that

1050
00:49:34,920 --> 00:49:38,400
it's it's really practically applicable

1051
00:49:36,749 --> 00:49:40,859
if you want to get an idea or an

1052
00:49:38,400 --> 00:49:42,839
understanding case set up a VPS that

1053
00:49:40,859 --> 00:49:44,670
functions as a DNS server and establish

1054
00:49:42,839 --> 00:49:46,410
that DNA that DNS tunnel and it will

1055
00:49:44,670 --> 00:49:48,660
provide that functionality without you

1056
00:49:46,410 --> 00:49:52,259
requiring to sign up or give your PII to

1057
00:49:48,660 --> 00:49:55,109
a third party so txt records these are

1058
00:49:52,259 --> 00:49:56,190
super interesting right txt records are

1059
00:49:55,109 --> 00:49:57,420
short for text record they've been

1060
00:49:56,190 --> 00:49:59,339
around for a long time when they were

1061
00:49:57,420 --> 00:50:01,349
initially established within the DNS

1062
00:49:59,339 --> 00:50:03,569
protocol the idea was that you would

1063
00:50:01,349 --> 00:50:05,549
take an asset let's say like a gem

1064
00:50:03,569 --> 00:50:06,210
server and need append a note to it to

1065
00:50:05,549 --> 00:50:08,069
maybe

1066
00:50:06,210 --> 00:50:10,019
denote what datacenter it's in or what

1067
00:50:08,069 --> 00:50:12,089
rack it's located in or who owns it and

1068
00:50:10,019 --> 00:50:15,508
you would do that by creating a txt

1069
00:50:12,089 --> 00:50:17,369
record for that hostname and you would

1070
00:50:15,509 --> 00:50:18,989
append whatever data you want it so

1071
00:50:17,369 --> 00:50:21,119
nowadays are used for a lot more

1072
00:50:18,989 --> 00:50:24,509
security related functions so things

1073
00:50:21,119 --> 00:50:26,099
like sender policy framework SPF DKIM d

1074
00:50:24,509 --> 00:50:27,839
mark these are all security controls

1075
00:50:26,099 --> 00:50:30,210
that organizations put in place to

1076
00:50:27,839 --> 00:50:31,890
defend against you know brand abuse

1077
00:50:30,210 --> 00:50:33,960
through the phishing or to verify the

1078
00:50:31,890 --> 00:50:36,140
the sender of a message to make sure

1079
00:50:33,960 --> 00:50:39,089
they're actually not spoofing a

1080
00:50:36,140 --> 00:50:40,710
legitimate email so they're used for a

1081
00:50:39,089 --> 00:50:42,989
lot of very very relevant security

1082
00:50:40,710 --> 00:50:45,269
functions but they're used to basically

1083
00:50:42,989 --> 00:50:49,079
store information that can be associated

1084
00:50:45,269 --> 00:50:52,258
or associated to a specific host within

1085
00:50:49,079 --> 00:50:54,180
a namespace so we've seen some

1086
00:50:52,259 --> 00:50:55,589
interesting attacks that leverage txt

1087
00:50:54,180 --> 00:50:57,749
records because they can store a lot of

1088
00:50:55,589 --> 00:50:59,400
information and I want to start off by

1089
00:50:57,749 --> 00:51:01,558
talking out of talking about a specific

1090
00:50:59,400 --> 00:51:04,859
example called DNS messenger which I did

1091
00:51:01,559 --> 00:51:06,450
some some research into a while back so

1092
00:51:04,859 --> 00:51:08,578
this was pretty interesting it it

1093
00:51:06,450 --> 00:51:11,009
started with a with a base64 encoded

1094
00:51:08,579 --> 00:51:12,450
string so you know I was I was a ripping

1095
00:51:11,009 --> 00:51:14,160
apart malware monitoring the threat

1096
00:51:12,450 --> 00:51:15,960
landscape one day and I noticed that

1097
00:51:14,160 --> 00:51:18,328
somebody had posted an interesting tweet

1098
00:51:15,960 --> 00:51:20,369
and inside of it was a base64 encoded

1099
00:51:18,329 --> 00:51:22,289
string that when you decode it decoded

1100
00:51:20,369 --> 00:51:23,759
to Sourcefire sucks so if you're not

1101
00:51:22,289 --> 00:51:27,359
familiar with Cisco we acquired source

1102
00:51:23,759 --> 00:51:28,970
fire and you know we take that sort of

1103
00:51:27,359 --> 00:51:31,400
thing and we're like well ok

1104
00:51:28,970 --> 00:51:32,899
I guess what's this associated with so I

1105
00:51:31,400 --> 00:51:34,790
had to go through a lot of different

1106
00:51:32,900 --> 00:51:37,040
malware repositories keep in mind I only

1107
00:51:34,790 --> 00:51:39,529
had a screenshot of base64 in some

1108
00:51:37,040 --> 00:51:41,300
PowerShell no other context so I had to

1109
00:51:39,530 --> 00:51:43,370
you know hunt around and try to

1110
00:51:41,300 --> 00:51:45,410
reconstruct what this was associated

1111
00:51:43,370 --> 00:51:46,970
with what malware or what sort of attack

1112
00:51:45,410 --> 00:51:48,980
is this associated with how does it

1113
00:51:46,970 --> 00:51:50,270
function what's the initial vector and I

1114
00:51:48,980 --> 00:51:53,360
was able to reconstruct an entire

1115
00:51:50,270 --> 00:51:54,890
infection path and identify the malware

1116
00:51:53,360 --> 00:51:57,800
and how it was being used in it was a

1117
00:51:54,890 --> 00:52:00,980
very sophisticated four stage file asst

1118
00:51:57,800 --> 00:52:03,470
malware and the way that it got into

1119
00:52:00,980 --> 00:52:05,630
environments is a pretty common mouse

1120
00:52:03,470 --> 00:52:07,640
spam campaigns so emails that contain

1121
00:52:05,630 --> 00:52:09,080
malicious office documents and this is

1122
00:52:07,640 --> 00:52:11,720
an example of one of the documents that

1123
00:52:09,080 --> 00:52:14,330
was being used to initially load DNS

1124
00:52:11,720 --> 00:52:16,759
messenger on endpoints so they would

1125
00:52:14,330 --> 00:52:18,740
send it a message and the the decoy

1126
00:52:16,760 --> 00:52:22,040
image in the the MAL dock was was pretty

1127
00:52:18,740 --> 00:52:23,600
interesting it has McAfee secure logo in

1128
00:52:22,040 --> 00:52:25,250
branding on it when you think about

1129
00:52:23,600 --> 00:52:26,420
organizations that leverage let's say

1130
00:52:25,250 --> 00:52:29,090
McAfee for like endpoint protection

1131
00:52:26,420 --> 00:52:30,800
users when they see that logo probably

1132
00:52:29,090 --> 00:52:32,870
automatically trust anything else

1133
00:52:30,800 --> 00:52:35,360
associated with it so that it says you

1134
00:52:32,870 --> 00:52:37,460
know McAfee secured this document enable

1135
00:52:35,360 --> 00:52:38,570
content and enable macros as we all know

1136
00:52:37,460 --> 00:52:40,730
when you do that that's when the

1137
00:52:38,570 --> 00:52:43,520
attackers code starts to execute in this

1138
00:52:40,730 --> 00:52:47,150
case they used a an O le object to

1139
00:52:43,520 --> 00:52:49,640
launch a VBA Visual Basic for

1140
00:52:47,150 --> 00:52:51,830
applications script that kicked off the

1141
00:52:49,640 --> 00:52:55,310
infection process and started to install

1142
00:52:51,830 --> 00:52:56,360
DNS messenger on the system so what it

1143
00:52:55,310 --> 00:52:58,070
would do is I mentioned it was

1144
00:52:56,360 --> 00:52:59,270
multistage one of the things that it

1145
00:52:58,070 --> 00:53:01,700
would do is it would go out and it would

1146
00:52:59,270 --> 00:53:03,890
pull down a stage to payload over DNS

1147
00:53:01,700 --> 00:53:06,230
and stage two was responsible for

1148
00:53:03,890 --> 00:53:08,750
establishing persistence if the attacker

1149
00:53:06,230 --> 00:53:10,730
wanted to so the attacker had an option

1150
00:53:08,750 --> 00:53:12,850
in this case they could choose to be

1151
00:53:10,730 --> 00:53:14,840
super stealthy and not drop a single

1152
00:53:12,850 --> 00:53:16,549
conventional file artifact on an

1153
00:53:14,840 --> 00:53:18,080
infected system all of this code that's

1154
00:53:16,550 --> 00:53:19,850
executing is executing within the

1155
00:53:18,080 --> 00:53:21,440
context of PowerShell which is executing

1156
00:53:19,850 --> 00:53:23,450
within the context of you know the word

1157
00:53:21,440 --> 00:53:24,680
process on the system so it's not like

1158
00:53:23,450 --> 00:53:25,939
it's dropping a bunch of PowerShell

1159
00:53:24,680 --> 00:53:27,230
scripts on to the file system and

1160
00:53:25,940 --> 00:53:29,690
executing it that's all happening in

1161
00:53:27,230 --> 00:53:31,310
memory um so it would check to see you

1162
00:53:29,690 --> 00:53:32,600
know what access rights the user had and

1163
00:53:31,310 --> 00:53:34,520
it would make a determination where to

1164
00:53:32,600 --> 00:53:35,690
store any sort of persistent payload in

1165
00:53:34,520 --> 00:53:37,910
the registry so that each time the

1166
00:53:35,690 --> 00:53:40,070
system rebooted that registry key would

1167
00:53:37,910 --> 00:53:41,569
be queried the powershell associated

1168
00:53:40,070 --> 00:53:42,319
with it would be Diaby skated and kicked

1169
00:53:41,570 --> 00:53:45,259
off to

1170
00:53:42,319 --> 00:53:46,999
check the the DNS messenger off again

1171
00:53:45,259 --> 00:53:48,559
following a reboot but once again that

1172
00:53:46,999 --> 00:53:50,238
was optional the attacker could say no I

1173
00:53:48,559 --> 00:53:53,809
want to be super stealthy I'm just not

1174
00:53:50,239 --> 00:53:56,900
going to persist across reboots so stage

1175
00:53:53,809 --> 00:53:59,509
3 was acquired during following the

1176
00:53:56,900 --> 00:54:01,759
persistence mechanisms built into stage

1177
00:53:59,509 --> 00:54:03,199
2 and stage 3 is that payload that gets

1178
00:54:01,759 --> 00:54:04,699
stored in the registry that I mentioned

1179
00:54:03,199 --> 00:54:06,890
said each time the system's rebooted

1180
00:54:04,699 --> 00:54:08,569
that registry key is red and it's not

1181
00:54:06,890 --> 00:54:10,400
pointing to an executable on disk the

1182
00:54:08,569 --> 00:54:12,499
base of the power shield obvious stated

1183
00:54:10,400 --> 00:54:15,319
Power Cells actually within the registry

1184
00:54:12,499 --> 00:54:16,669
and stage 3 was responsible for checking

1185
00:54:15,319 --> 00:54:19,759
off each time the system was rebooted

1186
00:54:16,669 --> 00:54:21,679
and going out to retrieve a stage 4

1187
00:54:19,759 --> 00:54:23,569
payload that would extend the PowerShell

1188
00:54:21,679 --> 00:54:25,969
environment and give the attacker more

1189
00:54:23,569 --> 00:54:27,380
functionality to use to operate within

1190
00:54:25,969 --> 00:54:29,209
the environment that was being targeted

1191
00:54:27,380 --> 00:54:30,949
so let's look at how that payload

1192
00:54:29,209 --> 00:54:34,819
retrieval process works because it's

1193
00:54:30,949 --> 00:54:37,400
super interesting so what happens is in

1194
00:54:34,819 --> 00:54:39,288
stage 3 there's an array list of domains

1195
00:54:37,400 --> 00:54:41,089
and the attacker controls the namespaces

1196
00:54:39,289 --> 00:54:42,169
for all of these domains in this list

1197
00:54:41,089 --> 00:54:44,269
you can see most of them look pretty

1198
00:54:42,169 --> 00:54:46,038
sketchy but what it would do is it would

1199
00:54:44,269 --> 00:54:48,709
take one of the domains in that list and

1200
00:54:46,039 --> 00:54:50,509
it would append a subdomain to it so in

1201
00:54:48,709 --> 00:54:52,129
the example on the slide they picked a

1202
00:54:50,509 --> 00:54:54,529
domain from that list and they said ok

1203
00:54:52,130 --> 00:54:56,929
well we're gonna make txt record queries

1204
00:54:54,529 --> 00:54:59,299
from the infected system onto the male

1205
00:54:56,929 --> 00:55:02,749
sub domain of that of that domain so the

1206
00:54:59,299 --> 00:55:07,538
resulting a query that's made is give me

1207
00:55:02,749 --> 00:55:09,948
the txt record for male re LD info so as

1208
00:55:07,539 --> 00:55:11,659
normal DNS hierarchy works those

1209
00:55:09,949 --> 00:55:13,699
communications get forwarded along the

1210
00:55:11,659 --> 00:55:15,380
dns chain until they get to the attacker

1211
00:55:13,699 --> 00:55:17,359
controlled server who will return the

1212
00:55:15,380 --> 00:55:18,769
results of that txt record and the

1213
00:55:17,359 --> 00:55:20,929
results are the content that you can see

1214
00:55:18,769 --> 00:55:22,999
there that's encoded PowerShell that is

1215
00:55:20,929 --> 00:55:26,239
then sent back to the infected system

1216
00:55:22,999 --> 00:55:28,038
div skated and then executed to kick off

1217
00:55:26,239 --> 00:55:29,779
that stage for functionality so we're

1218
00:55:28,039 --> 00:55:33,469
not leveraging HTTP we're not leveraging

1219
00:55:29,779 --> 00:55:35,779
HTTP this is all being done within DNS

1220
00:55:33,469 --> 00:55:37,909
and the DNS protocol supports this it

1221
00:55:35,779 --> 00:55:39,949
supports any sort of content that you

1222
00:55:37,909 --> 00:55:41,059
want to load into a txt record and they

1223
00:55:39,949 --> 00:55:45,709
use this to deliver additional

1224
00:55:41,059 --> 00:55:47,419
PowerShell commands so stage 4 was what

1225
00:55:45,709 --> 00:55:49,879
the attacker would use to operate on the

1226
00:55:47,419 --> 00:55:52,339
infected system to execute arbitrary

1227
00:55:49,880 --> 00:55:53,659
commands possibly you know use that

1228
00:55:52,339 --> 00:55:54,560
system as a pivot point for lateral

1229
00:55:53,659 --> 00:55:55,910
movement

1230
00:55:54,560 --> 00:55:57,620
what it would do is it take the Windows

1231
00:55:55,910 --> 00:55:59,720
command processor and it would redirect

1232
00:55:57,620 --> 00:56:01,549
standardin standard out in standard air

1233
00:55:59,720 --> 00:56:03,770
into that PowerShell environment that

1234
00:56:01,550 --> 00:56:05,780
stage-four was operating it um it would

1235
00:56:03,770 --> 00:56:07,700
then select a random domain from a

1236
00:56:05,780 --> 00:56:10,940
second list present within the stage for

1237
00:56:07,700 --> 00:56:13,220
PowerShell and it would initiate a multi

1238
00:56:10,940 --> 00:56:14,630
stage command and control protocol that

1239
00:56:13,220 --> 00:56:17,180
the attacker had designed that used

1240
00:56:14,630 --> 00:56:18,650
nothing but txt record queries that were

1241
00:56:17,180 --> 00:56:20,210
being made from infected endpoints and

1242
00:56:18,650 --> 00:56:24,530
the associated responses from the

1243
00:56:20,210 --> 00:56:25,940
attacker server so the first phase of

1244
00:56:24,530 --> 00:56:28,010
this command control protocol the

1245
00:56:25,940 --> 00:56:31,520
attacker called it a sin query the the

1246
00:56:28,010 --> 00:56:34,010
infected system would make a DNS txt

1247
00:56:31,520 --> 00:56:36,380
query for a domain that the attacker

1248
00:56:34,010 --> 00:56:37,580
controlled and based on the response

1249
00:56:36,380 --> 00:56:39,080
that it received it would determine

1250
00:56:37,580 --> 00:56:41,029
whether or not to continue to execute

1251
00:56:39,080 --> 00:56:43,580
and then if it was told yeah keep going

1252
00:56:41,030 --> 00:56:45,050
it would basically make a message query

1253
00:56:43,580 --> 00:56:46,310
and you can see an example of this this

1254
00:56:45,050 --> 00:56:48,080
is where the data exchange actually

1255
00:56:46,310 --> 00:56:50,330
takes place you can see that they're

1256
00:56:48,080 --> 00:56:52,520
making a DNS request for a really really

1257
00:56:50,330 --> 00:56:56,090
long sub domain that the attacker

1258
00:56:52,520 --> 00:56:58,850
controls and it's an alphanumeric string

1259
00:56:56,090 --> 00:57:01,430
that's actually hex so when you actually

1260
00:56:58,850 --> 00:57:03,200
decode that that a sub domain that it's

1261
00:57:01,430 --> 00:57:05,089
making the request for you can see that

1262
00:57:03,200 --> 00:57:06,649
it actually decodes to the output of the

1263
00:57:05,090 --> 00:57:08,630
Windows command line processor so

1264
00:57:06,650 --> 00:57:11,540
they're basically sending a shell to the

1265
00:57:08,630 --> 00:57:13,310
attacker server using DNS txt queries

1266
00:57:11,540 --> 00:57:15,230
and then the Associated responses would

1267
00:57:13,310 --> 00:57:17,150
be the commands that the attacker wanted

1268
00:57:15,230 --> 00:57:19,490
to run so a pretty interesting way that

1269
00:57:17,150 --> 00:57:23,840
they implemented a bi-directional shell

1270
00:57:19,490 --> 00:57:25,549
functionality using nothing but DNS so

1271
00:57:23,840 --> 00:57:28,010
this is just a kind of a flow that shows

1272
00:57:25,550 --> 00:57:29,240
how that that c2 mechanism works and all

1273
00:57:28,010 --> 00:57:32,480
the different phases that take place

1274
00:57:29,240 --> 00:57:34,850
this is all being done over DNS so don't

1275
00:57:32,480 --> 00:57:36,530
get syn mixed up with TCP syn packets

1276
00:57:34,850 --> 00:57:38,750
this is just what they called that stage

1277
00:57:36,530 --> 00:57:40,850
of the DNS communications in that c2

1278
00:57:38,750 --> 00:57:43,340
protocol and they actually have full-on

1279
00:57:40,850 --> 00:57:46,250
custom package structures to support how

1280
00:57:43,340 --> 00:57:47,990
they were able to may interact with the

1281
00:57:46,250 --> 00:57:49,360
command line processor on the infected

1282
00:57:47,990 --> 00:57:51,379
system in a protected environment

1283
00:57:49,360 --> 00:57:53,210
because they were able to leverage that

1284
00:57:51,380 --> 00:57:55,100
hierarchy and automatic forwarding of

1285
00:57:53,210 --> 00:57:58,100
DNS queries that takes place any time

1286
00:57:55,100 --> 00:58:00,020
you try to resolve a domain so fast

1287
00:57:58,100 --> 00:58:01,790
forward a few months and we actually we

1288
00:58:00,020 --> 00:58:03,350
were monitoring and we detected that the

1289
00:58:01,790 --> 00:58:05,029
thread actor associated with DNS

1290
00:58:03,350 --> 00:58:06,890
messenger had actually started launching

1291
00:58:05,030 --> 00:58:08,000
additional campaigns that were

1292
00:58:06,890 --> 00:58:10,700
leveraging and updated

1293
00:58:08,000 --> 00:58:12,590
DNS messenger so in this particular case

1294
00:58:10,700 --> 00:58:13,970
the the emails were pretty targeted they

1295
00:58:12,590 --> 00:58:15,680
were they were targeted

1296
00:58:13,970 --> 00:58:17,209
they weren't spray-and-pray like what

1297
00:58:15,680 --> 00:58:19,370
you know you see from spam botnets they

1298
00:58:17,210 --> 00:58:21,290
were targeting specific individuals and

1299
00:58:19,370 --> 00:58:23,029
they were making the emails spoof to

1300
00:58:21,290 --> 00:58:24,380
appear as if they were from the SEC the

1301
00:58:23,030 --> 00:58:26,120
Securities and Exchange Commission and

1302
00:58:24,380 --> 00:58:28,070
they made it appear as if the email was

1303
00:58:26,120 --> 00:58:29,630
associated with the edgar system they're

1304
00:58:28,070 --> 00:58:31,430
not familiar with it it's a it's a

1305
00:58:29,630 --> 00:58:32,930
system at the sec supports that allows

1306
00:58:31,430 --> 00:58:35,390
organizations to make the different

1307
00:58:32,930 --> 00:58:37,790
filings that they need to to the SEC so

1308
00:58:35,390 --> 00:58:40,160
imagine if your job is to interact with

1309
00:58:37,790 --> 00:58:42,740
the SEC you might see this email it

1310
00:58:40,160 --> 00:58:45,200
looks legitimate and open the attached

1311
00:58:42,740 --> 00:58:46,520
word document so this is an example of

1312
00:58:45,200 --> 00:58:49,609
one of the documents associated with

1313
00:58:46,520 --> 00:58:52,310
these campaigns fairly fairly well done

1314
00:58:49,610 --> 00:58:54,020
they use the branding from SEC to make

1315
00:58:52,310 --> 00:58:56,420
it look legitimate they actually had OMB

1316
00:58:54,020 --> 00:58:58,130
approval numbers and they added all the

1317
00:58:56,420 --> 00:58:59,780
little touches to try to add legitimacy

1318
00:58:58,130 --> 00:59:01,220
to this email and in this case they

1319
00:58:59,780 --> 00:59:03,740
weren't using macros they were using

1320
00:59:01,220 --> 00:59:05,390
dynamic data exchange or dde which is

1321
00:59:03,740 --> 00:59:07,459
functionality present within word that

1322
00:59:05,390 --> 00:59:10,400
allows you to link content between

1323
00:59:07,460 --> 00:59:12,320
multiple places within a Word document

1324
00:59:10,400 --> 00:59:14,060
and dynamically import it into the

1325
00:59:12,320 --> 00:59:15,350
document at runtime when you open it up

1326
00:59:14,060 --> 00:59:17,360
so you can see you get a little prompt

1327
00:59:15,350 --> 00:59:20,120
it says this refers to external files do

1328
00:59:17,360 --> 00:59:22,550
you want to load them now so if the if

1329
00:59:20,120 --> 00:59:23,930
the user selects yes in this case what

1330
00:59:22,550 --> 00:59:25,550
happens is the Windows command line

1331
00:59:23,930 --> 00:59:28,190
processor is used to call PowerShell

1332
00:59:25,550 --> 00:59:29,600
they echo out SEC gov to make it look

1333
00:59:28,190 --> 00:59:32,090
legitimate to the user they see a little

1334
00:59:29,600 --> 00:59:34,490
message that says SEC gov and then they

1335
00:59:32,090 --> 00:59:37,190
go out in a download content from a

1336
00:59:34,490 --> 00:59:39,609
compromised Louisiana state government

1337
00:59:37,190 --> 00:59:43,130
web server and then the contents of that

1338
00:59:39,610 --> 00:59:45,290
txt document are then fed back into

1339
00:59:43,130 --> 00:59:48,500
power show and executed to kick off the

1340
00:59:45,290 --> 00:59:49,730
next stage of the infection process and

1341
00:59:48,500 --> 00:59:51,830
you can see in this particular case

1342
00:59:49,730 --> 00:59:54,620
inside of the the retrieved contents

1343
00:59:51,830 --> 00:59:56,299
they actually had a additional stage of

1344
00:59:54,620 --> 00:59:57,680
PowerShell that was basic C 4 encoded

1345
00:59:56,300 --> 00:59:59,180
which I've truncated because it was

1346
00:59:57,680 --> 01:00:04,730
super long and it would made the slide

1347
00:59:59,180 --> 01:00:06,350
look really nasty so stage 2 is then D

1348
01:00:04,730 --> 01:00:07,820
obfuscated and kicked off to continue

1349
01:00:06,350 --> 01:00:09,230
the infection process and one of the

1350
01:00:07,820 --> 01:00:11,360
things that they would do is they would

1351
01:00:09,230 --> 01:00:13,910
store that stage 2 once again similar to

1352
01:00:11,360 --> 01:00:15,950
last time in the registry and that's how

1353
01:00:13,910 --> 01:00:17,060
they would persist across reboots and

1354
01:00:15,950 --> 01:00:18,680
the next thing they would do is they

1355
01:00:17,060 --> 01:00:20,480
would check to see if a specific mutex

1356
01:00:18,680 --> 01:00:21,180
was present on the system so if you're

1357
01:00:20,480 --> 01:00:24,000
not familiar

1358
01:00:21,180 --> 01:00:26,069
mutexes they're typically used to avoid

1359
01:00:24,000 --> 01:00:28,170
having the same program run on a system

1360
01:00:26,069 --> 01:00:30,029
multiple times at the same time so the

1361
01:00:28,170 --> 01:00:31,799
program kicks off the first time and it

1362
01:00:30,029 --> 01:00:33,750
creates a mutex and then if you don't

1363
01:00:31,799 --> 01:00:35,190
want your program to run multiple times

1364
01:00:33,750 --> 01:00:36,930
simultaneously on a system you just

1365
01:00:35,190 --> 01:00:38,970
check for that mutex and if it exists

1366
01:00:36,930 --> 01:00:41,069
you terminate execution so it's a way to

1367
01:00:38,970 --> 01:00:42,569
manage that and they were using it to

1368
01:00:41,069 --> 01:00:43,920
make sure that DNS messenger wasn't

1369
01:00:42,569 --> 01:00:46,980
running multiple times on the same

1370
01:00:43,920 --> 01:00:48,900
infected system so the next thing they

1371
01:00:46,980 --> 01:00:50,160
would do is they would persist and they

1372
01:00:48,900 --> 01:00:51,450
would establish that persistence and

1373
01:00:50,160 --> 01:00:53,399
they had a ton of different ways that

1374
01:00:51,450 --> 01:00:55,589
they could choose to persist on systems

1375
01:00:53,400 --> 01:00:57,210
depending on how they wanted to store

1376
01:00:55,589 --> 01:00:59,250
the payload and then call it when they

1377
01:00:57,210 --> 01:01:00,930
rebooted the system so they had a bunch

1378
01:00:59,250 --> 01:01:04,260
of if-then statements in the powershell

1379
01:01:00,930 --> 01:01:05,609
that's basically resulted in storage of

1380
01:01:04,260 --> 01:01:08,880
the payload in a bunch of different

1381
01:01:05,609 --> 01:01:10,950
potential places in registry they could

1382
01:01:08,880 --> 01:01:11,819
also create a scheduled task and one of

1383
01:01:10,950 --> 01:01:12,960
the interesting things about the

1384
01:01:11,819 --> 01:01:14,960
scheduled tasks that they would create

1385
01:01:12,960 --> 01:01:16,829
is they put a random delay counter

1386
01:01:14,960 --> 01:01:19,589
associated with it so each time the

1387
01:01:16,829 --> 01:01:21,240
system reboots it will randomly sleep

1388
01:01:19,589 --> 01:01:22,890
for a while before it kicks off the

1389
01:01:21,240 --> 01:01:24,479
actual malware again so if you're

1390
01:01:22,890 --> 01:01:27,240
analyzing it it looks different every

1391
01:01:24,480 --> 01:01:29,490
time the system reboots they could also

1392
01:01:27,240 --> 01:01:30,839
use alternate data streams to persist

1393
01:01:29,490 --> 01:01:32,368
and they could also make W in my

1394
01:01:30,839 --> 01:01:34,078
subscriptions windows management

1395
01:01:32,369 --> 01:01:36,000
instrumentation database subscriptions

1396
01:01:34,079 --> 01:01:38,069
and they could use that to persist as

1397
01:01:36,000 --> 01:01:40,230
well so there's a lot of really

1398
01:01:38,069 --> 01:01:43,349
interesting persistence characteristics

1399
01:01:40,230 --> 01:01:44,849
and techniques that this malware used so

1400
01:01:43,349 --> 01:01:46,559
stage 3 was where it gets really

1401
01:01:44,849 --> 01:01:47,819
interesting this is where it would start

1402
01:01:46,559 --> 01:01:49,140
to communicate out with the attackers

1403
01:01:47,819 --> 01:01:50,369
command and control server so what it

1404
01:01:49,140 --> 01:01:51,930
would do is it would obtain the system

1405
01:01:50,369 --> 01:01:54,660
serial number and then it would make an

1406
01:01:51,930 --> 01:01:56,160
md5 hash of the serial number itself on

1407
01:01:54,660 --> 01:01:58,649
the system then it would use the first

1408
01:01:56,160 --> 01:02:00,210
10 bytes to generate a DNS hostname so

1409
01:01:58,650 --> 01:02:03,809
the results of the operation is similar

1410
01:02:00,210 --> 01:02:05,549
to what you see there below so what it

1411
01:02:03,809 --> 01:02:06,990
would do is it would take that data host

1412
01:02:05,549 --> 01:02:08,730
name and it would append the string

1413
01:02:06,990 --> 01:02:11,098
stage to it and then it would append

1414
01:02:08,730 --> 01:02:13,079
another counter that started at 0 that

1415
01:02:11,099 --> 01:02:15,029
would tick every time it communicated

1416
01:02:13,079 --> 01:02:16,859
out to command-and-control and then it

1417
01:02:15,029 --> 01:02:18,390
would select a domain from a list of

1418
01:02:16,859 --> 01:02:19,980
attacker control domains and that would

1419
01:02:18,390 --> 01:02:22,920
be the route domain that it would make a

1420
01:02:19,980 --> 01:02:24,510
dns request for so this is what that

1421
01:02:22,920 --> 01:02:27,029
operation kind of looks like so they did

1422
01:02:24,510 --> 01:02:28,859
first make an a record request for that

1423
01:02:27,029 --> 01:02:30,839
particular resource that they generated

1424
01:02:28,859 --> 01:02:32,490
that was generated by the malware to the

1425
01:02:30,839 --> 01:02:34,500
attacker controlled name server and they

1426
01:02:32,490 --> 01:02:35,850
would get a response in the form Oh

1427
01:02:34,500 --> 01:02:37,470
you know what looks like an IP address

1428
01:02:35,850 --> 01:02:39,779
then they would make a txt record

1429
01:02:37,470 --> 01:02:41,310
request for the same host name and they

1430
01:02:39,780 --> 01:02:42,290
would take the contents of that request

1431
01:02:41,310 --> 01:02:44,460
and they were performing mathematical

1432
01:02:42,290 --> 01:02:45,990
calculation and compare it to the

1433
01:02:44,460 --> 01:02:49,050
contents of the a record for data

1434
01:02:45,990 --> 01:02:50,549
verification so you can kind of see here

1435
01:02:49,050 --> 01:02:52,500
here's an a record and the associated

1436
01:02:50,550 --> 01:02:54,810
response and then it generates that

1437
01:02:52,500 --> 01:02:56,310
integer value based on the IP that it

1438
01:02:54,810 --> 01:02:58,350
was responded from the attacker

1439
01:02:56,310 --> 01:03:00,210
controlled server and then it would do

1440
01:02:58,350 --> 01:03:02,640
the same thing for the txt record take a

1441
01:03:00,210 --> 01:03:04,050
portion of the response and compare it

1442
01:03:02,640 --> 01:03:05,910
to make sure that the resulting into

1443
01:03:04,050 --> 01:03:08,490
your integer values match kind of like a

1444
01:03:05,910 --> 01:03:12,089
checksum to make sure that you know it

1445
01:03:08,490 --> 01:03:14,069
should continue running so this is how

1446
01:03:12,090 --> 01:03:15,720
it obtains stage four so it would it

1447
01:03:14,070 --> 01:03:17,220
would generate that integer value using

1448
01:03:15,720 --> 01:03:18,600
the first portion of that response and

1449
01:03:17,220 --> 01:03:20,368
if it matched that meant the data was

1450
01:03:18,600 --> 01:03:22,618
good and it would create a variable and

1451
01:03:20,369 --> 01:03:24,000
assign that data to a variable and then

1452
01:03:22,619 --> 01:03:26,040
it would do the same thing again and

1453
01:03:24,000 --> 01:03:27,540
again and again each time performing

1454
01:03:26,040 --> 01:03:29,070
that verification and it would do that

1455
01:03:27,540 --> 01:03:33,450
until the verification either failed or

1456
01:03:29,070 --> 01:03:34,619
the returned IP address was 0.00 and it

1457
01:03:33,450 --> 01:03:36,509
would take all of the data it had

1458
01:03:34,619 --> 01:03:39,330
retrieved and it would just have a huge

1459
01:03:36,510 --> 01:03:41,070
blob of encoded PowerShell and so when

1460
01:03:39,330 --> 01:03:44,490
it got the hey I'm done sending you

1461
01:03:41,070 --> 01:03:46,680
payload information from the server it

1462
01:03:44,490 --> 01:03:47,879
would Diaby Skate the the contents of

1463
01:03:46,680 --> 01:03:50,520
that power show and then kick it off to

1464
01:03:47,880 --> 01:03:52,320
to kick off stage four and stage four

1465
01:03:50,520 --> 01:03:54,480
was basically a rat it was a remote

1466
01:03:52,320 --> 01:03:56,310
access trojan so it did pretty much all

1467
01:03:54,480 --> 01:03:58,320
the things you can typically expect a

1468
01:03:56,310 --> 01:04:01,170
remote access Trojan to do on a system

1469
01:03:58,320 --> 01:04:02,910
it used DNS for command retrieval so it

1470
01:04:01,170 --> 01:04:04,890
would retrieve commands to execute on

1471
01:04:02,910 --> 01:04:07,890
the system from the attacker control DNS

1472
01:04:04,890 --> 01:04:09,868
server it would post a sensitive data

1473
01:04:07,890 --> 01:04:11,100
that it was exfiltrating using HTTP

1474
01:04:09,869 --> 01:04:12,570
which was a little bit different this

1475
01:04:11,100 --> 01:04:15,060
time they weren't trying to exfiltrate

1476
01:04:12,570 --> 01:04:16,920
over TNS this time they were using HTTP

1477
01:04:15,060 --> 01:04:18,960
for that but for command retrieval they

1478
01:04:16,920 --> 01:04:20,460
would use DNS and it can be used to

1479
01:04:18,960 --> 01:04:22,050
execute pretty much any command that you

1480
01:04:20,460 --> 01:04:24,180
have access to to run on a Windows

1481
01:04:22,050 --> 01:04:26,340
system so if you get a patient zero in

1482
01:04:24,180 --> 01:04:28,799
an environment they have as much control

1483
01:04:26,340 --> 01:04:30,990
as the the victim did on that system and

1484
01:04:28,800 --> 01:04:33,660
they can use that is the place that they

1485
01:04:30,990 --> 01:04:35,160
can start to pivot from move laterally

1486
01:04:33,660 --> 01:04:38,330
start to work towards some of the longer

1487
01:04:35,160 --> 01:04:38,330
term mission objectives they had

1488
01:04:42,790 --> 01:04:47,720
okay so now we're gonna switch forward a

1489
01:04:45,349 --> 01:04:50,150
little bit those attacks happen in 2017

1490
01:04:47,720 --> 01:04:51,140
as you saw well now come up to fall of

1491
01:04:50,150 --> 01:04:52,910
2018

1492
01:04:51,140 --> 01:04:55,009
one of the things we always see what the

1493
01:04:52,910 --> 01:04:56,540
attackers is they're always watching

1494
01:04:55,010 --> 01:04:59,330
what their peers are doing and improving

1495
01:04:56,540 --> 01:05:01,609
on that so we noticed is another attack

1496
01:04:59,330 --> 01:05:04,369
we called it D an espionage and when we

1497
01:05:01,609 --> 01:05:06,619
notice is this same threat actor did two

1498
01:05:04,369 --> 01:05:08,750
different attacks one of them was a rat

1499
01:05:06,619 --> 01:05:10,340
sort of like we just saw with DNS

1500
01:05:08,750 --> 01:05:12,290
messenger and another one is actually

1501
01:05:10,340 --> 01:05:13,369
starting to talk you know target the DNS

1502
01:05:12,290 --> 01:05:16,220
infrastructure so we're going to first

1503
01:05:13,369 --> 01:05:18,710
look at that first event where they were

1504
01:05:16,220 --> 01:05:20,899
trying to get a rat on the system so

1505
01:05:18,710 --> 01:05:22,910
again easiest way to get a rat on a

1506
01:05:20,900 --> 01:05:24,500
system as target the user users that

1507
01:05:22,910 --> 01:05:26,540
weak link in this case they would either

1508
01:05:24,500 --> 01:05:27,680
send a spear phishing email or what they

1509
01:05:26,540 --> 01:05:30,200
actually did here which was really

1510
01:05:27,680 --> 01:05:32,118
interesting is they would target target

1511
01:05:30,200 --> 01:05:34,490
social media sites where people may be

1512
01:05:32,119 --> 01:05:36,859
looking for jobs and they would actually

1513
01:05:34,490 --> 01:05:40,069
put documents up there but they were

1514
01:05:36,859 --> 01:05:42,619
pretending to be legitimate sites like

1515
01:05:40,070 --> 01:05:44,500
whit procom Suncor com or legitimate

1516
01:05:42,619 --> 01:05:47,359
places where you can go look for a job

1517
01:05:44,500 --> 01:05:50,930
but people don't know about DNS so they

1518
01:05:47,359 --> 01:05:52,940
would do HR - Wipro it looks closed most

1519
01:05:50,930 --> 01:05:55,160
users think that's a valid site has

1520
01:05:52,940 --> 01:05:57,349
nothing to do with Wipro so they would

1521
01:05:55,160 --> 01:05:59,660
go there download a document and they

1522
01:05:57,349 --> 01:06:01,670
get a word doc and as usual it has

1523
01:05:59,660 --> 01:06:03,649
macros in it because you know that's

1524
01:06:01,670 --> 01:06:05,750
attackers love to use to get to run code

1525
01:06:03,650 --> 01:06:07,849
well in this case they actually had two

1526
01:06:05,750 --> 01:06:09,800
macros in the document so when you

1527
01:06:07,849 --> 01:06:11,839
opened up the document one macro

1528
01:06:09,800 --> 01:06:14,570
executes it basically just made a copy

1529
01:06:11,839 --> 01:06:17,420
of the data on to the system as a doc

1530
01:06:14,570 --> 01:06:20,210
fall didn't really look suspicious but

1531
01:06:17,420 --> 01:06:22,099
then it wasn't until the second macro

1532
01:06:20,210 --> 01:06:24,020
when you actually closed the document

1533
01:06:22,099 --> 01:06:26,330
another Mac will be run and that's where

1534
01:06:24,020 --> 01:06:29,180
it started doing its malicious activity

1535
01:06:26,330 --> 01:06:31,400
you may think about that why'd they put

1536
01:06:29,180 --> 01:06:33,259
two macros in there well one of the

1537
01:06:31,400 --> 01:06:35,480
things the attackers always know is that

1538
01:06:33,260 --> 01:06:37,550
as defenders we're putting roadblocks on

1539
01:06:35,480 --> 01:06:39,680
the network they know a lot of people

1540
01:06:37,550 --> 01:06:42,050
are deploying sandboxes to check files

1541
01:06:39,680 --> 01:06:43,879
that are coming in as attachments but

1542
01:06:42,050 --> 01:06:46,160
they also realize that not all Sam boxes

1543
01:06:43,880 --> 01:06:47,780
are created equal if they're not that

1544
01:06:46,160 --> 01:06:49,700
intelligent they're going to open up the

1545
01:06:47,780 --> 01:06:51,950
document and see if it does anything

1546
01:06:49,700 --> 01:06:53,600
unusual well in this case if it's not

1547
01:06:51,950 --> 01:06:56,419
smart enough to open it

1548
01:06:53,600 --> 01:06:58,430
and then also close it it's never going

1549
01:06:56,420 --> 01:06:59,780
to see the malicious activity and it's

1550
01:06:58,430 --> 01:07:02,089
gonna look benign and it's going to get

1551
01:06:59,780 --> 01:07:05,240
down and execute on the system and

1552
01:07:02,090 --> 01:07:08,630
they're gonna get their rat installed so

1553
01:07:05,240 --> 01:07:10,520
you know with most rats if I want it to

1554
01:07:08,630 --> 01:07:12,590
run and I want to execute commands I

1555
01:07:10,520 --> 01:07:14,870
have to be able to communicate back to

1556
01:07:12,590 --> 01:07:16,340
my infrastructure well in this case they

1557
01:07:14,870 --> 01:07:19,040
had two ways they could do that they

1558
01:07:16,340 --> 01:07:20,990
could do it with HTTP common when we've

1559
01:07:19,040 --> 01:07:23,810
seen in rats over the years nothing

1560
01:07:20,990 --> 01:07:26,720
special there but these attackers also

1561
01:07:23,810 --> 01:07:28,549
had a mode which they had in DNS where

1562
01:07:26,720 --> 01:07:30,859
if they had maybe a more sensitive

1563
01:07:28,550 --> 01:07:33,380
target one that was probably monitoring

1564
01:07:30,860 --> 01:07:35,090
HDPE they could actually do their

1565
01:07:33,380 --> 01:07:37,760
command and control similar to DNS

1566
01:07:35,090 --> 01:07:40,670
messenger but over DNS this time and

1567
01:07:37,760 --> 01:07:42,380
unlike DNS messenger these guys use

1568
01:07:40,670 --> 01:07:44,960
regular a records so they just look like

1569
01:07:42,380 --> 01:07:48,950
regular DNS requests but they were able

1570
01:07:44,960 --> 01:07:51,290
to do commands extra trade data back and

1571
01:07:48,950 --> 01:07:53,180
forth so let's look at how that worked

1572
01:07:51,290 --> 01:07:55,490
so again they have to start off with a

1573
01:07:53,180 --> 01:07:59,680
domain well in this case they just

1574
01:07:55,490 --> 01:07:59,680
created one that looked like office 360

1575
01:08:00,010 --> 01:08:05,890
and the zero with a little o just enough

1576
01:08:03,860 --> 01:08:09,140
to make it look legitimate to a user and

1577
01:08:05,890 --> 01:08:11,359
again they needed to send their command

1578
01:08:09,140 --> 01:08:13,310
so the gray part they would encode the

1579
01:08:11,360 --> 01:08:14,840
ID of the system and whenever this

1580
01:08:13,310 --> 01:08:16,970
malware took over a system it would

1581
01:08:14,840 --> 01:08:19,670
basically assign a two digit code in

1582
01:08:16,970 --> 01:08:21,620
this case it was GT so they have to send

1583
01:08:19,670 --> 01:08:23,600
that that's what they base 32 encoded in

1584
01:08:21,620 --> 01:08:24,769
the gray part but they also knew that

1585
01:08:23,600 --> 01:08:27,109
we're going to have to send this request

1586
01:08:24,770 --> 01:08:28,850
multiple times well they didn't want it

1587
01:08:27,109 --> 01:08:31,010
to look suspicious so they wanted to be

1588
01:08:28,850 --> 01:08:34,040
different so they added that blue part

1589
01:08:31,010 --> 01:08:35,540
which is just random data that way they

1590
01:08:34,040 --> 01:08:37,040
can execute these requests multiple

1591
01:08:35,540 --> 01:08:39,470
times and it's always going to look like

1592
01:08:37,040 --> 01:08:41,569
I'm going to a different sub domain in

1593
01:08:39,470 --> 01:08:44,720
this case you can see when they first

1594
01:08:41,569 --> 01:08:48,858
did the request they get a reply back of

1595
01:08:44,720 --> 01:08:51,440
0.1 0.3 not really a valid IP address

1596
01:08:48,859 --> 01:08:54,260
DNS doesn't care but what it's telling

1597
01:08:51,439 --> 01:08:56,899
the malware is that I'm going to send

1598
01:08:54,260 --> 01:09:00,470
you one command and it's going to be 3

1599
01:08:56,899 --> 01:09:02,540
characters long so they reacts acute

1600
01:09:00,470 --> 01:09:04,130
their DNS requests the gray portion

1601
01:09:02,540 --> 01:09:06,620
stays the same because I'm still the

1602
01:09:04,130 --> 01:09:07,279
same system different blue value because

1603
01:09:06,620 --> 01:09:09,049
they generate

1604
01:09:07,279 --> 01:09:10,429
to random value again but if you'll

1605
01:09:09,049 --> 01:09:14,479
notice now we have a different IP

1606
01:09:10,429 --> 01:09:16,819
address this time we get 100 105 114 dot

1607
01:09:14,479 --> 01:09:21,528
0 well if you look at the ASCII chart

1608
01:09:16,819 --> 01:09:24,799
that 100 corresponds to D 105 to are 114

1609
01:09:21,529 --> 01:09:26,960
or 114 to are so they basically encode

1610
01:09:24,799 --> 01:09:29,299
it the command they wanted to run in

1611
01:09:26,960 --> 01:09:30,618
that IP address and in this case it was

1612
01:09:29,299 --> 01:09:31,969
a short one they could do it in one IP

1613
01:09:30,618 --> 01:09:33,738
but if they had longer ones they would

1614
01:09:31,969 --> 01:09:35,618
just do multiple requests until they had

1615
01:09:33,738 --> 01:09:37,968
the whole command and then obviously

1616
01:09:35,618 --> 01:09:40,729
when they've executed the command they

1617
01:09:37,969 --> 01:09:42,529
need to get the data back out so they

1618
01:09:40,729 --> 01:09:46,129
would actually then start executing a

1619
01:09:42,529 --> 01:09:48,259
bunch of DNS requests exfiltrating all

1620
01:09:46,130 --> 01:09:50,359
the data and they kept it small so that

1621
01:09:48,259 --> 01:09:52,219
the domains didn't get large so they

1622
01:09:50,359 --> 01:09:55,070
would just chunk it out a little bit at

1623
01:09:52,219 --> 01:09:57,020
a time and if you notice they still use

1624
01:09:55,070 --> 01:09:58,969
a system ID but on the replies they

1625
01:09:57,020 --> 01:10:00,289
would put a two in front of it whereas

1626
01:09:58,969 --> 01:10:01,849
they had a zero when they were first

1627
01:10:00,289 --> 01:10:02,960
doing the request now they're sending

1628
01:10:01,849 --> 01:10:06,650
the results so they're going to give it

1629
01:10:02,960 --> 01:10:08,389
a two every time so again in regular DNS

1630
01:10:06,650 --> 01:10:10,190
messages now the regular a record

1631
01:10:08,389 --> 01:10:12,110
requests they're actually receiving

1632
01:10:10,190 --> 01:10:14,419
commands executing them and getting the

1633
01:10:12,110 --> 01:10:17,598
results sent back to the attackers all

1634
01:10:14,420 --> 01:10:18,860
through DNS traffic so if you're looking

1635
01:10:17,599 --> 01:10:20,900
on the network you're not going to see

1636
01:10:18,860 --> 01:10:23,750
anything if you're not actually taking

1637
01:10:20,900 --> 01:10:25,280
those DNS requests apart to see that all

1638
01:10:23,750 --> 01:10:29,960
these DNS requests are going to that

1639
01:10:25,280 --> 01:10:31,550
domain that they had there we could

1640
01:10:29,960 --> 01:10:33,380
actually look at it when we you know we

1641
01:10:31,550 --> 01:10:34,789
have Umbrella we can look at our

1642
01:10:33,380 --> 01:10:36,469
investigate toolkit we could actually

1643
01:10:34,789 --> 01:10:38,869
see lots of things happening with DNS

1644
01:10:36,469 --> 01:10:40,309
and we'll really notice with this one is

1645
01:10:38,869 --> 01:10:42,710
even though they had that capability

1646
01:10:40,309 --> 01:10:45,110
they did use it for their more

1647
01:10:42,710 --> 01:10:46,880
high-value targets they didn't just use

1648
01:10:45,110 --> 01:10:49,909
it all the time because they realized

1649
01:10:46,880 --> 01:10:52,010
that if they used it extensively it was

1650
01:10:49,909 --> 01:10:54,049
going to more likely be detected taken

1651
01:10:52,010 --> 01:10:55,309
apart analyzed so they wanted to make

1652
01:10:54,050 --> 01:10:57,920
sure that this was a tool they could

1653
01:10:55,309 --> 01:11:02,510
still reliably go to and stay under the

1654
01:10:57,920 --> 01:11:04,280
radar so now we're gonna shift forward a

1655
01:11:02,510 --> 01:11:06,110
little bit because so far we've looked

1656
01:11:04,280 --> 01:11:08,840
at ways that they can certainly tunnel

1657
01:11:06,110 --> 01:11:13,549
data through DNS but another way that

1658
01:11:08,840 --> 01:11:15,409
you can abuse DNS is I have to trust the

1659
01:11:13,550 --> 01:11:17,599
data coming back from DNS to be the

1660
01:11:15,409 --> 01:11:19,848
right server so if you think about it

1661
01:11:17,599 --> 01:11:20,930
you know look at away DNS works I goat

1662
01:11:19,849 --> 01:11:23,180
issue my

1663
01:11:20,930 --> 01:11:26,690
West it goes through this DNS hierarchy

1664
01:11:23,180 --> 01:11:28,280
I get an IP and I go to that IP to do

1665
01:11:26,690 --> 01:11:30,589
whatever I want to do I display the page

1666
01:11:28,280 --> 01:11:33,559
get all the data well what they want to

1667
01:11:30,590 --> 01:11:35,450
do here is what happens if I manipulate

1668
01:11:33,560 --> 01:11:37,790
that DNS hierarchy in some fashion

1669
01:11:35,450 --> 01:11:40,880
maybe I target your registrar account I

1670
01:11:37,790 --> 01:11:43,940
target your registrar in their company

1671
01:11:40,880 --> 01:11:46,760
themselves if I can alter the value of

1672
01:11:43,940 --> 01:11:48,710
what's coming back instead of going to

1673
01:11:46,760 --> 01:11:51,020
the server you want you go to my

1674
01:11:48,710 --> 01:11:52,760
attacker controlled server and then I

1675
01:11:51,020 --> 01:11:54,200
can redirect you to the real server so

1676
01:11:52,760 --> 01:11:56,360
now become a man in the middle type

1677
01:11:54,200 --> 01:11:58,490
situation and that's what we started

1678
01:11:56,360 --> 01:12:01,880
seeing with this second part of DNS

1679
01:11:58,490 --> 01:12:03,769
espionage and you know if you want to

1680
01:12:01,880 --> 01:12:05,180
look at it you know DNS hierarchy is

1681
01:12:03,770 --> 01:12:07,340
pretty complicated there's lots of

1682
01:12:05,180 --> 01:12:09,290
different steps but there's many places

1683
01:12:07,340 --> 01:12:11,300
you can target a simple one is a

1684
01:12:09,290 --> 01:12:14,300
registrar account whenever you have a

1685
01:12:11,300 --> 01:12:15,890
domain name you pay some registrar to

1686
01:12:14,300 --> 01:12:17,630
take care of that and you have an

1687
01:12:15,890 --> 01:12:19,850
account you can go in and change what IP

1688
01:12:17,630 --> 01:12:21,860
address is on there well if that account

1689
01:12:19,850 --> 01:12:24,230
has a week old password on it

1690
01:12:21,860 --> 01:12:26,570
I can probably brute-force it break in

1691
01:12:24,230 --> 01:12:28,730
and change that data and manipulate it

1692
01:12:26,570 --> 01:12:30,650
or I might even go higher up I can go

1693
01:12:28,730 --> 01:12:32,570
all the way up to the registry maybe

1694
01:12:30,650 --> 01:12:34,790
target the registry for an entire

1695
01:12:32,570 --> 01:12:37,849
company if I can break into that network

1696
01:12:34,790 --> 01:12:40,930
I can emanate manipulate the DNS and

1697
01:12:37,850 --> 01:12:43,520
then IP addresses for any of those

1698
01:12:40,930 --> 01:12:46,250
entries that are in that database and

1699
01:12:43,520 --> 01:12:47,960
that's what we started seeing here so

1700
01:12:46,250 --> 01:12:50,840
let's look at the second one DNS when I

1701
01:12:47,960 --> 01:12:53,390
was doing they went in they set up some

1702
01:12:50,840 --> 01:12:55,550
accounts basically they went in set up

1703
01:12:53,390 --> 01:12:57,830
servers on the in the cloud basically

1704
01:12:55,550 --> 01:13:01,420
with IP addresses associated with them

1705
01:12:57,830 --> 01:13:05,450
and then they basically started

1706
01:13:01,420 --> 01:13:06,740
attacking different registrar's trying

1707
01:13:05,450 --> 01:13:09,530
to get those accounts so they could

1708
01:13:06,740 --> 01:13:11,780
actually then redirect the traffic and

1709
01:13:09,530 --> 01:13:13,700
in the same situation they would also do

1710
01:13:11,780 --> 01:13:17,540
like create a self-signed cert with

1711
01:13:13,700 --> 01:13:19,429
let's encrypt not the best to full real

1712
01:13:17,540 --> 01:13:20,990
security person but most regular users

1713
01:13:19,430 --> 01:13:23,000
are going to see it still looks

1714
01:13:20,990 --> 01:13:25,250
encrypted I'm gonna believe it's a true

1715
01:13:23,000 --> 01:13:27,440
cert I'll go to the site that's out

1716
01:13:25,250 --> 01:13:29,180
there and we started noticing that's

1717
01:13:27,440 --> 01:13:32,059
what they were doing they would set

1718
01:13:29,180 --> 01:13:34,280
these up for a domain set up that fake

1719
01:13:32,060 --> 01:13:34,730
certificate on it and then we could look

1720
01:13:34,280 --> 01:13:37,250
in

1721
01:13:34,730 --> 01:13:38,570
massive DNS and actually see that people

1722
01:13:37,250 --> 01:13:41,450
were trying to go to this company's

1723
01:13:38,570 --> 01:13:44,090
address they were getting redirected the

1724
01:13:41,450 --> 01:13:45,830
attackers controlled site with the

1725
01:13:44,090 --> 01:13:47,780
intention being that you look it looks

1726
01:13:45,830 --> 01:13:50,090
like you're going to the real site you

1727
01:13:47,780 --> 01:13:51,889
enter your username and credentials then

1728
01:13:50,090 --> 01:13:54,350
they redirect you to the real site and

1729
01:13:51,890 --> 01:13:56,540
let you login officially but now they've

1730
01:13:54,350 --> 01:13:59,840
captured your credentials so at that

1731
01:13:56,540 --> 01:14:01,519
point I can now target your network but

1732
01:13:59,840 --> 01:14:03,500
it's much more stealthy because I'm

1733
01:14:01,520 --> 01:14:05,810
using valid credentials I'm not breaking

1734
01:14:03,500 --> 01:14:08,480
in in any obvious way I'm just logging

1735
01:14:05,810 --> 01:14:11,600
in as a regular user and we saw that

1736
01:14:08,480 --> 01:14:13,459
happen multiple times we actually went

1737
01:14:11,600 --> 01:14:15,470
back and looked this happened over a

1738
01:14:13,460 --> 01:14:17,480
much longer time period happened over a

1739
01:14:15,470 --> 01:14:18,980
couple years these attacks were

1740
01:14:17,480 --> 01:14:21,049
happening by going and looking at pass

1741
01:14:18,980 --> 01:14:23,690
in DNS we could see that these

1742
01:14:21,050 --> 01:14:25,760
redirections were actually happening it

1743
01:14:23,690 --> 01:14:27,139
was actually so scary that I don't how

1744
01:14:25,760 --> 01:14:30,230
many people member but there was in the

1745
01:14:27,140 --> 01:14:31,670
beginning of 2019 Department of Homeland

1746
01:14:30,230 --> 01:14:33,139
Security actually came out with a

1747
01:14:31,670 --> 01:14:35,750
statement to all the government

1748
01:14:33,140 --> 01:14:38,060
organizations and said hey you need to

1749
01:14:35,750 --> 01:14:40,250
tighten down your registrar accounts you

1750
01:14:38,060 --> 01:14:41,750
know in able to factor if it's possible

1751
01:14:40,250 --> 01:14:44,480
make sure you have strong passwords

1752
01:14:41,750 --> 01:14:45,710
because they were afraid that a lot of

1753
01:14:44,480 --> 01:14:47,990
other government entities were going to

1754
01:14:45,710 --> 01:14:49,550
be targeted in the same fashion to

1755
01:14:47,990 --> 01:14:50,780
basically have people redirected and

1756
01:14:49,550 --> 01:14:52,970
stealing the credentials so they could

1757
01:14:50,780 --> 01:14:55,940
break into those networks so again it

1758
01:14:52,970 --> 01:14:59,450
became up on the radar but with these

1759
01:14:55,940 --> 01:15:01,759
guys they were still only targeting that

1760
01:14:59,450 --> 01:15:04,280
register account that I have from my own

1761
01:15:01,760 --> 01:15:06,470
domain assuming I didn't set it up

1762
01:15:04,280 --> 01:15:07,790
correctly well shift forward to the

1763
01:15:06,470 --> 01:15:09,950
beginning of 2019

1764
01:15:07,790 --> 01:15:11,710
we have another attacker group we

1765
01:15:09,950 --> 01:15:13,460
labeled sea turtle come on the stage

1766
01:15:11,710 --> 01:15:16,160
they went higher

1767
01:15:13,460 --> 01:15:17,630
they decided why go for just that

1768
01:15:16,160 --> 01:15:19,760
registering account that's like going

1769
01:15:17,630 --> 01:15:22,010
each time I have to break an account to

1770
01:15:19,760 --> 01:15:24,620
get to one domain what if I go a little

1771
01:15:22,010 --> 01:15:27,530
higher in the food chain then I can

1772
01:15:24,620 --> 01:15:31,820
break into a network and do it for a lot

1773
01:15:27,530 --> 01:15:33,800
of different domains all at once so in

1774
01:15:31,820 --> 01:15:36,049
this case their motive was clearly

1775
01:15:33,800 --> 01:15:37,730
espionage I mean these guys were trying

1776
01:15:36,050 --> 01:15:39,650
to break into very sensitive networks

1777
01:15:37,730 --> 01:15:42,650
they were going for high-value targets

1778
01:15:39,650 --> 01:15:45,049
think government you know intelligence

1779
01:15:42,650 --> 01:15:46,629
organizations oil natural gas a lot of

1780
01:15:45,050 --> 01:15:48,510
things in the Middle East

1781
01:15:46,630 --> 01:15:51,090
pretty much it's obviously

1782
01:15:48,510 --> 01:15:52,500
they sponsored you know these guys were

1783
01:15:51,090 --> 01:15:55,020
targeting things for a reason

1784
01:15:52,500 --> 01:15:57,030
and in fact this is one of the first

1785
01:15:55,020 --> 01:15:59,400
things that we can find where they

1786
01:15:57,030 --> 01:16:01,650
actually publicly took control of an

1787
01:15:59,400 --> 01:16:03,990
actual registry in this case it was like

1788
01:16:01,650 --> 01:16:07,170
a government level domain so think like

1789
01:16:03,990 --> 01:16:10,559
a top level government registry all the

1790
01:16:07,170 --> 01:16:12,450
domains for that country were now under

1791
01:16:10,560 --> 01:16:14,250
control of these attackers so they could

1792
01:16:12,450 --> 01:16:17,269
manipulate any of those domains and

1793
01:16:14,250 --> 01:16:20,880
redirect people wherever they want it

1794
01:16:17,270 --> 01:16:22,590
and obviously to do this they can't just

1795
01:16:20,880 --> 01:16:25,050
target the companies themselves could

1796
01:16:22,590 --> 01:16:26,100
you think about it I'm targeting the DNS

1797
01:16:25,050 --> 01:16:28,740
infrastructure so there's actually

1798
01:16:26,100 --> 01:16:31,080
collateral damage I think I have to go

1799
01:16:28,740 --> 01:16:32,880
where those registries are who owns

1800
01:16:31,080 --> 01:16:35,910
those registries it's not the companies

1801
01:16:32,880 --> 01:16:37,470
it's whoever's providing that service so

1802
01:16:35,910 --> 01:16:39,750
there's collateral damage in this case

1803
01:16:37,470 --> 01:16:43,080
they had to hit some of those registry

1804
01:16:39,750 --> 01:16:45,090
providers in the u.s. some in Sweden to

1805
01:16:43,080 --> 01:16:46,620
basically then facilitate them getting

1806
01:16:45,090 --> 01:16:48,210
to the actual domains that they were

1807
01:16:46,620 --> 01:16:51,690
trying to use to get into those actual

1808
01:16:48,210 --> 01:16:53,940
networks so it gave you a little bit of

1809
01:16:51,690 --> 01:16:55,500
a map of this you can see a couple of

1810
01:16:53,940 --> 01:16:57,330
secondary targets those are just the

1811
01:16:55,500 --> 01:16:59,730
ones that either housed the registry or

1812
01:16:57,330 --> 01:17:01,440
their register providers but you can see

1813
01:16:59,730 --> 01:17:04,080
in orange the real guys that were being

1814
01:17:01,440 --> 01:17:05,940
targeted it was highly targeted into the

1815
01:17:04,080 --> 01:17:08,790
Middle East and they were going for very

1816
01:17:05,940 --> 01:17:09,870
high-value targets government military

1817
01:17:08,790 --> 01:17:11,160
that's why we couldn't even put the

1818
01:17:09,870 --> 01:17:13,080
domain names up there it's pretty

1819
01:17:11,160 --> 01:17:15,150
sensitive because even when we were

1820
01:17:13,080 --> 01:17:17,010
talking about it they were still active

1821
01:17:15,150 --> 01:17:20,610
they were actually redirecting people as

1822
01:17:17,010 --> 01:17:22,530
we were doing it so let's walk through

1823
01:17:20,610 --> 01:17:25,410
that how this actually happened do you

1824
01:17:22,530 --> 01:17:27,780
think about it I'm targeting say a

1825
01:17:25,410 --> 01:17:29,309
registry so I go and try and find a way

1826
01:17:27,780 --> 01:17:31,469
to gain access to that registries

1827
01:17:29,310 --> 01:17:33,990
Network they're like any other company

1828
01:17:31,470 --> 01:17:34,500
they have visible presence on the

1829
01:17:33,990 --> 01:17:36,300
Internet

1830
01:17:34,500 --> 01:17:38,190
they have potential vulnerabilities they

1831
01:17:36,300 --> 01:17:41,190
have users I can take advantage of I

1832
01:17:38,190 --> 01:17:42,690
find a way to break in once I break in I

1833
01:17:41,190 --> 01:17:45,839
start moving laterally trying to get

1834
01:17:42,690 --> 01:17:47,580
more control of that network then I'm a

1835
01:17:45,840 --> 01:17:48,960
excellent rate some data out that gives

1836
01:17:47,580 --> 01:17:51,570
me information about how the networks

1837
01:17:48,960 --> 01:17:53,670
set up my whole goal is to basically

1838
01:17:51,570 --> 01:17:56,759
gain enough control of that network so I

1839
01:17:53,670 --> 01:17:58,200
can start modifying the registry because

1840
01:17:56,760 --> 01:18:00,380
they're the ones who are actually doing

1841
01:17:58,200 --> 01:18:02,460
the normal modifications they control

1842
01:18:00,380 --> 01:18:03,690
where anybody goes

1843
01:18:02,460 --> 01:18:06,300
when they're trying to retrieve one of

1844
01:18:03,690 --> 01:18:08,040
those domains so if I can control that I

1845
01:18:06,300 --> 01:18:10,469
can actually use the real tools that

1846
01:18:08,040 --> 01:18:12,420
would update it to update it for me and

1847
01:18:10,469 --> 01:18:14,100
that's what the attacker started doing

1848
01:18:12,420 --> 01:18:16,650
they would issue an update command to

1849
01:18:14,100 --> 01:18:18,690
say hey instead of going to the name

1850
01:18:16,650 --> 01:18:21,540
server control by this registry go to my

1851
01:18:18,690 --> 01:18:23,309
name server and at that point everything

1852
01:18:21,540 --> 01:18:25,050
was off because now any requests were

1853
01:18:23,310 --> 01:18:26,580
going to the attacker controlled server

1854
01:18:25,050 --> 01:18:30,000
and they could point them wherever they

1855
01:18:26,580 --> 01:18:33,510
want it so then the victim gets this DNS

1856
01:18:30,000 --> 01:18:35,640
reply it's now pretty much going to a

1857
01:18:33,510 --> 01:18:37,980
forged address one the attacker is set

1858
01:18:35,640 --> 01:18:39,480
up it's obviously they're going to go

1859
01:18:37,980 --> 01:18:42,360
there they're going to make it look

1860
01:18:39,480 --> 01:18:43,950
legitimate like it's the real site once

1861
01:18:42,360 --> 01:18:45,389
it happens they're going to grab their

1862
01:18:43,950 --> 01:18:47,340
credentials they're going to harvest it

1863
01:18:45,390 --> 01:18:48,900
then they'll redirect the user to the

1864
01:18:47,340 --> 01:18:52,560
real site so from a user's perspective

1865
01:18:48,900 --> 01:18:54,540
they were given a domain IP comes in

1866
01:18:52,560 --> 01:18:56,520
they get to a site that looks legitimate

1867
01:18:54,540 --> 01:18:58,380
they give their credentials and then

1868
01:18:56,520 --> 01:19:00,260
they're on the real site because they

1869
01:18:58,380 --> 01:19:02,310
were happily redirect you and log you in

1870
01:19:00,260 --> 01:19:03,989
they don't see any difference they're

1871
01:19:02,310 --> 01:19:05,550
actually where they got tried to get to

1872
01:19:03,989 --> 01:19:07,410
but they've also then leaked their

1873
01:19:05,550 --> 01:19:09,510
credentials at that point then they can

1874
01:19:07,410 --> 01:19:12,510
log into the network and try and do

1875
01:19:09,510 --> 01:19:14,670
further attacks and we actually saw them

1876
01:19:12,510 --> 01:19:16,440
doing that they were trying to get more

1877
01:19:14,670 --> 01:19:17,940
control on the system and one of the

1878
01:19:16,440 --> 01:19:19,679
interesting things with these attackers

1879
01:19:17,940 --> 01:19:21,299
and we've been doing this for years that

1880
01:19:19,680 --> 01:19:23,040
Minister for at least three with Talos

1881
01:19:21,300 --> 01:19:25,800
and I've been doing at least five or six

1882
01:19:23,040 --> 01:19:28,590
is that most of the time when we publish

1883
01:19:25,800 --> 01:19:30,450
about an attack the attackers will

1884
01:19:28,590 --> 01:19:32,940
basically back off they're like oh wait

1885
01:19:30,450 --> 01:19:34,739
someone's noticing what we're doing we

1886
01:19:32,940 --> 01:19:36,599
need to cool back a little while we'll

1887
01:19:34,739 --> 01:19:39,440
just take it easy and not keep going

1888
01:19:36,600 --> 01:19:41,850
with these guys they didn't seem to care

1889
01:19:39,440 --> 01:19:44,040
we published about what they were doing

1890
01:19:41,850 --> 01:19:45,540
and they just continued to blaze on what

1891
01:19:44,040 --> 01:19:47,420
they were doing they kept escalating

1892
01:19:45,540 --> 01:19:49,710
their activities they weren't stopping

1893
01:19:47,420 --> 01:19:51,239
they didn't really care that anybody

1894
01:19:49,710 --> 01:19:52,380
knew about it so it was like they didn't

1895
01:19:51,239 --> 01:19:54,929
really care about any kind of

1896
01:19:52,380 --> 01:19:58,310
retribution they were going to continue

1897
01:19:54,930 --> 01:20:01,710
to do what they were trying to do and

1898
01:19:58,310 --> 01:20:04,739
they were basically they took the

1899
01:20:01,710 --> 01:20:06,030
certificate thing to a new level I mean

1900
01:20:04,739 --> 01:20:07,468
they would go through and on some of the

1901
01:20:06,030 --> 01:20:09,570
previous ones they would just do a

1902
01:20:07,469 --> 01:20:11,969
self-signed cert these guys would

1903
01:20:09,570 --> 01:20:16,349
actually go to other certificate

1904
01:20:11,969 --> 01:20:16,739
providers and then create a cert for a

1905
01:20:16,350 --> 01:20:19,620
domain

1906
01:20:16,739 --> 01:20:21,330
a real cert and the other provider

1907
01:20:19,620 --> 01:20:23,160
didn't really check that much on their

1908
01:20:21,330 --> 01:20:25,290
credentials so they would actually get a

1909
01:20:23,160 --> 01:20:27,450
real cert and then it looked very

1910
01:20:25,290 --> 01:20:29,969
legitimate and then they would even go

1911
01:20:27,450 --> 01:20:32,010
on to the network itself and try and

1912
01:20:29,969 --> 01:20:34,040
still critic you know still certs on

1913
01:20:32,010 --> 01:20:37,140
there as well

1914
01:20:34,040 --> 01:20:38,610
they were pretty effective at targeting

1915
01:20:37,140 --> 01:20:40,800
the you know we hear about tunnelling

1916
01:20:38,610 --> 01:20:43,980
with her Dutton beginning they would go

1917
01:20:40,800 --> 01:20:46,200
for the VPN endpoints for these networks

1918
01:20:43,980 --> 01:20:48,330
as well and be able to impersonate that

1919
01:20:46,200 --> 01:20:50,160
VPN endpoint so now people are in that

1920
01:20:48,330 --> 01:20:52,739
trusted safe environment I'm logging in

1921
01:20:50,160 --> 01:20:54,780
to my VPN but it was actually the

1922
01:20:52,739 --> 01:20:55,919
attackers controlled set up and then

1923
01:20:54,780 --> 01:21:00,570
they would redirect them over to the

1924
01:20:55,920 --> 01:21:02,190
network so I mean the whole point we did

1925
01:21:00,570 --> 01:21:04,590
you know did this talk for you since you

1926
01:21:02,190 --> 01:21:07,290
know that DNS is now becoming one of

1927
01:21:04,590 --> 01:21:09,630
those weak spots it's needed for all of

1928
01:21:07,290 --> 01:21:12,450
our networks to work but the attackers

1929
01:21:09,630 --> 01:21:14,310
are more using it to their advantage so

1930
01:21:12,450 --> 01:21:16,620
you really need to think about you know

1931
01:21:14,310 --> 01:21:18,420
monitoring DNS on your network I've done

1932
01:21:16,620 --> 01:21:20,630
lots of talks at places and I'll ask

1933
01:21:18,420 --> 01:21:23,610
people how many people monitor DNS and

1934
01:21:20,630 --> 01:21:25,590
hardly anybody raises their hand they

1935
01:21:23,610 --> 01:21:26,940
think like admin well I have my own DNS

1936
01:21:25,590 --> 01:21:28,800
resolver I don't need to worry about it

1937
01:21:26,940 --> 01:21:32,160
well these attacks all go through that

1938
01:21:28,800 --> 01:21:33,680
infrastructure if you have a registrar

1939
01:21:32,160 --> 01:21:36,660
account make sure you enable two-factor

1940
01:21:33,680 --> 01:21:39,150
it's important to make that as hard as

1941
01:21:36,660 --> 01:21:40,860
possible to break into it you know try

1942
01:21:39,150 --> 01:21:42,059
and lock down those services for your

1943
01:21:40,860 --> 01:21:44,089
domains that are out there to make it

1944
01:21:42,060 --> 01:21:46,290
harder for them to change that data

1945
01:21:44,090 --> 01:21:48,540
patch your systems I mean a lot of times

1946
01:21:46,290 --> 01:21:49,950
these guys are targeting like everything

1947
01:21:48,540 --> 01:21:51,390
else when you haven't patched the

1948
01:21:49,950 --> 01:21:53,670
network they're going to target that

1949
01:21:51,390 --> 01:21:56,460
weak spot but the key is just to really

1950
01:21:53,670 --> 01:21:58,320
start thinking about the protocols or

1951
01:21:56,460 --> 01:22:00,060
network like DNS and start monitoring

1952
01:21:58,320 --> 01:22:01,830
make sure you know what's happening

1953
01:22:00,060 --> 01:22:03,690
because the attackers know that that's

1954
01:22:01,830 --> 01:22:06,360
the way they can again get into your

1955
01:22:03,690 --> 01:22:08,730
network so at that you know if you have

1956
01:22:06,360 --> 01:22:10,049
anything add or otherwise you know will

1957
01:22:08,730 --> 01:22:11,968
close it out on how much time we have

1958
01:22:10,050 --> 01:22:13,410
here happy to answer any questions we

1959
01:22:11,969 --> 01:22:16,160
have at the end and I'll stay at the end

1960
01:22:13,410 --> 01:22:16,160
- yes

1961
01:22:30,320 --> 01:22:34,469
well I mean that the two basically if

1962
01:22:33,120 --> 01:22:36,030
you think about it they're just the

1963
01:22:34,470 --> 01:22:38,400
registrar's and the registries they're

1964
01:22:36,030 --> 01:22:41,040
just writing a database that lets you

1965
01:22:38,400 --> 01:22:44,129
get a value back for a domain so what

1966
01:22:41,040 --> 01:22:46,110
you're doing is most of the time you

1967
01:22:44,130 --> 01:22:47,310
know it's not really modifying what's

1968
01:22:46,110 --> 01:22:49,559
going to them because that's what I

1969
01:22:47,310 --> 01:22:52,010
supply I'm just given a domain name the

1970
01:22:49,560 --> 01:22:54,120
problem is I'm being redirected to

1971
01:22:52,010 --> 01:22:56,340
different name servers instead of the

1972
01:22:54,120 --> 01:22:58,110
real name server and I don't really see

1973
01:22:56,340 --> 01:23:00,030
that from a DNS perspective because all

1974
01:22:58,110 --> 01:23:01,469
I know is I sent it it went to the

1975
01:23:00,030 --> 01:23:04,980
authoritative name server and I got a

1976
01:23:01,470 --> 01:23:06,330
reply back so it's basically what the

1977
01:23:04,980 --> 01:23:08,370
changes that they're a lot of the new

1978
01:23:06,330 --> 01:23:10,559
ones they're doing it through the actual

1979
01:23:08,370 --> 01:23:13,200
change mechanism whereas if i hack into

1980
01:23:10,560 --> 01:23:15,960
your account and do it there may be some

1981
01:23:13,200 --> 01:23:18,389
telltale signs that I manipulated your

1982
01:23:15,960 --> 01:23:20,120
IP entry when we start talking about

1983
01:23:18,390 --> 01:23:22,740
them updating it with the real tools

1984
01:23:20,120 --> 01:23:24,390
it's gonna make it look legitimate

1985
01:23:22,740 --> 01:23:45,840
everywhere because that's how the system

1986
01:23:24,390 --> 01:23:47,130
is updated yes well I mean part of the

1987
01:23:45,840 --> 01:23:48,750
thing with that is that you know

1988
01:23:47,130 --> 01:23:51,780
obviously if you go and update it you'll

1989
01:23:48,750 --> 01:23:53,310
put it back to the real value now but a

1990
01:23:51,780 --> 01:23:54,509
lot of the things the damage is already

1991
01:23:53,310 --> 01:23:55,980
done here the thing is if you're

1992
01:23:54,510 --> 01:23:57,690
monitoring it that's the thing a lot of

1993
01:23:55,980 --> 01:24:00,030
people have set these and they haven't

1994
01:23:57,690 --> 01:24:01,500
changed him in years and some of the

1995
01:24:00,030 --> 01:24:03,750
more like with sea turtle some of the

1996
01:24:01,500 --> 01:24:05,340
attacks we saw these guys didn't want to

1997
01:24:03,750 --> 01:24:07,950
be detected they would change it in the

1998
01:24:05,340 --> 01:24:10,050
span of maybe 10 or 20 minutes and then

1999
01:24:07,950 --> 01:24:11,880
change it back so they weren't even

2000
01:24:10,050 --> 01:24:13,620
leaving it changed they were like

2001
01:24:11,880 --> 01:24:15,870
putting in certain windows because they

2002
01:24:13,620 --> 01:24:17,970
knew that the resource they wanted was

2003
01:24:15,870 --> 01:24:19,530
going to login they're redirecting them

2004
01:24:17,970 --> 01:24:22,640
they're putting it back again making it

2005
01:24:19,530 --> 01:24:22,639
even harder to detect

2006
01:24:22,789 --> 01:24:54,768
yes yeah well I mean there's different

2007
01:24:53,329 --> 01:24:56,150
ones on some of these where they had the

2008
01:24:54,769 --> 01:24:57,679
self signed search you would have

2009
01:24:56,150 --> 01:24:59,420
telltale signs that it's not the

2010
01:24:57,679 --> 01:25:01,489
legitimate search so you probably get

2011
01:24:59,420 --> 01:25:04,070
some warnings on some of the ones that

2012
01:25:01,489 --> 01:25:05,959
sea turtle did you probably wouldn't

2013
01:25:04,070 --> 01:25:08,049
notice anything because they were

2014
01:25:05,960 --> 01:25:10,369
actually using legitimate certificates

2015
01:25:08,050 --> 01:25:12,619
albeit from a different provider of

2016
01:25:10,369 --> 01:25:14,539
certificates but it was still legitimate

2017
01:25:12,619 --> 01:25:16,940
for that domain so everything doing the

2018
01:25:14,539 --> 01:25:19,610
checking would say this certificate is

2019
01:25:16,940 --> 01:25:21,650
valid for that domain it's legitimate

2020
01:25:19,610 --> 01:25:23,030
and at that point you're not really

2021
01:25:21,650 --> 01:25:25,159
going to notice any difference and

2022
01:25:23,030 --> 01:25:26,840
that's the scary part on it they were

2023
01:25:25,159 --> 01:25:29,659
able to steal these credentials without

2024
01:25:26,840 --> 01:25:34,449
the user even noticing because they had

2025
01:25:29,659 --> 01:25:37,449
done so much to make it look legitimate

2026
01:25:34,449 --> 01:25:37,449
yes

2027
01:25:43,280 --> 01:25:50,019
I'm gonna take that yeah yes so in in

2028
01:25:48,620 --> 01:25:52,519
some of the more sophisticated attacks

2029
01:25:50,020 --> 01:25:54,110
you know where the users actively being

2030
01:25:52,520 --> 01:25:55,190
redirected some malicious infrastructure

2031
01:25:54,110 --> 01:25:57,589
what they were doing was they were

2032
01:25:55,190 --> 01:25:58,639
taking the the zone for the domain that

2033
01:25:57,590 --> 01:26:01,220
they were targeting and they were

2034
01:25:58,640 --> 01:26:03,500
updating the NS record or the name

2035
01:26:01,220 --> 01:26:05,390
server records for that zone so say the

2036
01:26:03,500 --> 01:26:08,000
DNS the authoritative DNS server for

2037
01:26:05,390 --> 01:26:10,430
this zone or this domain and anything

2038
01:26:08,000 --> 01:26:12,470
under it or is this IP address that I

2039
01:26:10,430 --> 01:26:13,940
control on so if you're doing namespace

2040
01:26:12,470 --> 01:26:15,560
monitoring most of the time your NS

2041
01:26:13,940 --> 01:26:17,870
records don't change that frequently you

2042
01:26:15,560 --> 01:26:20,510
might modify like a records but it's

2043
01:26:17,870 --> 01:26:22,010
it's not like it's super dynamic in in

2044
01:26:20,510 --> 01:26:24,370
most environments so if you're

2045
01:26:22,010 --> 01:26:26,930
monitoring for you know what are the

2046
01:26:24,370 --> 01:26:30,800
responses associated with NS records for

2047
01:26:26,930 --> 01:26:32,360
my domain my company's domain you should

2048
01:26:30,800 --> 01:26:34,250
be able to detect any time those changed

2049
01:26:32,360 --> 01:26:35,570
because obviously as soon as they get

2050
01:26:34,250 --> 01:26:36,890
changed the IP address that gets

2051
01:26:35,570 --> 01:26:40,820
returned when you make an NS record

2052
01:26:36,890 --> 01:26:43,180
lookup is gonna be different does that

2053
01:26:40,820 --> 01:26:43,179
answer your question

2054
01:26:53,659 --> 01:26:57,849
yeah and in the beauty of a lot of these

2055
01:27:07,990 --> 01:27:12,110
yeah I guess one of the one of the

2056
01:27:10,580 --> 01:27:13,730
beauties of these types of the taxes

2057
01:27:12,110 --> 01:27:15,740
it's not like they're compromising your

2058
01:27:13,730 --> 01:27:17,240
infrastructure directly to facilitate

2059
01:27:15,740 --> 01:27:19,460
this right they're compromising a third

2060
01:27:17,240 --> 01:27:21,440
party that the Internet in general uses

2061
01:27:19,460 --> 01:27:23,570
to provide that service for DNS

2062
01:27:21,440 --> 01:27:25,669
resolution so with with some of the

2063
01:27:23,570 --> 01:27:27,200
earlier tunneling based attacks you know

2064
01:27:25,670 --> 01:27:29,000
you can monitor for that with

2065
01:27:27,200 --> 01:27:30,260
conventional security controls in your

2066
01:27:29,000 --> 01:27:31,340
org but for some of the more

2067
01:27:30,260 --> 01:27:32,540
sophisticated ones where they're

2068
01:27:31,340 --> 01:27:34,520
targeting like core Internet

2069
01:27:32,540 --> 01:27:36,500
infrastructure those are much much more

2070
01:27:34,520 --> 01:27:38,030
difficult for you as an organization to

2071
01:27:36,500 --> 01:27:40,970
find' again so you can put two-factor on

2072
01:27:38,030 --> 01:27:43,400
your on your account you can put zone

2073
01:27:40,970 --> 01:27:45,530
freezes so that the a lot of the

2074
01:27:43,400 --> 01:27:48,200
registrar's will require a second form

2075
01:27:45,530 --> 01:27:49,490
of authorization maybe a phone call or

2076
01:27:48,200 --> 01:27:51,260
something like that before they'll let

2077
01:27:49,490 --> 01:27:52,670
any changes be made so that's something

2078
01:27:51,260 --> 01:27:56,870
they're called I think they're called

2079
01:27:52,670 --> 01:27:58,430
locs registrar locks is the terminology

2080
01:27:56,870 --> 01:27:59,540
that they use not everyone provides that

2081
01:27:58,430 --> 01:28:01,400
though so you'd have to ask your

2082
01:27:59,540 --> 01:28:03,290
registrar you know if they support that

2083
01:28:01,400 --> 01:28:05,269
sort of two-factor but that'll mitigate

2084
01:28:03,290 --> 01:28:06,860
a lot of them um and then you know

2085
01:28:05,270 --> 01:28:09,350
obviously it's you know making sure that

2086
01:28:06,860 --> 01:28:10,880
you're monitoring um so that even if you

2087
01:28:09,350 --> 01:28:14,650
can't prevent it you can at least detect

2088
01:28:10,880 --> 01:28:14,650
and respond to it when it does occur

2089
01:28:30,390 --> 01:28:33,660
well so the one thing that you're gonna

2090
01:28:31,770 --> 01:28:35,760
you're gonna see and we've already seen

2091
01:28:33,660 --> 01:28:38,610
malware that makes use of do H because

2092
01:28:35,760 --> 01:28:41,219
nobody really has mechanisms to inspect

2093
01:28:38,610 --> 01:28:43,349
that because it's encrypted but really

2094
01:28:41,219 --> 01:28:45,900
it's it's gonna force organizations to

2095
01:28:43,350 --> 01:28:47,550
lose that layer of visibility if they

2096
01:28:45,900 --> 01:28:49,200
allow that in their environment most of

2097
01:28:47,550 --> 01:28:51,690
the browsers in the protocol the RFC

2098
01:28:49,200 --> 01:28:53,219
itself they support you being able to

2099
01:28:51,690 --> 01:28:55,230
override that with enterprise wide

2100
01:28:53,219 --> 01:28:56,460
settings to disable it if you want to

2101
01:28:55,230 --> 01:28:58,080
make sure you can still inspect the

2102
01:28:56,460 --> 01:28:59,940
contents of name resolution but it

2103
01:28:58,080 --> 01:29:01,920
definitely creates a potential area of

2104
01:28:59,940 --> 01:29:03,629
exposure that now we're authors are

2105
01:29:01,920 --> 01:29:05,250
going to target because anytime new

2106
01:29:03,630 --> 01:29:08,250
encrypted protocols come out that's

2107
01:29:05,250 --> 01:29:09,540
where they go and the other part of that

2108
01:29:08,250 --> 01:29:11,730
is like if you look at the ones where

2109
01:29:09,540 --> 01:29:14,219
they're targeting the infrastructure do

2110
01:29:11,730 --> 01:29:15,929
H only move that to another point before

2111
01:29:14,219 --> 01:29:17,880
it drops off to the infrastructure so

2112
01:29:15,930 --> 01:29:20,070
it's still going to be exposed to it you

2113
01:29:17,880 --> 01:29:21,690
lose the visibility from the local level

2114
01:29:20,070 --> 01:29:23,790
so it can make it even more challenging

2115
01:29:21,690 --> 01:29:25,469
for the defender so with that hopefully

2116
01:29:23,790 --> 01:29:26,910
it was helpful well we'll stay around

2117
01:29:25,469 --> 01:29:29,489
answer questions afterwards but we have

2118
01:29:26,910 --> 01:29:30,670
to wrap it up so he can be done thank

2119
01:29:29,489 --> 01:29:34,019
you much

2120
01:29:30,670 --> 01:29:34,020
[Applause]

2121
01:29:35,110 --> 01:29:37,170
you

2122
01:29:43,940 --> 01:29:46,000
you

