1
00:00:07,760 --> 00:00:11,760
hello everybody my name is Rob Kaiser

2
00:00:10,260 --> 00:00:13,740
I'm gonna be talking about misusing

3
00:00:11,760 --> 00:00:16,610
video services storage systems

4
00:00:13,740 --> 00:00:18,420
specifically looking at QR codes stuff

5
00:00:16,610 --> 00:00:21,689
just take a quick look

6
00:00:18,420 --> 00:00:23,040
yeah there's me I'm around I do public

7
00:00:21,689 --> 00:00:24,690
cloud hosting here in Winnipeg so if you

8
00:00:23,040 --> 00:00:27,000
want to talk to me about that go ahead

9
00:00:24,690 --> 00:00:28,470
I'm currently CTO at new Co robotics we

10
00:00:27,000 --> 00:00:30,359
make autonomous chicken barns which is

11
00:00:28,470 --> 00:00:32,668
kind of cool and I'm a director over at

12
00:00:30,359 --> 00:00:34,860
Cole TAC a few other things there's a

13
00:00:32,668 --> 00:00:37,319
standard disclaimer about the talk

14
00:00:34,860 --> 00:00:39,629
generally speaking this is me and only

15
00:00:37,320 --> 00:00:41,489
me I do not represent any of the

16
00:00:39,630 --> 00:00:43,829
companies that I happen to be part of or

17
00:00:41,489 --> 00:00:45,780
organizations so if you take offense to

18
00:00:43,829 --> 00:00:48,360
this if I violate something if I do

19
00:00:45,780 --> 00:00:52,770
whatever this is me so just don't buy us

20
00:00:48,360 --> 00:00:53,730
yourself with what I say here yeah all

21
00:00:52,770 --> 00:00:55,620
right

22
00:00:53,730 --> 00:00:58,169
also I make absolutely no warranties

23
00:00:55,620 --> 00:01:00,239
about stuff in this talk so if it breaks

24
00:00:58,170 --> 00:01:03,719
you get all the pieces if you do this

25
00:01:00,239 --> 00:01:05,940
you're on your own I did not instruct

26
00:01:03,719 --> 00:01:08,970
you to do this I'm not a lawyer but

27
00:01:05,940 --> 00:01:13,709
seriously don't do this unless you know

28
00:01:08,970 --> 00:01:16,530
what you're doing this slide is

29
00:01:13,709 --> 00:01:17,940
important so I wanted to say thank you

30
00:01:16,530 --> 00:01:20,550
to the organizers since nobody's done it

31
00:01:17,940 --> 00:01:23,390
yet so far you guys have managed to put

32
00:01:20,550 --> 00:01:26,920
on an amazing event so thank you yes

33
00:01:23,390 --> 00:01:26,920
[Applause]

34
00:01:26,980 --> 00:01:31,240
and in all seriousness the red guys with

35
00:01:29,770 --> 00:01:34,750
the red shirts and the yellow shirts are

36
00:01:31,240 --> 00:01:36,369
what make this possible and thank you

37
00:01:34,750 --> 00:01:37,930
especially for Dylan for being on my ass

38
00:01:36,370 --> 00:01:39,160
about sponsoring things because he's

39
00:01:37,930 --> 00:01:40,150
done an amazing job this year has been

40
00:01:39,160 --> 00:01:41,530
more than ever

41
00:01:40,150 --> 00:01:44,800
managing to get sponsors so that's

42
00:01:41,530 --> 00:01:47,410
awesome so a really quick overview of

43
00:01:44,800 --> 00:01:49,630
what I'm gonna talk about nothing that

44
00:01:47,410 --> 00:01:52,600
crazy I'm gonna talk about QR codes a

45
00:01:49,630 --> 00:01:53,830
little bit just because some background

46
00:01:52,600 --> 00:01:56,589
not much

47
00:01:53,830 --> 00:01:58,750
there's an aside that I'm gonna ask not

48
00:01:56,590 --> 00:02:00,610
be recorded but that's only because I

49
00:01:58,750 --> 00:02:01,930
added it this morning I didn't really

50
00:02:00,610 --> 00:02:03,790
think clearly about whether or not it

51
00:02:01,930 --> 00:02:08,020
would be appropriate to have recordings

52
00:02:03,790 --> 00:02:10,300
of it and then some background about

53
00:02:08,020 --> 00:02:11,790
some video services that currently exist

54
00:02:10,300 --> 00:02:14,110
some of the technical details of them

55
00:02:11,790 --> 00:02:14,950
we're going to talk about fuse file

56
00:02:14,110 --> 00:02:17,950
systems in userspace

57
00:02:14,950 --> 00:02:19,869
not again in terribly detail because I

58
00:02:17,950 --> 00:02:22,299
don't really care and it's not pertinent

59
00:02:19,870 --> 00:02:24,820
to this conversation we're gonna go over

60
00:02:22,300 --> 00:02:26,110
what I did which if you can't see the

61
00:02:24,820 --> 00:02:29,290
screen I don't know is that a

62
00:02:26,110 --> 00:02:30,580
half-decent large text yeah awesome good

63
00:02:29,290 --> 00:02:33,429
that's awesome

64
00:02:30,580 --> 00:02:35,620
so effectively I did QR encoding with

65
00:02:33,430 --> 00:02:38,050
ffmpeg and backed it by a fuse file

66
00:02:35,620 --> 00:02:39,880
system which we'll go over what that is

67
00:02:38,050 --> 00:02:42,040
and then some notes about going further

68
00:02:39,880 --> 00:02:45,130
all the while if you have questions

69
00:02:42,040 --> 00:02:51,070
please yell at me also we're out of

70
00:02:45,130 --> 00:02:52,420
coffee so I found that out okay so if

71
00:02:51,070 --> 00:02:54,100
you have any questions please just do

72
00:02:52,420 --> 00:02:56,049
yell raise your hand get my attention

73
00:02:54,100 --> 00:03:01,630
somehow I'm not gonna take offense to it

74
00:02:56,050 --> 00:03:03,430
and yeah so first and foremost sorry I

75
00:03:01,630 --> 00:03:04,660
bought a house and some property this is

76
00:03:03,430 --> 00:03:06,160
not as good as it could have been and

77
00:03:04,660 --> 00:03:07,750
I'm a procrastinator

78
00:03:06,160 --> 00:03:10,660
I was literally typing this up at 9:00

79
00:03:07,750 --> 00:03:14,530
a.m. at Salisbury house this morning so

80
00:03:10,660 --> 00:03:16,540
I did the thing sort of but you should

81
00:03:14,530 --> 00:03:17,860
take this as a here's some cool

82
00:03:16,540 --> 00:03:20,350
that you should go and look at further

83
00:03:17,860 --> 00:03:21,190
not uh look what I did it's special and

84
00:03:20,350 --> 00:03:23,769
shiny okay

85
00:03:21,190 --> 00:03:25,030
so just as a forewarning I'm also not

86
00:03:23,770 --> 00:03:26,920
gonna waste your time by trying to fill

87
00:03:25,030 --> 00:03:28,239
the time so if I'm done early I'll just

88
00:03:26,920 --> 00:03:33,089
be done early you can ask me questions

89
00:03:28,239 --> 00:03:36,549
or not so really quick simple QR codes

90
00:03:33,090 --> 00:03:37,930
most people have seen them also don't

91
00:03:36,549 --> 00:03:39,579
bloody scan these were at a security

92
00:03:37,930 --> 00:03:40,660
conference I don't know what they are I

93
00:03:39,579 --> 00:03:43,060
pulled them off the line I'm pretty

94
00:03:40,660 --> 00:03:45,790
it's Wikipedia like link to English

95
00:03:43,060 --> 00:03:47,470
whatever but generally speaking is you

96
00:03:45,790 --> 00:03:49,420
should know you should trust the content

97
00:03:47,470 --> 00:03:52,330
and I wouldn't trust me on this

98
00:03:49,420 --> 00:03:55,959
yeah as Mac is doing it it is so

99
00:03:52,330 --> 00:03:57,550
2-dimensional Bart yeah that's too so

100
00:03:55,960 --> 00:03:59,020
it's it's two-dimensional barcodes

101
00:03:57,550 --> 00:04:01,000
effectively if there's a lot more on

102
00:03:59,020 --> 00:04:03,280
that besides just that we'll go over it

103
00:04:01,000 --> 00:04:04,750
it originally comes from Japan Denso

104
00:04:03,280 --> 00:04:06,340
specifically if you haven't got a chance

105
00:04:04,750 --> 00:04:08,230
or you haven't heard of that name they

106
00:04:06,340 --> 00:04:10,180
make awesome robotic arms they're one of

107
00:04:08,230 --> 00:04:11,679
two that make really cool robotic arms

108
00:04:10,180 --> 00:04:15,250
for like manufacturing so fun to play

109
00:04:11,680 --> 00:04:17,350
with QR codes have multiple versions and

110
00:04:15,250 --> 00:04:19,060
that translates to how big they can be

111
00:04:17,350 --> 00:04:20,590
what kind of yeah we'll get into that a

112
00:04:19,060 --> 00:04:25,540
little bit but there's multiple versions

113
00:04:20,589 --> 00:04:27,280
of QR codes and they are agnostic as to

114
00:04:25,540 --> 00:04:29,530
what they hold so you can store whatever

115
00:04:27,280 --> 00:04:32,590
you want in them they're just storing

116
00:04:29,530 --> 00:04:34,539
bytes that's literally it they're handy

117
00:04:32,590 --> 00:04:36,700
for encoding things they have some knobs

118
00:04:34,540 --> 00:04:38,230
to fiddle not too many but a few you can

119
00:04:36,700 --> 00:04:39,969
change how much air correction they have

120
00:04:38,230 --> 00:04:42,250
that kind of stuff so yeah it can be

121
00:04:39,970 --> 00:04:44,290
really dense and they have they have

122
00:04:42,250 --> 00:04:46,150
correction built into them and you can

123
00:04:44,290 --> 00:04:48,220
change how much duplication of the

124
00:04:46,150 --> 00:04:50,919
content it has and therefore how much

125
00:04:48,220 --> 00:04:52,450
you know how much you can chop off for

126
00:04:50,920 --> 00:04:53,800
example the middle thing is actually a

127
00:04:52,450 --> 00:04:56,140
valid QR code even though it's got

128
00:04:53,800 --> 00:05:00,640
random I mean notice I got a motorcycle

129
00:04:56,140 --> 00:05:04,180
in it so it is totally valid so they can

130
00:05:00,640 --> 00:05:07,210
be dense I really do mean dense there

131
00:05:04,180 --> 00:05:10,090
spec on this is very very dense I don't

132
00:05:07,210 --> 00:05:12,299
know what that is again I wouldn't scan

133
00:05:10,090 --> 00:05:16,090
it I don't know what it is

134
00:05:12,300 --> 00:05:18,250
but there is no real technical you could

135
00:05:16,090 --> 00:05:19,810
easily take the speck of QR and extend

136
00:05:18,250 --> 00:05:24,070
it to be arbitrarily length if you chose

137
00:05:19,810 --> 00:05:27,880
to okay pretty good on that alright so a

138
00:05:24,070 --> 00:05:30,880
quick note I use QR codes to back up my

139
00:05:27,880 --> 00:05:33,340
private keys I then I basically I take

140
00:05:30,880 --> 00:05:34,870
my private key I print it and I change

141
00:05:33,340 --> 00:05:36,489
it akyuu I codes and I print it on paper

142
00:05:34,870 --> 00:05:39,370
and then that goes into a safety deposit

143
00:05:36,490 --> 00:05:41,980
box because humans are really good at

144
00:05:39,370 --> 00:05:44,160
storing information on paper

145
00:05:41,980 --> 00:05:46,600
generally for long periods of time I

146
00:05:44,160 --> 00:05:48,729
don't really trust my flash drive even

147
00:05:46,600 --> 00:05:51,490
in a safety deposit box for five years

148
00:05:48,729 --> 00:05:54,190
I just I don't it's likely to be fine

149
00:05:51,490 --> 00:05:57,070
seedy ours are likely to be fine this is

150
00:05:54,190 --> 00:05:58,870
a lot easier and it's paper so it's

151
00:05:57,070 --> 00:06:04,570
handy if you want to transport data

152
00:05:58,870 --> 00:06:07,990
securely consider this so yeah so lib QR

153
00:06:04,570 --> 00:06:10,330
encode it's a thing it is a library does

154
00:06:07,990 --> 00:06:11,080
cure encoding it has pretty good

155
00:06:10,330 --> 00:06:12,820
performance

156
00:06:11,080 --> 00:06:15,400
alright let's end we're gonna go over

157
00:06:12,820 --> 00:06:20,800
this I again I'm not gonna waste your

158
00:06:15,400 --> 00:06:22,690
time this is do you fullscreen I'm not

159
00:06:20,800 --> 00:06:23,800
gonna go over all of it this came out a

160
00:06:22,690 --> 00:06:27,430
couple days ago on Reddit it's an

161
00:06:23,800 --> 00:06:28,510
awesome awesome step by step guide I'll

162
00:06:27,430 --> 00:06:31,600
put up a link and everything else but

163
00:06:28,510 --> 00:06:35,980
effectively what it is is you take your

164
00:06:31,600 --> 00:06:37,720
data you group them group data you then

165
00:06:35,980 --> 00:06:40,330
fit into versions based on a number of

166
00:06:37,720 --> 00:06:43,090
code words so code words translates to

167
00:06:40,330 --> 00:06:44,950
versions a certain version can store X

168
00:06:43,090 --> 00:06:46,630
number of code words at a given error

169
00:06:44,950 --> 00:06:48,219
correction rate so basically how much

170
00:06:46,630 --> 00:06:50,440
data can you actually store in a given

171
00:06:48,220 --> 00:06:52,300
thing and give an image you then

172
00:06:50,440 --> 00:06:54,820
basically once you have you know your

173
00:06:52,300 --> 00:06:56,310
data you then see which level of err

174
00:06:54,820 --> 00:06:59,500
correction and version you end up using

175
00:06:56,310 --> 00:07:03,070
you use a very specific way to basically

176
00:06:59,500 --> 00:07:05,230
encode your data into this then you

177
00:07:03,070 --> 00:07:06,580
split them add err correction so you can

178
00:07:05,230 --> 00:07:08,169
see that's the actual data in this case

179
00:07:06,580 --> 00:07:10,930
and then the air correction is just at

180
00:07:08,169 --> 00:07:14,099
the bottom its reed-solomon err

181
00:07:10,930 --> 00:07:17,620
correction codes in case somebody cares

182
00:07:14,100 --> 00:07:19,090
and then you start with the drawing I'm

183
00:07:17,620 --> 00:07:20,830
not gonna go over this in detail like I

184
00:07:19,090 --> 00:07:22,060
said this is an awesome resource but

185
00:07:20,830 --> 00:07:25,000
effectively there is a specific way in

186
00:07:22,060 --> 00:07:28,120
which you draw a QR code and it's step

187
00:07:25,000 --> 00:07:30,700
by step and it is one for one so given

188
00:07:28,120 --> 00:07:33,730
the same data there should only be one

189
00:07:30,700 --> 00:07:36,370
QR code there could be multiple QR codes

190
00:07:33,730 --> 00:07:38,140
that are invalid in terms of they

191
00:07:36,370 --> 00:07:39,100
represent the same data because there

192
00:07:38,140 --> 00:07:41,530
are different versions they're different

193
00:07:39,100 --> 00:07:44,500
sizes but because everybody is

194
00:07:41,530 --> 00:07:47,679
standardized on a spec it's like a hash

195
00:07:44,500 --> 00:07:51,940
almost one set of data should always

196
00:07:47,680 --> 00:07:53,080
equate to one image of QR that that

197
00:07:51,940 --> 00:07:57,130
image could be different it could be a

198
00:07:53,080 --> 00:07:58,719
PNG jpg also this stuff but as far as QR

199
00:07:57,130 --> 00:08:00,850
representations go it should be the same

200
00:07:58,720 --> 00:08:02,669
you then basically take all your code

201
00:08:00,850 --> 00:08:05,650
words starting at the bottom over here

202
00:08:02,669 --> 00:08:07,780
and all you do is go ones and zeroes all

203
00:08:05,650 --> 00:08:10,388
the way up and use that's all you do

204
00:08:07,780 --> 00:08:13,570
and then you end up with that which then

205
00:08:10,389 --> 00:08:16,660
you apply a mask on to and masks

206
00:08:13,570 --> 00:08:19,120
effectively the type of mask you pick is

207
00:08:16,660 --> 00:08:21,550
directly related you basically apply a

208
00:08:19,120 --> 00:08:23,650
mask and the mask you pick is derived

209
00:08:21,550 --> 00:08:25,690
from the penalty patterns and the

210
00:08:23,650 --> 00:08:28,060
penalty patterns are effectively there's

211
00:08:25,690 --> 00:08:29,800
a lot of stuff in a single row so

212
00:08:28,060 --> 00:08:32,320
there's a lot of the same character and

213
00:08:29,800 --> 00:08:34,630
you all you do is you basically count

214
00:08:32,320 --> 00:08:36,820
how many penalty points you have or how

215
00:08:34,630 --> 00:08:38,740
many bad things you have in the QR code

216
00:08:36,820 --> 00:08:40,210
and if you do that for a whole bunch of

217
00:08:38,740 --> 00:08:41,620
different masks and you pick the one

218
00:08:40,210 --> 00:08:43,539
that has the best mask and that's the

219
00:08:41,620 --> 00:08:45,820
one you use and it's programmatic in the

220
00:08:43,539 --> 00:08:47,110
way in which it determines that so you

221
00:08:45,820 --> 00:08:49,290
should always end up with the same QR

222
00:08:47,110 --> 00:08:53,830
code given the same data and the same

223
00:08:49,290 --> 00:08:56,770
version of QR yeah that's basically it

224
00:08:53,830 --> 00:08:58,770
awesome site highly recommend video

225
00:08:56,770 --> 00:09:02,199
streaming services really quick overview

226
00:08:58,770 --> 00:09:04,449
YouTube 60 frames a second for 4k

227
00:09:02,200 --> 00:09:07,660
resolution 50 megabits stream and that's

228
00:09:04,450 --> 00:09:10,000
rtmp live streaming so that gives you

229
00:09:07,660 --> 00:09:11,920
about 50 megabit of transit of actual

230
00:09:10,000 --> 00:09:13,390
like this is the stream if you had a 50

231
00:09:11,920 --> 00:09:15,760
megabit upload which lots of people in

232
00:09:13,390 --> 00:09:17,860
this room do you could stream 4k out the

233
00:09:15,760 --> 00:09:21,339
door and they take it and then they

234
00:09:17,860 --> 00:09:24,760
would broadcast that out again 4k Google

235
00:09:21,339 --> 00:09:26,500
edge this is basically peering DB or

236
00:09:24,760 --> 00:09:29,290
like where you can talk to Google

237
00:09:26,500 --> 00:09:32,080
directly if you're an ISP it's all over

238
00:09:29,290 --> 00:09:34,589
the world and that is important later

239
00:09:32,080 --> 00:09:36,790
I'm not just randomly including

240
00:09:34,589 --> 00:09:39,010
some Terms of Service that I took a

241
00:09:36,790 --> 00:09:43,780
really quick gander at earlier today for

242
00:09:39,010 --> 00:09:47,470
example I noticed that YouTube basically

243
00:09:43,780 --> 00:09:49,150
says if you have an unauthorized use of

244
00:09:47,470 --> 00:09:50,500
your account you might be reliable you

245
00:09:49,150 --> 00:09:52,600
might you might be responsible for

246
00:09:50,500 --> 00:09:54,880
damages but the inverse is not true

247
00:09:52,600 --> 00:09:57,520
YouTube isn't that's just a dick move

248
00:09:54,880 --> 00:09:59,080
but the important thing is that you

249
00:09:57,520 --> 00:10:00,689
agree not to launch any automated

250
00:09:59,080 --> 00:10:03,100
systems including without limitation

251
00:10:00,690 --> 00:10:06,130
robot spiders are offline readers that

252
00:10:03,100 --> 00:10:07,150
bla bla bla bla bla reasonable human so

253
00:10:06,130 --> 00:10:08,890
you have to if you're gonna create

254
00:10:07,150 --> 00:10:11,170
automated software it has to mimic at

255
00:10:08,890 --> 00:10:12,790
least in some form the amount of

256
00:10:11,170 --> 00:10:15,280
requests that a human could reasonably

257
00:10:12,790 --> 00:10:16,689
click on a website so you can't just

258
00:10:15,280 --> 00:10:17,990
spam them basically is what it comes

259
00:10:16,690 --> 00:10:19,970
down to

260
00:10:17,990 --> 00:10:25,850
what I'm doing could but you could also

261
00:10:19,970 --> 00:10:27,620
rate limit it so yeah Vimeo 60 frames a

262
00:10:25,850 --> 00:10:29,089
second 8k resolution

263
00:10:27,620 --> 00:10:31,070
it doesn't do live stuff as far as I

264
00:10:29,089 --> 00:10:33,649
know but it's 50 to 80 megabit per

265
00:10:31,070 --> 00:10:38,709
stream I'll use h.264 in the backend as

266
00:10:33,649 --> 00:10:40,520
does YouTube 360k audio at 48 kilohertz

267
00:10:38,709 --> 00:10:42,670
basically I'm just saying there's some

268
00:10:40,520 --> 00:10:45,439
data there it's you can mess with it

269
00:10:42,670 --> 00:10:48,110
twitch is another streaming system 60

270
00:10:45,440 --> 00:10:50,209
frames a second 1080p they offer 3 to 6

271
00:10:48,110 --> 00:10:52,580
megabits streaming is suggested and they

272
00:10:50,209 --> 00:10:54,229
very strongly enforced CBR which is a

273
00:10:52,580 --> 00:10:55,640
constant bitrate so for those of you

274
00:10:54,230 --> 00:10:57,380
doing video stuff you'll know what this

275
00:10:55,640 --> 00:10:59,330
is basically you can have video streams

276
00:10:57,380 --> 00:11:01,520
that get larger as the differences get

277
00:10:59,330 --> 00:11:04,580
larger in a stream so say I'm moving

278
00:11:01,520 --> 00:11:05,930
around a lot and suddenly these pixels

279
00:11:04,580 --> 00:11:09,260
around me are gonna change a lot more

280
00:11:05,930 --> 00:11:10,969
than me standing here silently it's just

281
00:11:09,260 --> 00:11:12,589
you're not going to its deltas right

282
00:11:10,970 --> 00:11:15,529
Delta's of Delta's so you're not gonna

283
00:11:12,589 --> 00:11:17,390
see Br it's important it because it puts

284
00:11:15,529 --> 00:11:20,029
a bound on how much data you're gonna

285
00:11:17,390 --> 00:11:23,439
shut out the door at a given time so

286
00:11:20,029 --> 00:11:26,270
fuse really simply I'm using node views

287
00:11:23,440 --> 00:11:27,800
it's a file system the user space so

288
00:11:26,270 --> 00:11:29,810
take your favorite programming language

289
00:11:27,800 --> 00:11:32,209
you can define a file system that allows

290
00:11:29,810 --> 00:11:34,790
you to mount it so that you run once you

291
00:11:32,209 --> 00:11:37,670
run the code every single operation that

292
00:11:34,790 --> 00:11:39,349
your file system does what that any

293
00:11:37,670 --> 00:11:41,479
programs do it your OS layer get kicked

294
00:11:39,350 --> 00:11:43,880
back to your program so for example a

295
00:11:41,480 --> 00:11:45,500
reader request will just magically

296
00:11:43,880 --> 00:11:48,370
appear in your program and you can

297
00:11:45,500 --> 00:11:51,260
handle that however you'd like

298
00:11:48,370 --> 00:11:53,390
so why do you care about any of this

299
00:11:51,260 --> 00:11:57,380
 you can do some infinite storage

300
00:11:53,390 --> 00:12:00,680
stuff so if you haven't caught on the

301
00:11:57,380 --> 00:12:03,439
whole point is to be able to use YouTube

302
00:12:00,680 --> 00:12:05,739
as a storage mechanism and/or transport

303
00:12:03,440 --> 00:12:08,060
mechanism or other video services so

304
00:12:05,740 --> 00:12:11,149
there's no limit to how much you can

305
00:12:08,060 --> 00:12:13,279
shove on to YouTube right now at all so

306
00:12:11,149 --> 00:12:15,649
the current estimates were thousands and

307
00:12:13,279 --> 00:12:16,850
thousands of hours of video per hour or

308
00:12:15,649 --> 00:12:18,709
being uploaded to YouTube right now

309
00:12:16,850 --> 00:12:21,920
that's probably low at this point

310
00:12:18,709 --> 00:12:24,649
so you really could decide to have a

311
00:12:21,920 --> 00:12:26,660
massive massive file system and just

312
00:12:24,649 --> 00:12:28,160
encode it into YouTube videos and then

313
00:12:26,660 --> 00:12:30,680
pull it back out whenever you want from

314
00:12:28,160 --> 00:12:31,310
wherever you want it's awesome for

315
00:12:30,680 --> 00:12:34,010
backups

316
00:12:31,310 --> 00:12:35,329
because you can make videos private you

317
00:12:34,010 --> 00:12:37,760
can also do sharing all that kind of

318
00:12:35,330 --> 00:12:39,560
stuff and sharing a file you can share a

319
00:12:37,760 --> 00:12:42,080
video and when I say I share video I

320
00:12:39,560 --> 00:12:43,969
don't mean in the sense of here's this

321
00:12:42,080 --> 00:12:45,740
link I mean you can change permissions

322
00:12:43,970 --> 00:12:47,600
such that only certain accounts have

323
00:12:45,740 --> 00:12:50,570
access so it would be possible for you

324
00:12:47,600 --> 00:12:52,970
to create subsets and file system

325
00:12:50,570 --> 00:12:59,020
permissions effectively with something

326
00:12:52,970 --> 00:13:02,870
like this you can do packets in EB PF so

327
00:12:59,020 --> 00:13:04,760
EB PF is effectively Berkeley PAC packet

328
00:13:02,870 --> 00:13:07,100
filter stuff originally it's the Linux

329
00:13:04,760 --> 00:13:09,800
kernel stuff it is designed to allow you

330
00:13:07,100 --> 00:13:11,330
to hook on to certain system calls but

331
00:13:09,800 --> 00:13:12,829
it actually runs code so you give it

332
00:13:11,330 --> 00:13:14,330
code and the code has some limitations

333
00:13:12,830 --> 00:13:17,029
can't have certain loops that kind of

334
00:13:14,330 --> 00:13:18,560
stuff but it allows it's controllable

335
00:13:17,029 --> 00:13:21,170
through user space and it runs in the

336
00:13:18,560 --> 00:13:23,479
kernel so it allows you to for example

337
00:13:21,170 --> 00:13:24,829
fake a packet go even fake a packet it

338
00:13:23,480 --> 00:13:27,250
allows you to trigger a packet going

339
00:13:24,830 --> 00:13:29,870
outbound on a network interface

340
00:13:27,250 --> 00:13:33,140
bypassing your entire network stack it

341
00:13:29,870 --> 00:13:35,720
also allows you to basically hook on a

342
00:13:33,140 --> 00:13:39,920
filesystem system or anything else and

343
00:13:35,720 --> 00:13:41,660
trigger a packet inbound so your your

344
00:13:39,920 --> 00:13:46,010
entire Linux system will see like a

345
00:13:41,660 --> 00:13:47,120
packet came in to en 0 or 0 but that

346
00:13:46,010 --> 00:13:49,550
packet didn't actually come over the

347
00:13:47,120 --> 00:13:51,080
wire but your kernel said it came in

348
00:13:49,550 --> 00:13:54,079
over the wire so all of your other

349
00:13:51,080 --> 00:13:56,000
network stack things it did so this is

350
00:13:54,080 --> 00:13:58,310
how you could use basically you could

351
00:13:56,000 --> 00:14:01,820
create live streaming which by the way I

352
00:13:58,310 --> 00:14:03,829
did but it's not sort of Vince yeah live

353
00:14:01,820 --> 00:14:06,530
streaming bi-directional you could

354
00:14:03,830 --> 00:14:08,660
create a tunnel quite easily and use

355
00:14:06,530 --> 00:14:10,459
this to actually wrote packets with the

356
00:14:08,660 --> 00:14:13,370
idea being you do ping on one interface

357
00:14:10,460 --> 00:14:16,190
and layer two or layer 3 whichever you

358
00:14:13,370 --> 00:14:18,380
set up it goes encoded into youtube live

359
00:14:16,190 --> 00:14:22,570
out the door on a video stream and

360
00:14:18,380 --> 00:14:25,520
decoder at the other end and vice versa

361
00:14:22,570 --> 00:14:27,050
yeah so you could do YouTube 0 again it

362
00:14:25,520 --> 00:14:30,020
is possible to do that kind of stuff and

363
00:14:27,050 --> 00:14:31,939
I kind of want to try this but I'll talk

364
00:14:30,020 --> 00:14:34,730
to feel about it somewhere I think he's

365
00:14:31,940 --> 00:14:37,610
around now but you could peer it with

366
00:14:34,730 --> 00:14:39,560
Google in Seattle and Tokyo or any other

367
00:14:37,610 --> 00:14:41,810
place you want and they don't actually

368
00:14:39,560 --> 00:14:43,359
charge for peering in fact they want you

369
00:14:41,810 --> 00:14:46,268
to appear with them right

370
00:14:43,360 --> 00:14:49,720
so if I want to have transit across the

371
00:14:46,269 --> 00:14:53,379
Pacific I could actually just have my

372
00:14:49,720 --> 00:14:56,079
rotors QR encode things arbitrary data

373
00:14:53,379 --> 00:14:58,329
and wrote it over that so it's

374
00:14:56,079 --> 00:14:59,920
effectively IP over YouTube but I'm not

375
00:14:58,329 --> 00:15:02,649
paying for transatlantic or

376
00:14:59,920 --> 00:15:06,248
trans-pacific transit I just appear in

377
00:15:02,649 --> 00:15:08,980
Tokyo also it is the mother of all

378
00:15:06,249 --> 00:15:12,910
multicast right like so anybody like

379
00:15:08,980 --> 00:15:14,379
one-to-many we've like its YouTube has

380
00:15:12,910 --> 00:15:15,999
about a five-second delay I think this

381
00:15:14,379 --> 00:15:19,209
is what they publish five seconds

382
00:15:15,999 --> 00:15:21,549
globally so that's pretty good as far as

383
00:15:19,209 --> 00:15:24,160
multicast goes with very high bit rates

384
00:15:21,549 --> 00:15:26,379
and backups if I want it to backup a

385
00:15:24,160 --> 00:15:28,809
file I go here you go thumb toss it on

386
00:15:26,379 --> 00:15:30,399
YouTube in this format anywhere in the

387
00:15:28,809 --> 00:15:33,488
world can listen on that either live or

388
00:15:30,399 --> 00:15:34,929
download it and get that back up so it'd

389
00:15:33,489 --> 00:15:36,999
be relatively trivial to build a

390
00:15:34,929 --> 00:15:39,100
one-to-many backup system that was

391
00:15:36,999 --> 00:15:41,350
global and you're not paying for the

392
00:15:39,100 --> 00:15:44,559
transit so it's you upload once and you

393
00:15:41,350 --> 00:15:46,959
can distribute it that way so some notes

394
00:15:44,559 --> 00:15:49,419
YouTube live requires an audio stream

395
00:15:46,959 --> 00:15:51,219
this is not mentioned in any of their

396
00:15:49,419 --> 00:15:53,379
docks so if you're gonna do this it took

397
00:15:51,220 --> 00:15:54,819
me about two days to figure out what the

398
00:15:53,379 --> 00:15:56,949
hell was going on and why I couldn't

399
00:15:54,819 --> 00:15:59,049
actually it would the stream will start

400
00:15:56,949 --> 00:16:01,209
and then it will simply say I don't

401
00:15:59,049 --> 00:16:03,100
detect a stream and die even though

402
00:16:01,209 --> 00:16:06,339
ffmpeg is like running and giving it

403
00:16:03,100 --> 00:16:07,929
data use AI AM L service or something

404
00:16:06,339 --> 00:16:10,929
like that basically put in a blank audio

405
00:16:07,929 --> 00:16:12,129
channel in their stream and it's quite

406
00:16:10,929 --> 00:16:14,649
happy to run

407
00:16:12,129 --> 00:16:16,389
there are c++ implementations of QR code

408
00:16:14,649 --> 00:16:18,639
decode that are fairly good they're well

409
00:16:16,389 --> 00:16:20,290
understood like the website I went over

410
00:16:18,639 --> 00:16:21,759
there's a very specific way in which you

411
00:16:20,290 --> 00:16:26,110
do that and you can optimize for that

412
00:16:21,759 --> 00:16:27,910
and steganography everybody's gonna talk

413
00:16:26,110 --> 00:16:29,739
about this probably I've heard five

414
00:16:27,910 --> 00:16:30,719
people mention it so far before this

415
00:16:29,739 --> 00:16:33,189
talk

416
00:16:30,720 --> 00:16:35,049
yes it is possible to use this as a form

417
00:16:33,189 --> 00:16:37,809
of steganography because all I'm doing

418
00:16:35,049 --> 00:16:39,669
is basically taking QR I'm not hiding it

419
00:16:37,809 --> 00:16:41,319
just to be clear it's just a you'll see

420
00:16:39,669 --> 00:16:42,579
in a second is just a video of QR codes

421
00:16:41,319 --> 00:16:44,559
it's very obvious that it's something

422
00:16:42,579 --> 00:16:47,079
weird but you could take an actual video

423
00:16:44,559 --> 00:16:49,360
overlay QR codes on top with a certain

424
00:16:47,079 --> 00:16:51,008
or just manipulate pixels if you wanted

425
00:16:49,360 --> 00:16:52,629
to or anything like that and get it back

426
00:16:51,009 --> 00:16:54,399
out and you'd end up with basically

427
00:16:52,629 --> 00:16:56,310
hidden messages and stuck in ography in

428
00:16:54,399 --> 00:16:58,930
the video streams or files

429
00:16:56,310 --> 00:17:01,029
so hold on I've got a couple of things I

430
00:16:58,930 --> 00:17:03,219
wanted to show you to do to do so this

431
00:17:01,029 --> 00:17:03,459
is what it looks like how am i doing on

432
00:17:03,220 --> 00:17:07,089
time

433
00:17:03,459 --> 00:17:11,260
5:10 I'm good yeah cool so as you can

434
00:17:07,089 --> 00:17:15,129
see that is actually some data that I

435
00:17:11,260 --> 00:17:17,859
save that's all it is the reason why I

436
00:17:15,130 --> 00:17:20,140
chose Q Bar to start with is because so

437
00:17:17,859 --> 00:17:21,188
a friend of mine came and basically said

438
00:17:20,140 --> 00:17:23,800
why don't you just use the raw data

439
00:17:21,189 --> 00:17:25,150
frames it's like put arbitrary data in

440
00:17:23,800 --> 00:17:26,859
so it doesn't even look like anything

441
00:17:25,150 --> 00:17:29,559
right it's just garbage on the video

442
00:17:26,859 --> 00:17:31,360
stream I'm using the qualities of video

443
00:17:29,559 --> 00:17:33,370
specifically because it has air

444
00:17:31,360 --> 00:17:34,510
correction capabilities you notice that

445
00:17:33,370 --> 00:17:36,428
that's really fuzzy right now on the

446
00:17:34,510 --> 00:17:38,440
edges but that's because YouTube

447
00:17:36,429 --> 00:17:38,950
actually resized it I'm streaming from a

448
00:17:38,440 --> 00:17:41,650
mobile device

449
00:17:38,950 --> 00:17:44,110
I'm also enlarging it like heck but

450
00:17:41,650 --> 00:17:45,309
there's no guarantee that your endpoints

451
00:17:44,110 --> 00:17:47,830
will actually have the same kind of

452
00:17:45,309 --> 00:17:50,980
bandwidth down as you had up so they

453
00:17:47,830 --> 00:17:52,659
will automatically resize video QR would

454
00:17:50,980 --> 00:17:54,429
allow you to handle resizing video they

455
00:17:52,660 --> 00:17:59,350
would allow you to handle weird issues

456
00:17:54,429 --> 00:18:02,770
like that yeah so there's that I've

457
00:17:59,350 --> 00:18:06,668
mentioned that so those are just some

458
00:18:02,770 --> 00:18:10,690
videos I wanted to mention I'll go over

459
00:18:06,669 --> 00:18:18,120
how I did this really quick how we doing

460
00:18:10,690 --> 00:18:22,330
look good oh thank goodness for Tmax

461
00:18:18,120 --> 00:18:24,879
everybody see that ish sort of basically

462
00:18:22,330 --> 00:18:27,510
you can generate some images which is

463
00:18:24,880 --> 00:18:30,550
really simple

464
00:18:27,510 --> 00:18:32,169
QR encode is piped operator so you can

465
00:18:30,550 --> 00:18:34,510
use the UNIX terminal all I'm doing is

466
00:18:32,169 --> 00:18:37,840
going through a loop and echoing

467
00:18:34,510 --> 00:18:39,640
something piping it to QR encode convert

468
00:18:37,840 --> 00:18:40,659
it is important because it needs to be

469
00:18:39,640 --> 00:18:42,850
divisible by two

470
00:18:40,660 --> 00:18:44,110
otherwise the stream on ffmpeg will not

471
00:18:42,850 --> 00:18:46,899
take it so whatever you're using just

472
00:18:44,110 --> 00:18:47,979
make sure it's divisible by 2 so that's

473
00:18:46,900 --> 00:18:54,640
you can generate basically you can

474
00:18:47,980 --> 00:18:55,720
generate images those images look of

475
00:18:54,640 --> 00:18:59,380
course it's not gonna actually open the

476
00:18:55,720 --> 00:19:04,020
directory but they they look like stills

477
00:18:59,380 --> 00:19:04,020
of that you can then use

478
00:19:05,990 --> 00:19:11,370
and go through that you can then

479
00:19:09,180 --> 00:19:13,740
basically literally cap them all

480
00:19:11,370 --> 00:19:16,560
together pipe it to NC this is important

481
00:19:13,740 --> 00:19:18,480
because ffmpeg if you try and create a

482
00:19:16,560 --> 00:19:20,850
handle for ffmpeg and just feed it data

483
00:19:18,480 --> 00:19:24,270
in on standard in it doesn't really like

484
00:19:20,850 --> 00:19:25,830
it it FF MPEG doesn't care but most of

485
00:19:24,270 --> 00:19:27,720
the tools that you use to feed data in

486
00:19:25,830 --> 00:19:29,520
really don't like it because your

487
00:19:27,720 --> 00:19:31,770
encoding is not correct or you're using

488
00:19:29,520 --> 00:19:33,360
new lines or something else so if you

489
00:19:31,770 --> 00:19:36,060
use NC on both sides of it you can

490
00:19:33,360 --> 00:19:37,560
basically just feed data into ffmpeg the

491
00:19:36,060 --> 00:19:40,020
command right here basically says takes

492
00:19:37,560 --> 00:19:41,820
so I'm using ffmpeg if that hasn't clear

493
00:19:40,020 --> 00:19:44,610
already and all it does is it takes a

494
00:19:41,820 --> 00:19:48,419
bunch of images in and it says a frame

495
00:19:44,610 --> 00:19:51,179
rate and that means and - - are at the

496
00:19:48,420 --> 00:19:52,650
end of that will say keep there are

497
00:19:51,180 --> 00:19:54,030
actually ffmpeg

498
00:19:52,650 --> 00:19:55,290
is saying there's no difference in the

499
00:19:54,030 --> 00:19:56,639
frame rate coming in but I'm gonna

500
00:19:55,290 --> 00:19:58,139
repeat the frame so you've got a whole

501
00:19:56,640 --> 00:19:59,340
bunch of duplicate frames in there but

502
00:19:58,140 --> 00:20:02,520
that keeps the frame rate up on the

503
00:19:59,340 --> 00:20:04,080
actual video so that YouTube sees 25

504
00:20:02,520 --> 00:20:06,030
frames a second because if you give it

505
00:20:04,080 --> 00:20:09,300
one frame a second it's gonna not it's

506
00:20:06,030 --> 00:20:11,399
not gonna do it doot-doot

507
00:20:09,300 --> 00:20:13,649
you can then effectively use this exact

508
00:20:11,400 --> 00:20:15,930
same thing to get it out with ffmpeg so

509
00:20:13,650 --> 00:20:18,090
this is where you actually go and upload

510
00:20:15,930 --> 00:20:21,390
it I got this half working and then I

511
00:20:18,090 --> 00:20:23,010
broke it before the demo sorry but

512
00:20:21,390 --> 00:20:29,970
effect is that you could take that video

513
00:20:23,010 --> 00:20:33,180
it's it's an so that's what it actually

514
00:20:29,970 --> 00:20:34,050
looks like it's just an mp4 video but

515
00:20:33,180 --> 00:20:35,070
you could do whatever you want with that

516
00:20:34,050 --> 00:20:37,050
you could distribute it you could upload

517
00:20:35,070 --> 00:20:41,639
it you could have a live stream all that

518
00:20:37,050 --> 00:20:43,860
kind of stuff and then you use an ffmpeg

519
00:20:41,640 --> 00:20:47,150
command to rip it all out so what that

520
00:20:43,860 --> 00:20:49,709
does is it says go at this video file

521
00:20:47,150 --> 00:20:54,210
frame rate of one so one frame a second

522
00:20:49,710 --> 00:20:57,210
and just save it output images you can

523
00:20:54,210 --> 00:21:03,650
so I'm gonna show you this these two

524
00:20:57,210 --> 00:21:03,650
files so I've got two directories here

525
00:21:03,860 --> 00:21:08,550
test images which is basically I just

526
00:21:06,750 --> 00:21:11,220
iterated and created images of data and

527
00:21:08,550 --> 00:21:13,169
output images which are derived after

528
00:21:11,220 --> 00:21:15,150
I've basically taken the video and then

529
00:21:13,170 --> 00:21:17,040
deke basically ripped out the frames and

530
00:21:15,150 --> 00:21:18,870
put them back they are different that's

531
00:21:17,040 --> 00:21:21,090
because it's gone through video encoding

532
00:21:18,870 --> 00:21:23,550
so they are not binary exact the same

533
00:21:21,090 --> 00:21:29,490
but the big thing is that the content

534
00:21:23,550 --> 00:21:35,580
that is encoded in them is so that and

535
00:21:29,490 --> 00:21:38,940
then that so you can see that the QR

536
00:21:35,580 --> 00:21:40,199
code this is example stuff one is the

537
00:21:38,940 --> 00:21:43,590
same that's actually the data that's

538
00:21:40,200 --> 00:21:45,570
encoded in that stream so even though

539
00:21:43,590 --> 00:21:50,010
they are completely different images the

540
00:21:45,570 --> 00:21:54,178
content in them is the same yeah I don't

541
00:21:50,010 --> 00:21:57,600
think I had too much do to do live

542
00:21:54,179 --> 00:21:59,220
streaming really simply image PNG Xin to

543
00:21:57,600 --> 00:22:01,620
frame blah blah blah this is from an

544
00:21:59,220 --> 00:22:03,090
older presentation but yeah that's

545
00:22:01,620 --> 00:22:07,070
that's pretty much it

546
00:22:03,090 --> 00:22:07,070
questions yeah

547
00:22:20,740 --> 00:22:26,260
so I have done some load tests on it and

548
00:22:23,650 --> 00:22:30,240
I've gotten about 40 megabit is what I

549
00:22:26,260 --> 00:22:33,340
can get throughput and that's based on

550
00:22:30,240 --> 00:22:37,539
60 frames a second at I think I did

551
00:22:33,340 --> 00:22:39,158
1080p for that test but theoretically

552
00:22:37,539 --> 00:22:40,990
especially if you want to not do live

553
00:22:39,159 --> 00:22:43,779
streaming right if you wanted to juice

554
00:22:40,990 --> 00:22:45,850
just do upload video it would be pretty

555
00:22:43,779 --> 00:22:48,130
much perfect because you're taking a

556
00:22:45,850 --> 00:22:49,539
massive file and uploading it so that

557
00:22:48,130 --> 00:22:51,520
might take a while there's latency

558
00:22:49,539 --> 00:22:53,649
involved in that but YouTube will have a

559
00:22:51,520 --> 00:22:55,929
correct copy of it and as long as you

560
00:22:53,649 --> 00:22:57,820
have a really high download rate YouTube

561
00:22:55,929 --> 00:22:59,950
will not resize on you or it won't

562
00:22:57,820 --> 00:23:02,620
resize much on you which means the data

563
00:22:59,950 --> 00:23:05,710
coming back out will be full full

564
00:23:02,620 --> 00:23:09,340
representation and the result of that is

565
00:23:05,710 --> 00:23:11,020
that you can it's high latency but the

566
00:23:09,340 --> 00:23:14,230
bandwidth is there the bandwidth is

567
00:23:11,020 --> 00:23:16,870
effectively you're losing about 30% by

568
00:23:14,230 --> 00:23:18,610
default with Q R on the encoding because

569
00:23:16,870 --> 00:23:20,320
it has default air Corrections but you

570
00:23:18,610 --> 00:23:22,779
can disable that you can say I don't

571
00:23:20,320 --> 00:23:24,340
want air correction and then you're

572
00:23:22,779 --> 00:23:26,620
you're losing a whole bunch because of

573
00:23:24,340 --> 00:23:29,379
pixels and most other stuff I was able

574
00:23:26,620 --> 00:23:36,809
to push 40 megabit through it but I mean

575
00:23:29,380 --> 00:23:36,809
yeah that was those my tests yeah yeah

576
00:23:40,150 --> 00:23:57,730
but how does that yeah definitely so

577
00:23:55,670 --> 00:23:59,660
that is those it was effectively a

578
00:23:57,730 --> 00:24:01,640
question around have I thought about

579
00:23:59,660 --> 00:24:04,549
encrypting the data before you QR encode

580
00:24:01,640 --> 00:24:06,080
it yes and that is how I would suggest

581
00:24:04,549 --> 00:24:09,320
if you want to play with this you do

582
00:24:06,080 --> 00:24:11,240
that you then you're basically even if

583
00:24:09,320 --> 00:24:15,080
somebody bothers to download the YouTube

584
00:24:11,240 --> 00:24:16,700
stream or the file and decode it they're

585
00:24:15,080 --> 00:24:17,928
getting in coda encrypted data and

586
00:24:16,700 --> 00:24:20,929
there's nothing saying you couldn't do

587
00:24:17,929 --> 00:24:22,250
that beforehand so it is and QR that's

588
00:24:20,929 --> 00:24:23,960
that's another reason why QR is really

589
00:24:22,250 --> 00:24:26,059
handy in this aspect it is completely

590
00:24:23,960 --> 00:24:36,200
arbitrary what you store in there so

591
00:24:26,059 --> 00:24:37,760
yeah 100 Meg video it depends on how

592
00:24:36,200 --> 00:24:40,070
what your frame rate is and a few whole

593
00:24:37,760 --> 00:24:42,740
bunch of knobs and buttons basically so

594
00:24:40,070 --> 00:24:45,139
how fast you change the frame rate will

595
00:24:42,740 --> 00:24:47,320
determine yeah there's a whole bunch of

596
00:24:45,140 --> 00:24:59,140
knobs and buttons I can tell you that

597
00:24:47,320 --> 00:24:59,139
here let's just do this test images

598
00:25:00,260 --> 00:25:07,280
I did not take a look at the file size

599
00:25:03,919 --> 00:25:10,929
completely I did speed but so if I'm

600
00:25:07,280 --> 00:25:13,580
doing this I can just do a grep for PNG

601
00:25:10,929 --> 00:25:15,110
well these are on disk right so they've

602
00:25:13,580 --> 00:25:18,799
taken 3k a piece because they're on disk

603
00:25:15,110 --> 00:25:21,918
3 I notes they're not all 3k apiece I

604
00:25:18,799 --> 00:25:24,200
don't think anyways I would suggest that

605
00:25:21,919 --> 00:25:27,650
it's probably not that difficult to test

606
00:25:24,200 --> 00:25:30,440
it and it's not it's important to note

607
00:25:27,650 --> 00:25:32,330
that it's not based on time so when

608
00:25:30,440 --> 00:25:34,299
you're talking about file size it isn't

609
00:25:32,330 --> 00:25:36,320
gonna be based on duration of the video

610
00:25:34,299 --> 00:25:38,000
the reason is you've got a whole bunch

611
00:25:36,320 --> 00:25:40,399
of duplicate frames in there so it's

612
00:25:38,000 --> 00:25:42,790
going to compress that down heck so the

613
00:25:40,400 --> 00:25:45,010
result is simple answer the question

614
00:25:42,790 --> 00:25:48,260
just get back to it the question was

615
00:25:45,010 --> 00:25:50,809
what's the if I had 100 Meg's how big is

616
00:25:48,260 --> 00:25:52,669
the video a simple answer is I don't

617
00:25:50,809 --> 00:25:53,750
know cuz I haven't done that test I can

618
00:25:52,669 --> 00:25:56,240
tell you that if you had a hundred Meg's

619
00:25:53,750 --> 00:25:58,760
it would take you I don't know what's at

620
00:25:56,240 --> 00:26:02,570
30 megabit 40 megabit upload you can get

621
00:25:58,760 --> 00:26:05,900
that data out the door yeah I didn't

622
00:26:02,570 --> 00:26:10,399
time it so I don't know it's the simple

623
00:26:05,900 --> 00:26:14,030
answer and other questions concerns I'm

624
00:26:10,400 --> 00:26:15,830
crazy yeah all right cool if you wanna

625
00:26:14,030 --> 00:26:19,850
talk about the stuff come find me I am

626
00:26:15,830 --> 00:26:22,040
hoping to do QR stuff in the future I

627
00:26:19,850 --> 00:26:24,168
want to create oh god maybe not electron

628
00:26:22,040 --> 00:26:26,570
app but some cross-platform thing that

629
00:26:24,169 --> 00:26:28,100
you can then just literally oh here's

630
00:26:26,570 --> 00:26:30,860
your file system and you're good to go

631
00:26:28,100 --> 00:26:33,020
but right now the shell scripts work and

632
00:26:30,860 --> 00:26:35,209
if you want I can give them to you and

633
00:26:33,020 --> 00:26:37,220
or open source them and they are simply

634
00:26:35,210 --> 00:26:42,830
to encode and decode data and shove it

635
00:26:37,220 --> 00:26:43,390
onto YouTube which works alright see you

636
00:26:42,830 --> 00:26:49,879
later

637
00:26:43,390 --> 00:26:49,880
[Applause]

