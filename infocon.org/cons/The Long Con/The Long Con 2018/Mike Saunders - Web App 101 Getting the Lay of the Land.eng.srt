1
00:00:08,730 --> 00:00:14,929
[Applause]

2
00:00:10,960 --> 00:00:17,820
everyone good

3
00:00:14,929 --> 00:00:20,430
so I am Mike Saunders hard water hacker

4
00:00:17,820 --> 00:00:22,230
on Twitter I'm a principal security

5
00:00:20,430 --> 00:00:24,779
consultant for red siege we're an

6
00:00:22,230 --> 00:00:27,509
offensive services company if you're

7
00:00:24,779 --> 00:00:29,310
interested in the slides you want to get

8
00:00:27,509 --> 00:00:30,119
them now or get them later while it's

9
00:00:29,310 --> 00:00:34,860
really small

10
00:00:30,119 --> 00:00:36,510
right here red seats comm /w a 101

11
00:00:34,860 --> 00:00:43,050
you'll be able to get all the slides

12
00:00:36,510 --> 00:00:44,730
that used in the talk here so someone

13
00:00:43,050 --> 00:00:48,470
needs a beer and when you're getting a

14
00:00:44,730 --> 00:00:48,470
beer don't forget to tip your bartender

15
00:00:48,829 --> 00:00:55,020
so disclaimer this is a webapp pen

16
00:00:52,560 --> 00:00:57,390
testing course but this is not a art

17
00:00:55,020 --> 00:00:59,010
talk but this is not a technical talk

18
00:00:57,390 --> 00:01:00,440
I'm not going to be telling you like how

19
00:00:59,010 --> 00:01:02,790
to test four kinds of vulnerabilities

20
00:01:00,440 --> 00:01:05,128
that's what you came here for I'm sorry

21
00:01:02,790 --> 00:01:07,710
I'm going to be giving you a talk about

22
00:01:05,129 --> 00:01:10,829
the process of webapp pen testing and

23
00:01:07,710 --> 00:01:12,240
why that's important so with that out of

24
00:01:10,829 --> 00:01:15,270
the way I can add the standard

25
00:01:12,240 --> 00:01:17,490
disclaimer that these views do not

26
00:01:15,270 --> 00:01:21,140
represent my employer what they do

27
00:01:17,490 --> 00:01:24,658
because that's why I'm here so whatever

28
00:01:21,140 --> 00:01:28,229
why why am I giving you this talk how

29
00:01:24,659 --> 00:01:29,729
many of you are are wanting to get into

30
00:01:28,229 --> 00:01:32,299
webapp pen testing you're just getting

31
00:01:29,729 --> 00:01:35,580
started you don't know about the process

32
00:01:32,299 --> 00:01:39,990
all right I see some hands good was the

33
00:01:35,580 --> 00:01:42,420
right audience so when I started webapp

34
00:01:39,990 --> 00:01:44,759
pen testing I didn't have any direction

35
00:01:42,420 --> 00:01:47,280
I was basically like here's web inspect

36
00:01:44,760 --> 00:01:49,080
go forth and scan Web Apps and that was

37
00:01:47,280 --> 00:01:51,840
all the direction I was given so I

38
00:01:49,080 --> 00:01:54,060
didn't know anything about web app pen

39
00:01:51,840 --> 00:01:57,720
testing really didn't have any guidance

40
00:01:54,060 --> 00:02:00,030
and it was kind of an overwhelming thing

41
00:01:57,720 --> 00:02:02,009
the first time you're doing something

42
00:02:00,030 --> 00:02:04,200
more than web inspector we're actually

43
00:02:02,009 --> 00:02:05,670
manually trying to test an application

44
00:02:04,200 --> 00:02:09,569
with burp or some other kind of proxy

45
00:02:05,670 --> 00:02:11,939
and if you've ever done a test you've

46
00:02:09,568 --> 00:02:14,310
probably been going through and you're

47
00:02:11,939 --> 00:02:16,500
clicking things on the application

48
00:02:14,310 --> 00:02:18,049
looking for things to test and you see

49
00:02:16,500 --> 00:02:19,360
something as juicy and you're like ooh

50
00:02:18,049 --> 00:02:21,400
shiny

51
00:02:19,360 --> 00:02:22,960
shiny and you've got to go down that

52
00:02:21,400 --> 00:02:24,580
rabbit hole because you you're sure that

53
00:02:22,960 --> 00:02:25,870
its sequel injection you're sure that

54
00:02:24,580 --> 00:02:29,230
it's command injection you're sure that

55
00:02:25,870 --> 00:02:30,640
something is there you haven't spent the

56
00:02:29,230 --> 00:02:33,160
time to map out the entire application

57
00:02:30,640 --> 00:02:34,809
yet but you're going down that rabbit

58
00:02:33,160 --> 00:02:38,140
hole because you know that when is there

59
00:02:34,810 --> 00:02:41,020
and then eventually you've spent a bunch

60
00:02:38,140 --> 00:02:43,959
of time on that thing it turns out to be

61
00:02:41,020 --> 00:02:45,280
nothing and you've ran out of time to

62
00:02:43,960 --> 00:02:46,870
complete your assessment because you

63
00:02:45,280 --> 00:02:49,000
went down the rabbit hole that happened

64
00:02:46,870 --> 00:02:51,190
to me many many times until I got some

65
00:02:49,000 --> 00:02:52,570
actual training and some background so

66
00:02:51,190 --> 00:02:54,430
what I'm trying to do is give you some

67
00:02:52,570 --> 00:02:56,410
of that background training that I got

68
00:02:54,430 --> 00:02:58,180
that will make you more effective in

69
00:02:56,410 --> 00:03:01,690
your testing and help you avoid the

70
00:02:58,180 --> 00:03:03,130
rabbit holes the first thing we need to

71
00:03:01,690 --> 00:03:06,040
talk about when we're talking about web

72
00:03:03,130 --> 00:03:07,570
app pen testing is scoping it is a

73
00:03:06,040 --> 00:03:09,609
single most important thing you do

74
00:03:07,570 --> 00:03:11,290
because it informs the entire rest of

75
00:03:09,610 --> 00:03:13,120
the process the next most important

76
00:03:11,290 --> 00:03:15,250
thing is reporting because if you don't

77
00:03:13,120 --> 00:03:18,190
have a good report what did you do like

78
00:03:15,250 --> 00:03:19,690
what would you say you do here but if

79
00:03:18,190 --> 00:03:22,000
you don't have a good scope you're not

80
00:03:19,690 --> 00:03:24,430
gonna have a good rapport and scoping is

81
00:03:22,000 --> 00:03:26,620
more than just asking the client what is

82
00:03:24,430 --> 00:03:29,590
the URL for your application and are

83
00:03:26,620 --> 00:03:30,940
there any are there any credentials I

84
00:03:29,590 --> 00:03:34,000
need to use for it it's more than that

85
00:03:30,940 --> 00:03:35,890
on small apps sometimes that's all you

86
00:03:34,000 --> 00:03:38,440
need but as you start getting larger and

87
00:03:35,890 --> 00:03:41,859
larger applications scoping becomes

88
00:03:38,440 --> 00:03:43,540
important it's what's important to the

89
00:03:41,860 --> 00:03:46,269
client is what we need to figure out the

90
00:03:43,540 --> 00:03:47,769
scoping process and many times it's not

91
00:03:46,269 --> 00:03:49,030
going to be your traditional kinds of

92
00:03:47,769 --> 00:03:50,950
vulnerabilities like sequel injection

93
00:03:49,030 --> 00:03:53,860
cross-site scripting or whatever those

94
00:03:50,950 --> 00:03:55,690
are important but that's not what the

95
00:03:53,860 --> 00:03:58,570
client is thinking about the client is a

96
00:03:55,690 --> 00:04:00,340
business person that says I want to make

97
00:03:58,570 --> 00:04:02,709
sure that this app does what it's

98
00:04:00,340 --> 00:04:04,299
supposed to do and people can't make it

99
00:04:02,709 --> 00:04:06,100
do things it's not supposed to do like

100
00:04:04,299 --> 00:04:07,750
if you think of a traditional shopping

101
00:04:06,100 --> 00:04:09,549
cart vulnerability where you had this

102
00:04:07,750 --> 00:04:11,709
multistage process you look for

103
00:04:09,549 --> 00:04:13,690
something you're like I like that thing

104
00:04:11,709 --> 00:04:16,690
you add it to your cart eventually you

105
00:04:13,690 --> 00:04:18,070
want to checkout and you provide your

106
00:04:16,690 --> 00:04:21,608
shipping information you provide your

107
00:04:18,070 --> 00:04:23,830
payment details and then after you

108
00:04:21,608 --> 00:04:26,169
provided your payment details it took

109
00:04:23,830 --> 00:04:29,500
you to a confirmation page and there

110
00:04:26,169 --> 00:04:32,620
used to be shopping carts that landing

111
00:04:29,500 --> 00:04:34,750
on the confirmation page was

112
00:04:32,620 --> 00:04:37,660
kind of what triggered the whole thing

113
00:04:34,750 --> 00:04:39,190
to like ship your product and so there

114
00:04:37,660 --> 00:04:41,710
were logic vulnerabilities that you

115
00:04:39,190 --> 00:04:43,150
could add something to your cart go to

116
00:04:41,710 --> 00:04:45,190
checkout give them your shipping

117
00:04:43,150 --> 00:04:46,810
information and then instead of clicking

118
00:04:45,190 --> 00:04:48,910
next go to the payment page you just

119
00:04:46,810 --> 00:04:51,130
paste it in the URL for the verification

120
00:04:48,910 --> 00:04:54,370
page and by the fact that you got there

121
00:04:51,130 --> 00:04:55,600
the application thought well you must

122
00:04:54,370 --> 00:04:57,430
have paid because you're at the

123
00:04:55,600 --> 00:04:59,860
verification and it shipped your product

124
00:04:57,430 --> 00:05:01,240
so those are the kinds of things that's

125
00:04:59,860 --> 00:05:03,430
probably going to be important to the

126
00:05:01,240 --> 00:05:07,000
client can you abuse logic in the

127
00:05:03,430 --> 00:05:09,160
application so how do we find out what

128
00:05:07,000 --> 00:05:12,220
is important to them talk to them about

129
00:05:09,160 --> 00:05:15,300
what is this app do what are the areas

130
00:05:12,220 --> 00:05:18,669
that you're most concerned about what

131
00:05:15,300 --> 00:05:21,010
what kinds of things are you thinking

132
00:05:18,669 --> 00:05:22,240
are the most important in here and

133
00:05:21,010 --> 00:05:23,830
sometimes they're not right and

134
00:05:22,240 --> 00:05:25,840
sometimes they don't know sometimes you

135
00:05:23,830 --> 00:05:27,250
get clients that just had an auditor

136
00:05:25,840 --> 00:05:29,138
tell them you need to have a pen test

137
00:05:27,250 --> 00:05:30,880
and so they come to you and you're like

138
00:05:29,139 --> 00:05:32,710
what what are you looking to get on this

139
00:05:30,880 --> 00:05:34,600
pen test they're like auditors said we

140
00:05:32,710 --> 00:05:37,330
had to do this and so then you have to

141
00:05:34,600 --> 00:05:39,070
decide for them what's gonna happen so

142
00:05:37,330 --> 00:05:42,219
you need to work with them to understand

143
00:05:39,070 --> 00:05:44,620
their app this is especially true when

144
00:05:42,220 --> 00:05:47,470
you're dealing with really large

145
00:05:44,620 --> 00:05:50,410
applications because you client may not

146
00:05:47,470 --> 00:05:52,930
have the budget to support thorough

147
00:05:50,410 --> 00:05:54,460
testing of the application you run into

148
00:05:52,930 --> 00:05:56,169
a really large application you're like

149
00:05:54,460 --> 00:05:58,000
okay great we think this is going to

150
00:05:56,169 --> 00:06:00,729
take four weeks to test and they're like

151
00:05:58,000 --> 00:06:03,190
we only have enough budget for two weeks

152
00:06:00,729 --> 00:06:04,810
you're like okay what do you do now do

153
00:06:03,190 --> 00:06:06,190
you just start and test for two weeks

154
00:06:04,810 --> 00:06:09,070
and hope that you find the important

155
00:06:06,190 --> 00:06:12,969
things and budget if you're an internal

156
00:06:09,070 --> 00:06:14,380
pen tester maybe budget of a time I'm

157
00:06:12,970 --> 00:06:16,599
gonna tell you a story about when I was

158
00:06:14,380 --> 00:06:20,020
an internal pen tester we had a really

159
00:06:16,599 --> 00:06:22,539
large application and this application

160
00:06:20,020 --> 00:06:24,430
is very large financial application

161
00:06:22,539 --> 00:06:28,300
processed about a trillion dollars of

162
00:06:24,430 --> 00:06:29,830
transactions every year and they came to

163
00:06:28,300 --> 00:06:31,240
us they said we need to have a pen test

164
00:06:29,830 --> 00:06:34,210
because we need to go live with this new

165
00:06:31,240 --> 00:06:36,099
version okay and when we start asking

166
00:06:34,210 --> 00:06:38,830
them questions about the app we find out

167
00:06:36,099 --> 00:06:40,780
it's not one app it's really like six or

168
00:06:38,830 --> 00:06:43,909
seven applications wrapped up in one web

169
00:06:40,780 --> 00:06:46,190
application and

170
00:06:43,910 --> 00:06:48,350
after getting some idea of the size and

171
00:06:46,190 --> 00:06:50,870
complexity of the application my team

172
00:06:48,350 --> 00:06:52,940
sat down and we thought we came up with

173
00:06:50,870 --> 00:06:54,440
a realistic estimate that for two a team

174
00:06:52,940 --> 00:06:56,330
of two people would take four to six

175
00:06:54,440 --> 00:06:57,800
months to test this application so one

176
00:06:56,330 --> 00:07:01,580
person's gonna spend almost a year

177
00:06:57,800 --> 00:07:02,840
testing this four to six months I did

178
00:07:01,580 --> 00:07:05,150
not want to spend that much of my life

179
00:07:02,840 --> 00:07:06,950
looking at one big application the

180
00:07:05,150 --> 00:07:09,109
client doesn't want to wait four to six

181
00:07:06,950 --> 00:07:10,900
months because they have business to

182
00:07:09,110 --> 00:07:14,780
support they need to get into production

183
00:07:10,900 --> 00:07:17,299
so with that limitation that the client

184
00:07:14,780 --> 00:07:19,159
can't afford either the time or the

185
00:07:17,300 --> 00:07:21,710
money to do a thorough test how do we

186
00:07:19,160 --> 00:07:23,770
provide some value one approach is to

187
00:07:21,710 --> 00:07:26,390
just start testing and see what you find

188
00:07:23,770 --> 00:07:29,299
but are you gonna hit the things that

189
00:07:26,390 --> 00:07:30,349
have the biggest impact probably not so

190
00:07:29,300 --> 00:07:32,210
that's what we did is we asked the

191
00:07:30,350 --> 00:07:34,420
client what are the areas of the

192
00:07:32,210 --> 00:07:36,710
application that have the biggest impact

193
00:07:34,420 --> 00:07:39,170
when we asked it that way they didn't

194
00:07:36,710 --> 00:07:40,909
really understand what we were asking so

195
00:07:39,170 --> 00:07:44,030
we asked some more questions what is

196
00:07:40,910 --> 00:07:46,240
this app do okay well it processes all

197
00:07:44,030 --> 00:07:48,950
its all kinds of things related to

198
00:07:46,240 --> 00:07:51,560
financial transactions and processing

199
00:07:48,950 --> 00:07:53,390
who are the users well it's only

200
00:07:51,560 --> 00:07:55,760
internal company users there were no

201
00:07:53,390 --> 00:07:57,650
external users it's not exposed to the

202
00:07:55,760 --> 00:07:59,539
Internet and the people that can access

203
00:07:57,650 --> 00:08:02,030
it have to have a special firewall rule

204
00:07:59,540 --> 00:08:04,700
to access it so that means I've limited

205
00:08:02,030 --> 00:08:06,469
the set of potential attackers the

206
00:08:04,700 --> 00:08:09,500
threat actors for this application -

207
00:08:06,470 --> 00:08:11,360
most likely internal people with who

208
00:08:09,500 --> 00:08:13,669
already have access to the application

209
00:08:11,360 --> 00:08:15,950
or have access to a machine that has

210
00:08:13,669 --> 00:08:18,680
applet access to the application they're

211
00:08:15,950 --> 00:08:20,349
probably people that have they're upset

212
00:08:18,680 --> 00:08:22,460
because they didn't get a promotion or

213
00:08:20,350 --> 00:08:25,250
they didn't get the raise they thought

214
00:08:22,460 --> 00:08:26,870
or maybe because we can issue trap we

215
00:08:25,250 --> 00:08:28,430
can issue payments with this app they're

216
00:08:26,870 --> 00:08:31,310
people who want to steal money it's

217
00:08:28,430 --> 00:08:32,960
mainly internal people for your app that

218
00:08:31,310 --> 00:08:34,880
may be a completely different set of

219
00:08:32,960 --> 00:08:36,710
threat actors and you need to identify

220
00:08:34,880 --> 00:08:39,740
really who are the people that are most

221
00:08:36,710 --> 00:08:44,150
likely to I to target this particular

222
00:08:39,740 --> 00:08:46,880
application and then what can they do

223
00:08:44,150 --> 00:08:48,800
with that in this particular case as I

224
00:08:46,880 --> 00:08:51,560
mentioned it does financial transactions

225
00:08:48,800 --> 00:08:53,780
so one of the things this app does we

226
00:08:51,560 --> 00:08:55,400
were worldwide company so we might get

227
00:08:53,780 --> 00:08:59,360
paid in rubles

228
00:08:55,400 --> 00:09:01,660
but we have analysis that tells us that

229
00:08:59,360 --> 00:09:04,430
if we take the money out in rubles

230
00:09:01,660 --> 00:09:06,800
that's great but if we actually take the

231
00:09:04,430 --> 00:09:09,170
money out of the account in bolivars

232
00:09:06,800 --> 00:09:11,300
there's a favorable exchange rate there

233
00:09:09,170 --> 00:09:13,640
we can make more money by taking out in

234
00:09:11,300 --> 00:09:15,949
a different currency so if someone's

235
00:09:13,640 --> 00:09:17,960
able to impact the analysis there they

236
00:09:15,950 --> 00:09:20,720
cost the company money because they were

237
00:09:17,960 --> 00:09:23,000
able to impact the analysis by the same

238
00:09:20,720 --> 00:09:25,640
token we had when you're dealing with

239
00:09:23,000 --> 00:09:27,770
that kind of financial volume leaving

240
00:09:25,640 --> 00:09:29,180
money in an account for a day depending

241
00:09:27,770 --> 00:09:31,579
on how much is there you can make five

242
00:09:29,180 --> 00:09:33,290
thousand dollars of interest in a day so

243
00:09:31,580 --> 00:09:34,610
we have analysis that tells us when

244
00:09:33,290 --> 00:09:37,130
we're supposed to take money out of the

245
00:09:34,610 --> 00:09:40,370
account so if I can impact that analysis

246
00:09:37,130 --> 00:09:43,880
I can cost the company money same thing

247
00:09:40,370 --> 00:09:45,860
I can issue payments to our providers so

248
00:09:43,880 --> 00:09:47,570
if I can access the payment system and

249
00:09:45,860 --> 00:09:50,030
I'm not authorized maybe I have access

250
00:09:47,570 --> 00:09:52,790
to another part of the application but I

251
00:09:50,030 --> 00:09:54,589
can access the payment system I can wire

252
00:09:52,790 --> 00:09:56,650
payments to an account under my control

253
00:09:54,590 --> 00:09:58,850
and I can steal money from the company

254
00:09:56,650 --> 00:10:00,860
once we started talking through

255
00:09:58,850 --> 00:10:02,900
scenarios like that with the customer

256
00:10:00,860 --> 00:10:05,510
then they started to understand what we

257
00:10:02,900 --> 00:10:08,420
meant by what is the highest impact to

258
00:10:05,510 --> 00:10:11,319
the app to the company that this

259
00:10:08,420 --> 00:10:13,819
application has if it's abused and

260
00:10:11,320 --> 00:10:16,940
specifically with large apps what are

261
00:10:13,820 --> 00:10:19,010
the main areas of the app that have the

262
00:10:16,940 --> 00:10:21,800
most impact so we said give us a list of

263
00:10:19,010 --> 00:10:23,930
ten to twenty areas in the application

264
00:10:21,800 --> 00:10:26,719
that have the highest impact if

265
00:10:23,930 --> 00:10:28,219
someone's able to abuse them so they did

266
00:10:26,720 --> 00:10:30,170
that they came back with a list of about

267
00:10:28,220 --> 00:10:33,500
fifteen different portions of the

268
00:10:30,170 --> 00:10:35,540
application those were the areas that we

269
00:10:33,500 --> 00:10:37,460
focused on for our testing we didn't

270
00:10:35,540 --> 00:10:39,079
test everything and we may have missed a

271
00:10:37,460 --> 00:10:41,420
critical vulnerability in another part

272
00:10:39,080 --> 00:10:43,010
of the application that's where they

273
00:10:41,420 --> 00:10:44,810
need to come back and we talked to them

274
00:10:43,010 --> 00:10:46,939
about you know we need to circle back

275
00:10:44,810 --> 00:10:49,579
and do more testing on this once you get

276
00:10:46,940 --> 00:10:52,970
into production but we feel this is a

277
00:10:49,580 --> 00:10:54,770
reasonable compromise to assess the most

278
00:10:52,970 --> 00:10:56,660
sensitive areas in the application

279
00:10:54,770 --> 00:10:58,760
before we get to production so we've

280
00:10:56,660 --> 00:11:01,939
done something and we've done it in a

281
00:10:58,760 --> 00:11:03,980
way that applies some analysis and

282
00:11:01,940 --> 00:11:07,400
intelligence to it rather than just well

283
00:11:03,980 --> 00:11:08,720
I'll log in and see where I go so that

284
00:11:07,400 --> 00:11:09,529
maybe that was the case with our

285
00:11:08,720 --> 00:11:10,730
applique

286
00:11:09,529 --> 00:11:12,319
those are the things you need to think

287
00:11:10,730 --> 00:11:15,019
about with your customers applications

288
00:11:12,319 --> 00:11:17,779
when you're dealing with large apps if

289
00:11:15,019 --> 00:11:19,399
you have access to developers and if

290
00:11:17,779 --> 00:11:21,799
it's a white box test where everything

291
00:11:19,399 --> 00:11:23,600
is really supposed to be open ask if you

292
00:11:21,799 --> 00:11:25,759
can talk to the developers I have not

293
00:11:23,600 --> 00:11:27,290
met a developer we hear a lot of

294
00:11:25,759 --> 00:11:30,319
disparaging things about developers

295
00:11:27,290 --> 00:11:33,019
sometimes insecurity just like we say a

296
00:11:30,319 --> 00:11:34,790
thing about users you know Oh users are

297
00:11:33,019 --> 00:11:35,449
stupid no we just didn't explain it to

298
00:11:34,790 --> 00:11:36,919
them properly

299
00:11:35,449 --> 00:11:39,290
oh well devs don't care they just want

300
00:11:36,919 --> 00:11:41,179
to ship code well they do want to ship

301
00:11:39,290 --> 00:11:42,858
code but I've never met a dev when I had

302
00:11:41,179 --> 00:11:46,069
a chance to talk to him that didn't want

303
00:11:42,859 --> 00:11:47,989
to do things securely but just like most

304
00:11:46,069 --> 00:11:50,329
things NIT they weren't given the budget

305
00:11:47,989 --> 00:11:51,799
to do it properly or the time to do it

306
00:11:50,329 --> 00:11:53,899
properly so they did the best they can

307
00:11:51,799 --> 00:11:56,509
and if you have a chance to talk to him

308
00:11:53,899 --> 00:11:58,399
many times they will tell you the areas

309
00:11:56,509 --> 00:12:00,529
of their code that keeps him up at night

310
00:11:58,399 --> 00:12:02,540
ask them where are the things that you

311
00:12:00,529 --> 00:12:06,019
think I should focus on where are the

312
00:12:02,540 --> 00:12:08,329
areas that I can help you either find

313
00:12:06,019 --> 00:12:09,889
problems or reassure you that there

314
00:12:08,329 --> 00:12:11,540
aren't problems in here that's another

315
00:12:09,889 --> 00:12:13,610
thing to do when you're when you're

316
00:12:11,540 --> 00:12:17,029
scoping if you can talk to the devs if

317
00:12:13,610 --> 00:12:19,519
you have your own development skills and

318
00:12:17,029 --> 00:12:21,829
you can bring code reviews to the table

319
00:12:19,519 --> 00:12:23,509
ask for a copy of the source code take a

320
00:12:21,829 --> 00:12:25,579
look at the source code because that's

321
00:12:23,509 --> 00:12:27,889
one going to help you find areas that

322
00:12:25,579 --> 00:12:29,540
you should target into as you're doing

323
00:12:27,889 --> 00:12:31,339
your dynamic testing or actually in

324
00:12:29,540 --> 00:12:32,719
there testing things if you think you

325
00:12:31,339 --> 00:12:34,309
have a vulnerability you can go right

326
00:12:32,720 --> 00:12:36,589
back to the source and find out is it

327
00:12:34,309 --> 00:12:39,589
actually exploitable if you don't have

328
00:12:36,589 --> 00:12:41,089
that skill set ask if they've done a

329
00:12:39,589 --> 00:12:44,720
code audit you know if they've run it

330
00:12:41,089 --> 00:12:46,160
through whatever the name is now IBM

331
00:12:44,720 --> 00:12:47,389
rational back in the day but I don't

332
00:12:46,160 --> 00:12:49,579
know what it is now something source

333
00:12:47,389 --> 00:12:50,899
code analysis tool ask if they have the

334
00:12:49,579 --> 00:12:54,349
results of that something that you can

335
00:12:50,899 --> 00:12:55,850
see that'll help inform your testing now

336
00:12:54,350 --> 00:12:57,139
as important as I think scoping is I

337
00:12:55,850 --> 00:12:58,850
don't want to talk about it anymore

338
00:12:57,139 --> 00:13:01,519
so I'm going to talk about other things

339
00:12:58,850 --> 00:13:04,129
I'm gonna talk to you about what I do

340
00:13:01,519 --> 00:13:06,980
when I'm testing and typically you have

341
00:13:04,129 --> 00:13:09,109
a couple of phases even if you're doing

342
00:13:06,980 --> 00:13:11,480
an authenticated test you have a portion

343
00:13:09,109 --> 00:13:13,129
that you do pre authentication what are

344
00:13:11,480 --> 00:13:15,410
all the areas of the site that I can see

345
00:13:13,129 --> 00:13:18,619
before I log in and then what happens

346
00:13:15,410 --> 00:13:20,809
after authentication in my pre

347
00:13:18,619 --> 00:13:22,100
authentication phase there's a lot of

348
00:13:20,809 --> 00:13:24,680
enumeration that's happening

349
00:13:22,100 --> 00:13:26,660
first thing I'm doing is I'm analyzing

350
00:13:24,680 --> 00:13:29,920
TLS configurations

351
00:13:26,660 --> 00:13:31,100
whether you use SSL scan SSL is and Maps

352
00:13:29,920 --> 00:13:35,329
cipher

353
00:13:31,100 --> 00:13:37,550
you know SSL enum ciphers I guess so

354
00:13:35,329 --> 00:13:39,680
I'm using something like that this if

355
00:13:37,550 --> 00:13:41,479
you have PCI clients they're gonna want

356
00:13:39,680 --> 00:13:44,388
that information anyway so I run that

357
00:13:41,480 --> 00:13:47,600
analysis I'm also doing things like

358
00:13:44,389 --> 00:13:49,610
nikto it's been around a long time but

359
00:13:47,600 --> 00:13:51,740
it still finds common misconfigurations

360
00:13:49,610 --> 00:13:54,800
with web servers it finds default

361
00:13:51,740 --> 00:13:56,480
content it finds header issues that I'm

362
00:13:54,800 --> 00:13:58,040
gonna need to report on anyway so I'm

363
00:13:56,480 --> 00:14:00,709
running this up front to start getting

364
00:13:58,040 --> 00:14:04,389
some information about the app I'm also

365
00:14:00,709 --> 00:14:08,089
going to use nmap scans at some point

366
00:14:04,389 --> 00:14:11,000
using just basically the if you do at a

367
00:14:08,089 --> 00:14:12,290
K or SV to get information about the app

368
00:14:11,000 --> 00:14:14,600
that'll tell you some more things about

369
00:14:12,290 --> 00:14:15,680
the web servers that especially becomes

370
00:14:14,600 --> 00:14:18,319
important when you're dealing with like

371
00:14:15,680 --> 00:14:20,930
multiple sites trying to understand how

372
00:14:18,319 --> 00:14:23,660
the the sites are configured and then

373
00:14:20,930 --> 00:14:26,689
I'm going to do dirt busting I prefer to

374
00:14:23,660 --> 00:14:29,180
use go Buster but you can use Derby

375
00:14:26,689 --> 00:14:31,069
order Buster order search there are

376
00:14:29,180 --> 00:14:32,959
other ones out there I prefer go Buster

377
00:14:31,069 --> 00:14:34,130
for speed I'm gonna talk about dirt

378
00:14:32,959 --> 00:14:39,888
busting a little bit more in the next

379
00:14:34,130 --> 00:14:43,220
slide robots.txt looking in their

380
00:14:39,889 --> 00:14:46,579
robots.txt is essentially telling search

381
00:14:43,220 --> 00:14:48,410
engines don't index this stuff to me as

382
00:14:46,579 --> 00:14:50,089
a pen tester that tells me that's

383
00:14:48,410 --> 00:14:51,319
something they don't want in search

384
00:14:50,089 --> 00:14:53,120
engines it's probably something

385
00:14:51,319 --> 00:14:55,550
important that I should go take a look

386
00:14:53,120 --> 00:14:59,120
at so I'm gonna go look in robots.txt

387
00:14:55,550 --> 00:15:01,870
and if this is an internet facing site I

388
00:14:59,120 --> 00:15:04,430
highly encourage you to go to Google

389
00:15:01,870 --> 00:15:07,970
look up Google Dorking basically put in

390
00:15:04,430 --> 00:15:10,939
site your site comm and see what comes

391
00:15:07,970 --> 00:15:12,649
up if this is a new site there's

392
00:15:10,939 --> 00:15:14,810
probably not much there but if this is

393
00:15:12,649 --> 00:15:16,339
an app that has been in place for a

394
00:15:14,810 --> 00:15:19,189
while maybe they've done an in-place

395
00:15:16,339 --> 00:15:22,519
upgrade on the web server it's already

396
00:15:19,189 --> 00:15:25,189
been indexed and many times when an

397
00:15:22,519 --> 00:15:28,370
application has been upgraded there is

398
00:15:25,189 --> 00:15:30,829
legacy code that's still there in case

399
00:15:28,370 --> 00:15:33,740
they need to rollback and of course we

400
00:15:30,829 --> 00:15:34,589
never do things where we leave things

401
00:15:33,740 --> 00:15:36,750
and say

402
00:15:34,590 --> 00:15:38,370
we'll clean that up in a bit we need to

403
00:15:36,750 --> 00:15:39,480
leave that there for now and then leave

404
00:15:38,370 --> 00:15:41,940
it sit there for the rest of the

405
00:15:39,480 --> 00:15:45,390
server's lifetime that never happens it

406
00:15:41,940 --> 00:15:48,180
does and you can find those kinds of

407
00:15:45,390 --> 00:15:50,880
things in Google and now you have found

408
00:15:48,180 --> 00:15:53,579
a way to possibly access application

409
00:15:50,880 --> 00:15:56,070
logic possibly by PI a bypass

410
00:15:53,580 --> 00:15:58,680
authentication or use the existing

411
00:15:56,070 --> 00:16:01,110
authentication you have to access code

412
00:15:58,680 --> 00:16:02,430
that's no longer part of the application

413
00:16:01,110 --> 00:16:03,870
if you click through every link in the

414
00:16:02,430 --> 00:16:05,729
application submitted every form you

415
00:16:03,870 --> 00:16:07,680
wouldn't find this but it's in Google

416
00:16:05,730 --> 00:16:09,890
and you can still reach it and along

417
00:16:07,680 --> 00:16:14,489
those same lines the wayback machine

418
00:16:09,890 --> 00:16:16,920
archive.org go search for your site in

419
00:16:14,490 --> 00:16:20,070
archive.org and look for the old things

420
00:16:16,920 --> 00:16:22,260
that are out there again you will find

421
00:16:20,070 --> 00:16:24,420
code that was put out there for

422
00:16:22,260 --> 00:16:26,510
debugging purposes that was left over

423
00:16:24,420 --> 00:16:28,829
from an upgrade that hasn't been removed

424
00:16:26,510 --> 00:16:30,600
you will find that indexed in search

425
00:16:28,830 --> 00:16:32,100
engines you won't find it if you're

426
00:16:30,600 --> 00:16:34,530
navigating through the application like

427
00:16:32,100 --> 00:16:37,470
a normal user but it's still there so

428
00:16:34,530 --> 00:16:39,480
take a look at those things I mentioned

429
00:16:37,470 --> 00:16:43,770
that I was going to tell you about derp

430
00:16:39,480 --> 00:16:45,660
busting so I like to use go buster

431
00:16:43,770 --> 00:16:49,230
because it's fast I can do a lot of

432
00:16:45,660 --> 00:16:51,150
threads the downside go Buster is not

433
00:16:49,230 --> 00:16:52,650
recursive so if it identifies five

434
00:16:51,150 --> 00:16:54,030
directories it's going to tell you that

435
00:16:52,650 --> 00:16:54,959
there's five directories but it's not

436
00:16:54,030 --> 00:16:56,370
going to do anything more you have to

437
00:16:54,960 --> 00:16:59,240
manually go test every one of those

438
00:16:56,370 --> 00:17:03,230
that's something where derby will

439
00:16:59,240 --> 00:17:05,760
recurse derp search will also recurse

440
00:17:03,230 --> 00:17:09,180
I've heard good things about derp search

441
00:17:05,760 --> 00:17:11,400
I've found it to be I need to do more

442
00:17:09,180 --> 00:17:13,530
testing I'll say that much I'm not sure

443
00:17:11,400 --> 00:17:15,840
that it's finding the things that need

444
00:17:13,530 --> 00:17:21,420
to be there but I encourage you to get

445
00:17:15,839 --> 00:17:23,010
familiar with the different tools so if

446
00:17:21,420 --> 00:17:25,290
you're not familiar with derp busting

447
00:17:23,010 --> 00:17:27,629
what you're doing is using a tool in

448
00:17:25,290 --> 00:17:29,909
taking a word list and basically

449
00:17:27,630 --> 00:17:32,550
requesting every one of those words in

450
00:17:29,910 --> 00:17:34,500
the word list and looking to see does it

451
00:17:32,550 --> 00:17:37,649
exist on the server or not so it's a way

452
00:17:34,500 --> 00:17:39,930
to identify content initially it's going

453
00:17:37,650 --> 00:17:43,320
to be directories until you start adding

454
00:17:39,930 --> 00:17:46,710
certain file extensions on there and the

455
00:17:43,320 --> 00:17:47,909
way that it tells if something is on the

456
00:17:46,710 --> 00:17:50,940
server is

457
00:17:47,910 --> 00:17:53,370
the status codes so with go Buster you

458
00:17:50,940 --> 00:17:55,860
can use tack s and you're gonna give it

459
00:17:53,370 --> 00:17:58,199
the status codes that we represent a

460
00:17:55,860 --> 00:17:59,969
successful hit but if you're working on

461
00:17:58,200 --> 00:18:02,250
a site that has some type of content

462
00:17:59,970 --> 00:18:04,620
management system a lot of times they

463
00:18:02,250 --> 00:18:08,250
will wild-card results for anything that

464
00:18:04,620 --> 00:18:11,639
doesn't exist - a common error page so

465
00:18:08,250 --> 00:18:13,890
you'll see a 301 or 302 to that page so

466
00:18:11,640 --> 00:18:15,600
now everything the scanner requests is

467
00:18:13,890 --> 00:18:16,800
going to come back with 302 said it

468
00:18:15,600 --> 00:18:18,570
thinks that every single thing it

469
00:18:16,800 --> 00:18:22,470
requested looks like it's on the server

470
00:18:18,570 --> 00:18:23,850
so you can tune that out with - yes you

471
00:18:22,470 --> 00:18:26,520
need to provide a word list otherwise

472
00:18:23,850 --> 00:18:30,060
it's not going to do anything I like to

473
00:18:26,520 --> 00:18:34,290
use the der buster directory list 2.3

474
00:18:30,060 --> 00:18:37,440
medium or lowercase 2.3 medium both are

475
00:18:34,290 --> 00:18:38,780
good lists they're not they're big but

476
00:18:37,440 --> 00:18:41,340
they're a lot bigger words out there

477
00:18:38,780 --> 00:18:44,610
they're a good trade-off between time

478
00:18:41,340 --> 00:18:46,350
and thoroughness but there are some

479
00:18:44,610 --> 00:18:47,939
other word lists I would encourage you

480
00:18:46,350 --> 00:18:48,929
to check out there's guy by the name of

481
00:18:47,940 --> 00:18:50,400
Daniel Mueller

482
00:18:48,930 --> 00:18:53,160
he's got something called robots

483
00:18:50,400 --> 00:18:54,750
disallowed what it is he went out to the

484
00:18:53,160 --> 00:18:58,740
Alexa top 1 million sites and he

485
00:18:54,750 --> 00:19:00,900
analyzed the robots.txt files and then

486
00:18:58,740 --> 00:19:03,450
basically sorted them what are the most

487
00:19:00,900 --> 00:19:05,340
common things that are out there so

488
00:19:03,450 --> 00:19:07,770
that's gonna help you find default or

489
00:19:05,340 --> 00:19:09,689
find content on your server that may not

490
00:19:07,770 --> 00:19:13,260
be linked lots of times that things like

491
00:19:09,690 --> 00:19:15,090
admin panels some of the wordpress kind

492
00:19:13,260 --> 00:19:17,160
of content things that you don't hit

493
00:19:15,090 --> 00:19:19,740
unless you're an authenticated wordpress

494
00:19:17,160 --> 00:19:21,540
user but you're good it's going to help

495
00:19:19,740 --> 00:19:23,640
you find content that you may not find

496
00:19:21,540 --> 00:19:27,149
otherwise from within the application

497
00:19:23,640 --> 00:19:29,730
and along those same lines he also has

498
00:19:27,150 --> 00:19:31,920
sec lists and he's got discovery web

499
00:19:29,730 --> 00:19:35,100
content and that'll help you find

500
00:19:31,920 --> 00:19:36,900
specific technology specific word lists

501
00:19:35,100 --> 00:19:40,469
like let's say you encounter a lotus

502
00:19:36,900 --> 00:19:42,180
domino server they do exist what are the

503
00:19:40,470 --> 00:19:44,220
common things that are on a lotus domino

504
00:19:42,180 --> 00:19:46,470
server there is Lotus Domino word list

505
00:19:44,220 --> 00:19:48,870
so now I can look for certain kinds of

506
00:19:46,470 --> 00:19:51,750
things that might be on a domino server

507
00:19:48,870 --> 00:19:54,060
that are default content like Tomcat

508
00:19:51,750 --> 00:19:55,860
manager right we all know that on older

509
00:19:54,060 --> 00:19:57,240
tomcat servers are some of us know that

510
00:19:55,860 --> 00:19:59,709
on older tomcat servers you had the

511
00:19:57,240 --> 00:20:01,390
manager and if the manager

512
00:19:59,710 --> 00:20:03,580
was installed and they hadn't changed

513
00:20:01,390 --> 00:20:05,200
the passwords boom you're a tomcat admin

514
00:20:03,580 --> 00:20:06,520
it's kind of the same thing with Domino

515
00:20:05,200 --> 00:20:10,720
and other technologies these are the

516
00:20:06,520 --> 00:20:13,090
word list to help you find that check

517
00:20:10,720 --> 00:20:16,200
for file extensions cuz up at this point

518
00:20:13,090 --> 00:20:19,029
we've only been checking for directories

519
00:20:16,200 --> 00:20:22,120
now of course if say you're on an is

520
00:20:19,029 --> 00:20:25,419
server you can look for dot aspx or a sh

521
00:20:22,120 --> 00:20:27,340
ax or dot asp but you might also want to

522
00:20:25,419 --> 00:20:28,630
look for things that are left around as

523
00:20:27,340 --> 00:20:32,439
part of your troubleshooting

524
00:20:28,630 --> 00:20:35,830
installation or backup processes so dot

525
00:20:32,440 --> 00:20:40,000
back dot txt dot log you can add those

526
00:20:35,830 --> 00:20:42,549
file extensions here and your dur

527
00:20:40,000 --> 00:20:45,309
busting script is going to add a request

528
00:20:42,549 --> 00:20:48,639
so if it looks for a slash foo it'll

529
00:20:45,309 --> 00:20:51,190
also look for slash food text slash food

530
00:20:48,640 --> 00:20:53,230
back things like that and you will find

531
00:20:51,190 --> 00:20:55,659
content that's left around as part of

532
00:20:53,230 --> 00:20:59,649
troubleshooting installation dot log is

533
00:20:55,659 --> 00:21:01,870
a good one for that getting a look at

534
00:20:59,649 --> 00:21:04,059
websites with different user agents can

535
00:21:01,870 --> 00:21:07,090
be helpful the app may perform

536
00:21:04,059 --> 00:21:09,490
completely differently when you look at

537
00:21:07,090 --> 00:21:11,529
it with a mobile user agent versus a

538
00:21:09,490 --> 00:21:15,279
desktop browser user agent and

539
00:21:11,529 --> 00:21:18,820
frequently has less security than what's

540
00:21:15,279 --> 00:21:20,500
in the full desktop version of the

541
00:21:18,820 --> 00:21:23,980
application I don't know why that is

542
00:21:20,500 --> 00:21:25,720
but that does happen and pay attention

543
00:21:23,980 --> 00:21:28,690
to your status codes again if you get

544
00:21:25,720 --> 00:21:31,240
401 403 that means it exists but you

545
00:21:28,690 --> 00:21:33,399
can't have it if you get a 500 it means

546
00:21:31,240 --> 00:21:34,750
it probably exists but you screwed up or

547
00:21:33,399 --> 00:21:36,699
the server screwed up depending on how

548
00:21:34,750 --> 00:21:39,000
you want to interpret it but it might

549
00:21:36,700 --> 00:21:42,880
mean that the resource is there so you

550
00:21:39,000 --> 00:21:45,610
you request my server comm slash fubar

551
00:21:42,880 --> 00:21:47,289
and it gives you a 500 what that means

552
00:21:45,610 --> 00:21:50,020
is that either something's broken on the

553
00:21:47,289 --> 00:21:52,750
server or maybe you requested that with

554
00:21:50,020 --> 00:21:55,690
a get request in it only serves content

555
00:21:52,750 --> 00:21:57,789
when you do a post request or when you

556
00:21:55,690 --> 00:21:59,559
start getting into api's it may only

557
00:21:57,789 --> 00:22:01,990
work with put or delete

558
00:21:59,559 --> 00:22:03,820
so that's something where understanding

559
00:22:01,990 --> 00:22:05,710
what the status codes are telling it

560
00:22:03,820 --> 00:22:11,740
will help you understand what's on the

561
00:22:05,710 --> 00:22:13,360
server so effective enumeration when I

562
00:22:11,740 --> 00:22:16,390
am enumerated an applicant

563
00:22:13,360 --> 00:22:18,040
before I ever run any automated process

564
00:22:16,390 --> 00:22:20,020
whether it's a scanner

565
00:22:18,040 --> 00:22:22,928
it's a crawler doing any kind of

566
00:22:20,020 --> 00:22:24,370
automated checks I manually I try to

567
00:22:22,929 --> 00:22:28,179
manually map out the entire application

568
00:22:24,370 --> 00:22:29,649
and I do that by first running I

569
00:22:28,179 --> 00:22:31,870
shouldn't say that that's a lie

570
00:22:29,650 --> 00:22:33,970
I ran automated enumeration things out

571
00:22:31,870 --> 00:22:36,100
front like nikto and derp buster and

572
00:22:33,970 --> 00:22:38,380
things like that but I'm not gonna run

573
00:22:36,100 --> 00:22:40,439
the burps crawler I'm not gonna run any

574
00:22:38,380 --> 00:22:43,420
burps scans or anything else like that

575
00:22:40,440 --> 00:22:45,520
I'm gonna have my proxy open I'm gonna

576
00:22:43,420 --> 00:22:47,020
feed all my traffic through my proxy

577
00:22:45,520 --> 00:22:49,480
whether you're using Berbers app or

578
00:22:47,020 --> 00:22:51,639
something else and I'm gonna click on

579
00:22:49,480 --> 00:22:54,370
every link I'm gonna submit every form

580
00:22:51,640 --> 00:22:56,830
I'm gonna do that both unauthenticated

581
00:22:54,370 --> 00:22:58,479
and authenticated if there's multiple

582
00:22:56,830 --> 00:23:00,189
roles I want to understand what's

583
00:22:58,480 --> 00:23:04,240
different between the different roles

584
00:23:00,190 --> 00:23:07,360
they may have different capabilities and

585
00:23:04,240 --> 00:23:09,160
I'm looking for things that seem

586
00:23:07,360 --> 00:23:10,719
interesting I'm gonna make a note of

587
00:23:09,160 --> 00:23:12,130
those I usually keep that in like a 1

588
00:23:10,720 --> 00:23:14,140
note these are things that I need to

589
00:23:12,130 --> 00:23:15,400
circle back to those maybe the

590
00:23:14,140 --> 00:23:17,380
rabbit-hole said I was talking about

591
00:23:15,400 --> 00:23:19,330
earlier but I'm not gonna go down them

592
00:23:17,380 --> 00:23:21,130
yet I want to take a look at all the

593
00:23:19,330 --> 00:23:24,490
rabbit holes and look at which ones I

594
00:23:21,130 --> 00:23:26,320
feel are the most likely and then I'm

595
00:23:24,490 --> 00:23:28,540
also looking for things like logout

596
00:23:26,320 --> 00:23:29,980
links and they may not be called logout

597
00:23:28,540 --> 00:23:32,950
especially if you're dealing with an app

598
00:23:29,980 --> 00:23:34,240
in another another language I'm looking

599
00:23:32,950 --> 00:23:36,820
for things that have the ability to

600
00:23:34,240 --> 00:23:39,580
modify or delete data because I don't

601
00:23:36,820 --> 00:23:41,620
want any automated process tampering

602
00:23:39,580 --> 00:23:43,899
with application data until I know

603
00:23:41,620 --> 00:23:48,520
exactly what's going to happen and there

604
00:23:43,900 --> 00:23:50,799
will be a story about that so one of the

605
00:23:48,520 --> 00:23:52,090
things submitting forms certain things

606
00:23:50,799 --> 00:23:53,580
are gonna be straightforward oh that's a

607
00:23:52,090 --> 00:23:56,439
phone number oh that's an email address

608
00:23:53,580 --> 00:23:58,030
with that large financial application

609
00:23:56,440 --> 00:23:59,740
there were certain things I'm not a

610
00:23:58,030 --> 00:24:02,168
finance person I don't know what some of

611
00:23:59,740 --> 00:24:03,640
those terms mean or maybe it's looking

612
00:24:02,169 --> 00:24:05,950
for account numbers and if you don't

613
00:24:03,640 --> 00:24:07,480
have an a valid account number you can't

614
00:24:05,950 --> 00:24:08,650
get to the next step like okay what's

615
00:24:07,480 --> 00:24:10,809
the account number you want to work with

616
00:24:08,650 --> 00:24:12,730
if I don't have a valid account number I

617
00:24:10,809 --> 00:24:14,049
can never get to the other things that I

618
00:24:12,730 --> 00:24:18,340
want to work with so all I've done is

619
00:24:14,049 --> 00:24:19,990
tested the account numbers search that's

620
00:24:18,340 --> 00:24:22,149
we're working with the client to get

621
00:24:19,990 --> 00:24:25,330
what's called a good data dictionary or

622
00:24:22,150 --> 00:24:26,830
a script so if we go back to that large

623
00:24:25,330 --> 00:24:27,059
financial application that was telling

624
00:24:26,830 --> 00:24:29,668
you

625
00:24:27,059 --> 00:24:32,460
about for every thing that we tested we

626
00:24:29,669 --> 00:24:35,429
had a script that told us go here click

627
00:24:32,460 --> 00:24:37,230
on this button check this box put this

628
00:24:35,429 --> 00:24:39,389
data in this field put this data in this

629
00:24:37,230 --> 00:24:41,730
field put this data here click Next and

630
00:24:39,389 --> 00:24:44,189
so on and so forth and that way I could

631
00:24:41,730 --> 00:24:46,289
fully exercise all of the logic in the

632
00:24:44,190 --> 00:24:48,720
application instead of just the initial

633
00:24:46,289 --> 00:24:50,759
form I'm able to get all the way through

634
00:24:48,720 --> 00:24:52,470
it and I have good data to help me

635
00:24:50,759 --> 00:24:53,610
understand all the way through the

636
00:24:52,470 --> 00:24:56,009
process because there may be

637
00:24:53,610 --> 00:24:58,139
vulnerabilities in step three or four of

638
00:24:56,009 --> 00:25:00,809
a process but if you can't get there

639
00:24:58,139 --> 00:25:02,158
you'll never find them so work with your

640
00:25:00,809 --> 00:25:07,019
client to get a good date data

641
00:25:02,159 --> 00:25:10,379
dictionary now at this point you can run

642
00:25:07,019 --> 00:25:12,240
the crawler run your automated scans but

643
00:25:10,379 --> 00:25:15,240
make sure you have looked for things

644
00:25:12,240 --> 00:25:17,279
like logout modify and delete so if

645
00:25:15,240 --> 00:25:19,110
you're using burper zap or whatever put

646
00:25:17,279 --> 00:25:22,230
those in your exclusions list to make

647
00:25:19,110 --> 00:25:25,110
sure that you don't send data to those

648
00:25:22,230 --> 00:25:27,809
specific kinds of links and sometimes

649
00:25:25,110 --> 00:25:30,209
it's based on a regex if it's imagine

650
00:25:27,809 --> 00:25:34,049
you have some type of URL that says you

651
00:25:30,210 --> 00:25:36,720
know foo and delete equals one you know

652
00:25:34,049 --> 00:25:38,879
so we're gonna delete foo this is

653
00:25:36,720 --> 00:25:41,759
important to map this out because what

654
00:25:38,879 --> 00:25:43,529
happens if you don't you could have an

655
00:25:41,759 --> 00:25:45,720
experience like I had I know I can't

656
00:25:43,529 --> 00:25:51,299
claim that I did it because I didn't my

657
00:25:45,720 --> 00:25:53,009
coworker did it but I was there and we

658
00:25:51,299 --> 00:25:54,929
had developers come to us they wanted us

659
00:25:53,009 --> 00:25:56,700
to test an application and the easiest

660
00:25:54,929 --> 00:25:58,980
way to describe it is it's a bookmarking

661
00:25:56,700 --> 00:26:00,600
application the developers could go in

662
00:25:58,980 --> 00:26:02,999
add a link to a resource add a

663
00:26:00,600 --> 00:26:04,320
description and then the whole team

664
00:26:02,999 --> 00:26:07,350
could use it it's kind of like a wiki

665
00:26:04,320 --> 00:26:09,029
and it had the ability to add and modify

666
00:26:07,350 --> 00:26:12,178
and of course it had the ability to

667
00:26:09,029 --> 00:26:14,399
delete now they knew they didn't want us

668
00:26:12,179 --> 00:26:17,940
deleting the data out of the application

669
00:26:14,399 --> 00:26:21,539
so they helpfully removed the ability to

670
00:26:17,940 --> 00:26:22,950
delete the application and the way that

671
00:26:21,539 --> 00:26:24,869
looked is that if you looked in the

672
00:26:22,950 --> 00:26:27,809
source code you would see that all the

673
00:26:24,869 --> 00:26:29,309
delete links were commented out now if

674
00:26:27,809 --> 00:26:31,080
you're doing manual testing and you're

675
00:26:29,309 --> 00:26:33,450
looking in the responses looking at the

676
00:26:31,080 --> 00:26:35,279
source you will see a commented out

677
00:26:33,450 --> 00:26:37,080
delete link and if you've ever used a

678
00:26:35,279 --> 00:26:37,870
good crawler you know that it will find

679
00:26:37,080 --> 00:26:39,790
those things

680
00:26:37,870 --> 00:26:42,429
and it's like home there is a resource

681
00:26:39,790 --> 00:26:43,960
that I need to go investigate well if

682
00:26:42,430 --> 00:26:46,420
your delete function doesn't have any

683
00:26:43,960 --> 00:26:47,980
kind of confirmation step or even if it

684
00:26:46,420 --> 00:26:49,930
does the crawler is probably going to

685
00:26:47,980 --> 00:26:53,200
click whatever button it can find what

686
00:26:49,930 --> 00:26:55,930
happens you delete data so we asked do

687
00:26:53,200 --> 00:26:58,780
you have backups yes have you tested

688
00:26:55,930 --> 00:27:01,000
your backups yes ok that was in the

689
00:26:58,780 --> 00:27:02,379
scoping process now comes for the day of

690
00:27:01,000 --> 00:27:03,880
the test we asked them we're about to

691
00:27:02,380 --> 00:27:06,460
hit the big red button do you have

692
00:27:03,880 --> 00:27:09,280
backups yes have you tested your backups

693
00:27:06,460 --> 00:27:11,890
yes all right we hit the button it

694
00:27:09,280 --> 00:27:13,000
starts within 60 seconds there's the

695
00:27:11,890 --> 00:27:15,040
developer running down the hall

696
00:27:13,000 --> 00:27:19,600
screaming stop stop what you're doing

697
00:27:15,040 --> 00:27:21,850
stop the crawler helpfully visited every

698
00:27:19,600 --> 00:27:25,030
delete link and they did not have

699
00:27:21,850 --> 00:27:26,620
backups so at that point we had deleted

700
00:27:25,030 --> 00:27:29,860
almost all the data in the application

701
00:27:26,620 --> 00:27:32,139
and they couldn't recover it now part of

702
00:27:29,860 --> 00:27:34,659
that's on us right part of that that's

703
00:27:32,140 --> 00:27:36,820
on us is the security team we ran a tool

704
00:27:34,660 --> 00:27:40,059
that did something we didn't understand

705
00:27:36,820 --> 00:27:42,010
and had bad outcome as a result of that

706
00:27:40,059 --> 00:27:43,780
and I wanted to make sure that never

707
00:27:42,010 --> 00:27:45,490
happened to me again I didn't know how

708
00:27:43,780 --> 00:27:47,830
to prevent it but I wanted to make sure

709
00:27:45,490 --> 00:27:50,950
it never happened to me again so I asked

710
00:27:47,830 --> 00:27:54,580
for some training and I got a chance to

711
00:27:50,950 --> 00:27:56,559
go to sans I took SEK 542 their web app

712
00:27:54,580 --> 00:28:00,460
pentesting course from Kevin Johnson

713
00:27:56,559 --> 00:28:02,889
secure ideas and I learned some

714
00:28:00,460 --> 00:28:04,660
technical things in there but the most

715
00:28:02,890 --> 00:28:07,809
important things I learned were about

716
00:28:04,660 --> 00:28:10,480
the methodology of testing things like

717
00:28:07,809 --> 00:28:11,980
always visiting every link in the

718
00:28:10,480 --> 00:28:13,420
application and notifying if there's

719
00:28:11,980 --> 00:28:16,420
anything that's going to blow something

720
00:28:13,420 --> 00:28:19,690
up if we use it in a manner that we

721
00:28:16,420 --> 00:28:21,400
don't understand or just some things are

722
00:28:19,690 --> 00:28:23,530
going to do irreversible damage and you

723
00:28:21,400 --> 00:28:25,120
need to test them but you don't want

724
00:28:23,530 --> 00:28:26,800
that to happen to you the first thing in

725
00:28:25,120 --> 00:28:31,360
the test because now you can't work with

726
00:28:26,800 --> 00:28:34,480
that data or that function another thing

727
00:28:31,360 --> 00:28:36,250
that Kevin taught me was that always

728
00:28:34,480 --> 00:28:38,140
have two windows open when you're doing

729
00:28:36,250 --> 00:28:42,040
testing one is your browser one is your

730
00:28:38,140 --> 00:28:44,620
proxy and honestly the only thing that I

731
00:28:42,040 --> 00:28:46,960
use a browser for is to drive traffic to

732
00:28:44,620 --> 00:28:50,020
the proxy I spend the majority of my web

733
00:28:46,960 --> 00:28:50,490
app testing time looking at the request

734
00:28:50,020 --> 00:28:52,410
and the

735
00:28:50,490 --> 00:28:54,120
response in the proxy I'm only clicking

736
00:28:52,410 --> 00:28:56,250
in the browser to get the traffic there

737
00:28:54,120 --> 00:28:58,260
and then sometimes doing visual

738
00:28:56,250 --> 00:28:59,760
comparison of things to see did

739
00:28:58,260 --> 00:29:01,580
something change as a result of what I

740
00:28:59,760 --> 00:29:04,050
did

741
00:29:01,580 --> 00:29:05,850
but I'm looking in the request to see

742
00:29:04,050 --> 00:29:06,990
what kind of parameters are there are

743
00:29:05,850 --> 00:29:10,169
there parameters that are happening

744
00:29:06,990 --> 00:29:11,880
behind the scene that aren't apparent

745
00:29:10,170 --> 00:29:14,250
from what's happening on the page and

746
00:29:11,880 --> 00:29:15,990
you start realizing that there's common

747
00:29:14,250 --> 00:29:18,030
parameters through certain kinds of

748
00:29:15,990 --> 00:29:19,500
functions so now you can understand that

749
00:29:18,030 --> 00:29:21,450
functions might be related because

750
00:29:19,500 --> 00:29:24,090
you're using this certain parameter

751
00:29:21,450 --> 00:29:25,650
everywhere you're looking to see what

752
00:29:24,090 --> 00:29:26,220
kind of data is being passed back and

753
00:29:25,650 --> 00:29:28,230
forth

754
00:29:26,220 --> 00:29:29,970
oh there's hidden form fields you don't

755
00:29:28,230 --> 00:29:33,000
see those but those hidden form fields

756
00:29:29,970 --> 00:29:35,190
sometimes have very large impact if

757
00:29:33,000 --> 00:29:36,990
you're able to manipulate them and I'm

758
00:29:35,190 --> 00:29:39,330
looking in the responses to see what's

759
00:29:36,990 --> 00:29:42,420
in the response had I been doing this

760
00:29:39,330 --> 00:29:43,889
back when we ran that previous test

761
00:29:42,420 --> 00:29:45,720
early on in my career and deleted

762
00:29:43,890 --> 00:29:47,700
everything I would have seen that the

763
00:29:45,720 --> 00:29:50,520
delete links weren't removed they were

764
00:29:47,700 --> 00:29:53,340
just commented out I would have seen

765
00:29:50,520 --> 00:29:54,990
that I probably would have known at that

766
00:29:53,340 --> 00:29:57,889
point that the crawler would identify it

767
00:29:54,990 --> 00:30:00,720
although another reason that I manually

768
00:29:57,890 --> 00:30:03,210
follow every link and I look at all the

769
00:30:00,720 --> 00:30:05,940
responses is because the crawlers do not

770
00:30:03,210 --> 00:30:08,429
find everything all the time they are

771
00:30:05,940 --> 00:30:11,370
going to miss things follow tim tomes

772
00:30:08,429 --> 00:30:13,290
Landmaster 53 on twitter and he will

773
00:30:11,370 --> 00:30:15,270
tell different times about you know

774
00:30:13,290 --> 00:30:17,940
testing with the new version of burp say

775
00:30:15,270 --> 00:30:20,340
burp 2.0 it's it's missing some things

776
00:30:17,940 --> 00:30:23,010
and if you make assumptions about what

777
00:30:20,340 --> 00:30:24,990
it's going to do you're going to miss

778
00:30:23,010 --> 00:30:27,510
things in your testing because the

779
00:30:24,990 --> 00:30:28,679
crawler will not find certain kinds of

780
00:30:27,510 --> 00:30:32,940
things so that's something you need to

781
00:30:28,679 --> 00:30:35,400
be aware of so we've reviewed every

782
00:30:32,940 --> 00:30:38,340
response making note of anything that's

783
00:30:35,400 --> 00:30:40,890
out of the ordinary always be enumerated

784
00:30:38,340 --> 00:30:42,600
so as you're doing your crawling or

785
00:30:40,890 --> 00:30:43,920
navigating through the application

786
00:30:42,600 --> 00:30:46,559
you're gonna come across the directory

787
00:30:43,920 --> 00:30:48,510
that your word list probably didn't

788
00:30:46,559 --> 00:30:50,010
cover and so you didn't find it in your

789
00:30:48,510 --> 00:30:51,540
deer busting if you find a directory

790
00:30:50,010 --> 00:30:53,760
that's not in your results of your der

791
00:30:51,540 --> 00:30:55,649
busting feed that back into your deer

792
00:30:53,760 --> 00:30:57,870
busting start up another deer buster run

793
00:30:55,650 --> 00:30:59,700
on that directory and see is there any

794
00:30:57,870 --> 00:31:02,030
more content underneath that that you

795
00:30:59,700 --> 00:31:02,030
can identify

796
00:31:02,620 --> 00:31:10,659
always enumerated in the background

797
00:31:04,760 --> 00:31:14,240
while you're doing your manual work so

798
00:31:10,660 --> 00:31:15,560
let's see where am I supposed to tell

799
00:31:14,240 --> 00:31:16,190
you about something I'm supposed to tell

800
00:31:15,560 --> 00:31:17,540
you about something

801
00:31:16,190 --> 00:31:20,630
yes I'm supposed to tell you about this

802
00:31:17,540 --> 00:31:23,090
on this page sorry why am I always

803
00:31:20,630 --> 00:31:29,960
looking in the responses to see what's

804
00:31:23,090 --> 00:31:33,379
there I will tell you I'm testing an

805
00:31:29,960 --> 00:31:38,210
application that has has admin and user

806
00:31:33,380 --> 00:31:41,540
roles and I have user credentials and at

807
00:31:38,210 --> 00:31:43,910
first rush it looks like a normal app I

808
00:31:41,540 --> 00:31:47,180
mean I'm a user I can look at some

809
00:31:43,910 --> 00:31:48,800
products I can add a product to my order

810
00:31:47,180 --> 00:31:51,710
and then I can have it shipped to my

811
00:31:48,800 --> 00:31:54,590
business unit like promotional material

812
00:31:51,710 --> 00:31:56,390
kind of things for the company had other

813
00:31:54,590 --> 00:31:59,300
functions as well but that's basically

814
00:31:56,390 --> 00:32:02,960
what the user could do now relying on a

815
00:31:59,300 --> 00:32:05,180
user browser that's all I see that's all

816
00:32:02,960 --> 00:32:10,300
I'm seeing in the browser and I did a

817
00:32:05,180 --> 00:32:12,860
crawl with the burp crawler the spider

818
00:32:10,300 --> 00:32:15,379
it did not find anything that looked

819
00:32:12,860 --> 00:32:18,709
like admin functionality but because I'm

820
00:32:15,380 --> 00:32:22,220
looking in the responses I see there's

821
00:32:18,710 --> 00:32:24,470
some JavaScript that basically has admin

822
00:32:22,220 --> 00:32:29,690
functions it's literally called admin

823
00:32:24,470 --> 00:32:33,100
add user admin modify user admin delete

824
00:32:29,690 --> 00:32:35,780
user admin add product things like that

825
00:32:33,100 --> 00:32:37,939
those are in there but I don't see them

826
00:32:35,780 --> 00:32:39,950
on the page because I'm not an admin so

827
00:32:37,940 --> 00:32:41,480
I start understanding like why is this

828
00:32:39,950 --> 00:32:43,040
happening well they set a cookie when

829
00:32:41,480 --> 00:32:45,140
you log in that says whether or not

830
00:32:43,040 --> 00:32:46,700
you're a user or an admin and then the

831
00:32:45,140 --> 00:32:48,590
JavaScript looks at the cookie and goes

832
00:32:46,700 --> 00:32:52,460
oh you've got an admin cookie

833
00:32:48,590 --> 00:32:54,740
I will give you admin access and now

834
00:32:52,460 --> 00:32:58,130
that I know this I can just make myself

835
00:32:54,740 --> 00:33:00,620
an admin by adding the cookie or I can

836
00:32:58,130 --> 00:33:04,550
just request that link directly let's go

837
00:33:00,620 --> 00:33:06,949
to admin add user if the application is

838
00:33:04,550 --> 00:33:09,770
relying completely on client-side

839
00:33:06,950 --> 00:33:11,390
authorization or client-side scripts to

840
00:33:09,770 --> 00:33:13,070
determine whether or not the user is

841
00:33:11,390 --> 00:33:14,990
authorized to do something I will always

842
00:33:13,070 --> 00:33:16,550
win because I'm the

843
00:33:14,990 --> 00:33:18,410
and I'm determining that I want to be an

844
00:33:16,550 --> 00:33:20,720
admin and that's what I did here the app

845
00:33:18,410 --> 00:33:23,270
it's total authentication or

846
00:33:20,720 --> 00:33:25,100
authorization process was let's use some

847
00:33:23,270 --> 00:33:27,530
JavaScript in a cookie to not tell

848
00:33:25,100 --> 00:33:29,840
people about admin and because I was

849
00:33:27,530 --> 00:33:31,940
looking in the responses I was able to

850
00:33:29,840 --> 00:33:33,970
find the admin functionality and take

851
00:33:31,940 --> 00:33:36,290
complete control of the application

852
00:33:33,970 --> 00:33:38,510
because I was looking in the responses

853
00:33:36,290 --> 00:33:40,490
cuz burp spider did not find that for me

854
00:33:38,510 --> 00:33:44,690
that's the importance of looking at

855
00:33:40,490 --> 00:33:47,270
those responses so crawling

856
00:33:44,690 --> 00:33:48,740
considerations did you exclude sensitive

857
00:33:47,270 --> 00:33:52,490
functions so you don't blow up your

858
00:33:48,740 --> 00:33:54,320
customers application burp spider can be

859
00:33:52,490 --> 00:33:56,210
useful if you understand that it has

860
00:33:54,320 --> 00:33:58,280
some limitations and there's things you

861
00:33:56,210 --> 00:34:00,230
need to know about don't go around Peter

862
00:33:58,280 --> 00:34:01,610
when Turing your client it's better now

863
00:34:00,230 --> 00:34:04,220
than it was a few years ago when you've

864
00:34:01,610 --> 00:34:06,439
been Peter we Turing your client because

865
00:34:04,220 --> 00:34:08,810
the default values in burps form

866
00:34:06,440 --> 00:34:10,940
submission was Peter Weiner from Weiner

867
00:34:08,810 --> 00:34:12,799
Ville Wisconsin it's now been changed to

868
00:34:10,940 --> 00:34:16,429
Peter winter from winterville Wisconsin

869
00:34:12,800 --> 00:34:18,770
with winter bill consulting on one Main

870
00:34:16,429 --> 00:34:19,129
Street winterville Wisconsin blah blah

871
00:34:18,770 --> 00:34:21,859
blah

872
00:34:19,129 --> 00:34:23,029
it has default values so you need to

873
00:34:21,859 --> 00:34:27,168
make sure that you're putting in the

874
00:34:23,030 --> 00:34:30,020
right values if you're going to use form

875
00:34:27,168 --> 00:34:32,690
submission if you're subcontracting this

876
00:34:30,020 --> 00:34:34,550
is especially important to put the right

877
00:34:32,690 --> 00:34:37,159
name of the company you're subbing for

878
00:34:34,550 --> 00:34:39,290
rather than your company if it hasn't

879
00:34:37,159 --> 00:34:41,119
been disclosed that you are a

880
00:34:39,290 --> 00:34:43,460
subcontractor to the client because all

881
00:34:41,119 --> 00:34:44,869
of sudden they're like who's red seeds

882
00:34:43,460 --> 00:34:47,659
why are they testing our application

883
00:34:44,869 --> 00:34:49,010
they're not authorized so make sure that

884
00:34:47,659 --> 00:34:53,750
you're checking that those kinds of

885
00:34:49,010 --> 00:34:57,710
things the discover content tool in burp

886
00:34:53,750 --> 00:35:00,830
is amazing and cursed because it will

887
00:34:57,710 --> 00:35:05,600
find all kinds of things it's kind of

888
00:35:00,830 --> 00:35:08,690
like a gigantic der Buster + crawler + I

889
00:35:05,600 --> 00:35:10,368
don't know what kind of magic but it

890
00:35:08,690 --> 00:35:11,690
takes forever to run it'll find all

891
00:35:10,369 --> 00:35:14,359
kinds of things if you have a long time

892
00:35:11,690 --> 00:35:18,590
to let it run but it will also take

893
00:35:14,359 --> 00:35:22,119
forever to run so know that that tool is

894
00:35:18,590 --> 00:35:24,890
there and understand the implications I

895
00:35:22,119 --> 00:35:26,330
call this forced browsing originally

896
00:35:24,890 --> 00:35:28,759
it's more of an off bypass

897
00:35:26,330 --> 00:35:31,790
but if you can

898
00:35:28,760 --> 00:35:33,380
to access a URL on an application and

899
00:35:31,790 --> 00:35:35,960
you don't provide any authentication

900
00:35:33,380 --> 00:35:38,840
information such as session cookies if

901
00:35:35,960 --> 00:35:40,460
you can access it and you're allowed to

902
00:35:38,840 --> 00:35:42,620
have that content and it should normally

903
00:35:40,460 --> 00:35:44,930
be protected by authentication that's

904
00:35:42,620 --> 00:35:46,460
either forced browsing or authentication

905
00:35:44,930 --> 00:35:48,410
bypass depending on how you look at that

906
00:35:46,460 --> 00:35:49,760
the way you test for that is after

907
00:35:48,410 --> 00:35:52,190
you've fully mapped out your application

908
00:35:49,760 --> 00:35:54,140
and done your crawling all that you have

909
00:35:52,190 --> 00:35:57,320
a list of every URL in the application

910
00:35:54,140 --> 00:35:59,089
so going to burp you go to your target

911
00:35:57,320 --> 00:36:02,420
tab you right-click on your target and

912
00:35:59,090 --> 00:36:05,900
you say copy all URLs in host or in

913
00:36:02,420 --> 00:36:08,060
target it'll copy every URL paste that

914
00:36:05,900 --> 00:36:11,240
into a text file use something like curl

915
00:36:08,060 --> 00:36:13,400
with a simple for loop and just request

916
00:36:11,240 --> 00:36:14,930
every URL make sure that you're sending

917
00:36:13,400 --> 00:36:16,550
it through your proxy though like this

918
00:36:14,930 --> 00:36:19,910
is to send it through your local burp

919
00:36:16,550 --> 00:36:21,830
installation that will now use the

920
00:36:19,910 --> 00:36:23,629
script to request every URL on the

921
00:36:21,830 --> 00:36:25,040
application but you haven't provided any

922
00:36:23,630 --> 00:36:28,790
cookie values so there's no

923
00:36:25,040 --> 00:36:32,150
authentication there so after you do

924
00:36:28,790 --> 00:36:34,070
that go review every response and if the

925
00:36:32,150 --> 00:36:36,590
application gave you information that

926
00:36:34,070 --> 00:36:38,540
should have had authentication you've

927
00:36:36,590 --> 00:36:40,160
got forced browsing or off bypass so

928
00:36:38,540 --> 00:36:43,370
that's an easy way to test for that

929
00:36:40,160 --> 00:36:44,660
which before I was manually doing it

930
00:36:43,370 --> 00:36:46,009
with everything in repeater and

931
00:36:44,660 --> 00:36:47,660
stripping out cookies and I was like

932
00:36:46,010 --> 00:36:49,220
there wait there's a better way to do

933
00:36:47,660 --> 00:36:51,339
this and this is it this is how you do

934
00:36:49,220 --> 00:36:51,339
it

935
00:36:51,790 --> 00:37:00,200
tips and tricks with using burp so the

936
00:36:57,770 --> 00:37:02,300
intruder to target specific parameters

937
00:37:00,200 --> 00:37:04,009
for scanning how many people knew that

938
00:37:02,300 --> 00:37:05,540
you could use the intruder to do this

939
00:37:04,010 --> 00:37:07,580
you could kick off a scan from a tree to

940
00:37:05,540 --> 00:37:09,770
one person in the back yeah

941
00:37:07,580 --> 00:37:11,720
and before Tim tomes told me about this

942
00:37:09,770 --> 00:37:13,340
last year I had no idea he talked about

943
00:37:11,720 --> 00:37:14,600
it at his Derby con talk last year and I

944
00:37:13,340 --> 00:37:18,920
was like what is this magic you're

945
00:37:14,600 --> 00:37:21,170
talking about let's say you normally

946
00:37:18,920 --> 00:37:23,660
send something to the scanner in burp

947
00:37:21,170 --> 00:37:25,460
you would scan all of these parameters

948
00:37:23,660 --> 00:37:26,120
you know you'll be it'll be manipulating

949
00:37:25,460 --> 00:37:28,400
headers

950
00:37:26,120 --> 00:37:30,680
it'll manipulate every one of these

951
00:37:28,400 --> 00:37:33,620
parameters but you only want to test

952
00:37:30,680 --> 00:37:36,220
these two so you can use the burp

953
00:37:33,620 --> 00:37:38,690
intruder mark only those two parameters

954
00:37:36,220 --> 00:37:41,129
actively scan to find insertion points

955
00:37:38,690 --> 00:37:43,740
and now you are scanning only those

956
00:37:41,130 --> 00:37:45,210
to parameters instead of everything it's

957
00:37:43,740 --> 00:37:46,709
especially useful where if there's

958
00:37:45,210 --> 00:37:48,869
certain parameters they get manipulated

959
00:37:46,710 --> 00:37:54,720
the application logs you out destroys

960
00:37:48,869 --> 00:37:58,109
your session you can avoid that now you

961
00:37:54,720 --> 00:38:00,689
can rename tabs and repeater that is a

962
00:37:58,109 --> 00:38:02,759
and in other burp areas I use it mainly

963
00:38:00,690 --> 00:38:05,130
in repeater this is magic as well

964
00:38:02,759 --> 00:38:06,539
because before when I'm testing an app

965
00:38:05,130 --> 00:38:08,460
by the time I get done I might have a

966
00:38:06,539 --> 00:38:09,960
hundred different repeater tabs open for

967
00:38:08,460 --> 00:38:11,430
all the different things I've tested and

968
00:38:09,960 --> 00:38:13,829
they're just numbered and I don't know

969
00:38:11,430 --> 00:38:15,118
what they are so I have like a OneNote

970
00:38:13,829 --> 00:38:18,299
that is like there's cross-site

971
00:38:15,119 --> 00:38:21,059
scripting in tabs 27 43 and 55 and

972
00:38:18,299 --> 00:38:22,619
sequel injection in 63 I got to remember

973
00:38:21,059 --> 00:38:25,380
that and then hope I don't delete that

974
00:38:22,619 --> 00:38:27,269
tab accidentally we just renamed it

975
00:38:25,380 --> 00:38:30,000
there's another thing I learned from Tim

976
00:38:27,269 --> 00:38:31,769
and he accidentally double clicked on a

977
00:38:30,000 --> 00:38:33,509
tab name when he was trying to close the

978
00:38:31,769 --> 00:38:35,069
tab and he was like wait a second

979
00:38:33,509 --> 00:38:38,099
there's a cursor there it's because you

980
00:38:35,069 --> 00:38:41,160
can actually rename the tabs that was

981
00:38:38,099 --> 00:38:42,539
magic something that yeah right like

982
00:38:41,160 --> 00:38:44,640
when he did that I was like you've got

983
00:38:42,539 --> 00:38:47,759
to be kidding me I've been testing Web

984
00:38:44,640 --> 00:38:50,368
Apps for a long time that was amazing so

985
00:38:47,759 --> 00:38:54,359
you can do that you can use color coding

986
00:38:50,369 --> 00:38:56,549
in the proxy tab you can code all your

987
00:38:54,359 --> 00:38:57,869
requests based on what they are and what

988
00:38:56,549 --> 00:39:00,329
they mean to you if you want to have

989
00:38:57,869 --> 00:39:02,910
some type of organization system color

990
00:39:00,329 --> 00:39:05,250
coding can be really helpful save you a

991
00:39:02,910 --> 00:39:09,348
lot of time rather than trying to keep a

992
00:39:05,250 --> 00:39:11,849
notepad or OneNote or whatever it is

993
00:39:09,349 --> 00:39:14,579
there's also this concept of nested

994
00:39:11,849 --> 00:39:18,029
parameters I've seen this especially in

995
00:39:14,579 --> 00:39:22,890
s AP applications so no not s ap

996
00:39:18,029 --> 00:39:25,890
PeopleSoft it's no fun so let's take a

997
00:39:22,890 --> 00:39:27,930
look at this here I sent it to the

998
00:39:25,890 --> 00:39:30,470
intruder intruder automatically

999
00:39:27,930 --> 00:39:33,089
highlighted everything it wants to test

1000
00:39:30,470 --> 00:39:35,509
we've got you know regular parameter

1001
00:39:33,089 --> 00:39:38,578
equals true and nested parameter equals

1002
00:39:35,509 --> 00:39:39,079
as a bunch of stuff I don't know what

1003
00:39:38,579 --> 00:39:41,460
that is

1004
00:39:39,079 --> 00:39:43,589
at first you look at it's one parameter

1005
00:39:41,460 --> 00:39:45,029
burp thinks the whole thing is

1006
00:39:43,589 --> 00:39:47,038
highlighted because burp thinks that's

1007
00:39:45,029 --> 00:39:50,660
one parameter but what that actually is

1008
00:39:47,039 --> 00:39:54,240
is nine separate parameters one and

1009
00:39:50,660 --> 00:39:55,049
that's a pipe symbol it's as you were

1010
00:39:54,240 --> 00:39:57,180
all Nakota pipes

1011
00:39:55,050 --> 00:39:58,170
we got one two three four five six seven

1012
00:39:57,180 --> 00:40:00,089
eight nine there's actually nine

1013
00:39:58,170 --> 00:40:01,500
parameters in this one parameter but

1014
00:40:00,090 --> 00:40:03,120
burp only thinks it's one parameter

1015
00:40:01,500 --> 00:40:08,030
because it doesn't know what to do with

1016
00:40:03,120 --> 00:40:11,190
this again using the intruder we can

1017
00:40:08,030 --> 00:40:12,960
just clear out what it's selected and we

1018
00:40:11,190 --> 00:40:14,730
can manually select the individual

1019
00:40:12,960 --> 00:40:17,370
parameters that we want to manipulate so

1020
00:40:14,730 --> 00:40:19,860
if you run into something like this you

1021
00:40:17,370 --> 00:40:21,509
can flip only there are tests only those

1022
00:40:19,860 --> 00:40:23,730
specific parameters and in this case

1023
00:40:21,510 --> 00:40:24,930
this application treated every one of

1024
00:40:23,730 --> 00:40:27,930
those differently they had different

1025
00:40:24,930 --> 00:40:30,210
impacts I can now do scanning based on

1026
00:40:27,930 --> 00:40:34,410
that and target just those specific ones

1027
00:40:30,210 --> 00:40:35,880
so intruder can be a very powerful ally

1028
00:40:34,410 --> 00:40:39,500
if you know all the different things

1029
00:40:35,880 --> 00:40:45,240
that it can do which I'm still learning

1030
00:40:39,500 --> 00:40:48,750
I also got four tips and tricks using

1031
00:40:45,240 --> 00:40:51,180
macros to do session state if you've

1032
00:40:48,750 --> 00:40:55,350
ever had an application that just logs

1033
00:40:51,180 --> 00:40:57,259
you out sometimes because it gets mad at

1034
00:40:55,350 --> 00:40:59,580
you for manipulating parameters

1035
00:40:57,260 --> 00:41:01,050
sometimes it's a flaky app and it just

1036
00:40:59,580 --> 00:41:03,450
logs you out you have to manually go

1037
00:41:01,050 --> 00:41:05,430
back and login every time it's kind of

1038
00:41:03,450 --> 00:41:08,009
scary the first time you do it it's a

1039
00:41:05,430 --> 00:41:10,080
little bit of black magic look at burps

1040
00:41:08,010 --> 00:41:14,220
macro recorder but there are some good

1041
00:41:10,080 --> 00:41:17,069
blogs out there I've seen some Robin

1042
00:41:14,220 --> 00:41:19,160
would digit inja on Twitter he actually

1043
00:41:17,070 --> 00:41:21,720
has a really good blog that talks about

1044
00:41:19,160 --> 00:41:24,270
maintaining session state with burp how

1045
00:41:21,720 --> 00:41:27,779
to write a login macro and what will

1046
00:41:24,270 --> 00:41:30,090
happen is you you essentially tell it

1047
00:41:27,780 --> 00:41:31,470
tell burp how to recognize when it's

1048
00:41:30,090 --> 00:41:33,590
logged out of an application so for

1049
00:41:31,470 --> 00:41:36,299
every request it does or every so often

1050
00:41:33,590 --> 00:41:39,390
it'll perform a test and determine am i

1051
00:41:36,300 --> 00:41:43,020
logged in or am I not logged in if I'm

1052
00:41:39,390 --> 00:41:44,879
not logged in fire this macro and this

1053
00:41:43,020 --> 00:41:46,110
macro will replay the steps that it

1054
00:41:44,880 --> 00:41:48,750
takes to login to the application

1055
00:41:46,110 --> 00:41:50,640
capture those cookies and now use those

1056
00:41:48,750 --> 00:41:53,190
cookies with whatever tools you've told

1057
00:41:50,640 --> 00:41:55,379
it it applies to so that'll help keep

1058
00:41:53,190 --> 00:41:58,230
you logged into the application I wrote

1059
00:41:55,380 --> 00:42:00,060
a blog on using this with sequel

1060
00:41:58,230 --> 00:42:02,220
injection I was trying to add a sequel

1061
00:42:00,060 --> 00:42:04,140
injection vulnerability in an app trying

1062
00:42:02,220 --> 00:42:06,450
to use sequel map to really feel it out

1063
00:42:04,140 --> 00:42:08,020
but the app keeps logging me out because

1064
00:42:06,450 --> 00:42:10,600
it's angry that I'm doing C

1065
00:42:08,020 --> 00:42:12,430
Injection it's like no go away destroys

1066
00:42:10,600 --> 00:42:15,819
the session so I just proxy all the data

1067
00:42:12,430 --> 00:42:17,919
through burp I wrote what's essentially

1068
00:42:15,820 --> 00:42:20,950
a login macro to detect whether or not

1069
00:42:17,920 --> 00:42:21,610
I'm logged in and it goes hey you're

1070
00:42:20,950 --> 00:42:22,540
logged out

1071
00:42:21,610 --> 00:42:26,110
you just got logging out of the

1072
00:42:22,540 --> 00:42:29,290
application log back in and that's

1073
00:42:26,110 --> 00:42:31,330
transparent to sequel map get familiar

1074
00:42:29,290 --> 00:42:34,000
with using the macro recorder the same

1075
00:42:31,330 --> 00:42:35,799
thing can be used to scrape cross-site

1076
00:42:34,000 --> 00:42:37,720
request forgery tokens out of a web app

1077
00:42:35,800 --> 00:42:39,340
when you're doing testing where there's

1078
00:42:37,720 --> 00:42:40,689
a different token every time you view

1079
00:42:39,340 --> 00:42:42,850
the page and if you don't have the right

1080
00:42:40,690 --> 00:42:44,410
token the app says go away it doesn't

1081
00:42:42,850 --> 00:42:47,529
work at that point your automated

1082
00:42:44,410 --> 00:42:50,890
scanning is broken learn how to use the

1083
00:42:47,530 --> 00:42:53,470
cross-site request forgery functionality

1084
00:42:50,890 --> 00:42:57,640
of the macro recorder again Robin right

1085
00:42:53,470 --> 00:43:00,759
didja ninja has Robin would would think

1086
00:42:57,640 --> 00:43:04,180
it's wood has a really good blog article

1087
00:43:00,760 --> 00:43:07,090
about that and if you can't get your

1088
00:43:04,180 --> 00:43:09,069
company to send you to sans by the web

1089
00:43:07,090 --> 00:43:11,170
application hacker's handbook I'm not

1090
00:43:09,070 --> 00:43:12,820
sure how recently it's been updated the

1091
00:43:11,170 --> 00:43:16,060
copy that I have is a little bit older

1092
00:43:12,820 --> 00:43:18,430
and some of the information is dated but

1093
00:43:16,060 --> 00:43:20,320
it's still very very relevant the

1094
00:43:18,430 --> 00:43:22,210
process that it talks about is still

1095
00:43:20,320 --> 00:43:25,180
relevant things haven't changed

1096
00:43:22,210 --> 00:43:27,070
you know fundamentally if you had

1097
00:43:25,180 --> 00:43:28,569
nothing else but that resource that'll

1098
00:43:27,070 --> 00:43:32,710
make you a much more effective pen

1099
00:43:28,570 --> 00:43:34,300
tester then you know just watching

1100
00:43:32,710 --> 00:43:37,210
YouTube and whatever spend the time to

1101
00:43:34,300 --> 00:43:39,850
read that book but do go to do go to

1102
00:43:37,210 --> 00:43:43,690
YouTube go to things like hack the Boxee

1103
00:43:39,850 --> 00:43:45,250
you look at various challenge networks

1104
00:43:43,690 --> 00:43:48,430
play in CTF

1105
00:43:45,250 --> 00:43:50,560
get a chance to use those skills whether

1106
00:43:48,430 --> 00:43:52,390
it's damn vulnerable web app or mute

1107
00:43:50,560 --> 00:43:54,700
illa day or web goat or something like

1108
00:43:52,390 --> 00:43:57,040
that practice those before you get out

1109
00:43:54,700 --> 00:43:58,689
in the real world and find a rhythm

1110
00:43:57,040 --> 00:44:01,810
that's comfortable you this is the

1111
00:43:58,690 --> 00:44:03,450
methodology that I use but it may not be

1112
00:44:01,810 --> 00:44:06,460
the methodology that's best for you

1113
00:44:03,450 --> 00:44:08,080
something might work better get familiar

1114
00:44:06,460 --> 00:44:10,300
with the constructs start getting

1115
00:44:08,080 --> 00:44:12,040
familiar with the tools and that will

1116
00:44:10,300 --> 00:44:14,500
make you far more effective then

1117
00:44:12,040 --> 00:44:16,750
learning how to do these you know super

1118
00:44:14,500 --> 00:44:19,660
cool oh I got this new xxe injection

1119
00:44:16,750 --> 00:44:21,700
vulnerability that will come along but

1120
00:44:19,660 --> 00:44:23,558
you might find that in

1121
00:44:21,700 --> 00:44:25,149
95% of the other things in the

1122
00:44:23,559 --> 00:44:27,480
application cuz he wasted so much time

1123
00:44:25,150 --> 00:44:31,980
if you don't have a good methodology so

1124
00:44:27,480 --> 00:44:34,660
spend time working on that get familiar

1125
00:44:31,980 --> 00:44:37,809
that's legit it's not malicious I

1126
00:44:34,660 --> 00:44:39,160
promise it's just the vCard it's just

1127
00:44:37,809 --> 00:44:42,819
gonna tell you that I'm Mike at red

1128
00:44:39,160 --> 00:44:44,859
siege and I'm hard water hacker on

1129
00:44:42,819 --> 00:44:48,369
Twitter you can follow a red siege

1130
00:44:44,859 --> 00:44:51,460
InfoSec on Twitter that is where we're

1131
00:44:48,369 --> 00:44:52,809
gonna be publishing our new blogs that

1132
00:44:51,460 --> 00:44:54,069
we write every one small on various

1133
00:44:52,809 --> 00:44:56,680
kinds of research

1134
00:44:54,069 --> 00:45:00,160
once again these slides are at red siege

1135
00:44:56,680 --> 00:45:02,649
comm /w a 101 I'll tweet them out after

1136
00:45:00,160 --> 00:45:04,808
the talk if you have any questions feel

1137
00:45:02,650 --> 00:45:07,450
free to hit me up on Twitter feel free

1138
00:45:04,809 --> 00:45:09,940
to drop me an email I have red siege

1139
00:45:07,450 --> 00:45:12,819
stickers they say I am offensive and

1140
00:45:09,940 --> 00:45:14,710
then got our logo that thing so if you

1141
00:45:12,819 --> 00:45:16,750
want some stickers I have a bunch please

1142
00:45:14,710 --> 00:45:19,359
don't make me take them home so I have

1143
00:45:16,750 --> 00:45:20,920
too many so with that I want to thank

1144
00:45:19,359 --> 00:45:22,598
all of you for being here thanks to the

1145
00:45:20,920 --> 00:45:24,970
volunteers and the organizers for

1146
00:45:22,599 --> 00:45:26,559
putting this on thanks to our bartenders

1147
00:45:24,970 --> 00:45:30,129
we're keeping us hydrated don't forget

1148
00:45:26,559 --> 00:45:38,490
to tip your bartenders and supper time

1149
00:45:30,130 --> 00:45:45,270
thanks I should ask all your questions

1150
00:45:38,490 --> 00:45:45,270
nothing nothing going once questions yes

1151
00:45:58,320 --> 00:46:01,409
[Music]

1152
00:46:04,640 --> 00:46:07,699
[Music]

1153
00:46:07,770 --> 00:46:12,640
so the question was about like I talked

1154
00:46:11,230 --> 00:46:15,150
a lot about how to prevent blowing up

1155
00:46:12,640 --> 00:46:29,560
their clients stuff or how can you

1156
00:46:15,150 --> 00:46:31,300
prevent blowing up the client stuff so

1157
00:46:29,560 --> 00:46:33,100
the question is is there a downside with

1158
00:46:31,300 --> 00:46:34,840
using a different environment versus

1159
00:46:33,100 --> 00:46:37,660
using the production environment yeah

1160
00:46:34,840 --> 00:46:39,040
yes and no and it depends on how well

1161
00:46:37,660 --> 00:46:42,040
your environments are configured right

1162
00:46:39,040 --> 00:46:44,470
in an ideal world the only difference

1163
00:46:42,040 --> 00:46:46,779
between devtest prod States QA and

1164
00:46:44,470 --> 00:46:49,600
whatever is the data that's in them and

1165
00:46:46,780 --> 00:46:50,800
how you access them if you have a really

1166
00:46:49,600 --> 00:46:56,020
good environment where that kind of

1167
00:46:50,800 --> 00:46:57,820
stuff is truth there's no downside to

1168
00:46:56,020 --> 00:46:59,740
testing in another environment in fact

1169
00:46:57,820 --> 00:47:04,750
it's probably better because if you blow

1170
00:46:59,740 --> 00:47:07,200
stuff up it's okay the sad reality is in

1171
00:47:04,750 --> 00:47:09,790
most organizations that I've worked in

1172
00:47:07,200 --> 00:47:13,299
we've got this really beautiful setup

1173
00:47:09,790 --> 00:47:15,310
for production and then dev or QA is

1174
00:47:13,300 --> 00:47:16,930
some janky server that's 10 years out of

1175
00:47:15,310 --> 00:47:19,960
date that's left over and we've got a

1176
00:47:16,930 --> 00:47:21,879
load balancer we've got web app the web

1177
00:47:19,960 --> 00:47:24,250
server here a database server here app

1178
00:47:21,880 --> 00:47:25,960
server here multi-tiered architecture in

1179
00:47:24,250 --> 00:47:29,140
QA is like you know we've got this all

1180
00:47:25,960 --> 00:47:32,020
on this one hose so at that point it's

1181
00:47:29,140 --> 00:47:34,690
not a good simulation of what's in

1182
00:47:32,020 --> 00:47:38,320
production there's no problem in testing

1183
00:47:34,690 --> 00:47:39,340
in that if that's what your company you

1184
00:47:38,320 --> 00:47:42,100
know you don't want

1185
00:47:39,340 --> 00:47:43,510
to risk you know when when downtime is

1186
00:47:42,100 --> 00:47:45,520
measured in millions and dollars a

1187
00:47:43,510 --> 00:47:47,260
second or thousands of dollars a second

1188
00:47:45,520 --> 00:47:49,630
you don't want to test and prod at all

1189
00:47:47,260 --> 00:47:57,210
if you can avoid it but know the

1190
00:47:49,630 --> 00:47:57,210
limitations of that come get stickers

