1
00:00:01,250 --> 00:00:08,300
thank you for being here my name is

2
00:00:04,609 --> 00:00:12,890
Andre boson Oh I'm a security researcher

3
00:00:08,300 --> 00:00:17,169
with 27 years of experience my first

4
00:00:12,890 --> 00:00:19,820
encounter with malware happened in 1992

5
00:00:17,169 --> 00:00:22,659
with the high virus when me and my

6
00:00:19,820 --> 00:00:26,198
friends were infected while playing

7
00:00:22,659 --> 00:00:29,269
pirated videogame Wolfenstein

8
00:00:26,199 --> 00:00:32,390
back then I had no idea what what a

9
00:00:29,269 --> 00:00:34,220
virus was there was no what to enter

10
00:00:32,390 --> 00:00:38,060
antivirus because we had no access to

11
00:00:34,220 --> 00:00:42,170
internet etc so I had to understand what

12
00:00:38,060 --> 00:00:44,900
was happening and code something like

13
00:00:42,170 --> 00:00:48,410
disinfect ER as we used to call it back

14
00:00:44,900 --> 00:00:52,790
then and this was the beginning of an

15
00:00:48,410 --> 00:00:54,709
awesome journey to me in 2000 2010 I

16
00:00:52,790 --> 00:00:57,070
became a consultant for the Romanian

17
00:00:54,710 --> 00:01:02,740
national cyber emergency response team

18
00:00:57,070 --> 00:01:05,690
and at some point someone alerted us on

19
00:01:02,740 --> 00:01:08,960
potential breach but they had no

20
00:01:05,690 --> 00:01:11,570
evidence of the attack and in the ideas

21
00:01:08,960 --> 00:01:13,669
logs or firewall logs but they were

22
00:01:11,570 --> 00:01:18,199
pretty sure there was there was an

23
00:01:13,670 --> 00:01:21,260
incident happening actually one of their

24
00:01:18,200 --> 00:01:23,360
partners caught fraudulent activity

25
00:01:21,260 --> 00:01:26,720
originating from their private VPN

26
00:01:23,360 --> 00:01:32,140
network but on their site nothing

27
00:01:26,720 --> 00:01:34,729
suspicious raised any any alarms so we

28
00:01:32,140 --> 00:01:37,850
started investigating and we observed

29
00:01:34,729 --> 00:01:40,250
that there was no direct service attacks

30
00:01:37,850 --> 00:01:44,479
no spear phishing attacks

31
00:01:40,250 --> 00:01:48,860
but forensic analysis on the memory of

32
00:01:44,479 --> 00:01:51,260
the of the device was revealed to us

33
00:01:48,860 --> 00:01:57,950
that can you guys be a bit quiet in the

34
00:01:51,260 --> 00:02:00,080
back thank you reveal to us that it what

35
00:01:57,950 --> 00:02:02,240
happened was drive-by download aka

36
00:02:00,080 --> 00:02:04,548
watering hole back then I had no idea

37
00:02:02,240 --> 00:02:07,158
what the watering hole was maybe you

38
00:02:04,549 --> 00:02:09,890
guys know what watering hole is but

39
00:02:07,159 --> 00:02:12,010
wikipedia says that watering hole is a

40
00:02:09,889 --> 00:02:15,369
computer attack that

41
00:02:12,010 --> 00:02:19,000
attacks a particular group organization

42
00:02:15,370 --> 00:02:21,460
in the 300 region and the attacker

43
00:02:19,000 --> 00:02:24,610
either guesses or observes which website

44
00:02:21,460 --> 00:02:27,100
the group uses and in facts one or more

45
00:02:24,610 --> 00:02:32,980
of them of these websites with with

46
00:02:27,100 --> 00:02:37,390
malware more than a 70% of the websites

47
00:02:32,980 --> 00:02:40,750
are are vulnerable so it's pretty easy

48
00:02:37,390 --> 00:02:42,429
to an attacker to to find either non

49
00:02:40,750 --> 00:02:44,980
vulnerability or a zero-day

50
00:02:42,430 --> 00:02:48,010
vulnerability that he can exploit in

51
00:02:44,980 --> 00:02:51,609
order to get access on a website on a

52
00:02:48,010 --> 00:02:56,260
legitimate website that he can infect so

53
00:02:51,610 --> 00:02:59,170
basically this is how watering hole

54
00:02:56,260 --> 00:03:02,290
attack loops these are the phases phase

55
00:02:59,170 --> 00:03:05,320
one the the victims are lured

56
00:03:02,290 --> 00:03:08,320
either by a spear fishing or by simply

57
00:03:05,320 --> 00:03:12,640
browsing pool to an infected web site

58
00:03:08,320 --> 00:03:15,850
the victims are fingerprinted based on

59
00:03:12,640 --> 00:03:18,790
their IP address their browser or other

60
00:03:15,850 --> 00:03:21,160
technologies they use and the victims of

61
00:03:18,790 --> 00:03:23,560
interest are selected and redirected to

62
00:03:21,160 --> 00:03:26,410
an exploitation server where they are

63
00:03:23,560 --> 00:03:29,290
attacked based on information previously

64
00:03:26,410 --> 00:03:32,880
great gathered not interesting victims

65
00:03:29,290 --> 00:03:36,280
get access to the legitimate web site

66
00:03:32,880 --> 00:03:38,560
basically this these are the faces of

67
00:03:36,280 --> 00:03:40,540
the watering hole attack phase one

68
00:03:38,560 --> 00:03:43,480
attacker profiles victims and the kind

69
00:03:40,540 --> 00:03:46,179
of website they go to attacker then test

70
00:03:43,480 --> 00:03:48,040
these websites for vulnerabilities when

71
00:03:46,180 --> 00:03:50,730
the attacker finds a website he can

72
00:03:48,040 --> 00:03:53,140
compromise he injects JavaScript or HTML

73
00:03:50,730 --> 00:03:56,798
redirecting the victim to the to the

74
00:03:53,140 --> 00:04:00,369
separate site that hosts exploit code

75
00:03:56,799 --> 00:04:02,920
for the for the chosen vulnerability the

76
00:04:00,370 --> 00:04:04,870
step four is the compromised website is

77
00:04:02,920 --> 00:04:07,268
now waiting to infect the profile victim

78
00:04:04,870 --> 00:04:10,570
with a zero-day exploit just like a lion

79
00:04:07,269 --> 00:04:12,640
waiting waiting at the watering hole we

80
00:04:10,570 --> 00:04:15,100
can see here that the watering hole

81
00:04:12,640 --> 00:04:17,048
attack can happen either to a normal web

82
00:04:15,100 --> 00:04:19,450
site that serves a malicious

83
00:04:17,048 --> 00:04:22,219
advertisement or through a compromised

84
00:04:19,450 --> 00:04:26,000
web site or even through a spammed ring

85
00:04:22,220 --> 00:04:29,450
aka spearfishing the victim accessing

86
00:04:26,000 --> 00:04:32,720
these resources get into a traffic

87
00:04:29,450 --> 00:04:36,200
Direction system that sends him to an

88
00:04:32,720 --> 00:04:39,310
exploitation server kit that in turn

89
00:04:36,200 --> 00:04:45,080
serves either ransomware banking Trojans

90
00:04:39,310 --> 00:04:47,630
malware crypto jackin ransom er etc so

91
00:04:45,080 --> 00:04:50,180
basically the watering hole attack is

92
00:04:47,630 --> 00:04:52,760
considered a very dangerous but not so

93
00:04:50,180 --> 00:04:54,590
common attack but the problem is most

94
00:04:52,760 --> 00:04:57,560
victims don't even notice they have been

95
00:04:54,590 --> 00:05:00,440
attacked as you will see later because

96
00:04:57,560 --> 00:05:03,320
there is no obvious infection vector for

97
00:05:00,440 --> 00:05:06,250
instance with spearfishing you can see

98
00:05:03,320 --> 00:05:08,990
that someone received an email with

99
00:05:06,250 --> 00:05:12,560
direct services attack you can see that

100
00:05:08,990 --> 00:05:14,780
someone attacked a service and left a

101
00:05:12,560 --> 00:05:19,160
signature in the IDS logs or something

102
00:05:14,780 --> 00:05:22,190
like this during forensic investigations

103
00:05:19,160 --> 00:05:24,490
on high-profile networks in in Romania

104
00:05:22,190 --> 00:05:26,810
we found multiple occurrences of

105
00:05:24,490 --> 00:05:29,090
successful watering hole attacks and

106
00:05:26,810 --> 00:05:31,070
most of these victims had

107
00:05:29,090 --> 00:05:35,539
state-of-the-art security solution in

108
00:05:31,070 --> 00:05:38,950
place let's see how watering hole

109
00:05:35,540 --> 00:05:41,000
attacks appear in the news we see that

110
00:05:38,950 --> 00:05:42,289
apparently a Chinese attack group

111
00:05:41,000 --> 00:05:44,900
infected forbes.com

112
00:05:42,290 --> 00:05:48,260
back in November 2015 in a watering hole

113
00:05:44,900 --> 00:05:50,390
attack and they targeted the visitors

114
00:05:48,260 --> 00:05:55,550
working in the financial services or

115
00:05:50,390 --> 00:05:58,700
defense industries if you if you look at

116
00:05:55,550 --> 00:06:00,530
the second paragraph they stated that

117
00:05:58,700 --> 00:06:02,510
the attack exploited to zero day

118
00:06:00,530 --> 00:06:04,400
vulnerabilities one in Microsoft

119
00:06:02,510 --> 00:06:08,480
Internet Explorer and the other one in

120
00:06:04,400 --> 00:06:10,580
Adobe Flash Player and the Adobe fixed

121
00:06:08,480 --> 00:06:12,920
the flow back in December and Microsoft

122
00:06:10,580 --> 00:06:15,500
updated Internet Explorer as part of its

123
00:06:12,920 --> 00:06:18,470
patch tuesday release so basically there

124
00:06:15,500 --> 00:06:21,350
was no signature for the admin guys to

125
00:06:18,470 --> 00:06:26,600
identify that someone was was attacking

126
00:06:21,350 --> 00:06:30,169
their their systems also what's very

127
00:06:26,600 --> 00:06:31,910
very important to notice is the next

128
00:06:30,169 --> 00:06:34,820
paragraph saying that the campaign

129
00:06:31,910 --> 00:06:37,100
lasted only a few days but I

130
00:06:34,820 --> 00:06:38,930
and in Vincey I did not rule out the

131
00:06:37,100 --> 00:06:41,030
possibility of the campaign lasting a

132
00:06:38,930 --> 00:06:45,880
longer period of time they had no idea

133
00:06:41,030 --> 00:06:51,289
to know that another very important

134
00:06:45,880 --> 00:06:54,080
watering hole attack attacked people

135
00:06:51,290 --> 00:06:58,820
working at Facebook Apple Google

136
00:06:54,080 --> 00:07:02,530
Microsoft this happened in 2013 and the

137
00:06:58,820 --> 00:07:08,240
attackers compromised the mobile app

138
00:07:02,530 --> 00:07:09,890
developers forum as you can see Apple

139
00:07:08,240 --> 00:07:13,970
confirmed being hit in the recent

140
00:07:09,890 --> 00:07:15,530
watering hole attacked many watering

141
00:07:13,970 --> 00:07:17,770
holes targets in hacks that netted

142
00:07:15,530 --> 00:07:21,950
Facebook Twitter and Apple and

143
00:07:17,770 --> 00:07:25,310
apparently not only one web app

144
00:07:21,950 --> 00:07:28,520
developers forum was targeted but in

145
00:07:25,310 --> 00:07:33,490
fact two or three others other forums

146
00:07:28,520 --> 00:07:33,490
where we're hosting watering holes and

147
00:07:35,980 --> 00:07:42,230
they say those other watering holes

148
00:07:39,920 --> 00:07:44,150
served almost identical attacks to

149
00:07:42,230 --> 00:07:46,190
employees from a wide range of target

150
00:07:44,150 --> 00:07:49,729
firms across industries including

151
00:07:46,190 --> 00:07:52,550
prominent auto manufacturers in US US

152
00:07:49,730 --> 00:07:55,100
government agencies and even a leading

153
00:07:52,550 --> 00:07:58,490
candy maker so nobody is safe from

154
00:07:55,100 --> 00:08:04,390
watering holes another very interesting

155
00:07:58,490 --> 00:08:09,830
attack happened in 2017 in February

156
00:08:04,390 --> 00:08:13,940
banks 3031 banks in in Poland had been

157
00:08:09,830 --> 00:08:16,520
affected by a watering hole the watering

158
00:08:13,940 --> 00:08:19,870
hole was served from the Polish

159
00:08:16,520 --> 00:08:22,969
Financial Supervision Authority it was a

160
00:08:19,870 --> 00:08:26,570
legitimate website where people working

161
00:08:22,970 --> 00:08:30,950
in the banking industry had to browse on

162
00:08:26,570 --> 00:08:32,110
a daily basis to be on point and to be

163
00:08:30,950 --> 00:08:35,950
up to date with the latest

164
00:08:32,110 --> 00:08:40,400
recommendations and regulations from the

165
00:08:35,950 --> 00:08:43,960
Polish government what's interesting is

166
00:08:40,400 --> 00:08:46,310
the second paragraph saying that as

167
00:08:43,960 --> 00:08:47,880
indicators of compromising the tech were

168
00:08:46,310 --> 00:08:49,410
shared by the affected

169
00:08:47,880 --> 00:08:52,800
other institutions around the world

170
00:08:49,410 --> 00:08:56,160
found that they have been hit as well so

171
00:08:52,800 --> 00:08:58,709
you can assume that a bank can have

172
00:08:56,160 --> 00:09:02,640
state-of-the-art two security products

173
00:08:58,709 --> 00:09:06,060
in place but still they didn't see the

174
00:09:02,640 --> 00:09:08,880
attacks happening until someone else

175
00:09:06,060 --> 00:09:13,040
shared with them the IOC's of a certain

176
00:09:08,880 --> 00:09:16,529
tag this kind of raised some suspicions

177
00:09:13,040 --> 00:09:20,910
why didn't they see that in the in the

178
00:09:16,529 --> 00:09:26,490
in the logs why didn't the ideas raised

179
00:09:20,910 --> 00:09:31,439
any alarms we also see that the watering

180
00:09:26,490 --> 00:09:36,529
hole are a very favorite attack vector

181
00:09:31,440 --> 00:09:44,550
in apt groups they move more recently in

182
00:09:36,529 --> 00:09:49,560
2018 apparently Ocean Lotus had attacked

183
00:09:44,550 --> 00:09:53,760
like 21 25 websites in Southeast Asia

184
00:09:49,560 --> 00:09:55,949
and amongst them the Ministry of Defense

185
00:09:53,760 --> 00:09:57,720
of Cambodia the Ministry of Foreign

186
00:09:55,949 --> 00:10:00,000
Affairs and international cooperation of

187
00:09:57,720 --> 00:10:06,810
Cambodia and several Vietnamese

188
00:10:00,000 --> 00:10:09,420
newspaper and blocked websites as a new

189
00:10:06,810 --> 00:10:12,479
bush the CEO and founder of a security

190
00:10:09,420 --> 00:10:14,069
company in Vincey I said how can we

191
00:10:12,480 --> 00:10:16,019
train employees to be worried of

192
00:10:14,070 --> 00:10:17,730
watering hole sites it doesn't make any

193
00:10:16,019 --> 00:10:19,920
sense and I can just see why some CIA

194
00:10:17,730 --> 00:10:21,690
soles are getting frustrated at least

195
00:10:19,920 --> 00:10:23,760
with spear fishing you can blame the

196
00:10:21,690 --> 00:10:25,649
user even if it's not their fault

197
00:10:23,760 --> 00:10:27,660
with watering hole of text they can only

198
00:10:25,649 --> 00:10:30,420
say I had to go there for work what do

199
00:10:27,660 --> 00:10:32,339
you want me to do and he has a point

200
00:10:30,420 --> 00:10:36,689
he had to do that for his day-to-day

201
00:10:32,339 --> 00:10:43,890
activities I would like to introduce you

202
00:10:36,690 --> 00:10:49,529
to know some case studies case study one

203
00:10:43,890 --> 00:10:51,000
is called the bank in 2017 one Romanian

204
00:10:49,529 --> 00:10:54,660
bank contacted us for investing

205
00:10:51,000 --> 00:10:58,380
investigating suspected bridge basically

206
00:10:54,660 --> 00:11:01,000
one major ATM network identify

207
00:10:58,380 --> 00:11:02,980
suspicious operations originating from

208
00:11:01,000 --> 00:11:05,890
banks private VPN during out-of-work

209
00:11:02,980 --> 00:11:08,170
hours using legitimate credentials those

210
00:11:05,890 --> 00:11:11,319
were legitimate potentials pertained to

211
00:11:08,170 --> 00:11:14,979
a user who was kind of computer

212
00:11:11,320 --> 00:11:18,340
illiterate he had no security training

213
00:11:14,980 --> 00:11:20,890
he had no idea how to hack and the

214
00:11:18,340 --> 00:11:23,140
manager of the bank told me it's

215
00:11:20,890 --> 00:11:25,180
impossible that he attacked those those

216
00:11:23,140 --> 00:11:30,490
people we need to see what what was

217
00:11:25,180 --> 00:11:33,430
going on there in plus the bank recently

218
00:11:30,490 --> 00:11:35,350
acquired the state-of-the-art monitoring

219
00:11:33,430 --> 00:11:40,900
and detection solution from a major

220
00:11:35,350 --> 00:11:42,550
vendor and no suspicious activities were

221
00:11:40,900 --> 00:11:45,310
detected by the by the bank

222
00:11:42,550 --> 00:11:48,160
state-of-the-art intrusion detection

223
00:11:45,310 --> 00:11:50,140
sensors and firewalls within the the

224
00:11:48,160 --> 00:11:52,990
past two months we we asked them to

225
00:11:50,140 --> 00:11:56,140
provide us with the firewall logs for

226
00:11:52,990 --> 00:11:59,110
the past two months and we didn't see

227
00:11:56,140 --> 00:11:59,560
any suspicious any suspicious going on

228
00:11:59,110 --> 00:12:03,130
there

229
00:11:59,560 --> 00:12:07,329
in + latest patches and updates were in

230
00:12:03,130 --> 00:12:09,010
place but forensic analysis on the

231
00:12:07,330 --> 00:12:10,990
computer who generated the suspicious

232
00:12:09,010 --> 00:12:13,810
behavior didn't reveal any direct

233
00:12:10,990 --> 00:12:16,660
service or spear phishing attacks but

234
00:12:13,810 --> 00:12:18,280
the memory of the device held a lot of

235
00:12:16,660 --> 00:12:23,860
evidence pointing to a watering hole

236
00:12:18,280 --> 00:12:27,490
attack so basically you can see here we

237
00:12:23,860 --> 00:12:30,790
dump the memory we simply search through

238
00:12:27,490 --> 00:12:35,710
the the memory with strings for the

239
00:12:30,790 --> 00:12:41,260
string iframe we anonymized

240
00:12:35,710 --> 00:12:43,690
some watering hole sites on there but we

241
00:12:41,260 --> 00:12:47,319
left two others some of them might still

242
00:12:43,690 --> 00:12:52,690
be active but this happened on a single

243
00:12:47,320 --> 00:12:58,030
bank computer so performing further

244
00:12:52,690 --> 00:13:01,170
analysis on on that computer we actually

245
00:12:58,030 --> 00:13:05,560
were able to narrow down the websites he

246
00:13:01,170 --> 00:13:07,719
recently browsed and we started takin a

247
00:13:05,560 --> 00:13:10,270
scan on those websites and we found the

248
00:13:07,720 --> 00:13:12,520
culprit the culprit was a Romanian NGO

249
00:13:10,270 --> 00:13:13,170
dedicated to cyber security in banking

250
00:13:12,520 --> 00:13:19,220
environment

251
00:13:13,170 --> 00:13:24,390
those dudes where mmm posting

252
00:13:19,220 --> 00:13:26,760
recommendations how security operations

253
00:13:24,390 --> 00:13:32,910
managers in banks should implement the

254
00:13:26,760 --> 00:13:35,790
implement best practices so to say so it

255
00:13:32,910 --> 00:13:38,519
was quite visited by your people working

256
00:13:35,790 --> 00:13:42,779
in the bank responsible for security of

257
00:13:38,519 --> 00:13:45,060
the banks and we in fact identified that

258
00:13:42,779 --> 00:13:47,370
certain pages were implanted with

259
00:13:45,060 --> 00:13:51,149
malicious JavaScript they can has found

260
00:13:47,370 --> 00:13:52,860
that the malicious JavaScript was used

261
00:13:51,149 --> 00:13:56,130
to read redirect users to an

262
00:13:52,860 --> 00:13:59,149
exploitation server and the exploitation

263
00:13:56,130 --> 00:14:02,339
server was using flash and PDF zero days

264
00:13:59,149 --> 00:14:05,519
so basically this was the reason why

265
00:14:02,339 --> 00:14:10,050
nothing appeared in the logs and no

266
00:14:05,519 --> 00:14:13,190
suspicions were were raised you see here

267
00:14:10,050 --> 00:14:16,769
on the on the left side of the screen

268
00:14:13,190 --> 00:14:22,350
this is a resurrection script extracted

269
00:14:16,769 --> 00:14:25,050
from the NGO nothing suspicious if you

270
00:14:22,350 --> 00:14:26,970
look with the naked eye nothing

271
00:14:25,050 --> 00:14:31,050
suspicious if you analyze with an

272
00:14:26,970 --> 00:14:34,380
anti-virus but as soon as you perform a

273
00:14:31,050 --> 00:14:39,390
first step of decoding we can see that

274
00:14:34,380 --> 00:14:43,560
actually the JavaScript was referencing

275
00:14:39,390 --> 00:14:47,100
functions through to a vector instead of

276
00:14:43,560 --> 00:14:50,279
directly calling the the functions he

277
00:14:47,100 --> 00:14:54,329
encoded the the the functions name your

278
00:14:50,279 --> 00:14:58,170
in in hex so signature scanning would

279
00:14:54,329 --> 00:15:00,180
identify nothing nothing suspicious

280
00:14:58,170 --> 00:15:05,420
going on there

281
00:15:00,180 --> 00:15:10,010
further the URL string was also encoded

282
00:15:05,420 --> 00:15:17,339
so nothing suspicious when you perform

283
00:15:10,010 --> 00:15:20,760
regular a signature scanning the other

284
00:15:17,339 --> 00:15:25,240
script looked like this which was

285
00:15:20,760 --> 00:15:29,480
basically an evolved executing

286
00:15:25,240 --> 00:15:31,550
this harmless looking thing nothing

287
00:15:29,480 --> 00:15:33,769
suspicious here if you don't know what

288
00:15:31,550 --> 00:15:36,920
you're looking for but if you decode

289
00:15:33,769 --> 00:15:39,800
this it's actually decode to this

290
00:15:36,920 --> 00:15:43,189
JavaScript which you can see actually it

291
00:15:39,800 --> 00:15:48,279
implants in the in the HTML document a

292
00:15:43,190 --> 00:15:52,930
new script with an encoded string as

293
00:15:48,279 --> 00:15:56,180
source for the URL of the redirection

294
00:15:52,930 --> 00:15:59,739
basically the firewalls and the anti

295
00:15:56,180 --> 00:16:02,329
viruses had no chance to identify that

296
00:15:59,740 --> 00:16:08,930
the those scripts were performing

297
00:16:02,329 --> 00:16:11,630
anything illegal in in this case so as I

298
00:16:08,930 --> 00:16:14,199
said certain pages in the website had

299
00:16:11,630 --> 00:16:18,110
separate influence of of these scripts

300
00:16:14,199 --> 00:16:22,040
especially the the pages where they were

301
00:16:18,110 --> 00:16:23,870
posting regularly recommendations and

302
00:16:22,040 --> 00:16:27,040
the best practices for the for the

303
00:16:23,870 --> 00:16:30,920
bank's only pages that were aware of

304
00:16:27,040 --> 00:16:34,370
direct interest to people working in the

305
00:16:30,920 --> 00:16:39,170
security management in the financial

306
00:16:34,370 --> 00:16:40,779
sectors as you saw multi-layer the

307
00:16:39,170 --> 00:16:45,670
encryption was used as protection

308
00:16:40,779 --> 00:16:47,779
against static analysis all those

309
00:16:45,670 --> 00:16:52,099
implants redirected to the same

310
00:16:47,779 --> 00:16:57,100
exploitation server and the server was

311
00:16:52,100 --> 00:17:00,829
was serving the actually PDF and flesh

312
00:16:57,100 --> 00:17:02,750
zero-days that after successful

313
00:17:00,829 --> 00:17:04,730
exploitation would download the

314
00:17:02,750 --> 00:17:09,740
previously unknown carbonic root is

315
00:17:04,730 --> 00:17:13,390
variant carbon arc is a very known cyber

316
00:17:09,740 --> 00:17:17,689
criminal group that is said to have been

317
00:17:13,390 --> 00:17:20,900
floating the financial industry for a

318
00:17:17,689 --> 00:17:25,000
few years for like two billions dollars

319
00:17:20,900 --> 00:17:29,870
or something like this another

320
00:17:25,000 --> 00:17:32,620
interesting case study it was a major

321
00:17:29,870 --> 00:17:35,299
media network in in Romania

322
00:17:32,620 --> 00:17:38,360
we titled this from malware to crypto

323
00:17:35,299 --> 00:17:42,260
checking because as part of our

324
00:17:38,360 --> 00:17:44,629
regular activities we perform regular

325
00:17:42,260 --> 00:17:48,799
they can ask ends on a Romanian top 100

326
00:17:44,630 --> 00:17:50,510
websites and one time one scan revealed

327
00:17:48,799 --> 00:17:53,870
an interesting watering hole attack on a

328
00:17:50,510 --> 00:17:58,879
major and media network this particular

329
00:17:53,870 --> 00:18:03,559
media network totaled almost 30 websites

330
00:17:58,880 --> 00:18:06,679
with 500,000 unique visitors per day

331
00:18:03,559 --> 00:18:10,399
it was huge it's I think is it's the

332
00:18:06,679 --> 00:18:12,470
biggest in Romania and one of their

333
00:18:10,399 --> 00:18:15,678
three load balancers was infected with

334
00:18:12,470 --> 00:18:18,590
watering hole implants what's

335
00:18:15,679 --> 00:18:20,809
interesting though it's the fact that

336
00:18:18,590 --> 00:18:23,209
instead of redirecting users to an

337
00:18:20,809 --> 00:18:25,039
exploitation server the JavaScript would

338
00:18:23,210 --> 00:18:31,450
redirect users to a crypt rejecting

339
00:18:25,039 --> 00:18:34,908
domain so basically something like

340
00:18:31,450 --> 00:18:37,100
200,000 users where mining

341
00:18:34,909 --> 00:18:41,919
cryptocurrencies for attackers every day

342
00:18:37,100 --> 00:18:44,928
and this was very hard to detect because

343
00:18:41,919 --> 00:18:48,700
it didn't happen all the time not all

344
00:18:44,929 --> 00:18:52,960
load balancers were infected

345
00:18:48,700 --> 00:18:55,580
it was like one out of three hits was

346
00:18:52,960 --> 00:18:59,029
mining cryptocurrencies for the for the

347
00:18:55,580 --> 00:19:01,460
attackers also the crypto checking

348
00:18:59,029 --> 00:19:03,830
script was carefully crafted not used

349
00:19:01,460 --> 00:19:06,580
too much CPU power in order to avoid the

350
00:19:03,830 --> 00:19:10,760
detection so usually people detect

351
00:19:06,580 --> 00:19:14,960
crypto jacking because the resources the

352
00:19:10,760 --> 00:19:16,639
CPU etc go go up the roof and they

353
00:19:14,960 --> 00:19:20,000
notice something fishy is going on and

354
00:19:16,639 --> 00:19:25,158
they start investigating further in this

355
00:19:20,000 --> 00:19:28,789
case nothing nothing as such so people

356
00:19:25,159 --> 00:19:31,600
would happily mine cryptocurrencies for

357
00:19:28,789 --> 00:19:37,399
the for the attackers unsuspecting

358
00:19:31,600 --> 00:19:41,209
anything as a side note we concluded

359
00:19:37,399 --> 00:19:43,850
somehow that a recent trend is to

360
00:19:41,210 --> 00:19:47,360
replace the traditional ransomware

361
00:19:43,850 --> 00:19:50,029
attacks with with crypto jacking because

362
00:19:47,360 --> 00:19:51,649
instead of forcing someone to pay you a

363
00:19:50,029 --> 00:19:57,050
certain sum for their

364
00:19:51,650 --> 00:19:59,510
files you can much more easy easy and

365
00:19:57,050 --> 00:20:04,040
have them mine cryptocurrency on your

366
00:19:59,510 --> 00:20:07,010
behalf without their consent this is how

367
00:20:04,040 --> 00:20:11,170
them people checking script would look

368
00:20:07,010 --> 00:20:15,080
as you can see again nothing suspicious

369
00:20:11,170 --> 00:20:18,910
nothing that could raise any suspicions

370
00:20:15,080 --> 00:20:21,649
to an anti-virus product or a firewall

371
00:20:18,910 --> 00:20:23,540
this is the decoded version of the of

372
00:20:21,650 --> 00:20:27,730
the script on the right

373
00:20:23,540 --> 00:20:30,110
still multi multi-layered encryption

374
00:20:27,730 --> 00:20:34,460
nothing suspicious again for the

375
00:20:30,110 --> 00:20:37,879
firewall or the antivirus but still this

376
00:20:34,460 --> 00:20:41,450
this attacked a lot of a lot of users

377
00:20:37,880 --> 00:20:46,340
and nobody noticed that the attack was

378
00:20:41,450 --> 00:20:48,770
was ongoing most common no payload that

379
00:20:46,340 --> 00:20:53,419
be can be served in watering hole

380
00:20:48,770 --> 00:20:58,700
attacks are trojans apt rootkits crypto

381
00:20:53,420 --> 00:21:02,350
jacking ransomware or spyware the

382
00:20:58,700 --> 00:21:04,760
traditional methods that should detect

383
00:21:02,350 --> 00:21:08,419
watering hole attacks our signature

384
00:21:04,760 --> 00:21:11,379
scanning blacklisting of IPS or other

385
00:21:08,420 --> 00:21:16,309
resources static code analysis and

386
00:21:11,380 --> 00:21:20,030
dynamic code analysis why these methods

387
00:21:16,309 --> 00:21:24,550
fail as we have seen previously there

388
00:21:20,030 --> 00:21:27,740
are a lot of high profile networks that

389
00:21:24,550 --> 00:21:30,620
were compromised using watering hole

390
00:21:27,740 --> 00:21:33,170
attacks and as you can imagine these

391
00:21:30,620 --> 00:21:36,559
places had state state-of-the-art

392
00:21:33,170 --> 00:21:39,350
state-of-the-art technology that was

393
00:21:36,559 --> 00:21:43,010
supposed to protect them but the

394
00:21:39,350 --> 00:21:47,230
technology failed so why why these

395
00:21:43,010 --> 00:21:51,200
technologies fail first the code is

396
00:21:47,230 --> 00:21:55,010
obfuscated and the code is totally

397
00:21:51,200 --> 00:21:58,429
devastated only in the browser memory as

398
00:21:55,010 --> 00:22:01,300
you have seen earlier the code doesn't

399
00:21:58,429 --> 00:22:04,320
look suspicious and doesn't perform any

400
00:22:01,300 --> 00:22:07,200
read react doesn't

401
00:22:04,320 --> 00:22:09,240
for many implants until it reaches the

402
00:22:07,200 --> 00:22:14,070
browser's memory so in transit

403
00:22:09,240 --> 00:22:16,850
everything looks fine also another

404
00:22:14,070 --> 00:22:19,799
problem is that the the code is rarely

405
00:22:16,850 --> 00:22:22,769
reused from one watering hole to another

406
00:22:19,799 --> 00:22:25,950
so it's basically impossible to generate

407
00:22:22,769 --> 00:22:30,840
a signature that can be used in multiple

408
00:22:25,950 --> 00:22:33,000
places for instance how is the case with

409
00:22:30,840 --> 00:22:34,678
our traditional viruses like you have

410
00:22:33,000 --> 00:22:38,279
this virus you know that the signature

411
00:22:34,679 --> 00:22:42,320
will catch every infection with with

412
00:22:38,279 --> 00:22:45,840
that virus in this case the code is

413
00:22:42,320 --> 00:22:48,320
rarely used and most of the times looks

414
00:22:45,840 --> 00:22:51,120
different from one infection to another

415
00:22:48,320 --> 00:22:54,210
another problem is that the exploitation

416
00:22:51,120 --> 00:22:56,100
server uses either zero day attacks that

417
00:22:54,210 --> 00:22:59,250
are totally unknown as you have seen

418
00:22:56,100 --> 00:23:02,629
previously in the press exercise I

419
00:22:59,250 --> 00:23:07,139
presented or one day attacks that are

420
00:23:02,629 --> 00:23:09,779
recently published but nobody generated

421
00:23:07,139 --> 00:23:16,649
yet a signature to detect those those

422
00:23:09,779 --> 00:23:22,320
attacks also the domains and IP

423
00:23:16,649 --> 00:23:24,750
addresses at used in in attacks - as a

424
00:23:22,320 --> 00:23:28,678
command and control center etc are

425
00:23:24,750 --> 00:23:31,559
rarely reused they don't get blacklisted

426
00:23:28,679 --> 00:23:35,779
and most of the times they are

427
00:23:31,559 --> 00:23:40,769
legitimate and trustworthy websites that

428
00:23:35,779 --> 00:23:44,039
simply also serve as a command and

429
00:23:40,769 --> 00:23:47,370
control server for the for the attackers

430
00:23:44,039 --> 00:23:53,779
so you cannot blacklist legitimate

431
00:23:47,370 --> 00:23:53,779
domain because this is rather impossible

432
00:23:54,919 --> 00:24:01,710
also what is very debtor and for the

433
00:23:58,610 --> 00:24:04,229
analysts is the fact that only certain

434
00:24:01,710 --> 00:24:07,950
IP addresses are attacked for instance

435
00:24:04,230 --> 00:24:11,850
in the case of the Polish banks they had

436
00:24:07,950 --> 00:24:14,780
the list of the IP addresses used by the

437
00:24:11,850 --> 00:24:19,010
banks they wanted to target and

438
00:24:14,780 --> 00:24:21,470
all the IP addresses who didn't fall in

439
00:24:19,010 --> 00:24:25,340
there in their list we're redirecting to

440
00:24:21,470 --> 00:24:28,340
to the normal website and no attack no

441
00:24:25,340 --> 00:24:31,399
attack happened so if when analyst tried

442
00:24:28,340 --> 00:24:37,459
to understand what what was going on and

443
00:24:31,400 --> 00:24:39,650
he didn't run the analysis from one IP

444
00:24:37,460 --> 00:24:41,960
addresses that was in the target at

445
00:24:39,650 --> 00:24:45,890
least he would practically practically

446
00:24:41,960 --> 00:24:49,760
see nothing weird nothing suspicious and

447
00:24:45,890 --> 00:24:53,360
so only certain browsers and underlying

448
00:24:49,760 --> 00:24:55,580
technologies are attacked so for

449
00:24:53,360 --> 00:24:57,560
instance if they have a zero-day for

450
00:24:55,580 --> 00:25:01,129
internet explorer they will not attack

451
00:24:57,560 --> 00:25:03,110
you if you use Firefox or Chrome for

452
00:25:01,130 --> 00:25:05,600
instance if they have a zero D for

453
00:25:03,110 --> 00:25:09,679
Firefox they will not attack you unless

454
00:25:05,600 --> 00:25:14,300
you are using Firefox so the analyst has

455
00:25:09,680 --> 00:25:16,790
to know from the beginning what kind of

456
00:25:14,300 --> 00:25:19,310
setup he has to make in order to be

457
00:25:16,790 --> 00:25:23,690
attacked so he can trigger and analyze

458
00:25:19,310 --> 00:25:26,210
the attack another big problem is the

459
00:25:23,690 --> 00:25:29,360
fact that the communication with the

460
00:25:26,210 --> 00:25:34,130
command and control server is done using

461
00:25:29,360 --> 00:25:38,300
covered channels for instance as a side

462
00:25:34,130 --> 00:25:41,440
note the carbonic rootkit variant we we

463
00:25:38,300 --> 00:25:46,340
analyzed used to communicate were on

464
00:25:41,440 --> 00:25:48,590
HTTPS with legitimate website and the

465
00:25:46,340 --> 00:25:50,750
exfiltration and communication was done

466
00:25:48,590 --> 00:25:55,520
through base64 hashed

467
00:25:50,750 --> 00:25:57,950
cookies so basically to anyone looking

468
00:25:55,520 --> 00:26:00,710
in the in the logs this would look like

469
00:25:57,950 --> 00:26:04,670
someone was surfing the web or nothing

470
00:26:00,710 --> 00:26:07,460
suspicious was was going on there and so

471
00:26:04,670 --> 00:26:09,170
as I stated previously the command and

472
00:26:07,460 --> 00:26:13,850
control server is not blacklisted

473
00:26:09,170 --> 00:26:16,820
because it can be legitimate website or

474
00:26:13,850 --> 00:26:21,260
a legitimate server that at this point

475
00:26:16,820 --> 00:26:25,210
in time serves as the command and

476
00:26:21,260 --> 00:26:25,210
control server for certain attackers

477
00:26:25,950 --> 00:26:37,780
also during analyzing malicious HTML

478
00:26:33,130 --> 00:26:40,330
implants samples we identified that they

479
00:26:37,780 --> 00:26:42,399
use a lot of tricks and techniques to

480
00:26:40,330 --> 00:26:45,340
identify an instrumentation environment

481
00:26:42,400 --> 00:26:47,650
for instance they have delayed the

482
00:26:45,340 --> 00:26:51,040
execution the script doesn't actually

483
00:26:47,650 --> 00:26:55,990
execute unless a certain amount of time

484
00:26:51,040 --> 00:27:00,850
has passed they look for signs of human

485
00:26:55,990 --> 00:27:04,200
interaction they look for onmouseover or

486
00:27:00,850 --> 00:27:08,320
mouse activity keyboard activity etc

487
00:27:04,200 --> 00:27:11,710
they have techniques to identify virtual

488
00:27:08,320 --> 00:27:16,000
machine detection for instance they

489
00:27:11,710 --> 00:27:19,030
check the window size there are very

490
00:27:16,000 --> 00:27:22,780
rare cases when the analyst actually

491
00:27:19,030 --> 00:27:25,270
changes the the windows size of the

492
00:27:22,780 --> 00:27:27,970
analyzes environment and this is

493
00:27:25,270 --> 00:27:32,050
practically a standard window size for

494
00:27:27,970 --> 00:27:35,530
for all cases and hackers look at this

495
00:27:32,050 --> 00:27:39,010
and they can decide if it's an

496
00:27:35,530 --> 00:27:41,920
instrumentation environment or it's a

497
00:27:39,010 --> 00:27:47,379
it's a real person who accessed and who

498
00:27:41,920 --> 00:27:50,890
is getting infected so a variant would

499
00:27:47,380 --> 00:27:54,790
be dynamic code analysis but the problem

500
00:27:50,890 --> 00:27:57,370
is that dynamic code analysis is very

501
00:27:54,790 --> 00:28:01,629
time consuming and it's time limited you

502
00:27:57,370 --> 00:28:03,459
can only analyze an sample for a certain

503
00:28:01,630 --> 00:28:06,940
amount of time like 2 minutes

504
00:28:03,460 --> 00:28:11,200
but the hackers could make their script

505
00:28:06,940 --> 00:28:14,020
run after 2 minutes so during your

506
00:28:11,200 --> 00:28:17,410
analysis nothing nothing suspicious

507
00:28:14,020 --> 00:28:19,990
nothing nothing raises any alarms so you

508
00:28:17,410 --> 00:28:23,790
say ok it was a false alarm this site is

509
00:28:19,990 --> 00:28:28,080
a perfectly ok but in fact it is not

510
00:28:23,790 --> 00:28:31,990
also dynamic code analysis is

511
00:28:28,080 --> 00:28:34,240
time-consuming and it will require from

512
00:28:31,990 --> 00:28:37,000
a few tens of seconds to a few minutes

513
00:28:34,240 --> 00:28:38,480
for a complete analysis so analyzing a

514
00:28:37,000 --> 00:28:41,480
single simple website would

515
00:28:38,480 --> 00:28:47,230
take ours this is not feasible in a real

516
00:28:41,480 --> 00:28:49,850
environment so as we as we already saw

517
00:28:47,230 --> 00:28:52,340
there are a few phases in a watering

518
00:28:49,850 --> 00:28:55,360
hole attack basically is the

519
00:28:52,340 --> 00:28:58,730
resurrecting phase where users are

520
00:28:55,360 --> 00:29:02,689
selected and fingerprinted based on

521
00:28:58,730 --> 00:29:04,640
technologies they use using the

522
00:29:02,690 --> 00:29:08,980
information gathered in the resurrecting

523
00:29:04,640 --> 00:29:11,540
phase they are served certain exploits

524
00:29:08,980 --> 00:29:14,419
according to the to the technologies

525
00:29:11,540 --> 00:29:18,440
they use and the third phase is the

526
00:29:14,419 --> 00:29:21,919
persistency phase in which the actual

527
00:29:18,440 --> 00:29:25,040
attacker tries to hold the control of

528
00:29:21,919 --> 00:29:28,309
the equipment he he recently owned and

529
00:29:25,040 --> 00:29:32,470
tries to call back home to his command

530
00:29:28,309 --> 00:29:36,020
and control server most technologies

531
00:29:32,470 --> 00:29:39,080
that protect against watering holes

532
00:29:36,020 --> 00:29:44,780
focus on the exploitation phase or the

533
00:29:39,080 --> 00:29:48,678
persistency phase which you can see it's

534
00:29:44,780 --> 00:29:52,129
rather difficult when the attack is

535
00:29:48,679 --> 00:29:54,799
performed using zero days they attempt

536
00:29:52,130 --> 00:29:56,720
to detect exploit signatures blacklisted

537
00:29:54,799 --> 00:30:00,080
IP addresses or suspicious

538
00:29:56,720 --> 00:30:02,240
communications but this protection is

539
00:30:00,080 --> 00:30:05,178
not enough against euro day or one day

540
00:30:02,240 --> 00:30:07,250
attacks or legitimate IP addresses used

541
00:30:05,179 --> 00:30:09,490
as command and control servers or

542
00:30:07,250 --> 00:30:11,900
covered channels as we have seen in the

543
00:30:09,490 --> 00:30:15,169
example with the with the Romanian bank

544
00:30:11,900 --> 00:30:17,929
where legitimate web server was used as

545
00:30:15,169 --> 00:30:19,540
the command and control server and the

546
00:30:17,929 --> 00:30:27,350
exfiltration in communication was

547
00:30:19,540 --> 00:30:30,379
performed through cookie values so we

548
00:30:27,350 --> 00:30:34,928
understood that we had to to come up

549
00:30:30,380 --> 00:30:39,549
with a new approach a different approach

550
00:30:34,929 --> 00:30:43,640
so I started developing the canals in

551
00:30:39,549 --> 00:30:45,410
2016 as a complex passive scanner using

552
00:30:43,640 --> 00:30:49,870
artificial intelligence to classify

553
00:30:45,410 --> 00:30:52,840
malicious HTML elements our focus was

554
00:30:49,870 --> 00:30:55,270
on detecting phase 1 the resurrection

555
00:30:52,840 --> 00:30:59,230
and fingerprinting of users instead of

556
00:30:55,270 --> 00:31:05,770
trying to identify your blacklisted IPS

557
00:30:59,230 --> 00:31:10,500
or exploit signatures etc we developed

558
00:31:05,770 --> 00:31:15,400
Tekken s is a big big big data system

559
00:31:10,500 --> 00:31:17,590
which allows parallel processing in a

560
00:31:15,400 --> 00:31:20,679
big data environment which in turn

561
00:31:17,590 --> 00:31:23,110
allows us to analyze something like 1

562
00:31:20,679 --> 00:31:28,029
million URL addresses in 24 hours which

563
00:31:23,110 --> 00:31:30,070
is basically huge also we introduced a

564
00:31:28,029 --> 00:31:34,330
new a new concept which is a hybrid

565
00:31:30,070 --> 00:31:36,939
between static analysis and dynamic code

566
00:31:34,330 --> 00:31:39,210
analysis which we call contextual

567
00:31:36,940 --> 00:31:41,799
analysis which means basically

568
00:31:39,210 --> 00:31:45,490
understanding the code from its

569
00:31:41,799 --> 00:31:48,299
semantics not running the actual code

570
00:31:45,490 --> 00:31:51,340
and not only looking for certain

571
00:31:48,299 --> 00:31:53,649
patterns in the in that code but

572
00:31:51,340 --> 00:31:56,289
actually trying to find the correlations

573
00:31:53,649 --> 00:31:57,850
and relations between the HTML

574
00:31:56,289 --> 00:32:01,830
instructions or the JavaScript

575
00:31:57,850 --> 00:32:06,520
instructions and see how would those

576
00:32:01,830 --> 00:32:09,520
features those instructions fit into a

577
00:32:06,520 --> 00:32:13,529
malicious behavior or not this approach

578
00:32:09,520 --> 00:32:17,490
allowed us to have no false negatives

579
00:32:13,529 --> 00:32:21,279
basically there isn't there is no

580
00:32:17,490 --> 00:32:25,440
malicious JavaScript that we did not

581
00:32:21,279 --> 00:32:35,409
detect but we had some false positives

582
00:32:25,440 --> 00:32:38,909
like 0 0.001 percent of the websites we

583
00:32:35,409 --> 00:32:42,669
analyzed the where in fact legitimate

584
00:32:38,909 --> 00:32:45,700
scripts looking like malicious ones but

585
00:32:42,669 --> 00:32:47,880
this false positives are used to train

586
00:32:45,700 --> 00:32:53,909
further the artificial intelligence

587
00:32:47,880 --> 00:32:58,179
algorithm so our research we analyzed

588
00:32:53,909 --> 00:33:00,070
over 2000 20,000 malicious HTML elements

589
00:32:58,179 --> 00:33:02,559
and

590
00:33:00,070 --> 00:33:06,820
we identified certain features that are

591
00:33:02,559 --> 00:33:09,279
common amongst all samples those

592
00:33:06,820 --> 00:33:12,399
features are fundamental in order for

593
00:33:09,279 --> 00:33:16,690
the implant to perform and those

594
00:33:12,399 --> 00:33:20,168
features are resurrection you need to

595
00:33:16,690 --> 00:33:23,619
send the users to 12 to the exploitation

596
00:33:20,169 --> 00:33:27,249
server you need to actually implant and

597
00:33:23,619 --> 00:33:31,600
execute that resurrection through some

598
00:33:27,249 --> 00:33:35,109
of keywords or instructions but this

599
00:33:31,600 --> 00:33:38,820
would be very obvious for an admin guy

600
00:33:35,109 --> 00:33:41,529
and you could easily see that someone

601
00:33:38,820 --> 00:33:46,029
implanted an iframe or a meta refresh

602
00:33:41,529 --> 00:33:48,940
tag in his in his website so they had to

603
00:33:46,029 --> 00:33:52,950
obfuscate and conceal the presence of

604
00:33:48,940 --> 00:33:57,070
such keywords or instructions that would

605
00:33:52,950 --> 00:34:00,960
perform the the resurrection also

606
00:33:57,070 --> 00:34:04,809
another feature is that they need to

607
00:34:00,960 --> 00:34:07,570
fingerprint the the target victims they

608
00:34:04,809 --> 00:34:11,290
need to understand what technologies the

609
00:34:07,570 --> 00:34:15,730
victims use in order to redirect them to

610
00:34:11,290 --> 00:34:18,659
the appropriate exploitation server also

611
00:34:15,730 --> 00:34:22,418
as we stated previously they have

612
00:34:18,659 --> 00:34:26,290
instructions that try to detect the

613
00:34:22,418 --> 00:34:29,308
instrumentation environment so basically

614
00:34:26,290 --> 00:34:33,029
knowing these these features we try to

615
00:34:29,309 --> 00:34:36,909
identify the the instructions and the

616
00:34:33,030 --> 00:34:40,559
keywords that would allow an attacker to

617
00:34:36,909 --> 00:34:43,780
to perform these these actions we

618
00:34:40,559 --> 00:34:47,790
identified basically the code constructs

619
00:34:43,780 --> 00:34:53,290
that would perform these these features

620
00:34:47,790 --> 00:34:56,259
and actually as as I was stating earlier

621
00:34:53,290 --> 00:34:59,130
we don't look for certain instructions

622
00:34:56,260 --> 00:35:02,260
but actual code constructions how the

623
00:34:59,130 --> 00:35:05,020
semantics are used and where the

624
00:35:02,260 --> 00:35:08,680
instructions are placed in in the in the

625
00:35:05,020 --> 00:35:10,820
script or HTML page and how that might

626
00:35:08,680 --> 00:35:17,419
affect the

627
00:35:10,820 --> 00:35:19,820
specifics of the of that certain GOM for

628
00:35:17,420 --> 00:35:22,070
instance to perform resurrection the

629
00:35:19,820 --> 00:35:25,460
attacker needs either meta refresh tags

630
00:35:22,070 --> 00:35:29,930
iframes location.href window open

631
00:35:25,460 --> 00:35:31,700
etc to execute the resurrection the

632
00:35:29,930 --> 00:35:36,259
attacker needs instructions such as

633
00:35:31,700 --> 00:35:38,330
document.write Eva etc to perform of

634
00:35:36,260 --> 00:35:40,160
fisk asian the cone is to cycle through

635
00:35:38,330 --> 00:35:43,520
large chunks of data and apply

636
00:35:40,160 --> 00:35:45,920
transformations on the data basically to

637
00:35:43,520 --> 00:35:48,770
conceal the fact that they attack the

638
00:35:45,920 --> 00:35:53,150
attacker the users of a website they

639
00:35:48,770 --> 00:35:55,660
need to encrypt that to decrypt that

640
00:35:53,150 --> 00:35:59,570
they need to have a very large chunk of

641
00:35:55,660 --> 00:36:02,120
so-called trash that would get

642
00:35:59,570 --> 00:36:05,660
transformed in such a way that is easily

643
00:36:02,120 --> 00:36:08,450
interpreted by the JIT of the of the

644
00:36:05,660 --> 00:36:10,279
certain browser so that it totally makes

645
00:36:08,450 --> 00:36:15,049
sense but it doesn't raise any any

646
00:36:10,280 --> 00:36:19,340
suspicions so we we decided to score

647
00:36:15,050 --> 00:36:22,580
large variables or many variables or

648
00:36:19,340 --> 00:36:24,500
large function parameters we score

649
00:36:22,580 --> 00:36:27,710
transformation instructions such as

650
00:36:24,500 --> 00:36:31,310
charcoal death from charcoal unescape

651
00:36:27,710 --> 00:36:35,420
etc but they are this is just an example

652
00:36:31,310 --> 00:36:38,360
there are many more also the score

653
00:36:35,420 --> 00:36:40,850
increases a lot if they are present

654
00:36:38,360 --> 00:36:43,490
inside the inside loops for instance if

655
00:36:40,850 --> 00:36:47,299
there is a cycle that applies

656
00:36:43,490 --> 00:36:51,370
transformations we try to take into

657
00:36:47,300 --> 00:36:55,130
account how how big the the cycle is and

658
00:36:51,370 --> 00:36:58,940
as big the cycle is the highest score it

659
00:36:55,130 --> 00:37:01,270
it gets the score also increases is

660
00:36:58,940 --> 00:37:03,880
there are multiple multiple instances of

661
00:37:01,270 --> 00:37:06,860
transformation instructions for instance

662
00:37:03,880 --> 00:37:10,960
in order to to apply multi layered

663
00:37:06,860 --> 00:37:14,810
encryptions they use certain different

664
00:37:10,960 --> 00:37:17,780
instructions in the in the same code if

665
00:37:14,810 --> 00:37:21,000
we see many transformation instructions

666
00:37:17,780 --> 00:37:23,280
in the same code or many

667
00:37:21,000 --> 00:37:27,840
iteration instructions in the same code

668
00:37:23,280 --> 00:37:29,030
we increase the the scoring also we're

669
00:37:27,840 --> 00:37:32,460
looking for delay the execution

670
00:37:29,030 --> 00:37:34,470
instructions such as I said timeout or

671
00:37:32,460 --> 00:37:37,380
instructions expecting user interactions

672
00:37:34,470 --> 00:37:40,200
such as almost over all mouse click or

673
00:37:37,380 --> 00:37:43,470
on mouse leave these instructions are

674
00:37:40,200 --> 00:37:47,339
very useful for an attacker to identify

675
00:37:43,470 --> 00:37:50,750
if if it's an analyze DCC system or an

676
00:37:47,340 --> 00:37:54,000
actual user who browse the the website

677
00:37:50,750 --> 00:37:58,440
we also score instructions checking for

678
00:37:54,000 --> 00:38:02,369
user agent or other other features that

679
00:37:58,440 --> 00:38:06,240
could give the attacker an idea on what

680
00:38:02,369 --> 00:38:09,960
technologies are used on the under

681
00:38:06,240 --> 00:38:14,419
certain browser and how they can exploit

682
00:38:09,960 --> 00:38:18,869
the user that access the watering hole

683
00:38:14,420 --> 00:38:21,990
so we're checking for instructions that

684
00:38:18,869 --> 00:38:24,780
look for the local IP address either the

685
00:38:21,990 --> 00:38:30,950
internal IP address or the external IP

686
00:38:24,780 --> 00:38:30,950
address there are very many cases when

687
00:38:31,730 --> 00:38:37,710
this is only used to communicate with

688
00:38:35,339 --> 00:38:42,150
the command and control server saying ok

689
00:38:37,710 --> 00:38:46,470
this IP address is of interest or not ok

690
00:38:42,150 --> 00:38:49,339
let it go so we we take that into

691
00:38:46,470 --> 00:38:53,040
account when we analyze the the

692
00:38:49,339 --> 00:38:55,259
JavaScript or the HTML also we're

693
00:38:53,040 --> 00:38:59,609
looking for instructions for instance

694
00:38:55,260 --> 00:39:02,670
looking for the window size as we stated

695
00:38:59,609 --> 00:39:06,119
previously the window size is used to

696
00:39:02,670 --> 00:39:09,839
determine as one factor used to

697
00:39:06,119 --> 00:39:11,910
determine if the analyzes environment is

698
00:39:09,839 --> 00:39:17,820
present or if it's a normal user

699
00:39:11,910 --> 00:39:20,279
browsing the the website also we score

700
00:39:17,820 --> 00:39:23,280
certain other features that we we have

701
00:39:20,280 --> 00:39:24,800
seen in the malicious JavaScript such as

702
00:39:23,280 --> 00:39:30,210
the concatenation

703
00:39:24,800 --> 00:39:33,240
we also score encoding of payloads as we

704
00:39:30,210 --> 00:39:38,290
have seen earlier there was

705
00:39:33,240 --> 00:39:41,680
encoded with hacks etc we also score

706
00:39:38,290 --> 00:39:45,460
white spaces because in malicious

707
00:39:41,680 --> 00:39:49,980
JavaScript there are not so many white

708
00:39:45,460 --> 00:39:54,420
spaces but in legitimate JavaScript

709
00:39:49,980 --> 00:39:58,470
usually there are a lot of white spaces

710
00:39:54,420 --> 00:40:01,450
because this is one of the way the

711
00:39:58,470 --> 00:40:01,990
JavaScript should should look we also

712
00:40:01,450 --> 00:40:04,930
score

713
00:40:01,990 --> 00:40:09,520
the new lines inserted in each

714
00:40:04,930 --> 00:40:14,310
JavaScript also we we score shell code

715
00:40:09,520 --> 00:40:17,800
looking snippet we also can identify

716
00:40:14,310 --> 00:40:21,790
attacks on the Java compiler through

717
00:40:17,800 --> 00:40:24,490
this - this approach and everything gets

718
00:40:21,790 --> 00:40:27,910
compiled in data set with more than 30

719
00:40:24,490 --> 00:40:32,080
features and all these features are

720
00:40:27,910 --> 00:40:35,350
unique to malicious HTML elements there

721
00:40:32,080 --> 00:40:37,990
are cases when legitimate HTML elements

722
00:40:35,350 --> 00:40:40,960
or scripts might use some of these

723
00:40:37,990 --> 00:40:43,390
features but not in the correlations

724
00:40:40,960 --> 00:40:46,450
present in the in the data set for

725
00:40:43,390 --> 00:40:49,560
instance there might be some legitimate

726
00:40:46,450 --> 00:40:53,439
- scripts that perform the affiliation

727
00:40:49,560 --> 00:40:57,490
for instance in the contact pages or

728
00:40:53,440 --> 00:41:01,630
something like this but the length of

729
00:40:57,490 --> 00:41:05,020
the decoded string is not as large in as

730
00:41:01,630 --> 00:41:09,580
it is in in in the case of a watering

731
00:41:05,020 --> 00:41:11,560
hole attack the result of data set is

732
00:41:09,580 --> 00:41:16,240
fed to a random forest classification

733
00:41:11,560 --> 00:41:17,620
algorithm because a random forest uses a

734
00:41:16,240 --> 00:41:20,350
collection of trees with a random

735
00:41:17,620 --> 00:41:22,870
parameter holdout to build models which

736
00:41:20,350 --> 00:41:25,960
in many cases outperformed individual

737
00:41:22,870 --> 00:41:30,100
decision trees this gives us increased

738
00:41:25,960 --> 00:41:34,930
analyzed speed we can analyze like 1

739
00:41:30,100 --> 00:41:37,270
million URLs in the in 24 hours also the

740
00:41:34,930 --> 00:41:40,330
HTML elements like the species by the

741
00:41:37,270 --> 00:41:42,150
artificial intelligence are sent to a

742
00:41:40,330 --> 00:41:46,060
JavaScript instrumentation sandbox

743
00:41:42,150 --> 00:41:51,540
basically the artificial intelligence

744
00:41:46,060 --> 00:41:56,620
act as a filter to distinguish the

745
00:41:51,540 --> 00:41:59,529
potential suspicious elements from been

746
00:41:56,620 --> 00:42:02,310
ignorance so that the actual dynamic

747
00:41:59,530 --> 00:42:06,640
code analysis is performed only on

748
00:42:02,310 --> 00:42:10,029
elements that are showing great signs of

749
00:42:06,640 --> 00:42:12,970
maliciousness and in parallel they are

750
00:42:10,030 --> 00:42:15,610
sent to a JavaScript instrumentation

751
00:42:12,970 --> 00:42:17,680
sandbox which interprets every

752
00:42:15,610 --> 00:42:20,350
instruction and tries to emulate it but

753
00:42:17,680 --> 00:42:25,470
at the same time they are sent to a high

754
00:42:20,350 --> 00:42:28,810
interaction honeypot which executes the

755
00:42:25,470 --> 00:42:34,799
the HTML page or the JavaScript and

756
00:42:28,810 --> 00:42:40,330
looks for changes in the analyzes system

757
00:42:34,800 --> 00:42:43,390
this actually it's possible to integrate

758
00:42:40,330 --> 00:42:46,299
the the results flag by the artificial

759
00:42:43,390 --> 00:42:49,660
intelligence with any online or offline

760
00:42:46,300 --> 00:42:52,270
sandbox or analysis system and HTML

761
00:42:49,660 --> 00:42:54,339
elements flag the suspicious but not

762
00:42:52,270 --> 00:42:57,640
confirmed by the instrumentation sandbox

763
00:42:54,340 --> 00:43:00,970
or honeypot are submitted for manual

764
00:42:57,640 --> 00:43:07,109
analysis by a human analyst so that he

765
00:43:00,970 --> 00:43:11,080
can decide ok this is something actually

766
00:43:07,110 --> 00:43:14,950
weird going on there or no this is a

767
00:43:11,080 --> 00:43:17,350
totally banning let it let it go and as

768
00:43:14,950 --> 00:43:20,710
soon as the false positive is is

769
00:43:17,350 --> 00:43:23,200
detected that false positive is used to

770
00:43:20,710 --> 00:43:27,790
further train the artificial

771
00:43:23,200 --> 00:43:33,460
intelligence algorithm so we started

772
00:43:27,790 --> 00:43:38,020
decadence in 2016 and after two years

773
00:43:33,460 --> 00:43:43,630
that ken has became a startup part of

774
00:43:38,020 --> 00:43:48,400
the orange faboo startup accelerator we

775
00:43:43,630 --> 00:43:50,980
did not foresee that at some point some

776
00:43:48,400 --> 00:43:54,400
someone would be I would show this great

777
00:43:50,980 --> 00:43:59,470
interest to to dakinis but

778
00:43:54,400 --> 00:44:03,310
we have since November 2018 we have had

779
00:43:59,470 --> 00:44:07,299
a lot of requests to use our our

780
00:44:03,310 --> 00:44:09,540
services thank you guys this was my

781
00:44:07,300 --> 00:44:09,540
presentation

