1
00:00:01,350 --> 00:00:10,259
so hello opcode hello Dubai first of all

2
00:00:06,320 --> 00:00:12,240
order of business I'd like to extend the

3
00:00:10,259 --> 00:00:15,929
warmest thanks to everybody that stuck

4
00:00:12,240 --> 00:00:19,380
around up until now I know that no

5
00:00:15,929 --> 00:00:22,380
matter how entertaining or educational

6
00:00:19,380 --> 00:00:24,599
conferences it's very difficult to stay

7
00:00:22,380 --> 00:00:30,390
up until the last talks so you guys are

8
00:00:24,599 --> 00:00:33,120
the real MVP okay so today we're going

9
00:00:30,390 --> 00:00:36,629
to talk about a sort of a still

10
00:00:33,120 --> 00:00:38,760
non-traditional way of hacking stuff I'm

11
00:00:36,629 --> 00:00:42,019
sure you're familiar with the way IITs

12
00:00:38,760 --> 00:00:44,629
are hacked today brute-force telnet

13
00:00:42,020 --> 00:00:49,250
command injection in a web interface

14
00:00:44,629 --> 00:00:57,899
stuff like that right right

15
00:00:49,250 --> 00:01:00,149
thank you so let's start with IOT now

16
00:00:57,899 --> 00:01:01,739
there isn't this slide is in in my deck

17
00:01:00,149 --> 00:01:04,140
is because every now and then whenever I

18
00:01:01,739 --> 00:01:08,090
go places people tell me that they don't

19
00:01:04,140 --> 00:01:15,810
embrace IOT so how many of you are

20
00:01:08,090 --> 00:01:19,200
adopters of IOT okay so let's take a

21
00:01:15,810 --> 00:01:23,220
random example user you're not an

22
00:01:19,200 --> 00:01:26,220
adapter or variety right oh you are so

23
00:01:23,220 --> 00:01:30,360
who isn't who doesn't own smart devices

24
00:01:26,220 --> 00:01:34,680
Matt now I think with allottee is that

25
00:01:30,360 --> 00:01:37,680
it's not optional you cannot not use IOT

26
00:01:34,680 --> 00:01:39,990
it gradually creeps up in your life

27
00:01:37,680 --> 00:01:42,479
without people acknowledging it I mean

28
00:01:39,990 --> 00:01:44,820
we used to have done tea visits now all

29
00:01:42,479 --> 00:01:45,899
the TV sets are smart and pretty soon

30
00:01:44,820 --> 00:01:48,508
you're not going to have the option to

31
00:01:45,899 --> 00:01:50,909
not purchase a smart TV right we used to

32
00:01:48,509 --> 00:01:52,229
have parallel port printers for people

33
00:01:50,909 --> 00:01:54,899
who remembers like 20 years ago

34
00:01:52,229 --> 00:01:57,210
then usb-connected printers and now all

35
00:01:54,899 --> 00:01:58,680
the printers are network connected and I

36
00:01:57,210 --> 00:02:01,798
have a small operating system and a

37
00:01:58,680 --> 00:02:03,090
small telnet interface and a small you

38
00:02:01,799 --> 00:02:05,039
know web interface with no

39
00:02:03,090 --> 00:02:08,130
authentication and all that good stuff

40
00:02:05,039 --> 00:02:10,729
and this is going to gradually continue

41
00:02:08,130 --> 00:02:13,560
on this path it makes our lives easier

42
00:02:10,729 --> 00:02:14,910
automating stuff monitoring stuff it

43
00:02:13,560 --> 00:02:16,890
also makes the produce

44
00:02:14,910 --> 00:02:19,290
life easier because they monitor our

45
00:02:16,890 --> 00:02:23,160
behavior and it enables them to sell

46
00:02:19,290 --> 00:02:26,040
better to us right like your Fitbit and

47
00:02:23,160 --> 00:02:30,840
all that stuff so let's look at the IOT

48
00:02:26,040 --> 00:02:35,070
stack what if I told you that an IOT is

49
00:02:30,840 --> 00:02:40,430
very similar to a WordPress website can

50
00:02:35,070 --> 00:02:47,190
anybody here tell me why come on right

51
00:02:40,430 --> 00:02:48,930
so IIT is like a WordPress website well

52
00:02:47,190 --> 00:02:53,730
the quality of code is bad everywhere

53
00:02:48,930 --> 00:02:57,120
but good point five points for trying so

54
00:02:53,730 --> 00:02:58,829
let's look at this we have does anybody

55
00:02:57,120 --> 00:03:08,070
here is anybody here old enough to

56
00:02:58,830 --> 00:03:10,230
remember this Matt buzz so yeah hardware

57
00:03:08,070 --> 00:03:14,579
we have a Linux operating system record

58
00:03:10,230 --> 00:03:21,209
6.2 and whoo FTP D server also known as

59
00:03:14,580 --> 00:03:24,180
providing root access since 1996 another

60
00:03:21,210 --> 00:03:29,130
stack hardware operating system Windows

61
00:03:24,180 --> 00:03:33,720
and is 5.0 another stack we have

62
00:03:29,130 --> 00:03:36,840
hardware Windows RDP now think of

63
00:03:33,720 --> 00:03:38,820
similarities between these okay on

64
00:03:36,840 --> 00:03:42,540
others that we have Hardware whatever

65
00:03:38,820 --> 00:03:44,609
operating system Joomla now we have

66
00:03:42,540 --> 00:03:48,989
Hardware operating system and an

67
00:03:44,610 --> 00:03:51,750
application layer right and very often

68
00:03:48,990 --> 00:03:54,510
in the case of IOT it's that application

69
00:03:51,750 --> 00:03:56,810
layer that gets exploited now in the

70
00:03:54,510 --> 00:04:01,850
case of IOT we have Hardware busybox

71
00:03:56,810 --> 00:04:05,520
application layer cloud and mobile app

72
00:04:01,850 --> 00:04:07,590
which essentially means that because

73
00:04:05,520 --> 00:04:10,770
that application layer on IIT is always

74
00:04:07,590 --> 00:04:13,050
but always a web service susceptible to

75
00:04:10,770 --> 00:04:15,720
the exploits of web services like my

76
00:04:13,050 --> 00:04:17,579
rejection all that stuff but the main

77
00:04:15,720 --> 00:04:19,920
difference between websites is that I

78
00:04:17,579 --> 00:04:21,918
our T's have a larger attack surface

79
00:04:19,920 --> 00:04:24,300
because they also have a mobile app

80
00:04:21,918 --> 00:04:26,789
which is part of the attack surface and

81
00:04:24,300 --> 00:04:28,990
also have cloud which is also part of

82
00:04:26,790 --> 00:04:31,250
the attack surface

83
00:04:28,990 --> 00:04:33,050
so for those of you who want to get into

84
00:04:31,250 --> 00:04:37,240
IOT hacking we're just gonna go very

85
00:04:33,050 --> 00:04:37,240
briefly through the things to look for

86
00:04:37,360 --> 00:04:43,639
so software telnet is still a thing in

87
00:04:41,090 --> 00:04:48,198
2019 if you go on shore and it's like 6

88
00:04:43,639 --> 00:04:49,910
million telex service is running look be

89
00:04:48,199 --> 00:04:52,220
the mobile app and device communication

90
00:04:49,910 --> 00:04:53,539
because very often you can emulate the

91
00:04:52,220 --> 00:04:56,840
behavior of the mobile app but very

92
00:04:53,539 --> 00:04:58,490
often the mobile app calls functions in

93
00:04:56,840 --> 00:05:00,109
that web service that call system

94
00:04:58,490 --> 00:05:03,500
commands so you can achieve command

95
00:05:00,110 --> 00:05:06,080
ejection you look for directory

96
00:05:03,500 --> 00:05:07,280
traversal buffer overflows an important

97
00:05:06,080 --> 00:05:10,580
thing to mention I'm sure you're

98
00:05:07,280 --> 00:05:13,059
familiar with a SLR so a SLR was

99
00:05:10,580 --> 00:05:15,258
implemented in order to prevent

100
00:05:13,060 --> 00:05:17,860
predictable code execution when

101
00:05:15,259 --> 00:05:21,620
achieving a buffer overflow right

102
00:05:17,860 --> 00:05:23,000
because the the executable would be

103
00:05:21,620 --> 00:05:24,229
loaded the different memory addresses

104
00:05:23,000 --> 00:05:26,720
the functions would be a different

105
00:05:24,229 --> 00:05:28,340
memory addresses at after each reboot so

106
00:05:26,720 --> 00:05:29,930
you wouldn't have a you wouldn't know

107
00:05:28,340 --> 00:05:31,698
where to inject your code after

108
00:05:29,930 --> 00:05:35,870
achieving the buffer overflow in the

109
00:05:31,699 --> 00:05:37,639
case of IOT a SLR is non-existent so

110
00:05:35,870 --> 00:05:39,979
even though a SLR is enabled in the

111
00:05:37,639 --> 00:05:42,289
operating system the binaries in IOT is

112
00:05:39,979 --> 00:05:45,080
literally all the IITs that we have

113
00:05:42,289 --> 00:05:47,780
investigated so far they're not compiled

114
00:05:45,080 --> 00:05:49,820
with support for SLR so there's the flag

115
00:05:47,780 --> 00:05:52,880
pi stands for position independent

116
00:05:49,820 --> 00:05:55,099
executable no binary on IITs compiled

117
00:05:52,880 --> 00:05:56,469
with a PI flag enabled so that means

118
00:05:55,099 --> 00:05:58,460
that if you achieve a buffer overflow

119
00:05:56,469 --> 00:06:03,380
you're going to have a predictable

120
00:05:58,460 --> 00:06:05,840
memory address for code injection worth

121
00:06:03,380 --> 00:06:07,430
mentioning a lot of different vendors

122
00:06:05,840 --> 00:06:10,190
share the same code we did a talk at Def

123
00:06:07,430 --> 00:06:12,979
Con a few years ago how to hack about

124
00:06:10,190 --> 00:06:15,440
200,000 devices different vendors but

125
00:06:12,979 --> 00:06:17,360
the same the same former so once we

126
00:06:15,440 --> 00:06:19,460
found vulnerabilities in that firmware

127
00:06:17,360 --> 00:06:22,210
then you can literally hack all those

128
00:06:19,460 --> 00:06:24,590
brands that were based on that former

129
00:06:22,210 --> 00:06:26,690
backdoors credential reuse privately use

130
00:06:24,590 --> 00:06:28,460
cloud chatter we're not going to spend

131
00:06:26,690 --> 00:06:31,070
too much time on this because we want to

132
00:06:28,460 --> 00:06:33,229
focus on the main topic of the day but

133
00:06:31,070 --> 00:06:37,010
if you have questions on this save them

134
00:06:33,229 --> 00:06:39,080
for the for the end of the talk so I

135
00:06:37,010 --> 00:06:41,000
think it's important to also mention if

136
00:06:39,080 --> 00:06:42,330
you have no way to hack the device in

137
00:06:41,000 --> 00:06:44,639
the initial steps

138
00:06:42,330 --> 00:06:46,830
a very efficient way to get access to

139
00:06:44,639 --> 00:06:50,159
the to the file system is by doing

140
00:06:46,830 --> 00:06:52,770
bootloader hijack I'm sure that many of

141
00:06:50,159 --> 00:06:54,930
you are familiar with the way to to get

142
00:06:52,770 --> 00:06:57,719
access back to a Linux system right by

143
00:06:54,930 --> 00:07:00,060
hijacking group you just hijack group

144
00:06:57,720 --> 00:07:03,180
pass the parameters to the bootloader

145
00:07:00,060 --> 00:07:04,919
say in it equals beam bash insert also

146
00:07:03,180 --> 00:07:06,629
instead of the original in each script

147
00:07:04,919 --> 00:07:08,580
you get you know beam sh or something

148
00:07:06,629 --> 00:07:11,550
like that it's the same thing with IITs

149
00:07:08,580 --> 00:07:13,590
they have a bootloader it's down here

150
00:07:11,550 --> 00:07:15,270
and you can just pass all these

151
00:07:13,590 --> 00:07:17,280
parameters to the bootloader as long as

152
00:07:15,270 --> 00:07:18,960
you can interrupt it and in very often

153
00:07:17,280 --> 00:07:21,599
you just hook up to the serial interface

154
00:07:18,960 --> 00:07:25,859
and you can interrupt it and then you

155
00:07:21,599 --> 00:07:27,990
get a shell in the smart device and you

156
00:07:25,860 --> 00:07:31,759
can just grab all the files so you can

157
00:07:27,990 --> 00:07:36,599
analyze them offline on your computer I

158
00:07:31,759 --> 00:07:38,069
think also wanted to talk a little bit

159
00:07:36,599 --> 00:07:39,419
about the heuristic botnet so this is a

160
00:07:38,069 --> 00:07:41,370
botnet that we've been tracking with our

161
00:07:39,419 --> 00:07:43,378
honey pots and the reason it was

162
00:07:41,370 --> 00:07:46,949
interesting it was it didn't do anything

163
00:07:43,379 --> 00:07:48,750
it just grew it got to its peak it was

164
00:07:46,949 --> 00:07:52,169
about eight thousand eighty thousand

165
00:07:48,750 --> 00:07:54,210
victims but what was interesting was

166
00:07:52,169 --> 00:07:55,650
that it kept adding functionalities into

167
00:07:54,210 --> 00:07:58,318
it it had filed harvesting half the

168
00:07:55,650 --> 00:08:00,539
functionality it had X data exfiltration

169
00:07:58,319 --> 00:08:06,120
functionality it they added DDoS

170
00:08:00,539 --> 00:08:08,520
functionality at a later point it was

171
00:08:06,120 --> 00:08:11,009
peer-to-peer which meant that you could

172
00:08:08,520 --> 00:08:13,770
not kill the CNC and disable the entire

173
00:08:11,009 --> 00:08:15,960
botnet everything was propagated through

174
00:08:13,770 --> 00:08:18,060
the through the network it was actually

175
00:08:15,960 --> 00:08:21,330
using the HT so the the BitTorrent

176
00:08:18,060 --> 00:08:23,340
protocol to propagate commands to update

177
00:08:21,330 --> 00:08:26,008
to add new functionalities to add new

178
00:08:23,340 --> 00:08:28,049
files and so on and so forth and very

179
00:08:26,009 --> 00:08:31,110
interesting in October here added

180
00:08:28,050 --> 00:08:33,990
support for ADB so ADB Android debug

181
00:08:31,110 --> 00:08:35,820
bridge also has a network option where

182
00:08:33,990 --> 00:08:39,419
you can connect one Android machine via

183
00:08:35,820 --> 00:08:42,680
the network and we said nobody is stupid

184
00:08:39,419 --> 00:08:46,680
enough to have a network enabled ADB

185
00:08:42,679 --> 00:08:49,019
available in Internet but when we saw

186
00:08:46,680 --> 00:08:50,849
this added into into into hiding into

187
00:08:49,019 --> 00:08:52,500
the Hydra subordinate with that okay

188
00:08:50,850 --> 00:08:55,710
let's check it out anyway we meant to

189
00:08:52,500 --> 00:08:57,890
show down we port 5000

190
00:08:55,710 --> 00:09:00,360
and wouldn't generator like 7,000

191
00:08:57,890 --> 00:09:04,080
Android devices with ADB interfaces

192
00:09:00,360 --> 00:09:07,530
enabled Smart TVs kiosks maybe payment

193
00:09:04,080 --> 00:09:14,930
systems you know so yeah so actually a

194
00:09:07,530 --> 00:09:14,930
POS is from bars so because yeah why not

195
00:09:15,110 --> 00:09:19,800
again no no other activity other than

196
00:09:17,820 --> 00:09:21,210
spreading and adding functionality and

197
00:09:19,800 --> 00:09:24,479
our supposition is that it's used

198
00:09:21,210 --> 00:09:26,730
exclusively for testing new new

199
00:09:24,480 --> 00:09:28,490
functionalities for botnets now on to

200
00:09:26,730 --> 00:09:30,800
the main topic

201
00:09:28,490 --> 00:09:36,180
Godzilla's mark home security camera

202
00:09:30,800 --> 00:09:39,449
these are the culprits it's smart guard

203
00:09:36,180 --> 00:09:44,579
for your wall it's a security camera and

204
00:09:39,450 --> 00:09:46,710
the little guys here in serum so the

205
00:09:44,580 --> 00:09:49,680
first thing that we did we studied the

206
00:09:46,710 --> 00:09:52,290
mobile app behavior we we saw that it

207
00:09:49,680 --> 00:09:55,560
was talking to an API on the guardzilla

208
00:09:52,290 --> 00:09:57,180
website on the gardulla cloud and I

209
00:09:55,560 --> 00:10:00,000
think this is one of those moments when

210
00:09:57,180 --> 00:10:01,560
I tell you about this new vector of

211
00:10:00,000 --> 00:10:02,520
attack again smart devices because it's

212
00:10:01,560 --> 00:10:03,959
really really cold

213
00:10:02,520 --> 00:10:05,970
guardzilla is not the only ones that

214
00:10:03,960 --> 00:10:08,280
we've managed to to break into through

215
00:10:05,970 --> 00:10:09,960
this so traditionally it's like

216
00:10:08,280 --> 00:10:11,850
point-and-shoot you have an IP address

217
00:10:09,960 --> 00:10:13,470
with some open ports and then you find

218
00:10:11,850 --> 00:10:15,420
some vulnerabilities and you exploit

219
00:10:13,470 --> 00:10:16,860
them and you break in but what if you

220
00:10:15,420 --> 00:10:19,050
don't have direct access to the machine

221
00:10:16,860 --> 00:10:21,720
what if you don't have any kind of open

222
00:10:19,050 --> 00:10:24,990
ports to get into what if that

223
00:10:21,720 --> 00:10:27,600
particular target is behind NAT no port

224
00:10:24,990 --> 00:10:31,560
forwarding nothing like that you use the

225
00:10:27,600 --> 00:10:33,900
cloud you relay all your stuff all your

226
00:10:31,560 --> 00:10:35,250
dirt all your buffer overflow is all of

227
00:10:33,900 --> 00:10:39,090
your command injection through the

228
00:10:35,250 --> 00:10:41,730
devices cloud because the cloud is an

229
00:10:39,090 --> 00:10:44,580
input to the device as well right

230
00:10:41,730 --> 00:10:46,530
there's functions in the code of the

231
00:10:44,580 --> 00:10:48,870
device that parse information that comes

232
00:10:46,530 --> 00:10:50,939
from the cloud so if you can trick the

233
00:10:48,870 --> 00:10:52,140
cloud into relaying dirt to those

234
00:10:50,940 --> 00:10:53,790
functions and those functions are

235
00:10:52,140 --> 00:10:58,410
vulnerable you're going to achieve

236
00:10:53,790 --> 00:10:59,819
command execution so it's pretty cool we

237
00:10:58,410 --> 00:11:00,360
also did it with a power outlet from

238
00:10:59,820 --> 00:11:03,540
edimax

239
00:11:00,360 --> 00:11:05,490
same stuff full connect back shell from

240
00:11:03,540 --> 00:11:08,029
behind NAT so hacking it from Nepal

241
00:11:05,490 --> 00:11:13,079
power of attorney Nia

242
00:11:08,029 --> 00:11:16,979
so after the first after you registered

243
00:11:13,079 --> 00:11:19,498
the account your assigned user ID hours

244
00:11:16,979 --> 00:11:24,689
is four hundred and thousand and eight

245
00:11:19,499 --> 00:11:30,509
three hundred and eleven and come to the

246
00:11:24,689 --> 00:11:33,719
fun part it cannot be changed and it's

247
00:11:30,509 --> 00:11:35,279
incremented by one for each account and

248
00:11:33,720 --> 00:11:36,299
actually I could stop the presentation

249
00:11:35,279 --> 00:11:39,149
right here

250
00:11:36,299 --> 00:11:40,829
because everything is dependent on this

251
00:11:39,149 --> 00:11:43,349
user accounts the form of authentication

252
00:11:40,829 --> 00:11:44,998
that's being used the only actually

253
00:11:43,349 --> 00:11:47,519
valid form of authentication that

254
00:11:44,999 --> 00:11:49,259
Godzilla uses in their cloud to validate

255
00:11:47,519 --> 00:11:51,989
interaction with the devices is this

256
00:11:49,259 --> 00:11:53,399
user ID and the reason it's called the

257
00:11:51,989 --> 00:11:55,259
talk is called hacking four hundred and

258
00:11:53,399 --> 00:11:56,519
fifty thousand devices is because the

259
00:11:55,259 --> 00:11:59,459
number is actually much bigger than that

260
00:11:56,519 --> 00:12:01,470
right now this user ID is at about four

261
00:11:59,459 --> 00:12:04,018
hundred and ninety eight thousand and

262
00:12:01,470 --> 00:12:11,539
each user ID can have multiple cameras

263
00:12:04,019 --> 00:12:11,539
associated with it also

264
00:12:15,060 --> 00:12:24,250
the posts are encrypted with AES 256 cbc

265
00:12:20,340 --> 00:12:26,230
however the encryption key and the

266
00:12:24,250 --> 00:12:30,820
initial AC initialization vector are

267
00:12:26,230 --> 00:12:33,370
hard-coded in the app so yeah and did i

268
00:12:30,820 --> 00:12:36,250
mention that the UID is sequential so we

269
00:12:33,370 --> 00:12:37,600
wrote a script that essentially tries to

270
00:12:36,250 --> 00:12:40,510
pull information from the guardzilla

271
00:12:37,600 --> 00:12:44,070
cloud to see what can be seen about a

272
00:12:40,510 --> 00:12:46,450
device so with that in mind let's see

273
00:12:44,070 --> 00:12:52,630
we're just going to use our own user ID

274
00:12:46,450 --> 00:12:53,200
and i actually got a wine liner here

275
00:12:52,630 --> 00:12:56,490
someplace

276
00:12:53,200 --> 00:12:56,490
not this one

277
00:12:57,210 --> 00:13:00,429
[Music]

278
00:13:43,990 --> 00:13:52,610
so what we have here we just the only

279
00:13:46,670 --> 00:13:55,128
parameter that we used is this 4 8 0 8 3

280
00:13:52,610 --> 00:13:58,220
1 1 the guardzilla is already this

281
00:13:55,129 --> 00:14:00,709
password these two are hard-coded are

282
00:13:58,220 --> 00:14:02,720
the same everywhere so we don't even

283
00:14:00,709 --> 00:14:04,279
worry about this we just reuse them we

284
00:14:02,720 --> 00:14:05,990
extracted them from the mobile app and

285
00:14:04,279 --> 00:14:09,170
we're just reusing them for all the user

286
00:14:05,990 --> 00:14:13,160
IDs ok so the only thing that changes is

287
00:14:09,170 --> 00:14:19,490
this number for away 3 1 1 and we get

288
00:14:13,160 --> 00:14:22,610
back that I have 2 cameras ok one called

289
00:14:19,490 --> 00:14:25,819
bug boy with this UID and this isn't

290
00:14:22,610 --> 00:14:26,509
going to be reused later and the other

291
00:14:25,819 --> 00:14:30,229
one called

292
00:14:26,509 --> 00:14:32,660
tiny bug with this user ID so it's that

293
00:14:30,230 --> 00:14:34,459
simple and again just change the number

294
00:14:32,660 --> 00:14:36,139
3 1 1 2 something else and you're going

295
00:14:34,459 --> 00:14:39,050
to get the details from somebody else's

296
00:14:36,139 --> 00:14:45,079
house bedroom bathroom and so on and so

297
00:14:39,050 --> 00:14:47,420
forth and obviously a scary thing is

298
00:14:45,079 --> 00:14:49,339
that these people while we were doing

299
00:14:47,420 --> 00:14:53,029
the analysis we had some point realized

300
00:14:49,339 --> 00:14:57,049
that these are so goddamn broken that

301
00:14:53,029 --> 00:15:01,129
anybody could have snooped on us while

302
00:14:57,049 --> 00:15:03,049
we were doing the research so so we

303
00:15:01,129 --> 00:15:08,629
actually came to this realization like a

304
00:15:03,049 --> 00:15:10,790
few days in and we like oh oh ok so

305
00:15:08,629 --> 00:15:13,369
tapes everywhere on the microphone and

306
00:15:10,790 --> 00:15:16,099
on the camera on everything because you

307
00:15:13,369 --> 00:15:17,749
can just see and you know manipulate

308
00:15:16,100 --> 00:15:22,069
these things in any way you want right

309
00:15:17,749 --> 00:15:26,389
so again this is a beautiful version

310
00:15:22,069 --> 00:15:29,809
with JQ of that JSON and from this we're

311
00:15:26,389 --> 00:15:32,089
going to remember the device ID so v PK

312
00:15:29,809 --> 00:15:37,699
black claw Plock and this password admin

313
00:15:32,089 --> 00:15:39,709
you cannot change this so for a full

314
00:15:37,699 --> 00:15:43,399
account takeover we're just we just

315
00:15:39,709 --> 00:15:45,589
explored the API you can call upon the

316
00:15:43,399 --> 00:15:47,449
API to change the user's password change

317
00:15:45,589 --> 00:15:49,220
the user's email and get a full account

318
00:15:47,449 --> 00:15:51,319
a color arguably that's going to give

319
00:15:49,220 --> 00:15:53,779
you away and the user is going to know

320
00:15:51,319 --> 00:15:56,059
that you did something you know to steal

321
00:15:53,779 --> 00:15:59,589
their cameras and you don't want that so

322
00:15:56,059 --> 00:16:02,419
this is not that interesting however

323
00:15:59,589 --> 00:16:04,970
this is more interesting there is a

324
00:16:02,419 --> 00:16:09,589
function in guardzilla are called invite

325
00:16:04,970 --> 00:16:11,509
a friend in which you in theory from the

326
00:16:09,589 --> 00:16:14,959
mobile app you invite somebody to see

327
00:16:11,509 --> 00:16:18,919
your camera however if you do it just by

328
00:16:14,959 --> 00:16:20,929
calling upon the API the owner doesn't

329
00:16:18,919 --> 00:16:24,709
get any kind of naughty notification

330
00:16:20,929 --> 00:16:34,100
that they've sent an invite however the

331
00:16:24,709 --> 00:16:44,149
attacker gets this email so we're gonna

332
00:16:34,100 --> 00:16:47,329
try to do it now how am I on time lots

333
00:16:44,149 --> 00:16:56,559
of time cool so let's open the

334
00:16:47,329 --> 00:16:56,559
guardzilla up first and mirror my phone

335
00:17:24,560 --> 00:17:28,369
let's see what we'll see

336
00:17:31,360 --> 00:17:37,240
oh look I can accept this invite I just

337
00:17:35,260 --> 00:17:38,980
installed a mobile app and of course the

338
00:17:37,240 --> 00:17:40,649
different account then the owners and so

339
00:17:38,980 --> 00:17:44,529
on and so forth

340
00:17:40,649 --> 00:17:52,889
so now this is going to be in my

341
00:17:44,529 --> 00:17:52,890
camera's oh and there you guys are

342
00:17:54,659 --> 00:18:02,169
so and this is the easy way but just for

343
00:17:59,470 --> 00:18:05,830
the sake of it we also implemented a

344
00:18:02,169 --> 00:18:08,470
hard way to view the stream without

345
00:18:05,830 --> 00:18:13,059
invites or whatsoever or whatever so we

346
00:18:08,470 --> 00:18:15,340
just I'm not gonna put the slides just

347
00:18:13,059 --> 00:18:17,350
for the hell of it we implemented an

348
00:18:15,340 --> 00:18:21,689
emulator of the app that could just tap

349
00:18:17,350 --> 00:18:21,689
into the video stream and pipe it to VLC

350
00:19:05,400 --> 00:19:12,460
okay however you were promised next

351
00:19:09,760 --> 00:19:16,570
generation botnets not just peeping into

352
00:19:12,460 --> 00:19:18,010
people's bedrooms right so the first

353
00:19:16,570 --> 00:19:20,379
thing buffer overflow in the cloud

354
00:19:18,010 --> 00:19:24,340
reagent they use a platform called Cal a

355
00:19:20,380 --> 00:19:27,370
platform now in our research we've

356
00:19:24,340 --> 00:19:28,990
discovered that a lot of devices and we

357
00:19:27,370 --> 00:19:32,020
actually have something upcoming for

358
00:19:28,990 --> 00:19:33,610
this August they use this cally platform

359
00:19:32,020 --> 00:19:36,220
almost all of them and for all intents

360
00:19:33,610 --> 00:19:37,899
and purposes that platform is okay it's

361
00:19:36,220 --> 00:19:41,110
just the implementation in each vendor

362
00:19:37,900 --> 00:19:42,550
that's broken they have a combination of

363
00:19:41,110 --> 00:19:43,899
peer to peer relays and the whole

364
00:19:42,550 --> 00:19:46,000
purpose of the platform is that they

365
00:19:43,900 --> 00:19:46,660
provide if you implement their agent in

366
00:19:46,000 --> 00:19:48,370
your camera

367
00:19:46,660 --> 00:19:53,350
they provide natural Versalles so it can

368
00:19:48,370 --> 00:19:55,030
access the video feeds but we we did

369
00:19:53,350 --> 00:19:57,250
some code analysis we just put the

370
00:19:55,030 --> 00:19:59,559
binaries in either you know and try to

371
00:19:57,250 --> 00:20:03,010
generate some code and we find we found

372
00:19:59,559 --> 00:20:05,040
that especially crafted buffer can

373
00:20:03,010 --> 00:20:07,540
beside can be sent through the cloud

374
00:20:05,040 --> 00:20:11,770
really by the cloud into the device and

375
00:20:07,540 --> 00:20:13,809
you get predictable RC so remember this

376
00:20:11,770 --> 00:20:15,460
function TK said device model request

377
00:20:13,809 --> 00:20:20,770
handle and remember this function

378
00:20:15,460 --> 00:20:23,559
actually the case 0x 458 because this is

379
00:20:20,770 --> 00:20:28,690
our reference into relaying the command

380
00:20:23,559 --> 00:20:34,629
through the cloud we see here to string

381
00:20:28,690 --> 00:20:37,419
copy and we essentially overflow the

382
00:20:34,630 --> 00:20:40,340
first one get into the next one up until

383
00:20:37,419 --> 00:20:46,040
we reach system

384
00:20:40,340 --> 00:20:48,620
at 81 3 8 0 and long story short this is

385
00:20:46,040 --> 00:20:52,310
the almighty exploit you sent to the

386
00:20:48,620 --> 00:20:54,050
cloud a buffer with the commands with

387
00:20:52,310 --> 00:20:57,550
the proper size and don't get aget

388
00:20:54,050 --> 00:20:57,550
command execution and you have to call

389
00:20:57,820 --> 00:21:05,419
the that 0 X 4 0 0 5 8 which is the

390
00:21:03,680 --> 00:21:11,900
reference in the binary in the local

391
00:21:05,420 --> 00:21:15,050
binary on the camera so the memory will

392
00:21:11,900 --> 00:21:24,350
crash but only after the command is

393
00:21:15,050 --> 00:21:27,500
executed so let's try it and just to

394
00:21:24,350 --> 00:21:31,219
show that I'm not doing it locally I'm

395
00:21:27,500 --> 00:21:33,640
gonna do it from a remote server right

396
00:21:31,220 --> 00:21:33,640
so

397
00:21:54,480 --> 00:22:00,310
the parameters for the exploit for the

398
00:21:57,970 --> 00:22:01,750
world the one that we build it's simple

399
00:22:00,310 --> 00:22:03,669
it's just the device ID and the password

400
00:22:01,750 --> 00:22:05,380
the password is always admin and the

401
00:22:03,670 --> 00:22:09,520
device ID you can get with the initial

402
00:22:05,380 --> 00:22:17,710
query into the card Eli Pike and we have

403
00:22:09,520 --> 00:22:20,730
a listener set up here are assuming that

404
00:22:17,710 --> 00:22:20,730
internet connection works

405
00:22:25,380 --> 00:22:28,429
[Music]

406
00:22:28,610 --> 00:22:39,350
let's try it again let me see something

407
00:22:34,460 --> 00:22:50,809
else see it works better if they're

408
00:22:39,350 --> 00:22:52,340
powered on so to see some time up until

409
00:22:50,809 --> 00:22:56,990
they pick like couple minis to boot

410
00:22:52,340 --> 00:23:00,260
first round of questions so somebody

411
00:22:56,990 --> 00:23:02,330
asked if we notified the the car dealer

412
00:23:00,260 --> 00:23:06,529
people we notified them in August 2000

413
00:23:02,330 --> 00:23:08,480
18 they did reply then and then some guy

414
00:23:06,529 --> 00:23:10,610
published a vulnerability that we

415
00:23:08,480 --> 00:23:13,730
already knew about on some zero day

416
00:23:10,610 --> 00:23:16,729
forum it was not a very fancy

417
00:23:13,730 --> 00:23:20,179
vulnerability it was he found the key to

418
00:23:16,730 --> 00:23:21,409
the keys to an AWS bucket and he

419
00:23:20,179 --> 00:23:23,330
actually didn't find something much

420
00:23:21,409 --> 00:23:26,000
cooler about that AWS bucket which was

421
00:23:23,330 --> 00:23:28,129
that besides being readwrite it was also

422
00:23:26,000 --> 00:23:29,480
it also had a directory index so you

423
00:23:28,130 --> 00:23:32,539
could see all the recordings from all

424
00:23:29,480 --> 00:23:35,240
the people and that kind of forced our

425
00:23:32,539 --> 00:23:38,240
hand to publish our paper it was like

426
00:23:35,240 --> 00:23:39,919
November or December last year and when

427
00:23:38,240 --> 00:23:41,360
that happened I got a call from the

428
00:23:39,919 --> 00:23:44,690
director of product management from

429
00:23:41,360 --> 00:23:46,370
Godzilla and he said why did you publish

430
00:23:44,690 --> 00:23:48,980
but didn't you contact us well we tried

431
00:23:46,370 --> 00:23:51,350
and hear us asking you for the PGP keys

432
00:23:48,980 --> 00:23:53,480
and you're not replying we trying again

433
00:23:51,350 --> 00:23:55,459
on all those email addresses it's ok

434
00:23:53,480 --> 00:23:57,139
we're going to do better but I and asked

435
00:23:55,460 --> 00:23:58,490
did you do any kind of pen testing any

436
00:23:57,139 --> 00:24:01,939
kind of security audit before you

437
00:23:58,490 --> 00:24:06,200
publish the product and he said yes did

438
00:24:01,940 --> 00:24:08,240
you pay a lot of money for that so yeah

439
00:24:06,200 --> 00:24:10,870
I think that we're online so we're gonna

440
00:24:08,240 --> 00:24:10,870
try this again

441
00:24:20,620 --> 00:24:34,479
what do we have here so I ask you

442
00:24:32,260 --> 00:24:39,700
gentlemen is this not an easy way to

443
00:24:34,480 --> 00:24:40,960
create a botnet so we have shell rot

444
00:24:39,700 --> 00:24:45,789
shell on the big guy

445
00:24:40,960 --> 00:24:47,409
and just for the sake of it we're gonna

446
00:24:45,789 --> 00:24:50,400
get root shell on the little guy with a

447
00:24:47,409 --> 00:24:50,400
different vulnerability

448
00:24:50,850 --> 00:24:56,168
come on ejection so the guardzilla

449
00:24:53,950 --> 00:24:58,240
supports remote upgrade which

450
00:24:56,169 --> 00:25:01,179
essentially says you can send a string

451
00:24:58,240 --> 00:25:05,350
to the API telling guardzilla update by

452
00:25:01,179 --> 00:25:07,210
using this package from this URL and the

453
00:25:05,350 --> 00:25:09,250
only condition is that for to trigger

454
00:25:07,210 --> 00:25:10,690
that process is that the URL has to be

455
00:25:09,250 --> 00:25:12,370
valid but it doesn't have to have

456
00:25:10,690 --> 00:25:17,830
anything valid in it it just needs to be

457
00:25:12,370 --> 00:25:25,289
able to reach it oh yeah sure they do

458
00:25:17,830 --> 00:25:27,158
it's that user ID so the third one is

459
00:25:25,289 --> 00:25:30,090
concatenated we know in a tar archive

460
00:25:27,159 --> 00:25:32,799
and essentially the code looks like this

461
00:25:30,090 --> 00:25:38,860
now five points to the person that can

462
00:25:32,799 --> 00:25:42,899
spot the command injection hint it's

463
00:25:38,860 --> 00:25:42,899
blurred by a line in the TVs

464
00:25:46,700 --> 00:25:55,700
well yep so it's the tour comment

465
00:25:52,220 --> 00:25:57,830
executed with the system because if

466
00:25:55,700 --> 00:25:59,600
you're execute start you know executing

467
00:25:57,830 --> 00:26:01,399
tar on a Linux system you can just

468
00:25:59,600 --> 00:26:02,059
change the name in say my column

469
00:26:01,399 --> 00:26:05,059
something

470
00:26:02,059 --> 00:26:13,158
it ends star and continues with whatever

471
00:26:05,059 --> 00:26:15,789
you put after say my column so let's get

472
00:26:13,159 --> 00:26:23,200
another shell on a different machine

473
00:26:15,789 --> 00:26:23,200
don't dream to set up the listener

474
00:26:41,880 --> 00:26:47,010
she'll yet again so this is a shell on

475
00:26:46,260 --> 00:26:48,840
the little guy

476
00:26:47,010 --> 00:26:50,610
and actually if you guys want while I'm

477
00:26:48,840 --> 00:26:52,799
still on it if you guys want to run any

478
00:26:50,610 --> 00:26:55,879
kind of commands just tell me I will be

479
00:26:52,799 --> 00:26:55,879
happy to type them in for you

480
00:27:10,520 --> 00:27:15,740
ten megabytes of storage space usually

481
00:27:13,910 --> 00:27:23,560
they store the recording is on external

482
00:27:15,740 --> 00:27:23,560
storage and this is the mountable

483
00:27:28,760 --> 00:27:31,900
this is my shell

484
00:27:36,160 --> 00:27:40,680
okay sue

485
00:27:46,080 --> 00:27:52,540
Bono's AWS bucket the camera record

486
00:27:49,900 --> 00:27:54,310
videos in order to facilitate you know

487
00:27:52,540 --> 00:27:56,200
if you have a security camera and you

488
00:27:54,310 --> 00:27:57,700
want to review past recordings what

489
00:27:56,200 --> 00:27:59,920
happened yesterday five days ago right

490
00:27:57,700 --> 00:28:01,990
program the camera sends those

491
00:27:59,920 --> 00:28:04,030
recordings to a cloud and actually it

492
00:28:01,990 --> 00:28:05,770
asks for money much like the next

493
00:28:04,030 --> 00:28:07,149
business model or the r-la business

494
00:28:05,770 --> 00:28:09,940
model if you want to be able to access

495
00:28:07,150 --> 00:28:11,380
your recordings from 30 days ago from a

496
00:28:09,940 --> 00:28:12,820
place that can anybody anybody can

497
00:28:11,380 --> 00:28:14,710
access but you know people don't know

498
00:28:12,820 --> 00:28:15,460
that then you have to pay your

499
00:28:14,710 --> 00:28:17,560
subscription

500
00:28:15,460 --> 00:28:18,790
it's actually part of the setup flow as

501
00:28:17,560 --> 00:28:20,889
soon as you're done with the setup they

502
00:28:18,790 --> 00:28:23,590
ask you for money to access this AWS

503
00:28:20,890 --> 00:28:28,480
bucket little do their users know that

504
00:28:23,590 --> 00:28:30,909
you know fun fact it was rich right we

505
00:28:28,480 --> 00:28:32,890
got the keys and it also had directory

506
00:28:30,910 --> 00:28:35,020
index and also I think it's worth

507
00:28:32,890 --> 00:28:37,330
mentioning that out of all the things

508
00:28:35,020 --> 00:28:41,280
that have described now this is the only

509
00:28:37,330 --> 00:28:44,199
thing that I fixed the thing is the

510
00:28:41,280 --> 00:28:46,720
whole thing starts with that predictable

511
00:28:44,200 --> 00:28:48,580
UID because all the interactions that

512
00:28:46,720 --> 00:28:50,530
you have with your cloud have to do with

513
00:28:48,580 --> 00:28:52,810
other a device ID when you interact

514
00:28:50,530 --> 00:28:55,149
directly with the device all if you

515
00:28:52,810 --> 00:28:57,220
don't know that device ID you just query

516
00:28:55,150 --> 00:28:59,290
the user ID and that user ID gets you

517
00:28:57,220 --> 00:29:02,980
the device ID and since they've already

518
00:28:59,290 --> 00:29:05,260
assigned predictable you IDs to all of

519
00:29:02,980 --> 00:29:09,490
their users they're kind of have an

520
00:29:05,260 --> 00:29:12,460
architectural problem to change that so

521
00:29:09,490 --> 00:29:14,650
as of now lies like almost 500,000 user

522
00:29:12,460 --> 00:29:16,600
IDs which I don't know how many cameras

523
00:29:14,650 --> 00:29:18,130
associated with each one you can create

524
00:29:16,600 --> 00:29:20,439
all of them and get all that information

525
00:29:18,130 --> 00:29:24,730
get our series get access to the video

526
00:29:20,440 --> 00:29:28,420
feeds and so on and so forth so to sum

527
00:29:24,730 --> 00:29:35,560
up basically all the things that I've

528
00:29:28,420 --> 00:29:38,380
just said now s takeaways I think it's

529
00:29:35,560 --> 00:29:40,060
worth mentioning that IOT is and will

530
00:29:38,380 --> 00:29:43,450
continue to be a huge attack surface

531
00:29:40,060 --> 00:29:44,560
simply because from our research we've

532
00:29:43,450 --> 00:29:46,390
been doing this for the past four or

533
00:29:44,560 --> 00:29:49,240
five years right we had a lot of focus

534
00:29:46,390 --> 00:29:50,890
on ID and we were not looking at

535
00:29:49,240 --> 00:29:52,150
perimeter based attacks so we're not

536
00:29:50,890 --> 00:29:54,790
looking and things that you can hack in

537
00:29:52,150 --> 00:29:57,070
your house because those things are also

538
00:29:54,790 --> 00:29:58,720
fundamentally broken you can just stream

539
00:29:57,070 --> 00:29:59,169
stuff on a panasonic TV with our

540
00:29:58,720 --> 00:30:00,940
authentic

541
00:29:59,170 --> 00:30:04,630
for example but that's considered by

542
00:30:00,940 --> 00:30:06,490
design but we focus a lot on mass

543
00:30:04,630 --> 00:30:08,920
hacking on things that can be hard like

544
00:30:06,490 --> 00:30:13,060
hundreds of thousands and so on and so

545
00:30:08,920 --> 00:30:15,490
forth and other than companies like

546
00:30:13,060 --> 00:30:17,110
Google or or Amazon or Apple or company

547
00:30:15,490 --> 00:30:19,480
that we know are kind of security

548
00:30:17,110 --> 00:30:21,159
conscious and answers to bug bounties

549
00:30:19,480 --> 00:30:23,890
and have bug bounty programs and do

550
00:30:21,160 --> 00:30:27,010
proper pen testing on their stuff all

551
00:30:23,890 --> 00:30:28,870
the others had buffer overflows command

552
00:30:27,010 --> 00:30:31,510
injection blah blah blah blah blah and I

553
00:30:28,870 --> 00:30:34,989
think we only had one reply to our

554
00:30:31,510 --> 00:30:39,850
notification emails ever from a German

555
00:30:34,990 --> 00:30:43,510
company so props to the Germans you can

556
00:30:39,850 --> 00:30:45,730
leverage cloud the cloud to to inject

557
00:30:43,510 --> 00:30:47,650
commands and I think this is one if you

558
00:30:45,730 --> 00:30:49,060
want my suggestion this is this should

559
00:30:47,650 --> 00:30:52,540
be one of the key takeaways from this

560
00:30:49,060 --> 00:30:53,800
talk so rather than targeting and

561
00:30:52,540 --> 00:30:55,480
dropping the research on the device

562
00:30:53,800 --> 00:30:57,490
because you cannot directly access it

563
00:30:55,480 --> 00:30:58,750
try to study how the device interacts

564
00:30:57,490 --> 00:31:00,730
with the cloud what kind of inputs

565
00:30:58,750 --> 00:31:02,740
received from the cloud and see if you

566
00:31:00,730 --> 00:31:07,690
can trick it into receiving something

567
00:31:02,740 --> 00:31:09,750
evil or malicious so vendors need to pen

568
00:31:07,690 --> 00:31:11,500
test their products thoroughly and

569
00:31:09,750 --> 00:31:12,360
unfortunately obviously this is not

570
00:31:11,500 --> 00:31:14,920
happening

571
00:31:12,360 --> 00:31:17,110
run bug bounty programs is go to grad

572
00:31:14,920 --> 00:31:19,360
saying and have trappler and unattended

573
00:31:17,110 --> 00:31:21,729
update mechanism so some people ask me

574
00:31:19,360 --> 00:31:24,399
gee how do you know if a device is

575
00:31:21,730 --> 00:31:25,780
secure you know if you like just the

576
00:31:24,400 --> 00:31:27,220
first thing that comes to my how do I

577
00:31:25,780 --> 00:31:29,230
know if a device is secure because I

578
00:31:27,220 --> 00:31:31,780
don't have a lab you know I don't have

579
00:31:29,230 --> 00:31:33,430
like your team to do vulnerability

580
00:31:31,780 --> 00:31:34,870
research I don't know what Wireshark is

581
00:31:33,430 --> 00:31:36,310
I don't know what disappeared on Peas I

582
00:31:34,870 --> 00:31:38,649
don't know what whatever you know

583
00:31:36,310 --> 00:31:42,220
Curly's and all that stuff how do I know

584
00:31:38,650 --> 00:31:44,260
if a device is secure and the golden

585
00:31:42,220 --> 00:31:47,800
rule in my small world is look at the

586
00:31:44,260 --> 00:31:50,260
update mechanism inherently as we all

587
00:31:47,800 --> 00:31:52,360
know everything is flawed these

588
00:31:50,260 --> 00:31:54,670
vulnerabilities are discovered in all

589
00:31:52,360 --> 00:31:57,310
systems on a weekly basis on if not on

590
00:31:54,670 --> 00:31:59,020
daily basis or hourly basis it's all a

591
00:31:57,310 --> 00:32:01,510
matter of how that vulnerability is

592
00:31:59,020 --> 00:32:04,360
patched fixed and that fix delivered to

593
00:32:01,510 --> 00:32:06,490
the end users we identified a

594
00:32:04,360 --> 00:32:09,729
communication in the edimax Mart power

595
00:32:06,490 --> 00:32:12,590
outlet they published an update one year

596
00:32:09,730 --> 00:32:15,110
later I was in a big office

597
00:32:12,590 --> 00:32:18,649
and the CTO of that company huge company

598
00:32:15,110 --> 00:32:20,928
huge is somebody would say had that

599
00:32:18,649 --> 00:32:22,758
power outlet in in his house and he told

600
00:32:20,929 --> 00:32:25,490
me come on we're at my house are you

601
00:32:22,759 --> 00:32:28,460
sure yeah I'm not afraid of it dude are

602
00:32:25,490 --> 00:32:30,049
you sure yeah okay this is your Wi-Fi

603
00:32:28,460 --> 00:32:32,830
password these are the other devices in

604
00:32:30,049 --> 00:32:37,370
your house and we were in his offices in

605
00:32:32,830 --> 00:32:39,080
Minneapolis and as it turns out he had

606
00:32:37,370 --> 00:32:40,668
that power outlet edimax issue the

607
00:32:39,080 --> 00:32:42,699
update a year before that

608
00:32:40,669 --> 00:32:47,240
but he didn't apply it nobody applied it

609
00:32:42,700 --> 00:32:49,429
because when we saw the update for the

610
00:32:47,240 --> 00:32:52,220
aeramax power tilt in the mobile app you

611
00:32:49,429 --> 00:32:54,409
tap ok and then it takes you to an

612
00:32:52,220 --> 00:32:56,299
honorable non mobile-friendly website

613
00:32:54,409 --> 00:32:59,419
where you have to download a binary

614
00:32:56,299 --> 00:33:01,970
firmware file that you have to upload to

615
00:32:59,419 --> 00:33:03,769
the power outlet Rose such a complicated

616
00:33:01,970 --> 00:33:08,539
process that even us couldn't apply it

617
00:33:03,769 --> 00:33:11,299
to test the patch so the update

618
00:33:08,539 --> 00:33:13,940
mechanism uh nothing that updates is the

619
00:33:11,299 --> 00:33:15,110
key thing to look for in a device if you

620
00:33:13,940 --> 00:33:17,119
want to know if it's secure or not

621
00:33:15,110 --> 00:33:18,110
because people will patch stuff they're

622
00:33:17,119 --> 00:33:20,209
not that bad

623
00:33:18,110 --> 00:33:23,209
you know they reach out they outsource

624
00:33:20,210 --> 00:33:25,429
their whatever but being able to receive

625
00:33:23,210 --> 00:33:27,379
that patch is the most important thing

626
00:33:25,429 --> 00:33:31,070
and of course it's still trivial to get

627
00:33:27,379 --> 00:33:32,689
full RCS on our T's and with this this

628
00:33:31,070 --> 00:33:34,759
is how I finish all my talks on IIT I

629
00:33:32,690 --> 00:33:36,889
encourage the security community to to

630
00:33:34,759 --> 00:33:39,289
go and try to find vulnerabilities and

631
00:33:36,889 --> 00:33:41,269
our seeds that could compromise things

632
00:33:39,289 --> 00:33:42,649
on mass because otherwise the botnet

633
00:33:41,269 --> 00:33:44,929
people are going to get ahead of us and

634
00:33:42,649 --> 00:33:46,699
we're going to see me right me right

635
00:33:44,929 --> 00:33:48,590
version two I mean the whole thing with

636
00:33:46,700 --> 00:33:49,999
telnet and command injection and G pawn

637
00:33:48,590 --> 00:33:51,649
and all that stuff with Huawei and blah

638
00:33:49,999 --> 00:33:53,090
blah blah that's gonna finish probably

639
00:33:51,649 --> 00:33:54,408
in a couple of years telling it

640
00:33:53,090 --> 00:33:56,689
hopefully it's gonna finish before that

641
00:33:54,409 --> 00:33:58,159
and that's when the botnet creators are

642
00:33:56,690 --> 00:34:00,350
going to focus on the new things like

643
00:33:58,159 --> 00:34:03,139
this I mean this talk is going to go

644
00:34:00,350 --> 00:34:05,748
live probably at some point soon so

645
00:34:03,139 --> 00:34:07,309
they're gonna be inspired by this and so

646
00:34:05,749 --> 00:34:08,449
on and so forth so we need to expose as

647
00:34:07,309 --> 00:34:11,329
many of these types of vulnerabilities

648
00:34:08,449 --> 00:34:13,609
as possible and with that I thank you

649
00:34:11,329 --> 00:34:15,139
for sticking up for so long and I hope

650
00:34:13,609 --> 00:34:17,199
you enjoy this

651
00:34:15,139 --> 00:34:17,200
you

