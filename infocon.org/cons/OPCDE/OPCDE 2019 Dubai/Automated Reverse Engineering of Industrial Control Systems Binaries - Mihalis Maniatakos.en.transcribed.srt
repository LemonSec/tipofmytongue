1
00:00:01,089 --> 00:00:06,490
while in conference is as you get to go

2
00:00:04,689 --> 00:00:09,010
to more conference you realize typically

3
00:00:06,490 --> 00:00:10,870
they put the worst talks for the end so

4
00:00:09,010 --> 00:00:13,120
that's probably as a signal from Matt to

5
00:00:10,870 --> 00:00:15,549
me that he didn't expect much so I'll

6
00:00:13,120 --> 00:00:17,259
try my best to for next year to be one

7
00:00:15,549 --> 00:00:22,000
of the first to talk not the last one to

8
00:00:17,260 --> 00:00:23,530
talk so in any case I need to do

9
00:00:22,000 --> 00:00:25,930
introduction everybody has been doing I

10
00:00:23,530 --> 00:00:27,910
don't have a slide for it and I after

11
00:00:25,930 --> 00:00:30,250
watching the presentations I realized I

12
00:00:27,910 --> 00:00:32,738
don't really belong here right I don't

13
00:00:30,250 --> 00:00:36,010
introduce myself I think my work should

14
00:00:32,738 --> 00:00:37,748
speak for me and I don't have a slide

15
00:00:36,010 --> 00:00:41,769
where I have my achievements and maybe I

16
00:00:37,749 --> 00:00:43,510
know how much it means so but I learned

17
00:00:41,769 --> 00:00:45,789
a lot right I mean typically I go to

18
00:00:43,510 --> 00:00:49,089
conferences and research here I see a

19
00:00:45,789 --> 00:00:50,949
lot of interesting stuff that couldn't

20
00:00:49,089 --> 00:00:52,449
be published right so and I'm jealous

21
00:00:50,949 --> 00:00:54,510
I'm getting now I wanna do this to like

22
00:00:52,449 --> 00:00:56,949
I'm gonna hack firmware I wanna hack

23
00:00:54,510 --> 00:00:58,928
binaries like look into memory dance and

24
00:00:56,949 --> 00:01:00,608
then I realize how can you get a paper

25
00:00:58,929 --> 00:01:02,350
out of it and the answer is you can't

26
00:01:00,609 --> 00:01:04,180
probably the same way okay you played

27
00:01:02,350 --> 00:01:07,329
how about research right how about

28
00:01:04,180 --> 00:01:08,469
methodologies how about results so so

29
00:01:07,329 --> 00:01:10,809
this is gonna be a talk on the other

30
00:01:08,469 --> 00:01:12,699
side right it's gonna be some research

31
00:01:10,810 --> 00:01:16,930
we've been doing at NYU

32
00:01:12,700 --> 00:01:18,909
and NYU people know and where you on the

33
00:01:16,930 --> 00:01:22,509
only left side but for people who

34
00:01:18,909 --> 00:01:24,329
doesn't who don't I also have a student

35
00:01:22,509 --> 00:01:26,380
who corrects me on my grammar and

36
00:01:24,329 --> 00:01:28,798
grammar mistake so I have to be very

37
00:01:26,380 --> 00:01:31,929
careful about what I'm saying

38
00:01:28,799 --> 00:01:34,119
NYU is stands for New York University

39
00:01:31,930 --> 00:01:35,590
which I need to say it because I saying

40
00:01:34,119 --> 00:01:37,149
why your people don't know what I mean

41
00:01:35,590 --> 00:01:38,890
and I say New York University and then

42
00:01:37,149 --> 00:01:40,539
they understand so I'm not sure when it

43
00:01:38,890 --> 00:01:44,140
expands and wants to be used as an

44
00:01:40,539 --> 00:01:46,570
acronym but anyway you is New York

45
00:01:44,140 --> 00:01:48,429
University but unlike the name actually

46
00:01:46,570 --> 00:01:51,639
has global presence right and it's funny

47
00:01:48,429 --> 00:01:53,979
now who say NYU New York to specify the

48
00:01:51,640 --> 00:01:56,320
in your campus of NYU even though the

49
00:01:53,979 --> 00:01:59,320
name says it and with the Abu Dhabi

50
00:01:56,320 --> 00:02:01,658
campus which is um some kilometers away

51
00:01:59,320 --> 00:02:03,699
from here but as you can see from that

52
00:02:01,659 --> 00:02:05,590
map NYU has campuses all around the

53
00:02:03,700 --> 00:02:07,270
world right and our students here are

54
00:02:05,590 --> 00:02:09,399
privileged enough to be traveling for

55
00:02:07,270 --> 00:02:11,709
free to all the campuses and taking

56
00:02:09,399 --> 00:02:14,140
courses there so I wish I can actually

57
00:02:11,709 --> 00:02:14,690
apply to NYU and be a student again

58
00:02:14,140 --> 00:02:16,489
right

59
00:02:14,690 --> 00:02:21,530
and then I can I can teach myself and

60
00:02:16,490 --> 00:02:25,000
give me an A so I'm here to discuss I go

61
00:02:21,530 --> 00:02:27,980
back to the to the slide the title slide

62
00:02:25,000 --> 00:02:31,430
reverse engineering of industrial system

63
00:02:27,980 --> 00:02:33,679
binaries and my part of my research is

64
00:02:31,430 --> 00:02:35,680
on embedded security and we focus

65
00:02:33,680 --> 00:02:38,660
specifically on dust control binaries

66
00:02:35,680 --> 00:02:40,190
I'll spend some time on terminology if

67
00:02:38,660 --> 00:02:41,840
you don't know what industrial control

68
00:02:40,190 --> 00:02:43,850
system is that pretty sure most of you

69
00:02:41,840 --> 00:02:46,340
do industrial control systems are

70
00:02:43,850 --> 00:02:49,310
controlling critical infrastructure

71
00:02:46,340 --> 00:02:50,780
aight so you have your water treatment

72
00:02:49,310 --> 00:02:53,030
facilities critical manufacturing

73
00:02:50,780 --> 00:02:55,520
nuclear plants inside of them their

74
00:02:53,030 --> 00:02:57,500
commutation devices that control part of

75
00:02:55,520 --> 00:02:59,780
the process so you have some some

76
00:02:57,500 --> 00:03:02,030
sensors some actuators and then you have

77
00:02:59,780 --> 00:03:05,150
those systems taking part in the control

78
00:03:02,030 --> 00:03:08,420
process it's a very typical ICS

79
00:03:05,150 --> 00:03:10,910
architecture it's in that slide and you

80
00:03:08,420 --> 00:03:13,309
have your process that the process is

81
00:03:10,910 --> 00:03:15,650
reading input sensors and producing

82
00:03:13,310 --> 00:03:18,620
x-rays right so what's the temperature

83
00:03:15,650 --> 00:03:22,130
is 35 degrees okay so open that valve so

84
00:03:18,620 --> 00:03:24,610
I sense and then I actuate at the same

85
00:03:22,130 --> 00:03:26,840
time you know you may want to have

86
00:03:24,610 --> 00:03:28,670
visibility over the process and so you

87
00:03:26,840 --> 00:03:30,260
have an engineer overlooking what's

88
00:03:28,670 --> 00:03:32,299
happening because there may be automated

89
00:03:30,260 --> 00:03:34,040
but you you need to have a person

90
00:03:32,300 --> 00:03:35,900
looking at them right so you have your

91
00:03:34,040 --> 00:03:38,660
HDMI station that stands for human

92
00:03:35,900 --> 00:03:41,540
machine interface and this is where the

93
00:03:38,660 --> 00:03:43,310
engineer sees like the boiler that

94
00:03:41,540 --> 00:03:45,200
receives the inputs and then produces

95
00:03:43,310 --> 00:03:46,970
some kind of a you know increases the de

96
00:03:45,200 --> 00:03:50,209
flame so it the temperature will

97
00:03:46,970 --> 00:03:53,300
increase and your you may or may not

98
00:03:50,209 --> 00:03:55,430
have remote connections so telemetry is

99
00:03:53,300 --> 00:03:57,590
also important you know in the power

100
00:03:55,430 --> 00:03:59,360
grid you need to collect data from very

101
00:03:57,590 --> 00:04:01,220
far away right but if you have a

102
00:03:59,360 --> 00:04:03,620
chemical plant then everything

103
00:04:01,220 --> 00:04:05,450
self-contained so you may or may not

104
00:04:03,620 --> 00:04:10,570
have remote desktop remote connections

105
00:04:05,450 --> 00:04:13,670
to to the plant so the process of

106
00:04:10,570 --> 00:04:16,909
specifying its its component process

107
00:04:13,670 --> 00:04:20,709
means the whole thing right it means now

108
00:04:16,910 --> 00:04:23,450
in case you have some desalinization

109
00:04:20,709 --> 00:04:25,789
process then that means that there's

110
00:04:23,450 --> 00:04:26,990
something coming in like water and then

111
00:04:25,789 --> 00:04:29,840
you

112
00:04:26,990 --> 00:04:33,319
the whatever this process does right I

113
00:04:29,840 --> 00:04:35,030
cannot read English so the process is

114
00:04:33,319 --> 00:04:37,069
the whole thing there's an input and

115
00:04:35,030 --> 00:04:39,590
there's an output so in this Allah

116
00:04:37,069 --> 00:04:42,289
nation for example you get salt water

117
00:04:39,590 --> 00:04:45,138
you get water from the sea and then you

118
00:04:42,289 --> 00:04:47,599
produce water that can be drunk by

119
00:04:45,139 --> 00:04:50,449
humans right so that's the distillation

120
00:04:47,599 --> 00:04:52,550
process so it inputs some a material

121
00:04:50,449 --> 00:04:54,650
some something real and outputs a

122
00:04:52,550 --> 00:04:58,009
product that it is going to be sold or

123
00:04:54,650 --> 00:05:02,030
be used in a city so that's what we call

124
00:04:58,009 --> 00:05:03,650
a process a process is has when you

125
00:05:02,030 --> 00:05:05,570
actually do stuff for example you bring

126
00:05:03,650 --> 00:05:07,008
water in the first thing you need to

127
00:05:05,570 --> 00:05:09,349
measure is the salinity of the water

128
00:05:07,009 --> 00:05:12,020
right it's how much what's the

129
00:05:09,349 --> 00:05:14,240
percentage of salt into the water and

130
00:05:12,020 --> 00:05:17,299
then you know how much you need to do to

131
00:05:14,240 --> 00:05:20,090
be able to remove the salt so you need

132
00:05:17,300 --> 00:05:21,800
to boil the water so the steam will come

133
00:05:20,090 --> 00:05:23,630
up and then you collect this thing that

134
00:05:21,800 --> 00:05:25,880
doesn't have salt in it and then you

135
00:05:23,630 --> 00:05:28,569
take it out right I'm just giving a very

136
00:05:25,880 --> 00:05:32,120
basic example of a desalination process

137
00:05:28,569 --> 00:05:34,370
so the measuring and making decisions

138
00:05:32,120 --> 00:05:36,860
based on the measuring happened by those

139
00:05:34,370 --> 00:05:40,340
controllers or you may have credit and

140
00:05:36,860 --> 00:05:42,229
PLC's right so PLC's are receiving the

141
00:05:40,340 --> 00:05:45,020
input so in our case what is the

142
00:05:42,229 --> 00:05:47,210
salinity that's measured by sensor so

143
00:05:45,020 --> 00:05:50,180
sensor says that X is a salinity and

144
00:05:47,210 --> 00:05:53,090
then the plc is like a computer it says

145
00:05:50,180 --> 00:05:56,780
okay if it's X then you have to increase

146
00:05:53,090 --> 00:05:58,549
the temperature 250 Celsius and that

147
00:05:56,780 --> 00:06:01,669
that is given as a command to the

148
00:05:58,550 --> 00:06:04,009
actuator so the actuator is producing is

149
00:06:01,669 --> 00:06:06,219
the actual actuated process so based on

150
00:06:04,009 --> 00:06:09,229
the sensor input the controller is

151
00:06:06,219 --> 00:06:11,300
producing the x-rays is the command for

152
00:06:09,229 --> 00:06:15,440
the x-ray so and then the actuators are

153
00:06:11,300 --> 00:06:18,560
doing it right and then I mentioned this

154
00:06:15,440 --> 00:06:20,330
also the HMI if you are in a mean again

155
00:06:18,560 --> 00:06:22,250
the power grid right you may have seen a

156
00:06:20,330 --> 00:06:24,770
screen like this where you have your

157
00:06:22,250 --> 00:06:26,870
headquarters the control center and your

158
00:06:24,770 --> 00:06:29,599
substations are very far away so you

159
00:06:26,870 --> 00:06:31,190
have a screen that you can see what's

160
00:06:29,599 --> 00:06:36,199
happening to the process and then you

161
00:06:31,190 --> 00:06:37,729
can do the remote diagnosis understand

162
00:06:36,199 --> 00:06:39,360
what's happening is something something

163
00:06:37,729 --> 00:06:41,820
wrong

164
00:06:39,360 --> 00:06:45,810
so let's focus more on the security side

165
00:06:41,820 --> 00:06:48,090
so in the past the terms anything that

166
00:06:45,810 --> 00:06:51,980
had to do with smart anything like smart

167
00:06:48,090 --> 00:06:54,210
greed smart how smart billing

168
00:06:51,980 --> 00:06:55,710
intelligent rotation I mean this

169
00:06:54,210 --> 00:06:58,979
difference between intelligence and

170
00:06:55,710 --> 00:07:00,630
smartness in this world in the past

171
00:06:58,980 --> 00:07:04,290
everything was purely electromechanical

172
00:07:00,630 --> 00:07:07,740
right so your your devices were

173
00:07:04,290 --> 00:07:11,030
receiving an actual voltage like the the

174
00:07:07,740 --> 00:07:13,260
sensor was producing some kind of a of a

175
00:07:11,030 --> 00:07:17,190
voltage and then they would read them

176
00:07:13,260 --> 00:07:19,260
and there was no real control like like

177
00:07:17,190 --> 00:07:20,850
those if statements I mention right so

178
00:07:19,260 --> 00:07:23,460
it was reading a voltage input it was

179
00:07:20,850 --> 00:07:27,900
producing a voltage output based purely

180
00:07:23,460 --> 00:07:30,359
on its relaying process so there was

181
00:07:27,900 --> 00:07:31,310
nothing there's nothing computer inside

182
00:07:30,360 --> 00:07:34,020
it right

183
00:07:31,310 --> 00:07:35,490
nowadays though so those devices you

184
00:07:34,020 --> 00:07:37,140
have no idea whether there was something

185
00:07:35,490 --> 00:07:39,210
wrong with them because they wouldn't

186
00:07:37,140 --> 00:07:41,520
report back it wasn't easy to understand

187
00:07:39,210 --> 00:07:44,219
what they were doing and you had no wait

188
00:07:41,520 --> 00:07:46,590
of remote remote connectivity or remote

189
00:07:44,220 --> 00:07:48,720
control over it so for example in you

190
00:07:46,590 --> 00:07:50,849
know in the power grid in the past I

191
00:07:48,720 --> 00:07:52,920
mean when I grow I grew up in Greece and

192
00:07:50,850 --> 00:07:55,530
whenever who had the power outage in the

193
00:07:52,920 --> 00:07:56,760
neighborhood someone had to drive they

194
00:07:55,530 --> 00:07:58,500
had to receive a call because they

195
00:07:56,760 --> 00:08:00,599
didn't know where this was now you have

196
00:07:58,500 --> 00:08:01,950
to call the company and say we have a

197
00:08:00,600 --> 00:08:03,930
problem here okay we'll send someone

198
00:08:01,950 --> 00:08:07,289
some was driving there and then just

199
00:08:03,930 --> 00:08:09,780
open the circuit breaker right close the

200
00:08:07,290 --> 00:08:12,540
circuit breaker so because there was no

201
00:08:09,780 --> 00:08:14,039
remote way to do it so you have to

202
00:08:12,540 --> 00:08:18,300
physically drive in and do stuff

203
00:08:14,040 --> 00:08:21,000
nowadays we have improved and we have

204
00:08:18,300 --> 00:08:24,480
devices that are smart right so smart

205
00:08:21,000 --> 00:08:26,130
grid implies that you have IDs Intel's

206
00:08:24,480 --> 00:08:28,350
electronic devices and those devices

207
00:08:26,130 --> 00:08:30,540
give you great features such as

208
00:08:28,350 --> 00:08:32,760
connectivity so you can actually instead

209
00:08:30,540 --> 00:08:34,590
of driving to the location you can say

210
00:08:32,760 --> 00:08:37,559
okay can you can you please recover

211
00:08:34,590 --> 00:08:39,950
right you send a TCP packet and then you

212
00:08:37,559 --> 00:08:43,859
get back the grid up and running right

213
00:08:39,950 --> 00:08:45,390
however now we have the the problem with

214
00:08:43,860 --> 00:08:49,650
it the into introduced cyber security

215
00:08:45,390 --> 00:08:52,050
concerns because you can if if you can

216
00:08:49,650 --> 00:08:52,860
connect to that remotely as a legitimate

217
00:08:52,050 --> 00:08:54,810
user

218
00:08:52,860 --> 00:08:56,820
other people can connect to it and since

219
00:08:54,810 --> 00:08:59,459
you can hire you can do stuff remotely

220
00:08:56,820 --> 00:09:01,980
again malicious actors may also do stuff

221
00:08:59,459 --> 00:09:03,779
remotely so the ice if the transcript

222
00:09:01,980 --> 00:09:08,730
has changed a lot since the introduction

223
00:09:03,779 --> 00:09:11,370
of those smart components and and things

224
00:09:08,730 --> 00:09:13,350
are things are about right I mean you

225
00:09:11,370 --> 00:09:13,980
feel definitely familiar with many of

226
00:09:13,350 --> 00:09:16,560
these attacks

227
00:09:13,980 --> 00:09:19,050
you've heard of Stuxnet you may have

228
00:09:16,560 --> 00:09:22,920
heard of crash override that affected

229
00:09:19,050 --> 00:09:24,359
the Ukrainian para grid and finally

230
00:09:22,920 --> 00:09:27,990
there many Ukrainians in the conference

231
00:09:24,360 --> 00:09:31,079
so you may be up here appreciating stock

232
00:09:27,990 --> 00:09:32,790
more but it's happening and will happen

233
00:09:31,079 --> 00:09:35,430
more and actually it's definitely

234
00:09:32,790 --> 00:09:37,019
underreported right well I'm personally

235
00:09:35,430 --> 00:09:39,149
confident in it has been reported as

236
00:09:37,019 --> 00:09:41,550
well that this there's definitely way

237
00:09:39,149 --> 00:09:43,620
more incidents but the intercept Soph is

238
00:09:41,550 --> 00:09:45,719
afraid to say it

239
00:09:43,620 --> 00:09:47,519
right because they feel about the

240
00:09:45,720 --> 00:09:49,620
customer confidence they think that they

241
00:09:47,519 --> 00:09:51,180
should not be publicizing that because

242
00:09:49,620 --> 00:09:53,220
the stakeholders will be unhappy so

243
00:09:51,180 --> 00:09:54,959
there is an issue of under reporting

244
00:09:53,220 --> 00:09:56,760
those incidents so we don't really know

245
00:09:54,959 --> 00:09:59,939
exactly what they the extent of the

246
00:09:56,760 --> 00:10:01,980
problem is but it's happening is it

247
00:09:59,940 --> 00:10:04,829
getting worse I always want to give

248
00:10:01,980 --> 00:10:06,899
these talks I go to I say sir and I take

249
00:10:04,829 --> 00:10:10,439
a snapshot of the vulnerabilities of the

250
00:10:06,899 --> 00:10:12,180
weak because you would expect right you

251
00:10:10,440 --> 00:10:14,190
know how many device exits are there and

252
00:10:12,180 --> 00:10:16,709
how many bills do they have actually

253
00:10:14,190 --> 00:10:19,320
this is a snapshot since 19th of March

254
00:10:16,709 --> 00:10:21,839
right like a few days snapshot then you

255
00:10:19,320 --> 00:10:24,269
can see all sorts of devices plugged

256
00:10:21,839 --> 00:10:26,160
with vulnerabilities so it's bad and

257
00:10:24,269 --> 00:10:29,430
it's I mean I do expect it to get worse

258
00:10:26,160 --> 00:10:31,019
because the security for the critical

259
00:10:29,430 --> 00:10:33,899
infrastructure on those devices was

260
00:10:31,019 --> 00:10:36,149
always it has been dependent mostly of

261
00:10:33,899 --> 00:10:37,680
people not caring much right that's one

262
00:10:36,149 --> 00:10:40,890
thing and the second thing is people

263
00:10:37,680 --> 00:10:42,719
these vendors typically they always love

264
00:10:40,890 --> 00:10:44,339
security by obscurity so they never

265
00:10:42,720 --> 00:10:45,839
really publicize the microprocessor they

266
00:10:44,339 --> 00:10:47,850
using really publicize the exact

267
00:10:45,839 --> 00:10:49,829
protocols are using and they assume it's

268
00:10:47,850 --> 00:10:51,690
it's a good way to have security right

269
00:10:49,829 --> 00:10:53,459
but this is not the case because now

270
00:10:51,690 --> 00:10:54,779
people are looking into it and it could

271
00:10:53,459 --> 00:10:57,300
be like

272
00:10:54,779 --> 00:11:00,060
benign researchers like me maybe benign

273
00:10:57,300 --> 00:11:03,719
but also malicious people maybe looking

274
00:11:00,060 --> 00:11:05,689
at these issues and you can you can find

275
00:11:03,720 --> 00:11:07,490
those devices now on on eBay right

276
00:11:05,690 --> 00:11:10,280
may amount of viruses we've been buying

277
00:11:07,490 --> 00:11:11,810
those devisor on ebay and as they know

278
00:11:10,280 --> 00:11:14,270
they fell off the track or something I

279
00:11:11,810 --> 00:11:16,880
don't know how those the settlers find

280
00:11:14,270 --> 00:11:18,550
the devices and we but we buy them and

281
00:11:16,880 --> 00:11:20,810
we try to do security analysis on them

282
00:11:18,550 --> 00:11:24,770
so what we've been trying to do in this

283
00:11:20,810 --> 00:11:27,050
work is we're trying to really

284
00:11:24,770 --> 00:11:28,699
understand how security has changed in

285
00:11:27,050 --> 00:11:31,490
the industrial control security

286
00:11:28,700 --> 00:11:34,040
landscape right and we're trying to find

287
00:11:31,490 --> 00:11:35,900
ways to automate many of these things

288
00:11:34,040 --> 00:11:38,780
because there's a lot of very nice

289
00:11:35,900 --> 00:11:41,000
automation in the IT world so you have

290
00:11:38,780 --> 00:11:43,220
your Metasploit you have your devices

291
00:11:41,000 --> 00:11:44,930
you have your either Pro you have great

292
00:11:43,220 --> 00:11:47,420
tools that help you understand security

293
00:11:44,930 --> 00:11:49,819
a lot but nothing of that sort exist for

294
00:11:47,420 --> 00:11:51,439
ICS and Isis are very unique for many

295
00:11:49,820 --> 00:11:54,590
reasons I'll describe later in this talk

296
00:11:51,440 --> 00:11:56,300
but what we've been doing as a at NYU in

297
00:11:54,590 --> 00:11:59,030
my research group who trying to find

298
00:11:56,300 --> 00:12:01,430
ways to automate than ability assessment

299
00:11:59,030 --> 00:12:03,290
for industrial control systems so the

300
00:12:01,430 --> 00:12:05,689
defense engineering part which is the

301
00:12:03,290 --> 00:12:06,530
title of the talk is exactly part of

302
00:12:05,690 --> 00:12:08,540
this process right

303
00:12:06,530 --> 00:12:10,220
can you automate reverse engineering of

304
00:12:08,540 --> 00:12:12,110
those binaries because those binaries

305
00:12:10,220 --> 00:12:14,330
are not your standard yeah laughs you

306
00:12:12,110 --> 00:12:17,060
seen Linux or Windows right your P in

307
00:12:14,330 --> 00:12:19,310
Windows your portable executable they're

308
00:12:17,060 --> 00:12:21,619
not executable there binders that have

309
00:12:19,310 --> 00:12:24,140
machine code but they have to be loaded

310
00:12:21,620 --> 00:12:26,990
by the runtime of the PLC so you have

311
00:12:24,140 --> 00:12:30,380
your PLC or seka Desi's and it has its

312
00:12:26,990 --> 00:12:33,020
own unique loader that takes that non

313
00:12:30,380 --> 00:12:36,260
executable binary loads it somehow and

314
00:12:33,020 --> 00:12:38,990
then it executes in the PLC so this is

315
00:12:36,260 --> 00:12:40,370
what we're trying to address and the

316
00:12:38,990 --> 00:12:42,170
approach we've been following actually

317
00:12:40,370 --> 00:12:45,500
we trying to do the whole attacking

318
00:12:42,170 --> 00:12:47,030
process right can we create an apt can

319
00:12:45,500 --> 00:12:49,670
you create an and bus passes affect

320
00:12:47,030 --> 00:12:51,319
ourselves automatically and then once we

321
00:12:49,670 --> 00:12:54,199
realize all the steps needed to create

322
00:12:51,320 --> 00:12:56,540
the apt and we automate them then you

323
00:12:54,200 --> 00:12:58,490
can go back and start automating our

324
00:12:56,540 --> 00:13:02,689
defenses and start trying to understand

325
00:12:58,490 --> 00:13:05,540
our defenses so now to do that we

326
00:13:02,690 --> 00:13:07,730
dissect how an apt works in its unique

327
00:13:05,540 --> 00:13:10,360
step so this presentation is guiding you

328
00:13:07,730 --> 00:13:14,120
through the steps of an apt deployment

329
00:13:10,360 --> 00:13:16,790
and then we take every step and automate

330
00:13:14,120 --> 00:13:17,620
it so you create a whole end-to-end tool

331
00:13:16,790 --> 00:13:20,620
that autumn

332
00:13:17,620 --> 00:13:25,000
it's apt development and then from that

333
00:13:20,620 --> 00:13:26,740
we try to understand automation and see

334
00:13:25,000 --> 00:13:29,980
how you can actually create defenses

335
00:13:26,740 --> 00:13:31,630
based on that automatic development the

336
00:13:29,980 --> 00:13:35,230
the malware that can be automatically

337
00:13:31,630 --> 00:13:38,740
developed by minimum information alright

338
00:13:35,230 --> 00:13:40,150
so in case you haven't seen the standard

339
00:13:38,740 --> 00:13:42,520
chart of how a nepeta

340
00:13:40,150 --> 00:13:44,529
again firstly the reconnaissance when

341
00:13:42,520 --> 00:13:46,900
the pill discovery payload design

342
00:13:44,529 --> 00:13:49,600
payload delivery and then you add with a

343
00:13:46,900 --> 00:13:51,699
dart persistence so I'll guide you

344
00:13:49,600 --> 00:13:54,010
through the five steps I window the

345
00:13:51,700 --> 00:13:56,410
focus of this talk is number three but I

346
00:13:54,010 --> 00:13:58,240
thought since first it's a really long

347
00:13:56,410 --> 00:14:00,640
talk tries for the five minutes so I

348
00:13:58,240 --> 00:14:02,200
need to add more stuff and the second is

349
00:14:00,640 --> 00:14:05,020
a thing is useful for the audience to

350
00:14:02,200 --> 00:14:07,750
see the other parts and understand the

351
00:14:05,020 --> 00:14:09,760
needs for either research or solutions

352
00:14:07,750 --> 00:14:12,339
because their company schedule on on the

353
00:14:09,760 --> 00:14:14,740
other sides as well

354
00:14:12,339 --> 00:14:16,720
more specifically what it's apt States

355
00:14:14,740 --> 00:14:17,910
means reconnaissance is gathering

356
00:14:16,720 --> 00:14:20,980
information about the target

357
00:14:17,910 --> 00:14:22,959
Vala bill discovery you either and then

358
00:14:20,980 --> 00:14:25,240
for existing because in in those systems

359
00:14:22,959 --> 00:14:29,589
actually ICS they don't really get

360
00:14:25,240 --> 00:14:31,510
updated regularly so zero days are are

361
00:14:29,589 --> 00:14:33,130
great but you can even find like

362
00:14:31,510 --> 00:14:38,140
existing on the buildings and use them

363
00:14:33,130 --> 00:14:40,870
they we rarely see may upgraded devices

364
00:14:38,140 --> 00:14:43,900
so when will discover the second part

365
00:14:40,870 --> 00:14:46,029
payload design payload design you have

366
00:14:43,900 --> 00:14:48,579
to create your design typically in the

367
00:14:46,029 --> 00:14:50,950
ideal world we see design that aim to do

368
00:14:48,580 --> 00:14:53,140
previous escalation or some kind of

369
00:14:50,950 --> 00:14:55,959
denial of service attack or installation

370
00:14:53,140 --> 00:14:58,360
of a rootkit in this in this world those

371
00:14:55,959 --> 00:15:00,160
those that mal were is a bit more

372
00:14:58,360 --> 00:15:02,410
sophisticated right it may look directly

373
00:15:00,160 --> 00:15:04,360
in the process and try to change the

374
00:15:02,410 --> 00:15:06,520
parameter of the process for example you

375
00:15:04,360 --> 00:15:09,850
have a PID controller it will try to

376
00:15:06,520 --> 00:15:13,120
change that P the proportional from 0 1

377
00:15:09,850 --> 00:15:14,830
to 0 11 and the malware should know what

378
00:15:13,120 --> 00:15:16,900
that means right so here we're talking

379
00:15:14,830 --> 00:15:18,820
about more than just those services

380
00:15:16,900 --> 00:15:20,319
we're talking about being able to say in

381
00:15:18,820 --> 00:15:24,310
very unique parts of the process and

382
00:15:20,320 --> 00:15:25,870
then see how the process reacts payload

383
00:15:24,310 --> 00:15:27,540
delivery there are many ways to deliver

384
00:15:25,870 --> 00:15:29,459
your payload right I mean

385
00:15:27,540 --> 00:15:31,680
stocke sent the people said they left

386
00:15:29,459 --> 00:15:34,560
some USB and then that USB found its way

387
00:15:31,680 --> 00:15:37,380
into there to the plant to the Iranian

388
00:15:34,560 --> 00:15:39,209
will it's a plant you may have malware

389
00:15:37,380 --> 00:15:40,920
that comes from the internet you may

390
00:15:39,209 --> 00:15:43,050
have USB sticks there are many ways to

391
00:15:40,920 --> 00:15:45,599
infiltrate within the process but that's

392
00:15:43,050 --> 00:15:48,029
out of the scope of this of this talk

393
00:15:45,600 --> 00:15:50,190
an attack resistance right in this

394
00:15:48,029 --> 00:15:52,680
remember stack students stayed there for

395
00:15:50,190 --> 00:15:54,810
a long time will not really sure how

396
00:15:52,680 --> 00:15:56,359
much crossover it stayed in the

397
00:15:54,810 --> 00:15:58,680
Ukrainian infrastructure before

398
00:15:56,360 --> 00:16:00,440
manifesting itself I'm pretty sure it

399
00:15:58,680 --> 00:16:03,989
has been many months but that's my guess

400
00:16:00,440 --> 00:16:06,000
we haven't heard much much about it but

401
00:16:03,990 --> 00:16:09,360
the fact that was triggered at an exact

402
00:16:06,000 --> 00:16:11,009
time means it was ready a lot a long

403
00:16:09,360 --> 00:16:13,290
time before right my guess will be many

404
00:16:11,009 --> 00:16:15,000
months so the attacks are there and

405
00:16:13,290 --> 00:16:17,430
they're staying and they're staying and

406
00:16:15,000 --> 00:16:19,470
they're maybe doing damage over time or

407
00:16:17,430 --> 00:16:21,569
they may do they may be triggered at a

408
00:16:19,470 --> 00:16:22,880
very specific time known only to the

409
00:16:21,569 --> 00:16:25,139
attacker

410
00:16:22,880 --> 00:16:27,240
so let's slowly walk through the steps

411
00:16:25,139 --> 00:16:29,310
so reconnaissance means that you need to

412
00:16:27,240 --> 00:16:31,079
understand the system during right

413
00:16:29,310 --> 00:16:32,939
you're trying to understand what is my

414
00:16:31,079 --> 00:16:34,888
current it doesn't roll system what is

415
00:16:32,940 --> 00:16:36,660
the process what is the device I mean

416
00:16:34,889 --> 00:16:39,480
because if you make this automated

417
00:16:36,660 --> 00:16:41,250
malware and it spreads stalks it was

418
00:16:39,480 --> 00:16:44,130
extremely unique you're started in step

419
00:16:41,250 --> 00:16:46,649
seven right and we know most of us know

420
00:16:44,130 --> 00:16:49,260
why this was the case but if you want to

421
00:16:46,649 --> 00:16:51,000
create to fully automate this you need

422
00:16:49,260 --> 00:16:53,100
to be able to fingerprint on the spot

423
00:16:51,000 --> 00:16:54,870
you need to be able to understand you

424
00:16:53,100 --> 00:16:56,639
cannot just ask a device who what device

425
00:16:54,870 --> 00:16:58,500
are you right I'm a Z means I'm a rock

426
00:16:56,639 --> 00:17:00,540
well I'm another Bradley I'm a General

427
00:16:58,500 --> 00:17:02,579
Electric you need to be smarter than

428
00:17:00,540 --> 00:17:05,819
this and an automated through to an

429
00:17:02,579 --> 00:17:08,790
extent so fingerprinting starts with

430
00:17:05,819 --> 00:17:10,379
device and dedication and that will give

431
00:17:08,790 --> 00:17:13,049
you further information right because if

432
00:17:10,380 --> 00:17:15,659
you know the device type then you can

433
00:17:13,049 --> 00:17:18,359
look up the firmware and then you know

434
00:17:15,659 --> 00:17:19,740
the firmware games typically outdated

435
00:17:18,359 --> 00:17:22,109
right so you know the exact

436
00:17:19,740 --> 00:17:24,329
vulnerabilities of that framework so the

437
00:17:22,109 --> 00:17:26,938
first step is to identify the device and

438
00:17:24,329 --> 00:17:29,610
when you're again malware that you're

439
00:17:26,939 --> 00:17:31,620
trying to do it this automatically you

440
00:17:29,610 --> 00:17:33,719
see the PLC as a black box

441
00:17:31,620 --> 00:17:36,000
so you talk to it and you get some

442
00:17:33,720 --> 00:17:37,679
response back and from that process

443
00:17:36,000 --> 00:17:40,350
you're trying to ask it meaningful

444
00:17:37,679 --> 00:17:43,320
questions to get meaningful answers back

445
00:17:40,350 --> 00:17:45,899
so as this can be done and over the

446
00:17:43,320 --> 00:17:48,840
network as well as an example of some of

447
00:17:45,899 --> 00:17:51,870
our work we've done so Modbus for

448
00:17:48,840 --> 00:17:53,759
example is a good case because Modbus is

449
00:17:51,870 --> 00:17:56,729
a protocol that's not standardized and

450
00:17:53,759 --> 00:17:59,909
that means that every vendor implements

451
00:17:56,730 --> 00:18:01,259
it very differently and well security is

452
00:17:59,909 --> 00:18:03,269
all of a question I actually had a slide

453
00:18:01,259 --> 00:18:04,980
explaining why mod was not secure but I

454
00:18:03,269 --> 00:18:06,690
think will be boring everybody knows

455
00:18:04,980 --> 00:18:08,549
those industrial protocols were never

456
00:18:06,690 --> 00:18:09,990
made with security in mind they were

457
00:18:08,549 --> 00:18:11,700
made for the bus things right make sure

458
00:18:09,990 --> 00:18:13,559
that I get the message and I get the

459
00:18:11,700 --> 00:18:16,679
response that's it now we have to

460
00:18:13,559 --> 00:18:19,230
encapsulate you have to do SSL over mod

461
00:18:16,679 --> 00:18:22,139
that's right so do you do VPN over BBN

462
00:18:19,230 --> 00:18:25,679
Talmud in order to achieve security with

463
00:18:22,139 --> 00:18:28,740
industrial systems so in case of Modbus

464
00:18:25,679 --> 00:18:30,330
what we've realized is that every vendor

465
00:18:28,740 --> 00:18:32,450
is doing a very different thing on what

466
00:18:30,330 --> 00:18:36,000
bus so when you want to ask questions

467
00:18:32,450 --> 00:18:38,100
you know who are you Modbus kind of had

468
00:18:36,000 --> 00:18:39,779
its own way of identifying the device

469
00:18:38,100 --> 00:18:41,639
but nobody's really following it they're

470
00:18:39,779 --> 00:18:43,289
having their own implementations and

471
00:18:41,639 --> 00:18:45,809
that gives us the opportunity to

472
00:18:43,289 --> 00:18:47,940
identify vendors based on the unique

473
00:18:45,809 --> 00:18:52,408
implementation which went right for

474
00:18:47,940 --> 00:18:54,120
example in our case so the that's the

475
00:18:52,409 --> 00:18:57,240
example the word right and the guardo

476
00:18:54,120 --> 00:18:59,820
says in its manual that the Modbus

477
00:18:57,240 --> 00:19:01,139
register in address 2020 it gives you a

478
00:18:59,820 --> 00:19:03,480
short description description of the

479
00:19:01,139 --> 00:19:05,399
controller this is not standard every

480
00:19:03,480 --> 00:19:08,370
PLC is doing a different thing they put

481
00:19:05,399 --> 00:19:11,100
their own unique and different register

482
00:19:08,370 --> 00:19:12,178
so I know if I'm asking 20 20 and I get

483
00:19:11,100 --> 00:19:13,649
something that looks like a string

484
00:19:12,179 --> 00:19:15,330
that's probably guado

485
00:19:13,649 --> 00:19:17,279
and actually when you get it back it

486
00:19:15,330 --> 00:19:19,439
says what you're clearly right but even

487
00:19:17,279 --> 00:19:22,080
if it didn't you you'll be able to

488
00:19:19,440 --> 00:19:23,909
exactly formation about a given known

489
00:19:22,080 --> 00:19:26,699
what is the type of data you get back

490
00:19:23,909 --> 00:19:29,490
from the appeals more details you can

491
00:19:26,700 --> 00:19:32,549
you can read the paper so through that

492
00:19:29,490 --> 00:19:36,330
we were able to fingerprint a lot of

493
00:19:32,549 --> 00:19:37,918
PLC's from from guardo from Eaton and if

494
00:19:36,330 --> 00:19:40,379
you see again that's the comment I made

495
00:19:37,919 --> 00:19:41,039
right and this again divides notice

496
00:19:40,379 --> 00:19:42,928
PLC's

497
00:19:41,039 --> 00:19:44,460
so every vendor is actually putting

498
00:19:42,929 --> 00:19:46,830
information about the device in a

499
00:19:44,460 --> 00:19:48,960
different register so by asking the

500
00:19:46,830 --> 00:19:50,610
right register getting all of them then

501
00:19:48,960 --> 00:19:52,500
you see different things you can quickly

502
00:19:50,610 --> 00:19:53,429
say that's a wacko that's a neat own

503
00:19:52,500 --> 00:19:58,890
device or that's and

504
00:19:53,430 --> 00:20:01,760
else so in our work we managed to well

505
00:19:58,890 --> 00:20:04,530
mom we did introduce octagon a

506
00:20:01,760 --> 00:20:06,330
introduced that to shorten as well we

507
00:20:04,530 --> 00:20:09,030
send an email to John motherly and we

508
00:20:06,330 --> 00:20:11,220
said well you have actually what's odd

509
00:20:09,030 --> 00:20:14,040
indeed southern was only following the

510
00:20:11,220 --> 00:20:15,810
protocol right Modbus the the Modbus

511
00:20:14,040 --> 00:20:17,760
protocol said it's only one register you

512
00:20:15,810 --> 00:20:21,510
should ask because every vendor did

513
00:20:17,760 --> 00:20:23,629
whatever southern was only indexing the

514
00:20:21,510 --> 00:20:26,550
Schneider Electric because neither

515
00:20:23,630 --> 00:20:28,920
acquired modicon that would made the

516
00:20:26,550 --> 00:20:31,020
Modbus protocol so only Schneider

517
00:20:28,920 --> 00:20:33,090
Electric was showing up in their

518
00:20:31,020 --> 00:20:35,340
southern results so we talked to the guy

519
00:20:33,090 --> 00:20:37,500
to motherly and said look you can

520
00:20:35,340 --> 00:20:40,110
actually finger pin way way way more

521
00:20:37,500 --> 00:20:42,120
accurately if you ask questions to other

522
00:20:40,110 --> 00:20:44,459
registers and then actually that was

523
00:20:42,120 --> 00:20:47,010
implemented by by him and you can find

524
00:20:44,460 --> 00:20:48,480
more devices now right so as a proof of

525
00:20:47,010 --> 00:20:50,970
concept with it five vendors because

526
00:20:48,480 --> 00:20:53,370
it's not productive user Pizza time to

527
00:20:50,970 --> 00:20:54,930
be looking at manuals and seeing so this

528
00:20:53,370 --> 00:20:56,610
is a difference here right come on this

529
00:20:54,930 --> 00:20:58,680
is not really research if you have

530
00:20:56,610 --> 00:21:00,990
people reading manuals to find numbers

531
00:20:58,680 --> 00:21:03,720
right so we just did as a proof of

532
00:21:00,990 --> 00:21:05,070
concept and we realize Modbus and asking

533
00:21:03,720 --> 00:21:08,700
for registers is a proper way of

534
00:21:05,070 --> 00:21:12,179
fingerprinting and these are the results

535
00:21:08,700 --> 00:21:16,410
that you know what we've seen from from

536
00:21:12,180 --> 00:21:20,220
Jordan that appeared after we changed

537
00:21:16,410 --> 00:21:22,530
the way the engine works so after we

538
00:21:20,220 --> 00:21:24,060
know what device whirring now we need to

539
00:21:22,530 --> 00:21:28,350
find one a big listening device right

540
00:21:24,060 --> 00:21:31,409
and we there are many ways of doing it

541
00:21:28,350 --> 00:21:34,110
but what we measly we mostly focus on so

542
00:21:31,410 --> 00:21:38,280
there's a difference in the way we we

543
00:21:34,110 --> 00:21:39,990
see security right in many of these

544
00:21:38,280 --> 00:21:42,240
these dissidents ago door blocker

545
00:21:39,990 --> 00:21:45,150
typically there's one person talking

546
00:21:42,240 --> 00:21:46,470
about one device right for us we want

547
00:21:45,150 --> 00:21:48,660
more than that won't both the device

548
00:21:46,470 --> 00:21:51,120
when the software also want the process

549
00:21:48,660 --> 00:21:54,690
so we want a more complete assessment

550
00:21:51,120 --> 00:21:55,830
environment in our case we have

551
00:21:54,690 --> 00:21:58,290
something we'll called

552
00:21:55,830 --> 00:22:00,480
hard when the loop because we do want

553
00:21:58,290 --> 00:22:02,280
the accuracy if you if I give you the

554
00:22:00,480 --> 00:22:04,230
power grid device in your hackett right

555
00:22:02,280 --> 00:22:06,149
you say you happy that doesn't mean

556
00:22:04,230 --> 00:22:06,690
anything to me what exactly can we do in

557
00:22:06,150 --> 00:22:09,090
the power

558
00:22:06,690 --> 00:22:11,760
right because I see talks saying I can I

559
00:22:09,090 --> 00:22:14,699
can know cause a blackout New York City

560
00:22:11,760 --> 00:22:17,340
well I know that you probably can't and

561
00:22:14,700 --> 00:22:20,070
you can't because the power grid is

562
00:22:17,340 --> 00:22:21,899
robust on its own it has been built to

563
00:22:20,070 --> 00:22:23,550
be robust because nature is the major

564
00:22:21,900 --> 00:22:26,220
attacker of the power to try to have

565
00:22:23,550 --> 00:22:28,919
trees falling on their power lines you

566
00:22:26,220 --> 00:22:31,080
have thunderstorms you have squirrels

567
00:22:28,920 --> 00:22:33,720
like in the falling into equipment or

568
00:22:31,080 --> 00:22:36,600
eating equipment and animals actually

569
00:22:33,720 --> 00:22:40,620
are more dangerous than humans in this

570
00:22:36,600 --> 00:22:42,090
for the power grid and so for us to do

571
00:22:40,620 --> 00:22:43,800
an assessment we won't understand the

572
00:22:42,090 --> 00:22:45,320
process not just the hack the device so

573
00:22:43,800 --> 00:22:47,430
I'd also have the process in place

574
00:22:45,320 --> 00:22:49,860
however you cannot just go to the power

575
00:22:47,430 --> 00:22:51,750
grid and say okay hey can I try hack

576
00:22:49,860 --> 00:22:53,189
your device while it's connected well

577
00:22:51,750 --> 00:22:55,920
everybody will say no that makes sense

578
00:22:53,190 --> 00:22:58,080
so we do what we call harden the loop

579
00:22:55,920 --> 00:23:00,270
test bit that combines both right that

580
00:22:58,080 --> 00:23:02,480
you have hardware and software and the

581
00:23:00,270 --> 00:23:06,780
process simulated in a lab environment

582
00:23:02,480 --> 00:23:08,970
so for us we think of we have the

583
00:23:06,780 --> 00:23:13,410
hardware device that we typically appear

584
00:23:08,970 --> 00:23:16,530
in the in the actual environment and

585
00:23:13,410 --> 00:23:18,930
then we connect it to a simulation model

586
00:23:16,530 --> 00:23:21,840
so let's say in the desalination process

587
00:23:18,930 --> 00:23:24,560
right we have let's say we take 22

588
00:23:21,840 --> 00:23:28,230
States multistage flash desalination

589
00:23:24,560 --> 00:23:31,139
model and then we take one stage out and

590
00:23:28,230 --> 00:23:33,120
we put it in PLC that means that you

591
00:23:31,140 --> 00:23:36,270
know this data coming through the stages

592
00:23:33,120 --> 00:23:37,800
so instead of this and MATLAB can model

593
00:23:36,270 --> 00:23:39,990
that right it receives something has a

594
00:23:37,800 --> 00:23:41,909
PID controller and produce enough so

595
00:23:39,990 --> 00:23:45,150
instead of the PID controller being in

596
00:23:41,910 --> 00:23:47,790
MATLAB I take that States out and I ran

597
00:23:45,150 --> 00:23:50,340
it through my PLC so the inputs are

598
00:23:47,790 --> 00:23:52,889
given to my PLC the PID is in the PLC

599
00:23:50,340 --> 00:23:55,110
computing stuff and then the output is

600
00:23:52,890 --> 00:23:57,840
fed back to the simulation so by doing

601
00:23:55,110 --> 00:24:00,780
that I introduce Hardware in the loop

602
00:23:57,840 --> 00:24:03,060
it's a closed loop right and if I attack

603
00:24:00,780 --> 00:24:05,190
the hardware now I can see the effect in

604
00:24:03,060 --> 00:24:07,950
the actual process so that gives me the

605
00:24:05,190 --> 00:24:09,870
ability to do processor or analysis

606
00:24:07,950 --> 00:24:11,940
right because I don't want to say I fact

607
00:24:09,870 --> 00:24:14,280
the device I want to say I can do this

608
00:24:11,940 --> 00:24:16,110
with this device I can I can create a

609
00:24:14,280 --> 00:24:19,830
block out I can actually change the

610
00:24:16,110 --> 00:24:21,899
desalination part to produce like

611
00:24:19,830 --> 00:24:26,460
less brine and more like a saline water

612
00:24:21,899 --> 00:24:30,209
right I can do stuff meaningfully and to

613
00:24:26,460 --> 00:24:33,120
do that we have a host PC actually what

614
00:24:30,210 --> 00:24:34,559
we now don't have the set up out but the

615
00:24:33,120 --> 00:24:37,439
hardware city have had many of these

616
00:24:34,559 --> 00:24:39,000
devices right so if you miss that you

617
00:24:37,440 --> 00:24:41,549
can come by and where you put up anytime

618
00:24:39,000 --> 00:24:43,440
and we have a testbed there in place but

619
00:24:41,549 --> 00:24:46,200
to do that to have a hot computer that

620
00:24:43,440 --> 00:24:48,480
has the MATLAB simulation model and then

621
00:24:46,200 --> 00:24:51,870
through a data acquisition device like a

622
00:24:48,480 --> 00:24:53,549
CompactRIO we connect to the PLC and the

623
00:24:51,870 --> 00:24:55,709
PLC has part of the control loop right

624
00:24:53,549 --> 00:24:57,330
so we're on through analog to D so

625
00:24:55,710 --> 00:25:00,269
digital to analog and then unlike

626
00:24:57,330 --> 00:25:01,769
digital goes back and we have the the

627
00:25:00,269 --> 00:25:05,250
testbed in place

628
00:25:01,769 --> 00:25:08,760
so what Marius had in V on the table

629
00:25:05,250 --> 00:25:11,820
there the vodka device in this example

630
00:25:08,760 --> 00:25:15,120
it's controlling the chemical process we

631
00:25:11,820 --> 00:25:17,789
have so in this the certain system a

632
00:25:15,120 --> 00:25:20,268
benchmark and this simulates like a

633
00:25:17,789 --> 00:25:22,769
standard chemical process it gets some

634
00:25:20,269 --> 00:25:25,559
gases as an input and produces some kind

635
00:25:22,769 --> 00:25:27,389
of a material and some byproducts that

636
00:25:25,559 --> 00:25:29,850
come out with it so we have the

637
00:25:27,389 --> 00:25:32,549
simulation of the chemical process in

638
00:25:29,850 --> 00:25:35,189
place and and some loops like some PID

639
00:25:32,549 --> 00:25:37,830
control is taken out run through the

640
00:25:35,190 --> 00:25:39,389
guado and you will put it back so we can

641
00:25:37,830 --> 00:25:42,120
saw what acts like you increase the

642
00:25:39,389 --> 00:25:47,428
temperature of a reactor or you increase

643
00:25:42,120 --> 00:25:50,010
what's happening with the output so the

644
00:25:47,429 --> 00:25:52,260
part of the payload design is what we

645
00:25:50,010 --> 00:25:55,830
focused on and I'm going to focus on

646
00:25:52,260 --> 00:25:58,049
movie stock so you found first step you

647
00:25:55,830 --> 00:26:00,480
know the device you're in second step we

648
00:25:58,049 --> 00:26:02,429
find vulnerabilities somehow right I'm

649
00:26:00,480 --> 00:26:04,590
there are other ways we're doing that

650
00:26:02,429 --> 00:26:06,210
but I skate a lot of things now you have

651
00:26:04,590 --> 00:26:09,330
to do something meaningful right while

652
00:26:06,210 --> 00:26:11,850
you're in the PLC now you have to know

653
00:26:09,330 --> 00:26:14,820
what happens exactly works and PLC's for

654
00:26:11,850 --> 00:26:16,469
people who don't know you can think of

655
00:26:14,820 --> 00:26:18,750
them as regular computers that do a

656
00:26:16,470 --> 00:26:21,149
thing over and over again right it's

657
00:26:18,750 --> 00:26:23,639
like a mini computer that does one thing

658
00:26:21,149 --> 00:26:25,500
over and over and it's also it has

659
00:26:23,639 --> 00:26:28,740
industrial-strength that means he can

660
00:26:25,500 --> 00:26:30,960
withstand like higher temperatures or

661
00:26:28,740 --> 00:26:33,430
lower temperatures it can without high

662
00:26:30,960 --> 00:26:35,790
voltages so it's it's like a

663
00:26:33,430 --> 00:26:38,470
peuta that's robust for the application

664
00:26:35,790 --> 00:26:40,149
so to program that computer again we

665
00:26:38,470 --> 00:26:42,280
don't let people write C++ writes

666
00:26:40,150 --> 00:26:44,080
because first they can't there are

667
00:26:42,280 --> 00:26:47,470
process engineers they don't know how to

668
00:26:44,080 --> 00:26:49,780
code in Python C++ and second it's it's

669
00:26:47,470 --> 00:26:54,130
pretty dangerous to write any code in C

670
00:26:49,780 --> 00:26:56,320
or C++ it is begging for problems so

671
00:26:54,130 --> 00:26:58,450
instead you have your high level

672
00:26:56,320 --> 00:27:00,310
language like ladder logic functional

673
00:26:58,450 --> 00:27:02,110
block diagram structure tags destruction

674
00:27:00,310 --> 00:27:04,000
lists these are examples of high level

675
00:27:02,110 --> 00:27:06,370
language used by process engineers and

676
00:27:04,000 --> 00:27:08,650
they write the language in the right

677
00:27:06,370 --> 00:27:11,229
type program like a controller in that

678
00:27:08,650 --> 00:27:15,280
kind of a form it's been compiled and

679
00:27:11,230 --> 00:27:17,470
that program is going to the PLC so this

680
00:27:15,280 --> 00:27:19,510
is what we come in write this complete

681
00:27:17,470 --> 00:27:21,730
compiler is taking high level language

682
00:27:19,510 --> 00:27:24,670
and produce machine code that's assembly

683
00:27:21,730 --> 00:27:27,250
and those compilers are not your your

684
00:27:24,670 --> 00:27:29,920
vanilla DCC it is not a compiler that

685
00:27:27,250 --> 00:27:31,960
has been tested heavily by the open

686
00:27:29,920 --> 00:27:34,350
source community right or by people like

687
00:27:31,960 --> 00:27:37,810
you here I've seen a lot of work on

688
00:27:34,350 --> 00:27:40,270
understanding the security of EC this is

689
00:27:37,810 --> 00:27:41,740
proprietary stuff that nobody knows how

690
00:27:40,270 --> 00:27:43,780
it works nobody has ever assess the

691
00:27:41,740 --> 00:27:45,640
security of these things and this may be

692
00:27:43,780 --> 00:27:47,530
producing really bad code that we don't

693
00:27:45,640 --> 00:27:49,840
know of because it's not open source

694
00:27:47,530 --> 00:27:52,540
so this compilers we'll use is some kind

695
00:27:49,840 --> 00:27:54,870
of machine code that the PLC runtime is

696
00:27:52,540 --> 00:27:57,280
technique and using it for the process

697
00:27:54,870 --> 00:27:58,689
so this is what we're trying to do here

698
00:27:57,280 --> 00:28:05,470
we're trying to take those binaries and

699
00:27:58,690 --> 00:28:07,330
understand them so to to automate since

700
00:28:05,470 --> 00:28:09,340
we're talking about automation in this

701
00:28:07,330 --> 00:28:10,929
talk we need to understand what the

702
00:28:09,340 --> 00:28:14,080
binary does right that's the first thing

703
00:28:10,930 --> 00:28:16,330
what part is the loop what part is the

704
00:28:14,080 --> 00:28:19,689
prologue what is the epilogue where the

705
00:28:16,330 --> 00:28:21,340
memory maps so to do that you need to

706
00:28:19,690 --> 00:28:23,460
understand what the binary does we need

707
00:28:21,340 --> 00:28:27,189
to identify the function of like PID

708
00:28:23,460 --> 00:28:29,800
because we only have a blob of text data

709
00:28:27,190 --> 00:28:31,290
right binary bits then we need to

710
00:28:29,800 --> 00:28:33,639
somehow make sense of it

711
00:28:31,290 --> 00:28:35,620
identify the functions and then we see

712
00:28:33,640 --> 00:28:37,480
then we'll have to see what can we do

713
00:28:35,620 --> 00:28:39,070
right tell me what is what is the p

714
00:28:37,480 --> 00:28:41,710
value you can find the binary what is

715
00:28:39,070 --> 00:28:45,299
the integral value and then change

716
00:28:41,710 --> 00:28:48,840
something in the back of the binary

717
00:28:45,299 --> 00:28:51,749
so the motivation why focusing on ICS

718
00:28:48,840 --> 00:28:53,039
binary again representing Isis banner is

719
00:28:51,749 --> 00:28:54,419
a double-edged sword right it can be

720
00:28:53,039 --> 00:28:58,049
used for good purposes can be used for

721
00:28:54,419 --> 00:29:00,779
bad purposes on the good side you can

722
00:28:58,049 --> 00:29:03,619
analyze plc malware because it do target

723
00:29:00,779 --> 00:29:08,309
plc they may target PLC binaries and

724
00:29:03,619 --> 00:29:10,110
second also sometimes there's code

725
00:29:08,309 --> 00:29:12,330
running on the PLC nobody knows where it

726
00:29:10,110 --> 00:29:15,090
came from right those devices stay there

727
00:29:12,330 --> 00:29:16,649
for 20 30 40 years and then someone says

728
00:29:15,090 --> 00:29:18,600
and what is this is doing nobody knows

729
00:29:16,649 --> 00:29:21,029
what it's doing so you can actually use

730
00:29:18,600 --> 00:29:22,498
it for forensics or for recovering your

731
00:29:21,029 --> 00:29:24,480
your control because you're not really

732
00:29:22,499 --> 00:29:26,909
sure and it's not only that sometimes

733
00:29:24,480 --> 00:29:29,519
they're very unique tweaks you do to a

734
00:29:26,909 --> 00:29:32,369
process you know whether P is pointing

735
00:29:29,519 --> 00:29:34,080
to one one or point one zero one can

736
00:29:32,369 --> 00:29:36,899
make a huge difference and you have to

737
00:29:34,080 --> 00:29:38,699
really play with the parameters and find

738
00:29:36,899 --> 00:29:41,459
cue them to the exact two digits that

739
00:29:38,700 --> 00:29:43,980
are seven digits long right the

740
00:29:41,460 --> 00:29:45,659
procedure so you need to recover back

741
00:29:43,980 --> 00:29:47,940
your parameters because you had this guy

742
00:29:45,659 --> 00:29:51,480
who optimized your process and now his

743
00:29:47,940 --> 00:29:53,820
left or he's dead or he cannot give you

744
00:29:51,480 --> 00:29:57,509
back the parameters right you need to

745
00:29:53,820 --> 00:29:59,249
take them out yourself so on the bad

746
00:29:57,509 --> 00:30:00,989
side you can create what I'll be

747
00:29:59,249 --> 00:30:06,210
discussing this time you can create

748
00:30:00,989 --> 00:30:08,489
payload dynamically or you can in by by

749
00:30:06,210 --> 00:30:10,499
having the sophistication of the

750
00:30:08,489 --> 00:30:12,239
automated analysis there's no need for

751
00:30:10,499 --> 00:30:14,700
command the control right you can

752
00:30:12,239 --> 00:30:19,109
actually make decisions luckily when you

753
00:30:14,700 --> 00:30:21,029
in the process you can you can you don't

754
00:30:19,109 --> 00:30:24,389
you can stay in the air gap and still do

755
00:30:21,029 --> 00:30:26,639
meaningful damage so for people who live

756
00:30:24,389 --> 00:30:29,519
s engineer and I'm not sure how many are

757
00:30:26,639 --> 00:30:31,199
here Isis binaries are not your typical

758
00:30:29,519 --> 00:30:32,789
binary right I mentioned that before

759
00:30:31,200 --> 00:30:37,470
it's not your standard he left that he

760
00:30:32,789 --> 00:30:39,809
load in in either Pro they their model

761
00:30:37,470 --> 00:30:40,590
actually is an infinite loop they don't

762
00:30:39,809 --> 00:30:42,989
stop

763
00:30:40,590 --> 00:30:45,178
there's no terminating condition they

764
00:30:42,989 --> 00:30:46,830
never exit right so if you try to do

765
00:30:45,179 --> 00:30:49,619
symbolic execution you realize actually

766
00:30:46,830 --> 00:30:51,928
there are ends so you have an endless

767
00:30:49,619 --> 00:30:53,759
scan cycle has been called so in every

768
00:30:51,929 --> 00:30:56,730
cycle of the process every process has

769
00:30:53,759 --> 00:30:59,070
its own cycle you have a loop that runs

770
00:30:56,730 --> 00:31:00,930
over a number so that's very

771
00:30:59,070 --> 00:31:04,230
about Isis they never stop those banners

772
00:31:00,930 --> 00:31:06,450
never end second they're heavily heavily

773
00:31:04,230 --> 00:31:08,520
heavily relying on input and output

774
00:31:06,450 --> 00:31:11,400
because as I keep saying and he probably

775
00:31:08,520 --> 00:31:13,200
tired by now they receive an input and

776
00:31:11,400 --> 00:31:15,420
producing an output right this has been

777
00:31:13,200 --> 00:31:17,310
done by the sensors and produces output

778
00:31:15,420 --> 00:31:19,320
to the actuators and these things are

779
00:31:17,310 --> 00:31:22,530
memory mapped so you see a lot of things

780
00:31:19,320 --> 00:31:24,240
coming from the i/o and typically it's

781
00:31:22,530 --> 00:31:27,240
very hard to do you know security

782
00:31:24,240 --> 00:31:29,100
analysis while the binary does nothing

783
00:31:27,240 --> 00:31:31,260
if it doesn't receive memory mapped

784
00:31:29,100 --> 00:31:33,120
inputs right it's very hard to do proper

785
00:31:31,260 --> 00:31:36,629
security analysis on that with symbolic

786
00:31:33,120 --> 00:31:39,689
execution or any other way the file

787
00:31:36,630 --> 00:31:41,310
formats the custom and proprietary again

788
00:31:39,690 --> 00:31:43,260
security by obscurity and behalf of the

789
00:31:41,310 --> 00:31:46,500
vendors everyone does a different thing

790
00:31:43,260 --> 00:31:48,660
and they believe again I'm not the one

791
00:31:46,500 --> 00:31:51,030
to judge but I might own you understand

792
00:31:48,660 --> 00:31:52,770
I'm criticizing security by obscurity is

793
00:31:51,030 --> 00:31:53,220
a good thing right not sharing how this

794
00:31:52,770 --> 00:31:57,180
works

795
00:31:53,220 --> 00:31:58,770
means they're protected but most of us

796
00:31:57,180 --> 00:32:01,470
here I guess know this this is not the

797
00:31:58,770 --> 00:32:03,870
case the the last thing that's unique

798
00:32:01,470 --> 00:32:06,720
but it's unique and helps us is those

799
00:32:03,870 --> 00:32:08,370
banners have no demise Acer's and this

800
00:32:06,720 --> 00:32:10,200
is see you can turn on to my session or

801
00:32:08,370 --> 00:32:13,379
one or two or three to get more

802
00:32:10,200 --> 00:32:14,850
aggressive there people want this to

803
00:32:13,380 --> 00:32:16,740
work they don't care about this

804
00:32:14,850 --> 00:32:18,840
performance they don't need to be robust

805
00:32:16,740 --> 00:32:20,550
and it don't really trust optimization

806
00:32:18,840 --> 00:32:22,080
like I don't want you to delete that

807
00:32:20,550 --> 00:32:23,340
code you may be wrong

808
00:32:22,080 --> 00:32:25,500
actually this never ends so it's very

809
00:32:23,340 --> 00:32:28,080
hard to know what that code is I don't

810
00:32:25,500 --> 00:32:30,300
want you to to change the variable from

811
00:32:28,080 --> 00:32:32,550
from integers to bytes because they can

812
00:32:30,300 --> 00:32:35,070
shrink no don't touch anything no to my

813
00:32:32,550 --> 00:32:38,520
zeros that's good for us because it's

814
00:32:35,070 --> 00:32:41,070
much easier to reverse-engineer them so

815
00:32:38,520 --> 00:32:43,170
to do that the two steps once these two

816
00:32:41,070 --> 00:32:44,939
do what the vendors should have been

817
00:32:43,170 --> 00:32:47,250
giving us which is knowledge about the

818
00:32:44,940 --> 00:32:50,910
format in the binary now you have to do

819
00:32:47,250 --> 00:32:52,230
it ourselves as a one-time cost but on

820
00:32:50,910 --> 00:32:53,580
the other hand they're not really that

821
00:32:52,230 --> 00:32:56,100
many vendors that do it right the

822
00:32:53,580 --> 00:32:57,689
Siemens with their step 7 platform the

823
00:32:56,100 --> 00:33:00,629
talent broadly that they have their own

824
00:32:57,690 --> 00:33:02,190
thing and then codices is pretty much

825
00:33:00,630 --> 00:33:03,510
that the poor vendors right people who

826
00:33:02,190 --> 00:33:05,490
don't want to have their own tool saying

827
00:33:03,510 --> 00:33:07,200
so they rely on something that's open

828
00:33:05,490 --> 00:33:10,230
source is out there not open source but

829
00:33:07,200 --> 00:33:11,430
it's you can rent the tool chain and use

830
00:33:10,230 --> 00:33:12,640
it right instead of building your own

831
00:33:11,430 --> 00:33:14,680
compiler

832
00:33:12,640 --> 00:33:16,960
take the one that works already and use

833
00:33:14,680 --> 00:33:19,950
it in your own company so they're not

834
00:33:16,960 --> 00:33:22,270
that many numbers platform so we can use

835
00:33:19,950 --> 00:33:24,430
we can do this manually you don't need

836
00:33:22,270 --> 00:33:28,120
to automate that part you can see and

837
00:33:24,430 --> 00:33:30,130
you can add it to our our tool so the

838
00:33:28,120 --> 00:33:31,659
second phase is to actually what

839
00:33:30,130 --> 00:33:33,640
happened dynamically right the actual

840
00:33:31,660 --> 00:33:37,270
analysis that would in the binary and

841
00:33:33,640 --> 00:33:39,130
we'll see exactly what we do so we have

842
00:33:37,270 --> 00:33:40,420
a tool that we published again I'm not

843
00:33:39,130 --> 00:33:44,560
selling anything right that's open

844
00:33:40,420 --> 00:33:46,390
source and free and props to my students

845
00:33:44,560 --> 00:33:47,770
for doing it he's he actually did all

846
00:33:46,390 --> 00:33:50,290
that work and I'm here taking the credit

847
00:33:47,770 --> 00:33:53,230
for it but that's a very common piece

848
00:33:50,290 --> 00:33:54,700
the adviser pizza the interaction so

849
00:33:53,230 --> 00:33:57,100
Tasos did all this who I can present

850
00:33:54,700 --> 00:34:00,760
here he's not working for red balloon

851
00:33:57,100 --> 00:34:02,770
security in New York so he created a

852
00:34:00,760 --> 00:34:04,660
tool that we published and and DSS and

853
00:34:02,770 --> 00:34:05,980
this it's open source on github and

854
00:34:04,660 --> 00:34:08,970
other kids have linked sorry it's going

855
00:34:05,980 --> 00:34:12,460
to be the get abilities at the end and

856
00:34:08,969 --> 00:34:14,080
you can load a binary a PLC binary to it

857
00:34:12,460 --> 00:34:18,520
and you can dissect it for you

858
00:34:14,080 --> 00:34:21,699
so what it does it takes this that

859
00:34:18,520 --> 00:34:23,710
cannot be opened by either pro or guitar

860
00:34:21,699 --> 00:34:26,649
I guess who haven't tried it yet but why

861
00:34:23,710 --> 00:34:28,840
why would it work and then you ICS ref

862
00:34:26,649 --> 00:34:31,359
the as we call the tool give you

863
00:34:28,840 --> 00:34:33,820
something like this back right so it

864
00:34:31,360 --> 00:34:36,370
reads the binary and reconstruct is

865
00:34:33,820 --> 00:34:38,950
control flow graph and it also creates

866
00:34:36,370 --> 00:34:41,560
meaningful names for your static

867
00:34:38,949 --> 00:34:43,210
libraries it also creates it gives you

868
00:34:41,560 --> 00:34:45,159
the interactions between what's

869
00:34:43,210 --> 00:34:47,050
happening so you can clearly see this is

870
00:34:45,159 --> 00:34:49,659
the main loop right going to the fixed

871
00:34:47,050 --> 00:34:51,010
cycle and then from this you can

872
00:34:49,659 --> 00:34:54,810
understand that's a PID controller

873
00:34:51,010 --> 00:34:58,870
actually that looks like a DI controller

874
00:34:54,810 --> 00:35:01,090
so now you you know you know nothing

875
00:34:58,870 --> 00:35:04,359
about the binary now you can see a lot

876
00:35:01,090 --> 00:35:06,370
of things right to do that which is a

877
00:35:04,360 --> 00:35:09,970
technical part I'll go quickly through

878
00:35:06,370 --> 00:35:12,040
that so ICS ref can understand the

879
00:35:09,970 --> 00:35:14,109
binary subroutines it understand the

880
00:35:12,040 --> 00:35:16,150
dynamic and Static functions it gives

881
00:35:14,110 --> 00:35:18,520
you back and the physical input/output

882
00:35:16,150 --> 00:35:21,190
you give you the call graph and as a

883
00:35:18,520 --> 00:35:22,960
case study we actually producing PID

884
00:35:21,190 --> 00:35:24,990
argument that you can see and you can

885
00:35:22,960 --> 00:35:27,720
change by

886
00:35:24,990 --> 00:35:29,490
by inline passing of the binary so you

887
00:35:27,720 --> 00:35:31,560
can take a battery and change its

888
00:35:29,490 --> 00:35:36,290
p-value and give it back to the PLC

889
00:35:31,560 --> 00:35:40,049
which can create an automatic attack so

890
00:35:36,290 --> 00:35:42,390
the binary again remember PLC bhangra

891
00:35:40,050 --> 00:35:44,130
may not be executable but it has have

892
00:35:42,390 --> 00:35:47,190
machine code that executes in the CPU

893
00:35:44,130 --> 00:35:49,589
and the loader the unique runtime of its

894
00:35:47,190 --> 00:35:52,470
vendor is loading that machine code into

895
00:35:49,589 --> 00:35:54,630
the main memory so in our case the PLC

896
00:35:52,470 --> 00:35:56,580
Byner the control binary these are the

897
00:35:54,630 --> 00:35:58,500
steps these are the things we found

898
00:35:56,580 --> 00:36:00,690
ourselves by manual reverse engineering

899
00:35:58,500 --> 00:36:03,150
so it starts with some offset and then

900
00:36:00,690 --> 00:36:05,640
some support subroutines the back 800

901
00:36:03,150 --> 00:36:09,119
always and then you have statically

902
00:36:05,640 --> 00:36:12,150
linked functions right so this come from

903
00:36:09,119 --> 00:36:16,140
you know like C++ you have your STD was

904
00:36:12,150 --> 00:36:18,750
see a cdio in in those environments you

905
00:36:16,140 --> 00:36:20,640
get your own blocks you can use so like

906
00:36:18,750 --> 00:36:23,099
a PID you don't have to program it you

907
00:36:20,640 --> 00:36:24,930
can bring it from the library so this is

908
00:36:23,099 --> 00:36:26,700
breaking things from the library these

909
00:36:24,930 --> 00:36:29,368
are what the user does user-defined

910
00:36:26,700 --> 00:36:31,169
blocks are here so if I write my own

911
00:36:29,369 --> 00:36:33,359
block is gonna be in the second part of

912
00:36:31,170 --> 00:36:34,680
the binary so here is it's good for us

913
00:36:33,359 --> 00:36:36,810
because these are we know these things

914
00:36:34,680 --> 00:36:39,029
this is unique to the binary but these

915
00:36:36,810 --> 00:36:47,190
are across all binaries right so we can

916
00:36:39,030 --> 00:36:50,940
differentiate the two with regards to

917
00:36:47,190 --> 00:36:52,800
memory mapping every vendor and every

918
00:36:50,940 --> 00:36:54,839
actually permutation well device usually

919
00:36:52,800 --> 00:36:57,420
its own memory mapped system right

920
00:36:54,839 --> 00:36:59,970
however we the caduceus environment

921
00:36:57,420 --> 00:37:02,520
because it support so many devices we

922
00:36:59,970 --> 00:37:04,560
managed to decrypt its database and

923
00:37:02,520 --> 00:37:06,839
collect automatically all the memory

924
00:37:04,560 --> 00:37:09,330
maps used by all devices so we know for

925
00:37:06,839 --> 00:37:11,700
the guado the word right so we know for

926
00:37:09,330 --> 00:37:13,500
the guado that these are the what's

927
00:37:11,700 --> 00:37:15,750
coming to the input and what's leaving

928
00:37:13,500 --> 00:37:17,609
for the apple so if we observe what's

929
00:37:15,750 --> 00:37:19,440
going to those locations we can

930
00:37:17,609 --> 00:37:21,330
understand exactly were your sensory

931
00:37:19,440 --> 00:37:23,250
inputs coming in and what the x-rays and

932
00:37:21,330 --> 00:37:26,730
output is coming out and we can use it

933
00:37:23,250 --> 00:37:32,490
to inject our payload to extract those

934
00:37:26,730 --> 00:37:36,330
memory maps the codices has the TD files

935
00:37:32,490 --> 00:37:37,759
that are encrypted encrypted means that

936
00:37:36,330 --> 00:37:39,980
they have

937
00:37:37,760 --> 00:37:43,790
it's a one-time pad gone wrong which is

938
00:37:39,980 --> 00:37:46,970
a one-time pad always they have one key

939
00:37:43,790 --> 00:37:49,460
and they accelerate is 256 bytes keys

940
00:37:46,970 --> 00:37:51,379
but these Keys just replicated right so

941
00:37:49,460 --> 00:37:52,610
once you start making connections

942
00:37:51,380 --> 00:37:55,610
between different files and different

943
00:37:52,610 --> 00:37:58,430
components you can very easily find the

944
00:37:55,610 --> 00:38:00,740
key so it's supposed to encrypted but we

945
00:37:58,430 --> 00:38:03,529
very easily reverse engineered it so

946
00:38:00,740 --> 00:38:06,140
from those those target files describe

947
00:38:03,530 --> 00:38:08,720
how its device works uniquely so what

948
00:38:06,140 --> 00:38:10,580
it's its own memory maps its own unique

949
00:38:08,720 --> 00:38:13,520
characteristics so we can automate that

950
00:38:10,580 --> 00:38:15,500
process too so eventually you get

951
00:38:13,520 --> 00:38:18,290
something like this which says what is

952
00:38:15,500 --> 00:38:20,120
the version of the firmware what kind of

953
00:38:18,290 --> 00:38:21,980
car is it characteristics it has and

954
00:38:20,120 --> 00:38:23,720
gives you some more information you can

955
00:38:21,980 --> 00:38:29,630
use while you dynamically creating a

956
00:38:23,720 --> 00:38:32,589
payload but what's more interesting what

957
00:38:29,630 --> 00:38:36,080
we got mostly from this process is that

958
00:38:32,590 --> 00:38:38,150
remember I mentioned those purities have

959
00:38:36,080 --> 00:38:41,000
their own unique libraries like again

960
00:38:38,150 --> 00:38:43,070
like standard C you can get printf

961
00:38:41,000 --> 00:38:45,800
without need the need to type it

962
00:38:43,070 --> 00:38:47,840
yourself here you can get PID without

963
00:38:45,800 --> 00:38:50,180
the need to type it yourself and these

964
00:38:47,840 --> 00:38:52,070
because these are fixed they appear in

965
00:38:50,180 --> 00:38:54,830
those theater files right so once we

966
00:38:52,070 --> 00:38:57,140
decrypt that we and will have it in our

967
00:38:54,830 --> 00:38:59,270
database now we can start mapping things

968
00:38:57,140 --> 00:39:01,670
in the binary that we know that exists

969
00:38:59,270 --> 00:39:03,470
right and once we do that we can

970
00:39:01,670 --> 00:39:07,310
identify the exact functionality of the

971
00:39:03,470 --> 00:39:09,080
binary and we in order to create a

972
00:39:07,310 --> 00:39:11,630
signature because we don't want to

973
00:39:09,080 --> 00:39:14,270
compare line by line but we can look at

974
00:39:11,630 --> 00:39:17,000
signature instead so we take the opcode

975
00:39:14,270 --> 00:39:21,110
sequence and we hash it and we store

976
00:39:17,000 --> 00:39:23,900
this as a as a signature of the function

977
00:39:21,110 --> 00:39:27,230
so we do that for the function as well

978
00:39:23,900 --> 00:39:28,820
and then we we had we compared to our

979
00:39:27,230 --> 00:39:30,410
database and we know that's a PID

980
00:39:28,820 --> 00:39:34,580
because it matches the signature in our

981
00:39:30,410 --> 00:39:37,160
database so this is what you get out of

982
00:39:34,580 --> 00:39:39,440
a visualization part and what's I think

983
00:39:37,160 --> 00:39:42,440
what's what's the most interesting part

984
00:39:39,440 --> 00:39:44,930
here is with the Isis roof ref tool

985
00:39:42,440 --> 00:39:47,660
where we published gives you the ability

986
00:39:44,930 --> 00:39:49,370
to understand more unique things like

987
00:39:47,660 --> 00:39:51,259
what is the pressure what is the

988
00:39:49,370 --> 00:39:55,190
integral what is a derivative

989
00:39:51,260 --> 00:39:56,960
so in this case we did some we have to

990
00:39:55,190 --> 00:39:58,400
do symbolic execution not to understand

991
00:39:56,960 --> 00:39:59,840
what kind of parameters are possible

992
00:39:58,400 --> 00:40:01,460
functions and actually all of them are

993
00:39:59,840 --> 00:40:03,980
going through the stack remember an

994
00:40:01,460 --> 00:40:05,930
optimization that just do the same safe

995
00:40:03,980 --> 00:40:08,359
thing over and over right so things go

996
00:40:05,930 --> 00:40:10,100
to the stack and once we will see that

997
00:40:08,359 --> 00:40:12,950
then we can start understanding what

998
00:40:10,100 --> 00:40:15,890
corresponds to what so we can give back

999
00:40:12,950 --> 00:40:19,129
to the user of the tool that look this

1000
00:40:15,890 --> 00:40:21,680
binary has a PID loop and this is where

1001
00:40:19,130 --> 00:40:24,050
the P is and that's the value of P and

1002
00:40:21,680 --> 00:40:27,890
we also further allow the user to change

1003
00:40:24,050 --> 00:40:30,530
the values of those parameters through

1004
00:40:27,890 --> 00:40:33,500
these binary modification so again this

1005
00:40:30,530 --> 00:40:35,750
is a proof of concept of what you can do

1006
00:40:33,500 --> 00:40:37,910
given the information you get from the

1007
00:40:35,750 --> 00:40:41,900
tool right you can change the P again

1008
00:40:37,910 --> 00:40:44,509
from 0 11 to 0 11 1 right and that may

1009
00:40:41,900 --> 00:40:47,390
be small change in terms of real-world

1010
00:40:44,510 --> 00:40:50,119
thinking but in in a process like a

1011
00:40:47,390 --> 00:40:51,618
point zero zero zero one can mean a lot

1012
00:40:50,119 --> 00:40:54,109
right can actually may destroy the

1013
00:40:51,619 --> 00:40:55,280
process completely so that's why you

1014
00:40:54,109 --> 00:40:56,960
also need further intelligence to

1015
00:40:55,280 --> 00:41:01,910
understand what the new P or the new I

1016
00:40:56,960 --> 00:41:05,869
should be so quickly finish because I'm

1017
00:41:01,910 --> 00:41:09,259
out of time so you can find it online

1018
00:41:05,869 --> 00:41:12,109
one one example we have we created what

1019
00:41:09,260 --> 00:41:14,359
we call a team in a box so this is an

1020
00:41:12,109 --> 00:41:16,759
automated payload generation and

1021
00:41:14,359 --> 00:41:19,040
delivery mechanism so it does all the

1022
00:41:16,760 --> 00:41:20,930
stuff I described in order and can

1023
00:41:19,040 --> 00:41:25,160
change the process in our case that

1024
00:41:20,930 --> 00:41:29,299
insist man it acts it Cree it makes the

1025
00:41:25,160 --> 00:41:31,009
reactor pressure go up to to an extent

1026
00:41:29,300 --> 00:41:32,180
that it would have been destroyed but of

1027
00:41:31,010 --> 00:41:33,650
course there are physical alarms right

1028
00:41:32,180 --> 00:41:35,990
in place that they would stop that from

1029
00:41:33,650 --> 00:41:39,040
happening but it creates problems for

1030
00:41:35,990 --> 00:41:42,049
the process that we know what they are

1031
00:41:39,040 --> 00:41:44,029
so in this case this delivery mechanism

1032
00:41:42,050 --> 00:41:45,440
for you scan the network you've through

1033
00:41:44,030 --> 00:41:47,480
our fingerprinting mechanism you

1034
00:41:45,440 --> 00:41:49,520
identify the devices and then you

1035
00:41:47,480 --> 00:41:53,060
fingerprint the PLC you know the wogo

1036
00:41:49,520 --> 00:41:54,770
you log in as expected they're hard core

1037
00:41:53,060 --> 00:41:57,590
credentials everywhere in the RCS world

1038
00:41:54,770 --> 00:41:59,509
same case with our Google device you

1039
00:41:57,590 --> 00:42:01,790
download the binary you reverse engineer

1040
00:41:59,510 --> 00:42:04,500
with our tool the tool gives you back

1041
00:42:01,790 --> 00:42:05,880
the APD functions you modify the PI

1042
00:42:04,500 --> 00:42:08,250
you change the values as I explained

1043
00:42:05,880 --> 00:42:10,500
before and then you have to pack up the

1044
00:42:08,250 --> 00:42:12,780
binary and the bandit has a there's a

1045
00:42:10,500 --> 00:42:15,060
CRC that's most of all integrity right

1046
00:42:12,780 --> 00:42:16,859
now let's not blame them for poor

1047
00:42:15,060 --> 00:42:18,960
security CRC check sums are for

1048
00:42:16,859 --> 00:42:21,900
integrity so we also need to update the

1049
00:42:18,960 --> 00:42:24,329
CRC and then send back the binary and

1050
00:42:21,900 --> 00:42:26,880
for for execution of the new binary and

1051
00:42:24,329 --> 00:42:28,410
if you do that we sold some sample

1052
00:42:26,880 --> 00:42:30,030
scenarios that if you play with the

1053
00:42:28,410 --> 00:42:32,129
reactor you can either change the

1054
00:42:30,030 --> 00:42:35,130
pressure to go up and potentially

1055
00:42:32,130 --> 00:42:37,140
explode but you can more interestingly

1056
00:42:35,130 --> 00:42:38,970
you can actually cause it to go down and

1057
00:42:37,140 --> 00:42:41,160
this may not be noticed it will just

1058
00:42:38,970 --> 00:42:43,740
decrease the performance so you won't be

1059
00:42:41,160 --> 00:42:45,420
producing your product efficiently so

1060
00:42:43,740 --> 00:42:47,578
that's the most stealthy attack right so

1061
00:42:45,420 --> 00:42:49,650
you can reduce things a bit that will

1062
00:42:47,579 --> 00:42:51,900
incur incur financial losses to the

1063
00:42:49,650 --> 00:42:54,569
company but this will be accumulate over

1064
00:42:51,900 --> 00:42:56,849
time so you can in the salon it

1065
00:42:54,569 --> 00:42:58,890
desalination calculated you can stay

1066
00:42:56,849 --> 00:43:04,140
within operational parameters and caused

1067
00:42:58,890 --> 00:43:05,640
more than $5,000,000 dollars a year so

1068
00:43:04,140 --> 00:43:08,040
that's the results have been mentioning

1069
00:43:05,640 --> 00:43:10,230
that you can cause it to go down or to

1070
00:43:08,040 --> 00:43:12,509
go up by changing so this by changing

1071
00:43:10,230 --> 00:43:17,400
the P parameter the proportion and this

1072
00:43:12,510 --> 00:43:19,890
by changing the I the integral so I'll

1073
00:43:17,400 --> 00:43:22,940
finish here the last thing I'll say is

1074
00:43:19,890 --> 00:43:25,529
that to make it persistent you have to

1075
00:43:22,940 --> 00:43:27,420
you cannot just change something once

1076
00:43:25,530 --> 00:43:29,460
right you have to somehow make it stay

1077
00:43:27,420 --> 00:43:32,579
there and we had an example that we

1078
00:43:29,460 --> 00:43:35,369
demonstrated at blackhat and was part of

1079
00:43:32,579 --> 00:43:38,280
the hardware CTF we had in the power

1080
00:43:35,369 --> 00:43:40,380
grid in the US this disease Z device

1081
00:43:38,280 --> 00:43:44,849
used it's a it's a feeder monorail relay

1082
00:43:40,380 --> 00:43:47,400
and when was this this was a 1990s

1083
00:43:44,849 --> 00:43:49,760
device right and it has authentication

1084
00:43:47,400 --> 00:43:52,589
but authentication is homebrew

1085
00:43:49,760 --> 00:43:54,930
encryption in a sense by john electric

1086
00:43:52,589 --> 00:43:59,190
when we reported an ability to them and

1087
00:43:54,930 --> 00:44:00,569
said hey why this is nobody cared ID was

1088
00:43:59,190 --> 00:44:02,730
the first one parts it did something

1089
00:44:00,569 --> 00:44:04,800
nobody was doing anything so you can't

1090
00:44:02,730 --> 00:44:06,060
blame a see in the 90s we actually try

1091
00:44:04,800 --> 00:44:08,490
to do some right in the infinite good

1092
00:44:06,060 --> 00:44:09,750
point and they said this device are very

1093
00:44:08,490 --> 00:44:11,848
old but there's nothing we can do about

1094
00:44:09,750 --> 00:44:14,609
it right so maybe it was a way for them

1095
00:44:11,849 --> 00:44:16,079
to make people buy new devices so in any

1096
00:44:14,609 --> 00:44:17,190
case these are still deployed and that's

1097
00:44:16,079 --> 00:44:18,240
why we have them because they are

1098
00:44:17,190 --> 00:44:20,640
deployed

1099
00:44:18,240 --> 00:44:22,830
so in that in part of the talents of

1100
00:44:20,640 --> 00:44:25,230
whoever will solve it is that you can

1101
00:44:22,830 --> 00:44:27,480
actually through Modbus you can get the

1102
00:44:25,230 --> 00:44:29,910
pass code the pass code is the encrypted

1103
00:44:27,480 --> 00:44:31,500
password that you can use you don't know

1104
00:44:29,910 --> 00:44:38,129
what it is but you can see its encrypted

1105
00:44:31,500 --> 00:44:39,750
form encrypted so in our case we have in

1106
00:44:38,130 --> 00:44:42,360
order to change anything you have to

1107
00:44:39,750 --> 00:44:44,070
authenticate but it's weird to get

1108
00:44:42,360 --> 00:44:46,920
Modbus registers you don't need to

1109
00:44:44,070 --> 00:44:48,900
indicate so we can get the pass code and

1110
00:44:46,920 --> 00:44:50,370
if we can invest in general that then

1111
00:44:48,900 --> 00:44:52,410
you can use it to authenticate back and

1112
00:44:50,370 --> 00:44:55,230
change things so that's what we did

1113
00:44:52,410 --> 00:44:57,839
actually um that's what with what we

1114
00:44:55,230 --> 00:44:59,940
reported to DD will worth more than a

1115
00:44:57,840 --> 00:45:02,700
year and a half with them and we finally

1116
00:44:59,940 --> 00:45:04,830
after two years we published a black hat

1117
00:45:02,700 --> 00:45:07,080
two years ago that vulnerability we

1118
00:45:04,830 --> 00:45:08,549
discovered but again the idea is whoever

1119
00:45:07,080 --> 00:45:11,220
solve the challenge right it's a very

1120
00:45:08,550 --> 00:45:13,860
poorly permutation of a block block

1121
00:45:11,220 --> 00:45:16,649
cipher with no installation vector and

1122
00:45:13,860 --> 00:45:19,200
Linux formations right this is like if

1123
00:45:16,650 --> 00:45:22,350
he the Tecla so don't do things they

1124
00:45:19,200 --> 00:45:23,100
followed it step right no IV linear

1125
00:45:22,350 --> 00:45:24,870
transformations

1126
00:45:23,100 --> 00:45:28,440
they did all of them and that's what

1127
00:45:24,870 --> 00:45:29,910
they came up with so that picked up a

1128
00:45:28,440 --> 00:45:34,260
lot of traction actually when it was

1129
00:45:29,910 --> 00:45:36,509
reported and then BBC reuters reported

1130
00:45:34,260 --> 00:45:39,390
on that it was big for us to it became

1131
00:45:36,510 --> 00:45:41,280
pretty scarier at the point it became

1132
00:45:39,390 --> 00:45:43,140
too annoying when generalists pick up

1133
00:45:41,280 --> 00:45:45,000
stuff they may blow them out of

1134
00:45:43,140 --> 00:45:48,359
proportion that created issues to us and

1135
00:45:45,000 --> 00:45:50,070
our industrial partners but I mean the

1136
00:45:48,360 --> 00:45:52,110
many good lessons that we got out of

1137
00:45:50,070 --> 00:45:54,510
this experience so I don't think I would

1138
00:45:52,110 --> 00:45:56,250
ever go to the black head again so I'll

1139
00:45:54,510 --> 00:45:59,400
stop here I think in past time much

1140
00:45:56,250 --> 00:46:01,620
pastime but what I want to finish is

1141
00:45:59,400 --> 00:46:03,630
that at NYU which is a few kilometers

1142
00:46:01,620 --> 00:46:06,330
away from here and where you Bobby we

1143
00:46:03,630 --> 00:46:08,520
have our Smart City test but there you

1144
00:46:06,330 --> 00:46:10,560
only saw the small part of it that we

1145
00:46:08,520 --> 00:46:12,900
have were smart we do having - variety

1146
00:46:10,560 --> 00:46:14,430
use of the chemical the Sun nation and

1147
00:46:12,900 --> 00:46:16,680
we have traffic lights Intel's

1148
00:46:14,430 --> 00:46:18,450
deportation and device that typically

1149
00:46:16,680 --> 00:46:21,870
appear in smart house mark bidding like

1150
00:46:18,450 --> 00:46:23,970
fire alarms or access control cars so

1151
00:46:21,870 --> 00:46:25,770
it's it's open to everyone you can come

1152
00:46:23,970 --> 00:46:27,509
and hug come and play with the devices

1153
00:46:25,770 --> 00:46:31,070
would have there be very happy to have

1154
00:46:27,510 --> 00:46:32,630
you over so if you need more information

1155
00:46:31,070 --> 00:46:34,780
that's my Twitter account I'm not

1156
00:46:32,630 --> 00:46:37,190
posting math sorry I'm mostly lurker

1157
00:46:34,780 --> 00:46:39,710
that people here were actually much more

1158
00:46:37,190 --> 00:46:41,510
I good at producing content right now

1159
00:46:39,710 --> 00:46:44,240
mostly follows that but you can follow

1160
00:46:41,510 --> 00:46:46,730
me to make me feel happy but the tool is

1161
00:46:44,240 --> 00:46:49,279
here you can download it and play with

1162
00:46:46,730 --> 00:46:51,140
it with very happy if you do it and you

1163
00:46:49,280 --> 00:46:54,010
can find information about the D I

1164
00:46:51,140 --> 00:46:56,420
mentioned the block of talk in 2017 so

1165
00:46:54,010 --> 00:46:58,510
that is for me and I know if there any

1166
00:46:56,420 --> 00:46:58,510
questions

