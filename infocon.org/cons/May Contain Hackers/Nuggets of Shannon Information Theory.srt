1
00:00:01,280 --> 00:00:16,480
[Music]

2
00:00:16,480 --> 00:00:18,800
all right so i love this crowd because

3
00:00:18,800 --> 00:00:21,199
you're here for one of the most hardcore

4
00:00:21,199 --> 00:00:23,600
uh talks uh in the whole schedule i'm

5
00:00:23,600 --> 00:00:26,000
very excited about this myself so the

6
00:00:26,000 --> 00:00:28,160
the title is nuggets of shannon

7
00:00:28,160 --> 00:00:30,640
information theory and our presenter

8
00:00:30,640 --> 00:00:32,159
christian will be guiding you through

9
00:00:32,159 --> 00:00:33,760
things

10
00:00:33,760 --> 00:00:37,360
in his 1948 scientific paper a

11
00:00:37,360 --> 00:00:40,000
mathematical theory of communication

12
00:00:40,000 --> 00:00:43,120
claude e shannon introduced the word bit

13
00:00:43,120 --> 00:00:44,960
the article laid down the foundations

14
00:00:44,960 --> 00:00:47,360
for the field of information theory

15
00:00:47,360 --> 00:00:49,600
which in turn opened up the way to

16
00:00:49,600 --> 00:00:52,800
digital information processing

17
00:00:52,800 --> 00:00:55,199
christian will present an accessible way

18
00:00:55,199 --> 00:00:57,680
three nuggets from shannon information

19
00:00:57,680 --> 00:00:58,559
theory

20
00:00:58,559 --> 00:01:01,680
so take it away christian

21
00:01:06,240 --> 00:01:09,200
all right thanks a lot for coming

22
00:01:09,200 --> 00:01:11,200
as uh the herald just said my name is

23
00:01:11,200 --> 00:01:13,360
christian schaffner i'm a professor at

24
00:01:13,360 --> 00:01:14,960
university of amsterdam and i've been

25
00:01:14,960 --> 00:01:16,960
teaching a course about this topic about

26
00:01:16,960 --> 00:01:19,119
information theory for the last few

27
00:01:19,119 --> 00:01:21,680
years to master students so i've now

28
00:01:21,680 --> 00:01:23,280
taken on the the challenge of

29
00:01:23,280 --> 00:01:25,920
compressing this whole course into like

30
00:01:25,920 --> 00:01:29,040
40 minutes just for you so enjoy

31
00:01:29,040 --> 00:01:30,960
i hope i i have time to cover some of

32
00:01:30,960 --> 00:01:33,360
the nuggets some of the gold pieces of

33
00:01:33,360 --> 00:01:35,920
this theory of shannon

34
00:01:35,920 --> 00:01:38,079
let me start off with kind of a

35
00:01:38,079 --> 00:01:40,720
philosophical question namely what is

36
00:01:40,720 --> 00:01:42,880
communication

37
00:01:42,880 --> 00:01:45,040
and we are communicating all the time

38
00:01:45,040 --> 00:01:48,880
but how do we actually define this

39
00:01:48,960 --> 00:01:50,720
ever thought about that

40
00:01:50,720 --> 00:01:52,479
yeah i see

41
00:01:52,479 --> 00:01:55,280
yeah i eating first

42
00:01:55,280 --> 00:01:57,520
yeah

43
00:01:58,640 --> 00:02:00,719
yeah very good so it at least involves

44
00:02:00,719 --> 00:02:03,200
two parties here's what khloe shannon

45
00:02:03,200 --> 00:02:05,280
proposed the fundamental problem of

46
00:02:05,280 --> 00:02:07,520
communication is that of reproducing at

47
00:02:07,520 --> 00:02:08,560
one point

48
00:02:08,560 --> 00:02:10,318
exactly are approximately a message

49
00:02:10,318 --> 00:02:12,720
selected at another point so indeed

50
00:02:12,720 --> 00:02:15,599
there's two players alice and bob yeah

51
00:02:15,599 --> 00:02:18,640
your two hands and uh alice wants to

52
00:02:18,640 --> 00:02:20,720
communicate with bob and wants to send a

53
00:02:20,720 --> 00:02:23,440
particular message say zero one one zero

54
00:02:23,440 --> 00:02:25,599
and then hopefully after communication

55
00:02:25,599 --> 00:02:27,599
has happened bob

56
00:02:27,599 --> 00:02:29,280
thinks that alice has been sending this

57
00:02:29,280 --> 00:02:31,680
message and so that's a way of defining

58
00:02:31,680 --> 00:02:33,840
communication

59
00:02:33,840 --> 00:02:35,120
all right so

60
00:02:35,120 --> 00:02:36,879
let us take us back a little bit into

61
00:02:36,879 --> 00:02:38,959
the history of wireless communication

62
00:02:38,959 --> 00:02:41,120
this can go all the way back to

63
00:02:41,120 --> 00:02:42,720
smoke signals

64
00:02:42,720 --> 00:02:44,560
now you can imagine that's that that has

65
00:02:44,560 --> 00:02:46,319
been used for maybe hundreds thousands

66
00:02:46,319 --> 00:02:47,599
of years

67
00:02:47,599 --> 00:02:49,519
you can imagine it's not very efficient

68
00:02:49,519 --> 00:02:51,519
yeah it does reach very far you can see

69
00:02:51,519 --> 00:02:53,360
smoke from far away but like sending

70
00:02:53,360 --> 00:02:55,680
actual messages that's probably rather

71
00:02:55,680 --> 00:02:56,879
hard

72
00:02:56,879 --> 00:02:57,760
um

73
00:02:57,760 --> 00:02:59,519
zooming into a little bit the second

74
00:02:59,519 --> 00:03:01,680
half of the 19th century when maxwell's

75
00:03:01,680 --> 00:03:04,560
equations were derived and people

76
00:03:04,560 --> 00:03:06,319
started to understand how to handle

77
00:03:06,319 --> 00:03:08,480
electricity and people like this guy

78
00:03:08,480 --> 00:03:10,720
here giuliano marconi

79
00:03:10,720 --> 00:03:13,040
demonstrates a wireless telegraph so

80
00:03:13,040 --> 00:03:15,120
instead of using a wire and using morse

81
00:03:15,120 --> 00:03:16,959
code you can actually do this without a

82
00:03:16,959 --> 00:03:18,560
wire wireless

83
00:03:18,560 --> 00:03:22,239
and in around this time as well 1920s um

84
00:03:22,239 --> 00:03:24,959
fm radio was demonstrated here by edwin

85
00:03:24,959 --> 00:03:27,040
howard armstrong here on the beach with

86
00:03:27,040 --> 00:03:28,159
his wife

87
00:03:28,159 --> 00:03:30,879
so back then around this time

88
00:03:30,879 --> 00:03:32,799
things were mostly analog and there was

89
00:03:32,799 --> 00:03:34,720
some ad-hoc engineering a bit what

90
00:03:34,720 --> 00:03:37,360
hackers do here as well tailored to an

91
00:03:37,360 --> 00:03:39,120
application but there are big open

92
00:03:39,120 --> 00:03:40,319
questions like

93
00:03:40,319 --> 00:03:42,239
is there a general methodology for

94
00:03:42,239 --> 00:03:44,400
designing these communication systems

95
00:03:44,400 --> 00:03:46,959
how can we actually reliably communicate

96
00:03:46,959 --> 00:03:49,360
in noisy imagine these devices are very

97
00:03:49,360 --> 00:03:51,519
imperfect there's a lot of problems with

98
00:03:51,519 --> 00:03:52,319
them

99
00:03:52,319 --> 00:03:55,120
and how fast can we go in principle

100
00:03:55,120 --> 00:03:57,599
and these questions were answered by our

101
00:03:57,599 --> 00:04:00,000
hero the hero of this talk claude elwood

102
00:04:00,000 --> 00:04:01,040
shannon

103
00:04:01,040 --> 00:04:02,640
and he is the father of information

104
00:04:02,640 --> 00:04:04,239
theory as you just heard before he is

105
00:04:04,239 --> 00:04:06,720
the one who vented the word bit

106
00:04:06,720 --> 00:04:09,360
he is a graduate of mit that's a

107
00:04:09,360 --> 00:04:10,799
famous university in the us

108
00:04:10,799 --> 00:04:13,360
massachusetts institute of technology on

109
00:04:13,360 --> 00:04:15,120
a totally different topic and algebra

110
00:04:15,120 --> 00:04:17,600
for theoretical genetics so he knew a

111
00:04:17,600 --> 00:04:19,519
lot of different things and then after

112
00:04:19,519 --> 00:04:21,918
that he joined bell labs so bell labs

113
00:04:21,918 --> 00:04:24,000
was really the place to be in this time

114
00:04:24,000 --> 00:04:26,639
as a scientist and during his time at

115
00:04:26,639 --> 00:04:29,120
bellaps he also rejoined as professor at

116
00:04:29,120 --> 00:04:31,120
mit and here's a funny thing i would

117
00:04:31,120 --> 00:04:32,880
like to read out so when he returned to

118
00:04:32,880 --> 00:04:35,680
mit in 1958 he continued to threaten

119
00:04:35,680 --> 00:04:38,240
corridor walkers on his unicycle

120
00:04:38,240 --> 00:04:39,840
sometimes augmenting the hazard by

121
00:04:39,840 --> 00:04:40,880
juggling

122
00:04:40,880 --> 00:04:42,400
no one was ever sure whether these

123
00:04:42,400 --> 00:04:43,680
activities were part of some new

124
00:04:43,680 --> 00:04:45,280
breakthrough or whether he just found

125
00:04:45,280 --> 00:04:47,520
them amusing he worked for example on a

126
00:04:47,520 --> 00:04:50,080
motorized pogo stick which he claimed

127
00:04:50,080 --> 00:04:51,840
would mean he could abandon the unicycle

128
00:04:51,840 --> 00:04:54,560
so feared by his colleagues so so this

129
00:04:54,560 --> 00:04:56,080
was a funny guy and i think he would

130
00:04:56,080 --> 00:04:58,240
have loved to uh to have the experience

131
00:04:58,240 --> 00:05:01,199
here at this hacker camp and as as you

132
00:05:01,199 --> 00:05:03,280
just heard he likes juggling there's

133
00:05:03,280 --> 00:05:04,560
actually a little movie i want to show

134
00:05:04,560 --> 00:05:05,360
you

135
00:05:05,360 --> 00:05:08,080
um let's see if that works

136
00:05:08,080 --> 00:05:10,800
um i downloaded it so maybe

137
00:05:10,800 --> 00:05:14,560
constructing these juggling clowns

138
00:05:15,840 --> 00:05:17,360
to become more intrigued with the

139
00:05:17,360 --> 00:05:19,360
problem of building a real juggling

140
00:05:19,360 --> 00:05:22,160
machine machines like this only give the

141
00:05:22,160 --> 00:05:24,720
illusion of juggling they have a complex

142
00:05:24,720 --> 00:05:27,120
mechanism but the uh

143
00:05:27,120 --> 00:05:30,320
props as we call never actually

144
00:05:30,320 --> 00:05:33,440
leave the ground they're all held up by

145
00:05:33,440 --> 00:05:35,919
black wires and so on

146
00:05:35,919 --> 00:05:37,680
and so far they know no one had ever

147
00:05:37,680 --> 00:05:40,080
built a real juggling machine uh

148
00:05:40,080 --> 00:05:41,919
occurred to me that i would like to try

149
00:05:41,919 --> 00:05:44,320
to do that

150
00:05:44,320 --> 00:05:46,479
the juggler's skills cannot yet be

151
00:05:46,479 --> 00:05:48,800
engineered to build a device that could

152
00:05:48,800 --> 00:05:51,680
imitate him dr shannon had to simplify

153
00:05:51,680 --> 00:05:55,199
the problem when you bounce juggle

154
00:05:55,199 --> 00:05:55,919
the

155
00:05:55,919 --> 00:05:57,759
ball is almost stationary so you're not

156
00:05:57,759 --> 00:05:59,280
wasting much energy all you have to do

157
00:05:59,280 --> 00:06:00,479
is give it a little

158
00:06:00,479 --> 00:06:02,160
toss like that and then we'll come back

159
00:06:02,160 --> 00:06:04,000
to the same height so you're saving a

160
00:06:04,000 --> 00:06:04,840
lot of

161
00:06:04,840 --> 00:06:06,639
energy uh

162
00:06:06,639 --> 00:06:08,800
the

163
00:06:09,759 --> 00:06:12,240
one can see how easy it is another

164
00:06:12,240 --> 00:06:14,000
aspect of this is that the moon ball is

165
00:06:14,000 --> 00:06:17,520
moving slowly when you catch it

166
00:06:18,080 --> 00:06:21,440
wc fields dr shannon's juggling machine

167
00:06:21,440 --> 00:06:22,960
lacks feedback

168
00:06:22,960 --> 00:06:25,360
it can't sense variations in its toss or

169
00:06:25,360 --> 00:06:28,080
catch and so must rely only on the

170
00:06:28,080 --> 00:06:30,400
repetitive dynamics of the ball's fall

171
00:06:30,400 --> 00:06:32,400
and bounce in order to maintain its

172
00:06:32,400 --> 00:06:34,070
rhythmical cascade

173
00:06:34,070 --> 00:06:38,880
[Music]

174
00:06:41,520 --> 00:06:43,919
cup like hands help make up for the lack

175
00:06:43,919 --> 00:06:46,400
of feedback catching and funneling the

176
00:06:46,400 --> 00:06:49,599
balls back onto the optimum path

177
00:06:49,599 --> 00:06:53,440
the mathematical analysis of juggling

178
00:06:53,440 --> 00:06:54,800
that's the end

179
00:06:54,800 --> 00:06:57,199
they see

180
00:06:57,280 --> 00:06:58,720
i haven't seen any juggling machines

181
00:06:58,720 --> 00:07:00,880
around here so

182
00:07:00,880 --> 00:07:03,199
pretty cool building this uh back in the

183
00:07:03,199 --> 00:07:04,800
in the old times

184
00:07:04,800 --> 00:07:06,880
and there's some more links on this side

185
00:07:06,880 --> 00:07:08,240
actually everything is available on

186
00:07:08,240 --> 00:07:10,560
github there was the the the link to it

187
00:07:10,560 --> 00:07:11,599
at the very beginning and i will show it

188
00:07:11,599 --> 00:07:13,520
yet again at the end so you can also

189
00:07:13,520 --> 00:07:15,360
download the slides and also click these

190
00:07:15,360 --> 00:07:18,160
links there's a a biographic new movie

191
00:07:18,160 --> 00:07:20,000
about him and the bit player so if you

192
00:07:20,000 --> 00:07:21,759
want to know more about shannon you

193
00:07:21,759 --> 00:07:24,000
should watch it it's great

194
00:07:24,000 --> 00:07:26,720
so what did he do he actually answered

195
00:07:26,720 --> 00:07:28,800
these questions so he wrote the paper

196
00:07:28,800 --> 00:07:30,160
called a mathematical theory of

197
00:07:30,160 --> 00:07:32,479
communication published in bill

198
00:07:32,479 --> 00:07:34,720
technical journal and introduced a whole

199
00:07:34,720 --> 00:07:36,960
new field of research namely information

200
00:07:36,960 --> 00:07:39,039
theory and answering these questions we

201
00:07:39,039 --> 00:07:40,960
were asking before what is communication

202
00:07:40,960 --> 00:07:42,960
what is information how can we compress

203
00:07:42,960 --> 00:07:45,280
it how fast can we communicate it's all

204
00:07:45,280 --> 00:07:48,080
answered in the first half of this paper

205
00:07:48,080 --> 00:07:49,919
and my whole course was just about the

206
00:07:49,919 --> 00:07:53,120
topics of that and this talk as well

207
00:07:53,120 --> 00:07:55,680
so here is the one slide summary of what

208
00:07:55,680 --> 00:07:57,919
he did and what is what is the the core

209
00:07:57,919 --> 00:07:59,280
message of information theory

210
00:07:59,280 --> 00:08:00,800
unfortunately it contains a lot of word

211
00:08:00,800 --> 00:08:02,960
that you don't understand yet

212
00:08:02,960 --> 00:08:04,479
so at the end of the talk i will come

213
00:08:04,479 --> 00:08:05,840
back to this slide and hopefully you

214
00:08:05,840 --> 00:08:07,919
will have an idea what this is all about

215
00:08:07,919 --> 00:08:09,360
before that i want to just give you an

216
00:08:09,360 --> 00:08:10,240
idea

217
00:08:10,240 --> 00:08:13,599
so let's try to to read this text

218
00:08:13,599 --> 00:08:16,000
so um normally i just call somebody up

219
00:08:16,000 --> 00:08:20,560
and ask him to read does somebody dare

220
00:08:25,120 --> 00:08:26,639
i see someone home

221
00:08:26,639 --> 00:08:29,759
yep go ahead at the microphone

222
00:08:29,759 --> 00:08:33,760
the alice found at first was in

223
00:08:33,760 --> 00:08:37,120
managing her flamingo yep she succeeded

224
00:08:37,120 --> 00:08:38,479
in

225
00:08:38,479 --> 00:08:41,200
getting its body

226
00:08:41,200 --> 00:08:44,959
tucked tucked away comfortably

227
00:08:44,959 --> 00:08:48,480
enough yes under her arm i'm gonna guess

228
00:08:48,480 --> 00:08:50,560
yes with its

229
00:08:50,560 --> 00:08:53,920
legs hanging down

230
00:08:53,959 --> 00:08:55,760
generally

231
00:08:55,760 --> 00:08:57,839
just as she had

232
00:08:57,839 --> 00:09:00,480
got it very very very good and so on it

233
00:09:00,480 --> 00:09:02,000
will get harder

234
00:09:02,000 --> 00:09:03,760
but this was very well done obviously

235
00:09:03,760 --> 00:09:06,560
native speaker probably that helps a lot

236
00:09:06,560 --> 00:09:08,720
so let me illustrate a few concepts with

237
00:09:08,720 --> 00:09:11,680
this so one could wonder like um if we

238
00:09:11,680 --> 00:09:13,760
want to compress this english text

239
00:09:13,760 --> 00:09:15,920
apparently what we could do is just

240
00:09:15,920 --> 00:09:17,920
leave out some letters

241
00:09:17,920 --> 00:09:20,160
right you could just simply read it out

242
00:09:20,160 --> 00:09:23,120
no so we we can kind of just leave out

243
00:09:23,120 --> 00:09:25,200
the black letters and we will save some

244
00:09:25,200 --> 00:09:27,680
space and compress this text

245
00:09:27,680 --> 00:09:29,519
but of course we wonder like how can you

246
00:09:29,519 --> 00:09:31,680
do this optimally how do we can

247
00:09:31,680 --> 00:09:33,519
compress this text all the way down so

248
00:09:33,519 --> 00:09:35,760
that we can recover it perfectly that's

249
00:09:35,760 --> 00:09:36,800
one of the questions we're going to

250
00:09:36,800 --> 00:09:37,680
answer

251
00:09:37,680 --> 00:09:39,680
another thing is if you send this text

252
00:09:39,680 --> 00:09:41,920
over a imperfect channel

253
00:09:41,920 --> 00:09:44,399
and that sometimes just erases some some

254
00:09:44,399 --> 00:09:47,279
letters like here some erasure channel

255
00:09:47,279 --> 00:09:48,800
then how can we actually make sure that

256
00:09:48,800 --> 00:09:50,640
we can recover from that and that's a

257
00:09:50,640 --> 00:09:52,800
topic called error correction that we're

258
00:09:52,800 --> 00:09:54,720
also going to touch upon and then you

259
00:09:54,720 --> 00:09:56,320
can combine these two and say well if

260
00:09:56,320 --> 00:09:58,480
you want to want to send this text over

261
00:09:58,480 --> 00:10:00,880
a communication channel like how do we

262
00:10:00,880 --> 00:10:02,560
do this optimally somehow should we

263
00:10:02,560 --> 00:10:05,120
compress it first and then put in more

264
00:10:05,120 --> 00:10:06,880
redundancy so that it revives the

265
00:10:06,880 --> 00:10:08,320
channel or

266
00:10:08,320 --> 00:10:09,760
and again that is answered by

267
00:10:09,760 --> 00:10:13,360
information theory so we'll get there

268
00:10:13,360 --> 00:10:15,600
before we can start oh well just very

269
00:10:15,600 --> 00:10:17,279
quickly the reactions to this theory

270
00:10:17,279 --> 00:10:19,040
when when shannon came up with people

271
00:10:19,040 --> 00:10:20,399
like what

272
00:10:20,399 --> 00:10:22,320
the error-free communication in noise

273
00:10:22,320 --> 00:10:24,560
how how should we do that and it turned

274
00:10:24,560 --> 00:10:26,959
out to be a bit more difficult than than

275
00:10:26,959 --> 00:10:28,720
predicted it actually took about 50

276
00:10:28,720 --> 00:10:30,720
years maybe 60 years to actually figure

277
00:10:30,720 --> 00:10:32,480
out how to actually do that

278
00:10:32,480 --> 00:10:34,720
so practical error correcting codes have

279
00:10:34,720 --> 00:10:37,279
only come around in the 2010s

280
00:10:37,279 --> 00:10:39,120
achieving the limits that shannon

281
00:10:39,120 --> 00:10:42,000
already predicted like in 1948.

282
00:10:42,000 --> 00:10:44,240
nowadays applications of information

283
00:10:44,240 --> 00:10:46,399
theory are everywhere in particular for

284
00:10:46,399 --> 00:10:47,920
instance the research that i do on

285
00:10:47,920 --> 00:10:50,000
quantum computing quantum cryptography

286
00:10:50,000 --> 00:10:52,240
we use entropy and we use information

287
00:10:52,240 --> 00:10:55,120
theory as tools to do things about that

288
00:10:55,120 --> 00:10:56,880
in machine learning in

289
00:10:56,880 --> 00:10:59,040
physics there's thermodynamics in

290
00:10:59,040 --> 00:11:01,600
philosophy of science economics biology

291
00:11:01,600 --> 00:11:03,360
communication theory you name it there's

292
00:11:03,360 --> 00:11:05,040
a lot of information theory out there

293
00:11:05,040 --> 00:11:08,160
and used everywhere it's great

294
00:11:08,160 --> 00:11:10,800
so finally that was the overview now we

295
00:11:10,800 --> 00:11:12,560
got into a little bit more the technical

296
00:11:12,560 --> 00:11:14,800
part and in order to get started i will

297
00:11:14,800 --> 00:11:16,480
have to tell you something about

298
00:11:16,480 --> 00:11:19,760
exponentials and logarithms so here is

299
00:11:19,760 --> 00:11:22,399
afraid of logarithms

300
00:11:22,399 --> 00:11:23,440
one

301
00:11:23,440 --> 00:11:25,600
and a half two three four okay a bunch

302
00:11:25,600 --> 00:11:28,079
of people are afraid

303
00:11:28,079 --> 00:11:29,600
and we'll have to cover it because it's

304
00:11:29,600 --> 00:11:31,519
essential part let's start with

305
00:11:31,519 --> 00:11:33,040
something you

306
00:11:33,040 --> 00:11:35,040
we unfortunately know

307
00:11:35,040 --> 00:11:37,839
exponential functions yeah so how fast

308
00:11:37,839 --> 00:11:40,560
does the virus spread well if on day

309
00:11:40,560 --> 00:11:43,040
zero we have one person infected

310
00:11:43,040 --> 00:11:45,760
then uh if this if the r number is two

311
00:11:45,760 --> 00:11:47,920
then on the on day two there's gonna be

312
00:11:47,920 --> 00:11:50,320
two new infections and every day we we

313
00:11:50,320 --> 00:11:53,279
move on here we add a day we double the

314
00:11:53,279 --> 00:11:55,040
number of infections

315
00:11:55,040 --> 00:11:57,440
and uh you see in this column here you

316
00:11:57,440 --> 00:11:59,839
recognize the powers of two

317
00:11:59,839 --> 00:12:00,720
so

318
00:12:00,720 --> 00:12:02,480
every good nerd should recognize these

319
00:12:02,480 --> 00:12:05,040
numbers as powers of two

320
00:12:05,040 --> 00:12:06,639
okay that's the that's the easy part

321
00:12:06,639 --> 00:12:08,720
that's the exponential part

322
00:12:08,720 --> 00:12:11,200
they kind of go um here to the right in

323
00:12:11,200 --> 00:12:14,160
this table so for instance and 2 to the

324
00:12:14,160 --> 00:12:16,079
3 that's a

325
00:12:16,079 --> 00:12:18,399
simplified way of writing 2 times 2

326
00:12:18,399 --> 00:12:20,399
times 2 that's 8.

327
00:12:20,399 --> 00:12:22,959
another example is 2 to the 5. that's

328
00:12:22,959 --> 00:12:26,240
just 2 times 2 times 2 times

329
00:12:26,240 --> 00:12:27,680
32.

330
00:12:27,680 --> 00:12:30,000
and the logarithm is the inverse of it

331
00:12:30,000 --> 00:12:32,880
so the logarithm to base 2 of x of a

332
00:12:32,880 --> 00:12:36,160
number x is the a so that if you raise 2

333
00:12:36,160 --> 00:12:38,560
to the 8th power you get x and in this

334
00:12:38,560 --> 00:12:40,959
picture simply the other direction

335
00:12:40,959 --> 00:12:43,360
now so you um for instance here you have

336
00:12:43,360 --> 00:12:45,120
512.

337
00:12:45,120 --> 00:12:48,639
the logarithm to base 2 or 512 is 9

338
00:12:48,639 --> 00:12:50,839
because 2 to the 9 is

339
00:12:50,839 --> 00:12:54,000
512. so logarithms they were invented

340
00:12:54,000 --> 00:12:55,920
for easy calculations because they

341
00:12:55,920 --> 00:12:58,800
translate multiplications on this side

342
00:12:58,800 --> 00:13:01,279
here on the right to into additions

343
00:13:01,279 --> 00:13:02,720
on the on the left

344
00:13:02,720 --> 00:13:04,240
and here's a little example so if you

345
00:13:04,240 --> 00:13:06,959
want to multiply for instance 512 with

346
00:13:06,959 --> 00:13:08,079
eight

347
00:13:08,079 --> 00:13:10,480
then you you could do this an easy way

348
00:13:10,480 --> 00:13:12,240
if you recognize them as power of two

349
00:13:12,240 --> 00:13:13,920
you can write them two to the nine times

350
00:13:13,920 --> 00:13:15,600
two to the three well these are all

351
00:13:15,600 --> 00:13:18,000
powers of two so you only wonder how

352
00:13:18,000 --> 00:13:20,399
many times and did you multiply 2 with

353
00:13:20,399 --> 00:13:23,120
itself so get 2 to the 9 plus 3 so

354
00:13:23,120 --> 00:13:24,800
that's 2 to the 12. you can look that up

355
00:13:24,800 --> 00:13:28,000
as well here so it's 4096.

356
00:13:28,000 --> 00:13:29,760
so there's a little rule we used here

357
00:13:29,760 --> 00:13:31,760
namely that 2 to the a times 2 to the b

358
00:13:31,760 --> 00:13:34,320
is 2 to the a plus b and the logarithm

359
00:13:34,320 --> 00:13:35,839
it does the other thing the other way

360
00:13:35,839 --> 00:13:37,440
around so if you just write the same

361
00:13:37,440 --> 00:13:40,240
equation with a logarithm on both sides

362
00:13:40,240 --> 00:13:42,079
well then we can write the log of this

363
00:13:42,079 --> 00:13:45,120
multiplication as the log of 5 12 plus

364
00:13:45,120 --> 00:13:46,560
the log of 8.

365
00:13:46,560 --> 00:13:48,880
and so that turns this multiplication

366
00:13:48,880 --> 00:13:52,160
into a sum 9 plus 3 is 12 and that's the

367
00:13:52,160 --> 00:13:54,079
same result before

368
00:13:54,079 --> 00:13:56,639
so important to remember is this rule

369
00:13:56,639 --> 00:13:58,160
about logarithms i'm sure you've seen

370
00:13:58,160 --> 00:14:00,480
them once at school log of c times d is

371
00:14:00,480 --> 00:14:04,079
log of c plus log of d and a little

372
00:14:04,079 --> 00:14:06,720
version of that is the log of one over d

373
00:14:06,720 --> 00:14:09,360
is just minus log d because log of one

374
00:14:09,360 --> 00:14:10,959
is zero

375
00:14:10,959 --> 00:14:13,440
yeah so maybe a quick refresher of stuff

376
00:14:13,440 --> 00:14:16,160
you have seen once upon a time of course

377
00:14:16,160 --> 00:14:18,160
these functions are not just defined uh

378
00:14:18,160 --> 00:14:20,240
on the integers but you can draw nice

379
00:14:20,240 --> 00:14:22,480
curves so here are the two plots

380
00:14:22,480 --> 00:14:24,639
um so the the log is the inverse of the

381
00:14:24,639 --> 00:14:27,199
exponential function and here some kind

382
00:14:27,199 --> 00:14:29,519
of noticeable numbers two to the zero

383
00:14:29,519 --> 00:14:31,680
anything to the zero is one

384
00:14:31,680 --> 00:14:34,079
two to one is two so if you notice three

385
00:14:34,079 --> 00:14:36,399
points zero two and also two to the

386
00:14:36,399 --> 00:14:38,160
minus one is a half then you can

387
00:14:38,160 --> 00:14:40,079
basically write this this function you

388
00:14:40,079 --> 00:14:42,160
could also draw it yourself

389
00:14:42,160 --> 00:14:44,320
another thing then for the log the same

390
00:14:44,320 --> 00:14:45,600
um

391
00:14:45,600 --> 00:14:49,360
kind of points to remember log of 1 is 0

392
00:14:49,360 --> 00:14:50,240
because

393
00:14:50,240 --> 00:14:52,959
2 to the 0 is 1 and then log of 2 is 1

394
00:14:52,959 --> 00:14:54,639
and log of a half

395
00:14:54,639 --> 00:14:55,760
so that's

396
00:14:55,760 --> 00:15:01,519
minus 1 that's here yep so far so good

397
00:15:01,519 --> 00:15:03,040
now another little thing i want to

398
00:15:03,040 --> 00:15:05,360
introduce before kind of starting with

399
00:15:05,360 --> 00:15:07,360
information theory are probability

400
00:15:07,360 --> 00:15:08,959
distribution and we're gonna stick to

401
00:15:08,959 --> 00:15:11,360
the simple case just discrete so no

402
00:15:11,360 --> 00:15:13,279
continuous distributions and you can

403
00:15:13,279 --> 00:15:14,880
think of them in terms of programming

404
00:15:14,880 --> 00:15:17,279
languages just as a list of non-negative

405
00:15:17,279 --> 00:15:19,440
numbers so they can be zero but they're

406
00:15:19,440 --> 00:15:21,680
all bigger than bigger or equal to zero

407
00:15:21,680 --> 00:15:23,839
and they sum to one that's it

408
00:15:23,839 --> 00:15:26,800
so very easy example is a fair coin just

409
00:15:26,800 --> 00:15:29,040
50 50. whenever you flip a coin you get

410
00:15:29,040 --> 00:15:31,120
either one or the other outcome with

411
00:15:31,120 --> 00:15:33,839
probability 0.5

412
00:15:33,839 --> 00:15:35,680
a little bit more advanced are biased

413
00:15:35,680 --> 00:15:37,920
coins those that are not fair so here

414
00:15:37,920 --> 00:15:40,079
you have a distribution of say b and one

415
00:15:40,079 --> 00:15:42,959
minus p this they sum to one if you add

416
00:15:42,959 --> 00:15:44,560
and the p is something between zero and

417
00:15:44,560 --> 00:15:46,320
one but not a half i mean otherwise

418
00:15:46,320 --> 00:15:48,320
would be a fair coin

419
00:15:48,320 --> 00:15:51,199
okay still pretty simple another kind of

420
00:15:51,199 --> 00:15:53,440
extreme case is the so-called uniform

421
00:15:53,440 --> 00:15:54,639
distribution

422
00:15:54,639 --> 00:15:57,360
here is a picture uh this pie chart of

423
00:15:57,360 --> 00:15:59,600
for n equals five so you have five

424
00:15:59,600 --> 00:16:02,000
possible outcomes and all of them are

425
00:16:02,000 --> 00:16:04,560
equally uh likely to occur so it's just

426
00:16:04,560 --> 00:16:06,800
one over five zero point two

427
00:16:06,800 --> 00:16:09,120
probability for every outcome

428
00:16:09,120 --> 00:16:10,720
okay those are easy examples a little

429
00:16:10,720 --> 00:16:12,800
bit more complicated examples you might

430
00:16:12,800 --> 00:16:14,320
have seen as well is the binomial

431
00:16:14,320 --> 00:16:16,000
distribution you don't really need to

432
00:16:16,000 --> 00:16:17,279
know what this

433
00:16:17,279 --> 00:16:19,519
these these formulas here are but it's

434
00:16:19,519 --> 00:16:21,440
basically the probability to obtain

435
00:16:21,440 --> 00:16:24,639
exactly k heads when n times flipping a

436
00:16:24,639 --> 00:16:26,800
coin with bias p so you get something

437
00:16:26,800 --> 00:16:27,759
like this

438
00:16:27,759 --> 00:16:29,600
this this pie chart here and that's

439
00:16:29,600 --> 00:16:31,600
maybe a good moment where i switch over

440
00:16:31,600 --> 00:16:32,639
to the

441
00:16:32,639 --> 00:16:35,199
jupiter notebook that i made for you so

442
00:16:35,199 --> 00:16:36,800
you can download this from github you

443
00:16:36,800 --> 00:16:40,160
can make all these tables you can uh

444
00:16:40,160 --> 00:16:41,600
did the plots that i put in the

445
00:16:41,600 --> 00:16:43,279
presentation you can reproduce and you

446
00:16:43,279 --> 00:16:45,759
see the codes how to do it so here's a

447
00:16:45,759 --> 00:16:47,600
fair coin a bias coin uniform

448
00:16:47,600 --> 00:16:48,880
distribution

449
00:16:48,880 --> 00:16:51,680
and um and then there's a little thing

450
00:16:51,680 --> 00:16:53,839
to play with here binomial distribution

451
00:16:53,839 --> 00:16:55,360
where you can actually choose the number

452
00:16:55,360 --> 00:16:57,519
of coins you flip and you get like an

453
00:16:57,519 --> 00:17:00,079
interactive chart of like of these

454
00:17:00,079 --> 00:17:01,680
distributions you can play around with

455
00:17:01,680 --> 00:17:03,519
that here just to get an idea what these

456
00:17:03,519 --> 00:17:05,679
distributions are

457
00:17:05,679 --> 00:17:07,520
maybe the next thing you we want to do

458
00:17:07,520 --> 00:17:09,119
is another

459
00:17:09,119 --> 00:17:11,199
example for a probability distribution

460
00:17:11,199 --> 00:17:14,720
here i read um in alice in wonderland

461
00:17:14,720 --> 00:17:16,959
and i take the first 100 000 characters

462
00:17:16,959 --> 00:17:18,559
i kind of clean it up a little bit i

463
00:17:18,559 --> 00:17:20,400
strip everything but the letters and

464
00:17:20,400 --> 00:17:21,520
space

465
00:17:21,520 --> 00:17:22,799
and then

466
00:17:22,799 --> 00:17:25,359
i just count frequencies so if i run

467
00:17:25,359 --> 00:17:27,679
this i get i get something like that so

468
00:17:27,679 --> 00:17:29,679
these are just frequencies that means

469
00:17:29,679 --> 00:17:31,120
how many times

470
00:17:31,120 --> 00:17:33,280
an e occurs that's the most frequent

471
00:17:33,280 --> 00:17:35,760
english letter how many times a space

472
00:17:35,760 --> 00:17:37,600
occurs there's actually this big big

473
00:17:37,600 --> 00:17:40,240
chunk here and then t a oh so that's

474
00:17:40,240 --> 00:17:42,240
kind of the the letter frequencies you

475
00:17:42,240 --> 00:17:43,360
can get

476
00:17:43,360 --> 00:17:45,360
so that's actually my next example here

477
00:17:45,360 --> 00:17:46,799
frequencies you can always do this kind

478
00:17:46,799 --> 00:17:48,640
of statistic and then just count the

479
00:17:48,640 --> 00:17:50,160
number of currencies divided by the

480
00:17:50,160 --> 00:17:51,840
total that's another distribution you

481
00:17:51,840 --> 00:17:53,840
can work with

482
00:17:53,840 --> 00:17:56,320
all right final thing before we actually

483
00:17:56,320 --> 00:17:58,960
get to the nuggets um we want a sample

484
00:17:58,960 --> 00:18:00,400
from a distribution so we want to have a

485
00:18:00,400 --> 00:18:02,799
black box this thing up there with a red

486
00:18:02,799 --> 00:18:04,960
button every time we push the button we

487
00:18:04,960 --> 00:18:07,600
want a sample from this distribution so

488
00:18:07,600 --> 00:18:10,080
um for instance from this fair coin

489
00:18:10,080 --> 00:18:12,000
let's try to do that again actually in

490
00:18:12,000 --> 00:18:14,559
the in the notebook you might i mean

491
00:18:14,559 --> 00:18:16,240
you're probably more familiar with that

492
00:18:16,240 --> 00:18:18,000
than i am so there's some random

493
00:18:18,000 --> 00:18:20,160
function if i just evaluate this a few

494
00:18:20,160 --> 00:18:22,160
times then you see i get apparently i

495
00:18:22,160 --> 00:18:24,400
get a float a floating number between

496
00:18:24,400 --> 00:18:26,000
zero and one

497
00:18:26,000 --> 00:18:28,080
so now we want to turn this into a coin

498
00:18:28,080 --> 00:18:30,400
it's just a 50 50 outcome

499
00:18:30,400 --> 00:18:31,919
well a little bit of thought will bring

500
00:18:31,919 --> 00:18:33,919
you to this now you kind of just check

501
00:18:33,919 --> 00:18:35,919
whether it's smaller than a half or

502
00:18:35,919 --> 00:18:38,080
bigger i mean that then look at the kind

503
00:18:38,080 --> 00:18:41,039
of first digit after the after the comma

504
00:18:41,039 --> 00:18:42,559
and then you then you know what the

505
00:18:42,559 --> 00:18:44,480
pitch should be so so this kind of

506
00:18:44,480 --> 00:18:46,720
simple transformation turns a float

507
00:18:46,720 --> 00:18:51,039
between zero and one into a random bit

508
00:18:51,039 --> 00:18:53,039
and what we actually did is just kind of

509
00:18:53,039 --> 00:18:55,600
unfold this this this pie chart into

510
00:18:55,600 --> 00:18:57,600
into this interval between zero and one

511
00:18:57,600 --> 00:19:00,080
and then we threw a random number here

512
00:19:00,080 --> 00:19:01,520
between zero and one and depending

513
00:19:01,520 --> 00:19:03,039
whether it ends up on the blue part on

514
00:19:03,039 --> 00:19:05,360
the orange part we we call it a zero or

515
00:19:05,360 --> 00:19:08,480
one as an outcome or blue or orange

516
00:19:08,480 --> 00:19:09,200
and

517
00:19:09,200 --> 00:19:10,640
actually this turns out to be a good

518
00:19:10,640 --> 00:19:12,320
thing to do because we can do this for

519
00:19:12,320 --> 00:19:14,160
other distributions as well so if we

520
00:19:14,160 --> 00:19:15,760
have this distribution we can also kind

521
00:19:15,760 --> 00:19:18,559
of kind of wrap it up and then throw

522
00:19:18,559 --> 00:19:20,160
this number and that turns out to be

523
00:19:20,160 --> 00:19:22,160
here so so here a sample would be the

524
00:19:22,160 --> 00:19:23,520
screen thing

525
00:19:23,520 --> 00:19:25,520
and let's do a final uh example with

526
00:19:25,520 --> 00:19:27,440
this more complicated distribution again

527
00:19:27,440 --> 00:19:29,840
we can unfold it and and kind of run our

528
00:19:29,840 --> 00:19:32,480
random number and here is the little

529
00:19:32,480 --> 00:19:35,039
program um that does it and it's really

530
00:19:35,039 --> 00:19:36,880
just figuring out in which interval you

531
00:19:36,880 --> 00:19:38,480
are so you kind of start with the first

532
00:19:38,480 --> 00:19:40,480
interval and then you kind of add one

533
00:19:40,480 --> 00:19:42,480
until you hit this random value that you

534
00:19:42,480 --> 00:19:45,200
picked before and return that label and

535
00:19:45,200 --> 00:19:45,919
it's

536
00:19:45,919 --> 00:19:48,720
nothing really deep going on

537
00:19:48,720 --> 00:19:50,960
and then you can sample so this is just

538
00:19:50,960 --> 00:19:52,640
doing it like 60 times and you get a

539
00:19:52,640 --> 00:19:55,200
sequence like this so it starts like d a

540
00:19:55,200 --> 00:19:57,679
e f so here we have some some

541
00:19:57,679 --> 00:19:59,280
gave them some labels it could also be

542
00:19:59,280 --> 00:20:00,480
colors or

543
00:20:00,480 --> 00:20:03,039
but um that's kind of a random sample so

544
00:20:03,039 --> 00:20:05,280
i every time i push them i get a sample

545
00:20:05,280 --> 00:20:07,280
from this distribution

546
00:20:07,280 --> 00:20:08,320
yeah

547
00:20:08,320 --> 00:20:11,760
with me great now now it's what happened

548
00:20:11,760 --> 00:20:13,280
okay because now we start wondering like

549
00:20:13,280 --> 00:20:15,200
how surprised we are

550
00:20:15,200 --> 00:20:16,559
so if you have an event with some

551
00:20:16,559 --> 00:20:18,000
probability p

552
00:20:18,000 --> 00:20:19,919
then the inverse of this probability one

553
00:20:19,919 --> 00:20:21,840
over p is actually a measure of how

554
00:20:21,840 --> 00:20:24,000
surprised we are if this event happens

555
00:20:24,000 --> 00:20:26,559
well if you have a big probability well

556
00:20:26,559 --> 00:20:28,080
then we are actually extremely surprised

557
00:20:28,080 --> 00:20:29,679
if it happens no one over p is going to

558
00:20:29,679 --> 00:20:31,600
be uh huge if you have a small

559
00:20:31,600 --> 00:20:33,039
probability to start with if you have a

560
00:20:33,039 --> 00:20:34,480
big probably the same well not so

561
00:20:34,480 --> 00:20:36,880
surprised i mean of course it had

562
00:20:36,880 --> 00:20:38,480
but the funny thing and bear with me

563
00:20:38,480 --> 00:20:40,960
we're gonna measure this logarithmically

564
00:20:40,960 --> 00:20:42,799
in bits so we're gonna actually gonna

565
00:20:42,799 --> 00:20:45,039
look at the log of one over p and this

566
00:20:45,039 --> 00:20:46,720
is a positive number because of the

567
00:20:46,720 --> 00:20:49,200
rules we saw before again easy example

568
00:20:49,200 --> 00:20:50,880
that's maybe the most important example

569
00:20:50,880 --> 00:20:51,760
as well

570
00:20:51,760 --> 00:20:53,360
a fair coin

571
00:20:53,360 --> 00:20:55,919
if you just flip a coin you are log of

572
00:20:55,919 --> 00:20:58,320
one over a half and that's log of two

573
00:20:58,320 --> 00:21:00,559
one bit surprise to see in a particular

574
00:21:00,559 --> 00:21:02,799
outcome so if you flip two coins you're

575
00:21:02,799 --> 00:21:04,640
two bit surprise that's kind of the

576
00:21:04,640 --> 00:21:06,400
reason why we use the logarithm it kind

577
00:21:06,400 --> 00:21:09,200
of nice nicely adds up now to flip a

578
00:21:09,200 --> 00:21:10,880
bunch of coins then we are that many

579
00:21:10,880 --> 00:21:13,760
coins surprise bit surprised to see a

580
00:21:13,760 --> 00:21:15,360
particular outcome

581
00:21:15,360 --> 00:21:16,400
okay now

582
00:21:16,400 --> 00:21:18,320
let's look at the other examples of the

583
00:21:18,320 --> 00:21:20,080
distribution let's look at the uniform

584
00:21:20,080 --> 00:21:21,520
distribution

585
00:21:21,520 --> 00:21:23,840
um in this case we are

586
00:21:23,840 --> 00:21:26,880
the log of one over five so that's log

587
00:21:26,880 --> 00:21:29,280
of five so two point three two two bit

588
00:21:29,280 --> 00:21:31,520
surprise to see any particular outcome

589
00:21:31,520 --> 00:21:33,600
so just one sample from this

590
00:21:33,600 --> 00:21:35,360
distribution

591
00:21:35,360 --> 00:21:39,600
kind of gives us roughly um 2.3 um

592
00:21:39,600 --> 00:21:42,960
fair coins of surprisal value so it kind

593
00:21:42,960 --> 00:21:45,120
of gives us a measure how to compare and

594
00:21:45,120 --> 00:21:47,200
literally if you do two samples we have

595
00:21:47,200 --> 00:21:49,760
two times this so that's roughly like uh

596
00:21:49,760 --> 00:21:52,880
4.6 fare coins sample so you can

597
00:21:52,880 --> 00:21:54,799
actually compare surprise we can somehow

598
00:21:54,799 --> 00:21:57,600
measure how surprised we are

599
00:21:57,600 --> 00:21:59,280
and that's that's going to be the key

600
00:21:59,280 --> 00:22:01,120
for the next thing so now a little bit

601
00:22:01,120 --> 00:22:03,520
more tricky is a biased coin because

602
00:22:03,520 --> 00:22:05,440
then we can wonder how surprised we are

603
00:22:05,440 --> 00:22:06,960
on average

604
00:22:06,960 --> 00:22:09,679
so let's say we have this unfair coin

605
00:22:09,679 --> 00:22:11,840
i'm gonna comp then we just compute and

606
00:22:11,840 --> 00:22:13,440
we basically just say okay if we get

607
00:22:13,440 --> 00:22:15,200
this blue part that happens with this

608
00:22:15,200 --> 00:22:17,280
probability 0.0.1

609
00:22:17,280 --> 00:22:19,760
well our surprising value is log of 1

610
00:22:19,760 --> 00:22:24,799
over 0.1 plus well the big chunk is 0.9

611
00:22:24,799 --> 00:22:27,280
mass and surprising value is log over 1

612
00:22:27,280 --> 00:22:29,520
minus 0.9 you can

613
00:22:29,520 --> 00:22:31,600
calculate that put it in the in the

614
00:22:31,600 --> 00:22:33,360
jupyter notebook or whatever in your

615
00:22:33,360 --> 00:22:36,400
calculator and you get 0.47 so it's just

616
00:22:36,400 --> 00:22:38,240
some number but again it's like kind of

617
00:22:38,240 --> 00:22:41,200
like half of a coin half of a fair coin

618
00:22:41,200 --> 00:22:43,600
surprise to see a particular outcome on

619
00:22:43,600 --> 00:22:46,400
average of this distribution

620
00:22:46,400 --> 00:22:47,760
and of course you can do this for any

621
00:22:47,760 --> 00:22:50,080
value of the of the bias and you

622
00:22:50,080 --> 00:22:51,760
actually get this very nice curve this

623
00:22:51,760 --> 00:22:53,600
binary entropy function

624
00:22:53,600 --> 00:22:55,120
and if you were a student in my course

625
00:22:55,120 --> 00:22:56,559
then you would have to really know this

626
00:22:56,559 --> 00:22:57,919
function really well because you can do

627
00:22:57,919 --> 00:22:59,440
a lot of stuff with that in theory

628
00:22:59,440 --> 00:23:01,120
theoretical computer science it's a very

629
00:23:01,120 --> 00:23:03,440
important function and you see like at

630
00:23:03,440 --> 00:23:06,000
0.5 the fair coin you have exactly one

631
00:23:06,000 --> 00:23:06,880
bit

632
00:23:06,880 --> 00:23:08,640
of average surprise

633
00:23:08,640 --> 00:23:10,320
and if it's if it's certainty if it's

634
00:23:10,320 --> 00:23:12,320
zero or one well then you don't have any

635
00:23:12,320 --> 00:23:14,720
surprise

636
00:23:14,720 --> 00:23:16,480
all right now we're basically there

637
00:23:16,480 --> 00:23:18,400
where we have the first nugget and

638
00:23:18,400 --> 00:23:20,000
that's simply that definition and

639
00:23:20,000 --> 00:23:21,520
actually it's the definition that's used

640
00:23:21,520 --> 00:23:23,120
in this picture here next to shannon's

641
00:23:23,120 --> 00:23:25,679
face there is the definition of shannon

642
00:23:25,679 --> 00:23:27,919
entropy so the shannon entropy it is

643
00:23:27,919 --> 00:23:29,280
defined

644
00:23:29,280 --> 00:23:32,000
like this so the entropy is called h of

645
00:23:32,000 --> 00:23:34,480
of this distribution is just the average

646
00:23:34,480 --> 00:23:36,559
surprisal measured in bits it's really

647
00:23:36,559 --> 00:23:38,400
literally what i just talked about it's

648
00:23:38,400 --> 00:23:41,120
the sum of the probabilities p i

649
00:23:41,120 --> 00:23:43,120
multiplied with the

650
00:23:43,120 --> 00:23:45,600
surprising value measured in bits so the

651
00:23:45,600 --> 00:23:47,600
log of one over p i

652
00:23:47,600 --> 00:23:49,679
yeah so okay great we can define it so

653
00:23:49,679 --> 00:23:51,039
it's a number if you give me a

654
00:23:51,039 --> 00:23:52,880
distribution i can compute this number

655
00:23:52,880 --> 00:23:54,640
or you can compute it the computer can

656
00:23:54,640 --> 00:23:56,880
compute it i wrote a very simple program

657
00:23:56,880 --> 00:23:58,720
for that again it's in the it's on the

658
00:23:58,720 --> 00:24:00,720
jupiter notebook and it's really just

659
00:24:00,720 --> 00:24:02,880
this sum here some check that you

660
00:24:02,880 --> 00:24:04,480
actually input a distribution

661
00:24:04,480 --> 00:24:06,320
but you start at zero and then just kind

662
00:24:06,320 --> 00:24:11,520
of add up um p times the log two of p

663
00:24:11,520 --> 00:24:13,200
and you have to watch out a little bit

664
00:24:13,200 --> 00:24:15,279
with the minus so here is not one minus

665
00:24:15,279 --> 00:24:17,279
p that's why there's a minus here

666
00:24:17,279 --> 00:24:20,159
but that's the the rule from before

667
00:24:20,159 --> 00:24:22,880
okay so once a mathematician gets

668
00:24:22,880 --> 00:24:24,799
a definition then you kind of want to

669
00:24:24,799 --> 00:24:26,559
understand it no the hacker kind of want

670
00:24:26,559 --> 00:24:28,480
to want to understand what what it's all

671
00:24:28,480 --> 00:24:30,000
about so you want to check some basic

672
00:24:30,000 --> 00:24:31,200
properties

673
00:24:31,200 --> 00:24:33,120
first thing to notice is that shenan

674
00:24:33,120 --> 00:24:35,200
entropy the average surprisal is

675
00:24:35,200 --> 00:24:37,840
actually positive it's bigger than zero

676
00:24:37,840 --> 00:24:40,320
sometimes it's zero um but it's only

677
00:24:40,320 --> 00:24:42,000
zero actually with distribution that

678
00:24:42,000 --> 00:24:44,080
have a certain outcome if you're not

679
00:24:44,080 --> 00:24:45,760
surprised if there's just one outcome

680
00:24:45,760 --> 00:24:47,279
that happens with probability one then

681
00:24:47,279 --> 00:24:48,720
it's actually zero otherwise you have

682
00:24:48,720 --> 00:24:50,640
some uncertainty it's a measure of

683
00:24:50,640 --> 00:24:53,039
uncertainty of surprisal

684
00:24:53,039 --> 00:24:55,200
and the other extreme is if you have

685
00:24:55,200 --> 00:24:56,960
uniform distributions we already saw

686
00:24:56,960 --> 00:24:59,440
that for five outcomes then the entropy

687
00:24:59,440 --> 00:25:00,880
of this distribution of a uniform

688
00:25:00,880 --> 00:25:02,640
distribution is actually log of n it's

689
00:25:02,640 --> 00:25:04,960
the log of the number of outcomes you

690
00:25:04,960 --> 00:25:06,080
can have

691
00:25:06,080 --> 00:25:07,679
so that are the two extremes and then

692
00:25:07,679 --> 00:25:10,000
there's some nice computation trick i'm

693
00:25:10,000 --> 00:25:11,600
just going to show you i mean one can

694
00:25:11,600 --> 00:25:12,799
prove it but

695
00:25:12,799 --> 00:25:14,640
maybe goes a bit too far

696
00:25:14,640 --> 00:25:16,080
um so for instance if for this

697
00:25:16,080 --> 00:25:18,080
distribution here you can notice that

698
00:25:18,080 --> 00:25:20,400
somehow it's like nicely split in half

699
00:25:20,400 --> 00:25:22,720
you can understand this distribution as

700
00:25:22,720 --> 00:25:24,720
coming from a kind of random process

701
00:25:24,720 --> 00:25:26,400
that first decides whether it's on the

702
00:25:26,400 --> 00:25:28,480
left on the right so with 50 50 you go

703
00:25:28,480 --> 00:25:30,640
up or you go down that's one bit of

704
00:25:30,640 --> 00:25:31,919
entropy

705
00:25:31,919 --> 00:25:34,400
and then um here in the upper half you

706
00:25:34,400 --> 00:25:35,760
want to decide whether whether you're

707
00:25:35,760 --> 00:25:38,159
blue or orange whether you're a or b and

708
00:25:38,159 --> 00:25:40,400
that's again a 50 50 choice so with

709
00:25:40,400 --> 00:25:42,559
weight 0.5 you go up and you have

710
00:25:42,559 --> 00:25:44,480
another bit of entropy

711
00:25:44,480 --> 00:25:47,039
or with a weight 0.5 you go down and

712
00:25:47,039 --> 00:25:48,720
then you have a uniform distribution you

713
00:25:48,720 --> 00:25:50,720
have one over three to get to one of

714
00:25:50,720 --> 00:25:52,400
these other outcomes

715
00:25:52,400 --> 00:25:54,400
and and that's kind of a kind of nice

716
00:25:54,400 --> 00:25:56,559
cute way of computing entropy and

717
00:25:56,559 --> 00:25:58,000
students would practice a lot to

718
00:25:58,000 --> 00:25:59,919
actually do that we don't have time

719
00:25:59,919 --> 00:26:01,760
unfortunately but we are also going to

720
00:26:01,760 --> 00:26:03,279
practice a little bit because now you

721
00:26:03,279 --> 00:26:04,960
know these rules so

722
00:26:04,960 --> 00:26:07,279
order these three distributions in terms

723
00:26:07,279 --> 00:26:09,360
of entropy which one has the highest

724
00:26:09,360 --> 00:26:11,840
entropy

725
00:26:11,840 --> 00:26:14,080
yep

726
00:26:14,320 --> 00:26:17,279
the right one has three bits yes

727
00:26:17,279 --> 00:26:20,559
and where which one has the lowest

728
00:26:20,559 --> 00:26:22,880
the middle one yes indeed so here are

729
00:26:22,880 --> 00:26:24,400
the entropies they're all uniform

730
00:26:24,400 --> 00:26:26,159
distributions then it's easy it's just a

731
00:26:26,159 --> 00:26:27,039
log

732
00:26:27,039 --> 00:26:30,080
so this is log of 5 2.3 this is log of 2

733
00:26:30,080 --> 00:26:31,679
is one and this one has three bits it's

734
00:26:31,679 --> 00:26:33,760
eight possible outcomes very good the

735
00:26:33,760 --> 00:26:35,840
next one is slightly more tricky same

736
00:26:35,840 --> 00:26:36,960
exercise

737
00:26:36,960 --> 00:26:38,720
because they all have six possible

738
00:26:38,720 --> 00:26:40,400
outcomes

739
00:26:40,400 --> 00:26:43,919
which one has the highest entropy

740
00:26:44,799 --> 00:26:47,200
the left one here

741
00:26:47,200 --> 00:26:49,440
why

742
00:26:50,880 --> 00:26:53,039
because it's uniform yeah

743
00:26:53,039 --> 00:26:54,960
probably yes

744
00:26:54,960 --> 00:26:56,880
so indeed this is uniform distribution

745
00:26:56,880 --> 00:26:59,039
this is actually the maximum you can get

746
00:26:59,039 --> 00:27:01,520
with six outcomes indeed and then

747
00:27:01,520 --> 00:27:03,919
between these two which one has more uh

748
00:27:03,919 --> 00:27:05,360
entropy

749
00:27:05,360 --> 00:27:07,039
uncertainty more

750
00:27:07,039 --> 00:27:09,200
surprisable value i see somebody

751
00:27:09,200 --> 00:27:10,240
pointing

752
00:27:10,240 --> 00:27:12,640
pointing right indeed so this one kind

753
00:27:12,640 --> 00:27:14,720
of has bigger chunks so indeed if you

754
00:27:14,720 --> 00:27:16,480
compute it again jupiter notebook it

755
00:27:16,480 --> 00:27:19,200
will tell you um yes this one is

756
00:27:19,200 --> 00:27:21,520
actually pretty close to the uniform to

757
00:27:21,520 --> 00:27:24,640
2.45 and this one has significantly less

758
00:27:24,640 --> 00:27:26,159
um because you have these big chunks

759
00:27:26,159 --> 00:27:27,760
where you're not so surprised even

760
00:27:27,760 --> 00:27:28,960
though there's some small ones but i

761
00:27:28,960 --> 00:27:30,720
don't have too much that much weight so

762
00:27:30,720 --> 00:27:31,679
somehow

763
00:27:31,679 --> 00:27:34,399
it doesn't give that much entropy okay

764
00:27:34,399 --> 00:27:36,640
now we know how to compute entropy let's

765
00:27:36,640 --> 00:27:38,960
do something with it let's do let's use

766
00:27:38,960 --> 00:27:41,679
it let's put it into action

767
00:27:41,679 --> 00:27:45,039
and here comes the first kind of concept

768
00:27:45,039 --> 00:27:47,520
how do we actually measure information

769
00:27:47,520 --> 00:27:49,679
so remember this black box we press this

770
00:27:49,679 --> 00:27:52,159
red button every time it it spits out

771
00:27:52,159 --> 00:27:54,320
some like coins in this case fair coins

772
00:27:54,320 --> 00:27:57,039
coin flips sequence of coins sequence of

773
00:27:57,039 --> 00:28:00,399
random bits just uh flipped at random or

774
00:28:00,399 --> 00:28:02,080
with some different distribution of more

775
00:28:02,080 --> 00:28:03,840
complicated one i showed you how to do

776
00:28:03,840 --> 00:28:06,320
it you can kind of generate sequences

777
00:28:06,320 --> 00:28:08,320
like that and now we're wondering like

778
00:28:08,320 --> 00:28:11,600
how much information is in this in in

779
00:28:11,600 --> 00:28:13,200
such a sequence

780
00:28:13,200 --> 00:28:15,440
and here's a kind of clever idea again

781
00:28:15,440 --> 00:28:17,279
shannon's idea of course

782
00:28:17,279 --> 00:28:19,520
you have the data

783
00:28:19,520 --> 00:28:20,880
and

784
00:28:20,880 --> 00:28:22,080
if you want to find out how much

785
00:28:22,080 --> 00:28:23,360
information there is to what we could

786
00:28:23,360 --> 00:28:25,279
try is to compress it

787
00:28:25,279 --> 00:28:27,360
we can compress it down to the minimal

788
00:28:27,360 --> 00:28:30,399
number of bits let's call it l so you

789
00:28:30,399 --> 00:28:32,240
see some something big here coming in

790
00:28:32,240 --> 00:28:34,880
and something smaller coming out here

791
00:28:34,880 --> 00:28:35,600
and

792
00:28:35,600 --> 00:28:37,120
but we want to do it in a way so that

793
00:28:37,120 --> 00:28:39,440
you can inflate it back so we shouldn't

794
00:28:39,440 --> 00:28:41,440
be uh we're not allowed to lose any

795
00:28:41,440 --> 00:28:43,279
information that that's it's called

796
00:28:43,279 --> 00:28:44,880
lossless compression it's not what you

797
00:28:44,880 --> 00:28:46,799
do with pictures often like jpegs you

798
00:28:46,799 --> 00:28:48,320
can make them really small but you lose

799
00:28:48,320 --> 00:28:49,840
quality you know you cannot get that go

800
00:28:49,840 --> 00:28:52,320
back whereas here we want we want to be

801
00:28:52,320 --> 00:28:54,000
able to go back we want to like zip now

802
00:28:54,000 --> 00:28:56,159
we do zip then you can unzip and it's

803
00:28:56,159 --> 00:28:59,039
and it's back to normal and this number

804
00:28:59,039 --> 00:29:02,480
this minimal number l we will call the

805
00:29:02,480 --> 00:29:04,880
average information content it's kind of

806
00:29:04,880 --> 00:29:06,240
what is in there no like it's kind of

807
00:29:06,240 --> 00:29:08,080
the crucial stuff that is in there and

808
00:29:08,080 --> 00:29:11,360
we measure it in bits per symbol so here

809
00:29:11,360 --> 00:29:14,159
we got bits and we measure it per symbol

810
00:29:14,159 --> 00:29:17,600
that we that we had in our original data

811
00:29:17,600 --> 00:29:19,520
okay great we can define it like that we

812
00:29:19,520 --> 00:29:21,120
can define information like that and now

813
00:29:21,120 --> 00:29:24,320
comes shannon and says well this l is

814
00:29:24,320 --> 00:29:26,559
going to be pretty much exactly the

815
00:29:26,559 --> 00:29:30,480
entropy of the data distribution

816
00:29:30,559 --> 00:29:32,080
yeah so

817
00:29:32,080 --> 00:29:33,279
somebody

818
00:29:33,279 --> 00:29:35,039
picks this distribution i can compute

819
00:29:35,039 --> 00:29:36,799
the entropy you know you practice that

820
00:29:36,799 --> 00:29:37,840
before

821
00:29:37,840 --> 00:29:40,720
and that's going to be a kind of a bound

822
00:29:40,720 --> 00:29:42,799
or this is going to tell me pretty much

823
00:29:42,799 --> 00:29:44,240
how much we can compress this

824
00:29:44,240 --> 00:29:47,520
information down to its essential part

825
00:29:47,520 --> 00:29:49,760
and that's that's really cool

826
00:29:49,760 --> 00:29:51,679
and of course once we get such a claim

827
00:29:51,679 --> 00:29:54,480
in mathematicians we have to prove it

828
00:29:54,480 --> 00:29:55,279
so

829
00:29:55,279 --> 00:29:57,600
i'm not gonna really do it um

830
00:29:57,600 --> 00:29:58,960
unfortunately you don't have time

831
00:29:58,960 --> 00:30:00,880
especially this this direction it's not

832
00:30:00,880 --> 00:30:03,200
that hard but you need a bit of math so

833
00:30:03,200 --> 00:30:04,799
the harmony when we when we want to

834
00:30:04,799 --> 00:30:06,720
prove like such an equality

835
00:30:06,720 --> 00:30:08,399
what

836
00:30:08,399 --> 00:30:10,240
mathematicians do is we show both parts

837
00:30:10,240 --> 00:30:11,760
we show a lower bound we show upper

838
00:30:11,760 --> 00:30:13,760
bound so we show that l is small or

839
00:30:13,760 --> 00:30:15,919
equal to this entropy

840
00:30:15,919 --> 00:30:18,480
and we show that l is uh

841
00:30:18,480 --> 00:30:20,559
smaller equal and bigger and equal so it

842
00:30:20,559 --> 00:30:23,039
must be the same and this part i'm

843
00:30:23,039 --> 00:30:24,720
actually not gonna go through except

844
00:30:24,720 --> 00:30:26,720
that here's the proof but you will have

845
00:30:26,720 --> 00:30:29,360
to read some more stuff to understand it

846
00:30:29,360 --> 00:30:30,960
but the upper bound i'm gonna do so the

847
00:30:30,960 --> 00:30:33,200
upper bound is saying that we will give

848
00:30:33,200 --> 00:30:35,120
a compression method

849
00:30:35,120 --> 00:30:36,960
and to show that we can actually

850
00:30:36,960 --> 00:30:38,000
compress

851
00:30:38,000 --> 00:30:39,039
a

852
00:30:39,039 --> 00:30:41,520
data sequence from this distribution

853
00:30:41,520 --> 00:30:44,000
that reduces roughly the entropy of bits

854
00:30:44,000 --> 00:30:45,200
per symbol

855
00:30:45,200 --> 00:30:47,039
and that's really a very nice procedure

856
00:30:47,039 --> 00:30:48,559
that you should all know it's called

857
00:30:48,559 --> 00:30:50,399
huffman coding

858
00:30:50,399 --> 00:30:53,360
who's uh ever heard about huffman coding

859
00:30:53,360 --> 00:30:55,200
oh you guys come here and you already

860
00:30:55,200 --> 00:30:57,279
know everything okay

861
00:30:57,279 --> 00:30:59,919
okay just quick recap um not all of you

862
00:30:59,919 --> 00:31:02,240
have seen it it's very easy actually so

863
00:31:02,240 --> 00:31:04,399
that's why i can i can show it so here's

864
00:31:04,399 --> 00:31:06,320
how what you do given a probability

865
00:31:06,320 --> 00:31:07,440
distribution

866
00:31:07,440 --> 00:31:09,519
combine the two nodes with the smallest

867
00:31:09,519 --> 00:31:11,039
probability into a new one with a

868
00:31:11,039 --> 00:31:13,440
combined weight so here i've already

869
00:31:13,440 --> 00:31:16,080
nicely ordered them by by probabilities

870
00:31:16,080 --> 00:31:17,519
so you start with this last two you

871
00:31:17,519 --> 00:31:19,440
combine them into a new note that has

872
00:31:19,440 --> 00:31:22,000
the sum of these two probabilities then

873
00:31:22,000 --> 00:31:24,080
you just continue keep on doing this you

874
00:31:24,080 --> 00:31:26,000
have now zero point three zero point two

875
00:31:26,000 --> 00:31:27,760
zero point two five and two five so you

876
00:31:27,760 --> 00:31:29,279
have to take the smallest of the

877
00:31:29,279 --> 00:31:31,279
remaining ones these are for instance

878
00:31:31,279 --> 00:31:33,360
these two my here have a choice then if

879
00:31:33,360 --> 00:31:34,480
you have a choice doesn't matter what

880
00:31:34,480 --> 00:31:36,640
you do you could just pick any of them

881
00:31:36,640 --> 00:31:38,720
and you combine these two into a new

882
00:31:38,720 --> 00:31:42,519
note now 0.45 so what remains is 0.25

883
00:31:42,519 --> 00:31:45,679
0.45 and 0.3 so now we have to combine

884
00:31:45,679 --> 00:31:49,039
these two 0.3 and 2 5 to get 0.55 and

885
00:31:49,039 --> 00:31:50,399
then the last step you always combine

886
00:31:50,399 --> 00:31:52,080
two to get one because all the numbers

887
00:31:52,080 --> 00:31:54,240
sum up to one so that's a good check if

888
00:31:54,240 --> 00:31:56,240
the end you have to get the one

889
00:31:56,240 --> 00:31:59,039
okay so that's step one we're done

890
00:31:59,039 --> 00:32:01,039
now we can go backwards we kind of uh

891
00:32:01,039 --> 00:32:03,360
label this and we've created the binary

892
00:32:03,360 --> 00:32:06,080
tree this is the root of the binary tree

893
00:32:06,080 --> 00:32:08,320
this one and we just now label the path

894
00:32:08,320 --> 00:32:10,320
with zero and one so here zero one we

895
00:32:10,320 --> 00:32:12,480
have a zero one here zero one here zero

896
00:32:12,480 --> 00:32:14,399
one here and if you kind of follow that

897
00:32:14,399 --> 00:32:16,320
thing back then we'll get the codewords

898
00:32:16,320 --> 00:32:17,760
over here

899
00:32:17,760 --> 00:32:20,159
so for instance to get to the a we have

900
00:32:20,159 --> 00:32:22,799
to go down here so we the one and then

901
00:32:22,799 --> 00:32:24,720
the zero to go up and that's the code

902
00:32:24,720 --> 00:32:26,720
word here one then zero

903
00:32:26,720 --> 00:32:28,720
or to go to the last one to this e we

904
00:32:28,720 --> 00:32:31,600
have to go down one down one down one so

905
00:32:31,600 --> 00:32:34,480
again one one one yeah that's it these

906
00:32:34,480 --> 00:32:36,880
are the codes this is these are the code

907
00:32:36,880 --> 00:32:38,880
words and the binary code words to

908
00:32:38,880 --> 00:32:41,440
encode this uh this distribution

909
00:32:41,440 --> 00:32:43,120
according to these symbols

910
00:32:43,120 --> 00:32:44,960
and the claim is that this is basically

911
00:32:44,960 --> 00:32:47,360
optimal this works really well

912
00:32:47,360 --> 00:32:49,760
um just to show you i mean somehow

913
00:32:49,760 --> 00:32:51,279
intuitively that's the right thing no

914
00:32:51,279 --> 00:32:54,159
because actually the the symbols with

915
00:32:54,159 --> 00:32:56,880
small probabilities get long codewords

916
00:32:56,880 --> 00:32:58,480
it's the ones that you start with you

917
00:32:58,480 --> 00:33:00,159
actually want to use the long code words

918
00:33:00,159 --> 00:33:01,840
for those stuff that doesn't appear too

919
00:33:01,840 --> 00:33:02,640
much

920
00:33:02,640 --> 00:33:04,320
and for those with high probability you

921
00:33:04,320 --> 00:33:06,240
want to use short code words now that's

922
00:33:06,240 --> 00:33:07,919
that's intuitively what you want to do

923
00:33:07,919 --> 00:33:09,360
if you want to compress

924
00:33:09,360 --> 00:33:11,279
and here's a kind of a real world

925
00:33:11,279 --> 00:33:13,360
example namely this letter distribution

926
00:33:13,360 --> 00:33:15,200
that i was talking about before so

927
00:33:15,200 --> 00:33:16,960
here's the whole table and here is the

928
00:33:16,960 --> 00:33:18,240
huffman code for these letter

929
00:33:18,240 --> 00:33:20,240
frequencies so

930
00:33:20,240 --> 00:33:22,960
the space was the most common character

931
00:33:22,960 --> 00:33:25,519
and indeed that's here on the bottom and

932
00:33:25,519 --> 00:33:26,399
that's

933
00:33:26,399 --> 00:33:28,080
the code where just zero one because

934
00:33:28,080 --> 00:33:30,480
yeah you have to go up zero and down

935
00:33:30,480 --> 00:33:32,240
then you're already at the space

936
00:33:32,240 --> 00:33:34,159
the next one is e is down here you have

937
00:33:34,159 --> 00:33:38,640
to go one one zero i think for e yeah

938
00:33:38,640 --> 00:33:42,000
one one zero zero actually go up twice

939
00:33:42,000 --> 00:33:43,840
so you got such a tree and that's the

940
00:33:43,840 --> 00:33:46,240
huffman code and the claim is that this

941
00:33:46,240 --> 00:33:47,360
actually

942
00:33:47,360 --> 00:33:49,840
gets you pretty much to down to the to

943
00:33:49,840 --> 00:33:51,440
the shannon entropy so here the entropy

944
00:33:51,440 --> 00:33:54,399
is about four bits so again

945
00:33:54,399 --> 00:33:56,159
so if you have this distribution and you

946
00:33:56,159 --> 00:33:58,880
got a sample you're uh you're about four

947
00:33:58,880 --> 00:34:00,799
bits surprised so it's like flipping

948
00:34:00,799 --> 00:34:02,559
four fair coins

949
00:34:02,559 --> 00:34:04,320
okay uh let's see i did a little

950
00:34:04,320 --> 00:34:06,159
experiment

951
00:34:06,159 --> 00:34:07,919
to kind of verify that this is really

952
00:34:07,919 --> 00:34:10,800
true again all the code is in the in the

953
00:34:10,800 --> 00:34:12,159
in the jupyter notebook you can just

954
00:34:12,159 --> 00:34:13,599
actually do it yourself

955
00:34:13,599 --> 00:34:14,960
not very hard

956
00:34:14,960 --> 00:34:18,079
um so i took alice in wonderland and the

957
00:34:18,079 --> 00:34:19,679
first hundred thousand characters and if

958
00:34:19,679 --> 00:34:21,918
i just store it stupidly

959
00:34:21,918 --> 00:34:23,520
using ascii code

960
00:34:23,520 --> 00:34:25,760
that's also a code no it's uses eight

961
00:34:25,760 --> 00:34:28,719
bits per character then obviously you

962
00:34:28,719 --> 00:34:30,480
need eight hundred thousand bits to to

963
00:34:30,480 --> 00:34:32,000
store this thing

964
00:34:32,000 --> 00:34:33,599
so let's be more clever and use a

965
00:34:33,599 --> 00:34:35,599
huffman code instead so just use the

966
00:34:35,599 --> 00:34:37,760
homicide from the previous slide and

967
00:34:37,760 --> 00:34:40,079
indeed and the number of bits is gonna

968
00:34:40,079 --> 00:34:42,320
be roughly four hundred thousand

969
00:34:42,320 --> 00:34:44,399
and that turns out to be very close to

970
00:34:44,399 --> 00:34:46,159
the shannon entropy to the four hundred

971
00:34:46,159 --> 00:34:48,079
thousand times one hundred thousand so

972
00:34:48,079 --> 00:34:49,839
that's exactly what shannon predicted

973
00:34:49,839 --> 00:34:52,159
that you kind of need um

974
00:34:52,159 --> 00:34:55,040
four here this number is four per source

975
00:34:55,040 --> 00:34:56,879
symbols there we have hundred thousand

976
00:34:56,879 --> 00:34:58,880
source symbols so that's very close to

977
00:34:58,880 --> 00:35:00,400
each other

978
00:35:00,400 --> 00:35:02,000
and you can also do the same thing with

979
00:35:02,000 --> 00:35:04,320
uh with uh independent letter samples so

980
00:35:04,320 --> 00:35:05,839
instead of using alice in wonderland i

981
00:35:05,839 --> 00:35:08,079
could also just take a hundred thousand

982
00:35:08,079 --> 00:35:09,599
samples from this distribution

983
00:35:09,599 --> 00:35:11,680
independent samples and i've got pretty

984
00:35:11,680 --> 00:35:13,280
much the same numbers

985
00:35:13,280 --> 00:35:14,880
storing them stupidly is eight hundred

986
00:35:14,880 --> 00:35:16,640
thousand using huffman code is pretty

987
00:35:16,640 --> 00:35:17,599
much

988
00:35:17,599 --> 00:35:19,119
what we expect

989
00:35:19,119 --> 00:35:20,240
and then there's one column that i

990
00:35:20,240 --> 00:35:22,640
didn't do that i don't show you yet

991
00:35:22,640 --> 00:35:24,960
so i'm gonna zip this text

992
00:35:24,960 --> 00:35:26,560
so i'm gonna zip alice in wonderland i'm

993
00:35:26,560 --> 00:35:28,560
gonna zip the independent letter samples

994
00:35:28,560 --> 00:35:31,839
what do you think is going to happen

995
00:35:32,400 --> 00:35:34,160
yeah

996
00:35:34,160 --> 00:35:37,040
which one is way better

997
00:35:37,040 --> 00:35:38,240
yeah

998
00:35:38,240 --> 00:35:40,240
it is better somewhere

999
00:35:40,240 --> 00:35:42,160
but not for the other

1000
00:35:42,160 --> 00:35:45,599
okay so here here we go

1001
00:35:45,599 --> 00:35:47,839
it is pretty good it is actually better

1002
00:35:47,839 --> 00:35:49,920
than the huffman code in zipping alice

1003
00:35:49,920 --> 00:35:52,400
in wonderland english text

1004
00:35:52,400 --> 00:35:55,520
but it's actually worse here um so we

1005
00:35:55,520 --> 00:35:57,280
actually beating zip here if you just

1006
00:35:57,280 --> 00:36:00,400
have independent letter samples

1007
00:36:00,400 --> 00:36:02,079
yeah because you have to think a little

1008
00:36:02,079 --> 00:36:03,680
bit about that why like why is this the

1009
00:36:03,680 --> 00:36:04,720
case

1010
00:36:04,720 --> 00:36:07,040
but the reason is that there's much more

1011
00:36:07,040 --> 00:36:09,440
structure than just letter frequencies

1012
00:36:09,440 --> 00:36:11,040
single letter frequencies in english

1013
00:36:11,040 --> 00:36:13,839
text you also have diagrams and trigrams

1014
00:36:13,839 --> 00:36:16,079
and you have words you have

1015
00:36:16,079 --> 00:36:18,320
language structure no sentences if you

1016
00:36:18,320 --> 00:36:20,800
can exploit that well you can be better

1017
00:36:20,800 --> 00:36:22,160
and that is what what zip does

1018
00:36:22,160 --> 00:36:24,160
apparently quite quite cleverly it beats

1019
00:36:24,160 --> 00:36:26,400
it like big time

1020
00:36:26,400 --> 00:36:28,079
this won't work on independent letter

1021
00:36:28,079 --> 00:36:29,440
sample because there's no there's no

1022
00:36:29,440 --> 00:36:31,680
bygrams i mean there's just trivial

1023
00:36:31,680 --> 00:36:33,280
diagrams so there the huffman code is

1024
00:36:33,280 --> 00:36:36,400
really good but here you actually um win

1025
00:36:36,400 --> 00:36:38,240
by it and that means you have to be more

1026
00:36:38,240 --> 00:36:41,359
clever in compressing you can be more

1027
00:36:41,359 --> 00:36:43,280
clever if you have more knowledge about

1028
00:36:43,280 --> 00:36:45,760
your data

1029
00:36:46,000 --> 00:36:46,880
good

1030
00:36:46,880 --> 00:36:49,119
final part i saw something like 15

1031
00:36:49,119 --> 00:36:51,440
minutes

1032
00:36:52,320 --> 00:36:54,400
final part one more nugget to go and

1033
00:36:54,400 --> 00:36:56,160
this is actually by far the hardest part

1034
00:36:56,160 --> 00:36:58,000
and so i i noticed that i had to

1035
00:36:58,000 --> 00:37:00,640
simplify a lot and so i'm i'm gonna be

1036
00:37:00,640 --> 00:37:03,280
very um hand-wavy um at least for a

1037
00:37:03,280 --> 00:37:05,200
mathematician speaking i'm gonna be very

1038
00:37:05,200 --> 00:37:06,320
happy

1039
00:37:06,320 --> 00:37:09,200
anyway i'm already um so here we have a

1040
00:37:09,200 --> 00:37:11,200
noisy channel a noisy channel you can

1041
00:37:11,200 --> 00:37:13,119
model it mathematically as a conditional

1042
00:37:13,119 --> 00:37:14,480
probability distribution don't worry

1043
00:37:14,480 --> 00:37:17,200
about it it's it gets an input x and it

1044
00:37:17,200 --> 00:37:19,920
kind of outputs something y it's kind of

1045
00:37:19,920 --> 00:37:22,640
messed up a little bit so it's noisy so

1046
00:37:22,640 --> 00:37:24,560
it's not the perfect it's not outputting

1047
00:37:24,560 --> 00:37:26,240
perfectly what whatever comes in but it

1048
00:37:26,240 --> 00:37:28,240
kind of distorts it a little bit and

1049
00:37:28,240 --> 00:37:30,000
here is the most famous example it's

1050
00:37:30,000 --> 00:37:31,440
called the called binary symmetric

1051
00:37:31,440 --> 00:37:32,400
channel

1052
00:37:32,400 --> 00:37:34,480
you have an input it's just a bit and a

1053
00:37:34,480 --> 00:37:36,720
zero one and with probability one minus

1054
00:37:36,720 --> 00:37:38,720
epsilon it survives the bit it just

1055
00:37:38,720 --> 00:37:40,560
outputs the bit that was input and with

1056
00:37:40,560 --> 00:37:42,880
probability epsilon it flips the bit and

1057
00:37:42,880 --> 00:37:44,640
let's say epsilon is

1058
00:37:44,640 --> 00:37:46,640
zero point one so with ten percent

1059
00:37:46,640 --> 00:37:48,720
probability just flips the bit it's a

1060
00:37:48,720 --> 00:37:50,400
noisy channel that yeah you can put in

1061
00:37:50,400 --> 00:37:51,440
bits but

1062
00:37:51,440 --> 00:37:53,040
like ten percent of them are going to be

1063
00:37:53,040 --> 00:37:55,280
flipped and you don't know which one

1064
00:37:55,280 --> 00:37:56,800
okay

1065
00:37:56,800 --> 00:37:57,839
now

1066
00:37:57,839 --> 00:37:59,599
how do you cope with such a channel so

1067
00:37:59,599 --> 00:38:01,599
here you have our bsc with an error

1068
00:38:01,599 --> 00:38:03,920
probability 0.1 but you want you have

1069
00:38:03,920 --> 00:38:05,119
some data

1070
00:38:05,119 --> 00:38:06,800
and you kind of want

1071
00:38:06,800 --> 00:38:08,960
to survive this channel you kind of want

1072
00:38:08,960 --> 00:38:10,880
to encode it in a way that

1073
00:38:10,880 --> 00:38:12,400
that you can recover the original

1074
00:38:12,400 --> 00:38:14,240
message so if a message you kind of want

1075
00:38:14,240 --> 00:38:17,200
to encode it in some way so that after

1076
00:38:17,200 --> 00:38:19,440
you recover you get what what comes back

1077
00:38:19,440 --> 00:38:21,520
from the channel you can decode it again

1078
00:38:21,520 --> 00:38:24,079
so that you recover the original message

1079
00:38:24,079 --> 00:38:26,320
and there's two uh figure of merits here

1080
00:38:26,320 --> 00:38:28,640
that we kind of want to optimize

1081
00:38:28,640 --> 00:38:30,880
on the one hand there's the code rate

1082
00:38:30,880 --> 00:38:32,640
that's like how many times you actually

1083
00:38:32,640 --> 00:38:34,480
have to use the channel per bit you want

1084
00:38:34,480 --> 00:38:35,520
to send

1085
00:38:35,520 --> 00:38:37,280
and we want to make sure that we have a

1086
00:38:37,280 --> 00:38:39,040
good chance of recovering the original

1087
00:38:39,040 --> 00:38:40,320
message

1088
00:38:40,320 --> 00:38:41,680
so these are the kind of things that you

1089
00:38:41,680 --> 00:38:43,440
want to optimize and of course let me

1090
00:38:43,440 --> 00:38:46,480
give you examples so kind of a stupid or

1091
00:38:46,480 --> 00:38:48,800
kind of trivial example is um we don't

1092
00:38:48,800 --> 00:38:50,160
decode at all

1093
00:38:50,160 --> 00:38:51,839
just send whatever you get so if the

1094
00:38:51,839 --> 00:38:54,160
message is zero one one zero well just

1095
00:38:54,160 --> 00:38:56,800
send that over the bsc well we could be

1096
00:38:56,800 --> 00:38:58,240
unlucky that some bit is flipped and

1097
00:38:58,240 --> 00:39:00,400
then well we're lost the rate is very

1098
00:39:00,400 --> 00:39:02,480
good because we only use exactly the

1099
00:39:02,480 --> 00:39:04,480
channel once for the every bit we want

1100
00:39:04,480 --> 00:39:06,480
to send but the probability of success

1101
00:39:06,480 --> 00:39:09,359
is obviously the 0.9 per bit which is

1102
00:39:09,359 --> 00:39:10,640
not that great

1103
00:39:10,640 --> 00:39:12,480
so here's something more clever

1104
00:39:12,480 --> 00:39:14,720
namely repetition code so instead of

1105
00:39:14,720 --> 00:39:17,440
sending the bit once send it three times

1106
00:39:17,440 --> 00:39:19,280
just the same bit so if you want to send

1107
00:39:19,280 --> 00:39:21,359
zero just send zero zero zero if you

1108
00:39:21,359 --> 00:39:23,119
want to send one just send one one one

1109
00:39:23,119 --> 00:39:25,599
etcetera and then about ten percent of

1110
00:39:25,599 --> 00:39:27,040
these bits are going to get hit with an

1111
00:39:27,040 --> 00:39:29,119
error you don't know where but you have

1112
00:39:29,119 --> 00:39:31,200
a pretty good idea to to recover you

1113
00:39:31,200 --> 00:39:33,760
could just use majority vote no in this

1114
00:39:33,760 --> 00:39:35,839
box of three if there are two zeros

1115
00:39:35,839 --> 00:39:37,119
still then probably the third one was

1116
00:39:37,119 --> 00:39:38,480
also a zero

1117
00:39:38,480 --> 00:39:41,040
now that that actually works quite well

1118
00:39:41,040 --> 00:39:42,800
the raid is not so great because it's

1119
00:39:42,800 --> 00:39:44,960
only one third we kind of

1120
00:39:44,960 --> 00:39:46,560
use the channel three times for every

1121
00:39:46,560 --> 00:39:48,640
bit that we want to send but you we

1122
00:39:48,640 --> 00:39:50,800
boost our success probability per bit

1123
00:39:50,800 --> 00:39:52,240
quite a bit

1124
00:39:52,240 --> 00:39:54,079
so that's that's kind of some some easy

1125
00:39:54,079 --> 00:39:56,079
examples of codes there are some better

1126
00:39:56,079 --> 00:39:58,320
codes like the the following one the

1127
00:39:58,320 --> 00:39:59,760
hemming code who has seen the having

1128
00:39:59,760 --> 00:40:01,280
code

1129
00:40:01,280 --> 00:40:03,040
the same guys as before

1130
00:40:03,040 --> 00:40:05,760
okay so very quickly here it is

1131
00:40:05,760 --> 00:40:07,680
so you can use

1132
00:40:07,680 --> 00:40:09,119
four message

1133
00:40:09,119 --> 00:40:11,760
bits and you add some parity check bits

1134
00:40:11,760 --> 00:40:14,160
some three more bits and here's a nice

1135
00:40:14,160 --> 00:40:15,760
graphical way to illustrate how this

1136
00:40:15,760 --> 00:40:18,240
works so here's an example let's say we

1137
00:40:18,240 --> 00:40:21,599
have this message bit 0 1 1 0 so we put

1138
00:40:21,599 --> 00:40:23,839
them in these circles according to this

1139
00:40:23,839 --> 00:40:26,880
scheme here so we put the zero at m1 we

1140
00:40:26,880 --> 00:40:29,280
put the one at m2 we put another one on

1141
00:40:29,280 --> 00:40:31,599
m3 and then the zero here

1142
00:40:31,599 --> 00:40:33,040
and now we just want to make sure that

1143
00:40:33,040 --> 00:40:34,960
all the circles are happy the circles

1144
00:40:34,960 --> 00:40:37,040
are happy when they are even parity so

1145
00:40:37,040 --> 00:40:39,040
if the sum of the the entries of the

1146
00:40:39,040 --> 00:40:41,839
bits in the circle is even so we have to

1147
00:40:41,839 --> 00:40:44,960
add a one here to make one and one two

1148
00:40:44,960 --> 00:40:47,680
so that's that's a happy circle here we

1149
00:40:47,680 --> 00:40:49,520
need to add a zero to make this circle

1150
00:40:49,520 --> 00:40:51,359
happy and here we have to add a one to

1151
00:40:51,359 --> 00:40:53,040
make this circle happy

1152
00:40:53,040 --> 00:40:54,560
and that's it so that's kind of the

1153
00:40:54,560 --> 00:40:56,480
encoding scheme and it's easy to see

1154
00:40:56,480 --> 00:40:58,560
that if if some bit gets messed up

1155
00:40:58,560 --> 00:41:00,000
actually doesn't matter which one we

1156
00:41:00,000 --> 00:41:01,760
will be able to recover as long as only

1157
00:41:01,760 --> 00:41:03,520
one bit for instance here if we hit this

1158
00:41:03,520 --> 00:41:05,040
bit with an error

1159
00:41:05,040 --> 00:41:06,640
then we can easily figure out that it's

1160
00:41:06,640 --> 00:41:08,480
this bit because we can again check

1161
00:41:08,480 --> 00:41:10,000
which circles are happy this one is

1162
00:41:10,000 --> 00:41:12,079
already still happy this one is not

1163
00:41:12,079 --> 00:41:13,760
happy anymore because it's only one the

1164
00:41:13,760 --> 00:41:15,760
sum of the bits and here's also another

1165
00:41:15,760 --> 00:41:17,280
one that is not happy so it must be in

1166
00:41:17,280 --> 00:41:19,200
the intersection of these two circles

1167
00:41:19,200 --> 00:41:20,960
where the error occurred so we can

1168
00:41:20,960 --> 00:41:22,880
correct that back to a1 and we're good

1169
00:41:22,880 --> 00:41:24,800
and this actually works for any place

1170
00:41:24,800 --> 00:41:26,400
where the error occurs so we can cope

1171
00:41:26,400 --> 00:41:29,280
with one error here the rate is kind of

1172
00:41:29,280 --> 00:41:32,160
okay 0.57 and the success probability is

1173
00:41:32,160 --> 00:41:35,040
like 93 you see there are many different

1174
00:41:35,040 --> 00:41:36,400
error correcting codes actually maybe

1175
00:41:36,400 --> 00:41:37,920
that's the topic of the next talk i'm

1176
00:41:37,920 --> 00:41:39,920
going to give in the future they can

1177
00:41:39,920 --> 00:41:41,599
actually study this in detail here's a

1178
00:41:41,599 --> 00:41:43,599
little illustration of the hamming code

1179
00:41:43,599 --> 00:41:45,119
actually which is kind of funny so

1180
00:41:45,119 --> 00:41:46,880
there's the bits you encode them with

1181
00:41:46,880 --> 00:41:48,720
additional bits 30 bits then you hit

1182
00:41:48,720 --> 00:41:50,960
everything with 10 noise and you can

1183
00:41:50,960 --> 00:41:52,319
still recover the picture kind of

1184
00:41:52,319 --> 00:41:54,880
reasonably well by by decoding the way i

1185
00:41:54,880 --> 00:41:57,040
just uh illustrated

1186
00:41:57,040 --> 00:41:58,640
and

1187
00:41:58,640 --> 00:41:59,599
finally

1188
00:41:59,599 --> 00:42:02,160
um so here are kind of our two figures

1189
00:42:02,160 --> 00:42:04,240
of merit the error that we want to keep

1190
00:42:04,240 --> 00:42:06,720
small and the rates that we want to make

1191
00:42:06,720 --> 00:42:08,640
high so good codes are here in this

1192
00:42:08,640 --> 00:42:09,839
corner

1193
00:42:09,839 --> 00:42:12,319
and what shannon finally the final

1194
00:42:12,319 --> 00:42:15,040
nugget by shannon is that actually every

1195
00:42:15,040 --> 00:42:16,960
channel not just this binary semantic

1196
00:42:16,960 --> 00:42:19,760
channel but any channel has a capacity

1197
00:42:19,760 --> 00:42:21,520
so you give me a channel i can compute a

1198
00:42:21,520 --> 00:42:23,839
number c for this channel

1199
00:42:23,839 --> 00:42:26,800
and this c is the kind of a magic

1200
00:42:26,800 --> 00:42:29,200
magic bar that says there exists error

1201
00:42:29,200 --> 00:42:31,040
correcting codes that can cope with this

1202
00:42:31,040 --> 00:42:33,680
noisy channel at any rate that is below

1203
00:42:33,680 --> 00:42:35,359
that c

1204
00:42:35,359 --> 00:42:37,440
so for this example i could compute for

1205
00:42:37,440 --> 00:42:41,040
the bsc with zero one 0.1 probability of

1206
00:42:41,040 --> 00:42:43,839
error this c turns out to be 0.53 so

1207
00:42:43,839 --> 00:42:45,520
it's actually where this line here

1208
00:42:45,520 --> 00:42:48,640
crosses here at the zero and shannon's

1209
00:42:48,640 --> 00:42:50,880
nugget here tells us that actually we

1210
00:42:50,880 --> 00:42:53,200
can we can get as close as we want we

1211
00:42:53,200 --> 00:42:56,800
can get the rate up to 0.53 with

1212
00:42:56,800 --> 00:42:58,640
arbitrarily small error

1213
00:42:58,640 --> 00:43:00,240
so that's really amazing so it's kind of

1214
00:43:00,240 --> 00:43:02,640
he's claiming basically this line here

1215
00:43:02,640 --> 00:43:05,599
that and this line exists for every um

1216
00:43:05,599 --> 00:43:07,440
for every noisy channel

1217
00:43:07,440 --> 00:43:08,640
and that's kind of what people thought

1218
00:43:08,640 --> 00:43:11,040
what what how can you do that

1219
00:43:11,040 --> 00:43:12,880
unfortunately the way he proves that

1220
00:43:12,880 --> 00:43:14,480
it's it's ingenious and it's actually

1221
00:43:14,480 --> 00:43:16,720
very nice to see that the proof but what

1222
00:43:16,720 --> 00:43:19,280
he does is just each picks a random uh

1223
00:43:19,280 --> 00:43:20,800
error correcting code

1224
00:43:20,800 --> 00:43:22,560
so they random codes are extremely good

1225
00:43:22,560 --> 00:43:24,480
at these things unfortunately they're

1226
00:43:24,480 --> 00:43:26,720
very impractical because you cannot use

1227
00:43:26,720 --> 00:43:28,560
them in practice decoding them is very

1228
00:43:28,560 --> 00:43:30,800
hard and that's why it took like 60

1229
00:43:30,800 --> 00:43:32,480
years to actually achieve these limits

1230
00:43:32,480 --> 00:43:34,000
in practice to actually make it

1231
00:43:34,000 --> 00:43:36,079
practical enough to actually do this in

1232
00:43:36,079 --> 00:43:37,680
practice

1233
00:43:37,680 --> 00:43:40,560
all right that brings me to the end

1234
00:43:40,560 --> 00:43:41,760
what you've learned from this talk

1235
00:43:41,760 --> 00:43:42,880
hopefully is something about

1236
00:43:42,880 --> 00:43:44,640
exponentials and logarithms about shell

1237
00:43:44,640 --> 00:43:46,720
and entropy here these two formulas the

1238
00:43:46,720 --> 00:43:48,560
entropy and actually the capacity of the

1239
00:43:48,560 --> 00:43:50,480
channel is down here

1240
00:43:50,480 --> 00:43:52,240
a little bit about data compression and

1241
00:43:52,240 --> 00:43:54,000
about error correction and now i can

1242
00:43:54,000 --> 00:43:55,440
actually come back to this slide because

1243
00:43:55,440 --> 00:43:57,280
now you actually understand

1244
00:43:57,280 --> 00:43:59,920
um data compression if data is sampled

1245
00:43:59,920 --> 00:44:01,200
according to some probability

1246
00:44:01,200 --> 00:44:03,200
distribution then there's a ultimate

1247
00:44:03,200 --> 00:44:04,880
data compression limit and that's the

1248
00:44:04,880 --> 00:44:08,319
entropy h of this distribution in error

1249
00:44:08,319 --> 00:44:10,000
correction you can model a channel with

1250
00:44:10,000 --> 00:44:12,400
a conditional probability distribution

1251
00:44:12,400 --> 00:44:14,160
you can attach a number to it the

1252
00:44:14,160 --> 00:44:16,480
channel capacity and finally you can

1253
00:44:16,480 --> 00:44:19,440
reliably communicate if and only if the

1254
00:44:19,440 --> 00:44:21,359
the entropy of the stuff you want to

1255
00:44:21,359 --> 00:44:23,359
send is strictly smaller than the

1256
00:44:23,359 --> 00:44:25,359
capacity that of the channel where you

1257
00:44:25,359 --> 00:44:27,680
want to send information over

1258
00:44:27,680 --> 00:44:29,119
yeah

1259
00:44:29,119 --> 00:44:30,160
that's it

1260
00:44:30,160 --> 00:44:32,000
thank you very much for your attention

1261
00:44:32,000 --> 00:44:33,760
and i'm happy to take any questions you

1262
00:44:33,760 --> 00:44:36,760
have

1263
00:44:40,880 --> 00:44:43,200
reminder that uh ebay asking questions

1264
00:44:43,200 --> 00:44:45,119
should come to these microphones in the

1265
00:44:45,119 --> 00:44:46,079
middle

1266
00:44:46,079 --> 00:44:48,160
um are there any questions nope none

1267
00:44:48,160 --> 00:44:50,400
from signal excellent

1268
00:44:50,400 --> 00:44:52,480
so we're all just dazzled by this

1269
00:44:52,480 --> 00:44:55,359
display and so nobody has a question

1270
00:44:55,359 --> 00:44:58,319
oh we have a question

1271
00:44:59,119 --> 00:45:01,280
hello thanks very interesting

1272
00:45:01,280 --> 00:45:03,119
i was wondering is there a theoretical

1273
00:45:03,119 --> 00:45:06,880
limit if you have a noisy communication

1274
00:45:06,880 --> 00:45:09,440
when you can no longer reliably get

1275
00:45:09,440 --> 00:45:11,119
anything across yes

1276
00:45:11,119 --> 00:45:13,040
yes so basically in this figure that i

1277
00:45:13,040 --> 00:45:16,160
wrote that's exactly this line it is a

1278
00:45:16,160 --> 00:45:17,200
heart

1279
00:45:17,200 --> 00:45:18,640
a hard limit

1280
00:45:18,640 --> 00:45:20,480
so if you if your rate if you come up

1281
00:45:20,480 --> 00:45:22,640
with codes or if you have codes that are

1282
00:45:22,640 --> 00:45:24,480
going beyond this line

1283
00:45:24,480 --> 00:45:27,359
then you then your arrow will explode

1284
00:45:27,359 --> 00:45:29,760
so it's really this is a sharp border

1285
00:45:29,760 --> 00:45:31,440
as long as you stay below then there's

1286
00:45:31,440 --> 00:45:33,680
ways to do it if you're above it's over

1287
00:45:33,680 --> 00:45:35,520
if you write exactly on the line then it

1288
00:45:35,520 --> 00:45:37,040
becomes interesting then there's people

1289
00:45:37,040 --> 00:45:39,359
figuring out how exactly it behaves but

1290
00:45:39,359 --> 00:45:42,240
it's basically a sharp a sharp border

1291
00:45:42,240 --> 00:45:44,839
so yes there's just yeah

1292
00:45:44,839 --> 00:45:46,800
channels for instance i mean if you

1293
00:45:46,800 --> 00:45:48,720
imagine a simple example of the of the

1294
00:45:48,720 --> 00:45:50,560
binary symmetric channel that flips the

1295
00:45:50,560 --> 00:45:52,880
bit with probably one half

1296
00:45:52,880 --> 00:45:54,880
it's not gonna get you anywhere because

1297
00:45:54,880 --> 00:45:56,640
actually then this this is the binary

1298
00:45:56,640 --> 00:45:58,880
entropy of one half is one

1299
00:45:58,880 --> 00:46:00,160
so you have one minus one you have the

1300
00:46:00,160 --> 00:46:02,640
capacity of zero you cannot you just get

1301
00:46:02,640 --> 00:46:04,960
random bits as outcomes then everything

1302
00:46:04,960 --> 00:46:06,480
is randomized you cannot see anything

1303
00:46:06,480 --> 00:46:09,280
from the output

1304
00:46:09,359 --> 00:46:12,240
yes you're talking about noisy channels

1305
00:46:12,240 --> 00:46:14,640
do you have like some guesstimations how

1306
00:46:14,640 --> 00:46:18,319
noisy our i.t channels are nowadays

1307
00:46:18,319 --> 00:46:19,520
um

1308
00:46:19,520 --> 00:46:21,520
but what what is the id channel we have

1309
00:46:21,520 --> 00:46:22,560
in mind

1310
00:46:22,560 --> 00:46:25,359
ethernet violence whatever oh okay well

1311
00:46:25,359 --> 00:46:27,520
those are error corrected

1312
00:46:27,520 --> 00:46:29,119
there's in the in the background uh

1313
00:46:29,119 --> 00:46:31,359
there's error correction going on but

1314
00:46:31,359 --> 00:46:33,359
for instance uh think of like uh

1315
00:46:33,359 --> 00:46:35,599
transmitting satellite images no that

1316
00:46:35,599 --> 00:46:38,400
was just the the the james uh what uh

1317
00:46:38,400 --> 00:46:40,800
telescope unfolded and these pictures

1318
00:46:40,800 --> 00:46:42,560
were transmitted that's like from i

1319
00:46:42,560 --> 00:46:44,960
don't know thousands of kilometers away

1320
00:46:44,960 --> 00:46:46,560
the the fact that they can make this

1321
00:46:46,560 --> 00:46:48,560
information can make it down to earth

1322
00:46:48,560 --> 00:46:50,079
it's because they put a lot of

1323
00:46:50,079 --> 00:46:51,760
redundancy in it now they use error

1324
00:46:51,760 --> 00:46:53,119
correcting codes to make sure that this

1325
00:46:53,119 --> 00:46:54,800
transmission actually works

1326
00:46:54,800 --> 00:46:57,280
so usually the the actual noise depends

1327
00:46:57,280 --> 00:47:00,480
a lot on the distance right it grows uh

1328
00:47:00,480 --> 00:47:02,480
maybe quadratically or you can draw it

1329
00:47:02,480 --> 00:47:04,560
grows with distance so the closer you

1330
00:47:04,560 --> 00:47:06,160
are the easier it is

1331
00:47:06,160 --> 00:47:09,119
okay but for everyday applications

1332
00:47:09,119 --> 00:47:11,359
is this like every 10th bit is flipped

1333
00:47:11,359 --> 00:47:13,760
or is it way lower oh this i think is

1334
00:47:13,760 --> 00:47:16,079
way lower i mean for just by

1335
00:47:16,079 --> 00:47:18,079
communicating on ethernet no they are

1336
00:47:18,079 --> 00:47:23,000
it's very low extremely low thanks

1337
00:47:24,160 --> 00:47:25,839
final questions

1338
00:47:25,839 --> 00:47:29,440
oh one final question go for it

1339
00:47:29,599 --> 00:47:31,839
uh uh bit time gentle

1340
00:47:31,839 --> 00:47:32,559
but

1341
00:47:32,559 --> 00:47:33,599
i

1342
00:47:33,599 --> 00:47:35,839
was too distracted by computers at

1343
00:47:35,839 --> 00:47:38,960
school to actually learn any maths

1344
00:47:38,960 --> 00:47:40,800
so like bits of this i kind of

1345
00:47:40,800 --> 00:47:42,160
understand because you know i've

1346
00:47:42,160 --> 00:47:44,480
transferred a lot of data right for my

1347
00:47:44,480 --> 00:47:45,680
life

1348
00:47:45,680 --> 00:47:47,440
but but

1349
00:47:47,440 --> 00:47:48,720
at some point i need to go back and

1350
00:47:48,720 --> 00:47:50,720
learn maths where would be a good place

1351
00:47:50,720 --> 00:47:54,559
to start oh um actually there's many

1352
00:47:54,559 --> 00:47:56,800
good places so um

1353
00:47:56,800 --> 00:47:59,040
in the github repository that i'm

1354
00:47:59,040 --> 00:48:00,880
linking here there's like all the links

1355
00:48:00,880 --> 00:48:03,359
that i consulted when preparing

1356
00:48:03,359 --> 00:48:05,440
on the readme and there's a lot of like

1357
00:48:05,440 --> 00:48:07,119
nice instructional videos for instance

1358
00:48:07,119 --> 00:48:09,440
about logarithms from like extremely

1359
00:48:09,440 --> 00:48:12,640
simple to brutally hard um so i think

1360
00:48:12,640 --> 00:48:14,400
there's a lot of very nice explainer

1361
00:48:14,400 --> 00:48:16,559
videos out there for instance

1362
00:48:16,559 --> 00:48:18,640
um then it depends a bit on your on your

1363
00:48:18,640 --> 00:48:21,280
taste yeah i mean yeah i've tried now to

1364
00:48:21,280 --> 00:48:23,040
kind of make it a bit accessible but i

1365
00:48:23,040 --> 00:48:24,720
know i'm a i'm a mathematician so i

1366
00:48:24,720 --> 00:48:25,520
don't know

1367
00:48:25,520 --> 00:48:27,839
how much i succeeded but i think usually

1368
00:48:27,839 --> 00:48:30,480
like playing playing around with things

1369
00:48:30,480 --> 00:48:32,720
like trying to program it just like see

1370
00:48:32,720 --> 00:48:34,559
playing around with on this jupiter

1371
00:48:34,559 --> 00:48:36,720
notebook this will help a lot yeah cool

1372
00:48:36,720 --> 00:48:39,440
thank you you're welcome

1373
00:48:39,440 --> 00:48:41,599
well let's uh we've come we've run out

1374
00:48:41,599 --> 00:48:43,599
of time but uh

1375
00:48:43,599 --> 00:48:46,000
you you should grab christian outside

1376
00:48:46,000 --> 00:48:46,960
the tent

1377
00:48:46,960 --> 00:48:49,280
afterward obviously if this is a

1378
00:48:49,280 --> 00:48:51,680
compressed version of his whole semester

1379
00:48:51,680 --> 00:48:53,920
lecture he's got a lot of knowledge in

1380
00:48:53,920 --> 00:48:55,920
there uh he can unpack using these

1381
00:48:55,920 --> 00:48:58,000
patterns so let's uh thank him again for

1382
00:48:58,000 --> 00:48:59,680
for his

1383
00:48:59,680 --> 00:49:01,270
thank you

1384
00:49:01,270 --> 00:49:04,400
[Applause]

1385
00:49:04,400 --> 00:49:06,400
maybe maybe one last thing i would ask

1386
00:49:06,400 --> 00:49:08,640
the organizers to have a shannon field

1387
00:49:08,640 --> 00:49:10,880
next time we do mch no like there should

1388
00:49:10,880 --> 00:49:12,400
be a

1389
00:49:12,400 --> 00:49:14,400
without without shining we won't be here

1390
00:49:14,400 --> 00:49:19,000
so shuttle field perfect

