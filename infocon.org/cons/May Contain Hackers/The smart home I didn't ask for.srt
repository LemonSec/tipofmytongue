1
00:00:01,280 --> 00:00:16,560
[Music]

2
00:00:16,560 --> 00:00:18,240
so hello everyone

3
00:00:18,240 --> 00:00:20,320
good evening today i will be talking

4
00:00:20,320 --> 00:00:23,119
about the smart home i didn't ask for

5
00:00:23,119 --> 00:00:26,240
so my name is neil samia i'm a security

6
00:00:26,240 --> 00:00:29,119
researcher working at kudelski security

7
00:00:29,119 --> 00:00:32,399
and i have interest in privacy

8
00:00:32,399 --> 00:00:35,120
data processing at scale and i'm a huge

9
00:00:35,120 --> 00:00:35,910
linux fan

10
00:00:35,910 --> 00:00:37,360
[Music]

11
00:00:37,360 --> 00:00:39,440
so what is this about basically i'm

12
00:00:39,440 --> 00:00:41,920
going to tell you my story with a smart

13
00:00:41,920 --> 00:00:44,800
home and first we'll talk about how i

14
00:00:44,800 --> 00:00:46,719
analyze network traffic

15
00:00:46,719 --> 00:00:50,000
then how i analyze the tablet itself the

16
00:00:50,000 --> 00:00:52,719
findings i discovered and how i

17
00:00:52,719 --> 00:00:56,000
disclosed those findings

18
00:00:56,000 --> 00:00:58,559
so once upon a time

19
00:00:58,559 --> 00:01:01,840
i was looking for a new apartment and i

20
00:01:01,840 --> 00:01:05,360
found one for rent and decided to rent

21
00:01:05,360 --> 00:01:06,240
it

22
00:01:06,240 --> 00:01:08,320
and the day i moved into this new

23
00:01:08,320 --> 00:01:09,520
apartment

24
00:01:09,520 --> 00:01:13,119
this was on the wall

25
00:01:13,119 --> 00:01:16,799
so it's a wall-mounted tablet that runs

26
00:01:16,799 --> 00:01:19,439
an app in kiosk mode so there is no

27
00:01:19,439 --> 00:01:22,720
apparent way to to escape that app

28
00:01:22,720 --> 00:01:25,280
and you can use it to control assets

29
00:01:25,280 --> 00:01:28,080
inside of the the apartment such as

30
00:01:28,080 --> 00:01:31,040
motorized blinds control the heating

31
00:01:31,040 --> 00:01:33,680
turning on and off the the lights

32
00:01:33,680 --> 00:01:35,600
and when someone rings at the doorbell

33
00:01:35,600 --> 00:01:38,000
you can also open the building's main

34
00:01:38,000 --> 00:01:41,400
entrance door

35
00:01:42,079 --> 00:01:44,399
and more and more buildings

36
00:01:44,399 --> 00:01:46,399
come pre-installed with such smart

37
00:01:46,399 --> 00:01:48,720
devices and they have very deep

38
00:01:48,720 --> 00:01:50,799
integration into the the house or

39
00:01:50,799 --> 00:01:52,159
apartment

40
00:01:52,159 --> 00:01:53,040
and

41
00:01:53,040 --> 00:01:55,439
tenants who rent the the apartment

42
00:01:55,439 --> 00:01:56,399
become

43
00:01:56,399 --> 00:02:00,320
dependent on on these devices because uh

44
00:02:00,320 --> 00:02:02,960
they really have to use it to do

45
00:02:02,960 --> 00:02:06,000
day-to-day tasks and one example of that

46
00:02:06,000 --> 00:02:09,840
is for example if you have a balcony and

47
00:02:09,840 --> 00:02:10,878
you have

48
00:02:10,878 --> 00:02:13,280
blinds that are on the outside of the

49
00:02:13,280 --> 00:02:16,239
the windows and if the blinds are down

50
00:02:16,239 --> 00:02:18,640
you cannot get out on the balcony and

51
00:02:18,640 --> 00:02:21,520
the only way to get on the balcony is to

52
00:02:21,520 --> 00:02:24,239
turn the blinds up and you have to use

53
00:02:24,239 --> 00:02:26,400
that tablet to to turn the blinds up

54
00:02:26,400 --> 00:02:29,120
there's no other way no manual knob or

55
00:02:29,120 --> 00:02:30,239
anything

56
00:02:30,239 --> 00:02:32,239
so this really creates a dependence on

57
00:02:32,239 --> 00:02:35,519
the the smart device

58
00:02:35,519 --> 00:02:38,160
so this tablet can be used directly but

59
00:02:38,160 --> 00:02:40,959
there's also a feature that lets you

60
00:02:40,959 --> 00:02:44,000
pair a smartphone to the tablet uh it

61
00:02:44,000 --> 00:02:46,319
can be an android or ios smartphone

62
00:02:46,319 --> 00:02:48,319
there's an app for that and when you

63
00:02:48,319 --> 00:02:50,560
want to pair it you click a button on

64
00:02:50,560 --> 00:02:52,959
the tablet it's going to generate a four

65
00:02:52,959 --> 00:02:55,680
digit code and then you have 60 seconds

66
00:02:55,680 --> 00:02:58,400
to enter that very same four digit code

67
00:02:58,400 --> 00:03:01,599
on the smartphone app and if it's the

68
00:03:01,599 --> 00:03:03,840
right code then it gets paired with the

69
00:03:03,840 --> 00:03:05,599
tablet

70
00:03:05,599 --> 00:03:08,879
and once it's paired you can use it

71
00:03:08,879 --> 00:03:10,640
to connect things inside of the

72
00:03:10,640 --> 00:03:14,720
apartment from anywhere on the internet

73
00:03:14,720 --> 00:03:17,519
so at that point i was really skeptical

74
00:03:17,519 --> 00:03:19,920
and started to really wonder what the

75
00:03:19,920 --> 00:03:22,959
security of the system was like

76
00:03:22,959 --> 00:03:25,519
so this brings us to the first chapter

77
00:03:25,519 --> 00:03:28,879
network traffic analysis

78
00:03:29,040 --> 00:03:30,799
so i had a look at the android

79
00:03:30,799 --> 00:03:33,760
smartphone app that's called esmart live

80
00:03:33,760 --> 00:03:36,480
and i quickly saw that it mostly

81
00:03:36,480 --> 00:03:38,480
produces encrypted traffic so there's

82
00:03:38,480 --> 00:03:40,959
not much to be seen in the cleartext

83
00:03:40,959 --> 00:03:42,159
traffic

84
00:03:42,159 --> 00:03:43,519
so

85
00:03:43,519 --> 00:03:44,959
i was like okay we can do a

86
00:03:44,959 --> 00:03:46,560
man-in-the-middle attack to see what's

87
00:03:46,560 --> 00:03:48,400
going on and see the clear text traffic

88
00:03:48,400 --> 00:03:51,200
here if if there's no special protection

89
00:03:51,200 --> 00:03:54,080
so i used a pixel 4 smart smartphone

90
00:03:54,080 --> 00:03:55,760
that's what i had it was running android

91
00:03:55,760 --> 00:03:58,720
11 and i rooted it with magisk just

92
00:03:58,720 --> 00:04:00,480
follow the tutorials

93
00:04:00,480 --> 00:04:02,400
and

94
00:04:02,400 --> 00:04:04,239
since android 7

95
00:04:04,239 --> 00:04:06,400
the apps on android only trust

96
00:04:06,400 --> 00:04:08,560
systemwide certificates and you cannot

97
00:04:08,560 --> 00:04:11,120
install them directly you have to you to

98
00:04:11,120 --> 00:04:13,360
install user search first

99
00:04:13,360 --> 00:04:15,599
so what i did is i used an extension

100
00:04:15,599 --> 00:04:17,199
that you can install directly from the

101
00:04:17,199 --> 00:04:19,680
magisk app called move certificates

102
00:04:19,680 --> 00:04:22,400
and that can be used to move a user cert

103
00:04:22,400 --> 00:04:24,320
to a system-wide search so that then

104
00:04:24,320 --> 00:04:27,440
your cert is trusted by the the app

105
00:04:27,440 --> 00:04:29,360
so that's what i did

106
00:04:29,360 --> 00:04:31,040
and

107
00:04:31,040 --> 00:04:33,280
just analyzing the traffic so we see

108
00:04:33,280 --> 00:04:36,000
that there's very little https traffic

109
00:04:36,000 --> 00:04:38,560
but the meat of the traffic is using

110
00:04:38,560 --> 00:04:41,440
xmpp which is a chat protocol

111
00:04:41,440 --> 00:04:44,000
so to intercept the http traffic i used

112
00:04:44,000 --> 00:04:46,000
a tool called medium proxy but we could

113
00:04:46,000 --> 00:04:48,240
have used burp suite or whatever

114
00:04:48,240 --> 00:04:50,479
proxy you'd like to use

115
00:04:50,479 --> 00:04:53,280
and for the xmpp traffic at first it

116
00:04:53,280 --> 00:04:55,680
looked unencrypted but quickly during

117
00:04:55,680 --> 00:04:57,680
the connections the traffic gets

118
00:04:57,680 --> 00:04:59,759
encrypted because they send a start tls

119
00:04:59,759 --> 00:05:01,280
message and then the rest of the traffic

120
00:05:01,280 --> 00:05:04,160
is encrypted so we need to also

121
00:05:04,160 --> 00:05:05,840
intercept that traffic and do a man in

122
00:05:05,840 --> 00:05:09,680
the middle here and most https proxies

123
00:05:09,680 --> 00:05:12,800
just do https they don't do xmpp so here

124
00:05:12,800 --> 00:05:14,720
we needed another tool

125
00:05:14,720 --> 00:05:15,840
and

126
00:05:15,840 --> 00:05:17,919
one that worked for me is called xmpp

127
00:05:17,919 --> 00:05:20,400
midterm and this is what i used for the

128
00:05:20,400 --> 00:05:23,520
man in the middle for xmpp

129
00:05:23,520 --> 00:05:25,840
so here we have an example screenshot in

130
00:05:25,840 --> 00:05:28,720
uh in wireshark where we see um

131
00:05:28,720 --> 00:05:31,280
an xmpp message in the clear so we could

132
00:05:31,280 --> 00:05:33,840
decrypt the traffic and here it's just

133
00:05:33,840 --> 00:05:36,639
um the tablet sending us an invitation

134
00:05:36,639 --> 00:05:39,600
to a private room on the xmpp server it

135
00:05:39,600 --> 00:05:40,639
will see

136
00:05:40,639 --> 00:05:43,360
why that is used next

137
00:05:43,360 --> 00:05:46,800
and to put that in place um

138
00:05:46,800 --> 00:05:49,199
i just set up a software wi-fi access

139
00:05:49,199 --> 00:05:52,639
point on my laptop that gives us a new

140
00:05:52,639 --> 00:05:55,039
network interface let's say p0 and then

141
00:05:55,039 --> 00:05:57,039
use the rooted smartphone to connect to

142
00:05:57,039 --> 00:06:00,080
that software ap so that i can intercept

143
00:06:00,080 --> 00:06:02,560
and collect and capture the traffic on

144
00:06:02,560 --> 00:06:03,759
the laptop

145
00:06:03,759 --> 00:06:06,479
and for the https proxy so i just used

146
00:06:06,479 --> 00:06:08,720
meetum proxy like i said and just

147
00:06:08,720 --> 00:06:12,319
instructed it to save the tls handshakes

148
00:06:12,319 --> 00:06:14,960
to an ssl keylog file and then we can

149
00:06:14,960 --> 00:06:16,800
use that file

150
00:06:16,800 --> 00:06:18,639
inside wireshark just go to the

151
00:06:18,639 --> 00:06:21,280
preferences browse choose that file and

152
00:06:21,280 --> 00:06:22,880
it's going to decrypt the traffic for

153
00:06:22,880 --> 00:06:24,160
you

154
00:06:24,160 --> 00:06:27,039
and for the xmpp proxy it's very similar

155
00:06:27,039 --> 00:06:29,199
it's just that apparently the app was

156
00:06:29,199 --> 00:06:31,360
checking for the domain name that was in

157
00:06:31,360 --> 00:06:35,039
the certificate so i had to generate one

158
00:06:35,039 --> 00:06:37,639
that had the domain name

159
00:06:37,639 --> 00:06:40,479
xmpp.mysmart.net so that works

160
00:06:40,479 --> 00:06:43,199
and then same thing we just run the tool

161
00:06:43,199 --> 00:06:46,240
say that we want to save the tlsn checks

162
00:06:46,240 --> 00:06:48,400
to an ssl lock file and do the same

163
00:06:48,400 --> 00:06:50,319
thing with wireshark

164
00:06:50,319 --> 00:06:52,240
and finally last thing that was needed

165
00:06:52,240 --> 00:06:55,360
is we needed to do some redirecting to

166
00:06:55,360 --> 00:06:57,759
some ports and some addresses with ip

167
00:06:57,759 --> 00:07:00,400
tables so that the the traffic goes in

168
00:07:00,400 --> 00:07:02,880
the right direction

169
00:07:02,880 --> 00:07:05,840
so in the end we see that the

170
00:07:05,840 --> 00:07:08,080
we could actually see the

171
00:07:08,080 --> 00:07:11,039
the traffic in the clear so the app was

172
00:07:11,039 --> 00:07:13,520
not doing any certificate pinning

173
00:07:13,520 --> 00:07:17,360
and the inside the xmpp messages json

174
00:07:17,360 --> 00:07:19,680
payloads were sent and here we have an

175
00:07:19,680 --> 00:07:22,000
example of one of these payloads so for

176
00:07:22,000 --> 00:07:24,160
example here when i was on the app i

177
00:07:24,160 --> 00:07:26,400
clicked the button to turn on a light

178
00:07:26,400 --> 00:07:28,560
and it just sends like a payload where

179
00:07:28,560 --> 00:07:32,080
the body says turn on asset number 13

180
00:07:32,080 --> 00:07:35,680
and 13 was a light

181
00:07:36,479 --> 00:07:38,479
so

182
00:07:38,479 --> 00:07:40,720
i tried also to see

183
00:07:40,720 --> 00:07:42,800
to understand what the app was really

184
00:07:42,800 --> 00:07:45,360
doing just seeing if we could decompile

185
00:07:45,360 --> 00:07:47,599
the the source code of the app and see

186
00:07:47,599 --> 00:07:49,199
if it's readable or not but it was

187
00:07:49,199 --> 00:07:52,080
obfuscated so we could have tried to

188
00:07:52,080 --> 00:07:54,000
reverse engineer it but that may have

189
00:07:54,000 --> 00:07:56,960
been a lot of work and as one famous

190
00:07:56,960 --> 00:07:59,039
security researcher who did the keynote

191
00:07:59,039 --> 00:08:01,680
yesterday says if it's smart it's

192
00:08:01,680 --> 00:08:03,919
vulnerable so there was probably a

193
00:08:03,919 --> 00:08:06,240
quicker way around this so i decided to

194
00:08:06,240 --> 00:08:07,680
move on

195
00:08:07,680 --> 00:08:10,479
and this brings us to chapter 2

196
00:08:10,479 --> 00:08:13,120
analysis of the tablet

197
00:08:13,120 --> 00:08:15,599
so the goal was to see how the tablet

198
00:08:15,599 --> 00:08:16,639
works

199
00:08:16,639 --> 00:08:17,360
and

200
00:08:17,360 --> 00:08:19,759
first is there a way we can connect to

201
00:08:19,759 --> 00:08:22,240
the tablet to analyze it

202
00:08:22,240 --> 00:08:23,840
so it turns out

203
00:08:23,840 --> 00:08:26,879
the front panel

204
00:08:26,879 --> 00:08:29,199
plate of the tablet can be removed it's

205
00:08:29,199 --> 00:08:30,319
just

206
00:08:30,319 --> 00:08:32,000
sticking with magnets

207
00:08:32,000 --> 00:08:34,479
and it reveals there is a micro usb

208
00:08:34,479 --> 00:08:36,559
cable there

209
00:08:36,559 --> 00:08:39,120
so if you have the right

210
00:08:39,120 --> 00:08:41,440
right angled micro usb cable that fits

211
00:08:41,440 --> 00:08:43,200
in the plastic you can just connect it

212
00:08:43,200 --> 00:08:44,720
to a laptop and

213
00:08:44,720 --> 00:08:47,519
see what happens maybe we have usb

214
00:08:47,519 --> 00:08:51,360
debugging enabled or something like this

215
00:08:51,360 --> 00:08:54,000
and so just for the record behind the

216
00:08:54,000 --> 00:08:57,200
tablet there was a hole in the wall and

217
00:08:57,200 --> 00:08:59,440
inside that wall there was a chip

218
00:08:59,440 --> 00:09:00,720
and

219
00:09:00,720 --> 00:09:02,800
there's a an ethernet cable that goes

220
00:09:02,800 --> 00:09:04,399
inside that ship and this is where the

221
00:09:04,399 --> 00:09:05,920
tablet gets its

222
00:09:05,920 --> 00:09:09,240
network connection

223
00:09:09,519 --> 00:09:11,920
so using the cable

224
00:09:11,920 --> 00:09:14,480
we immediately see that usb debugging

225
00:09:14,480 --> 00:09:17,200
was enabled on the tablet by default so

226
00:09:17,200 --> 00:09:20,080
we could use adb to connect and

227
00:09:20,080 --> 00:09:21,600
see what we can do

228
00:09:21,600 --> 00:09:24,160
and just doing adb shell

229
00:09:24,160 --> 00:09:26,480
we see that we are roots on the tablet

230
00:09:26,480 --> 00:09:29,360
so these guys are delivering tablets

231
00:09:29,360 --> 00:09:31,680
that are rooted and have usb debugging

232
00:09:31,680 --> 00:09:33,440
enabled by default

233
00:09:33,440 --> 00:09:37,440
and the tablet runs android 4.4 which is

234
00:09:37,440 --> 00:09:40,800
pretty old i would say

235
00:09:41,519 --> 00:09:44,080
so one of the first things i

236
00:09:44,080 --> 00:09:46,880
tried to do was to enumerate what apps

237
00:09:46,880 --> 00:09:49,279
were installed on that tablet so just

238
00:09:49,279 --> 00:09:52,080
did adb shell pm list packages and we

239
00:09:52,080 --> 00:09:54,720
see that here i stripped the output but

240
00:09:54,720 --> 00:09:57,680
there was four apps that had my esmart

241
00:09:57,680 --> 00:09:59,839
in the name so it looked like these were

242
00:09:59,839 --> 00:10:02,480
apps made by the the vendor

243
00:10:02,480 --> 00:10:05,279
and there was one app called quick sshd

244
00:10:05,279 --> 00:10:08,240
that looked like an ssh server that was

245
00:10:08,240 --> 00:10:10,399
installed on the tablet

246
00:10:10,399 --> 00:10:12,880
so then using another command we could

247
00:10:12,880 --> 00:10:16,030
get the the path but the apk file was

248
00:10:16,030 --> 00:10:17,279
[Music]

249
00:10:17,279 --> 00:10:19,519
located on the tablet and then pull that

250
00:10:19,519 --> 00:10:23,120
apk file and get it on my laptop

251
00:10:23,120 --> 00:10:24,640
so that's what i did

252
00:10:24,640 --> 00:10:27,680
and so the targets uh that i identified

253
00:10:27,680 --> 00:10:30,079
were these four esmart apps so there was

254
00:10:30,079 --> 00:10:33,680
a tablet app manager app ota app and a

255
00:10:33,680 --> 00:10:37,040
launcher app and this ssh server the

256
00:10:37,040 --> 00:10:38,560
quick sshd

257
00:10:38,560 --> 00:10:42,160
so what i did here i just used edx to

258
00:10:42,160 --> 00:10:44,800
unpack and decompile the apks

259
00:10:44,800 --> 00:10:46,399
and sometimes

260
00:10:46,399 --> 00:10:48,800
it could not decompile

261
00:10:48,800 --> 00:10:50,720
all of the code so some functions

262
00:10:50,720 --> 00:10:52,640
sometimes could not be decompiled but it

263
00:10:52,640 --> 00:10:55,040
was good enough for me

264
00:10:55,040 --> 00:10:57,200
one other way would have been to first

265
00:10:57,200 --> 00:10:59,680
convert the apk file to a jar file for

266
00:10:59,680 --> 00:11:00,959
example with

267
00:11:00,959 --> 00:11:03,600
something like ngrfi and then use more

268
00:11:03,600 --> 00:11:05,920
classical java decompilers such as the

269
00:11:05,920 --> 00:11:07,040
one you have

270
00:11:07,040 --> 00:11:09,360
built into intellij that's called front

271
00:11:09,360 --> 00:11:12,000
flower but i tried that and

272
00:11:12,000 --> 00:11:14,480
it ran for like three hours and it was

273
00:11:14,480 --> 00:11:18,560
still stuck so jdx worked better for me

274
00:11:18,560 --> 00:11:21,440
so after decompiling that i had a look

275
00:11:21,440 --> 00:11:22,240
and

276
00:11:22,240 --> 00:11:25,120
the four esmart apps were actually not

277
00:11:25,120 --> 00:11:27,200
obfuscated so it was really easy to see

278
00:11:27,200 --> 00:11:29,519
what happened there

279
00:11:29,519 --> 00:11:32,640
so here we have a screenshot of

280
00:11:32,640 --> 00:11:36,480
some part of the codes that was

281
00:11:36,990 --> 00:11:38,160
[Music]

282
00:11:38,160 --> 00:11:40,640
testing

283
00:11:41,120 --> 00:11:43,920
that was inside of the tablet app and

284
00:11:43,920 --> 00:11:44,880
the

285
00:11:44,880 --> 00:11:48,079
here it's part of the code that is used

286
00:11:48,079 --> 00:11:48,800
to

287
00:11:48,800 --> 00:11:52,240
unlock the door when someone rings the

288
00:11:52,240 --> 00:11:56,320
the main building entrance door

289
00:11:56,320 --> 00:11:58,959
in the code we also also see that there

290
00:11:58,959 --> 00:12:01,839
are four different versions of the

291
00:12:01,839 --> 00:12:03,920
tablet hardware so the one i had

292
00:12:03,920 --> 00:12:07,200
installed in my apartment was the rk3188

293
00:12:07,200 --> 00:12:09,200
but there's mentions of

294
00:12:09,200 --> 00:12:10,399
three others

295
00:12:10,399 --> 00:12:14,800
c91 c93 and finch and apparently some

296
00:12:14,800 --> 00:12:16,639
versions of the tablet are running a

297
00:12:16,639 --> 00:12:19,040
different software or do different stuff

298
00:12:19,040 --> 00:12:20,959
maybe they have a different ui

299
00:12:20,959 --> 00:12:22,240
it looks like there are at least two

300
00:12:22,240 --> 00:12:25,839
versions of it inside

301
00:12:26,639 --> 00:12:29,839
what i also did next is i copied

302
00:12:29,839 --> 00:12:32,560
files from the tablet that were in some

303
00:12:32,560 --> 00:12:34,560
specific directories that could be

304
00:12:34,560 --> 00:12:37,200
interesting like data data and the sd

305
00:12:37,200 --> 00:12:40,639
card folders

306
00:12:40,959 --> 00:12:43,519
in data data there was a specific

307
00:12:43,519 --> 00:12:46,959
directory for each app and in the tablet

308
00:12:46,959 --> 00:12:49,360
app folder there was this file called

309
00:12:49,360 --> 00:12:52,240
door ip.txt

310
00:12:52,240 --> 00:12:55,600
that contained the ip address of the the

311
00:12:55,600 --> 00:12:58,279
main building entrance door so

312
00:12:58,279 --> 00:13:01,680
10.500 that was for my building

313
00:13:01,680 --> 00:13:04,320
and in the code like we've seen in the

314
00:13:04,320 --> 00:13:07,200
in the screenshot before here

315
00:13:07,200 --> 00:13:09,519
what it did actually is

316
00:13:09,519 --> 00:13:13,120
it just does an http get request to some

317
00:13:13,120 --> 00:13:15,200
url on the door

318
00:13:15,200 --> 00:13:16,399
ip

319
00:13:16,399 --> 00:13:18,880
and that just opens the door

320
00:13:18,880 --> 00:13:21,440
so there's no authentication

321
00:13:21,440 --> 00:13:22,959
you just have to be connected to the

322
00:13:22,959 --> 00:13:24,800
internal network and that's it you can

323
00:13:24,800 --> 00:13:28,560
replay the the traffic and open the door

324
00:13:28,560 --> 00:13:29,760
so

325
00:13:29,760 --> 00:13:32,000
that's what i did and

326
00:13:32,000 --> 00:13:35,200
here's a quick video so just for the the

327
00:13:35,200 --> 00:13:39,279
video um i had my laptop plugged to the

328
00:13:39,279 --> 00:13:41,760
internal network inside the apartment

329
00:13:41,760 --> 00:13:44,320
had an ssh server running on the laptop

330
00:13:44,320 --> 00:13:46,320
and i connected to that using my

331
00:13:46,320 --> 00:13:48,560
smartphone from the outside of the the

332
00:13:48,560 --> 00:13:50,480
building to open it

333
00:13:50,480 --> 00:13:52,560
and the smartphone was just

334
00:13:52,560 --> 00:13:57,479
doing the http request to open the door

335
00:14:04,490 --> 00:14:10,830
[Music]

336
00:14:12,399 --> 00:14:15,310
and that's it just open the building

337
00:14:15,310 --> 00:14:22,550
[Applause]

338
00:14:25,120 --> 00:14:27,839
so in my neighborhood

339
00:14:27,839 --> 00:14:30,480
there were actually six buildings and in

340
00:14:30,480 --> 00:14:33,279
each building there was eight apartments

341
00:14:33,279 --> 00:14:35,120
and in each apartment there is one

342
00:14:35,120 --> 00:14:36,320
tablet

343
00:14:36,320 --> 00:14:40,000
and just one building door per building

344
00:14:40,000 --> 00:14:42,160
and then you have the apartment doors

345
00:14:42,160 --> 00:14:45,600
but these are not connected you you have

346
00:14:45,600 --> 00:14:48,000
to use a physical key to open those

347
00:14:48,000 --> 00:14:49,920
so all of those tablets and the door are

348
00:14:49,920 --> 00:14:51,600
connected to a switch and then all the

349
00:14:51,600 --> 00:14:53,760
switches are interconnected so basically

350
00:14:53,760 --> 00:14:57,880
the whole neighborhood is connected

351
00:14:58,800 --> 00:15:00,000
so

352
00:15:00,000 --> 00:15:02,720
they shared the same network and what i

353
00:15:02,720 --> 00:15:04,000
did is

354
00:15:04,000 --> 00:15:06,639
i was connected in that network and

355
00:15:06,639 --> 00:15:08,800
looking at the ip address and i was like

356
00:15:08,800 --> 00:15:12,720
okay tenderlode and 5.7 i mean building

357
00:15:12,720 --> 00:15:15,360
e apartment 7 it looks like there's a

358
00:15:15,360 --> 00:15:18,399
logic in the naming of the ip addresses

359
00:15:18,399 --> 00:15:20,480
so you could just like target

360
00:15:20,480 --> 00:15:23,040
a specific tablet or a specific door you

361
00:15:23,040 --> 00:15:25,120
could you can just guess which one it is

362
00:15:25,120 --> 00:15:26,880
but just by the

363
00:15:26,880 --> 00:15:29,120
the number and the ip address so for

364
00:15:29,120 --> 00:15:31,519
example if you want to target the tablet

365
00:15:31,519 --> 00:15:35,880
inside building b apartment five it's

366
00:15:35,880 --> 00:15:37,440
10.00.2.5

367
00:15:37,440 --> 00:15:39,360
and if you want to target the door of

368
00:15:39,360 --> 00:15:41,959
building b it's

369
00:15:41,959 --> 00:15:46,240
10.0.2.100. the doors are always.100.

370
00:15:46,240 --> 00:15:49,199
so i tried to ping the tablets in my

371
00:15:49,199 --> 00:15:51,519
building first that worked and then i

372
00:15:51,519 --> 00:15:53,440
tried to ping stuff

373
00:15:53,440 --> 00:15:55,440
in the other buildings and

374
00:15:55,440 --> 00:15:58,639
it also worked so

375
00:15:58,639 --> 00:16:01,279
so yeah it looks like

376
00:16:01,279 --> 00:16:03,040
we could open the doors in the whole

377
00:16:03,040 --> 00:16:04,160
neighborhood

378
00:16:04,160 --> 00:16:07,839
i didn't do it for legal reasons but

379
00:16:07,839 --> 00:16:09,839
when i reported it to the vendor they

380
00:16:09,839 --> 00:16:12,399
didn't deny so it looks like it would

381
00:16:12,399 --> 00:16:14,399
work

382
00:16:14,399 --> 00:16:17,600
and so just as a reminder

383
00:16:17,600 --> 00:16:20,560
you cannot open the apartment doors

384
00:16:20,560 --> 00:16:23,199
right it's the main building door you

385
00:16:23,199 --> 00:16:25,040
still need a physical key to get inside

386
00:16:25,040 --> 00:16:27,759
the apartment

387
00:16:28,480 --> 00:16:31,920
so this brings us to the

388
00:16:31,920 --> 00:16:35,490
findings chapter

389
00:16:35,490 --> 00:16:38,690
[Music]

390
00:16:39,040 --> 00:16:42,720
so after analyzing the non-obfuscated

391
00:16:42,720 --> 00:16:45,120
decompiled source code

392
00:16:45,120 --> 00:16:47,680
this is basically an overview of how the

393
00:16:47,680 --> 00:16:50,639
whole system worked so we have an

394
00:16:50,639 --> 00:16:52,240
android smartphone

395
00:16:52,240 --> 00:16:55,839
that runs the esmart live app

396
00:16:55,839 --> 00:16:57,519
and

397
00:16:57,519 --> 00:16:59,759
that smartphone when

398
00:16:59,759 --> 00:17:02,560
you start the app it's going to connect

399
00:17:02,560 --> 00:17:04,559
to an xmpp server

400
00:17:04,559 --> 00:17:08,959
and join a public room on that server

401
00:17:08,959 --> 00:17:11,919
and the tablet runs multiple apps the

402
00:17:11,919 --> 00:17:14,720
tablet has the tablet app which also

403
00:17:14,720 --> 00:17:18,400
connects to this xmpp public room on the

404
00:17:18,400 --> 00:17:20,640
xmpp server

405
00:17:20,640 --> 00:17:21,520
and

406
00:17:21,520 --> 00:17:22,799
when

407
00:17:22,799 --> 00:17:25,679
a smartphone tries to link to pair with

408
00:17:25,679 --> 00:17:27,039
a tablet

409
00:17:27,039 --> 00:17:31,280
and it puts the right four digit code

410
00:17:31,280 --> 00:17:33,919
the four digit code is actually sent on

411
00:17:33,919 --> 00:17:36,880
the public room and all the tablets are

412
00:17:36,880 --> 00:17:39,200
kind of listening there and trying to

413
00:17:39,200 --> 00:17:42,080
see if someone sends a message with the

414
00:17:42,080 --> 00:17:44,400
expected four digit code and if that

415
00:17:44,400 --> 00:17:47,280
happens the tablet is going to create a

416
00:17:47,280 --> 00:17:48,799
private room

417
00:17:48,799 --> 00:17:51,840
join it and then invite the the

418
00:17:51,840 --> 00:17:53,919
smartphone app inside of that private

419
00:17:53,919 --> 00:17:54,960
room

420
00:17:54,960 --> 00:17:57,919
and once the tablet and the smartphone

421
00:17:57,919 --> 00:18:01,120
are inside of the private room

422
00:18:01,120 --> 00:18:04,160
the tablet is going to interpret all the

423
00:18:04,160 --> 00:18:07,760
messages that are sent by the smartphone

424
00:18:07,760 --> 00:18:09,919
and that's how basically the smartphone

425
00:18:09,919 --> 00:18:12,400
tells to turn on lights

426
00:18:12,400 --> 00:18:15,760
control stuff inside the apartment

427
00:18:15,760 --> 00:18:18,160
another thing uh there is something

428
00:18:18,160 --> 00:18:20,160
called a web platform

429
00:18:20,160 --> 00:18:21,200
um

430
00:18:21,200 --> 00:18:24,240
that is actually used by the manager app

431
00:18:24,240 --> 00:18:26,960
and this app is regularly checking

432
00:18:26,960 --> 00:18:29,679
whether there is any commands to be

433
00:18:29,679 --> 00:18:32,880
executed from this web platform and one

434
00:18:32,880 --> 00:18:34,720
of those commands

435
00:18:34,720 --> 00:18:37,840
is actually instructing the tablet to do

436
00:18:37,840 --> 00:18:41,200
a remote port for wording on an ssh

437
00:18:41,200 --> 00:18:44,000
server that they call the tunnel server

438
00:18:44,000 --> 00:18:48,000
that is hosted by the esmart vendor

439
00:18:48,000 --> 00:18:50,480
and this is actually used

440
00:18:50,480 --> 00:18:53,440
by a technician that works for esmart

441
00:18:53,440 --> 00:18:54,720
when they want to do remote

442
00:18:54,720 --> 00:18:56,799
troubleshooting so it just basically

443
00:18:56,799 --> 00:18:59,679
opens a port on the tablet so that the

444
00:18:59,679 --> 00:19:02,320
guys can then connect back to the tablet

445
00:19:02,320 --> 00:19:05,440
from the tunnel server and

446
00:19:05,440 --> 00:19:08,080
diagnose and troubleshoot problems on

447
00:19:08,080 --> 00:19:10,400
the tablet remotely

448
00:19:10,400 --> 00:19:13,520
and they can do this because there is an

449
00:19:13,520 --> 00:19:16,080
ssh server that is always running on the

450
00:19:16,080 --> 00:19:18,559
tablet

451
00:19:20,640 --> 00:19:22,080
so as i said

452
00:19:22,080 --> 00:19:23,919
when we start the smartphone app it

453
00:19:23,919 --> 00:19:26,880
connects to the xmpp server and both the

454
00:19:26,880 --> 00:19:29,679
tablet and the

455
00:19:29,679 --> 00:19:31,840
the smartphone app have something called

456
00:19:31,840 --> 00:19:34,799
a jabber id or jid that is something

457
00:19:34,799 --> 00:19:37,919
used in the xmpp protocol and this value

458
00:19:37,919 --> 00:19:39,760
is derived from

459
00:19:39,760 --> 00:19:41,440
some random value

460
00:19:41,440 --> 00:19:44,720
and the mac address of the device

461
00:19:44,720 --> 00:19:47,520
and when authenticating on the xmpp

462
00:19:47,520 --> 00:19:50,799
server the the way it works is it uses

463
00:19:50,799 --> 00:19:53,760
password-based authentication with sasl

464
00:19:53,760 --> 00:19:56,799
and the digest mg md5 mechanism the

465
00:19:56,799 --> 00:19:59,840
password is just this jid

466
00:19:59,840 --> 00:20:02,400
and sorry the username is just this jid

467
00:20:02,400 --> 00:20:05,440
and the password is a hash

468
00:20:05,440 --> 00:20:09,200
of this jid concatenated to some random

469
00:20:09,200 --> 00:20:10,559
value

470
00:20:10,559 --> 00:20:12,880
and registration

471
00:20:12,880 --> 00:20:15,679
appears to be open on this xmpp server

472
00:20:15,679 --> 00:20:17,520
and this is actually what the tablet

473
00:20:17,520 --> 00:20:20,000
does when it first runs so when they

474
00:20:20,000 --> 00:20:22,320
deploy a new tablet it's going to

475
00:20:22,320 --> 00:20:23,760
register

476
00:20:23,760 --> 00:20:26,320
basically generate credentials generate

477
00:20:26,320 --> 00:20:29,360
a jid a password using that the the

478
00:20:29,360 --> 00:20:31,280
technique described above

479
00:20:31,280 --> 00:20:32,159
and

480
00:20:32,159 --> 00:20:34,720
register on the xmpp server and then

481
00:20:34,720 --> 00:20:38,880
connect using that the next times

482
00:20:38,880 --> 00:20:42,080
so they both join this public room

483
00:20:42,080 --> 00:20:44,159
and when there is an invite

484
00:20:44,159 --> 00:20:46,799
the tablet creates a private room

485
00:20:46,799 --> 00:20:50,400
that is named as its jid

486
00:20:50,400 --> 00:20:51,280
and then

487
00:20:51,280 --> 00:20:52,880
concatenated with at

488
00:20:52,880 --> 00:20:55,840
conference.mysmart.net

489
00:20:55,840 --> 00:20:57,520
and when pairing is

490
00:20:57,520 --> 00:21:00,000
successful it invites the smartphone

491
00:21:00,000 --> 00:21:02,320
inside it and then as i said it's going

492
00:21:02,320 --> 00:21:05,280
to interpret the messages

493
00:21:05,280 --> 00:21:07,600
so i was wondering is there a way we

494
00:21:07,600 --> 00:21:08,400
could

495
00:21:08,400 --> 00:21:10,799
remotely exploit this

496
00:21:10,799 --> 00:21:13,280
because the the room name is just the

497
00:21:13,280 --> 00:21:17,280
gid plus some hardcoded string so maybe

498
00:21:17,280 --> 00:21:19,760
there is a way we can guess the mac

499
00:21:19,760 --> 00:21:22,400
address or maybe just connect to the

500
00:21:22,400 --> 00:21:24,400
xmpp server and

501
00:21:24,400 --> 00:21:26,320
since it's open registration you could

502
00:21:26,320 --> 00:21:28,960
just create an account connect there and

503
00:21:28,960 --> 00:21:31,200
enumerate the devices that are inside of

504
00:21:31,200 --> 00:21:32,880
the public room

505
00:21:32,880 --> 00:21:35,039
so i reported this to the vendor and

506
00:21:35,039 --> 00:21:37,039
they said that someone else had already

507
00:21:37,039 --> 00:21:38,320
reported it

508
00:21:38,320 --> 00:21:41,679
and that they had patched it early 2021.

509
00:21:41,679 --> 00:21:43,679
so this was an actual issue in the past

510
00:21:43,679 --> 00:21:47,600
but now the rooms are invite only

511
00:21:49,600 --> 00:21:52,640
so this is just a screenshot i mentioned

512
00:21:52,640 --> 00:21:54,720
the web platform before when you go to

513
00:21:54,720 --> 00:21:55,520
that

514
00:21:55,520 --> 00:21:59,280
url you will just see a login form and

515
00:21:59,280 --> 00:22:02,000
this apparently is

516
00:22:02,000 --> 00:22:05,120
smart for sending comments but also for

517
00:22:05,120 --> 00:22:07,520
the agency that owns the building for

518
00:22:07,520 --> 00:22:10,320
example to send messages to tenants in

519
00:22:10,320 --> 00:22:13,639
all the apartments

520
00:22:13,840 --> 00:22:16,400
so i mentioned this tunnel server

521
00:22:16,400 --> 00:22:18,559
and

522
00:22:18,559 --> 00:22:20,480
it's actually so

523
00:22:20,480 --> 00:22:22,880
just an ssh server and the

524
00:22:22,880 --> 00:22:24,880
the technician uses to remotely

525
00:22:24,880 --> 00:22:26,400
troubleshoot

526
00:22:26,400 --> 00:22:27,520
and

527
00:22:27,520 --> 00:22:29,919
the authentication that is used is just

528
00:22:29,919 --> 00:22:31,760
password authentication

529
00:22:31,760 --> 00:22:35,120
and it's actually using an md5 hash of

530
00:22:35,120 --> 00:22:36,880
the password that is stored in a text

531
00:22:36,880 --> 00:22:39,600
file inside of the the tablet

532
00:22:39,600 --> 00:22:41,919
i tried to brute force it but it looks

533
00:22:41,919 --> 00:22:43,679
like it's a very long password so

534
00:22:43,679 --> 00:22:46,000
there's no easy way to to brute force it

535
00:22:46,000 --> 00:22:47,840
even if it's md5

536
00:22:47,840 --> 00:22:50,000
but there is another way that we could

537
00:22:50,000 --> 00:22:51,520
go around that

538
00:22:51,520 --> 00:22:54,480
um actually since the tablet runs the

539
00:22:54,480 --> 00:22:58,080
ssh server and we have access to it the

540
00:22:58,080 --> 00:23:01,200
tablet has usb debugging enabled

541
00:23:01,200 --> 00:23:03,200
we are roots on the tablet so we could

542
00:23:03,200 --> 00:23:06,480
modify the ssh server so that

543
00:23:06,480 --> 00:23:09,440
it logs all of the login attempts so you

544
00:23:09,440 --> 00:23:11,919
could just dump to a file

545
00:23:11,919 --> 00:23:13,919
when the password and the username when

546
00:23:13,919 --> 00:23:15,679
someone tries to log in

547
00:23:15,679 --> 00:23:17,760
and that someone could be the technician

548
00:23:17,760 --> 00:23:18,799
right

549
00:23:18,799 --> 00:23:21,760
so you could just pick up the phone call

550
00:23:21,760 --> 00:23:23,280
these smart guys

551
00:23:23,280 --> 00:23:25,440
and say hey i have a problem with my

552
00:23:25,440 --> 00:23:28,159
tablet can you remotely troubleshoot it

553
00:23:28,159 --> 00:23:31,200
and you just wait for them to send the

554
00:23:31,200 --> 00:23:33,919
the remote port forwarding command

555
00:23:33,919 --> 00:23:36,559
then connect back to the ssh server and

556
00:23:36,559 --> 00:23:38,720
collect the password that's in the in

557
00:23:38,720 --> 00:23:40,400
the log file

558
00:23:40,400 --> 00:23:41,200
and

559
00:23:41,200 --> 00:23:43,840
one thing that is also

560
00:23:43,840 --> 00:23:46,400
problematic here is that all of the

561
00:23:46,400 --> 00:23:48,559
tablets in the same deployment so for

562
00:23:48,559 --> 00:23:50,559
example in the neighborhood they have

563
00:23:50,559 --> 00:23:54,159
the same password so if you were to do

564
00:23:54,159 --> 00:23:56,880
that you collect the password then

565
00:23:56,880 --> 00:23:59,120
you're on the same network

566
00:23:59,120 --> 00:24:01,760
so you can connect to the other tablets

567
00:24:01,760 --> 00:24:02,880
that are

568
00:24:02,880 --> 00:24:04,400
in the whole neighborhood basically

569
00:24:04,400 --> 00:24:06,159
because they all have this ssh server

570
00:24:06,159 --> 00:24:07,120
running

571
00:24:07,120 --> 00:24:09,039
have the same password

572
00:24:09,039 --> 00:24:12,080
and these tablets they have a camera

573
00:24:12,080 --> 00:24:14,400
they have a microphone so there's like a

574
00:24:14,400 --> 00:24:16,880
real privacy issue here

575
00:24:16,880 --> 00:24:19,039
and the tablets are also rooted so if

576
00:24:19,039 --> 00:24:21,840
you get ssh access on your neighbors

577
00:24:21,840 --> 00:24:23,679
tablet then

578
00:24:23,679 --> 00:24:25,679
it's game over i mean you can run

579
00:24:25,679 --> 00:24:27,919
commands from there you can turn on off

580
00:24:27,919 --> 00:24:30,159
the lights control the your neighbor's

581
00:24:30,159 --> 00:24:33,720
apartment basically

582
00:24:34,240 --> 00:24:37,120
so what way to remediate this

583
00:24:37,120 --> 00:24:40,880
would be to not use public authentic

584
00:24:40,880 --> 00:24:42,720
not use password authentication for the

585
00:24:42,720 --> 00:24:45,279
ssh server but use public and private

586
00:24:45,279 --> 00:24:46,880
key authentication

587
00:24:46,880 --> 00:24:48,960
so this way even if we control the

588
00:24:48,960 --> 00:24:51,360
server there is no way to get the

589
00:24:51,360 --> 00:24:52,960
private key

590
00:24:52,960 --> 00:24:55,279
and another thing is that this server

591
00:24:55,279 --> 00:24:57,760
doesn't need to run at all times they

592
00:24:57,760 --> 00:25:00,559
could just shut it off and turn it on

593
00:25:00,559 --> 00:25:02,400
only when it's needed and when they need

594
00:25:02,400 --> 00:25:04,720
to troubleshoot they already have the

595
00:25:04,720 --> 00:25:07,039
the web platform to trigger the command

596
00:25:07,039 --> 00:25:10,559
so they could do it at that point

597
00:25:11,039 --> 00:25:13,440
and some other findings

598
00:25:13,440 --> 00:25:16,720
so the the tablets are all on a separate

599
00:25:16,720 --> 00:25:18,880
internet connection

600
00:25:18,880 --> 00:25:19,679
and

601
00:25:19,679 --> 00:25:22,000
the owner pays for it so

602
00:25:22,000 --> 00:25:23,600
you could enable

603
00:25:23,600 --> 00:25:26,080
a wi-fi hotspot on the tablet and get

604
00:25:26,080 --> 00:25:27,520
free internet

605
00:25:27,520 --> 00:25:30,240
since i'm not paying for it

606
00:25:30,240 --> 00:25:32,240
you could also uh

607
00:25:32,240 --> 00:25:35,919
spam the the pin codes the four-digit

608
00:25:35,919 --> 00:25:37,919
pin codes when you are trying to pair

609
00:25:37,919 --> 00:25:40,159
the smartphone with the tablet

610
00:25:40,159 --> 00:25:43,360
so there is no uh throttling when

611
00:25:43,360 --> 00:25:46,080
sending a pin so you could just try all

612
00:25:46,080 --> 00:25:48,320
possible combinations and wait for

613
00:25:48,320 --> 00:25:51,520
someone to try to pair a smartphone and

614
00:25:51,520 --> 00:25:54,080
i guess you would be connected to a

615
00:25:54,080 --> 00:25:56,400
random person's tablet for a while until

616
00:25:56,400 --> 00:25:58,080
they figure out that it's not the right

617
00:25:58,080 --> 00:26:01,200
device that's connected to their tablet

618
00:26:01,200 --> 00:26:03,279
i i guess you would also get detected

619
00:26:03,279 --> 00:26:04,799
pretty quickly but

620
00:26:04,799 --> 00:26:08,639
you could still be able to connect

621
00:26:09,520 --> 00:26:11,919
so this brings us to chapter four

622
00:26:11,919 --> 00:26:13,600
uh disclosure

623
00:26:13,600 --> 00:26:15,840
so just a quick summary of the the

624
00:26:15,840 --> 00:26:17,200
findings

625
00:26:17,200 --> 00:26:20,159
so usb debugging was enabled by default

626
00:26:20,159 --> 00:26:23,200
on the tablet the tablet is rooted

627
00:26:23,200 --> 00:26:26,320
we can open the door of other buildings

628
00:26:26,320 --> 00:26:29,200
if we are on the same network

629
00:26:29,200 --> 00:26:31,200
the tablet runs an old version of

630
00:26:31,200 --> 00:26:33,039
android that doesn't get security

631
00:26:33,039 --> 00:26:35,120
patches anymore

632
00:26:35,120 --> 00:26:37,039
the apps on the tablet are not

633
00:26:37,039 --> 00:26:39,039
obfuscated

634
00:26:39,039 --> 00:26:41,279
there is no certificate pinning on the

635
00:26:41,279 --> 00:26:43,520
android smartphone app

636
00:26:43,520 --> 00:26:46,400
the ssh server on the tablet uses

637
00:26:46,400 --> 00:26:48,559
password authentication so

638
00:26:48,559 --> 00:26:51,120
we could collect this password

639
00:26:51,120 --> 00:26:53,919
and there is no rate limiting for the

640
00:26:53,919 --> 00:26:57,120
the pin code for pairing

641
00:26:57,120 --> 00:26:58,240
so

642
00:26:58,240 --> 00:27:00,720
in december last year i reported all of

643
00:27:00,720 --> 00:27:03,919
these to the smart team via email and

644
00:27:03,919 --> 00:27:07,520
they acknowledge received the next week

645
00:27:07,520 --> 00:27:09,200
then the next day they gave me an

646
00:27:09,200 --> 00:27:11,520
official response to all of the items

647
00:27:11,520 --> 00:27:14,000
but i i thought it was not really clear

648
00:27:14,000 --> 00:27:15,200
because

649
00:27:15,200 --> 00:27:17,520
some some of the points

650
00:27:17,520 --> 00:27:20,480
maybe were not really well explained so

651
00:27:20,480 --> 00:27:22,960
i offered them to to meet them in person

652
00:27:22,960 --> 00:27:25,200
because they were not too far from where

653
00:27:25,200 --> 00:27:26,399
where i lived

654
00:27:26,399 --> 00:27:28,240
and

655
00:27:28,240 --> 00:27:30,320
we had to wait just a bit because it was

656
00:27:30,320 --> 00:27:32,960
almost the holidays and then in january

657
00:27:32,960 --> 00:27:33,760
i

658
00:27:33,760 --> 00:27:35,840
reminded them that i wanted to meet them

659
00:27:35,840 --> 00:27:39,360
to explain the impact of the findings

660
00:27:39,360 --> 00:27:41,760
and finally we settled on a meeting date

661
00:27:41,760 --> 00:27:43,760
and finally we met

662
00:27:43,760 --> 00:27:46,320
mid-february and explained all of the

663
00:27:46,320 --> 00:27:48,559
issues and they said they were going to

664
00:27:48,559 --> 00:27:52,240
work on it and prepare some fixes

665
00:27:52,240 --> 00:27:54,399
and finally in may i notified them that

666
00:27:54,399 --> 00:27:56,640
this talk was accepted and that i was

667
00:27:56,640 --> 00:27:59,440
about to publicly disclose it

668
00:27:59,440 --> 00:28:02,000
and i received a response saying that a

669
00:28:02,000 --> 00:28:04,080
fix was in progress and that it will be

670
00:28:04,080 --> 00:28:06,399
deployed this month if the the final

671
00:28:06,399 --> 00:28:08,320
tests were successful

672
00:28:08,320 --> 00:28:11,200
and then i had no news but i i checked

673
00:28:11,200 --> 00:28:12,240
in

674
00:28:12,240 --> 00:28:14,880
like two weeks ago and they had disabled

675
00:28:14,880 --> 00:28:17,279
usb debugging so it's not enabled

676
00:28:17,279 --> 00:28:20,159
anymore by default and the ssh server

677
00:28:20,159 --> 00:28:24,159
has been uninstalled from the tablet

678
00:28:26,000 --> 00:28:28,000
so in conclusion

679
00:28:28,000 --> 00:28:31,200
yeah smart devices should be built with

680
00:28:31,200 --> 00:28:35,360
security in mind from the start

681
00:28:35,600 --> 00:28:37,200
these devices have really deep

682
00:28:37,200 --> 00:28:39,279
integration into the house or the

683
00:28:39,279 --> 00:28:42,799
apartment so it can lead to privacy

684
00:28:42,799 --> 00:28:45,840
issues and really bad consequences

685
00:28:45,840 --> 00:28:47,120
even

686
00:28:47,120 --> 00:28:49,840
if if it is hacked or even if the system

687
00:28:49,840 --> 00:28:52,399
goes down like you could not even go out

688
00:28:52,399 --> 00:28:54,640
on the balcony if if it's not working

689
00:28:54,640 --> 00:28:56,799
and the blinds aren't down

690
00:28:56,799 --> 00:28:59,760
and if you want cool research just put a

691
00:28:59,760 --> 00:29:02,080
smart device in a security researcher's

692
00:29:02,080 --> 00:29:03,840
house

693
00:29:03,840 --> 00:29:08,279
so thank you do you have any questions

694
00:29:12,159 --> 00:29:13,039
so

695
00:29:13,039 --> 00:29:15,919
thanks a lot we have about two minutes

696
00:29:15,919 --> 00:29:18,320
left and if there are any questions

697
00:29:18,320 --> 00:29:20,240
please ask them bye microphone in the

698
00:29:20,240 --> 00:29:21,440
back please

699
00:29:21,440 --> 00:29:25,120
hi a cool talk by the way um did you

700
00:29:25,120 --> 00:29:27,120
were you able to figure out the protocol

701
00:29:27,120 --> 00:29:29,520
that the tablet speaks to your smart

702
00:29:29,520 --> 00:29:31,679
house so you maybe could replace it with

703
00:29:31,679 --> 00:29:33,200
something that's not

704
00:29:33,200 --> 00:29:35,600
that terrible

705
00:29:35,600 --> 00:29:38,159
that's that's a good question so i have

706
00:29:38,159 --> 00:29:40,960
not looked at what the tablet

707
00:29:40,960 --> 00:29:43,520
does when it speaks to the the actual

708
00:29:43,520 --> 00:29:46,080
assets in the apartment what i just saw

709
00:29:46,080 --> 00:29:48,159
in the code was that it was opening a

710
00:29:48,159 --> 00:29:50,640
connection a serial port and

711
00:29:50,640 --> 00:29:52,720
i guess it sends something to the module

712
00:29:52,720 --> 00:29:55,919
that was behind the tablet inside of the

713
00:29:55,919 --> 00:29:59,919
the hole but i haven't looked at it

714
00:30:01,039 --> 00:30:02,000
okay

715
00:30:02,000 --> 00:30:03,760
signal angel do we have any questions

716
00:30:03,760 --> 00:30:06,640
from the internet nose so microphone on

717
00:30:06,640 --> 00:30:08,960
the front please hi

718
00:30:08,960 --> 00:30:11,520
thank you for your talk

719
00:30:11,520 --> 00:30:12,960
you said

720
00:30:12,960 --> 00:30:16,480
the tablet had a microphone and a camera

721
00:30:16,480 --> 00:30:19,520
and are there any intended uses for

722
00:30:19,520 --> 00:30:21,600
these devices

723
00:30:21,600 --> 00:30:24,159
yeah that's a good question so inside of

724
00:30:24,159 --> 00:30:27,600
the apartment i think the camera makes

725
00:30:27,600 --> 00:30:30,399
no sense because when someone rings at

726
00:30:30,399 --> 00:30:32,399
the door from the outside

727
00:30:32,399 --> 00:30:34,320
you can see them

728
00:30:34,320 --> 00:30:36,000
from inside the apartment but they

729
00:30:36,000 --> 00:30:38,159
cannot see you so the camera should not

730
00:30:38,159 --> 00:30:40,559
be there and in my apartment i just put

731
00:30:40,559 --> 00:30:43,840
a sticker on it so nobody can see it but

732
00:30:43,840 --> 00:30:46,399
for the the microphone yes because you

733
00:30:46,399 --> 00:30:48,799
can talk to the person that's on the

734
00:30:48,799 --> 00:30:52,399
outside when they ring at the door yeah

735
00:30:52,399 --> 00:30:55,600
okay and we are out of time and i would

736
00:30:55,600 --> 00:30:57,120
like to thank you for this very

737
00:30:57,120 --> 00:30:59,519
interesting but quite frightening talk

738
00:30:59,519 --> 00:31:01,519
so one round of applause please for

739
00:31:01,519 --> 00:31:04,519
nails

740
00:31:15,679 --> 00:31:17,760
you

