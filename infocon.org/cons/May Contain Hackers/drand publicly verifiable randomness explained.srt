1
00:00:00,550 --> 00:00:12,630
[Music]

2
00:00:14,900 --> 00:00:17,580
hello everybody

3
00:00:17,580 --> 00:00:20,699
um thank you for coming today to my talk

4
00:00:20,699 --> 00:00:23,100
about giron so public verifiable

5
00:00:23,100 --> 00:00:24,840
Randomness explained

6
00:00:24,840 --> 00:00:28,680
so I'm Jalan so this is a disclaimer for

7
00:00:28,680 --> 00:00:30,779
our American friends I'm from

8
00:00:30,779 --> 00:00:33,360
Switzerland not Sweden so it's not the

9
00:00:33,360 --> 00:00:35,280
same thing we got the chocolate and the

10
00:00:35,280 --> 00:00:39,360
cheese they got Ikea and I don't know a

11
00:00:39,360 --> 00:00:40,399
lot of snow

12
00:00:40,399 --> 00:00:43,620
I'm a CTF player I'm an applied

13
00:00:43,620 --> 00:00:46,320
cryptographer at protocol Labs so not to

14
00:00:46,320 --> 00:00:48,719
be mixed with a web 3 developer so

15
00:00:48,719 --> 00:00:51,239
please don't come after me

16
00:00:51,239 --> 00:00:53,940
um and yeah I got a math background but

17
00:00:53,940 --> 00:00:56,399
I will try to make these you know as

18
00:00:56,399 --> 00:00:58,440
simple as possible it's about Computer

19
00:00:58,440 --> 00:01:01,620
Sciences and like Computer Engineering

20
00:01:01,620 --> 00:01:04,199
not about math today

21
00:01:04,199 --> 00:01:07,380
so what are we going to see well we're

22
00:01:07,380 --> 00:01:09,780
going to see what is Randomness and then

23
00:01:09,780 --> 00:01:12,780
we will see what kind of flavors we have

24
00:01:12,780 --> 00:01:14,040
for Randomness what are the different

25
00:01:14,040 --> 00:01:16,500
kinds of Randomness that we have finally

26
00:01:16,500 --> 00:01:19,439
we'll well next we'll see why we need

27
00:01:19,439 --> 00:01:21,420
Randomness

28
00:01:21,420 --> 00:01:23,040
um what kind of problems there are with

29
00:01:23,040 --> 00:01:25,920
Randomness and how to do it properly in

30
00:01:25,920 --> 00:01:27,680
practice

31
00:01:27,680 --> 00:01:31,920
so what is randomness

32
00:01:31,920 --> 00:01:33,720
it's a good question right so we can

33
00:01:33,720 --> 00:01:35,100
look it up

34
00:01:35,100 --> 00:01:37,579
according to the Cambridge Dictionary

35
00:01:37,579 --> 00:01:39,840
Randomness is the quality of being

36
00:01:39,840 --> 00:01:42,600
random great

37
00:01:42,600 --> 00:01:46,560
that's it right well granted they refine

38
00:01:46,560 --> 00:01:48,720
it a bit so it's a quality of being

39
00:01:48,720 --> 00:01:51,780
random which means happening done or

40
00:01:51,780 --> 00:01:54,720
chosen by chance rather than according

41
00:01:54,720 --> 00:01:56,939
to a plan

42
00:01:56,939 --> 00:01:58,680
um

43
00:01:58,680 --> 00:02:01,380
if you look at other dictionaries you

44
00:02:01,380 --> 00:02:03,840
can see if maybe better definitions such

45
00:02:03,840 --> 00:02:05,820
as according to the Oxford language

46
00:02:05,820 --> 00:02:08,580
definition it's the quality or state of

47
00:02:08,580 --> 00:02:12,599
lacking a pattern and that notion of

48
00:02:12,599 --> 00:02:15,060
lacking a pattern is super important for

49
00:02:15,060 --> 00:02:18,060
Randomness and we'll see why in a minute

50
00:02:18,060 --> 00:02:19,319
so

51
00:02:19,319 --> 00:02:21,239
here are

52
00:02:21,239 --> 00:02:26,160
five of yeah five random strings

53
00:02:26,160 --> 00:02:29,580
does the first one look random

54
00:02:29,580 --> 00:02:33,239
yeah super random does a sudden one look

55
00:02:33,239 --> 00:02:35,660
random

56
00:02:36,000 --> 00:02:40,260
the second one is actually random

57
00:02:40,260 --> 00:02:42,959
how about the third one

58
00:02:42,959 --> 00:02:45,660
not random obviously not

59
00:02:45,660 --> 00:02:48,239
next we've got the the fourth one which

60
00:02:48,239 --> 00:02:51,599
looks fairly random right unless you

61
00:02:51,599 --> 00:02:54,900
look at it in exadecimal that doesn't

62
00:02:54,900 --> 00:02:57,060
look random then anymore

63
00:02:57,060 --> 00:02:59,220
and finally

64
00:02:59,220 --> 00:03:01,920
the last one has an abuse pattern so it

65
00:03:01,920 --> 00:03:05,220
doesn't look random neither so the

66
00:03:05,220 --> 00:03:07,140
important thing to remember with

67
00:03:07,140 --> 00:03:10,140
Randomness is that all of these values

68
00:03:10,140 --> 00:03:13,379
at the same probability of occurring at

69
00:03:13,379 --> 00:03:15,599
random if you were to pick a random

70
00:03:15,599 --> 00:03:19,440
number of that size so it's really

71
00:03:19,440 --> 00:03:22,080
difficult to say if something is random

72
00:03:22,080 --> 00:03:23,879
or not

73
00:03:23,879 --> 00:03:24,480
um

74
00:03:24,480 --> 00:03:28,260
we can try to do that we can have some

75
00:03:28,260 --> 00:03:30,239
intuition of what is random by looking

76
00:03:30,239 --> 00:03:33,840
whether there are patterns or not and

77
00:03:33,840 --> 00:03:36,000
there is a more formal academic

78
00:03:36,000 --> 00:03:37,680
treatment of Randomness that is called

79
00:03:37,680 --> 00:03:40,319
like the kolm agar of complexity which

80
00:03:40,319 --> 00:03:43,019
is basically the notion that if you can

81
00:03:43,019 --> 00:03:46,319
compress it if you can you know output

82
00:03:46,319 --> 00:03:50,220
it in a smaller form factor then maybe

83
00:03:50,220 --> 00:03:53,819
it's not so Random so typically here I

84
00:03:53,819 --> 00:03:56,280
can represent the first line with just

85
00:03:56,280 --> 00:03:58,799
19 characters instead of the 48

86
00:03:58,799 --> 00:04:01,439
characters I needed to to display it in

87
00:04:01,439 --> 00:04:03,200
full so

88
00:04:03,200 --> 00:04:06,120
it doesn't really looks random according

89
00:04:06,120 --> 00:04:09,299
to kalmograph complexity neither

90
00:04:09,299 --> 00:04:11,700
but today is not to talk about

91
00:04:11,700 --> 00:04:14,400
kalmograph complexity it's not a lecture

92
00:04:14,400 --> 00:04:17,220
you know so we will get into what is

93
00:04:17,220 --> 00:04:18,959
Randomness and its different kind of

94
00:04:18,959 --> 00:04:22,620
flavors now so first I want to talk

95
00:04:22,620 --> 00:04:25,320
about the notion of public Randomness so

96
00:04:25,320 --> 00:04:28,680
public Randomness is the notion that you

97
00:04:28,680 --> 00:04:31,259
want to pick a random number

98
00:04:31,259 --> 00:04:32,940
and

99
00:04:32,940 --> 00:04:35,820
reveal it to everybody it's going to be

100
00:04:35,820 --> 00:04:37,740
public you know like you will publish it

101
00:04:37,740 --> 00:04:39,660
on your website or maybe you're running

102
00:04:39,660 --> 00:04:43,320
a lottery and you're drawing the numbers

103
00:04:43,320 --> 00:04:45,840
live on TV but it's going to be public

104
00:04:45,840 --> 00:04:49,020
okay that's a different notion of

105
00:04:49,020 --> 00:04:51,120
Randomness than the one we're most used

106
00:04:51,120 --> 00:04:54,660
to which is that of secret Randomness we

107
00:04:54,660 --> 00:04:57,419
very often use Randomness to generate

108
00:04:57,419 --> 00:04:59,880
secret Keys whenever you connect to a

109
00:04:59,880 --> 00:05:03,479
website nowadays you're using TLS or at

110
00:05:03,479 --> 00:05:06,780
least you should and TLS is using FM

111
00:05:06,780 --> 00:05:10,320
role Keys an FM roll key is a random

112
00:05:10,320 --> 00:05:13,259
secret value that is drawn from your

113
00:05:13,259 --> 00:05:16,380
computer and it should be random to

114
00:05:16,380 --> 00:05:18,960
ensure your security well to ensure the

115
00:05:18,960 --> 00:05:20,660
privacy of your

116
00:05:20,660 --> 00:05:23,580
communication channels

117
00:05:23,580 --> 00:05:25,860
um we typically use secret Randomness

118
00:05:25,860 --> 00:05:29,699
for generating secret Keys your pgp key

119
00:05:29,699 --> 00:05:32,100
must should be random your Bitcoin

120
00:05:32,100 --> 00:05:35,100
private key should be random and so on

121
00:05:35,100 --> 00:05:37,860
it's very important to never use public

122
00:05:37,860 --> 00:05:42,120
Randomness as a source of Randomness to

123
00:05:42,120 --> 00:05:45,180
generate secret values so please do not

124
00:05:45,180 --> 00:05:48,840
use a public random value to generate

125
00:05:48,840 --> 00:05:52,800
your next pgp key it would be easily

126
00:05:52,800 --> 00:05:54,060
broken

127
00:05:54,060 --> 00:05:55,020
thank you

128
00:05:55,020 --> 00:05:57,419
next I want to talk about the notion of

129
00:05:57,419 --> 00:05:59,580
verifiable Randomness not something we

130
00:05:59,580 --> 00:06:01,680
don't see too often but it's really

131
00:06:01,680 --> 00:06:03,720
important with public Randomness because

132
00:06:03,720 --> 00:06:08,220
they combine together really well so

133
00:06:08,220 --> 00:06:11,880
very Fable Randomness is basically a

134
00:06:11,880 --> 00:06:14,819
random value that you can verify it had

135
00:06:14,819 --> 00:06:17,940
been generated properly

136
00:06:17,940 --> 00:06:20,880
so if you can verify the random value is

137
00:06:20,880 --> 00:06:23,759
actually random then maybe you can trust

138
00:06:23,759 --> 00:06:26,160
it more and that's really interesting

139
00:06:26,160 --> 00:06:30,000
for a different for many use cases we'll

140
00:06:30,000 --> 00:06:31,800
see use cases soon

141
00:06:31,800 --> 00:06:33,060
so

142
00:06:33,060 --> 00:06:36,539
another big problem with Randomness is

143
00:06:36,539 --> 00:06:39,300
the notion of distributed Randomness so

144
00:06:39,300 --> 00:06:42,180
nowadays the internet is becoming more

145
00:06:42,180 --> 00:06:44,699
and more decentralized and there is this

146
00:06:44,699 --> 00:06:47,100
notion of web 3 where everything should

147
00:06:47,100 --> 00:06:48,780
be more and more decentralized and

148
00:06:48,780 --> 00:06:51,360
distributed and

149
00:06:51,360 --> 00:06:55,500
agreeing on a random value as a group so

150
00:06:55,500 --> 00:06:59,039
even consensus on a random value is

151
00:06:59,039 --> 00:07:00,840
really difficult if you want to unsure

152
00:07:00,840 --> 00:07:03,060
it's unpredictable for example because

153
00:07:03,060 --> 00:07:06,240
if you can not predict it or can you be

154
00:07:06,240 --> 00:07:08,099
sure everybody is going to come up with

155
00:07:08,099 --> 00:07:11,520
the same random value right so

156
00:07:11,520 --> 00:07:14,280
achieving consensus and random values is

157
00:07:14,280 --> 00:07:17,580
difficult and you can look at blockchain

158
00:07:17,580 --> 00:07:19,919
for example like ethereum and that kind

159
00:07:19,919 --> 00:07:22,319
of you know blockchain that are running

160
00:07:22,319 --> 00:07:24,479
smart contracts if you want to run a

161
00:07:24,479 --> 00:07:26,340
lottery on ethereum it's going to be

162
00:07:26,340 --> 00:07:29,880
difficult because it is fairly easy to

163
00:07:29,880 --> 00:07:32,639
predict future values and there is a

164
00:07:32,639 --> 00:07:34,800
huge problem in the space currently with

165
00:07:34,800 --> 00:07:39,300
the MAV so you know it's when miners can

166
00:07:39,300 --> 00:07:42,300
extract more value out of a block than

167
00:07:42,300 --> 00:07:45,120
just the reward from the transaction

168
00:07:45,120 --> 00:07:49,199
fees and the classic the normal URL and

169
00:07:49,199 --> 00:07:52,319
that kind of things are difficult

170
00:07:52,319 --> 00:07:54,479
so

171
00:07:54,479 --> 00:07:56,940
I gave you some hints of why we need

172
00:07:56,940 --> 00:07:59,160
Randomness already but I'm going to go

173
00:07:59,160 --> 00:08:03,720
over a few more use cases now so

174
00:08:03,720 --> 00:08:05,699
public Randomness make a lot of sense

175
00:08:05,699 --> 00:08:09,479
for lotteries the re-election uh audits

176
00:08:09,479 --> 00:08:11,639
random sampling and that kind of things

177
00:08:11,639 --> 00:08:14,759
it's the secret Randomness is really

178
00:08:14,759 --> 00:08:16,560
used and very important for all

179
00:08:16,560 --> 00:08:20,039
cryptographic protocols out there from

180
00:08:20,039 --> 00:08:23,699
TLS to SSH you're probably using secret

181
00:08:23,699 --> 00:08:27,539
values secret random values daily

182
00:08:27,539 --> 00:08:30,960
um next we have a few more use cases

183
00:08:30,960 --> 00:08:34,200
that might be less obvious such as

184
00:08:34,200 --> 00:08:36,899
sampling if you are running a medical

185
00:08:36,899 --> 00:08:39,419
study and you need to sample people at

186
00:08:39,419 --> 00:08:41,640
random or do you do to make sure it's

187
00:08:41,640 --> 00:08:43,620
random and somebody didn't select their

188
00:08:43,620 --> 00:08:45,779
friends or something like that it

189
00:08:45,779 --> 00:08:47,820
becomes even more interesting if you're

190
00:08:47,820 --> 00:08:50,420
looking into use cases where people are

191
00:08:50,420 --> 00:08:54,060
introducing for example a basic income

192
00:08:54,060 --> 00:08:55,920
in the country and they need to select

193
00:08:55,920 --> 00:08:58,560
people that run them because corruption

194
00:08:58,560 --> 00:09:01,200
and that kind of things are still a

195
00:09:01,200 --> 00:09:03,540
thing nowadays and if you cannot do

196
00:09:03,540 --> 00:09:06,839
random selection properly if you can buy

197
00:09:06,839 --> 00:09:10,740
assets then it's really bad

198
00:09:10,740 --> 00:09:14,820
so a very good example of that is

199
00:09:14,820 --> 00:09:17,640
um like um like a month ago even yeah

200
00:09:17,640 --> 00:09:20,160
even less than a month ago a few days

201
00:09:20,160 --> 00:09:21,360
back

202
00:09:21,360 --> 00:09:21,959
um

203
00:09:21,959 --> 00:09:25,500
we could see that both the former FBI

204
00:09:25,500 --> 00:09:28,740
director and his Deputy were selected at

205
00:09:28,740 --> 00:09:30,060
random

206
00:09:30,060 --> 00:09:34,380
by the IRS for an intensive audit

207
00:09:34,380 --> 00:09:35,760
that's an exact

208
00:09:35,760 --> 00:09:37,920
but that's a really good example of why

209
00:09:37,920 --> 00:09:40,080
we need public verifiable Randomness

210
00:09:40,080 --> 00:09:42,660
because now nobody is going to trust the

211
00:09:42,660 --> 00:09:44,940
IRS is actually selecting people at

212
00:09:44,940 --> 00:09:47,399
random right

213
00:09:47,399 --> 00:09:50,580
next we'll see ways or problems with

214
00:09:50,580 --> 00:09:53,760
Randomness so

215
00:09:53,760 --> 00:09:55,800
it's somebody it's something

216
00:09:55,800 --> 00:09:57,899
cryptographers will say very often

217
00:09:57,899 --> 00:10:01,019
Randomness is hard and trust me I've

218
00:10:01,019 --> 00:10:03,720
been doing a lot of code audits where I

219
00:10:03,720 --> 00:10:06,899
was looking at other people codes on the

220
00:10:06,899 --> 00:10:10,200
most common flow was usually Randomness

221
00:10:10,200 --> 00:10:14,760
people will introduce bias or make the

222
00:10:14,760 --> 00:10:17,040
randomness predictable in ways that

223
00:10:17,040 --> 00:10:20,399
would break their Wall Systems and

224
00:10:20,399 --> 00:10:22,500
these are the two very important

225
00:10:22,500 --> 00:10:25,079
properties we usually want to wave with

226
00:10:25,079 --> 00:10:27,240
secret Randomness or even proper

227
00:10:27,240 --> 00:10:29,459
Randomness in general we want it to be

228
00:10:29,459 --> 00:10:32,040
unpredictable and we want it to be bias

229
00:10:32,040 --> 00:10:35,040
resistant so why do we want it to be

230
00:10:35,040 --> 00:10:37,200
unpredictable

231
00:10:37,200 --> 00:10:40,800
because if you can predict a random

232
00:10:40,800 --> 00:10:43,320
value you can most likely cheat or do

233
00:10:43,320 --> 00:10:45,779
something bad if it's a lottery you

234
00:10:45,779 --> 00:10:48,420
could predict the winning ticket and win

235
00:10:48,420 --> 00:10:52,380
it if it's in a game or if it's in

236
00:10:52,380 --> 00:10:53,700
um

237
00:10:53,700 --> 00:10:57,360
an audit you could warn people or do

238
00:10:57,360 --> 00:10:59,519
never real things so we really want it

239
00:10:59,519 --> 00:11:02,459
to be unpredictable for cryptographic

240
00:11:02,459 --> 00:11:04,200
protocols it's even more important

241
00:11:04,200 --> 00:11:05,820
because if you can predict the

242
00:11:05,820 --> 00:11:09,000
randomness in this ecdsa for example you

243
00:11:09,000 --> 00:11:11,040
can actually do a full secret key

244
00:11:11,040 --> 00:11:13,680
extraction and that is the worst thing

245
00:11:13,680 --> 00:11:15,600
that can happen to a cryptographic

246
00:11:15,600 --> 00:11:17,880
protocol secret key extraction is

247
00:11:17,880 --> 00:11:21,899
something you don't want to to a right

248
00:11:21,899 --> 00:11:26,220
and why unbiased well this is tricker

249
00:11:26,220 --> 00:11:30,360
because having a bias is not always a

250
00:11:30,360 --> 00:11:33,839
bad thing maybe you want to select more

251
00:11:33,839 --> 00:11:36,420
people in your studio that are between

252
00:11:36,420 --> 00:11:39,480
20 and 30 years old or whatsoever it

253
00:11:39,480 --> 00:11:41,459
deepens what you're doing with your

254
00:11:41,459 --> 00:11:44,100
Randomness but for cryptographic

255
00:11:44,100 --> 00:11:47,220
purposes for secret Randomness you

256
00:11:47,220 --> 00:11:49,320
really really want it to be unbiased

257
00:11:49,320 --> 00:11:52,680
because just a one bit bias can also

258
00:11:52,680 --> 00:11:54,959
leak your secret key if you've been

259
00:11:54,959 --> 00:11:58,339
signing enough

260
00:11:58,500 --> 00:12:02,279
things be transactions with emails

261
00:12:02,279 --> 00:12:04,320
whatever you're doing with your private

262
00:12:04,320 --> 00:12:07,560
key if you sign enough messages and you

263
00:12:07,560 --> 00:12:09,839
have a bias in your number in your

264
00:12:09,839 --> 00:12:12,600
random number generation we can extract

265
00:12:12,600 --> 00:12:15,240
your private key and that the war thing

266
00:12:15,240 --> 00:12:17,339
that can happen right

267
00:12:17,339 --> 00:12:20,639
and that's true for all cryptographic

268
00:12:20,639 --> 00:12:24,180
schemes that are most used nowadays so

269
00:12:24,180 --> 00:12:26,940
it's not necessarily true for RSA but

270
00:12:26,940 --> 00:12:29,399
RSA has been phased out nowadays and

271
00:12:29,399 --> 00:12:32,040
we're using Snorlax signatures such as

272
00:12:32,040 --> 00:12:36,839
ecdsa eddsa Mouse nor BLS and so on and

273
00:12:36,839 --> 00:12:39,420
these are very sensitive to buy as

274
00:12:39,420 --> 00:12:40,680
randomness

275
00:12:40,680 --> 00:12:44,459
so maybe you've been coding already and

276
00:12:44,459 --> 00:12:47,100
maybe you needed to draw a random value

277
00:12:47,100 --> 00:12:49,860
or would you do that well a very easy

278
00:12:49,860 --> 00:12:52,079
way to draw a random value is just to

279
00:12:52,079 --> 00:12:54,980
call your operating system

280
00:12:54,980 --> 00:12:59,399
random get random Cisco right so most

281
00:12:59,399 --> 00:13:02,760
programming language is offer such

282
00:13:02,760 --> 00:13:03,360
um

283
00:13:03,360 --> 00:13:07,440
calls through Os or whatsoever module so

284
00:13:07,440 --> 00:13:09,899
here is an example to get a random

285
00:13:09,899 --> 00:13:13,019
number between 0 and 255 we can just

286
00:13:13,019 --> 00:13:16,500
draw a random byte and convert it into a

287
00:13:16,500 --> 00:13:19,260
number that's fine it's unbiased it's

288
00:13:19,260 --> 00:13:21,240
good Randomness if you've got a modern

289
00:13:21,240 --> 00:13:24,440
computer nothing to worry about

290
00:13:24,440 --> 00:13:28,139
but if you don't

291
00:13:28,139 --> 00:13:30,959
want to pick a random value between 0

292
00:13:30,959 --> 00:13:33,899
and 255 say you want to pick a random

293
00:13:33,899 --> 00:13:38,160
value between 0 and 106. so you have the

294
00:13:38,160 --> 00:13:42,480
107 possibilities from 0 to 1006 or

295
00:13:42,480 --> 00:13:43,740
would you do that

296
00:13:43,740 --> 00:13:46,500
well most people will think ah I just

297
00:13:46,500 --> 00:13:49,980
reduce it modulo 107 right that's a very

298
00:13:49,980 --> 00:13:54,139
easy way to just slash the extra

299
00:13:54,139 --> 00:13:56,760
values you could have gotten in your

300
00:13:56,760 --> 00:13:59,519
bytes but that's actually not a good

301
00:13:59,519 --> 00:14:02,100
idea at all because this is called

302
00:14:02,100 --> 00:14:05,880
modulo bias and here is a graph of why

303
00:14:05,880 --> 00:14:09,860
modular bias is bad so if you do that

304
00:14:09,860 --> 00:14:13,320
your lower values will have a higher

305
00:14:13,320 --> 00:14:16,440
chance of being drawn so

306
00:14:16,440 --> 00:14:19,500
here in this example uh we're drawing

307
00:14:19,500 --> 00:14:22,459
one byte so we have

308
00:14:22,459 --> 00:14:25,079
256 possibilities

309
00:14:25,079 --> 00:14:28,680
and we are converting it into

310
00:14:28,680 --> 00:14:32,940
a number that's smaller to 107 and that

311
00:14:32,940 --> 00:14:36,360
means we have the 42 Lower values from 0

312
00:14:36,360 --> 00:14:40,079
to 4 T 1 that are more likely to occur

313
00:14:40,079 --> 00:14:42,540
and this means you've just leaked your

314
00:14:42,540 --> 00:14:45,860
private key if you were doing a

315
00:14:45,860 --> 00:14:48,660
cryptographic protocol or something like

316
00:14:48,660 --> 00:14:51,600
that so it's really important not to

317
00:14:51,600 --> 00:14:55,860
reduce modulo the target value if you're

318
00:14:55,860 --> 00:14:57,060
doing

319
00:14:57,060 --> 00:15:00,120
secret stuff with your Randomness the

320
00:15:00,120 --> 00:15:02,160
best way to avoid bias is just to rely

321
00:15:02,160 --> 00:15:04,800
on your cryptographic prng to give you

322
00:15:04,800 --> 00:15:08,279
proper values so mostly varies from

323
00:15:08,279 --> 00:15:11,040
python to go to rust you can even find

324
00:15:11,040 --> 00:15:14,339
some in C but who's coding in C right

325
00:15:14,339 --> 00:15:15,540
um

326
00:15:15,540 --> 00:15:17,699
all of these languages have standard

327
00:15:17,699 --> 00:15:20,100
libraries that provide you with good

328
00:15:20,100 --> 00:15:22,139
Randomness good random numbers that are

329
00:15:22,139 --> 00:15:25,440
unbiased and easy to sample you can you

330
00:15:25,440 --> 00:15:27,779
can also read my blog post about how to

331
00:15:27,779 --> 00:15:31,680
avoid modular bias it's the link here

332
00:15:31,680 --> 00:15:33,839
I'll post the slides on my website I

333
00:15:33,839 --> 00:15:35,820
guess MCH also posting the slides online

334
00:15:35,820 --> 00:15:37,560
so it should be fairly easy to find if

335
00:15:37,560 --> 00:15:39,660
you want to to read more about modulo

336
00:15:39,660 --> 00:15:41,339
bias

337
00:15:41,339 --> 00:15:43,800
um last time I talked about that

338
00:15:43,800 --> 00:15:46,800
somebody asked hey what if I just divide

339
00:15:46,800 --> 00:15:49,920
by 255 and multiply by the value I want

340
00:15:49,920 --> 00:15:53,699
to get that's unbiased right well no

341
00:15:53,699 --> 00:15:56,220
because precision and floating points

342
00:15:56,220 --> 00:15:59,100
number are going to kill you again so

343
00:15:59,100 --> 00:16:01,079
this is not going to be biased like the

344
00:16:01,079 --> 00:16:04,259
modular buyer so you won't see a heavy

345
00:16:04,259 --> 00:16:06,600
first half of the graph you know but

346
00:16:06,600 --> 00:16:08,579
you'll get spike in the middle of your

347
00:16:08,579 --> 00:16:12,420
graph and that's also terrible there is

348
00:16:12,420 --> 00:16:14,940
a really good blog post by the PCG

349
00:16:14,940 --> 00:16:18,540
random team which are really going into

350
00:16:18,540 --> 00:16:21,839
the details of oh prng and Randomness

351
00:16:21,839 --> 00:16:24,300
works are highly recommended if you want

352
00:16:24,300 --> 00:16:26,699
to learn more about not using floating

353
00:16:26,699 --> 00:16:28,380
points

354
00:16:28,380 --> 00:16:31,079
so in practice now

355
00:16:31,079 --> 00:16:33,480
so in practice Randomness has been

356
00:16:33,480 --> 00:16:35,519
really difficult for a long time but

357
00:16:35,519 --> 00:16:37,560
we've mostly solved it on personal

358
00:16:37,560 --> 00:16:39,480
computers

359
00:16:39,480 --> 00:16:42,360
the somewhat unsolved thing was public

360
00:16:42,360 --> 00:16:45,120
variable Randomness so that was first

361
00:16:45,120 --> 00:16:48,500
proposed in 1993 by Robin

362
00:16:48,500 --> 00:16:51,440
the notion that even a trusted

363
00:16:51,440 --> 00:16:55,019
intermediary could release like trusted

364
00:16:55,019 --> 00:16:58,139
random public run run random numbers I

365
00:16:58,139 --> 00:17:00,959
was introduced but you need to trust

366
00:17:00,959 --> 00:17:03,120
somebody who wants to do that right

367
00:17:03,120 --> 00:17:05,699
so there are websites that offer public

368
00:17:05,699 --> 00:17:08,880
Randomness for example random.org claims

369
00:17:08,880 --> 00:17:11,039
to be using a true random generator or

370
00:17:11,039 --> 00:17:13,380
collecting the atmospheric noise and

371
00:17:13,380 --> 00:17:16,260
giving you random values but how do you

372
00:17:16,260 --> 00:17:18,179
trust them it's just a website you can't

373
00:17:18,179 --> 00:17:20,579
really look into their system it's not

374
00:17:20,579 --> 00:17:23,890
open source it's super annoying too so

375
00:17:23,890 --> 00:17:26,280
[Music]

376
00:17:26,280 --> 00:17:30,059
you know these standardization body in

377
00:17:30,059 --> 00:17:32,940
the U.S they're very active in the cyber

378
00:17:32,940 --> 00:17:35,160
security space and for cryptographic

379
00:17:35,160 --> 00:17:37,799
protocols and everything and so they

380
00:17:37,799 --> 00:17:41,039
released the first public verifiable

381
00:17:41,039 --> 00:17:46,320
trusted run known as beacon in 2013.

382
00:17:46,320 --> 00:17:49,740
that knee still is also very famous for

383
00:17:49,740 --> 00:17:52,559
trying to bias Randomness with their

384
00:17:52,559 --> 00:17:56,220
dual ECB random generator so who would

385
00:17:56,220 --> 00:17:58,440
trust Miss to run a public Randomness

386
00:17:58,440 --> 00:18:00,780
service right

387
00:18:00,780 --> 00:18:02,640
so there have been a lot of previous

388
00:18:02,640 --> 00:18:04,679
attempts at doing public Randomness

389
00:18:04,679 --> 00:18:08,760
right and uh one of them was an academic

390
00:18:08,760 --> 00:18:11,820
word work run hound and it seemed like a

391
00:18:11,820 --> 00:18:14,400
really good way to achieve these sadly

392
00:18:14,400 --> 00:18:16,500
it was using short signatures it was

393
00:18:16,500 --> 00:18:18,840
relatively slow and a lot of network

394
00:18:18,840 --> 00:18:22,500
overhead and so the question was can we

395
00:18:22,500 --> 00:18:26,760
do it in a simpler and faster way

396
00:18:26,760 --> 00:18:27,360
um

397
00:18:27,360 --> 00:18:31,740
the answer actually is yes so just like

398
00:18:31,740 --> 00:18:35,580
we have ntp servers DNS servers

399
00:18:35,580 --> 00:18:38,160
um certificate transparency servers and

400
00:18:38,160 --> 00:18:40,679
that kind of things we were thinking the

401
00:18:40,679 --> 00:18:42,539
internet really needed a public

402
00:18:42,539 --> 00:18:45,059
verifiable Randomness protocol that

403
00:18:45,059 --> 00:18:47,220
anybody could use and that's exactly

404
00:18:47,220 --> 00:18:50,400
what d-run is about dran is an open

405
00:18:50,400 --> 00:18:52,080
source software

406
00:18:52,080 --> 00:18:56,280
it's coded in go it's coming originally

407
00:18:56,280 --> 00:18:59,760
from EPF file so it's been studied by

408
00:18:59,760 --> 00:19:02,340
academics and then it was

409
00:19:02,340 --> 00:19:03,020
um

410
00:19:03,020 --> 00:19:05,940
launched later by

411
00:19:05,940 --> 00:19:08,820
many people will see that later but the

412
00:19:08,820 --> 00:19:10,799
Iran is relying on cool threshold

413
00:19:10,799 --> 00:19:14,280
cryptography and it's providing the

414
00:19:14,280 --> 00:19:15,660
ninth thing we want with public

415
00:19:15,660 --> 00:19:18,179
verifiable Randomness so we'll get into

416
00:19:18,179 --> 00:19:21,179
the details now the Iran is meant to be

417
00:19:21,179 --> 00:19:23,400
decentralized so diran is just the

418
00:19:23,400 --> 00:19:25,380
software and you can run it on multiple

419
00:19:25,380 --> 00:19:28,140
nodes and when you run it on multiple

420
00:19:28,140 --> 00:19:30,360
nodes they connect to each other to form

421
00:19:30,360 --> 00:19:34,320
a network and that network is using

422
00:19:34,320 --> 00:19:36,900
threshold cryptography which means you

423
00:19:36,900 --> 00:19:38,700
need just need a threshold number of

424
00:19:38,700 --> 00:19:41,100
nodes to be available for it to produce

425
00:19:41,100 --> 00:19:42,900
randomness

426
00:19:42,900 --> 00:19:44,460
um that Randomness is going to be

427
00:19:44,460 --> 00:19:47,059
unpredictable bias resistance

428
00:19:47,059 --> 00:19:50,220
unverrishable so it's really good public

429
00:19:50,220 --> 00:19:52,940
randomness

430
00:19:53,160 --> 00:19:55,140
um the randomness is currently chained

431
00:19:55,140 --> 00:19:57,480
so each new Beacon is linked to the

432
00:19:57,480 --> 00:19:59,580
previous Beacon so if you don't know the

433
00:19:59,580 --> 00:20:01,860
previous Beacon you can generate the

434
00:20:01,860 --> 00:20:04,320
next Beacon so it's really it's helping

435
00:20:04,320 --> 00:20:07,080
with the unpredictability and as long as

436
00:20:07,080 --> 00:20:08,880
you even compromise the threshold number

437
00:20:08,880 --> 00:20:11,580
of nodes you are guaranteed you cannot

438
00:20:11,580 --> 00:20:14,100
predict the next round

439
00:20:14,100 --> 00:20:16,980
it's really easy to use this is the

440
00:20:16,980 --> 00:20:20,340
JavaScript code to verify uh g-run

441
00:20:20,340 --> 00:20:22,860
Randomness so you can see it's very few

442
00:20:22,860 --> 00:20:25,980
line of code you just need to import the

443
00:20:25,980 --> 00:20:27,320
BLS 12

444
00:20:27,320 --> 00:20:33,539
381 code from Noble library and then

445
00:20:33,539 --> 00:20:36,419
it's very easy to verify

446
00:20:36,419 --> 00:20:37,140
um

447
00:20:37,140 --> 00:20:40,260
the thread model behind g-run is

448
00:20:40,260 --> 00:20:43,500
basically that of a threshold Network so

449
00:20:43,500 --> 00:20:46,860
you have a set of nodes and together

450
00:20:46,860 --> 00:20:49,140
they are going to generate Randomness

451
00:20:49,140 --> 00:20:51,419
every 30 seconds

452
00:20:51,419 --> 00:20:54,360
and they do that by relying on BLS

453
00:20:54,360 --> 00:20:57,539
signatures BLS is a threshold signature

454
00:20:57,539 --> 00:21:00,900
scheme and you just require for example

455
00:21:00,900 --> 00:21:03,480
currently 13

456
00:21:03,480 --> 00:21:06,480
members to generate a valid signatures

457
00:21:06,480 --> 00:21:08,580
to get a group signature and that

458
00:21:08,580 --> 00:21:11,520
signature is valid under the Wall Group

459
00:21:11,520 --> 00:21:14,640
public key and that group public key

460
00:21:14,640 --> 00:21:16,919
allows you to verify Randomness was

461
00:21:16,919 --> 00:21:20,940
generated properly the security of BLS

462
00:21:20,940 --> 00:21:23,520
and that kind of threshold cryptography

463
00:21:23,520 --> 00:21:26,400
is really good as long as you don't get

464
00:21:26,400 --> 00:21:28,919
a quantum computer so we should be fine

465
00:21:28,919 --> 00:21:33,140
for the next 5 to 20 euros I guess also

466
00:21:33,140 --> 00:21:35,700
it's very important your secret key

467
00:21:35,700 --> 00:21:37,740
stays secret and so on but we'll see

468
00:21:37,740 --> 00:21:39,480
that in a minute

469
00:21:39,480 --> 00:21:42,840
giron is also exposing public apis so

470
00:21:42,840 --> 00:21:45,480
you can just query it online it's a rest

471
00:21:45,480 --> 00:21:47,940
API you can curl it you can use it in

472
00:21:47,940 --> 00:21:51,539
your browser and you get the randomness

473
00:21:51,539 --> 00:21:53,700
and the signature which allows you to

474
00:21:53,700 --> 00:21:55,559
verify the randomness was generated

475
00:21:55,559 --> 00:21:57,960
properly

476
00:21:57,960 --> 00:22:01,020
um while gear run is just a software

477
00:22:01,020 --> 00:22:04,320
and is you know exposing on points on

478
00:22:04,320 --> 00:22:06,539
everything you can't really use it

479
00:22:06,539 --> 00:22:09,240
unless you have a network right so

480
00:22:09,240 --> 00:22:11,820
that's where the league of entropy comes

481
00:22:11,820 --> 00:22:15,480
in the league of entropy is a set of

482
00:22:15,480 --> 00:22:19,080
companies universities and research

483
00:22:19,080 --> 00:22:22,200
teams that came together and decided to

484
00:22:22,200 --> 00:22:26,220
run a drum Network to provide public

485
00:22:26,220 --> 00:22:28,440
verifiable Randomness to anybody who

486
00:22:28,440 --> 00:22:31,740
needs it it was first created in 2019

487
00:22:31,740 --> 00:22:35,179
with 10 members it has since grown to 16

488
00:22:35,179 --> 00:22:39,059
members with 23 nodes on the threshold

489
00:22:39,059 --> 00:22:43,320
of 12. I think we just run in the last

490
00:22:43,320 --> 00:22:46,140
ceremony we're now maybe 24 nodes on the

491
00:22:46,140 --> 00:22:48,900
threshold of 13. everything is open to

492
00:22:48,900 --> 00:22:51,240
us you can look it up and

493
00:22:51,240 --> 00:22:51,840
um

494
00:22:51,840 --> 00:22:54,780
it's yeah really interesting

495
00:22:54,780 --> 00:22:57,780
the nice thing with d-run is that all

496
00:22:57,780 --> 00:23:00,240
nodes can provide their own entropy

497
00:23:00,240 --> 00:23:03,120
during the distributed key generation so

498
00:23:03,120 --> 00:23:05,580
for example here cloudflare is using

499
00:23:05,580 --> 00:23:08,159
their lava lamps as a source of entropy

500
00:23:08,159 --> 00:23:11,940
in d-run so it's true Randomness you

501
00:23:11,940 --> 00:23:14,039
know and Durand is collecting the

502
00:23:14,039 --> 00:23:17,340
randomness from all the members that run

503
00:23:17,340 --> 00:23:18,140
the

504
00:23:18,140 --> 00:23:21,720
distributed key generation and that

505
00:23:21,720 --> 00:23:24,419
means it also should be fully solid in

506
00:23:24,419 --> 00:23:27,360
terms of unpredictability and that's a

507
00:23:27,360 --> 00:23:30,059
knife nice to a thing the Run has been

508
00:23:30,059 --> 00:23:32,280
running for well the league of entropy

509
00:23:32,280 --> 00:23:34,200
has been running the run for now two

510
00:23:34,200 --> 00:23:37,260
Euros we just crossed 2 million rounds

511
00:23:37,260 --> 00:23:41,760
last week and we had zero downtime so

512
00:23:41,760 --> 00:23:44,520
it's a really good battle tested system

513
00:23:44,520 --> 00:23:46,980
if you need public randomness

514
00:23:46,980 --> 00:23:49,760
and

515
00:23:51,480 --> 00:23:53,880
what can we do with Iran well we can

516
00:23:53,880 --> 00:23:55,559
obviously do lotteries we can do

517
00:23:55,559 --> 00:23:57,600
gambling we can do a lot of things but

518
00:23:57,600 --> 00:24:00,120
something I'm super excited about is

519
00:24:00,120 --> 00:24:02,760
time like encryption and that's

520
00:24:02,760 --> 00:24:05,159
something we researched in the past six

521
00:24:05,159 --> 00:24:07,860
months mostly and to enable that we

522
00:24:07,860 --> 00:24:09,539
needed to be able to run multiple

523
00:24:09,539 --> 00:24:12,179
networks on the same year on node so we

524
00:24:12,179 --> 00:24:14,779
recently introduced the notion of

525
00:24:14,779 --> 00:24:17,760
multi-protocol support which means a

526
00:24:17,760 --> 00:24:20,340
single node can run multiple networks so

527
00:24:20,340 --> 00:24:22,860
we can have a post quantum network we

528
00:24:22,860 --> 00:24:25,200
can have a very fast Network we can have

529
00:24:25,200 --> 00:24:27,659
a very slow Network we can have also

530
00:24:27,659 --> 00:24:30,480
instead of a chain Randomness where each

531
00:24:30,480 --> 00:24:33,000
Beacon is linked to the previous one by

532
00:24:33,000 --> 00:24:35,940
its signature we could ever unchain

533
00:24:35,940 --> 00:24:38,340
Network and the really nice thing with

534
00:24:38,340 --> 00:24:40,320
Unchained network is that you can

535
00:24:40,320 --> 00:24:42,779
predict the message that is going to be

536
00:24:42,779 --> 00:24:45,900
signed in two days or maybe in a week

537
00:24:45,900 --> 00:24:48,840
and if you can predict that message then

538
00:24:48,840 --> 00:24:51,720
you can use very fancy cryptography to

539
00:24:51,720 --> 00:24:54,360
do timelock encryption and this is

540
00:24:54,360 --> 00:24:56,159
something that's amazing because time

541
00:24:56,159 --> 00:24:59,460
like encryption uh is an unsolved

542
00:24:59,460 --> 00:25:01,340
problem since

543
00:25:01,340 --> 00:25:04,860
1993 as well when it was proposed on the

544
00:25:04,860 --> 00:25:08,100
cypherpunk mailing list by team mail and

545
00:25:08,100 --> 00:25:10,919
time lock encryption is using pairing

546
00:25:10,919 --> 00:25:14,159
based and identity based crypto just

547
00:25:14,159 --> 00:25:16,919
like we do with Iran and it means it's

548
00:25:16,919 --> 00:25:19,380
very easy to integrate with the run so

549
00:25:19,380 --> 00:25:22,620
each the Run round I told you

550
00:25:22,620 --> 00:25:25,860
um is produced at a given time so for

551
00:25:25,860 --> 00:25:28,559
example we produce currently around

552
00:25:28,559 --> 00:25:31,220
every 30 seconds on the current Network

553
00:25:31,220 --> 00:25:33,659
we are probably going to launch a faster

554
00:25:33,659 --> 00:25:36,240
network but the current network is

555
00:25:36,240 --> 00:25:37,980
staying right we can run multiple

556
00:25:37,980 --> 00:25:39,480
Network at once

557
00:25:39,480 --> 00:25:42,720
and every 30 seconds we get around so in

558
00:25:42,720 --> 00:25:44,520
five minutes

559
00:25:44,520 --> 00:25:47,820
it's just 10 rounds in the future right

560
00:25:47,820 --> 00:25:50,400
so we can link

561
00:25:50,400 --> 00:25:52,679
randomness

562
00:25:52,679 --> 00:25:56,000
and rounds and beacons to future time

563
00:25:56,000 --> 00:25:58,559
and that means we can use time block

564
00:25:58,559 --> 00:26:00,480
encryption to encrypt towards a future

565
00:26:00,480 --> 00:26:03,960
round and that's a super cool thing I'm

566
00:26:03,960 --> 00:26:06,600
not going to explain it because it's

567
00:26:06,600 --> 00:26:09,120
going to be released next month at

568
00:26:09,120 --> 00:26:11,220
Defcon actually so we'll be releasing

569
00:26:11,220 --> 00:26:15,179
time lock encryption based on g-rand

570
00:26:15,179 --> 00:26:16,860
you can use it for a lot of things

571
00:26:16,860 --> 00:26:19,620
including a dead man's full yet

572
00:26:19,620 --> 00:26:22,380
responsible disclosure system uh we're

573
00:26:22,380 --> 00:26:25,020
going to release a time lock encryption

574
00:26:25,020 --> 00:26:27,120
open source Library we're going to

575
00:26:27,120 --> 00:26:29,400
release a JavaScript web app as well

576
00:26:29,400 --> 00:26:32,279
running in your browser so I'm super

577
00:26:32,279 --> 00:26:35,240
excited about that

578
00:26:35,240 --> 00:26:36,960
finally

579
00:26:36,960 --> 00:26:39,419
we would love you to use dran right so

580
00:26:39,419 --> 00:26:41,220
we created this cool

581
00:26:41,220 --> 00:26:44,760
public Randomness server and anybody can

582
00:26:44,760 --> 00:26:46,980
use it you can verify it's random you

583
00:26:46,980 --> 00:26:48,419
can use it in your I don't know

584
00:26:48,419 --> 00:26:51,779
lotteries in your jury election to

585
00:26:51,779 --> 00:26:54,140
select people at random for your audits

586
00:26:54,140 --> 00:26:57,840
you can use it in smart contracts and so

587
00:26:57,840 --> 00:27:01,440
on so please don't hesitate to use dram

588
00:27:01,440 --> 00:27:04,559
currently it's mostly used by filecoin

589
00:27:04,559 --> 00:27:07,080
to do leader election uh there is a

590
00:27:07,080 --> 00:27:09,779
company in the US that actually is using

591
00:27:09,779 --> 00:27:11,580
the Run Randomness in your gambling

592
00:27:11,580 --> 00:27:14,039
system to Generate random values for

593
00:27:14,039 --> 00:27:16,760
their gambling machines it got

594
00:27:16,760 --> 00:27:20,760
authorized by the gambling uh Federation

595
00:27:20,760 --> 00:27:22,860
in the U.S so it's pretty cool as well

596
00:27:22,860 --> 00:27:25,799
and we got a website explaining

597
00:27:25,799 --> 00:27:27,539
everything about the Iran in case you

598
00:27:27,539 --> 00:27:30,120
are interested

599
00:27:30,120 --> 00:27:31,860
um another cool thing you could be doing

600
00:27:31,860 --> 00:27:34,200
is decide to join the League of entropy

601
00:27:34,200 --> 00:27:37,260
so come and join cloudflare protocol

602
00:27:37,260 --> 00:27:39,720
labs and many other the many other

603
00:27:39,720 --> 00:27:41,820
members of the league and you could run

604
00:27:41,820 --> 00:27:45,840
a node so if you're used to a high Hub

605
00:27:45,840 --> 00:27:48,179
availability servers or something like

606
00:27:48,179 --> 00:27:50,940
that please come and talk to me we would

607
00:27:50,940 --> 00:27:52,980
be thrilled to expand the league of

608
00:27:52,980 --> 00:27:55,980
entropy because the more members we have

609
00:27:55,980 --> 00:27:58,440
the higher the security and the trust in

610
00:27:58,440 --> 00:28:01,320
the network will be because of the fact

611
00:28:01,320 --> 00:28:03,059
that you just need to trust the

612
00:28:03,059 --> 00:28:05,880
threshold number of nodes so as long as

613
00:28:05,880 --> 00:28:08,340
you're sure there are enough Diversified

614
00:28:08,340 --> 00:28:10,500
members in the league of entropy and

615
00:28:10,500 --> 00:28:12,360
that they are not going to collude

616
00:28:12,360 --> 00:28:14,940
together you can trust the league of

617
00:28:14,940 --> 00:28:17,820
entropy to produce fur and buy out

618
00:28:17,820 --> 00:28:20,299
randomness

619
00:28:20,399 --> 00:28:21,840
um

620
00:28:21,840 --> 00:28:23,760
um that's it more or less so thank you

621
00:28:23,760 --> 00:28:27,600
for coming today I'm

622
00:28:31,200 --> 00:28:34,440
thanks a lot you have time left and if

623
00:28:34,440 --> 00:28:36,419
there are any questions please line up

624
00:28:36,419 --> 00:28:38,279
at the microphones in the middle of the

625
00:28:38,279 --> 00:28:40,399
room

626
00:28:42,720 --> 00:28:46,440
anyone yes

627
00:28:47,539 --> 00:28:51,659
front microphone please step close so

628
00:28:51,659 --> 00:28:53,760
that we can hear you there's this yes

629
00:28:53,760 --> 00:28:55,140
there we are thanks for the talk

630
00:28:55,140 --> 00:28:57,360
important work I think

631
00:28:57,360 --> 00:28:58,559
um I was wondering do you have

632
00:28:58,559 --> 00:29:02,820
ready-made scripts or yeah programs to

633
00:29:02,820 --> 00:29:03,419
um

634
00:29:03,419 --> 00:29:05,520
how do I put this for people to

635
00:29:05,520 --> 00:29:07,620
afterwards verify that things were

636
00:29:07,620 --> 00:29:11,159
indeed random and correct make it make

637
00:29:11,159 --> 00:29:12,659
it easy for people to check this

638
00:29:12,659 --> 00:29:15,000
actually

639
00:29:15,000 --> 00:29:18,720
yes so I didn't go into the math too

640
00:29:18,720 --> 00:29:21,419
much but basically uh the random values

641
00:29:21,419 --> 00:29:24,659
is generated from a signature so from a

642
00:29:24,659 --> 00:29:28,440
BLS signature and you run rounds are

643
00:29:28,440 --> 00:29:31,020
made of all the information you need to

644
00:29:31,020 --> 00:29:32,880
verify that signature

645
00:29:32,880 --> 00:29:35,460
and you just need to use the public key

646
00:29:35,460 --> 00:29:39,299
of the network so if the signature that

647
00:29:39,299 --> 00:29:42,000
verifies under the public key of the

648
00:29:42,000 --> 00:29:45,179
network then you can be sure it was

649
00:29:45,179 --> 00:29:48,179
properly generated by the network and if

650
00:29:48,179 --> 00:29:50,100
the network is not money issues then

651
00:29:50,100 --> 00:29:53,760
it's good so you can do that by either

652
00:29:53,760 --> 00:29:56,100
querying that you run on points and

653
00:29:56,100 --> 00:29:58,860
getting the beacons or you could in your

654
00:29:58,860 --> 00:30:01,440
application or whatsoever include the

655
00:30:01,440 --> 00:30:03,960
signature as well as the randomness so

656
00:30:03,960 --> 00:30:06,240
people can see they can derive the same

657
00:30:06,240 --> 00:30:09,419
Randomness out of the signature

658
00:30:09,419 --> 00:30:13,380
um to be more precise we can't use the

659
00:30:13,380 --> 00:30:16,980
signature itself as a random value but a

660
00:30:16,980 --> 00:30:19,880
signature must satisfy the

661
00:30:19,880 --> 00:30:22,380
undistinguishability under

662
00:30:22,380 --> 00:30:25,500
um between two signatures so it's it

663
00:30:25,500 --> 00:30:27,539
must be indistinguishable from random

664
00:30:27,539 --> 00:30:29,820
otherwise it's not a secular signature

665
00:30:29,820 --> 00:30:32,520
scheme the problem with signatures is

666
00:30:32,520 --> 00:30:35,760
that there are unfunny elliptic curves

667
00:30:35,760 --> 00:30:38,820
right so if you

668
00:30:38,820 --> 00:30:40,980
if you just take the signature you will

669
00:30:40,980 --> 00:30:43,740
get the algebraic structure of the

670
00:30:43,740 --> 00:30:46,080
of the elliptic curve that's going to

671
00:30:46,080 --> 00:30:48,240
bias your Randomness so what we do is we

672
00:30:48,240 --> 00:30:50,520
take the signature we hash it to map it

673
00:30:50,520 --> 00:30:55,260
to a uniform uh random string and so

674
00:30:55,260 --> 00:30:56,820
that's how you can verify it was

675
00:30:56,820 --> 00:30:58,679
properly derived you take the signature

676
00:30:58,679 --> 00:31:00,840
you validate the signature and then you

677
00:31:00,840 --> 00:31:02,880
hash it and you get the same Randomness

678
00:31:02,880 --> 00:31:04,500
and that's it

679
00:31:04,500 --> 00:31:07,080
thank you you're welcome and we have

680
00:31:07,080 --> 00:31:08,640
another question

681
00:31:08,640 --> 00:31:10,679
so usually in things like this there's

682
00:31:10,679 --> 00:31:12,840
an there's an input component there's

683
00:31:12,840 --> 00:31:14,580
the keys and then there's also an input

684
00:31:14,580 --> 00:31:16,559
component like the input to a PLS this

685
00:31:16,559 --> 00:31:18,600
message being signed in BLS signature or

686
00:31:18,600 --> 00:31:22,200
something is there a way to contribute

687
00:31:22,200 --> 00:31:25,440
not to the randomness of the keys I

688
00:31:25,440 --> 00:31:27,240
guess but to the randomness of the input

689
00:31:27,240 --> 00:31:28,679
so that you get a kind of a faster

690
00:31:28,679 --> 00:31:31,260
turnaround time in terms of knowing your

691
00:31:31,260 --> 00:31:33,960
contribution was included

692
00:31:33,960 --> 00:31:38,279
um without being a member I mean so

693
00:31:38,279 --> 00:31:41,220
currently I didn't go into the details

694
00:31:41,220 --> 00:31:42,720
too much but

695
00:31:42,720 --> 00:31:43,679
um

696
00:31:43,679 --> 00:31:48,480
only time or new entropy is contributed

697
00:31:48,480 --> 00:31:50,960
to the network is during key generation

698
00:31:50,960 --> 00:31:55,260
so the message is we are signing with

699
00:31:55,260 --> 00:31:58,559
the BLS signature scheme or the previous

700
00:31:58,559 --> 00:32:01,700
signature under round number

701
00:32:01,700 --> 00:32:05,580
that is fine as long as we still satisfy

702
00:32:05,580 --> 00:32:08,100
the security assumption that there is

703
00:32:08,100 --> 00:32:10,860
never a threshold number of Mal issues

704
00:32:10,860 --> 00:32:14,159
nodes but so you can you can you yeah we

705
00:32:14,159 --> 00:32:16,620
could add a way to make the signatures

706
00:32:16,620 --> 00:32:19,140
more and predictable by adding some

707
00:32:19,140 --> 00:32:21,480
random values to the

708
00:32:21,480 --> 00:32:24,419
messages we are signing

709
00:32:24,419 --> 00:32:26,700
currently it's not the case because it's

710
00:32:26,700 --> 00:32:28,200
difficult to

711
00:32:28,200 --> 00:32:31,019
agree to achieve consensus on a random

712
00:32:31,019 --> 00:32:33,419
value to include in the messages so

713
00:32:33,419 --> 00:32:35,880
currently the only time you get new

714
00:32:35,880 --> 00:32:39,779
entropy is during key generation yeah

715
00:32:39,779 --> 00:32:42,659
okay are there any more questions or is

716
00:32:42,659 --> 00:32:45,360
everything clear and answered

717
00:32:45,360 --> 00:32:46,740
on

718
00:32:46,740 --> 00:32:48,419
one more

719
00:32:48,419 --> 00:32:51,899
okay front micro

720
00:32:51,899 --> 00:32:54,000
um so you require a simple majority of

721
00:32:54,000 --> 00:32:55,200
the

722
00:32:55,200 --> 00:32:57,600
um parties

723
00:32:57,600 --> 00:32:59,580
um to reduce the random number can you

724
00:32:59,580 --> 00:33:01,200
scale that up to like a higher threshold

725
00:33:01,200 --> 00:33:04,019
if you want to be sure that he well I

726
00:33:04,019 --> 00:33:05,279
guess this has like liveness

727
00:33:05,279 --> 00:33:07,799
applications then

728
00:33:07,799 --> 00:33:10,860
so the league of entropy is doing

729
00:33:10,860 --> 00:33:13,740
resharings regularly to refresh the

730
00:33:13,740 --> 00:33:15,600
shares because of the threshold

731
00:33:15,600 --> 00:33:19,140
cryptography thingy so if we want to

732
00:33:19,140 --> 00:33:21,360
increase the size of the network we can

733
00:33:21,360 --> 00:33:24,600
add new nodes and change the threshold

734
00:33:24,600 --> 00:33:28,019
during the re-sharing yeah okay so it's

735
00:33:28,019 --> 00:33:30,600
it's possible but you need a threshold

736
00:33:30,600 --> 00:33:33,840
number of nodes to agree to do a region

737
00:33:33,840 --> 00:33:36,779
right but if you want to say um if you

738
00:33:36,779 --> 00:33:38,519
grow this set to like a really large

739
00:33:38,519 --> 00:33:40,620
number and then your if you want to

740
00:33:40,620 --> 00:33:41,940
reduce like the amount of trust that you

741
00:33:41,940 --> 00:33:44,399
have to like um right if you start

742
00:33:44,399 --> 00:33:46,260
accepting like worse or like less

743
00:33:46,260 --> 00:33:48,659
trusted instances and then you want to

744
00:33:48,659 --> 00:33:51,059
keep the threshold still High

745
00:33:51,059 --> 00:33:53,460
um then you maybe want to increase the

746
00:33:53,460 --> 00:33:55,380
threshold I suppose

747
00:33:55,380 --> 00:33:58,460
um yeah I suppose it so if we add more

748
00:33:58,460 --> 00:34:02,039
members and we would then trust them to

749
00:34:02,039 --> 00:34:05,220
be able to be trustworthy I mean we

750
00:34:05,220 --> 00:34:07,080
don't trust any single member in the

751
00:34:07,080 --> 00:34:10,739
network currently but if we

752
00:34:10,739 --> 00:34:13,500
you know add an easy way to get into the

753
00:34:13,500 --> 00:34:15,480
network somebody could try and add a lot

754
00:34:15,480 --> 00:34:17,339
of malicious nodes so that they would

755
00:34:17,339 --> 00:34:19,440
get a threshold number of malicious

756
00:34:19,440 --> 00:34:21,960
nodes So currently the network is really

757
00:34:21,960 --> 00:34:24,359
permission so you need to get approval

758
00:34:24,359 --> 00:34:26,399
to get in right you can't just join the

759
00:34:26,399 --> 00:34:28,379
network like that you need a threshold

760
00:34:28,379 --> 00:34:31,020
number of nodes to agree to onboard a

761
00:34:31,020 --> 00:34:33,899
new node and so yeah definitely if we

762
00:34:33,899 --> 00:34:36,560
were to increase the size to 100 or 200

763
00:34:36,560 --> 00:34:40,079
nodes we might want to increase the size

764
00:34:40,079 --> 00:34:42,719
of the threshold as well but the thing

765
00:34:42,719 --> 00:34:44,219
is currently

766
00:34:44,219 --> 00:34:46,619
um I had a slide about it actually the

767
00:34:46,619 --> 00:34:48,599
the network is trying to be fairly

768
00:34:48,599 --> 00:34:51,300
Diversified so we're trying to not be on

769
00:34:51,300 --> 00:34:53,760
a single continent we're trying to not

770
00:34:53,760 --> 00:34:57,359
run on a single cloud provider and so on

771
00:34:57,359 --> 00:34:59,760
and in the future we're also looking

772
00:34:59,760 --> 00:35:02,820
into having more implementations so that

773
00:35:02,820 --> 00:35:06,119
if there is a bag for example in the go

774
00:35:06,119 --> 00:35:08,520
implementation we would still have maybe

775
00:35:08,520 --> 00:35:11,940
the I don't know the rest on the python

776
00:35:11,940 --> 00:35:15,359
implementation working so yeah there are

777
00:35:15,359 --> 00:35:19,260
a lot yeah so you can you can play with

778
00:35:19,260 --> 00:35:21,180
the threshold but the larger the

779
00:35:21,180 --> 00:35:24,359
threshold is the more dangerous it gets

780
00:35:24,359 --> 00:35:27,000
for live nest because if AWS goes down

781
00:35:27,000 --> 00:35:28,920
suddenly the network would stop and

782
00:35:28,920 --> 00:35:30,300
that's something we really don't want to

783
00:35:30,300 --> 00:35:33,119
happen we want it to be very like high

784
00:35:33,119 --> 00:35:36,780
availability and doing its work every 30

785
00:35:36,780 --> 00:35:39,920
seconds you know so

786
00:35:42,839 --> 00:35:44,760
all right thank you for for creating

787
00:35:44,760 --> 00:35:47,220
this wonderful tool or toy

788
00:35:47,220 --> 00:35:49,920
um if I should like to look at this and

789
00:35:49,920 --> 00:35:51,960
I kind of like see really nice diversity

790
00:35:51,960 --> 00:35:54,720
across quite a few continents and and

791
00:35:54,720 --> 00:35:56,099
sort of like types of organizations

792
00:35:56,099 --> 00:35:59,220
on-premise off-premise and so on cloud

793
00:35:59,220 --> 00:36:00,960
um and I think of like how you would use

794
00:36:00,960 --> 00:36:03,960
this uh you could almost would it be

795
00:36:03,960 --> 00:36:05,700
fair to argue if you sort of like add a

796
00:36:05,700 --> 00:36:07,920
few let's say Asian South Africa or

797
00:36:07,920 --> 00:36:10,740
Australia you are essentially dumb

798
00:36:10,740 --> 00:36:13,200
because is there a fundamental reason to

799
00:36:13,200 --> 00:36:18,200
to go to a much larger number of nodes

800
00:36:18,780 --> 00:36:21,119
it's got so surround I'm not sure I'm

801
00:36:21,119 --> 00:36:23,579
getting the question well so so you're

802
00:36:23,579 --> 00:36:25,619
very far on your way already having a

803
00:36:25,619 --> 00:36:29,060
nice mix of clouds and on-premise

804
00:36:29,060 --> 00:36:31,260
for a lot of like attack models you're

805
00:36:31,260 --> 00:36:33,300
covered there

806
00:36:33,300 --> 00:36:34,740
um you also called quite a few countries

807
00:36:34,740 --> 00:36:36,300
there like ads from Asia add some

808
00:36:36,300 --> 00:36:37,740
Australia and you've basically got the

809
00:36:37,740 --> 00:36:39,119
whole whole world

810
00:36:39,119 --> 00:36:41,280
is there any fundamental technical or

811
00:36:41,280 --> 00:36:44,040
security reasons why you need more nodes

812
00:36:44,040 --> 00:36:46,079
than that like why it would be better to

813
00:36:46,079 --> 00:36:48,839
have 100 notes than just let's say 30

814
00:36:48,839 --> 00:36:51,599
and be finished with it

815
00:36:51,599 --> 00:36:54,359
um really no technical reasons mostly

816
00:36:54,359 --> 00:36:57,900
human reasons I guess do people trust

817
00:36:57,900 --> 00:37:00,720
cloudflare do people trust protocol lab

818
00:37:00,720 --> 00:37:04,140
do people trust ethereum Foundation do

819
00:37:04,140 --> 00:37:07,079
you trust the epfl university in

820
00:37:07,079 --> 00:37:09,300
Switzerland do you trust the UCL in

821
00:37:09,300 --> 00:37:12,180
London so

822
00:37:12,180 --> 00:37:14,520
it depends right it depends on your

823
00:37:14,520 --> 00:37:16,200
thread model and that kind of thing so

824
00:37:16,200 --> 00:37:19,440
having more nodes could increase the

825
00:37:19,440 --> 00:37:22,560
trust of some people in a network but at

826
00:37:22,560 --> 00:37:24,540
the same time it would be more difficult

827
00:37:24,540 --> 00:37:26,220
to keep up with the liveness So

828
00:37:26,220 --> 00:37:28,440
currently we're not planning to get to

829
00:37:28,440 --> 00:37:31,200
100 or 200 nodes the goal would be maybe

830
00:37:31,200 --> 00:37:34,380
to achieve more diversity diversity a

831
00:37:34,380 --> 00:37:37,200
more diverse set of nodes like heading

832
00:37:37,200 --> 00:37:40,560
um yeah Australia had in Japan and so on

833
00:37:40,560 --> 00:37:43,440
to the list would be great uh a really

834
00:37:43,440 --> 00:37:45,300
nice thing as well with Iran is since

835
00:37:45,300 --> 00:37:48,119
you just need a threshold number of

836
00:37:48,119 --> 00:37:50,700
nodes to communicate with each other to

837
00:37:50,700 --> 00:37:51,960
achieve

838
00:37:51,960 --> 00:37:56,579
um to get the final Beacon you could get

839
00:37:56,579 --> 00:37:59,099
um loads in America talking to each

840
00:37:59,099 --> 00:38:01,079
other generating the exact same

841
00:38:01,079 --> 00:38:02,940
Randomness than the node that are in

842
00:38:02,940 --> 00:38:06,420
Europa so you don't get too impacted by

843
00:38:06,420 --> 00:38:09,540
the lag if you have enough nodes but

844
00:38:09,540 --> 00:38:11,040
that's a very interesting research

845
00:38:11,040 --> 00:38:12,540
project we're actually looking into

846
00:38:12,540 --> 00:38:15,480
right now all the network and the lag is

847
00:38:15,480 --> 00:38:17,480
actually impacting us

848
00:38:17,480 --> 00:38:20,520
because with a such a network running on

849
00:38:20,520 --> 00:38:23,099
a global scale it can become somewhat of

850
00:38:23,099 --> 00:38:25,859
an issue So currently with 800

851
00:38:25,859 --> 00:38:28,800
milliseconds of flag on producing the

852
00:38:28,800 --> 00:38:31,560
next round so we couldn't go below one

853
00:38:31,560 --> 00:38:32,359
second

854
00:38:32,359 --> 00:38:36,359
with proper warranties of availability

855
00:38:36,359 --> 00:38:39,960
and liveness right but um yeah so it's

856
00:38:39,960 --> 00:38:41,579
pretty cool to have such a Global

857
00:38:41,579 --> 00:38:42,480
Network

858
00:38:42,480 --> 00:38:45,119
and yeah

859
00:38:45,119 --> 00:38:46,640
okay

860
00:38:46,640 --> 00:38:49,500
if there are no more questions

861
00:38:49,500 --> 00:38:53,300
thank you very much again for the talk

