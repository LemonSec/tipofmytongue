1
00:00:01,280 --> 00:00:12,559
[Music]

2
00:00:14,960 --> 00:00:16,480
the talk now

3
00:00:16,480 --> 00:00:19,279
will be about uh bring your own identity

4
00:00:19,279 --> 00:00:21,680
how you could run your own

5
00:00:21,680 --> 00:00:24,320
identity server and use that to

6
00:00:24,320 --> 00:00:27,199
authenticate against other

7
00:00:27,199 --> 00:00:29,519
services like google or microsoft or

8
00:00:29,519 --> 00:00:30,960
whatever

9
00:00:30,960 --> 00:00:33,440
and how you could enable this trust

10
00:00:33,440 --> 00:00:35,680
relationship a topic that is

11
00:00:35,680 --> 00:00:38,960
rather complicated rather um

12
00:00:38,960 --> 00:00:41,760
very interesting in the current times

13
00:00:41,760 --> 00:00:43,120
and

14
00:00:43,120 --> 00:00:45,600
yeah all or more

15
00:00:45,600 --> 00:00:47,200
i'm not qualified to talk this so we

16
00:00:47,200 --> 00:00:49,520
have two speakers with rick van rein and

17
00:00:49,520 --> 00:00:52,079
henry manson so please give them a very

18
00:00:52,079 --> 00:00:56,440
very warm round of applause

19
00:00:59,440 --> 00:01:00,879
thank you

20
00:01:00,879 --> 00:01:02,320
um

21
00:01:02,320 --> 00:01:04,080
i have a smearable very small business i

22
00:01:04,080 --> 00:01:05,840
do stuff with cryptography open source

23
00:01:05,840 --> 00:01:09,600
protocols i'm probably the only one here

24
00:01:09,600 --> 00:01:11,680
but over the years i've

25
00:01:11,680 --> 00:01:13,840
constantly been annoyed by how poor

26
00:01:13,840 --> 00:01:16,640
authentication has been organized

27
00:01:16,640 --> 00:01:18,560
also in open source actually and open

28
00:01:18,560 --> 00:01:21,200
protocols i think it should be trivial

29
00:01:21,200 --> 00:01:23,759
as trivial as dnses and i know dns is

30
00:01:23,759 --> 00:01:26,479
complex but for an end user it's not

31
00:01:26,479 --> 00:01:29,119
noticeable and that's the level of

32
00:01:29,119 --> 00:01:30,640
understanding you want to reach because

33
00:01:30,640 --> 00:01:32,400
then people don't

34
00:01:32,400 --> 00:01:34,159
mess it up so easily

35
00:01:34,159 --> 00:01:36,400
and that dns is quite simple right you

36
00:01:36,400 --> 00:01:38,320
have an authority defying the names

37
00:01:38,320 --> 00:01:39,840
exporting them over the network and

38
00:01:39,840 --> 00:01:41,360
there's a resolver that can actually

39
00:01:41,360 --> 00:01:43,200
verify yes these are the names and

40
00:01:43,200 --> 00:01:47,200
thanks to dns seconds even secure

41
00:01:47,759 --> 00:01:51,200
why don't we do this with authentication

42
00:01:51,200 --> 00:01:53,520
and if we can please give users maximum

43
00:01:53,520 --> 00:01:55,520
control over their online presence

44
00:01:55,520 --> 00:01:56,320
because

45
00:01:56,320 --> 00:01:58,479
i don't like if somebody else decides

46
00:01:58,479 --> 00:02:00,479
who i am and whether i'm allowed to

47
00:02:00,479 --> 00:02:02,240
continue to exist

48
00:02:02,240 --> 00:02:04,640
or whether i'm allowed to be removed

49
00:02:04,640 --> 00:02:05,290
from the scene

50
00:02:05,290 --> 00:02:06,719
[Music]

51
00:02:06,719 --> 00:02:08,399
i don't know if anyone if you ever

52
00:02:08,399 --> 00:02:10,399
deleted the count for somebody who

53
00:02:10,399 --> 00:02:12,720
perished who died and that's terrible

54
00:02:12,720 --> 00:02:14,160
you have to jump through all sorts of

55
00:02:14,160 --> 00:02:16,720
hoops with the third party providers

56
00:02:16,720 --> 00:02:18,480
also um

57
00:02:18,480 --> 00:02:20,720
if you're a security officer officer in

58
00:02:20,720 --> 00:02:22,239
the company you would like to set a

59
00:02:22,239 --> 00:02:24,160
certain security level say always

60
00:02:24,160 --> 00:02:26,879
two-factor authentication for example

61
00:02:26,879 --> 00:02:28,319
what we see now is that service

62
00:02:28,319 --> 00:02:30,239
providers like github for example

63
00:02:30,239 --> 00:02:31,440
decides

64
00:02:31,440 --> 00:02:33,680
you need to start using second factor

65
00:02:33,680 --> 00:02:35,440
authentication because we think it's

66
00:02:35,440 --> 00:02:37,040
important but

67
00:02:37,040 --> 00:02:38,879
as a as a user you want to make that

68
00:02:38,879 --> 00:02:40,239
decision

69
00:02:40,239 --> 00:02:42,480
um

70
00:02:42,800 --> 00:02:44,080
so

71
00:02:44,080 --> 00:02:46,080
basically what we've been working on

72
00:02:46,080 --> 00:02:48,000
over the past few years is something

73
00:02:48,000 --> 00:02:50,640
that we bring to users explain to users

74
00:02:50,640 --> 00:02:52,400
bring your own identity you're just

75
00:02:52,400 --> 00:02:54,800
someone at your own domain name like you

76
00:02:54,800 --> 00:02:56,560
have an email address under your own

77
00:02:56,560 --> 00:02:58,640
domain name but how we can make this

78
00:02:58,640 --> 00:03:00,800
happen with identity

79
00:03:00,800 --> 00:03:04,080
this should be trivial and it can be

80
00:03:04,080 --> 00:03:05,040
because

81
00:03:05,040 --> 00:03:06,000
every

82
00:03:06,000 --> 00:03:08,640
relying party can can connect securely

83
00:03:08,640 --> 00:03:11,200
to any other domain using dns hectane

84
00:03:11,200 --> 00:03:12,959
and tls we have the infrastructure to

85
00:03:12,959 --> 00:03:14,480
know who we are talking to to what

86
00:03:14,480 --> 00:03:16,080
domain we're talking

87
00:03:16,080 --> 00:03:18,800
and there are standard sv records for

88
00:03:18,800 --> 00:03:21,040
quite a few identity providers kerberos

89
00:03:21,040 --> 00:03:23,280
this ldap this diameter

90
00:03:23,280 --> 00:03:25,519
diameter is radius but designed for this

91
00:03:25,519 --> 00:03:27,760
sort of crossover thing so it's

92
00:03:27,760 --> 00:03:29,680
the easier choice in this case but there

93
00:03:29,680 --> 00:03:31,360
are standard as fee records for this

94
00:03:31,360 --> 00:03:33,760
sort of thing

95
00:03:33,760 --> 00:03:35,840
that together means you can trust you

96
00:03:35,840 --> 00:03:37,680
can find an identity provider under

97
00:03:37,680 --> 00:03:40,159
someone else's domain and trust it

98
00:03:40,159 --> 00:03:41,040
and

99
00:03:41,040 --> 00:03:43,120
this identity provider then of course

100
00:03:43,120 --> 00:03:45,280
has the prerogative on the usernames

101
00:03:45,280 --> 00:03:46,879
whether john exists and whether joe

102
00:03:46,879 --> 00:03:48,239
exists

103
00:03:48,239 --> 00:03:51,040
it can be trivial

104
00:03:51,040 --> 00:03:54,400
in practice it's far from trivial i'm

105
00:03:54,400 --> 00:03:56,159
looking at really big screen trying to

106
00:03:56,159 --> 00:03:57,840
read it i shouldn't

107
00:03:57,840 --> 00:04:01,360
um yeah i know so

108
00:04:01,360 --> 00:04:03,120
credential handling is very often done

109
00:04:03,120 --> 00:04:04,799
in applications and that's a problem

110
00:04:04,799 --> 00:04:07,200
because an application programmer has

111
00:04:07,200 --> 00:04:08,720
quite different

112
00:04:08,720 --> 00:04:11,200
ideas and wishes and things he wants to

113
00:04:11,200 --> 00:04:14,239
do than a security programmer so what we

114
00:04:14,239 --> 00:04:16,320
end up with is passwords the lowest

115
00:04:16,320 --> 00:04:17,759
common denominator if we're doing that

116
00:04:17,759 --> 00:04:19,600
all the time i can't make a mistake if i

117
00:04:19,600 --> 00:04:22,239
do that too

118
00:04:22,240 --> 00:04:23,600
shouldn't we just

119
00:04:23,600 --> 00:04:26,000
tell the application programmer we

120
00:04:26,000 --> 00:04:28,240
authenticated this guy this identity you

121
00:04:28,240 --> 00:04:30,880
can trust that should be enough

122
00:04:30,880 --> 00:04:33,440
um credentials managed by foreign

123
00:04:33,440 --> 00:04:35,919
parties i think are a disaster

124
00:04:35,919 --> 00:04:38,639
um you can't withdraw you can't expire

125
00:04:38,639 --> 00:04:40,000
you can't

126
00:04:40,000 --> 00:04:42,880
why can't i make an identity that

127
00:04:42,880 --> 00:04:45,120
expires in three weeks ideal for web

128
00:04:45,120 --> 00:04:46,800
shops right

129
00:04:46,800 --> 00:04:48,160
also

130
00:04:48,160 --> 00:04:50,240
if other parties manage them they need a

131
00:04:50,240 --> 00:04:52,160
recovery protocol

132
00:04:52,160 --> 00:04:53,919
you can't have a local administrator

133
00:04:53,919 --> 00:04:55,680
overriding things

134
00:04:55,680 --> 00:04:58,000
so you need some mechanisms and some

135
00:04:58,000 --> 00:05:00,400
jumping through hoops to do this and you

136
00:05:00,400 --> 00:05:03,039
end up supplying communication details

137
00:05:03,039 --> 00:05:03,919
which

138
00:05:03,919 --> 00:05:05,759
means a privacy

139
00:05:05,759 --> 00:05:07,360
problem

140
00:05:07,360 --> 00:05:08,639
so um

141
00:05:08,639 --> 00:05:11,840
and there are many solutions that look

142
00:05:11,840 --> 00:05:13,520
like the sort of thing we're doing but i

143
00:05:13,520 --> 00:05:15,520
found that most of them

144
00:05:15,520 --> 00:05:18,000
um are web only or in other ways

145
00:05:18,000 --> 00:05:20,240
protocol specific but usually that

146
00:05:20,240 --> 00:05:23,039
leads to web only meaning imap has to

147
00:05:23,039 --> 00:05:25,199
reinvent the wheel meaning just about

148
00:05:25,199 --> 00:05:28,639
any protocol has to do it again

149
00:05:30,000 --> 00:05:32,160
so um

150
00:05:32,160 --> 00:05:34,080
in terms of technology i used i don't

151
00:05:34,080 --> 00:05:35,759
say bring your own identity because

152
00:05:35,759 --> 00:05:37,440
that's like how users would experience

153
00:05:37,440 --> 00:05:40,160
it but we speak of realm crossover

154
00:05:40,160 --> 00:05:42,720
and there are ways of doing this for

155
00:05:42,720 --> 00:05:44,800
quite a few common authentication

156
00:05:44,800 --> 00:05:48,000
protocols already and we made small

157
00:05:48,000 --> 00:05:50,000
extensions to existing standards and

158
00:05:50,000 --> 00:05:52,800
could then make this happen cecil in

159
00:05:52,800 --> 00:05:54,639
case you don't know it it means that the

160
00:05:54,639 --> 00:05:56,400
server sends you a list of mechanisms

161
00:05:56,400 --> 00:05:58,560
you might lose use might be something

162
00:05:58,560 --> 00:06:01,280
like plain text or it might be gss api

163
00:06:01,280 --> 00:06:03,360
or might be digest md5

164
00:06:03,360 --> 00:06:05,199
it just gives you a list and the client

165
00:06:05,199 --> 00:06:08,560
chooses with which mechanism to to use

166
00:06:08,560 --> 00:06:10,560
and then they start passing tokens back

167
00:06:10,560 --> 00:06:12,479
and forth interpreted

168
00:06:12,479 --> 00:06:14,319
through that mechanism

169
00:06:14,319 --> 00:06:16,080
until the server says yeah you're

170
00:06:16,080 --> 00:06:19,440
welcome well no you're not

171
00:06:19,600 --> 00:06:21,440
this is a very generic thing and it

172
00:06:21,440 --> 00:06:23,840
allows you to negotiate what you want to

173
00:06:23,840 --> 00:06:26,240
do you might go for a simple password or

174
00:06:26,240 --> 00:06:28,639
you might go for something as fancy as

175
00:06:28,639 --> 00:06:29,919
coveralls

176
00:06:29,919 --> 00:06:31,600
kerberos in case you think it's

177
00:06:31,600 --> 00:06:33,759
old-fashioned let me rephrase that into

178
00:06:33,759 --> 00:06:36,240
old and fashionable

179
00:06:36,240 --> 00:06:38,080
it works with symmetric keys so in a

180
00:06:38,080 --> 00:06:40,000
trivial way it's always been quantum

181
00:06:40,000 --> 00:06:41,280
proof

182
00:06:41,280 --> 00:06:44,000
and it's already been designed to prove

183
00:06:44,000 --> 00:06:47,520
a campus with curious innovative

184
00:06:47,520 --> 00:06:48,800
students

185
00:06:48,800 --> 00:06:50,319
pretty much what we have on the on the

186
00:06:50,319 --> 00:06:51,919
internet today where everybody is

187
00:06:51,919 --> 00:06:54,960
challenging security over time and it's

188
00:06:54,960 --> 00:06:56,880
with to the test of time with of course

189
00:06:56,880 --> 00:06:59,039
crypto updates

190
00:06:59,039 --> 00:07:00,000
um

191
00:07:00,000 --> 00:07:02,160
and lastly certificates can be used for

192
00:07:02,160 --> 00:07:04,479
tls signing encryption and we also see

193
00:07:04,479 --> 00:07:06,400
ways of doing realm growth crossover for

194
00:07:06,400 --> 00:07:08,479
that so i'm going to talk about these

195
00:07:08,479 --> 00:07:11,360
three realm crossover mechanisms

196
00:07:11,360 --> 00:07:13,440
and hungry later on is going to one of

197
00:07:13,440 --> 00:07:15,440
them

198
00:07:15,440 --> 00:07:17,280
um so for sassel

199
00:07:17,280 --> 00:07:20,720
um sasso is embedded in just about any

200
00:07:20,720 --> 00:07:23,440
uh authentication protocol it's amazing

201
00:07:23,440 --> 00:07:25,280
it's almost everywhere

202
00:07:25,280 --> 00:07:26,560
so if you can

203
00:07:26,560 --> 00:07:28,800
support sassel it's wonderful

204
00:07:28,800 --> 00:07:31,360
i know http doesn't have sassel so we

205
00:07:31,360 --> 00:07:33,120
built that don't worry we've got you

206
00:07:33,120 --> 00:07:34,560
covered

207
00:07:34,560 --> 00:07:35,840
um

208
00:07:35,840 --> 00:07:38,400
and to make this work we designed a new

209
00:07:38,400 --> 00:07:40,800
mechanism for sasel that's one of the

210
00:07:40,800 --> 00:07:43,199
extensions we made it's

211
00:07:43,199 --> 00:07:45,360
a pretty trivial extension that anyone

212
00:07:45,360 --> 00:07:47,039
can make basically we call that essex

213
00:07:47,039 --> 00:07:48,479
over plus

214
00:07:48,479 --> 00:07:50,400
and that's like an end-to-end tunnel

215
00:07:50,400 --> 00:07:52,720
that wraps around a standard social

216
00:07:52,720 --> 00:07:55,599
exchange and i'll show later on why

217
00:07:55,599 --> 00:07:56,560
and

218
00:07:56,560 --> 00:07:58,560
basically you have an intimate server

219
00:07:58,560 --> 00:08:01,199
that wants to use something that

220
00:08:01,199 --> 00:08:04,240
um passes this cecil and then in the end

221
00:08:04,240 --> 00:08:06,720
knows that you that he's talking to john

222
00:08:06,720 --> 00:08:08,479
example.com

223
00:08:08,479 --> 00:08:10,160
so this is from my internet draft so

224
00:08:10,160 --> 00:08:13,120
that's why it's a ascii art picture

225
00:08:13,120 --> 00:08:14,800
is it readable

226
00:08:14,800 --> 00:08:16,800
good thanks

227
00:08:16,800 --> 00:08:18,639
so let's say the application at hand is

228
00:08:18,639 --> 00:08:20,639
email but keep in mind it could be

229
00:08:20,639 --> 00:08:23,440
anything but let's say we want to have

230
00:08:23,440 --> 00:08:25,599
an imap server for a group and it's

231
00:08:25,599 --> 00:08:27,599
hosted under some sort of domain

232
00:08:27,599 --> 00:08:28,800
somewhere

233
00:08:28,800 --> 00:08:30,080
and john

234
00:08:30,080 --> 00:08:32,159
who has an identity under example.com

235
00:08:32,159 --> 00:08:33,839
wants to use that

236
00:08:33,839 --> 00:08:36,320
and this will be the identity provider

237
00:08:36,320 --> 00:08:38,240
for example.com

238
00:08:38,240 --> 00:08:40,958
so john and example.com have some

239
00:08:40,958 --> 00:08:42,719
somewhere sometime in the past set up an

240
00:08:42,719 --> 00:08:44,000
account

241
00:08:44,000 --> 00:08:45,920
now what john does is he says i want to

242
00:08:45,920 --> 00:08:47,600
talk to the time app server number says

243
00:08:47,600 --> 00:08:49,040
yeah like you first got to log on

244
00:08:49,040 --> 00:08:50,560
because i need to know whether you can

245
00:08:50,560 --> 00:08:52,959
see this group and perhaps it wants to

246
00:08:52,959 --> 00:08:56,399
see what mills you've already seen

247
00:08:56,399 --> 00:08:59,200
so it starts successful exchange

248
00:08:59,200 --> 00:09:01,120
and what the foreign server does is

249
00:09:01,120 --> 00:09:03,200
pretty much it says okay i see sx over

250
00:09:03,200 --> 00:09:05,040
plus being used that means i'm not going

251
00:09:05,040 --> 00:09:07,440
to resolve the password locally like web

252
00:09:07,440 --> 00:09:09,120
servers very often do

253
00:09:09,120 --> 00:09:11,519
i'm going to pass on the request and the

254
00:09:11,519 --> 00:09:13,120
essex over plus has a beginning where

255
00:09:13,120 --> 00:09:15,600
you can see what domain it goes to

256
00:09:15,600 --> 00:09:18,640
so it's passed on to john's domain it

257
00:09:18,640 --> 00:09:20,800
just says example.com so it knows it can

258
00:09:20,800 --> 00:09:22,640
pass it on and it does all the things i

259
00:09:22,640 --> 00:09:24,959
just mentioned as a vlookup tsa it's

260
00:09:24,959 --> 00:09:26,399
okay

261
00:09:26,399 --> 00:09:28,480
and then just passes on the samsung it

262
00:09:28,480 --> 00:09:30,800
just sits in the middle pretty dumb just

263
00:09:30,800 --> 00:09:32,880
passing back and forth to social

264
00:09:32,880 --> 00:09:34,640
packages

265
00:09:34,640 --> 00:09:36,959
and at support the identity domain says

266
00:09:36,959 --> 00:09:37,839
yep

267
00:09:37,839 --> 00:09:39,839
this is indeed an account that we have

268
00:09:39,839 --> 00:09:41,440
and it's called john

269
00:09:41,440 --> 00:09:43,279
it doesn't say you're not example.com

270
00:09:43,279 --> 00:09:45,600
because he knows that he validated that

271
00:09:45,600 --> 00:09:47,519
using the sfe and all that all that

272
00:09:47,519 --> 00:09:48,640
stuff

273
00:09:48,640 --> 00:09:49,440
um

274
00:09:49,440 --> 00:09:51,920
so the identity domain only says stick

275
00:09:51,920 --> 00:09:53,440
john in front

276
00:09:53,440 --> 00:09:54,880
so now the foreign server knows it's

277
00:09:54,880 --> 00:09:57,040
talking due to john at example.com it

278
00:09:57,040 --> 00:09:59,120
can relay back the okay

279
00:09:59,120 --> 00:10:00,800
and everything can happen as it is

280
00:10:00,800 --> 00:10:02,240
[Music]

281
00:10:02,240 --> 00:10:03,120
so

282
00:10:03,120 --> 00:10:06,240
what did we need to do for this

283
00:10:06,240 --> 00:10:07,360
um

284
00:10:07,360 --> 00:10:09,760
i meant to use diameter and it is like

285
00:10:09,760 --> 00:10:13,120
radius but rage is optimized for trusted

286
00:10:13,120 --> 00:10:15,120
internal networks and diameter is more

287
00:10:15,120 --> 00:10:16,560
optimized for

288
00:10:16,560 --> 00:10:18,560
realm results sort of thing so

289
00:10:18,560 --> 00:10:20,800
mutually untrusting domains

290
00:10:20,800 --> 00:10:23,600
so we needed to define a couple free

291
00:10:23,600 --> 00:10:25,839
address value value

292
00:10:25,839 --> 00:10:28,079
attribute value pairs to carry

293
00:10:28,079 --> 00:10:29,930
the samsung content back and forth

294
00:10:29,930 --> 00:10:31,040
[Music]

295
00:10:31,040 --> 00:10:33,519
that's pretty much all plus of course

296
00:10:33,519 --> 00:10:35,600
the sx over plus mechanism

297
00:10:35,600 --> 00:10:37,200
and we've implemented this stuff and it

298
00:10:37,200 --> 00:10:39,200
works like crazy

299
00:10:39,200 --> 00:10:41,680
as i mentioned um we thought the cool to

300
00:10:41,680 --> 00:10:43,920
demo this with http so that's what we'll

301
00:10:43,920 --> 00:10:46,640
show you so we have an authentication

302
00:10:46,640 --> 00:10:48,880
mechanism for http that actually pass

303
00:10:48,880 --> 00:10:50,320
the sassl

304
00:10:50,320 --> 00:10:53,920
so then you get in this picture

305
00:10:54,720 --> 00:10:58,720
web browser speaking sassal over http

306
00:10:58,720 --> 00:11:01,279
to to a web server and that in the back

307
00:11:01,279 --> 00:11:05,279
end can use the identity domain

308
00:11:05,279 --> 00:11:07,200
and something else i'm also doing now is

309
00:11:07,200 --> 00:11:09,519
i'm building it into pam so you could

310
00:11:09,519 --> 00:11:12,399
use in sudo for example or in

311
00:11:12,399 --> 00:11:14,320
the console access from container for

312
00:11:14,320 --> 00:11:15,600
example

313
00:11:15,600 --> 00:11:17,760
um that also means your very simple

314
00:11:17,760 --> 00:11:19,120
small container doesn't need to know

315
00:11:19,120 --> 00:11:21,279
what counts it can just forward it to a

316
00:11:21,279 --> 00:11:23,600
trusted internal

317
00:11:23,600 --> 00:11:25,920
node

318
00:11:26,160 --> 00:11:29,279
um cabros is entirely different but i

319
00:11:29,279 --> 00:11:31,680
think this is the goal path for for what

320
00:11:31,680 --> 00:11:33,120
you want to do because

321
00:11:33,120 --> 00:11:35,200
kerberos does single sign-on you log on

322
00:11:35,200 --> 00:11:36,560
in the beginning of the day you get a

323
00:11:36,560 --> 00:11:38,480
sort of meta ticket and you use it for

324
00:11:38,480 --> 00:11:40,320
the rest of the day to get additional

325
00:11:40,320 --> 00:11:44,240
tickets without effort

326
00:11:45,200 --> 00:11:47,200
kerberos even has realm crossover

327
00:11:47,200 --> 00:11:49,519
building but it's static

328
00:11:49,519 --> 00:11:51,440
meaning i ask my

329
00:11:51,440 --> 00:11:53,680
kerberos controls

330
00:11:53,680 --> 00:11:56,320
it's called key distribution center so i

331
00:11:56,320 --> 00:11:58,480
asked my kerberos realm controller

332
00:11:58,480 --> 00:12:00,800
please hand me a ticket for a service i

333
00:12:00,800 --> 00:12:02,720
now want to see and it says oh gosh i

334
00:12:02,720 --> 00:12:04,320
don't know that one

335
00:12:04,320 --> 00:12:07,200
but i know the realm that does so it

336
00:12:07,200 --> 00:12:09,040
says i'm going to give you a key that i

337
00:12:09,040 --> 00:12:10,399
share with that realm and you can use

338
00:12:10,399 --> 00:12:12,560
that to ask that realm

339
00:12:12,560 --> 00:12:14,880
for control so then you have

340
00:12:14,880 --> 00:12:17,839
the client identity uses um it's its own

341
00:12:17,839 --> 00:12:20,079
realm and the service is at another

342
00:12:20,079 --> 00:12:21,040
realm

343
00:12:21,040 --> 00:12:22,720
and this is real course but it uses

344
00:12:22,720 --> 00:12:23,680
static keys that have been

345
00:12:23,680 --> 00:12:26,079
pre-configured like shall we say

346
00:12:26,079 --> 00:12:27,760
the name of marquette yeah let's do that

347
00:12:27,760 --> 00:12:30,000
and then it's set

348
00:12:30,000 --> 00:12:33,440
all we had to do to d to extend this

349
00:12:33,440 --> 00:12:34,639
is to

350
00:12:34,639 --> 00:12:36,639
basically say first of all if you ask

351
00:12:36,639 --> 00:12:38,639
for a service that i don't know i want

352
00:12:38,639 --> 00:12:40,320
to know what realm it is what covers

353
00:12:40,320 --> 00:12:42,639
realm so what domain

354
00:12:42,639 --> 00:12:44,160
so it needs to be able to look that up

355
00:12:44,160 --> 00:12:47,839
in dns well that's a text record it's

356
00:12:47,839 --> 00:12:49,200
pretty simple

357
00:12:49,200 --> 00:12:50,560
except when you need to pass it through

358
00:12:50,560 --> 00:12:54,800
itf but um it's a pretty simple idea

359
00:12:54,800 --> 00:12:57,600
um and then the next thing is these two

360
00:12:57,600 --> 00:13:00,480
cover servers when they see gosh you're

361
00:13:00,480 --> 00:13:03,120
asking me for surface through dns i can

362
00:13:03,120 --> 00:13:06,000
look up what realm it has but now i need

363
00:13:06,000 --> 00:13:07,839
to exchange a key

364
00:13:07,839 --> 00:13:10,000
so the two

365
00:13:10,000 --> 00:13:11,200
key key

366
00:13:11,200 --> 00:13:13,279
distribution centers so the

367
00:13:13,279 --> 00:13:15,360
realm controllers for kerberos get in

368
00:13:15,360 --> 00:13:17,680
contact and do a key exchange which

369
00:13:17,680 --> 00:13:20,160
basically is a key extraction facility

370
00:13:20,160 --> 00:13:23,360
that's standardized in rfc 5c of

371
00:13:23,360 --> 00:13:25,200
o5

372
00:13:25,200 --> 00:13:27,360
basically they use the master key

373
00:13:27,360 --> 00:13:29,600
add some seeding and add some strings

374
00:13:29,600 --> 00:13:31,519
and that ends up being

375
00:13:31,519 --> 00:13:34,000
a key that the two end points have

376
00:13:34,000 --> 00:13:36,399
without explicitly passing it it's

377
00:13:36,399 --> 00:13:38,000
lovely mechanism

378
00:13:38,000 --> 00:13:40,639
and from then on it might be for three

379
00:13:40,639 --> 00:13:42,720
weeks for example and

380
00:13:42,720 --> 00:13:46,000
the client realm would do that

381
00:13:46,000 --> 00:13:47,360
for um

382
00:13:47,360 --> 00:13:49,519
um or everyone in the client realm can

383
00:13:49,519 --> 00:13:51,600
use these keys to address any surface in

384
00:13:51,600 --> 00:13:53,040
the surface realm

385
00:13:53,040 --> 00:13:54,240
and of course it might also be done the

386
00:13:54,240 --> 00:13:56,880
other way around but that's independent

387
00:13:56,880 --> 00:13:59,360
um so this is a really efficient uh

388
00:13:59,360 --> 00:14:02,399
system and also covers bloody fast so

389
00:14:02,399 --> 00:14:04,240
after the first has come through you

390
00:14:04,240 --> 00:14:05,120
really

391
00:14:05,120 --> 00:14:06,320
have

392
00:14:06,320 --> 00:14:09,120
very fast access to a remote surface

393
00:14:09,120 --> 00:14:11,199
and this conserves the internet that's

394
00:14:11,199 --> 00:14:13,199
pretty much the idea the entire internet

395
00:14:13,199 --> 00:14:15,440
can use this mechanism and use kerberos

396
00:14:15,440 --> 00:14:17,600
for all their authentication that

397
00:14:17,600 --> 00:14:19,600
something covers can do now

398
00:14:19,600 --> 00:14:21,600
so those are a few very simple things we

399
00:14:21,600 --> 00:14:22,639
added

400
00:14:22,639 --> 00:14:24,639
to make this possible

401
00:14:24,639 --> 00:14:26,240
certificates we haven't done much on

402
00:14:26,240 --> 00:14:28,839
this but we understand how to do this

403
00:14:28,839 --> 00:14:32,480
um certificates have these funny names

404
00:14:32,480 --> 00:14:34,320
in their subject right

405
00:14:34,320 --> 00:14:37,199
they're actually an ldap location

406
00:14:37,199 --> 00:14:39,440
so they would look like user id is john

407
00:14:39,440 --> 00:14:41,680
and maybe organizational unit an

408
00:14:41,680 --> 00:14:44,000
organization or whatever and then the

409
00:14:44,000 --> 00:14:45,600
domain is split in a number of

410
00:14:45,600 --> 00:14:47,760
components the domain is very long i

411
00:14:47,760 --> 00:14:50,959
need to walk along and for it but this

412
00:14:50,959 --> 00:14:53,920
is basically a location in ldap

413
00:14:53,920 --> 00:14:56,160
and that is standardized

414
00:14:56,160 --> 00:14:58,880
that is just something we don't do very

415
00:14:58,880 --> 00:15:01,040
often but it is a standard

416
00:15:01,040 --> 00:15:03,760
and even if you know the domain part

417
00:15:03,760 --> 00:15:06,000
it has been standardized that you put

418
00:15:06,000 --> 00:15:07,839
ldtp in front

419
00:15:07,839 --> 00:15:10,160
find a find sov record and then look up

420
00:15:10,160 --> 00:15:11,600
the ldap server

421
00:15:11,600 --> 00:15:13,920
of course ldap can be encrypted with tls

422
00:15:13,920 --> 00:15:15,839
after starting less call

423
00:15:15,839 --> 00:15:18,480
and then you can continue with the

424
00:15:18,480 --> 00:15:20,959
um with dane to make sure that you're

425
00:15:20,959 --> 00:15:22,959
talking to the right one so yet again

426
00:15:22,959 --> 00:15:24,720
the same structures

427
00:15:24,720 --> 00:15:26,480
dina

428
00:15:26,480 --> 00:15:28,800
records and you're there you can look up

429
00:15:28,800 --> 00:15:30,720
things because

430
00:15:30,720 --> 00:15:33,199
these are locations for objects and they

431
00:15:33,199 --> 00:15:35,759
made may have attributes with x59

432
00:15:35,759 --> 00:15:36,959
certificates

433
00:15:36,959 --> 00:15:39,199
pgp keys so you can use signing your

434
00:15:39,199 --> 00:15:40,399
encryption

435
00:15:40,399 --> 00:15:42,639
with someone you haven't talked to

436
00:15:42,639 --> 00:15:43,920
before

437
00:15:43,920 --> 00:15:45,600
and the interesting thing is

438
00:15:45,600 --> 00:15:47,839
it uses a slightly different name but

439
00:15:47,839 --> 00:15:50,079
openpgp has this installed if you use

440
00:15:50,079 --> 00:15:54,240
minus r on pgp or gpg you can actually

441
00:15:54,240 --> 00:15:55,519
pull in

442
00:15:55,519 --> 00:15:57,279
based on the email address pull in that

443
00:15:57,279 --> 00:15:58,079
key

444
00:15:58,079 --> 00:16:00,959
if they set this up

445
00:16:01,199 --> 00:16:03,040
realm crossover can really be done very

446
00:16:03,040 --> 00:16:05,519
easily

447
00:16:07,040 --> 00:16:09,839
and an extra idea that we're trying to

448
00:16:09,839 --> 00:16:11,279
get through and i think people are

449
00:16:11,279 --> 00:16:12,480
listening

450
00:16:12,480 --> 00:16:13,680
is

451
00:16:13,680 --> 00:16:16,079
why should i use an external authority

452
00:16:16,079 --> 00:16:18,720
to sign the users in my domain i would

453
00:16:18,720 --> 00:16:20,240
very much like to be able to just

454
00:16:20,240 --> 00:16:23,120
publish a root certificate for so for a

455
00:16:23,120 --> 00:16:26,320
local ca and publish that uh

456
00:16:26,320 --> 00:16:28,639
with a dane record and client then could

457
00:16:28,639 --> 00:16:29,440
do

458
00:16:29,440 --> 00:16:31,759
that sort of things

459
00:16:31,759 --> 00:16:34,160
it's all in the pipeline we'll see

460
00:16:34,160 --> 00:16:35,360
imagine

461
00:16:35,360 --> 00:16:37,199
mail servers they talk to each other and

462
00:16:37,199 --> 00:16:38,560
when one domain sends something to

463
00:16:38,560 --> 00:16:39,839
another domain

464
00:16:39,839 --> 00:16:42,240
um they need to trust the identity

465
00:16:42,240 --> 00:16:44,000
that's been supplied to them imagine

466
00:16:44,000 --> 00:16:46,320
adding authentication here

467
00:16:46,320 --> 00:16:48,160
that definitely makes it more difficult

468
00:16:48,160 --> 00:16:50,000
to spam and it also makes it very

469
00:16:50,000 --> 00:16:52,079
pleasant to select because between the

470
00:16:52,079 --> 00:16:54,399
ones you trust and the ones you

471
00:16:54,399 --> 00:16:56,160
may trust or may not trust so it can

472
00:16:56,160 --> 00:16:57,680
make you switch between white listing

473
00:16:57,680 --> 00:16:59,920
and great listing your mail server can

474
00:16:59,920 --> 00:17:01,920
be really valuable

475
00:17:01,920 --> 00:17:03,920
and email of course was designed in the

476
00:17:03,920 --> 00:17:06,720
time that everybody trusted everyone

477
00:17:06,720 --> 00:17:09,199
with 32 computers online that was safe i

478
00:17:09,199 --> 00:17:10,640
suppose

479
00:17:10,640 --> 00:17:12,799
um but you can actually expand on that

480
00:17:12,799 --> 00:17:14,400
quite well

481
00:17:14,400 --> 00:17:15,520
and

482
00:17:15,520 --> 00:17:19,039
basically use these issues to retrofit

483
00:17:19,039 --> 00:17:22,079
more security on smtp

484
00:17:22,079 --> 00:17:24,640
sip that's used for calling

485
00:17:24,640 --> 00:17:26,559
not just audio but it's generally used

486
00:17:26,559 --> 00:17:28,640
for telephony and video calls and all of

487
00:17:28,640 --> 00:17:29,919
that

488
00:17:29,919 --> 00:17:31,840
with a pleasant thing that unlike all

489
00:17:31,840 --> 00:17:34,720
those platforms that we have like zoom

490
00:17:34,720 --> 00:17:37,440
um if you use ipv6 it's very trivial to

491
00:17:37,440 --> 00:17:40,240
make use to use direct connections

492
00:17:40,240 --> 00:17:42,559
so just call ulrikitopophotos.net

493
00:17:42,559 --> 00:17:44,640
you will be connected

494
00:17:44,640 --> 00:17:45,760
um

495
00:17:45,760 --> 00:17:47,840
imagine adam roenke's over there you

496
00:17:47,840 --> 00:17:49,440
know who's calling because you could

497
00:17:49,440 --> 00:17:50,400
check

498
00:17:50,400 --> 00:17:51,440
um

499
00:17:51,440 --> 00:17:53,280
you would know somebody is scamming you

500
00:17:53,280 --> 00:17:55,039
and you might even look up information

501
00:17:55,039 --> 00:17:57,200
in the enum records for example to see

502
00:17:57,200 --> 00:17:59,280
what kind of person it is and

503
00:17:59,280 --> 00:18:01,039
um you might even find key material

504
00:18:01,039 --> 00:18:02,400
there so you could start an encrypted

505
00:18:02,400 --> 00:18:03,840
call

506
00:18:03,840 --> 00:18:06,480
helpful i would say

507
00:18:06,480 --> 00:18:08,720
um

508
00:18:09,039 --> 00:18:11,600
http well henry is going to show all

509
00:18:11,600 --> 00:18:13,520
about that because i think that's one of

510
00:18:13,520 --> 00:18:15,679
the lovely

511
00:18:15,679 --> 00:18:17,840
yeah he came up with a wonderful way of

512
00:18:17,840 --> 00:18:19,840
building this into mozilla using a

513
00:18:19,840 --> 00:18:21,600
standard that is new but that was

514
00:18:21,600 --> 00:18:23,360
already in brazil but

515
00:18:23,360 --> 00:18:24,640
in theory it

516
00:18:24,640 --> 00:18:26,559
can be rolled out in other browsers as

517
00:18:26,559 --> 00:18:28,480
well but they also adopt this new

518
00:18:28,480 --> 00:18:29,760
standard

519
00:18:29,760 --> 00:18:30,799
um

520
00:18:30,799 --> 00:18:32,160
doing this for

521
00:18:32,160 --> 00:18:34,320
doing session for auth uh http

522
00:18:34,320 --> 00:18:36,160
authentication means you could add real

523
00:18:36,160 --> 00:18:37,520
course over there

524
00:18:37,520 --> 00:18:39,919
bring your own identity so log on to

525
00:18:39,919 --> 00:18:41,039
gmail

526
00:18:41,039 --> 00:18:42,720
if they if they would support this of

527
00:18:42,720 --> 00:18:45,600
course but log into gmail using your own

528
00:18:45,600 --> 00:18:48,720
identity managed under your own domain

529
00:18:48,720 --> 00:18:50,480
and you want to stop using it you just

530
00:18:50,480 --> 00:18:52,480
delete your identity on your own

531
00:18:52,480 --> 00:18:55,039
identity provider if you want aliases if

532
00:18:55,039 --> 00:18:56,240
you want to do stuff with groups

533
00:18:56,240 --> 00:18:59,120
whatever you want you're in control

534
00:18:59,120 --> 00:19:00,960
if you lose your password

535
00:19:00,960 --> 00:19:02,799
you go to your local admin you have it

536
00:19:02,799 --> 00:19:06,000
changed locally on your domain

537
00:19:06,000 --> 00:19:08,640
i think that beats having to

538
00:19:08,640 --> 00:19:10,960
having these 30 seconds expiration that

539
00:19:10,960 --> 00:19:13,039
gmo uses while they don't implement

540
00:19:13,039 --> 00:19:15,120
grain listing properly

541
00:19:15,120 --> 00:19:17,360
um and here too i mentioned that

542
00:19:17,360 --> 00:19:18,960
applications

543
00:19:18,960 --> 00:19:21,120
are um

544
00:19:21,120 --> 00:19:24,880
applications have problems with

545
00:19:24,880 --> 00:19:26,799
getting this information getting to the

546
00:19:26,799 --> 00:19:28,880
information a web server can easily set

547
00:19:28,880 --> 00:19:30,880
a number of environment variables and

548
00:19:30,880 --> 00:19:34,799
pass the information over to scripts

549
00:19:34,880 --> 00:19:35,760
so

550
00:19:35,760 --> 00:19:37,919
we made a simple protocol to allow you

551
00:19:37,919 --> 00:19:38,720
to

552
00:19:38,720 --> 00:19:40,480
if you need to implement diameter in

553
00:19:40,480 --> 00:19:42,480
every single server it's going to be a

554
00:19:42,480 --> 00:19:45,200
hassle because diameter isn't easy

555
00:19:45,200 --> 00:19:46,640
so we made a very simple wrap-up

556
00:19:46,640 --> 00:19:48,640
protocol that basically says we've got

557
00:19:48,640 --> 00:19:50,640
open authentication close requests and

558
00:19:50,640 --> 00:19:53,280
responses that can be multiplexed

559
00:19:53,280 --> 00:19:55,520
and it this turns out to be very easy to

560
00:19:55,520 --> 00:19:58,559
build into an application we also made

561
00:19:58,559 --> 00:20:00,160
instead of just a protocol we also made

562
00:20:00,160 --> 00:20:02,000
a library to use this

563
00:20:02,000 --> 00:20:03,520
and we have demonstrations for

564
00:20:03,520 --> 00:20:04,640
synchronous

565
00:20:04,640 --> 00:20:06,960
threaded and event driven applications

566
00:20:06,960 --> 00:20:08,559
so forked

567
00:20:08,559 --> 00:20:11,600
fog based thread-based and event-based

568
00:20:11,600 --> 00:20:13,280
and this

569
00:20:13,280 --> 00:20:15,520
usually we copy these things and get

570
00:20:15,520 --> 00:20:18,480
things working very quickly

571
00:20:18,480 --> 00:20:20,240
and what this assumes is that within

572
00:20:20,240 --> 00:20:22,720
your domain you have a central node

573
00:20:22,720 --> 00:20:26,159
that runs diameter and quick uh

574
00:20:26,159 --> 00:20:28,559
quick diacesal connects

575
00:20:28,559 --> 00:20:30,799
to to that node so you have one place

576
00:20:30,799 --> 00:20:32,159
that basically is the client for

577
00:20:32,159 --> 00:20:34,320
authentication

578
00:20:34,320 --> 00:20:37,200
and all the others basically just use

579
00:20:37,200 --> 00:20:39,440
that

580
00:20:40,480 --> 00:20:41,200
so

581
00:20:41,200 --> 00:20:43,200
we have had funding but we can also hand

582
00:20:43,200 --> 00:20:45,200
out some of that to other people and i'm

583
00:20:45,200 --> 00:20:47,679
very pr pleasant i'm very pleased to say

584
00:20:47,679 --> 00:20:48,480
that

585
00:20:48,480 --> 00:20:50,960
um our work on cecil works is well

586
00:20:50,960 --> 00:20:53,280
project name we had we did all sorts of

587
00:20:53,280 --> 00:20:55,039
nut and bolt work on sassel and it's

588
00:20:55,039 --> 00:20:57,039
been sponsored by anilnet

589
00:20:57,039 --> 00:20:59,039
including the pam module i just talked

590
00:20:59,039 --> 00:21:00,559
about um

591
00:21:00,559 --> 00:21:03,520
realm crossover uh as as a mechanism has

592
00:21:03,520 --> 00:21:05,520
mostly been sponsored by ngi point which

593
00:21:05,520 --> 00:21:07,679
is a european union project

594
00:21:07,679 --> 00:21:10,159
european union doesn't really like to

595
00:21:10,159 --> 00:21:12,480
offer you facebook logins and if i have

596
00:21:12,480 --> 00:21:14,720
to be honest i don't very much like to

597
00:21:14,720 --> 00:21:17,039
say facebook is now going to design

598
00:21:17,039 --> 00:21:19,120
decide that i can log on to this site

599
00:21:19,120 --> 00:21:20,799
that holds all this personal information

600
00:21:20,799 --> 00:21:21,919
about me

601
00:21:21,919 --> 00:21:23,360
somehow i think

602
00:21:23,360 --> 00:21:25,600
that's challenging them too much

603
00:21:25,600 --> 00:21:27,520
offering them too much

604
00:21:27,520 --> 00:21:28,720
some of these

605
00:21:28,720 --> 00:21:31,280
ngi ngi pointer funds are remaining

606
00:21:31,280 --> 00:21:32,640
and um

607
00:21:32,640 --> 00:21:34,559
as i said with the quick die cell it's

608
00:21:34,559 --> 00:21:37,600
really easy to add to make a model

609
00:21:37,600 --> 00:21:40,159
extension to your server and to actually

610
00:21:40,159 --> 00:21:42,400
implement this so if you're interested

611
00:21:42,400 --> 00:21:44,000
in this we can probably help you with

612
00:21:44,000 --> 00:21:45,440
some funding

613
00:21:45,440 --> 00:21:47,919
so contact us contact me

614
00:21:47,919 --> 00:21:49,200
for example

615
00:21:49,200 --> 00:21:51,679
and what we'll be looking for is things

616
00:21:51,679 --> 00:21:54,000
with the most impact so if it's generic

617
00:21:54,000 --> 00:21:55,360
it's interesting

618
00:21:55,360 --> 00:21:57,760
if it's a frugal proposal we can do more

619
00:21:57,760 --> 00:22:00,559
of those and if it ends up in the core

620
00:22:00,559 --> 00:22:03,760
distributions we say hooray um

621
00:22:03,760 --> 00:22:06,080
so if you think this is interesting if

622
00:22:06,080 --> 00:22:06,960
you

623
00:22:06,960 --> 00:22:10,559
want to implement it talk to us and

624
00:22:10,559 --> 00:22:11,440
um

625
00:22:11,440 --> 00:22:13,200
that's where i

626
00:22:13,200 --> 00:22:17,360
hand off the microphone to henry

627
00:22:17,600 --> 00:22:19,440
if you download these slides then there

628
00:22:19,440 --> 00:22:21,520
are many links to

629
00:22:21,520 --> 00:22:23,919
documentation in backgrounds

630
00:22:23,919 --> 00:22:26,400
um i won't go over those now but

631
00:22:26,400 --> 00:22:28,480
if you download them there's extra

632
00:22:28,480 --> 00:22:31,039
goodies

633
00:22:31,280 --> 00:22:35,840
good now to train libra office

634
00:22:36,720 --> 00:22:40,120
terrible program

635
00:22:44,000 --> 00:22:47,159
thank you

636
00:22:58,880 --> 00:23:00,720
hello hello yes

637
00:23:00,720 --> 00:23:03,840
i will continue uh the talk of rick by

638
00:23:03,840 --> 00:23:05,360
demonstrating

639
00:23:05,360 --> 00:23:08,159
http social

640
00:23:08,159 --> 00:23:09,280
which i

641
00:23:09,280 --> 00:23:11,120
introduced already

642
00:23:11,120 --> 00:23:13,280
and

643
00:23:13,280 --> 00:23:14,880
it

644
00:23:14,880 --> 00:23:17,039
i have to look up a little bit because

645
00:23:17,039 --> 00:23:19,840
this is my first speech

646
00:23:19,840 --> 00:23:21,520
heart of the page hustle

647
00:23:21,520 --> 00:23:24,320
is a new http authentication protocol

648
00:23:24,320 --> 00:23:27,360
that's a standardized diverse way to add

649
00:23:27,360 --> 00:23:30,559
new http protocols

650
00:23:30,559 --> 00:23:32,640
as the name already says

651
00:23:32,640 --> 00:23:34,559
it

652
00:23:34,559 --> 00:23:37,600
involves headed the disaster protocol

653
00:23:37,600 --> 00:23:39,280
which allows you to specify the

654
00:23:39,280 --> 00:23:41,279
mechanism in the software protocol

655
00:23:41,279 --> 00:23:43,360
itself and so it's

656
00:23:43,360 --> 00:23:44,960
it could be the only

657
00:23:44,960 --> 00:23:46,840
hd

658
00:23:46,840 --> 00:23:49,760
http protocol there

659
00:23:49,760 --> 00:23:52,960
sasha provides for choosing a mechanism

660
00:23:52,960 --> 00:23:56,320
while the http authentication protocol

661
00:23:56,320 --> 00:23:58,960
contains the mechanism that is

662
00:23:58,960 --> 00:24:01,279
almost all http

663
00:24:01,279 --> 00:24:03,120
authentication mechanisms

664
00:24:03,120 --> 00:24:05,440
choose one specific

665
00:24:05,440 --> 00:24:07,279
authentication mechanism

666
00:24:07,279 --> 00:24:10,559
and social habit that allows for

667
00:24:10,559 --> 00:24:14,240
any mechanism to be used

668
00:24:17,200 --> 00:24:19,600
heart of the social was invented by the

669
00:24:19,600 --> 00:24:21,360
previous speaker

670
00:24:21,360 --> 00:24:24,240
which one uh thing in mind that rayan

671
00:24:24,240 --> 00:24:27,440
kazowi just mentioned and his essex over

672
00:24:27,440 --> 00:24:29,440
brisk protocol

673
00:24:29,440 --> 00:24:31,760
which we will have which will be the

674
00:24:31,760 --> 00:24:33,440
mechanism you choose

675
00:24:33,440 --> 00:24:36,400
when you want to have the arm crossover

676
00:24:36,400 --> 00:24:37,520
but

677
00:24:37,520 --> 00:24:41,279
http also allows for conventional

678
00:24:41,279 --> 00:24:43,360
mechanisms to be used which don't allow

679
00:24:43,360 --> 00:24:46,600
for crossover

680
00:24:46,960 --> 00:24:49,440
there is a draft on it and it's shown

681
00:24:49,440 --> 00:24:51,440
there and that will be

682
00:24:51,440 --> 00:24:54,320
available on the slides edit that is the

683
00:24:54,320 --> 00:24:57,279
last protocol which

684
00:24:57,279 --> 00:25:00,480
contains the latest updates

685
00:25:00,480 --> 00:25:02,880
next slide

686
00:25:02,880 --> 00:25:05,039
here is the headers i can do the firearm

687
00:25:05,039 --> 00:25:06,640
this is the demonstration of a

688
00:25:06,640 --> 00:25:09,120
conventional hcp social exchange the

689
00:25:09,120 --> 00:25:10,960
most used one by the way

690
00:25:10,960 --> 00:25:13,120
and it's very simple

691
00:25:13,120 --> 00:25:15,200
you try to out

692
00:25:15,200 --> 00:25:17,279
to visit the website and you get

693
00:25:17,279 --> 00:25:19,600
you are not outright you have to log in

694
00:25:19,600 --> 00:25:21,919
and then the headers

695
00:25:21,919 --> 00:25:24,559
the browser reacts by showing a pop-up

696
00:25:24,559 --> 00:25:26,960
that the login is required and it shows

697
00:25:26,960 --> 00:25:29,320
some

698
00:25:29,320 --> 00:25:32,960
http message which is always on the

699
00:25:32,960 --> 00:25:34,880
top of the

700
00:25:34,880 --> 00:25:37,200
top of the box and this is something

701
00:25:37,200 --> 00:25:39,200
like now you enter the secret area

702
00:25:39,200 --> 00:25:40,480
something like that

703
00:25:40,480 --> 00:25:45,640
and that's the way i'm passed in the the

704
00:25:45,640 --> 00:25:48,480
www authenticate

705
00:25:48,480 --> 00:25:49,520
header

706
00:25:49,520 --> 00:25:51,279
and

707
00:25:51,279 --> 00:25:55,360
the client then responds in base 64

708
00:25:55,360 --> 00:25:57,200
encoding it's not encryption it is just

709
00:25:57,200 --> 00:25:59,360
a simple encoding with username and

710
00:25:59,360 --> 00:26:01,679
password and then the

711
00:26:01,679 --> 00:26:03,120
the web server checks whether those

712
00:26:03,120 --> 00:26:05,200
characters are correct and they either

713
00:26:05,200 --> 00:26:06,559
succeed or not

714
00:26:06,559 --> 00:26:08,960
next slide

715
00:26:08,960 --> 00:26:10,400
this is uh

716
00:26:10,400 --> 00:26:12,480
a flow how it goes which

717
00:26:12,480 --> 00:26:15,760
has our new http social

718
00:26:15,760 --> 00:26:17,200
mechanism

719
00:26:17,200 --> 00:26:19,919
and you can see that there is a one

720
00:26:19,919 --> 00:26:23,120
extra ping pong so i had so to say

721
00:26:23,120 --> 00:26:25,520
and the first authenticate from the web

722
00:26:25,520 --> 00:26:28,080
server is here i have my list of

723
00:26:28,080 --> 00:26:30,320
mechanisms i support

724
00:26:30,320 --> 00:26:32,960
and then you can choose one of them and

725
00:26:32,960 --> 00:26:35,760
the realm is exactly the same in the arm

726
00:26:35,760 --> 00:26:38,720
which is used in the basic in the basic

727
00:26:38,720 --> 00:26:40,880
authentication mechanism this is just

728
00:26:40,880 --> 00:26:42,080
something you can show you're now

729
00:26:42,080 --> 00:26:44,960
locking in some secret area

730
00:26:44,960 --> 00:26:48,240
and the next what at that time headers

731
00:26:48,240 --> 00:26:50,559
i will show you in a minute

732
00:26:50,559 --> 00:26:52,880
instead of the standard

733
00:26:52,880 --> 00:26:54,799
properties from the browser itself which

734
00:26:54,799 --> 00:26:57,360
is built in all modern browsers

735
00:26:57,360 --> 00:26:59,760
we show up a

736
00:26:59,760 --> 00:27:02,480
public pop-up box is shown by an

737
00:27:02,480 --> 00:27:04,559
external program that is not a browser

738
00:27:04,559 --> 00:27:06,960
with an external program it's not allows

739
00:27:06,960 --> 00:27:08,960
you to not only allows you to enter the

740
00:27:08,960 --> 00:27:11,200
credentials but also which mechanism you

741
00:27:11,200 --> 00:27:13,600
want to use to log on

742
00:27:13,600 --> 00:27:15,840
and that is all all happening in the

743
00:27:15,840 --> 00:27:19,199
artsculture in the left side

744
00:27:19,279 --> 00:27:21,039
of this diagram

745
00:27:21,039 --> 00:27:23,679
and then here you can see here as a as a

746
00:27:23,679 --> 00:27:25,039
demonstration

747
00:27:25,039 --> 00:27:26,640
that the

748
00:27:26,640 --> 00:27:29,520
user chooses digesting d5

749
00:27:29,520 --> 00:27:31,520
to too low home

750
00:27:31,520 --> 00:27:34,320
and then it's almost the same as a

751
00:27:34,320 --> 00:27:35,760
conventional

752
00:27:35,760 --> 00:27:37,279
conventional uh

753
00:27:37,279 --> 00:27:40,240
http authentication mechanisms and just

754
00:27:40,240 --> 00:27:41,200
the

755
00:27:41,200 --> 00:27:42,880
that is the

756
00:27:42,880 --> 00:27:45,600
web server sends challenges which the

757
00:27:45,600 --> 00:27:48,799
client has to make a response on and the

758
00:27:48,799 --> 00:27:51,039
only extra parameter we use is the

759
00:27:51,039 --> 00:27:53,360
so-called service state s2s in this

760
00:27:53,360 --> 00:27:54,480
diagram

761
00:27:54,480 --> 00:27:56,320
that's something the

762
00:27:56,320 --> 00:27:57,440
web server

763
00:27:57,440 --> 00:27:59,679
the server can send to the client and

764
00:27:59,679 --> 00:28:01,919
the client always have to send this same

765
00:28:01,919 --> 00:28:04,480
state back in the next request

766
00:28:04,480 --> 00:28:05,919
and that's your that you

767
00:28:05,919 --> 00:28:07,520
can see and

768
00:28:07,520 --> 00:28:08,880
the same

769
00:28:08,880 --> 00:28:11,360
string has the same string which is sent

770
00:28:11,360 --> 00:28:13,520
by the server and sent back by the

771
00:28:13,520 --> 00:28:14,640
client

772
00:28:14,640 --> 00:28:18,000
and then uh in the case of digest 75

773
00:28:18,000 --> 00:28:19,600
business as usual and then the

774
00:28:19,600 --> 00:28:21,039
credentials are checked and when the

775
00:28:21,039 --> 00:28:22,640
credentials are correct

776
00:28:22,640 --> 00:28:23,760
you get

777
00:28:23,760 --> 00:28:26,000
an okay or

778
00:28:26,000 --> 00:28:29,039
authorization refused

779
00:28:29,039 --> 00:28:30,399
there's the

780
00:28:30,399 --> 00:28:32,720
this light and then the most complex one

781
00:28:32,720 --> 00:28:35,679
here this is the one which crossover

782
00:28:35,679 --> 00:28:38,240
and uh

783
00:28:39,520 --> 00:28:41,679
uh

784
00:28:43,440 --> 00:28:45,919
it's using the same apple and had the

785
00:28:45,919 --> 00:28:47,200
same software

786
00:28:47,200 --> 00:28:48,640
but now

787
00:28:48,640 --> 00:28:49,440
uh

788
00:28:49,440 --> 00:28:52,000
the server header clients not select the

789
00:28:52,000 --> 00:28:55,120
digest 75 but the esx over protocol

790
00:28:55,120 --> 00:28:56,240
but then

791
00:28:56,240 --> 00:28:58,399
that is the the my

792
00:28:58,399 --> 00:28:59,520
the

793
00:28:59,520 --> 00:29:02,240
proper works of the new client program

794
00:29:02,240 --> 00:29:04,480
has extra fields which you can

795
00:29:04,480 --> 00:29:06,000
fill in

796
00:29:06,000 --> 00:29:09,360
in that are the alias and the client

797
00:29:09,360 --> 00:29:11,200
domain fields and most important is of

798
00:29:11,200 --> 00:29:13,200
course the client domain that's the

799
00:29:13,200 --> 00:29:14,080
domain

800
00:29:14,080 --> 00:29:16,240
which it's just talked about which you

801
00:29:16,240 --> 00:29:19,120
want to log on to identify yourself

802
00:29:19,120 --> 00:29:22,719
and the alias is used for

803
00:29:23,360 --> 00:29:26,399
showing the entity which the foreign

804
00:29:26,399 --> 00:29:28,960
server has the the middle server index

805
00:29:28,960 --> 00:29:31,120
diagram will see that is i can

806
00:29:31,120 --> 00:29:32,960
authenticate the summary

807
00:29:32,960 --> 00:29:36,000
but i can uh that is the foreign server

808
00:29:36,000 --> 00:29:38,880
can see a totally different uh identity

809
00:29:38,880 --> 00:29:41,360
on the the identity you want to

810
00:29:41,360 --> 00:29:43,440
provide to the server

811
00:29:43,440 --> 00:29:44,880
headers and i will show you in a minute

812
00:29:44,880 --> 00:29:47,200
how that looks look

813
00:29:47,200 --> 00:29:48,000
drop

814
00:29:48,000 --> 00:29:49,600
pop books

815
00:29:49,600 --> 00:29:52,480
box looks like

816
00:29:53,200 --> 00:29:55,840
uh let's see then it happens on the

817
00:29:55,840 --> 00:29:57,919
first head after the

818
00:29:57,919 --> 00:30:00,399
client has chosen essex over protocol

819
00:30:00,399 --> 00:30:01,840
it's nice to

820
00:30:01,840 --> 00:30:04,640
indicate what's inside the encoded

821
00:30:04,640 --> 00:30:07,279
client-to-server field here what you see

822
00:30:07,279 --> 00:30:10,399
there and then i have just to make clear

823
00:30:10,399 --> 00:30:12,080
a little bit how

824
00:30:12,080 --> 00:30:14,159
crossover works that that contains the

825
00:30:14,159 --> 00:30:16,960
client domain you want to log on to and

826
00:30:16,960 --> 00:30:18,799
not to be confused with the realm which

827
00:30:18,799 --> 00:30:22,799
is shown in our proper box head it is

828
00:30:22,799 --> 00:30:25,520
at a client domain you filter in the

829
00:30:25,520 --> 00:30:29,520
popup box on the of the client program

830
00:30:30,880 --> 00:30:32,640
let's go to the next slide because

831
00:30:32,640 --> 00:30:35,279
header here i have the components which

832
00:30:35,279 --> 00:30:38,559
are involved in our

833
00:30:38,559 --> 00:30:39,440
our

834
00:30:39,440 --> 00:30:42,240
setup which i will show you in a minute

835
00:30:42,240 --> 00:30:45,200
here the this is the on the left side on

836
00:30:45,200 --> 00:30:48,720
the purple side we call it magenta box

837
00:30:48,720 --> 00:30:51,520
is a native client which is a c program

838
00:30:51,520 --> 00:30:54,080
which does the real authentication

839
00:30:54,080 --> 00:30:57,440
and i i built this and like fortunately

840
00:30:57,440 --> 00:31:00,640
it was possible because

841
00:31:00,720 --> 00:31:03,039
browsers have standardized the way

842
00:31:03,039 --> 00:31:04,399
plugins work

843
00:31:04,399 --> 00:31:06,080
and one of the possibilities you can do

844
00:31:06,080 --> 00:31:08,960
is so-called native message messaging

845
00:31:08,960 --> 00:31:11,120
which allows a browser which is the

846
00:31:11,120 --> 00:31:12,799
yellow box

847
00:31:12,799 --> 00:31:15,200
which runs inside the browser as a

848
00:31:15,200 --> 00:31:18,320
javascript as javascript extension when

849
00:31:18,320 --> 00:31:21,440
you set it up correctly head and

850
00:31:21,440 --> 00:31:23,440
plugin is allowed to talk to an external

851
00:31:23,440 --> 00:31:25,360
program and you have to

852
00:31:25,360 --> 00:31:27,760
organize it you have to

853
00:31:27,760 --> 00:31:30,640
organize it yourself so ahead of not any

854
00:31:30,640 --> 00:31:32,240
program can talk to the browser which

855
00:31:32,240 --> 00:31:34,159
will be a huge

856
00:31:34,159 --> 00:31:36,080
security risk

857
00:31:36,080 --> 00:31:38,960
and on the right side we have a server

858
00:31:38,960 --> 00:31:41,360
it can be an apache module but when i

859
00:31:41,360 --> 00:31:44,080
first started for an lnet had to to just

860
00:31:44,080 --> 00:31:46,720
show that this concept works i used for

861
00:31:46,720 --> 00:31:49,679
example a java servlet to do the to do

862
00:31:49,679 --> 00:31:53,519
the work and it was of course only a

863
00:31:53,519 --> 00:31:54,880
conventional

864
00:31:54,880 --> 00:31:58,399
a conventional mechanism which was used

865
00:31:58,399 --> 00:32:01,440
and i think everything i mentioned here

866
00:32:01,440 --> 00:32:03,120
is done

867
00:32:03,120 --> 00:32:06,320
and uh yeah i can next slide is okay

868
00:32:06,320 --> 00:32:07,440
and here

869
00:32:07,440 --> 00:32:10,399
you maybe you will recognize some of the

870
00:32:10,399 --> 00:32:11,760
components which

871
00:32:11,760 --> 00:32:13,519
rick shows in his

872
00:32:13,519 --> 00:32:15,600
realm crossover targ

873
00:32:15,600 --> 00:32:17,519
because

874
00:32:17,519 --> 00:32:20,000
here are the components in the apache

875
00:32:20,000 --> 00:32:22,640
server in the identity provider

876
00:32:22,640 --> 00:32:24,480
these three things

877
00:32:24,480 --> 00:32:27,039
i have no pointer but the blue the green

878
00:32:27,039 --> 00:32:29,600
and the red box are the same components

879
00:32:29,600 --> 00:32:33,760
which rick showed in his slide

880
00:32:33,760 --> 00:32:36,000
had how the anchors of work said the

881
00:32:36,000 --> 00:32:38,880
three parties the

882
00:32:40,159 --> 00:32:41,039
the

883
00:32:41,039 --> 00:32:43,120
apache server contains the three

884
00:32:43,120 --> 00:32:45,519
diameter client

885
00:32:45,519 --> 00:32:47,200
which talks to

886
00:32:47,200 --> 00:32:49,440
possibly a different

887
00:32:49,440 --> 00:32:50,559
a different

888
00:32:50,559 --> 00:32:52,799
three-dimensional server had a

889
00:32:52,799 --> 00:32:53,840
different

890
00:32:53,840 --> 00:32:55,679
server on a different domain

891
00:32:55,679 --> 00:32:56,799
and a

892
00:32:56,799 --> 00:32:57,519
free

893
00:32:57,519 --> 00:33:00,559
diameter allows for that

894
00:33:00,559 --> 00:33:02,799
and

895
00:33:04,000 --> 00:33:06,399
i will have to have a look because it's

896
00:33:06,399 --> 00:33:09,279
a little bit complicated

897
00:33:09,279 --> 00:33:12,880
and it was very hard but this is

898
00:33:13,600 --> 00:33:16,080
because the the apache model which is

899
00:33:16,080 --> 00:33:18,320
used here which is

900
00:33:18,320 --> 00:33:20,080
capable of uh

901
00:33:20,080 --> 00:33:23,840
uh doing b had a d major shuttle is one

902
00:33:23,840 --> 00:33:25,440
of the two

903
00:33:25,440 --> 00:33:28,240
patchy modules i wrote i start with a

904
00:33:28,240 --> 00:33:31,360
simple one which really involved that

905
00:33:31,360 --> 00:33:33,519
the entire authentication was done in

906
00:33:33,519 --> 00:33:36,960
the apache module on the same server

907
00:33:36,960 --> 00:33:39,760
and this module which allows for

908
00:33:39,760 --> 00:33:42,399
to authenticate on an external diameter

909
00:33:42,399 --> 00:33:45,360
server is called the header module for

910
00:33:45,360 --> 00:33:48,640
the dma to shuttle which uses a trusted

911
00:33:48,640 --> 00:33:52,640
quick quick dia social protocol between

912
00:33:52,640 --> 00:33:54,799
the

913
00:33:55,120 --> 00:33:57,279
blue and the green box that is correct

914
00:33:57,279 --> 00:33:59,760
click and this is the essential protocol

915
00:33:59,760 --> 00:34:03,120
this is protocol you invented

916
00:34:03,120 --> 00:34:06,159
and the digital this is we have created

917
00:34:06,159 --> 00:34:08,159
a demo for this and then you can really

918
00:34:08,159 --> 00:34:09,918
see here that there are three parties

919
00:34:09,918 --> 00:34:10,960
and that

920
00:34:10,960 --> 00:34:12,879
headers client

921
00:34:12,879 --> 00:34:15,918
services can log in using its own domain

922
00:34:15,918 --> 00:34:18,000
and then the authentication succeeds and

923
00:34:18,000 --> 00:34:22,159
that is on one of the next slides

924
00:34:22,159 --> 00:34:23,119
yeah hey

925
00:34:23,119 --> 00:34:25,119
here you see the uh

926
00:34:25,119 --> 00:34:26,639
headers on

927
00:34:26,639 --> 00:34:29,520
on the firefox browser you see the new

928
00:34:29,520 --> 00:34:32,560
problemworks every three places the

929
00:34:32,560 --> 00:34:34,560
public works of the browser which you

930
00:34:34,560 --> 00:34:36,719
all know where which only contains

931
00:34:36,719 --> 00:34:39,199
a user in the password field and here

932
00:34:39,199 --> 00:34:40,639
you can see the

933
00:34:40,639 --> 00:34:42,560
fields i just talked about

934
00:34:42,560 --> 00:34:44,239
the first one is

935
00:34:44,239 --> 00:34:47,199
very important that you see the same url

936
00:34:47,199 --> 00:34:49,839
as in the browser so that you know which

937
00:34:49,839 --> 00:34:52,000
resource you are accessing

938
00:34:52,000 --> 00:34:52,879
and

939
00:34:52,879 --> 00:34:54,800
along with the user and password fields

940
00:34:54,800 --> 00:34:57,520
that is re-entered for dots and you can

941
00:34:57,520 --> 00:35:00,480
see the alias and the your domain fields

942
00:35:00,480 --> 00:35:03,839
and in this login session i just used

943
00:35:03,839 --> 00:35:05,200
conventional

944
00:35:05,200 --> 00:35:08,160
login so i didn't need to use

945
00:35:08,160 --> 00:35:09,920
alias and your domain and i think the

946
00:35:09,920 --> 00:35:12,720
next slide shows the

947
00:35:12,720 --> 00:35:15,720
uh

948
00:35:16,160 --> 00:35:18,000
no no that is not tonight that that's it

949
00:35:18,000 --> 00:35:19,359
i'm afraid

950
00:35:19,359 --> 00:35:21,359
because i didn't include headed this is

951
00:35:21,359 --> 00:35:24,800
over yeah sorry then i uh so i don't

952
00:35:24,800 --> 00:35:27,680
have a picture which includes uh because

953
00:35:27,680 --> 00:35:30,240
this is things i just talked about

954
00:35:30,240 --> 00:35:31,440
headed uh

955
00:35:31,440 --> 00:35:33,520
that are the features you can choose but

956
00:35:33,520 --> 00:35:35,520
in uh

957
00:35:35,520 --> 00:35:38,480
in a crossover situation which you can

958
00:35:38,480 --> 00:35:41,040
you can see in the demo we have on our

959
00:35:41,040 --> 00:35:43,440
we have sticks and we have also

960
00:35:43,440 --> 00:35:45,040
uh

961
00:35:45,040 --> 00:35:46,800
virtual machines on which you can see

962
00:35:46,800 --> 00:35:49,440
all of this work and then you can see a

963
00:35:49,440 --> 00:35:51,839
client domain aloha happens i forgot to

964
00:35:51,839 --> 00:35:54,320
include that slide

965
00:35:54,320 --> 00:35:56,160
and

966
00:35:56,160 --> 00:35:58,560
that's my talk my first talk to to be

967
00:35:58,560 --> 00:36:00,050
honest

968
00:36:00,050 --> 00:36:11,440
[Applause]

969
00:36:11,440 --> 00:36:14,160
thank you very much both of you um we do

970
00:36:14,160 --> 00:36:16,079
have some time for questions and answers

971
00:36:16,079 --> 00:36:18,560
so if you line up the microphones we

972
00:36:18,560 --> 00:36:19,440
also

973
00:36:19,440 --> 00:36:20,320
allow

974
00:36:20,320 --> 00:36:23,440
a comp no provide the possibility to ask

975
00:36:23,440 --> 00:36:26,480
questions uh through the interweb so

976
00:36:26,480 --> 00:36:28,240
just a second i would like to check with

977
00:36:28,240 --> 00:36:29,760
the signal angels do we have any

978
00:36:29,760 --> 00:36:32,480
questions unfortunately not so good for

979
00:36:32,480 --> 00:36:34,480
the gentleman in the first row uh please

980
00:36:34,480 --> 00:36:35,760
ask a question

981
00:36:35,760 --> 00:36:39,119
i have to actually uh so first of all um

982
00:36:39,119 --> 00:36:41,119
do i understand correctly that you will

983
00:36:41,119 --> 00:36:43,839
then use something like dns sec

984
00:36:43,839 --> 00:36:45,119
to

985
00:36:45,119 --> 00:36:46,800
set up trust with

986
00:36:46,800 --> 00:36:48,880
parties that you do not know

987
00:36:48,880 --> 00:36:54,480
yup all right a dns day ntls usually

988
00:36:54,480 --> 00:36:55,359
all right

989
00:36:55,359 --> 00:36:57,280
question number two is

990
00:36:57,280 --> 00:36:58,960
so saml

991
00:36:58,960 --> 00:37:01,280
obviously is not another way for cross

992
00:37:01,280 --> 00:37:03,520
realm authentication is that something

993
00:37:03,520 --> 00:37:05,440
that you compared with i think

994
00:37:05,440 --> 00:37:07,119
some of the problems with the cecil

995
00:37:07,119 --> 00:37:09,040
seems that you still are men in the

996
00:37:09,040 --> 00:37:10,000
middle

997
00:37:10,000 --> 00:37:11,760
which over complicates it a little bit i

998
00:37:11,760 --> 00:37:14,480
think if you do samuel you completely

999
00:37:14,480 --> 00:37:16,000
redirect and you just wait for the

1000
00:37:16,000 --> 00:37:19,119
answer yeah definitely

1001
00:37:19,119 --> 00:37:20,400
if you

1002
00:37:20,400 --> 00:37:22,960
log on to your email you have to use sas

1003
00:37:22,960 --> 00:37:24,640
home so that's why we have three

1004
00:37:24,640 --> 00:37:26,320
solutions because sometimes

1005
00:37:26,320 --> 00:37:28,400
a protocol says use kerberos use sass or

1006
00:37:28,400 --> 00:37:30,079
use whatever else

1007
00:37:30,079 --> 00:37:32,880
um saml can usually be

1008
00:37:32,880 --> 00:37:36,400
included in a protocol and among that is

1009
00:37:36,400 --> 00:37:39,839
there is a sample mechanism for sasha

1010
00:37:39,839 --> 00:37:41,760
so give an http cell so you could

1011
00:37:41,760 --> 00:37:44,320
actually put saml in there but i know it

1012
00:37:44,320 --> 00:37:46,079
has an embedding in http already so

1013
00:37:46,079 --> 00:37:47,440
that's senseless

1014
00:37:47,440 --> 00:37:49,359
unless you want to give the client a

1015
00:37:49,359 --> 00:37:53,279
choice and i think that's valuable

1016
00:37:53,760 --> 00:37:56,160
two questions line up at the end and ask

1017
00:37:56,160 --> 00:37:58,160
a third question thank you next question

1018
00:37:58,160 --> 00:38:00,320
please

1019
00:38:00,320 --> 00:38:02,560
so thanks for the talk in your example

1020
00:38:02,560 --> 00:38:05,839
you said like we can

1021
00:38:05,839 --> 00:38:08,320
give the authentication to

1022
00:38:08,320 --> 00:38:10,320
the local provider

1023
00:38:10,320 --> 00:38:12,160
which may up the

1024
00:38:12,160 --> 00:38:14,960
security of the of the user

1025
00:38:14,960 --> 00:38:17,440
but what if the local provider actually

1026
00:38:17,440 --> 00:38:19,040
decreases

1027
00:38:19,040 --> 00:38:21,920
the security of the user so the

1028
00:38:21,920 --> 00:38:24,079
the the the web shop of whatever is in

1029
00:38:24,079 --> 00:38:25,200
the middle

1030
00:38:25,200 --> 00:38:26,160
actually

1031
00:38:26,160 --> 00:38:28,240
doesn't want to provide

1032
00:38:28,240 --> 00:38:29,680
your

1033
00:38:29,680 --> 00:38:31,440
local

1034
00:38:31,440 --> 00:38:32,480
authentication

1035
00:38:32,480 --> 00:38:34,000
party

1036
00:38:34,000 --> 00:38:35,440
because it's less secure than what they

1037
00:38:35,440 --> 00:38:37,359
can offer themselves is there something

1038
00:38:37,359 --> 00:38:38,240
there

1039
00:38:38,240 --> 00:38:39,760
in the protocol

1040
00:38:39,760 --> 00:38:41,599
you split my brain by using another term

1041
00:38:41,599 --> 00:38:42,880
and i'm not wondering whether you mean

1042
00:38:42,880 --> 00:38:44,640
left or right

1043
00:38:44,640 --> 00:38:46,079
are you talking about local

1044
00:38:46,079 --> 00:38:48,880
authentication as in the quick diocesal

1045
00:38:48,880 --> 00:38:51,119
receiving note that passes it over free

1046
00:38:51,119 --> 00:38:53,119
diameter or are you talking about the

1047
00:38:53,119 --> 00:38:55,520
identity provider that received the free

1048
00:38:55,520 --> 00:38:57,520
diameter request okay let me give an

1049
00:38:57,520 --> 00:39:00,640
example like if i log into my bank i

1050
00:39:00,640 --> 00:39:03,040
need to fill in my my my username

1051
00:39:03,040 --> 00:39:06,160
password and then to affair for instance

1052
00:39:06,160 --> 00:39:09,119
but what if my local provider only uses

1053
00:39:09,119 --> 00:39:10,160
like

1054
00:39:10,160 --> 00:39:12,880
username and password so my bank would

1055
00:39:12,880 --> 00:39:14,800
actually say no you cannot use your

1056
00:39:14,800 --> 00:39:17,040
local provider because it's less secure

1057
00:39:17,040 --> 00:39:18,720
than what we can offer your bank

1058
00:39:18,720 --> 00:39:20,240
wouldn't know

1059
00:39:20,240 --> 00:39:22,800
your bank would only see who as whom you

1060
00:39:22,800 --> 00:39:25,200
logged on and you are in control of the

1061
00:39:25,200 --> 00:39:27,760
security of your bank account

1062
00:39:27,760 --> 00:39:31,599
i have an advice for you to do it well

1063
00:39:31,599 --> 00:39:33,920
this by the way is very much what banks

1064
00:39:33,920 --> 00:39:36,000
like because they are not interested in

1065
00:39:36,000 --> 00:39:37,839
security they are interested in covering

1066
00:39:37,839 --> 00:39:40,160
their ass

1067
00:39:40,160 --> 00:39:41,359
true

1068
00:39:41,359 --> 00:39:42,560
and you're interested in getting the

1069
00:39:42,560 --> 00:39:45,440
best security probably better than you

1070
00:39:45,440 --> 00:39:46,560
sorry

1071
00:39:46,560 --> 00:39:49,040
if it's it's it's it evolving into a

1072
00:39:49,040 --> 00:39:51,119
dialogue let me cut this off here for a

1073
00:39:51,119 --> 00:39:52,400
second

1074
00:39:52,400 --> 00:39:55,119
feel free to come back um or

1075
00:39:55,119 --> 00:39:56,800
continue this in the park there's

1076
00:39:56,800 --> 00:40:00,160
another question lined up so please um

1077
00:40:00,160 --> 00:40:03,440
hi uh thanks um i have a question that's

1078
00:40:03,440 --> 00:40:05,599
sort of usability related do you have

1079
00:40:05,599 --> 00:40:09,760
any ideas on how to guide a user into

1080
00:40:09,760 --> 00:40:12,319
which authentication method they should

1081
00:40:12,319 --> 00:40:13,440
choose

1082
00:40:13,440 --> 00:40:16,160
because choosing

1083
00:40:16,160 --> 00:40:19,200
digest md5 i mean iu and he understands

1084
00:40:19,200 --> 00:40:21,680
that my mob doesn't no but your mom

1085
00:40:21,680 --> 00:40:23,760
probably has a system administrator who

1086
00:40:23,760 --> 00:40:27,440
insists on particular practices

1087
00:40:28,480 --> 00:40:31,040
not really

1088
00:40:31,680 --> 00:40:34,160
of course we would like to address

1089
00:40:34,160 --> 00:40:36,079
we would like to encourage the user to

1090
00:40:36,079 --> 00:40:38,720
use crossover when as it goes over

1091
00:40:38,720 --> 00:40:40,640
whenever possible because then you can

1092
00:40:40,640 --> 00:40:42,960
use that is the only protocol currently

1093
00:40:42,960 --> 00:40:45,680
which uses your own identity provider

1094
00:40:45,680 --> 00:40:48,079
and all the other protocols are

1095
00:40:48,079 --> 00:40:49,760
a normal stock speaker that the

1096
00:40:49,760 --> 00:40:52,400
authentication takes in place in the

1097
00:40:52,400 --> 00:40:55,200
same domain as the server yeah but i you

1098
00:40:55,200 --> 00:40:57,200
are i think also making the point that

1099
00:40:57,200 --> 00:40:59,440
um if you give people more freedom to

1100
00:40:59,440 --> 00:41:00,960
choose they might shoot themselves the

1101
00:41:00,960 --> 00:41:02,560
foot

1102
00:41:02,560 --> 00:41:05,359
and it's also if you take email as an

1103
00:41:05,359 --> 00:41:08,640
example you don't usually configure in

1104
00:41:08,640 --> 00:41:11,040
your email client which specific

1105
00:41:11,040 --> 00:41:12,960
uh authentication method you would like

1106
00:41:12,960 --> 00:41:15,280
to use your email client sort of chooses

1107
00:41:15,280 --> 00:41:17,119
one that's sort of absolutely to some

1108
00:41:17,119 --> 00:41:19,280
degree you do

1109
00:41:19,280 --> 00:41:21,359
because it's sassel and you do say stuff

1110
00:41:21,359 --> 00:41:23,760
that you won't allow over uh

1111
00:41:23,760 --> 00:41:26,560
plain text connections for example

1112
00:41:26,560 --> 00:41:28,799
um

1113
00:41:29,599 --> 00:41:32,000
yeah but there are ways of setting these

1114
00:41:32,000 --> 00:41:35,119
things and

1115
00:41:35,119 --> 00:41:36,800
given that you have one

1116
00:41:36,800 --> 00:41:39,200
option available or three and you

1117
00:41:39,200 --> 00:41:41,359
basically what sasel does it matches the

1118
00:41:41,359 --> 00:41:43,599
overlap between the server offering and

1119
00:41:43,599 --> 00:41:44,720
the client

1120
00:41:44,720 --> 00:41:45,920
ability

1121
00:41:45,920 --> 00:41:48,640
and finds a good one maybe the best one

1122
00:41:48,640 --> 00:41:50,079
but if you're willing to accept all

1123
00:41:50,079 --> 00:41:53,040
three options then it might choose any

1124
00:41:53,040 --> 00:41:53,920
um

1125
00:41:53,920 --> 00:41:55,839
so yeah you would want to control this

1126
00:41:55,839 --> 00:41:58,000
to some degree

1127
00:41:58,000 --> 00:41:59,040
thank you

1128
00:41:59,040 --> 00:42:01,200
thanks i see a discussion group forming

1129
00:42:01,200 --> 00:42:03,520
at the bar after the talk yeah yeah yeah

1130
00:42:03,520 --> 00:42:05,359
we might get drunk if we don't before we

1131
00:42:05,359 --> 00:42:07,280
get to the next question on the mic are

1132
00:42:07,280 --> 00:42:09,040
there any questions on the interwebs for

1133
00:42:09,040 --> 00:42:11,759
the speakers

1134
00:42:11,920 --> 00:42:15,119
hero signal task any questions

1135
00:42:15,119 --> 00:42:17,920
nope i see i see shaking heads so please

1136
00:42:17,920 --> 00:42:20,640
go ahead uh a very practical question

1137
00:42:20,640 --> 00:42:22,720
you mentioned the apache web server you

1138
00:42:22,720 --> 00:42:24,960
mentioned firefox

1139
00:42:24,960 --> 00:42:26,800
obviously there's no reason it couldn't

1140
00:42:26,800 --> 00:42:28,880
work for other browsers other web

1141
00:42:28,880 --> 00:42:30,880
servers right

1142
00:42:30,880 --> 00:42:33,119
sorry um there is an engineering

1143
00:42:33,119 --> 00:42:34,319
implementation

1144
00:42:34,319 --> 00:42:36,319
like i can answer the question uh

1145
00:42:36,319 --> 00:42:38,240
currently

1146
00:42:38,240 --> 00:42:42,000
there was some kind of standard

1147
00:42:42,000 --> 00:42:43,920
being built for all browsers and

1148
00:42:43,920 --> 00:42:46,480
currently you know where there are only

1149
00:42:46,480 --> 00:42:49,359
two real ones left editor reality's home

1150
00:42:49,359 --> 00:42:52,240
and home contest safari currently even

1151
00:42:52,240 --> 00:42:54,640
internet explorer and of course home

1152
00:42:54,640 --> 00:42:57,040
home itself is

1153
00:42:57,040 --> 00:42:59,760
the one engine and only

1154
00:42:59,760 --> 00:43:01,680
a real

1155
00:43:01,680 --> 00:43:04,240
other engine is still firefox

1156
00:43:04,240 --> 00:43:06,240
and uh in principle it

1157
00:43:06,240 --> 00:43:08,560
would have been possible to implement

1158
00:43:08,560 --> 00:43:11,040
this on home as well

1159
00:43:11,040 --> 00:43:12,640
but there's one uh

1160
00:43:12,640 --> 00:43:15,119
addition which firefox added to the

1161
00:43:15,119 --> 00:43:16,319
native maker

1162
00:43:16,319 --> 00:43:18,800
native messaging

1163
00:43:18,800 --> 00:43:21,440
which involves that

1164
00:43:21,440 --> 00:43:24,560
you can intercept http request

1165
00:43:24,560 --> 00:43:25,760
and then

1166
00:43:25,760 --> 00:43:27,040
the

1167
00:43:27,040 --> 00:43:29,520
firefox multiple ring can wait

1168
00:43:29,520 --> 00:43:31,920
in the form of a so-called javascript

1169
00:43:31,920 --> 00:43:32,880
promise

1170
00:43:32,880 --> 00:43:34,960
for the answer of the external program

1171
00:43:34,960 --> 00:43:36,000
on

1172
00:43:36,000 --> 00:43:37,280
on a request

1173
00:43:37,280 --> 00:43:40,160
and unfortunately uh firefox is only

1174
00:43:40,160 --> 00:43:42,319
part of who implemented that

1175
00:43:42,319 --> 00:43:45,359
and uh up to now

1176
00:43:45,359 --> 00:43:47,119
i mean it is a standard there's no

1177
00:43:47,119 --> 00:43:48,960
reason why others couldn't yeah but

1178
00:43:48,960 --> 00:43:51,040
there's no current use case we define a

1179
00:43:51,040 --> 00:43:55,480
use case so we hope you've

1180
00:43:58,240 --> 00:44:00,800
otherwise i couldn't uh create a demo

1181
00:44:00,800 --> 00:44:02,480
which i created

1182
00:44:02,480 --> 00:44:04,000
for have for this

1183
00:44:04,000 --> 00:44:06,319
not only crossover but on the entire

1184
00:44:06,319 --> 00:44:10,160
http social and external program

1185
00:44:10,160 --> 00:44:12,480
we really wanted to pull credentials

1186
00:44:12,480 --> 00:44:14,960
away from the browser i somehow feel

1187
00:44:14,960 --> 00:44:17,200
iffy when i need the same environment

1188
00:44:17,200 --> 00:44:19,920
for looking adverse advertisements and

1189
00:44:19,920 --> 00:44:22,079
logging onto my bank so you want your

1190
00:44:22,079 --> 00:44:24,720
credentials outside the browser and

1191
00:44:24,720 --> 00:44:26,319
underneath the application so in the

1192
00:44:26,319 --> 00:44:28,480
http layer these were very deliberate

1193
00:44:28,480 --> 00:44:31,119
choices you could of course implement

1194
00:44:31,119 --> 00:44:33,440
this entirely in javascript but then you

1195
00:44:33,440 --> 00:44:35,119
wouldn't have access to kerberos for

1196
00:44:35,119 --> 00:44:37,040
example unless you build entire kerberos

1197
00:44:37,040 --> 00:44:39,920
in javascript which might be a bit of a

1198
00:44:39,920 --> 00:44:41,920
security problem

1199
00:44:41,920 --> 00:44:43,760
did we answer your question yes thank

1200
00:44:43,760 --> 00:44:46,160
you very much

1201
00:44:46,160 --> 00:44:47,760
long answer but a good one thank you

1202
00:44:47,760 --> 00:44:50,640
very much for that we have yes please

1203
00:44:50,640 --> 00:44:52,000
um

1204
00:44:52,000 --> 00:44:53,520
a couple of quick ones uh i was

1205
00:44:53,520 --> 00:44:55,280
wondering about replay attacks i didn't

1206
00:44:55,280 --> 00:44:58,720
see any any uh binding into crypto

1207
00:44:58,720 --> 00:45:01,359
protocols in here or did i dismiss it i

1208
00:45:01,359 --> 00:45:04,960
couldn't read all of the slides from any

1209
00:45:04,960 --> 00:45:07,760
decently designed protocol

1210
00:45:07,760 --> 00:45:10,160
you have an explicit connection that

1211
00:45:10,160 --> 00:45:12,480
wraps everything that goes on

1212
00:45:12,480 --> 00:45:15,839
http made the choice to have independent

1213
00:45:15,839 --> 00:45:17,839
packets

1214
00:45:17,839 --> 00:45:19,920
that have no notion of connection no

1215
00:45:19,920 --> 00:45:22,319
identity to link them

1216
00:45:22,319 --> 00:45:24,160
and you can send others in other

1217
00:45:24,160 --> 00:45:26,800
connection that is a big problem

1218
00:45:26,800 --> 00:45:28,400
and that

1219
00:45:28,400 --> 00:45:30,240
we managed to get the secure

1220
00:45:30,240 --> 00:45:32,240
but the replay attack answer because of

1221
00:45:32,240 --> 00:45:35,839
this design usually is use https

1222
00:45:35,839 --> 00:45:38,160
i'm sorry the web doesn't have a better

1223
00:45:38,160 --> 00:45:40,640
answer so we don't either

1224
00:45:40,640 --> 00:45:42,079
yeah um

1225
00:45:42,079 --> 00:45:45,119
so that's actually why um some of the

1226
00:45:45,119 --> 00:45:48,720
newer authentication protocols

1227
00:45:48,720 --> 00:45:50,640
tie the

1228
00:45:50,640 --> 00:45:54,079
um the https parameters into the

1229
00:45:54,079 --> 00:45:56,880
authentication um it's it's called

1230
00:45:56,880 --> 00:46:00,560
universal second factor utf and but

1231
00:46:00,560 --> 00:46:02,720
anyway yeah yeah in cessal terms it will

1232
00:46:02,720 --> 00:46:05,280
be channel binding and we do that yeah i

1233
00:46:05,280 --> 00:46:06,079
i

1234
00:46:06,079 --> 00:46:08,319
i can elaborate a little bit on the

1235
00:46:08,319 --> 00:46:11,440
implementation of crossover in http

1236
00:46:11,440 --> 00:46:12,960
shuttle

1237
00:46:12,960 --> 00:46:17,680
at though acp itself is stateless

1238
00:46:17,680 --> 00:46:19,119
introduced as

1239
00:46:19,119 --> 00:46:24,240
a server-to-server token in the in the

1240
00:46:24,400 --> 00:46:26,240
http headers

1241
00:46:26,240 --> 00:46:28,160
and uh

1242
00:46:28,160 --> 00:46:29,040
those

1243
00:46:29,040 --> 00:46:30,560
the implementation of crossover in

1244
00:46:30,560 --> 00:46:33,200
diameter contains the so-called session

1245
00:46:33,200 --> 00:46:34,240
id

1246
00:46:34,240 --> 00:46:35,040
which

1247
00:46:35,040 --> 00:46:36,240
will be

1248
00:46:36,240 --> 00:46:38,640
disposed by the diameter

1249
00:46:38,640 --> 00:46:39,599
when the

1250
00:46:39,599 --> 00:46:41,119
session is complete

1251
00:46:41,119 --> 00:46:45,040
and so when you then try to replay that

1252
00:46:45,040 --> 00:46:46,880
if i'm correct the diameter won't accept

1253
00:46:46,880 --> 00:46:49,599
it because that session id is no longer

1254
00:46:49,599 --> 00:46:50,960
valid

1255
00:46:50,960 --> 00:46:53,280
okay

1256
00:46:54,319 --> 00:46:56,560
i want to that is the

1257
00:46:56,560 --> 00:46:57,680
s2s

1258
00:46:57,680 --> 00:46:59,680
headers in our most of our current

1259
00:46:59,680 --> 00:47:01,520
implementations is not

1260
00:47:01,520 --> 00:47:04,079
the real state of the of the of the

1261
00:47:04,079 --> 00:47:06,720
server but only and

1262
00:47:06,720 --> 00:47:09,119
in the industry say indirect

1263
00:47:09,119 --> 00:47:12,160
that is the session id of a diameter

1264
00:47:12,160 --> 00:47:13,200
session

1265
00:47:13,200 --> 00:47:14,319
but not a

1266
00:47:14,319 --> 00:47:17,040
state which uh uh

1267
00:47:17,040 --> 00:47:19,200
authentication is currently in because

1268
00:47:19,200 --> 00:47:20,559
then you are totally correct when you do

1269
00:47:20,559 --> 00:47:23,599
that i even made a proof of concept of

1270
00:47:23,599 --> 00:47:26,000
that because we would like to have the

1271
00:47:26,000 --> 00:47:26,880
uh

1272
00:47:26,880 --> 00:47:29,119
headers that have for normal protocols

1273
00:47:29,119 --> 00:47:31,760
the http server to be stateless but then

1274
00:47:31,760 --> 00:47:34,480
then you can very clearly see the the

1275
00:47:34,480 --> 00:47:36,720
indeed the risk of a replay attack

1276
00:47:36,720 --> 00:47:38,240
because of course that succeeds here

1277
00:47:38,240 --> 00:47:39,839
because then you don't have the

1278
00:47:39,839 --> 00:47:41,920
challenge response system anymore

1279
00:47:41,920 --> 00:47:43,520
because you have all the state it

1280
00:47:43,520 --> 00:47:45,359
doesn't matter whether the state is

1281
00:47:45,359 --> 00:47:47,200
encrypted or not you have all the state

1282
00:47:47,200 --> 00:47:49,280
into the s2s and then you can just

1283
00:47:49,280 --> 00:47:51,599
replay the last

1284
00:47:51,599 --> 00:47:54,000
to speak

1285
00:47:54,160 --> 00:47:56,480
to the you can replay that and then

1286
00:47:56,480 --> 00:47:58,559
you're immediately locked in

1287
00:47:58,559 --> 00:48:01,359
that is that is indeed a quite a big

1288
00:48:01,359 --> 00:48:04,559
problem every uh happy i found out and

1289
00:48:04,559 --> 00:48:06,240
together with uh

1290
00:48:06,240 --> 00:48:07,680
some guy

1291
00:48:07,680 --> 00:48:09,920
called steph which is really involved in

1292
00:48:09,920 --> 00:48:12,800
this project who pointed that out as i

1293
00:48:12,800 --> 00:48:15,440
posted to use it on his photo calling

1294
00:48:15,440 --> 00:48:16,720
came up with it

1295
00:48:16,720 --> 00:48:18,240
and the only way

1296
00:48:18,240 --> 00:48:19,680
perhaps we have to investigate it

1297
00:48:19,680 --> 00:48:21,760
further but the only way to circumvent

1298
00:48:21,760 --> 00:48:24,319
it is indeed using uh a secure protocol

1299
00:48:24,319 --> 00:48:26,559
such as http but he's right it is not a

1300
00:48:26,559 --> 00:48:29,760
complete answer to replay attacks um and

1301
00:48:29,760 --> 00:48:32,000
i do have to move that conversation over

1302
00:48:32,000 --> 00:48:34,079
to the bar because unfortunately out of

1303
00:48:34,079 --> 00:48:36,559
time i'm very sorry for that so please

1304
00:48:36,559 --> 00:48:38,800
keep another last warm round of applause

1305
00:48:38,800 --> 00:48:42,359
for rick and henry

1306
00:48:51,839 --> 00:48:53,920
you

