1
00:00:01,280 --> 00:00:12,559
[Music]

2
00:00:15,200 --> 00:00:17,440
this is going to be ssh configuration

3
00:00:17,440 --> 00:00:19,600
intermediate level so

4
00:00:19,600 --> 00:00:22,480
target audience would be uh people who

5
00:00:22,480 --> 00:00:24,880
have uh already

6
00:00:24,880 --> 00:00:27,519
executed an ssh command at one point in

7
00:00:27,519 --> 00:00:28,880
their

8
00:00:28,880 --> 00:00:30,400
deliver deliver developer or

9
00:00:30,400 --> 00:00:33,120
administrative lifetime but have not

10
00:00:33,120 --> 00:00:36,000
delved uh deeper into the possibilities

11
00:00:36,000 --> 00:00:38,559
of ssh so that's that's the target

12
00:00:38,559 --> 00:00:41,760
audience i'm i'm i'm uh

13
00:00:41,760 --> 00:00:44,239
trying to reach if you if you already

14
00:00:44,239 --> 00:00:46,960
know more about the ssh config file of

15
00:00:46,960 --> 00:00:49,440
course you're free to stay um maybe

16
00:00:49,440 --> 00:00:51,360
there's a little nugget of knowledge

17
00:00:51,360 --> 00:00:52,960
that you haven't seen yet or haven't

18
00:00:52,960 --> 00:00:54,000
heard yet

19
00:00:54,000 --> 00:00:56,480
um but otherwise you probably will be

20
00:00:56,480 --> 00:00:58,719
bored just so that you want

21
00:00:58,719 --> 00:00:59,920
um

22
00:00:59,920 --> 00:01:02,640
so yes uh the hashtag if you want to

23
00:01:02,640 --> 00:01:05,519
tweet or or or two or whatever it would

24
00:01:05,519 --> 00:01:09,280
be mmch 2022 and the slides would be

25
00:01:09,280 --> 00:01:11,680
will be available later on on my website

26
00:01:11,680 --> 00:01:14,479
as well as in the far plan audi the

27
00:01:14,479 --> 00:01:17,439
schedule sorry wrong wrong event

28
00:01:17,439 --> 00:01:19,200
um

29
00:01:19,200 --> 00:01:21,600
i'm getting confused i'm getting old

30
00:01:21,600 --> 00:01:24,479
right before we start just one word on

31
00:01:24,479 --> 00:01:26,400
command line syntax so i have a lot of

32
00:01:26,400 --> 00:01:28,320
command line examples

33
00:01:28,320 --> 00:01:31,119
i'm also doing some live demos so just

34
00:01:31,119 --> 00:01:32,880
let me know if the font is too small or

35
00:01:32,880 --> 00:01:35,040
something we can arrange something and i

36
00:01:35,040 --> 00:01:37,759
can modify a few things

37
00:01:37,759 --> 00:01:40,000
in order to make it more readable for

38
00:01:40,000 --> 00:01:42,640
you in the slides i'm i'm following the

39
00:01:42,640 --> 00:01:46,560
posix 2017 standard uh that a new line

40
00:01:46,560 --> 00:01:48,640
followed by backslash uh shall be

41
00:01:48,640 --> 00:01:51,439
interpreted as a line continuation

42
00:01:51,439 --> 00:01:54,159
uh to give you an example of that so the

43
00:01:54,159 --> 00:01:55,759
the command ls

44
00:01:55,759 --> 00:01:58,880
minus a minus l minus t slash temp would

45
00:01:58,880 --> 00:02:01,840
be could also be written as ls backslash

46
00:02:01,840 --> 00:02:04,479
new line manager minus a backslash new

47
00:02:04,479 --> 00:02:07,360
line etc etc the right-hand notation is

48
00:02:07,360 --> 00:02:10,000
just more readable on slides you can

49
00:02:10,000 --> 00:02:12,000
just compress it into one line once you

50
00:02:12,000 --> 00:02:13,760
execute them

51
00:02:13,760 --> 00:02:16,000
right so should we get into it i think

52
00:02:16,000 --> 00:02:17,680
we should because otherwise i'm running

53
00:02:17,680 --> 00:02:19,440
out of time but i think we're good on

54
00:02:19,440 --> 00:02:20,319
that

55
00:02:20,319 --> 00:02:22,720
um that's that's your usual command

56
00:02:22,720 --> 00:02:24,720
right that's what you do if you do ssh

57
00:02:24,720 --> 00:02:28,000
on a machine um you have the command ssh

58
00:02:28,000 --> 00:02:30,560
then you have the username the add sign

59
00:02:30,560 --> 00:02:32,800
and then the host uh that you want to

60
00:02:32,800 --> 00:02:33,760
reach

61
00:02:33,760 --> 00:02:37,599
once once you enter enter that um whoops

62
00:02:37,599 --> 00:02:40,239
not yet once you enter that uh the

63
00:02:40,239 --> 00:02:42,879
server prompts you for the password or

64
00:02:42,879 --> 00:02:45,840
even wants to verify the the the the

65
00:02:45,840 --> 00:02:47,760
fingerprint of the server and then asks

66
00:02:47,760 --> 00:02:51,599
for the password and if you then then

67
00:02:51,599 --> 00:02:53,840
you do your work you disconnect later on

68
00:02:53,840 --> 00:02:56,160
you connect again the server again asks

69
00:02:56,160 --> 00:02:58,560
for your password you type this in over

70
00:02:58,560 --> 00:03:00,640
and over and over again

71
00:03:00,640 --> 00:03:02,319
it's it's a little bit boring if you're

72
00:03:02,319 --> 00:03:05,280
using sstp for example to copy files

73
00:03:05,280 --> 00:03:06,319
again

74
00:03:06,319 --> 00:03:09,760
uh you have to to to execute scp

75
00:03:09,760 --> 00:03:11,920
username add hostname then it asks for

76
00:03:11,920 --> 00:03:14,159
the password and that's rather boring

77
00:03:14,159 --> 00:03:15,519
and and

78
00:03:15,519 --> 00:03:17,760
repetitive so let's see if we can do

79
00:03:17,760 --> 00:03:20,720
something about that and i mean this is

80
00:03:20,720 --> 00:03:23,440
of course the uh easy example it could

81
00:03:23,440 --> 00:03:25,599
be a lot worse if you have a system

82
00:03:25,599 --> 00:03:27,120
administrator who's

83
00:03:27,120 --> 00:03:30,159
heavily into uh hp lovecraft inspired

84
00:03:30,159 --> 00:03:32,400
server names you get server names like

85
00:03:32,400 --> 00:03:33,280
these

86
00:03:33,280 --> 00:03:35,840
and i think you don't want to type this

87
00:03:35,840 --> 00:03:38,799
more than once right i mean that's just

88
00:03:38,799 --> 00:03:40,720
calling for problems

89
00:03:40,720 --> 00:03:42,480
fortunately uh this is by the way the

90
00:03:42,480 --> 00:03:45,120
god of synchronous um and is one of the

91
00:03:45,120 --> 00:03:48,319
greater old ones in case you wonder

92
00:03:48,319 --> 00:03:50,319
um

93
00:03:50,319 --> 00:03:53,519
the thing or the the ssh

94
00:03:53,519 --> 00:03:55,040
feature that we are going to use and

95
00:03:55,040 --> 00:03:57,680
which i will spend a lot of time on

96
00:03:57,680 --> 00:04:00,799
is called ssh config

97
00:04:00,799 --> 00:04:01,599
so

98
00:04:01,599 --> 00:04:02,959
if you do a man

99
00:04:02,959 --> 00:04:05,680
a man 5 ssh config this is the

100
00:04:05,680 --> 00:04:07,439
information you will get i mean this is

101
00:04:07,439 --> 00:04:09,920
a lot more condensed than the main page

102
00:04:09,920 --> 00:04:12,319
basically you can configure your ssh

103
00:04:12,319 --> 00:04:14,720
command of course for the command line

104
00:04:14,720 --> 00:04:18,160
options username at host and a few other

105
00:04:18,160 --> 00:04:18,959
other

106
00:04:18,959 --> 00:04:20,880
commands and parameters

107
00:04:20,880 --> 00:04:22,639
you can use a user

108
00:04:22,639 --> 00:04:24,560
a user configuration file so this is a

109
00:04:24,560 --> 00:04:27,120
configuration that is applicable to for

110
00:04:27,120 --> 00:04:30,400
and to each user each user can have his

111
00:04:30,400 --> 00:04:32,160
or her own

112
00:04:32,160 --> 00:04:34,560
config file and of course as a system

113
00:04:34,560 --> 00:04:36,479
administrator you can also uh provide a

114
00:04:36,479 --> 00:04:38,240
system-wide configuration file for the

115
00:04:38,240 --> 00:04:40,160
ssh client

116
00:04:40,160 --> 00:04:41,120
um

117
00:04:41,120 --> 00:04:43,600
in this in this talk i'm going to to

118
00:04:43,600 --> 00:04:46,639
focus on the user configuration file

119
00:04:46,639 --> 00:04:47,520
um

120
00:04:47,520 --> 00:04:50,720
which is hosted in the user's home page

121
00:04:50,720 --> 00:04:52,400
which is um

122
00:04:52,400 --> 00:04:53,199
um

123
00:04:53,199 --> 00:04:55,759
symbolized by the tilde and it's in a

124
00:04:55,759 --> 00:04:57,440
hidden in the hidden directory called

125
00:04:57,440 --> 00:04:59,520
dot dot ssh

126
00:04:59,520 --> 00:05:02,560
and it's called uh config surprisingly

127
00:05:02,560 --> 00:05:03,520
yeah

128
00:05:03,520 --> 00:05:04,479
um

129
00:05:04,479 --> 00:05:06,880
what can we do in that config file well

130
00:05:06,880 --> 00:05:08,800
what for one thing

131
00:05:08,800 --> 00:05:11,759
um we can define hostname alliances so

132
00:05:11,759 --> 00:05:14,080
in case of of the name of an elder god

133
00:05:14,080 --> 00:05:16,240
or something like that you can just

134
00:05:16,240 --> 00:05:18,960
define the host demo

135
00:05:18,960 --> 00:05:21,680
and then specify one or more host names

136
00:05:21,680 --> 00:05:23,840
this applies to or the other one no so

137
00:05:23,840 --> 00:05:25,600
sorry the other way around so you have

138
00:05:25,600 --> 00:05:28,080
one host name your target your the

139
00:05:28,080 --> 00:05:30,840
server you want to reach is ssh

140
00:05:30,840 --> 00:05:32,479
iphoneserver.example.com

141
00:05:32,479 --> 00:05:34,560
and with the host statement you can give

142
00:05:34,560 --> 00:05:37,840
it one or more um aliases which is

143
00:05:37,840 --> 00:05:40,800
useful which cuts down on the characters

144
00:05:40,800 --> 00:05:43,199
you have to type at the command line um

145
00:05:43,199 --> 00:05:45,919
quite heavily and you cannot only have

146
00:05:45,919 --> 00:05:48,080
one alias for the same host name but you

147
00:05:48,080 --> 00:05:50,000
can have several alliances for the same

148
00:05:50,000 --> 00:05:52,880
host name so you can have demo d1 or

149
00:05:52,880 --> 00:05:55,759
popocatepetl if that's more your thing

150
00:05:55,759 --> 00:05:57,120
to type

151
00:05:57,120 --> 00:05:58,160
and

152
00:05:58,160 --> 00:06:00,360
so instead of

153
00:06:00,360 --> 00:06:04,240
sshserver.example.com i just type sshd1

154
00:06:04,240 --> 00:06:07,360
and that cuts down tremendously on the

155
00:06:07,360 --> 00:06:10,400
number of characters i have to type um

156
00:06:10,400 --> 00:06:12,160
to reach that server

157
00:06:12,160 --> 00:06:14,880
um furthermore the host name also has a

158
00:06:14,880 --> 00:06:16,240
nice feature

159
00:06:16,240 --> 00:06:19,600
um to use a wildcard to support

160
00:06:19,600 --> 00:06:23,360
grouping similar host names so if i have

161
00:06:23,360 --> 00:06:27,039
smtp imap and www

162
00:06:27,039 --> 00:06:28,960
host names that are all

163
00:06:28,960 --> 00:06:30,960
connecting to the same to the same or

164
00:06:30,960 --> 00:06:33,280
resolve to the same machine

165
00:06:33,280 --> 00:06:35,360
i could use the

166
00:06:35,360 --> 00:06:39,360
percentage feature uh to you to um

167
00:06:39,360 --> 00:06:43,280
use the elias as the host name in the

168
00:06:43,280 --> 00:06:44,240
um

169
00:06:44,240 --> 00:06:45,759
fully qualified domain name of the

170
00:06:45,759 --> 00:06:48,400
hostname parameter

171
00:06:48,400 --> 00:06:52,000
right so that already so instead of um

172
00:06:52,000 --> 00:06:54,080
ssh uh

173
00:06:54,080 --> 00:06:57,360
ssh hyphen server.example.com we can

174
00:06:57,360 --> 00:07:00,000
just type ssh demo so that's that's one

175
00:07:00,000 --> 00:07:04,160
one thing we can um cut down on typing

176
00:07:04,160 --> 00:07:05,520
the other thing we can cut down on

177
00:07:05,520 --> 00:07:08,080
typing is of course the username so i

178
00:07:08,080 --> 00:07:11,039
still have to to type ssh username at

179
00:07:11,039 --> 00:07:12,000
host

180
00:07:12,000 --> 00:07:14,319
or at alias

181
00:07:14,319 --> 00:07:17,520
fortunately the config file also has a

182
00:07:17,520 --> 00:07:20,720
user directive so i can specify a

183
00:07:20,720 --> 00:07:22,479
username i want to use for that

184
00:07:22,479 --> 00:07:24,720
particular host or a liars

185
00:07:24,720 --> 00:07:26,400
which cuts down

186
00:07:26,400 --> 00:07:27,520
on the

187
00:07:27,520 --> 00:07:30,319
amount of type tremendously so compare

188
00:07:30,319 --> 00:07:32,400
these two statements the first one is

189
00:07:32,400 --> 00:07:34,080
the one i showed you at the beginning

190
00:07:34,080 --> 00:07:37,680
it's ssh username at host name and now i

191
00:07:37,680 --> 00:07:40,000
just have to type ssh demo and

192
00:07:40,000 --> 00:07:43,759
everything i specified in my config file

193
00:07:43,759 --> 00:07:44,720
is

194
00:07:44,720 --> 00:07:46,879
therefore applied and i don't have to

195
00:07:46,879 --> 00:07:48,560
type it

196
00:07:48,560 --> 00:07:49,680
myself

197
00:07:49,680 --> 00:07:51,039
so

198
00:07:51,039 --> 00:07:53,360
this is all sounds good but let me show

199
00:07:53,360 --> 00:07:55,520
you how this actually works

200
00:07:55,520 --> 00:07:57,520
so i am on my

201
00:07:57,520 --> 00:08:00,800
i am on my server on my on my client

202
00:08:00,800 --> 00:08:04,080
um and i want to configure my ssh config

203
00:08:04,080 --> 00:08:05,759
so

204
00:08:05,759 --> 00:08:09,280
i load i start my my preferred editor

205
00:08:09,280 --> 00:08:13,199
and i'm going to my let's see if i can

206
00:08:13,199 --> 00:08:15,759
type while everyone is watching

207
00:08:15,759 --> 00:08:18,000
and there should be there will be a

208
00:08:18,000 --> 00:08:20,319
config file so i'm using an editor not

209
00:08:20,319 --> 00:08:22,800
an operating system like emacs

210
00:08:22,800 --> 00:08:24,800
and

211
00:08:24,800 --> 00:08:27,520
um

212
00:08:27,520 --> 00:08:29,280
this is this is what we just talked

213
00:08:29,280 --> 00:08:32,000
about i have my target server which has

214
00:08:32,000 --> 00:08:35,039
the host name of ssh server example.com

215
00:08:35,039 --> 00:08:37,679
and i defined two elises here one one is

216
00:08:37,679 --> 00:08:39,919
demo the second one is bastion which i

217
00:08:39,919 --> 00:08:42,159
will need in a later example and i

218
00:08:42,159 --> 00:08:44,959
specify my username um

219
00:08:44,959 --> 00:08:48,160
for this for this setup which is uh

220
00:08:48,160 --> 00:08:49,839
in this case ladder

221
00:08:49,839 --> 00:08:51,279
and

222
00:08:51,279 --> 00:08:56,160
if everything works as i expect

223
00:08:57,279 --> 00:09:01,920
i should now be able to do ssh demo

224
00:09:03,600 --> 00:09:06,640
and i'm connected to the server and i

225
00:09:06,640 --> 00:09:08,720
asked me for my password

226
00:09:08,720 --> 00:09:10,480
and i'm connected to my server so that

227
00:09:10,480 --> 00:09:11,440
would be

228
00:09:11,440 --> 00:09:14,160
as i said before a tremendous cut down

229
00:09:14,160 --> 00:09:16,160
on the number of characters that we have

230
00:09:16,160 --> 00:09:18,000
to type and

231
00:09:18,000 --> 00:09:19,600
as we are all system admins or

232
00:09:19,600 --> 00:09:21,440
developers we are all lazy we want to

233
00:09:21,440 --> 00:09:23,519
cut down on the thing with the stuff we

234
00:09:23,519 --> 00:09:25,760
actually have to do we much more prefer

235
00:09:25,760 --> 00:09:28,000
to wait for the for the compiler to

236
00:09:28,000 --> 00:09:30,160
compile or to the

237
00:09:30,160 --> 00:09:33,600
file transfer to uh complete

238
00:09:33,600 --> 00:09:35,040
right

239
00:09:35,040 --> 00:09:37,200
so as you noticed

240
00:09:37,200 --> 00:09:39,839
this this cuts down on the connect

241
00:09:39,839 --> 00:09:41,920
whoops connectivity

242
00:09:41,920 --> 00:09:45,519
uh but we still the server is still um

243
00:09:45,519 --> 00:09:47,760
asking for a password

244
00:09:47,760 --> 00:09:48,560
so

245
00:09:48,560 --> 00:09:51,120
how can we how can we fix this well

246
00:09:51,120 --> 00:09:53,120
there's something called ssh public key

247
00:09:53,120 --> 00:09:54,560
authentication

248
00:09:54,560 --> 00:09:57,040
so that helps us it uses basically the

249
00:09:57,040 --> 00:09:59,440
public private key um

250
00:09:59,440 --> 00:10:02,160
setup that we already know from tls or

251
00:10:02,160 --> 00:10:03,920
other protocols

252
00:10:03,920 --> 00:10:05,040
to use

253
00:10:05,040 --> 00:10:07,120
keys to authenticate against the ssh

254
00:10:07,120 --> 00:10:08,880
server so i don't have to provide my

255
00:10:08,880 --> 00:10:11,680
password every time i want to connect to

256
00:10:11,680 --> 00:10:12,720
a server

257
00:10:12,720 --> 00:10:14,800
additionally

258
00:10:14,800 --> 00:10:18,399
the ssh public key authentication pro

259
00:10:18,399 --> 00:10:22,000
improves security considerably

260
00:10:22,000 --> 00:10:24,480
and also offers additional usability

261
00:10:24,480 --> 00:10:26,720
user usability benefits like single

262
00:10:26,720 --> 00:10:30,160
sign-on across multiple ssh servers and

263
00:10:30,160 --> 00:10:31,839
another neat feature i will show you in

264
00:10:31,839 --> 00:10:34,560
a little bit once we got this all set up

265
00:10:34,560 --> 00:10:37,519
um the one thing you have to remember

266
00:10:37,519 --> 00:10:38,640
um

267
00:10:38,640 --> 00:10:40,959
for asymmetric cryplata3 you probably

268
00:10:40,959 --> 00:10:43,040
know but i want to emphasize this as i'm

269
00:10:43,040 --> 00:10:46,320
targeting maybe new developers or new

270
00:10:46,320 --> 00:10:48,800
system administrators is

271
00:10:48,800 --> 00:10:50,399
there are two keys in play with

272
00:10:50,399 --> 00:10:52,480
asymmetric cryptography there's a public

273
00:10:52,480 --> 00:10:54,640
key and there's a private key

274
00:10:54,640 --> 00:10:56,720
the public key you can share with

275
00:10:56,720 --> 00:10:58,880
everyone that's sharing is caring share

276
00:10:58,880 --> 00:11:01,680
your public key as much as you like

277
00:11:01,680 --> 00:11:03,279
there's no problem with that put it on

278
00:11:03,279 --> 00:11:06,079
the server post it on your website send

279
00:11:06,079 --> 00:11:09,440
it through fax if you live in germany

280
00:11:09,440 --> 00:11:10,640
it's fine

281
00:11:10,640 --> 00:11:12,560
on the other hand the private key the

282
00:11:12,560 --> 00:11:14,079
private key is something you keep to

283
00:11:14,079 --> 00:11:16,000
yourself that should reside on your

284
00:11:16,000 --> 00:11:18,079
laptop that should reside on your on

285
00:11:18,079 --> 00:11:20,800
your pc and you should not hand that out

286
00:11:20,800 --> 00:11:22,160
you should not put it in a git

287
00:11:22,160 --> 00:11:24,800
repository you should not put it on a on

288
00:11:24,800 --> 00:11:28,079
the cloud store this is your private key

289
00:11:28,079 --> 00:11:29,920
and your private key only and it should

290
00:11:29,920 --> 00:11:31,680
not be shared

291
00:11:31,680 --> 00:11:35,200
um if it happens create a new one

292
00:11:35,200 --> 00:11:37,519
um

293
00:11:38,399 --> 00:11:40,640
my preview just went out

294
00:11:40,640 --> 00:11:42,720
but okay that this one is working okay

295
00:11:42,720 --> 00:11:43,839
no worries

296
00:11:43,839 --> 00:11:45,760
all right um

297
00:11:45,760 --> 00:11:48,000
we could do we could so

298
00:11:48,000 --> 00:11:50,720
basically what it does is um the the

299
00:11:50,720 --> 00:11:53,200
server and the client um exchange a few

300
00:11:53,200 --> 00:11:55,600
messages encrypting encrypting with the

301
00:11:55,600 --> 00:11:57,839
public key so

302
00:11:57,839 --> 00:11:59,920
as a user if you want to use private

303
00:11:59,920 --> 00:12:02,480
public key cryptography to log into an

304
00:12:02,480 --> 00:12:05,519
ssh server you have to to copy

305
00:12:05,519 --> 00:12:07,440
one time you have to copy your public

306
00:12:07,440 --> 00:12:09,680
key to the server so the server knows

307
00:12:09,680 --> 00:12:11,200
your public key

308
00:12:11,200 --> 00:12:13,839
once the server knows your public key it

309
00:12:13,839 --> 00:12:17,440
can then send you during the

310
00:12:17,440 --> 00:12:19,600
initiation of the connect of the

311
00:12:19,600 --> 00:12:22,000
connection it will it will send the

312
00:12:22,000 --> 00:12:23,920
client a message encrypted with the

313
00:12:23,920 --> 00:12:25,839
public key of the client

314
00:12:25,839 --> 00:12:27,920
the client can therefore

315
00:12:27,920 --> 00:12:30,959
decrypt that message with its private

316
00:12:30,959 --> 00:12:32,000
key

317
00:12:32,000 --> 00:12:34,480
will encrypt an answer

318
00:12:34,480 --> 00:12:36,399
that that also includes the message that

319
00:12:36,399 --> 00:12:39,519
the server sent with the pro with the

320
00:12:39,519 --> 00:12:41,200
with the private key of the client and

321
00:12:41,200 --> 00:12:42,800
the partner with the public key of the

322
00:12:42,800 --> 00:12:44,959
server sends it back to the server and

323
00:12:44,959 --> 00:12:46,800
the server decrypted with its private

324
00:12:46,800 --> 00:12:49,120
key and checks that the the messages

325
00:12:49,120 --> 00:12:51,839
were transmitted without change

326
00:12:51,839 --> 00:12:54,079
therefore authenticating the client and

327
00:12:54,079 --> 00:12:56,639
allowing you to start to work um this is

328
00:12:56,639 --> 00:12:59,360
all working under the hood um

329
00:12:59,360 --> 00:13:00,880
it's using the diffie-hellman key

330
00:13:00,880 --> 00:13:02,959
exchange so we know that it is secure

331
00:13:02,959 --> 00:13:05,519
and safe and it's properly implemented

332
00:13:05,519 --> 00:13:06,959
um

333
00:13:06,959 --> 00:13:09,360
at least in the in the more um

334
00:13:09,360 --> 00:13:11,680
uh used uh

335
00:13:11,680 --> 00:13:13,920
distributions so this is really it's

336
00:13:13,920 --> 00:13:16,399
really simple and it's a few commands um

337
00:13:16,399 --> 00:13:18,800
and you're up uh you're on the way to go

338
00:13:18,800 --> 00:13:21,040
so what do you need for public private

339
00:13:21,040 --> 00:13:23,440
key cryptography or public private key

340
00:13:23,440 --> 00:13:26,079
ssh authentication you need a key of

341
00:13:26,079 --> 00:13:27,760
course you need two keys a public key in

342
00:13:27,760 --> 00:13:30,320
the private key the command to create

343
00:13:30,320 --> 00:13:32,079
that would be

344
00:13:32,079 --> 00:13:33,120
come on

345
00:13:33,120 --> 00:13:36,480
ssh keygen so ssh keegan has quite a lot

346
00:13:36,480 --> 00:13:39,120
of parameters um these are the ones i

347
00:13:39,120 --> 00:13:43,120
regularly use and i usually recommend

348
00:13:43,120 --> 00:13:44,000
um

349
00:13:44,000 --> 00:13:46,880
so you have to command ssh keygen or kik

350
00:13:46,880 --> 00:13:48,959
generator um

351
00:13:48,959 --> 00:13:50,320
and then

352
00:13:50,320 --> 00:13:53,279
you're using you're specifying the type

353
00:13:53,279 --> 00:13:55,279
of

354
00:13:55,279 --> 00:13:57,279
public private key cryptography that you

355
00:13:57,279 --> 00:13:59,440
want to use in this case i'm using

356
00:13:59,440 --> 00:14:02,320
curve25519

357
00:14:02,320 --> 00:14:04,560
oh it's raining nice it's two five five

358
00:14:04,560 --> 00:14:06,800
nineteen which is an elliptic curve

359
00:14:06,800 --> 00:14:08,079
which creates

360
00:14:08,079 --> 00:14:10,560
highly secure but very small keys so

361
00:14:10,560 --> 00:14:12,959
this is really a nice feature if you're

362
00:14:12,959 --> 00:14:15,120
using uh if you're working with embedded

363
00:14:15,120 --> 00:14:16,959
systems and stuff like that they are

364
00:14:16,959 --> 00:14:20,480
usually happily using um um

365
00:14:20,480 --> 00:14:23,199
to uh elliptic curve cryptography of

366
00:14:23,199 --> 00:14:26,000
course you could also still use uh rsa

367
00:14:26,000 --> 00:14:30,399
keys they're just 40 40 or 40 000 bit uh

368
00:14:30,399 --> 00:14:33,920
length is fine and it works as well

369
00:14:33,920 --> 00:14:36,399
just a little bit bigger and all modern

370
00:14:36,399 --> 00:14:38,600
systems usually support

371
00:14:38,600 --> 00:14:41,279
ed2525519 so it's good

372
00:14:41,279 --> 00:14:42,480
um

373
00:14:42,480 --> 00:14:45,760
the a option is um

374
00:14:45,760 --> 00:14:48,160
is a pet peeve of mine um you can leave

375
00:14:48,160 --> 00:14:49,760
it out if you want to that's basically

376
00:14:49,760 --> 00:14:51,199
defining

377
00:14:51,199 --> 00:14:53,839
the number of rounds um

378
00:14:53,839 --> 00:14:56,240
that the algorithm

379
00:14:56,240 --> 00:14:58,639
computes when it creates the key

380
00:14:58,639 --> 00:15:01,279
um the higher number will result in a

381
00:15:01,279 --> 00:15:03,839
slower pass phrase verification

382
00:15:03,839 --> 00:15:06,720
um process but it will increase your

383
00:15:06,720 --> 00:15:09,600
resistance to brute force um password

384
00:15:09,600 --> 00:15:11,519
cracking of the private key in case it

385
00:15:11,519 --> 00:15:14,880
gets stolen so that's basically um

386
00:15:14,880 --> 00:15:17,199
a security feature in case your private

387
00:15:17,199 --> 00:15:20,320
key gets accidentally uploaded to github

388
00:15:20,320 --> 00:15:22,240
or something like that

389
00:15:22,240 --> 00:15:24,079
i think we have to turn up the volume

390
00:15:24,079 --> 00:15:26,079
because the rain is getting really loud

391
00:15:26,079 --> 00:15:28,479
thank you

392
00:15:29,440 --> 00:15:31,519
the minus f

393
00:15:31,519 --> 00:15:33,440
the minus f option

394
00:15:33,440 --> 00:15:35,680
is there to

395
00:15:35,680 --> 00:15:37,680
specify the file name where you want to

396
00:15:37,680 --> 00:15:39,040
save your

397
00:15:39,040 --> 00:15:41,920
private key and your public key

398
00:15:41,920 --> 00:15:43,839
you specify a file name and the

399
00:15:43,839 --> 00:15:46,399
extensions will be added as needed in

400
00:15:46,399 --> 00:15:48,399
this case and i usually do that i save

401
00:15:48,399 --> 00:15:51,279
it into my home directory into the ssh

402
00:15:51,279 --> 00:15:55,079
directory and i named it in this case

403
00:15:55,079 --> 00:15:57,839
demo.ed255519 because i do it

404
00:15:57,839 --> 00:16:00,959
what i would highly recommend is to

405
00:16:00,959 --> 00:16:03,839
always if you're using ssh keygen to

406
00:16:03,839 --> 00:16:06,880
always add a comment with the minus

407
00:16:06,880 --> 00:16:09,680
capital c option

408
00:16:09,680 --> 00:16:12,399
because if you have multiple keys

409
00:16:12,399 --> 00:16:14,639
figuring out which key belongs to what

410
00:16:14,639 --> 00:16:16,000
and which key

411
00:16:16,000 --> 00:16:17,759
applies to which server or to which

412
00:16:17,759 --> 00:16:20,560
customer can get quite tedious so having

413
00:16:20,560 --> 00:16:22,639
a comment reminding me oh i created this

414
00:16:22,639 --> 00:16:25,360
for mch okay i can delete it or oh i

415
00:16:25,360 --> 00:16:27,519
still need it or whatever so

416
00:16:27,519 --> 00:16:30,320
um having a comment in the key is always

417
00:16:30,320 --> 00:16:31,120
um

418
00:16:31,120 --> 00:16:33,199
a very nice feature

419
00:16:33,199 --> 00:16:34,839
so

420
00:16:34,839 --> 00:16:37,440
um let's now let's before we look at

421
00:16:37,440 --> 00:16:40,800
that let's let's do this um

422
00:16:40,800 --> 00:16:43,600
again i have my command line and i

423
00:16:43,600 --> 00:16:46,399
create a key

424
00:16:47,199 --> 00:16:48,399
um

425
00:16:48,399 --> 00:16:50,480
as i said before

426
00:16:50,480 --> 00:16:53,440
i have it here in the paraline syntax

427
00:16:53,440 --> 00:16:55,360
and here in the command line i'm just

428
00:16:55,360 --> 00:16:58,240
using one line

429
00:16:59,440 --> 00:17:02,000
i'm you should always have a passphrase

430
00:17:02,000 --> 00:17:03,600
on your key

431
00:17:03,600 --> 00:17:06,079
and of course if you type in public you

432
00:17:06,079 --> 00:17:08,240
never type the password correctly again

433
00:17:08,240 --> 00:17:10,240
twice

434
00:17:10,240 --> 00:17:11,760
let's see

435
00:17:11,760 --> 00:17:15,359
okay three times a charm

436
00:17:17,359 --> 00:17:19,760
not talking and typing at the same time

437
00:17:19,760 --> 00:17:20,799
helps

438
00:17:20,799 --> 00:17:23,199
and once the computer is fini has

439
00:17:23,199 --> 00:17:26,160
finished its computations you get an

440
00:17:26,160 --> 00:17:28,400
output like this and let me show you a

441
00:17:28,400 --> 00:17:30,640
little bit more about that output

442
00:17:30,640 --> 00:17:33,200
so that's the output basically

443
00:17:33,200 --> 00:17:36,559
and the first thing it it is um it's

444
00:17:36,559 --> 00:17:38,919
telling you okay i'm creating an

445
00:17:38,919 --> 00:17:41,760
ed25519 key pair and it asks you for a

446
00:17:41,760 --> 00:17:44,080
passphrase as said before you should

447
00:17:44,080 --> 00:17:47,520
always have a passphrase there should no

448
00:17:47,520 --> 00:17:49,919
no private key without a passphrase

449
00:17:49,919 --> 00:17:52,000
except for some very special

450
00:17:52,000 --> 00:17:53,600
circumstances where you should really

451
00:17:53,600 --> 00:17:55,520
know what you're doing as we're talking

452
00:17:55,520 --> 00:17:57,679
about intermediate level setups you

453
00:17:57,679 --> 00:17:59,919
should always have a passphrase for an

454
00:17:59,919 --> 00:18:02,720
ssh key

455
00:18:02,720 --> 00:18:06,160
once ssh keegan has finished its work it

456
00:18:06,160 --> 00:18:08,559
also can generate it tells us it

457
00:18:08,559 --> 00:18:10,720
generated two files

458
00:18:10,720 --> 00:18:14,080
um the demo ed25519 file that's your

459
00:18:14,080 --> 00:18:16,000
private key

460
00:18:16,000 --> 00:18:18,320
if it has the extension dot pub that's

461
00:18:18,320 --> 00:18:21,440
your public key please don't mix them up

462
00:18:21,440 --> 00:18:24,000
please don't upload the private key to

463
00:18:24,000 --> 00:18:29,520
github or gitlab or another of these um

464
00:18:29,520 --> 00:18:30,640
sites

465
00:18:30,640 --> 00:18:32,720
these files are actually text files so

466
00:18:32,720 --> 00:18:34,400
you can take a look at them so let's

467
00:18:34,400 --> 00:18:36,400
take a look at the public file the

468
00:18:36,400 --> 00:18:38,080
public file

469
00:18:38,080 --> 00:18:39,600
begins

470
00:18:39,600 --> 00:18:42,320
with the information okay which which

471
00:18:42,320 --> 00:18:46,799
encryption algorithm did which which um

472
00:18:48,000 --> 00:18:50,400
asymmetric option did we choose we chose

473
00:18:50,400 --> 00:18:53,200
um ed25519

474
00:18:53,200 --> 00:18:55,120
then there's the key information again

475
00:18:55,120 --> 00:18:56,799
this is the public key you can share

476
00:18:56,799 --> 00:18:59,280
this freely and the nice thing about it

477
00:18:59,280 --> 00:19:01,679
is at the end of the public key the

478
00:19:01,679 --> 00:19:03,760
command gets added so if you add this to

479
00:19:03,760 --> 00:19:06,080
a server the administrator also has an

480
00:19:06,080 --> 00:19:08,880
option to see okay whose key is this why

481
00:19:08,880 --> 00:19:11,360
is it there um so choose a

482
00:19:11,360 --> 00:19:13,919
proper comment and it will your life and

483
00:19:13,919 --> 00:19:16,480
the life of your administrator um a lot

484
00:19:16,480 --> 00:19:17,760
easier

485
00:19:17,760 --> 00:19:19,760
um i'm doing this here as it's a demo

486
00:19:19,760 --> 00:19:21,440
setup and i scratch it but you should

487
00:19:21,440 --> 00:19:25,840
never do this in public

488
00:19:25,840 --> 00:19:28,240
you can also of course take a look at

489
00:19:28,240 --> 00:19:30,720
the private key which basically looks

490
00:19:30,720 --> 00:19:32,559
like this

491
00:19:32,559 --> 00:19:33,600
and

492
00:19:33,600 --> 00:19:37,120
resides on your client

493
00:19:37,120 --> 00:19:39,280
um

494
00:19:39,280 --> 00:19:40,559
again

495
00:19:40,559 --> 00:19:42,640
the

496
00:19:42,640 --> 00:19:44,880
anyone with a copy of the public key can

497
00:19:44,880 --> 00:19:47,919
encrypt data for you but only you if you

498
00:19:47,919 --> 00:19:50,799
own the private key can decrypt

499
00:19:50,799 --> 00:19:53,280
um so this this um

500
00:19:53,280 --> 00:19:55,600
authorized keys for you are really your

501
00:19:55,600 --> 00:19:57,360
thing and you should handle your private

502
00:19:57,360 --> 00:19:59,200
key very carefully

503
00:19:59,200 --> 00:20:01,840
um on the other hand um the

504
00:20:01,840 --> 00:20:04,159
public private key

505
00:20:04,159 --> 00:20:06,000
key pair is free they're free to

506
00:20:06,000 --> 00:20:07,760
generate you've seen this takes

507
00:20:07,760 --> 00:20:10,480
literally a few seconds to generate once

508
00:20:10,480 --> 00:20:12,559
you have the command down so please

509
00:20:12,559 --> 00:20:15,120
please please create more than one key

510
00:20:15,120 --> 00:20:16,960
if you connect to different servers if

511
00:20:16,960 --> 00:20:19,200
you connect to different customer

512
00:20:19,200 --> 00:20:22,559
servers for example have at least a key

513
00:20:22,559 --> 00:20:25,760
pair for each customer if you if you're

514
00:20:25,760 --> 00:20:28,000
connecting to github and to gitlab

515
00:20:28,000 --> 00:20:30,640
please create a public private key pair

516
00:20:30,640 --> 00:20:32,240
for github and the

517
00:20:32,240 --> 00:20:34,559
separate one for git lab

518
00:20:34,559 --> 00:20:36,640
because what happens if you lose one of

519
00:20:36,640 --> 00:20:38,240
these keys

520
00:20:38,240 --> 00:20:40,080
if you have if you only have one public

521
00:20:40,080 --> 00:20:41,600
private key pair

522
00:20:41,600 --> 00:20:44,559
all of the systems are compromised

523
00:20:44,559 --> 00:20:46,240
if you have a if you have a public

524
00:20:46,240 --> 00:20:48,960
private key pair for each customer or

525
00:20:48,960 --> 00:20:50,640
for each service that you're going to

526
00:20:50,640 --> 00:20:52,559
use so for each server even that you're

527
00:20:52,559 --> 00:20:55,280
going to connect to only that server is

528
00:20:55,280 --> 00:20:59,280
affected and only you have to to

529
00:20:59,280 --> 00:21:01,440
make the the system administrator of

530
00:21:01,440 --> 00:21:03,840
that server aware there's nothing

531
00:21:03,840 --> 00:21:06,000
there's nothing for i'm i'm doing a lot

532
00:21:06,000 --> 00:21:08,240
of consulting work um there's nothing

533
00:21:08,240 --> 00:21:10,320
more embarrassing to than to tell the

534
00:21:10,320 --> 00:21:12,799
customer look i lost the key pair for

535
00:21:12,799 --> 00:21:14,799
for the for access to another customer

536
00:21:14,799 --> 00:21:17,200
servers but your servers are also

537
00:21:17,200 --> 00:21:19,039
affected because they use the same

538
00:21:19,039 --> 00:21:21,120
public private key pair that's not a

539
00:21:21,120 --> 00:21:22,559
good that's not a nice thing to

540
00:21:22,559 --> 00:21:24,480
communicate so

541
00:21:24,480 --> 00:21:26,880
they are free it doesn't cost much a

542
00:21:26,880 --> 00:21:28,240
great one for each server of each

543
00:21:28,240 --> 00:21:32,080
customer or each service you connect to

544
00:21:32,240 --> 00:21:33,679
sorry

545
00:21:33,679 --> 00:21:34,880
so

546
00:21:34,880 --> 00:21:36,720
um

547
00:21:36,720 --> 00:21:39,200
that was the creation

548
00:21:39,200 --> 00:21:43,480
of the key pair just give me a second

549
00:21:45,360 --> 00:21:47,120
and i already mentioned that we should

550
00:21:47,120 --> 00:21:48,480
connect that

551
00:21:48,480 --> 00:21:50,320
in order for this to work we have to

552
00:21:50,320 --> 00:21:52,080
copy

553
00:21:52,080 --> 00:21:53,280
the

554
00:21:53,280 --> 00:21:54,400
um

555
00:21:54,400 --> 00:21:56,880
public key and only the public key to

556
00:21:56,880 --> 00:21:59,120
the server we want to connect to

557
00:21:59,120 --> 00:22:01,679
so there are several options to do that

558
00:22:01,679 --> 00:22:03,679
um you can copy it through

559
00:22:03,679 --> 00:22:06,720
the clipboard you can

560
00:22:06,720 --> 00:22:08,640
transfer it as a file

561
00:22:08,640 --> 00:22:10,559
but and that's the nice thing there's

562
00:22:10,559 --> 00:22:12,880
also a command for it so there's ssh

563
00:22:12,880 --> 00:22:14,559
copy id

564
00:22:14,559 --> 00:22:18,559
which will allow you to copy the um

565
00:22:18,559 --> 00:22:19,840
to copy the

566
00:22:19,840 --> 00:22:22,159
public key to a server

567
00:22:22,159 --> 00:22:26,240
um that you want that public key copy to

568
00:22:26,240 --> 00:22:28,159
again it's the same syntax as for all

569
00:22:28,159 --> 00:22:31,120
other services and that see i missed i

570
00:22:31,120 --> 00:22:32,720
missed the server name there i will show

571
00:22:32,720 --> 00:22:34,880
you in the in the demo how this actually

572
00:22:34,880 --> 00:22:36,330
looks

573
00:22:36,330 --> 00:22:38,240
[Music]

574
00:22:38,240 --> 00:22:41,280
and where do you copy this so ssh copy

575
00:22:41,280 --> 00:22:43,200
id basically takes care of everything

576
00:22:43,200 --> 00:22:45,120
you just tell it take this public key

577
00:22:45,120 --> 00:22:47,679
file copy to that server you don't have

578
00:22:47,679 --> 00:22:50,320
to think about directories uh file names

579
00:22:50,320 --> 00:22:53,679
etc if you want to do it manually

580
00:22:53,679 --> 00:22:58,520
you need to copy the demo.ed25519.pub

581
00:22:58,640 --> 00:23:00,799
public key file

582
00:23:00,799 --> 00:23:03,039
to the server into into your home

583
00:23:03,039 --> 00:23:06,159
directory into the ssh directory and

584
00:23:06,159 --> 00:23:09,039
into the authorized keys file

585
00:23:09,039 --> 00:23:11,760
this authorized key f keys file if it

586
00:23:11,760 --> 00:23:13,760
does not exist needs a special

587
00:23:13,760 --> 00:23:15,840
permissions so

588
00:23:15,840 --> 00:23:17,120
if

589
00:23:17,120 --> 00:23:18,960
that file does not have

590
00:23:18,960 --> 00:23:21,600
644 file permissions the whole thing

591
00:23:21,600 --> 00:23:25,120
will not work again ssh copy id will

592
00:23:25,120 --> 00:23:27,600
take will take care of that for you and

593
00:23:27,600 --> 00:23:29,120
will create that for you so you don't

594
00:23:29,120 --> 00:23:30,880
have to think about that that's why i'd

595
00:23:30,880 --> 00:23:32,320
like to prefer

596
00:23:32,320 --> 00:23:35,200
um the ssh copy id command over the

597
00:23:35,200 --> 00:23:37,919
manual creation of that file and also in

598
00:23:37,919 --> 00:23:40,159
newer versions so if you're on

599
00:23:40,159 --> 00:23:43,279
debian alt stable probably not

600
00:23:43,279 --> 00:23:46,640
but in your new releases um the ssh copy

601
00:23:46,640 --> 00:23:49,200
id file also makes sure that you're not

602
00:23:49,200 --> 00:23:51,279
copying the private key to the server so

603
00:23:51,279 --> 00:23:53,200
it's a nice

604
00:23:53,200 --> 00:23:55,360
security feature as well

605
00:23:55,360 --> 00:23:56,559
right

606
00:23:56,559 --> 00:23:59,760
so let's see if if we can do that in my

607
00:23:59,760 --> 00:24:03,279
demo environment as well

608
00:24:03,600 --> 00:24:04,559
so

609
00:24:04,559 --> 00:24:07,279
again the

610
00:24:08,000 --> 00:24:10,640
the command here um is is this readable

611
00:24:10,640 --> 00:24:12,480
or should i make it bigger it's good

612
00:24:12,480 --> 00:24:14,080
okay great

613
00:24:14,080 --> 00:24:14,880
um

614
00:24:14,880 --> 00:24:18,880
the command is again ssh copy id minus i

615
00:24:18,880 --> 00:24:21,360
and the id file the public id file you

616
00:24:21,360 --> 00:24:22,559
want to copy

617
00:24:22,559 --> 00:24:25,200
and then the target in our system demo

618
00:24:25,200 --> 00:24:26,960
the nice thing about having a config

619
00:24:26,960 --> 00:24:29,039
file that we created earlier is these

620
00:24:29,039 --> 00:24:31,440
alliances that we created there applied

621
00:24:31,440 --> 00:24:33,840
to all ssh related commands we can use

622
00:24:33,840 --> 00:24:37,120
the same allies for scp for ssh copy id

623
00:24:37,120 --> 00:24:38,640
and all the other stuff so it's really

624
00:24:38,640 --> 00:24:41,440
nice so in this case demo is our

625
00:24:41,440 --> 00:24:43,520
alliance for lyra at

626
00:24:43,520 --> 00:24:49,000
ssh hyphen example.exe um.example.com

627
00:24:50,799 --> 00:24:53,760
and it says okay yep i found the public

628
00:24:53,760 --> 00:24:57,120
key file i'm attempting to log in

629
00:24:57,120 --> 00:24:58,080
of course

630
00:24:58,080 --> 00:25:01,200
the public key is not uploaded yet so so

631
00:25:01,200 --> 00:25:04,960
it still asks me for the password

632
00:25:04,960 --> 00:25:06,640
and remember

633
00:25:06,640 --> 00:25:09,720
uh please enter lyra at

634
00:25:09,720 --> 00:25:12,559
sshserver.example.com password i enter

635
00:25:12,559 --> 00:25:13,520
that

636
00:25:13,520 --> 00:25:16,240
and it tells me hooray successfully

637
00:25:16,240 --> 00:25:19,440
i uh connected to the server i uploaded

638
00:25:19,440 --> 00:25:22,080
the the public key to the server and

639
00:25:22,080 --> 00:25:25,279
let's try let's try again to log in so

640
00:25:25,279 --> 00:25:29,000
ssh demo

641
00:25:31,919 --> 00:25:33,200
it

642
00:25:33,200 --> 00:25:34,799
why is it asking for the password it

643
00:25:34,799 --> 00:25:38,520
shouldn't ask for the password

644
00:25:44,320 --> 00:25:46,159
ah yes of course

645
00:25:46,159 --> 00:25:48,320
because i'm stupid

646
00:25:48,320 --> 00:25:50,559
um

647
00:25:51,520 --> 00:25:53,120
we still need

648
00:25:53,120 --> 00:25:55,840
we still need to to tell ssh that it

649
00:25:55,840 --> 00:25:58,640
should use the the id file to

650
00:25:58,640 --> 00:26:00,720
update the private key to connect to the

651
00:26:00,720 --> 00:26:04,080
server so let's try again specifying the

652
00:26:04,080 --> 00:26:05,039
um

653
00:26:05,039 --> 00:26:09,720
identity file that we want to use

654
00:26:10,799 --> 00:26:13,760
well come on

655
00:26:14,960 --> 00:26:17,120
i'm on the server thank you that's a

656
00:26:17,120 --> 00:26:20,880
usual mistake i make yes correct

657
00:26:20,880 --> 00:26:22,840
thanks for staying with me

658
00:26:22,840 --> 00:26:26,559
awesome so third attempt first time's

659
00:26:26,559 --> 00:26:27,760
the charm

660
00:26:27,760 --> 00:26:30,320
yes and now it's not asking and if you

661
00:26:30,320 --> 00:26:32,480
look closely it's not asking for the

662
00:26:32,480 --> 00:26:34,960
user's password it's asking for the

663
00:26:34,960 --> 00:26:37,679
passphrase of the private key which is

664
00:26:37,679 --> 00:26:39,440
which is a different thing

665
00:26:39,440 --> 00:26:41,679
right

666
00:26:44,720 --> 00:26:47,039
yeah and it's connected to the server

667
00:26:47,039 --> 00:26:48,640
hooray

668
00:26:48,640 --> 00:26:50,400
thankfully so

669
00:26:50,400 --> 00:26:52,559
we now basically have established that

670
00:26:52,559 --> 00:26:54,799
we can um let me just look out here

671
00:26:54,799 --> 00:26:57,918
again because otherwise

672
00:26:59,120 --> 00:27:01,520
that wasn't good that was one that was

673
00:27:01,520 --> 00:27:05,320
one log out too many

674
00:27:09,360 --> 00:27:10,400
yeah

675
00:27:10,400 --> 00:27:12,240
all good

676
00:27:12,240 --> 00:27:14,480
um

677
00:27:15,600 --> 00:27:18,240
so that's basically we were basically

678
00:27:18,240 --> 00:27:20,159
verifying that the public private key

679
00:27:20,159 --> 00:27:22,240
authentication um

680
00:27:22,240 --> 00:27:24,960
was successful um of course the next

681
00:27:24,960 --> 00:27:27,120
thing would be to

682
00:27:27,120 --> 00:27:29,440
modify our configuration file so that we

683
00:27:29,440 --> 00:27:31,679
don't have to pass the identity file the

684
00:27:31,679 --> 00:27:34,559
private key as a parameter while calling

685
00:27:34,559 --> 00:27:36,000
um the

686
00:27:36,000 --> 00:27:39,840
ssh command so let's do that quickly and

687
00:27:39,840 --> 00:27:41,440
that would be

688
00:27:41,440 --> 00:27:44,960
these two lines

689
00:27:45,279 --> 00:27:48,600
dot ssh

690
00:27:49,919 --> 00:27:52,960
let's do it properly

691
00:27:57,600 --> 00:28:00,880
and we just add two additional lines the

692
00:28:00,880 --> 00:28:03,200
preferred on the authentications public

693
00:28:03,200 --> 00:28:05,520
key it's basically just speeding up

694
00:28:05,520 --> 00:28:07,760
things so i'm telling the ssh client

695
00:28:07,760 --> 00:28:10,320
don't even bother with username password

696
00:28:10,320 --> 00:28:12,320
just try public key authentication and

697
00:28:12,320 --> 00:28:14,960
nothing else and with the line identity

698
00:28:14,960 --> 00:28:17,440
file i i specify the file that i want to

699
00:28:17,440 --> 00:28:20,480
use for a client authentication a public

700
00:28:20,480 --> 00:28:22,640
private key authentication

701
00:28:22,640 --> 00:28:26,080
and if i save that

702
00:28:27,520 --> 00:28:29,679
and now what i had in mind should work

703
00:28:29,679 --> 00:28:32,480
so we have the username the target host

704
00:28:32,480 --> 00:28:34,320
and the identity file that we want to

705
00:28:34,320 --> 00:28:36,240
use in the config

706
00:28:36,240 --> 00:28:38,640
and again it's asking for the passphrase

707
00:28:38,640 --> 00:28:40,559
and um

708
00:28:40,559 --> 00:28:44,320
i'm able to log in yes ray

709
00:28:44,320 --> 00:28:45,919
awesome

710
00:28:45,919 --> 00:28:48,159
it's nice when something works

711
00:28:48,159 --> 00:28:49,919
again uh preferred authentications

712
00:28:49,919 --> 00:28:51,919
public key to speed things up and the

713
00:28:51,919 --> 00:28:54,000
identity file to

714
00:28:54,000 --> 00:28:55,600
um

715
00:28:55,600 --> 00:28:58,320
to use in that case and again proper

716
00:28:58,320 --> 00:29:00,080
pirate keys are free they are easy to

717
00:29:00,080 --> 00:29:02,320
generate use a different identity file

718
00:29:02,320 --> 00:29:04,159
for each service or for each server that

719
00:29:04,159 --> 00:29:06,240
you want to connect to and we said

720
00:29:06,240 --> 00:29:07,279
before

721
00:29:07,279 --> 00:29:10,399
um ssh demo and we don't have to type

722
00:29:10,399 --> 00:29:13,679
that much which is awesome hurry

723
00:29:13,679 --> 00:29:16,559
um next question that usually comes up

724
00:29:16,559 --> 00:29:18,720
when i give this talk is yeah but we

725
00:29:18,720 --> 00:29:21,279
haven't we haven't we haven't

726
00:29:21,279 --> 00:29:23,200
improved anything we still have to type

727
00:29:23,200 --> 00:29:25,279
in something we don't care if it's the

728
00:29:25,279 --> 00:29:27,600
username or the password the the

729
00:29:27,600 --> 00:29:29,440
password for the user or the passphrase

730
00:29:29,440 --> 00:29:30,880
for the private key

731
00:29:30,880 --> 00:29:32,640
yes that's true

732
00:29:32,640 --> 00:29:33,600
um

733
00:29:33,600 --> 00:29:36,080
but there is a solution for that

734
00:29:36,080 --> 00:29:36,960
um

735
00:29:36,960 --> 00:29:38,399
so we are now at the stage where we have

736
00:29:38,399 --> 00:29:40,480
public private key authentication to the

737
00:29:40,480 --> 00:29:42,240
server enabled which is of course more

738
00:29:42,240 --> 00:29:45,679
secure etc etc but how can we

739
00:29:45,679 --> 00:29:47,919
um work around the issue that i still

740
00:29:47,919 --> 00:29:50,559
have to enter passphrase for the key and

741
00:29:50,559 --> 00:29:52,399
again it's the passphrase for the key

742
00:29:52,399 --> 00:29:54,399
not the user's password

743
00:29:54,399 --> 00:29:55,200
well

744
00:29:55,200 --> 00:29:58,080
there's something called ssh agent

745
00:29:58,080 --> 00:30:00,399
and ssh agent is a small program that

746
00:30:00,399 --> 00:30:04,159
runs on your machine creates a socket

747
00:30:04,159 --> 00:30:06,640
and waits for ssh

748
00:30:06,640 --> 00:30:09,440
to request the private key um

749
00:30:09,440 --> 00:30:11,760
unencrypted uh to

750
00:30:11,760 --> 00:30:14,720
make to do its work this is

751
00:30:14,720 --> 00:30:16,640
very very convenient so you basically

752
00:30:16,640 --> 00:30:20,720
you start ssh agent you do an ssh

753
00:30:20,720 --> 00:30:23,760
ad to add that key to the agent

754
00:30:23,760 --> 00:30:27,039
the agent keeps that key in memory

755
00:30:27,039 --> 00:30:29,600
and makes it available to the ssh client

756
00:30:29,600 --> 00:30:31,200
in case

757
00:30:31,200 --> 00:30:32,960
you want to connect to a server so you

758
00:30:32,960 --> 00:30:34,240
only have to

759
00:30:34,240 --> 00:30:36,960
present the passphrase once

760
00:30:36,960 --> 00:30:39,679
and after that the second third fifth

761
00:30:39,679 --> 00:30:41,760
time it does not ask for the for the

762
00:30:41,760 --> 00:30:44,799
passphrase of the private key again

763
00:30:44,799 --> 00:30:47,520
that's the hardcore low level command

764
00:30:47,520 --> 00:30:51,279
line only um option if you're using a

765
00:30:51,279 --> 00:30:53,919
graphical user interface

766
00:30:53,919 --> 00:30:56,640
if you're using gnome key ring or cable

767
00:30:56,640 --> 00:30:59,760
or if you're using a mac

768
00:30:59,760 --> 00:31:02,960
the ssh agent functionality is usually

769
00:31:02,960 --> 00:31:04,399
is usually

770
00:31:04,399 --> 00:31:06,960
incorporated into into

771
00:31:06,960 --> 00:31:09,200
these tools so if you're using the gnome

772
00:31:09,200 --> 00:31:11,279
desktop um

773
00:31:11,279 --> 00:31:15,120
usually the gnome keyring

774
00:31:17,360 --> 00:31:20,480
decrypts or decrypts or opens has has

775
00:31:20,480 --> 00:31:23,440
all your um ssh private keys

776
00:31:23,440 --> 00:31:25,679
um unlocked that was the word i was

777
00:31:25,679 --> 00:31:27,760
looking for unlocked as soon as you log

778
00:31:27,760 --> 00:31:29,600
into your into your operating system's

779
00:31:29,600 --> 00:31:32,799
desktop on mac os that's the same for

780
00:31:32,799 --> 00:31:35,120
the key ring you log into the mac os and

781
00:31:35,120 --> 00:31:37,200
all the ssh

782
00:31:37,200 --> 00:31:39,279
client certificates are unlocked once

783
00:31:39,279 --> 00:31:41,279
you are unlocked into the system if you

784
00:31:41,279 --> 00:31:44,720
have high secure

785
00:31:44,720 --> 00:31:46,480
requirements if you have requirements

786
00:31:46,480 --> 00:31:48,480
for a high secure environment you want

787
00:31:48,480 --> 00:31:50,320
to rethink this

788
00:31:50,320 --> 00:31:51,840
and um

789
00:31:51,840 --> 00:31:55,440
maybe you you want you will have to um

790
00:31:55,440 --> 00:31:58,000
enter the passphrase every time and in

791
00:31:58,000 --> 00:31:58,799
my

792
00:31:58,799 --> 00:32:01,600
advanced advanced advanced talk um we

793
00:32:01,600 --> 00:32:03,600
can also take a look at storing the

794
00:32:03,600 --> 00:32:05,760
private that the passphrase on a fighter

795
00:32:05,760 --> 00:32:08,159
2 device or use fighter 2 or

796
00:32:08,159 --> 00:32:10,320
and other stuff to do to do

797
00:32:10,320 --> 00:32:13,360
to do two-factor authentication too many

798
00:32:13,360 --> 00:32:14,960
tools in there

799
00:32:14,960 --> 00:32:15,919
but

800
00:32:15,919 --> 00:32:18,240
for now um let's let's take a look at

801
00:32:18,240 --> 00:32:20,480
ssh agent again if you're using a

802
00:32:20,480 --> 00:32:22,480
graphical user interface on your on your

803
00:32:22,480 --> 00:32:25,360
laptop and of course 2022 is the year of

804
00:32:25,360 --> 00:32:28,559
linux on the desktop um

805
00:32:28,559 --> 00:32:30,799
so let's do that yes one more thing on

806
00:32:30,799 --> 00:32:34,240
the ssh agent um

807
00:32:34,240 --> 00:32:37,600
you can um if you add a key to that so

808
00:32:37,600 --> 00:32:39,840
ssh agent runs in the background and

809
00:32:39,840 --> 00:32:42,559
waits for a connect

810
00:32:42,559 --> 00:32:45,919
and if you add your private key to ssh h

811
00:32:45,919 --> 00:32:48,799
and you can give an option of minus c

812
00:32:48,799 --> 00:32:51,760
which will instruct ssh agent to prompt

813
00:32:51,760 --> 00:32:54,240
you are you really do you really want to

814
00:32:54,240 --> 00:32:57,600
use that key now um this is so this is

815
00:32:57,600 --> 00:32:59,919
desktop gap to to make it a little bit

816
00:32:59,919 --> 00:33:02,240
more secure but again if you have high

817
00:33:02,240 --> 00:33:05,600
security um requirements you might might

818
00:33:05,600 --> 00:33:09,039
want to rethink the usage of ssh agent

819
00:33:09,039 --> 00:33:12,080
so again as this agent is running in the

820
00:33:12,080 --> 00:33:14,960
background and i need to add um my

821
00:33:14,960 --> 00:33:17,679
private key identities to to that agent

822
00:33:17,679 --> 00:33:20,000
so there's a command for it called ssh

823
00:33:20,000 --> 00:33:21,039
add

824
00:33:21,039 --> 00:33:22,000
um

825
00:33:22,000 --> 00:33:23,840
if you give it if you don't

826
00:33:23,840 --> 00:33:26,080
if you only give it the the file name it

827
00:33:26,080 --> 00:33:28,640
will add that uh key to the

828
00:33:28,640 --> 00:33:30,159
to the um

829
00:33:30,159 --> 00:33:31,440
ssh

830
00:33:31,440 --> 00:33:34,320
agent keyring minus the removes it and

831
00:33:34,320 --> 00:33:36,320
as i said before minus c

832
00:33:36,320 --> 00:33:38,720
will prompt you for usage every time you

833
00:33:38,720 --> 00:33:40,480
want to use it

834
00:33:40,480 --> 00:33:41,279
so

835
00:33:41,279 --> 00:33:43,919
to connect with without a passphrase

836
00:33:43,919 --> 00:33:46,320
we're almost there

837
00:33:46,320 --> 00:33:49,279
um we only have to add our private key

838
00:33:49,279 --> 00:33:53,720
to the ssh agent

839
00:33:53,919 --> 00:33:55,360
i think that's good

840
00:33:55,360 --> 00:33:58,320
um so

841
00:33:58,960 --> 00:34:01,440
oh i really have to type this oh my god

842
00:34:01,440 --> 00:34:02,960
this is age

843
00:34:02,960 --> 00:34:05,960
and

844
00:34:07,360 --> 00:34:08,879
now let's do it again

845
00:34:08,879 --> 00:34:10,239
ssh

846
00:34:10,239 --> 00:34:13,199
and minus e

847
00:34:13,199 --> 00:34:14,960
ah the choice of switching between

848
00:34:14,960 --> 00:34:16,480
german and american

849
00:34:16,480 --> 00:34:18,480
keyboards

850
00:34:18,480 --> 00:34:20,320
yeah

851
00:34:20,320 --> 00:34:22,720
and

852
00:34:23,040 --> 00:34:25,918
so basically i'm i'm telling ssh8

853
00:34:25,918 --> 00:34:26,719
um

854
00:34:26,719 --> 00:34:27,918
at the

855
00:34:27,918 --> 00:34:30,119
file that the file demo dot

856
00:34:30,119 --> 00:34:32,960
ed25519 which is my private key to the

857
00:34:32,960 --> 00:34:35,599
ssh agent ah yes

858
00:34:35,599 --> 00:34:36,879
hooray

859
00:34:36,879 --> 00:34:38,639
thank you demogods

860
00:34:38,639 --> 00:34:40,960
um

861
00:34:44,000 --> 00:34:45,839
yeah yeah i know i know i know i know

862
00:34:45,839 --> 00:34:48,879
what the problem is let me just um

863
00:34:48,879 --> 00:34:50,560
because i i

864
00:34:50,560 --> 00:34:52,639
exited out of that session so i lost all

865
00:34:52,639 --> 00:34:53,918
the

866
00:34:53,918 --> 00:34:56,918
um

867
00:35:04,079 --> 00:35:06,160
let me first switch to the proper

868
00:35:06,160 --> 00:35:08,160
keyboard and then it's easier for me to

869
00:35:08,160 --> 00:35:10,399
type

870
00:35:12,320 --> 00:35:15,320
yep

871
00:35:18,720 --> 00:35:21,040
and

872
00:35:23,280 --> 00:35:25,280
i wanted to hide this from you but

873
00:35:25,280 --> 00:35:29,599
apparently that was unsuccessful

874
00:35:29,599 --> 00:35:33,760
right so let's try again

875
00:35:34,640 --> 00:35:38,359
ssh add

876
00:35:40,850 --> 00:35:43,909
[Music]

877
00:35:46,720 --> 00:35:48,880
yes and it's asking me for my passphrase

878
00:35:48,880 --> 00:35:51,440
finally it works

879
00:35:51,440 --> 00:35:54,240
is every command with ssh requires you

880
00:35:54,240 --> 00:35:57,200
the minus i if you specify the id file

881
00:35:57,200 --> 00:35:59,599
the private key except for

882
00:35:59,599 --> 00:36:02,400
ssh ad

883
00:36:02,480 --> 00:36:05,280
and now i get the message identity edit

884
00:36:05,280 --> 00:36:08,720
so ssh agent now knows um about this

885
00:36:08,720 --> 00:36:11,280
private key and i already committed my

886
00:36:11,280 --> 00:36:14,160
passphrase so the unlocked private key

887
00:36:14,160 --> 00:36:17,200
is now stored in the ssh agent

888
00:36:17,200 --> 00:36:19,200
memory

889
00:36:19,200 --> 00:36:23,040
and if i do an ssh demo

890
00:36:23,520 --> 00:36:25,440
we should see

891
00:36:25,440 --> 00:36:28,480
no password yay

892
00:36:28,560 --> 00:36:34,800
[Applause]

893
00:36:34,800 --> 00:36:36,400
one more thing

894
00:36:36,400 --> 00:36:39,760
the nice thing about ssh is

895
00:36:39,760 --> 00:36:42,000
once you have this fig configured and

896
00:36:42,000 --> 00:36:44,400
running what you for example could do is

897
00:36:44,400 --> 00:36:46,800
an scp so sap is copy right it's file

898
00:36:46,800 --> 00:36:49,440
copy it's like a local copy but over the

899
00:36:49,440 --> 00:36:52,800
over over the net

900
00:36:52,880 --> 00:36:55,040
and i get i want to copy something from

901
00:36:55,040 --> 00:36:57,520
the server to my local machine

902
00:36:57,520 --> 00:36:59,920
so i give it the alias again the config

903
00:36:59,920 --> 00:37:03,040
file works here as well

904
00:37:03,119 --> 00:37:05,920
and then say okay i want something from

905
00:37:05,920 --> 00:37:07,839
etc

906
00:37:07,839 --> 00:37:10,320
and now i do it double tap on on on the

907
00:37:10,320 --> 00:37:12,079
tab on the tab key

908
00:37:12,079 --> 00:37:14,880
tablet the key

909
00:37:14,880 --> 00:37:16,640
and i get remote

910
00:37:16,640 --> 00:37:19,839
tab completion which is very nice and

911
00:37:19,839 --> 00:37:22,480
very convenient because i can't remember

912
00:37:22,480 --> 00:37:24,400
the paths and the file names i'm old i

913
00:37:24,400 --> 00:37:26,800
don't want to think about those so

914
00:37:26,800 --> 00:37:28,480
once you have public private key

915
00:37:28,480 --> 00:37:30,720
authentication set up you will get

916
00:37:30,720 --> 00:37:32,960
remote auto completion which i in my

917
00:37:32,960 --> 00:37:35,040
personal opinion is worth the hassle to

918
00:37:35,040 --> 00:37:37,440
set it up once it's really it's really

919
00:37:37,440 --> 00:37:39,599
really really cool

920
00:37:39,599 --> 00:37:40,480
right

921
00:37:40,480 --> 00:37:41,440
so

922
00:37:41,440 --> 00:37:43,040
that was one of the benefits of having

923
00:37:43,040 --> 00:37:47,280
public private key authentication

924
00:37:47,280 --> 00:37:50,000
yeah let's skip that um one thing i

925
00:37:50,000 --> 00:37:52,320
wanted to mention oh need to speed up a

926
00:37:52,320 --> 00:37:53,359
little bit

927
00:37:53,359 --> 00:37:55,280
one thing i wanted to mention is this is

928
00:37:55,280 --> 00:37:57,920
also available on windows so if you're

929
00:37:57,920 --> 00:37:59,359
using putty

930
00:37:59,359 --> 00:38:00,960
um

931
00:38:00,960 --> 00:38:02,560
you have you have basically three

932
00:38:02,560 --> 00:38:04,640
commands you have put the again which is

933
00:38:04,640 --> 00:38:07,119
your key again for windows if you put

934
00:38:07,119 --> 00:38:09,200
the agent with it which is your ssh

935
00:38:09,200 --> 00:38:11,599
agent and you have putty which is your

936
00:38:11,599 --> 00:38:13,119
um

937
00:38:13,119 --> 00:38:15,040
ssh client

938
00:38:15,040 --> 00:38:16,320
and

939
00:38:16,320 --> 00:38:19,839
we've put again um what you have to

940
00:38:19,839 --> 00:38:22,079
keep in mind is

941
00:38:22,079 --> 00:38:24,560
there is a button there to say which

942
00:38:24,560 --> 00:38:28,078
says save public key

943
00:38:28,320 --> 00:38:30,800
but that is saved in a proprietary

944
00:38:30,800 --> 00:38:35,280
format what you need in order to

945
00:38:35,359 --> 00:38:37,520
get public private key going is the

946
00:38:37,520 --> 00:38:40,000
actually the public key text that is

947
00:38:40,000 --> 00:38:42,800
this is displayed in the in the bottom

948
00:38:42,800 --> 00:38:45,920
in the in the top in the top of the

949
00:38:45,920 --> 00:38:48,560
key generator that's the thing you want

950
00:38:48,560 --> 00:38:50,640
uh on the server to actually work if

951
00:38:50,640 --> 00:38:53,520
you're connecting to an open uh open ssh

952
00:38:53,520 --> 00:38:54,480
server

953
00:38:54,480 --> 00:38:56,640
other than that it's completely the same

954
00:38:56,640 --> 00:38:58,720
at the bottom

955
00:38:58,720 --> 00:39:02,079
you can specify uh which uh which key to

956
00:39:02,079 --> 00:39:04,160
generate rsa

957
00:39:04,160 --> 00:39:08,118
or in our case 8255.19

958
00:39:08,800 --> 00:39:11,280
and it you will get a private key you

959
00:39:11,280 --> 00:39:13,119
want to save the private key in this

960
00:39:13,119 --> 00:39:16,320
case and if you start to put the agent

961
00:39:16,320 --> 00:39:17,280
um

962
00:39:17,280 --> 00:39:19,520
you can add keys here again it's the

963
00:39:19,520 --> 00:39:21,280
same as in linux but you have fancy

964
00:39:21,280 --> 00:39:24,880
buttons and and user interface for that

965
00:39:24,880 --> 00:39:26,960
and in within putty

966
00:39:26,960 --> 00:39:30,079
if you go to connections ssh auth for

967
00:39:30,079 --> 00:39:32,640
authentication so it's it's rather

968
00:39:32,640 --> 00:39:35,280
it's a very com convoluted navigation

969
00:39:35,280 --> 00:39:37,359
you can actually specify the private key

970
00:39:37,359 --> 00:39:39,440
you want to use and then you get the

971
00:39:39,440 --> 00:39:42,000
same functionality the same benefits as

972
00:39:42,000 --> 00:39:43,359
on linux with

973
00:39:43,359 --> 00:39:45,040
if you have to use windows because your

974
00:39:45,040 --> 00:39:47,680
customer only supports

975
00:39:47,680 --> 00:39:50,880
windows as a desktop

976
00:39:50,880 --> 00:39:52,400
there's also more

977
00:39:52,400 --> 00:39:55,599
there's more ssh config magic

978
00:39:55,599 --> 00:39:57,520
what you have to keep in mind for ssh

979
00:39:57,520 --> 00:40:00,320
config files is for each parameter the

980
00:40:00,320 --> 00:40:04,160
first value obtained will be used

981
00:40:04,160 --> 00:40:05,040
so

982
00:40:05,040 --> 00:40:07,760
more you want the more specific stuff on

983
00:40:07,760 --> 00:40:08,720
top

984
00:40:08,720 --> 00:40:10,880
and you want the more general stuff at

985
00:40:10,880 --> 00:40:13,200
the bottom of the file

986
00:40:13,200 --> 00:40:15,359
yeah because it's not going to take the

987
00:40:15,359 --> 00:40:17,040
last thing it's going to take the first

988
00:40:17,040 --> 00:40:18,880
thing it finds if you specify something

989
00:40:18,880 --> 00:40:20,560
else below

990
00:40:20,560 --> 00:40:23,280
ssh doesn't care about that

991
00:40:23,280 --> 00:40:25,680
so you want host specific stuff at the

992
00:40:25,680 --> 00:40:27,839
top general defaults at the end how does

993
00:40:27,839 --> 00:40:30,480
that look like

994
00:40:31,280 --> 00:40:34,480
so in this example

995
00:40:35,119 --> 00:40:37,520
if i connect to

996
00:40:37,520 --> 00:40:41,920
if i want to connect to um

997
00:40:41,920 --> 00:40:46,000
and then a server like um

998
00:40:46,280 --> 00:40:48,480
web.product.example.com it will take my

999
00:40:48,480 --> 00:40:51,359
prod id private file the last one

1000
00:40:51,359 --> 00:40:52,640
at the bottom

1001
00:40:52,640 --> 00:40:54,319
but for one server which is

1002
00:40:54,319 --> 00:40:56,720
unicorn.product.example.com

1003
00:40:56,720 --> 00:40:58,720
it will not take the prod id at the

1004
00:40:58,720 --> 00:41:02,319
bottom because i have a more specific

1005
00:41:02,319 --> 00:41:03,119
thing

1006
00:41:03,119 --> 00:41:04,319
on

1007
00:41:04,319 --> 00:41:06,720
above that and it will take the fluff

1008
00:41:06,720 --> 00:41:08,319
pink fluffy id

1009
00:41:08,319 --> 00:41:10,800
as the private key for that for that

1010
00:41:10,800 --> 00:41:12,960
particular server

1011
00:41:12,960 --> 00:41:14,640
and for all the servers that are within

1012
00:41:14,640 --> 00:41:15,640
the

1013
00:41:15,640 --> 00:41:17,599
test.example.com domain

1014
00:41:17,599 --> 00:41:20,640
um it takes the test id

1015
00:41:20,640 --> 00:41:22,000
private file so this is something you

1016
00:41:22,000 --> 00:41:24,079
can easily set up and again

1017
00:41:24,079 --> 00:41:25,680
um

1018
00:41:25,680 --> 00:41:27,359
more general stuff

1019
00:41:27,359 --> 00:41:29,680
at the bottom more specific stuff at the

1020
00:41:29,680 --> 00:41:34,160
top to give you another example

1021
00:41:34,160 --> 00:41:36,480
this is again uh something from from my

1022
00:41:36,480 --> 00:41:39,040
demo here you will have your we have our

1023
00:41:39,040 --> 00:41:41,760
demo host entry with the host name

1024
00:41:41,760 --> 00:41:43,200
and username and preferred

1025
00:41:43,200 --> 00:41:45,359
authentication then we could have

1026
00:41:45,359 --> 00:41:47,200
several more host entries and then we

1027
00:41:47,200 --> 00:41:50,720
have a catch-all that is host asterix

1028
00:41:50,720 --> 00:41:52,400
and that's basically setting uh

1029
00:41:52,400 --> 00:41:54,000
additional stuff

1030
00:41:54,000 --> 00:41:55,599
what i usually want to have is

1031
00:41:55,599 --> 00:41:57,200
compression yes because i have to

1032
00:41:57,200 --> 00:41:59,599
connect to servers in the us and asia so

1033
00:41:59,599 --> 00:42:02,880
so compression does help and

1034
00:42:02,880 --> 00:42:05,599
the identities only is also a nice thing

1035
00:42:05,599 --> 00:42:08,000
because otherwise ssh will just try

1036
00:42:08,000 --> 00:42:10,720
every identity file it finds

1037
00:42:10,720 --> 00:42:12,240
to connect to that server and you will

1038
00:42:12,240 --> 00:42:14,560
get errors and with identities only it

1039
00:42:14,560 --> 00:42:16,880
will only use the identify identity

1040
00:42:16,880 --> 00:42:20,240
files specified in the host entry to use

1041
00:42:20,240 --> 00:42:22,480
to connect to that thing

1042
00:42:22,480 --> 00:42:23,359
um

1043
00:42:23,359 --> 00:42:25,920
i do have to speed up a little bit um

1044
00:42:25,920 --> 00:42:28,000
what you could also do is um within the

1045
00:42:28,000 --> 00:42:30,880
dot ssh directory you could have conf

1046
00:42:30,880 --> 00:42:33,599
a conf d directory where you can have

1047
00:42:33,599 --> 00:42:36,079
multiple files so you can separate the

1048
00:42:36,079 --> 00:42:38,000
configuration out for each customer or

1049
00:42:38,000 --> 00:42:40,720
each server you want to configure and it

1050
00:42:40,720 --> 00:42:42,160
pulls those in

1051
00:42:42,160 --> 00:42:44,720
in alphabetic order last thing i want to

1052
00:42:44,720 --> 00:42:46,480
touch on that's why i'm skipping this a

1053
00:42:46,480 --> 00:42:48,560
little bit is um

1054
00:42:48,560 --> 00:42:50,560
best thing or jump hosts what do i mean

1055
00:42:50,560 --> 00:42:51,839
by that

1056
00:42:51,839 --> 00:42:52,640
um

1057
00:42:52,640 --> 00:42:54,240
you have your client

1058
00:42:54,240 --> 00:42:56,319
you have something called a jump post or

1059
00:42:56,319 --> 00:42:58,240
a bastion host that is connected to the

1060
00:42:58,240 --> 00:43:01,040
internet and you have the actual server

1061
00:43:01,040 --> 00:43:02,640
where you want to work on or where you

1062
00:43:02,640 --> 00:43:05,040
want to work uh have to do some work on

1063
00:43:05,040 --> 00:43:06,880
that is not reachable

1064
00:43:06,880 --> 00:43:08,720
from the internet directly or from your

1065
00:43:08,720 --> 00:43:10,800
client directly so you have to go

1066
00:43:10,800 --> 00:43:13,760
through that jump or bastion host

1067
00:43:13,760 --> 00:43:14,720
so

1068
00:43:14,720 --> 00:43:16,960
what you usually do is

1069
00:43:16,960 --> 00:43:19,920
you ssh into the bastion host

1070
00:43:19,920 --> 00:43:21,760
then you're locked in at the bastion

1071
00:43:21,760 --> 00:43:24,560
host and from there ssh to the target

1072
00:43:24,560 --> 00:43:25,680
host so

1073
00:43:25,680 --> 00:43:29,520
basically what you do is ssh demo or

1074
00:43:29,520 --> 00:43:31,280
bastion and let's let's keep it with

1075
00:43:31,280 --> 00:43:32,720
demo

1076
00:43:32,720 --> 00:43:33,599
right

1077
00:43:33,599 --> 00:43:36,000
and then you do um

1078
00:43:36,000 --> 00:43:38,160
where is it

1079
00:43:38,160 --> 00:43:40,640
yeah and then you s and then your ssh

1080
00:43:40,640 --> 00:43:43,279
further on

1081
00:43:45,040 --> 00:43:48,160
and then your ssh further on to

1082
00:43:48,160 --> 00:43:50,400
and i'm using the same username here i'm

1083
00:43:50,400 --> 00:43:53,040
i like to to explicitly uh specify my

1084
00:43:53,040 --> 00:43:55,920
usernames target dot

1085
00:43:55,920 --> 00:43:58,000
local which is a machine i can't reach

1086
00:43:58,000 --> 00:44:00,880
from my client

1087
00:44:02,000 --> 00:44:04,880
get of course

1088
00:44:04,880 --> 00:44:06,319
tell me

1089
00:44:06,319 --> 00:44:08,560
and i'm on my internal server so that's

1090
00:44:08,560 --> 00:44:10,480
what you usually do and it's right quite

1091
00:44:10,480 --> 00:44:12,319
cumbersome because you have to log in

1092
00:44:12,319 --> 00:44:14,640
and log in and log in and log in

1093
00:44:14,640 --> 00:44:17,839
server client here i'm correct so what

1094
00:44:17,839 --> 00:44:20,400
you what you can actually do is you can

1095
00:44:20,400 --> 00:44:23,599
specify something called the jump host

1096
00:44:23,599 --> 00:44:25,839
so with the option minus capital g you

1097
00:44:25,839 --> 00:44:28,640
can define a jump host or a jump host

1098
00:44:28,640 --> 00:44:29,839
alias

1099
00:44:29,839 --> 00:44:32,240
that you want to use to get to the to

1100
00:44:32,240 --> 00:44:34,720
the target machine so i want to connect

1101
00:44:34,720 --> 00:44:37,599
to target.local but i'm telling ssh to

1102
00:44:37,599 --> 00:44:39,760
use bastion as an intermediate as a jump

1103
00:44:39,760 --> 00:44:40,720
host

1104
00:44:40,720 --> 00:44:42,079
of course

1105
00:44:42,079 --> 00:44:44,000
everything that is specific that you can

1106
00:44:44,000 --> 00:44:47,119
specify on the command line you can also

1107
00:44:47,119 --> 00:44:49,440
put into the config

1108
00:44:49,440 --> 00:44:51,280
in the config file

1109
00:44:51,280 --> 00:44:52,240
so

1110
00:44:52,240 --> 00:44:54,640
in this case i have my

1111
00:44:54,640 --> 00:44:57,599
specification of my demo host alias and

1112
00:44:57,599 --> 00:45:00,400
i have an alias for internal

1113
00:45:00,400 --> 00:45:03,599
and if i specif and in there in the host

1114
00:45:03,599 --> 00:45:05,920
internal i can specify

1115
00:45:05,920 --> 00:45:07,680
proxy jump

1116
00:45:07,680 --> 00:45:10,160
and the alias and with that it knows

1117
00:45:10,160 --> 00:45:15,040
okay if i just enter ssh internal

1118
00:45:15,040 --> 00:45:16,880
it will automatically use the bus

1119
00:45:16,880 --> 00:45:20,079
bastion host to connect to that machine

1120
00:45:20,079 --> 00:45:21,200
so

1121
00:45:21,200 --> 00:45:26,480
do i have this prepared no that's bad

1122
00:45:26,480 --> 00:45:29,520
just give me a sec

1123
00:45:31,520 --> 00:45:34,319
there we are

1124
00:45:34,480 --> 00:45:36,720
yeah

1125
00:45:39,839 --> 00:45:40,960
yeah

1126
00:45:40,960 --> 00:45:46,000
so on my client dot ssh config

1127
00:45:46,000 --> 00:45:47,680
i'll add this

1128
00:45:47,680 --> 00:45:50,000
and

1129
00:45:53,520 --> 00:45:55,440
if i go there

1130
00:45:55,440 --> 00:45:57,680
so i now enter enter the bastion house

1131
00:45:57,680 --> 00:46:03,520
so if i do an ssh target dot local

1132
00:46:03,520 --> 00:46:04,400
no

1133
00:46:04,400 --> 00:46:08,560
just local i created an alias

1134
00:46:10,560 --> 00:46:14,440
internal thank you

1135
00:46:14,800 --> 00:46:18,000
i created an alliance called internal

1136
00:46:18,000 --> 00:46:19,440
and it tells me yeah you're connecting

1137
00:46:19,440 --> 00:46:22,960
for the first time yet that's fine

1138
00:46:24,160 --> 00:46:25,680
and i haven't figured i haven't

1139
00:46:25,680 --> 00:46:28,560
configured public public private key con

1140
00:46:28,560 --> 00:46:30,880
authentication for that as well the nice

1141
00:46:30,880 --> 00:46:33,200
thing the nice thing if you configure it

1142
00:46:33,200 --> 00:46:34,800
that way is

1143
00:46:34,800 --> 00:46:37,599
that the first connection gets tunneled

1144
00:46:37,599 --> 00:46:40,720
through the ssh so you connect to the

1145
00:46:40,720 --> 00:46:43,440
bastion host and then you connect

1146
00:46:43,440 --> 00:46:45,520
through that connection to the internal

1147
00:46:45,520 --> 00:46:48,240
server so if you pass on the

1148
00:46:48,240 --> 00:46:51,280
identity the identity file at the end

1149
00:46:51,280 --> 00:46:53,520
the the ssh agent

1150
00:46:53,520 --> 00:46:56,160
can talk directly to your internal

1151
00:46:56,160 --> 00:46:57,520
servers you don't need ancient

1152
00:46:57,520 --> 00:46:59,440
forwarding and everything else which is

1153
00:46:59,440 --> 00:47:02,800
a lot more secure than having ssh agent

1154
00:47:02,800 --> 00:47:05,599
forwarding running on that bastion host

1155
00:47:05,599 --> 00:47:09,359
um but of course it also works with

1156
00:47:09,359 --> 00:47:12,720
password authentication um

1157
00:47:12,720 --> 00:47:14,960
again if you if you have an older

1158
00:47:14,960 --> 00:47:18,160
ssh configuration you can also uh fall

1159
00:47:18,160 --> 00:47:20,240
back to the proxy command i'm just

1160
00:47:20,240 --> 00:47:22,000
leaving this here in the in the slides

1161
00:47:22,000 --> 00:47:23,359
as a reference

1162
00:47:23,359 --> 00:47:25,920
um please please please please use the

1163
00:47:25,920 --> 00:47:28,960
champos directive use the minus j option

1164
00:47:28,960 --> 00:47:32,079
do not use minus a or agent forwarding

1165
00:47:32,079 --> 00:47:34,000
anymore it's insecure

1166
00:47:34,000 --> 00:47:37,119
uh you shouldn't use it um it's outdated

1167
00:47:37,119 --> 00:47:38,960
the jump post is the

1168
00:47:38,960 --> 00:47:40,480
better option

1169
00:47:40,480 --> 00:47:41,839
um

1170
00:47:41,839 --> 00:47:44,880
i will skip that you can read on that uh

1171
00:47:44,880 --> 00:47:47,520
if you want to and that concludes my

1172
00:47:47,520 --> 00:47:50,400
short and a lot of no a rather long talk

1173
00:47:50,400 --> 00:47:53,040
thank you very much for your um

1174
00:47:53,040 --> 00:47:55,210
participation and have a great day

1175
00:47:55,210 --> 00:47:59,360
[Applause]

1176
00:47:59,360 --> 00:48:01,280
[Music]

1177
00:48:01,280 --> 00:48:03,280
yeah let's do let's do one thank you

1178
00:48:03,280 --> 00:48:05,040
yeah actually yeah the demo cards were

1179
00:48:05,040 --> 00:48:06,800
not kind but actually it helps to see

1180
00:48:06,800 --> 00:48:08,000
that you make mistakes we all make

1181
00:48:08,000 --> 00:48:09,280
mistakes and then we correct them we

1182
00:48:09,280 --> 00:48:11,040
will learn um we've probably got time

1183
00:48:11,040 --> 00:48:13,359
for one one or two questions if anyone

1184
00:48:13,359 --> 00:48:14,400
has one

1185
00:48:14,400 --> 00:48:16,960
oh we've got one here

1186
00:48:16,960 --> 00:48:18,720
all right

1187
00:48:18,720 --> 00:48:21,280
good morning a little late but is it

1188
00:48:21,280 --> 00:48:22,880
possible with the job house to also

1189
00:48:22,880 --> 00:48:25,119
forward local and remote uh tunnel

1190
00:48:25,119 --> 00:48:26,480
sessions yes

1191
00:48:26,480 --> 00:48:28,640
okay yes you can configure it the same

1192
00:48:28,640 --> 00:48:31,200
way yeah normally yeah as usual okay

1193
00:48:31,200 --> 00:48:34,160
perfect

1194
00:48:34,160 --> 00:48:35,440
that would be that would be in my

1195
00:48:35,440 --> 00:48:38,640
advanced advanced talk

1196
00:48:38,640 --> 00:48:41,359
maybe next year next time

1197
00:48:41,359 --> 00:48:42,559
right

1198
00:48:42,559 --> 00:48:44,480
i'm i'm still around i'm helping i'm

1199
00:48:44,480 --> 00:48:46,319
helping with tear downs if you have any

1200
00:48:46,319 --> 00:48:49,040
questions feel free to approach me

1201
00:48:49,040 --> 00:48:51,440
and i will be around

1202
00:48:51,440 --> 00:48:53,040
thanks very much thank you very much

1203
00:48:53,040 --> 00:48:56,040
indeed

