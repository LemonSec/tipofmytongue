1
00:00:07,500 --> 00:00:15,840
Thank You Burt crowd for allowing

2
00:00:11,130 --> 00:00:18,840
present on this topic the diary of an

3
00:00:15,840 --> 00:00:21,630
inexperienced bug hunter so to give a

4
00:00:18,840 --> 00:00:29,570
bit of background about three months ago

5
00:00:21,630 --> 00:00:33,570
I participated and we can bug bug bounty

6
00:00:29,570 --> 00:00:36,000
session and I always wanted to

7
00:00:33,570 --> 00:00:37,770
participate in bug bounties but always

8
00:00:36,000 --> 00:00:40,920
talked myself out of it because I was

9
00:00:37,770 --> 00:00:43,500
like I don't have enough experience you

10
00:00:40,920 --> 00:00:46,920
know I don't know what I'm doing

11
00:00:43,500 --> 00:00:50,900
so the experience was fun I didn't find

12
00:00:46,920 --> 00:00:54,480
any bugs personally and after that I

13
00:00:50,900 --> 00:00:57,900
decided to continue on with bug bounties

14
00:00:54,480 --> 00:01:02,220
but focus on mobile devices because I

15
00:00:57,900 --> 00:01:06,750
felt that was an untapped area and I'm

16
00:01:02,220 --> 00:01:08,880
sure most people on the call or some

17
00:01:06,750 --> 00:01:12,990
people on the call you know you've

18
00:01:08,880 --> 00:01:16,589
you've seen news reports of you know

19
00:01:12,990 --> 00:01:20,579
mobile devices being hacked into malware

20
00:01:16,590 --> 00:01:23,490
you know stealing data so I was like oh

21
00:01:20,579 --> 00:01:27,479
this is like a really interesting area

22
00:01:23,490 --> 00:01:30,359
and I didn't have any experience and

23
00:01:27,479 --> 00:01:35,420
mobile security so I love to learn and

24
00:01:30,359 --> 00:01:35,419
so I was like this would be a good area

25
00:01:37,880 --> 00:01:47,369
but even though I was excited in the

26
00:01:44,189 --> 00:01:50,298
back of my mind I this was what I asked

27
00:01:47,369 --> 00:01:54,810
myself what have I gotten myself into

28
00:01:50,299 --> 00:01:57,929
so disclaimer images used in this

29
00:01:54,810 --> 00:02:00,749
presentation are not from any bug bounty

30
00:01:57,929 --> 00:02:03,539
programs I just want to make that

31
00:02:00,749 --> 00:02:06,899
explicitly clear because I know some

32
00:02:03,539 --> 00:02:09,630
programs really don't want you to share

33
00:02:06,899 --> 00:02:13,050
their stuff so the images I'm using are

34
00:02:09,630 --> 00:02:19,799
not from any bug but programs in

35
00:02:13,050 --> 00:02:21,960
particular and this is the agenda that I

36
00:02:19,800 --> 00:02:24,960
plan on talking about in this

37
00:02:21,960 --> 00:02:28,460
presentation you know why

38
00:02:24,960 --> 00:02:31,860
saying on Android a bit of background of

39
00:02:28,460 --> 00:02:35,580
Android security components of an

40
00:02:31,860 --> 00:02:39,240
Android application talking about an

41
00:02:35,580 --> 00:02:44,120
Android tamer a mobile lab how to get

42
00:02:39,240 --> 00:02:49,340
involved resources and suggested reading

43
00:02:44,120 --> 00:02:51,680
so a little about me as Sam said

44
00:02:49,340 --> 00:02:53,820
master's degree in computer science

45
00:02:51,680 --> 00:02:56,760
graduate certificate in information

46
00:02:53,820 --> 00:03:00,590
security and privacy I also own a blog

47
00:02:56,760 --> 00:03:06,450
passion for pen testing I created in

48
00:03:00,590 --> 00:03:09,590
2012 the certifications and also if you

49
00:03:06,450 --> 00:03:14,040
want to find me on Twitter or twitch

50
00:03:09,590 --> 00:03:20,060
here is my handle part of Beauty

51
00:03:14,040 --> 00:03:27,620
double-oh-seven okay so why focus on

52
00:03:20,060 --> 00:03:32,070
Android Android is open source also it's

53
00:03:27,620 --> 00:03:35,760
fragmented meaning that the operating

54
00:03:32,070 --> 00:03:38,579
system on the mobile devices are

55
00:03:35,760 --> 00:03:45,750
manufactured by multiple companies so

56
00:03:38,580 --> 00:03:48,150
Frank an example Samsung and what that

57
00:03:45,750 --> 00:03:51,480
means is that these companies can add

58
00:03:48,150 --> 00:03:56,220
custom code on top of the base Android

59
00:03:51,480 --> 00:04:06,359
operating system so meaning that Samsung

60
00:03:56,220 --> 00:04:08,880
and Nexus or another mobile mobile

61
00:04:06,360 --> 00:04:15,140
device company might not have the same

62
00:04:08,880 --> 00:04:18,089
code for their phones popularity Android

63
00:04:15,140 --> 00:04:23,990
devices are less stringent than the

64
00:04:18,089 --> 00:04:29,310
Apple's App Store with the App Store you

65
00:04:23,990 --> 00:04:32,640
send in your send in your app the App

66
00:04:29,310 --> 00:04:35,450
Store will review determine if it's good

67
00:04:32,640 --> 00:04:38,430
or not and then put it on the App Store

68
00:04:35,450 --> 00:04:41,880
with

69
00:04:38,430 --> 00:04:46,380
droid devices it's easier to sneak

70
00:04:41,880 --> 00:04:51,830
malicious apps onto Google Play Google

71
00:04:46,380 --> 00:04:55,950
Play also has a process to determine

72
00:04:51,830 --> 00:04:58,859
good apps but it's less stringent and

73
00:04:55,950 --> 00:05:04,530
it's less stringent than the App Store

74
00:04:58,860 --> 00:05:08,640
Apple's App Store so a little bit about

75
00:05:04,530 --> 00:05:12,479
Android security built on the Linux

76
00:05:08,640 --> 00:05:15,210
kernel provides the following security

77
00:05:12,480 --> 00:05:21,150
features a user base permission model

78
00:05:15,210 --> 00:05:24,359
and process isolation so I'm going to

79
00:05:21,150 --> 00:05:27,359
talk about application and sandboxing

80
00:05:24,360 --> 00:05:29,880
because that's also important with

81
00:05:27,360 --> 00:05:33,870
Android security so with application

82
00:05:29,880 --> 00:05:34,409
sandboxing I still a apps from each

83
00:05:33,870 --> 00:05:38,310
other

84
00:05:34,410 --> 00:05:42,900
assigns a unique user ID to each Android

85
00:05:38,310 --> 00:05:48,240
application and runs its own process in

86
00:05:42,900 --> 00:05:50,609
that application so the user ID is used

87
00:05:48,240 --> 00:05:53,850
to set up the kernel level application

88
00:05:50,610 --> 00:05:58,760
sandbox and this extends to native code

89
00:05:53,850 --> 00:05:58,760
and operating system applications

90
00:06:02,510 --> 00:06:09,390
application signing so this allows

91
00:06:05,730 --> 00:06:12,480
developers to identify the author of an

92
00:06:09,390 --> 00:06:15,090
application it provides a more

93
00:06:12,480 --> 00:06:18,360
streamlined process to update the

94
00:06:15,090 --> 00:06:22,219
application every application that runs

95
00:06:18,360 --> 00:06:26,040
on that Android platform must be signed

96
00:06:22,220 --> 00:06:28,440
applications that try to install on a

97
00:06:26,040 --> 00:06:30,800
device without being signed will be

98
00:06:28,440 --> 00:06:34,140
rejected either by Google Play or the

99
00:06:30,800 --> 00:06:37,230
package installer and so application

100
00:06:34,140 --> 00:06:38,969
assigning is the first step and placing

101
00:06:37,230 --> 00:06:41,640
an application in the sandbox

102
00:06:38,970 --> 00:06:46,080
application of sandbox which I talked

103
00:06:41,640 --> 00:06:49,200
about in the previous slide so now I'm

104
00:06:46,080 --> 00:06:52,109
going to talk about components of an

105
00:06:49,200 --> 00:06:54,930
Android application so

106
00:06:52,110 --> 00:07:00,180
activities services content providers

107
00:06:54,930 --> 00:07:03,120
and broadcast receivers so an activity

108
00:07:00,180 --> 00:07:07,710
represents a single screen with a user

109
00:07:03,120 --> 00:07:10,050
interface and is similar to a window and

110
00:07:07,710 --> 00:07:12,390
a desktop application and the

111
00:07:10,050 --> 00:07:18,020
application can contain one or more

112
00:07:12,390 --> 00:07:20,909
activities a service is a

113
00:07:18,020 --> 00:07:23,849
general-purpose entry point for keeping

114
00:07:20,910 --> 00:07:28,140
an app running in the background it does

115
00:07:23,850 --> 00:07:31,860
not need a user interface and usually a

116
00:07:28,140 --> 00:07:37,440
service performs long-running operations

117
00:07:31,860 --> 00:07:42,170
or performs remote processes such as

118
00:07:37,440 --> 00:07:46,020
internet downloads or data processing

119
00:07:42,170 --> 00:07:49,280
content providers supplies data from one

120
00:07:46,020 --> 00:07:53,430
application to others on request and

121
00:07:49,280 --> 00:07:56,369
it's a centralized location since they

122
00:07:53,430 --> 00:07:58,740
provide centralized content in one place

123
00:07:56,370 --> 00:08:04,790
and allows different applications to

124
00:07:58,740 --> 00:08:07,880
access it and broadcast receivers a

125
00:08:04,790 --> 00:08:11,550
response to system-wide broadcast

126
00:08:07,880 --> 00:08:16,020
announcements these messages are called

127
00:08:11,550 --> 00:08:19,880
events or intents and examples are if

128
00:08:16,020 --> 00:08:22,650
your if your screen has turned off or

129
00:08:19,880 --> 00:08:28,920
everyone's favorite when you're low on

130
00:08:22,650 --> 00:08:33,470
battery okay so the next part of my

131
00:08:28,920 --> 00:08:39,600
presentation will be discussing the lab

132
00:08:33,470 --> 00:08:44,580
the mobile lab and droid tamer so the

133
00:08:39,600 --> 00:08:48,540
computer lab is occupied and this really

134
00:08:44,580 --> 00:08:51,360
resonated with me because when I do my

135
00:08:48,540 --> 00:08:53,219
work I have a cat matter of fact she's

136
00:08:51,360 --> 00:08:56,550
right next to me rubbing the computer

137
00:08:53,220 --> 00:08:59,900
and this is what she loves to do and

138
00:08:56,550 --> 00:09:06,030
she's like it's time for you to stop

139
00:08:59,900 --> 00:09:06,360
okay so when I started my learning about

140
00:09:06,030 --> 00:09:09,300
mobile

141
00:09:06,360 --> 00:09:14,130
security I found this really cool VM

142
00:09:09,300 --> 00:09:18,329
called Andrew tamer it's in its fourth

143
00:09:14,130 --> 00:09:22,260
version and the handle on Twitter's and

144
00:09:18,329 --> 00:09:25,640
Android tamer it's a one-stop shop for

145
00:09:22,260 --> 00:09:27,860
mobile security some of the features

146
00:09:25,640 --> 00:09:30,750
development reverse engineering

147
00:09:27,860 --> 00:09:36,779
penetration testing so if you look on

148
00:09:30,750 --> 00:09:39,570
the right is image of the virtual

149
00:09:36,779 --> 00:09:42,750
machine and as you can see you can see

150
00:09:39,570 --> 00:09:45,810
the different tabs you now it's dynamic

151
00:09:42,750 --> 00:09:49,649
analysis forensics manual analysis

152
00:09:45,810 --> 00:09:53,790
penetration testing so I really found

153
00:09:49,649 --> 00:09:56,550
this to be a good virtual machine

154
00:09:53,790 --> 00:10:00,510
because when I first started I was like

155
00:09:56,550 --> 00:10:02,550
okay I want to do this well where are

156
00:10:00,510 --> 00:10:07,050
the tools and then I didn't want to

157
00:10:02,550 --> 00:10:10,170
manually install them one by one so when

158
00:10:07,050 --> 00:10:14,099
I found this VM I was like oh my god

159
00:10:10,170 --> 00:10:18,779
this is a lifesaver now I will do the

160
00:10:14,100 --> 00:10:22,620
caveat I've used android tamer I don't

161
00:10:18,779 --> 00:10:26,189
know if there's other VMs similar

162
00:10:22,620 --> 00:10:28,829
similar to Android tamer that might you

163
00:10:26,190 --> 00:10:32,040
know might be a newer VM as I said this

164
00:10:28,829 --> 00:10:37,680
is the one that I'm showing it's version

165
00:10:32,040 --> 00:10:42,990
4 and I think it was last updated in 20

166
00:10:37,680 --> 00:10:45,870
2015 or 2016 so it's a bit outdated so

167
00:10:42,990 --> 00:10:49,079
I'm setting the caveat that there might

168
00:10:45,870 --> 00:10:57,480
be something more recent but this is

169
00:10:49,079 --> 00:11:04,260
what I've used so an Android studio this

170
00:10:57,480 --> 00:11:07,980
is what I've used to review cold and to

171
00:11:04,260 --> 00:11:10,199
create virtual machines virtual excuse

172
00:11:07,980 --> 00:11:12,240
me virtual devices to manipulate Android

173
00:11:10,199 --> 00:11:16,500
apps which I will be discussing later

174
00:11:12,240 --> 00:11:18,660
but Android studio is a official IDE

175
00:11:16,500 --> 00:11:22,260
integrated development

176
00:11:18,660 --> 00:11:26,760
for Android operating system is built on

177
00:11:22,260 --> 00:11:30,030
chip the jetbrains IntelliJ IDEA

178
00:11:26,760 --> 00:11:37,170
software and it's available from Windows

179
00:11:30,030 --> 00:11:44,040
Mac OS and Linux so one of the tools

180
00:11:37,170 --> 00:11:47,490
inside of Android tamer apktool I really

181
00:11:44,040 --> 00:11:50,790
love this tool so it's used for reverse

182
00:11:47,490 --> 00:11:54,540
engineering third-party apps can to Cove

183
00:11:50,790 --> 00:11:56,480
resources close to original form you can

184
00:11:54,540 --> 00:11:59,370
rebuild the application after

185
00:11:56,480 --> 00:12:03,630
modification which is really good so if

186
00:11:59,370 --> 00:12:06,950
you want to modify an android

187
00:12:03,630 --> 00:12:09,950
application but you're not sure if

188
00:12:06,950 --> 00:12:13,980
you've made the correct modifications

189
00:12:09,950 --> 00:12:16,950
apktool is a great resource you can make

190
00:12:13,980 --> 00:12:19,590
the modifications rebuild and then test

191
00:12:16,950 --> 00:12:23,700
it out to see if it was what you were

192
00:12:19,590 --> 00:12:29,760
looking for so after decompiling

193
00:12:23,700 --> 00:12:34,680
an APK some the thousand folders that

194
00:12:29,760 --> 00:12:38,670
are produced are small e res meta F and

195
00:12:34,680 --> 00:12:42,890
Android manifest X of XML and I will be

196
00:12:38,670 --> 00:12:42,890
discussing each in the following slides

197
00:12:45,500 --> 00:12:55,190
so Smyly is an assembly language used by

198
00:12:51,330 --> 00:12:59,670
the Android dalvik virtual machine

199
00:12:55,190 --> 00:13:02,460
decompile through a dex file and used

200
00:12:59,670 --> 00:13:07,050
for lower level inspection of android

201
00:13:02,460 --> 00:13:10,380
app content so smiling is good

202
00:13:07,050 --> 00:13:16,530
if you want to look at the bare bones of

203
00:13:10,380 --> 00:13:20,160
an android app and you want to see what

204
00:13:16,530 --> 00:13:23,400
the app does and it provides a very

205
00:13:20,160 --> 00:13:28,620
useful way of doing that so for instance

206
00:13:23,400 --> 00:13:30,990
on the right hands and the screenshot on

207
00:13:28,620 --> 00:13:37,600
the right hand side of the

208
00:13:30,990 --> 00:13:41,350
slide is a quick snippet of where you

209
00:13:37,600 --> 00:13:47,520
see some smiley cold and you're looking

210
00:13:41,350 --> 00:13:50,380
for instance line 354 is determining a

211
00:13:47,520 --> 00:13:55,780
conditional if it's equal to zero

212
00:13:50,380 --> 00:13:57,880
then do condition zero also in 357

213
00:13:55,780 --> 00:14:01,750
you'll see that there's a string that

214
00:13:57,880 --> 00:14:05,650
will be displayed to the screen

215
00:14:01,750 --> 00:14:08,920
no emulator use permitted go away

216
00:14:05,650 --> 00:14:12,939
so again smiley is good if you want to

217
00:14:08,920 --> 00:14:19,150
know the bare bones of how your how an

218
00:14:12,940 --> 00:14:22,420
Android app works next is res so this

219
00:14:19,150 --> 00:14:26,319
folder contains additional files and

220
00:14:22,420 --> 00:14:31,229
static content some of the things that

221
00:14:26,320 --> 00:14:35,470
are in this folder are images in the

222
00:14:31,230 --> 00:14:38,980
drawable folder layout definitions and

223
00:14:35,470 --> 00:14:41,890
the layout folder user interface strings

224
00:14:38,980 --> 00:14:49,390
and animation strings which are in the

225
00:14:41,890 --> 00:14:53,260
values folder going next is the meta m

226
00:14:49,390 --> 00:14:56,740
folder so this is used for certificates

227
00:14:53,260 --> 00:15:02,470
and signing of the application so the

228
00:14:56,740 --> 00:15:05,950
cert RSA it contains the signed contents

229
00:15:02,470 --> 00:15:08,890
of the cert SF file along with the

230
00:15:05,950 --> 00:15:12,220
certificate chain of the public key used

231
00:15:08,890 --> 00:15:14,860
to sign the contents the cert SF

232
00:15:12,220 --> 00:15:18,580
contains a list of all the files in the

233
00:15:14,860 --> 00:15:21,430
application along with sha-1 hashes and

234
00:15:18,580 --> 00:15:25,060
the manifest that MF contains

235
00:15:21,430 --> 00:15:28,089
information for the applications such as

236
00:15:25,060 --> 00:15:35,560
package version and bill number creator

237
00:15:28,090 --> 00:15:41,260
of the package etc finally the Android

238
00:15:35,560 --> 00:15:42,949
manifest file located at the root of the

239
00:15:41,260 --> 00:15:46,170
project

240
00:15:42,950 --> 00:15:48,920
presents and sensual information about

241
00:15:46,170 --> 00:15:52,680
the application to the Android system

242
00:15:48,920 --> 00:15:56,310
information the system need needs before

243
00:15:52,680 --> 00:15:58,709
it can run any code manifest the

244
00:15:56,310 --> 00:16:03,359
manifest declares the apps components

245
00:15:58,709 --> 00:16:05,279
such as package of application describes

246
00:16:03,360 --> 00:16:09,209
the components of the application

247
00:16:05,279 --> 00:16:12,930
activity services broadcast receivers

248
00:16:09,209 --> 00:16:15,510
and content providers declares which

249
00:16:12,930 --> 00:16:17,779
permissions the application must have in

250
00:16:15,510 --> 00:16:20,220
order to interact with the protected API

251
00:16:17,779 --> 00:16:23,399
application programming interfaces and

252
00:16:20,220 --> 00:16:26,579
other applications and declares the

253
00:16:23,399 --> 00:16:30,589
minimum level of Android AP eyes and

254
00:16:26,579 --> 00:16:34,260
your API that the application requires

255
00:16:30,589 --> 00:16:38,060
so here's an example of the Android

256
00:16:34,260 --> 00:16:44,010
manifest so we see the third line

257
00:16:38,060 --> 00:16:47,579
describes the package lines four and

258
00:16:44,010 --> 00:16:53,069
five subscribes version name and version

259
00:16:47,579 --> 00:16:59,489
cold line seven starts talking about the

260
00:16:53,070 --> 00:17:03,329
activity line nine lines nine through

261
00:16:59,490 --> 00:17:08,939
twelve discusses the intent so for the

262
00:17:03,329 --> 00:17:13,129
activity we have a main act and action

263
00:17:08,939 --> 00:17:18,240
of main and essentially to launch the

264
00:17:13,130 --> 00:17:23,790
activity and then in line 16 describes

265
00:17:18,240 --> 00:17:27,689
the minimum SDK or minimum Android

266
00:17:23,790 --> 00:17:30,600
version so in this case it's 2 which

267
00:17:27,689 --> 00:17:37,400
means it's the first level the first

268
00:17:30,600 --> 00:17:37,399
Android system Android 1.1

269
00:17:39,090 --> 00:17:49,209
okay so the next section will just I

270
00:17:44,860 --> 00:17:54,729
will be talking about how mobile devices

271
00:17:49,210 --> 00:18:03,790
are pretty much little web browsers and

272
00:17:54,730 --> 00:18:09,520
how you can exploit this by finding

273
00:18:03,790 --> 00:18:15,190
vulnerabilities and apps so how do you

274
00:18:09,520 --> 00:18:18,840
do this one way is to use burp and burp

275
00:18:15,190 --> 00:18:22,710
is a proxy to capture HTML traffic

276
00:18:18,840 --> 00:18:26,230
between web browser and application

277
00:18:22,710 --> 00:18:28,600
intercepts inspects and modify traffic

278
00:18:26,230 --> 00:18:31,660
in both directions

279
00:18:28,600 --> 00:18:35,379
there's a map store which contains

280
00:18:31,660 --> 00:18:39,210
extensions extensions to find exploit

281
00:18:35,380 --> 00:18:43,410
security vulnerabilities some are

282
00:18:39,210 --> 00:18:47,500
bypassed waves web application firewalls

283
00:18:43,410 --> 00:18:52,510
command injections and SQL injections

284
00:18:47,500 --> 00:18:57,190
where essentially Mal informed input and

285
00:18:52,510 --> 00:19:01,900
you can gain act gain information about

286
00:18:57,190 --> 00:19:10,420
databases you can dump tables and get

287
00:19:01,900 --> 00:19:14,050
data so an example here is what an

288
00:19:10,420 --> 00:19:17,980
interception will look like and burp so

289
00:19:14,050 --> 00:19:22,059
in this example it's using port swagger

290
00:19:17,980 --> 00:19:25,450
which is the company that created Berk

291
00:19:22,059 --> 00:19:32,190
and so essentially we have intercepted

292
00:19:25,450 --> 00:19:35,020
an HTTP request and you can see the host

293
00:19:32,190 --> 00:19:40,000
you can see a multitude of things such

294
00:19:35,020 --> 00:19:45,340
as cookies and what you can do with this

295
00:19:40,000 --> 00:19:49,570
is you can modify any of these values

296
00:19:45,340 --> 00:19:52,110
and then select forward

297
00:19:49,570 --> 00:19:57,790
and what will happen is your new

298
00:19:52,110 --> 00:20:00,000
modified request will be sent to the

299
00:19:57,790 --> 00:20:00,000
server

300
00:20:01,500 --> 00:20:11,160
next is excuse me

301
00:20:06,960 --> 00:20:14,320
next is repeater and with repeater

302
00:20:11,160 --> 00:20:20,400
what's really good about this function

303
00:20:14,320 --> 00:20:24,730
is that you can refined a request and

304
00:20:20,400 --> 00:20:28,570
then you can repeat it as many times as

305
00:20:24,730 --> 00:20:33,220
you like to see what results you would

306
00:20:28,570 --> 00:20:38,020
get this is really good if you know you

307
00:20:33,220 --> 00:20:40,660
want to try something out and you don't

308
00:20:38,020 --> 00:20:43,420
know what the results may be or you have

309
00:20:40,660 --> 00:20:46,540
you know you have a hypothesis and you

310
00:20:43,420 --> 00:20:49,180
want to prove it out repeater is good

311
00:20:46,540 --> 00:20:52,659
because as I said you can take the

312
00:20:49,180 --> 00:20:58,180
request and you can modify it as many as

313
00:20:52,660 --> 00:21:00,540
many times as you want and you on the

314
00:20:58,180 --> 00:21:03,280
right hand side is the response and

315
00:21:00,540 --> 00:21:09,159
that's pretty much what will tell you

316
00:21:03,280 --> 00:21:16,649
how the page was will respond given the

317
00:21:09,160 --> 00:21:19,390
input you put in the request okay so how

318
00:21:16,650 --> 00:21:24,910
does you know the information that I

319
00:21:19,390 --> 00:21:29,410
mentioned with burp Thai and to what we

320
00:21:24,910 --> 00:21:33,490
have with mobile security so there is

321
00:21:29,410 --> 00:21:37,420
the AVD manager which is the Android

322
00:21:33,490 --> 00:21:40,510
virtual device it simulates a physical

323
00:21:37,420 --> 00:21:43,020
device used to test and run your

324
00:21:40,510 --> 00:21:46,060
applications in different configurations

325
00:21:43,020 --> 00:21:49,450
there's a command-line option and it's

326
00:21:46,060 --> 00:21:54,070
also built into Android studio this is

327
00:21:49,450 --> 00:21:58,540
very good if you do not have ant device

328
00:21:54,070 --> 00:22:01,629
to play with this is really neat because

329
00:21:58,540 --> 00:22:03,309
you can create as many devices as you

330
00:22:01,630 --> 00:22:06,870
want so if you look on

331
00:22:03,309 --> 00:22:12,840
right hand side you'll see a tablet

332
00:22:06,870 --> 00:22:16,570
Android TV Android wear a pixel three

333
00:22:12,840 --> 00:22:21,309
and essentially what you can do is you

334
00:22:16,570 --> 00:22:26,230
can create as much as many devices as

335
00:22:21,309 --> 00:22:30,639
you want say for instance if you're

336
00:22:26,230 --> 00:22:33,999
working and you know you're working on a

337
00:22:30,639 --> 00:22:38,529
bug bounty and you're like hey I want to

338
00:22:33,999 --> 00:22:42,610
test this device on a pixel three

339
00:22:38,529 --> 00:22:46,269
because I believe that you know in the

340
00:22:42,610 --> 00:22:49,178
pixel three it will be vulnerable or you

341
00:22:46,269 --> 00:22:53,379
know I will get different results you

342
00:22:49,179 --> 00:22:56,950
can create a virtual device and Android

343
00:22:53,379 --> 00:23:00,178
studio and then you can test out the

344
00:22:56,950 --> 00:23:03,869
application to see how it will work

345
00:23:00,179 --> 00:23:03,869
using the pixel three

346
00:23:04,440 --> 00:23:16,629
next is the SDK manager which separates

347
00:23:12,269 --> 00:23:20,860
the SDK separates tools platforms and

348
00:23:16,629 --> 00:23:23,549
other components into packages this is

349
00:23:20,860 --> 00:23:27,269
then downloaded through the SDK manager

350
00:23:23,549 --> 00:23:31,509
you can also use the SDK manager to

351
00:23:27,269 --> 00:23:35,320
capture traffic from a device and so

352
00:23:31,509 --> 00:23:44,110
this is an example here on the left hand

353
00:23:35,320 --> 00:23:46,629
side is burp where you where you have a

354
00:23:44,110 --> 00:23:52,479
burp screenshot showing you the proxy

355
00:23:46,629 --> 00:23:56,939
it's listening on the localhost at 80 80

356
00:23:52,480 --> 00:24:01,690
and then on the right hand side is a

357
00:23:56,940 --> 00:24:06,730
screenshot from Android studio inside

358
00:24:01,690 --> 00:24:10,809
the SDK and if you notice there's a

359
00:24:06,730 --> 00:24:17,790
manual proxy configuration with hostname

360
00:24:10,809 --> 00:24:20,770
of one excuse me excuse me of 120

361
00:24:17,790 --> 00:24:26,710
1000 that one the local host and the

362
00:24:20,770 --> 00:24:30,360
port number of 8080 you can also define

363
00:24:26,710 --> 00:24:33,610
if there's a special login or password

364
00:24:30,360 --> 00:24:37,229
for the proxy authentication you can

365
00:24:33,610 --> 00:24:40,689
define that that's not defined and the

366
00:24:37,230 --> 00:24:44,740
screenshot so essentially what will

367
00:24:40,690 --> 00:24:48,010
happen is with this manual configuration

368
00:24:44,740 --> 00:24:52,830
proxy configuration when you're using a

369
00:24:48,010 --> 00:24:58,560
device it will burp within intercepts

370
00:24:52,830 --> 00:25:02,199
what the request and then you can modify

371
00:24:58,560 --> 00:25:09,460
modify that request or pet or let it

372
00:25:02,200 --> 00:25:16,350
pass through to see the results so the

373
00:25:09,460 --> 00:25:19,510
conclusion of my talk is Android is a

374
00:25:16,350 --> 00:25:23,709
popular to learn mobile security as the

375
00:25:19,510 --> 00:25:25,960
barrier to entry is low Android tamer is

376
00:25:23,710 --> 00:25:30,340
a good resource to learn mobile security

377
00:25:25,960 --> 00:25:34,240
as both as most tools are located in one

378
00:25:30,340 --> 00:25:38,129
location learning the tools are pretty

379
00:25:34,240 --> 00:25:42,850
straightforward and if you are like me

380
00:25:38,130 --> 00:25:46,000
if you thought about getting into bug

381
00:25:42,850 --> 00:25:48,449
bounties but you weren't sure if you

382
00:25:46,000 --> 00:25:54,610
have the knowledge or the aptitude

383
00:25:48,450 --> 00:25:58,720
definitely get involved and I guess how

384
00:25:54,610 --> 00:26:01,929
to get involved read write-ups if

385
00:25:58,720 --> 00:26:02,440
they're available and then take the

386
00:26:01,930 --> 00:26:05,350
plunge

387
00:26:02,440 --> 00:26:10,000
until bug bounties do you know bugcrowd

388
00:26:05,350 --> 00:26:12,429
hacker one you will never practice makes

389
00:26:10,000 --> 00:26:15,400
perfect and you know you can read as

390
00:26:12,430 --> 00:26:19,060
many write-ups as you want but you will

391
00:26:15,400 --> 00:26:23,110
never actually really learn or gain the

392
00:26:19,060 --> 00:26:28,750
experience without taking the plunge

393
00:26:23,110 --> 00:26:33,100
so some of the resources that I found a

394
00:26:28,750 --> 00:26:33,669
mobile security mobi SEC which is really

395
00:26:33,100 --> 00:26:36,969
good

396
00:26:33,669 --> 00:26:42,309
I cannot think of the gentleman's name

397
00:26:36,970 --> 00:26:47,500
on Twitter but he taught a mobile

398
00:26:42,309 --> 00:26:50,710
security course and he has I believe

399
00:26:47,500 --> 00:26:54,190
eight or ten challenges ranging in

400
00:26:50,710 --> 00:26:59,139
difficulty the mobile security testing

401
00:26:54,190 --> 00:27:02,950
guide the hacking playground the Oh boss

402
00:26:59,139 --> 00:27:06,820
on trackable mobile apps and the pen

403
00:27:02,950 --> 00:27:14,350
testers pen tester lab Android badge and

404
00:27:06,820 --> 00:27:18,730
then a tutorial hacker 101 CTF and below

405
00:27:14,350 --> 00:27:23,850
is the suggested reading if you want to

406
00:27:18,730 --> 00:27:23,850
learn more about Android security

407
00:27:25,020 --> 00:27:34,870
and that was all I had all right so

408
00:27:30,540 --> 00:27:41,470
Jazmin I wanted to let you know that

409
00:27:34,870 --> 00:27:43,239
people were a big fan of your cat I

410
00:27:41,470 --> 00:27:48,220
don't know if you guys heard her but I

411
00:27:43,240 --> 00:27:50,440
was trying to move her neck also let me

412
00:27:48,220 --> 00:27:57,550
I wanna stop sharing for a minute and

413
00:27:50,440 --> 00:27:59,890
then a live demo of the Android tamer VM

414
00:27:57,550 --> 00:28:01,720
because I have it pulled up but let me

415
00:27:59,890 --> 00:28:03,940
stop sharing for a moment and yeah out

416
00:28:01,720 --> 00:28:05,710
here yeah you're fine you're fine I've

417
00:28:03,940 --> 00:28:09,340
got it switched over on the live stream

418
00:28:05,710 --> 00:28:11,170
okay yeah it's funny or you were talking

419
00:28:09,340 --> 00:28:13,840
and I think you're gonna select the name

420
00:28:11,170 --> 00:28:16,600
of a phone and you were like and it's

421
00:28:13,840 --> 00:28:19,899
named by and then the cat meowed right

422
00:28:16,600 --> 00:28:23,020
there and it was just so funny it was

423
00:28:19,900 --> 00:28:26,860
like your cat chimed in and the chat lit

424
00:28:23,020 --> 00:28:36,930
up with a bunch of cat emojis oh they

425
00:28:26,860 --> 00:28:40,360
were fans okay thank you so so this is

426
00:28:36,930 --> 00:28:46,350
can you guys still see my screen we just

427
00:28:40,360 --> 00:28:46,350
see end of slideshow click to exit oh I

428
00:28:49,140 --> 00:28:56,460
think I fear just that one

429
00:28:59,640 --> 00:29:08,080
okay can you guys see my screen yeah

430
00:29:03,070 --> 00:29:13,300
now they can see it okay so here is the

431
00:29:08,080 --> 00:29:18,340
actual Android tamer virtual machine and

432
00:29:13,300 --> 00:29:23,560
as I said you know here are some of the

433
00:29:18,340 --> 00:29:27,399
features something that I want to play

434
00:29:23,560 --> 00:29:32,860
with but I have not really done

435
00:29:27,400 --> 00:29:35,140
let's see if I can find it is the ADB

436
00:29:32,860 --> 00:29:38,620
which is I believe that Android

437
00:29:35,140 --> 00:29:39,100
but bridge I believe that's what it's

438
00:29:38,620 --> 00:29:47,290
called

439
00:29:39,100 --> 00:29:54,428
but that's the next section my next

440
00:29:47,290 --> 00:29:57,399
journey with mobile security also drozer

441
00:29:54,429 --> 00:30:01,720
is something else that I'm yeah here is

442
00:29:57,400 --> 00:30:08,020
the Android debug bridge that's another

443
00:30:01,720 --> 00:30:11,860
way to debug your Android or just your

444
00:30:08,020 --> 00:30:16,020
mobile your mobile applications

445
00:30:11,860 --> 00:30:30,250
I really haven't played with this but

446
00:30:16,020 --> 00:30:36,520
that's the next step in my journey we

447
00:30:30,250 --> 00:30:39,040
had a message in chat where someone

448
00:30:36,520 --> 00:30:41,500
mentioned certificate bypass techniques

449
00:30:39,040 --> 00:30:46,750
have you have you learned personally

450
00:30:41,500 --> 00:30:49,809
about I have not started that yet as I

451
00:30:46,750 --> 00:30:53,230
said I'm very new to this space yeah

452
00:30:49,809 --> 00:30:56,290
three months so that is also something

453
00:30:53,230 --> 00:31:00,190
that's on my to-do list

454
00:30:56,290 --> 00:31:03,668
nice so how so how long ago did you

455
00:31:00,190 --> 00:31:06,460
start you started a few months ago a few

456
00:31:03,669 --> 00:31:07,990
months ago Wow you should be really

457
00:31:06,460 --> 00:31:08,610
proud of yourself you did a great job

458
00:31:07,990 --> 00:31:12,460
today

459
00:31:08,610 --> 00:31:17,439
yeah it's only really been about three

460
00:31:12,460 --> 00:31:19,919
months it's some I sorry I'm all over

461
00:31:17,440 --> 00:31:19,919
the place

462
00:31:21,750 --> 00:31:30,520
it's my cat someone just said every

463
00:31:27,429 --> 00:31:41,410
level of chat or so yeah stream should

464
00:31:30,520 --> 00:31:45,490
have a cat yes please thank you so for

465
00:31:41,410 --> 00:31:48,230
instance this is the first level of the

466
00:31:45,490 --> 00:31:52,970
uncrackable channel

467
00:31:48,230 --> 00:31:55,429
for OWASP and again ID compiled the apk

468
00:31:52,970 --> 00:32:00,799
and you can see some of the stuff that I

469
00:31:55,429 --> 00:32:02,330
talked about the res folder which for

470
00:32:00,799 --> 00:32:11,470
the static content

471
00:32:02,330 --> 00:32:11,470
smiley let's see if I can open this and

472
00:32:21,140 --> 00:32:28,160
and again I really love Android tamer

473
00:32:24,910 --> 00:32:31,370
again since I'm very new in this in this

474
00:32:28,160 --> 00:32:32,750
space and I didn't want to spend like

475
00:32:31,370 --> 00:32:35,239
months on end

476
00:32:32,750 --> 00:32:39,190
finding software installing software so

477
00:32:35,240 --> 00:32:41,900
this VM has been a lifesaver for me I

478
00:32:39,190 --> 00:32:47,750
liken it to Callie

479
00:32:41,900 --> 00:32:49,960
but just for the mobile space and I love

480
00:32:47,750 --> 00:32:49,960
it

481
00:33:33,940 --> 00:33:39,129
sorry I should have had this ready

482
00:33:35,899 --> 00:33:45,320
instead of everyone just looking at a

483
00:33:39,129 --> 00:33:47,238
project to field a funny comment says on

484
00:33:45,320 --> 00:34:12,529
the internet no one knows if you are a

485
00:33:47,239 --> 00:34:16,329
cat let's see so someone just asked in

486
00:34:12,530 --> 00:34:21,429
chat since we do have time left we have

487
00:34:16,329 --> 00:34:24,559
about 30 minutes to think okay it's okay

488
00:34:21,429 --> 00:34:27,918
so someone was asking if we could do a

489
00:34:24,559 --> 00:34:29,619
live testing on a program we couldn't

490
00:34:27,918 --> 00:34:35,089
unfortunately since we're live-streaming

491
00:34:29,619 --> 00:34:36,470
we can let people test on live targets

492
00:34:35,089 --> 00:34:43,210
just because we don't want to get in

493
00:34:36,469 --> 00:34:47,299
trouble yeah we did that's why I'm using

494
00:34:43,210 --> 00:34:51,918
you know yeah I appreciated that comment

495
00:34:47,299 --> 00:35:00,170
earlier by the way I was just like I

496
00:34:51,918 --> 00:35:04,879
rather err on caution yeah so it was

497
00:35:00,170 --> 00:35:09,559
smart let's see here so I'm actually

498
00:35:04,880 --> 00:35:14,569
going to demo I guess how you would

499
00:35:09,559 --> 00:35:21,920
decompile an apk okay yeah that sounds

500
00:35:14,569 --> 00:35:23,509
great and which have you hacked on so I

501
00:35:21,920 --> 00:35:26,450
guess have you taken this over to bug

502
00:35:23,510 --> 00:35:30,920
bounties yet and what kind of programs

503
00:35:26,450 --> 00:35:36,549
you know I have download I've downloaded

504
00:35:30,920 --> 00:35:41,210
a few apks and I've looked at them I

505
00:35:36,549 --> 00:35:42,880
really I haven't actually found a bug

506
00:35:41,210 --> 00:35:46,750
yet but

507
00:35:42,880 --> 00:36:04,609
still actively we're on the hunt yeah

508
00:35:46,750 --> 00:36:27,589
that's cool you next level up the cat

509
00:36:04,609 --> 00:36:31,848
should have a byline as well okay so we

510
00:36:27,589 --> 00:36:39,589
have D compiled the crackable level one

511
00:36:31,849 --> 00:36:44,599
and if we go to my download location you

512
00:36:39,589 --> 00:36:52,328
will see these are the folders of the

513
00:36:44,599 --> 00:36:55,549
Android manifest here for mm this apk

514
00:36:52,329 --> 00:37:01,599
excuse me let me get some water very

515
00:36:55,549 --> 00:37:01,599
quickly no problem

516
00:37:03,410 --> 00:37:08,299
while you're doing that Haddix Jason

517
00:37:06,140 --> 00:37:11,900
Haddix left a good comment he said a lot

518
00:37:08,299 --> 00:37:14,329
of the mobile app bugs that we receive

519
00:37:11,900 --> 00:37:19,160
these days have to do with hard-coded

520
00:37:14,329 --> 00:37:20,900
secrets yes yeah that someone else has

521
00:37:19,160 --> 00:37:25,368
told me that and that's what I've been

522
00:37:20,900 --> 00:37:28,579
looking for yeah it's either hard-coded

523
00:37:25,369 --> 00:37:31,130
secrets or problems with the api's our

524
00:37:28,579 --> 00:37:33,339
our websites I feel like the the

525
00:37:31,130 --> 00:37:35,930
platforms and also used to be bugs like

526
00:37:33,339 --> 00:37:38,210
not protecting the data very well or

527
00:37:35,930 --> 00:37:40,339
writing it to your world readable places

528
00:37:38,210 --> 00:37:42,049
and there used to be like a lot of

529
00:37:40,339 --> 00:37:43,730
intent bugs and stuff like that at least

530
00:37:42,049 --> 00:37:45,470
back when I did this back in the day but

531
00:37:43,730 --> 00:37:47,450
a lot of those have gone away because

532
00:37:45,470 --> 00:37:50,359
the platforms and so of iOS and Android

533
00:37:47,450 --> 00:37:55,790
have really mitigated though OS

534
00:37:50,359 --> 00:37:58,700
following not is like certs and

535
00:37:55,790 --> 00:38:01,730
API keys and passwords hard-coded and

536
00:37:58,700 --> 00:38:04,250
then the rest would be URLs that have

537
00:38:01,730 --> 00:38:08,710
basic web bugs on them is - so using

538
00:38:04,250 --> 00:38:08,710
Burbage for competency for a lot of this

539
00:38:08,740 --> 00:38:22,879
okay so here we have the Android

540
00:38:12,670 --> 00:38:26,270
manifest we can see the package here SG

541
00:38:22,880 --> 00:38:30,110
vantage point on crackable one and it

542
00:38:26,270 --> 00:38:34,220
points to the main activity we have an

543
00:38:30,110 --> 00:38:38,330
intent filter the main which launches

544
00:38:34,220 --> 00:38:45,890
the activity I'm going to see if I can

545
00:38:38,330 --> 00:38:49,759
actually okay so it finally opened here

546
00:38:45,890 --> 00:38:52,160
we have some small E and remember in my

547
00:38:49,760 --> 00:38:57,640
presentation I was saying it's like the

548
00:38:52,160 --> 00:39:03,680
low-level bare bones of an end of an

549
00:38:57,640 --> 00:39:10,310
android app so for the uncrackable level

550
00:39:03,680 --> 00:39:14,839
one we here's some of the small e so we

551
00:39:10,310 --> 00:39:16,759
see here it you know there's a string

552
00:39:14,840 --> 00:39:21,350
this is unacceptable

553
00:39:16,760 --> 00:39:26,000
the app is now going to exit so I have

554
00:39:21,350 --> 00:39:28,190
to I'm still playing with this so I

555
00:39:26,000 --> 00:39:33,440
haven't cracked it yet but I feel like

556
00:39:28,190 --> 00:39:41,830
I'm very close and so here's some of the

557
00:39:33,440 --> 00:39:41,830
small e for this app let's see

558
00:39:46,120 --> 00:39:56,990
so here the meta F so we have the cert

559
00:39:51,440 --> 00:39:59,620
art okay so we have the cert RSA the

560
00:39:56,990 --> 00:40:05,990
search CF and the manifest

561
00:39:59,620 --> 00:40:22,819
I'm trying to see if I can open any of

562
00:40:05,990 --> 00:40:26,410
the actual code sorry this is what

563
00:40:22,820 --> 00:40:26,410
happens when you do a live demo

564
00:41:06,160 --> 00:41:14,839
okay I don't I was actually looking for

565
00:41:09,790 --> 00:41:25,009
some Java Java code and I don't actually

566
00:41:14,840 --> 00:41:31,090
see this here yeah I was actually trying

567
00:41:25,010 --> 00:41:36,470
to see if there was any I wanted to show

568
00:41:31,090 --> 00:41:41,480
Java code to see the code for like the

569
00:41:36,470 --> 00:41:56,689
activity but I do not I actually do not

570
00:41:41,480 --> 00:42:08,170
see it listed so also another another

571
00:41:56,690 --> 00:42:13,120
tool is JDX where you can provide I

572
00:42:08,170 --> 00:42:18,860
believe a jar and then it can decompile

573
00:42:13,120 --> 00:42:22,670
your Android application decompile and

574
00:42:18,860 --> 00:42:27,710
then you can see the actual code so let

575
00:42:22,670 --> 00:42:30,040
me see if I can actually do that very

576
00:42:27,710 --> 00:42:30,040
quickly

577
00:42:46,330 --> 00:42:51,980
also something to keep in mind when

578
00:42:49,430 --> 00:42:58,970
you're working with bug bounties and you

579
00:42:51,980 --> 00:43:04,190
use J DX the J DX GUI most times the

580
00:42:58,970 --> 00:43:08,899
code will be a few skated and what that

581
00:43:04,190 --> 00:43:22,130
means is that the code will be hidden so

582
00:43:08,900 --> 00:43:29,210
for instance okay so for instance how I

583
00:43:22,130 --> 00:43:33,140
can see here the different methods like

584
00:43:29,210 --> 00:43:37,780
on create view verify and the actual

585
00:43:33,140 --> 00:43:41,120
class names wool for most applications

586
00:43:37,780 --> 00:43:44,420
that would be obfuscated and meaning

587
00:43:41,120 --> 00:43:47,930
that instead of seeing main activity you

588
00:43:44,420 --> 00:43:51,170
might see the letter B and then for

589
00:43:47,930 --> 00:43:54,200
method like how the methods are being

590
00:43:51,170 --> 00:43:58,360
explicitly written you won't see that

591
00:43:54,200 --> 00:44:00,980
it'll be like C or D or something

592
00:43:58,360 --> 00:44:08,480
unintelligible and the reason for that

593
00:44:00,980 --> 00:44:10,970
is you don't developers or developers of

594
00:44:08,480 --> 00:44:14,300
the app they don't want you to rather

595
00:44:10,970 --> 00:44:19,370
readily reverse-engineer they have their

596
00:44:14,300 --> 00:44:22,760
application so that's one level of them

597
00:44:19,370 --> 00:44:25,700
trying to deter you or making it much

598
00:44:22,760 --> 00:44:28,360
harder for you to reverse engineer their

599
00:44:25,700 --> 00:44:28,359
application

600
00:44:33,339 --> 00:44:46,729
so here for the uncrackable 1 we see the

601
00:44:40,609 --> 00:44:51,229
main activity so and each there has to

602
00:44:46,729 --> 00:44:55,509
be a main activity for an Android

603
00:44:51,229 --> 00:44:58,158
application so I didn't mention and I

604
00:44:55,509 --> 00:45:01,459
love you mentioning now that this is

605
00:44:58,159 --> 00:45:08,719
built you know upon you know you use

606
00:45:01,459 --> 00:45:13,419
Java as the programming language so this

607
00:45:08,719 --> 00:45:19,449
is the code for the main activity for

608
00:45:13,419 --> 00:45:21,979
the uncrackable one application so this

609
00:45:19,449 --> 00:45:24,319
tool jeddaks

610
00:45:21,979 --> 00:45:30,788
I'm using the GUI version there's also a

611
00:45:24,319 --> 00:45:40,308
command line version as well here

612
00:45:30,789 --> 00:45:44,179
essentially you can you can use an apk a

613
00:45:40,309 --> 00:45:46,399
jar class zip and essentially what it

614
00:45:44,179 --> 00:45:50,389
will do is it would D compile the

615
00:45:46,399 --> 00:45:54,529
application and then you can see the

616
00:45:50,389 --> 00:45:56,299
cold low if it's not a few skated you

617
00:45:54,529 --> 00:45:59,449
can see the code and then you could kind

618
00:45:56,299 --> 00:46:02,329
of use that to learn more about the

619
00:45:59,449 --> 00:46:05,659
application tried you know see if

620
00:46:02,329 --> 00:46:07,819
there's anything like Jason said that

621
00:46:05,659 --> 00:46:10,789
was misconfigured or if you're if you

622
00:46:07,819 --> 00:46:15,319
see like secrets or anything like that

623
00:46:10,789 --> 00:46:18,919
this is a good tool to have a good tool

624
00:46:15,319 --> 00:46:22,130
to have a good tool to learn even if

625
00:46:18,919 --> 00:46:26,239
there are non secrets just to get a

626
00:46:22,130 --> 00:46:29,209
general idea of the application because

627
00:46:26,239 --> 00:46:31,880
that's something when you're doing bug

628
00:46:29,209 --> 00:46:34,219
bounties that's something that's very

629
00:46:31,880 --> 00:46:36,949
important because you want to know you

630
00:46:34,219 --> 00:46:38,989
know have a general idea of what the

631
00:46:36,949 --> 00:46:41,119
application does because then that could

632
00:46:38,989 --> 00:46:45,319
kind of guide you and what you're

633
00:46:41,119 --> 00:46:58,420
looking for what you need to test more

634
00:46:45,319 --> 00:47:03,069
and things like that and so here the

635
00:46:58,420 --> 00:47:06,680
third SF in this case you'll see all of

636
00:47:03,069 --> 00:47:10,249
you'll see the fouls listed and in this

637
00:47:06,680 --> 00:47:19,959
case excuse me it's using the sha-256

638
00:47:10,249 --> 00:47:29,868
and you could see the hashes here and

639
00:47:19,959 --> 00:47:34,190
the manifest MF you see some more hashes

640
00:47:29,869 --> 00:47:38,539
and that was pretty much all I had I'm

641
00:47:34,190 --> 00:47:41,779
sorry for not having good demo ready

642
00:47:38,539 --> 00:47:47,569
um but are there any questions

643
00:47:41,779 --> 00:47:49,579
have you learned yet about dealing with

644
00:47:47,569 --> 00:47:54,490
obfuscation so we had a question about

645
00:47:49,579 --> 00:47:56,859
how what to do if there's obfuscation so

646
00:47:54,490 --> 00:48:00,859
[Music]

647
00:47:56,859 --> 00:48:05,479
what and I really haven't played with it

648
00:48:00,859 --> 00:48:09,440
but I have read that I believe that I

649
00:48:05,479 --> 00:48:10,160
believe Android studio has a software

650
00:48:09,440 --> 00:48:13,009
called

651
00:48:10,160 --> 00:48:16,699
ProGuard I believe that's what it's

652
00:48:13,009 --> 00:48:21,769
called and it's a tool that can help you

653
00:48:16,699 --> 00:48:24,140
on a few skate the cold but even with

654
00:48:21,769 --> 00:48:27,169
that you probably will not get a

655
00:48:24,140 --> 00:48:31,009
one-to-one match meaning you will not

656
00:48:27,170 --> 00:48:34,759
you know turn back you know get

657
00:48:31,009 --> 00:48:39,619
everything the whole functionality but I

658
00:48:34,759 --> 00:48:44,539
have heard of ProGuard I also read that

659
00:48:39,619 --> 00:48:47,479
some people look look at the code and

660
00:48:44,539 --> 00:48:55,609
then they were kind of decipher and then

661
00:48:47,479 --> 00:48:59,029
they will they will restart renaming

662
00:48:55,609 --> 00:49:04,880
methods like if a Methodist a

663
00:48:59,030 --> 00:49:09,140
you realize it's used for like getting

664
00:49:04,880 --> 00:49:12,020
data so what some people would what I've

665
00:49:09,140 --> 00:49:12,920
read is instead of naming it a you might

666
00:49:12,020 --> 00:49:16,400
name it

667
00:49:12,920 --> 00:49:18,890
get data and then it's like doing that

668
00:49:16,400 --> 00:49:21,850
so many like when you do that with

669
00:49:18,890 --> 00:49:25,580
different methods you know we're moving

670
00:49:21,850 --> 00:49:28,339
changing the letters to actually methods

671
00:49:25,580 --> 00:49:30,860
that's another way to kind of figure out

672
00:49:28,340 --> 00:49:32,810
what the application does but those are

673
00:49:30,860 --> 00:49:34,960
the only two things that I've read and I

674
00:49:32,810 --> 00:49:39,220
really haven't had a lot of experience

675
00:49:34,960 --> 00:49:43,010
with it no worries

676
00:49:39,220 --> 00:49:46,040
well thank you so much Jasmine we had a

677
00:49:43,010 --> 00:49:50,390
I had a great time I really appreciate

678
00:49:46,040 --> 00:49:54,290
you sharing with us your journey here as

679
00:49:50,390 --> 00:49:58,310
a as you say the title is the Diary of

680
00:49:54,290 --> 00:50:01,550
an inexperienced begin to say and I just

681
00:49:58,310 --> 00:50:04,490
want to say I just want to leave this as

682
00:50:01,550 --> 00:50:08,780
my parting words to the people on the

683
00:50:04,490 --> 00:50:11,779
call I actually attended the level up

684
00:50:08,780 --> 00:50:14,990
conference and January I believe I think

685
00:50:11,780 --> 00:50:17,750
that was level up three yeah not always

686
00:50:14,990 --> 00:50:20,350
like oh this is so cool I really wish I

687
00:50:17,750 --> 00:50:24,220
can do this and I just want to leave

688
00:50:20,350 --> 00:50:27,950
just leave people if you can do this

689
00:50:24,220 --> 00:50:30,620
right because I've only to spend three

690
00:50:27,950 --> 00:50:34,100
months and by no means am I an expert

691
00:50:30,620 --> 00:50:37,549
but if you feel like you can do this you

692
00:50:34,100 --> 00:50:40,640
can and you know just start just find a

693
00:50:37,550 --> 00:50:43,940
passion whether it's mobile security web

694
00:50:40,640 --> 00:50:46,970
applications cloud but you know if

695
00:50:43,940 --> 00:50:49,760
you're passionate just take the leap and

696
00:50:46,970 --> 00:50:52,730
you know learn more and then try to

697
00:50:49,760 --> 00:50:55,430
apply it to bug bounties because that's

698
00:50:52,730 --> 00:50:57,650
how you learn and that's how you make

699
00:50:55,430 --> 00:50:59,600
the community better I know that sounds

700
00:50:57,650 --> 00:51:03,170
really cliche but I really do believe

701
00:50:59,600 --> 00:51:05,509
that yeah I think I think for some

702
00:51:03,170 --> 00:51:06,920
people who've never never even touched a

703
00:51:05,510 --> 00:51:10,640
mobile app before which we have quite a

704
00:51:06,920 --> 00:51:11,770
few just opening up and the obfuscating

705
00:51:10,640 --> 00:51:13,529
the code is

706
00:51:11,770 --> 00:51:16,840
is the first challenge right and

707
00:51:13,530 --> 00:51:20,410
definitely see a lot of that's like the

708
00:51:16,840 --> 00:51:22,480
level that you need to catch do is like

709
00:51:20,410 --> 00:51:25,330
a hard-coded cert or a hard coded API

710
00:51:22,480 --> 00:51:27,460
key like all right not that hard but you

711
00:51:25,330 --> 00:51:29,950
just need to get past that hurdle which

712
00:51:27,460 --> 00:51:30,460
is pretty old and you know in a month so

713
00:51:29,950 --> 00:51:35,350
that's awesome

714
00:51:30,460 --> 00:51:38,020
a couple months yeah so so thank you

715
00:51:35,350 --> 00:51:41,410
guys so much for listening to my

716
00:51:38,020 --> 00:51:42,720
presentation again sorry the live demo

717
00:51:41,410 --> 00:51:45,960
was kind of wonky

718
00:51:42,720 --> 00:51:50,080
but I really do hope that you've learned

719
00:51:45,960 --> 00:51:53,080
something and I hope that you - I hear

720
00:51:50,080 --> 00:51:54,160
your talks as well other people who's

721
00:51:53,080 --> 00:51:56,740
participating

722
00:51:54,160 --> 00:51:59,049
you know actually become you know

723
00:51:56,740 --> 00:52:02,649
speakers and tell us what you have

724
00:51:59,050 --> 00:52:05,920
learned so thank you so much awesome

725
00:52:02,650 --> 00:52:08,470
thank you so much jasmine everyone in

726
00:52:05,920 --> 00:52:12,240
the chat please throw out a virtual

727
00:52:08,470 --> 00:52:14,200
round of applause if you're on Twitter

728
00:52:12,240 --> 00:52:18,060
give her a shout out

729
00:52:14,200 --> 00:52:21,609
we've tweeted out her Twitter handle and

730
00:52:18,060 --> 00:52:23,650
you can give Jasmine a shout out and use

731
00:52:21,609 --> 00:52:26,520
hashtag it takes a crowd but thank you

732
00:52:23,650 --> 00:52:26,520
so much jasmine

