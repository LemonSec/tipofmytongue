1
00:00:00,320 --> 00:00:02,720
hi everyone welcome to the first video

2
00:00:02,720 --> 00:00:04,880
in our level up x series

3
00:00:04,880 --> 00:00:06,799
our first speaker in this

4
00:00:06,799 --> 00:00:09,280
series is kyle bennett who will be

5
00:00:09,280 --> 00:00:11,280
giving a talk about salesforce object

6
00:00:11,280 --> 00:00:12,960
recon

7
00:00:12,960 --> 00:00:15,200
carl is a products trading engineer in

8
00:00:15,200 --> 00:00:16,800
identity

9
00:00:16,800 --> 00:00:18,560
he does security research in his spare

10
00:00:18,560 --> 00:00:19,680
time

11
00:00:19,680 --> 00:00:21,359
he plays video games including elder

12
00:00:21,359 --> 00:00:23,840
ring and old school wristhead

13
00:00:23,840 --> 00:00:25,840
and he enjoys gardening and exercising

14
00:00:25,840 --> 00:00:27,599
in his spare time

15
00:00:27,599 --> 00:00:30,640
we'll have a quick q a after you talk so

16
00:00:30,640 --> 00:00:32,880
stay tuned hello everyone and welcome to

17
00:00:32,880 --> 00:00:35,840
my talk about salesforce object recon

18
00:00:35,840 --> 00:00:38,800
with aura intruder my name is kyle banak

19
00:00:38,800 --> 00:00:42,239
and i am a product security engineer at

20
00:00:42,239 --> 00:00:44,399
ping identity

21
00:00:44,399 --> 00:00:47,120
now let's get the party started first

22
00:00:47,120 --> 00:00:49,600
we're gonna go over the contents of this

23
00:00:49,600 --> 00:00:50,879
talk

24
00:00:50,879 --> 00:00:52,559
starting with the boring background

25
00:00:52,559 --> 00:00:54,160
information

26
00:00:54,160 --> 00:00:56,800
leading into the interesting research

27
00:00:56,800 --> 00:01:00,480
and finally the demo fun

28
00:01:00,480 --> 00:01:03,600
the boring background info involves

29
00:01:03,600 --> 00:01:06,000
salesforce objects how salesforce

30
00:01:06,000 --> 00:01:07,680
interacts with files

31
00:01:07,680 --> 00:01:08,560
how

32
00:01:08,560 --> 00:01:10,400
lightning components

33
00:01:10,400 --> 00:01:13,600
send requests with uh or a framework

34
00:01:13,600 --> 00:01:17,040
to and from salesforce

35
00:01:17,040 --> 00:01:18,880
then we are going to talk about

36
00:01:18,880 --> 00:01:21,520
interesting objects anatomy of an aura

37
00:01:21,520 --> 00:01:22,560
endpoint

38
00:01:22,560 --> 00:01:26,320
anatomy of a salesforce file endpoint or

39
00:01:26,320 --> 00:01:29,600
intruder features the fun stuff

40
00:01:29,600 --> 00:01:33,520
and finally the demo

41
00:01:33,600 --> 00:01:35,040
so

42
00:01:35,040 --> 00:01:38,560
what is a salesforce object

43
00:01:38,560 --> 00:01:40,880
in salesforce we think about database

44
00:01:40,880 --> 00:01:43,439
tables as objects we think about columns

45
00:01:43,439 --> 00:01:46,720
as fields and rows as records i could

46
00:01:46,720 --> 00:01:50,798
not have said it any better myself

47
00:01:51,119 --> 00:01:52,960
standard objects

48
00:01:52,960 --> 00:01:55,520
are pretty much exactly what you think

49
00:01:55,520 --> 00:01:56,960
they would be

50
00:01:56,960 --> 00:01:57,840
and

51
00:01:57,840 --> 00:01:59,759
those are default objects in every

52
00:01:59,759 --> 00:02:01,280
salesforce environment they have

53
00:02:01,280 --> 00:02:03,280
standard permission sets but you still

54
00:02:03,280 --> 00:02:05,439
want to check field data because

55
00:02:05,439 --> 00:02:07,439
you can add custom fields to standard

56
00:02:07,439 --> 00:02:09,840
objects

57
00:02:10,318 --> 00:02:11,760
custom objects

58
00:02:11,760 --> 00:02:13,040
are objects that are created by

59
00:02:13,040 --> 00:02:14,959
salesforce devs to implement custom

60
00:02:14,959 --> 00:02:16,720
functionality

61
00:02:16,720 --> 00:02:18,080
these are

62
00:02:18,080 --> 00:02:20,319
for obvious reasons subject to user

63
00:02:20,319 --> 00:02:22,959
error

64
00:02:22,959 --> 00:02:24,239
most of the time they have custom

65
00:02:24,239 --> 00:02:27,280
permission sets and are have a

66
00:02:27,280 --> 00:02:30,560
underscore underscore c suffix appended

67
00:02:30,560 --> 00:02:33,200
to the end

68
00:02:34,080 --> 00:02:35,760
and it's pretty much the same scenario

69
00:02:35,760 --> 00:02:38,000
as don't roll your own crypto because

70
00:02:38,000 --> 00:02:40,000
anything that has been ironed out

71
00:02:40,000 --> 00:02:41,680
previously

72
00:02:41,680 --> 00:02:43,200
could um

73
00:02:43,200 --> 00:02:44,879
be re-implemented

74
00:02:44,879 --> 00:02:46,480
via custom

75
00:02:46,480 --> 00:02:48,000
implementation

76
00:02:48,000 --> 00:02:51,840
so moving on

77
00:02:52,560 --> 00:02:56,160
salesforce objects of interest

78
00:02:56,160 --> 00:02:58,000
alrighty so

79
00:02:58,000 --> 00:03:00,959
standard objects of interest

80
00:03:00,959 --> 00:03:02,400
are

81
00:03:02,400 --> 00:03:06,640
the user object account object

82
00:03:06,640 --> 00:03:09,200
partner object etc pretty much

83
00:03:09,200 --> 00:03:10,640
everything that has to do with the

84
00:03:10,640 --> 00:03:12,159
business

85
00:03:12,159 --> 00:03:14,239
um

86
00:03:14,239 --> 00:03:17,120
like the business assets or

87
00:03:17,120 --> 00:03:18,400
company

88
00:03:18,400 --> 00:03:20,800
employees and

89
00:03:20,800 --> 00:03:22,560
all that good stuff

90
00:03:22,560 --> 00:03:24,000
so with these objects there's a lot of

91
00:03:24,000 --> 00:03:26,879
potential for like pii leaks

92
00:03:26,879 --> 00:03:30,000
um etc

93
00:03:30,000 --> 00:03:32,720
for a custom object

94
00:03:32,720 --> 00:03:35,599
they can be named literally anything

95
00:03:35,599 --> 00:03:38,640
and they have like i said previously

96
00:03:38,640 --> 00:03:42,400
an appended underscore underscore c

97
00:03:42,400 --> 00:03:44,720
um so you could make an object called

98
00:03:44,720 --> 00:03:48,959
this is fine and it could only have a

99
00:03:48,959 --> 00:03:51,599
image of the this is find me

100
00:03:51,599 --> 00:03:52,720
surprise someone hasn't done that

101
00:03:52,720 --> 00:03:56,319
already maybe i should

102
00:03:57,599 --> 00:03:59,280
moving on to

103
00:03:59,280 --> 00:04:02,560
the aura framework

104
00:04:02,879 --> 00:04:06,720
the ora framework basically

105
00:04:06,720 --> 00:04:07,920
is used

106
00:04:07,920 --> 00:04:11,200
by lightning components to send data

107
00:04:11,200 --> 00:04:13,120
to salesforce

108
00:04:13,120 --> 00:04:15,200
and back

109
00:04:15,200 --> 00:04:18,000
to the actual lightning component

110
00:04:18,000 --> 00:04:20,000
that is and then that data is displayed

111
00:04:20,000 --> 00:04:22,639
via through the web app so

112
00:04:22,639 --> 00:04:24,479
you can

113
00:04:24,479 --> 00:04:28,320
think of web apps being client-side and

114
00:04:28,320 --> 00:04:29,600
web apps

115
00:04:29,600 --> 00:04:33,040
have embedded lightning components

116
00:04:33,040 --> 00:04:35,040
and the data flows from the lightning

117
00:04:35,040 --> 00:04:36,320
component

118
00:04:36,320 --> 00:04:38,320
via aura request

119
00:04:38,320 --> 00:04:42,919
to the server-side salesforce objects

120
00:04:43,120 --> 00:04:46,560
now let's look at a request

121
00:04:47,520 --> 00:04:50,720
this is an example or a post request

122
00:04:50,720 --> 00:04:51,840
so

123
00:04:51,840 --> 00:04:53,040
it looks pretty

124
00:04:53,040 --> 00:04:55,199
similar to a lot of you know post

125
00:04:55,199 --> 00:04:57,759
requests you would see via web app

126
00:04:57,759 --> 00:04:59,199
um

127
00:04:59,199 --> 00:05:01,280
specifically

128
00:05:01,280 --> 00:05:02,720
what's different

129
00:05:02,720 --> 00:05:05,520
is there's a lot of cross site

130
00:05:05,520 --> 00:05:07,280
sales force

131
00:05:07,280 --> 00:05:11,120
attribute headers um

132
00:05:11,120 --> 00:05:12,000
and

133
00:05:12,000 --> 00:05:15,199
attributes to note here are

134
00:05:15,199 --> 00:05:18,320
via this message equals

135
00:05:18,320 --> 00:05:22,840
json object and this json object is

136
00:05:22,840 --> 00:05:26,240
um what is sent

137
00:05:26,240 --> 00:05:29,199
with the aura framework

138
00:05:29,199 --> 00:05:31,919
to salesforce server side

139
00:05:31,919 --> 00:05:35,199
well in quotes server side

140
00:05:35,199 --> 00:05:36,479
um

141
00:05:36,479 --> 00:05:39,199
the specific parameters

142
00:05:39,199 --> 00:05:42,800
that we need to keep

143
00:05:43,120 --> 00:05:45,840
when we implement it into the extension

144
00:05:45,840 --> 00:05:48,080
burp suite extension are

145
00:05:48,080 --> 00:05:49,919
the aura token

146
00:05:49,919 --> 00:05:54,960
and the r context in entity name or id

147
00:05:55,039 --> 00:05:57,600
the entity name or id

148
00:05:57,600 --> 00:06:00,319
correlates with the actual salesforce

149
00:06:00,319 --> 00:06:03,199
object that we want to get data from

150
00:06:03,199 --> 00:06:06,800
so for example for example users

151
00:06:06,800 --> 00:06:09,280
would be an entity name

152
00:06:09,280 --> 00:06:11,840
or id

153
00:06:11,919 --> 00:06:14,639
moving on to how does salesforce handle

154
00:06:14,639 --> 00:06:16,160
files

155
00:06:16,160 --> 00:06:18,560
a file is stored in the content document

156
00:06:18,560 --> 00:06:19,600
object

157
00:06:19,600 --> 00:06:23,280
each file object has a unique identifier

158
00:06:23,280 --> 00:06:25,520
once it's uploaded and there are three

159
00:06:25,520 --> 00:06:27,919
endpoints that can be used to retrieve

160
00:06:27,919 --> 00:06:31,199
an object based on a prefix

161
00:06:31,199 --> 00:06:33,680
the first endpoint is the document

162
00:06:33,680 --> 00:06:36,639
endpoint the second is content document

163
00:06:36,639 --> 00:06:40,000
and third is content version

164
00:06:40,000 --> 00:06:42,000
and all of these endpoints

165
00:06:42,000 --> 00:06:44,880
can be used to look up a file based on

166
00:06:44,880 --> 00:06:48,440
its unique identifier

167
00:06:50,960 --> 00:06:53,360
all right so how are we using this

168
00:06:53,360 --> 00:06:54,720
research

169
00:06:54,720 --> 00:06:56,800
we're implementing a custom purpose

170
00:06:56,800 --> 00:06:58,639
intruder payload generator with our

171
00:06:58,639 --> 00:07:01,120
python extension

172
00:07:01,120 --> 00:07:03,039
automating several steps

173
00:07:03,039 --> 00:07:05,360
to find data leaks faster

174
00:07:05,360 --> 00:07:07,840
or making use of burp suites jython

175
00:07:07,840 --> 00:07:09,520
support

176
00:07:09,520 --> 00:07:13,280
and importing python packages to

177
00:07:13,280 --> 00:07:15,199
create additional functionality for the

178
00:07:15,199 --> 00:07:17,840
extension itself

179
00:07:21,039 --> 00:07:25,039
what is aura intruder

180
00:07:25,280 --> 00:07:28,319
so the tldr of or intruder is

181
00:07:28,319 --> 00:07:30,800
you send an intruder request

182
00:07:30,800 --> 00:07:32,960
parse the response

183
00:07:32,960 --> 00:07:36,000
and automate discovery

184
00:07:36,000 --> 00:07:37,759
in more detail

185
00:07:37,759 --> 00:07:39,199
what happens is

186
00:07:39,199 --> 00:07:42,400
a burp suite extension

187
00:07:42,400 --> 00:07:44,319
this burp suite extension automates

188
00:07:44,319 --> 00:07:47,280
object data leak discovery via the aura

189
00:07:47,280 --> 00:07:49,360
framework recon

190
00:07:49,360 --> 00:07:52,479
which includes standard object discovery

191
00:07:52,479 --> 00:07:54,720
custom object discovery

192
00:07:54,720 --> 00:07:57,280
and public file discovery

193
00:07:57,280 --> 00:07:58,560
and

194
00:07:58,560 --> 00:08:02,960
if public files are accessible

195
00:08:02,960 --> 00:08:03,759
this

196
00:08:03,759 --> 00:08:06,000
burp suite extension will auto magically

197
00:08:06,000 --> 00:08:08,960
download all public files

198
00:08:08,960 --> 00:08:10,479
after you

199
00:08:10,479 --> 00:08:14,878
have provided a json response

200
00:08:15,759 --> 00:08:18,960
using burp suites api with python

201
00:08:18,960 --> 00:08:22,080
we're importing several different

202
00:08:22,080 --> 00:08:24,080
modules here

203
00:08:24,080 --> 00:08:26,160
including interfaces that implement

204
00:08:26,160 --> 00:08:27,759
additional functionality

205
00:08:27,759 --> 00:08:31,280
and gui components

206
00:08:31,280 --> 00:08:34,640
there are two standard python

207
00:08:34,640 --> 00:08:37,919
modules that we are also importing for

208
00:08:37,919 --> 00:08:40,559
payload processing purposes and

209
00:08:40,559 --> 00:08:43,120
requests

210
00:08:43,120 --> 00:08:47,760
these include json url lib3

211
00:08:50,480 --> 00:08:52,560
city data to burp suite

212
00:08:52,560 --> 00:08:55,360
one of the core functionalities for

213
00:08:55,360 --> 00:08:58,480
aura intruder is being able to see the

214
00:08:58,480 --> 00:09:00,800
standard object list

215
00:09:00,800 --> 00:09:01,680
to

216
00:09:01,680 --> 00:09:04,560
burp to the burp payload generator and

217
00:09:04,560 --> 00:09:06,480
this is how we're automating

218
00:09:06,480 --> 00:09:09,279
discovery

219
00:09:09,279 --> 00:09:10,640
so

220
00:09:10,640 --> 00:09:13,839
as you can see with this for loop

221
00:09:13,839 --> 00:09:15,440
after

222
00:09:15,440 --> 00:09:17,920
the text file is opened

223
00:09:17,920 --> 00:09:20,080
it is going through every line

224
00:09:20,080 --> 00:09:22,399
because every line's a payload

225
00:09:22,399 --> 00:09:23,440
um

226
00:09:23,440 --> 00:09:25,279
well every line's a standard object that

227
00:09:25,279 --> 00:09:29,120
is being added to the payload

228
00:09:29,120 --> 00:09:30,560
so that we don't have to manually go

229
00:09:30,560 --> 00:09:34,080
through every standard object case

230
00:09:34,080 --> 00:09:35,519
and insert it

231
00:09:35,519 --> 00:09:38,399
into intruder

232
00:09:38,880 --> 00:09:40,800
and uh one of the interesting things to

233
00:09:40,800 --> 00:09:42,480
note here is that

234
00:09:42,480 --> 00:09:45,839
the payloads array is appending a byte

235
00:09:45,839 --> 00:09:47,360
array

236
00:09:47,360 --> 00:09:49,120
that single payload is stripping the new

237
00:09:49,120 --> 00:09:51,839
line character

238
00:09:52,240 --> 00:09:53,680
um yeah i just thought it was

239
00:09:53,680 --> 00:09:54,880
interesting that

240
00:09:54,880 --> 00:09:57,600
payloads are converted to byte arrays

241
00:09:57,600 --> 00:10:00,000
and burp

242
00:10:01,920 --> 00:10:04,000
payload generators so this is where the

243
00:10:04,000 --> 00:10:06,800
magic happens as far as

244
00:10:06,800 --> 00:10:09,519
like parsing payloads and

245
00:10:09,519 --> 00:10:12,560
making their requests

246
00:10:13,200 --> 00:10:14,560
um

247
00:10:14,560 --> 00:10:18,959
so once the

248
00:10:18,959 --> 00:10:22,320
function the j button is clicked

249
00:10:22,320 --> 00:10:24,399
and the load object payloads function is

250
00:10:24,399 --> 00:10:27,519
called this class will handle

251
00:10:27,519 --> 00:10:30,680
the payloads

252
00:10:33,200 --> 00:10:36,640
custom functionality

253
00:10:38,079 --> 00:10:39,440
so

254
00:10:39,440 --> 00:10:41,360
one of the many things python is good at

255
00:10:41,360 --> 00:10:44,240
is prototyping functionalities pretty

256
00:10:44,240 --> 00:10:45,680
quickly

257
00:10:45,680 --> 00:10:47,040
so

258
00:10:47,040 --> 00:10:48,800
i noticed that sometimes attachments

259
00:10:48,800 --> 00:10:51,519
could be downloaded

260
00:10:51,519 --> 00:10:54,000
as a guest user like public attachments

261
00:10:54,000 --> 00:10:56,320
but i wanted a way to enumerate all

262
00:10:56,320 --> 00:10:58,640
available public attachments by the

263
00:10:58,640 --> 00:11:01,839
unique id that was generated so

264
00:11:01,839 --> 00:11:03,519
what i did here

265
00:11:03,519 --> 00:11:05,279
was

266
00:11:05,279 --> 00:11:07,440
it ray over at json

267
00:11:07,440 --> 00:11:10,399
response that had all the file public

268
00:11:10,399 --> 00:11:12,560
file ids that were accessible to a guest

269
00:11:12,560 --> 00:11:13,680
user

270
00:11:13,680 --> 00:11:14,800
and

271
00:11:14,800 --> 00:11:15,760
went

272
00:11:15,760 --> 00:11:18,959
through all those id ids with a for loop

273
00:11:18,959 --> 00:11:22,000
using url lib3 sent a request out and

274
00:11:22,000 --> 00:11:23,600
downloaded

275
00:11:23,600 --> 00:11:27,120
the files that existed to a directory

276
00:11:27,120 --> 00:11:30,720
and this worked this works pretty well

277
00:11:30,720 --> 00:11:32,320
it all depends on the environment though

278
00:11:32,320 --> 00:11:33,360
if um

279
00:11:33,360 --> 00:11:35,519
what attachments are public

280
00:11:35,519 --> 00:11:38,480
to a guest user

281
00:11:40,480 --> 00:11:42,320
now that we covered a lot of the

282
00:11:42,320 --> 00:11:46,560
technical pieces of the aura

283
00:11:46,560 --> 00:11:48,720
intruder extension

284
00:11:48,720 --> 00:11:50,480
let's go over

285
00:11:50,480 --> 00:11:53,279
how to install extensions with burp this

286
00:11:53,279 --> 00:11:54,959
is mostly for anyone that hasn't

287
00:11:54,959 --> 00:11:56,720
installed an extension

288
00:11:56,720 --> 00:11:59,600
that wasn't from the suite

289
00:11:59,600 --> 00:12:01,760
marketplace

290
00:12:01,760 --> 00:12:02,720
um

291
00:12:02,720 --> 00:12:04,480
so

292
00:12:04,480 --> 00:12:06,320
what you do is you go to the extensions

293
00:12:06,320 --> 00:12:09,120
tab and you add the extension from

294
00:12:09,120 --> 00:12:10,959
source

295
00:12:10,959 --> 00:12:14,160
and then you select the extension type

296
00:12:14,160 --> 00:12:15,920
and then in this case it's python and

297
00:12:15,920 --> 00:12:17,279
then

298
00:12:17,279 --> 00:12:18,639
um

299
00:12:18,639 --> 00:12:20,160
the main file that

300
00:12:20,160 --> 00:12:22,959
loads the extension is uh

301
00:12:22,959 --> 00:12:26,560
salesforce intruder.pie

302
00:12:28,720 --> 00:12:30,800
please note that

303
00:12:30,800 --> 00:12:33,279
salesforce is not in scope

304
00:12:33,279 --> 00:12:35,600
for the ping identity

305
00:12:35,600 --> 00:12:37,200
bug bounty program

306
00:12:37,200 --> 00:12:39,200
so we

307
00:12:39,200 --> 00:12:40,959
please check the program scope to ensure

308
00:12:40,959 --> 00:12:44,320
you get rewarded for your hard work

309
00:12:44,320 --> 00:12:45,920
it's always a good

310
00:12:45,920 --> 00:12:48,000
reminder to double check

311
00:12:48,000 --> 00:12:49,600
or triple check

312
00:12:49,600 --> 00:12:52,240
bug bounty program policies

313
00:12:52,240 --> 00:12:54,160
because we want you to get rewarded and

314
00:12:54,160 --> 00:12:56,079
nobody wants that awkward moment where

315
00:12:56,079 --> 00:12:58,800
you're like oh no i have to mark this as

316
00:12:58,800 --> 00:13:01,519
an informational or

317
00:13:01,519 --> 00:13:03,440
i'll escape

318
00:13:03,440 --> 00:13:06,760
so yeah

319
00:13:09,120 --> 00:13:11,600
all right

320
00:13:11,600 --> 00:13:15,200
now we can get to the fun stuff

321
00:13:15,200 --> 00:13:17,600
and

322
00:13:18,160 --> 00:13:20,560
i'm going to

323
00:13:20,560 --> 00:13:23,760
open my handy dandy herb suite community

324
00:13:23,760 --> 00:13:26,160
edition

325
00:13:29,600 --> 00:13:31,200
and

326
00:13:31,200 --> 00:13:33,519
there it is

327
00:13:33,519 --> 00:13:34,880
so

328
00:13:34,880 --> 00:13:37,519
starting off

329
00:13:37,519 --> 00:13:39,279
let's just go through

330
00:13:39,279 --> 00:13:40,480
um

331
00:13:40,480 --> 00:13:43,360
how to set up a extension from source

332
00:13:43,360 --> 00:13:46,000
for those that haven't done it before

333
00:13:46,000 --> 00:13:47,040
uh

334
00:13:47,040 --> 00:13:48,639
i'll just remove this

335
00:13:48,639 --> 00:13:50,240
yes

336
00:13:50,240 --> 00:13:52,800
um so when you're setting up an

337
00:13:52,800 --> 00:13:55,040
extension from source

338
00:13:55,040 --> 00:13:57,839
you click on add

339
00:13:57,839 --> 00:14:01,360
which is under the extender tab

340
00:14:01,680 --> 00:14:03,920
the extension type for this this

341
00:14:03,920 --> 00:14:07,120
extension is python

342
00:14:07,360 --> 00:14:09,519
and

343
00:14:09,519 --> 00:14:13,839
i'm going to select or intruder.pi

344
00:14:13,839 --> 00:14:15,440
because that's the main file that loads

345
00:14:15,440 --> 00:14:17,440
all the components

346
00:14:17,440 --> 00:14:20,320
um i would also like to know that

347
00:14:20,320 --> 00:14:22,639
for python extensions you need a jython

348
00:14:22,639 --> 00:14:25,040
jdk

349
00:14:25,040 --> 00:14:28,160
so everything is good to go between burp

350
00:14:28,160 --> 00:14:31,399
and python

351
00:14:32,560 --> 00:14:35,920
now after i click next

352
00:14:35,920 --> 00:14:38,399
the extension is loaded

353
00:14:38,399 --> 00:14:41,600
i can close this window

354
00:14:41,839 --> 00:14:43,760
you can see the extension loaded under

355
00:14:43,760 --> 00:14:46,800
the extender in the extender window

356
00:14:46,800 --> 00:14:49,680
under extensions

357
00:14:49,760 --> 00:14:51,680
if i

358
00:14:51,680 --> 00:14:53,600
look at the top right of my screen you

359
00:14:53,600 --> 00:14:55,680
can see the aura

360
00:14:55,680 --> 00:14:58,320
intruder tab this is what that i tab

361
00:14:58,320 --> 00:15:00,000
interface is for

362
00:15:00,000 --> 00:15:02,639
just for tabs who would a new

363
00:15:02,639 --> 00:15:04,320
so if i click on

364
00:15:04,320 --> 00:15:06,079
or intruder

365
00:15:06,079 --> 00:15:09,440
usually the first function that i run is

366
00:15:09,440 --> 00:15:13,120
salesforce object recon so if i click on

367
00:15:13,120 --> 00:15:16,560
salesforce object recon

368
00:15:17,519 --> 00:15:19,600
and i go to

369
00:15:19,600 --> 00:15:20,880
the

370
00:15:20,880 --> 00:15:22,800
proxy

371
00:15:22,800 --> 00:15:25,040
i've already proxied a salesforce

372
00:15:25,040 --> 00:15:27,120
request that is from

373
00:15:27,120 --> 00:15:28,079
the

374
00:15:28,079 --> 00:15:31,920
ping identity support portal

375
00:15:32,399 --> 00:15:33,440
and

376
00:15:33,440 --> 00:15:35,040
i am

377
00:15:35,040 --> 00:15:38,839
this request is as a guest user so

378
00:15:38,839 --> 00:15:41,120
only the objects that are visible to

379
00:15:41,120 --> 00:15:44,880
guest users will be viewable

380
00:15:44,880 --> 00:15:47,360
when i use this tool

381
00:15:47,360 --> 00:15:48,880
so

382
00:15:48,880 --> 00:15:52,839
as you can see there's a giant post body

383
00:15:52,839 --> 00:15:56,320
message which is um basically a json

384
00:15:56,320 --> 00:15:58,720
object

385
00:15:59,279 --> 00:16:01,920
and what i usually do is

386
00:16:01,920 --> 00:16:05,920
url decode the this but

387
00:16:06,560 --> 00:16:08,000
i don't really need to do that right now

388
00:16:08,000 --> 00:16:09,759
but if i'm curious if

389
00:16:09,759 --> 00:16:11,440
i'm making sure like the objects are

390
00:16:11,440 --> 00:16:12,480
switching

391
00:16:12,480 --> 00:16:15,680
and stuff like that i'll url decode this

392
00:16:15,680 --> 00:16:17,440
giant blob

393
00:16:17,440 --> 00:16:19,440
of text

394
00:16:19,440 --> 00:16:22,240
um what we need to keep

395
00:16:22,240 --> 00:16:25,759
is the aura token which is down here

396
00:16:25,759 --> 00:16:29,759
and the or context or

397
00:16:29,759 --> 00:16:32,000
if we don't keep it then salesforce is

398
00:16:32,000 --> 00:16:33,519
like what the french toast are you doing

399
00:16:33,519 --> 00:16:35,360
man

400
00:16:35,360 --> 00:16:38,079
um so

401
00:16:38,560 --> 00:16:40,560
i'm going to copy

402
00:16:40,560 --> 00:16:42,240
this

403
00:16:42,240 --> 00:16:45,120
and actually i'm not going to copy this

404
00:16:45,120 --> 00:16:47,279
what the friendship toast am i doing i'm

405
00:16:47,279 --> 00:16:50,920
going to delete this

406
00:16:51,680 --> 00:16:55,199
um and send it to intruder

407
00:16:57,199 --> 00:16:58,880
and i already have

408
00:16:58,880 --> 00:17:00,399
one actually no this is the

409
00:17:00,399 --> 00:17:03,279
pre-populated one

410
00:17:03,440 --> 00:17:05,520
so if you control if you use control a

411
00:17:05,520 --> 00:17:09,039
to highlight all the text you can clear

412
00:17:09,039 --> 00:17:11,359
the pre-populated payload

413
00:17:11,359 --> 00:17:13,119
targets

414
00:17:13,119 --> 00:17:14,720
um

415
00:17:14,720 --> 00:17:17,520
the only place that we need to add a

416
00:17:17,520 --> 00:17:20,880
marker is the message parameter

417
00:17:20,880 --> 00:17:23,919
for our aura intruder

418
00:17:23,919 --> 00:17:25,039
now

419
00:17:25,039 --> 00:17:26,640
since we were to click the button for or

420
00:17:26,640 --> 00:17:28,960
intruder the recon payload is already

421
00:17:28,960 --> 00:17:31,919
loaded so all we need to do is start the

422
00:17:31,919 --> 00:17:33,280
attack

423
00:17:33,280 --> 00:17:33,850
after

424
00:17:33,850 --> 00:17:35,919
[Music]

425
00:17:35,919 --> 00:17:36,720
we

426
00:17:36,720 --> 00:17:39,120
select extension generated

427
00:17:39,120 --> 00:17:40,880
payload type

428
00:17:40,880 --> 00:17:43,360
with the extension payload generator

429
00:17:43,360 --> 00:17:46,760
aura payloads

430
00:17:47,280 --> 00:17:50,559
and if i click start attack now

431
00:17:50,559 --> 00:17:54,160
it should be two requests

432
00:17:54,640 --> 00:17:56,960
um

433
00:17:57,679 --> 00:17:59,840
well i try to do it i tried to pull a

434
00:17:59,840 --> 00:18:01,280
houdini

435
00:18:01,280 --> 00:18:03,520
for some reason that was weird

436
00:18:03,520 --> 00:18:05,840
um

437
00:18:08,000 --> 00:18:09,280
yeah so

438
00:18:09,280 --> 00:18:12,720
you can see there's two requests

439
00:18:12,880 --> 00:18:17,280
and this is the one with the payload

440
00:18:18,960 --> 00:18:21,200
now

441
00:18:21,520 --> 00:18:23,918
um

442
00:18:24,000 --> 00:18:26,720
let's actually go over the message

443
00:18:26,720 --> 00:18:29,760
payload because this is what

444
00:18:29,760 --> 00:18:31,520
returns a configuration for the

445
00:18:31,520 --> 00:18:35,120
environment um it shows the

446
00:18:35,120 --> 00:18:37,679
all the objects that are that are

447
00:18:37,679 --> 00:18:39,039
public

448
00:18:39,039 --> 00:18:41,440
to guest users

449
00:18:41,440 --> 00:18:43,760
so now if i go to

450
00:18:43,760 --> 00:18:46,320
decoder

451
00:18:47,840 --> 00:18:48,430
you can see

452
00:18:48,430 --> 00:18:50,160
[Music]

453
00:18:50,160 --> 00:18:51,120
that

454
00:18:51,120 --> 00:18:54,799
it's actually sending a request to the

455
00:18:54,799 --> 00:18:57,840
host config

456
00:18:58,000 --> 00:19:01,520
controller which then returns the

457
00:19:01,520 --> 00:19:04,240
all the components that are

458
00:19:04,240 --> 00:19:05,520
viewable to

459
00:19:05,520 --> 00:19:06,799
this

460
00:19:06,799 --> 00:19:10,600
to this guest user

461
00:19:11,120 --> 00:19:15,199
all right so let's go back to

462
00:19:15,600 --> 00:19:16,400
the

463
00:19:16,400 --> 00:19:18,720
um

464
00:19:18,799 --> 00:19:20,000
request

465
00:19:20,000 --> 00:19:23,360
and review the response

466
00:19:23,360 --> 00:19:25,200
so

467
00:19:25,200 --> 00:19:27,200
it doesn't take too much scrolling to

468
00:19:27,200 --> 00:19:30,880
see where the objects start

469
00:19:31,200 --> 00:19:34,960
so the api names to key prefixes

470
00:19:34,960 --> 00:19:37,039
json list here

471
00:19:37,039 --> 00:19:39,840
or object

472
00:19:39,840 --> 00:19:41,440
it'll list out

473
00:19:41,440 --> 00:19:43,200
all the standard objects as well as

474
00:19:43,200 --> 00:19:46,720
custom objects that are viewable

475
00:19:48,880 --> 00:19:51,360
and as you can see there's quite a few

476
00:19:51,360 --> 00:19:52,720
so we don't have to go through all that

477
00:19:52,720 --> 00:19:54,960
list but

478
00:19:54,960 --> 00:19:57,760
what you would do ideally

479
00:19:57,760 --> 00:20:01,120
is copy this json

480
00:20:01,520 --> 00:20:03,440
and parse it

481
00:20:03,440 --> 00:20:07,039
to get the custom objects out of it

482
00:20:07,039 --> 00:20:08,080
so

483
00:20:08,080 --> 00:20:09,840
i've already done that

484
00:20:09,840 --> 00:20:11,840
and i'm going to show you what how that

485
00:20:11,840 --> 00:20:14,158
works

486
00:20:16,400 --> 00:20:19,039
if i go back to aura intruder

487
00:20:19,039 --> 00:20:20,720
and click

488
00:20:20,720 --> 00:20:24,000
get custom objects

489
00:20:25,280 --> 00:20:26,799
and go back to

490
00:20:26,799 --> 00:20:29,360
extender

491
00:20:29,679 --> 00:20:32,880
after clicking find standard objects

492
00:20:32,880 --> 00:20:34,640
the results will be printed to the burp

493
00:20:34,640 --> 00:20:36,880
suite ui

494
00:20:36,880 --> 00:20:39,039
as you can see here there's three custom

495
00:20:39,039 --> 00:20:41,360
objects that are indicated by the

496
00:20:41,360 --> 00:20:43,200
underscore underscore c

497
00:20:43,200 --> 00:20:47,159
that's appended to the end

498
00:20:48,640 --> 00:20:51,760
alrighty let's review the get salesforce

499
00:20:51,760 --> 00:20:54,080
standard object data feature

500
00:20:54,080 --> 00:20:57,200
after clicking the ginormous button

501
00:20:57,200 --> 00:20:59,120
the

502
00:20:59,120 --> 00:21:01,360
payload generator will then be populated

503
00:21:01,360 --> 00:21:06,880
with all 1096 salesforce objects

504
00:21:06,880 --> 00:21:09,679
that are standard

505
00:21:11,280 --> 00:21:13,440
then we would go to intruder and start

506
00:21:13,440 --> 00:21:16,799
the attack i already have a intruder

507
00:21:16,799 --> 00:21:19,039
instance running

508
00:21:19,039 --> 00:21:21,280
with these requests because i figured i

509
00:21:21,280 --> 00:21:22,559
would get

510
00:21:22,559 --> 00:21:25,280
rate limited

511
00:21:25,440 --> 00:21:27,280
which i'm pretty sure i did

512
00:21:27,280 --> 00:21:31,799
um because it's only at 5 16.

513
00:21:32,360 --> 00:21:36,240
1096. this doesn't usually happen

514
00:21:36,240 --> 00:21:38,960
when i'm using

515
00:21:39,440 --> 00:21:40,880
a vpn

516
00:21:40,880 --> 00:21:43,039
so

517
00:21:43,039 --> 00:21:45,360
it's good to note uh you should probably

518
00:21:45,360 --> 00:21:47,360
use like uh some sort of vpn when doing

519
00:21:47,360 --> 00:21:48,960
this so you don't get sent

520
00:21:48,960 --> 00:21:51,840
or added to the list of

521
00:21:51,840 --> 00:21:55,039
hey block this ip

522
00:21:55,440 --> 00:21:56,799
anyways

523
00:21:56,799 --> 00:21:58,320
i guess i'll find out if that happens to

524
00:21:58,320 --> 00:22:00,400
me later

525
00:22:00,400 --> 00:22:02,799
um

526
00:22:03,200 --> 00:22:04,320
when

527
00:22:04,320 --> 00:22:06,240
this is sending requests

528
00:22:06,240 --> 00:22:07,280
uh

529
00:22:07,280 --> 00:22:09,600
generally the

530
00:22:09,600 --> 00:22:11,600
objects that

531
00:22:11,600 --> 00:22:12,559
are

532
00:22:12,559 --> 00:22:16,158
empty will be around 2000

533
00:22:17,679 --> 00:22:18,400
but

534
00:22:18,400 --> 00:22:20,400
you can tell when it's working when you

535
00:22:20,400 --> 00:22:23,600
get the state success

536
00:22:23,600 --> 00:22:27,039
so like this object

537
00:22:27,039 --> 00:22:30,158
has no data

538
00:22:31,760 --> 00:22:32,640
in it

539
00:22:32,640 --> 00:22:34,159
and

540
00:22:34,159 --> 00:22:37,360
let's see if we can see what the name is

541
00:22:37,360 --> 00:22:39,679
so this is a event

542
00:22:39,679 --> 00:22:44,159
event um our accepted event relation

543
00:22:44,240 --> 00:22:47,200
all right so

544
00:22:47,200 --> 00:22:51,480
let's find one that has data

545
00:22:54,000 --> 00:22:55,039
all right

546
00:22:55,039 --> 00:22:56,799
so

547
00:22:56,799 --> 00:22:59,120
when an object has data

548
00:22:59,120 --> 00:23:00,400
in it

549
00:23:00,400 --> 00:23:02,880
it'll be around

550
00:23:02,880 --> 00:23:04,480
this amount

551
00:23:04,480 --> 00:23:06,240
um and it'll be really obvious the

552
00:23:06,240 --> 00:23:10,159
length attribute will be like way higher

553
00:23:10,159 --> 00:23:10,420
so

554
00:23:10,420 --> 00:23:13,529
[Music]

555
00:23:14,400 --> 00:23:17,200
this is

556
00:23:17,440 --> 00:23:19,919
the calendar object

557
00:23:19,919 --> 00:23:21,120
and

558
00:23:21,120 --> 00:23:23,280
in the response you'll see

559
00:23:23,280 --> 00:23:25,360
the ids of

560
00:23:25,360 --> 00:23:26,960
the calendars

561
00:23:26,960 --> 00:23:27,919
um

562
00:23:27,919 --> 00:23:29,280
i haven't found a way to exploit the

563
00:23:29,280 --> 00:23:32,320
calendar object yet

564
00:23:32,480 --> 00:23:33,679
but

565
00:23:33,679 --> 00:23:35,600
you can tell there's a ton of different

566
00:23:35,600 --> 00:23:38,399
records in here

567
00:23:39,440 --> 00:23:40,320
um

568
00:23:40,320 --> 00:23:42,880
the other object that we'll

569
00:23:42,880 --> 00:23:45,520
we will be

570
00:23:45,840 --> 00:23:50,520
messing with is the

571
00:23:51,039 --> 00:23:52,880
see

572
00:23:52,880 --> 00:23:54,799
content document

573
00:23:54,799 --> 00:23:57,279
yep okay so this is a content document

574
00:23:57,279 --> 00:23:59,840
object

575
00:23:59,840 --> 00:24:01,360
and

576
00:24:01,360 --> 00:24:03,600
so

577
00:24:03,600 --> 00:24:04,880
when i was talking about the file

578
00:24:04,880 --> 00:24:07,279
endpoints earlier this is

579
00:24:07,279 --> 00:24:08,400
why

580
00:24:08,400 --> 00:24:10,720
the content document object will have

581
00:24:10,720 --> 00:24:13,279
the titles of the

582
00:24:13,279 --> 00:24:14,400
the

583
00:24:14,400 --> 00:24:15,919
attachments

584
00:24:15,919 --> 00:24:17,360
and documents

585
00:24:17,360 --> 00:24:20,159
as well as the id

586
00:24:20,159 --> 00:24:22,320
this id

587
00:24:22,320 --> 00:24:23,760
is the id

588
00:24:23,760 --> 00:24:25,039
that

589
00:24:25,039 --> 00:24:29,360
will allow you to download the file

590
00:24:29,360 --> 00:24:31,440
and that's only if

591
00:24:31,440 --> 00:24:35,360
if a guest user can't download the file

592
00:24:35,360 --> 00:24:37,360
um

593
00:24:37,360 --> 00:24:39,200
so i got this to work a couple times and

594
00:24:39,200 --> 00:24:41,520
then i think

595
00:24:41,520 --> 00:24:44,240
the salesforce admins shut the door on

596
00:24:44,240 --> 00:24:45,360
that

597
00:24:45,360 --> 00:24:48,000
they probably saw the requests and

598
00:24:48,000 --> 00:24:50,480
figured this does not look like it's

599
00:24:50,480 --> 00:24:53,200
supposed to happen

600
00:24:53,279 --> 00:24:57,200
um but we can try it out and see

601
00:24:57,200 --> 00:24:58,480
if

602
00:24:58,480 --> 00:25:01,840
it's still possible

603
00:25:03,760 --> 00:25:05,440
so yeah all you do

604
00:25:05,440 --> 00:25:07,840
is you save that response from that from

605
00:25:07,840 --> 00:25:09,919
the object

606
00:25:09,919 --> 00:25:12,000
um

607
00:25:12,000 --> 00:25:15,520
and click download files from response

608
00:25:15,520 --> 00:25:18,639
and if it's working

609
00:25:19,120 --> 00:25:21,600
it will

610
00:25:23,520 --> 00:25:25,600
yeah i don't have the file

611
00:25:25,600 --> 00:25:28,918
let's see

612
00:25:29,440 --> 00:25:32,320
i can

613
00:25:32,320 --> 00:25:34,080
well this is a good

614
00:25:34,080 --> 00:25:36,240
indicator of showing how easy it is to

615
00:25:36,240 --> 00:25:37,840
debug

616
00:25:37,840 --> 00:25:39,200
an extension

617
00:25:39,200 --> 00:25:40,720
when you have when you're logging

618
00:25:40,720 --> 00:25:45,120
exceptions so i can try to

619
00:25:46,640 --> 00:25:50,480
live debugging here we go

620
00:25:52,000 --> 00:25:56,200
so if i save all this

621
00:25:57,840 --> 00:26:00,080
and

622
00:26:01,840 --> 00:26:06,000
holy moly there's a lot of stuff

623
00:26:09,679 --> 00:26:10,480
whoa

624
00:26:10,480 --> 00:26:11,679
all right i think we got to the end

625
00:26:11,679 --> 00:26:13,760
finally

626
00:26:13,760 --> 00:26:17,760
is this the end nope it's not the end

627
00:26:20,320 --> 00:26:22,400
there should be a closing

628
00:26:22,400 --> 00:26:25,840
square bracket

629
00:26:27,919 --> 00:26:30,240
wait

630
00:26:32,240 --> 00:26:35,360
pretty sure there was one

631
00:26:37,039 --> 00:26:39,520
here it is okay

632
00:26:39,520 --> 00:26:42,480
now we copy this

633
00:26:42,480 --> 00:26:44,799
and

634
00:26:45,360 --> 00:26:48,240
let me save this as the file that it

635
00:26:48,240 --> 00:26:51,279
wants to be saved as

636
00:26:51,919 --> 00:26:55,840
um and that was

637
00:26:59,919 --> 00:27:01,360
extended

638
00:27:01,360 --> 00:27:05,559
file directory files jsonresponse.json

639
00:27:07,120 --> 00:27:10,719
so now if i save it

640
00:27:12,000 --> 00:27:12,520
to

641
00:27:12,520 --> 00:27:13,840
[Music]

642
00:27:13,840 --> 00:27:16,559
or intruder

643
00:27:16,559 --> 00:27:18,799
files

644
00:27:18,799 --> 00:27:21,799
json

645
00:27:26,960 --> 00:27:28,799
save

646
00:27:28,799 --> 00:27:32,520
see what happens now

647
00:27:36,480 --> 00:27:38,559
extender

648
00:27:38,559 --> 00:27:41,279
extra line

649
00:27:42,240 --> 00:27:43,919
and this is where

650
00:27:43,919 --> 00:27:46,000
all of

651
00:27:46,000 --> 00:27:49,840
the oh i see the problem

652
00:27:49,840 --> 00:27:50,720
so

653
00:27:50,720 --> 00:27:51,919
the

654
00:27:51,919 --> 00:27:54,559
result field

655
00:27:54,559 --> 00:27:56,159
is all that you want

656
00:27:56,159 --> 00:27:58,399
um

657
00:27:59,919 --> 00:28:03,840
so that goes all the way down to

658
00:28:08,159 --> 00:28:09,120
this

659
00:28:09,120 --> 00:28:11,919
bracket right here

660
00:28:11,919 --> 00:28:14,799
before error

661
00:28:15,200 --> 00:28:17,279
anywho

662
00:28:17,279 --> 00:28:18,559
that

663
00:28:18,559 --> 00:28:21,600
fixes the issue

664
00:28:22,000 --> 00:28:23,360
now

665
00:28:23,360 --> 00:28:26,799
the only other thing you would need to

666
00:28:26,799 --> 00:28:28,320
see if you could

667
00:28:28,320 --> 00:28:30,399
download files

668
00:28:30,399 --> 00:28:32,640
is replace the host

669
00:28:32,640 --> 00:28:34,559
in the python script

670
00:28:34,559 --> 00:28:37,200
i don't currently have a host

671
00:28:37,200 --> 00:28:40,799
um i'll show you what

672
00:28:40,799 --> 00:28:42,880
the

673
00:28:42,880 --> 00:28:46,960
request or the function does though

674
00:28:47,840 --> 00:28:50,159
so you click this download files from

675
00:28:50,159 --> 00:28:53,440
just from response

676
00:28:53,440 --> 00:28:57,320
and then in in extender

677
00:28:58,000 --> 00:29:00,000
it's working you won't get any errors

678
00:29:00,000 --> 00:29:03,039
like this um

679
00:29:03,039 --> 00:29:06,559
but this is using url lib3

680
00:29:06,559 --> 00:29:07,600
um

681
00:29:07,600 --> 00:29:09,760
that module's connection pool

682
00:29:09,760 --> 00:29:10,480
to

683
00:29:10,480 --> 00:29:14,080
send requests to the salesforce endpoint

684
00:29:14,080 --> 00:29:17,760
based on the unique ids

685
00:29:17,919 --> 00:29:20,240
and

686
00:29:21,840 --> 00:29:24,000
those files are

687
00:29:24,000 --> 00:29:25,279
going to be

688
00:29:25,279 --> 00:29:27,840
saved to the files directory

689
00:29:27,840 --> 00:29:30,880
and then from there you can

690
00:29:30,880 --> 00:29:33,200
tab through all the files and images to

691
00:29:33,200 --> 00:29:34,559
make sure there's nothing nothing

692
00:29:34,559 --> 00:29:36,240
sensitive being exposed in your

693
00:29:36,240 --> 00:29:39,799
salesforce environment

694
00:29:40,880 --> 00:29:42,320
all right

695
00:29:42,320 --> 00:29:45,679
and so that is it for

696
00:29:45,679 --> 00:29:46,880
the

697
00:29:46,880 --> 00:29:49,919
burp extension

698
00:29:50,080 --> 00:29:53,080
um

699
00:29:54,480 --> 00:29:56,960
thank you for attending my talk about

700
00:29:56,960 --> 00:29:59,279
salesforce object recon

701
00:29:59,279 --> 00:30:01,120
here are some additional resources if

702
00:30:01,120 --> 00:30:03,279
you're interested in

703
00:30:03,279 --> 00:30:05,760
more sales force related security

704
00:30:05,760 --> 00:30:06,880
research

705
00:30:06,880 --> 00:30:09,039
or if you would like to make a burp

706
00:30:09,039 --> 00:30:11,520
suite extension

707
00:30:11,520 --> 00:30:13,840
i will be available after

708
00:30:13,840 --> 00:30:15,679
the talk to answer any questions you

709
00:30:15,679 --> 00:30:18,080
might have i want to thank

710
00:30:18,080 --> 00:30:21,600
bug crowd for inviting me to

711
00:30:21,600 --> 00:30:23,840
the level up conference

712
00:30:23,840 --> 00:30:25,520
i've had a blast

713
00:30:25,520 --> 00:30:27,360
i also want to thank

714
00:30:27,360 --> 00:30:30,080
my team at ping identity for allowing me

715
00:30:30,080 --> 00:30:30,960
to

716
00:30:30,960 --> 00:30:32,480
present this

717
00:30:32,480 --> 00:30:33,840
here today

718
00:30:33,840 --> 00:30:36,720
thanks everyone have an awesome day

719
00:30:36,720 --> 00:30:39,039
sir how and why did you get started in

720
00:30:39,039 --> 00:30:41,440
research here

721
00:30:41,440 --> 00:30:42,640
um

722
00:30:42,640 --> 00:30:44,720
so i kind of like fell into

723
00:30:44,720 --> 00:30:47,760
uh security research um

724
00:30:47,760 --> 00:30:49,840
i always liked messing with computers

725
00:30:49,840 --> 00:30:52,000
growing up and then uh got into game

726
00:30:52,000 --> 00:30:53,440
development

727
00:30:53,440 --> 00:30:54,480
and

728
00:30:54,480 --> 00:30:55,360
um

729
00:30:55,360 --> 00:30:57,679
a researcher named ed overflow actually

730
00:30:57,679 --> 00:30:58,960
reached out to me

731
00:30:58,960 --> 00:31:01,840
about the gratipay

732
00:31:01,840 --> 00:31:05,440
hacker one program and i submitted a

733
00:31:05,440 --> 00:31:06,960
couple reports there and it was good

734
00:31:06,960 --> 00:31:08,720
experience

735
00:31:08,720 --> 00:31:10,399
and i liked the creativity that goes

736
00:31:10,399 --> 00:31:11,919
into hacking

737
00:31:11,919 --> 00:31:15,039
so from then on i was hooked and i knew

738
00:31:15,039 --> 00:31:16,960
that's what i wanted to do as a career

739
00:31:16,960 --> 00:31:18,640
um

740
00:31:18,640 --> 00:31:20,480
so yeah

741
00:31:20,480 --> 00:31:22,480
awesome so what would be your number one

742
00:31:22,480 --> 00:31:25,279
thing to do research

743
00:31:25,279 --> 00:31:26,399
um

744
00:31:26,399 --> 00:31:28,399
i think my number one tip to new

745
00:31:28,399 --> 00:31:31,360
researchers is um

746
00:31:31,360 --> 00:31:35,120
to not try to focus on

747
00:31:35,120 --> 00:31:38,399
like everything at once um because

748
00:31:38,399 --> 00:31:40,080
if you try to learn everything at once

749
00:31:40,080 --> 00:31:41,440
you're kind of like

750
00:31:41,440 --> 00:31:43,840
drinking out of a fire hose so to speak

751
00:31:43,840 --> 00:31:46,799
because there's so much data

752
00:31:46,799 --> 00:31:48,080
to research

753
00:31:48,080 --> 00:31:50,799
so if you focus on one

754
00:31:50,799 --> 00:31:54,320
area that you like a lot and

755
00:31:54,320 --> 00:31:56,960
get good at that one area you know over

756
00:31:56,960 --> 00:31:58,640
time

757
00:31:58,640 --> 00:31:59,840
you know another thing is that you're

758
00:31:59,840 --> 00:32:02,080
not going to be amazing at finding bugs

759
00:32:02,080 --> 00:32:04,159
like right away um it takes a lot of

760
00:32:04,159 --> 00:32:06,480
practice and uh you know you'll see you

761
00:32:06,480 --> 00:32:08,399
know people finding bugs and

762
00:32:08,399 --> 00:32:10,159
you're like wow like they're finding all

763
00:32:10,159 --> 00:32:11,919
this stuff what am i missing but like

764
00:32:11,919 --> 00:32:13,840
it'll just it'll come to you over time

765
00:32:13,840 --> 00:32:14,720
um

766
00:32:14,720 --> 00:32:16,720
after you know so like get a bit of

767
00:32:16,720 --> 00:32:17,600
study

768
00:32:17,600 --> 00:32:18,880
and uh

769
00:32:18,880 --> 00:32:22,159
you know you just have to keep at it

770
00:32:22,159 --> 00:32:24,000
great uh where did you learn about

771
00:32:24,000 --> 00:32:26,880
salesforce testing

772
00:32:26,880 --> 00:32:27,679
um

773
00:32:27,679 --> 00:32:28,720
i

774
00:32:28,720 --> 00:32:30,399
i learned from my um

775
00:32:30,399 --> 00:32:32,640
current boss arthur um

776
00:32:32,640 --> 00:32:33,919
so

777
00:32:33,919 --> 00:32:35,200
you know he pretty much asked me if i

778
00:32:35,200 --> 00:32:37,760
was willing to like research salesforce

779
00:32:37,760 --> 00:32:38,720
and

780
00:32:38,720 --> 00:32:40,240
um

781
00:32:40,240 --> 00:32:44,240
and uh like mainly focus on the pii data

782
00:32:44,240 --> 00:32:46,559
leaks that are involved

783
00:32:46,559 --> 00:32:49,360
naturally with the salesforce platform

784
00:32:49,360 --> 00:32:51,120
because you know you're dealing with a

785
00:32:51,120 --> 00:32:53,440
lot of business related data there

786
00:32:53,440 --> 00:32:54,960
and um

787
00:32:54,960 --> 00:32:56,960
so yeah arthur sent me a bunch of

788
00:32:56,960 --> 00:32:58,080
articles

789
00:32:58,080 --> 00:32:58,799
to

790
00:32:58,799 --> 00:33:01,440
read and um from there i just uh

791
00:33:01,440 --> 00:33:03,279
researched a bunch of other like topics

792
00:33:03,279 --> 00:33:05,120
that were related to

793
00:33:05,120 --> 00:33:07,600
salesforce and

794
00:33:07,600 --> 00:33:11,679
yeah and so that's all that is going

795
00:33:11,679 --> 00:33:14,000
into the talk that i'm giving

796
00:33:14,000 --> 00:33:16,720
at this conference

797
00:33:17,120 --> 00:33:19,679
um the tool looks really exciting i'm

798
00:33:19,679 --> 00:33:22,320
really keen to try it um is it being

799
00:33:22,320 --> 00:33:26,240
released and if so where can i find it

800
00:33:26,240 --> 00:33:29,519
yes it is absolutely being released at

801
00:33:29,519 --> 00:33:31,840
the ping identity github

802
00:33:31,840 --> 00:33:32,720
um

803
00:33:32,720 --> 00:33:34,880
publicly and uh

804
00:33:34,880 --> 00:33:37,360
i'll post a link like after you know

805
00:33:37,360 --> 00:33:39,919
after the talk is over

806
00:33:39,919 --> 00:33:41,360
and i'll probably tweet it out too you

807
00:33:41,360 --> 00:33:43,279
know all that good stuff

808
00:33:43,279 --> 00:33:44,080
all right

809
00:33:44,080 --> 00:33:46,080
um what is next for the tool and are you

810
00:33:46,080 --> 00:33:47,360
planning on implementing further

811
00:33:47,360 --> 00:33:50,240
features of functionality

812
00:33:50,240 --> 00:33:51,600
um

813
00:33:51,600 --> 00:33:53,840
yes i'm planning on implem implementing

814
00:33:53,840 --> 00:33:57,120
further features uh and functionality

815
00:33:57,120 --> 00:33:59,840
over time um just to make it

816
00:33:59,840 --> 00:34:01,519
uh i guess the workflow a little

817
00:34:01,519 --> 00:34:04,000
smoother and after i learned more about

818
00:34:04,000 --> 00:34:07,200
um how to create like gui's and burp

819
00:34:07,200 --> 00:34:08,079
suite

820
00:34:08,079 --> 00:34:10,159
um i could probably you know make some

821
00:34:10,159 --> 00:34:11,280
other

822
00:34:11,280 --> 00:34:12,239
like

823
00:34:12,239 --> 00:34:14,480
cool intuitive features

824
00:34:14,480 --> 00:34:17,040
uh for the extension

825
00:34:17,040 --> 00:34:19,199
great thanks so much for taking the time

826
00:34:19,199 --> 00:34:21,918
to present your talk today

827
00:34:21,918 --> 00:34:25,759
no problem thank you for having me

