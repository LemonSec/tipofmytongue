1
00:00:05,020 --> 00:00:12,160
[Music]

2
00:00:12,160 --> 00:00:13,599
now we're moving over to

3
00:00:13,599 --> 00:00:15,759
our to a presentation from brienne

4
00:00:15,759 --> 00:00:17,600
boland um

5
00:00:17,600 --> 00:00:20,400
it's called how to do chrome extension

6
00:00:20,400 --> 00:00:21,199
code reviews

7
00:00:21,199 --> 00:00:22,800
chrome extensions can access a lot of

8
00:00:22,800 --> 00:00:24,960
users data cookies and tokens downloads

9
00:00:24,960 --> 00:00:25,920
and anything you view

10
00:00:25,920 --> 00:00:29,599
in chrome just to name a few this makes

11
00:00:29,599 --> 00:00:31,359
fertile ground for bug bounties

12
00:00:31,359 --> 00:00:33,120
particularly as the chrome api scopes

13
00:00:33,120 --> 00:00:34,559
can be so broad that developers

14
00:00:34,559 --> 00:00:35,120
sometimes

15
00:00:35,120 --> 00:00:36,960
open the door to permissions they don't

16
00:00:36,960 --> 00:00:45,840
intend to grant

17
00:00:48,800 --> 00:00:51,120
hello level up and bug crowd folks happy

18
00:00:51,120 --> 00:00:52,079
late evening

19
00:00:52,079 --> 00:00:53,920
for the next 15 odd minutes i'm going to

20
00:00:53,920 --> 00:00:55,600
talk about a lesser known area of bug

21
00:00:55,600 --> 00:00:56,640
bounty hunting

22
00:00:56,640 --> 00:00:58,719
chrome extensions and i'll explain the

23
00:00:58,719 --> 00:01:00,079
steps i take at my job to do code

24
00:01:00,079 --> 00:01:03,440
reviews and assess risks in them

25
00:01:04,400 --> 00:01:07,119
i used to be an sre and when i was doing

26
00:01:07,119 --> 00:01:08,640
that job i developed an interest in the

27
00:01:08,640 --> 00:01:09,680
kind of threats

28
00:01:09,680 --> 00:01:11,040
that are hidden in areas of code that

29
00:01:11,040 --> 00:01:12,880
people think of less

30
00:01:12,880 --> 00:01:14,240
i now do application security

31
00:01:14,240 --> 00:01:16,240
engineering at salesforce i have been

32
00:01:16,240 --> 00:01:17,680
delighted in the course of my current

33
00:01:17,680 --> 00:01:19,040
job to get a sense of where the

34
00:01:19,040 --> 00:01:21,119
vulnerabilities are on chrome extensions

35
00:01:21,119 --> 00:01:22,400
as reviewing them as a need that comes

36
00:01:22,400 --> 00:01:27,040
up pretty often

37
00:01:27,040 --> 00:01:28,880
reviewing chrome extensions is part of a

38
00:01:28,880 --> 00:01:30,880
wider range of work that my team does

39
00:01:30,880 --> 00:01:32,799
we do vendor security reviews and

40
00:01:32,799 --> 00:01:34,479
extensions come up as part of that as

41
00:01:34,479 --> 00:01:36,079
companies often make extensions to work

42
00:01:36,079 --> 00:01:37,600
with their products

43
00:01:37,600 --> 00:01:39,360
like their web interface counterparts

44
00:01:39,360 --> 00:01:40,799
chrome extensions can also have lots of

45
00:01:40,799 --> 00:01:41,920
weird little corners that can hide

46
00:01:41,920 --> 00:01:43,759
vulnerabilities

47
00:01:43,759 --> 00:01:45,360
our criteria are a little bit different

48
00:01:45,360 --> 00:01:47,360
than an average individual should be

49
00:01:47,360 --> 00:01:48,960
but it's given me some insight into how

50
00:01:48,960 --> 00:01:50,240
chrome extensions can go a little

51
00:01:50,240 --> 00:01:51,360
haywire

52
00:01:51,360 --> 00:01:52,720
the good news is that what's bad for the

53
00:01:52,720 --> 00:01:54,240
end user is good for the bug bounty

54
00:01:54,240 --> 00:01:56,559
hunter

55
00:01:56,960 --> 00:01:58,320
so why focus on code review for

56
00:01:58,320 --> 00:02:00,320
extensions one

57
00:02:00,320 --> 00:02:03,600
because you can and two some companies

58
00:02:03,600 --> 00:02:05,040
do consider chrome extensions to be

59
00:02:05,040 --> 00:02:06,560
within the scope of their existing bug

60
00:02:06,560 --> 00:02:07,759
bounty programs

61
00:02:07,759 --> 00:02:09,360
and beyond that the chrome web store has

62
00:02:09,360 --> 00:02:10,560
its own program for reporting

63
00:02:10,560 --> 00:02:13,360
vulnerabilities

64
00:02:15,120 --> 00:02:17,440
why else do code review because of

65
00:02:17,440 --> 00:02:19,599
chrome's incredible market share

66
00:02:19,599 --> 00:02:21,120
extensions open up a really interesting

67
00:02:21,120 --> 00:02:23,680
attack surface according to my extremely

68
00:02:23,680 --> 00:02:26,000
cursory research on wikipedia

69
00:02:26,000 --> 00:02:28,560
chrome has approximately 63 of the usage

70
00:02:28,560 --> 00:02:29,840
share of all browsers

71
00:02:29,840 --> 00:02:31,760
so it's kind of everywhere and people

72
00:02:31,760 --> 00:02:34,160
who use chrome love extensions

73
00:02:34,160 --> 00:02:36,000
and why wouldn't they they're so useful

74
00:02:36,000 --> 00:02:38,640
what could possibly go wrong

75
00:02:38,640 --> 00:02:39,920
once they're installed they're just part

76
00:02:39,920 --> 00:02:41,920
of the browser so they're literally

77
00:02:41,920 --> 00:02:43,440
embedded in the client

78
00:02:43,440 --> 00:02:44,959
which can let them sidestep some of the

79
00:02:44,959 --> 00:02:46,640
safeguards an unaltered browser might

80
00:02:46,640 --> 00:02:48,480
offer via things like content security

81
00:02:48,480 --> 00:02:51,840
policy and course protections

82
00:02:51,920 --> 00:02:53,360
beyond that people often have alert

83
00:02:53,360 --> 00:02:54,959
fatigue and they don't think much of a

84
00:02:54,959 --> 00:02:55,840
warning like

85
00:02:55,840 --> 00:02:57,519
this extension can read and change all

86
00:02:57,519 --> 00:02:59,040
of the data on every web page that you

87
00:02:59,040 --> 00:03:00,480
visit

88
00:03:00,480 --> 00:03:02,239
it should be alarming but that warning

89
00:03:02,239 --> 00:03:03,599
applies for so many extensions that it

90
00:03:03,599 --> 00:03:07,040
becomes easy for people to ignore

91
00:03:07,440 --> 00:03:09,599
why else do code review because the code

92
00:03:09,599 --> 00:03:11,519
is written by humans

93
00:03:11,519 --> 00:03:13,360
now sometimes existing chrome extensions

94
00:03:13,360 --> 00:03:15,519
get bought or otherwise compromised and

95
00:03:15,519 --> 00:03:17,440
fine morally upstanding code gets

96
00:03:17,440 --> 00:03:19,599
replaced with malware

97
00:03:19,599 --> 00:03:21,120
but even when there isn't a bad actor on

98
00:03:21,120 --> 00:03:23,280
the scene you might find this hard to

99
00:03:23,280 --> 00:03:24,000
believe

100
00:03:24,000 --> 00:03:27,680
sometimes developers get a little sloppy

101
00:03:27,680 --> 00:03:29,040
i wouldn't call this their fault here

102
00:03:29,040 --> 00:03:30,720
not entirely but with broad scopes in

103
00:03:30,720 --> 00:03:31,760
limited time

104
00:03:31,760 --> 00:03:33,040
some messy things can end up in

105
00:03:33,040 --> 00:03:35,599
extensions

106
00:03:35,920 --> 00:03:38,239
and finally why code review because it's

107
00:03:38,239 --> 00:03:39,440
code

108
00:03:39,440 --> 00:03:41,440
and chrome extensions update themselves

109
00:03:41,440 --> 00:03:43,200
automatically on a timetable determined

110
00:03:43,200 --> 00:03:44,400
by the browser

111
00:03:44,400 --> 00:03:46,080
for context even the browser itself

112
00:03:46,080 --> 00:03:47,440
generally doesn't get automatically

113
00:03:47,440 --> 00:03:48,159
updated

114
00:03:48,159 --> 00:03:49,760
so you have third-party code nestled

115
00:03:49,760 --> 00:03:51,440
right in where the business happens

116
00:03:51,440 --> 00:03:53,280
and that third-party code can change

117
00:03:53,280 --> 00:03:54,879
with no warning at an undetermined

118
00:03:54,879 --> 00:03:55,599
cadence

119
00:03:55,599 --> 00:03:58,400
wow furthermore that third-party code

120
00:03:58,400 --> 00:04:00,000
has to make use of google's sometimes

121
00:04:00,000 --> 00:04:02,480
very broad chrome api scopes but we'll

122
00:04:02,480 --> 00:04:05,599
get into that in a few minutes

123
00:04:06,159 --> 00:04:08,799
before i sound too blamey i must say

124
00:04:08,799 --> 00:04:10,080
google is trying

125
00:04:10,080 --> 00:04:12,480
they are trying but permissions and

126
00:04:12,480 --> 00:04:14,080
scopes as i think we all probably

127
00:04:14,080 --> 00:04:16,238
know are one of the most weirdly tricky

128
00:04:16,238 --> 00:04:18,160
parts of building a system

129
00:04:18,160 --> 00:04:20,079
google still has a lot to do but they're

130
00:04:20,079 --> 00:04:22,240
working on it for instance

131
00:04:22,240 --> 00:04:23,680
last year google made some moves to

132
00:04:23,680 --> 00:04:25,680
bolster user security by making google

133
00:04:25,680 --> 00:04:27,040
scopes around gmail and g

134
00:04:27,040 --> 00:04:29,680
drive more granular will also require

135
00:04:29,680 --> 00:04:31,280
requiring developers using these scopes

136
00:04:31,280 --> 00:04:32,560
to use the smallest access to

137
00:04:32,560 --> 00:04:34,080
information possible

138
00:04:34,080 --> 00:04:37,120
this is useful it's not a panacea

139
00:04:37,120 --> 00:04:38,320
i would also argue they're still not

140
00:04:38,320 --> 00:04:39,759
extremely granular when it comes to the

141
00:04:39,759 --> 00:04:40,800
chrome api

142
00:04:40,800 --> 00:04:42,000
and how broad some of the permission

143
00:04:42,000 --> 00:04:44,320
scopes are at least not yet

144
00:04:44,320 --> 00:04:45,600
because of this there's still lots of

145
00:04:45,600 --> 00:04:46,960
interesting stuff to find which is where

146
00:04:46,960 --> 00:04:49,758
i hope you come in

147
00:04:50,160 --> 00:04:51,520
chrome extensions aren't the wild west

148
00:04:51,520 --> 00:04:52,720
they once were but there's still plenty

149
00:04:52,720 --> 00:04:57,600
of opportunity to find vulnerabilities

150
00:04:57,600 --> 00:04:58,800
i'll start with the short version of how

151
00:04:58,800 --> 00:05:00,160
i do code review and then we'll dive in

152
00:05:00,160 --> 00:05:02,720
deeper into specifics

153
00:05:02,720 --> 00:05:04,160
i start out by building a story about

154
00:05:04,160 --> 00:05:06,000
the extension i'm reviewing

155
00:05:06,000 --> 00:05:07,360
what does this extension say that it

156
00:05:07,360 --> 00:05:09,440
wants to do but what does it actually do

157
00:05:09,440 --> 00:05:10,639
and is that answer different than the

158
00:05:10,639 --> 00:05:11,840
first one

159
00:05:11,840 --> 00:05:12,960
what permissions does it need to

160
00:05:12,960 --> 00:05:15,199
accomplish its state admission and do

161
00:05:15,199 --> 00:05:16,479
the permissions or code make anything

162
00:05:16,479 --> 00:05:18,000
possible outside of that extension

163
00:05:18,000 --> 00:05:20,639
stated mission

164
00:05:22,240 --> 00:05:23,759
reviewing extensions generally takes

165
00:05:23,759 --> 00:05:25,199
three steps for me i'll walk through

166
00:05:25,199 --> 00:05:26,479
them from the most high level to the

167
00:05:26,479 --> 00:05:29,120
most detailed

168
00:05:29,600 --> 00:05:32,639
first i look it up on cr excavator this

169
00:05:32,639 --> 00:05:34,080
is a tool i use for the high level view

170
00:05:34,080 --> 00:05:35,680
of an extension

171
00:05:35,680 --> 00:05:37,039
it gives a score that's based on four

172
00:05:37,039 --> 00:05:39,360
metrics the most relevant of which to us

173
00:05:39,360 --> 00:05:40,720
are content security policy and

174
00:05:40,720 --> 00:05:42,720
permissions the other two are whether it

175
00:05:42,720 --> 00:05:44,400
depends on externally hosted javascript

176
00:05:44,400 --> 00:05:46,240
libraries and what the extension's web

177
00:05:46,240 --> 00:05:48,639
store score is

178
00:05:48,639 --> 00:05:49,840
and the question of content security

179
00:05:49,840 --> 00:05:51,600
policy is a good one to pursue too as an

180
00:05:51,600 --> 00:05:52,080
extension

181
00:05:52,080 --> 00:05:54,240
csp can override those set by the url

182
00:05:54,240 --> 00:05:56,240
the user is visiting

183
00:05:56,240 --> 00:05:58,080
i use this site to get the extension's

184
00:05:58,080 --> 00:05:59,840
aggregated score and see where cr

185
00:05:59,840 --> 00:06:01,440
excavator judges the risk to be as an

186
00:06:01,440 --> 00:06:02,880
early indicator

187
00:06:02,880 --> 00:06:04,160
you can peruse the code through cr

188
00:06:04,160 --> 00:06:05,759
excavator site it's one of the services

189
00:06:05,759 --> 00:06:06,000
it

190
00:06:06,000 --> 00:06:08,080
offers or you can use an extension like

191
00:06:08,080 --> 00:06:09,440
crx extractor

192
00:06:09,440 --> 00:06:10,880
downloader to get it locally which is

193
00:06:10,880 --> 00:06:13,600
what i tend to do

194
00:06:13,680 --> 00:06:17,039
after that i read the manifest.json file

195
00:06:17,039 --> 00:06:18,639
this is where i spend a lot of my time

196
00:06:18,639 --> 00:06:19,919
because it tells me a lot about what's

197
00:06:19,919 --> 00:06:21,360
possible

198
00:06:21,360 --> 00:06:23,440
these files can get long and intricate

199
00:06:23,440 --> 00:06:24,560
there are 56

200
00:06:24,560 --> 00:06:26,240
different top level fields that can be

201
00:06:26,240 --> 00:06:28,080
included however

202
00:06:28,080 --> 00:06:29,600
most of the extensions i see don't use a

203
00:06:29,600 --> 00:06:32,000
ton of those and actually only three are

204
00:06:32,000 --> 00:06:32,800
required

205
00:06:32,800 --> 00:06:34,479
and only four are marked in the docs as

206
00:06:34,479 --> 00:06:35,919
recommended

207
00:06:35,919 --> 00:06:38,000
that excludes content scripts though so

208
00:06:38,000 --> 00:06:39,520
pretty much all extensions have to go a

209
00:06:39,520 --> 00:06:40,800
bit beyond the minimum in order to have

210
00:06:40,800 --> 00:06:42,000
an extension that actually does

211
00:06:42,000 --> 00:06:43,600
something

212
00:06:43,600 --> 00:06:44,720
and i'll tell you if you're looking to

213
00:06:44,720 --> 00:06:46,080
dive deep into the weird corners of

214
00:06:46,080 --> 00:06:47,440
chrome extensions and i hope

215
00:06:47,440 --> 00:06:49,919
you are maybe by the end of this i'd

216
00:06:49,919 --> 00:06:51,120
read up on those different fields and

217
00:06:51,120 --> 00:06:52,479
find your own niche

218
00:06:52,479 --> 00:06:54,479
i'm in the process of doing exactly that

219
00:06:54,479 --> 00:06:55,599
there's so many of them that your

220
00:06:55,599 --> 00:06:56,960
interest is likely to wane before you

221
00:06:56,960 --> 00:06:59,840
even exhaust the list

222
00:07:00,000 --> 00:07:02,160
so in manifest.json i look most closely

223
00:07:02,160 --> 00:07:03,840
at the permissions both the chrome api

224
00:07:03,840 --> 00:07:05,520
permissions included and the urls that

225
00:07:05,520 --> 00:07:06,639
are cited

226
00:07:06,639 --> 00:07:08,000
permissions are the sketch of what can

227
00:07:08,000 --> 00:07:09,680
happen the code of course

228
00:07:09,680 --> 00:07:11,759
determines what will happen with them

229
00:07:11,759 --> 00:07:13,199
because of that i spend a fair amount of

230
00:07:13,199 --> 00:07:14,960
time on those permitted chrome api

231
00:07:14,960 --> 00:07:16,000
operations

232
00:07:16,000 --> 00:07:17,520
the permissions don't encompass all the

233
00:07:17,520 --> 00:07:19,199
possible risk in an extension but they

234
00:07:19,199 --> 00:07:20,880
cover a lot

235
00:07:20,880 --> 00:07:22,319
in the next step i search the code for

236
00:07:22,319 --> 00:07:23,840
where they're invoked to see what

237
00:07:23,840 --> 00:07:24,960
methods are being used and what's

238
00:07:24,960 --> 00:07:26,880
happening after that

239
00:07:26,880 --> 00:07:28,880
you can set general api permissions but

240
00:07:28,880 --> 00:07:30,160
you can also set permissions for the

241
00:07:30,160 --> 00:07:32,479
specific content scripts in this file

242
00:07:32,479 --> 00:07:34,080
in this file just javascript by

243
00:07:34,080 --> 00:07:35,440
javascript file you can be really

244
00:07:35,440 --> 00:07:36,880
specific about what's allowed to happen

245
00:07:36,880 --> 00:07:38,880
in each one

246
00:07:38,880 --> 00:07:40,560
from there i read through the different

247
00:07:40,560 --> 00:07:41,919
javascript files being used and what

248
00:07:41,919 --> 00:07:44,240
they're going to be allowed to do

249
00:07:44,240 --> 00:07:45,840
now because of the nature of my job i

250
00:07:45,840 --> 00:07:47,440
spend more time on

251
00:07:47,440 --> 00:07:49,599
manifest.json at work because we watch

252
00:07:49,599 --> 00:07:51,039
for overreach and it's most concisely

253
00:07:51,039 --> 00:07:52,400
shown in that file

254
00:07:52,400 --> 00:07:54,160
if you're seeking bounties manifest

255
00:07:54,160 --> 00:07:56,160
manifest.json is more likely to be a

256
00:07:56,160 --> 00:07:57,520
hint at what will lie in the rest of the

257
00:07:57,520 --> 00:07:58,000
javascript

258
00:07:58,000 --> 00:07:59,039
which is where you'll find what you're

259
00:07:59,039 --> 00:08:01,840
actually looking for

260
00:08:02,560 --> 00:08:05,440
finally of course i read the code i'm

261
00:08:05,440 --> 00:08:07,759
looking for weird uses of permissions

262
00:08:07,759 --> 00:08:09,520
and their methods like chrome.identity

263
00:08:09,520 --> 00:08:11,440
and chrome.cookies are both fun

264
00:08:11,440 --> 00:08:13,120
any connections to third-party servers

265
00:08:13,120 --> 00:08:14,560
and anything else that seems overly

266
00:08:14,560 --> 00:08:16,000
ambitious with what i know about what

267
00:08:16,000 --> 00:08:16,960
the

268
00:08:16,960 --> 00:08:20,080
extension is allegedly trying to do

269
00:08:20,080 --> 00:08:23,120
some extensions have a fairly some

270
00:08:23,120 --> 00:08:26,000
fairly simple single javascript file

271
00:08:26,000 --> 00:08:27,680
others can have files upon files upon

272
00:08:27,680 --> 00:08:30,560
files and a complex nest of directories

273
00:08:30,560 --> 00:08:32,880
the official size limit for a crx file

274
00:08:32,880 --> 00:08:34,559
which is the zip formatted file format

275
00:08:34,559 --> 00:08:35,760
for a chrome extension

276
00:08:35,760 --> 00:08:37,760
is two gigabytes and that is a lot of

277
00:08:37,760 --> 00:08:39,599
room for function and also just

278
00:08:39,599 --> 00:08:42,320
utter mayhem

279
00:08:43,279 --> 00:08:44,720
so here's what i'm looking for across

280
00:08:44,720 --> 00:08:46,720
all of the extension code

281
00:08:46,720 --> 00:08:48,320
i want to know whether it's sending the

282
00:08:48,320 --> 00:08:49,839
user's data to

283
00:08:49,839 --> 00:08:52,080
god knows where i want what i really

284
00:08:52,080 --> 00:08:53,519
want to see is innocuous and clearly

285
00:08:53,519 --> 00:08:54,000
describe

286
00:08:54,000 --> 00:08:56,000
changes to the appearance and contents

287
00:08:56,000 --> 00:08:57,120
of the dom

288
00:08:57,120 --> 00:08:58,880
i really prefer not to see data being

289
00:08:58,880 --> 00:09:00,320
collected or sent

290
00:09:00,320 --> 00:09:02,240
if i do see data being collected or sent

291
00:09:02,240 --> 00:09:03,920
i have found the new focus of my time

292
00:09:03,920 --> 00:09:04,800
for the

293
00:09:04,800 --> 00:09:06,880
remaining time in my testing on this

294
00:09:06,880 --> 00:09:08,240
extension

295
00:09:08,240 --> 00:09:09,680
there are legitimate reasons to do this

296
00:09:09,680 --> 00:09:11,279
of course but they need to be safely

297
00:09:11,279 --> 00:09:14,640
done and very well justified

298
00:09:14,640 --> 00:09:16,160
i am looking to see whether it's storing

299
00:09:16,160 --> 00:09:18,399
stuff unsafely in your browser

300
00:09:18,399 --> 00:09:20,080
what i don't want to see is plain text

301
00:09:20,080 --> 00:09:21,440
secret stored in the browser

302
00:09:21,440 --> 00:09:23,519
this in itself is not the biggest risk

303
00:09:23,519 --> 00:09:25,200
but it can be a tell that something else

304
00:09:25,200 --> 00:09:26,800
is going on that is either messy or

305
00:09:26,800 --> 00:09:28,240
otherwise maybe not as well thought out

306
00:09:28,240 --> 00:09:29,839
as i'd like

307
00:09:29,839 --> 00:09:31,120
i'm also looking to see if there are

308
00:09:31,120 --> 00:09:32,640
wide open scopes that let the extension

309
00:09:32,640 --> 00:09:34,560
snoop on everything that you're doing

310
00:09:34,560 --> 00:09:36,480
and then worst of all if it's snooping

311
00:09:36,480 --> 00:09:37,760
on everything that you're doing and then

312
00:09:37,760 --> 00:09:39,360
sending that information to god knows

313
00:09:39,360 --> 00:09:41,680
where

314
00:09:43,120 --> 00:09:44,640
so what should you do about this or what

315
00:09:44,640 --> 00:09:46,160
should you know

316
00:09:46,160 --> 00:09:47,920
a company's official chrome extensions

317
00:09:47,920 --> 00:09:49,120
can create weird and surprising

318
00:09:49,120 --> 00:09:51,200
vulnerabilities for their customers

319
00:09:51,200 --> 00:09:52,560
think about the permissions involved in

320
00:09:52,560 --> 00:09:54,560
an extension that alters text typed into

321
00:09:54,560 --> 00:09:55,440
a field

322
00:09:55,440 --> 00:09:57,200
it can read what you type it can store

323
00:09:57,200 --> 00:09:59,360
it and send it across the internet to be

324
00:09:59,360 --> 00:10:00,560
judged by an algorithm

325
00:10:00,560 --> 00:10:02,320
maybe with the goal of furnishing say

326
00:10:02,320 --> 00:10:04,480
spelling corrections which will be read

327
00:10:04,480 --> 00:10:06,959
as nearly instant by you

328
00:10:06,959 --> 00:10:08,399
we type a lot of sensitive things into

329
00:10:08,399 --> 00:10:10,480
text fields passwords credit card

330
00:10:10,480 --> 00:10:12,079
numbers questions to our insurance

331
00:10:12,079 --> 00:10:13,920
insurance companies emails to people we

332
00:10:13,920 --> 00:10:15,920
love and i personally don't trust an

333
00:10:15,920 --> 00:10:18,160
extension to have fine enough control

334
00:10:18,160 --> 00:10:19,839
to not at least process the text written

335
00:10:19,839 --> 00:10:21,040
in fields other than the ones it's

336
00:10:21,040 --> 00:10:22,640
supposed to be targeting

337
00:10:22,640 --> 00:10:24,720
and let me tell you even well-funded

338
00:10:24,720 --> 00:10:26,160
companies have two loose permissions and

339
00:10:26,160 --> 00:10:27,440
other weird stuff happening in their

340
00:10:27,440 --> 00:10:28,560
extensions

341
00:10:28,560 --> 00:10:30,160
it's the nature of this very particular

342
00:10:30,160 --> 00:10:32,160
medium there's a new opportunity

343
00:10:32,160 --> 00:10:33,839
with every extension update and some of

344
00:10:33,839 --> 00:10:37,440
the extensions are updated pretty often

345
00:10:38,000 --> 00:10:39,279
let's look at a few of these permissions

346
00:10:39,279 --> 00:10:40,720
now that i've spent some time broadly

347
00:10:40,720 --> 00:10:42,399
demonizing them

348
00:10:42,399 --> 00:10:43,839
permissions for an extension come in two

349
00:10:43,839 --> 00:10:46,320
forms urls either specific ones or

350
00:10:46,320 --> 00:10:47,040
patterns

351
00:10:47,040 --> 00:10:49,519
and chrome api permissions these cover

352
00:10:49,519 --> 00:10:51,279
all kinds of possible interactions

353
00:10:51,279 --> 00:10:53,200
alerts accessing and updating browser

354
00:10:53,200 --> 00:10:55,680
storage accessing bookmarks and tabs

355
00:10:55,680 --> 00:10:58,079
among many others there's a safe use for

356
00:10:58,079 --> 00:10:58,959
every permission

357
00:10:58,959 --> 00:11:00,720
but there are also permissions that if

358
00:11:00,720 --> 00:11:02,720
included are a great place to start when

359
00:11:02,720 --> 00:11:04,160
reviewing an extension to make sure it's

360
00:11:04,160 --> 00:11:05,360
safe for the user

361
00:11:05,360 --> 00:11:08,000
here are a few

362
00:11:08,640 --> 00:11:10,399
first let's look at urls and their

363
00:11:10,399 --> 00:11:11,920
patterns

364
00:11:11,920 --> 00:11:13,519
for an extension to access a site its

365
00:11:13,519 --> 00:11:15,440
url must either be specified or match a

366
00:11:15,440 --> 00:11:16,480
pattern

367
00:11:16,480 --> 00:11:17,920
conveniently for devs there are patterns

368
00:11:17,920 --> 00:11:19,839
that make matching very easy

369
00:11:19,839 --> 00:11:21,360
conveniently for bug bounty hunters that

370
00:11:21,360 --> 00:11:22,800
means that a lot of doves leave the

371
00:11:22,800 --> 00:11:25,279
doors much more open than is necessary

372
00:11:25,279 --> 00:11:26,399
maybe because they're trying to future

373
00:11:26,399 --> 00:11:28,640
proof their extension or less commonly

374
00:11:28,640 --> 00:11:29,760
because it's something that has any

375
00:11:29,760 --> 00:11:30,959
business doing something on

376
00:11:30,959 --> 00:11:34,640
any site you visit in manifest.json you

377
00:11:34,640 --> 00:11:36,720
can include and exclude urls based on

378
00:11:36,720 --> 00:11:38,320
these patterns but including

379
00:11:38,320 --> 00:11:41,760
is much more common so if i see

380
00:11:41,760 --> 00:11:42,720
either of the patterns that you're

381
00:11:42,720 --> 00:11:43,920
looking at here i start looking at

382
00:11:43,920 --> 00:11:45,760
things very carefully

383
00:11:45,760 --> 00:11:47,279
these permissions give an extension cart

384
00:11:47,279 --> 00:11:49,440
blanche to work on basically any website

385
00:11:49,440 --> 00:11:50,399
you visit

386
00:11:50,399 --> 00:11:52,399
your email your bank your employer's web

387
00:11:52,399 --> 00:11:54,800
portal when everyone's working at home

388
00:11:54,800 --> 00:11:56,399
this is hard to justify all those a few

389
00:11:56,399 --> 00:11:58,560
extensions can

390
00:11:58,560 --> 00:12:00,639
google themselves declares wide open

391
00:12:00,639 --> 00:12:02,320
wildcard patterns to be the highest risk

392
00:12:02,320 --> 00:12:03,600
type of permission

393
00:12:03,600 --> 00:12:05,680
with this all url's permission the next

394
00:12:05,680 --> 00:12:07,279
most

395
00:12:07,279 --> 00:12:08,480
so these can be at the top level

396
00:12:08,480 --> 00:12:10,399
permissions in an extension or

397
00:12:10,399 --> 00:12:12,880
they can match a particular content

398
00:12:12,880 --> 00:12:13,680
script

399
00:12:13,680 --> 00:12:16,320
all of this is laid out in manifest.json

400
00:12:16,320 --> 00:12:17,760
so what does that mean

401
00:12:17,760 --> 00:12:19,279
cross origin requests with none of the

402
00:12:19,279 --> 00:12:20,880
usual barriers or browser would present

403
00:12:20,880 --> 00:12:22,000
all because of the extension's

404
00:12:22,000 --> 00:12:23,360
interference

405
00:12:23,360 --> 00:12:24,959
it also allows javascript injection on

406
00:12:24,959 --> 00:12:26,480
any site the user visits

407
00:12:26,480 --> 00:12:29,760
fun one reason people do this is to

408
00:12:29,760 --> 00:12:31,360
avoid coors errors

409
00:12:31,360 --> 00:12:32,959
however i promise this can be done

410
00:12:32,959 --> 00:12:34,720
effectively and more securely

411
00:12:34,720 --> 00:12:36,160
it just requires a little more work to

412
00:12:36,160 --> 00:12:38,000
narrow down exactly what url or pattern

413
00:12:38,000 --> 00:12:39,839
needs to be put into place

414
00:12:39,839 --> 00:12:42,000
beware asterisks especially beware

415
00:12:42,000 --> 00:12:44,000
asterisks with only a host or no host at

416
00:12:44,000 --> 00:12:44,880
all

417
00:12:44,880 --> 00:12:46,800
on the plus side it opens up a lot of

418
00:12:46,800 --> 00:12:48,240
interesting territory for the bug bounty

419
00:12:48,240 --> 00:12:48,800
hunter

420
00:12:48,800 --> 00:12:52,880
silver lining i guess

421
00:12:52,880 --> 00:12:54,800
next let's look at the web request api

422
00:12:54,800 --> 00:12:56,000
permission

423
00:12:56,000 --> 00:12:57,760
this lets the extension change remove

424
00:12:57,760 --> 00:12:59,680
and add http headers

425
00:12:59,680 --> 00:13:01,360
it also lets it add listeners and change

426
00:13:01,360 --> 00:13:03,120
behavior upon receiving

427
00:13:03,120 --> 00:13:04,639
the first byte of a response at the

428
00:13:04,639 --> 00:13:06,560
initiation of a redirect when a request

429
00:13:06,560 --> 00:13:07,519
is completed

430
00:13:07,519 --> 00:13:09,040
and anywhere else in the life cycle of a

431
00:13:09,040 --> 00:13:10,800
web request

432
00:13:10,800 --> 00:13:12,639
this can of course be used totally

433
00:13:12,639 --> 00:13:14,079
legitimately

434
00:13:14,079 --> 00:13:16,320
however it's also been used to intercept

435
00:13:16,320 --> 00:13:17,760
and forward user traffic

436
00:13:17,760 --> 00:13:19,200
so if it shows up in the manifest it's

437
00:13:19,200 --> 00:13:20,320
worth looking at every one of its

438
00:13:20,320 --> 00:13:22,560
methods that's used in the code

439
00:13:22,560 --> 00:13:23,680
it also has to be paired with an

440
00:13:23,680 --> 00:13:24,959
appropriate host permission to be able

441
00:13:24,959 --> 00:13:26,160
to do anything which is the case with

442
00:13:26,160 --> 00:13:28,240
any permission

443
00:13:28,240 --> 00:13:30,320
so web request is likely to be in flux

444
00:13:30,320 --> 00:13:31,839
in the future but for now it's still

445
00:13:31,839 --> 00:13:32,320
here

446
00:13:32,320 --> 00:13:33,519
and it's still weird enough that even

447
00:13:33,519 --> 00:13:35,040
the eff has weighed in on its present

448
00:13:35,040 --> 00:13:37,519
and future

449
00:13:38,720 --> 00:13:41,920
finally let's look at the cookies api

450
00:13:41,920 --> 00:13:43,279
this permission offers methods around

451
00:13:43,279 --> 00:13:45,519
getting setting and removing cookies

452
00:13:45,519 --> 00:13:46,800
this can result in a lot of interesting

453
00:13:46,800 --> 00:13:48,480
possibilities particularly when paired

454
00:13:48,480 --> 00:13:49,839
with collecting data and sending it

455
00:13:49,839 --> 00:13:51,040
somewhere

456
00:13:51,040 --> 00:13:52,880
fortunately the solution for this is the

457
00:13:52,880 --> 00:13:54,720
same as cross-site scripting

458
00:13:54,720 --> 00:13:57,040
set that http only flag on that cookie

459
00:13:57,040 --> 00:13:58,240
so it isn't accessible via

460
00:13:58,240 --> 00:14:01,920
the javascript of content script however

461
00:14:01,920 --> 00:14:03,839
if people faithfully set that flag

462
00:14:03,839 --> 00:14:06,320
my job might not need to exist and yet i

463
00:14:06,320 --> 00:14:07,920
remain employed

464
00:14:07,920 --> 00:14:09,279
so it's worth mentioning as it still

465
00:14:09,279 --> 00:14:12,240
comes up regularly

466
00:14:13,680 --> 00:14:14,720
there are other horrors in the

467
00:14:14,720 --> 00:14:17,360
permissions gallery

468
00:14:17,360 --> 00:14:19,920
the file that you're looking at here is

469
00:14:19,920 --> 00:14:21,040
worth the read because it goes into

470
00:14:21,040 --> 00:14:22,720
corners i typically don't get into in my

471
00:14:22,720 --> 00:14:24,079
own chrome extension reviews

472
00:14:24,079 --> 00:14:25,360
but they might be relevant to your own

473
00:14:25,360 --> 00:14:28,240
work removing the escape keys ability to

474
00:14:28,240 --> 00:14:30,639
exit full screen spying on the user with

475
00:14:30,639 --> 00:14:32,240
their own camera or microphone

476
00:14:32,240 --> 00:14:34,079
nightmares but they're not impossible

477
00:14:34,079 --> 00:14:36,399
ones

478
00:14:36,880 --> 00:14:38,160
but let's look a little more at the code

479
00:14:38,160 --> 00:14:41,439
that you might find in an extension

480
00:14:42,079 --> 00:14:44,399
the things i watch for are again shaped

481
00:14:44,399 --> 00:14:46,160
by the particular concerns of my team at

482
00:14:46,160 --> 00:14:47,920
my very large company

483
00:14:47,920 --> 00:14:49,519
but my primary concerns are about

484
00:14:49,519 --> 00:14:50,720
accessing storing and sending

485
00:14:50,720 --> 00:14:52,160
information

486
00:14:52,160 --> 00:14:54,079
i watch for any input text being saved

487
00:14:54,079 --> 00:14:56,399
or otherwise manipulated to start

488
00:14:56,399 --> 00:14:58,320
i find out what's being collected if the

489
00:14:58,320 --> 00:14:59,440
collection and handling of that

490
00:14:59,440 --> 00:15:01,120
information supports the story i've put

491
00:15:01,120 --> 00:15:01,600
together

492
00:15:01,600 --> 00:15:03,279
about the extension through my research

493
00:15:03,279 --> 00:15:05,600
and if not where do the two diverge

494
00:15:05,600 --> 00:15:08,959
after that i check for http requests

495
00:15:08,959 --> 00:15:10,079
if i find them i look at what they're

496
00:15:10,079 --> 00:15:12,480
doing what's being stored and sent

497
00:15:12,480 --> 00:15:13,839
how is it being sent and where is it

498
00:15:13,839 --> 00:15:15,680
going is it something the user of the

499
00:15:15,680 --> 00:15:17,440
extension will have opted into via

500
00:15:17,440 --> 00:15:18,800
an account or is this being done more

501
00:15:18,800 --> 00:15:21,279
quietly

502
00:15:22,399 --> 00:15:24,000
most extensions also have an html

503
00:15:24,000 --> 00:15:25,839
component often for creating a

504
00:15:25,839 --> 00:15:28,000
customized menu for the extension

505
00:15:28,000 --> 00:15:30,160
if you see a file called popup.html it's

506
00:15:30,160 --> 00:15:31,440
likely this

507
00:15:31,440 --> 00:15:32,480
these are subject to the same

508
00:15:32,480 --> 00:15:34,079
vulnerabilities as any webpage so it's

509
00:15:34,079 --> 00:15:35,680
worth testing for common vulnerabilities

510
00:15:35,680 --> 00:15:37,759
like cross-site scripting

511
00:15:37,759 --> 00:15:39,519
the same is true for other tells like

512
00:15:39,519 --> 00:15:41,360
the use of inner html

513
00:15:41,360 --> 00:15:42,720
basically if it's something you try on a

514
00:15:42,720 --> 00:15:44,079
regular web page it's worth trying on

515
00:15:44,079 --> 00:15:45,440
the menus and other pop-ups that are

516
00:15:45,440 --> 00:15:48,320
part of an extension

517
00:15:51,120 --> 00:15:53,040
so i want to conclude with advice to you

518
00:15:53,040 --> 00:15:54,639
bounty hunters

519
00:15:54,639 --> 00:15:57,120
we need you generally of course and i

520
00:15:57,120 --> 00:15:58,240
think the world of extensions in

521
00:15:58,240 --> 00:15:59,440
particular would benefit from your

522
00:15:59,440 --> 00:16:01,120
attention

523
00:16:01,120 --> 00:16:02,639
beyond what the permissions and code can

524
00:16:02,639 --> 00:16:04,000
yield the first time you look at an

525
00:16:04,000 --> 00:16:05,040
extension

526
00:16:05,040 --> 00:16:06,560
i think the particular opportunity of

527
00:16:06,560 --> 00:16:08,480
how extensions are updated offers a lot

528
00:16:08,480 --> 00:16:10,000
of possibilities

529
00:16:10,000 --> 00:16:11,839
the releases for extensions unlike those

530
00:16:11,839 --> 00:16:13,839
for say a company's website

531
00:16:13,839 --> 00:16:15,199
are numbered and they're publicly

532
00:16:15,199 --> 00:16:17,360
available you know if something's

533
00:16:17,360 --> 00:16:18,800
changed enough that chrome has a page

534
00:16:18,800 --> 00:16:22,000
for it that you can just keep up on

535
00:16:22,000 --> 00:16:23,120
now right now this isn't the most

536
00:16:23,120 --> 00:16:24,959
popular category of bug bounties but

537
00:16:24,959 --> 00:16:26,160
they do exist

538
00:16:26,160 --> 00:16:27,680
maybe i should be optimistic and say it

539
00:16:27,680 --> 00:16:30,639
isn't the most popular category yet

540
00:16:30,639 --> 00:16:31,839
if you're looking for them check by

541
00:16:31,839 --> 00:16:33,759
company and if the company itself

542
00:16:33,759 --> 00:16:35,120
doesn't include extensions in their bug

543
00:16:35,120 --> 00:16:36,880
bounty program google play has its own

544
00:16:36,880 --> 00:16:38,240
extension bounty program that you can

545
00:16:38,240 --> 00:16:40,639
check out

546
00:16:41,759 --> 00:16:43,360
and because i interact with them so much

547
00:16:43,360 --> 00:16:45,519
i also need to offer a little advice to

548
00:16:45,519 --> 00:16:47,120
extension developers

549
00:16:47,120 --> 00:16:49,440
your job is not easy but here's what i

550
00:16:49,440 --> 00:16:50,320
ask

551
00:16:50,320 --> 00:16:52,000
please make a priority of using the

552
00:16:52,000 --> 00:16:53,759
minimum viable number of permissions

553
00:16:53,759 --> 00:16:55,279
including urls

554
00:16:55,279 --> 00:16:57,839
especially urls if your extension

555
00:16:57,839 --> 00:16:59,279
doesn't need to alter the entire

556
00:16:59,279 --> 00:17:00,959
internet is accessed through any given

557
00:17:00,959 --> 00:17:02,320
person's chrome usage

558
00:17:02,320 --> 00:17:04,240
don't include it your users will

559
00:17:04,240 --> 00:17:05,439
appreciate it

560
00:17:05,439 --> 00:17:07,520
and of course handle personal

561
00:17:07,520 --> 00:17:09,760
information like plutonium

562
00:17:09,760 --> 00:17:12,240
and also uh please don't sell your

563
00:17:12,240 --> 00:17:14,160
moderately popular extension to entities

564
00:17:14,160 --> 00:17:16,839
that want to exploit people

565
00:17:16,839 --> 00:17:33,600
please thank you very much

