1
00:00:05,120 --> 00:00:11,840
[Music]

2
00:00:11,840 --> 00:00:13,519
welcome to day two

3
00:00:13,519 --> 00:00:16,480
of level up oxo seven now if you have

4
00:00:16,480 --> 00:00:17,279
just

5
00:00:17,279 --> 00:00:19,680
randomly mashed your keyboard with your

6
00:00:19,680 --> 00:00:21,680
face and somehow landed on this page

7
00:00:21,680 --> 00:00:24,240
and you have no idea what level up seven

8
00:00:24,240 --> 00:00:26,320
is it's a conference about hacking

9
00:00:26,320 --> 00:00:28,320
um and when i say hacking i'm not

10
00:00:28,320 --> 00:00:30,240
talking about like the general hacking

11
00:00:30,240 --> 00:00:31,920
term that gets overused today you know

12
00:00:31,920 --> 00:00:32,320
like

13
00:00:32,320 --> 00:00:35,360
productivity hacks and mindfulness hacks

14
00:00:35,360 --> 00:00:36,399
no no no no

15
00:00:36,399 --> 00:00:38,239
i'm talking about actual computer

16
00:00:38,239 --> 00:00:39,440
hacking like

17
00:00:39,440 --> 00:00:41,840
die hard 4 and mr robot right that's

18
00:00:41,840 --> 00:00:42,960
what i'm talking about

19
00:00:42,960 --> 00:00:45,039
yeah um i think maybe we'll just start

20
00:00:45,039 --> 00:00:46,239
entering uh buses

21
00:00:46,239 --> 00:00:49,520
bus is um you know a skilled hacker

22
00:00:49,520 --> 00:00:52,079
and is definitely not afraid to dive

23
00:00:52,079 --> 00:00:54,079
deep into any kind of technology

24
00:00:54,079 --> 00:00:56,079
and um you know different protocols and

25
00:00:56,079 --> 00:00:58,320
things like that basically he's

26
00:00:58,320 --> 00:01:01,199
been a lifelong ticker and a self-taught

27
00:01:01,199 --> 00:01:02,160
hardware hacker

28
00:01:02,160 --> 00:01:05,360
which is pretty amazing has a bit of

29
00:01:05,360 --> 00:01:06,400
experience with

30
00:01:06,400 --> 00:01:09,040
automotive radio frequency hacking and

31
00:01:09,040 --> 00:01:10,560
iot hacking

32
00:01:10,560 --> 00:01:12,159
and is always looking for new things to

33
00:01:12,159 --> 00:01:14,080
break which is in my opinion pretty

34
00:01:14,080 --> 00:01:16,479
awesome

35
00:01:24,240 --> 00:01:27,280
hello thanks everyone for tuning in to

36
00:01:27,280 --> 00:01:29,920
my talk today uh hardware hacking for

37
00:01:29,920 --> 00:01:30,560
the masses

38
00:01:30,560 --> 00:01:33,600
and you version two i gave

39
00:01:33,600 --> 00:01:36,479
a version of this talk two level ups ago

40
00:01:36,479 --> 00:01:38,159
at the fifth level up

41
00:01:38,159 --> 00:01:41,040
and i thought since then i've learned a

42
00:01:41,040 --> 00:01:41,840
lot myself

43
00:01:41,840 --> 00:01:43,119
and there's a lot of things i think i've

44
00:01:43,119 --> 00:01:44,880
improved on and i

45
00:01:44,880 --> 00:01:46,479
would really love to make another

46
00:01:46,479 --> 00:01:47,920
version of this kind of intro to

47
00:01:47,920 --> 00:01:50,320
hardware hacking content

48
00:01:50,320 --> 00:01:53,680
so let's uh let's jump into it

49
00:01:53,680 --> 00:01:56,640
i am busses can fly on twitter i love

50
00:01:56,640 --> 00:01:57,200
doing

51
00:01:57,200 --> 00:01:59,119
hardware and automotive security

52
00:01:59,119 --> 00:02:00,960
research

53
00:02:00,960 --> 00:02:02,399
my experience with bug crowd is i've

54
00:02:02,399 --> 00:02:04,560
done some general bug bounty things but

55
00:02:04,560 --> 00:02:05,439
also a

56
00:02:05,439 --> 00:02:07,600
handful of hardware and automotive bug

57
00:02:07,600 --> 00:02:09,440
bash with bug crowd

58
00:02:09,440 --> 00:02:12,160
i'm a student and yeah huge shout out to

59
00:02:12,160 --> 00:02:16,239
teams dumpster fire and add vulcan

60
00:02:16,239 --> 00:02:18,879
yeah i guess the the normal disclaimers

61
00:02:18,879 --> 00:02:20,239
i'm not a lawyer

62
00:02:20,239 --> 00:02:23,200
this is not a perfect presentation be

63
00:02:23,200 --> 00:02:23,920
responsible

64
00:02:23,920 --> 00:02:27,200
hack stuff you own don't be dumb

65
00:02:27,200 --> 00:02:30,480
yeah i'm not a lawyer

66
00:02:30,720 --> 00:02:33,920
um overall this presentation i

67
00:02:33,920 --> 00:02:35,920
was hoping to give kind of like a more

68
00:02:35,920 --> 00:02:37,840
general overview with hardware hacking

69
00:02:37,840 --> 00:02:38,560
things

70
00:02:38,560 --> 00:02:41,840
this is by no means a field guide or

71
00:02:41,840 --> 00:02:44,800
the perfect bible of hardware hacking my

72
00:02:44,800 --> 00:02:46,959
intent is really to help people

73
00:02:46,959 --> 00:02:48,720
kind of demystify hardware hacking for a

74
00:02:48,720 --> 00:02:50,000
lot of people

75
00:02:50,000 --> 00:02:52,400
i know for myself getting started in a

76
00:02:52,400 --> 00:02:53,920
new subject area can be

77
00:02:53,920 --> 00:02:57,519
really difficult but as soon as i just

78
00:02:57,519 --> 00:02:59,120
get to it and start with learning

79
00:02:59,120 --> 00:03:00,560
something it usually gets a lot easier

80
00:03:00,560 --> 00:03:02,080
and i have a lot of momentum

81
00:03:02,080 --> 00:03:04,400
but i specifically um benefit a lot from

82
00:03:04,400 --> 00:03:06,159
when people shove me through the basics

83
00:03:06,159 --> 00:03:06,800
and

84
00:03:06,800 --> 00:03:10,400
this is kind of my intention to show how

85
00:03:10,400 --> 00:03:12,159
i think there's this big stigma around

86
00:03:12,159 --> 00:03:13,840
hardware hacking being really difficult

87
00:03:13,840 --> 00:03:17,519
and really crazy but

88
00:03:17,519 --> 00:03:19,760
like like a lot of smart incredible

89
00:03:19,760 --> 00:03:20,879
software people

90
00:03:20,879 --> 00:03:23,200
or and software based and web security

91
00:03:23,200 --> 00:03:24,720
researchers will

92
00:03:24,720 --> 00:03:26,239
say like oh harper seems really

93
00:03:26,239 --> 00:03:27,840
difficult or and

94
00:03:27,840 --> 00:03:30,560
all that kind of stuff but i think it's

95
00:03:30,560 --> 00:03:32,000
it's not any more difficult but it's

96
00:03:32,000 --> 00:03:32,959
just a little more

97
00:03:32,959 --> 00:03:34,959
esoteric and maybe not as many people

98
00:03:34,959 --> 00:03:36,480
are experienced in it

99
00:03:36,480 --> 00:03:38,640
so i i hope i can provide at least a

100
00:03:38,640 --> 00:03:40,159
little bit of information to kick-start

101
00:03:40,159 --> 00:03:41,440
your learning in that because it is a

102
00:03:41,440 --> 00:03:42,720
wonderful subject and i

103
00:03:42,720 --> 00:03:45,519
i love it very dearly with that being

104
00:03:45,519 --> 00:03:46,080
said

105
00:03:46,080 --> 00:03:48,959
this presentation is not everything you

106
00:03:48,959 --> 00:03:49,920
need to know

107
00:03:49,920 --> 00:03:52,400
for example it's not i'm not going to

108
00:03:52,400 --> 00:03:53,760
teach you how to solder

109
00:03:53,760 --> 00:03:56,879
or what a resistor and capacitor are

110
00:03:56,879 --> 00:03:59,519
there's a ton of already made amazing

111
00:03:59,519 --> 00:04:01,280
guides online for that and i don't feel

112
00:04:01,280 --> 00:04:02,239
that

113
00:04:02,239 --> 00:04:05,040
i need to make a worse version of those

114
00:04:05,040 --> 00:04:06,000
this is also i'm not

115
00:04:06,000 --> 00:04:07,680
dropping any cool zero days or anything

116
00:04:07,680 --> 00:04:09,760
this is just kind of a general basics

117
00:04:09,760 --> 00:04:11,280
overview

118
00:04:11,280 --> 00:04:12,879
and one thing i'm not going to talk

119
00:04:12,879 --> 00:04:14,720
about is

120
00:04:14,720 --> 00:04:16,720
common web volumes that's a great thing

121
00:04:16,720 --> 00:04:18,160
with hardware devices

122
00:04:18,160 --> 00:04:20,320
getting command injection through web

123
00:04:20,320 --> 00:04:22,079
interfaces and all that kind of stuff

124
00:04:22,079 --> 00:04:24,560
that's wonderful stuff also a ton of

125
00:04:24,560 --> 00:04:26,240
good blog posts and resources about that

126
00:04:26,240 --> 00:04:26,960
but

127
00:04:26,960 --> 00:04:30,320
not on the scope of this talk so

128
00:04:30,320 --> 00:04:32,880
yep some some frequently asked questions

129
00:04:32,880 --> 00:04:34,400
hardware hacking

130
00:04:34,400 --> 00:04:36,320
just like if you ask what is web hacking

131
00:04:36,320 --> 00:04:38,240
it's it's a really general thing but

132
00:04:38,240 --> 00:04:40,479
as with anything with hacks we're trying

133
00:04:40,479 --> 00:04:41,600
to make something do

134
00:04:41,600 --> 00:04:42,880
something it's not supposed to or it

135
00:04:42,880 --> 00:04:45,280
doesn't want to uh

136
00:04:45,280 --> 00:04:47,040
a question i get a lot about hardware

137
00:04:47,040 --> 00:04:49,280
hacking is the money side of things

138
00:04:49,280 --> 00:04:50,960
because there are people with you know

139
00:04:50,960 --> 00:04:52,320
10 like five figure

140
00:04:52,320 --> 00:04:54,800
five digit costs on some of their tools

141
00:04:54,800 --> 00:04:55,520
and they

142
00:04:55,520 --> 00:04:58,639
buy all this crazy tier 3 stuff but

143
00:04:58,639 --> 00:05:02,320
you can do a lot with very little money

144
00:05:02,320 --> 00:05:04,720
my i think first time i got i did

145
00:05:04,720 --> 00:05:06,320
anything with hardware hacking

146
00:05:06,320 --> 00:05:08,000
was a router i pulled out of an

147
00:05:08,000 --> 00:05:10,479
electronics recycling box and

148
00:05:10,479 --> 00:05:13,680
a three dollar serial cable i got from

149
00:05:13,680 --> 00:05:16,320
amazon and that was enough to get me a

150
00:05:16,320 --> 00:05:17,199
shell on a router

151
00:05:17,199 --> 00:05:19,680
so it you can do a lot with very little

152
00:05:19,680 --> 00:05:21,520
some tools are helpful and make life a

153
00:05:21,520 --> 00:05:22,880
lot easier and i'll touch on that a

154
00:05:22,880 --> 00:05:25,600
little later but you shouldn't be

155
00:05:25,600 --> 00:05:26,960
shying away from hardware hacking

156
00:05:26,960 --> 00:05:28,720
because it's of it feeling like an

157
00:05:28,720 --> 00:05:30,720
expensive start

158
00:05:30,720 --> 00:05:32,639
another very common question is hardware

159
00:05:32,639 --> 00:05:34,800
more difficult than software

160
00:05:34,800 --> 00:05:37,919
i don't think that's a really answerable

161
00:05:37,919 --> 00:05:38,639
question

162
00:05:38,639 --> 00:05:41,280
they're both very broad subject areas

163
00:05:41,280 --> 00:05:41,840
and

164
00:05:41,840 --> 00:05:44,320
they're just they're too big to compare

165
00:05:44,320 --> 00:05:45,440
directly

166
00:05:45,440 --> 00:05:47,759
i think anyone who is interested in

167
00:05:47,759 --> 00:05:49,280
hardware but shying away from it because

168
00:05:49,280 --> 00:05:50,400
they think it's difficult

169
00:05:50,400 --> 00:05:52,720
just jump in you'll you're bound to find

170
00:05:52,720 --> 00:05:54,479
something that'll click for you and

171
00:05:54,479 --> 00:05:56,639
that'll work out really well and what

172
00:05:56,639 --> 00:05:57,520
kind of hardware you're going to be

173
00:05:57,520 --> 00:05:58,479
talking about

174
00:05:58,479 --> 00:05:59,600
basically whatever you can get your

175
00:05:59,600 --> 00:06:02,080
hands on in this talk specifically

176
00:06:02,080 --> 00:06:03,840
any of my demos and pictures i'm going

177
00:06:03,840 --> 00:06:05,680
to be showing are just some old routers

178
00:06:05,680 --> 00:06:07,039
i had laying around

179
00:06:07,039 --> 00:06:09,039
routers are great for this because they

180
00:06:09,039 --> 00:06:10,479
are usually almost

181
00:06:10,479 --> 00:06:12,000
always a little more powerful like they

182
00:06:12,000 --> 00:06:14,639
have a usually an arm chip or maybe mips

183
00:06:14,639 --> 00:06:16,000
on a rare case or something like that

184
00:06:16,000 --> 00:06:16,800
but

185
00:06:16,800 --> 00:06:18,479
not some sort of just microcontroller

186
00:06:18,479 --> 00:06:20,560
with a wi-fi

187
00:06:20,560 --> 00:06:23,360
with a wi-fi dongle basically and

188
00:06:23,360 --> 00:06:24,880
routers also usually have a decent

189
00:06:24,880 --> 00:06:26,400
amount of debug interfaces and they're

190
00:06:26,400 --> 00:06:27,759
just kind of fun to play around with and

191
00:06:27,759 --> 00:06:28,240
cheap

192
00:06:28,240 --> 00:06:29,840
for specifically really old ones that no

193
00:06:29,840 --> 00:06:32,000
one uses anymore super cheap

194
00:06:32,000 --> 00:06:35,840
second hand or third hand even

195
00:06:36,960 --> 00:06:40,479
with hardware and software there is that

196
00:06:40,479 --> 00:06:41,360
kind of middle

197
00:06:41,360 --> 00:06:44,160
middle realm firmware stuff and that's

198
00:06:44,160 --> 00:06:45,199
where

199
00:06:45,199 --> 00:06:46,400
it's actually a great place to get your

200
00:06:46,400 --> 00:06:48,000
feet wet you don't need to buy hardware

201
00:06:48,000 --> 00:06:49,199
or have any hardware to kind of get

202
00:06:49,199 --> 00:06:50,400
started with a lot of what hardware

203
00:06:50,400 --> 00:06:52,319
hacking is

204
00:06:52,319 --> 00:06:54,319
a lot of manufacturers when you look at

205
00:06:54,319 --> 00:06:56,160
their websites they provide

206
00:06:56,160 --> 00:06:58,160
firmware downloads for upgrading

207
00:06:58,160 --> 00:06:59,919
yourself a lot of devices have like an

208
00:06:59,919 --> 00:07:01,280
automatic firmware update or

209
00:07:01,280 --> 00:07:02,800
a button you can just push and it calls

210
00:07:02,800 --> 00:07:04,720
out to the server so it gets some

211
00:07:04,720 --> 00:07:06,560
endpoint some firmware from an endpoint

212
00:07:06,560 --> 00:07:08,720
and applies it to itself but a lot of

213
00:07:08,720 --> 00:07:10,319
times

214
00:07:10,319 --> 00:07:12,560
you can just download them online if not

215
00:07:12,560 --> 00:07:14,319
the manufacturer someone may have

216
00:07:14,319 --> 00:07:15,680
published

217
00:07:15,680 --> 00:07:17,120
some firmware for a specific device

218
00:07:17,120 --> 00:07:18,960
you're interested in now that's true

219
00:07:18,960 --> 00:07:20,560
just download the former and reverse it

220
00:07:20,560 --> 00:07:21,599
from there

221
00:07:21,599 --> 00:07:24,560
just to get started but some very quick

222
00:07:24,560 --> 00:07:25,919
tips i guess strings

223
00:07:25,919 --> 00:07:28,319
the command is really underrated i think

224
00:07:28,319 --> 00:07:29,759
in a lot of aspects of security but

225
00:07:29,759 --> 00:07:30,960
especially with hardware

226
00:07:30,960 --> 00:07:32,639
you can pull potentially even like

227
00:07:32,639 --> 00:07:34,319
encryption keys with it

228
00:07:34,319 --> 00:07:37,039
if something was very poorly made but

229
00:07:37,039 --> 00:07:39,120
aside from that bin walk is

230
00:07:39,120 --> 00:07:42,400
just an incredible tool it's not really

231
00:07:42,400 --> 00:07:44,319
a firmware hardware tool it's in general

232
00:07:44,319 --> 00:07:46,080
just file carving just when multiple

233
00:07:46,080 --> 00:07:48,160
files are in some sort of big blob

234
00:07:48,160 --> 00:07:49,919
uh it can pick out with the magic

235
00:07:49,919 --> 00:07:52,400
headers where file starts and ends and

236
00:07:52,400 --> 00:07:54,240
with firmware there's generally more

237
00:07:54,240 --> 00:07:56,840
than one file or file systems even

238
00:07:56,840 --> 00:07:58,720
multiple

239
00:07:58,720 --> 00:08:00,160
let's see if it gets let me grab a

240
00:08:00,160 --> 00:08:01,759
pointer up here

241
00:08:01,759 --> 00:08:04,639
is the output of binoc bin walk attack

242
00:08:04,639 --> 00:08:06,160
capital e

243
00:08:06,160 --> 00:08:08,800
on a firmware file that is entropy

244
00:08:08,800 --> 00:08:09,599
analysis

245
00:08:09,599 --> 00:08:11,840
there's a lot of pretty crazy math and

246
00:08:11,840 --> 00:08:13,520
fancy stuff but basically

247
00:08:13,520 --> 00:08:16,080
if you just see a line right about the

248
00:08:16,080 --> 00:08:18,400
1.0 mark with a drop down

249
00:08:18,400 --> 00:08:20,720
that's a good hint that this firmware is

250
00:08:20,720 --> 00:08:23,360
either compressed some ways or encrypted

251
00:08:23,360 --> 00:08:24,800
that's generally what we look for with

252
00:08:24,800 --> 00:08:26,160
the entropy analysis because the

253
00:08:26,160 --> 00:08:27,360
firmware is unencrypted there's going to

254
00:08:27,360 --> 00:08:29,520
be a lot of noise like sharp drops

255
00:08:29,520 --> 00:08:30,800
it's not just going to be a straight

256
00:08:30,800 --> 00:08:33,039
line and

257
00:08:33,039 --> 00:08:35,120
that's what we hope for because then you

258
00:08:35,120 --> 00:08:36,320
can just kind of go straight into

259
00:08:36,320 --> 00:08:37,679
extracting and playing around with it

260
00:08:37,679 --> 00:08:38,880
but if it is encrypted

261
00:08:38,880 --> 00:08:41,919
there's depending on the situation what

262
00:08:41,919 --> 00:08:44,240
what they're using what kind of

263
00:08:44,240 --> 00:08:46,800
basically how the firmware was made i

264
00:08:46,800 --> 00:08:48,480
would recommend just looking it up tons

265
00:08:48,480 --> 00:08:49,920
of blog posts for getting with

266
00:08:49,920 --> 00:08:51,600
for working with encrypted firmware or

267
00:08:51,600 --> 00:08:53,680
pulling encryption keys and trying to

268
00:08:53,680 --> 00:08:55,200
decrypt it

269
00:08:55,200 --> 00:08:56,640
there's just too many situations to

270
00:08:56,640 --> 00:09:00,160
cover in a kind of broad statement

271
00:09:00,160 --> 00:09:02,160
but let's assume like the example here

272
00:09:02,160 --> 00:09:04,000
your firmware is likely unencrypted by

273
00:09:04,000 --> 00:09:05,760
all this kind of noise going on

274
00:09:05,760 --> 00:09:08,000
then these two flags for bin walk e for

275
00:09:08,000 --> 00:09:09,680
extract and m from matroshka

276
00:09:09,680 --> 00:09:11,040
which is just kind of a recursive

277
00:09:11,040 --> 00:09:13,279
extraction

278
00:09:13,279 --> 00:09:15,760
will take a file it'll look at all the

279
00:09:15,760 --> 00:09:16,880
magic headers

280
00:09:16,880 --> 00:09:18,720
inside there or the magic bytes sorry

281
00:09:18,720 --> 00:09:19,920
the file headers

282
00:09:19,920 --> 00:09:21,600
and carve them out basically extract

283
00:09:21,600 --> 00:09:23,839
them all

284
00:09:23,839 --> 00:09:25,120
in this output you can see in this

285
00:09:25,120 --> 00:09:27,200
example it's found a squash effects

286
00:09:27,200 --> 00:09:28,959
file system and a bunch of xe compressed

287
00:09:28,959 --> 00:09:30,720
data the

288
00:09:30,720 --> 00:09:32,560
file system we're interested in in this

289
00:09:32,560 --> 00:09:33,760
case it's going to be the root file

290
00:09:33,760 --> 00:09:35,519
system but we'll get to that in a second

291
00:09:35,519 --> 00:09:38,080
some of the things you can often find

292
00:09:38,080 --> 00:09:40,320
are

293
00:09:40,320 --> 00:09:42,560
files for the bootloader uboot is super

294
00:09:42,560 --> 00:09:45,040
common on embedded and iot devices

295
00:09:45,040 --> 00:09:46,560
uh the you image headers are a dead

296
00:09:46,560 --> 00:09:47,760
giveaway that you're going to be working

297
00:09:47,760 --> 00:09:48,959
with u-boot

298
00:09:48,959 --> 00:09:52,000
uh squasher fest jffs and a few other

299
00:09:52,000 --> 00:09:54,720
file systems types are super common

300
00:09:54,720 --> 00:09:57,279
and if you want to skip the bin walker

301
00:09:57,279 --> 00:09:58,560
out for some reason or you're trying to

302
00:09:58,560 --> 00:10:00,000
repackage some stuff

303
00:10:00,000 --> 00:10:02,160
sasquatch for squash fest and jefferson

304
00:10:02,160 --> 00:10:05,440
for jffs are both tools you can install

305
00:10:05,440 --> 00:10:07,680
apt install or whatever your um package

306
00:10:07,680 --> 00:10:09,200
manager of choices

307
00:10:09,200 --> 00:10:10,880
and you can kind of repackage those

308
00:10:10,880 --> 00:10:13,279
devices and sometimes you'll see

309
00:10:13,279 --> 00:10:15,680
like um pem files or certain

310
00:10:15,680 --> 00:10:16,720
certificates for

311
00:10:16,720 --> 00:10:18,160
either code signing or the firmware

312
00:10:18,160 --> 00:10:20,079
signing it varies but

313
00:10:20,079 --> 00:10:22,480
they're not uncommon in this example

314
00:10:22,480 --> 00:10:23,279
here i have

315
00:10:23,279 --> 00:10:26,720
a firmware called fs.img

316
00:10:26,720 --> 00:10:29,440
it i extract it with bin walk here you

317
00:10:29,440 --> 00:10:30,320
look

318
00:10:30,320 --> 00:10:31,920
in the directory we see a squash fest

319
00:10:31,920 --> 00:10:33,600
root files and we

320
00:10:33,600 --> 00:10:35,839
go into it and you see the root file

321
00:10:35,839 --> 00:10:36,640
system

322
00:10:36,640 --> 00:10:37,839
one of the things that just a quick

323
00:10:37,839 --> 00:10:39,760
thing to grab is the etsy shadow i'm not

324
00:10:39,760 --> 00:10:40,800
going to show it here because i don't

325
00:10:40,800 --> 00:10:43,120
want to identify what device this is

326
00:10:43,120 --> 00:10:44,640
but in this example let's say you have

327
00:10:44,640 --> 00:10:46,480
the firmware um

328
00:10:46,480 --> 00:10:49,040
you get the shadow file by extracting

329
00:10:49,040 --> 00:10:50,160
the firmware

330
00:10:50,160 --> 00:10:53,040
and you when you get the device there's

331
00:10:53,040 --> 00:10:55,120
like a ssh or telnet port

332
00:10:55,120 --> 00:10:57,519
open where it just prompts for a

333
00:10:57,519 --> 00:10:59,200
username and password and bam you just

334
00:10:59,200 --> 00:11:02,240
got it from the shadow file

335
00:11:03,040 --> 00:11:07,200
here's kind of a an amazing resource for

336
00:11:07,200 --> 00:11:08,560
hardware hacking two of them

337
00:11:08,560 --> 00:11:11,600
but it's public information

338
00:11:11,600 --> 00:11:14,640
obviously googling or going things is

339
00:11:14,640 --> 00:11:17,760
pretty obvious but the fcc database is

340
00:11:17,760 --> 00:11:19,680
a gold mine of information for hardware

341
00:11:19,680 --> 00:11:20,800
hacking

342
00:11:20,800 --> 00:11:23,920
any device that's sold in the us that

343
00:11:23,920 --> 00:11:26,000
has to transmit on any radio frequency

344
00:11:26,000 --> 00:11:27,360
range so wi-fi

345
00:11:27,360 --> 00:11:30,800
bluetooth like 433 megahertz or

346
00:11:30,800 --> 00:11:33,680
like fm radio anything like that you

347
00:11:33,680 --> 00:11:34,640
have to

348
00:11:34,640 --> 00:11:36,399
register with the fcc and get your

349
00:11:36,399 --> 00:11:37,920
device certified

350
00:11:37,920 --> 00:11:41,839
a part of that certification process is

351
00:11:41,839 --> 00:11:44,399
including documentation images the

352
00:11:44,399 --> 00:11:45,600
testing

353
00:11:45,600 --> 00:11:47,440
uh of your device and then it all gets

354
00:11:47,440 --> 00:11:48,959
put publicly online

355
00:11:48,959 --> 00:11:51,120
and in the next slide i think i will

356
00:11:51,120 --> 00:11:52,480
show the process of getting this

357
00:11:52,480 --> 00:11:54,560
information from the sc database

358
00:11:54,560 --> 00:11:56,160
but all you need to find this kind of

359
00:11:56,160 --> 00:11:58,560
information for device is the fcc id

360
00:11:58,560 --> 00:12:00,959
and i'm sure many if not all of you have

361
00:12:00,959 --> 00:12:02,639
seen these kind of stickers on

362
00:12:02,639 --> 00:12:05,200
devices like even remotes sometimes but

363
00:12:05,200 --> 00:12:06,079
you'll see

364
00:12:06,079 --> 00:12:07,839
some sticker there'll be some logos from

365
00:12:07,839 --> 00:12:09,440
certification organizations and stuff

366
00:12:09,440 --> 00:12:10,079
like this

367
00:12:10,079 --> 00:12:11,600
it certifies that this device will

368
00:12:11,600 --> 00:12:13,600
receive um

369
00:12:13,600 --> 00:12:14,959
whatever information is given and it

370
00:12:14,959 --> 00:12:16,639
won't transmit on whatever whatever

371
00:12:16,639 --> 00:12:18,560
it doesn't matter this is all what we're

372
00:12:18,560 --> 00:12:20,639
interested in this fcc id

373
00:12:20,639 --> 00:12:22,079
this is a picture from one of the

374
00:12:22,079 --> 00:12:24,399
routers i'll be using in this talk

375
00:12:24,399 --> 00:12:26,720
and this id which i'll show in the next

376
00:12:26,720 --> 00:12:28,320
slide is all you need

377
00:12:28,320 --> 00:12:31,440
to get internal pictures test data user

378
00:12:31,440 --> 00:12:33,200
manuals everything like that

379
00:12:33,200 --> 00:12:34,880
and the easiest way to do that you can

380
00:12:34,880 --> 00:12:37,680
do it directly through the fcc website

381
00:12:37,680 --> 00:12:39,519
it's just kind of a pain as most

382
00:12:39,519 --> 00:12:41,120
government websites are to

383
00:12:41,120 --> 00:12:42,880
navigate so a bunch of people have made

384
00:12:42,880 --> 00:12:45,000
some nice websites like fccio or

385
00:12:45,000 --> 00:12:46,320
fccid.io

386
00:12:46,320 --> 00:12:48,240
there's a bunch of them just look up

387
00:12:48,240 --> 00:12:50,079
just google or duckduckgo

388
00:12:50,079 --> 00:12:53,440
fcc id lookup in these two you just put

389
00:12:53,440 --> 00:12:54,959
the fcc id

390
00:12:54,959 --> 00:12:57,279
after the like as a parameter and it

391
00:12:57,279 --> 00:12:59,040
will forward you to the fcc website

392
00:12:59,040 --> 00:13:00,880
where all the information is

393
00:13:00,880 --> 00:13:02,800
yeah you commonly find all sorts of

394
00:13:02,800 --> 00:13:04,480
really good stuff

395
00:13:04,480 --> 00:13:06,240
and i'll dive into that on the next

396
00:13:06,240 --> 00:13:07,519
slide

397
00:13:07,519 --> 00:13:10,160
aside from the fcc database data sheets

398
00:13:10,160 --> 00:13:10,639
are

399
00:13:10,639 --> 00:13:13,120
super useful uh a lot of times hardware

400
00:13:13,120 --> 00:13:13,680
hacking

401
00:13:13,680 --> 00:13:15,839
you're gonna well all of the time with

402
00:13:15,839 --> 00:13:16,720
hardware hacking

403
00:13:16,720 --> 00:13:19,680
when you open up device or get access to

404
00:13:19,680 --> 00:13:20,320
the pcb

405
00:13:20,320 --> 00:13:21,680
the circuit board with all the stuff on

406
00:13:21,680 --> 00:13:24,000
it you may kind of by

407
00:13:24,000 --> 00:13:25,519
instinct recognize what a lot of parts

408
00:13:25,519 --> 00:13:27,839
are responsible for but at the same time

409
00:13:27,839 --> 00:13:29,760
a lot of it's gonna be unknown

410
00:13:29,760 --> 00:13:32,079
like if you have no clue what this chip

411
00:13:32,079 --> 00:13:33,360
is just by looking at it

412
00:13:33,360 --> 00:13:35,519
that's completely fine a lot of the

413
00:13:35,519 --> 00:13:36,560
times they'll have

414
00:13:36,560 --> 00:13:39,360
this text on it and it's something if

415
00:13:39,360 --> 00:13:41,199
you just put it into your

416
00:13:41,199 --> 00:13:43,519
search engine of choice you can usually

417
00:13:43,519 --> 00:13:45,199
find a data sheet and it tells you what

418
00:13:45,199 --> 00:13:45,760
every pin

419
00:13:45,760 --> 00:13:47,199
is for it will give you some

420
00:13:47,199 --> 00:13:48,560
specifications it will tell you what the

421
00:13:48,560 --> 00:13:50,480
device is overall

422
00:13:50,480 --> 00:13:52,800
in the first case so for this example

423
00:13:52,800 --> 00:13:54,720
this is a spi flash chip

424
00:13:54,720 --> 00:13:57,199
so this is essentially the storage of an

425
00:13:57,199 --> 00:13:58,959
iot device and these chips

426
00:13:58,959 --> 00:14:01,920
are wonderful for hardware hacking i'll

427
00:14:01,920 --> 00:14:03,680
get into how you can pull data from that

428
00:14:03,680 --> 00:14:06,959
later on but data sheets are super

429
00:14:06,959 --> 00:14:10,880
useful in some cases with some kind of

430
00:14:10,880 --> 00:14:13,920
higher level chips you can run into

431
00:14:13,920 --> 00:14:15,120
issues where the

432
00:14:15,120 --> 00:14:17,440
data sheets are like you have to pay 10

433
00:14:17,440 --> 00:14:18,800
000 something dollars

434
00:14:18,800 --> 00:14:20,560
for usually companies are supposed to

435
00:14:20,560 --> 00:14:21,760
buy them when they're producing

436
00:14:21,760 --> 00:14:22,399
something

437
00:14:22,399 --> 00:14:23,600
and it's kind of annoying they're stuck

438
00:14:23,600 --> 00:14:26,399
between some huge paywalls but

439
00:14:26,399 --> 00:14:27,920
more often than not you'll be able to

440
00:14:27,920 --> 00:14:29,760
find a data sheet for most of the chips

441
00:14:29,760 --> 00:14:32,079
you look at

442
00:14:32,079 --> 00:14:33,360
oh and here's what i was talking about

443
00:14:33,360 --> 00:14:36,079
with the fcc database so when you put

444
00:14:36,079 --> 00:14:37,839
your fcc id of the device you're

445
00:14:37,839 --> 00:14:39,199
interested in into

446
00:14:39,199 --> 00:14:41,360
fccio or something like that it'll

447
00:14:41,360 --> 00:14:42,240
forward you

448
00:14:42,240 --> 00:14:43,920
to a page like this there'll be a little

449
00:14:43,920 --> 00:14:46,720
pop-up you have to click ok on but

450
00:14:46,720 --> 00:14:48,720
when you see this there's going to be

451
00:14:48,720 --> 00:14:50,480
multiple options most likely

452
00:14:50,480 --> 00:14:51,839
and that's just because there are

453
00:14:51,839 --> 00:14:54,560
different frequency ranges

454
00:14:54,560 --> 00:14:56,160
you can basically always just go to the

455
00:14:56,160 --> 00:14:58,560
first option here if you click detail

456
00:14:58,560 --> 00:15:01,839
it'll take you to this page and what i

457
00:15:01,839 --> 00:15:03,199
always go to first is the internal

458
00:15:03,199 --> 00:15:04,320
photos

459
00:15:04,320 --> 00:15:07,120
as kind of a unrelated tip if you ever

460
00:15:07,120 --> 00:15:10,320
lose your user user manual for a device

461
00:15:10,320 --> 00:15:12,800
the fcc database almost always has the

462
00:15:12,800 --> 00:15:14,800
manual like it just has a pdf attached

463
00:15:14,800 --> 00:15:15,600
here so

464
00:15:15,600 --> 00:15:17,279
there i know there's some sites that

465
00:15:17,279 --> 00:15:19,600
aggregate them and have a listing of all

466
00:15:19,600 --> 00:15:22,399
the um user manuals but this is another

467
00:15:22,399 --> 00:15:24,000
way to just get it yourself

468
00:15:24,000 --> 00:15:25,600
but internal photos are great for

469
00:15:25,600 --> 00:15:28,079
example from this fcc sticker with this

470
00:15:28,079 --> 00:15:29,920
fcc id

471
00:15:29,920 --> 00:15:31,680
um the internal photos lead to this

472
00:15:31,680 --> 00:15:33,920
picture this is from

473
00:15:33,920 --> 00:15:37,279
the manufacturer and while this one's

474
00:15:37,279 --> 00:15:38,959
not super extensive a lot of the times

475
00:15:38,959 --> 00:15:40,399
you'll get close-up pictures

476
00:15:40,399 --> 00:15:43,279
of all the chips or at least a lot of

477
00:15:43,279 --> 00:15:43,920
them or

478
00:15:43,920 --> 00:15:45,839
at least every angle of the device they

479
00:15:45,839 --> 00:15:46,959
have to show off

480
00:15:46,959 --> 00:15:48,880
most of it this was the whole internal

481
00:15:48,880 --> 00:15:50,079
photos for this one it's a bit of an

482
00:15:50,079 --> 00:15:50,560
older

483
00:15:50,560 --> 00:15:52,839
one so it's it's it doesn't have as much

484
00:15:52,839 --> 00:15:55,360
information but i highlighted right here

485
00:15:55,360 --> 00:15:57,680
two debug interfaces on the board and

486
00:15:57,680 --> 00:15:59,360
i'll get into what debug interfaces are

487
00:15:59,360 --> 00:16:00,800
and how to identify them

488
00:16:00,800 --> 00:16:02,639
but basically all you need to know is

489
00:16:02,639 --> 00:16:04,160
this is great to know

490
00:16:04,160 --> 00:16:07,279
if you're looking to buy a device for

491
00:16:07,279 --> 00:16:08,639
just the purpose of hacking it to do

492
00:16:08,639 --> 00:16:11,120
something or you want to do

493
00:16:11,120 --> 00:16:13,199
some research before you open it up to

494
00:16:13,199 --> 00:16:15,600
see if you even need to

495
00:16:15,600 --> 00:16:17,759
you can without putting any money into

496
00:16:17,759 --> 00:16:19,040
it just do a quick search

497
00:16:19,040 --> 00:16:20,639
and you have all the information you

498
00:16:20,639 --> 00:16:22,560
need you could also glean some more

499
00:16:22,560 --> 00:16:23,199
information

500
00:16:23,199 --> 00:16:24,880
if they were higher quality pictures and

501
00:16:24,880 --> 00:16:26,560
you could zoom into them what processor

502
00:16:26,560 --> 00:16:27,759
they're running what kind of flash

503
00:16:27,759 --> 00:16:29,279
things and if you needed to buy

504
00:16:29,279 --> 00:16:31,040
flash chips sorry if you need to buy any

505
00:16:31,040 --> 00:16:32,240
adapters or something like that you

506
00:16:32,240 --> 00:16:32,720
could

507
00:16:32,720 --> 00:16:36,720
figure that out beforehand oh and as i

508
00:16:36,720 --> 00:16:39,680
mentioned debug interfaces

509
00:16:39,680 --> 00:16:41,600
the general idea is just the developers

510
00:16:41,600 --> 00:16:43,440
who make these devices and when you know

511
00:16:43,440 --> 00:16:44,399
they're manufactured

512
00:16:44,399 --> 00:16:47,519
in whatever assembly lines um

513
00:16:47,519 --> 00:16:49,680
the code needs to be put on them somehow

514
00:16:49,680 --> 00:16:51,279
the chips don't come pre-programmed from

515
00:16:51,279 --> 00:16:52,079
whoever

516
00:16:52,079 --> 00:16:55,279
makes the chips um

517
00:16:55,279 --> 00:16:57,120
oh and sorry for anyone who doesn't know

518
00:16:57,120 --> 00:16:58,320
when i refer to chip

519
00:16:58,320 --> 00:17:00,320
i'm referring to these like ics

520
00:17:00,320 --> 00:17:02,320
integrated circuits on a board

521
00:17:02,320 --> 00:17:05,599
um ranging from flash memory

522
00:17:05,599 --> 00:17:09,839
storage to processors to just a resistor

523
00:17:09,839 --> 00:17:11,760
anything like that all the resistors

524
00:17:11,760 --> 00:17:13,199
aren't chips but ics and

525
00:17:13,199 --> 00:17:14,480
processors things like that generally

526
00:17:14,480 --> 00:17:15,919
that's what i'm referring to basically

527
00:17:15,919 --> 00:17:17,439
if you ever see a little black box on a

528
00:17:17,439 --> 00:17:18,720
circuit board

529
00:17:18,720 --> 00:17:20,959
that's what i'm talking about but yeah

530
00:17:20,959 --> 00:17:22,720
they don't come pre-programmed obviously

531
00:17:22,720 --> 00:17:25,280
because they're not device specific most

532
00:17:25,280 --> 00:17:26,480
of them

533
00:17:26,480 --> 00:17:27,839
so people need to put the code on some

534
00:17:27,839 --> 00:17:29,600
hair so you have debug interfaces both

535
00:17:29,600 --> 00:17:29,919
for

536
00:17:29,919 --> 00:17:32,320
loading data interacting with the device

537
00:17:32,320 --> 00:17:33,440
or debugging it

538
00:17:33,440 --> 00:17:36,000
like with gdb even there's a lot of

539
00:17:36,000 --> 00:17:37,679
common

540
00:17:37,679 --> 00:17:40,720
formats we'll get into that later but

541
00:17:40,720 --> 00:17:42,799
the most common hardware communication

542
00:17:42,799 --> 00:17:43,919
protocols

543
00:17:43,919 --> 00:17:47,600
are j uart i squared c or i 2c if you

544
00:17:47,600 --> 00:17:48,240
want

545
00:17:48,240 --> 00:17:51,280
and spi or spy

546
00:17:51,280 --> 00:17:53,039
in this presentation i'm going to talk

547
00:17:53,039 --> 00:17:54,480
about you are in jtag

548
00:17:54,480 --> 00:17:56,080
because that's kind of what's most

549
00:17:56,080 --> 00:17:57,679
interesting in the quick and dirty

550
00:17:57,679 --> 00:17:59,280
hardware hacking

551
00:17:59,280 --> 00:18:02,400
realm but if you want to get into more

552
00:18:02,400 --> 00:18:03,760
electronics development like playing

553
00:18:03,760 --> 00:18:05,440
with arduinos or raspberry pi's and all

554
00:18:05,440 --> 00:18:07,200
that kind of stuff on the hardware side

555
00:18:07,200 --> 00:18:09,840
um learning about ice create tea and spi

556
00:18:09,840 --> 00:18:10,320
are

557
00:18:10,320 --> 00:18:12,720
great highly recommend watching a few

558
00:18:12,720 --> 00:18:14,720
youtube videos and you'll be caught up

559
00:18:14,720 --> 00:18:15,919
they're really simple you know they're

560
00:18:15,919 --> 00:18:18,240
based in hardware so there's not a ton

561
00:18:18,240 --> 00:18:20,400
of abstraction there

562
00:18:20,400 --> 00:18:22,080
and we'll get into all these things

563
00:18:22,080 --> 00:18:24,399
later

564
00:18:25,120 --> 00:18:27,760
as i mentioned briefly before sometimes

565
00:18:27,760 --> 00:18:28,960
if you

566
00:18:28,960 --> 00:18:31,039
open up enough devices and get familiar

567
00:18:31,039 --> 00:18:32,480
with hardware there's some things you

568
00:18:32,480 --> 00:18:33,919
can just identify just by looking at

569
00:18:33,919 --> 00:18:34,480
them

570
00:18:34,480 --> 00:18:35,840
and i thought i'd cover some of the

571
00:18:35,840 --> 00:18:37,919
quick ones

572
00:18:37,919 --> 00:18:40,720
so this for example are all pictures

573
00:18:40,720 --> 00:18:41,120
from

574
00:18:41,120 --> 00:18:44,799
a router and a wi-fi camera

575
00:18:44,799 --> 00:18:46,160
they're mixed in it doesn't really

576
00:18:46,160 --> 00:18:47,919
matter

577
00:18:47,919 --> 00:18:49,919
but what i look for at least when i open

578
00:18:49,919 --> 00:18:51,440
the device the first thing is debug

579
00:18:51,440 --> 00:18:52,880
interfaces

580
00:18:52,880 --> 00:18:55,200
you can see these things right here

581
00:18:55,200 --> 00:18:56,080
these four pin

582
00:18:56,080 --> 00:18:57,360
pins in a row and we'll get into the

583
00:18:57,360 --> 00:18:58,880
specifications of each debug interface

584
00:18:58,880 --> 00:18:59,600
later

585
00:18:59,600 --> 00:19:02,080
but there's more examples here sometimes

586
00:19:02,080 --> 00:19:03,440
you have headers soldered in this is a

587
00:19:03,440 --> 00:19:04,960
great sign this is they did a lot of

588
00:19:04,960 --> 00:19:06,960
work for us

589
00:19:06,960 --> 00:19:11,440
some open pins two three

590
00:19:11,440 --> 00:19:13,919
ten four it doesn't matter these kind of

591
00:19:13,919 --> 00:19:15,760
exposed pins are always a great thing to

592
00:19:15,760 --> 00:19:17,039
see

593
00:19:17,039 --> 00:19:19,760
um that means it's probably it might be

594
00:19:19,760 --> 00:19:21,600
at least a debug interface and

595
00:19:21,600 --> 00:19:23,120
again later in this presentation we'll

596
00:19:23,120 --> 00:19:24,720
get into how to

597
00:19:24,720 --> 00:19:26,799
walk through finding out what each pin

598
00:19:26,799 --> 00:19:28,960
does or if it is indeed a certain debug

599
00:19:28,960 --> 00:19:30,559
interface you are jtag anything like

600
00:19:30,559 --> 00:19:31,600
that

601
00:19:31,600 --> 00:19:34,160
and so that's always great to look at

602
00:19:34,160 --> 00:19:35,679
the second thing

603
00:19:35,679 --> 00:19:38,480
is some sort of storage because you can

604
00:19:38,480 --> 00:19:38,880
do

605
00:19:38,880 --> 00:19:39,919
you don't even have to power on the

606
00:19:39,919 --> 00:19:41,280
hardware sometimes to get the firmware

607
00:19:41,280 --> 00:19:41,919
off of it

608
00:19:41,919 --> 00:19:43,600
you can just dump it off the chip itself

609
00:19:43,600 --> 00:19:45,919
and kind of as i've been saying over and

610
00:19:45,919 --> 00:19:46,480
over again

611
00:19:46,480 --> 00:19:47,440
i'll cover that later in the

612
00:19:47,440 --> 00:19:49,760
presentation but something like this

613
00:19:49,760 --> 00:19:51,360
where you have the little leg sticking

614
00:19:51,360 --> 00:19:53,360
on each side of a rectangular chip

615
00:19:53,360 --> 00:19:55,840
most likely a flash chip and that's

616
00:19:55,840 --> 00:19:56,880
great to see

617
00:19:56,880 --> 00:19:59,840
in the the tsop package alternatively

618
00:19:59,840 --> 00:20:01,280
you can also have a flash ship in a

619
00:20:01,280 --> 00:20:02,880
different package which i don't think i

620
00:20:02,880 --> 00:20:05,039
have on this slide

621
00:20:05,039 --> 00:20:07,360
this looks like one but isn't we'll get

622
00:20:07,360 --> 00:20:08,320
into that

623
00:20:08,320 --> 00:20:11,120
oh yeah sorry all over the place but

624
00:20:11,120 --> 00:20:11,520
this

625
00:20:11,520 --> 00:20:14,159
is a diagram of or a picture of the most

626
00:20:14,159 --> 00:20:14,880
common

627
00:20:14,880 --> 00:20:17,280
package types so when you see these kind

628
00:20:17,280 --> 00:20:18,799
of chips like this one has long legs

629
00:20:18,799 --> 00:20:20,320
sticking out short legs

630
00:20:20,320 --> 00:20:23,760
no legs apparently they all electrically

631
00:20:23,760 --> 00:20:24,480
work the same

632
00:20:24,480 --> 00:20:26,480
there's basically a wire or a trace in

633
00:20:26,480 --> 00:20:28,640
the pcb that goes to a component

634
00:20:28,640 --> 00:20:32,559
for communication for spatial reasons

635
00:20:32,559 --> 00:20:35,760
and other like physical reasons uh chips

636
00:20:35,760 --> 00:20:36,799
are designed differently

637
00:20:36,799 --> 00:20:38,000
with a lot of through-hole things you

638
00:20:38,000 --> 00:20:40,320
have dip bga

639
00:20:40,320 --> 00:20:42,720
is when the there's little solder balls

640
00:20:42,720 --> 00:20:44,799
under the surface of the chip

641
00:20:44,799 --> 00:20:46,559
that's really space efficient you have

642
00:20:46,559 --> 00:20:48,480
sop there's like tsop

643
00:20:48,480 --> 00:20:51,760
qfn qfp don't worry about memorizing

644
00:20:51,760 --> 00:20:53,039
anything like this but

645
00:20:53,039 --> 00:20:55,120
you'll see that chips look differently

646
00:20:55,120 --> 00:20:56,799
and that's okay they're not

647
00:20:56,799 --> 00:20:59,760
anything different aside from bga they

648
00:20:59,760 --> 00:21:00,240
really

649
00:21:00,240 --> 00:21:02,320
all have the legs sticking out in some

650
00:21:02,320 --> 00:21:03,840
degree so you can slaughter to them or

651
00:21:03,840 --> 00:21:04,720
poke at them

652
00:21:04,720 --> 00:21:07,440
with a multimeter but let's move on to

653
00:21:07,440 --> 00:21:08,960
different components

654
00:21:08,960 --> 00:21:11,600
this little block of shiny metal is an

655
00:21:11,600 --> 00:21:12,559
rf shield

656
00:21:12,559 --> 00:21:15,120
usually you have things well rf as radio

657
00:21:15,120 --> 00:21:17,600
frequency things that generate

658
00:21:17,600 --> 00:21:19,280
rf are usually housed in these for

659
00:21:19,280 --> 00:21:21,280
protection both for themselves and for

660
00:21:21,280 --> 00:21:22,320
other components

661
00:21:22,320 --> 00:21:23,919
they can be in all sorts of shapes and

662
00:21:23,919 --> 00:21:25,919
sizes some of them are removable you'll

663
00:21:25,919 --> 00:21:26,559
see little

664
00:21:26,559 --> 00:21:28,080
kind of clips to hold it in place and

665
00:21:28,080 --> 00:21:29,280
you can just take a set of tweezers or

666
00:21:29,280 --> 00:21:30,080
even your fingers

667
00:21:30,080 --> 00:21:31,840
and pluck it off and look under

668
00:21:31,840 --> 00:21:33,760
sometimes they're soldered down

669
00:21:33,760 --> 00:21:36,640
if you want you can just cut them off or

670
00:21:36,640 --> 00:21:38,640
pry them out

671
00:21:38,640 --> 00:21:41,760
not super important also on the fcc id

672
00:21:41,760 --> 00:21:42,720
as we mentioned

673
00:21:42,720 --> 00:21:44,960
when you look up the fcc id a lot of the

674
00:21:44,960 --> 00:21:47,760
images will have the rf shields removed

675
00:21:47,760 --> 00:21:50,640
for the registration purposes and you'll

676
00:21:50,640 --> 00:21:52,240
know whether or not you need to rip the

677
00:21:52,240 --> 00:21:54,240
shield off or not

678
00:21:54,240 --> 00:21:56,559
another thing to look for is these kind

679
00:21:56,559 --> 00:21:57,520
of

680
00:21:57,520 --> 00:22:00,480
adapters as labeled they say wi-fi these

681
00:22:00,480 --> 00:22:01,840
are the same picture just with and

682
00:22:01,840 --> 00:22:03,200
without this cable

683
00:22:03,200 --> 00:22:05,360
i believe they're called mcx connectors

684
00:22:05,360 --> 00:22:07,200
and they're usually for antennas

685
00:22:07,200 --> 00:22:08,720
phones have these on the inside both

686
00:22:08,720 --> 00:22:10,480
android and iphones

687
00:22:10,480 --> 00:22:12,559
you will see if you open it up i guess

688
00:22:12,559 --> 00:22:14,159
not anymore because we have glass backs

689
00:22:14,159 --> 00:22:15,280
but the older ones

690
00:22:15,280 --> 00:22:18,000
if you open them up you'll see this kind

691
00:22:18,000 --> 00:22:19,679
of wire and they just pluck off really

692
00:22:19,679 --> 00:22:21,520
easily a set of tweezers is great if you

693
00:22:21,520 --> 00:22:22,559
don't want to bend it

694
00:22:22,559 --> 00:22:24,240
but this generally indicates that that's

695
00:22:24,240 --> 00:22:25,679
where the antenna connects and you can

696
00:22:25,679 --> 00:22:28,960
pop those off really easily um

697
00:22:28,960 --> 00:22:32,000
this is a as we saw in the earlier size

698
00:22:32,000 --> 00:22:36,159
a flash floor is chip

699
00:22:36,240 --> 00:22:38,159
we'll talk about those later and then

700
00:22:38,159 --> 00:22:40,159
these big blocks the

701
00:22:40,159 --> 00:22:42,080
bga style ones where the pins are under

702
00:22:42,080 --> 00:22:43,200
there with usually

703
00:22:43,200 --> 00:22:45,280
lots of pcb traces or connections

704
00:22:45,280 --> 00:22:46,880
running to them those are usually the

705
00:22:46,880 --> 00:22:47,520
cpu

706
00:22:47,520 --> 00:22:51,840
or some component like that

707
00:22:52,480 --> 00:22:54,880
okay let's let's get into our first

708
00:22:54,880 --> 00:22:56,799
communication protocol with hardware

709
00:22:56,799 --> 00:22:58,880
as i mentioned there are these things

710
00:22:58,880 --> 00:23:01,039
called debug ports debug pins

711
00:23:01,039 --> 00:23:04,720
or interfaces and

712
00:23:04,720 --> 00:23:06,960
really all they are just little circles

713
00:23:06,960 --> 00:23:09,039
of metal connected over a wire to the

714
00:23:09,039 --> 00:23:09,919
processor

715
00:23:09,919 --> 00:23:11,440
it's great knowing that they exist but

716
00:23:11,440 --> 00:23:13,039
you need to know how to interface with

717
00:23:13,039 --> 00:23:14,000
them

718
00:23:14,000 --> 00:23:16,159
the one of the most common ones is you

719
00:23:16,159 --> 00:23:18,000
are or universal asynchronous receiver

720
00:23:18,000 --> 00:23:19,280
transmitter

721
00:23:19,280 --> 00:23:22,400
it's super simple and bare bones this is

722
00:23:22,400 --> 00:23:23,280
a little

723
00:23:23,280 --> 00:23:25,440
excuse my um terrible powerpoint drawing

724
00:23:25,440 --> 00:23:26,559
skills but

725
00:23:26,559 --> 00:23:28,799
uh just a little diagram i mocked up one

726
00:23:28,799 --> 00:23:29,600
of these

727
00:23:29,600 --> 00:23:32,000
in this image is the host device and one

728
00:23:32,000 --> 00:23:35,360
of them we can call like a client

729
00:23:35,360 --> 00:23:37,520
in this case we can pretend this is our

730
00:23:37,520 --> 00:23:40,640
hardware and this is our adapter

731
00:23:40,640 --> 00:23:42,720
there's a thing called vcc which is

732
00:23:42,720 --> 00:23:44,880
voltage um 5 volts 3 volts doesn't

733
00:23:44,880 --> 00:23:45,600
matter

734
00:23:45,600 --> 00:23:47,679
basically for our purposes with hardware

735
00:23:47,679 --> 00:23:49,200
hacking you just always want to ignore

736
00:23:49,200 --> 00:23:50,720
this and i'll mention this again later

737
00:23:50,720 --> 00:23:51,520
on

738
00:23:51,520 --> 00:23:53,440
when it becomes a little more important

739
00:23:53,440 --> 00:23:54,640
but for right now let's worry about

740
00:23:54,640 --> 00:23:55,760
these three which is tx

741
00:23:55,760 --> 00:23:58,559
rx and gnd g and d is ground if you know

742
00:23:58,559 --> 00:24:00,240
stuff about

743
00:24:00,240 --> 00:24:03,039
electricity and circuits ground is kind

744
00:24:03,039 --> 00:24:04,640
of a shared thing

745
00:24:04,640 --> 00:24:07,919
it just kind of needs to exist sometimes

746
00:24:07,919 --> 00:24:10,559
like when you have uh two pins they

747
00:24:10,559 --> 00:24:12,320
won't break out ground for you because

748
00:24:12,320 --> 00:24:13,919
you know you can just find one oh here

749
00:24:13,919 --> 00:24:15,760
it's even labeled but a lot of cases

750
00:24:15,760 --> 00:24:17,360
you'll see three pins for you are or

751
00:24:17,360 --> 00:24:18,000
four pins

752
00:24:18,000 --> 00:24:20,799
this is five or four pins uh usually

753
00:24:20,799 --> 00:24:21,440
ground

754
00:24:21,440 --> 00:24:24,960
rxtx where ground is square

755
00:24:24,960 --> 00:24:28,640
uh but you are um tx sorry i forgot to

756
00:24:28,640 --> 00:24:30,000
mention tx and rx

757
00:24:30,000 --> 00:24:33,840
stand for transmit and receive

758
00:24:34,000 --> 00:24:36,080
you don't hook up as a what might seem

759
00:24:36,080 --> 00:24:37,600
natural transmit to transmit

760
00:24:37,600 --> 00:24:39,039
because that's essentially like two

761
00:24:39,039 --> 00:24:40,880
people talking at the same time

762
00:24:40,880 --> 00:24:43,120
you want to hook up the transmit to the

763
00:24:43,120 --> 00:24:44,400
other devices receive

764
00:24:44,400 --> 00:24:45,760
and one device is transmit to the other

765
00:24:45,760 --> 00:24:47,760
ones received so they can talk

766
00:24:47,760 --> 00:24:52,159
at the same time or asynchronously

767
00:24:52,159 --> 00:24:55,840
and and if you um don't want to talk to

768
00:24:55,840 --> 00:24:57,200
the device you can always just not

769
00:24:57,200 --> 00:25:00,240
hook up your transmit connection

770
00:25:00,240 --> 00:25:03,760
it's depends on what you're doing

771
00:25:03,919 --> 00:25:06,000
and uh oh yeah sorry um baud rate is

772
00:25:06,000 --> 00:25:09,440
important so whenever uart is mentioned

773
00:25:09,440 --> 00:25:10,480
there's always the question of what

774
00:25:10,480 --> 00:25:12,720
battery it's talking at baud rate is the

775
00:25:12,720 --> 00:25:15,600
communication speed um basically how

776
00:25:15,600 --> 00:25:17,520
many bits per second can it send

777
00:25:17,520 --> 00:25:19,360
and it's important to know because if

778
00:25:19,360 --> 00:25:20,799
you're listening

779
00:25:20,799 --> 00:25:22,320
at a certain speed and the device is

780
00:25:22,320 --> 00:25:23,440
talking at a different one all you're

781
00:25:23,440 --> 00:25:26,159
going to get is garbled information

782
00:25:26,159 --> 00:25:30,640
this is a capture from a logic and eliza

783
00:25:30,640 --> 00:25:33,600
sorry i use the logic analyzer on a

784
00:25:33,600 --> 00:25:35,039
router's uart interface

785
00:25:35,039 --> 00:25:37,279
to kind of show what um what the

786
00:25:37,279 --> 00:25:38,960
protocol looks like visualized

787
00:25:38,960 --> 00:25:41,760
this is the this is essentially a

788
00:25:41,760 --> 00:25:42,640
recording

789
00:25:42,640 --> 00:25:45,360
of the device's transmit pin and you can

790
00:25:45,360 --> 00:25:46,000
see

791
00:25:46,000 --> 00:25:48,960
uart usually hangs around 2.5 volts or 5

792
00:25:48,960 --> 00:25:50,080
volts sometimes

793
00:25:50,080 --> 00:25:51,919
and it drops it low to send data which

794
00:25:51,919 --> 00:25:53,600
is kind of uncommon

795
00:25:53,600 --> 00:25:55,919
which is good to know in this case you

796
00:25:55,919 --> 00:25:58,000
can see these little waves

797
00:25:58,000 --> 00:25:59,919
that's the actual transmissions by

798
00:25:59,919 --> 00:26:03,520
dropping staying up at five volts here

799
00:26:03,520 --> 00:26:05,840
is a zero and dropping down to zero

800
00:26:05,840 --> 00:26:07,919
volts or roughly zero volts

801
00:26:07,919 --> 00:26:10,960
is a binary one and in this case this

802
00:26:10,960 --> 00:26:12,080
little

803
00:26:12,080 --> 00:26:14,080
section of signals makes this hex

804
00:26:14,080 --> 00:26:15,520
character which decodes to

805
00:26:15,520 --> 00:26:17,039
an ascii value i don't remember off the

806
00:26:17,039 --> 00:26:19,120
top of my head and the width of these

807
00:26:19,120 --> 00:26:22,240
is so this one determines also part of

808
00:26:22,240 --> 00:26:23,120
the message

809
00:26:23,120 --> 00:26:25,600
so this would be two ones in a row while

810
00:26:25,600 --> 00:26:26,720
this is a zero

811
00:26:26,720 --> 00:26:29,760
this is a one this is a zero

812
00:26:29,760 --> 00:26:32,799
things like that and by changing

813
00:26:32,799 --> 00:26:34,960
what those zeros and ones are that's

814
00:26:34,960 --> 00:26:36,000
just binary

815
00:26:36,000 --> 00:26:37,919
translates to hex in this case an ascii

816
00:26:37,919 --> 00:26:39,279
character it doesn't have to be ascii

817
00:26:39,279 --> 00:26:40,000
data

818
00:26:40,000 --> 00:26:41,919
in this case it's just transmitting the

819
00:26:41,919 --> 00:26:43,200
uh boot log

820
00:26:43,200 --> 00:26:44,720
of the device we'll we'll talk about

821
00:26:44,720 --> 00:26:46,320
that later of course

822
00:26:46,320 --> 00:26:48,960
uh and the baud array is how often this

823
00:26:48,960 --> 00:26:50,559
is happening so how often it cycles

824
00:26:50,559 --> 00:26:53,039
between zero and one for a message

825
00:26:53,039 --> 00:26:54,799
and it would get confusing if you're

826
00:26:54,799 --> 00:26:56,640
going at twice the baud rate

827
00:26:56,640 --> 00:26:58,799
the messages would end at the halfway

828
00:26:58,799 --> 00:27:01,679
point and the devices would get confused

829
00:27:01,679 --> 00:27:05,840
if this was confusing i apologize but

830
00:27:05,840 --> 00:27:07,279
with anything this presentation if

831
00:27:07,279 --> 00:27:08,799
there's something i didn't cover

832
00:27:08,799 --> 00:27:11,279
well enough please do search it up or

833
00:27:11,279 --> 00:27:12,880
find me online and ask me i'd be more

834
00:27:12,880 --> 00:27:13,919
happy to

835
00:27:13,919 --> 00:27:18,559
explain in a more casual setting but

836
00:27:18,559 --> 00:27:20,880
there's tons of tutorials even not in

837
00:27:20,880 --> 00:27:22,480
the hardware hacking area just for

838
00:27:22,480 --> 00:27:24,159
people working with electronics

839
00:27:24,159 --> 00:27:25,840
a lot of people explain it really well

840
00:27:25,840 --> 00:27:27,679
in a lot more depth and cover in more

841
00:27:27,679 --> 00:27:28,640
time

842
00:27:28,640 --> 00:27:30,640
but i apologize if this was not clear

843
00:27:30,640 --> 00:27:31,840
enough

844
00:27:31,840 --> 00:27:33,760
but let's say hopefully it was clear and

845
00:27:33,760 --> 00:27:36,320
we'll move on to how to use it

846
00:27:36,320 --> 00:27:39,360
when now that you know what uart is that

847
00:27:39,360 --> 00:27:40,880
doesn't really mean you know what to do

848
00:27:40,880 --> 00:27:43,360
with the hardware so in this case

849
00:27:43,360 --> 00:27:45,760
i have some pins that i soldered onto

850
00:27:45,760 --> 00:27:46,480
this router

851
00:27:46,480 --> 00:27:49,520
for the debug pins i in theory don't

852
00:27:49,520 --> 00:27:50,799
know what they are just by looking at

853
00:27:50,799 --> 00:27:52,240
them they're visually the same

854
00:27:52,240 --> 00:27:54,720
for the most part though the pins

855
00:27:54,720 --> 00:27:55,840
themselves are the same but there are

856
00:27:55,840 --> 00:27:57,520
some clues we can look into

857
00:27:57,520 --> 00:27:58,880
in this case we're going to try and

858
00:27:58,880 --> 00:28:01,360
identify the four pins of a uart

859
00:28:01,360 --> 00:28:02,240
connection

860
00:28:02,240 --> 00:28:04,240
with no external tools except a

861
00:28:04,240 --> 00:28:05,520
multimeter

862
00:28:05,520 --> 00:28:07,600
if you're not familiar hopefully you are

863
00:28:07,600 --> 00:28:09,120
because you know some electronics basics

864
00:28:09,120 --> 00:28:11,039
but the multimeter can measure voltage

865
00:28:11,039 --> 00:28:12,960
amperage and tell if two

866
00:28:12,960 --> 00:28:14,720
pins connect or two points on a circuit

867
00:28:14,720 --> 00:28:16,480
board connect that's what's going to be

868
00:28:16,480 --> 00:28:18,480
super useful for this one

869
00:28:18,480 --> 00:28:22,080
these are some kind of random tips

870
00:28:22,080 --> 00:28:23,919
when you see just pads on a circuit

871
00:28:23,919 --> 00:28:25,919
board like this

872
00:28:25,919 --> 00:28:29,200
if it's square it usually means that's

873
00:28:29,200 --> 00:28:30,480
the ground connection

874
00:28:30,480 --> 00:28:32,720
some manufacturers like to switch it

875
00:28:32,720 --> 00:28:34,480
sometimes so it's worth double checking

876
00:28:34,480 --> 00:28:36,159
but if you want to just eyeball it if

877
00:28:36,159 --> 00:28:37,520
you see a square pad it's

878
00:28:37,520 --> 00:28:41,679
probably ground but always double check

879
00:28:41,679 --> 00:28:44,720
and for continuity questions like an rf

880
00:28:44,720 --> 00:28:45,760
shield

881
00:28:45,760 --> 00:28:47,440
will always be grounded basically any

882
00:28:47,440 --> 00:28:48,880
exposed metal on

883
00:28:48,880 --> 00:28:51,039
a circuit board is going to be grounded

884
00:28:51,039 --> 00:28:51,919
hopefully

885
00:28:51,919 --> 00:28:53,440
whether that's like an antenna connector

886
00:28:53,440 --> 00:28:55,039
or the rf shield

887
00:28:55,039 --> 00:28:57,440
or like the um outside of a barrel jack

888
00:28:57,440 --> 00:28:59,200
connector

889
00:28:59,200 --> 00:29:00,240
you know that there's going to be a

890
00:29:00,240 --> 00:29:01,360
ground connection it's the easiest one

891
00:29:01,360 --> 00:29:02,799
to find so if you put

892
00:29:02,799 --> 00:29:05,440
your multimeter in continuity mode and

893
00:29:05,440 --> 00:29:06,240
put one

894
00:29:06,240 --> 00:29:09,039
lead or probe on the rf shield and just

895
00:29:09,039 --> 00:29:10,640
kind of go through all these pins

896
00:29:10,640 --> 00:29:12,320
you'll find out which ones are ground if

897
00:29:12,320 --> 00:29:14,080
you have a multimeter that beeps it'll

898
00:29:14,080 --> 00:29:14,480
beep

899
00:29:14,480 --> 00:29:15,520
to tell you that that's a ground

900
00:29:15,520 --> 00:29:19,120
connection vcc which is the voltage pin

901
00:29:19,120 --> 00:29:20,960
the trace is usually a little thicker or

902
00:29:20,960 --> 00:29:22,640
these connections in the

903
00:29:22,640 --> 00:29:24,320
circuit board itself because it actually

904
00:29:24,320 --> 00:29:25,840
has to carry power and for

905
00:29:25,840 --> 00:29:28,159
physical reasons you want you don't want

906
00:29:28,159 --> 00:29:30,880
the wire to be too thin

907
00:29:30,880 --> 00:29:32,640
but in in our cases we kind of want to

908
00:29:32,640 --> 00:29:34,640
ignore that it's also easy to use with a

909
00:29:34,640 --> 00:29:36,480
multimeter so if you want to put your

910
00:29:36,480 --> 00:29:38,320
one lead on an rf shield or the ground

911
00:29:38,320 --> 00:29:39,679
pin once you identify it

912
00:29:39,679 --> 00:29:41,360
and use the other one to measure these

913
00:29:41,360 --> 00:29:42,960
you are when the device is powered up

914
00:29:42,960 --> 00:29:43,600
and sending

915
00:29:43,600 --> 00:29:45,840
as we mentioned fluctuates voltages

916
00:29:45,840 --> 00:29:47,600
while vcc will just stay

917
00:29:47,600 --> 00:29:50,159
stable at some voltage like 3.3 volts 5

918
00:29:50,159 --> 00:29:50,880
volts

919
00:29:50,880 --> 00:29:53,760
12 volts for some reason may happen but

920
00:29:53,760 --> 00:29:55,200
it would say like that

921
00:29:55,200 --> 00:29:57,200
and let's say we have a four pin

922
00:29:57,200 --> 00:29:58,320
connector like

923
00:29:58,320 --> 00:30:00,320
over here and we found out this square

924
00:30:00,320 --> 00:30:01,360
pin is ground

925
00:30:01,360 --> 00:30:03,279
let's say this pin over here is vcc and

926
00:30:03,279 --> 00:30:05,279
there's two left and that's rx and tx

927
00:30:05,279 --> 00:30:08,320
like we see in this diagram you

928
00:30:08,320 --> 00:30:09,840
don't really need any fancy ways to

929
00:30:09,840 --> 00:30:11,520
figure out what they are

930
00:30:11,520 --> 00:30:13,600
if you if you know the baud rate you

931
00:30:13,600 --> 00:30:15,120
just plug them in at random

932
00:30:15,120 --> 00:30:18,159
and you get garble info uh to unplug

933
00:30:18,159 --> 00:30:18,960
them

934
00:30:18,960 --> 00:30:21,120
switch them around backwards and you

935
00:30:21,120 --> 00:30:22,240
probably got them right

936
00:30:22,240 --> 00:30:23,279
assuming you know the baud rate of

937
00:30:23,279 --> 00:30:25,520
course there are some tools and a script

938
00:30:25,520 --> 00:30:27,600
i will share that not that i didn't make

939
00:30:27,600 --> 00:30:29,679
a very famous one called bauderate.pi

940
00:30:29,679 --> 00:30:30,960
that just goes through all the possible

941
00:30:30,960 --> 00:30:32,159
baud rates and you see which one is

942
00:30:32,159 --> 00:30:33,679
human readable text

943
00:30:33,679 --> 00:30:37,039
if you just flip your rx to tx pins

944
00:30:37,039 --> 00:30:38,320
every time you

945
00:30:38,320 --> 00:30:40,640
check you're bound together across the

946
00:30:40,640 --> 00:30:42,480
right combination

947
00:30:42,480 --> 00:30:44,080
of course this isn't the most optimal

948
00:30:44,080 --> 00:30:45,760
way but this is for

949
00:30:45,760 --> 00:30:47,600
you know the cheapest possible way to

950
00:30:47,600 --> 00:30:49,120
figure out what the uart pins are

951
00:30:49,120 --> 00:30:51,840
responsible for

952
00:30:52,320 --> 00:30:54,559
another way of doing this is with logic

953
00:30:54,559 --> 00:30:55,600
analyzers

954
00:30:55,600 --> 00:30:58,159
in this case i'm using a celiae very

955
00:30:58,159 --> 00:30:59,360
expensive

956
00:30:59,360 --> 00:31:01,840
16 channel logic analyzer you do not

957
00:31:01,840 --> 00:31:03,519
need one of these for this

958
00:31:03,519 --> 00:31:05,919
if you can see here is a chart a little

959
00:31:05,919 --> 00:31:06,799
drop down menu

960
00:31:06,799 --> 00:31:09,919
it says 500 ms slash s

961
00:31:09,919 --> 00:31:13,440
that's 500 mega samples a second um

962
00:31:13,440 --> 00:31:15,360
that's a lot of data sampling it will

963
00:31:15,360 --> 00:31:16,880
fill up your ram with data

964
00:31:16,880 --> 00:31:18,480
you don't need this for identifying you

965
00:31:18,480 --> 00:31:20,240
work i dropped it down to 20 mega

966
00:31:20,240 --> 00:31:21,200
samples a second

967
00:31:21,200 --> 00:31:24,399
that's still a lot um a lot of

968
00:31:24,399 --> 00:31:26,799
cheaper logic analyzers you can find

969
00:31:26,799 --> 00:31:29,279
some for like even 15

970
00:31:29,279 --> 00:31:31,360
will not support 500 mega samples a

971
00:31:31,360 --> 00:31:33,039
second but you also don't need it if

972
00:31:33,039 --> 00:31:34,559
you're just trying to find out

973
00:31:34,559 --> 00:31:38,080
what like which uart pin is which

974
00:31:38,080 --> 00:31:39,440
but in this case i have this tool

975
00:31:39,440 --> 00:31:40,960
available to me and it makes pretty

976
00:31:40,960 --> 00:31:42,559
graphs so

977
00:31:42,559 --> 00:31:44,640
happy to use it this is actually the

978
00:31:44,640 --> 00:31:46,399
same thing that i screenshotted earlier

979
00:31:46,399 --> 00:31:47,840
to show what the uart protocol looks

980
00:31:47,840 --> 00:31:48,640
like

981
00:31:48,640 --> 00:31:52,000
if you see here i have hooked up um

982
00:31:52,000 --> 00:31:53,360
five connectors because it was a five

983
00:31:53,360 --> 00:31:55,120
pin breakout i found out that the

984
00:31:55,120 --> 00:31:56,320
rightmost one

985
00:31:56,320 --> 00:31:58,559
see in this picture was ground so i'm

986
00:31:58,559 --> 00:32:00,640
just looking at these four

987
00:32:00,640 --> 00:32:02,080
because i want to figure out what rx and

988
00:32:02,080 --> 00:32:04,799
tx are and so by just hooking up four

989
00:32:04,799 --> 00:32:06,640
leads to the oscilloscope

990
00:32:06,640 --> 00:32:08,559
i can see my channels here so this is

991
00:32:08,559 --> 00:32:11,120
wire one two three and four

992
00:32:11,120 --> 00:32:12,960
i kind of knew this beforehand but let's

993
00:32:12,960 --> 00:32:14,480
let's pretend that this information is

994
00:32:14,480 --> 00:32:16,480
not here like showing which one's which

995
00:32:16,480 --> 00:32:18,640
you can see channel 0 or the first

996
00:32:18,640 --> 00:32:19,840
connection stays at

997
00:32:19,840 --> 00:32:23,360
0 volts the entire time and channels

998
00:32:23,360 --> 00:32:25,919
1 and 3 stay at their positive voltage

999
00:32:25,919 --> 00:32:27,200
the entire time

1000
00:32:27,200 --> 00:32:29,279
and channel 2 is all over the place and

1001
00:32:29,279 --> 00:32:30,640
very nice square waves

1002
00:32:30,640 --> 00:32:32,320
so for starters channel 2 is a great

1003
00:32:32,320 --> 00:32:34,640
indicator of being the device's transmit

1004
00:32:34,640 --> 00:32:36,080
pin because it's obviously transmitting

1005
00:32:36,080 --> 00:32:36,640
data

1006
00:32:36,640 --> 00:32:38,240
and it happens to decode to a human

1007
00:32:38,240 --> 00:32:39,840
readable boot log if you can see over

1008
00:32:39,840 --> 00:32:41,600
here

1009
00:32:41,600 --> 00:32:43,600
channels one and three are our best bet

1010
00:32:43,600 --> 00:32:45,600
at the device's transmit pin

1011
00:32:45,600 --> 00:32:48,159
because it will stay high at the zero as

1012
00:32:48,159 --> 00:32:49,679
nothing is transmitting to it the pin is

1013
00:32:49,679 --> 00:32:50,240
just kind of

1014
00:32:50,240 --> 00:32:51,760
by itself on the board the logic

1015
00:32:51,760 --> 00:32:53,120
analyzer will not transmit to it it's

1016
00:32:53,120 --> 00:32:55,039
only receiving

1017
00:32:55,039 --> 00:32:56,240
so if you're trying to find out which

1018
00:32:56,240 --> 00:32:58,159
one the device's receive pin is you

1019
00:32:58,159 --> 00:32:59,200
could just switch between

1020
00:32:59,200 --> 00:33:01,200
uh one and three and you'll find out

1021
00:33:01,200 --> 00:33:02,559
which one's right by if it

1022
00:33:02,559 --> 00:33:04,320
um you know if you can interact with the

1023
00:33:04,320 --> 00:33:06,240
device

1024
00:33:06,240 --> 00:33:09,039
but we can see here the um the boot log

1025
00:33:09,039 --> 00:33:10,000
in this case

1026
00:33:10,000 --> 00:33:11,919
it dumps you to the bootloader if you

1027
00:33:11,919 --> 00:33:13,840
see press any key to stop auto boot then

1028
00:33:13,840 --> 00:33:15,120
you can just quickly start hitting as

1029
00:33:15,120 --> 00:33:16,399
many keys as possible

1030
00:33:16,399 --> 00:33:18,080
and with a lot of devices if they're on

1031
00:33:18,080 --> 00:33:19,600
youboot for example you'll be dropped

1032
00:33:19,600 --> 00:33:20,799
into the yuboot shell

1033
00:33:20,799 --> 00:33:22,559
and you can do a lot of great stuff but

1034
00:33:22,559 --> 00:33:24,799
i won't get into that

1035
00:33:24,799 --> 00:33:26,799
one of the most common ones would be to

1036
00:33:26,799 --> 00:33:28,159
dump the firmware over

1037
00:33:28,159 --> 00:33:30,399
your serial connection which can be

1038
00:33:30,399 --> 00:33:31,279
really slow

1039
00:33:31,279 --> 00:33:33,200
because like the baud rate we mentioned

1040
00:33:33,200 --> 00:33:34,559
if the baud rate is one of the most

1041
00:33:34,559 --> 00:33:36,960
common ones which is 115 200

1042
00:33:36,960 --> 00:33:40,320
you're transmitting 115 200

1043
00:33:40,320 --> 00:33:43,919
bits per second which is not a lot

1044
00:33:43,919 --> 00:33:46,799
um at least for current times so be wary

1045
00:33:46,799 --> 00:33:47,519
of that

1046
00:33:47,519 --> 00:33:49,200
but again as i've been saying a lot

1047
00:33:49,200 --> 00:33:51,679
we'll worry about that later

1048
00:33:51,679 --> 00:33:53,360
another tool we can use for you are

1049
00:33:53,360 --> 00:33:55,600
funny enough is the jtagulator

1050
00:33:55,600 --> 00:33:57,760
this is built for working with jtag

1051
00:33:57,760 --> 00:33:59,760
which i will mention later in this

1052
00:33:59,760 --> 00:34:00,880
presentation

1053
00:34:00,880 --> 00:34:02,640
but it also does support working with

1054
00:34:02,640 --> 00:34:04,799
uart in this case it's

1055
00:34:04,799 --> 00:34:07,039
the jtagler jtagulator has its pins

1056
00:34:07,039 --> 00:34:08,480
broken out here

1057
00:34:08,480 --> 00:34:10,879
but they also have screw terminals here

1058
00:34:10,879 --> 00:34:12,239
and i just hooked it up to every pin

1059
00:34:12,239 --> 00:34:12,800
here

1060
00:34:12,800 --> 00:34:14,159
i don't even worry about which one's

1061
00:34:14,159 --> 00:34:17,040
ground or not just hook up

1062
00:34:17,040 --> 00:34:19,599
all the connections and you can put in a

1063
00:34:19,599 --> 00:34:20,800
shared ground

1064
00:34:20,800 --> 00:34:22,320
then you connect to it over seal

1065
00:34:22,320 --> 00:34:24,480
connection which i will mention later in

1066
00:34:24,480 --> 00:34:26,079
this presentation

1067
00:34:26,079 --> 00:34:27,520
and you get this nice shell with some

1068
00:34:27,520 --> 00:34:29,760
nice ascii art in this case

1069
00:34:29,760 --> 00:34:32,159
we would set the voltage by measuring it

1070
00:34:32,159 --> 00:34:33,280
and then

1071
00:34:33,280 --> 00:34:35,119
working with these uart options i won't

1072
00:34:35,119 --> 00:34:36,320
get into this because

1073
00:34:36,320 --> 00:34:37,918
joe grant himself who created the

1074
00:34:37,918 --> 00:34:40,159
jtagulator has some youtube videos on

1075
00:34:40,159 --> 00:34:41,199
how to use it

1076
00:34:41,199 --> 00:34:43,679
and they're wonderful he does a great

1077
00:34:43,679 --> 00:34:44,800
job of explaining

1078
00:34:44,800 --> 00:34:47,280
what's going on why the device is

1079
00:34:47,280 --> 00:34:48,800
working and what it's doing

1080
00:34:48,800 --> 00:34:51,359
and he explains great uh if you have a

1081
00:34:51,359 --> 00:34:53,760
jtag later or pick up a jtaggulator

1082
00:34:53,760 --> 00:34:56,159
um it's wonderful but the basic premise

1083
00:34:56,159 --> 00:34:57,599
is it will figure out which pins are

1084
00:34:57,599 --> 00:34:58,000
which

1085
00:34:58,000 --> 00:35:00,800
for you yeah uart is kind of a guess

1086
00:35:00,800 --> 00:35:02,800
based off some ascii returns but jtag it

1087
00:35:02,800 --> 00:35:03,440
actually does

1088
00:35:03,440 --> 00:35:05,680
more intelligently and we'll get into

1089
00:35:05,680 --> 00:35:07,839
that

1090
00:35:07,839 --> 00:35:09,680
and then the with the last step with

1091
00:35:09,680 --> 00:35:11,680
uart is now that we

1092
00:35:11,680 --> 00:35:15,440
kind of know briefly what uart is

1093
00:35:15,440 --> 00:35:18,720
we've found the debug port on the device

1094
00:35:18,720 --> 00:35:21,839
and we have

1095
00:35:21,839 --> 00:35:24,240
identified which pin is which now we can

1096
00:35:24,240 --> 00:35:27,040
actually work with talking to the device

1097
00:35:27,040 --> 00:35:30,480
for using you are you need to talk

1098
00:35:30,480 --> 00:35:32,640
device with some sort of adapter your

1099
00:35:32,640 --> 00:35:34,320
laptop or desktop

1100
00:35:34,320 --> 00:35:37,520
probably doesn't have um a serial port

1101
00:35:37,520 --> 00:35:38,320
if it does

1102
00:35:38,320 --> 00:35:41,520
you know all all the power to you but

1103
00:35:41,520 --> 00:35:44,720
you can get this these dedicated devices

1104
00:35:44,720 --> 00:35:46,079
for cheap

1105
00:35:46,079 --> 00:35:48,000
i really recommend these uart cables

1106
00:35:48,000 --> 00:35:49,920
they come with four little wires

1107
00:35:49,920 --> 00:35:53,200
ground vcc rx tx

1108
00:35:53,200 --> 00:35:55,040
i would recommend just getting the

1109
00:35:55,040 --> 00:35:56,320
slightly more expensive one from

1110
00:35:56,320 --> 00:35:58,240
adafruit or someone like that the cheap

1111
00:35:58,240 --> 00:36:00,160
chinese ones have some weird voltage

1112
00:36:00,160 --> 00:36:01,359
regulation going on

1113
00:36:01,359 --> 00:36:04,160
and i've had a device not boot because

1114
00:36:04,160 --> 00:36:04,480
the

1115
00:36:04,480 --> 00:36:06,320
transmit pin was sending data when it

1116
00:36:06,320 --> 00:36:09,280
booted and halted the boot

1117
00:36:09,280 --> 00:36:11,040
process and that took me like a day and

1118
00:36:11,040 --> 00:36:12,800
a half to figure out so just

1119
00:36:12,800 --> 00:36:15,280
just spend three more dollars on top of

1120
00:36:15,280 --> 00:36:16,400
your three dollars

1121
00:36:16,400 --> 00:36:19,280
and get like a nice one the link here is

1122
00:36:19,280 --> 00:36:21,200
what i recommend

1123
00:36:21,200 --> 00:36:23,520
a note with these and actually every

1124
00:36:23,520 --> 00:36:25,119
adapter in general with your

1125
00:36:25,119 --> 00:36:28,079
um there is that red vcc pin as we saw

1126
00:36:28,079 --> 00:36:30,240
in our diagram

1127
00:36:30,240 --> 00:36:32,480
if the device is powered so however you

1128
00:36:32,480 --> 00:36:33,839
would normally power either over

1129
00:36:33,839 --> 00:36:36,480
micro usb or with a barrel jack do not

1130
00:36:36,480 --> 00:36:37,200
hook up

1131
00:36:37,200 --> 00:36:38,720
the vcc connection because you're

1132
00:36:38,720 --> 00:36:41,200
attempting to power it over both

1133
00:36:41,200 --> 00:36:43,359
it's very rare that you'll need that i

1134
00:36:43,359 --> 00:36:44,560
generally recommend

1135
00:36:44,560 --> 00:36:46,000
powering the device as it's intended

1136
00:36:46,000 --> 00:36:48,160
with its barrel jack or micro usb

1137
00:36:48,160 --> 00:36:50,560
and then just just snip like the vcc

1138
00:36:50,560 --> 00:36:52,640
connector off if you want

1139
00:36:52,640 --> 00:36:56,720
i have fried usb ports on my old laptop

1140
00:36:56,720 --> 00:36:59,440
i've fried devices that way it's really

1141
00:36:59,440 --> 00:37:00,800
stupid

1142
00:37:00,800 --> 00:37:02,240
if you do enough hardware hacking you

1143
00:37:02,240 --> 00:37:04,160
know not to do it but it happens

1144
00:37:04,160 --> 00:37:05,680
sometimes

1145
00:37:05,680 --> 00:37:07,200
but you just generally never want to do

1146
00:37:07,200 --> 00:37:09,760
that and the devices i'm working at

1147
00:37:09,760 --> 00:37:11,680
with i actually removed the barrel jack

1148
00:37:11,680 --> 00:37:13,119
connector and i'm just using my variable

1149
00:37:13,119 --> 00:37:14,160
power supply

1150
00:37:14,160 --> 00:37:15,920
to power it it just makes it a little

1151
00:37:15,920 --> 00:37:17,440
easier for me than trying to find the

1152
00:37:17,440 --> 00:37:17,920
right

1153
00:37:17,920 --> 00:37:20,000
power supply or the right adapter all

1154
00:37:20,000 --> 00:37:22,640
the time but

1155
00:37:22,640 --> 00:37:25,520
power it the way it's intended to and

1156
00:37:25,520 --> 00:37:27,280
skip the vcc pin or this red one

1157
00:37:27,280 --> 00:37:28,720
a lot of mine just have this red cable

1158
00:37:28,720 --> 00:37:30,960
snipped off

1159
00:37:30,960 --> 00:37:33,520
back on track there's also an ftdi

1160
00:37:33,520 --> 00:37:34,079
adapter

1161
00:37:34,079 --> 00:37:35,680
that's some more pins some more options

1162
00:37:35,680 --> 00:37:37,119
different protocols sometimes you'll

1163
00:37:37,119 --> 00:37:39,520
want all of them again tons of good

1164
00:37:39,520 --> 00:37:40,880
resources for that online

1165
00:37:40,880 --> 00:37:42,240
they're pretty cheap as well just try to

1166
00:37:42,240 --> 00:37:44,079
get one with a genuine ftdi trip where

1167
00:37:44,079 --> 00:37:46,480
you may run into driver issues

1168
00:37:46,480 --> 00:37:47,920
then there are the bus pirate and the

1169
00:37:47,920 --> 00:37:50,320
shecra which are more

1170
00:37:50,320 --> 00:37:52,800
multi-purpose hardware communication

1171
00:37:52,800 --> 00:37:54,320
tools they have support for like i

1172
00:37:54,320 --> 00:37:55,680
squared c and spi

1173
00:37:55,680 --> 00:37:57,520
the sheikhra i believe does some jtag

1174
00:37:57,520 --> 00:37:59,040
stuff um

1175
00:37:59,040 --> 00:38:02,240
yeah they're great but note the bus

1176
00:38:02,240 --> 00:38:03,599
pirate does not do

1177
00:38:03,599 --> 00:38:06,640
a jtag we'll talk about its kind of

1178
00:38:06,640 --> 00:38:09,359
sister tool the bus blaster later and of

1179
00:38:09,359 --> 00:38:10,640
course the jtagulator

1180
00:38:10,640 --> 00:38:12,560
it's quite a bit more expensive than all

1181
00:38:12,560 --> 00:38:13,760
the other ones even

1182
00:38:13,760 --> 00:38:16,480
combined but it is quite nice for jtag

1183
00:38:16,480 --> 00:38:18,160
work and if you want you are to kind of

1184
00:38:18,160 --> 00:38:20,079
figure itself out

1185
00:38:20,079 --> 00:38:22,880
but let's say you have the jeep uart

1186
00:38:22,880 --> 00:38:23,520
cable

1187
00:38:23,520 --> 00:38:26,000
and you've hooked up to the breakout on

1188
00:38:26,000 --> 00:38:27,920
the device with the right pins

1189
00:38:27,920 --> 00:38:28,960
you're going to need some sort of

1190
00:38:28,960 --> 00:38:30,960
software to talk to it

1191
00:38:30,960 --> 00:38:33,359
the device you'll usually see is um

1192
00:38:33,359 --> 00:38:34,079
slash dab

1193
00:38:34,079 --> 00:38:36,960
tty usb 0. you may see some other ones

1194
00:38:36,960 --> 00:38:38,160
it's device specific

1195
00:38:38,160 --> 00:38:40,640
um just look up whatever distro you're

1196
00:38:40,640 --> 00:38:42,160
using or

1197
00:38:42,160 --> 00:38:44,560
you know just look up where to find the

1198
00:38:44,560 --> 00:38:45,680
serial adapter

1199
00:38:45,680 --> 00:38:48,560
most often could be t2 usb012 something

1200
00:38:48,560 --> 00:38:49,839
like that

1201
00:38:49,839 --> 00:38:52,079
but the software you'll want on linux at

1202
00:38:52,079 --> 00:38:53,040
least

1203
00:38:53,040 --> 00:38:55,839
is either minicom or screen gtk term if

1204
00:38:55,839 --> 00:38:57,680
you want a little more comfort features

1205
00:38:57,680 --> 00:38:59,520
something like that in these screenshots

1206
00:38:59,520 --> 00:39:00,880
i'm using screen

1207
00:39:00,880 --> 00:39:03,280
um but you want to as i mentioned here

1208
00:39:03,280 --> 00:39:04,640
either add yourself to the dialogue

1209
00:39:04,640 --> 00:39:05,280
group

1210
00:39:05,280 --> 00:39:08,720
or give yourself permissions to like

1211
00:39:08,720 --> 00:39:12,320
basically have your user owned the tty

1212
00:39:12,320 --> 00:39:13,359
usb

1213
00:39:13,359 --> 00:39:16,640
dev file or you can just run

1214
00:39:16,640 --> 00:39:19,200
screen with sudo if you want but yeah

1215
00:39:19,200 --> 00:39:20,560
just know that it has to be

1216
00:39:20,560 --> 00:39:22,640
you have to have permissions too for it

1217
00:39:22,640 --> 00:39:24,400
and then if you're using screen you just

1218
00:39:24,400 --> 00:39:25,200
do screen

1219
00:39:25,200 --> 00:39:27,920
then the serial device and the baud rate

1220
00:39:27,920 --> 00:39:28,960
and that's

1221
00:39:28,960 --> 00:39:30,640
talking to the device and then if you

1222
00:39:30,640 --> 00:39:32,640
power on the device with the baud rate

1223
00:39:32,640 --> 00:39:34,640
we're assuming 1 5 200 is the right baud

1224
00:39:34,640 --> 00:39:35,839
rate and

1225
00:39:35,839 --> 00:39:38,800
t2 usb is the right device then we

1226
00:39:38,800 --> 00:39:40,640
sometimes will get a boot log like this

1227
00:39:40,640 --> 00:39:42,480
and this is the same one that the logic

1228
00:39:42,480 --> 00:39:44,079
analyzer picked up here

1229
00:39:44,079 --> 00:39:45,760
just kind of a few ways of interfacing

1230
00:39:45,760 --> 00:39:47,119
with it this one is just with the serial

1231
00:39:47,119 --> 00:39:48,560
cable

1232
00:39:48,560 --> 00:39:50,320
and i could here just start spamming

1233
00:39:50,320 --> 00:39:52,240
some buttons and get to the ubud shell

1234
00:39:52,240 --> 00:39:53,440
but in this case i'm just showing that

1235
00:39:53,440 --> 00:39:55,520
there is some information

1236
00:39:55,520 --> 00:39:57,280
as device booting up just kind of debug

1237
00:39:57,280 --> 00:39:58,800
information or just to see what kind of

1238
00:39:58,800 --> 00:39:59,920
state it's in

1239
00:39:59,920 --> 00:40:01,520
a lot of the times though after it

1240
00:40:01,520 --> 00:40:03,040
finishes booting and it spits out all of

1241
00:40:03,040 --> 00:40:04,319
its boot info

1242
00:40:04,319 --> 00:40:06,319
it'll either drop you to the shell or to

1243
00:40:06,319 --> 00:40:07,440
a login prompt

1244
00:40:07,440 --> 00:40:09,119
and if you either know the credentials

1245
00:40:09,119 --> 00:40:11,280
look them up online crack them or

1246
00:40:11,280 --> 00:40:13,200
something like that you can log in and

1247
00:40:13,200 --> 00:40:14,960
most of the time get like a bash or an

1248
00:40:14,960 --> 00:40:15,920
sh

1249
00:40:15,920 --> 00:40:20,000
just shell let's move on to

1250
00:40:20,000 --> 00:40:23,119
jtag instead of uart jtag

1251
00:40:23,119 --> 00:40:25,280
well while you are is kind of named off

1252
00:40:25,280 --> 00:40:27,520
what it's done as like an asynchronous

1253
00:40:27,520 --> 00:40:30,480
um communication protocol jtag is

1254
00:40:30,480 --> 00:40:31,760
actually just kind of who created it

1255
00:40:31,760 --> 00:40:33,680
which is the joint test action group

1256
00:40:33,680 --> 00:40:35,839
and don't worry about it but the purpose

1257
00:40:35,839 --> 00:40:37,599
of jtag is kind of to bypass all the

1258
00:40:37,599 --> 00:40:38,240
silly stuff

1259
00:40:38,240 --> 00:40:41,839
and talk directly to the cpu it comes in

1260
00:40:41,839 --> 00:40:46,000
all sorts of shapes and sizes the jtag

1261
00:40:46,000 --> 00:40:47,680
protocol supports having multiple

1262
00:40:47,680 --> 00:40:49,200
devices chained together as you can see

1263
00:40:49,200 --> 00:40:50,640
here

1264
00:40:50,640 --> 00:40:52,319
but it is just a kind of a bare-bones

1265
00:40:52,319 --> 00:40:54,400
spec um every manufacturer that

1266
00:40:54,400 --> 00:40:56,560
implements jtag will build up on it

1267
00:40:56,560 --> 00:40:58,400
and add their own features and um

1268
00:40:58,400 --> 00:40:59,839
whatever the developers need for

1269
00:40:59,839 --> 00:41:01,200
debugging

1270
00:41:01,200 --> 00:41:03,760
and it's it's kind of no jtag between

1271
00:41:03,760 --> 00:41:05,440
manufacturers is alike

1272
00:41:05,440 --> 00:41:06,640
they're they're highly specific to

1273
00:41:06,640 --> 00:41:08,560
devices with a feature such as like the

1274
00:41:08,560 --> 00:41:10,480
bypass command and things like that

1275
00:41:10,480 --> 00:41:13,280
um that the jtag later uses to figure

1276
00:41:13,280 --> 00:41:14,720
things out and

1277
00:41:14,720 --> 00:41:15,920
we'll get into that later in this

1278
00:41:15,920 --> 00:41:18,079
presentation but if you see

1279
00:41:18,079 --> 00:41:20,640
kind of any pin breakouts in a row like

1280
00:41:20,640 --> 00:41:21,440
these

1281
00:41:21,440 --> 00:41:24,079
these two rows generally ranging from 20

1282
00:41:24,079 --> 00:41:26,000
pins 16 pins 14

1283
00:41:26,000 --> 00:41:28,720
10 or just four even sometimes a cluster

1284
00:41:28,720 --> 00:41:29,920
of four

1285
00:41:29,920 --> 00:41:31,920
um it may be jtag in this case the

1286
00:41:31,920 --> 00:41:33,839
circuit board uh whatever pcb this is

1287
00:41:33,839 --> 00:41:34,880
it's really nice

1288
00:41:34,880 --> 00:41:36,960
uh it not over only clearly labels

1289
00:41:36,960 --> 00:41:38,800
what's what but apparently even some

1290
00:41:38,800 --> 00:41:41,200
headers came pre-soldered which is great

1291
00:41:41,200 --> 00:41:42,319
this is a

1292
00:41:42,319 --> 00:41:44,079
kind of more technical diagram of what

1293
00:41:44,079 --> 00:41:46,800
jteg is jtag is where you have data in

1294
00:41:46,800 --> 00:41:49,920
data out tdi is data in and tdo is data

1295
00:41:49,920 --> 00:41:50,400
out

1296
00:41:50,400 --> 00:41:51,440
and you can see it's kind of changed

1297
00:41:51,440 --> 00:41:53,440
between devices between returning

1298
00:41:53,440 --> 00:41:55,119
so one of these pins is going to be tdi

1299
00:41:55,119 --> 00:41:56,800
and tdo which you're looking for

1300
00:41:56,800 --> 00:41:58,319
also the clock signal and some other

1301
00:41:58,319 --> 00:42:00,160
stuff but we don't really need to get

1302
00:42:00,160 --> 00:42:00,800
into this

1303
00:42:00,800 --> 00:42:02,000
highly recommend watching some quick

1304
00:42:02,000 --> 00:42:03,599
youtube videos or reading a blog as

1305
00:42:03,599 --> 00:42:04,160
always

1306
00:42:04,160 --> 00:42:06,480
um it may seem really boring at first

1307
00:42:06,480 --> 00:42:08,160
but if you spend some time gleaning some

1308
00:42:08,160 --> 00:42:09,599
information you will

1309
00:42:09,599 --> 00:42:11,280
love it at least i think it's super

1310
00:42:11,280 --> 00:42:13,520
fascinating

1311
00:42:13,520 --> 00:42:16,480
um but as we started working with ur

1312
00:42:16,480 --> 00:42:17,440
let's say now

1313
00:42:17,440 --> 00:42:19,680
you found some sort of cluster of pins

1314
00:42:19,680 --> 00:42:20,960
on your circuit board

1315
00:42:20,960 --> 00:42:22,560
and your pcb and your device and you

1316
00:42:22,560 --> 00:42:24,240
want to start working at it again you'll

1317
00:42:24,240 --> 00:42:24,640
need

1318
00:42:24,640 --> 00:42:26,960
some sort of adapter um there are

1319
00:42:26,960 --> 00:42:29,040
scripts for like the raspberry pi where

1320
00:42:29,040 --> 00:42:30,720
you can hook up some of its gpio opens

1321
00:42:30,720 --> 00:42:32,079
general purpose and put out

1322
00:42:32,079 --> 00:42:35,760
the kind of these pins to the device to

1323
00:42:35,760 --> 00:42:36,560
try and

1324
00:42:36,560 --> 00:42:38,960
do what the jtag layer does same with an

1325
00:42:38,960 --> 00:42:40,240
arduino

1326
00:42:40,240 --> 00:42:42,480
i think the um there's something called

1327
00:42:42,480 --> 00:42:43,359
the blue pill

1328
00:42:43,359 --> 00:42:46,400
which is the like the black magic probe

1329
00:42:46,400 --> 00:42:48,079
software on an arduino if i remember

1330
00:42:48,079 --> 00:42:49,119
correctly

1331
00:42:49,119 --> 00:42:51,680
um there's there's things like that but

1332
00:42:51,680 --> 00:42:53,440
if you want there is dedicated hardware

1333
00:42:53,440 --> 00:42:54,720
for interacting with these things they

1334
00:42:54,720 --> 00:42:56,800
are a bit expensive because jtag takes

1335
00:42:56,800 --> 00:42:58,960
some more

1336
00:42:58,960 --> 00:43:01,200
overhead on the hardware side for

1337
00:43:01,200 --> 00:43:02,560
building an adapter for

1338
00:43:02,560 --> 00:43:04,560
but the jitagular bus blaster chica and

1339
00:43:04,560 --> 00:43:05,680
blackmagic probe are all

1340
00:43:05,680 --> 00:43:08,640
great highly recommend blackmagic probe

1341
00:43:08,640 --> 00:43:09,760
is for working with

1342
00:43:09,760 --> 00:43:12,160
arm cpus as you can just get it works as

1343
00:43:12,160 --> 00:43:13,520
like a um

1344
00:43:13,520 --> 00:43:15,920
gdp adapter virtual ddb adapter and you

1345
00:43:15,920 --> 00:43:16,640
can just

1346
00:43:16,640 --> 00:43:18,880
go straight into it but the sheetgrind

1347
00:43:18,880 --> 00:43:20,800
bus blaster as i mentioned earlier

1348
00:43:20,800 --> 00:43:22,800
are general purpose tools the bus

1349
00:43:22,800 --> 00:43:24,400
blaster is like the

1350
00:43:24,400 --> 00:43:27,280
big brother of the bus pirate it has

1351
00:43:27,280 --> 00:43:28,800
some jtag support it has some other nice

1352
00:43:28,800 --> 00:43:29,359
features

1353
00:43:29,359 --> 00:43:31,920
it's a lot faster the sheikra is also

1354
00:43:31,920 --> 00:43:33,440
another great general purpose tool and

1355
00:43:33,440 --> 00:43:34,800
the jtagulator is

1356
00:43:34,800 --> 00:43:36,880
just wonderful for jtech stuff it does

1357
00:43:36,880 --> 00:43:38,800
not interface with jtag for you

1358
00:43:38,800 --> 00:43:40,800
its whole purpose is just to figure out

1359
00:43:40,800 --> 00:43:42,480
which of these series of pins

1360
00:43:42,480 --> 00:43:44,720
is what and then from there you'll need

1361
00:43:44,720 --> 00:43:47,440
some sort of jtag adapter

1362
00:43:47,440 --> 00:43:50,160
and yeah jtag is wonderful and ej tag

1363
00:43:50,160 --> 00:43:51,920
for on devices but

1364
00:43:51,920 --> 00:43:53,760
you can have remote gdb you could have

1365
00:43:53,760 --> 00:43:56,000
basically gdp running on the cpu itself

1366
00:43:56,000 --> 00:43:57,200
on the target device

1367
00:43:57,200 --> 00:43:58,480
and you can step through everything it's

1368
00:43:58,480 --> 00:44:00,560
doing you can dump the flash if it's

1369
00:44:00,560 --> 00:44:02,560
talking directly to the cpu you've

1370
00:44:02,560 --> 00:44:04,160
basically unlocked god mode on your

1371
00:44:04,160 --> 00:44:06,839
device and it's

1372
00:44:06,839 --> 00:44:08,560
amazing

1373
00:44:08,560 --> 00:44:12,079
if you don't want to go the jtag route

1374
00:44:12,079 --> 00:44:15,839
um which if

1375
00:44:15,839 --> 00:44:18,960
sorry um with i want to mention the jtag

1376
00:44:18,960 --> 00:44:20,880
later because i didn't do a full walk

1377
00:44:20,880 --> 00:44:22,079
through this i was kind of planning to

1378
00:44:22,079 --> 00:44:23,119
do that for this talk

1379
00:44:23,119 --> 00:44:25,760
but again um joe grant the person who

1380
00:44:25,760 --> 00:44:27,280
created it

1381
00:44:27,280 --> 00:44:29,680
does obviously a much better job of

1382
00:44:29,680 --> 00:44:31,200
explaining it just

1383
00:44:31,200 --> 00:44:33,760
look him up on youtube and find his

1384
00:44:33,760 --> 00:44:34,640
tutorial on the

1385
00:44:34,640 --> 00:44:37,440
tag all you do is you find what ground

1386
00:44:37,440 --> 00:44:38,560
is you hook up ground

1387
00:44:38,560 --> 00:44:41,200
you put up all the other channels and

1388
00:44:41,200 --> 00:44:43,200
you follow some simple instructions

1389
00:44:43,200 --> 00:44:46,400
and it goes through and it just works a

1390
00:44:46,400 --> 00:44:47,599
lot of the time

1391
00:44:47,599 --> 00:44:49,920
and finds your jtech bin out then you

1392
00:44:49,920 --> 00:44:51,680
put the corresponding pins on whatever

1393
00:44:51,680 --> 00:44:52,480
your adapter is

1394
00:44:52,480 --> 00:44:55,280
and you are connected to jtag again it's

1395
00:44:55,280 --> 00:44:57,280
highly manufacturer specific with jtag

1396
00:44:57,280 --> 00:44:58,160
so

1397
00:44:58,160 --> 00:45:00,640
no guarantees on what you'll see but you

1398
00:45:00,640 --> 00:45:01,760
know google it

1399
00:45:01,760 --> 00:45:03,440
duckduckgo it you'll find whatever

1400
00:45:03,440 --> 00:45:05,520
you're looking for if it's not device

1401
00:45:05,520 --> 00:45:06,960
specific you can look at what similar

1402
00:45:06,960 --> 00:45:08,319
devices are doing like in

1403
00:45:08,319 --> 00:45:11,440
if you're working on a iot camera or

1404
00:45:11,440 --> 00:45:13,839
like an iot cooking device and other iot

1405
00:45:13,839 --> 00:45:15,839
cooking devices have

1406
00:45:15,839 --> 00:45:17,440
someone published a blog with showing

1407
00:45:17,440 --> 00:45:19,280
what they did over jtag

1408
00:45:19,280 --> 00:45:21,040
just play around using things like you

1409
00:45:21,040 --> 00:45:22,400
are jtag or

1410
00:45:22,400 --> 00:45:25,520
um openocd

1411
00:45:25,520 --> 00:45:28,079
or if you're on arm device blackmagic

1412
00:45:28,079 --> 00:45:30,000
probe to just bypass all that

1413
00:45:30,000 --> 00:45:31,680
you'll see all the things that are

1414
00:45:31,680 --> 00:45:33,599
available to you a lot of times if you

1415
00:45:33,599 --> 00:45:34,880
just want to dump the flash and get out

1416
00:45:34,880 --> 00:45:37,040
that's totally fine

1417
00:45:37,040 --> 00:45:39,040
but moving on let's say you don't want

1418
00:45:39,040 --> 00:45:40,960
to interface with the debug pins there

1419
00:45:40,960 --> 00:45:42,319
aren't any debug pins or and something

1420
00:45:42,319 --> 00:45:43,599
like that

1421
00:45:43,599 --> 00:45:44,880
you can just interact with the hardware

1422
00:45:44,880 --> 00:45:46,640
directly because these storage chips or

1423
00:45:46,640 --> 00:45:48,240
these flash chips they contain

1424
00:45:48,240 --> 00:45:50,000
all the secrets in this case i have a

1425
00:45:50,000 --> 00:45:51,760
little digital microscope pointed at

1426
00:45:51,760 --> 00:45:54,960
the storage or the flash chip here

1427
00:45:54,960 --> 00:45:59,280
like nand flash something like that

1428
00:45:59,280 --> 00:46:02,160
there's um universal chip programmers

1429
00:46:02,160 --> 00:46:03,760
this is just an amazon query for them i

1430
00:46:03,760 --> 00:46:05,599
really recommend the tl866 as i'll show

1431
00:46:05,599 --> 00:46:06,400
later

1432
00:46:06,400 --> 00:46:08,640
um but they come with a bunch of

1433
00:46:08,640 --> 00:46:10,319
adapters the chips kind of go

1434
00:46:10,319 --> 00:46:12,400
into and then you can pull all the

1435
00:46:12,400 --> 00:46:13,680
information from it

1436
00:46:13,680 --> 00:46:15,359
and a lot of time that's full device

1437
00:46:15,359 --> 00:46:17,359
from our file systems or

1438
00:46:17,359 --> 00:46:19,760
great stuff like that you will need to

1439
00:46:19,760 --> 00:46:20,480
know

1440
00:46:20,480 --> 00:46:22,880
what the chip type is and if you can

1441
00:46:22,880 --> 00:46:23,760
find

1442
00:46:23,760 --> 00:46:26,480
this kind of um essentially a serial

1443
00:46:26,480 --> 00:46:28,079
number kind of it's not device specific

1444
00:46:28,079 --> 00:46:29,760
but it's like an identifier

1445
00:46:29,760 --> 00:46:31,040
if you just plug that into your search

1446
00:46:31,040 --> 00:46:32,880
engine of choice you'll usually be met

1447
00:46:32,880 --> 00:46:34,000
with a ton of data sheets

1448
00:46:34,000 --> 00:46:36,400
hopefully um but it's very likely you

1449
00:46:36,400 --> 00:46:38,640
will

1450
00:46:39,280 --> 00:46:42,400
from there if that device type like this

1451
00:46:42,400 --> 00:46:43,599
is a tsop

1452
00:46:43,599 --> 00:46:47,280
48 chip you will put that

1453
00:46:47,280 --> 00:46:49,440
into if your chip programmer has a

1454
00:46:49,440 --> 00:46:50,319
adapter from it

1455
00:46:50,319 --> 00:46:52,640
for it you can put it in run some

1456
00:46:52,640 --> 00:46:53,520
software

1457
00:46:53,520 --> 00:46:55,520
and dump all the contents from it you

1458
00:46:55,520 --> 00:46:58,480
can also write contents to it

1459
00:46:58,480 --> 00:47:00,400
but you do need to know the chip type

1460
00:47:00,400 --> 00:47:02,000
and package type so basically

1461
00:47:02,000 --> 00:47:03,920
this information here and you need to

1462
00:47:03,920 --> 00:47:05,920
know the physical shape of it but

1463
00:47:05,920 --> 00:47:07,599
um if you find the data sheet by looking

1464
00:47:07,599 --> 00:47:08,960
at this it'll tell you probably like

1465
00:47:08,960 --> 00:47:11,040
tsop48 tc32

1466
00:47:11,040 --> 00:47:14,880
if it's a 8-pin sbi clip or spi chip

1467
00:47:14,880 --> 00:47:17,839
anything like that if the manufacturer

1468
00:47:17,839 --> 00:47:19,680
is annoying and decide to like grind off

1469
00:47:19,680 --> 00:47:20,880
this information

1470
00:47:20,880 --> 00:47:22,559
i linked a cool tweet here where they

1471
00:47:22,559 --> 00:47:24,079
use a highlighter and some

1472
00:47:24,079 --> 00:47:28,400
uv light to kind of get that information

1473
00:47:28,400 --> 00:47:30,640
back

1474
00:47:31,119 --> 00:47:34,079
my joke here with mini pro is the tl866

1475
00:47:34,079 --> 00:47:37,200
which i use for my chip dumping

1476
00:47:37,200 --> 00:47:39,760
has really only windows support off a cd

1477
00:47:39,760 --> 00:47:41,119
for its software but someone made an

1478
00:47:41,119 --> 00:47:41,760
open source

1479
00:47:41,760 --> 00:47:43,599
tool called mini pro so highly recommend

1480
00:47:43,599 --> 00:47:45,599
checking that out

1481
00:47:45,599 --> 00:47:47,760
this is the process of me desoldering

1482
00:47:47,760 --> 00:47:48,800
the

1483
00:47:48,800 --> 00:47:51,680
flash chip here which is you put some

1484
00:47:51,680 --> 00:47:52,000
flux

1485
00:47:52,000 --> 00:47:55,200
on it melt it put some low temp solder

1486
00:47:55,200 --> 00:47:56,880
take the chip off if you have low temp

1487
00:47:56,880 --> 00:47:58,160
solder it's really helpful because it

1488
00:47:58,160 --> 00:47:59,839
stays molten for a long time but you can

1489
00:47:59,839 --> 00:48:01,280
just take a pair of tweezers and lift it

1490
00:48:01,280 --> 00:48:01,839
off

1491
00:48:01,839 --> 00:48:03,200
then i clean up the pins to make them

1492
00:48:03,200 --> 00:48:04,880
nice

1493
00:48:04,880 --> 00:48:06,800
clean up the solder on the chip itself

1494
00:48:06,800 --> 00:48:08,960
and then my tl866

1495
00:48:08,960 --> 00:48:10,480
which is this gray box here has an

1496
00:48:10,480 --> 00:48:11,839
adapter for this chip type where you

1497
00:48:11,839 --> 00:48:12,480
just kind of

1498
00:48:12,480 --> 00:48:14,720
push down put the chip in and read the

1499
00:48:14,720 --> 00:48:15,520
data off it

1500
00:48:15,520 --> 00:48:17,359
and that'll spit out a bin file if

1501
00:48:17,359 --> 00:48:18,800
you've done it correctly

1502
00:48:18,800 --> 00:48:22,079
and in this case that's the fs.img that

1503
00:48:22,079 --> 00:48:23,680
i dumped that i showed earlier in this

1504
00:48:23,680 --> 00:48:26,079
presentation

1505
00:48:26,079 --> 00:48:27,280
and then kind of from there the question

1506
00:48:27,280 --> 00:48:29,440
is what can you do now well getting the

1507
00:48:29,440 --> 00:48:30,400
device firmware

1508
00:48:30,400 --> 00:48:33,680
is super useful if it's not available

1509
00:48:33,680 --> 00:48:35,599
online just from the manufacturer

1510
00:48:35,599 --> 00:48:37,440
you could pull it from the bootloader

1511
00:48:37,440 --> 00:48:39,200
like you boot you could sometimes if it

1512
00:48:39,200 --> 00:48:39,599
has

1513
00:48:39,599 --> 00:48:41,760
the device has an sd card you can put in

1514
00:48:41,760 --> 00:48:42,880
an sd card

1515
00:48:42,880 --> 00:48:46,480
uh and in you boot dump the uh

1516
00:48:46,480 --> 00:48:49,040
the memory just specify from the start

1517
00:48:49,040 --> 00:48:49,920
and end address

1518
00:48:49,920 --> 00:48:52,240
to an image on the sd card and boom got

1519
00:48:52,240 --> 00:48:53,920
it you can do it over serial too but

1520
00:48:53,920 --> 00:48:55,280
it's a lot slower

1521
00:48:55,280 --> 00:48:57,040
jtag sometimes if you can communicate to

1522
00:48:57,040 --> 00:48:58,400
the flash strip through the cpu

1523
00:48:58,400 --> 00:49:00,319
you can just tell it to dump all of its

1524
00:49:00,319 --> 00:49:01,599
address space

1525
00:49:01,599 --> 00:49:04,240
and of course you can do the um the

1526
00:49:04,240 --> 00:49:05,040
hardware route

1527
00:49:05,040 --> 00:49:07,440
just take the storage off and tell it to

1528
00:49:07,440 --> 00:49:09,200
give it you all its secrets

1529
00:49:09,200 --> 00:49:10,880
reverse that firmware get all the

1530
00:49:10,880 --> 00:49:13,200
secrets from there

1531
00:49:13,200 --> 00:49:14,640
if you want to make modifications if

1532
00:49:14,640 --> 00:49:17,119
there's crc uh checking or some sort of

1533
00:49:17,119 --> 00:49:18,559
hashing on the

1534
00:49:18,559 --> 00:49:20,880
firmware stuff for validation uh just

1535
00:49:20,880 --> 00:49:21,680
look it up

1536
00:49:21,680 --> 00:49:23,040
if there's any keywords that are showing

1537
00:49:23,040 --> 00:49:25,200
up like crc failed um

1538
00:49:25,200 --> 00:49:27,200
look at online basically the device is

1539
00:49:27,200 --> 00:49:28,319
trying to validate what it's being

1540
00:49:28,319 --> 00:49:29,119
flashed you can

1541
00:49:29,119 --> 00:49:31,920
bypass sometimes in if you are met with

1542
00:49:31,920 --> 00:49:33,280
a bootloader like youboot

1543
00:49:33,280 --> 00:49:34,960
you can actually sometimes just patch

1544
00:49:34,960 --> 00:49:36,400
out the part of it that does the

1545
00:49:36,400 --> 00:49:37,359
validation

1546
00:49:37,359 --> 00:49:40,720
which is super fun a lot of

1547
00:49:40,720 --> 00:49:43,440
the cheap iot devices have undocumented

1548
00:49:43,440 --> 00:49:44,960
back doors which

1549
00:49:44,960 --> 00:49:46,880
is kind of sadly common at this point

1550
00:49:46,880 --> 00:49:48,079
where just

1551
00:49:48,079 --> 00:49:49,839
open telnet ports with some credentials

1552
00:49:49,839 --> 00:49:52,319
or kind of like port knocking

1553
00:49:52,319 --> 00:49:55,760
it'll open up a shell it's so common

1554
00:49:55,760 --> 00:49:58,559
a lot of devices are also just not it's

1555
00:49:58,559 --> 00:50:00,160
not advantageous for the manufacturer to

1556
00:50:00,160 --> 00:50:00,640
put

1557
00:50:00,640 --> 00:50:03,040
security in it for price reasons or to

1558
00:50:03,040 --> 00:50:05,839
have each device have a unique password

1559
00:50:05,839 --> 00:50:07,359
but even if they do you can find a lot

1560
00:50:07,359 --> 00:50:08,800
of undocumented features or take

1561
00:50:08,800 --> 00:50:10,800
advantage of it

1562
00:50:10,800 --> 00:50:13,280
if the device has grep installed on it

1563
00:50:13,280 --> 00:50:14,559
and you have a shell

1564
00:50:14,559 --> 00:50:16,720
just look around for like secret just

1565
00:50:16,720 --> 00:50:18,559
and tokens maybe you can get private

1566
00:50:18,559 --> 00:50:19,760
keys or

1567
00:50:19,760 --> 00:50:21,920
authentication tokens anything looking

1568
00:50:21,920 --> 00:50:23,599
like that um

1569
00:50:23,599 --> 00:50:27,040
uh look at the traffic if you see it

1570
00:50:27,040 --> 00:50:28,559
communicating to

1571
00:50:28,559 --> 00:50:31,200
some sort of command server and sending

1572
00:50:31,200 --> 00:50:32,800
a bunch of telemetry like if it scans

1573
00:50:32,800 --> 00:50:33,680
your network

1574
00:50:33,680 --> 00:50:35,760
and sends a map that information it

1575
00:50:35,760 --> 00:50:37,119
might be cool to intercept that and

1576
00:50:37,119 --> 00:50:38,400
probably block that

1577
00:50:38,400 --> 00:50:40,319
but you can find out a lot of cool stuff

1578
00:50:40,319 --> 00:50:41,920
like that and you can also see

1579
00:50:41,920 --> 00:50:43,839
if you are monitoring the traffic you

1580
00:50:43,839 --> 00:50:46,480
tell the device to do a firmware update

1581
00:50:46,480 --> 00:50:49,040
you can see what it's reaching out to

1582
00:50:49,040 --> 00:50:51,520
and if it's over like plain text http

1583
00:50:51,520 --> 00:50:53,200
you can just kind of replace that with

1584
00:50:53,200 --> 00:50:54,640
your own firmware and

1585
00:50:54,640 --> 00:50:55,920
if you want to you can get a shell that

1586
00:50:55,920 --> 00:50:57,839
way

1587
00:50:57,839 --> 00:51:00,079
i yeah sorry this this presentation is

1588
00:51:00,079 --> 00:51:02,000
kind of all over the place but i hope

1589
00:51:02,000 --> 00:51:05,599
some of the words stick um overall even

1590
00:51:05,599 --> 00:51:07,119
if you don't know what you're doing in a

1591
00:51:07,119 --> 00:51:08,160
lot of the cases

1592
00:51:08,160 --> 00:51:09,920
just knowing some words phrases and

1593
00:51:09,920 --> 00:51:12,079
acronyms can get you to a shell

1594
00:51:12,079 --> 00:51:13,200
if you're more familiar with a lot of

1595
00:51:13,200 --> 00:51:14,800
linux stuff you don't even need to worry

1596
00:51:14,800 --> 00:51:17,760
about the hardware at that point

1597
00:51:17,839 --> 00:51:20,400
but overall thank you so much it's been

1598
00:51:20,400 --> 00:51:22,720
a long time if you're still tuned in

1599
00:51:22,720 --> 00:51:24,880
i really appreciate that these are some

1600
00:51:24,880 --> 00:51:26,000
of the images i took

1601
00:51:26,000 --> 00:51:29,280
and some free template i use thanks so

1602
00:51:29,280 --> 00:51:29,839
much

1603
00:51:29,839 --> 00:51:32,880
please feel free to find me

1604
00:51:32,880 --> 00:51:35,040
online i'll be in the bug crowd discord

1605
00:51:35,040 --> 00:51:36,559
on buses can fly basically everywhere

1606
00:51:36,559 --> 00:51:37,680
twitter discord are

1607
00:51:37,680 --> 00:51:39,520
great places to reach me i'm happy to

1608
00:51:39,520 --> 00:51:40,960
chat about hardware hacking whenever you

1609
00:51:40,960 --> 00:51:42,559
want

1610
00:51:42,559 --> 00:51:44,480
just let me know and thanks so much bug

1611
00:51:44,480 --> 00:51:46,000
crowd for this opportunity

1612
00:51:46,000 --> 00:51:48,240
i'm just gonna go ahead and ask the most

1613
00:51:48,240 --> 00:51:50,240
common question they got asked so

1614
00:51:50,240 --> 00:51:52,000
a lot of the questions i saw both for

1615
00:51:52,000 --> 00:51:53,760
this talk but i feel like this is just a

1616
00:51:53,760 --> 00:51:55,839
general hardware hacking talk is like

1617
00:51:55,839 --> 00:51:59,040
how do i get started and um i feel like

1618
00:51:59,040 --> 00:52:01,359
you kind of covered it in the talk but

1619
00:52:01,359 --> 00:52:02,559
you know compared to say

1620
00:52:02,559 --> 00:52:05,440
web hacking i feel like you know

1621
00:52:05,440 --> 00:52:06,400
hardware hacking

1622
00:52:06,400 --> 00:52:09,119
has got a little bit of a higher barrier

1623
00:52:09,119 --> 00:52:10,960
to entry right because you need to have

1624
00:52:10,960 --> 00:52:12,720
actual physical tools that you wouldn't

1625
00:52:12,720 --> 00:52:15,599
just have anyway like maybe a computer

1626
00:52:15,599 --> 00:52:17,440
for web hacking and also you need to

1627
00:52:17,440 --> 00:52:18,800
have devices to hack

1628
00:52:18,800 --> 00:52:22,480
so is there some kind of like platform

1629
00:52:22,480 --> 00:52:25,920
or some kind of um you know generic way

1630
00:52:25,920 --> 00:52:28,079
to get started like for example

1631
00:52:28,079 --> 00:52:29,920
for lock picking there's this particular

1632
00:52:29,920 --> 00:52:31,359
master lock that

1633
00:52:31,359 --> 00:52:33,280
everyone kind of recommends to start

1634
00:52:33,280 --> 00:52:34,880
with and that's your first lock that you

1635
00:52:34,880 --> 00:52:35,839
learn to pick

1636
00:52:35,839 --> 00:52:37,119
and then you kind of move on to these

1637
00:52:37,119 --> 00:52:38,559
different locks and people have kind of

1638
00:52:38,559 --> 00:52:39,680
created this like

1639
00:52:39,680 --> 00:52:42,319
almost um pathway for learning for lock

1640
00:52:42,319 --> 00:52:42,800
picking

1641
00:52:42,800 --> 00:52:44,240
is there something similar with hardware

1642
00:52:44,240 --> 00:52:47,119
hacking or or not really

1643
00:52:47,119 --> 00:52:50,240
uh kind of both ways i mean so kind of

1644
00:52:50,240 --> 00:52:51,599
like with any other part of like how do

1645
00:52:51,599 --> 00:52:52,480
i get into hacking

1646
00:52:52,480 --> 00:52:54,640
it's a broad scope it's like it's a big

1647
00:52:54,640 --> 00:52:55,520
question

1648
00:52:55,520 --> 00:52:57,280
there's a lot of devices a lot of people

1649
00:52:57,280 --> 00:52:59,200
have been beating on for a long time

1650
00:52:59,200 --> 00:53:01,359
like there's this old linksys router

1651
00:53:01,359 --> 00:53:02,480
this like wrt

1652
00:53:02,480 --> 00:53:04,880
something or wrg it's this old blue

1653
00:53:04,880 --> 00:53:05,839
thing um

1654
00:53:05,839 --> 00:53:07,200
like i mentioned the talk i pulled one

1655
00:53:07,200 --> 00:53:08,640
of them out of electronics recycling

1656
00:53:08,640 --> 00:53:09,920
like basically a dumpster

1657
00:53:09,920 --> 00:53:11,440
and then with a three dollar uart cable

1658
00:53:11,440 --> 00:53:13,040
that's enough to get like a shell

1659
00:53:13,040 --> 00:53:16,079
and work with it like um but also cheap

1660
00:53:16,079 --> 00:53:18,480
chinese ip cams are usually great

1661
00:53:18,480 --> 00:53:20,800
uh if you find a blog where someone's

1662
00:53:20,800 --> 00:53:21,760
like talked about

1663
00:53:21,760 --> 00:53:23,119
doing some hardware hacking or if you

1664
00:53:23,119 --> 00:53:24,880
just look up like uart shell

1665
00:53:24,880 --> 00:53:27,040
root you'll find some devices people

1666
00:53:27,040 --> 00:53:29,200
have worked on i use the wyzecam

1667
00:53:29,200 --> 00:53:32,559
the wyzecam v2 a lot it's this 25

1668
00:53:32,559 --> 00:53:34,720
wi-fi connected camera for

1669
00:53:34,720 --> 00:53:35,920
demonstrations because there's a bunch

1670
00:53:35,920 --> 00:53:37,040
of ways to root it purely through

1671
00:53:37,040 --> 00:53:38,400
software just firmware

1672
00:53:38,400 --> 00:53:40,319
there's multiple ways to root it through

1673
00:53:40,319 --> 00:53:42,160
hardware it's great

1674
00:53:42,160 --> 00:53:43,839
but yeah basically any device you find

1675
00:53:43,839 --> 00:53:45,200
online where someone's rooted it with

1676
00:53:45,200 --> 00:53:46,400
hardware

1677
00:53:46,400 --> 00:53:48,559
go for it there's not a lot of cheap iot

1678
00:53:48,559 --> 00:53:49,920
devices that are very secure

1679
00:53:49,920 --> 00:53:51,119
especially on the hardware side of

1680
00:53:51,119 --> 00:53:53,040
things

1681
00:53:53,040 --> 00:53:55,520
awesome okay so basically look for blogs

1682
00:53:55,520 --> 00:53:56,720
or write-ups or something that already

1683
00:53:56,720 --> 00:53:58,480
exists and then try and buy that exact

1684
00:53:58,480 --> 00:53:59,520
hardware

1685
00:53:59,520 --> 00:54:01,839
that's absolutely and and in terms of

1686
00:54:01,839 --> 00:54:03,200
like cost when you're when you're

1687
00:54:03,200 --> 00:54:05,040
starting out like how much

1688
00:54:05,040 --> 00:54:08,240
would you expect to pay for i know you

1689
00:54:08,240 --> 00:54:10,880
covered this but maybe for a device and

1690
00:54:10,880 --> 00:54:12,480
a ui cable or anything else that you

1691
00:54:12,480 --> 00:54:14,160
might need to get started like

1692
00:54:14,160 --> 00:54:16,480
do you think it's like ten dollars fifty

1693
00:54:16,480 --> 00:54:18,559
dollars a hundred talking like us

1694
00:54:18,559 --> 00:54:20,160
dollars

1695
00:54:20,160 --> 00:54:22,720
so depends on what you wanna do you can

1696
00:54:22,720 --> 00:54:24,400
spend a few thousand dollars on some

1697
00:54:24,400 --> 00:54:26,160
crazy devices and tools but you know you

1698
00:54:26,160 --> 00:54:27,920
don't need that to get started

1699
00:54:27,920 --> 00:54:29,680
if you want to buy a three dollar

1700
00:54:29,680 --> 00:54:32,240
arduino clone a three dollar cable

1701
00:54:32,240 --> 00:54:34,400
and then ask someone for an old ip

1702
00:54:34,400 --> 00:54:35,920
camera they're not using

1703
00:54:35,920 --> 00:54:38,079
six dollars if you want to buy a brand

1704
00:54:38,079 --> 00:54:40,000
new device for hacking it go for it

1705
00:54:40,000 --> 00:54:41,359
but i mean a lot of people have these

1706
00:54:41,359 --> 00:54:43,040
like old devices kicking around like old

1707
00:54:43,040 --> 00:54:43,920
routers from

1708
00:54:43,920 --> 00:54:46,319
a non-technical person's house or like

1709
00:54:46,319 --> 00:54:48,000
old camera security cameras

1710
00:54:48,000 --> 00:54:50,640
modems just ask around someone you know

1711
00:54:50,640 --> 00:54:51,839
definitely has some old hardware they're

1712
00:54:51,839 --> 00:54:52,880
looking to get rid of that's just

1713
00:54:52,880 --> 00:54:54,480
clutter for them

1714
00:54:54,480 --> 00:54:56,720
nice all right that's cool that's cool

1715
00:54:56,720 --> 00:54:58,079
you're convincing me

1716
00:54:58,079 --> 00:55:01,440
so i know that i'm holding up jay and

1717
00:55:01,440 --> 00:55:04,960
and jay is a hardware hacking

1718
00:55:04,960 --> 00:55:07,040
guy i know he does a lot of car hacking

1719
00:55:07,040 --> 00:55:09,520
stuff so um i know jay's got to stop

1720
00:55:09,520 --> 00:55:11,280
a bunch of stuff he wants to ask jay

1721
00:55:11,280 --> 00:55:12,799
take it away

1722
00:55:12,799 --> 00:55:15,920
all right thanks lyric uh hey

1723
00:55:15,920 --> 00:55:18,799
buses can fly so i know that a lot of

1724
00:55:18,799 --> 00:55:20,079
hardware hackers started

1725
00:55:20,079 --> 00:55:24,240
with urt2 serial converters and also

1726
00:55:24,240 --> 00:55:27,920
jtagilator and bus pirates as a hardware

1727
00:55:27,920 --> 00:55:28,880
hacker

1728
00:55:28,880 --> 00:55:31,599
what is your favorite tool that you love

1729
00:55:31,599 --> 00:55:32,400
most

1730
00:55:32,400 --> 00:55:35,440
really oh man that's tough i think it

1731
00:55:35,440 --> 00:55:37,040
changes basically whenever we get a new

1732
00:55:37,040 --> 00:55:39,520
toy that's my favorite one

1733
00:55:39,520 --> 00:55:40,480
there's a lot of like really

1734
00:55:40,480 --> 00:55:43,280
multi-purpose ones

1735
00:55:43,280 --> 00:55:46,720
gosh i don't know i think i like

1736
00:55:46,720 --> 00:55:48,240
some of my logic analyzers or an

1737
00:55:48,240 --> 00:55:50,000
oscilloscope a lot it's just really cool

1738
00:55:50,000 --> 00:55:50,960
to visualize

1739
00:55:50,960 --> 00:55:52,720
a lot of the hardware communication

1740
00:55:52,720 --> 00:55:54,480
that's going on but

1741
00:55:54,480 --> 00:55:57,680
i like pretty graphs that's about it

1742
00:55:57,680 --> 00:56:01,359
okay now uh in terms of because

1743
00:56:01,359 --> 00:56:04,400
you're also interested with uh

1744
00:56:04,400 --> 00:56:06,960
car hacking and automotive security what

1745
00:56:06,960 --> 00:56:08,079
do you focus

1746
00:56:08,079 --> 00:56:11,040
usually when you try to be in a bug bash

1747
00:56:11,040 --> 00:56:12,079
or if

1748
00:56:12,079 --> 00:56:15,200
uh your target is a car as a hardware

1749
00:56:15,200 --> 00:56:16,880
hacker

1750
00:56:16,880 --> 00:56:19,040
so it depends honestly with a lot of

1751
00:56:19,040 --> 00:56:20,880
like like car hacking bug batches i've

1752
00:56:20,880 --> 00:56:21,440
done

1753
00:56:21,440 --> 00:56:23,280
i'm focusing kind of more on the linux

1754
00:56:23,280 --> 00:56:24,960
side usually you'll find like i've

1755
00:56:24,960 --> 00:56:26,400
worked with some cars where

1756
00:56:26,400 --> 00:56:27,599
it's pretty hardened and then there's a

1757
00:56:27,599 --> 00:56:29,680
serial connection side a uart breakout

1758
00:56:29,680 --> 00:56:30,960
and it just drops you to root on the

1759
00:56:30,960 --> 00:56:32,880
infotainment system

1760
00:56:32,880 --> 00:56:34,240
normally with bug bashers and there's

1761
00:56:34,240 --> 00:56:36,079
not enough time or i'm not really

1762
00:56:36,079 --> 00:56:37,119
allowed to just

1763
00:56:37,119 --> 00:56:40,079
pop the plastic on the car and get into

1764
00:56:40,079 --> 00:56:41,200
the hardware

1765
00:56:41,200 --> 00:56:43,200
but if you're working with can networks

1766
00:56:43,200 --> 00:56:44,960
like the obd2 port on the car on the

1767
00:56:44,960 --> 00:56:45,599
dash

1768
00:56:45,599 --> 00:56:46,960
there's a lot of good hardware tools for

1769
00:56:46,960 --> 00:56:48,640
that already

1770
00:56:48,640 --> 00:56:50,480
if i was doing more of a long term thing

1771
00:56:50,480 --> 00:56:52,480
i might order something or build up

1772
00:56:52,480 --> 00:56:54,480
some sort of custom tool for this device

1773
00:56:54,480 --> 00:56:55,839
like i know ian tambor

1774
00:56:55,839 --> 00:56:58,240
ian taber mintynet built some custom

1775
00:56:58,240 --> 00:57:00,160
arduino bluetooth stuff

1776
00:57:00,160 --> 00:57:03,119
but for the most part i use available

1777
00:57:03,119 --> 00:57:03,440
cheap

1778
00:57:03,440 --> 00:57:06,079
obd2 dongles and or just focus on the

1779
00:57:06,079 --> 00:57:08,000
infotainment side of things

1780
00:57:08,000 --> 00:57:10,319
all right yeah pretty much the same with

1781
00:57:10,319 --> 00:57:12,640
me as well and i also use like

1782
00:57:12,640 --> 00:57:16,000
uh obd tools for testing cars

1783
00:57:16,000 --> 00:57:19,040
but yeah thanks for sharing that one

1784
00:57:19,040 --> 00:57:22,720
thanks i have a pretty uh dumb question

1785
00:57:22,720 --> 00:57:25,839
um but it's more a question that came

1786
00:57:25,839 --> 00:57:26,240
from

1787
00:57:26,240 --> 00:57:29,359
one of our um people in discord uh it's

1788
00:57:29,359 --> 00:57:31,520
it's a really good question my opinion

1789
00:57:31,520 --> 00:57:32,480
how do you actually take

1790
00:57:32,480 --> 00:57:34,480
notes for something like hardware

1791
00:57:34,480 --> 00:57:36,559
considering it's a physical device how

1792
00:57:36,559 --> 00:57:36,880
are you

1793
00:57:36,880 --> 00:57:38,400
do you like take pictures or something

1794
00:57:38,400 --> 00:57:40,160
like that how do you kind of go about a

1795
00:57:40,160 --> 00:57:42,480
methodology for it

1796
00:57:42,480 --> 00:57:45,440
so uh i'm pretty unorganized but

1797
00:57:45,440 --> 00:57:47,440
sometimes i just take a sharpie and draw

1798
00:57:47,440 --> 00:57:49,040
on the circuit board itself

1799
00:57:49,040 --> 00:57:50,880
um up to you if you want to do that but

1800
00:57:50,880 --> 00:57:52,559
like just drawing an arrow to a pin and

1801
00:57:52,559 --> 00:57:54,079
labeling what it is works for me

1802
00:57:54,079 --> 00:57:55,680
but i mean if it's hardware you can draw

1803
00:57:55,680 --> 00:57:57,440
a little diagram if you're mapping out

1804
00:57:57,440 --> 00:57:58,880
16 pins you can draw

1805
00:57:58,880 --> 00:58:01,040
16 rectangles and put an error to that

1806
00:58:01,040 --> 00:58:02,079
but

1807
00:58:02,079 --> 00:58:04,079
um with a lot of it's kind of trial and

1808
00:58:04,079 --> 00:58:05,520
error if you're like trying to figure

1809
00:58:05,520 --> 00:58:07,200
out your interface you just work pin by

1810
00:58:07,200 --> 00:58:08,160
pin

1811
00:58:08,160 --> 00:58:10,079
but overall same way you take notes

1812
00:58:10,079 --> 00:58:11,760
however you want maybe like a

1813
00:58:11,760 --> 00:58:13,359
trello board or something isn't as easy

1814
00:58:13,359 --> 00:58:15,040
but hand notes on a piece of paper would

1815
00:58:15,040 --> 00:58:17,279
work

1816
00:58:17,599 --> 00:58:20,960
great yeah i also have another question

1817
00:58:20,960 --> 00:58:22,079
oh sorry

1818
00:58:22,079 --> 00:58:24,480
uh do you have another question i'm not

1819
00:58:24,480 --> 00:58:25,680
a secretary

1820
00:58:25,680 --> 00:58:28,079
okay so i have i think this is my

1821
00:58:28,079 --> 00:58:29,599
probably last question

1822
00:58:29,599 --> 00:58:32,640
so um i think most

1823
00:58:32,640 --> 00:58:34,960
hackers or other hackers who have been

1824
00:58:34,960 --> 00:58:37,040
to iot security they have brick

1825
00:58:37,040 --> 00:58:39,920
most of their firmwares and uh i mean

1826
00:58:39,920 --> 00:58:42,240
their devices and then

1827
00:58:42,240 --> 00:58:45,359
i've seen the question in discord uh

1828
00:58:45,359 --> 00:58:47,599
that they have like you know maybe

1829
00:58:47,599 --> 00:58:50,000
they're scared to

1830
00:58:50,000 --> 00:58:51,920
play with it because they might break

1831
00:58:51,920 --> 00:58:53,280
their router

1832
00:58:53,280 --> 00:58:56,400
or they might break their device so what

1833
00:58:56,400 --> 00:58:58,480
are your

1834
00:58:58,480 --> 00:59:01,920
ex what could you advise them if somehow

1835
00:59:01,920 --> 00:59:02,799
they

1836
00:59:02,799 --> 00:59:04,319
they break their device because i know

1837
00:59:04,319 --> 00:59:05,839
that there are ways but

1838
00:59:05,839 --> 00:59:08,079
you know from your side just want to

1839
00:59:08,079 --> 00:59:09,599
know

1840
00:59:09,599 --> 00:59:12,799
how would you advise them sure i mean

1841
00:59:12,799 --> 00:59:13,680
this is pretty

1842
00:59:13,680 --> 00:59:14,880
device specific but there's a lot of

1843
00:59:14,880 --> 00:59:17,760
things to look for sometimes or usually

1844
00:59:17,760 --> 00:59:19,440
the manufacturer device will have

1845
00:59:19,440 --> 00:59:21,200
firmware updates published on the site a

1846
00:59:21,200 --> 00:59:23,040
lot of a lot of hardware does do

1847
00:59:23,040 --> 00:59:24,880
automatic updates but they'll still

1848
00:59:24,880 --> 00:59:27,280
upload firmware and if you didn't

1849
00:59:27,280 --> 00:59:29,920
corrupt like the bootloader just the

1850
00:59:29,920 --> 00:59:32,240
normal like linux lan stuff then you can

1851
00:59:32,240 --> 00:59:34,000
just flash the stock firmware and go

1852
00:59:34,000 --> 00:59:34,559
from there

1853
00:59:34,559 --> 00:59:36,640
if you need a more low level stuff like

1854
00:59:36,640 --> 00:59:38,000
i mentioned jtag

1855
00:59:38,000 --> 00:59:41,040
if the sbi flash chip is connected to

1856
00:59:41,040 --> 00:59:42,079
the cpu

1857
00:59:42,079 --> 00:59:45,200
you can just like rewrite it all

1858
00:59:45,200 --> 00:59:47,119
with the original firmware or if you're

1859
00:59:47,119 --> 00:59:48,240
doing the hardware stuff that i

1860
00:59:48,240 --> 00:59:49,280
mentioned where you pull the chip

1861
00:59:49,280 --> 00:59:51,119
off to read the data those chip

1862
00:59:51,119 --> 00:59:53,280
programmers also can just write data

1863
00:59:53,280 --> 00:59:55,760
so if you read your data save it brick

1864
00:59:55,760 --> 00:59:57,520
it later and then re-flash it onto the

1865
00:59:57,520 --> 00:59:57,839
chip

1866
00:59:57,839 --> 01:00:01,200
you should be good to go

1867
01:00:01,200 --> 01:00:02,960
right thanks because i want you i just

1868
01:00:02,960 --> 01:00:04,720
want to clear it from the people who are

1869
01:00:04,720 --> 01:00:05,760
asking and then that's

1870
01:00:05,760 --> 01:00:08,480
discord yeah so thank you no problem and

1871
01:00:08,480 --> 01:00:10,000
i think if you're afraid of breaking

1872
01:00:10,000 --> 01:00:10,880
things

1873
01:00:10,880 --> 01:00:13,040
start cheap but you know don't be afraid

1874
01:00:13,040 --> 01:00:14,319
if you break something it's always the

1875
01:00:14,319 --> 01:00:15,359
best way to learn

1876
01:00:15,359 --> 01:00:19,119
i have bricked a car that an oem has

1877
01:00:19,119 --> 01:00:22,400
left us to use and it was it was fixed

1878
01:00:22,400 --> 01:00:22,799
you know

1879
01:00:22,799 --> 01:00:26,319
go go for it yep i've also broke

1880
01:00:26,319 --> 01:00:30,720
my other car as well and uh

1881
01:00:30,720 --> 01:00:33,760
you know i just went to the car

1882
01:00:33,760 --> 01:00:35,280
manufacturer for it

1883
01:00:35,280 --> 01:00:37,680
but you know it's fun you learn fast

1884
01:00:37,680 --> 01:00:40,399
when you break a car

1885
01:00:40,480 --> 01:00:43,359
well thanks so much for uh coming buses

1886
01:00:43,359 --> 01:00:44,079
we really

1887
01:00:44,079 --> 01:00:45,760
really enjoyed it it was a really good

1888
01:00:45,760 --> 01:00:47,520
talk um

1889
01:00:47,520 --> 01:00:49,599
and yeah it's been great having you on

1890
01:00:49,599 --> 01:00:51,040
so thanks and hopefully we'll see you

1891
01:00:51,040 --> 01:00:53,119
again in the future level ups

1892
01:00:53,119 --> 01:00:57,839
absolutely thanks so much everyone

1893
01:00:59,870 --> 01:01:06,739
[Music]

