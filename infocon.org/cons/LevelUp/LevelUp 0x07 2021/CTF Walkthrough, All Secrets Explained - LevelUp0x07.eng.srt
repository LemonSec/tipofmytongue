1
00:00:15,250 --> 00:00:22,090
[Music]

2
00:00:22,240 --> 00:00:24,080
hey everyone so

3
00:00:24,080 --> 00:00:26,000
this next uh section that we're going to

4
00:00:26,000 --> 00:00:27,199
jump into is

5
00:00:27,199 --> 00:00:29,760
actually going to be a little bashed

6
00:00:29,760 --> 00:00:30,560
through the

7
00:00:30,560 --> 00:00:33,760
the bug crowd level up seven ctf and

8
00:00:33,760 --> 00:00:35,440
uh i believe that submissions for that

9
00:00:35,440 --> 00:00:37,040
are now closed

10
00:00:37,040 --> 00:00:40,719
but um we uh at least i haven't

11
00:00:40,719 --> 00:00:44,160
um gone through it yet so um basically

12
00:00:44,160 --> 00:00:46,399
i'm gonna be bashing through it and you

13
00:00:46,399 --> 00:00:48,079
guys can see how bad i am

14
00:00:48,079 --> 00:00:51,520
at ctfs and uh luckily i've got the

15
00:00:51,520 --> 00:00:52,399
brains trust

16
00:00:52,399 --> 00:00:55,520
to help me out here so everybody

17
00:00:55,520 --> 00:00:59,600
welcome maxim maxim is an employee of

18
00:00:59,600 --> 00:01:00,559
bug crowd

19
00:01:00,559 --> 00:01:03,440
and uh he actually created the ctf am i

20
00:01:03,440 --> 00:01:04,479
right maxim

21
00:01:04,479 --> 00:01:06,799
yes sir um hi everybody my name is maxim

22
00:01:06,799 --> 00:01:08,560
i've been triaging here about crowd for

23
00:01:08,560 --> 00:01:09,760
nearly two years

24
00:01:09,760 --> 00:01:13,360
um so some quick context about the ctf

25
00:01:13,360 --> 00:01:14,960
sort of with the last ctf i built for

26
00:01:14,960 --> 00:01:16,479
bug crowd which was graphical i wanted

27
00:01:16,479 --> 00:01:17,280
to sort of

28
00:01:17,280 --> 00:01:19,520
show a lot of the stuff that's submitted

29
00:01:19,520 --> 00:01:20,880
commonly about crowd that turns out to

30
00:01:20,880 --> 00:01:21,600
have to be n a

31
00:01:21,600 --> 00:01:24,080
or out of scope or not reproducible and

32
00:01:24,080 --> 00:01:25,439
sometimes even p5

33
00:01:25,439 --> 00:01:26,560
and i kind of wanted to show how you

34
00:01:26,560 --> 00:01:27,680
could take those bugs chain them

35
00:01:27,680 --> 00:01:28,880
together and leverage it

36
00:01:28,880 --> 00:01:32,320
so the reason i did that is because um

37
00:01:32,320 --> 00:01:34,000
my fellow triagers and i we've noticed

38
00:01:34,000 --> 00:01:35,520
that we would explain to a researcher

39
00:01:35,520 --> 00:01:36,400
why something

40
00:01:36,400 --> 00:01:38,799
is was marked as such and then we would

41
00:01:38,799 --> 00:01:39,920
wake up the next morning and they would

42
00:01:39,920 --> 00:01:40,400
submit

43
00:01:40,400 --> 00:01:42,399
you know very same or dissimilar finding

44
00:01:42,399 --> 00:01:44,000
on a different program so

45
00:01:44,000 --> 00:01:45,920
i felt that instead of rather explaining

46
00:01:45,920 --> 00:01:47,520
to someone i'd rather demonstrate it and

47
00:01:47,520 --> 00:01:48,960
have them play the ctf and learn it for

48
00:01:48,960 --> 00:01:51,439
themselves

49
00:01:51,439 --> 00:01:53,439
awesome so so the whole kind of idea

50
00:01:53,439 --> 00:01:55,040
behind the ctf was

51
00:01:55,040 --> 00:01:58,000
to be an educational piece about um you

52
00:01:58,000 --> 00:01:58,960
know

53
00:01:58,960 --> 00:02:00,880
being able to submit bugs that have a

54
00:02:00,880 --> 00:02:02,479
security impact right

55
00:02:02,479 --> 00:02:04,159
yeah correct um throughout the ctf

56
00:02:04,159 --> 00:02:05,920
you'll see like a lot of uh tidbits i

57
00:02:05,920 --> 00:02:07,600
guess you could say there's some like

58
00:02:07,600 --> 00:02:09,520
tips some uh stuff that i've seen in my

59
00:02:09,520 --> 00:02:10,639
triage work that i thought was pretty

60
00:02:10,639 --> 00:02:12,080
cool that i wanted to share with people

61
00:02:12,080 --> 00:02:12,879
so

62
00:02:12,879 --> 00:02:15,599
yeah that's kind of the gist of it all

63
00:02:15,599 --> 00:02:16,080
right

64
00:02:16,080 --> 00:02:17,760
cool well how did you wanna how did you

65
00:02:17,760 --> 00:02:19,120
want to kick this off

66
00:02:19,120 --> 00:02:21,440
uh also if you we didn't mention this

67
00:02:21,440 --> 00:02:23,120
but from the previous talk if you want

68
00:02:23,120 --> 00:02:24,480
to follow buses

69
00:02:24,480 --> 00:02:28,000
can fly um he's on twitter

70
00:02:28,000 --> 00:02:30,319
so let me just make sure that i'm going

71
00:02:30,319 --> 00:02:32,319
to say this right by

72
00:02:32,319 --> 00:02:34,640
actually going to the twitter profile

73
00:02:34,640 --> 00:02:36,160
yeah it's buses can fly that is

74
00:02:36,160 --> 00:02:37,280
literally the twitter handle so

75
00:02:37,280 --> 00:02:38,640
twitter.com

76
00:02:38,640 --> 00:02:42,400
buses b-u-s-e-s can can fly f-l-y

77
00:02:42,400 --> 00:02:45,040
so um definitely check him out follow if

78
00:02:45,040 --> 00:02:46,640
you're into hardware hacking

79
00:02:46,640 --> 00:02:48,560
in any way whatsoever you'll you'll get

80
00:02:48,560 --> 00:02:50,000
a lot out of following him

81
00:02:50,000 --> 00:02:53,519
so yeah anyway back to the ctf um

82
00:02:53,519 --> 00:02:56,560
so maxim um you're sharing your screen

83
00:02:56,560 --> 00:02:57,200
now right

84
00:02:57,200 --> 00:02:59,680
correct does everybody see it all right

85
00:02:59,680 --> 00:03:00,400
so if

86
00:03:00,400 --> 00:03:02,080
anyone wants to follow on although we're

87
00:03:02,080 --> 00:03:04,640
not accepting submissions now

88
00:03:04,640 --> 00:03:08,480
uh we are still we still have the ctf

89
00:03:08,480 --> 00:03:10,560
live so you can kind of follow through

90
00:03:10,560 --> 00:03:12,400
so i think maxim's gonna

91
00:03:12,400 --> 00:03:14,159
actually go through the ctf is that

92
00:03:14,159 --> 00:03:16,080
right maxim and i'm basically gonna ask

93
00:03:16,080 --> 00:03:17,599
stupid questions along the way

94
00:03:17,599 --> 00:03:21,120
along with sujeeb and um and jay

95
00:03:21,120 --> 00:03:23,519
so let's do it maxim what's the first

96
00:03:23,519 --> 00:03:24,319
step

97
00:03:24,319 --> 00:03:25,680
all right awesome so i'm gonna give a

98
00:03:25,680 --> 00:03:27,519
quick disclaimer um it's gonna seem a

99
00:03:27,519 --> 00:03:28,720
little linear right now because i

100
00:03:28,720 --> 00:03:30,319
honestly i obviously don't have the time

101
00:03:30,319 --> 00:03:31,680
to you know sit there and do a search

102
00:03:31,680 --> 00:03:33,120
boot directly brute force through all

103
00:03:33,120 --> 00:03:34,080
the things so

104
00:03:34,080 --> 00:03:37,040
uh forgive me for that so um yeah so

105
00:03:37,040 --> 00:03:37,840
when you

106
00:03:37,840 --> 00:03:40,239
load up the o7 level ctf you get this

107
00:03:40,239 --> 00:03:42,000
page right here um

108
00:03:42,000 --> 00:03:44,400
you can type in brief and you sort of

109
00:03:44,400 --> 00:03:45,519
see the

110
00:03:45,519 --> 00:03:48,239
um kind of the lore of the story so long

111
00:03:48,239 --> 00:03:49,760
story short basically there's an evil

112
00:03:49,760 --> 00:03:51,040
spy agency called albus

113
00:03:51,040 --> 00:03:52,799
that's uh that's led by the evil

114
00:03:52,799 --> 00:03:54,560
matriarch and

115
00:03:54,560 --> 00:03:55,519
they're trying to delete all the

116
00:03:55,519 --> 00:03:57,760
information related to covet 19 using uh

117
00:03:57,760 --> 00:03:58,879
the wanna spy

118
00:03:58,879 --> 00:04:02,000
um ransomware so

119
00:04:02,000 --> 00:04:04,239
our job is to infiltrate it um there was

120
00:04:04,239 --> 00:04:06,239
one agent that did but however we lost

121
00:04:06,239 --> 00:04:07,680
contact with them but they planted

122
00:04:07,680 --> 00:04:09,920
something at slash radio which requires

123
00:04:09,920 --> 00:04:12,879
authentication for us to get to so um

124
00:04:12,879 --> 00:04:13,840
the first thing you would do is

125
00:04:13,840 --> 00:04:15,439
obviously start directly brute forcing

126
00:04:15,439 --> 00:04:15,840
so

127
00:04:15,840 --> 00:04:17,358
uh you would pretty much come up

128
00:04:17,358 --> 00:04:19,519
immediately on slash login

129
00:04:19,519 --> 00:04:21,358
and kind of looks like an obvious page

130
00:04:21,358 --> 00:04:22,960
really nothing to see here

131
00:04:22,960 --> 00:04:24,800
um just like with everything you'll

132
00:04:24,800 --> 00:04:26,160
check the page source

133
00:04:26,160 --> 00:04:28,720
and you'll see you know it looks like a

134
00:04:28,720 --> 00:04:29,199
common

135
00:04:29,199 --> 00:04:30,400
bootstrap you have your jake where you

136
00:04:30,400 --> 00:04:33,199
have your css but you have uh something

137
00:04:33,199 --> 00:04:34,400
here that's

138
00:04:34,400 --> 00:04:36,720
pretty not normal so in terms of

139
00:04:36,720 --> 00:04:38,000
bootstrap so when you open it it

140
00:04:38,000 --> 00:04:39,120
actually does look like bootstrap and

141
00:04:39,120 --> 00:04:39,520
that was

142
00:04:39,520 --> 00:04:42,160
kind of done to throw people off but you

143
00:04:42,160 --> 00:04:43,680
can always modify custom javascript

144
00:04:43,680 --> 00:04:45,280
files and that's sort of what

145
00:04:45,280 --> 00:04:46,880
i was trying to show here is that even

146
00:04:46,880 --> 00:04:48,639
if the file seems to be like

147
00:04:48,639 --> 00:04:50,240
default that comes with you know the

148
00:04:50,240 --> 00:04:51,680
bootstrap installation

149
00:04:51,680 --> 00:04:53,360
it's still a good idea to look through

150
00:04:53,360 --> 00:04:55,600
it so you eventually start looking

151
00:04:55,600 --> 00:04:56,160
through it

152
00:04:56,160 --> 00:04:59,120
and then you would look up for uh flag

153
00:04:59,120 --> 00:04:59,680
or

154
00:04:59,680 --> 00:05:02,639
you would find flag and so there's a

155
00:05:02,639 --> 00:05:03,600
small to do note

156
00:05:03,600 --> 00:05:05,440
and it says add secret backboard to

157
00:05:05,440 --> 00:05:06,639
download app because who looks in

158
00:05:06,639 --> 00:05:08,240
javascript files anyway

159
00:05:08,240 --> 00:05:10,720
um and you would get the first flag and

160
00:05:10,720 --> 00:05:12,160
along with that you also get an

161
00:05:12,160 --> 00:05:13,360
endpoint so that's one of the things i

162
00:05:13,360 --> 00:05:15,600
wanted to kind of um push on is that you

163
00:05:15,600 --> 00:05:17,520
know look for endpoints as well

164
00:05:17,520 --> 00:05:20,880
um sorry yeah so when i first started

165
00:05:20,880 --> 00:05:22,000
doing that ctf

166
00:05:22,000 --> 00:05:24,000
um when i was just looking at it this

167
00:05:24,000 --> 00:05:25,199
morning i

168
00:05:25,199 --> 00:05:26,880
saw the login page i found the login

169
00:05:26,880 --> 00:05:29,120
page i think if you go to slash radio

170
00:05:29,120 --> 00:05:30,320
so that's where the link is if you go to

171
00:05:30,320 --> 00:05:32,560
slash radio it will redirect to login

172
00:05:32,560 --> 00:05:34,880
yeah that's correct so i use the level

173
00:05:34,880 --> 00:05:36,160
which is like an mvc framework so it

174
00:05:36,160 --> 00:05:37,680
just pulls up the view so you think that

175
00:05:37,680 --> 00:05:40,960
it's redirecting but yeah yeah yeah so

176
00:05:40,960 --> 00:05:43,520
um the first thing that i tried when i

177
00:05:43,520 --> 00:05:44,560
went to that is like

178
00:05:44,560 --> 00:05:46,800
uh some injections on the actual login

179
00:05:46,800 --> 00:05:48,320
page and i kind of caught the login

180
00:05:48,320 --> 00:05:49,680
thing and burp and i was like

181
00:05:49,680 --> 00:05:51,680
surely the way past this is to get past

182
00:05:51,680 --> 00:05:53,280
the login right but

183
00:05:53,280 --> 00:05:55,039
uh it's not it was checking the

184
00:05:55,039 --> 00:05:56,560
javascript files right

185
00:05:56,560 --> 00:05:57,680
and that's kind of what i wanted to

186
00:05:57,680 --> 00:06:00,000
point to it was yeah it's not always

187
00:06:00,000 --> 00:06:01,840
injections um

188
00:06:01,840 --> 00:06:03,440
so we could just type in like arbitrary

189
00:06:03,440 --> 00:06:05,360
usernames and stuff and we'll see that's

190
00:06:05,360 --> 00:06:07,199
in bad credentials try to do like some

191
00:06:07,199 --> 00:06:08,160
sort of

192
00:06:08,160 --> 00:06:10,160
you know it really won't return anything

193
00:06:10,160 --> 00:06:11,440
um

194
00:06:11,440 --> 00:06:14,800
so this itself um in terms of

195
00:06:14,800 --> 00:06:16,720
if you would submit a report like this

196
00:06:16,720 --> 00:06:18,639
since there's really nothing being

197
00:06:18,639 --> 00:06:19,919
you know obvious right now they would be

198
00:06:19,919 --> 00:06:21,600
kind of deemed as a p5 or n a because

199
00:06:21,600 --> 00:06:23,360
you're really not showing any impact

200
00:06:23,360 --> 00:06:24,800
you know obviously once you start going

201
00:06:24,800 --> 00:06:26,000
through this we'll start seeing the

202
00:06:26,000 --> 00:06:27,440
impact

203
00:06:27,440 --> 00:06:30,000
so yeah so you get um basically a new

204
00:06:30,000 --> 00:06:31,600
endpoint which is basically a secret

205
00:06:31,600 --> 00:06:32,800
communication so

206
00:06:32,800 --> 00:06:35,840
if we browse it here

207
00:06:36,080 --> 00:06:38,080
uh just a quick thing while we're um

208
00:06:38,080 --> 00:06:39,120
doing this sorry

209
00:06:39,120 --> 00:06:41,120
um just as a quick tip for anyone who's

210
00:06:41,120 --> 00:06:42,800
doing ctf since i've played a bunch of

211
00:06:42,800 --> 00:06:43,280
them

212
00:06:43,280 --> 00:06:45,039
uh one of the easiest things to do is

213
00:06:45,039 --> 00:06:46,880
always search your burp logs

214
00:06:46,880 --> 00:06:49,919
for the word flag um you'll like a lot

215
00:06:49,919 --> 00:06:51,280
of them you'll actually find missing

216
00:06:51,280 --> 00:06:52,880
flags and things like that just really

217
00:06:52,880 --> 00:06:53,919
does help

218
00:06:53,919 --> 00:06:56,240
that's actually a great tip yeah yeah

219
00:06:56,240 --> 00:06:58,080
that's actually how i found this flag

220
00:06:58,080 --> 00:06:58,560
too

221
00:06:58,560 --> 00:07:00,479
because uh in the i think it was the

222
00:07:00,479 --> 00:07:01,680
program brief

223
00:07:01,680 --> 00:07:04,319
it said um it says that the format of

224
00:07:04,319 --> 00:07:05,199
the flag

225
00:07:05,199 --> 00:07:07,120
so then i could just search flag in my

226
00:07:07,120 --> 00:07:10,479
in my burp history and it came up

227
00:07:10,479 --> 00:07:12,400
yeah so actually we could just try to do

228
00:07:12,400 --> 00:07:13,680
it live because i have this proxy

229
00:07:13,680 --> 00:07:14,960
through burp so

230
00:07:14,960 --> 00:07:17,840
yeah sure

231
00:07:22,000 --> 00:07:24,400
yep so sorry my computer might be a

232
00:07:24,400 --> 00:07:26,800
little laggy because i'm streaming but

233
00:07:26,800 --> 00:07:29,199
um yeah it's kind of lagging out but

234
00:07:29,199 --> 00:07:30,479
yeah we'll pull it up here

235
00:07:30,479 --> 00:07:32,639
and you see it has eight results so if

236
00:07:32,639 --> 00:07:33,759
we pretty much look at the response

237
00:07:33,759 --> 00:07:35,599
we'll find the flag

238
00:07:35,599 --> 00:07:38,400
yeah right so yeah so eventually we come

239
00:07:38,400 --> 00:07:39,759
up it downloads this apk

240
00:07:39,759 --> 00:07:42,960
um so what i did was um i have like the

241
00:07:42,960 --> 00:07:44,319
android emulator loading

242
00:07:44,319 --> 00:07:45,840
running here with the installed already

243
00:07:45,840 --> 00:07:48,160
so i don't install it on stream um

244
00:07:48,160 --> 00:07:51,919
so you can launch it and

245
00:07:52,240 --> 00:07:54,400
hopefully it doesn't lag out so it just

246
00:07:54,400 --> 00:07:56,240
looks like a pretty basic login page and

247
00:07:56,240 --> 00:07:57,759
again you could try doing

248
00:07:57,759 --> 00:07:58,879
you know same thing you could try

249
00:07:58,879 --> 00:08:01,520
logging in but uh from logging in you

250
00:08:01,520 --> 00:08:03,120
get you know an error that the app is

251
00:08:03,120 --> 00:08:05,120
down try using the web

252
00:08:05,120 --> 00:08:08,479
so along with uh so i also

253
00:08:08,479 --> 00:08:10,319
threw in some easter eggs that i've had

254
00:08:10,319 --> 00:08:12,000
throughout my crowd experience so one of

255
00:08:12,000 --> 00:08:13,280
them if you click right here it'll have

256
00:08:13,280 --> 00:08:14,560
a dumpster fire so

257
00:08:14,560 --> 00:08:17,520
um i thought that was pretty interesting

258
00:08:17,520 --> 00:08:18,319
um

259
00:08:18,319 --> 00:08:20,319
so yeah so eventually what mo the

260
00:08:20,319 --> 00:08:21,440
majority of people do and this is

261
00:08:21,440 --> 00:08:22,800
something another common issue is that

262
00:08:22,800 --> 00:08:23,520
well

263
00:08:23,520 --> 00:08:25,039
um what we could do is we could just

264
00:08:25,039 --> 00:08:26,560
dump the apk and see if there's any you

265
00:08:26,560 --> 00:08:26,960
know

266
00:08:26,960 --> 00:08:29,039
um you know sensitive information in

267
00:08:29,039 --> 00:08:31,599
there so

268
00:08:32,399 --> 00:08:34,000
so what we could do is just we could

269
00:08:34,000 --> 00:08:36,559
move it into our into here

270
00:08:36,559 --> 00:08:39,839
that is a very pretty shell

271
00:08:39,839 --> 00:08:42,240
it helps

272
00:08:44,080 --> 00:08:46,480
so the majority of the time you'll find

273
00:08:46,480 --> 00:08:48,160
strings in like or sorry

274
00:08:48,160 --> 00:08:49,680
keys and like strings.xml so that's

275
00:08:49,680 --> 00:08:50,800
probably the first place where we will

276
00:08:50,800 --> 00:08:52,240
check

277
00:08:52,240 --> 00:08:54,800
and forgive me i'm not an android guy so

278
00:08:54,800 --> 00:08:56,240
this was actually i kind of wanted to

279
00:08:56,240 --> 00:08:57,920
bring this up as well while this loads

280
00:08:57,920 --> 00:08:59,200
is that a lot of people think that when

281
00:08:59,200 --> 00:09:00,640
building ctfs you kind of really need to

282
00:09:00,640 --> 00:09:01,680
know something like

283
00:09:01,680 --> 00:09:03,839
um you really really need to know well

284
00:09:03,839 --> 00:09:05,279
so for me what i've learned though is

285
00:09:05,279 --> 00:09:05,920
that

286
00:09:05,920 --> 00:09:07,600
when i'm building ctfs i usually do it

287
00:09:07,600 --> 00:09:08,959
with technologies that i don't know so

288
00:09:08,959 --> 00:09:10,800
for example graphql and graphical i did

289
00:09:10,800 --> 00:09:12,080
not know graphql at all

290
00:09:12,080 --> 00:09:14,320
um so that was kind of my breakthrough

291
00:09:14,320 --> 00:09:15,760
in learning how it works by setting it

292
00:09:15,760 --> 00:09:16,240
up

293
00:09:16,240 --> 00:09:18,399
and the beauty of that is that you

294
00:09:18,399 --> 00:09:19,760
completely can go through

295
00:09:19,760 --> 00:09:21,120
all types of different configurations

296
00:09:21,120 --> 00:09:22,720
until you find something you like so

297
00:09:22,720 --> 00:09:24,080
same with android like i've never really

298
00:09:24,080 --> 00:09:25,600
built an android app before and this was

299
00:09:25,600 --> 00:09:27,680
my first time for the ctf so

300
00:09:27,680 --> 00:09:31,200
it's kind of yeah so far anyone that's

301
00:09:31,200 --> 00:09:33,200
wanting to get into ctf so yeah so like

302
00:09:33,200 --> 00:09:37,600
i said uh we can look into strings.xml

303
00:09:37,600 --> 00:09:40,320
okay just as an fy for all the viewers

304
00:09:40,320 --> 00:09:40,880
basically

305
00:09:40,880 --> 00:09:43,120
um maxim's gone ahead and used apk tools

306
00:09:43,120 --> 00:09:44,880
so that's disassembling

307
00:09:44,880 --> 00:09:47,920
the actual um apk package

308
00:09:47,920 --> 00:09:49,920
since it's just like a zip file and it's

309
00:09:49,920 --> 00:09:51,360
going and trying to rebuild some of the

310
00:09:51,360 --> 00:09:52,320
code into a more

311
00:09:52,320 --> 00:09:56,000
accessible um and readable uh object

312
00:09:56,000 --> 00:09:57,519
and just in case you want to wear this

313
00:09:57,519 --> 00:10:00,000
one apk is the extension for

314
00:10:00,000 --> 00:10:03,839
an android app so so the apk file

315
00:10:03,839 --> 00:10:05,360
actually contains app like if you're

316
00:10:05,360 --> 00:10:06,959
using a mac you might have dot app or

317
00:10:06,959 --> 00:10:07,680
whatever

318
00:10:07,680 --> 00:10:10,120
and the other thing is we're looking in

319
00:10:10,120 --> 00:10:11,440
strings.xml now

320
00:10:11,440 --> 00:10:14,560
and we're looking for a flag but

321
00:10:14,560 --> 00:10:17,680
um the way that i actually found this is

322
00:10:17,680 --> 00:10:18,000
by

323
00:10:18,000 --> 00:10:20,240
using grep so i did a recursive graph

324
00:10:20,240 --> 00:10:22,160
for the word flag again

325
00:10:22,160 --> 00:10:25,519
like grep dash r um flag

326
00:10:25,519 --> 00:10:28,079
and then the current directory and um

327
00:10:28,079 --> 00:10:29,519
yeah this is how i found the next flag

328
00:10:29,519 --> 00:10:29,920
but

329
00:10:29,920 --> 00:10:32,000
sorry maxim oh no no worries i'm really

330
00:10:32,000 --> 00:10:33,040
happy you guys are chiming in because

331
00:10:33,040 --> 00:10:34,079
you guys are definitely sharing a lot of

332
00:10:34,079 --> 00:10:35,600
verbose information that i'm sorry if

333
00:10:35,600 --> 00:10:36,160
i'm

334
00:10:36,160 --> 00:10:38,720
missing um and thank you by the way so

335
00:10:38,720 --> 00:10:39,360
yeah so

336
00:10:39,360 --> 00:10:42,320
um once we find the strings.xml file

337
00:10:42,320 --> 00:10:43,200
we'll find

338
00:10:43,200 --> 00:10:46,399
the second flag and uh some

339
00:10:46,399 --> 00:10:47,680
a little bit of background the way that

340
00:10:47,680 --> 00:10:49,279
i kind of build ctfs is that when you

341
00:10:49,279 --> 00:10:50,079
find flags

342
00:10:50,079 --> 00:10:52,079
um it sort of means you're on the right

343
00:10:52,079 --> 00:10:53,680
path and you should keep going this way

344
00:10:53,680 --> 00:10:55,279
so that's kind of how i like to

345
00:10:55,279 --> 00:10:56,560
you know keep the player knowing that

346
00:10:56,560 --> 00:10:57,920
hey you know they're succeeding in some

347
00:10:57,920 --> 00:10:58,640
sort

348
00:10:58,640 --> 00:11:00,320
so yeah so once we find the second flag

349
00:11:00,320 --> 00:11:01,680
right above it we find this encrypted

350
00:11:01,680 --> 00:11:02,720
jackie

351
00:11:02,720 --> 00:11:05,440
so and that's another issue that we get

352
00:11:05,440 --> 00:11:06,880
a lot of street auditors is that people

353
00:11:06,880 --> 00:11:08,160
just dump the apps and they'll be like

354
00:11:08,160 --> 00:11:09,680
well here's the api key figure out what

355
00:11:09,680 --> 00:11:10,160
it does

356
00:11:10,160 --> 00:11:12,640
and a lot of times you know that api

357
00:11:12,640 --> 00:11:14,240
keys can be public or you know they're

358
00:11:14,240 --> 00:11:15,440
meant to be public and they have no

359
00:11:15,440 --> 00:11:16,480
security

360
00:11:16,480 --> 00:11:17,920
issue and you know especially with big

361
00:11:17,920 --> 00:11:20,399
companies for them to chase down an ap

362
00:11:20,399 --> 00:11:22,079
api key like that it can really take

363
00:11:22,079 --> 00:11:23,680
weeks or months and a lot of companies

364
00:11:23,680 --> 00:11:24,880
now are at the point where they just ask

365
00:11:24,880 --> 00:11:26,320
for proof of concept demonstrating

366
00:11:26,320 --> 00:11:28,160
active exploitation

367
00:11:28,160 --> 00:11:30,480
actually even as triage as we push back

368
00:11:30,480 --> 00:11:31,760
on that now so

369
00:11:31,760 --> 00:11:35,200
so like um if you find an api key

370
00:11:35,200 --> 00:11:37,040
most of the api keys that you'll find

371
00:11:37,040 --> 00:11:38,800
are meant to be public

372
00:11:38,800 --> 00:11:40,959
they're not meant to be secret api keys

373
00:11:40,959 --> 00:11:42,399
so that's um

374
00:11:42,399 --> 00:11:43,839
that's one of the things that we get a

375
00:11:43,839 --> 00:11:46,560
lot um in the triage queues at bug crowd

376
00:11:46,560 --> 00:11:48,240
is people submitting like

377
00:11:48,240 --> 00:11:50,560
api keys for things that are just meant

378
00:11:50,560 --> 00:11:51,440
to be public

379
00:11:51,440 --> 00:11:53,920
so um and then there's no context around

380
00:11:53,920 --> 00:11:55,360
how it could actually be used to provide

381
00:11:55,360 --> 00:11:56,720
security impact so when we're writing

382
00:11:56,720 --> 00:11:57,519
reports

383
00:11:57,519 --> 00:12:00,079
make sure that there is security impact

384
00:12:00,079 --> 00:12:01,760
there you can't just report a

385
00:12:01,760 --> 00:12:03,760
string of random characters you have to

386
00:12:03,760 --> 00:12:05,760
report how you can use that

387
00:12:05,760 --> 00:12:08,000
api key to do something that has a

388
00:12:08,000 --> 00:12:09,680
security impact

389
00:12:09,680 --> 00:12:12,160
yeah and quick shout out to key hacks so

390
00:12:12,160 --> 00:12:13,440
if you ever have an issue with

391
00:12:13,440 --> 00:12:14,880
you know not knowing what an api key

392
00:12:14,880 --> 00:12:16,880
does um there's this community run

393
00:12:16,880 --> 00:12:20,000
get re uh github says key hacks um i'll

394
00:12:20,000 --> 00:12:21,839
throw it into the discord afterwards and

395
00:12:21,839 --> 00:12:23,600
it has a lot of api keys there so you

396
00:12:23,600 --> 00:12:24,000
can

397
00:12:24,000 --> 00:12:25,600
and with and how to demonstrate active

398
00:12:25,600 --> 00:12:27,120
exploitation with that so

399
00:12:27,120 --> 00:12:30,240
yeah i agree also show really just show

400
00:12:30,240 --> 00:12:31,279
us a poc

401
00:12:31,279 --> 00:12:33,440
and how you can use it as well that

402
00:12:33,440 --> 00:12:34,560
would really

403
00:12:34,560 --> 00:12:36,480
mean a lot to us and easier for us to

404
00:12:36,480 --> 00:12:39,920
triage like to know what the issue is

405
00:12:39,920 --> 00:12:42,480
yeah for sure so two two keeps just put

406
00:12:42,480 --> 00:12:43,440
a uh

407
00:12:43,440 --> 00:12:45,760
link to key hacks uh and kodingo did as

408
00:12:45,760 --> 00:12:46,800
well um

409
00:12:46,800 --> 00:12:49,600
into the discord uh so yeah that's a

410
00:12:49,600 --> 00:12:51,040
really really great it's

411
00:12:51,040 --> 00:12:55,200
it's the streaks um streaks um

412
00:12:55,200 --> 00:12:58,160
github and he basically uh yeah like you

413
00:12:58,160 --> 00:12:58,639
said

414
00:12:58,639 --> 00:13:00,800
he's got basically pre-built proof of

415
00:13:00,800 --> 00:13:02,240
concepts that you can use for different

416
00:13:02,240 --> 00:13:04,320
types of api keys so it's super super

417
00:13:04,320 --> 00:13:05,040
handy

418
00:13:05,040 --> 00:13:07,040
for demonstrating impact easily on bug

419
00:13:07,040 --> 00:13:08,399
bounty reports

420
00:13:08,399 --> 00:13:10,399
yep and your priority you know if you

421
00:13:10,399 --> 00:13:11,600
don't demonstrate the impact and the

422
00:13:11,600 --> 00:13:12,959
company decides to go within the rare

423
00:13:12,959 --> 00:13:13,920
case it does you know

424
00:13:13,920 --> 00:13:15,920
you can be misprioritized you know it

425
00:13:15,920 --> 00:13:17,440
can be called the p3 when it could be a

426
00:13:17,440 --> 00:13:19,279
p1 so always show a proof of concept and

427
00:13:19,279 --> 00:13:20,399
show the impact

428
00:13:20,399 --> 00:13:23,600
yeah so as you mentioned um

429
00:13:23,600 --> 00:13:25,760
apktool decompiles the app however it

430
00:13:25,760 --> 00:13:27,839
will be compiled into somali um i've

431
00:13:27,839 --> 00:13:28,399
noticed

432
00:13:28,399 --> 00:13:31,440
and so as you'll see

433
00:13:31,440 --> 00:13:35,200
it can be kind of um so let me go into

434
00:13:35,200 --> 00:13:37,600
like the

435
00:13:39,120 --> 00:13:42,160
sorry i've been on that preparation but

436
00:13:42,160 --> 00:13:43,680
anyway so smallie's kind of hard to read

437
00:13:43,680 --> 00:13:45,120
it's um so what i like using

438
00:13:45,120 --> 00:13:47,199
for for to actually get it into java

439
00:13:47,199 --> 00:13:48,880
code is jdx bui

440
00:13:48,880 --> 00:13:50,639
and what we could do is also run it

441
00:13:50,639 --> 00:13:52,399
against the communications

442
00:13:52,399 --> 00:13:55,120
the same um

443
00:13:56,959 --> 00:13:58,959
against apk as well so now we'll see it

444
00:13:58,959 --> 00:14:00,320
pop up

445
00:14:00,320 --> 00:14:01,920
can you give us a little thing about

446
00:14:01,920 --> 00:14:03,839
what jadex gui actually

447
00:14:03,839 --> 00:14:06,240
does what it is yeah sure so basically

448
00:14:06,240 --> 00:14:07,279
what it does is

449
00:14:07,279 --> 00:14:09,279
um so i should probably just show an

450
00:14:09,279 --> 00:14:11,519
example of how this molly looks um

451
00:14:11,519 --> 00:14:14,000
because i can show it side by side um

452
00:14:14,000 --> 00:14:14,959
which will probably

453
00:14:14,959 --> 00:14:18,160
clear it up a lot um

454
00:14:23,360 --> 00:14:25,440
basically looking for main activity um

455
00:14:25,440 --> 00:14:26,480
there we go cool

456
00:14:26,480 --> 00:14:30,320
so main activity that solid

457
00:14:30,320 --> 00:14:31,920
so as you can see this is sort of small

458
00:14:31,920 --> 00:14:33,519
and if anyone wants to kind of give a

459
00:14:33,519 --> 00:14:34,880
little bit more verbose and for uh

460
00:14:34,880 --> 00:14:36,399
explanation about it because mine will

461
00:14:36,399 --> 00:14:37,360
not be

462
00:14:37,360 --> 00:14:39,760
the best um it's a little bit harder to

463
00:14:39,760 --> 00:14:41,760
read and

464
00:14:41,760 --> 00:14:43,519
so compared to jadax gui which we

465
00:14:43,519 --> 00:14:45,199
actually compiled into java we could see

466
00:14:45,199 --> 00:14:46,000
the same

467
00:14:46,000 --> 00:14:47,360
i'll bring them up side by side right

468
00:14:47,360 --> 00:14:49,120
now um

469
00:14:49,120 --> 00:14:52,720
we can see the same code

470
00:14:52,880 --> 00:14:54,860
sorry to take a little bit um

471
00:14:54,860 --> 00:14:56,160
[Music]

472
00:14:56,160 --> 00:14:57,680
so we can see it but this is actually in

473
00:14:57,680 --> 00:15:00,399
java so it's a lot easier to read um

474
00:15:00,399 --> 00:15:01,600
for me at least because i come from a

475
00:15:01,600 --> 00:15:05,120
java background and is mali a language

476
00:15:05,120 --> 00:15:08,240
uh so it's actually a compiled format

477
00:15:08,240 --> 00:15:11,440
right for um for some sorts of java

478
00:15:11,440 --> 00:15:12,639
basically

479
00:15:12,639 --> 00:15:14,639
got it got it well yeah that's going to

480
00:15:14,639 --> 00:15:16,320
be way easier reading java isn't that

481
00:15:16,320 --> 00:15:17,519
actual java

482
00:15:17,519 --> 00:15:21,600
yeah yeah so you can see like um

483
00:15:21,600 --> 00:15:22,959
so this is a lot more easier so you

484
00:15:22,959 --> 00:15:25,279
actually see the functions now um

485
00:15:25,279 --> 00:15:28,560
so yeah so as shown we got the encrypted

486
00:15:28,560 --> 00:15:29,600
track key but

487
00:15:29,600 --> 00:15:31,040
again we don't know what to do with it

488
00:15:31,040 --> 00:15:32,959
um so

489
00:15:32,959 --> 00:15:34,480
whenever now when we open this in java

490
00:15:34,480 --> 00:15:35,920
though we see a request being built out

491
00:15:35,920 --> 00:15:36,240
to

492
00:15:36,240 --> 00:15:38,320
and to a different endpoint now and with

493
00:15:38,320 --> 00:15:40,000
the with the http header that's

494
00:15:40,000 --> 00:15:42,399
using that key with the and the header's

495
00:15:42,399 --> 00:15:43,920
name is encrypted trap

496
00:15:43,920 --> 00:15:45,440
[Music]

497
00:15:45,440 --> 00:15:47,199
so if we would actually look here i

498
00:15:47,199 --> 00:15:51,359
could probably just f8694

499
00:15:52,839 --> 00:15:55,120
r

500
00:15:55,120 --> 00:15:56,480
yeah so sometimes you won't even show

501
00:15:56,480 --> 00:15:58,639
the pattern so like it's really just

502
00:15:58,639 --> 00:16:02,079
easier to use chad excu in my opinion

503
00:16:02,079 --> 00:16:03,839
so yeah so now we've uh stumbled

504
00:16:03,839 --> 00:16:05,519
actually upon two endpoints and

505
00:16:05,519 --> 00:16:07,120
um we can go to this one first to figure

506
00:16:07,120 --> 00:16:08,320
out password because that one's always

507
00:16:08,320 --> 00:16:10,079
usually juicy um

508
00:16:10,079 --> 00:16:13,600
try to get someone's account so um

509
00:16:13,600 --> 00:16:16,160
so we could browse to forgot password um

510
00:16:16,160 --> 00:16:17,920
and again now we don't know username so

511
00:16:17,920 --> 00:16:19,519
this is another p5 we see on both card a

512
00:16:19,519 --> 00:16:21,199
lot it's a username enumeration via

513
00:16:21,199 --> 00:16:22,639
brute force so it's like

514
00:16:22,639 --> 00:16:24,399
if i type in an arbitrary username i'll

515
00:16:24,399 --> 00:16:26,079
see you know no registered users with

516
00:16:26,079 --> 00:16:27,279
that username

517
00:16:27,279 --> 00:16:29,600
and while you know in a pen testing

518
00:16:29,600 --> 00:16:31,839
scenario that could actually be

519
00:16:31,839 --> 00:16:34,480
a worthwhile attack it by itself is a p5

520
00:16:34,480 --> 00:16:35,920
unless you chain it with something which

521
00:16:35,920 --> 00:16:38,160
we're going to do in a second

522
00:16:38,160 --> 00:16:39,920
so as you can see nothing really

523
00:16:39,920 --> 00:16:41,279
interesting came out of that so now we

524
00:16:41,279 --> 00:16:42,800
can try to browse to this endpoint the

525
00:16:42,800 --> 00:16:44,320
chat endpoint

526
00:16:44,320 --> 00:16:48,240
and upon browsing we'll see that we have

527
00:16:48,240 --> 00:16:50,800
invalid key so as mentioned we got the

528
00:16:50,800 --> 00:16:52,079
key earlier so we need to set it with

529
00:16:52,079 --> 00:16:52,720
that header

530
00:16:52,720 --> 00:16:54,079
so i found the easiest way to do this is

531
00:16:54,079 --> 00:16:55,839
to use burp's uh

532
00:16:55,839 --> 00:16:58,240
matching replace with the header so um

533
00:16:58,240 --> 00:16:59,279
we can add a new

534
00:16:59,279 --> 00:17:03,040
http header so as shown in

535
00:17:03,040 --> 00:17:04,160
the code it's going to be called

536
00:17:04,160 --> 00:17:06,880
encrypted chat

537
00:17:08,079 --> 00:17:11,198
so we could throw that in

538
00:17:12,720 --> 00:17:19,839
and then the api key itself

539
00:17:22,720 --> 00:17:24,400
is that the one that we got out of the

540
00:17:24,400 --> 00:17:26,640
strings yeah

541
00:17:26,640 --> 00:17:29,600
ah cool so what we're doing here just to

542
00:17:29,600 --> 00:17:30,799
reiterate

543
00:17:30,799 --> 00:17:33,440
is where crew we're changing our http

544
00:17:33,440 --> 00:17:34,720
request that we're sending to the

545
00:17:34,720 --> 00:17:35,760
application

546
00:17:35,760 --> 00:17:38,559
to contain a secret header which we

547
00:17:38,559 --> 00:17:39,280
found

548
00:17:39,280 --> 00:17:42,799
within the main activity java file

549
00:17:42,799 --> 00:17:46,880
and we are adding um the secret key

550
00:17:46,880 --> 00:17:49,679
to the uh the header and the the secret

551
00:17:49,679 --> 00:17:51,039
key was what we

552
00:17:51,039 --> 00:17:52,480
was were able to find from the

553
00:17:52,480 --> 00:17:55,039
strings.xml file within the apk

554
00:17:55,039 --> 00:17:57,200
right yep that's correct and to go back

555
00:17:57,200 --> 00:17:58,559
to the java code we could see it being

556
00:17:58,559 --> 00:18:00,240
used here because um

557
00:18:00,240 --> 00:18:01,679
so it's creating basically building out

558
00:18:01,679 --> 00:18:03,440
a new request and we see that the header

559
00:18:03,440 --> 00:18:04,720
is using encrypted chat and

560
00:18:04,720 --> 00:18:06,720
it's using the key and then so you might

561
00:18:06,720 --> 00:18:08,240
be wondering what the key is and we see

562
00:18:08,240 --> 00:18:08,559
it

563
00:18:08,559 --> 00:18:09,840
we define it here so basically it's

564
00:18:09,840 --> 00:18:11,840
telling it to grab the encrypted chat

565
00:18:11,840 --> 00:18:13,679
key from the strings.xml

566
00:18:13,679 --> 00:18:15,280
and if we look here it's basically

567
00:18:15,280 --> 00:18:16,799
encrypted tracky

568
00:18:16,799 --> 00:18:19,840
right so yeah so if we didn't do the

569
00:18:19,840 --> 00:18:21,360
match and replace rule and burp we

570
00:18:21,360 --> 00:18:22,720
basically have to intercept every single

571
00:18:22,720 --> 00:18:24,000
request and add it and that could be a

572
00:18:24,000 --> 00:18:26,080
little bit tiresome especially if you're

573
00:18:26,080 --> 00:18:28,320
you know if there's a lot to do so after

574
00:18:28,320 --> 00:18:31,280
we add the rule we can try refreshing

575
00:18:31,280 --> 00:18:34,720
and now we're in so

576
00:18:34,799 --> 00:18:38,640
yeah and to kind of show the um

577
00:18:38,640 --> 00:18:40,240
we can actually see it being auto

578
00:18:40,240 --> 00:18:42,000
modified so it's actually adding the

579
00:18:42,000 --> 00:18:43,679
header so we can see it

580
00:18:43,679 --> 00:18:45,200
not here but then when it modifies it it

581
00:18:45,200 --> 00:18:47,520
adds the header and that's on every

582
00:18:47,520 --> 00:18:49,280
every single http progress going out

583
00:18:49,280 --> 00:18:51,760
above correct correct yeah

584
00:18:51,760 --> 00:18:53,760
so so that would also include things

585
00:18:53,760 --> 00:18:55,440
that aren't in scope of that

586
00:18:55,440 --> 00:18:59,440
um just as an fy at everyone yeah

587
00:18:59,440 --> 00:19:02,400
awesome so yeah so um so this is kind of

588
00:19:02,400 --> 00:19:02,799
where

589
00:19:02,799 --> 00:19:04,400
um i was trying to build the challenge

590
00:19:04,400 --> 00:19:06,400
in kind of realism terms but again since

591
00:19:06,400 --> 00:19:07,360
it's spy themed

592
00:19:07,360 --> 00:19:08,640
i kind of wanted to throw some spy

593
00:19:08,640 --> 00:19:10,720
things around so once you uh come up on

594
00:19:10,720 --> 00:19:11,280
here

595
00:19:11,280 --> 00:19:12,720
you'll see a lot of the messages kind of

596
00:19:12,720 --> 00:19:14,400
like garbled or scrambled

597
00:19:14,400 --> 00:19:16,640
um so this is kind of really common in

598
00:19:16,640 --> 00:19:18,480
ctf it's using the raw 13 cipher which

599
00:19:18,480 --> 00:19:20,160
is basically moving every character like

600
00:19:20,160 --> 00:19:20,799
13

601
00:19:20,799 --> 00:19:23,280
characters forward so um you'll see it a

602
00:19:23,280 --> 00:19:25,440
lot and if you play cts a lot

603
00:19:25,440 --> 00:19:27,280
and so what we can start doing is

604
00:19:27,280 --> 00:19:29,200
basically if you just you know go rod

605
00:19:29,200 --> 00:19:31,760
13.

606
00:19:32,720 --> 00:19:35,840
the right 13 cipher by the way

607
00:19:35,840 --> 00:19:39,120
all it does is rotates each character 13

608
00:19:39,120 --> 00:19:42,480
uh 13 letters forward through the

609
00:19:42,480 --> 00:19:43,440
alphabet

610
00:19:43,440 --> 00:19:46,880
so um an a would become an a b c d e f g

611
00:19:46,880 --> 00:19:47,200
h

612
00:19:47,200 --> 00:19:50,640
i j k l m right yeah um and then if you

613
00:19:50,640 --> 00:19:51,360
do it again

614
00:19:51,360 --> 00:19:53,919
obviously because there's 20 whatever 26

615
00:19:53,919 --> 00:19:56,480
20 uh 26 characters in the alphabet

616
00:19:56,480 --> 00:19:57,679
then you end up back at the first

617
00:19:57,679 --> 00:20:00,160
character so the cipher works two ways

618
00:20:00,160 --> 00:20:01,919
you can do it and then do it again and

619
00:20:01,919 --> 00:20:03,280
then uh you end up back

620
00:20:03,280 --> 00:20:06,720
at a from m

621
00:20:06,720 --> 00:20:08,159
yeah so you won't really see it used in

622
00:20:08,159 --> 00:20:10,000
bug bounty much but i thought it was

623
00:20:10,000 --> 00:20:10,880
just pretty cool to

624
00:20:10,880 --> 00:20:12,320
throw in because of this whole spy theme

625
00:20:12,320 --> 00:20:14,159
going on so

626
00:20:14,159 --> 00:20:15,600
for example we could show an example of

627
00:20:15,600 --> 00:20:16,799
the first message so you kind of see

628
00:20:16,799 --> 00:20:17,840
it's like a picture of a cat

629
00:20:17,840 --> 00:20:19,760
and then you know it says see your rpg

630
00:20:19,760 --> 00:20:21,440
as soon as we post it in here it'll go

631
00:20:21,440 --> 00:20:22,000
to

632
00:20:22,000 --> 00:20:25,200
me out so um

633
00:20:25,200 --> 00:20:26,559
yeah so what we could do is we could

634
00:20:26,559 --> 00:20:29,039
start um throwing in the messages in

635
00:20:29,039 --> 00:20:30,080
here

636
00:20:30,080 --> 00:20:33,200
so i'll just use a few li uh

637
00:20:33,200 --> 00:20:34,880
dashes as a delimiter between each

638
00:20:34,880 --> 00:20:37,280
message

639
00:20:39,919 --> 00:20:49,840
and then

640
00:20:52,000 --> 00:20:53,840
so eventually we get the conversation so

641
00:20:53,840 --> 00:20:55,520
basically um it looks like

642
00:20:55,520 --> 00:20:57,280
one agent's asking the other hey have

643
00:20:57,280 --> 00:20:59,039
you got our mission yet and it's

644
00:20:59,039 --> 00:21:00,400
the other agent's telling him yeah we do

645
00:21:00,400 --> 00:21:01,520
check the mission list they call it some

646
00:21:01,520 --> 00:21:02,799
hack agent as well

647
00:21:02,799 --> 00:21:04,400
and he's basically saying that's crazy

648
00:21:04,400 --> 00:21:06,000
anyways check out this giraffe i saw at

649
00:21:06,000 --> 00:21:06,960
the zoo the other day

650
00:21:06,960 --> 00:21:09,039
and you know the other ages being polite

651
00:21:09,039 --> 00:21:10,480
and telling me it's cool when he really

652
00:21:10,480 --> 00:21:10,960
doesn't

653
00:21:10,960 --> 00:21:14,720
care um so

654
00:21:14,720 --> 00:21:16,559
yeah so what you might notice is we have

655
00:21:16,559 --> 00:21:18,400
usernames though now and the forgot

656
00:21:18,400 --> 00:21:19,520
password endpoint

657
00:21:19,520 --> 00:21:21,520
was kind of that's what we needed and

658
00:21:21,520 --> 00:21:22,480
that's what we were missing from the

659
00:21:22,480 --> 00:21:23,600
piece of the puzzle so

660
00:21:23,600 --> 00:21:25,039
what we could do is we could start with

661
00:21:25,039 --> 00:21:26,640
for example agents hall and we can go

662
00:21:26,640 --> 00:21:27,440
back to the

663
00:21:27,440 --> 00:21:30,880
forgot password um endpoint

664
00:21:30,880 --> 00:21:35,039
so and we could tell agent tom looks

665
00:21:35,039 --> 00:21:36,240
like there's no one registered with that

666
00:21:36,240 --> 00:21:36,559
name

667
00:21:36,559 --> 00:21:41,360
um we can try with the next agent and

668
00:21:41,440 --> 00:21:44,640
so we get a security question so it's

669
00:21:44,640 --> 00:21:45,919
what is the name of your favorite line

670
00:21:45,919 --> 00:21:46,559
at the zoo

671
00:21:46,559 --> 00:21:48,640
and a lot of people were like trying to

672
00:21:48,640 --> 00:21:49,760
name different kinds of

673
00:21:49,760 --> 00:21:51,919
breeds of lions or you know like famous

674
00:21:51,919 --> 00:21:53,120
lion names

675
00:21:53,120 --> 00:21:55,919
so if you might notice earlier there's a

676
00:21:55,919 --> 00:21:57,039
picture of this giraffe

677
00:21:57,039 --> 00:21:58,559
and there's a reason for that and that's

678
00:21:58,559 --> 00:22:00,080
another tip with ctfs is that a lot of

679
00:22:00,080 --> 00:22:01,200
time when you see something that might

680
00:22:01,200 --> 00:22:02,720
look a little bit random or

681
00:22:02,720 --> 00:22:06,000
misplaced it's there for a reason and

682
00:22:06,000 --> 00:22:08,080
so a big thing we have about crowd or

683
00:22:08,080 --> 00:22:09,280
it's not big sorry

684
00:22:09,280 --> 00:22:11,760
a vrt category we have is uh geo

685
00:22:11,760 --> 00:22:13,520
location in the xf data so each photo

686
00:22:13,520 --> 00:22:14,799
has like some metadata and that could be

687
00:22:14,799 --> 00:22:16,400
like the camera that photo was taken

688
00:22:16,400 --> 00:22:16,720
with

689
00:22:16,720 --> 00:22:18,400
where the location was and that's

690
00:22:18,400 --> 00:22:19,919
normally not an issue if

691
00:22:19,919 --> 00:22:22,240
you know you're up if it's where so for

692
00:22:22,240 --> 00:22:23,039
example we

693
00:22:23,039 --> 00:22:25,039
come across this a lot in triage is that

694
00:22:25,039 --> 00:22:26,720
if there are no other users that can

695
00:22:26,720 --> 00:22:28,240
access your profile picture and like so

696
00:22:28,240 --> 00:22:29,520
there's some apps like for example

697
00:22:29,520 --> 00:22:31,200
training apps where you're really only

698
00:22:31,200 --> 00:22:33,120
it's only you um you know there's really

699
00:22:33,120 --> 00:22:34,480
no risk however

700
00:22:34,480 --> 00:22:36,400
in the case where other users can access

701
00:22:36,400 --> 00:22:37,520
the pictures and the

702
00:22:37,520 --> 00:22:39,120
and the extra data is not stripped you

703
00:22:39,120 --> 00:22:40,880
know that's when you know bad stuff can

704
00:22:40,880 --> 00:22:42,240
start happening and it's not necessarily

705
00:22:42,240 --> 00:22:43,919
like end of the world stuff but you know

706
00:22:43,919 --> 00:22:45,760
doxing can come out of it and just a lot

707
00:22:45,760 --> 00:22:47,280
of like i'll show right now how to kind

708
00:22:47,280 --> 00:22:47,919
of

709
00:22:47,919 --> 00:22:51,120
um leverage what can come out of it

710
00:22:51,120 --> 00:22:54,880
so yeah yeah so um a cool website so you

711
00:22:54,880 --> 00:22:56,640
can just type in x of data viewer

712
00:22:56,640 --> 00:22:58,720
on google um you could use xftool on

713
00:22:58,720 --> 00:23:00,720
linux whatever you want um

714
00:23:00,720 --> 00:23:02,880
so this one's like a really popular site

715
00:23:02,880 --> 00:23:04,960
the jeffree's image metadata viewer

716
00:23:04,960 --> 00:23:06,720
so what we could do is we can copy the

717
00:23:06,720 --> 00:23:08,640
address of this image

718
00:23:08,640 --> 00:23:11,200
we can throw it into here um solve the

719
00:23:11,200 --> 00:23:13,520
captcha

720
00:23:13,520 --> 00:23:14,960
funny buses can fly and it's asking me

721
00:23:14,960 --> 00:23:17,360
for butts

722
00:23:18,400 --> 00:23:20,720
um

723
00:23:21,520 --> 00:23:24,080
this is the real challenge yeah

724
00:23:24,080 --> 00:23:25,200
especially if you're internet's not

725
00:23:25,200 --> 00:23:26,720
there well

726
00:23:26,720 --> 00:23:28,720
i don't know is that a plus i i think so

727
00:23:28,720 --> 00:23:30,000
yeah

728
00:23:30,000 --> 00:23:33,520
i'm glad we can you're out on this cdf

729
00:23:33,520 --> 00:23:34,640
i wouldn't have been able to do this

730
00:23:34,640 --> 00:23:36,799
without you guys thank you

731
00:23:36,799 --> 00:23:38,240
yeah i'm telling you it's like feature

732
00:23:38,240 --> 00:23:40,080
again um

733
00:23:40,080 --> 00:23:42,320
you must be really suspicious if you

734
00:23:42,320 --> 00:23:44,960
think i'm a bug

735
00:23:48,840 --> 00:23:50,799
so

736
00:23:50,799 --> 00:23:56,000
oh come on google it's gonna keep going

737
00:23:56,000 --> 00:23:59,440
okay i think we're good um i

738
00:23:59,440 --> 00:24:02,320
uh i always run into this so it's so

739
00:24:02,320 --> 00:24:04,880
common now

740
00:24:04,880 --> 00:24:06,480
that's why i always recommend using vps

741
00:24:06,480 --> 00:24:08,159
when uh testing as well because

742
00:24:08,159 --> 00:24:10,080
you know a lot of sites will you know

743
00:24:10,080 --> 00:24:11,679
you'll still get a couch just popped up

744
00:24:11,679 --> 00:24:12,240
everywhere

745
00:24:12,240 --> 00:24:18,159
so yeah using your real ip um okay i

746
00:24:18,159 --> 00:24:19,919
almost clicked that but

747
00:24:19,919 --> 00:24:23,520
i think we're good okay final

748
00:24:23,520 --> 00:24:26,799
so we view the image data and so we find

749
00:24:26,799 --> 00:24:28,159
the third flag

750
00:24:28,159 --> 00:24:30,720
so yeah and like i mentioned earlier if

751
00:24:30,720 --> 00:24:31,840
you find a flag it means you're on the

752
00:24:31,840 --> 00:24:33,279
right path along with finding the flag

753
00:24:33,279 --> 00:24:34,400
we now find the

754
00:24:34,400 --> 00:24:36,559
um we find a latitude and longitude and

755
00:24:36,559 --> 00:24:38,080
to kind of you know go back to this

756
00:24:38,080 --> 00:24:39,600
question it says hey what is your

757
00:24:39,600 --> 00:24:41,039
name of the favorite line at the zoo so

758
00:24:41,039 --> 00:24:42,880
that kind of you know sort of hints like

759
00:24:42,880 --> 00:24:44,080
hey you have the coordinates where this

760
00:24:44,080 --> 00:24:45,279
picture is taken and it looks like it's

761
00:24:45,279 --> 00:24:46,240
been taken out of zoo

762
00:24:46,240 --> 00:24:50,240
unless someone has a draft but um

763
00:24:50,240 --> 00:24:53,200
so we google the coordinates and lo and

764
00:24:53,200 --> 00:24:55,760
behold the san francisco zoo pops up

765
00:24:55,760 --> 00:24:57,840
and so now this is where you start doing

766
00:24:57,840 --> 00:24:59,200
some os uh

767
00:24:59,200 --> 00:25:00,320
and you start going you know san

768
00:25:00,320 --> 00:25:02,960
francisco

769
00:25:03,120 --> 00:25:06,799
just go zoo lion names and for this

770
00:25:06,799 --> 00:25:07,360
challenge

771
00:25:07,360 --> 00:25:08,400
for this part i didn't want to make it

772
00:25:08,400 --> 00:25:10,640
super hard and based on how you google

773
00:25:10,640 --> 00:25:11,919
it um this is usually

774
00:25:11,919 --> 00:25:13,279
on the top page sometimes it's first

775
00:25:13,279 --> 00:25:15,279
second third as in my case you see here

776
00:25:15,279 --> 00:25:17,039
pop up twice so you'll come across this

777
00:25:17,039 --> 00:25:18,080
article that

778
00:25:18,080 --> 00:25:19,760
jahari the beloved lion died at the san

779
00:25:19,760 --> 00:25:21,360
francisco zoo

780
00:25:21,360 --> 00:25:22,960
and it's asking you what is the name of

781
00:25:22,960 --> 00:25:24,159
your favorite line so you can type in

782
00:25:24,159 --> 00:25:24,880
jihadi

783
00:25:24,880 --> 00:25:28,720
and boom so wait

784
00:25:28,720 --> 00:25:32,400
yeah so um so this is uh sort of where

785
00:25:32,400 --> 00:25:33,840
you know when you're building a ctf you

786
00:25:33,840 --> 00:25:35,360
kind of have to keep in mind that a lot

787
00:25:35,360 --> 00:25:36,960
of people can be playing simultaneously

788
00:25:36,960 --> 00:25:37,279
and

789
00:25:37,279 --> 00:25:38,720
you can't really like have people change

790
00:25:38,720 --> 00:25:39,919
the password or else no one's gonna be

791
00:25:39,919 --> 00:25:42,559
able to get in so um it kind of had a

792
00:25:42,559 --> 00:25:43,919
static password it would kind of return

793
00:25:43,919 --> 00:25:44,799
to you so

794
00:25:44,799 --> 00:25:46,640
we have the password um we have the

795
00:25:46,640 --> 00:25:48,080
agent name

796
00:25:48,080 --> 00:25:51,279
so it's time for us to log in

797
00:25:52,400 --> 00:25:54,880
awesome

798
00:25:55,600 --> 00:25:57,840
by the way if that's how you forgot

799
00:25:57,840 --> 00:25:59,440
password reset works you've got

800
00:25:59,440 --> 00:26:02,159
you've got problems

801
00:26:03,120 --> 00:26:05,600
not good

802
00:26:07,039 --> 00:26:10,640
so yeah so yeah so we log in

803
00:26:10,640 --> 00:26:12,720
you know we see this totally not uh

804
00:26:12,720 --> 00:26:13,919
sketchy mission list

805
00:26:13,919 --> 00:26:16,960
um and

806
00:26:16,960 --> 00:26:18,400
a little quick thing i wanted to add in

807
00:26:18,400 --> 00:26:20,080
here like i mentioned um

808
00:26:20,080 --> 00:26:22,640
we throw in um i threw in some tidbits

809
00:26:22,640 --> 00:26:24,159
that i've noticed a lot you know

810
00:26:24,159 --> 00:26:25,840
misclassified at bug crowd so we have

811
00:26:25,840 --> 00:26:27,200
this really um

812
00:26:27,200 --> 00:26:29,039
we have a p4p5 variant of this and

813
00:26:29,039 --> 00:26:30,559
that's basically the session's not

814
00:26:30,559 --> 00:26:32,159
invalidated on log out

815
00:26:32,159 --> 00:26:33,600
both plan and server side so client and

816
00:26:33,600 --> 00:26:35,039
server side is the p4 and that's

817
00:26:35,039 --> 00:26:36,159
basically to

818
00:26:36,159 --> 00:26:37,679
give you some context that when you log

819
00:26:37,679 --> 00:26:39,120
out of an application the application's

820
00:26:39,120 --> 00:26:40,799
uh responsible for overriding the cookie

821
00:26:40,799 --> 00:26:42,559
the session could be in your browser

822
00:26:42,559 --> 00:26:44,320
and that's what's causing you to log out

823
00:26:44,320 --> 00:26:45,679
so in this case we see this log out

824
00:26:45,679 --> 00:26:46,640
button right here

825
00:26:46,640 --> 00:26:48,640
if we click it you know we see nothing

826
00:26:48,640 --> 00:26:50,880
happening and if i was at a library or

827
00:26:50,880 --> 00:26:52,400
somewhere that's using shared computers

828
00:26:52,400 --> 00:26:53,919
i would have to go in and explicitly

829
00:26:53,919 --> 00:26:55,679
modify my cookie my session cookie

830
00:26:55,679 --> 00:26:57,200
and you know a lot of people that are

831
00:26:57,200 --> 00:26:58,960
not technical they won't know what to do

832
00:26:58,960 --> 00:26:59,919
and they won't be able to do it they'll

833
00:26:59,919 --> 00:27:00,640
probably

834
00:27:00,640 --> 00:27:02,480
most likely just close the browser and

835
00:27:02,480 --> 00:27:04,159
move on with their day

836
00:27:04,159 --> 00:27:06,480
the p5 variant though is what it gets

837
00:27:06,480 --> 00:27:08,159
submitted is that the cookies are still

838
00:27:08,159 --> 00:27:09,760
valid on the server side so we click log

839
00:27:09,760 --> 00:27:11,200
out we're logged out successfully but

840
00:27:11,200 --> 00:27:12,159
the cookie you can still

841
00:27:12,159 --> 00:27:13,840
reuse it in a repeater and the reason

842
00:27:13,840 --> 00:27:15,200
that's a p5 is because

843
00:27:15,200 --> 00:27:17,520
we would need a proof of concept that

844
00:27:17,520 --> 00:27:19,039
demonstrates remote exploitation so a

845
00:27:19,039 --> 00:27:20,960
very common vector for this could be xss

846
00:27:20,960 --> 00:27:22,559
if the cookie's not using the http only

847
00:27:22,559 --> 00:27:24,480
flag but then that issue comes in

848
00:27:24,480 --> 00:27:26,960
is that um that's kind of already

849
00:27:26,960 --> 00:27:29,360
factored into the p3 priority for xss

850
00:27:29,360 --> 00:27:32,000
so that's a really really mis commonly

851
00:27:32,000 --> 00:27:33,360
mis-submitted bug and

852
00:27:33,360 --> 00:27:34,720
researchers are always wondering what's

853
00:27:34,720 --> 00:27:35,840
the difference and the difference is

854
00:27:35,840 --> 00:27:36,720
that

855
00:27:36,720 --> 00:27:39,919
you see that the session cookie's not

856
00:27:39,919 --> 00:27:41,919
overrided client side so we can click

857
00:27:41,919 --> 00:27:43,520
keep clicking log out all we want and

858
00:27:43,520 --> 00:27:45,760
nothing's going to happen

859
00:27:45,760 --> 00:27:49,039
so yeah so eventually um as the brief

860
00:27:49,039 --> 00:27:49,679
mentioned

861
00:27:49,679 --> 00:27:51,520
there is a radio once we bypass

862
00:27:51,520 --> 00:27:54,080
authentication so we can go into radio

863
00:27:54,080 --> 00:27:56,240
so while this is loading so this was

864
00:27:56,240 --> 00:27:57,360
actually so

865
00:27:57,360 --> 00:27:58,880
what a lot of people well a lot of

866
00:27:58,880 --> 00:28:00,000
pencils would probably know is that you

867
00:28:00,000 --> 00:28:03,440
can x filter data via ping and

868
00:28:03,440 --> 00:28:04,880
i actually had it built out where you

869
00:28:04,880 --> 00:28:06,720
would actually have to input your ip

870
00:28:06,720 --> 00:28:07,600
address and

871
00:28:07,600 --> 00:28:10,399
run the run an icmp listener and you

872
00:28:10,399 --> 00:28:11,679
would actually get this message it

873
00:28:11,679 --> 00:28:13,600
basically looks exactly the same

874
00:28:13,600 --> 00:28:15,279
and but the issue i thought was that not

875
00:28:15,279 --> 00:28:16,640
a lot of people have servers so i didn't

876
00:28:16,640 --> 00:28:17,600
want them to you know

877
00:28:17,600 --> 00:28:18,799
start mucking around with their router

878
00:28:18,799 --> 00:28:21,039
settings for example and um you know

879
00:28:21,039 --> 00:28:23,600
enable um enable it to receive pings you

880
00:28:23,600 --> 00:28:24,799
know i kind of felt that would be a

881
00:28:24,799 --> 00:28:25,760
security issue

882
00:28:25,760 --> 00:28:27,679
and the second issue was that every time

883
00:28:27,679 --> 00:28:29,360
they would actually activate this a new

884
00:28:29,360 --> 00:28:30,240
thread would open

885
00:28:30,240 --> 00:28:31,440
to send them the data but then i

886
00:28:31,440 --> 00:28:32,399
realized that if there are a hundred

887
00:28:32,399 --> 00:28:33,360
people playing

888
00:28:33,360 --> 00:28:34,880
then that basically causes denial of

889
00:28:34,880 --> 00:28:36,240
service to the server so that's kind of

890
00:28:36,240 --> 00:28:38,240
another thing when building ctfs is that

891
00:28:38,240 --> 00:28:40,159
you can try being realistic but a lot of

892
00:28:40,159 --> 00:28:41,760
times it won't work out

893
00:28:41,760 --> 00:28:45,120
so yeah so eventually you see um

894
00:28:45,120 --> 00:28:47,200
this data and it basically tells them

895
00:28:47,200 --> 00:28:48,799
agent i've noticed that obelisk hides

896
00:28:48,799 --> 00:28:50,799
missions and images so that's sort of a

897
00:28:50,799 --> 00:28:52,159
hint to steganography which we're going

898
00:28:52,159 --> 00:28:53,919
to get into next and basically check out

899
00:28:53,919 --> 00:28:54,720
the target list

900
00:28:54,720 --> 00:28:56,320
and we get the last flag or not the last

901
00:28:56,320 --> 00:28:58,159
flag i'm sorry the four flag

902
00:28:58,159 --> 00:28:59,919
so along with that i kind of threw in a

903
00:28:59,919 --> 00:29:01,120
cool article that kind of shows that x

904
00:29:01,120 --> 00:29:02,480
will trade did a data vaping and

905
00:29:02,480 --> 00:29:04,000
actually gives a python script you can

906
00:29:04,000 --> 00:29:04,399
use

907
00:29:04,399 --> 00:29:05,600
and you would actually use this more in

908
00:29:05,600 --> 00:29:07,039
like pen testing for example you have

909
00:29:07,039 --> 00:29:07,600
like

910
00:29:07,600 --> 00:29:09,600
an rce or something and you want to like

911
00:29:09,600 --> 00:29:10,720
exfoliate the data

912
00:29:10,720 --> 00:29:12,399
um because you know there might be like

913
00:29:12,399 --> 00:29:13,919
egress filtering rules you know you

914
00:29:13,919 --> 00:29:15,360
so you can't you know send a shell out

915
00:29:15,360 --> 00:29:17,760
so this is sort of a cool way to do it

916
00:29:17,760 --> 00:29:21,200
um yeah so like what the radio told us

917
00:29:21,200 --> 00:29:21,600
as

918
00:29:21,600 --> 00:29:24,720
um check out the target list

919
00:29:24,720 --> 00:29:26,080
oh sorry if anyone wants to say anything

920
00:29:26,080 --> 00:29:28,799
uh i don't wanna interrupt

921
00:29:28,799 --> 00:29:30,399
all right everything's up okay cool so

922
00:29:30,399 --> 00:29:32,080
yeah so we got a secret on all the bugs

923
00:29:32,080 --> 00:29:33,039
so um

924
00:29:33,039 --> 00:29:34,960
we can now go back to the dashboard

925
00:29:34,960 --> 00:29:36,320
because that's oh yeah sorry that's a

926
00:29:36,320 --> 00:29:37,039
cool four part

927
00:29:37,039 --> 00:29:40,480
page i did as well um

928
00:29:40,480 --> 00:29:44,320
sorry logged in but yeah so as you saw

929
00:29:44,320 --> 00:29:45,919
we were automatically logged in because

930
00:29:45,919 --> 00:29:47,520
again the log out button doesn't work so

931
00:29:47,520 --> 00:29:49,600
just to kind of reiterate on that again

932
00:29:49,600 --> 00:29:51,600
so we go into the target list and it

933
00:29:51,600 --> 00:29:53,760
loads all the confirmed packages that

934
00:29:53,760 --> 00:29:54,480
obelisk

935
00:29:54,480 --> 00:29:56,799
has managed to get their hands on so we

936
00:29:56,799 --> 00:29:58,960
might see a familiar one

937
00:29:58,960 --> 00:30:02,640
or two familiar ones so yeah so

938
00:30:02,640 --> 00:30:04,240
apart from this so when you get to this

939
00:30:04,240 --> 00:30:05,760
um usually what i like to do is view the

940
00:30:05,760 --> 00:30:07,120
page source you can actually just open

941
00:30:07,120 --> 00:30:08,559
up in chrome dev tools as well and you

942
00:30:08,559 --> 00:30:10,000
can just go to sources and it'll

943
00:30:10,000 --> 00:30:11,760
basically load everything that's here so

944
00:30:11,760 --> 00:30:13,520
you see this agent folder along with all

945
00:30:13,520 --> 00:30:13,919
the

946
00:30:13,919 --> 00:30:16,720
pictures so you could double click it

947
00:30:16,720 --> 00:30:18,240
show open in a new tab

948
00:30:18,240 --> 00:30:19,440
which will prompt this which will

949
00:30:19,440 --> 00:30:21,200
automatically download the image so yeah

950
00:30:21,200 --> 00:30:23,679
so kind of going back to the view source

951
00:30:23,679 --> 00:30:25,520
what i wait you know someone would

952
00:30:25,520 --> 00:30:27,919
notice is after you would basically try

953
00:30:27,919 --> 00:30:29,679
um so there's a tool called stack hide

954
00:30:29,679 --> 00:30:31,039
and there's a lot of tools that can use

955
00:30:31,039 --> 00:30:32,720
that you can use to extract

956
00:30:32,720 --> 00:30:34,880
stuff from images so you know after you

957
00:30:34,880 --> 00:30:35,919
would sit there and you would realize

958
00:30:35,919 --> 00:30:37,279
that none of these images have anything

959
00:30:37,279 --> 00:30:38,399
hidden but what you notice is that they

960
00:30:38,399 --> 00:30:40,159
kind of go in sequential order

961
00:30:40,159 --> 00:30:42,320
so what i could do is i can open up burp

962
00:30:42,320 --> 00:30:44,080
and i really hope this won't lag me out

963
00:30:44,080 --> 00:30:46,080
and by default burp won't show like you

964
00:30:46,080 --> 00:30:48,000
know png or like image files so what i

965
00:30:48,000 --> 00:30:49,200
could do is just click show all so

966
00:30:49,200 --> 00:30:50,799
you'll see now in my history

967
00:30:50,799 --> 00:30:54,720
um some twitter stuff is loaded there um

968
00:30:54,720 --> 00:30:55,840
so what i could do is actually just add

969
00:30:55,840 --> 00:30:57,360
this to my scope real quick so this is a

970
00:30:57,360 --> 00:30:58,559
little cleaner

971
00:30:58,559 --> 00:31:02,640
um yeah so

972
00:31:02,640 --> 00:31:06,399
let's and then

973
00:31:06,399 --> 00:31:09,600
let's oh wow i'm gonna refresh reload it

974
00:31:09,600 --> 00:31:10,159
real quick

975
00:31:10,159 --> 00:31:13,919
so we could see any images that will

976
00:31:16,840 --> 00:31:19,840
load

977
00:31:22,880 --> 00:31:32,960
that's strange let me see um

978
00:31:32,960 --> 00:31:35,120
let's see if that fix it no that's

979
00:31:35,120 --> 00:31:36,960
beside it okay sorry so eventually what

980
00:31:36,960 --> 00:31:38,159
happens is that you would see

981
00:31:38,159 --> 00:31:40,640
um you know you would see kind of like

982
00:31:40,640 --> 00:31:41,919
what you saw in the view source so it

983
00:31:41,919 --> 00:31:43,440
kind of goes in sequential order

984
00:31:43,440 --> 00:31:44,559
so what you could do is you could send

985
00:31:44,559 --> 00:31:47,120
the request and now you can

986
00:31:47,120 --> 00:31:51,678
intercept it so

987
00:31:53,760 --> 00:31:56,480
i think the issue is is that um i think

988
00:31:56,480 --> 00:31:58,399
i'm using like this uh the new chromium

989
00:31:58,399 --> 00:31:59,919
that's built into burp and for example

990
00:31:59,919 --> 00:32:02,080
and it's not really loading

991
00:32:02,080 --> 00:32:05,200
my um so let's see

992
00:32:05,200 --> 00:32:06,799
okay cool so we got a request so what we

993
00:32:06,799 --> 00:32:07,919
could do is we could send it to intruder

994
00:32:07,919 --> 00:32:08,960
because what we could do is we could

995
00:32:08,960 --> 00:32:10,559
like i said it's in sequential order so

996
00:32:10,559 --> 00:32:12,399
what we could do is try brute forcing

997
00:32:12,399 --> 00:32:12,799
the

998
00:32:12,799 --> 00:32:16,720
um the agent number so we can add our um

999
00:32:16,720 --> 00:32:18,320
payload marker there when we go to

1000
00:32:18,320 --> 00:32:19,760
payloads we can go to numbers

1001
00:32:19,760 --> 00:32:23,760
um and since we already know agent uh we

1002
00:32:23,760 --> 00:32:25,440
see agent nine right here so we know it

1003
00:32:25,440 --> 00:32:27,279
starts at 10 and we could do 10 to 100

1004
00:32:27,279 --> 00:32:28,399
for example

1005
00:32:28,399 --> 00:32:30,559
and step by one so we send out total 90

1006
00:32:30,559 --> 00:32:32,320
requests 91 technically with the first

1007
00:32:32,320 --> 00:32:33,440
one

1008
00:32:33,440 --> 00:32:35,760
so you see that um we can then filter

1009
00:32:35,760 --> 00:32:37,360
out by length and we see

1010
00:32:37,360 --> 00:32:39,679
um payload number 87 pop up with agent

1011
00:32:39,679 --> 00:32:40,480
87 and

1012
00:32:40,480 --> 00:32:42,559
the response length is a lot is way

1013
00:32:42,559 --> 00:32:44,080
different than the rest

1014
00:32:44,080 --> 00:32:46,880
so we can use that as a baseline i just

1015
00:32:46,880 --> 00:32:47,440
want to

1016
00:32:47,440 --> 00:32:48,799
do do you mind if i just step back a bit

1017
00:32:48,799 --> 00:32:50,240
and describe what's happening in

1018
00:32:50,240 --> 00:32:51,600
intruder because i'm aware that some

1019
00:32:51,600 --> 00:32:52,320
people

1020
00:32:52,320 --> 00:32:54,559
might not be totally aware so burp

1021
00:32:54,559 --> 00:32:55,679
intruder

1022
00:32:55,679 --> 00:32:58,240
is a feature of burp suite that allows

1023
00:32:58,240 --> 00:33:00,080
you to basically send a whole stack of

1024
00:33:00,080 --> 00:33:01,440
different requests

1025
00:33:01,440 --> 00:33:03,840
where you slightly change one or more

1026
00:33:03,840 --> 00:33:05,760
parts of the http request

1027
00:33:05,760 --> 00:33:09,200
on each time so what we've done here is

1028
00:33:09,200 --> 00:33:10,399
the payload that which

1029
00:33:10,399 --> 00:33:13,760
is the uh so each each image had a file

1030
00:33:13,760 --> 00:33:14,559
name that was like

1031
00:33:14,559 --> 00:33:16,640
agent and then the agent number after

1032
00:33:16,640 --> 00:33:18,799
it.jpg as you can see there

1033
00:33:18,799 --> 00:33:20,480
and those two little funny s looking

1034
00:33:20,480 --> 00:33:22,320
characters i'm sure they have a name but

1035
00:33:22,320 --> 00:33:25,120
i don't know what they're called

1036
00:33:25,120 --> 00:33:27,600
conditions

1037
00:33:28,960 --> 00:33:32,080
yeah payload markers so basically um

1038
00:33:32,080 --> 00:33:35,279
wherever those symbols are around uh so

1039
00:33:35,279 --> 00:33:36,799
in this case just the number

1040
00:33:36,799 --> 00:33:38,880
that's the that's the spot in the http

1041
00:33:38,880 --> 00:33:40,559
request that will get um

1042
00:33:40,559 --> 00:33:42,159
replaced by the payloads that you

1043
00:33:42,159 --> 00:33:44,080
provide to burp and then

1044
00:33:44,080 --> 00:33:47,360
we went over to the payloads tab and

1045
00:33:47,360 --> 00:33:51,120
the payloads tab we actually um

1046
00:33:51,120 --> 00:33:53,039
defines the payloads that we're going to

1047
00:33:53,039 --> 00:33:54,720
be used so that could be anything that

1048
00:33:54,720 --> 00:33:56,559
could be any text any string

1049
00:33:56,559 --> 00:33:58,720
any whatever you want but in this case

1050
00:33:58,720 --> 00:34:00,480
we just chose to use numbers

1051
00:34:00,480 --> 00:34:04,080
uh every number from 10 to 100 so

1052
00:34:04,080 --> 00:34:05,760
then when you run the attack it will

1053
00:34:05,760 --> 00:34:07,840
basically send the same http request

1054
00:34:07,840 --> 00:34:09,280
but it will just have to update the

1055
00:34:09,280 --> 00:34:11,440
number in the file name each time to be

1056
00:34:11,440 --> 00:34:13,918
like 10 11 12 13 14 15 16 all the way up

1057
00:34:13,918 --> 00:34:14,719
to 100

1058
00:34:14,719 --> 00:34:16,639
and then it shows you a little table

1059
00:34:16,639 --> 00:34:18,239
with all of the requests

1060
00:34:18,239 --> 00:34:20,000
and all of the responses so it's really

1061
00:34:20,000 --> 00:34:21,679
easy to see um

1062
00:34:21,679 --> 00:34:25,119
if there are any images there that um

1063
00:34:25,119 --> 00:34:27,040
you can get so in this case we've got

1064
00:34:27,040 --> 00:34:28,239
one right maxim

1065
00:34:28,239 --> 00:34:31,119
yep yeah so we found sorry just one last

1066
00:34:31,119 --> 00:34:31,520
thing

1067
00:34:31,520 --> 00:34:34,159
yeah just to add on to that um remember

1068
00:34:34,159 --> 00:34:34,800
that burp

1069
00:34:34,800 --> 00:34:36,399
intruder is a really good way of

1070
00:34:36,399 --> 00:34:37,918
automating things and it

1071
00:34:37,918 --> 00:34:39,679
uh saves you a bit of time from having

1072
00:34:39,679 --> 00:34:42,000
to program you know the brute force for

1073
00:34:42,000 --> 00:34:42,960
yourself

1074
00:34:42,960 --> 00:34:44,719
but while that's actually happening do

1075
00:34:44,719 --> 00:34:46,079
you remember that a majority of the

1076
00:34:46,079 --> 00:34:47,520
systems that you're testing are prod

1077
00:34:47,520 --> 00:34:48,560
systems

1078
00:34:48,560 --> 00:34:50,639
so don't go brute forcing you know a

1079
00:34:50,639 --> 00:34:52,159
million requests on them because you're

1080
00:34:52,159 --> 00:34:53,199
probably going to start

1081
00:34:53,199 --> 00:34:55,679
disrupting service um so exactly as

1082
00:34:55,679 --> 00:34:56,639
maxim's showing

1083
00:34:56,639 --> 00:34:58,320
the request engine you can modify the

1084
00:34:58,320 --> 00:34:59,920
number of threads

1085
00:34:59,920 --> 00:35:02,720
and um the amount of pores you should

1086
00:35:02,720 --> 00:35:04,000
have and things like that

1087
00:35:04,000 --> 00:35:06,320
so please do take a look at that before

1088
00:35:06,320 --> 00:35:08,079
you actually kick off some kind of

1089
00:35:08,079 --> 00:35:10,079
um fuzzing with intruder just because

1090
00:35:10,079 --> 00:35:11,760
you might actually take something down

1091
00:35:11,760 --> 00:35:13,760
which could cause massive issues to

1092
00:35:13,760 --> 00:35:15,440
companies

1093
00:35:15,440 --> 00:35:17,440
and also that feature the intruder

1094
00:35:17,440 --> 00:35:19,359
feature is available in the free version

1095
00:35:19,359 --> 00:35:20,240
of burp

1096
00:35:20,240 --> 00:35:22,000
as well as the paid version but in the

1097
00:35:22,000 --> 00:35:23,680
free version your requests are throttled

1098
00:35:23,680 --> 00:35:26,320
so they just go a bit slower

1099
00:35:26,320 --> 00:35:28,720
um quick thing if anyone says anything

1100
00:35:28,720 --> 00:35:30,000
please interrupt me because i have

1101
00:35:30,000 --> 00:35:31,280
you guys on my other monitor so i might

1102
00:35:31,280 --> 00:35:34,400
not see it so feel free um

1103
00:35:34,400 --> 00:35:37,040
yeah so like lucas jeep explained yeah

1104
00:35:37,040 --> 00:35:38,560
it's really good uh limit your request

1105
00:35:38,560 --> 00:35:39,839
because that can also get you some

1106
00:35:39,839 --> 00:35:41,040
banned from some programs because some

1107
00:35:41,040 --> 00:35:42,160
people are really really sensitive to

1108
00:35:42,160 --> 00:35:43,280
that because it can take down the server

1109
00:35:43,280 --> 00:35:44,400
and that's not cool for everybody

1110
00:35:44,400 --> 00:35:45,359
involved

1111
00:35:45,359 --> 00:35:46,720
um especially if it is a production

1112
00:35:46,720 --> 00:35:48,400
server so yeah so we see

1113
00:35:48,400 --> 00:35:50,960
agent 87 has a huge response length and

1114
00:35:50,960 --> 00:35:52,079
we can filter out each

1115
00:35:52,079 --> 00:35:54,720
um by clicking the column name so like

1116
00:35:54,720 --> 00:35:55,280
you know

1117
00:35:55,280 --> 00:35:57,040
if you were like doing directory brute

1118
00:35:57,040 --> 00:35:58,640
forcing you wanted to see every 200 you

1119
00:35:58,640 --> 00:35:59,599
could probably just click the status

1120
00:35:59,599 --> 00:36:01,040
right here and

1121
00:36:01,040 --> 00:36:03,680
yeah so so on um so yeah so we see

1122
00:36:03,680 --> 00:36:05,040
agents 87 what we could do is we could

1123
00:36:05,040 --> 00:36:06,640
do copy url because it's an image and

1124
00:36:06,640 --> 00:36:07,839
like i said i mentioned

1125
00:36:07,839 --> 00:36:10,320
that guy is going to be in use so um

1126
00:36:10,320 --> 00:36:12,000
it'll download the image so

1127
00:36:12,000 --> 00:36:15,040
um yeah so cool thing i'm going to

1128
00:36:15,040 --> 00:36:16,000
quickly go into

1129
00:36:16,000 --> 00:36:17,359
because i have instead of stack hyper

1130
00:36:17,359 --> 00:36:19,119
osx kind of um gotta

1131
00:36:19,119 --> 00:36:21,280
install a lot of stuff for it so what

1132
00:36:21,280 --> 00:36:27,119
i'm gonna quickly do or sorry

1133
00:36:27,119 --> 00:36:30,400
i'm gonna quickly download it to my um

1134
00:36:30,400 --> 00:36:32,480
so cool so um yeah so if we go back to

1135
00:36:32,480 --> 00:36:34,800
the radio real quick um

1136
00:36:34,800 --> 00:36:36,079
i'm gonna clear up some tabs so it's a

1137
00:36:36,079 --> 00:36:41,839
little less confusing

1138
00:36:42,880 --> 00:36:44,240
and to quickly view it we just look at

1139
00:36:44,240 --> 00:36:46,160
the page source and

1140
00:36:46,160 --> 00:36:48,160
so we have a secret here it's uh putting

1141
00:36:48,160 --> 00:36:49,760
all the bugs basically

1142
00:36:49,760 --> 00:36:51,440
so what we can do is we can run stack

1143
00:36:51,440 --> 00:36:52,960
hide so basically stack hide is this

1144
00:36:52,960 --> 00:36:55,680
tool you'll see it used a lot in ctfs uh

1145
00:36:55,680 --> 00:36:56,400
mostly

1146
00:36:56,400 --> 00:36:58,400
i've not really ever i don't think ever

1147
00:36:58,400 --> 00:36:59,599
came across it on the bookbinding

1148
00:36:59,599 --> 00:37:00,480
platform

1149
00:37:00,480 --> 00:37:03,440
i'd be amazed yeah on a program yeah so

1150
00:37:03,440 --> 00:37:04,800
i think that's definitely a p1 no i'm

1151
00:37:04,800 --> 00:37:06,560
just kidding um

1152
00:37:06,560 --> 00:37:08,880
so yeah so we we can rent stack height

1153
00:37:08,880 --> 00:37:09,839
against the image

1154
00:37:09,839 --> 00:37:11,760
um that we just downloaded so using

1155
00:37:11,760 --> 00:37:13,599
these flags

1156
00:37:13,599 --> 00:37:15,760
actually let me clear that so this will

1157
00:37:15,760 --> 00:37:17,119
extract um sf

1158
00:37:17,119 --> 00:37:20,560
agent 87 so yeah so we can enter

1159
00:37:20,560 --> 00:37:22,160
pathways usually it'll stack height will

1160
00:37:22,160 --> 00:37:22,640
always

1161
00:37:22,640 --> 00:37:24,079
prompt for passwords usually sometimes

1162
00:37:24,079 --> 00:37:25,440
they won't have a factory so if we type

1163
00:37:25,440 --> 00:37:26,640
something in it'll just basically say

1164
00:37:26,640 --> 00:37:28,000
hey you can't extract anything

1165
00:37:28,000 --> 00:37:29,280
and a cool tip with stack height is that

1166
00:37:29,280 --> 00:37:30,880
i've noticed it works with jpeg images

1167
00:37:30,880 --> 00:37:32,320
only some if someone wants to correct me

1168
00:37:32,320 --> 00:37:33,680
on that so that's kind of my tip when

1169
00:37:33,680 --> 00:37:34,720
playing ctfs is that

1170
00:37:34,720 --> 00:37:36,160
if it's a jpeg image i'll try using

1171
00:37:36,160 --> 00:37:38,400
stack height against it um pngs it

1172
00:37:38,400 --> 00:37:39,280
doesn't seem to work

1173
00:37:39,280 --> 00:37:43,040
so yes

1174
00:37:43,040 --> 00:37:44,960
so yeah so once we get in um we can use

1175
00:37:44,960 --> 00:37:46,240
this phone all the bugs

1176
00:37:46,240 --> 00:37:50,320
and so we see that uh console

1177
00:37:50,320 --> 00:37:52,880
uh we got uh console.txt was written to

1178
00:37:52,880 --> 00:37:55,280
this so now we can look at console.txt

1179
00:37:55,280 --> 00:37:57,119
and then so we get and you know it says

1180
00:37:57,119 --> 00:37:58,960
hey agent as ordered by matriarch i've

1181
00:37:58,960 --> 00:38:00,160
created a backdoor console that will

1182
00:38:00,160 --> 00:38:01,599
allow us to launch want to spy when time

1183
00:38:01,599 --> 00:38:02,880
is right we're not worried about anyone

1184
00:38:02,880 --> 00:38:03,839
getting in since they have to go through

1185
00:38:03,839 --> 00:38:05,280
many doors to actually get in

1186
00:38:05,280 --> 00:38:06,320
once you're ready you will find that

1187
00:38:06,320 --> 00:38:07,760
console lives on port three three eight

1188
00:38:07,760 --> 00:38:08,880
nine

1189
00:38:08,880 --> 00:38:12,400
so um quick thing um this is a hint for

1190
00:38:12,400 --> 00:38:14,160
port knocking support knocking is more

1191
00:38:14,160 --> 00:38:15,760
like obscurity or security through

1192
00:38:15,760 --> 00:38:16,480
obscurity

1193
00:38:16,480 --> 00:38:18,880
um it's sort of where you can basically

1194
00:38:18,880 --> 00:38:20,160
have a port

1195
00:38:20,160 --> 00:38:21,599
uh you can have firewalls against

1196
00:38:21,599 --> 00:38:22,720
support but when someone knocks a

1197
00:38:22,720 --> 00:38:24,160
certain sequence of ports

1198
00:38:24,160 --> 00:38:25,680
they'll be able the port will basically

1199
00:38:25,680 --> 00:38:27,119
open up so a lot of times you know you

1200
00:38:27,119 --> 00:38:29,119
can use the to hide ssh for example and

1201
00:38:29,119 --> 00:38:30,240
you know if you know the sequence of

1202
00:38:30,240 --> 00:38:30,880
course

1203
00:38:30,880 --> 00:38:32,160
you can open it up or you can use it

1204
00:38:32,160 --> 00:38:33,760
pretty much with any service which

1205
00:38:33,760 --> 00:38:35,200
you'll see right now

1206
00:38:35,200 --> 00:38:36,560
but with poor knocking you will need to

1207
00:38:36,560 --> 00:38:38,960
know the sequence and

1208
00:38:38,960 --> 00:38:40,560
so to figure out the sequence once you

1209
00:38:40,560 --> 00:38:42,720
go back like i've mentioned you would um

1210
00:38:42,720 --> 00:38:44,960
if you were doing this organically you

1211
00:38:44,960 --> 00:38:46,000
know you would be downloading every

1212
00:38:46,000 --> 00:38:47,119
image and you would be looking through

1213
00:38:47,119 --> 00:38:48,000
every image so

1214
00:38:48,000 --> 00:38:50,320
for example we can use this first image

1215
00:38:50,320 --> 00:38:51,760
um

1216
00:38:51,760 --> 00:38:54,960
once it downloads we'll open it

1217
00:38:56,160 --> 00:38:59,440
and we'll see like right there a number

1218
00:38:59,440 --> 00:39:02,640
uh one two three seven so we can go

1219
00:39:02,640 --> 00:39:03,359
along this

1220
00:39:03,359 --> 00:39:07,040
um i kind of made it a grid and

1221
00:39:07,040 --> 00:39:10,079
to kind of um

1222
00:39:10,079 --> 00:39:11,520
so i'm just gonna do two images because

1223
00:39:11,520 --> 00:39:12,960
we're kind of running short on time but

1224
00:39:12,960 --> 00:39:15,119
um

1225
00:39:15,119 --> 00:39:18,160
so we get the second image and

1226
00:39:18,160 --> 00:39:20,320
you know it's right there in the corner

1227
00:39:20,320 --> 00:39:21,520
so four one five

1228
00:39:21,520 --> 00:39:24,320
so basically what eventually happens is

1229
00:39:24,320 --> 00:39:24,960
you'll get

1230
00:39:24,960 --> 00:39:27,040
four numbers and again like i said it

1231
00:39:27,040 --> 00:39:28,160
sequence has to be

1232
00:39:28,160 --> 00:39:29,440
the correct order so we could use this

1233
00:39:29,440 --> 00:39:30,800
like a permutation tool basically

1234
00:39:30,800 --> 00:39:32,079
there's a lot of scripts on github that

1235
00:39:32,079 --> 00:39:33,040
will do it for you

1236
00:39:33,040 --> 00:39:34,560
they'll um start knocking different

1237
00:39:34,560 --> 00:39:36,480
ports and the reason is is because

1238
00:39:36,480 --> 00:39:38,480
you see here it says it lives on 3389

1239
00:39:38,480 --> 00:39:40,839
but if i go here

1240
00:39:40,839 --> 00:39:44,640
and um

1241
00:39:46,480 --> 00:39:48,079
389 you'll see that the connection's

1242
00:39:48,079 --> 00:39:49,839
refused so the port's not open

1243
00:39:49,839 --> 00:39:51,920
so eventually when after you run the

1244
00:39:51,920 --> 00:39:53,200
script

1245
00:39:53,200 --> 00:39:55,280
you'll um open up the ports so the

1246
00:39:55,280 --> 00:39:56,560
correct sequence is

1247
00:39:56,560 --> 00:40:00,960
um it's

1248
00:40:00,960 --> 00:40:04,560
i'll do it real quick um

1249
00:40:09,599 --> 00:40:13,280
now if we run um

1250
00:40:14,640 --> 00:40:17,920
so now it shows that that is so cool

1251
00:40:17,920 --> 00:40:19,200
yeah so let me see if i can go through

1252
00:40:19,200 --> 00:40:20,880
my history i guess i did somewhere else

1253
00:40:20,880 --> 00:40:22,480
so basically yeah so now it's open if i

1254
00:40:22,480 --> 00:40:23,760
do it on my server for example right

1255
00:40:23,760 --> 00:40:24,560
here

1256
00:40:24,560 --> 00:40:28,640
um you'll see that it's

1257
00:40:28,640 --> 00:40:30,240
i think i missed it was there any hint

1258
00:40:30,240 --> 00:40:32,319
that this was actually port knocking

1259
00:40:32,319 --> 00:40:33,680
that was meant to be used

1260
00:40:33,680 --> 00:40:37,440
yeah so it's inside the text yeah

1261
00:40:37,440 --> 00:40:38,560
it's kind of basically saying you have

1262
00:40:38,560 --> 00:40:39,839
to get through many doors i thought

1263
00:40:39,839 --> 00:40:42,000
doors and knocking was sort of

1264
00:40:42,000 --> 00:40:43,440
i was gonna use ding dong ditching but i

1265
00:40:43,440 --> 00:40:45,119
didn't know if that was sort of like

1266
00:40:45,119 --> 00:40:46,960
an international or only something that

1267
00:40:46,960 --> 00:40:49,119
happens in the us so

1268
00:40:49,119 --> 00:40:52,240
like i try my best and again that's

1269
00:40:52,240 --> 00:40:53,520
again and then throughout the time

1270
00:40:53,520 --> 00:40:55,280
people started kind of dropping hints um

1271
00:40:55,280 --> 00:40:57,280
throughout the ctf

1272
00:40:57,280 --> 00:41:00,400
yeah so we get in um so yeah so once we

1273
00:41:00,400 --> 00:41:01,520
get in um

1274
00:41:01,520 --> 00:41:02,720
it said it was a secret console

1275
00:41:02,720 --> 00:41:04,560
basically kind of gave a tip and we

1276
00:41:04,560 --> 00:41:05,839
could try connecting to it like you can

1277
00:41:05,839 --> 00:41:07,280
try connecting to a netcap basically

1278
00:41:07,280 --> 00:41:08,480
just tell you it will just hang and then

1279
00:41:08,480 --> 00:41:10,160
you can try going into web

1280
00:41:10,160 --> 00:41:12,160
and you see it loaded up now and it'll

1281
00:41:12,160 --> 00:41:13,680
tell you hey greetings obvious

1282
00:41:13,680 --> 00:41:15,280
greetings oblastic agent welcome to the

1283
00:41:15,280 --> 00:41:16,640
secret command and control that we used

1284
00:41:16,640 --> 00:41:17,920
to launch wanna spy at the current

1285
00:41:17,920 --> 00:41:19,520
moment we're still building it out

1286
00:41:19,520 --> 00:41:21,359
so here you would either do a directory

1287
00:41:21,359 --> 00:41:23,200
brute force or you can actually look at

1288
00:41:23,200 --> 00:41:25,359
the http request set and you'll notice

1289
00:41:25,359 --> 00:41:27,280
something really peculiar

1290
00:41:27,280 --> 00:41:29,359
if you've um worked with the software

1291
00:41:29,359 --> 00:41:30,480
before

1292
00:41:30,480 --> 00:41:32,079
and like did you mention this will send

1293
00:41:32,079 --> 00:41:33,520
it basically to every single port as

1294
00:41:33,520 --> 00:41:34,400
well um

1295
00:41:34,400 --> 00:41:37,839
not even not only on https so

1296
00:41:37,839 --> 00:41:39,359
if we look at the response we see that

1297
00:41:39,359 --> 00:41:41,280
the server's using workzoom and python

1298
00:41:41,280 --> 00:41:42,560
3.8.2

1299
00:41:42,560 --> 00:41:43,920
so if you do some basic google and you

1300
00:41:43,920 --> 00:41:45,359
would come up across the works console

1301
00:41:45,359 --> 00:41:46,960
which is like a debugging console for

1302
00:41:46,960 --> 00:41:48,240
you know people writing flask apps for

1303
00:41:48,240 --> 00:41:50,240
example which is what this is written in

1304
00:41:50,240 --> 00:41:51,599
and that kind of makes it a lot more

1305
00:41:51,599 --> 00:41:53,359
easier to debug and usually it comes

1306
00:41:53,359 --> 00:41:54,880
with a debugging pin but there are times

1307
00:41:54,880 --> 00:41:56,079
you can look up um

1308
00:41:56,079 --> 00:41:57,280
there are disclosed reports where you

1309
00:41:57,280 --> 00:41:58,560
know sometimes the debugging pins

1310
00:41:58,560 --> 00:42:00,560
disabled and you know now you have full

1311
00:42:00,560 --> 00:42:04,560
basically control so um

1312
00:42:04,560 --> 00:42:06,720
we'll go into console and yeah so

1313
00:42:06,720 --> 00:42:08,160
basically now we have an interactive

1314
00:42:08,160 --> 00:42:10,000
console where we can uh

1315
00:42:10,000 --> 00:42:13,599
execute arbitrary python code

1316
00:42:14,839 --> 00:42:17,520
so yeah so

1317
00:42:17,520 --> 00:42:18,720
if you get here your heart should be

1318
00:42:18,720 --> 00:42:20,079
running at this point you should report

1319
00:42:20,079 --> 00:42:21,280
it i just want to make a disclaimer of

1320
00:42:21,280 --> 00:42:21,839
that

1321
00:42:21,839 --> 00:42:23,040
i mean i wouldn't really recommend

1322
00:42:23,040 --> 00:42:24,319
trying to you know pop a reverse shell

1323
00:42:24,319 --> 00:42:25,599
and trying to get a privilege escalation

1324
00:42:25,599 --> 00:42:27,200
this isn't the ocp you know if it's in

1325
00:42:27,200 --> 00:42:28,800
the bugbounty um

1326
00:42:28,800 --> 00:42:30,640
if it's in a bug program in the context

1327
00:42:30,640 --> 00:42:32,000
of a bug bounty um

1328
00:42:32,000 --> 00:42:33,520
the customer would not really appreciate

1329
00:42:33,520 --> 00:42:35,920
if he did that so

1330
00:42:35,920 --> 00:42:38,000
there's a lot of um modules in python

1331
00:42:38,000 --> 00:42:39,119
that we could use to

1332
00:42:39,119 --> 00:42:40,960
execute code i'll just go basic with

1333
00:42:40,960 --> 00:42:43,760
input with os so

1334
00:42:43,760 --> 00:42:45,839
so now we could do so with os for

1335
00:42:45,839 --> 00:42:46,960
example if we try to execute something

1336
00:42:46,960 --> 00:42:48,640
it will just return the status so like

1337
00:42:48,640 --> 00:42:49,920
we'll see zero because it

1338
00:42:49,920 --> 00:42:52,160
it works but um to actually read it we

1339
00:42:52,160 --> 00:42:53,520
can use um

1340
00:42:53,520 --> 00:42:58,319
p open so if we do so

1341
00:42:58,319 --> 00:43:01,839
return the it'll return the actual

1342
00:43:01,839 --> 00:43:02,640
output

1343
00:43:02,640 --> 00:43:04,480
so again this is where you would get a

1344
00:43:04,480 --> 00:43:06,319
reverse shell like

1345
00:43:06,319 --> 00:43:08,000
um i figured it would be a lot more easy

1346
00:43:08,000 --> 00:43:09,359
to read but because we're kind of short

1347
00:43:09,359 --> 00:43:11,520
on time i don't have a one-liner

1348
00:43:11,520 --> 00:43:13,520
prepared i'll kind of just go through

1349
00:43:13,520 --> 00:43:14,720
where the flag would be

1350
00:43:14,720 --> 00:43:18,480
so here you would see um

1351
00:43:18,560 --> 00:43:20,799
so

1352
00:43:22,400 --> 00:43:25,920
yeah so uh in the user's home directory

1353
00:43:25,920 --> 00:43:26,880
which is um

1354
00:43:26,880 --> 00:43:29,520
agent1237 you would see the flag and

1355
00:43:29,520 --> 00:43:30,640
it's somewhere here i'm just not

1356
00:43:30,640 --> 00:43:32,160
catching it right now i'm just

1357
00:43:32,160 --> 00:43:33,359
really just right there so that's the

1358
00:43:33,359 --> 00:43:35,839
last line so yeah so that's the flag

1359
00:43:35,839 --> 00:43:38,720
um so yeah so a lot of people at this

1360
00:43:38,720 --> 00:43:40,400
point because again with classical ctfs

1361
00:43:40,400 --> 00:43:41,599
here's kind of where you would try to go

1362
00:43:41,599 --> 00:43:42,640
for a previous such as the kernel

1363
00:43:42,640 --> 00:43:44,240
exploit try to get root but

1364
00:43:44,240 --> 00:43:45,760
i kind of wanted to show that you can

1365
00:43:45,760 --> 00:43:47,520
kind of you know

1366
00:43:47,520 --> 00:43:49,200
use this to kind of exfiltrate or to

1367
00:43:49,200 --> 00:43:50,960
kind of read data and to kind of connect

1368
00:43:50,960 --> 00:43:54,319
everything in a loop so eventually

1369
00:43:54,319 --> 00:43:56,640
so eventually you start um enumerating

1370
00:43:56,640 --> 00:43:58,000
the system there's a bunch of cool like

1371
00:43:58,000 --> 00:43:58,800
linux private

1372
00:43:58,800 --> 00:44:00,800
scripts that will really just sit there

1373
00:44:00,800 --> 00:44:02,000
and just complete all the

1374
00:44:02,000 --> 00:44:03,440
uh useful information and then you'll

1375
00:44:03,440 --> 00:44:05,920
come across um

1376
00:44:05,920 --> 00:44:08,640
uh the op directory where you'll find

1377
00:44:08,640 --> 00:44:11,119
something interesting so you'll find

1378
00:44:11,119 --> 00:44:12,960
basically something called passwords.txt

1379
00:44:12,960 --> 00:44:14,880
you could also use like find for example

1380
00:44:14,880 --> 00:44:18,319
um and come across this so once we open

1381
00:44:18,319 --> 00:44:18,560
up

1382
00:44:18,560 --> 00:44:20,240
uh we can try to read the contents of

1383
00:44:20,240 --> 00:44:23,359
passwords let's see

1384
00:44:23,359 --> 00:44:26,640
and let's expand it so basically

1385
00:44:26,640 --> 00:44:28,960
it says matriarch has asked me to store

1386
00:44:28,960 --> 00:44:30,160
everyone's plaintext password right

1387
00:44:30,160 --> 00:44:31,760
which is the best idea in the world in

1388
00:44:31,760 --> 00:44:33,119
case we forget them

1389
00:44:33,119 --> 00:44:36,079
um and this is another thing i see i've

1390
00:44:36,079 --> 00:44:37,440
seen this with cts i've actually seen

1391
00:44:37,440 --> 00:44:38,400
this in the bug uh

1392
00:44:38,400 --> 00:44:39,599
context just because something's

1393
00:44:39,599 --> 00:44:40,960
inaccessible from the web root it

1394
00:44:40,960 --> 00:44:42,720
doesn't necessarily mean that

1395
00:44:42,720 --> 00:44:44,079
you know people can't get to it for

1396
00:44:44,079 --> 00:44:46,160
example xc with x60 you can have file

1397
00:44:46,160 --> 00:44:46,720
read

1398
00:44:46,720 --> 00:44:49,040
local file inclusions so a lot of times

1399
00:44:49,040 --> 00:44:50,560
you know you could read like for example

1400
00:44:50,560 --> 00:44:51,920
the database where the database credits

1401
00:44:51,920 --> 00:44:52,960
are stored and kind of

1402
00:44:52,960 --> 00:44:54,800
go off that but again at that point i

1403
00:44:54,800 --> 00:44:56,480
would stop all testing submit it and

1404
00:44:56,480 --> 00:44:58,240
then ask for permission to go for

1405
00:44:58,240 --> 00:45:02,160
forward yeah so yeah so um

1406
00:45:02,160 --> 00:45:03,200
you know we see these plain text

1407
00:45:03,200 --> 00:45:04,560
passwords right here so we see the one

1408
00:45:04,560 --> 00:45:06,319
and only matriarch and we see

1409
00:45:06,319 --> 00:45:08,800
um her password so we can go back to the

1410
00:45:08,800 --> 00:45:09,920
slogan and

1411
00:45:09,920 --> 00:45:11,200
like i mentioned you know it's gonna be

1412
00:45:11,200 --> 00:45:12,319
kind of hard to lock out so what we

1413
00:45:12,319 --> 00:45:13,119
could do

1414
00:45:13,119 --> 00:45:14,880
oh yeah it worked i guess our session

1415
00:45:14,880 --> 00:45:16,720
might have expired um

1416
00:45:16,720 --> 00:45:17,839
so now we can try logging into the

1417
00:45:17,839 --> 00:45:20,079
matriarch

1418
00:45:20,079 --> 00:45:22,319
so

1419
00:45:23,680 --> 00:45:26,560
use this password

1420
00:45:29,920 --> 00:45:32,000
so yeah so once we get to matriarch we

1421
00:45:32,000 --> 00:45:33,440
see something different

1422
00:45:33,440 --> 00:45:35,680
um you know we see a big red destroy

1423
00:45:35,680 --> 00:45:37,040
button and

1424
00:45:37,040 --> 00:45:38,960
no you know no one could resist pressing

1425
00:45:38,960 --> 00:45:41,760
that so when we press it

1426
00:45:41,760 --> 00:45:44,839
we get to that and we get the final flag

1427
00:45:44,839 --> 00:45:46,480
awesome

1428
00:45:46,480 --> 00:45:48,800
so to kind of give a quick summary this

1429
00:45:48,800 --> 00:45:50,800
i kind of try to blend realism and like

1430
00:45:50,800 --> 00:45:51,440
ctf

1431
00:45:51,440 --> 00:45:53,760
together i've noticed in the last year

1432
00:45:53,760 --> 00:45:54,480
or so

1433
00:45:54,480 --> 00:45:57,599
probably even before my time um a lot of

1434
00:45:57,599 --> 00:45:59,200
pen testing has been now mixing with bug

1435
00:45:59,200 --> 00:46:00,640
bounty especially background having

1436
00:46:00,640 --> 00:46:02,160
you know these new type of pen testing

1437
00:46:02,160 --> 00:46:03,760
programs out there so you know you'll

1438
00:46:03,760 --> 00:46:04,960
get a lot of pen testing and a lot of

1439
00:46:04,960 --> 00:46:06,160
stuff that you find in pen testing that

1440
00:46:06,160 --> 00:46:07,920
would be really

1441
00:46:07,920 --> 00:46:09,440
you know useful in pen testing reports

1442
00:46:09,440 --> 00:46:11,359
sometimes get p5 and you know some

1443
00:46:11,359 --> 00:46:13,280
people get annoyed with that so

1444
00:46:13,280 --> 00:46:14,800
this is sort of how i try to show you

1445
00:46:14,800 --> 00:46:16,319
know something that could be a p5 could

1446
00:46:16,319 --> 00:46:17,280
be leveraged

1447
00:46:17,280 --> 00:46:18,560
you know all the way to an

1448
00:46:18,560 --> 00:46:20,160
authentication bypass all the way to

1449
00:46:20,160 --> 00:46:21,520
remote code execution

1450
00:46:21,520 --> 00:46:24,000
eventually to you saving the world so

1451
00:46:24,000 --> 00:46:26,800
that was the level of ctf

1452
00:46:26,800 --> 00:46:30,800
that is so good that that ctf was

1453
00:46:30,800 --> 00:46:32,720
great i really really enjoyed the

1454
00:46:32,720 --> 00:46:33,839
walkthrough i wish i

1455
00:46:33,839 --> 00:46:36,160
actually i wish i actually did it and i

1456
00:46:36,160 --> 00:46:37,760
was it was really cool to see port

1457
00:46:37,760 --> 00:46:38,880
knocking come through

1458
00:46:38,880 --> 00:46:40,480
i don't actually know how much port

1459
00:46:40,480 --> 00:46:42,160
knocking is used these days in

1460
00:46:42,160 --> 00:46:43,359
production but

1461
00:46:43,359 --> 00:46:46,400
i definitely have used it in a company

1462
00:46:46,400 --> 00:46:48,079
that i used to work for to keep some

1463
00:46:48,079 --> 00:46:49,359
admin dashboards

1464
00:46:49,359 --> 00:46:51,760
safe from prying eyes but still make

1465
00:46:51,760 --> 00:46:53,359
them accessible to people

1466
00:46:53,359 --> 00:46:55,839
so um yeah i was really cool to see that

1467
00:46:55,839 --> 00:46:57,839
and the whole ctf was really cool it

1468
00:46:57,839 --> 00:46:59,280
looked great i mean i'm

1469
00:46:59,280 --> 00:47:02,000
i'm blown away and i would love to speak

1470
00:47:02,000 --> 00:47:04,000
about it more but we're actually

1471
00:47:04,000 --> 00:47:05,359
running out of time a little bit because

1472
00:47:05,359 --> 00:47:07,280
we've got our next awesome event coming

1473
00:47:07,280 --> 00:47:07,599
up

1474
00:47:07,599 --> 00:47:10,560
so g would you like to do the intro uh

1475
00:47:10,560 --> 00:47:10,880
yeah

1476
00:47:10,880 --> 00:47:13,200
so yeah our next awesome event is

1477
00:47:13,200 --> 00:47:14,240
actually with wisp

1478
00:47:14,240 --> 00:47:16,720
so um we're gonna have a panel with all

1479
00:47:16,720 --> 00:47:17,359
um

1480
00:47:17,359 --> 00:47:19,599
some of the prominent women in security

1481
00:47:19,599 --> 00:47:20,880
and they're gonna kind of go

1482
00:47:20,880 --> 00:47:22,400
and answer some of the questions and

1483
00:47:22,400 --> 00:47:24,480
have a few discussions about

1484
00:47:24,480 --> 00:47:26,000
um some of the problems and things that

1485
00:47:26,000 --> 00:47:28,000
they see and um

1486
00:47:28,000 --> 00:47:30,880
you know how they're going to be going

1487
00:47:30,880 --> 00:47:32,480
about doing things and how the future is

1488
00:47:32,480 --> 00:47:33,680
going to look too

1489
00:47:33,680 --> 00:47:36,720
so um feel free to go ahead and

1490
00:47:36,720 --> 00:47:38,640
pop your questions in discord if you

1491
00:47:38,640 --> 00:47:40,160
have any and yeah well

1492
00:47:40,160 --> 00:47:41,680
we're looking forward to a really nice

1493
00:47:41,680 --> 00:47:43,599
discussion

1494
00:47:43,599 --> 00:47:44,880
yeah and i just want to say thank you

1495
00:47:44,880 --> 00:47:47,040
everybody for providing uh information

1496
00:47:47,040 --> 00:47:48,559
i know i missed a lot of key parts so

1497
00:47:48,559 --> 00:47:50,400
thank you to even luke and jay for being

1498
00:47:50,400 --> 00:47:51,440
here um

1499
00:47:51,440 --> 00:47:52,800
so before i go i'd like to give a quick

1500
00:47:52,800 --> 00:47:54,640
shout out to god milk he is basically

1501
00:47:54,640 --> 00:47:56,319
like the founder of bonehub that really

1502
00:47:56,319 --> 00:47:57,920
inspired me when i was first starting to

1503
00:47:57,920 --> 00:47:58,240
place

1504
00:47:58,240 --> 00:48:00,559
uh ctfs and vulnerable machines and

1505
00:48:00,559 --> 00:48:02,160
helped me a lot during the oscp and the

1506
00:48:02,160 --> 00:48:04,079
second person is john hammond which

1507
00:48:04,079 --> 00:48:06,319
he also deals in ctf so he has the ctf

1508
00:48:06,319 --> 00:48:08,240
katana on github where you can find a

1509
00:48:08,240 --> 00:48:09,920
bunch of cool information about ctf such

1510
00:48:09,920 --> 00:48:11,280
as like different rod ciphers and

1511
00:48:11,280 --> 00:48:12,400
everything that's really been used in

1512
00:48:12,400 --> 00:48:13,040
ctf

1513
00:48:13,040 --> 00:48:15,440
so yeah if you want to ask any questions

1514
00:48:15,440 --> 00:48:16,720
i'm always in the

1515
00:48:16,720 --> 00:48:18,160
bug crowd discord i'm always down to

1516
00:48:18,160 --> 00:48:20,640
play some ctfs do some phone hubs and

1517
00:48:20,640 --> 00:48:23,200
yeah thank you everybody again yeah and

1518
00:48:23,200 --> 00:48:24,720
to block that one uh

1519
00:48:24,720 --> 00:48:26,880
yeah voldelhub.com is a great place to

1520
00:48:26,880 --> 00:48:28,160
learn as well because

1521
00:48:28,160 --> 00:48:30,480
as what i can see from the ctf that

1522
00:48:30,480 --> 00:48:32,160
maxim did

1523
00:48:32,160 --> 00:48:34,319
there are some vulnerable walkthroughs

1524
00:48:34,319 --> 00:48:35,599
that you could actually

1525
00:48:35,599 --> 00:48:37,920
play like this one and then you need to

1526
00:48:37,920 --> 00:48:40,079
like get rude to get the flag

1527
00:48:40,079 --> 00:48:43,440
and then there's also that's what maxim

1528
00:48:43,440 --> 00:48:43,839
said

1529
00:48:43,839 --> 00:48:47,119
uh gut milk he has some write-ups as

1530
00:48:47,119 --> 00:48:48,400
well in his blog

1531
00:48:48,400 --> 00:48:51,040
and in fact uh i've learned from him

1532
00:48:51,040 --> 00:48:52,800
because uh

1533
00:48:52,800 --> 00:48:55,839
he did some good writings about

1534
00:48:55,839 --> 00:48:58,559
linux privilege escalations in his blog

1535
00:48:58,559 --> 00:48:59,280
and

1536
00:48:59,280 --> 00:49:02,559
you know uh he's he got

1537
00:49:02,559 --> 00:49:05,599
a lot of awesome stuff in his blog so i

1538
00:49:05,599 --> 00:49:06,640
would i would really

1539
00:49:06,640 --> 00:49:10,559
recommend to read this blog yeah

1540
00:49:10,559 --> 00:49:12,559
awesome thanks so much maxim for coming

1541
00:49:12,559 --> 00:49:14,000
out and actually giving us this

1542
00:49:14,000 --> 00:49:14,640
walkthrough

1543
00:49:14,640 --> 00:49:16,640
it was awesome and yeah let's transition

1544
00:49:16,640 --> 00:49:30,640
to the next

