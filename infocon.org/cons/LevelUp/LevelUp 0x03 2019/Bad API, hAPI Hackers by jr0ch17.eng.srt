1
00:00:06,260 --> 00:00:12,170
alright thanks I'm thing

2
00:00:09,110 --> 00:00:16,009
for having me in the third version

3
00:00:12,170 --> 00:00:20,029
develop this year so as Sam said this

4
00:00:16,010 --> 00:00:22,340
talked about my API methodology and so

5
00:00:20,029 --> 00:00:25,340
what I called that API makes happy

6
00:00:22,340 --> 00:00:28,340
hackers so we'll start off with myself

7
00:00:25,340 --> 00:00:31,759
my name is Jasmine Landry known as

8
00:00:28,340 --> 00:00:34,670
j-rock 17 on Twitter slag table all that

9
00:00:31,760 --> 00:00:37,489
stuff I'm a politician tester based out

10
00:00:34,670 --> 00:00:41,600
of Montreal in Canada and I'm also been

11
00:00:37,489 --> 00:00:45,199
named a background masseter last month

12
00:00:41,600 --> 00:00:47,120
I'm currently ranked 53rd bugcrowd and I

13
00:00:45,199 --> 00:00:49,790
also system since I'm from Canada

14
00:00:47,120 --> 00:00:52,010
of course I play hockey about two times

15
00:00:49,790 --> 00:00:53,780
a week and that keeps me sane of all

16
00:00:52,010 --> 00:00:58,820
this hacking and logged on to you that I

17
00:00:53,780 --> 00:01:01,010
do all week long so the schedule for

18
00:00:58,820 --> 00:01:03,979
that for today I'm going to talk about

19
00:01:01,010 --> 00:01:05,690
briefly about my methodology the

20
00:01:03,979 --> 00:01:08,530
differences between black box testing

21
00:01:05,690 --> 00:01:11,720
and white box testing for api's

22
00:01:08,530 --> 00:01:13,430
information-gathering recon which is

23
00:01:11,720 --> 00:01:16,429
pretty much generating error messages

24
00:01:13,430 --> 00:01:18,140
and then a technical bugs so what I mean

25
00:01:16,430 --> 00:01:21,799
by technical bugs is folks that can't be

26
00:01:18,140 --> 00:01:24,079
detected by scanner so like SQL

27
00:01:21,799 --> 00:01:27,079
injection XS s XS see other stuff and

28
00:01:24,079 --> 00:01:29,389
then follow up with logical bugs so I

29
00:01:27,079 --> 00:01:31,460
doors press collation information leaks

30
00:01:29,390 --> 00:01:33,829
something that means they bring to

31
00:01:31,460 --> 00:01:37,850
understand and that burp burp won't

32
00:01:33,829 --> 00:01:41,479
detect since it doesn't have a brain so

33
00:01:37,850 --> 00:01:43,880
a lot of people reached out to me on

34
00:01:41,479 --> 00:01:46,579
Twitter or even at work they always ask

35
00:01:43,880 --> 00:01:48,499
where do I start for testing IP eyes I

36
00:01:46,579 --> 00:01:50,419
have a hard time answering that question

37
00:01:48,499 --> 00:01:52,880
because when I started I didn't know

38
00:01:50,420 --> 00:01:55,219
either so I just ended up creating my

39
00:01:52,880 --> 00:01:57,829
home as a methodology which I start by

40
00:01:55,219 --> 00:02:00,169
doing recon as I said earlier and then

41
00:01:57,829 --> 00:02:02,270
from our recon from what I've gathered

42
00:02:00,170 --> 00:02:04,600
from what I've gathered as information

43
00:02:02,270 --> 00:02:07,069
from there I can look for technical bugs

44
00:02:04,600 --> 00:02:08,960
so RCE is what we actually and all that

45
00:02:07,069 --> 00:02:13,670
stuff and then I follow up follow up

46
00:02:08,960 --> 00:02:16,069
with logical ones sometimes I strive

47
00:02:13,670 --> 00:02:17,809
logical ones if I see that the

48
00:02:16,069 --> 00:02:20,839
information that I've seen the responses

49
00:02:17,810 --> 00:02:23,810
are different let's say there's a PII

50
00:02:20,840 --> 00:02:26,000
OPC I then there's a is a good chance

51
00:02:23,810 --> 00:02:29,810
that if I find something with that

52
00:02:26,000 --> 00:02:32,540
we'll be a lot bigger and better but I

53
00:02:29,810 --> 00:02:34,430
personally prefer looking for RC stuff

54
00:02:32,540 --> 00:02:37,640
like that because just my preference I

55
00:02:34,430 --> 00:02:40,190
just have more fun doing so and it's in

56
00:02:37,640 --> 00:02:42,920
portfolio step by step so that you don't

57
00:02:40,190 --> 00:02:43,760
forget to test anything so the more you

58
00:02:42,920 --> 00:02:45,500
test

59
00:02:43,760 --> 00:02:50,359
I guess the bigger your attack surface

60
00:02:45,500 --> 00:02:52,850
is they're more bugs you'll find so

61
00:02:50,360 --> 00:02:55,370
let's start off with the black box

62
00:02:52,850 --> 00:02:57,470
testing for API is it's pretty much

63
00:02:55,370 --> 00:02:59,810
collector than fight as many endpoints

64
00:02:57,470 --> 00:03:01,820
as you can either by going through all

65
00:02:59,810 --> 00:03:05,060
endpoints in the application to generate

66
00:03:01,820 --> 00:03:07,640
API calls you can look for EDD points

67
00:03:05,060 --> 00:03:09,590
and github I can run good for tools like

68
00:03:07,640 --> 00:03:12,140
your search combustor or other tools

69
00:03:09,590 --> 00:03:15,320
like that to identify other it was as

70
00:03:12,140 --> 00:03:17,809
well and also you can look in JavaScript

71
00:03:15,320 --> 00:03:20,720
sometimes you can see API endpoints in

72
00:03:17,810 --> 00:03:23,360
there as well and also at test all

73
00:03:20,720 --> 00:03:27,170
available methods so not just get and

74
00:03:23,360 --> 00:03:30,410
post try put patch delete and so on if

75
00:03:27,170 --> 00:03:32,540
there are more available sometimes you

76
00:03:30,410 --> 00:03:34,850
you think there's only I get in the post

77
00:03:32,540 --> 00:03:37,250
but if you send a put it'll behave

78
00:03:34,850 --> 00:03:39,410
differently so yeah you just never know

79
00:03:37,250 --> 00:03:43,030
so I strongly suggest to test all of

80
00:03:39,410 --> 00:03:47,150
these methods when testing for API and

81
00:03:43,030 --> 00:03:49,910
then for white box if there is

82
00:03:47,150 --> 00:03:53,390
documentation absolutely read it

83
00:03:49,910 --> 00:03:56,000
try it out make sure you generate a

84
00:03:53,390 --> 00:03:57,738
working request for each endpoint so

85
00:03:56,000 --> 00:04:00,560
that means you need to get it 200 okay

86
00:03:57,739 --> 00:04:02,360
for everything if not that means that

87
00:04:00,560 --> 00:04:03,560
you won't have you don't have a working

88
00:04:02,360 --> 00:04:06,170
request so you don't know what they

89
00:04:03,560 --> 00:04:07,820
applied with the API is expecting so you

90
00:04:06,170 --> 00:04:10,720
don't know what to test to do to find

91
00:04:07,820 --> 00:04:12,829
bugs if you have a postman collection

92
00:04:10,720 --> 00:04:15,320
proxy through burp suite so that you

93
00:04:12,829 --> 00:04:17,329
have an easier way of testing I mean you

94
00:04:15,320 --> 00:04:18,798
can also test in postman itself but you

95
00:04:17,329 --> 00:04:21,400
want to automate stuff I think it's

96
00:04:18,798 --> 00:04:24,169
better with burp

97
00:04:21,399 --> 00:04:26,299
this can be a long I know process but at

98
00:04:24,169 --> 00:04:29,180
the end of the day if you think if to to

99
00:04:26,300 --> 00:04:32,120
try to understand each each API call and

100
00:04:29,180 --> 00:04:34,220
each time point the better user for you

101
00:04:32,120 --> 00:04:36,400
if the user for you it'll be to find

102
00:04:34,220 --> 00:04:36,400
bugs

103
00:04:37,580 --> 00:04:41,900
let's continue with information

104
00:04:39,560 --> 00:04:44,000
gathering or recon like I explained

105
00:04:41,900 --> 00:04:47,508
earlier for API is if you don't have

106
00:04:44,000 --> 00:04:50,060
documentation it's really tough to find

107
00:04:47,509 --> 00:04:51,650
bugs so the goal is to generate error

108
00:04:50,060 --> 00:04:54,560
messages which which will leak

109
00:04:51,650 --> 00:04:55,969
information like let's say a stack trace

110
00:04:54,560 --> 00:04:57,949
or something like that so did I have an

111
00:04:55,969 --> 00:05:00,650
idea what's used in the backend so that

112
00:04:57,949 --> 00:05:03,800
it'll it could be easier for you to find

113
00:05:00,650 --> 00:05:06,888
RCS or SQL injections if you have an

114
00:05:03,800 --> 00:05:10,639
idea what she was or technologies are

115
00:05:06,889 --> 00:05:14,659
used in the backend to do this you can

116
00:05:10,639 --> 00:05:17,419
send multiple types of data let's say

117
00:05:14,659 --> 00:05:20,120
it's expecting a string go ahead and

118
00:05:17,419 --> 00:05:22,758
send an integer instead or a boolean

119
00:05:20,120 --> 00:05:24,830
value like true or false or even no or

120
00:05:22,759 --> 00:05:27,020
an array you really never know what

121
00:05:24,830 --> 00:05:29,479
you'll get in response and sometimes

122
00:05:27,020 --> 00:05:31,039
it's not expecting that so it'll spit

123
00:05:29,479 --> 00:05:34,159
out a ton of information and their

124
00:05:31,039 --> 00:05:37,370
response or if it's if it's birthing an

125
00:05:34,159 --> 00:05:39,289
integer send a string and and so forth

126
00:05:37,370 --> 00:05:41,379
and so on and just make sure you test

127
00:05:39,289 --> 00:05:45,139
all everything as as much as you can and

128
00:05:41,379 --> 00:05:47,719
you'll never know what you'll get again

129
00:05:45,139 --> 00:05:50,419
try all available methods here I even

130
00:05:47,719 --> 00:05:54,349
put qwe as a first three characters on

131
00:05:50,419 --> 00:05:57,109
the keyboard I had this case about a

132
00:05:54,349 --> 00:05:59,449
month ago I sent this as the method and

133
00:05:57,110 --> 00:06:01,279
it said like a regular response to four

134
00:05:59,449 --> 00:06:04,310
or five saying that that MIT is not

135
00:06:01,279 --> 00:06:08,330
available but after that I had a a big

136
00:06:04,310 --> 00:06:10,639
stack stack trace about the the the the

137
00:06:08,330 --> 00:06:13,698
framework was used so this was this was

138
00:06:10,639 --> 00:06:16,789
a good information gathering I could

139
00:06:13,699 --> 00:06:20,000
look that I used later on since I knew

140
00:06:16,789 --> 00:06:23,060
like the full path stuff like that and

141
00:06:20,000 --> 00:06:26,300
also said malformed JSON as you can see

142
00:06:23,060 --> 00:06:28,699
here there's a second double quote after

143
00:06:26,300 --> 00:06:31,190
the value of the bell Crocky so after a

144
00:06:28,699 --> 00:06:32,930
LevelUp three sometimes it's pretty rare

145
00:06:31,190 --> 00:06:35,120
but it does happen that you'll get like

146
00:06:32,930 --> 00:06:38,029
a verbose error message here as well you

147
00:06:35,120 --> 00:06:39,889
most you mostly get like a malformed

148
00:06:38,029 --> 00:06:43,639
there's on error which is pretty basic

149
00:06:39,889 --> 00:06:45,469
and simple except sometimes it happens

150
00:06:43,639 --> 00:06:48,259
that there is more information in there

151
00:06:45,469 --> 00:06:50,750
and also as you can see in the

152
00:06:48,259 --> 00:06:55,430
screenshot here

153
00:06:50,750 --> 00:06:58,310
the API was expecting only alphanumeric

154
00:06:55,430 --> 00:07:01,040
characters but by adding and that person

155
00:06:58,310 --> 00:07:03,470
at the end of the the end of the value

156
00:07:01,040 --> 00:07:05,600
that I put in it simply gave me an API

157
00:07:03,470 --> 00:07:09,350
key that was used by a third party for

158
00:07:05,600 --> 00:07:11,830
that program so this is a p1 which was

159
00:07:09,350 --> 00:07:11,830
pretty easy

160
00:07:13,150 --> 00:07:20,659
there's also another way to fuzz get

161
00:07:18,110 --> 00:07:22,910
error messages which is not manual which

162
00:07:20,660 --> 00:07:24,890
can automate it in burp is something

163
00:07:22,910 --> 00:07:28,820
that not a lot of people know about I

164
00:07:24,890 --> 00:07:30,770
think so let's say you have a request I

165
00:07:28,820 --> 00:07:33,890
send this to intruder and then you

166
00:07:30,770 --> 00:07:35,690
select all positions at scan from there

167
00:07:33,890 --> 00:07:38,060
you simply right click and select scan

168
00:07:35,690 --> 00:07:41,090
to find insertion points so this will

169
00:07:38,060 --> 00:07:42,740
only scan what you selected

170
00:07:41,090 --> 00:07:45,440
you won't like try other methods they

171
00:07:42,740 --> 00:07:47,510
want to send to me or L it only scan

172
00:07:45,440 --> 00:07:51,320
what you what you want what you wanted

173
00:07:47,510 --> 00:07:54,349
to do and also if you install the error

174
00:07:51,320 --> 00:07:56,030
message checks burp extension this goes

175
00:07:54,350 --> 00:07:59,090
along really well with this

176
00:07:56,030 --> 00:08:01,549
you'll get scan scan your findings your

177
00:07:59,090 --> 00:08:04,250
burp dashboard about what their message

178
00:08:01,550 --> 00:08:05,960
isn't found so this is a nice way of

179
00:08:04,250 --> 00:08:08,750
automating as well so like sometimes

180
00:08:05,960 --> 00:08:11,539
it's expecting only like 8 characters if

181
00:08:08,750 --> 00:08:12,919
you if with burp scanner it'll try more

182
00:08:11,540 --> 00:08:15,260
than 8 characters and you'll get like a

183
00:08:12,919 --> 00:08:22,330
nice error message which which helps

184
00:08:15,260 --> 00:08:25,909
later on so with technical bugs I

185
00:08:22,330 --> 00:08:28,340
usually get either RCS because which can

186
00:08:25,910 --> 00:08:31,310
be achieved with a server-side sentence

187
00:08:28,340 --> 00:08:33,579
action file uploads most of the time

188
00:08:31,310 --> 00:08:35,900
there are they are file uploads

189
00:08:33,580 --> 00:08:37,909
something like this like you specify the

190
00:08:35,900 --> 00:08:39,650
file name and then the file content

191
00:08:37,909 --> 00:08:41,360
which is base it's 4 encoded but most of

192
00:08:39,650 --> 00:08:46,459
the time we can change the content type

193
00:08:41,360 --> 00:08:48,770
from image/png to either application XML

194
00:08:46,460 --> 00:08:50,990
or text HTML to get an access key or

195
00:08:48,770 --> 00:08:53,180
store text sort of assess this is

196
00:08:50,990 --> 00:08:54,890
actually something that Shawn about not

197
00:08:53,180 --> 00:08:56,120
too long ago I found it pretty funny

198
00:08:54,890 --> 00:08:58,939
that's he tweeted this when I had

199
00:08:56,120 --> 00:09:00,920
already put this in my slide so that's

200
00:08:58,940 --> 00:09:03,250
pretty cool so yeah we have we're tuned

201
00:09:00,920 --> 00:09:08,240
out that suggests doing this

202
00:09:03,250 --> 00:09:11,600
and it looks in this example here it was

203
00:09:08,240 --> 00:09:13,839
a file upload of a GU Ruby script so I

204
00:09:11,600 --> 00:09:17,300
simply put it this simple one one line

205
00:09:13,839 --> 00:09:21,019
groovy command that excuse to sleep

206
00:09:17,300 --> 00:09:24,649
sleep command on Linux and indeed

207
00:09:21,019 --> 00:09:26,569
response to gets in second to took that

208
00:09:24,649 --> 00:09:29,240
took ten seconds to respond back from

209
00:09:26,569 --> 00:09:33,160
the server so this is confirmed that GRC

210
00:09:29,240 --> 00:09:37,069
worked it was blind so I had a hard time

211
00:09:33,160 --> 00:09:38,569
getting information back but at least I

212
00:09:37,069 --> 00:09:42,740
I confirmed that there were the nursery

213
00:09:38,569 --> 00:09:46,699
there and and again to add on file

214
00:09:42,740 --> 00:09:49,190
uploads this one is a bit different the

215
00:09:46,699 --> 00:09:51,170
kana type was in hospice in a separate

216
00:09:49,190 --> 00:09:54,709
key that was found him again miss

217
00:09:51,170 --> 00:09:59,509
foreign key and the value was base64

218
00:09:54,709 --> 00:10:01,579
encoded this is simply my my xst pay

219
00:09:59,509 --> 00:10:04,490
hello yeah

220
00:10:01,579 --> 00:10:08,388
and then in the response I got this

221
00:10:04,490 --> 00:10:11,779
error message of invalid XML which

222
00:10:08,389 --> 00:10:15,189
pretty much told me the what I would it

223
00:10:11,779 --> 00:10:15,189
was expecting wasn't there in the file

224
00:10:16,209 --> 00:10:22,880
and then either I didn't have the

225
00:10:21,170 --> 00:10:24,170
response I didn't have like the the

226
00:10:22,880 --> 00:10:26,000
password file that I put in my payload

227
00:10:24,170 --> 00:10:27,110
in the response but I was able to

228
00:10:26,000 --> 00:10:29,839
eventually figure it out

229
00:10:27,110 --> 00:10:33,860
I don't get the context of the foul on

230
00:10:29,839 --> 00:10:36,230
my server so yeah it happens pretty

231
00:10:33,860 --> 00:10:38,689
often now well from what I see and that

232
00:10:36,230 --> 00:10:41,120
there are file uploads an API so this is

233
00:10:38,689 --> 00:10:46,730
definitely an interesting way to get our

234
00:10:41,120 --> 00:10:49,430
C's this was a case of SQL injection so

235
00:10:46,730 --> 00:10:52,339
some people think that there aren't as

236
00:10:49,430 --> 00:10:54,649
collections on API is that's not true it

237
00:10:52,339 --> 00:10:59,300
actually interacts with databases quite

238
00:10:54,649 --> 00:11:03,110
often this was a post request where it

239
00:10:59,300 --> 00:11:05,420
did a search within the database so I

240
00:11:03,110 --> 00:11:07,870
simply put in a single quote after my

241
00:11:05,420 --> 00:11:10,390
name since it was only like thing I

242
00:11:07,870 --> 00:11:14,500
guess letters

243
00:11:10,390 --> 00:11:17,500
in the response I got a nice error

244
00:11:14,500 --> 00:11:20,350
message which pretty much said missing

245
00:11:17,500 --> 00:11:23,470
my parent uses so from there I knew

246
00:11:20,350 --> 00:11:27,460
there was vulnerable and I just sent it

247
00:11:23,470 --> 00:11:29,260
on SQL map which did the job for me just

248
00:11:27,460 --> 00:11:32,080
to automate and make it easier and

249
00:11:29,260 --> 00:11:35,310
faster so as we can see he had found in

250
00:11:32,080 --> 00:11:38,830
two databases and I got the user and

251
00:11:35,310 --> 00:11:41,650
yeah so regular basic SQL injection here

252
00:11:38,830 --> 00:11:46,060
and from that one I actually found

253
00:11:41,650 --> 00:11:47,829
another endpoint on that same API which

254
00:11:46,060 --> 00:11:49,989
was also vulnerable

255
00:11:47,830 --> 00:11:52,510
this one was blind though so I there

256
00:11:49,990 --> 00:11:55,300
wasn't really much in the response so I

257
00:11:52,510 --> 00:11:57,970
looked up a bit of CVS for Oracle

258
00:11:55,300 --> 00:12:00,010
databases was my curiosity and I found

259
00:11:57,970 --> 00:12:02,470
this one which actually worked back in

260
00:12:00,010 --> 00:12:05,380
2014 so this is like a four year old CV

261
00:12:02,470 --> 00:12:10,270
that existed on the Russian production

262
00:12:05,380 --> 00:12:13,720
API so it's pretty much an X X C within

263
00:12:10,270 --> 00:12:16,960
an SQL injection as we can see here in

264
00:12:13,720 --> 00:12:19,390
my screenshot I sent the user that was

265
00:12:16,960 --> 00:12:23,920
being used by the database to my server

266
00:12:19,390 --> 00:12:25,960
and as we can see I did get it so this

267
00:12:23,920 --> 00:12:29,099
is an interesting way of another SQL

268
00:12:25,960 --> 00:12:29,100
injection on a on an API

269
00:12:32,339 --> 00:12:37,139
with logical bugs or others for more

270
00:12:36,180 --> 00:12:40,319
specifically for now

271
00:12:37,139 --> 00:12:44,879
I typically play with three different

272
00:12:40,319 --> 00:12:47,519
accounts if I have two organizations

273
00:12:44,879 --> 00:12:50,939
I use one account from one organizers

274
00:12:47,519 --> 00:12:53,579
and two users from another one just to

275
00:12:50,939 --> 00:12:57,269
test like within like within my same

276
00:12:53,579 --> 00:12:58,800
organization and also across or so cross

277
00:12:57,269 --> 00:13:01,410
organizers always like a bigger impact

278
00:12:58,800 --> 00:13:05,639
so it's nice to nice to test and usually

279
00:13:01,410 --> 00:13:09,149
bounties or better so it's so excited is

280
00:13:05,639 --> 00:13:11,839
trying to view modify and delete other

281
00:13:09,149 --> 00:13:16,050
users I mean I modify I mean like create

282
00:13:11,839 --> 00:13:19,199
edit you know regular regular stuff

283
00:13:16,050 --> 00:13:20,758
other users and information both like I

284
00:13:19,199 --> 00:13:24,120
said in the same organization and the

285
00:13:20,759 --> 00:13:28,009
cross organization also try to identify

286
00:13:24,120 --> 00:13:31,319
IDs through information leaks

287
00:13:28,009 --> 00:13:32,999
sometimes the IDS are like long new IDs

288
00:13:31,319 --> 00:13:36,120
which you can't really be broad forced

289
00:13:32,999 --> 00:13:38,300
and can be guests so if you get if you

290
00:13:36,120 --> 00:13:40,860
if you find some new IDs like this

291
00:13:38,300 --> 00:13:44,429
sometimes you can use those to get I

292
00:13:40,860 --> 00:13:46,649
doors and it's usually just by testing

293
00:13:44,429 --> 00:13:50,069
with two accounts you already know the

294
00:13:46,649 --> 00:13:54,059
UID so it doesn't really count but if

295
00:13:50,069 --> 00:13:55,920
you're able to leak some to to another

296
00:13:54,059 --> 00:13:59,759
request or something then that's then

297
00:13:55,920 --> 00:14:00,149
because interesting and also use burping

298
00:13:59,759 --> 00:14:03,740
shooter

299
00:14:00,149 --> 00:14:07,499
it's a great great tool to enumerate IDs

300
00:14:03,740 --> 00:14:09,540
I mean if you just simply guess an

301
00:14:07,499 --> 00:14:12,420
account let's say it's a four digit ID

302
00:14:09,540 --> 00:14:15,329
and you like let's say 1,000 you test

303
00:14:12,420 --> 00:14:18,329
1001 it might not work but if you test

304
00:14:15,329 --> 00:14:21,209
zero zero zero zero so let's say 2000

305
00:14:18,329 --> 00:14:22,888
then you might get something so just

306
00:14:21,209 --> 00:14:27,349
make sure you test as much as you can

307
00:14:22,889 --> 00:14:27,350
and not just like a simple guess

308
00:14:27,720 --> 00:14:33,639
and this is an example that I had not

309
00:14:30,339 --> 00:14:36,519
too long ago we can see here that in red

310
00:14:33,639 --> 00:14:39,220
I had an idea that was vulnerable this

311
00:14:36,519 --> 00:14:42,339
was this was a nine digit ID

312
00:14:39,220 --> 00:14:46,420
so pretty easy to to guess and to use

313
00:14:42,339 --> 00:14:49,800
with intruder from there I was able to

314
00:14:46,420 --> 00:14:52,360
see other users personal information I

315
00:14:49,800 --> 00:14:54,639
was able to see of course their account

316
00:14:52,360 --> 00:14:57,819
number which was the ID that was

317
00:14:54,639 --> 00:15:00,040
brute-forcing or using which using with

318
00:14:57,819 --> 00:15:02,229
the intruder I was able to get their

319
00:15:00,040 --> 00:15:04,449
phone number first name last name and

320
00:15:02,230 --> 00:15:07,899
email address as well as all of their

321
00:15:04,449 --> 00:15:09,399
subscribers again although their phone

322
00:15:07,899 --> 00:15:12,220
number first name last name email

323
00:15:09,399 --> 00:15:16,389
address so this was a big a big leak

324
00:15:12,220 --> 00:15:18,730
that I that I found so yeah there's I

325
00:15:16,389 --> 00:15:20,889
doors everywhere just make sure you test

326
00:15:18,730 --> 00:15:22,269
them as much as you can try to find as

327
00:15:20,889 --> 00:15:26,610
many eight points as you can so that you

328
00:15:22,269 --> 00:15:26,610
can test for for all I drove as possible

329
00:15:28,709 --> 00:15:33,660
so now I would privilege escalation it's

330
00:15:31,269 --> 00:15:37,660
pretty similar to what I just said

331
00:15:33,660 --> 00:15:40,209
except I do it a bit differently I use

332
00:15:37,660 --> 00:15:42,509
four separate accounts one admin and one

333
00:15:40,209 --> 00:15:48,609
user per organization if applicable

334
00:15:42,509 --> 00:15:50,980
obviously also on test cross core cross

335
00:15:48,610 --> 00:15:52,839
organization again so what I do is

336
00:15:50,980 --> 00:15:54,430
simply replace the admins authorization

337
00:15:52,839 --> 00:15:57,129
token with one belonging to the

338
00:15:54,430 --> 00:15:59,349
irregular low privileged user and do the

339
00:15:57,129 --> 00:16:02,139
same krauser krauser let's say with the

340
00:15:59,350 --> 00:16:06,939
user one I test if I can access admin

341
00:16:02,139 --> 00:16:09,309
twos admin to I'm in twos data so that

342
00:16:06,939 --> 00:16:13,540
this is usually a big big problem as

343
00:16:09,309 --> 00:16:15,100
well and now sometimes it's pretty rare

344
00:16:13,540 --> 00:16:17,199
but it does happen

345
00:16:15,100 --> 00:16:19,720
so obviously you touch changes as well

346
00:16:17,199 --> 00:16:23,139
try to access endpoints without any

347
00:16:19,720 --> 00:16:26,620
authorization token at all you can also

348
00:16:23,139 --> 00:16:28,240
use the burp extension authorized this

349
00:16:26,620 --> 00:16:30,929
is probably something you already know

350
00:16:28,240 --> 00:16:33,699
about but again as I strongly recommend

351
00:16:30,929 --> 00:16:37,350
using it's a great it's a great tool to

352
00:16:33,699 --> 00:16:37,349
use for producer legislation

353
00:16:39,580 --> 00:16:45,110
this was an endpoint that I found in

354
00:16:42,740 --> 00:16:48,830
JavaScript like as I said earlier make

355
00:16:45,110 --> 00:16:51,080
sure you you look for JavaScript you

356
00:16:48,830 --> 00:16:53,510
never know what you'll find in there

357
00:16:51,080 --> 00:16:55,670
oftentimes you can find any points which

358
00:16:53,510 --> 00:16:57,770
are pretty interesting so for this one

359
00:16:55,670 --> 00:16:59,930
there wasn't any other header there was

360
00:16:57,770 --> 00:17:04,310
needed at all so I simply created their

361
00:16:59,930 --> 00:17:07,970
request and here the request was I get a

362
00:17:04,310 --> 00:17:10,909
specific token and with that token I had

363
00:17:07,970 --> 00:17:13,550
access to pretty much the whole back-end

364
00:17:10,910 --> 00:17:15,230
on yet mint side or internal side so I

365
00:17:13,550 --> 00:17:18,319
had access to all of the data that users

366
00:17:15,230 --> 00:17:20,450
put in so again another p1 which was

367
00:17:18,319 --> 00:17:25,780
pretty easy just look at just reading at

368
00:17:20,450 --> 00:17:28,460
the JavaScript and last but not least

369
00:17:25,780 --> 00:17:30,230
sometimes if you finally gonna say you

370
00:17:28,460 --> 00:17:30,860
three or four I doors or let's say all

371
00:17:30,230 --> 00:17:32,930
p3s

372
00:17:30,860 --> 00:17:35,750
which we combine all of them together

373
00:17:32,930 --> 00:17:38,300
you'll get a p1 and let's say triple or

374
00:17:35,750 --> 00:17:42,050
could you pull the donkey so this was a

375
00:17:38,300 --> 00:17:43,909
case about a few months ago that I

376
00:17:42,050 --> 00:17:47,180
chained I doors to achieve it I can take

377
00:17:43,910 --> 00:17:51,740
over and at the same time in it leagues

378
00:17:47,180 --> 00:17:55,430
Pai and sometimes PCI so I had my first

379
00:17:51,740 --> 00:17:58,430
I adore this was again a nine digit ID

380
00:17:55,430 --> 00:18:02,420
which and the response revealed my

381
00:17:58,430 --> 00:18:05,360
victims email address this was a simple

382
00:18:02,420 --> 00:18:07,670
get request then the second gate request

383
00:18:05,360 --> 00:18:09,760
another ID or by using the victim's

384
00:18:07,670 --> 00:18:14,150
email address I was able to get their

385
00:18:09,760 --> 00:18:17,480
profiles UUID again another get request

386
00:18:14,150 --> 00:18:21,530
and then the third one was a put where

387
00:18:17,480 --> 00:18:24,020
by using their UUID which I got from my

388
00:18:21,530 --> 00:18:25,670
second ID or I was able to change their

389
00:18:24,020 --> 00:18:27,889
email address so I was once the closer

390
00:18:25,670 --> 00:18:30,770
of getting and I can't take over and

391
00:18:27,890 --> 00:18:32,300
then once that was done I had three

392
00:18:30,770 --> 00:18:34,820
options for you I can take over take

393
00:18:32,300 --> 00:18:37,550
over so a text message to phone number

394
00:18:34,820 --> 00:18:40,460
or either send in a recreation link or

395
00:18:37,550 --> 00:18:42,470
answer security questions the technical

396
00:18:40,460 --> 00:18:44,780
one was a bit hard so I can escape that

397
00:18:42,470 --> 00:18:47,030
one the inner regression League was a

398
00:18:44,780 --> 00:18:49,490
bit too easy and boring even though it

399
00:18:47,030 --> 00:18:50,990
worked I just like he was too easy so I

400
00:18:49,490 --> 00:18:52,320
had to figure out I'll just I'll use it

401
00:18:50,990 --> 00:18:54,240
but I'll go a bit

402
00:18:52,320 --> 00:18:57,529
so I tried to answer the security

403
00:18:54,240 --> 00:19:00,360
questions and so this was a post and

404
00:18:57,529 --> 00:19:03,600
here we can see I simply used postman

405
00:19:00,360 --> 00:19:04,979
for this one it was opposed to update

406
00:19:03,600 --> 00:19:07,590
the security questions so I simply

407
00:19:04,980 --> 00:19:13,769
updated it put anything in there

408
00:19:07,590 --> 00:19:16,049
anything as as the answers and there it

409
00:19:13,769 --> 00:19:17,999
wasn't verifying the previous answers of

410
00:19:16,049 --> 00:19:18,570
the questions so this was pretty bad on

411
00:19:17,999 --> 00:19:20,700
their side

412
00:19:18,570 --> 00:19:22,590
and also we can see here that it

413
00:19:20,700 --> 00:19:25,769
required the ID that I got from the

414
00:19:22,590 --> 00:19:27,779
first ID or so from there from there I

415
00:19:25,769 --> 00:19:29,429
was able to answer the questions and

416
00:19:27,779 --> 00:19:34,590
reset the password and take over

417
00:19:29,429 --> 00:19:38,240
anybody's account so yeah so make sure

418
00:19:34,590 --> 00:19:41,549
to test as much as you can for api's

419
00:19:38,240 --> 00:19:45,029
test all that points as possible fuzz

420
00:19:41,549 --> 00:19:47,759
all the keys and values you never know

421
00:19:45,029 --> 00:19:50,460
what you'll get any response try to

422
00:19:47,759 --> 00:19:52,830
automate it with intruder as well make

423
00:19:50,460 --> 00:19:55,259
sure you you look up github

424
00:19:52,830 --> 00:19:59,428
like I said Java scripts well sometimes

425
00:19:55,259 --> 00:20:02,039
Google doors to works and yeah so if you

426
00:19:59,429 --> 00:20:04,019
have any questions I'm available

427
00:20:02,039 --> 00:20:07,529
oh I haven't Abe's open on Twitter and

428
00:20:04,019 --> 00:20:09,259
on some slacks as well so thank you for

429
00:20:07,529 --> 00:20:11,389
listening

430
00:20:09,259 --> 00:20:15,629
awesome thanks jasmine

431
00:20:11,389 --> 00:20:18,469
so yeah it looks like we'll take we've

432
00:20:15,629 --> 00:20:24,509
got some time to take questions sure

433
00:20:18,470 --> 00:20:26,309
let's see if any have come in via looks

434
00:20:24,509 --> 00:20:28,919
like nothing on twitch yet but if you do

435
00:20:26,309 --> 00:20:32,340
have a question anyone feel free to

436
00:20:28,919 --> 00:20:34,980
throw them in the twitch chat or on on

437
00:20:32,340 --> 00:20:36,539
Twitter so we got two questions here

438
00:20:34,980 --> 00:20:39,029
firstly are you going to share the

439
00:20:36,539 --> 00:20:42,779
presentation slides yeah I can do that

440
00:20:39,029 --> 00:20:45,690
sir cool so yeah look for for Jasmine's

441
00:20:42,779 --> 00:20:49,080
Twitter he can tweet out you'll tweet

442
00:20:45,690 --> 00:20:52,799
out those slides at some point we got a

443
00:20:49,080 --> 00:20:56,840
question about have you ever found any

444
00:20:52,799 --> 00:20:59,789
race conditions by testing api's I

445
00:20:56,840 --> 00:21:02,009
haven't because I simply always forget

446
00:20:59,789 --> 00:21:05,000
to test it I started my end of my

447
00:21:02,009 --> 00:21:07,760
methodology actually yeah

448
00:21:05,000 --> 00:21:09,860
probably probably exists quite a little

449
00:21:07,760 --> 00:21:11,780
something I don't really like testing to

450
00:21:09,860 --> 00:21:13,039
be honest so I don't really test it but

451
00:21:11,780 --> 00:21:19,000
it's definitely something that you

452
00:21:13,039 --> 00:21:22,280
should test nice and see Nitesh Kumar

453
00:21:19,000 --> 00:21:25,030
asked do you have any books that you

454
00:21:22,280 --> 00:21:31,399
suggest people check out on this topic

455
00:21:25,030 --> 00:21:34,039
good questions I'm not sure if there are

456
00:21:31,400 --> 00:21:36,740
I've I don't think I've ever read a book

457
00:21:34,039 --> 00:21:38,059
on API hacking just all of everything

458
00:21:36,740 --> 00:21:41,150
that I've learned on that is pretty much

459
00:21:38,059 --> 00:21:43,370
with experience just by jumping in it

460
00:21:41,150 --> 00:21:46,400
and testing and trying as much stuff as

461
00:21:43,370 --> 00:21:50,059
I can but I can look it up of course if

462
00:21:46,400 --> 00:21:54,860
but I've never seen one to be honest

463
00:21:50,059 --> 00:21:58,789
nice nice our next presenter richard

464
00:21:54,860 --> 00:22:01,340
rushing just asked in the twitch chat do

465
00:21:58,789 --> 00:22:05,809
you find more bugs on servers or

466
00:22:01,340 --> 00:22:08,539
middleware api's you're supposed to time

467
00:22:05,809 --> 00:22:10,250
is middleware it's pretty I mean it

468
00:22:08,539 --> 00:22:21,850
happens on servers but also time it's on

469
00:22:10,250 --> 00:22:23,809
the middleware already cool so we can

470
00:22:21,850 --> 00:22:25,939
hang out

471
00:22:23,809 --> 00:22:28,039
let's see I'll check Twitter as well to

472
00:22:25,940 --> 00:22:31,820
see if we've got anything coming in and

473
00:22:28,039 --> 00:22:34,070
by the way everyone we've got a couple

474
00:22:31,820 --> 00:22:38,270
more talks to go for the rest of the day

475
00:22:34,070 --> 00:22:39,559
the next one is sec rich your hair

476
00:22:38,270 --> 00:22:41,900
richard rushing he's going to talk

477
00:22:39,559 --> 00:22:43,700
through his hacking toolkits and

478
00:22:41,900 --> 00:22:48,890
methodologies so it's an afternoon of

479
00:22:43,700 --> 00:22:50,690
hacking methodologies all right let me

480
00:22:48,890 --> 00:22:51,500
look up to see if we've got any tweets

481
00:22:50,690 --> 00:22:54,130
for you jasmine

482
00:22:51,500 --> 00:22:54,130
sure

483
00:22:58,350 --> 00:23:06,299
like we do so yeah thanks so much

484
00:23:03,659 --> 00:23:08,940
Jasmine for everything today we really

485
00:23:06,299 --> 00:23:11,850
appreciate your time and sharing this

486
00:23:08,940 --> 00:23:16,080
presentation with everyone like I said

487
00:23:11,850 --> 00:23:19,129
earlier bugcrowd is in search of API

488
00:23:16,080 --> 00:23:21,928
hackers we have some really interesting

489
00:23:19,130 --> 00:23:24,409
challenging programs or challenging

490
00:23:21,929 --> 00:23:29,669
engagements that pop up with regards to

491
00:23:24,409 --> 00:23:32,129
API hacking and API testing so please do

492
00:23:29,669 --> 00:23:37,639
if you if you have that skill please go

493
00:23:32,129 --> 00:23:42,120
to bit ly / invites please that invites

494
00:23:37,639 --> 00:23:44,580
are sorry invites plz and that'll help

495
00:23:42,120 --> 00:23:48,649
you get some invites into some API

496
00:23:44,580 --> 00:23:50,879
hacking engagements at bugcrowd

497
00:23:48,649 --> 00:23:52,709
so anyways thanks so much Jasmine I

498
00:23:50,879 --> 00:23:54,719
really appreciate your time and I hope

499
00:23:52,710 --> 00:23:57,409
you have a good day man tooks

500
00:23:54,720 --> 00:23:57,409
nice all the guys

