1
00:00:00,979 --> 00:00:10,860
hello I'm gonna make a quick demo this

2
00:00:07,140 --> 00:00:12,300
was not supposed to be a talk but it's

3
00:00:10,860 --> 00:00:15,389
kind of an extension of the previous

4
00:00:12,300 --> 00:00:17,100
talk from our two children it is

5
00:00:15,389 --> 00:00:19,470
basically to show the new features in

6
00:00:17,100 --> 00:00:25,189
panels mode also integration with

7
00:00:19,470 --> 00:00:25,189
procedure or the compilers by itself I

8
00:00:26,480 --> 00:00:34,160
confer two children or two that have it

9
00:00:29,130 --> 00:00:37,680
now if it's not in here but basically

10
00:00:34,160 --> 00:00:39,599
when you load the binary right now we

11
00:00:37,680 --> 00:00:44,250
had the visual mode which is a uppercase

12
00:00:39,600 --> 00:00:46,379
B but if you use the lowercase B you

13
00:00:44,250 --> 00:00:48,180
will get into the panel's mode you can

14
00:00:46,379 --> 00:00:52,649
use the exclamation mark to toggle

15
00:00:48,180 --> 00:00:55,620
between the visual mode and panels mode

16
00:00:52,649 --> 00:00:57,960
and when you're in panels mode well you

17
00:00:55,620 --> 00:00:59,699
can precise the thing and you can

18
00:00:57,960 --> 00:01:02,550
actually use the mouse I'm clicking

19
00:00:59,699 --> 00:01:05,729
in different panels you can see we can

20
00:01:02,550 --> 00:01:09,330
also click in the menus so we can pick

21
00:01:05,729 --> 00:01:11,340
different the compilers it's detecting

22
00:01:09,330 --> 00:01:15,360
all other compilers that are supported

23
00:01:11,340 --> 00:01:17,820
or install it as plug-ins in here we can

24
00:01:15,360 --> 00:01:19,890
change the settings also for example for

25
00:01:17,820 --> 00:01:23,220
the disassembly we want to change for

26
00:01:19,890 --> 00:01:25,890
example and toggle the bytes we can also

27
00:01:23,220 --> 00:01:30,090
close the panels by pressing the X and

28
00:01:25,890 --> 00:01:31,560
if we present click in the title we can

29
00:01:30,090 --> 00:01:33,600
actually change the contents of the type

30
00:01:31,560 --> 00:01:40,710
of the panel so for example we can use

31
00:01:33,600 --> 00:01:42,539
the D compiler in here so as long as the

32
00:01:40,710 --> 00:01:44,789
function is not analyzed the compiler is

33
00:01:42,540 --> 00:01:50,119
not working so I will just click in here

34
00:01:44,790 --> 00:01:50,119
and then analyze function

35
00:01:56,040 --> 00:02:00,250
so now we have the the compilation and

36
00:01:58,750 --> 00:02:03,210
the right side but as you can see this

37
00:02:00,250 --> 00:02:05,740
is the compiler of PDC which is the

38
00:02:03,210 --> 00:02:07,360
internal local pilot comes inside -

39
00:02:05,740 --> 00:02:09,639
which is not really a compiler just a

40
00:02:07,360 --> 00:02:12,220
cellulose assembler with some nice

41
00:02:09,639 --> 00:02:13,989
output but the output is not correct at

42
00:02:12,220 --> 00:02:16,630
all I mean it can be useful for having

43
00:02:13,990 --> 00:02:19,500
like an idea of what's going on here but

44
00:02:16,630 --> 00:02:25,390
it's not real compiler so as we can see

45
00:02:19,500 --> 00:02:32,470
we check into the we shall have now the

46
00:02:25,390 --> 00:02:34,359
PD D which is our - deck so we have PDC

47
00:02:32,470 --> 00:02:36,970
which is the phone that comes with our -

48
00:02:34,360 --> 00:02:38,709
you can see there are some reference to

49
00:02:36,970 --> 00:02:42,430
strings resistors names and a variable

50
00:02:38,709 --> 00:02:44,320
names function calls etc but you can see

51
00:02:42,430 --> 00:02:49,060
that this is not real something that you

52
00:02:44,320 --> 00:02:51,549
will expect to rely on so until now we

53
00:02:49,060 --> 00:02:53,709
had P D D which was the our to deck the

54
00:02:51,550 --> 00:02:55,630
compiler which is written in JavaScript

55
00:02:53,709 --> 00:02:58,630
and the output is quite nice but it's

56
00:02:55,630 --> 00:03:01,239
not removing the trash code or making

57
00:02:58,630 --> 00:03:03,489
many optimizations and on the output

58
00:03:01,239 --> 00:03:04,900
there is also support for red deck and

59
00:03:03,489 --> 00:03:08,830
there will be a talk later today about

60
00:03:04,900 --> 00:03:10,269
that but in order to show the different

61
00:03:08,830 --> 00:03:11,560
options that we have into the compiler

62
00:03:10,269 --> 00:03:13,269
and the waiting to create that into our

63
00:03:11,560 --> 00:03:16,180
- we'll see that there are some output

64
00:03:13,269 --> 00:03:19,239
some sub comments of the pd d and also

65
00:03:16,180 --> 00:03:21,340
it's also available in PDD which is for

66
00:03:19,239 --> 00:03:23,860
example the pd d o which shows the

67
00:03:21,340 --> 00:03:28,660
output of the fan of the the compiler

68
00:03:23,860 --> 00:03:32,280
next to the offset you can see the

69
00:03:28,660 --> 00:03:36,459
offset next to this assignment right and

70
00:03:32,280 --> 00:03:38,410
it will use PD G which is the leader of

71
00:03:36,459 --> 00:03:40,769
the compiler we can actually use the

72
00:03:38,410 --> 00:03:40,769
same thing

73
00:03:42,670 --> 00:03:46,030
was removed

74
00:03:48,800 --> 00:03:59,680
[Music]

75
00:03:51,690 --> 00:04:00,570
loop's was working in Bastion from

76
00:03:59,680 --> 00:04:04,780
joseline's

77
00:04:00,570 --> 00:04:06,670
so yeah let's pick the compiler and if

78
00:04:04,780 --> 00:04:11,520
we choose for example a pity speed he

79
00:04:06,670 --> 00:04:15,369
was working fine but we can change the

80
00:04:11,520 --> 00:04:18,220
contents with the output after the

81
00:04:15,370 --> 00:04:21,130
compiler we're going to enable the catch

82
00:04:18,220 --> 00:04:22,540
so the output of the so the contents of

83
00:04:21,130 --> 00:04:24,930
this panel will not be updated every

84
00:04:22,540 --> 00:04:27,160
time that we scroll or do whatever

85
00:04:24,930 --> 00:04:30,010
otherwise we'll be quite slow so we can

86
00:04:27,160 --> 00:04:39,390
resize the window and in here you can

87
00:04:30,010 --> 00:04:39,390
see the more effects

88
00:04:50,090 --> 00:04:54,090
you can actually click on things so you

89
00:04:52,260 --> 00:04:56,580
can for example highlight the register

90
00:04:54,090 --> 00:04:58,799
values which their names or instructions

91
00:04:56,580 --> 00:05:03,930
which is kind of handy if you want to

92
00:04:58,800 --> 00:05:10,620
analyze like different some pieces of

93
00:05:03,930 --> 00:05:13,560
assembly code so we know it's a code and

94
00:05:10,620 --> 00:05:15,030
here we can for example pick the

95
00:05:13,560 --> 00:05:16,500
different functions by just clicking at

96
00:05:15,030 --> 00:05:18,299
them in the offset we can use the mouse

97
00:05:16,500 --> 00:05:21,210
wheel to scroll around the panel and

98
00:05:18,300 --> 00:05:23,700
same goes for the author's the compiler

99
00:05:21,210 --> 00:05:27,419
so if I change the output of this panel

100
00:05:23,700 --> 00:05:29,039
to contain that PDD oh we will see that

101
00:05:27,420 --> 00:05:31,250
you get the output in there and we can

102
00:05:29,040 --> 00:05:33,300
actually change the view to the

103
00:05:31,250 --> 00:05:36,990
disassembly and we can scroll around you

104
00:05:33,300 --> 00:05:39,930
can see that the output is updated this

105
00:05:36,990 --> 00:05:41,790
function are kinds small and the auto to

106
00:05:39,930 --> 00:05:45,870
sketch so we can for example click in

107
00:05:41,790 --> 00:05:48,810
here close this panel and we can scroll

108
00:05:45,870 --> 00:05:50,400
around and you can see always the the

109
00:05:48,810 --> 00:05:53,460
output of the compiler so we can click

110
00:05:50,400 --> 00:05:55,650
in in the other panel and scoring there

111
00:05:53,460 --> 00:06:01,409
and you can actually highlight the

112
00:05:55,650 --> 00:06:05,330
different offsets and actually highlight

113
00:06:01,410 --> 00:06:05,330
the the same offset in the other side

114
00:06:05,930 --> 00:06:16,770
it's what's supposed to be working so

115
00:06:13,710 --> 00:06:18,659
yeah so that's more or less the new

116
00:06:16,770 --> 00:06:25,590
features that are coming in in too and

117
00:06:18,660 --> 00:06:27,600
also a no wait integrator the compiler

118
00:06:25,590 --> 00:06:30,359
output inside r2 is that even Eliza

119
00:06:27,600 --> 00:06:34,620
function and we integrate the output of

120
00:06:30,360 --> 00:06:37,800
the compiler of the function inside as

121
00:06:34,620 --> 00:06:39,360
inside the r2 with comments we can go

122
00:06:37,800 --> 00:06:41,910
into this whole mode for example and in

123
00:06:39,360 --> 00:06:44,910
the disassembly we like we can we can

124
00:06:41,910 --> 00:06:47,340
see that the right side the auto the

125
00:06:44,910 --> 00:06:51,330
compiler is that as common as comments

126
00:06:47,340 --> 00:06:52,830
so we can press a hash and then it

127
00:06:51,330 --> 00:06:54,240
basically removes although it's assembly

128
00:06:52,830 --> 00:06:56,400
on offsets and we see that the compiler

129
00:06:54,240 --> 00:06:59,460
output in the disassembled you so you

130
00:06:56,400 --> 00:07:01,679
have like all the gen lines and all the

131
00:06:59,460 --> 00:07:03,270
control flow graph and so on also

132
00:07:01,680 --> 00:07:03,880
working with the output of the compiler

133
00:07:03,270 --> 00:07:08,440
so you

134
00:07:03,880 --> 00:07:10,330
use the output of the compiler with with

135
00:07:08,440 --> 00:07:12,969
the output of the in the graph B or into

136
00:07:10,330 --> 00:07:15,599
this assembly view and you can just

137
00:07:12,970 --> 00:07:25,900
basically toggle that we're using the

138
00:07:15,600 --> 00:07:28,810
hash key okay so that's a quick overview

139
00:07:25,900 --> 00:07:32,590
on how to use at least today I cannot

140
00:07:28,810 --> 00:07:35,650
reach it inside there - and what are the

141
00:07:32,590 --> 00:07:39,729
new features of panels mode in the last

142
00:07:35,650 --> 00:07:41,560
version for Alfred - so no let's start

143
00:07:39,730 --> 00:07:43,680
with the next talk which were starting

144
00:07:41,560 --> 00:07:46,770
it's in two minutes

145
00:07:43,680 --> 00:07:46,770
thank you

