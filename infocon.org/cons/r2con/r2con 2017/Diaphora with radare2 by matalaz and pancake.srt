1
00:00:00,120 --> 00:00:05,720
we are going to<font color="#E5E5E5"> talk I will first talk</font>

2
00:00:03,060 --> 00:00:09,059
about what is<font color="#E5E5E5"> the</font><font color="#CCCCCC"> ephra</font><font color="#E5E5E5"> habit</font><font color="#CCCCCC"> wars</font><font color="#E5E5E5"> and</font>

3
00:00:05,720 --> 00:00:11,639
why<font color="#E5E5E5"> I</font><font color="#CCCCCC"> groped</font><font color="#E5E5E5"> it back in the deck</font>

4
00:00:09,059 --> 00:00:14,309
<font color="#E5E5E5">and then pancake wheels playing what</font>

5
00:00:11,639 --> 00:00:17,279
were the problems on<font color="#CCCCCC"> what's hurt</font><font color="#E5E5E5"> in this</font>

6
00:00:14,309 --> 00:00:21,240
case that<font color="#E5E5E5"> can be used with regard the</font>

7
00:00:17,279 --> 00:00:23,970
affero<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> so it's an</font><font color="#CCCCCC"> open-source</font><font color="#E5E5E5"> GPL</font>

8
00:00:21,240 --> 00:00:27,419
<font color="#E5E5E5">pro yet it is more than anything focuses</font>

9
00:00:23,970 --> 00:00:29,250
on Pat's detail for example<font color="#CCCCCC"> finding how</font>

10
00:00:27,420 --> 00:00:32,160
about<font color="#CCCCCC"> boner</font><font color="#E5E5E5"> ability was fixed in a</font>

11
00:00:29,250 --> 00:00:33,750
<font color="#E5E5E5">closed source product also for porting</font>

12
00:00:32,159 --> 00:00:36,750
symbols between different<font color="#CCCCCC"> either</font>

13
00:00:33,750 --> 00:00:40,230
databases this is<font color="#CCCCCC"> the second main</font>

14
00:00:36,750 --> 00:00:42,090
scenario why I<font color="#E5E5E5"> grow testicle and also</font>

15
00:00:40,230 --> 00:00:45,059
for finding<font color="#E5E5E5"> new functionality in our</font>

16
00:00:42,090 --> 00:00:47,789
closest source product<font color="#CCCCCC"> plugins to the</font>

17
00:00:45,059 --> 00:00:51,059
<font color="#CCCCCC">suti</font><font color="#E5E5E5"> on there are many</font><font color="#CCCCCC"> use case</font><font color="#E5E5E5"> so</font>

18
00:00:47,789 --> 00:00:53,070
basically<font color="#CCCCCC"> I write I brought it myself</font>

19
00:00:51,059 --> 00:00:55,199
<font color="#CCCCCC">back in the</font><font color="#E5E5E5"> day because dynamics been</font>

20
00:00:53,070 --> 00:00:59,030
<font color="#E5E5E5">live which was the tool that</font><font color="#CCCCCC"> I use it to</font>

21
00:00:55,199 --> 00:01:01,920
use the<font color="#CCCCCC"> most for</font><font color="#E5E5E5"> this kinds of things</font>

22
00:00:59,030 --> 00:01:03,780
<font color="#E5E5E5">was an support Google</font><font color="#CCCCCC"> both</font><font color="#E5E5E5"> the</font>

23
00:01:01,920 --> 00:01:07,159
<font color="#CCCCCC">companyís dynamics and they didn't</font>

24
00:01:03,780 --> 00:01:09,479
<font color="#CCCCCC">continually</font><font color="#E5E5E5"> support in it anymore</font>

25
00:01:07,159 --> 00:01:10,729
well the slides don't<font color="#E5E5E5"> look right there</font>

26
00:01:09,479 --> 00:01:14,220
okay

27
00:01:10,729 --> 00:01:14,548
I will skip this part<font color="#E5E5E5"> because it doesn't</font>

28
00:01:14,220 --> 00:01:17,520
matter

29
00:01:14,549 --> 00:01:20,220
so the internals<font color="#E5E5E5"> basically the áfourá</font>

30
00:01:17,520 --> 00:01:22,770
simply does the following<font color="#CCCCCC"> export the</font>

31
00:01:20,220 --> 00:01:26,070
world<font color="#E5E5E5"> rather right now or either</font>

32
00:01:22,770 --> 00:01:28,560
database to my own invented<font color="#E5E5E5"> SQLite or</font>

33
00:01:26,070 --> 00:01:30,779
format<font color="#E5E5E5"> then it compares all the</font>

34
00:01:28,560 --> 00:01:33,240
artifacts<font color="#CCCCCC"> the things that I instruct for</font>

35
00:01:30,780 --> 00:01:37,229
its function from its binary<font color="#E5E5E5"> that we</font>

36
00:01:33,240 --> 00:01:40,289
<font color="#E5E5E5">analyze it and then</font><font color="#CCCCCC"> issue SQL queries</font>

37
00:01:37,229 --> 00:01:42,479
<font color="#CCCCCC">they asked to determine how similar they</font>

38
00:01:40,290 --> 00:01:47,280
are or to find some matches between two

39
00:01:42,479 --> 00:01:50,820
databases or more databases<font color="#CCCCCC"> but</font><font color="#E5E5E5"> boom</font>

40
00:01:47,280 --> 00:01:54,060
for now<font color="#CCCCCC"> if</font><font color="#E5E5E5"> you won't use the F or F or</font>

41
00:01:50,820 --> 00:01:55,048
bats analyses for<font color="#E5E5E5"> that's defeating or us</font>

42
00:01:54,060 --> 00:01:58,049
you<font color="#E5E5E5"> want to call it</font>

43
00:01:55,049 --> 00:02:01,640
unified UI something that is not how

44
00:01:58,049 --> 00:02:04,170
well<font color="#E5E5E5"> integrate that right now rather so</font>

45
00:02:01,640 --> 00:02:07,950
for now if you<font color="#E5E5E5"> want to see the results</font>

46
00:02:04,170 --> 00:02:10,140
you<font color="#E5E5E5"> have</font><font color="#CCCCCC"> to use either so how it works</font>

47
00:02:07,950 --> 00:02:12,840
<font color="#CCCCCC">when we are talking about the sporting</font>

48
00:02:10,139 --> 00:02:13,769
<font color="#CCCCCC">it is real in its phantom in</font><font color="#E5E5E5"> the</font>

49
00:02:12,840 --> 00:02:16,020
database

50
00:02:13,770 --> 00:02:18,540
and then all their<font color="#CCCCCC"> attributes like</font><font color="#E5E5E5"> the</font>

51
00:02:16,020 --> 00:02:21,300
<font color="#E5E5E5">flags the prototype relative</font><font color="#CCCCCC"> addresses</font>

52
00:02:18,540 --> 00:02:24,780
number of basic looks<font color="#CCCCCC"> add stuff</font><font color="#E5E5E5"> stuff</font>

53
00:02:21,300 --> 00:02:27,450
stuff<font color="#CCCCCC"> our</font><font color="#E5E5E5"> recorders all basic blocks and</font>

54
00:02:24,780 --> 00:02:29,550
their attributes<font color="#CCCCCC"> the instructions and</font>

55
00:02:27,450 --> 00:02:31,709
their relative attributes of<font color="#E5E5E5"> its</font>

56
00:02:29,550 --> 00:02:34,620
instruction and many more<font color="#E5E5E5"> of</font><font color="#CCCCCC"> the data</font>

57
00:02:31,710 --> 00:02:37,500
<font color="#E5E5E5">like</font><font color="#CCCCCC"> for example the Civil Code or the</font>

58
00:02:34,620 --> 00:02:39,570
<font color="#E5E5E5">AES the abstract syntax tree in case</font>

59
00:02:37,500 --> 00:02:44,030
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you are</font><font color="#E5E5E5"> using you have the compiler</font>

60
00:02:39,570 --> 00:02:46,920
of<font color="#E5E5E5"> its fancy on</font><font color="#CCCCCC"> its each receipt receipt</font>

61
00:02:44,030 --> 00:02:49,440
then for this<font color="#CCCCCC"> fancy on or basic block</font>

62
00:02:46,920 --> 00:02:53,010
and<font color="#E5E5E5"> social information</font><font color="#CCCCCC"> is calculated</font><font color="#E5E5E5"> not</font>

63
00:02:49,440 --> 00:02:54,780
yes<font color="#CCCCCC"> strattice like a</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> bases on the</font>

64
00:02:53,010 --> 00:02:57,840
<font color="#E5E5E5">bytes</font><font color="#CCCCCC"> the notation bytes</font><font color="#E5E5E5"> of each</font>

65
00:02:54,780 --> 00:03:00,390
instruction<font color="#E5E5E5"> like if we have a say lamp</font>

66
00:02:57,840 --> 00:03:02,490
<font color="#E5E5E5">that is relative</font><font color="#CCCCCC"> for the staff we will</font>

67
00:03:00,390 --> 00:03:04,649
<font color="#E5E5E5">have a debate code for the lamp and then</font>

68
00:03:02,490 --> 00:03:06,780
I won't rip out<font color="#E5E5E5"> remove all the bytes</font>

69
00:03:04,650 --> 00:03:09,300
that are<font color="#E5E5E5"> changing because</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are</font>

70
00:03:06,780 --> 00:03:12,320
relatives or it's not a relative<font color="#E5E5E5"> but a</font>

71
00:03:09,300 --> 00:03:14,910
fix of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> important alike that</font>

72
00:03:12,320 --> 00:03:18,209
for example the cyclomatic complexity

73
00:03:14,910 --> 00:03:21,420
which is an<font color="#CCCCCC"> issue used to determine how</font>

74
00:03:18,209 --> 00:03:23,280
complex looks like a function the

75
00:03:21,420 --> 00:03:27,239
strongly<font color="#CCCCCC"> connected components of the</font>

76
00:03:23,280 --> 00:03:29,280
program<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is a graph</font><font color="#CCCCCC"> basic theory the</font>

77
00:03:27,240 --> 00:03:32,370
topological sort of the flow graph<font color="#E5E5E5"> the</font>

78
00:03:29,280 --> 00:03:36,000
ND index and all the things related<font color="#E5E5E5"> to</font>

79
00:03:32,370 --> 00:03:37,800
<font color="#E5E5E5">the graph the small</font><font color="#CCCCCC"> primes product for</font>

80
00:03:36,000 --> 00:03:39,840
<font color="#CCCCCC">its</font><font color="#E5E5E5"> strongly connected components I will</font>

81
00:03:37,800 --> 00:03:43,530
explain a bit<font color="#CCCCCC"> later what is a small</font>

82
00:03:39,840 --> 00:03:45,840
prime product as well at a set of<font color="#CCCCCC"> three</font>

83
00:03:43,530 --> 00:03:49,410
<font color="#CCCCCC">FASTA classes</font><font color="#E5E5E5"> of the rows</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> close</font>

84
00:03:45,840 --> 00:03:52,410
<font color="#CCCCCC">tags another</font><font color="#E5E5E5"> fatty Haas that I invented</font>

85
00:03:49,410 --> 00:03:54,720
myself<font color="#E5E5E5"> basis on the Astra's industry</font>

86
00:03:52,410 --> 00:03:56,700
<font color="#E5E5E5">supposing that we have at the compiler</font>

87
00:03:54,720 --> 00:04:01,230
and many other<font color="#E5E5E5"> things that are</font>

88
00:03:56,700 --> 00:04:02,790
<font color="#E5E5E5">calculated so as I said for its database</font>

89
00:04:01,230 --> 00:04:06,660
the following<font color="#CCCCCC"> information</font><font color="#E5E5E5"> is calculated</font>

90
00:04:02,790 --> 00:04:08,970
and also<font color="#CCCCCC"> a fuzzy</font><font color="#E5E5E5"> Cobra has basis on the</font>

91
00:04:06,660 --> 00:04:10,950
small<font color="#E5E5E5"> Prime's product of its</font><font color="#CCCCCC"> fancy on</font>

92
00:04:08,970 --> 00:04:13,859
cyclomatic complexity<font color="#E5E5E5"> yeah I know it is</font>

93
00:04:10,950 --> 00:04:15,450
<font color="#CCCCCC">not very easy to understand</font><font color="#E5E5E5"> so for this</font>

94
00:04:13,860 --> 00:04:18,000
<font color="#CCCCCC">twenty on I calculate the cyclomatic</font>

95
00:04:15,450 --> 00:04:19,950
complexity how complex it looks<font color="#CCCCCC"> is</font>

96
00:04:18,000 --> 00:04:23,700
simply<font color="#E5E5E5"> will reach on a value like five</font>

97
00:04:19,950 --> 00:04:25,260
<font color="#E5E5E5">zero to ten twenty whatever and then for</font>

98
00:04:23,700 --> 00:04:27,330
its<font color="#E5E5E5"> fancy</font><font color="#CCCCCC"> on what I</font><font color="#E5E5E5"> call the small</font>

99
00:04:25,260 --> 00:04:30,150
<font color="#E5E5E5">Prime's product is the pen</font>

100
00:04:27,330 --> 00:04:32,580
the<font color="#CCCCCC"> fancy on concealer Matic complexity</font>

101
00:04:30,150 --> 00:04:36,568
that<font color="#CCCCCC"> I assigns</font><font color="#E5E5E5"> let's say that it is</font><font color="#CCCCCC"> 5 I</font>

102
00:04:32,580 --> 00:04:38,698
take that 5 th prime number<font color="#E5E5E5"> and then all</font>

103
00:04:36,569 --> 00:04:41,099
the prime numbers of all the<font color="#CCCCCC"> phantoms</font>

104
00:04:38,699 --> 00:04:45,210
are multiplied together and that's very

105
00:04:41,099 --> 00:04:50,490
big number is the<font color="#E5E5E5"> has for the Cole graph</font>

106
00:04:45,210 --> 00:04:52,289
what I<font color="#E5E5E5"> call a small price</font><font color="#CCCCCC"> pros has this</font>

107
00:04:50,490 --> 00:04:55,020
<font color="#E5E5E5">is</font><font color="#CCCCCC"> useful for example</font><font color="#E5E5E5"> when you don't</font>

108
00:04:52,289 --> 00:04:57,568
want to do comparisons<font color="#CCCCCC"> phantom4</font><font color="#E5E5E5"> function</font>

109
00:04:55,020 --> 00:04:59,549
so you<font color="#CCCCCC"> just</font><font color="#E5E5E5"> compared the last half so</font>

110
00:04:57,569 --> 00:05:02,719
<font color="#E5E5E5">you can determine if structurally the</font>

111
00:04:59,550 --> 00:05:08,580
binaries<font color="#CCCCCC"> look pretty much the</font><font color="#E5E5E5"> same</font>

112
00:05:02,719 --> 00:05:11,069
okay so comparisons<font color="#E5E5E5"> um when we have two</font>

113
00:05:08,580 --> 00:05:14,159
<font color="#CCCCCC">databases that are sports from NIDA</font><font color="#E5E5E5"> or</font>

114
00:05:11,069 --> 00:05:16,530
rod<font color="#E5E5E5"> art the rescue light</font><font color="#CCCCCC"> format the</font>

115
00:05:14,159 --> 00:05:19,199
three thunderstorm idea for SQL queries

116
00:05:16,530 --> 00:05:21,719
are launched<font color="#E5E5E5"> faint function matches the</font>

117
00:05:19,199 --> 00:05:25,229
SQL queries<font color="#CCCCCC"> Lance try to match it's</font><font color="#E5E5E5"> not</font>

118
00:05:21,719 --> 00:05:28,050
arguments<font color="#CCCCCC"> are not artifacts as possible</font>

119
00:05:25,229 --> 00:05:32,639
using<font color="#E5E5E5"> different heuristics as of today</font>

120
00:05:28,050 --> 00:05:34,710
we have like 49 heuristics I think first

121
00:05:32,639 --> 00:05:37,830
I learned<font color="#E5E5E5"> the most from</font><font color="#CCCCCC"> proposed</font><font color="#E5E5E5"> ones</font>

122
00:05:34,710 --> 00:05:41,159
the ones that generate<font color="#E5E5E5"> less false</font>

123
00:05:37,830 --> 00:05:45,300
positive numbers<font color="#CCCCCC"> and then I continually</font>

124
00:05:41,159 --> 00:05:48,779
<font color="#CCCCCC">launch</font><font color="#E5E5E5"> in the less reliable ones for its</font>

125
00:05:45,300 --> 00:05:51,360
match<font color="#E5E5E5"> a</font><font color="#CCCCCC"> similarity ratio like 0.1 or</font>

126
00:05:48,779 --> 00:05:53,520
reliable<font color="#E5E5E5"> zero point nine nine nine nine</font>

127
00:05:51,360 --> 00:05:56,339
nine nine nine<font color="#E5E5E5"> very reliable is</font>

128
00:05:53,520 --> 00:05:58,948
calculated for the<font color="#E5E5E5"> mats</font><font color="#CCCCCC"> and then they</font>

129
00:05:56,339 --> 00:06:02,009
are<font color="#CCCCCC"> latter Louis's</font><font color="#E5E5E5"> later best party</font><font color="#CCCCCC"> L</font><font color="#E5E5E5"> or</font>

130
00:05:58,949 --> 00:06:03,990
<font color="#E5E5E5">unreliable unfortunately yet</font><font color="#CCCCCC"> as of today</font>

131
00:06:02,009 --> 00:06:05,729
we cannot see the results with a<font color="#E5E5E5"> rather</font>

132
00:06:03,990 --> 00:06:08,789
because we still<font color="#CCCCCC"> don't have an</font>

133
00:06:05,729 --> 00:06:11,960
independent<font color="#E5E5E5"> GUI so if you want to see</font>

134
00:06:08,789 --> 00:06:16,800
<font color="#CCCCCC">results</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> to use side up for now</font>

135
00:06:11,960 --> 00:06:18,479
so as I<font color="#E5E5E5"> said oh no 49 47 anyway some of</font>

136
00:06:16,800 --> 00:06:19,199
<font color="#CCCCCC">the dualistic so you can get an idea is</font>

137
00:06:18,479 --> 00:06:21,900
for<font color="#CCCCCC"> example</font>

138
00:06:19,199 --> 00:06:24,270
equal or similar assembly or<font color="#E5E5E5"> she'll the</font>

139
00:06:21,900 --> 00:06:26,310
calls<font color="#E5E5E5"> both raw and</font><font color="#CCCCCC"> Korean SAP with</font>

140
00:06:24,270 --> 00:06:28,318
<font color="#CCCCCC">cleanest</font><font color="#E5E5E5"> hat</font><font color="#CCCCCC"> I mean like when we</font><font color="#E5E5E5"> are</font>

141
00:06:26,310 --> 00:06:30,270
<font color="#E5E5E5">calling upon</font><font color="#CCCCCC"> T on that we</font><font color="#E5E5E5"> don't know I</font>

142
00:06:28,319 --> 00:06:34,050
simply<font color="#E5E5E5"> remove the name of the</font><font color="#CCCCCC"> phantom</font>

143
00:06:30,270 --> 00:06:35,580
<font color="#E5E5E5">and it doesn't matter if the number</font><font color="#CCCCCC"> of</font>

144
00:06:34,050 --> 00:06:37,589
<font color="#E5E5E5">the name of the font is that are</font>

145
00:06:35,580 --> 00:06:40,080
wrinkled are different<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> sale the</font>

146
00:06:37,589 --> 00:06:40,740
code or the<font color="#E5E5E5"> assembler is actually the</font>

147
00:06:40,080 --> 00:06:42,990
same

148
00:06:40,740 --> 00:06:45,860
removing the parts that are variable<font color="#CCCCCC"> it</font>

149
00:06:42,990 --> 00:06:49,620
says that the<font color="#CCCCCC"> phantoms look very similar</font>

150
00:06:45,860 --> 00:06:52,440
<font color="#CCCCCC">but -</font><font color="#E5E5E5"> names the same phantom name</font>

151
00:06:49,620 --> 00:06:55,650
<font color="#E5E5E5">specifically especially useful for - in</font>

152
00:06:52,440 --> 00:06:57,630
a patsy different<font color="#E5E5E5"> although</font><font color="#CCCCCC"> most</font>

153
00:06:55,650 --> 00:06:59,969
attributes from the<font color="#E5E5E5"> pantheon if we have</font>

154
00:06:57,630 --> 00:07:02,090
<font color="#CCCCCC">like say a sortie attributes that we</font>

155
00:06:59,970 --> 00:07:04,560
calculate or<font color="#CCCCCC"> strike for an expansion</font><font color="#E5E5E5"> and</font>

156
00:07:02,090 --> 00:07:08,068
27<font color="#E5E5E5"> of them are actually the</font><font color="#CCCCCC"> same we can</font>

157
00:07:04,560 --> 00:07:12,270
<font color="#E5E5E5">most I think concludes that</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> it's</font>

158
00:07:08,069 --> 00:07:16,440
<font color="#CCCCCC">math same address note some primes</font>

159
00:07:12,270 --> 00:07:18,270
<font color="#E5E5E5">that's it the instructions it doesn't</font>

160
00:07:16,440 --> 00:07:20,699
matter if they are<font color="#E5E5E5"> reorders or not</font><font color="#CCCCCC"> are</font>

161
00:07:18,270 --> 00:07:22,289
<font color="#E5E5E5">actually the same in both phantoms so we</font>

162
00:07:20,699 --> 00:07:25,560
know that<font color="#CCCCCC"> it is actually</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same</font>

163
00:07:22,289 --> 00:07:28,020
<font color="#E5E5E5">phantom import name has of its complex</font>

164
00:07:25,560 --> 00:07:31,470
<font color="#CCCCCC">explain so the code a fatty glasses and</font>

165
00:07:28,020 --> 00:07:34,099
<font color="#E5E5E5">thus a loser cause fatty</font><font color="#CCCCCC"> AST has has</font>

166
00:07:31,470 --> 00:07:36,930
<font color="#E5E5E5">that is fuzzy so it causes collisions</font>

167
00:07:34,099 --> 00:07:42,300
<font color="#E5E5E5">bases on</font><font color="#CCCCCC"> the Astra's industry supporting</font>

168
00:07:36,930 --> 00:07:44,430
that we have the compiler<font color="#E5E5E5"> okay then as I</font>

169
00:07:42,300 --> 00:07:46,979
said<font color="#E5E5E5"> for its match that the SQL curious</font>

170
00:07:44,430 --> 00:07:49,139
gift<font color="#E5E5E5"> a similarity radius calculators for</font>

171
00:07:46,979 --> 00:07:51,870
metals<font color="#CCCCCC"> but in the screen we</font><font color="#E5E5E5"> can only see</font>

172
00:07:49,139 --> 00:07:54,870
<font color="#E5E5E5">three I am so trust me</font><font color="#CCCCCC"> when I told you</font>

173
00:07:51,870 --> 00:07:58,710
the<font color="#CCCCCC"> last one</font><font color="#E5E5E5"> so basically</font><font color="#CCCCCC"> I do a quick</font>

174
00:07:54,870 --> 00:08:00,479
ratio matching of the<font color="#E5E5E5"> silver calls and</font>

175
00:07:58,710 --> 00:08:04,590
making<font color="#E5E5E5"> the assembler of both functions</font>

176
00:08:00,479 --> 00:08:08,490
<font color="#E5E5E5">and I get an issue like 0.1 or 0.9999</font>

177
00:08:04,590 --> 00:08:10,109
<font color="#E5E5E5">whatever the same but cleaning after the</font>

178
00:08:08,490 --> 00:08:12,180
<font color="#E5E5E5">silver calls or cleaning</font><font color="#CCCCCC"> nabbed</font>

179
00:08:10,110 --> 00:08:13,800
assembler<font color="#E5E5E5"> as I previously</font><font color="#CCCCCC"> says if you</font>

180
00:08:12,180 --> 00:08:15,509
have for example in the silicon

181
00:08:13,800 --> 00:08:17,520
variables for phantom names<font color="#E5E5E5"> I simply</font>

182
00:08:15,509 --> 00:08:20,699
remove the names<font color="#E5E5E5"> I don't care about them</font>

183
00:08:17,520 --> 00:08:22,919
and<font color="#E5E5E5"> it will have variables or offsets or</font>

184
00:08:20,699 --> 00:08:26,789
whatever<font color="#E5E5E5"> I remove the names so what we</font>

185
00:08:22,919 --> 00:08:29,068
are comparing<font color="#E5E5E5"> is out of variable names</font>

186
00:08:26,789 --> 00:08:32,458
<font color="#E5E5E5">phantom names of those names whatever</font>

187
00:08:29,069 --> 00:08:34,620
and we can pretty much compare and out

188
00:08:32,458 --> 00:08:37,169
<font color="#E5E5E5">and I do the same again a quick ratio</font>

189
00:08:34,620 --> 00:08:41,070
<font color="#CCCCCC">calculator</font><font color="#E5E5E5"> that will give me a value</font>

190
00:08:37,169 --> 00:08:43,260
between<font color="#E5E5E5"> 0 and 1 then the different ratio</font>

191
00:08:41,070 --> 00:08:45,600
<font color="#E5E5E5">basis on the small</font><font color="#CCCCCC"> brain produce</font><font color="#E5E5E5"> again</font>

192
00:08:43,260 --> 00:08:49,770
<font color="#E5E5E5">of the abstract syntax tree in case that</font>

193
00:08:45,600 --> 00:08:52,690
<font color="#E5E5E5">we have the the compiler and</font><font color="#CCCCCC"> the last</font>

194
00:08:49,770 --> 00:08:55,780
one is the<font color="#E5E5E5"> MD</font><font color="#CCCCCC"> index the MD in</font>

195
00:08:52,690 --> 00:08:57,850
<font color="#CCCCCC">Dix is</font><font color="#E5E5E5"> an index generators for flow</font>

196
00:08:55,780 --> 00:09:01,150
graphs<font color="#CCCCCC"> that was invented</font><font color="#E5E5E5"> back in the day</font>

197
00:08:57,850 --> 00:09:07,840
by<font color="#CCCCCC"> la carrera overalls hover flake and</font>

198
00:09:01,150 --> 00:09:09,459
stuff oh yeah<font color="#E5E5E5"> it was here okay</font><font color="#CCCCCC"> so</font>

199
00:09:07,840 --> 00:09:12,430
<font color="#E5E5E5">according the right here the Mets are</font>

200
00:09:09,460 --> 00:09:16,150
<font color="#E5E5E5">Grove in a set of a the best</font><font color="#CCCCCC"> party L or</font>

201
00:09:12,430 --> 00:09:18,520
<font color="#CCCCCC">and reliable results party result and</font>

202
00:09:16,150 --> 00:09:21,699
<font color="#CCCCCC">others that that</font><font color="#E5E5E5"> have a similarity ratio</font>

203
00:09:18,520 --> 00:09:26,370
bigger or equal<font color="#E5E5E5"> to 0.5 and</font><font color="#CCCCCC"> if</font><font color="#E5E5E5"> in Bello</font>

204
00:09:21,700 --> 00:09:29,220
is either<font color="#CCCCCC"> partial or</font><font color="#E5E5E5"> unreliable</font>

205
00:09:26,370 --> 00:09:33,460
heuristics<font color="#E5E5E5"> I will briefly explain some</font>

206
00:09:29,220 --> 00:09:35,260
heuristics<font color="#CCCCCC"> as fabulous ace there are</font>

207
00:09:33,460 --> 00:09:37,180
many many many many<font color="#CCCCCC"> you</font><font color="#E5E5E5"> do stick just by</font>

208
00:09:35,260 --> 00:09:41,110
the for us all<font color="#E5E5E5"> of them are very simpler</font>

209
00:09:37,180 --> 00:09:43,390
others are not that simple<font color="#CCCCCC"> Sullivan are</font>

210
00:09:41,110 --> 00:09:45,100
very reliable<font color="#CCCCCC"> like for example getting</font>

211
00:09:43,390 --> 00:09:47,199
<font color="#E5E5E5">all the bytes from</font><font color="#CCCCCC"> a front Ian if you</font>

212
00:09:45,100 --> 00:09:49,690
<font color="#CCCCCC">have a math one per one with a big font</font>

213
00:09:47,200 --> 00:09:53,020
<font color="#E5E5E5">on an old by its</font><font color="#CCCCCC"> mat it</font><font color="#E5E5E5"> is a perfect</font>

214
00:09:49,690 --> 00:09:55,990
<font color="#E5E5E5">match when others</font><font color="#CCCCCC"> have not have reliable</font>

215
00:09:53,020 --> 00:09:58,240
<font color="#E5E5E5">the</font><font color="#CCCCCC"> fine removing the pontoons and</font><font color="#E5E5E5"> I'm</font>

216
00:09:55,990 --> 00:09:59,980
removing the variables and stuff and

217
00:09:58,240 --> 00:10:02,140
then we have a very<font color="#E5E5E5"> small phantom that</font>

218
00:09:59,980 --> 00:10:04,240
match<font color="#E5E5E5"> everything but when we remove it</font>

219
00:10:02,140 --> 00:10:08,439
out many<font color="#E5E5E5"> things it's a very unreliable</font>

220
00:10:04,240 --> 00:10:11,710
<font color="#CCCCCC">pursuit</font><font color="#E5E5E5"> so some phantoms</font><font color="#CCCCCC"> Sonya risk is</font>

221
00:10:08,440 --> 00:10:13,930
<font color="#CCCCCC">roaring</font><font color="#E5E5E5"> but has names so it simply</font>

222
00:10:11,710 --> 00:10:16,210
compares<font color="#E5E5E5"> then</font><font color="#CCCCCC"> on changing bytes as I</font>

223
00:10:13,930 --> 00:10:18,819
said let's say<font color="#E5E5E5"> that we have a jump to</font>

224
00:10:16,210 --> 00:10:22,150
somewhere I removed the bytes<font color="#CCCCCC"> that tells</font>

225
00:10:18,820 --> 00:10:24,130
where we have<font color="#CCCCCC"> two yams</font><font color="#E5E5E5"> if it's</font>

226
00:10:22,150 --> 00:10:27,880
instructive and<font color="#CCCCCC"> they're</font><font color="#E5E5E5"> references to</font>

227
00:10:24,130 --> 00:10:29,920
names<font color="#E5E5E5"> true names is an</font><font color="#CCCCCC"> ID</font><font color="#E5E5E5"> lasting a name</font>

228
00:10:27,880 --> 00:10:32,380
in<font color="#CCCCCC"> either is it whatever that was a</font>

229
00:10:29,920 --> 00:10:34,569
cycnus<font color="#CCCCCC"> a name bijli</font><font color="#E5E5E5"> it can be a phantom</font>

230
00:10:32,380 --> 00:10:38,310
<font color="#E5E5E5">it can be a strong</font><font color="#CCCCCC"> reference it can be a</font>

231
00:10:34,570 --> 00:10:41,589
global variables angular that has a name

232
00:10:38,310 --> 00:10:43,030
so the name like a<font color="#CCCCCC"> hunting men or some</font>

233
00:10:41,589 --> 00:10:44,830
reference with a name that<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not</font>

234
00:10:43,030 --> 00:10:47,770
generated by either<font color="#CCCCCC"> if it is generated</font>

235
00:10:44,830 --> 00:10:49,660
by<font color="#E5E5E5"> either I simply remove it and if the</font>

236
00:10:47,770 --> 00:10:50,949
hospital<font color="#E5E5E5"> calculate from the White House</font>

237
00:10:49,660 --> 00:10:53,199
<font color="#CCCCCC">on the nines is actually the same</font>

238
00:10:50,950 --> 00:10:55,780
<font color="#E5E5E5">between two databases it is</font><font color="#CCCCCC"> a very</font>

239
00:10:53,200 --> 00:11:02,020
reliable<font color="#CCCCCC"> miss</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> Twitter mind that they</font>

240
00:10:55,780 --> 00:11:04,630
<font color="#CCCCCC">are similar this is a Howard aristokraft</font>

241
00:11:02,020 --> 00:11:06,189
<font color="#E5E5E5">ER all the data is calculated</font><font color="#CCCCCC"> at export</font>

242
00:11:04,630 --> 00:11:08,170
<font color="#E5E5E5">time which is the</font><font color="#CCCCCC"> most crooks</font>

243
00:11:06,190 --> 00:11:11,680
most important<font color="#CCCCCC"> seein that we do India</font>

244
00:11:08,170 --> 00:11:14,410
<font color="#CCCCCC">fora we simply</font><font color="#E5E5E5"> run SQL queries against</font>

245
00:11:11,680 --> 00:11:17,469
the database<font color="#E5E5E5"> this one is actually they</font>

246
00:11:14,410 --> 00:11:19,390
<font color="#E5E5E5">might</font><font color="#CCCCCC"> has that I said and it</font><font color="#E5E5E5"> is how</font><font color="#CCCCCC"> we</font>

247
00:11:17,470 --> 00:11:21,730
<font color="#E5E5E5">have a now right which is a simple</font>

248
00:11:19,390 --> 00:11:24,130
simply<font color="#CCCCCC"> I</font><font color="#E5E5E5"> call with all</font><font color="#CCCCCC"> the names</font><font color="#E5E5E5"> phones</font>

249
00:11:21,730 --> 00:11:27,160
in the first<font color="#CCCCCC"> database and in the second</font>

250
00:11:24,130 --> 00:11:28,900
one<font color="#E5E5E5"> so if the</font><font color="#CCCCCC"> bites has SATA calculators</font>

251
00:11:27,160 --> 00:11:31,360
and the names are<font color="#CCCCCC"> actually the same</font><font color="#E5E5E5"> and</font>

252
00:11:28,900 --> 00:11:35,040
the names<font color="#E5E5E5"> are not empty we have</font><font color="#CCCCCC"> Sanson</font>

253
00:11:31,360 --> 00:11:39,430
<font color="#E5E5E5">we can conclude that the result excuse</font>

254
00:11:35,040 --> 00:11:41,050
another<font color="#CCCCCC"> this one is one of the most</font>

255
00:11:39,430 --> 00:11:42,550
common one in program different<font color="#E5E5E5"> tools</font>

256
00:11:41,050 --> 00:11:44,199
and<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> that is the one that is</font>

257
00:11:42,550 --> 00:11:47,589
<font color="#E5E5E5">implemented in every</font><font color="#CCCCCC"> single dip into</font>

258
00:11:44,200 --> 00:11:49,870
that<font color="#CCCCCC"> I have seen but the</font><font color="#E5E5E5"> affero have</font>

259
00:11:47,590 --> 00:11:52,420
many heuristics couple of tools don't

260
00:11:49,870 --> 00:11:54,910
have like doing the same<font color="#CCCCCC"> but cleaning</font>

261
00:11:52,420 --> 00:11:57,360
<font color="#E5E5E5">add cleaning up is a fancy way of saying</font>

262
00:11:54,910 --> 00:12:00,520
<font color="#CCCCCC">I removing a staff doing</font><font color="#E5E5E5"> fancy Hawkins</font>

263
00:11:57,360 --> 00:12:03,670
<font color="#E5E5E5">in the coast removing variable names</font>

264
00:12:00,520 --> 00:12:06,490
global names<font color="#CCCCCC"> level names and stuff the</font>

265
00:12:03,670 --> 00:12:09,689
South Dakota<font color="#E5E5E5"> CAS the house is like do</font>

266
00:12:06,490 --> 00:12:12,160
you know<font color="#E5E5E5"> SS deep similar</font><font color="#CCCCCC"> the assistive</font>

267
00:12:09,690 --> 00:12:14,530
calculating the SSD<font color="#CCCCCC"> class will not</font>

268
00:12:12,160 --> 00:12:17,829
<font color="#CCCCCC">assist it but something similar</font><font color="#E5E5E5"> of two</font>

269
00:12:14,530 --> 00:12:20,620
texts<font color="#CCCCCC"> if the final result in text is the</font>

270
00:12:17,830 --> 00:12:23,230
<font color="#E5E5E5">same we conclude that</font><font color="#CCCCCC"> its look</font><font color="#E5E5E5"> spread in</font>

271
00:12:20,620 --> 00:12:25,590
<font color="#CCCCCC">Mac's the same both assembler and a</font>

272
00:12:23,230 --> 00:12:28,180
<font color="#CCCCCC">Celtic old level the strongly</font><font color="#E5E5E5"> connected</font>

273
00:12:25,590 --> 00:12:30,130
<font color="#E5E5E5">components in graph theory strongly</font>

274
00:12:28,180 --> 00:12:31,390
connected components are like for

275
00:12:30,130 --> 00:12:33,880
<font color="#CCCCCC">example</font><font color="#E5E5E5"> let's say that we have</font><font color="#CCCCCC"> a</font>

276
00:12:31,390 --> 00:12:35,860
function with<font color="#CCCCCC"> two loops</font><font color="#E5E5E5"> we will have</font><font color="#CCCCCC"> a</font>

277
00:12:33,880 --> 00:12:38,610
to strongly<font color="#E5E5E5"> connected components the</font>

278
00:12:35,860 --> 00:12:42,580
birth loop<font color="#E5E5E5"> and the second loop it is a</font>

279
00:12:38,610 --> 00:12:45,430
way to<font color="#CCCCCC"> determine to try to match</font>

280
00:12:42,580 --> 00:12:50,610
<font color="#E5E5E5">different graphs from different phantoms</font>

281
00:12:45,430 --> 00:12:54,819
<font color="#CCCCCC">it this</font><font color="#E5E5E5"> is what is has planes before</font>

282
00:12:50,610 --> 00:12:57,070
this<font color="#E5E5E5"> is how it pretty much looks here</font><font color="#CCCCCC"> I</font>

283
00:12:54,820 --> 00:12:58,089
<font color="#CCCCCC">inducing either</font><font color="#E5E5E5"> as we can see we don't</font>

284
00:12:57,070 --> 00:13:00,970
have lot<font color="#E5E5E5"> of names</font>

285
00:12:58,089 --> 00:13:03,910
<font color="#E5E5E5">everything is</font><font color="#CCCCCC"> X X X X X</font><font color="#E5E5E5"> whatever we</font>

286
00:13:00,970 --> 00:13:06,160
<font color="#E5E5E5">don't have levels that we are jumping or</font>

287
00:13:03,910 --> 00:13:08,920
we don't<font color="#E5E5E5"> have even global variables for</font>

288
00:13:06,160 --> 00:13:11,620
local variables<font color="#CCCCCC"> on anywhere</font><font color="#E5E5E5"> what I do is</font>

289
00:13:08,920 --> 00:13:13,719
<font color="#CCCCCC">simply remove</font><font color="#E5E5E5"> everything</font><font color="#CCCCCC"> it was what it</font>

290
00:13:11,620 --> 00:13:15,430
<font color="#CCCCCC">was called</font><font color="#E5E5E5"> engineer or the I it was an</font>

291
00:13:13,720 --> 00:13:18,520
<font color="#CCCCCC">antivirus if I remember quarterly I</font>

292
00:13:15,430 --> 00:13:19,550
simply<font color="#E5E5E5"> remove everything this is</font><font color="#CCCCCC"> how it</font>

293
00:13:18,520 --> 00:13:21,439
looks

294
00:13:19,550 --> 00:13:26,510
proper calls and this is how it looks

295
00:13:21,440 --> 00:13:30,230
<font color="#E5E5E5">when I clean me up we can ignore this</font>

296
00:13:26,510 --> 00:13:31,850
part<font color="#CCCCCC"> oh this is unfortunately another</font>

297
00:13:30,230 --> 00:13:33,890
heuristic<font color="#E5E5E5"> that is very good but</font>

298
00:13:31,850 --> 00:13:37,370
<font color="#CCCCCC">unfortunately only a bi-level as of</font>

299
00:13:33,890 --> 00:13:40,760
today in<font color="#CCCCCC"> using either because we don't</font>

300
00:13:37,370 --> 00:13:44,450
<font color="#CCCCCC">have a great super team rather - for now</font>

301
00:13:40,760 --> 00:13:46,640
for<font color="#E5E5E5"> a nice the computer</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> write</font>

302
00:13:44,450 --> 00:13:49,730
another computer by itself<font color="#CCCCCC"> is a big</font>

303
00:13:46,640 --> 00:13:53,449
project<font color="#CCCCCC"> so what I do I take the abstract</font>

304
00:13:49,730 --> 00:13:55,190
syntax tree a tree that defines<font color="#E5E5E5"> all the</font>

305
00:13:53,450 --> 00:13:58,580
syntax of<font color="#CCCCCC"> the</font><font color="#E5E5E5"> phantom that we are the</font>

306
00:13:55,190 --> 00:14:02,450
compiling<font color="#CCCCCC"> to its instruction like an e</font>

307
00:13:58,580 --> 00:14:05,450
<font color="#E5E5E5">if I do</font><font color="#CCCCCC"> while a sweet or go to whatever</font>

308
00:14:02,450 --> 00:14:08,330
<font color="#E5E5E5">I assigned a prime</font><font color="#CCCCCC"> number and like I did</font>

309
00:14:05,450 --> 00:14:10,700
before<font color="#E5E5E5"> I simply multiply all the prime</font>

310
00:14:08,330 --> 00:14:14,750
numbers<font color="#E5E5E5"> is a small trans product and I</font>

311
00:14:10,700 --> 00:14:17,060
get a final big number<font color="#CCCCCC"> that is a has</font>

312
00:14:14,750 --> 00:14:20,120
<font color="#CCCCCC">based on the abstract</font><font color="#E5E5E5"> industry of that</font>

313
00:14:17,060 --> 00:14:22,069
phantom it will have a<font color="#E5E5E5"> match</font><font color="#CCCCCC"> one-to-one</font>

314
00:14:20,120 --> 00:14:26,810
<font color="#E5E5E5">between</font><font color="#CCCCCC"> two databases</font><font color="#E5E5E5"> we can determine</font>

315
00:14:22,070 --> 00:14:28,520
that<font color="#E5E5E5"> looks like the same phantom okay so</font>

316
00:14:26,810 --> 00:14:30,859
<font color="#CCCCCC">only</font><font color="#E5E5E5"> connected components</font><font color="#CCCCCC"> explained it</font>

317
00:14:28,520 --> 00:14:33,680
before<font color="#E5E5E5"> switch structure this is</font><font color="#CCCCCC"> another</font>

318
00:14:30,860 --> 00:14:37,070
<font color="#CCCCCC">scent that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are still are</font><font color="#E5E5E5"> missing when</font>

319
00:14:33,680 --> 00:14:39,560
<font color="#CCCCCC">sporting from</font><font color="#E5E5E5"> Prada what I do in either</font>

320
00:14:37,070 --> 00:14:42,590
<font color="#E5E5E5">is let's say that we have a switch</font><font color="#CCCCCC"> that</font>

321
00:14:39,560 --> 00:14:47,030
takes the value<font color="#CCCCCC"> e case one case two case</font>

322
00:14:42,590 --> 00:14:49,840
three case for default the constant that

323
00:14:47,030 --> 00:14:52,280
<font color="#CCCCCC">I'd use</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> a switch case can be</font><font color="#E5E5E5"> buried</font>

324
00:14:49,840 --> 00:14:54,650
determinant<font color="#E5E5E5"> or can be very interesting</font>

325
00:14:52,280 --> 00:14:56,390
to<font color="#E5E5E5"> determinate if two phantoms are</font>

326
00:14:54,650 --> 00:14:58,459
actually the same<font color="#E5E5E5"> if we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> talking</font>

327
00:14:56,390 --> 00:15:00,560
about<font color="#CCCCCC"> zero one two or more and stuff</font>

328
00:14:58,460 --> 00:15:02,420
probably the max is not very good<font color="#E5E5E5"> but</font>

329
00:15:00,560 --> 00:15:05,599
let's say that<font color="#E5E5E5"> we</font><font color="#CCCCCC"> are comparing with</font><font color="#E5E5E5"> so</font>

330
00:15:02,420 --> 00:15:08,360
no<font color="#CCCCCC"> specific constants that are rare that</font>

331
00:15:05,600 --> 00:15:10,640
<font color="#E5E5E5">are not very</font><font color="#CCCCCC"> common it will give you a</font>

332
00:15:08,360 --> 00:15:13,310
very good<font color="#E5E5E5"> and</font><font color="#CCCCCC"> proud mats that's</font><font color="#E5E5E5"> poorly</font>

333
00:15:10,640 --> 00:15:18,319
you call not<font color="#E5E5E5"> match you know</font><font color="#CCCCCC"> there in</font><font color="#E5E5E5"> any</font>

334
00:15:13,310 --> 00:15:20,930
<font color="#E5E5E5">other way before when I implemented it</font><font color="#CCCCCC"> I</font>

335
00:15:18,320 --> 00:15:23,300
was her research and<font color="#E5E5E5"> and</font><font color="#CCCCCC"> dividers</font><font color="#E5E5E5"> and I</font>

336
00:15:20,930 --> 00:15:25,579
thought that it will carries a lot<font color="#CCCCCC"> of</font>

337
00:15:23,300 --> 00:15:28,040
false positives<font color="#CCCCCC"> but</font><font color="#E5E5E5"> when I started</font>

338
00:15:25,580 --> 00:15:30,580
comparing with antivirus aside realizes

339
00:15:28,040 --> 00:15:33,020
that it did not<font color="#E5E5E5"> kill cows or the match</font>

340
00:15:30,580 --> 00:15:39,470
<font color="#E5E5E5">so it's one</font>

341
00:15:33,020 --> 00:15:43,069
<font color="#CCCCCC">chali of the I reliable ones</font><font color="#E5E5E5"> okay</font>

342
00:15:39,470 --> 00:15:46,460
there is no<font color="#CCCCCC"> demo</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> for this sorry</font><font color="#E5E5E5"> so</font>

343
00:15:43,070 --> 00:15:49,070
a<font color="#CCCCCC"> featured before</font><font color="#E5E5E5"> pancake continuous so</font>

344
00:15:46,460 --> 00:15:50,540
the<font color="#CCCCCC"> governesses tuples in my opinion</font><font color="#E5E5E5"> but</font>

345
00:15:49,070 --> 00:15:53,120
well line the<font color="#CCCCCC"> outer what I'm going to</font>

346
00:15:50,540 --> 00:15:55,730
say is the<font color="#CCCCCC"> best</font><font color="#E5E5E5"> open source or otherwise</font>

347
00:15:53,120 --> 00:15:58,160
program for doing program the fairness

348
00:15:55,730 --> 00:16:00,680
of today<font color="#E5E5E5"> back in</font><font color="#CCCCCC"> the day it was been</font>

349
00:15:58,160 --> 00:16:03,650
different with modeled as of today adopt

350
00:16:00,680 --> 00:16:05,180
<font color="#CCCCCC">benefits better if you</font><font color="#E5E5E5"> have that the</font>

351
00:16:03,650 --> 00:16:07,780
<font color="#E5E5E5">compiler is the only one</font><font color="#CCCCCC"> that is going</font>

352
00:16:05,180 --> 00:16:11,300
<font color="#CCCCCC">to make use of the compiler</font>

353
00:16:07,780 --> 00:16:15,140
<font color="#E5E5E5">and I also I have a few changes on -</font>

354
00:16:11,300 --> 00:16:18,500
that eventually<font color="#CCCCCC"> I will implement so</font>

355
00:16:15,140 --> 00:16:20,569
<font color="#CCCCCC">moralistic will be added eventually when</font>

356
00:16:18,500 --> 00:16:23,000
I need it more<font color="#E5E5E5"> than anything</font><font color="#CCCCCC"> and some of</font>

357
00:16:20,570 --> 00:16:25,460
the ones<font color="#E5E5E5"> that I'm still trying</font><font color="#CCCCCC"> to</font>

358
00:16:23,000 --> 00:16:27,620
<font color="#CCCCCC">determine is for</font><font color="#E5E5E5"> example using an</font>

359
00:16:25,460 --> 00:16:32,840
intermediate<font color="#E5E5E5"> language this is</font><font color="#CCCCCC"> why I I</font>

360
00:16:27,620 --> 00:16:35,090
was interested<font color="#E5E5E5"> in</font><font color="#CCCCCC"> es il so I take the</font>

361
00:16:32,840 --> 00:16:38,150
intermediate language translation of

362
00:16:35,090 --> 00:16:40,640
<font color="#CCCCCC">some fancy on then I apply optimizations</font>

363
00:16:38,150 --> 00:16:44,720
for<font color="#E5E5E5"> it like the compiler will do and</font>

364
00:16:40,640 --> 00:16:46,790
then I compared the optimizes versions

365
00:16:44,720 --> 00:16:49,640
of the intermediate<font color="#E5E5E5"> language it doesn't</font>

366
00:16:46,790 --> 00:16:52,880
<font color="#CCCCCC">matter if you are</font><font color="#E5E5E5"> comparing set</font><font color="#CCCCCC"> a T or</font><font color="#E5E5E5"> a</font>

367
00:16:49,640 --> 00:16:55,699
or M or spark or whatever as you are

368
00:16:52,880 --> 00:16:58,820
comparing finally optimizes version of

369
00:16:55,700 --> 00:17:01,700
an intermediate representations<font color="#E5E5E5"> I hope</font>

370
00:16:58,820 --> 00:17:04,490
that the<font color="#CCCCCC"> results of comparing</font><font color="#E5E5E5"> both will</font>

371
00:17:01,700 --> 00:17:07,100
be pretty similar<font color="#CCCCCC"> I hope one of</font><font color="#E5E5E5"> the</font>

372
00:17:04,490 --> 00:17:10,700
ideas<font color="#E5E5E5"> that I do for him that is</font><font color="#CCCCCC"> say</font>

373
00:17:07,099 --> 00:17:14,119
deducing es il but<font color="#E5E5E5"> is a bit</font><font color="#CCCCCC"> limited yet</font>

374
00:17:10,700 --> 00:17:16,220
<font color="#E5E5E5">or using lip bags lip</font><font color="#CCCCCC"> axis actually what</font>

375
00:17:14,119 --> 00:17:18,919
<font color="#CCCCCC">this uses in background and is used</font>

376
00:17:16,220 --> 00:17:21,339
since long ago<font color="#E5E5E5"> and it supports a ban</font>

377
00:17:18,920 --> 00:17:26,750
splat force and is well the<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> in</font>

378
00:17:21,339 --> 00:17:29,570
production so did you<font color="#E5E5E5"> I changes so far</font>

379
00:17:26,750 --> 00:17:32,600
we<font color="#CCCCCC"> only have one</font><font color="#E5E5E5"> GUI that GUI is for</font>

380
00:17:29,570 --> 00:17:35,689
either<font color="#E5E5E5"> we don't have a GUI were</font>

381
00:17:32,600 --> 00:17:38,030
diaphoretic<font color="#CCCCCC"> grades for for example radar</font>

382
00:17:35,690 --> 00:17:40,910
or if we want to port it tomorrow to<font color="#CCCCCC"> be</font>

383
00:17:38,030 --> 00:17:44,180
<font color="#CCCCCC">nary ninja or to hopper or whatever</font><font color="#E5E5E5"> all</font>

384
00:17:40,910 --> 00:17:45,590
<font color="#CCCCCC">the - yeah</font><font color="#E5E5E5"> it's not possible to hover</font>

385
00:17:44,180 --> 00:17:47,660
but<font color="#E5E5E5"> anyway so um</font>

386
00:17:45,590 --> 00:17:50,090
one of the<font color="#E5E5E5"> ideas is to create an</font>

387
00:17:47,660 --> 00:17:52,220
independent<font color="#E5E5E5"> GUI so we can export from</font>

388
00:17:50,090 --> 00:17:55,639
<font color="#CCCCCC">whatever tool we prefer to choose and</font>

389
00:17:52,220 --> 00:17:59,000
then use that UI to do<font color="#E5E5E5"> defeating and to</font>

390
00:17:55,640 --> 00:18:00,770
<font color="#E5E5E5">actually even read the source you cannot</font>

391
00:17:59,000 --> 00:18:02,480
believe back<font color="#E5E5E5"> in the day I used to work</font>

392
00:18:00,770 --> 00:18:04,490
for<font color="#CCCCCC"> Herricks</font><font color="#E5E5E5"> and you cannot believe</font><font color="#CCCCCC"> how</font>

393
00:18:02,480 --> 00:18:06,110
many people<font color="#CCCCCC"> asked you</font><font color="#E5E5E5"> for a reason</font><font color="#CCCCCC"> the</font>

394
00:18:04,490 --> 00:18:08,240
application to<font color="#CCCCCC"> recitative it have</font>

395
00:18:06,110 --> 00:18:11,060
databases<font color="#E5E5E5"> in high</font><font color="#CCCCCC"> paths or things like</font>

396
00:18:08,240 --> 00:18:16,370
that<font color="#E5E5E5"> I don't know why but people</font><font color="#CCCCCC"> asked</font>

397
00:18:11,060 --> 00:18:20,120
for<font color="#E5E5E5"> it another</font><font color="#CCCCCC"> scene</font><font color="#E5E5E5"> but this is like</font>

398
00:18:16,370 --> 00:18:22,729
maybe<font color="#CCCCCC"> someday</font><font color="#E5E5E5"> if I have a lot of time so</font>

399
00:18:20,120 --> 00:18:26,389
another thing that<font color="#E5E5E5"> I would pretend to</font><font color="#CCCCCC"> do</font>

400
00:18:22,730 --> 00:18:29,120
is finding matches between south coast

401
00:18:26,390 --> 00:18:32,150
and binaries<font color="#E5E5E5"> basically getting out the</font>

402
00:18:29,120 --> 00:18:34,100
abstract syntax tree using<font color="#CCCCCC"> sealer of its</font>

403
00:18:32,150 --> 00:18:36,320
<font color="#CCCCCC">function of a source code base that you</font>

404
00:18:34,100 --> 00:18:38,750
give to<font color="#CCCCCC"> it and then it tries</font><font color="#E5E5E5"> to compare</font>

405
00:18:36,320 --> 00:18:42,260
the<font color="#CCCCCC"> ast</font><font color="#E5E5E5"> of the</font><font color="#CCCCCC"> DES compilation and the</font>

406
00:18:38,750 --> 00:18:45,050
ast of the source code I<font color="#E5E5E5"> don't know if</font>

407
00:18:42,260 --> 00:18:48,110
it's going to<font color="#E5E5E5"> work</font><font color="#CCCCCC"> if I ever finally</font>

408
00:18:45,050 --> 00:18:50,270
<font color="#E5E5E5">implement it I will tell you but it</font>

409
00:18:48,110 --> 00:18:51,770
won't<font color="#E5E5E5"> be very useful when you</font><font color="#CCCCCC"> don't have</font>

410
00:18:50,270 --> 00:18:53,120
when you are<font color="#E5E5E5"> analyzing the closest</font>

411
00:18:51,770 --> 00:18:55,250
<font color="#E5E5E5">source product but you have partial</font>

412
00:18:53,120 --> 00:18:58,429
source<font color="#E5E5E5"> because it was liquid back in the</font>

413
00:18:55,250 --> 00:19:00,770
day or things<font color="#CCCCCC"> like that and</font><font color="#E5E5E5"> for this use</font>

414
00:18:58,430 --> 00:19:03,080
case is pretty<font color="#CCCCCC"> useful but it's not</font>

415
00:19:00,770 --> 00:19:04,790
trivial<font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement</font><font color="#E5E5E5"> actually it is</font>

416
00:19:03,080 --> 00:19:09,350
easier to<font color="#E5E5E5"> work with binaries than with</font>

417
00:19:04,790 --> 00:19:11,600
source code<font color="#E5E5E5"> in my opinion so that's it</font>

418
00:19:09,350 --> 00:19:14,030
<font color="#E5E5E5">therefore</font><font color="#CCCCCC"> is a resource</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do</font>

419
00:19:11,600 --> 00:19:14,840
whatever you want with it<font color="#E5E5E5"> it have in</font>

420
00:19:14,030 --> 00:19:18,649
support right now

421
00:19:14,840 --> 00:19:21,020
and now<font color="#E5E5E5"> pancake is going to talk about</font>

422
00:19:18,650 --> 00:19:24,640
the next merge that it was<font color="#CCCCCC"> 14 therefore</font>

423
00:19:21,020 --> 00:19:24,639
<font color="#CCCCCC">are two rather design</font>

424
00:19:31,059 --> 00:19:36,410
so now<font color="#E5E5E5"> I will talk about the way that I</font>

425
00:19:34,309 --> 00:19:39,379
have been<font color="#E5E5E5"> integrating the</font><font color="#CCCCCC"> ephra into</font>

426
00:19:36,410 --> 00:19:42,110
<font color="#E5E5E5">rather</font><font color="#CCCCCC"> - this was less than one week of</font>

427
00:19:39,380 --> 00:19:44,690
<font color="#E5E5E5">work so it well it's more like some kind</font>

428
00:19:42,110 --> 00:19:46,969
of proof<font color="#E5E5E5"> of concept</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> the thing works</font>

429
00:19:44,690 --> 00:19:49,220
but it's<font color="#CCCCCC"> not perfect it's far from</font>

430
00:19:46,970 --> 00:19:52,220
complete<font color="#E5E5E5"> but you can use</font><font color="#CCCCCC"> it understand</font>

431
00:19:49,220 --> 00:19:55,880
<font color="#E5E5E5">how to</font><font color="#CCCCCC"> port when tool that works</font><font color="#E5E5E5"> with</font>

432
00:19:52,220 --> 00:19:59,690
another program<font color="#CCCCCC"> like</font><font color="#E5E5E5"> IPA</font><font color="#CCCCCC"> or so on</font><font color="#E5E5E5"> into</font>

433
00:19:55,880 --> 00:20:02,720
rather<font color="#CCCCCC"> - so why it matters</font><font color="#E5E5E5"> to support</font>

434
00:19:59,690 --> 00:20:04,040
them so the<font color="#CCCCCC"> first thing is that it's an</font>

435
00:20:02,720 --> 00:20:05,600
open<font color="#E5E5E5"> source tool</font><font color="#CCCCCC"> it's available</font>

436
00:20:04,040 --> 00:20:06,920
<font color="#E5E5E5">everywhere you can just in batch</font><font color="#CCCCCC"> mode</font>

437
00:20:05,600 --> 00:20:09,740
you can<font color="#CCCCCC"> use it in products you can use</font>

438
00:20:06,920 --> 00:20:11,030
<font color="#CCCCCC">it</font><font color="#E5E5E5"> anywhere</font><font color="#CCCCCC"> and the thing is that</font><font color="#E5E5E5"> you</font>

439
00:20:09,740 --> 00:20:12,710
can modify<font color="#CCCCCC"> it you can create your own</font>

440
00:20:11,030 --> 00:20:14,240
plugins you can<font color="#E5E5E5"> support many</font><font color="#CCCCCC"> other</font>

441
00:20:12,710 --> 00:20:17,120
architectures<font color="#CCCCCC"> it's pretty handy for</font>

442
00:20:14,240 --> 00:20:18,679
testing<font color="#E5E5E5"> stuff because it's</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> there is</font>

443
00:20:17,120 --> 00:20:20,809
a<font color="#E5E5E5"> common line that it's pretty handy</font><font color="#CCCCCC"> for</font>

444
00:20:18,679 --> 00:20:22,700
testing things and you don't<font color="#E5E5E5"> have to</font>

445
00:20:20,809 --> 00:20:25,040
spend lot of time like analyzing

446
00:20:22,700 --> 00:20:26,420
everything<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> just load or analyze</font>

447
00:20:25,040 --> 00:20:29,540
a specific part of<font color="#E5E5E5"> the problem that you</font>

448
00:20:26,420 --> 00:20:32,690
want<font color="#E5E5E5"> to compare etcetera</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> will also</font>

449
00:20:29,540 --> 00:20:35,450
<font color="#E5E5E5">explain</font><font color="#CCCCCC"> how to use</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit</font>

450
00:20:32,690 --> 00:20:39,410
about the internals I will explain a

451
00:20:35,450 --> 00:20:43,309
little bit the<font color="#CCCCCC"> problems or why the tool</font>

452
00:20:39,410 --> 00:20:45,050
was so integrated<font color="#CCCCCC"> into either a API so I</font>

453
00:20:43,309 --> 00:20:49,370
had to make some kind<font color="#E5E5E5"> of wrappers of the</font>

454
00:20:45,050 --> 00:20:51,559
idea<font color="#E5E5E5"> API to call a lot of</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> comments the</font>

455
00:20:49,370 --> 00:20:53,419
format<font color="#E5E5E5"> of SQLite because the output</font><font color="#CCCCCC"> of</font>

456
00:20:51,559 --> 00:20:55,190
<font color="#E5E5E5">this analysis is</font><font color="#CCCCCC"> generated</font><font color="#E5E5E5"> into SQLite</font>

457
00:20:53,420 --> 00:20:56,860
database and then about the

458
00:20:55,190 --> 00:21:00,140
visualization<font color="#CCCCCC"> in the future</font>

459
00:20:56,860 --> 00:21:02,419
so who we are he already presented

460
00:21:00,140 --> 00:21:06,320
himself<font color="#E5E5E5"> and I guess I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> need to make</font>

461
00:21:02,420 --> 00:21:08,210
<font color="#E5E5E5">the representation again so the reason</font>

462
00:21:06,320 --> 00:21:12,320
for<font color="#E5E5E5"> this is mainly as I said before</font>

463
00:21:08,210 --> 00:21:14,030
<font color="#E5E5E5">because science</font><font color="#CCCCCC"> mainly for the headless</font>

464
00:21:12,320 --> 00:21:17,720
analysis<font color="#CCCCCC"> you can automate</font><font color="#E5E5E5"> things you can</font>

465
00:21:14,030 --> 00:21:19,550
run it in<font color="#E5E5E5"> remote machines you can use it</font>

466
00:21:17,720 --> 00:21:21,920
for comparing<font color="#E5E5E5"> the</font><font color="#CCCCCC"> results of different</font>

467
00:21:19,550 --> 00:21:23,659
<font color="#E5E5E5">tools so I would like</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> compare the</font>

468
00:21:21,920 --> 00:21:26,420
nice use of<font color="#E5E5E5"> idea with an Isis or other</font>

469
00:21:23,660 --> 00:21:27,920
tool to see<font color="#E5E5E5"> where are the things that</font>

470
00:21:26,420 --> 00:21:30,200
I'm missing or<font color="#E5E5E5"> compare different</font>

471
00:21:27,920 --> 00:21:32,840
analysis<font color="#E5E5E5"> of other</font><font color="#CCCCCC"> to to see the</font>

472
00:21:30,200 --> 00:21:34,400
differences in<font color="#E5E5E5"> different programs and</font>

473
00:21:32,840 --> 00:21:38,449
<font color="#E5E5E5">using different</font><font color="#CCCCCC"> options for the nicest</font>

474
00:21:34,400 --> 00:21:40,820
or<font color="#E5E5E5"> to compare the</font><font color="#CCCCCC"> results</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> it was an</font>

475
00:21:38,450 --> 00:21:42,410
interesting playground for

476
00:21:40,820 --> 00:21:45,649
<font color="#E5E5E5">they're creating a wrapper</font><font color="#CCCCCC"> of the IBA</font>

477
00:21:42,410 --> 00:21:48,980
API so it will be possible<font color="#E5E5E5"> at some point</font>

478
00:21:45,650 --> 00:21:51,290
to<font color="#E5E5E5"> have like a full idea API</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> topic</font>

479
00:21:48,980 --> 00:21:56,630
rather<font color="#CCCCCC"> to so you can just use the IDI</font>

480
00:21:51,290 --> 00:21:59,389
scripts<font color="#E5E5E5"> internal to and show a little</font>

481
00:21:56,630 --> 00:22:04,070
<font color="#E5E5E5">bit how easy is to create these</font><font color="#CCCCCC"> things</font>

482
00:21:59,390 --> 00:22:06,410
on top<font color="#E5E5E5"> of</font><font color="#CCCCCC"> her to pipe some of</font><font color="#E5E5E5"> the most</font>

483
00:22:04,070 --> 00:22:07,700
common use cases<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the ones that</font><font color="#E5E5E5"> it</font>

484
00:22:06,410 --> 00:22:11,060
comes to your mind when<font color="#CCCCCC"> you're start</font>

485
00:22:07,700 --> 00:22:12,500
using the<font color="#E5E5E5"> different tools is for malware</font>

486
00:22:11,060 --> 00:22:14,270
indexing which is something<font color="#E5E5E5"> that it's</font>

487
00:22:12,500 --> 00:22:17,050
<font color="#E5E5E5">already done in milk in their project</font>

488
00:22:14,270 --> 00:22:19,639
off machine which is an open source tool

489
00:22:17,050 --> 00:22:22,399
<font color="#CCCCCC">project that it's</font><font color="#E5E5E5"> basically analyzing</font>

490
00:22:19,640 --> 00:22:24,350
malware and finding common stuff between

491
00:22:22,400 --> 00:22:28,520
<font color="#E5E5E5">different malware so you are not looking</font>

492
00:22:24,350 --> 00:22:31,429
for families or not looking for similar

493
00:22:28,520 --> 00:22:33,440
<font color="#CCCCCC">things but which kind of malware things</font>

494
00:22:31,430 --> 00:22:35,030
share some functions from another<font color="#E5E5E5"> one</font>

495
00:22:33,440 --> 00:22:36,830
which is<font color="#E5E5E5"> this is which is pretty</font>

496
00:22:35,030 --> 00:22:41,840
<font color="#CCCCCC">interesting because you end up</font><font color="#E5E5E5"> having so</font>

497
00:22:36,830 --> 00:22:44,090
your own conspiracy theories<font color="#CCCCCC"> it's also</font>

498
00:22:41,840 --> 00:22:46,909
interesting<font color="#E5E5E5"> to see the changes when some</font>

499
00:22:44,090 --> 00:22:48,770
for<font color="#E5E5E5"> example there is</font><font color="#CCCCCC"> a bug fix because</font>

500
00:22:46,910 --> 00:22:50,210
<font color="#CCCCCC">there is an upgrade</font><font color="#E5E5E5"> for a specific</font>

501
00:22:48,770 --> 00:22:52,850
<font color="#CCCCCC">application or driver that</font><font color="#E5E5E5"> they are</font>

502
00:22:50,210 --> 00:22:54,590
fixing some varieties<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> have the</font>

503
00:22:52,850 --> 00:22:56,870
previous<font color="#E5E5E5"> version on the new version</font><font color="#CCCCCC"> and</font>

504
00:22:54,590 --> 00:22:58,699
you<font color="#CCCCCC"> can use this tool to</font><font color="#E5E5E5"> find which is</font>

505
00:22:56,870 --> 00:23:01,399
<font color="#E5E5E5">the changes between one - another one</font>

506
00:22:58,700 --> 00:23:03,140
also<font color="#E5E5E5"> automated one because you can have</font>

507
00:23:01,400 --> 00:23:04,550
like you can always<font color="#E5E5E5"> do these kind of</font>

508
00:23:03,140 --> 00:23:05,900
<font color="#E5E5E5">things by hand but when you are</font><font color="#CCCCCC"> half</font>

509
00:23:04,550 --> 00:23:08,180
<font color="#CCCCCC">alive</font><font color="#E5E5E5"> a large number of three of</font>

510
00:23:05,900 --> 00:23:10,040
binaries not<font color="#CCCCCC"> analyzed or to compare</font><font color="#E5E5E5"> it's</font>

511
00:23:08,180 --> 00:23:13,460
always better to<font color="#CCCCCC"> have seen these kind of</font>

512
00:23:10,040 --> 00:23:15,590
things automated and<font color="#E5E5E5"> there are so many</font>

513
00:23:13,460 --> 00:23:17,540
other<font color="#E5E5E5"> cases so just think a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit</font>

514
00:23:15,590 --> 00:23:19,550
<font color="#CCCCCC">on that</font><font color="#E5E5E5"> and you will probably have</font><font color="#CCCCCC"> more</font>

515
00:23:17,540 --> 00:23:22,340
ideas<font color="#E5E5E5"> for using and integrating this</font>

516
00:23:19,550 --> 00:23:24,770
this kind of<font color="#E5E5E5"> projects</font><font color="#CCCCCC"> okay so how</font><font color="#E5E5E5"> to use</font>

517
00:23:22,340 --> 00:23:30,110
this tool the affero it's a written in

518
00:23:24,770 --> 00:23:31,460
Python there is two<font color="#CCCCCC"> different</font><font color="#E5E5E5"> Python</font>

519
00:23:30,110 --> 00:23:34,669
scripts one<font color="#E5E5E5"> of them is the one that</font>

520
00:23:31,460 --> 00:23:37,280
<font color="#CCCCCC">creates a SQLite database out of a</font>

521
00:23:34,670 --> 00:23:39,560
binary so you have like one<font color="#E5E5E5"> binary or</font>

522
00:23:37,280 --> 00:23:41,810
like one library and then<font color="#E5E5E5"> you specify</font>

523
00:23:39,560 --> 00:23:45,649
like<font color="#E5E5E5"> there is the affero and lower case</font>

524
00:23:41,810 --> 00:23:46,780
<font color="#CCCCCC">lower - ID a dot P</font><font color="#E5E5E5"> and then</font><font color="#CCCCCC"> you specify</font>

525
00:23:45,650 --> 00:23:48,490
the

526
00:23:46,780 --> 00:23:51,790
internalize and this will generate<font color="#CCCCCC"> an</font>

527
00:23:48,490 --> 00:23:55,210
output<font color="#CCCCCC"> but SQLite file and you can</font>

528
00:23:51,790 --> 00:23:56,830
<font color="#E5E5E5">analyze</font><font color="#CCCCCC"> this with SQLite and if you have</font>

529
00:23:55,210 --> 00:23:59,110
like some patterns you<font color="#E5E5E5"> can just</font><font color="#CCCCCC"> like</font>

530
00:23:56,830 --> 00:24:01,899
<font color="#E5E5E5">select and type some SQL queries to</font>

531
00:23:59,110 --> 00:24:03,760
understand what's<font color="#CCCCCC"> going on</font><font color="#E5E5E5"> and when</font><font color="#CCCCCC"> you</font>

532
00:24:01,900 --> 00:24:07,780
have<font color="#E5E5E5"> two SQLite databases you</font><font color="#CCCCCC"> can just</font>

533
00:24:03,760 --> 00:24:09,670
call the FBI<font color="#E5E5E5"> and pass it to SQLite files</font>

534
00:24:07,780 --> 00:24:12,100
and then it will generate<font color="#E5E5E5"> a new SQLite</font>

535
00:24:09,670 --> 00:24:13,540
file which is the<font color="#E5E5E5"> D thing</font><font color="#CCCCCC"> result soft of</font>

536
00:24:12,100 --> 00:24:16,449
that so there are two<font color="#E5E5E5"> different skew</font>

537
00:24:13,540 --> 00:24:19,899
light<font color="#CCCCCC"> formats or two different</font><font color="#E5E5E5"> schemas</font>

538
00:24:16,450 --> 00:24:22,510
<font color="#CCCCCC">for</font><font color="#E5E5E5"> two different databases</font><font color="#CCCCCC"> and again</font>

539
00:24:19,900 --> 00:24:25,390
<font color="#E5E5E5">visualizing the wrestles</font><font color="#CCCCCC"> squish and said</font>

540
00:24:22,510 --> 00:24:27,760
before there<font color="#E5E5E5"> is no open source or</font>

541
00:24:25,390 --> 00:24:31,450
portable<font color="#CCCCCC"> front-end because it depends</font><font color="#E5E5E5"> on</font>

542
00:24:27,760 --> 00:24:33,670
<font color="#E5E5E5">98 the current one</font><font color="#CCCCCC"> so right now you have</font>

543
00:24:31,450 --> 00:24:35,350
<font color="#E5E5E5">to use your brain</font><font color="#CCCCCC"> just doing some SQLite</font>

544
00:24:33,670 --> 00:24:38,380
queries but<font color="#E5E5E5"> it should</font><font color="#CCCCCC"> be pretty easy to</font>

545
00:24:35,350 --> 00:24:40,689
make<font color="#CCCCCC"> I</font><font color="#E5E5E5"> mean</font><font color="#CCCCCC"> you can use SQLite</font><font color="#E5E5E5"> but also</font>

546
00:24:38,380 --> 00:24:42,190
to browse of different vessels and so on

547
00:24:40,690 --> 00:24:44,260
<font color="#E5E5E5">but it should</font><font color="#CCCCCC"> be pretty easy to make</font>

548
00:24:42,190 --> 00:24:46,740
like a web front-end<font color="#E5E5E5"> some kind of</font>

549
00:24:44,260 --> 00:24:49,420
<font color="#CCCCCC">node.js or Python web server</font><font color="#E5E5E5"> in that</font>

550
00:24:46,740 --> 00:24:51,730
exposes this information in a web

551
00:24:49,420 --> 00:24:54,000
application<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you can just</font><font color="#E5E5E5"> browse the</font>

552
00:24:51,730 --> 00:24:57,190
<font color="#E5E5E5">right so</font><font color="#CCCCCC"> that will be</font><font color="#E5E5E5"> easy to</font><font color="#CCCCCC"> look but</font>

553
00:24:54,000 --> 00:24:59,410
actually<font color="#E5E5E5"> the output result in database</font>

554
00:24:57,190 --> 00:25:01,630
when you do the<font color="#CCCCCC"> defend you have the</font>

555
00:24:59,410 --> 00:25:04,150
tables like<font color="#E5E5E5"> best matches parts and</font>

556
00:25:01,630 --> 00:25:07,540
matches<font color="#CCCCCC"> and reliable matches so you just</font>

557
00:25:04,150 --> 00:25:10,570
need to<font color="#E5E5E5"> display the data that's it you</font>

558
00:25:07,540 --> 00:25:12,790
<font color="#E5E5E5">don't think you don't need to understand</font>

559
00:25:10,570 --> 00:25:15,280
very<font color="#E5E5E5"> well</font><font color="#CCCCCC"> the format</font><font color="#E5E5E5"> because you have</font>

560
00:25:12,790 --> 00:25:19,149
the same columns that you will see in

561
00:25:15,280 --> 00:25:21,310
the<font color="#E5E5E5"> either GUI so at least for Watson</font>

562
00:25:19,150 --> 00:25:24,220
see in their final results<font color="#CCCCCC"> it's all we</font>

563
00:25:21,310 --> 00:25:30,310
like pretty easy but we haven't<font color="#E5E5E5"> done it</font>

564
00:25:24,220 --> 00:25:32,350
sorry in order<font color="#CCCCCC"> to install the affero you</font>

565
00:25:30,310 --> 00:25:34,389
can use her<font color="#CCCCCC"> to PM so just type</font><font color="#E5E5E5"> at 2:00</font>

566
00:25:32,350 --> 00:25:36,969
p.m.<font color="#E5E5E5"> you</font><font color="#CCCCCC"> know</font><font color="#E5E5E5"> I in the Opera and this</font>

567
00:25:34,390 --> 00:25:38,620
wins though it will clone my fork of the

568
00:25:36,970 --> 00:25:39,820
<font color="#CCCCCC">ephod repository which is the one that</font>

569
00:25:38,620 --> 00:25:41,260
supports<font color="#E5E5E5"> vibrato</font>

570
00:25:39,820 --> 00:25:44,860
it hasn't been<font color="#CCCCCC"> emerges in the remainder</font>

571
00:25:41,260 --> 00:25:47,260
<font color="#CCCCCC">of Pretoria yet it will put two scripts</font>

572
00:25:44,860 --> 00:25:48,370
into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> path one of them is the</font><font color="#CCCCCC"> Efrain</font>

573
00:25:47,260 --> 00:25:51,040
the other one is the<font color="#E5E5E5"> Opera</font>

574
00:25:48,370 --> 00:25:53,800
-<font color="#CCCCCC"> - err -</font><font color="#E5E5E5"> the idea for</font><font color="#CCCCCC"> r2 is the one</font>

575
00:25:51,040 --> 00:25:55,090
that will<font color="#E5E5E5"> analyze</font><font color="#CCCCCC"> the binary and the</font>

576
00:25:53,800 --> 00:26:00,520
other one is the<font color="#CCCCCC"> one that it's leaving</font>

577
00:25:55,090 --> 00:26:00,760
the<font color="#E5E5E5"> two SQLite files in order to call</font>

578
00:26:00,520 --> 00:26:04,690
the

579
00:26:00,760 --> 00:26:06,490
from our<font color="#E5E5E5"> - you</font><font color="#CCCCCC"> have to specify I mean</font>

580
00:26:04,690 --> 00:26:09,150
you can do<font color="#E5E5E5"> it in two different ways one</font>

581
00:26:06,490 --> 00:26:12,550
of<font color="#CCCCCC"> them is</font><font color="#E5E5E5"> invites mode so you can just</font>

582
00:26:09,150 --> 00:26:14,050
<font color="#CCCCCC">Python the effort to then the path to</font>

583
00:26:12,550 --> 00:26:16,570
<font color="#E5E5E5">the file this will spawn a new instance</font>

584
00:26:14,050 --> 00:26:18,430
of<font color="#CCCCCC"> whether - and after that it will</font><font color="#E5E5E5"> run</font>

585
00:26:16,570 --> 00:26:21,850
<font color="#CCCCCC">the bunch of comments</font><font color="#E5E5E5"> to generate</font>

586
00:26:18,430 --> 00:26:23,950
analysis and then create the rescue like

587
00:26:21,850 --> 00:26:26,020
file in the output<font color="#CCCCCC"> but you can also</font>

588
00:26:23,950 --> 00:26:28,030
reduce some project called summarizes it

589
00:26:26,020 --> 00:26:32,470
that you have<font color="#E5E5E5"> done in the binary so you</font>

590
00:26:28,030 --> 00:26:35,080
can just type dot space and then the

591
00:26:32,470 --> 00:26:36,280
after a lot of<font color="#E5E5E5"> cases or to the script</font>

592
00:26:35,080 --> 00:26:38,860
will detect that<font color="#E5E5E5"> it's running inside</font>

593
00:26:36,280 --> 00:26:42,340
<font color="#CCCCCC">order</font><font color="#E5E5E5"> - so in it will not perform an</font>

594
00:26:38,860 --> 00:26:45,280
analysis and this will reduce all the

595
00:26:42,340 --> 00:26:46,510
function information and colonizes that

596
00:26:45,280 --> 00:26:49,960
<font color="#CCCCCC">haven't</font><font color="#E5E5E5"> done before</font><font color="#CCCCCC"> to generate the</font>

597
00:26:46,510 --> 00:26:51,280
SQLite database so let's talk<font color="#E5E5E5"> a</font><font color="#CCCCCC"> little</font>

598
00:26:49,960 --> 00:26:53,980
<font color="#E5E5E5">bit about the devil's and I will make a</font>

599
00:26:51,280 --> 00:26:57,430
<font color="#E5E5E5">quick demo</font><font color="#CCCCCC"> - so you can see the</font><font color="#E5E5E5"> current</font>

600
00:26:53,980 --> 00:26:59,380
state<font color="#E5E5E5"> of the thing so what I did for</font>

601
00:26:57,430 --> 00:27:04,120
doing that was basically taking<font color="#E5E5E5"> the</font><font color="#CCCCCC"> via</font>

602
00:26:59,380 --> 00:27:06,130
<font color="#E5E5E5">for</font><font color="#CCCCCC"> Allah</font><font color="#E5E5E5"> - ID a Python script and I was</font>

603
00:27:04,120 --> 00:27:08,979
basically<font color="#CCCCCC"> removing code all the part</font>

604
00:27:06,130 --> 00:27:11,500
that was doing<font color="#E5E5E5"> all the graphical part</font>

605
00:27:08,980 --> 00:27:13,630
<font color="#E5E5E5">mainly because the core implementation</font>

606
00:27:11,500 --> 00:27:16,960
is<font color="#CCCCCC"> just a single script better not one</font>

607
00:27:13,630 --> 00:27:20,140
with<font color="#CCCCCC"> all the stuff</font><font color="#E5E5E5"> makes it inside there</font>

608
00:27:16,960 --> 00:27:23,190
<font color="#CCCCCC">are no library for importing this there</font>

609
00:27:20,140 --> 00:27:26,340
<font color="#E5E5E5">is no separation in different files so</font>

610
00:27:23,190 --> 00:27:29,200
porting this was more or<font color="#CCCCCC"> less just</font>

611
00:27:26,340 --> 00:27:31,449
<font color="#CCCCCC">removing code and changing some</font><font color="#E5E5E5"> parts</font>

612
00:27:29,200 --> 00:27:36,460
for and writing functions<font color="#E5E5E5"> for replacing</font>

613
00:27:31,450 --> 00:27:38,410
<font color="#E5E5E5">the implementations I created I was</font>

614
00:27:36,460 --> 00:27:40,810
basically<font color="#E5E5E5"> running the script until I get</font>

615
00:27:38,410 --> 00:27:43,810
an exception<font color="#E5E5E5"> and then I was implementing</font>

616
00:27:40,810 --> 00:27:45,629
the function that<font color="#E5E5E5"> was missing and most</font>

617
00:27:43,810 --> 00:27:50,110
of the<font color="#E5E5E5"> problems that was having is that</font>

618
00:27:45,630 --> 00:27:52,030
there are the<font color="#CCCCCC"> current idea API code was</font>

619
00:27:50,110 --> 00:27:54,870
depending on<font color="#CCCCCC"> IBA objects and functions</font>

620
00:27:52,030 --> 00:27:58,389
<font color="#E5E5E5">so in order to replace this I had to</font>

621
00:27:54,870 --> 00:28:00,969
write the<font color="#CCCCCC"> Python the</font><font color="#E5E5E5"> ID a functions</font><font color="#CCCCCC"> a</font>

622
00:27:58,390 --> 00:28:03,900
<font color="#CCCCCC">signature</font><font color="#E5E5E5"> and then return some objects</font>

623
00:28:00,970 --> 00:28:06,940
or fake objects emulating the idea

624
00:28:03,900 --> 00:28:09,910
objects because I was not being able to

625
00:28:06,940 --> 00:28:10,970
<font color="#E5E5E5">I mean</font><font color="#CCCCCC"> I was reducing idea at all so I</font>

626
00:28:09,910 --> 00:28:13,640
didn't<font color="#E5E5E5"> know</font>

627
00:28:10,970 --> 00:28:15,230
<font color="#E5E5E5">how the API was working I was taking the</font>

628
00:28:13,640 --> 00:28:17,450
documentation I was basically returning

629
00:28:15,230 --> 00:28:20,270
the objects<font color="#CCCCCC"> that with filling with of</font>

630
00:28:17,450 --> 00:28:23,690
some methods and<font color="#E5E5E5"> feels to to make the</font>

631
00:28:20,270 --> 00:28:24,830
the effort a happy<font color="#E5E5E5"> and also I added some</font>

632
00:28:23,690 --> 00:28:26,780
functions that<font color="#E5E5E5"> was prompting the user</font>

633
00:28:24,830 --> 00:28:28,610
for some<font color="#E5E5E5"> questions like do you want to</font>

634
00:28:26,780 --> 00:28:29,260
remove the database before<font color="#E5E5E5"> creating a</font>

635
00:28:28,610 --> 00:28:34,280
<font color="#E5E5E5">new one</font>

636
00:28:29,260 --> 00:28:37,879
etc<font color="#E5E5E5"> right now the idea a P I support is</font>

637
00:28:34,280 --> 00:28:40,549
just<font color="#E5E5E5"> for what I need</font><font color="#CCCCCC"> it for this but it</font>

638
00:28:37,880 --> 00:28:44,270
<font color="#E5E5E5">will be</font><font color="#CCCCCC"> possible to create</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> its</font>

639
00:28:40,549 --> 00:28:47,020
planet to create a separate Python model

640
00:28:44,270 --> 00:28:50,418
that you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> use from any other project</font>

641
00:28:47,020 --> 00:28:55,090
<font color="#CCCCCC">that it will be able to reduce</font><font color="#E5E5E5"> the idea</font>

642
00:28:50,419 --> 00:28:58,490
scripts to<font color="#E5E5E5"> run on top of</font><font color="#CCCCCC"> other tool and</font>

643
00:28:55,090 --> 00:29:04,340
let's check<font color="#E5E5E5"> hold sqlite format is and so</font>

644
00:28:58,490 --> 00:29:08,570
on so this is<font color="#CCCCCC"> a script it's a Python</font>

645
00:29:04,340 --> 00:29:11,600
<font color="#E5E5E5">script it's like</font><font color="#CCCCCC"> - huh - thousand lines</font>

646
00:29:08,570 --> 00:29:16,309
<font color="#E5E5E5">script</font><font color="#CCCCCC"> at the end you can see that there</font>

647
00:29:11,600 --> 00:29:18,740
is like the main I'm<font color="#E5E5E5"> basically checking</font>

648
00:29:16,309 --> 00:29:21,860
<font color="#E5E5E5">if there is a are two pipe lower in</font>

649
00:29:18,740 --> 00:29:23,659
variable set this means<font color="#E5E5E5"> that if it said</font>

650
00:29:21,860 --> 00:29:25,939
<font color="#E5E5E5">I'm running the script inside</font><font color="#CCCCCC"> / - this</font>

651
00:29:23,659 --> 00:29:27,679
is the<font color="#E5E5E5"> Bible</font><font color="#CCCCCC"> the Vagabond variable that</font>

652
00:29:25,940 --> 00:29:30,020
is<font color="#E5E5E5"> said by order - when you're running</font>

653
00:29:27,679 --> 00:29:32,270
<font color="#E5E5E5">from inside</font><font color="#CCCCCC"> order - and this</font><font color="#E5E5E5"> finish and</font>

654
00:29:30,020 --> 00:29:34,520
this vironment shows the<font color="#CCCCCC"> father script</font>

655
00:29:32,270 --> 00:29:36,679
it must use for using the pipe to

656
00:29:34,520 --> 00:29:39,799
communicate with an alto<font color="#E5E5E5"> there is a in</font>

657
00:29:36,679 --> 00:29:41,480
and out one<font color="#E5E5E5"> of</font><font color="#CCCCCC"> four reading comments</font>

658
00:29:39,799 --> 00:29:44,030
from dollar<font color="#CCCCCC"> two and the other one is</font><font color="#E5E5E5"> for</font>

659
00:29:41,480 --> 00:29:46,010
<font color="#E5E5E5">writing the result so when you want</font><font color="#CCCCCC"> to</font>

660
00:29:44,030 --> 00:29:47,450
run one comment you will<font color="#CCCCCC"> basically check</font>

661
00:29:46,010 --> 00:29:49,610
<font color="#E5E5E5">to these variables that's what I have to</font>

662
00:29:47,450 --> 00:29:52,820
pipe those internally<font color="#E5E5E5"> and it will write</font>

663
00:29:49,610 --> 00:29:54,799
the common with a new terminated string

664
00:29:52,820 --> 00:29:56,059
and then it<font color="#E5E5E5"> will get the null terminated</font>

665
00:29:54,799 --> 00:29:58,850
string from<font color="#E5E5E5"> the old file descriptor</font>

666
00:29:56,059 --> 00:30:01,730
<font color="#E5E5E5">after that if it's running inside order</font>

667
00:29:58,850 --> 00:30:03,860
- I will just<font color="#CCCCCC"> call open without any</font>

668
00:30:01,730 --> 00:30:06,679
parameters<font color="#E5E5E5"> so I will get a</font><font color="#CCCCCC"> session</font>

669
00:30:03,860 --> 00:30:10,428
<font color="#CCCCCC">loaded for the</font><font color="#E5E5E5"> current running session</font><font color="#CCCCCC"> /</font>

670
00:30:06,679 --> 00:30:12,960
<font color="#E5E5E5">- I will get the file name and if not I</font>

671
00:30:10,429 --> 00:30:14,670
will<font color="#E5E5E5"> basically acquire the user with a</font>

672
00:30:12,960 --> 00:30:15,900
with a message<font color="#CCCCCC"> help saying that you have</font>

673
00:30:14,670 --> 00:30:18,150
<font color="#E5E5E5">to specify which files</font><font color="#CCCCCC"> you want to</font>

674
00:30:15,900 --> 00:30:19,640
<font color="#E5E5E5">analyze and then</font><font color="#CCCCCC"> it will</font><font color="#E5E5E5"> run a bunch of</font>

675
00:30:18,150 --> 00:30:22,110
<font color="#E5E5E5">comments in order to set up the</font>

676
00:30:19,640 --> 00:30:24,990
configuration for doing all the stuff

677
00:30:22,110 --> 00:30:27,570
the<font color="#E5E5E5"> configuration that I'm using is just</font>

678
00:30:24,990 --> 00:30:30,180
disabling the flags the<font color="#CCCCCC"> bytes the</font>

679
00:30:27,570 --> 00:30:31,530
removing the color<font color="#E5E5E5"> because I don't want</font>

680
00:30:30,180 --> 00:30:33,480
to compare colors and I want to have

681
00:30:31,530 --> 00:30:36,240
like a more compact<font color="#E5E5E5"> sqlite format that</font>

682
00:30:33,480 --> 00:30:38,550
only matters<font color="#E5E5E5"> about</font><font color="#CCCCCC"> the text</font>

683
00:30:36,240 --> 00:30:40,680
representation of this<font color="#E5E5E5"> assembly</font><font color="#CCCCCC"> I also</font>

684
00:30:38,550 --> 00:30:42,360
enabled the<font color="#E5E5E5"> eoq ID because if I'm</font>

685
00:30:40,680 --> 00:30:44,880
emulating some parts and I want to write

686
00:30:42,360 --> 00:30:46,500
some stuff I don't<font color="#CCCCCC"> want to modify</font><font color="#E5E5E5"> the</font>

687
00:30:44,880 --> 00:30:49,200
final binary or have some errors in

688
00:30:46,500 --> 00:30:51,900
<font color="#E5E5E5">output and I have also enabled the</font><font color="#CCCCCC"> has</font>

689
00:30:49,200 --> 00:30:54,210
next<font color="#E5E5E5"> option which</font><font color="#CCCCCC"> is handy for</font><font color="#E5E5E5"> some kind</font>

690
00:30:51,900 --> 00:30:56,910
of analysis as you can see here there is

691
00:30:54,210 --> 00:30:59,309
a bunch of changes here<font color="#E5E5E5"> there are some</font>

692
00:30:56,910 --> 00:31:01,740
commented lines<font color="#CCCCCC"> hey was one of the</font><font color="#E5E5E5"> tests</font>

693
00:30:59,309 --> 00:31:04,590
I<font color="#E5E5E5"> did then</font><font color="#CCCCCC"> well</font><font color="#E5E5E5"> I tested with</font><font color="#CCCCCC"> AEV</font><font color="#E5E5E5"> then</font>

694
00:31:01,740 --> 00:31:07,710
with<font color="#E5E5E5"> C and</font><font color="#CCCCCC"> here is the hard call at a a</font>

695
00:31:04,590 --> 00:31:09,870
<font color="#CCCCCC">b1 which</font><font color="#E5E5E5"> is the fastest way for</font>

696
00:31:07,710 --> 00:31:11,900
analyzing a binary and getting more

697
00:31:09,870 --> 00:31:14,189
<font color="#CCCCCC">stresses</font><font color="#E5E5E5"> without doing too much things</font>

698
00:31:11,900 --> 00:31:15,960
then it will basically<font color="#E5E5E5"> query the user if</font>

699
00:31:14,190 --> 00:31:19,230
it's a if you want<font color="#E5E5E5"> to create a new</font>

700
00:31:15,960 --> 00:31:19,559
database<font color="#CCCCCC"> etc so let's see how this thing</font>

701
00:31:19,230 --> 00:31:23,280
works

702
00:31:19,559 --> 00:31:25,410
<font color="#E5E5E5">we can just call</font><font color="#CCCCCC"> it like this</font><font color="#E5E5E5"> I will use</font>

703
00:31:23,280 --> 00:31:29,940
CP will create a<font color="#E5E5E5"> SQLite database out of</font>

704
00:31:25,410 --> 00:31:32,820
the slice<font color="#CCCCCC"> penis-like</font><font color="#E5E5E5"> CP binary and it</font>

705
00:31:29,940 --> 00:31:34,559
will run<font color="#E5E5E5"> it will run from inside</font><font color="#CCCCCC"> righto</font>

706
00:31:32,820 --> 00:31:36,149
<font color="#CCCCCC">so I am reducing</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> current session it</font>

707
00:31:34,559 --> 00:31:38,670
will not spawn a new session or<font color="#CCCCCC"> title to</font>

708
00:31:36,150 --> 00:31:41,760
<font color="#CCCCCC">its according me if I want to remove the</font>

709
00:31:38,670 --> 00:31:43,740
database<font color="#CCCCCC"> I say that yes and this the</font>

710
00:31:41,760 --> 00:31:45,990
<font color="#E5E5E5">nicest have been gone and it has been</font>

711
00:31:43,740 --> 00:31:49,020
doing<font color="#E5E5E5"> all these lines in</font><font color="#CCCCCC"> order</font><font color="#E5E5E5"> to show</font>

712
00:31:45,990 --> 00:31:50,550
what's<font color="#CCCCCC"> going on</font><font color="#E5E5E5"> inside the effort the</font>

713
00:31:49,020 --> 00:31:52,020
effort<font color="#E5E5E5"> basically takes the base address</font>

714
00:31:50,550 --> 00:31:54,270
where the binary is loaded<font color="#CCCCCC"> and it will</font>

715
00:31:52,020 --> 00:31:56,550
subtract all the offset for all the

716
00:31:54,270 --> 00:31:59,070
basic<font color="#CCCCCC"> blocks</font><font color="#E5E5E5"> and functions of strings</font>

717
00:31:56,550 --> 00:32:00,720
etc<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is basically</font><font color="#E5E5E5"> because then you</font>

718
00:31:59,070 --> 00:32:02,960
<font color="#E5E5E5">don't</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> work with</font><font color="#CCCCCC"> huge numbers you</font>

719
00:32:00,720 --> 00:32:05,010
can just<font color="#E5E5E5"> work with smaller numbers and</font>

720
00:32:02,960 --> 00:32:06,450
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> also handy when you are</font>

721
00:32:05,010 --> 00:32:07,980
<font color="#E5E5E5">comparing kernels because there are</font>

722
00:32:06,450 --> 00:32:09,870
other<font color="#CCCCCC"> cells</font><font color="#E5E5E5"> in kernels are quite huge</font>

723
00:32:07,980 --> 00:32:11,940
and<font color="#E5E5E5"> it's better to compare like small</font>

724
00:32:09,870 --> 00:32:13,979
numbers all things<font color="#E5E5E5"> that are</font><font color="#CCCCCC"> interesting</font>

725
00:32:11,940 --> 00:32:15,600
to<font color="#E5E5E5"> see here is that well apart that</font>

726
00:32:13,980 --> 00:32:19,170
there is so many<font color="#CCCCCC"> two back printers</font><font color="#E5E5E5"> in</font>

727
00:32:15,600 --> 00:32:20,879
there<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> that it's taking the control</font>

728
00:32:19,170 --> 00:32:22,029
flow graph for the functions and it's

729
00:32:20,880 --> 00:32:26,200
generating a

730
00:32:22,029 --> 00:32:28,349
a lot<font color="#E5E5E5"> of that so now we have an SQLite</font>

731
00:32:26,200 --> 00:32:34,570
that arise that<font color="#E5E5E5"> database that we can</font>

732
00:32:28,349 --> 00:32:41,168
open<font color="#CCCCCC"> here</font><font color="#E5E5E5"> there is all the tables</font><font color="#CCCCCC"> that</font>

733
00:32:34,570 --> 00:32:43,539
are created we<font color="#E5E5E5"> can see the wrestles so</font>

734
00:32:41,169 --> 00:32:46,239
here is all the functions<font color="#E5E5E5"> and it creates</font>

735
00:32:43,539 --> 00:32:48,340
one row for its function<font color="#E5E5E5"> and it creates</font>

736
00:32:46,239 --> 00:32:52,659
a bunch<font color="#E5E5E5"> of information for it so</font><font color="#CCCCCC"> it's</font>

737
00:32:48,340 --> 00:32:54,728
<font color="#CCCCCC">like for example</font><font color="#E5E5E5"> is the disassembly you</font>

738
00:32:52,659 --> 00:32:56,139
can see the<font color="#CCCCCC"> xyx that Christians had</font>

739
00:32:54,729 --> 00:33:01,239
before the<font color="#CCCCCC"> it's replacing all the</font><font color="#E5E5E5"> levels</font>

740
00:32:56,139 --> 00:33:03,609
from from there there are most things to

741
00:33:01,239 --> 00:33:05,589
improve<font color="#E5E5E5"> in this in this database or in</font>

742
00:33:03,609 --> 00:33:07,749
<font color="#E5E5E5">the way that rather to expose the</font>

743
00:33:05,589 --> 00:33:09,279
information<font color="#E5E5E5"> but more or</font><font color="#CCCCCC"> less it works I</font>

744
00:33:07,749 --> 00:33:11,499
mean<font color="#E5E5E5"> I've</font><font color="#CCCCCC"> been comparing</font><font color="#E5E5E5"> some basic</font>

745
00:33:09,279 --> 00:33:13,570
binaries and and I was able<font color="#E5E5E5"> to define</font>

746
00:33:11,499 --> 00:33:14,830
<font color="#CCCCCC">what the</font><font color="#E5E5E5"> problem was some of the issues</font>

747
00:33:13,570 --> 00:33:18,399
<font color="#E5E5E5">that they found is</font><font color="#CCCCCC"> that for</font><font color="#E5E5E5"> small</font>

748
00:33:14,830 --> 00:33:20,379
functions<font color="#E5E5E5"> was not finding any any change</font>

749
00:33:18,399 --> 00:33:22,449
because<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> it's assuming it's a false</font>

750
00:33:20,379 --> 00:33:23,709
positive<font color="#E5E5E5"> or it's assuming that there is</font>

751
00:33:22,450 --> 00:33:24,969
<font color="#E5E5E5">no</font><font color="#CCCCCC"> real change in their main language</font>

752
00:33:23,710 --> 00:33:26,919
because there is not<font color="#E5E5E5"> enough</font><font color="#CCCCCC"> information</font>

753
00:33:24,969 --> 00:33:30,070
to<font color="#E5E5E5"> little mind that the function is</font>

754
00:33:26,919 --> 00:33:31,690
<font color="#E5E5E5">valid or not like all the imports things</font>

755
00:33:30,070 --> 00:33:34,359
that it's<font color="#E5E5E5"> just one two or</font><font color="#CCCCCC"> three</font>

756
00:33:31,690 --> 00:33:36,460
instructions<font color="#E5E5E5"> all the small functions</font>

757
00:33:34,359 --> 00:33:40,839
that are like returning<font color="#E5E5E5"> some</font><font color="#CCCCCC"> valley or</font>

758
00:33:36,460 --> 00:33:44,139
doing a small math operation<font color="#E5E5E5"> we can do</font>

759
00:33:40,839 --> 00:33:48,219
for<font color="#CCCCCC"> example this and then we</font><font color="#E5E5E5"> can</font><font color="#CCCCCC"> analyze</font>

760
00:33:44,139 --> 00:33:50,408
<font color="#E5E5E5">an all binary like maybe sleep and then</font>

761
00:33:48,219 --> 00:33:53,289
we have to escalate<font color="#E5E5E5"> it erases the a and</font>

762
00:33:50,409 --> 00:33:56,249
output<font color="#CCCCCC"> okay we can rename these to B</font><font color="#E5E5E5"> dot</font>

763
00:33:53,289 --> 00:34:02,679
SQLite<font color="#E5E5E5"> and then we can run the opera</font>

764
00:33:56,249 --> 00:34:06,429
passing the<font color="#E5E5E5"> two binary</font><font color="#CCCCCC"> the a and B this</font>

765
00:34:02,679 --> 00:34:09,629
<font color="#E5E5E5">will generate an eight versus B database</font>

766
00:34:06,429 --> 00:34:13,418
which is again<font color="#E5E5E5"> another SQLite database</font>

767
00:34:09,629 --> 00:34:15,368
<font color="#E5E5E5">and if we check there is less tables in</font>

768
00:34:13,418 --> 00:34:19,319
here<font color="#E5E5E5"> one of them is restaurants which is</font>

769
00:34:15,369 --> 00:34:22,210
probably<font color="#E5E5E5"> the most interesting for</font><font color="#CCCCCC"> us and</font>

770
00:34:19,319 --> 00:34:25,299
we see that there is<font color="#E5E5E5"> only one result and</font>

771
00:34:22,210 --> 00:34:27,549
we<font color="#E5E5E5"> can check also don't match it which</font>

772
00:34:25,299 --> 00:34:33,989
is so many<font color="#E5E5E5"> more one method functions in</font>

773
00:34:27,549 --> 00:34:37,110
there<font color="#E5E5E5"> three is it this 1.000 is the</font>

774
00:34:33,989 --> 00:34:39,699
the<font color="#CCCCCC"> ratio of matching between the two</font>

775
00:34:37,110 --> 00:34:44,500
functions<font color="#E5E5E5"> that have fun</font><font color="#CCCCCC"> in one of the</font>

776
00:34:39,699 --> 00:34:47,560
other binary so how to visualize this<font color="#CCCCCC"> I</font>

777
00:34:44,500 --> 00:34:51,969
started writing<font color="#E5E5E5"> this small</font><font color="#CCCCCC"> scrape which</font>

778
00:34:47,560 --> 00:34:55,630
<font color="#CCCCCC">is a DF review but as you can</font><font color="#E5E5E5"> see</font><font color="#CCCCCC"> it's</font>

779
00:34:51,969 --> 00:34:57,160
just<font color="#CCCCCC"> beginning it's like an import</font><font color="#E5E5E5"> it's</font>

780
00:34:55,630 --> 00:34:59,350
<font color="#E5E5E5">opening</font><font color="#CCCCCC"> the database and and doing some</font>

781
00:34:57,160 --> 00:35:04,060
queries<font color="#E5E5E5"> but doing not too much more and</font>

782
00:34:59,350 --> 00:35:05,680
<font color="#CCCCCC">they</font><font color="#E5E5E5"> be used to generate a HTML file or</font>

783
00:35:04,060 --> 00:35:07,540
<font color="#E5E5E5">a static HTML file</font><font color="#CCCCCC"> but you can</font><font color="#E5E5E5"> just open</font>

784
00:35:05,680 --> 00:35:10,240
and see the rest<font color="#E5E5E5"> was like listing</font>

785
00:35:07,540 --> 00:35:13,410
<font color="#E5E5E5">functions or matches</font><font color="#CCCCCC"> I think some colors</font>

786
00:35:10,240 --> 00:35:17,049
depending on<font color="#E5E5E5"> the ratio of matching etc</font>

787
00:35:13,410 --> 00:35:18,910
but I said I think that just using a web

788
00:35:17,050 --> 00:35:21,100
user<font color="#CCCCCC"> interface will be probably</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> best</font>

789
00:35:18,910 --> 00:35:22,390
way<font color="#CCCCCC"> of the most easy way for</font><font color="#E5E5E5"> doing</font><font color="#CCCCCC"> this</font>

790
00:35:21,100 --> 00:35:24,610
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> things because you'll have to</font>

791
00:35:22,390 --> 00:35:27,790
mess with<font color="#E5E5E5"> native code or you'll have to</font>

792
00:35:24,610 --> 00:35:29,920
<font color="#CCCCCC">mess with</font><font color="#E5E5E5"> widgets of one operating</font>

793
00:35:27,790 --> 00:35:32,230
<font color="#E5E5E5">system</font><font color="#CCCCCC"> or that</font><font color="#E5E5E5"> doesn't work or doesn't</font>

794
00:35:29,920 --> 00:35:35,020
<font color="#CCCCCC">look</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> same in row 1</font><font color="#E5E5E5"> or don't depend</font>

795
00:35:32,230 --> 00:35:42,910
on<font color="#E5E5E5"> huge framework so it's just you can</font>

796
00:35:35,020 --> 00:35:44,710
use the web anywhere so future<font color="#E5E5E5"> what can</font>

797
00:35:42,910 --> 00:35:48,580
<font color="#E5E5E5">be done or what should be done to make</font>

798
00:35:44,710 --> 00:35:51,400
this project improving in the next<font color="#E5E5E5"> weeks</font>

799
00:35:48,580 --> 00:35:55,180
<font color="#E5E5E5">months years one of them is the</font>

800
00:35:51,400 --> 00:35:56,380
performance<font color="#E5E5E5"> Python</font><font color="#CCCCCC"> is probably not</font><font color="#E5E5E5"> the</font>

801
00:35:55,180 --> 00:35:59,410
best<font color="#E5E5E5"> language for doing something that</font>

802
00:35:56,380 --> 00:36:00,910
must perform<font color="#CCCCCC"> are 2 PI / 4</font><font color="#E5E5E5"> not the best</font>

803
00:35:59,410 --> 00:36:03,670
way for doing<font color="#E5E5E5"> something that must</font><font color="#CCCCCC"> suffer</font>

804
00:36:00,910 --> 00:36:05,680
<font color="#CCCCCC">mainly because there</font><font color="#E5E5E5"> other ways or I</font>

805
00:36:03,670 --> 00:36:09,280
mean<font color="#E5E5E5"> you can</font><font color="#CCCCCC"> just use the API C API</font>

806
00:36:05,680 --> 00:36:12,460
<font color="#CCCCCC">directly</font><font color="#E5E5E5"> or just write using C++ or</font>

807
00:36:09,280 --> 00:36:15,010
first also<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Africa could be</font>

808
00:36:12,460 --> 00:36:17,410
<font color="#E5E5E5">re-implemented</font><font color="#CCCCCC"> to to not be done</font><font color="#E5E5E5"> in</font>

809
00:36:15,010 --> 00:36:19,390
<font color="#CCCCCC">Python or</font><font color="#E5E5E5"> just refactor it in</font><font color="#CCCCCC"> order</font><font color="#E5E5E5"> to</font>

810
00:36:17,410 --> 00:36:24,129
be<font color="#E5E5E5"> more maintainable or easy to port to</font>

811
00:36:19,390 --> 00:36:26,799
other tools also<font color="#CCCCCC"> the user interface with</font>

812
00:36:24,130 --> 00:36:28,360
options because the idea<font color="#CCCCCC"> front then have</font>

813
00:36:26,800 --> 00:36:32,050
many<font color="#CCCCCC"> options for</font><font color="#E5E5E5"> doing different</font>

814
00:36:28,360 --> 00:36:34,030
<font color="#E5E5E5">analysis changes and there are</font><font color="#CCCCCC"> differing</font>

815
00:36:32,050 --> 00:36:35,680
changes that right now it's her call it

816
00:36:34,030 --> 00:36:38,020
for<font color="#E5E5E5"> the earth to implementation</font><font color="#CCCCCC"> just to</font>

817
00:36:35,680 --> 00:36:40,330
have like<font color="#CCCCCC"> a working</font><font color="#E5E5E5"> version without too</font>

818
00:36:38,020 --> 00:36:42,130
much queries and questions<font color="#E5E5E5"> battery</font>

819
00:36:40,330 --> 00:36:45,310
solutions because you can make graph and

820
00:36:42,130 --> 00:36:46,770
three representations<font color="#CCCCCC"> and</font><font color="#E5E5E5"> bitter reality</font>

821
00:36:45,310 --> 00:36:49,200
and stuff like that

822
00:36:46,770 --> 00:36:51,060
<font color="#CCCCCC">and</font><font color="#E5E5E5"> also</font><font color="#CCCCCC"> it would</font><font color="#E5E5E5"> be nice to integrate</font>

823
00:36:49,200 --> 00:36:53,490
these kind of things interval<font color="#CCCCCC"> to roar to</font>

824
00:36:51,060 --> 00:36:55,650
<font color="#CCCCCC">support his own diffing an enzyme but</font>

825
00:36:53,490 --> 00:36:57,359
it's not as<font color="#E5E5E5"> complete as</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Opera and</font>

826
00:36:55,650 --> 00:36:59,040
<font color="#E5E5E5">it's always nice</font><font color="#CCCCCC"> to have more support</font>

827
00:36:57,360 --> 00:37:00,720
<font color="#CCCCCC">for different</font><font color="#E5E5E5"> tools and scripts</font><font color="#CCCCCC"> because</font>

828
00:36:59,040 --> 00:37:02,490
<font color="#CCCCCC">this way you can just compare wrestles</font>

829
00:37:00,720 --> 00:37:06,419
and find bugs and make all the tools

830
00:37:02,490 --> 00:37:08,609
<font color="#E5E5E5">better</font><font color="#CCCCCC"> it's also interesting or it will</font>

831
00:37:06,420 --> 00:37:10,320
be cool to<font color="#CCCCCC"> have some kind</font><font color="#E5E5E5"> of community</font>

832
00:37:08,610 --> 00:37:12,410
<font color="#E5E5E5">around the project not</font><font color="#CCCCCC"> just about the</font>

833
00:37:10,320 --> 00:37:14,700
effort but also<font color="#E5E5E5"> what the effort</font><font color="#CCCCCC"> to and</font>

834
00:37:12,410 --> 00:37:18,089
having<font color="#E5E5E5"> more people testing it and using</font>

835
00:37:14,700 --> 00:37:19,350
<font color="#E5E5E5">it for their own needs</font><font color="#CCCCCC"> having a test</font>

836
00:37:18,090 --> 00:37:20,970
<font color="#CCCCCC">suite is</font><font color="#E5E5E5"> probably one of the most</font>

837
00:37:19,350 --> 00:37:23,490
important things<font color="#E5E5E5"> when you are trying to</font>

838
00:37:20,970 --> 00:37:26,399
<font color="#E5E5E5">make</font><font color="#CCCCCC"> something relatable or key or big</font>

839
00:37:23,490 --> 00:37:28,379
because if you are upgrading the tool

840
00:37:26,400 --> 00:37:30,780
<font color="#E5E5E5">and you are generating new databases or</font>

841
00:37:28,380 --> 00:37:32,430
new<font color="#E5E5E5"> and Isis from different binaries and</font>

842
00:37:30,780 --> 00:37:33,690
they don't match with<font color="#E5E5E5"> the previous</font><font color="#CCCCCC"> ones</font>

843
00:37:32,430 --> 00:37:35,730
<font color="#CCCCCC">you would probably have lot</font><font color="#E5E5E5"> of false</font>

844
00:37:33,690 --> 00:37:38,220
positives<font color="#CCCCCC"> or some</font><font color="#E5E5E5"> information that it's</font>

845
00:37:35,730 --> 00:37:41,280
not<font color="#E5E5E5"> correct</font><font color="#CCCCCC"> so having a</font><font color="#E5E5E5"> tested is</font>

846
00:37:38,220 --> 00:37:44,970
probably very important also<font color="#E5E5E5"> create a</font>

847
00:37:41,280 --> 00:37:46,620
server database<font color="#CCCCCC"> so you can instead</font><font color="#E5E5E5"> of</font>

848
00:37:44,970 --> 00:37:48,930
<font color="#E5E5E5">just having everything in file systems</font>

849
00:37:46,620 --> 00:37:50,640
you can<font color="#E5E5E5"> have like a service it is just</font>

850
00:37:48,930 --> 00:37:51,960
<font color="#E5E5E5">providing</font><font color="#CCCCCC"> information about</font><font color="#E5E5E5"> so you</font><font color="#CCCCCC"> you</font>

851
00:37:50,640 --> 00:37:54,240
provide the highest of<font color="#E5E5E5"> the binary and</font>

852
00:37:51,960 --> 00:37:58,080
you'll get the SQLite<font color="#E5E5E5"> out of it so you</font>

853
00:37:54,240 --> 00:38:00,540
<font color="#E5E5E5">can just hold only a small parts of or</font>

854
00:37:58,080 --> 00:38:03,330
small amount<font color="#E5E5E5"> of liners engine in your</font>

855
00:38:00,540 --> 00:38:07,259
<font color="#E5E5E5">local and just call it yourself or</font>

856
00:38:03,330 --> 00:38:12,500
having<font color="#E5E5E5"> other ones and maybe</font><font color="#CCCCCC"> port to</font>

857
00:38:07,260 --> 00:38:18,470
other backends like<font color="#E5E5E5"> Pio cetera questions</font>

858
00:38:12,500 --> 00:38:18,470
ideas<font color="#E5E5E5"> if not that for me</font>

