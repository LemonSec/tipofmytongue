1
00:00:01,790 --> 00:00:07,770
hello everybody<font color="#CCCCCC"> can you hear me</font>

2
00:00:04,460 --> 00:00:09,120
so today I'm going to talk<font color="#CCCCCC"> about CFG</font>

3
00:00:07,770 --> 00:00:12,780
<font color="#CCCCCC">based Susie</font><font color="#E5E5E5"> hashing from our</font>

4
00:00:09,120 --> 00:00:15,660
classification so it's a topic<font color="#CCCCCC"> normal</font>

5
00:00:12,780 --> 00:00:18,630
classification is<font color="#E5E5E5"> a topic by itself</font><font color="#CCCCCC"> it's</font>

6
00:00:15,660 --> 00:00:20,970
mainly<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> too to be able for an</font>

7
00:00:18,630 --> 00:00:23,970
<font color="#CCCCCC">Marwa</font><font color="#E5E5E5"> analyst to classify</font><font color="#CCCCCC"> mr we're a</font>

8
00:00:20,970 --> 00:00:26,070
<font color="#CCCCCC">Newmar well sample he just got to be</font>

9
00:00:23,970 --> 00:00:28,560
able<font color="#CCCCCC"> to tell if it's from one family or</font>

10
00:00:26,070 --> 00:00:31,830
another so who are we

11
00:00:28,560 --> 00:00:34,500
<font color="#E5E5E5">or more exactly who I am</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> I am</font><font color="#CCCCCC"> Robin</font>

12
00:00:31,830 --> 00:00:36,449
<font color="#CCCCCC">last year I was supposed</font><font color="#E5E5E5"> originally to</font>

13
00:00:34,500 --> 00:00:37,980
give the<font color="#E5E5E5"> talk with Roscoe Booga</font>

14
00:00:36,450 --> 00:00:41,550
<font color="#CCCCCC">and fortunately</font><font color="#E5E5E5"> couldn't make it to</font>

15
00:00:37,980 --> 00:00:44,910
Barcelona so I'm gonna try to give the

16
00:00:41,550 --> 00:00:48,089
<font color="#E5E5E5">presentation by</font><font color="#CCCCCC"> myself only I'm not a</font>

17
00:00:44,910 --> 00:00:50,968
reverser<font color="#E5E5E5"> he's more the reverser nor</font>

18
00:00:48,090 --> 00:00:53,129
<font color="#E5E5E5">through his</font><font color="#CCCCCC"> mother reversal of us you</font>

19
00:00:50,969 --> 00:00:55,890
were supposed to to give the most

20
00:00:53,129 --> 00:00:58,489
technical<font color="#CCCCCC"> parts I'm gonna try to</font><font color="#E5E5E5"> do it</font>

21
00:00:55,890 --> 00:01:01,520
by<font color="#CCCCCC"> myself</font>

22
00:00:58,489 --> 00:01:04,229
so why CFG based classification

23
00:01:01,520 --> 00:01:08,369
<font color="#E5E5E5">apparently it's used by</font><font color="#CCCCCC"> anti viruses</font><font color="#E5E5E5"> for</font>

24
00:01:04,229 --> 00:01:11,689
as a kind of last resort<font color="#E5E5E5"> to be able</font><font color="#CCCCCC"> for</font>

25
00:01:08,369 --> 00:01:14,189
them to tell if you<font color="#CCCCCC"> somewhere ISM</font><font color="#E5E5E5"> is</font>

26
00:01:11,689 --> 00:01:16,529
malicious or not<font color="#CCCCCC"> it's also used by</font>

27
00:01:14,189 --> 00:01:21,059
academics and some<font color="#E5E5E5"> of her and some other</font>

28
00:01:16,530 --> 00:01:25,409
entities to<font color="#CCCCCC"> do some research</font><font color="#E5E5E5"> to conduct</font>

29
00:01:21,060 --> 00:01:27,780
some research<font color="#E5E5E5"> on</font><font color="#CCCCCC"> Mars</font><font color="#E5E5E5"> but yet I couldn't</font>

30
00:01:25,409 --> 00:01:29,729
<font color="#E5E5E5">find any public in fermentation</font><font color="#CCCCCC"> very</font>

31
00:01:27,780 --> 00:01:32,640
easy to<font color="#E5E5E5"> use and very easy</font><font color="#CCCCCC"> to deploy</font><font color="#E5E5E5"> at</font>

32
00:01:29,729 --> 00:01:36,360
large to be able<font color="#E5E5E5"> to classify marvel at</font>

33
00:01:32,640 --> 00:01:43,619
large so we<font color="#E5E5E5"> tried it we tried to do or</font>

34
00:01:36,360 --> 00:01:45,960
<font color="#E5E5E5">wrong</font><font color="#CCCCCC"> we do find we did find one so we</font>

35
00:01:43,619 --> 00:01:51,060
did<font color="#E5E5E5"> find one that I'll talk about it</font>

36
00:01:45,960 --> 00:01:53,669
later<font color="#CCCCCC"> so the the main objective of of</font>

37
00:01:51,060 --> 00:01:56,579
this<font color="#CCCCCC"> gfg base physician is to get</font>

38
00:01:53,670 --> 00:02:00,149
something<font color="#CCCCCC"> better than d5 and</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> SHA</font>

39
00:01:56,579 --> 00:02:03,179
family to be<font color="#CCCCCC"> able</font><font color="#E5E5E5"> to classify malware so</font>

40
00:02:00,149 --> 00:02:04,560
it's not really<font color="#E5E5E5"> hard because md5 and the</font>

41
00:02:03,180 --> 00:02:08,879
<font color="#CCCCCC">SHA family are mainly used in</font><font color="#E5E5E5"> the</font>

42
00:02:04,560 --> 00:02:12,330
<font color="#E5E5E5">research</font><font color="#CCCCCC"> to be</font><font color="#E5E5E5"> able to identify</font><font color="#CCCCCC"> malware</font>

43
00:02:08,878 --> 00:02:13,859
only<font color="#CCCCCC"> to know if this sample is a</font>

44
00:02:12,330 --> 00:02:18,480
particular

45
00:02:13,860 --> 00:02:21,690
if this<font color="#CCCCCC"> sample only we try to do</font>

46
00:02:18,480 --> 00:02:23,880
something<font color="#CCCCCC"> also better</font><font color="#E5E5E5"> than the SS deep</font>

47
00:02:21,690 --> 00:02:26,970
which is<font color="#E5E5E5"> another fuzzy ash form are</font>

48
00:02:23,880 --> 00:02:29,730
where we we try to do something<font color="#E5E5E5"> better</font>

49
00:02:26,970 --> 00:02:32,010
because<font color="#CCCCCC"> I says deep is not very old but</font>

50
00:02:29,730 --> 00:02:35,760
<font color="#E5E5E5">it's a bit old now</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's quite easy</font>

51
00:02:32,010 --> 00:02:37,769
<font color="#E5E5E5">and to to be able to produce different</font>

52
00:02:35,760 --> 00:02:40,079
<font color="#E5E5E5">different sample from the same source</font>

53
00:02:37,769 --> 00:02:43,590
code with with different<font color="#CCCCCC"> as dips in</font>

54
00:02:40,080 --> 00:02:46,560
natural<font color="#CCCCCC"> the main objective was to</font>

55
00:02:43,590 --> 00:02:49,560
produce a small and independent tool as

56
00:02:46,560 --> 00:02:52,769
much as possible<font color="#E5E5E5"> which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> very easy</font><font color="#CCCCCC"> to</font>

57
00:02:49,560 --> 00:02:54,780
deploy<font color="#CCCCCC"> and use at large and let also to</font>

58
00:02:52,769 --> 00:02:57,000
do<font color="#E5E5E5"> the clustering by clustering</font><font color="#CCCCCC"> women</font>

59
00:02:54,780 --> 00:03:05,010
the<font color="#CCCCCC"> ability to to regroup for</font><font color="#E5E5E5"> some pearl</font>

60
00:02:57,000 --> 00:03:10,019
inside<font color="#E5E5E5"> the family of</font><font color="#CCCCCC"> Marwa so we we do</font>

61
00:03:05,010 --> 00:03:14,310
find<font color="#E5E5E5"> another</font><font color="#CCCCCC"> implementation of</font><font color="#E5E5E5"> of CFG</font>

62
00:03:10,019 --> 00:03:17,370
base for the ashing inside the<font color="#E5E5E5"> project</font>

63
00:03:14,310 --> 00:03:20,220
<font color="#CCCCCC">name polish</font><font color="#E5E5E5"> genre from</font><font color="#CCCCCC"> ansi so this is</font>

64
00:03:17,370 --> 00:03:23,820
<font color="#E5E5E5">published on github you can find it</font><font color="#CCCCCC"> very</font>

65
00:03:20,220 --> 00:03:26,489
<font color="#E5E5E5">easily there is inside tourism there is</font>

66
00:03:23,820 --> 00:03:31,530
<font color="#E5E5E5">to implementation of the algorithm</font><font color="#CCCCCC"> name</font>

67
00:03:26,489 --> 00:03:34,470
<font color="#CCCCCC">meshach it's one implementation is in</font>

68
00:03:31,530 --> 00:03:38,130
rubies<font color="#E5E5E5"> other one is in is in</font><font color="#CCCCCC"> Ida Python</font>

69
00:03:34,470 --> 00:03:41,040
and the the<font color="#CCCCCC"> two implementation are lost</font>

70
00:03:38,130 --> 00:03:44,069
in lots of Ruby and<font color="#CCCCCC"> Python and</font><font color="#E5E5E5"> other</font>

71
00:03:41,040 --> 00:03:47,220
sort of languages including<font color="#CCCCCC"> pair so it</font>

72
00:03:44,069 --> 00:03:49,138
was<font color="#E5E5E5"> not</font><font color="#CCCCCC"> very easy</font><font color="#E5E5E5"> to to use a table so</font>

73
00:03:47,220 --> 00:03:51,470
that's why we try<font color="#CCCCCC"> to reemployment some</font>

74
00:03:49,139 --> 00:03:51,470
singers

75
00:03:55,910 --> 00:04:05,460
so we named<font color="#CCCCCC"> our</font><font color="#E5E5E5"> our project Metro key</font>

76
00:04:01,350 --> 00:04:07,440
because that<font color="#CCCCCC"> shocked the</font><font color="#E5E5E5"> original this</font>

77
00:04:05,460 --> 00:04:10,050
one the<font color="#CCCCCC"> original was the name given by</font>

78
00:04:07,440 --> 00:04:13,109
<font color="#E5E5E5">an see they just choose the name of</font><font color="#CCCCCC"> a</font>

79
00:04:10,050 --> 00:04:16,260
<font color="#E5E5E5">Pokemon and we just use for all name the</font>

80
00:04:13,110 --> 00:04:21,269
<font color="#CCCCCC">evolution of this</font><font color="#E5E5E5"> very Pokemon so quite</font>

81
00:04:16,260 --> 00:04:25,230
simple<font color="#CCCCCC"> we use the rudder and rudder</font>

82
00:04:21,269 --> 00:04:28,650
rudder to and<font color="#CCCCCC"> to Pike to to do what our</font>

83
00:04:25,230 --> 00:04:31,710
staff along<font color="#E5E5E5"> with Python and now I'm</font>

84
00:04:28,650 --> 00:04:33,840
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> explain the algorithm</font><font color="#CCCCCC"> more</font>

85
00:04:31,710 --> 00:04:36,210
clearly<font color="#CCCCCC"> so this is the control</font><font color="#E5E5E5"> flow</font>

86
00:04:33,840 --> 00:04:40,289
graph of a function as given by a rudder

87
00:04:36,210 --> 00:04:43,260
<font color="#E5E5E5">so basically we can</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> different code</font>

88
00:04:40,290 --> 00:04:48,300
blocks<font color="#E5E5E5"> so the first step to to be able</font>

89
00:04:43,260 --> 00:04:51,719
<font color="#E5E5E5">to to extract</font><font color="#CCCCCC"> a half from</font><font color="#E5E5E5"> this is to</font>

90
00:04:48,300 --> 00:04:55,400
<font color="#CCCCCC">labelled the blocks and the course we</font>

91
00:04:51,720 --> 00:05:00,390
<font color="#E5E5E5">are</font><font color="#CCCCCC"> only</font><font color="#E5E5E5"> using the blocks and the cool</font>

92
00:04:55,400 --> 00:05:03,299
<font color="#CCCCCC">form or fuzzier</font><font color="#E5E5E5"> so we just give a number</font>

93
00:05:00,390 --> 00:05:08,159
to every to a record block<font color="#E5E5E5"> and we</font>

94
00:05:03,300 --> 00:05:11,340
<font color="#CCCCCC">naughty we we see that there is a course</font>

95
00:05:08,160 --> 00:05:13,680
here after that we translate<font color="#CCCCCC"> it to</font><font color="#E5E5E5"> text</font>

96
00:05:11,340 --> 00:05:16,320
<font color="#E5E5E5">so basically we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see that the first</font>

97
00:05:13,680 --> 00:05:19,860
cut blocks isn't easily<font color="#E5E5E5"> jump into the</font>

98
00:05:16,320 --> 00:05:22,620
second one so<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> we translated by by</font>

99
00:05:19,860 --> 00:05:24,630
the beginning<font color="#E5E5E5"> of the string there after</font>

100
00:05:22,620 --> 00:05:30,390
afterwards we can see that<font color="#E5E5E5"> there is a</font>

101
00:05:24,630 --> 00:05:35,010
<font color="#CCCCCC">top shit after this we can see</font><font color="#E5E5E5"> that the</font>

102
00:05:30,390 --> 00:05:35,669
block<font color="#CCCCCC"> tube is calling</font><font color="#E5E5E5"> either three or</font>

103
00:05:35,010 --> 00:05:38,280
<font color="#E5E5E5">four</font>

104
00:05:35,669 --> 00:05:43,560
so we we translate it<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the to the</font>

105
00:05:38,280 --> 00:05:47,179
string<font color="#E5E5E5"> the next block</font><font color="#CCCCCC"> three is either</font>

106
00:05:43,560 --> 00:05:50,310
doing a call or<font color="#E5E5E5"> jump into</font><font color="#CCCCCC"> two so we</font>

107
00:05:47,180 --> 00:05:54,060
translated that<font color="#E5E5E5"> way and the same for the</font>

108
00:05:50,310 --> 00:05:56,130
fourth block which is<font color="#E5E5E5"> only returning so</font>

109
00:05:54,060 --> 00:06:01,470
there<font color="#E5E5E5"> isn't it's not jumping or</font>

110
00:05:56,130 --> 00:06:04,169
occurring anything from that we generate

111
00:06:01,470 --> 00:06:08,520
a<font color="#E5E5E5"> normal rush of the string so</font><font color="#CCCCCC"> to keep</font>

112
00:06:04,169 --> 00:06:12,448
the<font color="#CCCCCC"> why new</font><font color="#E5E5E5"> Mirage it's because it's not</font>

113
00:06:08,520 --> 00:06:14,758
<font color="#CCCCCC">a hash algorithm like md5 and sha-1 the</font>

114
00:06:12,449 --> 00:06:17,460
<font color="#E5E5E5">chef Emmalee there is no</font><font color="#CCCCCC"> avalanche</font>

115
00:06:14,759 --> 00:06:19,740
effect<font color="#E5E5E5"> if the if you modify only the</font>

116
00:06:17,460 --> 00:06:22,469
<font color="#CCCCCC">ends of the strings the Mirage is not</font>

117
00:06:19,740 --> 00:06:24,270
going to be changed entirely<font color="#E5E5E5"> so it's</font>

118
00:06:22,470 --> 00:06:30,090
quite efficient for what<font color="#CCCCCC"> we are trying</font>

119
00:06:24,270 --> 00:06:32,940
to<font color="#E5E5E5"> do and after that we repeat this</font>

120
00:06:30,090 --> 00:06:35,008
algorithm this smaller<font color="#CCCCCC"> guru rhythm for</font>

121
00:06:32,940 --> 00:06:37,199
every function<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the sample in the</font>

122
00:06:35,009 --> 00:06:41,159
<font color="#E5E5E5">binary and we then concatenate the hash</font>

123
00:06:37,199 --> 00:06:43,740
<font color="#E5E5E5">so the main consequence of this this</font>

124
00:06:41,159 --> 00:06:46,080
<font color="#E5E5E5">algorithm is that it depends on the</font>

125
00:06:43,740 --> 00:06:48,870
<font color="#CCCCCC">number of function</font><font color="#E5E5E5"> of the hash so the</font>

126
00:06:46,080 --> 00:06:51,300
<font color="#E5E5E5">biggest number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> function of the some</font>

127
00:06:48,870 --> 00:06:54,990
<font color="#CCCCCC">pairs the bigger</font><font color="#E5E5E5"> the hashes so it could</font>

128
00:06:51,300 --> 00:06:57,870
be<font color="#E5E5E5"> problematic in</font><font color="#CCCCCC"> some case with very</font>

129
00:06:54,990 --> 00:07:01,680
big company very<font color="#E5E5E5"> big</font><font color="#CCCCCC"> been erased</font><font color="#E5E5E5"> but</font>

130
00:06:57,870 --> 00:07:06,030
<font color="#E5E5E5">usually</font><font color="#CCCCCC"> Marwa some pairs are not</font><font color="#E5E5E5"> so it's</font>

131
00:07:01,680 --> 00:07:08,550
good<font color="#CCCCCC"> for this we</font><font color="#E5E5E5"> used the very few</font>

132
00:07:06,030 --> 00:07:13,530
commands<font color="#CCCCCC"> in inside</font><font color="#E5E5E5"> radar and</font><font color="#CCCCCC"> to pipe</font>

133
00:07:08,550 --> 00:07:15,590
mostly a a to analyze the second one to

134
00:07:13,530 --> 00:07:19,919
get some<font color="#E5E5E5"> information about the binary</font>

135
00:07:15,590 --> 00:07:21,719
<font color="#CCCCCC">the third one flg</font><font color="#E5E5E5"> to to produce a</font><font color="#CCCCCC"> json</font>

136
00:07:19,919 --> 00:07:24,318
listing the functions to be<font color="#E5E5E5"> able to</font>

137
00:07:21,719 --> 00:07:29,039
<font color="#CCCCCC">iterate over them using the first one</font>

138
00:07:24,319 --> 00:07:32,490
that is giving us<font color="#CCCCCC"> that giving us the</font>

139
00:07:29,039 --> 00:07:37,650
control<font color="#E5E5E5"> the CFG graph of the of the</font>

140
00:07:32,490 --> 00:07:40,380
function<font color="#E5E5E5"> so</font><font color="#CCCCCC"> the results we did</font><font color="#E5E5E5"> a first</font>

141
00:07:37,650 --> 00:07:43,799
<font color="#E5E5E5">analysis on on a small collection</font><font color="#CCCCCC"> of</font>

142
00:07:40,380 --> 00:07:46,919
<font color="#E5E5E5">some</font><font color="#CCCCCC"> pairs we classified by our rules so</font>

143
00:07:43,800 --> 00:07:49,800
there was more than 20,000 samples and

144
00:07:46,919 --> 00:07:54,719
then more than<font color="#CCCCCC"> 20 years thousands my 5</font>

145
00:07:49,800 --> 00:07:57,719
<font color="#CCCCCC">inshaa as expected we did the same</font><font color="#E5E5E5"> with</font>

146
00:07:54,719 --> 00:08:01,580
<font color="#E5E5E5">the SS deep to see what to have a kind</font>

147
00:07:57,719 --> 00:08:04,800
<font color="#E5E5E5">of reference and</font><font color="#CCCCCC"> we found the earth</font>

148
00:08:01,580 --> 00:08:07,800
<font color="#CCCCCC">10,000 basically and when we did</font><font color="#E5E5E5"> it with</font>

149
00:08:04,800 --> 00:08:11,430
our algorithm<font color="#CCCCCC"> at rocky</font><font color="#E5E5E5"> it was less</font><font color="#CCCCCC"> than</font>

150
00:08:07,800 --> 00:08:14,400
<font color="#CCCCCC">5,000 so it was quite promising as as a</font>

151
00:08:11,430 --> 00:08:19,080
way to classify<font color="#CCCCCC"> Marvel's so we can see</font>

152
00:08:14,400 --> 00:08:21,650
that at least 15,000 malware are related

153
00:08:19,080 --> 00:08:24,659
to any other

154
00:08:21,650 --> 00:08:27,388
we did<font color="#E5E5E5"> a second analysis on the banana</font>

155
00:08:24,660 --> 00:08:30,870
user pro-family<font color="#CCCCCC"> leaked by The Shadow</font>

156
00:08:27,389 --> 00:08:33,659
<font color="#CCCCCC">Broker</font><font color="#E5E5E5"> so basically we had 80 different</font>

157
00:08:30,870 --> 00:08:36,179
samples we knew from<font color="#E5E5E5"> the same family</font><font color="#CCCCCC"> and</font>

158
00:08:33,659 --> 00:08:37,229
there was only<font color="#E5E5E5"> three</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> Metro key</font>

159
00:08:36,179 --> 00:08:39,329
for all of them

160
00:08:37,229 --> 00:08:43,500
<font color="#E5E5E5">so it questions it's quite promising</font>

161
00:08:39,330 --> 00:08:47,970
<font color="#CCCCCC">actually</font><font color="#E5E5E5"> in the future we plan to add</font>

162
00:08:43,500 --> 00:08:51,330
<font color="#E5E5E5">the ability to perform</font><font color="#CCCCCC"> metric ef4</font><font color="#E5E5E5"> for</font>

163
00:08:47,970 --> 00:08:55,140
functions only of malware actually we

164
00:08:51,330 --> 00:08:58,649
are<font color="#E5E5E5"> only performing</font><font color="#CCCCCC"> maitake hash form</font>

165
00:08:55,140 --> 00:09:01,230
for the<font color="#E5E5E5"> wall</font><font color="#CCCCCC"> sampler we probably will</font><font color="#E5E5E5"> do</font>

166
00:08:58,649 --> 00:09:03,959
it for function as well<font color="#E5E5E5"> and we will</font>

167
00:09:01,230 --> 00:09:06,720
mainly try to include the integrate

168
00:09:03,959 --> 00:09:10,680
metric inside<font color="#E5E5E5"> other tool mostly miss</font>

169
00:09:06,720 --> 00:09:13,080
panel<font color="#CCCCCC"> viper</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> if we can do it will</font>

170
00:09:10,680 --> 00:09:17,010
<font color="#CCCCCC">correlation and crystallization</font><font color="#E5E5E5"> tool on</font>

171
00:09:13,080 --> 00:09:20,310
top<font color="#CCCCCC"> of it the</font><font color="#E5E5E5"> code is not yet public</font>

172
00:09:17,010 --> 00:09:22,290
with a little delay so it's<font color="#E5E5E5"> going it's</font>

173
00:09:20,310 --> 00:09:28,109
<font color="#E5E5E5">going to be public within</font><font color="#CCCCCC"> a few</font><font color="#E5E5E5"> days at</font>

174
00:09:22,290 --> 00:09:35,180
this<font color="#E5E5E5"> address that's all if you have any</font>

175
00:09:28,110 --> 00:09:35,180
question yeah

176
00:09:36,600 --> 00:09:40,610
I can tell<font color="#CCCCCC"> you're sorry</font>

177
00:09:59,090 --> 00:10:09,390
<font color="#E5E5E5">okay yeah so I'm curious if you could</font>

178
00:10:05,130 --> 00:10:12,270
<font color="#CCCCCC">relate parts of your hash</font><font color="#E5E5E5"> so they you</font>

179
00:10:09,390 --> 00:10:14,819
should<font color="#E5E5E5"> kind of interesting approach but</font>

180
00:10:12,270 --> 00:10:18,230
<font color="#E5E5E5">then it is if there is</font><font color="#CCCCCC"> a partial</font>

181
00:10:14,820 --> 00:10:22,050
correlation do you do this correlation

182
00:10:18,230 --> 00:10:24,870
<font color="#E5E5E5">so if you have a cache</font><font color="#CCCCCC"> yeah and you have</font>

183
00:10:22,050 --> 00:10:29,310
a special<font color="#CCCCCC"> present the structure of your</font>

184
00:10:24,870 --> 00:10:32,010
of your<font color="#E5E5E5"> sample but there could be a</font>

185
00:10:29,310 --> 00:10:33,779
partial correlation in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> hash so it's</font>

186
00:10:32,010 --> 00:10:36,600
<font color="#E5E5E5">not the</font><font color="#CCCCCC"> all hairs but</font><font color="#E5E5E5"> there is a partial</font>

187
00:10:33,779 --> 00:10:39,089
overlap<font color="#CCCCCC"> yeah do</font><font color="#E5E5E5"> you do this correlation</font>

188
00:10:36,600 --> 00:10:42,240
<font color="#E5E5E5">like if you compare samples you just</font>

189
00:10:39,089 --> 00:10:47,070
compare each and every syllable<font color="#E5E5E5"> there</font><font color="#CCCCCC"> oh</font>

190
00:10:42,240 --> 00:10:48,690
you can find partial correlation<font color="#E5E5E5"> like</font>

191
00:10:47,070 --> 00:10:51,870
<font color="#CCCCCC">eighty percent to</font><font color="#E5E5E5"> forty percent</font>

192
00:10:48,690 --> 00:10:54,870
<font color="#CCCCCC">I tell you we didn't try to do it yet we</font>

193
00:10:51,870 --> 00:10:57,330
just<font color="#CCCCCC"> try to to find</font><font color="#E5E5E5"> the direct</font>

194
00:10:54,870 --> 00:11:00,330
correlation<font color="#CCCCCC"> like the exact</font><font color="#E5E5E5"> same</font><font color="#CCCCCC"> ash</font><font color="#E5E5E5"> but</font>

195
00:10:57,330 --> 00:11:03,360
<font color="#E5E5E5">the hash is built in a</font><font color="#CCCCCC"> way that this</font><font color="#E5E5E5"> is</font>

196
00:11:00,330 --> 00:11:06,200
this can<font color="#E5E5E5"> be done but in my</font><font color="#CCCCCC"> opinion this</font>

197
00:11:03,360 --> 00:11:09,360
kind<font color="#E5E5E5"> of job is not to be done inside</font>

198
00:11:06,200 --> 00:11:12,030
this<font color="#E5E5E5"> tour it's a up to</font><font color="#CCCCCC"> intone the tool</font>

199
00:11:09,360 --> 00:11:12,870
to do<font color="#E5E5E5"> it like</font><font color="#CCCCCC"> clustering cluster yeah</font>

200
00:11:12,030 --> 00:11:15,540
<font color="#E5E5E5">exactly</font>

201
00:11:12,870 --> 00:11:18,990
<font color="#E5E5E5">clustering is up to another tool so and</font>

202
00:11:15,540 --> 00:11:22,050
it's quite a mathematical program so we

203
00:11:18,990 --> 00:11:23,700
just did this part so<font color="#E5E5E5"> far and we will</font>

204
00:11:22,050 --> 00:11:26,069
let<font color="#E5E5E5"> them maybe other people</font><font color="#CCCCCC"> do the</font>

205
00:11:23,700 --> 00:11:29,750
clustering<font color="#CCCCCC"> will using</font><font color="#E5E5E5"> the proper</font>

206
00:11:26,070 --> 00:11:29,750
mathematics and the proper algorithm

207
00:11:30,530 --> 00:11:34,490
<font color="#E5E5E5">sorry the question here</font>

208
00:11:43,120 --> 00:11:50,000
Lord we would be possible to<font color="#CCCCCC"> use it for</font>

209
00:11:46,579 --> 00:11:54,589
<font color="#E5E5E5">whitelisting approach like we just do it</font>

210
00:11:50,000 --> 00:11:57,769
all windows binaries<font color="#E5E5E5"> and it would be</font>

211
00:11:54,589 --> 00:12:01,490
possible<font color="#E5E5E5"> in theory</font><font color="#CCCCCC"> I would say but the</font>

212
00:11:57,769 --> 00:12:03,410
<font color="#CCCCCC">ashes are would be</font><font color="#E5E5E5"> quite huge because</font><font color="#CCCCCC"> it</font>

213
00:12:01,490 --> 00:12:06,500
depends on<font color="#E5E5E5"> the number of</font><font color="#CCCCCC"> function of</font><font color="#E5E5E5"> the</font>

214
00:12:03,410 --> 00:12:09,980
binary so it might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> possible but I'm</font>

215
00:12:06,500 --> 00:12:25,660
not sure it would<font color="#E5E5E5"> be very easy</font><font color="#CCCCCC"> and good</font>

216
00:12:09,980 --> 00:12:25,660
for performances any other question

217
00:12:32,000 --> 00:12:40,550
have you tried this tool against samples

218
00:12:36,920 --> 00:12:44,000
packed with<font color="#CCCCCC"> out a</font><font color="#E5E5E5"> eat for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> we've</font>

219
00:12:40,550 --> 00:12:47,149
we've tried it quickly<font color="#CCCCCC"> the packed</font>

220
00:12:44,000 --> 00:12:50,060
samples are a<font color="#CCCCCC"> recurrent question with</font>

221
00:12:47,149 --> 00:12:52,269
the CFG graph my initial<font color="#CCCCCC"> expectation</font>

222
00:12:50,060 --> 00:12:53,839
that was that it would<font color="#E5E5E5"> be possible to</font>

223
00:12:52,269 --> 00:12:57,889
<font color="#E5E5E5">recognize the</font><font color="#CCCCCC"> packer</font>

224
00:12:53,839 --> 00:12:59,930
directly from the<font color="#CCCCCC"> produce - it seems</font>

225
00:12:57,889 --> 00:13:06,040
that<font color="#E5E5E5"> it's not that</font><font color="#CCCCCC"> easy so we are still</font>

226
00:12:59,930 --> 00:13:12,560
working on<font color="#E5E5E5"> this topic</font><font color="#CCCCCC"> I mean the</font><font color="#E5E5E5"> mouth</font>

227
00:13:06,040 --> 00:13:16,040
the<font color="#E5E5E5"> outer they can create model by using</font>

228
00:13:12,560 --> 00:13:24,199
<font color="#CCCCCC">some tools like all to eat pie</font><font color="#E5E5E5"> and sour</font>

229
00:13:16,040 --> 00:13:29,899
<font color="#E5E5E5">and so on I don't get the point</font><font color="#CCCCCC"> so you</font>

230
00:13:24,199 --> 00:13:32,630
have like I don't<font color="#CCCCCC"> conduct executables</font>

231
00:13:29,899 --> 00:13:34,910
<font color="#E5E5E5">some some of them malicious some of them</font>

232
00:13:32,630 --> 00:13:39,050
are<font color="#E5E5E5"> not and all of them are created by</font>

233
00:13:34,910 --> 00:13:41,689
same<font color="#CCCCCC"> tool I copy it okay yeah for</font><font color="#E5E5E5"> this</font>

234
00:13:39,050 --> 00:13:44,089
we don't<font color="#E5E5E5"> have any and then Thursday yet</font>

235
00:13:41,690 --> 00:13:48,310
<font color="#CCCCCC">I don't know what would be the result</font>

236
00:13:44,089 --> 00:13:48,310
for<font color="#E5E5E5"> this we don't</font><font color="#CCCCCC"> write it</font>

237
00:13:53,889 --> 00:13:57,009
anyone else

