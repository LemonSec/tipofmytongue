1
00:00:00,100 --> 00:00:10,690
[Music]

2
00:00:08,400 --> 00:00:12,760
<font color="#CCCCCC">alright we'll go ahead and</font><font color="#E5E5E5"> get started</font>

3
00:00:10,690 --> 00:00:15,099
with<font color="#CCCCCC"> our talk here what we're talking</font>

4
00:00:12,760 --> 00:00:19,230
about today is aggressive autonomous

5
00:00:15,099 --> 00:00:19,230
actions and operating with automation

6
00:00:19,829 --> 00:00:25,089
<font color="#CCCCCC">real brief and quick high-level</font>

7
00:00:22,419 --> 00:00:27,220
information<font color="#CCCCCC"> my name is Chris hunter I am</font>

8
00:00:25,089 --> 00:00:29,560
a systems administrator turned red

9
00:00:27,220 --> 00:00:31,869
teamer<font color="#CCCCCC"> a very proud florida state</font>

10
00:00:29,560 --> 00:00:33,820
seminoles ever Bronco fan<font color="#E5E5E5"> I'm a</font>

11
00:00:31,869 --> 00:00:35,500
co-founder<font color="#E5E5E5"> of a security company called</font>

12
00:00:33,820 --> 00:00:38,260
<font color="#E5E5E5">40 north security were based out of</font>

13
00:00:35,500 --> 00:00:39,820
Colorado<font color="#E5E5E5"> and also I'm an open source</font>

14
00:00:38,260 --> 00:00:42,460
developer so I like<font color="#CCCCCC"> to</font><font color="#E5E5E5"> work on a bunch</font>

15
00:00:39,820 --> 00:00:44,739
<font color="#CCCCCC">of different tools veil</font><font color="#E5E5E5"> framework</font><font color="#CCCCCC"> win</font>

16
00:00:42,460 --> 00:00:46,480
the implant<font color="#CCCCCC"> I witness is just a name a</font>

17
00:00:44,739 --> 00:00:48,718
couple<font color="#E5E5E5"> that I've worked on plus uh plus</font>

18
00:00:46,480 --> 00:00:48,718
a lot more

19
00:00:49,649 --> 00:00:54,039
<font color="#E5E5E5">all right good</font><font color="#CCCCCC"> afternoon everyone</font>

20
00:00:51,579 --> 00:00:56,559
<font color="#CCCCCC">Who am I I'm red Quinn my name is Harley</font>

21
00:00:54,039 --> 00:00:59,280
<font color="#CCCCCC">LeBeau I'm a</font><font color="#E5E5E5"> system that network</font>

22
00:00:56,559 --> 00:01:02,019
administrator<font color="#CCCCCC"> turn red teamer pentester</font>

23
00:00:59,280 --> 00:01:04,780
<font color="#CCCCCC">previously I was</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> knight I was an</font><font color="#E5E5E5"> IT in</font>

24
00:01:02,019 --> 00:01:07,740
the Navy<font color="#E5E5E5"> for nine years and</font><font color="#CCCCCC"> I was a Red</font>

25
00:01:04,780 --> 00:01:10,330
<font color="#CCCCCC">Team technical lead over there and</font>

26
00:01:07,740 --> 00:01:14,410
currently I work at mandiant<font color="#CCCCCC"> I'm a Red</font>

27
00:01:10,330 --> 00:01:17,429
Team consultant they're not like<font color="#CCCCCC"> reverse</font>

28
00:01:14,410 --> 00:01:17,429
engineer thanks Chris

29
00:01:17,440 --> 00:01:22,420
there's my<font color="#E5E5E5"> github page</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> normally</font>

30
00:01:19,750 --> 00:01:25,360
operate with cobalt strike<font color="#E5E5E5"> and I do a</font>

31
00:01:22,420 --> 00:01:28,540
lot of<font color="#CCCCCC"> aggressor script writing I'm</font>

32
00:01:25,360 --> 00:01:31,140
married I<font color="#CCCCCC"> have a kid on the way and yeah</font>

33
00:01:28,540 --> 00:01:33,400
so that's<font color="#E5E5E5"> that's who I am</font>

34
00:01:31,140 --> 00:01:35,470
so let's get into what's<font color="#CCCCCC"> this talk</font><font color="#E5E5E5"> about</font>

35
00:01:33,400 --> 00:01:39,490
so<font color="#CCCCCC"> we're really</font><font color="#E5E5E5"> we're harping on</font>

36
00:01:35,470 --> 00:01:41,380
automation<font color="#E5E5E5"> here</font><font color="#CCCCCC"> so agressor aggressive</font>

37
00:01:39,490 --> 00:01:43,420
scripting is<font color="#E5E5E5"> is dealing</font><font color="#CCCCCC"> with cobalt</font>

38
00:01:41,380 --> 00:01:44,699
strike the framework<font color="#CCCCCC"> we'll get to we'll</font>

39
00:01:43,420 --> 00:01:47,050
get into<font color="#E5E5E5"> more</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> that a</font><font color="#CCCCCC"> little</font><font color="#E5E5E5"> bit later</font>

40
00:01:44,700 --> 00:01:48,910
but aggressor is essentially the

41
00:01:47,050 --> 00:01:53,500
event-driven language that's built into

42
00:01:48,910 --> 00:01:55,660
cobalt strike that we use that we<font color="#CCCCCC"> can</font>

43
00:01:53,500 --> 00:01:58,450
use quite<font color="#E5E5E5"> often so it's talking about</font>

44
00:01:55,660 --> 00:02:01,149
<font color="#E5E5E5">events that we care</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> talk about</font><font color="#CCCCCC"> the</font>

45
00:01:58,450 --> 00:02:02,560
assessment an attack<font color="#CCCCCC"> lifecycle and then</font>

46
00:02:01,150 --> 00:02:05,110
where can automation help in different

47
00:02:02,560 --> 00:02:10,289
<font color="#CCCCCC">stages of</font><font color="#E5E5E5"> a red team right</font><font color="#CCCCCC"> so we have</font>

48
00:02:05,110 --> 00:02:10,288
demos and links for you later on

49
00:02:10,830 --> 00:02:15,610
all right so what<font color="#E5E5E5"> is</font><font color="#CCCCCC"> this talk not about</font>

50
00:02:13,150 --> 00:02:17,799
<font color="#E5E5E5">this talk is</font><font color="#CCCCCC"> not about</font><font color="#E5E5E5"> automated</font>

51
00:02:15,610 --> 00:02:20,049
automating red<font color="#CCCCCC"> team's or automating any</font>

52
00:02:17,799 --> 00:02:21,430
sort of<font color="#CCCCCC"> pentesting in our opinion</font>

53
00:02:20,049 --> 00:02:23,230
there's something to be said<font color="#CCCCCC"> about</font><font color="#E5E5E5"> the</font>

54
00:02:21,430 --> 00:02:25,540
human element<font color="#CCCCCC"> it's kind of hard to just</font>

55
00:02:23,230 --> 00:02:27,970
<font color="#E5E5E5">completely automate something that can</font>

56
00:02:25,540 --> 00:02:29,829
be a creative<font color="#E5E5E5"> process</font><font color="#CCCCCC"> what happens if</font>

57
00:02:27,970 --> 00:02:32,080
you exploit fails the first<font color="#CCCCCC"> time what</font>

58
00:02:29,830 --> 00:02:33,849
does your<font color="#E5E5E5"> automation system handle that</font>

59
00:02:32,080 --> 00:02:35,760
<font color="#E5E5E5">what if it works the second time so</font>

60
00:02:33,849 --> 00:02:37,750
we're not<font color="#CCCCCC"> really</font><font color="#E5E5E5"> looking to do that and</font>

61
00:02:35,760 --> 00:02:39,609
we're really<font color="#CCCCCC"> just kind of talking about</font>

62
00:02:37,750 --> 00:02:41,769
<font color="#E5E5E5">how can you leverage automation for</font>

63
00:02:39,610 --> 00:02:43,870
different steps of<font color="#E5E5E5"> the attack</font><font color="#CCCCCC"> lifecycle</font>

64
00:02:41,769 --> 00:02:45,849
<font color="#E5E5E5">that you or in</font><font color="#CCCCCC"> another attacker would</font>

65
00:02:43,870 --> 00:02:50,319
normally follow<font color="#E5E5E5"> this isn't Skynet for</font>

66
00:02:45,849 --> 00:02:52,780
offensive<font color="#CCCCCC"> security work so automation</font>

67
00:02:50,319 --> 00:02:54,970
automation<font color="#E5E5E5"> is useful for a lot</font><font color="#CCCCCC"> of tasks</font>

68
00:02:52,780 --> 00:02:56,410
it's especially useful for<font color="#E5E5E5"> different</font>

69
00:02:54,970 --> 00:02:58,120
things<font color="#E5E5E5"> or actions</font><font color="#CCCCCC"> you may want to</font>

70
00:02:56,410 --> 00:03:00,489
<font color="#CCCCCC">perform</font><font color="#E5E5E5"> that don't actually require</font>

71
00:02:58,120 --> 00:03:03,340
either human interaction or any sort<font color="#CCCCCC"> of</font>

72
00:03:00,489 --> 00:03:05,140
analysis<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you need to do at some</font>

73
00:03:03,340 --> 00:03:07,329
<font color="#CCCCCC">point the other reason why we also</font><font color="#E5E5E5"> love</font>

74
00:03:05,140 --> 00:03:09,730
automation is people and<font color="#CCCCCC"> myself included</font>

75
00:03:07,329 --> 00:03:12,129
are inherently lazy<font color="#E5E5E5"> if I don't want to</font>

76
00:03:09,730 --> 00:03:14,500
have to conduct<font color="#E5E5E5"> the same step over and</font>

77
00:03:12,129 --> 00:03:16,660
over again<font color="#E5E5E5"> like</font><font color="#CCCCCC"> why would I do that</font><font color="#E5E5E5"> I'm</font>

78
00:03:14,500 --> 00:03:18,549
gonna<font color="#E5E5E5"> scrape that out and develop some</font>

79
00:03:16,660 --> 00:03:20,079
sort<font color="#E5E5E5"> of automated capability that will</font>

80
00:03:18,549 --> 00:03:22,750
<font color="#E5E5E5">do it</font><font color="#CCCCCC"> for me</font>

81
00:03:20,079 --> 00:03:25,239
trivial tasks are prime<font color="#E5E5E5"> candidates for</font>

82
00:03:22,750 --> 00:03:26,859
automation again<font color="#CCCCCC"> if it doesn't require</font>

83
00:03:25,239 --> 00:03:28,900
any sort<font color="#CCCCCC"> of analysis and it's</font><font color="#E5E5E5"> something</font>

84
00:03:26,859 --> 00:03:31,359
you<font color="#CCCCCC"> always do</font><font color="#E5E5E5"> maybe when you first</font>

85
00:03:28,900 --> 00:03:32,410
<font color="#E5E5E5">compromised a system or maybe after</font>

86
00:03:31,359 --> 00:03:34,510
you've captured credentials

87
00:03:32,410 --> 00:03:36,849
well let's automate<font color="#E5E5E5"> that capability so</font>

88
00:03:34,510 --> 00:03:39,280
<font color="#CCCCCC">it just runs in the background you know</font>

89
00:03:36,849 --> 00:03:40,840
it's gonna<font color="#CCCCCC"> work</font><font color="#E5E5E5"> and you can kind of just</font>

90
00:03:39,280 --> 00:03:43,389
leave it be and<font color="#CCCCCC"> let the computer handle</font>

91
00:03:40,840 --> 00:03:45,250
it so how long will<font color="#E5E5E5"> you so okay</font><font color="#CCCCCC"> so</font>

92
00:03:43,389 --> 00:03:47,200
different scenarios<font color="#CCCCCC"> for why you might</font>

93
00:03:45,250 --> 00:03:48,700
<font color="#CCCCCC">want to have automation is how long</font><font color="#E5E5E5"> will</font>

94
00:03:47,200 --> 00:03:50,619
you have initial<font color="#E5E5E5"> access to whatever</font>

95
00:03:48,700 --> 00:03:51,730
<font color="#CCCCCC">environment that you're targeting do you</font>

96
00:03:50,620 --> 00:03:54,099
have the right permissions<font color="#CCCCCC"> to install</font>

97
00:03:51,730 --> 00:03:55,899
persistence<font color="#E5E5E5"> can you install persistence</font>

98
00:03:54,099 --> 00:03:57,810
fast enough<font color="#E5E5E5"> before a user logs off</font><font color="#CCCCCC"> the</font>

99
00:03:55,900 --> 00:04:00,519
<font color="#CCCCCC">workstations shut down</font><font color="#E5E5E5"> whatever it is</font>

100
00:03:57,810 --> 00:04:02,579
automation<font color="#CCCCCC"> can help handle and account</font>

101
00:04:00,519 --> 00:04:05,019
for<font color="#CCCCCC"> all of these different scenarios</font>

102
00:04:02,579 --> 00:04:06,699
<font color="#E5E5E5">there's also additional benefits beyond</font>

103
00:04:05,019 --> 00:04:09,280
<font color="#E5E5E5">letting us sit</font><font color="#CCCCCC"> and watch something</font><font color="#E5E5E5"> else</font>

104
00:04:06,699 --> 00:04:10,840
do our job<font color="#CCCCCC"> the other aspect</font><font color="#E5E5E5"> is you can</font>

105
00:04:09,280 --> 00:04:13,150
ensure that<font color="#CCCCCC"> whatever tasks</font><font color="#E5E5E5"> you're</font>

106
00:04:10,840 --> 00:04:15,699
automating<font color="#CCCCCC"> is always done</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> the same</font>

107
00:04:13,150 --> 00:04:17,140
<font color="#E5E5E5">way at every time when it comes to human</font>

108
00:04:15,699 --> 00:04:18,579
processes or<font color="#E5E5E5"> a different tasks</font><font color="#CCCCCC"> that</font>

109
00:04:17,140 --> 00:04:20,680
<font color="#CCCCCC">people are going to</font><font color="#E5E5E5"> follow you don't</font>

110
00:04:18,579 --> 00:04:22,420
want to ideally you have<font color="#E5E5E5"> processes</font>

111
00:04:20,680 --> 00:04:23,920
drafted<font color="#E5E5E5"> out</font>

112
00:04:22,420 --> 00:04:26,080
methodology<font color="#CCCCCC"> for someone to follow again</font>

113
00:04:23,920 --> 00:04:28,390
but if they don't follow it to<font color="#CCCCCC"> the tea</font>

114
00:04:26,080 --> 00:04:29,859
or maybe<font color="#E5E5E5"> add their own flair to</font><font color="#CCCCCC"> it then</font>

115
00:04:28,390 --> 00:04:32,080
it may not<font color="#E5E5E5"> be</font><font color="#CCCCCC"> done</font><font color="#E5E5E5"> exactly the way</font><font color="#CCCCCC"> you</font>

116
00:04:29,860 --> 00:04:33,460
want so automation<font color="#E5E5E5"> can something</font><font color="#CCCCCC"> that</font>

117
00:04:32,080 --> 00:04:35,370
can<font color="#E5E5E5"> help protect the integrity of</font>

118
00:04:33,460 --> 00:04:38,229
whatever it is you're<font color="#E5E5E5"> trying to do and</font>

119
00:04:35,370 --> 00:04:40,930
conduct that for you additionally it<font color="#CCCCCC"> can</font>

120
00:04:38,230 --> 00:04:43,960
also help prevent<font color="#E5E5E5"> user error</font><font color="#CCCCCC"> if you can</font>

121
00:04:40,930 --> 00:04:45,400
automate running me me cats<font color="#E5E5E5"> or doing</font>

122
00:04:43,960 --> 00:04:47,469
whatever step it is that you want<font color="#E5E5E5"> to do</font>

123
00:04:45,400 --> 00:04:49,719
<font color="#CCCCCC">then it's done it's out of the hands of</font>

124
00:04:47,470 --> 00:04:51,850
human operators<font color="#E5E5E5"> and finally it helps</font>

125
00:04:49,720 --> 00:04:54,400
<font color="#E5E5E5">ensure</font><font color="#CCCCCC"> that a uniform process is really</font>

126
00:04:51,850 --> 00:04:59,440
always<font color="#E5E5E5"> followed anytime that you are</font>

127
00:04:54,400 --> 00:05:01,120
doing a step in the<font color="#E5E5E5"> test so how can</font><font color="#CCCCCC"> red</font>

128
00:04:59,440 --> 00:05:02,890
teams or pen testers use<font color="#E5E5E5"> automation on</font>

129
00:05:01,120 --> 00:05:05,350
<font color="#E5E5E5">tasks</font><font color="#CCCCCC"> so like dog</font><font color="#E5E5E5"> sheep was an easiest</font>

130
00:05:02,890 --> 00:05:07,210
way to do it well<font color="#E5E5E5"> open-source</font><font color="#CCCCCC"> if you're</font>

131
00:05:05,350 --> 00:05:09,160
using<font color="#CCCCCC"> Metasploit you can use something</font>

132
00:05:07,210 --> 00:05:10,930
like a<font color="#CCCCCC"> Metasploit resource script</font><font color="#E5E5E5"> that's</font>

133
00:05:09,160 --> 00:05:12,250
a quick and<font color="#CCCCCC"> easy way to go ahead</font><font color="#E5E5E5"> and</font>

134
00:05:10,930 --> 00:05:13,860
make sure<font color="#E5E5E5"> that whenever something</font>

135
00:05:12,250 --> 00:05:16,150
<font color="#CCCCCC">happens or</font><font color="#E5E5E5"> the second you start up</font>

136
00:05:13,860 --> 00:05:17,980
<font color="#CCCCCC">Metasploit that certain</font><font color="#E5E5E5"> actions are</font>

137
00:05:16,150 --> 00:05:20,140
carried<font color="#E5E5E5"> out well how do we do it</font>

138
00:05:17,980 --> 00:05:23,320
we're both actually<font color="#E5E5E5"> cobalt strike shops</font>

139
00:05:20,140 --> 00:05:25,030
<font color="#E5E5E5">for</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of what we do and it</font><font color="#CCCCCC"> Cole ball</font>

140
00:05:23,320 --> 00:05:26,710
strike has this capability called

141
00:05:25,030 --> 00:05:28,330
<font color="#CCCCCC">aggressor we can make</font><font color="#E5E5E5"> aggressive scripts</font>

142
00:05:26,710 --> 00:05:31,599
<font color="#E5E5E5">and this will allow us</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> actually</font>

143
00:05:28,330 --> 00:05:33,820
<font color="#E5E5E5">automate almost anything that you</font><font color="#CCCCCC"> will</font>

144
00:05:31,600 --> 00:05:39,100
do post exploitation<font color="#E5E5E5"> in on your</font>

145
00:05:33,820 --> 00:05:41,380
assessments<font color="#E5E5E5"> all right so let's talk</font>

146
00:05:39,100 --> 00:05:42,550
<font color="#CCCCCC">about</font><font color="#E5E5E5"> aggressor</font><font color="#CCCCCC"> and what it is so it</font>

147
00:05:41,380 --> 00:05:44,230
<font color="#E5E5E5">really</font><font color="#CCCCCC"> aggressor it's</font><font color="#E5E5E5"> a scripting</font>

148
00:05:42,550 --> 00:05:46,200
language built into cobalt strike it was

149
00:05:44,230 --> 00:05:48,130
it was introduced<font color="#E5E5E5"> in</font><font color="#CCCCCC"> the version</font><font color="#E5E5E5"> 3.0</font>

150
00:05:46,200 --> 00:05:50,770
<font color="#CCCCCC">before</font><font color="#E5E5E5"> that you might have recognized</font>

151
00:05:48,130 --> 00:05:52,270
<font color="#E5E5E5">Cortana that's what it was before</font><font color="#CCCCCC"> but</font>

152
00:05:50,770 --> 00:05:53,440
<font color="#E5E5E5">it's based on the language</font><font color="#CCCCCC"> called sleep</font>

153
00:05:52,270 --> 00:05:56,950
and<font color="#E5E5E5"> this is something that</font><font color="#CCCCCC"> where I</font><font color="#E5E5E5"> field</font>

154
00:05:53,440 --> 00:05:58,900
much the<font color="#E5E5E5"> Creator created so there's that</font>

155
00:05:56,950 --> 00:06:01,020
for you aggress<font color="#CCCCCC"> err it lets you automate</font>

156
00:05:58,900 --> 00:06:03,370
operator actions<font color="#CCCCCC"> manipulate</font><font color="#E5E5E5"> data</font>

157
00:06:01,020 --> 00:06:05,020
generate reports<font color="#E5E5E5"> all kinds of different</font>

158
00:06:03,370 --> 00:06:06,250
<font color="#CCCCCC">things you</font><font color="#E5E5E5"> can do with it</font>

159
00:06:05,020 --> 00:06:08,080
and it's not<font color="#CCCCCC"> a standard programming</font>

160
00:06:06,250 --> 00:06:11,830
<font color="#E5E5E5">language right so it's something</font><font color="#CCCCCC"> that</font>

161
00:06:08,080 --> 00:06:17,289
was created<font color="#CCCCCC"> by</font><font color="#E5E5E5"> by Raphael</font><font color="#CCCCCC"> maje and it's</font>

162
00:06:11,830 --> 00:06:19,150
definitely<font color="#CCCCCC"> driven off of events yeah so</font>

163
00:06:17,290 --> 00:06:22,150
event-driven language so<font color="#E5E5E5"> what does that</font>

164
00:06:19,150 --> 00:06:23,770
<font color="#E5E5E5">mean</font><font color="#CCCCCC"> so it</font><font color="#E5E5E5"> doesn't generate a compiled</font>

165
00:06:22,150 --> 00:06:25,750
binary for you that you run<font color="#CCCCCC"> on a</font>

166
00:06:23,770 --> 00:06:27,460
computer<font color="#E5E5E5"> rather than starting a program</font>

167
00:06:25,750 --> 00:06:30,340
<font color="#E5E5E5">your code is</font><font color="#CCCCCC"> triggered when</font><font color="#E5E5E5"> a specific</font>

168
00:06:27,460 --> 00:06:32,590
<font color="#CCCCCC">event occurs</font><font color="#E5E5E5"> right so think similar to</font>

169
00:06:30,340 --> 00:06:35,169
<font color="#CCCCCC">WMI events right you Krang a logon</font>

170
00:06:32,590 --> 00:06:36,119
process within<font color="#CCCCCC"> WMI you're crying every</font>

171
00:06:35,170 --> 00:06:37,979
time<font color="#E5E5E5"> someone logs</font>

172
00:06:36,120 --> 00:06:41,130
and then something<font color="#E5E5E5"> after</font><font color="#CCCCCC"> that happens</font>

173
00:06:37,979 --> 00:06:42,990
based on that<font color="#E5E5E5"> action</font><font color="#CCCCCC"> so kind</font><font color="#E5E5E5"> of like IRC</font>

174
00:06:41,130 --> 00:06:44,729
BOTS right<font color="#E5E5E5"> you have IRC BOTS do</font>

175
00:06:42,990 --> 00:06:47,880
something for you based on<font color="#E5E5E5"> whatever</font>

176
00:06:44,729 --> 00:06:49,380
<font color="#E5E5E5">survey</font><font color="#CCCCCC"> your connect to so a grassroots</font>

177
00:06:47,880 --> 00:06:51,690
room by events<font color="#CCCCCC"> that happen</font><font color="#E5E5E5"> while it's</font>

178
00:06:49,380 --> 00:06:54,090
running<font color="#CCCCCC"> these are</font><font color="#E5E5E5"> clearly</font><font color="#CCCCCC"> related</font><font color="#E5E5E5"> to</font>

179
00:06:51,690 --> 00:06:58,199
actions<font color="#E5E5E5"> that occur while compromising a</font>

180
00:06:54,090 --> 00:07:00,960
system so let's get down<font color="#CCCCCC"> to the core so</font>

181
00:06:58,199 --> 00:07:02,970
aggressor again saying<font color="#E5E5E5"> that's based on</font>

182
00:07:00,960 --> 00:07:05,219
language sleep there's a link<font color="#CCCCCC"> for you</font><font color="#E5E5E5"> if</font>

183
00:07:02,970 --> 00:07:07,410
you want<font color="#E5E5E5"> to look</font><font color="#CCCCCC"> more</font><font color="#E5E5E5"> into it</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's</font>

184
00:07:05,220 --> 00:07:10,410
also a Java based scripting language

185
00:07:07,410 --> 00:07:11,910
heavily inspired by Perl<font color="#E5E5E5"> which is kind</font>

186
00:07:10,410 --> 00:07:14,699
<font color="#E5E5E5">of kind of discussing when you think</font>

187
00:07:11,910 --> 00:07:16,860
about it but<font color="#CCCCCC"> aggressor is an additional</font>

188
00:07:14,699 --> 00:07:19,770
set of<font color="#E5E5E5"> exposed functions</font><font color="#CCCCCC"> it has</font><font color="#E5E5E5"> its own</font>

189
00:07:16,860 --> 00:07:23,550
functionality<font color="#E5E5E5"> as well</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> top of sleep</font>

190
00:07:19,770 --> 00:07:28,948
functionality<font color="#E5E5E5"> so extending that provides</font>

191
00:07:23,550 --> 00:07:30,449
<font color="#E5E5E5">more possibilities and</font><font color="#CCCCCC"> capabilities so</font>

192
00:07:28,949 --> 00:07:32,760
<font color="#CCCCCC">agressor it has the ability to</font><font color="#E5E5E5"> interact</font>

193
00:07:30,449 --> 00:07:34,710
with<font color="#CCCCCC"> Cobalt strike</font><font color="#E5E5E5"> the beacons and also</font>

194
00:07:32,760 --> 00:07:36,840
the metadata within<font color="#CCCCCC"> Cobalt strike</font><font color="#E5E5E5"> you</font>

195
00:07:34,710 --> 00:07:38,150
<font color="#E5E5E5">can you can interact with the GUI you</font>

196
00:07:36,840 --> 00:07:40,169
can run commands within<font color="#E5E5E5"> a beacon</font>

197
00:07:38,150 --> 00:07:42,359
interpret those results<font color="#CCCCCC"> when they come</font>

198
00:07:40,169 --> 00:07:44,940
back<font color="#E5E5E5"> interpret the</font><font color="#CCCCCC"> output that</font><font color="#E5E5E5"> comes</font>

199
00:07:42,360 --> 00:07:48,120
back<font color="#E5E5E5"> and then make</font><font color="#CCCCCC"> a decision based</font><font color="#E5E5E5"> off</font>

200
00:07:44,940 --> 00:07:49,889
of<font color="#CCCCCC"> that output so it's super useful</font><font color="#E5E5E5"> you</font>

201
00:07:48,120 --> 00:07:53,250
<font color="#E5E5E5">can interact with downloaded screenshots</font>

202
00:07:49,889 --> 00:07:55,830
<font color="#E5E5E5">key log data modify sites hosted by</font>

203
00:07:53,250 --> 00:07:57,870
<font color="#CCCCCC">cobalt strike you can interact with</font>

204
00:07:55,830 --> 00:08:00,180
credentials<font color="#E5E5E5"> that you get back on</font><font color="#CCCCCC"> your</font>

205
00:07:57,870 --> 00:08:02,340
<font color="#E5E5E5">team server and then you</font><font color="#CCCCCC"> can also</font>

206
00:08:00,180 --> 00:08:06,320
<font color="#E5E5E5">develop customer reports which is very</font>

207
00:08:02,340 --> 00:08:08,638
important as we all know for customers

208
00:08:06,320 --> 00:08:10,169
<font color="#E5E5E5">all right so a</font><font color="#CCCCCC"> crystal good thing how</font>

209
00:08:08,639 --> 00:08:14,580
can you interact with<font color="#E5E5E5"> aggressor and</font>

210
00:08:10,169 --> 00:08:15,448
write some scripts up so<font color="#CCCCCC"> depression</font>

211
00:08:14,580 --> 00:08:17,479
scripting utilizes different

212
00:08:15,449 --> 00:08:20,280
<font color="#CCCCCC">functionality to enable its developers</font>

213
00:08:17,479 --> 00:08:23,789
so let's talk<font color="#CCCCCC"> about a</font><font color="#E5E5E5"> few things</font><font color="#CCCCCC"> that it</font>

214
00:08:20,280 --> 00:08:26,219
does it<font color="#E5E5E5"> it has so events right so</font>

215
00:08:23,789 --> 00:08:27,719
aggressor events initiates<font color="#E5E5E5"> and then runs</font>

216
00:08:26,220 --> 00:08:30,449
your code when specific<font color="#E5E5E5"> action occurs</font>

217
00:08:27,720 --> 00:08:32,039
and then functions the functions allow

218
00:08:30,449 --> 00:08:34,140
you to run<font color="#E5E5E5"> the checks based on those</font>

219
00:08:32,039 --> 00:08:36,429
<font color="#E5E5E5">actions right so you can run a command</font>

220
00:08:34,140 --> 00:08:38,130
within beacon

221
00:08:36,429 --> 00:08:40,718
<font color="#E5E5E5">you can do all kinds of other things</font>

222
00:08:38,130 --> 00:08:42,370
<font color="#E5E5E5">hooks this allows you to generate pop-up</font>

223
00:08:40,719 --> 00:08:44,680
menus and really interact<font color="#CCCCCC"> with</font><font color="#E5E5E5"> the GUI</font>

224
00:08:42,370 --> 00:08:46,120
of<font color="#CCCCCC"> COBOL strike itself which is kind</font><font color="#E5E5E5"> of</font>

225
00:08:44,680 --> 00:08:48,760
extending the client when you're when

226
00:08:46,120 --> 00:08:49,990
you're<font color="#CCCCCC"> operating and then</font><font color="#E5E5E5"> the data model</font>

227
00:08:48,760 --> 00:08:52,000
these<font color="#CCCCCC"> are</font><font color="#E5E5E5"> different data model</font>

228
00:08:49,990 --> 00:08:54,850
repositories that<font color="#E5E5E5"> COBOL strike uses</font>

229
00:08:52,000 --> 00:08:56,529
their store<font color="#CCCCCC"> to stop in files you can</font>

230
00:08:54,850 --> 00:09:01,240
interact<font color="#E5E5E5"> with those before</font><font color="#CCCCCC"> they actually</font>

231
00:08:56,529 --> 00:09:02,920
get stored in the bin files so let's

232
00:09:01,240 --> 00:09:05,740
<font color="#CCCCCC">talk</font><font color="#E5E5E5"> some about some</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> events that</font>

233
00:09:02,920 --> 00:09:08,529
<font color="#E5E5E5">you can actually use and code with right</font>

234
00:09:05,740 --> 00:09:10,510
so<font color="#E5E5E5"> beacon initial so this is when a</font>

235
00:09:08,529 --> 00:09:12,580
first beacon comes in right first checks

236
00:09:10,510 --> 00:09:14,110
in you get<font color="#E5E5E5"> that phishing</font><font color="#CCCCCC"> callback come</font>

237
00:09:12,580 --> 00:09:16,390
in and you're like<font color="#CCCCCC"> all</font><font color="#E5E5E5"> right what do I</font>

238
00:09:14,110 --> 00:09:18,279
do next<font color="#CCCCCC"> well you can use this event to</font>

239
00:09:16,390 --> 00:09:20,920
trigger<font color="#CCCCCC"> say you want</font><font color="#E5E5E5"> to dump the</font>

240
00:09:18,279 --> 00:09:22,300
passwords right or you want to start a

241
00:09:20,920 --> 00:09:26,170
<font color="#E5E5E5">key</font><font color="#CCCCCC"> logger you</font><font color="#E5E5E5"> can do that with this</font>

242
00:09:22,300 --> 00:09:27,490
<font color="#E5E5E5">event</font><font color="#CCCCCC"> so some others here event join it</font>

243
00:09:26,170 --> 00:09:29,800
occurs<font color="#E5E5E5"> when a new user connects to your</font>

244
00:09:27,490 --> 00:09:31,420
team server<font color="#E5E5E5"> right so you can you can</font>

245
00:09:29,800 --> 00:09:33,640
restrict them to<font color="#E5E5E5"> certain commands if you</font>

246
00:09:31,420 --> 00:09:35,729
know they're<font color="#CCCCCC"> just</font><font color="#E5E5E5"> beginning and you want</font>

247
00:09:33,640 --> 00:09:38,949
to give them<font color="#E5E5E5"> a certain</font><font color="#CCCCCC"> object</font><font color="#E5E5E5"> profile</font>

248
00:09:35,730 --> 00:09:41,320
heartbeats<font color="#E5E5E5"> underscore star so this event</font>

249
00:09:38,950 --> 00:09:43,260
<font color="#E5E5E5">occurs every seconds or minutes so now</font>

250
00:09:41,320 --> 00:09:45,970
we're<font color="#E5E5E5"> talking about timing right so</font>

251
00:09:43,260 --> 00:09:48,670
instead<font color="#E5E5E5"> of instead of when a beacon</font>

252
00:09:45,970 --> 00:09:50,920
comes in we want to<font color="#E5E5E5"> do it every</font><font color="#CCCCCC"> 5</font>

253
00:09:48,670 --> 00:09:53,770
<font color="#E5E5E5">minutes</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> 10</font><font color="#CCCCCC"> minutes or</font><font color="#E5E5E5"> 15</font><font color="#CCCCCC"> minutes you</font>

254
00:09:50,920 --> 00:09:57,010
<font color="#CCCCCC">can</font><font color="#E5E5E5"> choose</font><font color="#CCCCCC"> that time</font><font color="#E5E5E5"> interval</font><font color="#CCCCCC"> to to</font>

255
00:09:53,770 --> 00:09:58,360
trigger an<font color="#CCCCCC"> action and then</font><font color="#E5E5E5"> SSH initial</font>

256
00:09:57,010 --> 00:10:00,400
so that's another<font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that was</font>

257
00:09:58,360 --> 00:10:03,339
introduced in<font color="#E5E5E5"> the cobalt strike is the</font>

258
00:10:00,400 --> 00:10:05,140
SSH client so if you have SSH creds<font color="#CCCCCC"> it</font>

259
00:10:03,339 --> 00:10:07,480
kind<font color="#CCCCCC"> of acts like</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> beacon has its own</font>

260
00:10:05,140 --> 00:10:12,130
<font color="#E5E5E5">functionality within that so you can use</font>

261
00:10:07,480 --> 00:10:13,660
that<font color="#E5E5E5"> event for that so a</font><font color="#CCCCCC"> lot of times we</font>

262
00:10:12,130 --> 00:10:14,920
<font color="#E5E5E5">have DNS beacons set up right and when</font>

263
00:10:13,660 --> 00:10:16,480
they first<font color="#CCCCCC"> check in we don't</font><font color="#E5E5E5"> get any</font>

264
00:10:14,920 --> 00:10:19,959
data<font color="#E5E5E5"> back we just</font><font color="#CCCCCC"> kind of get like</font><font color="#E5E5E5"> a</font>

265
00:10:16,480 --> 00:10:22,209
blank<font color="#E5E5E5"> bacon that comes in which</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> kind</font>

266
00:10:19,959 --> 00:10:25,420
of<font color="#E5E5E5"> weird right so initially what we want</font>

267
00:10:22,209 --> 00:10:28,180
to do is type<font color="#CCCCCC"> the check in command</font><font color="#E5E5E5"> or</font>

268
00:10:25,420 --> 00:10:30,270
set the mode<font color="#E5E5E5"> right sometimes when you</font>

269
00:10:28,180 --> 00:10:32,620
set the mode you<font color="#E5E5E5"> actually get data back</font>

270
00:10:30,270 --> 00:10:34,569
<font color="#E5E5E5">there's an event for that so beacon</font>

271
00:10:32,620 --> 00:10:36,850
initial empty it triggers when the team

272
00:10:34,570 --> 00:10:39,250
server receives an empty beacon

273
00:10:36,850 --> 00:10:40,959
more specifically the DNS beacon<font color="#CCCCCC"> so then</font>

274
00:10:39,250 --> 00:10:44,790
you can<font color="#E5E5E5"> actually have</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> already run</font>

275
00:10:40,959 --> 00:10:44,790
those commands for you when it comes<font color="#E5E5E5"> in</font>

276
00:10:45,400 --> 00:10:49,610
some some<font color="#CCCCCC"> more events that expose</font>

277
00:10:47,810 --> 00:10:53,540
different objects<font color="#E5E5E5"> depending</font><font color="#CCCCCC"> on the event</font>

278
00:10:49,610 --> 00:10:55,790
<font color="#CCCCCC">so this</font><font color="#E5E5E5"> is talking about</font><font color="#CCCCCC"> interacting</font>

279
00:10:53,540 --> 00:10:57,500
<font color="#CCCCCC">with beacon itself so this will provide</font>

280
00:10:55,790 --> 00:10:59,630
<font color="#CCCCCC">so beacon initial will provide</font><font color="#E5E5E5"> a handle</font>

281
00:10:57,500 --> 00:11:02,630
into the individual beacon checking in

282
00:10:59,630 --> 00:11:05,420
this I can perform<font color="#E5E5E5"> individual actions</font>

283
00:11:02,630 --> 00:11:07,010
<font color="#E5E5E5">based on that beacon itself a heartbeat</font>

284
00:11:05,420 --> 00:11:08,660
underscore star<font color="#E5E5E5"> it doesn't expose</font>

285
00:11:07,010 --> 00:11:10,460
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> however</font><font color="#CCCCCC"> you can use this</font>

286
00:11:08,660 --> 00:11:13,520
function<font color="#E5E5E5"> to iterate all over all the</font>

287
00:11:10,460 --> 00:11:15,770
beacons right so that's kind<font color="#CCCCCC"> of what</font>

288
00:11:13,520 --> 00:11:20,540
that underscore star means and it

289
00:11:15,770 --> 00:11:21,500
provides you access to<font color="#CCCCCC"> all of them so</font>

290
00:11:20,540 --> 00:11:23,120
there are large number of<font color="#CCCCCC"> events</font><font color="#E5E5E5"> that</font>

291
00:11:21,500 --> 00:11:25,610
<font color="#E5E5E5">you can use to trigger your code it's</font>

292
00:11:23,120 --> 00:11:28,220
all<font color="#E5E5E5"> documented on that link there</font><font color="#CCCCCC"> so</font>

293
00:11:25,610 --> 00:11:31,700
<font color="#CCCCCC">feel free to go there</font><font color="#E5E5E5"> after this</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

294
00:11:28,220 --> 00:11:34,070
<font color="#E5E5E5">create your own custom events</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> part</font>

295
00:11:31,700 --> 00:11:35,840
<font color="#E5E5E5">is not user expandable however you can</font>

296
00:11:34,070 --> 00:11:37,910
always ask<font color="#E5E5E5"> if you can think of a useful</font>

297
00:11:35,840 --> 00:11:39,830
trigger<font color="#E5E5E5"> that you want to use based on</font>

298
00:11:37,910 --> 00:11:43,550
certain<font color="#CCCCCC"> events that might happen during</font>

299
00:11:39,830 --> 00:11:45,350
<font color="#CCCCCC">your engagement so let's talk about</font>

300
00:11:43,550 --> 00:11:48,229
aggressor functions right aggressor

301
00:11:45,350 --> 00:11:49,820
functions are just<font color="#CCCCCC"> by themselves and</font>

302
00:11:48,230 --> 00:11:52,070
they deal specifically with aggressor

303
00:11:49,820 --> 00:11:53,930
this isn't part of sleep or anything but

304
00:11:52,070 --> 00:11:55,970
<font color="#E5E5E5">this is</font><font color="#CCCCCC"> definitely part of aggressor</font>

305
00:11:53,930 --> 00:11:59,870
script<font color="#CCCCCC"> so this is the code that you can</font>

306
00:11:55,970 --> 00:12:01,220
<font color="#CCCCCC">use to differentiate</font><font color="#E5E5E5"> between whatever</font>

307
00:11:59,870 --> 00:12:05,540
functions you want to<font color="#E5E5E5"> use based on</font>

308
00:12:01,220 --> 00:12:07,340
certain actions<font color="#CCCCCC"> so but keep in mind you</font>

309
00:12:05,540 --> 00:12:09,199
can still incorporate sleep within

310
00:12:07,340 --> 00:12:11,150
aggressor functions itself<font color="#E5E5E5"> so it's kind</font>

311
00:12:09,200 --> 00:12:12,830
of<font color="#E5E5E5"> complicated</font><font color="#CCCCCC"> kind of confusing but as</font>

312
00:12:11,150 --> 00:12:15,050
you can<font color="#E5E5E5"> see there there's a check there</font>

313
00:12:12,830 --> 00:12:17,150
for is admin so that's an<font color="#CCCCCC"> agressor</font>

314
00:12:15,050 --> 00:12:19,400
function that says check to see if this

315
00:12:17,150 --> 00:12:21,530
<font color="#E5E5E5">user session that comes in has admin</font>

316
00:12:19,400 --> 00:12:24,079
rights right<font color="#E5E5E5"> check to see if this beacon</font>

317
00:12:21,530 --> 00:12:25,459
came back as an admin<font color="#E5E5E5"> if it did we can</font>

318
00:12:24,080 --> 00:12:28,010
do we can<font color="#CCCCCC"> set</font><font color="#E5E5E5"> up certain conditional</font>

319
00:12:25,460 --> 00:12:31,870
statements to say<font color="#E5E5E5"> hey if this</font><font color="#CCCCCC"> is an</font>

320
00:12:28,010 --> 00:12:31,870
admin let's dump<font color="#CCCCCC"> passwords right away</font>

321
00:12:32,260 --> 00:12:36,260
so some<font color="#CCCCCC"> of the functions we can run</font>

322
00:12:34,250 --> 00:12:38,510
through here<font color="#E5E5E5"> be</font><font color="#CCCCCC"> PowerShell import</font><font color="#E5E5E5"> it's a</font>

323
00:12:36,260 --> 00:12:39,530
<font color="#E5E5E5">major one I use</font><font color="#CCCCCC"> all the</font><font color="#E5E5E5"> time</font><font color="#CCCCCC"> these are</font>

324
00:12:38,510 --> 00:12:41,630
<font color="#CCCCCC">the ones that</font><font color="#E5E5E5"> you're going to use to</font>

325
00:12:39,530 --> 00:12:44,689
import<font color="#E5E5E5"> a PowerShell script that you want</font>

326
00:12:41,630 --> 00:12:46,760
to use so like<font color="#CCCCCC"> powersploit scripts you</font>

327
00:12:44,690 --> 00:12:48,320
want to use those<font color="#CCCCCC"> you know it's</font><font color="#E5E5E5"> that way</font>

328
00:12:46,760 --> 00:12:50,240
<font color="#E5E5E5">you can run the</font><font color="#CCCCCC"> PowerShell function</font>

329
00:12:48,320 --> 00:12:52,610
afterwards<font color="#E5E5E5"> and it imports it into memory</font>

330
00:12:50,240 --> 00:12:54,320
<font color="#E5E5E5">for you</font><font color="#CCCCCC"> but all</font><font color="#E5E5E5"> these functions are on</font>

331
00:12:52,610 --> 00:12:56,300
the back end right so with<font color="#CCCCCC"> aggressor so</font>

332
00:12:54,320 --> 00:12:57,500
you can write a script<font color="#CCCCCC"> to automate it</font><font color="#E5E5E5"> to</font>

333
00:12:56,300 --> 00:12:59,839
make<font color="#E5E5E5"> sure that like</font>

334
00:12:57,500 --> 00:13:02,390
hey if it's an admin<font color="#E5E5E5"> let's go ahead and</font>

335
00:12:59,840 --> 00:13:04,820
run<font color="#E5E5E5"> all checks or let's do if it's not</font>

336
00:13:02,390 --> 00:13:06,470
an admin let's do power sploit and and

337
00:13:04,820 --> 00:13:08,660
see if there's any privilege escalation

338
00:13:06,470 --> 00:13:10,970
opportunities and then some other ones

339
00:13:08,660 --> 00:13:11,600
<font color="#E5E5E5">listed there</font><font color="#CCCCCC"> for you so bps be blog on</font>

340
00:13:10,970 --> 00:13:12,980
passwords

341
00:13:11,600 --> 00:13:15,050
you'll notice that<font color="#E5E5E5"> every one of these</font>

342
00:13:12,980 --> 00:13:17,030
has<font color="#E5E5E5"> be in front of it which in which</font>

343
00:13:15,050 --> 00:13:21,829
tells you that it's interacting with

344
00:13:17,030 --> 00:13:24,319
beacon itself<font color="#E5E5E5"> and then aggressor also</font>

345
00:13:21,830 --> 00:13:26,060
has things called meta functions so meta

346
00:13:24,320 --> 00:13:28,970
functions deal with actual<font color="#CCCCCC"> meta data</font>

347
00:13:26,060 --> 00:13:32,089
<font color="#E5E5E5">that's</font><font color="#CCCCCC"> within side of beacon itself</font><font color="#E5E5E5"> so</font>

348
00:13:28,970 --> 00:13:34,370
again we saw this earlier<font color="#E5E5E5"> but</font><font color="#CCCCCC"> is 64 is</font>

349
00:13:32,090 --> 00:13:36,620
admin is SSH so these are<font color="#E5E5E5"> just kind of</font>

350
00:13:34,370 --> 00:13:39,680
querying the data model<font color="#CCCCCC"> to tell to make</font>

351
00:13:36,620 --> 00:13:41,660
sure that the beacon<font color="#E5E5E5"> that came in is</font>

352
00:13:39,680 --> 00:13:44,060
either running<font color="#E5E5E5"> as a 64-bit process or a</font>

353
00:13:41,660 --> 00:13:46,160
32-bit process<font color="#CCCCCC"> you know certain things</font>

354
00:13:44,060 --> 00:13:49,130
<font color="#E5E5E5">you might run in post exploitation phase</font>

355
00:13:46,160 --> 00:13:52,780
<font color="#E5E5E5">will depend on</font><font color="#CCCCCC"> that if it's an admin or</font>

356
00:13:49,130 --> 00:13:52,780
<font color="#E5E5E5">not you know things of that nature</font><font color="#CCCCCC"> you</font>

357
00:13:53,380 --> 00:13:56,780
<font color="#E5E5E5">also have the</font><font color="#CCCCCC"> ability to interact with</font>

358
00:13:55,190 --> 00:13:58,130
<font color="#CCCCCC">COBOL strike rather</font><font color="#E5E5E5"> than beacon and it</font>

359
00:13:56,780 --> 00:14:00,800
may<font color="#E5E5E5"> typically manipulate the data</font>

360
00:13:58,130 --> 00:14:03,950
through<font color="#E5E5E5"> aggressor so there's a couple</font>

361
00:14:00,800 --> 00:14:05,540
<font color="#CCCCCC">examples here so base64 decode</font><font color="#E5E5E5"> if you</font>

362
00:14:03,950 --> 00:14:08,150
want to code a string<font color="#CCCCCC"> if you're writing</font>

363
00:14:05,540 --> 00:14:11,240
a script<font color="#CCCCCC"> that deals with shellcode or</font>

364
00:14:08,150 --> 00:14:13,520
<font color="#E5E5E5">something like that you can interact</font>

365
00:14:11,240 --> 00:14:15,980
with the<font color="#E5E5E5"> the GUI so open file browser</font>

366
00:14:13,520 --> 00:14:18,110
open screenshot browser those are there

367
00:14:15,980 --> 00:14:22,790
<font color="#CCCCCC">for you and</font><font color="#E5E5E5"> then you can also encode a</font>

368
00:14:18,110 --> 00:14:24,410
string<font color="#E5E5E5"> in a certain format so let's go</font>

369
00:14:22,790 --> 00:14:27,589
<font color="#CCCCCC">and run through</font><font color="#E5E5E5"> a sample</font><font color="#CCCCCC"> of code real</font>

370
00:14:24,410 --> 00:14:29,240
quick the the quick scenario<font color="#E5E5E5"> is you've</font>

371
00:14:27,590 --> 00:14:31,610
compromised<font color="#CCCCCC"> that</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> windows jump</font><font color="#E5E5E5"> box</font>

372
00:14:29,240 --> 00:14:33,080
used by admins<font color="#E5E5E5"> right you're able</font><font color="#CCCCCC"> to</font>

373
00:14:31,610 --> 00:14:34,550
escalate privileges<font color="#CCCCCC"> and you're</font>

374
00:14:33,080 --> 00:14:36,770
interested in<font color="#E5E5E5"> capturing capturing</font>

375
00:14:34,550 --> 00:14:38,630
passwords<font color="#E5E5E5"> from users</font><font color="#CCCCCC"> regularly logged</font>

376
00:14:36,770 --> 00:14:40,880
into the system<font color="#CCCCCC"> how can we automate</font><font color="#E5E5E5"> that</font>

377
00:14:38,630 --> 00:14:41,990
event<font color="#E5E5E5"> right because there</font><font color="#CCCCCC"> comes</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> time</font>

378
00:14:40,880 --> 00:14:43,160
<font color="#E5E5E5">when you have</font><font color="#CCCCCC"> meetings and there's</font>

379
00:14:41,990 --> 00:14:45,530
things<font color="#E5E5E5"> you got to step away from the</font>

380
00:14:43,160 --> 00:14:47,689
<font color="#E5E5E5">keyboard</font><font color="#CCCCCC"> and you're not there to you</font>

381
00:14:45,530 --> 00:14:51,079
know dump passwords or or look<font color="#E5E5E5"> to see</font>

382
00:14:47,690 --> 00:14:53,090
who's on the<font color="#E5E5E5"> box so here's here's a</font>

383
00:14:51,080 --> 00:14:55,160
little quick code sample<font color="#E5E5E5"> so we're gonna</font>

384
00:14:53,090 --> 00:14:56,630
use<font color="#E5E5E5"> the event on heartbeat</font><font color="#CCCCCC"> for every</font>

385
00:14:55,160 --> 00:14:58,550
<font color="#E5E5E5">five minutes we're gonna run it through</font>

386
00:14:56,630 --> 00:15:00,500
<font color="#CCCCCC">a for each statement</font><font color="#E5E5E5"> right and we're</font>

387
00:14:58,550 --> 00:15:02,270
going to<font color="#E5E5E5"> query all the beacons</font><font color="#CCCCCC"> and we're</font>

388
00:15:00,500 --> 00:15:03,560
gonna look<font color="#CCCCCC"> for each session</font><font color="#E5E5E5"> of every</font>

389
00:15:02,270 --> 00:15:05,630
<font color="#E5E5E5">beacon that comes in to the team server</font>

390
00:15:03,560 --> 00:15:08,900
<font color="#CCCCCC">and say hey we want</font><font color="#E5E5E5"> to pull active</font>

391
00:15:05,630 --> 00:15:11,070
passwords if it's an admin

392
00:15:08,900 --> 00:15:13,860
so here there's a fight the<font color="#CCCCCC"> heartbeat</font>

393
00:15:11,070 --> 00:15:17,460
<font color="#E5E5E5">five minutes and we're querying every</font>

394
00:15:13,860 --> 00:15:18,690
<font color="#CCCCCC">beacon</font><font color="#E5E5E5"> ID that's in our team server and</font>

395
00:15:17,460 --> 00:15:24,530
we're checking<font color="#E5E5E5"> to see if that specific</font>

396
00:15:18,690 --> 00:15:28,200
<font color="#E5E5E5">session</font><font color="#CCCCCC"> is there and if it's an admin</font>

397
00:15:24,530 --> 00:15:29,819
<font color="#CCCCCC">and we go</font><font color="#E5E5E5"> through if it is we're gonna</font>

398
00:15:28,200 --> 00:15:31,530
go ahead and<font color="#E5E5E5"> do the</font><font color="#CCCCCC"> B</font><font color="#E5E5E5"> logon passwords</font>

399
00:15:29,820 --> 00:15:33,510
command which<font color="#CCCCCC"> is the</font><font color="#E5E5E5"> aggressor function</font>

400
00:15:31,530 --> 00:15:36,360
right<font color="#E5E5E5"> and it's done it's</font><font color="#CCCCCC"> gonna dump the</font>

401
00:15:33,510 --> 00:15:39,980
passwords<font color="#E5E5E5"> for us so now we'll just show</font>

402
00:15:36,360 --> 00:15:42,000
a little<font color="#E5E5E5"> demo of</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> working in action</font>

403
00:15:39,980 --> 00:15:44,000
so I'm gonna run the PowerShell

404
00:15:42,000 --> 00:15:47,370
one-liner here get an admin call back

405
00:15:44,000 --> 00:15:55,050
<font color="#E5E5E5">back in my team server here so I'm</font>

406
00:15:47,370 --> 00:15:55,740
waiting<font color="#CCCCCC"> for the call back alright so</font>

407
00:15:55,050 --> 00:15:57,719
<font color="#CCCCCC">there</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> is</font>

408
00:15:55,740 --> 00:16:00,120
so I'm an admin with a little star<font color="#E5E5E5"> there</font>

409
00:15:57,720 --> 00:16:01,560
<font color="#E5E5E5">and you can see it already ran my script</font>

410
00:16:00,120 --> 00:16:04,020
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> pulling the active passwords</font>

411
00:16:01,560 --> 00:16:05,930
<font color="#E5E5E5">because it's an administrator</font><font color="#CCCCCC"> so that's</font>

412
00:16:04,020 --> 00:16:09,900
kind of how it works

413
00:16:05,930 --> 00:16:11,430
<font color="#E5E5E5">all right</font><font color="#CCCCCC"> so the nice the interesting</font>

414
00:16:09,900 --> 00:16:13,650
thing about that<font color="#E5E5E5"> last</font><font color="#CCCCCC"> tripped as well is</font>

415
00:16:11,430 --> 00:16:15,420
because<font color="#CCCCCC"> we have it triggered on</font><font color="#E5E5E5"> harpy</font>

416
00:16:13,650 --> 00:16:17,970
every<font color="#CCCCCC"> five minutes that same script is</font>

417
00:16:15,420 --> 00:16:19,890
<font color="#E5E5E5">going to run every five minutes</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> again</font>

418
00:16:17,970 --> 00:16:21,180
this is maybe on a system where if you

419
00:16:19,890 --> 00:16:22,980
have to walk<font color="#E5E5E5"> away</font><font color="#CCCCCC"> like Harley mentioned</font>

420
00:16:21,180 --> 00:16:24,719
or you just<font color="#E5E5E5"> want to continuously pull</font><font color="#CCCCCC"> on</font>

421
00:16:22,980 --> 00:16:26,220
case new users<font color="#CCCCCC"> log in</font><font color="#E5E5E5"> that's going to</font>

422
00:16:24,720 --> 00:16:29,220
automate capturing<font color="#E5E5E5"> those credentials for</font>

423
00:16:26,220 --> 00:16:30,630
you<font color="#E5E5E5"> so next up</font><font color="#CCCCCC"> is a kind of applied</font>

424
00:16:29,220 --> 00:16:32,100
automation we're talking about<font color="#CCCCCC"> phishing</font>

425
00:16:30,630 --> 00:16:34,890
like how can<font color="#E5E5E5"> we use automation in this</font>

426
00:16:32,100 --> 00:16:36,120
step well what's the most<font color="#E5E5E5"> prevalent way</font>

427
00:16:34,890 --> 00:16:37,650
that an attacker is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> gain access to</font>

428
00:16:36,120 --> 00:16:39,900
environment<font color="#E5E5E5"> it's going to be through</font>

429
00:16:37,650 --> 00:16:41,459
phishing like if you're<font color="#CCCCCC"> lucky</font><font color="#E5E5E5"> if an</font>

430
00:16:39,900 --> 00:16:42,900
attacker is lucky<font color="#E5E5E5"> maybe they're gonna</font>

431
00:16:41,460 --> 00:16:44,700
find<font color="#E5E5E5"> something on the</font><font color="#CCCCCC"> outside but</font><font color="#E5E5E5"> that's</font>

432
00:16:42,900 --> 00:16:47,579
generally<font color="#CCCCCC"> not the way that you can</font><font color="#E5E5E5"> just</font>

433
00:16:44,700 --> 00:16:49,350
pop sequel I run<font color="#E5E5E5"> XP command shell and</font>

434
00:16:47,580 --> 00:16:51,450
execute code<font color="#E5E5E5"> to gain access to their</font>

435
00:16:49,350 --> 00:16:53,430
<font color="#E5E5E5">environment so</font><font color="#CCCCCC"> attackers commonly used</font>

436
00:16:51,450 --> 00:16:56,280
phishing<font color="#E5E5E5"> this is generally obviously a</font>

437
00:16:53,430 --> 00:16:58,530
time impressive<font color="#E5E5E5"> a time intensive</font><font color="#CCCCCC"> process</font>

438
00:16:56,280 --> 00:17:00,030
<font color="#CCCCCC">you have to develop a scenario</font><font color="#E5E5E5"> that's</font>

439
00:16:58,530 --> 00:17:01,500
going<font color="#CCCCCC"> to work</font><font color="#E5E5E5"> for</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> target you're</font>

440
00:17:00,030 --> 00:17:03,270
<font color="#CCCCCC">probably gonna be writing</font><font color="#E5E5E5"> custom malware</font>

441
00:17:01,500 --> 00:17:04,619
<font color="#E5E5E5">you want to develop possibly domain</font>

442
00:17:03,270 --> 00:17:06,270
reputation<font color="#E5E5E5"> so there's a bunch</font><font color="#CCCCCC"> of</font>

443
00:17:04,619 --> 00:17:09,688
<font color="#CCCCCC">different steps that are</font><font color="#E5E5E5"> involved in</font>

444
00:17:06,270 --> 00:17:11,459
this phishing process so eventually<font color="#E5E5E5"> you</font>

445
00:17:09,689 --> 00:17:12,720
get all that done<font color="#CCCCCC"> you fired your first</font>

446
00:17:11,459 --> 00:17:14,640
salvo<font color="#CCCCCC"> and kind of you're waiting and</font>

447
00:17:12,720 --> 00:17:15,630
<font color="#E5E5E5">hoping to get your first beacon well if</font>

448
00:17:14,640 --> 00:17:18,540
you're lucky<font color="#E5E5E5"> which has happened</font>

449
00:17:15,630 --> 00:17:20,130
<font color="#CCCCCC">unfortunately your first target opens</font>

450
00:17:18,540 --> 00:17:21,000
your email<font color="#E5E5E5"> runs your malware their</font>

451
00:17:20,130 --> 00:17:22,980
domain admin

452
00:17:21,000 --> 00:17:24,300
and you're on their box and<font color="#CCCCCC"> you can at</font>

453
00:17:22,980 --> 00:17:26,760
least<font color="#E5E5E5"> control the domain from that point</font>

454
00:17:24,300 --> 00:17:29,070
<font color="#CCCCCC">however this generally always isn't the</font>

455
00:17:26,760 --> 00:17:31,050
case and more often<font color="#CCCCCC"> than not is not</font><font color="#E5E5E5"> the</font>

456
00:17:29,070 --> 00:17:32,790
case it's probably<font color="#CCCCCC"> gonna take a few</font>

457
00:17:31,050 --> 00:17:34,800
people that<font color="#E5E5E5"> you're gonna target</font><font color="#CCCCCC"> if</font>

458
00:17:32,790 --> 00:17:37,080
you're<font color="#E5E5E5"> sending every 15 to 30 minutes</font>

459
00:17:34,800 --> 00:17:39,300
<font color="#E5E5E5">then if you're talking</font><font color="#CCCCCC"> a few people</font><font color="#E5E5E5"> you</font>

460
00:17:37,080 --> 00:17:41,429
may be sitting<font color="#CCCCCC"> a</font><font color="#E5E5E5"> couple hours</font><font color="#CCCCCC"> possibly a</font>

461
00:17:39,300 --> 00:17:42,480
day of<font color="#E5E5E5"> fishing until you get access it</font>

462
00:17:41,430 --> 00:17:46,020
really<font color="#E5E5E5"> just all depends how you're</font>

463
00:17:42,480 --> 00:17:49,050
<font color="#E5E5E5">trying and conducting your fishing phase</font>

464
00:17:46,020 --> 00:17:51,030
excuse me<font color="#E5E5E5"> so what if you want to grab a</font>

465
00:17:49,050 --> 00:17:53,070
drink<font color="#CCCCCC"> or you're just hanging out are you</font>

466
00:17:51,030 --> 00:17:55,980
watching<font color="#CCCCCC"> your screen all the time</font><font color="#E5E5E5"> are</font>

467
00:17:53,070 --> 00:17:57,419
you<font color="#CCCCCC"> what if you miss your beacon</font><font color="#E5E5E5"> that's</font>

468
00:17:55,980 --> 00:17:59,190
<font color="#E5E5E5">just</font><font color="#CCCCCC"> something that</font><font color="#E5E5E5"> I don't want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> do</font>

469
00:17:57,420 --> 00:18:01,260
one<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the worst feelings in the</font><font color="#CCCCCC"> world</font>

470
00:17:59,190 --> 00:18:02,850
is you come<font color="#E5E5E5"> back to your laptop and you</font>

471
00:18:01,260 --> 00:18:04,650
see<font color="#E5E5E5"> that you either got a beacon and</font>

472
00:18:02,850 --> 00:18:05,969
<font color="#E5E5E5">it's logged out or it's there and just</font>

473
00:18:04,650 --> 00:18:08,280
<font color="#E5E5E5">sitting waiting</font><font color="#CCCCCC"> for you</font><font color="#E5E5E5"> like you don't</font>

474
00:18:05,970 --> 00:18:10,680
know what time you<font color="#E5E5E5"> potentially could</font>

475
00:18:08,280 --> 00:18:13,170
have lost that that thing has<font color="#CCCCCC"> just been</font>

476
00:18:10,680 --> 00:18:15,090
sitting<font color="#CCCCCC"> there</font><font color="#E5E5E5"> so in my</font><font color="#CCCCCC"> mind</font><font color="#E5E5E5"> it's great</font>

477
00:18:13,170 --> 00:18:17,160
to<font color="#CCCCCC"> know</font><font color="#E5E5E5"> the second</font><font color="#CCCCCC"> that I first</font><font color="#E5E5E5"> get</font><font color="#CCCCCC"> a</font>

478
00:18:15,090 --> 00:18:19,679
beacon because<font color="#E5E5E5"> I want to know right</font><font color="#CCCCCC"> away</font>

479
00:18:17,160 --> 00:18:21,510
I<font color="#E5E5E5"> can stop what I'm doing and then hop</font>

480
00:18:19,680 --> 00:18:24,390
on the computer and<font color="#E5E5E5"> start working so</font>

481
00:18:21,510 --> 00:18:26,730
thankfully agressor can help<font color="#E5E5E5"> there's a</font>

482
00:18:24,390 --> 00:18:29,070
specific<font color="#E5E5E5"> trigger that you can use that</font>

483
00:18:26,730 --> 00:18:30,690
<font color="#E5E5E5">allows you to execute commands obviously</font>

484
00:18:29,070 --> 00:18:33,060
<font color="#E5E5E5">right when a beacon first comes in and</font>

485
00:18:30,690 --> 00:18:35,070
there's publicly available code<font color="#E5E5E5"> that</font>

486
00:18:33,060 --> 00:18:38,030
<font color="#E5E5E5">lets you send text messages via email</font>

487
00:18:35,070 --> 00:18:40,710
well why not you<font color="#E5E5E5"> sleep and</font><font color="#CCCCCC"> aggressor to</font>

488
00:18:38,030 --> 00:18:43,980
<font color="#E5E5E5">combine these things together and do</font>

489
00:18:40,710 --> 00:18:45,840
<font color="#E5E5E5">something cool with it so what this is</font>

490
00:18:43,980 --> 00:18:47,190
is this<font color="#E5E5E5"> is actually Python so this is a</font>

491
00:18:45,840 --> 00:18:48,810
separate Python script that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> wrote</font>

492
00:18:47,190 --> 00:18:51,330
<font color="#E5E5E5">where in this</font><font color="#CCCCCC"> case it's just</font><font color="#E5E5E5"> connecting</font>

493
00:18:48,810 --> 00:18:52,919
<font color="#CCCCCC">to a gmail</font><font color="#E5E5E5"> mail account and what you're</font>

494
00:18:51,330 --> 00:18:56,159
<font color="#E5E5E5">seeing</font><font color="#CCCCCC"> right here is</font><font color="#E5E5E5"> the phone number</font>

495
00:18:52,920 --> 00:18:58,710
<font color="#CCCCCC">that it's texting and so</font><font color="#E5E5E5"> AT&T and</font>

496
00:18:56,160 --> 00:19:00,600
Verizon if you email their phone number

497
00:18:58,710 --> 00:19:02,520
<font color="#E5E5E5">it'll send that message to them as a</font>

498
00:19:00,600 --> 00:19:04,199
<font color="#E5E5E5">text message well the rest of this is</font>

499
00:19:02,520 --> 00:19:06,570
<font color="#E5E5E5">just basically telling it hey I want to</font>

500
00:19:04,200 --> 00:19:08,610
set the subject<font color="#CCCCCC"> as incoming beacon</font>

501
00:19:06,570 --> 00:19:11,159
I'm<font color="#E5E5E5"> already</font><font color="#CCCCCC"> defined</font><font color="#E5E5E5"> who the email is</font>

502
00:19:08,610 --> 00:19:13,320
<font color="#CCCCCC">going to come from and then what the</font>

503
00:19:11,160 --> 00:19:14,670
message is is<font color="#E5E5E5"> this body parameter up at</font>

504
00:19:13,320 --> 00:19:16,830
the top<font color="#CCCCCC"> we're saying hey check your team</font>

505
00:19:14,670 --> 00:19:18,330
server<font color="#E5E5E5"> this host name of this system</font>

506
00:19:16,830 --> 00:19:20,580
checked in it has<font color="#E5E5E5"> this internal IP</font>

507
00:19:18,330 --> 00:19:22,439
address and it will send that

508
00:19:20,580 --> 00:19:23,220
<font color="#CCCCCC">information to you</font><font color="#E5E5E5"> and the rest of the</font>

509
00:19:22,440 --> 00:19:25,470
script<font color="#CCCCCC"> is essentially just</font>

510
00:19:23,220 --> 00:19:27,540
authenticating<font color="#CCCCCC"> into</font><font color="#E5E5E5"> Gmail and sending</font>

511
00:19:25,470 --> 00:19:29,100
that<font color="#E5E5E5"> email out so it's great like if you</font>

512
00:19:27,540 --> 00:19:31,200
run this<font color="#E5E5E5"> script by yourself manually</font>

513
00:19:29,100 --> 00:19:33,000
<font color="#E5E5E5">just calling it with</font><font color="#CCCCCC"> python or</font><font color="#E5E5E5"> dot slash</font>

514
00:19:31,200 --> 00:19:34,830
in it like it's going to<font color="#E5E5E5"> run but it's</font>

515
00:19:33,000 --> 00:19:38,010
not yet tied<font color="#CCCCCC"> into a</font>

516
00:19:34,830 --> 00:19:40,049
<font color="#E5E5E5">cobalt strike this is all we</font><font color="#CCCCCC"> need right</font>

517
00:19:38,010 --> 00:19:42,870
<font color="#CCCCCC">here</font><font color="#E5E5E5"> what six lines of code essentially</font>

518
00:19:40,049 --> 00:19:44,970
<font color="#E5E5E5">and</font><font color="#CCCCCC"> you can now</font><font color="#E5E5E5"> run your code the second</font>

519
00:19:42,870 --> 00:19:46,610
and get<font color="#E5E5E5"> a text message</font><font color="#CCCCCC"> every single time</font>

520
00:19:44,970 --> 00:19:48,870
the instant you<font color="#E5E5E5"> get a beacon coming in</font>

521
00:19:46,610 --> 00:19:50,729
so the way we're<font color="#CCCCCC"> doing</font><font color="#E5E5E5"> that is that on</font>

522
00:19:48,870 --> 00:19:53,370
beacon initial command the second that

523
00:19:50,730 --> 00:19:55,830
beacon checks<font color="#E5E5E5"> into</font><font color="#CCCCCC"> our system we're</font>

524
00:19:53,370 --> 00:19:57,689
creating two local<font color="#CCCCCC"> variables</font><font color="#E5E5E5"> computer</font>

525
00:19:55,830 --> 00:19:59,158
and internal this is just going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font>

526
00:19:57,690 --> 00:20:01,140
used<font color="#E5E5E5"> to capture the</font><font color="#CCCCCC"> hostname of the</font>

527
00:19:59,159 --> 00:20:03,210
<font color="#E5E5E5">system that we</font><font color="#CCCCCC"> have the beacon on and</font>

528
00:20:01,140 --> 00:20:06,840
it's going<font color="#E5E5E5"> to be used to hold the</font>

529
00:20:03,210 --> 00:20:08,940
internal IP address this next<font color="#E5E5E5"> step this</font>

530
00:20:06,840 --> 00:20:11,549
beacon info function basically<font color="#E5E5E5"> allows us</font>

531
00:20:08,940 --> 00:20:13,260
<font color="#CCCCCC">to access metadata about</font><font color="#E5E5E5"> the incoming</font>

532
00:20:11,549 --> 00:20:15,510
beacon so this is how we can<font color="#E5E5E5"> capture</font>

533
00:20:13,260 --> 00:20:16,860
what<font color="#CCCCCC"> the hostname of the</font><font color="#E5E5E5"> system is is</font>

534
00:20:15,510 --> 00:20:19,260
how we can capture what the<font color="#E5E5E5"> internal IP</font>

535
00:20:16,860 --> 00:20:21,090
address of the system is and finally

536
00:20:19,260 --> 00:20:23,158
<font color="#E5E5E5">like any good scripting language there's</font>

537
00:20:21,090 --> 00:20:25,199
always some eval or<font color="#CCCCCC"> exec or something</font>

538
00:20:23,159 --> 00:20:27,149
like<font color="#E5E5E5"> that that you can</font><font color="#CCCCCC"> use to run</font><font color="#E5E5E5"> either</font>

539
00:20:25,200 --> 00:20:28,860
operating<font color="#E5E5E5"> system commands or do</font>

540
00:20:27,149 --> 00:20:30,539
something<font color="#CCCCCC"> outside of the language itself</font>

541
00:20:28,860 --> 00:20:32,729
and all that we're doing<font color="#E5E5E5"> here in</font><font color="#CCCCCC"> this</font>

542
00:20:30,539 --> 00:20:34,470
case is<font color="#E5E5E5"> actually calling</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> Python</font>

543
00:20:32,730 --> 00:20:36,570
<font color="#E5E5E5">script that contains our email code</font>

544
00:20:34,470 --> 00:20:39,120
we're<font color="#E5E5E5"> passing it the internal IP address</font>

545
00:20:36,570 --> 00:20:41,370
the<font color="#CCCCCC"> hostname</font><font color="#E5E5E5"> it's a sleep function</font><font color="#CCCCCC"> you</font>

546
00:20:39,120 --> 00:20:43,469
<font color="#E5E5E5">know sorry</font><font color="#CCCCCC"> we're</font><font color="#E5E5E5"> passing the IP address</font>

547
00:20:41,370 --> 00:20:46,320
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> hostname</font><font color="#E5E5E5"> of the system and it's</font>

548
00:20:43,470 --> 00:20:47,269
going<font color="#E5E5E5"> to be sending us an email so what</font>

549
00:20:46,320 --> 00:20:49,439
does that<font color="#E5E5E5"> look like</font>

550
00:20:47,269 --> 00:20:51,389
so this script<font color="#E5E5E5"> oh I'm sorry it's</font>

551
00:20:49,440 --> 00:20:53,480
<font color="#E5E5E5">actually not the greatest quality what</font>

552
00:20:51,389 --> 00:20:56,399
I'm doing here<font color="#E5E5E5"> is showing is I have a</font>

553
00:20:53,480 --> 00:20:59,460
bot basically checking<font color="#E5E5E5"> in and it's going</font>

554
00:20:56,399 --> 00:21:02,070
<font color="#E5E5E5">to be rust running that text courts or</font>

555
00:20:59,460 --> 00:21:04,080
<font color="#CCCCCC">grosser scripts</font><font color="#E5E5E5"> and right here I'm going</font>

556
00:21:02,070 --> 00:21:07,049
to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> getting my one-liner and I just</font>

557
00:21:04,080 --> 00:21:08,460
got the beacon so what happens I didn't

558
00:21:07,049 --> 00:21:10,379
show it<font color="#CCCCCC"> here because it</font><font color="#E5E5E5"> would show that</font>

559
00:21:08,460 --> 00:21:13,139
<font color="#CCCCCC">gmail account</font><font color="#E5E5E5"> and credentials that</font><font color="#CCCCCC"> I use</font>

560
00:21:10,380 --> 00:21:16,500
is it actually sending me a text<font color="#CCCCCC"> message</font>

561
00:21:13,139 --> 00:21:18,719
<font color="#E5E5E5">on the back end</font><font color="#CCCCCC"> so this</font><font color="#E5E5E5"> is what I get on</font>

562
00:21:16,500 --> 00:21:20,070
my<font color="#CCCCCC"> computer it's just</font><font color="#E5E5E5"> like hey and it's</font>

563
00:21:18,720 --> 00:21:22,139
from whatever the email address that is

564
00:21:20,070 --> 00:21:23,939
<font color="#E5E5E5">going from it has a subject is your</font>

565
00:21:22,139 --> 00:21:26,129
incoming beacons<font color="#E5E5E5"> check your team server</font>

566
00:21:23,940 --> 00:21:28,350
<font color="#E5E5E5">the host name of the system that it just</font>

567
00:21:26,130 --> 00:21:31,169
checked in was X<font color="#E5E5E5"> and the internal IP is</font>

568
00:21:28,350 --> 00:21:33,059
<font color="#CCCCCC">just 170 260 so this is</font><font color="#E5E5E5"> going to run</font>

569
00:21:31,169 --> 00:21:35,580
every single<font color="#E5E5E5"> time</font><font color="#CCCCCC"> you get</font><font color="#E5E5E5"> a beacon and I</font>

570
00:21:33,059 --> 00:21:37,408
love this<font color="#E5E5E5"> every</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> I'm fishing because</font>

571
00:21:35,580 --> 00:21:41,029
I can I instantly know right away<font color="#E5E5E5"> the</font>

572
00:21:37,409 --> 00:21:41,029
second<font color="#E5E5E5"> that I have a</font><font color="#CCCCCC"> callback coming in</font>

573
00:21:42,559 --> 00:21:46,730
<font color="#E5E5E5">all right so let's get into endpoint</font>

574
00:21:44,840 --> 00:21:48,740
protection because a lot of<font color="#E5E5E5"> today's</font>

575
00:21:46,730 --> 00:21:50,830
security<font color="#E5E5E5"> is a lot more advanced</font><font color="#CCCCCC"> right</font>

576
00:21:48,740 --> 00:21:53,090
they have more<font color="#E5E5E5"> EDR products</font><font color="#CCCCCC"> available</font>

577
00:21:50,830 --> 00:21:55,039
<font color="#CCCCCC">and companies are</font><font color="#E5E5E5"> starting to</font><font color="#CCCCCC"> implement</font>

578
00:21:53,090 --> 00:21:57,559
those so we need to figure out<font color="#E5E5E5"> how we</font>

579
00:21:55,039 --> 00:22:00,799
can<font color="#CCCCCC"> use aggressor to</font><font color="#E5E5E5"> implement automated</font>

580
00:21:57,559 --> 00:22:02,120
actions<font color="#E5E5E5"> to identify</font><font color="#CCCCCC"> EDR products so that</font>

581
00:22:00,799 --> 00:22:03,918
<font color="#CCCCCC">we've alerted to our beacon we might</font>

582
00:22:02,120 --> 00:22:05,719
want to recon it right<font color="#E5E5E5"> so what are we</font>

583
00:22:03,919 --> 00:22:08,720
interested<font color="#E5E5E5"> in right network connections</font>

584
00:22:05,720 --> 00:22:11,210
interfaces users groups<font color="#CCCCCC"> Active Directory</font>

585
00:22:08,720 --> 00:22:13,070
<font color="#CCCCCC">information right</font><font color="#E5E5E5"> local admin rights</font>

586
00:22:11,210 --> 00:22:15,710
what about endpoint protection software

587
00:22:13,070 --> 00:22:19,639
<font color="#CCCCCC">what's on the system before</font><font color="#E5E5E5"> we start</font>

588
00:22:15,710 --> 00:22:21,289
<font color="#E5E5E5">executing commands so a lot of</font><font color="#CCCCCC"> EDR</font>

589
00:22:19,639 --> 00:22:23,090
products install a mini filter drivers

590
00:22:21,289 --> 00:22:25,249
<font color="#E5E5E5">all right there dot sis files and they</font>

591
00:22:23,090 --> 00:22:27,830
usually live<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the system root system</font>

592
00:22:25,249 --> 00:22:29,690
<font color="#CCCCCC">32 drivers</font><font color="#E5E5E5"> a lot of times they can</font><font color="#CCCCCC"> be</font>

593
00:22:27,830 --> 00:22:32,418
other<font color="#E5E5E5"> places but for</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> most</font><font color="#CCCCCC"> part they</font>

594
00:22:29,690 --> 00:22:34,460
<font color="#CCCCCC">are in that in that directory now these</font>

595
00:22:32,419 --> 00:22:36,139
benefits are<font color="#CCCCCC"> mini filter altitudes are</font>

596
00:22:34,460 --> 00:22:38,179
allocated<font color="#E5E5E5"> by Microsoft and are publicly</font>

597
00:22:36,139 --> 00:22:40,610
<font color="#E5E5E5">listed now these aren't required to be</font>

598
00:22:38,179 --> 00:22:42,769
<font color="#E5E5E5">publicly listed by the vendor however</font>

599
00:22:40,610 --> 00:22:44,840
they are<font color="#E5E5E5"> definitely used to avoid</font>

600
00:22:42,769 --> 00:22:46,519
conflict with other vendors<font color="#CCCCCC"> right</font><font color="#E5E5E5"> no one</font>

601
00:22:44,840 --> 00:22:48,619
wants to have the same<font color="#CCCCCC"> EDR products this</font>

602
00:22:46,519 --> 00:22:50,269
file<font color="#CCCCCC"> living on</font><font color="#E5E5E5"> the same machine because</font>

603
00:22:48,619 --> 00:22:53,240
I might have<font color="#E5E5E5"> conflicts and I might even</font>

604
00:22:50,269 --> 00:22:54,799
<font color="#CCCCCC">not work so that link</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> will</font>

605
00:22:53,240 --> 00:22:56,419
provide you with<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> associated</font><font color="#E5E5E5"> mini</font>

606
00:22:54,799 --> 00:23:01,850
filter drivers and then the<font color="#CCCCCC"> vendor names</font>

607
00:22:56,419 --> 00:23:04,009
with them so why is this important how

608
00:23:01,850 --> 00:23:06,320
<font color="#E5E5E5">can we use it</font><font color="#CCCCCC"> how does this implement</font>

609
00:23:04,009 --> 00:23:09,950
with aggressor<font color="#E5E5E5"> right so really</font><font color="#CCCCCC"> what we</font>

610
00:23:06,320 --> 00:23:12,110
want<font color="#E5E5E5"> to do is we want to use</font><font color="#CCCCCC"> cobalt</font>

611
00:23:09,950 --> 00:23:14,450
<font color="#E5E5E5">strikes be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> built-in LS command which</font>

612
00:23:12,110 --> 00:23:16,600
is<font color="#CCCCCC"> the directory listing right</font><font color="#E5E5E5"> we want</font>

613
00:23:14,450 --> 00:23:19,639
to use it because<font color="#CCCCCC"> it</font><font color="#E5E5E5"> uses win32 api</font><font color="#CCCCCC"> s</font>

614
00:23:16,600 --> 00:23:24,740
directly to<font color="#E5E5E5"> list the directory contents</font>

615
00:23:19,639 --> 00:23:27,019
<font color="#E5E5E5">right</font><font color="#CCCCCC"> so it has a built that's built in</font>

616
00:23:24,740 --> 00:23:27,440
LS command have documentation<font color="#CCCCCC"> yes it</font>

617
00:23:27,019 --> 00:23:28,999
does

618
00:23:27,440 --> 00:23:31,970
<font color="#CCCCCC">alright so you</font><font color="#E5E5E5"> can see right here at B</font>

619
00:23:28,999 --> 00:23:33,950
<font color="#CCCCCC">LS</font><font color="#E5E5E5"> it has a few</font><font color="#CCCCCC"> arguments to it but the</font>

620
00:23:31,970 --> 00:23:36,139
most important one is the<font color="#E5E5E5"> dollar three</font>

621
00:23:33,950 --> 00:23:38,419
listed below<font color="#CCCCCC"> so an optional</font><font color="#E5E5E5"> callback</font>

622
00:23:36,139 --> 00:23:40,939
<font color="#E5E5E5">function with the PS results</font><font color="#CCCCCC"> should</font><font color="#E5E5E5"> be</font>

623
00:23:38,419 --> 00:23:43,039
<font color="#CCCCCC">LS sorry</font><font color="#E5E5E5"> yeah LS results</font><font color="#CCCCCC"> argument to</font><font color="#E5E5E5"> the</font>

624
00:23:40,940 --> 00:23:44,629
<font color="#E5E5E5">callback are dollar one beacon ID dollar</font>

625
00:23:43,039 --> 00:23:46,158
to the<font color="#E5E5E5"> folder and dollar three of the</font>

626
00:23:44,629 --> 00:23:49,459
results<font color="#E5E5E5"> so really we want to manipulate</font>

627
00:23:46,159 --> 00:23:51,169
<font color="#E5E5E5">those results and then iterate through</font>

628
00:23:49,460 --> 00:23:53,240
them and<font color="#E5E5E5"> then figure</font><font color="#CCCCCC"> out what's on</font><font color="#E5E5E5"> the</font>

629
00:23:51,169 --> 00:23:55,100
machine

630
00:23:53,240 --> 00:23:57,710
so we're gonna list out the<font color="#E5E5E5"> driver</font>

631
00:23:55,100 --> 00:24:00,260
directories<font color="#CCCCCC"> right the system 32 drivers</font>

632
00:23:57,710 --> 00:24:02,419
directory<font color="#E5E5E5"> we're gonna define</font><font color="#CCCCCC"> a static</font>

633
00:24:00,260 --> 00:24:04,158
array of dot sis files<font color="#E5E5E5"> then we're gonna</font>

634
00:24:02,419 --> 00:24:06,289
store the LS<font color="#CCCCCC"> command results into an</font>

635
00:24:04,159 --> 00:24:08,750
array and we're gonna parse that result

636
00:24:06,289 --> 00:24:10,490
<font color="#E5E5E5">those results through that array and</font><font color="#CCCCCC"> to</font>

637
00:24:08,750 --> 00:24:12,320
exact matching to determine the proper

638
00:24:10,490 --> 00:24:14,539
vendor information<font color="#CCCCCC"> and then we profit</font>

639
00:24:12,320 --> 00:24:16,309
from<font color="#CCCCCC"> that</font><font color="#E5E5E5"> right we can also identify</font>

640
00:24:14,539 --> 00:24:18,500
other<font color="#E5E5E5"> a</font><font color="#CCCCCC"> B products</font><font color="#E5E5E5"> and admin tools</font>

641
00:24:16,309 --> 00:24:19,908
<font color="#E5E5E5">present</font><font color="#CCCCCC"> using the PS built-in command</font>

642
00:24:18,500 --> 00:24:22,669
right<font color="#E5E5E5"> so that's gonna dump process</font>

643
00:24:19,909 --> 00:24:24,380
<font color="#CCCCCC">listing for us and then we can</font><font color="#E5E5E5"> highlight</font>

644
00:24:22,669 --> 00:24:26,659
we can color highlight with<font color="#E5E5E5"> aggressor</font>

645
00:24:24,380 --> 00:24:29,870
certain processes that are available

646
00:24:26,659 --> 00:24:32,090
that we know for sure<font color="#E5E5E5"> and</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know in</font>

647
00:24:29,870 --> 00:24:35,510
<font color="#E5E5E5">pass engagements that are actually</font><font color="#CCCCCC"> AV</font>

648
00:24:32,090 --> 00:24:38,418
products so here's a little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> into the</font>

649
00:24:35,510 --> 00:24:40,580
code so you<font color="#E5E5E5"> can see the the at 8080</font><font color="#CCCCCC"> are</font>

650
00:24:38,419 --> 00:24:42,679
is just the array that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> define right</font>

651
00:24:40,580 --> 00:24:44,510
static array<font color="#CCCCCC"> so these have all the</font>

652
00:24:42,679 --> 00:24:46,610
assist files that<font color="#E5E5E5"> I did a lot of</font>

653
00:24:44,510 --> 00:24:49,120
<font color="#E5E5E5">googling with to figure out that those</font>

654
00:24:46,610 --> 00:24:51,529
were actually applicable to<font color="#CCCCCC"> each vendor</font>

655
00:24:49,120 --> 00:24:55,370
<font color="#E5E5E5">and then here in the alias command an</font>

656
00:24:51,529 --> 00:24:56,779
alias command<font color="#CCCCCC"> basically gives me</font><font color="#E5E5E5"> it</font>

657
00:24:55,370 --> 00:24:59,000
makes a new beacon command within<font color="#CCCCCC"> the</font>

658
00:24:56,779 --> 00:25:02,000
within the<font color="#E5E5E5"> beacon itself so we can use</font>

659
00:24:59,000 --> 00:25:04,190
this alias command<font color="#E5E5E5"> to do a if an else</font>

660
00:25:02,000 --> 00:25:06,020
statement<font color="#CCCCCC"> to</font><font color="#E5E5E5"> determine the actual</font>

661
00:25:04,190 --> 00:25:09,919
<font color="#CCCCCC">architecture of the</font><font color="#E5E5E5"> system that were on</font>

662
00:25:06,020 --> 00:25:11,270
first<font color="#E5E5E5"> so</font><font color="#CCCCCC"> that way the way windows works</font>

663
00:25:09,919 --> 00:25:13,549
is<font color="#E5E5E5"> this kind</font><font color="#CCCCCC"> of backwards right</font><font color="#E5E5E5"> so if</font>

664
00:25:11,270 --> 00:25:16,490
<font color="#E5E5E5">it's 64-bit we have to derp</font><font color="#CCCCCC"> the system</font>

665
00:25:13,549 --> 00:25:18,679
<font color="#E5E5E5">32 directory but if it's 32-bit we got</font><font color="#CCCCCC"> a</font>

666
00:25:16,490 --> 00:25:20,360
we got<font color="#CCCCCC"> a list of</font><font color="#E5E5E5"> since native directory</font>

667
00:25:18,679 --> 00:25:24,260
so<font color="#E5E5E5"> we want to make sure that check is in</font>

668
00:25:20,360 --> 00:25:25,520
there for<font color="#CCCCCC"> us so it doesn't air out so</font>

669
00:25:24,260 --> 00:25:27,679
now we're<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to parse the results</font>

670
00:25:25,520 --> 00:25:29,270
right so we're storing the results<font color="#CCCCCC"> we do</font>

671
00:25:27,679 --> 00:25:30,830
<font color="#E5E5E5">it we do an LS command we store the</font>

672
00:25:29,270 --> 00:25:33,980
results<font color="#E5E5E5"> and then we would parse the room</font>

673
00:25:30,830 --> 00:25:39,230
with a for each command right<font color="#E5E5E5"> so if if</font>

674
00:25:33,980 --> 00:25:41,630
dollar name within LS matches the<font color="#CCCCCC"> the</font>

675
00:25:39,230 --> 00:25:43,159
static array<font color="#CCCCCC"> + edr</font><font color="#E5E5E5"> then we know that we</font>

676
00:25:41,630 --> 00:25:47,240
have a match<font color="#CCCCCC"> right we know if you have a</font>

677
00:25:43,159 --> 00:25:50,179
match<font color="#CCCCCC"> in the system and add it</font><font color="#E5E5E5"> into</font>

678
00:25:47,240 --> 00:25:51,380
<font color="#CCCCCC">another array at matches so now that we</font>

679
00:25:50,179 --> 00:25:52,789
<font color="#E5E5E5">have that</font><font color="#CCCCCC"> matches we want</font><font color="#E5E5E5"> to parse</font>

680
00:25:51,380 --> 00:25:54,679
through those with<font color="#CCCCCC"> multiple if</font>

681
00:25:52,789 --> 00:25:58,190
statements<font color="#E5E5E5"> to</font><font color="#CCCCCC"> determine the vendor</font>

682
00:25:54,679 --> 00:26:00,350
information<font color="#E5E5E5"> right so for instance if Fe</font>

683
00:25:58,190 --> 00:26:02,000
current<font color="#E5E5E5"> at sis is in the matches then</font>

684
00:26:00,350 --> 00:26:04,240
that means fire<font color="#E5E5E5"> I is definitely</font><font color="#CCCCCC"> on the</font>

685
00:26:02,000 --> 00:26:04,240
<font color="#E5E5E5">box</font>

686
00:26:04,250 --> 00:26:08,309
so all we have to<font color="#E5E5E5"> do is run the command</font>

687
00:26:06,570 --> 00:26:10,200
<font color="#E5E5E5">EDR query when you get on the box</font><font color="#CCCCCC"> and</font>

688
00:26:08,309 --> 00:26:12,450
does everything for you this<font color="#E5E5E5"> is all</font>

689
00:26:10,200 --> 00:26:14,730
automated<font color="#CCCCCC"> so you can set you can</font><font color="#E5E5E5"> see on</font>

690
00:26:12,450 --> 00:26:16,530
this example<font color="#CCCCCC"> that</font><font color="#E5E5E5"> psy optics and I am</font>

691
00:26:14,730 --> 00:26:17,370
<font color="#E5E5E5">that sis were found which means silence</font>

692
00:26:16,530 --> 00:26:21,960
and CrowdStrike

693
00:26:17,370 --> 00:26:22,799
are on the box<font color="#CCCCCC"> so this is an example the</font>

694
00:26:21,960 --> 00:26:24,900
PS command

695
00:26:22,799 --> 00:26:26,429
right<font color="#E5E5E5"> normally when you get a PS</font><font color="#CCCCCC"> command</font>

696
00:26:24,900 --> 00:26:28,650
it's all white right you don't<font color="#CCCCCC"> get any</font>

697
00:26:26,429 --> 00:26:30,659
of this extra<font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> but with</font><font color="#CCCCCC"> agressor</font>

698
00:26:28,650 --> 00:26:32,280
you can you can enhance<font color="#E5E5E5"> that right you</font>

699
00:26:30,659 --> 00:26:34,260
can parse through<font color="#E5E5E5"> the PS results</font>

700
00:26:32,280 --> 00:26:36,149
highlight different things<font color="#E5E5E5"> that you know</font>

701
00:26:34,260 --> 00:26:38,580
are bad highlight different<font color="#CCCCCC"> things that</font>

702
00:26:36,150 --> 00:26:41,309
<font color="#CCCCCC">are admin tools that are normally common</font>

703
00:26:38,580 --> 00:26:43,110
so PowerShell code dot exe<font color="#E5E5E5"> that's Visual</font>

704
00:26:41,309 --> 00:26:46,379
Studio code<font color="#E5E5E5"> so you can kind of tell this</font>

705
00:26:43,110 --> 00:26:48,120
<font color="#E5E5E5">box might be a developer box</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> but</font>

706
00:26:46,380 --> 00:26:52,679
also they have<font color="#E5E5E5"> silence installed</font><font color="#CCCCCC"> silence</font>

707
00:26:48,120 --> 00:26:55,820
<font color="#CCCCCC">UI DXE is running so now we're gonna do</font>

708
00:26:52,679 --> 00:26:59,100
a<font color="#E5E5E5"> little demo so we get our beacon back</font>

709
00:26:55,820 --> 00:27:00,809
and we<font color="#E5E5E5"> want to run EDR query so</font><font color="#CCCCCC"> I'll</font>

710
00:26:59,100 --> 00:27:03,658
boom there's<font color="#E5E5E5"> four four products</font>

711
00:27:00,809 --> 00:27:05,580
<font color="#E5E5E5">installed so that alerts the</font><font color="#CCCCCC"> operator to</font>

712
00:27:03,659 --> 00:27:06,780
know that there's actually<font color="#E5E5E5"> quite a bit</font>

713
00:27:05,580 --> 00:27:09,240
<font color="#E5E5E5">of edraan the system we need to be</font>

714
00:27:06,780 --> 00:27:12,000
careful<font color="#CCCCCC"> of what we execute and then a PS</font>

715
00:27:09,240 --> 00:27:16,350
command reveals that there's actually

716
00:27:12,000 --> 00:27:19,140
more EDR<font color="#E5E5E5"> or more</font><font color="#CCCCCC"> AV</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> BAM tray M BAM</font>

717
00:27:16,350 --> 00:27:22,770
service that's my<font color="#E5E5E5"> lower bytes and then</font>

718
00:27:19,140 --> 00:27:24,480
<font color="#E5E5E5">Devi and</font><font color="#CCCCCC"> V dot exe is</font><font color="#E5E5E5"> Visual Studio 15</font>

719
00:27:22,770 --> 00:27:26,340
so we know<font color="#CCCCCC"> that this might be a</font>

720
00:27:24,480 --> 00:27:32,730
developer box but it has a lot of<font color="#E5E5E5"> EDR on</font>

721
00:27:26,340 --> 00:27:35,459
it so like that<font color="#E5E5E5"> so that step and this</font>

722
00:27:32,730 --> 00:27:38,549
next<font color="#CCCCCC"> step</font><font color="#E5E5E5"> kind of helps try to get rid</font>

723
00:27:35,460 --> 00:27:39,840
of the ability for<font color="#E5E5E5"> an analyst</font><font color="#CCCCCC"> to miss</font>

724
00:27:38,549 --> 00:27:41,700
certain<font color="#CCCCCC"> things right like there's always</font>

725
00:27:39,840 --> 00:27:42,840
still that option<font color="#E5E5E5"> but if you're</font><font color="#CCCCCC"> actually</font>

726
00:27:41,700 --> 00:27:44,429
highlighting and calling out specific

727
00:27:42,840 --> 00:27:47,039
<font color="#E5E5E5">EDR products that are installed on a</font>

728
00:27:44,429 --> 00:27:47,970
system then you know that<font color="#E5E5E5"> that's</font>

729
00:27:47,039 --> 00:27:50,039
<font color="#CCCCCC">something that</font><font color="#E5E5E5"> you should look</font><font color="#CCCCCC"> for and</font>

730
00:27:47,970 --> 00:27:52,320
<font color="#E5E5E5">try to like protect your actions against</font>

731
00:27:50,039 --> 00:27:55,320
this next<font color="#E5E5E5"> step is for persistence and</font>

732
00:27:52,320 --> 00:27:58,350
how<font color="#E5E5E5"> can we apply aggressive scripting to</font>

733
00:27:55,320 --> 00:28:01,230
persistence as well<font color="#E5E5E5"> so we found that</font>

734
00:27:58,350 --> 00:28:03,178
<font color="#E5E5E5">really minimal EDR software has</font>

735
00:28:01,230 --> 00:28:04,799
exclusions which<font color="#E5E5E5"> we can exploit to</font>

736
00:28:03,179 --> 00:28:06,630
maintain access<font color="#E5E5E5"> what I mean like</font>

737
00:28:04,799 --> 00:28:08,820
persistence<font color="#CCCCCC"> may be the next steps that</font>

738
00:28:06,630 --> 00:28:10,230
we actually<font color="#E5E5E5"> want to take automating</font>

739
00:28:08,820 --> 00:28:13,230
persistence is something that

740
00:28:10,230 --> 00:28:14,309
unhesitating on because again<font color="#CCCCCC"> I kind of</font>

741
00:28:13,230 --> 00:28:15,899
<font color="#E5E5E5">view like red teaming as a creative</font>

742
00:28:14,309 --> 00:28:17,340
<font color="#E5E5E5">process pen testing is it's kind of hard</font>

743
00:28:15,899 --> 00:28:18,929
<font color="#CCCCCC">to completely just odd</font>

744
00:28:17,340 --> 00:28:20,459
<font color="#CCCCCC">make the whole thing and</font><font color="#E5E5E5"> persistence is</font>

745
00:28:18,930 --> 00:28:21,720
something where you<font color="#CCCCCC"> might want to take a</font>

746
00:28:20,460 --> 00:28:23,670
<font color="#E5E5E5">little care</font><font color="#CCCCCC"> or if</font><font color="#E5E5E5"> like you don't want to</font>

747
00:28:21,720 --> 00:28:25,230
<font color="#E5E5E5">just have your beacon</font><font color="#CCCCCC"> check-in if you're</font>

748
00:28:23,670 --> 00:28:28,560
an administrator<font color="#CCCCCC"> just install</font>

749
00:28:25,230 --> 00:28:29,610
persistence<font color="#CCCCCC"> X I didn't want that route I</font>

750
00:28:28,560 --> 00:28:31,919
don't think it's the<font color="#E5E5E5"> best route to take</font>

751
00:28:29,610 --> 00:28:34,320
so this is a slight little<font color="#E5E5E5"> bit of a</font>

752
00:28:31,920 --> 00:28:37,470
manual<font color="#CCCCCC"> interaction also</font><font color="#E5E5E5"> by automating as</font>

753
00:28:34,320 --> 00:28:39,270
much as it<font color="#E5E5E5"> can</font><font color="#CCCCCC"> so there's a couple</font>

754
00:28:37,470 --> 00:28:41,160
<font color="#CCCCCC">different ways</font><font color="#E5E5E5"> to persist on a system I</font>

755
00:28:39,270 --> 00:28:42,629
mean everyone's persistence 101 is

756
00:28:41,160 --> 00:28:44,400
basically a registry run key or some

757
00:28:42,630 --> 00:28:45,870
sort of<font color="#CCCCCC"> scheduled tasks some new</font>

758
00:28:44,400 --> 00:28:48,180
different persistence techniques are

759
00:28:45,870 --> 00:28:50,189
like<font color="#E5E5E5"> W my persistence which like</font><font color="#CCCCCC"> Mac</font>

760
00:28:48,180 --> 00:28:52,230
<font color="#CCCCCC">graver really talked about</font><font color="#E5E5E5"> I believe</font><font color="#CCCCCC"> he</font>

761
00:28:50,190 --> 00:28:54,690
really<font color="#E5E5E5"> kind of populated that or made</font>

762
00:28:52,230 --> 00:28:56,970
this persistence mechanism popular and

763
00:28:54,690 --> 00:29:00,330
is like<font color="#CCCCCC"> blackhat 2015 talk about</font>

764
00:28:56,970 --> 00:29:01,740
weaponizing<font color="#CCCCCC"> WMI</font><font color="#E5E5E5"> so but the problem</font><font color="#CCCCCC"> is</font>

765
00:29:00,330 --> 00:29:03,330
<font color="#CCCCCC">like there's multiple steps</font><font color="#E5E5E5"> that are</font>

766
00:29:01,740 --> 00:29:05,760
needed<font color="#CCCCCC"> to take to build out your W my</font>

767
00:29:03,330 --> 00:29:07,590
<font color="#E5E5E5">base persistence so rather than doing</font>

768
00:29:05,760 --> 00:29:09,960
all that manually from<font color="#CCCCCC"> the command line</font>

769
00:29:07,590 --> 00:29:12,449
<font color="#CCCCCC">again let's automate</font><font color="#E5E5E5"> exactly what we can</font>

770
00:29:09,960 --> 00:29:15,270
to create like a<font color="#E5E5E5"> pop-up menu so we</font>

771
00:29:12,450 --> 00:29:16,770
created a aggressive script that

772
00:29:15,270 --> 00:29:18,450
<font color="#E5E5E5">basically</font><font color="#CCCCCC"> looks like this when you</font>

773
00:29:16,770 --> 00:29:19,830
<font color="#CCCCCC">right-click on</font><font color="#E5E5E5"> your system or on a</font>

774
00:29:18,450 --> 00:29:21,120
beacon<font color="#E5E5E5"> it'll ask you what sort of</font>

775
00:29:19,830 --> 00:29:22,530
persistence<font color="#CCCCCC"> do you want to</font><font color="#E5E5E5"> install in</font>

776
00:29:21,120 --> 00:29:24,600
this case<font color="#CCCCCC"> it's registry based</font>

777
00:29:22,530 --> 00:29:26,460
persistence and so you now have<font color="#CCCCCC"> the</font>

778
00:29:24,600 --> 00:29:29,669
<font color="#CCCCCC">ability to specify do you want to do</font><font color="#E5E5E5"> HKC</font>

779
00:29:26,460 --> 00:29:31,800
<font color="#E5E5E5">you hklm in the registry what's the path</font>

780
00:29:29,670 --> 00:29:33,780
that you<font color="#CCCCCC"> want to where you want to set</font>

781
00:29:31,800 --> 00:29:35,700
your value what's the registry<font color="#CCCCCC"> value</font>

782
00:29:33,780 --> 00:29:36,840
value and then what's your kind<font color="#CCCCCC"> of</font>

783
00:29:35,700 --> 00:29:39,360
payload<font color="#E5E5E5"> that you're looking to</font><font color="#CCCCCC"> run so in</font>

784
00:29:36,840 --> 00:29:41,070
this case it's evil DXE<font color="#CCCCCC"> what we also</font>

785
00:29:39,360 --> 00:29:43,260
wanted<font color="#E5E5E5"> to do is anyone doing red</font><font color="#CCCCCC"> teaming</font>

786
00:29:41,070 --> 00:29:44,610
<font color="#CCCCCC">pentesting obviously you know that as</font>

787
00:29:43,260 --> 00:29:46,500
<font color="#E5E5E5">you go through</font><font color="#CCCCCC"> these environments you</font>

788
00:29:44,610 --> 00:29:48,840
have<font color="#E5E5E5"> to clean up all</font><font color="#CCCCCC"> of your actions so</font>

789
00:29:46,500 --> 00:29:50,790
this script will either add or<font color="#E5E5E5"> remove</font>

790
00:29:48,840 --> 00:29:53,010
persistence<font color="#E5E5E5"> based on like the</font>

791
00:29:50,790 --> 00:29:54,360
<font color="#E5E5E5">information that you provide so I can do</font>

792
00:29:53,010 --> 00:29:56,400
either<font color="#E5E5E5"> way</font><font color="#CCCCCC"> and then finally the last</font>

793
00:29:54,360 --> 00:29:59,120
thing<font color="#E5E5E5"> to do is just specify what beacon</font>

794
00:29:56,400 --> 00:30:01,590
are you looking to run this<font color="#E5E5E5"> command on</font>

795
00:29:59,120 --> 00:30:04,080
another one is scheduled<font color="#CCCCCC"> tasks</font><font color="#E5E5E5"> based</font>

796
00:30:01,590 --> 00:30:06,750
persistence<font color="#E5E5E5"> so you can schedule a task</font>

797
00:30:04,080 --> 00:30:08,610
<font color="#CCCCCC">specify the time it's basically</font><font color="#E5E5E5"> all the</font>

798
00:30:06,750 --> 00:30:10,350
<font color="#CCCCCC">same things as registry except it's just</font>

799
00:30:08,610 --> 00:30:13,800
<font color="#CCCCCC">a different mechanism</font><font color="#E5E5E5"> for persisting on</font>

800
00:30:10,350 --> 00:30:16,350
a host finally here we have<font color="#E5E5E5"> W my base</font>

801
00:30:13,800 --> 00:30:18,090
persistence<font color="#E5E5E5"> this is now you can just</font>

802
00:30:16,350 --> 00:30:19,800
<font color="#E5E5E5">specify what sort of class names you</font>

803
00:30:18,090 --> 00:30:21,300
want<font color="#E5E5E5"> to provide and it will just install</font>

804
00:30:19,800 --> 00:30:24,659
<font color="#E5E5E5">everything you all you need to do is</font>

805
00:30:21,300 --> 00:30:26,070
provide<font color="#CCCCCC"> the payload so to do this we</font>

806
00:30:24,660 --> 00:30:28,470
<font color="#E5E5E5">basically are setting a bunch of rained</font>

807
00:30:26,070 --> 00:30:30,659
a bunch of global variables in this<font color="#E5E5E5"> case</font>

808
00:30:28,470 --> 00:30:31,260
<font color="#E5E5E5">we're just specifying like by default</font><font color="#CCCCCC"> as</font>

809
00:30:30,660 --> 00:30:34,050
you<font color="#E5E5E5"> guys saw</font>

810
00:30:31,260 --> 00:30:35,850
HKC you popped up<font color="#E5E5E5"> so we're defining this</font>

811
00:30:34,050 --> 00:30:37,320
here<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> all this information that</font>

812
00:30:35,850 --> 00:30:40,409
<font color="#CCCCCC">you</font><font color="#E5E5E5"> could care about for like the</font>

813
00:30:37,320 --> 00:30:43,980
default<font color="#CCCCCC"> info in these pop-ups are</font>

814
00:30:40,410 --> 00:30:45,540
defined right here<font color="#CCCCCC"> the retin so in this</font>

815
00:30:43,980 --> 00:30:47,640
case the registry persistent section

816
00:30:45,540 --> 00:30:49,580
<font color="#E5E5E5">we're going through and we're telling it</font>

817
00:30:47,640 --> 00:30:51,990
hey<font color="#E5E5E5"> okay we're gonna add to registry key</font>

818
00:30:49,580 --> 00:30:53,669
<font color="#E5E5E5">in this place this</font><font color="#CCCCCC"> is the specific</font>

819
00:30:51,990 --> 00:30:55,380
actual<font color="#E5E5E5"> powershell command that's running</font>

820
00:30:53,670 --> 00:30:57,510
in the<font color="#CCCCCC"> background so a new item property</font>

821
00:30:55,380 --> 00:31:00,960
<font color="#E5E5E5">we're specifying the path or specifying</font>

822
00:30:57,510 --> 00:31:02,400
<font color="#E5E5E5">or the hive the path the value that it's</font>

823
00:31:00,960 --> 00:31:03,780
<font color="#E5E5E5">going to be a type string and then</font><font color="#CCCCCC"> the</font>

824
00:31:02,400 --> 00:31:06,120
actual like<font color="#CCCCCC"> Paila that you're</font><font color="#E5E5E5"> wanting</font><font color="#CCCCCC"> to</font>

825
00:31:03,780 --> 00:31:08,370
run so this<font color="#E5E5E5"> is removing some</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> these</font>

826
00:31:06,120 --> 00:31:10,139
like<font color="#CCCCCC"> syntax or potential syntax errors</font>

827
00:31:08,370 --> 00:31:14,610
out<font color="#E5E5E5"> that can be used potentially for</font>

828
00:31:10,140 --> 00:31:16,560
<font color="#E5E5E5">detection</font><font color="#CCCCCC"> the next part is if we</font><font color="#E5E5E5"> are not</font>

829
00:31:14,610 --> 00:31:17,969
if we're actually trying to write<font color="#CCCCCC"> to</font>

830
00:31:16,560 --> 00:31:19,530
hklm

831
00:31:17,970 --> 00:31:21,090
that actually<font color="#CCCCCC"> obviously requires</font>

832
00:31:19,530 --> 00:31:23,760
administrative<font color="#E5E5E5"> rights on whatever system</font>

833
00:31:21,090 --> 00:31:25,709
so we can<font color="#E5E5E5"> try to</font><font color="#CCCCCC"> prevent another error</font>

834
00:31:23,760 --> 00:31:27,210
where<font color="#E5E5E5"> your based on the permissions that</font>

835
00:31:25,710 --> 00:31:28,890
<font color="#E5E5E5">you have</font><font color="#CCCCCC"> you're unable</font><font color="#E5E5E5"> to install</font>

836
00:31:27,210 --> 00:31:31,140
persistence in a specific<font color="#E5E5E5"> way</font><font color="#CCCCCC"> and</font>

837
00:31:28,890 --> 00:31:32,280
<font color="#E5E5E5">aggressor will automate all that for you</font>

838
00:31:31,140 --> 00:31:34,800
right here<font color="#E5E5E5"> and will prevent it from</font>

839
00:31:32,280 --> 00:31:36,750
happening<font color="#E5E5E5"> before you ever conduct an off</font>

840
00:31:34,800 --> 00:31:40,200
<font color="#CCCCCC">an action on the system that you're</font>

841
00:31:36,750 --> 00:31:41,670
trying<font color="#E5E5E5"> to persist on and finally at this</font>

842
00:31:40,200 --> 00:31:43,260
point if everything else<font color="#E5E5E5"> goes well it's</font>

843
00:31:41,670 --> 00:31:45,210
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> just go ahead and</font><font color="#CCCCCC"> install</font><font color="#E5E5E5"> the</font>

844
00:31:43,260 --> 00:31:46,590
registry based persistence<font color="#E5E5E5"> and in this</font>

845
00:31:45,210 --> 00:31:47,730
case we're using the<font color="#CCCCCC"> B power</font><font color="#E5E5E5"> pick</font>

846
00:31:46,590 --> 00:31:50,310
function that hardly<font color="#E5E5E5"> was talking about</font>

847
00:31:47,730 --> 00:31:52,260
<font color="#CCCCCC">earlier</font><font color="#E5E5E5"> where it's it's not calling</font>

848
00:31:50,310 --> 00:31:57,000
<font color="#E5E5E5">PowerShell dot exe it's using unmanaged</font>

849
00:31:52,260 --> 00:31:58,170
<font color="#E5E5E5">PowerShell and running your command so</font>

850
00:31:57,000 --> 00:31:59,850
this is the same<font color="#E5E5E5"> concept</font>

851
00:31:58,170 --> 00:32:01,560
<font color="#CCCCCC">here's</font><font color="#E5E5E5"> kind of like our registry</font>

852
00:31:59,850 --> 00:32:03,540
persistence except this<font color="#E5E5E5"> part we are</font>

853
00:32:01,560 --> 00:32:05,760
<font color="#E5E5E5">building out the</font><font color="#CCCCCC"> pop-up menu and what it</font>

854
00:32:03,540 --> 00:32:07,320
<font color="#E5E5E5">looks</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> so we have the very bottom</font>

855
00:32:05,760 --> 00:32:09,030
originally all the different beacons

856
00:32:07,320 --> 00:32:10,439
that<font color="#E5E5E5"> you can choose that</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> want to</font>

857
00:32:09,030 --> 00:32:12,000
select like which beacon do you want to

858
00:32:10,440 --> 00:32:13,140
run this command<font color="#E5E5E5"> on well this is how</font>

859
00:32:12,000 --> 00:32:15,120
we're doing<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're gathering an</font>

860
00:32:13,140 --> 00:32:18,120
array of<font color="#E5E5E5"> every single beacon</font><font color="#CCCCCC"> that's</font>

861
00:32:15,120 --> 00:32:19,739
running<font color="#E5E5E5"> on the system right here on this</font>

862
00:32:18,120 --> 00:32:21,659
code box

863
00:32:19,740 --> 00:32:23,790
we're<font color="#CCCCCC"> basically setting the default</font>

864
00:32:21,660 --> 00:32:25,050
values<font color="#E5E5E5"> and we're also defining</font><font color="#CCCCCC"> the</font>

865
00:32:23,790 --> 00:32:27,270
different fields that<font color="#E5E5E5"> are going to be</font>

866
00:32:25,050 --> 00:32:30,379
present<font color="#E5E5E5"> on this</font><font color="#CCCCCC"> pop-up so such as</font>

867
00:32:27,270 --> 00:32:32,490
registry persistence<font color="#E5E5E5"> where else are</font><font color="#CCCCCC"> we</font>

868
00:32:30,380 --> 00:32:34,230
<font color="#E5E5E5">sorry I'm</font><font color="#CCCCCC"> trading so like what however</font>

869
00:32:32,490 --> 00:32:35,580
we look in a target<font color="#E5E5E5"> what is the value</font>

870
00:32:34,230 --> 00:32:38,610
what's the path to the payload<font color="#CCCCCC"> that you</font>

871
00:32:35,580 --> 00:32:40,169
want to run right<font color="#E5E5E5"> down here is where</font>

872
00:32:38,610 --> 00:32:41,850
those boxes are<font color="#CCCCCC"> actually being created</font>

873
00:32:40,170 --> 00:32:43,710
<font color="#E5E5E5">and we're still giving</font><font color="#CCCCCC"> some of the</font>

874
00:32:41,850 --> 00:32:44,969
<font color="#CCCCCC">information required to</font><font color="#E5E5E5"> build that</font>

875
00:32:43,710 --> 00:32:46,559
<font color="#E5E5E5">pop-up menu</font>

876
00:32:44,970 --> 00:32:48,419
and then down here<font color="#CCCCCC"> is we're actually</font>

877
00:32:46,559 --> 00:32:50,190
telling<font color="#E5E5E5"> it</font><font color="#CCCCCC"> to show the</font><font color="#E5E5E5"> pop-up-menu</font>

878
00:32:48,419 --> 00:32:51,539
<font color="#CCCCCC">and then once it's done clear the array</font>

879
00:32:50,190 --> 00:32:54,659
<font color="#E5E5E5">of all that data that we stored inside</font>

880
00:32:51,539 --> 00:32:56,129
of<font color="#E5E5E5"> it so again this is kind</font><font color="#CCCCCC"> of that</font>

881
00:32:54,659 --> 00:32:58,020
registry<font color="#E5E5E5"> persistence and this is what</font>

882
00:32:56,130 --> 00:33:02,070
<font color="#E5E5E5">its gonna look like all that code</font><font color="#CCCCCC"> so</font>

883
00:32:58,020 --> 00:33:06,350
<font color="#CCCCCC">let's give a quick example and we have a</font>

884
00:33:02,070 --> 00:33:06,350
<font color="#E5E5E5">video of this let me escape out of here</font>

885
00:33:13,600 --> 00:33:18,830
<font color="#CCCCCC">all right so in this</font><font color="#E5E5E5"> case</font><font color="#CCCCCC"> we have let me</font>

886
00:33:16,730 --> 00:33:20,390
back<font color="#CCCCCC"> up just</font><font color="#E5E5E5"> a little bit we</font><font color="#CCCCCC"> have the</font>

887
00:33:18,830 --> 00:33:21,980
beacon<font color="#E5E5E5"> on the system we</font><font color="#CCCCCC"> already have our</font>

888
00:33:20,390 --> 00:33:23,990
<font color="#CCCCCC">aggressors script loaded</font><font color="#E5E5E5"> you can</font><font color="#CCCCCC"> see</font>

889
00:33:21,980 --> 00:33:25,010
down<font color="#CCCCCC"> here there it's a new menu based</font>

890
00:33:23,990 --> 00:33:27,470
off of<font color="#E5E5E5"> the code that we wrote</font><font color="#CCCCCC"> for</font>

891
00:33:25,010 --> 00:33:29,690
registry<font color="#E5E5E5"> persistence scheduled tasks or</font>

892
00:33:27,470 --> 00:33:31,820
WMI<font color="#E5E5E5"> based persistence so you can just</font>

893
00:33:29,690 --> 00:33:33,710
select whichever<font color="#E5E5E5"> option that you</font><font color="#CCCCCC"> want to</font>

894
00:33:31,820 --> 00:33:35,720
<font color="#CCCCCC">select in this case we chose registry</font>

895
00:33:33,710 --> 00:33:37,190
based persistence<font color="#E5E5E5"> you can see the same</font>

896
00:33:35,720 --> 00:33:39,710
pop-up<font color="#E5E5E5"> menu popped up and it's just</font>

897
00:33:37,190 --> 00:33:42,380
<font color="#CCCCCC">asking - for us to customize and define</font>

898
00:33:39,710 --> 00:33:44,120
the different aspects of the persistence

899
00:33:42,380 --> 00:33:46,280
that<font color="#E5E5E5"> we want to install or</font><font color="#CCCCCC"> installing</font>

900
00:33:44,120 --> 00:33:47,629
persistence<font color="#E5E5E5"> and we're</font><font color="#CCCCCC"> running it and so</font>

901
00:33:46,280 --> 00:33:49,790
<font color="#E5E5E5">now in this case because it's just</font>

902
00:33:47,630 --> 00:33:51,950
<font color="#E5E5E5">essentially a single command this is</font>

903
00:33:49,790 --> 00:33:55,190
using power pick to install that command

904
00:33:51,950 --> 00:33:57,559
<font color="#CCCCCC">or run PowerShell to</font><font color="#E5E5E5"> install a registry</font>

905
00:33:55,190 --> 00:33:59,240
based persistence<font color="#E5E5E5"> and so that happened</font>

906
00:33:57,559 --> 00:34:02,510
in the background<font color="#E5E5E5"> on this system that</font>

907
00:33:59,240 --> 00:34:04,400
<font color="#E5E5E5">Harleys</font><font color="#CCCCCC"> tested</font><font color="#E5E5E5"> this on and so now it's</font>

908
00:34:02,510 --> 00:34:05,690
<font color="#E5E5E5">gonna be time to essentially validate</font>

909
00:34:04,400 --> 00:34:08,450
and make sure that that registry based

910
00:34:05,690 --> 00:34:10,399
persistence did take so we're gonna give

911
00:34:08,449 --> 00:34:14,330
<font color="#CCCCCC">it just a second</font><font color="#E5E5E5"> and let it load up</font><font color="#CCCCCC"> so</font>

912
00:34:10,399 --> 00:34:16,190
we can<font color="#CCCCCC"> move ahead and</font><font color="#E5E5E5"> so the system</font>

913
00:34:14,330 --> 00:34:18,020
loaded and you can just see I know if

914
00:34:16,190 --> 00:34:20,418
you saw our second beacon just<font color="#E5E5E5"> checked</font>

915
00:34:18,020 --> 00:34:22,489
in<font color="#E5E5E5"> so we lost access with our first one</font>

916
00:34:20,418 --> 00:34:24,109
but because<font color="#E5E5E5"> we have in this case the</font>

917
00:34:22,489 --> 00:34:25,879
registry run key based persistence that

918
00:34:24,109 --> 00:34:28,219
<font color="#E5E5E5">was all installed through this it did</font>

919
00:34:25,879 --> 00:34:30,049
work and here's his<font color="#E5E5E5"> EDR output where</font>

920
00:34:28,219 --> 00:34:31,730
he's looking<font color="#CCCCCC"> at the colored process</font>

921
00:34:30,050 --> 00:34:32,869
listening and so we know<font color="#E5E5E5"> whether to be</font>

922
00:34:31,730 --> 00:34:36,790
careful with<font color="#CCCCCC"> what we're doing or not</font>

923
00:34:32,869 --> 00:34:36,790
<font color="#E5E5E5">based off of what software is</font><font color="#CCCCCC"> running</font>

924
00:34:41,050 --> 00:34:44,050
<font color="#E5E5E5">believe</font>

925
00:34:44,820 --> 00:34:48,580
<font color="#E5E5E5">all right so let's talk about generating</font>

926
00:34:46,960 --> 00:34:52,119
payloads and<font color="#E5E5E5"> how we can use aggressor</font>

927
00:34:48,580 --> 00:34:53,168
with that so<font color="#E5E5E5"> a payload generation is</font>

928
00:34:52,119 --> 00:34:54,730
another crucial step<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Red Team</font>

929
00:34:53,168 --> 00:34:56,770
engagements right used for many

930
00:34:54,730 --> 00:34:58,930
different<font color="#E5E5E5"> reasons initial access lateral</font>

931
00:34:56,770 --> 00:35:01,030
movement persistence obfuscation<font color="#E5E5E5"> and</font>

932
00:34:58,930 --> 00:35:02,950
coding application whitelisting all that

933
00:35:01,030 --> 00:35:05,260
kind of stuff<font color="#E5E5E5"> it's beneficial for</font><font color="#CCCCCC"> blue</font>

934
00:35:02,950 --> 00:35:06,939
team as well<font color="#CCCCCC"> so blue teamers</font><font color="#E5E5E5"> you can use</font>

935
00:35:05,260 --> 00:35:09,099
this for a signature<font color="#CCCCCC"> Basin identifiers</font>

936
00:35:06,940 --> 00:35:10,810
right<font color="#CCCCCC"> IO C's you can write</font><font color="#E5E5E5"> for them</font>

937
00:35:09,099 --> 00:35:13,210
you can test<font color="#E5E5E5"> to take detection</font>

938
00:35:10,810 --> 00:35:17,170
capabilities and<font color="#E5E5E5"> also the payload sizes</font>

939
00:35:13,210 --> 00:35:18,490
and the types of payloads so what types

940
00:35:17,170 --> 00:35:20,560
of payloads can regenerate with<font color="#E5E5E5"> cobalt</font>

941
00:35:18,490 --> 00:35:24,848
strike<font color="#E5E5E5"> right we have our HTTP listener</font>

942
00:35:20,560 --> 00:35:26,680
<font color="#CCCCCC">HPS SMB</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> DNS how do they work</font><font color="#E5E5E5"> and how</font>

943
00:35:24,849 --> 00:35:28,660
are they generated right there's stage

944
00:35:26,680 --> 00:35:29,919
<font color="#CCCCCC">versus stage lists stage is going</font><font color="#E5E5E5"> to go</font>

945
00:35:28,660 --> 00:35:31,509
back<font color="#E5E5E5"> and reach back out</font><font color="#CCCCCC"> to your team</font>

946
00:35:29,920 --> 00:35:33,040
server and grab the rest of the payload

947
00:35:31,510 --> 00:35:35,980
<font color="#E5E5E5">whereas stage left is the</font><font color="#CCCCCC"> full-on</font>

948
00:35:33,040 --> 00:35:37,390
<font color="#E5E5E5">payload which will be on disk it's based</font>

949
00:35:35,980 --> 00:35:38,950
off<font color="#E5E5E5"> a listener information</font><font color="#CCCCCC"> your</font>

950
00:35:37,390 --> 00:35:41,200
malleable profile that<font color="#E5E5E5"> you set up</font><font color="#CCCCCC"> in</font>

951
00:35:38,950 --> 00:35:44,410
<font color="#E5E5E5">your architecture selection so</font><font color="#CCCCCC"> 64-bit or</font>

952
00:35:41,200 --> 00:35:46,480
<font color="#CCCCCC">32-bit</font><font color="#E5E5E5"> and then the that's kind of the</font>

953
00:35:44,410 --> 00:35:49,720
way how<font color="#CCCCCC"> you generate attacks packages</font>

954
00:35:46,480 --> 00:35:51,400
menu so how can we automate payload

955
00:35:49,720 --> 00:35:53,049
generation using<font color="#E5E5E5"> aggressor</font><font color="#CCCCCC"> we want to</font>

956
00:35:51,400 --> 00:35:54,490
utilize<font color="#CCCCCC"> that dialogue</font><font color="#E5E5E5"> API that Chris</font>

957
00:35:53,050 --> 00:35:57,280
<font color="#CCCCCC">showed earlier that with a drill</font>

958
00:35:54,490 --> 00:35:58,720
listener tab and then also the artifact

959
00:35:57,280 --> 00:36:00,339
<font color="#E5E5E5">and artifact stage</font><font color="#CCCCCC"> 'less functions</font>

960
00:35:58,720 --> 00:36:03,790
<font color="#CCCCCC">within</font><font color="#E5E5E5"> aggressor itself can help you</font>

961
00:36:00,339 --> 00:36:05,980
generate those payloads so here the the

962
00:36:03,790 --> 00:36:08,800
<font color="#CCCCCC">Dre listener functions</font><font color="#E5E5E5"> that are in the</font>

963
00:36:05,980 --> 00:36:12,310
actual<font color="#E5E5E5"> manual itself</font><font color="#CCCCCC"> we can</font><font color="#E5E5E5"> we can</font>

964
00:36:08,800 --> 00:36:14,050
extend these<font color="#E5E5E5"> however much we want and</font>

965
00:36:12,310 --> 00:36:16,180
then here's<font color="#E5E5E5"> the artifact and artifacts</font>

966
00:36:14,050 --> 00:36:18,880
<font color="#CCCCCC">Ageless functions so here</font><font color="#E5E5E5"> you have</font>

967
00:36:16,180 --> 00:36:20,799
multiple<font color="#E5E5E5"> arguments for each one so</font><font color="#CCCCCC"> we're</font>

968
00:36:18,880 --> 00:36:23,310
gonna<font color="#CCCCCC"> use these to iterate through</font><font color="#E5E5E5"> them</font>

969
00:36:20,800 --> 00:36:27,490
and then generate payloads based off of

970
00:36:23,310 --> 00:36:33,089
based<font color="#E5E5E5"> off of the options we have so</font>

971
00:36:27,490 --> 00:36:33,089
here's a quick demo so<font color="#CCCCCC"> that's a</font><font color="#E5E5E5"> video</font>

972
00:36:33,990 --> 00:36:41,180
yeah go for artifact

973
00:36:42,820 --> 00:36:47,360
<font color="#E5E5E5">all right so here we</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> see that</font><font color="#CCCCCC"> we're</font>

974
00:36:44,990 --> 00:36:49,850
we actually altered the UI a little bit

975
00:36:47,360 --> 00:36:50,870
we have<font color="#CCCCCC"> a</font><font color="#E5E5E5"> payload</font><font color="#CCCCCC"> of generator menu we</font>

976
00:36:49,850 --> 00:36:52,910
<font color="#E5E5E5">went ahead and generated all the</font>

977
00:36:50,870 --> 00:36:54,890
<font color="#E5E5E5">payloads it told us that they were</font>

978
00:36:52,910 --> 00:36:57,350
generated<font color="#E5E5E5"> check that folder to where</font>

979
00:36:54,890 --> 00:36:59,120
they are<font color="#E5E5E5"> so now we can go in our folder</font>

980
00:36:57,350 --> 00:37:01,759
location and we see that those those

981
00:36:59,120 --> 00:37:03,940
<font color="#E5E5E5">actual folders were created and they</font>

982
00:37:01,760 --> 00:37:06,620
have the<font color="#E5E5E5"> actual payloads inside of them</font>

983
00:37:03,940 --> 00:37:08,620
<font color="#E5E5E5">so there's all the staged payloads all</font>

984
00:37:06,620 --> 00:37:11,299
the different<font color="#E5E5E5"> formats that they</font>

985
00:37:08,620 --> 00:37:13,310
<font color="#CCCCCC">generated and all the stages</font><font color="#E5E5E5"> payloads</font>

986
00:37:11,300 --> 00:37:14,870
<font color="#E5E5E5">with all the different formats</font><font color="#CCCCCC"> so it's</font>

987
00:37:13,310 --> 00:37:24,710
kind of a cool<font color="#E5E5E5"> unique way to use</font>

988
00:37:14,870 --> 00:37:27,259
<font color="#E5E5E5">agressor to automate that SMB so now for</font>

989
00:37:24,710 --> 00:37:28,970
SMB payloads<font color="#E5E5E5"> right we can do it</font><font color="#CCCCCC"> we can</font>

990
00:37:27,260 --> 00:37:32,390
<font color="#CCCCCC">use</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> dialog API and make it a</font><font color="#E5E5E5"> little</font>

991
00:37:28,970 --> 00:37:34,640
bit more clean and<font color="#E5E5E5"> easy for the user so</font>

992
00:37:32,390 --> 00:37:38,150
<font color="#CCCCCC">now we want to</font><font color="#E5E5E5"> select</font><font color="#CCCCCC"> the listener with</font>

993
00:37:34,640 --> 00:37:39,560
<font color="#CCCCCC">the drop down to SMB we can type out the</font>

994
00:37:38,150 --> 00:37:41,510
payload name that we<font color="#CCCCCC"> want</font><font color="#E5E5E5"> you want</font>

995
00:37:39,560 --> 00:37:44,480
<font color="#E5E5E5">staged or</font><font color="#CCCCCC"> staged list</font><font color="#E5E5E5"> and then the</font>

996
00:37:41,510 --> 00:37:46,640
output<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we want so here for this</font>

997
00:37:44,480 --> 00:37:49,510
<font color="#E5E5E5">example it's gonna be</font><font color="#CCCCCC"> exe</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we're</font>

998
00:37:46,640 --> 00:37:49,509
gonna name it<font color="#CCCCCC"> accordingly</font>

999
00:37:50,080 --> 00:37:54,440
so once we hadn´t go ahead and go<font color="#CCCCCC"> ahead</font>

1000
00:37:52,490 --> 00:37:56,569
and<font color="#CCCCCC"> hit generate it'll tell us that it's</font>

1001
00:37:54,440 --> 00:37:59,840
been saved<font color="#E5E5E5"> it's been generated</font><font color="#CCCCCC"> we can</font>

1002
00:37:56,570 --> 00:38:01,940
check the file location of it or we can

1003
00:37:59,840 --> 00:38:08,750
generate<font color="#CCCCCC"> stage less payload as well same</font>

1004
00:38:01,940 --> 00:38:12,380
<font color="#CCCCCC">thing just a different payload type so</font>

1005
00:38:08,750 --> 00:38:15,860
<font color="#E5E5E5">stage lisiek see</font><font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> make sure I</font>

1006
00:38:12,380 --> 00:38:18,680
select<font color="#E5E5E5"> exe as the output generate</font><font color="#CCCCCC"> a it's</font>

1007
00:38:15,860 --> 00:38:21,740
been generated<font color="#CCCCCC"> okay great and then we</font>

1008
00:38:18,680 --> 00:38:23,919
check our file structure<font color="#E5E5E5"> and</font><font color="#CCCCCC"> they're in</font>

1009
00:38:21,740 --> 00:38:23,919
there

1010
00:38:34,580 --> 00:38:40,759
<font color="#CCCCCC">all right so lateral movement</font><font color="#E5E5E5"> I think</font>

1011
00:38:38,210 --> 00:38:42,230
<font color="#CCCCCC">got two more sections</font><font color="#E5E5E5"> lateral movements</font>

1012
00:38:40,760 --> 00:38:43,220
a lot of removing is a vital part<font color="#CCCCCC"> of</font>

1013
00:38:42,230 --> 00:38:46,130
pretty much<font color="#E5E5E5"> any assessment that you</font>

1014
00:38:43,220 --> 00:38:47,660
operate<font color="#E5E5E5"> in right so what value can</font><font color="#CCCCCC"> we</font>

1015
00:38:46,130 --> 00:38:49,370
add if we can get access<font color="#E5E5E5"> into</font>

1016
00:38:47,660 --> 00:38:51,319
environment<font color="#E5E5E5"> but we can't compromise</font>

1017
00:38:49,370 --> 00:38:52,520
<font color="#E5E5E5">anything else</font><font color="#CCCCCC"> we can't access the data</font>

1018
00:38:51,320 --> 00:38:54,380
<font color="#E5E5E5">that our customer is looking at for</font><font color="#CCCCCC"> us</font>

1019
00:38:52,520 --> 00:38:57,170
<font color="#E5E5E5">to access like we want to show business</font>

1020
00:38:54,380 --> 00:38:58,730
impact right so<font color="#CCCCCC"> nine out of ten times we</font>

1021
00:38:57,170 --> 00:39:00,260
<font color="#E5E5E5">need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> move laterally compromise</font>

1022
00:38:58,730 --> 00:39:01,760
additional systems within<font color="#CCCCCC"> the</font>

1023
00:39:00,260 --> 00:39:03,620
<font color="#CCCCCC">environment that were operating in in</font>

1024
00:39:01,760 --> 00:39:05,360
order<font color="#E5E5E5"> to</font><font color="#CCCCCC"> do that well how can</font><font color="#E5E5E5"> we</font>

1025
00:39:03,620 --> 00:39:07,130
automate<font color="#CCCCCC"> this methodology</font><font color="#E5E5E5"> how can we use</font>

1026
00:39:05,360 --> 00:39:10,790
aggressive scripting to enhance lateral

1027
00:39:07,130 --> 00:39:12,980
<font color="#CCCCCC">movement built into beacon are a couple</font>

1028
00:39:10,790 --> 00:39:15,200
different methods<font color="#CCCCCC"> to laterally move with</font>

1029
00:39:12,980 --> 00:39:17,690
an environment<font color="#E5E5E5"> you can use</font><font color="#CCCCCC"> WMI you can</font>

1030
00:39:15,200 --> 00:39:20,330
use PS exec or PS<font color="#E5E5E5"> exec psh which calls</font>

1031
00:39:17,690 --> 00:39:22,040
<font color="#CCCCCC">PowerShell through PS exec you can use</font>

1032
00:39:20,330 --> 00:39:23,990
win<font color="#CCCCCC"> RM if it's up and</font><font color="#E5E5E5"> running</font><font color="#CCCCCC"> on the</font>

1033
00:39:22,040 --> 00:39:25,700
<font color="#E5E5E5">system that you're targeting</font><font color="#CCCCCC"> all of</font>

1034
00:39:23,990 --> 00:39:28,970
these essentially though in the backend

1035
00:39:25,700 --> 00:39:31,220
<font color="#E5E5E5">use</font><font color="#CCCCCC"> WMI or win RM</font><font color="#E5E5E5"> to trigger something</font>

1036
00:39:28,970 --> 00:39:33,169
<font color="#CCCCCC">but run a powershell one-liner to</font>

1037
00:39:31,220 --> 00:39:35,509
actually compromise the<font color="#CCCCCC"> system that</font>

1038
00:39:33,170 --> 00:39:37,250
<font color="#E5E5E5">you're running it on and get your beacon</font>

1039
00:39:35,510 --> 00:39:38,750
coming back<font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is really good for</font>

1040
00:39:37,250 --> 00:39:40,580
quick and easy lateral movement but it

1041
00:39:38,750 --> 00:39:42,650
can be bad<font color="#CCCCCC"> for staying stealthy and</font>

1042
00:39:40,580 --> 00:39:44,660
trying to<font color="#E5E5E5"> avoid the use</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> PowerShell or</font>

1043
00:39:42,650 --> 00:39:46,430
pious exec especially since<font color="#E5E5E5"> PowerShell</font>

1044
00:39:44,660 --> 00:39:48,799
version 5<font color="#E5E5E5"> and a lot of the telemetry</font>

1045
00:39:46,430 --> 00:39:50,810
<font color="#CCCCCC">that has come out with PowerShell</font>

1046
00:39:48,800 --> 00:39:52,280
version 5<font color="#E5E5E5"> it's gonna log nearly</font>

1047
00:39:50,810 --> 00:39:55,430
everything<font color="#E5E5E5"> and essentially everything</font>

1048
00:39:52,280 --> 00:39:57,230
<font color="#E5E5E5">that</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> gonna do so let's use</font>

1049
00:39:55,430 --> 00:39:59,299
aggressor<font color="#CCCCCC"> to build out kind</font><font color="#E5E5E5"> of a newer</font>

1050
00:39:57,230 --> 00:40:01,670
<font color="#E5E5E5">technique this</font><font color="#CCCCCC"> is actually going to be</font>

1051
00:39:59,300 --> 00:40:03,530
based on<font color="#E5E5E5"> Casey Smith's one of his some</font>

1052
00:40:01,670 --> 00:40:05,630
of his research that<font color="#CCCCCC"> he has and let's</font>

1053
00:40:03,530 --> 00:40:07,460
<font color="#CCCCCC">focus on also using unmanaged</font><font color="#E5E5E5"> PowerShell</font>

1054
00:40:05,630 --> 00:40:10,520
so we're not calling just<font color="#CCCCCC"> powershell dot</font>

1055
00:40:07,460 --> 00:40:13,820
exe directly so in order<font color="#CCCCCC"> to do something</font>

1056
00:40:10,520 --> 00:40:15,259
with msbuild<font color="#CCCCCC"> we're gonna create an XML</font>

1057
00:40:13,820 --> 00:40:17,570
file<font color="#CCCCCC"> which is going</font><font color="#E5E5E5"> to run an</font><font color="#CCCCCC"> in-line</font>

1058
00:40:15,260 --> 00:40:19,790
task<font color="#E5E5E5"> and the functions are going</font><font color="#CCCCCC"> to</font>

1059
00:40:17,570 --> 00:40:22,730
<font color="#E5E5E5">utilize with an</font><font color="#CCCCCC"> agressor</font><font color="#E5E5E5"> our alias</font>

1060
00:40:19,790 --> 00:40:25,160
<font color="#E5E5E5">beacon command register</font><font color="#CCCCCC"> be upload raw</font>

1061
00:40:22,730 --> 00:40:26,690
power<font color="#CCCCCC"> pic and</font><font color="#E5E5E5"> exact so they do a lot</font><font color="#CCCCCC"> of</font>

1062
00:40:25,160 --> 00:40:29,180
<font color="#E5E5E5">the same things already talked about or</font>

1063
00:40:26,690 --> 00:40:30,350
somewhat self<font color="#E5E5E5"> kind of you can understand</font>

1064
00:40:29,180 --> 00:40:34,520
what it means we're just<font color="#E5E5E5"> uploading a</font>

1065
00:40:30,350 --> 00:40:36,170
file oops so here is a smaller

1066
00:40:34,520 --> 00:40:37,850
<font color="#CCCCCC">screenshot what we're doing at the top</font>

1067
00:40:36,170 --> 00:40:39,560
is again we're kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> defining global</font>

1068
00:40:37,850 --> 00:40:41,720
variables<font color="#CCCCCC"> so in this case we're just</font>

1069
00:40:39,560 --> 00:40:42,980
<font color="#CCCCCC">defining like the XML structure is</font>

1070
00:40:41,720 --> 00:40:44,899
<font color="#E5E5E5">always going to have largely the</font><font color="#CCCCCC"> same</font>

1071
00:40:42,980 --> 00:40:46,310
structure<font color="#E5E5E5"> right</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> only going to</font><font color="#CCCCCC"> be</font>

1072
00:40:44,900 --> 00:40:48,200
<font color="#E5E5E5">a few different</font><font color="#CCCCCC"> parts so</font><font color="#E5E5E5"> we want to</font>

1073
00:40:46,310 --> 00:40:51,020
change<font color="#E5E5E5"> in</font><font color="#CCCCCC"> order</font><font color="#E5E5E5"> to leverage msbuild</font>

1074
00:40:48,200 --> 00:40:52,490
<font color="#E5E5E5">to compromise a system so if we can just</font>

1075
00:40:51,020 --> 00:40:54,670
leave a lot<font color="#E5E5E5"> of that as static let's do</font>

1076
00:40:52,490 --> 00:40:57,049
it so<font color="#E5E5E5"> that's where what's happening here</font>

1077
00:40:54,670 --> 00:40:59,930
<font color="#E5E5E5">the next step is to build</font><font color="#CCCCCC"> our door</font>

1078
00:40:57,050 --> 00:41:01,910
command<font color="#CCCCCC"> we need to use alias</font><font color="#E5E5E5"> to</font>

1079
00:40:59,930 --> 00:41:04,549
essentially register our commands<font color="#E5E5E5"> and</font>

1080
00:41:01,910 --> 00:41:06,770
then use the beacon command<font color="#E5E5E5"> register as</font>

1081
00:41:04,550 --> 00:41:09,619
<font color="#CCCCCC">well to have</font><font color="#E5E5E5"> it show up</font><font color="#CCCCCC"> so like if you</font>

1082
00:41:06,770 --> 00:41:11,030
<font color="#E5E5E5">run help within beacon</font><font color="#CCCCCC"> the beacon</font>

1083
00:41:09,619 --> 00:41:12,950
command<font color="#CCCCCC"> register will be</font><font color="#E5E5E5"> what shows</font><font color="#CCCCCC"> up</font>

1084
00:41:11,030 --> 00:41:14,630
<font color="#E5E5E5">and kind</font><font color="#CCCCCC"> of has a description and this</font>

1085
00:41:12,950 --> 00:41:19,339
is how you can do that to add your<font color="#E5E5E5"> own</font>

1086
00:41:14,630 --> 00:41:20,599
custom<font color="#E5E5E5"> command so in this case for</font>

1087
00:41:19,339 --> 00:41:22,578
lateral<font color="#E5E5E5"> movement what we're doing at the</font>

1088
00:41:20,599 --> 00:41:23,869
top is we're creating a<font color="#E5E5E5"> couple different</font>

1089
00:41:22,579 --> 00:41:26,030
variables<font color="#E5E5E5"> that are going</font><font color="#CCCCCC"> to be passed</font>

1090
00:41:23,869 --> 00:41:27,890
into the command when you run it<font color="#E5E5E5"> one is</font>

1091
00:41:26,030 --> 00:41:30,500
the<font color="#E5E5E5"> system you're targeting</font><font color="#CCCCCC"> in this case</font>

1092
00:41:27,890 --> 00:41:32,629
it's a custom script<font color="#CCCCCC"> that you wrote that</font>

1093
00:41:30,500 --> 00:41:34,700
<font color="#E5E5E5">excuse me</font><font color="#CCCCCC"> is on your system locally</font><font color="#E5E5E5"> and</font>

1094
00:41:32,630 --> 00:41:37,040
so<font color="#CCCCCC"> it'll contain</font><font color="#E5E5E5"> that another variable</font>

1095
00:41:34,700 --> 00:41:38,359
<font color="#E5E5E5">and finally the the final function or</font>

1096
00:41:37,040 --> 00:41:39,890
the<font color="#E5E5E5"> PowerShell command that</font><font color="#CCCCCC"> you command</font>

1097
00:41:38,359 --> 00:41:42,470
like that you want to run is another

1098
00:41:39,890 --> 00:41:44,480
<font color="#E5E5E5">variable this next step is we're</font>

1099
00:41:42,470 --> 00:41:46,279
actually swapping out different code<font color="#E5E5E5"> so</font>

1100
00:41:44,480 --> 00:41:47,960
<font color="#CCCCCC">let's say let's</font><font color="#E5E5E5"> say we're running</font>

1101
00:41:46,280 --> 00:41:50,119
<font color="#E5E5E5">PowerShell base to me me</font><font color="#CCCCCC"> cast just</font><font color="#E5E5E5"> for</font>

1102
00:41:47,960 --> 00:41:51,410
<font color="#CCCCCC">giggles you would the command you're</font>

1103
00:41:50,119 --> 00:41:53,599
probably gonna be running is invoke

1104
00:41:51,410 --> 00:41:55,759
<font color="#E5E5E5">mimikatz</font><font color="#CCCCCC"> and so this is</font><font color="#E5E5E5"> gonna swap out</font>

1105
00:41:53,599 --> 00:41:57,710
and add that invoke mimikatz

1106
00:41:55,760 --> 00:41:59,060
right where you see this<font color="#CCCCCC"> PowerShell</font>

1107
00:41:57,710 --> 00:42:03,200
function right<font color="#CCCCCC"> here in the middle of</font>

1108
00:41:59,060 --> 00:42:04,819
<font color="#CCCCCC">this XML code this next step is okay so</font>

1109
00:42:03,200 --> 00:42:06,439
you provided the function that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> want</font>

1110
00:42:04,819 --> 00:42:08,240
to run<font color="#E5E5E5"> well now it actually has to find</font>

1111
00:42:06,440 --> 00:42:10,310
the<font color="#CCCCCC"> PowerShell script</font><font color="#E5E5E5"> that you're gonna</font>

1112
00:42:08,240 --> 00:42:12,169
<font color="#CCCCCC">run</font><font color="#E5E5E5"> as</font><font color="#CCCCCC"> well what this does is this</font>

1113
00:42:10,310 --> 00:42:15,200
<font color="#CCCCCC">actually reads in your</font><font color="#E5E5E5"> PowerShell script</font>

1114
00:42:12,170 --> 00:42:17,240
and then<font color="#CCCCCC"> basics t4 encodes the entire</font>

1115
00:42:15,200 --> 00:42:18,919
script and so it's<font color="#E5E5E5"> gonna use that and</font>

1116
00:42:17,240 --> 00:42:21,890
<font color="#E5E5E5">store</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> within this XML file that</font>

1117
00:42:18,920 --> 00:42:22,910
<font color="#E5E5E5">we're creating these next steps are</font>

1118
00:42:21,890 --> 00:42:24,920
<font color="#E5E5E5">where basically we're</font><font color="#CCCCCC"> doing a lot of</font>

1119
00:42:22,910 --> 00:42:26,420
concatenation so we're<font color="#E5E5E5"> building out the</font>

1120
00:42:24,920 --> 00:42:29,869
source code of<font color="#CCCCCC"> our XML file this</font>

1121
00:42:26,420 --> 00:42:32,089
includes the header of<font color="#E5E5E5"> the XML the the</font>

1122
00:42:29,869 --> 00:42:34,069
body of it<font color="#E5E5E5"> we're adding our modified</font>

1123
00:42:32,089 --> 00:42:37,009
command which is<font color="#E5E5E5"> included</font><font color="#CCCCCC"> within there</font>

1124
00:42:34,069 --> 00:42:40,970
<font color="#E5E5E5">and just the end basically the footer</font><font color="#CCCCCC"> of</font>

1125
00:42:37,010 --> 00:42:43,280
<font color="#E5E5E5">the XML script itself now once we've</font>

1126
00:42:40,970 --> 00:42:45,049
built<font color="#CCCCCC"> out that XML file we're saving</font>

1127
00:42:43,280 --> 00:42:48,050
this<font color="#E5E5E5"> to disk locally on</font><font color="#CCCCCC"> your attacker</font>

1128
00:42:45,050 --> 00:42:49,690
system now<font color="#CCCCCC"> that you've and that's what</font>

1129
00:42:48,050 --> 00:42:52,579
these next commands do is it's actually

1130
00:42:49,690 --> 00:42:54,349
opening a handle to a file<font color="#E5E5E5"> printing out</font>

1131
00:42:52,579 --> 00:42:57,470
the contents<font color="#E5E5E5"> to disk and then closing</font>

1132
00:42:54,349 --> 00:42:59,930
that file handle finally this next step

1133
00:42:57,470 --> 00:43:02,180
is we're going to<font color="#E5E5E5"> reopen</font><font color="#CCCCCC"> that file</font><font color="#E5E5E5"> and</font>

1134
00:42:59,930 --> 00:43:03,950
we're<font color="#CCCCCC"> going to try to</font><font color="#E5E5E5"> use the phone</font>

1135
00:43:02,180 --> 00:43:06,649
can be upload raw<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is going to</font>

1136
00:43:03,950 --> 00:43:07,850
upload<font color="#CCCCCC"> that file to this XML file to</font>

1137
00:43:06,650 --> 00:43:09,620
<font color="#E5E5E5">whatever system that you're targeting</font>

1138
00:43:07,850 --> 00:43:13,100
<font color="#E5E5E5">and in this case is throwing it right</font>

1139
00:43:09,620 --> 00:43:15,319
<font color="#CCCCCC">within the Microsoft framework v4 folder</font>

1140
00:43:13,100 --> 00:43:17,779
directory<font color="#E5E5E5"> and it's an uploading</font><font color="#CCCCCC"> that's a</font>

1141
00:43:15,320 --> 00:43:20,900
file called trusted data XML<font color="#E5E5E5"> we're then</font>

1142
00:43:17,780 --> 00:43:23,600
using<font color="#E5E5E5"> B power pick to run invoke women</font>

1143
00:43:20,900 --> 00:43:25,940
method and it's going<font color="#E5E5E5"> to run your code</font>

1144
00:43:23,600 --> 00:43:26,480
that<font color="#E5E5E5"> XML file on whatever system that</font>

1145
00:43:25,940 --> 00:43:29,180
you're targeting

1146
00:43:26,480 --> 00:43:31,520
and finally it's<font color="#E5E5E5"> going through and doing</font>

1147
00:43:29,180 --> 00:43:37,549
<font color="#E5E5E5">cleanup and it's removing this last step</font>

1148
00:43:31,520 --> 00:43:39,290
down here is removing the<font color="#E5E5E5"> XML file so</font>

1149
00:43:37,550 --> 00:43:41,390
let's<font color="#CCCCCC"> kind of run through</font><font color="#E5E5E5"> there's one</font>

1150
00:43:39,290 --> 00:43:42,860
other command that's very<font color="#E5E5E5"> similar so</font><font color="#CCCCCC"> we</font>

1151
00:43:41,390 --> 00:43:44,720
just<font color="#E5E5E5"> showed</font><font color="#CCCCCC"> how to do this with a script</font>

1152
00:43:42,860 --> 00:43:46,040
<font color="#CCCCCC">this</font><font color="#E5E5E5"> next part is</font><font color="#CCCCCC"> less</font><font color="#E5E5E5"> what if you just</font>

1153
00:43:44,720 --> 00:43:49,009
<font color="#CCCCCC">want to run a</font><font color="#E5E5E5"> PowerShell command like</font>

1154
00:43:46,040 --> 00:43:50,930
get date or something like<font color="#E5E5E5"> that</font><font color="#CCCCCC"> same</font>

1155
00:43:49,010 --> 00:43:52,550
exact process at the top<font color="#E5E5E5"> again</font><font color="#CCCCCC"> defining</font>

1156
00:43:50,930 --> 00:43:54,410
a couple of variables and these next

1157
00:43:52,550 --> 00:43:56,180
<font color="#CCCCCC">parts is just</font><font color="#E5E5E5"> building out that XML</font>

1158
00:43:54,410 --> 00:43:59,330
swapping out<font color="#CCCCCC"> the command you want</font><font color="#E5E5E5"> to run</font>

1159
00:43:56,180 --> 00:44:01,850
<font color="#CCCCCC">within the XML itself and then running</font>

1160
00:43:59,330 --> 00:44:03,100
it via invoke<font color="#E5E5E5"> with me method and calling</font>

1161
00:44:01,850 --> 00:44:06,500
msbuild

1162
00:44:03,100 --> 00:44:08,770
so let's do a quick<font color="#E5E5E5"> demo</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> what that</font>

1163
00:44:06,500 --> 00:44:08,770
looks like

1164
00:44:14,110 --> 00:44:19,240
so in this case we already<font color="#E5E5E5"> have the</font>

1165
00:44:16,240 --> 00:44:21,160
msbuild script loaded into<font color="#CCCCCC"> cobalt</font><font color="#E5E5E5"> strike</font>

1166
00:44:19,240 --> 00:44:23,470
and so I have<font color="#E5E5E5"> a beacon that's already</font>

1167
00:44:21,160 --> 00:44:25,420
active on<font color="#E5E5E5"> the system so if I type help</font>

1168
00:44:23,470 --> 00:44:27,129
<font color="#E5E5E5">now right</font><font color="#CCCCCC"> up here are two additional</font>

1169
00:44:25,420 --> 00:44:28,600
commands<font color="#E5E5E5"> that weren't there</font><font color="#CCCCCC"> on like</font>

1170
00:44:27,130 --> 00:44:30,640
stock when it<font color="#E5E5E5"> comes to beacon</font>

1171
00:44:28,600 --> 00:44:33,250
it's a remote<font color="#E5E5E5"> msbuild command and remote</font>

1172
00:44:30,640 --> 00:44:35,740
<font color="#E5E5E5">msbuild script so what</font><font color="#CCCCCC"> I'm gonna</font><font color="#E5E5E5"> do if I</font>

1173
00:44:33,250 --> 00:44:38,050
<font color="#CCCCCC">just copy the msbuild command</font><font color="#E5E5E5"> I can run</font>

1174
00:44:35,740 --> 00:44:39,819
help now<font color="#E5E5E5"> and then I can do help give it</font>

1175
00:44:38,050 --> 00:44:41,710
<font color="#E5E5E5">that command and it's telling me exactly</font>

1176
00:44:39,820 --> 00:44:43,750
<font color="#E5E5E5">what I need to provide so I need to tell</font>

1177
00:44:41,710 --> 00:44:45,730
<font color="#CCCCCC">it</font><font color="#E5E5E5"> the system I want to target and the</font>

1178
00:44:43,750 --> 00:44:46,990
command that<font color="#CCCCCC"> I want to run</font><font color="#E5E5E5"> so what i'm</font>

1179
00:44:45,730 --> 00:44:47,770
typing<font color="#E5E5E5"> down below and I'm sorry it's</font>

1180
00:44:46,990 --> 00:44:50,049
tiny

1181
00:44:47,770 --> 00:44:52,480
we did actually also<font color="#E5E5E5"> publish these</font>

1182
00:44:50,050 --> 00:44:53,860
slides online so once this talk is<font color="#E5E5E5"> done</font>

1183
00:44:52,480 --> 00:44:56,560
you can<font color="#CCCCCC"> look online and see</font><font color="#E5E5E5"> everything</font>

1184
00:44:53,860 --> 00:44:59,020
<font color="#E5E5E5">that we ran is this is telling it</font><font color="#CCCCCC"> to</font>

1185
00:44:56,560 --> 00:45:00,880
<font color="#E5E5E5">target a specific IP address and I'm</font>

1186
00:44:59,020 --> 00:45:02,259
<font color="#E5E5E5">telling</font><font color="#CCCCCC"> to run the get date command lint</font>

1187
00:45:00,880 --> 00:45:04,570
so<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> just gonna find the curt date and</font>

1188
00:45:02,260 --> 00:45:06,250
time and as proof<font color="#E5E5E5"> that it works and runs</font>

1189
00:45:04,570 --> 00:45:08,050
on whatever system I'm targeting I'm

1190
00:45:06,250 --> 00:45:12,400
just gonna save those contents to disk

1191
00:45:08,050 --> 00:45:15,100
<font color="#CCCCCC">under see date text</font><font color="#E5E5E5"> so what it just</font>

1192
00:45:12,400 --> 00:45:16,870
<font color="#E5E5E5">happened right there is uh I gave beacon</font>

1193
00:45:15,100 --> 00:45:18,970
or the<font color="#E5E5E5"> aggressor script gave beacon all</font>

1194
00:45:16,870 --> 00:45:21,339
the commands required in order<font color="#CCCCCC"> to run it</font>

1195
00:45:18,970 --> 00:45:24,759
<font color="#E5E5E5">and so right now okay we just validated</font>

1196
00:45:21,340 --> 00:45:27,070
that that script<font color="#CCCCCC"> was run via WMI</font><font color="#E5E5E5"> and if</font>

1197
00:45:24,760 --> 00:45:29,080
we look right<font color="#E5E5E5"> here under date you can</font>

1198
00:45:27,070 --> 00:45:30,220
see that it's yesterday's date at<font color="#CCCCCC"> 11</font>

1199
00:45:29,080 --> 00:45:32,650
<font color="#E5E5E5">p.m.</font>

1200
00:45:30,220 --> 00:45:35,009
testing and we actually<font color="#E5E5E5"> did get that</font>

1201
00:45:32,650 --> 00:45:35,010
<font color="#E5E5E5">output</font>

1202
00:45:38,860 --> 00:45:42,190
yeah we're good

1203
00:45:48,190 --> 00:45:52,340
<font color="#E5E5E5">all right so finally let's talk about</font>

1204
00:45:50,119 --> 00:45:54,500
report generation<font color="#CCCCCC"> right and how we can</font>

1205
00:45:52,340 --> 00:45:57,550
use<font color="#CCCCCC"> aggressor to develop custom reports</font>

1206
00:45:54,500 --> 00:45:59,300
<font color="#E5E5E5">so that</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> customers are satisfied</font>

1207
00:45:57,550 --> 00:46:00,920
<font color="#E5E5E5">reporting is part of every assessment</font>

1208
00:45:59,300 --> 00:46:02,300
<font color="#CCCCCC">right should be</font><font color="#E5E5E5"> done right</font><font color="#CCCCCC"> I know the</font>

1209
00:46:00,920 --> 00:46:04,880
<font color="#E5E5E5">previous speaker</font><font color="#CCCCCC"> was talking</font><font color="#E5E5E5"> about it in</font>

1210
00:46:02,300 --> 00:46:06,950
detail<font color="#E5E5E5"> so what value are we there if we</font>

1211
00:46:04,880 --> 00:46:08,300
if we hack them and then we don't<font color="#E5E5E5"> report</font>

1212
00:46:06,950 --> 00:46:08,540
very well right they're<font color="#CCCCCC"> not gonna like</font>

1213
00:46:08,300 --> 00:46:10,490
it

1214
00:46:08,540 --> 00:46:12,170
they don't understand<font color="#E5E5E5"> it you know they</font>

1215
00:46:10,490 --> 00:46:14,049
need<font color="#CCCCCC"> to know there</font><font color="#E5E5E5"> are steps you can</font>

1216
00:46:12,170 --> 00:46:16,580
<font color="#CCCCCC">take to make reporting</font><font color="#E5E5E5"> more efficient</font>

1217
00:46:14,050 --> 00:46:18,830
<font color="#E5E5E5">you can</font><font color="#CCCCCC"> develop a prude finding language</font>

1218
00:46:16,580 --> 00:46:20,359
<font color="#E5E5E5">you can develop reporting templates and</font>

1219
00:46:18,830 --> 00:46:22,580
then<font color="#CCCCCC"> you can automate generating</font>

1220
00:46:20,359 --> 00:46:26,060
commonly requested information<font color="#CCCCCC"> in that</font>

1221
00:46:22,580 --> 00:46:29,090
report<font color="#E5E5E5"> so let's tackle that last bullet</font>

1222
00:46:26,060 --> 00:46:31,820
<font color="#CCCCCC">right so automating generating common</font>

1223
00:46:29,090 --> 00:46:33,380
commonly<font color="#E5E5E5"> requested information so what's</font>

1224
00:46:31,820 --> 00:46:35,630
something that<font color="#CCCCCC"> our</font><font color="#E5E5E5"> customers</font><font color="#CCCCCC"> always</font><font color="#E5E5E5"> ask</font>

1225
00:46:33,380 --> 00:46:37,430
<font color="#E5E5E5">right what computers</font><font color="#CCCCCC"> are compromised</font>

1226
00:46:35,630 --> 00:46:39,200
<font color="#CCCCCC">what accounts were compromised you know</font>

1227
00:46:37,430 --> 00:46:40,879
who was it<font color="#CCCCCC"> you know whose computer was</font>

1228
00:46:39,200 --> 00:46:43,460
it<font color="#E5E5E5"> well it's great a report</font><font color="#CCCCCC"> center</font><font color="#E5E5E5"> any</font>

1229
00:46:40,880 --> 00:46:46,790
function which captures that information

1230
00:46:43,460 --> 00:46:49,580
for<font color="#E5E5E5"> us so here you can see there's</font><font color="#CCCCCC"> are</font>

1231
00:46:46,790 --> 00:46:51,800
just kind of quick<font color="#E5E5E5"> commands that deal</font>

1232
00:46:49,580 --> 00:46:53,180
with reporting with aggressor so

1233
00:46:51,800 --> 00:46:53,720
<font color="#E5E5E5">describe</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> just going to describe the</font>

1234
00:46:53,180 --> 00:46:55,098
report

1235
00:46:53,720 --> 00:46:56,450
kind of<font color="#E5E5E5"> what it is and what it details</font>

1236
00:46:55,099 --> 00:46:59,240
<font color="#E5E5E5">and then you actually get into the</font>

1237
00:46:56,450 --> 00:47:01,848
report function<font color="#CCCCCC"> the name</font><font color="#E5E5E5"> of the the</font>

1238
00:46:59,240 --> 00:47:05,270
report<font color="#E5E5E5"> the page you can see there's</font>

1239
00:47:01,849 --> 00:47:08,660
header<font color="#E5E5E5"> headers there you can make it a</font>

1240
00:47:05,270 --> 00:47:10,330
bookmark<font color="#CCCCCC"> you can define</font><font color="#E5E5E5"> arrays for what</font>

1241
00:47:08,660 --> 00:47:14,529
what you want the<font color="#E5E5E5"> actual report to say</font>

1242
00:47:10,330 --> 00:47:14,529
it was<font color="#E5E5E5"> kind of what this next piece is</font>

1243
00:47:14,770 --> 00:47:19,040
so here's the final report<font color="#E5E5E5"> right so</font>

1244
00:47:17,570 --> 00:47:21,830
here's a compromised<font color="#CCCCCC"> lock that we just</font>

1245
00:47:19,040 --> 00:47:23,810
<font color="#E5E5E5">generated just using custom code with</font>

1246
00:47:21,830 --> 00:47:25,279
<font color="#E5E5E5">aggressor so you can see there's there's</font>

1247
00:47:23,810 --> 00:47:27,890
<font color="#CCCCCC">two different bookmarks</font><font color="#E5E5E5"> of effective</font>

1248
00:47:25,280 --> 00:47:29,240
<font color="#CCCCCC">host</font><font color="#E5E5E5"> and affected users right and then</font>

1249
00:47:27,890 --> 00:47:31,670
you<font color="#CCCCCC"> have your columns</font><font color="#E5E5E5"> across</font><font color="#CCCCCC"> the top</font>

1250
00:47:29,240 --> 00:47:33,589
<font color="#CCCCCC">hostname internal address accounts used</font>

1251
00:47:31,670 --> 00:47:34,339
<font color="#E5E5E5">the first session that</font><font color="#CCCCCC"> it was it</font><font color="#E5E5E5"> was</font>

1252
00:47:33,589 --> 00:47:36,410
compromised

1253
00:47:34,339 --> 00:47:37,580
<font color="#E5E5E5">you know the timestamp for that so these</font>

1254
00:47:36,410 --> 00:47:39,500
are all the things<font color="#CCCCCC"> that you can do with</font>

1255
00:47:37,580 --> 00:47:41,839
aggressor that<font color="#CCCCCC"> really make it</font><font color="#E5E5E5"> pretty for</font>

1256
00:47:39,500 --> 00:47:44,390
<font color="#E5E5E5">you at the end of at the end of an</font>

1257
00:47:41,839 --> 00:47:46,040
engagement<font color="#E5E5E5"> and you can use this to</font>

1258
00:47:44,390 --> 00:47:47,270
develop<font color="#E5E5E5"> your final report you know make</font>

1259
00:47:46,040 --> 00:47:49,040
<font color="#CCCCCC">it even more pretty but at least you</font>

1260
00:47:47,270 --> 00:47:51,460
have<font color="#CCCCCC"> that information for</font><font color="#E5E5E5"> you already</font>

1261
00:47:49,040 --> 00:47:51,460
<font color="#E5E5E5">automated</font>

1262
00:47:53,740 --> 00:47:57,669
so we just covered a whole lot<font color="#CCCCCC"> of</font>

1263
00:47:55,660 --> 00:47:59,680
different<font color="#E5E5E5"> things</font><font color="#CCCCCC"> I know there's a whole</font>

1264
00:47:57,670 --> 00:48:01,000
<font color="#E5E5E5">lot</font><font color="#CCCCCC"> of data here ideally</font><font color="#E5E5E5"> what we were</font>

1265
00:47:59,680 --> 00:48:02,950
<font color="#E5E5E5">trying to do with</font><font color="#CCCCCC"> this now is we want to</font>

1266
00:48:01,000 --> 00:48:05,680
aggregate a lot of these different code

1267
00:48:02,950 --> 00:48:07,990
snippets into a central repo<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not</font>

1268
00:48:05,680 --> 00:48:10,720
all of our code<font color="#CCCCCC"> some of this is Harley</font>

1269
00:48:07,990 --> 00:48:13,270
<font color="#E5E5E5">that report reporting information was</font>

1270
00:48:10,720 --> 00:48:16,149
<font color="#E5E5E5">from a previous coworker</font><font color="#CCCCCC"> Alyssa</font><font color="#E5E5E5"> she does</font>

1271
00:48:13,270 --> 00:48:18,009
a lot<font color="#E5E5E5"> of awesome work so again</font><font color="#CCCCCC"> in this</font>

1272
00:48:16,150 --> 00:48:19,510
if<font color="#E5E5E5"> you go to github right now we just</font>

1273
00:48:18,010 --> 00:48:21,310
<font color="#CCCCCC">published this repo right before this</font>

1274
00:48:19,510 --> 00:48:22,330
talk<font color="#E5E5E5"> it's gonna have basically the</font>

1275
00:48:21,310 --> 00:48:24,070
different<font color="#E5E5E5"> aggressive scripts at</font>

1276
00:48:22,330 --> 00:48:25,210
different phases<font color="#CCCCCC"> of the assessment that</font>

1277
00:48:24,070 --> 00:48:27,099
<font color="#E5E5E5">you can use such as during post</font>

1278
00:48:25,210 --> 00:48:28,990
<font color="#E5E5E5">explanation such as during reporting and</font>

1279
00:48:27,099 --> 00:48:30,460
you can<font color="#E5E5E5"> look to see if there's anything</font>

1280
00:48:28,990 --> 00:48:32,229
<font color="#E5E5E5">that's applicable to you that you would</font>

1281
00:48:30,460 --> 00:48:35,530
want to<font color="#E5E5E5"> use in your engagements and how</font>

1282
00:48:32,230 --> 00:48:37,599
to just<font color="#CCCCCC"> quickly load them up at this</font>

1283
00:48:35,530 --> 00:48:40,570
<font color="#E5E5E5">point we hope</font><font color="#CCCCCC"> that this helps kind</font><font color="#E5E5E5"> of</font>

1284
00:48:37,599 --> 00:48:43,839
show how to automate what<font color="#E5E5E5"> you can</font>

1285
00:48:40,570 --> 00:48:45,220
automate or how to prevent<font color="#CCCCCC"> user error</font>

1286
00:48:43,839 --> 00:48:47,799
when it's something that's preventable

1287
00:48:45,220 --> 00:48:49,359
<font color="#E5E5E5">and we wanted to make</font><font color="#CCCCCC"> just available</font><font color="#E5E5E5"> and</font>

1288
00:48:47,800 --> 00:48:50,800
if you<font color="#E5E5E5"> guys have any questions</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> can</font>

1289
00:48:49,359 --> 00:48:53,410
obviously feel free<font color="#CCCCCC"> to reach out to</font>

1290
00:48:50,800 --> 00:48:57,119
<font color="#E5E5E5">myself or Harley and we're</font><font color="#CCCCCC"> happy to talk</font>

1291
00:48:53,410 --> 00:48:59,410
now at a future<font color="#E5E5E5"> point anything like that</font>

1292
00:48:57,119 --> 00:49:12,760
yeah thanks a lot<font color="#E5E5E5"> guys</font>

1293
00:48:59,410 --> 00:49:12,759
[Music]

