1
00:00:00,100 --> 00:00:08,480
[Music]

2
00:00:08,540 --> 00:00:14,489
so who are we<font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> Zac Brown I'm a</font>

3
00:00:12,269 --> 00:00:17,160
principal everything engineer<font color="#E5E5E5"> at red</font>

4
00:00:14,490 --> 00:00:19,350
canary<font color="#CCCCCC"> I kind of just do whatever</font>

5
00:00:17,160 --> 00:00:21,240
<font color="#E5E5E5">engineering needs me to do from</font><font color="#CCCCCC"> blue</font>

6
00:00:19,350 --> 00:00:24,029
<font color="#CCCCCC">team research stuff to making our</font>

7
00:00:21,240 --> 00:00:28,470
service run faster to breaking things

8
00:00:24,029 --> 00:00:31,859
with<font color="#CCCCCC"> Casey yeah I'm Joe moles mostly i</font>

9
00:00:28,470 --> 00:00:35,789
<font color="#E5E5E5">herd cats to help improve our customers</font>

10
00:00:31,859 --> 00:00:37,260
security so we're gonna get kind<font color="#E5E5E5"> of</font>

11
00:00:35,789 --> 00:00:40,109
straight to it we're gonna skip any

12
00:00:37,260 --> 00:00:43,138
pleasantries<font color="#CCCCCC"> dotnet tradecraft is</font>

13
00:00:40,109 --> 00:00:44,579
becoming kind<font color="#CCCCCC"> of a problem</font><font color="#E5E5E5"> I didn't</font>

14
00:00:43,139 --> 00:00:46,589
realize<font color="#E5E5E5"> it was becoming quite as much of</font>

15
00:00:44,579 --> 00:00:48,210
a problem<font color="#E5E5E5"> because my previous job was</font><font color="#CCCCCC"> at</font>

16
00:00:46,589 --> 00:00:51,358
<font color="#CCCCCC">Microsoft</font><font color="#E5E5E5"> and we saw a lot of dotnet</font>

17
00:00:48,210 --> 00:00:53,969
tradecraft from our<font color="#CCCCCC"> read teams</font><font color="#E5E5E5"> so it's</font>

18
00:00:51,359 --> 00:00:56,819
not new<font color="#CCCCCC"> though it may be new to some of</font>

19
00:00:53,969 --> 00:00:58,260
<font color="#CCCCCC">y'all and in</font><font color="#E5E5E5"> fact PowerShell is a</font>

20
00:00:56,819 --> 00:01:00,629
variant on<font color="#E5E5E5"> that especially</font><font color="#CCCCCC"> when</font><font color="#E5E5E5"> you talk</font>

21
00:00:58,260 --> 00:01:02,159
about<font color="#E5E5E5"> things like power sploit where</font>

22
00:01:00,629 --> 00:01:05,250
they were just leveraging dotnet to do

23
00:01:02,159 --> 00:01:07,500
these things<font color="#CCCCCC"> it's attractive because</font><font color="#E5E5E5"> the</font>

24
00:01:05,250 --> 00:01:09,930
telemetry<font color="#E5E5E5"> and insight space is much less</font>

25
00:01:07,500 --> 00:01:13,200
studied<font color="#E5E5E5"> right now there are some pretty</font>

26
00:01:09,930 --> 00:01:16,380
<font color="#CCCCCC">good very</font><font color="#E5E5E5"> very high volume logs</font>

27
00:01:13,200 --> 00:01:18,410
<font color="#E5E5E5">available out there and I have some</font>

28
00:01:16,380 --> 00:01:21,210
examples<font color="#CCCCCC"> later</font><font color="#E5E5E5"> on those kind of things</font>

29
00:01:18,410 --> 00:01:23,399
<font color="#CCCCCC">and then of course it's interesting</font>

30
00:01:21,210 --> 00:01:26,550
because<font color="#E5E5E5"> you have really fun applications</font>

31
00:01:23,400 --> 00:01:27,860
like<font color="#CCCCCC"> MS build and install util which are</font>

32
00:01:26,550 --> 00:01:30,210
<font color="#CCCCCC">just installed on every single machine</font>

33
00:01:27,860 --> 00:01:34,110
deployed in your fleet<font color="#CCCCCC"> without really an</font>

34
00:01:30,210 --> 00:01:35,639
<font color="#E5E5E5">option to get rid of them so let's get</font>

35
00:01:34,110 --> 00:01:39,120
to<font color="#E5E5E5"> the root of all evil assembly dot</font>

36
00:01:35,640 --> 00:01:41,760
load with a byte array<font color="#CCCCCC"> that byte array</font>

37
00:01:39,120 --> 00:01:44,610
<font color="#E5E5E5">is anything in a cough format the common</font>

38
00:01:41,760 --> 00:01:46,290
object file format<font color="#CCCCCC"> it lets you</font><font color="#E5E5E5"> load a</font>

39
00:01:44,610 --> 00:01:49,980
dotnet assembly<font color="#CCCCCC"> for memory instead of</font>

40
00:01:46,290 --> 00:01:51,990
from disk and the resulting assembly is

41
00:01:49,980 --> 00:01:54,330
<font color="#E5E5E5">its executable code in memory like it</font>

42
00:01:51,990 --> 00:01:56,100
you effectively<font color="#E5E5E5"> turned it into a class</font>

43
00:01:54,330 --> 00:01:58,620
object<font color="#CCCCCC"> you can call do whatever you want</font>

44
00:01:56,100 --> 00:02:00,890
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is some of the magic tricks that</font>

45
00:01:58,620 --> 00:02:03,600
<font color="#E5E5E5">they were using in power sploit not</font><font color="#CCCCCC"> neo</font>

46
00:02:00,890 --> 00:02:05,580
<font color="#E5E5E5">and it is sanctioned by</font><font color="#CCCCCC"> dot in at</font>

47
00:02:03,600 --> 00:02:07,020
<font color="#CCCCCC">runtime you might think hey this is</font>

48
00:02:05,580 --> 00:02:08,519
<font color="#E5E5E5">really weird why would they let you just</font>

49
00:02:07,020 --> 00:02:11,609
arbitrarily<font color="#CCCCCC"> little byte string and do</font>

50
00:02:08,519 --> 00:02:13,360
some<font color="#E5E5E5"> stuff with</font><font color="#CCCCCC"> it well because there's</font>

51
00:02:11,609 --> 00:02:16,120
a whole<font color="#E5E5E5"> bunch of really legitimate they</font>

52
00:02:13,360 --> 00:02:18,850
you can do with it one is<font color="#CCCCCC"> plug-in models</font>

53
00:02:16,120 --> 00:02:20,560
<font color="#CCCCCC">so a</font><font color="#E5E5E5"> good</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> is asp.net</font><font color="#CCCCCC"> MVC</font>

54
00:02:18,850 --> 00:02:23,170
people build frameworks around<font color="#E5E5E5"> these</font>

55
00:02:20,560 --> 00:02:25,240
<font color="#E5E5E5">thing these web frameworks all sorts of</font>

56
00:02:23,170 --> 00:02:27,160
extensions around that space<font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of</font>

57
00:02:25,240 --> 00:02:29,110
them are<font color="#E5E5E5"> hey I've got this directory if</font>

58
00:02:27,160 --> 00:02:31,510
you have a custom plugin for<font color="#CCCCCC"> your sweet</font>

59
00:02:29,110 --> 00:02:34,720
sweet web application<font color="#E5E5E5"> just drop any old</font>

60
00:02:31,510 --> 00:02:36,880
<font color="#CCCCCC">dll that's in there</font><font color="#E5E5E5"> sweet so you got</font>

61
00:02:34,720 --> 00:02:38,590
yourself access to an iis server<font color="#CCCCCC"> you</font>

62
00:02:36,880 --> 00:02:40,060
drop your sweet sweet payload on it and

63
00:02:38,590 --> 00:02:41,410
now you've<font color="#E5E5E5"> got execution because it just</font>

64
00:02:40,060 --> 00:02:42,640
loads it<font color="#CCCCCC"> it</font><font color="#E5E5E5"> doesn't care</font>

65
00:02:41,410 --> 00:02:46,630
it'll do whatever it<font color="#E5E5E5"> doesn't check</font>

66
00:02:42,640 --> 00:02:48,309
signing<font color="#CCCCCC"> also for consuming dynamically</font>

67
00:02:46,630 --> 00:02:51,880
emitted code so if you're<font color="#E5E5E5"> doing a lot</font><font color="#CCCCCC"> of</font>

68
00:02:48,310 --> 00:02:53,680
really magical<font color="#CCCCCC"> reflection and you're</font>

69
00:02:51,880 --> 00:02:55,840
<font color="#E5E5E5">Auto generating things from XML</font>

70
00:02:53,680 --> 00:02:57,250
templates<font color="#E5E5E5"> that's another example</font><font color="#CCCCCC"> of</font>

71
00:02:55,840 --> 00:02:59,140
where like there are frameworks<font color="#E5E5E5"> out</font>

72
00:02:57,250 --> 00:03:01,180
<font color="#CCCCCC">there that just take xml</font><font color="#E5E5E5"> turn it into an</font>

73
00:02:59,140 --> 00:03:02,679
object<font color="#CCCCCC"> load it up</font><font color="#E5E5E5"> but what happens if</font>

74
00:03:01,180 --> 00:03:04,900
you just<font color="#E5E5E5"> drop drop in arbitrary binary</font>

75
00:03:02,680 --> 00:03:08,200
<font color="#E5E5E5">with the right api is implemented into</font>

76
00:03:04,900 --> 00:03:11,290
the directory<font color="#CCCCCC"> load it</font><font color="#E5E5E5"> up</font>

77
00:03:08,200 --> 00:03:14,799
also for performance<font color="#CCCCCC"> one of the problems</font>

78
00:03:11,290 --> 00:03:19,510
you have in<font color="#CCCCCC"> general is that dynamically</font>

79
00:03:14,800 --> 00:03:22,299
reloading code<font color="#E5E5E5"> for performance</font><font color="#CCCCCC"> reasons</font>

80
00:03:19,510 --> 00:03:24,010
the wavenet handles locking assemblies

81
00:03:22,299 --> 00:03:25,810
that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> loaded in memory is that it's</font>

82
00:03:24,010 --> 00:03:27,310
<font color="#CCCCCC">going to lock it directly so one thing</font>

83
00:03:25,810 --> 00:03:29,530
people do<font color="#CCCCCC"> is they read the byte string</font>

84
00:03:27,310 --> 00:03:31,390
of the<font color="#CCCCCC"> DLL on disk</font><font color="#E5E5E5"> load it through</font>

85
00:03:29,530 --> 00:03:35,860
assembly dot load<font color="#E5E5E5"> that way they're not</font>

86
00:03:31,390 --> 00:03:38,018
<font color="#E5E5E5">locking the the original binary</font><font color="#CCCCCC"> and then</font>

87
00:03:35,860 --> 00:03:39,430
<font color="#E5E5E5">of course kind of this is</font><font color="#CCCCCC"> a this is a</font>

88
00:03:38,019 --> 00:03:40,870
corner case but this<font color="#CCCCCC"> particular</font>

89
00:03:39,430 --> 00:03:43,269
performance<font color="#E5E5E5"> issue exists and I've seen</font>

90
00:03:40,870 --> 00:03:45,310
<font color="#E5E5E5">it in production</font><font color="#CCCCCC"> app domains are a</font>

91
00:03:43,269 --> 00:03:47,320
really nice way to separate code out and

92
00:03:45,310 --> 00:03:49,239
kind of<font color="#E5E5E5"> have some</font><font color="#CCCCCC"> separation of context</font>

93
00:03:47,320 --> 00:03:52,060
<font color="#E5E5E5">and running code in a separate</font><font color="#CCCCCC"> process</font>

94
00:03:49,239 --> 00:03:56,440
but it incurs an overhead costs in cross

95
00:03:52,060 --> 00:03:58,750
process<font color="#CCCCCC"> communication</font><font color="#E5E5E5"> and so in order to</font>

96
00:03:56,440 --> 00:04:04,570
skip that people do some magic<font color="#CCCCCC"> tricks</font>

97
00:03:58,750 --> 00:04:05,920
with assembly<font color="#CCCCCC"> load so of course we</font>

98
00:04:04,570 --> 00:04:07,000
<font color="#E5E5E5">shouldn't forget P and</font><font color="#CCCCCC"> VOC and Common</font>

99
00:04:05,920 --> 00:04:08,890
<font color="#E5E5E5">Era</font>

100
00:04:07,000 --> 00:04:11,049
they are sometimes<font color="#E5E5E5"> talked about</font>

101
00:04:08,890 --> 00:04:13,958
sometimes<font color="#E5E5E5"> not</font><font color="#CCCCCC"> it turns out you</font><font color="#E5E5E5"> can call</font>

102
00:04:11,049 --> 00:04:15,070
<font color="#E5E5E5">win32</font><font color="#CCCCCC"> DLLs</font><font color="#E5E5E5"> from dotnet any of them as</font>

103
00:04:13,959 --> 00:04:17,858
long<font color="#E5E5E5"> as you can figure out how to write</font>

104
00:04:15,070 --> 00:04:19,390
the signature<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it doesn't just have</font>

105
00:04:17,858 --> 00:04:21,048
to be<font color="#CCCCCC"> microsoft's dll's it can be your</font>

106
00:04:19,390 --> 00:04:24,289
custom malware<font color="#E5E5E5"> dll</font>

107
00:04:21,048 --> 00:04:26,060
or one<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you found off the</font><font color="#E5E5E5"> internet</font>

108
00:04:24,289 --> 00:04:30,349
of course commenter up<font color="#E5E5E5"> the I haven't</font>

109
00:04:26,060 --> 00:04:32,900
<font color="#E5E5E5">seen it talked as</font><font color="#CCCCCC"> much about</font><font color="#E5E5E5"> for in</font>

110
00:04:30,349 --> 00:04:34,190
malicious use cases<font color="#CCCCCC"> but I'm I wouldn't</font>

111
00:04:32,900 --> 00:04:35,900
be surprised if we start seeing<font color="#E5E5E5"> it more</font>

112
00:04:34,190 --> 00:04:39,110
<font color="#E5E5E5">especially when you start</font><font color="#CCCCCC"> talking about</font>

113
00:04:35,900 --> 00:04:41,719
things<font color="#E5E5E5"> like fun fun</font><font color="#CCCCCC"> calm</font><font color="#E5E5E5"> serialization</font>

114
00:04:39,110 --> 00:04:43,370
deserialization<font color="#CCCCCC"> issues where there's all</font>

115
00:04:41,720 --> 00:04:45,020
sorts of crazy<font color="#E5E5E5"> things you can do</font>

116
00:04:43,370 --> 00:04:48,379
monikers have some problems in that

117
00:04:45,020 --> 00:04:50,750
<font color="#E5E5E5">security space of course</font><font color="#CCCCCC"> why do these</font>

118
00:04:48,379 --> 00:04:52,460
<font color="#CCCCCC">things matter well if you go look at</font>

119
00:04:50,750 --> 00:04:55,819
<font color="#E5E5E5">power sploit as a good</font><font color="#CCCCCC"> example just as a</font>

120
00:04:52,460 --> 00:04:57,500
<font color="#E5E5E5">starting point</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> uses P invoke it uses</font>

121
00:04:55,819 --> 00:04:58,849
assembly dot load<font color="#CCCCCC"> they're the two core</font>

122
00:04:57,500 --> 00:05:00,949
primitives that<font color="#E5E5E5"> nearly all</font><font color="#CCCCCC"> of these</font>

123
00:04:58,849 --> 00:05:08,300
<font color="#CCCCCC">malware's or all these</font><font color="#E5E5E5"> types of malware</font>

124
00:05:00,949 --> 00:05:10,220
use so let's<font color="#E5E5E5"> jump into msbuild install</font>

125
00:05:08,300 --> 00:05:11,590
util<font color="#E5E5E5"> and dotnet</font><font color="#CCCCCC"> to jscript which is a</font>

126
00:05:10,220 --> 00:05:14,120
fun one if you<font color="#E5E5E5"> haven't heard of</font><font color="#CCCCCC"> it yet</font>

127
00:05:11,590 --> 00:05:15,888
<font color="#E5E5E5">it came out I think late last year James</font>

128
00:05:14,120 --> 00:05:20,210
<font color="#CCCCCC">Forshaw</font><font color="#E5E5E5"> started talking about it</font>

129
00:05:15,889 --> 00:05:23,810
I must build available by default<font color="#CCCCCC"> since</font>

130
00:05:20,210 --> 00:05:27,650
net for it lets you arbitrarily execute

131
00:05:23,810 --> 00:05:30,229
a task in code as part of an MS build

132
00:05:27,650 --> 00:05:31,638
build<font color="#E5E5E5"> task so a good example for</font>

133
00:05:30,229 --> 00:05:33,859
something<font color="#E5E5E5"> like this might</font><font color="#CCCCCC"> be you</font><font color="#E5E5E5"> want to</font>

134
00:05:31,639 --> 00:05:35,750
replace<font color="#E5E5E5"> a token in your code with this</font>

135
00:05:33,860 --> 00:05:38,599
dynamically generated identifier maybe

136
00:05:35,750 --> 00:05:39,979
the github hat or the<font color="#E5E5E5"> git commit hash to</font>

137
00:05:38,599 --> 00:05:44,150
<font color="#E5E5E5">identify the version of code you're</font>

138
00:05:39,979 --> 00:05:45,979
using<font color="#E5E5E5"> that's really cool</font><font color="#CCCCCC"> but turns out</font>

139
00:05:44,150 --> 00:05:48,409
it also just runs any old c-sharp that

140
00:05:45,979 --> 00:05:49,909
you throw at<font color="#CCCCCC"> it you</font><font color="#E5E5E5"> put a C data block</font>

141
00:05:48,409 --> 00:05:52,490
in the<font color="#E5E5E5"> middle of the</font><font color="#CCCCCC"> XML</font><font color="#E5E5E5"> and you just</font>

142
00:05:49,909 --> 00:05:54,349
type it out alternatively<font color="#E5E5E5"> you can do</font>

143
00:05:52,490 --> 00:05:55,759
some<font color="#CCCCCC"> XSLT transformations where you</font>

144
00:05:54,349 --> 00:05:59,389
download some code dynamically and

145
00:05:55,759 --> 00:06:00,740
execute<font color="#E5E5E5"> it through</font><font color="#CCCCCC"> C script</font><font color="#E5E5E5"> and of</font>

146
00:05:59,389 --> 00:06:03,560
course it bypasses<font color="#E5E5E5"> just about every</font>

147
00:06:00,740 --> 00:06:06,349
product<font color="#E5E5E5"> on the market yeah so if anybody</font>

148
00:06:03,560 --> 00:06:08,539
<font color="#CCCCCC">is familiar with</font><font color="#E5E5E5"> like KC put out a few</font>

149
00:06:06,349 --> 00:06:11,630
years<font color="#CCCCCC"> ago</font><font color="#E5E5E5"> squiggly-doo using reg serve</font>

150
00:06:08,539 --> 00:06:12,490
to read terrible terrible code right off

151
00:06:11,630 --> 00:06:14,750
the<font color="#CCCCCC"> Internet</font>

152
00:06:12,490 --> 00:06:17,479
basically you<font color="#CCCCCC"> take this and</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can do</font>

153
00:06:14,750 --> 00:06:19,430
<font color="#CCCCCC">it</font><font color="#E5E5E5"> all in memory so all you see from</font>

154
00:06:17,479 --> 00:06:22,039
like if you're<font color="#E5E5E5"> looking at you so for me</font>

155
00:06:19,430 --> 00:06:24,590
<font color="#E5E5E5">and my team</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> look at a lot of endpoint</font>

156
00:06:22,039 --> 00:06:25,789
telemetry and<font color="#E5E5E5"> process telemetry when you</font>

157
00:06:24,590 --> 00:06:29,219
look at this

158
00:06:25,789 --> 00:06:31,710
basically that<font color="#E5E5E5"> same functionality except</font>

159
00:06:29,220 --> 00:06:34,050
much more obfuscated from our view<font color="#E5E5E5"> you</font>

160
00:06:31,710 --> 00:06:36,330
<font color="#E5E5E5">see anything in fear looking in an</font>

161
00:06:34,050 --> 00:06:38,430
environment<font color="#CCCCCC"> that's typically has any</font>

162
00:06:36,330 --> 00:06:41,490
sort<font color="#CCCCCC"> of heavy</font><font color="#E5E5E5"> windows development</font><font color="#CCCCCC"> these</font>

163
00:06:38,430 --> 00:06:44,030
<font color="#CCCCCC">are common utilities</font><font color="#E5E5E5"> and from a pure</font>

164
00:06:41,490 --> 00:06:47,639
processor<font color="#CCCCCC"> of telemetry</font><font color="#E5E5E5"> this</font>

165
00:06:44,030 --> 00:06:50,309
significantly<font color="#CCCCCC"> reduces that visibility</font><font color="#E5E5E5"> to</font>

166
00:06:47,639 --> 00:06:52,770
be able<font color="#CCCCCC"> to identify that</font><font color="#E5E5E5"> activity going</font>

167
00:06:50,310 --> 00:06:55,470
on it<font color="#E5E5E5"> becomes very difficult to analyze</font>

168
00:06:52,770 --> 00:06:57,060
<font color="#E5E5E5">because all that code is being loaded in</font>

169
00:06:55,470 --> 00:06:59,909
memory<font color="#CCCCCC"> and it just looks like</font><font color="#E5E5E5"> a company</font>

170
00:06:57,060 --> 00:07:03,300
you know a standard<font color="#E5E5E5"> compiler or an</font>

171
00:06:59,909 --> 00:07:04,949
install utility doing a build process<font color="#E5E5E5"> so</font>

172
00:07:03,300 --> 00:07:06,810
this stuff gets really<font color="#E5E5E5"> interesting when</font>

173
00:07:04,949 --> 00:07:08,490
you're looking at this is from<font color="#CCCCCC"> provide</font>

174
00:07:06,810 --> 00:07:10,770
anybody<font color="#E5E5E5"> doing red teaming activities or</font>

175
00:07:08,490 --> 00:07:13,530
print testing activities as a way to

176
00:07:10,770 --> 00:07:15,870
execute<font color="#E5E5E5"> arbitrarily hosted code from</font>

177
00:07:13,530 --> 00:07:17,940
github or other places you<font color="#CCCCCC"> can do some</font>

178
00:07:15,870 --> 00:07:20,280
really<font color="#E5E5E5"> slick stuff with this that will</font>

179
00:07:17,940 --> 00:07:23,039
you know<font color="#E5E5E5"> confuse your blue</font><font color="#CCCCCC"> team's for</font>

180
00:07:20,280 --> 00:07:26,460
quite a while<font color="#E5E5E5"> yeah it all looks like</font>

181
00:07:23,039 --> 00:07:29,128
legitimate activity<font color="#E5E5E5"> when I was at</font>

182
00:07:26,460 --> 00:07:31,979
Microsoft<font color="#CCCCCC"> I remember being</font><font color="#E5E5E5"> part of an</font>

183
00:07:29,129 --> 00:07:34,590
<font color="#E5E5E5">incident response for an internal pen</font>

184
00:07:31,979 --> 00:07:36,599
<font color="#E5E5E5">test</font><font color="#CCCCCC"> and one of the things they did was</font>

185
00:07:34,590 --> 00:07:38,729
they<font color="#E5E5E5"> backdoor to build a build machine</font>

186
00:07:36,599 --> 00:07:41,069
and they modified one of the CS<font color="#CCCCCC"> pro or</font>

187
00:07:38,729 --> 00:07:42,960
one of the<font color="#E5E5E5"> CS proj files that</font><font color="#CCCCCC"> msbuild</font>

188
00:07:41,069 --> 00:07:45,210
loads and so what it would do is it

189
00:07:42,960 --> 00:07:46,560
<font color="#CCCCCC">would just every</font><font color="#E5E5E5"> time just in case we</font>

190
00:07:45,210 --> 00:07:48,690
had managed to<font color="#E5E5E5"> delete the</font><font color="#CCCCCC"> malware</font><font color="#E5E5E5"> that</font>

191
00:07:46,560 --> 00:07:50,370
<font color="#CCCCCC">was</font><font color="#E5E5E5"> inside</font><font color="#CCCCCC"> the environment we just extra</font>

192
00:07:48,690 --> 00:07:53,219
copy that<font color="#E5E5E5"> DLL and the plug-in directory</font>

193
00:07:50,370 --> 00:07:54,599
for them every nightly build<font color="#E5E5E5"> you can</font>

194
00:07:53,219 --> 00:07:57,469
imagine that's<font color="#E5E5E5"> really handy for them and</font>

195
00:07:54,599 --> 00:07:59,310
<font color="#E5E5E5">really annoying for</font><font color="#CCCCCC"> us because</font>

196
00:07:57,469 --> 00:08:00,960
admittedly we did not have perfect

197
00:07:59,310 --> 00:08:04,979
<font color="#E5E5E5">visibility into all</font><font color="#CCCCCC"> of our</font><font color="#E5E5E5"> build</font>

198
00:08:00,960 --> 00:08:07,198
machines the way we<font color="#E5E5E5"> would have liked</font><font color="#CCCCCC"> so</font>

199
00:08:04,979 --> 00:08:11,789
let's look<font color="#E5E5E5"> at an</font><font color="#CCCCCC"> example this</font><font color="#E5E5E5"> is the</font>

200
00:08:07,199 --> 00:08:16,409
<font color="#CCCCCC">XSLT example</font><font color="#E5E5E5"> so kind of important</font><font color="#CCCCCC"> pieces</font>

201
00:08:11,789 --> 00:08:18,750
here this include right here that's a

202
00:08:16,409 --> 00:08:22,800
poor echo<font color="#CCCCCC"> trying not to blow your</font>

203
00:08:18,750 --> 00:08:27,509
eardrums out so the truncated is just a

204
00:08:22,800 --> 00:08:28,710
<font color="#CCCCCC">gif commit hash this XSL file is what</font>

205
00:08:27,509 --> 00:08:31,139
we're<font color="#E5E5E5"> going to look at next it's the</font>

206
00:08:28,710 --> 00:08:32,270
thing it's the magic this tells<font color="#E5E5E5"> msbuild</font>

207
00:08:31,139 --> 00:08:34,610
what to load

208
00:08:32,270 --> 00:08:36,740
this specifies<font color="#CCCCCC"> which file it also wants</font>

209
00:08:34,610 --> 00:08:38,690
to load to do the XSL transformation on

210
00:08:36,740 --> 00:08:44,720
your<font color="#E5E5E5"> XML right because</font><font color="#CCCCCC"> everyone loves</font>

211
00:08:38,690 --> 00:08:47,570
XML here's our actual<font color="#E5E5E5"> XSL our XSL</font>

212
00:08:44,720 --> 00:08:50,240
transformer<font color="#E5E5E5"> we have a lovely jscript</font>

213
00:08:47,570 --> 00:08:52,160
payload here with<font color="#E5E5E5"> a new active</font><font color="#CCCCCC"> on x</font>

214
00:08:50,240 --> 00:08:54,080
object that is<font color="#E5E5E5"> going to launch countdown</font>

215
00:08:52,160 --> 00:08:57,890
eggsy<font color="#CCCCCC"> and then we're just gonna</font><font color="#E5E5E5"> return</font>

216
00:08:54,080 --> 00:09:00,170
the next<font color="#CCCCCC"> xml note that's pretty similar</font>

217
00:08:57,890 --> 00:09:03,380
<font color="#CCCCCC">to how they were doing</font><font color="#E5E5E5"> the same exploit</font>

218
00:09:00,170 --> 00:09:05,390
<font color="#CCCCCC">that I saw in production not a huge</font>

219
00:09:03,380 --> 00:09:08,600
amount<font color="#E5E5E5"> of surprise there this has been</font>

220
00:09:05,390 --> 00:09:10,280
talked about by<font color="#E5E5E5"> Casey in the past how</font>

221
00:09:08,600 --> 00:09:11,330
<font color="#E5E5E5">about an</font><font color="#CCCCCC"> inline</font><font color="#E5E5E5"> task example the one</font>

222
00:09:10,280 --> 00:09:16,880
where I was<font color="#E5E5E5"> talking</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> dropping</font>

223
00:09:11,330 --> 00:09:19,630
things<font color="#E5E5E5"> in the C data block so this is a</font>

224
00:09:16,880 --> 00:09:25,910
<font color="#E5E5E5">really simplified version of this but</font>

225
00:09:19,630 --> 00:09:33,200
effectively<font color="#CCCCCC"> c-sharp language</font><font color="#E5E5E5"> C data</font>

226
00:09:25,910 --> 00:09:36,319
block<font color="#E5E5E5"> start calc in a in the I have some</font>

227
00:09:33,200 --> 00:09:37,580
<font color="#E5E5E5">links to better examples later</font><font color="#CCCCCC"> that you</font>

228
00:09:36,320 --> 00:09:40,810
can<font color="#E5E5E5"> actually go look at they're too big</font>

229
00:09:37,580 --> 00:09:43,250
right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> but I have a full Mimi Katz</font>

230
00:09:40,810 --> 00:09:45,339
<font color="#CCCCCC">executor inside of the MS build</font><font color="#E5E5E5"> task</font>

231
00:09:43,250 --> 00:09:48,320
that does all the<font color="#E5E5E5"> dynamic payload</font><font color="#CCCCCC"> and</font>

232
00:09:45,340 --> 00:09:49,670
unwrapping and<font color="#E5E5E5"> mount they're writing it</font>

233
00:09:48,320 --> 00:09:56,960
<font color="#E5E5E5">into memory and running it</font><font color="#CCCCCC"> without ever</font>

234
00:09:49,670 --> 00:09:59,000
dropping it to<font color="#CCCCCC"> disk it's gross really</font>

235
00:09:56,960 --> 00:10:01,100
gross<font color="#E5E5E5"> especially for a Microsoft signed</font>

236
00:09:59,000 --> 00:10:03,110
binary

237
00:10:01,100 --> 00:10:04,580
what about install util so if you have

238
00:10:03,110 --> 00:10:06,740
heard<font color="#E5E5E5"> about that one another thing</font><font color="#CCCCCC"> that</font>

239
00:10:04,580 --> 00:10:08,860
<font color="#CCCCCC">Casey has</font><font color="#E5E5E5"> talked about but again comes</font>

240
00:10:06,740 --> 00:10:11,270
up because<font color="#CCCCCC"> we want</font><font color="#E5E5E5"> to talk</font><font color="#CCCCCC"> about c-sharp</font>

241
00:10:08,860 --> 00:10:13,760
<font color="#E5E5E5">also lets you run arbitrary c-sharp code</font>

242
00:10:11,270 --> 00:10:18,110
it's been around since<font color="#E5E5E5"> net 1.1 and it's</font>

243
00:10:13,760 --> 00:10:20,930
also in every dotnet install<font color="#E5E5E5"> it's used</font>

244
00:10:18,110 --> 00:10:22,640
for<font color="#E5E5E5"> installing and uninstalling things</font>

245
00:10:20,930 --> 00:10:25,790
programmatically for dotnet server

246
00:10:22,640 --> 00:10:30,410
resources<font color="#CCCCCC"> I've never seen it</font><font color="#E5E5E5"> used that</font>

247
00:10:25,790 --> 00:10:33,650
<font color="#E5E5E5">way and I worked at Microsoft</font><font color="#CCCCCC"> so I</font><font color="#E5E5E5"> don't</font>

248
00:10:30,410 --> 00:10:38,920
know who's using it people actually use

249
00:10:33,650 --> 00:10:42,670
<font color="#CCCCCC">it I've seen it yeah that's</font><font color="#E5E5E5"> part of the</font>

250
00:10:38,920 --> 00:10:44,229
yeah<font color="#E5E5E5"> I'm not gonna get to that so</font>

251
00:10:42,670 --> 00:10:46,089
another fun thing<font color="#E5E5E5"> with that</font><font color="#CCCCCC"> one is you</font>

252
00:10:44,230 --> 00:10:47,559
can pass<font color="#CCCCCC"> command-line arguments to it</font><font color="#E5E5E5"> so</font>

253
00:10:46,089 --> 00:10:49,149
pick your favorite command-line

254
00:10:47,559 --> 00:10:49,929
arguments<font color="#CCCCCC"> this is just a blog post it</font>

255
00:10:49,149 --> 00:10:53,790
doesn't actually have<font color="#CCCCCC"> to do anything</font>

256
00:10:49,929 --> 00:10:56,290
<font color="#E5E5E5">with an exploit but in particular</font><font color="#CCCCCC"> you</font>

257
00:10:53,790 --> 00:10:58,419
<font color="#CCCCCC">just got a nice</font><font color="#E5E5E5"> little program</font><font color="#CCCCCC"> 1 equals</font>

258
00:10:56,290 --> 00:11:01,209
<font color="#CCCCCC">Bal 1 here it'll unwrap any of those for</font>

259
00:10:58,419 --> 00:11:03,160
you that you like do any you know same

260
00:11:01,209 --> 00:11:05,410
rules apply<font color="#CCCCCC"> you put something in an</font>

261
00:11:03,160 --> 00:11:09,118
<font color="#E5E5E5">environment variable</font><font color="#CCCCCC"> run your arbitrary</font>

262
00:11:05,410 --> 00:11:12,100
thing pick your arbitrary<font color="#E5E5E5"> C</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> whatever</font>

263
00:11:09,119 --> 00:11:13,869
this<font color="#CCCCCC"> is an example of it this</font><font color="#E5E5E5"> one's</font>

264
00:11:12,100 --> 00:11:17,739
actually<font color="#CCCCCC"> really nice</font><font color="#E5E5E5"> and short and sweet</font>

265
00:11:13,869 --> 00:11:19,749
<font color="#CCCCCC">you just compile that into a dotnet DLL</font>

266
00:11:17,739 --> 00:11:24,699
<font color="#E5E5E5">and then pass that thing to install util</font>

267
00:11:19,749 --> 00:11:29,790
and off to the<font color="#E5E5E5"> races</font><font color="#CCCCCC"> very easy again lat</font>

268
00:11:24,699 --> 00:11:33,160
I don't it's gross now this is<font color="#E5E5E5"> kind of</font>

269
00:11:29,790 --> 00:11:34,868
<font color="#CCCCCC">meat-and-potatoes</font><font color="#E5E5E5"> scary to me</font><font color="#CCCCCC"> so turning</font>

270
00:11:33,160 --> 00:11:36,939
arbitrary dotnet assemblies into

271
00:11:34,869 --> 00:11:39,839
<font color="#E5E5E5">anything</font><font color="#CCCCCC"> effectively</font><font color="#E5E5E5"> on the operating</font>

272
00:11:36,939 --> 00:11:42,399
<font color="#E5E5E5">system jscript vbscript</font><font color="#CCCCCC"> vba scriptlets</font>

273
00:11:39,839 --> 00:11:46,059
scriptlet monikers so using<font color="#CCCCCC"> comm in</font><font color="#E5E5E5"> that</font>

274
00:11:42,399 --> 00:11:48,040
case<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> dotnet - J</font><font color="#E5E5E5"> script is</font>

275
00:11:46,059 --> 00:11:50,529
actually<font color="#CCCCCC"> something that</font><font color="#E5E5E5"> James</font><font color="#CCCCCC"> Forshaw</font>

276
00:11:48,040 --> 00:11:52,929
developed as a<font color="#CCCCCC"> side-effect of trying to</font>

277
00:11:50,529 --> 00:11:54,790
<font color="#E5E5E5">test something else and wasn't even</font><font color="#CCCCCC"> sure</font>

278
00:11:52,929 --> 00:11:57,850
he was gonna release<font color="#CCCCCC"> it at least as he</font>

279
00:11:54,790 --> 00:11:59,319
told<font color="#E5E5E5"> me and he decided to because it</font>

280
00:11:57,850 --> 00:12:04,720
seemed like<font color="#E5E5E5"> an important thing so we're</font>

281
00:11:59,319 --> 00:12:09,059
gonna talk about<font color="#E5E5E5"> it so here's our</font><font color="#CCCCCC"> sweet</font>

282
00:12:04,720 --> 00:12:11,470
test class nothing fancy just notepad

283
00:12:09,059 --> 00:12:13,660
this<font color="#E5E5E5"> is after running it through the</font>

284
00:12:11,470 --> 00:12:16,179
<font color="#E5E5E5">dotnet</font><font color="#CCCCCC"> - jscript</font><font color="#E5E5E5"> you compile</font><font color="#CCCCCC"> that last</font>

285
00:12:13,660 --> 00:12:18,779
class<font color="#CCCCCC"> into a</font><font color="#E5E5E5"> DLL run it through the</font>

286
00:12:16,179 --> 00:12:21,309
dotnet - J script tool we get this<font color="#E5E5E5"> thing</font>

287
00:12:18,779 --> 00:12:22,419
<font color="#E5E5E5">that's all very cool but the things that</font>

288
00:12:21,309 --> 00:12:26,799
<font color="#E5E5E5">are</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> interesting is the</font><font color="#CCCCCC"> binary</font>

289
00:12:22,419 --> 00:12:28,059
formatter<font color="#E5E5E5"> basically for transform</font>

290
00:12:26,799 --> 00:12:31,709
<font color="#E5E5E5">because right here</font><font color="#CCCCCC"> is actually that</font>

291
00:12:28,059 --> 00:12:31,709
giant<font color="#CCCCCC"> basics</font><font color="#E5E5E5"> before</font><font color="#CCCCCC"> block</font>

292
00:12:36,560 --> 00:12:44,540
again<font color="#E5E5E5"> gross very gross but like is it</font>

293
00:12:42,620 --> 00:12:48,259
really<font color="#CCCCCC"> being used like have we actually</font>

294
00:12:44,540 --> 00:12:49,969
<font color="#CCCCCC">seen it in the Wow</font><font color="#E5E5E5"> well</font><font color="#CCCCCC"> Palo Alto talked</font>

295
00:12:48,259 --> 00:12:52,819
about paranoid plug<font color="#E5E5E5"> X which was about</font>

296
00:12:49,970 --> 00:12:56,449
<font color="#CCCCCC">msbuild based</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> definitely out</font>

297
00:12:52,819 --> 00:12:58,099
there<font color="#CCCCCC"> like I said earlier I have seen</font>

298
00:12:56,449 --> 00:12:59,540
internal red<font color="#CCCCCC"> team's</font><font color="#E5E5E5"> using it and if</font>

299
00:12:58,100 --> 00:13:01,069
internal red teams are using<font color="#CCCCCC"> it I</font>

300
00:12:59,540 --> 00:13:02,959
<font color="#E5E5E5">wouldn't be surprised if you know</font>

301
00:13:01,069 --> 00:13:05,420
<font color="#CCCCCC">nation-state actors are using it or even</font>

302
00:13:02,959 --> 00:13:08,469
medium<font color="#E5E5E5"> complexity these are not hard or</font>

303
00:13:05,420 --> 00:13:10,729
<font color="#CCCCCC">difficult</font><font color="#E5E5E5"> exploits to pull off and</font>

304
00:13:08,470 --> 00:13:11,980
they're extremely commodity because<font color="#E5E5E5"> the</font>

305
00:13:10,730 --> 00:13:14,089
tools are everywhere

306
00:13:11,980 --> 00:13:17,209
the other thing that you<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> think</font>

307
00:13:14,089 --> 00:13:18,829
about is<font color="#CCCCCC"> that to execute those you're</font>

308
00:13:17,209 --> 00:13:21,258
using<font color="#E5E5E5"> tools that are actually compiling</font>

309
00:13:18,829 --> 00:13:23,719
code<font color="#CCCCCC"> so</font><font color="#E5E5E5"> you don't actually have</font><font color="#CCCCCC"> to bring</font>

310
00:13:21,259 --> 00:13:25,490
<font color="#E5E5E5">any binaries to the table you're</font>

311
00:13:23,720 --> 00:13:26,899
creating the binaries<font color="#E5E5E5"> on-the-fly</font><font color="#CCCCCC"> that</font>

312
00:13:25,490 --> 00:13:30,740
are actually executing all of that code

313
00:13:26,899 --> 00:13:34,160
in memory so from again from<font color="#CCCCCC"> a process</font>

314
00:13:30,740 --> 00:13:36,639
telemetry from a binary analysis<font color="#E5E5E5"> you're</font>

315
00:13:34,160 --> 00:13:44,449
usually catching any<font color="#CCCCCC"> of that post</font>

316
00:13:36,639 --> 00:13:46,160
execution again<font color="#E5E5E5"> gross what about install</font>

317
00:13:44,449 --> 00:13:50,209
<font color="#CCCCCC">util Kaspersky wrote a</font><font color="#E5E5E5"> little bit about</font>

318
00:13:46,160 --> 00:13:51,079
this<font color="#E5E5E5"> sorry I thought somebody was</font><font color="#CCCCCC"> asking</font>

319
00:13:50,209 --> 00:13:53,899
a<font color="#E5E5E5"> question</font>

320
00:13:51,079 --> 00:13:56,719
Kaspersky<font color="#E5E5E5"> wrote about this yeah</font>

321
00:13:53,899 --> 00:13:58,939
November 8th of last year<font color="#E5E5E5"> but they've</font>

322
00:13:56,720 --> 00:14:00,529
I've seen a couple<font color="#CCCCCC"> of posts</font><font color="#E5E5E5"> from them</font>

323
00:13:58,939 --> 00:14:06,250
talking<font color="#E5E5E5"> about seeing this in the</font><font color="#CCCCCC"> wild</font>

324
00:14:00,529 --> 00:14:06,250
especially in Eastern Europe markets

325
00:14:06,610 --> 00:14:13,850
<font color="#E5E5E5">gross so what do we do right</font><font color="#CCCCCC"> do we own</font>

326
00:14:11,509 --> 00:14:16,160
in<font color="#E5E5E5"> stall net now that's not really</font>

327
00:14:13,850 --> 00:14:20,029
possible<font color="#E5E5E5"> as of at least</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> 8</font><font color="#CCCCCC"> I</font>

328
00:14:16,160 --> 00:14:22,519
<font color="#CCCCCC">think switch Linux and Mac maybe that'll</font>

329
00:14:20,029 --> 00:14:24,259
solve the problem<font color="#E5E5E5"> pack up and go home</font>

330
00:14:22,519 --> 00:14:27,709
<font color="#CCCCCC">right only way to win</font><font color="#E5E5E5"> is to not play the</font>

331
00:14:24,259 --> 00:14:30,230
game<font color="#E5E5E5"> yeah let's talk about options right</font>

332
00:14:27,709 --> 00:14:33,018
we have a few<font color="#E5E5E5"> things</font><font color="#CCCCCC"> nothing that is</font>

333
00:14:30,230 --> 00:14:34,939
100% bulletproof<font color="#E5E5E5"> but some interesting</font>

334
00:14:33,019 --> 00:14:37,970
ideas<font color="#CCCCCC"> that</font><font color="#E5E5E5"> really need to be explored</font>

335
00:14:34,939 --> 00:14:41,149
<font color="#CCCCCC">and</font><font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of people haven't really spent</font>

336
00:14:37,970 --> 00:14:43,279
as much time<font color="#E5E5E5"> there as I had expected so</font>

337
00:14:41,149 --> 00:14:44,899
like what<font color="#E5E5E5"> can we detect like and I'm</font>

338
00:14:43,279 --> 00:14:48,020
just<font color="#CCCCCC"> talking raw telemetry not even</font>

339
00:14:44,899 --> 00:14:52,350
building something<font color="#E5E5E5"> that's a high like</font>

340
00:14:48,020 --> 00:14:54,860
what's the word I'm looking<font color="#CCCCCC"> for</font><font color="#E5E5E5"> very</font>

341
00:14:52,350 --> 00:14:57,030
high efficacy<font color="#E5E5E5"> in terms of</font><font color="#CCCCCC"> catching it</font>

342
00:14:54,860 --> 00:14:59,610
<font color="#CCCCCC">fusion logging is really</font><font color="#E5E5E5"> interested in</font>

343
00:14:57,030 --> 00:15:03,120
<font color="#CCCCCC">fusion logging is part of dotnet</font><font color="#E5E5E5"> it</font>

344
00:14:59,610 --> 00:15:05,730
allows you<font color="#E5E5E5"> to actually see when a dotnet</font>

345
00:15:03,120 --> 00:15:07,890
binary attempts to resolve<font color="#E5E5E5"> a type it</font>

346
00:15:05,730 --> 00:15:09,810
will show you<font color="#E5E5E5"> how it found the type that</font>

347
00:15:07,890 --> 00:15:12,600
it resolved<font color="#E5E5E5"> that's really interesting</font>

348
00:15:09,810 --> 00:15:14,459
<font color="#E5E5E5">because if somebody creates</font><font color="#CCCCCC"> their super</font>

349
00:15:12,600 --> 00:15:16,860
sweet<font color="#CCCCCC"> and malicious type you can find</font>

350
00:15:14,460 --> 00:15:20,100
out what<font color="#CCCCCC"> dll it came from as you can</font>

351
00:15:16,860 --> 00:15:21,870
imagine<font color="#E5E5E5"> processes whether dotnet or not</font>

352
00:15:20,100 --> 00:15:25,170
load a<font color="#E5E5E5"> lot of</font><font color="#CCCCCC"> dll's</font>

353
00:15:21,870 --> 00:15:27,690
so and also dotnet programs<font color="#E5E5E5"> load a lot</font>

354
00:15:25,170 --> 00:15:30,020
<font color="#E5E5E5">of types kind of problematic</font><font color="#CCCCCC"> there's a</font>

355
00:15:27,690 --> 00:15:35,220
<font color="#CCCCCC">volume problem</font><font color="#E5E5E5"> here but it is a source</font>

356
00:15:30,020 --> 00:15:37,110
<font color="#CCCCCC">etw</font><font color="#E5E5E5"> logging there is a dotnet CLR trace</font>

357
00:15:35,220 --> 00:15:39,450
<font color="#E5E5E5">and there is the Microsoft Windows</font>

358
00:15:37,110 --> 00:15:42,540
kernel process trace<font color="#E5E5E5"> both of those</font>

359
00:15:39,450 --> 00:15:46,320
<font color="#E5E5E5">traces emit data about what dll's were</font>

360
00:15:42,540 --> 00:15:47,699
loaded into processes<font color="#CCCCCC"> so a good</font><font color="#E5E5E5"> example</font>

361
00:15:46,320 --> 00:15:51,570
<font color="#CCCCCC">and we're</font><font color="#E5E5E5"> gonna talk about it in a</font>

362
00:15:47,700 --> 00:15:54,180
<font color="#E5E5E5">minute is actually</font><font color="#CCCCCC"> MS core EE DLL is the</font>

363
00:15:51,570 --> 00:15:57,750
<font color="#CCCCCC">cornet DLL every dotnet process loads at</font>

364
00:15:54,180 --> 00:15:59,099
least that<font color="#E5E5E5"> and so that being loaded into</font>

365
00:15:57,750 --> 00:16:00,900
a process if you actually want<font color="#CCCCCC"> to</font>

366
00:15:59,100 --> 00:16:04,050
execute<font color="#E5E5E5"> net code that's a</font><font color="#CCCCCC"> high-value</font>

367
00:16:00,900 --> 00:16:06,810
<font color="#E5E5E5">signal as you</font><font color="#CCCCCC"> can imagine if you run an</font>

368
00:16:04,050 --> 00:16:08,430
asp.net shop or<font color="#E5E5E5"> something like</font><font color="#CCCCCC"> that it's</font>

369
00:16:06,810 --> 00:16:09,599
gonna be incredibly high volume because

370
00:16:08,430 --> 00:16:13,469
you've got<font color="#CCCCCC"> all these things</font><font color="#E5E5E5"> loading all</font>

371
00:16:09,600 --> 00:16:16,140
that stuff<font color="#CCCCCC"> and then</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> course there's</font>

372
00:16:13,470 --> 00:16:19,650
CLR<font color="#E5E5E5"> guard which Joe DeSimone talked</font>

373
00:16:16,140 --> 00:16:21,480
about<font color="#E5E5E5"> last year at Derby it is it'll</font>

374
00:16:19,650 --> 00:16:25,530
it'll block and capture<font color="#E5E5E5"> and assembly and</font>

375
00:16:21,480 --> 00:16:27,630
<font color="#E5E5E5">it uses the app init dll's functionality</font>

376
00:16:25,530 --> 00:16:29,939
to inject the DLL<font color="#E5E5E5"> into every single</font>

377
00:16:27,630 --> 00:16:35,420
process<font color="#E5E5E5"> that starts up and then it</font>

378
00:16:29,940 --> 00:16:35,420
monitors for these calls<font color="#E5E5E5"> to load dotnet</font>

379
00:16:35,540 --> 00:16:39,599
unfortunately it's a proof of<font color="#E5E5E5"> concept</font><font color="#CCCCCC"> so</font>

380
00:16:37,860 --> 00:16:41,670
a good<font color="#CCCCCC"> example of why it's a proof of</font>

381
00:16:39,600 --> 00:16:43,590
concept<font color="#E5E5E5"> if you enable CLR guard on your</font>

382
00:16:41,670 --> 00:16:45,709
machine<font color="#E5E5E5"> right</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> and then you attempt</font>

383
00:16:43,590 --> 00:16:48,390
<font color="#CCCCCC">to</font><font color="#E5E5E5"> launch something like Visual Studio</font>

384
00:16:45,710 --> 00:16:50,190
Visual Studio won't work<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it'll</font>

385
00:16:48,390 --> 00:16:53,189
catch it trying to<font color="#E5E5E5"> do assembly dot load</font>

386
00:16:50,190 --> 00:16:54,300
on an<font color="#E5E5E5"> arbitrary byte payload and that's</font>

387
00:16:53,190 --> 00:16:55,470
because it's<font color="#E5E5E5"> doing the things I said</font>

388
00:16:54,300 --> 00:16:58,319
<font color="#E5E5E5">earlier with the</font>

389
00:16:55,470 --> 00:16:59,760
<font color="#CCCCCC">it's optimizations it's unfortunate but</font>

390
00:16:58,320 --> 00:17:01,470
it is the reality<font color="#CCCCCC"> of how these</font><font color="#E5E5E5"> things</font>

391
00:16:59,760 --> 00:17:05,760
work and<font color="#E5E5E5"> it's</font><font color="#CCCCCC"> very</font><font color="#E5E5E5"> much the</font><font color="#CCCCCC"> nature of</font>

392
00:17:01,470 --> 00:17:09,420
dotnet so we're gonna<font color="#E5E5E5"> talk a little bit</font>

393
00:17:05,760 --> 00:17:11,129
about etw real quick<font color="#CCCCCC"> I talked about</font><font color="#E5E5E5"> it</font>

394
00:17:09,420 --> 00:17:13,860
<font color="#E5E5E5">last year</font><font color="#CCCCCC"> at Derby you may have seen</font>

395
00:17:11,130 --> 00:17:15,870
<font color="#CCCCCC">that</font><font color="#E5E5E5"> but we're gonna go about go over it</font>

396
00:17:13,859 --> 00:17:17,939
again<font color="#CCCCCC"> I apologize if you're not really a</font>

397
00:17:15,869 --> 00:17:19,829
coder but<font color="#E5E5E5"> all I have for you</font><font color="#CCCCCC"> right now</font>

398
00:17:17,940 --> 00:17:21,180
is a tool<font color="#CCCCCC"> that I built but this is the</font>

399
00:17:19,829 --> 00:17:24,629
code for<font color="#E5E5E5"> the tool and it's up on github</font>

400
00:17:21,180 --> 00:17:26,910
<font color="#CCCCCC">I'll have a link for it later but</font><font color="#E5E5E5"> this</font>

401
00:17:24,630 --> 00:17:29,010
<font color="#E5E5E5">is it's relatively simple effectively</font>

402
00:17:26,910 --> 00:17:30,900
<font color="#E5E5E5">we're gonna</font><font color="#CCCCCC"> listen to the kernel</font><font color="#E5E5E5"> prop</font>

403
00:17:29,010 --> 00:17:34,530
the Microsoft Windows kernel process

404
00:17:30,900 --> 00:17:37,470
provider we're gonna filter<font color="#E5E5E5"> on event ID</font>

405
00:17:34,530 --> 00:17:40,350
5 which is DLL load and we're gonna look

406
00:17:37,470 --> 00:17:43,200
for<font color="#CCCCCC"> any</font><font color="#E5E5E5"> image name that ends with MS</font>

407
00:17:40,350 --> 00:17:45,629
poor<font color="#CCCCCC"> ie</font><font color="#E5E5E5"> DLL in Windows parlance and</font>

408
00:17:43,200 --> 00:17:48,050
<font color="#E5E5E5">image</font><font color="#CCCCCC"> as a DLL</font><font color="#E5E5E5"> any library that gets</font>

409
00:17:45,630 --> 00:17:50,370
<font color="#E5E5E5">loaded into a process is an image from</font>

410
00:17:48,050 --> 00:17:52,110
<font color="#CCCCCC">there we're</font><font color="#E5E5E5"> gonna create our delegate</font>

411
00:17:50,370 --> 00:17:54,270
where we're gonna pull<font color="#CCCCCC"> out the image</font>

412
00:17:52,110 --> 00:17:57,120
name or say unknown which would be

413
00:17:54,270 --> 00:17:59,070
<font color="#E5E5E5">really weird</font><font color="#CCCCCC"> and then we're gonna get</font>

414
00:17:57,120 --> 00:18:00,270
the<font color="#E5E5E5"> cross this idea that loaded it and</font>

415
00:17:59,070 --> 00:18:01,710
then we're just gonna<font color="#E5E5E5"> look up some</font>

416
00:18:00,270 --> 00:18:04,080
information<font color="#CCCCCC"> about that</font><font color="#E5E5E5"> process in case</font>

417
00:18:01,710 --> 00:18:06,360
it's alive<font color="#CCCCCC"> and then we're</font><font color="#E5E5E5"> gonna log some</font>

418
00:18:04,080 --> 00:18:09,570
information about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> right this</font><font color="#E5E5E5"> is very</font>

419
00:18:06,360 --> 00:18:11,070
dumb basic symbol or a simple example<font color="#CCCCCC"> of</font>

420
00:18:09,570 --> 00:18:13,560
how<font color="#E5E5E5"> you could catch something like this</font>

421
00:18:11,070 --> 00:18:15,960
that's actually pretty performant<font color="#CCCCCC"> and</font>

422
00:18:13,560 --> 00:18:19,320
then you can imagine marrying<font color="#E5E5E5"> this up</font>

423
00:18:15,960 --> 00:18:21,510
with a white list of approved binaries

424
00:18:19,320 --> 00:18:23,879
that<font color="#CCCCCC"> can do this sort</font><font color="#E5E5E5"> of thing you know</font>

425
00:18:21,510 --> 00:18:26,490
<font color="#E5E5E5">maybe your eye is server and</font><font color="#CCCCCC"> visual</font>

426
00:18:23,880 --> 00:18:29,480
<font color="#CCCCCC">studio</font><font color="#E5E5E5"> or you know a lot</font><font color="#CCCCCC"> of this</font><font color="#E5E5E5"> comes</font>

427
00:18:26,490 --> 00:18:31,740
<font color="#CCCCCC">down to understanding your environment</font>

428
00:18:29,480 --> 00:18:33,780
<font color="#CCCCCC">so this is it running</font>

429
00:18:31,740 --> 00:18:38,010
<font color="#CCCCCC">I don't do live demos</font><font color="#E5E5E5"> because they're</font>

430
00:18:33,780 --> 00:18:39,750
scary<font color="#E5E5E5"> and they</font><font color="#CCCCCC"> always never</font><font color="#E5E5E5"> work so up</font>

431
00:18:38,010 --> 00:18:43,230
top<font color="#E5E5E5"> is actually the binary that I ran</font>

432
00:18:39,750 --> 00:18:45,000
<font color="#E5E5E5">that I created there</font><font color="#CCCCCC"> inject example dot</font>

433
00:18:43,230 --> 00:18:46,650
<font color="#CCCCCC">eggs he actually came from the CLR</font><font color="#E5E5E5"> Guard</font>

434
00:18:45,000 --> 00:18:50,220
project<font color="#E5E5E5"> as a proof of concept for</font>

435
00:18:46,650 --> 00:18:52,410
<font color="#E5E5E5">loading CLR so this is it showing</font><font color="#CCCCCC"> that</font>

436
00:18:50,220 --> 00:18:55,650
it's running<font color="#CCCCCC"> and then of course there's</font>

437
00:18:52,410 --> 00:18:57,540
our<font color="#CCCCCC"> pig showing</font><font color="#E5E5E5"> hey loaded em</font><font color="#CCCCCC"> Escort ll</font>

438
00:18:55,650 --> 00:18:59,940
<font color="#E5E5E5">even though it's a native code binary</font><font color="#CCCCCC"> we</font>

439
00:18:57,540 --> 00:19:04,010
<font color="#E5E5E5">know</font><font color="#CCCCCC"> injecting</font><font color="#E5E5E5"> that we know inject</font>

440
00:18:59,940 --> 00:19:04,010
example is<font color="#E5E5E5"> actually a win32 executable</font>

441
00:19:05,620 --> 00:19:13,639
so what else<font color="#CCCCCC"> can we do well</font>

442
00:19:09,850 --> 00:19:16,010
<font color="#CCCCCC">unfortunately I don't have like that</font><font color="#E5E5E5"> one</font>

443
00:19:13,640 --> 00:19:18,260
<font color="#E5E5E5">sweet trick for you to go home</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> solve</font>

444
00:19:16,010 --> 00:19:20,960
this problem<font color="#CCCCCC"> but a really really good</font>

445
00:19:18,260 --> 00:19:23,180
way to<font color="#E5E5E5"> start is to look at like</font>

446
00:19:20,960 --> 00:19:25,880
developing resilient detections around

447
00:19:23,180 --> 00:19:27,680
behaviors and<font color="#E5E5E5"> not</font><font color="#CCCCCC"> around signatures</font><font color="#E5E5E5"> not</font>

448
00:19:25,880 --> 00:19:29,600
around trying to<font color="#E5E5E5"> pick exactly what works</font>

449
00:19:27,680 --> 00:19:30,920
and<font color="#E5E5E5"> what's allowed right you know kind</font>

450
00:19:29,600 --> 00:19:32,060
of detection along the kill chain which

451
00:19:30,920 --> 00:19:35,870
has been talked about<font color="#E5E5E5"> over the</font><font color="#CCCCCC"> last</font>

452
00:19:32,060 --> 00:19:37,310
couple<font color="#E5E5E5"> of years</font><font color="#CCCCCC"> and mitre attack yeah I</font>

453
00:19:35,870 --> 00:19:39,649
mean some of<font color="#E5E5E5"> the other things like</font>

454
00:19:37,310 --> 00:19:41,360
looking<font color="#E5E5E5"> at those specific tools you know</font>

455
00:19:39,650 --> 00:19:42,590
everybody says<font color="#CCCCCC"> you know understand your</font>

456
00:19:41,360 --> 00:19:44,510
environment<font color="#CCCCCC"> know what everybody is doing</font>

457
00:19:42,590 --> 00:19:46,189
<font color="#E5E5E5">you know we've all worked in enterprise</font>

458
00:19:44,510 --> 00:19:48,440
security<font color="#CCCCCC"> we know that doesn't</font><font color="#E5E5E5"> always</font>

459
00:19:46,190 --> 00:19:51,560
work<font color="#E5E5E5"> but some of these</font><font color="#CCCCCC"> specific tools</font>

460
00:19:48,440 --> 00:19:54,140
you can start looking<font color="#CCCCCC"> for</font><font color="#E5E5E5"> interesting</font>

461
00:19:51,560 --> 00:19:56,750
use cases<font color="#E5E5E5"> or and or interesting</font>

462
00:19:54,140 --> 00:19:58,760
telemetry around them like msbuild

463
00:19:56,750 --> 00:20:02,180
shouldn't be talking<font color="#CCCCCC"> to the internet</font><font color="#E5E5E5"> why</font>

464
00:19:58,760 --> 00:20:04,550
is<font color="#CCCCCC"> I</font><font color="#E5E5E5"> miss bill talking</font><font color="#CCCCCC"> to github stop</font>

465
00:20:02,180 --> 00:20:07,160
doing<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you know simple things</font><font color="#E5E5E5"> like</font>

466
00:20:04,550 --> 00:20:09,320
<font color="#E5E5E5">that start looking at what your your</font>

467
00:20:07,160 --> 00:20:11,390
base use cases for<font color="#CCCCCC"> this do you have a</font>

468
00:20:09,320 --> 00:20:13,429
bunch of<font color="#CCCCCC"> developers okay how are they</font>

469
00:20:11,390 --> 00:20:16,640
using this bit regularly understanding

470
00:20:13,430 --> 00:20:19,790
those processes and<font color="#E5E5E5"> say everybody else</font>

471
00:20:16,640 --> 00:20:21,920
do not touch<font color="#E5E5E5"> you know kind of framing</font>

472
00:20:19,790 --> 00:20:24,550
some of this in<font color="#CCCCCC"> theirs this is default</font>

473
00:20:21,920 --> 00:20:26,480
on all<font color="#E5E5E5"> your</font><font color="#CCCCCC"> Windows environments</font><font color="#E5E5E5"> but</font>

474
00:20:24,550 --> 00:20:28,970
understanding where it's used<font color="#E5E5E5"> and how</font>

475
00:20:26,480 --> 00:20:31,580
it's<font color="#CCCCCC"> used is you know good IT hygiene</font>

476
00:20:28,970 --> 00:20:34,250
<font color="#E5E5E5">and just getting that familiarity</font><font color="#CCCCCC"> so</font>

477
00:20:31,580 --> 00:20:35,870
start looking<font color="#CCCCCC"> for some of these some</font>

478
00:20:34,250 --> 00:20:39,260
<font color="#CCCCCC">even does the</font><font color="#E5E5E5"> basic build tools and best</font>

479
00:20:35,870 --> 00:20:41,419
it<font color="#E5E5E5"> must build</font><font color="#CCCCCC"> CSE those type of tools</font>

480
00:20:39,260 --> 00:20:43,520
that<font color="#CCCCCC"> are</font><font color="#E5E5E5"> part</font><font color="#CCCCCC"> of the.net compile and</font>

481
00:20:41,420 --> 00:20:44,960
build and<font color="#CCCCCC"> in development</font><font color="#E5E5E5"> framework and</font>

482
00:20:43,520 --> 00:20:46,460
understand where<font color="#E5E5E5"> and how they're</font><font color="#CCCCCC"> being</font>

483
00:20:44,960 --> 00:20:49,670
used<font color="#E5E5E5"> natively in your</font><font color="#CCCCCC"> environment</font><font color="#E5E5E5"> and</font>

484
00:20:46,460 --> 00:20:51,320
then start<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> for you know testing</font>

485
00:20:49,670 --> 00:20:55,120
those and understanding how in these

486
00:20:51,320 --> 00:20:58,070
abuse cases<font color="#E5E5E5"> you can find some maybe not</font>

487
00:20:55,120 --> 00:21:00,080
<font color="#E5E5E5">you know</font><font color="#CCCCCC"> Silver Bullet detections and</font>

488
00:20:58,070 --> 00:21:02,810
<font color="#E5E5E5">use cases</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you can find some use</font>

489
00:21:00,080 --> 00:21:06,040
cases<font color="#E5E5E5"> where hey this may not</font><font color="#CCCCCC"> be normal</font>

490
00:21:02,810 --> 00:21:06,040
<font color="#E5E5E5">at least need to go investigate</font>

491
00:21:07,010 --> 00:21:12,620
and of course there is

492
00:21:09,500 --> 00:21:14,570
you know<font color="#E5E5E5"> app whitelisting right</font>

493
00:21:12,620 --> 00:21:18,790
I mean<font color="#CCCCCC"> KC's talked about this on and off</font>

494
00:21:14,570 --> 00:21:21,409
<font color="#CCCCCC">for the</font><font color="#E5E5E5"> last four or five</font><font color="#CCCCCC"> years at least</font>

495
00:21:18,790 --> 00:21:22,970
<font color="#CCCCCC">figuring out exactly</font><font color="#E5E5E5"> who needs to be</font>

496
00:21:21,410 --> 00:21:24,890
able<font color="#E5E5E5"> to run what and I understand that</font>

497
00:21:22,970 --> 00:21:26,300
<font color="#E5E5E5">that is</font><font color="#CCCCCC"> a difficult proposition</font><font color="#E5E5E5"> in a lot</font>

498
00:21:24,890 --> 00:21:28,370
<font color="#E5E5E5">of cases especially when you need to</font>

499
00:21:26,300 --> 00:21:30,830
unroll back from where everyone's used

500
00:21:28,370 --> 00:21:34,909
to being in the Wild West<font color="#CCCCCC"> but in reality</font>

501
00:21:30,830 --> 00:21:38,000
<font color="#E5E5E5">right</font><font color="#CCCCCC"> now unless</font><font color="#E5E5E5"> Microsoft begins to</font>

502
00:21:34,910 --> 00:21:40,100
enable improve telemetry<font color="#E5E5E5"> and logging in</font>

503
00:21:38,000 --> 00:21:43,880
<font color="#E5E5E5">dotnet much the way they did with</font>

504
00:21:40,100 --> 00:21:46,459
PowerShell<font color="#CCCCCC"> I don't have many better</font>

505
00:21:43,880 --> 00:21:49,340
options<font color="#CCCCCC"> for folks because msbuild does</font>

506
00:21:46,460 --> 00:21:51,020
have legitimate<font color="#CCCCCC"> uses on machines</font><font color="#E5E5E5"> install</font>

507
00:21:49,340 --> 00:21:51,590
util does have legitimate<font color="#E5E5E5"> uses on</font>

508
00:21:51,020 --> 00:21:54,320
machines

509
00:21:51,590 --> 00:21:57,379
just because CSC eggsy the<font color="#CCCCCC"> c-sharp</font>

510
00:21:54,320 --> 00:22:00,139
<font color="#CCCCCC">compiler spun up</font><font color="#E5E5E5"> it's not necessarily a</font>

511
00:21:57,380 --> 00:22:02,180
bad<font color="#CCCCCC"> thing and</font><font color="#E5E5E5"> there are common and even</font>

512
00:22:00,140 --> 00:22:04,220
when you didn't realize<font color="#E5E5E5"> it use cases</font>

513
00:22:02,180 --> 00:22:07,490
<font color="#E5E5E5">where it occurs</font>

514
00:22:04,220 --> 00:22:10,870
but again coming<font color="#E5E5E5"> to understand it and</font>

515
00:22:07,490 --> 00:22:13,670
<font color="#E5E5E5">picking out like</font><font color="#CCCCCC"> okay maybe we</font><font color="#E5E5E5"> should</font>

516
00:22:10,870 --> 00:22:15,590
disallow<font color="#E5E5E5"> ms building and install</font><font color="#CCCCCC"> util at</font>

517
00:22:13,670 --> 00:22:17,420
least from running and of course

518
00:22:15,590 --> 00:22:18,889
Chromebooks don't get malware right<font color="#E5E5E5"> max</font>

519
00:22:17,420 --> 00:22:20,450
didn't get malware five years ago now

520
00:22:18,890 --> 00:22:24,140
they get<font color="#CCCCCC"> malware so Chromebooks don't</font>

521
00:22:20,450 --> 00:22:26,030
get it now<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is roughly the end of</font>

522
00:22:24,140 --> 00:22:27,860
<font color="#E5E5E5">our content partly because we thought we</font>

523
00:22:26,030 --> 00:22:30,470
had a<font color="#E5E5E5"> 30 minute slide or a 30 minute</font>

524
00:22:27,860 --> 00:22:32,419
slot until<font color="#CCCCCC"> we</font><font color="#E5E5E5"> got here</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> Casey and I</font>

525
00:22:30,470 --> 00:22:36,680
developed<font color="#E5E5E5"> 30 minute content or a 30</font>

526
00:22:32,420 --> 00:22:38,420
minute<font color="#CCCCCC"> 30 minutes worth of content if</font>

527
00:22:36,680 --> 00:22:39,920
anyone has questions about<font color="#E5E5E5"> this wants to</font>

528
00:22:38,420 --> 00:22:41,510
<font color="#E5E5E5">talk to</font><font color="#CCCCCC"> us a lot</font><font color="#E5E5E5"> of this is kind of</font>

529
00:22:39,920 --> 00:22:42,890
precursor<font color="#E5E5E5"> to the workshop we're giving</font>

530
00:22:41,510 --> 00:22:46,250
tomorrow<font color="#E5E5E5"> so if you're in the workshop</font>

531
00:22:42,890 --> 00:22:48,620
tomorrow<font color="#E5E5E5"> buckle up because we're gonna</font>

532
00:22:46,250 --> 00:22:52,220
go really really deep<font color="#CCCCCC"> and really</font><font color="#E5E5E5"> really</font>

533
00:22:48,620 --> 00:22:53,719
fast<font color="#CCCCCC"> I</font><font color="#E5E5E5"> I didn't want on the first night</font>

534
00:22:52,220 --> 00:22:56,330
<font color="#CCCCCC">of a</font><font color="#E5E5E5"> conference to completely slam</font>

535
00:22:53,720 --> 00:22:57,650
everyone's brain with like<font color="#CCCCCC"> hey here's</font>

536
00:22:56,330 --> 00:22:59,840
all the details<font color="#CCCCCC"> about everything</font><font color="#E5E5E5"> works</font>

537
00:22:57,650 --> 00:23:01,130
and<font color="#CCCCCC"> everything's</font><font color="#E5E5E5"> gonna do things and oh</font>

538
00:22:59,840 --> 00:23:04,399
hey we're gonna write some code later

539
00:23:01,130 --> 00:23:06,110
tomorrow<font color="#CCCCCC"> so that's that's what we have</font>

540
00:23:04,400 --> 00:23:08,300
if anyone has questions we're happy to

541
00:23:06,110 --> 00:23:13,000
take them<font color="#CCCCCC"> I can sit and chat for however</font>

542
00:23:08,300 --> 00:23:16,550
<font color="#CCCCCC">long questions comments concerns</font>

543
00:23:13,000 --> 00:23:19,510
neide remarks<font color="#E5E5E5"> snide remarks yeah if you</font>

544
00:23:16,550 --> 00:23:22,500
didn't like it<font color="#CCCCCC"> I want to</font><font color="#E5E5E5"> hear about it</font>

545
00:23:19,510 --> 00:23:23,470
cool thanks for your time

546
00:23:22,500 --> 00:23:25,500
[Music]

547
00:23:23,470 --> 00:23:36,319
[Applause]

548
00:23:25,500 --> 00:23:36,319
[Music]

