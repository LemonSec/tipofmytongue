1
00:00:00,100 --> 00:00:10,950
[Music]

2
00:00:08,269 --> 00:00:12,929
I'm William<font color="#CCCCCC"> Burgess and</font><font color="#E5E5E5"> I'm gonna be</font>

3
00:00:10,950 --> 00:00:16,378
<font color="#E5E5E5">talking</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> today about</font><font color="#E5E5E5"> red teaming</font>

4
00:00:12,929 --> 00:00:19,380
in the<font color="#E5E5E5"> EDR</font><font color="#CCCCCC"> H the key</font><font color="#E5E5E5"> premise of this</font>

5
00:00:16,379 --> 00:00:21,840
talk is<font color="#CCCCCC"> that in my opinion</font><font color="#E5E5E5"> over the</font><font color="#CCCCCC"> last</font>

6
00:00:19,380 --> 00:00:22,859
of five years<font color="#E5E5E5"> defensive technology has</font>

7
00:00:21,840 --> 00:00:25,500
come<font color="#E5E5E5"> a</font><font color="#CCCCCC"> long way and it's got</font>

8
00:00:22,859 --> 00:00:28,650
significantly better and so much so that

9
00:00:25,500 --> 00:00:31,679
<font color="#E5E5E5">I think in terms of</font><font color="#CCCCCC"> for us attackers</font><font color="#E5E5E5"> the</font>

10
00:00:28,650 --> 00:00:34,140
<font color="#CCCCCC">game's changed and we need new ways and</font>

11
00:00:31,679 --> 00:00:36,540
different<font color="#CCCCCC"> things</font><font color="#E5E5E5"> of doing stuff</font><font color="#CCCCCC"> and to</font>

12
00:00:34,140 --> 00:00:37,260
kind of support<font color="#E5E5E5"> this this claim it's</font>

13
00:00:36,540 --> 00:00:39,300
interesting

14
00:00:37,260 --> 00:00:40,860
<font color="#E5E5E5">tracing</font><font color="#CCCCCC"> say the development of cobalt</font>

15
00:00:39,300 --> 00:00:44,099
strike which<font color="#E5E5E5"> is a very popular</font>

16
00:00:40,860 --> 00:00:47,430
commercial<font color="#CCCCCC"> fully functional implant</font><font color="#E5E5E5"> and</font>

17
00:00:44,100 --> 00:00:50,039
if you look at the most recent releases

18
00:00:47,430 --> 00:00:51,629
<font color="#E5E5E5">the focus has been on defensive evasion</font>

19
00:00:50,039 --> 00:00:54,030
so things like in memory<font color="#CCCCCC"> of</font><font color="#E5E5E5"> Asian stuff</font>

20
00:00:51,629 --> 00:00:57,930
like<font color="#E5E5E5"> this and I think</font><font color="#CCCCCC"> this displays this</font>

21
00:00:54,030 --> 00:00:59,910
kind of<font color="#E5E5E5"> disparity in capabilities</font><font color="#CCCCCC"> and so</font>

22
00:00:57,930 --> 00:01:02,399
the idea of<font color="#E5E5E5"> this talk is</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> kind of</font>

23
00:00:59,910 --> 00:01:05,128
explain like what ideas are what they do

24
00:01:02,399 --> 00:01:06,479
and what makes<font color="#E5E5E5"> them so powerful and then</font>

25
00:01:05,129 --> 00:01:09,140
the approach is that<font color="#E5E5E5"> we've actually</font>

26
00:01:06,479 --> 00:01:12,799
<font color="#E5E5E5">adopted in</font><font color="#CCCCCC"> MWR to basically counter them</font>

27
00:01:09,140 --> 00:01:15,689
<font color="#CCCCCC">a little about me so I'm I'm a security</font>

28
00:01:12,799 --> 00:01:18,509
<font color="#CCCCCC">consultant at MWR infra security which</font>

29
00:01:15,689 --> 00:01:20,339
<font color="#CCCCCC">is a uk-based consultancy I actually</font>

30
00:01:18,509 --> 00:01:23,549
joined<font color="#E5E5E5"> as a threat hunter in</font><font color="#CCCCCC"> their</font>

31
00:01:20,340 --> 00:01:26,640
<font color="#E5E5E5">manage detection in response and so I</font>

32
00:01:23,549 --> 00:01:28,530
quickly got<font color="#CCCCCC"> to grips with you know like</font>

33
00:01:26,640 --> 00:01:30,000
analyzing malware understanding how it

34
00:01:28,530 --> 00:01:32,250
works<font color="#CCCCCC"> understanding how that</font><font color="#E5E5E5"> sort of</font>

35
00:01:30,000 --> 00:01:34,040
<font color="#E5E5E5">remote access Trojans work and basically</font>

36
00:01:32,250 --> 00:01:36,540
how you detect them at a technical level

37
00:01:34,040 --> 00:01:38,310
<font color="#CCCCCC">and I also experienced firsthand the</font>

38
00:01:36,540 --> 00:01:41,610
challenges<font color="#E5E5E5"> of basically</font><font color="#CCCCCC"> doing detection</font>

39
00:01:38,310 --> 00:01:44,070
at scale and it's extremely<font color="#CCCCCC"> difficult to</font>

40
00:01:41,610 --> 00:01:47,130
detect<font color="#E5E5E5"> advanced malware at scale across</font>

41
00:01:44,070 --> 00:01:48,570
an enterprise essentially<font color="#CCCCCC"> I then kind of</font>

42
00:01:47,130 --> 00:01:51,210
got more interested in defensive<font color="#CCCCCC"> tolling</font>

43
00:01:48,570 --> 00:01:52,408
and offensive research<font color="#E5E5E5"> so naturally then</font>

44
00:01:51,210 --> 00:01:53,880
started getting<font color="#CCCCCC"> involved with sort</font><font color="#E5E5E5"> of</font>

45
00:01:52,409 --> 00:01:55,320
<font color="#E5E5E5">targeted attacks simulations or read</font>

46
00:01:53,880 --> 00:01:56,699
teams where you are essentially

47
00:01:55,320 --> 00:01:58,548
obviously trying<font color="#E5E5E5"> to compromise an</font>

48
00:01:56,700 --> 00:02:00,630
organization and remain<font color="#E5E5E5"> undetected</font>

49
00:01:58,549 --> 00:02:03,320
similar to this<font color="#E5E5E5"> kind like purple team</font>

50
00:02:00,630 --> 00:02:05,490
and then stop capability assessments

51
00:02:03,320 --> 00:02:07,690
<font color="#CCCCCC">I've also done</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> like use case</font>

52
00:02:05,490 --> 00:02:09,549
engineering for various<font color="#CCCCCC"> ideas as</font><font color="#E5E5E5"> well</font>

53
00:02:07,690 --> 00:02:11,350
and basically<font color="#E5E5E5"> through this I've been</font>

54
00:02:09,550 --> 00:02:13,090
exposed to<font color="#E5E5E5"> a wide</font><font color="#CCCCCC"> variety of sort of</font>

55
00:02:11,350 --> 00:02:14,859
<font color="#E5E5E5">detection technologies and kind</font><font color="#CCCCCC"> of got a</font>

56
00:02:13,090 --> 00:02:16,540
good<font color="#CCCCCC"> understanding of their strengths</font>

57
00:02:14,860 --> 00:02:20,800
and<font color="#CCCCCC"> weaknesses</font><font color="#E5E5E5"> so this talk is kind</font><font color="#CCCCCC"> of</font>

58
00:02:16,540 --> 00:02:22,390
<font color="#E5E5E5">very</font><font color="#CCCCCC"> much</font><font color="#E5E5E5"> a fusion of blue and</font><font color="#CCCCCC"> red so</font>

59
00:02:20,800 --> 00:02:24,820
what we're up against what's the

60
00:02:22,390 --> 00:02:26,559
challenge<font color="#CCCCCC"> well one</font><font color="#E5E5E5"> of the problems that</font>

61
00:02:24,820 --> 00:02:28,299
we<font color="#E5E5E5"> face</font><font color="#CCCCCC"> when we</font><font color="#E5E5E5"> do sort</font><font color="#CCCCCC"> of target attack</font>

62
00:02:26,560 --> 00:02:30,070
simulations<font color="#CCCCCC"> em</font><font color="#E5E5E5"> to God is that we will</font>

63
00:02:28,300 --> 00:02:31,930
frequently obtain a foothold on<font color="#E5E5E5"> a host</font>

64
00:02:30,070 --> 00:02:33,310
which<font color="#CCCCCC"> is running</font><font color="#E5E5E5"> some kind of EDR or</font>

65
00:02:31,930 --> 00:02:37,020
<font color="#CCCCCC">pinpoint detection response solution</font>

66
00:02:33,310 --> 00:02:38,620
<font color="#CCCCCC">product a few popular commercial</font>

67
00:02:37,020 --> 00:02:40,600
products are<font color="#CCCCCC"> listed here</font>

68
00:02:38,620 --> 00:02:42,130
<font color="#CCCCCC">it's key to distinguish that</font><font color="#E5E5E5"> some of</font>

69
00:02:40,600 --> 00:02:43,180
these are<font color="#E5E5E5"> managed detection response and</font>

70
00:02:42,130 --> 00:02:44,740
some of them are like<font color="#E5E5E5"> standalone</font>

71
00:02:43,180 --> 00:02:48,610
software<font color="#E5E5E5"> stacks that you install in your</font>

72
00:02:44,740 --> 00:02:50,530
<font color="#CCCCCC">euro state</font><font color="#E5E5E5"> the capabilities vary from</font>

73
00:02:48,610 --> 00:02:52,180
product to product but generally they

74
00:02:50,530 --> 00:02:54,610
can be extremely<font color="#E5E5E5"> effective at detecting</font>

75
00:02:52,180 --> 00:02:56,920
<font color="#E5E5E5">malware at scale and they give you</font>

76
00:02:54,610 --> 00:02:58,750
really<font color="#CCCCCC"> quite incredible visibility into</font>

77
00:02:56,920 --> 00:03:00,549
suspicious behavior and anomalous

78
00:02:58,750 --> 00:03:03,790
activity on individual hosts across your

79
00:03:00,550 --> 00:03:05,800
<font color="#CCCCCC">network and so</font><font color="#E5E5E5"> fast as red team is like</font>

80
00:03:03,790 --> 00:03:07,329
this is<font color="#E5E5E5"> the problem and so we need to</font>

81
00:03:05,800 --> 00:03:11,080
<font color="#E5E5E5">stay ahead of the</font><font color="#CCCCCC"> game in order</font><font color="#E5E5E5"> to</font>

82
00:03:07,330 --> 00:03:13,239
remain undetected<font color="#E5E5E5"> so how do they work so</font>

83
00:03:11,080 --> 00:03:15,400
it tends to<font color="#E5E5E5"> be</font><font color="#CCCCCC"> right you have an agent</font>

84
00:03:13,239 --> 00:03:17,050
which maybe<font color="#E5E5E5"> has a mix of userland and</font>

85
00:03:15,400 --> 00:03:20,250
kernel and components<font color="#E5E5E5"> and you roll this</font>

86
00:03:17,050 --> 00:03:23,230
out<font color="#CCCCCC"> across every host in your state and</font>

87
00:03:20,250 --> 00:03:25,120
it's really got two key responsibilities

88
00:03:23,230 --> 00:03:26,140
right the first is detection so it's

89
00:03:25,120 --> 00:03:28,209
<font color="#E5E5E5">going to be looking for things like</font>

90
00:03:26,140 --> 00:03:30,429
<font color="#E5E5E5">image loads common persistence they</font>

91
00:03:28,209 --> 00:03:33,610
services<font color="#CCCCCC"> schedule tasks</font><font color="#E5E5E5"> process</font>

92
00:03:30,430 --> 00:03:35,530
execution<font color="#E5E5E5"> driver loading memory friends</font>

93
00:03:33,610 --> 00:03:37,150
<font color="#E5E5E5">it's all these types of things and then</font>

94
00:03:35,530 --> 00:03:40,090
<font color="#E5E5E5">secondly it's going to be looking for</font>

95
00:03:37,150 --> 00:03:42,580
how<font color="#E5E5E5"> to respond to this so it might allow</font>

96
00:03:40,090 --> 00:03:45,610
you to dump process memory<font color="#E5E5E5"> grab files of</font>

97
00:03:42,580 --> 00:03:49,930
grab an MFT<font color="#E5E5E5"> and in the worst case</font>

98
00:03:45,610 --> 00:03:51,250
isolate a host<font color="#E5E5E5"> essentially and</font><font color="#CCCCCC"> so in the</font>

99
00:03:49,930 --> 00:03:55,120
case<font color="#CCCCCC"> of these kind</font><font color="#E5E5E5"> of stand-alone</font>

100
00:03:51,250 --> 00:03:56,860
<font color="#E5E5E5">software stacks often</font><font color="#CCCCCC"> this data is going</font>

101
00:03:55,120 --> 00:03:58,450
<font color="#CCCCCC">to be</font><font color="#E5E5E5"> packaged up and sent to an on-prem</font>

102
00:03:56,860 --> 00:04:00,070
server<font color="#E5E5E5"> and then you're going to plug</font>

103
00:03:58,450 --> 00:04:01,149
this into your<font color="#CCCCCC"> single scene and then</font>

104
00:04:00,070 --> 00:04:03,340
you're going to start<font color="#CCCCCC"> generating alerts</font>

105
00:04:01,150 --> 00:04:05,110
<font color="#E5E5E5">from it stimuli if it's a managed</font>

106
00:04:03,340 --> 00:04:07,120
detection<font color="#CCCCCC"> response</font><font color="#E5E5E5"> it's going to go out</font>

107
00:04:05,110 --> 00:04:09,640
via some cloud hosted infrastructure

108
00:04:07,120 --> 00:04:10,280
into their detection stack and then

109
00:04:09,640 --> 00:04:13,149
<font color="#CCCCCC">there</font>

110
00:04:10,280 --> 00:04:13,150
<font color="#E5E5E5">this is gonna look at it</font>

111
00:04:16,380 --> 00:04:20,190
so in my opinion<font color="#E5E5E5"> they're</font><font color="#CCCCCC"> worse off I've</font>

112
00:04:18,480 --> 00:04:23,070
<font color="#E5E5E5">really really really powerful features</font>

113
00:04:20,190 --> 00:04:24,600
videos the first<font color="#E5E5E5"> is</font><font color="#CCCCCC"> real-time</font><font color="#E5E5E5"> system</font>

114
00:04:23,070 --> 00:04:26,460
<font color="#E5E5E5">tracing so in particular process</font>

115
00:04:24,600 --> 00:04:28,350
relationships and<font color="#E5E5E5"> command-line arguments</font>

116
00:04:26,460 --> 00:04:31,710
and the reason why these<font color="#CCCCCC"> are so</font>

117
00:04:28,350 --> 00:04:33,870
important is firstly<font color="#E5E5E5"> is so much</font>

118
00:04:31,710 --> 00:04:36,419
detection logic is predicated<font color="#E5E5E5"> on</font><font color="#CCCCCC"> having</font>

119
00:04:33,870 --> 00:04:37,920
these two things<font color="#E5E5E5"> so</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> instance if</font>

120
00:04:36,420 --> 00:04:39,660
you're<font color="#CCCCCC"> going to be using sort register</font>

121
00:04:37,920 --> 00:04:41,400
<font color="#CCCCCC">over</font><font color="#E5E5E5"> 32 for instance to like remotely</font>

122
00:04:39,660 --> 00:04:42,960
<font color="#E5E5E5">load some SCT fault</font>

123
00:04:41,400 --> 00:04:45,299
it's very<font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to detect that</font><font color="#E5E5E5"> unless you</font>

124
00:04:42,960 --> 00:04:48,270
have these things<font color="#CCCCCC"> and similarly from</font><font color="#E5E5E5"> an</font>

125
00:04:45,300 --> 00:04:50,490
<font color="#CCCCCC">ir</font><font color="#E5E5E5"> or remediation perspective once you</font>

126
00:04:48,270 --> 00:04:52,049
get full processed rating you<font color="#E5E5E5"> can start</font>

127
00:04:50,490 --> 00:04:53,400
to infer and your conclusions about the

128
00:04:52,050 --> 00:04:55,320
chain<font color="#E5E5E5"> of events that actually happened</font>

129
00:04:53,400 --> 00:04:56,460
<font color="#E5E5E5">leading</font><font color="#CCCCCC"> up to a</font><font color="#E5E5E5"> compromise</font><font color="#CCCCCC"> so these are</font>

130
00:04:55,320 --> 00:04:59,580
<font color="#E5E5E5">really important and they're normally</font>

131
00:04:56,460 --> 00:05:01,799
very high fidelity secondly memory

132
00:04:59,580 --> 00:05:03,210
<font color="#CCCCCC">analysis so this</font><font color="#E5E5E5"> is applying live memory</font>

133
00:05:01,800 --> 00:05:05,940
forensics techniques<font color="#E5E5E5"> at scale to</font>

134
00:05:03,210 --> 00:05:08,609
<font color="#E5E5E5">proactively hunt for malware and then</font>

135
00:05:05,940 --> 00:05:10,410
secondly anomaly detection techniques so

136
00:05:08,610 --> 00:05:11,700
I<font color="#CCCCCC"> think there is</font><font color="#E5E5E5"> a tendency for red</font>

137
00:05:10,410 --> 00:05:13,470
teamers when<font color="#CCCCCC"> they</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> know they go in</font>

138
00:05:11,700 --> 00:05:14,880
they<font color="#CCCCCC"> own everything</font><font color="#E5E5E5"> they get the crown</font>

139
00:05:13,470 --> 00:05:15,990
jewels<font color="#E5E5E5"> and then their recommendation is</font>

140
00:05:14,880 --> 00:05:19,020
kind of<font color="#E5E5E5"> like oh</font><font color="#CCCCCC"> well you should</font><font color="#E5E5E5"> start</font>

141
00:05:15,990 --> 00:05:21,060
logging X to detect<font color="#CCCCCC"> Y and this is meant</font>

142
00:05:19,020 --> 00:05:22,859
<font color="#CCCCCC">be</font><font color="#E5E5E5"> the best intention but it's a bit</font>

143
00:05:21,060 --> 00:05:24,840
like<font color="#CCCCCC"> this</font><font color="#E5E5E5"> drawing it's kind of unhelpful</font>

144
00:05:22,860 --> 00:05:26,790
and<font color="#E5E5E5"> the key problem we're doing this</font>

145
00:05:24,840 --> 00:05:28,890
stuff is that<font color="#E5E5E5"> when you start logging at</font>

146
00:05:26,790 --> 00:05:30,450
scale you get so much<font color="#E5E5E5"> noise and crap as</font>

147
00:05:28,890 --> 00:05:33,930
any blue team practitioner will tell you

148
00:05:30,450 --> 00:05:35,760
and this<font color="#CCCCCC"> is the real challenge and this</font>

149
00:05:33,930 --> 00:05:38,370
<font color="#E5E5E5">is quite nicely summed up by</font><font color="#CCCCCC"> Alex</font>

150
00:05:35,760 --> 00:05:40,289
<font color="#CCCCCC">ionesco in this tweet very recently</font>

151
00:05:38,370 --> 00:05:42,870
he's obviously<font color="#CCCCCC"> vice president</font><font color="#E5E5E5"> of</font>

152
00:05:40,290 --> 00:05:44,130
<font color="#CCCCCC">CrowdStrike whatever and he would know</font>

153
00:05:42,870 --> 00:05:45,720
kind of the challenges of running

154
00:05:44,130 --> 00:05:48,570
<font color="#E5E5E5">software and tens of millions machines</font>

155
00:05:45,720 --> 00:05:50,010
<font color="#E5E5E5">as he says and so doing detection at</font>

156
00:05:48,570 --> 00:05:52,950
scale<font color="#E5E5E5"> this is the real game this is the</font>

157
00:05:50,010 --> 00:05:54,930
<font color="#E5E5E5">problem and</font><font color="#CCCCCC"> so what you need to</font>

158
00:05:52,950 --> 00:05:56,400
<font color="#E5E5E5">understand is all</font><font color="#CCCCCC"> our vendors face is</font>

159
00:05:54,930 --> 00:05:58,560
that<font color="#E5E5E5"> basically they have this huge</font>

160
00:05:56,400 --> 00:06:00,000
enormous vast amount of<font color="#E5E5E5"> data</font><font color="#CCCCCC"> and you</font>

161
00:05:58,560 --> 00:06:02,250
need some way<font color="#CCCCCC"> of creating this</font><font color="#E5E5E5"> of</font>

162
00:06:00,000 --> 00:06:03,870
pulling<font color="#E5E5E5"> out what's important and giving</font>

163
00:06:02,250 --> 00:06:07,560
it to<font color="#CCCCCC"> the people</font><font color="#E5E5E5"> that matters as soon as</font>

164
00:06:03,870 --> 00:06:09,810
possible and essentially<font color="#CCCCCC"> the the problem</font>

165
00:06:07,560 --> 00:06:12,420
is how can<font color="#CCCCCC"> you differentiate</font><font color="#E5E5E5"> between</font>

166
00:06:09,810 --> 00:06:14,340
what is legitimate<font color="#CCCCCC"> normal behavior</font><font color="#E5E5E5"> or</font>

167
00:06:12,420 --> 00:06:16,260
false positives<font color="#E5E5E5"> and then what is</font>

168
00:06:14,340 --> 00:06:18,299
genuinely anomalous malicious behavior

169
00:06:16,260 --> 00:06:20,640
<font color="#E5E5E5">and then use Bill to fire that to threat</font>

170
00:06:18,300 --> 00:06:23,970
hunters who can respond<font color="#E5E5E5"> and triage and</font>

171
00:06:20,640 --> 00:06:25,860
this is not trivial<font color="#CCCCCC"> as expected</font><font color="#E5E5E5"> and so</font>

172
00:06:23,970 --> 00:06:28,560
one of<font color="#E5E5E5"> the ways you can do this</font>

173
00:06:25,860 --> 00:06:31,820
very easy<font color="#E5E5E5"> so a simple technique is</font>

174
00:06:28,560 --> 00:06:35,850
something<font color="#E5E5E5"> like these frequency analysis</font>

175
00:06:31,820 --> 00:06:37,890
and so in this simple<font color="#CCCCCC"> example</font><font color="#E5E5E5"> we have a</font>

176
00:06:35,850 --> 00:06:40,140
number of<font color="#E5E5E5"> hosts in</font><font color="#CCCCCC"> the network and say</font>

177
00:06:37,890 --> 00:06:41,700
<font color="#E5E5E5">just over half</font><font color="#CCCCCC"> of them or just under</font>

178
00:06:40,140 --> 00:06:43,110
half maybe a<font color="#CCCCCC"> running chrome and so they</font>

179
00:06:41,700 --> 00:06:45,450
have the chrome up data service

180
00:06:43,110 --> 00:06:46,920
similarly the rest are running<font color="#CCCCCC"> Firefox</font>

181
00:06:45,450 --> 00:06:50,849
and<font color="#E5E5E5"> they have the equivalent Firefox one</font>

182
00:06:46,920 --> 00:06:53,310
but one of them has a<font color="#CCCCCC"> misspell SVC host</font>

183
00:06:50,850 --> 00:06:55,290
for map data this is<font color="#E5E5E5"> the much to be</font>

184
00:06:53,310 --> 00:06:59,070
anomalous<font color="#CCCCCC"> and it's probably</font><font color="#E5E5E5"> malware</font>

185
00:06:55,290 --> 00:07:00,720
right it's obvious and so you can apply

186
00:06:59,070 --> 00:07:02,190
this type<font color="#E5E5E5"> of analysis to</font><font color="#CCCCCC"> all sorts of</font>

187
00:07:00,720 --> 00:07:04,800
<font color="#E5E5E5">data sources right you can look for</font>

188
00:07:02,190 --> 00:07:06,120
<font color="#E5E5E5">scheduled tasks services</font><font color="#CCCCCC"> auto runs you</font>

189
00:07:04,800 --> 00:07:08,940
can look for memory<font color="#E5E5E5"> forensics so</font>

190
00:07:06,120 --> 00:07:10,860
reflective load thread injection and

191
00:07:08,940 --> 00:07:14,070
you'll quickly find bad stuff when you

192
00:07:10,860 --> 00:07:15,270
start doing this additionally you can

193
00:07:14,070 --> 00:07:16,800
<font color="#E5E5E5">use</font><font color="#CCCCCC"> stuff</font><font color="#E5E5E5"> like machine</font><font color="#CCCCCC"> learning so a</font>

194
00:07:15,270 --> 00:07:20,070
common one is machine learning<font color="#CCCCCC"> on come</font>

195
00:07:16,800 --> 00:07:22,650
on<font color="#E5E5E5"> on arguments typically PowerShell and</font>

196
00:07:20,070 --> 00:07:24,570
also clustering techniques so in this

197
00:07:22,650 --> 00:07:25,890
you<font color="#CCCCCC"> don't necessarily care what the data</font>

198
00:07:24,570 --> 00:07:27,390
<font color="#CCCCCC">is you just want to know what's</font>

199
00:07:25,890 --> 00:07:28,409
different<font color="#CCCCCC"> to everything else</font><font color="#E5E5E5"> and then</font>

200
00:07:27,390 --> 00:07:29,580
it's<font color="#E5E5E5"> not to your threat hunters to</font>

201
00:07:28,410 --> 00:07:31,820
actually dig through and<font color="#E5E5E5"> see if there's</font>

202
00:07:29,580 --> 00:07:34,200
anything<font color="#CCCCCC"> interesting</font>

203
00:07:31,820 --> 00:07:37,800
<font color="#E5E5E5">fifthly there's</font><font color="#CCCCCC"> like expert use case</font>

204
00:07:34,200 --> 00:07:39,210
creation so this would be say using an

205
00:07:37,800 --> 00:07:41,460
<font color="#E5E5E5">open source body of knowledge such as</font>

206
00:07:39,210 --> 00:07:44,370
<font color="#E5E5E5">The MITRE</font><font color="#CCCCCC"> as hack framework red</font><font color="#E5E5E5"> canary</font>

207
00:07:41,460 --> 00:07:45,510
have an awesome<font color="#E5E5E5"> red team unit test which</font>

208
00:07:44,370 --> 00:07:47,880
as<font color="#E5E5E5"> well if you're booting we should</font>

209
00:07:45,510 --> 00:07:49,950
definitely<font color="#CCCCCC"> check out and you can make</font>

210
00:07:47,880 --> 00:07:51,270
rules based on these TTP's and then you

211
00:07:49,950 --> 00:07:53,969
can continuously improve your own

212
00:07:51,270 --> 00:07:55,080
<font color="#CCCCCC">alerting capability and sigmaz</font><font color="#E5E5E5"> also a</font>

213
00:07:53,970 --> 00:07:57,570
<font color="#E5E5E5">really</font><font color="#CCCCCC"> good</font><font color="#E5E5E5"> example of this</font><font color="#CCCCCC"> that has</font>

214
00:07:55,080 --> 00:08:00,390
generic formats<font color="#E5E5E5"> for rules that you can</font>

215
00:07:57,570 --> 00:08:01,520
<font color="#E5E5E5">apply</font><font color="#CCCCCC"> to any sin and these can</font><font color="#E5E5E5"> be very</font>

216
00:08:00,390 --> 00:08:06,479
very<font color="#CCCCCC"> powerful</font>

217
00:08:01,520 --> 00:08:09,419
lastly<font color="#CCCCCC"> VT integration</font><font color="#E5E5E5"> so in this kind of</font>

218
00:08:06,480 --> 00:08:10,770
scenario<font color="#E5E5E5"> if any binary that runs on that</font>

219
00:08:09,420 --> 00:08:13,800
estate<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be checked against</font>

220
00:08:10,770 --> 00:08:15,719
<font color="#E5E5E5">virustotal</font><font color="#CCCCCC"> and this can</font><font color="#E5E5E5"> be very powerful</font>

221
00:08:13,800 --> 00:08:17,280
<font color="#E5E5E5">for</font><font color="#CCCCCC"> them baiting automating the remover</font>

222
00:08:15,720 --> 00:08:18,660
of gunky malware basically because<font color="#E5E5E5"> you</font>

223
00:08:17,280 --> 00:08:21,719
can just automatically see commodity

224
00:08:18,660 --> 00:08:23,250
malware<font color="#E5E5E5"> and get rid of it and so these</font>

225
00:08:21,720 --> 00:08:24,330
<font color="#CCCCCC">are the kinds of capabilities that I</font>

226
00:08:23,250 --> 00:08:26,280
mean when<font color="#E5E5E5"> I say the game has changed</font>

227
00:08:24,330 --> 00:08:27,330
<font color="#CCCCCC">this</font><font color="#E5E5E5"> is quite an intimidating interface</font>

228
00:08:26,280 --> 00:08:29,969
if you're up against it

229
00:08:27,330 --> 00:08:32,340
<font color="#E5E5E5">so but what the weeds attackers do and</font>

230
00:08:29,970 --> 00:08:34,320
so the aim of<font color="#E5E5E5"> this presentation is</font><font color="#CCCCCC"> to</font>

231
00:08:32,340 --> 00:08:36,300
kind of<font color="#E5E5E5"> show you how</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> start to</font>

232
00:08:34,320 --> 00:08:38,010
systematically subvert the pillars

233
00:08:36,299 --> 00:08:39,750
more than detection essentially<font color="#CCCCCC"> and</font>

234
00:08:38,010 --> 00:08:41,640
we're going<font color="#E5E5E5"> to do that with three three</font>

235
00:08:39,750 --> 00:08:44,550
kind of strategies<font color="#E5E5E5"> so the first is</font>

236
00:08:41,640 --> 00:08:46,800
misdirection so this is how can<font color="#CCCCCC"> we trick</font>

237
00:08:44,550 --> 00:08:48,420
<font color="#CCCCCC">eg our agents into recording false and</font>

238
00:08:46,800 --> 00:08:50,099
misleading information<font color="#E5E5E5"> to basically</font>

239
00:08:48,420 --> 00:08:52,800
render analysis<font color="#E5E5E5"> useless</font>

240
00:08:50,100 --> 00:08:55,290
the second is minimization so how can<font color="#E5E5E5"> we</font>

241
00:08:52,800 --> 00:08:57,660
avoid spawning processes altogether<font color="#CCCCCC"> and</font>

242
00:08:55,290 --> 00:08:59,910
the third is memory of<font color="#CCCCCC"> Asian so how do</font>

243
00:08:57,660 --> 00:09:01,620
we<font color="#E5E5E5"> hide the tell-tale signs</font><font color="#CCCCCC"> of in memory</font>

244
00:08:59,910 --> 00:09:04,380
<font color="#CCCCCC">compromised to basically</font><font color="#E5E5E5"> bypass</font><font color="#CCCCCC"> the</font>

245
00:09:01,620 --> 00:09:05,700
memory scanners<font color="#E5E5E5"> and so we start with</font>

246
00:09:04,380 --> 00:09:07,260
misdirection

247
00:09:05,700 --> 00:09:09,089
my<font color="#CCCCCC"> friend saw this and said it</font><font color="#E5E5E5"> reminded</font>

248
00:09:07,260 --> 00:09:17,430
him of<font color="#CCCCCC"> Jobe</font><font color="#E5E5E5"> Arrested Development so I</font>

249
00:09:09,089 --> 00:09:19,800
have the<font color="#E5E5E5"> vein so I already</font><font color="#CCCCCC"> mentioned so</font>

250
00:09:17,430 --> 00:09:22,140
<font color="#CCCCCC">EDRs provide really quite incredible</font>

251
00:09:19,800 --> 00:09:23,729
visibility<font color="#CCCCCC"> to process creation and so</font>

252
00:09:22,140 --> 00:09:26,790
this is this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> the process</font><font color="#E5E5E5"> creation</font>

253
00:09:23,730 --> 00:09:31,380
event<font color="#E5E5E5"> that was recorded</font><font color="#CCCCCC"> by sis one which</font>

254
00:09:26,790 --> 00:09:33,390
is<font color="#E5E5E5"> a free Microsoft solution any again</font>

255
00:09:31,380 --> 00:09:35,850
<font color="#E5E5E5">any blue team</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> know almost instantly</font>

256
00:09:33,390 --> 00:09:37,709
<font color="#E5E5E5">or recognize this suspicious argument</font>

257
00:09:35,850 --> 00:09:41,399
and there are two interesting<font color="#CCCCCC"> things</font>

258
00:09:37,709 --> 00:09:43,020
<font color="#CCCCCC">it's so firstly</font><font color="#E5E5E5"> the recording of this</font>

259
00:09:41,399 --> 00:09:44,820
provides so much<font color="#CCCCCC"> information in terms</font>

260
00:09:43,020 --> 00:09:46,620
actually starting<font color="#E5E5E5"> to remediate this so</font>

261
00:09:44,820 --> 00:09:48,510
we<font color="#E5E5E5"> can already start pulling the second</font>

262
00:09:46,620 --> 00:09:50,070
<font color="#E5E5E5">stage look what it does research</font><font color="#CCCCCC"> the</font>

263
00:09:48,510 --> 00:09:52,140
domain see if this<font color="#E5E5E5"> is commodity or</font>

264
00:09:50,070 --> 00:09:54,300
targeted or whatever<font color="#E5E5E5"> secondly we can</font>

265
00:09:52,140 --> 00:09:55,980
<font color="#E5E5E5">start to see how we can apply detection</font>

266
00:09:54,300 --> 00:09:58,500
logic on this right because<font color="#E5E5E5"> how</font><font color="#CCCCCC"> many of</font>

267
00:09:55,980 --> 00:09:59,940
you actively search for<font color="#CCCCCC"> IEX</font><font color="#E5E5E5"> web client</font>

268
00:09:58,500 --> 00:10:03,029
download string when<font color="#E5E5E5"> you look for</font><font color="#CCCCCC"> an</font>

269
00:09:59,940 --> 00:10:04,290
<font color="#CCCCCC">ominous PowerShell and additionally</font><font color="#E5E5E5"> sis</font>

270
00:10:03,029 --> 00:10:06,390
<font color="#E5E5E5">once pulled out a bunch of other stuff</font>

271
00:10:04,290 --> 00:10:08,579
such<font color="#CCCCCC"> as the image the user</font><font color="#E5E5E5"> the hash so</font>

272
00:10:06,390 --> 00:10:10,170
we can search VT for that and<font color="#CCCCCC"> the parent</font>

273
00:10:08,579 --> 00:10:11,729
process<font color="#E5E5E5"> but the key thing</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is that</font>

274
00:10:10,170 --> 00:10:14,189
<font color="#E5E5E5">come on an argument that's blatantly a</font>

275
00:10:11,730 --> 00:10:16,980
PowerShell cradle<font color="#CCCCCC"> it looks dodgy</font><font color="#E5E5E5"> so as</font>

276
00:10:14,190 --> 00:10:19,380
an attacker then how do<font color="#CCCCCC"> i manipulate the</font>

277
00:10:16,980 --> 00:10:21,329
command line<font color="#E5E5E5"> so</font><font color="#CCCCCC"> I hide that</font><font color="#E5E5E5"> or at least</font>

278
00:10:19,380 --> 00:10:24,240
<font color="#CCCCCC">looks benign so we've bypassed this type</font>

279
00:10:21,329 --> 00:10:27,180
of<font color="#E5E5E5"> thing and so the answer</font><font color="#CCCCCC"> to this</font>

280
00:10:24,240 --> 00:10:28,620
starts<font color="#E5E5E5"> to this tweet</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> subti posted</font>

281
00:10:27,180 --> 00:10:31,829
and deleted annoyingly if I still<font color="#E5E5E5"> found</font>

282
00:10:28,620 --> 00:10:34,709
a copy and he<font color="#E5E5E5"> essentially uses some</font>

283
00:10:31,829 --> 00:10:36,000
processing code by fuzzy<font color="#E5E5E5"> SiC and then</font>

284
00:10:34,709 --> 00:10:38,219
realized you can spoof<font color="#E5E5E5"> c'mon on</font>

285
00:10:36,000 --> 00:10:39,600
arguments and this actually could deeply

286
00:10:38,220 --> 00:10:40,740
shocked me<font color="#E5E5E5"> because I</font><font color="#CCCCCC"> throw it hunted</font><font color="#E5E5E5"> for</font>

287
00:10:39,600 --> 00:10:42,899
<font color="#E5E5E5">a while and I genuinely didn't know you</font>

288
00:10:40,740 --> 00:10:43,820
could do this<font color="#CCCCCC"> and</font><font color="#E5E5E5"> again as I said so</font>

289
00:10:42,899 --> 00:10:46,580
much detection logic

290
00:10:43,820 --> 00:10:48,470
<font color="#E5E5E5">predicated on it I was like well and the</font>

291
00:10:46,580 --> 00:10:50,900
reason<font color="#CCCCCC"> why it's as possible is James for</font>

292
00:10:48,470 --> 00:10:52,460
<font color="#CCCCCC">shale pipes up with the knowledge</font><font color="#E5E5E5"> and</font>

293
00:10:50,900 --> 00:10:53,810
basically it's<font color="#CCCCCC"> because the command-line</font>

294
00:10:52,460 --> 00:10:55,550
lives inside process<font color="#E5E5E5"> MIT and the</font>

295
00:10:53,810 --> 00:10:57,920
<font color="#CCCCCC">userland process memory</font><font color="#E5E5E5"> in which case</font>

296
00:10:55,550 --> 00:10:59,180
it's fair game<font color="#CCCCCC"> for</font><font color="#E5E5E5"> anyone</font><font color="#CCCCCC"> and so</font>

297
00:10:57,920 --> 00:11:01,430
essentially<font color="#E5E5E5"> what</font><font color="#CCCCCC"> happens</font><font color="#E5E5E5"> is when you</font>

298
00:10:59,180 --> 00:11:03,709
<font color="#CCCCCC">create a</font><font color="#E5E5E5"> process you pass a string of</font>

299
00:11:01,430 --> 00:11:05,209
arguments and the<font color="#E5E5E5"> Windows kernel checks</font>

300
00:11:03,710 --> 00:11:07,280
that is consistent it doesn't actually

301
00:11:05,210 --> 00:11:09,650
care about them<font color="#CCCCCC"> so it loads them and</font>

302
00:11:07,280 --> 00:11:11,000
then kind<font color="#CCCCCC"> of ignores them</font><font color="#E5E5E5"> and so it sets</font>

303
00:11:09,650 --> 00:11:13,850
up all the boot and<font color="#E5E5E5"> the</font><font color="#CCCCCC"> booking</font>

304
00:11:11,000 --> 00:11:14,870
<font color="#E5E5E5">bookkeeping kernel structures creates</font>

305
00:11:13,850 --> 00:11:16,970
the address base then<font color="#CCCCCC"> it basically</font>

306
00:11:14,870 --> 00:11:18,260
injects them<font color="#E5E5E5"> in and then again they're</font>

307
00:11:16,970 --> 00:11:20,690
fair game<font color="#E5E5E5"> they're in</font><font color="#CCCCCC"> new zealand's they</font>

308
00:11:18,260 --> 00:11:23,000
can be<font color="#E5E5E5"> manipulated and so this got me</font>

309
00:11:20,690 --> 00:11:24,620
thinking right<font color="#CCCCCC"> I said a</font><font color="#E5E5E5"> lot of the</font>

310
00:11:23,000 --> 00:11:25,970
previous work on this is in process

311
00:11:24,620 --> 00:11:28,040
hollowing and this is a common technique

312
00:11:25,970 --> 00:11:30,260
<font color="#E5E5E5">but no one seems to have done</font><font color="#CCCCCC"> the</font>

313
00:11:28,040 --> 00:11:32,449
obvious thing which is if you can spawn

314
00:11:30,260 --> 00:11:34,189
<font color="#E5E5E5">something that can do something bad it</font>

315
00:11:32,450 --> 00:11:36,920
looks<font color="#CCCCCC"> legitimate and then you change it</font>

316
00:11:34,190 --> 00:11:38,090
<font color="#E5E5E5">to do something</font><font color="#CCCCCC"> like malicious</font><font color="#E5E5E5"> that</font>

317
00:11:36,920 --> 00:11:39,680
seems to me<font color="#E5E5E5"> the</font><font color="#CCCCCC"> obvious thing but I</font>

318
00:11:38,090 --> 00:11:43,820
couldn't find any malware<font color="#E5E5E5"> that</font><font color="#CCCCCC"> basically</font>

319
00:11:39,680 --> 00:11:45,650
does this<font color="#E5E5E5"> so under the hood essentially</font>

320
00:11:43,820 --> 00:11:47,330
every every process<font color="#E5E5E5"> as a person of iron</font>

321
00:11:45,650 --> 00:11:48,680
<font color="#E5E5E5">block</font><font color="#CCCCCC"> or a peb this</font><font color="#E5E5E5"> is a number of</font>

322
00:11:47,330 --> 00:11:50,510
fields<font color="#CCCCCC"> and it's got this process</font>

323
00:11:48,680 --> 00:11:52,189
parameter pointer which points to

324
00:11:50,510 --> 00:11:53,540
another<font color="#E5E5E5"> data structure and then within</font>

325
00:11:52,190 --> 00:11:55,790
<font color="#E5E5E5">this we have this</font><font color="#CCCCCC"> command</font><font color="#E5E5E5"> line pointer</font>

326
00:11:53,540 --> 00:11:58,730
and there's your command<font color="#CCCCCC"> line so my idea</font>

327
00:11:55,790 --> 00:12:00,620
was basically if we<font color="#E5E5E5"> create a legitimate</font>

328
00:11:58,730 --> 00:12:03,500
<font color="#CCCCCC">process and with legitimate arguments in</font>

329
00:12:00,620 --> 00:12:05,150
a suspended state<font color="#E5E5E5"> changing the arguments</font>

330
00:12:03,500 --> 00:12:07,880
<font color="#CCCCCC">of something malicious</font><font color="#E5E5E5"> and then resume</font>

331
00:12:05,150 --> 00:12:10,040
it what happens and it turns<font color="#E5E5E5"> out</font><font color="#CCCCCC"> Windows</font>

332
00:12:07,880 --> 00:12:12,290
<font color="#E5E5E5">actually records the legit with the</font>

333
00:12:10,040 --> 00:12:13,939
<font color="#E5E5E5">clean arguments but it executes</font><font color="#CCCCCC"> the</font>

334
00:12:12,290 --> 00:12:14,959
malicious<font color="#E5E5E5"> ones and you can actually go</font>

335
00:12:13,940 --> 00:12:16,760
further<font color="#CCCCCC"> than this</font><font color="#E5E5E5"> and you can actually</font>

336
00:12:14,960 --> 00:12:19,640
change<font color="#CCCCCC"> the arguments</font><font color="#E5E5E5"> back afterwards</font>

337
00:12:16,760 --> 00:12:22,670
so I'll do<font color="#CCCCCC"> a</font><font color="#E5E5E5"> quick</font><font color="#CCCCCC"> demo now and</font><font color="#E5E5E5"> this is</font>

338
00:12:19,640 --> 00:12:25,750
using<font color="#CCCCCC"> squiggly to</font><font color="#E5E5E5"> kind of colloquial</font>

339
00:12:22,670 --> 00:12:29,060
known which is<font color="#E5E5E5"> basically</font><font color="#CCCCCC"> sub tease</font>

340
00:12:25,750 --> 00:12:31,460
discovery that women can<font color="#CCCCCC"> be used to</font>

341
00:12:29,060 --> 00:12:33,829
<font color="#CCCCCC">basically execute</font><font color="#E5E5E5"> a extensible</font>

342
00:12:31,460 --> 00:12:35,690
stylesheet from a remote URL through

343
00:12:33,830 --> 00:12:39,140
<font color="#CCCCCC">Donette to J's</font><font color="#E5E5E5"> magic</font><font color="#CCCCCC"> winget shell which</font>

344
00:12:35,690 --> 00:12:41,180
<font color="#CCCCCC">is great so this is</font><font color="#E5E5E5"> squiggly</font><font color="#CCCCCC"> to left</font>

345
00:12:39,140 --> 00:12:48,370
squiggly<font color="#E5E5E5"> to</font><font color="#CCCCCC"> eye constant the mouse so</font>

346
00:12:41,180 --> 00:12:48,370
this might<font color="#CCCCCC"> be interesting right</font><font color="#E5E5E5"> cool so</font>

347
00:12:50,820 --> 00:12:55,889
this is obviously<font color="#E5E5E5"> showing a Kobach's</font>

348
00:12:53,339 --> 00:12:57,360
track team server<font color="#CCCCCC"> the screens not great</font>

349
00:12:55,889 --> 00:13:01,620
but<font color="#E5E5E5"> you can see that I've hosted this</font>

350
00:12:57,360 --> 00:13:03,560
evil dot XLS file we're now going<font color="#E5E5E5"> to</font>

351
00:13:01,620 --> 00:13:05,790
switch<font color="#CCCCCC"> to the victim machine</font><font color="#E5E5E5"> hopefully</font>

352
00:13:03,560 --> 00:13:08,099
<font color="#E5E5E5">and we're going to run some some proof</font>

353
00:13:05,790 --> 00:13:09,779
of<font color="#E5E5E5"> concept code and so basically if</font>

354
00:13:08,100 --> 00:13:11,940
against<font color="#E5E5E5"> the great resolution but</font>

355
00:13:09,779 --> 00:13:15,449
basically so I've spawned women with the

356
00:13:11,940 --> 00:13:17,459
arguments<font color="#E5E5E5"> logical disk where drive</font>

357
00:13:15,449 --> 00:13:19,079
equals<font color="#E5E5E5"> five get description name device</font>

358
00:13:17,459 --> 00:13:21,209
ID<font color="#E5E5E5"> this does like this just enumerates</font>

359
00:13:19,079 --> 00:13:24,779
the<font color="#CCCCCC"> disks on the</font><font color="#E5E5E5"> machine it's not it's</font>

360
00:13:21,209 --> 00:13:27,000
not an malicious<font color="#CCCCCC"> I then</font><font color="#E5E5E5"> this isn't a</font>

361
00:13:24,779 --> 00:13:29,100
suspended<font color="#E5E5E5"> state so then I locate the</font>

362
00:13:27,000 --> 00:13:31,800
wrong remote pair find<font color="#E5E5E5"> those arguments</font>

363
00:13:29,100 --> 00:13:33,720
and actually overwrite it with<font color="#E5E5E5"> women</font>

364
00:13:31,800 --> 00:13:36,120
<font color="#E5E5E5">protists get brief format malicious</font>

365
00:13:33,720 --> 00:13:38,760
payload<font color="#CCCCCC"> I didn't resume this process and</font>

366
00:13:36,120 --> 00:13:40,620
then change them back<font color="#E5E5E5"> and if we now</font><font color="#CCCCCC"> go</font>

367
00:13:38,760 --> 00:13:48,240
back<font color="#E5E5E5"> to our attacking machine we have</font><font color="#CCCCCC"> a</font>

368
00:13:40,620 --> 00:13:53,060
become right<font color="#E5E5E5"> which is excellent but now</font>

369
00:13:48,240 --> 00:13:56,910
if we<font color="#CCCCCC"> check the event log we can see</font><font color="#E5E5E5"> the</font>

370
00:13:53,060 --> 00:14:00,479
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> has recorded the the fake</font>

371
00:13:56,910 --> 00:14:03,329
arguments right and etw<font color="#CCCCCC"> sis one that</font>

372
00:14:00,480 --> 00:14:05,130
<font color="#CCCCCC">they</font><font color="#E5E5E5"> will do this and then we can also</font>

373
00:14:03,329 --> 00:14:08,339
<font color="#E5E5E5">check on a like real time thing so</font>

374
00:14:05,130 --> 00:14:13,350
<font color="#CCCCCC">process the</font><font color="#E5E5E5"> Explorer or process hacker</font>

375
00:14:08,339 --> 00:14:14,370
<font color="#CCCCCC">and if you now look it also records this</font>

376
00:14:13,350 --> 00:14:15,779
<font color="#E5E5E5">as well</font><font color="#CCCCCC"> so even if you do live</font>

377
00:14:14,370 --> 00:14:19,139
<font color="#CCCCCC">investigation you're like oh well</font>

378
00:14:15,779 --> 00:14:20,670
<font color="#E5E5E5">this is alright</font><font color="#CCCCCC"> so why bother</font><font color="#E5E5E5"> with all</font>

379
00:14:19,139 --> 00:14:24,930
<font color="#E5E5E5">this noisy obfuscated stuff we just</font>

380
00:14:20,670 --> 00:14:27,110
<font color="#CCCCCC">changed the arguments I now so get rid</font>

381
00:14:24,930 --> 00:14:27,109
<font color="#E5E5E5">of this</font>

382
00:14:36,430 --> 00:14:41,160
<font color="#E5E5E5">okay</font>

383
00:14:38,940 --> 00:14:42,780
so how does this<font color="#E5E5E5"> actually stand up to</font>

384
00:14:41,160 --> 00:14:44,189
<font color="#CCCCCC">write real-life</font><font color="#E5E5E5"> detection right we're</font>

385
00:14:42,780 --> 00:14:46,680
against the big boys<font color="#CCCCCC"> now we need to</font>

386
00:14:44,190 --> 00:14:48,660
actually prove<font color="#CCCCCC"> if</font><font color="#E5E5E5"> this is worthwhile so</font>

387
00:14:46,680 --> 00:14:50,280
I found this this tweet<font color="#CCCCCC"> from Joe there's</font>

388
00:14:48,660 --> 00:14:51,870
a moan<font color="#CCCCCC"> from endgame</font><font color="#E5E5E5"> and he gives an</font>

389
00:14:50,280 --> 00:14:53,790
example of their their detection logic

390
00:14:51,870 --> 00:14:55,380
for squiggly<font color="#CCCCCC"> too and so you can see it</font>

391
00:14:53,790 --> 00:14:57,449
look it's looking for processes called

392
00:14:55,380 --> 00:14:59,939
we make that spawned with<font color="#E5E5E5"> a command line</font>

393
00:14:57,450 --> 00:15:01,620
format in it<font color="#E5E5E5"> and it also looks for image</font>

394
00:14:59,940 --> 00:15:03,240
loads as well<font color="#E5E5E5"> and jscript and</font><font color="#CCCCCC"> vbscript</font>

395
00:15:01,620 --> 00:15:06,720
obviously going to execute<font color="#E5E5E5"> the payload</font>

396
00:15:03,240 --> 00:15:07,890
in it on a<font color="#CCCCCC"> sidenote</font><font color="#E5E5E5"> this actually shows</font>

397
00:15:06,720 --> 00:15:09,450
you how<font color="#CCCCCC"> powerful it can be when you</font>

398
00:15:07,890 --> 00:15:12,270
<font color="#E5E5E5">start combining different data sources</font>

399
00:15:09,450 --> 00:15:13,530
into<font color="#E5E5E5"> rule sets but essentially as this</font>

400
00:15:12,270 --> 00:15:15,000
rule as it<font color="#E5E5E5"> is now we would</font><font color="#CCCCCC"> obviously</font>

401
00:15:13,530 --> 00:15:17,579
bypass that<font color="#E5E5E5"> because there's no command</font>

402
00:15:15,000 --> 00:15:19,080
<font color="#E5E5E5">line but Joe does say he says the format</font>

403
00:15:17,580 --> 00:15:21,630
part of<font color="#E5E5E5"> this can be evaded</font><font color="#CCCCCC"> so it's best</font>

404
00:15:19,080 --> 00:15:24,300
to drop it<font color="#CCCCCC"> but</font><font color="#E5E5E5"> it's noise on its own so</font>

405
00:15:21,630 --> 00:15:25,920
in reality<font color="#CCCCCC"> we may be flagged by this but</font>

406
00:15:24,300 --> 00:15:27,329
it's<font color="#E5E5E5"> up to</font><font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> an it's up to a</font>

407
00:15:25,920 --> 00:15:28,800
threat hunter to actually look in and

408
00:15:27,330 --> 00:15:30,840
see whether<font color="#E5E5E5"> there's a suspicious or not</font>

409
00:15:28,800 --> 00:15:32,250
and so it highlights<font color="#E5E5E5"> the need for good</font>

410
00:15:30,840 --> 00:15:35,100
<font color="#CCCCCC">people who</font><font color="#E5E5E5"> can be like well this</font><font color="#CCCCCC"> looks</font>

411
00:15:32,250 --> 00:15:36,600
dodgy<font color="#E5E5E5"> what we could actually do though</font>

412
00:15:35,100 --> 00:15:38,700
is we can<font color="#E5E5E5"> replace our arguments of the</font>

413
00:15:36,600 --> 00:15:40,830
women<font color="#CCCCCC"> OS get last boot up time because</font>

414
00:15:38,700 --> 00:15:41,910
we know that<font color="#E5E5E5"> loads it now and this</font>

415
00:15:40,830 --> 00:15:43,380
<font color="#E5E5E5">actually looks more like</font><font color="#CCCCCC"> a false</font>

416
00:15:41,910 --> 00:15:46,439
<font color="#CCCCCC">positive is more noisy and probably more</font>

417
00:15:43,380 --> 00:15:48,090
<font color="#E5E5E5">likely</font><font color="#CCCCCC"> to get ignored so this is great</font>

418
00:15:46,440 --> 00:15:49,650
we can<font color="#E5E5E5"> really play client arguments but</font>

419
00:15:48,090 --> 00:15:51,300
there's still situations where the

420
00:15:49,650 --> 00:15:54,120
relationships between<font color="#E5E5E5"> processes give us</font>

421
00:15:51,300 --> 00:15:55,500
away<font color="#CCCCCC"> and so this an example from MW ours</font>

422
00:15:54,120 --> 00:15:56,520
managed to section<font color="#CCCCCC"> response of its</font>

423
00:15:55,500 --> 00:15:59,730
counter sips<font color="#E5E5E5"> this is a real-life</font>

424
00:15:56,520 --> 00:16:01,890
<font color="#CCCCCC">compromise</font><font color="#E5E5E5"> and so the blue mark softbox</font>

425
00:15:59,730 --> 00:16:03,060
is basically<font color="#E5E5E5"> Explorer and this is the</font>

426
00:16:01,890 --> 00:16:05,160
user going about their daily work

427
00:16:03,060 --> 00:16:07,530
<font color="#CCCCCC">obviously they get a MacPro outlook</font><font color="#E5E5E5"> to</font>

428
00:16:05,160 --> 00:16:09,930
<font color="#E5E5E5">spawns</font><font color="#CCCCCC"> words</font><font color="#E5E5E5"> they enable it</font><font color="#CCCCCC"> and then</font>

429
00:16:07,530 --> 00:16:12,449
word spawns command and<font color="#CCCCCC"> PowerShell this</font>

430
00:16:09,930 --> 00:16:14,729
is fairly common<font color="#CCCCCC"> Windward should never</font>

431
00:16:12,450 --> 00:16:16,470
spawn<font color="#CCCCCC"> commander PowerShell in which case</font>

432
00:16:14,730 --> 00:16:18,090
it's incredibly rare<font color="#CCCCCC"> and</font><font color="#E5E5E5"> very anomalous</font>

433
00:16:16,470 --> 00:16:19,770
so this is easy detection logic right

434
00:16:18,090 --> 00:16:22,500
<font color="#CCCCCC">look for</font><font color="#E5E5E5"> office spawning weird stuff</font>

435
00:16:19,770 --> 00:16:23,640
it's a<font color="#E5E5E5"> no-brainer</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> when we're trying</font>

436
00:16:22,500 --> 00:16:24,810
<font color="#E5E5E5">to get a foothold in a network this</font>

437
00:16:23,640 --> 00:16:28,080
obviously isn't ideal because<font color="#E5E5E5"> we're</font>

438
00:16:24,810 --> 00:16:30,780
<font color="#E5E5E5">going</font><font color="#CCCCCC"> to get</font><font color="#E5E5E5"> caught so what can</font><font color="#CCCCCC"> we do so</font>

439
00:16:28,080 --> 00:16:35,970
this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> an example macro</font><font color="#E5E5E5"> that just calls</font>

440
00:16:30,780 --> 00:16:37,170
create process and you know we spawn

441
00:16:35,970 --> 00:16:38,340
<font color="#E5E5E5">PowerShell but we still have that</font>

442
00:16:37,170 --> 00:16:42,240
parent-child<font color="#CCCCCC"> relationship</font><font color="#E5E5E5"> this isn't</font>

443
00:16:38,340 --> 00:16:44,790
<font color="#E5E5E5">very helpful but luckily</font><font color="#CCCCCC"> Windows has a</font>

444
00:16:42,240 --> 00:16:47,100
feature<font color="#E5E5E5"> where you</font><font color="#CCCCCC"> can pass an extended</font>

445
00:16:44,790 --> 00:16:48,689
<font color="#CCCCCC">startup info structure</font><font color="#E5E5E5"> when</font><font color="#CCCCCC"> you can best</font>

446
00:16:47,100 --> 00:16:50,640
it you can<font color="#E5E5E5"> basically specify what you</font>

447
00:16:48,690 --> 00:16:52,330
<font color="#CCCCCC">want the parent of your process to be so</font>

448
00:16:50,640 --> 00:16:54,189
we<font color="#E5E5E5"> can say oh can you make it Explorer</font>

449
00:16:52,330 --> 00:16:56,470
and so in this<font color="#E5E5E5"> case our macro</font><font color="#CCCCCC"> has porn</font>

450
00:16:54,190 --> 00:16:58,210
<font color="#E5E5E5">PowerShell from Explorer and then this</font>

451
00:16:56,470 --> 00:16:59,830
immediately<font color="#E5E5E5"> breaks that detection logic</font>

452
00:16:58,210 --> 00:17:01,420
right<font color="#E5E5E5"> there is if you're doing</font>

453
00:16:59,830 --> 00:17:03,460
<font color="#E5E5E5">large-scale detection on this you're not</font>

454
00:17:01,420 --> 00:17:06,609
going to see this this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> bit</font>

455
00:17:03,460 --> 00:17:07,690
dodgy<font color="#CCCCCC"> so we can</font><font color="#E5E5E5"> improve it</font><font color="#CCCCCC"> and let's</font>

456
00:17:06,609 --> 00:17:09,849
<font color="#E5E5E5">choose something that happens</font><font color="#CCCCCC"> quite</font>

457
00:17:07,690 --> 00:17:12,100
regularly so this is<font color="#E5E5E5"> Explorer spawning</font>

458
00:17:09,849 --> 00:17:13,419
the<font color="#E5E5E5"> Intel graphics</font><font color="#CCCCCC"> trail icon right this</font>

459
00:17:12,099 --> 00:17:15,490
happens all the<font color="#CCCCCC"> time this</font><font color="#E5E5E5"> is not a</font>

460
00:17:13,420 --> 00:17:16,900
particularly malicious thing but we can

461
00:17:15,490 --> 00:17:19,359
spawn<font color="#CCCCCC"> that and then we basically just</font>

462
00:17:16,900 --> 00:17:22,750
inject<font color="#CCCCCC"> into it and</font><font color="#E5E5E5"> inject</font><font color="#CCCCCC"> reflective</font><font color="#E5E5E5"> DLL</font>

463
00:17:19,359 --> 00:17:24,399
<font color="#E5E5E5">and then we're away and so at least from</font>

464
00:17:22,750 --> 00:17:27,069
a process ignoring any<font color="#CCCCCC"> in memory stuff</font>

465
00:17:24,400 --> 00:17:28,120
<font color="#E5E5E5">this is hard and then</font><font color="#CCCCCC"> you know noe the</font>

466
00:17:27,069 --> 00:17:29,409
<font color="#E5E5E5">oven</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> gonna look</font><font color="#CCCCCC"> a little</font><font color="#E5E5E5"> that</font>

467
00:17:28,119 --> 00:17:31,330
<font color="#E5E5E5">relationship</font><font color="#CCCCCC"> that's</font><font color="#E5E5E5"> gonna be impossible</font>

468
00:17:29,410 --> 00:17:35,710
it's gonna be noisy<font color="#CCCCCC"> so again you make it</font>

469
00:17:31,330 --> 00:17:37,480
harder to<font color="#E5E5E5"> spot yourself this is not a</font>

470
00:17:35,710 --> 00:17:40,000
new technique so did your Stevens

471
00:17:37,480 --> 00:17:44,500
<font color="#CCCCCC">blogged</font><font color="#E5E5E5"> her out about this nearly a</font>

472
00:17:40,000 --> 00:17:45,940
<font color="#E5E5E5">decade</font><font color="#CCCCCC"> ago now</font><font color="#E5E5E5"> but it highlights the</font>

473
00:17:44,500 --> 00:17:47,800
<font color="#E5E5E5">fact that because defenses have got</font>

474
00:17:45,940 --> 00:17:49,960
better<font color="#E5E5E5"> that we need to start using some</font>

475
00:17:47,800 --> 00:17:55,389
of these older techniques in order<font color="#E5E5E5"> to</font>

476
00:17:49,960 --> 00:17:57,850
survive basically<font color="#CCCCCC"> incidentally so MWR we</font>

477
00:17:55,390 --> 00:17:58,930
use macros<font color="#E5E5E5"> which</font><font color="#CCCCCC"> spoof the</font><font color="#E5E5E5"> parent</font><font color="#CCCCCC"> period</font>

478
00:17:57,850 --> 00:18:01,300
and we've been<font color="#CCCCCC"> using</font><font color="#E5E5E5"> for about two years</font>

479
00:17:58,930 --> 00:18:04,690
<font color="#E5E5E5">and they work</font><font color="#CCCCCC"> very well virtually every</font>

480
00:18:01,300 --> 00:18:06,070
time and then it's yes<font color="#CCCCCC"> it counts that</font>

481
00:18:04,690 --> 00:18:08,380
we've been<font color="#E5E5E5"> starting</font><font color="#CCCCCC"> to see this being</font>

482
00:18:06,070 --> 00:18:09,909
used<font color="#E5E5E5"> in the</font><font color="#CCCCCC"> wild as well</font><font color="#E5E5E5"> so if you're on</font>

483
00:18:08,380 --> 00:18:11,500
<font color="#E5E5E5">a bootie might make sure that you can</font>

484
00:18:09,910 --> 00:18:15,970
maybe see<font color="#CCCCCC"> this or it needs</font><font color="#E5E5E5"> to be aware</font>

485
00:18:11,500 --> 00:18:17,740
of<font color="#E5E5E5"> this kind</font><font color="#CCCCCC"> of gap so we've covered</font>

486
00:18:15,970 --> 00:18:19,090
<font color="#E5E5E5">misdirection so we can manipulate one</font><font color="#CCCCCC"> an</font>

487
00:18:17,740 --> 00:18:21,100
<font color="#E5E5E5">argument and we can spoof parent pits</font>

488
00:18:19,090 --> 00:18:22,480
<font color="#CCCCCC">but</font><font color="#E5E5E5"> there are still times where even</font>

489
00:18:21,100 --> 00:18:23,949
when<font color="#E5E5E5"> we can obfuscate what we're doing</font>

490
00:18:22,480 --> 00:18:28,060
the mere act of actually<font color="#E5E5E5"> launching a</font>

491
00:18:23,950 --> 00:18:29,500
process<font color="#E5E5E5"> can still give us away</font><font color="#CCCCCC"> and so</font>

492
00:18:28,060 --> 00:18:31,570
this is a<font color="#E5E5E5"> list of commands that</font><font color="#CCCCCC"> was</font>

493
00:18:29,500 --> 00:18:33,160
collated by JP sir and they're basically

494
00:18:31,570 --> 00:18:34,330
<font color="#E5E5E5">that they</font><font color="#CCCCCC"> they look</font><font color="#E5E5E5"> through a number of</font>

495
00:18:33,160 --> 00:18:36,370
<font color="#E5E5E5">breaches and they were like these are</font>

496
00:18:34,330 --> 00:18:38,260
<font color="#E5E5E5">the most</font><font color="#CCCCCC"> rut</font><font color="#E5E5E5"> most likely run command by</font>

497
00:18:36,370 --> 00:18:40,870
attackers basically typically they're

498
00:18:38,260 --> 00:18:43,000
all<font color="#E5E5E5"> built in</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> utilities right and</font>

499
00:18:40,870 --> 00:18:44,199
so again when we're doing<font color="#CCCCCC"> red to mean we</font>

500
00:18:43,000 --> 00:18:46,930
were typically<font color="#E5E5E5"> use these as I'm sure</font>

501
00:18:44,200 --> 00:18:49,240
some<font color="#CCCCCC"> of you guys win as well</font><font color="#E5E5E5"> so reg for</font>

502
00:18:46,930 --> 00:18:50,440
persistence<font color="#CCCCCC"> Who am</font><font color="#E5E5E5"> I is obviously</font>

503
00:18:49,240 --> 00:18:53,320
awesome<font color="#E5E5E5"> to look at your boot and your</font>

504
00:18:50,440 --> 00:18:56,200
privileges and nslookup is very useful

505
00:18:53,320 --> 00:18:58,240
for<font color="#CCCCCC"> finding DCs and</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> like that</font><font color="#E5E5E5"> but</font>

506
00:18:56,200 --> 00:18:59,950
<font color="#E5E5E5">if</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> glutamine you you can defend</font>

507
00:18:58,240 --> 00:19:01,840
you can build a threat hunting strategy

508
00:18:59,950 --> 00:19:02,710
<font color="#CCCCCC">around this</font><font color="#E5E5E5"> right and you might not want</font>

509
00:19:01,840 --> 00:19:04,090
<font color="#E5E5E5">to alert every</font>

510
00:19:02,710 --> 00:19:07,120
every single<font color="#E5E5E5"> time one of these is run</font>

511
00:19:04,090 --> 00:19:08,949
<font color="#E5E5E5">but you can look maybe above a certain</font>

512
00:19:07,120 --> 00:19:11,350
<font color="#CCCCCC">threshold and then trigger on that and</font>

513
00:19:08,950 --> 00:19:12,640
then if<font color="#E5E5E5"> Bob from HR is suddenly doing</font>

514
00:19:11,350 --> 00:19:14,110
<font color="#E5E5E5">all these</font><font color="#CCCCCC"> things you like he's not power</font>

515
00:19:12,640 --> 00:19:19,960
user this<font color="#E5E5E5"> is probably suspicious we</font>

516
00:19:14,110 --> 00:19:21,639
should<font color="#CCCCCC"> may be investigated and so so we</font>

517
00:19:19,960 --> 00:19:23,800
need to be able<font color="#E5E5E5"> to minimize basic our</font>

518
00:19:21,640 --> 00:19:26,470
<font color="#E5E5E5">process execution so one way</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> can do</font>

519
00:19:23,800 --> 00:19:27,970
this<font color="#E5E5E5"> is by executing remotely so in the</font>

520
00:19:26,470 --> 00:19:29,560
kind of typical<font color="#E5E5E5"> format right we've we've</font>

521
00:19:27,970 --> 00:19:31,450
compromised the user and it's<font color="#CCCCCC"> talking</font>

522
00:19:29,560 --> 00:19:33,520
out over over the Internet of I see two

523
00:19:31,450 --> 00:19:36,490
warring<font color="#CCCCCC"> States I see -</font><font color="#E5E5E5"> and we're</font>

524
00:19:33,520 --> 00:19:37,930
executing on the<font color="#E5E5E5"> host so what we can't</font>

525
00:19:36,490 --> 00:19:40,720
do to be<font color="#E5E5E5"> more stealth is we can</font>

526
00:19:37,930 --> 00:19:42,430
basically use that that compromised user

527
00:19:40,720 --> 00:19:43,810
as an ingress point into the network<font color="#E5E5E5"> and</font>

528
00:19:42,430 --> 00:19:46,060
we<font color="#E5E5E5"> just tunnel everything through</font><font color="#CCCCCC"> that</font>

529
00:19:43,810 --> 00:19:47,590
and the<font color="#E5E5E5"> advantage of this is that we're</font>

530
00:19:46,060 --> 00:19:50,320
not executing<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the host the</font><font color="#CCCCCC"> EDR</font><font color="#E5E5E5"> has</font>

531
00:19:47,590 --> 00:19:51,970
<font color="#E5E5E5">got no visibility of it the</font><font color="#CCCCCC"> the</font>

532
00:19:50,320 --> 00:19:53,439
downsides of this is<font color="#E5E5E5"> that we lose the</font>

533
00:19:51,970 --> 00:19:54,490
privileges that<font color="#CCCCCC"> Windows single sign-on</font>

534
00:19:53,440 --> 00:19:56,350
gives you right so we're<font color="#E5E5E5"> not in the</font>

535
00:19:54,490 --> 00:19:58,210
context of<font color="#E5E5E5"> the user so</font><font color="#CCCCCC"> we can't abuse</font>

536
00:19:56,350 --> 00:20:00,820
<font color="#E5E5E5">that so therefore we need</font><font color="#CCCCCC"> to kilo</font><font color="#E5E5E5"> or get</font>

537
00:19:58,210 --> 00:20:02,890
<font color="#CCCCCC">created somehow but once we do from our</font>

538
00:20:00,820 --> 00:20:04,960
<font color="#E5E5E5">attacking infrastructure we can</font><font color="#CCCCCC"> run in</font>

539
00:20:02,890 --> 00:20:06,520
<font color="#E5E5E5">packet we can set up a Windows box that</font>

540
00:20:04,960 --> 00:20:08,530
proxies through and we<font color="#CCCCCC"> can start moving</font>

541
00:20:06,520 --> 00:20:09,970
laterally and<font color="#E5E5E5"> doing stuff and it cuts in</font>

542
00:20:08,530 --> 00:20:14,160
half the<font color="#CCCCCC"> number</font><font color="#E5E5E5"> of hosts</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you touch</font>

543
00:20:09,970 --> 00:20:14,160
and<font color="#E5E5E5"> this can be really really stealthy</font><font color="#CCCCCC"> I</font>

544
00:20:15,360 --> 00:20:20,949
<font color="#CCCCCC">cheat</font><font color="#E5E5E5"> on a note of</font><font color="#CCCCCC"> this we actually had</font>

545
00:20:17,620 --> 00:20:22,659
a red team where basically<font color="#E5E5E5"> every</font><font color="#CCCCCC"> time we</font>

546
00:20:20,950 --> 00:20:23,830
try<font color="#E5E5E5"> to do on something on the host we</font>

547
00:20:22,660 --> 00:20:25,390
were<font color="#E5E5E5"> injecting</font><font color="#CCCCCC"> the stuff and</font><font color="#E5E5E5"> it was</font>

548
00:20:23,830 --> 00:20:27,370
immediately getting<font color="#E5E5E5"> caught so we almost</font>

549
00:20:25,390 --> 00:20:29,440
had to<font color="#E5E5E5"> do a whole engagement</font><font color="#CCCCCC"> by pivoting</font>

550
00:20:27,370 --> 00:20:32,679
stuff in and but it your<font color="#E5E5E5"> footprint is so</font>

551
00:20:29,440 --> 00:20:36,670
small if<font color="#E5E5E5"> you do this</font><font color="#CCCCCC"> um this ultimately</font>

552
00:20:32,680 --> 00:20:37,750
<font color="#E5E5E5">isn't the</font><font color="#CCCCCC"> solution right so really we</font>

553
00:20:36,670 --> 00:20:40,150
want to go direct through the<font color="#E5E5E5"> windows</font>

554
00:20:37,750 --> 00:20:41,200
API<font color="#E5E5E5"> so again if we're going to persist</font>

555
00:20:40,150 --> 00:20:42,580
<font color="#E5E5E5">that we get a foothold we want to</font>

556
00:20:41,200 --> 00:20:44,410
persist<font color="#CCCCCC"> so we're</font><font color="#E5E5E5"> gonna set a new</font><font color="#CCCCCC"> rung</font>

557
00:20:42,580 --> 00:20:45,820
<font color="#CCCCCC">key as</font><font color="#E5E5E5"> I've previously stated this is</font>

558
00:20:44,410 --> 00:20:47,110
obvious<font color="#E5E5E5"> right you can look for this you</font>

559
00:20:45,820 --> 00:20:49,629
can monitor it someone knows what<font color="#E5E5E5"> you're</font>

560
00:20:47,110 --> 00:20:50,740
doing<font color="#CCCCCC"> so</font><font color="#E5E5E5"> it's not ideal</font><font color="#CCCCCC"> so what we</font>

561
00:20:49,630 --> 00:20:55,060
really<font color="#E5E5E5"> want to do is go</font><font color="#CCCCCC"> directly through</font>

562
00:20:50,740 --> 00:20:57,400
<font color="#E5E5E5">the windows API and as a result</font><font color="#CCCCCC"> at MWR</font>

563
00:20:55,060 --> 00:20:58,570
we've created a modular framework<font color="#E5E5E5"> to do</font>

564
00:20:57,400 --> 00:21:00,850
this<font color="#E5E5E5"> now this is</font><font color="#CCCCCC"> nothing new</font>

565
00:20:58,570 --> 00:21:03,189
meterpreter does it<font color="#E5E5E5"> but what this gives</font>

566
00:21:00,850 --> 00:21:05,860
us is granularity<font color="#CCCCCC"> of a specific API</font>

567
00:21:03,190 --> 00:21:07,180
<font color="#E5E5E5">calls that we want to make and in</font>

568
00:21:05,860 --> 00:21:08,770
<font color="#E5E5E5">particular something like the registry</font>

569
00:21:07,180 --> 00:21:10,330
we can make a very lightweight assembly

570
00:21:08,770 --> 00:21:12,760
that gives us<font color="#E5E5E5"> all the functionality</font>

571
00:21:10,330 --> 00:21:15,100
<font color="#CCCCCC">a</font><font color="#E5E5E5"> rich we don't need to call it and then</font>

572
00:21:12,760 --> 00:21:16,779
<font color="#CCCCCC">we can</font><font color="#E5E5E5"> load these over the wire</font><font color="#CCCCCC"> wire</font>

573
00:21:15,100 --> 00:21:18,219
them in and then<font color="#CCCCCC"> just call them and the</font>

574
00:21:16,779 --> 00:21:19,600
advantage of this is<font color="#CCCCCC"> that it's agnostic</font>

575
00:21:18,220 --> 00:21:22,690
of<font color="#CCCCCC"> any</font><font color="#E5E5E5"> tool set as long as we can talk</font>

576
00:21:19,600 --> 00:21:24,879
to it<font color="#E5E5E5"> then we can use any any implant we</font>

577
00:21:22,690 --> 00:21:29,980
want and it gives<font color="#CCCCCC"> us</font><font color="#E5E5E5"> a lower flexibility</font>

578
00:21:24,880 --> 00:21:32,590
over what<font color="#E5E5E5"> what we want to do a word of</font>

579
00:21:29,980 --> 00:21:35,110
caution<font color="#E5E5E5"> though that you might want to</font>

580
00:21:32,590 --> 00:21:37,629
start thinking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> avoiding a dodgy</font>

581
00:21:35,110 --> 00:21:39,610
API calls<font color="#CCCCCC"> and so the real message</font><font color="#E5E5E5"> of</font>

582
00:21:37,630 --> 00:21:41,559
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is like understand your tools</font><font color="#E5E5E5"> and</font>

583
00:21:39,610 --> 00:21:43,120
know what they do<font color="#E5E5E5"> under the hood</font><font color="#CCCCCC"> if you</font>

584
00:21:41,559 --> 00:21:44,440
<font color="#CCCCCC">light up a beacon and</font><font color="#E5E5E5"> start injecting to</font>

585
00:21:43,120 --> 00:21:49,059
everything you probably might get caught

586
00:21:44,440 --> 00:21:52,899
quite quickly<font color="#E5E5E5"> and so the idea of this is</font>

587
00:21:49,059 --> 00:21:54,970
if possible<font color="#CCCCCC"> I would always kind</font><font color="#E5E5E5"> of cool</font>

588
00:21:52,899 --> 00:21:56,168
<font color="#CCCCCC">Nesta causes</font><font color="#E5E5E5"> it ntdll if you can't go</font>

589
00:21:54,970 --> 00:21:58,240
direct because<font color="#E5E5E5"> your chance of getting</font>

590
00:21:56,169 --> 00:21:59,590
<font color="#CCCCCC">caught is</font><font color="#E5E5E5"> less and in</font><font color="#CCCCCC"> Ko most right now</font>

591
00:21:58,240 --> 00:22:01,240
you can for<font color="#CCCCCC"> instance you can you can</font>

592
00:21:59,590 --> 00:22:02,740
configure it<font color="#CCCCCC"> to never use crate remote</font>

593
00:22:01,240 --> 00:22:04,630
<font color="#CCCCCC">threat because it might get you a call</font>

594
00:22:02,740 --> 00:22:06,010
this<font color="#CCCCCC"> is not a silver bullet but</font><font color="#E5E5E5"> it's</font>

595
00:22:04,630 --> 00:22:11,500
more<font color="#E5E5E5"> of</font><font color="#CCCCCC"> like</font><font color="#E5E5E5"> an attack in depth</font><font color="#CCCCCC"> star</font>

596
00:22:06,010 --> 00:22:15,789
thing<font color="#CCCCCC"> in the event that you you</font>

597
00:22:11,500 --> 00:22:18,190
absolutely have to spawn processes then

598
00:22:15,789 --> 00:22:19,870
you need to make<font color="#CCCCCC"> sure</font><font color="#E5E5E5"> that you</font><font color="#CCCCCC"> blend in</font>

599
00:22:18,190 --> 00:22:22,659
<font color="#E5E5E5">and so the</font><font color="#CCCCCC"> rule thinking about this</font>

600
00:22:19,870 --> 00:22:24,610
right<font color="#E5E5E5"> is is that least frequency style</font>

601
00:22:22,659 --> 00:22:25,480
stuff I was talking<font color="#CCCCCC"> about</font><font color="#E5E5E5"> and you need</font>

602
00:22:24,610 --> 00:22:26,949
to start<font color="#E5E5E5"> thinking</font><font color="#CCCCCC"> about the</font>

603
00:22:25,480 --> 00:22:28,870
<font color="#CCCCCC">organisation's in which</font><font color="#E5E5E5"> or you're</font>

604
00:22:26,950 --> 00:22:30,250
compromising right what looks normal on

605
00:22:28,870 --> 00:22:33,309
it what do they<font color="#E5E5E5"> do what tools do they</font>

606
00:22:30,250 --> 00:22:35,080
<font color="#E5E5E5">use how do their administers</font><font color="#CCCCCC"> no it you</font>

607
00:22:33,309 --> 00:22:36,668
<font color="#CCCCCC">obviously can't know this</font><font color="#E5E5E5"> a priori but</font>

608
00:22:35,080 --> 00:22:37,870
once you<font color="#E5E5E5"> get in you can start so most</font>

609
00:22:36,669 --> 00:22:40,649
<font color="#E5E5E5">people do start getting this information</font>

610
00:22:37,870 --> 00:22:43,709
<font color="#CCCCCC">and you need</font><font color="#E5E5E5"> to match</font><font color="#CCCCCC"> your TTP's to this</font>

611
00:22:40,649 --> 00:22:46,178
and the kind<font color="#CCCCCC"> of reason behind this is</font>

612
00:22:43,710 --> 00:22:49,360
<font color="#E5E5E5">it's kind of my experiences as a threat</font>

613
00:22:46,179 --> 00:22:52,539
hunter responding to stuff and so I

614
00:22:49,360 --> 00:22:53,799
<font color="#E5E5E5">often thought when responding</font><font color="#CCCCCC"> to a</font>

615
00:22:52,539 --> 00:22:55,299
specific alert or something

616
00:22:53,799 --> 00:22:56,980
it was<font color="#E5E5E5"> often quite a black or white</font>

617
00:22:55,299 --> 00:22:59,200
situation<font color="#CCCCCC"> in that it was obviously bad</font>

618
00:22:56,980 --> 00:23:01,600
or obviously<font color="#E5E5E5"> good example isn't</font>

619
00:22:59,200 --> 00:23:03,250
obviously bad being encoded PowerShell I

620
00:23:01,600 --> 00:23:05,230
think other than chocolaty and<font color="#E5E5E5"> chef like</font>

621
00:23:03,250 --> 00:23:06,820
literally nothing uses<font color="#E5E5E5"> this it's very</font>

622
00:23:05,230 --> 00:23:09,610
rare it's anomalous<font color="#E5E5E5"> you'll get caught if</font>

623
00:23:06,820 --> 00:23:11,080
you do it<font color="#CCCCCC"> kobish like also used to do</font>

624
00:23:09,610 --> 00:23:13,360
power over the shop now but it's awfully

625
00:23:11,080 --> 00:23:15,939
rain back in living off<font color="#E5E5E5"> the land</font>

626
00:23:13,360 --> 00:23:18,490
binaries<font color="#E5E5E5"> so</font><font color="#CCCCCC"> these</font><font color="#E5E5E5"> are almost by</font>

627
00:23:15,940 --> 00:23:20,799
definition<font color="#CCCCCC"> very arcane in esoteric ways</font>

628
00:23:18,490 --> 00:23:21,910
of<font color="#CCCCCC"> xqn code</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> like half the</font>

629
00:23:20,799 --> 00:23:23,260
security zones in the world

630
00:23:21,910 --> 00:23:24,610
even know what they<font color="#E5E5E5"> are</font><font color="#CCCCCC"> they're not</font>

631
00:23:23,260 --> 00:23:26,440
going to be running<font color="#E5E5E5"> normally on the</font>

632
00:23:24,610 --> 00:23:28,060
honor on an enterprise<font color="#CCCCCC"> network in which</font>

633
00:23:26,440 --> 00:23:29,860
case if you use them they're gonna stand

634
00:23:28,060 --> 00:23:30,940
out and<font color="#CCCCCC"> I'll be very careful about them</font>

635
00:23:29,860 --> 00:23:32,260
because I think they're<font color="#CCCCCC"> more of a trap</font>

636
00:23:30,940 --> 00:23:34,780
than people realize<font color="#E5E5E5"> sometimes because</font>

637
00:23:32,260 --> 00:23:36,129
you<font color="#E5E5E5"> can easily monitor for them again</font>

638
00:23:34,780 --> 00:23:38,440
I've said<font color="#E5E5E5"> this office spawning</font><font color="#CCCCCC"> weird</font>

639
00:23:36,130 --> 00:23:40,660
<font color="#E5E5E5">stuff is such an easy</font><font color="#CCCCCC"> one</font><font color="#E5E5E5"> and then</font>

640
00:23:38,440 --> 00:23:44,110
unknown malware<font color="#CCCCCC"> so basically this</font><font color="#E5E5E5"> is</font>

641
00:23:40,660 --> 00:23:46,330
linking<font color="#CCCCCC"> to virus total integration</font><font color="#E5E5E5"> so if</font>

642
00:23:44,110 --> 00:23:48,340
you you know<font color="#CCCCCC"> you compromise</font><font color="#E5E5E5"> user you get</font>

643
00:23:46,330 --> 00:23:50,320
a shell if you persist and<font color="#E5E5E5"> you drop a</font>

644
00:23:48,340 --> 00:23:52,659
new service has<font color="#E5E5E5"> never been seen</font><font color="#CCCCCC"> a virus</font>

645
00:23:50,320 --> 00:23:54,100
<font color="#CCCCCC">total</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> list or anything</font><font color="#E5E5E5"> if people are</font>

646
00:23:52,660 --> 00:23:56,800
<font color="#E5E5E5">doing this searching</font><font color="#CCCCCC"> Vitti looking</font><font color="#E5E5E5"> about</font>

647
00:23:54,100 --> 00:23:58,149
what the hell is this<font color="#E5E5E5"> it's again</font><font color="#CCCCCC"> it's</font>

648
00:23:56,800 --> 00:24:01,240
<font color="#E5E5E5">anomalous and it's rare and it's</font><font color="#CCCCCC"> going</font>

649
00:23:58,150 --> 00:24:03,040
<font color="#E5E5E5">to stand out like a sore thumb</font><font color="#CCCCCC"> in terms</font>

650
00:24:01,240 --> 00:24:04,810
of<font color="#E5E5E5"> their good these are common to</font><font color="#CCCCCC"> every</font>

651
00:24:03,040 --> 00:24:07,120
state right inventory tools data loss

652
00:24:04,810 --> 00:24:09,730
prevention<font color="#E5E5E5"> security</font><font color="#CCCCCC"> software the</font><font color="#E5E5E5"> million</font>

653
00:24:07,120 --> 00:24:12,389
startup scripts<font color="#CCCCCC"> when someone logs in you</font>

654
00:24:09,730 --> 00:24:16,300
get this<font color="#E5E5E5"> noise on every domain but</font>

655
00:24:12,390 --> 00:24:18,130
<font color="#E5E5E5">occasionally you get this</font><font color="#CCCCCC"> gray area the</font>

656
00:24:16,300 --> 00:24:19,690
<font color="#E5E5E5">kind</font><font color="#CCCCCC"> of corridor of uncertainty in the</font>

657
00:24:18,130 --> 00:24:21,010
middle and this is where threat hunting

658
00:24:19,690 --> 00:24:24,850
starts<font color="#E5E5E5"> to get hard because there's no</font>

659
00:24:21,010 --> 00:24:27,460
easy answers<font color="#CCCCCC"> and example things here</font>

660
00:24:24,850 --> 00:24:30,699
include so legitimate applications do

661
00:24:27,460 --> 00:24:31,960
weird<font color="#CCCCCC"> stuff avy often injects into a lot</font>

662
00:24:30,700 --> 00:24:33,370
of<font color="#CCCCCC"> things</font><font color="#E5E5E5"> unsurprisingly and hooks</font>

663
00:24:31,960 --> 00:24:35,050
random functions<font color="#E5E5E5"> it can look like</font>

664
00:24:33,370 --> 00:24:36,790
<font color="#E5E5E5">malware into your like woman when</font><font color="#CCCCCC"> you've</font>

665
00:24:35,050 --> 00:24:39,419
followed<font color="#CCCCCC"> like</font><font color="#E5E5E5"> five recursive jumps then</font>

666
00:24:36,790 --> 00:24:41,649
you realize it goes to<font color="#E5E5E5"> like a</font><font color="#CCCCCC"> DAV DLL</font>

667
00:24:39,420 --> 00:24:43,120
upx<font color="#CCCCCC"> PAC stuff as well by definition</font>

668
00:24:41,650 --> 00:24:44,410
<font color="#CCCCCC">we'll reflectively load something</font><font color="#E5E5E5"> right</font>

669
00:24:43,120 --> 00:24:47,139
because<font color="#CCCCCC"> it's extracting</font><font color="#E5E5E5"> an executable</font>

670
00:24:44,410 --> 00:24:49,780
into memory admins or devs behaving

671
00:24:47,140 --> 00:24:51,700
badly so classic examples of<font color="#E5E5E5"> is domain</font>

672
00:24:49,780 --> 00:24:54,180
admins using<font color="#E5E5E5"> runners to map their</font><font color="#CCCCCC"> siedel</font>

673
00:24:51,700 --> 00:24:56,470
<font color="#CCCCCC">affair so they can share a file</font>

674
00:24:54,180 --> 00:24:57,880
adware<font color="#CCCCCC"> adds way</font><font color="#E5E5E5"> it can also do very</font>

675
00:24:56,470 --> 00:24:58,870
sophisticated stuff but it's<font color="#CCCCCC"> alright</font>

676
00:24:57,880 --> 00:25:01,990
it's<font color="#CCCCCC"> just that way it's</font><font color="#E5E5E5"> not it's not</font>

677
00:24:58,870 --> 00:25:03,250
<font color="#CCCCCC">it's not serious environment specific</font>

678
00:25:01,990 --> 00:25:06,250
surface<font color="#E5E5E5"> so again this is stuff this</font>

679
00:25:03,250 --> 00:25:07,720
unique to a domain<font color="#E5E5E5"> common</font><font color="#CCCCCC"> examples can</font>

680
00:25:06,250 --> 00:25:09,820
<font color="#E5E5E5">be like weird</font><font color="#CCCCCC"> PowerShell scripts that</font>

681
00:25:07,720 --> 00:25:11,680
you can use to request<font color="#E5E5E5"> that blueprints</font>

682
00:25:09,820 --> 00:25:12,669
<font color="#E5E5E5">and stuff like that</font><font color="#CCCCCC"> and these when</font>

683
00:25:11,680 --> 00:25:14,890
you're sometimes<font color="#CCCCCC"> throw hunting you're</font>

684
00:25:12,670 --> 00:25:16,180
like what the<font color="#E5E5E5"> hell is this</font><font color="#CCCCCC"> it can</font><font color="#E5E5E5"> be</font>

685
00:25:14,890 --> 00:25:18,220
quite ambiguous about<font color="#E5E5E5"> whether it's bad</font>

686
00:25:16,180 --> 00:25:19,570
or not<font color="#CCCCCC"> and you also you also</font><font color="#E5E5E5"> don't look</font>

687
00:25:18,220 --> 00:25:21,280
like an idiot<font color="#E5E5E5"> then if you ask it can't</font>

688
00:25:19,570 --> 00:25:22,659
be like oh is this your<font color="#CCCCCC"> legitimate</font>

689
00:25:21,280 --> 00:25:23,370
script like yes we use that<font color="#E5E5E5"> every</font><font color="#CCCCCC"> day oh</font>

690
00:25:22,660 --> 00:25:26,770
<font color="#E5E5E5">sorry</font>

691
00:25:23,370 --> 00:25:28,689
and then the last one is legitimate

692
00:25:26,770 --> 00:25:30,490
remote access software so in big

693
00:25:28,690 --> 00:25:32,770
organizations they tend<font color="#CCCCCC"> to not have</font><font color="#E5E5E5"> a</font>

694
00:25:30,490 --> 00:25:34,030
consistent way of<font color="#E5E5E5"> administering stuff so</font>

695
00:25:32,770 --> 00:25:35,139
they might use Bomgar they might use

696
00:25:34,030 --> 00:25:36,850
<font color="#CCCCCC">pierce</font><font color="#E5E5E5"> exec they might</font>

697
00:25:35,140 --> 00:25:39,309
<font color="#E5E5E5">teamviewer they might be stayin where</font>

698
00:25:36,850 --> 00:25:41,699
these are very<font color="#CCCCCC"> ambiguous about</font><font color="#E5E5E5"> whether</font>

699
00:25:39,309 --> 00:25:43,809
they're right or not<font color="#CCCCCC"> sometimes and</font>

700
00:25:41,700 --> 00:25:45,460
<font color="#CCCCCC">basically this middle section this</font><font color="#E5E5E5"> isn't</font>

701
00:25:43,809 --> 00:25:46,750
<font color="#E5E5E5">always right the black on the</font><font color="#CCCCCC"> right</font>

702
00:25:45,460 --> 00:25:49,990
<font color="#CCCCCC">that's</font><font color="#E5E5E5"> the signal and you you need to</font>

703
00:25:46,750 --> 00:25:51,490
say in the noise oh sorry<font color="#CCCCCC"> and so the key</font>

704
00:25:49,990 --> 00:25:53,200
thing<font color="#E5E5E5"> right this left-hand column</font><font color="#CCCCCC"> these</font>

705
00:25:51,490 --> 00:25:55,210
are all anomalous<font color="#E5E5E5"> they're all extremely</font>

706
00:25:53,200 --> 00:25:58,030
<font color="#E5E5E5">rare they're quite high fidelity alerts</font>

707
00:25:55,210 --> 00:26:00,940
they're easy to automate<font color="#E5E5E5"> and they</font><font color="#CCCCCC"> and</font>

708
00:25:58,030 --> 00:26:02,590
they get people<font color="#E5E5E5"> out of bed</font><font color="#CCCCCC"> and so if you</font>

709
00:26:00,940 --> 00:26:03,820
keep<font color="#E5E5E5"> staying in this left-hand column</font>

710
00:26:02,590 --> 00:26:05,290
right<font color="#CCCCCC"> you become the low-hanging</font><font color="#E5E5E5"> fruit</font>

711
00:26:03,820 --> 00:26:06,549
<font color="#CCCCCC">you're not an</font><font color="#E5E5E5"> advanced attacker anymore</font>

712
00:26:05,290 --> 00:26:09,340
you're just<font color="#CCCCCC"> doing the knotty</font><font color="#E5E5E5"> stuff that</font>

713
00:26:06,549 --> 00:26:12,100
it gets<font color="#E5E5E5"> caught</font><font color="#CCCCCC"> and so you really want to</font>

714
00:26:09,340 --> 00:26:13,959
be pitching<font color="#CCCCCC"> into this</font><font color="#E5E5E5"> gray area</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font>

715
00:26:12,100 --> 00:26:16,000
not<font color="#E5E5E5"> strictly</font><font color="#CCCCCC"> processed</font><font color="#E5E5E5"> related but</font>

716
00:26:13,960 --> 00:26:17,620
reflective loads<font color="#E5E5E5"> and injected threads in</font>

717
00:26:16,000 --> 00:26:20,980
<font color="#E5E5E5">Windows binaries are also</font><font color="#CCCCCC"> incredibly</font>

718
00:26:17,620 --> 00:26:22,989
rare<font color="#CCCCCC"> and obviously malware</font><font color="#E5E5E5"> and so</font>

719
00:26:20,980 --> 00:26:24,100
basically you and a red team just<font color="#E5E5E5"> don't</font>

720
00:26:22,990 --> 00:26:26,049
 it up<font color="#E5E5E5"> don't give the game away</font>

721
00:26:24,100 --> 00:26:27,549
<font color="#CCCCCC">pitch to that gray area don't do</font>

722
00:26:26,049 --> 00:26:28,450
anything<font color="#E5E5E5"> obvious that lets people know</font>

723
00:26:27,549 --> 00:26:30,700
<font color="#E5E5E5">you're there</font>

724
00:26:28,450 --> 00:26:32,260
and if you keep pitching<font color="#CCCCCC"> to this</font><font color="#E5E5E5"> gray oh</font>

725
00:26:30,700 --> 00:26:35,140
<font color="#E5E5E5">you</font><font color="#CCCCCC"> frustrate</font><font color="#E5E5E5"> people right because</font><font color="#CCCCCC"> it's</font>

726
00:26:32,260 --> 00:26:37,030
<font color="#E5E5E5">not easy</font><font color="#CCCCCC"> a stupid</font><font color="#E5E5E5"> example this right so</font>

727
00:26:35,140 --> 00:26:38,320
you want to persist of<font color="#CCCCCC"> icons so you know</font>

728
00:26:37,030 --> 00:26:40,120
you do<font color="#E5E5E5"> red you add all these</font><font color="#CCCCCC"> things</font>

729
00:26:38,320 --> 00:26:42,340
again<font color="#E5E5E5"> we're</font><font color="#CCCCCC"> not gonna</font><font color="#E5E5E5"> do that it's</font><font color="#CCCCCC"> noise</font>

730
00:26:40,120 --> 00:26:46,000
it's obvious<font color="#E5E5E5"> so one thing we could do is</font>

731
00:26:42,340 --> 00:26:49,689
say<font color="#CCCCCC"> reg</font><font color="#E5E5E5"> add</font><font color="#CCCCCC"> GPIO settings doc</font><font color="#E5E5E5"> reg or</font>

732
00:26:46,000 --> 00:26:51,309
whatever this doesn't give it away and

733
00:26:49,690 --> 00:26:53,049
<font color="#CCCCCC">it</font><font color="#E5E5E5"> means someone saw might open a ticket</font>

734
00:26:51,309 --> 00:26:54,460
<font color="#CCCCCC">they've got to retrieve</font><font color="#E5E5E5"> that fault in</font>

735
00:26:53,049 --> 00:26:56,440
the meantime you<font color="#CCCCCC"> can delete it</font><font color="#E5E5E5"> and then</font>

736
00:26:54,460 --> 00:26:58,270
they're like<font color="#CCCCCC"> ah oh it's gone now I'll</font>

737
00:26:56,440 --> 00:27:00,160
look around<font color="#E5E5E5"> the whole like the ticket</font>

738
00:26:58,270 --> 00:27:01,330
stagnates they get frustrated<font color="#CCCCCC"> they've</font>

739
00:27:00,160 --> 00:27:02,980
got lots of other<font color="#CCCCCC"> things to do they just</font>

740
00:27:01,330 --> 00:27:04,360
<font color="#E5E5E5">give</font><font color="#CCCCCC"> up and there's this type of</font>

741
00:27:02,980 --> 00:27:06,220
approach where you need to<font color="#E5E5E5"> be pitching</font>

742
00:27:04,360 --> 00:27:08,168
<font color="#E5E5E5">stuff</font>

743
00:27:06,220 --> 00:27:10,570
naturally it follows from<font color="#CCCCCC"> this</font><font color="#E5E5E5"> just</font>

744
00:27:08,169 --> 00:27:12,280
avoid<font color="#E5E5E5"> PowerShell or any nodding</font><font color="#CCCCCC"> UDR will</font>

745
00:27:10,570 --> 00:27:13,870
flag on<font color="#CCCCCC"> pouch almost straight away and</font>

746
00:27:12,280 --> 00:27:15,580
interestingly<font color="#E5E5E5"> spec shops actually</font>

747
00:27:13,870 --> 00:27:17,559
stopped<font color="#E5E5E5"> their</font><font color="#CCCCCC"> PowerShell course because</font>

748
00:27:15,580 --> 00:27:19,299
it's just<font color="#CCCCCC"> no they think</font><font color="#E5E5E5"> it's not</font><font color="#CCCCCC"> even</font>

749
00:27:17,559 --> 00:27:23,889
worth using<font color="#E5E5E5"> power show anymore actually</font>

750
00:27:19,299 --> 00:27:25,000
in the wild<font color="#E5E5E5"> dotnet hauling is all the</font>

751
00:27:23,890 --> 00:27:26,350
rage<font color="#E5E5E5"> now everyone's already ported</font>

752
00:27:25,000 --> 00:27:28,780
everything over<font color="#CCCCCC"> Kobach's type does</font>

753
00:27:26,350 --> 00:27:30,459
invoke assembly like just go mad<font color="#E5E5E5"> you've</font>

754
00:27:28,780 --> 00:27:31,850
probably got two years until<font color="#CCCCCC"> Microsoft</font>

755
00:27:30,460 --> 00:27:34,880
catch up and<font color="#E5E5E5"> then something else will</font>

756
00:27:31,850 --> 00:27:36,469
along the<font color="#E5E5E5"> only slight caveat</font><font color="#CCCCCC"> sis I would</font>

757
00:27:34,880 --> 00:27:38,210
<font color="#E5E5E5">say if you do find</font><font color="#CCCCCC"> that they use</font>

758
00:27:36,470 --> 00:27:40,160
PowerShell<font color="#E5E5E5"> remoting</font><font color="#CCCCCC"> that's still pretty</font>

759
00:27:38,210 --> 00:27:41,660
<font color="#E5E5E5">cool for</font><font color="#CCCCCC"> lateral movement because that's</font>

760
00:27:40,160 --> 00:27:44,179
<font color="#E5E5E5">still quite hard</font><font color="#CCCCCC"> to differentiate what</font>

761
00:27:41,660 --> 00:27:45,440
<font color="#E5E5E5">is legitimate or</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> so it's still</font>

762
00:27:44,179 --> 00:27:47,480
worthwhile using that as long<font color="#CCCCCC"> as you</font>

763
00:27:45,440 --> 00:27:51,980
don't do anything<font color="#E5E5E5"> weird</font><font color="#CCCCCC"> with it</font><font color="#E5E5E5"> or</font>

764
00:27:47,480 --> 00:27:53,179
<font color="#E5E5E5">basically focus though and then just</font>

765
00:27:51,980 --> 00:27:55,190
going to the kind<font color="#E5E5E5"> of virus total</font>

766
00:27:53,179 --> 00:27:57,200
<font color="#E5E5E5">integration stuff I think</font><font color="#CCCCCC"> Weezer tackers</font>

767
00:27:55,190 --> 00:27:58,690
need to almost approach<font color="#CCCCCC"> virustotal</font><font color="#E5E5E5"> how</font>

768
00:27:57,200 --> 00:28:01,010
we would do with domain categorization

769
00:27:58,690 --> 00:28:02,690
<font color="#CCCCCC">so before</font><font color="#E5E5E5"> any red team normally you'll</font>

770
00:28:01,010 --> 00:28:04,490
go you know you're<font color="#E5E5E5"> going grab your</font>

771
00:28:02,690 --> 00:28:05,900
expired domains<font color="#E5E5E5"> or you'll go register</font>

772
00:28:04,490 --> 00:28:08,120
<font color="#E5E5E5">new ones and you get them categories and</font>

773
00:28:05,900 --> 00:28:10,220
they look amazing<font color="#CCCCCC"> right there</font><font color="#E5E5E5"> shiny new</font>

774
00:28:08,120 --> 00:28:13,658
domains they'll get past<font color="#E5E5E5"> a proxy that's</font>

775
00:28:10,220 --> 00:28:17,179
<font color="#E5E5E5">what</font><font color="#CCCCCC"> your that's what your aim is but</font>

776
00:28:13,659 --> 00:28:18,770
this but no<font color="#E5E5E5"> one really</font><font color="#CCCCCC"> does this for</font>

777
00:28:17,179 --> 00:28:19,970
virustotal right and as<font color="#E5E5E5"> I said</font><font color="#CCCCCC"> before if</font>

778
00:28:18,770 --> 00:28:22,220
you drop a service it's going to be

779
00:28:19,970 --> 00:28:23,720
anomalous<font color="#E5E5E5"> so one thing I</font><font color="#CCCCCC"> think it's kind</font>

780
00:28:22,220 --> 00:28:25,429
of counterintuitive but might actually

781
00:28:23,720 --> 00:28:27,440
be quite sensible<font color="#E5E5E5"> is if you actually</font>

782
00:28:25,429 --> 00:28:28,669
<font color="#E5E5E5">start uploading your payloads</font><font color="#CCCCCC"> in advance</font>

783
00:28:27,440 --> 00:28:30,460
to virus<font color="#CCCCCC"> stars even</font><font color="#E5E5E5"> if they're</font><font color="#CCCCCC"> very</font>

784
00:28:28,669 --> 00:28:32,870
small updates or something like<font color="#E5E5E5"> that</font>

785
00:28:30,460 --> 00:28:34,370
when these drop people can be like<font color="#CCCCCC"> oh</font>

786
00:28:32,870 --> 00:28:36,590
<font color="#CCCCCC">burst no that's not</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> about</font>

787
00:28:34,370 --> 00:28:38,239
interesting<font color="#CCCCCC"> in</font><font color="#E5E5E5"> fact even if you're maybe</font>

788
00:28:36,590 --> 00:28:40,370
you'll<font color="#E5E5E5"> recognize you know you have seven</font>

789
00:28:38,240 --> 00:28:41,809
out<font color="#CCCCCC"> of something</font><font color="#E5E5E5"> if you look like</font>

790
00:28:40,370 --> 00:28:42,979
commodity malware the chances are that

791
00:28:41,809 --> 00:28:44,120
someone<font color="#CCCCCC"> who's seen come on is the Amero</font>

792
00:28:42,980 --> 00:28:45,799
million time does not<font color="#E5E5E5"> gonna be</font>

793
00:28:44,120 --> 00:28:47,178
particular<font color="#CCCCCC"> to buy</font><font color="#E5E5E5"> it right it's boring</font>

794
00:28:45,799 --> 00:28:49,700
it's dull it's<font color="#E5E5E5"> like</font><font color="#CCCCCC"> Oh deal with that</font>

795
00:28:47,179 --> 00:28:51,409
now<font color="#E5E5E5"> where is the unknown</font><font color="#CCCCCC"> sexy apt but</font>

796
00:28:49,700 --> 00:28:52,610
everyone was<font color="#E5E5E5"> to find</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> so even</font>

797
00:28:51,409 --> 00:28:55,720
looking like a monitor malware<font color="#E5E5E5"> can</font>

798
00:28:52,610 --> 00:28:55,719
sometimes be an<font color="#CCCCCC"> advantage</font>

799
00:29:00,320 --> 00:29:05,790
this is an<font color="#CCCCCC"> obvious one as well but once</font>

800
00:29:02,640 --> 00:29:07,850
you've got<font color="#CCCCCC"> credit</font><font color="#E5E5E5"> or whatever</font><font color="#CCCCCC"> do</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> and</font>

801
00:29:05,790 --> 00:29:12,870
look where the<font color="#CCCCCC"> edr</font><font color="#E5E5E5"> agent isn't running</font>

802
00:29:07,850 --> 00:29:13,740
<font color="#CCCCCC">and if you can move move to them this is</font>

803
00:29:12,870 --> 00:29:15,330
actually quite<font color="#CCCCCC"> a difficult</font>

804
00:29:13,740 --> 00:29:16,920
organizational problem to solve right

805
00:29:15,330 --> 00:29:18,389
because<font color="#CCCCCC"> people leave companies they lose</font>

806
00:29:16,920 --> 00:29:20,100
laptops and stuff<font color="#E5E5E5"> so actually</font>

807
00:29:18,390 --> 00:29:21,660
administering this and trying<font color="#E5E5E5"> to get</font>

808
00:29:20,100 --> 00:29:23,909
hosts back<font color="#E5E5E5"> online it's quite tricky so</font>

809
00:29:21,660 --> 00:29:26,090
<font color="#E5E5E5">you cannot often exploit this blind</font><font color="#CCCCCC"> spot</font>

810
00:29:23,910 --> 00:29:28,290
<font color="#CCCCCC">and people with technologies as</font><font color="#E5E5E5"> well</font>

811
00:29:26,090 --> 00:29:30,570
they're<font color="#CCCCCC"> almost</font><font color="#E5E5E5"> their biggest weakness is</font>

812
00:29:28,290 --> 00:29:31,800
when something they think<font color="#E5E5E5"> is running</font>

813
00:29:30,570 --> 00:29:35,179
<font color="#CCCCCC">isn't and then</font><font color="#E5E5E5"> suddenly they have this</font>

814
00:29:31,800 --> 00:29:35,180
massive blind spot they don't realize it

815
00:29:39,920 --> 00:29:44,430
<font color="#CCCCCC">right so we have</font><font color="#E5E5E5"> covered misdirection</font>

816
00:29:42,630 --> 00:29:47,310
<font color="#E5E5E5">and we've covered minimization and so</font>

817
00:29:44,430 --> 00:29:49,080
basically minimization was kind of

818
00:29:47,310 --> 00:29:50,730
avoiding<font color="#CCCCCC"> person as we can but if we have</font>

819
00:29:49,080 --> 00:29:52,230
to try to fit in and blend<font color="#E5E5E5"> in with the</font>

820
00:29:50,730 --> 00:29:53,310
environment<font color="#CCCCCC"> and this is kind of</font><font color="#E5E5E5"> almost a</font>

821
00:29:52,230 --> 00:29:57,360
rehash of the old living<font color="#E5E5E5"> off the land</font>

822
00:29:53,310 --> 00:29:59,070
approach but these are so far all been

823
00:29:57,360 --> 00:30:02,610
<font color="#CCCCCC">predicated on the fact that we</font><font color="#E5E5E5"> would be</font>

824
00:29:59,070 --> 00:30:05,210
<font color="#CCCCCC">source remaining in memory hidden away</font>

825
00:30:02,610 --> 00:30:08,459
and avoiding<font color="#CCCCCC"> supporting</font><font color="#E5E5E5"> processes</font>

826
00:30:05,210 --> 00:30:10,860
this however is problematic<font color="#E5E5E5"> because a</font>

827
00:30:08,460 --> 00:30:12,900
lot<font color="#CCCCCC"> of them commercial and open source</font>

828
00:30:10,860 --> 00:30:15,000
frameworks<font color="#E5E5E5"> and also a lot of commodity</font>

829
00:30:12,900 --> 00:30:17,130
malware<font color="#E5E5E5"> use basically the</font><font color="#CCCCCC"> same code</font>

830
00:30:15,000 --> 00:30:19,020
injection techniques things like

831
00:30:17,130 --> 00:30:20,880
reflective DLL injection and thread

832
00:30:19,020 --> 00:30:23,010
injection and these can<font color="#E5E5E5"> be very obvious</font>

833
00:30:20,880 --> 00:30:24,330
<font color="#CCCCCC">the spot and especially if you're doing</font>

834
00:30:23,010 --> 00:30:25,710
memory friends it's alive and<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> scale</font>

835
00:30:24,330 --> 00:30:27,899
with these anomaly detection like these

836
00:30:25,710 --> 00:30:31,470
things stand<font color="#E5E5E5"> up so stand out as</font><font color="#CCCCCC"> I said</font>

837
00:30:27,900 --> 00:30:33,060
<font color="#E5E5E5">before so we need to be</font><font color="#CCCCCC"> able to hide</font>

838
00:30:31,470 --> 00:30:35,840
these<font color="#E5E5E5"> signs in order to remain hidden</font>

839
00:30:33,060 --> 00:30:39,360
<font color="#E5E5E5">and so this section is going</font><font color="#CCCCCC"> to cover</font>

840
00:30:35,840 --> 00:30:40,590
<font color="#E5E5E5">what these memory nanami look like how</font>

841
00:30:39,360 --> 00:30:44,010
you can hide them<font color="#E5E5E5"> and the approaches</font>

842
00:30:40,590 --> 00:30:46,230
that<font color="#CCCCCC"> MWR that we've taken to</font><font color="#E5E5E5"> this and so</font>

843
00:30:44,010 --> 00:30:46,980
typically when when malware gets code

844
00:30:46,230 --> 00:30:49,230
<font color="#E5E5E5">exactly a box</font>

845
00:30:46,980 --> 00:30:51,990
it's normally<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> try and inject a</font><font color="#CCCCCC"> dll</font>

846
00:30:49,230 --> 00:30:53,550
<font color="#CCCCCC">VAR</font><font color="#E5E5E5"> reflective</font><font color="#CCCCCC"> load</font><font color="#E5E5E5"> typically and so</font><font color="#CCCCCC"> in</font>

847
00:30:51,990 --> 00:30:55,350
this example<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> our legitimate</font>

848
00:30:53,550 --> 00:30:56,730
notepad process<font color="#E5E5E5"> and this is kind of a</font>

849
00:30:55,350 --> 00:30:58,379
<font color="#E5E5E5">bird's-eye view of the</font><font color="#CCCCCC"> process memory</font>

850
00:30:56,730 --> 00:31:00,660
space<font color="#E5E5E5"> so we can see the image</font>

851
00:30:58,380 --> 00:31:02,280
notepad.exe<font color="#CCCCCC"> any shared libraries or DLL</font>

852
00:31:00,660 --> 00:31:03,570
it needs to actually<font color="#E5E5E5"> offer functionality</font>

853
00:31:02,280 --> 00:31:07,350
and<font color="#E5E5E5"> we can see the heat where it's</font>

854
00:31:03,570 --> 00:31:08,490
storing data<font color="#CCCCCC"> etc and every every</font>

855
00:31:07,350 --> 00:31:12,178
<font color="#E5E5E5">application we have at least one</font>

856
00:31:08,490 --> 00:31:13,920
of execution<font color="#CCCCCC"> and</font><font color="#E5E5E5"> so what</font><font color="#CCCCCC"> Matt</font><font color="#E5E5E5"> will do is</font>

857
00:31:12,179 --> 00:31:15,420
it will it will obtain<font color="#CCCCCC"> a handle to</font><font color="#E5E5E5"> this</font>

858
00:31:13,920 --> 00:31:16,770
<font color="#E5E5E5">process and it'll allocate a block of</font>

859
00:31:15,420 --> 00:31:19,200
memory which typically is<font color="#E5E5E5"> read</font><font color="#CCCCCC"> write</font>

860
00:31:16,770 --> 00:31:20,760
executable<font color="#E5E5E5"> it will then copy its payload</font>

861
00:31:19,200 --> 00:31:22,110
<font color="#CCCCCC">over</font><font color="#E5E5E5"> which will be reflective DLL and</font>

862
00:31:20,760 --> 00:31:23,790
then it starts to threaded at the

863
00:31:22,110 --> 00:31:25,199
beginning and at this stage<font color="#E5E5E5"> you get a</font>

864
00:31:23,790 --> 00:31:27,540
shell back<font color="#CCCCCC"> break everything's going</font>

865
00:31:25,200 --> 00:31:30,750
right but the<font color="#E5E5E5"> problem of this is it</font>

866
00:31:27,540 --> 00:31:33,510
leaves<font color="#E5E5E5"> two very obvious anomalies the</font>

867
00:31:30,750 --> 00:31:35,070
first is that<font color="#CCCCCC"> readwrite executable blob</font>

868
00:31:33,510 --> 00:31:37,190
which if you look<font color="#E5E5E5"> in memory just has a</font>

869
00:31:35,070 --> 00:31:40,080
<font color="#E5E5E5">DLL thing</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> like what ahem is this</font>

870
00:31:37,190 --> 00:31:42,059
the second is that injective thread and

871
00:31:40,080 --> 00:31:43,530
if you look at the start address it will

872
00:31:42,059 --> 00:31:46,320
point to this<font color="#E5E5E5"> weird dynamically</font>

873
00:31:43,530 --> 00:31:48,000
allocated block of memory these are so

874
00:31:46,320 --> 00:31:51,330
anomalous they almost always definitely

875
00:31:48,000 --> 00:31:52,710
<font color="#E5E5E5">malware basically and so if you're an</font>

876
00:31:51,330 --> 00:31:54,750
<font color="#E5E5E5">idiot</font><font color="#CCCCCC"> all you need</font><font color="#E5E5E5"> to do is just search</font>

877
00:31:52,710 --> 00:31:56,340
through memory if you<font color="#E5E5E5"> find something</font>

878
00:31:54,750 --> 00:31:58,350
<font color="#CCCCCC">read</font><font color="#E5E5E5"> write executable it's got a</font><font color="#CCCCCC"> dll</font>

879
00:31:56,340 --> 00:32:00,059
there well this this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> probably worth</font>

880
00:31:58,350 --> 00:32:01,649
investigating<font color="#CCCCCC"> and similarly with threads</font>

881
00:32:00,059 --> 00:32:03,330
<font color="#E5E5E5">you and you might all the threads you</font>

882
00:32:01,650 --> 00:32:04,800
<font color="#CCCCCC">find</font><font color="#E5E5E5"> those that don't track back</font><font color="#CCCCCC"> to</font>

883
00:32:03,330 --> 00:32:06,540
legitimate exhibitions<font color="#E5E5E5"> and you raise</font>

884
00:32:04,800 --> 00:32:09,600
them and this is how<font color="#CCCCCC"> jarred a concerns</font>

885
00:32:06,540 --> 00:32:10,980
get inject thread work<font color="#E5E5E5"> so this obviously</font>

886
00:32:09,600 --> 00:32:12,570
<font color="#E5E5E5">isn't very ideal for us because we're</font>

887
00:32:10,980 --> 00:32:14,900
gonna get caught if we just if<font color="#CCCCCC"> we use</font>

888
00:32:12,570 --> 00:32:17,550
this type of thing so<font color="#E5E5E5"> so what can we do</font>

889
00:32:14,900 --> 00:32:19,080
so there<font color="#E5E5E5"> are ways of evading get</font>

890
00:32:17,550 --> 00:32:20,309
injected<font color="#E5E5E5"> thread and the basic premise of</font>

891
00:32:19,080 --> 00:32:22,110
this<font color="#E5E5E5"> is right you need</font><font color="#CCCCCC"> to make your</font>

892
00:32:20,309 --> 00:32:24,960
thread look like it comes<font color="#E5E5E5"> from a</font>

893
00:32:22,110 --> 00:32:26,250
legitimate<font color="#E5E5E5"> X section</font><font color="#CCCCCC"> there are a couple</font>

894
00:32:24,960 --> 00:32:28,770
<font color="#E5E5E5">of ways of doing this so step through</font>

895
00:32:26,250 --> 00:32:30,750
context and<font color="#CCCCCC"> rock</font><font color="#E5E5E5"> chains</font><font color="#CCCCCC"> and there's an</font>

896
00:32:28,770 --> 00:32:33,139
excellent<font color="#E5E5E5"> blog which I fully recommend</font>

897
00:32:30,750 --> 00:32:35,429
reading<font color="#CCCCCC"> by XP and on how to do this</font>

898
00:32:33,140 --> 00:32:36,630
similarly with reflective loading you

899
00:32:35,429 --> 00:32:38,309
can obfuscate<font color="#E5E5E5"> it and all this isn't</font>

900
00:32:36,630 --> 00:32:39,360
about strike<font color="#E5E5E5"> I'm not gonna talking</font><font color="#CCCCCC"> any</font>

901
00:32:38,309 --> 00:32:42,928
<font color="#CCCCCC">more about it but</font><font color="#E5E5E5"> this is</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> very good</font>

902
00:32:39,360 --> 00:32:44,309
reference<font color="#CCCCCC"> just just to bear in mind so</font>

903
00:32:42,929 --> 00:32:45,690
the approach we're gonna take say is

904
00:32:44,309 --> 00:32:47,010
using something like<font color="#CCCCCC"> processed Halloween</font>

905
00:32:45,690 --> 00:32:48,179
<font color="#CCCCCC">so this is this</font><font color="#E5E5E5"> is quite</font><font color="#CCCCCC"> old</font><font color="#E5E5E5"> approach</font>

906
00:32:47,010 --> 00:32:49,110
<font color="#E5E5E5">this has been around for a long</font><font color="#CCCCCC"> time and</font>

907
00:32:48,179 --> 00:32:50,420
I mentioned<font color="#E5E5E5"> it before when</font><font color="#CCCCCC"> I've</font>

908
00:32:49,110 --> 00:32:53,550
something<font color="#E5E5E5"> about some stuff</font><font color="#CCCCCC"> that subti</font><font color="#E5E5E5"> do</font>

909
00:32:50,420 --> 00:32:55,710
and this works as follows<font color="#E5E5E5"> right so</font>

910
00:32:53,550 --> 00:32:58,169
malware is gonna launch a process in a

911
00:32:55,710 --> 00:32:59,910
suspended<font color="#E5E5E5"> state and legitimate one it's</font>

912
00:32:58,170 --> 00:33:01,740
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> basically</font><font color="#CCCCCC"> remove one map its</font>

913
00:32:59,910 --> 00:33:04,380
image and replace it with its own<font color="#E5E5E5"> so</font>

914
00:33:01,740 --> 00:33:05,820
evil<font color="#CCCCCC"> doke series payload</font><font color="#E5E5E5"> and then it's</font>

915
00:33:04,380 --> 00:33:08,070
going<font color="#E5E5E5"> to resume it and so in this case</font>

916
00:33:05,820 --> 00:33:10,320
<font color="#CCCCCC">we don't get</font><font color="#E5E5E5"> those horrible rewrite X</font>

917
00:33:08,070 --> 00:33:11,970
<font color="#CCCCCC">cubed blobs that</font><font color="#E5E5E5"> hanging around and our</font>

918
00:33:10,320 --> 00:33:14,850
thread appears to be coming<font color="#E5E5E5"> like is</font>

919
00:33:11,970 --> 00:33:17,490
legitimate so this looks good<font color="#CCCCCC"> this is</font>

920
00:33:14,850 --> 00:33:18,060
<font color="#CCCCCC">promising and</font><font color="#E5E5E5"> actually to all intents</font>

921
00:33:17,490 --> 00:33:19,470
and purposes

922
00:33:18,060 --> 00:33:20,850
the<font color="#CCCCCC"> compromise host this just looks</font><font color="#E5E5E5"> like</font>

923
00:33:19,470 --> 00:33:23,130
notepad<font color="#CCCCCC"> it's only when you</font><font color="#E5E5E5"> start</font><font color="#CCCCCC"> looking</font>

924
00:33:20,850 --> 00:33:24,090
in memory where you're like<font color="#E5E5E5"> it's only</font>

925
00:33:23,130 --> 00:33:24,840
when you<font color="#E5E5E5"> start looking memory</font><font color="#CCCCCC"> where</font>

926
00:33:24,090 --> 00:33:25,470
you're like well I<font color="#E5E5E5"> mean this is</font>

927
00:33:24,840 --> 00:33:27,810
<font color="#E5E5E5">different</font>

928
00:33:25,470 --> 00:33:30,180
and basically therein lies the<font color="#E5E5E5"> detection</font>

929
00:33:27,810 --> 00:33:31,500
right<font color="#CCCCCC"> if you compare what notepad looks</font>

930
00:33:30,180 --> 00:33:32,880
like on<font color="#CCCCCC"> disks what it looks like in</font>

931
00:33:31,500 --> 00:33:34,080
memory you're quickly<font color="#E5E5E5"> gonna realize I'll</font>

932
00:33:32,880 --> 00:33:34,710
hang on these are<font color="#E5E5E5"> complete different</font>

933
00:33:34,080 --> 00:33:37,699
<font color="#E5E5E5">alert</font>

934
00:33:34,710 --> 00:33:40,950
so<font color="#CCCCCC"> proces</font><font color="#E5E5E5"> Hollings maybe not go as well</font>

935
00:33:37,700 --> 00:33:42,510
<font color="#E5E5E5">the thing to bear</font><font color="#CCCCCC"> in mind though is that</font>

936
00:33:40,950 --> 00:33:44,160
while memory scanning can be very

937
00:33:42,510 --> 00:33:46,590
powerful<font color="#E5E5E5"> on a single standalone host</font>

938
00:33:44,160 --> 00:33:49,020
right it has its limitations<font color="#CCCCCC"> for</font>

939
00:33:46,590 --> 00:33:50,520
instance it can<font color="#E5E5E5"> be very CPU intensive</font><font color="#CCCCCC"> it</font>

940
00:33:49,020 --> 00:33:53,190
can be relatively<font color="#E5E5E5"> slow</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it can be</font>

941
00:33:50,520 --> 00:33:55,320
<font color="#CCCCCC">false-positive prone so what works well</font>

942
00:33:53,190 --> 00:33:57,000
in one host doesn't necessarily scale

943
00:33:55,320 --> 00:33:58,470
across thousands<font color="#CCCCCC"> and as</font><font color="#E5E5E5"> I said this</font><font color="#CCCCCC"> is</font>

944
00:33:57,000 --> 00:33:59,910
the<font color="#E5E5E5"> real challenge right you need you</font>

945
00:33:58,470 --> 00:34:01,350
need to<font color="#E5E5E5"> be able to make quick scalable</font>

946
00:33:59,910 --> 00:34:04,200
routines<font color="#E5E5E5"> that go across thousands of</font>

947
00:34:01,350 --> 00:34:05,850
hosts<font color="#E5E5E5"> and so when it comes to memory</font>

948
00:34:04,200 --> 00:34:08,970
scanning<font color="#CCCCCC"> EDR vendors are faced with it</font>

949
00:34:05,850 --> 00:34:10,770
with it with a choice right<font color="#E5E5E5"> and so one</font>

950
00:34:08,969 --> 00:34:12,870
thing<font color="#E5E5E5"> they can do is maybe focus on</font>

951
00:34:10,770 --> 00:34:16,050
executable<font color="#E5E5E5"> reasons of memory</font>

952
00:34:12,870 --> 00:34:17,969
the second might<font color="#CCCCCC"> be to only scan at set</font>

953
00:34:16,050 --> 00:34:19,950
intervals<font color="#CCCCCC"> so in the case</font><font color="#E5E5E5"> of process</font>

954
00:34:17,969 --> 00:34:21,480
hollowing where these these techniques

955
00:34:19,949 --> 00:34:24,359
are<font color="#CCCCCC"> more intense they might</font><font color="#E5E5E5"> only do it</font>

956
00:34:21,480 --> 00:34:26,130
once or<font color="#E5E5E5"> twice</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> day and the third one is</font>

957
00:34:24,360 --> 00:34:28,220
maybe you whitelist certain processes so

958
00:34:26,130 --> 00:34:30,840
you only look for<font color="#E5E5E5"> the suspicious ones</font>

959
00:34:28,219 --> 00:34:32,659
but this choice is basically the chink

960
00:34:30,840 --> 00:34:36,240
<font color="#E5E5E5">in the armor</font><font color="#CCCCCC"> that lets us basically</font>

961
00:34:32,659 --> 00:34:37,560
bypass<font color="#E5E5E5"> it</font><font color="#CCCCCC"> link remain hidden and we can</font>

962
00:34:36,239 --> 00:34:39,479
take the idea<font color="#E5E5E5"> of process on it right we</font>

963
00:34:37,560 --> 00:34:41,040
know<font color="#E5E5E5"> this is intensive well what if we</font>

964
00:34:39,480 --> 00:34:42,600
iterate<font color="#E5E5E5"> on this idea and we apply</font><font color="#CCCCCC"> it to</font>

965
00:34:41,040 --> 00:34:44,550
<font color="#CCCCCC">dear levels I mean it's a bit</font>

966
00:34:42,600 --> 00:34:46,679
unrealistic to expect an easier agent to

967
00:34:44,550 --> 00:34:48,600
literally<font color="#E5E5E5"> compare every</font><font color="#CCCCCC"> DLLs load it's</font>

968
00:34:46,679 --> 00:34:50,040
<font color="#CCCCCC">what it</font><font color="#E5E5E5"> looks like on this and if you</font>

969
00:34:48,600 --> 00:34:51,900
start<font color="#E5E5E5"> doing this what's the customer say</font>

970
00:34:50,040 --> 00:34:54,570
like are<font color="#E5E5E5"> my CPUs a hundred percent can</font>

971
00:34:51,900 --> 00:34:56,070
you stop this now<font color="#E5E5E5"> so we can exploit</font>

972
00:34:54,570 --> 00:34:58,410
<font color="#E5E5E5">something like this to basically go</font>

973
00:34:56,070 --> 00:35:00,510
don't notice and so dealing<font color="#E5E5E5"> works in</font>

974
00:34:58,410 --> 00:35:02,879
<font color="#CCCCCC">exactly the same</font><font color="#E5E5E5"> way we we coerced a</font>

975
00:35:00,510 --> 00:35:06,060
program to load a legitimate<font color="#E5E5E5"> DLL so in</font>

976
00:35:02,880 --> 00:35:07,590
this case<font color="#CCCCCC"> API do</font><font color="#E5E5E5"> we then overwrite it</font>

977
00:35:06,060 --> 00:35:09,630
with<font color="#E5E5E5"> our reflective DLL or our payload</font>

978
00:35:07,590 --> 00:35:11,280
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we start a thread and the key thing</font>

979
00:35:09,630 --> 00:35:13,110
here is<font color="#CCCCCC"> that three Maps back</font><font color="#E5E5E5"> to an</font>

980
00:35:11,280 --> 00:35:16,350
legitimately map DLL that is not

981
00:35:13,110 --> 00:35:18,210
suspicious<font color="#E5E5E5"> in itself</font><font color="#CCCCCC"> and again there's</font>

982
00:35:16,350 --> 00:35:20,810
no<font color="#E5E5E5"> readwrite executable memory region</font>

983
00:35:18,210 --> 00:35:21,950
and so these put<font color="#E5E5E5"> Indians</font><font color="#CCCCCC"> in a bind</font>

984
00:35:20,810 --> 00:35:23,000
because they have to then<font color="#CCCCCC"> start</font>

985
00:35:21,950 --> 00:35:25,129
comparing<font color="#E5E5E5"> all these things it's</font>

986
00:35:23,000 --> 00:35:25,990
intensive<font color="#E5E5E5"> and perhaps they need new ways</font>

987
00:35:25,130 --> 00:35:27,800
<font color="#E5E5E5">of thinking</font>

988
00:35:25,990 --> 00:35:29,209
incidentally if you've used module

989
00:35:27,800 --> 00:35:31,100
stomping on cobalt strike this is what

990
00:35:29,210 --> 00:35:32,600
it does<font color="#CCCCCC"> it loads in a DLL then</font><font color="#E5E5E5"> it</font>

991
00:35:31,100 --> 00:35:34,310
<font color="#CCCCCC">overwrites the tech</font><font color="#E5E5E5"> section with beacon</font>

992
00:35:32,600 --> 00:35:36,200
and<font color="#CCCCCC"> base and starts it running</font><font color="#E5E5E5"> and the</font>

993
00:35:34,310 --> 00:35:38,450
idea is<font color="#CCCCCC"> to beat that</font><font color="#E5E5E5"> that large scale</font><font color="#CCCCCC"> to</font>

994
00:35:36,200 --> 00:35:46,220
<font color="#CCCCCC">mate and automation in terms of</font>

995
00:35:38,450 --> 00:35:48,020
suspicious threads however can come and

996
00:35:46,220 --> 00:35:50,089
take<font color="#E5E5E5"> this idea further right and and</font>

997
00:35:48,020 --> 00:35:53,270
target like<font color="#E5E5E5"> fund them</font><font color="#CCCCCC"> into weaknesses</font>

998
00:35:50,090 --> 00:35:56,780
and how memory scanning works<font color="#CCCCCC"> and so we</font>

999
00:35:53,270 --> 00:35:58,190
mentioned<font color="#CCCCCC"> before that you tend</font><font color="#E5E5E5"> to have</font>

1000
00:35:56,780 --> 00:36:00,980
<font color="#CCCCCC">to scale which set in terms like you</font>

1001
00:35:58,190 --> 00:36:02,630
can't scan 24/7<font color="#E5E5E5"> and similarly it's very</font>

1002
00:36:00,980 --> 00:36:05,810
sensible<font color="#E5E5E5"> to just look for executable</font>

1003
00:36:02,630 --> 00:36:08,900
<font color="#E5E5E5">reasons of memory so what if we can hide</font>

1004
00:36:05,810 --> 00:36:10,520
a payload in read-only memory<font color="#E5E5E5"> like</font>

1005
00:36:08,900 --> 00:36:12,830
height like lay low while<font color="#CCCCCC"> the memories</font>

1006
00:36:10,520 --> 00:36:14,570
can takes place<font color="#CCCCCC"> and then jump back</font><font color="#E5E5E5"> into</font>

1007
00:36:12,830 --> 00:36:16,580
memory<font color="#E5E5E5"> execute as normal after it's gone</font>

1008
00:36:14,570 --> 00:36:17,900
<font color="#CCCCCC">and then when the</font><font color="#E5E5E5"> next memory scan comes</font>

1009
00:36:16,580 --> 00:36:19,160
we jump back<font color="#E5E5E5"> into read-only memory</font>

1010
00:36:17,900 --> 00:36:22,100
<font color="#E5E5E5">wait for it to come</font><font color="#CCCCCC"> back</font><font color="#E5E5E5"> and we jump</font>

1011
00:36:19,160 --> 00:36:23,990
back again<font color="#E5E5E5"> and there is a technique</font>

1012
00:36:22,100 --> 00:36:27,560
called<font color="#CCCCCC"> gargle which was written by a</font>

1013
00:36:23,990 --> 00:36:29,600
researcher Josh<font color="#E5E5E5"> Los Pinos</font><font color="#CCCCCC"> oh that</font>

1014
00:36:27,560 --> 00:36:30,860
basically does<font color="#CCCCCC"> it exactly</font><font color="#E5E5E5"> this and he's</font>

1015
00:36:29,600 --> 00:36:33,440
basically<font color="#E5E5E5"> the gift version of this right</font>

1016
00:36:30,860 --> 00:36:35,330
<font color="#E5E5E5">when anyone looks for us we hide and</font>

1017
00:36:33,440 --> 00:36:35,690
then when they're gone<font color="#E5E5E5"> we when the coast</font>

1018
00:36:35,330 --> 00:36:41,120
is<font color="#CCCCCC"> clear</font>

1019
00:36:35,690 --> 00:36:43,430
we jump back<font color="#E5E5E5"> out and</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> high level it</font>

1020
00:36:41,120 --> 00:36:44,690
works like this<font color="#E5E5E5"> so we're good</font><font color="#CCCCCC"> we The</font>

1021
00:36:43,430 --> 00:36:47,210
<font color="#CCCCCC">Gargoyle pillar</font><font color="#E5E5E5"> is gonna execute</font><font color="#CCCCCC"> some</font>

1022
00:36:44,690 --> 00:36:48,890
<font color="#CCCCCC">centaur some</font><font color="#E5E5E5"> code and it's then going</font><font color="#CCCCCC"> to</font>

1023
00:36:47,210 --> 00:36:50,600
set up a timer<font color="#E5E5E5"> and this time are</font>

1024
00:36:48,890 --> 00:36:52,759
basically when it's triggered<font color="#CCCCCC"> is gonna</font>

1025
00:36:50,600 --> 00:36:55,549
call a car magical callback of an

1026
00:36:52,760 --> 00:36:57,700
attacker<font color="#CCCCCC"> to find function it then marks</font>

1027
00:36:55,550 --> 00:37:00,590
itself is read-only<font color="#E5E5E5"> and goes to sleep</font>

1028
00:36:57,700 --> 00:37:02,029
when<font color="#E5E5E5"> that timer expires this callback is</font>

1029
00:37:00,590 --> 00:37:04,640
going to happen<font color="#E5E5E5"> and essentially this</font>

1030
00:37:02,030 --> 00:37:06,980
uses<font color="#CCCCCC"> Windows asynchronous procedure call</font>

1031
00:37:04,640 --> 00:37:08,000
into a<font color="#CCCCCC"> rock gadget this is quite</font>

1032
00:37:06,980 --> 00:37:10,130
<font color="#E5E5E5">complicated I</font><font color="#CCCCCC"> don't know too much</font><font color="#E5E5E5"> into</font>

1033
00:37:08,000 --> 00:37:11,750
<font color="#CCCCCC">it but it basically</font><font color="#E5E5E5"> it rocks into</font>

1034
00:37:10,130 --> 00:37:14,030
virtual protect and marked<font color="#CCCCCC"> yourself back</font>

1035
00:37:11,750 --> 00:37:15,530
as executable<font color="#CCCCCC"> and so in this way we</font><font color="#E5E5E5"> can</font>

1036
00:37:14,030 --> 00:37:17,920
keep<font color="#E5E5E5"> doing that that transition between</font>

1037
00:37:15,530 --> 00:37:20,630
read-only<font color="#E5E5E5"> excuse</font><font color="#CCCCCC"> or read-only executable</font>

1038
00:37:17,920 --> 00:37:25,280
<font color="#CCCCCC">and so going back to</font><font color="#E5E5E5"> this kind</font><font color="#CCCCCC"> of</font>

1039
00:37:20,630 --> 00:37:31,270
<font color="#E5E5E5">bird's-eye view of</font><font color="#CCCCCC"> process memory we</font><font color="#E5E5E5"> can</font>

1040
00:37:25,280 --> 00:37:31,270
see that<font color="#CCCCCC"> our read-only</font><font color="#E5E5E5"> goggle payload is</font>

1041
00:37:31,300 --> 00:37:36,190
this way<font color="#E5E5E5"> this is in a sleeping</font><font color="#CCCCCC"> state and</font>

1042
00:37:33,550 --> 00:37:37,630
we<font color="#E5E5E5"> can see the read-only goggle</font><font color="#CCCCCC"> so if we</font>

1043
00:37:36,190 --> 00:37:41,350
memory scan now there's nothing really

1044
00:37:37,630 --> 00:37:43,210
<font color="#CCCCCC">suspicious</font><font color="#E5E5E5"> about this</font><font color="#CCCCCC"> and then once that</font>

1045
00:37:41,350 --> 00:37:44,830
<font color="#E5E5E5">timer kicks in</font><font color="#CCCCCC"> we Rob into virtual</font>

1046
00:37:43,210 --> 00:37:47,230
protect we mark our self<font color="#CCCCCC"> as executable</font>

1047
00:37:44,830 --> 00:37:51,340
we do some<font color="#E5E5E5"> work and so for a very brief</font>

1048
00:37:47,230 --> 00:37:53,740
period<font color="#E5E5E5"> we suddenly have a thread that</font>

1049
00:37:51,340 --> 00:37:54,880
would be flagged by memory<font color="#CCCCCC"> nurses but in</font>

1050
00:37:53,740 --> 00:37:58,029
a blink<font color="#E5E5E5"> of an eye it's gone again and</font>

1051
00:37:54,880 --> 00:37:59,950
then we're back<font color="#E5E5E5"> to read-only and so this</font>

1052
00:37:58,030 --> 00:38:01,900
puts<font color="#CCCCCC"> Indy our vendors</font><font color="#E5E5E5"> into a bit of a</font>

1053
00:37:59,950 --> 00:38:04,480
bind<font color="#E5E5E5"> right because your choice now is</font>

1054
00:38:01,900 --> 00:38:05,830
<font color="#CCCCCC">that you just</font><font color="#E5E5E5"> hope you catch it or you</font>

1055
00:38:04,480 --> 00:38:07,990
start looking through read-only memory

1056
00:38:05,830 --> 00:38:09,970
the difficulty is if you start looking

1057
00:38:07,990 --> 00:38:11,439
<font color="#E5E5E5">through read-only memory it's going to</font>

1058
00:38:09,970 --> 00:38:13,359
<font color="#E5E5E5">increase the</font><font color="#CCCCCC"> amount of memory</font><font color="#E5E5E5"> that you</font>

1059
00:38:11,440 --> 00:38:15,760
have to look for but<font color="#CCCCCC"> orders of magnitude</font>

1060
00:38:13,360 --> 00:38:18,910
more<font color="#CCCCCC"> than than what you have</font>

1061
00:38:15,760 --> 00:38:20,200
and additionally either way like we<font color="#CCCCCC"> can</font>

1062
00:38:18,910 --> 00:38:21,370
just<font color="#E5E5E5"> obfuscate this it can just like</font>

1063
00:38:20,200 --> 00:38:22,750
random but<font color="#E5E5E5"> and we would</font><font color="#CCCCCC"> just use the</font>

1064
00:38:21,370 --> 00:38:24,040
random<font color="#CCCCCC"> XOR thing or</font><font color="#E5E5E5"> something like that</font>

1065
00:38:22,750 --> 00:38:25,690
<font color="#E5E5E5">and it's not gonna have any</font>

1066
00:38:24,040 --> 00:38:31,000
<font color="#E5E5E5">distinguishing features into a</font><font color="#CCCCCC"> runtime</font>

1067
00:38:25,690 --> 00:38:32,500
then<font color="#E5E5E5"> it executes so the the goggle</font>

1068
00:38:31,000 --> 00:38:34,240
popped by itself doesn't actually<font color="#E5E5E5"> do</font>

1069
00:38:32,500 --> 00:38:36,910
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> apart from</font><font color="#CCCCCC"> popper message box</font>

1070
00:38:34,240 --> 00:38:38,290
so I wondered for a<font color="#CCCCCC"> long time about</font>

1071
00:38:36,910 --> 00:38:40,629
whether you<font color="#E5E5E5"> could use it to do something</font>

1072
00:38:38,290 --> 00:38:42,580
<font color="#CCCCCC">useful like stage beacon or PO box</font>

1073
00:38:40,630 --> 00:38:44,740
trucks beacon payload<font color="#E5E5E5"> and so I reached</font>

1074
00:38:42,580 --> 00:38:50,140
the progress in the summer demonstrating

1075
00:38:44,740 --> 00:38:53,790
this and I<font color="#E5E5E5"> I have got demo so</font><font color="#CCCCCC"> I'll try</font>

1076
00:38:50,140 --> 00:38:53,790
and<font color="#CCCCCC"> do it in</font><font color="#E5E5E5"> the shore mat time</font>

1077
00:38:59,250 --> 00:39:06,610
right so at the beginning<font color="#CCCCCC"> this is goggle</font>

1078
00:39:04,120 --> 00:39:08,140
in<font color="#E5E5E5"> its sleeping</font><font color="#CCCCCC"> state right and so I try</font>

1079
00:39:06,610 --> 00:39:10,570
<font color="#E5E5E5">indicate there I</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> read it from</font><font color="#CCCCCC"> here</font>

1080
00:39:08,140 --> 00:39:21,490
<font color="#E5E5E5">but</font><font color="#CCCCCC"> um that's the location</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> our</font>

1081
00:39:10,570 --> 00:39:23,860
payload<font color="#E5E5E5"> so one second let me just</font><font color="#CCCCCC"> do so</font>

1082
00:39:21,490 --> 00:39:25,290
<font color="#E5E5E5">if we look at it now</font><font color="#CCCCCC"> all this</font><font color="#E5E5E5"> is</font>

1083
00:39:23,860 --> 00:39:28,210
horrible

1084
00:39:25,290 --> 00:39:31,060
basically it's<font color="#E5E5E5"> read-only right this is</font>

1085
00:39:28,210 --> 00:39:34,200
not suspicious you can see it just just

1086
00:39:31,060 --> 00:39:37,779
<font color="#CCCCCC">this read away for a bit</font>

1087
00:39:34,200 --> 00:39:39,129
and<font color="#E5E5E5"> then this is just demonstrating that</font>

1088
00:39:37,780 --> 00:39:40,270
there's no suspicious<font color="#E5E5E5"> thread currently</font>

1089
00:39:39,130 --> 00:39:43,030
<font color="#CCCCCC">there isn't</font><font color="#E5E5E5"> there's no memory</font><font color="#CCCCCC"> non Alize</font>

1090
00:39:40,270 --> 00:39:45,370
and so basically the time is going<font color="#CCCCCC"> to</font>

1091
00:39:43,030 --> 00:39:47,200
cut kick in in in a few<font color="#E5E5E5"> seconds and</font>

1092
00:39:45,370 --> 00:39:50,980
<font color="#E5E5E5">we're gonna get</font><font color="#CCCCCC"> shelled back etc we can</font>

1093
00:39:47,200 --> 00:39:57,089
<font color="#E5E5E5">interact</font><font color="#CCCCCC"> power block</font><font color="#E5E5E5"> if we then go look</font>

1094
00:39:50,980 --> 00:39:57,090
at this memory region now we refresh oh

1095
00:39:57,270 --> 00:40:11,000
oh sorry let<font color="#E5E5E5"> me</font><font color="#CCCCCC"> just move this</font>

1096
00:40:02,430 --> 00:40:11,000
oh sorry sorry<font color="#CCCCCC"> so let</font><font color="#E5E5E5"> me close this</font>

1097
00:40:16,150 --> 00:40:24,109
so<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> is very</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> can't see</font>

1098
00:40:18,260 --> 00:40:25,280
the mouse<font color="#E5E5E5"> so basically I'm sorting you</font>

1099
00:40:24,109 --> 00:40:26,900
above this<font color="#E5E5E5"> but this is read</font><font color="#CCCCCC"> right</font>

1100
00:40:25,280 --> 00:40:28,339
executable now so<font color="#CCCCCC"> it's wrapped into</font><font color="#E5E5E5"> that</font>

1101
00:40:26,900 --> 00:40:30,950
virtual protect its marked itself as

1102
00:40:28,339 --> 00:40:32,869
executable<font color="#CCCCCC"> and also we noticed</font><font color="#E5E5E5"> these</font>

1103
00:40:30,950 --> 00:40:35,328
massive<font color="#CCCCCC"> readwrite executable regions</font>

1104
00:40:32,869 --> 00:40:40,849
which were surprising<font color="#E5E5E5"> our beacon</font><font color="#CCCCCC"> in</font>

1105
00:40:35,329 --> 00:40:42,260
memory through basically<font color="#E5E5E5"> just</font>

1106
00:40:40,849 --> 00:40:43,849
demonstrate now so this is beacon using

1107
00:40:42,260 --> 00:40:45,440
no memory<font color="#CCCCCC"> of a</font><font color="#E5E5E5"> the tool to try and make</font>

1108
00:40:43,849 --> 00:40:46,970
<font color="#CCCCCC">it obvious that it's there</font><font color="#E5E5E5"> so if we do</font>

1109
00:40:45,440 --> 00:40:48,890
get injected<font color="#E5E5E5"> thread now unsurprisingly</font>

1110
00:40:46,970 --> 00:40:50,538
<font color="#CCCCCC">we see</font><font color="#E5E5E5"> we've seen signs of malware signs</font>

1111
00:40:48,890 --> 00:40:51,950
<font color="#CCCCCC">are compromised and we see those page</font>

1112
00:40:50,539 --> 00:40:56,270
execute<font color="#CCCCCC"> read/write pages</font><font color="#E5E5E5"> I've been</font>

1113
00:40:51,950 --> 00:40:57,890
talking about<font color="#CCCCCC"> and</font><font color="#E5E5E5"> similarly</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> post</font>

1114
00:40:56,270 --> 00:41:01,910
<font color="#CCCCCC">explorer we</font><font color="#E5E5E5"> can see a suspicious thread</font>

1115
00:40:57,890 --> 00:41:03,770
that points to nothing<font color="#CCCCCC"> basically so this</font>

1116
00:41:01,910 --> 00:41:05,779
<font color="#E5E5E5">was configured to only work for a minute</font>

1117
00:41:03,770 --> 00:41:08,329
and so I think it's like<font color="#CCCCCC"> 47 or</font><font color="#E5E5E5"> something</font>

1118
00:41:05,780 --> 00:41:10,220
now so<font color="#E5E5E5"> basically in a few seconds the</font>

1119
00:41:08,329 --> 00:41:13,460
<font color="#E5E5E5">gargle</font><font color="#CCCCCC"> pops gonna tear down beacon</font><font color="#E5E5E5"> any</font>

1120
00:41:10,220 --> 00:41:16,308
any remainder of<font color="#E5E5E5"> being there and then go</font>

1121
00:41:13,460 --> 00:41:20,990
to sleep<font color="#CCCCCC"> so now if i refresh it</font><font color="#E5E5E5"> now</font>

1122
00:41:16,309 --> 00:41:23,720
<font color="#E5E5E5">oh it's now goats up memory dress again</font>

1123
00:41:20,990 --> 00:41:25,729
<font color="#E5E5E5">it's read-only and just to demonstrate</font>

1124
00:41:23,720 --> 00:41:27,348
<font color="#E5E5E5">as well there's no signs of beacon ever</font>

1125
00:41:25,730 --> 00:41:29,210
being there<font color="#CCCCCC"> and so we can keep</font><font color="#E5E5E5"> doing</font>

1126
00:41:27,349 --> 00:41:31,160
this at a<font color="#E5E5E5"> time alright we can do it for</font>

1127
00:41:29,210 --> 00:41:33,829
5 minutes for<font color="#E5E5E5"> half an hour for 4 hours</font>

1128
00:41:31,160 --> 00:41:35,538
<font color="#CCCCCC">but you can</font><font color="#E5E5E5"> just pops up briefly and</font><font color="#CCCCCC"> we</font>

1129
00:41:33,829 --> 00:41:37,809
<font color="#E5E5E5">can do the post expertise</font><font color="#CCCCCC"> and get back</font>

1130
00:41:35,539 --> 00:41:37,809
<font color="#E5E5E5">whatever</font>

1131
00:41:43,010 --> 00:41:46,149
[Music]

1132
00:41:46,420 --> 00:41:51,420
<font color="#E5E5E5">am I on the exit and is there okay</font><font color="#CCCCCC"> okay</font>

1133
00:41:49,000 --> 00:41:51,420
<font color="#CCCCCC">sorry</font>

1134
00:41:55,799 --> 00:42:00,490
cool<font color="#E5E5E5"> and so some of the research I've</font>

1135
00:41:59,319 --> 00:42:02,109
<font color="#CCCCCC">been doing most recently which was hope</font>

1136
00:42:00,490 --> 00:42:04,990
he's get ready for<font color="#E5E5E5"> now by heaven he's</font>

1137
00:42:02,109 --> 00:42:06,730
basically writing a custom implant<font color="#E5E5E5"> and</font>

1138
00:42:04,990 --> 00:42:08,740
essentially so I rewrote the goggle

1139
00:42:06,730 --> 00:42:11,230
payload<font color="#E5E5E5"> to basically act</font><font color="#CCCCCC"> as a</font><font color="#E5E5E5"> DLL loader</font>

1140
00:42:08,740 --> 00:42:13,118
<font color="#E5E5E5">so this this basically loads a custom</font>

1141
00:42:11,230 --> 00:42:15,160
payload into memory which would retrieve

1142
00:42:13,119 --> 00:42:16,569
a task<font color="#E5E5E5"> execute it and go to sleep</font><font color="#CCCCCC"> and</font>

1143
00:42:15,160 --> 00:42:18,430
the key<font color="#E5E5E5"> thing about this is this in</font>

1144
00:42:16,569 --> 00:42:20,349
<font color="#E5E5E5">memory for like a second or</font><font color="#CCCCCC"> two seconds</font>

1145
00:42:18,430 --> 00:42:21,490
<font color="#CCCCCC">as this is incredibly difficult to</font><font color="#E5E5E5"> spot</font>

1146
00:42:20,349 --> 00:42:25,289
if you're<font color="#E5E5E5"> doing this this memory</font>

1147
00:42:21,490 --> 00:42:33,250
analysis sorry than that

1148
00:42:25,289 --> 00:42:34,720
so in summary so I start<font color="#E5E5E5"> this talk by</font>

1149
00:42:33,250 --> 00:42:36,099
<font color="#CCCCCC">giving a bit</font><font color="#E5E5E5"> of a</font><font color="#CCCCCC"> rundown</font><font color="#E5E5E5"> about what you</font>

1150
00:42:34,720 --> 00:42:38,439
<font color="#CCCCCC">do eyes</font><font color="#E5E5E5"> are what their capabilities are</font>

1151
00:42:36,099 --> 00:42:40,210
<font color="#CCCCCC">and what</font><font color="#E5E5E5"> makes them so powerful and then</font>

1152
00:42:38,440 --> 00:42:42,460
I've presented<font color="#E5E5E5"> three strategies that we</font>

1153
00:42:40,210 --> 00:42:44,170
use<font color="#CCCCCC"> the</font><font color="#E5E5E5"> MWR for trying to</font><font color="#CCCCCC"> bypass them</font>

1154
00:42:42,460 --> 00:42:45,730
and avoid the detection<font color="#E5E5E5"> and again they</font>

1155
00:42:44,170 --> 00:42:47,200
were sort of<font color="#E5E5E5"> misdirecting analysis so</font>

1156
00:42:45,730 --> 00:42:49,450
manipulating<font color="#CCCCCC"> command-line</font><font color="#E5E5E5"> spoofing</font>

1157
00:42:47,200 --> 00:42:51,250
parent<font color="#CCCCCC"> bits causing</font><font color="#E5E5E5"> EDRs to record</font>

1158
00:42:49,450 --> 00:42:53,710
faulty information<font color="#CCCCCC"> that basically</font>

1159
00:42:51,250 --> 00:42:55,930
<font color="#E5E5E5">doesn't get us caught the second</font><font color="#CCCCCC"> kind</font><font color="#E5E5E5"> of</font>

1160
00:42:53,710 --> 00:42:57,579
theme was<font color="#CCCCCC"> minimizing execution so</font>

1161
00:42:55,930 --> 00:42:59,558
avoiding<font color="#E5E5E5"> spawning processes and then if</font>

1162
00:42:57,579 --> 00:43:01,660
we do<font color="#E5E5E5"> blending into</font><font color="#CCCCCC"> the environment</font><font color="#E5E5E5"> and</font>

1163
00:42:59,559 --> 00:43:03,849
the last<font color="#E5E5E5"> part was</font><font color="#CCCCCC"> memorization so how we</font>

1164
00:43:01,660 --> 00:43:08,740
can<font color="#CCCCCC"> bypass memory scanners and basically</font>

1165
00:43:03,849 --> 00:43:10,119
remain<font color="#E5E5E5"> on unseen in in memory</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> terms</font>

1166
00:43:08,740 --> 00:43:11,649
of<font color="#CCCCCC"> MWR our approach is kind of</font>

1167
00:43:10,119 --> 00:43:13,119
progressive in heart<font color="#CCCCCC"> enhancement</font><font color="#E5E5E5"> so we</font>

1168
00:43:11,650 --> 00:43:14,589
developed these memory and evasion

1169
00:43:13,119 --> 00:43:16,750
techniques which as I<font color="#E5E5E5"> said we apply to</font>

1170
00:43:14,589 --> 00:43:18,069
<font color="#CCCCCC">bacon and then</font><font color="#E5E5E5"> we tie in this modular</font>

1171
00:43:16,750 --> 00:43:21,880
framework<font color="#E5E5E5"> that we use it gives us a</font>

1172
00:43:18,069 --> 00:43:24,180
powerful post exploitation capability

1173
00:43:21,880 --> 00:43:27,150
and then we're testing<font color="#E5E5E5"> things like a</font>

1174
00:43:24,180 --> 00:43:29,500
gargoyle enabled minimal minimal implant

1175
00:43:27,150 --> 00:43:31,960
<font color="#E5E5E5">is this game over the defenders</font>

1176
00:43:29,500 --> 00:43:33,069
obviously not<font color="#CCCCCC"> there's so many controls</font>

1177
00:43:31,960 --> 00:43:34,210
that you<font color="#E5E5E5"> can</font><font color="#CCCCCC"> actually input</font><font color="#E5E5E5"> on the</font>

1178
00:43:33,069 --> 00:43:36,038
endpoint<font color="#CCCCCC"> right the classic ones</font>

1179
00:43:34,210 --> 00:43:37,599
disabling macros application<font color="#CCCCCC"> wireless</font>

1180
00:43:36,039 --> 00:43:40,779
thing we stopped an attack again<font color="#E5E5E5"> holding</font>

1181
00:43:37,599 --> 00:43:42,819
the first<font color="#E5E5E5"> place</font><font color="#CCCCCC"> and then similarly this</font>

1182
00:43:40,779 --> 00:43:44,140
<font color="#CCCCCC">is</font><font color="#E5E5E5"> obviously focused on just EDR and a</font>

1183
00:43:42,819 --> 00:43:46,058
windows-based<font color="#E5E5E5"> host because these are the</font>

1184
00:43:44,140 --> 00:43:48,009
<font color="#E5E5E5">most common sources of compromise</font>

1185
00:43:46,059 --> 00:43:49,510
<font color="#E5E5E5">there's</font><font color="#CCCCCC"> so near the data sources log</font>

1186
00:43:48,010 --> 00:43:51,369
sources event types that you<font color="#CCCCCC"> can</font>

1187
00:43:49,510 --> 00:43:53,230
actually use<font color="#CCCCCC"> to detect stuff</font><font color="#E5E5E5"> and I think</font>

1188
00:43:51,369 --> 00:43:54,700
if you set as<font color="#E5E5E5"> many trip</font><font color="#CCCCCC"> wires</font><font color="#E5E5E5"> and you</font>

1189
00:43:53,230 --> 00:43:56,170
can start aggregating on<font color="#CCCCCC"> anomalous</font>

1190
00:43:54,700 --> 00:43:58,149
<font color="#E5E5E5">behavior on</font><font color="#CCCCCC"> host since it is</font><font color="#E5E5E5"> part of</font>

1191
00:43:56,170 --> 00:44:01,750
your<font color="#E5E5E5"> threat hunting then you can still</font>

1192
00:43:58,150 --> 00:44:03,339
detect<font color="#E5E5E5"> these types of attacks very</font>

1193
00:44:01,750 --> 00:44:03,599
<font color="#E5E5E5">quickly if you aren't what are some of</font>

1194
00:44:03,339 --> 00:44:05,940
my

1195
00:44:03,599 --> 00:44:08,670
future<font color="#CCCCCC"> ideas and perhaps</font><font color="#E5E5E5"> where target</font>

1196
00:44:05,940 --> 00:44:10,380
attacks may go so the<font color="#E5E5E5"> first one is into</font>

1197
00:44:08,670 --> 00:44:12,390
the<font color="#CCCCCC"> kernel so</font><font color="#E5E5E5"> this is best</font><font color="#CCCCCC"> Dmitry</font><font color="#E5E5E5"> by</font>

1198
00:44:10,380 --> 00:44:14,220
<font color="#E5E5E5">Turla malware and we actually saw</font><font color="#CCCCCC"> it on</font>

1199
00:44:12,390 --> 00:44:16,618
an<font color="#E5E5E5"> IR job like basically an apt just</font>

1200
00:44:14,220 --> 00:44:18,419
using this in the world<font color="#CCCCCC"> and obviously</font>

1201
00:44:16,619 --> 00:44:19,739
<font color="#CCCCCC">you as a vendor have no control over the</font>

1202
00:44:18,420 --> 00:44:20,940
environment<font color="#CCCCCC"> that your agent goes and so</font>

1203
00:44:19,739 --> 00:44:22,680
if everyone's running<font color="#E5E5E5"> with local admin</font>

1204
00:44:20,940 --> 00:44:27,359
then you don't really have<font color="#E5E5E5"> much</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> choice</font>

1205
00:44:22,680 --> 00:44:29,808
about<font color="#E5E5E5"> it</font><font color="#CCCCCC"> and there is an</font><font color="#E5E5E5"> awesome endgame</font>

1206
00:44:27,359 --> 00:44:32,328
blog on<font color="#CCCCCC"> Stan's on this on this malware</font>

1207
00:44:29,809 --> 00:44:35,190
that I would also recommend reading

1208
00:44:32,329 --> 00:44:37,079
<font color="#E5E5E5">abusing protected processes was another</font>

1209
00:44:35,190 --> 00:44:38,430
one was hoping to do in this demo but I

1210
00:44:37,079 --> 00:44:39,420
spent like a day<font color="#E5E5E5"> trying to it I didn't</font>

1211
00:44:38,430 --> 00:44:40,769
realize they patched here then James

1212
00:44:39,420 --> 00:44:43,529
<font color="#CCCCCC">foster told me and I fell very</font><font color="#E5E5E5"> stupid</font>

1213
00:44:40,769 --> 00:44:46,799
<font color="#E5E5E5">but he released</font><font color="#CCCCCC"> another version of it</font>

1214
00:44:43,529 --> 00:44:50,579
<font color="#E5E5E5">the other day and so basically</font><font color="#CCCCCC"> off to</font>

1215
00:44:46,799 --> 00:44:52,559
New Zealand<font color="#CCCCCC"> ideas</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> TCP</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> protective</font>

1216
00:44:50,579 --> 00:44:55,319
process lie<font color="#E5E5E5"> so if you can inject your</font>

1217
00:44:52,559 --> 00:44:56,369
rat into a protective process like know

1218
00:44:55,319 --> 00:44:57,690
what<font color="#CCCCCC"> they're not</font><font color="#E5E5E5"> will be able to see it</font>

1219
00:44:56,369 --> 00:44:58,019
<font color="#E5E5E5">unless they're doing some crazy kernel</font>

1220
00:44:57,690 --> 00:45:01,799
and

1221
00:44:58,019 --> 00:45:03,359
memory scanning<font color="#E5E5E5"> increased monitoring API</font>

1222
00:45:01,799 --> 00:45:04,559
uses as I think<font color="#CCCCCC"> the direction that</font>

1223
00:45:03,359 --> 00:45:07,109
Microsoft are going I may be mistaken

1224
00:45:04,559 --> 00:45:08,759
but in terms of ATP<font color="#E5E5E5"> and</font><font color="#CCCCCC"> it's looking</font>

1225
00:45:07,109 --> 00:45:10,410
from the kernel<font color="#E5E5E5"> looking at what</font>

1226
00:45:08,759 --> 00:45:12,119
processes are making weird API calls

1227
00:45:10,410 --> 00:45:14,160
like<font color="#E5E5E5"> create a remote thread and then</font>

1228
00:45:12,119 --> 00:45:17,460
basically<font color="#E5E5E5"> making</font><font color="#CCCCCC"> the judgment or</font><font color="#E5E5E5"> some ml</font>

1229
00:45:14,160 --> 00:45:18,719
whether<font color="#E5E5E5"> they're anomalous or not</font><font color="#CCCCCC"> and</font>

1230
00:45:17,460 --> 00:45:20,339
then<font color="#E5E5E5"> the last one is I wonder whether</font>

1231
00:45:18,719 --> 00:45:22,109
it's whether there's a gradual

1232
00:45:20,339 --> 00:45:24,089
degradation of<font color="#E5E5E5"> trust in terms of process</font>

1233
00:45:22,109 --> 00:45:25,650
data and<font color="#CCCCCC"> kawaman</font><font color="#E5E5E5"> arguments in</font><font color="#CCCCCC"> terms of</font>

1234
00:45:24,089 --> 00:45:27,660
is a<font color="#E5E5E5"> large-scale alerting it and</font>

1235
00:45:25,650 --> 00:45:29,269
detection which again might reinforce

1236
00:45:27,660 --> 00:45:31,710
the kind<font color="#E5E5E5"> of kernel view of the world</font>

1237
00:45:29,269 --> 00:45:33,149
<font color="#E5E5E5">that's everything for me I'm here a week</font>

1238
00:45:31,710 --> 00:45:36,769
so feel free<font color="#E5E5E5"> to grab me and I'll answer</font>

1239
00:45:33,150 --> 00:45:36,769
any questions now<font color="#CCCCCC"> works as well</font>

1240
00:45:43,180 --> 00:45:45,710
in which case I guess<font color="#CCCCCC"> I'll finish</font><font color="#E5E5E5"> thank</font>

1241
00:45:44,830 --> 00:45:47,540
very much

1242
00:45:45,710 --> 00:45:58,920
[Applause]

1243
00:45:47,540 --> 00:45:58,920
[Music]

