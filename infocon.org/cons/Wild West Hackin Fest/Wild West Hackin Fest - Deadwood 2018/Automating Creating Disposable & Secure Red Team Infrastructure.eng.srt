1
00:00:00,100 --> 00:00:11,129
[Music]

2
00:00:08,269 --> 00:00:12,929
so welcome<font color="#CCCCCC"> to the talk we're gonna be</font>

3
00:00:11,130 --> 00:00:15,120
talking about<font color="#E5E5E5"> automating creating secure</font>

4
00:00:12,929 --> 00:00:17,070
disposable infrastructure<font color="#E5E5E5"> for red</font><font color="#CCCCCC"> teams</font>

5
00:00:15,120 --> 00:00:18,210
primarily using terraform<font color="#E5E5E5"> this is gonna</font>

6
00:00:17,070 --> 00:00:20,340
<font color="#E5E5E5">be an interesting talk because I've</font>

7
00:00:18,210 --> 00:00:23,730
<font color="#E5E5E5">acquired the confluence I've been here</font>

8
00:00:20,340 --> 00:00:26,009
<font color="#CCCCCC">so if you hear</font><font color="#E5E5E5"> just random really bad</font>

9
00:00:23,730 --> 00:00:30,900
coughs while I talk I<font color="#CCCCCC"> promise you I'm</font>

10
00:00:26,010 --> 00:00:32,489
not dying<font color="#CCCCCC"> it's just the con flu</font><font color="#E5E5E5"> so quick</font>

11
00:00:30,900 --> 00:00:34,260
<font color="#CCCCCC">Who am I slide because we got a lot of</font>

12
00:00:32,488 --> 00:00:35,459
content<font color="#E5E5E5"> to go through my name is</font>

13
00:00:34,260 --> 00:00:37,050
<font color="#CCCCCC">Michelle Oh I go by pipe leader on the</font>

14
00:00:35,460 --> 00:00:38,489
Twitter's<font color="#E5E5E5"> I'm a security analyst at</font>

15
00:00:37,050 --> 00:00:40,399
Black Hills InfoSec and I have a bunch

16
00:00:38,489 --> 00:00:43,649
<font color="#CCCCCC">of other</font><font color="#E5E5E5"> certs which nobody cares about</font>

17
00:00:40,399 --> 00:00:46,170
so let's talk about<font color="#CCCCCC"> let's see what we're</font>

18
00:00:43,649 --> 00:00:48,989
gonna talk about<font color="#E5E5E5"> this is basically gonna</font>

19
00:00:46,170 --> 00:00:50,460
be a terraform crash course and how<font color="#E5E5E5"> to</font>

20
00:00:48,989 --> 00:00:52,410
automate all<font color="#CCCCCC"> the</font><font color="#E5E5E5"> things infrastructure</font>

21
00:00:50,460 --> 00:00:54,270
rise at least<font color="#E5E5E5"> red team related but also</font>

22
00:00:52,410 --> 00:00:56,398
you could technically use the tool<font color="#E5E5E5"> that</font>

23
00:00:54,270 --> 00:00:58,949
we're<font color="#E5E5E5"> gonna talk</font><font color="#CCCCCC"> about for</font><font color="#E5E5E5"> DevOps</font>

24
00:00:56,399 --> 00:01:00,719
<font color="#CCCCCC">purchases as well</font><font color="#E5E5E5"> what this talk isn't</font>

25
00:00:58,949 --> 00:01:04,530
<font color="#E5E5E5">gonna be as a basic C to infrastructure</font>

26
00:01:00,719 --> 00:01:06,119
talk<font color="#E5E5E5"> so if you don't know what a</font>

27
00:01:04,530 --> 00:01:07,920
redirector is if you<font color="#E5E5E5"> don't know what a</font>

28
00:01:06,119 --> 00:01:08,880
<font color="#CCCCCC">c2 server is this might not</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> the talk</font>

29
00:01:07,920 --> 00:01:10,590
for<font color="#E5E5E5"> you</font>

30
00:01:08,880 --> 00:01:12,000
there was another talk right<font color="#CCCCCC"> after mine</font>

31
00:01:10,590 --> 00:01:15,090
that covered the basics of this but I

32
00:01:12,000 --> 00:01:16,530
think<font color="#CCCCCC"> it was</font><font color="#E5E5E5"> cancelled unfortunately but</font>

33
00:01:15,090 --> 00:01:18,600
<font color="#E5E5E5">this is not definitely</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> gonna be a</font>

34
00:01:16,530 --> 00:01:20,729
basic C to infrastructure talk so we're

35
00:01:18,600 --> 00:01:22,729
gonna cover things<font color="#E5E5E5"> cover some</font><font color="#CCCCCC"> things</font>

36
00:01:20,729 --> 00:01:25,439
that are a<font color="#E5E5E5"> little bit</font><font color="#CCCCCC"> more advanced so</font>

37
00:01:22,729 --> 00:01:27,658
<font color="#CCCCCC">let's talk about what's terraform</font>

38
00:01:25,439 --> 00:01:28,919
because<font color="#CCCCCC"> obviously not</font><font color="#E5E5E5"> everyone might not</font>

39
00:01:27,659 --> 00:01:30,689
know what terraform is so terraform is

40
00:01:28,920 --> 00:01:32,579
built by<font color="#CCCCCC"> hashey Corp</font><font color="#E5E5E5"> the creators of</font>

41
00:01:30,689 --> 00:01:35,279
packer and vagrant<font color="#CCCCCC"> and all of</font><font color="#E5E5E5"> those</font>

42
00:01:32,579 --> 00:01:36,809
awesome<font color="#E5E5E5"> tools so mainly terraform is a</font>

43
00:01:35,280 --> 00:01:38,610
tool<font color="#E5E5E5"> for building changing and</font>

44
00:01:36,810 --> 00:01:41,549
versioning infrastructure safely and

45
00:01:38,610 --> 00:01:43,020
efficiently<font color="#E5E5E5"> but</font><font color="#CCCCCC"> you can</font><font color="#E5E5E5"> really ignore</font>

46
00:01:41,549 --> 00:01:45,509
the definition<font color="#E5E5E5"> because all you really</font>

47
00:01:43,020 --> 00:01:48,240
need<font color="#CCCCCC"> to know</font><font color="#E5E5E5"> is it you build</font>

48
00:01:45,509 --> 00:01:50,520
infrastructure<font color="#CCCCCC"> with code</font><font color="#E5E5E5"> and with code I</font>

49
00:01:48,240 --> 00:01:52,110
mean<font color="#CCCCCC"> HCl hashey</font><font color="#E5E5E5"> Corp configuration</font>

50
00:01:50,520 --> 00:01:57,719
language so this<font color="#E5E5E5"> is a specific language</font>

51
00:01:52,110 --> 00:02:01,049
<font color="#CCCCCC">to terraform and after that there's an</font>

52
00:01:57,719 --> 00:02:03,030
execution plan<font color="#CCCCCC"> so when you run terraform</font>

53
00:02:01,049 --> 00:02:05,630
apply for example<font color="#CCCCCC"> which</font><font color="#E5E5E5"> we'll get into</font><font color="#CCCCCC"> a</font>

54
00:02:03,030 --> 00:02:08,788
bit later it actually<font color="#E5E5E5"> tells you what</font>

55
00:02:05,630 --> 00:02:10,079
infrastructure it will go and<font color="#CCCCCC"> create so</font>

56
00:02:08,788 --> 00:02:11,160
you don't mess<font color="#CCCCCC"> up creating</font>

57
00:02:10,080 --> 00:02:13,860
infrastructure<font color="#CCCCCC"> before you actually</font>

58
00:02:11,160 --> 00:02:16,049
deploy things it also has the concept of

59
00:02:13,860 --> 00:02:18,120
<font color="#E5E5E5">Blissett implicit dependencies meaning</font>

60
00:02:16,050 --> 00:02:20,460
<font color="#E5E5E5">that if you</font><font color="#CCCCCC"> set a implicit or explicit</font>

61
00:02:18,120 --> 00:02:23,670
dependency terraform is smart enough<font color="#E5E5E5"> to</font>

62
00:02:20,460 --> 00:02:25,440
know that a<font color="#E5E5E5"> certain resource needs to be</font>

63
00:02:23,670 --> 00:02:27,510
created<font color="#CCCCCC"> before the other resource that</font>

64
00:02:25,440 --> 00:02:30,090
<font color="#E5E5E5">you specified as the</font><font color="#CCCCCC"> pet that it's the</font>

65
00:02:27,510 --> 00:02:32,340
pendant<font color="#E5E5E5"> on it also has a state file</font>

66
00:02:30,090 --> 00:02:34,740
which is I<font color="#CCCCCC"> think is probably</font><font color="#E5E5E5"> one of the</font>

67
00:02:32,340 --> 00:02:36,600
<font color="#E5E5E5">most unique features</font><font color="#CCCCCC"> when it comes to</font>

68
00:02:34,740 --> 00:02:37,800
these tools<font color="#E5E5E5"> terraform distinguishes</font>

69
00:02:36,600 --> 00:02:39,510
itself<font color="#E5E5E5"> because the state file so state</font>

70
00:02:37,800 --> 00:02:42,600
the state file<font color="#CCCCCC"> and terraform keeps track</font>

71
00:02:39,510 --> 00:02:45,239
of<font color="#CCCCCC"> the created infrastructure both that</font>

72
00:02:42,600 --> 00:02:47,070
you deployed and both that you've dipped

73
00:02:45,240 --> 00:02:53,190
<font color="#E5E5E5">so and we'll talk about that</font><font color="#CCCCCC"> in a minute</font>

74
00:02:47,070 --> 00:02:54,660
as well<font color="#E5E5E5"> let's real quick dive into HCl</font>

75
00:02:53,190 --> 00:02:57,030
because there's gonna<font color="#E5E5E5"> be a lot of code</font>

76
00:02:54,660 --> 00:02:59,790
<font color="#E5E5E5">in this presentation but it's important</font>

77
00:02:57,030 --> 00:03:02,250
that<font color="#E5E5E5"> you understand</font><font color="#CCCCCC"> the code</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> order to</font>

78
00:02:59,790 --> 00:03:04,470
get a grips on the<font color="#CCCCCC"> tool itself so there</font>

79
00:03:02,250 --> 00:03:06,570
<font color="#E5E5E5">are three main concepts in HCl there are</font>

80
00:03:04,470 --> 00:03:09,180
<font color="#E5E5E5">providers logical providers and</font>

81
00:03:06,570 --> 00:03:11,459
provisioners so providers are the things

82
00:03:09,180 --> 00:03:13,830
that you specify<font color="#CCCCCC"> an HCl</font><font color="#E5E5E5"> that go and</font>

83
00:03:11,459 --> 00:03:15,930
interact<font color="#CCCCCC"> with a remote API so any cloud</font>

84
00:03:13,830 --> 00:03:18,720
service provider be<font color="#CCCCCC"> at digitalocean AWS</font>

85
00:03:15,930 --> 00:03:21,630
whatever you want<font color="#CCCCCC"> I think I lost</font><font color="#E5E5E5"> track</font>

86
00:03:18,720 --> 00:03:23,459
<font color="#CCCCCC">of the amount of API services the</font>

87
00:03:21,630 --> 00:03:24,630
terraform supports<font color="#CCCCCC"> I'm pretty sure at</font>

88
00:03:23,459 --> 00:03:27,480
this<font color="#CCCCCC"> point it supports basically</font>

89
00:03:24,630 --> 00:03:29,220
<font color="#E5E5E5">anything under the Sun logical providers</font>

90
00:03:27,480 --> 00:03:30,720
on the<font color="#E5E5E5"> other hand are the complete</font>

91
00:03:29,220 --> 00:03:32,640
opposite so logical providers are

92
00:03:30,720 --> 00:03:35,160
something<font color="#CCCCCC"> that only exists in the code</font>

93
00:03:32,640 --> 00:03:37,708
itself and you can use logical providers

94
00:03:35,160 --> 00:03:40,799
to do stuff like create SSH keys

95
00:03:37,709 --> 00:03:43,200
dynamically<font color="#E5E5E5"> or create random bits for</font>

96
00:03:40,799 --> 00:03:44,600
example so<font color="#CCCCCC"> that there's no</font><font color="#E5E5E5"> conflicting</font>

97
00:03:43,200 --> 00:03:46,399
resources when<font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually go to apply</font>

98
00:03:44,600 --> 00:03:48,329
<font color="#E5E5E5">your infrastructure</font>

99
00:03:46,400 --> 00:03:49,470
there's also provisioners and

100
00:03:48,330 --> 00:03:51,650
provisioners is the fun part

101
00:03:49,470 --> 00:03:55,019
<font color="#CCCCCC">provisioners allow you to do stuff like</font>

102
00:03:51,650 --> 00:03:57,450
execute<font color="#CCCCCC"> batch scripts</font><font color="#E5E5E5"> on the created</font>

103
00:03:55,019 --> 00:03:59,100
instances execute commands locally which

104
00:03:57,450 --> 00:04:01,048
is more useful<font color="#E5E5E5"> than it sounds and</font><font color="#CCCCCC"> we'll</font>

105
00:03:59,100 --> 00:04:04,829
<font color="#E5E5E5">get into that in a second</font><font color="#CCCCCC"> and all sorts</font>

106
00:04:01,049 --> 00:04:06,209
of cool fun stuff so how do you get

107
00:04:04,830 --> 00:04:08,280
<font color="#E5E5E5">started with terraform it's actually</font>

108
00:04:06,209 --> 00:04:10,650
much much<font color="#E5E5E5"> simpler than you'd expect you</font>

109
00:04:08,280 --> 00:04:12,239
create a directory preferably with a git

110
00:04:10,650 --> 00:04:15,180
repository it is code<font color="#CCCCCC"> afterall</font><font color="#E5E5E5"> and</font>

111
00:04:12,239 --> 00:04:18,478
<font color="#E5E5E5">that's if you</font><font color="#CCCCCC"> don't use a git in your</font>

112
00:04:15,180 --> 00:04:20,700
code that's a<font color="#CCCCCC"> cardinal sin</font><font color="#E5E5E5"> variables</font>

113
00:04:18,478 --> 00:04:23,099
that TF which is where you<font color="#E5E5E5"> put all</font><font color="#CCCCCC"> of</font>

114
00:04:20,700 --> 00:04:24,930
<font color="#CCCCCC">your variables</font><font color="#E5E5E5"> terraform that TFRs which</font>

115
00:04:23,099 --> 00:04:27,120
will<font color="#E5E5E5"> basically be your file where you</font>

116
00:04:24,930 --> 00:04:30,240
<font color="#CCCCCC">define values to your variables</font>

117
00:04:27,120 --> 00:04:31,560
and then do<font color="#CCCCCC"> that TF</font><font color="#E5E5E5"> in this presentation</font>

118
00:04:30,240 --> 00:04:33,660
<font color="#E5E5E5">will be interacting mainly with</font>

119
00:04:31,560 --> 00:04:36,000
<font color="#CCCCCC">digitalocean just because it</font><font color="#E5E5E5"> is very</font>

120
00:04:33,660 --> 00:04:37,560
<font color="#E5E5E5">simple to understand and there aren't</font>

121
00:04:36,000 --> 00:04:39,720
<font color="#CCCCCC">really special things</font><font color="#E5E5E5"> you need</font><font color="#CCCCCC"> to do in</font>

122
00:04:37,560 --> 00:04:42,830
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> get started but the last file</font>

123
00:04:39,720 --> 00:04:45,600
can really be renamed<font color="#E5E5E5"> anything you want</font>

124
00:04:42,830 --> 00:04:48,599
so let's take a look<font color="#E5E5E5"> at the code so</font>

125
00:04:45,600 --> 00:04:52,440
we've set our variables<font color="#CCCCCC"> at TF file</font>

126
00:04:48,600 --> 00:04:58,830
we've populated<font color="#CCCCCC"> our variable the other</font>

127
00:04:52,440 --> 00:05:01,650
variable file<font color="#E5E5E5"> and and what we do in the</font>

128
00:04:58,830 --> 00:05:05,669
do<font color="#CCCCCC"> that</font><font color="#E5E5E5"> CF file is we define a resource</font>

129
00:05:01,650 --> 00:05:08,969
so the<font color="#E5E5E5"> really important part of this is</font>

130
00:05:05,669 --> 00:05:10,740
the digitalocean droplet<font color="#CCCCCC"> so that is the</font>

131
00:05:08,970 --> 00:05:13,410
<font color="#E5E5E5">actual name of the provider</font><font color="#CCCCCC"> so you</font>

132
00:05:10,740 --> 00:05:15,570
define the<font color="#E5E5E5"> keyword resource you give it</font>

133
00:05:13,410 --> 00:05:19,190
digitalocean droplet<font color="#E5E5E5"> and now terraform</font>

134
00:05:15,570 --> 00:05:21,210
knows that you're going to<font color="#E5E5E5"> be creating a</font>

135
00:05:19,190 --> 00:05:22,820
provider with digitalocean droplet so

136
00:05:21,210 --> 00:05:26,099
you want to interact<font color="#E5E5E5"> with digital</font><font color="#CCCCCC"> ocean</font>

137
00:05:22,820 --> 00:05:27,330
<font color="#E5E5E5">HTTP</font><font color="#CCCCCC"> c2 is just a common name we can</font>

138
00:05:26,100 --> 00:05:29,010
give it<font color="#E5E5E5"> in this case we're trying to</font>

139
00:05:27,330 --> 00:05:30,210
spin up a c2 server so this is<font color="#E5E5E5"> just a</font>

140
00:05:29,010 --> 00:05:33,690
name you can<font color="#CCCCCC"> give that perfect that</font>

141
00:05:30,210 --> 00:05:36,690
<font color="#E5E5E5">specific resource and then we define our</font>

142
00:05:33,690 --> 00:05:39,690
parameters underneath so<font color="#CCCCCC"> there is image</font>

143
00:05:36,690 --> 00:05:41,910
which is just the slug name of the<font color="#E5E5E5"> image</font>

144
00:05:39,690 --> 00:05:43,760
you<font color="#CCCCCC"> want</font><font color="#E5E5E5"> to create on that droplet the</font>

145
00:05:41,910 --> 00:05:47,820
name of the droplet you want to create

146
00:05:43,760 --> 00:05:49,740
region in this case it's<font color="#E5E5E5"> London size</font><font color="#CCCCCC"> two</font>

147
00:05:47,820 --> 00:05:53,280
<font color="#E5E5E5">gigabyte droplet</font><font color="#CCCCCC"> that's all good and</font>

148
00:05:49,740 --> 00:05:56,639
<font color="#CCCCCC">dandy and the SSH keys and we'll talk</font>

149
00:05:53,280 --> 00:05:58,979
about<font color="#E5E5E5"> that in the next slide then we go</font>

150
00:05:56,639 --> 00:06:03,780
to the<font color="#E5E5E5"> provisioner so this is what you</font>

151
00:05:58,979 --> 00:06:05,250
actually<font color="#E5E5E5"> use to execute scripts remotely</font>

152
00:06:03,780 --> 00:06:06,929
on the created droplet<font color="#E5E5E5"> so the</font>

153
00:06:05,250 --> 00:06:09,840
provisioner in this case is<font color="#E5E5E5"> named remote</font>

154
00:06:06,930 --> 00:06:11,910
exec<font color="#E5E5E5"> there's a bunch of these</font><font color="#CCCCCC"> there's</font>

155
00:06:09,840 --> 00:06:14,280
also<font color="#CCCCCC"> a remote</font><font color="#E5E5E5"> in line which</font><font color="#CCCCCC"> you can use</font>

156
00:06:11,910 --> 00:06:19,139
<font color="#E5E5E5">to actually specify a list of commands</font>

157
00:06:14,280 --> 00:06:20,849
in the actual conviction code<font color="#E5E5E5"> as opposed</font>

158
00:06:19,139 --> 00:06:24,720
<font color="#CCCCCC">to running</font><font color="#E5E5E5"> a just the bash script</font>

159
00:06:20,849 --> 00:06:28,740
remotely<font color="#E5E5E5"> and you need in order for the</font>

160
00:06:24,720 --> 00:06:32,160
provisioner to successfully connect to

161
00:06:28,740 --> 00:06:33,570
the create a droplet<font color="#E5E5E5"> you need to tell it</font>

162
00:06:32,160 --> 00:06:35,580
<font color="#CCCCCC">how</font><font color="#E5E5E5"> to connect so in this case we're</font>

163
00:06:33,570 --> 00:06:38,360
connecting<font color="#E5E5E5"> via</font><font color="#CCCCCC"> ssh with the user</font><font color="#E5E5E5"> root</font>

164
00:06:35,580 --> 00:06:40,139
and then we're giving<font color="#CCCCCC"> it</font><font color="#E5E5E5"> the private key</font>

165
00:06:38,360 --> 00:06:47,009
<font color="#CCCCCC">which we the</font>

166
00:06:40,139 --> 00:06:49,860
find<font color="#E5E5E5"> before</font><font color="#CCCCCC"> alright so before before we</font>

167
00:06:47,009 --> 00:06:52,889
<font color="#E5E5E5">did all</font><font color="#CCCCCC"> that we basically</font><font color="#E5E5E5"> defined a</font>

168
00:06:49,860 --> 00:06:54,240
digital ocean SSH key<font color="#E5E5E5"> so as I said</font>

169
00:06:52,889 --> 00:06:56,009
<font color="#E5E5E5">before so</font><font color="#CCCCCC"> there is a resource in</font><font color="#E5E5E5"> this</font>

170
00:06:54,240 --> 00:06:59,009
case<font color="#E5E5E5"> it's named</font><font color="#CCCCCC"> digital ocean SSH key so</font>

171
00:06:56,009 --> 00:07:01,229
if you give it a file path it will then

172
00:06:59,009 --> 00:07:03,590
upload<font color="#CCCCCC"> that SSH key at digitalocean and</font>

173
00:07:01,229 --> 00:07:06,539
it'll be available<font color="#CCCCCC"> to use integer ocean</font>

174
00:07:03,590 --> 00:07:08,638
we're giving it the<font color="#CCCCCC"> name digital ocean</font>

175
00:07:06,539 --> 00:07:12,539
SSH key and we're using a<font color="#E5E5E5"> built-in</font>

176
00:07:08,639 --> 00:07:13,919
function<font color="#CCCCCC"> called file and the file as you</font>

177
00:07:12,539 --> 00:07:16,830
might expect<font color="#CCCCCC"> a</font><font color="#E5E5E5"> built-in function</font><font color="#CCCCCC"> file</font>

178
00:07:13,919 --> 00:07:19,639
<font color="#E5E5E5">you give it a file path</font><font color="#CCCCCC"> reads it and</font>

179
00:07:16,830 --> 00:07:23,128
puts<font color="#CCCCCC"> it into the public</font><font color="#E5E5E5"> key variable</font>

180
00:07:19,639 --> 00:07:24,360
<font color="#E5E5E5">okay</font><font color="#CCCCCC"> and the VAR SSH key variable here</font>

181
00:07:23,129 --> 00:07:27,529
is<font color="#E5E5E5"> something</font><font color="#CCCCCC"> that we've defined</font>

182
00:07:24,360 --> 00:07:35,099
<font color="#E5E5E5">previously in our variables that TF file</font>

183
00:07:27,529 --> 00:07:38,009
so we we've managed to create<font color="#E5E5E5"> resources</font>

184
00:07:35,099 --> 00:07:39,930
<font color="#E5E5E5">on digital ocean with SSH keys and</font>

185
00:07:38,009 --> 00:07:41,550
<font color="#CCCCCC">everything but the thing is</font><font color="#E5E5E5"> we're</font><font color="#CCCCCC"> using</font>

186
00:07:39,930 --> 00:07:44,969
the<font color="#CCCCCC"> built in function file which means</font>

187
00:07:41,550 --> 00:07:48,080
<font color="#CCCCCC">that we</font><font color="#E5E5E5"> have to manually create the SSH</font>

188
00:07:44,969 --> 00:07:50,219
keys<font color="#E5E5E5"> before we want run that script</font>

189
00:07:48,080 --> 00:07:52,560
which is<font color="#CCCCCC"> bad because you know we want to</font>

190
00:07:50,219 --> 00:07:56,360
<font color="#CCCCCC">automate all the things so how do we do</font>

191
00:07:52,560 --> 00:07:58,649
this also<font color="#CCCCCC"> you can't have</font><font color="#E5E5E5"> multiple</font>

192
00:07:56,360 --> 00:07:59,849
objects<font color="#E5E5E5"> in digital ocean or really any</font>

193
00:07:58,649 --> 00:08:02,069
cloud service provider with<font color="#CCCCCC"> the same</font>

194
00:07:59,849 --> 00:08:05,610
name because<font color="#CCCCCC"> they do</font><font color="#E5E5E5"> not like that</font><font color="#CCCCCC"> so</font>

195
00:08:02,069 --> 00:08:08,159
you need a way to<font color="#E5E5E5"> generate randomness in</font>

196
00:08:05,610 --> 00:08:10,289
<font color="#E5E5E5">the name so</font><font color="#CCCCCC"> that digital ocean or really</font>

197
00:08:08,159 --> 00:08:12,300
anything AWS doesn't come back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> you</font>

198
00:08:10,289 --> 00:08:16,680
<font color="#CCCCCC">and say hey this is not gonna work</font><font color="#E5E5E5"> stop</font>

199
00:08:12,300 --> 00:08:19,560
it so how do we<font color="#E5E5E5"> go about dynamically</font>

200
00:08:16,680 --> 00:08:24,770
creating SSH keys and<font color="#CCCCCC"> typing that into</font>

201
00:08:19,560 --> 00:08:28,080
<font color="#CCCCCC">the digital</font><font color="#E5E5E5"> ocean provider to then</font>

202
00:08:24,770 --> 00:08:31,799
upload and then use<font color="#E5E5E5"> to then upload that</font>

203
00:08:28,080 --> 00:08:35,159
stuff to digital ocean<font color="#CCCCCC"> and spin</font><font color="#E5E5E5"> that</font>

204
00:08:31,800 --> 00:08:38,099
droplet up so the first thing<font color="#CCCCCC"> that we do</font>

205
00:08:35,159 --> 00:08:41,218
here is<font color="#CCCCCC"> we define the random</font><font color="#E5E5E5"> ID resource</font>

206
00:08:38,099 --> 00:08:42,779
and we give<font color="#CCCCCC"> it the parameter byte length</font>

207
00:08:41,219 --> 00:08:44,940
of<font color="#CCCCCC"> four so it'll</font><font color="#E5E5E5"> create four bytes of</font>

208
00:08:42,779 --> 00:08:47,070
randomness<font color="#E5E5E5"> and that will be used in</font>

209
00:08:44,940 --> 00:08:50,010
order<font color="#CCCCCC"> to create</font><font color="#E5E5E5"> our randomness in the</font>

210
00:08:47,070 --> 00:08:53,730
droplets name<font color="#E5E5E5"> we then use the TLS</font>

211
00:08:50,010 --> 00:08:54,540
private key resource which<font color="#E5E5E5"> as the name</font>

212
00:08:53,730 --> 00:08:56,279
entails will

213
00:08:54,540 --> 00:09:02,310
<font color="#E5E5E5">generate an SSH key using the RSA</font>

214
00:08:56,279 --> 00:09:07,009
algorithm with 4096 bits now<font color="#E5E5E5"> this is the</font>

215
00:09:02,310 --> 00:09:11,399
down here is the special<font color="#CCCCCC"> part because by</font>

216
00:09:07,009 --> 00:09:13,019
giving the public<font color="#E5E5E5"> key variable the the</font>

217
00:09:11,399 --> 00:09:14,550
previously<font color="#E5E5E5"> defined TLS private key</font>

218
00:09:13,019 --> 00:09:18,329
resource we're creating an implicit

219
00:09:14,550 --> 00:09:20,459
dependency and by that<font color="#E5E5E5"> terraform and</font>

220
00:09:18,329 --> 00:09:24,239
with that<font color="#CCCCCC"> terraform knows that it needs</font>

221
00:09:20,459 --> 00:09:25,768
<font color="#CCCCCC">to first create the private key</font><font color="#E5E5E5"> and it</font>

222
00:09:24,240 --> 00:09:27,420
needs to<font color="#E5E5E5"> first</font><font color="#CCCCCC"> create the public private</font>

223
00:09:25,769 --> 00:09:31,050
key pair<font color="#E5E5E5"> ssh public/private key pair</font>

224
00:09:27,420 --> 00:09:36,209
<font color="#E5E5E5">before actually going and creating the</font>

225
00:09:31,050 --> 00:09:39,149
droplets<font color="#E5E5E5"> but the thing is this way we</font>

226
00:09:36,209 --> 00:09:42,300
don't<font color="#E5E5E5"> really have our SSH keys to disks</font>

227
00:09:39,149 --> 00:09:45,240
because<font color="#E5E5E5"> they if you generate the public</font>

228
00:09:42,300 --> 00:09:47,550
private key pair through<font color="#E5E5E5"> HCl</font><font color="#CCCCCC"> they will</font>

229
00:09:45,240 --> 00:09:50,069
be only<font color="#E5E5E5"> stored in the terraform that</font><font color="#CCCCCC"> TF</font>

230
00:09:47,550 --> 00:09:52,258
state<font color="#CCCCCC"> file</font><font color="#E5E5E5"> in the state file which you</font>

231
00:09:50,069 --> 00:09:54,599
could parse for this data<font color="#E5E5E5"> but it's</font>

232
00:09:52,259 --> 00:09:58,170
really really<font color="#E5E5E5"> inconvenient so what you</font>

233
00:09:54,600 --> 00:10:01,110
can do is at the<font color="#CCCCCC"> end</font><font color="#E5E5E5"> of the digital</font>

234
00:09:58,170 --> 00:10:03,930
ocean resource<font color="#E5E5E5"> you can put the local</font>

235
00:10:01,110 --> 00:10:06,660
exec provisioner and what<font color="#E5E5E5"> this will do</font>

236
00:10:03,930 --> 00:10:08,279
is<font color="#CCCCCC"> execute a local command and the rest</font>

237
00:10:06,660 --> 00:10:10,230
is really<font color="#E5E5E5"> just string interpolation so</font>

238
00:10:08,279 --> 00:10:14,630
what it<font color="#E5E5E5"> will do when it creates the</font>

239
00:10:10,230 --> 00:10:18,870
digitalocean droplet<font color="#E5E5E5"> it will take the</font>

240
00:10:14,630 --> 00:10:23,040
private key and the public key and echo

241
00:10:18,870 --> 00:10:25,680
<font color="#E5E5E5">it to a file in this case data that ssh</font>

242
00:10:23,040 --> 00:10:29,519
data<font color="#CCCCCC"> ssh keys so every time</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> create a</font>

243
00:10:25,680 --> 00:10:30,689
droplet<font color="#E5E5E5"> those two public that</font>

244
00:10:29,519 --> 00:10:32,190
public/private key pair will be

245
00:10:30,690 --> 00:10:33,779
<font color="#E5E5E5">outputted to the filesystem which is</font>

246
00:10:32,190 --> 00:10:37,850
great which we can<font color="#CCCCCC"> then</font><font color="#E5E5E5"> use to document</font>

247
00:10:33,779 --> 00:10:40,800
<font color="#E5E5E5">and actually</font><font color="#CCCCCC"> SSH the droplet itself</font>

248
00:10:37,850 --> 00:10:43,139
what's also great is we can<font color="#CCCCCC"> actually</font>

249
00:10:40,800 --> 00:10:45,359
clean<font color="#CCCCCC"> up after ourselves so the local</font>

250
00:10:43,139 --> 00:10:48,660
you do we then define another local<font color="#CCCCCC"> exec</font>

251
00:10:45,360 --> 00:10:51,269
provisioner and we specify<font color="#CCCCCC"> ondestroy</font>

252
00:10:48,660 --> 00:10:54,449
so when equals destroy means that that

253
00:10:51,269 --> 00:10:56,130
<font color="#E5E5E5">provisioner will only run when</font><font color="#CCCCCC"> we</font>

254
00:10:54,449 --> 00:10:57,959
<font color="#CCCCCC">actually destroy the</font><font color="#E5E5E5"> infrastructure as</font>

255
00:10:56,130 --> 00:10:59,850
opposed to creating it and we give<font color="#CCCCCC"> it</font>

256
00:10:57,959 --> 00:11:02,849
the command<font color="#E5E5E5"> to run so in this case we're</font>

257
00:10:59,850 --> 00:11:05,069
<font color="#CCCCCC">just deleting the</font><font color="#E5E5E5"> SSH keys which we</font>

258
00:11:02,850 --> 00:11:06,780
previously which you<font color="#E5E5E5"> previously output</font>

259
00:11:05,069 --> 00:11:10,030
it before

260
00:11:06,780 --> 00:11:12,339
so we've<font color="#E5E5E5"> we've</font><font color="#CCCCCC"> got</font><font color="#E5E5E5"> everything</font><font color="#CCCCCC"> set up</font><font color="#E5E5E5"> how</font>

261
00:11:10,030 --> 00:11:14,050
do you actually<font color="#E5E5E5"> spin stuff up with</font>

262
00:11:12,340 --> 00:11:16,770
terraform<font color="#CCCCCC"> well the</font><font color="#E5E5E5"> first thing you have</font>

263
00:11:14,050 --> 00:11:19,660
<font color="#CCCCCC">to do is export a environment</font><font color="#E5E5E5"> variable</font>

264
00:11:16,770 --> 00:11:21,160
<font color="#CCCCCC">the environment variable name itself is</font>

265
00:11:19,660 --> 00:11:22,990
you're gonna have<font color="#E5E5E5"> to refer to the</font>

266
00:11:21,160 --> 00:11:26,079
documentation<font color="#E5E5E5"> of terraform for each</font>

267
00:11:22,990 --> 00:11:27,220
individual CSP digitalocean is pretty

268
00:11:26,080 --> 00:11:28,840
straightforward<font color="#E5E5E5"> it's just digitalocean</font>

269
00:11:27,220 --> 00:11:31,360
token and<font color="#E5E5E5"> you give it your digitalocean</font>

270
00:11:28,840 --> 00:11:33,700
token you then run terraform<font color="#CCCCCC"> in it</font>

271
00:11:31,360 --> 00:11:36,310
terraform in it downloads<font color="#E5E5E5"> all of the</font>

272
00:11:33,700 --> 00:11:38,080
required providers<font color="#E5E5E5"> which are not</font>

273
00:11:36,310 --> 00:11:39,640
<font color="#E5E5E5">installed by default and terraform so it</font>

274
00:11:38,080 --> 00:11:42,220
has to<font color="#E5E5E5"> go out and download them from the</font>

275
00:11:39,640 --> 00:11:43,930
<font color="#CCCCCC">tariff Ward site terraform site you</font>

276
00:11:42,220 --> 00:11:45,160
didn't run terraform plan which will

277
00:11:43,930 --> 00:11:47,079
give you a nice<font color="#E5E5E5"> diff of your</font>

278
00:11:45,160 --> 00:11:48,640
<font color="#E5E5E5">infrastructure so say for</font><font color="#CCCCCC"> example you've</font>

279
00:11:47,080 --> 00:11:50,440
already applied<font color="#E5E5E5"> this terraform</font>

280
00:11:48,640 --> 00:11:52,120
configuration and<font color="#E5E5E5"> you go and change</font>

281
00:11:50,440 --> 00:11:53,800
something<font color="#E5E5E5"> in it if you</font><font color="#CCCCCC"> were in terraform</font>

282
00:11:52,120 --> 00:11:55,630
plan again<font color="#E5E5E5"> it'll actually create an</font>

283
00:11:53,800 --> 00:11:57,910
infrastructure<font color="#CCCCCC"> diff for</font><font color="#E5E5E5"> you and you'll</font>

284
00:11:55,630 --> 00:11:59,740
know exactly<font color="#CCCCCC"> what resources</font><font color="#E5E5E5"> are gonna</font><font color="#CCCCCC"> be</font>

285
00:11:57,910 --> 00:12:02,709
changed or not and then you<font color="#CCCCCC"> want</font>

286
00:11:59,740 --> 00:12:05,290
terraform apply and<font color="#E5E5E5"> let everything loose</font>

287
00:12:02,710 --> 00:12:09,640
<font color="#E5E5E5">and it'll create everything you want for</font>

288
00:12:05,290 --> 00:12:13,300
<font color="#E5E5E5">it so let's recap we can now</font>

289
00:12:09,640 --> 00:12:17,050
automatically generate<font color="#E5E5E5"> SSH keys for our</font>

290
00:12:13,300 --> 00:12:19,420
instances<font color="#E5E5E5"> we can spin our droplets up or</font>

291
00:12:17,050 --> 00:12:21,099
whatever<font color="#CCCCCC"> CSP you</font><font color="#E5E5E5"> decide to use and then</font>

292
00:12:19,420 --> 00:12:24,819
<font color="#CCCCCC">you can run commands and bash scripts on</font>

293
00:12:21,100 --> 00:12:27,070
the remote<font color="#CCCCCC"> hosts or locally but the</font>

294
00:12:24,820 --> 00:12:29,170
thing<font color="#CCCCCC"> is this is really</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> system</font>

295
00:12:27,070 --> 00:12:30,640
really<font color="#E5E5E5"> isn't flexible the reason for</font>

296
00:12:29,170 --> 00:12:32,050
this is<font color="#E5E5E5"> we want to create complex</font>

297
00:12:30,640 --> 00:12:33,520
infrastructure<font color="#E5E5E5"> right during Red Team</font>

298
00:12:32,050 --> 00:12:35,770
assessments you want read erectors you

299
00:12:33,520 --> 00:12:38,670
want<font color="#CCCCCC"> c2</font><font color="#E5E5E5"> servers you want Alcorn all</font>

300
00:12:35,770 --> 00:12:41,199
sorts of fancy<font color="#E5E5E5"> stuff</font><font color="#CCCCCC"> and the</font><font color="#E5E5E5"> only way</font>

301
00:12:38,670 --> 00:12:43,120
you'll be<font color="#E5E5E5"> able to do that is if in this</font>

302
00:12:41,200 --> 00:12:44,380
in this method<font color="#E5E5E5"> is if you</font><font color="#CCCCCC"> just keep</font>

303
00:12:43,120 --> 00:12:45,910
changing<font color="#CCCCCC"> the same terraform</font>

304
00:12:44,380 --> 00:12:47,470
<font color="#CCCCCC">configuration file over and</font><font color="#E5E5E5"> over again</font>

305
00:12:45,910 --> 00:12:48,760
<font color="#CCCCCC">and</font><font color="#E5E5E5"> obviously if you want different</font>

306
00:12:47,470 --> 00:12:50,350
kinds<font color="#E5E5E5"> of infrastructure for different</font>

307
00:12:48,760 --> 00:12:52,839
engagements<font color="#E5E5E5"> that's gonna be a pain in</font>

308
00:12:50,350 --> 00:12:55,030
the butt so how do we<font color="#E5E5E5"> make the system</font>

309
00:12:52,839 --> 00:12:57,640
<font color="#E5E5E5">modular so</font><font color="#CCCCCC"> that you have to only change</font>

310
00:12:55,030 --> 00:13:01,900
<font color="#E5E5E5">very small amount of code in order to</font>

311
00:12:57,640 --> 00:13:02,980
get very complex<font color="#E5E5E5"> infrastructure and as I</font>

312
00:13:01,900 --> 00:13:04,360
said<font color="#CCCCCC"> before so as of right now</font>

313
00:13:02,980 --> 00:13:07,210
<font color="#E5E5E5">everything is one configuration file so</font>

314
00:13:04,360 --> 00:13:09,130
<font color="#CCCCCC">the whole system is</font><font color="#E5E5E5"> very inflexible so</font>

315
00:13:07,210 --> 00:13:11,620
it turns out there's these things<font color="#E5E5E5"> called</font>

316
00:13:09,130 --> 00:13:13,270
<font color="#CCCCCC">terraform modules and terraform</font>

317
00:13:11,620 --> 00:13:17,080
describes them as self-contained

318
00:13:13,270 --> 00:13:18,370
packages<font color="#E5E5E5"> but you can again ignore the</font>

319
00:13:17,080 --> 00:13:19,810
description<font color="#CCCCCC"> just think of</font><font color="#E5E5E5"> terraform</font>

320
00:13:18,370 --> 00:13:21,040
modules as functions<font color="#E5E5E5"> so</font>

321
00:13:19,810 --> 00:13:22,869
any programming<font color="#E5E5E5"> language</font><font color="#CCCCCC"> that you know</font>

322
00:13:21,040 --> 00:13:26,529
you can<font color="#E5E5E5"> just think of</font><font color="#CCCCCC"> terraform modules</font>

323
00:13:22,870 --> 00:13:27,400
as functions<font color="#E5E5E5"> how do you create a</font>

324
00:13:26,529 --> 00:13:29,950
<font color="#E5E5E5">terraform module</font>

325
00:13:27,400 --> 00:13:32,770
well<font color="#E5E5E5"> you just</font><font color="#CCCCCC"> create a</font><font color="#E5E5E5"> subdirectory</font><font color="#CCCCCC"> in</font>

326
00:13:29,950 --> 00:13:36,490
your root folder wherever<font color="#E5E5E5"> you spun up</font>

327
00:13:32,770 --> 00:13:38,770
<font color="#CCCCCC">terraform before and at era</font><font color="#E5E5E5"> for module</font>

328
00:13:36,490 --> 00:13:41,020
consists mainly of three files<font color="#E5E5E5"> so</font>

329
00:13:38,770 --> 00:13:44,050
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> a main that's</font><font color="#CCCCCC"> he F outputs at TF</font>

330
00:13:41,020 --> 00:13:45,579
variables that TF variables at TF so

331
00:13:44,050 --> 00:13:47,589
obviously the name is pretty

332
00:13:45,580 --> 00:13:50,140
straightforward<font color="#CCCCCC"> the main is where all of</font>

333
00:13:47,589 --> 00:13:52,540
<font color="#E5E5E5">your main logic will lie the outputs is</font>

334
00:13:50,140 --> 00:13:55,569
the outputs<font color="#E5E5E5"> of the module so</font><font color="#CCCCCC"> thing as</font>

335
00:13:52,540 --> 00:13:58,630
again like referencing<font color="#CCCCCC"> it functions</font><font color="#E5E5E5"> that</font>

336
00:13:55,570 --> 00:14:01,540
that's your function output variables

337
00:13:58,630 --> 00:14:03,939
that TF<font color="#E5E5E5"> is the module input module</font>

338
00:14:01,540 --> 00:14:08,230
inputs<font color="#CCCCCC"> so think of it</font><font color="#E5E5E5"> as arguments to</font>

339
00:14:03,940 --> 00:14:11,200
your function so this is we're gonna

340
00:14:08,230 --> 00:14:15,040
<font color="#E5E5E5">create a simple module that will spin up</font>

341
00:14:11,200 --> 00:14:16,990
a<font color="#CCCCCC"> HD PC</font><font color="#E5E5E5"> to using</font><font color="#CCCCCC"> digitalocean</font><font color="#E5E5E5"> right so</font>

342
00:14:15,040 --> 00:14:19,529
how do we do that<font color="#E5E5E5"> well we go to our</font>

343
00:14:16,990 --> 00:14:24,270
variables that TF file and we put in our

344
00:14:19,529 --> 00:14:26,680
arguments so we got the install argument

345
00:14:24,270 --> 00:14:28,540
at which is a type of<font color="#E5E5E5"> list</font>

346
00:14:26,680 --> 00:14:30,160
we got the count argument which is how

347
00:14:28,540 --> 00:14:32,500
many<font color="#E5E5E5"> instances you</font><font color="#CCCCCC"> want to actually</font><font color="#E5E5E5"> spin</font>

348
00:14:30,160 --> 00:14:34,329
<font color="#E5E5E5">up besides the region so basically</font>

349
00:14:32,500 --> 00:14:38,170
everything that<font color="#CCCCCC"> we've</font><font color="#E5E5E5"> previously defined</font>

350
00:14:34,330 --> 00:14:42,160
<font color="#E5E5E5">in our single configuration</font><font color="#CCCCCC"> file that we</font>

351
00:14:38,170 --> 00:14:43,719
did<font color="#E5E5E5"> before</font><font color="#CCCCCC"> we now have as arguments to</font>

352
00:14:42,160 --> 00:14:45,219
the module<font color="#E5E5E5"> and this makes the system</font>

353
00:14:43,720 --> 00:14:47,620
<font color="#E5E5E5">very flexible so that you don't have to</font>

354
00:14:45,220 --> 00:14:52,210
keep<font color="#CCCCCC"> changing the code</font><font color="#E5E5E5"> the HDL code over</font>

355
00:14:47,620 --> 00:14:54,730
and<font color="#CCCCCC"> over again the outputs</font><font color="#E5E5E5"> contains the</font>

356
00:14:52,210 --> 00:14:57,839
IPS of the instances and the reason why

357
00:14:54,730 --> 00:15:02,080
I did this it'll<font color="#E5E5E5"> become clear later and</font>

358
00:14:57,839 --> 00:15:05,200
also the<font color="#CCCCCC"> SSH user different CSPs</font><font color="#E5E5E5"> need</font>

359
00:15:02,080 --> 00:15:08,530
<font color="#CCCCCC">different user names to actually ssh</font>

360
00:15:05,200 --> 00:15:10,480
<font color="#CCCCCC">into them so</font><font color="#E5E5E5"> because there's now ansible</font>

361
00:15:08,530 --> 00:15:11,589
support<font color="#E5E5E5"> and Red Baron which is the tool</font>

362
00:15:10,480 --> 00:15:14,230
that<font color="#CCCCCC"> we'll be talking</font><font color="#E5E5E5"> about in a second</font>

363
00:15:11,589 --> 00:15:17,529
<font color="#CCCCCC">that does basically everything</font><font color="#E5E5E5"> that I'm</font>

364
00:15:14,230 --> 00:15:22,860
<font color="#E5E5E5">talking about here</font><font color="#CCCCCC"> for you that is</font>

365
00:15:17,529 --> 00:15:26,380
needed to<font color="#CCCCCC"> actually SSH into</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> bosses</font>

366
00:15:22,860 --> 00:15:29,620
<font color="#E5E5E5">so we've got everything in a module now</font>

367
00:15:26,380 --> 00:15:32,380
<font color="#E5E5E5">we go back</font><font color="#CCCCCC"> to our</font><font color="#E5E5E5"> root configuration</font>

368
00:15:29,620 --> 00:15:33,740
file<font color="#E5E5E5"> and instead of all of the code that</font>

369
00:15:32,380 --> 00:15:37,430
we previously saw before

370
00:15:33,740 --> 00:15:39,650
<font color="#E5E5E5">all we really need is this so we define</font>

371
00:15:37,430 --> 00:15:40,969
a module the module name really<font color="#E5E5E5"> doesn't</font>

372
00:15:39,650 --> 00:15:43,069
<font color="#CCCCCC">matter in this case</font><font color="#E5E5E5"> we're just</font><font color="#CCCCCC"> calling</font>

373
00:15:40,970 --> 00:15:45,170
it HTTP<font color="#CCCCCC"> c2 the important part is</font><font color="#E5E5E5"> the</font>

374
00:15:43,070 --> 00:15:47,420
source<font color="#E5E5E5"> variable and</font><font color="#CCCCCC"> that source variable</font>

375
00:15:45,170 --> 00:15:52,280
is the path is the local path to the

376
00:15:47,420 --> 00:15:55,339
module<font color="#CCCCCC"> that we previously</font><font color="#E5E5E5"> created so now</font>

377
00:15:52,280 --> 00:15:58,640
we completely automated spinning up<font color="#CCCCCC"> a c2</font>

378
00:15:55,340 --> 00:16:01,040
server securely<font color="#E5E5E5"> we can also run</font><font color="#CCCCCC"> multiple</font>

379
00:15:58,640 --> 00:16:02,569
scripts<font color="#E5E5E5"> on the created service so for</font>

380
00:16:01,040 --> 00:16:05,839
example if we wanted to install<font color="#CCCCCC"> a cobalt</font>

381
00:16:02,570 --> 00:16:09,320
strike<font color="#E5E5E5"> everything</font><font color="#CCCCCC"> that we want as an NSC</font>

382
00:16:05,840 --> 00:16:10,670
<font color="#E5E5E5">to server we can totally</font><font color="#CCCCCC"> do that so now</font>

383
00:16:09,320 --> 00:16:13,460
we need<font color="#E5E5E5"> to take care</font><font color="#CCCCCC"> of the redirect</font>

384
00:16:10,670 --> 00:16:15,079
<font color="#E5E5E5">there's right because we have our c2 sir</font>

385
00:16:13,460 --> 00:16:17,500
<font color="#CCCCCC">we're</font><font color="#E5E5E5"> not office</font><font color="#CCCCCC"> Kate our</font><font color="#E5E5E5"> c2 servers we</font>

386
00:16:15,080 --> 00:16:22,610
need to<font color="#E5E5E5"> create something that can</font>

387
00:16:17,500 --> 00:16:25,340
automate creating redirect errs so this

388
00:16:22,610 --> 00:16:27,980
would be<font color="#CCCCCC"> awesome so say we</font><font color="#E5E5E5"> had in a</font><font color="#CCCCCC"> root</font>

389
00:16:25,340 --> 00:16:30,020
<font color="#CCCCCC">terraform</font><font color="#E5E5E5"> configuration file we have</font><font color="#CCCCCC"> we</font>

390
00:16:27,980 --> 00:16:32,840
have two<font color="#E5E5E5"> modules we</font><font color="#CCCCCC"> have a c2 server and</font>

391
00:16:30,020 --> 00:16:35,780
a<font color="#CCCCCC"> redirector server what would be</font>

392
00:16:32,840 --> 00:16:39,050
<font color="#E5E5E5">awesome if is if we can just feed the</font>

393
00:16:35,780 --> 00:16:42,050
IPS of the of the<font color="#E5E5E5"> C - sir - to redirect</font>

394
00:16:39,050 --> 00:16:46,459
<font color="#E5E5E5">our module in order for terraform to</font>

395
00:16:42,050 --> 00:16:47,959
automatically redirect<font color="#CCCCCC"> all traffic</font><font color="#E5E5E5"> from</font>

396
00:16:46,460 --> 00:16:49,340
the redirect or service to the<font color="#CCCCCC"> C - sir</font>

397
00:16:47,960 --> 00:16:52,610
that would<font color="#E5E5E5"> be great</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> that's like</font>

398
00:16:49,340 --> 00:16:57,200
literally<font color="#CCCCCC"> ten lines of</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> so is it</font>

399
00:16:52,610 --> 00:16:59,780
<font color="#CCCCCC">possible</font><font color="#E5E5E5"> to do</font><font color="#CCCCCC"> that yes it</font><font color="#E5E5E5"> is so in the</font>

400
00:16:57,200 --> 00:17:02,660
redirector module<font color="#E5E5E5"> all I really</font><font color="#CCCCCC"> need to</font>

401
00:16:59,780 --> 00:17:05,599
do is define a redirect to variable

402
00:17:02,660 --> 00:17:08,629
which is of a list type<font color="#E5E5E5"> so what that</font>

403
00:17:05,599 --> 00:17:10,790
<font color="#CCCCCC">variable will do is it will</font><font color="#E5E5E5"> get well it</font>

404
00:17:08,630 --> 00:17:16,490
will contain a set of<font color="#CCCCCC"> IPS which will be</font>

405
00:17:10,790 --> 00:17:18,170
our<font color="#E5E5E5"> c2 servers and then basically the</font>

406
00:17:16,490 --> 00:17:19,880
rest of the code is<font color="#CCCCCC"> the same the only</font>

407
00:17:18,170 --> 00:17:22,520
<font color="#E5E5E5">thing that we may want to do is actually</font>

408
00:17:19,880 --> 00:17:24,050
use<font color="#CCCCCC"> some kind</font><font color="#E5E5E5"> of tool</font><font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to</font>

409
00:17:22,520 --> 00:17:26,300
<font color="#CCCCCC">actually redirect the traffic so how do</font>

410
00:17:24,050 --> 00:17:28,550
we<font color="#E5E5E5"> do that well in this case we're</font><font color="#CCCCCC"> using</font>

411
00:17:26,300 --> 00:17:30,230
a different<font color="#CCCCCC"> provisional so it's always</font>

412
00:17:28,550 --> 00:17:31,700
remote exact but we're using the<font color="#CCCCCC"> inline</font>

413
00:17:30,230 --> 00:17:33,170
argument and the inline argument

414
00:17:31,700 --> 00:17:34,820
specifies<font color="#E5E5E5"> a number of commands that we</font>

415
00:17:33,170 --> 00:17:36,560
<font color="#E5E5E5">execute remotely instead of just a bash</font>

416
00:17:34,820 --> 00:17:38,659
script<font color="#E5E5E5"> so we're doing it we're</font>

417
00:17:36,560 --> 00:17:41,000
installing a bunch<font color="#E5E5E5"> of stuff here</font><font color="#CCCCCC"> the</font>

418
00:17:38,660 --> 00:17:44,930
really the magic<font color="#CCCCCC"> sauce is this final</font>

419
00:17:41,000 --> 00:17:46,710
line here<font color="#CCCCCC"> which uses so cat to redirect</font>

420
00:17:44,930 --> 00:17:49,890
port<font color="#CCCCCC"> 82</font>

421
00:17:46,710 --> 00:17:51,539
see<font color="#CCCCCC"> to IPS</font><font color="#E5E5E5"> which we gave it previously</font>

422
00:17:49,890 --> 00:17:57,899
<font color="#E5E5E5">in the actual route terraform</font>

423
00:17:51,539 --> 00:18:01,500
configuration so now we have something

424
00:17:57,899 --> 00:18:02,729
<font color="#CCCCCC">like this which is pretty pretty cool so</font>

425
00:18:01,500 --> 00:18:04,830
we defined in our<font color="#CCCCCC"> Reuter</font><font color="#E5E5E5"> from</font>

426
00:18:02,730 --> 00:18:06,870
<font color="#CCCCCC">configuration we define the HTTP</font><font color="#E5E5E5"> c2</font>

427
00:18:04,830 --> 00:18:10,678
module we give<font color="#E5E5E5"> it the source which is</font>

428
00:18:06,870 --> 00:18:13,979
<font color="#CCCCCC">the H which is</font><font color="#E5E5E5"> the HTTP c2 module count</font>

429
00:18:10,679 --> 00:18:15,570
<font color="#E5E5E5">so turns out the all</font><font color="#CCCCCC"> of the terraform</font>

430
00:18:13,980 --> 00:18:17,190
provisioners support<font color="#E5E5E5"> account argument</font>

431
00:18:15,570 --> 00:18:19,080
<font color="#E5E5E5">meaning</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> all of this stuff and</font>

432
00:18:17,190 --> 00:18:21,000
theory can scale infinitely<font color="#E5E5E5"> so for</font>

433
00:18:19,080 --> 00:18:24,120
example if you wanted<font color="#CCCCCC"> to see two</font><font color="#E5E5E5"> servers</font>

434
00:18:21,000 --> 00:18:24,929
and Tenri directors for some reason you

435
00:18:24,120 --> 00:18:26,959
can totally do that

436
00:18:24,929 --> 00:18:29,850
<font color="#E5E5E5">just by specifying the count variable</font>

437
00:18:26,960 --> 00:18:32,580
which is great<font color="#E5E5E5"> and then we give</font><font color="#CCCCCC"> it an</font>

438
00:18:29,850 --> 00:18:36,000
install argument which just is<font color="#CCCCCC"> just</font>

439
00:18:32,580 --> 00:18:37,889
basically a list<font color="#E5E5E5"> of bash</font><font color="#CCCCCC"> scripts that</font>

440
00:18:36,000 --> 00:18:38,850
<font color="#CCCCCC">are</font><font color="#E5E5E5"> local on our machine that we want to</font>

441
00:18:37,890 --> 00:18:40,529
<font color="#E5E5E5">install and in this case we're</font>

442
00:18:38,850 --> 00:18:44,070
installing<font color="#E5E5E5"> Empire</font><font color="#CCCCCC"> Metasploit</font><font color="#E5E5E5"> and cobalt</font>

443
00:18:40,529 --> 00:18:46,890
strike<font color="#E5E5E5"> because why not we then define an</font>

444
00:18:44,070 --> 00:18:50,279
HTTP HTTP redirect<font color="#CCCCCC"> ER module we give it</font>

445
00:18:46,890 --> 00:18:53,309
<font color="#CCCCCC">the source which is the</font><font color="#E5E5E5"> HTTP redirect or</font>

446
00:18:50,279 --> 00:18:55,289
module that we previously created<font color="#E5E5E5"> and in</font>

447
00:18:53,309 --> 00:18:59,279
this case we're spinning<font color="#E5E5E5"> up for redirect</font>

448
00:18:55,289 --> 00:19:00,990
errs because why<font color="#CCCCCC"> not the redirect Q</font>

449
00:18:59,279 --> 00:19:03,480
argument is the most important because

450
00:19:00,990 --> 00:19:06,090
we're<font color="#E5E5E5"> basically telling it hey in order</font>

451
00:19:03,480 --> 00:19:09,450
<font color="#E5E5E5">for you</font><font color="#CCCCCC"> to create</font><font color="#E5E5E5"> the redirect is you</font>

452
00:19:06,090 --> 00:19:13,199
need<font color="#E5E5E5"> to first create the HTTP HTTP</font><font color="#CCCCCC"> c2</font>

453
00:19:09,450 --> 00:19:16,789
<font color="#E5E5E5">servers right so by</font><font color="#CCCCCC"> specifying</font><font color="#E5E5E5"> the</font>

454
00:19:13,200 --> 00:19:19,200
output<font color="#E5E5E5"> the IPS output of the HTTP</font><font color="#CCCCCC"> c2 sir</font>

455
00:19:16,789 --> 00:19:20,908
what we're doing is creating again like

456
00:19:19,200 --> 00:19:22,980
an implicit dependency so terraform now

457
00:19:20,909 --> 00:19:25,350
knows it needs<font color="#E5E5E5"> to first create that c2</font>

458
00:19:22,980 --> 00:19:28,919
server before the redirect errs<font color="#E5E5E5"> and also</font>

459
00:19:25,350 --> 00:19:31,230
we<font color="#E5E5E5"> can specify</font><font color="#CCCCCC"> different</font><font color="#E5E5E5"> regions</font><font color="#CCCCCC"> so for</font>

460
00:19:28,919 --> 00:19:33,539
example if you wanted<font color="#CCCCCC"> to just spin up</font><font color="#E5E5E5"> a</font>

461
00:19:31,230 --> 00:19:35,429
droplet<font color="#CCCCCC"> and</font><font color="#E5E5E5"> from Singapore</font><font color="#CCCCCC"> and New</font><font color="#E5E5E5"> York</font>

462
00:19:33,539 --> 00:19:38,190
<font color="#CCCCCC">you can specify the regions as well</font><font color="#E5E5E5"> and</font>

463
00:19:35,429 --> 00:19:43,380
every<font color="#E5E5E5"> droplet will have a different</font>

464
00:19:38,190 --> 00:19:44,789
region<font color="#E5E5E5"> from that array so it</font><font color="#CCCCCC"> would be</font>

465
00:19:43,380 --> 00:19:47,010
great if there's a tool that<font color="#E5E5E5"> did all of</font>

466
00:19:44,789 --> 00:19:49,529
this<font color="#CCCCCC"> for you right because</font><font color="#E5E5E5"> I just talked</font>

467
00:19:47,010 --> 00:19:51,600
about it now but it<font color="#E5E5E5"> would be kind</font><font color="#CCCCCC"> of sad</font>

468
00:19:49,529 --> 00:19:53,039
<font color="#E5E5E5">if you now went home with this and you</font>

469
00:19:51,600 --> 00:19:54,719
have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> build it all yourself</font><font color="#CCCCCC"> well it</font>

470
00:19:53,039 --> 00:19:56,639
turns out<font color="#E5E5E5"> I did</font><font color="#CCCCCC"> I did most of the work</font>

471
00:19:54,720 --> 00:19:58,230
<font color="#CCCCCC">for you so there's Red Baron which was a</font>

472
00:19:56,639 --> 00:20:00,658
tool that<font color="#CCCCCC"> I wrote that does exactly this</font>

473
00:19:58,230 --> 00:20:02,629
<font color="#CCCCCC">and at this point</font><font color="#E5E5E5"> it supports</font>

474
00:20:00,659 --> 00:20:04,559
it's a pretty mature<font color="#CCCCCC"> project it has</font>

475
00:20:02,629 --> 00:20:08,879
<font color="#E5E5E5">documentation which from an open source</font>

476
00:20:04,559 --> 00:20:12,539
<font color="#E5E5E5">tool is pretty rare</font><font color="#CCCCCC"> it has an exhaustive</font>

477
00:20:08,879 --> 00:20:14,519
support of all the major<font color="#CCCCCC"> csps</font><font color="#E5E5E5"> and also a</font>

478
00:20:12,539 --> 00:20:16,200
lot of<font color="#CCCCCC"> examples in the example</font><font color="#E5E5E5"> folder so</font>

479
00:20:14,519 --> 00:20:18,149
if you<font color="#E5E5E5"> just go</font><font color="#CCCCCC"> to that</font><font color="#E5E5E5"> github</font><font color="#CCCCCC"> link</font>

480
00:20:16,200 --> 00:20:19,859
there's an examples folder<font color="#E5E5E5"> which will</font>

481
00:20:18,149 --> 00:20:23,549
<font color="#CCCCCC">basically all you really need to get</font>

482
00:20:19,859 --> 00:20:26,070
<font color="#E5E5E5">started and</font><font color="#CCCCCC"> it supports AWS</font><font color="#E5E5E5"> digitalocean</font>

483
00:20:23,549 --> 00:20:30,029
<font color="#CCCCCC">has your</font><font color="#E5E5E5"> Google Cloud compute and</font><font color="#CCCCCC"> lie</font>

484
00:20:26,070 --> 00:20:31,710
<font color="#CCCCCC">node at</font><font color="#E5E5E5"> this point</font><font color="#CCCCCC"> the line node support</font>

485
00:20:30,029 --> 00:20:33,509
needs to<font color="#CCCCCC"> be</font><font color="#E5E5E5"> revamped just because</font>

486
00:20:31,710 --> 00:20:35,820
there's an<font color="#CCCCCC"> actual official lie node</font>

487
00:20:33,509 --> 00:20:36,899
provider now for terraform<font color="#E5E5E5"> so we're</font>

488
00:20:35,820 --> 00:20:40,799
gonna<font color="#E5E5E5"> I'm gonna have to work on getting</font>

489
00:20:36,899 --> 00:20:42,899
<font color="#CCCCCC">that getting that pushed out also</font><font color="#E5E5E5"> but</font>

490
00:20:40,799 --> 00:20:44,609
<font color="#CCCCCC">also I actually forgot to put it in</font>

491
00:20:42,899 --> 00:20:47,459
there it<font color="#E5E5E5"> also supports the</font><font color="#CCCCCC"> creation of</font>

492
00:20:44,609 --> 00:20:51,359
let's encrypt certificates<font color="#E5E5E5"> so and we'll</font>

493
00:20:47,460 --> 00:20:53,489
talk about<font color="#E5E5E5"> that a little bit</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> because</font>

494
00:20:51,359 --> 00:20:55,408
there's<font color="#CCCCCC"> ansible support too so actually</font>

495
00:20:53,489 --> 00:20:57,090
just<font color="#E5E5E5"> a week ago</font><font color="#CCCCCC"> I pushed out an update</font>

496
00:20:55,409 --> 00:20:59,429
to Red Baron which adds ansible support

497
00:20:57,090 --> 00:21:01,199
to all of this dynamic<font color="#E5E5E5"> SSH config</font>

498
00:20:59,429 --> 00:21:02,580
generation which sounds a little lame

499
00:21:01,200 --> 00:21:04,379
but<font color="#E5E5E5"> I guarantee you it's sort of a big</font>

500
00:21:02,580 --> 00:21:07,139
<font color="#CCCCCC">deal because</font><font color="#E5E5E5"> it's a key saver and I'll</font>

501
00:21:04,379 --> 00:21:09,959
demo that in a second also how<font color="#CCCCCC"> many</font>

502
00:21:07,139 --> 00:21:12,840
people have<font color="#E5E5E5"> heard of mosh here awesome</font>

503
00:21:09,960 --> 00:21:15,929
<font color="#CCCCCC">ok so you probably should</font><font color="#E5E5E5"> be using mosh</font>

504
00:21:12,840 --> 00:21:18,299
as your SSH client because it is at

505
00:21:15,929 --> 00:21:21,239
<font color="#E5E5E5">least 40 times better than the standard</font>

506
00:21:18,299 --> 00:21:23,668
<font color="#E5E5E5">SSH client it supports roaming it has</font>

507
00:21:21,239 --> 00:21:25,950
feedback it has some sort<font color="#E5E5E5"> of</font><font color="#CCCCCC"> algorithm</font>

508
00:21:23,669 --> 00:21:28,109
that<font color="#E5E5E5"> I</font><font color="#CCCCCC"> I forgot</font><font color="#E5E5E5"> exactly what it does but</font>

509
00:21:25,950 --> 00:21:30,029
<font color="#E5E5E5">it basically it predicts</font><font color="#CCCCCC"> your typing</font><font color="#E5E5E5"> as</font>

510
00:21:28,109 --> 00:21:31,769
you type which makes things<font color="#E5E5E5"> incredibly</font>

511
00:21:30,029 --> 00:21:33,779
<font color="#CCCCCC">faster especially on latency heavy</font>

512
00:21:31,769 --> 00:21:35,489
networks<font color="#E5E5E5"> and everything is</font><font color="#CCCCCC"> March</font>

513
00:21:33,779 --> 00:21:37,289
friendly so all the firewall

514
00:21:35,489 --> 00:21:41,879
configurations that<font color="#E5E5E5"> it does support</font>

515
00:21:37,289 --> 00:21:47,039
<font color="#CCCCCC">smosh already so let's let's take</font><font color="#E5E5E5"> a look</font>

516
00:21:41,879 --> 00:21:51,658
at how it generates SSH config files<font color="#E5E5E5"> we</font>

517
00:21:47,039 --> 00:21:53,429
give it the template file<font color="#E5E5E5"> provider which</font>

518
00:21:51,659 --> 00:21:58,049
basically is used to create<font color="#E5E5E5"> as the name</font>

519
00:21:53,429 --> 00:22:00,179
implies templates and<font color="#E5E5E5"> we specify the</font>

520
00:21:58,049 --> 00:22:03,149
path to the template in the template

521
00:22:00,179 --> 00:22:05,489
variable we then create an explicit

522
00:22:03,149 --> 00:22:07,168
dependency because<font color="#E5E5E5"> there</font><font color="#CCCCCC"> really is in a</font>

523
00:22:05,489 --> 00:22:09,539
way of creating an implicit dependency

524
00:22:07,169 --> 00:22:10,980
using the template file provisioner for

525
00:22:09,539 --> 00:22:14,970
some reason

526
00:22:10,980 --> 00:22:17,610
and then all of<font color="#E5E5E5"> these variables</font><font color="#CCCCCC"> down</font>

527
00:22:14,970 --> 00:22:19,620
here is what will be replaced with<font color="#E5E5E5"> the</font>

528
00:22:17,610 --> 00:22:21,570
the same variables in the template file

529
00:22:19,620 --> 00:22:23,760
<font color="#E5E5E5">so all of these values will be string</font>

530
00:22:21,570 --> 00:22:27,179
interpolated<font color="#CCCCCC"> into the template file as</font>

531
00:22:23,760 --> 00:22:29,730
it generates<font color="#E5E5E5"> it but in order to</font><font color="#CCCCCC"> actually</font>

532
00:22:27,180 --> 00:22:32,100
generate<font color="#CCCCCC"> the template file</font><font color="#E5E5E5"> we also need</font>

533
00:22:29,730 --> 00:22:35,670
to tell terraform<font color="#E5E5E5"> when to actually</font>

534
00:22:32,100 --> 00:22:38,520
<font color="#CCCCCC">generate them because it</font><font color="#E5E5E5"> doesn't it it's</font>

535
00:22:35,670 --> 00:22:39,720
not smart<font color="#E5E5E5"> enough to know that and in</font>

536
00:22:38,520 --> 00:22:42,330
order<font color="#CCCCCC"> to</font><font color="#E5E5E5"> do that we create</font><font color="#CCCCCC"> an OLE</font>

537
00:22:39,720 --> 00:22:46,470
resource<font color="#E5E5E5"> null resource is sort of a</font>

538
00:22:42,330 --> 00:22:48,090
weird<font color="#E5E5E5"> terraform provider but it</font>

539
00:22:46,470 --> 00:22:52,590
essentially as the<font color="#CCCCCC"> name implies does</font>

540
00:22:48,090 --> 00:22:54,419
nothing<font color="#E5E5E5"> but it can be used on a lot of</font>

541
00:22:52,590 --> 00:22:56,070
things because<font color="#CCCCCC"> you basically can get</font>

542
00:22:54,420 --> 00:22:58,500
<font color="#E5E5E5">around a lot of terraform limitations</font>

543
00:22:56,070 --> 00:23:00,689
and<font color="#E5E5E5"> HCl limitations this way</font><font color="#CCCCCC"> so in this</font>

544
00:22:58,500 --> 00:23:04,080
case we're using<font color="#E5E5E5"> a null resource to</font>

545
00:23:00,690 --> 00:23:05,820
basically tell it to render<font color="#E5E5E5"> the template</font>

546
00:23:04,080 --> 00:23:11,520
that<font color="#E5E5E5"> we previously defined on top</font>

547
00:23:05,820 --> 00:23:19,919
whenever<font color="#E5E5E5"> a</font><font color="#CCCCCC"> SSH can SSH key is generated</font>

548
00:23:11,520 --> 00:23:23,220
<font color="#E5E5E5">so</font><font color="#CCCCCC"> one of</font><font color="#E5E5E5"> the big main issues that</font>

549
00:23:19,920 --> 00:23:24,660
terraform has is the provisioners the

550
00:23:23,220 --> 00:23:26,430
remote exact provisioners the local

551
00:23:24,660 --> 00:23:29,520
exact provisioners aren't really made to

552
00:23:26,430 --> 00:23:32,490
<font color="#E5E5E5">do in-depth configuration on</font><font color="#CCCCCC"> the host</font>

553
00:23:29,520 --> 00:23:34,500
you spin up<font color="#E5E5E5"> so they're meant mainly to</font>

554
00:23:32,490 --> 00:23:37,320
bootstrap<font color="#CCCCCC"> the host so that you can</font><font color="#E5E5E5"> then</font>

555
00:23:34,500 --> 00:23:38,910
go in<font color="#CCCCCC"> with something</font><font color="#E5E5E5"> like ansible to</font>

556
00:23:37,320 --> 00:23:40,230
<font color="#E5E5E5">actually do in-depth configuration and</font>

557
00:23:38,910 --> 00:23:42,780
take<font color="#CCCCCC"> advantage</font><font color="#E5E5E5"> of everything that</font>

558
00:23:40,230 --> 00:23:45,030
ansible offers but<font color="#E5E5E5"> I really didn't want</font>

559
00:23:42,780 --> 00:23:47,820
to<font color="#CCCCCC"> do that</font><font color="#E5E5E5"> in a sense I just wanted</font>

560
00:23:45,030 --> 00:23:51,149
<font color="#CCCCCC">something that</font><font color="#E5E5E5"> just did everything for</font>

561
00:23:47,820 --> 00:23:53,310
<font color="#E5E5E5">me</font><font color="#CCCCCC"> so there's this awesome github</font>

562
00:23:51,150 --> 00:23:54,690
account called which<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think is that one</font>

563
00:23:53,310 --> 00:23:59,490
of<font color="#CCCCCC"> the best names I've ever</font><font color="#E5E5E5"> heard</font><font color="#CCCCCC"> insane</font>

564
00:23:54,690 --> 00:24:02,340
cloud<font color="#E5E5E5"> posse</font><font color="#CCCCCC"> and it turns out they</font>

565
00:23:59,490 --> 00:24:04,920
<font color="#E5E5E5">managed to figure out how to get ansible</font>

566
00:24:02,340 --> 00:24:07,290
<font color="#E5E5E5">to work with terraform and you do that</font>

567
00:24:04,920 --> 00:24:10,380
by basically<font color="#E5E5E5"> and I think this is almost</font>

568
00:24:07,290 --> 00:24:13,139
<font color="#E5E5E5">genius because I could never figure this</font>

569
00:24:10,380 --> 00:24:16,200
out<font color="#CCCCCC"> so you're creating</font><font color="#E5E5E5"> again a null</font>

570
00:24:13,140 --> 00:24:18,330
resource and we're telling<font color="#E5E5E5"> it</font><font color="#CCCCCC"> hey it</font>

571
00:24:16,200 --> 00:24:20,520
depends on<font color="#E5E5E5"> in this case the redirector</font>

572
00:24:18,330 --> 00:24:23,159
code so this<font color="#CCCCCC"> will only</font><font color="#E5E5E5"> this will only</font>

573
00:24:20,520 --> 00:24:24,500
trigger when a<font color="#CCCCCC"> HTTP redirected in this</font>

574
00:24:23,160 --> 00:24:29,950
case gets created

575
00:24:24,500 --> 00:24:33,320
but also it will trigger<font color="#E5E5E5"> if the ansible</font>

576
00:24:29,950 --> 00:24:35,450
<font color="#E5E5E5">playbook changes in any way because what</font>

577
00:24:33,320 --> 00:24:37,639
it<font color="#E5E5E5"> does is calculates the sha-1 some of</font>

578
00:24:35,450 --> 00:24:40,310
the ansible playbook and<font color="#E5E5E5"> if we modify</font>

579
00:24:37,640 --> 00:24:43,160
<font color="#E5E5E5">the ansible playbook and type terraform</font>

580
00:24:40,310 --> 00:24:44,690
apply it will trigger on<font color="#CCCCCC"> that so that it</font>

581
00:24:43,160 --> 00:24:48,050
knows hey you've updated the playbook

582
00:24:44,690 --> 00:24:50,740
<font color="#E5E5E5">and we want to go out and configure</font>

583
00:24:48,050 --> 00:24:54,860
something differently on those hosts and

584
00:24:50,740 --> 00:24:56,450
then in the null resource we give it the

585
00:24:54,860 --> 00:24:58,399
<font color="#E5E5E5">local exact</font><font color="#CCCCCC"> provisioner which actually</font>

586
00:24:56,450 --> 00:25:02,090
runs the ansible playbook command<font color="#E5E5E5"> and</font>

587
00:24:58,400 --> 00:25:03,770
this<font color="#E5E5E5"> is just again I actually truncated</font>

588
00:25:02,090 --> 00:25:05,389
this for brevity because this command is

589
00:25:03,770 --> 00:25:07,070
that<font color="#E5E5E5"> this line</font><font color="#CCCCCC"> is actually</font><font color="#E5E5E5"> really</font><font color="#CCCCCC"> really</font>

590
00:25:05,390 --> 00:25:08,270
long<font color="#E5E5E5"> but you can see it you get the idea</font>

591
00:25:07,070 --> 00:25:09,860
where it just there's a bunch of string

592
00:25:08,270 --> 00:25:11,930
interpolation<font color="#E5E5E5"> and it gives it the</font>

593
00:25:09,860 --> 00:25:14,600
private<font color="#CCCCCC"> key of the host</font><font color="#E5E5E5"> that it wants</font><font color="#CCCCCC"> to</font>

594
00:25:11,930 --> 00:25:20,110
get<font color="#E5E5E5"> that it needs to connect to and</font><font color="#CCCCCC"> the</font>

595
00:25:14,600 --> 00:25:23,270
<font color="#E5E5E5">playbook and all that good</font><font color="#CCCCCC"> stuff so demo</font>

596
00:25:20,110 --> 00:25:26,179
this<font color="#E5E5E5"> is I'm gonna try to do a live</font><font color="#CCCCCC"> demo</font>

597
00:25:23,270 --> 00:25:30,590
first<font color="#CCCCCC"> the</font><font color="#E5E5E5"> internet years really sucks</font>

598
00:25:26,180 --> 00:25:38,780
but hopefully it'll<font color="#E5E5E5"> work but</font><font color="#CCCCCC"> I have a</font>

599
00:25:30,590 --> 00:25:41,750
video just<font color="#E5E5E5"> in case it doesn't okay can</font>

600
00:25:38,780 --> 00:25:44,170
everyone<font color="#E5E5E5"> see that</font><font color="#CCCCCC"> that is way</font><font color="#E5E5E5"> too small</font>

601
00:25:41,750 --> 00:25:44,170
<font color="#CCCCCC">hold on</font>

602
00:25:53,970 --> 00:25:57,940
okay this is gonna<font color="#E5E5E5"> look really bad</font>

603
00:25:55,960 --> 00:25:59,320
<font color="#E5E5E5">because there's terraform is very very</font>

604
00:25:57,940 --> 00:26:00,940
verbose<font color="#E5E5E5"> but I'll give</font><font color="#CCCCCC"> it a shot</font><font color="#E5E5E5"> anyway</font>

605
00:25:59,320 --> 00:26:09,960
<font color="#E5E5E5">so let's take a look at our main</font>

606
00:26:00,940 --> 00:26:12,280
<font color="#CCCCCC">terraform configuration file</font><font color="#E5E5E5"> okay so</font>

607
00:26:09,960 --> 00:26:16,690
this<font color="#E5E5E5"> is sort of similar</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the slides</font>

608
00:26:12,280 --> 00:26:18,550
<font color="#E5E5E5">but</font><font color="#CCCCCC"> we have a htpc two module</font><font color="#E5E5E5"> defined</font><font color="#CCCCCC"> we</font>

609
00:26:16,690 --> 00:26:20,950
gave it the<font color="#E5E5E5"> ansible playbook argument</font>

610
00:26:18,550 --> 00:26:23,230
which is gonna run the ansible<font color="#CCCCCC"> the</font>

611
00:26:20,950 --> 00:26:26,530
specified ansible playbook<font color="#E5E5E5"> on all of the</font>

612
00:26:23,230 --> 00:26:28,270
<font color="#E5E5E5">SI toos</font><font color="#CCCCCC"> that you create</font><font color="#E5E5E5"> you could</font>

613
00:26:26,530 --> 00:26:32,170
technically<font color="#E5E5E5"> as</font><font color="#CCCCCC"> i said like</font><font color="#E5E5E5"> this</font>

614
00:26:28,270 --> 00:26:33,610
technically scales<font color="#E5E5E5"> out pretty well</font><font color="#CCCCCC"> but</font>

615
00:26:32,170 --> 00:26:36,580
right<font color="#E5E5E5"> now for</font><font color="#CCCCCC"> just time constraints</font>

616
00:26:33,610 --> 00:26:41,199
we're gonna spin up one<font color="#E5E5E5"> server one HP HP</font>

617
00:26:36,580 --> 00:26:43,060
<font color="#CCCCCC">BC to server and I'm not gonna</font><font color="#E5E5E5"> install a</font>

618
00:26:41,200 --> 00:26:45,220
cobalt strike this<font color="#E5E5E5"> is an example by the</font>

619
00:26:43,060 --> 00:26:46,659
way<font color="#CCCCCC"> of</font><font color="#E5E5E5"> just creating something with Red</font>

620
00:26:45,220 --> 00:26:48,520
Baron in digitalocean

621
00:26:46,660 --> 00:26:49,870
it's in the examples folder so you<font color="#E5E5E5"> can</font>

622
00:26:48,520 --> 00:26:51,129
literally just<font color="#CCCCCC"> copy</font><font color="#E5E5E5"> and paste this into</font>

623
00:26:49,870 --> 00:26:52,479
the<font color="#E5E5E5"> root</font><font color="#CCCCCC"> directory and</font><font color="#E5E5E5"> you should and</font>

624
00:26:51,130 --> 00:26:57,130
uncommon<font color="#E5E5E5"> stuff and you should be good to</font>

625
00:26:52,480 --> 00:27:00,970
go<font color="#CCCCCC"> we then define the redirect to</font>

626
00:26:57,130 --> 00:27:02,680
argument which waits until the<font color="#E5E5E5"> ec2</font>

627
00:27:00,970 --> 00:27:04,450
servers have been<font color="#E5E5E5"> created in order to</font>

628
00:27:02,680 --> 00:27:06,160
pass that<font color="#E5E5E5"> information</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the redirector</font>

629
00:27:04,450 --> 00:27:16,200
so that our<font color="#CCCCCC"> traffic actually</font><font color="#E5E5E5"> gets</font>

630
00:27:06,160 --> 00:27:16,200
redirected so now we run<font color="#CCCCCC"> terraforming it</font>

631
00:27:17,010 --> 00:27:22,390
okay so when you<font color="#E5E5E5"> first run this it'll</font>

632
00:27:20,470 --> 00:27:23,620
take a while<font color="#E5E5E5"> especially if you have a</font>

633
00:27:22,390 --> 00:27:26,020
bad internet<font color="#E5E5E5"> connection</font><font color="#CCCCCC"> via</font><font color="#E5E5E5"> days it</font>

634
00:27:23,620 --> 00:27:27,969
needs to<font color="#CCCCCC"> download all the providers but</font>

635
00:27:26,020 --> 00:27:30,100
from the output<font color="#E5E5E5"> here you see</font><font color="#CCCCCC"> Terra for a</font>

636
00:27:27,970 --> 00:27:32,110
minute you got it has the<font color="#CCCCCC"> digitalocean</font>

637
00:27:30,100 --> 00:27:33,490
<font color="#E5E5E5">provider external provider</font><font color="#CCCCCC"> null random</font>

638
00:27:32,110 --> 00:27:36,040
<font color="#CCCCCC">template so these are all the</font><font color="#E5E5E5"> providers</font>

639
00:27:33,490 --> 00:27:38,790
<font color="#CCCCCC">that</font><font color="#E5E5E5"> are needed</font><font color="#CCCCCC"> by the modules in</font><font color="#E5E5E5"> order</font>

640
00:27:36,040 --> 00:27:44,590
to actually<font color="#E5E5E5"> create this infrastructure</font>

641
00:27:38,790 --> 00:27:46,300
we then run<font color="#E5E5E5"> terraform plan and what's</font>

642
00:27:44,590 --> 00:27:48,220
great<font color="#E5E5E5"> about the way the modules are</font><font color="#CCCCCC"> set</font>

643
00:27:46,300 --> 00:27:51,820
up<font color="#CCCCCC"> to which I really didn't explain</font>

644
00:27:48,220 --> 00:27:53,830
<font color="#E5E5E5">because of time but by default firewall</font>

645
00:27:51,820 --> 00:27:57,370
rules are generated for each droplet<font color="#E5E5E5"> and</font>

646
00:27:53,830 --> 00:27:59,470
when you run<font color="#E5E5E5"> terraform apply what it'll</font>

647
00:27:57,370 --> 00:28:03,189
do<font color="#CCCCCC"> is go out get your current public IP</font>

648
00:27:59,470 --> 00:28:04,509
address and set rich input restrictions

649
00:28:03,190 --> 00:28:06,609
on the track on<font color="#CCCCCC"> the</font><font color="#E5E5E5"> track</font>

650
00:28:04,509 --> 00:28:07,869
ethic<font color="#E5E5E5"> so you can only connect to the</font>

651
00:28:06,609 --> 00:28:11,289
droplet<font color="#E5E5E5"> and no one else so it basically</font>

652
00:28:07,869 --> 00:28:13,478
firewalls<font color="#CCCCCC"> everything that you create</font><font color="#E5E5E5"> by</font>

653
00:28:11,289 --> 00:28:17,709
default<font color="#E5E5E5"> to</font><font color="#CCCCCC"> four and allows</font><font color="#E5E5E5"> access</font><font color="#CCCCCC"> to</font>

654
00:28:13,479 --> 00:28:20,919
<font color="#CCCCCC">only your IP so this is the output of</font>

655
00:28:17,709 --> 00:28:24,999
terraform plan<font color="#E5E5E5"> and it's a lot of output</font>

656
00:28:20,919 --> 00:28:27,099
because like<font color="#E5E5E5"> the the modules in self</font>

657
00:28:24,999 --> 00:28:28,809
contain a decent<font color="#E5E5E5"> amount of code</font><font color="#CCCCCC"> the</font>

658
00:28:27,099 --> 00:28:30,549
actual<font color="#E5E5E5"> route configuration</font><font color="#CCCCCC"> file does not</font>

659
00:28:28,809 --> 00:28:32,289
however<font color="#E5E5E5"> but you see here</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> have</font>

660
00:28:30,549 --> 00:28:33,908
it's<font color="#E5E5E5"> going to generate a SSH config</font>

661
00:28:32,289 --> 00:28:36,759
template it's<font color="#E5E5E5"> gonna generate a digital</font>

662
00:28:33,909 --> 00:28:38,559
<font color="#E5E5E5">ocean droplet all of this stuff these</font>

663
00:28:36,759 --> 00:28:43,269
<font color="#E5E5E5">are</font><font color="#CCCCCC"> all firewall rules right</font><font color="#E5E5E5"> here so</font>

664
00:28:38,559 --> 00:28:46,418
it'll basically<font color="#CCCCCC"> only allow SSH</font><font color="#E5E5E5"> in from</font>

665
00:28:43,269 --> 00:28:50,109
my current public IP address these are

666
00:28:46,419 --> 00:28:54,159
the SSH keys<font color="#E5E5E5"> that we'll be creating and</font>

667
00:28:50,109 --> 00:28:56,739
all of the redirect<font color="#CCCCCC"> our stuff as well</font><font color="#E5E5E5"> so</font>

668
00:28:54,159 --> 00:28:57,969
let's see how slow this actually runs

669
00:28:56,739 --> 00:29:02,109
and if anything<font color="#E5E5E5"> we could just play the</font>

670
00:28:57,969 --> 00:29:03,579
video so I'm running terraform apply now

671
00:29:02,109 --> 00:29:05,859
which will actually<font color="#E5E5E5"> go out and create</font>

672
00:29:03,579 --> 00:29:07,749
all<font color="#CCCCCC"> of this infrastructure</font><font color="#E5E5E5"> that we've</font>

673
00:29:05,859 --> 00:29:10,239
<font color="#E5E5E5">set up that we've defined in</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> root</font>

674
00:29:07,749 --> 00:29:12,639
configuration file<font color="#CCCCCC"> and we say yes you</font>

675
00:29:10,239 --> 00:29:15,039
want to create<font color="#E5E5E5"> all the things and now</font>

676
00:29:12,639 --> 00:29:17,079
it's<font color="#CCCCCC"> doing its magic one thing that you</font>

677
00:29:15,039 --> 00:29:18,699
want<font color="#CCCCCC"> to keep in mind</font><font color="#E5E5E5"> if you're concerned</font>

678
00:29:17,079 --> 00:29:23,039
about<font color="#E5E5E5"> it from a security perspective is</font>

679
00:29:18,699 --> 00:29:25,389
that<font color="#E5E5E5"> the actual</font><font color="#CCCCCC"> SSH private key that</font><font color="#E5E5E5"> you</font>

680
00:29:23,039 --> 00:29:27,158
that it uses<font color="#E5E5E5"> is output it to the</font>

681
00:29:25,389 --> 00:29:29,468
terminal<font color="#E5E5E5"> there is technically a</font>

682
00:29:27,159 --> 00:29:30,969
sensitive flag<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> for terraform to</font>

683
00:29:29,469 --> 00:29:32,889
redact this but for<font color="#E5E5E5"> some reason isn't</font>

684
00:29:30,969 --> 00:29:35,229
<font color="#E5E5E5">currently working with the some of the</font>

685
00:29:32,889 --> 00:29:37,629
provisioners<font color="#E5E5E5"> so</font><font color="#CCCCCC"> i still</font><font color="#E5E5E5"> have to figure</font>

686
00:29:35,229 --> 00:29:40,299
<font color="#E5E5E5">that</font><font color="#CCCCCC"> out but</font><font color="#E5E5E5"> you can see here that it</font>

687
00:29:37,629 --> 00:29:43,689
generated<font color="#E5E5E5"> the SSH keys it generated the</font>

688
00:29:40,299 --> 00:29:47,109
firewall rules<font color="#E5E5E5"> and it's now</font><font color="#CCCCCC"> trying to</font>

689
00:29:43,690 --> 00:29:51,369
<font color="#CCCCCC">create it is now trying to</font><font color="#E5E5E5"> create the</font>

690
00:29:47,109 --> 00:29:53,049
HTTP<font color="#E5E5E5"> c2 server and once it did</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> and</font>

691
00:29:51,369 --> 00:29:54,999
once it does verify<font color="#E5E5E5"> that</font><font color="#CCCCCC"> it's up it'll</font>

692
00:29:53,049 --> 00:29:57,729
connect to it via SSH and install a

693
00:29:54,999 --> 00:30:01,719
bunch<font color="#E5E5E5"> of dependencies that we've set so</font>

694
00:29:57,729 --> 00:30:03,489
<font color="#CCCCCC">now the</font><font color="#E5E5E5"> API the digitalocean api got</font>

695
00:30:01,719 --> 00:30:04,959
back to terraform<font color="#CCCCCC"> it said hey the host</font>

696
00:30:03,489 --> 00:30:06,369
is now up so now terraform is

697
00:30:04,959 --> 00:30:10,379
automatically trying to connect to<font color="#CCCCCC"> the</font>

698
00:30:06,369 --> 00:30:10,379
<font color="#E5E5E5">instance via SSH</font>

699
00:30:10,950 --> 00:30:17,410
<font color="#E5E5E5">okay connected this</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> awesome it's</font>

700
00:30:14,380 --> 00:30:20,500
working and<font color="#E5E5E5"> now it's basically</font><font color="#CCCCCC"> just</font>

701
00:30:17,410 --> 00:30:22,510
running apt-get install to install<font color="#CCCCCC"> Maj</font>

702
00:30:20,500 --> 00:30:25,030
<font color="#E5E5E5">among other things and just basic</font>

703
00:30:22,510 --> 00:30:26,890
dependencies<font color="#CCCCCC"> so that we can later</font>

704
00:30:25,030 --> 00:30:29,129
install<font color="#CCCCCC"> Empire Metasploit or cobalt</font>

705
00:30:26,890 --> 00:30:29,130
strike

706
00:30:47,670 --> 00:30:57,150
and so<font color="#E5E5E5"> cat also awesome</font><font color="#CCCCCC"> so let's all</font>

707
00:30:55,650 --> 00:31:00,810
that it's<font color="#E5E5E5"> doing its thing let's take a</font>

708
00:30:57,150 --> 00:31:04,140
look<font color="#E5E5E5"> so it created the HTTP</font><font color="#CCCCCC"> situ server</font>

709
00:31:00,810 --> 00:31:05,700
<font color="#E5E5E5">and this is just a bunch of this is the</font>

710
00:31:04,140 --> 00:31:10,410
<font color="#CCCCCC">app this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> actual SSH keys that</font>

711
00:31:05,700 --> 00:31:13,320
<font color="#E5E5E5">help put</font><font color="#CCCCCC"> it to the folder and now since</font>

712
00:31:10,410 --> 00:31:15,090
<font color="#E5E5E5">we defined a ansible playbook to run on</font>

713
00:31:13,320 --> 00:31:17,280
the HTTP<font color="#CCCCCC"> c 2 server it's actually</font>

714
00:31:15,090 --> 00:31:20,100
executing ansible now so<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is the</font>

715
00:31:17,280 --> 00:31:22,440
output of ansible<font color="#CCCCCC"> and the playbook that</font>

716
00:31:20,100 --> 00:31:26,070
it's now executing is just get cloning a

717
00:31:22,440 --> 00:31:27,330
bunch of stuff to<font color="#CCCCCC"> the root</font><font color="#E5E5E5"> directory so</font>

718
00:31:26,070 --> 00:31:31,710
it's<font color="#E5E5E5"> doing that now it's cloning in</font>

719
00:31:27,330 --> 00:31:34,310
<font color="#E5E5E5">packet CME and again this is an example</font>

720
00:31:31,710 --> 00:31:38,130
that<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can</font><font color="#E5E5E5"> find in the actual</font>

721
00:31:34,310 --> 00:31:44,250
repository it's now trying<font color="#CCCCCC"> to create the</font>

722
00:31:38,130 --> 00:31:50,810
redirector and it's installing<font color="#E5E5E5"> a bunch</font>

723
00:31:44,250 --> 00:31:53,790
of dependencies on the redirector and

724
00:31:50,810 --> 00:31:56,639
it's also going to set up its gonna run

725
00:31:53,790 --> 00:31:59,780
so cat<font color="#CCCCCC"> and a team ox instance so that</font><font color="#E5E5E5"> it</font>

726
00:31:56,640 --> 00:32:03,480
will<font color="#E5E5E5"> actually persist after terraform</font>

727
00:31:59,780 --> 00:32:04,860
<font color="#CCCCCC">logs out of SSH on</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> host</font><font color="#E5E5E5"> awesome I</font>

728
00:32:03,480 --> 00:32:09,300
can't believe this worked<font color="#CCCCCC"> quite frankly</font>

729
00:32:04,860 --> 00:32:12,899
on this<font color="#CCCCCC"> internet so now we've created</font><font color="#E5E5E5"> 15</font>

730
00:32:09,300 --> 00:32:19,530
resources and everything<font color="#CCCCCC"> seems to</font><font color="#E5E5E5"> be up</font>

731
00:32:12,900 --> 00:32:21,750
so since we also generated the SSH

732
00:32:19,530 --> 00:32:25,290
config files along<font color="#E5E5E5"> with all the all of</font>

733
00:32:21,750 --> 00:32:28,590
<font color="#E5E5E5">these hosts we can make SSH tab complete</font>

734
00:32:25,290 --> 00:32:30,629
all of the created infrastructure that

735
00:32:28,590 --> 00:32:36,270
we just<font color="#E5E5E5"> set</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> using Red Baron so if I</font>

736
00:32:30,630 --> 00:32:38,160
now type SSH and then let's see so I

737
00:32:36,270 --> 00:32:39,930
think that's<font color="#E5E5E5"> pretty cool</font>

738
00:32:38,160 --> 00:32:41,640
because<font color="#E5E5E5"> that saves you an enormous</font>

739
00:32:39,930 --> 00:32:43,710
<font color="#E5E5E5">amount</font><font color="#CCCCCC"> of typing</font><font color="#E5E5E5"> in terms of just</font>

740
00:32:41,640 --> 00:32:44,970
specifying the config the private key

741
00:32:43,710 --> 00:32:49,280
and<font color="#E5E5E5"> everything that you'd normally have</font>

742
00:32:44,970 --> 00:32:49,280
to do<font color="#CCCCCC"> when you</font><font color="#E5E5E5"> spend stuff up</font>

743
00:32:52,580 --> 00:32:59,280
and there you go<font color="#CCCCCC"> so now we see we've</font>

744
00:32:56,220 --> 00:33:02,000
successfully created a redirector and a

745
00:32:59,280 --> 00:33:11,310
<font color="#CCCCCC">situ server</font><font color="#E5E5E5"> completely automatically</font>

746
00:33:02,000 --> 00:33:13,920
with Red Baron and now to actually

747
00:33:11,310 --> 00:33:16,610
<font color="#CCCCCC">destroy the</font><font color="#E5E5E5"> infrastructure once you're</font>

748
00:33:13,920 --> 00:33:16,610
done with it

749
00:33:24,360 --> 00:33:29,020
so once you're done<font color="#CCCCCC"> with</font><font color="#E5E5E5"> your engagement</font>

750
00:33:26,250 --> 00:33:31,870
<font color="#CCCCCC">type</font><font color="#E5E5E5"> terraform destroy it'll clean</font><font color="#CCCCCC"> up</font>

751
00:33:29,020 --> 00:33:33,220
after<font color="#E5E5E5"> itself</font><font color="#CCCCCC"> it'll</font><font color="#E5E5E5"> remove the SSH keys</font>

752
00:33:31,870 --> 00:33:35,790
<font color="#E5E5E5">it'll destroy everything</font><font color="#CCCCCC"> that you've</font>

753
00:33:33,220 --> 00:33:35,790
previously<font color="#E5E5E5"> created</font>

754
00:33:51,670 --> 00:34:02,770
sweet and<font color="#E5E5E5"> we</font><font color="#CCCCCC"> just we've taken we've</font>

755
00:33:54,670 --> 00:34:05,260
<font color="#CCCCCC">clean up everything that we</font><font color="#E5E5E5"> created so I</font>

756
00:34:02,770 --> 00:34:08,620
actually<font color="#E5E5E5"> finished this quite</font><font color="#CCCCCC"> uh somewhat</font>

757
00:34:05,260 --> 00:34:10,389
early<font color="#CCCCCC"> but I want</font><font color="#E5E5E5"> to give a shout out to</font>

758
00:34:08,620 --> 00:34:13,179
these three people<font color="#E5E5E5"> so let me put that</font>

759
00:34:10,389 --> 00:34:14,350
<font color="#E5E5E5">back in presentation mode</font><font color="#CCCCCC"> I was</font>

760
00:34:13,179 --> 00:34:19,570
expecting the demo to take a lot longer

761
00:34:14,350 --> 00:34:21,389
with the<font color="#CCCCCC"> internet but Rastamouse</font><font color="#E5E5E5"> he did</font>

762
00:34:19,570 --> 00:34:23,530
an awesome<font color="#CCCCCC"> two-part blog post on</font>

763
00:34:21,389 --> 00:34:25,330
initially setting this stuff up in

764
00:34:23,530 --> 00:34:27,340
<font color="#E5E5E5">terraform some basic stuff with</font>

765
00:34:25,330 --> 00:34:30,190
terraform<font color="#E5E5E5"> and Red Baron was sort of</font>

766
00:34:27,340 --> 00:34:32,440
<font color="#E5E5E5">inspired by those two blog</font><font color="#CCCCCC"> posts</font><font color="#E5E5E5"> Jared</font>

767
00:34:30,190 --> 00:34:35,580
<font color="#CCCCCC">Hite who contributed at the</font><font color="#E5E5E5"> azure</font>

768
00:34:32,440 --> 00:34:40,600
modules in Red Baron and also a

769
00:34:35,580 --> 00:34:42,850
gentleman<font color="#E5E5E5"> or a</font><font color="#CCCCCC"> gentlewoman of the a f00</font>

770
00:34:40,600 --> 00:34:47,219
<font color="#E5E5E5">one that's that's his or her Twitter</font>

771
00:34:42,850 --> 00:34:50,730
handle<font color="#CCCCCC"> thank you to her him or her for</font>

772
00:34:47,219 --> 00:34:59,200
creating the<font color="#CCCCCC"> Google cloud compute</font>

773
00:34:50,730 --> 00:35:01,060
modules any questions that's a good

774
00:34:59,200 --> 00:35:02,500
<font color="#E5E5E5">question so the</font><font color="#CCCCCC"> question was if</font><font color="#E5E5E5"> you're</font>

775
00:35:01,060 --> 00:35:03,640
on two separate engagements and you want

776
00:35:02,500 --> 00:35:05,020
to create two different kinds of

777
00:35:03,640 --> 00:35:06,580
instructure for to both of those

778
00:35:05,020 --> 00:35:08,860
<font color="#E5E5E5">engagements how do you do that</font>

779
00:35:06,580 --> 00:35:11,950
so<font color="#CCCCCC"> terraform has an awesome command</font>

780
00:35:08,860 --> 00:35:13,300
called<font color="#E5E5E5"> workspace which is exactly what</font>

781
00:35:11,950 --> 00:35:16,720
you'd<font color="#E5E5E5"> expect it</font><font color="#CCCCCC"> to do so you can</font>

782
00:35:13,300 --> 00:35:19,990
basically<font color="#CCCCCC"> if I can type it small so</font>

783
00:35:16,720 --> 00:35:22,270
<font color="#E5E5E5">doing this with</font><font color="#CCCCCC"> one hand so you</font><font color="#E5E5E5"> can</font>

784
00:35:19,990 --> 00:35:28,270
basically create<font color="#E5E5E5"> separate workspaces</font><font color="#CCCCCC"> and</font>

785
00:35:22,270 --> 00:35:30,100
<font color="#E5E5E5">I'm not showing</font><font color="#CCCCCC"> that you</font><font color="#E5E5E5"> can create</font>

786
00:35:28,270 --> 00:35:32,920
separate workspaces with the terraform

787
00:35:30,100 --> 00:35:35,140
workspace<font color="#CCCCCC"> so that your state files don't</font>

788
00:35:32,920 --> 00:35:38,400
conflict with<font color="#E5E5E5"> each other and that's</font><font color="#CCCCCC"> yeah</font>

789
00:35:35,140 --> 00:35:38,400
<font color="#E5E5E5">after that you're basically good to go</font>

790
00:35:43,119 --> 00:35:56,920
<font color="#E5E5E5">all righty I think that's it</font>

791
00:35:45,050 --> 00:35:56,920
[Music]

