1
00:00:05,580 --> 00:00:08,700
just a dude with a keyboard kind of like

2
00:00:08,700 --> 00:00:12,540
the dude on the slide uh but I I like to

3
00:00:12,540 --> 00:00:14,820
drink more things than he does uh he

4
00:00:14,820 --> 00:00:17,220
only drinks one thing

5
00:00:17,220 --> 00:00:20,460
so yeah so electron electron y like y

6
00:00:20,460 --> 00:00:24,060
are electron apps uh so popular and it's

7
00:00:24,060 --> 00:00:25,980
a fairly straightforward right they they

8
00:00:25,980 --> 00:00:28,920
are cross-platform so uh it's cost

9
00:00:28,920 --> 00:00:30,779
effective to write those apps you create

10
00:00:30,779 --> 00:00:32,520
them once you can ship them to all kinds

11
00:00:32,520 --> 00:00:34,739
of platforms so companies like to make

12
00:00:34,739 --> 00:00:37,140
them right that's one reason uh the

13
00:00:37,140 --> 00:00:39,059
other thing is like you have fast uh

14
00:00:39,059 --> 00:00:42,360
development for those apps uh because uh

15
00:00:42,360 --> 00:00:44,520
essentially they they are just Chrome

16
00:00:44,520 --> 00:00:46,800
processes so you're just doing web app

17
00:00:46,800 --> 00:00:49,079
development most of the time and you

18
00:00:49,079 --> 00:00:52,079
don't have like a costly developed

19
00:00:52,079 --> 00:00:54,600
compile test life cycle you can all do

20
00:00:54,600 --> 00:00:57,239
that fairly easily so development is

21
00:00:57,239 --> 00:00:59,640
fast for these apps you also have Rich

22
00:00:59,640 --> 00:01:02,100
Library support because you're you're

23
00:01:02,100 --> 00:01:03,719
operating in Chrome you get all of the

24
00:01:03,719 --> 00:01:06,180
web libraries right like if you need to

25
00:01:06,180 --> 00:01:08,280
do front-end development you can load in

26
00:01:08,280 --> 00:01:10,380
bootstrap and you have all of that stuff

27
00:01:10,380 --> 00:01:12,780
for free or you know you can do some

28
00:01:12,780 --> 00:01:15,119
stuff in react if you want so it's all

29
00:01:15,119 --> 00:01:17,159
it's all pretty good and then

30
00:01:17,159 --> 00:01:20,060
Additionally you have

31
00:01:20,060 --> 00:01:22,979
node.js so you have a really rich

32
00:01:22,979 --> 00:01:25,680
ecosystem for node modules from

33
00:01:25,680 --> 00:01:27,540
everything from trivial operations to

34
00:01:27,540 --> 00:01:28,439
also

35
00:01:28,439 --> 00:01:31,020
like really complex stuff where node

36
00:01:31,020 --> 00:01:33,659
modules execute like native code and all

37
00:01:33,659 --> 00:01:36,299
of that all that kind of stuff

38
00:01:36,299 --> 00:01:38,579
yeah and this is this is a big one I

39
00:01:38,579 --> 00:01:40,700
think like a lot of times if there's

40
00:01:40,700 --> 00:01:43,799
some new technology which may be good it

41
00:01:43,799 --> 00:01:45,960
will require developers to kind of skill

42
00:01:45,960 --> 00:01:49,380
up and learn new skills but for electron

43
00:01:49,380 --> 00:01:52,380
applications because they are like

44
00:01:52,380 --> 00:01:54,899
Chrome renderer processes just rendering

45
00:01:54,899 --> 00:01:57,240
a website basically that means that a

46
00:01:57,240 --> 00:01:58,799
lot of web developers who are already

47
00:01:58,799 --> 00:02:01,200
very skilled could easily transition

48
00:02:01,200 --> 00:02:04,500
without a lot of time to learn those new

49
00:02:04,500 --> 00:02:06,119
technologies so

50
00:02:06,119 --> 00:02:08,520
that's made electron very popular right

51
00:02:08,520 --> 00:02:11,280
and then I write like uh Java was

52
00:02:11,280 --> 00:02:13,080
popular for similar reasons but it's

53
00:02:13,080 --> 00:02:15,959
kind of BS all I mean is that

54
00:02:15,959 --> 00:02:18,239
Java was popular because it was

55
00:02:18,239 --> 00:02:20,280
cross-platform and like a powerful

56
00:02:20,280 --> 00:02:22,739
programming language right

57
00:02:22,739 --> 00:02:24,840
so electron watt like I kind of

58
00:02:24,840 --> 00:02:27,599
mentioned this already but um electron

59
00:02:27,599 --> 00:02:29,940
is basically just a chrome renderer

60
00:02:29,940 --> 00:02:31,980
process that renders a web page that's

61
00:02:31,980 --> 00:02:34,200
all it is and then

62
00:02:34,200 --> 00:02:37,680
this process is able to ingest node

63
00:02:37,680 --> 00:02:40,620
modules so it can do like complex things

64
00:02:40,620 --> 00:02:43,680
on host not just web browser things

65
00:02:43,680 --> 00:02:47,040
and of course since it's Chrome it has

66
00:02:47,040 --> 00:02:50,819
the benefit of using like HTML5 JS CSS

67
00:02:50,819 --> 00:02:54,120
right uh and so you package basically a

68
00:02:54,120 --> 00:02:56,640
web app and then you can ship it to

69
00:02:56,640 --> 00:02:58,500
different operating systems you don't

70
00:02:58,500 --> 00:03:00,360
actually compile right you I would say

71
00:03:00,360 --> 00:03:03,540
like you package you package the app and

72
00:03:03,540 --> 00:03:06,420
then uh yeah electron who uh so electron

73
00:03:06,420 --> 00:03:08,459
is everywhere I'm sure you're all using

74
00:03:08,459 --> 00:03:11,099
electron apps no matter where you are or

75
00:03:11,099 --> 00:03:12,780
what OS that you're running

76
00:03:12,780 --> 00:03:15,239
these are just some popular examples

77
00:03:15,239 --> 00:03:19,379
right like Discord vs code Spotify is a

78
00:03:19,379 --> 00:03:23,459
really popular one right uh what's up or

79
00:03:23,459 --> 00:03:27,360
for uh for desktop is one these apps are

80
00:03:27,360 --> 00:03:29,040
everywhere and this is not an exhaustive

81
00:03:29,040 --> 00:03:30,360
list these are just some popular

82
00:03:30,360 --> 00:03:33,060
examples so you understand one one thing

83
00:03:33,060 --> 00:03:34,860
I should mention here as well is like

84
00:03:34,860 --> 00:03:37,680
you see Microsoft teams is on there and

85
00:03:37,680 --> 00:03:40,500
they like a while ago they said they are

86
00:03:40,500 --> 00:03:42,959
no longer using like proper electron

87
00:03:42,959 --> 00:03:45,180
they're using because like I said

88
00:03:45,180 --> 00:03:47,280
electron is like a chrome renderer

89
00:03:47,280 --> 00:03:49,739
process and they said uh we're changing

90
00:03:49,739 --> 00:03:52,860
to Edge instead of chrome but really

91
00:03:52,860 --> 00:03:55,019
when I was doing testing I didn't see

92
00:03:55,019 --> 00:03:57,239
any difference because Edge is based now

93
00:03:57,239 --> 00:03:59,400
on Chrome so it's it's basically the

94
00:03:59,400 --> 00:04:00,840
same thing

95
00:04:00,840 --> 00:04:04,440
how do electron sessions work mostly

96
00:04:04,440 --> 00:04:07,440
like there's some developer Liberty

97
00:04:07,440 --> 00:04:09,299
yeah I'll talk about that afterwards but

98
00:04:09,299 --> 00:04:12,900
yeah so an uh an app will create uh

99
00:04:12,900 --> 00:04:15,720
named folders uh in app data local and

100
00:04:15,720 --> 00:04:18,000
app data roaming so if you look like

101
00:04:18,000 --> 00:04:20,220
Spotify we'll have a folder in roaming

102
00:04:20,220 --> 00:04:23,220
and in local right and then based on

103
00:04:23,220 --> 00:04:26,460
whatever the developer choices uh in one

104
00:04:26,460 --> 00:04:28,800
of those folders they'll be

105
00:04:28,800 --> 00:04:32,460
two files kind of one is a state file

106
00:04:32,460 --> 00:04:34,259
which has

107
00:04:34,259 --> 00:04:37,100
uh some DP API encrypted data in there

108
00:04:37,100 --> 00:04:40,020
and one is a cookie store which is a

109
00:04:40,020 --> 00:04:42,419
sqlite database which has cookie

110
00:04:42,419 --> 00:04:44,400
information for those authenticated

111
00:04:44,400 --> 00:04:46,919
sessions that those apps use like

112
00:04:46,919 --> 00:04:49,139
Spotify will not ask you for your creds

113
00:04:49,139 --> 00:04:51,240
when you open it the second time it's

114
00:04:51,240 --> 00:04:53,280
because it's loading those session

115
00:04:53,280 --> 00:04:56,759
tokens from that sqlite database right

116
00:04:56,759 --> 00:05:00,600
and so those session cookies are

117
00:05:00,600 --> 00:05:03,240
encrypted and you have the state file

118
00:05:03,240 --> 00:05:06,419
which you use DP API to decrypt and then

119
00:05:06,419 --> 00:05:09,840
you can read the cookies essentially I

120
00:05:09,840 --> 00:05:12,360
say that uh this is how it works mostly

121
00:05:12,360 --> 00:05:14,699
because there are some again some

122
00:05:14,699 --> 00:05:17,660
Liberty like for example GitHub desktop

123
00:05:17,660 --> 00:05:20,820
uses uh the windows credential manager

124
00:05:20,820 --> 00:05:23,639
to store its authentication data so

125
00:05:23,639 --> 00:05:25,800
developers can choose to do something

126
00:05:25,800 --> 00:05:28,380
different but this is mostly how that

127
00:05:28,380 --> 00:05:30,300
works

128
00:05:30,300 --> 00:05:33,000
yeah so I wrote a small tool I wrote a

129
00:05:33,000 --> 00:05:35,160
small tool like electrolyte uh because

130
00:05:35,160 --> 00:05:36,660
uh

131
00:05:36,660 --> 00:05:38,160
if you see here at the bottom of the

132
00:05:38,160 --> 00:05:39,720
slide like if you've done red teamwork

133
00:05:39,720 --> 00:05:41,820
and you've stolen like session data from

134
00:05:41,820 --> 00:05:44,100
browsers uh or you know cookies or

135
00:05:44,100 --> 00:05:46,080
passwords or something like that you've

136
00:05:46,080 --> 00:05:48,180
probably used uh sharp Chrome to do that

137
00:05:48,180 --> 00:05:49,860
uh in the past and this is really

138
00:05:49,860 --> 00:05:51,960
similar because electron is based on

139
00:05:51,960 --> 00:05:54,539
Chrome right so it's the same thing uh

140
00:05:54,539 --> 00:05:56,100
and um

141
00:05:56,100 --> 00:05:59,280
the the issue is that in sharp Chrome

142
00:05:59,280 --> 00:06:01,680
there were some Flags missing to let me

143
00:06:01,680 --> 00:06:02,940
easily

144
00:06:02,940 --> 00:06:06,300
Point uh sharp Chrome to the state file

145
00:06:06,300 --> 00:06:08,100
and the cookie database so I ripped a

146
00:06:08,100 --> 00:06:10,380
bunch of code out of sharp Chrome and

147
00:06:10,380 --> 00:06:12,479
put it like into electrolyte and so you

148
00:06:12,479 --> 00:06:15,720
just point it at these two files and it

149
00:06:15,720 --> 00:06:17,160
will decrypt it for you and give you

150
00:06:17,160 --> 00:06:20,520
back the cookies right and so I I have a

151
00:06:20,520 --> 00:06:21,900
demo of this

152
00:06:21,900 --> 00:06:25,740
okay so here I I'm logged into slack I

153
00:06:25,740 --> 00:06:26,460
um

154
00:06:26,460 --> 00:06:28,139
let me pause it right there so I I

155
00:06:28,139 --> 00:06:30,240
created like a slack workspace just for

156
00:06:30,240 --> 00:06:33,720
for this Con to do the demos and I don't

157
00:06:33,720 --> 00:06:36,000
know how readable the text is but you

158
00:06:36,000 --> 00:06:38,100
get like I'm pointing electrolyte like

159
00:06:38,100 --> 00:06:40,380
at the cookie store and at the state

160
00:06:40,380 --> 00:06:45,240
file for slack and then when I run it it

161
00:06:45,240 --> 00:06:48,240
decrypts those cookies from the sqlite

162
00:06:48,240 --> 00:06:50,340
database and then I get them you know in

163
00:06:50,340 --> 00:06:51,800
plain text right

164
00:06:51,800 --> 00:06:54,419
and uh

165
00:06:54,419 --> 00:06:58,020
okay I'm highlighting things apparently

166
00:06:58,020 --> 00:07:00,539
that's what's going on yeah so I I

167
00:07:00,539 --> 00:07:04,020
launched here like a VM in hyper-v so

168
00:07:04,020 --> 00:07:06,539
that you can see that um

169
00:07:06,539 --> 00:07:09,060
uh in this VM I don't have any

170
00:07:09,060 --> 00:07:11,940
authentication data for Slack

171
00:07:11,940 --> 00:07:14,340
I should pull that up here

172
00:07:14,340 --> 00:07:16,380
yeah you can see like I'm not logged in

173
00:07:16,380 --> 00:07:18,900
I refresh the page right

174
00:07:18,900 --> 00:07:22,620
but then I can just edit the cookies for

175
00:07:22,620 --> 00:07:23,819
this domain

176
00:07:23,819 --> 00:07:26,220
so I'll add just the just the one cookie

177
00:07:26,220 --> 00:07:28,919
there's one called D which has the main

178
00:07:28,919 --> 00:07:32,759
authentication token for slack so I just

179
00:07:32,759 --> 00:07:36,919
add that one in that I decrypted there

180
00:07:42,060 --> 00:07:46,280
and then I take some boxes that's my job

181
00:07:48,360 --> 00:07:51,060
right and then when we refresh we're

182
00:07:51,060 --> 00:07:53,099
actually authenticated as the user in

183
00:07:53,099 --> 00:07:54,240
the VM

184
00:07:54,240 --> 00:07:56,460
uh and we have access to that same

185
00:07:56,460 --> 00:07:59,580
workspace as on the base base operating

186
00:07:59,580 --> 00:08:01,940
system

187
00:08:07,319 --> 00:08:09,419
yeah you see like we're logged in like

188
00:08:09,419 --> 00:08:11,639
we're in the web app version of that of

189
00:08:11,639 --> 00:08:13,440
that workspace and we can control the

190
00:08:13,440 --> 00:08:15,479
user right or whatever

191
00:08:15,479 --> 00:08:17,580
so I think like uh

192
00:08:17,580 --> 00:08:19,259
if you're on a red team engagement

193
00:08:19,259 --> 00:08:21,840
probably this is how you would use this

194
00:08:21,840 --> 00:08:25,500
most likely like you you extract the the

195
00:08:25,500 --> 00:08:28,740
web session cookie and then what you

196
00:08:28,740 --> 00:08:30,780
could do is for example inject a beacon

197
00:08:30,780 --> 00:08:34,200
into slack and then open like socks so

198
00:08:34,200 --> 00:08:36,659
that on your attacker machine you could

199
00:08:36,659 --> 00:08:38,880
then proxy through

200
00:08:38,880 --> 00:08:41,940
the slack process on the victim's host

201
00:08:41,940 --> 00:08:44,399
and then they would just be slack

202
00:08:44,399 --> 00:08:46,800
traffic coming from the slack app and it

203
00:08:46,800 --> 00:08:49,320
would look fairly normal I would say not

204
00:08:49,320 --> 00:08:50,760
totally normal but fairly normal

205
00:08:50,760 --> 00:08:52,800
probably normal enough that people

206
00:08:52,800 --> 00:08:54,480
wouldn't notice

207
00:08:54,480 --> 00:08:56,519
yeah so it's a bit it's kind of it's

208
00:08:56,519 --> 00:08:59,279
kind of yikes it's kind of yikes I think

209
00:08:59,279 --> 00:09:01,680
I think the big thing is like when we do

210
00:09:01,680 --> 00:09:03,600
red team engagements we take a lot of

211
00:09:03,600 --> 00:09:07,680
advantage of um browser data but we

212
00:09:07,680 --> 00:09:10,019
don't always realize I think that these

213
00:09:10,019 --> 00:09:11,820
electron apps are just browsers as well

214
00:09:11,820 --> 00:09:14,700
so you can loot them in the same way

215
00:09:14,700 --> 00:09:16,500
that you loot you loot the browsers

216
00:09:16,500 --> 00:09:17,279
right

217
00:09:17,279 --> 00:09:19,560
so this looks familiar right like what

218
00:09:19,560 --> 00:09:21,660
we've been doing like I said this is

219
00:09:21,660 --> 00:09:23,820
kind of like using sharp Chrome I just

220
00:09:23,820 --> 00:09:26,580
made some minor adjustments to

221
00:09:26,580 --> 00:09:29,100
uh to make it more convenient like with

222
00:09:29,100 --> 00:09:30,839
electrolyte

223
00:09:30,839 --> 00:09:32,459
the one thing I want to mention here is

224
00:09:32,459 --> 00:09:35,700
that if you have d a on a domain uh you

225
00:09:35,700 --> 00:09:39,180
can get the domain DP API backup key and

226
00:09:39,180 --> 00:09:41,940
then you can dump these databases

227
00:09:41,940 --> 00:09:43,920
remotely you don't actually need to pop

228
00:09:43,920 --> 00:09:47,519
that box to get the cookie data you can

229
00:09:47,519 --> 00:09:50,760
do it all remotely and I added some

230
00:09:50,760 --> 00:09:53,220
links here of some stuff you can review

231
00:09:53,220 --> 00:09:56,760
to to get more background information

232
00:09:56,760 --> 00:09:58,380
cool cool

233
00:09:58,380 --> 00:10:01,800
uh yeah I wanted to just talk a little

234
00:10:01,800 --> 00:10:04,140
bit about this like I think

235
00:10:04,140 --> 00:10:06,959
on the internet right there are like uh

236
00:10:06,959 --> 00:10:10,080
three kinds of people doing things uh

237
00:10:10,080 --> 00:10:12,120
there's like red team who is doing like

238
00:10:12,120 --> 00:10:14,880
authorized work for their clients uh

239
00:10:14,880 --> 00:10:16,800
there's crime who are stealing your your

240
00:10:16,800 --> 00:10:18,600
Bitcoins probably or something like that

241
00:10:18,600 --> 00:10:21,180
uh and then there's like whatever Intel

242
00:10:21,180 --> 00:10:24,120
Services collecting for whatever reason

243
00:10:24,120 --> 00:10:28,019
uh and I think these uh these two these

244
00:10:28,019 --> 00:10:30,899
three groups are doing some things they

245
00:10:30,899 --> 00:10:32,760
do they have overlaps right like I

246
00:10:32,760 --> 00:10:34,140
imagine all of them probably want to

247
00:10:34,140 --> 00:10:37,019
steal your browser session data right

248
00:10:37,019 --> 00:10:39,300
but I think there are also differences

249
00:10:39,300 --> 00:10:42,720
uh between those like uh WhatsApp is a

250
00:10:42,720 --> 00:10:44,579
good example like if I have WhatsApp on

251
00:10:44,579 --> 00:10:46,079
my desktop

252
00:10:46,079 --> 00:10:49,019
probably no or let's say

253
00:10:49,019 --> 00:10:51,000
somebody I'm targeting it has WhatsApp

254
00:10:51,000 --> 00:10:54,000
on their desktop like I don't care that

255
00:10:54,000 --> 00:10:55,760
they have some private Communications

256
00:10:55,760 --> 00:10:58,200
which they're sharing right but probably

257
00:10:58,200 --> 00:11:00,000
Intel might want to look at those

258
00:11:00,000 --> 00:11:03,420
private Communications so I think

259
00:11:03,420 --> 00:11:05,579
one thing here is that uh we're looking

260
00:11:05,579 --> 00:11:07,560
at this from like a kind of corporate

261
00:11:07,560 --> 00:11:09,779
perspective but this is also affecting

262
00:11:09,779 --> 00:11:12,360
people with private private people right

263
00:11:12,360 --> 00:11:15,480
like another example would be uh

264
00:11:15,480 --> 00:11:18,240
electron electron Bitcoin wallets and

265
00:11:18,240 --> 00:11:19,860
you know these are just things people

266
00:11:19,860 --> 00:11:21,720
need to be aware of because these issues

267
00:11:21,720 --> 00:11:25,260
exist not just in corporate testing but

268
00:11:25,260 --> 00:11:27,420
also in private people's uh lives

269
00:11:27,420 --> 00:11:29,459
essentially

270
00:11:29,459 --> 00:11:31,680
now we understand how we can kind of

271
00:11:31,680 --> 00:11:34,380
extract this session data from many

272
00:11:34,380 --> 00:11:38,100
electron applications I decided to focus

273
00:11:38,100 --> 00:11:40,740
on slack to do a kind of test case to

274
00:11:40,740 --> 00:11:43,920
limit test like what can we do uh if we

275
00:11:43,920 --> 00:11:46,519
wanted to take this as far as we could

276
00:11:46,519 --> 00:11:49,320
and then like why did I pick slack it's

277
00:11:49,320 --> 00:11:51,360
just for some simple reasons like slack

278
00:11:51,360 --> 00:11:53,160
is common not just for private but

279
00:11:53,160 --> 00:11:56,220
corporate use in fact at IBM we use

280
00:11:56,220 --> 00:11:58,860
slack and I did some extensive testing

281
00:11:58,860 --> 00:12:00,920
testing on that

282
00:12:00,920 --> 00:12:04,140
uh slack has good API documentation so

283
00:12:04,140 --> 00:12:06,779
that helps that helps because uh we

284
00:12:06,779 --> 00:12:09,959
don't have to intercept requests and try

285
00:12:09,959 --> 00:12:12,720
to understand what the API methods are

286
00:12:12,720 --> 00:12:14,519
they document them for us so that's very

287
00:12:14,519 --> 00:12:15,600
helpful

288
00:12:15,600 --> 00:12:19,220
and then I think chat apps specifically

289
00:12:19,220 --> 00:12:22,260
are probably underused during red team

290
00:12:22,260 --> 00:12:24,180
engagements because you'll know that

291
00:12:24,180 --> 00:12:27,000
like at your in companies internally

292
00:12:27,000 --> 00:12:29,399
people are sharing things they probably

293
00:12:29,399 --> 00:12:31,920
shouldn't all the time or you know hey

294
00:12:31,920 --> 00:12:33,720
here's a file let me share it to you

295
00:12:33,720 --> 00:12:35,339
through this slack app or things like

296
00:12:35,339 --> 00:12:37,680
that or talking about sensitive projects

297
00:12:37,680 --> 00:12:39,540
right so there's a lot of data that can

298
00:12:39,540 --> 00:12:41,700
be mined from these apps

299
00:12:41,700 --> 00:12:44,279
and then finally I thought there was an

300
00:12:44,279 --> 00:12:46,560
interesting case with Electronic Arts

301
00:12:46,560 --> 00:12:51,120
who were popped or compromised yes uh

302
00:12:51,120 --> 00:12:54,360
last year and some people bought like

303
00:12:54,360 --> 00:12:57,300
stolen slack cookie from the underground

304
00:12:57,300 --> 00:12:59,639
or wherever that is

305
00:12:59,639 --> 00:13:03,000
and um they did essentially what I did

306
00:13:03,000 --> 00:13:05,040
in the demo right they put the cookie in

307
00:13:05,040 --> 00:13:06,839
the browser and they authenticated as

308
00:13:06,839 --> 00:13:10,860
the user onto EA slack and then they did

309
00:13:10,860 --> 00:13:13,079
some social engineering to get one of

310
00:13:13,079 --> 00:13:15,839
the slack I.T people to set them up with

311
00:13:15,839 --> 00:13:19,800
VPN access into the network so I think

312
00:13:19,800 --> 00:13:22,019
that demonstrates that there's a risk

313
00:13:22,019 --> 00:13:25,380
there for for companies right uh and

314
00:13:25,380 --> 00:13:27,540
then yeah if we think about what the

315
00:13:27,540 --> 00:13:29,160
challenges are doing this kind of thing

316
00:13:29,160 --> 00:13:31,800
uh we already crossed off the first one

317
00:13:31,800 --> 00:13:35,220
so we can extract those web session

318
00:13:35,220 --> 00:13:37,740
cookies using DP API that's not a

319
00:13:37,740 --> 00:13:39,839
problem anymore so the only two things

320
00:13:39,839 --> 00:13:42,959
that uh remain are

321
00:13:42,959 --> 00:13:45,779
just some Recon stuff right like if I

322
00:13:45,779 --> 00:13:48,360
land on a user's machine I need to

323
00:13:48,360 --> 00:13:49,639
understand

324
00:13:49,639 --> 00:13:52,079
workspaces they have access to some very

325
00:13:52,079 --> 00:13:54,600
practical questions and um

326
00:13:54,600 --> 00:13:56,760
something else which is not apparent is

327
00:13:56,760 --> 00:13:59,100
that you don't only need this web

328
00:13:59,100 --> 00:14:01,139
session cookie but each of the

329
00:14:01,139 --> 00:14:03,779
workspaces that the user has also has a

330
00:14:03,779 --> 00:14:06,000
kind of API token which you need to be

331
00:14:06,000 --> 00:14:08,040
able to extract so those are the two

332
00:14:08,040 --> 00:14:10,380
remaining issues

333
00:14:10,380 --> 00:14:12,600
so the first one

334
00:14:12,600 --> 00:14:15,660
uh scoping user access is very easy

335
00:14:15,660 --> 00:14:19,440
there's actually a Json file uh in app

336
00:14:19,440 --> 00:14:23,040
data roaming slack storage and this Json

337
00:14:23,040 --> 00:14:26,279
file is like root State Json I which

338
00:14:26,279 --> 00:14:28,260
contains a Json blob as you can imagine

339
00:14:28,260 --> 00:14:31,800
from its name and that has some good

340
00:14:31,800 --> 00:14:34,079
data in there like all the workspaces

341
00:14:34,079 --> 00:14:36,600
that user is authenticated for in in the

342
00:14:36,600 --> 00:14:38,279
app on their machine that has a

343
00:14:38,279 --> 00:14:40,199
description of those workspaces it also

344
00:14:40,199 --> 00:14:42,480
has like user IDs and stuff like that

345
00:14:42,480 --> 00:14:45,660
and anytime you download a file in slack

346
00:14:45,660 --> 00:14:49,139
from any workspace that Json file will

347
00:14:49,139 --> 00:14:51,480
be updated and there will be like a lot

348
00:14:51,480 --> 00:14:53,459
of metadata about that file like what

349
00:14:53,459 --> 00:14:55,920
the permalink is for the file who

350
00:14:55,920 --> 00:14:58,079
uploaded the file when did you download

351
00:14:58,079 --> 00:15:00,420
it what was the local path and the name

352
00:15:00,420 --> 00:15:02,699
of that file and so that can be useful

353
00:15:02,699 --> 00:15:05,639
like let's say that you compromise a

354
00:15:05,639 --> 00:15:09,000
user in some sensitive business unit you

355
00:15:09,000 --> 00:15:10,620
can look at all of their slack downloads

356
00:15:10,620 --> 00:15:13,199
and maybe get some documents and stuff

357
00:15:13,199 --> 00:15:16,320
so I think yeah we have we have an

358
00:15:16,320 --> 00:15:19,680
example of that as well yeah so this is

359
00:15:19,680 --> 00:15:22,620
running static shiv like on my machine

360
00:15:22,620 --> 00:15:25,320
uh at home and you so you can see I'm

361
00:15:25,320 --> 00:15:27,899
I'm a degenerate like I'm in 50 slack

362
00:15:27,899 --> 00:15:29,940
groups or or whatever I I don't know

363
00:15:29,940 --> 00:15:32,279
it's an it's a nightmare

364
00:15:32,279 --> 00:15:34,860
um but yeah so it doesn't like in the

365
00:15:34,860 --> 00:15:36,540
test environment I only have one

366
00:15:36,540 --> 00:15:38,339
workspace but all of this works no

367
00:15:38,339 --> 00:15:39,600
matter how many

368
00:15:39,600 --> 00:15:42,360
slack workspaces you're in right so I

369
00:15:42,360 --> 00:15:43,980
just wanted to show that and then I

370
00:15:43,980 --> 00:15:46,680
think we have a demo here

371
00:15:46,680 --> 00:15:49,139
yeah so here I just run dash dash config

372
00:15:49,139 --> 00:15:51,540
you can see it pulls up I'm in this wild

373
00:15:51,540 --> 00:15:53,779
west hacking Fest San Diego workspace

374
00:15:53,779 --> 00:15:56,579
and I did it like a test download so you

375
00:15:56,579 --> 00:15:58,980
can see that it recovered one download

376
00:15:58,980 --> 00:16:03,240
uh by the user and uh yeah you can see

377
00:16:03,240 --> 00:16:05,519
the Perma link to the file which we can

378
00:16:05,519 --> 00:16:09,779
access uh you can also see uh yeah what

379
00:16:09,779 --> 00:16:11,459
the workspace is so if a user has

380
00:16:11,459 --> 00:16:13,440
multiple workspaces you can see all of

381
00:16:13,440 --> 00:16:14,220
that

382
00:16:14,220 --> 00:16:16,019
you can see like when it was downloaded

383
00:16:16,019 --> 00:16:17,880
what the file name was and and

384
00:16:17,880 --> 00:16:20,820
everything like that

385
00:16:20,820 --> 00:16:23,279
so here in the hypervm we're still

386
00:16:23,279 --> 00:16:25,740
logged in and so I just want to show you

387
00:16:25,740 --> 00:16:29,639
if I paste the permalink then

388
00:16:29,639 --> 00:16:31,800
we can just download this file right I

389
00:16:31,800 --> 00:16:33,360
think I called it like

390
00:16:33,360 --> 00:16:36,540
yeah secretkey.txt but you you get the

391
00:16:36,540 --> 00:16:39,540
idea like uh once you have access this

392
00:16:39,540 --> 00:16:41,459
level of access your you are the user

393
00:16:41,459 --> 00:16:45,120
you can grab all those files right

394
00:16:45,120 --> 00:16:48,660
still we're not talking to slacks API

395
00:16:48,660 --> 00:16:50,339
we're

396
00:16:50,339 --> 00:16:53,699
only doing this web stuff right but what

397
00:16:53,699 --> 00:16:55,380
we really want is to interface with

398
00:16:55,380 --> 00:16:58,740
slacks API and so like I mentioned each

399
00:16:58,740 --> 00:17:01,680
workspace has like a slack token that we

400
00:17:01,680 --> 00:17:03,240
need to find

401
00:17:03,240 --> 00:17:05,760
and uh it's a bit convoluted to do that

402
00:17:05,760 --> 00:17:07,859
but we have all the information that we

403
00:17:07,859 --> 00:17:11,699
need so from uh the root State Json file

404
00:17:11,699 --> 00:17:14,160
we can extract the workspaces as we saw

405
00:17:14,160 --> 00:17:17,160
right and so we have these uh workspaces

406
00:17:17,160 --> 00:17:18,839
in the red box here

407
00:17:18,839 --> 00:17:20,520
and then

408
00:17:20,520 --> 00:17:22,619
from the state file and the cookie store

409
00:17:22,619 --> 00:17:25,740
we can make get requests you know normal

410
00:17:25,740 --> 00:17:28,380
get requests to those workspaces and so

411
00:17:28,380 --> 00:17:30,480
I think what I do is I make a get

412
00:17:30,480 --> 00:17:33,419
request to one of the profiled pages of

413
00:17:33,419 --> 00:17:37,740
some specific page on that workspace and

414
00:17:37,740 --> 00:17:40,860
then in the response for that request I

415
00:17:40,860 --> 00:17:43,980
get the token for that workspace for the

416
00:17:43,980 --> 00:17:46,559
API and so it's just a bit convoluted

417
00:17:46,559 --> 00:17:48,840
but uh once you once you know how to do

418
00:17:48,840 --> 00:17:51,179
it it's it's not that difficult and so

419
00:17:51,179 --> 00:17:54,059
we can see again the example here on my

420
00:17:54,059 --> 00:17:57,900
base machine where I just get API tokens

421
00:17:57,900 --> 00:17:59,640
for all of the workspaces that I'm

422
00:17:59,640 --> 00:18:01,799
authenticated to uh

423
00:18:01,799 --> 00:18:04,980
and then we have a demo of this as well

424
00:18:04,980 --> 00:18:08,160
oh yeah let me just yeah so you can see

425
00:18:08,160 --> 00:18:10,380
like here I'm I have like a parameter

426
00:18:10,380 --> 00:18:14,100
I'm calling xox that's because uh slack

427
00:18:14,100 --> 00:18:15,419
for some

428
00:18:15,419 --> 00:18:17,700
peculiar reason changes the name of

429
00:18:17,700 --> 00:18:19,559
these cookies so whenever I wrote this

430
00:18:19,559 --> 00:18:22,520
the cookie was xox but now it's

431
00:18:22,520 --> 00:18:26,880
xoxc or whatever uh but uh yeah I just

432
00:18:26,880 --> 00:18:30,020
wrote a regex right to get the cookie

433
00:18:30,020 --> 00:18:33,240
so yeah so I have this workspace for

434
00:18:33,240 --> 00:18:35,460
Wild West hacking Fest San Diego and I

435
00:18:35,460 --> 00:18:36,780
got the token

436
00:18:36,780 --> 00:18:39,419
and then we can test the token because

437
00:18:39,419 --> 00:18:41,340
slack has like um

438
00:18:41,340 --> 00:18:43,980
it allows you to test API methods on

439
00:18:43,980 --> 00:18:46,559
their website and so this one auth.test

440
00:18:46,559 --> 00:18:48,900
we can use that to verify that this

441
00:18:48,900 --> 00:18:51,299
token is valid we just paste the token

442
00:18:51,299 --> 00:18:53,760
in there and when we test this method

443
00:18:53,760 --> 00:18:55,140
method

444
00:18:55,140 --> 00:18:57,299
we get back

445
00:18:57,299 --> 00:19:00,000
the this data right like it says okay is

446
00:19:00,000 --> 00:19:02,760
true it tells you what the workspace is

447
00:19:02,760 --> 00:19:05,760
what the user is that this token belongs

448
00:19:05,760 --> 00:19:06,600
to

449
00:19:06,600 --> 00:19:09,179
etc etc

450
00:19:09,179 --> 00:19:11,520
just want to talk a little bit about

451
00:19:11,520 --> 00:19:13,500
this before

452
00:19:13,500 --> 00:19:17,280
before we go ahead slack session theft

453
00:19:17,280 --> 00:19:20,360
history right my book is coming out soon

454
00:19:20,360 --> 00:19:23,820
uh and uh so initially I wrote the proof

455
00:19:23,820 --> 00:19:26,940
of concept for this in November 2020 so

456
00:19:26,940 --> 00:19:29,400
this is quite some time ago already I

457
00:19:29,400 --> 00:19:31,140
have like a tweet with some nonsense but

458
00:19:31,140 --> 00:19:32,780
you don't you don't need to look at that

459
00:19:32,780 --> 00:19:35,400
but uh just the point I want to make is

460
00:19:35,400 --> 00:19:38,539
that things uh change a lot over time

461
00:19:38,539 --> 00:19:40,559
and so

462
00:19:40,559 --> 00:19:44,820
we saw that this local cookie store the

463
00:19:44,820 --> 00:19:47,880
sqlite cookie store is using DP API now

464
00:19:47,880 --> 00:19:50,039
to encrypt cookies but that wasn't the

465
00:19:50,039 --> 00:19:53,580
case in November 2020 those cookies were

466
00:19:53,580 --> 00:19:56,940
there in clear text uh and so I think

467
00:19:56,940 --> 00:19:59,940
what happened there is like improvements

468
00:19:59,940 --> 00:20:02,640
in Chrome security made their way down

469
00:20:02,640 --> 00:20:05,580
to electron eventually because there's

470
00:20:05,580 --> 00:20:07,200
some lag time there right and then

471
00:20:07,200 --> 00:20:09,080
developers started

472
00:20:09,080 --> 00:20:13,200
implementing those methods to make their

473
00:20:13,200 --> 00:20:15,720
session data more secure uh that's just

474
00:20:15,720 --> 00:20:18,299
like an example the other thing is like

475
00:20:18,299 --> 00:20:21,480
we talked a little bit about that we

476
00:20:21,480 --> 00:20:24,840
need this web session cookie but we also

477
00:20:24,840 --> 00:20:28,559
need a token for the API for each of the

478
00:20:28,559 --> 00:20:30,900
workspaces and it used to be that you

479
00:20:30,900 --> 00:20:32,640
didn't need that web session cookie you

480
00:20:32,640 --> 00:20:35,160
could just use the token and that was

481
00:20:35,160 --> 00:20:38,100
fine so they're like architectural

482
00:20:38,100 --> 00:20:40,440
changes that happen over a period

483
00:20:40,440 --> 00:20:41,820
especially if you're looking since

484
00:20:41,820 --> 00:20:44,280
November 2020 right

485
00:20:44,280 --> 00:20:47,460
and a lot of API and documentation

486
00:20:47,460 --> 00:20:51,480
changes as well so I think it's not just

487
00:20:51,480 --> 00:20:54,120
you write a toolkit but you have to

488
00:20:54,120 --> 00:20:56,760
expect to maintain that toolkit

489
00:20:56,760 --> 00:20:59,640
otherwise it stops working it's not

490
00:20:59,640 --> 00:21:00,960
working

491
00:21:00,960 --> 00:21:04,200
you have to expect to do the work

492
00:21:04,200 --> 00:21:06,720
cool boom boom easy

493
00:21:06,720 --> 00:21:09,419
uh yeah so then we have everything we

494
00:21:09,419 --> 00:21:12,299
need to do um

495
00:21:12,299 --> 00:21:16,380
uh API Automation and I have this line

496
00:21:16,380 --> 00:21:18,480
here right like anything you can do I

497
00:21:18,480 --> 00:21:20,400
can do better this is a great song by

498
00:21:20,400 --> 00:21:23,520
the way you should check that out

499
00:21:23,520 --> 00:21:25,919
but I think it's very accurate because

500
00:21:25,919 --> 00:21:28,940
we can do anything the user can do but

501
00:21:28,940 --> 00:21:32,400
the user is um

502
00:21:32,400 --> 00:21:35,280
when the user uses the desktop app or

503
00:21:35,280 --> 00:21:37,140
the mobile app they are following

504
00:21:37,140 --> 00:21:39,900
following some kind of UI experience so

505
00:21:39,900 --> 00:21:42,600
they can do only things that the UI lets

506
00:21:42,600 --> 00:21:45,240
them do but because we are talking to

507
00:21:45,240 --> 00:21:49,080
the API we can do things sometimes that

508
00:21:49,080 --> 00:21:50,820
a user is not able to do directly

509
00:21:50,820 --> 00:21:53,159
because it's part of some workflow or

510
00:21:53,159 --> 00:21:55,919
something like that so I think

511
00:21:55,919 --> 00:21:58,620
uh while it's a lot of work to implement

512
00:21:58,620 --> 00:22:01,440
all the methods we actually can do

513
00:22:01,440 --> 00:22:04,080
anything the user can do but better

514
00:22:04,080 --> 00:22:06,059
right and just these are just some

515
00:22:06,059 --> 00:22:08,520
examples uh uh we can get channel

516
00:22:08,520 --> 00:22:11,640
information you can do fuzzy search for

517
00:22:11,640 --> 00:22:14,220
keywords get user details read

518
00:22:14,220 --> 00:22:17,580
conversations and send messages right

519
00:22:17,580 --> 00:22:19,860
the of course these are things the user

520
00:22:19,860 --> 00:22:22,140
can do in the app as well but there are

521
00:22:22,140 --> 00:22:25,640
things that they cannot that we can

522
00:22:26,460 --> 00:22:28,500
one other thing about this is like when

523
00:22:28,500 --> 00:22:30,659
I say conversations this is the term

524
00:22:30,659 --> 00:22:33,480
that slack uses but they mean everything

525
00:22:33,480 --> 00:22:37,919
basically like channels or IMS is also a

526
00:22:37,919 --> 00:22:40,260
kind of conversation between two people

527
00:22:40,260 --> 00:22:42,539
and if if you start a conversation with

528
00:22:42,539 --> 00:22:44,100
more than two people they call it an

529
00:22:44,100 --> 00:22:47,580
mpim right like a multi-person im or

530
00:22:47,580 --> 00:22:50,520
something like that uh yeah that's it

531
00:22:50,520 --> 00:22:52,620
basically and then

532
00:22:52,620 --> 00:22:56,100
you can use this link on the slide to

533
00:22:56,100 --> 00:23:00,360
look at their API documentation

534
00:23:00,360 --> 00:23:02,159
so the first thing the first thing I

535
00:23:02,159 --> 00:23:04,919
want to check out or like uh Ricky the

536
00:23:04,919 --> 00:23:06,720
battlefield I think this is a britishism

537
00:23:06,720 --> 00:23:09,419
okay you would say in America you would

538
00:23:09,419 --> 00:23:11,760
say Recon the battlefield okay just so

539
00:23:11,760 --> 00:23:13,740
you just so you understand

540
00:23:13,740 --> 00:23:16,679
so we do some information gathering

541
00:23:16,679 --> 00:23:19,620
with conversation list we can get a list

542
00:23:19,620 --> 00:23:21,299
of all the conversations the user has

543
00:23:21,299 --> 00:23:24,059
access to and something I should explain

544
00:23:24,059 --> 00:23:26,520
about this is that let's say that an

545
00:23:26,520 --> 00:23:29,340
organization has a thousand slack

546
00:23:29,340 --> 00:23:31,020
channels

547
00:23:31,020 --> 00:23:34,260
a user may have access to let's say 800

548
00:23:34,260 --> 00:23:36,720
of those slack channels but they may

549
00:23:36,720 --> 00:23:40,200
only be in 10 slack channels

550
00:23:40,200 --> 00:23:42,360
the thing to understand here is that the

551
00:23:42,360 --> 00:23:44,700
API doesn't care if you are part of a

552
00:23:44,700 --> 00:23:47,460
Channel or not as so long as your

553
00:23:47,460 --> 00:23:50,520
identity has access to those channels so

554
00:23:50,520 --> 00:23:52,740
you can read channels that you're not a

555
00:23:52,740 --> 00:23:54,960
part that the user hasn't joined and

556
00:23:54,960 --> 00:23:56,700
things like you can send messages that

557
00:23:56,700 --> 00:23:58,380
in channels the user hasn't joined all

558
00:23:58,380 --> 00:24:00,960
those things uh yeah so conversation

559
00:24:00,960 --> 00:24:06,059
list and you can also use users info to

560
00:24:06,059 --> 00:24:08,900
get more details about a user account

561
00:24:08,900 --> 00:24:12,419
some details which may be interesting

562
00:24:12,419 --> 00:24:15,780
for during the red team engagement

563
00:24:15,780 --> 00:24:18,120
yeah so here I just pre-generated the

564
00:24:18,120 --> 00:24:20,640
the token but we've seen that we can do

565
00:24:20,640 --> 00:24:23,820
that right uh so I do a token pass in

566
00:24:23,820 --> 00:24:27,900
the API token and then I do dash dash

567
00:24:27,900 --> 00:24:30,299
conversations and here

568
00:24:30,299 --> 00:24:34,559
uh here uh I I split it out in static

569
00:24:34,559 --> 00:24:36,240
shift so that conversation give you only

570
00:24:36,240 --> 00:24:37,620
Channel information and then I have

571
00:24:37,620 --> 00:24:40,980
another flag I am to give you IMS uh so

572
00:24:40,980 --> 00:24:43,559
here you can see that like the channels

573
00:24:43,559 --> 00:24:45,900
in this in this workspace I created now

574
00:24:45,900 --> 00:24:49,200
here there are limited number of them uh

575
00:24:49,200 --> 00:24:52,500
but for example at my company there's

576
00:24:52,500 --> 00:24:55,320
like I don't know 50k channels I don't

577
00:24:55,320 --> 00:24:56,760
know

578
00:24:56,760 --> 00:24:59,280
so I've stress tested I've stress tested

579
00:24:59,280 --> 00:25:01,620
this yeah

580
00:25:01,620 --> 00:25:06,120
you can you can see here uh if I

581
00:25:06,120 --> 00:25:08,460
if I go back yeah and highlight you can

582
00:25:08,460 --> 00:25:10,860
see that for example this channel uh

583
00:25:10,860 --> 00:25:14,940
Tech stuff my user is not joined to this

584
00:25:14,940 --> 00:25:17,280
channel but it doesn't matter like I

585
00:25:17,280 --> 00:25:19,320
said you can pull all that data as you

586
00:25:19,320 --> 00:25:21,439
wish

587
00:25:23,760 --> 00:25:26,419
okay and then we just do the same thing

588
00:25:26,419 --> 00:25:30,779
uh for uh IMS and so we get the IMs you

589
00:25:30,779 --> 00:25:33,000
can see there's an IM with a user called

590
00:25:33,000 --> 00:25:35,880
Avalon another one with a user called

591
00:25:35,880 --> 00:25:38,640
beef and then slackbot so slackbot is

592
00:25:38,640 --> 00:25:42,120
also a proper conversation in terms of

593
00:25:42,120 --> 00:25:46,679
uh API backend right and then uh like I

594
00:25:46,679 --> 00:25:49,620
said we can get user information so if

595
00:25:49,620 --> 00:25:52,740
we copy that user ID and paste it here

596
00:25:52,740 --> 00:25:54,779
you can see that we get

597
00:25:54,779 --> 00:25:57,600
more details about this user like uh

598
00:25:57,600 --> 00:26:00,059
whatever their user ID is their real

599
00:26:00,059 --> 00:26:01,260
name

600
00:26:01,260 --> 00:26:05,279
like uh whatever their time zone their

601
00:26:05,279 --> 00:26:07,620
title like uh Tech person at the place

602
00:26:07,620 --> 00:26:10,500
right uh and their number email address

603
00:26:10,500 --> 00:26:12,659
all that stuff so that can be useful

604
00:26:12,659 --> 00:26:14,700
when you're doing like recall on users

605
00:26:14,700 --> 00:26:17,880
on a network right uh and then yeah I

606
00:26:17,880 --> 00:26:20,039
think I'm just doing the same thing here

607
00:26:20,039 --> 00:26:26,100
cool cool uh now we don't only want to

608
00:26:26,100 --> 00:26:28,260
do some information gathering right like

609
00:26:28,260 --> 00:26:30,720
we want to take our payment in Secrets

610
00:26:30,720 --> 00:26:33,179
uh when we're looking at this like I

611
00:26:33,179 --> 00:26:35,820
said that a lot of times users will

612
00:26:35,820 --> 00:26:37,320
share things maybe they're not supposed

613
00:26:37,320 --> 00:26:39,179
to or they think it's fine to share it

614
00:26:39,179 --> 00:26:42,240
or uh let's say some sensitive business

615
00:26:42,240 --> 00:26:44,520
unit they talk about the product they're

616
00:26:44,520 --> 00:26:46,320
working on inside the company and their

617
00:26:46,320 --> 00:26:49,919
slack channels makes sense and uh as uh

618
00:26:49,919 --> 00:26:51,840
red team operators we may want to read

619
00:26:51,840 --> 00:26:53,580
what they're talking about in those

620
00:26:53,580 --> 00:26:55,919
channels that may be useful to achieve

621
00:26:55,919 --> 00:26:59,580
our objectives so I think the two main

622
00:26:59,580 --> 00:27:02,460
endpoints here are search all which lets

623
00:27:02,460 --> 00:27:06,960
you do like fuzzy searching of keywords

624
00:27:06,960 --> 00:27:10,380
so you can give it like five or ten

625
00:27:10,380 --> 00:27:13,559
keywords and it does some um matching

626
00:27:13,559 --> 00:27:15,900
based on which messages match the best

627
00:27:15,900 --> 00:27:18,299
with all of your keywords and so it's

628
00:27:18,299 --> 00:27:19,740
it's pretty good at searching it's

629
00:27:19,740 --> 00:27:21,360
pretty good at searching

630
00:27:21,360 --> 00:27:25,320
and then of course let's say that you

631
00:27:25,320 --> 00:27:28,559
find a message uh in a channel

632
00:27:28,559 --> 00:27:32,279
like Tech stuff and then you want to be

633
00:27:32,279 --> 00:27:34,799
able to read okay I saw this message

634
00:27:34,799 --> 00:27:37,320
which which looks interesting but I want

635
00:27:37,320 --> 00:27:40,200
to read uh like 10 messages before that

636
00:27:40,200 --> 00:27:42,720
and 10 messages after that uh you can

637
00:27:42,720 --> 00:27:45,059
you can do all of that so that's the

638
00:27:45,059 --> 00:27:47,220
other part of this where you pick then a

639
00:27:47,220 --> 00:27:48,960
conversation and you start reading it

640
00:27:48,960 --> 00:27:51,480
like you can pull the data more or less

641
00:27:51,480 --> 00:27:54,960
like the user sees it in the app

642
00:27:54,960 --> 00:27:58,080
so here I do like search and I search

643
00:27:58,080 --> 00:28:01,500
for the keyword secret uh and in this

644
00:28:01,500 --> 00:28:03,840
case I add the limit flag all the

645
00:28:03,840 --> 00:28:07,200
requests have limit Flags uh but I I'm

646
00:28:07,200 --> 00:28:09,419
just demoing it here and so you can see

647
00:28:09,419 --> 00:28:13,080
we return one result uh where this user

648
00:28:13,080 --> 00:28:15,360
is saying like uh definitely but we have

649
00:28:15,360 --> 00:28:16,380
to

650
00:28:16,380 --> 00:28:19,440
keep the secret in this channel right

651
00:28:19,440 --> 00:28:22,460
okay whatever

652
00:28:22,799 --> 00:28:24,720
so you can see the channel name secret

653
00:28:24,720 --> 00:28:26,159
stuff

654
00:28:26,159 --> 00:28:29,340
uh you can see the user that posted the

655
00:28:29,340 --> 00:28:31,559
message at what time they posted it you

656
00:28:31,559 --> 00:28:33,440
get a Perma link to that conversation

657
00:28:33,440 --> 00:28:36,720
and then here like all I did was change

658
00:28:36,720 --> 00:28:38,400
the limit from one to two to show that

659
00:28:38,400 --> 00:28:40,320
you can pull back more matches like you

660
00:28:40,320 --> 00:28:42,179
don't have to just like you can pull

661
00:28:42,179 --> 00:28:45,299
back 10K matches if you wanted to uh you

662
00:28:45,299 --> 00:28:48,179
you can do all of that

663
00:28:48,179 --> 00:28:50,340
yeah so this other user is saying hey do

664
00:28:50,340 --> 00:28:53,959
you want to know a secret or or whatever

665
00:28:58,080 --> 00:29:00,179
I'm not sure what I'm showing here so

666
00:29:00,179 --> 00:29:02,400
we'll find out together

667
00:29:02,400 --> 00:29:05,460
oh yeah yeah I understand yeah so in in

668
00:29:05,460 --> 00:29:07,559
slack messages uh like when you pull the

669
00:29:07,559 --> 00:29:10,080
data from the API it doesn't do

670
00:29:10,080 --> 00:29:13,500
automatic conversion from a user ID to

671
00:29:13,500 --> 00:29:16,020
their like proper name so sometimes in

672
00:29:16,020 --> 00:29:18,659
messages you'll see like at with some ID

673
00:29:18,659 --> 00:29:23,220
and so what I'm doing here is just I saw

674
00:29:23,220 --> 00:29:27,720
hello oh okay yeah I saw this ID uh in

675
00:29:27,720 --> 00:29:29,880
this message and then I look it up to

676
00:29:29,880 --> 00:29:31,860
find out what user is that and pull back

677
00:29:31,860 --> 00:29:35,600
their details essentially

678
00:29:40,799 --> 00:29:44,159
okay so like I think uh like we saw some

679
00:29:44,159 --> 00:29:46,500
messages maybe we want to find more

680
00:29:46,500 --> 00:29:49,080
context about uh and then we can do that

681
00:29:49,080 --> 00:29:51,600
right like here I do dash dash history

682
00:29:51,600 --> 00:29:54,600
and I paste in the channel ID uh and

683
00:29:54,600 --> 00:29:57,059
then again I think I'm demoing like I

684
00:29:57,059 --> 00:29:59,240
can do limit and pull back one result

685
00:29:59,240 --> 00:30:01,980
from that channel so you can see like

686
00:30:01,980 --> 00:30:04,559
the last message was from Avalon and

687
00:30:04,559 --> 00:30:09,899
he's using uh giphy to post a meme uh so

688
00:30:09,899 --> 00:30:13,080
this was very important to me that I uh

689
00:30:13,080 --> 00:30:16,620
had support for memes in static shiv uh

690
00:30:16,620 --> 00:30:20,340
so uh if we take that URL like we can

691
00:30:20,340 --> 00:30:21,899
actually see like what the meme was

692
00:30:21,899 --> 00:30:23,940
right if we wanted to so it's the Picard

693
00:30:23,940 --> 00:30:26,760
uh baseball meme

694
00:30:26,760 --> 00:30:27,960
um yeah

695
00:30:27,960 --> 00:30:30,419
uh but yeah so maybe we want more

696
00:30:30,419 --> 00:30:32,700
details about what that conversation was

697
00:30:32,700 --> 00:30:35,220
like and so we just add some more limit

698
00:30:35,220 --> 00:30:38,460
onto that I just picked six here and uh

699
00:30:38,460 --> 00:30:40,440
basically you you get the conversation

700
00:30:40,440 --> 00:30:42,899
exactly as it appears to the user in the

701
00:30:42,899 --> 00:30:44,880
channel right you see there there's the

702
00:30:44,880 --> 00:30:46,860
Picard face palm

703
00:30:46,860 --> 00:30:48,779
and uh

704
00:30:48,779 --> 00:30:51,120
yeah if I just pause it there like you

705
00:30:51,120 --> 00:30:52,679
can see these are exactly the messages

706
00:30:52,679 --> 00:30:55,919
that the user sees and uh you even have

707
00:30:55,919 --> 00:30:57,600
support like if you see this second

708
00:30:57,600 --> 00:30:59,159
message

709
00:30:59,159 --> 00:31:02,399
like users posting reactions to the

710
00:31:02,399 --> 00:31:04,679
message right like rolling laughing or

711
00:31:04,679 --> 00:31:07,640
whatever it is

712
00:31:08,039 --> 00:31:09,899
so you can get pretty good

713
00:31:09,899 --> 00:31:12,000
like representation of what the user

714
00:31:12,000 --> 00:31:13,740
sees so it lets you

715
00:31:13,740 --> 00:31:16,320
explore these channels where you might

716
00:31:16,320 --> 00:31:17,820
have sensitive data that you want to

717
00:31:17,820 --> 00:31:20,120
look at

718
00:31:21,179 --> 00:31:24,000
okay cool cool

719
00:31:24,000 --> 00:31:26,399
anything else here

720
00:31:26,399 --> 00:31:28,980
no I don't think so but one one thing I

721
00:31:28,980 --> 00:31:31,200
want to say is like here I'm pulling

722
00:31:31,200 --> 00:31:33,779
history from a channel and I'm just

723
00:31:33,779 --> 00:31:36,539
pulling the latest messages but let's

724
00:31:36,539 --> 00:31:39,240
say that you do a search for secret and

725
00:31:39,240 --> 00:31:40,679
you found a message like from three

726
00:31:40,679 --> 00:31:42,779
weeks ago what you can do with the

727
00:31:42,779 --> 00:31:45,659
history command also is specify a

728
00:31:45,659 --> 00:31:47,940
timestamp and then you can say show me

729
00:31:47,940 --> 00:31:51,299
messages around this timestamp and you

730
00:31:51,299 --> 00:31:53,820
can say like limit let's say 10 and it

731
00:31:53,820 --> 00:31:55,980
will pull 10 messages before and 10

732
00:31:55,980 --> 00:31:58,799
messages after that timestamp so you can

733
00:31:58,799 --> 00:32:01,559
read historical conversations as well

734
00:32:01,559 --> 00:32:04,320
but I'm not demoing that

735
00:32:04,320 --> 00:32:07,559
is the okay yeah I think Mike is out

736
00:32:07,559 --> 00:32:10,500
sometimes uh yeah and so the final thing

737
00:32:10,500 --> 00:32:11,940
is

738
00:32:11,940 --> 00:32:14,600
cut the mic at the mic

739
00:32:14,600 --> 00:32:19,580
test okay okay yeah perfect perfect

740
00:32:19,919 --> 00:32:21,860
okay okay perfect

741
00:32:21,860 --> 00:32:26,700
uh wow that's louder boom uh so uh the

742
00:32:26,700 --> 00:32:28,740
last thing is like uh selling the dream

743
00:32:28,740 --> 00:32:32,120
right like we've looked for information

744
00:32:32,120 --> 00:32:35,220
or we've done reconnaissance we've

745
00:32:35,220 --> 00:32:37,320
extracted potentially valuable

746
00:32:37,320 --> 00:32:39,659
information from the chats uh and then

747
00:32:39,659 --> 00:32:42,480
the last thing is like maybe we want to

748
00:32:42,480 --> 00:32:44,399
do some social engineering right we want

749
00:32:44,399 --> 00:32:48,299
to sell some poor soul a dream uh that

750
00:32:48,299 --> 00:32:51,419
they're gonna buy and regret later and

751
00:32:51,419 --> 00:32:54,240
so uh we can do uh the two main

752
00:32:54,240 --> 00:32:56,340
endpoints for this are like chat post

753
00:32:56,340 --> 00:32:58,679
message so we can send the chat message

754
00:32:58,679 --> 00:33:01,620
like any any other user either in a

755
00:33:01,620 --> 00:33:05,760
Channel or in an IM or mpim again slack

756
00:33:05,760 --> 00:33:07,500
doesn't make a distinction for slack

757
00:33:07,500 --> 00:33:10,980
it's all conversations uh so we can do

758
00:33:10,980 --> 00:33:13,620
that and we can also

759
00:33:13,620 --> 00:33:17,240
post messages with files that we attach

760
00:33:17,240 --> 00:33:21,299
and for that we use the files.upload

761
00:33:21,299 --> 00:33:23,760
method and it's basically like the same

762
00:33:23,760 --> 00:33:25,019
thing

763
00:33:25,019 --> 00:33:28,200
so we have the demo as well

764
00:33:28,200 --> 00:33:31,799
so I have this this chat with Avalon or

765
00:33:31,799 --> 00:33:33,980
whatever

766
00:33:34,679 --> 00:33:38,399
and uh I just do like post and I I

767
00:33:38,399 --> 00:33:40,679
looked up the conversation ID for this I

768
00:33:40,679 --> 00:33:42,779
am so I don't show it but I looked it up

769
00:33:42,779 --> 00:33:45,539
beforehand and then I just post a

770
00:33:45,539 --> 00:33:48,419
message like whatever

771
00:33:48,419 --> 00:33:51,960
sucks to be you download my my my tool

772
00:33:51,960 --> 00:33:53,640
or whatever whatever

773
00:33:53,640 --> 00:33:55,980
I forget what I type here actually oh

774
00:33:55,980 --> 00:33:58,200
yeah yeah

775
00:33:58,200 --> 00:34:00,059
I told him like I found this really cool

776
00:34:00,059 --> 00:34:03,000
piece of software and uh you know when I

777
00:34:03,000 --> 00:34:06,240
send it uh you can see like in in the

778
00:34:06,240 --> 00:34:08,820
app that the message shows up as the

779
00:34:08,820 --> 00:34:10,739
user right

780
00:34:10,739 --> 00:34:13,819
nothing too special

781
00:34:23,639 --> 00:34:26,219
yeah and then uh I I send them a

782
00:34:26,219 --> 00:34:27,960
follow-up message like hey I'll give you

783
00:34:27,960 --> 00:34:29,520
a link to this really cool piece of

784
00:34:29,520 --> 00:34:33,060
software that you can totally run uh and

785
00:34:33,060 --> 00:34:37,080
um in this case I attach a file uh just

786
00:34:37,080 --> 00:34:39,599
for this example like it's uh it's just

787
00:34:39,599 --> 00:34:44,280
an image right uh but uh yeah you you

788
00:34:44,280 --> 00:34:46,918
get the idea like I I could send him

789
00:34:46,918 --> 00:34:48,659
whatever I want and right like in this

790
00:34:48,659 --> 00:34:51,300
case you know trust me I'm a dolphin

791
00:34:51,300 --> 00:34:53,760
this is totally fine

792
00:34:53,760 --> 00:34:57,320
um right right

793
00:35:11,099 --> 00:35:14,220
I don't know why I'm let me just fast

794
00:35:14,220 --> 00:35:16,819
forward this

795
00:35:18,540 --> 00:35:20,820
yeah anyways sometimes you can't trust

796
00:35:20,820 --> 00:35:23,400
Dolphins I think that's the that's the

797
00:35:23,400 --> 00:35:25,980
main takeaway

798
00:35:25,980 --> 00:35:28,740
um but yeah you you can understand that

799
00:35:28,740 --> 00:35:31,859
because we can post messages and we can

800
00:35:31,859 --> 00:35:35,599
post messages with attachments

801
00:35:35,599 --> 00:35:38,700
that we can do this kind of thing like

802
00:35:38,700 --> 00:35:41,460
we saw with the EA compromise right like

803
00:35:41,460 --> 00:35:44,160
you can do social engineering over slack

804
00:35:44,160 --> 00:35:47,640
in this instance uh either convincing

805
00:35:47,640 --> 00:35:50,220
them to do something or giving them some

806
00:35:50,220 --> 00:35:51,780
kind of file and they probably think

807
00:35:51,780 --> 00:35:54,480
it's fine because it's coming from their

808
00:35:54,480 --> 00:35:55,800
internal

809
00:35:55,800 --> 00:35:58,859
chat application right or something like

810
00:35:58,859 --> 00:36:01,740
that oh yeah okay this is really good

811
00:36:01,740 --> 00:36:04,920
okay uh I found this quite interesting

812
00:36:04,920 --> 00:36:07,740
anyway so when I was looking at file

813
00:36:07,740 --> 00:36:11,220
uploads I noticed that uh you can force

814
00:36:11,220 --> 00:36:14,520
a file upload and specify an invalid

815
00:36:14,520 --> 00:36:17,579
Channel and what happens is the file

816
00:36:17,579 --> 00:36:20,520
gets pushed to slack servers but it

817
00:36:20,520 --> 00:36:23,640
doesn't appear in this in the slack app

818
00:36:23,640 --> 00:36:27,000
uh you still get a file reference back

819
00:36:27,000 --> 00:36:29,220
uh because something I didn't show is

820
00:36:29,220 --> 00:36:31,099
that you can obviously delete messages

821
00:36:31,099 --> 00:36:33,480
uh you know not just post them but you

822
00:36:33,480 --> 00:36:36,720
can delete them and delete files but so

823
00:36:36,720 --> 00:36:39,720
you can upload a file to slack servers

824
00:36:39,720 --> 00:36:41,280
it doesn't appear in the app you still

825
00:36:41,280 --> 00:36:45,000
get the file reference and so

826
00:36:45,000 --> 00:36:47,760
somebody else can access that file but

827
00:36:47,760 --> 00:36:50,220
there's no way to see that it exists in

828
00:36:50,220 --> 00:36:52,440
the app it only exists on slack servers

829
00:36:52,440 --> 00:36:54,420
and um

830
00:36:54,420 --> 00:36:56,820
there's also an endpoint in the API

831
00:36:56,820 --> 00:37:00,000
where you can search for file names with

832
00:37:00,000 --> 00:37:04,320
patterns so I think this is an ideal C2

833
00:37:04,320 --> 00:37:06,540
mechanism because you could like

834
00:37:06,540 --> 00:37:08,880
compress and encrypt some binary data

835
00:37:08,880 --> 00:37:11,160
you push it to slack servers you name

836
00:37:11,160 --> 00:37:14,339
your file in with some specific pattern

837
00:37:14,339 --> 00:37:15,599
and then

838
00:37:15,599 --> 00:37:18,900
whatever the C2 server can search for

839
00:37:18,900 --> 00:37:21,500
files matching a pattern and download

840
00:37:21,500 --> 00:37:24,480
download your your data decrypt

841
00:37:24,480 --> 00:37:27,240
decompress decrypt it do something and

842
00:37:27,240 --> 00:37:29,579
send data back right back and forth and

843
00:37:29,579 --> 00:37:32,099
there would be no way for the user to

844
00:37:32,099 --> 00:37:34,619
ever see that they uploaded a file it

845
00:37:34,619 --> 00:37:36,720
wouldn't show up anywhere you'd have to

846
00:37:36,720 --> 00:37:38,040
have the link

847
00:37:38,040 --> 00:37:40,380
to that file to actually be able to see

848
00:37:40,380 --> 00:37:42,660
it on on slack servers right so this is

849
00:37:42,660 --> 00:37:43,440
uh

850
00:37:43,440 --> 00:37:45,900
and this is a perfect C2 mechanism I

851
00:37:45,900 --> 00:37:46,740
think

852
00:37:46,740 --> 00:37:50,820
right right uh so yeah send help I think

853
00:37:50,820 --> 00:37:54,060
you know when an attacker pops a user's

854
00:37:54,060 --> 00:37:58,380
box like uh they also gain control over

855
00:37:58,380 --> 00:38:00,300
all the things that are on the user's

856
00:38:00,300 --> 00:38:02,460
box I think for some things we

857
00:38:02,460 --> 00:38:06,300
understand that like like for example uh

858
00:38:06,300 --> 00:38:08,760
yeah a chrome session data or something

859
00:38:08,760 --> 00:38:09,900
like that

860
00:38:09,900 --> 00:38:13,260
or we understand that if we compromise

861
00:38:13,260 --> 00:38:15,540
the user's machine and their ad joined

862
00:38:15,540 --> 00:38:18,540
in a sense we've breached that corporate

863
00:38:18,540 --> 00:38:20,579
Network right so

864
00:38:20,579 --> 00:38:23,460
it's not just those things that we

865
00:38:23,460 --> 00:38:26,220
typically associate it's also things

866
00:38:26,220 --> 00:38:28,680
like electron apps and then in this case

867
00:38:28,680 --> 00:38:30,800
like slack is a very

868
00:38:30,800 --> 00:38:34,380
uh oppression example because

869
00:38:34,380 --> 00:38:36,540
like it may be used heavily in in the

870
00:38:36,540 --> 00:38:39,359
corporate environment I think that the

871
00:38:39,359 --> 00:38:42,300
thing here for electron Ops in general

872
00:38:42,300 --> 00:38:46,079
um not just slack is uh to do proper

873
00:38:46,079 --> 00:38:49,500
a collection of logs right slack

874
00:38:49,500 --> 00:38:52,079
actually has pretty good logs but I

875
00:38:52,079 --> 00:38:53,700
don't know that many companies are

876
00:38:53,700 --> 00:38:56,579
ingesting those logs and generating

877
00:38:56,579 --> 00:38:59,040
alerts based on those logs probably they

878
00:38:59,040 --> 00:39:00,119
are not

879
00:39:00,119 --> 00:39:01,800
we should check that we should check

880
00:39:01,800 --> 00:39:03,540
that at IBM actually we should figure

881
00:39:03,540 --> 00:39:04,920
that out

882
00:39:04,920 --> 00:39:07,260
and uh yeah so there are things you can

883
00:39:07,260 --> 00:39:09,900
do like you can look for anomalous

884
00:39:09,900 --> 00:39:13,740
authentication events uh anytime a new

885
00:39:13,740 --> 00:39:16,920
device authenticates to slack you'll get

886
00:39:16,920 --> 00:39:18,660
events for that so if a user has never

887
00:39:18,660 --> 00:39:20,599
used Safari to

888
00:39:20,599 --> 00:39:23,220
authenticate to slack like you'll get an

889
00:39:23,220 --> 00:39:25,740
event for that that kind of stuff uh

890
00:39:25,740 --> 00:39:28,320
same for Unique IPS if an IP that's

891
00:39:28,320 --> 00:39:30,420
never authenticated you'll get in you'll

892
00:39:30,420 --> 00:39:34,200
get an event for that and so I think uh

893
00:39:34,200 --> 00:39:35,880
we should ingest those events and just

894
00:39:35,880 --> 00:39:38,579
write some rules to alert on those uh

895
00:39:38,579 --> 00:39:41,700
the other thing is that these

896
00:39:41,700 --> 00:39:44,099
applications like I mentioned maintain

897
00:39:44,099 --> 00:39:47,760
uh authentication State and where

898
00:39:47,760 --> 00:39:49,700
possible we should just try to reduce

899
00:39:49,700 --> 00:39:51,920
that state

900
00:39:51,920 --> 00:39:54,480
obviously we can't ask the user to type

901
00:39:54,480 --> 00:39:56,099
in their password every hour because

902
00:39:56,099 --> 00:40:00,240
they'll they'll go mental uh but uh just

903
00:40:00,240 --> 00:40:03,359
reduce it as much as the business lets

904
00:40:03,359 --> 00:40:04,020
you

905
00:40:04,020 --> 00:40:07,320
uh so that if a session is compromised

906
00:40:07,320 --> 00:40:10,980
like this stolen cookie with EA then

907
00:40:10,980 --> 00:40:13,980
that access window is as small as it as

908
00:40:13,980 --> 00:40:16,680
it could be right and you have

909
00:40:16,680 --> 00:40:18,960
some links there to Slack's official

910
00:40:18,960 --> 00:40:20,820
documentation on how you can do the

911
00:40:20,820 --> 00:40:24,320
logging and ingest those logs

912
00:40:24,540 --> 00:40:27,660
all right all right that's it

913
00:40:27,660 --> 00:40:33,078
uh okay boom right here thank you

914
00:40:38,540 --> 00:40:42,300
are there are there any uh questions uh

915
00:40:42,300 --> 00:40:43,920
about this

916
00:40:43,920 --> 00:40:45,720
hmm

917
00:40:45,720 --> 00:40:47,700
okay silence

918
00:40:47,700 --> 00:40:50,599
any questions on

919
00:40:50,599 --> 00:40:54,619
no okay okay

920
00:40:54,859 --> 00:40:58,079
excellent excellent okay awesome uh then

921
00:40:58,079 --> 00:40:59,460
I'll uh

922
00:40:59,460 --> 00:41:03,540
oh yeah yeah yeah yeah hit me up

923
00:41:03,540 --> 00:41:07,520
yeah yeah you can't delete messages yeah

924
00:41:08,339 --> 00:41:11,099
oh okay okay this this is something I

925
00:41:11,099 --> 00:41:13,079
should say like let's say that in the

926
00:41:13,079 --> 00:41:15,900
app you have a notification like you

927
00:41:15,900 --> 00:41:19,260
have an unread Alert in a channel you

928
00:41:19,260 --> 00:41:21,359
know if you click in the app that that

929
00:41:21,359 --> 00:41:24,300
notification disappears right but when

930
00:41:24,300 --> 00:41:27,119
you search with the API and you read

931
00:41:27,119 --> 00:41:29,220
that message that notification doesn't

932
00:41:29,220 --> 00:41:31,800
change for the user in the app so it's a

933
00:41:31,800 --> 00:41:33,960
stealthy way to to read their messages

934
00:41:33,960 --> 00:41:35,520
yeah

935
00:41:35,520 --> 00:41:38,400
and you can delete messages all you need

936
00:41:38,400 --> 00:41:40,500
is the ID for that message and you can

937
00:41:40,500 --> 00:41:42,660
post like delete yeah

938
00:41:42,660 --> 00:41:45,599
like I said they say that they moved off

939
00:41:45,599 --> 00:41:47,880
of like electron but I think because

940
00:41:47,880 --> 00:41:50,940
Chrome uh because um Edge is chromium

941
00:41:50,940 --> 00:41:53,579
based now you can do the same thing see

942
00:41:53,579 --> 00:41:56,640
you can dump their cookies I tried it on

943
00:41:56,640 --> 00:41:59,280
my machine yeah but I didn't look at

944
00:41:59,280 --> 00:42:01,440
automating any of this stuff like I did

945
00:42:01,440 --> 00:42:02,640
with Slack

946
00:42:02,640 --> 00:42:05,460
okay follow-up question go ahead

947
00:42:05,460 --> 00:42:08,820
no I think probably there is probably

948
00:42:08,820 --> 00:42:11,760
there is because when we authenticate as

949
00:42:11,760 --> 00:42:14,400
the user on slack we can use any

950
00:42:14,400 --> 00:42:17,520
services that are integrated into slack

951
00:42:17,520 --> 00:42:20,040
so I can post memes but this is a benign

952
00:42:20,040 --> 00:42:23,339
example but uh right but uh let's say

953
00:42:23,339 --> 00:42:25,980
Jenkins is integrated for for example

954
00:42:25,980 --> 00:42:28,740
for example then you could uh make

955
00:42:28,740 --> 00:42:30,839
requests to like a Jenkins bot to kick

956
00:42:30,839 --> 00:42:34,260
off some tasks or so I imagine on teams

957
00:42:34,260 --> 00:42:35,940
you you could access their SharePoint

958
00:42:35,940 --> 00:42:38,460
and things like that let's get on that

959
00:42:38,460 --> 00:42:41,540
let's do that yeah

960
00:42:41,640 --> 00:42:46,400
okay any other questions no no

961
00:42:46,400 --> 00:42:51,240
uh cool then I just want to say yeah uh

962
00:42:51,240 --> 00:42:53,820
reach out to IBM or just come have a

963
00:42:53,820 --> 00:42:56,220
chat we'll be around actually uh a lot

964
00:42:56,220 --> 00:43:00,060
of our team is here right I if if not

965
00:43:00,060 --> 00:43:02,520
you can always reach me on on Twitter I

966
00:43:02,520 --> 00:43:05,520
also put my boss's Twitter there and uh

967
00:43:05,520 --> 00:43:07,500
you can message him and it's not my

968
00:43:07,500 --> 00:43:11,220
fault so yeah so I'll let you take that

969
00:43:11,220 --> 00:43:16,459
take that for what it is okay that's all

970
00:43:17,640 --> 00:43:19,859
all right thanks Reuben

971
00:43:19,859 --> 00:43:20,880
I suck

972
00:43:20,880 --> 00:43:26,209
[Applause]

