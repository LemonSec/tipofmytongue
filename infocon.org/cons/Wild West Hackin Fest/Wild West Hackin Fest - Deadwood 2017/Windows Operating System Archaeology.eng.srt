1
00:00:00,540 --> 00:00:13,730
[Music]

2
00:00:12,200 --> 00:00:16,040
the Tavistock is Windows operating

3
00:00:13,730 --> 00:00:16,940
system<font color="#E5E5E5"> archaeology this is we're gonna</font>

4
00:00:16,040 --> 00:00:18,290
<font color="#E5E5E5">be</font><font color="#CCCCCC"> covering</font><font color="#E5E5E5"> some things that have been</font>

5
00:00:16,940 --> 00:00:20,300
in<font color="#E5E5E5"> Windows since the beginning of</font>

6
00:00:18,290 --> 00:00:22,000
Windows<font color="#E5E5E5"> we hope you'll</font><font color="#CCCCCC"> find it very</font>

7
00:00:20,300 --> 00:00:24,590
<font color="#E5E5E5">interesting we hope to spur on</font>

8
00:00:22,000 --> 00:00:29,360
additional research<font color="#E5E5E5"> from the community</font>

9
00:00:24,590 --> 00:00:30,970
so so my<font color="#CCCCCC"> name's Casey</font><font color="#E5E5E5"> Smith</font><font color="#CCCCCC"> I'm director</font>

10
00:00:29,360 --> 00:00:33,860
of Applied Research at red<font color="#CCCCCC"> canary and</font>

11
00:00:30,970 --> 00:00:37,309
you can find me on<font color="#CCCCCC"> twitter at sub T or</font>

12
00:00:33,860 --> 00:00:40,610
there's my blog<font color="#E5E5E5"> URL so</font><font color="#CCCCCC"> yeah</font><font color="#E5E5E5"> yep and I'm</font>

13
00:00:37,309 --> 00:00:42,500
Matt I'm a senior operator and security

14
00:00:40,610 --> 00:00:44,600
researcher expect drops and then you can

15
00:00:42,500 --> 00:00:49,579
find<font color="#CCCCCC"> my blog</font><font color="#E5E5E5"> in and hit me up on</font><font color="#CCCCCC"> Twitter</font>

16
00:00:44,600 --> 00:00:50,750
as<font color="#CCCCCC"> well if you need to okay</font><font color="#E5E5E5"> so what we</font>

17
00:00:49,579 --> 00:00:53,059
hope<font color="#E5E5E5"> to</font><font color="#CCCCCC"> get</font><font color="#E5E5E5"> out of this talk would be</font>

18
00:00:50,750 --> 00:00:54,440
<font color="#E5E5E5">again foster curiosity we really believe</font>

19
00:00:53,059 --> 00:00:56,510
that research and looking into<font color="#E5E5E5"> things</font>

20
00:00:54,440 --> 00:00:57,769
really<font color="#E5E5E5"> is driven by curiosity like if</font>

21
00:00:56,510 --> 00:00:59,928
you want to learn<font color="#E5E5E5"> something or find out</font>

22
00:00:57,769 --> 00:01:02,059
<font color="#E5E5E5">how</font><font color="#CCCCCC"> something works or finding a bypass</font>

23
00:00:59,929 --> 00:01:03,859
it's really on you to have the energy

24
00:01:02,059 --> 00:01:06,350
<font color="#CCCCCC">and curiosity to keep</font><font color="#E5E5E5"> sustain that</font>

25
00:01:03,859 --> 00:01:08,270
search<font color="#E5E5E5"> so hopefully this is also spawn</font>

26
00:01:06,350 --> 00:01:09,740
<font color="#E5E5E5">for the research get people looking at</font>

27
00:01:08,270 --> 00:01:10,908
more than more people<font color="#E5E5E5"> looking at calm</font>

28
00:01:09,740 --> 00:01:13,640
and some things are going<font color="#E5E5E5"> to</font><font color="#CCCCCC"> talk about</font>

29
00:01:10,909 --> 00:01:16,490
<font color="#CCCCCC">today he's got extensive references are</font>

30
00:01:13,640 --> 00:01:18,320
get repo<font color="#E5E5E5"> so you don't have to take</font>

31
00:01:16,490 --> 00:01:19,579
pictures<font color="#CCCCCC"> of the slides they're all</font><font color="#E5E5E5"> of</font>

32
00:01:18,320 --> 00:01:22,610
the kit<font color="#E5E5E5"> we will</font><font color="#CCCCCC"> talk about at the end</font>

33
00:01:19,579 --> 00:01:24,439
<font color="#E5E5E5">we've</font><font color="#CCCCCC"> got plenty</font><font color="#E5E5E5"> of examples and again</font>

34
00:01:22,610 --> 00:01:26,659
we want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> really call</font><font color="#CCCCCC"> attention to the</font>

35
00:01:24,439 --> 00:01:30,199
attack surface that<font color="#CCCCCC"> column provides</font><font color="#E5E5E5"> so</font>

36
00:01:26,659 --> 00:01:31,759
common is a rich<font color="#E5E5E5"> target you know attack</font>

37
00:01:30,200 --> 00:01:32,960
surface so we want to make sure<font color="#E5E5E5"> you guys</font>

38
00:01:31,759 --> 00:01:34,610
<font color="#E5E5E5">are</font><font color="#CCCCCC"> aware</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that there's very few</font>

39
00:01:32,960 --> 00:01:35,479
products that<font color="#E5E5E5"> have visibility and just</font>

40
00:01:34,610 --> 00:01:36,679
some<font color="#E5E5E5"> of the things</font><font color="#CCCCCC"> we're going</font><font color="#E5E5E5"> to show</font>

41
00:01:35,479 --> 00:01:38,960
you<font color="#CCCCCC"> today</font><font color="#E5E5E5"> so we really want to drive</font>

42
00:01:36,680 --> 00:01:40,369
innovation and not only attack your

43
00:01:38,960 --> 00:01:43,339
methanol<font color="#E5E5E5"> that's been also detection</font>

44
00:01:40,369 --> 00:01:46,280
capability<font color="#CCCCCC"> so</font><font color="#E5E5E5"> so first</font><font color="#CCCCCC"> of all</font><font color="#E5E5E5"> we're</font>

45
00:01:43,340 --> 00:01:47,539
going<font color="#E5E5E5"> to go over what common is so the</font>

46
00:01:46,280 --> 00:01:48,799
component object model we're going<font color="#CCCCCC"> to</font>

47
00:01:47,539 --> 00:01:50,149
<font color="#E5E5E5">give you</font><font color="#CCCCCC"> a brief background just so you</font>

48
00:01:48,799 --> 00:01:52,159
understand when we<font color="#E5E5E5"> start</font><font color="#CCCCCC"> doing things</font>

49
00:01:50,149 --> 00:01:54,079
like<font color="#CCCCCC"> comm hijacks and persistence and</font>

50
00:01:52,159 --> 00:01:55,310
<font color="#E5E5E5">bypassing we need to have some of the</font>

51
00:01:54,079 --> 00:01:57,529
fundamentals everybody's on the same

52
00:01:55,310 --> 00:01:58,549
page<font color="#CCCCCC"> what's actually happening</font><font color="#E5E5E5"> we'll</font>

53
00:01:57,530 --> 00:02:01,159
<font color="#E5E5E5">talk about a couple</font><font color="#CCCCCC"> things with</font>

54
00:01:58,549 --> 00:02:02,630
registration<font color="#E5E5E5"> and reg resolution are the</font>

55
00:02:01,159 --> 00:02:05,179
two main<font color="#CCCCCC"> things</font><font color="#E5E5E5"> we're going to focus on</font>

56
00:02:02,630 --> 00:02:06,979
so how does it<font color="#E5E5E5"> come up</font><font color="#CCCCCC"> JQ</font><font color="#E5E5E5"> register and</font>

57
00:02:05,179 --> 00:02:08,720
how<font color="#CCCCCC"> does the calm</font><font color="#E5E5E5"> object get resolved</font>

58
00:02:06,979 --> 00:02:10,008
when the operating system wants<font color="#E5E5E5"> to go</font>

59
00:02:08,720 --> 00:02:11,910
find something<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's where there's</font>

60
00:02:10,008 --> 00:02:13,260
a lot<font color="#E5E5E5"> of fun things because I</font>

61
00:02:11,910 --> 00:02:15,240
as Matt will show you this there's

62
00:02:13,260 --> 00:02:17,190
<font color="#CCCCCC">plenty of things that</font><font color="#E5E5E5"> are being looked</font>

63
00:02:15,240 --> 00:02:19,530
<font color="#E5E5E5">for that are not there and we can supply</font>

64
00:02:17,190 --> 00:02:23,130
those happily to<font color="#E5E5E5"> the operating system</font><font color="#CCCCCC"> so</font>

65
00:02:19,530 --> 00:02:24,930
<font color="#CCCCCC">we'll go for a lot of</font><font color="#E5E5E5"> those how</font><font color="#CCCCCC"> many</font>

66
00:02:23,130 --> 00:02:26,490
have heard of<font color="#E5E5E5"> comm separate they</font><font color="#CCCCCC"> started</font>

67
00:02:24,930 --> 00:02:29,190
<font color="#CCCCCC">alright</font><font color="#E5E5E5"> awesome</font><font color="#CCCCCC"> how</font><font color="#E5E5E5"> many you have</font>

68
00:02:26,490 --> 00:02:32,490
developed<font color="#E5E5E5"> in comm I'm so sorry</font>

69
00:02:29,190 --> 00:02:34,170
it's<font color="#CCCCCC"> okay some of</font><font color="#E5E5E5"> you okay so what a cop</font>

70
00:02:32,490 --> 00:02:35,970
object is or the component object model

71
00:02:34,170 --> 00:02:38,459
think of this is it was<font color="#E5E5E5"> sort of you</font><font color="#CCCCCC"> know</font>

72
00:02:35,970 --> 00:02:40,820
who it<font color="#CCCCCC"> was</font><font color="#E5E5E5"> before net</font><font color="#CCCCCC"> and it was sort of</font>

73
00:02:38,460 --> 00:02:44,010
a cross language way to share binary

74
00:02:40,820 --> 00:02:46,260
data and so you can build these<font color="#E5E5E5"> comm</font>

75
00:02:44,010 --> 00:02:47,970
objects<font color="#E5E5E5"> and things like</font><font color="#CCCCCC"> dll's you can</font>

76
00:02:46,260 --> 00:02:50,489
put<font color="#E5E5E5"> them in</font><font color="#CCCCCC"> exe</font><font color="#E5E5E5"> es you can put them in</font>

77
00:02:47,970 --> 00:02:52,320
<font color="#CCCCCC">OC X Files</font><font color="#E5E5E5"> some of the more recent</font>

78
00:02:50,490 --> 00:02:53,790
<font color="#E5E5E5">things that we found it will we</font><font color="#CCCCCC"> use for</font>

79
00:02:52,320 --> 00:02:57,180
a<font color="#E5E5E5"> lot of our improvement concepts are</font>

80
00:02:53,790 --> 00:02:59,400
these files called<font color="#CCCCCC"> portlets</font><font color="#E5E5E5"> or window</font>

81
00:02:57,180 --> 00:03:00,780
script components or SCT files<font color="#CCCCCC"> so</font>

82
00:02:59,400 --> 00:03:02,730
<font color="#E5E5E5">hopefully everybody</font><font color="#CCCCCC"> has at</font><font color="#E5E5E5"> least heard</font>

83
00:03:00,780 --> 00:03:05,070
of these<font color="#CCCCCC"> they've got a lot of</font><font color="#E5E5E5"> attention</font>

84
00:03:02,730 --> 00:03:06,750
<font color="#CCCCCC">last spring with some red</font><font color="#E5E5E5"> surf 32 things</font>

85
00:03:05,070 --> 00:03:09,090
we'll<font color="#CCCCCC"> talk about</font><font color="#E5E5E5"> but these are these are</font>

86
00:03:06,750 --> 00:03:10,590
<font color="#CCCCCC">like an XML file was attractive to me</font>

87
00:03:09,090 --> 00:03:11,970
<font color="#CCCCCC">because the environment I</font><font color="#E5E5E5"> was working in</font>

88
00:03:10,590 --> 00:03:14,040
was a<font color="#CCCCCC"> whitelisting environment so</font>

89
00:03:11,970 --> 00:03:15,120
dropping<font color="#E5E5E5"> an exe or loading a</font><font color="#CCCCCC"> DLL just</font>

90
00:03:14,040 --> 00:03:17,910
was not<font color="#E5E5E5"> even an option</font>

91
00:03:15,120 --> 00:03:19,200
<font color="#E5E5E5">whereas dropping an</font><font color="#CCCCCC"> X Adele out and</font>

92
00:03:17,910 --> 00:03:21,090
running something<font color="#E5E5E5"> in memory suddenly</font>

93
00:03:19,200 --> 00:03:23,220
<font color="#E5E5E5">became really really interesting so</font>

94
00:03:21,090 --> 00:03:25,170
we'll talk<font color="#CCCCCC"> about</font><font color="#E5E5E5"> that and then comm has</font>

95
00:03:23,220 --> 00:03:27,510
this idea of location<font color="#CCCCCC"> transparency and</font>

96
00:03:25,170 --> 00:03:29,070
so you know you can create<font color="#E5E5E5"> objects on</font>

97
00:03:27,510 --> 00:03:31,350
other machines<font color="#CCCCCC"> you can</font><font color="#E5E5E5"> create objects</font>

98
00:03:29,070 --> 00:03:33,390
and other processes<font color="#E5E5E5"> it's really pretty</font>

99
00:03:31,350 --> 00:03:34,620
fascinating<font color="#E5E5E5"> and I</font><font color="#CCCCCC"> think</font><font color="#E5E5E5"> Matt slaughter</font>

100
00:03:33,390 --> 00:03:35,880
<font color="#CCCCCC">Elizabeth's stuff he's going to go over</font>

101
00:03:34,620 --> 00:03:37,560
today<font color="#CCCCCC"> is going</font><font color="#E5E5E5"> to be you know sort of</font>

102
00:03:35,880 --> 00:03:38,820
examples of<font color="#E5E5E5"> using that location</font>

103
00:03:37,560 --> 00:03:40,620
<font color="#E5E5E5">transparency</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> know hey I want to</font>

104
00:03:38,820 --> 00:03:43,739
create this object on another<font color="#E5E5E5"> user's</font>

105
00:03:40,620 --> 00:03:45,630
machine<font color="#E5E5E5"> really pretty cool stuff</font><font color="#CCCCCC"> all</font>

106
00:03:43,739 --> 00:03:46,860
<font color="#E5E5E5">right let's see</font><font color="#CCCCCC"> okay so we're going</font><font color="#E5E5E5"> to</font>

107
00:03:45,630 --> 00:03:49,200
give<font color="#E5E5E5"> you at least an example the comm</font>

108
00:03:46,860 --> 00:03:50,820
script<font color="#E5E5E5"> which is like I said we use these</font>

109
00:03:49,200 --> 00:03:52,649
<font color="#E5E5E5">for our proof of concepts all the</font><font color="#CCCCCC"> times</font>

110
00:03:50,820 --> 00:03:57,060
<font color="#CCCCCC">let's think</font><font color="#E5E5E5"> of this as</font><font color="#CCCCCC"> a call object</font>

111
00:03:52,650 --> 00:03:58,950
backed by XML and<font color="#E5E5E5"> so you have the XML</font>

112
00:03:57,060 --> 00:04:01,770
tags you have<font color="#CCCCCC"> a scriptlet</font><font color="#E5E5E5"> tag beginning</font>

113
00:03:58,950 --> 00:04:05,100
an<font color="#E5E5E5"> intact like HTML basically you have a</font>

114
00:04:01,770 --> 00:04:06,510
registration<font color="#E5E5E5"> block for the object inside</font>

115
00:04:05,100 --> 00:04:07,709
of<font color="#E5E5E5"> that registration block there's going</font>

116
00:04:06,510 --> 00:04:09,540
to be some area some properties<font color="#CCCCCC"> that</font>

117
00:04:07,709 --> 00:04:12,780
you're going to set so<font color="#E5E5E5"> protip for</font>

118
00:04:09,540 --> 00:04:14,519
defenders attackers rarely change the

119
00:04:12,780 --> 00:04:15,840
class ID that<font color="#CCCCCC"> I made up that has the</font>

120
00:04:14,520 --> 00:04:17,639
feed<font color="#E5E5E5"> a CDC string</font>

121
00:04:15,840 --> 00:04:18,870
<font color="#CCCCCC">if you're watching</font><font color="#E5E5E5"> for stuff just look</font>

122
00:04:17,639 --> 00:04:22,680
for that and stay running<font color="#E5E5E5"> it right</font><font color="#CCCCCC"> off</font>

123
00:04:18,870 --> 00:04:25,290
<font color="#E5E5E5">get repo so the other thing is then you</font>

124
00:04:22,680 --> 00:04:26,729
<font color="#E5E5E5">have the code contained inside of</font><font color="#CCCCCC"> this</font>

125
00:04:25,290 --> 00:04:28,350
registration block which is<font color="#CCCCCC"> a really</font>

126
00:04:26,729 --> 00:04:29,669
<font color="#CCCCCC">interesting capability so this gives</font><font color="#E5E5E5"> us</font>

127
00:04:28,350 --> 00:04:33,330
<font color="#E5E5E5">the ability when you go to</font><font color="#CCCCCC"> register</font><font color="#E5E5E5"> a</font>

128
00:04:29,669 --> 00:04:34,770
<font color="#E5E5E5">comm object or unregister one whatever</font>

129
00:04:33,330 --> 00:04:37,409
<font color="#E5E5E5">is in</font><font color="#CCCCCC"> that block of code will be</font>

130
00:04:34,770 --> 00:04:39,719
executed<font color="#CCCCCC"> so the</font><font color="#E5E5E5"> trick with commas is</font>

131
00:04:37,410 --> 00:04:41,130
sometimes unregistering and objects<font color="#CCCCCC"> is</font>

132
00:04:39,720 --> 00:04:42,419
just as interesting<font color="#CCCCCC"> as trying</font><font color="#E5E5E5"> to</font>

133
00:04:41,130 --> 00:04:45,900
<font color="#CCCCCC">register one because you can do code</font>

134
00:04:42,419 --> 00:04:47,340
execution<font color="#E5E5E5"> in that path so so that's</font><font color="#CCCCCC"> a</font>

135
00:04:45,900 --> 00:04:48,539
common object<font color="#E5E5E5"> just want to make sure our</font>

136
00:04:47,340 --> 00:04:49,830
<font color="#E5E5E5">comm</font><font color="#CCCCCC"> screw plate</font><font color="#E5E5E5"> just want to make sure</font>

137
00:04:48,540 --> 00:04:51,570
it understands both<font color="#CCCCCC"> these are when you</font>

138
00:04:49,830 --> 00:04:53,669
look<font color="#E5E5E5"> at this</font><font color="#CCCCCC"> POCs and start</font><font color="#E5E5E5"> downloading</font>

139
00:04:51,570 --> 00:04:55,110
and executing<font color="#CCCCCC"> common scriptlets we're</font>

140
00:04:53,669 --> 00:04:56,549
gonna pop<font color="#CCCCCC"> calc we were trying to count</font>

141
00:04:55,110 --> 00:04:57,870
how<font color="#E5E5E5"> many times calc appeared in the</font>

142
00:04:56,550 --> 00:04:59,760
presentation I don't<font color="#CCCCCC"> think we're up to</font>

143
00:04:57,870 --> 00:05:01,229
<font color="#E5E5E5">nine or</font><font color="#CCCCCC"> something like that</font><font color="#E5E5E5"> happen you</font>

144
00:04:59,760 --> 00:05:06,090
know that's what a comm script with is

145
00:05:01,229 --> 00:05:07,349
so<font color="#E5E5E5"> okay some registration so I talked</font>

146
00:05:06,090 --> 00:05:09,359
about<font color="#E5E5E5"> two</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> are important with</font>

147
00:05:07,350 --> 00:05:11,160
column first<font color="#E5E5E5"> is registration and second</font>

148
00:05:09,360 --> 00:05:14,160
<font color="#E5E5E5">with</font><font color="#CCCCCC"> resolution so a calm object is</font>

149
00:05:11,160 --> 00:05:15,419
registered<font color="#E5E5E5"> and</font><font color="#CCCCCC"> this sets</font><font color="#E5E5E5"> itself up in</font>

150
00:05:14,160 --> 00:05:17,340
the registry<font color="#CCCCCC"> and</font><font color="#E5E5E5"> this there's multiple</font>

151
00:05:15,419 --> 00:05:19,289
hives or keys that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be set up</font>

152
00:05:17,340 --> 00:05:21,989
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> each</font><font color="#CCCCCC"> keikar user H key local</font>

153
00:05:19,289 --> 00:05:24,150
<font color="#CCCCCC">machine</font><font color="#E5E5E5"> there's H key current route or</font>

154
00:05:21,990 --> 00:05:25,350
classroom and that one is<font color="#E5E5E5"> kind of</font>

155
00:05:24,150 --> 00:05:27,388
interesting<font color="#CCCCCC"> because it's really a hybrid</font>

156
00:05:25,350 --> 00:05:29,669
<font color="#E5E5E5">of those two it's kind of a</font><font color="#CCCCCC"> virtual</font>

157
00:05:27,389 --> 00:05:32,310
directory doesn't actually exist it's

158
00:05:29,669 --> 00:05:33,960
it's red and<font color="#CCCCCC"> processed</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> percent it as</font>

159
00:05:32,310 --> 00:05:37,110
though<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> its own key but or hi that's</font>

160
00:05:33,960 --> 00:05:39,030
not so generally<font color="#CCCCCC"> speaking you're gonna</font>

161
00:05:37,110 --> 00:05:41,520
find<font color="#CCCCCC"> context in</font><font color="#E5E5E5"> the registry and</font>

162
00:05:39,030 --> 00:05:42,929
generally speaking<font color="#CCCCCC"> when the operating</font>

163
00:05:41,520 --> 00:05:44,940
<font color="#CCCCCC">system wants</font><font color="#E5E5E5"> to create a common object</font>

164
00:05:42,930 --> 00:05:46,680
like display thumbnails when you open up

165
00:05:44,940 --> 00:05:48,539
<font color="#CCCCCC">Explorer there's all kinds of uses for</font>

166
00:05:46,680 --> 00:05:49,979
<font color="#E5E5E5">these things that's going to look to the</font>

167
00:05:48,539 --> 00:05:52,289
registry<font color="#CCCCCC"> to find the instructions on</font>

168
00:05:49,979 --> 00:05:53,490
where that<font color="#CCCCCC"> object is defined and</font><font color="#E5E5E5"> then</font>

169
00:05:52,289 --> 00:05:56,130
carry out<font color="#CCCCCC"> the task</font>

170
00:05:53,490 --> 00:05:57,900
<font color="#E5E5E5">okay so except for when you run into</font>

171
00:05:56,130 --> 00:05:59,490
registration<font color="#E5E5E5"> for</font><font color="#CCCCCC"> econ which came</font><font color="#E5E5E5"> out</font>

172
00:05:57,900 --> 00:06:00,900
with like<font color="#E5E5E5"> Windows XP we'll talk about</font>

173
00:05:59,490 --> 00:06:02,760
<font color="#E5E5E5">how that</font><font color="#CCCCCC"> could</font><font color="#E5E5E5"> be abused as well</font>

174
00:06:00,900 --> 00:06:05,849
so generally<font color="#CCCCCC"> speaking comma objects live</font>

175
00:06:02,760 --> 00:06:07,080
<font color="#E5E5E5">they're defined inside of the registry I</font>

176
00:06:05,849 --> 00:06:09,450
mean that's the main thing to<font color="#CCCCCC"> take away</font>

177
00:06:07,080 --> 00:06:11,070
so there's a search hierarchy<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we'll</font>

178
00:06:09,450 --> 00:06:12,810
get<font color="#E5E5E5"> into now with resolution that's</font>

179
00:06:11,070 --> 00:06:15,030
important so when you go looking for<font color="#E5E5E5"> a</font>

180
00:06:12,810 --> 00:06:19,110
calm object<font color="#E5E5E5"> I'm gonna go the next slide</font>

181
00:06:15,030 --> 00:06:20,820
<font color="#CCCCCC">oh yeah that's just an example so</font><font color="#E5E5E5"> you're</font>

182
00:06:19,110 --> 00:06:23,700
seeing in<font color="#E5E5E5"> this example the</font><font color="#CCCCCC"> registry</font><font color="#E5E5E5"> you</font>

183
00:06:20,820 --> 00:06:25,500
see a class ID which is<font color="#E5E5E5"> a hexadecimal</font>

184
00:06:23,700 --> 00:06:27,120
value here and<font color="#E5E5E5"> then you see</font><font color="#CCCCCC"> multiple</font><font color="#E5E5E5"> sub</font>

185
00:06:25,500 --> 00:06:29,720
<font color="#E5E5E5">keys this one we just found was a pretty</font>

186
00:06:27,120 --> 00:06:31,530
good example<font color="#CCCCCC"> of having</font><font color="#E5E5E5"> multiple keys</font>

187
00:06:29,720 --> 00:06:33,150
<font color="#E5E5E5">some of these are really</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to be</font>

188
00:06:31,530 --> 00:06:35,369
interesting in particular<font color="#CCCCCC"> we'll talk</font>

189
00:06:33,150 --> 00:06:37,830
<font color="#CCCCCC">about</font><font color="#E5E5E5"> this one called tree as which lets</font>

190
00:06:35,370 --> 00:06:39,870
you reference another<font color="#E5E5E5"> column object so</font>

191
00:06:37,830 --> 00:06:42,240
you<font color="#CCCCCC"> can say</font><font color="#E5E5E5"> oh this</font><font color="#CCCCCC"> object is really</font>

192
00:06:39,870 --> 00:06:43,530
<font color="#E5E5E5">actually over</font><font color="#CCCCCC"> here at another</font><font color="#E5E5E5"> location</font>

193
00:06:42,240 --> 00:06:45,240
<font color="#E5E5E5">that becomes really important</font><font color="#CCCCCC"> when</font>

194
00:06:43,530 --> 00:06:47,400
you're<font color="#E5E5E5"> intercepting or tampering with</font>

195
00:06:45,240 --> 00:06:50,010
the resolution<font color="#CCCCCC"> process so it's a</font>

196
00:06:47,400 --> 00:06:52,370
legitimate<font color="#CCCCCC"> key</font><font color="#E5E5E5"> but it's very often</font><font color="#CCCCCC"> to</font>

197
00:06:50,010 --> 00:06:54,500
use for abuse and<font color="#CCCCCC"> comma hijacks</font><font color="#E5E5E5"> so</font>

198
00:06:52,370 --> 00:06:56,730
that's all you'll see<font color="#E5E5E5"> you'll see</font>

199
00:06:54,500 --> 00:06:59,520
<font color="#E5E5E5">literally I think we enumerated just</font>

200
00:06:56,730 --> 00:07:01,740
before this like<font color="#CCCCCC"> 7,000 column objects in</font>

201
00:06:59,520 --> 00:07:05,940
Windows 10 so just a<font color="#E5E5E5"> few places</font><font color="#CCCCCC"> to hide</font>

202
00:07:01,740 --> 00:07:07,230
<font color="#E5E5E5">myself</font><font color="#CCCCCC"> alright</font><font color="#E5E5E5"> so as far as resolution</font>

203
00:07:05,940 --> 00:07:09,330
<font color="#E5E5E5">some terms you need</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> know that</font><font color="#CCCCCC"> the</font>

204
00:07:07,230 --> 00:07:12,480
class ID is a good with whatever<font color="#E5E5E5"> you</font>

205
00:07:09,330 --> 00:07:14,700
<font color="#E5E5E5">want to say</font><font color="#CCCCCC"> Parag</font><font color="#E5E5E5"> ID is a string like a</font>

206
00:07:12,480 --> 00:07:17,960
friendly<font color="#E5E5E5"> name to refer</font><font color="#CCCCCC"> that application</font>

207
00:07:14,700 --> 00:07:20,400
<font color="#E5E5E5">so they settled on application</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> word</font>

208
00:07:17,960 --> 00:07:22,070
document those are just<font color="#E5E5E5"> ways to refer to</font>

209
00:07:20,400 --> 00:07:24,120
<font color="#E5E5E5">the comm object-- in the friendly way</font>

210
00:07:22,070 --> 00:07:25,770
<font color="#E5E5E5">what's</font><font color="#CCCCCC"> really interesting though</font><font color="#E5E5E5"> are</font>

211
00:07:24,120 --> 00:07:28,230
these<font color="#E5E5E5"> things called monikers and</font>

212
00:07:25,770 --> 00:07:30,719
monikers are way that are installed on

213
00:07:28,230 --> 00:07:32,940
the<font color="#CCCCCC"> system to resolve</font><font color="#E5E5E5"> the column object</font>

214
00:07:30,720 --> 00:07:35,040
so one that<font color="#E5E5E5"> we use a lot is this</font>

215
00:07:32,940 --> 00:07:37,140
scriptlet moniker<font color="#E5E5E5"> if you look closely at</font>

216
00:07:35,040 --> 00:07:39,720
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it looks like a URL</font><font color="#CCCCCC"> but it says</font>

217
00:07:37,140 --> 00:07:42,630
<font color="#E5E5E5">it's prefixed with scriptlet colon or</font>

218
00:07:39,720 --> 00:07:44,070
you'll sometimes see script<font color="#E5E5E5"> colon and</font>

219
00:07:42,630 --> 00:07:45,750
what happens is that<font color="#CCCCCC"> when the</font><font color="#E5E5E5"> system</font>

220
00:07:44,070 --> 00:07:47,310
<font color="#CCCCCC">goes to resolve that</font><font color="#E5E5E5"> it will say oh</font><font color="#CCCCCC"> i</font>

221
00:07:45,750 --> 00:07:49,530
<font color="#E5E5E5">need to go out to</font><font color="#CCCCCC"> the internet and pull</font>

222
00:07:47,310 --> 00:07:52,290
this definition<font color="#E5E5E5"> for that</font><font color="#CCCCCC"> com object down</font>

223
00:07:49,530 --> 00:07:55,440
<font color="#E5E5E5">and then either register or execute it</font>

224
00:07:52,290 --> 00:07:56,460
<font color="#E5E5E5">so we've seen this in</font><font color="#CCCCCC"> the wild I think</font>

225
00:07:55,440 --> 00:07:58,530
if you look at<font color="#E5E5E5"> the code on the bottom</font>

226
00:07:56,460 --> 00:08:01,380
<font color="#E5E5E5">here you see this is</font><font color="#CCCCCC"> like the Pollack's</font>

227
00:07:58,530 --> 00:08:04,559
power<font color="#CCCCCC"> command execution string where</font>

228
00:08:01,380 --> 00:08:06,750
they're<font color="#E5E5E5"> calling get objects and they're</font>

229
00:08:04,560 --> 00:08:08,520
using<font color="#E5E5E5"> run</font><font color="#CCCCCC"> dll 32 from a command line but</font>

230
00:08:06,750 --> 00:08:11,400
the object they're passing in is a

231
00:08:08,520 --> 00:08:14,159
scriptlet<font color="#E5E5E5"> colon URL so those of you</font>

232
00:08:11,400 --> 00:08:15,690
doing<font color="#E5E5E5"> defense you know defenders looking</font>

233
00:08:14,160 --> 00:08:17,190
at<font color="#E5E5E5"> that sometimes you can go grab their</font>

234
00:08:15,690 --> 00:08:18,780
payload<font color="#E5E5E5"> and look at what the second</font>

235
00:08:17,190 --> 00:08:20,610
stage was if it gets dropped<font color="#CCCCCC"> it's going</font>

236
00:08:18,780 --> 00:08:22,530
to actually drop to the temporary

237
00:08:20,610 --> 00:08:23,970
<font color="#CCCCCC">internet files so it doesn't live just</font>

238
00:08:22,530 --> 00:08:25,530
<font color="#E5E5E5">in</font><font color="#CCCCCC"> memory of</font><font color="#E5E5E5"> these</font><font color="#CCCCCC"> two often</font><font color="#E5E5E5"> get written</font>

239
00:08:23,970 --> 00:08:26,220
<font color="#E5E5E5">to</font><font color="#CCCCCC"> disk</font><font color="#E5E5E5"> depending on how they're</font>

240
00:08:25,530 --> 00:08:27,989
downloaded

241
00:08:26,220 --> 00:08:30,510
so a couple<font color="#CCCCCC"> things</font><font color="#E5E5E5"> to keep in mind but</font>

242
00:08:27,990 --> 00:08:32,580
get object and<font color="#CCCCCC"> create object are</font>

243
00:08:30,510 --> 00:08:35,218
fascinating<font color="#E5E5E5"> because they'll do this</font>

244
00:08:32,580 --> 00:08:38,729
resolution<font color="#E5E5E5"> for you dynamically so they</font>

245
00:08:35,219 --> 00:08:40,830
<font color="#E5E5E5">have a proxy SSL use a URL shortener</font>

246
00:08:38,729 --> 00:08:42,180
<font color="#E5E5E5">it'll follow retracts that will run SSL</font>

247
00:08:40,830 --> 00:08:43,800
little happy to authenticate to<font color="#E5E5E5"> your</font>

248
00:08:42,179 --> 00:08:45,449
proxy<font color="#E5E5E5"> and resolve that object</font>

249
00:08:43,799 --> 00:08:50,699
dynamically it's really fascinating<font color="#E5E5E5"> so</font>

250
00:08:45,450 --> 00:08:53,970
so we<font color="#E5E5E5"> use get object quite a bit</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so</font>

251
00:08:50,700 --> 00:08:56,520
<font color="#E5E5E5">here</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> some examples</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> WI</font><font color="#CCCCCC"> for example</font>

252
00:08:53,970 --> 00:08:59,550
has a moniker as you can instantiate you

253
00:08:56,520 --> 00:09:01,020
can call this is<font color="#E5E5E5"> VBS</font><font color="#CCCCCC"> so you</font><font color="#E5E5E5"> can say get</font>

254
00:08:59,550 --> 00:09:02,640
<font color="#E5E5E5">object with the wind' management which</font>

255
00:09:01,020 --> 00:09:04,590
<font color="#CCCCCC">is the</font><font color="#E5E5E5"> WI then you could say scheduled</font>

256
00:09:02,640 --> 00:09:06,120
tasks<font color="#E5E5E5"> so you can then enumerate</font>

257
00:09:04,590 --> 00:09:08,310
scheduled tasks<font color="#CCCCCC"> or you can set some</font>

258
00:09:06,120 --> 00:09:11,010
impersonation or authentication levels

259
00:09:08,310 --> 00:09:14,130
with these<font color="#CCCCCC"> monitors so just pointing out</font>

260
00:09:11,010 --> 00:09:16,020
<font color="#E5E5E5">that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> get object function takes</font>

261
00:09:14,130 --> 00:09:17,490
inside of it<font color="#E5E5E5"> typically something that's</font>

262
00:09:16,020 --> 00:09:20,670
referenced by<font color="#E5E5E5"> moniker and that becomes</font>

263
00:09:17,490 --> 00:09:22,740
important<font color="#CCCCCC"> that make</font><font color="#E5E5E5"> sense yeah awesome</font>

264
00:09:20,670 --> 00:09:25,469
<font color="#CCCCCC">so we found this one last night this</font><font color="#E5E5E5"> is</font>

265
00:09:22,740 --> 00:09:28,500
<font color="#E5E5E5">really cool so</font><font color="#CCCCCC"> good object is reference</font>

266
00:09:25,470 --> 00:09:30,900
and all sorts of<font color="#E5E5E5"> different paths</font><font color="#CCCCCC"> and so</font>

267
00:09:28,500 --> 00:09:33,690
we<font color="#E5E5E5"> found this</font><font color="#CCCCCC"> powershell or it is really</font>

268
00:09:30,900 --> 00:09:35,730
the dotnet method called<font color="#CCCCCC"> Interop system</font>

269
00:09:33,690 --> 00:09:38,160
services<font color="#CCCCCC"> Marshall and it has this</font>

270
00:09:35,730 --> 00:09:39,240
function called binds to moniker<font color="#CCCCCC"> so this</font>

271
00:09:38,160 --> 00:09:42,660
is kind of fun so you can<font color="#E5E5E5"> just actually</font>

272
00:09:39,240 --> 00:09:44,730
<font color="#E5E5E5">pass it a scriptlet and get it to</font>

273
00:09:42,660 --> 00:09:46,110
execute<font color="#CCCCCC"> something now</font><font color="#E5E5E5"> plus you're like</font>

274
00:09:44,730 --> 00:09:48,089
<font color="#E5E5E5">what that's really not it should wear</font>

275
00:09:46,110 --> 00:09:49,230
<font color="#E5E5E5">DNC</font><font color="#CCCCCC"> well we</font><font color="#E5E5E5"> decided</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> me me cats</font>

276
00:09:48,089 --> 00:09:50,310
and that all said becomes really

277
00:09:49,230 --> 00:09:52,770
interesting<font color="#CCCCCC"> this time I'm gonna</font><font color="#E5E5E5"> reach</font>

278
00:09:50,310 --> 00:09:54,510
out and pull an XML file that<font color="#E5E5E5"> has</font><font color="#CCCCCC"> meet</font>

279
00:09:52,770 --> 00:09:55,949
<font color="#E5E5E5">me cats embedded in it and get it to</font>

280
00:09:54,510 --> 00:09:57,060
<font color="#E5E5E5">execute on the system so that's pretty</font>

281
00:09:55,950 --> 00:10:00,950
fun stuff

282
00:09:57,060 --> 00:10:02,910
this<font color="#CCCCCC"> bypassed at</font><font color="#E5E5E5"> least a MSI of</font>

283
00:10:00,950 --> 00:10:04,650
<font color="#E5E5E5">PowerShell</font><font color="#CCCCCC"> logging</font><font color="#E5E5E5"> heart</font><font color="#CCCCCC"> stop logging</font>

284
00:10:02,910 --> 00:10:06,380
<font color="#CCCCCC">yeah you won't see that outputted</font><font color="#E5E5E5"> me</font>

285
00:10:04,650 --> 00:10:09,680
mean<font color="#E5E5E5"> cats in the log anywhere yeah</font>

286
00:10:06,380 --> 00:10:09,680
<font color="#CCCCCC">question here</font>

287
00:10:10,570 --> 00:10:14,270
need to be is all<font color="#E5E5E5"> great question yeah so</font>

288
00:10:12,800 --> 00:10:16,219
the question<font color="#CCCCCC"> was</font><font color="#E5E5E5"> says does the extension</font>

289
00:10:14,270 --> 00:10:18,949
like<font color="#CCCCCC"> WSC or xml it could be whatever you</font>

290
00:10:16,220 --> 00:10:20,630
want<font color="#CCCCCC"> jpg PNG doesn't matter</font><font color="#E5E5E5"> it's the</font>

291
00:10:18,950 --> 00:10:22,550
contents of the file<font color="#E5E5E5"> they're important</font>

292
00:10:20,630 --> 00:10:24,410
that make sense<font color="#E5E5E5"> so the question was does</font>

293
00:10:22,550 --> 00:10:27,079
the file extension matter doesn't<font color="#E5E5E5"> matter</font>

294
00:10:24,410 --> 00:10:28,850
<font color="#CCCCCC">it all can</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> anything</font><font color="#E5E5E5"> it's a really</font>

295
00:10:27,080 --> 00:10:30,320
<font color="#E5E5E5">good question</font><font color="#CCCCCC"> so yeah so this is this we</font>

296
00:10:28,850 --> 00:10:32,390
like this<font color="#E5E5E5"> because</font><font color="#CCCCCC"> then we could use</font>

297
00:10:30,320 --> 00:10:35,030
PowerShell if PowerShell is on logging

298
00:10:32,390 --> 00:10:37,490
then we can just<font color="#CCCCCC"> jump out of</font><font color="#E5E5E5"> it and our</font>

299
00:10:35,030 --> 00:10:38,780
<font color="#CCCCCC">output</font><font color="#E5E5E5"> and input is no longer locked</font><font color="#CCCCCC"> by</font>

300
00:10:37,490 --> 00:10:40,610
<font color="#E5E5E5">PowerShell because we're</font><font color="#CCCCCC"> running in this</font>

301
00:10:38,780 --> 00:10:44,420
<font color="#CCCCCC">comm object--</font><font color="#E5E5E5"> pretty fancy pretty</font>

302
00:10:40,610 --> 00:10:44,570
fascinating or<font color="#E5E5E5"> here's another way to do</font>

303
00:10:44,420 --> 00:10:46,490
it

304
00:10:44,570 --> 00:10:48,110
so make<font color="#CCCCCC"> PowerShell Phebe again why the</font>

305
00:10:46,490 --> 00:10:50,300
world<font color="#E5E5E5"> would</font><font color="#CCCCCC"> you do</font><font color="#E5E5E5"> that well again</font>

306
00:10:48,110 --> 00:10:52,130
because<font color="#E5E5E5"> of logging and Dave talked about</font>

307
00:10:50,300 --> 00:10:53,930
that this<font color="#E5E5E5"> morning</font><font color="#CCCCCC"> up</font><font color="#E5E5E5"> higher</font><font color="#CCCCCC"> shell</font><font color="#E5E5E5"> very</font>

308
00:10:52,130 --> 00:10:56,330
strong<font color="#CCCCCC"> does language for defenders to</font>

309
00:10:53,930 --> 00:10:58,370
get telemetry<font color="#E5E5E5"> to understand what</font>

310
00:10:56,330 --> 00:10:59,840
tradecraft you're using so trying to

311
00:10:58,370 --> 00:11:03,620
<font color="#CCCCCC">innovate and</font><font color="#E5E5E5"> look for ways where</font><font color="#CCCCCC"> we can</font>

312
00:10:59,840 --> 00:11:04,940
stay out<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the log</font><font color="#CCCCCC"> lense</font><font color="#E5E5E5"> so this is</font>

313
00:11:03,620 --> 00:11:07,160
again<font color="#CCCCCC"> just another way to call get</font>

314
00:11:04,940 --> 00:11:09,140
object<font color="#CCCCCC"> and PowerShell your output and</font>

315
00:11:07,160 --> 00:11:12,100
input that<font color="#CCCCCC"> is no longer visible</font><font color="#E5E5E5"> in the</font>

316
00:11:09,140 --> 00:11:15,530
<font color="#E5E5E5">logs</font><font color="#CCCCCC"> pretty cool yep</font>

317
00:11:12,100 --> 00:11:17,630
so speaking of visual basic or<font color="#E5E5E5"> vbscript</font>

318
00:11:15,530 --> 00:11:19,100
<font color="#E5E5E5">this is kind of an undocumented</font><font color="#CCCCCC"> comm</font>

319
00:11:17,630 --> 00:11:21,260
object in<font color="#E5E5E5"> Windows a scripting dot</font>

320
00:11:19,100 --> 00:11:24,410
encoder one more or less<font color="#E5E5E5"> that lets you</font>

321
00:11:21,260 --> 00:11:26,270
take in take<font color="#E5E5E5"> vbscript and jscript</font><font color="#CCCCCC"> is</font>

322
00:11:24,410 --> 00:11:28,880
input and then it encodes<font color="#E5E5E5"> it and some</font>

323
00:11:26,270 --> 00:11:31,100
really obscure not documented<font color="#E5E5E5"> random</font>

324
00:11:28,880 --> 00:11:33,290
<font color="#CCCCCC">encoding scheme and</font><font color="#E5E5E5"> then spits it out to</font>

325
00:11:31,100 --> 00:11:35,180
you<font color="#E5E5E5"> in a way that that</font><font color="#CCCCCC"> VB script or J</font>

326
00:11:33,290 --> 00:11:37,010
<font color="#CCCCCC">script can interpret it so this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> just</font>

327
00:11:35,180 --> 00:11:39,439
<font color="#E5E5E5">an example of using this this is just a</font>

328
00:11:37,010 --> 00:11:42,080
simple<font color="#E5E5E5"> VB script that starts calc via</font>

329
00:11:39,440 --> 00:11:43,760
the W script she'll come object we run

330
00:11:42,080 --> 00:11:45,800
it through<font color="#E5E5E5"> the encoder which exists by</font>

331
00:11:43,760 --> 00:11:48,290
default on<font color="#CCCCCC"> Windows</font><font color="#E5E5E5"> and then spits this</font>

332
00:11:45,800 --> 00:11:50,030
file<font color="#CCCCCC"> out to you which is</font><font color="#E5E5E5"> useful you can</font>

333
00:11:48,290 --> 00:11:52,880
run that VB script<font color="#CCCCCC"> that's generated and</font>

334
00:11:50,030 --> 00:11:53,900
it'll execute<font color="#E5E5E5"> what's neat is in these</font>

335
00:11:52,880 --> 00:11:56,960
comm scriptlets

336
00:11:53,900 --> 00:11:58,880
you can actually set the<font color="#CCCCCC"> language type</font>

337
00:11:56,960 --> 00:12:01,160
to VB script<font color="#E5E5E5"> out in code meaning that</font>

338
00:11:58,880 --> 00:12:02,900
it's going<font color="#E5E5E5"> to instead take instead of</font>

339
00:12:01,160 --> 00:12:05,180
taking VB script or J script directly

340
00:12:02,900 --> 00:12:06,560
<font color="#E5E5E5">it's going to take the encoded blob and</font>

341
00:12:05,180 --> 00:12:08,660
it's<font color="#E5E5E5"> going to interpret that</font><font color="#CCCCCC"> for you so</font>

342
00:12:06,560 --> 00:12:10,849
<font color="#E5E5E5">you can take your comm scriptlet</font><font color="#CCCCCC"> and</font>

343
00:12:08,660 --> 00:12:12,980
<font color="#CCCCCC">code it via this</font><font color="#E5E5E5"> object and then throw</font>

344
00:12:10,850 --> 00:12:15,710
it in you know in<font color="#E5E5E5"> your actual payload</font>

345
00:12:12,980 --> 00:12:17,120
<font color="#E5E5E5">and it's gonna</font><font color="#CCCCCC"> be I put</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> out</font><font color="#E5E5E5"> kind of a</font>

346
00:12:15,710 --> 00:12:19,760
teaser tweet a lot of people are like

347
00:12:17,120 --> 00:12:21,440
how do<font color="#E5E5E5"> you decode this</font><font color="#CCCCCC"> there are a</font><font color="#E5E5E5"> few</font>

348
00:12:19,760 --> 00:12:21,860
<font color="#E5E5E5">tools that don't do it 100%</font>

349
00:12:21,440 --> 00:12:23,600
there's

350
00:12:21,860 --> 00:12:26,390
one script that<font color="#E5E5E5"> Microsoft put out a</font>

351
00:12:23,600 --> 00:12:30,020
really<font color="#E5E5E5"> long time</font><font color="#CCCCCC"> ago undercoating</font><font color="#E5E5E5"> vbe</font>

352
00:12:26,390 --> 00:12:32,090
<font color="#E5E5E5">and it's three lines to encode it and</font>

353
00:12:30,020 --> 00:12:33,800
it's<font color="#E5E5E5"> like 30-something lines of VB</font>

354
00:12:32,090 --> 00:12:34,940
script to decode<font color="#CCCCCC"> it and</font><font color="#E5E5E5"> it's not always</font>

355
00:12:33,800 --> 00:12:37,069
super<font color="#E5E5E5"> accurate and it can get really</font>

356
00:12:34,940 --> 00:12:38,810
<font color="#CCCCCC">funky this is just kind of a cool little</font>

357
00:12:37,070 --> 00:12:41,990
offensive tip and then for a defender<font color="#E5E5E5"> or</font>

358
00:12:38,810 --> 00:12:43,400
something to<font color="#E5E5E5"> keep an eye on yes one of</font>

359
00:12:41,990 --> 00:12:45,260
<font color="#E5E5E5">the things a lot</font><font color="#CCCCCC"> of defenders are doing</font>

360
00:12:43,400 --> 00:12:47,329
these<font color="#CCCCCC"> days is decoding your encoded</font>

361
00:12:45,260 --> 00:12:49,640
PowerShell right so they see your

362
00:12:47,330 --> 00:12:50,900
encoded command they decode that<font color="#CCCCCC"> even if</font>

363
00:12:49,640 --> 00:12:52,939
you've<font color="#CCCCCC"> done</font><font color="#E5E5E5"> it a couple</font><font color="#CCCCCC"> of layers they</font>

364
00:12:50,900 --> 00:12:54,439
iterate<font color="#E5E5E5"> through and it's automated in</font>

365
00:12:52,940 --> 00:12:55,880
their defense system<font color="#E5E5E5"> so again we're</font>

366
00:12:54,440 --> 00:12:58,520
trying you're trying<font color="#E5E5E5"> to find ways to</font>

367
00:12:55,880 --> 00:12:59,660
avoid<font color="#E5E5E5"> or make</font><font color="#CCCCCC"> Ray's that you know</font>

368
00:12:58,520 --> 00:13:00,860
<font color="#CCCCCC">they're ice talking about</font><font color="#E5E5E5"> raising the</font>

369
00:12:59,660 --> 00:13:02,270
cost<font color="#E5E5E5"> for attackers</font><font color="#CCCCCC"> what we like to</font>

370
00:13:00,860 --> 00:13:05,960
<font color="#CCCCCC">sometimes</font><font color="#E5E5E5"> raise the cost</font><font color="#CCCCCC"> for defenders</font>

371
00:13:02,270 --> 00:13:07,670
<font color="#CCCCCC">it makes us all</font><font color="#E5E5E5"> better</font><font color="#CCCCCC"> okay cool okay so</font>

372
00:13:05,960 --> 00:13:09,410
normally<font color="#E5E5E5"> when</font><font color="#CCCCCC"> you register so again we</font>

373
00:13:07,670 --> 00:13:10,880
talked about registration<font color="#CCCCCC"> resolution</font>

374
00:13:09,410 --> 00:13:12,740
there's some built-in<font color="#E5E5E5"> tools that</font>

375
00:13:10,880 --> 00:13:14,030
actually<font color="#E5E5E5"> will handle column registration</font>

376
00:13:12,740 --> 00:13:17,570
for you and these are<font color="#E5E5E5"> run all the time</font>

377
00:13:14,030 --> 00:13:20,329
<font color="#CCCCCC">or very often say all the time</font><font color="#E5E5E5"> but</font>

378
00:13:17,570 --> 00:13:22,280
there's<font color="#E5E5E5"> red</font><font color="#CCCCCC"> jesse r32 red</font><font color="#E5E5E5"> jo sim and reg</font>

379
00:13:20,330 --> 00:13:23,960
<font color="#E5E5E5">s</font><font color="#CCCCCC"> VCS these are</font><font color="#E5E5E5"> two at the last</font><font color="#CCCCCC"> su or</font>

380
00:13:22,280 --> 00:13:26,000
dotnet<font color="#CCCCCC"> tool so if you write a column</font><font color="#E5E5E5"> op</font>

381
00:13:23,960 --> 00:13:27,290
to write a class and<font color="#CCCCCC"> c-sharp you</font><font color="#E5E5E5"> can</font>

382
00:13:26,000 --> 00:13:29,150
register it so it's<font color="#E5E5E5"> available to</font>

383
00:13:27,290 --> 00:13:32,360
applications<font color="#CCCCCC"> like J script or EB script</font>

384
00:13:29,150 --> 00:13:34,340
<font color="#E5E5E5">but that's that's normally how you're</font>

385
00:13:32,360 --> 00:13:36,350
gonna see a developer<font color="#CCCCCC"> that wants to</font>

386
00:13:34,340 --> 00:13:38,780
publish a column object<font color="#E5E5E5"> register that</font>

387
00:13:36,350 --> 00:13:40,310
they may do it<font color="#E5E5E5"> directly in the registry</font>

388
00:13:38,780 --> 00:13:43,790
<font color="#CCCCCC">but it would be more likely to</font><font color="#E5E5E5"> use one</font>

389
00:13:40,310 --> 00:13:45,500
of these tools<font color="#E5E5E5"> to pass in the DLL to get</font>

390
00:13:43,790 --> 00:13:47,510
<font color="#E5E5E5">registered so something to be to be</font>

391
00:13:45,500 --> 00:13:49,880
looking<font color="#E5E5E5"> out for</font><font color="#CCCCCC"> these tools</font><font color="#E5E5E5"> and these</font>

392
00:13:47,510 --> 00:13:51,380
are known<font color="#E5E5E5"> whitelisting bypass tools</font>

393
00:13:49,880 --> 00:13:53,900
because you can inject into<font color="#E5E5E5"> the</font>

394
00:13:51,380 --> 00:13:58,130
registration<font color="#CCCCCC"> process and get code</font>

395
00:13:53,900 --> 00:13:59,720
execution<font color="#CCCCCC"> so so</font><font color="#E5E5E5"> I want</font><font color="#CCCCCC"> to I don't want</font>

396
00:13:58,130 --> 00:14:00,830
to go over every point<font color="#E5E5E5"> on the slide but</font>

397
00:13:59,720 --> 00:14:02,480
<font color="#E5E5E5">I want to make sure you understand this</font>

398
00:14:00,830 --> 00:14:04,220
is actually from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> com specification</font>

399
00:14:02,480 --> 00:14:05,810
how many of you have read this<font color="#E5E5E5"> from 1995</font>

400
00:14:04,220 --> 00:14:07,310
it's a great stuff all<font color="#E5E5E5"> right come on and</font>

401
00:14:05,810 --> 00:14:09,979
<font color="#CCCCCC">show that it's</font><font color="#E5E5E5"> really good read</font>

402
00:14:07,310 --> 00:14:11,989
<font color="#CCCCCC">Griffey but inside of</font><font color="#E5E5E5"> here what I wanted</font>

403
00:14:09,980 --> 00:14:14,180
<font color="#E5E5E5">to point out was the sequence that</font>

404
00:14:11,990 --> 00:14:16,220
happens<font color="#E5E5E5"> when Windows goes to locate an</font>

405
00:14:14,180 --> 00:14:19,459
object<font color="#CCCCCC"> it's going to go</font><font color="#E5E5E5"> it's first gonna</font>

406
00:14:16,220 --> 00:14:20,870
look up<font color="#E5E5E5"> a call to get class object then</font>

407
00:14:19,460 --> 00:14:24,140
it's<font color="#E5E5E5"> going to go look in the registry</font>

408
00:14:20,870 --> 00:14:25,770
<font color="#E5E5E5">find the</font><font color="#CCCCCC"> DL our</font><font color="#E5E5E5"> scriptlet whatever's</font>

409
00:14:24,140 --> 00:14:28,620
backing<font color="#CCCCCC"> that comma</font>

410
00:14:25,770 --> 00:14:30,840
load<font color="#CCCCCC"> that into</font><font color="#E5E5E5"> memory resolve the class</font>

411
00:14:28,620 --> 00:14:32,400
and then make the object available to

412
00:14:30,840 --> 00:14:33,480
the application so we don't<font color="#E5E5E5"> have to have</font>

413
00:14:32,400 --> 00:14:34,620
to go<font color="#E5E5E5"> through every step here but I</font>

414
00:14:33,480 --> 00:14:37,110
wanted to see there's a sequence

415
00:14:34,620 --> 00:14:38,700
<font color="#CCCCCC">probably the most</font><font color="#E5E5E5"> important thing is go</font>

416
00:14:37,110 --> 00:14:40,590
check the registry<font color="#E5E5E5"> first see where the</font>

417
00:14:38,700 --> 00:14:41,070
<font color="#CCCCCC">definition is and go look it and</font>

418
00:14:40,590 --> 00:14:44,730
<font color="#E5E5E5">sometimes</font>

419
00:14:41,070 --> 00:14:46,380
hklm go look<font color="#CCCCCC"> at</font><font color="#E5E5E5"> HCC you will get into</font>

420
00:14:44,730 --> 00:14:48,030
the net sequence hijacking a little bit

421
00:14:46,380 --> 00:14:50,460
later<font color="#E5E5E5"> but there's</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> there's a process to</font>

422
00:14:48,030 --> 00:14:54,300
find and<font color="#CCCCCC"> execute that comm</font><font color="#E5E5E5"> object load</font>

423
00:14:50,460 --> 00:14:56,370
the<font color="#CCCCCC"> dll both the scriptlet so awesome so</font>

424
00:14:54,300 --> 00:14:57,750
yeah what<font color="#E5E5E5"> does this mean most of</font><font color="#CCCCCC"> the</font>

425
00:14:56,370 --> 00:14:59,610
<font color="#E5E5E5">time you're gonna find the column</font>

426
00:14:57,750 --> 00:15:02,190
artifacts if you're<font color="#E5E5E5"> doing forensics or</font>

427
00:14:59,610 --> 00:15:04,680
investigations in the registry<font color="#E5E5E5"> most of</font>

428
00:15:02,190 --> 00:15:06,090
the time so we<font color="#E5E5E5"> don't like</font><font color="#CCCCCC"> to live in the</font>

429
00:15:04,680 --> 00:15:08,459
registry we'd like to<font color="#E5E5E5"> find places where</font>

430
00:15:06,090 --> 00:15:10,920
<font color="#CCCCCC">we can execute things outside</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> that so</font>

431
00:15:08,460 --> 00:15:12,780
let's<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about registration free comm</font>

432
00:15:10,920 --> 00:15:14,459
and<font color="#E5E5E5"> so how many of you heard of this</font>

433
00:15:12,780 --> 00:15:17,550
before<font color="#CCCCCC"> registration of free</font><font color="#E5E5E5"> com</font>

434
00:15:14,460 --> 00:15:20,280
not many people<font color="#E5E5E5"> okay so the idea</font><font color="#CCCCCC"> here</font><font color="#E5E5E5"> is</font>

435
00:15:17,550 --> 00:15:22,680
<font color="#E5E5E5">there's a class available to you called</font>

436
00:15:20,280 --> 00:15:24,180
<font color="#E5E5E5">the activation context class and it</font>

437
00:15:22,680 --> 00:15:27,300
actually<font color="#E5E5E5"> lets you provide</font><font color="#CCCCCC"> a manifest</font>

438
00:15:24,180 --> 00:15:29,370
that defines where<font color="#CCCCCC"> the definition for</font>

439
00:15:27,300 --> 00:15:31,229
<font color="#E5E5E5">this comma object lives what DLL and</font>

440
00:15:29,370 --> 00:15:33,330
<font color="#CCCCCC">when the</font><font color="#E5E5E5"> application runs it looks to</font>

441
00:15:31,230 --> 00:15:34,710
<font color="#E5E5E5">that manifest first as opposed to</font>

442
00:15:33,330 --> 00:15:36,570
actually looking in the registry<font color="#CCCCCC"> so the</font>

443
00:15:34,710 --> 00:15:38,430
idea was if<font color="#E5E5E5"> I'm gonna deploy a comm</font>

444
00:15:36,570 --> 00:15:40,170
application have<font color="#E5E5E5"> it be self-contained in</font>

445
00:15:38,430 --> 00:15:42,390
the directory or<font color="#CCCCCC"> send file or</font><font color="#E5E5E5"> something</font>

446
00:15:40,170 --> 00:15:45,719
that I<font color="#E5E5E5"> can</font><font color="#CCCCCC"> easily deploy</font><font color="#E5E5E5"> this made it</font>

447
00:15:42,390 --> 00:15:47,760
easy the problem is there's no artifacts

448
00:15:45,720 --> 00:15:49,080
or no registration and the registry<font color="#E5E5E5"> keys</font>

449
00:15:47,760 --> 00:15:51,150
that define where that is you have to

450
00:15:49,080 --> 00:15:54,090
<font color="#CCCCCC">actually capture that</font><font color="#E5E5E5"> binary and in</font>

451
00:15:51,150 --> 00:15:56,670
manifest file<font color="#CCCCCC"> and the manifest can point</font>

452
00:15:54,090 --> 00:15:57,870
to a<font color="#E5E5E5"> URL</font><font color="#CCCCCC"> so that can see the more</font>

453
00:15:56,670 --> 00:15:59,640
interesting so if you want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> learn more</font>

454
00:15:57,870 --> 00:16:01,920
about registration free<font color="#E5E5E5"> com I've done</font>

455
00:15:59,640 --> 00:16:03,720
some examples on my<font color="#E5E5E5"> git repo you can</font>

456
00:16:01,920 --> 00:16:06,449
check those out slow ting<font color="#CCCCCC"> Leal's</font>

457
00:16:03,720 --> 00:16:07,620
from manifest so<font color="#E5E5E5"> I just want to make</font>

458
00:16:06,450 --> 00:16:09,540
sure<font color="#E5E5E5"> where this how</font><font color="#CCCCCC"> many</font><font color="#E5E5E5"> of you saw</font>

459
00:16:07,620 --> 00:16:11,250
<font color="#CCCCCC">james four shots</font><font color="#E5E5E5"> talking</font><font color="#CCCCCC"> derbycon</font><font color="#E5E5E5"> this</font>

460
00:16:09,540 --> 00:16:13,949
year<font color="#E5E5E5"> but</font><font color="#CCCCCC"> i see this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a couple of you</font>

461
00:16:11,250 --> 00:16:15,930
did so it's out all those talks<font color="#E5E5E5"> are</font>

462
00:16:13,950 --> 00:16:17,760
published like<font color="#E5E5E5"> within the hour or so</font>

463
00:16:15,930 --> 00:16:18,959
think it's<font color="#E5E5E5"> amazing what they do so the</font>

464
00:16:17,760 --> 00:16:21,450
<font color="#CCCCCC">videos</font><font color="#E5E5E5"> out there but I encourage</font><font color="#CCCCCC"> you to</font>

465
00:16:18,960 --> 00:16:25,230
<font color="#CCCCCC">check this out the</font><font color="#E5E5E5"> he use the activation</font>

466
00:16:21,450 --> 00:16:27,870
context to also<font color="#E5E5E5"> create and load this</font>

467
00:16:25,230 --> 00:16:29,760
this class<font color="#E5E5E5"> called Microsoft Visual Basic</font>

468
00:16:27,870 --> 00:16:31,500
devices computer and it's got some

469
00:16:29,760 --> 00:16:33,030
<font color="#E5E5E5">really interesting</font><font color="#CCCCCC"> things that</font><font color="#E5E5E5"> it can do</font>

470
00:16:31,500 --> 00:16:35,070
like<font color="#E5E5E5"> sin</font>

471
00:16:33,030 --> 00:16:38,069
gather stuff off the clipboard<font color="#E5E5E5"> and all</font>

472
00:16:35,070 --> 00:16:39,630
that's like not that's not exploit<font color="#CCCCCC"> it's</font>

473
00:16:38,070 --> 00:16:41,760
just<font color="#E5E5E5"> built-in functionality for that</font>

474
00:16:39,630 --> 00:16:44,250
class<font color="#CCCCCC"> so it's a really</font><font color="#E5E5E5"> good examples</font>

475
00:16:41,760 --> 00:16:45,660
again<font color="#E5E5E5"> he's released his slides and all</font>

476
00:16:44,250 --> 00:16:46,980
of his code samples so I encourage<font color="#E5E5E5"> you</font>

477
00:16:45,660 --> 00:16:49,430
to<font color="#E5E5E5"> check that I'm going to dive deeper</font>

478
00:16:46,980 --> 00:16:52,350
<font color="#CCCCCC">into some registration free comm</font>

479
00:16:49,430 --> 00:16:56,640
<font color="#E5E5E5">activation context or a CT CT X is a</font>

480
00:16:52,350 --> 00:16:57,930
really interesting calm<font color="#CCCCCC"> class so how</font>

481
00:16:56,640 --> 00:17:00,689
many<font color="#CCCCCC"> of you have heard of dotnet to</font>

482
00:16:57,930 --> 00:17:02,010
<font color="#CCCCCC">jscript a couple of you this is really</font>

483
00:17:00,690 --> 00:17:05,310
<font color="#E5E5E5">important why I wanted to make</font><font color="#CCCCCC"> sure this</font>

484
00:17:02,010 --> 00:17:07,349
<font color="#E5E5E5">makes it in here so historically you</font>

485
00:17:05,310 --> 00:17:09,690
didn't<font color="#CCCCCC"> really use VB script or J square</font>

486
00:17:07,349 --> 00:17:11,099
<font color="#CCCCCC">because</font><font color="#E5E5E5"> you couldn't make win32 API</font>

487
00:17:09,690 --> 00:17:12,330
calls I mean there's<font color="#E5E5E5"> only</font><font color="#CCCCCC"> so much you</font>

488
00:17:11,099 --> 00:17:15,089
<font color="#E5E5E5">could do really you're kind</font><font color="#CCCCCC"> of in a</font>

489
00:17:12,329 --> 00:17:17,159
sandbox right<font color="#CCCCCC"> now</font><font color="#E5E5E5"> with that intent to</font>

490
00:17:15,089 --> 00:17:19,740
jscript what<font color="#CCCCCC"> james warsaw published was</font>

491
00:17:17,160 --> 00:17:21,960
the<font color="#CCCCCC"> ability to take</font><font color="#E5E5E5"> the dotnet assembly</font>

492
00:17:19,740 --> 00:17:24,030
and<font color="#E5E5E5"> dotnet assemblies</font><font color="#CCCCCC"> can reach</font><font color="#E5E5E5"> into the</font>

493
00:17:21,960 --> 00:17:25,560
win32<font color="#CCCCCC"> api and do just about anything I</font>

494
00:17:24,030 --> 00:17:28,500
mean<font color="#E5E5E5"> you know anything a normal binary</font>

495
00:17:25,560 --> 00:17:31,200
<font color="#E5E5E5">would do and this bridge is that gap so</font>

496
00:17:28,500 --> 00:17:33,900
<font color="#CCCCCC">you take a dotnet assembly you serialize</font>

497
00:17:31,200 --> 00:17:36,360
<font color="#CCCCCC">it into</font><font color="#E5E5E5"> XML you run it in</font><font color="#CCCCCC"> jscript</font>

498
00:17:33,900 --> 00:17:39,000
in memory it unpacks itself and you get

499
00:17:36,360 --> 00:17:40,770
full access<font color="#E5E5E5"> to the win32</font><font color="#CCCCCC"> api</font><font color="#E5E5E5"> so whatever</font>

500
00:17:39,000 --> 00:17:43,650
you want<font color="#CCCCCC"> to do at this point</font><font color="#E5E5E5"> it's fully</font>

501
00:17:40,770 --> 00:17:45,330
possible this really unlocks<font color="#E5E5E5"> vbscript</font>

502
00:17:43,650 --> 00:17:47,250
and jscript and<font color="#E5E5E5"> why were started to see</font>

503
00:17:45,330 --> 00:17:49,230
<font color="#E5E5E5">some resurgence of attackers</font><font color="#CCCCCC"> being drawn</font>

504
00:17:47,250 --> 00:17:50,760
back<font color="#E5E5E5"> to</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> Dave again</font><font color="#CCCCCC"> in his talk</font>

505
00:17:49,230 --> 00:17:53,790
<font color="#CCCCCC">talks about people</font><font color="#E5E5E5"> looking at c-sharp</font>

506
00:17:50,760 --> 00:17:54,440
like tools like msbuild<font color="#E5E5E5"> dotnet to</font>

507
00:17:53,790 --> 00:17:57,149
jscript

508
00:17:54,440 --> 00:17:58,410
<font color="#CCCCCC">VBA there's a couple</font><font color="#E5E5E5"> different</font><font color="#CCCCCC"> ways to</font>

509
00:17:57,150 --> 00:17:59,670
do this<font color="#CCCCCC"> but this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> really a powerful</font>

510
00:17:58,410 --> 00:18:01,500
capability<font color="#E5E5E5"> wouldn't make sure people</font>

511
00:17:59,670 --> 00:18:03,330
understood what's possible<font color="#E5E5E5"> here so</font>

512
00:18:01,500 --> 00:18:05,400
<font color="#E5E5E5">definitely learn more about this</font><font color="#CCCCCC"> we've</font>

513
00:18:03,330 --> 00:18:07,020
written a lot of<font color="#E5E5E5"> payloads you seen it to</font>

514
00:18:05,400 --> 00:18:09,210
jscript how many red teamers have used

515
00:18:07,020 --> 00:18:12,570
this<font color="#CCCCCC"> on</font><font color="#E5E5E5"> kind of payload</font><font color="#CCCCCC"> sequel</font><font color="#E5E5E5"> thing</font>

516
00:18:09,210 --> 00:18:14,400
<font color="#E5E5E5">that's awesome</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> well no DLR desk</font>

517
00:18:12,570 --> 00:18:17,250
just<font color="#E5E5E5"> an XML file that it's downloaded</font>

518
00:18:14,400 --> 00:18:18,720
<font color="#CCCCCC">it's pretty fantastic</font><font color="#E5E5E5"> okay so with that</font>

519
00:18:17,250 --> 00:18:20,820
that's<font color="#E5E5E5"> the</font><font color="#CCCCCC"> background on</font><font color="#E5E5E5"> comm a little</font>

520
00:18:18,720 --> 00:18:23,720
bit over you<font color="#E5E5E5"> Matt's gonna jump in some</font>

521
00:18:20,820 --> 00:18:23,720
of the cool stuff<font color="#E5E5E5"> here</font>

522
00:18:23,860 --> 00:18:28,639
cool awesome<font color="#E5E5E5"> so kind of a dense topic</font>

523
00:18:27,680 --> 00:18:30,560
right there's a lot<font color="#E5E5E5"> of different</font>

524
00:18:28,640 --> 00:18:32,690
<font color="#CCCCCC">processes a lot of different</font><font color="#E5E5E5"> things that</font>

525
00:18:30,560 --> 00:18:34,700
<font color="#CCCCCC">go into</font><font color="#E5E5E5"> comm registration and resolution</font>

526
00:18:32,690 --> 00:18:36,590
so the<font color="#E5E5E5"> next few slides we're gonna go</font>

527
00:18:34,700 --> 00:18:38,300
over<font color="#E5E5E5"> kind of the resolution process and</font>

528
00:18:36,590 --> 00:18:38,990
what<font color="#E5E5E5"> it looks like from a researchers</font>

529
00:18:38,300 --> 00:18:41,240
perspective

530
00:18:38,990 --> 00:18:43,340
so obviously process monitor from

531
00:18:41,240 --> 00:18:45,380
sysinternals is a really good<font color="#E5E5E5"> tool to to</font>

532
00:18:43,340 --> 00:18:47,629
trace what's happening as<font color="#E5E5E5"> far as queries</font>

533
00:18:45,380 --> 00:18:50,210
lookups and loads so this is<font color="#E5E5E5"> just an</font>

534
00:18:47,630 --> 00:18:53,450
example query of saying what<font color="#E5E5E5"> ka'ab</font><font color="#CCCCCC"> jex</font>

535
00:18:50,210 --> 00:18:56,000
this Explorer<font color="#CCCCCC"> load for the user that</font>

536
00:18:53,450 --> 00:18:58,040
<font color="#CCCCCC">don't</font><font color="#E5E5E5"> exist on Windows so that would be</font>

537
00:18:56,000 --> 00:18:59,600
you know<font color="#CCCCCC"> a lot of good College X that</font>

538
00:18:58,040 --> 00:19:00,770
<font color="#CCCCCC">you know we're gonna</font><font color="#E5E5E5"> get loaded but you</font>

539
00:18:59,600 --> 00:19:02,480
can hijack without worrying about

540
00:19:00,770 --> 00:19:05,570
disrupting user<font color="#E5E5E5"> functionality without</font>

541
00:19:02,480 --> 00:19:07,490
hijacking an object that<font color="#E5E5E5"> you know the</font>

542
00:19:05,570 --> 00:19:09,530
user is<font color="#CCCCCC"> going to rely on or the</font>

543
00:19:07,490 --> 00:19:11,840
<font color="#CCCCCC">operating</font><font color="#E5E5E5"> system is going</font><font color="#CCCCCC"> to you know</font>

544
00:19:09,530 --> 00:19:13,490
<font color="#CCCCCC">have to function</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> that object</font><font color="#E5E5E5"> if you</font>

545
00:19:11,840 --> 00:19:14,750
<font color="#CCCCCC">hijack that object</font><font color="#E5E5E5"> and you know</font>

546
00:19:13,490 --> 00:19:17,090
something breaks is<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> be noticeable</font>

547
00:19:14,750 --> 00:19:20,540
to the<font color="#E5E5E5"> user such as an example query of</font>

548
00:19:17,090 --> 00:19:22,909
it<font color="#E5E5E5"> this</font><font color="#CCCCCC"> is what the output looks</font><font color="#E5E5E5"> like so</font>

549
00:19:20,540 --> 00:19:25,520
you<font color="#CCCCCC"> can</font><font color="#E5E5E5"> see here we talked about</font><font color="#CCCCCC"> V</font><font color="#E5E5E5"> the</font>

550
00:19:22,910 --> 00:19:26,750
various keys<font color="#E5E5E5"> so in</font><font color="#CCCCCC"> POC</font><font color="#E5E5E5"> server 32 is</font>

551
00:19:25,520 --> 00:19:28,160
gonna be<font color="#E5E5E5"> the one</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you're going to</font>

552
00:19:26,750 --> 00:19:31,340
want to pay attention<font color="#E5E5E5"> to it's</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> most</font>

553
00:19:28,160 --> 00:19:33,350
common key that hosts the<font color="#CCCCCC"> comm server or</font>

554
00:19:31,340 --> 00:19:36,620
the the<font color="#CCCCCC"> DLL or binary I</font><font color="#E5E5E5"> just backing</font>

555
00:19:33,350 --> 00:19:38,540
that<font color="#E5E5E5"> comm object so if you throw a</font><font color="#CCCCCC"> DLL</font>

556
00:19:36,620 --> 00:19:40,699
with the proper exports<font color="#CCCCCC"> in that key or</font>

557
00:19:38,540 --> 00:19:42,200
<font color="#CCCCCC">the path to the</font><font color="#E5E5E5"> DLL</font><font color="#CCCCCC"> in that key next</font>

558
00:19:40,700 --> 00:19:44,240
time the object loads it's going to call

559
00:19:42,200 --> 00:19:45,500
load library<font color="#CCCCCC"> on your DLL</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you're</font>

560
00:19:44,240 --> 00:19:47,570
going<font color="#E5E5E5"> to get code execution when that</font>

561
00:19:45,500 --> 00:19:49,250
happens<font color="#CCCCCC"> so that's just one of</font><font color="#E5E5E5"> the many</font>

562
00:19:47,570 --> 00:19:51,350
ways that's kind of what a generic

563
00:19:49,250 --> 00:19:53,270
hijack would look like so again take

564
00:19:51,350 --> 00:19:54,919
note<font color="#CCCCCC"> of the name not</font><font color="#E5E5E5"> found meaning that</font>

565
00:19:53,270 --> 00:19:56,750
it's not there you're<font color="#E5E5E5"> not going to</font>

566
00:19:54,920 --> 00:19:58,880
disrupt any any existing functionality

567
00:19:56,750 --> 00:20:00,260
<font color="#CCCCCC">with the operating system</font><font color="#E5E5E5"> and you're</font>

568
00:19:58,880 --> 00:20:01,550
going to<font color="#E5E5E5"> get your code loaded you know</font>

569
00:20:00,260 --> 00:20:05,240
when a user<font color="#CCCCCC"> logs in which is good</font>

570
00:20:01,550 --> 00:20:06,550
persistence so kind<font color="#E5E5E5"> of the the</font>

571
00:20:05,240 --> 00:20:09,260
enumeration tools that we've used

572
00:20:06,550 --> 00:20:11,840
<font color="#CCCCCC">historically</font><font color="#E5E5E5"> so you've got</font><font color="#CCCCCC"> MOLLE view</font>

573
00:20:09,260 --> 00:20:13,310
net which<font color="#E5E5E5"> is a an expansion on</font>

574
00:20:11,840 --> 00:20:14,600
<font color="#CCCCCC">microsoft's tool that james force</font><font color="#E5E5E5"> all</font>

575
00:20:13,310 --> 00:20:17,000
over at<font color="#E5E5E5"> google project zero has been</font>

576
00:20:14,600 --> 00:20:19,730
developing<font color="#E5E5E5"> it has a very very very</font>

577
00:20:17,000 --> 00:20:21,560
<font color="#E5E5E5">in-depth you know enumeration stack as</font>

578
00:20:19,730 --> 00:20:23,720
far as figuring<font color="#E5E5E5"> out methods</font><font color="#CCCCCC"> properties</font>

579
00:20:21,560 --> 00:20:25,490
what what are object or what objects are

580
00:20:23,720 --> 00:20:28,430
enumerated<font color="#E5E5E5"> are they exposed over decom</font>

581
00:20:25,490 --> 00:20:31,760
stuff like that<font color="#E5E5E5"> obviously proc Mon for</font>

582
00:20:28,430 --> 00:20:33,590
tracing resolution<font color="#E5E5E5"> tracing loading</font><font color="#CCCCCC"> RPC</font>

583
00:20:31,760 --> 00:20:35,660
view<font color="#CCCCCC"> api spy to get kind of a lower</font>

584
00:20:33,590 --> 00:20:37,059
level<font color="#E5E5E5"> view of of what's being called and</font>

585
00:20:35,660 --> 00:20:39,360
how you might<font color="#E5E5E5"> be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to put yourself</font>

586
00:20:37,059 --> 00:20:42,850
middle of that and<font color="#E5E5E5"> then certainly till</font>

587
00:20:39,360 --> 00:20:44,979
this<font color="#CCCCCC"> is done we all</font><font color="#E5E5E5"> love</font><font color="#CCCCCC"> sir utilities</font>

588
00:20:42,850 --> 00:20:46,418
you love<font color="#CCCCCC"> sir util</font><font color="#E5E5E5"> for whatever reason</font>

589
00:20:44,980 --> 00:20:48,070
you can enumerate all come objects

590
00:20:46,419 --> 00:20:51,879
<font color="#E5E5E5">basically whatever you want using</font>

591
00:20:48,070 --> 00:20:52,570
<font color="#E5E5E5">circuital natively which is cute this is</font>

592
00:20:51,879 --> 00:20:55,090
what<font color="#E5E5E5"> that looks like</font>

593
00:20:52,570 --> 00:20:57,220
<font color="#CCCCCC">see</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> uncertain</font><font color="#E5E5E5"> utility class and then</font>

594
00:20:55,090 --> 00:21:00,129
the comm server you want<font color="#E5E5E5"> you can pass it</font>

595
00:20:57,220 --> 00:21:01,419
a class ID you<font color="#CCCCCC"> can pass a program ID you</font>

596
00:21:00,129 --> 00:21:03,759
can<font color="#E5E5E5"> pass it really any common</font>

597
00:21:01,419 --> 00:21:06,220
registration component<font color="#E5E5E5"> that you want and</font>

598
00:21:03,759 --> 00:21:07,990
it<font color="#CCCCCC"> will pull down every single</font><font color="#E5E5E5"> instance</font>

599
00:21:06,220 --> 00:21:10,360
in<font color="#E5E5E5"> the registry that that components</font>

600
00:21:07,990 --> 00:21:13,059
registered as so here we<font color="#E5E5E5"> just use</font><font color="#CCCCCC"> scrub</font>

601
00:21:10,360 --> 00:21:15,248
<font color="#CCCCCC">UJ dll which is the</font><font color="#E5E5E5"> comm server that</font>

602
00:21:13,059 --> 00:21:17,289
backs<font color="#CCCCCC"> calm scriptlets</font><font color="#E5E5E5"> and you can see</font>

603
00:21:15,249 --> 00:21:18,940
the classes that are<font color="#CCCCCC"> already registered</font>

604
00:21:17,289 --> 00:21:20,499
<font color="#CCCCCC">in the operating</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> that utilize</font>

605
00:21:18,940 --> 00:21:22,119
that comm server so<font color="#CCCCCC"> that'd be a quick</font>

606
00:21:20,499 --> 00:21:23,529
way to enumerate<font color="#E5E5E5"> what other monikers</font>

607
00:21:22,119 --> 00:21:26,289
might be registered that<font color="#E5E5E5"> you use this</font>

608
00:21:23,529 --> 00:21:29,169
this comm server<font color="#E5E5E5"> right so kind of a</font>

609
00:21:26,289 --> 00:21:30,399
really random<font color="#E5E5E5"> and obscure enumeration</font>

610
00:21:29,169 --> 00:21:31,929
method so you don't<font color="#E5E5E5"> need to bring</font><font color="#CCCCCC"> any</font>

611
00:21:30,399 --> 00:21:36,518
additional tooling with you you can just

612
00:21:31,929 --> 00:21:38,230
use<font color="#E5E5E5"> circuito as it is so kind of the</font>

613
00:21:36,519 --> 00:21:40,389
<font color="#CCCCCC">MOBOTIX tactic</font><font color="#E5E5E5"> to malicious tactics</font>

614
00:21:38,230 --> 00:21:44,019
overview<font color="#E5E5E5"> that's kind of a quick</font>

615
00:21:40,389 --> 00:21:45,100
enumeration you know<font color="#E5E5E5"> post</font><font color="#CCCCCC"> you guys can</font>

616
00:21:44,019 --> 00:21:48,340
go dig into the tools<font color="#CCCCCC"> I'll highly</font>

617
00:21:45,100 --> 00:21:49,719
recommend you do it<font color="#E5E5E5"> with that said we're</font>

618
00:21:48,340 --> 00:21:51,189
going<font color="#CCCCCC"> to jump into kind of</font><font color="#E5E5E5"> the malicious</font>

619
00:21:49,720 --> 00:21:54,190
implications<font color="#CCCCCC"> of some of this so</font>

620
00:21:51,190 --> 00:21:55,809
persistence lateral movement<font color="#CCCCCC"> you know</font>

621
00:21:54,190 --> 00:21:57,220
some<font color="#E5E5E5"> of the evasion as far as evading</font>

622
00:21:55,809 --> 00:22:00,580
<font color="#CCCCCC">command-line logging evading out</font>

623
00:21:57,220 --> 00:22:02,769
<font color="#E5E5E5">whitelisting stuff like that so</font>

624
00:22:00,580 --> 00:22:06,129
persistence<font color="#E5E5E5"> there are a lot of post out</font>

625
00:22:02,769 --> 00:22:07,600
there<font color="#E5E5E5"> now on comm hijacking and how how</font>

626
00:22:06,129 --> 00:22:09,369
you can be persistent on a<font color="#CCCCCC"> host you</font>

627
00:22:07,600 --> 00:22:11,439
<font color="#CCCCCC">delight</font><font color="#E5E5E5"> using that technique</font><font color="#CCCCCC"> obviously</font>

628
00:22:09,369 --> 00:22:13,720
<font color="#CCCCCC">it's a</font><font color="#E5E5E5"> little stealthier or it was until</font>

629
00:22:11,440 --> 00:22:16,629
<font color="#CCCCCC">it</font><font color="#E5E5E5"> became you know relatively used than</font>

630
00:22:13,720 --> 00:22:19,690
the<font color="#CCCCCC"> typical run key</font><font color="#E5E5E5"> the idea behind this</font>

631
00:22:16,629 --> 00:22:22,299
<font color="#CCCCCC">is that</font><font color="#E5E5E5"> you're taking</font><font color="#CCCCCC"> a when a user logs</font>

632
00:22:19,690 --> 00:22:24,129
in stuff happens so<font color="#E5E5E5"> explore it loads all</font>

633
00:22:22,299 --> 00:22:25,899
of<font color="#E5E5E5"> these comma objects the idea is you</font>

634
00:22:24,129 --> 00:22:28,119
hijack either an existing<font color="#CCCCCC"> one or a non</font>

635
00:22:25,899 --> 00:22:30,039
existing one<font color="#E5E5E5"> and you either register</font>

636
00:22:28,119 --> 00:22:32,199
that comma<font color="#CCCCCC"> object or that class idea is</font>

637
00:22:30,039 --> 00:22:33,700
your own or you add what's<font color="#CCCCCC"> called a</font>

638
00:22:32,200 --> 00:22:35,940
treat<font color="#CCCCCC"> ASCII which I'll talk about here</font>

639
00:22:33,700 --> 00:22:38,200
<font color="#E5E5E5">in a</font><font color="#CCCCCC"> little bit this</font><font color="#E5E5E5"> treat</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> key</font>

640
00:22:35,940 --> 00:22:40,210
<font color="#E5E5E5">basically says when I when I go to</font>

641
00:22:38,200 --> 00:22:41,740
instantiate<font color="#E5E5E5"> this class ID and</font><font color="#CCCCCC"> that key</font>

642
00:22:40,210 --> 00:22:43,960
exists it's going to<font color="#CCCCCC"> point</font><font color="#E5E5E5"> to the class</font>

643
00:22:41,740 --> 00:22:46,529
idea of<font color="#E5E5E5"> another object so when Windows</font>

644
00:22:43,960 --> 00:22:48,850
says I want to load this random class ID

645
00:22:46,529 --> 00:22:49,820
<font color="#E5E5E5">tree-like well I'm here</font><font color="#CCCCCC"> so now you have</font>

646
00:22:48,850 --> 00:22:51,560
to go

647
00:22:49,820 --> 00:22:52,790
this class ID which gives us<font color="#E5E5E5"> the ability</font>

648
00:22:51,560 --> 00:22:57,080
<font color="#E5E5E5">to kind of man in the middle</font><font color="#CCCCCC"> of the</font>

649
00:22:52,790 --> 00:22:59,780
resolution<font color="#E5E5E5"> process so this is what a</font>

650
00:22:57,080 --> 00:23:02,389
registry<font color="#CCCCCC"> back custom column check looks</font>

651
00:22:59,780 --> 00:23:05,149
like so this<font color="#E5E5E5"> is what you need to throw</font>

652
00:23:02,390 --> 00:23:07,040
in<font color="#E5E5E5"> their registry basically to create</font>

653
00:23:05,150 --> 00:23:08,990
your own<font color="#CCCCCC"> comma object so in this</font>

654
00:23:07,040 --> 00:23:11,360
instance we've created a<font color="#CCCCCC"> new comma</font>

655
00:23:08,990 --> 00:23:13,340
object called bandit<font color="#E5E5E5"> and that is the</font>

656
00:23:11,360 --> 00:23:15,139
program<font color="#CCCCCC"> ID or</font><font color="#E5E5E5"> the human readable</font>

657
00:23:13,340 --> 00:23:17,929
you know identifier for<font color="#E5E5E5"> that specific</font>

658
00:23:15,140 --> 00:23:19,940
object<font color="#E5E5E5"> once you've done that you</font><font color="#CCCCCC"> need to</font>

659
00:23:17,930 --> 00:23:22,490
give that<font color="#E5E5E5"> program ID a class ID this is</font>

660
00:23:19,940 --> 00:23:25,190
going to be the the giant string or the

661
00:23:22,490 --> 00:23:26,990
giant<font color="#CCCCCC"> grid</font><font color="#E5E5E5"> that that the</font><font color="#CCCCCC"> Windows opera</font>

662
00:23:25,190 --> 00:23:28,910
<font color="#CCCCCC">windows is going to associate</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> that</font>

663
00:23:26,990 --> 00:23:31,280
object<font color="#CCCCCC"> right so the probably</font><font color="#E5E5E5"> the program</font>

664
00:23:28,910 --> 00:23:32,600
ID is going<font color="#CCCCCC"> to point</font><font color="#E5E5E5"> to the class ID so</font>

665
00:23:31,280 --> 00:23:33,800
when the<font color="#E5E5E5"> program IT is queried it's</font>

666
00:23:32,600 --> 00:23:36,199
going to query the class ID and it's

667
00:23:33,800 --> 00:23:37,700
<font color="#E5E5E5">going to go and query the</font><font color="#CCCCCC"> com</font><font color="#E5E5E5"> server so</font>

668
00:23:36,200 --> 00:23:40,250
you<font color="#E5E5E5"> can see the com server registered</font>

669
00:23:37,700 --> 00:23:43,100
the<font color="#E5E5E5"> inbox</font><font color="#CCCCCC"> server thirty two key we've</font>

670
00:23:40,250 --> 00:23:45,110
set that<font color="#E5E5E5"> to the</font><font color="#CCCCCC"> com scriptlet com server</font>

671
00:23:43,100 --> 00:23:48,679
or the<font color="#CCCCCC"> DLL that</font><font color="#E5E5E5"> handles you know com</font>

672
00:23:45,110 --> 00:23:50,540
scribble execution then when you do that

673
00:23:48,680 --> 00:23:53,030
<font color="#E5E5E5">fortunately we're actually weirdly</font>

674
00:23:50,540 --> 00:23:55,520
<font color="#E5E5E5">enough there's a key you can add that is</font>

675
00:23:53,030 --> 00:23:58,460
associated<font color="#CCCCCC"> with that</font><font color="#E5E5E5"> comm server called</font>

676
00:23:55,520 --> 00:24:00,350
scriptlet URL and what that does is it

677
00:23:58,460 --> 00:24:02,120
<font color="#CCCCCC">allows</font><font color="#E5E5E5"> you to throw in the URL</font><font color="#CCCCCC"> of a</font>

678
00:24:00,350 --> 00:24:04,280
<font color="#E5E5E5">common script</font><font color="#CCCCCC"> lit on</font><font color="#E5E5E5"> the internet and</font>

679
00:24:02,120 --> 00:24:05,719
<font color="#CCCCCC">when</font><font color="#E5E5E5"> that objects</font><font color="#CCCCCC"> instantiated</font><font color="#E5E5E5"> it's</font>

680
00:24:04,280 --> 00:24:08,810
<font color="#CCCCCC">going</font><font color="#E5E5E5"> to execute whatever is hosted</font>

681
00:24:05,720 --> 00:24:10,490
there<font color="#CCCCCC"> I can't think I stayed up many</font>

682
00:24:08,810 --> 00:24:11,990
many<font color="#E5E5E5"> nights trying to think of why in</font>

683
00:24:10,490 --> 00:24:14,000
the<font color="#CCCCCC"> world that would be a thing</font><font color="#E5E5E5"> in</font>

684
00:24:11,990 --> 00:24:15,410
Windows<font color="#CCCCCC"> but it is and it's there and</font>

685
00:24:14,000 --> 00:24:17,060
<font color="#CCCCCC">it's really</font><font color="#E5E5E5"> cool</font><font color="#CCCCCC"> to use so how they</font>

686
00:24:15,410 --> 00:24:20,630
recommend that<font color="#E5E5E5"> you that you tinker</font>

687
00:24:17,060 --> 00:24:22,460
around with it so up to the up<font color="#E5E5E5"> to the</font>

688
00:24:20,630 --> 00:24:24,560
first two arrows there we've created our

689
00:24:22,460 --> 00:24:27,860
own object we<font color="#E5E5E5"> created bandit that runs a</font>

690
00:24:24,560 --> 00:24:29,450
<font color="#E5E5E5">comm script with on github right the</font>

691
00:24:27,860 --> 00:24:32,990
last<font color="#E5E5E5"> two lines there</font><font color="#CCCCCC"> are we</font><font color="#E5E5E5"> are</font>

692
00:24:29,450 --> 00:24:36,350
hijacking<font color="#CCCCCC"> the class ID that Explorer</font>

693
00:24:32,990 --> 00:24:38,540
<font color="#E5E5E5">loads when the user logs in instead of</font>

694
00:24:36,350 --> 00:24:40,490
hijacking it by<font color="#E5E5E5"> actually creating</font><font color="#CCCCCC"> the</font>

695
00:24:38,540 --> 00:24:42,350
object ourselves<font color="#E5E5E5"> we're adding a</font><font color="#CCCCCC"> triage</font>

696
00:24:40,490 --> 00:24:44,870
key and that's saying<font color="#CCCCCC"> anytime that</font><font color="#E5E5E5"> this</font>

697
00:24:42,350 --> 00:24:46,730
class ID is instantiated<font color="#CCCCCC"> I need to go I</font>

698
00:24:44,870 --> 00:24:48,560
<font color="#E5E5E5">need to actually resolve the class ID</font>

699
00:24:46,730 --> 00:24:50,390
that belongs to<font color="#E5E5E5"> bandit and it's going to</font>

700
00:24:48,560 --> 00:24:53,629
proxy itself up and it's<font color="#CCCCCC"> gonna load our</font>

701
00:24:50,390 --> 00:24:55,400
code for<font color="#CCCCCC"> us</font><font color="#E5E5E5"> instead so kind of dense</font><font color="#CCCCCC"> use</font>

702
00:24:53,630 --> 00:24:57,740
<font color="#E5E5E5">that as a reference as far as you know</font>

703
00:24:55,400 --> 00:24:59,700
it can<font color="#CCCCCC"> get really confusing</font><font color="#E5E5E5"> once you</font>

704
00:24:57,740 --> 00:25:02,250
start manually<font color="#E5E5E5"> creating these keys thing</font>

705
00:24:59,700 --> 00:25:03,360
can get<font color="#E5E5E5"> I'm really wonky so uses as a</font>

706
00:25:02,250 --> 00:25:07,760
reference and definitely<font color="#E5E5E5"> play around</font>

707
00:25:03,360 --> 00:25:16,279
<font color="#CCCCCC">with it and then we've</font><font color="#E5E5E5"> got a demo</font><font color="#CCCCCC"> I</font>

708
00:25:07,760 --> 00:25:19,019
don't do a lot<font color="#CCCCCC"> of</font><font color="#E5E5E5"> demos I'm not Dave yep</font>

709
00:25:16,279 --> 00:25:20,340
so<font color="#E5E5E5"> this is just just an example</font><font color="#CCCCCC"> come</font>

710
00:25:19,019 --> 00:25:22,080
<font color="#CCCCCC">it's very similar</font><font color="#E5E5E5"> to the one that</font><font color="#CCCCCC"> we</font>

711
00:25:20,340 --> 00:25:24,000
just posted<font color="#CCCCCC"> on</font><font color="#E5E5E5"> the previous slide</font>

712
00:25:22,080 --> 00:25:25,230
<font color="#E5E5E5">showing</font><font color="#CCCCCC"> that there's a common script</font>

713
00:25:24,000 --> 00:25:26,880
<font color="#E5E5E5">with hosts on the internet that's just</font>

714
00:25:25,230 --> 00:25:28,679
<font color="#E5E5E5">going to start calc</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> this can be</font>

715
00:25:26,880 --> 00:25:31,590
<font color="#E5E5E5">anything and then we've got the</font><font color="#CCCCCC"> treat at</font>

716
00:25:28,679 --> 00:25:34,309
ski that proxies the<font color="#E5E5E5"> original</font><font color="#CCCCCC"> object to</font>

717
00:25:31,590 --> 00:25:39,480
our<font color="#CCCCCC"> object so we just import that guy</font>

718
00:25:34,309 --> 00:25:41,220
user logs off when<font color="#CCCCCC"> he logs back on</font><font color="#E5E5E5"> these</font>

719
00:25:39,480 --> 00:25:43,289
keys are these class IDs can be found

720
00:25:41,220 --> 00:25:44,940
using<font color="#E5E5E5"> proc Mon so you can set proc</font><font color="#CCCCCC"> montz</font>

721
00:25:43,289 --> 00:25:47,220
you start on boot and then you can

722
00:25:44,940 --> 00:25:50,130
filter<font color="#CCCCCC"> down all of</font><font color="#E5E5E5"> the objects that are</font>

723
00:25:47,220 --> 00:25:52,289
loaded<font color="#E5E5E5"> when a user logs in right so you</font>

724
00:25:50,130 --> 00:25:55,320
hijack that<font color="#E5E5E5"> one any of there are there</font>

725
00:25:52,289 --> 00:25:57,480
<font color="#E5E5E5">are hundreds that you can use so user</font>

726
00:25:55,320 --> 00:25:59,490
logs back on<font color="#CCCCCC"> an explorer is going to</font>

727
00:25:57,480 --> 00:26:00,630
<font color="#E5E5E5">enumerate instantiate</font><font color="#CCCCCC"> that object</font><font color="#E5E5E5"> and</font>

728
00:25:59,490 --> 00:26:02,669
then it's going<font color="#E5E5E5"> to run our comm script</font>

729
00:26:00,630 --> 00:26:04,049
<font color="#E5E5E5">live from the internet so the only</font>

730
00:26:02,669 --> 00:26:06,630
really things<font color="#E5E5E5"> that are being changed</font>

731
00:26:04,049 --> 00:26:08,429
here are the the registry<font color="#E5E5E5"> backed object</font>

732
00:26:06,630 --> 00:26:09,990
that we created<font color="#CCCCCC"> right so we're not</font>

733
00:26:08,429 --> 00:26:12,120
<font color="#E5E5E5">dropping a binary we don't have to worry</font>

734
00:26:09,990 --> 00:26:13,950
<font color="#E5E5E5">about you know out white listening can</font>

735
00:26:12,120 --> 00:26:14,879
is our<font color="#CCCCCC"> DLL it's you're gonna be block</font>

736
00:26:13,950 --> 00:26:16,559
stuff like that

737
00:26:14,880 --> 00:26:18,799
we're just executing it you know<font color="#E5E5E5"> from</font>

738
00:26:16,559 --> 00:26:18,799
the<font color="#E5E5E5"> internet</font>

739
00:26:20,480 --> 00:26:26,970
yep<font color="#E5E5E5"> so sir</font><font color="#CCCCCC"> util hijacking this is kind</font>

740
00:26:25,170 --> 00:26:30,210
of<font color="#E5E5E5"> very similar so the idea of hijacking</font>

741
00:26:26,970 --> 00:26:32,310
<font color="#E5E5E5">an object that a by process uses and you</font>

742
00:26:30,210 --> 00:26:34,530
can use that a for persistent or B for

743
00:26:32,310 --> 00:26:36,600
<font color="#E5E5E5">evading</font><font color="#CCCCCC"> command line logging or things</font>

744
00:26:34,530 --> 00:26:38,790
of<font color="#E5E5E5"> that nature right so when a process</font>

745
00:26:36,600 --> 00:26:40,740
starts most most processes or most

746
00:26:38,790 --> 00:26:42,330
binaries use<font color="#E5E5E5"> comments on manner</font><font color="#CCCCCC"> comm is</font>

747
00:26:40,740 --> 00:26:44,880
embedded in the<font color="#E5E5E5"> operating system so</font>

748
00:26:42,330 --> 00:26:46,500
<font color="#CCCCCC">certainly you till when you start sorry</font>

749
00:26:44,880 --> 00:26:49,200
<font color="#CCCCCC">till for anything you do it's going</font><font color="#E5E5E5"> to</font>

750
00:26:46,500 --> 00:26:50,850
<font color="#E5E5E5">query that class ID</font><font color="#CCCCCC"> it's going to</font>

751
00:26:49,200 --> 00:26:53,340
instantiate an object<font color="#E5E5E5"> that it needs</font><font color="#CCCCCC"> to</font>

752
00:26:50,850 --> 00:26:56,340
<font color="#CCCCCC">use for</font><font color="#E5E5E5"> something and if we had a treat</font>

753
00:26:53,340 --> 00:26:58,470
as for<font color="#E5E5E5"> that ID to point to ours anytime</font>

754
00:26:56,340 --> 00:27:00,300
you start cert<font color="#CCCCCC"> util it's going to load</font>

755
00:26:58,470 --> 00:27:01,890
our code instead so you're kind<font color="#CCCCCC"> of</font>

756
00:27:00,300 --> 00:27:04,050
<font color="#E5E5E5">seeing the implications</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> treat</font><font color="#CCCCCC"> as and</font>

757
00:27:01,890 --> 00:27:05,670
how it there's a lot<font color="#E5E5E5"> of</font><font color="#CCCCCC"> room for some</font>

758
00:27:04,050 --> 00:27:09,210
serious abuse<font color="#CCCCCC"> you</font><font color="#E5E5E5"> know as far</font><font color="#CCCCCC"> as that</font>

759
00:27:05,670 --> 00:27:11,520
goes<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's actually happening</font>

760
00:27:09,210 --> 00:27:13,830
so<font color="#CCCCCC"> when KC and I put stuff out we're</font>

761
00:27:11,520 --> 00:27:15,120
like<font color="#E5E5E5"> gasps</font><font color="#CCCCCC"> is cool it takes you know</font>

762
00:27:13,830 --> 00:27:17,250
sometimes it<font color="#CCCCCC"> takes a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> for</font>

763
00:27:15,120 --> 00:27:20,610
people<font color="#E5E5E5"> to decode or really obscure</font>

764
00:27:17,250 --> 00:27:23,760
tweets<font color="#CCCCCC"> apt 28</font><font color="#E5E5E5"> come</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> pretty quick</font>

765
00:27:20,610 --> 00:27:26,729
<font color="#CCCCCC">there's a document were they you know</font>

766
00:27:23,760 --> 00:27:28,440
targeted InfoSec folks pretty<font color="#E5E5E5"> recently</font>

767
00:27:26,730 --> 00:27:30,000
and they were persisting using<font color="#E5E5E5"> convict</font>

768
00:27:28,440 --> 00:27:32,280
hijacking which is kind of neat to<font color="#CCCCCC"> see</font>

769
00:27:30,000 --> 00:27:34,680
I'd also freaks me out just<font color="#E5E5E5"> a tiny bit</font>

770
00:27:32,280 --> 00:27:36,450
<font color="#E5E5E5">but I try</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> to think about it</font><font color="#CCCCCC"> so it's</font>

771
00:27:34,680 --> 00:27:38,430
being used so it's definitely<font color="#E5E5E5"> something</font>

772
00:27:36,450 --> 00:27:46,020
<font color="#CCCCCC">that defenders you should be looking for</font>

773
00:27:38,430 --> 00:27:47,760
or at least thinking about we<font color="#E5E5E5"> don't</font>

774
00:27:46,020 --> 00:27:49,590
<font color="#E5E5E5">think we're the first ones to ever find</font>

775
00:27:47,760 --> 00:27:51,150
something we just<font color="#E5E5E5"> like to bring it to</font>

776
00:27:49,590 --> 00:27:52,800
light some defenders have a chance to

777
00:27:51,150 --> 00:27:54,660
see it being<font color="#CCCCCC"> used by other actors</font><font color="#E5E5E5"> for</font>

778
00:27:52,800 --> 00:27:57,180
sure yeah<font color="#E5E5E5"> there are people</font><font color="#CCCCCC"> out there</font><font color="#E5E5E5"> and</font>

779
00:27:54,660 --> 00:27:59,010
people<font color="#CCCCCC"> that are using</font><font color="#E5E5E5"> this stuff they</font>

780
00:27:57,180 --> 00:28:00,840
<font color="#CCCCCC">don't talk at security conferences so at</font>

781
00:27:59,010 --> 00:28:03,180
least exposing that<font color="#E5E5E5"> so defenders have an</font>

782
00:28:00,840 --> 00:28:07,290
eye on it<font color="#CCCCCC"> you know this is kind of our</font>

783
00:28:03,180 --> 00:28:08,760
site or<font color="#CCCCCC"> our insight onto it so so kind</font>

784
00:28:07,290 --> 00:28:10,860
of moving<font color="#CCCCCC"> on from persistence we're</font>

785
00:28:08,760 --> 00:28:12,570
gonna jump<font color="#E5E5E5"> into evasion this is going to</font>

786
00:28:10,860 --> 00:28:15,780
be around<font color="#CCCCCC"> out</font><font color="#E5E5E5"> whitelisting command line</font>

787
00:28:12,570 --> 00:28:17,370
logging<font color="#CCCCCC"> I started to see environments</font>

788
00:28:15,780 --> 00:28:19,860
<font color="#E5E5E5">that implement command line logging a</font>

789
00:28:17,370 --> 00:28:21,810
lot<font color="#CCCCCC"> and it freaks me out a lot as an</font>

790
00:28:19,860 --> 00:28:23,280
attacker<font color="#E5E5E5"> because almost everything you</font>

791
00:28:21,810 --> 00:28:26,940
do is down the command<font color="#E5E5E5"> line or it has</font>

792
00:28:23,280 --> 00:28:28,080
previously<font color="#E5E5E5"> so evading all of that you</font>

793
00:28:26,940 --> 00:28:29,760
<font color="#E5E5E5">know obviously</font><font color="#CCCCCC"> it's a risk reward</font>

794
00:28:28,080 --> 00:28:31,530
trade-off of<font color="#E5E5E5"> you're making changes</font><font color="#CCCCCC"> or</font>

795
00:28:29,760 --> 00:28:32,540
you're doing<font color="#E5E5E5"> hijacks to evade that</font>

796
00:28:31,530 --> 00:28:34,340
<font color="#E5E5E5">command line logging</font>

797
00:28:32,540 --> 00:28:35,840
<font color="#CCCCCC">I mean you're putting</font><font color="#E5E5E5"> yourself as an</font>

798
00:28:34,340 --> 00:28:39,320
<font color="#E5E5E5">attack current in kind of a unique spot</font>

799
00:28:35,840 --> 00:28:42,830
<font color="#E5E5E5">so basically we can hijack a comma</font>

800
00:28:39,320 --> 00:28:44,389
objects to load our code<font color="#CCCCCC"> you know when</font>

801
00:28:42,830 --> 00:28:46,429
something happens on the host<font color="#E5E5E5"> so the</font>

802
00:28:44,390 --> 00:28:48,770
persistence techniques that we showed we

803
00:28:46,430 --> 00:28:50,510
added<font color="#E5E5E5"> a a comm hijacked</font><font color="#CCCCCC"> for cert util or</font>

804
00:28:48,770 --> 00:28:53,330
we added a comma hijack for a class ID

805
00:28:50,510 --> 00:28:54,410
<font color="#E5E5E5">Explorer uses when that happens there's</font>

806
00:28:53,330 --> 00:28:56,659
<font color="#CCCCCC">nothing on the command line that's</font>

807
00:28:54,410 --> 00:28:58,850
showing hey this process started<font color="#CCCCCC"> with</font>

808
00:28:56,660 --> 00:29:00,440
<font color="#E5E5E5">these parameters</font><font color="#CCCCCC"> that loaded code the</font>

809
00:28:58,850 --> 00:29:02,870
operating system system is<font color="#CCCCCC"> just</font>

810
00:29:00,440 --> 00:29:05,960
ingesting that<font color="#CCCCCC"> column object and due to</font>

811
00:29:02,870 --> 00:29:07,729
how resolution<font color="#CCCCCC"> in the OS works</font><font color="#E5E5E5"> it's</font>

812
00:29:05,960 --> 00:29:11,510
loading the<font color="#E5E5E5"> code for us</font><font color="#CCCCCC"> without exposing</font>

813
00:29:07,730 --> 00:29:13,340
any of that<font color="#E5E5E5"> code to the command line so</font>

814
00:29:11,510 --> 00:29:15,920
here's a good example this this<font color="#E5E5E5"> doesn't</font>

815
00:29:13,340 --> 00:29:17,360
<font color="#E5E5E5">really fall into command line evasion</font>

816
00:29:15,920 --> 00:29:20,440
per<font color="#CCCCCC"> say it was</font><font color="#E5E5E5"> just a really really</font>

817
00:29:17,360 --> 00:29:23,570
<font color="#E5E5E5">funny thing that even now coding is hard</font>

818
00:29:20,440 --> 00:29:26,270
<font color="#CCCCCC">so who's seeing the the puppy are in VBS</font>

819
00:29:23,570 --> 00:29:27,740
command injection bug<font color="#E5E5E5"> actors for</font>

820
00:29:26,270 --> 00:29:29,210
whatever reason I<font color="#E5E5E5"> don't think</font><font color="#CCCCCC"> you get</font>

821
00:29:27,740 --> 00:29:31,370
<font color="#E5E5E5">much out</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> this because that's expose</font>

822
00:29:29,210 --> 00:29:33,530
on the command line<font color="#E5E5E5"> but attackers are</font>

823
00:29:31,370 --> 00:29:36,379
using<font color="#E5E5E5"> this non-stop now for some reason</font>

824
00:29:33,530 --> 00:29:39,230
I'm so basically what happens here<font color="#CCCCCC"> you</font>

825
00:29:36,380 --> 00:29:41,450
can see here<font color="#E5E5E5"> that we have this</font><font color="#CCCCCC"> Microsoft</font>

826
00:29:39,230 --> 00:29:43,790
<font color="#CCCCCC">signed script</font><font color="#E5E5E5"> that exists on you know</font>

827
00:29:41,450 --> 00:29:46,760
Windows 7 Windows 10 or passing it a

828
00:29:43,790 --> 00:29:48,350
first parameter<font color="#E5E5E5"> of an IP address the</font>

829
00:29:46,760 --> 00:29:50,360
script is designed to help<font color="#E5E5E5"> publish</font>

830
00:29:48,350 --> 00:29:52,070
printers in a domain and then we're

831
00:29:50,360 --> 00:29:53,990
passing<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the script moniker with a</font>

832
00:29:52,070 --> 00:29:55,610
<font color="#E5E5E5">comm scriptlet to the internet which</font><font color="#CCCCCC"> is</font>

833
00:29:53,990 --> 00:29:57,740
a little weird<font color="#CCCCCC"> and</font><font color="#E5E5E5"> calc pops and you</font>

834
00:29:55,610 --> 00:30:00,379
<font color="#CCCCCC">know</font><font color="#E5E5E5"> everything is hunky-dory for the</font>

835
00:29:57,740 --> 00:30:03,230
attacker<font color="#CCCCCC"> I think on the next</font><font color="#E5E5E5"> slide we've</font>

836
00:30:00,380 --> 00:30:04,670
got<font color="#E5E5E5"> yeah so this is an example this</font><font color="#CCCCCC"> is</font>

837
00:30:03,230 --> 00:30:07,550
actually<font color="#E5E5E5"> put out not too</font><font color="#CCCCCC"> long ago maybe</font>

838
00:30:04,670 --> 00:30:10,370
<font color="#CCCCCC">a week ago of an actor</font><font color="#E5E5E5"> actually using</font>

839
00:30:07,550 --> 00:30:11,960
this technique<font color="#CCCCCC"> only instead</font><font color="#E5E5E5"> of running</font>

840
00:30:10,370 --> 00:30:14,570
it<font color="#E5E5E5"> out of the existing directory they</font>

841
00:30:11,960 --> 00:30:16,700
copied<font color="#E5E5E5"> it</font><font color="#CCCCCC"> to another directory</font><font color="#E5E5E5"> they</font>

842
00:30:14,570 --> 00:30:22,040
copied<font color="#E5E5E5"> see scratch is</font><font color="#CCCCCC"> either C</font><font color="#E5E5E5"> script or</font>

843
00:30:16,700 --> 00:30:24,650
W scripts<font color="#CCCCCC"> to broken data</font><font color="#E5E5E5"> call the exe</font>

844
00:30:22,040 --> 00:30:27,830
and<font color="#E5E5E5"> this is where like during Dave's</font>

845
00:30:24,650 --> 00:30:29,840
talk like that<font color="#CCCCCC"> why I don't understand</font>

846
00:30:27,830 --> 00:30:31,129
<font color="#E5E5E5">moving binaries around a binaries</font>

847
00:30:29,840 --> 00:30:32,889
running out of weird locations why is

848
00:30:31,130 --> 00:30:35,120
yang<font color="#CCCCCC"> DXi running out of</font><font color="#E5E5E5"> program data</font>

849
00:30:32,890 --> 00:30:37,610
<font color="#CCCCCC">probably not a</font><font color="#E5E5E5"> super great thing that</font>

850
00:30:35,120 --> 00:30:39,199
<font color="#CCCCCC">binary is signed</font><font color="#E5E5E5"> but you know obviously</font>

851
00:30:37,610 --> 00:30:41,179
<font color="#CCCCCC">the scripting interpreter running out of</font>

852
00:30:39,200 --> 00:30:43,940
a non-standard locations are pretty big

853
00:30:41,180 --> 00:30:44,960
hint they move it over<font color="#E5E5E5"> and then they run</font>

854
00:30:43,940 --> 00:30:47,540
yang that<font color="#CCCCCC"> Exe</font>

855
00:30:44,960 --> 00:30:50,960
and then they pass it<font color="#CCCCCC"> yang txt so yen</font>

856
00:30:47,540 --> 00:30:53,360
got<font color="#CCCCCC"> Exe SW script</font><font color="#E5E5E5"> yang got txt is the</font>

857
00:30:50,960 --> 00:30:55,040
pub PR in script<font color="#E5E5E5"> and you can see that</font>

858
00:30:53,360 --> 00:30:57,560
<font color="#CCCCCC">they're passed passing</font><font color="#E5E5E5"> local host is the</font>

859
00:30:55,040 --> 00:30:59,960
first parameter and then<font color="#CCCCCC"> a really really</font>

860
00:30:57,560 --> 00:31:01,550
ugly<font color="#E5E5E5"> and very noticeable off you skated</font>

861
00:30:59,960 --> 00:31:03,560
script moniker with a<font color="#CCCCCC"> comp script with</font>

862
00:31:01,550 --> 00:31:04,909
hosts on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> internet</font><font color="#E5E5E5"> that's group</font><font color="#CCCCCC"> wait</font>

863
00:31:03,560 --> 00:31:07,730
<font color="#E5E5E5">still up on that IP if you want to go</font>

864
00:31:04,910 --> 00:31:09,620
look<font color="#E5E5E5"> at it and</font><font color="#CCCCCC"> there's there's the ghost</font>

865
00:31:07,730 --> 00:31:11,600
<font color="#E5E5E5">bin at the bottom that</font><font color="#CCCCCC"> has</font><font color="#E5E5E5"> John Lambert</font>

866
00:31:09,620 --> 00:31:15,679
did a good analysis on on this

867
00:31:11,600 --> 00:31:17,750
<font color="#E5E5E5">specifically so how does this work this</font>

868
00:31:15,680 --> 00:31:20,540
is<font color="#E5E5E5"> the code underneath that that causes</font>

869
00:31:17,750 --> 00:31:22,280
<font color="#CCCCCC">that code you get executed this group</font>

870
00:31:20,540 --> 00:31:25,340
takes<font color="#E5E5E5"> two arguments server name a</font>

871
00:31:22,280 --> 00:31:26,990
container and<font color="#E5E5E5"> then it</font><font color="#CCCCCC"> passes a second</font>

872
00:31:25,340 --> 00:31:28,610
argument to get object we talked<font color="#E5E5E5"> about</font>

873
00:31:26,990 --> 00:31:30,140
get object earlier we talked<font color="#CCCCCC"> about</font><font color="#E5E5E5"> how</font>

874
00:31:28,610 --> 00:31:32,629
<font color="#E5E5E5">dangerous get object and create object</font>

875
00:31:30,140 --> 00:31:34,370
<font color="#CCCCCC">are with monikers</font><font color="#E5E5E5"> so it's taking</font>

876
00:31:32,630 --> 00:31:36,710
something a user supplies and then

877
00:31:34,370 --> 00:31:38,239
calling get object on it which more or

878
00:31:36,710 --> 00:31:41,360
less gives you arbitrary<font color="#E5E5E5"> commode</font>

879
00:31:38,240 --> 00:31:43,400
code execution if you<font color="#E5E5E5"> combined a moniker</font>

880
00:31:41,360 --> 00:31:44,840
with with an actual<font color="#CCCCCC"> comma scriptlet this</font>

881
00:31:43,400 --> 00:31:47,060
isn't the<font color="#E5E5E5"> only one that exists in</font>

882
00:31:44,840 --> 00:31:49,520
<font color="#CCCCCC">Windows</font><font color="#E5E5E5"> I encourage you to go hunting</font>

883
00:31:47,060 --> 00:31:51,590
you know vbscript and jscript people

884
00:31:49,520 --> 00:31:53,570
aren't and really auditing as much as

885
00:31:51,590 --> 00:31:55,939
they are<font color="#E5E5E5"> as far as</font><font color="#CCCCCC"> powershell goes you</font>

886
00:31:53,570 --> 00:31:58,550
know for for command injection<font color="#CCCCCC"> race</font>

887
00:31:55,940 --> 00:32:01,130
conditions stuff like that<font color="#CCCCCC"> so it's kind</font>

888
00:31:58,550 --> 00:32:04,629
of<font color="#E5E5E5"> a unique kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> a you know class of</font>

889
00:32:01,130 --> 00:32:04,630
abuse<font color="#CCCCCC"> I would say</font>

890
00:32:05,560 --> 00:32:10,300
so dipping<font color="#E5E5E5"> in the evading command-line</font>

891
00:32:08,650 --> 00:32:13,540
logging so we talked about hijacking

892
00:32:10,300 --> 00:32:15,159
<font color="#E5E5E5">comm objects and as an attacker you can</font>

893
00:32:13,540 --> 00:32:16,780
do things<font color="#E5E5E5"> on the operating system</font><font color="#CCCCCC"> that</font>

894
00:32:15,160 --> 00:32:17,950
<font color="#E5E5E5">would that would result in an object</font>

895
00:32:16,780 --> 00:32:20,350
<font color="#E5E5E5">being loaded that can be starting a</font>

896
00:32:17,950 --> 00:32:23,500
process<font color="#E5E5E5"> that can</font><font color="#CCCCCC"> be you know</font><font color="#E5E5E5"> opening a</font>

897
00:32:20,350 --> 00:32:25,209
folder anything you really<font color="#E5E5E5"> do obviously</font>

898
00:32:23,500 --> 00:32:26,560
<font color="#E5E5E5">comm is</font><font color="#CCCCCC"> so integrated in a</font><font color="#E5E5E5"> window is</font>

899
00:32:25,210 --> 00:32:28,260
<font color="#E5E5E5">almost everything you do is going</font><font color="#CCCCCC"> to</font>

900
00:32:26,560 --> 00:32:32,260
invoke<font color="#CCCCCC"> some sort of object</font><font color="#E5E5E5"> at some point</font>

901
00:32:28,260 --> 00:32:33,640
so there's<font color="#E5E5E5"> this class example scripting</font>

902
00:32:32,260 --> 00:32:35,800
<font color="#CCCCCC">that dictionary so you're registered</font>

903
00:32:33,640 --> 00:32:38,080
existing<font color="#CCCCCC"> college echt if you want to</font>

904
00:32:35,800 --> 00:32:40,780
evade<font color="#E5E5E5"> command line logging all you</font>

905
00:32:38,080 --> 00:32:42,550
<font color="#CCCCCC">really need</font><font color="#E5E5E5"> to do is hijack that object</font>

906
00:32:40,780 --> 00:32:44,530
<font color="#E5E5E5">you</font><font color="#CCCCCC"> create your own scripting that</font>

907
00:32:42,550 --> 00:32:46,629
<font color="#CCCCCC">dictionary</font><font color="#E5E5E5"> and instead</font><font color="#CCCCCC"> of giving it the</font>

908
00:32:44,530 --> 00:32:49,840
actual comm server it's expecting<font color="#E5E5E5"> give</font>

909
00:32:46,630 --> 00:32:51,910
it you<font color="#E5E5E5"> know the script what URL combined</font>

910
00:32:49,840 --> 00:32:53,439
<font color="#E5E5E5">with the</font><font color="#CCCCCC"> scrubbie GDL comm server and</font>

911
00:32:51,910 --> 00:32:56,010
you now<font color="#CCCCCC"> are when that</font><font color="#E5E5E5"> objects</font>

912
00:32:53,440 --> 00:32:58,780
instantiated you now have code execution

913
00:32:56,010 --> 00:33:00,250
<font color="#CCCCCC">when from a forensics or from a</font>

914
00:32:58,780 --> 00:33:01,570
defensive perspective these<font color="#E5E5E5"> are the</font>

915
00:33:00,250 --> 00:33:03,250
things that<font color="#E5E5E5"> are changed in the registry</font>

916
00:33:01,570 --> 00:33:05,139
<font color="#CCCCCC">but according</font><font color="#E5E5E5"> to the operating system</font>

917
00:33:03,250 --> 00:33:06,790
it's just instantiating<font color="#E5E5E5"> the object like</font>

918
00:33:05,140 --> 00:33:08,500
it's supposed to<font color="#E5E5E5"> API calls your API</font>

919
00:33:06,790 --> 00:33:10,600
calls<font color="#CCCCCC"> it's gonna do at resolution it's</font>

920
00:33:08,500 --> 00:33:12,910
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> load the code up for you and when</font>

921
00:33:10,600 --> 00:33:14,320
<font color="#E5E5E5">that happens there's nothing that's</font>

922
00:33:12,910 --> 00:33:15,970
going<font color="#CCCCCC"> to be exposed on</font><font color="#E5E5E5"> the command line</font>

923
00:33:14,320 --> 00:33:18,429
other than<font color="#E5E5E5"> how did you instantiate</font>

924
00:33:15,970 --> 00:33:20,230
scripting<font color="#CCCCCC"> that dictionary you know maybe</font>

925
00:33:18,430 --> 00:33:22,540
you could<font color="#E5E5E5"> open there are so puppy</font><font color="#CCCCCC"> aren't</font>

926
00:33:20,230 --> 00:33:25,540
<font color="#E5E5E5">VBS when you're on it it instantiates</font>

927
00:33:22,540 --> 00:33:27,129
that object for you automatically<font color="#CCCCCC"> so you</font>

928
00:33:25,540 --> 00:33:28,870
can get<font color="#CCCCCC"> really</font><font color="#E5E5E5"> creative with what you do</font>

929
00:33:27,130 --> 00:33:30,250
<font color="#CCCCCC">to instantiate an object and then with</font>

930
00:33:28,870 --> 00:33:32,560
one of those<font color="#E5E5E5"> height which one</font><font color="#CCCCCC"> of those</font>

931
00:33:30,250 --> 00:33:34,750
objects you hijacked<font color="#E5E5E5"> to to get your code</font>

932
00:33:32,560 --> 00:33:38,710
to<font color="#CCCCCC"> execute with how actually</font><font color="#E5E5E5"> you know</font>

933
00:33:34,750 --> 00:33:41,110
tipping the command line logging so

934
00:33:38,710 --> 00:33:43,390
before before we<font color="#E5E5E5"> get into you know kind</font>

935
00:33:41,110 --> 00:33:44,919
<font color="#CCCCCC">of a deep example</font><font color="#E5E5E5"> we talked about dotnet</font>

936
00:33:43,390 --> 00:33:46,480
<font color="#CCCCCC">to jscript and you're saying you can't</font>

937
00:33:44,920 --> 00:33:48,490
run comm<font color="#E5E5E5"> scripts from the internet</font>

938
00:33:46,480 --> 00:33:49,630
that's awesome how does that<font color="#CCCCCC"> really</font><font color="#E5E5E5"> help</font>

939
00:33:48,490 --> 00:33:52,300
you since vbscript and jscript

940
00:33:49,630 --> 00:33:54,190
historically you could only instigate

941
00:33:52,300 --> 00:33:56,470
<font color="#E5E5E5">comma objects</font><font color="#CCCCCC"> we're done at the</font><font color="#E5E5E5"> J script</font>

942
00:33:54,190 --> 00:33:58,090
<font color="#E5E5E5">you can essentially run shell</font><font color="#CCCCCC"> code and</font>

943
00:33:56,470 --> 00:33:59,980
VB script or J script so when we're

944
00:33:58,090 --> 00:34:02,350
running<font color="#E5E5E5"> these calm scripts from the</font>

945
00:33:59,980 --> 00:34:04,060
internet through hijacks<font color="#E5E5E5"> or persistence</font>

946
00:34:02,350 --> 00:34:07,360
or stuff like<font color="#CCCCCC"> that</font>

947
00:34:04,060 --> 00:34:09,130
that's shell code execution<font color="#E5E5E5"> from the</font>

948
00:34:07,360 --> 00:34:10,600
internet without<font color="#CCCCCC"> having to put a file</font>

949
00:34:09,130 --> 00:34:12,490
down without<font color="#CCCCCC"> having to do any weird</font>

950
00:34:10,600 --> 00:34:15,730
injection without having to to do any<font color="#E5E5E5"> of</font>

951
00:34:12,489 --> 00:34:17,649
this crazy<font color="#CCCCCC"> stuff due to</font><font color="#E5E5E5"> you know four</font>

952
00:34:15,730 --> 00:34:18,139
<font color="#E5E5E5">stalls work and how</font><font color="#CCCCCC"> its kind of expanded</font>

953
00:34:17,649 --> 00:34:21,049
how we

954
00:34:18,139 --> 00:34:27,679
<font color="#CCCCCC">jscript and BBS script operationally</font><font color="#E5E5E5"> so</font>

955
00:34:21,049 --> 00:34:29,329
<font color="#E5E5E5">boy okay perfect</font><font color="#CCCCCC"> so give</font><font color="#E5E5E5"> me back</font><font color="#CCCCCC"> to</font>

956
00:34:27,679 --> 00:34:31,069
<font color="#E5E5E5">scripting that dictionary</font><font color="#CCCCCC"> obviously if</font>

957
00:34:29,329 --> 00:34:32,629
<font color="#CCCCCC">you're</font><font color="#E5E5E5"> hijacked that objects anything</font>

958
00:34:31,069 --> 00:34:35,029
that<font color="#CCCCCC"> uses that object is gonna</font><font color="#E5E5E5"> break</font>

959
00:34:32,629 --> 00:34:37,819
right<font color="#E5E5E5"> because you are hijacking</font><font color="#CCCCCC"> its</font>

960
00:34:35,029 --> 00:34:39,139
<font color="#E5E5E5">functionality to use your logic instead</font>

961
00:34:37,819 --> 00:34:41,239
<font color="#E5E5E5">of what it was</font><font color="#CCCCCC"> designed to do</font>

962
00:34:39,139 --> 00:34:42,859
<font color="#CCCCCC">KC figured out that you could</font><font color="#E5E5E5"> just</font>

963
00:34:41,239 --> 00:34:44,179
re-implement<font color="#E5E5E5"> in your militias comm</font>

964
00:34:42,859 --> 00:34:46,578
script with the<font color="#E5E5E5"> methods that that object</font>

965
00:34:44,179 --> 00:34:47,809
expects which are<font color="#E5E5E5"> documented if they're</font>

966
00:34:46,579 --> 00:34:49,909
not documenting<font color="#E5E5E5"> you can go and reverse</font>

967
00:34:47,809 --> 00:34:51,139
the comm server if you like drinking a

968
00:34:49,909 --> 00:34:55,129
lot<font color="#E5E5E5"> of alcohol</font><font color="#CCCCCC"> and a short amount</font><font color="#E5E5E5"> of</font>

969
00:34:51,139 --> 00:34:56,480
time so<font color="#CCCCCC"> these methods</font><font color="#E5E5E5"> are exposed for</font>

970
00:34:55,129 --> 00:34:57,859
<font color="#E5E5E5">scripting</font><font color="#CCCCCC"> a dictionary and</font><font color="#E5E5E5"> they're in</font>

971
00:34:56,480 --> 00:35:01,369
the comm script<font color="#CCCCCC"> you can just implement</font>

972
00:34:57,859 --> 00:35:03,259
them<font color="#E5E5E5"> and functionality or return you</font>

973
00:35:01,369 --> 00:35:05,029
know after your code<font color="#E5E5E5"> executes the</font>

974
00:35:03,259 --> 00:35:06,559
<font color="#E5E5E5">scripting that dictionary</font><font color="#CCCCCC"> methods and</font>

975
00:35:05,029 --> 00:35:08,180
properties will so be<font color="#E5E5E5"> available for the</font>

976
00:35:06,559 --> 00:35:15,140
operating<font color="#E5E5E5"> system</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> use which is kind of</font>

977
00:35:08,180 --> 00:35:18,259
neat cool<font color="#E5E5E5"> so this is just an</font><font color="#CCCCCC"> example of</font>

978
00:35:15,140 --> 00:35:19,190
a Microsoft<font color="#E5E5E5"> sign script that when you</font>

979
00:35:18,259 --> 00:35:20,900
run the script

980
00:35:19,190 --> 00:35:22,759
it calls<font color="#E5E5E5"> create object on scripting that</font>

981
00:35:20,900 --> 00:35:25,039
<font color="#E5E5E5">dictionary so we just should hike how</font>

982
00:35:22,759 --> 00:35:26,329
you<font color="#CCCCCC"> could hijack</font><font color="#E5E5E5"> that object this is how</font>

983
00:35:25,039 --> 00:35:27,349
you would instantiate<font color="#CCCCCC"> that object this</font>

984
00:35:26,329 --> 00:35:29,239
<font color="#CCCCCC">is one</font><font color="#E5E5E5"> example of how you would</font>

985
00:35:27,349 --> 00:35:30,650
instantiate<font color="#CCCCCC"> that object</font><font color="#E5E5E5"> just run the</font>

986
00:35:29,239 --> 00:35:33,049
script and your codes automatically

987
00:35:30,650 --> 00:35:35,749
loaded<font color="#E5E5E5"> due to how you know</font><font color="#CCCCCC"> Comoros the</font>

988
00:35:33,049 --> 00:35:40,160
resolution works<font color="#E5E5E5"> when it hits the script</font>

989
00:35:35,749 --> 00:35:42,140
in<font color="#E5E5E5"> that dictionary prog addy and this is</font>

990
00:35:40,160 --> 00:35:44,899
what it looks like<font color="#CCCCCC"> so nothing crazy on</font>

991
00:35:42,140 --> 00:35:48,259
the command line there's no<font color="#E5E5E5"> script : you</font>

992
00:35:44,900 --> 00:35:51,170
know<font color="#E5E5E5"> lol</font><font color="#CCCCCC"> dot are</font><font color="#E5E5E5"> you / calm that's</font><font color="#CCCCCC"> SCT</font>

993
00:35:48,259 --> 00:35:52,999
<font color="#E5E5E5">it's just it's running and your payload</font>

994
00:35:51,170 --> 00:35:54,410
runs and functionality or he turns back

995
00:35:52,999 --> 00:35:55,788
<font color="#E5E5E5">to how it should and everything's</font>

996
00:35:54,410 --> 00:35:59,140
hunky-dory according to the operating

997
00:35:55,789 --> 00:36:01,509
<font color="#CCCCCC">system</font><font color="#E5E5E5"> so just kind of a fun</font><font color="#CCCCCC"> little tip</font>

998
00:35:59,140 --> 00:36:03,769
and you can deal with<font color="#E5E5E5"> almost everything</font>

999
00:36:01,509 --> 00:36:06,259
<font color="#E5E5E5">obviously that uses comm so this is just</font>

1000
00:36:03,769 --> 00:36:07,970
an another script for configuring<font color="#CCCCCC"> 1rm</font>

1001
00:36:06,259 --> 00:36:11,119
<font color="#E5E5E5">that uses the same scripting</font><font color="#CCCCCC"> that</font>

1002
00:36:07,970 --> 00:36:13,609
<font color="#E5E5E5">dictionary object we hijacked</font><font color="#CCCCCC"> same</font>

1003
00:36:11,119 --> 00:36:15,109
result<font color="#E5E5E5"> if it gets instantiated your</font>

1004
00:36:13,609 --> 00:36:17,569
codes<font color="#E5E5E5"> gonna get</font><font color="#CCCCCC"> loaded it doesn't matter</font>

1005
00:36:15,109 --> 00:36:20,529
you<font color="#E5E5E5"> know</font><font color="#CCCCCC"> how you instantiate it as long</font>

1006
00:36:17,569 --> 00:36:20,529
as it gets<font color="#E5E5E5"> instantiated</font>

1007
00:36:21,140 --> 00:36:25,310
so<font color="#CCCCCC"> a</font><font color="#E5E5E5"> little side note a</font><font color="#CCCCCC"> msi</font><font color="#E5E5E5"> this is</font>

1008
00:36:24,230 --> 00:36:26,930
actually<font color="#CCCCCC"> I reported this to Mike</font>

1009
00:36:25,310 --> 00:36:28,670
yourself this actually got fixed<font color="#E5E5E5"> in an</font>

1010
00:36:26,930 --> 00:36:30,950
insider preview build which will be

1011
00:36:28,670 --> 00:36:33,650
pushed out<font color="#CCCCCC"> you know sometime in the near</font>

1012
00:36:30,950 --> 00:36:36,410
future<font color="#CCCCCC"> now this is using comm hijacking</font>

1013
00:36:33,650 --> 00:36:38,990
to disrupt the anti-malware scan

1014
00:36:36,410 --> 00:36:40,850
interphase which<font color="#CCCCCC"> is responsible for</font><font color="#E5E5E5"> as</font>

1015
00:36:38,990 --> 00:36:42,859
Dave mentioned in<font color="#CCCCCC"> his talk this morning</font>

1016
00:36:40,850 --> 00:36:44,330
<font color="#E5E5E5">it is something that Microsoft spent a</font>

1017
00:36:42,860 --> 00:36:46,970
lot of time<font color="#E5E5E5"> implementing to kind of</font>

1018
00:36:44,330 --> 00:36:48,680
<font color="#E5E5E5">safeguard or</font><font color="#CCCCCC"> add an additional layer of</font>

1019
00:36:46,970 --> 00:36:51,200
protection<font color="#E5E5E5"> as far as PowerShell and</font>

1020
00:36:48,680 --> 00:36:52,910
Windows scripting host attacks go<font color="#E5E5E5"> so it</font>

1021
00:36:51,200 --> 00:36:55,370
allows it hooks at the lowest level

1022
00:36:52,910 --> 00:36:57,770
before interpretation and it takes this

1023
00:36:55,370 --> 00:37:00,560
content<font color="#E5E5E5"> this D obfuscated unencrypted</font>

1024
00:36:57,770 --> 00:37:02,030
content of your<font color="#E5E5E5"> malicious payload and it</font>

1025
00:37:00,560 --> 00:37:04,340
submits it for a scan before<font color="#E5E5E5"> it allows</font>

1026
00:37:02,030 --> 00:37:07,310
it to execute<font color="#CCCCCC"> and it's became a royal</font>

1027
00:37:04,340 --> 00:37:09,170
royal pain<font color="#CCCCCC"> in my butt as an operator and</font>

1028
00:37:07,310 --> 00:37:10,370
so you know I set out to<font color="#E5E5E5"> kind of see</font>

1029
00:37:09,170 --> 00:37:13,340
what are some ways<font color="#E5E5E5"> I could get around</font>

1030
00:37:10,370 --> 00:37:14,690
this<font color="#E5E5E5"> we</font><font color="#CCCCCC"> talked about</font><font color="#E5E5E5"> how the object that</font>

1031
00:37:13,340 --> 00:37:16,760
<font color="#CCCCCC">case you talked about earlier got around</font>

1032
00:37:14,690 --> 00:37:18,440
<font color="#E5E5E5">a MSI because it's not actually</font><font color="#CCCCCC"> running</font>

1033
00:37:16,760 --> 00:37:21,140
in PowerShell<font color="#E5E5E5"> I'm it's not being</font>

1034
00:37:18,440 --> 00:37:23,840
instantiated in PowerShell<font color="#CCCCCC"> this is a</font>

1035
00:37:21,140 --> 00:37:26,330
more aggressive<font color="#CCCCCC"> approach and</font><font color="#E5E5E5"> so a MSI</font>

1036
00:37:23,840 --> 00:37:28,040
how it works is it when it does<font color="#E5E5E5"> its skin</font>

1037
00:37:26,330 --> 00:37:29,930
when it<font color="#E5E5E5"> submits content to a</font><font color="#CCCCCC"> scan it</font>

1038
00:37:28,040 --> 00:37:33,080
actually instantiates<font color="#E5E5E5"> it's it's own comm</font>

1039
00:37:29,930 --> 00:37:35,960
server so<font color="#CCCCCC"> MSI</font><font color="#E5E5E5"> ty DLL</font><font color="#CCCCCC"> has a comm</font>

1040
00:37:33,080 --> 00:37:38,240
component implemented so when it says<font color="#E5E5E5"> I</font>

1041
00:37:35,960 --> 00:37:39,590
<font color="#E5E5E5">just got past invoke mimikatz</font>

1042
00:37:38,240 --> 00:37:41,899
it's going to instantiate the comm

1043
00:37:39,590 --> 00:37:43,250
server and it's going<font color="#E5E5E5"> to expose scanning</font>

1044
00:37:41,900 --> 00:37:45,470
methods<font color="#E5E5E5"> just gonna</font><font color="#CCCCCC"> say I mean take this</font>

1045
00:37:43,250 --> 00:37:48,170
content<font color="#CCCCCC"> I need to call you know scan</font>

1046
00:37:45,470 --> 00:37:52,160
<font color="#E5E5E5">blah on on this content to see if it's</font>

1047
00:37:48,170 --> 00:37:55,100
legit if you hijack the class ID of a

1048
00:37:52,160 --> 00:37:57,259
<font color="#E5E5E5">msi when it goes</font><font color="#CCCCCC"> to instantiate itself</font>

1049
00:37:55,100 --> 00:37:59,240
it's<font color="#E5E5E5"> going to do the resolution it's</font>

1050
00:37:57,260 --> 00:38:01,370
going to see our tree ads or our class

1051
00:37:59,240 --> 00:38:05,290
ID hijack and then we can just point<font color="#E5E5E5"> it</font>

1052
00:38:01,370 --> 00:38:09,250
off to a<font color="#CCCCCC"> non-existent</font><font color="#E5E5E5"> DOL oh boy</font>

1053
00:38:05,290 --> 00:38:09,250
somebody<font color="#CCCCCC"> from Microsoft in here</font>

1054
00:38:09,690 --> 00:38:15,369
anyway so<font color="#CCCCCC"> well he figures that</font><font color="#E5E5E5"> out it's</font>

1055
00:38:14,170 --> 00:38:16,390
going<font color="#CCCCCC"> to you instantiate</font><font color="#E5E5E5"> that object</font>

1056
00:38:15,369 --> 00:38:18,400
it's<font color="#CCCCCC"> going to</font><font color="#E5E5E5"> resolve our non-existent</font>

1057
00:38:16,390 --> 00:38:20,560
<font color="#CCCCCC">deal it's kind</font><font color="#E5E5E5"> of it's going to try to</font>

1058
00:38:18,400 --> 00:38:22,990
load it<font color="#CCCCCC"> and you can either get code</font>

1059
00:38:20,560 --> 00:38:24,730
execution when it tries to<font color="#E5E5E5"> scan content</font>

1060
00:38:22,990 --> 00:38:25,750
which is also pretty funny<font color="#CCCCCC"> or you can</font>

1061
00:38:24,730 --> 00:38:27,190
just<font color="#E5E5E5"> shove it off to</font><font color="#CCCCCC"> an item's is</font>

1062
00:38:25,750 --> 00:38:29,410
<font color="#CCCCCC">non-existent binary and it's not</font><font color="#E5E5E5"> gonna</font>

1063
00:38:27,190 --> 00:38:30,640
<font color="#E5E5E5">be able to call the scanning methods so</font>

1064
00:38:29,410 --> 00:38:32,290
it's<font color="#E5E5E5"> not going to be able to say hey</font>

1065
00:38:30,640 --> 00:38:35,319
this is<font color="#E5E5E5"> legit or not and it just lets it</font>

1066
00:38:32,290 --> 00:38:37,750
<font color="#E5E5E5">go this is a good</font><font color="#CCCCCC"> example that paceman</font>

1067
00:38:35,320 --> 00:38:40,240
link is just<font color="#E5E5E5"> a test case it's just in</font>

1068
00:38:37,750 --> 00:38:42,430
<font color="#CCCCCC">Ike our string that</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> PowerShell team</font>

1069
00:38:40,240 --> 00:38:45,069
put out to let<font color="#E5E5E5"> people kind of play</font><font color="#CCCCCC"> with</font>

1070
00:38:42,430 --> 00:38:46,000
her or see how<font color="#E5E5E5"> a mess</font><font color="#CCCCCC"> eye works you can</font>

1071
00:38:45,070 --> 00:38:47,530
<font color="#E5E5E5">see that we're running and</font><font color="#CCCCCC"> VOC</font>

1072
00:38:46,000 --> 00:38:49,390
expression on this<font color="#E5E5E5"> thing it triggers a</font>

1073
00:38:47,530 --> 00:38:51,520
<font color="#CCCCCC">MSI</font><font color="#E5E5E5"> you can see at the top that it says</font>

1074
00:38:49,390 --> 00:38:54,629
that<font color="#CCCCCC"> it</font><font color="#E5E5E5"> contains moshus content and has</font>

1075
00:38:51,520 --> 00:38:57,190
been blocked<font color="#E5E5E5"> by your entire AV provider</font>

1076
00:38:54,630 --> 00:38:59,380
you<font color="#E5E5E5"> can see that kind of middle block</font>

1077
00:38:57,190 --> 00:39:02,109
there's that comm hijack<font color="#E5E5E5"> that's a class</font>

1078
00:38:59,380 --> 00:39:03,970
ID for a MSI<font color="#CCCCCC"> we</font><font color="#E5E5E5"> simply register it in</font>

1079
00:39:02,109 --> 00:39:06,180
the current<font color="#CCCCCC"> user hive so any medium</font>

1080
00:39:03,970 --> 00:39:08,709
integrity context or<font color="#CCCCCC"> any normal user</font>

1081
00:39:06,180 --> 00:39:10,359
when it comments<font color="#E5E5E5"> objects instantiate</font>

1082
00:39:08,710 --> 00:39:12,130
it's going to<font color="#E5E5E5"> look in the user hi first</font>

1083
00:39:10,359 --> 00:39:14,529
we talked<font color="#E5E5E5"> about the resolution hijacks</font>

1084
00:39:12,130 --> 00:39:16,089
and how that how that<font color="#E5E5E5"> works earlier so</font>

1085
00:39:14,530 --> 00:39:17,770
we<font color="#E5E5E5"> just shove it off creating a proxy</font>

1086
00:39:16,089 --> 00:39:20,470
server 32 and we give<font color="#CCCCCC"> it go away</font><font color="#E5E5E5"> a</font>

1087
00:39:17,770 --> 00:39:23,380
<font color="#E5E5E5">Massiah a</font><font color="#CCCCCC"> dll</font><font color="#E5E5E5"> in the root of</font><font color="#CCCCCC"> c which</font>

1088
00:39:20,470 --> 00:39:24,879
doesn't exist<font color="#E5E5E5"> right import that restart</font>

1089
00:39:23,380 --> 00:39:26,800
<font color="#E5E5E5">powershell and now you can see that when</font>

1090
00:39:24,880 --> 00:39:30,160
<font color="#E5E5E5">we when</font><font color="#CCCCCC"> we invoke expression on the</font>

1091
00:39:26,800 --> 00:39:31,839
<font color="#E5E5E5">iCard sample</font><font color="#CCCCCC"> you know amis is</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> able</font>

1092
00:39:30,160 --> 00:39:33,520
<font color="#CCCCCC">to instantiate the comm component it's</font>

1093
00:39:31,839 --> 00:39:35,080
not able<font color="#CCCCCC"> to scan it</font><font color="#E5E5E5"> and so it kind</font><font color="#CCCCCC"> of</font>

1094
00:39:33,520 --> 00:39:37,630
fails open because<font color="#CCCCCC"> that method is</font><font color="#E5E5E5"> not</font>

1095
00:39:35,080 --> 00:39:40,240
available<font color="#E5E5E5"> and it lets us execute it</font>

1096
00:39:37,630 --> 00:39:43,330
<font color="#E5E5E5">right so they had to fix it they removed</font>

1097
00:39:40,240 --> 00:39:45,069
the call<font color="#E5E5E5"> that does the actual registry</font>

1098
00:39:43,330 --> 00:39:48,040
lookup so it literally loads the<font color="#CCCCCC"> comm</font>

1099
00:39:45,070 --> 00:39:50,410
component<font color="#E5E5E5"> out of system</font><font color="#CCCCCC"> 32 now which is</font>

1100
00:39:48,040 --> 00:39:52,150
great so this<font color="#E5E5E5"> is just one example of</font>

1101
00:39:50,410 --> 00:39:54,250
operationally not just using<font color="#CCCCCC"> it for</font>

1102
00:39:52,150 --> 00:39:56,349
persistence or<font color="#E5E5E5"> command line and logging</font>

1103
00:39:54,250 --> 00:39:58,119
evasion but getting around<font color="#E5E5E5"> security</font>

1104
00:39:56,349 --> 00:40:00,099
products that<font color="#E5E5E5"> might rely on this kind</font><font color="#CCCCCC"> of</font>

1105
00:39:58,119 --> 00:40:01,510
technology<font color="#CCCCCC"> there are a lot of other AV</font>

1106
00:40:00,099 --> 00:40:03,040
vendors out there<font color="#E5E5E5"> that that have</font>

1107
00:40:01,510 --> 00:40:05,020
<font color="#E5E5E5">components so there are other software</font>

1108
00:40:03,040 --> 00:40:06,910
implemented as<font color="#E5E5E5"> calm servers that are</font>

1109
00:40:05,020 --> 00:40:09,960
very likely vulnerable to the same<font color="#CCCCCC"> kind</font>

1110
00:40:06,910 --> 00:40:09,960
of kind of concept

1111
00:40:09,990 --> 00:40:15,060
so<font color="#CCCCCC"> the last</font><font color="#E5E5E5"> kind of component here</font><font color="#CCCCCC"> it's</font>

1112
00:40:11,880 --> 00:40:16,619
a lot of<font color="#CCCCCC"> movement</font><font color="#E5E5E5"> is an operator got</font>

1113
00:40:15,060 --> 00:40:18,750
really sick<font color="#CCCCCC"> of using they've</font><font color="#E5E5E5"> seen four</font>

1114
00:40:16,619 --> 00:40:20,670
or five techniques<font color="#CCCCCC"> I'm on assessments</font>

1115
00:40:18,750 --> 00:40:22,290
<font color="#CCCCCC">defenders were getting really cocky</font><font color="#E5E5E5"> and</font>

1116
00:40:20,670 --> 00:40:24,359
comfortable<font color="#E5E5E5"> with we know how to detect</font>

1117
00:40:22,290 --> 00:40:26,070
<font color="#CCCCCC">WMI we know how to detect</font><font color="#E5E5E5"> hiss exact we</font>

1118
00:40:24,359 --> 00:40:28,859
know how to do<font color="#E5E5E5"> scheduled tasks and at</font>

1119
00:40:26,070 --> 00:40:30,359
and were good and everything<font color="#E5E5E5"> and so I</font>

1120
00:40:28,859 --> 00:40:33,089
went on kind<font color="#E5E5E5"> of a three-month rage</font>

1121
00:40:30,359 --> 00:40:34,680
research spree<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I had been looking at</font>

1122
00:40:33,089 --> 00:40:35,820
calm already and so I was like<font color="#E5E5E5"> well</font>

1123
00:40:34,680 --> 00:40:37,319
there's this thing<font color="#CCCCCC"> called ghee calm</font>

1124
00:40:35,820 --> 00:40:39,810
which is the distributed component

1125
00:40:37,320 --> 00:40:42,480
object model<font color="#E5E5E5"> and it just allows certain</font>

1126
00:40:39,810 --> 00:40:44,640
<font color="#CCCCCC">Cobb</font><font color="#E5E5E5"> jerks to be exposed remotely which</font>

1127
00:40:42,480 --> 00:40:47,960
you can see how that<font color="#E5E5E5"> kind of light bulb</font>

1128
00:40:44,640 --> 00:40:50,670
clicked I was like<font color="#E5E5E5"> hmm okay so basically</font>

1129
00:40:47,960 --> 00:40:52,650
<font color="#E5E5E5">decom setups that there are machine</font><font color="#CCCCCC"> wide</font>

1130
00:40:50,670 --> 00:40:55,500
<font color="#E5E5E5">launch and activation permissions and</font>

1131
00:40:52,650 --> 00:40:57,540
this determines<font color="#E5E5E5"> what user or what group</font>

1132
00:40:55,500 --> 00:41:00,810
is<font color="#E5E5E5"> able to instantiate this object</font>

1133
00:40:57,540 --> 00:41:03,869
remotely<font color="#E5E5E5"> then each application each</font>

1134
00:41:00,810 --> 00:41:08,250
<font color="#E5E5E5">dekum application has specific you know</font>

1135
00:41:03,869 --> 00:41:09,780
set security properties for itself<font color="#CCCCCC"> a lot</font>

1136
00:41:08,250 --> 00:41:11,550
<font color="#CCCCCC">of the more interesting</font><font color="#E5E5E5"> ones</font><font color="#CCCCCC"> don't</font><font color="#E5E5E5"> have</font>

1137
00:41:09,780 --> 00:41:13,170
specific one set for themselves<font color="#E5E5E5"> so they</font>

1138
00:41:11,550 --> 00:41:15,780
fall back to the<font color="#CCCCCC"> Machine wide</font>

1139
00:41:13,170 --> 00:41:17,670
permissions which allow any local

1140
00:41:15,780 --> 00:41:19,170
administrator remote launch and

1141
00:41:17,670 --> 00:41:20,580
activation permissions meaning that if

1142
00:41:19,170 --> 00:41:22,589
you're a local<font color="#E5E5E5"> admin you can use these</font>

1143
00:41:20,580 --> 00:41:30,049
objects remotely without really any

1144
00:41:22,589 --> 00:41:30,049
barrier<font color="#E5E5E5"> whoa okay</font>

1145
00:41:30,440 --> 00:41:36,690
<font color="#E5E5E5">all righty technical difficulties yep so</font>

1146
00:41:34,920 --> 00:41:38,340
this<font color="#E5E5E5"> is this an example it's up on</font><font color="#CCCCCC"> my</font>

1147
00:41:36,690 --> 00:41:41,250
<font color="#E5E5E5">blog</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> you can go read about it</font><font color="#CCCCCC"> we'll</font>

1148
00:41:38,340 --> 00:41:42,570
have<font color="#CCCCCC"> the</font><font color="#E5E5E5"> slide deck up as well and</font><font color="#CCCCCC"> just</font>

1149
00:41:41,250 --> 00:41:46,320
an example<font color="#CCCCCC"> of running calc on</font><font color="#E5E5E5"> a remote</font>

1150
00:41:42,570 --> 00:41:47,760
<font color="#E5E5E5">host</font><font color="#CCCCCC"> so you can do a whole</font><font color="#E5E5E5"> lot of</font>

1151
00:41:46,320 --> 00:41:49,650
<font color="#E5E5E5">different</font><font color="#CCCCCC"> things office has a</font><font color="#E5E5E5"> lot of</font>

1152
00:41:47,760 --> 00:41:51,450
<font color="#E5E5E5">really neat methods that allow you to</font>

1153
00:41:49,650 --> 00:41:53,190
<font color="#E5E5E5">run code I'm not gonna I blogged about</font>

1154
00:41:51,450 --> 00:41:55,200
most<font color="#E5E5E5"> of them that you can</font><font color="#CCCCCC"> go read</font>

1155
00:41:53,190 --> 00:41:56,970
<font color="#CCCCCC">they're the new one that I</font><font color="#E5E5E5"> want to</font><font color="#CCCCCC"> talk</font>

1156
00:41:55,200 --> 00:41:59,879
<font color="#E5E5E5">about was Outlook we talked about create</font>

1157
00:41:56,970 --> 00:42:01,649
object you can instantiate a new comma

1158
00:41:59,880 --> 00:42:04,110
object now look has a method called

1159
00:42:01,650 --> 00:42:06,270
<font color="#CCCCCC">create object now</font><font color="#E5E5E5"> looks exposed over</font>

1160
00:42:04,110 --> 00:42:08,700
decom<font color="#CCCCCC"> outlook</font><font color="#E5E5E5"> doesn't have any default</font>

1161
00:42:06,270 --> 00:42:10,980
<font color="#CCCCCC">launch and activation permissions you</font>

1162
00:42:08,700 --> 00:42:12,060
<font color="#E5E5E5">can see where I'm going</font><font color="#CCCCCC"> with this so we</font>

1163
00:42:10,980 --> 00:42:16,580
kind of have<font color="#CCCCCC"> that a little demo here</font>

1164
00:42:12,060 --> 00:42:20,310
basically<font color="#E5E5E5"> how this is gonna</font><font color="#CCCCCC"> work yep</font>

1165
00:42:16,580 --> 00:42:21,540
already that might be perfect so you

1166
00:42:20,310 --> 00:42:26,190
need to see<font color="#E5E5E5"> that well local admin</font><font color="#CCCCCC"> let's</font>

1167
00:42:21,540 --> 00:42:28,350
<font color="#E5E5E5">remote host we're using a another</font><font color="#CCCCCC"> com</font>

1168
00:42:26,190 --> 00:42:29,760
objects to run<font color="#CCCCCC"> VB script or J scripts so</font>

1169
00:42:28,350 --> 00:42:33,270
this can be shell code via<font color="#CCCCCC"> don''t to</font>

1170
00:42:29,760 --> 00:42:36,510
jscript we're basically throwing<font color="#E5E5E5"> our</font>

1171
00:42:33,270 --> 00:42:38,220
code<font color="#CCCCCC"> or our shell code for example</font><font color="#E5E5E5"> in a</font>

1172
00:42:36,510 --> 00:42:39,720
variable<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then</font><font color="#E5E5E5"> we're activating</font>

1173
00:42:38,220 --> 00:42:41,970
outlook that application on<font color="#E5E5E5"> the remote</font>

1174
00:42:39,720 --> 00:42:43,620
host<font color="#E5E5E5"> right so that's going to give us</font>

1175
00:42:41,970 --> 00:42:46,470
access to outlooks methods and

1176
00:42:43,620 --> 00:42:48,359
properties<font color="#E5E5E5"> from there we</font><font color="#CCCCCC"> then use that</font>

1177
00:42:46,470 --> 00:42:51,450
to<font color="#E5E5E5"> call the application that create</font>

1178
00:42:48,360 --> 00:42:53,640
object method on<font color="#E5E5E5"> that return decom</font>

1179
00:42:51,450 --> 00:42:55,410
handle<font color="#CCCCCC"> per se and that's</font><font color="#E5E5E5"> going to let us</font>

1180
00:42:53,640 --> 00:42:56,879
instantiate script control which is<font color="#CCCCCC"> a</font>

1181
00:42:55,410 --> 00:43:00,450
common<font color="#E5E5E5"> object that lets you run VB</font>

1182
00:42:56,880 --> 00:43:02,400
script of jscript on that<font color="#CCCCCC"> object</font><font color="#E5E5E5"> we set</font>

1183
00:43:00,450 --> 00:43:05,220
the language<font color="#E5E5E5"> to VB script we pass it our</font>

1184
00:43:02,400 --> 00:43:07,200
code and automagically<font color="#E5E5E5"> the code that we</font>

1185
00:43:05,220 --> 00:43:09,990
originally<font color="#E5E5E5"> put in to that console that</font>

1186
00:43:07,200 --> 00:43:11,730
script<font color="#E5E5E5"> that gets executed for us you can</font>

1187
00:43:09,990 --> 00:43:13,950
<font color="#E5E5E5">see that we</font><font color="#CCCCCC"> are on the road mote host</font>

1188
00:43:11,730 --> 00:43:16,650
now<font color="#E5E5E5"> you can see</font><font color="#CCCCCC"> Calcutta X is running as</font>

1189
00:43:13,950 --> 00:43:19,049
a child<font color="#E5E5E5"> of exported or outlook</font><font color="#CCCCCC"> taxi and</font>

1190
00:43:16,650 --> 00:43:20,730
that actually<font color="#E5E5E5"> is running as the user</font>

1191
00:43:19,050 --> 00:43:22,860
<font color="#E5E5E5">Matt so one thing the key off of would</font>

1192
00:43:20,730 --> 00:43:25,020
be<font color="#CCCCCC"> a</font><font color="#E5E5E5"> process that's not the user logged</font>

1193
00:43:22,860 --> 00:43:27,390
in that<font color="#CCCCCC"> process is going to</font><font color="#E5E5E5"> be running</font>

1194
00:43:25,020 --> 00:43:29,370
as a different user<font color="#E5E5E5"> there are different</font>

1195
00:43:27,390 --> 00:43:31,799
<font color="#CCCCCC">decon</font><font color="#E5E5E5"> applications that inherit the</font>

1196
00:43:29,370 --> 00:43:34,080
current logged on<font color="#E5E5E5"> users session so the</font>

1197
00:43:31,800 --> 00:43:36,540
process<font color="#E5E5E5"> won't look</font><font color="#CCCCCC"> weird but that</font>

1198
00:43:34,080 --> 00:43:39,509
<font color="#CCCCCC">specific one you know will stand out in</font>

1199
00:43:36,540 --> 00:43:40,440
<font color="#CCCCCC">that way yep</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think just for</font>

1200
00:43:39,510 --> 00:43:41,760
the sake of<font color="#E5E5E5"> time I think we're out of</font>

1201
00:43:40,440 --> 00:43:43,800
<font color="#E5E5E5">time</font><font color="#CCCCCC"> so I don't think we have</font>

1202
00:43:41,760 --> 00:43:45,450
<font color="#E5E5E5">so when I honor the next speaker Turner</font>

1203
00:43:43,800 --> 00:43:47,490
<font color="#CCCCCC">at</font><font color="#E5E5E5"> the stage but if you have questions</font>

1204
00:43:45,450 --> 00:43:49,589
<font color="#CCCCCC">for</font><font color="#E5E5E5"> us find us on Twitter find us in the</font>

1205
00:43:47,490 --> 00:43:50,700
<font color="#E5E5E5">hallway way around all weekend</font><font color="#CCCCCC"> so thank</font>

1206
00:43:49,590 --> 00:43:55,780
you<font color="#E5E5E5"> for your time we</font><font color="#CCCCCC"> appreciate it</font>

1207
00:43:50,700 --> 00:43:55,779
[Applause]

1208
00:44:01,500 --> 00:44:03,560
you

