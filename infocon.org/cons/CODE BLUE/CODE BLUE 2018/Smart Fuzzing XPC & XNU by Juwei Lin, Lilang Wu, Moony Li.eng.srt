1
00:00:04,830 --> 00:00:12,700
welcome to our topics

2
00:00:08,470 --> 00:00:14,019
our topic is smart housing XP C and X on

3
00:00:12,700 --> 00:00:19,119
you

4
00:00:14,019 --> 00:00:22,660
this is also our topic this is hello

5
00:00:19,120 --> 00:00:24,850
everyone I'm joining and the first 9 is

6
00:00:22,660 --> 00:00:29,470
my Twitter account I joined the Trend

7
00:00:24,850 --> 00:00:32,890
Micro since 2013 and at the beginning of

8
00:00:29,470 --> 00:00:34,649
my career I'm major in Windows kernel

9
00:00:32,890 --> 00:00:38,800
and looking poor kid

10
00:00:34,649 --> 00:00:43,719
later I developed a tool for ransomware

11
00:00:38,800 --> 00:00:46,659
decryption the name is TM a TT and now I

12
00:00:43,719 --> 00:00:50,019
focus on the Mac and ours one ability

13
00:00:46,659 --> 00:00:57,940
hunting also includes enjoy maybe later

14
00:00:50,019 --> 00:01:03,099
ok I'm leader and also three years

15
00:00:57,940 --> 00:01:07,990
security and focus on Mac OS and also on

16
00:01:03,100 --> 00:01:12,880
a pittance and malware hello everyone

17
00:01:07,990 --> 00:01:15,970
I'm Mooney and I have about 80 years

18
00:01:12,880 --> 00:01:18,100
Curtin experience and mainly I'm

19
00:01:15,970 --> 00:01:22,000
focusing on certain the sandbox of a

20
00:01:18,100 --> 00:01:25,720
Windows platform and currently we have

21
00:01:22,000 --> 00:01:31,980
developed an Android the one ability

22
00:01:25,720 --> 00:01:31,980
hunt so this is our group thank you

23
00:01:32,760 --> 00:01:40,690
this is agenda our topics the first one

24
00:01:36,460 --> 00:01:45,789
is Mouse buzzing X PC and the second is

25
00:01:40,690 --> 00:01:50,009
Mouse vast or X on your project firstly

26
00:01:45,790 --> 00:01:54,220
we will introduce the smart buzzing @p c

27
00:01:50,010 --> 00:01:56,770
XP C is once a super house of law they

28
00:01:54,220 --> 00:02:00,190
were inter-process communication

29
00:01:56,770 --> 00:02:02,199
mechanism the merry security proposes to

30
00:02:00,190 --> 00:02:05,920
separate the privilege for different

31
00:02:02,200 --> 00:02:06,670
containers and we all know a common

32
00:02:05,920 --> 00:02:09,939
Technol

33
00:02:06,670 --> 00:02:14,440
technical to break out a sample is to

34
00:02:09,939 --> 00:02:17,250
obtain a code exclusion in a high level

35
00:02:14,440 --> 00:02:22,870
you know higher probably privileged for

36
00:02:17,250 --> 00:02:25,750
all on sandbox demon and our son McCoy's

37
00:02:22,870 --> 00:02:27,700
price so many these kinds of systems so

38
00:02:25,750 --> 00:02:33,100
is seeing order to implement different

39
00:02:27,700 --> 00:02:36,160
functions for applications so that is

40
00:02:33,100 --> 00:02:40,840
why we take at PC mechanism and our

41
00:02:36,160 --> 00:02:45,190
fuzzy in target FPC has his own data

42
00:02:40,840 --> 00:02:49,840
types such as int double and dictionary

43
00:02:45,190 --> 00:02:54,070
however in the end all these data will

44
00:02:49,840 --> 00:02:58,960
be sir iced into a PC message and sent

45
00:02:54,070 --> 00:03:01,600
by met message function for match

46
00:02:58,960 --> 00:03:06,280
message there also two kinds including

47
00:03:01,600 --> 00:03:11,980
symbol and company's ones and what is a

48
00:03:06,280 --> 00:03:15,460
PC message Lola look like in memory we

49
00:03:11,980 --> 00:03:18,310
got a really message through debugging

50
00:03:15,460 --> 00:03:20,560
from this peak from this picture we can

51
00:03:18,310 --> 00:03:25,000
see the answer contained in the red box

52
00:03:20,560 --> 00:03:27,720
is a match message header the Queen box

53
00:03:25,000 --> 00:03:31,480
content is the count of the best body

54
00:03:27,720 --> 00:03:34,780
here is one next is the message

55
00:03:31,480 --> 00:03:40,179
descriptors which contains the ex PC

56
00:03:34,780 --> 00:03:44,770
data object in the FPC messages funny

57
00:03:40,180 --> 00:03:48,610
the foreign foreign magic and wheeshing

58
00:03:44,770 --> 00:03:50,920
value in the yellow box are the XP see

59
00:03:48,610 --> 00:03:52,770
dictionary data this information

60
00:03:50,920 --> 00:03:59,950
composed

61
00:03:52,770 --> 00:04:02,950
XP see image message now we need to Anam

62
00:03:59,950 --> 00:04:07,060
the expiry service we all knows an

63
00:04:02,950 --> 00:04:10,570
expiry service are many to island T so

64
00:04:07,060 --> 00:04:14,500
we can use the launch CTL Tom's

65
00:04:10,570 --> 00:04:20,500
sometimes tears command to terms details

66
00:04:14,500 --> 00:04:24,669
for this explicit service when one

67
00:04:20,500 --> 00:04:26,610
expensive processor requests from other

68
00:04:24,669 --> 00:04:29,520
processes

69
00:04:26,610 --> 00:04:32,340
it's to serialize disease at PC

70
00:04:29,520 --> 00:04:36,930
messengers by match message mechanism

71
00:04:32,340 --> 00:04:41,818
first then use LAN using XP C mechanism

72
00:04:36,930 --> 00:04:44,639
to process this explicit data funny car

73
00:04:41,819 --> 00:04:45,300
sprung corresponding X P so is well

74
00:04:44,639 --> 00:04:48,449
received

75
00:04:45,300 --> 00:04:52,590
we are receive the data the expert

76
00:04:48,449 --> 00:04:57,419
accept and country their tasks however

77
00:04:52,590 --> 00:05:02,448
coming sure that the data be processed

78
00:04:57,419 --> 00:05:07,400
control connector e in all these steps

79
00:05:02,449 --> 00:05:10,409
obviously not actually many one orbitals

80
00:05:07,400 --> 00:05:14,460
related to these three terms have been

81
00:05:10,409 --> 00:05:22,259
disclosed for example you can search the

82
00:05:14,460 --> 00:05:25,219
XP see in the project issues and for

83
00:05:22,259 --> 00:05:29,310
this one orbit is the main issue is

84
00:05:25,219 --> 00:05:34,259
isn't the mechanism we measured about

85
00:05:29,310 --> 00:05:36,710
cannot pass or process the malvern my

86
00:05:34,259 --> 00:05:40,139
phone message correctly

87
00:05:36,710 --> 00:05:43,460
therefore the messy the main go forth to

88
00:05:40,139 --> 00:05:51,360
trigger potential boxes to craft this

89
00:05:43,460 --> 00:05:54,000
malformed match message here contains in

90
00:05:51,360 --> 00:05:58,199
the red box our data we can craft

91
00:05:54,000 --> 00:06:04,080
including body count message descriptors

92
00:05:58,199 --> 00:06:07,440
and dictionary data based on this

93
00:06:04,080 --> 00:06:11,580
information with web to easy but very

94
00:06:07,440 --> 00:06:16,259
efficient fast to us our first LG's are

95
00:06:11,580 --> 00:06:18,690
m2 easy to control easy to mutant easy

96
00:06:16,259 --> 00:06:21,690
to monitor and easy to reproduce

97
00:06:18,690 --> 00:06:28,830
now our LED morning to introduce our

98
00:06:21,690 --> 00:06:33,090
voluntours okay currently

99
00:06:28,830 --> 00:06:35,490
Lila has introduced the user mode attack

100
00:06:33,090 --> 00:06:37,679
surface including the act easy match

101
00:06:35,490 --> 00:06:40,529
message and and the other attack

102
00:06:37,680 --> 00:06:43,969
services and the basic result to

103
00:06:40,529 --> 00:06:48,529
first the attack surface so how do we

104
00:06:43,969 --> 00:06:51,748
fast the axpy see for example in

105
00:06:48,529 --> 00:06:57,419
implementation so we can basically

106
00:06:51,749 --> 00:07:03,029
divide our host allusion into into four

107
00:06:57,419 --> 00:07:09,329
part the first one is is a mutation

108
00:07:03,029 --> 00:07:11,339
mutation agent and we will use the pedal

109
00:07:09,329 --> 00:07:16,349
and with the other script like language

110
00:07:11,339 --> 00:07:18,589
its rapid it kind of agent so we can we

111
00:07:16,349 --> 00:07:23,369
can implement a the attack surface

112
00:07:18,589 --> 00:07:27,839
really under the other and the weaker

113
00:07:23,369 --> 00:07:32,909
and the weak for the mutation strategy

114
00:07:27,839 --> 00:07:35,639
we have used the see the producer so so

115
00:07:32,909 --> 00:07:39,419
basically so basically for seed

116
00:07:35,639 --> 00:07:43,469
strategies item you can use just one

117
00:07:39,419 --> 00:07:48,659
seed like for beta integral to generate

118
00:07:43,469 --> 00:07:52,498
her or sequence of data which is which

119
00:07:48,659 --> 00:07:56,009
the value is decided so we can use the

120
00:07:52,499 --> 00:08:02,069
seed strategy to reproduce your first

121
00:07:56,009 --> 00:08:06,539
data correctly and and also we can see

122
00:08:02,069 --> 00:08:10,319
that we have wrapped it so ax PC in the

123
00:08:06,539 --> 00:08:14,219
activated and available and these

124
00:08:10,319 --> 00:08:16,859
targets are for the services exported by

125
00:08:14,219 --> 00:08:18,869
hours and Michael sir ties to the audio

126
00:08:16,859 --> 00:08:22,258
and the sukkah meteor and the Windows

127
00:08:18,869 --> 00:08:25,679
Server and it is so easy and so forth

128
00:08:22,259 --> 00:08:30,959
and the other part is item way we use a

129
00:08:25,679 --> 00:08:35,188
creditor to monitor the situation of

130
00:08:30,959 --> 00:08:38,459
your first target whether the first

131
00:08:35,188 --> 00:08:41,639
target is a hung or crushed under when

132
00:08:38,458 --> 00:08:45,989
our the target is crashed or hung we can

133
00:08:41,639 --> 00:08:50,269
get us the Kratt log and this basically

134
00:08:45,990 --> 00:08:50,269
from the from the fighting

135
00:08:54,970 --> 00:09:04,940
so for example I stock PC interfaces we

136
00:09:02,660 --> 00:09:07,839
can see that this is a real example

137
00:09:04,940 --> 00:09:10,640
which we have four wraps with Python

138
00:09:07,839 --> 00:09:13,670
about the fighting interface set as

139
00:09:10,640 --> 00:09:17,360
active PC create a connection mature

140
00:09:13,670 --> 00:09:22,520
connection 300 much message and activity

141
00:09:17,360 --> 00:09:27,589
since message so Sara sir there are many

142
00:09:22,520 --> 00:09:33,079
solutions to wrap the attack services in

143
00:09:27,589 --> 00:09:37,600
Python and also we can use the other so

144
00:09:33,080 --> 00:09:42,980
good you like for example the new dress

145
00:09:37,600 --> 00:09:46,640
and the third party is the mutation we

146
00:09:42,980 --> 00:09:51,709
can see seitan the basic attack surface

147
00:09:46,640 --> 00:09:54,560
is set you can attack surface and the

148
00:09:51,709 --> 00:09:58,279
tented is the input data and puts the

149
00:09:54,560 --> 00:10:02,149
data to your attack surface so your

150
00:09:58,279 --> 00:10:07,520
target we will try to resolve input data

151
00:10:02,149 --> 00:10:10,940
and evil it could not solve the

152
00:10:07,520 --> 00:10:16,040
immediate cracked listen interview crash

153
00:10:10,940 --> 00:10:20,450
get your crash so the pretty girl in the

154
00:10:16,040 --> 00:10:29,480
basic thought is that we can mute it so

155
00:10:20,450 --> 00:10:31,930
input data and we two-way one of the one

156
00:10:29,480 --> 00:10:37,700
of the best strategy is that we will use

157
00:10:31,930 --> 00:10:40,339
a pseudo-random generator and the in

158
00:10:37,700 --> 00:10:43,720
this strategy as we have mentioned

159
00:10:40,339 --> 00:10:47,750
before we can generate a sequence of

160
00:10:43,720 --> 00:10:52,940
decided the data with just one integral

161
00:10:47,750 --> 00:10:56,779
and for one decided crash is responding

162
00:10:52,940 --> 00:11:00,709
for one decided integral value and you

163
00:10:56,779 --> 00:11:03,829
can use so just added integral value to

164
00:11:00,709 --> 00:11:05,640
reproduce the sequence of input data

165
00:11:03,829 --> 00:11:09,029
together to crack the data

166
00:11:05,640 --> 00:11:14,839
and use the tip uses the crack the data

167
00:11:09,029 --> 00:11:14,839
you can mostly reproduce your crazies

168
00:11:16,880 --> 00:11:22,620
okay that's the correct monitor we can

169
00:11:19,950 --> 00:11:25,380
see that because our target is for the

170
00:11:22,620 --> 00:11:29,700
youth mode services focus ampuls audio

171
00:11:25,380 --> 00:11:34,079
all video service and the other set if

172
00:11:29,700 --> 00:11:36,180
the if the process crashes are hung we

173
00:11:34,079 --> 00:11:40,260
can catch the signal for example so

174
00:11:36,180 --> 00:11:46,469
process may be exit also PRD may be

175
00:11:40,260 --> 00:11:49,950
change for restart okay as far as the

176
00:11:46,470 --> 00:11:53,130
repetition production producing thought

177
00:11:49,950 --> 00:11:57,240
we can see that actually we can have a

178
00:11:53,130 --> 00:11:59,700
different methodology to reproduce no

179
00:11:57,240 --> 00:12:02,940
crashes so tradition one isn't false a

180
00:11:59,700 --> 00:12:11,160
longer lock trees and the other one is

181
00:12:02,940 --> 00:12:16,500
faster kids fell our tampa fell for the

182
00:12:11,160 --> 00:12:19,290
seed we can compare the different habit

183
00:12:16,500 --> 00:12:22,649
of reproduction a crowding different

184
00:12:19,290 --> 00:12:26,459
dimensions for example so asteroid cost

185
00:12:22,649 --> 00:12:30,779
under speed for cost and the wine third

186
00:12:26,459 --> 00:12:36,029
did kind of treating is a kinds of kinds

187
00:12:30,779 --> 00:12:39,390
about complex scenario and one we can

188
00:12:36,029 --> 00:12:43,079
reproduce so crash with high rate or low

189
00:12:39,390 --> 00:12:47,699
rate and so final dimension is the visor

190
00:12:43,079 --> 00:12:51,329
the driver of a passing can cost much

191
00:12:47,699 --> 00:12:54,479
effort or not so we can see site with

192
00:12:51,329 --> 00:12:58,130
seed per see to see the piston

193
00:12:54,480 --> 00:13:00,779
reproduction we can't get a saw most low

194
00:12:58,130 --> 00:13:07,890
storage costs because we test we can

195
00:13:00,779 --> 00:13:13,079
just remember 6 4 bytes integral and so

196
00:13:07,890 --> 00:13:16,709
speed of cost is also low and because we

197
00:13:13,079 --> 00:13:18,829
have we can reproduce so decided the

198
00:13:16,709 --> 00:13:23,300
sequence of data

199
00:13:18,829 --> 00:13:29,290
with with so high Ruby Revolution read

200
00:13:23,300 --> 00:13:36,609
in the strategy so we can have a high

201
00:13:29,290 --> 00:13:41,420
probability to reproduce our crash and

202
00:13:36,610 --> 00:13:45,470
this is cinema short of craziest cases

203
00:13:41,420 --> 00:13:47,959
by our ties are a result you can see

204
00:13:45,470 --> 00:13:50,420
that for different authorities for

205
00:13:47,959 --> 00:13:53,719
example the PPC controller obviously

206
00:13:50,420 --> 00:13:58,299
control print we have got these kind of

207
00:13:53,720 --> 00:14:04,699
crises and each carcass contains so

208
00:13:58,299 --> 00:14:10,069
seceded for reproduction okay and this

209
00:14:04,699 --> 00:14:15,170
is a CDI and three number we have

210
00:14:10,069 --> 00:14:18,799
submitted to to Apple and with the

211
00:14:15,170 --> 00:14:22,569
updated condition we can as a as a new

212
00:14:18,799 --> 00:14:27,790
civil year but we did not update here

213
00:14:22,569 --> 00:14:30,349
thank you okay let me introduce

214
00:14:27,790 --> 00:14:35,529
smartphones acts a new apart for you

215
00:14:30,350 --> 00:14:38,629
okay today I will introduce man X

216
00:14:35,529 --> 00:14:42,230
introduced a tour for fast smart phasing

217
00:14:38,629 --> 00:14:44,389
axing you and I will talk about the

218
00:14:42,230 --> 00:14:47,809
architecture of this tour this will also

219
00:14:44,389 --> 00:14:51,319
include some sanitizer support there are

220
00:14:47,809 --> 00:14:54,319
two key modules in this tour one is

221
00:14:51,319 --> 00:14:57,229
syntax engine and covers the other is

222
00:14:54,319 --> 00:15:03,199
sanitizers finally I will give you the

223
00:14:57,230 --> 00:15:05,990
output from our tour firstly I will

224
00:15:03,199 --> 00:15:09,529
highlight the fuzzing tour it has many

225
00:15:05,990 --> 00:15:13,579
but once the features includes a once

226
00:15:09,529 --> 00:15:16,100
the fuzzing framework it is also called

227
00:15:13,579 --> 00:15:19,910
courage driven it has advanced the

228
00:15:16,100 --> 00:15:24,709
syntax engine uncovers it has sanitizers

229
00:15:19,910 --> 00:15:30,290
support in kuno and it also give very

230
00:15:24,709 --> 00:15:32,099
high quality outputs okay let me talk

231
00:15:30,290 --> 00:15:37,040
about the arranging of

232
00:15:32,100 --> 00:15:40,589
this tour if you know google 6 : you may

233
00:15:37,040 --> 00:15:43,889
know they say Scala already meets all

234
00:15:40,589 --> 00:15:48,569
the features I mentioned in the previous

235
00:15:43,889 --> 00:15:54,870
slide but it don't support Mac OS and

236
00:15:48,569 --> 00:15:57,930
ours China so what I did is just ports

237
00:15:54,870 --> 00:16:03,899
the Google Scholar to support Mac OS X

238
00:15:57,930 --> 00:16:05,699
in you during the port there are three

239
00:16:03,899 --> 00:16:08,339
main challenges for me

240
00:16:05,699 --> 00:16:11,519
the first one is f X and you thousand

241
00:16:08,339 --> 00:16:15,959
support code coverage and there's no

242
00:16:11,519 --> 00:16:18,779
existing in coppers for X nu if you have

243
00:16:15,959 --> 00:16:21,989
a look at this corner it has many covers

244
00:16:18,779 --> 00:16:25,170
made for example covers for Linux for

245
00:16:21,990 --> 00:16:29,970
enjoy for fuchsia for even for FreeBSD

246
00:16:25,170 --> 00:16:32,639
but there's no covers for X nu also in

247
00:16:29,970 --> 00:16:36,329
approach xn users know very good

248
00:16:32,639 --> 00:16:38,300
sanitizers I will explain explain this

249
00:16:36,329 --> 00:16:44,250
need her in details

250
00:16:38,300 --> 00:16:48,719
ok in order to nurse's color run on Mac

251
00:16:44,250 --> 00:16:51,839
OS we need 2 to 2 parts work the first

252
00:16:48,720 --> 00:16:54,750
part is father we need to add the

253
00:16:51,839 --> 00:16:59,069
coppers API patterns actually I T value

254
00:16:54,750 --> 00:17:03,530
more than 500 API patterns for this tour

255
00:16:59,069 --> 00:17:06,658
and I preferred to use VM fusion

256
00:17:03,530 --> 00:17:10,559
workstation so I also add support for

257
00:17:06,659 --> 00:17:13,230
the infusion and there's no existing

258
00:17:10,559 --> 00:17:17,189
back who has a cuter so I developed the

259
00:17:13,230 --> 00:17:20,130
as cuter for this tool another part for

260
00:17:17,189 --> 00:17:23,189
X a new since it doesn't support code

261
00:17:20,130 --> 00:17:27,530
coverage so I developed the developers

262
00:17:23,189 --> 00:17:31,740
called coverage module in X a new and

263
00:17:27,530 --> 00:17:36,690
also add current memory sanitizer in X

264
00:17:31,740 --> 00:17:38,990
nu which is doesn't exist and I also

265
00:17:36,690 --> 00:17:43,110
enable cannot address and Keiser

266
00:17:38,990 --> 00:17:45,330
case on address and cancer is included

267
00:17:43,110 --> 00:17:45,689
in X a new source code you can enable

268
00:17:45,330 --> 00:17:49,439
you

269
00:17:45,690 --> 00:17:53,850
by yourself but there's some trick some

270
00:17:49,440 --> 00:17:59,149
problems when you enable it replace your

271
00:17:53,850 --> 00:18:02,399
color with the one you'll compare it

272
00:17:59,149 --> 00:18:06,899
okay let me describes the architecture

273
00:18:02,399 --> 00:18:08,908
of this tour since my tour is based on

274
00:18:06,899 --> 00:18:15,029
six colors so the architecture is almost

275
00:18:08,909 --> 00:18:19,740
the same with this color but I I need to

276
00:18:15,029 --> 00:18:23,690
emphasize modules marked in green color

277
00:18:19,740 --> 00:18:27,899
this is a difference key difference from

278
00:18:23,690 --> 00:18:32,429
the original six color and my tour or

279
00:18:27,899 --> 00:18:37,559
this is implementation to port six color

280
00:18:32,429 --> 00:18:41,100
to support my quest I will show you the

281
00:18:37,559 --> 00:18:46,379
details information either as for the

282
00:18:41,100 --> 00:18:50,549
architecture there are several steps for

283
00:18:46,379 --> 00:18:55,350
fuzzing step one the we are management

284
00:18:50,549 --> 00:18:57,809
on the right side will start the VM

285
00:18:55,350 --> 00:19:02,820
instance as a client

286
00:18:57,809 --> 00:19:05,100
step 2 the in the client side syntax

287
00:19:02,820 --> 00:19:08,939
engine we are load is the API patterns

288
00:19:05,100 --> 00:19:11,158
and existing copper's DB then it will

289
00:19:08,940 --> 00:19:15,509
also work together with the mutation

290
00:19:11,159 --> 00:19:20,179
engine to generate some programs for the

291
00:19:15,509 --> 00:19:26,490
as cuter then a schedule as cuter will

292
00:19:20,179 --> 00:19:28,889
run these programs will after v10 as

293
00:19:26,490 --> 00:19:31,549
CUDA will check the return value and

294
00:19:28,889 --> 00:19:37,860
also updates the coverage code coverage

295
00:19:31,549 --> 00:19:41,399
back to the server side then the server

296
00:19:37,860 --> 00:19:47,809
will check if the instance is alive or

297
00:19:41,399 --> 00:19:53,610
crash ok this is a fathom process I just

298
00:19:47,809 --> 00:19:56,610
mentioned it gave it I will introduce

299
00:19:53,610 --> 00:19:58,649
the key models here the first one is a

300
00:19:56,610 --> 00:20:04,530
syntax ng and corporals

301
00:19:58,650 --> 00:20:07,520
then second one is the sanitizers just

302
00:20:04,530 --> 00:20:11,550
to see an example here the picture is

303
00:20:07,520 --> 00:20:12,300
the result of five more than 500 API

304
00:20:11,550 --> 00:20:17,280
patents

305
00:20:12,300 --> 00:20:21,260
I wrote them another picture describes

306
00:20:17,280 --> 00:20:25,730
the code coverage supporting xnu

307
00:20:21,260 --> 00:20:30,750
after combined command combination I

308
00:20:25,730 --> 00:20:36,600
instructed the Chris PC function in each

309
00:20:30,750 --> 00:20:39,300
of the block code block okay let's see

310
00:20:36,600 --> 00:20:43,260
our my work the summary on my work

311
00:20:39,300 --> 00:20:46,280
firstly our syntax engine the key module

312
00:20:43,260 --> 00:20:50,429
in my tools the syntax engine is

313
00:20:46,280 --> 00:20:53,970
directly from this color but it doesn't

314
00:20:50,429 --> 00:21:01,260
have the API patterns so my work here is

315
00:20:53,970 --> 00:21:07,230
just to develop the 530 API patterns to

316
00:21:01,260 --> 00:21:10,260
support the sector one is as I mentioned

317
00:21:07,230 --> 00:21:13,920
before cannot address and it has a is

318
00:21:10,260 --> 00:21:18,600
included in Xing you but it doesn't work

319
00:21:13,920 --> 00:21:24,570
well if you compare it as for me I can't

320
00:21:18,600 --> 00:21:27,300
put it after I replace the default can

321
00:21:24,570 --> 00:21:30,629
always with this one but if if you use

322
00:21:27,300 --> 00:21:33,300
the one provided from KDK it was

323
00:21:30,630 --> 00:21:35,160
successfully but I want to add code

324
00:21:33,300 --> 00:21:41,928
coverage into the kernel so I must

325
00:21:35,160 --> 00:21:46,470
compare it myself and I also just said I

326
00:21:41,929 --> 00:21:51,690
develop it as a code coverage module 2

327
00:21:46,470 --> 00:21:54,059
in xnu I develop the color memories and

328
00:21:51,690 --> 00:21:58,679
it has a true detects the I initialize

329
00:21:54,059 --> 00:22:01,170
the memory memory nique ok let's move to

330
00:21:58,679 --> 00:22:06,170
the syntax engine covers part the key

331
00:22:01,170 --> 00:22:06,170
model in our tour the first key module

332
00:22:06,290 --> 00:22:12,509
let me give you a very quick

333
00:22:09,470 --> 00:22:17,089
introduction to this syntax engine

334
00:22:12,509 --> 00:22:21,269
this is all from Google's corner project

335
00:22:17,089 --> 00:22:25,289
you need to write a text includes the

336
00:22:21,269 --> 00:22:28,349
API patents then you can causes extract

337
00:22:25,289 --> 00:22:33,899
an assist generation tour to generate

338
00:22:28,349 --> 00:22:37,428
the Gophers the inside program code in

339
00:22:33,899 --> 00:22:41,668
this corner will generate the final

340
00:22:37,429 --> 00:22:45,359
programs based on the old files the

341
00:22:41,669 --> 00:22:50,129
final programs is fed into the executor

342
00:22:45,359 --> 00:22:54,389
to fuss this is an example of how to

343
00:22:50,129 --> 00:22:58,349
develop as the API patterns as a human

344
00:22:54,389 --> 00:23:02,458
human being you can write the API

345
00:22:58,349 --> 00:23:06,869
pattern friendly to human just to writes

346
00:23:02,459 --> 00:23:10,409
the open and period here it includes the

347
00:23:06,869 --> 00:23:13,619
function name and some arguments what I

348
00:23:10,409 --> 00:23:17,449
want to emphasize here is that it has a

349
00:23:13,619 --> 00:23:22,019
concept of resource it is very key

350
00:23:17,449 --> 00:23:25,229
conserved here in Scala the first

351
00:23:22,019 --> 00:23:28,709
argument of P read is FD FD is a

352
00:23:25,229 --> 00:23:32,519
resource it is not Turing falling it is

353
00:23:28,709 --> 00:23:36,179
not randomly generated it is from the

354
00:23:32,519 --> 00:23:42,719
return value of the function open so you

355
00:23:36,179 --> 00:23:48,259
must write it properly or your father

356
00:23:42,719 --> 00:23:52,469
may be Cal crazy to randomly generate

357
00:23:48,259 --> 00:24:00,749
the FD one two three four five this is

358
00:23:52,469 --> 00:24:03,709
meaning nice this is an example of the

359
00:24:00,749 --> 00:24:10,319
result of the previous are two functions

360
00:24:03,709 --> 00:24:18,709
written in text this is a result result

361
00:24:10,319 --> 00:24:23,339
and a sinkhole fair than the generation

362
00:24:18,709 --> 00:24:25,890
code in Scala will generate the programs

363
00:24:23,339 --> 00:24:29,690
based on the previous Gophers

364
00:24:25,890 --> 00:24:34,220
this is the program which which is

365
00:24:29,690 --> 00:24:38,520
actually excluded by the Mac OS as cuter

366
00:24:34,220 --> 00:24:43,410
okay ask users will consume the

367
00:24:38,520 --> 00:24:45,929
program's to fuss and more about this is

368
00:24:43,410 --> 00:24:49,770
a very quick introduction of how to REST

369
00:24:45,929 --> 00:24:51,540
API penance at more about more

370
00:24:49,770 --> 00:24:55,139
information about how to write API

371
00:24:51,540 --> 00:25:00,928
penance you can refer to the sis Conner

372
00:24:55,140 --> 00:25:05,419
project and and and another big part of

373
00:25:00,929 --> 00:25:09,110
my tour is sanitizers let's have a

374
00:25:05,419 --> 00:25:13,169
review of the user model sanitizers

375
00:25:09,110 --> 00:25:17,010
there are many sanitizers that may be

376
00:25:13,169 --> 00:25:20,880
the top or the import the tow important

377
00:25:17,010 --> 00:25:24,650
three ones I select is addressed and it

378
00:25:20,880 --> 00:25:28,470
has a memory synthase and coverage

379
00:25:24,650 --> 00:25:32,750
address and it has is used to detect OB

380
00:25:28,470 --> 00:25:35,460
read/write UAF type of free and still

381
00:25:32,750 --> 00:25:39,960
memories and it has is used to detect

382
00:25:35,460 --> 00:25:45,470
the initializer memory so it has a

383
00:25:39,960 --> 00:25:48,120
coverage is used to add support for

384
00:25:45,470 --> 00:25:51,320
function that will block never each

385
00:25:48,120 --> 00:25:57,989
network coverage okay

386
00:25:51,320 --> 00:26:02,090
and let's move them into the kernel we

387
00:25:57,990 --> 00:26:07,190
need to use them to benefit our father

388
00:26:02,090 --> 00:26:10,110
but it's not it has very big different

389
00:26:07,190 --> 00:26:12,510
difference from user mode sanitizers as

390
00:26:10,110 --> 00:26:17,389
for the kernels and it has a coverage

391
00:26:12,510 --> 00:26:21,090
you can use the LLVM to instructors some

392
00:26:17,390 --> 00:26:24,419
corporate functions into each block of X

393
00:26:21,090 --> 00:26:27,120
a new but there's no existing Quebec

394
00:26:24,419 --> 00:26:28,860
functions you must implement the copic

395
00:26:27,120 --> 00:26:32,159
functions by yourself

396
00:26:28,860 --> 00:26:36,080
and as for

397
00:26:32,160 --> 00:26:38,929
address an advisor you can enable it

398
00:26:36,080 --> 00:26:45,080
during the

399
00:26:38,929 --> 00:26:48,589
combining nation but as for me I can't

400
00:26:45,080 --> 00:26:54,728
put the default colonel kiss on Kuno it

401
00:26:48,589 --> 00:26:58,489
will crash if you start the VM fusion

402
00:26:54,729 --> 00:27:01,119
the third couldn't memory sanitizer it

403
00:26:58,489 --> 00:27:04,940
is used to detect and initialize

404
00:27:01,119 --> 00:27:08,779
initialize the read operations there's

405
00:27:04,940 --> 00:27:13,909
no such a memory scene has in AK senior

406
00:27:08,779 --> 00:27:16,789
so we need to add support for it that

407
00:27:13,909 --> 00:27:19,669
talk parts in it has a code coverage we

408
00:27:16,789 --> 00:27:24,549
need to develop in such a module in

409
00:27:19,669 --> 00:27:28,299
action you to support the sanitizer

410
00:27:24,549 --> 00:27:32,839
callback function and we also need to

411
00:27:28,299 --> 00:27:37,089
read the result the code coverage data

412
00:27:32,839 --> 00:27:41,269
back to our user mode the father this is

413
00:27:37,089 --> 00:27:43,639
how about how I implement the callback

414
00:27:41,269 --> 00:27:49,309
function the name is and it has a

415
00:27:43,639 --> 00:27:54,228
coverage with PC I implement it and

416
00:27:49,309 --> 00:27:57,489
there are some limitations company it it

417
00:27:54,229 --> 00:28:04,219
has to support a single strand mode and

418
00:27:57,489 --> 00:28:07,570
I use reuse the task T structure add

419
00:28:04,219 --> 00:28:12,829
some structure Vindi which is needed by

420
00:28:07,570 --> 00:28:18,320
the code coverage model into Tasker T

421
00:28:12,829 --> 00:28:22,779
instruction this is a result after I

422
00:28:18,320 --> 00:28:27,109
added at the module into X a new and

423
00:28:22,779 --> 00:28:33,079
compile the panel you can see it from

424
00:28:27,109 --> 00:28:36,579
either it looks Nexus I added every sin

425
00:28:33,079 --> 00:28:41,928
it has a crispy C function into every

426
00:28:36,579 --> 00:28:44,539
block blocks each block has since has a

427
00:28:41,929 --> 00:28:46,809
tree species so we can get the code

428
00:28:44,539 --> 00:28:46,809
coverage

429
00:28:49,160 --> 00:28:59,140
this is an example of I run I run the

430
00:28:54,620 --> 00:29:06,530
tour you can see the the cover column

431
00:28:59,140 --> 00:29:10,490
the coverage rate increase and I also

432
00:29:06,530 --> 00:29:17,260
get a lot of crashes and the number here

433
00:29:10,490 --> 00:29:22,670
is Europe current address sanitizer as I

434
00:29:17,260 --> 00:29:23,890
said just now the neediest xnu has

435
00:29:22,670 --> 00:29:26,630
killed some support

436
00:29:23,890 --> 00:29:29,900
chemically now provides the kernel

437
00:29:26,630 --> 00:29:32,270
casein which works very well but if you

438
00:29:29,900 --> 00:29:35,660
want to add some coats into the

439
00:29:32,270 --> 00:29:38,290
exajoules such as coverage cause you

440
00:29:35,660 --> 00:29:42,170
must are combined by yourselves but

441
00:29:38,290 --> 00:29:49,040
after combination I can't put my vm

442
00:29:42,170 --> 00:29:52,810
fusion next I will introduce kaanum

443
00:29:49,040 --> 00:29:56,060
memory sanitizer for your it consists of

444
00:29:52,810 --> 00:29:59,750
carpet is jeanna memory and operations

445
00:29:56,060 --> 00:30:03,440
it is used to protect clubbers stack and

446
00:29:59,750 --> 00:30:07,390
heap memory let's see how cannot address

447
00:30:03,440 --> 00:30:10,790
and it has a can help protect memory

448
00:30:07,390 --> 00:30:11,420
when you enable kiss on color memories

449
00:30:10,790 --> 00:30:14,480
in hazard

450
00:30:11,420 --> 00:30:17,240
if your call call a function name the

451
00:30:14,480 --> 00:30:20,720
string I'll copy actually you'll cause

452
00:30:17,240 --> 00:30:22,990
the a-sun string I'll copy and inside

453
00:30:20,720 --> 00:30:28,910
this function is it will check the

454
00:30:22,990 --> 00:30:34,360
shadow memory if it is Nico if not paste

455
00:30:28,910 --> 00:30:38,840
on will panic the xnu kernel this is a

456
00:30:34,360 --> 00:30:42,709
garbage and the shadow memory of Kasaan

457
00:30:38,840 --> 00:30:47,510
when you allocate arrange on memory

458
00:30:42,710 --> 00:30:50,990
Jason will add to cart page the left

459
00:30:47,510 --> 00:30:57,129
color page and is already got a page and

460
00:30:50,990 --> 00:31:00,320
then it also has Rene the shadow memory

461
00:30:57,130 --> 00:31:02,040
and the size of the shadow memory is 1/8

462
00:31:00,320 --> 00:31:05,220
of the water memory

463
00:31:02,040 --> 00:31:10,139
I will give you an ism of how to detect

464
00:31:05,220 --> 00:31:12,690
UAF by using casein later okay now these

465
00:31:10,140 --> 00:31:15,630
operations operations actually is the

466
00:31:12,690 --> 00:31:18,180
tricky trigger points when you'll cause

467
00:31:15,630 --> 00:31:22,280
some operations it will checks the

468
00:31:18,180 --> 00:31:27,270
shadow memory if it is nico there are

469
00:31:22,280 --> 00:31:30,060
too many operations in case on china and

470
00:31:27,270 --> 00:31:32,700
i divided them into three groups the

471
00:31:30,060 --> 00:31:36,270
first group is heap memory related

472
00:31:32,700 --> 00:31:39,840
operations for examples of pig copy

473
00:31:36,270 --> 00:31:42,800
memory copy memories that if you call

474
00:31:39,840 --> 00:31:45,480
you call him actually you call the islam

475
00:31:42,800 --> 00:31:48,659
because in some memory moon is some

476
00:31:45,480 --> 00:31:53,870
memory copy and the second group is

477
00:31:48,660 --> 00:31:58,890
stack related these operations are

478
00:31:53,870 --> 00:32:01,709
instructed by the compiler and other

479
00:31:58,890 --> 00:32:06,560
memory operations such as is unload a

480
00:32:01,710 --> 00:32:11,850
sandstorm you see that the heap memory

481
00:32:06,560 --> 00:32:12,929
operations is from the define in kids

482
00:32:11,850 --> 00:32:16,919
are enabled

483
00:32:12,930 --> 00:32:20,810
actually it defines string hobby as a

484
00:32:16,920 --> 00:32:24,600
son string copy and if in case on

485
00:32:20,810 --> 00:32:29,540
instrumentation it if you turn on the f

486
00:32:24,600 --> 00:32:32,280
sanitizers which the son stack molecule

487
00:32:29,540 --> 00:32:34,470
functions will be instructed into the

488
00:32:32,280 --> 00:32:37,910
case on okay some kernel memory

489
00:32:34,470 --> 00:32:42,150
okay and there are also some other cause

490
00:32:37,910 --> 00:32:45,660
which is building in it acts a new

491
00:32:42,150 --> 00:32:48,900
source code this is an example of how

492
00:32:45,660 --> 00:32:52,740
kids are happy you detect the UAF when

493
00:32:48,900 --> 00:32:56,430
you allocate a little memory and an eye

494
00:32:52,740 --> 00:32:58,770
and the memory is aligned with 8 the

495
00:32:56,430 --> 00:33:04,050
shadow memory the related shadow memory

496
00:32:58,770 --> 00:33:08,129
is marked as value 0 and when this

497
00:33:04,050 --> 00:33:10,830
memory is freed the native the shadow

498
00:33:08,130 --> 00:33:15,899
memory becomes some negative values such

499
00:33:10,830 --> 00:33:21,119
as FF f DF e FF other one

500
00:33:15,899 --> 00:33:26,399
this means this is Inigo now and then if

501
00:33:21,119 --> 00:33:30,658
you access it such as use the other

502
00:33:26,399 --> 00:33:34,228
three you use it the operation will

503
00:33:30,659 --> 00:33:39,269
check if the value is negative is Inigo

504
00:33:34,229 --> 00:33:42,440
if it is such as FF it is Inigo then it

505
00:33:39,269 --> 00:33:42,440
will Penix the Kuna

506
00:33:44,249 --> 00:33:50,099
next is Cano's memory Sinhalese is very

507
00:33:47,519 --> 00:33:54,659
simple is it is just the used to detect

508
00:33:50,099 --> 00:33:57,570
initialize the memory read we just

509
00:33:54,659 --> 00:34:00,539
worked on how to initialize all the I

510
00:33:57,570 --> 00:34:04,649
initialized memory allocated in kuno

511
00:34:00,539 --> 00:34:08,940
such as ko-nach can block and see this

512
00:34:04,649 --> 00:34:11,549
is very in simple exam just add some

513
00:34:08,940 --> 00:34:16,790
memo said function into the X a new

514
00:34:11,549 --> 00:34:24,569
source code to member set other memory

515
00:34:16,790 --> 00:34:30,049
into te and this is an example of my

516
00:34:24,569 --> 00:34:35,639
father that it has some I initialized

517
00:34:30,049 --> 00:34:38,989
hip-hip Nick since I add new Cisco into

518
00:34:35,639 --> 00:34:44,339
X a new the name is panic or report and

519
00:34:38,989 --> 00:34:49,589
it detects that cause some after calling

520
00:34:44,339 --> 00:34:54,839
some API the API with hence some

521
00:34:49,589 --> 00:34:58,770
continuous te fighters and it will cause

522
00:34:54,839 --> 00:35:03,779
the pinnacle or report function to panic

523
00:34:58,770 --> 00:35:08,490
you know then I got the panic log just

524
00:35:03,780 --> 00:35:14,910
the review it I got this zero day okay

525
00:35:08,490 --> 00:35:17,939
just nasty conclusion here smart X in

526
00:35:14,910 --> 00:35:23,700
your father consists of syntax engine

527
00:35:17,940 --> 00:35:26,670
also includes API patterns and the

528
00:35:23,700 --> 00:35:28,348
sanitizers the code coverage color

529
00:35:26,670 --> 00:35:34,970
address and it has Anakin

530
00:35:28,349 --> 00:35:34,970
a sanitizer okay okay Nazis output

531
00:35:35,039 --> 00:35:41,729
I just an East mister some GDR cases

532
00:35:38,880 --> 00:35:46,619
here and which most of them are not

533
00:35:41,729 --> 00:35:48,960
fixed by Apple so I can't deter gives a

534
00:35:46,619 --> 00:35:54,089
detailed information here but after

535
00:35:48,960 --> 00:35:57,680
Apple fixed them I can show you the

536
00:35:54,089 --> 00:36:01,890
detailed information as soon as possible

537
00:35:57,680 --> 00:36:04,348
in my maybe min my Twitter account some

538
00:36:01,890 --> 00:36:09,660
similar errors okay

539
00:36:04,349 --> 00:36:13,019
and also this is another cases I also

540
00:36:09,660 --> 00:36:19,589
use this tool to detect more than 20

541
00:36:13,019 --> 00:36:23,399
cases which of type a Stephanie or lam

542
00:36:19,589 --> 00:36:25,558
point different D references as you may

543
00:36:23,400 --> 00:36:29,960
know Apple now doesn't recognize these

544
00:36:25,559 --> 00:36:34,849
kind cases as well abilities but I still

545
00:36:29,960 --> 00:36:40,430
plan to submit them to Apple and will

546
00:36:34,849 --> 00:36:42,210
give the details after Apple fix to them

547
00:36:40,430 --> 00:36:47,538
okay

548
00:36:42,210 --> 00:36:51,390
as our two I also have some plans to

549
00:36:47,539 --> 00:36:55,289
continue developers is to I plan to

550
00:36:51,390 --> 00:36:59,910
support kernel extension I plan to

551
00:36:55,289 --> 00:37:04,829
support our kit and please pay attention

552
00:36:59,910 --> 00:37:07,410
here I have planned to suppose I'll kill

553
00:37:04,829 --> 00:37:11,160
this code coverage as you may know our

554
00:37:07,410 --> 00:37:15,269
kid is closed sauced binaries we can't

555
00:37:11,160 --> 00:37:19,078
use the LLVM to instructor some cover

556
00:37:15,269 --> 00:37:22,200
functions into our kid binary to get the

557
00:37:19,079 --> 00:37:26,249
code coverage so this is a big challenge

558
00:37:22,200 --> 00:37:31,519
and I also have plan to support a

559
00:37:26,249 --> 00:37:34,348
passive fuzzing into this tour also

560
00:37:31,519 --> 00:37:39,120
develop more and more covers into this

561
00:37:34,349 --> 00:37:43,080
tour there's a question for me that too

562
00:37:39,120 --> 00:37:47,940
I have plan to merge this tour into his

563
00:37:43,080 --> 00:37:50,400
collar and not true to this part it's

564
00:37:47,940 --> 00:37:53,370
very hard for me because I changed the

565
00:37:50,400 --> 00:38:00,150
too much code too much codes in this

566
00:37:53,370 --> 00:38:02,359
project so it is not easy too much into

567
00:38:00,150 --> 00:38:05,250
this collar

568
00:38:02,360 --> 00:38:13,680
okay I see some I show you some pictures

569
00:38:05,250 --> 00:38:16,770
here to explain the future plans then

570
00:38:13,680 --> 00:38:21,419
this picture is describes the our kids

571
00:38:16,770 --> 00:38:24,210
support in our tour I already I am

572
00:38:21,420 --> 00:38:27,000
developing this feature and I already

573
00:38:24,210 --> 00:38:34,920
added some our kid modules into this

574
00:38:27,000 --> 00:38:39,720
tour and this is about adings passing

575
00:38:34,920 --> 00:38:45,000
fuzzy into this tour and I am I'm still

576
00:38:39,720 --> 00:38:51,330
developing this feature and it can run

577
00:38:45,000 --> 00:38:56,070
now but not very cool and ok the same

578
00:38:51,330 --> 00:38:58,529
and this is a picture about the al-qaeda

579
00:38:56,070 --> 00:39:02,270
code coverage I'm not sure if you are

580
00:38:58,530 --> 00:39:08,760
increasing this one but this is are very

581
00:39:02,270 --> 00:39:12,720
valuable for me because for or close the

582
00:39:08,760 --> 00:39:20,250
sauce pan Ares is not it is not easy to

583
00:39:12,720 --> 00:39:23,939
get good coverage from them I have it it

584
00:39:20,250 --> 00:39:28,950
cost me a much efforts here to add

585
00:39:23,940 --> 00:39:32,760
support for coverage for these close

586
00:39:28,950 --> 00:39:38,100
austere Penry's as you can see in this

587
00:39:32,760 --> 00:39:41,040
picture this is an example of a PhD a

588
00:39:38,100 --> 00:39:44,569
which is close the source code and I

589
00:39:41,040 --> 00:39:48,509
already done the work that I can

590
00:39:44,570 --> 00:39:52,740
instructed the copper functions

591
00:39:48,510 --> 00:39:57,480
I wrote into each block of the AL kit

592
00:39:52,740 --> 00:40:01,709
up at Ta so now I can get coverage from

593
00:39:57,480 --> 00:40:03,960
all the closer sourced binaries cone

594
00:40:01,710 --> 00:40:08,600
opener is also includes the user mode

595
00:40:03,960 --> 00:40:13,350
closed-source de binary's okay because

596
00:40:08,600 --> 00:40:15,720
there are too many impending cases I I

597
00:40:13,350 --> 00:40:19,529
put doesn't fix them

598
00:40:15,720 --> 00:40:21,930
so after Apple fix them I will release

599
00:40:19,530 --> 00:40:28,190
detailed information as soon as possible

600
00:40:21,930 --> 00:40:32,100
in my Twitter account and also after I

601
00:40:28,190 --> 00:40:34,410
release the net histor build I also you

602
00:40:32,100 --> 00:40:38,270
know that you know when it is possible

603
00:40:34,410 --> 00:40:42,270
for me to open source it but it is

604
00:40:38,270 --> 00:40:44,700
currently it is not a right time for

605
00:40:42,270 --> 00:40:48,540
open source is true the reason is

606
00:40:44,700 --> 00:40:51,810
because if I release it today you can

607
00:40:48,540 --> 00:40:56,700
use it within maybe one hour to find

608
00:40:51,810 --> 00:40:58,710
maybe 10 or 20 cases which is not

609
00:40:56,700 --> 00:41:02,490
patched by Apple

610
00:40:58,710 --> 00:41:03,119
so after Apple fixed all the cases I

611
00:41:02,490 --> 00:41:06,240
found it

612
00:41:03,119 --> 00:41:10,140
maybe I can open source it okay got it

613
00:41:06,240 --> 00:41:12,660
and acknowledgement very as you know

614
00:41:10,140 --> 00:41:15,060
from the first night through the end

615
00:41:12,660 --> 00:41:18,839
start I mentioned too many times also

616
00:41:15,060 --> 00:41:22,320
google says : yes i justed to work about

617
00:41:18,840 --> 00:41:25,260
porting 6 color to support Mac OS and I

618
00:41:22,320 --> 00:41:31,670
was kind of the China xnu

619
00:41:25,260 --> 00:41:35,390
so big thanks to Google projectors : ok

620
00:41:31,670 --> 00:41:35,390
often me thanks and

