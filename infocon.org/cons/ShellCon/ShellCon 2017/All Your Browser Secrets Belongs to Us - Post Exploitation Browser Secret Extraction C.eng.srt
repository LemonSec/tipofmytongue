1
00:00:23,550 --> 00:00:26,690
[Music]

2
00:00:35,840 --> 00:00:38,899
[Music]

3
00:00:47,420 --> 00:00:52,059
[Applause]

4
00:00:50,670 --> 00:00:53,559
thank you

5
00:00:52,059 --> 00:00:55,269
all right so in case y'all haven't

6
00:00:53,559 --> 00:00:58,239
guessed from the slides we're gonna be

7
00:00:55,270 --> 00:00:59,620
talking about browser secrets today so I

8
00:00:58,239 --> 00:01:01,510
don't think we really need to go over

9
00:00:59,620 --> 00:01:06,908
this but the main takeaway here is that

10
00:01:01,510 --> 00:01:08,530
I am NOT Julia Stiles some of the just

11
00:01:06,909 --> 00:01:12,729
interesting things here is like it says

12
00:01:08,530 --> 00:01:15,220
there in my bio there junkie I'd like to

13
00:01:12,729 --> 00:01:17,800
do a bunch of different things from

14
00:01:15,220 --> 00:01:20,340
Tesla coils to plasma speakers to all

15
00:01:17,800 --> 00:01:20,340
sorts of different

16
00:01:26,429 --> 00:01:32,320
alrightso browsers this is obviously a

17
00:01:29,950 --> 00:01:34,539
post exploitation talk somehow some way

18
00:01:32,320 --> 00:01:36,669
through magic you have gotten an initial

19
00:01:34,539 --> 00:01:38,830
foothold on an indie users computer and

20
00:01:36,670 --> 00:01:43,899
so the big question becomes how do you

21
00:01:38,830 --> 00:01:45,130
go from here to here the whole point is

22
00:01:43,899 --> 00:01:51,910
you want to burn it down from the inside

23
00:01:45,130 --> 00:01:55,179
right maybe not literally but but that's

24
00:01:51,910 --> 00:01:56,950
always where you win again so one of the

25
00:01:55,179 --> 00:01:58,869
best ways to do this is with lateral

26
00:01:56,950 --> 00:02:00,610
movements now there's a lot of different

27
00:01:58,869 --> 00:02:02,020
ways to go about doing this and I'm not

28
00:02:00,610 --> 00:02:03,399
gonna touch on really any of those

29
00:02:02,020 --> 00:02:06,250
during this talk we're just gonna be

30
00:02:03,399 --> 00:02:08,649
talking on browsers so browsers are

31
00:02:06,250 --> 00:02:10,630
excellent they are gateways they let us

32
00:02:08,649 --> 00:02:13,420
access the public Internet and all the

33
00:02:10,630 --> 00:02:15,970
amazing fun cat means that you can find

34
00:02:13,420 --> 00:02:18,129
out there but they also are great for

35
00:02:15,970 --> 00:02:20,230
organizations to give end-users access

36
00:02:18,129 --> 00:02:22,149
to very sensitive services and

37
00:02:20,230 --> 00:02:23,769
interfaces so in order to do that

38
00:02:22,150 --> 00:02:25,420
they're going to be giving these users

39
00:02:23,770 --> 00:02:28,000
credentials and when they authenticate

40
00:02:25,420 --> 00:02:29,769
they get cookies and so browsers house

41
00:02:28,000 --> 00:02:32,860
these cookies and the question is how

42
00:02:29,770 --> 00:02:34,750
secure are those if I get access to your

43
00:02:32,860 --> 00:02:36,400
laptop how secure are those cookies can

44
00:02:34,750 --> 00:02:38,860
actually take advantage of it and then

45
00:02:36,400 --> 00:02:41,110
also a lot of while all these major

46
00:02:38,860 --> 00:02:43,180
browsers as well as others now include

47
00:02:41,110 --> 00:02:44,800
password managers which is really fun

48
00:02:43,180 --> 00:02:46,120
and awesome and really convenient for

49
00:02:44,800 --> 00:02:48,280
the end user when you're authenticating

50
00:02:46,120 --> 00:02:49,830
to these services but then the question

51
00:02:48,280 --> 00:02:51,230
becomes how secure are those credentials

52
00:02:49,830 --> 00:02:55,410
[Music]

53
00:02:51,230 --> 00:02:56,269
all right except me are we good all

54
00:02:55,410 --> 00:03:16,440
right cool

55
00:02:56,270 --> 00:03:17,730
so secret storage so Firefox this

56
00:03:16,440 --> 00:03:20,099
browser is really great it's open source

57
00:03:17,730 --> 00:03:22,230
the tor browser is actually based off of

58
00:03:20,099 --> 00:03:24,238
it so one would think that they take

59
00:03:22,230 --> 00:03:27,030
security at least from the end users

60
00:03:24,239 --> 00:03:29,130
standpoint pretty seriously suffice to

61
00:03:27,030 --> 00:03:31,170
say I was pretty disappointed and still

62
00:03:29,130 --> 00:03:33,480
at this point if this isn't news that

63
00:03:31,170 --> 00:03:36,390
they are still storing cookies in plain

64
00:03:33,480 --> 00:03:39,060
text in databases and in JSON files

65
00:03:36,390 --> 00:03:40,950
taste on ich filed and the reason why I

66
00:03:39,060 --> 00:03:42,390
say dish it's because they're only JSON

67
00:03:40,950 --> 00:03:44,730
like straight JSON when you're on a

68
00:03:42,390 --> 00:03:45,839
Linux flavored distro right if you're on

69
00:03:44,730 --> 00:03:48,510
Mac or Windows

70
00:03:45,840 --> 00:03:52,380
they actually compress it using lv4 why

71
00:03:48,510 --> 00:03:54,750
I don't know but they do but if you just

72
00:03:52,380 --> 00:03:57,799
throw this file as is as an LD for

73
00:03:54,750 --> 00:03:57,799
utility it's gonna pour

74
00:04:02,730 --> 00:04:33,180
mine's been the one that's been causing

75
00:04:05,489 --> 00:04:35,370
the problem see all right so back to the

76
00:04:33,180 --> 00:04:37,620
LZ for compressed recovery JSON file

77
00:04:35,370 --> 00:04:38,820
this file actually stores authenticated

78
00:04:37,620 --> 00:04:40,860
cookies so it's gonna be super

79
00:04:38,820 --> 00:04:42,990
interesting to you as a penetration

80
00:04:40,860 --> 00:04:44,910
tester but if you just throw the

81
00:04:42,990 --> 00:04:46,770
compressed file out of utility it's

82
00:04:44,910 --> 00:04:48,300
gonna work and the reason for that is

83
00:04:46,770 --> 00:04:49,650
Mozilla for whatever reasons decided

84
00:04:48,300 --> 00:04:51,419
that they were going to add a magic

85
00:04:49,650 --> 00:04:53,460
number like creep into the file with a

86
00:04:51,419 --> 00:04:54,780
magic number very easy to bypass you

87
00:04:53,460 --> 00:04:56,400
just get rid of the magic number throw

88
00:04:54,780 --> 00:04:58,169
it at the utility and it's decompress is

89
00:04:56,400 --> 00:05:02,429
it fine but I mean even if for whatever

90
00:04:58,169 --> 00:05:03,960
reason you don't have that available but

91
00:05:02,430 --> 00:05:07,620
believe me there are cookies over here

92
00:05:03,960 --> 00:05:09,479
and you can read New York Times so there

93
00:05:07,620 --> 00:05:11,729
there's real session cookies in that

94
00:05:09,479 --> 00:05:16,590
file and they're very easy to see it's

95
00:05:11,729 --> 00:05:19,080
been with deal with it all right

96
00:05:16,590 --> 00:05:20,310
so just to make it a little clearer this

97
00:05:19,080 --> 00:05:24,240
is an authentic aided session with

98
00:05:20,310 --> 00:05:28,770
github and the top here is chatting out

99
00:05:24,240 --> 00:05:30,120
the the recovery JSON file and then

100
00:05:28,770 --> 00:05:32,190
below we've got a sequel Lite database

101
00:05:30,120 --> 00:05:33,479
and as you can see the authenticated

102
00:05:32,190 --> 00:05:35,789
cookie the one that's actually gonna get

103
00:05:33,479 --> 00:05:37,469
use gold is in the recovery files and

104
00:05:35,789 --> 00:05:39,479
then you've got several other cookies

105
00:05:37,470 --> 00:05:40,830
that's github return Twitter buff

106
00:05:39,479 --> 00:05:44,340
indicated and those are in the sequel

107
00:05:40,830 --> 00:05:46,620
Lite database so all plaintext there's

108
00:05:44,340 --> 00:05:47,820
really no bar there except you got to

109
00:05:46,620 --> 00:05:51,150
get on at the system to get access to

110
00:05:47,820 --> 00:05:52,830
them so they fail on cookies with

111
00:05:51,150 --> 00:05:55,109
passwords they seem to be doing just a

112
00:05:52,830 --> 00:05:57,659
little bit better so the way that

113
00:05:55,110 --> 00:05:59,400
password storage works on Firefox it

114
00:05:57,660 --> 00:06:01,500
takes your credentials and it's going to

115
00:05:59,400 --> 00:06:03,539
store them in one of two files one of

116
00:06:01,500 --> 00:06:04,740
them is going to be login CAS or the or

117
00:06:03,539 --> 00:06:06,270
they're going to be storing it in the

118
00:06:04,740 --> 00:06:09,000
sequel Lite database sign-on sucks

119
00:06:06,270 --> 00:06:10,948
people like I have no idea why they keep

120
00:06:09,000 --> 00:06:12,690
going back and forth between the two

121
00:06:10,949 --> 00:06:14,160
it's really strange instead of just

122
00:06:12,690 --> 00:06:16,500
choosing one file and going with it but

123
00:06:14,160 --> 00:06:19,110
this is what they do these credentials

124
00:06:16,500 --> 00:06:21,150
are encrypted using what they call a

125
00:06:19,110 --> 00:06:24,659
secret decoder ring key and salt and

126
00:06:21,150 --> 00:06:27,359
that those values are stored in the key

127
00:06:24,659 --> 00:06:29,099
three database ideally they're gonna be

128
00:06:27,360 --> 00:06:32,099
encrypted because the user has said a

129
00:06:29,099 --> 00:06:34,889
master password and so theoretically it

130
00:06:32,099 --> 00:06:37,710
sounds pretty good it should be pretty

131
00:06:34,889 --> 00:06:38,819
decent this designed the overall scheme

132
00:06:37,710 --> 00:06:39,948
here just to make it a little more clear

133
00:06:38,819 --> 00:06:42,539
it's not something that I put together

134
00:06:39,949 --> 00:06:45,930
totally stole that from ray Dorset great

135
00:06:42,539 --> 00:06:46,889
write-up on this but it's I thought I'd

136
00:06:45,930 --> 00:06:52,340
include it to make it just a little

137
00:06:46,889 --> 00:06:52,340
clearer all right so first it's demo

138
00:06:54,660 --> 00:07:01,600
this is initial install for Firefox just

139
00:06:59,020 --> 00:07:03,310
to validate whether or not they set up

140
00:07:01,600 --> 00:07:05,380
or they prompt the user to set up a

141
00:07:03,310 --> 00:07:07,780
master password upon the initial figure

142
00:07:05,380 --> 00:07:09,460
of configuration so the first time that

143
00:07:07,780 --> 00:07:11,650
you want them to gate to a site and asks

144
00:07:09,460 --> 00:07:13,450
you if you want to save credentials

145
00:07:11,650 --> 00:07:14,469
using their password manager one would

146
00:07:13,450 --> 00:07:16,120
hope that they're gonna walk you through

147
00:07:14,470 --> 00:07:18,250
also setting up with the master password

148
00:07:16,120 --> 00:07:19,750
since that's like the key component to

149
00:07:18,250 --> 00:07:39,730
ensuring that this entire encryption

150
00:07:19,750 --> 00:07:43,690
scheme is going to be secure signing in

151
00:07:39,730 --> 00:07:44,800
and this is a throwaway account you're

152
00:07:43,690 --> 00:07:49,650
going to see the password to it later

153
00:07:44,800 --> 00:07:49,650
which is super secure have fun

154
00:07:50,550 --> 00:07:55,860
I did this very late at night coming

155
00:07:52,470 --> 00:07:58,250
flying in from so that's why it's a

156
00:07:55,860 --> 00:07:58,250
little slow

157
00:08:02,129 --> 00:08:05,520
all right so it asked if we want to save

158
00:08:04,139 --> 00:08:07,289
the password but there's no prompt

159
00:08:05,520 --> 00:08:08,159
asking for the master password to take

160
00:08:07,289 --> 00:08:11,128
me through it on the initial

161
00:08:08,159 --> 00:08:14,308
configuration which really renders the

162
00:08:11,129 --> 00:08:14,969
entire thing null and void it's super

163
00:08:14,309 --> 00:08:17,369
disappointing

164
00:08:14,969 --> 00:08:19,319
so no master password set on its initial

165
00:08:17,369 --> 00:08:21,599
configuration and as you can see just

166
00:08:19,319 --> 00:08:22,979
taking a simple script and decrypting it

167
00:08:21,599 --> 00:08:24,839
since there's no master password and a

168
00:08:22,979 --> 00:08:28,139
lot of users do not configure master

169
00:08:24,839 --> 00:08:31,379
passwords its arbitrary to recover these

170
00:08:28,139 --> 00:08:32,880
credentials so when we're scoring them

171
00:08:31,379 --> 00:08:34,740
and we will be scoring them as we get

172
00:08:32,880 --> 00:08:37,500
through Firefox I think we failed on

173
00:08:34,740 --> 00:08:45,540
cookies and only has a semi password

174
00:08:37,500 --> 00:08:47,069
well yeah if you if you uninstall it and

175
00:08:45,540 --> 00:08:48,540
reinstall it doesn't delete any of the

176
00:08:47,069 --> 00:08:51,060
databases but I believe that that's more

177
00:08:48,540 --> 00:08:52,349
of a user like to excuse me if you have

178
00:08:51,060 --> 00:08:53,250
an issue with the application they needs

179
00:08:52,350 --> 00:08:54,839
you need to reinstall it you're not

180
00:08:53,250 --> 00:08:55,949
going to lose your entire database it's

181
00:08:54,839 --> 00:08:57,569
higher database but that's just

182
00:08:55,949 --> 00:08:59,099
something to be aware of you're going to

183
00:08:57,569 --> 00:09:00,959
be sharing computers you want to truly

184
00:08:59,100 --> 00:09:09,689
wipe it or if you are a pen tester you

185
00:09:00,959 --> 00:09:11,819
don't have to absolutely all right so

186
00:09:09,689 --> 00:09:13,889
next up we have Safari safaris put out

187
00:09:11,819 --> 00:09:15,959
by Apple and Apple seems to have a very

188
00:09:13,889 --> 00:09:17,579
take security pretty seriously so one

189
00:09:15,959 --> 00:09:19,529
would hope that that would be reflected

190
00:09:17,579 --> 00:09:22,019
here as well unfortunately that's not

191
00:09:19,529 --> 00:09:24,300
the case the file that it's stored in is

192
00:09:22,019 --> 00:09:25,290
a cookie stop binary cookies file and as

193
00:09:24,300 --> 00:09:27,750
you would guess from the name of the

194
00:09:25,290 --> 00:09:29,730
file it is a binary format proprietary

195
00:09:27,750 --> 00:09:31,500
binary format there's no official

196
00:09:29,730 --> 00:09:33,449
documentation on the actual format of

197
00:09:31,500 --> 00:09:35,699
this file but it's arbitrary to reverse

198
00:09:33,449 --> 00:09:38,370
and to figure out exactly what's go well

199
00:09:35,699 --> 00:09:40,949
I have an echo now exactly what's going

200
00:09:38,370 --> 00:09:42,540
on with it and there's tons of people

201
00:09:40,949 --> 00:09:44,819
that have actually looked into this

202
00:09:42,540 --> 00:09:46,889
there's scripts available the the one of

203
00:09:44,819 --> 00:09:49,290
the better ones is the binaries cookie

204
00:09:46,889 --> 00:09:51,089
reader to use to recover these files and

205
00:09:49,290 --> 00:09:53,459
again you can't see but if you just

206
00:09:51,089 --> 00:09:54,709
throw it into xxd it's gonna you're

207
00:09:53,459 --> 00:09:59,310
gonna be able to see the cookies as well

208
00:09:54,709 --> 00:10:01,529
so they are stored somewhat obscurely

209
00:09:59,310 --> 00:10:03,839
but again not encrypted so it's really

210
00:10:01,529 --> 00:10:05,160
security by obscurity that is highly

211
00:10:03,839 --> 00:10:06,660
unaffected I wouldn't even really say

212
00:10:05,160 --> 00:10:09,990
that this is a security

213
00:10:06,660 --> 00:10:12,120
security at its finest tanning

214
00:10:09,990 --> 00:10:13,589
tongue-in-cheek yeah of course because a

215
00:10:12,120 --> 00:10:15,120
lot of what what ends up happening in

216
00:10:13,589 --> 00:10:16,560
this is just the way that they organized

217
00:10:15,120 --> 00:10:18,240
it you can tell that either somebody

218
00:10:16,560 --> 00:10:20,128
that put this together came from like a

219
00:10:18,240 --> 00:10:22,050
really heavy sea or COBOL background

220
00:10:20,129 --> 00:10:23,639
because they're really focusing on just

221
00:10:22,050 --> 00:10:24,959
the way that the data structure is set

222
00:10:23,639 --> 00:10:27,899
up and like that's the thing that

223
00:10:24,959 --> 00:10:30,810
matters to them it's actually really

224
00:10:27,899 --> 00:10:32,370
really interesting and cool but it's not

225
00:10:30,810 --> 00:10:36,628
exactly saving as much space I don't

226
00:10:32,370 --> 00:10:40,170
think as they think it does yeah it

227
00:10:36,629 --> 00:10:41,610
happens there you have it all right but

228
00:10:40,170 --> 00:10:43,139
with passwords Suvari actually does a

229
00:10:41,610 --> 00:10:46,050
lot better

230
00:10:43,139 --> 00:10:49,500
so safari uses the you know it built-in

231
00:10:46,050 --> 00:10:51,000
keychain utility to store passwords but

232
00:10:49,500 --> 00:10:52,800
it goes one step further instead of

233
00:10:51,000 --> 00:10:55,259
storing it in the log in p chain which

234
00:10:52,800 --> 00:10:57,810
is up there at the top well you can't

235
00:10:55,259 --> 00:10:59,399
see my screens too wide there's a login

236
00:10:57,810 --> 00:11:00,508
keychain up at the top for those of you

237
00:10:59,399 --> 00:11:03,180
who aren't familiar with the keychain

238
00:11:00,509 --> 00:11:04,680
utility and that's the keychain that

239
00:11:03,180 --> 00:11:05,819
most applications third-party

240
00:11:04,680 --> 00:11:08,069
applications if they're going to make

241
00:11:05,819 --> 00:11:09,839
use of the keychain protocol will be

242
00:11:08,069 --> 00:11:12,329
storing those credentials or whatever

243
00:11:09,839 --> 00:11:14,339
secrets that they're storing them Safari

244
00:11:12,329 --> 00:11:16,019
stores them in local items now the

245
00:11:14,339 --> 00:11:17,670
reason why this is good it's because

246
00:11:16,019 --> 00:11:19,620
there is a command-line utility that's

247
00:11:17,670 --> 00:11:21,449
called security command-line utility

248
00:11:19,620 --> 00:11:24,000
that you can use to access the keychain

249
00:11:21,449 --> 00:11:25,410
you can't list out the local items

250
00:11:24,000 --> 00:11:26,730
keychain when you just try to list

251
00:11:25,410 --> 00:11:30,240
whatever key chains it has access to

252
00:11:26,730 --> 00:11:31,529
it's not included so that's that's one

253
00:11:30,240 --> 00:11:33,029
thing right there that that's good

254
00:11:31,529 --> 00:11:35,220
that's difference in depth makes it that

255
00:11:33,029 --> 00:11:36,839
much harder for a pen tester to get

256
00:11:35,220 --> 00:11:38,370
access to it

257
00:11:36,839 --> 00:11:40,470
but in addition to that since they're

258
00:11:38,370 --> 00:11:42,750
using it in the keychain you have to

259
00:11:40,470 --> 00:11:44,160
have the users password to recover these

260
00:11:42,750 --> 00:11:46,500
credentials so you can't just dump it

261
00:11:44,160 --> 00:11:49,559
through a keychain bypass you need you

262
00:11:46,500 --> 00:11:50,970
need in addition to the users password

263
00:11:49,559 --> 00:11:52,290
you have to actually be able to get

264
00:11:50,970 --> 00:11:53,519
access to that local items so if you

265
00:11:52,290 --> 00:11:56,309
only have CLI access you're kind of

266
00:11:53,519 --> 00:11:59,430
screwed so when it comes to passwords

267
00:11:56,309 --> 00:12:00,750
they definitely are doing good they have

268
00:11:59,430 --> 00:12:02,239
a great success rate on that but they

269
00:12:00,750 --> 00:12:04,829
just epically failed with the cookies

270
00:12:02,240 --> 00:12:09,089
which in the end if you've got one or

271
00:12:04,829 --> 00:12:10,979
the other you're you it's a win so next

272
00:12:09,089 --> 00:12:12,839
up Internet Explorer that you can't see

273
00:12:10,980 --> 00:12:14,009
at the edge but that is Internet

274
00:12:12,839 --> 00:12:15,180
Explorer an edge we're going to just

275
00:12:14,009 --> 00:12:17,250
going to lump them all together just

276
00:12:15,180 --> 00:12:19,469
like all the rest of the browsers they

277
00:12:17,250 --> 00:12:20,070
to store in plain text because that just

278
00:12:19,470 --> 00:12:24,750
seems to be the running

279
00:12:20,070 --> 00:12:26,220
trends they store them in arbitrary area

280
00:12:24,750 --> 00:12:27,660
it's all throughout the operating system

281
00:12:26,220 --> 00:12:30,150
so it does make it just a little more

282
00:12:27,660 --> 00:12:32,670
difficult to find them and then the

283
00:12:30,150 --> 00:12:33,689
actual files themselves it's a hash that

284
00:12:32,670 --> 00:12:35,699
their names with and I think it's like a

285
00:12:33,690 --> 00:12:38,220
hash of the that whatever site or

286
00:12:35,700 --> 00:12:39,720
application that it's targeting but it's

287
00:12:38,220 --> 00:12:42,510
a hash that they're using and then dot

288
00:12:39,720 --> 00:12:44,400
cookies so there you go but if you throw

289
00:12:42,510 --> 00:12:46,560
into notepad or you know take it off and

290
00:12:44,400 --> 00:12:48,000
throw it into them it's it's it's all

291
00:12:46,560 --> 00:12:50,069
plain text it's really easy to to

292
00:12:48,000 --> 00:12:52,800
recover those so no surprise there

293
00:12:50,070 --> 00:12:55,920
they do a little bit better there and

294
00:12:52,800 --> 00:12:57,870
with their password storage and more

295
00:12:55,920 --> 00:12:59,280
emulating Safari in the sense that

296
00:12:57,870 --> 00:13:02,670
they're trying to make use of the

297
00:12:59,280 --> 00:13:04,220
built-in credential storage utility that

298
00:13:02,670 --> 00:13:07,680
they haven't and theirs is called vault

299
00:13:04,220 --> 00:13:10,170
so this is really good when it comes to

300
00:13:07,680 --> 00:13:11,609
applications application attacks so an

301
00:13:10,170 --> 00:13:14,310
application that doesn't have permission

302
00:13:11,610 --> 00:13:15,750
to see said credentials is not going to

303
00:13:14,310 --> 00:13:19,260
be able to use the vault to gain access

304
00:13:15,750 --> 00:13:21,150
to these passwords but if you have

305
00:13:19,260 --> 00:13:23,069
access to the endpoint in the context of

306
00:13:21,150 --> 00:13:24,270
the user or you have a process that is

307
00:13:23,070 --> 00:13:25,980
running in the context of the user

308
00:13:24,270 --> 00:13:28,470
you're totally going to be able to pull

309
00:13:25,980 --> 00:13:30,480
these credentials there is no prompting

310
00:13:28,470 --> 00:13:31,950
to ask for the user's password just to

311
00:13:30,480 --> 00:13:33,990
ensure that you are who you are that

312
00:13:31,950 --> 00:13:35,550
this isn't a malicious process so that

313
00:13:33,990 --> 00:13:37,560
is a fail on that but not necessarily

314
00:13:35,550 --> 00:13:38,880
with internet explorer and edge we're

315
00:13:37,560 --> 00:13:42,329
gonna pretend that Microsoft didn't

316
00:13:38,880 --> 00:13:43,800
design all of this but it that's a fault

317
00:13:42,330 --> 00:13:46,230
with the operating system and the fault

318
00:13:43,800 --> 00:13:47,640
with the wave vault is designed so as

319
00:13:46,230 --> 00:13:50,040
you can see here I've got the losing

320
00:13:47,640 --> 00:13:51,750
project which is a great utility for

321
00:13:50,040 --> 00:13:54,900
recovering passwords for all kinds of

322
00:13:51,750 --> 00:13:57,180
operating systems Windows Mac Linux but

323
00:13:54,900 --> 00:13:59,090
was able to recover them successfully

324
00:13:57,180 --> 00:14:01,829
for Annette Explorer for that github

325
00:13:59,090 --> 00:14:03,960
sites that I actually well you saw me

326
00:14:01,830 --> 00:14:05,340
access your Firefox earlier now there's

327
00:14:03,960 --> 00:14:07,020
a lot of different modules that you can

328
00:14:05,340 --> 00:14:08,600
use for this the reason why it went with

329
00:14:07,020 --> 00:14:10,890
listening instead of the more popular

330
00:14:08,600 --> 00:14:13,680
powershell script or powersploit empire

331
00:14:10,890 --> 00:14:15,810
is because when i was testing this it

332
00:14:13,680 --> 00:14:17,099
worked when it was trying to decrypt the

333
00:14:15,810 --> 00:14:18,390
password for whatever reason i just

334
00:14:17,100 --> 00:14:20,310
didn't have time to there in like

335
00:14:18,390 --> 00:14:21,660
troubleshoot which often times when her

336
00:14:20,310 --> 00:14:23,069
out of pen test you don't have time to

337
00:14:21,660 --> 00:14:25,110
sit there troubleshoot so you just go to

338
00:14:23,070 --> 00:14:26,940
the next best thing and in this case it

339
00:14:25,110 --> 00:14:29,040
was a load a project that's not entirely

340
00:14:26,940 --> 00:14:31,230
true what actually happened was she got

341
00:14:29,040 --> 00:14:35,969
really angry windows and started

342
00:14:31,230 --> 00:14:39,660
screaming about it it was the right

343
00:14:35,970 --> 00:14:41,280
decision but that's part too yeah I'm

344
00:14:39,660 --> 00:14:42,780
not a huge windows fan I know how to

345
00:14:41,280 --> 00:14:45,209
break it I don't really know anything

346
00:14:42,780 --> 00:14:48,300
else about there yeah fix it so there

347
00:14:45,210 --> 00:14:50,040
you go so when it comes to Internet

348
00:14:48,300 --> 00:14:51,530
Explorer and edge we've got a semi pass

349
00:14:50,040 --> 00:14:54,990
and two fails

350
00:14:51,530 --> 00:14:56,459
chrome does a much better job and that's

351
00:14:54,990 --> 00:14:57,660
really not a surprise at least within

352
00:14:56,460 --> 00:14:59,250
the security community chrome has an

353
00:14:57,660 --> 00:15:01,740
excellent stellar reputation for taking

354
00:14:59,250 --> 00:15:03,000
security seriously just that Google

355
00:15:01,740 --> 00:15:05,760
itself is pretty good when it comes to

356
00:15:03,000 --> 00:15:08,040
security so they to storm and see polite

357
00:15:05,760 --> 00:15:09,900
databases cookies but the they are

358
00:15:08,040 --> 00:15:11,610
encrypted and they're encrypted in a

359
00:15:09,900 --> 00:15:14,430
similar manner that the passwords are

360
00:15:11,610 --> 00:15:17,040
encrypted to that we will get to and so

361
00:15:14,430 --> 00:15:19,620
and they do a decent job the better job

362
00:15:17,040 --> 00:15:21,480
is on Mac in my opinion but they do a

363
00:15:19,620 --> 00:15:23,220
decent job all around so with Windows

364
00:15:21,480 --> 00:15:25,980
they're using the crypto API which again

365
00:15:23,220 --> 00:15:28,110
isn't the best but it's a it's more of a

366
00:15:25,980 --> 00:15:29,370
the issues with that but lie back on the

367
00:15:28,110 --> 00:15:31,350
operating system itself in the way that

368
00:15:29,370 --> 00:15:34,589
APR was designed not necessarily in the

369
00:15:31,350 --> 00:15:35,130
design that chrome uses to encrypt these

370
00:15:34,589 --> 00:15:36,480
cookies

371
00:15:35,130 --> 00:15:38,760
so there's stored a sequel like database

372
00:15:36,480 --> 00:15:40,800
and they're encrypted Linux is the only

373
00:15:38,760 --> 00:15:43,470
one where it's a little it's a little

374
00:15:40,800 --> 00:15:44,430
funny so with the Linux distros it just

375
00:15:43,470 --> 00:15:45,780
depends on the flavor that you got

376
00:15:44,430 --> 00:15:47,699
whether or not there's a password

377
00:15:45,780 --> 00:15:52,170
manager that is installed by default if

378
00:15:47,700 --> 00:15:56,190
in your distro you have what's it Katie

379
00:15:52,170 --> 00:15:58,500
or Katie the Kay wallet as well as the

380
00:15:56,190 --> 00:16:00,360
gnome keyring if those one of those is

381
00:15:58,500 --> 00:16:02,070
installed then chrome is going to

382
00:16:00,360 --> 00:16:04,530
automatically use that it'll generate a

383
00:16:02,070 --> 00:16:07,860
random value 16 byte value equal key and

384
00:16:04,530 --> 00:16:09,360
it will store that in in one of these

385
00:16:07,860 --> 00:16:10,860
third-party password managers and it

386
00:16:09,360 --> 00:16:13,230
uses that value to encrypt all the

387
00:16:10,860 --> 00:16:14,610
cookies against so that's great

388
00:16:13,230 --> 00:16:16,530
you know that that's that's pretty good

389
00:16:14,610 --> 00:16:17,730
again it's arbitrary as long as you're

390
00:16:16,530 --> 00:16:20,069
running the scripts within the user's

391
00:16:17,730 --> 00:16:21,839
context to gain access to that value but

392
00:16:20,070 --> 00:16:24,180
the point is they're they're trying to

393
00:16:21,839 --> 00:16:27,000
make it make you work a little harder to

394
00:16:24,180 --> 00:16:28,650
get access for these these values thing

395
00:16:27,000 --> 00:16:30,420
is if there's no third party or there's

396
00:16:28,650 --> 00:16:32,160
no password manager on the system then

397
00:16:30,420 --> 00:16:34,069
the value that they use to encrypt all

398
00:16:32,160 --> 00:16:37,620
the cookies against is peanuts

399
00:16:34,070 --> 00:16:38,820
static uniform all crest board which is

400
00:16:37,620 --> 00:16:40,650
a little disappointing

401
00:16:38,820 --> 00:16:42,570
one of the ways that you can tell

402
00:16:40,650 --> 00:16:44,340
whether or not it's been encrypted using

403
00:16:42,570 --> 00:16:46,770
peanuts or if it's been encrypted using

404
00:16:44,340 --> 00:16:49,680
a random value is I've got it

405
00:16:46,770 --> 00:16:50,939
highlighted below here this is a secret

406
00:16:49,680 --> 00:16:53,489
light database we're just accessing it

407
00:16:50,940 --> 00:16:54,930
so we can see that the sessions

408
00:16:53,490 --> 00:16:56,190
themselves have been encrypted but I

409
00:16:54,930 --> 00:16:59,370
don't know if you can see in the back

410
00:16:56,190 --> 00:17:01,020
v10 is prepended to it if v10 is

411
00:16:59,370 --> 00:17:02,640
prepended to it that means that there's

412
00:17:01,020 --> 00:17:05,129
no password manager on the system and

413
00:17:02,640 --> 00:17:06,990
it's encrypted using peanuts if it's be

414
00:17:05,130 --> 00:17:08,940
11 there is a password manager and so

415
00:17:06,990 --> 00:17:10,680
you're gonna need to dump from the

416
00:17:08,940 --> 00:17:13,650
keyring or or the wallet or wherever

417
00:17:10,680 --> 00:17:17,840
that value is in order to recover those

418
00:17:13,650 --> 00:17:20,550
those sessions so passwords are stored

419
00:17:17,839 --> 00:17:23,220
in the same way but the only difference

420
00:17:20,550 --> 00:17:24,450
with Linux is that I think I said that

421
00:17:23,220 --> 00:17:26,430
they encrypted it with peanuts before

422
00:17:24,450 --> 00:17:27,510
but they don't for passwords with

423
00:17:26,430 --> 00:17:29,700
passwords they actually store it in

424
00:17:27,510 --> 00:17:32,330
plain text if there's no password

425
00:17:29,700 --> 00:17:35,430
manager on the system so which that's

426
00:17:32,330 --> 00:17:38,659
that's a horrible fall back but and I'm

427
00:17:35,430 --> 00:17:41,640
not sure why they chose that but I did

428
00:17:38,660 --> 00:17:44,460
so with Mac so it's said before that

429
00:17:41,640 --> 00:17:46,440
they do a random value and they store it

430
00:17:44,460 --> 00:17:51,000
in the login keychain as chrome safe

431
00:17:46,440 --> 00:17:53,220
storage so the one caveat with storing

432
00:17:51,000 --> 00:17:55,080
things in the keychain is you need to

433
00:17:53,220 --> 00:17:57,180
set the apples correctly and if you

434
00:17:55,080 --> 00:17:58,830
don't set the apples correctly this is

435
00:17:57,180 --> 00:18:00,810
actually a reported vulnerability to

436
00:17:58,830 --> 00:18:03,120
them that means that if an application

437
00:18:00,810 --> 00:18:05,159
has been installed prior to or you know

438
00:18:03,120 --> 00:18:07,169
even after it exists it can ask for

439
00:18:05,160 --> 00:18:10,350
permissions to that or it can create the

440
00:18:07,170 --> 00:18:12,540
value so and that would mean that chrome

441
00:18:10,350 --> 00:18:14,129
uses it too and theoretically if other

442
00:18:12,540 --> 00:18:15,420
things aren't set up correctly that

443
00:18:14,130 --> 00:18:17,070
application is going to have access to

444
00:18:15,420 --> 00:18:18,720
all of your session tokens and as well

445
00:18:17,070 --> 00:18:21,270
as your credentials that's kind of a

446
00:18:18,720 --> 00:18:23,070
scary thing but this isn't as bad as it

447
00:18:21,270 --> 00:18:27,750
sounds and the reason for that is

448
00:18:23,070 --> 00:18:29,010
because Apple Mac is a sandbox but we

449
00:18:27,750 --> 00:18:31,740
there is there's a lot of applications

450
00:18:29,010 --> 00:18:33,420
that actually make use of this Vivaldi

451
00:18:31,740 --> 00:18:34,890
is one of these browsers I don't know

452
00:18:33,420 --> 00:18:36,870
how many of you have heard of it but

453
00:18:34,890 --> 00:18:38,850
they are one of the browsers that like

454
00:18:36,870 --> 00:18:41,550
to register the chrome safe storage

455
00:18:38,850 --> 00:18:43,110
value within the keychain and as you can

456
00:18:41,550 --> 00:18:44,669
see here I've done this before chrome is

457
00:18:43,110 --> 00:18:47,070
actually installed on the system but we

458
00:18:44,670 --> 00:18:49,020
have a chrome safe storage key already

459
00:18:47,070 --> 00:18:50,899
present in the keychain so when you

460
00:18:49,020 --> 00:18:53,059
install Chrome it's going to ask

461
00:18:50,900 --> 00:18:54,410
access asked to get access to that

462
00:18:53,059 --> 00:18:55,820
specific value because it thinks that

463
00:18:54,410 --> 00:18:57,830
you've already had chrome installed on

464
00:18:55,820 --> 00:19:00,020
the system and so it doesn't want to

465
00:18:57,830 --> 00:19:02,149
negate you or remove you from getting

466
00:19:00,020 --> 00:19:03,650
access to that previously created

467
00:19:02,150 --> 00:19:06,950
passwords and credentials that you have

468
00:19:03,650 --> 00:19:08,690
stored that's really shady and really

469
00:19:06,950 --> 00:19:10,490
questionable and for baldies bad for

470
00:19:08,690 --> 00:19:12,290
doing that if you look on the forums

471
00:19:10,490 --> 00:19:13,970
people are asking about why it's a Baldy

472
00:19:12,290 --> 00:19:16,550
asking you know for access to my chrome

473
00:19:13,970 --> 00:19:19,040
safe storage cookie and their their

474
00:19:16,550 --> 00:19:20,659
explanation as well you know this is for

475
00:19:19,040 --> 00:19:24,530
a future feature that we've got going on

476
00:19:20,660 --> 00:19:26,780
but we just happens to choose the same

477
00:19:24,530 --> 00:19:28,280
name as as chrome did so it's okay it's

478
00:19:26,780 --> 00:19:31,790
safe ignore it you can just accept it

479
00:19:28,280 --> 00:19:33,470
it's fine which that's cool

480
00:19:31,790 --> 00:19:34,780
it's not that big of a deal though in

481
00:19:33,470 --> 00:19:37,220
this respect and that's only because

482
00:19:34,780 --> 00:19:39,080
within Mac they built in the operating

483
00:19:37,220 --> 00:19:41,420
system every application has its own

484
00:19:39,080 --> 00:19:44,659
sandbox and so applications themselves

485
00:19:41,420 --> 00:19:48,890
have very limited access to the file

486
00:19:44,660 --> 00:19:50,900
structure and so I didn't as you can see

487
00:19:48,890 --> 00:19:54,530
when I'm listed out the files that have

488
00:19:50,900 --> 00:19:56,660
the @ symbol appended to the permissions

489
00:19:54,530 --> 00:19:58,460
structure that means that it's protected

490
00:19:56,660 --> 00:20:00,230
it's quarantined and in the sense that

491
00:19:58,460 --> 00:20:01,490
only the application that wrote or

492
00:20:00,230 --> 00:20:04,040
created that file is going to have

493
00:20:01,490 --> 00:20:05,900
access to that file and so the cookies

494
00:20:04,040 --> 00:20:07,639
file this is where your cookies are with

495
00:20:05,900 --> 00:20:09,110
chrome it's under quarantine

496
00:20:07,640 --> 00:20:10,460
the login data this is where your

497
00:20:09,110 --> 00:20:12,949
passwords and other credentials are

498
00:20:10,460 --> 00:20:14,510
stored is under quarantine so even

499
00:20:12,950 --> 00:20:16,309
though the baldy has registered for

500
00:20:14,510 --> 00:20:18,530
chrome safe storage theoretically and

501
00:20:16,309 --> 00:20:19,940
let's do some some kind of breakout they

502
00:20:18,530 --> 00:20:21,790
aren't going to be able from the

503
00:20:19,940 --> 00:20:24,170
application get access to these

504
00:20:21,790 --> 00:20:28,370
credentials but just to play it safe

505
00:20:24,170 --> 00:20:30,559
don't use Vivaldi so we come back to

506
00:20:28,370 --> 00:20:32,840
Chrome definitely is in the best

507
00:20:30,559 --> 00:20:36,080
position when it comes to guarding

508
00:20:32,840 --> 00:20:38,178
safeguarding your secrets but the whole

509
00:20:36,080 --> 00:20:40,699
current state of browser security is

510
00:20:38,179 --> 00:20:42,110
pretty sad and pathetic if you get

511
00:20:40,700 --> 00:20:43,580
access to a machine you pretty much have

512
00:20:42,110 --> 00:20:45,020
access to the world and yes this is true

513
00:20:43,580 --> 00:20:46,309
for a lot of things but one would hope

514
00:20:45,020 --> 00:20:47,629
that there would be a little more hoops

515
00:20:46,309 --> 00:20:49,490
that you would have to jump through to

516
00:20:47,630 --> 00:20:51,650
gain access to further services within

517
00:20:49,490 --> 00:20:53,560
an org at least from this standpoint

518
00:20:51,650 --> 00:20:55,690
there isn't

519
00:20:53,560 --> 00:21:01,720
so now we get to talk about secret

520
00:20:55,690 --> 00:21:06,190
extraction techniques I love this it's

521
00:21:01,720 --> 00:21:09,250
just so epic I could look at that all

522
00:21:06,190 --> 00:21:10,390
day um alright so talking about browser

523
00:21:09,250 --> 00:21:12,850
passwords and then we're going to talk

524
00:21:10,390 --> 00:21:14,200
about the tool that we created so with

525
00:21:12,850 --> 00:21:16,330
password extraction

526
00:21:14,200 --> 00:21:17,440
I've got a few lists here and you really

527
00:21:16,330 --> 00:21:18,550
can't see it because it's going off the

528
00:21:17,440 --> 00:21:19,870
screen but if you want to see the slides

529
00:21:18,550 --> 00:21:21,760
later I'm more than willing to share

530
00:21:19,870 --> 00:21:23,229
it's not a comprehensive list but these

531
00:21:21,760 --> 00:21:26,050
are just some of my favorite tools to

532
00:21:23,230 --> 00:21:28,750
use and they're they're really excellent

533
00:21:26,050 --> 00:21:30,730
and good on all operating systems with

534
00:21:28,750 --> 00:21:33,010
pretty much all these different browsers

535
00:21:30,730 --> 00:21:36,610
this is just a keychain bypass that I

536
00:21:33,010 --> 00:21:38,020
used on an older version of Mac super

537
00:21:36,610 --> 00:21:40,449
super easy to do and we actually

538
00:21:38,020 --> 00:21:42,010
included it in the tool that we have but

539
00:21:40,450 --> 00:21:42,940
here's the chrome site storage value and

540
00:21:42,010 --> 00:21:45,370
so that's the value that you actually

541
00:21:42,940 --> 00:21:47,980
used to decrypt all the secrets with

542
00:21:45,370 --> 00:21:51,010
chrome cookies and passwords and all

543
00:21:47,980 --> 00:21:53,890
that so one note before we before I let

544
00:21:51,010 --> 00:21:55,420
Cooper take over with internet explorer

545
00:21:53,890 --> 00:21:57,370
and edge the cookies yes they're in

546
00:21:55,420 --> 00:21:58,870
plain text it's not hard to get access

547
00:21:57,370 --> 00:22:01,659
to them but there's not a lot of support

548
00:21:58,870 --> 00:22:03,639
from a tool wise standpoint to get

549
00:22:01,660 --> 00:22:05,950
access to these cookies there is a

550
00:22:03,640 --> 00:22:08,260
Metasploit module and it works but it

551
00:22:05,950 --> 00:22:11,440
doesn't work with edge and there's not

552
00:22:08,260 --> 00:22:13,420
there are some other non open-source

553
00:22:11,440 --> 00:22:14,920
products that you can use to recover

554
00:22:13,420 --> 00:22:15,970
these but I don't like recommending them

555
00:22:14,920 --> 00:22:17,500
because I don't know what's going on

556
00:22:15,970 --> 00:22:20,050
with them I haven't taken the time to

557
00:22:17,500 --> 00:22:21,970
reverse them so it's just questionable

558
00:22:20,050 --> 00:22:24,730
so the only one that I can in good faith

559
00:22:21,970 --> 00:22:26,380
say to use is the Metasploit module we

560
00:22:24,730 --> 00:22:29,050
will be including this in the tool in

561
00:22:26,380 --> 00:22:32,680
future but I'm going to shut up now and

562
00:22:29,050 --> 00:22:35,379
let Andy take over no it's okay so a lot

563
00:22:32,680 --> 00:22:36,550
of what we've done here is combine a lot

564
00:22:35,380 --> 00:22:38,650
of these different techniques that we've

565
00:22:36,550 --> 00:22:40,389
seen and put them into a single place

566
00:22:38,650 --> 00:22:43,180
because a lot of them are all over the

567
00:22:40,390 --> 00:22:46,620
place and you don't really if you have

568
00:22:43,180 --> 00:22:46,620
to know where to look to find them and

569
00:22:50,840 --> 00:22:57,959
no here is kind of our just generic take

570
00:22:56,280 --> 00:22:59,100
all the cookies from a system and put

571
00:22:57,960 --> 00:23:01,710
them into a file that we can actually

572
00:22:59,100 --> 00:23:03,929
use it from both of the two major

573
00:23:01,710 --> 00:23:06,060
modules in this are split up to where

574
00:23:03,930 --> 00:23:07,290
you can either run them on their own or

575
00:23:06,060 --> 00:23:09,120
you can use them inside of your own

576
00:23:07,290 --> 00:23:11,670
actual software as well because they

577
00:23:09,120 --> 00:23:13,320
have a Python where they are their own

578
00:23:11,670 --> 00:23:15,660
Python class and so you could use them

579
00:23:13,320 --> 00:23:17,939
as a module separately and you don't

580
00:23:15,660 --> 00:23:19,080
have to use it only our way or anything

581
00:23:17,940 --> 00:23:21,210
else

582
00:23:19,080 --> 00:23:23,040
basically what it does is it takes all

583
00:23:21,210 --> 00:23:25,770
the stuff from your system puts it into

584
00:23:23,040 --> 00:23:27,990
a variable called cookie files and then

585
00:23:25,770 --> 00:23:29,850
zips all of those files up and puts them

586
00:23:27,990 --> 00:23:32,850
inside of a zip file that you then want

587
00:23:29,850 --> 00:23:35,340
to feed over to the one caveat though

588
00:23:32,850 --> 00:23:37,740
before we before you do that with cookie

589
00:23:35,340 --> 00:23:39,209
dough yes it most of it is just

590
00:23:37,740 --> 00:23:40,680
gathering cookies it doesn't do anything

591
00:23:39,210 --> 00:23:42,870
with it and it doesn't decrypt it there

592
00:23:40,680 --> 00:23:44,370
is one exception to that with the

593
00:23:42,870 --> 00:23:46,169
decrypt windows Chrome and that's

594
00:23:44,370 --> 00:23:48,120
because as I stated earlier to decrypt

595
00:23:46,170 --> 00:23:50,070
you need to be running that process

596
00:23:48,120 --> 00:23:51,870
within the context of the user so it has

597
00:23:50,070 --> 00:23:53,100
to be crypt on the system yes you have

598
00:23:51,870 --> 00:23:55,250
to do it there because you can't just

599
00:23:53,100 --> 00:23:57,330
grab the secrets and run unfortunately

600
00:23:55,250 --> 00:23:58,530
additionally though for Windows like it

601
00:23:57,330 --> 00:24:01,290
shows at the bottom we've actually got

602
00:23:58,530 --> 00:24:03,389
it to a point where it will use PI

603
00:24:01,290 --> 00:24:05,250
installer so you don't have to make sure

604
00:24:03,390 --> 00:24:06,930
that pythons on the system you can just

605
00:24:05,250 --> 00:24:08,510
load that absurdly large executable up

606
00:24:06,930 --> 00:24:13,080
there and then run it and then grab your

607
00:24:08,510 --> 00:24:15,450
zip file from there cookie sheet is the

608
00:24:13,080 --> 00:24:17,340
other actual module here and what it

609
00:24:15,450 --> 00:24:19,080
does is take all of those cookies from

610
00:24:17,340 --> 00:24:20,970
your actual zip file that you put

611
00:24:19,080 --> 00:24:22,470
together or if you're using any of the

612
00:24:20,970 --> 00:24:24,420
Loews reload browser cookies you can

613
00:24:22,470 --> 00:24:26,370
load it from an individual file that

614
00:24:24,420 --> 00:24:28,380
you've got from any of that to shove it

615
00:24:26,370 --> 00:24:30,899
in there and it puts it together into an

616
00:24:28,380 --> 00:24:33,300
array that you can then dump out into a

617
00:24:30,900 --> 00:24:35,370
set of JSON files that you can interact

618
00:24:33,300 --> 00:24:36,550
with from there so you can actually see

619
00:24:35,370 --> 00:24:40,209
the cookies and do

620
00:24:36,550 --> 00:24:42,220
with them anything else on this one no

621
00:24:40,210 --> 00:24:45,210
okay yeah so we can kind of show you a

622
00:24:42,220 --> 00:24:47,200
demo of what's going on there real quick

623
00:24:45,210 --> 00:24:48,700
as you can see here this is basically

624
00:24:47,200 --> 00:24:51,310
what you get whenever you pull down the

625
00:24:48,700 --> 00:24:53,680
actual repo get the cookie dough cookie

626
00:24:51,310 --> 00:24:56,139
sheet there's a keychain dump and the

627
00:24:53,680 --> 00:24:57,490
cookie dough dot exe that actually

628
00:24:56,140 --> 00:25:01,060
matter here in a second here we're gonna

629
00:24:57,490 --> 00:25:02,470
start typing and Ron cookie dough to

630
00:25:01,060 --> 00:25:04,450
show you kind of that it doesn't really

631
00:25:02,470 --> 00:25:06,340
show you anything that keychain dub also

632
00:25:04,450 --> 00:25:09,630
works on Linux to dump the keyring just

633
00:25:06,340 --> 00:25:12,070
FYI yeah so it's not just a Mac key

634
00:25:09,630 --> 00:25:13,420
probably it gives you basically nothing

635
00:25:12,070 --> 00:25:15,100
except it generates that cookie dough

636
00:25:13,420 --> 00:25:16,450
dot zip and that contains all the

637
00:25:15,100 --> 00:25:19,179
different cookie files that are on this

638
00:25:16,450 --> 00:25:20,380
system from here since I know that we're

639
00:25:19,180 --> 00:25:23,470
on a Mac system I'm gonna go ahead and

640
00:25:20,380 --> 00:25:25,530
run the keychain dump which is going to

641
00:25:23,470 --> 00:25:27,370
actually pull that keychain for us

642
00:25:25,530 --> 00:25:29,139
normally this is going to show us a

643
00:25:27,370 --> 00:25:31,149
bunch of like clicks that you have to go

644
00:25:29,140 --> 00:25:33,820
through but right now we're just

645
00:25:31,150 --> 00:25:35,170
bypassing that all so what this does is

646
00:25:33,820 --> 00:25:36,730
generate this k-dog zip that actually

647
00:25:35,170 --> 00:25:38,350
contains your keychain you do not have

648
00:25:36,730 --> 00:25:39,880
to unzip this but I just want to kind of

649
00:25:38,350 --> 00:25:42,100
show off that you're seeing the actual

650
00:25:39,880 --> 00:25:43,180
raw data from the chain here and this is

651
00:25:42,100 --> 00:25:44,379
really what kind of what it looks like

652
00:25:43,180 --> 00:25:45,550
and you can go through and see you know

653
00:25:44,380 --> 00:25:47,650
I've got birth there I've got some other

654
00:25:45,550 --> 00:25:49,419
things going on it looks like a bunch of

655
00:25:47,650 --> 00:25:52,600
junk but there are actually plaintext

656
00:25:49,420 --> 00:25:53,710
passwords living in there yeah here

657
00:25:52,600 --> 00:25:55,300
we're just going to go ahead and run the

658
00:25:53,710 --> 00:25:58,120
cookie sheet and we're just doing this

659
00:25:55,300 --> 00:26:00,250
blank letting it do its thing and it's

660
00:25:58,120 --> 00:26:04,810
gonna run for a second I'm fixing that

661
00:26:00,250 --> 00:26:06,970
error morning and then in a second here

662
00:26:04,810 --> 00:26:08,980
we should get a list of the actual

663
00:26:06,970 --> 00:26:10,090
browsers that come up and then we'll

664
00:26:08,980 --> 00:26:12,280
kind of go through some of their cookies

665
00:26:10,090 --> 00:26:13,540
as well so yeah see we've got here you

666
00:26:12,280 --> 00:26:14,830
can't see Chrome because it's off the

667
00:26:13,540 --> 00:26:16,690
screen but we also have Firefox and

668
00:26:14,830 --> 00:26:19,360
Safari on there and we'll check out the

669
00:26:16,690 --> 00:26:20,800
Safari cookies real quick and then jump

670
00:26:19,360 --> 00:26:22,209
into kind of the next cool thing that

671
00:26:20,800 --> 00:26:23,950
goes along with this

672
00:26:22,210 --> 00:26:26,020
so let's you know you see this gigantic

673
00:26:23,950 --> 00:26:28,300
JSON array of all the different cookies

674
00:26:26,020 --> 00:26:29,379
that are inside of the Safari there all

675
00:26:28,300 --> 00:26:31,169
right so that's great so now you've got

676
00:26:29,380 --> 00:26:33,040
the cookies that have been decrypted and

677
00:26:31,170 --> 00:26:35,410
the question is what do you do with it

678
00:26:33,040 --> 00:26:37,899
when you do it the next step here is

679
00:26:35,410 --> 00:26:40,270
basically to load it into Knaus which is

680
00:26:37,900 --> 00:26:43,360
a perfect engine and what I've done with

681
00:26:40,270 --> 00:26:45,150
Nas is take it so you can take those

682
00:26:43,360 --> 00:26:49,209
Sahn files and load them into the

683
00:26:45,150 --> 00:26:51,400
session store inside of Bert so that you

684
00:26:49,210 --> 00:26:54,220
can seamlessly login or use other

685
00:26:51,400 --> 00:26:56,080
people's accounts of things from your

686
00:26:54,220 --> 00:26:57,250
computer just having their cookies so

687
00:26:56,080 --> 00:26:59,049
you don't need the password you don't

688
00:26:57,250 --> 00:27:02,020
need to log in you just need to take the

689
00:26:59,049 --> 00:27:03,549
cookies put it in here save go use them

690
00:27:02,020 --> 00:27:07,470
and then turn it off whenever you're

691
00:27:03,549 --> 00:27:09,879
done so we've got it Jimmy that as well

692
00:27:07,470 --> 00:27:11,950
we're gonna do here is start off by

693
00:27:09,880 --> 00:27:13,540
showing you this is my computer that's

694
00:27:11,950 --> 00:27:15,309
got my stuff on we're gonna go to github

695
00:27:13,540 --> 00:27:17,168
show you Hey look this is my account

696
00:27:15,309 --> 00:27:19,540
we'll go to a page that shows that it's

697
00:27:17,169 --> 00:27:20,890
a little bit more my stuff which of the

698
00:27:19,540 --> 00:27:22,059
settings you see obviously there's my

699
00:27:20,890 --> 00:27:24,309
profile picture and all this other stuff

700
00:27:22,059 --> 00:27:26,700
and we're to go to a website that I go

701
00:27:24,309 --> 00:27:31,090
to all the time obviously which is Jake

702
00:27:26,700 --> 00:27:34,210
and see that with me but no actual sign

703
00:27:31,090 --> 00:27:36,990
in here where it says Syed what I'm

704
00:27:34,210 --> 00:27:39,340
gonna do now is take a a file from

705
00:27:36,990 --> 00:27:41,290
Kara's machine that she's passed over to

706
00:27:39,340 --> 00:27:42,939
me but first thing here is you've got

707
00:27:41,290 --> 00:27:45,299
your perfect section that you've loaded

708
00:27:42,940 --> 00:27:47,919
but you'd have to come into the project

709
00:27:45,299 --> 00:27:50,020
options here go to sessions and then

710
00:27:47,919 --> 00:27:51,760
actually edit your cookie jar here come

711
00:27:50,020 --> 00:27:53,590
into scope and tell it to use it as a

712
00:27:51,760 --> 00:27:55,030
proxy as well because if you don't do

713
00:27:53,590 --> 00:27:56,049
that it'll never load it in and you

714
00:27:55,030 --> 00:27:58,720
don't get the seamless session

715
00:27:56,049 --> 00:28:00,129
integration but at this point it's

716
00:27:58,720 --> 00:28:02,530
basically as simple as loading the

717
00:28:00,130 --> 00:28:03,760
cookies and in this case I think yeah

718
00:28:02,530 --> 00:28:06,970
Chrome cookies is what we're gonna grab

719
00:28:03,760 --> 00:28:08,860
and there will be more information here

720
00:28:06,970 --> 00:28:11,950
eventually but at this point we're just

721
00:28:08,860 --> 00:28:13,209
going to refresh these pages and you'll

722
00:28:11,950 --> 00:28:14,559
see that we are now a little southern

723
00:28:13,210 --> 00:28:17,380
side of that previous github account

724
00:28:14,559 --> 00:28:19,389
that we were in and we're no longer

725
00:28:17,380 --> 00:28:21,669
inside of ours and then we can also jump

726
00:28:19,390 --> 00:28:23,200
back over to j.crew and refresh that and

727
00:28:21,669 --> 00:28:25,030
you'll see it's got my accounts that

728
00:28:23,200 --> 00:28:28,049
have sign in there and we actually have

729
00:28:25,030 --> 00:28:30,280
a legit account here going on

730
00:28:28,049 --> 00:28:31,510
j.crew just has a thing where if you've

731
00:28:30,280 --> 00:28:33,460
let the session go for so long you have

732
00:28:31,510 --> 00:28:35,440
to reopen to Kate but you can tell I

733
00:28:33,460 --> 00:28:37,000
just recently container and what's gonna

734
00:28:35,440 --> 00:28:38,410
happen is you'll see that we'll we're no

735
00:28:37,000 --> 00:28:39,730
longer are signed in up in the corner

736
00:28:38,410 --> 00:28:41,230
it's still gonna have that email address

737
00:28:39,730 --> 00:28:43,330
it just does

738
00:28:41,230 --> 00:28:45,040
and then we refresh on github and we're

739
00:28:43,330 --> 00:28:46,270
back to our original session as well so

740
00:28:45,040 --> 00:28:48,070
it doesn't actually pull the session

741
00:28:46,270 --> 00:28:49,560
that you already have going on it keeps

742
00:28:48,070 --> 00:28:51,570
them separate yeah

743
00:28:49,560 --> 00:28:55,860
which can be quite convenient when it

744
00:28:51,570 --> 00:28:57,899
comes to like it says there at the

745
00:28:55,860 --> 00:29:01,080
bottom you've got to set the proxy flag

746
00:28:57,900 --> 00:29:02,760
for the cookie jar use and you also need

747
00:29:01,080 --> 00:29:05,639
to setup your birth certificate for your

748
00:29:02,760 --> 00:29:08,190
local machine because HSTs is becoming a

749
00:29:05,640 --> 00:29:10,320
real it's a problem if you don't do that

750
00:29:08,190 --> 00:29:16,700
it's embarrassing when you don't realize

751
00:29:10,320 --> 00:29:19,590
it for multiple hours as well no comment

752
00:29:16,700 --> 00:29:21,390
sorry lit up the stage all of your

753
00:29:19,590 --> 00:29:26,429
cookies and your sessions and your life

754
00:29:21,390 --> 00:29:27,960
belongs to us alright so take away here

755
00:29:26,430 --> 00:29:29,400
is cookie sheet is your one-stop shop

756
00:29:27,960 --> 00:29:30,600
when it comes to getting all the cookies

757
00:29:29,400 --> 00:29:32,730
you don't have to search anymore on the

758
00:29:30,600 --> 00:29:34,550
web yes a lot of these scripts exist so

759
00:29:32,730 --> 00:29:36,900
that's not new the new thing here is nas

760
00:29:34,550 --> 00:29:38,490
but cookie sheet does make your life

761
00:29:36,900 --> 00:29:39,770
just a little bit easier because you

762
00:29:38,490 --> 00:29:43,620
just have to use one script instead of

763
00:29:39,770 --> 00:29:44,910
you know five six whatever definitely if

764
00:29:43,620 --> 00:29:46,199
you are using this on a pen test

765
00:29:44,910 --> 00:29:48,870
remember to clean up Hinds don't leave

766
00:29:46,200 --> 00:29:51,450
any binaries or executables or scripts

767
00:29:48,870 --> 00:29:54,860
laying around or cookies or dumps but

768
00:29:51,450 --> 00:30:04,800
yeah so use that and own all the things

769
00:29:54,860 --> 00:30:07,620
any questions yes yeah absolutely yeah

770
00:30:04,800 --> 00:30:09,780
yeah we'll have it posted we're gonna

771
00:30:07,620 --> 00:30:11,070
have it posted on this account here yeah

772
00:30:09,780 --> 00:30:18,930
we'll probably stick it on the weekend

773
00:30:11,070 --> 00:30:21,270
there see and get access to that you

774
00:30:18,930 --> 00:30:23,970
want to see the next slide for our

775
00:30:21,270 --> 00:30:25,470
information I can go back to that

776
00:30:23,970 --> 00:30:28,250
through you guys that went in anyway

777
00:30:25,470 --> 00:30:30,090
that sound like Twitter emails us

778
00:30:28,250 --> 00:30:33,030
Twitter is the best way to get hold of

779
00:30:30,090 --> 00:30:35,300
us Facebook yeah don't email me I never

780
00:30:33,030 --> 00:30:37,410
check my email I'm really bad about that

781
00:30:35,300 --> 00:30:45,350
sorry did you guys want me to go back

782
00:30:37,410 --> 00:30:45,350
back thank you moved in that

783
00:30:50,950 --> 00:31:01,880
all right thank you very much

784
00:30:53,250 --> 00:31:01,880
[Applause]

