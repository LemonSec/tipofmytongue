1
00:00:09,519 --> 00:00:12,559
all right drumroll what's up bro

2
00:00:12,559 --> 00:00:16,160
hey hey how's it going guys welcome guys

3
00:00:16,160 --> 00:00:19,119
thanks for joining us man we're glad to

4
00:00:19,119 --> 00:00:20,480
be here it's it's 5

5
00:00:20,480 --> 00:00:24,720
30 or 5 40 a.m here in the us

6
00:00:27,119 --> 00:00:28,720
i hope you guys have your coffee because

7
00:00:28,720 --> 00:00:30,560
uh yeah it's now it's 6

8
00:00:30,560 --> 00:00:32,800
40 p.m here but we're still drinking

9
00:00:32,800 --> 00:00:33,590
coffee

10
00:00:33,590 --> 00:00:35,840
[Laughter]

11
00:00:35,840 --> 00:00:38,480
yeah we did get that nice hack in the

12
00:00:38,480 --> 00:00:39,280
box uh

13
00:00:39,280 --> 00:00:40,960
hacker coffee from you guys that was

14
00:00:40,960 --> 00:00:42,399
pretty pretty sweet

15
00:00:42,399 --> 00:00:46,160
have you guys tried it uh i haven't i

16
00:00:46,160 --> 00:00:49,120
don't actually drink coffee but oh

17
00:00:49,120 --> 00:00:50,960
i also have it i don't really drink

18
00:00:50,960 --> 00:00:52,239
coffee you guys don't drink coffee what

19
00:00:52,239 --> 00:00:53,039
do you drink man

20
00:00:53,039 --> 00:00:56,840
like tea or like craft beers i have some

21
00:00:56,840 --> 00:00:58,559
water

22
00:00:58,559 --> 00:01:00,800
mountain dew nice okay okay healthy

23
00:01:00,800 --> 00:01:02,079
folks

24
00:01:02,079 --> 00:01:04,860
everyone smile just die at least

25
00:01:04,860 --> 00:01:07,360
[Laughter]

26
00:01:07,360 --> 00:01:09,360
hey okay guys uh let's dive into the

27
00:01:09,360 --> 00:01:11,280
talk stuff i think we have some

28
00:01:11,280 --> 00:01:13,200
questions from uh from discord so yeah

29
00:01:13,200 --> 00:01:15,680
take it away bro uh the first one is

30
00:01:15,680 --> 00:01:16,799
what do you think are the real-world

31
00:01:16,799 --> 00:01:18,400
applications of using uh

32
00:01:18,400 --> 00:01:21,520
jump oriented programming

33
00:01:22,159 --> 00:01:23,439
you know i think there are some really

34
00:01:23,439 --> 00:01:25,920
good strong real world up applications

35
00:01:25,920 --> 00:01:27,439
with jump oriented programming we've

36
00:01:27,439 --> 00:01:29,360
been doing some research lately

37
00:01:29,360 --> 00:01:31,280
and notice that there's a lot of

38
00:01:31,280 --> 00:01:33,439
binaries that seem to be compiled by

39
00:01:33,439 --> 00:01:34,720
visual studio that

40
00:01:34,720 --> 00:01:38,000
keep having these same dispatcher

41
00:01:38,000 --> 00:01:38,720
gadgets

42
00:01:38,720 --> 00:01:41,119
that are repeating and that's all we

43
00:01:41,119 --> 00:01:42,560
really need is just

44
00:01:42,560 --> 00:01:44,799
one really good dispatcher gadget and

45
00:01:44,799 --> 00:01:46,159
some of these have the same

46
00:01:46,159 --> 00:01:47,680
dispatcher gadgets just repeating

47
00:01:47,680 --> 00:01:49,759
multiple times and if that's present

48
00:01:49,759 --> 00:01:51,520
then that means that it potentially

49
00:01:51,520 --> 00:01:52,560
could be

50
00:01:52,560 --> 00:01:54,560
susceptible to the jump point to program

51
00:01:54,560 --> 00:01:55,680
in just the same way it could be

52
00:01:55,680 --> 00:01:56,799
susceptible

53
00:01:56,799 --> 00:01:59,280
to return to programming and the really

54
00:01:59,280 --> 00:02:01,680
cool thing about jop is if you if you

55
00:02:01,680 --> 00:02:02,880
don't have

56
00:02:02,880 --> 00:02:06,000
you know the issue of bad bytes

57
00:02:06,000 --> 00:02:09,840
then the stack to the technique that we

58
00:02:09,840 --> 00:02:12,800
introduced that that could work and in

59
00:02:12,800 --> 00:02:13,840
that sense sometimes

60
00:02:13,840 --> 00:02:17,120
job can actually be easier or simpler

61
00:02:17,120 --> 00:02:17,840
than

62
00:02:17,840 --> 00:02:21,200
than rock and also while drop

63
00:02:21,200 --> 00:02:23,440
is a little bit lesser known lesser

64
00:02:23,440 --> 00:02:24,480
explored than rap

65
00:02:24,480 --> 00:02:26,640
um it's still possible in a lot of

66
00:02:26,640 --> 00:02:28,239
binaries in the real world and we have

67
00:02:28,239 --> 00:02:29,120
seen it

68
00:02:29,120 --> 00:02:31,840
in the wild um there's been a drop

69
00:02:31,840 --> 00:02:33,680
exploit developed for the ps4

70
00:02:33,680 --> 00:02:38,000
the playstation 4. also in our

71
00:02:38,000 --> 00:02:39,680
one of our demos you can see that

72
00:02:39,680 --> 00:02:42,959
exploit for the ico fx program

73
00:02:42,959 --> 00:02:45,280
and so you can see the jobs possible in

74
00:02:45,280 --> 00:02:48,000
a lot of these binaries

75
00:02:48,000 --> 00:02:51,920
just like rapa's okay you mentioned

76
00:02:51,920 --> 00:02:54,000
dispatch of programming what exactly is

77
00:02:54,000 --> 00:02:56,160
that

78
00:03:00,560 --> 00:03:02,959
you mentioned dispatcher uh was it

79
00:03:02,959 --> 00:03:04,239
definitely yeah

80
00:03:04,239 --> 00:03:06,319
yeah this one dispatching gadgets what

81
00:03:06,319 --> 00:03:08,400
is that

82
00:03:08,400 --> 00:03:11,840
go ahead austin yeah so with um chop

83
00:03:11,840 --> 00:03:14,400
um with return oriented programming

84
00:03:14,400 --> 00:03:15,760
which would be kind of

85
00:03:15,760 --> 00:03:19,040
uh the more well-known uh type of code

86
00:03:19,040 --> 00:03:20,319
reuse attack

87
00:03:20,319 --> 00:03:22,319
we'd have a bunch of gadgets which are

88
00:03:22,319 --> 00:03:24,080
little sections of code

89
00:03:24,080 --> 00:03:26,239
um that would end in a return and then

90
00:03:26,239 --> 00:03:28,879
we would put all of these on the stack

91
00:03:28,879 --> 00:03:30,720
so at the end of each gadget it would do

92
00:03:30,720 --> 00:03:32,000
whatever action we

93
00:03:32,000 --> 00:03:34,080
wanted it to do and then the return

94
00:03:34,080 --> 00:03:35,920
would move the stack pointer

95
00:03:35,920 --> 00:03:37,680
to the address of the next gadget which

96
00:03:37,680 --> 00:03:39,200
is another code snippet

97
00:03:39,200 --> 00:03:42,560
we should do more actions with the drop

98
00:03:42,560 --> 00:03:45,120
we can't use we're not using returns or

99
00:03:45,120 --> 00:03:47,120
using a jump

100
00:03:47,120 --> 00:03:48,879
and each jump is going to return to that

101
00:03:48,879 --> 00:03:50,400
dispatcher gadget

102
00:03:50,400 --> 00:03:52,239
and what that dispatcher gadget is going

103
00:03:52,239 --> 00:03:53,439
to do there's going to be a table

104
00:03:53,439 --> 00:03:54,879
somewhere in memory

105
00:03:54,879 --> 00:03:56,480
and it's going to have a bunch of

106
00:03:56,480 --> 00:03:58,400
addresses to each

107
00:03:58,400 --> 00:04:00,239
each other gadget that we want to use so

108
00:04:00,239 --> 00:04:01,519
each section

109
00:04:01,519 --> 00:04:04,560
of little snippet of code and then our

110
00:04:04,560 --> 00:04:06,400
dispatcher gadget is going to increment

111
00:04:06,400 --> 00:04:07,439
through that table

112
00:04:07,439 --> 00:04:09,200
and go through each gadget so that's

113
00:04:09,200 --> 00:04:10,799
what our dispatcher dash is and that's

114
00:04:10,799 --> 00:04:11,840
kind of what ties our

115
00:04:11,840 --> 00:04:14,239
expo together cool so is there a

116
00:04:14,239 --> 00:04:15,760
difference in the number of

117
00:04:15,760 --> 00:04:18,238
of uh job gadgets compared to rop

118
00:04:18,238 --> 00:04:20,638
gadgets

119
00:04:20,798 --> 00:04:22,880
you know the thing with with uh rock

120
00:04:22,880 --> 00:04:24,479
gadgets is

121
00:04:24,479 --> 00:04:26,639
those are going to always be extremely

122
00:04:26,639 --> 00:04:28,960
plentiful for for most any application

123
00:04:28,960 --> 00:04:30,720
whether it's a small application

124
00:04:30,720 --> 00:04:33,520
or a big application the job gadgets are

125
00:04:33,520 --> 00:04:34,880
going to be a little bit more rare a

126
00:04:34,880 --> 00:04:36,240
little more scarce

127
00:04:36,240 --> 00:04:38,160
however if you have a bigger larger

128
00:04:38,160 --> 00:04:39,360
application

129
00:04:39,360 --> 00:04:40,800
then there's going to there's going to

130
00:04:40,800 --> 00:04:43,120
be more job gadgets so if you're trying

131
00:04:43,120 --> 00:04:44,800
to do jump pointed programming and just

132
00:04:44,800 --> 00:04:46,400
have a tiny small

133
00:04:46,400 --> 00:04:49,040
uh application it may not be enough

134
00:04:49,040 --> 00:04:50,639
gadgets but a larger size

135
00:04:50,639 --> 00:04:52,479
application like you know discord for

136
00:04:52,479 --> 00:04:54,880
instance there's going to be a really

137
00:04:54,880 --> 00:04:57,360
good strong amount of job patches so

138
00:04:57,360 --> 00:04:58,720
when you guys

139
00:04:58,720 --> 00:05:00,000
started this research right i'm sure you

140
00:05:00,000 --> 00:05:01,680
spoke to microsoft about it and like so

141
00:05:01,680 --> 00:05:02,960
what are their thoughts i mean they're

142
00:05:02,960 --> 00:05:04,800
definitely some defense mechanisms that

143
00:05:04,800 --> 00:05:06,560
they can introduce but

144
00:05:06,560 --> 00:05:07,840
in the long term do they have anything

145
00:05:07,840 --> 00:05:10,960
that there's coming up or

146
00:05:10,960 --> 00:05:13,520
how are they going to address this

147
00:05:13,520 --> 00:05:14,800
that's a really good question

148
00:05:14,800 --> 00:05:18,240
so one thing that has

149
00:05:18,240 --> 00:05:22,000
originally the the nsa created a

150
00:05:22,000 --> 00:05:23,919
a form of what's called control full

151
00:05:23,919 --> 00:05:25,360
integrity to try to

152
00:05:25,360 --> 00:05:29,199
mitigate against um job and

153
00:05:29,199 --> 00:05:31,520
that has led to the development of

154
00:05:31,520 --> 00:05:32,400
something called

155
00:05:32,400 --> 00:05:35,600
cet set and that will provide strong

156
00:05:35,600 --> 00:05:38,639
defense against rot gadgets job gadgets

157
00:05:38,639 --> 00:05:39,520
however

158
00:05:39,520 --> 00:05:42,639
you do need very

159
00:05:42,639 --> 00:05:45,039
it's only just starting to be released

160
00:05:45,039 --> 00:05:46,960
on cpus and so if you don't actually

161
00:05:46,960 --> 00:05:47,360
have

162
00:05:47,360 --> 00:05:49,199
the hardware that supports it it doesn't

163
00:05:49,199 --> 00:05:50,400
provide

164
00:05:50,400 --> 00:05:52,320
that defense so that's kind of a next

165
00:05:52,320 --> 00:05:54,000
generation defense

166
00:05:54,000 --> 00:05:55,840
against both return oriented programming

167
00:05:55,840 --> 00:05:57,360
and gen pointing programming

168
00:05:57,360 --> 00:05:59,360
but right now there's also a mitigation

169
00:05:59,360 --> 00:06:00,639
and control phone

170
00:06:00,639 --> 00:06:03,199
integrity mitigation called control flow

171
00:06:03,199 --> 00:06:05,600
guard or cfg and that does provide a

172
00:06:05,600 --> 00:06:06,639
little bit of defense

173
00:06:06,639 --> 00:06:09,680
against uh job gadgets however

174
00:06:09,680 --> 00:06:11,840
there are a number of ways that we can

175
00:06:11,840 --> 00:06:13,680
avoid that and so it doesn't always

176
00:06:13,680 --> 00:06:14,240
actually

177
00:06:14,240 --> 00:06:16,639
work yeah i mean i'm i'm reading your

178
00:06:16,639 --> 00:06:18,000
abstract and it says it's only

179
00:06:18,000 --> 00:06:20,080
applicable when the binary is compiled

180
00:06:20,080 --> 00:06:22,960
uh again cfg right so have you guys

181
00:06:22,960 --> 00:06:24,319
studied like how many binaries are

182
00:06:24,319 --> 00:06:25,280
actually not

183
00:06:25,280 --> 00:06:27,120
as in like how many binaries are exposed

184
00:06:27,120 --> 00:06:29,360
to this

185
00:06:29,360 --> 00:06:32,800
there are um i mean if you

186
00:06:32,800 --> 00:06:34,720
like 19 percent of the the population

187
00:06:34,720 --> 00:06:36,720
right now still uses windows 7 windows 7

188
00:06:36,720 --> 00:06:37,840
doesn't even support

189
00:06:37,840 --> 00:06:40,880
cfg so even if there is cfg it's not

190
00:06:40,880 --> 00:06:41,440
going to be

191
00:06:41,440 --> 00:06:43,919
supported there uh even if it is

192
00:06:43,919 --> 00:06:45,840
compiled with cfg there still can be

193
00:06:45,840 --> 00:06:47,039
ways around it

194
00:06:47,039 --> 00:06:48,880
for instance we have optical splitting

195
00:06:48,880 --> 00:06:51,120
which allows us to get unintended

196
00:06:51,120 --> 00:06:54,560
gadgets inline assemblies

197
00:06:54,560 --> 00:06:57,919
is not supported i think a lot of

198
00:06:57,919 --> 00:07:01,039
there are quite a bit that do use cfg so

199
00:07:01,039 --> 00:07:02,240
that does provide

200
00:07:02,240 --> 00:07:04,240
some defense but again even if they are

201
00:07:04,240 --> 00:07:06,400
compiling with cfg there still

202
00:07:06,400 --> 00:07:08,160
can be ways around it and also there

203
00:07:08,160 --> 00:07:10,080
could be an issue of

204
00:07:10,080 --> 00:07:12,240
just like with aslr sometimes there can

205
00:07:12,240 --> 00:07:14,720
be dlls or libraries

206
00:07:14,720 --> 00:07:17,680
modules that may not have aslr at the

207
00:07:17,680 --> 00:07:19,199
same time they may

208
00:07:19,199 --> 00:07:21,280
there could be dlls that may not have

209
00:07:21,280 --> 00:07:23,039
cfg so there can be

210
00:07:23,039 --> 00:07:26,639
a number of ways around that and i guess

211
00:07:26,639 --> 00:07:29,520
keeping in mind that most people don't

212
00:07:29,520 --> 00:07:31,440
upgrade

213
00:07:31,440 --> 00:07:33,120
they've been in windows 7 for a while

214
00:07:33,120 --> 00:07:34,720
yet and you know probably they won't buy

215
00:07:34,720 --> 00:07:36,319
new hardware that has all the latest and

216
00:07:36,319 --> 00:07:37,520
greatest on-chip

217
00:07:37,520 --> 00:07:40,479
defense so this is going to be here for

218
00:07:40,479 --> 00:07:43,440
what next 15 years

219
00:07:43,440 --> 00:07:45,440
probably it's going to be around for a

220
00:07:45,440 --> 00:07:47,759
long time

221
00:07:47,759 --> 00:07:50,639
and there are companies that are sorry

222
00:07:50,639 --> 00:07:51,840
go ahead

223
00:07:51,840 --> 00:07:54,240
it does have to be compiled with the the

224
00:07:54,240 --> 00:07:56,560
actual option for enable cfg as well

225
00:07:56,560 --> 00:07:59,120
so that's just another step on top of

226
00:07:59,120 --> 00:08:01,360
that and it's not enabled by people

227
00:08:01,360 --> 00:08:05,520
i don't think and even if it is enabled

228
00:08:05,520 --> 00:08:09,039
um it only guards against instructions

229
00:08:09,039 --> 00:08:10,000
that the compiler

230
00:08:10,000 --> 00:08:12,639
actually generates on purpose and again

231
00:08:12,639 --> 00:08:14,800
we're talking about opcode splitting

232
00:08:14,800 --> 00:08:19,120
um so we we still can have gadgets even

233
00:08:19,120 --> 00:08:21,440
with cfg enabled so you can still create

234
00:08:21,440 --> 00:08:23,360
a drop exploit entirely

235
00:08:23,360 --> 00:08:26,080
based off of uh binary with that

236
00:08:26,080 --> 00:08:27,919
navigation and able to

237
00:08:27,919 --> 00:08:31,120
so it only does so much

238
00:08:31,120 --> 00:08:32,799
very cool do you have any other

239
00:08:32,799 --> 00:08:35,039
questions yeah tell us about how long it

240
00:08:35,039 --> 00:08:36,640
would take to develop a

241
00:08:36,640 --> 00:08:38,799
job-based exploit as compared to an rop

242
00:08:38,799 --> 00:08:40,000
based exploits on

243
00:08:40,000 --> 00:08:43,279
your experience so far i think it really

244
00:08:43,279 --> 00:08:45,040
depends on the binary itself and in

245
00:08:45,040 --> 00:08:46,000
particular

246
00:08:46,000 --> 00:08:49,120
the presence of the dispatcher gadget if

247
00:08:49,120 --> 00:08:51,120
there's a really good dispatcher gadget

248
00:08:51,120 --> 00:08:54,320
it could be pretty quickly um

249
00:08:54,320 --> 00:08:56,800
if there's one that's less desirable but

250
00:08:56,800 --> 00:08:57,519
still

251
00:08:57,519 --> 00:08:59,360
feasible for instance austin does one

252
00:08:59,360 --> 00:09:01,440
where he's getting a

253
00:09:01,440 --> 00:09:04,320
dereferenced chunk of memory it has a

254
00:09:04,320 --> 00:09:06,160
little bit of complication but it took

255
00:09:06,160 --> 00:09:06,560
him

256
00:09:06,560 --> 00:09:08,880
less than a day to develop the one that

257
00:09:08,880 --> 00:09:09,760
he

258
00:09:09,760 --> 00:09:12,959
did with the icon making software so it

259
00:09:12,959 --> 00:09:14,480
really just comes down to to the

260
00:09:14,480 --> 00:09:15,360
dispatcher again

261
00:09:15,360 --> 00:09:16,480
at the same time there's also the

262
00:09:16,480 --> 00:09:18,320
possibility where you don't have to do

263
00:09:18,320 --> 00:09:21,120
this dispatcher gadget full job

264
00:09:21,120 --> 00:09:23,519
chain thing you can just do it as a way

265
00:09:23,519 --> 00:09:24,160
to kind of

266
00:09:24,160 --> 00:09:26,640
augment and supplement just return onto

267
00:09:26,640 --> 00:09:27,519
programming

268
00:09:27,519 --> 00:09:30,640
so in that respect you could go and load

269
00:09:30,640 --> 00:09:33,760
into a register just the address of a

270
00:09:33,760 --> 00:09:34,959
return instruction

271
00:09:34,959 --> 00:09:36,880
and in that sense you could just use jop

272
00:09:36,880 --> 00:09:39,519
as kind of a way to

273
00:09:39,519 --> 00:09:41,680
adjust a job gadget in that sense could

274
00:09:41,680 --> 00:09:43,120
be equivalent to

275
00:09:43,120 --> 00:09:45,760
just another rock gadget and so that

276
00:09:45,760 --> 00:09:46,240
could just

277
00:09:46,240 --> 00:09:48,959
you could just use it as a way to expand

278
00:09:48,959 --> 00:09:50,720
rock gadgets so

279
00:09:50,720 --> 00:09:54,240
um the answer to your question is

280
00:09:54,240 --> 00:09:56,640
again it really just comes down to the

281
00:09:56,640 --> 00:09:57,279
presence

282
00:09:57,279 --> 00:09:59,920
of dispatcher gadgets how many they are

283
00:09:59,920 --> 00:10:01,360
how good they are

284
00:10:01,360 --> 00:10:05,200
but it can be very quickly um

285
00:10:05,200 --> 00:10:08,399
if it's susceptible to the the technique

286
00:10:08,399 --> 00:10:10,079
where we have the automatic jock chain

287
00:10:10,079 --> 00:10:11,920
generation

288
00:10:11,920 --> 00:10:14,000
then that could be very fast because

289
00:10:14,000 --> 00:10:15,839
that that approach is actually

290
00:10:15,839 --> 00:10:18,640
very much much much simpler but it kind

291
00:10:18,640 --> 00:10:19,839
of assumes that there's no

292
00:10:19,839 --> 00:10:21,680
no bad characters no bad bites it's not

293
00:10:21,680 --> 00:10:24,160
every binary has that

294
00:10:24,160 --> 00:10:26,079
so your latest version i think has this

295
00:10:26,079 --> 00:10:28,880
uh blockchain generation stuff right

296
00:10:28,880 --> 00:10:30,240
like you just just released a new

297
00:10:30,240 --> 00:10:31,760
version of the of the drop rocket tool

298
00:10:31,760 --> 00:10:33,120
right

299
00:10:33,120 --> 00:10:35,519
yes we just released a new version uh

300
00:10:35,519 --> 00:10:36,720
actually

301
00:10:36,720 --> 00:10:38,480
updated it last night just to get the

302
00:10:38,480 --> 00:10:40,880
latest and freshest but that that is

303
00:10:40,880 --> 00:10:41,760
built

304
00:10:41,760 --> 00:10:46,959
into the latest version awesome awesome

305
00:10:46,959 --> 00:10:50,160
you talked about cfg just now um

306
00:10:50,160 --> 00:10:52,160
are there any other cfg technologies on

307
00:10:52,160 --> 00:10:53,839
the horizon that would affect

308
00:10:53,839 --> 00:10:57,360
this that you are aware of

309
00:10:57,360 --> 00:11:00,640
yeah um the set thing the cet

310
00:11:00,640 --> 00:11:04,000
that's a joint collaboration from uh

311
00:11:04,000 --> 00:11:06,320
intel and in microsoft and that's

312
00:11:06,320 --> 00:11:07,040
basically

313
00:11:07,040 --> 00:11:10,480
kind of uh cfg on

314
00:11:10,480 --> 00:11:13,600
on drugs or asset it's just much more

315
00:11:13,600 --> 00:11:14,079
powerful

316
00:11:14,079 --> 00:11:15,760
and again that's what i was talking

317
00:11:15,760 --> 00:11:17,120
about earlier

318
00:11:17,120 --> 00:11:19,200
will provide very strong defense not

319
00:11:19,200 --> 00:11:21,360
only against rob gadgets with rock

320
00:11:21,360 --> 00:11:23,519
gadgets still have a whole separate

321
00:11:23,519 --> 00:11:25,680
shadow stack that's hardware based and

322
00:11:25,680 --> 00:11:28,480
they'll introduce new um

323
00:11:28,480 --> 00:11:32,000
assembly instructions to prevent you

324
00:11:32,000 --> 00:11:32,640
from

325
00:11:32,640 --> 00:11:35,680
essentially the idea with rob or job is

326
00:11:35,680 --> 00:11:36,399
you'll go

327
00:11:36,399 --> 00:11:39,440
into the middle of an instruction

328
00:11:39,440 --> 00:11:42,720
about this way or a function and this

329
00:11:42,720 --> 00:11:44,240
way it'll prevent you from doing that

330
00:11:44,240 --> 00:11:45,760
you'll only be able to go to the

331
00:11:45,760 --> 00:11:47,360
beginning of a function

332
00:11:47,360 --> 00:11:50,000
and you know function in assembly is a

333
00:11:50,000 --> 00:11:51,040
very long thing

334
00:11:51,040 --> 00:11:53,760
so it just it wouldn't really be

335
00:11:53,760 --> 00:11:54,560
feasible

336
00:11:54,560 --> 00:11:57,680
to do really anything with rob or or job

337
00:11:57,680 --> 00:11:58,880
but again that's something that could

338
00:11:58,880 --> 00:12:00,800
take several years for it to to be

339
00:12:00,800 --> 00:12:03,199
deployed

340
00:12:03,360 --> 00:12:07,680
um do you remember the questions

341
00:12:07,680 --> 00:12:10,399
what i mean from discord not really no

342
00:12:10,399 --> 00:12:10,959
but

343
00:12:10,959 --> 00:12:12,240
what would be the real-world

344
00:12:12,240 --> 00:12:14,079
applications of using this um

345
00:12:14,079 --> 00:12:17,200
have you seen it being used by

346
00:12:17,200 --> 00:12:19,519
apts or malicious actors or whatnot so

347
00:12:19,519 --> 00:12:20,560
far i

348
00:12:20,560 --> 00:12:22,320
remember seeing in your abstract it's a

349
00:12:22,320 --> 00:12:24,079
phantom concept up till

350
00:12:24,079 --> 00:12:27,360
recently it really has not

351
00:12:27,360 --> 00:12:30,560
been very widely used uh but there has

352
00:12:30,560 --> 00:12:33,040
been some uh when you're doing some

353
00:12:33,040 --> 00:12:34,560
research we came upon

354
00:12:34,560 --> 00:12:36,800
and saw that some people were using it

355
00:12:36,800 --> 00:12:37,839
for instance in

356
00:12:37,839 --> 00:12:40,480
sony playstation 4 that wasn't even in a

357
00:12:40,480 --> 00:12:42,160
windows application they're doing kind

358
00:12:42,160 --> 00:12:43,600
of their own variation

359
00:12:43,600 --> 00:12:46,079
of a job which is a little bit different

360
00:12:46,079 --> 00:12:46,720
but

361
00:12:46,720 --> 00:12:49,519
no it really hasn't been widely used yet

362
00:12:49,519 --> 00:12:52,320
i think we're hoping to uh

363
00:12:52,320 --> 00:12:55,200
i run a lab at dakota state university

364
00:12:55,200 --> 00:12:56,079
called the

365
00:12:56,079 --> 00:12:57,360
verona lab which deals with

366
00:12:57,360 --> 00:12:59,120
vulnerability research and exploit and

367
00:12:59,120 --> 00:13:00,959
development of exploit tools and austin

368
00:13:00,959 --> 00:13:03,040
is a full-time employee

369
00:13:03,040 --> 00:13:04,480
right now during the summer at least

370
00:13:04,480 --> 00:13:06,800
he's a he's a finishing his master's

371
00:13:06,800 --> 00:13:08,000
degree

372
00:13:08,000 --> 00:13:10,959
but we're hoping to do and release just

373
00:13:10,959 --> 00:13:13,200
a number of different job gadgets

374
00:13:13,200 --> 00:13:16,639
or not drop exploits and put them out

375
00:13:16,639 --> 00:13:17,680
places and

376
00:13:17,680 --> 00:13:19,839
hopefully make this more prevalent

377
00:13:19,839 --> 00:13:21,040
because you know a lot of people don't

378
00:13:21,040 --> 00:13:22,399
really know about it because

379
00:13:22,399 --> 00:13:24,560
without the job rocket this is something

380
00:13:24,560 --> 00:13:26,399
that really hasn't really been

381
00:13:26,399 --> 00:13:27,920
too feasible there really hasn't been

382
00:13:27,920 --> 00:13:29,680
the knowledge and uh

383
00:13:29,680 --> 00:13:31,839
to be able to even do it because there's

384
00:13:31,839 --> 00:13:33,360
lots of

385
00:13:33,360 --> 00:13:35,120
different questions and technical

386
00:13:35,120 --> 00:13:37,519
obstacles that austin and i've had to

387
00:13:37,519 --> 00:13:39,680
to overcome so we're hoping to see more

388
00:13:39,680 --> 00:13:42,000
people maybe start to use it because i

389
00:13:42,000 --> 00:13:43,040
mean it does have

390
00:13:43,040 --> 00:13:48,480
that potential and there is also

391
00:13:48,480 --> 00:13:49,920
that's always what everybody's waiting

392
00:13:49,920 --> 00:13:51,519
for you know like example

393
00:13:51,519 --> 00:13:53,519
kind of face you know pretty sure the

394
00:13:53,519 --> 00:13:54,959
top rocket gives them that incentive

395
00:13:54,959 --> 00:13:55,920
yeah exactly

396
00:13:55,920 --> 00:13:57,600
exactly so more people to check it out

397
00:13:57,600 --> 00:14:00,399
um do we still have time

398
00:14:00,399 --> 00:14:02,639
no they are quite up already you know

399
00:14:02,639 --> 00:14:03,680
yeah guys

400
00:14:03,680 --> 00:14:05,120
uh anything else you guys want to add

401
00:14:05,120 --> 00:14:07,440
before we let you guys get on

402
00:14:07,440 --> 00:14:09,680
with some sleep i suppose or yeah get

403
00:14:09,680 --> 00:14:10,720
out of your day

404
00:14:10,720 --> 00:14:14,000
it's six o'clock in the morning right

405
00:14:14,000 --> 00:14:16,320
you need to find some coffee get in the

406
00:14:16,320 --> 00:14:19,040
coffee i guess

407
00:14:19,920 --> 00:14:21,120
uh yeah i mean you guys don't have

408
00:14:21,120 --> 00:14:22,639
anything else thank you so much for

409
00:14:22,639 --> 00:14:24,240
joining us in the studio guys i mean

410
00:14:24,240 --> 00:14:30,639
awesome research as always

411
00:14:30,639 --> 00:14:32,560
all right human uh anything to add nah

412
00:14:32,560 --> 00:14:34,399
let's say i think

413
00:14:34,399 --> 00:14:42,880
cool guys take care

