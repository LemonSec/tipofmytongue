1
00:00:15,679 --> 00:00:16,320
hello

2
00:00:16,320 --> 00:00:20,480
everyone i'm very happy to be here

3
00:00:20,480 --> 00:00:23,600
this is my first time to come to haka in

4
00:00:23,600 --> 00:00:25,039
a box secured

5
00:00:25,039 --> 00:00:28,480
conference today i would like to

6
00:00:28,480 --> 00:00:31,760
share my precious work with you

7
00:00:31,760 --> 00:00:34,960
my name is chan chan and the topic to be

8
00:00:34,960 --> 00:00:35,680
shared

9
00:00:35,680 --> 00:00:40,480
is a journey interesting knowledge loss

10
00:00:43,200 --> 00:00:47,879
a senior security engineering of

11
00:00:47,879 --> 00:00:49,600
chihu36017

12
00:00:49,600 --> 00:00:53,039
currently i many focus on the security

13
00:00:53,039 --> 00:00:53,600
of

14
00:00:53,600 --> 00:00:56,640
embodied device i have found

15
00:00:56,640 --> 00:01:01,280
nearly 280 vulgar businesses on device

16
00:01:01,280 --> 00:01:04,400
from soho routers such as cleaning

17
00:01:04,400 --> 00:01:07,600
metagear to business devices

18
00:01:07,600 --> 00:01:10,640
such as the loyal mechanological

19
00:01:10,640 --> 00:01:13,760
os and switched

20
00:01:13,760 --> 00:01:17,280
roothead firewall from cisco

21
00:01:17,280 --> 00:01:20,560
ubiquity tritec and so on

22
00:01:20,560 --> 00:01:24,240
also i have shared some of my researches

23
00:01:24,240 --> 00:01:28,560
on other security confluence

24
00:01:29,200 --> 00:01:32,880
before we start it should be loaded that

25
00:01:32,880 --> 00:01:35,920
all the opinions expressed here

26
00:01:35,920 --> 00:01:40,079
are solely on my own here we go long

27
00:01:40,079 --> 00:01:43,759
this talk is broken down into four parts

28
00:01:43,759 --> 00:01:46,399
and part one i'll start off by

29
00:01:46,399 --> 00:01:49,040
introducing the religious stuff

30
00:01:49,040 --> 00:01:52,960
about the knowledge class in part two

31
00:01:52,960 --> 00:01:56,399
i'll spend some time explaining how to

32
00:01:56,399 --> 00:01:59,600
set up a cellular class environment for

33
00:01:59,600 --> 00:02:01,680
later research

34
00:02:01,680 --> 00:02:05,680
in part 3 i'll dive into the scenarios

35
00:02:05,680 --> 00:02:08,479
from both the local and remote

36
00:02:08,479 --> 00:02:10,160
perspective

37
00:02:10,160 --> 00:02:13,040
then share some of the opinions found in

38
00:02:13,040 --> 00:02:14,400
detail

39
00:02:14,400 --> 00:02:19,120
part 4 is a summary of this talk

40
00:02:19,680 --> 00:02:23,440
started with the introduction

41
00:02:23,440 --> 00:02:25,840
before you look into the intelligence of

42
00:02:25,840 --> 00:02:27,760
the cellular class

43
00:02:27,760 --> 00:02:30,879
you start at the beginning what's the

44
00:02:30,879 --> 00:02:31,920
last

45
00:02:31,920 --> 00:02:34,720
the full level of last is lateral

46
00:02:34,720 --> 00:02:35,440
attached

47
00:02:35,440 --> 00:02:39,040
storage it has the most storage device

48
00:02:39,040 --> 00:02:41,920
that connects to your home or office

49
00:02:41,920 --> 00:02:43,360
network

50
00:02:43,360 --> 00:02:46,800
you can store water failed online

51
00:02:46,800 --> 00:02:49,840
from important documents to previous

52
00:02:49,840 --> 00:02:51,040
photos

53
00:02:51,040 --> 00:02:54,319
music and video collections

54
00:02:54,319 --> 00:02:57,280
what's the most important is that you

55
00:02:57,280 --> 00:02:58,480
can access

56
00:02:58,480 --> 00:03:02,640
and share these files conveniently

57
00:03:02,640 --> 00:03:06,000
you may wonder why choose to use last

58
00:03:06,000 --> 00:03:09,120
whereas most of data storage solutions

59
00:03:09,120 --> 00:03:12,400
are either local or cloud based

60
00:03:12,400 --> 00:03:15,599
a last device is like a mix

61
00:03:15,599 --> 00:03:19,120
of two on the one hand

62
00:03:19,120 --> 00:03:22,239
last device are functionally similar

63
00:03:22,239 --> 00:03:25,440
to any other kind of external hard drive

64
00:03:25,440 --> 00:03:28,480
you may you have used before

65
00:03:28,480 --> 00:03:31,599
but also provided the remote access and

66
00:03:31,599 --> 00:03:35,680
sync capability on the other hand

67
00:03:35,680 --> 00:03:38,879
you can benefit from the last devices

68
00:03:38,879 --> 00:03:42,560
the convenience of cloud storage

69
00:03:42,560 --> 00:03:44,959
without giving it all way to a

70
00:03:44,959 --> 00:03:46,080
potentially

71
00:03:46,080 --> 00:03:51,200
a trans trustworthy third party company

72
00:03:51,200 --> 00:03:55,680
then why do we choose celluloid lungs

73
00:03:55,680 --> 00:03:58,239
clear are the top last vendors from

74
00:03:58,239 --> 00:03:59,439
amazon

75
00:03:59,439 --> 00:04:02,640
among of them say knowledge a

76
00:04:02,640 --> 00:04:04,560
taiwanese corporation that is

77
00:04:04,560 --> 00:04:06,239
specialized in last

78
00:04:06,239 --> 00:04:10,720
appliance is owen the business sailor

79
00:04:10,720 --> 00:04:13,599
is described as a long-time leader in

80
00:04:13,599 --> 00:04:14,319
the small

81
00:04:14,319 --> 00:04:17,519
business and homeless area

82
00:04:17,519 --> 00:04:20,880
in addition it has become one of the

83
00:04:20,880 --> 00:04:26,719
parts in pong2o tokyo 2020.

84
00:04:27,280 --> 00:04:30,320
the knowledge line of lust is known as

85
00:04:30,320 --> 00:04:33,680
discussation for desktop models

86
00:04:33,680 --> 00:04:36,800
flash staging forward flashing models

87
00:04:36,800 --> 00:04:39,600
and the direct station for recommended

88
00:04:39,600 --> 00:04:40,960
models

89
00:04:40,960 --> 00:04:43,520
in this talk we will focus on the

90
00:04:43,520 --> 00:04:45,199
discrimination

91
00:04:45,199 --> 00:04:48,720
as to each line it provides several

92
00:04:48,720 --> 00:04:52,240
different scales to meet different leads

93
00:04:52,240 --> 00:04:55,280
the coverage range from personal and

94
00:04:55,280 --> 00:04:56,720
home user

95
00:04:56,720 --> 00:05:00,560
to i.t enthusiasts too small and

96
00:05:00,560 --> 00:05:05,440
middle-sized business to enterprise

97
00:05:07,039 --> 00:05:10,479
in addition to sega station

98
00:05:10,479 --> 00:05:13,440
station manager is what's been mentioned

99
00:05:13,440 --> 00:05:14,639
here

100
00:05:14,639 --> 00:05:17,680
is based on linux and an

101
00:05:17,680 --> 00:05:20,880
intuitive web-based operating system

102
00:05:20,880 --> 00:05:24,560
for every theology loss it provides

103
00:05:24,560 --> 00:05:28,080
rich features such as file thinking

104
00:05:28,080 --> 00:05:32,320
data backup cloud service and so on

105
00:05:32,320 --> 00:05:35,440
the aim of it is to provide

106
00:05:35,440 --> 00:05:38,479
better flexibility and usability

107
00:05:38,479 --> 00:05:41,680
in every aspect in the past

108
00:05:41,680 --> 00:05:45,039
few years there have been some security

109
00:05:45,039 --> 00:05:45,680
news

110
00:05:45,680 --> 00:05:50,080
related to knowledge loss among of them

111
00:05:50,080 --> 00:05:53,120
two are run somewhere attacks

112
00:05:53,120 --> 00:05:56,160
the nature of last makes it a good

113
00:05:56,160 --> 00:05:56,960
hazard for

114
00:05:56,960 --> 00:06:00,240
run some words besides it should be

115
00:06:00,240 --> 00:06:06,400
noted that the

116
00:06:06,400 --> 00:06:09,520
key as the 115g model was

117
00:06:09,520 --> 00:06:13,360
heated in quick punch 2018

118
00:06:13,360 --> 00:06:15,840
the player got the router privilege on

119
00:06:15,840 --> 00:06:16,880
the device

120
00:06:16,880 --> 00:06:19,919
with a further overflow vulnerability

121
00:06:19,919 --> 00:06:20,319
and

122
00:06:20,319 --> 00:06:23,600
in foundation of tokyo 2020

123
00:06:23,600 --> 00:06:27,039
a lot of model d as the 418 player

124
00:06:27,039 --> 00:06:30,479
was hitted again by two teams

125
00:06:30,479 --> 00:06:33,840
both of them got a routine on the device

126
00:06:33,840 --> 00:06:35,360
successfully

127
00:06:35,360 --> 00:06:38,960
however currently there are still a lot

128
00:06:38,960 --> 00:06:39,919
much details

129
00:06:39,919 --> 00:06:44,560
about this vulnerabilities in public

130
00:06:46,000 --> 00:06:48,400
i'm losing the first let's assess the

131
00:06:48,400 --> 00:06:49,599
security of

132
00:06:49,599 --> 00:06:53,440
knowledge laws of course not the last

133
00:06:53,440 --> 00:06:56,400
there is a white paper published by ncc

134
00:06:56,400 --> 00:06:56,960
group

135
00:06:56,960 --> 00:07:00,160
in 2017 they discussed

136
00:07:00,160 --> 00:07:03,599
in detail the analysis performed master

137
00:07:03,599 --> 00:07:04,960
knowledge used

138
00:07:04,960 --> 00:07:07,919
and the vulnerabilities found in

139
00:07:07,919 --> 00:07:09,440
addition to that

140
00:07:09,440 --> 00:07:12,960
the researchers from isc assessed the

141
00:07:12,960 --> 00:07:13,840
security of

142
00:07:13,840 --> 00:07:17,360
setting soho route on the last devices

143
00:07:17,360 --> 00:07:20,800
including the knowledge class recently

144
00:07:20,800 --> 00:07:24,000
the cisco taylor team conducted a

145
00:07:24,000 --> 00:07:25,840
security analysis

146
00:07:25,840 --> 00:07:30,560
on the theology srm and the dsm

147
00:07:30,560 --> 00:07:33,280
they many focused on its quicker connect

148
00:07:33,280 --> 00:07:34,319
feature

149
00:07:34,319 --> 00:07:37,720
and discovered multiple remote

150
00:07:37,720 --> 00:07:41,840
vulnerabilities on the basis of them

151
00:07:41,840 --> 00:07:44,560
i try to reveal more intellect of the

152
00:07:44,560 --> 00:07:46,560
lord's glass itself

153
00:07:46,560 --> 00:07:49,680
of course with more vulnerabilities

154
00:07:49,680 --> 00:07:52,400
in detail

155
00:07:53,280 --> 00:07:56,560
all right you know about me you know

156
00:07:56,560 --> 00:07:57,440
about this

157
00:07:57,440 --> 00:08:00,479
knowledge last let's move on to the

158
00:08:00,479 --> 00:08:03,919
next part set up an environment

159
00:08:03,919 --> 00:08:07,440
for security research firstly we need

160
00:08:07,440 --> 00:08:08,319
something to

161
00:08:08,319 --> 00:08:12,479
test on currently there are two ways

162
00:08:12,479 --> 00:08:15,440
either you can buy a device directly

163
00:08:15,440 --> 00:08:16,240
from this

164
00:08:16,240 --> 00:08:20,000
knowledge also called whitest knowledge

165
00:08:20,000 --> 00:08:23,039
it's easy to set up and use and

166
00:08:23,039 --> 00:08:26,639
has complete features may be a little

167
00:08:26,639 --> 00:08:28,319
expensive

168
00:08:28,319 --> 00:08:31,280
what you can assemble device with custom

169
00:08:31,280 --> 00:08:32,399
hardware

170
00:08:32,399 --> 00:08:36,399
and install the office official dsm

171
00:08:36,399 --> 00:08:39,200
also called black's knowledge his

172
00:08:39,200 --> 00:08:40,240
relative

173
00:08:40,240 --> 00:08:43,200
is much cheaper and has more and has the

174
00:08:43,200 --> 00:08:43,599
most

175
00:08:43,599 --> 00:08:49,200
feature which is enough for our research

176
00:08:49,360 --> 00:08:52,320
as to practice knowledge thanks to the

177
00:08:52,320 --> 00:08:53,360
community

178
00:08:53,360 --> 00:08:56,240
it's possible to create a last virtual

179
00:08:56,240 --> 00:08:57,440
machine

180
00:08:57,440 --> 00:09:00,480
what will either a visual profile from

181
00:09:00,480 --> 00:09:01,680
the vendor

182
00:09:01,680 --> 00:09:04,880
and an uefi or files loader from the

183
00:09:04,880 --> 00:09:06,320
community

184
00:09:06,320 --> 00:09:09,200
after the virtual machine is started and

185
00:09:09,200 --> 00:09:11,360
the loader is loaded

186
00:09:11,360 --> 00:09:14,320
we can configure the device and install

187
00:09:14,320 --> 00:09:15,360
dsm

188
00:09:15,360 --> 00:09:18,240
either through the web assistant what's

189
00:09:18,240 --> 00:09:20,480
the logic assistant

190
00:09:20,480 --> 00:09:23,760
then we can access and manage it

191
00:09:23,760 --> 00:09:27,680
by browser unfortunately

192
00:09:27,680 --> 00:09:31,040
some trouble is doing the latest

193
00:09:31,040 --> 00:09:37,360
version in this way

194
00:09:37,360 --> 00:09:40,880
what if we want to trust the latest dsm

195
00:09:40,880 --> 00:09:44,160
version the virtual machine manager

196
00:09:44,160 --> 00:09:46,080
provided by the legend

197
00:09:46,080 --> 00:09:49,519
comes to risk us is an intuitive

198
00:09:49,519 --> 00:09:51,600
hypervisor software

199
00:09:51,600 --> 00:09:55,120
and integrates various visualization

200
00:09:55,120 --> 00:09:56,399
solutions

201
00:09:56,399 --> 00:09:59,440
with it we can run multiple

202
00:09:59,440 --> 00:10:02,640
virtual machines and select lots

203
00:10:02,640 --> 00:10:06,320
of course including the knowledge tsm

204
00:10:06,320 --> 00:10:07,839
instance

205
00:10:07,839 --> 00:10:11,040
it showed we can create an

206
00:10:11,040 --> 00:10:13,440
order last virtual machine with

207
00:10:13,440 --> 00:10:15,120
framework workstation

208
00:10:15,120 --> 00:10:18,880
or something similar then run multiple

209
00:10:18,880 --> 00:10:19,600
virtual d

210
00:10:19,600 --> 00:10:23,760
small instance inside it by the way

211
00:10:23,760 --> 00:10:26,959
a dark package is a lot lighter weighted

212
00:10:26,959 --> 00:10:30,839
virtualization application provided by

213
00:10:30,839 --> 00:10:34,240
knowledge which can run virtual dsm

214
00:10:34,240 --> 00:10:38,240
as well however darker theism

215
00:10:38,240 --> 00:10:41,360
reached the end of life on december

216
00:10:41,360 --> 00:10:44,320
20 lighting

217
00:10:45,680 --> 00:10:50,800
now we have both the dsm-622

218
00:10:50,800 --> 00:10:54,720
and the dsm-7200 environment

219
00:10:54,720 --> 00:10:58,320
since the latter is due on backstage

220
00:10:58,320 --> 00:11:00,720
and a lot of what the features are yet

221
00:11:00,720 --> 00:11:01,519
stable and

222
00:11:01,519 --> 00:11:05,760
mature in this talk we many focus on the

223
00:11:05,760 --> 00:11:07,240
dsm

224
00:11:07,240 --> 00:11:11,120
6.1 or 632 version

225
00:11:11,120 --> 00:11:15,839
by the way the theology

226
00:11:16,800 --> 00:11:20,079
also provides online dsm small for

227
00:11:20,079 --> 00:11:24,000
experience maybe you can combat research

228
00:11:24,000 --> 00:11:28,079
based on that

229
00:11:28,079 --> 00:11:31,839
lastly for bug hunting it's necessary to

230
00:11:31,839 --> 00:11:32,640
access the

231
00:11:32,640 --> 00:11:36,000
leaning shield on the device virtually

232
00:11:36,000 --> 00:11:40,000
the ssh is available moreover

233
00:11:40,000 --> 00:11:42,959
the ability to debug the program is

234
00:11:42,959 --> 00:11:44,880
pretty fundamental

235
00:11:44,880 --> 00:11:48,160
to our delight there is a utility

236
00:11:48,160 --> 00:11:49,839
package

237
00:11:49,839 --> 00:11:53,440
called diagnosis tool we can install it

238
00:11:53,440 --> 00:11:57,200
from the packaging center sometimes

239
00:11:57,200 --> 00:11:59,600
if you can't find it in the package

240
00:11:59,600 --> 00:12:00,800
center

241
00:12:00,800 --> 00:12:04,160
a relative way is to install it from the

242
00:12:04,160 --> 00:12:05,600
terminal shield

243
00:12:05,600 --> 00:12:09,120
with the commander silo gear installed

244
00:12:09,120 --> 00:12:11,839
applet is doing it there are many

245
00:12:11,839 --> 00:12:13,040
utility tools

246
00:12:13,040 --> 00:12:19,199
available like gdb and the gdp server

247
00:12:19,519 --> 00:12:23,200
now everything is ready let's go into

248
00:12:23,200 --> 00:12:23,920
the most

249
00:12:23,920 --> 00:12:26,800
important part

250
00:12:27,200 --> 00:12:30,399
since the device is network reachable

251
00:12:30,399 --> 00:12:33,360
supposing you are an adversary what can

252
00:12:33,360 --> 00:12:34,000
you do

253
00:12:34,000 --> 00:12:36,560
if you are in the same local area

254
00:12:36,560 --> 00:12:37,279
network

255
00:12:37,279 --> 00:12:40,240
as the device

256
00:12:41,360 --> 00:12:45,279
first let's start with service probing

257
00:12:45,279 --> 00:12:48,320
as we can see there are many websites

258
00:12:48,320 --> 00:12:51,120
listening on the device including common

259
00:12:51,120 --> 00:12:52,399
set sites

260
00:12:52,399 --> 00:12:56,079
such as angix mini as dvd

261
00:12:56,079 --> 00:12:59,680
as nmpd and so on also

262
00:12:59,680 --> 00:13:02,959
there are some customer services namely

263
00:13:02,959 --> 00:13:06,480
find the host d i iscsi

264
00:13:06,480 --> 00:13:09,519
slab short common core cellulose

265
00:13:09,519 --> 00:13:13,600
and pcd as for me i prefer the

266
00:13:13,600 --> 00:13:17,200
customer services for it seems to be

267
00:13:17,200 --> 00:13:22,160
less tested and more vulnerable

268
00:13:22,880 --> 00:13:26,000
so let's look at the service finder host

269
00:13:26,000 --> 00:13:26,959
d

270
00:13:26,959 --> 00:13:29,440
in short it's responsible for

271
00:13:29,440 --> 00:13:31,680
communicating with the solology

272
00:13:31,680 --> 00:13:33,040
assistant

273
00:13:33,040 --> 00:13:35,920
which is the desktop utility that

274
00:13:35,920 --> 00:13:36,800
searches for

275
00:13:36,800 --> 00:13:40,320
disk station in local area network

276
00:13:40,320 --> 00:13:43,839
we can use it to configure the device

277
00:13:43,839 --> 00:13:46,959
such as the administrator password

278
00:13:46,959 --> 00:13:50,240
the way to obtain an ip address

279
00:13:50,240 --> 00:13:54,240
and mostly importantly install the dsm

280
00:13:54,240 --> 00:13:57,760
on device now

281
00:13:57,760 --> 00:14:02,160
you may wonder how psychology assistant

282
00:14:02,160 --> 00:14:06,880
communicator with the final host day

283
00:14:08,000 --> 00:14:10,480
here is a simple communication flow

284
00:14:10,480 --> 00:14:12,000
between them

285
00:14:12,000 --> 00:14:15,120
first they are communicated wide line

286
00:14:15,120 --> 00:14:18,720
line line line udp port in general

287
00:14:18,720 --> 00:14:21,760
the telology assistant first study

288
00:14:21,760 --> 00:14:24,959
sends a broadcaster qre package

289
00:14:24,959 --> 00:14:27,920
and define the host d sends both a

290
00:14:27,920 --> 00:14:28,959
broadcaster

291
00:14:28,959 --> 00:14:33,600
and the unicode package as a response

292
00:14:33,600 --> 00:14:36,880
after finding the device the telology

293
00:14:36,880 --> 00:14:39,519
assistant can continue to send other

294
00:14:39,519 --> 00:14:41,440
broadcaster packets

295
00:14:41,440 --> 00:14:44,320
such as the configuration packet

296
00:14:44,320 --> 00:14:45,120
similarly

297
00:14:45,120 --> 00:14:47,600
the final hosting sends both a

298
00:14:47,600 --> 00:14:49,839
broadcaster and the unique

299
00:14:49,839 --> 00:14:54,399
customer packet as a response

300
00:14:56,079 --> 00:14:58,800
here are some texts captured during

301
00:14:58,800 --> 00:15:00,160
installation

302
00:15:00,160 --> 00:15:03,360
as i mentioned before the messages are

303
00:15:03,360 --> 00:15:06,720
sent out by broadcast also

304
00:15:06,720 --> 00:15:10,399
there are clear tests for we can see

305
00:15:10,399 --> 00:15:13,760
information such as mac address server

306
00:15:13,760 --> 00:15:14,720
name

307
00:15:14,720 --> 00:15:19,760
serial number model and so on

308
00:15:20,399 --> 00:15:22,880
to get a bad understanding of the

309
00:15:22,880 --> 00:15:24,720
message format

310
00:15:24,720 --> 00:15:28,000
reverse engineering is lesser

311
00:15:28,000 --> 00:15:32,160
as a result some clues are found

312
00:15:32,160 --> 00:15:34,959
first the message begins with their

313
00:15:34,959 --> 00:15:36,160
magic

314
00:15:36,160 --> 00:15:39,600
then there is a large chunk of data

315
00:15:39,600 --> 00:15:41,839
which indicates the format and the

316
00:15:41,839 --> 00:15:44,399
meaning of the remaining part

317
00:15:44,399 --> 00:15:47,440
for each data chunk it has six

318
00:15:47,440 --> 00:15:50,959
fields as destruction

319
00:15:50,959 --> 00:15:53,920
specifically the picket id field

320
00:15:53,920 --> 00:15:54,560
indicates

321
00:15:54,560 --> 00:15:57,600
the meaning of data such as

322
00:15:57,600 --> 00:16:02,480
packet type user name or mac address

323
00:16:02,480 --> 00:16:05,519
the offset field means we want to put

324
00:16:05,519 --> 00:16:08,720
the data in the buffer the max lens

325
00:16:08,720 --> 00:16:09,360
filter

326
00:16:09,360 --> 00:16:13,120
limits the length of data

327
00:16:14,079 --> 00:16:18,160
with this information the packet can be

328
00:16:18,160 --> 00:16:21,199
assembled like this the first

329
00:16:21,199 --> 00:16:24,880
part is magic number the remaining part

330
00:16:24,880 --> 00:16:28,320
is composed of many segments

331
00:16:28,320 --> 00:16:31,440
each segment has three fields

332
00:16:31,440 --> 00:16:35,120
picked id data length and data

333
00:16:35,120 --> 00:16:38,240
moreover for integer data

334
00:16:38,240 --> 00:16:42,000
its length is fixed and equal to four

335
00:16:42,000 --> 00:16:45,199
fourths during data it has a

336
00:16:45,199 --> 00:16:50,160
variable length

337
00:16:50,160 --> 00:16:53,600
sadly to make it easier to disassemble

338
00:16:53,600 --> 00:16:54,959
the package

339
00:16:54,959 --> 00:16:58,079
a washer plugin is created

340
00:16:58,079 --> 00:17:00,720
with it we can have a better

341
00:17:00,720 --> 00:17:03,519
understanding of the packet format

342
00:17:03,519 --> 00:17:06,640
by the way this plugin is publicly

343
00:17:06,640 --> 00:17:09,360
available

344
00:17:10,880 --> 00:17:13,760
since we have loaded a message format

345
00:17:13,760 --> 00:17:14,640
between the

346
00:17:14,640 --> 00:17:18,640
final host d and the syllogy assistant

347
00:17:18,640 --> 00:17:21,679
let's get it deeper the value of

348
00:17:21,679 --> 00:17:24,720
pk id1 indicates the type of

349
00:17:24,720 --> 00:17:28,160
whole packet some common technique types

350
00:17:28,160 --> 00:17:31,200
are broadcasted query let

351
00:17:31,200 --> 00:17:34,400
set in quicker conf or

352
00:17:34,400 --> 00:17:37,760
memory test among of them some

353
00:17:37,760 --> 00:17:41,200
text such as let's setting quick conf

354
00:17:41,200 --> 00:17:44,240
and the memory test package contains

355
00:17:44,240 --> 00:17:47,600
an encoded administrator password

356
00:17:47,600 --> 00:17:51,120
whose packet id is

357
00:17:51,120 --> 00:17:55,120
2a as sample of quicker configuration

358
00:17:55,120 --> 00:17:56,799
packet is shown

359
00:17:56,799 --> 00:18:00,080
as we can see the picket id1

360
00:18:00,080 --> 00:18:03,360
has a value of 4 which means it is a

361
00:18:03,360 --> 00:18:04,000
quicker

362
00:18:04,000 --> 00:18:08,240
configuration package the pkid 2a

363
00:18:08,240 --> 00:18:11,440
contains the encoded password

364
00:18:11,440 --> 00:18:14,480
through reverse engine layering it

365
00:18:14,480 --> 00:18:17,679
turns out that the included password is

366
00:18:17,679 --> 00:18:22,640
the solution matrix decode

367
00:18:22,640 --> 00:18:26,480
here comes the first issue remember that

368
00:18:26,480 --> 00:18:28,880
messages are centered by broadcaster

369
00:18:28,880 --> 00:18:31,840
implementation

370
00:18:32,480 --> 00:18:35,760
as a result in some cases

371
00:18:35,760 --> 00:18:39,120
an adversary can easily show the

372
00:18:39,120 --> 00:18:42,160
claim text and misdirect password

373
00:18:42,160 --> 00:18:46,880
by monitoring the broadcast traffic

374
00:18:48,320 --> 00:18:51,440
last question is how low buster is

375
00:18:51,440 --> 00:18:52,640
recorded for

376
00:18:52,640 --> 00:18:56,160
passing the package because i'm too lazy

377
00:18:56,160 --> 00:18:56,480
to

378
00:18:56,480 --> 00:18:59,760
assess it and manually so i resort to

379
00:18:59,760 --> 00:19:02,960
protocol filing i provide a kg

380
00:19:02,960 --> 00:19:06,240
and scrappy framework which is very

381
00:19:06,240 --> 00:19:06,960
convenient

382
00:19:06,960 --> 00:19:11,039
and flexible with this guy's power

383
00:19:11,039 --> 00:19:14,640
we can define the protocol format

384
00:19:14,640 --> 00:19:17,600
and a quick name

385
00:19:18,559 --> 00:19:21,840
on the one hand with the kt

386
00:19:21,840 --> 00:19:25,120
framework we can reuse the predefined

387
00:19:25,120 --> 00:19:26,799
protocol format

388
00:19:26,799 --> 00:19:29,840
to build a black spot further easily

389
00:19:29,840 --> 00:19:33,360
and quickly moreover thanks to the

390
00:19:33,360 --> 00:19:34,240
community

391
00:19:34,240 --> 00:19:36,960
mechanism

392
00:19:37,520 --> 00:19:40,480
we can fight both the final host d and

393
00:19:40,480 --> 00:19:40,960
the

394
00:19:40,960 --> 00:19:46,240
logic assistant at the same time

395
00:19:48,400 --> 00:19:51,360
on the other hand with the predefined

396
00:19:51,360 --> 00:19:52,000
protocol

397
00:19:52,000 --> 00:19:54,960
format we can also build a simple

398
00:19:54,960 --> 00:19:56,880
cellology assistant

399
00:19:56,880 --> 00:20:00,240
client with python

400
00:20:01,440 --> 00:20:04,240
one of the issues found by farting is

401
00:20:04,240 --> 00:20:05,840
related to stelloid

402
00:20:05,840 --> 00:20:09,039
assistant during funding

403
00:20:09,039 --> 00:20:12,240
my already configured device becomes

404
00:20:12,240 --> 00:20:15,760
loaded configured did some corrupted

405
00:20:15,760 --> 00:20:19,200
packs reset my disk station after

406
00:20:19,200 --> 00:20:20,159
investigating

407
00:20:20,159 --> 00:20:23,919
it it has turned out that some corrupted

408
00:20:23,919 --> 00:20:24,720
attacks

409
00:20:24,720 --> 00:20:28,000
deceived the still religious assistant

410
00:20:28,000 --> 00:20:31,120
my disk station is okay but the

411
00:20:31,120 --> 00:20:32,720
cellology assistant

412
00:20:32,720 --> 00:20:36,559
thinks loaded configured normally

413
00:20:36,559 --> 00:20:39,039
in this case you may choose to

414
00:20:39,039 --> 00:20:40,880
reconfigure the device

415
00:20:40,880 --> 00:20:43,840
files the knowledge assistant and set

416
00:20:43,840 --> 00:20:45,919
the username and password

417
00:20:45,919 --> 00:20:50,400
used before again since the messages are

418
00:20:50,400 --> 00:20:52,240
centered by broadcaster in

419
00:20:52,240 --> 00:20:56,400
plain text password leakage comes back

420
00:20:56,400 --> 00:20:59,840
in summary an adversary and seated

421
00:20:59,840 --> 00:21:02,400
administrator into reconfiguring the

422
00:21:02,400 --> 00:21:03,520
device

423
00:21:03,520 --> 00:21:06,559
then sever the plain test administrate

424
00:21:06,559 --> 00:21:07,600
password

425
00:21:07,600 --> 00:21:12,320
by monitoring the broadcast traffic

426
00:21:13,360 --> 00:21:16,559
it's worth mentioning that in most

427
00:21:16,559 --> 00:21:19,280
recent theology assistant what d as a

428
00:21:19,280 --> 00:21:20,640
movement

429
00:21:20,640 --> 00:21:22,960
an increasing mechanism from

430
00:21:22,960 --> 00:21:24,080
communication

431
00:21:24,080 --> 00:21:27,840
is introduced as we can see

432
00:21:27,840 --> 00:21:31,039
there are two magics allowed one is for

433
00:21:31,039 --> 00:21:34,480
playing tesla message and a lot is for

434
00:21:34,480 --> 00:21:36,480
encrypted message

435
00:21:36,480 --> 00:21:40,159
and some new pkid items are added

436
00:21:40,159 --> 00:21:44,400
for supporting encryption in addition

437
00:21:44,400 --> 00:21:47,520
if the target dsm doesn't support

438
00:21:47,520 --> 00:21:50,559
encryption there will be a worrying

439
00:21:50,559 --> 00:21:51,120
message

440
00:21:51,120 --> 00:21:55,120
shown in the theology assistant

441
00:21:55,120 --> 00:21:58,559
it is part of this even if both the

442
00:21:58,559 --> 00:22:01,679
knowledge assistant and the dsm

443
00:22:01,679 --> 00:22:04,880
are the legislative version it's still

444
00:22:04,880 --> 00:22:05,919
possible to do

445
00:22:05,919 --> 00:22:09,280
passwords severely

446
00:22:10,840 --> 00:22:14,360
next let's take a look at the service

447
00:22:14,360 --> 00:22:17,720
iscsi slash camcorder

448
00:22:17,720 --> 00:22:20,640
iscsi is a protocol to

449
00:22:20,640 --> 00:22:23,600
facilitate scsi business storage

450
00:22:23,600 --> 00:22:24,640
commands

451
00:22:24,640 --> 00:22:27,200
to be send over your biggest network

452
00:22:27,200 --> 00:22:28,880
structures

453
00:22:28,880 --> 00:22:32,799
two related processes are iscsi

454
00:22:32,799 --> 00:22:36,880
slave short common core and the iscsi

455
00:22:36,880 --> 00:22:40,000
selection server the communication

456
00:22:40,000 --> 00:22:43,440
between them are outlined as follows

457
00:22:43,440 --> 00:22:46,799
first the iscsis

458
00:22:46,799 --> 00:22:49,440
leverage your common core receive and

459
00:22:49,440 --> 00:22:49,840
pass

460
00:22:49,840 --> 00:22:53,440
data from internal circuit

461
00:22:53,440 --> 00:22:57,120
send the data to itself through pipe

462
00:22:57,120 --> 00:23:00,159
after passing the pipe data send it

463
00:23:00,159 --> 00:23:03,520
to the iscsi lecture server

464
00:23:03,520 --> 00:23:08,640
through piper again the iscsi selection

465
00:23:08,640 --> 00:23:09,520
server

466
00:23:09,520 --> 00:23:12,240
pass the pipe data and execute

467
00:23:12,240 --> 00:23:14,320
corresponding commands

468
00:23:14,320 --> 00:23:17,760
such as delete slip shutter start mirror

469
00:23:17,760 --> 00:23:22,640
and so on with the general understanding

470
00:23:22,640 --> 00:23:26,080
let's look at it in detail in the stage

471
00:23:26,080 --> 00:23:26,880
one

472
00:23:26,880 --> 00:23:30,159
the following philippines is responsible

473
00:23:30,159 --> 00:23:33,440
for reading pacts from circuit as

474
00:23:33,440 --> 00:23:36,240
we can say before the memory copy

475
00:23:36,240 --> 00:23:37,280
function

476
00:23:37,280 --> 00:23:40,320
there is a signed integer comparison

477
00:23:40,320 --> 00:23:43,840
and the v4 variable is passed

478
00:23:43,840 --> 00:23:46,480
to the memory copy function at the size

479
00:23:46,480 --> 00:23:48,400
parameter

480
00:23:48,400 --> 00:23:51,440
if the variable base 7 is a negative

481
00:23:51,440 --> 00:23:52,480
number

482
00:23:52,480 --> 00:23:55,600
then the size of data to be covered will

483
00:23:55,600 --> 00:23:55,919
be

484
00:23:55,919 --> 00:23:59,600
very big thus causing an invalid

485
00:23:59,600 --> 00:24:03,679
memory access exception since the v7

486
00:24:03,679 --> 00:24:07,200
is the return value of a2 function

487
00:24:07,200 --> 00:24:10,480
it's clear that when the third parameter

488
00:24:10,480 --> 00:24:10,799
is

489
00:24:10,799 --> 00:24:14,720
zero the if condition will certify

490
00:24:14,720 --> 00:24:18,159
and the elective one will be returned

491
00:24:18,159 --> 00:24:21,360
further the setup parameter comes from

492
00:24:21,360 --> 00:24:25,279
a live circuit data at a position 4.

493
00:24:25,279 --> 00:24:29,600
so it's a controllable as a result

494
00:24:29,600 --> 00:24:32,880
by crafting a packet we can try

495
00:24:32,880 --> 00:24:37,360
overflow when calling memory copy

496
00:24:37,520 --> 00:24:41,120
however during memory copy an invalid

497
00:24:41,120 --> 00:24:44,320
memory access exception will occur

498
00:24:44,320 --> 00:24:47,679
here is the slapshot about the crash

499
00:24:47,679 --> 00:24:50,960
by the way this issue was

500
00:24:50,960 --> 00:24:54,080
fixed silently by the vendor for i

501
00:24:54,080 --> 00:24:54,720
couldn't

502
00:24:54,720 --> 00:25:00,000
find any information related to it

503
00:25:00,000 --> 00:25:02,799
suppose we ignore it and come to the

504
00:25:02,799 --> 00:25:04,080
stage 2

505
00:25:04,080 --> 00:25:07,440
the iscsi selection cam core

506
00:25:07,440 --> 00:25:11,760
pass the data and core related functions

507
00:25:11,760 --> 00:25:14,320
there are many functions with a prefix

508
00:25:14,320 --> 00:25:15,440
handle

509
00:25:15,440 --> 00:25:18,240
among of them function handle sender

510
00:25:18,240 --> 00:25:18,799
message

511
00:25:18,799 --> 00:25:22,159
and handle receive message are different

512
00:25:22,159 --> 00:25:25,440
according to an inlet structure take the

513
00:25:25,440 --> 00:25:26,000
function

514
00:25:26,000 --> 00:25:29,520
handle receive message as an example

515
00:25:29,520 --> 00:25:31,760
if i will call function apple center

516
00:25:31,760 --> 00:25:32,720
control

517
00:25:32,720 --> 00:25:36,159
eventually it should be noted that

518
00:25:36,159 --> 00:25:38,480
the set parameter comes from the

519
00:25:38,480 --> 00:25:40,159
received message

520
00:25:40,159 --> 00:25:43,760
and is controllable

521
00:25:43,760 --> 00:25:47,279
then we reached as registry the type of

522
00:25:47,279 --> 00:25:48,960
central control function

523
00:25:48,960 --> 00:25:52,159
was under data to is csi

524
00:25:52,159 --> 00:25:55,279
selection server through pipe the

525
00:25:55,279 --> 00:25:56,080
function

526
00:25:56,080 --> 00:25:59,760
sector right is responsible for this

527
00:25:59,760 --> 00:26:02,559
its fourth argument comes from the third

528
00:26:02,559 --> 00:26:03,200
argument

529
00:26:03,200 --> 00:26:06,400
of apple standard control function

530
00:26:06,400 --> 00:26:08,400
the correct particular function is

531
00:26:08,400 --> 00:26:11,279
accorded to build a package

532
00:26:11,279 --> 00:26:14,720
this side of it sets the corner

533
00:26:14,720 --> 00:26:17,679
to allocate a buffer then called memory

534
00:26:17,679 --> 00:26:19,679
copy to fill it

535
00:26:19,679 --> 00:26:22,640
since the size parameter of memory copy

536
00:26:22,640 --> 00:26:25,279
is controllable

537
00:26:25,279 --> 00:26:28,400
on the one hand if a small large value

538
00:26:28,400 --> 00:26:29,919
is provided

539
00:26:29,919 --> 00:26:32,799
it will read beyond the buffer pointed

540
00:26:32,799 --> 00:26:34,159
by a2

541
00:26:34,159 --> 00:26:37,600
this case is similar to the open

542
00:26:37,600 --> 00:26:42,159
high split variability on the other hand

543
00:26:42,159 --> 00:26:45,440
if a big logic value is provided

544
00:26:45,440 --> 00:26:49,120
then an integer overflow will occur

545
00:26:49,120 --> 00:26:52,240
when a3 plus 32

546
00:26:52,240 --> 00:26:55,919
as a result the size positive to dark

547
00:26:55,919 --> 00:26:57,200
will be zero

548
00:26:57,200 --> 00:26:59,679
while the copper side of memory copy

549
00:26:59,679 --> 00:27:00,320
will

550
00:27:00,320 --> 00:27:04,000
be very big thus causing an inverted

551
00:27:04,000 --> 00:27:06,960
memory excess exception during memory

552
00:27:06,960 --> 00:27:09,440
copy

553
00:27:10,400 --> 00:27:13,600
according to this structure all r

554
00:27:13,600 --> 00:27:14,240
functions

555
00:27:14,240 --> 00:27:17,919
have a predefined lens value only

556
00:27:17,919 --> 00:27:20,799
these two functions don't have which

557
00:27:20,799 --> 00:27:21,679
leads to this

558
00:27:21,679 --> 00:27:25,520
issue again there is a slave shot

559
00:27:25,520 --> 00:27:28,640
about the crash by the way

560
00:27:28,640 --> 00:27:31,200
it has seemed that the vendor didn't fix

561
00:27:31,200 --> 00:27:32,640
this involving it

562
00:27:32,640 --> 00:27:36,159
after i reported on pong2o

563
00:27:36,159 --> 00:27:39,279
tokyo 2020

564
00:27:39,279 --> 00:27:42,240
the starlabs team changed this out of

565
00:27:42,240 --> 00:27:42,880
boundary

566
00:27:42,880 --> 00:27:46,080
vulnerability with other vulnerabilities

567
00:27:46,080 --> 00:27:49,679
and achieved the remote total execution

568
00:27:49,679 --> 00:27:54,279
against the dsl418 player model

569
00:27:54,279 --> 00:27:58,159
congratulations to disguise

570
00:27:59,840 --> 00:28:02,960
suppose we explore it again under reach

571
00:28:02,960 --> 00:28:05,120
the stage 4

572
00:28:05,120 --> 00:28:08,640
the iscsi slave show server

573
00:28:08,640 --> 00:28:11,600
will read the data from private and deal

574
00:28:11,600 --> 00:28:12,799
with it

575
00:28:12,799 --> 00:28:15,600
the function handle product command will

576
00:28:15,600 --> 00:28:16,320
be called

577
00:28:16,320 --> 00:28:19,760
in normal routines the main logic of

578
00:28:19,760 --> 00:28:23,039
handle products monsters is converted

579
00:28:23,039 --> 00:28:24,559
the

580
00:28:24,559 --> 00:28:27,679
receiver data into json object

581
00:28:27,679 --> 00:28:31,919
and resolve some case such as command

582
00:28:31,919 --> 00:28:35,840
command action plugin id and so on

583
00:28:35,840 --> 00:28:39,200
among of them the command parameter will

584
00:28:39,200 --> 00:28:39,919
be used

585
00:28:39,919 --> 00:28:42,399
to stretch the corresponding handle

586
00:28:42,399 --> 00:28:43,760
function

587
00:28:43,760 --> 00:28:47,360
which will be called later

588
00:28:49,360 --> 00:28:52,159
as we can see there are many supported

589
00:28:52,159 --> 00:28:53,200
commands

590
00:28:53,200 --> 00:28:55,919
like a register connector starting

591
00:28:55,919 --> 00:28:56,720
mirror

592
00:28:56,720 --> 00:29:00,080
delete alone and so on take the delete

593
00:29:00,080 --> 00:29:00,559
one

594
00:29:00,559 --> 00:29:04,080
command as an example the corresponding

595
00:29:04,080 --> 00:29:05,039
handle function

596
00:29:05,039 --> 00:29:08,159
is the hand product digital loan in

597
00:29:08,159 --> 00:29:11,600
handout positive loan function it will

598
00:29:11,600 --> 00:29:12,000
simply

599
00:29:12,000 --> 00:29:16,399
get the required parameters then call

600
00:29:16,399 --> 00:29:19,360
zelo iscsi loan delete function to

601
00:29:19,360 --> 00:29:20,960
delete a loan

602
00:29:20,960 --> 00:29:23,520
surprisingly low was nucleation is

603
00:29:23,520 --> 00:29:24,640
required

604
00:29:24,640 --> 00:29:27,919
in consequence it's possible for us

605
00:29:27,919 --> 00:29:30,399
and wasn't executed anniversary to

606
00:29:30,399 --> 00:29:31,360
delete the rule

607
00:29:31,360 --> 00:29:34,640
on the device which may pose right to

608
00:29:34,640 --> 00:29:37,360
our data

609
00:29:38,960 --> 00:29:42,320
okay so far we suppose we are in the

610
00:29:42,320 --> 00:29:43,440
same

611
00:29:43,440 --> 00:29:46,480
local area network as the device but

612
00:29:46,480 --> 00:29:49,600
in reality last is over industry in

613
00:29:49,600 --> 00:29:53,760
remote salaries which can be accessed

614
00:29:53,760 --> 00:29:56,799
over the internet every time earlier

615
00:29:56,799 --> 00:30:00,720
from added device and browser that is

616
00:30:00,720 --> 00:30:03,760
maybe only port 5000 is available

617
00:30:03,760 --> 00:30:06,879
in this situation

618
00:30:07,200 --> 00:30:09,840
by simply setting online devices through

619
00:30:09,840 --> 00:30:10,799
jordan

620
00:30:10,799 --> 00:30:14,240
it turns out that indeed only a few

621
00:30:14,240 --> 00:30:14,720
posts

622
00:30:14,720 --> 00:30:18,720
are accessible again

623
00:30:18,720 --> 00:30:21,360
suppose you are an adversary what can

624
00:30:21,360 --> 00:30:23,039
you do in this remote

625
00:30:23,039 --> 00:30:25,840
situations

626
00:30:26,640 --> 00:30:29,919
the first question is to say how can you

627
00:30:29,919 --> 00:30:30,799
determine

628
00:30:30,799 --> 00:30:33,919
whether the device behind this ip is as

629
00:30:33,919 --> 00:30:34,960
the knowledge loss

630
00:30:34,960 --> 00:30:38,720
or lord what's more if it is

631
00:30:38,720 --> 00:30:41,919
what is the version of it what packages

632
00:30:41,919 --> 00:30:42,240
is

633
00:30:42,240 --> 00:30:46,799
its door under the corresponding version

634
00:30:46,799 --> 00:30:49,039
this is what about it divides

635
00:30:49,039 --> 00:30:51,120
fingerprinting

636
00:30:51,120 --> 00:30:54,399
to our relief there are some clues

637
00:30:54,399 --> 00:30:58,720
in the index page as we can see

638
00:30:58,720 --> 00:31:01,760
there are some serious references

639
00:31:01,760 --> 00:31:04,799
indicating which imbued models and the

640
00:31:04,799 --> 00:31:06,159
third-party packages

641
00:31:06,159 --> 00:31:10,880
are available in addition to that

642
00:31:10,880 --> 00:31:13,840
there are some unique script links for

643
00:31:13,840 --> 00:31:15,840
the knowledge labs

644
00:31:15,840 --> 00:31:19,120
with this information we can build a

645
00:31:19,120 --> 00:31:22,000
more precise theory using shortened or

646
00:31:22,000 --> 00:31:25,519
something similar then how about a

647
00:31:25,519 --> 00:31:27,200
version

648
00:31:27,200 --> 00:31:30,399
an actual wave parameter is attached

649
00:31:30,399 --> 00:31:33,760
to each link in general

650
00:31:33,760 --> 00:31:36,159
this parameter indicates the last

651
00:31:36,159 --> 00:31:37,279
modified

652
00:31:37,279 --> 00:31:40,480
timestamp that is the build

653
00:31:40,480 --> 00:31:44,399
timestamp based on it we can invert the

654
00:31:44,399 --> 00:31:46,559
corresponding version

655
00:31:46,559 --> 00:31:49,919
take the last link as an example

656
00:31:49,919 --> 00:31:53,039
the time step can be converted to this

657
00:31:53,039 --> 00:31:56,000
time after searching in the large

658
00:31:56,000 --> 00:31:58,880
firmware archive

659
00:31:58,880 --> 00:32:01,440
there is a high possibility that the

660
00:32:01,440 --> 00:32:03,360
version of dsm

661
00:32:03,360 --> 00:32:09,279
is 6.22325426

662
00:32:09,279 --> 00:32:12,399
similarly the version of water station

663
00:32:12,399 --> 00:32:13,360
package

664
00:32:13,360 --> 00:32:20,080
is 645.6377

665
00:32:21,200 --> 00:32:24,399
next it's less way to understand

666
00:32:24,399 --> 00:32:27,039
how does it work in remote access

667
00:32:27,039 --> 00:32:29,200
situations

668
00:32:29,200 --> 00:32:33,039
when accessed remotely the only entry

669
00:32:33,039 --> 00:32:36,480
is through port 5000

670
00:32:36,480 --> 00:32:39,600
that is water requests are centered to

671
00:32:39,600 --> 00:32:40,640
the device

672
00:32:40,640 --> 00:32:44,159
by this port here are some requests

673
00:32:44,159 --> 00:32:48,399
captured during a normal login operation

674
00:32:48,399 --> 00:32:51,518
as we can see

675
00:32:52,080 --> 00:32:55,600
there are many several urls requested

676
00:32:55,600 --> 00:32:59,000
such as curing door stage eye

677
00:32:59,000 --> 00:33:04,159
login.ci and entry.ci

678
00:33:04,159 --> 00:33:06,799
the picture on the right is a simple

679
00:33:06,799 --> 00:33:07,840
workflow to

680
00:33:07,840 --> 00:33:10,880
interact with the device step

681
00:33:10,880 --> 00:33:13,840
one is to retrieve api information

682
00:33:13,840 --> 00:33:14,320
through

683
00:33:14,320 --> 00:33:17,919
curated cgi url

684
00:33:17,919 --> 00:33:20,559
step two is to login to get an

685
00:33:20,559 --> 00:33:21,360
authorized

686
00:33:21,360 --> 00:33:25,200
session id through encryption.i

687
00:33:25,200 --> 00:33:29,600
and login.ci with the search id

688
00:33:29,600 --> 00:33:32,720
then you can send an api request

689
00:33:32,720 --> 00:33:35,840
file entry door cgi and pass the

690
00:33:35,840 --> 00:33:37,679
response

691
00:33:37,679 --> 00:33:40,640
after finishing the introduction you can

692
00:33:40,640 --> 00:33:41,440
log out

693
00:33:41,440 --> 00:33:45,279
to end the login session

694
00:33:46,320 --> 00:33:49,279
with the general understanding of the

695
00:33:49,279 --> 00:33:50,720
workflow

696
00:33:50,720 --> 00:33:55,519
let's see how to make a specific request

697
00:33:56,080 --> 00:33:59,200
take this picture as an example the

698
00:33:59,200 --> 00:33:59,919
request

699
00:33:59,919 --> 00:34:03,200
is centered in adjacent opposite way

700
00:34:03,200 --> 00:34:06,640
the endpoint for most requests is

701
00:34:06,640 --> 00:34:10,800
slash web api slash entry dot ci

702
00:34:10,800 --> 00:34:14,159
in the poster data the api

703
00:34:14,159 --> 00:34:16,960
parameter indicates which api will be

704
00:34:16,960 --> 00:34:19,520
requested

705
00:34:19,520 --> 00:34:22,079
the method parameter is the method

706
00:34:22,079 --> 00:34:24,239
supported by the api

707
00:34:24,239 --> 00:34:26,800
and the version parameter is the version

708
00:34:26,800 --> 00:34:30,399
of api requested

709
00:34:31,280 --> 00:34:35,040
but what we can say from the front and

710
00:34:35,040 --> 00:34:37,839
how is the request passed in the back

711
00:34:37,839 --> 00:34:38,960
end

712
00:34:38,960 --> 00:34:42,239
they look used a method file to define

713
00:34:42,239 --> 00:34:43,040
information

714
00:34:43,040 --> 00:34:46,079
related to api requests

715
00:34:46,079 --> 00:34:49,359
the name of this method files has a

716
00:34:49,359 --> 00:34:50,000
prefix

717
00:34:50,000 --> 00:34:53,760
0 and a poster fixed layer

718
00:34:53,760 --> 00:34:56,719
part of content is as follows

719
00:34:56,719 --> 00:34:58,320
specifically

720
00:34:58,320 --> 00:35:01,040
this is the api name specified in the

721
00:35:01,040 --> 00:35:02,480
request

722
00:35:02,480 --> 00:35:04,880
the allow user field indicates which

723
00:35:04,880 --> 00:35:05,520
group

724
00:35:05,520 --> 00:35:08,880
can access api

725
00:35:08,880 --> 00:35:11,200
the awards level field means if

726
00:35:11,200 --> 00:35:12,240
authentication

727
00:35:12,240 --> 00:35:15,280
is required overload zero means low

728
00:35:15,280 --> 00:35:17,119
authentication

729
00:35:17,119 --> 00:35:20,079
the lever filter specifies the price the

730
00:35:20,079 --> 00:35:21,520
password file to

731
00:35:21,520 --> 00:35:24,960
handle this request the message part

732
00:35:24,960 --> 00:35:28,000
contains which number

733
00:35:28,000 --> 00:35:31,760
and the message supported by this api

734
00:35:31,760 --> 00:35:34,480
also allow user filters are being

735
00:35:34,480 --> 00:35:35,359
redefined

736
00:35:35,359 --> 00:35:38,400
in each method

737
00:35:39,920 --> 00:35:43,359
so far we love how to make a specific

738
00:35:43,359 --> 00:35:44,240
request

739
00:35:44,240 --> 00:35:47,040
to reach the title battery in the back

740
00:35:47,040 --> 00:35:48,000
end

741
00:35:48,000 --> 00:35:51,920
finally let's from the whole perspective

742
00:35:51,920 --> 00:35:54,640
here is a simple and high level process

743
00:35:54,640 --> 00:35:55,599
flow

744
00:35:55,599 --> 00:35:59,200
first a request is sent to the device

745
00:35:59,200 --> 00:36:02,720
5.5 000 then

746
00:36:02,720 --> 00:36:06,400
based on the requested url the engine

747
00:36:06,400 --> 00:36:08,640
server will schedule the corresponding

748
00:36:08,640 --> 00:36:09,440
stage i

749
00:36:09,440 --> 00:36:13,599
to hand the request such as the curate

750
00:36:13,599 --> 00:36:14,880
door stage i

751
00:36:14,880 --> 00:36:18,960
login to ci and entry door ci

752
00:36:18,960 --> 00:36:22,240
among of them entry door stage i is the

753
00:36:22,240 --> 00:36:23,040
endpoint

754
00:36:23,040 --> 00:36:26,880
for most poster requests this stage i

755
00:36:26,880 --> 00:36:30,560
may communicate with a lot tool process

756
00:36:30,560 --> 00:36:35,680
stylo city id and the cello sdgi

757
00:36:35,680 --> 00:36:38,480
cello stage id many hand searching

758
00:36:38,480 --> 00:36:41,839
related stuff and the silo sdgi

759
00:36:41,839 --> 00:36:45,040
is mainly responsible for dispatching

760
00:36:45,040 --> 00:36:45,920
specific

761
00:36:45,920 --> 00:36:50,640
requests to the auditor battery

762
00:36:51,200 --> 00:36:53,839
after understanding the requested handle

763
00:36:53,839 --> 00:36:55,200
metal inside

764
00:36:55,200 --> 00:36:58,800
you may wonder what api you can reach to

765
00:36:58,800 --> 00:37:02,480
actually there are many many api

766
00:37:02,480 --> 00:37:05,680
in general two main attack services are

767
00:37:05,680 --> 00:37:09,520
exposed the dsm itself

768
00:37:09,520 --> 00:37:14,079
and the various packages

769
00:37:15,200 --> 00:37:18,320
let's start with the ts file app

770
00:37:18,320 --> 00:37:21,520
the ads provided by statology

771
00:37:21,520 --> 00:37:24,400
it easy and convenient to manage and

772
00:37:24,400 --> 00:37:26,720
access your disk station

773
00:37:26,720 --> 00:37:29,839
from mobile phone

774
00:37:30,240 --> 00:37:33,440
one of them is ds file with

775
00:37:33,440 --> 00:37:36,640
it you can browser transfer and then

776
00:37:36,640 --> 00:37:37,599
manage files

777
00:37:37,599 --> 00:37:41,760
on the disk station easily

778
00:37:42,960 --> 00:37:47,440
the api flow is similar to my web photo

779
00:37:47,440 --> 00:37:50,960
when try to login to the disk station

780
00:37:50,960 --> 00:37:54,960
in normal case pki basically increasing

781
00:37:54,960 --> 00:37:58,560
the resolution for authentication

782
00:37:58,560 --> 00:38:03,040
but what if you input a wrong ip or lane

783
00:38:03,040 --> 00:38:06,079
what a letter work is temporarily

784
00:38:06,079 --> 00:38:10,160
available as to this loop case

785
00:38:10,160 --> 00:38:13,599
since the faster request will fail

786
00:38:13,599 --> 00:38:18,800
two more requests will be made

787
00:38:18,800 --> 00:38:21,760
let's get a close look at it

788
00:38:21,760 --> 00:38:23,200
surprisingly

789
00:38:23,200 --> 00:38:26,800
the sata requests that contain a base

790
00:38:26,800 --> 00:38:30,079
64 encoded account account

791
00:38:30,079 --> 00:38:33,920
information which is equivalent to plain

792
00:38:33,920 --> 00:38:35,359
text

793
00:38:35,359 --> 00:38:38,960
to conclude if you try to access your

794
00:38:38,960 --> 00:38:39,359
disk

795
00:38:39,359 --> 00:38:42,960
station write ps file app in a

796
00:38:42,960 --> 00:38:46,640
safe network environment by simply

797
00:38:46,640 --> 00:38:47,520
dropping or

798
00:38:47,520 --> 00:38:51,440
redirecting specific requests

799
00:38:51,440 --> 00:38:55,839
a mitm adversary can obtain a clean text

800
00:38:55,839 --> 00:38:57,280
password

801
00:38:57,280 --> 00:39:03,040
is applied even if huge gps mode is used

802
00:39:04,640 --> 00:39:07,440
next let's look at the knowledge

803
00:39:07,440 --> 00:39:09,119
standing up package

804
00:39:09,119 --> 00:39:11,359
it's a web-based application for

805
00:39:11,359 --> 00:39:12,240
organizing

806
00:39:12,240 --> 00:39:15,359
and planning out a daily event it

807
00:39:15,359 --> 00:39:15,920
supports

808
00:39:15,920 --> 00:39:19,920
share calendar within a group of people

809
00:39:19,920 --> 00:39:22,960
also adding attachments to even

810
00:39:22,960 --> 00:39:25,839
is supported

811
00:39:26,079 --> 00:39:29,520
so how does the attachment work

812
00:39:29,520 --> 00:39:33,280
when try to attach files one way is to

813
00:39:33,280 --> 00:39:33,920
upload

814
00:39:33,920 --> 00:39:37,599
from your computer allow it to upload

815
00:39:37,599 --> 00:39:38,079
from

816
00:39:38,079 --> 00:39:41,119
the knowledge class the following is the

817
00:39:41,119 --> 00:39:42,320
request

818
00:39:42,320 --> 00:39:44,800
when trying to upload from the knowledge

819
00:39:44,800 --> 00:39:45,760
class

820
00:39:45,760 --> 00:39:48,880
if that turns out that the file path is

821
00:39:48,880 --> 00:39:51,119
loaded validated properly

822
00:39:51,119 --> 00:39:53,760
and the service from the directory

823
00:39:53,760 --> 00:39:54,839
traversal

824
00:39:54,839 --> 00:39:58,320
problem by injecting

825
00:39:58,320 --> 00:40:01,839
prostate into file patch parameter

826
00:40:01,839 --> 00:40:04,800
it is possible for normal users to read

827
00:40:04,800 --> 00:40:05,520
files

828
00:40:05,520 --> 00:40:10,240
out of the shell folder

829
00:40:10,240 --> 00:40:13,359
after the alamo file is attached

830
00:40:13,359 --> 00:40:17,040
the link behind it is as follows

831
00:40:17,040 --> 00:40:20,640
as you may notice the file name is what

832
00:40:20,640 --> 00:40:24,240
a part of the link so can we control the

833
00:40:24,240 --> 00:40:24,880
link

834
00:40:24,880 --> 00:40:29,440
by providing a corrupted file name

835
00:40:29,920 --> 00:40:33,119
the answer is yes it's assumed that the

836
00:40:33,119 --> 00:40:35,520
filename is loaded

837
00:40:35,520 --> 00:40:39,520
before adding into the link as a result

838
00:40:39,520 --> 00:40:42,400
by corrupting a file name it's possible

839
00:40:42,400 --> 00:40:43,680
to change the link

840
00:40:43,680 --> 00:40:46,960
to what we want and also make the file

841
00:40:46,960 --> 00:40:47,359
name

842
00:40:47,359 --> 00:40:50,839
look normal to users

843
00:40:50,839 --> 00:40:54,160
moreover we can share this even within

844
00:40:54,160 --> 00:40:57,680
administrator group once one of the

845
00:40:57,680 --> 00:40:58,240
users

846
00:40:58,240 --> 00:41:00,240
in this group tried to click the

847
00:41:00,240 --> 00:41:02,560
attached file

848
00:41:02,560 --> 00:41:05,119
the requester we can chart will be

849
00:41:05,119 --> 00:41:07,839
executed

850
00:41:09,359 --> 00:41:12,079
in summary it's possible for normal

851
00:41:12,079 --> 00:41:12,960
users to

852
00:41:12,960 --> 00:41:15,760
execute arbitrary requests in the

853
00:41:15,760 --> 00:41:16,560
context

854
00:41:16,560 --> 00:41:20,720
of administrators such as adding itself

855
00:41:20,720 --> 00:41:24,480
into the administrator group

856
00:41:25,680 --> 00:41:28,560
a second package to discuss is a media

857
00:41:28,560 --> 00:41:29,520
server

858
00:41:29,520 --> 00:41:32,400
it provides a multimedia service to

859
00:41:32,400 --> 00:41:33,040
browser

860
00:41:33,040 --> 00:41:36,240
and play the multimedia contents on last

861
00:41:36,240 --> 00:41:40,480
white dlna or eopmb home devices

862
00:41:40,480 --> 00:41:43,520
applet is doing it some

863
00:41:43,520 --> 00:41:46,960
customer services will be started and

864
00:41:46,960 --> 00:41:50,160
after a simple analysis throughout the

865
00:41:50,160 --> 00:41:50,880
light

866
00:41:50,880 --> 00:41:54,079
some urls can be assessed

867
00:41:54,079 --> 00:41:57,760
without authentication

868
00:41:58,800 --> 00:42:02,720
one of them is the videos including cgi

869
00:42:02,720 --> 00:42:08,079
api here is the requested url format

870
00:42:08,079 --> 00:42:11,359
part of the code slipped 200 requested

871
00:42:11,359 --> 00:42:15,280
as follows it expects the url

872
00:42:15,280 --> 00:42:18,560
to be in a specific format

873
00:42:18,560 --> 00:42:22,720
but what if the url values the format

874
00:42:22,720 --> 00:42:26,960
it's obvious that by crafting a url like

875
00:42:26,960 --> 00:42:27,839
this

876
00:42:27,839 --> 00:42:31,680
we can try it flow when calling

877
00:42:31,680 --> 00:42:34,799
string encore p

878
00:42:36,160 --> 00:42:39,680
suppose we provide a normal url as the

879
00:42:39,680 --> 00:42:40,160
code

880
00:42:40,160 --> 00:42:43,680
expected the routine will continue

881
00:42:43,680 --> 00:42:47,440
and the function server 4 3

882
00:42:47,440 --> 00:42:51,040
f 5 0 will be called

883
00:42:51,040 --> 00:42:54,319
in function sub 4 3 f

884
00:42:54,319 --> 00:42:57,760
5 0 it will simply check the argument

885
00:42:57,760 --> 00:43:00,960
a2 then formatted

886
00:43:00,960 --> 00:43:05,599
argument a3 into a circuit statement

887
00:43:05,599 --> 00:43:09,359
since the argument a3 comes from the url

888
00:43:09,359 --> 00:43:12,800
and there is lack of proper validation

889
00:43:12,800 --> 00:43:17,200
by corrupting a url like this

890
00:43:18,400 --> 00:43:22,880
we can spike the circular injection

891
00:43:24,839 --> 00:43:27,520
vulnerability a slight similar and

892
00:43:27,520 --> 00:43:31,200
interesting api is jpeg tn scalar dosage

893
00:43:31,200 --> 00:43:32,240
i

894
00:43:32,240 --> 00:43:35,760
here is the requested url format

895
00:43:35,760 --> 00:43:38,960
part of the codex level 200 request

896
00:43:38,960 --> 00:43:42,319
is as follows it's

897
00:43:42,319 --> 00:43:45,440
clear that due to lack of let's check

898
00:43:45,440 --> 00:43:48,480
what calling strengthen copy

899
00:43:48,480 --> 00:43:52,319
by cropping a url like this we can drag

900
00:43:52,319 --> 00:43:55,839
above overflow

901
00:43:57,680 --> 00:44:00,640
the last second switch here is audio

902
00:44:00,640 --> 00:44:02,000
station

903
00:44:02,000 --> 00:44:04,640
it allows you to enjoy high quality

904
00:44:04,640 --> 00:44:05,839
playback

905
00:44:05,839 --> 00:44:09,359
listen to radios and manage your

906
00:44:09,359 --> 00:44:12,800
music collection similarly apple is

907
00:44:12,800 --> 00:44:13,440
doing

908
00:44:13,440 --> 00:44:16,560
it it has some custom cgi

909
00:44:16,560 --> 00:44:22,880
files which seems attractive

910
00:44:22,880 --> 00:44:26,560
record the http request process flow

911
00:44:26,560 --> 00:44:29,680
the executive cgi path is useful for

912
00:44:29,680 --> 00:44:32,640
handling custom cdi requests

913
00:44:32,640 --> 00:44:36,000
and in some cases authentication is

914
00:44:36,000 --> 00:44:40,480
checked in custom cgi files

915
00:44:41,200 --> 00:44:43,839
following are some examples of how to

916
00:44:43,839 --> 00:44:48,400
reach the custom serial endpoints

917
00:44:49,040 --> 00:44:52,560
most purely cgi file is the audio

918
00:44:52,560 --> 00:44:56,800
transfer cgi and here is the requested

919
00:44:56,800 --> 00:44:58,720
url format

920
00:44:58,720 --> 00:45:02,400
let's get a close look at it

921
00:45:02,400 --> 00:45:05,760
in main function sub 4

922
00:45:05,760 --> 00:45:08,800
cell 2 seventh radial function will be

923
00:45:08,800 --> 00:45:09,280
called

924
00:45:09,280 --> 00:45:12,640
at the beginning in function sub

925
00:45:12,640 --> 00:45:16,000
4 0 2 7 3 0

926
00:45:16,000 --> 00:45:19,680
it will cut the last part in your past

927
00:45:19,680 --> 00:45:23,359
and pass it into function media id

928
00:45:23,359 --> 00:45:26,480
decryption it's the worst mentioning

929
00:45:26,480 --> 00:45:27,280
that

930
00:45:27,280 --> 00:45:32,800
there is low authentication in routine

931
00:45:32,800 --> 00:45:35,920
in media eye description function

932
00:45:35,920 --> 00:45:38,480
it will faster get the length of

933
00:45:38,480 --> 00:45:40,160
argument a1

934
00:45:40,160 --> 00:45:43,599
then call sm pronoun function later

935
00:45:43,599 --> 00:45:46,640
as we can see the size and the bottom

936
00:45:46,640 --> 00:45:47,119
point

937
00:45:47,119 --> 00:45:51,599
of sm parental function is controllable

938
00:45:51,599 --> 00:45:55,040
it drives to trigger power overflow

939
00:45:55,040 --> 00:45:58,480
in consequence an authenticated remote

940
00:45:58,480 --> 00:46:01,839
adversary may achieve coded execution on

941
00:46:01,839 --> 00:46:04,560
the device

942
00:46:04,640 --> 00:46:08,560
so far we only have a few packages

943
00:46:08,560 --> 00:46:11,359
and discuss the vulnerabilities found in

944
00:46:11,359 --> 00:46:12,319
them

945
00:46:12,319 --> 00:46:15,280
actually celluloid life has a rich in

946
00:46:15,280 --> 00:46:16,560
build features

947
00:46:16,560 --> 00:46:19,760
and a lot of third-party packaging

948
00:46:19,760 --> 00:46:22,640
at the same time it will release its

949
00:46:22,640 --> 00:46:23,280
product

950
00:46:23,280 --> 00:46:26,880
security updates officially

951
00:46:26,880 --> 00:46:29,920
and combined with the syllogic firmware

952
00:46:29,920 --> 00:46:33,200
archive is great for us to do patch

953
00:46:33,200 --> 00:46:37,280
analysis and the bag hunting

954
00:46:37,280 --> 00:46:40,319
the following is a demo which will

955
00:46:40,319 --> 00:46:43,119
exploit the bible overflow vulnerability

956
00:46:43,119 --> 00:46:46,160
in the audio station package to get a

957
00:46:46,160 --> 00:46:47,119
routine

958
00:46:47,119 --> 00:46:57,839
on the device

959
00:47:02,960 --> 00:47:06,640
first up we checked the direction of dsm

960
00:47:06,640 --> 00:47:09,200
in building models and third party

961
00:47:09,200 --> 00:47:10,560
packages

962
00:47:10,560 --> 00:47:13,280
it turns out that the audio station

963
00:47:13,280 --> 00:47:15,040
package is installed

964
00:47:15,040 --> 00:47:25,839
and is relation is valuable

965
00:47:37,680 --> 00:47:41,040
then we run the poc against it

966
00:47:41,040 --> 00:47:53,839
and try to get a reverse skill

967
00:48:20,640 --> 00:48:25,040
successfully we got a ratio

968
00:48:28,640 --> 00:48:31,920
in the last part let's read what we have

969
00:48:31,920 --> 00:48:33,119
talked

970
00:48:33,119 --> 00:48:35,839
faster we learned how to set up an

971
00:48:35,839 --> 00:48:36,559
environment

972
00:48:36,559 --> 00:48:40,240
for security research then we discussed

973
00:48:40,240 --> 00:48:41,280
the common attack

974
00:48:41,280 --> 00:48:44,640
service such as the protocol used to

975
00:48:44,640 --> 00:48:45,119
search

976
00:48:45,119 --> 00:48:48,000
and configure last in local aerial

977
00:48:48,000 --> 00:48:49,119
network

978
00:48:49,119 --> 00:48:52,160
under those exposed by disk station

979
00:48:52,160 --> 00:48:55,359
manager and the third party packages

980
00:48:55,359 --> 00:48:58,960
also the http requested process flow is

981
00:48:58,960 --> 00:49:00,400
depicted

982
00:49:00,400 --> 00:49:03,920
including how to reach the api we owned

983
00:49:03,920 --> 00:49:06,960
last step but not released some worrying

984
00:49:06,960 --> 00:49:09,440
business are shared in detail

985
00:49:09,440 --> 00:49:12,160
for those guys who are interested on

986
00:49:12,160 --> 00:49:13,119
this

987
00:49:13,119 --> 00:49:15,839
maybe you can find more vulnerabilities

988
00:49:15,839 --> 00:49:17,760
by yourself later

989
00:49:17,760 --> 00:49:20,800
okay that's all i share today

990
00:49:20,800 --> 00:49:31,839
wish you would have a harvest thank you

