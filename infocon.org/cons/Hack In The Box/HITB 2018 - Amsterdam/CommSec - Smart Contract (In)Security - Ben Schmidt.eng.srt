1
00:00:14,040 --> 00:00:18,419
sorry about<font color="#E5E5E5"> the technical difficulties</font>

2
00:00:15,480 --> 00:00:24,060
everyone<font color="#E5E5E5"> my name is Ben Schmitt</font>

3
00:00:18,420 --> 00:00:30,300
I am<font color="#E5E5E5"> CSO at</font><font color="#CCCCCC"> paulie's horn there we go</font>

4
00:00:24,060 --> 00:00:33,360
<font color="#CCCCCC">all</font><font color="#E5E5E5"> right</font><font color="#CCCCCC"> and just a</font><font color="#E5E5E5"> little bit about us</font>

5
00:00:30,300 --> 00:00:35,550
<font color="#CCCCCC">we're working on</font><font color="#E5E5E5"> creating a distributed</font>

6
00:00:33,360 --> 00:00:39,660
threat intelligence market where<font color="#E5E5E5"> people</font>

7
00:00:35,550 --> 00:00:41,968
can<font color="#E5E5E5"> share files and have them analyzed</font>

8
00:00:39,660 --> 00:00:44,788
by a large collection of security

9
00:00:41,969 --> 00:00:46,350
experts<font color="#E5E5E5"> today</font><font color="#CCCCCC"> I'm not gonna be talking</font>

10
00:00:44,789 --> 00:00:49,430
<font color="#CCCCCC">too much about</font><font color="#E5E5E5"> that instead I'm</font><font color="#CCCCCC"> gonna be</font>

11
00:00:46,350 --> 00:00:52,350
talking<font color="#E5E5E5"> about security vulnerabilities</font>

12
00:00:49,430 --> 00:00:58,980
<font color="#E5E5E5">on the etherium network specifically</font>

13
00:00:52,350 --> 00:01:00,989
those written<font color="#E5E5E5"> in solidity so what is</font>

14
00:00:58,980 --> 00:01:03,480
<font color="#CCCCCC">gonna be</font><font color="#E5E5E5"> covered</font><font color="#CCCCCC"> are smart contract</font>

15
00:01:00,989 --> 00:01:06,539
<font color="#E5E5E5">vulnerabilities that allowed for someone</font>

16
00:01:03,480 --> 00:01:08,369
to steal funds<font color="#E5E5E5"> or disable the</font><font color="#CCCCCC"> use</font><font color="#E5E5E5"> of</font>

17
00:01:06,540 --> 00:01:10,500
<font color="#E5E5E5">funds so there's been a couple large</font>

18
00:01:08,369 --> 00:01:15,210
profile hacks<font color="#E5E5E5"> of a large amount of money</font>

19
00:01:10,500 --> 00:01:17,250
<font color="#E5E5E5">and there's also been some compromises</font>

20
00:01:15,210 --> 00:01:18,960
of smart contracts that<font color="#E5E5E5"> led to funds</font>

21
00:01:17,250 --> 00:01:21,659
effectively<font color="#CCCCCC"> being destroyed</font><font color="#E5E5E5"> on the</font>

22
00:01:18,960 --> 00:01:23,610
network<font color="#E5E5E5"> these are all going to be things</font>

23
00:01:21,659 --> 00:01:25,979
<font color="#CCCCCC">that have happened in the real world</font>

24
00:01:23,610 --> 00:01:28,979
<font color="#E5E5E5">mistakes people have made but they</font>

25
00:01:25,979 --> 00:01:29,970
instruct you know how how one would sort

26
00:01:28,979 --> 00:01:33,030
of go about<font color="#E5E5E5"> looking for vulnerabilities</font>

27
00:01:29,970 --> 00:01:34,380
<font color="#CCCCCC">in these sorts of contracts these have</font>

28
00:01:33,030 --> 00:01:35,880
<font color="#E5E5E5">really been exploited in the wild and</font>

29
00:01:34,380 --> 00:01:38,310
we'll be looking<font color="#E5E5E5"> through how exactly</font>

30
00:01:35,880 --> 00:01:40,679
some of<font color="#CCCCCC"> those exploits</font><font color="#E5E5E5"> worked in general</font>

31
00:01:38,310 --> 00:01:43,500
they're pretty<font color="#E5E5E5"> simple conceptually but</font>

32
00:01:40,680 --> 00:01:45,600
the one of<font color="#CCCCCC"> the issues with smart</font>

33
00:01:43,500 --> 00:01:46,920
contracts is they're<font color="#E5E5E5"> kind of deceptively</font>

34
00:01:45,600 --> 00:01:48,600
simple at times you think<font color="#E5E5E5"> you're doing</font>

35
00:01:46,920 --> 00:01:51,479
one<font color="#CCCCCC"> thing and you're actually</font><font color="#E5E5E5"> doing</font>

36
00:01:48,600 --> 00:01:52,919
something<font color="#CCCCCC"> completely different</font><font color="#E5E5E5"> so what</font>

37
00:01:51,479 --> 00:01:55,229
we're not<font color="#E5E5E5"> covering today are</font>

38
00:01:52,920 --> 00:01:59,219
vulnerabilities in contracts written<font color="#E5E5E5"> in</font>

39
00:01:55,229 --> 00:02:02,450
other languages so<font color="#E5E5E5"> serpent is an older</font>

40
00:01:59,219 --> 00:02:05,100
<font color="#E5E5E5">language that's sort of</font><font color="#CCCCCC"> Python ish and</font>

41
00:02:02,450 --> 00:02:06,420
is no longer<font color="#CCCCCC"> really used there have been</font>

42
00:02:05,100 --> 00:02:07,589
some interesting vulnerabilities<font color="#E5E5E5"> in that</font>

43
00:02:06,420 --> 00:02:10,199
but we're not<font color="#CCCCCC"> really</font><font color="#E5E5E5"> going to talk</font><font color="#CCCCCC"> about</font>

44
00:02:07,590 --> 00:02:13,140
<font color="#E5E5E5">those today</font><font color="#CCCCCC"> viper is a new language that</font>

45
00:02:10,199 --> 00:02:14,260
<font color="#CCCCCC">is</font><font color="#E5E5E5"> being developed</font><font color="#CCCCCC"> right now</font><font color="#E5E5E5"> that is</font>

46
00:02:13,140 --> 00:02:15,970
<font color="#E5E5E5">going to allow</font>

47
00:02:14,260 --> 00:02:19,179
for the<font color="#E5E5E5"> application of formal methods</font><font color="#CCCCCC"> to</font>

48
00:02:15,970 --> 00:02:21,099
<font color="#CCCCCC">aetherium</font><font color="#E5E5E5"> smart contracts those are</font>

49
00:02:19,180 --> 00:02:22,959
still that<font color="#E5E5E5"> that</font><font color="#CCCCCC"> language is</font><font color="#E5E5E5"> still kind</font>

50
00:02:21,099 --> 00:02:25,149
of<font color="#E5E5E5"> in development and there's not</font><font color="#CCCCCC"> really</font>

51
00:02:22,959 --> 00:02:26,709
anything that's<font color="#E5E5E5"> deployed that uses it</font>

52
00:02:25,150 --> 00:02:29,290
<font color="#E5E5E5">we're also not going to be covering</font>

53
00:02:26,709 --> 00:02:32,349
compiler bugs there have been a<font color="#E5E5E5"> few in</font>

54
00:02:29,290 --> 00:02:36,929
<font color="#E5E5E5">Seoul see the main compiler used to</font>

55
00:02:32,349 --> 00:02:40,599
generate EVM code from these contracts

56
00:02:36,930 --> 00:02:42,599
<font color="#CCCCCC">so those are interesting too</font><font color="#E5E5E5"> but we</font>

57
00:02:40,599 --> 00:02:44,560
<font color="#E5E5E5">don't really have time to</font><font color="#CCCCCC"> cover them</font><font color="#E5E5E5"> and</font>

58
00:02:42,599 --> 00:02:46,268
we're definitely<font color="#E5E5E5"> not gonna</font><font color="#CCCCCC"> be covering</font>

59
00:02:44,560 --> 00:02:48,909
<font color="#E5E5E5">vulnerabilities and exploits in</font>

60
00:02:46,269 --> 00:02:51,609
exchanges<font color="#E5E5E5"> that somehow allowed for</font>

61
00:02:48,909 --> 00:02:53,138
people<font color="#CCCCCC"> to steal</font><font color="#E5E5E5"> them</font><font color="#CCCCCC"> steal funds</font><font color="#E5E5E5"> just</font>

62
00:02:51,609 --> 00:02:54,549
because they're not<font color="#CCCCCC"> really</font><font color="#E5E5E5"> related to</font>

63
00:02:53,139 --> 00:02:59,409
<font color="#E5E5E5">smart contracts and just more</font>

64
00:02:54,549 --> 00:03:01,209
traditional security issues so the first

65
00:02:59,409 --> 00:03:03,190
one we're going to<font color="#E5E5E5"> talk</font><font color="#CCCCCC"> about is in</font>

66
00:03:01,209 --> 00:03:06,879
early November

67
00:03:03,190 --> 00:03:09,519
<font color="#E5E5E5">DevOps 199 commented on parodies github</font>

68
00:03:06,879 --> 00:03:10,899
<font color="#E5E5E5">that he accidentally killed it people</font>

69
00:03:09,519 --> 00:03:13,840
weren't<font color="#E5E5E5"> really sure what he meant by</font>

70
00:03:10,900 --> 00:03:16,840
that<font color="#E5E5E5"> until he pulled up the</font><font color="#CCCCCC"> ether scan</font>

71
00:03:13,840 --> 00:03:19,000
address and apparently he had<font color="#E5E5E5"> managed to</font>

72
00:03:16,840 --> 00:03:22,090
<font color="#E5E5E5">lock up three</font><font color="#CCCCCC"> hundred million dollars in</font>

73
00:03:19,000 --> 00:03:24,579
<font color="#CCCCCC">etherium just by sending random kill</font>

74
00:03:22,090 --> 00:03:27,730
instructions to contracts on<font color="#E5E5E5"> the chain</font>

75
00:03:24,579 --> 00:03:29,949
<font color="#E5E5E5">and it's kind of hard to</font><font color="#CCCCCC"> believe unless</font>

76
00:03:27,730 --> 00:03:32,198
<font color="#E5E5E5">you actually go</font><font color="#CCCCCC"> through the conversation</font>

77
00:03:29,949 --> 00:03:34,030
<font color="#E5E5E5">but he was</font><font color="#CCCCCC"> just going around on the</font>

78
00:03:32,199 --> 00:03:37,590
<font color="#E5E5E5">networks</font><font color="#CCCCCC"> trying to kill and destroy</font>

79
00:03:34,030 --> 00:03:40,780
every contract he came into contact<font color="#CCCCCC"> with</font>

80
00:03:37,590 --> 00:03:43,449
<font color="#E5E5E5">for some reason this was</font><font color="#CCCCCC"> able to take</font>

81
00:03:40,780 --> 00:03:46,090
out a bunch<font color="#E5E5E5"> of people's multi signature</font>

82
00:03:43,449 --> 00:03:47,709
wallets<font color="#E5E5E5"> and lock up a bunch of funds in</font>

83
00:03:46,090 --> 00:03:52,629
a way<font color="#E5E5E5"> that is essentially unrecoverable</font>

84
00:03:47,709 --> 00:03:56,620
<font color="#E5E5E5">even today so the core of the</font><font color="#CCCCCC"> problem is</font>

85
00:03:52,629 --> 00:04:02,138
and<font color="#CCCCCC"> how many</font><font color="#E5E5E5"> people in here</font><font color="#CCCCCC"> have looked</font>

86
00:03:56,620 --> 00:04:05,349
at solidity code<font color="#CCCCCC"> before anyone</font><font color="#E5E5E5"> so if you</font>

87
00:04:02,139 --> 00:04:08,799
don't know solidity it's kind of weird

88
00:04:05,349 --> 00:04:12,280
<font color="#E5E5E5">mixture of like</font><font color="#CCCCCC"> JavaScript e</font><font color="#E5E5E5"> syntax plus</font>

89
00:04:08,799 --> 00:04:14,709
some C underpinnings<font color="#E5E5E5"> that is somehow</font>

90
00:04:12,280 --> 00:04:17,889
<font color="#E5E5E5">used to manage all of these funds all</font>

91
00:04:14,709 --> 00:04:19,599
over the world and<font color="#E5E5E5"> the read</font><font color="#CCCCCC"> and what a</font>

92
00:04:17,889 --> 00:04:23,700
smart contract<font color="#E5E5E5"> is essentially doing is</font>

93
00:04:19,599 --> 00:04:27,080
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> defining state changes so</font><font color="#CCCCCC"> you know</font>

94
00:04:23,700 --> 00:04:29,840
everyone is executing this code

95
00:04:27,080 --> 00:04:32,560
and agreeing that given these inputs the

96
00:04:29,840 --> 00:04:36,289
<font color="#E5E5E5">change should change in this certain</font><font color="#CCCCCC"> way</font>

97
00:04:32,560 --> 00:04:38,960
<font color="#CCCCCC">so everyone</font><font color="#E5E5E5"> goes through very</font>

98
00:04:36,289 --> 00:04:40,909
<font color="#E5E5E5">systematically and execute some bytecode</font>

99
00:04:38,960 --> 00:04:46,008
<font color="#CCCCCC">and everyone agrees on what the outputs</font>

100
00:04:40,909 --> 00:04:48,289
<font color="#E5E5E5">of that of that contract are so in this</font>

101
00:04:46,009 --> 00:04:51,219
case solidity is<font color="#E5E5E5"> what what they were</font>

102
00:04:48,289 --> 00:04:53,960
using to describe that<font color="#E5E5E5"> state change and</font>

103
00:04:51,219 --> 00:04:55,310
what you<font color="#CCCCCC"> basically what you're</font><font color="#E5E5E5"> basically</font>

104
00:04:53,960 --> 00:04:58,340
looking<font color="#E5E5E5"> at here is one of the</font>

105
00:04:55,310 --> 00:05:02,530
initialization functions in the parity

106
00:04:58,340 --> 00:05:05,929
<font color="#CCCCCC">multi-sig wallet</font><font color="#E5E5E5"> the problem is is that</font>

107
00:05:02,530 --> 00:05:11,210
the parity<font color="#CCCCCC"> multi-sig wallet</font><font color="#E5E5E5"> was a bit</font>

108
00:05:05,930 --> 00:05:13,729
over engineered and<font color="#E5E5E5"> separated</font><font color="#CCCCCC"> there</font><font color="#E5E5E5"> a</font>

109
00:05:11,210 --> 00:05:16,310
lot of<font color="#CCCCCC"> there initially</font><font color="#E5E5E5"> initialization</font>

110
00:05:13,729 --> 00:05:18,110
code and shared code out into a library

111
00:05:16,310 --> 00:05:21,080
<font color="#E5E5E5">and it's actually possible</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> have</font>

112
00:05:18,110 --> 00:05:24,650
library contracts on<font color="#E5E5E5"> the etherium</font>

113
00:05:21,080 --> 00:05:26,539
blockchain so all these<font color="#CCCCCC"> different</font>

114
00:05:24,650 --> 00:05:29,560
<font color="#CCCCCC">multi-sig wallets were actually</font><font color="#E5E5E5"> calling</font>

115
00:05:26,539 --> 00:05:31,818
in to this one centralized<font color="#E5E5E5"> library and</font>

116
00:05:29,560 --> 00:05:37,009
this function<font color="#E5E5E5"> was one of the functions</font>

117
00:05:31,819 --> 00:05:42,349
that was exposed so basically you can

118
00:05:37,009 --> 00:05:43,789
add various modifiers<font color="#E5E5E5"> to two functions</font>

119
00:05:42,349 --> 00:05:45,979
<font color="#E5E5E5">that sort of describe when you can call</font>

120
00:05:43,789 --> 00:05:48,259
it<font color="#CCCCCC"> describe constraints on whether or</font>

121
00:05:45,979 --> 00:05:50,419
not<font color="#E5E5E5"> certain people can call it and</font>

122
00:05:48,259 --> 00:05:53,629
certain times when it can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> called</font>

123
00:05:50,419 --> 00:05:54,889
things like<font color="#E5E5E5"> that so in this case this</font>

124
00:05:53,629 --> 00:05:58,159
function<font color="#E5E5E5"> was not supposed</font><font color="#CCCCCC"> to be called</font>

125
00:05:54,889 --> 00:06:01,279
<font color="#E5E5E5">if the contract had not been initialized</font>

126
00:05:58,159 --> 00:06:03,319
yet<font color="#E5E5E5"> in this case because it was a</font>

127
00:06:01,279 --> 00:06:06,020
library<font color="#CCCCCC"> no one had actually</font><font color="#E5E5E5"> initialized</font>

128
00:06:03,319 --> 00:06:08,719
the library contract so<font color="#CCCCCC"> whenever you</font>

129
00:06:06,020 --> 00:06:12,020
went<font color="#E5E5E5"> to go call this only uninitialized</font>

130
00:06:08,719 --> 00:06:14,419
<font color="#E5E5E5">only uninitialized was actually true and</font>

131
00:06:12,020 --> 00:06:16,818
allowed you to<font color="#E5E5E5"> set yourself as an owner</font>

132
00:06:14,419 --> 00:06:21,698
and then immediately<font color="#E5E5E5"> kill the contract</font>

133
00:06:16,819 --> 00:06:21,699
which is<font color="#CCCCCC"> what devops 199 ended up doing</font>

134
00:06:22,810 --> 00:06:30,710
so the actual<font color="#E5E5E5"> how that works and why</font>

135
00:06:27,500 --> 00:06:34,159
they had separated<font color="#E5E5E5"> it out was that in</font>

136
00:06:30,710 --> 00:06:36,380
their default function<font color="#E5E5E5"> parity devs</font>

137
00:06:34,159 --> 00:06:39,550
basically said okay<font color="#CCCCCC"> we</font><font color="#E5E5E5"> want to separate</font>

138
00:06:36,380 --> 00:06:41,590
<font color="#CCCCCC">out this library</font><font color="#E5E5E5"> code from this from</font>

139
00:06:39,550 --> 00:06:42,670
wallet code that's specific<font color="#CCCCCC"> to whatever</font>

140
00:06:41,590 --> 00:06:45,219
thing you're<font color="#E5E5E5"> deploying</font>

141
00:06:42,670 --> 00:06:47,740
<font color="#E5E5E5">and they wanted to do that basically to</font>

142
00:06:45,220 --> 00:06:52,630
save money<font color="#E5E5E5"> because it costs money to put</font>

143
00:06:47,740 --> 00:06:55,180
code<font color="#CCCCCC"> onto</font><font color="#E5E5E5"> the ethereum blockchain the so</font>

144
00:06:52,630 --> 00:06:58,409
what they have to allow you to<font color="#E5E5E5"> call into</font>

145
00:06:55,180 --> 00:07:01,450
some of those library functions is<font color="#CCCCCC"> to</font>

146
00:06:58,410 --> 00:07:04,630
<font color="#E5E5E5">they implemented a default function here</font>

147
00:07:01,450 --> 00:07:06,400
<font color="#E5E5E5">so anytime you send either to an</font><font color="#CCCCCC"> address</font>

148
00:07:04,630 --> 00:07:08,950
if you're not explicitly<font color="#E5E5E5"> calling a</font>

149
00:07:06,400 --> 00:07:11,409
<font color="#E5E5E5">function in that contract</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> actually</font>

150
00:07:08,950 --> 00:07:14,349
executes<font color="#E5E5E5"> this function here and this is</font>

151
00:07:11,410 --> 00:07:17,200
known as the fallback function so this

152
00:07:14,350 --> 00:07:20,380
function<font color="#E5E5E5"> basically handles</font><font color="#CCCCCC"> any time</font>

153
00:07:17,200 --> 00:07:23,590
someone<font color="#CCCCCC"> sends money to to this contract</font>

154
00:07:20,380 --> 00:07:25,900
<font color="#E5E5E5">or call something that isn't</font><font color="#CCCCCC"> actually</font>

155
00:07:23,590 --> 00:07:31,090
defined in<font color="#E5E5E5"> that contract so what they're</font>

156
00:07:25,900 --> 00:07:33,729
doing<font color="#CCCCCC"> here</font><font color="#E5E5E5"> in this code is passing in so</font>

157
00:07:31,090 --> 00:07:35,560
they<font color="#CCCCCC"> were unable to</font><font color="#E5E5E5"> find this</font><font color="#CCCCCC"> function</font>

158
00:07:33,730 --> 00:07:37,750
but they can see that a contract

159
00:07:35,560 --> 00:07:40,810
function is attempting<font color="#CCCCCC"> to be called</font><font color="#E5E5E5"> and</font>

160
00:07:37,750 --> 00:07:43,120
passed that on into<font color="#E5E5E5"> this library through</font>

161
00:07:40,810 --> 00:07:47,770
what's known as delegate call which is

162
00:07:43,120 --> 00:07:50,080
different from a<font color="#CCCCCC"> normal call so delegate</font>

163
00:07:47,770 --> 00:07:54,370
call is defined in the etherium yellow

164
00:07:50,080 --> 00:07:57,400
paper<font color="#E5E5E5"> as almost essentially the same as</font>

165
00:07:54,370 --> 00:08:02,230
a call function<font color="#E5E5E5"> however it actually</font>

166
00:07:57,400 --> 00:08:04,210
<font color="#CCCCCC">maintains the same local state</font><font color="#E5E5E5"> of a of</font>

167
00:08:02,230 --> 00:08:07,780
<font color="#E5E5E5">the contract</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is currently being</font>

168
00:08:04,210 --> 00:08:10,109
<font color="#CCCCCC">executed</font><font color="#E5E5E5"> so rather than calling into</font>

169
00:08:07,780 --> 00:08:13,150
another contract and replacing the

170
00:08:10,110 --> 00:08:16,960
message sender variables and like so

171
00:08:13,150 --> 00:08:19,080
where the call came<font color="#CCCCCC"> from</font><font color="#E5E5E5"> it actually</font>

172
00:08:16,960 --> 00:08:22,330
maintains<font color="#E5E5E5"> all the current state of the</font>

173
00:08:19,080 --> 00:08:24,609
executing function and only replaces

174
00:08:22,330 --> 00:08:26,169
what code is<font color="#CCCCCC"> currently</font><font color="#E5E5E5"> executing what</font>

175
00:08:24,610 --> 00:08:28,960
that means is<font color="#E5E5E5"> you</font><font color="#CCCCCC"> can create these</font>

176
00:08:26,170 --> 00:08:31,960
library functions<font color="#E5E5E5"> that you</font><font color="#CCCCCC"> can call into</font>

177
00:08:28,960 --> 00:08:34,090
and have them do something<font color="#CCCCCC"> on behalf</font><font color="#E5E5E5"> of</font>

178
00:08:31,960 --> 00:08:36,189
your current contract<font color="#E5E5E5"> without changing</font>

179
00:08:34,090 --> 00:08:42,060
any of<font color="#E5E5E5"> the state that would normally</font>

180
00:08:36,190 --> 00:08:45,970
mess up<font color="#E5E5E5"> your inter contract call and</font>

181
00:08:42,059 --> 00:08:48,010
just sort of a comparison<font color="#E5E5E5"> it's sort of</font>

182
00:08:45,970 --> 00:08:50,710
like swapping<font color="#E5E5E5"> out the the text section</font>

183
00:08:48,010 --> 00:08:52,880
<font color="#E5E5E5">and the</font><font color="#CCCCCC"> binary</font><font color="#E5E5E5"> so you know if you</font>

184
00:08:50,710 --> 00:08:54,560
dynamically swapped out what code<font color="#E5E5E5"> is</font>

185
00:08:52,880 --> 00:08:58,130
actually<font color="#CCCCCC"> running but you maintained</font><font color="#E5E5E5"> the</font>

186
00:08:54,560 --> 00:09:05,619
the actual<font color="#E5E5E5"> data and</font><font color="#CCCCCC"> the stack</font><font color="#E5E5E5"> stuff that</font>

187
00:08:58,130 --> 00:09:07,960
of the currently<font color="#CCCCCC"> executing process so</font>

188
00:09:05,620 --> 00:09:10,970
basically<font color="#CCCCCC"> that allowed someone to</font><font color="#E5E5E5"> freeze</font>

189
00:09:07,960 --> 00:09:13,190
<font color="#E5E5E5">160 to 300 million dollars depending on</font>

190
00:09:10,970 --> 00:09:14,540
<font color="#E5E5E5">when you valued that there was no fork</font>

191
00:09:13,190 --> 00:09:17,480
to save those funds<font color="#CCCCCC"> so those funds are</font>

192
00:09:14,540 --> 00:09:19,969
<font color="#CCCCCC">still locked up indefinitely</font><font color="#E5E5E5"> the</font>

193
00:09:17,480 --> 00:09:22,070
vulnerability was obviously that<font color="#E5E5E5"> the</font>

194
00:09:19,970 --> 00:09:23,930
library itself<font color="#E5E5E5"> wasn't initialized and</font>

195
00:09:22,070 --> 00:09:26,090
someone came<font color="#E5E5E5"> in</font><font color="#CCCCCC"> and initialized it</font>

196
00:09:23,930 --> 00:09:31,069
became owner<font color="#E5E5E5"> and used that ownership to</font>

197
00:09:26,090 --> 00:09:33,340
suicide it<font color="#E5E5E5"> that's kind of crazy but</font>

198
00:09:31,070 --> 00:09:37,220
because<font color="#CCCCCC"> of some of the complexities of</font>

199
00:09:33,340 --> 00:09:39,620
<font color="#E5E5E5">the inter contract operations it's not</font>

200
00:09:37,220 --> 00:09:42,140
necessarily obvious that this sort<font color="#CCCCCC"> of</font>

201
00:09:39,620 --> 00:09:44,600
<font color="#E5E5E5">thing would be a</font><font color="#CCCCCC"> vulnerability</font><font color="#E5E5E5"> now this</font>

202
00:09:42,140 --> 00:09:46,430
<font color="#E5E5E5">vulnerability was actually sort of</font>

203
00:09:44,600 --> 00:09:50,710
vulnerable<font color="#E5E5E5"> code was actually introduced</font>

204
00:09:46,430 --> 00:10:01,099
in response<font color="#CCCCCC"> to the</font><font color="#E5E5E5"> first parity</font><font color="#CCCCCC"> act</font>

205
00:09:50,710 --> 00:10:04,400
which we will maybe talk about<font color="#E5E5E5"> later</font><font color="#CCCCCC"> so</font>

206
00:10:01,100 --> 00:10:07,120
the next bug type that we're going<font color="#E5E5E5"> to go</font>

207
00:10:04,400 --> 00:10:13,220
into<font color="#E5E5E5"> is unhandled reentrant control flow</font>

208
00:10:07,120 --> 00:10:15,860
now re-entrance<font color="#CCCCCC"> II is a problem that is</font>

209
00:10:13,220 --> 00:10:19,100
entirely dependent<font color="#CCCCCC"> on</font><font color="#E5E5E5"> inter contract</font>

210
00:10:15,860 --> 00:10:21,260
calls so you have one<font color="#E5E5E5"> contract and it</font>

211
00:10:19,100 --> 00:10:23,630
calls out<font color="#E5E5E5"> to some other contract and</font>

212
00:10:21,260 --> 00:10:27,290
that<font color="#E5E5E5"> contract calls back into yours</font><font color="#CCCCCC"> and</font>

213
00:10:23,630 --> 00:10:31,520
modifies<font color="#CCCCCC"> state internally that</font><font color="#E5E5E5"> you</font>

214
00:10:27,290 --> 00:10:33,230
weren't expecting<font color="#CCCCCC"> it to modify</font><font color="#E5E5E5"> now what</font>

215
00:10:31,520 --> 00:10:35,900
complicates this<font color="#E5E5E5"> is in a lot of cases</font>

216
00:10:33,230 --> 00:10:38,600
<font color="#CCCCCC">just sending money to a given address</font>

217
00:10:35,900 --> 00:10:41,150
<font color="#E5E5E5">could be equivalent to calling in to</font>

218
00:10:38,600 --> 00:10:42,950
that contract<font color="#E5E5E5"> so if you remember</font><font color="#CCCCCC"> earlier</font>

219
00:10:41,150 --> 00:10:44,720
there's fallback functions that<font color="#E5E5E5"> you can</font>

220
00:10:42,950 --> 00:10:47,570
<font color="#E5E5E5">implement that actually do things</font>

221
00:10:44,720 --> 00:10:50,810
whenever<font color="#CCCCCC"> you're sent funds</font><font color="#E5E5E5"> even if</font>

222
00:10:47,570 --> 00:10:55,130
there's no function being called even

223
00:10:50,810 --> 00:10:57,410
regardless<font color="#E5E5E5"> of what's happening so if you</font>

224
00:10:55,130 --> 00:10:59,750
call something<font color="#E5E5E5"> with</font><font color="#CCCCCC"> code value</font><font color="#E5E5E5"> it</font>

225
00:10:57,410 --> 00:11:02,990
<font color="#E5E5E5">actually affords the remaining gas that</font>

226
00:10:59,750 --> 00:11:06,970
you're using<font color="#E5E5E5"> to execute this</font><font color="#CCCCCC"> contract</font>

227
00:11:02,990 --> 00:11:09,240
<font color="#E5E5E5">and it allows that fold</font>

228
00:11:06,970 --> 00:11:13,240
function to execute arbitrary code<font color="#E5E5E5"> that</font>

229
00:11:09,240 --> 00:11:15,399
<font color="#CCCCCC">an attacker might</font><font color="#E5E5E5"> specify so the</font>

230
00:11:13,240 --> 00:11:16,990
attackers contract can then go back<font color="#CCCCCC"> into</font>

231
00:11:15,399 --> 00:11:19,149
<font color="#E5E5E5">the vulnerable code as many times as it</font>

232
00:11:16,990 --> 00:11:22,149
wants<font color="#E5E5E5"> to and change various things about</font>

233
00:11:19,149 --> 00:11:25,060
the state which could<font color="#E5E5E5"> potentially</font>

234
00:11:22,149 --> 00:11:26,379
violate developer expectations<font color="#E5E5E5"> the</font>

235
00:11:25,060 --> 00:11:29,819
correct way to do this is actually to

236
00:11:26,379 --> 00:11:31,899
<font color="#CCCCCC">use the function send or transfer which</font>

237
00:11:29,819 --> 00:11:34,029
<font color="#E5E5E5">basically prevent you from doing this</font>

238
00:11:31,899 --> 00:11:37,540
because they limit the<font color="#E5E5E5"> amount of gas to</font>

239
00:11:34,029 --> 00:11:39,970
execute the transaction<font color="#CCCCCC"> suppose I should</font>

240
00:11:37,540 --> 00:11:41,860
<font color="#CCCCCC">explain a little bit</font><font color="#E5E5E5"> about what the</font>

241
00:11:39,970 --> 00:11:46,990
<font color="#CCCCCC">function of gas</font><font color="#E5E5E5"> internally in solidity</font>

242
00:11:41,860 --> 00:11:49,110
contracts but the the difference between

243
00:11:46,990 --> 00:11:56,110
<font color="#E5E5E5">the etherium virtual machine and</font>

244
00:11:49,110 --> 00:11:58,240
bitcoins<font color="#CCCCCC"> script language</font><font color="#E5E5E5"> is that the EVM</font>

245
00:11:56,110 --> 00:12:00,850
is actually<font color="#E5E5E5"> turned complete and the way</font>

246
00:11:58,240 --> 00:12:02,350
that they<font color="#CCCCCC"> actually solve the the turing</font>

247
00:12:00,850 --> 00:12:06,459
completeness problem to<font color="#E5E5E5"> make sure you</font>

248
00:12:02,350 --> 00:12:09,569
know that<font color="#CCCCCC"> you can't you know just</font>

249
00:12:06,459 --> 00:12:14,040
arbitrarily execute code<font color="#E5E5E5"> indefinitely</font>

250
00:12:09,569 --> 00:12:16,209
the contract will actually that

251
00:12:14,040 --> 00:12:18,189
terminate executing if you run out<font color="#CCCCCC"> of</font>

252
00:12:16,209 --> 00:12:20,229
funds<font color="#E5E5E5"> to execute that particular</font>

253
00:12:18,189 --> 00:12:22,209
contract<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> keeps track of every</font>

254
00:12:20,230 --> 00:12:24,939
single execution<font color="#E5E5E5"> that you do and every</font>

255
00:12:22,209 --> 00:12:28,508
<font color="#E5E5E5">single value that you store to the chain</font>

256
00:12:24,939 --> 00:12:30,819
<font color="#E5E5E5">and charges you essentially for that so</font>

257
00:12:28,509 --> 00:12:33,250
if you run out<font color="#E5E5E5"> of funds midway through</font>

258
00:12:30,819 --> 00:12:36,579
your execution as your<font color="#E5E5E5"> transaction is</font>

259
00:12:33,250 --> 00:12:38,769
reverted and nothing actually happens<font color="#E5E5E5"> so</font>

260
00:12:36,579 --> 00:12:42,430
in this case if you do<font color="#CCCCCC"> dot send or</font>

261
00:12:38,769 --> 00:12:45,309
transfer it only<font color="#CCCCCC"> fours 2300 gasps which</font>

262
00:12:42,430 --> 00:12:47,469
<font color="#CCCCCC">mean which is</font><font color="#E5E5E5"> just enough to record the</font>

263
00:12:45,309 --> 00:12:49,000
transfer of<font color="#E5E5E5"> funds and not enough to</font>

264
00:12:47,470 --> 00:12:52,389
actually<font color="#E5E5E5"> call back</font><font color="#CCCCCC"> into these</font><font color="#E5E5E5"> vulnerable</font>

265
00:12:49,000 --> 00:12:54,550
contracts so to exploit it you<font color="#CCCCCC"> author</font><font color="#E5E5E5"> a</font>

266
00:12:52,389 --> 00:12:59,079
contract<font color="#E5E5E5"> whose fallback function calls</font>

267
00:12:54,550 --> 00:13:01,120
back into it and goes goes after so in

268
00:12:59,079 --> 00:13:05,949
the case<font color="#E5E5E5"> of the Dow has anyone heard of</font>

269
00:13:01,120 --> 00:13:10,329
the Dow before so this was<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the</font>

270
00:13:05,949 --> 00:13:15,040
<font color="#E5E5E5">first big hacks on the on the network</font>

271
00:13:10,329 --> 00:13:16,239
<font color="#CCCCCC">and it was a result of smart</font><font color="#E5E5E5"> contract in</font>

272
00:13:15,040 --> 00:13:18,279
this<font color="#E5E5E5"> thing called a distributed</font>

273
00:13:16,240 --> 00:13:20,019
autonomous organization<font color="#E5E5E5"> so what they</font>

274
00:13:18,279 --> 00:13:20,649
were<font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to do was create this thing</font>

275
00:13:20,019 --> 00:13:25,920
where<font color="#E5E5E5"> people</font>

276
00:13:20,649 --> 00:13:25,920
<font color="#E5E5E5">propose ideas</font><font color="#CCCCCC"> and you know</font><font color="#E5E5E5"> they could</font>

277
00:13:26,100 --> 00:13:30,339
basically create they create<font color="#E5E5E5"> new tokens</font>

278
00:13:29,050 --> 00:13:32,559
and<font color="#E5E5E5"> then people would eventually get</font>

279
00:13:30,339 --> 00:13:36,059
paid back if that particular<font color="#E5E5E5"> project</font>

280
00:13:32,559 --> 00:13:39,160
made money<font color="#CCCCCC"> in</font><font color="#E5E5E5"> this case though</font>

281
00:13:36,059 --> 00:13:42,790
<font color="#E5E5E5">unfortunately they used that same call</font>

282
00:13:39,160 --> 00:13:44,740
<font color="#E5E5E5">value idiom to</font><font color="#CCCCCC"> send funds to people</font>

283
00:13:42,790 --> 00:13:49,509
which allowed the attacker to<font color="#E5E5E5"> actually</font>

284
00:13:44,740 --> 00:13:52,329
call back in to get his rewards<font color="#E5E5E5"> and</font><font color="#CCCCCC"> the</font>

285
00:13:49,509 --> 00:13:54,249
problem was is that<font color="#E5E5E5"> the rewards being</font>

286
00:13:52,329 --> 00:13:57,099
logged so the amount that<font color="#E5E5E5"> was withdrawn</font>

287
00:13:54,249 --> 00:13:59,679
from<font color="#CCCCCC"> the contract</font><font color="#E5E5E5"> was updated</font><font color="#CCCCCC"> after the</font>

288
00:13:57,100 --> 00:14:02,199
actual call into the attackers contract

289
00:13:59,679 --> 00:14:05,019
which allowed them to<font color="#E5E5E5"> basically</font>

290
00:14:02,199 --> 00:14:07,929
recursively<font color="#E5E5E5"> dump funds from this from</font>

291
00:14:05,019 --> 00:14:10,269
this<font color="#E5E5E5"> contract so it was a sort of</font>

292
00:14:07,929 --> 00:14:11,259
simpler example than that<font color="#E5E5E5"> and this is</font>

293
00:14:10,269 --> 00:14:14,319
taken from<font color="#CCCCCC"> trailer</font><font color="#E5E5E5"> pits</font>

294
00:14:11,259 --> 00:14:15,939
not so smart<font color="#E5E5E5"> contracts repository which</font>

295
00:14:14,319 --> 00:14:17,589
is really neat if you guys are

296
00:14:15,939 --> 00:14:21,550
interested in some<font color="#E5E5E5"> simple examples of</font>

297
00:14:17,589 --> 00:14:25,290
how these<font color="#E5E5E5"> things work but as you can</font><font color="#CCCCCC"> see</font>

298
00:14:21,550 --> 00:14:27,699
there's a reinsurance contract<font color="#E5E5E5"> that</font>

299
00:14:25,290 --> 00:14:30,879
basically allows you to<font color="#E5E5E5"> withdraw funds</font>

300
00:14:27,699 --> 00:14:35,139
from<font color="#CCCCCC"> some balance that's recorded</font><font color="#E5E5E5"> on the</font>

301
00:14:30,879 --> 00:14:37,540
chain<font color="#E5E5E5"> and unfortunately it doesn't</font>

302
00:14:35,139 --> 00:14:41,370
actually update the<font color="#E5E5E5"> balance until after</font>

303
00:14:37,540 --> 00:14:44,649
it transfers<font color="#CCCCCC"> the funds to those</font><font color="#E5E5E5"> users so</font>

304
00:14:41,370 --> 00:14:47,559
because<font color="#E5E5E5"> of that in this exploit you can</font>

305
00:14:44,649 --> 00:14:50,170
actually call that<font color="#E5E5E5"> and then set your</font>

306
00:14:47,559 --> 00:14:52,120
<font color="#CCCCCC">fallback</font><font color="#E5E5E5"> function to continuously start</font>

307
00:14:50,170 --> 00:14:54,509
dumping<font color="#E5E5E5"> so in this case it only does it</font>

308
00:14:52,120 --> 00:14:56,800
only jumps back into the contract once

309
00:14:54,509 --> 00:14:58,569
<font color="#E5E5E5">but you can potentially do that as many</font>

310
00:14:56,800 --> 00:15:05,008
<font color="#CCCCCC">times</font><font color="#E5E5E5"> as long as you have enough gas</font><font color="#CCCCCC"> to</font>

311
00:14:58,569 --> 00:15:08,740
continue making<font color="#CCCCCC"> that</font><font color="#E5E5E5"> call so there's</font>

312
00:15:05,009 --> 00:15:12,209
another<font color="#E5E5E5"> bug and now coming back to</font><font color="#CCCCCC"> that</font>

313
00:15:08,740 --> 00:15:15,069
that same<font color="#E5E5E5"> parity hack with the library</font>

314
00:15:12,209 --> 00:15:17,199
<font color="#CCCCCC">they so the first</font><font color="#E5E5E5"> parity hack they</font>

315
00:15:15,069 --> 00:15:18,549
actually managed<font color="#E5E5E5"> to steal only about 30</font>

316
00:15:17,199 --> 00:15:23,229
million although<font color="#E5E5E5"> they could have stolen</font>

317
00:15:18,549 --> 00:15:25,209
up to 200 million thankfully some some

318
00:15:23,230 --> 00:15:28,029
white hats came in and stole a<font color="#E5E5E5"> bunch of</font>

319
00:15:25,209 --> 00:15:32,229
funds<font color="#CCCCCC"> and gave them</font><font color="#E5E5E5"> back to</font><font color="#CCCCCC"> the</font>

320
00:15:28,029 --> 00:15:35,170
community<font color="#CCCCCC"> about a couple weeks after</font>

321
00:15:32,230 --> 00:15:37,180
<font color="#E5E5E5">that someone came out and posed</font>

322
00:15:35,170 --> 00:15:38,649
that he was responsible<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this and he</font>

323
00:15:37,180 --> 00:15:40,630
did it because<font color="#E5E5E5"> he had a bad tender</font><font color="#CCCCCC"> date</font>

324
00:15:38,649 --> 00:15:42,279
I'm not<font color="#E5E5E5"> sure that that's actually what</font>

325
00:15:40,630 --> 00:15:47,399
<font color="#CCCCCC">happened but it's a pretty entertaining</font>

326
00:15:42,279 --> 00:15:52,089
read if you haven't seen<font color="#E5E5E5"> it so the the</font>

327
00:15:47,399 --> 00:15:54,640
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> was that a in</font><font color="#CCCCCC"> addition to that</font>

328
00:15:52,089 --> 00:15:56,770
delegate call issue<font color="#E5E5E5"> into that allowed</font>

329
00:15:54,640 --> 00:15:59,020
you to call<font color="#E5E5E5"> anything in that</font><font color="#CCCCCC"> library</font>

330
00:15:56,770 --> 00:16:01,060
there was also an unprotected<font color="#E5E5E5"> function</font>

331
00:15:59,020 --> 00:16:02,980
called<font color="#E5E5E5"> an it wallet that initializes</font><font color="#CCCCCC"> the</font>

332
00:16:01,060 --> 00:16:07,439
wallet and sets all the<font color="#E5E5E5"> owners</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

333
00:16:02,980 --> 00:16:11,350
contract<font color="#E5E5E5"> so correctly it was supposed</font><font color="#CCCCCC"> to</font>

334
00:16:07,440 --> 00:16:14,410
limit the people who could it limit

335
00:16:11,350 --> 00:16:16,839
withdrawals<font color="#CCCCCC"> only if</font><font color="#E5E5E5"> people enough people</font>

336
00:16:14,410 --> 00:16:18,790
<font color="#E5E5E5">signed off on that given withdrawal the</font>

337
00:16:16,839 --> 00:16:19,500
way a correct<font color="#E5E5E5"> multi signature wallet</font>

338
00:16:18,790 --> 00:16:22,630
should

339
00:16:19,500 --> 00:16:25,450
unfortunately this an it wallet function

340
00:16:22,630 --> 00:16:29,290
had no visibility<font color="#CCCCCC"> doctor decorator</font><font color="#E5E5E5"> and</font>

341
00:16:25,450 --> 00:16:31,149
in solidity one of<font color="#E5E5E5"> its weird quirks that</font>

342
00:16:29,290 --> 00:16:33,370
programmers might not<font color="#E5E5E5"> expect is</font><font color="#CCCCCC"> that if</font>

343
00:16:31,149 --> 00:16:35,500
it's if a function<font color="#E5E5E5"> is not explicitly</font>

344
00:16:33,370 --> 00:16:37,540
<font color="#E5E5E5">stated to be</font><font color="#CCCCCC"> private</font><font color="#E5E5E5"> it's actually</font>

345
00:16:35,500 --> 00:16:39,010
public which means that anyone on the

346
00:16:37,540 --> 00:16:42,790
chain can actually<font color="#E5E5E5"> directly call that</font>

347
00:16:39,010 --> 00:16:47,740
<font color="#E5E5E5">function so combining that with the</font>

348
00:16:42,790 --> 00:16:49,959
delegate call function in the fallback

349
00:16:47,740 --> 00:16:52,120
function in the<font color="#E5E5E5"> original contract you're</font>

350
00:16:49,959 --> 00:16:55,479
<font color="#E5E5E5">actually you are actually able to call</font>

351
00:16:52,120 --> 00:16:58,300
<font color="#E5E5E5">an it wallet on any any of these</font>

352
00:16:55,480 --> 00:16:59,800
contracts which allowed you to set

353
00:16:58,300 --> 00:17:03,569
yourself<font color="#E5E5E5"> as the only owner of the</font>

354
00:16:59,800 --> 00:17:08,889
contract<font color="#E5E5E5"> and then withdraw all the funds</font>

355
00:17:03,569 --> 00:17:11,199
so because it's<font color="#E5E5E5"> not public and it does</font>

356
00:17:08,890 --> 00:17:13,870
<font color="#E5E5E5">this delegate call you can</font><font color="#CCCCCC"> say that you</font>

357
00:17:11,199 --> 00:17:16,540
should be able to set yourself<font color="#E5E5E5"> as an</font>

358
00:17:13,869 --> 00:17:18,339
owner there's there's a few<font color="#E5E5E5"> extra steps</font>

359
00:17:16,540 --> 00:17:21,280
<font color="#E5E5E5">in here but I'm</font><font color="#CCCCCC"> running a little low on</font>

360
00:17:18,339 --> 00:17:23,829
time<font color="#CCCCCC"> so I'll gloss over them</font><font color="#E5E5E5"> but</font>

361
00:17:21,280 --> 00:17:25,660
basically<font color="#CCCCCC"> the the idea is</font><font color="#E5E5E5"> that because</font>

362
00:17:23,829 --> 00:17:28,240
<font color="#E5E5E5">you can call in the context of this</font>

363
00:17:25,660 --> 00:17:31,210
contract<font color="#E5E5E5"> you can actually set yourself</font>

364
00:17:28,240 --> 00:17:33,040
as an owner and withdraw<font color="#E5E5E5"> everything so</font>

365
00:17:31,210 --> 00:17:35,350
here's an example<font color="#E5E5E5"> of the exploit</font>

366
00:17:33,040 --> 00:17:37,389
straight from the<font color="#E5E5E5"> blockchain and it's</font>

367
00:17:35,350 --> 00:17:38,980
very very<font color="#CCCCCC"> simple and you'd almost miss</font>

368
00:17:37,390 --> 00:17:43,870
it if you were watching<font color="#CCCCCC"> even if you were</font>

369
00:17:38,980 --> 00:17:46,179
<font color="#CCCCCC">watching for it but so this</font><font color="#E5E5E5"> sort of</font>

370
00:17:43,870 --> 00:17:47,669
problem actually<font color="#E5E5E5"> happens a lot where</font>

371
00:17:46,179 --> 00:17:51,360
<font color="#CCCCCC">people don't / -</font>

372
00:17:47,670 --> 00:17:54,110
<font color="#E5E5E5">correctly protect their functions</font><font color="#CCCCCC"> there</font>

373
00:17:51,360 --> 00:17:57,179
was one particularly<font color="#CCCCCC"> amusing one</font><font color="#E5E5E5"> that</font>

374
00:17:54,110 --> 00:17:58,979
was basically a pyramid scheme

375
00:17:57,180 --> 00:18:00,240
they called themselves<font color="#E5E5E5"> explicitly a</font>

376
00:17:58,980 --> 00:18:03,600
pyramid scheme they were called<font color="#CCCCCC"> for</font>

377
00:18:00,240 --> 00:18:05,670
<font color="#CCCCCC">bixie someone really liked this idea</font><font color="#E5E5E5"> and</font>

378
00:18:03,600 --> 00:18:08,340
copied their code and<font color="#E5E5E5"> renamed it</font><font color="#CCCCCC"> to</font>

379
00:18:05,670 --> 00:18:10,380
dynamic pyramids<font color="#E5E5E5"> and started convincing</font>

380
00:18:08,340 --> 00:18:12,929
people<font color="#E5E5E5"> on random forums to join their</font>

381
00:18:10,380 --> 00:18:14,880
pyramid scheme<font color="#E5E5E5"> the issue with this is</font>

382
00:18:12,930 --> 00:18:16,560
<font color="#E5E5E5">whatever they renamed the contract to</font>

383
00:18:14,880 --> 00:18:19,500
dynamic pyramid they didn't<font color="#CCCCCC"> actually</font>

384
00:18:16,560 --> 00:18:21,419
update the<font color="#E5E5E5"> constructor in this contract</font>

385
00:18:19,500 --> 00:18:26,100
code<font color="#E5E5E5"> now the problem with</font><font color="#CCCCCC"> that is that</font>

386
00:18:21,420 --> 00:18:29,000
<font color="#E5E5E5">the constructor is</font><font color="#CCCCCC"> actually only</font><font color="#E5E5E5"> called</font>

387
00:18:26,100 --> 00:18:31,590
during smart contract deployment and

388
00:18:29,000 --> 00:18:34,830
after that the code isn't<font color="#E5E5E5"> even stored on</font>

389
00:18:31,590 --> 00:18:36,689
the chain it disappears entirely<font color="#E5E5E5"> for</font>

390
00:18:34,830 --> 00:18:38,730
that to<font color="#E5E5E5"> happen however it has to</font>

391
00:18:36,690 --> 00:18:40,410
actually<font color="#E5E5E5"> the constructor to the smart</font>

392
00:18:38,730 --> 00:18:43,950
<font color="#CCCCCC">contract actually</font><font color="#E5E5E5"> has to be named</font><font color="#CCCCCC"> the</font>

393
00:18:40,410 --> 00:18:45,960
exact same thing<font color="#E5E5E5"> as the contract itself</font>

394
00:18:43,950 --> 00:18:49,160
and if it's not<font color="#E5E5E5"> it just becomes a normal</font>

395
00:18:45,960 --> 00:18:51,300
<font color="#CCCCCC">public function so in this case</font><font color="#E5E5E5"> someone</font>

396
00:18:49,160 --> 00:18:53,280
<font color="#CCCCCC">deployed this contract it got up</font><font color="#E5E5E5"> on a</font>

397
00:18:51,300 --> 00:18:55,919
bunch<font color="#E5E5E5"> of people to participate and</font>

398
00:18:53,280 --> 00:18:57,899
<font color="#E5E5E5">actually didn't initialize their wallets</font>

399
00:18:55,920 --> 00:19:05,190
someone initialized it and then<font color="#E5E5E5"> drained</font>

400
00:18:57,900 --> 00:19:07,020
the entire<font color="#E5E5E5"> contract</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> interesting</font>

401
00:19:05,190 --> 00:19:10,500
<font color="#E5E5E5">one was the king</font><font color="#CCCCCC"> or the king of</font><font color="#E5E5E5"> the</font>

402
00:19:07,020 --> 00:19:15,480
ether throne<font color="#E5E5E5"> which was another pyramid</font>

403
00:19:10,500 --> 00:19:17,790
<font color="#E5E5E5">scheme by another name</font><font color="#CCCCCC"> basically</font><font color="#E5E5E5"> every</font>

404
00:19:15,480 --> 00:19:19,970
<font color="#CCCCCC">time someone sent more money to the</font>

405
00:19:17,790 --> 00:19:22,139
contract than had<font color="#CCCCCC"> ever</font><font color="#E5E5E5"> been sent</font><font color="#CCCCCC"> to it a</font>

406
00:19:19,970 --> 00:19:25,230
portion<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that was paid out to</font><font color="#E5E5E5"> the</font>

407
00:19:22,140 --> 00:19:26,940
previous winner<font color="#CCCCCC"> and the new winner was</font>

408
00:19:25,230 --> 00:19:28,350
installed as the<font color="#E5E5E5"> monarch who would</font>

409
00:19:26,940 --> 00:19:30,240
<font color="#CCCCCC">eventually get paid out the</font><font color="#E5E5E5"> next time</font>

410
00:19:28,350 --> 00:19:34,320
another sucker<font color="#CCCCCC"> put more money into the</font>

411
00:19:30,240 --> 00:19:35,760
<font color="#E5E5E5">contract the problem is that if you</font>

412
00:19:34,320 --> 00:19:39,120
don't<font color="#E5E5E5"> actually check</font><font color="#CCCCCC"> the result of</font>

413
00:19:35,760 --> 00:19:41,640
<font color="#CCCCCC">ascend</font><font color="#E5E5E5"> it can potentially fail but the</font>

414
00:19:39,120 --> 00:19:43,350
contract will continue executing<font color="#E5E5E5"> so what</font>

415
00:19:41,640 --> 00:19:47,280
you can do is is<font color="#CCCCCC"> you get actually</font>

416
00:19:43,350 --> 00:19:50,280
prevent if you if this send fails<font color="#E5E5E5"> then</font>

417
00:19:47,280 --> 00:19:52,020
you may<font color="#E5E5E5"> be able to steal funds that were</font>

418
00:19:50,280 --> 00:19:58,740
rightfully<font color="#E5E5E5"> supposed to go to someone</font>

419
00:19:52,020 --> 00:20:01,200
else so in this example the the current

420
00:19:58,740 --> 00:20:03,059
<font color="#E5E5E5">monarch gets replaced but the</font><font color="#CCCCCC"> outcome</font>

421
00:20:01,200 --> 00:20:05,789
outgoing<font color="#E5E5E5"> monarch misses out on this fee</font>

422
00:20:03,059 --> 00:20:09,830
and if they had<font color="#E5E5E5"> actually checked for the</font>

423
00:20:05,789 --> 00:20:12,419
failure this wouldn't have happened<font color="#E5E5E5"> so</font>

424
00:20:09,830 --> 00:20:15,029
checking without that is bad but

425
00:20:12,419 --> 00:20:18,690
<font color="#E5E5E5">sometimes throwing is actually worse</font><font color="#CCCCCC"> so</font>

426
00:20:15,029 --> 00:20:21,090
there's some examples<font color="#E5E5E5"> of contracts where</font>

427
00:20:18,690 --> 00:20:23,100
people were<font color="#E5E5E5"> withdrawing to a bunch of</font>

428
00:20:21,090 --> 00:20:24,689
different addresses of previous

429
00:20:23,100 --> 00:20:29,459
investors but if one<font color="#E5E5E5"> of the sentence</font>

430
00:20:24,690 --> 00:20:31,470
fail and the contract<font color="#E5E5E5"> throws actually no</font>

431
00:20:29,460 --> 00:20:36,570
one can withdraw<font color="#E5E5E5"> any of their funds at</font>

432
00:20:31,470 --> 00:20:39,330
all<font color="#E5E5E5"> and people call this</font><font color="#CCCCCC"> griefing so</font>

433
00:20:36,570 --> 00:20:40,889
something that<font color="#CCCCCC"> people also have</font><font color="#E5E5E5"> trouble</font>

434
00:20:39,330 --> 00:20:44,870
understanding<font color="#E5E5E5"> about you know smart</font>

435
00:20:40,889 --> 00:20:47,100
contract<font color="#E5E5E5"> security is this idea that</font>

436
00:20:44,870 --> 00:20:48,840
<font color="#E5E5E5">everything you're doing is public and</font>

437
00:20:47,100 --> 00:20:51,620
not only<font color="#E5E5E5"> is it</font><font color="#CCCCCC"> public but sometimes it's</font>

438
00:20:48,840 --> 00:20:53,908
public before<font color="#CCCCCC"> it even hits the chain</font><font color="#E5E5E5"> so</font>

439
00:20:51,620 --> 00:20:56,279
someone wrote a rock-paper-scissors<font color="#E5E5E5"> game</font>

440
00:20:53,909 --> 00:20:57,809
<font color="#E5E5E5">where you could bet one</font><font color="#CCCCCC"> eath</font><font color="#E5E5E5"> on a game</font>

441
00:20:56,279 --> 00:21:02,240
of rock-paper-scissors the house takes

442
00:20:57,809 --> 00:21:05,309
<font color="#CCCCCC">1% when there isn't a tie so it's</font><font color="#E5E5E5"> just a</font>

443
00:21:02,240 --> 00:21:08,100
random gambling game<font color="#E5E5E5"> the problem with</font>

444
00:21:05,309 --> 00:21:12,928
this is<font color="#CCCCCC"> that you could see everyone's</font>

445
00:21:08,100 --> 00:21:14,699
moves<font color="#E5E5E5"> in the in the memo</font><font color="#CCCCCC"> before they</font>

446
00:21:12,929 --> 00:21:17,130
were<font color="#E5E5E5"> actually committed to the chain so</font>

447
00:21:14,700 --> 00:21:18,630
<font color="#E5E5E5">you could watch all the new transactions</font>

448
00:21:17,130 --> 00:21:20,760
<font color="#E5E5E5">being submitted</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the network</font><font color="#CCCCCC"> before</font>

449
00:21:18,630 --> 00:21:23,429
they<font color="#CCCCCC"> actually confirmed</font><font color="#E5E5E5"> and bet on the</font>

450
00:21:20,760 --> 00:21:26,340
correct thing<font color="#CCCCCC"> the correct move</font><font color="#E5E5E5"> so that</font>

451
00:21:23,429 --> 00:21:28,500
you would<font color="#E5E5E5"> always win</font><font color="#CCCCCC"> the game</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> you see</font>

452
00:21:26,340 --> 00:21:35,549
someone do scissors and you throw<font color="#E5E5E5"> rock</font>

453
00:21:28,500 --> 00:21:38,279
immediately<font color="#CCCCCC"> so there's a bunch</font><font color="#E5E5E5"> of other</font>

454
00:21:35,549 --> 00:21:41,029
<font color="#E5E5E5">types of</font><font color="#CCCCCC"> vulnerabilities that</font><font color="#E5E5E5"> are pretty</font>

455
00:21:38,279 --> 00:21:44,330
<font color="#CCCCCC">common so generating random</font><font color="#E5E5E5"> data on on</font>

456
00:21:41,029 --> 00:21:47,490
the blockchain<font color="#E5E5E5"> is actually pretty hard</font>

457
00:21:44,330 --> 00:21:49,379
<font color="#CCCCCC">so</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the most common ways to</font><font color="#E5E5E5"> do</font><font color="#CCCCCC"> it</font>

458
00:21:47,490 --> 00:21:52,740
now it is<font color="#E5E5E5"> because it's</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> hard is to</font>

459
00:21:49,380 --> 00:21:55,340
<font color="#CCCCCC">actually pull from</font><font color="#E5E5E5"> data sources of</font>

460
00:21:52,740 --> 00:21:59,480
people who publish periodically publish

461
00:21:55,340 --> 00:22:02,100
<font color="#E5E5E5">output from random.org</font><font color="#CCCCCC"> to the chain</font><font color="#E5E5E5"> I</font>

462
00:21:59,480 --> 00:22:05,940
don't know how much you<font color="#E5E5E5"> trust that but I</font>

463
00:22:02,100 --> 00:22:07,918
<font color="#E5E5E5">don't very</font><font color="#CCCCCC"> much so there's been</font><font color="#E5E5E5"> some</font>

464
00:22:05,940 --> 00:22:10,740
examples of some<font color="#CCCCCC"> PRN G's</font><font color="#E5E5E5"> that are not</font>

465
00:22:07,919 --> 00:22:12,929
very<font color="#E5E5E5"> safe some people attempt to use the</font>

466
00:22:10,740 --> 00:22:14,240
block hash to do this but<font color="#E5E5E5"> that's only</font>

467
00:22:12,929 --> 00:22:16,309
<font color="#E5E5E5">safe up and up until</font>

468
00:22:14,240 --> 00:22:18,650
point when if you're managing<font color="#E5E5E5"> enough</font>

469
00:22:16,309 --> 00:22:20,120
money that<font color="#E5E5E5"> miners are actually malicious</font>

470
00:22:18,650 --> 00:22:22,220
miners might actually be<font color="#CCCCCC"> interested in</font>

471
00:22:20,120 --> 00:22:25,520
the<font color="#E5E5E5"> funds you're controlling then it</font>

472
00:22:22,220 --> 00:22:27,470
could not be save<font color="#E5E5E5"> energy or overflows</font>

473
00:22:25,520 --> 00:22:31,220
are still alive and<font color="#E5E5E5"> well</font><font color="#CCCCCC"> you have to</font>

474
00:22:27,470 --> 00:22:32,830
check everything<font color="#E5E5E5"> to make sure</font><font color="#CCCCCC"> it doesn't</font>

475
00:22:31,220 --> 00:22:34,700
underflow or overflow

476
00:22:32,830 --> 00:22:36,439
unfortunately<font color="#E5E5E5"> solidity doesn't do</font>

477
00:22:34,700 --> 00:22:39,110
anything<font color="#E5E5E5"> for</font><font color="#CCCCCC"> you there</font><font color="#E5E5E5"> so you have to</font>

478
00:22:36,440 --> 00:22:42,460
manually pepper your code with<font color="#E5E5E5"> with</font>

479
00:22:39,110 --> 00:22:46,459
things that<font color="#CCCCCC"> actually check for those</font>

480
00:22:42,460 --> 00:22:48,080
race conditions are also a problem<font color="#CCCCCC"> and</font>

481
00:22:46,460 --> 00:22:50,630
those<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be kind of</font><font color="#E5E5E5"> hard</font><font color="#CCCCCC"> to see as</font><font color="#E5E5E5"> well</font>

482
00:22:48,080 --> 00:22:53,750
because<font color="#E5E5E5"> sometimes it is some of these</font>

483
00:22:50,630 --> 00:22:56,450
bugs depend on like when when various

484
00:22:53,750 --> 00:22:59,300
transactions<font color="#CCCCCC"> actually hit the chain</font><font color="#E5E5E5"> so</font>

485
00:22:56,450 --> 00:23:02,480
if you can race things and put a put a

486
00:22:59,300 --> 00:23:04,220
much higher transaction fee on<font color="#E5E5E5"> top of</font>

487
00:23:02,480 --> 00:23:09,160
your transaction and<font color="#E5E5E5"> then beat someone</font>

488
00:23:04,220 --> 00:23:11,510
else<font color="#E5E5E5"> that can be a</font><font color="#CCCCCC"> problem think I'm</font>

489
00:23:09,160 --> 00:23:13,130
running a little low on time<font color="#CCCCCC"> here but</font>

490
00:23:11,510 --> 00:23:14,900
there's a bunch<font color="#E5E5E5"> of really great tools</font>

491
00:23:13,130 --> 00:23:18,380
out<font color="#E5E5E5"> there that</font><font color="#CCCCCC"> are still under active</font>

492
00:23:14,900 --> 00:23:24,160
<font color="#E5E5E5">development these</font><font color="#CCCCCC"> are pretty new</font><font color="#E5E5E5"> so myth</font>

493
00:23:18,380 --> 00:23:24,160
<font color="#E5E5E5">roll is really cool trying to do</font>

494
00:23:24,220 --> 00:23:31,130
<font color="#CCCCCC">symbolic analysis and things</font><font color="#E5E5E5"> like that</font>

495
00:23:26,210 --> 00:23:32,780
<font color="#E5E5E5">on on smart contracts porosity</font><font color="#CCCCCC"> under</font>

496
00:23:31,130 --> 00:23:35,750
active development there's also some

497
00:23:32,780 --> 00:23:37,760
tools<font color="#E5E5E5"> on here that I haven't updated yet</font>

498
00:23:35,750 --> 00:23:39,470
<font color="#E5E5E5">but trail of bits has a bunch of</font>

499
00:23:37,760 --> 00:23:41,750
analysis tools<font color="#CCCCCC"> that are really useful I</font>

500
00:23:39,470 --> 00:23:45,020
recommend checking them<font color="#CCCCCC"> out on their</font>

501
00:23:41,750 --> 00:23:47,809
github<font color="#CCCCCC"> they have a buzzer and they have</font>

502
00:23:45,020 --> 00:23:55,940
a nice plugin for binary ninja to

503
00:23:47,809 --> 00:23:58,100
actually review<font color="#E5E5E5"> raw disassembly and</font><font color="#CCCCCC"> I've</font>

504
00:23:55,940 --> 00:23:59,390
got some stuff about how<font color="#CCCCCC"> Pauli swarm is</font>

505
00:23:58,100 --> 00:24:03,050
doing it but<font color="#CCCCCC"> I</font><font color="#E5E5E5"> think I'm a little out</font><font color="#CCCCCC"> of</font>

506
00:23:59,390 --> 00:24:09,239
time here<font color="#CCCCCC"> so does anyone</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> any</font>

507
00:24:03,050 --> 00:24:13,559
questions<font color="#CCCCCC"> either kids</font>

508
00:24:09,239 --> 00:24:15,210
I oughta couple<font color="#CCCCCC"> I didn't do much</font><font color="#E5E5E5"> of a</font>

509
00:24:13,559 --> 00:24:17,039
<font color="#E5E5E5">security analysis on them other</font><font color="#CCCCCC"> than</font>

510
00:24:15,210 --> 00:24:23,809
that<font color="#E5E5E5"> they were able to</font><font color="#CCCCCC"> single-handedly</font>

511
00:24:17,039 --> 00:24:23,809
<font color="#E5E5E5">dost</font><font color="#CCCCCC"> a Syrian Network</font><font color="#E5E5E5"> any more questions</font>

512
00:24:24,440 --> 00:24:29,749
no<font color="#E5E5E5"> okay</font><font color="#CCCCCC"> then I'd</font><font color="#E5E5E5"> like to thank you</font>

513
00:24:29,850 --> 00:24:33,659
[Applause]

