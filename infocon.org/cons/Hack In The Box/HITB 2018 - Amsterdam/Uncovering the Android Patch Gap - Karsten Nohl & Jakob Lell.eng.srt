1
00:00:13,370 --> 00:00:20,990
<font color="#E5E5E5">honor to</font><font color="#CCCCCC"> be here thank you very</font><font color="#E5E5E5"> much we</font>

2
00:00:18,529 --> 00:00:23,540
are<font color="#CCCCCC"> here to discuss today the security</font>

3
00:00:20,990 --> 00:00:25,070
of one of the most important technology

4
00:00:23,540 --> 00:00:29,330
<font color="#E5E5E5">ecosystems in the</font><font color="#CCCCCC"> world</font>

5
00:00:25,070 --> 00:00:34,600
<font color="#E5E5E5">two billion active Android devices and</font>

6
00:00:29,330 --> 00:00:38,059
Counting<font color="#E5E5E5"> i'm karsten</font><font color="#CCCCCC"> overhears jakob</font>

7
00:00:34,600 --> 00:00:41,270
<font color="#E5E5E5">were part of a hacking collective out of</font>

8
00:00:38,059 --> 00:00:43,780
<font color="#CCCCCC">berlin and Hong Kong</font><font color="#E5E5E5"> where we do</font>

9
00:00:41,270 --> 00:00:46,219
security<font color="#E5E5E5"> research and also</font><font color="#CCCCCC"> help</font>

10
00:00:43,780 --> 00:00:50,089
occasional companies to improve<font color="#CCCCCC"> their</font>

11
00:00:46,219 --> 00:00:52,480
<font color="#CCCCCC">security</font><font color="#E5E5E5"> we want to take you today on</font>

12
00:00:50,089 --> 00:00:55,370
what was for us a two-year journey into

13
00:00:52,480 --> 00:00:57,468
<font color="#E5E5E5">understanding Android security will</font>

14
00:00:55,370 --> 00:01:00,858
summarize the<font color="#E5E5E5"> highlights in the next</font>

15
00:00:57,469 --> 00:01:02,329
hour for you Jakob and<font color="#E5E5E5"> I will give you</font>

16
00:01:00,859 --> 00:01:04,909
different<font color="#CCCCCC"> perspectives on</font><font color="#E5E5E5"> that same</font>

17
00:01:02,329 --> 00:01:07,340
journey<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> be focusing on the research</font>

18
00:01:04,909 --> 00:01:10,520
part of that<font color="#E5E5E5"> journey</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> try to answer</font>

19
00:01:07,340 --> 00:01:13,790
the question what<font color="#CCCCCC"> caches are installed</font>

20
00:01:10,520 --> 00:01:16,130
on Android<font color="#E5E5E5"> phones and</font><font color="#CCCCCC"> Yakubu explained</font>

21
00:01:13,790 --> 00:01:18,500
<font color="#E5E5E5">their engineering components of</font><font color="#CCCCCC"> that</font>

22
00:01:16,130 --> 00:01:21,640
same journey<font color="#CCCCCC"> how we managed to answer</font>

23
00:01:18,500 --> 00:01:24,640
<font color="#CCCCCC">that question at fairly</font><font color="#E5E5E5"> large scale</font>

24
00:01:21,640 --> 00:01:28,370
<font color="#E5E5E5">hundreds of patches thousands of phones</font>

25
00:01:24,640 --> 00:01:30,500
right patching<font color="#E5E5E5"> I don't have to explain</font>

26
00:01:28,370 --> 00:01:32,750
to<font color="#E5E5E5"> anybody is critical to uphold the</font>

27
00:01:30,500 --> 00:01:34,520
security of<font color="#E5E5E5"> any system no system is free</font>

28
00:01:32,750 --> 00:01:36,050
of programming bugs<font color="#E5E5E5"> and as these</font>

29
00:01:34,520 --> 00:01:39,830
programming bugs are<font color="#E5E5E5"> being discovered</font>

30
00:01:36,050 --> 00:01:41,899
<font color="#E5E5E5">catchers fix the vulnerabilities and we</font>

31
00:01:39,830 --> 00:01:44,480
do patch regularly pretty much all our

32
00:01:41,900 --> 00:01:48,380
<font color="#E5E5E5">IT environments and in most IT</font>

33
00:01:44,480 --> 00:01:51,140
environments<font color="#CCCCCC"> we have a fairly</font>

34
00:01:48,380 --> 00:01:53,600
straightforward<font color="#E5E5E5"> patch ecosystem we have</font>

35
00:01:51,140 --> 00:01:56,150
a<font color="#E5E5E5"> vendor say windows a Linux</font>

36
00:01:53,600 --> 00:01:59,440
distribution<font color="#CCCCCC"> apple</font><font color="#E5E5E5"> issuing patches and</font>

37
00:01:56,150 --> 00:02:01,430
then<font color="#E5E5E5"> users installing those patches</font>

38
00:01:59,440 --> 00:02:02,810
<font color="#E5E5E5">sounds pretty straightforward but</font>

39
00:02:01,430 --> 00:02:05,840
<font color="#E5E5E5">anybody from an enterprise environment</font>

40
00:02:02,810 --> 00:02:07,850
<font color="#E5E5E5">of course knows what a huge headache</font>

41
00:02:05,840 --> 00:02:11,239
<font color="#E5E5E5">patching can be even in a simple</font>

42
00:02:07,850 --> 00:02:16,190
<font color="#E5E5E5">ecosystem like that organizations</font><font color="#CCCCCC"> spent</font>

43
00:02:11,239 --> 00:02:17,840
a lot of time on monthly patches or have

44
00:02:16,190 --> 00:02:20,239
<font color="#CCCCCC">even</font><font color="#E5E5E5"> given up on monthly patches and</font>

45
00:02:17,840 --> 00:02:22,370
only patch once every three<font color="#CCCCCC"> months or</font>

46
00:02:20,239 --> 00:02:25,189
per<font color="#E5E5E5"> year even</font><font color="#CCCCCC"> in a simple</font><font color="#E5E5E5"> patch</font>

47
00:02:22,370 --> 00:02:26,970
ecosystem<font color="#E5E5E5"> now look at Android so much</font>

48
00:02:25,189 --> 00:02:29,010
more complicated still

49
00:02:26,970 --> 00:02:31,109
in<font color="#E5E5E5"> Android you don't have one vendor</font>

50
00:02:29,010 --> 00:02:34,220
<font color="#E5E5E5">issuing patches and then all the users</font>

51
00:02:31,110 --> 00:02:36,720
installing it but<font color="#E5E5E5"> rather you have Google</font>

52
00:02:34,220 --> 00:02:39,240
<font color="#E5E5E5">maintaining the</font><font color="#CCCCCC"> security of</font><font color="#E5E5E5"> this</font>

53
00:02:36,720 --> 00:02:42,060
<font color="#E5E5E5">ecosystem by creating patches but then</font>

54
00:02:39,240 --> 00:02:43,650
<font color="#E5E5E5">Google issuing those patches to the</font>

55
00:02:42,060 --> 00:02:45,450
<font color="#CCCCCC">chipset vendors well</font><font color="#E5E5E5"> they're</font><font color="#CCCCCC"> making</font>

56
00:02:43,650 --> 00:02:47,330
<font color="#E5E5E5">publicly available but the chipset</font>

57
00:02:45,450 --> 00:02:50,730
vendors consume them

58
00:02:47,330 --> 00:02:53,040
Qualcomm would be an example<font color="#E5E5E5"> merge them</font>

59
00:02:50,730 --> 00:02:55,500
into<font color="#CCCCCC"> their</font><font color="#E5E5E5"> own modified versions of</font>

60
00:02:53,040 --> 00:02:57,900
<font color="#E5E5E5">Android and an issue</font><font color="#CCCCCC"> those modified</font>

61
00:02:55,500 --> 00:03:00,300
versions<font color="#E5E5E5"> to their customers companies</font>

62
00:02:57,900 --> 00:03:02,220
that build phones<font color="#E5E5E5"> like Samsung</font><font color="#CCCCCC"> and then</font>

63
00:03:00,300 --> 00:03:04,200
Samsung once again<font color="#E5E5E5"> will take</font><font color="#CCCCCC"> the patch</font>

64
00:03:02,220 --> 00:03:06,570
that<font color="#CCCCCC"> I received</font><font color="#E5E5E5"> from Qualcomm</font><font color="#CCCCCC"> and merge</font>

65
00:03:04,200 --> 00:03:09,839
it into its modified version<font color="#E5E5E5"> of Android</font>

66
00:03:06,570 --> 00:03:11,430
and not just once<font color="#CCCCCC"> they maintain hundreds</font>

67
00:03:09,840 --> 00:03:13,290
or in the case<font color="#E5E5E5"> of some zone probably</font>

68
00:03:11,430 --> 00:03:15,270
thousands<font color="#CCCCCC"> of</font><font color="#E5E5E5"> different Android builds</font><font color="#CCCCCC"> in</font>

69
00:03:13,290 --> 00:03:17,519
parallel<font color="#E5E5E5"> for different versions of</font>

70
00:03:15,270 --> 00:03:20,340
<font color="#E5E5E5">different phones and in many of those</font>

71
00:03:17,520 --> 00:03:23,310
need to<font color="#E5E5E5"> be shown to mobile networks all</font>

72
00:03:20,340 --> 00:03:25,530
over<font color="#CCCCCC"> the world to</font><font color="#E5E5E5"> get an approval that</font>

73
00:03:23,310 --> 00:03:28,890
<font color="#E5E5E5">those patches can indeed be issued to</font>

74
00:03:25,530 --> 00:03:32,250
<font color="#E5E5E5">the customers right so a long chain of</font>

75
00:03:28,890 --> 00:03:34,589
<font color="#E5E5E5">companies is involved here and the</font>

76
00:03:32,250 --> 00:03:36,300
<font color="#E5E5E5">research question that we have is</font><font color="#CCCCCC"> how</font>

77
00:03:34,590 --> 00:03:38,730
<font color="#CCCCCC">many</font><font color="#E5E5E5"> mistakes are being made in this</font>

78
00:03:36,300 --> 00:03:41,940
very complicated<font color="#CCCCCC"> multi-step process</font>

79
00:03:38,730 --> 00:03:43,709
how many patches<font color="#E5E5E5"> get forgotten a</font>

80
00:03:41,940 --> 00:03:48,359
question that hadn't<font color="#CCCCCC"> previously been</font>

81
00:03:43,709 --> 00:03:50,250
asked um<font color="#E5E5E5"> now if you if you want to</font>

82
00:03:48,360 --> 00:03:52,770
figure out<font color="#E5E5E5"> how many patches are</font>

83
00:03:50,250 --> 00:03:55,200
installed on<font color="#CCCCCC"> a given phone you would</font>

84
00:03:52,770 --> 00:03:57,660
perhaps just think to look into the

85
00:03:55,200 --> 00:03:59,959
settings menu<font color="#E5E5E5"> it says patch level date</font>

86
00:03:57,660 --> 00:04:02,310
you know whatever<font color="#E5E5E5"> it says for your phone</font>

87
00:03:59,959 --> 00:04:04,650
<font color="#CCCCCC">now that would be</font><font color="#E5E5E5"> one way</font><font color="#CCCCCC"> to answer</font>

88
00:04:02,310 --> 00:04:07,590
<font color="#E5E5E5">which patches install but we did learn</font>

89
00:04:04,650 --> 00:04:10,110
<font color="#CCCCCC">from an example about two years ago not</font>

90
00:04:07,590 --> 00:04:12,750
unlike this<font color="#E5E5E5"> one that these patch claims</font>

91
00:04:10,110 --> 00:04:15,870
can<font color="#CCCCCC"> be unreliable</font><font color="#E5E5E5"> so here's an example</font>

92
00:04:12,750 --> 00:04:18,720
<font color="#E5E5E5">from last year a phone whose petrova</font>

93
00:04:15,870 --> 00:04:20,730
late says<font color="#E5E5E5"> September but as these red</font>

94
00:04:18,720 --> 00:04:22,620
<font color="#E5E5E5">boxes indicate the petrous from</font>

95
00:04:20,730 --> 00:04:24,810
September not installed the neither<font color="#E5E5E5"> the</font>

96
00:04:22,620 --> 00:04:28,440
ones from August July<font color="#E5E5E5"> going back many</font>

97
00:04:24,810 --> 00:04:30,540
months so<font color="#E5E5E5"> here's a vendor that</font><font color="#CCCCCC"> Mullis</font>

98
00:04:28,440 --> 00:04:32,760
arbitrarily<font color="#CCCCCC"> set this patch that</font><font color="#E5E5E5"> whatever</font>

99
00:04:30,540 --> 00:04:34,770
they thought looked<font color="#E5E5E5"> good without</font>

100
00:04:32,760 --> 00:04:37,560
<font color="#E5E5E5">actually doing the</font><font color="#CCCCCC"> work of installing</font>

101
00:04:34,770 --> 00:04:39,810
the patches so we need<font color="#E5E5E5"> another</font><font color="#CCCCCC"> way to</font>

102
00:04:37,560 --> 00:04:41,330
<font color="#CCCCCC">verify whether patches are installed on</font>

103
00:04:39,810 --> 00:04:43,970
Android

104
00:04:41,330 --> 00:04:46,698
now we could go<font color="#CCCCCC"> the exploit route</font>

105
00:04:43,970 --> 00:04:48,889
knowing that a patch is needed to

106
00:04:46,699 --> 00:04:50,780
prevent<font color="#E5E5E5"> a certain exploit we can try to</font>

107
00:04:48,889 --> 00:04:54,050
exploit<font color="#E5E5E5"> and if the exploit still works</font>

108
00:04:50,780 --> 00:04:56,690
<font color="#CCCCCC">the patch</font><font color="#E5E5E5"> is missing but exploits are</font>

109
00:04:54,050 --> 00:04:58,520
not<font color="#CCCCCC"> available for most</font><font color="#E5E5E5"> Android</font>

110
00:04:56,690 --> 00:05:00,830
vulnerabilities and even if they are

111
00:04:58,520 --> 00:05:03,109
they don't<font color="#CCCCCC"> really work reliably so you</font>

112
00:05:00,830 --> 00:05:04,669
never know it did it<font color="#CCCCCC"> fail because the</font>

113
00:05:03,110 --> 00:05:05,750
petrous<font color="#E5E5E5"> install did it fail because</font>

114
00:05:04,669 --> 00:05:08,120
<font color="#E5E5E5">something else</font>

115
00:05:05,750 --> 00:05:10,490
in<font color="#E5E5E5"> our environment</font><font color="#CCCCCC"> isn't right for this</font>

116
00:05:08,120 --> 00:05:12,320
proof-of-concept exploit so this will

117
00:05:10,490 --> 00:05:16,330
not give us a complete picture<font color="#E5E5E5"> of</font>

118
00:05:12,320 --> 00:05:18,469
<font color="#E5E5E5">Android patches so we chose a third way</font>

119
00:05:16,330 --> 00:05:22,280
analyzing<font color="#CCCCCC"> the software running on</font><font color="#E5E5E5"> a</font>

120
00:05:18,470 --> 00:05:24,560
phone<font color="#E5E5E5"> or inside a firmware file to</font>

121
00:05:22,280 --> 00:05:27,049
<font color="#CCCCCC">determine which patches are included on</font>

122
00:05:24,560 --> 00:05:28,760
that<font color="#E5E5E5"> phone or in that firmware</font><font color="#CCCCCC"> file</font><font color="#E5E5E5"> and</font>

123
00:05:27,050 --> 00:05:29,800
that's<font color="#E5E5E5"> the journey</font><font color="#CCCCCC"> we want to take you</font>

124
00:05:28,760 --> 00:05:32,690
<font color="#E5E5E5">on today</font>

125
00:05:29,800 --> 00:05:35,090
let<font color="#E5E5E5"> me define this this question</font><font color="#CCCCCC"> a</font>

126
00:05:32,690 --> 00:05:37,610
little<font color="#CCCCCC"> bit</font><font color="#E5E5E5"> more clearly though when we</font>

127
00:05:35,090 --> 00:05:39,710
speak about Android<font color="#CCCCCC"> patching</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> possibly</font>

128
00:05:37,610 --> 00:05:41,750
mean two<font color="#CCCCCC"> different</font><font color="#E5E5E5"> things</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> primarily</font>

129
00:05:39,710 --> 00:05:44,210
there's Android the operating system

130
00:05:41,750 --> 00:05:46,520
well maintained by Google well version

131
00:05:44,210 --> 00:05:48,859
<font color="#E5E5E5">that's understood what's</font><font color="#CCCCCC"> included which</font>

132
00:05:46,520 --> 00:05:50,870
patches should be included that's the

133
00:05:48,860 --> 00:05:52,490
one side and<font color="#E5E5E5"> that's the more important</font>

134
00:05:50,870 --> 00:05:55,010
side when it comes to patching because

135
00:05:52,490 --> 00:05:58,700
the hacker from the outside<font color="#E5E5E5"> will always</font>

136
00:05:55,010 --> 00:06:00,880
first hit the<font color="#E5E5E5"> Android system before</font><font color="#CCCCCC"> then</font>

137
00:05:58,700 --> 00:06:02,770
later perhaps<font color="#CCCCCC"> wanted to leverage some</font>

138
00:06:00,880 --> 00:06:05,300
vulnerabilities in the Linux kernel

139
00:06:02,770 --> 00:06:07,400
<font color="#CCCCCC">let's not forget in each Android phone</font>

140
00:06:05,300 --> 00:06:09,139
there's<font color="#CCCCCC"> also Linux kernel running which</font>

141
00:06:07,400 --> 00:06:11,030
<font color="#CCCCCC">is not maintained by Google this is</font>

142
00:06:09,139 --> 00:06:13,880
maintained by of course<font color="#CCCCCC"> a much larger</font>

143
00:06:11,030 --> 00:06:17,960
ecosystem<font color="#CCCCCC"> of companies</font><font color="#E5E5E5"> and individuals</font>

144
00:06:13,880 --> 00:06:19,940
and<font color="#E5E5E5"> Linux is designed for all kinds of</font>

145
00:06:17,960 --> 00:06:23,299
<font color="#E5E5E5">things and servers maybe the occasional</font>

146
00:06:19,940 --> 00:06:25,370
desktop so many security<font color="#E5E5E5"> patches for for</font>

147
00:06:23,300 --> 00:06:28,610
<font color="#E5E5E5">Linux don't necessarily apply to Android</font>

148
00:06:25,370 --> 00:06:31,039
right<font color="#E5E5E5"> also</font><font color="#CCCCCC"> it's less important because</font>

149
00:06:28,610 --> 00:06:33,080
as I said<font color="#E5E5E5"> the attacker</font><font color="#CCCCCC"> always first hits</font>

150
00:06:31,039 --> 00:06:35,599
the Android layer<font color="#E5E5E5"> and maybe only later</font>

151
00:06:33,080 --> 00:06:37,700
wants to exploit<font color="#E5E5E5"> further into Linux so</font>

152
00:06:35,599 --> 00:06:39,680
for the purpose of<font color="#E5E5E5"> this</font><font color="#CCCCCC"> discussion</font><font color="#E5E5E5"> today</font>

153
00:06:37,700 --> 00:06:41,570
<font color="#E5E5E5">we're not</font><font color="#CCCCCC"> going to</font><font color="#E5E5E5"> look at the Linux</font>

154
00:06:39,680 --> 00:06:44,450
<font color="#E5E5E5">side but focus on Android to Android</font>

155
00:06:41,570 --> 00:06:46,669
patches<font color="#E5E5E5"> right so yeah that clearly</font>

156
00:06:44,450 --> 00:06:48,680
<font color="#E5E5E5">defines now why we did this research</font><font color="#CCCCCC"> and</font>

157
00:06:46,669 --> 00:06:51,260
what<font color="#E5E5E5"> the research question is which</font>

158
00:06:48,680 --> 00:06:53,500
patches are installed on a given Android

159
00:06:51,260 --> 00:06:56,320
phone

160
00:06:53,500 --> 00:06:58,840
and this<font color="#E5E5E5"> question needs to be asked</font>

161
00:06:56,320 --> 00:07:01,000
hundreds of times<font color="#E5E5E5"> because for Android</font>

162
00:06:58,840 --> 00:07:02,440
does a bunch of different patches<font color="#E5E5E5"> so</font>

163
00:07:01,000 --> 00:07:04,600
last year alone there were about a

164
00:07:02,440 --> 00:07:07,390
thousand patches<font color="#E5E5E5"> security relevant</font>

165
00:07:04,600 --> 00:07:09,820
patches for<font color="#E5E5E5"> Android some of them are for</font>

166
00:07:07,390 --> 00:07:11,770
<font color="#CCCCCC">the Linux kernel</font><font color="#E5E5E5"> so let's exclude those</font>

167
00:07:09,820 --> 00:07:14,349
for the moment<font color="#CCCCCC"> some of them are marked</font>

168
00:07:11,770 --> 00:07:16,510
as low or medium severity<font color="#E5E5E5"> so we're not</font>

169
00:07:14,350 --> 00:07:19,450
going<font color="#E5E5E5"> to look at those but even in the</font>

170
00:07:16,510 --> 00:07:22,750
<font color="#E5E5E5">bucket of high and critical patches</font><font color="#CCCCCC"> just</font>

171
00:07:19,450 --> 00:07:24,969
on<font color="#CCCCCC"> the user land there's</font><font color="#E5E5E5"> about 300 so</font>

172
00:07:22,750 --> 00:07:28,120
that's a<font color="#E5E5E5"> good place to start our</font>

173
00:07:24,970 --> 00:07:29,890
research<font color="#E5E5E5"> 300 patches about</font><font color="#CCCCCC"> 80 percent</font><font color="#E5E5E5"> of</font>

174
00:07:28,120 --> 00:07:32,950
them<font color="#E5E5E5"> you can download the source code</font>

175
00:07:29,890 --> 00:07:34,690
<font color="#E5E5E5">mostly from Google and so you understand</font>

176
00:07:32,950 --> 00:07:37,200
what is the patch what changed in the

177
00:07:34,690 --> 00:07:40,450
<font color="#E5E5E5">source code</font><font color="#CCCCCC"> and those are 20%</font><font color="#E5E5E5"> roughly</font>

178
00:07:37,200 --> 00:07:42,219
<font color="#CCCCCC">their proprietary code patches so</font>

179
00:07:40,450 --> 00:07:44,320
Qualcomm for instance<font color="#E5E5E5"> would say we</font>

180
00:07:42,220 --> 00:07:46,150
patched something but we're not<font color="#E5E5E5"> going</font><font color="#CCCCCC"> to</font>

181
00:07:44,320 --> 00:07:48,130
tell you what it is<font color="#E5E5E5"> that's a little bit</font>

182
00:07:46,150 --> 00:07:49,479
difficult<font color="#E5E5E5"> for us to then measure whether</font>

183
00:07:48,130 --> 00:07:51,450
the patches install so for the moment

184
00:07:49,480 --> 00:07:55,060
<font color="#CCCCCC">we're ignoring</font><font color="#E5E5E5"> those and we're also</font>

185
00:07:51,450 --> 00:07:57,070
focusing on<font color="#E5E5E5"> c and</font><font color="#CCCCCC"> c++ code</font><font color="#E5E5E5"> just because</font>

186
00:07:55,060 --> 00:07:59,919
we get<font color="#E5E5E5"> a start somewhere</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> we're losing</font>

187
00:07:57,070 --> 00:08:01,390
<font color="#CCCCCC">a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> coverage over</font><font color="#CCCCCC"> java but</font>

188
00:07:59,919 --> 00:08:04,359
<font color="#E5E5E5">at the end</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the day we created</font>

189
00:08:01,390 --> 00:08:08,110
heuristics for 164 patches<font color="#E5E5E5"> issued last</font>

190
00:08:04,360 --> 00:08:10,360
year<font color="#CCCCCC"> and each</font><font color="#E5E5E5"> of those patches typically</font>

191
00:08:08,110 --> 00:08:11,860
measured through different URIs<font color="#CCCCCC"> --tx</font><font color="#E5E5E5"> so</font>

192
00:08:10,360 --> 00:08:14,710
that way if you<font color="#E5E5E5"> have multiple tests for</font>

193
00:08:11,860 --> 00:08:16,390
the same patch and it all come back<font color="#E5E5E5"> was</font>

194
00:08:14,710 --> 00:08:19,120
the same result<font color="#CCCCCC"> with</font><font color="#E5E5E5"> high confidence</font>

195
00:08:16,390 --> 00:08:21,520
<font color="#E5E5E5">that this patch is actually present</font><font color="#CCCCCC"> so</font>

196
00:08:19,120 --> 00:08:23,830
<font color="#E5E5E5">we have these hundreds of tests and we'd</font>

197
00:08:21,520 --> 00:08:26,500
like<font color="#E5E5E5"> to run them of course on well if</font>

198
00:08:23,830 --> 00:08:28,599
possible all Android builds how many

199
00:08:26,500 --> 00:08:30,460
<font color="#E5E5E5">Android builds are there apparently</font>

200
00:08:28,600 --> 00:08:33,130
<font color="#CCCCCC">there are</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> than 60,000 different</font>

201
00:08:30,460 --> 00:08:36,360
<font color="#E5E5E5">models Android models and each of them</font>

202
00:08:33,130 --> 00:08:39,640
<font color="#E5E5E5">well not everyone but</font><font color="#CCCCCC"> many receive</font>

203
00:08:36,360 --> 00:08:41,830
<font color="#E5E5E5">regular security updates or functional</font>

204
00:08:39,640 --> 00:08:44,800
update<font color="#E5E5E5"> so there's hundreds of thousands</font>

205
00:08:41,830 --> 00:08:47,650
of<font color="#CCCCCC"> Android builds out there</font><font color="#E5E5E5"> so optimally</font>

206
00:08:44,800 --> 00:08:49,870
we would we<font color="#CCCCCC"> would run this as a</font>

207
00:08:47,650 --> 00:08:52,030
<font color="#E5E5E5">large-scale experiment and we have as</font>

208
00:08:49,870 --> 00:08:54,430
<font color="#CCCCCC">far as</font><font color="#E5E5E5"> possible</font><font color="#CCCCCC"> and looked at a bunch of</font>

209
00:08:52,030 --> 00:08:57,790
different phones now let me first give

210
00:08:54,430 --> 00:09:00,250
you some of the<font color="#E5E5E5"> results of this analysis</font>

211
00:08:57,790 --> 00:09:04,689
and then later<font color="#E5E5E5"> explain how we reach</font>

212
00:09:00,250 --> 00:09:06,910
<font color="#E5E5E5">those results here the patch results for</font>

213
00:09:04,690 --> 00:09:07,400
<font color="#E5E5E5">four phones and those cases are chosen</font>

214
00:09:06,910 --> 00:09:10,010
<font color="#CCCCCC">to</font>

215
00:09:07,400 --> 00:09:13,459
have representative corner cases<font color="#CCCCCC"> off of</font>

216
00:09:10,010 --> 00:09:14,960
the option<font color="#CCCCCC"> space so all all other</font><font color="#E5E5E5"> phones</font>

217
00:09:13,460 --> 00:09:19,310
would fall somewhere<font color="#E5E5E5"> in between those</font>

218
00:09:14,960 --> 00:09:21,980
four<font color="#CCCCCC"> examples and on the x-axis you see</font>

219
00:09:19,310 --> 00:09:26,660
those<font color="#E5E5E5"> 164 patches that we're testing</font><font color="#CCCCCC"> for</font>

220
00:09:21,980 --> 00:09:29,180
from 2017<font color="#E5E5E5"> plus some more from 2016 so</font>

221
00:09:26,660 --> 00:09:31,760
let's start with<font color="#E5E5E5"> the Google phone</font><font color="#CCCCCC"> it</font>

222
00:09:29,180 --> 00:09:34,630
includes all patches<font color="#E5E5E5"> from last year no</font>

223
00:09:31,760 --> 00:09:37,910
<font color="#CCCCCC">exceptions and that's by definition</font>

224
00:09:34,630 --> 00:09:41,779
<font color="#E5E5E5">because this phone runs a very recent</font>

225
00:09:37,910 --> 00:09:44,480
<font color="#CCCCCC">Android version 8.1</font><font color="#E5E5E5"> and that by default</font>

226
00:09:41,779 --> 00:09:46,760
includes all previous patches<font color="#E5E5E5"> like in</font>

227
00:09:44,480 --> 00:09:48,320
Windows<font color="#CCCCCC"> the service packs</font><font color="#E5E5E5"> they include</font>

228
00:09:46,760 --> 00:09:50,930
<font color="#E5E5E5">all patches that were issued before the</font>

229
00:09:48,320 --> 00:09:53,930
service pack so if you move to a recent

230
00:09:50,930 --> 00:09:55,430
<font color="#E5E5E5">Android version that means you don't</font>

231
00:09:53,930 --> 00:09:58,880
<font color="#E5E5E5">have to worry about any patch</font><font color="#CCCCCC"> issues</font>

232
00:09:55,430 --> 00:10:00,439
before that<font color="#E5E5E5"> version right so Google</font>

233
00:09:58,880 --> 00:10:02,420
seems to<font color="#E5E5E5"> put a little bit more effort</font>

234
00:10:00,440 --> 00:10:04,490
into moving<font color="#E5E5E5"> their phones to new versions</font>

235
00:10:02,420 --> 00:10:06,349
<font color="#CCCCCC">they have</font><font color="#E5E5E5"> to of course</font><font color="#CCCCCC"> their phones are</font>

236
00:10:04,490 --> 00:10:07,640
kind of<font color="#E5E5E5"> a laboratory environment</font><font color="#CCCCCC"> showing</font>

237
00:10:06,350 --> 00:10:10,430
the rest<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> ecosystem that</font><font color="#E5E5E5"> is</font>

238
00:10:07,640 --> 00:10:12,170
possible<font color="#E5E5E5"> but</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> means that they have</font>

239
00:10:10,430 --> 00:10:16,430
to<font color="#CCCCCC"> spend less time on patching the</font>

240
00:10:12,170 --> 00:10:18,400
phones<font color="#E5E5E5"> right Android on on Samsung is</font>

241
00:10:16,430 --> 00:10:21,859
maintained in a somewhat different<font color="#E5E5E5"> way</font>

242
00:10:18,400 --> 00:10:23,839
<font color="#CCCCCC">many Samsung</font><font color="#E5E5E5"> phones</font><font color="#CCCCCC"> have not upgraded to</font>

243
00:10:21,860 --> 00:10:29,240
Android<font color="#CCCCCC"> 8 yet</font><font color="#E5E5E5"> so for instance here's a</font>

244
00:10:23,839 --> 00:10:32,209
<font color="#CCCCCC">Samsung j5</font><font color="#E5E5E5"> that has a lot of patches</font>

245
00:10:29,240 --> 00:10:34,820
installed from 2017<font color="#E5E5E5"> in fact as far as we</font>

246
00:10:32,209 --> 00:10:37,099
can tell<font color="#E5E5E5"> all the</font><font color="#CCCCCC"> patches up to November</font>

247
00:10:34,820 --> 00:10:41,089
<font color="#CCCCCC">we're individually installed on this</font>

248
00:10:37,100 --> 00:10:43,100
device<font color="#E5E5E5"> was one exception one patch from</font>

249
00:10:41,089 --> 00:10:45,440
<font color="#E5E5E5">September is missing and I</font><font color="#CCCCCC"> don't know</font>

250
00:10:43,100 --> 00:10:47,360
the<font color="#CCCCCC"> back story maybe didn't apply that</font>

251
00:10:45,440 --> 00:10:49,550
patch maybe something modified that part

252
00:10:47,360 --> 00:10:51,440
of Android<font color="#E5E5E5"> so much that now to have to</font>

253
00:10:49,550 --> 00:10:53,800
have<font color="#E5E5E5"> reverse engineer how to apply to</font>

254
00:10:51,440 --> 00:10:56,839
the<font color="#E5E5E5"> patch for some reason Android</font>

255
00:10:53,800 --> 00:10:58,069
<font color="#E5E5E5">Samsung didn't apply</font><font color="#CCCCCC"> this one patch</font><font color="#E5E5E5"> but</font>

256
00:10:56,839 --> 00:11:00,890
<font color="#CCCCCC">they're honest about it</font><font color="#E5E5E5"> they say the</font>

257
00:10:58,070 --> 00:11:02,990
patch level<font color="#E5E5E5"> is August so they say we</font>

258
00:11:00,890 --> 00:11:04,730
guaranteed that<font color="#E5E5E5"> the petrous until</font><font color="#CCCCCC"> August</font>

259
00:11:02,990 --> 00:11:06,620
installed<font color="#E5E5E5"> and because if there's one</font>

260
00:11:04,730 --> 00:11:10,220
<font color="#E5E5E5">missing patch in September we're not</font>

261
00:11:06,620 --> 00:11:13,520
<font color="#E5E5E5">increasing the patch level right but</font>

262
00:11:10,220 --> 00:11:16,970
<font color="#E5E5E5">that's very same company does not</font><font color="#CCCCCC"> always</font>

263
00:11:13,520 --> 00:11:20,120
<font color="#E5E5E5">make that that choice consciously</font><font color="#CCCCCC"> or</font>

264
00:11:16,970 --> 00:11:21,680
subconsciously I don't know so a related

265
00:11:20,120 --> 00:11:24,410
<font color="#E5E5E5">phone also</font><font color="#CCCCCC"> 20</font>

266
00:11:21,680 --> 00:11:27,290
<font color="#CCCCCC">the phone from</font><font color="#E5E5E5"> Samsung also</font><font color="#CCCCCC"> j-series</font>

267
00:11:24,410 --> 00:11:31,040
<font color="#CCCCCC">runs on</font><font color="#E5E5E5"> an even all the</font><font color="#CCCCCC"> android vintage</font>

268
00:11:27,290 --> 00:11:33,199
<font color="#E5E5E5">android 5 so</font><font color="#CCCCCC"> samsung has put years into</font>

269
00:11:31,040 --> 00:11:35,209
maintaining<font color="#E5E5E5"> patches on this phone rather</font>

270
00:11:33,200 --> 00:11:37,279
<font color="#E5E5E5">than just moving it through more</font><font color="#CCCCCC"> recent</font>

271
00:11:35,210 --> 00:11:41,300
<font color="#CCCCCC">android version</font><font color="#E5E5E5"> but that's their choice</font>

272
00:11:37,279 --> 00:11:43,820
<font color="#CCCCCC">I'm not judging but they are missing a</font>

273
00:11:41,300 --> 00:11:46,729
bunch of patches<font color="#E5E5E5"> so this phone claims to</font>

274
00:11:43,820 --> 00:11:49,160
be patched<font color="#E5E5E5"> January 2018</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> suggests</font>

275
00:11:46,730 --> 00:11:53,000
<font color="#E5E5E5">that all patches from last year would be</font>

276
00:11:49,160 --> 00:11:55,069
included but<font color="#E5E5E5"> they're not there's</font><font color="#CCCCCC"> 12</font><font color="#E5E5E5"> high</font>

277
00:11:53,000 --> 00:11:59,330
<font color="#E5E5E5">in critical patches</font><font color="#CCCCCC"> as far as we can</font>

278
00:11:55,070 --> 00:12:03,080
measure missing from this<font color="#E5E5E5"> phone and that</font>

279
00:11:59,330 --> 00:12:05,810
is the<font color="#E5E5E5"> Android patch gap and the Android</font>

280
00:12:03,080 --> 00:12:08,810
<font color="#E5E5E5">PAP gap is even larger</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> some other</font>

281
00:12:05,810 --> 00:12:09,920
phones<font color="#E5E5E5"> as an extreme example look at</font>

282
00:12:08,810 --> 00:12:12,020
this phone

283
00:12:09,920 --> 00:12:14,569
the dark green patches they're not

284
00:12:12,020 --> 00:12:16,699
necessary for<font color="#E5E5E5"> this phone and all the</font><font color="#CCCCCC"> red</font>

285
00:12:14,570 --> 00:12:19,310
ones<font color="#CCCCCC"> they're miss</font><font color="#E5E5E5"> so this phone claims</font>

286
00:12:16,700 --> 00:12:22,339
to have been patched in September but

287
00:12:19,310 --> 00:12:24,140
really hardly anything was installed in

288
00:12:22,339 --> 00:12:27,589
terms of patches for an entire year

289
00:12:24,140 --> 00:12:29,870
<font color="#E5E5E5">right so</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a case of a vendor that</font>

290
00:12:27,589 --> 00:12:31,640
<font color="#CCCCCC">I think just arbitrarily set this day to</font>

291
00:12:29,870 --> 00:12:34,400
<font color="#E5E5E5">whatever they thought their customers</font>

292
00:12:31,640 --> 00:12:36,500
expected remember how we as a community

293
00:12:34,400 --> 00:12:38,900
we pressured Android Venice into saying

294
00:12:36,500 --> 00:12:40,700
yes you'll get monthly patches or they

295
00:12:38,900 --> 00:12:44,779
give you man sleep patches<font color="#E5E5E5"> they changed</font>

296
00:12:40,700 --> 00:12:46,760
<font color="#E5E5E5">a version string every month so this is</font>

297
00:12:44,779 --> 00:12:48,140
from a manufacturer called<font color="#CCCCCC"> Vico</font><font color="#E5E5E5"> let's</font>

298
00:12:46,760 --> 00:12:50,029
remember that<font color="#E5E5E5"> name</font><font color="#CCCCCC"> doubt they'll come</font>

299
00:12:48,140 --> 00:12:53,720
<font color="#E5E5E5">back a little bit later in this</font>

300
00:12:50,029 --> 00:12:56,029
presentation<font color="#CCCCCC"> once again so these are the</font>

301
00:12:53,720 --> 00:12:58,839
results<font color="#CCCCCC"> but</font><font color="#E5E5E5"> let's now dive into how we</font>

302
00:12:56,029 --> 00:13:03,410
how we got these results<font color="#CCCCCC"> how do we do</font>

303
00:12:58,839 --> 00:13:05,930
<font color="#CCCCCC">android</font><font color="#E5E5E5"> patch analysis</font><font color="#CCCCCC"> i'll only</font><font color="#E5E5E5"> explain</font>

304
00:13:03,410 --> 00:13:08,449
this on<font color="#E5E5E5"> kind</font><font color="#CCCCCC"> of a simplistic</font><font color="#E5E5E5"> level and</font>

305
00:13:05,930 --> 00:13:09,670
then<font color="#CCCCCC"> jakob will dive into all the juicy</font>

306
00:13:08,450 --> 00:13:13,040
details

307
00:13:09,670 --> 00:13:16,189
so simply speaking<font color="#E5E5E5"> what we do is we take</font>

308
00:13:13,040 --> 00:13:19,550
the different Android source codes right

309
00:13:16,190 --> 00:13:22,040
from<font color="#E5E5E5"> Google from Qualcomm whoever we</font>

310
00:13:19,550 --> 00:13:23,510
take him<font color="#E5E5E5"> without</font><font color="#CCCCCC"> the patch</font><font color="#E5E5E5"> and then we</font>

311
00:13:22,040 --> 00:13:25,399
<font color="#CCCCCC">apply the patch so we have</font><font color="#E5E5E5"> these two</font>

312
00:13:23,510 --> 00:13:27,260
sets<font color="#E5E5E5"> of source codes and we compile</font>

313
00:13:25,399 --> 00:13:29,660
these two sets of source codes a bunch

314
00:13:27,260 --> 00:13:31,610
of times with different compilers<font color="#E5E5E5"> with</font>

315
00:13:29,660 --> 00:13:34,100
different compiler options<font color="#CCCCCC"> so we have</font>

316
00:13:31,610 --> 00:13:35,240
these two collections<font color="#E5E5E5"> of binaries one</font>

317
00:13:34,100 --> 00:13:37,790
without a patch

318
00:13:35,240 --> 00:13:39,950
one was the patch installed<font color="#E5E5E5"> and then</font>

319
00:13:37,790 --> 00:13:42,319
from all these binaries we strip out<font color="#E5E5E5"> the</font>

320
00:13:39,950 --> 00:13:43,910
function that<font color="#E5E5E5"> we're interested</font><font color="#CCCCCC"> in the</font>

321
00:13:42,320 --> 00:13:46,459
function that<font color="#E5E5E5"> was affected by the patch</font>

322
00:13:43,910 --> 00:13:48,890
<font color="#CCCCCC">and</font><font color="#E5E5E5"> then we go one</font><font color="#CCCCCC"> step further we look</font>

323
00:13:46,459 --> 00:13:52,209
<font color="#CCCCCC">at the function</font><font color="#E5E5E5"> we remove values that</font>

324
00:13:48,890 --> 00:13:55,100
have arbitrarily changed which each

325
00:13:52,209 --> 00:13:57,199
compilation for instance destination

326
00:13:55,100 --> 00:13:58,910
addresses in a call<font color="#E5E5E5"> right we strip out</font>

327
00:13:57,200 --> 00:14:01,480
those<font color="#E5E5E5"> values just overwrite them with</font>

328
00:13:58,910 --> 00:14:04,459
<font color="#E5E5E5">zeros so we have those two sets of</font>

329
00:14:01,480 --> 00:14:06,050
binaries or functions now with those

330
00:14:04,459 --> 00:14:08,959
values<font color="#E5E5E5"> zeroed out we call them</font>

331
00:14:06,050 --> 00:14:10,640
signatures<font color="#E5E5E5"> right so that's a preparation</font>

332
00:14:08,959 --> 00:14:15,140
step creating<font color="#E5E5E5"> these two sets of</font>

333
00:14:10,640 --> 00:14:16,910
thousands of of signatures<font color="#E5E5E5"> and then when</font>

334
00:14:15,140 --> 00:14:18,709
we<font color="#E5E5E5"> actually want</font><font color="#CCCCCC"> to test one phone or</font>

335
00:14:16,910 --> 00:14:23,029
one<font color="#E5E5E5"> firmware we take the binary that's</font>

336
00:14:18,709 --> 00:14:26,660
inside that<font color="#E5E5E5"> firmware and again we take</font>

337
00:14:23,029 --> 00:14:29,360
<font color="#E5E5E5">the function we strip out those</font><font color="#CCCCCC"> those</font>

338
00:14:26,660 --> 00:14:32,209
volatile values and we just compare<font color="#CCCCCC"> it</font>

339
00:14:29,360 --> 00:14:33,950
to our<font color="#E5E5E5"> collection</font><font color="#CCCCCC"> and Issac matches one</font>

340
00:14:32,209 --> 00:14:36,319
of<font color="#E5E5E5"> our samples that has the patch</font>

341
00:14:33,950 --> 00:14:38,750
installed<font color="#E5E5E5"> or it matches an example that</font>

342
00:14:36,320 --> 00:14:41,360
<font color="#CCCCCC">doesn't have to patch installed so just</font>

343
00:14:38,750 --> 00:14:43,820
kind of by by brute force<font color="#CCCCCC"> we find an</font>

344
00:14:41,360 --> 00:14:46,850
exact match<font color="#CCCCCC"> of that function and</font><font color="#E5E5E5"> we know</font>

345
00:14:43,820 --> 00:14:49,880
<font color="#CCCCCC">whether or not</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> pet replace right so</font>

346
00:14:46,850 --> 00:14:51,800
in theory<font color="#E5E5E5"> that sounds pretty simple but</font>

347
00:14:49,880 --> 00:14:53,420
<font color="#CCCCCC">when applying this to hundreds of</font>

348
00:14:51,800 --> 00:14:54,920
patches and thousands<font color="#E5E5E5"> of phones of</font>

349
00:14:53,420 --> 00:14:57,649
<font color="#CCCCCC">course things get a little</font><font color="#E5E5E5"> bit more</font>

350
00:14:54,920 --> 00:14:59,959
complicated and<font color="#CCCCCC"> Jakob will walk you</font>

351
00:14:57,649 --> 00:15:01,390
through<font color="#CCCCCC"> those engineering questions</font>

352
00:14:59,959 --> 00:15:04,130
personally I thought some<font color="#CCCCCC"> of these</font>

353
00:15:01,390 --> 00:15:05,779
engineering solutions that we found were

354
00:15:04,130 --> 00:15:08,510
among the most<font color="#CCCCCC"> interesting part</font><font color="#E5E5E5"> of this</font>

355
00:15:05,779 --> 00:15:10,399
<font color="#E5E5E5">research and I think they would also</font>

356
00:15:08,510 --> 00:15:13,399
apply<font color="#E5E5E5"> to a bunch of other</font><font color="#CCCCCC"> problems that</font>

357
00:15:10,399 --> 00:15:18,230
you<font color="#CCCCCC"> may have in terms of software scale</font>

358
00:15:13,399 --> 00:15:20,270
but judge for yourself so<font color="#E5E5E5"> before I go</font>

359
00:15:18,230 --> 00:15:22,399
into<font color="#CCCCCC"> the</font><font color="#E5E5E5"> details of doing the Tetra</font>

360
00:15:20,270 --> 00:15:25,459
analysis<font color="#E5E5E5"> average quickly summarize the</font>

361
00:15:22,399 --> 00:15:27,470
<font color="#CCCCCC">process from source code in the Android</font>

362
00:15:25,459 --> 00:15:29,390
source code<font color="#E5E5E5"> tree to read binary file</font>

363
00:15:27,470 --> 00:15:31,279
defined on the device<font color="#E5E5E5"> so the first step</font>

364
00:15:29,390 --> 00:15:34,069
is compiling it so the compiler<font color="#CCCCCC"> leads in</font>

365
00:15:31,279 --> 00:15:36,140
the source code<font color="#CCCCCC"> we process</font><font color="#E5E5E5"> it takes or</font>

366
00:15:34,070 --> 00:15:37,579
the included<font color="#CCCCCC"> fires which may be</font>

367
00:15:36,140 --> 00:15:40,100
somewhere completely different<font color="#CCCCCC"> in</font><font color="#E5E5E5"> our</font>

368
00:15:37,579 --> 00:15:42,589
source code via<font color="#E5E5E5"> the places they</font><font color="#CCCCCC"> proposal</font>

369
00:15:40,100 --> 00:15:45,740
server address and<font color="#E5E5E5"> then</font><font color="#CCCCCC"> compiles it</font><font color="#E5E5E5"> to a</font>

370
00:15:42,589 --> 00:15:47,990
binary code<font color="#E5E5E5"> in the object file but in</font>

371
00:15:45,740 --> 00:15:49,190
the<font color="#E5E5E5"> binary code we do not yet</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the</font>

372
00:15:47,990 --> 00:15:52,790
<font color="#CCCCCC">destination</font>

373
00:15:49,190 --> 00:15:54,710
for infractions back here<font color="#E5E5E5"> and then the</font>

374
00:15:52,790 --> 00:15:56,599
linker takes a number<font color="#CCCCCC"> of these object</font>

375
00:15:54,710 --> 00:15:59,270
files from different<font color="#CCCCCC"> source code files</font>

376
00:15:56,600 --> 00:16:02,270
and combines everything together<font color="#E5E5E5"> into</font>

377
00:15:59,270 --> 00:16:05,150
one single<font color="#E5E5E5"> executable file larger</font><font color="#CCCCCC"> object</font>

378
00:16:02,270 --> 00:16:07,520
fire and<font color="#CCCCCC"> fit</font><font color="#E5E5E5"> interferes in the missing</font>

379
00:16:05,150 --> 00:16:10,850
parts<font color="#CCCCCC"> worth for</font><font color="#E5E5E5"> example a destination at</font>

380
00:16:07,520 --> 00:16:13,189
this year so let's take a quick<font color="#CCCCCC"> look at</font>

381
00:16:10,850 --> 00:16:15,080
one one of his object files<font color="#CCCCCC"> he has a</font>

382
00:16:13,190 --> 00:16:17,690
disassembly listing here<font color="#E5E5E5"> foreign typical</font>

383
00:16:15,080 --> 00:16:20,720
function from<font color="#E5E5E5"> an Android system and here</font>

384
00:16:17,690 --> 00:16:23,240
we see the occurrence<font color="#E5E5E5"> action and here we</font>

385
00:16:20,720 --> 00:16:25,460
see<font color="#E5E5E5"> forget a patient entry so this tells</font>

386
00:16:23,240 --> 00:16:27,740
<font color="#CCCCCC">within</font><font color="#E5E5E5"> covered in this instruction the</font>

387
00:16:25,460 --> 00:16:30,920
last 26<font color="#E5E5E5"> bits needs to be replaced for a</font>

388
00:16:27,740 --> 00:16:33,320
<font color="#E5E5E5">destination address</font><font color="#CCCCCC"> and so we can</font><font color="#E5E5E5"> record</font>

389
00:16:30,920 --> 00:16:35,030
<font color="#CCCCCC">for address position</font><font color="#E5E5E5"> in our</font><font color="#CCCCCC"> function we</font>

390
00:16:33,320 --> 00:16:36,940
have this type<font color="#CCCCCC"> of medication</font><font color="#E5E5E5"> and three</font>

391
00:16:35,030 --> 00:16:40,400
<font color="#E5E5E5">entries bits needs to be slipped out and</font>

392
00:16:36,940 --> 00:16:42,710
then<font color="#CCCCCC"> he</font><font color="#E5E5E5"> up the other after its</font><font color="#CCCCCC"> drawer</font>

393
00:16:40,400 --> 00:16:46,280
<font color="#CCCCCC">within for our</font><font color="#E5E5E5"> function and</font><font color="#CCCCCC"> firming</font>

394
00:16:42,710 --> 00:16:49,460
source code after slipping out where the

395
00:16:46,280 --> 00:16:51,800
bits changed by the<font color="#CCCCCC"> linker and we can</font>

396
00:16:49,460 --> 00:16:54,830
hash<font color="#CCCCCC"> filament</font><font color="#E5E5E5"> source code and vendetta</font>

397
00:16:51,800 --> 00:16:59,599
on<font color="#E5E5E5"> compare</font><font color="#CCCCCC"> the search</font><font color="#E5E5E5"> for record from</font>

398
00:16:54,830 --> 00:17:02,240
our device so things<font color="#E5E5E5"> look pretty simple</font>

399
00:16:59,600 --> 00:17:03,860
in theory apart and put<font color="#E5E5E5"> practices gets a</font>

400
00:17:02,240 --> 00:17:05,630
little<font color="#E5E5E5"> bit more complicated we</font><font color="#CCCCCC"> have to</font>

401
00:17:03,860 --> 00:17:08,599
deal with<font color="#E5E5E5"> a</font><font color="#CCCCCC"> larger</font><font color="#E5E5E5"> amount of source code</font>

402
00:17:05,630 --> 00:17:10,819
and the after<font color="#CCCCCC"> deal with many different</font>

403
00:17:08,599 --> 00:17:13,219
<font color="#E5E5E5">compiler versions and</font><font color="#CCCCCC"> other compiler</font>

404
00:17:10,819 --> 00:17:16,310
options like CPU type or optimization

405
00:17:13,220 --> 00:17:17,360
<font color="#E5E5E5">driver and last but not least evil has</font>

406
00:17:16,310 --> 00:17:20,448
to find<font color="#CCCCCC"> psycho</font>

407
00:17:17,359 --> 00:17:23,510
code<font color="#E5E5E5"> and or device so let's</font><font color="#CCCCCC"> see how</font>

408
00:17:20,449 --> 00:17:25,100
Android source code is organized if you

409
00:17:23,510 --> 00:17:25,760
have<font color="#E5E5E5"> on</font><font color="#CCCCCC"> to download Android source code</font>

410
00:17:25,099 --> 00:17:27,980
<font color="#CCCCCC">three</font>

411
00:17:25,760 --> 00:17:30,290
you ever have<font color="#E5E5E5"> to use</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> April utility</font>

412
00:17:27,980 --> 00:17:32,450
<font color="#E5E5E5">papers basically are</font><font color="#CCCCCC"> the positive</font>

413
00:17:30,290 --> 00:17:35,090
repositories<font color="#E5E5E5"> so he has a master</font>

414
00:17:32,450 --> 00:17:37,970
repository which contains<font color="#E5E5E5"> only a phone</font>

415
00:17:35,090 --> 00:17:40,159
manifest file<font color="#E5E5E5"> on</font><font color="#CCCCCC"> its main file listing</font>

416
00:17:37,970 --> 00:17:42,770
or a git<font color="#E5E5E5"> repositories needed for his</font>

417
00:17:40,160 --> 00:17:45,530
<font color="#E5E5E5">Android third and it's that provision</font>

418
00:17:42,770 --> 00:17:48,770
and<font color="#E5E5E5"> whiskey repository and</font><font color="#CCCCCC"> we have about</font>

419
00:17:45,530 --> 00:17:50,600
500 suppositories<font color="#CCCCCC"> in total and if you</font>

420
00:17:48,770 --> 00:17:53,240
download<font color="#CCCCCC"> everything you will end</font><font color="#E5E5E5"> up</font>

421
00:17:50,600 --> 00:17:55,428
<font color="#E5E5E5">having about 50 gigabytes of source code</font>

422
00:17:53,240 --> 00:17:57,619
for one source code<font color="#CCCCCC"> tree</font>

423
00:17:55,429 --> 00:17:59,059
for our analysis we need many different

424
00:17:57,619 --> 00:18:01,759
Android<font color="#E5E5E5"> versions many different source</font>

425
00:17:59,059 --> 00:18:04,908
code is so as a user<font color="#E5E5E5"> you may know that</font>

426
00:18:01,759 --> 00:18:06,529
<font color="#CCCCCC">your phone is</font><font color="#E5E5E5"> running Android 7.1.2 but</font>

427
00:18:04,909 --> 00:18:08,299
even<font color="#E5E5E5"> within this versions there are many</font>

428
00:18:06,529 --> 00:18:11,509
different<font color="#E5E5E5"> revisions with a different set</font>

429
00:18:08,299 --> 00:18:12,889
of patches applied and<font color="#E5E5E5"> so the end up</font>

430
00:18:11,509 --> 00:18:15,129
<font color="#E5E5E5">with a couple</font><font color="#CCCCCC"> of hundred different</font>

431
00:18:12,889 --> 00:18:17,418
<font color="#E5E5E5">Android versions</font><font color="#CCCCCC"> around</font><font color="#E5E5E5"> from Google and</font>

432
00:18:15,129 --> 00:18:19,639
additionally to<font color="#E5E5E5"> vet</font><font color="#CCCCCC"> via some device</font>

433
00:18:17,419 --> 00:18:22,429
specific source code<font color="#CCCCCC"> trees so for</font>

434
00:18:19,639 --> 00:18:24,559
<font color="#E5E5E5">example chrome releases many different</font>

435
00:18:22,429 --> 00:18:26,989
Android<font color="#E5E5E5"> versions for different chipsets</font>

436
00:18:24,559 --> 00:18:29,089
<font color="#E5E5E5">and different Android versions and patch</font>

437
00:18:26,989 --> 00:18:31,339
levels and so<font color="#E5E5E5"> on so in total we have</font>

438
00:18:29,089 --> 00:18:33,799
currently about<font color="#E5E5E5"> 1100 different source</font>

439
00:18:31,339 --> 00:18:35,658
code trees<font color="#E5E5E5"> and if you need 50 gigabytes</font>

440
00:18:33,799 --> 00:18:38,690
for<font color="#E5E5E5"> each of them we</font><font color="#CCCCCC"> will end up with</font>

441
00:18:35,659 --> 00:18:41,269
about 55 terabytes of storage and<font color="#E5E5E5"> as</font><font color="#CCCCCC"> all</font>

442
00:18:38,690 --> 00:18:44,629
lots of CPU<font color="#CCCCCC"> time and network Panzers to</font>

443
00:18:41,269 --> 00:18:46,609
check out everything<font color="#E5E5E5"> so yeah</font><font color="#CCCCCC"> you should</font>

444
00:18:44,629 --> 00:18:49,609
<font color="#CCCCCC">rather find a better way to deal with</font>

445
00:18:46,609 --> 00:18:51,139
<font color="#E5E5E5">that amount of source code but if you</font>

446
00:18:49,609 --> 00:18:53,359
take a look<font color="#E5E5E5"> at a couple of different</font>

447
00:18:51,139 --> 00:18:55,939
<font color="#CCCCCC">Android source code ways you will find</font>

448
00:18:53,359 --> 00:18:57,820
out<font color="#E5E5E5"> what they</font><font color="#CCCCCC"> all reference</font><font color="#E5E5E5"> the same</font>

449
00:18:55,940 --> 00:18:59,809
individual git repositories<font color="#CCCCCC"> but</font>

450
00:18:57,820 --> 00:19:02,899
<font color="#E5E5E5">different revisions within these get</font>

451
00:18:59,809 --> 00:19:04,779
repositories<font color="#CCCCCC"> but as many</font><font color="#E5E5E5"> of you are</font>

452
00:19:02,899 --> 00:19:06,968
probably using<font color="#CCCCCC"> git and you may remember</font>

453
00:19:04,779 --> 00:19:09,139
<font color="#CCCCCC">that when you clone a git repository</font>

454
00:19:06,969 --> 00:19:10,429
<font color="#CCCCCC">you're actually downloading</font><font color="#E5E5E5"> the full</font>

455
00:19:09,139 --> 00:19:12,379
version history so you're actually

456
00:19:10,429 --> 00:19:14,960
downloading or other versions from the

457
00:19:12,379 --> 00:19:16,339
script repository<font color="#E5E5E5"> so we only have to</font>

458
00:19:14,960 --> 00:19:18,889
download<font color="#E5E5E5"> each git repository</font><font color="#CCCCCC"> Vaughn</font>

459
00:19:16,339 --> 00:19:21,200
<font color="#CCCCCC">dinnertime</font><font color="#E5E5E5"> but in order to comply with</font>

460
00:19:18,889 --> 00:19:23,570
us<font color="#E5E5E5"> caught we still need to have access</font>

461
00:19:21,200 --> 00:19:25,489
<font color="#CCCCCC">to a full Android source code tree and</font>

462
00:19:23,570 --> 00:19:27,109
so we decided<font color="#E5E5E5"> to</font><font color="#CCCCCC"> implement our own file</font>

463
00:19:25,489 --> 00:19:31,639
system<font color="#CCCCCC"> first file system is implemented</font>

464
00:19:27,109 --> 00:19:34,339
<font color="#E5E5E5">in userspace based on fuels and and our</font>

465
00:19:31,639 --> 00:19:36,738
<font color="#E5E5E5">fuel file systems are</font><font color="#CCCCCC"> varied in women</font>

466
00:19:34,339 --> 00:19:38,539
<font color="#E5E5E5">the</font><font color="#CCCCCC"> first file and then check out</font><font color="#E5E5E5"> a file</font>

467
00:19:36,739 --> 00:19:41,509
from<font color="#E5E5E5"> the individual git repository</font>

468
00:19:38,539 --> 00:19:43,070
metadata on demand only<font color="#E5E5E5"> so</font><font color="#CCCCCC"> only when we</font>

469
00:19:41,509 --> 00:19:44,690
try<font color="#E5E5E5"> to</font><font color="#CCCCCC"> read the file it was will</font>

470
00:19:43,070 --> 00:19:47,899
actually be expected from our gift

471
00:19:44,690 --> 00:19:50,839
repositories and first video storage

472
00:19:47,899 --> 00:19:51,320
requirement by<font color="#E5E5E5"> more than 99% and as is</font>

473
00:19:50,839 --> 00:19:54,279
ageless

474
00:19:51,320 --> 00:19:56,658
lots of CPU<font color="#CCCCCC"> time and</font><font color="#E5E5E5"> network Ventris</font>

475
00:19:54,279 --> 00:19:58,489
<font color="#E5E5E5">yeah I thought this was one of these</font>

476
00:19:56,659 --> 00:20:00,469
engineering solutions that would

477
00:19:58,489 --> 00:20:02,119
probably<font color="#E5E5E5"> apply</font><font color="#CCCCCC"> to a lot of other</font>

478
00:20:00,469 --> 00:20:03,979
problems<font color="#E5E5E5"> as</font><font color="#CCCCCC"> well whenever</font><font color="#E5E5E5"> you have very</font>

479
00:20:02,119 --> 00:20:05,809
redundant data for<font color="#CCCCCC"> instance from a bunch</font>

480
00:20:03,979 --> 00:20:08,869
of different<font color="#CCCCCC"> gates start in one file</font>

481
00:20:05,809 --> 00:20:09,200
system showing<font color="#E5E5E5"> it in a file system</font><font color="#CCCCCC"> that</font>

482
00:20:08,869 --> 00:20:11,990
is a

483
00:20:09,200 --> 00:20:14,510
we're of that<font color="#E5E5E5"> redundancy and and helps</font>

484
00:20:11,990 --> 00:20:16,669
you remove it can save you a<font color="#CCCCCC"> lot of time</font>

485
00:20:14,510 --> 00:20:20,990
storage and bandwidth<font color="#E5E5E5"> not just around</font>

486
00:20:16,669 --> 00:20:23,110
<font color="#E5E5E5">Android patch level analysis so know</font>

487
00:20:20,990 --> 00:20:25,399
that they're able<font color="#CCCCCC"> to</font><font color="#E5E5E5"> handle all</font><font color="#CCCCCC"> this</font>

488
00:20:23,110 --> 00:20:28,340
harvest data or<font color="#CCCCCC"> the different angle to a</font>

489
00:20:25,399 --> 00:20:30,379
scott leius<font color="#E5E5E5"> we can actually try to</font>

490
00:20:28,340 --> 00:20:31,908
compile it<font color="#E5E5E5"> we don't want to compile</font>

491
00:20:30,380 --> 00:20:33,409
<font color="#E5E5E5">everything in our and what systems</font>

492
00:20:31,909 --> 00:20:35,840
because this would take a couple<font color="#CCCCCC"> of</font>

493
00:20:33,409 --> 00:20:37,370
<font color="#E5E5E5">hours</font><font color="#CCCCCC"> for each</font><font color="#E5E5E5"> source code</font><font color="#CCCCCC"> area</font><font color="#E5E5E5"> so we</font>

494
00:20:35,840 --> 00:20:39,439
trust under<font color="#E5E5E5"> their</font><font color="#CCCCCC"> system</font><font color="#E5E5E5"> in fire run</font>

495
00:20:37,370 --> 00:20:41,139
mode<font color="#CCCCCC"> and</font><font color="#E5E5E5"> I caught the comments</font><font color="#CCCCCC"> widget</font>

496
00:20:39,440 --> 00:20:44,240
vote to come<font color="#E5E5E5"> used to compile everything</font>

497
00:20:41,139 --> 00:20:45,350
so we then take these<font color="#CCCCCC"> comments but</font><font color="#E5E5E5"> only</font>

498
00:20:44,240 --> 00:20:48,380
for the source code files we are

499
00:20:45,350 --> 00:20:51,080
interested in and when<font color="#E5E5E5"> we compile it</font>

500
00:20:48,380 --> 00:20:52,549
<font color="#E5E5E5">there's a couple of different compilers</font>

501
00:20:51,080 --> 00:20:55,220
with more<font color="#CCCCCC"> than 50 different</font><font color="#E5E5E5"> compiler</font>

502
00:20:52,549 --> 00:20:56,960
versions and for each<font color="#CCCCCC"> of these compilers</font>

503
00:20:55,220 --> 00:20:59,299
we have different optimization drivers

504
00:20:56,960 --> 00:21:01,039
and<font color="#E5E5E5"> video types so we</font><font color="#CCCCCC"> have a couple</font><font color="#E5E5E5"> of</font>

505
00:20:59,299 --> 00:21:03,379
thousand<font color="#CCCCCC"> different</font><font color="#E5E5E5"> ions to</font><font color="#CCCCCC"> compare it</font>

506
00:21:01,039 --> 00:21:07,129
<font color="#E5E5E5">with</font><font color="#CCCCCC"> but we</font><font color="#E5E5E5"> all have to see how</font><font color="#CCCCCC"> many of</font>

507
00:21:03,380 --> 00:21:08,659
these<font color="#CCCCCC"> are actually required so so for</font>

508
00:21:07,130 --> 00:21:11,929
that we have<font color="#CCCCCC"> a collection</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> thunder</font>

509
00:21:08,659 --> 00:21:14,960
image files<font color="#E5E5E5"> or nazarova</font><font color="#CCCCCC"> and you can</font>

510
00:21:11,929 --> 00:21:17,179
quickly<font color="#E5E5E5"> find out which of these</font><font color="#CCCCCC"> compiled</font>

511
00:21:14,960 --> 00:21:18,889
of ions are<font color="#CCCCCC"> actually required</font><font color="#E5E5E5"> to me say</font>

512
00:21:17,179 --> 00:21:21,380
it's the signatures which match on<font color="#CCCCCC"> our</font>

513
00:21:18,889 --> 00:21:24,469
collection of a mattress<font color="#E5E5E5"> and as it</font>

514
00:21:21,380 --> 00:21:26,990
turned<font color="#E5E5E5"> out only 74 different comparative</font>

515
00:21:24,470 --> 00:21:30,440
ions are<font color="#CCCCCC"> actually required from a couple</font>

516
00:21:26,990 --> 00:21:32,120
<font color="#E5E5E5">of thousand</font><font color="#CCCCCC"> three</font><font color="#E5E5E5"> after</font><font color="#CCCCCC"> I'd yeah and and</font>

517
00:21:30,440 --> 00:21:34,460
note<font color="#CCCCCC"> that this slide of</font><font color="#E5E5E5"> course includes</font>

518
00:21:32,120 --> 00:21:38,418
the<font color="#E5E5E5"> most successful compiler ever used</font>

519
00:21:34,460 --> 00:21:40,130
right this compiler<font color="#E5E5E5"> is used for the</font>

520
00:21:38,419 --> 00:21:43,159
<font color="#CCCCCC">firmware</font><font color="#E5E5E5"> of more than a billion devices</font>

521
00:21:40,130 --> 00:21:46,909
<font color="#E5E5E5">easily and it's a pre-release version</font>

522
00:21:43,159 --> 00:21:48,950
right how successful for pre-release<font color="#E5E5E5"> so</font>

523
00:21:46,909 --> 00:21:50,570
up to this point<font color="#E5E5E5"> I guess we now</font>

524
00:21:48,950 --> 00:21:53,600
understand<font color="#E5E5E5"> how we can</font><font color="#CCCCCC"> compute these two</font>

525
00:21:50,570 --> 00:21:55,428
<font color="#E5E5E5">sets of</font><font color="#CCCCCC"> of binary signatures right</font><font color="#E5E5E5"> the</font>

526
00:21:53,600 --> 00:21:58,760
ones<font color="#E5E5E5"> without the patch the</font><font color="#CCCCCC"> other one</font>

527
00:21:55,429 --> 00:22:02,630
with<font color="#E5E5E5"> the patch running</font><font color="#CCCCCC"> 1200</font><font color="#E5E5E5"> different</font>

528
00:21:58,760 --> 00:22:05,990
source code trees<font color="#E5E5E5"> through 74 different</font>

529
00:22:02,630 --> 00:22:07,480
compiler versions and so<font color="#E5E5E5"> yeah what are</font>

530
00:22:05,990 --> 00:22:10,779
we going to do with<font color="#E5E5E5"> this collection now</font>

531
00:22:07,480 --> 00:22:14,269
so once we have our collection of

532
00:22:10,779 --> 00:22:16,460
signatures<font color="#CCCCCC"> we can</font><font color="#E5E5E5"> actually ask actually</font>

533
00:22:14,269 --> 00:22:17,580
that verify the patch level<font color="#E5E5E5"> of our</font>

534
00:22:16,460 --> 00:22:19,470
device

535
00:22:17,580 --> 00:22:21,689
and in many<font color="#E5E5E5"> cases</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> is relatively</font>

536
00:22:19,470 --> 00:22:23,760
simply because the file we<font color="#CCCCCC"> are testing</font>

537
00:22:21,690 --> 00:22:25,680
has a similar timer<font color="#E5E5E5"> and the function we</font>

538
00:22:23,760 --> 00:22:28,170
are<font color="#E5E5E5"> looking for is actually an assembler</font>

539
00:22:25,680 --> 00:22:30,060
table<font color="#E5E5E5"> so the</font><font color="#CCCCCC"> Nova recorders we can</font>

540
00:22:28,170 --> 00:22:32,310
extract<font color="#E5E5E5"> the code from the</font><font color="#CCCCCC"> binary file on</font>

541
00:22:30,060 --> 00:22:35,399
a device and<font color="#CCCCCC"> cs4 one of our signature</font>

542
00:22:32,310 --> 00:22:38,129
<font color="#E5E5E5">matches but in other cases things are a</font>

543
00:22:35,400 --> 00:22:39,930
little bit<font color="#E5E5E5"> more complicated</font><font color="#CCCCCC"> so in some</font>

544
00:22:38,130 --> 00:22:41,820
<font color="#E5E5E5">cases we don't have a</font><font color="#CCCCCC"> sample table where</font>

545
00:22:39,930 --> 00:22:43,590
we do<font color="#CCCCCC"> have a symbol table but the</font>

546
00:22:41,820 --> 00:22:45,950
function we are interested in<font color="#CCCCCC"> is not an</font>

547
00:22:43,590 --> 00:22:49,800
assembler table<font color="#E5E5E5"> so we have to find our</font>

548
00:22:45,950 --> 00:22:51,870
function in<font color="#CCCCCC"> the urban area</font><font color="#E5E5E5"> and this is a</font>

549
00:22:49,800 --> 00:22:53,460
computation of the<font color="#CCCCCC"> hard</font><font color="#E5E5E5"> problem we can't</font>

550
00:22:51,870 --> 00:22:55,679
really compare each signature<font color="#CCCCCC"> to each</font>

551
00:22:53,460 --> 00:22:59,700
<font color="#E5E5E5">position in the file so we have to find</font>

552
00:22:55,680 --> 00:23:01,140
a better<font color="#E5E5E5"> way and unfortunately a similar</font>

553
00:22:59,700 --> 00:23:03,390
problem has already been solved in a

554
00:23:01,140 --> 00:23:05,850
completely different context for<font color="#CCCCCC"> a file</font>

555
00:23:03,390 --> 00:23:08,220
synchronization by vales<font color="#E5E5E5"> and utility and</font>

556
00:23:05,850 --> 00:23:10,560
<font color="#E5E5E5">fair implemented a rolling checksum</font>

557
00:23:08,220 --> 00:23:12,800
algorithm<font color="#E5E5E5"> so you can easily slide or</font>

558
00:23:10,560 --> 00:23:15,240
check<font color="#E5E5E5"> some vendor or a panelist IRA and</font>

559
00:23:12,800 --> 00:23:18,210
calculate the next<font color="#E5E5E5"> Jackson with very</font>

560
00:23:15,240 --> 00:23:20,760
little effort<font color="#CCCCCC"> but unfortunately we can't</font>

561
00:23:18,210 --> 00:23:23,520
directly<font color="#E5E5E5"> use either of them because</font><font color="#CCCCCC"> it</font>

562
00:23:20,760 --> 00:23:25,530
<font color="#E5E5E5">will only find exact matches but as we</font>

563
00:23:23,520 --> 00:23:27,930
have seen before<font color="#E5E5E5"> other</font><font color="#CCCCCC"> azzam</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> lot</font>

564
00:23:25,530 --> 00:23:29,820
of<font color="#CCCCCC"> us</font><font color="#E5E5E5"> in our functions which we can't</font>

565
00:23:27,930 --> 00:23:34,170
can't compare because<font color="#E5E5E5"> the changes on</font>

566
00:23:29,820 --> 00:23:35,760
every device<font color="#E5E5E5"> and and as orange at some</font>

567
00:23:34,170 --> 00:23:38,340
other<font color="#E5E5E5"> limb is only efficient if he has</font>

568
00:23:35,760 --> 00:23:41,879
one window size or maybe<font color="#E5E5E5"> a very smart</font>

569
00:23:38,340 --> 00:23:44,010
<font color="#E5E5E5">small number of window sizes and so for</font>

570
00:23:41,880 --> 00:23:46,560
<font color="#E5E5E5">the first problem we just take a look at</font>

571
00:23:44,010 --> 00:23:48,330
for instruction of<font color="#CCCCCC"> course</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> we guess</font>

572
00:23:46,560 --> 00:23:50,879
whether<font color="#CCCCCC"> it could</font><font color="#E5E5E5"> be</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> location and we</font>

573
00:23:48,330 --> 00:23:52,860
<font color="#E5E5E5">based on the instructional court so in</font>

574
00:23:50,880 --> 00:23:54,720
that case we see a coil instructions all

575
00:23:52,860 --> 00:23:58,280
the<font color="#CCCCCC"> guess was</font><font color="#E5E5E5"> probably</font><font color="#CCCCCC"> our education and</font>

576
00:23:54,720 --> 00:24:01,140
<font color="#E5E5E5">here and here zero out</font><font color="#CCCCCC"> for</font><font color="#E5E5E5"> arguments and</font>

577
00:23:58,280 --> 00:24:03,389
then we are no they are not using one

578
00:24:01,140 --> 00:24:06,030
checks and<font color="#E5E5E5"> then overreached</font><font color="#CCCCCC"> Spinoza for</font>

579
00:24:03,390 --> 00:24:08,880
each signature<font color="#E5E5E5"> instead via using</font><font color="#CCCCCC"> vinify</font>

580
00:24:06,030 --> 00:24:11,370
<font color="#E5E5E5">so as a power of two only and we are</font>

581
00:24:08,880 --> 00:24:13,890
using<font color="#E5E5E5"> two overlapping windows</font><font color="#CCCCCC"> ones at</font>

582
00:24:11,370 --> 00:24:15,510
the start of our function here and one

583
00:24:13,890 --> 00:24:18,270
winner at the<font color="#E5E5E5"> end of our function here</font>

584
00:24:15,510 --> 00:24:20,310
<font color="#E5E5E5">and if</font><font color="#CCCCCC"> Bhavana</font><font color="#E5E5E5"> mattress</font><font color="#CCCCCC"> and only if both</font>

585
00:24:18,270 --> 00:24:22,190
<font color="#CCCCCC">were no matches with our distance they</font>

586
00:24:20,310 --> 00:24:23,790
have an<font color="#E5E5E5"> actual match and</font><font color="#CCCCCC"> then we can</font>

587
00:24:22,190 --> 00:24:26,280
compete and

588
00:24:23,790 --> 00:24:28,470
<font color="#CCCCCC">Attlee use the safe location and</font><font color="#E5E5E5"> read</font>

589
00:24:26,280 --> 00:24:30,300
from<font color="#E5E5E5"> our signature and</font><font color="#CCCCCC"> confirm</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> the</font>

590
00:24:28,470 --> 00:24:31,260
mattress correct<font color="#CCCCCC"> there may be some false</font>

591
00:24:30,300 --> 00:24:33,360
positives<font color="#E5E5E5"> and</font><font color="#CCCCCC"> as</font>

592
00:24:31,260 --> 00:24:35,760
education and<font color="#CCCCCC"> case so we have to do with</font>

593
00:24:33,360 --> 00:24:38,240
<font color="#E5E5E5">confirmation step yeah did this is</font>

594
00:24:35,760 --> 00:24:42,540
probably my favorite<font color="#CCCCCC"> of engineering heck</font>

595
00:24:38,240 --> 00:24:44,970
<font color="#E5E5E5">that we came up</font><font color="#CCCCCC"> with because it</font><font color="#E5E5E5"> solves a</font>

596
00:24:42,540 --> 00:24:47,700
pretty generic problem<font color="#CCCCCC"> usually when you</font>

597
00:24:44,970 --> 00:24:49,890
do any<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> signature matching the</font>

598
00:24:47,700 --> 00:24:52,350
<font color="#E5E5E5">number of matches that</font><font color="#CCCCCC"> you need to check</font>

599
00:24:49,890 --> 00:24:55,020
for scales<font color="#E5E5E5"> was a number of signature</font>

600
00:24:52,350 --> 00:24:56,909
sizes right<font color="#E5E5E5"> if you want to match small</font>

601
00:24:55,020 --> 00:24:59,040
and medium<font color="#E5E5E5"> and large things you have to</font>

602
00:24:56,910 --> 00:25:01,680
<font color="#E5E5E5">run</font><font color="#CCCCCC"> everything three times and it scales</font>

603
00:24:59,040 --> 00:25:05,490
in a number of of signature lengths that

604
00:25:01,680 --> 00:25:08,730
<font color="#E5E5E5">you have there was this solution it</font>

605
00:25:05,490 --> 00:25:13,190
doesn't<font color="#CCCCCC"> scale</font><font color="#E5E5E5"> in the number of off sizes</font>

606
00:25:08,730 --> 00:25:16,830
anymore instead<font color="#E5E5E5"> you only check two times</font>

607
00:25:13,190 --> 00:25:19,890
your<font color="#E5E5E5"> original number of matches</font><font color="#CCCCCC"> to gain</font>

608
00:25:16,830 --> 00:25:22,830
any number of signature lengths right so

609
00:25:19,890 --> 00:25:25,260
you gain an entire degree<font color="#CCCCCC"> of freedom in</font>

610
00:25:22,830 --> 00:25:28,169
signature matching by doubling<font color="#E5E5E5"> your</font>

611
00:25:25,260 --> 00:25:30,210
initial effort right I<font color="#E5E5E5"> think this was</font>

612
00:25:28,170 --> 00:25:34,830
pretty neat and you should try it if you

613
00:25:30,210 --> 00:25:36,690
<font color="#E5E5E5">do</font><font color="#CCCCCC"> things imagined so now that we have</font>

614
00:25:34,830 --> 00:25:39,870
<font color="#E5E5E5">solved our engineering trail interest</font>

615
00:25:36,690 --> 00:25:42,000
<font color="#E5E5E5">and we can put everything together so we</font>

616
00:25:39,870 --> 00:25:44,429
take our Android source code<font color="#CCCCCC"> trace</font><font color="#E5E5E5"> and</font>

617
00:25:42,000 --> 00:25:47,310
then<font color="#E5E5E5"> generate a</font><font color="#CCCCCC"> bedrock compiled over</font>

618
00:25:44,430 --> 00:25:48,990
<font color="#CCCCCC">fire</font><font color="#E5E5E5"> interested in with many different</font>

619
00:25:47,310 --> 00:25:51,450
compiler versions and compiler options

620
00:25:48,990 --> 00:25:54,990
<font color="#E5E5E5">and generate signatures based on that</font>

621
00:25:51,450 --> 00:25:57,960
and then we<font color="#E5E5E5"> can you</font><font color="#CCCCCC"> can find</font><font color="#E5E5E5"> our code in</font>

622
00:25:54,990 --> 00:26:00,180
refineries<font color="#E5E5E5"> the</font><font color="#CCCCCC"> at testing and find out</font>

623
00:25:57,960 --> 00:26:02,250
<font color="#E5E5E5">whether signature matches or not and if</font>

624
00:26:00,180 --> 00:26:04,440
<font color="#E5E5E5">you have a signature match we can look</font>

625
00:26:02,250 --> 00:26:06,300
up<font color="#CCCCCC"> whether</font><font color="#E5E5E5"> the source code used for</font>

626
00:26:04,440 --> 00:26:08,460
<font color="#E5E5E5">generating the signature is patched or</font>

627
00:26:06,300 --> 00:26:10,680
not and if<font color="#E5E5E5"> it is patched we know that</font>

628
00:26:08,460 --> 00:26:15,540
our device is patched as well and<font color="#E5E5E5"> vice</font>

629
00:26:10,680 --> 00:26:17,910
versa no all<font color="#CCCCCC"> right</font><font color="#E5E5E5"> so that</font><font color="#CCCCCC"> that was the</font>

630
00:26:15,540 --> 00:26:22,680
engineering<font color="#CCCCCC"> journey to now be able to</font>

631
00:26:17,910 --> 00:26:25,410
apply these signature matches across<font color="#E5E5E5"> a</font>

632
00:26:22,680 --> 00:26:28,560
large number<font color="#E5E5E5"> of of different patches on</font>

633
00:26:25,410 --> 00:26:30,570
<font color="#CCCCCC">devices</font><font color="#E5E5E5"> and to do that at scale</font><font color="#CCCCCC"> that</font>

634
00:26:28,560 --> 00:26:33,480
means for<font color="#E5E5E5"> instance for us to run it on</font>

635
00:26:30,570 --> 00:26:35,460
<font color="#E5E5E5">the</font><font color="#CCCCCC"> device</font><font color="#E5E5E5"> itself right that was one of</font>

636
00:26:33,480 --> 00:26:39,180
the optimization criteria that we had

637
00:26:35,460 --> 00:26:42,990
<font color="#E5E5E5">and we did that for thousands of devices</font>

638
00:26:39,180 --> 00:26:45,150
<font color="#E5E5E5">to</font><font color="#CCCCCC"> reach these insights different</font>

639
00:26:42,990 --> 00:26:47,730
vendors have

640
00:26:45,150 --> 00:26:51,900
different quality levels<font color="#CCCCCC"> when it comes</font>

641
00:26:47,730 --> 00:26:55,140
to<font color="#CCCCCC"> patch completeness some</font><font color="#E5E5E5"> vendors are</font>

642
00:26:51,900 --> 00:26:57,420
very close to installing<font color="#E5E5E5"> all patches of</font>

643
00:26:55,140 --> 00:26:59,130
course<font color="#CCCCCC"> google is the reference</font><font color="#E5E5E5"> here</font>

644
00:26:57,420 --> 00:27:00,780
because they need<font color="#CCCCCC"> to show to</font><font color="#E5E5E5"> everybody</font>

645
00:26:59,130 --> 00:27:03,690
else in the ecosystem<font color="#CCCCCC"> that it's possible</font>

646
00:27:00,780 --> 00:27:07,170
<font color="#CCCCCC">to</font><font color="#E5E5E5"> install these patches so they are the</font>

647
00:27:03,690 --> 00:27:09,150
most complete<font color="#E5E5E5"> usually but then even</font>

648
00:27:07,170 --> 00:27:12,830
<font color="#E5E5E5">Samsung improved dramatically over the</font>

649
00:27:09,150 --> 00:27:16,650
last<font color="#E5E5E5"> year</font><font color="#CCCCCC"> so where we showed one example</font>

650
00:27:12,830 --> 00:27:19,590
<font color="#E5E5E5">on an earlier slide was</font><font color="#CCCCCC"> 12</font><font color="#E5E5E5"> patches</font>

651
00:27:16,650 --> 00:27:21,720
missing<font color="#E5E5E5"> that is rare</font><font color="#CCCCCC"> for Samsung in</font>

652
00:27:19,590 --> 00:27:24,959
recent months<font color="#E5E5E5"> we're only looking at data</font>

653
00:27:21,720 --> 00:27:28,410
since October here<font color="#CCCCCC"> and even our friend</font>

654
00:27:24,960 --> 00:27:30,690
<font color="#CCCCCC">Vic o made it into into this</font><font color="#E5E5E5"> top list</font><font color="#CCCCCC"> so</font>

655
00:27:28,410 --> 00:27:32,670
remember the<font color="#CCCCCC"> company that</font><font color="#E5E5E5"> that didn't</font>

656
00:27:30,690 --> 00:27:34,679
patch at all and kind<font color="#CCCCCC"> of arbitrarily set</font>

657
00:27:32,670 --> 00:27:37,559
<font color="#E5E5E5">this patch day they have come around and</font>

658
00:27:34,679 --> 00:27:39,630
in<font color="#E5E5E5"> recent versions do patch a lot more</font>

659
00:27:37,559 --> 00:27:42,510
they're following a little bit the

660
00:27:39,630 --> 00:27:44,160
<font color="#E5E5E5">Google</font><font color="#CCCCCC"> leads</font><font color="#E5E5E5"> in just moving to newer</font>

661
00:27:42,510 --> 00:27:45,870
Android versions more quickly<font color="#E5E5E5"> so you</font>

662
00:27:44,160 --> 00:27:48,120
don't<font color="#CCCCCC"> have to patch so much kind of</font><font color="#E5E5E5"> the</font>

663
00:27:45,870 --> 00:27:49,020
whole service<font color="#E5E5E5"> pack idea and I</font><font color="#CCCCCC"> think</font>

664
00:27:48,120 --> 00:27:52,080
that's that's<font color="#E5E5E5"> a good</font><font color="#CCCCCC"> idea</font>

665
00:27:49,020 --> 00:27:54,090
I think everybody needs<font color="#E5E5E5"> to install new</font>

666
00:27:52,080 --> 00:27:55,649
Android versions a lot faster<font color="#CCCCCC"> because it</font>

667
00:27:54,090 --> 00:27:57,840
gives you on top of<font color="#E5E5E5"> all the security</font>

668
00:27:55,650 --> 00:28:00,929
<font color="#CCCCCC">patches new security functionality</font>

669
00:27:57,840 --> 00:28:03,389
usually better randomization those kinds

670
00:28:00,929 --> 00:28:05,130
<font color="#E5E5E5">of things right</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> you have some</font><font color="#CCCCCC"> other</font>

671
00:28:03,390 --> 00:28:08,130
vendors on<font color="#CCCCCC"> the other end of the scale</font>

672
00:28:05,130 --> 00:28:11,720
<font color="#E5E5E5">that do like quite a number of patches</font>

673
00:28:08,130 --> 00:28:15,750
<font color="#E5E5E5">on average and for certain devices</font>

674
00:28:11,720 --> 00:28:18,120
<font color="#E5E5E5">dozens of them right however not every</font>

675
00:28:15,750 --> 00:28:20,910
missing patch is due to the vendor

676
00:28:18,120 --> 00:28:23,250
forgetting to do something often<font color="#CCCCCC"> those</font>

677
00:28:20,910 --> 00:28:26,700
problems start earlier in the patching

678
00:28:23,250 --> 00:28:29,010
chain at the<font color="#E5E5E5"> chipset vendor right you</font>

679
00:28:26,700 --> 00:28:32,790
can see one chipset vendor here that's

680
00:28:29,010 --> 00:28:34,470
used in in more economic devices and it

681
00:28:32,790 --> 00:28:36,090
would<font color="#E5E5E5"> appear that that that chipset</font>

682
00:28:34,470 --> 00:28:38,070
vendor already forgets to include some

683
00:28:36,090 --> 00:28:41,879
patches when issuing the source code to

684
00:28:38,070 --> 00:28:44,090
the<font color="#CCCCCC"> phone vendors and then most of their</font>

685
00:28:41,880 --> 00:28:47,010
<font color="#E5E5E5">customers would miss those patches</font><font color="#CCCCCC"> I</font>

686
00:28:44,090 --> 00:28:49,559
don't<font color="#CCCCCC"> think that</font><font color="#E5E5E5"> explains the gap</font>

687
00:28:47,010 --> 00:28:52,980
between<font color="#CCCCCC"> media tech and its competitors</font>

688
00:28:49,559 --> 00:28:55,830
<font color="#CCCCCC">completely I think this is the compound</font>

689
00:28:52,980 --> 00:28:58,380
of two factors one<font color="#CCCCCC"> is that media tag</font><font color="#E5E5E5"> may</font>

690
00:28:55,830 --> 00:28:59,070
forget<font color="#E5E5E5"> some patches but the other</font>

691
00:28:58,380 --> 00:29:00,539
<font color="#CCCCCC">compounding</font>

692
00:28:59,070 --> 00:29:02,700
factor is that<font color="#E5E5E5"> if you're</font><font color="#CCCCCC"> already making</font>

693
00:29:00,539 --> 00:29:04,080
economic<font color="#CCCCCC"> choices when it</font><font color="#E5E5E5"> comes to</font>

694
00:29:02,700 --> 00:29:06,450
chipset selection if you're already

695
00:29:04,080 --> 00:29:08,789
going<font color="#CCCCCC"> for a cheap option</font><font color="#E5E5E5"> there you may</font>

696
00:29:06,450 --> 00:29:10,950
also make<font color="#E5E5E5"> economic choices when it</font><font color="#CCCCCC"> comes</font>

697
00:29:08,789 --> 00:29:13,200
to maintenance<font color="#E5E5E5"> of those phones so you</font>

698
00:29:10,950 --> 00:29:20,970
may not<font color="#E5E5E5"> put in quite as much</font><font color="#CCCCCC"> effort as</font>

699
00:29:13,200 --> 00:29:23,100
for your<font color="#E5E5E5"> top of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> line phones right</font><font color="#CCCCCC"> so</font>

700
00:29:20,970 --> 00:29:25,110
important to say that<font color="#CCCCCC"> of course not</font>

701
00:29:23,100 --> 00:29:28,529
every missing patch<font color="#E5E5E5"> is automatically an</font>

702
00:29:25,110 --> 00:29:31,080
open vulnerability right<font color="#CCCCCC"> but still</font><font color="#E5E5E5"> we</font>

703
00:29:28,529 --> 00:29:33,990
find a bunch<font color="#CCCCCC"> of missing patches what can</font>

704
00:29:31,080 --> 00:29:36,689
we do<font color="#E5E5E5"> with them</font><font color="#CCCCCC"> now can</font><font color="#E5E5E5"> we use them to</font>

705
00:29:33,990 --> 00:29:39,980
<font color="#E5E5E5">hack a bunch of different Android phones</font>

706
00:29:36,690 --> 00:29:43,289
<font color="#CCCCCC">as the previous</font><font color="#E5E5E5"> slide would suggest and</font>

707
00:29:39,980 --> 00:29:48,269
intuitively<font color="#E5E5E5"> coming from more like a PC</font>

708
00:29:43,289 --> 00:29:51,870
<font color="#CCCCCC">windows a background we would think</font><font color="#E5E5E5"> yes</font>

709
00:29:48,269 --> 00:29:56,460
of course<font color="#E5E5E5"> there</font><font color="#CCCCCC"> are patches missing four</font>

710
00:29:51,870 --> 00:30:01,110
CVEs was CBS s cause of nine and higher

711
00:29:56,460 --> 00:30:03,090
in the CVE<font color="#E5E5E5"> it says code execution risk</font>

712
00:30:01,110 --> 00:30:05,158
<font color="#E5E5E5">right you think that if a patch like</font>

713
00:30:03,090 --> 00:30:08,009
<font color="#CCCCCC">that is missing then there's an</font>

714
00:30:05,159 --> 00:30:10,080
immediate<font color="#E5E5E5"> exploit risk but we're not</font>

715
00:30:08,009 --> 00:30:11,279
dealing<font color="#E5E5E5"> with Windows here</font><font color="#CCCCCC"> right we</font><font color="#E5E5E5"> are</font>

716
00:30:10,080 --> 00:30:14,100
dealing<font color="#CCCCCC"> with a</font><font color="#E5E5E5"> different kind of</font>

717
00:30:11,279 --> 00:30:16,710
operating<font color="#CCCCCC"> system</font><font color="#E5E5E5"> one that</font><font color="#CCCCCC"> was built with</font>

718
00:30:14,100 --> 00:30:18,658
<font color="#E5E5E5">more security technology built in from</font>

719
00:30:16,710 --> 00:30:21,149
the<font color="#E5E5E5"> first place and not</font><font color="#CCCCCC"> just Android all</font>

720
00:30:18,659 --> 00:30:23,549
of these mobile operating systems<font color="#E5E5E5"> they</font>

721
00:30:21,149 --> 00:30:24,989
include things like sandboxing right so

722
00:30:23,549 --> 00:30:27,690
this<font color="#E5E5E5"> already builds an additional</font>

723
00:30:24,990 --> 00:30:32,009
security<font color="#E5E5E5"> barrier but also includes</font>

724
00:30:27,690 --> 00:30:34,259
things like<font color="#E5E5E5"> randomization memory layout</font>

725
00:30:32,009 --> 00:30:36,600
randomization not just for for a system

726
00:30:34,259 --> 00:30:39,090
and kernel but more and more<font color="#E5E5E5"> mandatory</font>

727
00:30:36,600 --> 00:30:42,889
for every single<font color="#E5E5E5"> application running in</font>

728
00:30:39,090 --> 00:30:45,539
this<font color="#E5E5E5"> operating system</font><font color="#CCCCCC"> so where do we</font>

729
00:30:42,889 --> 00:30:47,309
where do we fall in this<font color="#CCCCCC"> trade-off is it</font>

730
00:30:45,539 --> 00:30:49,019
<font color="#CCCCCC">easy to exploit</font><font color="#E5E5E5"> in hours it's still hard</font>

731
00:30:47,309 --> 00:30:51,809
because it's a mobile<font color="#E5E5E5"> operating system</font>

732
00:30:49,019 --> 00:30:54,740
or if we look at at the criminal

733
00:30:51,809 --> 00:30:57,899
ecosystem for for their answer<font color="#E5E5E5"> to this</font>

734
00:30:54,740 --> 00:31:00,950
question<font color="#E5E5E5"> by and large criminals say</font>

735
00:30:57,899 --> 00:31:04,289
we're<font color="#E5E5E5"> not</font><font color="#CCCCCC"> going</font><font color="#E5E5E5"> to exploit Android</font>

736
00:31:00,950 --> 00:31:07,500
because<font color="#CCCCCC"> we</font><font color="#E5E5E5"> don't</font><font color="#CCCCCC"> have to if we want to</font>

737
00:31:04,289 --> 00:31:10,769
steal the data<font color="#E5E5E5"> of an</font><font color="#CCCCCC"> android</font><font color="#E5E5E5"> user or</font>

738
00:31:07,500 --> 00:31:13,530
take over<font color="#CCCCCC"> the phone</font><font color="#E5E5E5"> not necessarily a</font>

739
00:31:10,769 --> 00:31:15,750
user but a larger number of

740
00:31:13,530 --> 00:31:18,330
will suggest that they should install

741
00:31:15,750 --> 00:31:20,789
some malicious application and enough

742
00:31:18,330 --> 00:31:24,120
users<font color="#E5E5E5"> will do that so I don't have to do</font>

743
00:31:20,789 --> 00:31:26,940
any hacking<font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> mobile phone</font>

744
00:31:24,120 --> 00:31:30,330
infections in<font color="#E5E5E5"> Android in fact the vast</font>

745
00:31:26,940 --> 00:31:32,820
<font color="#CCCCCC">majority of them come from</font><font color="#E5E5E5"> downloads</font>

746
00:31:30,330 --> 00:31:35,100
that the user<font color="#E5E5E5"> initiated installations</font>

747
00:31:32,820 --> 00:31:36,689
that<font color="#E5E5E5"> the user wanted usually under</font>

748
00:31:35,100 --> 00:31:38,490
<font color="#E5E5E5">pretence right the user doesn't say</font>

749
00:31:36,690 --> 00:31:40,500
please<font color="#E5E5E5"> heck me right rather they would</font>

750
00:31:38,490 --> 00:31:43,710
say I want<font color="#E5E5E5"> to install this pirated</font>

751
00:31:40,500 --> 00:31:45,600
version of the software<font color="#CCCCCC"> friend</font><font color="#E5E5E5"> and of</font>

752
00:31:43,710 --> 00:31:47,370
course Google<font color="#E5E5E5"> is going through great</font>

753
00:31:45,600 --> 00:31:48,809
<font color="#E5E5E5">lengths in securing the Google Play</font>

754
00:31:47,370 --> 00:31:50,219
Store<font color="#CCCCCC"> there's still malware flowing</font>

755
00:31:48,809 --> 00:31:54,270
through the Play Store<font color="#CCCCCC"> but it's becoming</font>

756
00:31:50,220 --> 00:31:56,429
less<font color="#CCCCCC"> and</font><font color="#E5E5E5"> less but</font><font color="#CCCCCC"> that only covers some</font>

757
00:31:54,270 --> 00:32:00,299
part of the ecosystem<font color="#CCCCCC"> China for instance</font>

758
00:31:56,429 --> 00:32:02,970
<font color="#CCCCCC">obviously a</font><font color="#E5E5E5"> huge Android</font><font color="#CCCCCC"> market only 4%</font>

759
00:32:00,299 --> 00:32:06,720
of the users in China use<font color="#E5E5E5"> Google</font><font color="#CCCCCC"> Play at</font>

760
00:32:02,970 --> 00:32:08,820
all so 96% of users in China<font color="#E5E5E5"> will not</font>

761
00:32:06,720 --> 00:32:13,200
<font color="#E5E5E5">benefit from anything that that Google</font>

762
00:32:08,820 --> 00:32:15,870
does<font color="#E5E5E5"> through Google Play so this will</font>

763
00:32:13,200 --> 00:32:17,250
continue<font color="#CCCCCC"> to be a</font><font color="#E5E5E5"> problem</font><font color="#CCCCCC"> now</font><font color="#E5E5E5"> a little</font>

764
00:32:15,870 --> 00:32:20,070
<font color="#CCCCCC">bit</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> hacking that we do see that</font>

765
00:32:17,250 --> 00:32:22,200
criminals do is then the second step in

766
00:32:20,070 --> 00:32:25,590
hacking somebody installs<font color="#E5E5E5"> an app on</font>

767
00:32:22,200 --> 00:32:27,840
<font color="#E5E5E5">their phone from some pirated version</font>

768
00:32:25,590 --> 00:32:29,760
for instance and then this app will

769
00:32:27,840 --> 00:32:32,549
either ask for<font color="#E5E5E5"> permissions or it will</font>

770
00:32:29,760 --> 00:32:35,010
hack into the<font color="#CCCCCC"> phone use what we were</font>

771
00:32:32,549 --> 00:32:37,470
called routing<font color="#E5E5E5"> techniques to gain</font>

772
00:32:35,010 --> 00:32:39,270
<font color="#CCCCCC">additional privileges but</font><font color="#E5E5E5"> even here it's</font>

773
00:32:37,470 --> 00:32:41,520
often easier to<font color="#E5E5E5"> just ask the user for</font>

774
00:32:39,270 --> 00:32:44,070
<font color="#E5E5E5">permissions for instance the device</font>

775
00:32:41,520 --> 00:32:46,799
<font color="#E5E5E5">administrator permission is a very</font>

776
00:32:44,070 --> 00:32:48,928
powerful<font color="#E5E5E5"> one and basically prevents the</font>

777
00:32:46,799 --> 00:32:51,360
virus<font color="#E5E5E5"> from being uninstalled</font>

778
00:32:48,929 --> 00:32:53,220
right once you grant<font color="#E5E5E5"> device</font>

779
00:32:51,360 --> 00:32:54,860
<font color="#CCCCCC">administrator to a virus basically you</font>

780
00:32:53,220 --> 00:32:56,070
can't remove<font color="#E5E5E5"> it from your phone anymore</font>

781
00:32:54,860 --> 00:33:00,149
right

782
00:32:56,070 --> 00:33:02,639
so the hacking that we would imagine

783
00:33:00,150 --> 00:33:04,350
happening<font color="#E5E5E5"> around Android is not</font>

784
00:33:02,640 --> 00:33:06,299
publicized as there's no public

785
00:33:04,350 --> 00:33:08,219
information on any android hacking

786
00:33:06,299 --> 00:33:10,200
happening let's say<font color="#E5E5E5"> over the last 12</font>

787
00:33:08,220 --> 00:33:12,330
months<font color="#CCCCCC"> but of course it still happens in</font>

788
00:33:10,200 --> 00:33:14,159
in corners of the ecosystem

789
00:33:12,330 --> 00:33:18,049
state-sponsored<font color="#E5E5E5"> otherwise very</font>

790
00:33:14,159 --> 00:33:23,370
determined and<font color="#CCCCCC"> persistent</font><font color="#E5E5E5"> attackers</font><font color="#CCCCCC"> and</font>

791
00:33:18,049 --> 00:33:26,550
those what<font color="#E5E5E5"> often</font><font color="#CCCCCC"> times do zero days but</font>

792
00:33:23,370 --> 00:33:29,820
nobody can<font color="#E5E5E5"> hack Android just based on on</font>

793
00:33:26,550 --> 00:33:32,220
<font color="#E5E5E5">one buck so let's zoom</font><font color="#CCCCCC"> into that corner</font>

794
00:33:29,820 --> 00:33:34,139
of<font color="#E5E5E5"> the ecosystem</font><font color="#CCCCCC"> and even if it</font><font color="#E5E5E5"> doesn't</font>

795
00:33:32,220 --> 00:33:36,210
happen right<font color="#E5E5E5"> now</font><font color="#CCCCCC"> as a researcher I'm</font>

796
00:33:34,140 --> 00:33:39,480
interested in the question can it<font color="#CCCCCC"> happen</font>

797
00:33:36,210 --> 00:33:41,880
can somebody remotely hack my<font color="#E5E5E5"> android</font>

798
00:33:39,480 --> 00:33:46,320
phone<font color="#CCCCCC"> without me installing a malicious</font>

799
00:33:41,880 --> 00:33:49,350
<font color="#CCCCCC">application okay so let's first look</font><font color="#E5E5E5"> at</font>

800
00:33:46,320 --> 00:33:52,439
which of those missing patches<font color="#E5E5E5"> that we</font>

801
00:33:49,350 --> 00:33:54,449
find we can use in in exploitation

802
00:33:52,440 --> 00:33:56,370
because<font color="#E5E5E5"> it's important to state</font><font color="#CCCCCC"> that not</font>

803
00:33:54,450 --> 00:33:58,470
every missing patch<font color="#E5E5E5"> is an open</font>

804
00:33:56,370 --> 00:34:00,959
vulnerability and we know that<font color="#E5E5E5"> from all</font>

805
00:33:58,470 --> 00:34:02,400
other operating systems<font color="#CCCCCC"> also it's just</font>

806
00:34:00,960 --> 00:34:07,860
<font color="#E5E5E5">important</font><font color="#CCCCCC"> to summarize it once again</font>

807
00:34:02,400 --> 00:34:10,350
<font color="#E5E5E5">here</font><font color="#CCCCCC"> a patch missing could be explained</font>

808
00:34:07,860 --> 00:34:12,509
<font color="#E5E5E5">by the phone vendor saying we found</font><font color="#CCCCCC"> an</font>

809
00:34:10,350 --> 00:34:15,540
alternative way to<font color="#E5E5E5"> fix the same</font>

810
00:34:12,510 --> 00:34:17,700
vulnerability<font color="#E5E5E5"> we have seen rare cases of</font>

811
00:34:15,540 --> 00:34:19,800
that happening where apparently<font color="#E5E5E5"> the</font>

812
00:34:17,699 --> 00:34:20,790
<font color="#E5E5E5">Google supplied patch didn't work so</font>

813
00:34:19,800 --> 00:34:22,980
<font color="#CCCCCC">well</font>

814
00:34:20,790 --> 00:34:25,020
in in<font color="#E5E5E5"> that modified version of Android</font>

815
00:34:22,980 --> 00:34:27,360
<font color="#CCCCCC">that a vendor uses so the vendor has</font>

816
00:34:25,020 --> 00:34:29,610
<font color="#E5E5E5">created a different patch so then our</font>

817
00:34:27,360 --> 00:34:32,130
analysis would correctly<font color="#E5E5E5"> state the</font>

818
00:34:29,610 --> 00:34:34,590
<font color="#E5E5E5">Google issued patch is missing but that</font>

819
00:34:32,130 --> 00:34:36,929
would<font color="#E5E5E5"> not mean that the vulnerability</font><font color="#CCCCCC"> is</font>

820
00:34:34,590 --> 00:34:39,750
open<font color="#E5E5E5"> right so these gaps do exist and</font>

821
00:34:36,929 --> 00:34:42,270
then on top<font color="#CCCCCC"> of</font><font color="#E5E5E5"> that of course some</font>

822
00:34:39,750 --> 00:34:44,489
<font color="#CCCCCC">petrus rely on certain configuration</font>

823
00:34:42,270 --> 00:34:47,100
settings<font color="#E5E5E5"> remember the vulnerability</font><font color="#CCCCCC"> that</font>

824
00:34:44,489 --> 00:34:48,959
led to<font color="#E5E5E5"> want to cry</font><font color="#CCCCCC"> you could defeat that</font>

825
00:34:47,100 --> 00:34:51,690
by just<font color="#CCCCCC"> switching off a</font><font color="#E5E5E5"> certain version</font>

826
00:34:48,960 --> 00:34:53,210
<font color="#E5E5E5">of SMB right so you didn't have</font><font color="#CCCCCC"> to</font>

827
00:34:51,690 --> 00:34:55,168
install the patch there were other

828
00:34:53,210 --> 00:34:57,150
configuration settings you could<font color="#E5E5E5"> do to</font>

829
00:34:55,168 --> 00:34:59,549
<font color="#E5E5E5">prevent that exploitation and</font><font color="#CCCCCC"> the same</font>

830
00:34:57,150 --> 00:35:01,500
is true<font color="#E5E5E5"> of course for many exploits that</font>

831
00:34:59,550 --> 00:35:04,530
they rely on some some environment

832
00:35:01,500 --> 00:35:06,480
variables<font color="#E5E5E5"> and</font><font color="#CCCCCC"> then finally some some</font>

833
00:35:04,530 --> 00:35:09,660
<font color="#E5E5E5">bugs get submitted that just can't be</font>

834
00:35:06,480 --> 00:35:11,790
exploited right<font color="#E5E5E5"> relatively little</font>

835
00:35:09,660 --> 00:35:14,220
<font color="#E5E5E5">research goes into into actual</font>

836
00:35:11,790 --> 00:35:16,170
exploitation relative<font color="#E5E5E5"> to finding the</font>

837
00:35:14,220 --> 00:35:17,549
bugs that<font color="#E5E5E5"> could be exploited so there's</font>

838
00:35:16,170 --> 00:35:20,130
always a little bit<font color="#E5E5E5"> of a gap there and</font>

839
00:35:17,550 --> 00:35:22,170
then<font color="#E5E5E5"> finally our analysis could</font><font color="#CCCCCC"> be wrong</font>

840
00:35:20,130 --> 00:35:23,940
<font color="#E5E5E5">right and it has been in a few cases</font>

841
00:35:22,170 --> 00:35:24,210
it's<font color="#E5E5E5"> becoming better and</font><font color="#CCCCCC"> better over</font>

842
00:35:23,940 --> 00:35:25,950
time

843
00:35:24,210 --> 00:35:28,830
<font color="#E5E5E5">but of course we could be saying a patch</font>

844
00:35:25,950 --> 00:35:30,779
is missing<font color="#E5E5E5"> we're in in fact the</font>

845
00:35:28,830 --> 00:35:33,299
manufacturer<font color="#CCCCCC"> just</font><font color="#E5E5E5"> changed Android in</font>

846
00:35:30,780 --> 00:35:36,360
such a way that that<font color="#E5E5E5"> lets us to believe</font>

847
00:35:33,300 --> 00:35:39,390
it's missing<font color="#CCCCCC"> we're really</font><font color="#E5E5E5"> it isn't but</font>

848
00:35:36,360 --> 00:35:40,560
yeah so that<font color="#CCCCCC"> would mean</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> if there's</font>

849
00:35:39,390 --> 00:35:42,900
only let's say<font color="#E5E5E5"> one</font>

850
00:35:40,560 --> 00:35:44,910
<font color="#CCCCCC">messing on</font><font color="#E5E5E5"> the phone or</font><font color="#CCCCCC"> two</font><font color="#E5E5E5"> maybe those</font>

851
00:35:42,900 --> 00:35:46,770
aren't<font color="#CCCCCC"> actually leading</font><font color="#E5E5E5"> to any open</font>

852
00:35:44,910 --> 00:35:48,690
vulnerabilities<font color="#E5E5E5"> but some of these film</font>

853
00:35:46,770 --> 00:35:51,690
phones<font color="#CCCCCC"> we'll look</font><font color="#E5E5E5"> at they miss a whole</font>

854
00:35:48,690 --> 00:35:54,840
bunch more<font color="#CCCCCC"> and so chances still are</font>

855
00:35:51,690 --> 00:35:57,150
there<font color="#E5E5E5"> are some open vulnerabilities on</font>

856
00:35:54,840 --> 00:35:58,590
the phone and what can we not do with

857
00:35:57,150 --> 00:36:01,950
those open vulnerabilities

858
00:35:58,590 --> 00:36:05,370
well<font color="#E5E5E5"> according</font><font color="#CCCCCC"> to the textbook you would</font>

859
00:36:01,950 --> 00:36:07,049
need for<font color="#E5E5E5"> vulnerabilities</font><font color="#CCCCCC"> to hack into an</font>

860
00:36:05,370 --> 00:36:08,700
<font color="#CCCCCC">android phone now there's this</font>

861
00:36:07,050 --> 00:36:12,120
<font color="#E5E5E5">alternative path but</font><font color="#CCCCCC"> just kind of</font><font color="#E5E5E5"> the</font>

862
00:36:08,700 --> 00:36:15,689
standard<font color="#CCCCCC"> paths for vulnerability for a</font>

863
00:36:12,120 --> 00:36:18,089
full exploit first you<font color="#CCCCCC"> need to peek into</font>

864
00:36:15,690 --> 00:36:20,130
the<font color="#E5E5E5"> memory of an application that's</font>

865
00:36:18,090 --> 00:36:21,870
because each<font color="#E5E5E5"> application is launched at</font>

866
00:36:20,130 --> 00:36:26,370
a kind<font color="#CCCCCC"> of</font><font color="#E5E5E5"> random position every</font><font color="#CCCCCC"> time you</font>

867
00:36:21,870 --> 00:36:28,589
started address randomization<font color="#CCCCCC"> and you</font>

868
00:36:26,370 --> 00:36:30,720
need to know where your application<font color="#E5E5E5"> is</font>

869
00:36:28,590 --> 00:36:32,280
<font color="#CCCCCC">running</font><font color="#E5E5E5"> right now to exploit it right so</font>

870
00:36:30,720 --> 00:36:34,859
that's the first one<font color="#CCCCCC"> and that</font><font color="#E5E5E5"> already</font>

871
00:36:32,280 --> 00:36:37,320
requires a bug so a missing patch that's

872
00:36:34,860 --> 00:36:40,080
number one second<font color="#E5E5E5"> you then need to</font>

873
00:36:37,320 --> 00:36:43,230
<font color="#E5E5E5">inject executable code into that</font>

874
00:36:40,080 --> 00:36:44,970
application<font color="#CCCCCC"> or play</font><font color="#E5E5E5"> around with jumping</font>

875
00:36:43,230 --> 00:36:46,740
to code that already<font color="#E5E5E5"> exists</font><font color="#CCCCCC"> so you need</font>

876
00:36:44,970 --> 00:36:49,140
to in inject something<font color="#E5E5E5"> you need to</font>

877
00:36:46,740 --> 00:36:52,709
corrupt a memory<font color="#CCCCCC"> that requires a pretty</font>

878
00:36:49,140 --> 00:36:56,940
good<font color="#E5E5E5"> burger and a second missing patch</font>

879
00:36:52,710 --> 00:36:58,950
and after those two bugs<font color="#E5E5E5"> you are in the</font>

880
00:36:56,940 --> 00:37:01,080
<font color="#CCCCCC">application context so let's say</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> is</font>

881
00:36:58,950 --> 00:37:04,319
a messaging application<font color="#E5E5E5"> so now you can</font>

882
00:37:01,080 --> 00:37:07,470
read the<font color="#E5E5E5"> messages but you can't hack the</font>

883
00:37:04,320 --> 00:37:10,080
phone<font color="#E5E5E5"> yet right you want to breach out</font>

884
00:37:07,470 --> 00:37:11,790
of their messaging application and take

885
00:37:10,080 --> 00:37:12,990
<font color="#E5E5E5">control of the whole phone and that</font>

886
00:37:11,790 --> 00:37:16,020
means you<font color="#E5E5E5"> have to go through this whole</font>

887
00:37:12,990 --> 00:37:17,850
process<font color="#CCCCCC"> yet one more</font><font color="#E5E5E5"> time again two</font>

888
00:37:16,020 --> 00:37:20,610
bucks and information<font color="#CCCCCC"> leak and</font><font color="#E5E5E5"> a memory</font>

889
00:37:17,850 --> 00:37:22,799
corruption<font color="#E5E5E5"> to breach into either a</font>

890
00:37:20,610 --> 00:37:26,460
system context or into the Linux kernel

891
00:37:22,800 --> 00:37:29,360
directly for bugs necessary to exploit

892
00:37:26,460 --> 00:37:33,300
Android right according<font color="#E5E5E5"> to</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> textbook</font>

893
00:37:29,360 --> 00:37:35,790
mileage may differ and if you do look at

894
00:37:33,300 --> 00:37:37,920
successful exploitation<font color="#E5E5E5"> now not the</font>

895
00:37:35,790 --> 00:37:39,540
criminal part of the ecosystem<font color="#E5E5E5"> as I said</font>

896
00:37:37,920 --> 00:37:41,460
we have very<font color="#E5E5E5"> little information on how</font>

897
00:37:39,540 --> 00:37:43,820
that<font color="#E5E5E5"> works but published research</font>

898
00:37:41,460 --> 00:37:47,910
results we do find that by and large

899
00:37:43,820 --> 00:37:49,500
<font color="#CCCCCC">there's four but rule holds</font><font color="#E5E5E5"> let's start</font>

900
00:37:47,910 --> 00:37:54,319
<font color="#E5E5E5">with</font><font color="#CCCCCC"> state fight of course the most</font>

901
00:37:49,500 --> 00:37:57,119
<font color="#E5E5E5">famous Android bug it never worked</font>

902
00:37:54,319 --> 00:37:59,099
stage fright<font color="#E5E5E5"> is one of four bucks in a</font>

903
00:37:57,119 --> 00:38:01,740
chain<font color="#E5E5E5"> and nobody ever put it together in</font>

904
00:37:59,099 --> 00:38:04,980
a chain<font color="#E5E5E5"> of four to exploit an Android</font>

905
00:38:01,740 --> 00:38:06,808
phone<font color="#E5E5E5"> in</font><font color="#CCCCCC"> fact it's even the very first</font>

906
00:38:04,980 --> 00:38:09,359
step in<font color="#CCCCCC"> the chain didn't work the</font>

907
00:38:06,809 --> 00:38:12,180
<font color="#CCCCCC">peeking</font><font color="#E5E5E5"> into memory deriving the memory</font>

908
00:38:09,359 --> 00:38:15,749
location to my knowledge<font color="#E5E5E5"> nobody has</font>

909
00:38:12,180 --> 00:38:18,808
shown to combine an information leakage

910
00:38:15,749 --> 00:38:21,390
bug<font color="#E5E5E5"> with stage fright yet</font><font color="#CCCCCC"> so stage</font>

911
00:38:18,809 --> 00:38:24,210
fright<font color="#E5E5E5"> is an example of a bug that if it</font>

912
00:38:21,390 --> 00:38:26,249
is<font color="#E5E5E5"> the only bug on your phone chances</font>

913
00:38:24,210 --> 00:38:28,170
<font color="#E5E5E5">are you don't have to worry about it all</font>

914
00:38:26,249 --> 00:38:31,410
<font color="#E5E5E5">right it needs to be combined with</font><font color="#CCCCCC"> other</font>

915
00:38:28,170 --> 00:38:32,819
bugs<font color="#E5E5E5"> now the second one that's probably</font>

916
00:38:31,410 --> 00:38:34,950
the most interesting<font color="#CCCCCC"> case because</font><font color="#E5E5E5"> this</font>

917
00:38:32,819 --> 00:38:38,099
<font color="#E5E5E5">is the one</font><font color="#CCCCCC"> example of a bug that</font><font color="#E5E5E5"> we</font>

918
00:38:34,950 --> 00:38:38,848
could find<font color="#E5E5E5"> that actually does check all</font>

919
00:38:38,099 --> 00:38:40,890
four boxes

920
00:38:38,849 --> 00:38:42,930
<font color="#E5E5E5">it's confusingly named similar to the</font>

921
00:38:40,890 --> 00:38:46,890
state<font color="#CCCCCC"> rights that the techniques called</font>

922
00:38:42,930 --> 00:38:49,649
<font color="#CCCCCC">return to</font><font color="#E5E5E5"> live stage fright</font><font color="#CCCCCC"> and it is a</font>

923
00:38:46,890 --> 00:38:51,960
single bug that<font color="#E5E5E5"> is just so versatile</font>

924
00:38:49,650 --> 00:38:54,569
that<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> both information leakage and</font>

925
00:38:51,960 --> 00:38:56,759
memory corruption<font color="#CCCCCC"> both Cinda</font><font color="#E5E5E5"> in the user</font>

926
00:38:54,569 --> 00:38:59,130
context and in the<font color="#E5E5E5"> system context so</font>

927
00:38:56,759 --> 00:39:01,799
<font color="#CCCCCC">that was the one time in recent history</font>

928
00:38:59,130 --> 00:39:03,900
<font color="#E5E5E5">that we saw a single bug taking a hacker</font>

929
00:39:01,799 --> 00:39:06,480
all the way from outside the phone all

930
00:39:03,900 --> 00:39:08,220
the<font color="#E5E5E5"> way to to a system context right</font>

931
00:39:06,480 --> 00:39:11,279
that was<font color="#CCCCCC"> patch pretty quickly and</font>

932
00:39:08,220 --> 00:39:12,930
consistently on a lot<font color="#E5E5E5"> of phone but it's</font>

933
00:39:11,279 --> 00:39:16,170
important<font color="#CCCCCC"> to</font><font color="#E5E5E5"> remember that</font><font color="#CCCCCC"> a bug like</font>

934
00:39:12,930 --> 00:39:17,730
<font color="#E5E5E5">that has existed so that no vendor can</font>

935
00:39:16,170 --> 00:39:20,009
get<font color="#CCCCCC"> away</font><font color="#E5E5E5"> by saying</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> we can forget a</font>

936
00:39:17,730 --> 00:39:21,930
few patches<font color="#CCCCCC"> no</font><font color="#E5E5E5"> single patch matters</font>

937
00:39:20,009 --> 00:39:24,089
right<font color="#CCCCCC"> this one would have</font><font color="#E5E5E5"> mattered</font><font color="#CCCCCC"> a</font>

938
00:39:21,930 --> 00:39:26,160
great deal<font color="#E5E5E5"> but all the other published</font>

939
00:39:24,089 --> 00:39:28,589
research results they built exploit

940
00:39:26,160 --> 00:39:30,680
chains<font color="#CCCCCC"> where more than one exploit is</font>

941
00:39:28,589 --> 00:39:33,650
necessary to<font color="#CCCCCC"> breach these different</font>

942
00:39:30,680 --> 00:39:38,160
security layers as<font color="#E5E5E5"> you see here these</font>

943
00:39:33,650 --> 00:39:40,859
chains unfolding<font color="#E5E5E5"> we did include</font><font color="#CCCCCC"> some</font>

944
00:39:38,160 --> 00:39:42,839
more<font color="#E5E5E5"> explanation of these chains in in</font>

945
00:39:40,859 --> 00:39:44,640
this slide<font color="#E5E5E5"> I'm not going to go through</font>

946
00:39:42,839 --> 00:39:46,589
detail I'm just showing this to you so

947
00:39:44,640 --> 00:39:51,210
if when you download<font color="#CCCCCC"> this lights</font><font color="#E5E5E5"> later</font>

948
00:39:46,589 --> 00:39:53,099
<font color="#E5E5E5">you can look into this deeper and do let</font>

949
00:39:51,210 --> 00:39:55,739
<font color="#CCCCCC">us know if you know of</font><font color="#E5E5E5"> other exploit</font>

950
00:39:53,099 --> 00:39:58,499
chains we're really<font color="#E5E5E5"> curious to</font><font color="#CCCCCC"> see kind</font>

951
00:39:55,739 --> 00:40:00,720
<font color="#E5E5E5">of the structure of exploitation and to</font>

952
00:39:58,499 --> 00:40:03,450
see whether for<font color="#CCCCCC"> instance this return</font><font color="#E5E5E5"> to</font>

953
00:40:00,720 --> 00:40:06,419
lip stage fight is very<font color="#E5E5E5"> efficient one</font>

954
00:40:03,450 --> 00:40:07,919
exploit<font color="#E5E5E5"> but if there's more</font><font color="#CCCCCC"> cases like</font>

955
00:40:06,420 --> 00:40:10,289
<font color="#CCCCCC">that or whether there</font><font color="#E5E5E5"> was a</font>

956
00:40:07,920 --> 00:40:12,240
total<font color="#E5E5E5"> anomaly and fluke and we shouldn't</font>

957
00:40:10,289 --> 00:40:15,710
<font color="#E5E5E5">expect anything like that again</font><font color="#CCCCCC"> right</font>

958
00:40:12,240 --> 00:40:19,979
that's an open<font color="#E5E5E5"> research question for us</font>

959
00:40:15,710 --> 00:40:22,950
another way in which we<font color="#CCCCCC"> want to engage</font>

960
00:40:19,980 --> 00:40:24,630
<font color="#E5E5E5">you is to give you the opportunity to</font>

961
00:40:22,950 --> 00:40:28,618
<font color="#E5E5E5">measure the patch levels on your</font><font color="#CCCCCC"> own</font>

962
00:40:24,630 --> 00:40:31,380
phones after<font color="#CCCCCC"> all the engineering that</font>

963
00:40:28,619 --> 00:40:34,680
Jakob<font color="#E5E5E5"> and the team did</font><font color="#CCCCCC"> nowadays this</font>

964
00:40:31,380 --> 00:40:36,900
<font color="#CCCCCC">large analysis</font><font color="#E5E5E5"> runs inside an app on an</font>

965
00:40:34,680 --> 00:40:38,669
<font color="#E5E5E5">Android phone and we in</font><font color="#CCCCCC"> fact we took an</font>

966
00:40:36,900 --> 00:40:41,430
an app that<font color="#CCCCCC"> we'd</font><font color="#E5E5E5"> already released a</font>

967
00:40:38,670 --> 00:40:43,619
couple<font color="#E5E5E5"> of years ago snoops net</font><font color="#CCCCCC"> whose</font>

968
00:40:41,430 --> 00:40:46,169
main goal previously was to find<font color="#E5E5E5"> MZ</font>

969
00:40:43,619 --> 00:40:49,619
caches and other types of mobile<font color="#E5E5E5"> abuse</font>

970
00:40:46,170 --> 00:40:51,690
and we extended this app to<font color="#CCCCCC"> all sanam</font>

971
00:40:49,619 --> 00:40:55,200
measure Android touch level so that's

972
00:40:51,690 --> 00:40:57,599
<font color="#CCCCCC">freely available</font><font color="#E5E5E5"> on Google</font><font color="#CCCCCC"> Play and it's</font>

973
00:40:55,200 --> 00:40:59,549
also open source<font color="#CCCCCC"> probably the latest</font>

974
00:40:57,599 --> 00:41:02,130
<font color="#E5E5E5">version</font><font color="#CCCCCC"> isn't published as source code</font>

975
00:40:59,549 --> 00:41:03,930
<font color="#CCCCCC">as of today but</font><font color="#E5E5E5"> that's gonna come in the</font>

976
00:41:02,130 --> 00:41:07,799
next<font color="#E5E5E5"> couple</font><font color="#CCCCCC"> of days from</font><font color="#E5E5E5"> with a chance</font>

977
00:41:03,930 --> 00:41:09,930
to<font color="#E5E5E5"> clean it up and we hope that you and</font>

978
00:41:07,799 --> 00:41:11,940
many<font color="#CCCCCC"> others can use this to either gain</font>

979
00:41:09,930 --> 00:41:15,828
confidence in to the patch levels of

980
00:41:11,940 --> 00:41:22,559
your phone or to spot gaps and help us

981
00:41:15,829 --> 00:41:26,960
<font color="#CCCCCC">publicize and get those closed so that</font>

982
00:41:22,559 --> 00:41:30,720
<font color="#CCCCCC">was a</font><font color="#E5E5E5"> two-year journey for us both</font>

983
00:41:26,960 --> 00:41:35,250
<font color="#CCCCCC">research and</font><font color="#E5E5E5"> an engineering journey what</font>

984
00:41:30,720 --> 00:41:37,740
did we learn<font color="#E5E5E5"> so personally I don't</font><font color="#CCCCCC"> think</font>

985
00:41:35,250 --> 00:41:40,200
I<font color="#E5E5E5"> changed my views on Android very much</font>

986
00:41:37,740 --> 00:41:42,450
through this research journey

987
00:41:40,200 --> 00:41:44,819
I still believe<font color="#E5E5E5"> similar things than a</font>

988
00:41:42,450 --> 00:41:48,089
belief let's say<font color="#CCCCCC"> he</font><font color="#E5E5E5"> ago but I believed</font>

989
00:41:44,819 --> 00:41:50,460
him for<font color="#E5E5E5"> different reasons now</font><font color="#CCCCCC"> a year</font><font color="#E5E5E5"> ago</font>

990
00:41:48,089 --> 00:41:52,558
I thought we had<font color="#E5E5E5"> finally convinced the</font>

991
00:41:50,460 --> 00:41:55,170
Android vendors to do monthly patches

992
00:41:52,559 --> 00:41:57,509
I saw those patch<font color="#CCCCCC"> dates increasing every</font>

993
00:41:55,170 --> 00:41:59,640
month<font color="#E5E5E5"> and I was happy that unless</font>

994
00:41:57,509 --> 00:42:02,279
somebody's dealing in<font color="#CCCCCC"> zero days</font><font color="#E5E5E5"> probably</font>

995
00:41:59,640 --> 00:42:05,069
<font color="#CCCCCC">I was safe now I learned that</font><font color="#E5E5E5"> that's not</font>

996
00:42:02,279 --> 00:42:07,259
the case<font color="#CCCCCC"> for</font><font color="#E5E5E5"> this research and that in</font>

997
00:42:05,069 --> 00:42:09,420
fact<font color="#E5E5E5"> some vendors have produced</font>

998
00:42:07,259 --> 00:42:11,490
significant gaps in their<font color="#E5E5E5"> patches and</font>

999
00:42:09,420 --> 00:42:14,640
<font color="#E5E5E5">that that will only improve over time</font>

1000
00:42:11,490 --> 00:42:17,459
but I<font color="#E5E5E5"> realized also that missing</font><font color="#CCCCCC"> patches</font>

1001
00:42:14,640 --> 00:42:20,109
are not as significant<font color="#E5E5E5"> on Android as</font>

1002
00:42:17,460 --> 00:42:24,700
they are on Windows a single critical

1003
00:42:20,110 --> 00:42:26,410
<font color="#E5E5E5">pache is rarely enough to exploit an</font>

1004
00:42:24,700 --> 00:42:28,779
<font color="#E5E5E5">android</font><font color="#CCCCCC"> device and that again gave me</font>

1005
00:42:26,410 --> 00:42:30,609
more<font color="#CCCCCC"> confidence not so much in the the</font>

1006
00:42:28,780 --> 00:42:33,490
vendors who are forgetting the patches

1007
00:42:30,610 --> 00:42:35,680
<font color="#E5E5E5">but more in an ecosystem as a whole</font><font color="#CCCCCC"> so</font>

1008
00:42:33,490 --> 00:42:38,529
right now I think<font color="#E5E5E5"> it's fair to</font><font color="#CCCCCC"> say that</font>

1009
00:42:35,680 --> 00:42:41,230
<font color="#E5E5E5">this is a better protected system than a</font>

1010
00:42:38,530 --> 00:42:43,450
lot<font color="#E5E5E5"> of Windows environments and assuming</font>

1011
00:42:41,230 --> 00:42:46,390
that<font color="#E5E5E5"> the same data lives on your Windows</font>

1012
00:42:43,450 --> 00:42:48,910
computer<font color="#CCCCCC"> in in</font><font color="#E5E5E5"> your corporate</font>

1013
00:42:46,390 --> 00:42:50,799
environment<font color="#E5E5E5"> and on your Android</font><font color="#CCCCCC"> phone</font>

1014
00:42:48,910 --> 00:42:53,170
chances are it's easier to hack it on

1015
00:42:50,800 --> 00:42:56,380
the<font color="#CCCCCC"> Windows computer but of course</font><font color="#E5E5E5"> again</font>

1016
00:42:53,170 --> 00:42:58,030
<font color="#CCCCCC">your mileage may</font><font color="#E5E5E5"> differ it is also fair</font>

1017
00:42:56,380 --> 00:43:01,270
to<font color="#E5E5E5"> say though that the hacking</font>

1018
00:42:58,030 --> 00:43:04,150
incentives around<font color="#E5E5E5"> Android are only gonna</font>

1019
00:43:01,270 --> 00:43:07,210
get go up Android<font color="#E5E5E5"> is such a popular</font>

1020
00:43:04,150 --> 00:43:10,270
successful technology<font color="#CCCCCC"> and where success</font>

1021
00:43:07,210 --> 00:43:12,550
comes<font color="#E5E5E5"> responsibility responsibility</font><font color="#CCCCCC"> for</font>

1022
00:43:10,270 --> 00:43:15,570
the data of an increasing number<font color="#CCCCCC"> of</font>

1023
00:43:12,550 --> 00:43:17,890
<font color="#E5E5E5">people who rely</font><font color="#CCCCCC"> on</font><font color="#E5E5E5"> Android as their only</font>

1024
00:43:15,570 --> 00:43:19,870
computation platform who don't have the

1025
00:43:17,890 --> 00:43:22,390
same data<font color="#CCCCCC"> stored on some corporate</font>

1026
00:43:19,870 --> 00:43:25,270
Windows computer also<font color="#E5E5E5"> who really have to</font>

1027
00:43:22,390 --> 00:43:28,180
trust Android and Android<font color="#E5E5E5"> only to keep</font>

1028
00:43:25,270 --> 00:43:32,320
<font color="#E5E5E5">him</font><font color="#CCCCCC"> secure and I think that part of</font><font color="#E5E5E5"> the</font>

1029
00:43:28,180 --> 00:43:35,500
<font color="#CCCCCC">population</font><font color="#E5E5E5"> and ultimately many people</font>

1030
00:43:32,320 --> 00:43:38,440
are including us relies on<font color="#E5E5E5"> the vendors</font>

1031
00:43:35,500 --> 00:43:40,960
maintaining<font color="#E5E5E5"> their ecosystems</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> higher</font>

1032
00:43:38,440 --> 00:43:44,800
<font color="#E5E5E5">quality standards that</font><font color="#CCCCCC"> our research</font><font color="#E5E5E5"> has</font>

1033
00:43:40,960 --> 00:43:46,720
shown some of<font color="#E5E5E5"> them to do so I hope</font><font color="#CCCCCC"> that</font>

1034
00:43:44,800 --> 00:43:49,210
this journey continues continues

1035
00:43:46,720 --> 00:43:52,540
involving<font color="#E5E5E5"> a lot of you and continues</font>

1036
00:43:49,210 --> 00:43:54,370
involving a lot of vendors<font color="#CCCCCC"> and based on</font>

1037
00:43:52,540 --> 00:43:56,980
<font color="#CCCCCC">a more open dialogue based</font><font color="#E5E5E5"> on actual</font>

1038
00:43:54,370 --> 00:44:00,100
facts<font color="#E5E5E5"> not random strings set in some</font>

1039
00:43:56,980 --> 00:44:02,860
firmware<font color="#E5E5E5"> so that we can then close these</font>

1040
00:44:00,100 --> 00:44:04,779
<font color="#E5E5E5">patch gaps and live up to the</font>

1041
00:44:02,860 --> 00:44:07,270
<font color="#CCCCCC">responsibility that</font><font color="#E5E5E5"> Android should have</font>

1042
00:44:04,780 --> 00:44:10,120
given<font color="#CCCCCC"> that two billion devices</font><font color="#E5E5E5"> are</font>

1043
00:44:07,270 --> 00:44:11,800
currently<font color="#CCCCCC"> using</font><font color="#E5E5E5"> it was that thank you</font>

1044
00:44:10,120 --> 00:44:12,720
<font color="#CCCCCC">very much and thanks for coming on to</font>

1045
00:44:11,800 --> 00:44:19,999
the journey today

1046
00:44:12,720 --> 00:44:23,308
[Applause]

1047
00:44:19,999 --> 00:44:25,109
so while while we are handing over the

1048
00:44:23,309 --> 00:44:29,940
microphones to the first questions<font color="#E5E5E5"> let</font>

1049
00:44:25,109 --> 00:44:32,700
<font color="#E5E5E5">me just thank my team</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Berlin for</font>

1050
00:44:29,940 --> 00:44:34,589
<font color="#CCCCCC">just extraordinary</font><font color="#E5E5E5"> work here</font><font color="#CCCCCC"> um</font><font color="#E5E5E5"> I'm</font>

1051
00:44:32,700 --> 00:44:36,990
always impressed<font color="#CCCCCC"> working with those</font>

1052
00:44:34,589 --> 00:44:39,119
geniuses<font color="#E5E5E5"> and and this research wouldn't</font>

1053
00:44:36,990 --> 00:44:43,410
have been<font color="#E5E5E5"> possible without and</font><font color="#CCCCCC"> so thanks</font>

1054
00:44:39,119 --> 00:44:46,710
for<font color="#CCCCCC"> everybody on this slide and and</font>

1055
00:44:43,410 --> 00:44:49,348
while we're<font color="#CCCCCC"> at it if you find project</font>

1056
00:44:46,710 --> 00:44:50,970
like this intriguing<font color="#E5E5E5"> the the research</font>

1057
00:44:49,349 --> 00:44:52,799
and the<font color="#E5E5E5"> engineering</font><font color="#CCCCCC"> component we're</font>

1058
00:44:50,970 --> 00:44:54,839
always looking for<font color="#CCCCCC"> more</font><font color="#E5E5E5"> talent so if</font>

1059
00:44:52,799 --> 00:44:56,788
you're interested<font color="#CCCCCC"> in doing projects like</font>

1060
00:44:54,839 --> 00:44:59,069
this in<font color="#E5E5E5"> Berlin or Hong Kong</font><font color="#CCCCCC"> come speak</font>

1061
00:44:56,789 --> 00:45:00,450
to<font color="#E5E5E5"> us later and</font><font color="#CCCCCC"> now over to your</font>

1062
00:44:59,069 --> 00:45:03,420
questions<font color="#E5E5E5"> okay</font>

1063
00:45:00,450 --> 00:45:04,848
hi<font color="#E5E5E5"> thank you for the talk did you try</font>

1064
00:45:03,420 --> 00:45:07,920
the BlackBerry devices

1065
00:45:04,849 --> 00:45:11,690
did we try what the BlackBerry devices

1066
00:45:07,920 --> 00:45:15,119
<font color="#E5E5E5">do we try</font><font color="#CCCCCC"> blackberry devices we we have</font>

1067
00:45:11,690 --> 00:45:22,650
now<font color="#E5E5E5"> let's go back to this light was the</font>

1068
00:45:15,119 --> 00:45:24,539
overview<font color="#E5E5E5"> like there's nothing further</font>

1069
00:45:22,650 --> 00:45:28,230
<font color="#E5E5E5">than this list because</font><font color="#CCCCCC"> we had</font><font color="#E5E5E5"> too few</font>

1070
00:45:24,539 --> 00:45:30,779
samples we have<font color="#E5E5E5"> too</font><font color="#CCCCCC"> few samples from two</font>

1071
00:45:28,230 --> 00:45:33,239
<font color="#CCCCCC">types of vendors either vendors who have</font>

1072
00:45:30,779 --> 00:45:35,940
<font color="#E5E5E5">not had anything since October they</font>

1073
00:45:33,239 --> 00:45:37,859
can't be<font color="#E5E5E5"> in our data set because</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> only</font>

1074
00:45:35,940 --> 00:45:39,690
measure<font color="#CCCCCC"> Petrov's October later but</font>

1075
00:45:37,859 --> 00:45:42,029
<font color="#CCCCCC">blackberry is not that part</font><font color="#E5E5E5"> it's just</font>

1076
00:45:39,690 --> 00:45:45,089
not so widely<font color="#CCCCCC"> used</font><font color="#E5E5E5"> that we would have</font>

1077
00:45:42,029 --> 00:45:48,210
many samples<font color="#E5E5E5"> but you can change that</font><font color="#CCCCCC"> and</font>

1078
00:45:45,089 --> 00:45:50,788
many of you already<font color="#E5E5E5"> have perhaps some of</font>

1079
00:45:48,210 --> 00:45:52,739
you saw the wired article yesterday<font color="#E5E5E5"> that</font>

1080
00:45:50,789 --> 00:45:56,609
also<font color="#E5E5E5"> mentions our app that already drove</font>

1081
00:45:52,739 --> 00:45:59,579
a lot<font color="#CCCCCC"> of downloads and tests so we have</font>

1082
00:45:56,609 --> 00:46:01,200
a more<font color="#E5E5E5"> complete test set now</font><font color="#CCCCCC"> and like</font>

1083
00:45:59,579 --> 00:46:03,420
they will definitely<font color="#E5E5E5"> appear on the next</font>

1084
00:46:01,200 --> 00:46:06,450
list and<font color="#CCCCCC"> we'll</font><font color="#E5E5E5"> maintain and keep</font>

1085
00:46:03,420 --> 00:46:14,779
updating this list on our website<font color="#E5E5E5"> as all</font>

1086
00:46:06,450 --> 00:46:14,779
<font color="#CCCCCC">EPS de other questions</font>

1087
00:46:22,140 --> 00:46:29,680
<font color="#CCCCCC">and what are you planning to release</font>

1088
00:46:27,010 --> 00:46:33,090
<font color="#E5E5E5">some parts of your research like which</font>

1089
00:46:29,680 --> 00:46:35,589
<font color="#CCCCCC">vendor like either the source code for</font>

1090
00:46:33,090 --> 00:46:38,860
what you did or like<font color="#E5E5E5"> the results or</font>

1091
00:46:35,590 --> 00:46:40,900
something like<font color="#E5E5E5"> that yeah well obviously</font>

1092
00:46:38,860 --> 00:46:43,510
we're<font color="#E5E5E5"> doing research</font><font color="#CCCCCC"> so I'll just learn</font>

1093
00:46:40,900 --> 00:46:46,390
<font color="#E5E5E5">from it right so we're releasing as much</font>

1094
00:46:43,510 --> 00:46:48,250
as we can<font color="#CCCCCC"> the the application the</font>

1095
00:46:46,390 --> 00:46:51,330
Android<font color="#CCCCCC"> application that's open source</font>

1096
00:46:48,250 --> 00:46:54,070
<font color="#E5E5E5">so we can do whatever you want with</font><font color="#CCCCCC"> that</font>

1097
00:46:51,330 --> 00:46:56,830
<font color="#E5E5E5">we also released the actual measurements</font>

1098
00:46:54,070 --> 00:46:58,990
behind this table<font color="#CCCCCC"> to each</font><font color="#E5E5E5"> of the vendors</font>

1099
00:46:56,830 --> 00:47:01,600
<font color="#E5E5E5">affected so that they know what the</font>

1100
00:46:58,990 --> 00:47:05,500
individual gaps are<font color="#E5E5E5"> and we started some</font>

1101
00:47:01,600 --> 00:47:07,930
really good dialogues wisdom<font color="#E5E5E5"> around</font><font color="#CCCCCC"> how</font>

1102
00:47:05,500 --> 00:47:10,090
those gaps came about they also helped

1103
00:47:07,930 --> 00:47:12,160
us understand<font color="#E5E5E5"> that in a few cases we</font>

1104
00:47:10,090 --> 00:47:14,440
measured wrong right<font color="#E5E5E5"> it's a super good</font>

1105
00:47:12,160 --> 00:47:16,359
<font color="#E5E5E5">dialogue</font><font color="#CCCCCC"> while this dialogue is</font>

1106
00:47:14,440 --> 00:47:18,160
happening and while we're learning from

1107
00:47:16,360 --> 00:47:20,260
<font color="#CCCCCC">each other</font><font color="#E5E5E5"> so much</font><font color="#CCCCCC"> I don't think</font><font color="#E5E5E5"> I'd</font>

1108
00:47:18,160 --> 00:47:22,600
want<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make the raw data public because</font>

1109
00:47:20,260 --> 00:47:25,750
it's only going to trip off<font color="#CCCCCC"> the wrong</font>

1110
00:47:22,600 --> 00:47:27,940
people into exploiting you know<font color="#E5E5E5"> adding</font>

1111
00:47:25,750 --> 00:47:30,730
some some of those to their own exploit

1112
00:47:27,940 --> 00:47:32,710
<font color="#CCCCCC">reins right</font><font color="#E5E5E5"> so I want to give the</font><font color="#CCCCCC"> vendor</font>

1113
00:47:30,730 --> 00:47:34,480
some time to respond to<font color="#CCCCCC"> this because</font>

1114
00:47:32,710 --> 00:47:36,550
<font color="#E5E5E5">they didn't have</font><font color="#CCCCCC"> very much responsible</font>

1115
00:47:34,480 --> 00:47:41,140
disclosure time at all they only saw

1116
00:47:36,550 --> 00:47:42,730
this data<font color="#E5E5E5"> about a week ago yeah but at</font>

1117
00:47:41,140 --> 00:47:45,160
the end I<font color="#CCCCCC"> mean we are</font><font color="#E5E5E5"> working for the</font>

1118
00:47:42,730 --> 00:47:48,390
community<font color="#CCCCCC"> right I mean this data is for</font>

1119
00:47:45,160 --> 00:47:51,940
you and<font color="#E5E5E5"> we'll share it as much as we can</font>

1120
00:47:48,390 --> 00:47:55,089
there was one question over<font color="#E5E5E5"> there I just</font>

1121
00:47:51,940 --> 00:47:56,980
installed<font color="#E5E5E5"> your app and when I started it</font>

1122
00:47:55,090 --> 00:48:00,640
up<font color="#E5E5E5"> it asked for Super User permissions</font>

1123
00:47:56,980 --> 00:48:03,010
<font color="#E5E5E5">and I wondered why it was doing</font><font color="#CCCCCC"> that</font>

1124
00:48:00,640 --> 00:48:06,609
<font color="#E5E5E5">yeah you</font><font color="#CCCCCC"> were wonderful few users</font><font color="#E5E5E5"> then</font>

1125
00:48:03,010 --> 00:48:08,350
who has a rooted phone<font color="#CCCCCC"> so of</font><font color="#E5E5E5"> course</font><font color="#CCCCCC"> most</font>

1126
00:48:06,610 --> 00:48:10,360
<font color="#CCCCCC">phones are not rooted</font><font color="#E5E5E5"> anymore and we</font>

1127
00:48:08,350 --> 00:48:13,089
wouldn't advise<font color="#CCCCCC"> it right</font><font color="#E5E5E5"> because we we</font>

1128
00:48:10,360 --> 00:48:14,650
<font color="#E5E5E5">have seen a bunch of malware actually</font>

1129
00:48:13,090 --> 00:48:16,930
looking for root permissions and<font color="#CCCCCC"> efforts</font>

1130
00:48:14,650 --> 00:48:20,220
<font color="#CCCCCC">they're</font><font color="#E5E5E5"> even better let's just exploit</font>

1131
00:48:16,930 --> 00:48:22,990
<font color="#CCCCCC">that but if you do have a rooted phone</font>

1132
00:48:20,220 --> 00:48:26,290
<font color="#E5E5E5">then this app does a lot more than just</font>

1133
00:48:22,990 --> 00:48:29,620
patch<font color="#CCCCCC"> level analysis you can see here in</font>

1134
00:48:26,290 --> 00:48:29,950
the pictures that you<font color="#CCCCCC"> can measure the</font>

1135
00:48:29,620 --> 00:48:31,690
end

1136
00:48:29,950 --> 00:48:34,180
<font color="#CCCCCC">Crypton properties</font><font color="#E5E5E5"> of your network and</font>

1137
00:48:31,690 --> 00:48:36,880
you will be<font color="#CCCCCC"> alerted when</font><font color="#E5E5E5"> you're latched</font>

1138
00:48:34,180 --> 00:48:39,759
<font color="#E5E5E5">on to an</font><font color="#CCCCCC"> mg catcher like a fake base</font>

1139
00:48:36,880 --> 00:48:42,550
station<font color="#E5E5E5"> but in order to get kind</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font>

1140
00:48:39,760 --> 00:48:45,070
raw<font color="#CCCCCC"> network measurements</font><font color="#E5E5E5"> to find those</font>

1141
00:48:42,550 --> 00:48:46,750
<font color="#E5E5E5">MZ catchers we need root permissions we</font>

1142
00:48:45,070 --> 00:48:51,280
need to read<font color="#E5E5E5"> from a file that's not</font>

1143
00:48:46,750 --> 00:48:53,680
usually readable right yeah so<font color="#E5E5E5"> so sorry</font>

1144
00:48:51,280 --> 00:48:55,359
for for conflating different things if

1145
00:48:53,680 --> 00:48:57,098
you came to<font color="#E5E5E5"> this app was a rooted</font><font color="#CCCCCC"> phone</font>

1146
00:48:55,359 --> 00:48:59,950
and only<font color="#E5E5E5"> wanted to do the patch level</font>

1147
00:48:57,099 --> 00:49:12,160
analysis then I guess you got more<font color="#CCCCCC"> than</font>

1148
00:48:59,950 --> 00:49:13,540
you<font color="#E5E5E5"> asked for other questions well we're</font>

1149
00:49:12,160 --> 00:49:15,970
obviously<font color="#E5E5E5"> around for the rest of today</font>

1150
00:49:13,540 --> 00:49:19,450
so come<font color="#E5E5E5"> speak to</font><font color="#CCCCCC"> us if here</font><font color="#E5E5E5"> if you're</font>

1151
00:49:15,970 --> 00:49:21,080
too shy<font color="#CCCCCC"> to</font><font color="#E5E5E5"> ask your questions now</font><font color="#CCCCCC"> and</font>

1152
00:49:19,450 --> 00:49:21,620
yeah thanks again

1153
00:49:21,080 --> 00:49:23,509
[Applause]

1154
00:49:21,620 --> 00:49:26,719
[Music]

1155
00:49:23,510 --> 00:49:26,719
[Applause]

