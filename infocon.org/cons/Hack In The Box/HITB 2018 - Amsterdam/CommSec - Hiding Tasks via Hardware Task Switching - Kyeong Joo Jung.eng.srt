1
00:00:00,000 --> 00:00:02,029
<font color="#CCCCCC">Oh</font>

2
00:00:04,920 --> 00:00:06,980
you

3
00:00:12,910 --> 00:00:23,830
good morning everyone um is<font color="#E5E5E5"> it working</font>

4
00:00:17,640 --> 00:00:26,650
yeah it's long okay thank<font color="#E5E5E5"> you for coming</font>

5
00:00:23,830 --> 00:00:29,680
<font color="#CCCCCC">I think there are</font><font color="#E5E5E5"> more people</font><font color="#CCCCCC"> than</font><font color="#E5E5E5"> I</font>

6
00:00:26,650 --> 00:00:34,379
<font color="#CCCCCC">expected because</font><font color="#E5E5E5"> maybe</font><font color="#CCCCCC"> yesterday people</font>

7
00:00:29,680 --> 00:00:34,379
might have some night in Amsterdam

8
00:00:34,500 --> 00:00:40,360
<font color="#E5E5E5">thanks for coming my name is Gong Joo</font>

9
00:00:37,180 --> 00:00:43,090
<font color="#E5E5E5">Jung and I'm a master</font><font color="#CCCCCC"> student in student</font>

10
00:00:40,360 --> 00:00:48,820
<font color="#CCCCCC">of Stony Brook University</font><font color="#E5E5E5"> and I'm also</font>

11
00:00:43,090 --> 00:00:51,909
<font color="#E5E5E5">in a team called</font><font color="#CCCCCC"> agile</font><font color="#E5E5E5"> and before I</font>

12
00:00:48,820 --> 00:00:56,080
begin<font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to introduce my</font><font color="#CCCCCC"> team</font>

13
00:00:51,909 --> 00:01:01,300
it's called<font color="#CCCCCC"> auditor it means guys who</font>

14
00:00:56,080 --> 00:01:05,289
acts like old<font color="#E5E5E5"> people</font><font color="#CCCCCC"> in Korean and we</font>

15
00:01:01,300 --> 00:01:06,640
mainly work for researching on<font color="#CCCCCC"> malware's</font>

16
00:01:05,290 --> 00:01:10,720
<font color="#E5E5E5">and rootkits</font>

17
00:01:06,640 --> 00:01:15,220
and<font color="#CCCCCC"> i would like</font><font color="#E5E5E5"> to thank them for</font>

18
00:01:10,720 --> 00:01:21,189
<font color="#CCCCCC">having me here to present the works</font><font color="#E5E5E5"> and</font>

19
00:01:15,220 --> 00:01:23,408
also<font color="#E5E5E5"> my advisor in Stoneybrook you can</font>

20
00:01:21,189 --> 00:01:27,610
send me an email<font color="#CCCCCC"> if you have any</font>

21
00:01:23,409 --> 00:01:31,960
questions<font color="#E5E5E5"> or feedback you and</font><font color="#CCCCCC"> also I</font>

22
00:01:27,610 --> 00:01:34,359
thank the<font color="#E5E5E5"> a chai tea</font><font color="#CCCCCC"> V board members and</font>

23
00:01:31,960 --> 00:01:39,038
the<font color="#CCCCCC"> staffs for</font><font color="#E5E5E5"> having me presentation</font>

24
00:01:34,359 --> 00:01:42,089
here<font color="#E5E5E5"> and</font><font color="#CCCCCC"> let's begin</font><font color="#E5E5E5"> these are the</font>

25
00:01:39,039 --> 00:01:45,189
<font color="#E5E5E5">contents of tables of contents</font>

26
00:01:42,090 --> 00:01:50,200
introduction explanation results

27
00:01:45,189 --> 00:01:53,350
conclusion and Q&A when we think of

28
00:01:50,200 --> 00:01:57,399
hiding<font color="#E5E5E5"> tasks we think of we mainly think</font>

29
00:01:53,350 --> 00:02:01,719
of<font color="#E5E5E5"> rootkits and malware's right but</font>

30
00:01:57,399 --> 00:02:05,249
let's<font color="#E5E5E5"> don't think about this</font><font color="#CCCCCC"> today</font><font color="#E5E5E5"> we</font>

31
00:02:01,719 --> 00:02:08,109
focused on researching finding<font color="#E5E5E5"> some</font>

32
00:02:05,249 --> 00:02:13,060
unused features<font color="#CCCCCC"> that are still remaining</font>

33
00:02:08,110 --> 00:02:16,170
<font color="#E5E5E5">on computers and to do that we found out</font>

34
00:02:13,060 --> 00:02:18,310
something<font color="#E5E5E5"> called</font><font color="#CCCCCC"> task</font><font color="#E5E5E5"> switching method</font>

35
00:02:16,170 --> 00:02:22,750
maybe everybody knows what task

36
00:02:18,310 --> 00:02:24,390
switching is is something<font color="#E5E5E5"> it's something</font>

37
00:02:22,750 --> 00:02:25,959
to make the computer<font color="#E5E5E5"> look like</font>

38
00:02:24,390 --> 00:02:33,040
<font color="#E5E5E5">multitasking</font>

39
00:02:25,959 --> 00:02:35,500
so yeah computers are so fast<font color="#E5E5E5"> that if</font>

40
00:02:33,040 --> 00:02:37,659
you switch tasks<font color="#CCCCCC"> it looks</font><font color="#E5E5E5"> like they're</font>

41
00:02:35,500 --> 00:02:39,819
<font color="#CCCCCC">working at the same time that's what we</font>

42
00:02:37,659 --> 00:02:44,560
know about the<font color="#CCCCCC"> task switching and let's</font>

43
00:02:39,819 --> 00:02:46,689
go a little<font color="#CCCCCC"> bit deeper inside there</font><font color="#E5E5E5"> are</font>

44
00:02:44,560 --> 00:02:48,879
<font color="#E5E5E5">two types of hardware there are two</font>

45
00:02:46,689 --> 00:02:51,219
types of task switching methods<font color="#E5E5E5"> and the</font>

46
00:02:48,879 --> 00:02:53,858
first one is the hardware<font color="#E5E5E5"> test switching</font>

47
00:02:51,219 --> 00:02:56,858
and<font color="#CCCCCC"> the second one is the software test</font>

48
00:02:53,859 --> 00:02:58,540
switching and the first one<font color="#E5E5E5"> the hardware</font>

49
00:02:56,859 --> 00:03:02,739
test switching it was used until<font color="#E5E5E5"> the</font>

50
00:02:58,540 --> 00:03:07,358
<font color="#E5E5E5">only</font><font color="#CCCCCC"> the Windows 3.1 which I</font><font color="#E5E5E5"> think I was</font>

51
00:03:02,739 --> 00:03:11,109
born around<font color="#CCCCCC"> that time and it's used for</font>

52
00:03:07,359 --> 00:03:14,439
32 bits<font color="#CCCCCC"> and it uses</font><font color="#E5E5E5"> the structures</font>

53
00:03:11,109 --> 00:03:18,969
<font color="#E5E5E5">defined by the CPU manufacturers and</font><font color="#CCCCCC"> in</font>

54
00:03:14,439 --> 00:03:21,638
access<font color="#CCCCCC"> to the CPU directly</font><font color="#E5E5E5"> but in other</font>

55
00:03:18,969 --> 00:03:26,290
words for the software<font color="#E5E5E5"> test task</font>

56
00:03:21,639 --> 00:03:32,680
switching it uses it is<font color="#CCCCCC"> used until today</font>

57
00:03:26,290 --> 00:03:35,470
<font color="#E5E5E5">and it's for the 64 bits and</font><font color="#CCCCCC"> OS</font><font color="#E5E5E5"> this</font>

58
00:03:32,680 --> 00:03:38,760
method is true this structure<font color="#E5E5E5"> is defined</font>

59
00:03:35,470 --> 00:03:43,599
<font color="#E5E5E5">by the OS and it does not directly</font>

60
00:03:38,760 --> 00:03:45,519
<font color="#CCCCCC">access to the CPU however the OS itself</font>

61
00:03:43,599 --> 00:03:49,268
manages<font color="#E5E5E5"> everything about the test</font>

62
00:03:45,519 --> 00:03:53,560
<font color="#E5E5E5">reaching and about the management</font><font color="#CCCCCC"> of the</font>

63
00:03:49,269 --> 00:03:56,349
computer so to summarize what I want to

64
00:03:53,560 --> 00:03:58,870
say is that hardware test switching is

65
00:03:56,349 --> 00:04:01,959
something not used<font color="#E5E5E5"> today but still</font>

66
00:03:58,870 --> 00:04:05,169
<font color="#E5E5E5">remaining and software task switching is</font>

67
00:04:01,959 --> 00:04:07,750
something we<font color="#CCCCCC"> are using today</font><font color="#E5E5E5"> so one</font>

68
00:04:05,169 --> 00:04:11,379
question<font color="#E5E5E5"> then do you</font><font color="#CCCCCC"> think the hardware</font>

69
00:04:07,750 --> 00:04:14,769
test switching disappeared<font color="#E5E5E5"> yeah the</font>

70
00:04:11,379 --> 00:04:17,918
<font color="#E5E5E5">answer is no it's because of the</font>

71
00:04:14,769 --> 00:04:19,509
compatibility<font color="#E5E5E5"> the CPU should</font><font color="#CCCCCC"> have</font>

72
00:04:17,918 --> 00:04:23,380
because there's still<font color="#E5E5E5"> lots of</font><font color="#CCCCCC"> people</font>

73
00:04:19,509 --> 00:04:25,990
using<font color="#E5E5E5"> the 32-bit computers so we're</font>

74
00:04:23,380 --> 00:04:31,870
focusing on this fact<font color="#E5E5E5"> that</font><font color="#CCCCCC"> we're not</font>

75
00:04:25,990 --> 00:04:35,590
<font color="#E5E5E5">using this feature yes you're trying to</font>

76
00:04:31,870 --> 00:04:37,630
<font color="#E5E5E5">use</font><font color="#CCCCCC"> Hardware hardware</font><font color="#E5E5E5"> test task</font>

77
00:04:35,590 --> 00:04:38,869
switching<font color="#E5E5E5"> with the software test</font>

78
00:04:37,630 --> 00:04:43,480
switching

79
00:04:38,870 --> 00:04:46,970
I know it's<font color="#E5E5E5"> quite hard</font><font color="#CCCCCC"> to understand I</font>

80
00:04:43,480 --> 00:04:50,870
will explain<font color="#CCCCCC"> more about it</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> can see</font>

81
00:04:46,970 --> 00:04:52,850
on the right<font color="#CCCCCC"> side</font><font color="#E5E5E5"> it is</font><font color="#CCCCCC"> said software</font>

82
00:04:50,870 --> 00:04:54,650
test switching and on the left<font color="#E5E5E5"> side is</font>

83
00:04:52,850 --> 00:04:58,010
called<font color="#CCCCCC"> the hardware test switching</font>

84
00:04:54,650 --> 00:05:00,530
currently it's like in the red box<font color="#CCCCCC"> we</font>

85
00:04:58,010 --> 00:05:03,500
use this as the software test reaching

86
00:05:00,530 --> 00:05:05,750
but what you're trying<font color="#CCCCCC"> to do is we're</font>

87
00:05:03,500 --> 00:05:11,139
<font color="#CCCCCC">trying to manually operate the hardware</font>

88
00:05:05,750 --> 00:05:14,720
test switching<font color="#E5E5E5"> like this if this happens</font>

89
00:05:11,139 --> 00:05:15,710
<font color="#E5E5E5">what's so cool about this is that</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> told</font>

90
00:05:14,720 --> 00:05:18,560
<font color="#E5E5E5">you guys</font><font color="#CCCCCC"> that</font>

91
00:05:15,710 --> 00:05:20,419
<font color="#E5E5E5">OS operates everything and manages</font>

92
00:05:18,560 --> 00:05:22,960
everything<font color="#E5E5E5"> but if the hardware test</font>

93
00:05:20,419 --> 00:05:26,330
<font color="#E5E5E5">which happens always won't be able</font><font color="#CCCCCC"> to</font>

94
00:05:22,960 --> 00:05:29,919
<font color="#E5E5E5">notice anything about the</font><font color="#CCCCCC"> tasks</font><font color="#E5E5E5"> running</font>

95
00:05:26,330 --> 00:05:34,130
inside<font color="#CCCCCC"> the hardware test switching and</font>

96
00:05:29,919 --> 00:05:36,799
to manually operate<font color="#CCCCCC"> the hardware test</font>

97
00:05:34,130 --> 00:05:40,490
switching<font color="#E5E5E5"> we need to achieve the ring</font>

98
00:05:36,800 --> 00:05:44,960
<font color="#E5E5E5">zero authority to do that</font><font color="#CCCCCC"> we installed</font>

99
00:05:40,490 --> 00:05:48,410
the driver and after achieving<font color="#E5E5E5"> the ring</font>

100
00:05:44,960 --> 00:05:53,359
<font color="#CCCCCC">zero</font><font color="#E5E5E5"> we modified the global descriptor</font>

101
00:05:48,410 --> 00:05:57,050
table<font color="#E5E5E5"> and test state segments and then</font>

102
00:05:53,360 --> 00:06:03,039
if we have that we<font color="#CCCCCC"> can use our</font><font color="#E5E5E5"> own</font><font color="#CCCCCC"> task</font>

103
00:05:57,050 --> 00:06:03,039
<font color="#CCCCCC">to for the hardware test switching I</font>

104
00:06:04,720 --> 00:06:10,160
know it's hard to understand so I

105
00:06:07,250 --> 00:06:12,320
prepared<font color="#CCCCCC"> the</font><font color="#E5E5E5"> video in the screen</font><font color="#CCCCCC"> you</font>

106
00:06:10,160 --> 00:06:16,880
might<font color="#E5E5E5"> see some kind of events happening</font>

107
00:06:12,320 --> 00:06:20,599
and just<font color="#CCCCCC"> think this as the normal users</font>

108
00:06:16,880 --> 00:06:23,360
perspective<font color="#E5E5E5"> for the computer you're even</font>

109
00:06:20,599 --> 00:06:26,659
eating a french fries and look at the

110
00:06:23,360 --> 00:06:35,450
beer over<font color="#CCCCCC"> here and you can see the beer</font>

111
00:06:26,660 --> 00:06:38,150
disappeared what this shows<font color="#E5E5E5"> is that OS</font>

112
00:06:35,450 --> 00:06:40,190
doesn't<font color="#CCCCCC"> know what happens when the</font>

113
00:06:38,150 --> 00:06:43,340
hardware<font color="#CCCCCC"> tests which happens</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> like</font>

114
00:06:40,190 --> 00:06:45,289
the beer disappeared<font color="#E5E5E5"> french fries we</font>

115
00:06:43,340 --> 00:06:48,049
know who did it<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the beer we don't</font>

116
00:06:45,289 --> 00:06:51,659
know who<font color="#E5E5E5"> did who dis who stole</font><font color="#CCCCCC"> the beer</font>

117
00:06:48,050 --> 00:06:55,900
that's<font color="#E5E5E5"> what we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> trying to do</font>

118
00:06:51,660 --> 00:06:59,770
and of course<font color="#E5E5E5"> stealing the beer itself</font>

119
00:06:55,900 --> 00:07:02,260
is too noticeable<font color="#CCCCCC"> so what if we do</font>

120
00:06:59,770 --> 00:07:05,070
something<font color="#E5E5E5"> unnoticeable like stealing</font><font color="#CCCCCC"> CPU</font>

121
00:07:02,260 --> 00:07:11,460
resources<font color="#E5E5E5"> that's why we thought of and</font>

122
00:07:05,070 --> 00:07:17,050
that's the basic<font color="#E5E5E5"> concept of our research</font>

123
00:07:11,460 --> 00:07:20,739
<font color="#E5E5E5">and I spent a lot</font><font color="#CCCCCC"> of time</font><font color="#E5E5E5"> explaining</font>

124
00:07:17,050 --> 00:07:23,710
<font color="#CCCCCC">about our concept let's go a</font><font color="#E5E5E5"> little bit</font>

125
00:07:20,740 --> 00:07:29,370
deep into the<font color="#E5E5E5"> hardware test switching</font>

126
00:07:23,710 --> 00:07:32,469
method<font color="#CCCCCC"> I will</font><font color="#E5E5E5"> start with the terminology</font>

127
00:07:29,370 --> 00:07:34,210
<font color="#E5E5E5">inside the global</font><font color="#CCCCCC"> task global descriptor</font>

128
00:07:32,470 --> 00:07:37,950
table<font color="#CCCCCC"> there are lots of information</font>

129
00:07:34,210 --> 00:07:41,140
about systems but we're<font color="#E5E5E5"> trying to use</font>

130
00:07:37,950 --> 00:07:44,289
one of those called TSS descriptor

131
00:07:41,140 --> 00:07:47,289
<font color="#E5E5E5">justice descriptor is something that</font>

132
00:07:44,290 --> 00:07:52,690
shows<font color="#E5E5E5"> the information the address of the</font>

133
00:07:47,290 --> 00:07:56,140
TSS what TSS is called task state

134
00:07:52,690 --> 00:07:58,960
segment<font color="#E5E5E5"> it is defined by</font><font color="#CCCCCC"> the CPU</font>

135
00:07:56,140 --> 00:08:03,070
manufacturers and<font color="#CCCCCC"> it saves the states of</font>

136
00:07:58,960 --> 00:08:07,390
the<font color="#E5E5E5"> task</font><font color="#CCCCCC"> and with this information or</font>

137
00:08:03,070 --> 00:08:11,260
<font color="#CCCCCC">states the CPU uses this TSS information</font>

138
00:08:07,390 --> 00:08:17,140
to operate the<font color="#E5E5E5"> task and we can say</font><font color="#CCCCCC"> that</font>

139
00:08:11,260 --> 00:08:20,530
TSS<font color="#CCCCCC"> each task has one TSS</font><font color="#E5E5E5"> no more or no</font>

140
00:08:17,140 --> 00:08:24,580
less than that<font color="#CCCCCC"> one one task</font><font color="#E5E5E5"> should have</font>

141
00:08:20,530 --> 00:08:29,729
one TSS<font color="#CCCCCC"> and what we are trying</font><font color="#E5E5E5"> to do is</font>

142
00:08:24,580 --> 00:08:33,819
we<font color="#E5E5E5"> created our own TSS called my TSS and</font>

143
00:08:29,729 --> 00:08:38,169
we made yes the TSS descriptor<font color="#E5E5E5"> to</font><font color="#CCCCCC"> hear</font>

144
00:08:33,820 --> 00:08:43,360
<font color="#E5E5E5">to point this address and when we</font>

145
00:08:38,169 --> 00:08:48,339
trigger the<font color="#E5E5E5"> jump or call instruction it</font>

146
00:08:43,360 --> 00:08:53,740
will automatically switch the TSS to my

147
00:08:48,339 --> 00:08:57,910
TSS to operate our<font color="#E5E5E5"> own</font><font color="#CCCCCC"> task if we</font>

148
00:08:53,740 --> 00:09:00,250
trigger it will go to<font color="#E5E5E5"> my task</font><font color="#CCCCCC"> if if we</font>

149
00:08:57,910 --> 00:09:01,459
just finish our task it goes back to the

150
00:09:00,250 --> 00:09:07,970
normal<font color="#CCCCCC"> task</font>

151
00:09:01,460 --> 00:09:10,399
that's what we're trying to<font color="#E5E5E5"> do here yeah</font>

152
00:09:07,970 --> 00:09:14,089
the previous figures were just for

153
00:09:10,399 --> 00:09:16,580
explanation in the real world<font color="#CCCCCC"> in</font><font color="#E5E5E5"> Windows</font>

154
00:09:14,089 --> 00:09:21,230
<font color="#CCCCCC">there total of</font><font color="#E5E5E5"> 40 SSS</font>

155
00:09:16,580 --> 00:09:26,390
in Linux there<font color="#E5E5E5"> are two</font><font color="#CCCCCC"> PS as this and if</font>

156
00:09:21,230 --> 00:09:31,220
it is stated as busy then it means that

157
00:09:26,390 --> 00:09:34,370
that particular TSS<font color="#E5E5E5"> is being used and</font>

158
00:09:31,220 --> 00:09:37,279
the<font color="#CCCCCC"> rest</font><font color="#E5E5E5"> of them will be stated as</font>

159
00:09:34,370 --> 00:09:42,200
available<font color="#E5E5E5"> and our team modified the</font>

160
00:09:37,279 --> 00:09:45,080
second one<font color="#E5E5E5"> over there 51 and the 31 30</font>

161
00:09:42,200 --> 00:09:49,880
first one<font color="#E5E5E5"> you're trying</font><font color="#CCCCCC"> to modify</font><font color="#E5E5E5"> that</font>

162
00:09:45,080 --> 00:09:52,810
TSS to look like<font color="#E5E5E5"> this we will use</font><font color="#CCCCCC"> that</font>

163
00:09:49,880 --> 00:09:56,330
TSS descriptor to show it busy

164
00:09:52,810 --> 00:09:59,060
and whenever<font color="#E5E5E5"> we operate the hardware</font>

165
00:09:56,330 --> 00:10:04,839
test switching it will simply<font color="#E5E5E5"> change to</font>

166
00:09:59,060 --> 00:10:09,770
like this<font color="#E5E5E5"> busy available busy available</font>

167
00:10:04,839 --> 00:10:11,990
yet this was the explanation and<font color="#CCCCCC"> I will</font>

168
00:10:09,770 --> 00:10:15,050
show<font color="#E5E5E5"> you the result what we have done</font>

169
00:10:11,990 --> 00:10:18,050
<font color="#E5E5E5">maybe it might not be so easy</font><font color="#CCCCCC"> to</font>

170
00:10:15,050 --> 00:10:22,790
understand it's much better<font color="#CCCCCC"> to see some</font>

171
00:10:18,050 --> 00:10:27,290
results the descriptor over there and

172
00:10:22,790 --> 00:10:30,469
<font color="#CCCCCC">the</font><font color="#E5E5E5"> peak the first which is written busy</font>

173
00:10:27,290 --> 00:10:34,370
that's the normal task and the task is

174
00:10:30,470 --> 00:10:38,000
printing before<font color="#E5E5E5"> test switching and my</font>

175
00:10:34,370 --> 00:10:44,240
TSS at the second it prints out<font color="#E5E5E5"> show me</font>

176
00:10:38,000 --> 00:10:47,170
<font color="#CCCCCC">the other day</font><font color="#E5E5E5"> and just like I said</font><font color="#CCCCCC"> if I</font>

177
00:10:44,240 --> 00:10:51,470
trigger<font color="#E5E5E5"> the jump or a call instruction</font>

178
00:10:47,170 --> 00:10:55,849
<font color="#E5E5E5">it will automatically switch to my TSS</font>

179
00:10:51,470 --> 00:10:57,800
to operate hours and tasks like this<font color="#E5E5E5"> if</font>

180
00:10:55,850 --> 00:11:01,670
once it's done it will<font color="#CCCCCC"> go back to the</font>

181
00:10:57,800 --> 00:11:05,899
normal TSS<font color="#E5E5E5"> to print out this kind of</font>

182
00:11:01,670 --> 00:11:11,089
<font color="#E5E5E5">things it's the simple harder test</font>

183
00:11:05,899 --> 00:11:14,670
switching method and we have done this

184
00:11:11,089 --> 00:11:18,600
in<font color="#E5E5E5"> Windows and Linux</font><font color="#CCCCCC"> and we</font><font color="#E5E5E5"> succeeded it</font>

185
00:11:14,670 --> 00:11:24,300
I know it's hard so I prepared another

186
00:11:18,600 --> 00:11:29,220
demo video of this<font color="#CCCCCC"> its XP he's so</font><font color="#E5E5E5"> own</font>

187
00:11:24,300 --> 00:11:31,650
right on the<font color="#E5E5E5"> left yeah</font><font color="#CCCCCC"> left side you can</font>

188
00:11:29,220 --> 00:11:34,980
see a some program called<font color="#E5E5E5"> installed</font>

189
00:11:31,650 --> 00:11:39,000
driver<font color="#CCCCCC"> and we install our driver</font><font color="#E5E5E5"> on</font>

190
00:11:34,980 --> 00:11:40,290
driver to achieve the ring zero<font color="#E5E5E5"> and then</font>

191
00:11:39,000 --> 00:11:43,590
once we get it

192
00:11:40,290 --> 00:11:48,630
the driver modest modifies the GDP and

193
00:11:43,590 --> 00:11:51,180
TSS<font color="#CCCCCC"> and it also has our tasks in it on</font>

194
00:11:48,630 --> 00:11:53,670
the<font color="#CCCCCC"> right</font><font color="#E5E5E5"> side it is called the windows</font>

195
00:11:51,180 --> 00:11:56,010
debugger<font color="#CCCCCC"> and it will automatically</font>

196
00:11:53,670 --> 00:11:59,400
prints out what the task is doing inside

197
00:11:56,010 --> 00:12:04,080
<font color="#CCCCCC">the driver</font><font color="#E5E5E5"> and there are two tasks in</font>

198
00:11:59,400 --> 00:12:07,410
the driver now for the demo the<font color="#CCCCCC"> first</font>

199
00:12:04,080 --> 00:12:10,620
one is<font color="#E5E5E5"> just</font><font color="#CCCCCC"> the normal tasks which the</font>

200
00:12:07,410 --> 00:12:14,520
OS can see<font color="#CCCCCC"> it will just</font><font color="#E5E5E5"> create our</font>

201
00:12:10,620 --> 00:12:17,490
function<font color="#E5E5E5"> calling for</font><font color="#CCCCCC"> 2000 lines</font><font color="#E5E5E5"> and then</font>

202
00:12:14,520 --> 00:12:22,319
it will<font color="#E5E5E5"> automatically switch to hardware</font>

203
00:12:17,490 --> 00:12:24,630
test<font color="#E5E5E5"> switching and it will show test</font>

204
00:12:22,320 --> 00:12:27,330
switching for 2,000 lines again<font color="#E5E5E5"> or</font>

205
00:12:24,630 --> 00:12:29,730
<font color="#E5E5E5">according</font><font color="#CCCCCC"> to what I said</font><font color="#E5E5E5"> in the</font>

206
00:12:27,330 --> 00:12:32,130
beginning<font color="#E5E5E5"> since the OS doesn't care</font>

207
00:12:29,730 --> 00:12:36,300
about what<font color="#E5E5E5"> hardware task switching is</font>

208
00:12:32,130 --> 00:12:40,260
doing in the tasks<font color="#E5E5E5"> task management it</font>

209
00:12:36,300 --> 00:12:44,640
won't display any<font color="#E5E5E5"> CPU usages or the</font>

210
00:12:40,260 --> 00:12:50,939
process ID<font color="#CCCCCC"> I think it's much</font><font color="#E5E5E5"> better</font><font color="#CCCCCC"> to</font>

211
00:12:44,640 --> 00:12:52,530
watch here<font color="#E5E5E5"> I start in star and function</font>

212
00:12:50,940 --> 00:12:55,890
<font color="#CCCCCC">cloning which I</font><font color="#E5E5E5"> said it was the normal</font>

213
00:12:52,530 --> 00:12:59,339
<font color="#CCCCCC">tasks you can see that the CPU goes</font><font color="#E5E5E5"> off</font>

214
00:12:55,890 --> 00:13:01,470
to like 60 but<font color="#E5E5E5"> what it reaches 2000 it</font>

215
00:12:59,340 --> 00:13:04,290
switches to<font color="#CCCCCC"> the hardware</font><font color="#E5E5E5"> test switching</font>

216
00:13:01,470 --> 00:13:11,790
and you can see that is like almost<font color="#CCCCCC"> 1/2</font>

217
00:13:04,290 --> 00:13:13,740
<font color="#CCCCCC">for CPU</font><font color="#E5E5E5"> usages once he reaches 2000</font>

218
00:13:11,790 --> 00:13:16,469
lines<font color="#E5E5E5"> it will automatically go back to</font>

219
00:13:13,740 --> 00:13:22,410
the normal<font color="#CCCCCC"> task</font><font color="#E5E5E5"> again and it will print</font>

220
00:13:16,470 --> 00:13:24,660
<font color="#CCCCCC">out again the</font><font color="#E5E5E5"> 60%</font><font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> usages the reason</font>

221
00:13:22,410 --> 00:13:28,850
why I<font color="#CCCCCC"> used the task management</font><font color="#E5E5E5"> is</font>

222
00:13:24,660 --> 00:13:28,850
because from<font color="#E5E5E5"> the normal user perspective</font>

223
00:13:29,589 --> 00:13:35,240
<font color="#CCCCCC">people doesn't know</font><font color="#E5E5E5"> when they think</font>

224
00:13:32,480 --> 00:13:37,759
<font color="#CCCCCC">their computer is suspicious they try</font><font color="#E5E5E5"> to</font>

225
00:13:35,240 --> 00:13:41,060
see what's wrong with<font color="#E5E5E5"> the computer and</font>

226
00:13:37,759 --> 00:13:44,029
they used<font color="#CCCCCC"> task management to see</font><font color="#E5E5E5"> what</font>

227
00:13:41,060 --> 00:13:47,239
process is<font color="#E5E5E5"> going on or whether the CPU</font>

228
00:13:44,029 --> 00:13:52,129
usage<font color="#CCCCCC"> is too much</font><font color="#E5E5E5"> that's why we used the</font>

229
00:13:47,240 --> 00:13:54,519
<font color="#CCCCCC">task management</font><font color="#E5E5E5"> to check it and after</font>

230
00:13:52,129 --> 00:13:56,990
this video<font color="#CCCCCC"> is showing the hardware</font>

231
00:13:54,519 --> 00:14:00,709
<font color="#E5E5E5">manually operating the hardware test</font>

232
00:13:56,990 --> 00:14:03,319
switching is working so we try to<font color="#CCCCCC"> also</font>

233
00:14:00,709 --> 00:14:07,219
use<font color="#E5E5E5"> the detection tools like malware</font>

234
00:14:03,319 --> 00:14:10,399
tools or rootkit tools<font color="#E5E5E5"> to see if they</font>

235
00:14:07,220 --> 00:14:15,170
<font color="#E5E5E5">can detect our modification of GDP and</font>

236
00:14:10,399 --> 00:14:18,410
TSS<font color="#CCCCCC"> and the result</font><font color="#E5E5E5"> was</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> tried</font>

237
00:14:15,170 --> 00:14:25,519
many<font color="#E5E5E5"> tools but none of those fine found</font>

238
00:14:18,410 --> 00:14:28,579
our modification yeah and this shows

239
00:14:25,519 --> 00:14:31,249
that there's no detection<font color="#E5E5E5"> tool for</font>

240
00:14:28,579 --> 00:14:35,628
<font color="#E5E5E5">there's currently no two techniques that</font>

241
00:14:31,249 --> 00:14:46,069
<font color="#E5E5E5">detects the modification of GDP or or</font>

242
00:14:35,629 --> 00:14:48,589
the TSS and<font color="#CCCCCC"> back to our basic idea</font><font color="#E5E5E5"> the</font>

243
00:14:46,069 --> 00:14:52,759
previous slides were to show<font color="#E5E5E5"> the heart</font>

244
00:14:48,589 --> 00:14:56,180
manually manually operating the<font color="#E5E5E5"> hardware</font>

245
00:14:52,759 --> 00:14:59,240
system works but now what we are<font color="#E5E5E5"> trying</font>

246
00:14:56,180 --> 00:15:02,059
<font color="#CCCCCC">to do is what if the hardware scheduler</font>

247
00:14:59,240 --> 00:15:05,629
and<font color="#E5E5E5"> the OS scheduler works at the same</font>

248
00:15:02,059 --> 00:15:10,730
time<font color="#E5E5E5"> what if it coexists at the real</font>

249
00:15:05,629 --> 00:15:14,990
<font color="#E5E5E5">world so we had a experiment of having</font>

250
00:15:10,730 --> 00:15:18,620
<font color="#CCCCCC">OS and the hardware scheduler</font><font color="#E5E5E5"> began</font><font color="#CCCCCC"> B at</font>

251
00:15:14,990 --> 00:15:24,170
the<font color="#E5E5E5"> same time what</font><font color="#CCCCCC"> we were trying to do</font>

252
00:15:18,620 --> 00:15:27,620
is how the task of hardware switching

253
00:15:24,170 --> 00:15:33,709
affects the OS scheduler by measuring

254
00:15:27,620 --> 00:15:40,089
the normal<font color="#E5E5E5"> tasks in OS</font><font color="#CCCCCC"> yeah the graph is</font>

255
00:15:33,709 --> 00:15:40,089
quite dirty<font color="#CCCCCC"> I will explain one by one</font>

256
00:15:40,550 --> 00:15:44,959
I told you that we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> going to measure</font>

257
00:15:42,680 --> 00:15:48,709
<font color="#E5E5E5">the time of the normal</font><font color="#CCCCCC"> tasks</font><font color="#E5E5E5"> right in</font>

258
00:15:44,960 --> 00:15:51,710
the OS and<font color="#CCCCCC"> at the</font><font color="#E5E5E5"> same time your</font><font color="#CCCCCC"> tree</font>

259
00:15:48,710 --> 00:15:55,820
<font color="#CCCCCC">will execute</font><font color="#E5E5E5"> another task using</font><font color="#CCCCCC"> the</font>

260
00:15:51,710 --> 00:15:59,870
hardware task switching<font color="#E5E5E5"> for</font><font color="#CCCCCC"> 10 cases</font>

261
00:15:55,820 --> 00:16:05,390
<font color="#E5E5E5">like this each case is we will increase</font>

262
00:15:59,870 --> 00:16:07,280
<font color="#CCCCCC">the CPU utilization that CPU utilization</font>

263
00:16:05,390 --> 00:16:11,540
is from the hardware test switching

264
00:16:07,280 --> 00:16:15,199
<font color="#E5E5E5">tasks if you increase the lines of</font>

265
00:16:11,540 --> 00:16:23,959
printed lines<font color="#CCCCCC"> that</font><font color="#E5E5E5"> equal the CPU</font>

266
00:16:15,200 --> 00:16:27,530
<font color="#E5E5E5">utilization will go up like</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> and for</font>

267
00:16:23,960 --> 00:16:32,330
<font color="#CCCCCC">the normal</font><font color="#E5E5E5"> tasks in OS we made it to use</font>

268
00:16:27,530 --> 00:16:36,199
<font color="#E5E5E5">only 55% of the CPU usages that means</font>

269
00:16:32,330 --> 00:16:41,690
the user will see only<font color="#E5E5E5"> the</font><font color="#CCCCCC"> 55% in the</font>

270
00:16:36,200 --> 00:16:46,820
<font color="#E5E5E5">task management and but however the</font>

271
00:16:41,690 --> 00:16:50,570
actual CPU with actual required CPU is

272
00:16:46,820 --> 00:16:53,720
<font color="#CCCCCC">the sum of the tasks in hardware's test</font>

273
00:16:50,570 --> 00:16:57,860
<font color="#E5E5E5">reaching and</font><font color="#CCCCCC"> the OS so we add those</font>

274
00:16:53,720 --> 00:17:02,690
together<font color="#E5E5E5"> if you take a look at the line</font>

275
00:16:57,860 --> 00:17:06,349
50 you can<font color="#CCCCCC"> see the equals above 100 what</font>

276
00:17:02,690 --> 00:17:11,890
happens if CPU usage<font color="#E5E5E5"> goes above 100 it</font>

277
00:17:06,349 --> 00:17:18,290
stops<font color="#E5E5E5"> right so we try to measure this in</font>

278
00:17:11,890 --> 00:17:22,670
using the old line timer you<font color="#E5E5E5"> can see</font>

279
00:17:18,290 --> 00:17:26,930
that if the sum of the<font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> utilization</font>

280
00:17:22,670 --> 00:17:29,630
goes above 100 previously it was<font color="#E5E5E5"> almost</font>

281
00:17:26,930 --> 00:17:32,510
a similar<font color="#E5E5E5"> but now it goes too high and</font>

282
00:17:29,630 --> 00:17:36,320
high and high and<font color="#E5E5E5"> so this means the</font><font color="#CCCCCC"> user</font>

283
00:17:32,510 --> 00:17:44,890
has to wait<font color="#E5E5E5"> for that long with only</font><font color="#CCCCCC"> 55</font>

284
00:17:36,320 --> 00:17:49,399
<font color="#CCCCCC">percent of CPU usage yeah</font>

285
00:17:44,890 --> 00:17:59,360
maybe the<font color="#E5E5E5"> required</font><font color="#CCCCCC"> CPU</font><font color="#E5E5E5"> utilization is</font>

286
00:17:49,400 --> 00:18:01,520
above<font color="#CCCCCC"> 100% and if the user rates</font><font color="#E5E5E5"> user we</font>

287
00:17:59,360 --> 00:18:03,799
think that the<font color="#CCCCCC"> computer is suspicious</font>

288
00:18:01,520 --> 00:18:05,480
<font color="#E5E5E5">because it's becoming so slow even</font>

289
00:18:03,799 --> 00:18:10,879
<font color="#CCCCCC">though you're they are using only the</font>

290
00:18:05,480 --> 00:18:13,940
55%<font color="#CCCCCC"> task when you think it's auspicious</font>

291
00:18:10,880 --> 00:18:18,410
<font color="#CCCCCC">they will check their computer using the</font>

292
00:18:13,940 --> 00:18:22,730
detection<font color="#E5E5E5"> tools or the task management</font>

293
00:18:18,410 --> 00:18:28,520
and of<font color="#E5E5E5"> course they cannot detect it but</font>

294
00:18:22,730 --> 00:18:30,470
for from the attacker point of view it's

295
00:18:28,520 --> 00:18:34,400
the<font color="#E5E5E5"> best if they don't know what you're</font>

296
00:18:30,470 --> 00:18:39,669
doing<font color="#CCCCCC"> so</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> why I mentioned this if</font>

297
00:18:34,400 --> 00:18:42,260
and one more thing to tell you<font color="#CCCCCC"> I</font>

298
00:18:39,669 --> 00:18:44,720
measured<font color="#E5E5E5"> the time with online timer and</font>

299
00:18:42,260 --> 00:18:48,610
the OS timer<font color="#E5E5E5"> but you can see that the OS</font>

300
00:18:44,720 --> 00:18:53,179
timer<font color="#CCCCCC"> is almost a similar</font><font color="#E5E5E5"> till the end</font>

301
00:18:48,610 --> 00:18:57,260
<font color="#E5E5E5">what this shows is</font><font color="#CCCCCC"> that actual time it</font>

302
00:18:53,179 --> 00:19:00,250
takes like 76 seconds<font color="#E5E5E5"> but at the end</font><font color="#CCCCCC"> oh</font>

303
00:18:57,260 --> 00:19:05,270
s timer<font color="#E5E5E5"> is the same as the first one</font>

304
00:19:00,250 --> 00:19:08,710
<font color="#E5E5E5">what this shows is</font><font color="#CCCCCC"> that OS timer stops</font>

305
00:19:05,270 --> 00:19:13,000
during the hardware tasks is occurring

306
00:19:08,710 --> 00:19:16,280
and I think this is quite<font color="#E5E5E5"> a big problem</font>

307
00:19:13,000 --> 00:19:18,980
and this is<font color="#CCCCCC"> the line graph</font><font color="#E5E5E5"> of the time</font>

308
00:19:16,280 --> 00:19:21,830
difference<font color="#CCCCCC"> this is the OS timer and this</font>

309
00:19:18,980 --> 00:19:24,919
is the online timer you<font color="#E5E5E5"> can see there is</font>

310
00:19:21,830 --> 00:19:27,620
quite<font color="#E5E5E5"> big difference yeah this is what</font>

311
00:19:24,919 --> 00:19:31,250
the user should think that<font color="#E5E5E5"> the test</font>

312
00:19:27,620 --> 00:19:39,620
should<font color="#CCCCCC"> be taking</font><font color="#E5E5E5"> time but actually</font><font color="#CCCCCC"> is</font>

313
00:19:31,250 --> 00:19:46,570
<font color="#CCCCCC">taking this much yes and to the</font>

314
00:19:39,620 --> 00:19:52,010
conclusion there<font color="#E5E5E5"> are like three problems</font>

315
00:19:46,570 --> 00:19:55,610
<font color="#CCCCCC">it can lead to the</font><font color="#E5E5E5"> first one is</font><font color="#CCCCCC"> that it</font>

316
00:19:52,010 --> 00:19:57,920
gives<font color="#E5E5E5"> the chance to</font><font color="#CCCCCC"> the attackers let's</font>

317
00:19:55,610 --> 00:20:01,040
say that

318
00:19:57,920 --> 00:20:03,430
using the previous<font color="#E5E5E5"> example</font><font color="#CCCCCC"> the normal</font>

319
00:20:01,040 --> 00:20:07,040
users use 50 let's say they<font color="#E5E5E5"> are using</font>

320
00:20:03,430 --> 00:20:11,380
<font color="#CCCCCC">55%</font><font color="#E5E5E5"> that means the attackers have like</font>

321
00:20:07,040 --> 00:20:15,170
<font color="#CCCCCC">45% to use to attack their computers</font>

322
00:20:11,380 --> 00:20:19,640
<font color="#E5E5E5">what if it intrudes the servers or make</font>

323
00:20:15,170 --> 00:20:23,240
<font color="#E5E5E5">Jumby</font><font color="#CCCCCC"> pcs using</font><font color="#E5E5E5"> minor CPU usages then</font>

324
00:20:19,640 --> 00:20:26,990
you might you can you might be able<font color="#E5E5E5"> to</font>

325
00:20:23,240 --> 00:20:31,520
<font color="#E5E5E5">use it as the mining which is very hot</font>

326
00:20:26,990 --> 00:20:35,600
these days of course we didn't do it

327
00:20:31,520 --> 00:20:38,840
<font color="#E5E5E5">because it's too</font><font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> but I would</font>

328
00:20:35,600 --> 00:20:42,169
love to do<font color="#E5E5E5"> that and the second problem</font>

329
00:20:38,840 --> 00:20:45,350
is the<font color="#E5E5E5"> belief in OS everybody thinks</font>

330
00:20:42,170 --> 00:20:47,780
that<font color="#E5E5E5"> the OS is reliable but with the</font>

331
00:20:45,350 --> 00:20:50,929
hardware test glitching it won't be

332
00:20:47,780 --> 00:20:53,590
reliable<font color="#CCCCCC"> anymore because the event log</font>

333
00:20:50,930 --> 00:20:57,380
and the time from the OS won't be

334
00:20:53,590 --> 00:20:59,740
trustful<font color="#E5E5E5"> anymore and inside the</font>

335
00:20:57,380 --> 00:21:04,280
investigation using<font color="#E5E5E5"> the forensics</font><font color="#CCCCCC"> I</font>

336
00:20:59,740 --> 00:21:10,130
think this is a big problem<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> most</font>

337
00:21:04,280 --> 00:21:12,860
<font color="#E5E5E5">big problem is the ring</font><font color="#CCCCCC"> 0 manually</font>

338
00:21:10,130 --> 00:21:16,070
working the hardware test switching was

339
00:21:12,860 --> 00:21:18,649
possible because of the ring<font color="#CCCCCC"> 0</font><font color="#E5E5E5"> without</font>

340
00:21:16,070 --> 00:21:20,870
the ring<font color="#E5E5E5"> 0 Authority</font><font color="#CCCCCC"> you might not be</font>

341
00:21:18,650 --> 00:21:24,080
able to<font color="#CCCCCC"> operate the</font><font color="#E5E5E5"> hardware test</font>

342
00:21:20,870 --> 00:21:27,739
switching manually so what our<font color="#E5E5E5"> team</font>

343
00:21:24,080 --> 00:21:33,199
hoped was to reduce<font color="#CCCCCC"> the power of the</font>

344
00:21:27,740 --> 00:21:37,820
authority<font color="#E5E5E5"> of the ring 0 and the</font>

345
00:21:33,200 --> 00:21:41,660
limitations<font color="#CCCCCC"> it's only for the</font><font color="#E5E5E5"> 32-bit</font><font color="#CCCCCC"> yes</font>

346
00:21:37,820 --> 00:21:44,360
but what I can say that is that<font color="#E5E5E5"> mmm</font>

347
00:21:41,660 --> 00:21:47,720
there's still<font color="#E5E5E5"> many people using 32 bits</font>

348
00:21:44,360 --> 00:21:52,209
of course compared to 64<font color="#E5E5E5"> bits</font><font color="#CCCCCC"> there's</font>

349
00:21:47,720 --> 00:21:56,060
very little but the absolute<font color="#E5E5E5"> number of</font>

350
00:21:52,210 --> 00:21:59,510
computers using<font color="#E5E5E5"> 32 bits</font><font color="#CCCCCC"> there's still a</font>

351
00:21:56,060 --> 00:22:04,070
lot out there<font color="#CCCCCC"> and our team is currently</font>

352
00:21:59,510 --> 00:22:08,450
<font color="#E5E5E5">working on 64 bits as well and hopefully</font>

353
00:22:04,070 --> 00:22:11,080
<font color="#E5E5E5">I hope we can present it in Singapore in</font>

354
00:22:08,450 --> 00:22:11,080
<font color="#CCCCCC">a couple of months</font>

355
00:22:11,470 --> 00:22:22,550
and second<font color="#E5E5E5"> it can be</font><font color="#CCCCCC"> detected if you</font>

356
00:22:17,059 --> 00:22:24,770
scan the memory<font color="#E5E5E5"> but what I want to say</font>

357
00:22:22,550 --> 00:22:27,409
is that normally you just<font color="#E5E5E5"> don't know</font>

358
00:22:24,770 --> 00:22:29,450
they're<font color="#E5E5E5"> not experts like you guys so</font>

359
00:22:27,410 --> 00:22:33,500
they don't know<font color="#E5E5E5"> how to scan the memories</font>

360
00:22:29,450 --> 00:22:36,050
<font color="#E5E5E5">to find these malicious tasks what the</font>

361
00:22:33,500 --> 00:22:39,260
normal users do is just to use the

362
00:22:36,050 --> 00:22:43,178
detection<font color="#E5E5E5"> tools or the task management's</font>

363
00:22:39,260 --> 00:22:47,570
<font color="#E5E5E5">to see what it</font><font color="#CCCCCC"> is wrong or</font><font color="#E5E5E5"> they</font><font color="#CCCCCC"> uh yeah</font>

364
00:22:43,179 --> 00:22:49,760
so from the attacker point of view<font color="#E5E5E5"> if</font>

365
00:22:47,570 --> 00:22:53,809
you don't make it suspicious

366
00:22:49,760 --> 00:22:57,890
<font color="#CCCCCC">like from the previous example if if the</font>

367
00:22:53,809 --> 00:23:01,910
user is using<font color="#CCCCCC"> 55%</font><font color="#E5E5E5"> what if the attacker</font>

368
00:22:57,890 --> 00:23:05,780
use<font color="#E5E5E5"> this less than</font><font color="#CCCCCC"> 45 then there's no</font>

369
00:23:01,910 --> 00:23:11,960
way the user knows about the these

370
00:23:05,780 --> 00:23:14,480
attacks so how would you scan<font color="#E5E5E5"> the memory</font>

371
00:23:11,960 --> 00:23:17,270
to find malicious tasks<font color="#E5E5E5"> if you don't</font>

372
00:23:14,480 --> 00:23:25,900
know it is suspicious<font color="#E5E5E5"> or not that's what</font>

373
00:23:17,270 --> 00:23:31,340
I<font color="#E5E5E5"> think and last is the contribution</font>

374
00:23:25,900 --> 00:23:36,170
<font color="#E5E5E5">first I think we found a new approach</font><font color="#CCCCCC"> of</font>

375
00:23:31,340 --> 00:23:38,570
hiding tasks<font color="#E5E5E5"> and second</font><font color="#CCCCCC"> there so</font><font color="#E5E5E5"> this</font>

376
00:23:36,170 --> 00:23:42,100
<font color="#E5E5E5">can lead to potential dangers in the</font>

377
00:23:38,570 --> 00:23:47,780
future like such as<font color="#E5E5E5"> accessing the files</font>

378
00:23:42,100 --> 00:23:50,360
<font color="#E5E5E5">networks and CPU and the third we showed</font>

379
00:23:47,780 --> 00:23:56,559
<font color="#CCCCCC">that ring zero</font><font color="#E5E5E5"> is powerful much powerful</font>

380
00:23:50,360 --> 00:23:59,419
than we think<font color="#CCCCCC"> and</font><font color="#E5E5E5"> that's it actually</font>

381
00:23:56,559 --> 00:24:01,670
<font color="#CCCCCC">this presentation was my first</font>

382
00:23:59,420 --> 00:24:05,480
<font color="#E5E5E5">conference presentation my whole life</font>

383
00:24:01,670 --> 00:24:10,420
and it was quite nervous<font color="#E5E5E5"> but I hope you</font>

384
00:24:05,480 --> 00:24:10,420
liked it yeah thank you

385
00:24:13,290 --> 00:24:17,800
well done<font color="#CCCCCC"> ok wrong and maybe you're</font><font color="#E5E5E5"> also</font>

386
00:24:16,059 --> 00:24:20,379
ready for<font color="#CCCCCC"> the first</font><font color="#E5E5E5"> questions you've</font>

387
00:24:17,800 --> 00:24:21,909
ever had after presentation<font color="#E5E5E5"> yeah sure</font><font color="#CCCCCC"> ok</font>

388
00:24:20,380 --> 00:24:25,140
<font color="#CCCCCC">anybody got questions for</font><font color="#E5E5E5"> you yeah</font>

389
00:24:21,910 --> 00:24:28,870
you're free<font color="#CCCCCC"> to so my question is about</font>

390
00:24:25,140 --> 00:24:31,360
<font color="#E5E5E5">your results that because you did the</font>

391
00:24:28,870 --> 00:24:34,479
<font color="#E5E5E5">test both on on Windows and UNIX machine</font>

392
00:24:31,360 --> 00:24:38,340
but you<font color="#E5E5E5"> can show the Linux result</font><font color="#CCCCCC"> oh</font><font color="#E5E5E5"> we</font>

393
00:24:34,480 --> 00:24:41,070
because the same<font color="#E5E5E5"> yeah it's the same</font><font color="#CCCCCC"> ok</font>

394
00:24:38,340 --> 00:24:44,980
that was a<font color="#E5E5E5"> great</font><font color="#CCCCCC"> question</font>

395
00:24:41,070 --> 00:24:47,439
any other questions yes here<font color="#CCCCCC"> on</font>

396
00:24:44,980 --> 00:24:50,440
multi-core or SMP systems<font color="#E5E5E5"> there are</font>

397
00:24:47,440 --> 00:24:55,630
multiple<font color="#E5E5E5"> Hardware tasks Oh active at the</font>

398
00:24:50,440 --> 00:24:58,690
<font color="#E5E5E5">same time right yeah our research was</font>

399
00:24:55,630 --> 00:25:00,370
for<font color="#E5E5E5"> just one core not the</font><font color="#CCCCCC"> multi-core ok</font>

400
00:24:58,690 --> 00:25:02,320
<font color="#E5E5E5">because on a</font><font color="#CCCCCC"> multi-course is there</font>

401
00:25:00,370 --> 00:25:04,270
<font color="#E5E5E5">multiple Hardware tasks and maybe one of</font>

402
00:25:02,320 --> 00:25:05,620
yours could still be running while the

403
00:25:04,270 --> 00:25:07,300
operating system is running<font color="#CCCCCC"> but it would</font>

404
00:25:05,620 --> 00:25:08,919
be interesting<font color="#CCCCCC"> to see what</font><font color="#E5E5E5"> kind of you</font>

405
00:25:07,300 --> 00:25:12,190
<font color="#CCCCCC">know what that does to the OS timers and</font>

406
00:25:08,920 --> 00:25:14,110
everything<font color="#CCCCCC"> because the lowest</font><font color="#E5E5E5"> timer</font><font color="#CCCCCC"> I</font>

407
00:25:12,190 --> 00:25:16,360
mean if it stops here on a single core

408
00:25:14,110 --> 00:25:19,149
what happens on multi-core<font color="#E5E5E5"> right we</font>

409
00:25:16,360 --> 00:25:22,689
haven't<font color="#E5E5E5"> trusted and the multi-core but I</font>

410
00:25:19,150 --> 00:25:25,150
think after the 64-bit is<font color="#E5E5E5"> done I</font><font color="#CCCCCC"> think</font>

411
00:25:22,690 --> 00:25:29,260
we will<font color="#E5E5E5"> do that</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> next right research</font>

412
00:25:25,150 --> 00:25:30,510
<font color="#E5E5E5">thank you thank you any more questions</font>

413
00:25:29,260 --> 00:25:32,679
from the<font color="#E5E5E5"> audience</font>

414
00:25:30,510 --> 00:25:37,290
<font color="#E5E5E5">ok no then I'd like</font><font color="#CCCCCC"> to thank you very</font>

415
00:25:32,679 --> 00:25:37,290
<font color="#CCCCCC">much for</font><font color="#E5E5E5"> your first talk</font><font color="#CCCCCC"> thank you</font>

416
00:25:37,400 --> 00:25:41,029
[Applause]

