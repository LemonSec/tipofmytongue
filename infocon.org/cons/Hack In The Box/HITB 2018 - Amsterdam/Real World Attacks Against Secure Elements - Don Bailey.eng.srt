1
00:00:14,530 --> 00:00:18,340
so this talk<font color="#CCCCCC"> is about</font><font color="#E5E5E5"> secure elements</font>

2
00:00:16,780 --> 00:00:21,490
but lately I've<font color="#E5E5E5"> been</font><font color="#CCCCCC"> using this trigger</font>

3
00:00:18,340 --> 00:00:26,320
warning<font color="#CCCCCC"> this actually is not a joke</font>

4
00:00:21,490 --> 00:00:30,189
I<font color="#CCCCCC"> used disturbing imagery</font><font color="#E5E5E5"> in my slide</font>

5
00:00:26,320 --> 00:00:36,059
deck<font color="#E5E5E5"> just because that's me</font><font color="#CCCCCC"> I do that</font><font color="#E5E5E5"> so</font>

6
00:00:30,189 --> 00:00:39,040
if you are<font color="#E5E5E5"> squeamish about bugs or like</font>

7
00:00:36,059 --> 00:00:40,900
creepy people then you probably will

8
00:00:39,040 --> 00:00:42,370
want<font color="#CCCCCC"> to leave</font><font color="#E5E5E5"> but if you're</font><font color="#CCCCCC"> ok with</font><font color="#E5E5E5"> that</font>

9
00:00:40,900 --> 00:00:43,030
stuff and stick around because it'll be

10
00:00:42,370 --> 00:00:47,769
fun<font color="#CCCCCC"> right</font>

11
00:00:43,030 --> 00:00:49,870
so anyway<font color="#CCCCCC"> Who I am</font><font color="#E5E5E5"> a little brief</font>

12
00:00:47,770 --> 00:00:52,870
overview for those that<font color="#E5E5E5"> don't know</font><font color="#CCCCCC"> I</font>

13
00:00:49,870 --> 00:00:54,190
think<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> my</font><font color="#E5E5E5"> 7th 6th or 7th</font>

14
00:00:52,870 --> 00:00:57,968
something like that time speaking<font color="#E5E5E5"> at</font>

15
00:00:54,190 --> 00:00:59,468
<font color="#E5E5E5">hack in the box</font><font color="#CCCCCC"> I love these guys I've</font>

16
00:00:57,969 --> 00:01:01,960
been<font color="#E5E5E5"> coming to hack in the box for years</font>

17
00:00:59,469 --> 00:01:08,410
<font color="#E5E5E5">and years and years</font><font color="#CCCCCC"> I first met them in</font>

18
00:01:01,960 --> 00:01:10,560
<font color="#CCCCCC">2004 2005 great team but</font><font color="#E5E5E5"> I am a</font><font color="#CCCCCC"> long</font>

19
00:01:08,410 --> 00:01:14,610
<font color="#CCCCCC">time</font><font color="#E5E5E5"> security researcher focusing on IOT</font>

20
00:01:10,560 --> 00:01:17,080
<font color="#E5E5E5">embedded</font><font color="#CCCCCC"> systems</font><font color="#E5E5E5"> mobile technology</font><font color="#CCCCCC"> etc</font>

21
00:01:14,610 --> 00:01:21,400
<font color="#CCCCCC">first</font><font color="#E5E5E5"> person to hack a car I get to</font>

22
00:01:17,080 --> 00:01:24,280
claim<font color="#E5E5E5"> that so that was me I also wrote</font>

23
00:01:21,400 --> 00:01:25,930
<font color="#E5E5E5">the GSMA</font><font color="#CCCCCC"> iot security guidelines</font><font color="#E5E5E5"> from a</font>

24
00:01:24,280 --> 00:01:27,670
grant I got from the Department of

25
00:01:25,930 --> 00:01:29,920
<font color="#E5E5E5">Defense which was pretty cool</font>

26
00:01:27,670 --> 00:01:32,560
<font color="#E5E5E5">transitioned that material into what</font>

27
00:01:29,920 --> 00:01:35,229
<font color="#E5E5E5">would become the baseline for</font><font color="#CCCCCC"> the gsa</font>

28
00:01:32,560 --> 00:01:37,240
<font color="#CCCCCC">GSMA material which we actually</font><font color="#E5E5E5"> all</font>

29
00:01:35,229 --> 00:01:40,869
worked on as a group<font color="#CCCCCC"> it didn't just</font><font color="#E5E5E5"> come</font>

30
00:01:37,240 --> 00:01:43,060
<font color="#E5E5E5">from my initial research so</font><font color="#CCCCCC"> longtime</font>

31
00:01:40,869 --> 00:01:46,090
researcher<font color="#CCCCCC"> longtime black hat speaker</font>

32
00:01:43,060 --> 00:01:48,400
I've talked<font color="#E5E5E5"> to blackhat</font><font color="#CCCCCC"> nine times</font><font color="#E5E5E5"> like</font>

33
00:01:46,090 --> 00:01:50,320
I<font color="#E5E5E5"> said this is my</font><font color="#CCCCCC"> 6th or 7th</font><font color="#E5E5E5"> year so</font>

34
00:01:48,400 --> 00:01:51,820
that's me<font color="#CCCCCC"> I now run</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> consulting</font>

35
00:01:50,320 --> 00:01:54,429
practice<font color="#E5E5E5"> where it's just pretty much</font>

36
00:01:51,820 --> 00:01:57,960
<font color="#E5E5E5">myself doing independent contracting for</font>

37
00:01:54,430 --> 00:02:00,820
IOT systems security<font color="#E5E5E5"> in general</font><font color="#CCCCCC"> and CPUs</font>

38
00:01:57,960 --> 00:02:03,100
but today I'm talking<font color="#E5E5E5"> about something a</font>

39
00:02:00,820 --> 00:02:06,369
<font color="#CCCCCC">little bit disturbing</font><font color="#E5E5E5"> which I also find</font>

40
00:02:03,100 --> 00:02:08,679
really<font color="#CCCCCC"> cool</font><font color="#E5E5E5"> which is basically identity</font>

41
00:02:06,369 --> 00:02:12,100
insecure systems<font color="#E5E5E5"> right which is</font>

42
00:02:08,679 --> 00:02:14,130
obviously a very<font color="#CCCCCC"> fascinating topic and</font><font color="#E5E5E5"> a</font>

43
00:02:12,100 --> 00:02:17,500
topic that's growing more and<font color="#E5E5E5"> more</font>

44
00:02:14,130 --> 00:02:19,209
<font color="#E5E5E5">important over</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> to me this is</font>

45
00:02:17,500 --> 00:02:23,500
exceptionally important just because<font color="#CCCCCC"> I</font>

46
00:02:19,209 --> 00:02:25,390
my world is primarily CPUs<font color="#CCCCCC"> and IOT</font><font color="#E5E5E5"> so in</font>

47
00:02:23,500 --> 00:02:27,910
IOT our number one issue is<font color="#E5E5E5"> really</font>

48
00:02:25,390 --> 00:02:31,000
determining what and the identity of<font color="#CCCCCC"> a</font>

49
00:02:27,910 --> 00:02:33,609
devices<font color="#E5E5E5"> really like that's a baseline</font>

50
00:02:31,000 --> 00:02:36,690
requirement for having an IOT<font color="#E5E5E5"> network</font>

51
00:02:33,610 --> 00:02:39,580
and there's<font color="#E5E5E5"> this really fascinating</font>

52
00:02:36,690 --> 00:02:41,740
<font color="#E5E5E5">psychological issue called the Capgras</font>

53
00:02:39,580 --> 00:02:46,920
syndrome<font color="#CCCCCC"> is</font><font color="#E5E5E5"> anybody here actually</font>

54
00:02:41,740 --> 00:02:52,540
<font color="#CCCCCC">familiar with Cap Gras really</font><font color="#E5E5E5"> nobody</font>

55
00:02:46,920 --> 00:02:54,579
<font color="#CCCCCC">okay so it's actually really</font><font color="#E5E5E5"> fascinating</font>

56
00:02:52,540 --> 00:02:57,370
it's caused by<font color="#CCCCCC"> several issues</font><font color="#E5E5E5"> mostly</font>

57
00:02:54,580 --> 00:03:00,340
considered<font color="#E5E5E5"> to be organic</font><font color="#CCCCCC"> but cap Gras is</font>

58
00:02:57,370 --> 00:03:03,100
essentially you wake up one morning<font color="#E5E5E5"> and</font>

59
00:03:00,340 --> 00:03:08,040
you look at your wife your husband

60
00:03:03,100 --> 00:03:12,310
whatever<font color="#CCCCCC"> and in your mind you truly 100%</font>

61
00:03:08,040 --> 00:03:15,250
<font color="#CCCCCC">believe that that person is a fake</font><font color="#E5E5E5"> they</font>

62
00:03:12,310 --> 00:03:17,020
look like your spouse<font color="#E5E5E5"> they talk</font><font color="#CCCCCC"> like</font>

63
00:03:15,250 --> 00:03:19,870
your spouse they move<font color="#CCCCCC"> like your spouse</font>

64
00:03:17,020 --> 00:03:21,870
<font color="#E5E5E5">but at your core of your being</font><font color="#CCCCCC"> you</font>

65
00:03:19,870 --> 00:03:26,380
believe that that<font color="#E5E5E5"> is not your spouse</font>

66
00:03:21,870 --> 00:03:30,040
<font color="#E5E5E5">that somebody has taken you</font><font color="#CCCCCC"> know a clone</font>

67
00:03:26,380 --> 00:03:32,530
of your person and embodied them with

68
00:03:30,040 --> 00:03:35,290
you know the<font color="#E5E5E5"> the psyche</font><font color="#CCCCCC"> the personality</font>

69
00:03:32,530 --> 00:03:37,300
etc the underpinnings of<font color="#E5E5E5"> a spy</font>

70
00:03:35,290 --> 00:03:39,910
essentially so you believe that<font color="#E5E5E5"> that</font>

71
00:03:37,300 --> 00:03:41,500
person<font color="#CCCCCC"> is a clone of</font><font color="#E5E5E5"> someone you love</font>

72
00:03:39,910 --> 00:03:44,770
but<font color="#CCCCCC"> that</font><font color="#E5E5E5"> they're there as like a</font>

73
00:03:41,500 --> 00:03:46,630
transplant<font color="#E5E5E5"> you know to like spy on your</font>

74
00:03:44,770 --> 00:03:48,790
life<font color="#E5E5E5"> it's a fascinating psychological</font>

75
00:03:46,630 --> 00:03:51,579
<font color="#CCCCCC">issue</font><font color="#E5E5E5"> it's usually stems from</font>

76
00:03:48,790 --> 00:03:53,709
<font color="#E5E5E5">schizophrenia or delusion caused by</font>

77
00:03:51,580 --> 00:03:54,880
dementia as one grows older<font color="#E5E5E5"> but there</font>

78
00:03:53,709 --> 00:03:57,370
have<font color="#E5E5E5"> been a lot</font><font color="#CCCCCC"> of problems that</font><font color="#E5E5E5"> have</font>

79
00:03:54,880 --> 00:04:00,730
been<font color="#CCCCCC"> associated with cap gras</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> have</font>

80
00:03:57,370 --> 00:04:03,580
come from<font color="#E5E5E5"> really random areas such as</font>

81
00:04:00,730 --> 00:04:04,988
mild drug abuse<font color="#CCCCCC"> even like if you've</font>

82
00:04:03,580 --> 00:04:06,700
taken a psychedelic<font color="#E5E5E5"> or ketamine</font>

83
00:04:04,989 --> 00:04:08,350
<font color="#E5E5E5">apparently it's really</font><font color="#CCCCCC"> pretty mint with</font>

84
00:04:06,700 --> 00:04:10,510
ketamine<font color="#E5E5E5"> but how is that</font><font color="#CCCCCC"> relevant</font>

85
00:04:08,350 --> 00:04:12,870
relevant<font color="#E5E5E5"> today it's really relevant</font>

86
00:04:10,510 --> 00:04:15,579
because<font color="#E5E5E5"> that's</font><font color="#CCCCCC"> exactly what we're doing</font>

87
00:04:12,870 --> 00:04:17,470
when we're attacking identity in IOT

88
00:04:15,580 --> 00:04:18,850
systems because you<font color="#E5E5E5"> basically see this</font>

89
00:04:17,470 --> 00:04:22,150
little<font color="#CCCCCC"> device sitting</font><font color="#E5E5E5"> in a corner of</font>

90
00:04:18,850 --> 00:04:24,760
<font color="#E5E5E5">your house right or your office or</font>

91
00:04:22,150 --> 00:04:27,070
<font color="#E5E5E5">whatever your car and you believe that</font>

92
00:04:24,760 --> 00:04:29,710
<font color="#CCCCCC">the device</font><font color="#E5E5E5"> is exactly a device that you</font>

93
00:04:27,070 --> 00:04:32,050
think<font color="#E5E5E5"> that it is right except</font><font color="#CCCCCC"> over time</font>

94
00:04:29,710 --> 00:04:33,789
you feel<font color="#CCCCCC"> like that really</font><font color="#E5E5E5"> doesn't seem</font>

95
00:04:32,050 --> 00:04:36,100
like it's my device<font color="#E5E5E5"> anymore but I can't</font>

96
00:04:33,790 --> 00:04:39,160
tell<font color="#E5E5E5"> you why does anybody ever get that</font>

97
00:04:36,100 --> 00:04:40,529
feeling<font color="#E5E5E5"> a lot</font><font color="#CCCCCC"> of security</font><font color="#E5E5E5"> researchers</font>

98
00:04:39,160 --> 00:04:41,879
get that feeling

99
00:04:40,529 --> 00:04:45,058
and it's usually because<font color="#E5E5E5"> we're around</font>

100
00:04:41,879 --> 00:04:49,309
devices for so long<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> recognize</font>

101
00:04:45,059 --> 00:04:52,169
patterns<font color="#CCCCCC"> in fact my first</font><font color="#E5E5E5"> corporate job</font>

102
00:04:49,309 --> 00:04:54,899
was a security engineer<font color="#E5E5E5"> for a large</font>

103
00:04:52,169 --> 00:04:57,149
embedded systems firm<font color="#E5E5E5"> and I could tell</font>

104
00:04:54,899 --> 00:05:02,459
<font color="#CCCCCC">you when our build server was gonna go</font>

105
00:04:57,149 --> 00:05:05,909
down by the second because<font color="#E5E5E5"> I knew if it</font>

106
00:05:02,459 --> 00:05:08,159
went<font color="#CCCCCC"> over</font><font color="#E5E5E5"> you know if a bill talked</font>

107
00:05:05,909 --> 00:05:10,438
longer<font color="#E5E5E5"> than five minutes</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> 29 seconds</font>

108
00:05:08,159 --> 00:05:13,079
<font color="#E5E5E5">it's because something caused the build</font>

109
00:05:10,439 --> 00:05:15,299
<font color="#CCCCCC">server to crash</font><font color="#E5E5E5"> and so I could literally</font>

110
00:05:13,079 --> 00:05:18,779
call<font color="#CCCCCC"> it when a build</font><font color="#E5E5E5"> server was going</font>

111
00:05:15,299 --> 00:05:20,459
down and<font color="#E5E5E5"> people in our industry just</font>

112
00:05:18,779 --> 00:05:23,039
<font color="#E5E5E5">kind of get used to those patterns over</font>

113
00:05:20,459 --> 00:05:24,749
<font color="#E5E5E5">time right and you sense when a device</font>

114
00:05:23,039 --> 00:05:26,759
isn't actually doing<font color="#CCCCCC"> what it's supposed</font>

115
00:05:24,749 --> 00:05:29,549
to be<font color="#CCCCCC"> doing and that's kind of like an</font>

116
00:05:26,759 --> 00:05:31,169
<font color="#CCCCCC">analogue for cop cross syndrome in our</font>

117
00:05:29,549 --> 00:05:32,638
environment<font color="#E5E5E5"> we know that the device</font>

118
00:05:31,169 --> 00:05:36,058
isn't<font color="#CCCCCC"> behaving the way that it should be</font>

119
00:05:32,639 --> 00:05:37,139
<font color="#E5E5E5">but why why isn't behaving the way it</font>

120
00:05:36,059 --> 00:05:39,929
<font color="#CCCCCC">should be</font><font color="#E5E5E5"> well this is really a</font>

121
00:05:37,139 --> 00:05:42,659
demonstration<font color="#E5E5E5"> of that so what's really</font>

122
00:05:39,929 --> 00:05:46,018
fascinating<font color="#CCCCCC"> to this about me is or</font>

123
00:05:42,659 --> 00:05:49,498
fascinating to me is the implementation

124
00:05:46,019 --> 00:05:50,909
<font color="#E5E5E5">of secure elements at scale right</font>

125
00:05:49,499 --> 00:05:52,739
<font color="#E5E5E5">because that's</font><font color="#CCCCCC"> really the important</font>

126
00:05:50,909 --> 00:05:55,289
thing like anybody can secure one tiny

127
00:05:52,739 --> 00:05:57,209
device<font color="#CCCCCC"> elías from a secure element</font>

128
00:05:55,289 --> 00:05:59,878
perspective it's<font color="#CCCCCC"> not that hard it's</font>

129
00:05:57,209 --> 00:06:01,379
<font color="#CCCCCC">mostly comes down to</font><font color="#E5E5E5"> configuration but</font>

130
00:05:59,879 --> 00:06:04,229
when you're<font color="#E5E5E5"> doing it at scale it's</font>

131
00:06:01,379 --> 00:06:07,169
extremely different<font color="#CCCCCC"> so if you're a large</font>

132
00:06:04,229 --> 00:06:08,818
manufacturer like Samsung or Apple or

133
00:06:07,169 --> 00:06:10,979
Microsoft<font color="#E5E5E5"> and you're using secure</font>

134
00:06:08,819 --> 00:06:13,769
elements<font color="#E5E5E5"> at scale it's extremely</font>

135
00:06:10,979 --> 00:06:15,299
difficult to<font color="#E5E5E5"> do it correctly</font><font color="#CCCCCC"> and so the</font>

136
00:06:13,769 --> 00:06:17,969
<font color="#E5E5E5">Cobb cross</font><font color="#CCCCCC"> syndrome here is</font><font color="#E5E5E5"> really a</font>

137
00:06:15,299 --> 00:06:20,219
perfect<font color="#CCCCCC"> analog to me of how you can</font>

138
00:06:17,969 --> 00:06:23,279
create<font color="#E5E5E5"> those strange flaws those strange</font>

139
00:06:20,219 --> 00:06:25,379
gaps in<font color="#CCCCCC"> what occurs in scaled</font>

140
00:06:23,279 --> 00:06:27,989
environments<font color="#E5E5E5"> so this is an attack</font>

141
00:06:25,379 --> 00:06:33,179
against<font color="#E5E5E5"> Apple Zwack</font><font color="#CCCCCC"> is anybody</font><font color="#E5E5E5"> familiar</font>

142
00:06:27,989 --> 00:06:33,599
with<font color="#CCCCCC"> whack</font><font color="#E5E5E5"> no great because it's fairly</font>

143
00:06:33,179 --> 00:06:36,719
new

144
00:06:33,599 --> 00:06:38,819
<font color="#CCCCCC">in fact whack is so new that it still</font>

145
00:06:36,719 --> 00:06:43,639
requires an NDA to learn<font color="#CCCCCC"> anything</font><font color="#E5E5E5"> about</font>

146
00:06:38,819 --> 00:06:46,679
it<font color="#E5E5E5"> I reverse engineered a lot of whack</font>

147
00:06:43,639 --> 00:06:49,529
<font color="#CCCCCC">through my practice</font><font color="#E5E5E5"> consulting with</font>

148
00:06:46,679 --> 00:06:51,779
<font color="#CCCCCC">other organizations I don't get</font><font color="#E5E5E5"> access</font>

149
00:06:49,529 --> 00:06:53,909
to<font color="#E5E5E5"> any of the MFI libraries I don't get</font>

150
00:06:51,779 --> 00:06:57,090
<font color="#CCCCCC">access to</font><font color="#E5E5E5"> any of the</font><font color="#CCCCCC"> wack libraries</font>

151
00:06:53,910 --> 00:06:58,800
<font color="#E5E5E5">I just get devices and then the devices</font>

152
00:06:57,090 --> 00:07:00,869
I basically have to<font color="#E5E5E5"> reverse engineer and</font>

153
00:06:58,800 --> 00:07:02,340
identify how they're provisioned<font color="#E5E5E5"> how</font>

154
00:07:00,870 --> 00:07:05,130
they're secured how they communicate

155
00:07:02,340 --> 00:07:07,619
<font color="#E5E5E5">with the network so I am</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> under NDA</font>

156
00:07:05,130 --> 00:07:10,230
with<font color="#E5E5E5"> Apple</font><font color="#CCCCCC"> I have never read any</font><font color="#E5E5E5"> of the</font>

157
00:07:07,620 --> 00:07:13,410
specifications<font color="#E5E5E5"> from Apple and this talk</font>

158
00:07:10,230 --> 00:07:16,800
<font color="#CCCCCC">is basically</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> demonstration of how</font>

159
00:07:13,410 --> 00:07:19,620
<font color="#E5E5E5">Apple has flaws that allow you to burrow</font>

160
00:07:16,800 --> 00:07:22,680
pretty much into any<font color="#CCCCCC"> network</font><font color="#E5E5E5"> that Apple</font>

161
00:07:19,620 --> 00:07:25,110
enables secure provisioning for

162
00:07:22,680 --> 00:07:27,990
so it's<font color="#E5E5E5"> really fascinating about this is</font>

163
00:07:25,110 --> 00:07:30,780
<font color="#CCCCCC">wack is designed to allow accessories or</font>

164
00:07:27,990 --> 00:07:34,050
<font color="#E5E5E5">IOT devices access into</font><font color="#CCCCCC"> your world</font><font color="#E5E5E5"> and</font>

165
00:07:30,780 --> 00:07:38,400
<font color="#E5E5E5">by your world I mean an iOS device</font>

166
00:07:34,050 --> 00:07:41,430
<font color="#E5E5E5">should allow over whack some IOT</font>

167
00:07:38,400 --> 00:07:43,500
accessory to connect to your Wi-Fi<font color="#E5E5E5"> or to</font>

168
00:07:41,430 --> 00:07:47,220
connect to other<font color="#E5E5E5"> devices securely using</font>

169
00:07:43,500 --> 00:07:49,020
a<font color="#E5E5E5"> Bluetooth security key</font><font color="#CCCCCC"> right</font><font color="#E5E5E5"> so that's</font>

170
00:07:47,220 --> 00:07:52,890
<font color="#E5E5E5">essentially how</font><font color="#CCCCCC"> it works it's it's a</font>

171
00:07:49,020 --> 00:07:55,070
baseline provisioning system<font color="#E5E5E5"> so that you</font>

172
00:07:52,890 --> 00:07:57,840
don't<font color="#E5E5E5"> have to sit there</font><font color="#CCCCCC"> and type in a</font>

173
00:07:55,070 --> 00:07:59,310
Wi-Fi password to a small device<font color="#E5E5E5"> that</font>

174
00:07:57,840 --> 00:08:02,190
<font color="#E5E5E5">really doesn't have a great user</font>

175
00:07:59,310 --> 00:08:03,660
interface IOT has a serious<font color="#CCCCCC"> problem with</font>

176
00:08:02,190 --> 00:08:06,360
<font color="#CCCCCC">that and this is kind of</font><font color="#E5E5E5"> the solution</font>

177
00:08:03,660 --> 00:08:11,220
<font color="#E5E5E5">for it is that kind of deployment so</font>

178
00:08:06,360 --> 00:08:12,450
attacking<font color="#CCCCCC"> wack is super easy and</font><font color="#E5E5E5"> I</font>

179
00:08:11,220 --> 00:08:14,550
didn't<font color="#E5E5E5"> really think it was going to be</font>

180
00:08:12,450 --> 00:08:18,150
this easy<font color="#E5E5E5"> it's both easy and it's in</font>

181
00:08:14,550 --> 00:08:21,750
<font color="#E5E5E5">it's hard</font><font color="#CCCCCC"> I should qualify</font><font color="#E5E5E5"> that by</font>

182
00:08:18,150 --> 00:08:23,479
saying it's easy for<font color="#E5E5E5"> me but it will be</font>

183
00:08:21,750 --> 00:08:25,980
easy for<font color="#CCCCCC"> you</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> and you'll see why</font>

184
00:08:23,480 --> 00:08:27,690
<font color="#E5E5E5">because I've developed some tools that</font>

185
00:08:25,980 --> 00:08:33,330
make it<font color="#CCCCCC"> super super easy for everybody</font>

186
00:08:27,690 --> 00:08:39,169
else<font color="#E5E5E5"> so this is essentially</font><font color="#CCCCCC"> whack</font><font color="#E5E5E5"> who</font>

187
00:08:33,330 --> 00:08:41,219
has seen this<font color="#CCCCCC"> before anyone one person</font>

188
00:08:39,169 --> 00:08:43,829
<font color="#E5E5E5">all right well you're gonna be seeing it</font>

189
00:08:41,219 --> 00:08:45,240
more so when<font color="#E5E5E5"> you have an IOT device that</font>

190
00:08:43,830 --> 00:08:49,050
you need to connect<font color="#E5E5E5"> to your Wi-Fi</font>

191
00:08:45,240 --> 00:08:51,000
<font color="#CCCCCC">network you turn it on</font><font color="#E5E5E5"> and the first</font>

192
00:08:49,050 --> 00:08:54,120
thing it<font color="#CCCCCC"> does is send</font><font color="#E5E5E5"> out a beacon</font>

193
00:08:51,000 --> 00:08:56,100
saying hi I'm a Wi-Fi<font color="#CCCCCC"> access point but</font>

194
00:08:54,120 --> 00:09:00,870
there's a<font color="#E5E5E5"> special code according to</font><font color="#CCCCCC"> the</font>

195
00:08:56,100 --> 00:09:04,680
<font color="#CCCCCC">apples</font><font color="#E5E5E5"> WAAC specification that tells the</font>

196
00:09:00,870 --> 00:09:07,030
world<font color="#CCCCCC"> hey</font><font color="#E5E5E5"> I am an accessory device and I</font>

197
00:09:04,680 --> 00:09:09,910
<font color="#E5E5E5">can be configured with iOS</font>

198
00:09:07,030 --> 00:09:12,970
so who has an<font color="#CCCCCC"> apple device on them</font><font color="#E5E5E5"> right</font>

199
00:09:09,910 --> 00:09:14,439
<font color="#E5E5E5">now probably</font><font color="#CCCCCC"> a lot of</font><font color="#E5E5E5"> you yeah</font><font color="#CCCCCC"> alright</font>

200
00:09:12,970 --> 00:09:25,600
<font color="#E5E5E5">we're gonna test something just because</font>

201
00:09:14,440 --> 00:09:27,390
<font color="#CCCCCC">I'm curious so I've never done this in</font>

202
00:09:25,600 --> 00:09:29,470
the<font color="#CCCCCC"> EU I don't know if there are</font>

203
00:09:27,390 --> 00:09:32,439
configuration<font color="#E5E5E5"> parameters that won't</font>

204
00:09:29,470 --> 00:09:36,250
allow<font color="#CCCCCC"> for it I have no idea</font><font color="#E5E5E5"> but</font>

205
00:09:32,440 --> 00:09:44,260
everybody go into your<font color="#CCCCCC"> iOS</font><font color="#E5E5E5"> go to</font>

206
00:09:36,250 --> 00:09:46,120
settings go<font color="#CCCCCC"> to Wi-Fi</font><font color="#E5E5E5"> and if you scroll</font>

207
00:09:44,260 --> 00:09:49,530
<font color="#CCCCCC">down past</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> network's you</font><font color="#E5E5E5"> should see</font>

208
00:09:46,120 --> 00:09:52,080
<font color="#E5E5E5">setup new device</font><font color="#CCCCCC"> and it just say lol Don</font>

209
00:09:49,530 --> 00:09:56,589
<font color="#E5E5E5">does anybody see it</font>

210
00:09:52,080 --> 00:09:59,050
alright<font color="#E5E5E5"> most of you see it so this is</font>

211
00:09:56,590 --> 00:10:02,260
<font color="#E5E5E5">basically tricking iOS into thinking</font>

212
00:09:59,050 --> 00:10:05,170
<font color="#CCCCCC">that you are a wack enabled device</font><font color="#E5E5E5"> okay</font>

213
00:10:02,260 --> 00:10:07,750
<font color="#E5E5E5">so my</font><font color="#CCCCCC"> laptop right now is</font><font color="#E5E5E5"> supposedly a</font>

214
00:10:05,170 --> 00:10:11,349
wack enabled device but if you're a

215
00:10:07,750 --> 00:10:15,270
<font color="#E5E5E5">whack and able device you're required by</font>

216
00:10:11,350 --> 00:10:21,100
Apple<font color="#E5E5E5"> to have a thing called an MFI chip</font>

217
00:10:15,270 --> 00:10:24,339
who's familiar with<font color="#CCCCCC"> MFI anybody great</font>

218
00:10:21,100 --> 00:10:26,230
<font color="#E5E5E5">one individual so</font><font color="#CCCCCC"> MFI is essentially</font>

219
00:10:24,339 --> 00:10:28,120
<font color="#CCCCCC">apple's secure element</font><font color="#E5E5E5"> for provisioning</font>

220
00:10:26,230 --> 00:10:29,589
<font color="#CCCCCC">I think they use it for multiple things</font>

221
00:10:28,120 --> 00:10:31,660
they use it for certificate chaining

222
00:10:29,589 --> 00:10:34,510
other stuff I<font color="#E5E5E5"> don't really know because</font>

223
00:10:31,660 --> 00:10:45,610
<font color="#CCCCCC">again I don't</font><font color="#E5E5E5"> have any documents</font><font color="#CCCCCC"> I'm not</font>

224
00:10:34,510 --> 00:10:47,470
under NDA but point<font color="#E5E5E5"> being in order</font><font color="#CCCCCC"> for</font>

225
00:10:45,610 --> 00:10:48,940
provisioning to work you have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have</font>

226
00:10:47,470 --> 00:10:52,000
one of<font color="#CCCCCC"> these chips so</font><font color="#E5E5E5"> this secure</font>

227
00:10:48,940 --> 00:10:54,610
<font color="#CCCCCC">element basically</font><font color="#E5E5E5"> allows your iOS device</font>

228
00:10:52,000 --> 00:10:56,710
to<font color="#CCCCCC"> communicate with that</font><font color="#E5E5E5"> particular</font>

229
00:10:54,610 --> 00:10:59,770
accessory<font color="#E5E5E5"> so say I had an</font>

230
00:10:56,710 --> 00:11:01,630
<font color="#E5E5E5">internet-enabled toaster</font><font color="#CCCCCC"> okay that</font>

231
00:10:59,770 --> 00:11:04,720
<font color="#CCCCCC">internet-enabled</font><font color="#E5E5E5"> toaster would have that</font>

232
00:11:01,630 --> 00:11:07,839
little<font color="#CCCCCC"> Apple MFI secure element chip on</font>

233
00:11:04,720 --> 00:11:11,230
the circuit board<font color="#CCCCCC"> and when it presents</font>

234
00:11:07,839 --> 00:11:14,410
<font color="#E5E5E5">that Wi-Fi interface to your iOS device</font>

235
00:11:11,230 --> 00:11:17,500
<font color="#CCCCCC">like this your Apple device will say</font>

236
00:11:14,410 --> 00:11:20,319
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> I'm going to connect to that</font>

237
00:11:17,500 --> 00:11:21,190
particular device<font color="#CCCCCC"> and talk</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> chip</font>

238
00:11:20,320 --> 00:11:24,940
direct

239
00:11:21,190 --> 00:11:27,310
so over HTTP<font color="#CCCCCC"> will</font><font color="#E5E5E5"> actually send messages</font>

240
00:11:24,940 --> 00:11:30,130
<font color="#CCCCCC">to a little embedded application on your</font>

241
00:11:27,310 --> 00:11:33,430
toaster<font color="#CCCCCC"> that will</font><font color="#E5E5E5"> then communicate with</font>

242
00:11:30,130 --> 00:11:35,920
<font color="#E5E5E5">that</font><font color="#CCCCCC"> MFI chip and</font><font color="#E5E5E5"> that will allow the</font>

243
00:11:33,430 --> 00:11:38,349
MFI chip to securely sign a<font color="#E5E5E5"> message</font>

244
00:11:35,920 --> 00:11:41,349
saying yes<font color="#CCCCCC"> i am a real apple MFI chip</font>

245
00:11:38,350 --> 00:11:43,510
and here's information<font color="#E5E5E5"> that allows you</font>

246
00:11:41,350 --> 00:11:46,990
to<font color="#E5E5E5"> trust me</font><font color="#CCCCCC"> at that point</font>

247
00:11:43,510 --> 00:11:48,819
iOS will say<font color="#CCCCCC"> oh cool I can trust you now</font>

248
00:11:46,990 --> 00:11:52,210
because you<font color="#CCCCCC"> are an authenticated apple</font>

249
00:11:48,820 --> 00:11:54,310
<font color="#CCCCCC">MFI device</font><font color="#E5E5E5"> and it will send it will</font>

250
00:11:52,210 --> 00:11:56,680
provision all of those security<font color="#CCCCCC"> keys for</font>

251
00:11:54,310 --> 00:11:59,229
joining the Wi-Fi joining whatever

252
00:11:56,680 --> 00:12:02,829
network<font color="#E5E5E5"> over that secure tunnel to</font><font color="#CCCCCC"> the</font>

253
00:11:59,230 --> 00:12:04,840
MFI chip<font color="#CCCCCC"> ok</font><font color="#E5E5E5"> now the application the</font>

254
00:12:02,830 --> 00:12:06,430
toaster itself the toaster<font color="#CCCCCC"> applications</font>

255
00:12:04,840 --> 00:12:09,490
so to speak is not<font color="#E5E5E5"> supposed to be able</font>

256
00:12:06,430 --> 00:12:11,199
<font color="#E5E5E5">to see any of this data the MFI chip</font>

257
00:12:09,490 --> 00:12:13,300
<font color="#E5E5E5">itself is supposed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> contain all that</font>

258
00:12:11,200 --> 00:12:15,850
information<font color="#E5E5E5"> so it should be storing</font>

259
00:12:13,300 --> 00:12:21,670
<font color="#E5E5E5">those secret Wi-Fi keys</font><font color="#CCCCCC"> within the</font>

260
00:12:15,850 --> 00:12:24,810
secure element itself<font color="#CCCCCC"> ok but who can</font>

261
00:12:21,670 --> 00:12:28,900
guess what the gap<font color="#E5E5E5"> is in this process</font>

262
00:12:24,810 --> 00:12:30,459
anybody you can shout it out if you

263
00:12:28,900 --> 00:12:34,990
actually<font color="#E5E5E5"> figured it out already</font><font color="#CCCCCC"> because</font>

264
00:12:30,460 --> 00:12:38,860
it's<font color="#CCCCCC"> pretty</font><font color="#E5E5E5"> obvious at some point the</font>

265
00:12:34,990 --> 00:12:41,470
toaster<font color="#E5E5E5"> needs to know what the Wi-Fi</font>

266
00:12:38,860 --> 00:12:43,870
password<font color="#E5E5E5"> is in order</font><font color="#CCCCCC"> to connect to the</font>

267
00:12:41,470 --> 00:12:45,910
Wi-Fi network<font color="#CCCCCC"> that it's been provisioned</font>

268
00:12:43,870 --> 00:12:49,090
<font color="#CCCCCC">to you right so MFI can't just keep all</font>

269
00:12:45,910 --> 00:12:51,670
these secrets secret they have to let

270
00:12:49,090 --> 00:12:53,290
the toaster know what's going on<font color="#E5E5E5"> the</font>

271
00:12:51,670 --> 00:12:56,290
problem is the toasters in the

272
00:12:53,290 --> 00:12:59,829
<font color="#CCCCCC">non-secure world right it's just got a</font>

273
00:12:56,290 --> 00:13:03,360
simple<font color="#E5E5E5"> arm cortex-m</font><font color="#CCCCCC"> zero plus on it</font>

274
00:12:59,830 --> 00:13:07,330
<font color="#CCCCCC">there's no secure storage on that device</font>

275
00:13:03,360 --> 00:13:09,520
<font color="#E5E5E5">so</font><font color="#CCCCCC"> essentially what you have</font><font color="#E5E5E5"> is an IOT</font>

276
00:13:07,330 --> 00:13:12,040
device that receives<font color="#CCCCCC"> information that's</font>

277
00:13:09,520 --> 00:13:15,579
sent<font color="#E5E5E5"> to an MFI chip that holds it in</font>

278
00:13:12,040 --> 00:13:17,380
escrow essentially but then it's given

279
00:13:15,580 --> 00:13:20,620
<font color="#CCCCCC">to the toaster or whatever application</font>

280
00:13:17,380 --> 00:13:22,150
it is<font color="#E5E5E5"> as needed right so when that</font>

281
00:13:20,620 --> 00:13:25,420
toaster needs to connect it<font color="#CCCCCC"> just says</font>

282
00:13:22,150 --> 00:13:27,850
hey<font color="#CCCCCC"> M if</font><font color="#E5E5E5"> I give me the info and hands it</font>

283
00:13:25,420 --> 00:13:29,680
off to<font color="#CCCCCC"> the the Wi-Fi adapter and the</font>

284
00:13:27,850 --> 00:13:32,420
Wi-Fi adapter does the rest but that key

285
00:13:29,680 --> 00:13:34,189
has<font color="#CCCCCC"> to be shared right</font>

286
00:13:32,420 --> 00:13:37,099
and that's the important part<font color="#E5E5E5"> of the</font>

287
00:13:34,190 --> 00:13:38,600
hack<font color="#E5E5E5"> so what we end up doing here is we</font>

288
00:13:37,100 --> 00:13:41,350
<font color="#CCCCCC">just</font><font color="#E5E5E5"> have a very very simple test</font>

289
00:13:38,600 --> 00:13:44,570
harness which is essentially your laptop

290
00:13:41,350 --> 00:13:47,540
with<font color="#E5E5E5"> host</font><font color="#CCCCCC"> APD on it</font><font color="#E5E5E5"> so you can simulate</font>

291
00:13:44,570 --> 00:13:49,459
a Wi-Fi<font color="#CCCCCC"> access point or</font><font color="#E5E5E5"> become one not</font>

292
00:13:47,540 --> 00:13:53,829
really simulate one right but you're

293
00:13:49,459 --> 00:13:57,050
<font color="#CCCCCC">simulating the wack accessory model</font><font color="#E5E5E5"> and</font>

294
00:13:53,829 --> 00:14:00,380
what you actually do is you become man

295
00:13:57,050 --> 00:14:02,510
in the<font color="#E5E5E5"> middle between iOS</font><font color="#CCCCCC"> and an</font><font color="#E5E5E5"> actual</font>

296
00:14:00,380 --> 00:14:04,310
accessory<font color="#E5E5E5"> now you might think</font><font color="#CCCCCC"> to</font>

297
00:14:02,510 --> 00:14:07,279
yourself<font color="#CCCCCC"> hey Don but</font><font color="#E5E5E5"> isn't that exactly</font>

298
00:14:04,310 --> 00:14:09,138
<font color="#E5E5E5">what encryption is supposed to stop</font><font color="#CCCCCC"> man</font>

299
00:14:07,279 --> 00:14:13,610
<font color="#CCCCCC">in the middle attacks</font><font color="#E5E5E5"> you're being</font>

300
00:14:09,139 --> 00:14:15,290
ridiculous<font color="#E5E5E5"> yes except that it's very</font>

301
00:14:13,610 --> 00:14:18,709
important that<font color="#CCCCCC"> we</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> man-in-the-middle</font>

302
00:14:15,290 --> 00:14:21,160
<font color="#E5E5E5">access for one particular</font><font color="#CCCCCC"> reason</font><font color="#E5E5E5"> if we</font>

303
00:14:18,709 --> 00:14:25,250
use<font color="#CCCCCC"> a man-in-the-middle attack here</font><font color="#E5E5E5"> on a</font>

304
00:14:21,160 --> 00:14:27,139
<font color="#E5E5E5">hacked accessory we can essentially ask</font>

305
00:14:25,250 --> 00:14:29,360
the accessory to give us all<font color="#CCCCCC"> the</font>

306
00:14:27,139 --> 00:14:33,579
<font color="#E5E5E5">provisioning we need in order for our</font>

307
00:14:29,360 --> 00:14:36,800
laptop<font color="#E5E5E5"> to join the network because again</font>

308
00:14:33,579 --> 00:14:38,689
the MFI chip has no idea what the

309
00:14:36,800 --> 00:14:42,349
<font color="#E5E5E5">difference</font><font color="#CCCCCC"> is between</font><font color="#E5E5E5"> the arm cortex-m</font>

310
00:14:38,690 --> 00:14:44,449
<font color="#E5E5E5">zero on</font><font color="#CCCCCC"> that accessory</font><font color="#E5E5E5"> and another</font>

311
00:14:42,350 --> 00:14:47,000
processor or device that's connected<font color="#CCCCCC"> to</font>

312
00:14:44,449 --> 00:14:49,910
the accessory it can't differentiate

313
00:14:47,000 --> 00:14:52,430
<font color="#E5E5E5">between the two because secure elements</font>

314
00:14:49,910 --> 00:14:55,510
<font color="#E5E5E5">that are small external secure elements</font>

315
00:14:52,430 --> 00:14:58,609
communicate over a physical bus protocol

316
00:14:55,510 --> 00:15:01,189
it has no<font color="#E5E5E5"> idea whether that physical bus</font>

317
00:14:58,610 --> 00:15:03,140
is local<font color="#E5E5E5"> or whether there's a device</font>

318
00:15:01,190 --> 00:15:05,630
attached to the<font color="#E5E5E5"> visible bus that's been</font>

319
00:15:03,140 --> 00:15:09,380
ported over<font color="#E5E5E5"> a network connection</font><font color="#CCCCCC"> in</font>

320
00:15:05,630 --> 00:15:11,660
other words to your laptop<font color="#CCCCCC"> that chip has</font>

321
00:15:09,380 --> 00:15:13,490
no idea so you<font color="#E5E5E5"> can basically trick it</font>

322
00:15:11,660 --> 00:15:16,490
into provisioning access to whatever you

323
00:15:13,490 --> 00:15:18,170
<font color="#E5E5E5">want</font><font color="#CCCCCC"> and acting as a</font><font color="#E5E5E5"> proxy for you and</font>

324
00:15:16,490 --> 00:15:20,810
any network that you can get<font color="#CCCCCC"> it get</font>

325
00:15:18,170 --> 00:15:23,839
access to<font color="#E5E5E5"> which is pretty cool so step</font>

326
00:15:20,810 --> 00:15:26,268
<font color="#CCCCCC">one</font><font color="#E5E5E5"> all we have to do is use host</font><font color="#CCCCCC"> apd</font>

327
00:15:23,839 --> 00:15:29,839
and this is really easy<font color="#CCCCCC"> even if you've</font>

328
00:15:26,269 --> 00:15:31,910
<font color="#CCCCCC">never used host</font><font color="#E5E5E5"> apd before it's the</font>

329
00:15:29,839 --> 00:15:35,300
<font color="#E5E5E5">simplest command ever all you have to do</font>

330
00:15:31,910 --> 00:15:38,060
is type host<font color="#CCCCCC"> apd that's it</font>

331
00:15:35,300 --> 00:15:39,979
so there's there's a<font color="#E5E5E5"> configuration file</font>

332
00:15:38,060 --> 00:15:41,359
that<font color="#CCCCCC"> comes along with it</font><font color="#E5E5E5"> but by</font><font color="#CCCCCC"> default</font>

333
00:15:39,980 --> 00:15:42,860
you can<font color="#E5E5E5"> literally use the default</font>

334
00:15:41,360 --> 00:15:44,810
configuration<font color="#E5E5E5"> there's nothing special</font>

335
00:15:42,860 --> 00:15:46,130
that<font color="#E5E5E5"> you have to do in order to run</font>

336
00:15:44,810 --> 00:15:49,130
<font color="#CCCCCC">hostapd</font>

337
00:15:46,130 --> 00:15:52,130
but in order<font color="#CCCCCC"> to spoof a</font><font color="#E5E5E5"> wack instance</font>

338
00:15:49,130 --> 00:15:57,290
you do have to adhere to<font color="#CCCCCC"> apple's</font>

339
00:15:52,130 --> 00:15:59,150
specification so<font color="#E5E5E5"> vendor elements anybody</font>

340
00:15:57,290 --> 00:16:03,050
here familiar with Wi-Fi vendor elements

341
00:15:59,150 --> 00:16:04,640
at all<font color="#E5E5E5"> no</font><font color="#CCCCCC"> okay so this is how vendor</font>

342
00:16:03,050 --> 00:16:07,579
elements work<font color="#E5E5E5"> if you're familiar with</font>

343
00:16:04,640 --> 00:16:10,069
Wi-Fi packets in general they have<font color="#E5E5E5"> a</font><font color="#CCCCCC"> TLV</font>

344
00:16:07,580 --> 00:16:12,530
format type length value<font color="#E5E5E5"> so essentially</font>

345
00:16:10,070 --> 00:16:15,860
<font color="#E5E5E5">when you see Wi-Fi beacons on the</font>

346
00:16:12,530 --> 00:16:18,740
network<font color="#E5E5E5"> it's just a series of bytes and</font>

347
00:16:15,860 --> 00:16:21,830
those series of bytes<font color="#E5E5E5"> indicate certain</font>

348
00:16:18,740 --> 00:16:25,040
types as in hey<font color="#CCCCCC"> this type tells you what</font>

349
00:16:21,830 --> 00:16:27,770
the SSID<font color="#CCCCCC"> is or this type defines what</font>

350
00:16:25,040 --> 00:16:31,130
speeds this particular access point

351
00:16:27,770 --> 00:16:35,780
allows or this type indicates something

352
00:16:31,130 --> 00:16:38,450
<font color="#E5E5E5">else but one type</font><font color="#CCCCCC"> 0 xdd indicates</font><font color="#E5E5E5"> vendor</font>

353
00:16:35,780 --> 00:16:39,410
<font color="#CCCCCC">specific elements and that's where way</font>

354
00:16:38,450 --> 00:16:42,200
comes into play

355
00:16:39,410 --> 00:16:44,120
<font color="#CCCCCC">whack is defined by a vendor specific</font>

356
00:16:42,200 --> 00:16:46,880
<font color="#E5E5E5">element according</font><font color="#CCCCCC"> to the Wi-Fi</font>

357
00:16:44,120 --> 00:16:49,250
specification<font color="#CCCCCC"> so the Wi-Fi specification</font>

358
00:16:46,880 --> 00:16:56,150
says if you have a vendor<font color="#CCCCCC"> specific</font>

359
00:16:49,250 --> 00:16:58,580
element just<font color="#E5E5E5"> mark it as type 0 xdd the</font>

360
00:16:56,150 --> 00:17:02,209
next byte is the length of the payload

361
00:16:58,580 --> 00:17:06,860
and then the<font color="#CCCCCC"> 3 bytes after that indicate</font>

362
00:17:02,210 --> 00:17:10,010
the<font color="#E5E5E5"> o UI or vendor that has specified</font>

363
00:17:06,859 --> 00:17:12,589
this particular data type<font color="#CCCCCC"> as in</font><font color="#E5E5E5"> this is</font>

364
00:17:10,010 --> 00:17:16,339
this<font color="#E5E5E5"> particular manufacturers special</font>

365
00:17:12,589 --> 00:17:17,958
<font color="#E5E5E5">data format so for whack it's really</font>

366
00:17:16,339 --> 00:17:20,448
easy because literally<font color="#E5E5E5"> all</font><font color="#CCCCCC"> you have to</font>

367
00:17:17,959 --> 00:17:24,530
do is just add a payload that<font color="#CCCCCC"> adds the</font>

368
00:17:20,449 --> 00:17:28,130
<font color="#CCCCCC">apple</font><font color="#E5E5E5"> o UI 0 0 a is 0 for 0 that's it</font>

369
00:17:24,530 --> 00:17:30,649
now any iOS device is going<font color="#E5E5E5"> to see that</font>

370
00:17:28,130 --> 00:17:33,410
and interpret that as a<font color="#E5E5E5"> whack</font>

371
00:17:30,650 --> 00:17:35,690
configuration<font color="#E5E5E5"> and I really can't find</font>

372
00:17:33,410 --> 00:17:38,630
anything<font color="#E5E5E5"> else that forces this</font>

373
00:17:35,690 --> 00:17:41,690
configuration<font color="#E5E5E5"> to</font><font color="#CCCCCC"> be processed in this</font>

374
00:17:38,630 --> 00:17:45,140
<font color="#CCCCCC">fashion</font><font color="#E5E5E5"> in fact most of these element</font>

375
00:17:41,690 --> 00:17:49,730
data packets don't<font color="#E5E5E5"> are not actually</font>

376
00:17:45,140 --> 00:17:52,190
required<font color="#E5E5E5"> which is weird</font><font color="#CCCCCC"> so anyway</font><font color="#E5E5E5"> you</font>

377
00:17:49,730 --> 00:17:54,050
can<font color="#E5E5E5"> define the SSID you can define the</font>

378
00:17:52,190 --> 00:17:55,910
MAC<font color="#CCCCCC"> address you</font><font color="#E5E5E5"> can define description</font>

379
00:17:54,050 --> 00:17:57,370
the vendor name of whatever this device

380
00:17:55,910 --> 00:17:59,300
is<font color="#CCCCCC"> that your spoon</font>

381
00:17:57,370 --> 00:18:01,399
but it doesn't really matter because

382
00:17:59,300 --> 00:18:03,710
<font color="#E5E5E5">again this is all completely</font><font color="#CCCCCC"> in the</font>

383
00:18:01,400 --> 00:18:05,480
clear<font color="#CCCCCC"> none of this is authenticated</font><font color="#E5E5E5"> data</font>

384
00:18:03,710 --> 00:18:09,590
<font color="#E5E5E5">so you can say whatever the hell you</font>

385
00:18:05,480 --> 00:18:11,300
want<font color="#E5E5E5"> and more importantly the</font><font color="#CCCCCC"> esses idea</font>

386
00:18:09,590 --> 00:18:13,939
of whatever<font color="#E5E5E5"> you're presenting can be</font>

387
00:18:11,300 --> 00:18:17,928
anything you want<font color="#CCCCCC"> to so</font><font color="#E5E5E5"> if your toaster</font>

388
00:18:13,940 --> 00:18:20,150
is like a<font color="#E5E5E5"> Bosch toaster right you can</font>

389
00:18:17,929 --> 00:18:23,420
literally just put Bosch toaster in your

390
00:18:20,150 --> 00:18:26,270
SSID but in your<font color="#E5E5E5"> wack information you</font>

391
00:18:23,420 --> 00:18:28,550
can call it<font color="#E5E5E5"> ha</font><font color="#CCCCCC"> ha ha it doesn't matter</font>

392
00:18:26,270 --> 00:18:31,220
because<font color="#E5E5E5"> apparently iOS doesn't give a</font>

393
00:18:28,550 --> 00:18:32,570
 so it doesn't really<font color="#E5E5E5"> check any of</font>

394
00:18:31,220 --> 00:18:34,880
<font color="#E5E5E5">these things all the checks to</font><font color="#CCCCCC"> determine</font>

395
00:18:32,570 --> 00:18:37,309
<font color="#CCCCCC">is</font><font color="#E5E5E5"> whether or not it is a wireless</font>

396
00:18:34,880 --> 00:18:40,220
access configuration enabled device<font color="#E5E5E5"> and</font>

397
00:18:37,309 --> 00:18:43,639
if it is it presents<font color="#E5E5E5"> it in that list you</font>

398
00:18:40,220 --> 00:18:48,950
saw in settings<font color="#E5E5E5"> ok so to make this</font>

399
00:18:43,640 --> 00:18:50,840
<font color="#E5E5E5">easier</font><font color="#CCCCCC"> I just wrote a</font><font color="#E5E5E5"> simple little</font>

400
00:18:48,950 --> 00:18:53,660
<font color="#CCCCCC">Python script</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'll put up</font><font color="#E5E5E5"> on github</font>

401
00:18:50,840 --> 00:18:55,129
<font color="#CCCCCC">after the talk</font><font color="#E5E5E5"> but you know it's in the</font>

402
00:18:53,660 --> 00:18:57,350
slides you<font color="#E5E5E5"> can just copy it it's only a</font>

403
00:18:55,130 --> 00:18:59,330
couple<font color="#E5E5E5"> lines but this is basically a</font>

404
00:18:57,350 --> 00:19:02,030
little<font color="#E5E5E5"> file that generates the</font>

405
00:18:59,330 --> 00:19:03,649
configuration for you so all<font color="#CCCCCC"> you have</font><font color="#E5E5E5"> to</font>

406
00:19:02,030 --> 00:19:06,139
do is just put<font color="#CCCCCC"> your name</font><font color="#E5E5E5"> that you want</font>

407
00:19:03,650 --> 00:19:08,809
at the top<font color="#E5E5E5"> and then run this script</font>

408
00:19:06,140 --> 00:19:12,530
<font color="#E5E5E5">it'll auto generate the payload that you</font>

409
00:19:08,809 --> 00:19:14,649
have to put<font color="#E5E5E5"> into hostapd so super simple</font>

410
00:19:12,530 --> 00:19:18,770
right<font color="#E5E5E5"> like you can just do this in</font>

411
00:19:14,650 --> 00:19:20,690
seconds<font color="#CCCCCC"> and then here is the actual</font>

412
00:19:18,770 --> 00:19:23,809
payload<font color="#E5E5E5"> inside the host</font><font color="#CCCCCC"> APD</font>

413
00:19:20,690 --> 00:19:25,190
configuration<font color="#E5E5E5"> and this is it this is</font>

414
00:19:23,809 --> 00:19:27,440
<font color="#CCCCCC">just the encoding it's literally just</font>

415
00:19:25,190 --> 00:19:28,250
hex encoding that's all it is<font color="#E5E5E5"> it's</font>

416
00:19:27,440 --> 00:19:30,950
<font color="#E5E5E5">nothing special</font>

417
00:19:28,250 --> 00:19:32,600
<font color="#CCCCCC">but the script just generates the actual</font>

418
00:19:30,950 --> 00:19:35,990
payload<font color="#E5E5E5"> data on your behalf</font><font color="#CCCCCC"> so you don't</font>

419
00:19:32,600 --> 00:19:38,360
<font color="#E5E5E5">have to do</font><font color="#CCCCCC"> it by hand</font><font color="#E5E5E5"> but essentially</font>

420
00:19:35,990 --> 00:19:41,390
when you use that like I<font color="#E5E5E5"> just did with</font>

421
00:19:38,360 --> 00:19:44,570
my laptop<font color="#E5E5E5"> your laptop will become a</font>

422
00:19:41,390 --> 00:19:48,710
wireless<font color="#CCCCCC"> axis or accessory configuration</font>

423
00:19:44,570 --> 00:19:51,740
device and when iOS connects to it it

424
00:19:48,710 --> 00:19:54,559
starts sending<font color="#CCCCCC"> em DNS requests those</font>

425
00:19:51,740 --> 00:19:57,410
<font color="#CCCCCC">mdns requests that</font><font color="#E5E5E5"> are circled include</font>

426
00:19:54,559 --> 00:20:00,020
<font color="#E5E5E5">NFI configuration so it's basically</font>

427
00:19:57,410 --> 00:20:02,600
<font color="#CCCCCC">searching the network saying ok you're</font>

428
00:20:00,020 --> 00:20:04,309
saying<font color="#E5E5E5"> you're a</font><font color="#CCCCCC"> wack enabled device</font><font color="#E5E5E5"> but</font>

429
00:20:02,600 --> 00:20:07,399
in<font color="#E5E5E5"> order</font><font color="#CCCCCC"> for you to be a whack enabled</font>

430
00:20:04,309 --> 00:20:09,450
device<font color="#E5E5E5"> you have to have an MFI so it's</font>

431
00:20:07,400 --> 00:20:12,059
searching<font color="#CCCCCC"> for the MFI service</font>

432
00:20:09,450 --> 00:20:14,399
and all we have<font color="#CCCCCC"> to do at this point</font><font color="#E5E5E5"> is</font>

433
00:20:12,059 --> 00:20:17,220
respond with the information saying<font color="#E5E5E5"> yeah</font>

434
00:20:14,399 --> 00:20:19,500
<font color="#E5E5E5">I'm an MFI service now at this point you</font>

435
00:20:17,220 --> 00:20:20,940
have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> have encryption which means that</font>

436
00:20:19,500 --> 00:20:24,269
you<font color="#E5E5E5"> have to have the keys</font><font color="#CCCCCC"> that are</font>

437
00:20:20,940 --> 00:20:26,669
<font color="#E5E5E5">stored on the MFI chip itself</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> you</font>

438
00:20:24,269 --> 00:20:29,940
don't have right unless you<font color="#CCCCCC"> actually get</font>

439
00:20:26,669 --> 00:20:33,659
<font color="#CCCCCC">access to</font><font color="#E5E5E5"> the physical strata of the MFI</font>

440
00:20:29,940 --> 00:20:35,490
chip which we're not<font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> do because</font>

441
00:20:33,659 --> 00:20:39,990
that<font color="#E5E5E5"> would require us</font><font color="#CCCCCC"> to do actual work</font>

442
00:20:35,490 --> 00:20:42,929
and that sucks so instead what we're

443
00:20:39,990 --> 00:20:45,330
<font color="#CCCCCC">gonna</font><font color="#E5E5E5"> do is we're just gonna play man in</font>

444
00:20:42,929 --> 00:20:47,580
<font color="#CCCCCC">the</font><font color="#E5E5E5"> middle and this is super fun so I</font>

445
00:20:45,330 --> 00:20:51,269
wrote a great Python script that<font color="#CCCCCC"> I use</font>

446
00:20:47,580 --> 00:20:55,460
called<font color="#CCCCCC"> mooks or my</font><font color="#E5E5E5"> object-oriented</font>

447
00:20:51,269 --> 00:20:58,620
<font color="#CCCCCC">packet spoofer it's up on github</font><font color="#E5E5E5"> and</font>

448
00:20:55,460 --> 00:21:00,240
it's super easy to<font color="#CCCCCC"> use</font><font color="#E5E5E5"> and basically</font><font color="#CCCCCC"> all</font>

449
00:20:58,620 --> 00:21:03,418
you<font color="#CCCCCC"> have to do is relay frames right</font>

450
00:21:00,240 --> 00:21:09,570
because mdns uses multi casting<font color="#CCCCCC"> it's</font>

451
00:21:03,419 --> 00:21:11,340
multicast<font color="#E5E5E5"> DNS and</font><font color="#CCCCCC"> mdns or multicast in</font>

452
00:21:09,570 --> 00:21:12,110
general is a pain<font color="#E5E5E5"> in the ass to forward</font>

453
00:21:11,340 --> 00:21:15,600
over networks

454
00:21:12,110 --> 00:21:18,740
does anybody<font color="#E5E5E5"> forward multicast</font><font color="#CCCCCC"> data over</font>

455
00:21:15,600 --> 00:21:21,360
networks<font color="#E5E5E5"> it's a huge pain</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the ass you</font>

456
00:21:18,740 --> 00:21:23,190
<font color="#CCCCCC">really can't do it</font><font color="#E5E5E5"> by default in the</font>

457
00:21:21,360 --> 00:21:24,779
Linux kernel<font color="#E5E5E5"> or any other real kernel</font>

458
00:21:23,190 --> 00:21:26,730
<font color="#CCCCCC">because multicast is supposed</font><font color="#E5E5E5"> to by</font>

459
00:21:24,779 --> 00:21:29,370
<font color="#CCCCCC">definition</font><font color="#E5E5E5"> stay on the same network</font>

460
00:21:26,730 --> 00:21:30,360
<font color="#E5E5E5">segment that you're on you can forward</font>

461
00:21:29,370 --> 00:21:31,768
it<font color="#E5E5E5"> a little bit but you're not really</font>

462
00:21:30,360 --> 00:21:34,529
<font color="#CCCCCC">supposed to forward it</font><font color="#E5E5E5"> by directionally</font>

463
00:21:31,769 --> 00:21:36,480
point being we<font color="#E5E5E5"> need to be able to for it</font>

464
00:21:34,529 --> 00:21:38,639
across networks because again<font color="#E5E5E5"> we've got</font>

465
00:21:36,480 --> 00:21:41,309
<font color="#CCCCCC">two Wi-Fi networks we've got one that's</font>

466
00:21:38,639 --> 00:21:44,729
presenting as a client<font color="#CCCCCC"> and we've got one</font>

467
00:21:41,309 --> 00:21:46,620
<font color="#CCCCCC">that's presenting as a host ap so we</font>

468
00:21:44,730 --> 00:21:48,360
basically have to<font color="#CCCCCC"> tell our accessory</font>

469
00:21:46,620 --> 00:21:50,580
device that we're that we're smoothing

470
00:21:48,360 --> 00:21:52,019
<font color="#E5E5E5">hey I'm forwarding data to you and I</font>

471
00:21:50,580 --> 00:21:56,039
need the response so I can forward<font color="#E5E5E5"> it</font>

472
00:21:52,019 --> 00:21:59,669
back to iOS<font color="#CCCCCC"> okay so that's</font><font color="#E5E5E5"> my little</font>

473
00:21:56,039 --> 00:22:01,679
application fling does just that<font color="#E5E5E5"> so</font>

474
00:21:59,669 --> 00:22:04,799
basically it's just a Python script<font color="#CCCCCC"> that</font>

475
00:22:01,679 --> 00:22:08,730
<font color="#E5E5E5">uses Moops and it sits on</font><font color="#CCCCCC"> top of your</font>

476
00:22:04,799 --> 00:22:10,918
<font color="#E5E5E5">Linux wireless interface and</font><font color="#CCCCCC"> just</font>

477
00:22:08,730 --> 00:22:12,840
presents a raw packet interface<font color="#CCCCCC"> to the</font>

478
00:22:10,919 --> 00:22:15,059
interface<font color="#CCCCCC"> that you're hostapd</font><font color="#E5E5E5"> is running</font>

479
00:22:12,840 --> 00:22:17,220
on so as soon<font color="#E5E5E5"> as messages come in</font>

480
00:22:15,059 --> 00:22:21,029
<font color="#E5E5E5">multicast messages come</font><font color="#CCCCCC"> into the network</font>

481
00:22:17,220 --> 00:22:22,529
from<font color="#E5E5E5"> iOS it just rewrites the packet and</font>

482
00:22:21,029 --> 00:22:23,910
sends it on the appropriate<font color="#CCCCCC"> interface</font>

483
00:22:22,529 --> 00:22:28,180
that's<font color="#E5E5E5"> attack</font>

484
00:22:23,910 --> 00:22:32,890
<font color="#E5E5E5">to your target device super easy right</font>

485
00:22:28,180 --> 00:22:35,500
<font color="#CCCCCC">and this</font><font color="#E5E5E5"> is the script now using my</font>

486
00:22:32,890 --> 00:22:38,140
Moops<font color="#E5E5E5"> packet library</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> was super easy</font>

487
00:22:35,500 --> 00:22:40,180
<font color="#E5E5E5">because Moops is basically like a tcp/ip</font>

488
00:22:38,140 --> 00:22:43,870
stack but if you were to write<font color="#CCCCCC"> it in</font>

489
00:22:40,180 --> 00:22:46,240
Python<font color="#CCCCCC"> so it's all raw it's super simple</font>

490
00:22:43,870 --> 00:22:47,979
<font color="#CCCCCC">but this is basically the</font><font color="#E5E5E5"> script</font><font color="#CCCCCC"> that</font>

491
00:22:46,240 --> 00:22:50,410
<font color="#E5E5E5">you have to use to forward packets back</font>

492
00:22:47,980 --> 00:22:54,280
and forth<font color="#CCCCCC"> over a multicast</font>

493
00:22:50,410 --> 00:22:56,800
<font color="#E5E5E5">across bridged Wi-Fi networks</font><font color="#CCCCCC"> so as you</font>

494
00:22:54,280 --> 00:23:01,240
can<font color="#CCCCCC"> see it's</font><font color="#E5E5E5"> really small it doesn't</font>

495
00:22:56,800 --> 00:23:03,580
take<font color="#E5E5E5"> much but this is literally all</font><font color="#CCCCCC"> we</font>

496
00:23:01,240 --> 00:23:07,210
<font color="#E5E5E5">need Nord afford those messages back and</font>

497
00:23:03,580 --> 00:23:11,139
<font color="#E5E5E5">forth but what's great</font><font color="#CCCCCC"> about this</font><font color="#E5E5E5"> is</font>

498
00:23:07,210 --> 00:23:14,230
that<font color="#E5E5E5"> now iOS has no idea that</font><font color="#CCCCCC"> it's being</font>

499
00:23:11,140 --> 00:23:15,850
instrumented right so it's forwarding

500
00:23:14,230 --> 00:23:17,260
the data back and<font color="#CCCCCC"> forth everything's</font>

501
00:23:15,850 --> 00:23:19,300
good we're just sitting in the<font color="#E5E5E5"> middle</font>

502
00:23:17,260 --> 00:23:21,790
with our laptop<font color="#CCCCCC"> so now we can do all</font>

503
00:23:19,300 --> 00:23:25,810
kinds<font color="#CCCCCC"> of auditing here this is where you</font>

504
00:23:21,790 --> 00:23:27,610
<font color="#E5E5E5">would drop in a fuzzing architecture</font><font color="#CCCCCC"> you</font>

505
00:23:25,810 --> 00:23:29,169
<font color="#E5E5E5">know some kind of harness for doing</font>

506
00:23:27,610 --> 00:23:32,350
<font color="#E5E5E5">other types of testing if</font><font color="#CCCCCC"> you want to</font>

507
00:23:29,170 --> 00:23:36,310
try fuzzing<font color="#CCCCCC"> to mdns stack there's an</font>

508
00:23:32,350 --> 00:23:38,199
HTTP stack it's not<font color="#E5E5E5"> HTTP which of course</font>

509
00:23:36,310 --> 00:23:45,429
<font color="#E5E5E5">it can't be where would the keys go</font>

510
00:23:38,200 --> 00:23:48,220
<font color="#E5E5E5">right so essentially when you have this</font>

511
00:23:45,430 --> 00:23:50,290
<font color="#E5E5E5">set up this fashion it's pretty much</font>

512
00:23:48,220 --> 00:23:53,890
done<font color="#CCCCCC"> all you have</font><font color="#E5E5E5"> to do at that</font><font color="#CCCCCC"> point is</font>

513
00:23:50,290 --> 00:23:59,889
hack an actual<font color="#CCCCCC"> endpoint</font><font color="#E5E5E5"> so pretty much</font>

514
00:23:53,890 --> 00:24:04,060
any IOT device that has an MFI implies

515
00:23:59,890 --> 00:24:08,290
that it can be hacked<font color="#E5E5E5"> anybody want to</font>

516
00:24:04,060 --> 00:24:15,070
venture a guess as<font color="#CCCCCC"> to</font><font color="#E5E5E5"> why shout it out</font>

517
00:24:08,290 --> 00:24:17,680
if you know it it's<font color="#CCCCCC"> using MFI it has to</font>

518
00:24:15,070 --> 00:24:20,530
use a<font color="#E5E5E5"> third party vendors chip</font><font color="#CCCCCC"> apples</font>

519
00:24:17,680 --> 00:24:23,770
chip because it's basically saying hey I

520
00:24:20,530 --> 00:24:27,100
can't<font color="#E5E5E5"> secure my own</font><font color="#CCCCCC"> I need someone</font>

521
00:24:23,770 --> 00:24:28,900
to secure things for me which basically

522
00:24:27,100 --> 00:24:33,580
<font color="#E5E5E5">means that you can hack the hell out of</font>

523
00:24:28,900 --> 00:24:36,160
it right<font color="#E5E5E5"> so</font><font color="#CCCCCC"> most</font><font color="#E5E5E5"> of these devices just</font>

524
00:24:33,580 --> 00:24:37,210
<font color="#E5E5E5">have a simple ARM chip in most cases arm</font>

525
00:24:36,160 --> 00:24:38,710
cortex-m

526
00:24:37,210 --> 00:24:40,870
that's just running<font color="#E5E5E5"> an embedded systems</font>

527
00:24:38,710 --> 00:24:43,960
platform<font color="#E5E5E5"> but it's not really enough to</font>

528
00:24:40,870 --> 00:24:45,939
do a lot with<font color="#E5E5E5"> so usually what I do is</font>

529
00:24:43,960 --> 00:24:49,049
just flash<font color="#E5E5E5"> a little application</font><font color="#CCCCCC"> that</font>

530
00:24:45,940 --> 00:24:51,880
relay is data<font color="#E5E5E5"> over say a serial port</font>

531
00:24:49,049 --> 00:24:53,710
like<font color="#E5E5E5"> aur or something like</font><font color="#CCCCCC"> that right</font>

532
00:24:51,880 --> 00:24:55,929
<font color="#CCCCCC">there usually</font><font color="#E5E5E5"> isn't a lot of</font><font color="#CCCCCC"> room</font><font color="#E5E5E5"> on</font>

533
00:24:53,710 --> 00:24:58,390
those on the flash of these devices

534
00:24:55,929 --> 00:24:59,830
<font color="#CCCCCC">there is a lot</font><font color="#E5E5E5"> of</font><font color="#CCCCCC"> security either so you</font>

535
00:24:58,390 --> 00:25:04,120
can usually just<font color="#E5E5E5"> flash</font><font color="#CCCCCC"> your own</font>

536
00:24:59,830 --> 00:25:07,449
application that after boot up<font color="#E5E5E5"> it runs</font>

537
00:25:04,120 --> 00:25:09,908
and it starts<font color="#CCCCCC"> interment instrumenting</font>

538
00:25:07,450 --> 00:25:13,330
communication between your<font color="#CCCCCC"> laptop and</font>

539
00:25:09,909 --> 00:25:16,029
the network<font color="#E5E5E5"> so basically like you can</font>

540
00:25:13,330 --> 00:25:18,879
use it as a<font color="#E5E5E5"> network device</font><font color="#CCCCCC"> or you can</font>

541
00:25:16,029 --> 00:25:20,230
use<font color="#E5E5E5"> it as a serial device or you can do</font>

542
00:25:18,880 --> 00:25:22,179
whatever you want but the best case

543
00:25:20,230 --> 00:25:23,770
<font color="#CCCCCC">scenario is</font><font color="#E5E5E5"> you've already got man in</font>

544
00:25:22,179 --> 00:25:26,460
the middle<font color="#E5E5E5"> so you're already basically</font>

545
00:25:23,770 --> 00:25:31,000
<font color="#E5E5E5">talking to the application on the</font>

546
00:25:26,460 --> 00:25:32,620
<font color="#CCCCCC">instrumented app accessory</font><font color="#E5E5E5"> right so if</font>

547
00:25:31,000 --> 00:25:35,320
you<font color="#E5E5E5"> just add a little</font><font color="#CCCCCC"> application that</font>

548
00:25:32,620 --> 00:25:38,279
says oh when you hit this<font color="#E5E5E5"> webpage it's</font>

549
00:25:35,320 --> 00:25:41,110
gonna respond with say keys for

550
00:25:38,279 --> 00:25:44,830
provisioning<font color="#E5E5E5"> to the actual network that</font>

551
00:25:41,110 --> 00:25:47,918
you want to hack<font color="#E5E5E5"> right</font><font color="#CCCCCC"> and that's what's</font>

552
00:25:44,830 --> 00:25:49,510
really<font color="#E5E5E5"> great here is that once you have</font>

553
00:25:47,919 --> 00:25:51,130
<font color="#CCCCCC">that little</font><font color="#E5E5E5"> application there you can</font>

554
00:25:49,510 --> 00:25:51,760
basically tell the MFI to do whatever

555
00:25:51,130 --> 00:25:54,760
you want

556
00:25:51,760 --> 00:25:56,470
and now you<font color="#E5E5E5"> have the</font><font color="#CCCCCC"> ability to set up a</font>

557
00:25:54,760 --> 00:25:59,860
harness<font color="#E5E5E5"> where you can do fuzzing you can</font>

558
00:25:56,470 --> 00:26:01,510
attack iOS you<font color="#CCCCCC"> can attack the</font><font color="#E5E5E5"> actual</font><font color="#CCCCCC"> MFI</font>

559
00:25:59,860 --> 00:26:04,240
chip you can<font color="#E5E5E5"> attack</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> infrastructure</font>

560
00:26:01,510 --> 00:26:06,039
around<font color="#E5E5E5"> it you can tell the MFI to</font>

561
00:26:04,240 --> 00:26:09,700
provision you keys to join whatever

562
00:26:06,039 --> 00:26:13,720
Wi-Fi network is relevant<font color="#CCCCCC"> all of</font><font color="#E5E5E5"> that</font>

563
00:26:09,700 --> 00:26:15,399
stuff is pretty much<font color="#E5E5E5"> 100% in play now</font>

564
00:26:13,720 --> 00:26:17,590
because you have the infrastructure set

565
00:26:15,399 --> 00:26:19,840
up in order<font color="#E5E5E5"> to do that the</font><font color="#CCCCCC"> long-term</font>

566
00:26:17,590 --> 00:26:21,730
game is<font color="#E5E5E5"> really to just have the device</font>

567
00:26:19,840 --> 00:26:23,350
do it on your<font color="#E5E5E5"> behalf</font><font color="#CCCCCC"> so that you don't</font>

568
00:26:21,730 --> 00:26:25,450
actually have<font color="#E5E5E5"> to do the</font>

569
00:26:23,350 --> 00:26:27,158
<font color="#CCCCCC">man-in-the-middle thing at all</font><font color="#E5E5E5"> and you</font>

570
00:26:25,450 --> 00:26:29,110
can<font color="#CCCCCC"> kind of</font><font color="#E5E5E5"> just connect to it and say</font>

571
00:26:27,159 --> 00:26:32,200
give me<font color="#E5E5E5"> the keys if it's already</font>

572
00:26:29,110 --> 00:26:35,049
provisioned<font color="#CCCCCC"> a real life attack scenario</font>

573
00:26:32,200 --> 00:26:36,909
for this would<font color="#E5E5E5"> be basically sitting</font>

574
00:26:35,049 --> 00:26:38,799
<font color="#E5E5E5">outside of somebody's house that</font><font color="#CCCCCC"> already</font>

575
00:26:36,909 --> 00:26:41,740
has devices that are enabled<font color="#CCCCCC"> with this</font>

576
00:26:38,799 --> 00:26:46,149
technology<font color="#CCCCCC"> and you would essentially say</font>

577
00:26:41,740 --> 00:26:48,130
<font color="#E5E5E5">oh okay well I'm going to</font><font color="#CCCCCC"> daus whatever</font>

578
00:26:46,149 --> 00:26:50,169
that thing is<font color="#E5E5E5"> that</font><font color="#CCCCCC"> I'm</font><font color="#E5E5E5"> targeting it's</font>

579
00:26:48,130 --> 00:26:52,330
going to disconnect<font color="#E5E5E5"> from the network</font>

580
00:26:50,170 --> 00:26:54,700
the person when they go<font color="#E5E5E5"> to use it isn't</font>

581
00:26:52,330 --> 00:26:56,020
gonna<font color="#CCCCCC"> actually see it on</font><font color="#E5E5E5"> the network so</font>

582
00:26:54,700 --> 00:26:57,430
they're gonna check their phone and

583
00:26:56,020 --> 00:26:58,810
they're gonna reprovision it except the

584
00:26:57,430 --> 00:27:00,340
next<font color="#E5E5E5"> time they're provisioning it</font>

585
00:26:58,810 --> 00:27:03,090
they're actually<font color="#E5E5E5"> provisioning my device</font>

586
00:27:00,340 --> 00:27:06,760
and they're giving me the keys<font color="#CCCCCC"> now</font>

587
00:27:03,090 --> 00:27:09,459
<font color="#CCCCCC">that's not a great</font><font color="#E5E5E5"> apt flow so if you're</font>

588
00:27:06,760 --> 00:27:11,710
an actual<font color="#E5E5E5"> offense person and not a</font>

589
00:27:09,460 --> 00:27:15,340
<font color="#E5E5E5">defense person it's not the best</font>

590
00:27:11,710 --> 00:27:17,020
<font color="#CCCCCC">scenario for</font><font color="#E5E5E5"> attacking somebody</font><font color="#CCCCCC"> but it's</font>

591
00:27:15,340 --> 00:27:18,340
a<font color="#E5E5E5"> relevant scenario architectural</font><font color="#CCCCCC"> II</font>

592
00:27:17,020 --> 00:27:20,440
because it's still a significant

593
00:27:18,340 --> 00:27:23,080
security<font color="#E5E5E5"> flaw the result of this is that</font>

594
00:27:20,440 --> 00:27:27,700
<font color="#CCCCCC">basically you can impersonate any</font><font color="#E5E5E5"> wack</font>

595
00:27:23,080 --> 00:27:30,730
device anywhere<font color="#CCCCCC"> because there is no</font>

596
00:27:27,700 --> 00:27:32,640
<font color="#CCCCCC">ability for</font><font color="#E5E5E5"> iOS to understand you know</font>

597
00:27:30,730 --> 00:27:35,140
what<font color="#CCCCCC"> device it's actually connecting to</font>

598
00:27:32,640 --> 00:27:39,280
right and I'll describe<font color="#CCCCCC"> that a little</font>

599
00:27:35,140 --> 00:27:41,320
<font color="#CCCCCC">bit more</font><font color="#E5E5E5"> in depth so this is really a</font>

600
00:27:39,280 --> 00:27:44,170
<font color="#CCCCCC">fascinating thing how</font><font color="#E5E5E5"> many people here</font>

601
00:27:41,320 --> 00:27:47,040
work with secure elements or IOT systems

602
00:27:44,170 --> 00:27:50,470
in<font color="#CCCCCC"> general probably only a</font><font color="#E5E5E5"> few people</font>

603
00:27:47,040 --> 00:27:52,840
<font color="#E5E5E5">yeah it's not hugely popular</font><font color="#CCCCCC"> in our</font>

604
00:27:50,470 --> 00:27:54,070
circle<font color="#E5E5E5"> but what's</font><font color="#CCCCCC"> really cool is it's</font>

605
00:27:52,840 --> 00:27:56,379
basically<font color="#E5E5E5"> like the blind leading the</font>

606
00:27:54,070 --> 00:28:00,100
blind<font color="#CCCCCC"> right</font><font color="#E5E5E5"> because you have a system</font>

607
00:27:56,380 --> 00:28:02,950
<font color="#CCCCCC">that</font><font color="#E5E5E5"> has</font><font color="#CCCCCC"> absolutely</font><font color="#E5E5E5"> no</font><font color="#CCCCCC"> idea where it's</font>

608
00:28:00,100 --> 00:28:04,899
getting<font color="#E5E5E5"> data from all it knows is</font><font color="#CCCCCC"> that</font>

609
00:28:02,950 --> 00:28:07,120
<font color="#CCCCCC">it's really</font><font color="#E5E5E5"> really close to</font><font color="#CCCCCC"> the device</font>

610
00:28:04,900 --> 00:28:09,430
as in closes and intimate with it it's

611
00:28:07,120 --> 00:28:10,810
<font color="#E5E5E5">supposed to trust it right so there's a</font>

612
00:28:09,430 --> 00:28:13,000
presumption of trust there's a

613
00:28:10,810 --> 00:28:15,820
presumption<font color="#E5E5E5"> of safety but really each</font>

614
00:28:13,000 --> 00:28:18,430
device is<font color="#E5E5E5"> basically just hiding details</font>

615
00:28:15,820 --> 00:28:20,260
from<font color="#E5E5E5"> the other device that</font><font color="#CCCCCC"> the device</font>

616
00:28:18,430 --> 00:28:22,300
really really needs in<font color="#E5E5E5"> order to function</font>

617
00:28:20,260 --> 00:28:25,540
<font color="#CCCCCC">and they just kind of trust each other</font>

618
00:28:22,300 --> 00:28:29,830
to<font color="#CCCCCC"> do the right thing</font><font color="#E5E5E5"> but it's all based</font>

619
00:28:25,540 --> 00:28:34,120
on flawed architectural models<font color="#E5E5E5"> and these</font>

620
00:28:29,830 --> 00:28:36,100
<font color="#E5E5E5">are the flawed models okay so there</font><font color="#CCCCCC"> are</font>

621
00:28:34,120 --> 00:28:40,659
essentially three models in secure

622
00:28:36,100 --> 00:28:42,719
element design and since most of you

623
00:28:40,660 --> 00:28:45,580
<font color="#E5E5E5">don't work in IOT I'll explain them here</font>

624
00:28:42,720 --> 00:28:49,030
so these are<font color="#E5E5E5"> simple threat models that</font>

625
00:28:45,580 --> 00:28:51,909
define these<font color="#E5E5E5"> architectural</font><font color="#CCCCCC"> their</font>

626
00:28:49,030 --> 00:28:54,610
architectures<font color="#E5E5E5"> okay so in the most basic</font>

627
00:28:51,910 --> 00:28:56,560
<font color="#CCCCCC">model there is</font><font color="#E5E5E5"> no secure element at all</font>

628
00:28:54,610 --> 00:28:58,510
this is pseudo secure<font color="#CCCCCC"> element this is</font>

629
00:28:56,560 --> 00:29:00,639
basically you<font color="#CCCCCC"> have a device whose</font>

630
00:28:58,510 --> 00:29:02,440
cryptographic keys are stored<font color="#E5E5E5"> in flash</font>

631
00:29:00,640 --> 00:29:05,169
<font color="#E5E5E5">somehow</font>

632
00:29:02,440 --> 00:29:08,049
<font color="#E5E5E5">okay they could be encrypted in flash</font>

633
00:29:05,169 --> 00:29:11,649
they could be<font color="#CCCCCC"> plaintext in flash</font><font color="#E5E5E5"> it</font>

634
00:29:08,049 --> 00:29:14,549
really doesn't matter even if<font color="#E5E5E5"> encrypted</font>

635
00:29:11,649 --> 00:29:18,008
<font color="#E5E5E5">keys are encrypted with another key and</font>

636
00:29:14,549 --> 00:29:21,158
<font color="#E5E5E5">stored in flash</font><font color="#CCCCCC"> who cares it doesn't</font>

637
00:29:18,009 --> 00:29:23,200
really matter<font color="#E5E5E5"> because there's no secure</font>

638
00:29:21,159 --> 00:29:26,259
way of<font color="#CCCCCC"> hiding</font><font color="#E5E5E5"> that information from</font>

639
00:29:23,200 --> 00:29:28,360
anyone<font color="#CCCCCC"> so all a reverse engineer has to</font>

640
00:29:26,259 --> 00:29:30,879
do is take a few extra<font color="#E5E5E5"> step to find the</font>

641
00:29:28,360 --> 00:29:32,559
extra<font color="#E5E5E5"> key to decode whatever the</font>

642
00:29:30,879 --> 00:29:35,199
encryption keys are that are stored in

643
00:29:32,559 --> 00:29:38,740
flash<font color="#E5E5E5"> it's useless</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> it's busy</font><font color="#CCCCCC"> work</font>

644
00:29:35,200 --> 00:29:42,220
and<font color="#E5E5E5"> it takes a lot of excess time</font><font color="#CCCCCC"> to</font>

645
00:29:38,740 --> 00:29:44,139
<font color="#CCCCCC">develop this</font><font color="#E5E5E5"> kind of pseudo security to</font>

646
00:29:42,220 --> 00:29:46,659
make<font color="#CCCCCC"> it somewhat presentable to</font>

647
00:29:44,139 --> 00:29:49,449
<font color="#E5E5E5">production</font><font color="#CCCCCC"> there's</font><font color="#E5E5E5"> no reason to have</font>

648
00:29:46,659 --> 00:29:51,789
this in production<font color="#CCCCCC"> ever except</font><font color="#E5E5E5"> that's</font>

649
00:29:49,450 --> 00:29:53,620
<font color="#E5E5E5">pretty much primarily what you'll see in</font>

650
00:29:51,789 --> 00:29:56,080
production<font color="#E5E5E5"> because it's more cost</font>

651
00:29:53,620 --> 00:29:58,779
<font color="#E5E5E5">effective it doesn't require a secure</font>

652
00:29:56,080 --> 00:30:00,428
element<font color="#E5E5E5"> right so you should never see</font>

653
00:29:58,779 --> 00:30:03,389
this in<font color="#CCCCCC"> practice</font><font color="#E5E5E5"> but this is what you</font>

654
00:30:00,429 --> 00:30:06,120
will always see in practice<font color="#CCCCCC"> essentially</font>

655
00:30:03,389 --> 00:30:08,529
but the model is<font color="#E5E5E5"> very simple</font><font color="#CCCCCC"> right</font>

656
00:30:06,120 --> 00:30:11,590
you've got an insecure storage medium

657
00:30:08,529 --> 00:30:13,870
this<font color="#E5E5E5"> is flash or EEPROM or something</font>

658
00:30:11,590 --> 00:30:15,820
else<font color="#E5E5E5"> that's storing the actual keys it's</font>

659
00:30:13,870 --> 00:30:18,070
attached<font color="#E5E5E5"> to what's presumably a</font>

660
00:30:15,820 --> 00:30:21,129
<font color="#E5E5E5">privileged set of processes in kernel</font>

661
00:30:18,070 --> 00:30:23,500
and the kernel applications<font color="#CCCCCC"> themselves</font>

662
00:30:21,129 --> 00:30:26,168
create a<font color="#E5E5E5"> ring of</font><font color="#CCCCCC"> protection around the</font>

663
00:30:23,500 --> 00:30:28,570
insecure device that's the idea right<font color="#CCCCCC"> so</font>

664
00:30:26,169 --> 00:30:31,840
applications themselves<font color="#CCCCCC"> can't</font>

665
00:30:28,570 --> 00:30:33,460
necessarily be attacked<font color="#CCCCCC"> so a privileged</font>

666
00:30:31,840 --> 00:30:35,439
and unprivileged application and inside

667
00:30:33,460 --> 00:30:37,929
the operating<font color="#E5E5E5"> system on</font><font color="#CCCCCC"> the IOT device</font>

668
00:30:35,440 --> 00:30:43,389
will not<font color="#E5E5E5"> have</font><font color="#CCCCCC"> direct access</font><font color="#E5E5E5"> to those</font>

669
00:30:37,929 --> 00:30:46,779
keys in flash<font color="#E5E5E5"> but as we all</font><font color="#CCCCCC"> know that's</font>

670
00:30:43,389 --> 00:30:49,229
<font color="#E5E5E5">not</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> reality the reality</font><font color="#CCCCCC"> is that in</font>

671
00:30:46,779 --> 00:30:52,419
order<font color="#CCCCCC"> for this I Oh T device to function</font>

672
00:30:49,230 --> 00:30:54,580
<font color="#E5E5E5">it needs access</font><font color="#CCCCCC"> to those keys</font><font color="#E5E5E5"> it needs</font>

673
00:30:52,419 --> 00:30:57,610
to be able<font color="#E5E5E5"> to perform services</font>

674
00:30:54,580 --> 00:31:00,129
based on those cryptographic keys<font color="#E5E5E5"> so in</font>

675
00:30:57,610 --> 00:31:02,620
the real world<font color="#CCCCCC"> the privileged user land</font>

676
00:31:00,129 --> 00:31:05,439
process will usually directly require

677
00:31:02,620 --> 00:31:07,719
the keys from kernel<font color="#E5E5E5"> and just say hey</font>

678
00:31:05,440 --> 00:31:10,120
kernel give me access<font color="#E5E5E5"> to whatever the</font>

679
00:31:07,720 --> 00:31:13,210
secure element is in this case<font color="#CCCCCC"> a EEPROM</font>

680
00:31:10,120 --> 00:31:14,949
or whatever<font color="#E5E5E5"> privileged user land process</font>

681
00:31:13,210 --> 00:31:16,169
gets the keys hands them off to the

682
00:31:14,950 --> 00:31:18,720
Wi-Fi

683
00:31:16,169 --> 00:31:19,320
ever<font color="#CCCCCC"> connects to whatever</font><font color="#E5E5E5"> needs to</font><font color="#CCCCCC"> be</font>

684
00:31:18,720 --> 00:31:22,470
<font color="#CCCCCC">connected to</font>

685
00:31:19,320 --> 00:31:25,559
in rare cases you'll see a kernel<font color="#CCCCCC"> module</font>

686
00:31:22,470 --> 00:31:27,720
<font color="#E5E5E5">that actually does this on</font><font color="#CCCCCC"> behalf</font><font color="#E5E5E5"> of a</font>

687
00:31:25,559 --> 00:31:29,789
privileged application that's really

688
00:31:27,720 --> 00:31:32,279
rare though<font color="#E5E5E5"> because it requires excess</font>

689
00:31:29,789 --> 00:31:34,230
<font color="#E5E5E5">work</font><font color="#CCCCCC"> that most people aren't really</font>

690
00:31:32,279 --> 00:31:37,379
<font color="#E5E5E5">willing to do so mostly what you end up</font>

691
00:31:34,230 --> 00:31:39,480
<font color="#E5E5E5">seeing</font><font color="#CCCCCC"> is a</font><font color="#E5E5E5"> privileged device in the</font>

692
00:31:37,379 --> 00:31:42,719
kernel and<font color="#E5E5E5"> the only type of security</font>

693
00:31:39,480 --> 00:31:44,580
here is<font color="#E5E5E5"> really</font><font color="#CCCCCC"> just you have to have</font>

694
00:31:42,720 --> 00:31:50,369
administrative<font color="#CCCCCC"> access on the operating</font>

695
00:31:44,580 --> 00:31:52,139
<font color="#E5E5E5">system to</font><font color="#CCCCCC"> read this device</font><font color="#E5E5E5"> that's it so</font>

696
00:31:50,369 --> 00:31:56,100
this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> important for</font><font color="#CCCCCC"> two reasons number</font>

697
00:31:52,139 --> 00:31:58,619
<font color="#CCCCCC">one it implies that any</font><font color="#E5E5E5"> physical access</font>

698
00:31:56,100 --> 00:32:00,988
to the device will acquire access<font color="#E5E5E5"> to the</font>

699
00:31:58,619 --> 00:32:03,209
keys because there is no secure storage

700
00:32:00,989 --> 00:32:06,330
for<font color="#CCCCCC"> the keys there's no secure memory at</font>

701
00:32:03,210 --> 00:32:07,980
all<font color="#E5E5E5"> right and because</font><font color="#CCCCCC"> of that we can</font>

702
00:32:06,330 --> 00:32:09,330
extract<font color="#E5E5E5"> those keys from flash without</font>

703
00:32:07,980 --> 00:32:11,249
<font color="#E5E5E5">ever having to boot up the operating</font>

704
00:32:09,330 --> 00:32:12,539
system or attack it in any way<font color="#E5E5E5"> there's</font>

705
00:32:11,249 --> 00:32:16,350
nothing to do we can just read it

706
00:32:12,539 --> 00:32:17,279
<font color="#CCCCCC">straight</font><font color="#E5E5E5"> off flash or EEPROM easiest</font>

707
00:32:16,350 --> 00:32:21,029
<font color="#E5E5E5">thing you'll ever do</font>

708
00:32:17,279 --> 00:32:22,499
as far as offense goes now if you can't

709
00:32:21,029 --> 00:32:25,409
do<font color="#E5E5E5"> that for some</font><font color="#CCCCCC"> reason as if you're</font>

710
00:32:22,499 --> 00:32:28,499
attacking<font color="#E5E5E5"> it remotely then it's super</font>

711
00:32:25,409 --> 00:32:31,830
<font color="#CCCCCC">easy</font><font color="#E5E5E5"> if you can land read capability</font>

712
00:32:28,499 --> 00:32:34,200
from<font color="#E5E5E5"> the device or if you can get code</font>

713
00:32:31,830 --> 00:32:37,080
execution<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the application</font><font color="#E5E5E5"> and really</font>

714
00:32:34,200 --> 00:32:38,730
act as<font color="#E5E5E5"> any application at all because in</font>

715
00:32:37,080 --> 00:32:39,658
a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of these architectures</font><font color="#E5E5E5"> even the</font>

716
00:32:38,730 --> 00:32:41,999
unprivileged

717
00:32:39,659 --> 00:32:45,450
applications<font color="#E5E5E5"> are the ones that actually</font>

718
00:32:41,999 --> 00:32:47,100
<font color="#E5E5E5">interact with</font><font color="#CCCCCC"> the real</font><font color="#E5E5E5"> world so what</font>

719
00:32:45,450 --> 00:32:49,830
ends up<font color="#CCCCCC"> happening is a unprivileged</font>

720
00:32:47,100 --> 00:32:51,449
<font color="#E5E5E5">application can ask a privileged</font>

721
00:32:49,830 --> 00:32:55,320
application in<font color="#CCCCCC"> userland</font>

722
00:32:51,450 --> 00:32:57,779
hey<font color="#E5E5E5"> I'm going</font><font color="#CCCCCC"> to go talk to some peer or</font>

723
00:32:55,320 --> 00:32:59,850
a back-end<font color="#E5E5E5"> system</font><font color="#CCCCCC"> to do updates</font><font color="#E5E5E5"> or</font>

724
00:32:57,779 --> 00:33:01,559
whatever<font color="#CCCCCC"> I need access to the</font>

725
00:32:59,850 --> 00:33:04,379
<font color="#E5E5E5">cryptographic key to perform some kind</font>

726
00:33:01,559 --> 00:33:06,480
of signing operation it'll ask the

727
00:33:04,379 --> 00:33:08,158
privileged application for help<font color="#E5E5E5"> which</font>

728
00:33:06,480 --> 00:33:10,200
<font color="#E5E5E5">will then retrieve the key from flash</font>

729
00:33:08,159 --> 00:33:12,149
which will then help<font color="#CCCCCC"> perform the</font>

730
00:33:10,200 --> 00:33:15,450
operation on the unprivileged

731
00:33:12,149 --> 00:33:17,309
applications behalf<font color="#E5E5E5"> so in these models</font>

732
00:33:15,450 --> 00:33:19,830
you<font color="#E5E5E5"> technically don't even have to have</font>

733
00:33:17,309 --> 00:33:21,480
access<font color="#CCCCCC"> to the privileged application or</font>

734
00:33:19,830 --> 00:33:25,168
the kernel in order to do anything

735
00:33:21,480 --> 00:33:26,909
<font color="#E5E5E5">useful because to be useful the</font>

736
00:33:25,169 --> 00:33:29,270
applications have<font color="#E5E5E5"> to</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> access to</font><font color="#CCCCCC"> the</font>

737
00:33:26,909 --> 00:33:31,460
keys somehow so they can<font color="#E5E5E5"> just ask</font>

738
00:33:29,270 --> 00:33:34,070
for permission<font color="#E5E5E5"> hey I need to do this</font>

739
00:33:31,460 --> 00:33:37,460
give me access to<font color="#E5E5E5"> it okay fine here's</font>

740
00:33:34,070 --> 00:33:39,710
your key<font color="#E5E5E5"> done so the attack model for</font>

741
00:33:37,460 --> 00:33:43,610
this<font color="#CCCCCC"> is really straightforward</font><font color="#E5E5E5"> physical</font>

742
00:33:39,710 --> 00:33:47,060
access is<font color="#E5E5E5"> 100% application access is</font>

743
00:33:43,610 --> 00:33:48,530
100%<font color="#E5E5E5"> and if you're reading off memory if</font>

744
00:33:47,060 --> 00:33:50,030
<font color="#E5E5E5">you have some kind</font><font color="#CCCCCC"> of a</font><font color="#E5E5E5"> vulnerability</font>

745
00:33:48,530 --> 00:33:52,220
<font color="#E5E5E5">where remotely you</font><font color="#CCCCCC"> can read memory off</font>

746
00:33:50,030 --> 00:33:53,690
the device<font color="#E5E5E5"> then it's usually game over</font>

747
00:33:52,220 --> 00:33:55,280
at that<font color="#E5E5E5"> point</font><font color="#CCCCCC"> too because you</font><font color="#E5E5E5"> can just</font>

748
00:33:53,690 --> 00:34:01,130
read<font color="#CCCCCC"> the places in memory where the keys</font>

749
00:33:55,280 --> 00:34:02,690
have<font color="#E5E5E5"> been stored done now in the non</font>

750
00:34:01,130 --> 00:34:03,980
operating<font color="#E5E5E5"> system model things are a</font>

751
00:34:02,690 --> 00:34:05,120
little<font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more interesting and</font><font color="#E5E5E5"> they're</font>

752
00:34:03,980 --> 00:34:08,960
more interesting because<font color="#E5E5E5"> obviously</font>

753
00:34:05,120 --> 00:34:11,449
they're simpler but it's also

754
00:34:08,960 --> 00:34:15,080
<font color="#CCCCCC">interesting to</font><font color="#E5E5E5"> me because as an IOT</font>

755
00:34:11,449 --> 00:34:16,399
engineer or<font color="#E5E5E5"> system</font><font color="#CCCCCC"> architect</font><font color="#E5E5E5"> this model</font>

756
00:34:15,080 --> 00:34:18,319
is<font color="#CCCCCC"> actually a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> more fun</font>

757
00:34:16,400 --> 00:34:20,810
because it requires more<font color="#CCCCCC"> work on the</font>

758
00:34:18,320 --> 00:34:22,610
behalf of<font color="#CCCCCC"> the attacker because you don't</font>

759
00:34:20,810 --> 00:34:24,590
always have a<font color="#E5E5E5"> real-time operating system</font>

760
00:34:22,610 --> 00:34:26,870
running<font color="#E5E5E5"> in user land in the kernel</font>

761
00:34:24,590 --> 00:34:28,880
sometimes it's you know<font color="#CCCCCC"> just a standard</font>

762
00:34:26,870 --> 00:34:31,040
application<font color="#CCCCCC"> that the engineers have</font><font color="#E5E5E5"> hand</font>

763
00:34:28,880 --> 00:34:32,360
<font color="#E5E5E5">written and then you actually have to do</font>

764
00:34:31,040 --> 00:34:35,179
something<font color="#E5E5E5"> interesting like reverse</font>

765
00:34:32,360 --> 00:34:36,260
engineer a<font color="#E5E5E5"> real you know application</font>

766
00:34:35,179 --> 00:34:39,199
that does something<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you've never</font>

767
00:34:36,260 --> 00:34:42,050
seen<font color="#CCCCCC"> before</font><font color="#E5E5E5"> which is cool you know it's</font>

768
00:34:39,199 --> 00:34:43,429
<font color="#CCCCCC">fun to actually</font><font color="#E5E5E5"> do some kind of reverse</font>

769
00:34:42,050 --> 00:34:46,010
engineering<font color="#E5E5E5"> that</font><font color="#CCCCCC"> takes a little</font><font color="#E5E5E5"> bit</font><font color="#CCCCCC"> of</font>

770
00:34:43,429 --> 00:34:47,449
thought<font color="#E5E5E5"> but most of these</font><font color="#CCCCCC"> are architects</font>

771
00:34:46,010 --> 00:34:51,860
in the<font color="#E5E5E5"> same way anyway because it's all</font>

772
00:34:47,449 --> 00:34:53,960
basic you know arm<font color="#E5E5E5"> imagery so you know</font>

773
00:34:51,860 --> 00:34:56,720
you see one arm<font color="#E5E5E5"> image you've seen them</font>

774
00:34:53,960 --> 00:34:58,340
all<font color="#E5E5E5"> but the applications themselves are</font>

775
00:34:56,719 --> 00:35:00,410
<font color="#E5E5E5">always a little bit</font><font color="#CCCCCC"> unique based on what</font>

776
00:34:58,340 --> 00:35:01,460
the engineer thinks<font color="#E5E5E5"> is important so you</font>

777
00:35:00,410 --> 00:35:02,839
<font color="#CCCCCC">have to do a little</font><font color="#E5E5E5"> bit of reverse</font>

778
00:35:01,460 --> 00:35:05,030
<font color="#CCCCCC">engineering but</font><font color="#E5E5E5"> you can still perform</font>

779
00:35:02,840 --> 00:35:08,050
the exact same attacks here the

780
00:35:05,030 --> 00:35:10,430
architecture itself<font color="#CCCCCC"> is no different in</font>

781
00:35:08,050 --> 00:35:17,180
the non operating<font color="#E5E5E5"> system version the</font>

782
00:35:10,430 --> 00:35:18,649
operating system version in the<font color="#E5E5E5"> external</font>

783
00:35:17,180 --> 00:35:22,730
element model which is<font color="#CCCCCC"> what you</font><font color="#E5E5E5"> have an</font>

784
00:35:18,650 --> 00:35:24,470
MFI this is really<font color="#E5E5E5"> cool because now you</font>

785
00:35:22,730 --> 00:35:30,080
<font color="#E5E5E5">have something</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> you can't physically</font>

786
00:35:24,470 --> 00:35:31,640
attack in some<font color="#CCCCCC"> cases so in a secure</font>

787
00:35:30,080 --> 00:35:34,130
element model where you actually have a

788
00:35:31,640 --> 00:35:36,890
chip on<font color="#E5E5E5"> the board or</font><font color="#CCCCCC"> the external</font>

789
00:35:34,130 --> 00:35:39,530
<font color="#E5E5E5">element model in this</font><font color="#CCCCCC"> case you're</font>

790
00:35:36,890 --> 00:35:42,109
presuming<font color="#E5E5E5"> that the chip itself does</font><font color="#CCCCCC"> not</font>

791
00:35:39,530 --> 00:35:43,280
allow physical access to<font color="#CCCCCC"> the keys so</font>

792
00:35:42,110 --> 00:35:45,560
it's not like<font color="#E5E5E5"> reading off of</font>

793
00:35:43,280 --> 00:35:46,960
flash or reading off EEPROM where the

794
00:35:45,560 --> 00:35:49,220
<font color="#CCCCCC">dead is</font><font color="#E5E5E5"> just going to be in the clear</font>

795
00:35:46,960 --> 00:35:51,620
<font color="#E5E5E5">you're not supposed</font><font color="#CCCCCC"> to be able</font><font color="#E5E5E5"> to get</font>

796
00:35:49,220 --> 00:35:54,649
keys off<font color="#CCCCCC"> of the secure element</font><font color="#E5E5E5"> ever</font><font color="#CCCCCC"> it's</font>

797
00:35:51,620 --> 00:35:55,940
supposed to<font color="#E5E5E5"> be on their period the only</font>

798
00:35:54,650 --> 00:35:57,440
device that<font color="#CCCCCC"> actually knows how to</font>

799
00:35:55,940 --> 00:36:00,320
interact<font color="#E5E5E5"> with it</font><font color="#CCCCCC"> is the secure element</font>

800
00:35:57,440 --> 00:36:02,000
<font color="#E5E5E5">itself so all</font><font color="#CCCCCC"> you can do is make</font>

801
00:36:00,320 --> 00:36:04,700
requests to<font color="#E5E5E5"> the secure element for</font>

802
00:36:02,000 --> 00:36:08,540
information for signing for<font color="#CCCCCC"> verification</font>

803
00:36:04,700 --> 00:36:10,520
<font color="#E5E5E5">etc and it will act on your behalf but</font>

804
00:36:08,540 --> 00:36:12,680
aside from that<font color="#CCCCCC"> you actually</font><font color="#E5E5E5"> can't do</font>

805
00:36:10,520 --> 00:36:18,050
<font color="#CCCCCC">anything</font><font color="#E5E5E5"> else with a device so in this</font>

806
00:36:12,680 --> 00:36:20,750
case physical access<font color="#CCCCCC"> in some cases is</font>

807
00:36:18,050 --> 00:36:23,090
relevant<font color="#E5E5E5"> because certain secure elements</font>

808
00:36:20,750 --> 00:36:24,920
you can<font color="#E5E5E5"> attack it over the bus because</font>

809
00:36:23,090 --> 00:36:26,690
there isn't<font color="#CCCCCC"> actually a way for it to</font>

810
00:36:24,920 --> 00:36:31,160
guarantee<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you are who you</font><font color="#CCCCCC"> say you</font>

811
00:36:26,690 --> 00:36:33,740
are<font color="#CCCCCC"> as in say you have a secure element</font>

812
00:36:31,160 --> 00:36:36,230
<font color="#E5E5E5">on a board and the secure element is</font>

813
00:36:33,740 --> 00:36:37,729
only authorized to communicate with you

814
00:36:36,230 --> 00:36:40,400
know an application that's running<font color="#E5E5E5"> on</font>

815
00:36:37,730 --> 00:36:42,560
firmware<font color="#E5E5E5"> well the application</font><font color="#CCCCCC"> that's</font>

816
00:36:40,400 --> 00:36:45,380
<font color="#E5E5E5">running on firmware needs to store that</font>

817
00:36:42,560 --> 00:36:47,660
key to verify<font color="#E5E5E5"> itself right and again</font>

818
00:36:45,380 --> 00:36:49,520
this<font color="#E5E5E5"> application in firmware can't</font>

819
00:36:47,660 --> 00:36:52,250
<font color="#CCCCCC">storage secrets</font><font color="#E5E5E5"> anywhere that you can't</font>

820
00:36:49,520 --> 00:36:54,110
get because<font color="#E5E5E5"> it again it's an insecure</font>

821
00:36:52,250 --> 00:36:57,860
chip<font color="#E5E5E5"> that's why there's a secure element</font>

822
00:36:54,110 --> 00:37:00,110
there so you can read out<font color="#CCCCCC"> of flash</font><font color="#E5E5E5"> from</font>

823
00:36:57,860 --> 00:37:02,000
<font color="#E5E5E5">that</font><font color="#CCCCCC"> particular device get that key and</font>

824
00:37:00,110 --> 00:37:07,010
then communicate with that<font color="#E5E5E5"> secure</font>

825
00:37:02,000 --> 00:37:09,800
element<font color="#CCCCCC"> easy-breezy</font><font color="#E5E5E5"> right so in some</font>

826
00:37:07,010 --> 00:37:12,440
cases in this model<font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually can</font>

827
00:37:09,800 --> 00:37:14,600
attack<font color="#CCCCCC"> that</font><font color="#E5E5E5"> physical device over</font><font color="#CCCCCC"> the bus</font>

828
00:37:12,440 --> 00:37:15,590
but again it's<font color="#E5E5E5"> not a physical attack as</font>

829
00:37:14,600 --> 00:37:17,600
in you're just<font color="#E5E5E5"> gonna read something</font>

830
00:37:15,590 --> 00:37:19,790
<font color="#E5E5E5">you've got to</font><font color="#CCCCCC"> actually have it turned on</font>

831
00:37:17,600 --> 00:37:21,140
you have to<font color="#E5E5E5"> interact with</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> device you</font>

832
00:37:19,790 --> 00:37:23,570
have<font color="#E5E5E5"> to adhere to the application</font>

833
00:37:21,140 --> 00:37:25,609
specification or the API there's

834
00:37:23,570 --> 00:37:27,680
relevant steps that need<font color="#CCCCCC"> to be</font><font color="#E5E5E5"> taken in</font>

835
00:37:25,610 --> 00:37:30,500
order<font color="#CCCCCC"> to interact</font><font color="#E5E5E5"> with it and not it</font>

836
00:37:27,680 --> 00:37:35,000
doesn't always work<font color="#CCCCCC"> depending on how</font>

837
00:37:30,500 --> 00:37:38,480
it's been architected but<font color="#E5E5E5"> regardless</font>

838
00:37:35,000 --> 00:37:40,100
this<font color="#E5E5E5"> is actually a fairly more secure</font>

839
00:37:38,480 --> 00:37:42,650
model because<font color="#E5E5E5"> you actually have</font><font color="#CCCCCC"> tool and</font>

840
00:37:40,100 --> 00:37:45,350
code execution<font color="#CCCCCC"> and user land</font><font color="#E5E5E5"> or kernel</font>

841
00:37:42,650 --> 00:37:47,420
<font color="#CCCCCC">LAN and then bridge down into the secure</font>

842
00:37:45,350 --> 00:37:50,330
element from there you have to tell the

843
00:37:47,420 --> 00:37:52,730
architecture<font color="#E5E5E5"> hey perform requests on</font><font color="#CCCCCC"> my</font>

844
00:37:50,330 --> 00:37:56,450
behalf<font color="#CCCCCC"> if you have a properly</font>

845
00:37:52,730 --> 00:37:57,260
provisioned<font color="#CCCCCC"> IOT environment then the IOT</font>

846
00:37:56,450 --> 00:37:59,029
device itself

847
00:37:57,260 --> 00:38:01,040
we'll have<font color="#E5E5E5"> a unique key that's stored in</font>

848
00:37:59,030 --> 00:38:03,460
flash<font color="#E5E5E5"> so if you pop flash on one device</font>

849
00:38:01,040 --> 00:38:05,720
<font color="#CCCCCC">you</font><font color="#E5E5E5"> don't know all the secure element</font>

850
00:38:03,460 --> 00:38:08,090
communication<font color="#E5E5E5"> keys for all devices in</font>

851
00:38:05,720 --> 00:38:10,189
<font color="#CCCCCC">that fleet so then you won't necessarily</font>

852
00:38:08,090 --> 00:38:11,990
know exactly<font color="#CCCCCC"> how to communicate</font><font color="#E5E5E5"> with all</font>

853
00:38:10,190 --> 00:38:13,850
of them and you<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> pop each one</font>

854
00:38:11,990 --> 00:38:15,470
individually<font color="#CCCCCC"> that's a huge pain in</font><font color="#E5E5E5"> the</font>

855
00:38:13,850 --> 00:38:17,690
<font color="#CCCCCC">ass</font><font color="#E5E5E5"> but you really never</font><font color="#CCCCCC"> see that in</font>

856
00:38:15,470 --> 00:38:23,810
practice because<font color="#E5E5E5"> it's very very hard to</font>

857
00:38:17,690 --> 00:38:26,240
<font color="#E5E5E5">do that</font><font color="#CCCCCC"> X scale so in this model</font><font color="#E5E5E5"> it's</font>

858
00:38:23,810 --> 00:38:29,750
<font color="#E5E5E5">typically it's more secure obviously</font>

859
00:38:26,240 --> 00:38:35,209
than the<font color="#E5E5E5"> the flash model but it's not</font>

860
00:38:29,750 --> 00:38:37,310
<font color="#E5E5E5">secure because again the external</font>

861
00:38:35,210 --> 00:38:38,900
element has absolutely no<font color="#CCCCCC"> idea what</font>

862
00:38:37,310 --> 00:38:40,880
applications<font color="#E5E5E5"> are running in kernel and</font>

863
00:38:38,900 --> 00:38:42,140
<font color="#E5E5E5">unless there's a security key and if</font>

864
00:38:40,880 --> 00:38:43,640
there's a<font color="#CCCCCC"> security key it can be</font>

865
00:38:42,140 --> 00:38:46,009
<font color="#E5E5E5">retrieved by</font><font color="#CCCCCC"> you because</font><font color="#E5E5E5"> there's no</font>

866
00:38:43,640 --> 00:38:47,750
security store on this device<font color="#E5E5E5"> and if</font>

867
00:38:46,010 --> 00:38:49,700
there's no security store or you<font color="#E5E5E5"> have to</font>

868
00:38:47,750 --> 00:38:50,420
verify<font color="#CCCCCC"> the application running</font><font color="#E5E5E5"> in kernel</font>

869
00:38:49,700 --> 00:38:54,410
and<font color="#CCCCCC"> userland</font>

870
00:38:50,420 --> 00:39:00,650
that can be instrumented and<font color="#CCCCCC"> has anybody</font>

871
00:38:54,410 --> 00:39:03,379
seen the recent ledger<font color="#E5E5E5"> nan OS hack I'm</font>

872
00:39:00,650 --> 00:39:06,830
gonna forget<font color="#E5E5E5"> the kid's name but</font>

873
00:39:03,380 --> 00:39:08,990
essentially one of<font color="#E5E5E5"> the best attacks</font>

874
00:39:06,830 --> 00:39:12,080
against<font color="#E5E5E5"> this model</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> I've seen in</font>

875
00:39:08,990 --> 00:39:17,060
recent times<font color="#E5E5E5"> was performed against the</font>

876
00:39:12,080 --> 00:39:19,610
<font color="#CCCCCC">Nana</font><font color="#E5E5E5"> ledger</font><font color="#CCCCCC"> s-so salim rashid</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> SPU</font><font color="#E5E5E5"> do</font>

877
00:39:17,060 --> 00:39:21,290
<font color="#E5E5E5">WI</font><font color="#CCCCCC"> AR</font><font color="#E5E5E5"> I don't actually know how to</font>

878
00:39:19,610 --> 00:39:23,420
<font color="#CCCCCC">pronounce this Twitter handle</font><font color="#E5E5E5"> which is</font>

879
00:39:21,290 --> 00:39:25,190
why I had to look it up but<font color="#CCCCCC"> Salim</font>

880
00:39:23,420 --> 00:39:28,520
basically performed an attack against

881
00:39:25,190 --> 00:39:30,110
<font color="#E5E5E5">this model against ledger nan OS now</font>

882
00:39:28,520 --> 00:39:31,790
that's<font color="#E5E5E5"> really important because</font><font color="#CCCCCC"> legend</font>

883
00:39:30,110 --> 00:39:34,760
<font color="#CCCCCC">an</font><font color="#E5E5E5"> OS as some of you might know is a</font>

884
00:39:31,790 --> 00:39:36,830
<font color="#CCCCCC">crypto currency Hardware wallet but</font>

885
00:39:34,760 --> 00:39:39,560
<font color="#E5E5E5">basically he proved because they use</font>

886
00:39:36,830 --> 00:39:43,819
this<font color="#E5E5E5"> model</font><font color="#CCCCCC"> that you can man in the</font>

887
00:39:39,560 --> 00:39:47,299
middle any<font color="#CCCCCC"> Ledyard</font><font color="#E5E5E5"> an OS</font><font color="#CCCCCC"> that you get</font>

888
00:39:43,820 --> 00:39:50,180
from<font color="#E5E5E5"> ledger so even if somebody sends it</font>

889
00:39:47,300 --> 00:39:51,530
from ledger<font color="#E5E5E5"> if you are the NSA</font><font color="#CCCCCC"> or you're</font>

890
00:39:50,180 --> 00:39:53,750
another you know a three-letter

891
00:39:51,530 --> 00:39:55,970
organization you can intercept<font color="#CCCCCC"> that</font>

892
00:39:53,750 --> 00:39:59,150
shipment<font color="#E5E5E5"> perform the same attack that</font>

893
00:39:55,970 --> 00:40:01,879
<font color="#E5E5E5">Salim did implant your own</font><font color="#CCCCCC"> firmware</font><font color="#E5E5E5"> and</font>

894
00:39:59,150 --> 00:40:04,220
then ship<font color="#CCCCCC"> it on forward to the recipient</font>

895
00:40:01,880 --> 00:40:06,530
and<font color="#E5E5E5"> the recipient has no idea</font><font color="#CCCCCC"> because</font>

896
00:40:04,220 --> 00:40:08,870
they think<font color="#CCCCCC"> that it's still secure</font><font color="#E5E5E5"> when</font>

897
00:40:06,530 --> 00:40:11,240
they boot it up<font color="#E5E5E5"> it'll</font><font color="#CCCCCC"> actually act like</font>

898
00:40:08,870 --> 00:40:13,250
the normal device because the<font color="#E5E5E5"> secure</font>

899
00:40:11,240 --> 00:40:14,868
<font color="#E5E5E5">element believes that the</font><font color="#CCCCCC"> ecosystem the</font>

900
00:40:13,250 --> 00:40:17,690
environment<font color="#E5E5E5"> that it's running in is</font>

901
00:40:14,869 --> 00:40:20,170
secure but again<font color="#E5E5E5"> the secure element has</font>

902
00:40:17,690 --> 00:40:23,210
no idea it has no<font color="#E5E5E5"> direct</font><font color="#CCCCCC"> access to</font>

903
00:40:20,170 --> 00:40:24,890
<font color="#CCCCCC">memory for the</font><font color="#E5E5E5"> actual application</font>

904
00:40:23,210 --> 00:40:27,140
processor there's no way<font color="#CCCCCC"> for it to</font><font color="#E5E5E5"> make</font>

905
00:40:24,890 --> 00:40:29,600
<font color="#E5E5E5">any</font><font color="#CCCCCC"> guarantees about the application</font>

906
00:40:27,140 --> 00:40:31,700
environment that it<font color="#E5E5E5"> runs in so it seems</font>

907
00:40:29,600 --> 00:40:33,380
more<font color="#E5E5E5"> secure and it is more secure from a</font>

908
00:40:31,700 --> 00:40:36,230
physical<font color="#E5E5E5"> perspective and by physical I</font>

909
00:40:33,380 --> 00:40:39,440
mean you cannot get all the keys off of

910
00:40:36,230 --> 00:40:41,210
<font color="#CCCCCC">a secure element itself</font><font color="#E5E5E5"> however the</font>

911
00:40:39,440 --> 00:40:43,660
disconnect between the application

912
00:40:41,210 --> 00:40:47,420
processor and the secure element are

913
00:40:43,660 --> 00:40:49,069
enough that you can create always you

914
00:40:47,420 --> 00:40:51,710
can<font color="#CCCCCC"> always</font><font color="#E5E5E5"> create an attack between</font>

915
00:40:49,070 --> 00:40:54,200
these two architectures<font color="#E5E5E5"> so in the Leger</font>

916
00:40:51,710 --> 00:40:55,400
<font color="#CCCCCC">nano s model</font><font color="#E5E5E5"> what they did was they</font>

917
00:40:54,200 --> 00:40:58,520
<font color="#CCCCCC">basically said all right</font><font color="#E5E5E5"> we're gonna</font>

918
00:40:55,400 --> 00:41:01,250
<font color="#CCCCCC">verify our chips</font><font color="#E5E5E5"> by forcing the</font>

919
00:40:58,520 --> 00:41:04,310
application to send<font color="#E5E5E5"> an image of the</font>

920
00:41:01,250 --> 00:41:05,840
entire<font color="#CCCCCC"> range of flash memory</font><font color="#E5E5E5"> to the</font>

921
00:41:04,310 --> 00:41:08,930
secure element and the secure element

922
00:41:05,840 --> 00:41:12,710
will then verify us<font color="#E5E5E5"> by saying</font><font color="#CCCCCC"> okay the</font>

923
00:41:08,930 --> 00:41:15,259
entire range of memory has been proved

924
00:41:12,710 --> 00:41:17,690
ibly verified and signed<font color="#E5E5E5"> so it basically</font>

925
00:41:15,260 --> 00:41:19,369
<font color="#E5E5E5">says all right</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> the executable</font>

926
00:41:17,690 --> 00:41:22,250
image<font color="#E5E5E5"> that I expect to</font><font color="#CCCCCC"> be running</font><font color="#E5E5E5"> on the</font>

927
00:41:19,369 --> 00:41:25,010
<font color="#E5E5E5">kernel on the application processor</font>

928
00:41:22,250 --> 00:41:27,859
therefore I will unlock myself and give

929
00:41:25,010 --> 00:41:31,670
you access<font color="#E5E5E5"> to</font><font color="#CCCCCC"> Kies but again the problem</font>

930
00:41:27,859 --> 00:41:34,130
<font color="#E5E5E5">is that if you</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> have an app your</font>

931
00:41:31,670 --> 00:41:35,900
own application running<font color="#E5E5E5"> your own implant</font>

932
00:41:34,130 --> 00:41:38,270
running in flash on the application

933
00:41:35,900 --> 00:41:40,760
processor you can tell the secure

934
00:41:38,270 --> 00:41:42,920
element<font color="#E5E5E5"> anything you want so it Salim</font>

935
00:41:40,760 --> 00:41:46,040
did is basically<font color="#CCCCCC"> found ranges in memory</font>

936
00:41:42,920 --> 00:41:49,070
where the<font color="#E5E5E5"> data was the same and he</font>

937
00:41:46,040 --> 00:41:52,300
<font color="#CCCCCC">overrode</font><font color="#E5E5E5"> those addresses with his own</font>

938
00:41:49,070 --> 00:41:56,500
implant<font color="#E5E5E5"> and then when he was booting up</font>

939
00:41:52,300 --> 00:42:00,920
<font color="#E5E5E5">he basically just you know sent images</font>

940
00:41:56,500 --> 00:42:03,290
of the application processors flash to

941
00:42:00,920 --> 00:42:05,270
the<font color="#E5E5E5"> secure element and whenever he hit</font>

942
00:42:03,290 --> 00:42:07,850
his own<font color="#E5E5E5"> regions where he had his implant</font>

943
00:42:05,270 --> 00:42:10,790
<font color="#E5E5E5">he referenced the areas of</font><font color="#CCCCCC"> memory where</font>

944
00:42:07,850 --> 00:42:13,339
<font color="#CCCCCC">that in where the copy already was so he</font>

945
00:42:10,790 --> 00:42:15,380
was able<font color="#CCCCCC"> to basically just trick the</font>

946
00:42:13,340 --> 00:42:18,740
secure element into unlocking itself and

947
00:42:15,380 --> 00:42:20,240
hiding his own implant by abusing<font color="#E5E5E5"> those</font>

948
00:42:18,740 --> 00:42:23,029
copying regions of memory<font color="#E5E5E5"> which was</font>

949
00:42:20,240 --> 00:42:24,709
actually<font color="#E5E5E5"> a pretty brilliant attack and</font>

950
00:42:23,030 --> 00:42:26,480
it was it was<font color="#E5E5E5"> not</font>

951
00:42:24,710 --> 00:42:28,280
<font color="#CCCCCC">Cerie because there's only a</font><font color="#E5E5E5"> small</font>

952
00:42:26,480 --> 00:42:30,080
<font color="#CCCCCC">amount</font><font color="#E5E5E5"> of flash available in that in</font>

953
00:42:28,280 --> 00:42:32,869
that<font color="#CCCCCC"> environment so we</font><font color="#E5E5E5"> had a little</font>

954
00:42:30,080 --> 00:42:35,380
<font color="#E5E5E5">amount of memory to work with</font><font color="#CCCCCC"> but again</font>

955
00:42:32,869 --> 00:42:39,500
in this model there is<font color="#E5E5E5"> absolutely no way</font>

956
00:42:35,380 --> 00:42:41,240
<font color="#E5E5E5">to provably secure the application</font>

957
00:42:39,500 --> 00:42:42,710
processor from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> secure element or</font><font color="#E5E5E5"> the</font>

958
00:42:41,240 --> 00:42:44,209
secure element from the secure processor

959
00:42:42,710 --> 00:42:46,460
<font color="#CCCCCC">or</font><font color="#E5E5E5"> from the application processor</font>

960
00:42:44,210 --> 00:42:50,690
there's no way to do it<font color="#CCCCCC"> so in this model</font>

961
00:42:46,460 --> 00:42:53,330
<font color="#E5E5E5">it will always 100% be broken which is</font>

962
00:42:50,690 --> 00:42:56,000
<font color="#E5E5E5">exactly the problem you see in</font><font color="#CCCCCC"> MFI and</font>

963
00:42:53,330 --> 00:42:57,529
the reason why<font color="#CCCCCC"> I was able to break MFI</font>

964
00:42:56,000 --> 00:42:59,690
so easily and I'll get<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> that in a</font>

965
00:42:57,530 --> 00:43:01,760
second<font color="#E5E5E5"> the third model is the internal</font>

966
00:42:59,690 --> 00:43:03,260
element model and this<font color="#E5E5E5"> is the trust zone</font>

967
00:43:01,760 --> 00:43:05,510
model<font color="#CCCCCC"> okay</font>

968
00:43:03,260 --> 00:43:07,790
now this model you would<font color="#E5E5E5"> think would be</font>

969
00:43:05,510 --> 00:43:10,070
<font color="#E5E5E5">more secure because the processor</font><font color="#CCCCCC"> itself</font>

970
00:43:07,790 --> 00:43:12,890
has the secure element<font color="#E5E5E5"> on the inside of</font>

971
00:43:10,070 --> 00:43:15,290
<font color="#CCCCCC">the processor so the first thing that</font>

972
00:43:12,890 --> 00:43:18,589
<font color="#E5E5E5">occurs is that</font><font color="#CCCCCC"> you get booted into a</font>

973
00:43:15,290 --> 00:43:21,080
secure world where the secure processor

974
00:43:18,589 --> 00:43:23,180
<font color="#CCCCCC">or</font><font color="#E5E5E5"> the secure side of the processor</font>

975
00:43:21,080 --> 00:43:24,770
knows<font color="#CCCCCC"> oh the code that</font><font color="#E5E5E5"> I'm executing</font>

976
00:43:23,180 --> 00:43:27,740
right<font color="#E5E5E5"> now has been verified as</font>

977
00:43:24,770 --> 00:43:30,259
guaranteed to be trusted<font color="#E5E5E5"> because</font><font color="#CCCCCC"> it's</font>

978
00:43:27,740 --> 00:43:33,470
usually a read-only memory image that's

979
00:43:30,260 --> 00:43:35,420
inside of<font color="#E5E5E5"> the of the processors core is</font>

980
00:43:33,470 --> 00:43:37,459
<font color="#CCCCCC">then like this isn't the application</font>

981
00:43:35,420 --> 00:43:39,740
layer at all<font color="#E5E5E5"> this has nothing</font><font color="#CCCCCC"> to do with</font>

982
00:43:37,460 --> 00:43:41,540
<font color="#E5E5E5">the the customer or the application this</font>

983
00:43:39,740 --> 00:43:43,250
<font color="#E5E5E5">is something inside the processor</font><font color="#CCCCCC"> that</font>

984
00:43:41,540 --> 00:43:45,920
will make guarantees<font color="#CCCCCC"> about the next</font>

985
00:43:43,250 --> 00:43:47,780
stage<font color="#E5E5E5"> of execution so usually what</font>

986
00:43:45,920 --> 00:43:49,880
happens is<font color="#E5E5E5"> somebody puts their</font><font color="#CCCCCC"> own keys</font>

987
00:43:47,780 --> 00:43:52,220
inside<font color="#E5E5E5"> of the secure element trust zone</font>

988
00:43:49,880 --> 00:43:54,410
<font color="#E5E5E5">whatever you want to call want to call</font>

989
00:43:52,220 --> 00:43:57,259
it and then<font color="#CCCCCC"> the</font><font color="#E5E5E5"> first stage loader in</font>

990
00:43:54,410 --> 00:43:59,540
ROM will actually do the initial trusted

991
00:43:57,260 --> 00:44:01,609
verification<font color="#E5E5E5"> of</font><font color="#CCCCCC"> that next stage image so</font>

992
00:43:59,540 --> 00:44:03,200
the application image the<font color="#E5E5E5"> next stage</font>

993
00:44:01,609 --> 00:44:06,348
bootloader or the trusted bootloader

994
00:44:03,200 --> 00:44:08,060
will be signed and verified and the<font color="#CCCCCC"> rom</font>

995
00:44:06,349 --> 00:44:10,190
image will actually perform<font color="#CCCCCC"> the</font>

996
00:44:08,060 --> 00:44:11,960
verification now this is all good<font color="#E5E5E5"> and</font>

997
00:44:10,190 --> 00:44:12,950
this<font color="#E5E5E5"> is proper process like this is what</font>

998
00:44:11,960 --> 00:44:14,839
we should<font color="#CCCCCC"> be</font><font color="#E5E5E5"> doing</font>

999
00:44:12,950 --> 00:44:17,210
except<font color="#CCCCCC"> that trust zone</font><font color="#E5E5E5"> is extremely</font>

1000
00:44:14,839 --> 00:44:19,250
expensive<font color="#E5E5E5"> which is</font><font color="#CCCCCC"> why that you don't</font>

1001
00:44:17,210 --> 00:44:22,520
actually see it deployed everywhere<font color="#CCCCCC"> it's</font>

1002
00:44:19,250 --> 00:44:24,050
<font color="#E5E5E5">not open it's an open a pseudo open</font>

1003
00:44:22,520 --> 00:44:27,560
specification<font color="#CCCCCC"> that most implementations</font>

1004
00:44:24,050 --> 00:44:29,420
<font color="#CCCCCC">of require NDA</font><font color="#E5E5E5"> and even if you have the</font>

1005
00:44:27,560 --> 00:44:32,089
NDA you still don't get full access to

1006
00:44:29,420 --> 00:44:33,980
<font color="#E5E5E5">all</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> documentation on the trust zone</font>

1007
00:44:32,089 --> 00:44:36,020
implementation you only get<font color="#CCCCCC"> access to</font>

1008
00:44:33,980 --> 00:44:38,299
the pieces<font color="#E5E5E5"> that you need to build a</font>

1009
00:44:36,020 --> 00:44:40,569
secure application or to<font color="#E5E5E5"> interact</font>

1010
00:44:38,299 --> 00:44:43,279
with the<font color="#CCCCCC"> manufacturers secure</font>

1011
00:44:40,569 --> 00:44:45,799
implementation and that's really

1012
00:44:43,279 --> 00:44:49,069
important<font color="#E5E5E5"> because in this model it's</font>

1013
00:44:45,799 --> 00:44:52,640
flawed as well for<font color="#E5E5E5"> those reasons trust</font>

1014
00:44:49,069 --> 00:44:56,420
zone<font color="#E5E5E5"> or</font><font color="#CCCCCC"> the secure world inside trust</font>

1015
00:44:52,640 --> 00:44:59,239
zone<font color="#E5E5E5"> is a black box</font><font color="#CCCCCC"> you cannot see it</font>

1016
00:44:56,420 --> 00:45:02,599
essentially the<font color="#CCCCCC"> way it</font><font color="#E5E5E5"> functions is</font><font color="#CCCCCC"> the</font>

1017
00:44:59,239 --> 00:45:05,929
virtualization<font color="#E5E5E5"> of the ARM processor</font>

1018
00:45:02,599 --> 00:45:09,079
creates<font color="#CCCCCC"> two separate worlds it</font><font color="#E5E5E5"> basically</font>

1019
00:45:05,929 --> 00:45:10,459
creates<font color="#CCCCCC"> two virtual CPUs ones</font><font color="#E5E5E5"> normal</font>

1020
00:45:09,079 --> 00:45:12,739
world that runs your Linux operating

1021
00:45:10,459 --> 00:45:15,499
system<font color="#E5E5E5"> in one secure</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> which usually</font>

1022
00:45:12,739 --> 00:45:17,509
<font color="#CCCCCC">runs some</font><font color="#E5E5E5"> kind of simple application or</font>

1023
00:45:15,499 --> 00:45:21,738
a real-time<font color="#CCCCCC"> operating system</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> runs</font>

1024
00:45:17,509 --> 00:45:24,469
<font color="#E5E5E5">some kind of secure API and what ends up</font>

1025
00:45:21,739 --> 00:45:26,569
happening is<font color="#E5E5E5"> the secure world lives in a</font>

1026
00:45:24,469 --> 00:45:29,239
black box that<font color="#CCCCCC"> the normal world cannot</font>

1027
00:45:26,569 --> 00:45:32,599
see and the normal world just makes

1028
00:45:29,239 --> 00:45:34,849
traps<font color="#E5E5E5"> or interrupt requests to secure</font>

1029
00:45:32,599 --> 00:45:36,259
world for information saying hey I need

1030
00:45:34,849 --> 00:45:39,859
<font color="#E5E5E5">to sign</font><font color="#CCCCCC"> something or I</font><font color="#E5E5E5"> need</font><font color="#CCCCCC"> to verify</font>

1031
00:45:36,259 --> 00:45:42,469
<font color="#E5E5E5">something can you help me but the normal</font>

1032
00:45:39,859 --> 00:45:45,739
world has no way<font color="#CCCCCC"> of really verifying</font>

1033
00:45:42,469 --> 00:45:47,869
that<font color="#E5E5E5"> secure world is secure</font><font color="#CCCCCC"> and it has</font>

1034
00:45:45,739 --> 00:45:50,650
no way of<font color="#CCCCCC"> verifying</font><font color="#E5E5E5"> the identity of</font>

1035
00:45:47,869 --> 00:45:54,499
secure world<font color="#E5E5E5"> and that's more important</font>

1036
00:45:50,650 --> 00:45:56,329
because<font color="#E5E5E5"> it's kind of the opposite of the</font>

1037
00:45:54,499 --> 00:45:59,328
previous<font color="#E5E5E5"> model in the previous external</font>

1038
00:45:56,329 --> 00:46:02,630
element model the application processor

1039
00:45:59,329 --> 00:46:04,819
is always<font color="#E5E5E5"> insecure</font><font color="#CCCCCC"> and the secure</font>

1040
00:46:02,630 --> 00:46:07,069
element really<font color="#E5E5E5"> has absolutely no way</font><font color="#CCCCCC"> of</font>

1041
00:46:04,819 --> 00:46:08,420
verifying<font color="#E5E5E5"> the identity of the</font>

1042
00:46:07,069 --> 00:46:10,038
application processor because<font color="#CCCCCC"> the</font>

1043
00:46:08,420 --> 00:46:14,420
application processor can always trick

1044
00:46:10,039 --> 00:46:17,749
it but in trust zone the application

1045
00:46:14,420 --> 00:46:21,199
side can never truly verify the secure

1046
00:46:17,749 --> 00:46:23,149
side<font color="#E5E5E5"> so in this model</font><font color="#CCCCCC"> as an attacker all</font>

1047
00:46:21,199 --> 00:46:26,299
you have to do is just have a malicious

1048
00:46:23,150 --> 00:46:28,339
<font color="#E5E5E5">secure world so if you want to deploy an</font>

1049
00:46:26,299 --> 00:46:30,288
attack against an application you

1050
00:46:28,339 --> 00:46:32,019
<font color="#E5E5E5">basically just say I'm a secure world I</font>

1051
00:46:30,289 --> 00:46:34,549
have trusted keys and you<font color="#CCCCCC"> can trust</font><font color="#E5E5E5"> me</font>

1052
00:46:32,019 --> 00:46:37,939
<font color="#E5E5E5">but the application side doesn't know</font>

1053
00:46:34,549 --> 00:46:39,949
all<font color="#E5E5E5"> it's presuming is that it lives in a</font>

1054
00:46:37,939 --> 00:46:42,678
<font color="#CCCCCC">cpu environment</font><font color="#E5E5E5"> that has been made</font>

1055
00:46:39,949 --> 00:46:46,729
guaranteed by trust<font color="#E5E5E5"> owned and by the</font>

1056
00:46:42,679 --> 00:46:48,859
manufacturer<font color="#CCCCCC"> so it</font><font color="#E5E5E5"> just basically says</font>

1057
00:46:46,729 --> 00:46:50,868
okay you've got certificates great those

1058
00:46:48,859 --> 00:46:52,160
certificates<font color="#E5E5E5"> are clearly a part of my</font>

1059
00:46:50,869 --> 00:46:54,380
infrastructure

1060
00:46:52,160 --> 00:46:57,290
and any external<font color="#E5E5E5"> device that uses those</font>

1061
00:46:54,380 --> 00:46:59,180
keys I'm<font color="#E5E5E5"> going to trust it right so it's</font>

1062
00:46:57,290 --> 00:47:01,640
still a flawed model<font color="#CCCCCC"> and if you can</font>

1063
00:46:59,180 --> 00:47:04,940
attack secure the secure<font color="#E5E5E5"> world in any</font>

1064
00:47:01,640 --> 00:47:06,859
way you can<font color="#E5E5E5"> still basically instrument</font>

1065
00:47:04,940 --> 00:47:08,990
the communication between application

1066
00:47:06,860 --> 00:47:11,330
worlds secure world<font color="#E5E5E5"> and any external</font>

1067
00:47:08,990 --> 00:47:13,669
entity so that's a really<font color="#E5E5E5"> important</font>

1068
00:47:11,330 --> 00:47:16,549
thing<font color="#CCCCCC"> to understand that</font><font color="#E5E5E5"> trust</font><font color="#CCCCCC"> own is</font>

1069
00:47:13,670 --> 00:47:19,100
inherently damaged<font color="#E5E5E5"> from a security</font>

1070
00:47:16,550 --> 00:47:22,280
perspective<font color="#CCCCCC"> because</font><font color="#E5E5E5"> it's not open its</font>

1071
00:47:19,100 --> 00:47:24,680
<font color="#E5E5E5">implementation dependent variations on</font>

1072
00:47:22,280 --> 00:47:28,780
implementation<font color="#E5E5E5"> will come result in</font>

1073
00:47:24,680 --> 00:47:31,819
wildly different variations of secure in

1074
00:47:28,780 --> 00:47:32,900
fact a really<font color="#E5E5E5"> great attack a common</font>

1075
00:47:31,820 --> 00:47:35,150
attack against<font color="#E5E5E5"> trust zone</font>

1076
00:47:32,900 --> 00:47:37,430
implementations<font color="#E5E5E5"> is that trust zone</font>

1077
00:47:35,150 --> 00:47:40,880
implementations don't<font color="#E5E5E5"> always secure DDR</font>

1078
00:47:37,430 --> 00:47:43,339
Ram<font color="#CCCCCC"> a lot of them don't bother because</font>

1079
00:47:40,880 --> 00:47:46,970
<font color="#E5E5E5">it requires extra expense to be able</font><font color="#CCCCCC"> to</font>

1080
00:47:43,340 --> 00:47:48,980
<font color="#E5E5E5">secure the DDR Ram bus so only some</font>

1081
00:47:46,970 --> 00:47:51,700
implementations will actually have a

1082
00:47:48,980 --> 00:47:54,710
secure world version<font color="#E5E5E5"> of DDR Ram</font>

1083
00:47:51,700 --> 00:47:57,230
<font color="#E5E5E5">segmented by physical memory and then</font>

1084
00:47:54,710 --> 00:47:58,610
there will<font color="#E5E5E5"> be a normal</font><font color="#CCCCCC"> world of</font><font color="#E5E5E5"> RAM the</font>

1085
00:47:57,230 --> 00:48:00,110
first thing<font color="#CCCCCC"> that you can do booting</font><font color="#E5E5E5"> up</font>

1086
00:47:58,610 --> 00:48:02,360
into application world if you<font color="#E5E5E5"> have full</font>

1087
00:48:00,110 --> 00:48:03,530
access<font color="#CCCCCC"> to DDR Ram</font><font color="#E5E5E5"> is start reading the</font>

1088
00:48:02,360 --> 00:48:08,390
regions<font color="#E5E5E5"> that you're not supposed</font><font color="#CCCCCC"> to</font>

1089
00:48:03,530 --> 00:48:09,920
touch done usually<font color="#CCCCCC"> you can start</font>

1090
00:48:08,390 --> 00:48:12,620
extracting<font color="#E5E5E5"> keys from those environments</font>

1091
00:48:09,920 --> 00:48:14,600
so because of<font color="#CCCCCC"> that</font><font color="#E5E5E5"> because of the NDA is</font>

1092
00:48:12,620 --> 00:48:16,910
required because of<font color="#E5E5E5"> the black box nature</font>

1093
00:48:14,600 --> 00:48:19,100
of secure world inside trust zone<font color="#E5E5E5"> it's</font>

1094
00:48:16,910 --> 00:48:21,620
not only<font color="#E5E5E5"> expensive and cost prohibitive</font>

1095
00:48:19,100 --> 00:48:22,759
to<font color="#E5E5E5"> actually deploy but it really doesn't</font>

1096
00:48:21,620 --> 00:48:26,509
give you<font color="#CCCCCC"> the secure world do you</font><font color="#E5E5E5"> think</font>

1097
00:48:22,760 --> 00:48:28,670
<font color="#CCCCCC">you're getting it's extremely damaging</font>

1098
00:48:26,510 --> 00:48:32,410
in my opinion to security<font color="#E5E5E5"> because</font>

1099
00:48:28,670 --> 00:48:35,420
there's no openness to it it results<font color="#E5E5E5"> in</font>

1100
00:48:32,410 --> 00:48:39,220
inaccurate<font color="#CCCCCC"> and incorrect</font><font color="#E5E5E5"> secure</font>

1101
00:48:35,420 --> 00:48:41,720
architectures<font color="#E5E5E5"> that</font><font color="#CCCCCC"> aren't secure at all</font>

1102
00:48:39,220 --> 00:48:45,049
so<font color="#E5E5E5"> essentially what we're</font><font color="#CCCCCC"> doing now</font><font color="#E5E5E5"> is</font>

1103
00:48:41,720 --> 00:48:47,180
<font color="#CCCCCC">eating our bugs</font><font color="#E5E5E5"> right you understand the</font>

1104
00:48:45,050 --> 00:48:49,550
architectures themselves<font color="#E5E5E5"> you understand</font>

1105
00:48:47,180 --> 00:48:53,899
why they can be<font color="#E5E5E5"> attacked so why is this</font>

1106
00:48:49,550 --> 00:48:55,610
<font color="#CCCCCC">useful secure boot</font><font color="#E5E5E5"> add to station' self</font>

1107
00:48:53,900 --> 00:48:58,240
<font color="#CCCCCC">an</font><font color="#E5E5E5"> identification of</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> identification</font>

1108
00:48:55,610 --> 00:49:02,720
those are the basic models that we have

1109
00:48:58,240 --> 00:49:04,209
and because<font color="#CCCCCC"> of</font><font color="#E5E5E5"> the issues that I just</font>

1110
00:49:02,720 --> 00:49:06,759
<font color="#E5E5E5">described</font>

1111
00:49:04,210 --> 00:49:09,099
you can't do secure boot in a flash only

1112
00:49:06,760 --> 00:49:10,930
<font color="#E5E5E5">operating system period there's no way</font>

1113
00:49:09,099 --> 00:49:13,030
to do it<font color="#E5E5E5"> right because the whole point</font>

1114
00:49:10,930 --> 00:49:15,069
<font color="#CCCCCC">about secure boot</font><font color="#E5E5E5"> is that you're going</font>

1115
00:49:13,030 --> 00:49:17,619
<font color="#CCCCCC">to trust all the executable code that</font>

1116
00:49:15,070 --> 00:49:19,390
you're going to<font color="#E5E5E5"> execute if you don't</font>

1117
00:49:17,619 --> 00:49:21,730
have a secure element<font color="#E5E5E5"> you can't do that</font>

1118
00:49:19,390 --> 00:49:23,470
period there's no way to do it anybody

1119
00:49:21,730 --> 00:49:26,740
<font color="#CCCCCC">can</font><font color="#E5E5E5"> alter flash and then just tell your</font>

1120
00:49:23,470 --> 00:49:29,259
secure boot that it's that it's<font color="#CCCCCC"> okay</font><font color="#E5E5E5"> in</font>

1121
00:49:26,740 --> 00:49:30,729
the secure external element model again

1122
00:49:29,260 --> 00:49:32,410
there's no way to do it because<font color="#CCCCCC"> the</font>

1123
00:49:30,730 --> 00:49:34,930
secure element can never<font color="#E5E5E5"> trust the data</font>

1124
00:49:32,410 --> 00:49:38,710
that's in<font color="#E5E5E5"> the application processor no</font>

1125
00:49:34,930 --> 00:49:41,830
way to do it in the trust zone model you

1126
00:49:38,710 --> 00:49:43,660
can get secure boot but you can<font color="#E5E5E5"> only get</font>

1127
00:49:41,830 --> 00:49:45,759
secure boot for<font color="#E5E5E5"> a couple of stages</font><font color="#CCCCCC"> as</font>

1128
00:49:43,660 --> 00:49:48,790
soon as you get unsecured applications

1129
00:49:45,760 --> 00:49:51,490
running they can make no<font color="#CCCCCC"> guarantees as</font>

1130
00:49:48,790 --> 00:49:53,380
to the identity<font color="#CCCCCC"> of the trusted elements</font>

1131
00:49:51,490 --> 00:49:56,709
that have executed<font color="#CCCCCC"> before them because</font>

1132
00:49:53,380 --> 00:49:59,349
of the black box model of trust<font color="#E5E5E5"> own so</font>

1133
00:49:56,710 --> 00:50:01,089
in essence the three models<font color="#CCCCCC"> that we</font>

1134
00:49:59,349 --> 00:50:07,300
currently have<font color="#CCCCCC"> for secure elements are</font>

1135
00:50:01,089 --> 00:50:08,950
failures<font color="#CCCCCC"> 100 percent</font><font color="#E5E5E5"> add to station' is</font>

1136
00:50:07,300 --> 00:50:13,119
the same way and for<font color="#CCCCCC"> the same</font><font color="#E5E5E5"> reasons</font>

1137
00:50:08,950 --> 00:50:15,250
<font color="#CCCCCC">you can't trust them</font><font color="#E5E5E5"> right the whole</font>

1138
00:50:13,119 --> 00:50:17,080
<font color="#E5E5E5">idea behind access station is you're</font>

1139
00:50:15,250 --> 00:50:19,330
sending requests remotely to an<font color="#CCCCCC"> endpoint</font>

1140
00:50:17,080 --> 00:50:22,720
<font color="#E5E5E5">to verify that it's in its</font><font color="#CCCCCC"> environment</font>

1141
00:50:19,330 --> 00:50:24,339
<font color="#E5E5E5">is</font><font color="#CCCCCC"> stable</font><font color="#E5E5E5"> and there is no way</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> make</font>

1142
00:50:22,720 --> 00:50:27,160
<font color="#E5E5E5">those guarantees because again these</font>

1143
00:50:24,339 --> 00:50:29,020
models are all flawed<font color="#E5E5E5"> since none of</font>

1144
00:50:27,160 --> 00:50:31,359
these architectures<font color="#E5E5E5"> can be trusted</font><font color="#CCCCCC"> and</font>

1145
00:50:29,020 --> 00:50:33,070
none of the applications can trust the

1146
00:50:31,359 --> 00:50:35,920
secure architecture and vice versa

1147
00:50:33,070 --> 00:50:37,470
<font color="#E5E5E5">there's no way to perform at a station</font>

1148
00:50:35,920 --> 00:50:40,540
in a way that's actually<font color="#E5E5E5"> fully reliable</font>

1149
00:50:37,470 --> 00:50:42,129
identification<font color="#CCCCCC"> is the exact same way how</font>

1150
00:50:40,540 --> 00:50:46,060
are<font color="#CCCCCC"> you going</font><font color="#E5E5E5"> to perform identification</font>

1151
00:50:42,130 --> 00:50:52,240
<font color="#E5E5E5">if you can't actually trust any element</font>

1152
00:50:46,060 --> 00:50:54,700
<font color="#E5E5E5">of your architecture right and the</font>

1153
00:50:52,240 --> 00:50:57,669
identity is really<font color="#E5E5E5"> really important</font>

1154
00:50:54,700 --> 00:51:02,379
<font color="#CCCCCC">because that is the core of MFI</font><font color="#E5E5E5"> the core</font>

1155
00:50:57,670 --> 00:51:06,040
of<font color="#CCCCCC"> MFI is saying</font><font color="#E5E5E5"> oh I am implementing a</font>

1156
00:51:02,380 --> 00:51:09,130
concept<font color="#E5E5E5"> of identity</font><font color="#CCCCCC"> on behalf of</font><font color="#E5E5E5"> iOS and</font>

1157
00:51:06,040 --> 00:51:13,750
<font color="#E5E5E5">on behalf of applications or accessories</font>

1158
00:51:09,130 --> 00:51:15,609
accessory devices but because as we<font color="#E5E5E5"> just</font>

1159
00:51:13,750 --> 00:51:17,760
saw on<font color="#E5E5E5"> the secure element model the</font>

1160
00:51:15,609 --> 00:51:20,869
external<font color="#E5E5E5"> cell</font><font color="#CCCCCC"> a secure element model</font>

1161
00:51:17,760 --> 00:51:23,130
the secure element model in that<font color="#E5E5E5"> in</font>

1162
00:51:20,869 --> 00:51:24,390
<font color="#E5E5E5">external security secure element model</font>

1163
00:51:23,130 --> 00:51:28,290
can never<font color="#E5E5E5"> trust the application</font>

1164
00:51:24,390 --> 00:51:30,118
processor<font color="#E5E5E5"> therefore the identity that's</font>

1165
00:51:28,290 --> 00:51:32,220
proven is only<font color="#CCCCCC"> the identity of the</font>

1166
00:51:30,119 --> 00:51:37,109
secure element<font color="#E5E5E5"> and never the identity of</font>

1167
00:51:32,220 --> 00:51:42,750
the application thus you will always

1168
00:51:37,109 --> 00:51:45,180
<font color="#E5E5E5">have a break between well we can't</font>

1169
00:51:42,750 --> 00:51:47,280
execute<font color="#E5E5E5"> that now can't we</font><font color="#CCCCCC"> oh well we</font><font color="#E5E5E5"> you</font>

1170
00:51:45,180 --> 00:51:50,490
always have a break between<font color="#E5E5E5"> the actual</font>

1171
00:51:47,280 --> 00:51:53,430
application processor<font color="#E5E5E5"> itself and the</font>

1172
00:51:50,490 --> 00:51:55,919
secure element<font color="#E5E5E5"> those two identities are</font>

1173
00:51:53,430 --> 00:51:58,020
then completely separate and because the

1174
00:51:55,920 --> 00:52:00,960
application processor cannot then be

1175
00:51:58,020 --> 00:52:03,060
<font color="#E5E5E5">securely identified there is no way to</font>

1176
00:52:00,960 --> 00:52:06,570
make<font color="#E5E5E5"> guarantees as to what device you're</font>

1177
00:52:03,060 --> 00:52:08,220
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> talking to only</font><font color="#E5E5E5"> that the device</font>

1178
00:52:06,570 --> 00:52:11,670
that you're<font color="#CCCCCC"> talking to is enabled with</font>

1179
00:52:08,220 --> 00:52:14,730
<font color="#CCCCCC">WAC</font><font color="#E5E5E5"> and has an MFI chip that's it</font>

1180
00:52:11,670 --> 00:52:19,430
so in essence the<font color="#E5E5E5"> Apple model is flawed</font>

1181
00:52:14,730 --> 00:52:23,510
<font color="#E5E5E5">because</font><font color="#CCCCCC"> it does</font><font color="#E5E5E5"> not present a clear</font>

1182
00:52:19,430 --> 00:52:26,460
chain<font color="#CCCCCC"> of identity</font><font color="#E5E5E5"> between the network</font>

1183
00:52:23,510 --> 00:52:28,950
the application running on<font color="#E5E5E5"> the accessory</font>

1184
00:52:26,460 --> 00:52:32,369
<font color="#E5E5E5">and the secure element that's attached</font>

1185
00:52:28,950 --> 00:52:34,649
<font color="#CCCCCC">to it the only thing that</font><font color="#E5E5E5"> can be secured</font>

1186
00:52:32,369 --> 00:52:39,050
is the MFI and the only<font color="#CCCCCC"> data that's on</font>

1187
00:52:34,650 --> 00:52:41,220
the MFI is for<font color="#CCCCCC"> Apple not</font><font color="#E5E5E5"> the application</font>

1188
00:52:39,050 --> 00:52:44,250
so essentially if you've hacked

1189
00:52:41,220 --> 00:52:46,009
something with an MFI chip in it you can

1190
00:52:44,250 --> 00:52:50,310
port that to pretty much any

1191
00:52:46,010 --> 00:52:51,900
architecture that you<font color="#E5E5E5"> want can somebody</font>

1192
00:52:50,310 --> 00:52:56,009
tap the screen<font color="#E5E5E5"> so they can get this</font>

1193
00:52:51,900 --> 00:52:59,100
animation working this would work<font color="#CCCCCC"> a lot</font>

1194
00:52:56,010 --> 00:53:03,450
<font color="#E5E5E5">better on my iPad</font><font color="#CCCCCC"> but AV fails</font><font color="#E5E5E5"> what are</font>

1195
00:52:59,100 --> 00:53:04,040
you gonna do<font color="#E5E5E5"> point being that's not</font><font color="#CCCCCC"> what</font>

1196
00:53:03,450 --> 00:53:08,580
I wanted

1197
00:53:04,040 --> 00:53:12,090
that's fine<font color="#E5E5E5"> whatever point being</font><font color="#CCCCCC"> Apple's</font>

1198
00:53:08,580 --> 00:53:13,560
<font color="#CCCCCC">MFI</font><font color="#E5E5E5"> is problematic from an architectural</font>

1199
00:53:12,090 --> 00:53:15,330
perspective because<font color="#E5E5E5"> they can never make</font>

1200
00:53:13,560 --> 00:53:17,250
guarantees<font color="#CCCCCC"> about the</font><font color="#E5E5E5"> identification of</font>

1201
00:53:15,330 --> 00:53:18,660
the application<font color="#E5E5E5"> that</font><font color="#CCCCCC"> you're or</font><font color="#E5E5E5"> the</font>

1202
00:53:17,250 --> 00:53:20,940
accessory that<font color="#E5E5E5"> you're that you're</font>

1203
00:53:18,660 --> 00:53:22,770
connecting to<font color="#E5E5E5"> your network</font><font color="#CCCCCC"> so when you</font>

1204
00:53:20,940 --> 00:53:25,080
see a device that you've brought<font color="#CCCCCC"> home</font>

1205
00:53:22,770 --> 00:53:26,580
from<font color="#E5E5E5"> the store and you connect to</font><font color="#CCCCCC"> it and</font>

1206
00:53:25,080 --> 00:53:28,710
<font color="#E5E5E5">you provision keys to it over this</font>

1207
00:53:26,580 --> 00:53:30,180
method you don't<font color="#E5E5E5"> actually know whether</font>

1208
00:53:28,710 --> 00:53:31,350
it's the device that you're provisioning

1209
00:53:30,180 --> 00:53:32,850
<font color="#CCCCCC">it could be something</font><font color="#E5E5E5"> that's</font>

1210
00:53:31,350 --> 00:53:35,910
<font color="#E5E5E5">we performing a man the middle attack</font>

1211
00:53:32,850 --> 00:53:38,610
<font color="#E5E5E5">that's then abusing flaw</font><font color="#CCCCCC"> on that</font>

1212
00:53:35,910 --> 00:53:40,379
architecture<font color="#E5E5E5"> to steal the keys from it</font>

1213
00:53:38,610 --> 00:53:42,000
<font color="#E5E5E5">and then using that to connect to your</font>

1214
00:53:40,380 --> 00:53:44,130
<font color="#CCCCCC">network as well</font><font color="#E5E5E5"> which is</font><font color="#CCCCCC"> really</font>

1215
00:53:42,000 --> 00:53:45,960
fascinating right<font color="#CCCCCC"> the other</font><font color="#E5E5E5"> thing</font><font color="#CCCCCC"> that's</font>

1216
00:53:44,130 --> 00:53:47,520
<font color="#E5E5E5">important to note</font><font color="#CCCCCC"> about MFI and these</font>

1217
00:53:45,960 --> 00:53:49,860
models<font color="#CCCCCC"> in general is that they</font><font color="#E5E5E5"> don't</font>

1218
00:53:47,520 --> 00:53:54,630
just<font color="#E5E5E5"> apply to Wi-Fi so I perform the</font>

1219
00:53:49,860 --> 00:53:56,550
attack<font color="#E5E5E5"> over</font><font color="#CCCCCC"> W AC or Wi-Fi wack</font><font color="#E5E5E5"> but in</font>

1220
00:53:54,630 --> 00:53:58,470
essence<font color="#E5E5E5"> you can perform this attack over</font>

1221
00:53:56,550 --> 00:54:01,170
any medium where the network is

1222
00:53:58,470 --> 00:54:02,759
disconnected<font color="#E5E5E5"> from</font><font color="#CCCCCC"> MFI</font><font color="#E5E5E5"> and that's going</font>

1223
00:54:01,170 --> 00:54:05,040
<font color="#CCCCCC">to become</font><font color="#E5E5E5"> more and</font><font color="#CCCCCC"> more important over</font>

1224
00:54:02,760 --> 00:54:09,290
<font color="#CCCCCC">time because they're going</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> using</font>

1225
00:54:05,040 --> 00:54:12,870
<font color="#CCCCCC">MFI for provisioning over bluetooth over</font>

1226
00:54:09,290 --> 00:54:14,550
<font color="#E5E5E5">lightning over</font><font color="#CCCCCC"> other medium</font>

1227
00:54:12,870 --> 00:54:17,730
so essentially you<font color="#E5E5E5"> could perform this</font>

1228
00:54:14,550 --> 00:54:20,580
exact<font color="#E5E5E5"> same attack over any other network</font>

1229
00:54:17,730 --> 00:54:23,210
protocol because<font color="#E5E5E5"> there's no tie in to</font>

1230
00:54:20,580 --> 00:54:25,830
<font color="#CCCCCC">the network protocol and the actual</font>

1231
00:54:23,210 --> 00:54:27,870
application<font color="#E5E5E5"> and</font><font color="#CCCCCC"> MFI chip so this is</font>

1232
00:54:25,830 --> 00:54:29,940
really<font color="#CCCCCC"> a Wi-Fi only attack it's an</font>

1233
00:54:27,870 --> 00:54:32,190
attack against secure elements in the

1234
00:54:29,940 --> 00:54:33,660
<font color="#CCCCCC">Apple architecture which is</font><font color="#E5E5E5"> presumably</font>

1235
00:54:32,190 --> 00:54:36,810
portable to all these different<font color="#CCCCCC"> other</font>

1236
00:54:33,660 --> 00:54:39,839
mediums<font color="#E5E5E5"> but I have not tried</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> your</font>

1237
00:54:36,810 --> 00:54:41,430
<font color="#E5E5E5">mileage may vary but</font><font color="#CCCCCC"> I do</font><font color="#E5E5E5"> request that</font>

1238
00:54:39,840 --> 00:54:44,910
you go and<font color="#E5E5E5"> check it out</font><font color="#CCCCCC"> for yourself and</font>

1239
00:54:41,430 --> 00:54:46,799
let everybody know the result<font color="#CCCCCC"> my point</font>

1240
00:54:44,910 --> 00:54:50,129
in<font color="#CCCCCC"> doing this research</font><font color="#E5E5E5"> was essentially</font>

1241
00:54:46,800 --> 00:54:52,250
to prove the secure element models were

1242
00:54:50,130 --> 00:54:55,260
flawed and flawed in a specific<font color="#E5E5E5"> way</font>

1243
00:54:52,250 --> 00:54:58,250
<font color="#CCCCCC">based on the gsm a</font><font color="#E5E5E5"> iot research that I</font>

1244
00:54:55,260 --> 00:55:01,350
did<font color="#E5E5E5"> with the gsm a GSM a back in</font>

1245
00:54:58,250 --> 00:55:03,480
<font color="#CCCCCC">2015-2016</font><font color="#E5E5E5"> we published the document</font>

1246
00:55:01,350 --> 00:55:06,330
<font color="#E5E5E5">called the gsm a iot security guidelines</font>

1247
00:55:03,480 --> 00:55:09,900
<font color="#E5E5E5">which I wrote in concert with most of</font>

1248
00:55:06,330 --> 00:55:12,210
the<font color="#CCCCCC"> GSMA</font><font color="#E5E5E5"> and the</font><font color="#CCCCCC"> thro models for secure</font>

1249
00:55:09,900 --> 00:55:15,480
elements that you saw here were<font color="#E5E5E5"> actually</font>

1250
00:55:12,210 --> 00:55:19,260
developed during<font color="#E5E5E5"> that time</font><font color="#CCCCCC"> it was based</font>

1251
00:55:15,480 --> 00:55:23,580
on<font color="#E5E5E5"> some</font><font color="#CCCCCC"> of my DARPA research from before</font>

1252
00:55:19,260 --> 00:55:25,410
but essentially it was<font color="#E5E5E5"> I was based on</font>

1253
00:55:23,580 --> 00:55:29,130
the<font color="#CCCCCC"> GSMA research so this</font><font color="#E5E5E5"> was really an</font>

1254
00:55:25,410 --> 00:55:32,520
exercise in proving how deploying secure

1255
00:55:29,130 --> 00:55:34,830
elements at scale<font color="#E5E5E5"> creates this disparate</font>

1256
00:55:32,520 --> 00:55:36,870
environment<font color="#E5E5E5"> or environment of disparate</font>

1257
00:55:34,830 --> 00:55:38,310
<font color="#E5E5E5">technologies that cannot truly identify</font>

1258
00:55:36,870 --> 00:55:40,259
<font color="#E5E5E5">or communicate with</font><font color="#CCCCCC"> each</font><font color="#E5E5E5"> other</font>

1259
00:55:38,310 --> 00:55:41,850
right<font color="#E5E5E5"> and that's really</font><font color="#CCCCCC"> a function of</font>

1260
00:55:40,260 --> 00:55:44,580
scale because<font color="#E5E5E5"> as I said</font><font color="#CCCCCC"> at</font><font color="#E5E5E5"> the beginning</font>

1261
00:55:41,850 --> 00:55:47,190
<font color="#E5E5E5">of this talk</font>

1262
00:55:44,580 --> 00:55:49,290
you can secure<font color="#CCCCCC"> a device in any fashion</font>

1263
00:55:47,190 --> 00:55:51,510
<font color="#CCCCCC">as long as you only have a small</font><font color="#E5E5E5"> amount</font>

1264
00:55:49,290 --> 00:55:52,380
<font color="#CCCCCC">of them</font><font color="#E5E5E5"> but once you get to</font><font color="#CCCCCC"> the scale of</font>

1265
00:55:51,510 --> 00:55:54,660
<font color="#E5E5E5">Apple</font>

1266
00:55:52,380 --> 00:55:56,930
you<font color="#E5E5E5"> can't individually provision every</font>

1267
00:55:54,660 --> 00:55:59,790
single device<font color="#CCCCCC"> that causes a completely</font>

1268
00:55:56,930 --> 00:56:02,370
very large and substantial<font color="#E5E5E5"> change to</font>

1269
00:55:59,790 --> 00:56:05,820
<font color="#CCCCCC">your manufacturing process</font><font color="#E5E5E5"> as a whole</font>

1270
00:56:02,370 --> 00:56:08,060
<font color="#CCCCCC">and because of</font><font color="#E5E5E5"> that that increases your</font>

1271
00:56:05,820 --> 00:56:11,640
<font color="#E5E5E5">costs it increases the</font><font color="#CCCCCC"> lifetime of</font>

1272
00:56:08,060 --> 00:56:14,160
production increases<font color="#CCCCCC"> you know</font><font color="#E5E5E5"> the the</font>

1273
00:56:11,640 --> 00:56:16,200
<font color="#E5E5E5">potential for flaws and failures</font><font color="#CCCCCC"> and</font>

1274
00:56:14,160 --> 00:56:20,160
your architecture<font color="#E5E5E5"> it also creates the</font>

1275
00:56:16,200 --> 00:56:22,500
<font color="#CCCCCC">possibility of breaking</font><font color="#E5E5E5"> your devices</font>

1276
00:56:20,160 --> 00:56:24,569
themselves<font color="#CCCCCC"> because now every single</font>

1277
00:56:22,500 --> 00:56:27,090
<font color="#CCCCCC">device has a unique key that's dependent</font>

1278
00:56:24,570 --> 00:56:29,040
<font color="#CCCCCC">on</font><font color="#E5E5E5"> the secure element being working</font>

1279
00:56:27,090 --> 00:56:31,800
<font color="#E5E5E5">properly</font><font color="#CCCCCC"> a lot</font><font color="#E5E5E5"> of things can fail</font>

1280
00:56:29,040 --> 00:56:33,270
<font color="#E5E5E5">unexpectedly</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> getting</font><font color="#CCCCCC"> that</font>

1281
00:56:31,800 --> 00:56:34,950
architecture up and running is<font color="#CCCCCC"> very</font>

1282
00:56:33,270 --> 00:56:36,720
difficult<font color="#E5E5E5"> the manufacturing architecture</font>

1283
00:56:34,950 --> 00:56:38,100
is extremely difficult so it's

1284
00:56:36,720 --> 00:56:40,379
understandable that<font color="#E5E5E5"> they would have this</font>

1285
00:56:38,100 --> 00:56:41,730
<font color="#E5E5E5">flaw</font><font color="#CCCCCC"> but</font><font color="#E5E5E5"> it was important to prove it so</font>

1286
00:56:40,380 --> 00:56:44,250
<font color="#CCCCCC">that we get</font><font color="#E5E5E5"> to better and better models</font>

1287
00:56:41,730 --> 00:56:48,330
<font color="#CCCCCC">I've been working with</font><font color="#E5E5E5"> Apple</font><font color="#CCCCCC"> on this</font>

1288
00:56:44,250 --> 00:56:50,760
issue<font color="#CCCCCC"> and I'm I I</font><font color="#E5E5E5"> dropped</font><font color="#CCCCCC"> through this</font>

1289
00:56:48,330 --> 00:56:52,560
information<font color="#CCCCCC"> to them about a year ago so</font>

1290
00:56:50,760 --> 00:56:55,290
they've<font color="#E5E5E5"> had almost a year to</font><font color="#CCCCCC"> work on it</font>

1291
00:56:52,560 --> 00:56:56,700
before<font color="#CCCCCC"> I began talking</font><font color="#E5E5E5"> about this I</font>

1292
00:56:55,290 --> 00:56:59,130
wanted<font color="#E5E5E5"> to give them ample</font><font color="#CCCCCC"> time because</font>

1293
00:56:56,700 --> 00:57:02,490
even though it's not<font color="#E5E5E5"> a super critical</font>

1294
00:56:59,130 --> 00:57:05,370
<font color="#E5E5E5">issue it isn't it's not right</font><font color="#CCCCCC"> like you</font>

1295
00:57:02,490 --> 00:57:08,100
can you can attack people remotely<font color="#E5E5E5"> you</font>

1296
00:57:05,370 --> 00:57:10,799
<font color="#CCCCCC">can attack people</font><font color="#E5E5E5"> in their homes you can</font>

1297
00:57:08,100 --> 00:57:13,350
use<font color="#E5E5E5"> it as a way to get backdoor</font><font color="#CCCCCC"> access</font>

1298
00:57:10,800 --> 00:57:15,780
into anybody's home network that<font color="#E5E5E5"> uses</font>

1299
00:57:13,350 --> 00:57:17,009
<font color="#CCCCCC">apple technology but</font><font color="#E5E5E5"> you have to be</font>

1300
00:57:15,780 --> 00:57:18,780
there you<font color="#CCCCCC"> have to</font><font color="#E5E5E5"> be physically</font><font color="#CCCCCC"> present</font>

1301
00:57:17,010 --> 00:57:22,110
you have<font color="#CCCCCC"> to</font><font color="#E5E5E5"> know which device you're</font>

1302
00:57:18,780 --> 00:57:24,540
<font color="#CCCCCC">attacking</font><font color="#E5E5E5"> there are a lot of ifs</font><font color="#CCCCCC"> so even</font>

1303
00:57:22,110 --> 00:57:26,880
though it<font color="#E5E5E5"> is kind of a backdoor it</font>

1304
00:57:24,540 --> 00:57:29,700
requires a lot of<font color="#E5E5E5"> steps and physical</font>

1305
00:57:26,880 --> 00:57:32,460
access<font color="#CCCCCC"> to that lease proximate physical</font>

1306
00:57:29,700 --> 00:57:34,529
access to<font color="#E5E5E5"> the environment</font><font color="#CCCCCC"> so I gave them</font>

1307
00:57:32,460 --> 00:57:37,530
as long<font color="#E5E5E5"> as</font><font color="#CCCCCC"> I could to talk</font><font color="#E5E5E5"> before I</font>

1308
00:57:34,530 --> 00:57:40,440
talked<font color="#CCCCCC"> about it but</font><font color="#E5E5E5"> a situation</font><font color="#CCCCCC"> like</font>

1309
00:57:37,530 --> 00:57:42,840
this requires<font color="#E5E5E5"> so many different teams</font><font color="#CCCCCC"> to</font>

1310
00:57:40,440 --> 00:57:45,030
resolve<font color="#E5E5E5"> because now you've got the MFI</font>

1311
00:57:42,840 --> 00:57:48,180
chip team and you've got the MFI

1312
00:57:45,030 --> 00:57:50,100
<font color="#E5E5E5">protocol team and you've got you know</font>

1313
00:57:48,180 --> 00:57:51,720
<font color="#E5E5E5">the application specification for</font><font color="#CCCCCC"> wack</font>

1314
00:57:50,100 --> 00:57:53,819
team and all these other organizations

1315
00:57:51,720 --> 00:57:55,250
<font color="#CCCCCC">that all need to work</font><font color="#E5E5E5"> together and</font>

1316
00:57:53,820 --> 00:57:58,140
define an<font color="#E5E5E5"> engineering</font>

1317
00:57:55,250 --> 00:58:01,050
<font color="#CCCCCC">that completely resolves all these</font>

1318
00:57:58,140 --> 00:58:03,629
issues<font color="#CCCCCC"> as well as defining a new</font>

1319
00:58:01,050 --> 00:58:06,060
manufacturing specification<font color="#E5E5E5"> that allows</font>

1320
00:58:03,630 --> 00:58:09,140
<font color="#E5E5E5">for all of these security keys to be</font>

1321
00:58:06,060 --> 00:58:13,290
unique and tied to each specific

1322
00:58:09,140 --> 00:58:15,240
<font color="#E5E5E5">accessory it's nuts right that's a very</font>

1323
00:58:13,290 --> 00:58:16,980
very<font color="#CCCCCC"> difficult</font><font color="#E5E5E5"> and challenging thing to</font>

1324
00:58:15,240 --> 00:58:19,350
<font color="#CCCCCC">do so it's understandable</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> it took</font>

1325
00:58:16,980 --> 00:58:21,270
them a very long time to implement<font color="#E5E5E5"> it</font>

1326
00:58:19,350 --> 00:58:24,690
<font color="#E5E5E5">and it's still not fully implemented so</font>

1327
00:58:21,270 --> 00:58:27,630
this bug<font color="#E5E5E5"> will be around for</font><font color="#CCCCCC"> quite</font><font color="#E5E5E5"> some</font>

1328
00:58:24,690 --> 00:58:31,110
time<font color="#CCCCCC"> so if</font><font color="#E5E5E5"> you are an iOS hacker and</font>

1329
00:58:27,630 --> 00:58:33,470
you're looking for a jailbreak<font color="#CCCCCC"> MFI</font><font color="#E5E5E5"> is</font>

1330
00:58:31,110 --> 00:58:36,050
definitely one place to start<font color="#CCCCCC"> looking</font>

1331
00:58:33,470 --> 00:58:38,549
<font color="#CCCCCC">but in essence that's about it</font>

1332
00:58:36,050 --> 00:58:40,080
<font color="#CCCCCC">Apple's got some serious</font><font color="#E5E5E5"> problems but</font>

1333
00:58:38,550 --> 00:58:43,770
<font color="#CCCCCC">they're no different than any other</font>

1334
00:58:40,080 --> 00:58:46,529
architecture that's deploying<font color="#E5E5E5"> secure</font>

1335
00:58:43,770 --> 00:58:47,910
elements at this scale<font color="#E5E5E5"> there are no</font>

1336
00:58:46,530 --> 00:58:49,230
different than<font color="#CCCCCC"> Samsung they</font><font color="#E5E5E5"> are no</font>

1337
00:58:47,910 --> 00:58:51,000
different than Microsoft there are no

1338
00:58:49,230 --> 00:58:52,890
different than<font color="#E5E5E5"> anybody else</font><font color="#CCCCCC"> so this</font>

1339
00:58:51,000 --> 00:58:55,500
<font color="#E5E5E5">isn't</font><font color="#CCCCCC"> really a</font><font color="#E5E5E5"> bash</font><font color="#CCCCCC"> Apple thing</font><font color="#E5E5E5"> this is</font>

1340
00:58:52,890 --> 00:58:57,180
more just a you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> Apple try to deploy</font>

1341
00:58:55,500 --> 00:59:00,330
<font color="#CCCCCC">a secure element</font><font color="#E5E5E5"> that was really</font><font color="#CCCCCC"> easy</font>

1342
00:58:57,180 --> 00:59:01,980
for<font color="#CCCCCC"> me to</font><font color="#E5E5E5"> hack kind of thing but yeah</font>

1343
00:59:00,330 --> 00:59:03,450
that's it<font color="#CCCCCC"> so I</font><font color="#E5E5E5"> appreciate your time</font>

1344
00:59:01,980 --> 00:59:06,900
today<font color="#CCCCCC"> and thank</font><font color="#E5E5E5"> you for checking out the</font>

1345
00:59:03,450 --> 00:59:08,609
MFI talk and we've only got a minute<font color="#CCCCCC"> or</font>

1346
00:59:06,900 --> 00:59:11,930
so but<font color="#E5E5E5"> does anybody have a</font><font color="#CCCCCC"> question</font>

1347
00:59:08,610 --> 00:59:11,930
about anything that<font color="#CCCCCC"> I've discussed today</font>

1348
00:59:12,230 --> 00:59:18,840
if you do feel<font color="#CCCCCC"> free to come check me out</font>

1349
00:59:16,860 --> 00:59:20,120
<font color="#CCCCCC">at any point in the conference I'm more</font>

1350
00:59:18,840 --> 00:59:22,210
than<font color="#E5E5E5"> happy to talk to</font><font color="#CCCCCC"> you separately</font>

1351
00:59:20,120 --> 00:59:27,509
<font color="#E5E5E5">thank you</font>

1352
00:59:22,210 --> 00:59:27,510
[Applause]

