1
00:00:14,670 --> 00:00:17,670
put out too long

2
00:00:18,780 --> 00:00:23,970
I'm simply one from Chiho series 60 and
this is my partner issue and today i

3
00:00:23,970 --> 00:00:30,299
would like to share some thoughts about
the captain from talker and chem commun

4
00:00:30,300 --> 00:00:34,710
mission and I and this speech includes
two parts

5
00:00:34,710 --> 00:00:39,540
first I were introduced the door creaks
this gap technique and second our talk

6
00:00:39,540 --> 00:00:45,000
about the communities kept telling you
that's belong to talk her first and

7
00:00:45,000 --> 00:00:46,860
about docker

8
00:00:46,860 --> 00:00:51,239
it's a contender technique based on
linux during software story

9
00:00:51,780 --> 00:00:56,339
what doctor does is just like ocean ship
in our operation just like a copper ship

10
00:00:56,339 --> 00:01:01,800
and every software working as a cargo
container this contenders are isolated

11
00:01:01,800 --> 00:01:02,879
from others

12
00:01:02,879 --> 00:01:07,980
users can easily combine the comments in
it together such as development

13
00:01:07,980 --> 00:01:09,570
environment in their stories

14
00:01:09,570 --> 00:01:14,850
the bases and so on technically speaking
containers mean multiple applications

15
00:01:14,850 --> 00:01:19,350
running one unix operating system which
is America visualization however they

16
00:01:19,350 --> 00:01:23,130
are different is to say not that much
power operating systems beauty walk hose

17
00:01:23,130 --> 00:01:28,649
server to provide a lighter-weight
substitution allows multiple operating

18
00:01:28,649 --> 00:01:30,899
those running on walls mission

19
00:01:30,899 --> 00:01:35,430
therefore dr. Weir save a lot of extra
OOS resources compared to the

20
00:01:35,430 --> 00:01:40,200
visualization system due to doctors -
features dollar has grabbed a lot of

21
00:01:40,200 --> 00:01:44,130
attention from many famous service
providers and doctor has already been

22
00:01:44,130 --> 00:01:48,960
widely used in cloudiness services such
as such as in past and proper camping

23
00:01:48,960 --> 00:01:54,298
them as the next generation cloud
computing pattern and after introduction

24
00:01:54,299 --> 00:01:58,619
dr. land now we continue to talk about
some key talker technics inning system

25
00:01:58,619 --> 00:02:03,689
as i said before doc has isolation
feature that means each contain their

26
00:02:03,689 --> 00:02:09,780
isolates from another one contender has
its own file system process ID user ID

27
00:02:09,780 --> 00:02:14,520
memories if you set in other resources
for running and there's this fundamental

28
00:02:14,520 --> 00:02:20,040
techniques are namespaces and sequels
these techniques to share the Dockers

29
00:02:20,040 --> 00:02:24,900
isolation of process access permissions
resources and so on

30
00:02:24,900 --> 00:02:30,450
SI group is a kind of mechanism provided
by an external sequence were divided

31
00:02:30,450 --> 00:02:31,609
system task

32
00:02:31,610 --> 00:02:35,690
in their tasks into different courts of
in other resources

33
00:02:35,690 --> 00:02:40,910
normal speaking secrets could mean to
record isolated physical resource used

34
00:02:40,910 --> 00:02:46,040
by process corpse to provide a guarantee
for container original equation actually

35
00:02:46,040 --> 00:02:52,250
secrets are series of folks attached on
the process by Connor when the process

36
00:02:52,250 --> 00:02:57,020
is one into schedule resources that were
trigger related hooks and it is where

37
00:02:57,020 --> 00:03:00,140
help system to trace and limit its
resource

38
00:03:00,140 --> 00:03:05,059
now I believe you have a brief
understanding talker

39
00:03:05,060 --> 00:03:11,570
let's discuss power talkers when ability
at first about the talker images which

40
00:03:11,570 --> 00:03:16,430
is used to english initialize a
container for example some developers

41
00:03:16,430 --> 00:03:21,170
use docker containers as sand boxes and
some may think that process is inside a

42
00:03:21,170 --> 00:03:25,640
container just our SF s processes in
virtual machine over there are some

43
00:03:25,640 --> 00:03:29,899
people download on verified talker
images around them or host machine as

44
00:03:29,900 --> 00:03:31,100
many samples

45
00:03:31,100 --> 00:03:35,600
there are also several past services
providers allow their end users upload

46
00:03:35,600 --> 00:03:38,959
they are on top of images and under the
multi-tenant environment

47
00:03:39,680 --> 00:03:44,480
the main counter exactly know the source
of each image but these images could do

48
00:03:44,480 --> 00:03:47,810
things by using the root privileges on
the host OS mission

49
00:03:47,810 --> 00:03:52,610
technically speaking namespace technique
Mac dockers isolation come true in

50
00:03:52,610 --> 00:03:54,380
traditional income system

51
00:03:54,380 --> 00:04:01,220
katie is unique and isolated in normal
cases users watching separate AP IDs

52
00:04:01,220 --> 00:04:06,590
however in talker we have namespace the
helps to less simpy I decreased in

53
00:04:06,590 --> 00:04:08,600
different namespaces separately

54
00:04:08,600 --> 00:04:14,030
are you dr. piecing as independence best
buy you names best but Phoenix Connor

55
00:04:14,030 --> 00:04:15,230
cannot use mint

56
00:04:15,230 --> 00:04:19,760
namespace even there are a lot of
containers are system course from a

57
00:04:19,760 --> 00:04:23,510
container up or preceded by an express
corner

58
00:04:23,510 --> 00:04:28,610
moreover models like system devices and
kind of models are not for isolated this

59
00:04:28,610 --> 00:04:32,660
. spring potential risks to poker and
metalcore escape possible

60
00:04:33,350 --> 00:04:40,250
inside Tiger container you skip attacks
have two ways long is from container to

61
00:04:40,250 --> 00:04:43,860
host another is between containers the
after a skep

62
00:04:43,860 --> 00:04:48,810
attacking containers can execute and
command in host machine as i mentioned

63
00:04:48,810 --> 00:04:53,069
before our host operating system in top
of directories were be available by the

64
00:04:53,069 --> 00:04:57,689
attacker especially under my attendance
environment when user ok that containers

65
00:04:57,689 --> 00:05:03,750
privilege remotely it will bring big
risk reason that you know that it's

66
00:05:03,750 --> 00:05:04,770
virgin talker

67
00:05:04,770 --> 00:05:09,750
there is a massive security instance
that internal part of talkers warm could

68
00:05:09,750 --> 00:05:14,939
be accessed outside from the internet so
attackers can use talk a remote API to

69
00:05:14,939 --> 00:05:19,529
get into the docker container remotely
by topic amount without innocent 30

70
00:05:19,529 --> 00:05:24,599
check this container share could be
controlled by the attacker then attacker

71
00:05:24,599 --> 00:05:28,680
can get a host machine root privileges
inside the container by talker is kept

72
00:05:28,680 --> 00:05:33,000
taking technique remotely best all
mentioned points before

73
00:05:33,539 --> 00:05:38,460
let's talk about how to implement
talkers kept first I don't let me

74
00:05:38,460 --> 00:05:43,198
introduce a container process creation
in unix the running environment of annex

75
00:05:43,199 --> 00:05:44,460
process in course

76
00:05:44,460 --> 00:05:51,930
rootfs user ID group ID network process
ID devices host info and so on a new

77
00:05:51,930 --> 00:05:56,610
talker container process is quite by
according to fuck by this column here i

78
00:05:56,610 --> 00:06:01,020
want to talk about their conflicts in
the fuck procedure which determine the

79
00:06:01,020 --> 00:06:06,089
feature info of our thought processes
namespaces after that instead

80
00:06:06,089 --> 00:06:10,860
inside the same long name space or
process encouraging and execution inside

81
00:06:10,860 --> 00:06:12,870
a docker container we are you hurt

82
00:06:12,870 --> 00:06:19,139
is these namespaces features when create
initial container process these blacks

83
00:06:19,139 --> 00:06:25,349
were beset our talk about this flax
detail in the next structure the xbox

84
00:06:25,349 --> 00:06:30,060
see is a running environment for current
container and the legs broken structure

85
00:06:30,060 --> 00:06:34,650
of the container is learning spaces set
by the flags is into fog

86
00:06:34,650 --> 00:06:39,299
this structure is the key for sharing
container works is important to know

87
00:06:39,300 --> 00:06:44,370
that when we smokin new process inside a
container or is ensuring you for it may

88
00:06:44,370 --> 00:06:48,960
need work at from the structure the
structure issues our definition about

89
00:06:48,960 --> 00:06:55,919
the namespace it including the UTS names
best IPC namespace mountains best here i

90
00:06:55,919 --> 00:06:57,430
want i want to introduce

91
00:06:57,430 --> 00:07:02,650
autumns best among them space suppose as
relational linux OS faces and by

92
00:07:02,650 --> 00:07:07,599
isolating file system on points after
isolation change of each far structure

93
00:07:07,600 --> 00:07:13,120
inside my name's best are separated from
others only is on file system will be

94
00:07:13,120 --> 00:07:17,980
affected by our month operations of new
generated the namespace and nothing to

95
00:07:17,980 --> 00:07:24,820
do with outside and the rest is a PID
namespace in the network name space and

96
00:07:24,820 --> 00:07:29,740
then was network them space is used for
the network resource insulation and such

97
00:07:29,740 --> 00:07:35,530
as the individual network card and the
next structure i want to talk about the

98
00:07:35,530 --> 00:07:42,250
tax tract the name is Connor manages our
process bite a structured inspector at a

99
00:07:42,250 --> 00:07:46,900
subtractor intense kind of containers
process ID and other related info of a

100
00:07:46,900 --> 00:07:48,070
container process

101
00:07:48,070 --> 00:07:51,880
here are the structure membership we
shall close relationship talk at dinner

102
00:07:51,880 --> 00:07:56,020
process has ever tracked and ex fiancée
and task group

103
00:07:56,020 --> 00:08:00,549
in addition more important the task
struct of the container process is the

104
00:08:00,550 --> 00:08:05,320
same one thing inside and outside of
poker and this is very important for

105
00:08:05,320 --> 00:08:09,010
properties get a command line

106
00:08:09,010 --> 00:08:14,800
CCS route is red to montanum space of
docker CS route is used to change root

107
00:08:14,800 --> 00:08:20,620
directory and restrict the directory
access permissions to a process in linux

108
00:08:20,620 --> 00:08:23,620
system default directory structure
starts from root directory

109
00:08:24,250 --> 00:08:28,600
however after applying the short system
condemns static location as a root

110
00:08:28,600 --> 00:08:33,940
directory timing of the ice road
containers could execute under different

111
00:08:33,940 --> 00:08:35,890
root directory as in time

112
00:08:35,890 --> 00:08:39,730
this guarantees that contain their own
may arise to execute your own directory

113
00:08:39,730 --> 00:08:46,300
structure here for instance i have two
processes . one and tried to read one

114
00:08:46,300 --> 00:08:50,890
look at outside of container apply to is
the inside of the container and a

115
00:08:50,890 --> 00:08:55,270
directory structure can you want son
during standard such as route home time

116
00:08:55,270 --> 00:08:59,860
but containers work directory is under
dr. Walker with FS

117
00:08:59,860 --> 00:09:04,450
so the ward directory of pd-1 which is
outside the container is meaning

118
00:09:04,450 --> 00:09:08,650
standard directory and it has right
except characters are under docker

119
00:09:08,650 --> 00:09:10,870
actually walk directory of cattitude

120
00:09:10,870 --> 00:09:16,029
stalker road ave s & cat - 10 have write
access in any directory out other DNS on

121
00:09:16,029 --> 00:09:16,750
tree

122
00:09:16,750 --> 00:09:21,070
this cottage cheese process is inside
container are independent from

123
00:09:21,070 --> 00:09:27,430
directories outside the group in Jenner
the address which abstract the final

124
00:09:27,430 --> 00:09:32,410
point two shoes info related to kind of
container process working directory

125
00:09:32,410 --> 00:09:37,750
this means if the kind of process is
inside a container that is structure of

126
00:09:37,750 --> 00:09:42,220
the container process is mapped to the
file system where is container mount

127
00:09:42,220 --> 00:09:43,720
when created

128
00:09:43,720 --> 00:09:48,490
therefore we can say that FS structure
actually can tease the kind of wrong

129
00:09:48,490 --> 00:09:53,589
container process working directory and
it won't affect other processes inside

130
00:09:53,589 --> 00:09:58,150
of them contender here i also want to
talk about the differences between the

131
00:09:58,150 --> 00:10:00,910
fs structure and montanum space

132
00:10:00,910 --> 00:10:04,870
the mountain namespace is a shared
structure this means for running

133
00:10:04,870 --> 00:10:09,940
processes modern space has nothing to do
with them back before the focal new

134
00:10:09,940 --> 00:10:14,770
process inside container or required
info for directory access privileges of

135
00:10:14,770 --> 00:10:16,959
this process need month

136
00:10:16,959 --> 00:10:23,079
namespace provide best on the about
analysis we can switch to our ideas of

137
00:10:23,080 --> 00:10:24,850
us get the first step

138
00:10:24,850 --> 00:10:29,320
make the container process get into
connor execution by special thanks

139
00:10:29,320 --> 00:10:31,360
Colonel abilities inspiration

140
00:10:31,360 --> 00:10:34,750
the second step change in Africa
structure or a cargo container process

141
00:10:34,750 --> 00:10:39,160
that kinda . container process get
privilege for exciting roof our system

142
00:10:39,160 --> 00:10:43,900
of the host operating system that means
get the F structure process one

143
00:10:43,900 --> 00:10:48,130
the initial process of the host
operating system and finally continue to

144
00:10:48,130 --> 00:10:52,630
achieve global skype by changing the
angle sporty namespace of the container

145
00:10:52,630 --> 00:10:58,390
let's analyze the first step in Munich
step there is a type of an ability that

146
00:10:58,390 --> 00:11:02,680
allows a local romper village of the
other two as escalate their

147
00:11:02,680 --> 00:11:07,300
probabilities on the faces the honor
system by system call and in docker

148
00:11:07,300 --> 00:11:11,920
container our system of course of a
docker container finally where p proceed

149
00:11:11,920 --> 00:11:16,630
by unix corner of the house operating
system plans that as well as the

150
00:11:16,630 --> 00:11:20,320
inability exists in this procedure of
this is something called the container

151
00:11:20,320 --> 00:11:22,720
that can be used by a normal condition

152
00:11:22,720 --> 00:11:27,819
the process so we can get into Kenora by
using these types of needs , petitions

153
00:11:27,819 --> 00:11:32,680
exploration as we see a normal container
process can trigger the man abilities on

154
00:11:32,680 --> 00:11:36,550
the nicholas culler why system call to
let the short code executed in color

155
00:11:36,550 --> 00:11:41,199
mode and that means a continual process
can you excuse to the code in como

156
00:11:41,199 --> 00:11:48,459
divided type of vulnerability after step
one is getting to step to make the

157
00:11:48,459 --> 00:11:52,479
condom process had a global file system
access permission

158
00:11:52,480 --> 00:11:57,040
that means we need to replace every
structure of the current process with a

159
00:11:57,040 --> 00:11:59,860
constructor which has a global access
permission

160
00:11:59,860 --> 00:12:04,629
so how we can get the unit process ever
structure which could access the global

161
00:12:04,629 --> 00:12:07,930
system of the host operating system

162
00:12:07,930 --> 00:12:14,410
the answer is in converging before 3.0
we can directly get it why the image F X

163
00:12:14,410 --> 00:12:19,509
structure of the need to process in the
host of linux operating system and this

164
00:12:19,509 --> 00:12:26,800
is a structuring units converging and
2.6 but after the 3.0 we have to find

165
00:12:26,800 --> 00:12:31,479
another way because these structures do
not exist anymore and i have mentioned

166
00:12:31,480 --> 00:12:36,100
before the task struct is the same one
inside and outside of the docker

167
00:12:36,100 --> 00:12:41,800
container and also a strat is doubly
linked list the structure and in linux

168
00:12:41,800 --> 00:12:46,689
operating system or processes are
generated from the initial process which

169
00:12:46,689 --> 00:12:47,980
have the PID one

170
00:12:47,980 --> 00:12:52,480
so after the process get into the corner
execution

171
00:12:52,480 --> 00:12:57,040
we can get you need a struct by the
current data structure which PID is one

172
00:12:57,040 --> 00:13:01,449
is next then get the F structure of the
initial process

173
00:13:01,449 --> 00:13:06,069
12 and this is a code together a tree
structure of the first process of

174
00:13:06,069 --> 00:13:07,809
nickels operating system

175
00:13:07,809 --> 00:13:14,199
after that we can use whatever track to
replace the parent containers extract to

176
00:13:14,199 --> 00:13:18,819
make kind of container process category
both I system access permission on the

177
00:13:18,819 --> 00:13:20,378
host operating system

178
00:13:20,379 --> 00:13:24,160
first we can call function dim light at
this track to replace a current

179
00:13:24,160 --> 00:13:27,879
container process is abstract in
coventry up on six

180
00:13:27,879 --> 00:13:31,929
however after versions thereupon vero
there's no longer this function corner

181
00:13:31,929 --> 00:13:35,620
but we can also use functions written by
ourselves -

182
00:13:35,620 --> 00:13:39,820
realize it after this step the container
process can get the four hour system

183
00:13:39,820 --> 00:13:45,100
access accession of the house are
operating system and the final step is

184
00:13:45,100 --> 00:13:48,370
to like the lid of the container is kept
as i mentioned before

185
00:13:48,940 --> 00:13:53,470
inside one container our container
process referred to the same is Boxxy

186
00:13:53,470 --> 00:13:54,310
went red

187
00:13:54,310 --> 00:13:59,439
they are for after replacing X prophecy
which kind of container process pointed

188
00:13:59,440 --> 00:14:04,630
we can escalate our containers privilege
to global here we replace a chronic

189
00:14:04,630 --> 00:14:08,620
namespace by calling function credit
note new name space and switch task name

190
00:14:08,620 --> 00:14:11,980
space to set of the containers thanks
proxy

191
00:14:11,980 --> 00:14:16,330
this will help container to achieve
global his cap after this step a

192
00:14:16,330 --> 00:14:20,589
container finishes is kept and the
inside of the container create a new

193
00:14:20,589 --> 00:14:26,770
process means it has a 4 privilege of
the horror of the host OS higher after

194
00:14:26,770 --> 00:14:30,550
conversion syrup on there of the
function mention that bad not your

195
00:14:30,550 --> 00:14:34,599
walked met you to the security reason
when you can or fractions are not

196
00:14:34,600 --> 00:14:39,310
because part in more by the developer
here we may realize the functions in the

197
00:14:39,310 --> 00:14:44,380
. back but is there is not stable
usually a better solutions after the

198
00:14:44,380 --> 00:14:50,200
Gherkin general process get into connor
execution and replace the RFS tracked we

199
00:14:50,200 --> 00:14:55,990
can open shower or within a container to
execute the command to mount the

200
00:14:55,990 --> 00:14:59,560
containers were passed to let the
container chillstep or escape and get a

201
00:14:59,560 --> 00:15:07,900
grow box is privilege of the host OS
here is a demo video about executing is

202
00:15:07,900 --> 00:15:10,900
kept inside of the talker

203
00:15:14,940 --> 00:15:19,380
in this video first I check the process
in password directory on the host our

204
00:15:19,380 --> 00:15:24,210
system and then I opened a talker
getting to talk with spanish and check

205
00:15:24,210 --> 00:15:25,830
the percent in the password

206
00:15:25,830 --> 00:15:31,710
next there were executed exploit inside
of the talker and get a room share of

207
00:15:31,710 --> 00:15:37,320
the nexus system and after the escape we
can view all the processes including the

208
00:15:37,320 --> 00:15:40,320
containers processes itself

209
00:15:57,640 --> 00:16:00,640
ok

210
00:16:23,030 --> 00:16:26,030
something very important

211
00:16:26,610 --> 00:16:32,339
not notice inside of the doctor and the
next step is to execute the turkey

212
00:16:46,570 --> 00:16:49,570
huh

213
00:16:59,020 --> 00:17:02,020
and it only has two processes

214
00:17:11,059 --> 00:17:14,059
and this is running the exploit

215
00:17:47,390 --> 00:17:50,390
ok

216
00:18:21,690 --> 00:18:25,470
now it's outside of soccer after we run
your hand exploit

217
00:18:47,620 --> 00:18:52,449
now we can see that we run the PS and
can get are the processes on the host

218
00:18:52,450 --> 00:18:55,630
nation including the talker process
itself

219
00:19:06,590 --> 00:19:08,000
all of them

220
00:19:08,000 --> 00:19:14,480
and that the user that is the topic set
is kept them on video and the next part

221
00:19:14,480 --> 00:19:19,400
and I were introduced likes is kept
hanging from the official mission of the

222
00:19:19,400 --> 00:19:22,460
km communal platform

223
00:19:22,460 --> 00:19:27,680
first let me introduce a Kevin Camille a
kvm is the Phoenix color model that

224
00:19:27,680 --> 00:19:33,590
allow a user space program to utilize
the hardware virtualization features are

225
00:19:33,590 --> 00:19:35,179
wires processors

226
00:19:35,180 --> 00:19:39,920
Kim you can make use of km we're running
a target of texture that is the same as

227
00:19:39,920 --> 00:19:45,020
a host architecture for instance where
on your commute system x86 on the ACT

228
00:19:45,020 --> 00:19:50,629
x86 processor you can take advantage of
the carom acceleration give you a

229
00:19:50,630 --> 00:19:55,880
benefit for your host and your caster
system they are so remote switch when

230
00:19:55,880 --> 00:20:01,100
Ronnie original machine on chem commun
linux is a guest mode user mode and the

231
00:20:01,100 --> 00:20:05,240
common mode and our escape

232
00:20:05,240 --> 00:20:10,670
we're based on the next four points in
the first one is Kevin commute memory

233
00:20:10,670 --> 00:20:16,790
loud in the user mode of the house
machine and the second one is and where

234
00:20:16,790 --> 00:20:24,170
to place the share code and the third
one is our PID control and the last one

235
00:20:24,170 --> 00:20:29,690
is the exploited house first is a Kevin
commute memory loud

236
00:20:29,690 --> 00:20:35,210
now this is a mint memory out of a user
mode Kevin pure criminal process by

237
00:20:35,210 --> 00:20:39,920
executing a common line on the host
nation like this and in this memory out

238
00:20:39,920 --> 00:20:46,460
the letters are w.e are represented
represented a read write and execute

239
00:20:46,460 --> 00:20:51,560
attribute of the corresponding memory
area after the understanding of this

240
00:20:51,560 --> 00:20:56,870
let's go through from the beginning of
the right pick the attached as the lab

241
00:20:56,870 --> 00:21:02,989
em that this area's has four lines for
example the first line is a code segment

242
00:21:02,990 --> 00:21:06,080
this area to be read and execute

243
00:21:06,080 --> 00:21:11,480
but not right Bob the sig nine has no
ashfield the third memory area of lamb

244
00:21:11,480 --> 00:21:16,580
will be used to place a global variable
usually the first area is a hip area

245
00:21:16,580 --> 00:21:20,240
used by let them is really poor and
right ball

246
00:21:20,240 --> 00:21:25,160
the map area is usually used for the
emulated device of the virtual machines

247
00:21:25,160 --> 00:21:30,830
such as a five-hour floppity skin others
and the second user memory map area is

248
00:21:30,830 --> 00:21:34,309
used for the physical memory area of the
virtual machine

249
00:21:34,309 --> 00:21:39,559
the heap and the staff is a meat memory
area used by a human process and the

250
00:21:39,559 --> 00:21:42,440
last is about a system called memory
area

251
00:21:42,440 --> 00:21:49,790
well what interesting here is that this
area is a fixed area are in 64 picnics

252
00:21:49,790 --> 00:21:51,110
virginal commute

253
00:21:51,110 --> 00:21:56,659
i will talk about this later after the
understanding of the memory loud

254
00:21:56,660 --> 00:22:00,440
where have we understand the following
memory area to place our exploits share

255
00:22:00,440 --> 00:22:01,160
code

256
00:22:01,160 --> 00:22:06,230
unlike local tradition Eric's operation
method we come to control the memory

257
00:22:06,230 --> 00:22:09,679
advocate and a free of the host machine
inside of each machine

258
00:22:10,190 --> 00:22:14,630
this course that we cannot use the
convention or hips / a method to put

259
00:22:14,630 --> 00:22:18,890
this your code so we need to use the
information lick one ability and

260
00:22:18,890 --> 00:22:23,570
unconventional methods to make our
exploration but due to the limit of the

261
00:22:23,570 --> 00:22:26,210
information leakage one ability
exploration

262
00:22:26,210 --> 00:22:31,400
we need to find more place to put out
short code and take a look at this pic

263
00:22:31,400 --> 00:22:36,559
the physical memory area of a virtual
machine is created by memory map from

264
00:22:36,559 --> 00:22:41,480
the host machine q process so we can
place a show called in memory area of

265
00:22:41,480 --> 00:22:45,710
the virtual machine and find it on the
host machine by some fixed calculation

266
00:22:45,710 --> 00:22:53,090
and this is a good place to put our code
we start a BM and allocated to G memory

267
00:22:53,090 --> 00:22:58,250
area it by least common line and then
let's take a look as a memory loud a

268
00:22:58,250 --> 00:23:02,450
virtual machine process on the host
machine is a printing that address

269
00:23:02,450 --> 00:23:07,670
ranges 2gb and this area will be changed
when we operate a memory area inside of

270
00:23:07,670 --> 00:23:12,470
the BM and let's check these and this is
the best address we get from the memory

271
00:23:12,470 --> 00:23:13,429
layout

272
00:23:13,429 --> 00:23:16,880
first we run the test code inside the
virtual machine

273
00:23:16,880 --> 00:23:20,240
the code in Korean stirring like this a
second

274
00:23:20,240 --> 00:23:25,130
we calculate valve set and final string
on the host memory area and this address

275
00:23:25,130 --> 00:23:27,650
is the physical address of the swing

276
00:23:27,650 --> 00:23:32,720
after all of these are who is a big
place to put our share code is hard to

277
00:23:32,720 --> 00:23:33,280
get over

278
00:23:33,280 --> 00:23:38,170
ability to lick the memory map area
Camille and there's a second where to

279
00:23:38,170 --> 00:23:42,100
place our share code is a 50 of the
community the device

280
00:23:42,100 --> 00:23:46,540
this area is also memory mapped from the
cumin process on the host machine

281
00:23:46,540 --> 00:23:51,040
the venom vulnerability expression to
sign in the 15 is a very offense case of

282
00:23:51,040 --> 00:23:51,909
the 50

283
00:23:51,910 --> 00:23:58,480
this is pick where when we are very fine
the venom vulnerability the code right

284
00:23:58,480 --> 00:24:04,120
number for the two piles of function out
p to the fifo and in the second pic we

285
00:24:04,120 --> 00:24:08,169
can find the code 42 on the current
corresponding memory area on the host

286
00:24:08,170 --> 00:24:13,720
machine cumin process and there are
other measures to place a show called

287
00:24:13,720 --> 00:24:18,340
such as a simulated you are a network
device run is also the idea of memory

288
00:24:18,340 --> 00:24:23,709
area in these two pics when we pin side
we can also find the string on the

289
00:24:23,710 --> 00:24:27,880
criminal process memory after we put the
char code

290
00:24:27,880 --> 00:24:31,900
let's take a look at the methods of the
ID control to execute our code

291
00:24:32,590 --> 00:24:37,600
the first structure I want to introduce
is the argue step in commute which is

292
00:24:37,600 --> 00:24:42,189
related to the carpet functioning in
this structure the q milagro handler is

293
00:24:42,190 --> 00:24:47,080
punching excuse boy called area after we
control the hands are directly or

294
00:24:47,080 --> 00:24:51,820
indirectly we can control the code
execution procedure and that is VIP

295
00:24:51,820 --> 00:24:56,230
control and the perfect status is to
control the horrorcore structure in our

296
00:24:56,230 --> 00:25:00,280
so the arguments of the hundred function
and that makes the expression more

297
00:25:00,280 --> 00:25:05,230
effective and this structure is related
in visual hardware interrupt

298
00:25:05,230 --> 00:25:09,070
we can trigger these types of an ability
pies are present on the community the

299
00:25:09,070 --> 00:25:11,620
hardware of community inside a virtual
machine

300
00:25:11,620 --> 00:25:15,850
look let's look at this function is not
a chamber language

301
00:25:15,850 --> 00:25:18,469
this is our ghost hunter and

302
00:25:18,470 --> 00:25:21,830
is a bottom is a cameo hander

303
00:25:21,830 --> 00:25:28,189
and what we need to do is to write it RX
Platts 0 x 30 punter to let the accident

304
00:25:28,190 --> 00:25:35,210
killed Bob and procedural change after
we rewrite the hunter we can color r PX

305
00:25:35,210 --> 00:25:38,270
0 x u SQ than a memory area we want to

306
00:25:38,270 --> 00:25:44,270
this is a similar structure can be used
to control your IP and the procedure is

307
00:25:44,270 --> 00:25:49,850
similar to what i said before so I don't
don't talk much about the structure now

308
00:25:49,850 --> 00:25:55,908
and there are more ways to control your
IP such as the vulnerability of buffer

309
00:25:55,909 --> 00:25:59,059
overflow or use after Freeman ability of
commute

310
00:26:00,710 --> 00:26:06,320
after introduction about let's take a
look at the exploited steps and the

311
00:26:06,320 --> 00:26:10,220
exploited step is just like what i
mentioned about

312
00:26:10,220 --> 00:26:14,780
first we place the shortcode second with
trigger of an ability to control your

313
00:26:14,780 --> 00:26:20,629
key and third a bypass air as air our
NDP by the vulnerabilities and finally

314
00:26:20,630 --> 00:26:26,390
executed a shark or to achieve our is
kept here we introduced to one abilities

315
00:26:27,049 --> 00:26:34,340
cv2 son and 1575 all for ncc 2015 5 1 65

316
00:26:34,340 --> 00:26:38,000
the first one is a type of car heap
overflow vulnerability

317
00:26:38,000 --> 00:26:42,710
the second is the information liquid
ability or zoo when abilities can the

318
00:26:42,710 --> 00:26:47,690
leak the right address we want in a
special version cumulus part of the

319
00:26:47,690 --> 00:26:52,880
functions address offset is fixed so we
can get the past address to calculate

320
00:26:52,880 --> 00:27:00,320
our other address of the functions we
want to pipe a cerrar and then construct

321
00:27:00,320 --> 00:27:06,320
the arbitration use em project to change
the X execute attribute of the circle to

322
00:27:06,320 --> 00:27:07,700
pass TP

323
00:27:07,700 --> 00:27:12,500
now let's take a look at the hip / -
when a beauty

324
00:27:12,500 --> 00:27:18,289
this is part of the code entry mover in
2.4 here the air power overflow four

325
00:27:18,289 --> 00:27:25,190
points to the RQ structure when the use
of the buffer is just a for all 90

326
00:27:25,190 --> 00:27:27,530
expert and that is what we need

327
00:27:27,530 --> 00:27:30,500
like we talked before

328
00:27:30,500 --> 00:27:37,580
and this link is the more details about
this and cv funded by our team and there

329
00:27:37,580 --> 00:27:42,770
are other ways to exploit during our
research like the fixed address of the

330
00:27:42,770 --> 00:27:48,860
system calls in queue process for these
addressed directly in charcoal that will

331
00:27:48,860 --> 00:27:53,510
be matched up for our exploration and
this is a simpler of the shellcode to

332
00:27:53,510 --> 00:28:02,660
car system call directly at we control
the RDX and the RX yet and the hair is a

333
00:28:02,660 --> 00:28:06,290
demo video about escape inside a virtual
machine

334
00:28:06,290 --> 00:28:12,770
ok m and the unit video we start our
Kevin communication machine and the

335
00:28:12,770 --> 00:28:17,900
wrong exploit coding decided to let the
host executor of the shortcode to attach

336
00:28:17,900 --> 00:28:20,900
to a remote attacker machine

337
00:28:41,280 --> 00:28:47,490
and this is our machine first which have
if we are connected to the host machine

338
00:28:47,490 --> 00:28:48,540
directly

339
00:28:48,540 --> 00:28:56,670
it's done walk and next we started a few
meal with your machine

340
00:29:15,000 --> 00:29:18,000
yeah

341
00:29:21,220 --> 00:29:24,220
yeah

342
00:29:38,559 --> 00:29:41,330
yeah

343
00:29:41,330 --> 00:29:44,330
yeah

344
00:30:22,570 --> 00:30:27,549
and we're on the exploit now the host
machine

345
00:30:28,120 --> 00:30:36,158
there is some stream free and on the
attack or machine we can connect to the

346
00:30:36,159 --> 00:30:40,659
host and around the share on the whole
mission

347
00:31:31,480 --> 00:31:36,640
and this is to create a folder from the
attacker machine on the host machine

348
00:32:18,020 --> 00:32:21,020
yeah

349
00:32:29,149 --> 00:32:30,189
just

350
00:32:30,190 --> 00:32:33,190
and that's all in the Christian time

351
00:32:39,520 --> 00:32:42,790
thank you very much for your
presentation

352
00:32:42,790 --> 00:32:46,090
are there any questions

353
00:32:46,090 --> 00:32:54,939
is it possible to break out of docker
container f if processes are not running

354
00:32:54,940 --> 00:32:57,580
as root and put your place out louder

355
00:32:57,580 --> 00:33:03,879
is it possible to break out of a docker
container from processes which are not

356
00:33:03,880 --> 00:33:13,390
running at roots so if you cut the web
server human and not a waitin is a con

357
00:33:13,390 --> 00:33:20,260
our inability and because it is a design
architecture thickness of the talker so

358
00:33:20,260 --> 00:33:23,170
we can make use of this

359
00:33:23,170 --> 00:33:29,350
yeah other questions

360
00:33:32,480 --> 00:33:37,669
lunch is already being served outside in
the expo hall

361
00:33:38,690 --> 00:33:44,720
you can enjoy your lunch while you're
looking around in the Expos will start

362
00:33:44,720 --> 00:33:47,510
again at two p.m. thank you

