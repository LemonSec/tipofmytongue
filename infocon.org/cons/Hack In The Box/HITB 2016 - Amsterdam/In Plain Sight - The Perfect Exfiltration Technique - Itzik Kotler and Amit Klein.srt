1
00:00:14,640 --> 00:00:17,840
thank you very much thank you for it

2
00:00:17,840 --> 00:00:25,759
- a presentation in this afternoon as
they then put on the introduction

3
00:00:25,760 --> 00:00:34,400
what made this is this presentation is
about the perfect situation is are there

4
00:00:34,400 --> 00:00:44,420
are a few words about this great fellow
it sick and more words about myself and

5
00:00:44,420 --> 00:00:46,040
off to work

6
00:00:46,040 --> 00:00:52,640
so what we're going to talk about you
today is perfect situation and this is

7
00:00:52,640 --> 00:00:59,600
the condition that to define as an end .
typically desktop or laptop with in a

8
00:00:59,600 --> 00:01:07,250
high security organization communicating
exfiltrating data to an outside entity a

9
00:01:07,250 --> 00:01:11,090
out of the outside of the organization's
perimeter

10
00:01:11,090 --> 00:01:18,500
the idea here is a revolt revolves
around the strategic situation and we

11
00:01:18,500 --> 00:01:21,480
are not necessarily talking about

12
00:01:21,480 --> 00:01:28,740
expert rating millions of credit card
numbers or health record information we

13
00:01:28,740 --> 00:01:33,929
rather try to imagine what you would
like to explore straight out of a

14
00:01:33,930 --> 00:01:41,370
maximum security defense industry
network or or some such organization in

15
00:01:41,370 --> 00:01:43,920
such case the game is slightly different

16
00:01:43,920 --> 00:01:49,200
think about cryptographic keys that you
want you may want to exit rate think

17
00:01:49,200 --> 00:01:57,210
about critical yes no questions or
critical numbers think about clothes set

18
00:01:57,210 --> 00:02:04,139
that data like the name of specific
people names of project definitions of

19
00:02:04,140 --> 00:02:10,169
projects and strategic directions
decision and so forth

20
00:02:10,169 --> 00:02:18,630
what all these have in common is that
they are actually very modest it pieces

21
00:02:18,630 --> 00:02:23,519
of information in in bit counter in
terms of bit count that we are talking

22
00:02:23,520 --> 00:02:28,470
here about information that can be
represented in single bits or possibly

23
00:02:28,470 --> 00:02:35,430
hundreds of bits or maybe they probably
less than 1000 beats and thereby the

24
00:02:35,430 --> 00:02:41,100
requirement for for the acceleration
then with is in itself very modest we

25
00:02:41,100 --> 00:02:46,620
can probably live very well with the bed
with it was excellent effective

26
00:02:46,620 --> 00:02:50,370
acceleration bandwidth over on several
dozen of bits per d

27
00:02:54,069 --> 00:02:57,069
when its second i started to think about

28
00:02:57,609 --> 00:03:03,999
exfiltration about perfect acceleration
we look with we spent several months

29
00:03:03,999 --> 00:03:11,379
looking at existing excitation methods
and techniques about looking at covert

30
00:03:11,379 --> 00:03:19,000
channels in the in the literature and we
were unsatisfied but by what we found

31
00:03:19,000 --> 00:03:29,139
and through and so this is reached that
food is well reading the literature we

32
00:03:29,139 --> 00:03:35,590
came up with some rules and some
benchmarks and based on which we

33
00:03:35,590 --> 00:03:40,989
evaluate existing solutions as well as
several scan solution candidates of our

34
00:03:40,989 --> 00:03:43,510
own and this

35
00:03:43,510 --> 00:03:50,409
we collected and compiled a list of ten
such requirements and I think a very

36
00:03:50,409 --> 00:03:56,260
important part of our work is actually
this compilation of rules which we call

37
00:03:56,260 --> 00:03:59,018
the 10 commandments of perfect situation

38
00:03:59,019 --> 00:04:06,159
the first rule is something you may be
familiar with from the Crypt world

39
00:04:06,159 --> 00:04:09,970
it's called there it's called the clerk
of principle or sometimes Shannon of

40
00:04:09,970 --> 00:04:15,459
something Shannon's Maxine and the idea
here is that a Krypton that in in

41
00:04:15,459 --> 00:04:21,310
tripped or systemic our place and a
perfect acceleration system should be

42
00:04:21,310 --> 00:04:21,940
secure

43
00:04:21,940 --> 00:04:25,509
even if everything about the system
except the key is public knowledge

44
00:04:26,110 --> 00:04:30,310
in other words it's in stark contrast to
security by obscurity

45
00:04:31,240 --> 00:04:39,310
the idea here is that if is for perfect
filtration system to be robust we need

46
00:04:39,310 --> 00:04:44,919
we need to all go the basic algorithm to
be public or we can have the basic

47
00:04:44,919 --> 00:04:51,370
algorithm publicly known the specifics
of the system the keys should only and

48
00:04:51,370 --> 00:04:53,680
only the keys should be secret

49
00:04:53,680 --> 00:04:57,430
and given that someone

50
00:04:57,430 --> 00:05:06,250
that attempts to detect or or or disrupt
the and the cover channeled exfiltration

51
00:05:06,250 --> 00:05:12,250
technic should still not be able to
detect or or disrupt channel

52
00:05:13,780 --> 00:05:18,190
it also enables multiple channels
simultaneously multiple channels by

53
00:05:18,190 --> 00:05:24,130
choosing a different keys so that if
even if all other channels are somehow

54
00:05:24,130 --> 00:05:25,420
compromised

55
00:05:25,420 --> 00:05:30,220
there is that they are remaining channel
is still as secure as it was in day one

56
00:05:30,220 --> 00:05:37,510
so and and that promise and that
provides scalability we can use the same

57
00:05:37,510 --> 00:05:40,420
algorithm of different kids over and
over again

58
00:05:40,420 --> 00:05:49,330
the second commandment is that we only
allow a web browsing and drive traffic

59
00:05:49,330 --> 00:05:51,880
is a two to be used

60
00:05:51,880 --> 00:06:00,550
so think about things like HTTP and dns
and and glsl in contrast say to some

61
00:06:00,550 --> 00:06:05,920
particles that are not used over the web
or protocols that are not expected to be

62
00:06:05,920 --> 00:06:13,030
used by a typical user may be like a big
I seen him and and and some and such a

63
00:06:13,030 --> 00:06:14,020
particles

64
00:06:14,020 --> 00:06:18,099
the idea here is that again we are

65
00:06:18,100 --> 00:06:23,680
it also as a sort of the idea here is
that first protocols that are not

66
00:06:23,680 --> 00:06:29,110
typically not to use typically over the
world may very will be blocked by some

67
00:06:29,110 --> 00:06:34,000
organizations specifically ones with
specifically the highest of the high

68
00:06:34,000 --> 00:06:35,590
security organizations

69
00:06:35,590 --> 00:06:38,919
additionally even if such particles are
not

70
00:06:38,920 --> 00:06:43,840
explicitly block they may raise
suspicion in there in one network

71
00:06:43,840 --> 00:06:51,969
monitoring is a in the presence of metal
monetary which relates to my to the

72
00:06:51,970 --> 00:06:56,470
third rule that says basically whenever
there is any doubt there is no doubt

73
00:06:56,470 --> 00:07:00,760
that the idea here is that is that
perfect situation

74
00:07:00,760 --> 00:07:07,840
I thought should avoid any activity or
any kind of data transfer that may raise

75
00:07:07,840 --> 00:07:14,979
any suspicion even theoretically and so
this rules out things like submitting to

76
00:07:14,980 --> 00:07:16,450
a public forum

77
00:07:16,450 --> 00:07:24,760
even if submitting to a public forum is
is pretty non-malicious a or can be

78
00:07:24,760 --> 00:07:25,840
malicious

79
00:07:25,840 --> 00:07:33,099
the mere fact that we can hide data in
in such submissions by say choosing see

80
00:07:33,100 --> 00:07:40,330
various certain words and and not and
not the others or or playing or tying of

81
00:07:40,330 --> 00:07:45,609
punctuation and white spaces that the
fact that this can be used as a cover

82
00:07:45,610 --> 00:07:51,910
channel rules out the use of public form
submissions

83
00:07:51,910 --> 00:07:57,970
because it may be subject to into
integration of suspicion and likewise

84
00:07:57,970 --> 00:08:06,820
sharing google docs and using encrypted
text and also all these sort of of color

85
00:08:06,820 --> 00:08:09,820
channels

86
00:08:13,230 --> 00:08:20,940
the Fourth Amendment introduces perfect
network monitoring we want to assume

87
00:08:20,940 --> 00:08:26,430
that every packet is scrutinized at all
protocol levels in a perfect manner

88
00:08:27,000 --> 00:08:33,360
every normally is detected think about
all the products that offer big data

89
00:08:33,360 --> 00:08:38,880
anomaly detection machine learning-based
anomaly detection and all that stuff

90
00:08:40,440 --> 00:08:48,090
community-based anomaly detection etc
and as well as having perfect reputation

91
00:08:48,090 --> 00:08:54,570
data and statistics for all the IP
addresses all the hosts and domain name

92
00:08:54,570 --> 00:09:00,450
all the who is information is available
and so forth so whenever we communicate

93
00:09:00,450 --> 00:09:07,080
whenever the sending party communicates
with an external entity we should assume

94
00:09:07,080 --> 00:09:12,300
that this external entity is scrutinized
to see what's the IP reputation was the

95
00:09:12,300 --> 00:09:15,300
host reputation when what the domain was
registered by whom

96
00:09:16,020 --> 00:09:23,189
and so forth and so forth this is in
fact a very strong requirement a very

97
00:09:23,190 --> 00:09:33,360
limiting factor as we will soon see the
fifth commandment it introduces pls / as

98
00:09:33,360 --> 00:09:37,950
the cell termination which is employed
by some organizations so that we cannot

99
00:09:37,950 --> 00:09:45,450
assume that data is encrypted with
ssl/tls is safe from some from being

100
00:09:45,450 --> 00:09:50,820
scrutinized issued assume that is a sell
it so https communications a selfie

101
00:09:50,820 --> 00:09:55,890
ellis and communication or so until this
are in fact decrypted at the

102
00:09:55,890 --> 00:10:02,910
organization level at the gateway and
inspected there now for a bit of good

103
00:10:02,910 --> 00:10:10,350
news we do allow the receiving party or
we do state the receiving party has no

104
00:10:10,350 --> 00:10:13,340
restrictions in fact the receiving party
can

105
00:10:13,340 --> 00:10:17,840
can be decided to an organization that
doesn't care about security or even

106
00:10:17,840 --> 00:10:23,900
better at an organization that supports
the the common DM the perfect situation

107
00:10:25,040 --> 00:10:34,310
a channel so let's say a rival company
or or foreign intelligence unit or some

108
00:10:34,310 --> 00:10:39,859
such more the good news front

109
00:10:39,860 --> 00:10:44,420
we also assume that there is no nation
state monitoring or third party site

110
00:10:44,420 --> 00:10:52,939
meetings one outside the enterprise
network so once the packet lives

111
00:10:52,940 --> 00:10:59,389
the same day enterprise network it is
free to travel without scrutiny and

112
00:10:59,389 --> 00:11:05,389
without interference and without the
observation to its destination and

113
00:11:05,389 --> 00:11:09,649
likewise back it's coming from the
destination for from from outside the

114
00:11:09,649 --> 00:11:17,240
network printer the interpreter to the
perimeter are not inspected or or or

115
00:11:17,240 --> 00:11:24,410
interfere with on the way to the center
president of perimeter and the idea is

116
00:11:24,410 --> 00:11:28,670
that we are only concerned with the
security of the enterprise itself

117
00:11:29,389 --> 00:11:31,779
we're not trying to hide from

118
00:11:31,779 --> 00:11:36,579
from a state level of surveillance
programs or global internet surveillance

119
00:11:36,579 --> 00:11:47,050
programs and one last good news piece is
that we do allow time synchronization

120
00:11:47,050 --> 00:11:48,219
and say here

121
00:11:48,220 --> 00:11:51,999
second resolution between the sender and
the receiver

122
00:11:52,569 --> 00:11:57,998
the rationale is that in today's
internet it's very easy to synchronize

123
00:11:57,999 --> 00:12:04,689
time to synchronize the Machine clocks
to vary too high resolution higher a

124
00:12:04,689 --> 00:12:08,469
highly reliable time source likely it

125
00:12:08,470 --> 00:12:13,629
for example with ntp are a smtp time
synchronization protocols that

126
00:12:14,800 --> 00:12:21,878
who's sources are servers debt or and
connected to atomic clocks

127
00:12:21,879 --> 00:12:28,569
so we can really be sure that two
machines have a very very similar a

128
00:12:28,569 --> 00:12:35,620
clock up and and I think that up to one
second difference is acceptable

129
00:12:37,959 --> 00:12:43,388
we do provide quote unquote bonus points
for methods that can be implemented

130
00:12:43,389 --> 00:12:51,309
manually without any additional software
and this supports the situation of human

131
00:12:51,309 --> 00:12:57,910
agent that communicates today outside
the world and we do not want this agent

132
00:12:57,910 --> 00:13:02,259
of ours to have any suspicious software
on his or her a computer

133
00:13:03,639 --> 00:13:12,009
sorry and finally we need to consider
active disruption by the enterprise as

134
00:13:12,009 --> 00:13:16,269
an option and we'll see an example we
see it will see some examples to that

135
00:13:19,320 --> 00:13:23,970
an immediate consequence of the fourth
commandment is that no direct

136
00:13:23,970 --> 00:13:30,510
communication is allowed between the
sender and receiver here's why I quote

137
00:13:30,510 --> 00:13:32,160
here commandment number four

138
00:13:32,160 --> 00:13:38,310
as you can see and the important piece
is that the reputation and statistics

139
00:13:38,310 --> 00:13:50,699
for eye peas and hast sand and domains
is available in its full data in its

140
00:13:50,700 --> 00:13:58,110
full capacity it to the enterprise
network security organization and since

141
00:13:58,110 --> 00:14:03,270
the side and IP ownership can be
determined and since the reputation and

142
00:14:03,270 --> 00:14:05,040
statistics are available

143
00:14:05,040 --> 00:14:09,240
we cannot just direct communication
because for it to happen

144
00:14:09,810 --> 00:14:16,439
the IP address or the side or the domain
name for for the external entity would

145
00:14:16,440 --> 00:14:22,470
be scrutinized and would probably be
detected as an IP which is not popular

146
00:14:22,470 --> 00:14:28,350
maybe it does not reside in incontinent
country that is considered safe to

147
00:14:28,350 --> 00:14:35,610
communicate with maybe it will have it
will not have a reputation as a horse

148
00:14:35,610 --> 00:14:39,870
named for as a very popular horse named
or so maybe it will not be on the elects

149
00:14:39,870 --> 00:14:43,620
I'll 1,000,000 list or if not be on
alexa list at all

150
00:14:43,620 --> 00:14:47,790
all these may raise the spaceship
especially in the high security

151
00:14:47,790 --> 00:14:54,839
organizations and there will be
questions like why on earth is a desktop

152
00:14:54,840 --> 00:14:59,040
my organization communicates with this
cost or this IP address

153
00:14:59,040 --> 00:15:07,560
so in order to implement a perfect excu
tration techniques we need to resort to

154
00:15:07,560 --> 00:15:11,880
an indirect communication between the
sender and receiver namely that they

155
00:15:11,880 --> 00:15:18,120
communicate through one or more
additional or third party sites and the

156
00:15:18,120 --> 00:15:22,350
third party sites need to have a very
good reputation you to have her at the

157
00:15:22,350 --> 00:15:27,150
IP level at the highest level at the
domain level show they take day

158
00:15:27,150 --> 00:15:32,939
it falls that they cannot be owned by of
course not by the centered but by also

159
00:15:32,940 --> 00:15:35,850
more importantly not by the receiver

160
00:15:35,850 --> 00:15:41,460
so those are third party sites sites
like Amazon like Google like yahoo and

161
00:15:41,460 --> 00:15:51,630
size like that which are not owned by
the receiver one before I disk before I

162
00:15:51,630 --> 00:15:56,820
dive into the details of the perfect
situation techniques that we were able

163
00:15:56,820 --> 00:15:58,080
to construct

164
00:15:58,080 --> 00:16:04,620
I want to provide you some some false
positives some analysis of existing

165
00:16:04,620 --> 00:16:09,030
exploration techniques and why in their
shortcomings and y where Y we think that

166
00:16:09,030 --> 00:16:18,689
they do not qualify as as perfect
situation techniques as you may know

167
00:16:18,690 --> 00:16:25,740
there was a vast research into the area
of color channels and and acceleration

168
00:16:25,740 --> 00:16:27,089
techniques

169
00:16:27,089 --> 00:16:32,130
there's a lot of wherever there's a lot
of work and in there

170
00:16:32,850 --> 00:16:38,819
in the industry and in the Academy
around exfiltrating data mapping of

171
00:16:38,819 --> 00:16:46,500
expert of possible situation techniques
through tcp/ip fields and headers things

172
00:16:46,500 --> 00:16:51,959
like time the time to leave header
things like a cat lands patterns time

173
00:16:51,959 --> 00:16:58,859
packet rate in timing at the HTTP love
old is there are some classical headers

174
00:16:58,860 --> 00:17:02,130
such as if modified sins and the cookie
header

175
00:17:02,730 --> 00:17:09,240
there's also a paper that describes how
wide spaces in the context of HTTP

176
00:17:09,240 --> 00:17:16,049
headers can be manipulated to signal to
signal bits like for example two spaces

177
00:17:16,049 --> 00:17:21,209
may be named in one beat one single
space may mean it's 0 and so forth

178
00:17:21,209 --> 00:17:26,730
because the HTTP protocol itself and
doesn't really care about the number of

179
00:17:26,730 --> 00:17:33,360
of consecutive white spaces that you
have say in heathers I list here

180
00:17:33,929 --> 00:17:41,760
three very comprehensive compilations of
their acceleration techniques and of

181
00:17:41,760 --> 00:17:45,510
course you're free to visit them and be

182
00:17:46,049 --> 00:17:50,850
and and and get an idea of the vast in
front of the best information and the

183
00:17:50,850 --> 00:17:54,809
amount of of research that has been
poured into this area

184
00:17:56,369 --> 00:18:02,488
however like I said we are not and we
are not satisfied with any of those

185
00:18:02,489 --> 00:18:03,600
techniques

186
00:18:03,600 --> 00:18:10,738
let's take for example a very basic
technique of acceleration that revolves

187
00:18:10,739 --> 00:18:13,590
around the time type of service heads
and IP

188
00:18:13,590 --> 00:18:22,619
it's an ID field maybe header so well
it's an 8-bit it's a bit field so it can

189
00:18:22,619 --> 00:18:26,070
be used to exfiltrate up to eight beat
bits of data

190
00:18:26,070 --> 00:18:29,369
the field the depends on the exact
definition

191
00:18:29,369 --> 00:18:36,899
however the factor windows workstations
and this zero out this field when

192
00:18:36,899 --> 00:18:43,350
sending out packets so it is quite
trivial to devise an anomaly detection

193
00:18:43,350 --> 00:18:50,639
rule that fires when air and our windows
work station sends out a packet with do

194
00:18:50,639 --> 00:18:55,469
it with a nonzero tos and the fact that
this is not been

195
00:18:56,190 --> 00:19:02,399
that that sexual or such the click is
not implemented should not should not

196
00:19:02,399 --> 00:19:08,129
indicate that it is not possible because
as we said the first role and they the

197
00:19:08,129 --> 00:19:13,049
deck of principle means that the
algorithm is known so the algorithm here

198
00:19:13,049 --> 00:19:18,720
is using type of service field so it is
pretty easy to device a product in a

199
00:19:18,720 --> 00:19:23,370
rule to test this type of service field
and check if it is zero not

200
00:19:23,370 --> 00:19:29,489
additionally disruption is trivial the
gate with a the outbound Gateway

201
00:19:29,490 --> 00:19:34,019
firewall simply needs to zero out this
field whatever the previous value was

202
00:19:34,019 --> 00:19:42,210
and then there is no acceleration and
finally it does need a direct connection

203
00:19:42,210 --> 00:19:47,610
to the second part to the receiving
party because i'm going to link to the

204
00:19:47,610 --> 00:19:53,070
third party would completely kill the
IPO in fact that TCP connection and they

205
00:19:53,070 --> 00:19:59,189
miss the third party side will use its
own tos and so it has to be a direct

206
00:19:59,190 --> 00:20:03,659
over IP communication between the
parties and that is except that is

207
00:20:03,659 --> 00:20:09,389
exactly the kind of things that that
that kills this technique in from the

208
00:20:09,389 --> 00:20:13,049
perfect information and press a person
and perspective

209
00:20:16,120 --> 00:20:20,409
yeah

210
00:20:20,410 --> 00:20:21,520
ok

211
00:20:21,520 --> 00:20:29,230
perhaps a more interesting concept
technique is the using ipid using the

212
00:20:29,230 --> 00:20:38,020
ipid filled the ipid field is used to
reconstruct IP packets in when facing

213
00:20:38,020 --> 00:20:47,860
the fragmentation and if you're familiar
with the year and it's called them the

214
00:20:47,860 --> 00:20:54,070
idol scan technique that was in what was
introduced to think in 98 and was

215
00:20:54,070 --> 00:21:02,800
implemented by n map and we are the the
ipid extraction technique that is

216
00:21:02,800 --> 00:21:09,909
proposing the URL quoted at the first
line is based on the same concept the

217
00:21:09,910 --> 00:21:16,300
idea is that with the sender and
receiver agree on on an IP address on

218
00:21:16,300 --> 00:21:19,389
the third party IP address can be a web
server

219
00:21:19,390 --> 00:21:23,290
maybe amazon web server or Google work
several whatnot

220
00:21:23,290 --> 00:21:26,290
the agree on IP address and on

221
00:21:27,030 --> 00:21:30,389
one at a time an hour and minute and a
second of the day

222
00:21:30,990 --> 00:21:35,070
in order to transmit a single bit and
what the

223
00:21:35,070 --> 00:21:41,580
they receive ered the receiver does is a
second of you before the designated time

224
00:21:41,580 --> 00:21:48,929
it falls it sends a request to this side
and in the response at the IP level and

225
00:21:48,930 --> 00:21:55,800
it gets in the current IP ID and value
that was sent by by the operating system

226
00:21:55,800 --> 00:22:00,570
of the third party side and the third
part aside in this case needs to be

227
00:22:00,570 --> 00:22:06,450
needs to use incremental globally
implementing ipid generation algorithm

228
00:22:06,450 --> 00:22:09,780
so at the designated time

229
00:22:10,530 --> 00:22:18,330
descending a party the center needs to
either send a request to the to that IP

230
00:22:18,330 --> 00:22:22,919
address in which case the beat its
signal with which signals a bit 0 a bit

231
00:22:22,920 --> 00:22:24,690
one or not

232
00:22:24,690 --> 00:22:30,210
Orson nothing at all in which case it
signals to be 20 few seconds after the

233
00:22:30,210 --> 00:22:36,000
designated time the receiver Paul's of
sense another request to the same IP and

234
00:22:36,000 --> 00:22:40,950
in the response it gets the new IP ID
value and if the interval between the I

235
00:22:40,950 --> 00:22:43,710
the two ipid values is too

236
00:22:43,710 --> 00:22:49,440
it means that their Center sent
requested something from the side and

237
00:22:49,440 --> 00:22:54,210
got a response and the ipid was
incremented and if it is one that it

238
00:22:54,210 --> 00:22:58,680
means that it's just that nothing
happened in between and the bit was zero

239
00:22:58,680 --> 00:23:02,430
and as you can see this

240
00:23:02,430 --> 00:23:08,700
this technique is actually in direct you
can use a well-reputed web server or ftp

241
00:23:08,700 --> 00:23:12,330
server or I don't know are at the
Internet

242
00:23:12,330 --> 00:23:17,639
yeah and so there's no problem with
there are no reputation problems and who

243
00:23:17,640 --> 00:23:21,180
is problems and network surveillance
problems

244
00:23:21,180 --> 00:23:26,070
what where there is a problem is that
the operating system

245
00:23:26,670 --> 00:23:30,520
they're not they're not too many
operating systems that support this

246
00:23:30,520 --> 00:23:36,250
the concept of global incrementing ipid
counter in fact the only one I know of

247
00:23:36,250 --> 00:23:42,490
the prep presently that supports it is
is freebsd and even them they probably

248
00:23:42,490 --> 00:23:47,110
will remove it very soon eh

249
00:23:47,860 --> 00:23:52,840
and so that in fact it cannot be used
with modern system that the that paper

250
00:23:52,840 --> 00:23:58,240
and I have a lot of respect for it was
written many years ago and things simply

251
00:23:58,240 --> 00:24:00,250
changed since that time

252
00:24:00,250 --> 00:24:03,610
obviously when choosing a very popular
site

253
00:24:03,610 --> 00:24:09,370
you also have line knows you also have
that that side that side serves probably

254
00:24:09,370 --> 00:24:15,639
hundreds or maybe thousand requests per
second so we did that in that interval

255
00:24:15,640 --> 00:24:20,140
we're talking about a few seconds there
may be thousands of requests the

256
00:24:20,140 --> 00:24:25,840
incoming and outgoing responses and the
ipid value becomes very very very noisy

257
00:24:25,840 --> 00:24:31,929
so it's very difficult to find a popular
site that does not serve typically

258
00:24:31,930 --> 00:24:35,920
content in at the rate of hundreds or
thousands of requests per second

259
00:24:43,530 --> 00:24:45,879
ok

260
00:24:45,880 --> 00:24:53,200
so and a very new Miss we have with an
interesting kind of web counters

261
00:24:53,200 --> 00:24:58,240
if you're familiar with your shortness
and bit ly the classic example for case

262
00:24:58,240 --> 00:25:00,700
and you

263
00:25:00,700 --> 00:25:08,620
the idea here is that they shorten the
URL into their a very short URL based on

264
00:25:08,620 --> 00:25:14,169
on their domain and one and when you hit
that URL you get the right direction to

265
00:25:14,170 --> 00:25:17,170
the original longer URL

266
00:25:18,550 --> 00:25:23,770
so what the sender and receiver do is
they choose the URL has to be not so

267
00:25:23,770 --> 00:25:31,150
popular resource and then before the
designated time the receiver checks that

268
00:25:31,150 --> 00:25:37,030
the web count for that particular URL in
bit ly by appending a plaster the urine

269
00:25:37,030 --> 00:25:40,840
what happens in bit ly if you have been
the plaster the early do not get that

270
00:25:40,840 --> 00:25:46,000
you are redirected to the URL today or
original you're reading instead you

271
00:25:46,000 --> 00:25:51,670
you're shown statistics page which I'll
show you immediately at the designated

272
00:25:51,670 --> 00:25:58,780
time the center requests your day BTW or
or not there by signaling a single bit

273
00:25:58,780 --> 00:26:03,129
and a bit later a few seconds later
perhaps the receiver check the web count

274
00:26:03,130 --> 00:26:05,980
again if the web count was implemented
by one

275
00:26:05,980 --> 00:26:09,820
it means that there's the center Center
bit one if the web counter was not

276
00:26:09,820 --> 00:26:13,780
implemented the sender sends a signal to
be 20

277
00:26:13,780 --> 00:26:17,440
here is another example of when

278
00:26:17,440 --> 00:26:21,820
what happens if you are penned a plus to
the bit ly or l you get instead of the

279
00:26:21,820 --> 00:26:27,159
original URL you get tested every
direction to the original URL you get

280
00:26:27,160 --> 00:26:32,530
statistics page showing you the

281
00:26:32,530 --> 00:26:36,850
the number of hits at their day the
circle at the bottom of the page and

282
00:26:36,850 --> 00:26:39,490
here's the problem

283
00:26:39,490 --> 00:26:45,220
it also provides it also tells you what
the original URL is up there at the at

284
00:26:45,220 --> 00:26:48,220
the top of the page

285
00:26:49,720 --> 00:26:55,780
so with that information and enterprise
can design a disruption attack against

286
00:26:55,780 --> 00:26:57,340
this covert journal

287
00:26:57,340 --> 00:27:02,260
the idea is that the enterprise
intercept every request internal request

288
00:27:02,260 --> 00:27:07,360
to bit ly RL and instead of instead of
forwarding the request is is to bit ly

289
00:27:07,360 --> 00:27:13,000
it sends a request of appended with a
plus sign and then it extracts the

290
00:27:13,000 --> 00:27:18,670
original URL from there a bit ly
response page that such as i showed you

291
00:27:18,670 --> 00:27:24,730
just a slide before and it will then
redirect the original request from the

292
00:27:24,730 --> 00:27:30,730
client to the original URL instead of
going through the bit ly direction and

293
00:27:30,730 --> 00:27:36,130
that the impact of this is that there
and the bit ly URL is never implemented

294
00:27:36,130 --> 00:27:37,360
so it

295
00:27:37,360 --> 00:27:44,169
in fact it kills the whole the whole arm
cover channel and the impact of this is

296
00:27:44,170 --> 00:27:47,170
pretty minimal to the organization

297
00:27:51,820 --> 00:27:55,840
another near miss is using the account
log n time

298
00:27:56,530 --> 00:28:03,490
gmail for example shows the last looking
time if you visit the URL that i quoted

299
00:28:03,490 --> 00:28:05,590
here assuming you are logged in

300
00:28:05,590 --> 00:28:11,139
so the product is that the center is
logged in at the designated time or not

301
00:28:11,140 --> 00:28:17,110
there by signaling a bit 1 or 0
respectively and the receiver can log in

302
00:28:17,110 --> 00:28:20,889
later and use that URL to see whether
that what

303
00:28:20,890 --> 00:28:26,830
what was the last login so if the last
looking is exactly the designated time

304
00:28:27,670 --> 00:28:32,380
it means that the sender was logged in
it sorry if the last login was before

305
00:28:32,380 --> 00:28:35,740
the designated time means that the
center was logged in and if the last

306
00:28:35,740 --> 00:28:37,540
looking was not there

307
00:28:37,540 --> 00:28:42,399
I mean that the sender was was not
logged in and it is 0

308
00:28:42,400 --> 00:28:47,740
unfortunately that same page also shows
the last access from all devices the

309
00:28:47,740 --> 00:28:52,390
browser information such as user agent
string and your location and yahoo mail

310
00:28:52,390 --> 00:28:59,800
also shows the IP address so that is
quite a problem because it it will show

311
00:28:59,800 --> 00:29:07,240
that they that the account was shared
between two entities that are not get it

312
00:29:07,240 --> 00:29:11,800
raises a lot of suspicion because what
business does this IP address from

313
00:29:11,800 --> 00:29:21,250
country from out of the country to
access your Europe aware and gmail your

314
00:29:21,250 --> 00:29:27,070
gmail account or your yahoo mail account
and what business that what why is it

315
00:29:27,070 --> 00:29:30,220
not happening and as such and such

316
00:29:30,220 --> 00:29:35,140
our why is it happening when you won why
is there a look in while you are at the

317
00:29:35,140 --> 00:29:40,210
enterprise working and not logging in so
well there are a lot of questions and a

318
00:29:40,210 --> 00:29:42,620
lot of cracks in the story or

319
00:29:42,620 --> 00:29:50,780
or or a lot of suspicion around when
looking at the all the other last access

320
00:29:50,780 --> 00:29:56,570
information when employing such a such a
situation technique

321
00:29:56,570 --> 00:30:02,960
additionally some and some enterprises
simply block access to email and social

322
00:30:02,960 --> 00:30:09,950
sites so thereby completely in am
killing this this technique and justice

323
00:30:09,950 --> 00:30:17,270
administration at the left hand side of
the screen you see the google the Jimmy

324
00:30:17,270 --> 00:30:22,610
last access information you can see much
probably

325
00:30:22,610 --> 00:30:27,530
if you have keen eyes you can see that
there is a Jew location information for

326
00:30:27,530 --> 00:30:31,820
examples to tell you have for
generations see on and in Jerusalem and

327
00:30:31,820 --> 00:30:37,490
then they brought a lot of places from
which in for at least a comment log into

328
00:30:37,490 --> 00:30:44,390
and there are does also times them for
the last login and in your hood if it's

329
00:30:44,390 --> 00:30:45,350
even worse

330
00:30:45,350 --> 00:30:49,219
you have the you know you have your
location and you have time stamp but you

331
00:30:49,220 --> 00:30:59,120
also have the exact IP address so we
talked a lot about what does not work

332
00:30:59,120 --> 00:31:09,709
and it's time to say what it what does
work in our opinion and the principles

333
00:31:09,710 --> 00:31:16,130
around which we design the perfect
exfiltration techniques is that we use

334
00:31:16,130 --> 00:31:22,309
regular browsing we limit ourselves to
HTTP or HTTPS and the concept is to

335
00:31:22,309 --> 00:31:27,830
modify the application have protocol
state and this puts us in the

336
00:31:28,519 --> 00:31:36,709
storage channel bucket when when you
categorize covert channels and then we

337
00:31:36,709 --> 00:31:39,049
observe the chain to change remotely

338
00:31:39,049 --> 00:31:43,129
this is quite similar to the concept
that we show the earlier about the last

339
00:31:43,129 --> 00:31:46,339
log in time but there

340
00:31:46,339 --> 00:31:52,580
the trick is to find those services or
those application states that do not

341
00:31:52,580 --> 00:31:57,439
leave anything behind be on their own
state so there's no tracing of IP

342
00:31:57,440 --> 00:32:01,070
addresses and time stamps and so forth

343
00:32:01,070 --> 00:32:10,218
so the first technique revolves around
using or abusing the HTTP server side

344
00:32:10,219 --> 00:32:17,239
Cashin for this we need to find a
popular site that caches pages on the

345
00:32:17,239 --> 00:32:19,669
flower I'll explain that in a minute

346
00:32:19,669 --> 00:32:24,349
it has to have tons of pages and it has
to have pages that are not so popular

347
00:32:24,349 --> 00:32:30,769
and i think that the pro the best quote
unquote solution to this to the set of

348
00:32:30,769 --> 00:32:36,919
equations is ecommerce sites are perfect
because they are very popular they have

349
00:32:36,919 --> 00:32:41,029
tons of pages and some of the pages are
not that popular

350
00:32:41,629 --> 00:32:45,019
you know product that are not use every
day and things like that

351
00:32:45,559 --> 00:32:55,668
so what happens when a when when we have
a site that has a caching it's it's own

352
00:32:55,669 --> 00:32:58,249
a caching functionality

353
00:32:58,249 --> 00:33:03,919
let's assume for a second that the cash
is empty and when

354
00:33:03,919 --> 00:33:12,109
so in a client requests a page say a
product information page if the request

355
00:33:12,109 --> 00:33:15,168
is go through the sides cash
functionality

356
00:33:15,169 --> 00:33:21,919
the cash is empty so that the cash means
the cash forward the request to the to

357
00:33:21,919 --> 00:33:22,960
the application engine

358
00:33:22,960 --> 00:33:28,750
application and in generates by querying
the database and formatted HTML and CSS

359
00:33:28,750 --> 00:33:34,149
and whatnot formats and generates the
page for the first time and sends it

360
00:33:34,149 --> 00:33:41,168
back to the caching functionality the
cash and functionality then attaches at

361
00:33:41,169 --> 00:33:46,720
an exploration tag and exploration
header to the HTTP response and each

362
00:33:46,720 --> 00:33:52,240
each side has its own policy about
expiring those pages

363
00:33:52,240 --> 00:33:58,690
it can be it the pages may may reside in
cary in the cash four minutes for hours

364
00:33:58,690 --> 00:34:00,610
sometime for a day or two

365
00:34:00,610 --> 00:34:04,990
let's say four for the sake of example
that we were talking about catching the

366
00:34:04,990 --> 00:34:10,659
page for 60 seconds for for one full
minute then the cash would that depict

367
00:34:10,659 --> 00:34:13,119
response page would carry a date

368
00:34:13,119 --> 00:34:19,359
HTTP header depicting the current date
and an exploration had a depicting the

369
00:34:19,359 --> 00:34:25,029
current the current time plus 60 seconds
and this page would it would be returned

370
00:34:25,030 --> 00:34:30,040
to the heir to the to the center

371
00:34:30,040 --> 00:34:34,899
now if someone is in if someone else

372
00:34:34,899 --> 00:34:40,690
after 20 seconds would request the same
URL the same product page that would

373
00:34:40,690 --> 00:34:48,070
that would that would incur a page hit
at the cash eat psoriatic education

374
00:34:48,070 --> 00:34:52,089
functionality and the cash in
functionality will return the page with

375
00:34:52,089 --> 00:34:58,480
an expert with the of the current time
stem which was 20 seconds later than the

376
00:34:58,480 --> 00:35:04,510
first times them and expiration date
expression time which will be in fact 40

377
00:35:04,510 --> 00:35:12,150
seconds after the the date header so and
this and this can be used by the

378
00:35:12,150 --> 00:35:19,049
by this by the second entity to detect
that the page is his return is received

379
00:35:19,049 --> 00:35:26,910
from the cash as opposed to be generated
a ass and serves as a response to day to

380
00:35:26,910 --> 00:35:30,598
the entities query and then

381
00:35:30,599 --> 00:35:36,240
and so we can use this to implement the
perfect acceleration technique

382
00:35:37,890 --> 00:35:41,910
so the server and received the sender
and receiver grow in the URL in a time

383
00:35:41,910 --> 00:35:47,069
and to send 0 the center simply does
nothing at the designated time and to

384
00:35:47,069 --> 00:35:53,339
send one the center's an HBO quest to
that page and say 10 seconds after the

385
00:35:53,339 --> 00:35:55,288
designated time the receiver

386
00:35:55,289 --> 00:35:59,700
it makes the same HTTP request to your
and observe whether the page was cash

387
00:35:59,700 --> 00:36:04,950
recently which means which means that it
was one or it is was cash right now

388
00:36:04,950 --> 00:36:15,450
which means the b20 we tested this
concept on about a dozen popular sites

389
00:36:15,450 --> 00:36:23,609
three of them were totally supportive of
this technique and we're talking about

390
00:36:23,609 --> 00:36:31,589
here . com a easyjet that comes at a UK
travel site and zaps the oil that's as

391
00:36:31,589 --> 00:36:40,770
early as it is probably the largest
e-commerce citing Israel while this

392
00:36:40,770 --> 00:36:46,259
technique up is is of course quite
effective

393
00:36:46,260 --> 00:36:51,900
we need to keep in mind several caveats
first is that sites do change over time

394
00:36:51,900 --> 00:36:54,029
we bumped into this

395
00:36:54,029 --> 00:36:59,310
so ideally one should have also a
downlink from the

396
00:36:59,310 --> 00:37:05,490
s from the receiver from the external
party to the party inside the

397
00:37:05,490 --> 00:37:06,450
organization

398
00:37:06,450 --> 00:37:12,810
synchronizing which URLs to be used the
time synchronization as i mentioned

399
00:37:12,810 --> 00:37:13,290
earlier

400
00:37:13,290 --> 00:37:16,770
ideally it should be second resolution
of course the better the sink is the

401
00:37:16,770 --> 00:37:21,509
less the receiver needs to wait before
reading and this is good because knows

402
00:37:21,510 --> 00:37:25,380
might be interest might be introduced if
if you're waiting too long if you wait

403
00:37:25,380 --> 00:37:27,060
half an hour

404
00:37:27,060 --> 00:37:32,580
someone may make a hit on that same URL
and and thereby ruining the whole

405
00:37:32,580 --> 00:37:39,720
channel we need we need to conduct
further research in order to measure and

406
00:37:39,720 --> 00:37:42,990
an advisor on under the threshold it
also involved

407
00:37:42,990 --> 00:37:46,589
HTTP round trip so it needs to be
calculated carefully

408
00:37:46,590 --> 00:37:50,490
on the other hand as we'll see in the
next slide

409
00:37:51,210 --> 00:37:54,750
the longer the time between the center
checking in the receiver Paul in the

410
00:37:54,750 --> 00:38:01,050
most secure the skin is against some
attacks and we'll see that so not

411
00:38:01,050 --> 00:38:04,140
innocent and the slide on immediately
thereafter

412
00:38:04,680 --> 00:38:11,910
additionally what we suggest is instead
of sending a single physical quote

413
00:38:11,910 --> 00:38:17,339
unquote bit to represent a logical bit
we we propose to send two consecutive

414
00:38:17,340 --> 00:38:22,710
bits to contact consecutive physical
bits to represent a single logical bit

415
00:38:22,710 --> 00:38:29,940
so it's 0 will be physical bits 0 and 1
and beat one will be bits one would we

416
00:38:29,940 --> 00:38:36,270
physical bits 1 followed by 0 this can
be used to avoid the pitfalls when man

417
00:38:36,270 --> 00:38:38,000
at the network and

418
00:38:38,000 --> 00:38:43,130
as an outage orders some failure and one
of the network devices and things like

419
00:38:43,130 --> 00:38:43,940
that

420
00:38:43,940 --> 00:38:53,450
also it is proposed that the center
actually goals to for the center to

421
00:38:53,450 --> 00:38:57,830
actually go through a complete browsing
session involving the URL not just

422
00:38:57,830 --> 00:39:03,140
hitting the URL out of nowhere because
that may raise this patient and of

423
00:39:03,140 --> 00:39:10,670
course it is highly advised for the for
the center to immerse the cover channel

424
00:39:10,670 --> 00:39:17,780
traffic with genuine web traffic going
to New third going to go shopping and

425
00:39:17,780 --> 00:39:23,600
visiting a gmail and query google and so
forth

426
00:39:24,980 --> 00:39:31,100
finally it is the day there is put the
potential problem with multiple cash

427
00:39:31,100 --> 00:39:35,240
service though we did not encounter it
at least in theory that may be a problem

428
00:39:35,240 --> 00:39:42,080
because we may be cashed in one server
to send me for sketching in one case

429
00:39:42,080 --> 00:39:46,460
server and the receiver make Paul
through a different cache server and

430
00:39:46,460 --> 00:39:47,120
with that

431
00:39:47,120 --> 00:39:53,960
thus the channel will fail and of course
if there are

432
00:39:53,960 --> 00:39:59,540
geoip based routing or distribution of
of so the cache server that may also

433
00:39:59,540 --> 00:40:06,080
failed the the channel though we did try
at least one of the servers with IP

434
00:40:06,080 --> 00:40:09,560
address is coming from different
countries and we did not encounter any

435
00:40:09,560 --> 00:40:12,710
problem but at least in theory it may
cause problems

436
00:40:17,349 --> 00:40:25,630
and would would try to come up with
attacks against our this August

437
00:40:25,630 --> 00:40:27,999
expectoration technique

438
00:40:27,999 --> 00:40:33,399
here's one such attack and I need to the
has a spoiler

439
00:40:33,400 --> 00:40:38,979
we really think that this attack is
impractical but the idea goes is forming

440
00:40:38,979 --> 00:40:45,729
we just set every day . enterprise it is
intercept every user every request it

441
00:40:45,729 --> 00:40:52,058
holds and delays every user every
request by 11 seconds if you recall we

442
00:40:52,059 --> 00:40:57,190
prescribed 10 seconds delay between the
sender is sending the request of the

443
00:40:57,190 --> 00:41:05,109
receiver checking for for a bit so we
delay the enterprise now delays each and

444
00:41:05,109 --> 00:41:10,150
every HTTP request by 11 seconds and
when

445
00:41:10,690 --> 00:41:17,170
and then after 11 second it forward the
request to the web server and in the

446
00:41:17,170 --> 00:41:21,999
responsive to observe whether the page
was cashed do two receivers hit in the

447
00:41:21,999 --> 00:41:27,729
last 11 seconds actually the last one
second probably so it sells both as

448
00:41:27,729 --> 00:41:29,828
detection because this can be

449
00:41:29,829 --> 00:41:36,489
this may raise suspicion if by delaying
their you may request by 11 seconds you

450
00:41:36,489 --> 00:41:41,739
get a response indicating that the cage
was cashed at the at the last second

451
00:41:41,739 --> 00:41:45,219
it may be exactly part of this skin

452
00:41:46,119 --> 00:41:50,349
it's also disruption because from the
receivers point of view

453
00:41:50,349 --> 00:41:54,549
it will keep getting zero bits because
they were there there was never hit it

454
00:41:54,549 --> 00:41:57,970
before it into 10 seconds before it
called the

455
00:41:57,970 --> 00:42:05,950
and the website so this at least the
theoretic this is this attack works in

456
00:42:05,950 --> 00:42:09,848
theory in practice it's it's horrible

457
00:42:09,849 --> 00:42:15,310
it it it it it incurs horrible user
experience that I think about all your

458
00:42:15,310 --> 00:42:21,160
HP and https request getting delayed by
11 seconds and probably are going to

459
00:42:21,160 --> 00:42:28,060
link to do a little in John you're a
righty or security department and also

460
00:42:28,060 --> 00:42:31,570
what is positive mean what does it mean
that we have

461
00:42:31,570 --> 00:42:36,910
after 11 seconds we have work what the
response indicates that the that the

462
00:42:36,910 --> 00:42:39,009
page was cashed in the last second

463
00:42:39,010 --> 00:42:46,630
it's yeah maybe suspicious but maybe not
maybe that's what happened if it's very

464
00:42:46,630 --> 00:42:52,900
difficult to tell those sides so and
that's problem that that's more or less

465
00:42:52,900 --> 00:42:55,599
the best attacking we we could come up
with

466
00:42:55,599 --> 00:43:02,290
not very convincing so we do think that
this qualifies for perfect situation

467
00:43:02,290 --> 00:43:11,500
technique going through the Ten
Commandments

468
00:43:12,849 --> 00:43:16,750
how do you fare against them is it
secure and scalable

469
00:43:17,530 --> 00:43:22,630
yes we can assign a unique URL there for
each beaten will in fact we'll see

470
00:43:22,630 --> 00:43:27,339
exactly that in the demo and knowing the
method and even previous URLs doesn't

471
00:43:27,339 --> 00:43:34,240
help that they get the security of mean
for the security team at the enterprise

472
00:43:34,240 --> 00:43:39,368
to figure out what is going to be the
next URL or whether there is a even

473
00:43:39,369 --> 00:43:42,790
exfiltration going on or not

474
00:43:42,790 --> 00:43:51,099
number two was using webmoney particles
absolutely HTTP HTTPS check number three

475
00:43:51,099 --> 00:43:54,350
having no doubt we're using also station
having

476
00:43:54,350 --> 00:44:00,290
doubts traffic is one hundred percent
kosher you're going over HTTP or HTTPS

477
00:44:00,290 --> 00:44:07,100
to your favorite ecommerce site you look
at pages you look for lamps or lineman

478
00:44:07,100 --> 00:44:14,390
or pants or shoes and who can no one can
really learn in his right mind can say

479
00:44:14,390 --> 00:44:17,270
that this is suspicious

480
00:44:17,270 --> 00:44:27,440
obviously you do need to choose the site
based on the profile of this center so

481
00:44:27,440 --> 00:44:29,930
i'm probably not

482
00:44:29,930 --> 00:44:40,640
attitude for me it's not a good fit say
to go to another site for not wear guns

483
00:44:40,640 --> 00:44:42,319
or something like that to her

484
00:44:42,320 --> 00:44:51,350
so it has to be tailored to the guy to
the Centers a profile so but I beyond

485
00:44:51,350 --> 00:44:51,830
that

486
00:44:51,830 --> 00:44:58,940
this is this is it definitely and know
that the not there's no room for

487
00:44:58,940 --> 00:45:05,180
suspicion perfect network monitoring it
to keep in mind that all the traffic

488
00:45:05,180 --> 00:45:12,290
originates from the browser and goes to
a very very popular website

489
00:45:12,290 --> 00:45:17,300
so again there's no problem from the
reputation . of view we do not have any

490
00:45:17,300 --> 00:45:20,780
problem with TLS wrestle termination
because we don't really hide any data

491
00:45:20,780 --> 00:45:27,320
being under necessary to your list
number 6 7 & 8 are just

492
00:45:27,869 --> 00:45:33,359
items that are no rules that disk that
said that there is no limitation on the

493
00:45:33,359 --> 00:45:37,558
receiving side and x think is in able to
use is allowed

494
00:45:38,339 --> 00:45:43,109
number nine can eject can it be
generated manually absolutely and number

495
00:45:43,109 --> 00:45:47,640
ten active disruption the attack we
found is impractical so think that it

496
00:45:47,640 --> 00:45:55,288
can withstand a destruction and with
that I hand it over to music

497
00:45:55,829 --> 00:46:02,759
excellent so as I'm it was walking
through the perfect solution technique

498
00:46:02,759 --> 00:46:07,410
we also developed a tool that basically
demonstrate the capability and we call

499
00:46:07,410 --> 00:46:11,308
that out of 2 - doc and i'm going to
show you a demo of it

500
00:46:19,060 --> 00:46:22,060
yeah

501
00:46:25,319 --> 00:46:26,850
ok

502
00:46:26,850 --> 00:46:30,330
so first of all let's understand how
this Tool Works and what exactly we are

503
00:46:30,330 --> 00:46:34,259
going to see are basically as we
described

504
00:46:34,260 --> 00:46:38,190
we are searching for website we found a
bunch of websites and this projector

505
00:46:38,190 --> 00:46:43,950
example we found stock overflow and
basically we're going to pass a beat

506
00:46:43,950 --> 00:46:48,540
one bite using the cash to connect it to
me just describe what you can see here

507
00:46:48,540 --> 00:46:54,750
is a very simple things we filed we have
compiled basically has a URL that we're

508
00:46:54,750 --> 00:47:01,050
going to use although our technique can
work multiple time on the same URL as a

509
00:47:01,050 --> 00:47:05,340
mention in the Ten Commandments pools is
not a good thing that will do show a

510
00:47:05,340 --> 00:47:07,860
warning for third party

511
00:47:07,860 --> 00:47:11,280
we picked eight different URLs in each
one of them

512
00:47:11,850 --> 00:47:16,319
we choose two elements first will be the
delta which is the expiration date

513
00:47:16,950 --> 00:47:21,509
meaning what did the cycle that we need
to touch that specific URL in order to

514
00:47:21,510 --> 00:47:26,820
mark a bit and then we need to answer
the actual bit that would like to mark

515
00:47:26,820 --> 00:47:27,960
it can be there

516
00:47:27,960 --> 00:47:33,240
obviously one or zero arm as you can see
we going two turns from the transmit the

517
00:47:33,240 --> 00:47:41,580
following bike is going to be 1 11 14 x
13 x 0 and then have the less beat

518
00:47:41,580 --> 00:47:43,500
becoming one

519
00:47:43,500 --> 00:47:48,390
now I'm because the technique does
require sometimes thinking no to be

520
00:47:48,390 --> 00:47:52,950
mindful of the time of presentation we
actually have a demo that we record that

521
00:47:52,950 --> 00:47:56,339
basically shows this are in a much
faster way

522
00:47:56,910 --> 00:48:00,359
so I'm going to our show you the demo
and walk you through each of the

523
00:48:00,360 --> 00:48:03,540
different sides and how it look like

524
00:48:03,540 --> 00:48:06,840
so right now we're going to arm

525
00:48:06,840 --> 00:48:12,150
we're going to use this are this will be
the center when they will try to

526
00:48:12,150 --> 00:48:20,460
communicate the information as you can
see what happens right now with the tool

527
00:48:20,460 --> 00:48:26,850
opens at the amount of threads one
thread Perry URL in this case it's eight

528
00:48:26,850 --> 00:48:32,790
different arm Europe l eight different
threads and basically for each thread is

529
00:48:32,790 --> 00:48:37,440
going to depending on the bt they're
going to access it if it's a 1-bit or

530
00:48:37,440 --> 00:48:38,930
not existing it's if it

531
00:48:38,930 --> 00:48:43,190
zero bait the tool are in the beginning
as you could have seen the tools

532
00:48:43,190 --> 00:48:47,960
basically doing the sink because in a
way you were creating more than like

533
00:48:47,960 --> 00:48:50,030
kind of machine

534
00:48:50,030 --> 00:48:53,720
both the client and the server and it
needs to be in the perfect thing in

535
00:48:53,720 --> 00:48:58,520
order to accessing the urs understand
whether somebody access them before so

536
00:48:58,520 --> 00:49:03,380
this was our speeding the process but
usually it will sink to the top of the

537
00:49:03,380 --> 00:49:07,819
minute of the sender and the receiver
and then they will operate from there

538
00:49:07,819 --> 00:49:12,740
so as you can see the writer end up
reporting that the result that he thinks

539
00:49:12,740 --> 00:49:14,270
that he wrote is again

540
00:49:14,270 --> 00:49:19,040
it's for time 13 x 0 another bit of of
one

541
00:49:19,040 --> 00:49:23,599
now let's go over and look at how the
receiver and looks like again please

542
00:49:23,599 --> 00:49:26,960
look into consideration that the
receiver can be just any machine

543
00:49:26,960 --> 00:49:31,130
anywhere in the word there is nothing
actually prevented from running on

544
00:49:31,130 --> 00:49:35,960
anything that is is not physically the
same thing again running the receiver

545
00:49:35,960 --> 00:49:42,170
side the software again will try to sync
the top of the minute and then sleeping

546
00:49:42,170 --> 00:49:46,640
to the next cycle the cycle 60 minutes
as you remember the receiver takes

547
00:49:46,640 --> 00:49:51,319
another 10 seconds delay in order to
ensure that the writer on the cycle of

548
00:49:51,319 --> 00:49:56,900
the 60-minute finished accessing the
proper URLs again xing each individual

549
00:49:56,900 --> 00:50:02,869
URLs were measuring the delta which is
basically what the expiration that was

550
00:50:02,869 --> 00:50:07,880
reported back to us from the web server
and gathering all the different results

551
00:50:07,880 --> 00:50:12,349
you can see there is 60 results mean
that the one access that URL for the

552
00:50:12,349 --> 00:50:13,940
previous 60 minutes

553
00:50:13,940 --> 00:50:18,740
meaning that it's a perfect 0 and 1
times that we arrived to the URL after

554
00:50:18,740 --> 00:50:24,049
the writer already visited you consider
the Delta has been changed to be 50 and

555
00:50:24,049 --> 00:50:29,569
that way we can tell that somebody
visited that URL just about 15 seconds

556
00:50:29,569 --> 00:50:34,579
ago and again collecting back the
information you can see it's the same

557
00:50:34,579 --> 00:50:37,579
result

558
00:50:38,299 --> 00:50:43,759
back to you

559
00:50:54,589 --> 00:51:01,519
thank you tick and you can see as you
can see this Court is available anytime

560
00:51:01,519 --> 00:51:14,149
i'm going to talk about a few more
techniques that to devised one's the one

561
00:51:14,150 --> 00:51:20,660
rules of our around with counters but
this time we are counting a specific

562
00:51:20,660 --> 00:51:26,180
page or resource things about think
YouTube movies and stack overflow topics

563
00:51:26,180 --> 00:51:27,769
and so forth

564
00:51:27,769 --> 00:51:37,999
the beauty of of those resources is that
in order to observe the DVD counter for

565
00:51:37,999 --> 00:51:38,569
them

566
00:51:38,569 --> 00:51:41,930
you do not really need to visit the URL
itself

567
00:51:41,930 --> 00:51:49,460
it typically the counter resides on the
page that references the the resource so

568
00:51:49,460 --> 00:51:56,299
that and and an observer can observe the
web count without changing the counter

569
00:51:56,299 --> 00:52:01,759
so what we do here is the sender and the
receiver agree on a resource

570
00:52:01,759 --> 00:52:06,499
ideally not too popular one and the time
and their Center

571
00:52:06,499 --> 00:52:11,058
just download the resource or not at the
designated time and the receiver needs

572
00:52:11,059 --> 00:52:15,920
to pull the the counter slightly before
the designated time and slightly after

573
00:52:15,920 --> 00:52:21,349
the designated time in order to figure
out if i hit occurred or not and thereby

574
00:52:22,090 --> 00:52:29,920
the decoding the beat 1 or 0
respectively that the two problems of

575
00:52:29,920 --> 00:52:35,680
this approach our that some social sites
like YouTube may get blocked by some in

576
00:52:35,680 --> 00:52:37,779
some enterprises

577
00:52:37,780 --> 00:52:42,820
additionally there is a need to build a
good story around the accessing those

578
00:52:42,820 --> 00:52:48,640
resources one can do one can come up
with a good story but it's a slightly

579
00:52:48,640 --> 00:52:51,640
more difficult than the previous example

580
00:52:52,720 --> 00:53:00,609
and finally there is the online status
for four checks is you know where based

581
00:53:00,610 --> 00:53:05,830
the chat services like Facebook Google
Talk yahoo chat and skype typically have

582
00:53:05,830 --> 00:53:08,740
the online status for friends

583
00:53:08,740 --> 00:53:14,049
so each party needs to open an account
of the with one of those chat services

584
00:53:14,050 --> 00:53:19,600
and then they befriend each other and
the center is either online marking the

585
00:53:19,600 --> 00:53:20,049
bit

586
00:53:20,050 --> 00:53:24,700
one or offline at at the designated time
and the receiver simply needs to be

587
00:53:24,700 --> 00:53:28,960
logged in to it to his or her own
account in order to see the status of

588
00:53:28,960 --> 00:53:35,680
the center account problems that are
that the social sites again may be

589
00:53:35,680 --> 00:53:38,230
blocked and this is a bit more

590
00:53:38,230 --> 00:53:43,090
this is a bit more tricky the initial
befriending maybe question

591
00:53:43,090 --> 00:53:49,030
so if someone looks at this traffic and
says hey mr. Walker for difference

592
00:53:49,030 --> 00:53:49,810
industry

593
00:53:49,810 --> 00:53:58,779
why are you friends with XY said at some
country or XY said it large that needs

594
00:53:58,780 --> 00:54:02,590
some explanation and explanations are
exactly the kind of things that we want

595
00:54:02,590 --> 00:54:09,870
to avoid for perfect acceleration so
this is somewhat somewhat less

596
00:54:09,870 --> 00:54:21,240
less powerful x a perfect acceleration
but still an interesting direction so to

597
00:54:21,240 --> 00:54:27,569
conclude we believe that we demonstrated
to you that perfect situation techniques

598
00:54:27,570 --> 00:54:36,000
exist as a byproduct of our quest to
find perfect extraction techniques we

599
00:54:36,000 --> 00:54:42,120
came up with the 10 commandments which
can be used as a benchmark to device

600
00:54:42,120 --> 00:54:46,920
event not to to evaluate a candidate
perfect acceleration techniques

601
00:54:49,710 --> 00:54:55,290
so far we've only been able to come up
with low bandwidth protocols for perfect

602
00:54:55,290 --> 00:55:01,350
situation although we do think that such
particles are practical and useful in

603
00:55:01,350 --> 00:55:09,000
case of the strategic situation
scenarios and we present two challenges

604
00:55:09,000 --> 00:55:17,010
one is to find higher bed with perfect
situation particles and two to find ways

605
00:55:17,010 --> 00:55:21,810
to defeat the existing and perfect
situation particles that were proposed

606
00:55:21,810 --> 00:55:32,190
and while doing so perhaps adding more
commandments and more benchmarks and

607
00:55:32,190 --> 00:55:36,360
with that if you have questions would be
happy to answer

608
00:55:40,140 --> 00:55:43,140
thank you any questions

609
00:55:47,210 --> 00:55:50,210
no there

610
00:55:55,520 --> 00:55:59,030
thank you for your talk my question was
what is the motivation behind this is

611
00:55:59,030 --> 00:56:00,350
the type of research

612
00:56:00,350 --> 00:56:06,259
why would you why would you want to do
to notice and and do this because it

613
00:56:06,260 --> 00:56:09,380
seems to me you get you give the bad
guys

614
00:56:09,380 --> 00:56:17,540
tools and I think that that they are the
only way to predict the future is to try

615
00:56:17,540 --> 00:56:18,590
to invent it

616
00:56:18,590 --> 00:56:23,150
I mean this technique we came up with
this idea and next thing we do is

617
00:56:23,150 --> 00:56:27,440
publish its of people then there's and
others can understand it and learn how

618
00:56:27,440 --> 00:56:32,150
to mitigate that and thinking not
exposing this information that's not

619
00:56:32,150 --> 00:56:37,130
guaranteed the bad guy on come up with
this idea and then nobody will know it

620
00:56:37,670 --> 00:56:40,700
I think that by following this clutter
the idea and the tall

621
00:56:40,700 --> 00:56:44,359
we give her about the opportunity to
learn it analyzed it and meet the gate

622
00:56:44,360 --> 00:56:46,970
from ok thank you thank you

623
00:56:46,970 --> 00:56:50,930
any other questions

624
00:56:54,170 --> 00:56:57,170
in the back to make fun

625
00:57:04,369 --> 00:57:07,910
you know how did you settle on the web
protocols

626
00:57:08,630 --> 00:57:16,279
I really didn't understand why would
choose those so is a question why we

627
00:57:16,279 --> 00:57:18,470
restricted ourselves to web protocols

628
00:57:18,470 --> 00:57:23,509
yes fair enough because let's say with
that week

629
00:57:23,509 --> 00:57:30,289
let's look at ICP ok like picking away
data obviously it's a way to exploit

630
00:57:30,289 --> 00:57:35,539
that assuming ICP and I simply traffic
out of the organization is allowed

631
00:57:35,539 --> 00:57:42,920
fair enough but if we think for a moment
about the typical the average Joe user

632
00:57:42,920 --> 00:57:50,359
of an enterprise organization but why
would average Joe use ping at all the

633
00:57:50,359 --> 00:57:51,288
first place

634
00:57:51,289 --> 00:57:56,299
I mean that's that's the question maybe
you know maybe he has a good good reason

635
00:57:56,299 --> 00:58:02,599
why why why to do so at a certain day at
a certain hour but not on an ongoing

636
00:58:02,599 --> 00:58:05,809
basis and definitely it raises questions

637
00:58:06,890 --> 00:58:12,558
so the only way to avoid questions and
to avoid suspicion is to use regular web

638
00:58:12,559 --> 00:58:15,559
protocols

639
00:58:17,680 --> 00:58:20,710
thank you another question in the back
there

640
00:58:20,710 --> 00:58:23,710
the last question

641
00:58:28,910 --> 00:58:35,960
if i understand correctly then basically
you assume that the center needs to send

642
00:58:35,960 --> 00:58:42,080
the information while still in the
enterprise organization

643
00:58:42,080 --> 00:58:49,009
so basically this is only valid for very
time sensitive time specific information

644
00:58:49,010 --> 00:58:52,280
correct either either that

645
00:58:52,280 --> 00:58:58,460
yes absolutely and or its information
that cannot that sometimes information

646
00:58:58,460 --> 00:59:02,840
cannot leave the enterprise otherwise
think about a situation where we do not

647
00:59:02,840 --> 00:59:05,450
have an agent a flesh-and-blood agent

648
00:59:05,450 --> 00:59:11,299
let's say we have an hour or about
inciting for inside the enterprise that

649
00:59:11,300 --> 00:59:14,750
needs to communicate to the outside
world maybe it's on the desktop

650
00:59:14,750 --> 00:59:18,140
maybe it's a laptop that can't leave the
premises of the enterprise

651
00:59:18,740 --> 00:59:24,560
so yes thank you for the very
interesting presentation

