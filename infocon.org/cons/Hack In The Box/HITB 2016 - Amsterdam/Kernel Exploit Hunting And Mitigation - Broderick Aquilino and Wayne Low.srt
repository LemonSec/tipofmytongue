1
00:00:14,580 --> 00:00:17,610
welcome guys

2
00:00:17,610 --> 00:00:20,280
so up welcome

3
00:00:20,280 --> 00:00:26,400
up this topic is Title IX by some
hunting and mining the reason why we

4
00:00:26,400 --> 00:00:29,729
chose this topic is because in this area
of cyber warfare

5
00:00:30,270 --> 00:00:34,470
cybercriminals always use multi-level
attacks to penetrate on multi that

6
00:00:34,470 --> 00:00:40,170
you're protected network infrastructures
we often see a PT attackers many plates

7
00:00:40,170 --> 00:00:48,989
your day windows , pretty are and so
sometimes it might be surprising if we

8
00:00:48,989 --> 00:00:53,970
do not see this kind of opportunity ,
pretty use in this kind of at our apt

9
00:00:53,970 --> 00:00:55,680
attacked

10
00:00:55,680 --> 00:01:00,930
based on our our analysis of past
everything attacked we realized that

11
00:01:00,930 --> 00:01:07,050
it's possible to identify the
characteristics of this so they can no

12
00:01:07,050 --> 00:01:09,720
longer produce inspire the apt attackers

13
00:01:09,720 --> 00:01:17,370
so in this topic we will focus on how to
proactively discover and explore samples

14
00:01:17,370 --> 00:01:19,620
or the potential stalker

15
00:01:19,620 --> 00:01:26,369
so they can exploit in addition to that
I we also discuss some of the average

16
00:01:26,369 --> 00:01:31,380
are evolutions of can exploit that could
defeat the hostage intrusion prevention

17
00:01:31,380 --> 00:01:39,509
system host intrusion prevention system
used by some of those are software

18
00:01:39,509 --> 00:01:46,200
security windows so a quick introduction
about yourself

19
00:01:46,200 --> 00:01:52,859
my name is green i'm currently working
as a security researcher at 40 knots in

20
00:01:52,859 --> 00:01:55,020
the last couple of years before joining
for the nets

21
00:01:55,020 --> 00:01:59,729
I used to perform in that now research
particularly studying and he keeps

22
00:01:59,729 --> 00:02:04,859
technique used by malware against our
behavior detection system and then

23
00:02:04,859 --> 00:02:11,910
providing color measure for those
discover panicked but currently i'm

24
00:02:11,910 --> 00:02:18,090
mainly focus on discovering zero-day
exploit assemble and also performed on

25
00:02:18,090 --> 00:02:21,210
every research on microsoft office and
windows corner

26
00:02:21,210 --> 00:02:26,520
so I'm as such I'm extremely interested
in anything related to exploit and one

27
00:02:26,520 --> 00:02:30,599
at 3d research so feel free to contact
me if you have anything related to this

28
00:02:30,599 --> 00:02:33,149
topic that you like the exchange ideas
with me

29
00:02:33,150 --> 00:02:38,400
and this is my copies antibiotic and
he's currently working as a sec senior

30
00:02:38,400 --> 00:02:47,400
analyst at circle apt and we used to
work together back in Africa lap so

31
00:02:47,400 --> 00:02:51,269
let's go to a large end up with this our
talk is great

32
00:02:51,269 --> 00:02:57,390
this top divided in two parts the first
part is about kind of expert mining now

33
00:02:57,390 --> 00:03:02,939
in the second part but we'll discuss
some of the elevations of privilege

34
00:03:02,939 --> 00:03:11,879
exploit anomalies that we obsess you spy
a so they can exploit that could be that

35
00:03:11,879 --> 00:03:16,590
could be used or manipulated by us to
identify the assistance of can exploit

36
00:03:16,590 --> 00:03:24,299
you first start by giving your contacts
of what is elevation of privilege and

37
00:03:24,299 --> 00:03:29,400
user account control which is our
security feature into this by window we

38
00:03:29,400 --> 00:03:32,129
started a book

39
00:03:32,129 --> 00:03:41,370
typically this USC is something our this
USC is a security feature that limits us

40
00:03:41,370 --> 00:03:46,109
application software to standard user
privileges and to Emily straighter

41
00:03:46,109 --> 00:03:48,510
authorizes the elevations

42
00:03:48,510 --> 00:03:53,310
for example are you will always see the
window seat a lockbox prompt that

43
00:03:53,310 --> 00:03:57,419
require the user interactions in a way

44
00:03:57,419 --> 00:04:02,879
GOP and USC has a common characteristic
which is always abuse by malware authors

45
00:04:02,879 --> 00:04:08,970
so we will briefly discuss differences
between them and which one is more for

46
00:04:08,970 --> 00:04:11,970
reporting others

47
00:04:14,650 --> 00:04:20,709
discovering still they could've won that
BD true fuzzing black box white box that

48
00:04:20,709 --> 00:04:24,490
the analysis and then developing an
expert really is a time-consuming

49
00:04:24,490 --> 00:04:30,910
process so it is not surprised to see my
orders at that the open sauce can

50
00:04:30,910 --> 00:04:35,289
exploit especially publish especially
those published by security researchers

51
00:04:35,289 --> 00:04:40,719
based on the results of our current
expert mining and the pathology

52
00:04:40,720 --> 00:04:46,930
you realize that most of the current
exploit use is leveraging the classic

53
00:04:46,930 --> 00:04:53,500
right what we're primitive for example
the CD 2013 360 published by thomas on

54
00:04:53,500 --> 00:04:54,220
Andy

55
00:04:54,220 --> 00:04:59,080
who's been working as a security
researcher at google project zero this

56
00:04:59,080 --> 00:05:05,169
vulnerability is still what we are
actively used by now we're all those in

57
00:05:05,169 --> 00:05:07,510
terms of elevating the malware process
privilege

58
00:05:07,510 --> 00:05:14,740
so it is necessary to understand what is
right what their primitive and put on

59
00:05:14,740 --> 00:05:21,130
and then we could make us how can we
make use of this rather primitive 214 ,

60
00:05:21,130 --> 00:05:27,010
xbox ember the next one is one of the
highlight of this top of in which people

61
00:05:27,010 --> 00:05:30,280
share our methodology for current
experts and remaining

62
00:05:31,479 --> 00:05:37,510
last but not least are we also discuss
some of the case studies of the column

63
00:05:37,510 --> 00:05:42,610
our families that leverage GOP exploit
that this case study

64
00:05:42,610 --> 00:05:47,740
I will only focus on a flight decks and
despite while you can get the tedious

65
00:05:47,740 --> 00:05:50,650
for the rest of the amount of family
from the white paper

66
00:05:50,650 --> 00:05:57,789
so in this light you may have noticed
that up

67
00:05:57,789 --> 00:06:01,870
GOP seems to have more drawback compared
to user account control

68
00:06:02,620 --> 00:06:07,930
there is a saying the great power comes
with great responsibility d this LP

69
00:06:07,930 --> 00:06:13,870
exploit the expert rider has no
limitation at all because he is able to

70
00:06:13,870 --> 00:06:16,270
achieve arbitrary clinical executions

71
00:06:16,270 --> 00:06:21,609
however there is no guarantee for the
European exploit that the spotlight the

72
00:06:21,610 --> 00:06:25,539
point is hundred percent reliable and
stable before single piece of

73
00:06:25,539 --> 00:06:26,440
instability

74
00:06:26,440 --> 00:06:31,690
it could easily cost system crashes like
the in famous blue screen of that even

75
00:06:31,690 --> 00:06:35,650
though it is a golden rule of thumb for
export writer to write a reliable

76
00:06:35,650 --> 00:06:40,270
exploit in reality it is very children
is very challenging to achieve that

77
00:06:40,270 --> 00:06:44,740
that's the reason why we have been
observing the transition from GOP

78
00:06:44,740 --> 00:06:50,020
exploit for us to buy plastic simply
because the u.s. you pass technique is

79
00:06:50,020 --> 00:06:55,510
purely implemented in using the code so
at least it wouldn't cost them precious

80
00:06:55,510 --> 00:06:58,510
in the event of program arrow

81
00:07:05,270 --> 00:07:12,020
however there is an easy condemnation
for all the USA by plastic basically

82
00:07:12,020 --> 00:07:18,859
what you can do is you can go to the
user account contrast setting and adjust

83
00:07:18,860 --> 00:07:24,440
the setting to always notify after that
regardless of any USB past and that you

84
00:07:24,440 --> 00:07:30,469
use or the melody . the user will always
receive these windows us if i pass our

85
00:07:30,470 --> 00:07:32,780
review this us develop box from that

86
00:07:32,780 --> 00:07:37,010
so at least it wasn't are at least it
gives the user a chance to deny the

87
00:07:37,010 --> 00:07:43,849
operation and stopping now where
unfortunately it is something is not set

88
00:07:43,850 --> 00:07:48,920
by default on windows and it is very
unlikely for the user to adjust that

89
00:07:48,920 --> 00:07:53,780
this something because um I think that
it might be too annoying to get too many

90
00:07:53,780 --> 00:07:54,919
splinters prom

91
00:07:54,920 --> 00:07:58,310
whenever the user trying to execute some
programs that require any straighter

92
00:07:58,310 --> 00:07:59,150
privilege

93
00:07:59,150 --> 00:08:05,659
however be based on my own experience it
is not as bad as you expect that because

94
00:08:05,660 --> 00:08:09,830
Microsoft has done a great job in making
this security feature less invasive

95
00:08:10,580 --> 00:08:15,080
so it's only recommended to enable the
security feature immediately after this

96
00:08:15,080 --> 00:08:23,870
top having say that are the UPA exploits
provide food system privilege

97
00:08:23,870 --> 00:08:28,400
it means the expert process will be
running as the system integrated our

98
00:08:28,400 --> 00:08:32,600
welfare the PSC plastic

99
00:08:32,600 --> 00:08:36,740
it provides an administrator privilege
which is a high integrated level

100
00:08:36,740 --> 00:08:44,870
so in a nutshell we can see that GOP
export is no public as compared to USC

101
00:08:44,870 --> 00:08:51,050
by plastic that's also the reason why
are we have been observing a lot of our

102
00:08:51,050 --> 00:08:56,990
families at that thing the European
exploit particularly those open source

103
00:08:56,990 --> 00:09:03,059
one beep reliable successfully but

104
00:09:03,059 --> 00:09:06,509
in fact to improve my best reliability

105
00:09:06,509 --> 00:09:11,939
now we are others started to at that
office this elevation method at the same

106
00:09:11,939 --> 00:09:16,228
time depending on the current user
permissions

107
00:09:16,229 --> 00:09:21,299
there's a great based on this in
performance shop if the current user is

108
00:09:21,299 --> 00:09:29,879
not running as an administrator account
the GOP exploit beauty . first otherwise

109
00:09:29,879 --> 00:09:36,179
the inequality level of the normal
process with diamond in state a low or

110
00:09:36,179 --> 00:09:41,579
medium integrating our is a typical
indicating lever used by our standard

111
00:09:41,579 --> 00:09:48,179
Windows applications are that indicates
it does not have sufficient privileges

112
00:09:48,179 --> 00:09:52,829
when they were the program trying to
access to some of the restrictor

113
00:09:52,829 --> 00:10:02,968
resources if that is the case the USA by
passing appt . state in the event of

114
00:10:02,969 --> 00:10:09,659
unsuccessful us to pass an appt . the
European expert will be tricker in state

115
00:10:09,659 --> 00:10:12,869
before the moon papers is executed

116
00:10:12,869 --> 00:10:21,659
keep in mind that this whole bunches .
by the arrow you only be taken if the

117
00:10:21,659 --> 00:10:27,149
current user is administrator in other
words the USC pipe aesthetic is

118
00:10:27,149 --> 00:10:30,239
applicable to demonstrate a colony

119
00:10:30,239 --> 00:10:34,319
so that's the reason why the mail orders
at that perfect this elevation methods

120
00:10:34,319 --> 00:10:38,128
at the same time to improve its
reliability and success rate of

121
00:10:38,129 --> 00:10:40,499
elevating the mallet process privilege

122
00:10:40,499 --> 00:10:47,909
so what is right about their primitive I
place some of you guys might already

123
00:10:47,909 --> 00:10:54,089
know what is right by primitive because
we we want to do for contacts to other

124
00:10:54,089 --> 00:10:58,259
photos to understand the current expert
mining methodology that we are going to

125
00:10:58,259 --> 00:10:59,459
introduce later

126
00:10:59,459 --> 00:11:03,868
it is necessary to discuss a bit but is
rather primitive so i would go through

127
00:11:03,869 --> 00:11:04,979
this very quickly

128
00:11:04,979 --> 00:11:10,979
basically whatever primitive is the most
commonly used vector it is a simple and

129
00:11:10,979 --> 00:11:13,990
most straightforward concurrent
expectation packing

130
00:11:13,990 --> 00:11:20,649
which is why we used by a spider
essentially a loss and exploit their to

131
00:11:20,649 --> 00:11:26,770
start a specific value to a specific
color . address for some art and the

132
00:11:26,770 --> 00:11:31,990
plastic pocket for rather primitive
scenario is how this page table expected

133
00:11:31,990 --> 00:11:38,560
by an takuna and generally a traditional
color exploit could be constructed using

134
00:11:38,560 --> 00:11:45,069
three symbols that first respo right
there could prepare using with powerful

135
00:11:45,070 --> 00:11:52,000
to start the shark code if there is an
upbeat right corner on a pretty exceeds

136
00:11:52,000 --> 00:11:56,440
the expert like that could use the right
while their approach to write the whole

137
00:11:56,440 --> 00:12:03,339
dispatch table with a shocker address
that obtained in the first step after

138
00:12:03,339 --> 00:12:07,959
that in all the treacle that shall could
from the colonel

139
00:12:08,620 --> 00:12:13,480
the expert like that could call and
peculiar into a profile functions in

140
00:12:13,480 --> 00:12:17,290
order to redirect the code execution to
the professional codes in the expert

141
00:12:17,290 --> 00:12:21,279
program obviously

142
00:12:22,550 --> 00:12:28,430
other primitive is the simplest form of
exploitation panicked but it has its own

143
00:12:28,430 --> 00:12:33,469
limitation as well thanks to supply some
execution prevention and supplies and

144
00:12:33,470 --> 00:12:41,029
Prevention's technology into this by
Intel since windows on both basically

145
00:12:41,029 --> 00:12:49,430
machine and able that's not allow use
the mood memory execution from , put it

146
00:12:49,430 --> 00:12:54,890
in the previous slide it effectively
means that is that where the expert

147
00:12:54,890 --> 00:13:00,560
right there trying to trigger the user
more chocolate from the color is no

148
00:13:00,560 --> 00:13:10,399
longer possible starting on B those are
both in the security security researcher

149
00:13:10,399 --> 00:13:15,290
always come out to protect the issue
that encounter and there is no exception

150
00:13:15,290 --> 00:13:21,349
for them as well they are very small
package to bypass map and one of the

151
00:13:21,350 --> 00:13:28,490
good example is demonstrated by necklace
exploit in CD 2015 05 but in my opinion

152
00:13:28,490 --> 00:13:35,870
there is a more generic method to bypass
map which is in which the expert right

153
00:13:35,870 --> 00:13:40,880
there could locate economic executable
powerful replacing the signal path of

154
00:13:40,880 --> 00:13:45,709
supporting the show codes which is well
explained by Alex and rescue from the

155
00:13:45,709 --> 00:13:51,529
hip injury panic but keep in mind that
Alex time it can only work until windows

156
00:13:51,529 --> 00:13:52,220
8

157
00:13:52,220 --> 00:13:55,640
nevertheless what I'm trying

158
00:13:55,640 --> 00:14:00,170
what I'm trying to emphasize here is how
permanent is right where primitive to

159
00:14:00,170 --> 00:14:06,920
export right there because of this
simplicity but in fact not all , exploit

160
00:14:06,920 --> 00:14:11,540
us while their primitive as demonstrated
by the expert in city 2014 for the

161
00:14:11,540 --> 00:14:17,990
country and put us in 15 17 or 18

162
00:14:17,990 --> 00:14:24,560
the fact that not all color exploit and
take you into the profile functions in

163
00:14:24,560 --> 00:14:27,290
order to achieve arbitrary code
execution

164
00:14:27,290 --> 00:14:33,550
so it may make our expert mining that
apology not generic enough to call

165
00:14:33,550 --> 00:14:39,219
all the connects to assemble however the
use of this API function together

166
00:14:39,220 --> 00:14:44,410
without the special is still available
to us in the event of mining and explore

167
00:14:44,410 --> 00:14:49,360
assemble and it has been proven to be
successful are useful in discovering

168
00:14:49,360 --> 00:14:53,829
something they can exploit some of the
success stories are for example that

169
00:14:53,829 --> 00:15:00,819
discovery of hi-tech City 2015 series of
57 expert which was first reported by be

170
00:15:00,820 --> 00:15:06,490
able to myself and the leader exploited
by fedex while there was no public

171
00:15:06,490 --> 00:15:08,740
exploit available to you at the time

172
00:15:08,740 --> 00:15:14,860
another example is the discovery of
other number family which the applicant

173
00:15:14,860 --> 00:15:20,019
you'll be exploited as a result of our
expert mining methodology

174
00:15:20,019 --> 00:15:29,410
so basically what how do we do that what
we do is we look for the windows api

175
00:15:29,410 --> 00:15:35,560
function thing statically and
dynamically this will be a professional

176
00:15:35,560 --> 00:15:40,810
most of the time happened that in the
binary and can be conveniently search

177
00:15:40,810 --> 00:15:42,130
from process family

178
00:15:42,130 --> 00:15:48,070
so this research from the process memory
true dynamic analysis system my sandbox

179
00:15:48,070 --> 00:15:51,940
could come in handy in mining this kind
of contact for assemble

180
00:15:51,940 --> 00:16:00,940
however there are some cases where this
function on a happier in the binary for

181
00:16:00,940 --> 00:16:05,020
example they know where my you some
proper technique to implement its own

182
00:16:05,020 --> 00:16:10,149
address routine and passed in portable
family in order to retrieve the function

183
00:16:10,149 --> 00:16:16,360
address directly need to exploit to
address these pieces we introduce some

184
00:16:16,360 --> 00:16:20,380
of the preeminent expert behavior
detection methods that will be explained

185
00:16:20,380 --> 00:16:28,990
by brought in the anomaly sections so we
will first discuss the generic way on

186
00:16:28,990 --> 00:16:31,180
how to identify the library

187
00:16:31,180 --> 00:16:38,500
what we expect from december the
following the following screenshot

188
00:16:38,500 --> 00:16:41,500
should be no stranger to anyone who is
family

189
00:16:42,960 --> 00:16:47,790
and this is an example of video that we
implement that to look at that while

190
00:16:47,790 --> 00:16:54,120
their primitive primitive experts ember
from static binary one of the pure

191
00:16:54,120 --> 00:16:59,700
features of Yara is that it in able to
enable us to scan the string pattern

192
00:16:59,700 --> 00:17:01,710
from the process memory as well

193
00:17:01,710 --> 00:17:08,970
so to improve the efficiency of this
year against pack or and crippled know

194
00:17:08,970 --> 00:17:14,700
where you might want to deploy this
Yahoo to the pilot system

195
00:17:14,700 --> 00:17:22,830
haha as I mentioned previously the use
of their primitive is still available to

196
00:17:22,829 --> 00:17:27,839
us in the event of mining majority of
connector assembly to reiterate again

197
00:17:27,839 --> 00:17:33,210
after successfully exploiting the
colonel longer pretty the export process

198
00:17:33,780 --> 00:17:38,879
you need to call and teacher into the
function in order to transfer the quick

199
00:17:38,880 --> 00:17:43,050
execution for an arbitrary address under
attack this control which is already

200
00:17:43,050 --> 00:17:48,780
have health especially while some
arbitrary like really pretty and you

201
00:17:48,780 --> 00:17:54,030
might at the use of this antique Yuri
into the profit function is not common

202
00:17:54,030 --> 00:17:59,879
to the file by using wood applications
hence

203
00:18:00,659 --> 00:18:08,700
is safe to say that is this functions is
foul in a primary or process memory we

204
00:18:08,700 --> 00:18:12,119
could say that it potentially contain
can exploit

205
00:18:12,840 --> 00:18:18,299
howdy we are applying this year on
various total and the results quite

206
00:18:18,299 --> 00:18:20,429
promising for you after eight

207
00:18:20,429 --> 00:18:26,009
of course you can reduce the number of
first positive by any initial conditions

208
00:18:26,009 --> 00:18:32,580
for example this keeps getting in this
before in this case which might have the

209
00:18:32,580 --> 00:18:41,220
potential of using our calling this
entry into a powerful functions to recap

210
00:18:41,220 --> 00:18:44,729
all couldn't exploit use while their
primitive

211
00:18:44,729 --> 00:18:51,239
so how can we do it is other exceptional
cases in order to do that we need to

212
00:18:51,239 --> 00:18:55,529
first understand what is the typical
posterior aspect pillow used by expert

213
00:18:55,529 --> 00:18:56,249
process

214
00:18:56,249 --> 00:19:04,619
traditionally after expecting a
crinoline 10 BD and export process will

215
00:19:04,619 --> 00:19:07,439
typically Alex sighs persistent
privilege

216
00:19:07,440 --> 00:19:13,229
true top and feeling in other words
people take advantage of the purpose

217
00:19:13,229 --> 00:19:17,729
doing payload operations and this
purpose during operations could be

218
00:19:17,729 --> 00:19:20,669
summarized interesting to accept this

219
00:19:20,669 --> 00:19:24,720
the export process could get the process
structure of the system process we

220
00:19:24,720 --> 00:19:29,669
process ID equals 4 and subsequently
obtained is responding as a token

221
00:19:29,669 --> 00:19:33,419
address and after that the export
process we've got the impressive

222
00:19:33,419 --> 00:19:38,279
structure of itself and then replaces as
a fucking address with the system access

223
00:19:38,279 --> 00:19:44,669
token as a result of this type of
replacement is process will contain the

224
00:19:44,669 --> 00:19:47,999
same successful as a system process
which is our forces and privilege

225
00:19:50,129 --> 00:19:52,750
traditionally of this that

226
00:19:52,750 --> 00:19:57,670
implemented in pure assembly code that
would require some constant after to be

227
00:19:57,670 --> 00:20:02,590
used to find the actual access token
address which is one of the few from the

228
00:20:02,590 --> 00:20:07,929
process structure and also travels
interactive process leads to find the

229
00:20:07,930 --> 00:20:14,050
system process and also retreated to the
information but they're going to exploit

230
00:20:14,050 --> 00:20:19,300
these days we'll use documented in the
patient's to implement a perform all the

231
00:20:19,300 --> 00:20:22,720
steps to improve his resilience and
possibility

232
00:20:23,620 --> 00:20:31,540
this is an examples of our privilege
elevation . routine taken from more than

233
00:20:31,540 --> 00:20:32,320
exploit

234
00:20:32,320 --> 00:20:39,100
obviously it looks cleaner and more
possible that these two pieces of court

235
00:20:39,100 --> 00:20:45,010
trying to do here is that it first try
to call the document that Windows kernel

236
00:20:45,010 --> 00:20:55,240
functions for ps4 process by process ID
later

237
00:20:55,240 --> 00:21:01,750
adjust the offset of the e process
structure in order to get the address

238
00:21:01,750 --> 00:21:06,400
which is one of the few from the
structure and usually the expediter will

239
00:21:06,400 --> 00:21:07,960
use console offset

240
00:21:07,960 --> 00:21:17,170
that's a party for emotions have been
this is alternatively from the special

241
00:21:17,170 --> 00:21:22,750
on the right hand side that a more
elegant approach will be calling

242
00:21:22,750 --> 00:21:30,760
PS reference primary topic api functions
with the e-plus structure as its press

243
00:21:30,760 --> 00:21:36,040
input parameter that can conveniently
retrieve the topic address

244
00:21:36,720 --> 00:21:42,929
for the respective export process and
the system process after the popular

245
00:21:42,929 --> 00:21:47,520
address has been detonated the export
process will change is estoppel the

246
00:21:47,520 --> 00:21:50,520
system is stopping to achieve elevation
of privilege

247
00:21:53,669 --> 00:22:00,480
hence we introduce the second yahoo to
protect the subset of the export sample

248
00:22:00,480 --> 00:22:02,820
that do not average

249
00:22:02,820 --> 00:22:06,000
right what their primitive in this group

250
00:22:06,600 --> 00:22:11,490
we take a one pitch off the top and
stealing operations that will that will

251
00:22:11,490 --> 00:22:16,799
call the popular windows color
applications like ps4 process by process

252
00:22:16,799 --> 00:22:21,539
ID and antiquated system information
which is typically used by also can

253
00:22:21,539 --> 00:22:26,730
exploit to retrieve the interest in the
base address that will be required to in

254
00:22:26,730 --> 00:22:32,820
passing the actual address for the
respective our printer function that

255
00:22:32,820 --> 00:22:39,120
will be probably the exploit logically

256
00:22:39,770 --> 00:22:45,650
this PS Vita process that process ID is
not allowed to be used by any

257
00:22:45,650 --> 00:22:53,930
application correctly so the use of this
document windows kernel function by any

258
00:22:53,930 --> 00:22:57,680
user application pending to exploit a
winter's color

259
00:22:57,680 --> 00:23:04,790
celebrity could be a good indicator for
us it is also want to mention that this

260
00:23:04,790 --> 00:23:12,440
is more aggressive but it is able to
find the purpose during operation that

261
00:23:12,440 --> 00:23:19,880
presented from the speakers from
previously been additional condition can

262
00:23:19,880 --> 00:23:26,090
be added to this room to make it less
expensive for example we have also add a

263
00:23:26,090 --> 00:23:33,260
chat where the sample has imported GI 32
and use 32 libraries that contain the

264
00:23:33,260 --> 00:23:39,200
Queen functions which are typically use
when exploiting win32 vulnerabilities

265
00:23:39,200 --> 00:23:49,910
we also introduced a yahoo packed the
top of stealing operation that involves

266
00:23:49,910 --> 00:23:54,470
calling and other documents at the
function called PS reference probably

267
00:23:54,470 --> 00:23:55,070
talking

268
00:23:55,070 --> 00:24:01,220
this group is identical to the previous
one except it is not specific

269
00:24:01,220 --> 00:24:09,530
interacting exploiting vulnerabilities
as you can see in the condition part we

270
00:24:09,530 --> 00:24:13,100
dropped the user input library checked

271
00:24:13,100 --> 00:24:21,980
next we are going to pop some of the
case study of the Collins family that

272
00:24:21,980 --> 00:24:28,430
leverage the European export this family
was discovered by the first child to be

273
00:24:28,430 --> 00:24:34,340
introduced and the reason why we picked
this one of the people in our family

274
00:24:34,340 --> 00:24:39,770
that we want to discuss here is because
it was the first know we're family that

275
00:24:39,770 --> 00:24:47,090
exploits ed 2015 7 3 months of the
Microsoft patch the deputy in fact 2015

276
00:24:49,600 --> 00:24:54,250
it is also want to mention that there
was no public exploit available during

277
00:24:54,250 --> 00:25:00,280
the time so we believe that this therapy
exploit could be developed by try tax

278
00:25:00,280 --> 00:25:05,168
office to patch analysis or the better
you will be exploited from the

279
00:25:05,169 --> 00:25:06,850
underground market

280
00:25:06,850 --> 00:25:14,139
none of us after the disclosures of why
I posts regarding the use of European

281
00:25:14,140 --> 00:25:19,720
exploit by dr tax you realize that the
u.p exploit has been disappear from

282
00:25:19,720 --> 00:25:21,880
tracks in July 2050

283
00:25:21,880 --> 00:25:27,970
soon after that you'll need to discover
that this has been a rough it now

284
00:25:27,970 --> 00:25:33,940
support modular architecture in which
the EOP exploit can be downloaded as a

285
00:25:33,940 --> 00:25:40,990
model from the CNCs book five colony we
are actively monitoring the UPS . in

286
00:25:40,990 --> 00:25:46,539
this side but the resource quite
disappointing because the UPS store in

287
00:25:46,539 --> 00:25:51,789
the fight seems to be soon explore as we
first discovered by in a pro 2015

288
00:25:51,789 --> 00:25:59,080
this is one of the good example to show
how in our office react to improve the

289
00:25:59,080 --> 00:26:05,199
product as i mentioned previously pretty
impressed and now is will I PT is also

290
00:26:05,200 --> 00:26:12,070
include the USB bypass technique in
addition to the European exploit in

291
00:26:12,070 --> 00:26:20,110
order to elevate the process . x it is
us to pass more you can be downloaded

292
00:26:20,110 --> 00:26:22,240
from the CNCs mouthful

293
00:26:22,240 --> 00:26:29,080
fortunately it is commonly exploiting
already oh and Moon you see one ability

294
00:26:29,080 --> 00:26:33,970
which is already patched by microsoft in
case if you're interested

295
00:26:33,970 --> 00:26:37,750
the USC won a pretty is currently
exploiting is called at compact listing

296
00:26:37,750 --> 00:26:43,730
the rest case study is this pie

297
00:26:43,730 --> 00:26:47,390
I believe no one has heard about this is
not a family before because this is not

298
00:26:47,390 --> 00:26:53,570
already have another family that first
appear in 2030 you know that is covered

299
00:26:53,570 --> 00:26:59,120
by the first year that the introduce the
reason why this is my family stand out

300
00:26:59,120 --> 00:27:05,989
from the rest of the family is because
it is interesting post after expert the

301
00:27:05,990 --> 00:27:11,720
colonel on a 3d this but no where did
not elevate our process privilege

302
00:27:12,290 --> 00:27:19,550
instead it uses a lot of your technique
rather interesting approach

303
00:27:19,550 --> 00:27:24,860
so we started to ask yourself do you
really need to elevate the preachers for

304
00:27:24,860 --> 00:27:30,080
the export process this question seems
to be unsurprised a factual in his

305
00:27:30,080 --> 00:27:35,840
presentations of easy local in this
current expectations in his presentation

306
00:27:36,410 --> 00:27:43,340
he introduced a couple of our pictures
for exploitation and when are these are

307
00:27:43,340 --> 00:27:47,629
pictures such as that exploit right
there with not only for the SEO of a

308
00:27:47,630 --> 00:27:55,040
security descriptor for a previous
Windows process after that medium

309
00:27:55,040 --> 00:28:01,550
indicate the level of the export process
in jack is poor to a higher preacher in

310
00:28:01,550 --> 00:28:04,010
this process without any restrictions

311
00:28:04,010 --> 00:28:12,620
however these are pictures introduced by
is our children require some

312
00:28:12,620 --> 00:28:17,810
modification to put a structure that
could be easy to pack that by security

313
00:28:17,810 --> 00:28:25,040
suffer in response to this despite know
where decided to inject good to the

314
00:28:25,040 --> 00:28:31,460
remote process from chrome or one of the
because of one which at this approach is

315
00:28:31,460 --> 00:28:32,460
that

316
00:28:32,460 --> 00:28:37,230
there is no modification needed to the
current structure and at the same time

317
00:28:37,230 --> 00:28:43,500
in April good execution and the criminal
contacts basically how it works is that

318
00:28:43,500 --> 00:28:49,680
after explained Colonel Brady the export
process could execute at MPC injection

319
00:28:49,680 --> 00:28:55,080
Ricky and the kind of apparently and
this and the responsibility of this npc

320
00:28:55,080 --> 00:28:59,909
injection with thing is to travel the
active process least to find the target

321
00:28:59,910 --> 00:29:03,780
process which is very unlikely to be
monitored by hips

322
00:29:03,780 --> 00:29:11,010
for example spc who's after the target
process was followed by process could

323
00:29:11,010 --> 00:29:16,530
inject and a pc track for the pocket
process in order to run the main payload

324
00:29:17,940 --> 00:29:23,370
obviously these approaches most happy
and based on our testing it is able to

325
00:29:23,370 --> 00:29:30,989
bypass most of the solution by and
another endless you just last month from

326
00:29:30,990 --> 00:29:36,060
my pro also discovered the similar post
color a sport payload use by lucky which

327
00:29:36,060 --> 00:29:40,530
is our glorious somewhere in order to
elevate our process privilege

328
00:29:45,120 --> 00:29:52,260
this is a flow of our despite this is
the popular export . despite this by

329
00:29:52,260 --> 00:30:00,660
that is but now we're the first exploit
the one that will be specified in 2013

330
00:30:00,660 --> 00:30:01,830
36 all

331
00:30:01,830 --> 00:30:09,300
after successfully exporting the one
everybody it then transfer the contract

332
00:30:09,300 --> 00:30:18,750
to Colonel and in the first locate the
corner powerful that you get poop after

333
00:30:18,750 --> 00:30:23,730
the clip after is really then right and
prepare an npc injection routine to the

334
00:30:23,730 --> 00:30:29,110
common kind of offer that you repeat
that previously after that

335
00:30:29,110 --> 00:30:35,139
it transferred a good execution to the
tougher and as I mentioned previously

336
00:30:35,140 --> 00:30:41,980
the responsibility of this pc injector
routine is to commemorate and find the

337
00:30:41,980 --> 00:30:49,720
active svchost process and then in jan a
pc tried to the packet process and

338
00:30:49,720 --> 00:30:56,799
finally the APC tried to be triple black
a in that queue a pc version that will

339
00:30:56,799 --> 00:30:59,860
prevent the final order or proper
cooking

340
00:30:59,860 --> 00:31:08,350
next I'm going to pass a stage 2 brought
to explain that you're the expert

341
00:31:08,350 --> 00:31:13,360
anomalies that can be used to identify
their common with other color export

342
00:31:13,360 --> 00:31:16,540
ok thank you take away

343
00:31:16,540 --> 00:31:22,240
so now i'm going to discuss those
anomalies that may suggest that an

344
00:31:22,240 --> 00:31:25,419
elevator elevated process is not
authorized

345
00:31:25,419 --> 00:31:32,230
so first is the existence of user
process that had system integrity level

346
00:31:32,230 --> 00:31:40,330
according to sdn the you sir are the
processes that are started by the user

347
00:31:40,330 --> 00:31:48,309
acquired the acquired our integrity
level of the user only system services

348
00:31:48,309 --> 00:31:52,059
are assigned system integrity level

349
00:31:52,570 --> 00:32:00,520
so if we look at the normal system so we
will notice that only system services

350
00:32:00,520 --> 00:32:06,970
have like system integrity low and user
process have like your integrity level

351
00:32:06,970 --> 00:32:12,640
of the user for example let's say we run
calculator so it will have a medium

352
00:32:12,640 --> 00:32:15,429
integrity level because by default

353
00:32:15,429 --> 00:32:20,830
users have medium integrity low unless
there are they are

354
00:32:20,830 --> 00:32:25,899
I've been users that have authorized
through UAC for example is we executed

355
00:32:25,900 --> 00:32:26,830
again

356
00:32:26,830 --> 00:32:32,530
but as administrator so now it is up

357
00:32:33,090 --> 00:32:42,659
high integrity hello so now let us use a
local kernel debugger to emulate like a

358
00:32:42,660 --> 00:32:48,810
malware which the kernel mode and what
we can do so in our case we want to

359
00:32:48,810 --> 00:32:56,940
elevate this medium integrity level 2
system so as discussed by wing one of

360
00:32:56,940 --> 00:33:02,970
the technique that is commonly used by
my where is to just steal the token of

361
00:33:02,970 --> 00:33:09,870
the system process but before we where
we are able to do that since we're not

362
00:33:09,870 --> 00:33:16,110
using the documented API so we need to
increment the reference count otherwise

363
00:33:16,110 --> 00:33:21,209
we will release the screening the system
after our process terminates

364
00:33:21,210 --> 00:33:29,730
so the reference count is located at the
at the object heather subject header of

365
00:33:29,730 --> 00:33:31,080
the access token

366
00:33:31,080 --> 00:33:34,080
so let's see

367
00:33:39,030 --> 00:33:47,700
so it's located at offset 0 so now we
need to get the address of the access

368
00:33:47,700 --> 00:33:50,700
token or the system passes

369
00:33:59,260 --> 00:34:04,870
so this is the access so this is the
address of the access token of the

370
00:34:04,870 --> 00:34:07,870
system process

371
00:34:08,710 --> 00:34:14,260
so now we're going to need to get the
address of its subject matter

372
00:34:27,230 --> 00:34:33,290
so it's located here so now we have we
want to change the value

373
00:34:38,750 --> 00:34:47,659
it's ok that zero so yeah so we don't
know at this point we don't know how

374
00:34:47,659 --> 00:34:53,570
many existing references are there so we
cannot simply just change it to 2d or

375
00:34:53,570 --> 00:34:58,130
whatever but there's a brilliant
technique that was suggested by the

376
00:34:58,130 --> 00:35:03,619
window is to simply set this to set up
with a value that is big

377
00:35:04,160 --> 00:35:10,970
that way we ensure that the the access
token is not read even after our process

378
00:35:10,970 --> 00:35:12,560
exits

379
00:35:12,560 --> 00:35:21,680
so for example let's set it to 300 x so
now we can replace the access token of

380
00:35:21,680 --> 00:35:29,029
our calculator to go to the access token
of these the system process

381
00:35:29,030 --> 00:35:35,810
so first we need to get the offset of
the field so it is located at the

382
00:35:35,810 --> 00:35:39,470
process object

383
00:35:45,640 --> 00:35:56,319
so the token is located at offset f8 so
we simply need to get the address of the

384
00:35:56,319 --> 00:35:59,650
calculator object in memory

385
00:36:08,230 --> 00:36:14,080
- it's here so we want to edit

386
00:36:14,080 --> 00:36:24,520
we want to change the token field which
is in off set of eight so we want to set

387
00:36:24,520 --> 00:36:29,140
it to the token of the system process

388
00:36:37,290 --> 00:36:43,830
so now when we when we restart like
process explorer then it should be a

389
00:36:43,830 --> 00:36:46,830
system in time it should have system
integrity level

390
00:36:51,870 --> 00:36:58,049
so now it has system integrity level

391
00:36:58,050 --> 00:37:03,630
so what does this mean well it is just
shouldn't be there because obviously

392
00:37:03,630 --> 00:37:10,080
it's not a system service and it is a
child of explore that XA

393
00:37:10,080 --> 00:37:15,930
so which means its most probably
launched by a user but the problem with

394
00:37:15,930 --> 00:37:21,419
this is that there's no definitive way
to determine whether our process is a

395
00:37:21,420 --> 00:37:27,780
system service or not but of course
there are also ways to check like one is

396
00:37:27,780 --> 00:37:35,730
the parent should not be explored that
XA or if it's if it's a system service

397
00:37:35,730 --> 00:37:42,540
they should be its parent should be
services that XA but for this approach

398
00:37:42,540 --> 00:37:44,340
then some

399
00:37:44,340 --> 00:37:50,340
we need to consider that there are
processes that are started by windows

400
00:37:50,340 --> 00:37:51,840
startup

401
00:37:51,840 --> 00:37:55,230
so that means that some form of white
listing

402
00:37:55,230 --> 00:38:04,320
I is needed so therefore i am ordinary
way I'm ordinary check that we can

403
00:38:05,190 --> 00:38:13,500
yeah a more generic check that we can
use is instead of checking the process

404
00:38:13,500 --> 00:38:16,530
name will check the integrity level

405
00:38:16,530 --> 00:38:21,870
so if its system integrity if it has
system integrity level then its parent

406
00:38:21,870 --> 00:38:23,759
should also have a system integrity

407
00:38:23,760 --> 00:38:31,200
hello so for example like not a normal
process like svchost it has a system

408
00:38:31,200 --> 00:38:34,640
integrity low so it's Carolyn

409
00:38:34,640 --> 00:38:38,629
should have also have system integrity
level

410
00:38:39,170 --> 00:38:42,769
so now cock a system integrity hello

411
00:38:43,819 --> 00:38:51,230
but X its parent explore that excess is
only medium integrity level so we have

412
00:38:51,230 --> 00:38:58,519
discussed like how to determine and
normally through integrity levels but as

413
00:38:58,519 --> 00:39:02,750
we mentioned earlier malware it doesn't
really need to elevate to a higher

414
00:39:02,750 --> 00:39:06,140
integrity level there are other ways

415
00:39:06,140 --> 00:39:14,210
one of them is to acquire the directly
acquired the system the necessary

416
00:39:14,210 --> 00:39:15,049
privileges

417
00:39:15,049 --> 00:39:24,619
so let's use only the back for example
is the example so we have executed it as

418
00:39:24,619 --> 00:39:30,380
a medium integrity low so it wouldn't be
able to

419
00:39:31,099 --> 00:39:38,900
so it will only be able to access
process we meet you

420
00:39:38,900 --> 00:39:45,109
integrity hello but now let us assume
again it was able to reach kind of load

421
00:39:45,109 --> 00:39:51,980
through an exploit so it can reach the
kernel mode and able to acquire the S&ED

422
00:39:51,980 --> 00:39:53,240
about privilege

423
00:39:53,240 --> 00:39:58,368
there's even about privilege is
basically up basically grants a process

424
00:39:58,369 --> 00:40:05,690
access to all process regardless of the
integrity develop so there are the

425
00:40:05,690 --> 00:40:08,690
privileges is located at the access
token

426
00:40:13,230 --> 00:40:26,700
so it's okay that offset 40 and it's
using this structure is called SCP token

427
00:40:26,700 --> 00:40:29,700
public preview laters

428
00:40:31,320 --> 00:40:34,320
and it contains the spirit present

429
00:40:35,089 --> 00:40:40,460
which contains some value that
represents our with each beat

430
00:40:40,460 --> 00:40:43,249
representing the privilege

431
00:40:43,249 --> 00:40:50,058
so if we take quickly take a look in the
privileges of a ladybug

432
00:40:50,569 --> 00:40:55,729
so the present meat-filled means like
what are the bits that are present or

433
00:40:55,729 --> 00:41:01,009
but either privileges that are present
for the enable field

434
00:41:01,009 --> 00:41:08,809
it corresponds to which of the bits are
unable to in this case it's a sea change

435
00:41:08,809 --> 00:41:11,809
notify privilege for this one

436
00:41:11,809 --> 00:41:19,430
so now we want to do some research by si
si cerrito it

437
00:41:20,329 --> 00:41:25,400
apparently the present field is not
being check at all in the kernel mode

438
00:41:25,400 --> 00:41:28,039
and the colonel and colonel in kernel
mode

439
00:41:28,039 --> 00:41:35,329
so if we want we just need to set the
S&ED about privilege in the enable field

440
00:41:35,329 --> 00:41:41,690
so now let's get the the access token of
holy fuck

441
00:41:49,780 --> 00:42:03,070
so that's the access token and we want
to set the privileges which is in offset

442
00:42:03,070 --> 00:42:04,900
party

443
00:42:04,900 --> 00:42:12,070
the two we want to set the modified the
privilege just field of the access token

444
00:42:12,070 --> 00:42:15,460
and then the enable field of the
privileges soap

445
00:42:16,060 --> 00:42:26,650
it sort of set ate the bird is a mug
filled this is ed bug privilege just

446
00:42:26,650 --> 00:42:33,310
field is big number 20 so that's
equivalent to one thousand one hundred

447
00:42:33,310 --> 00:42:40,090
thousand X so in this case we just need
to or it so basically that's equal to

448
00:42:40,090 --> 00:42:44,080
900,000 x

449
00:42:44,080 --> 00:42:54,040
I precomputed it already before coming
here so now when we go back to only then

450
00:42:54,040 --> 00:42:57,850
it has access to all the process but

451
00:42:58,630 --> 00:43:05,319
it still has the medium integrity level
in normal

452
00:43:05,319 --> 00:43:09,369
in normal circumstances are let's just
close this

453
00:43:10,930 --> 00:43:19,899
in normal circumstances i put a process
that have medium or low integrity level

454
00:43:19,900 --> 00:43:24,519
are not able to be are not able to
acquire admin privileges

455
00:43:25,150 --> 00:43:31,900
so we have a test minor here for a demo
by are here so it will try to acquire

456
00:43:31,900 --> 00:43:38,289
the SE debug privilege using the I just
token probably just API socially

457
00:43:38,289 --> 00:43:41,529
for example we run it with high-impact
integrity hello

458
00:43:42,490 --> 00:43:49,660
so high integrity level if we quickly
take a loop it has the S&ED bug

459
00:43:49,660 --> 00:43:55,240
privileges present present but it's
disabled by default so if we let it

460
00:43:55,240 --> 00:43:57,490
continue

461
00:43:57,490 --> 00:44:06,098
if we check again then it was able to
acquire a privilege but if we run it

462
00:44:06,099 --> 00:44:15,099
with run it with medium integrity level
then it doesn't even have the S&ED bug

463
00:44:15,099 --> 00:44:19,329
privileged preview they just present

464
00:44:19,329 --> 00:44:24,609
so eventually so if we let it continue
of course it will fail

465
00:44:24,609 --> 00:44:28,390
so what this means is that we can use it
as a check

466
00:44:32,049 --> 00:44:39,069
there shouldn't be any process that have
admin privileges but only has medium or

467
00:44:39,069 --> 00:44:42,549
low system integrity level

468
00:44:42,549 --> 00:44:51,309
another thing that mower can do without
elevating to our to our higher integrity

469
00:44:51,309 --> 00:44:58,329
level is still up a company with the
protection of the target object so let's

470
00:44:58,329 --> 00:44:59,529
yourself

471
00:44:59,529 --> 00:45:08,679
actually I that was mentioned by Wayne
earlier so but that's to our demo so

472
00:45:08,679 --> 00:45:13,989
let's use let's say that's our launch
calculator is our target

473
00:45:14,650 --> 00:45:18,249
so it is in high integrity level

474
00:45:19,449 --> 00:45:25,539
so now if we launch all the bug with a
medium integrity hello

475
00:45:25,539 --> 00:45:36,759
so naturally it won't be able to access
calculator because it's in a higher

476
00:45:36,759 --> 00:45:43,959
integrity hello again this is a shoe
with the Molly are we

477
00:45:43,959 --> 00:45:47,890
it was able to reach kernel mode and
able to tamper with the security

478
00:45:47,890 --> 00:45:50,618
descriptor of calculator

479
00:45:50,619 --> 00:45:54,670
so basically security descriptor
contains all the security information of

480
00:45:54,670 --> 00:46:02,140
an object or in this case of calculator
the security descriptor is located at

481
00:46:02,140 --> 00:46:04,580
the object head object either

482
00:46:04,580 --> 00:46:10,660
yeah

483
00:46:10,660 --> 00:46:16,060
so is it it it's located at offset 14

484
00:46:16,060 --> 00:46:20,950
yeah according to msdn the security
descriptor

485
00:46:21,610 --> 00:46:28,300
when are a non security descriptor
practically once everyone access to the

486
00:46:28,300 --> 00:46:34,510
object so in our case we want to set the
security descriptor of our target which

487
00:46:34,510 --> 00:46:42,760
is calculated at exit 20 or two not so
when we need to get the calculator

488
00:46:42,760 --> 00:46:51,430
process object so

489
00:46:52,549 --> 00:47:02,719
we need to now we try to get the address
of its object either so it's located

490
00:47:02,719 --> 00:47:13,910
here now we want to set the security
descriptor field which is in upset 14

491
00:47:13,910 --> 00:47:23,899
now we set it to 0 if we quickly take a
look

492
00:47:24,580 --> 00:47:32,770
at the permissions of course it has no
permission set now so it practically use

493
00:47:32,770 --> 00:47:38,770
anyone access to it so that means like
when you come back here we reload it

494
00:47:38,770 --> 00:47:47,020
then card is already accessible even
though it's in a higher integrity level

495
00:47:47,020 --> 00:47:50,350
where am I

496
00:47:50,980 --> 00:47:59,050
so therefore i did a more generic then
so as a summary

497
00:47:59,050 --> 00:48:04,840
my lord does not need to elevate to a
higher integrity level they can just

498
00:48:04,840 --> 00:48:09,370
either are acquire the necessary
privilege just like the SE develop

499
00:48:09,370 --> 00:48:15,370
privilege or it can also temper with the
secure or remove the protection from its

500
00:48:15,370 --> 00:48:22,870
target object there could be other there
could be other techniques that have not

501
00:48:22,870 --> 00:48:29,859
been discovered yet there for a more
generic check is to simply check for

502
00:48:29,860 --> 00:48:35,470
process it process trying to access
objects that have higher integrity level

503
00:48:35,470 --> 00:48:43,419
because that is the core of the windows
integrity mechanism so if some something

504
00:48:43,420 --> 00:48:47,800
is violating that one that it means that
something fishy is going on

505
00:48:48,310 --> 00:48:54,009
so when a normally success

506
00:48:55,360 --> 00:49:01,210
specifically we have elevated process
that are not authorized

507
00:49:01,210 --> 00:49:06,250
it means that if they were able to
acquire them illegally for example they

508
00:49:06,250 --> 00:49:09,130
exploit that vulnerability

509
00:49:09,130 --> 00:49:17,410
Colonel vulnerability so this means that
the process of finding this process also

510
00:49:17,410 --> 00:49:21,549
assist in the hunting process so as a
conclusion

511
00:49:22,840 --> 00:49:27,340
it usually means game over when someone
which kernel

512
00:49:27,340 --> 00:49:31,840
the kernel mode because we've been
talking about anomalies but once the

513
00:49:31,840 --> 00:49:33,850
malware which color mode

514
00:49:33,850 --> 00:49:39,160
they can practically do anything they
can remove all the anomalies but this

515
00:49:39,160 --> 00:49:42,399
would it already take them more effort
and more time

516
00:49:42,400 --> 00:49:48,910
so for for us we should not make it easy
for them so we should try our best to

517
00:49:48,910 --> 00:49:55,899
take advantage of these anomalies as
much as possible as long as possible and

518
00:49:55,900 --> 00:49:59,080
find this sample to come up with a
solution

519
00:49:59,080 --> 00:50:07,299
so I hope you find our and i hope you
find our presentation

520
00:50:07,300 --> 00:50:10,600
interesting so thank you

521
00:50:10,600 --> 00:50:19,930
protoc

522
00:50:28,710 --> 00:50:31,980
any questions for both work and wayne
from the audience

523
00:50:33,030 --> 00:50:41,190
so the the technique with the APC where
you're you know that you just launched

524
00:50:41,190 --> 00:50:44,130
on a pc in a privileged process

525
00:50:44,130 --> 00:50:50,130
I've ever seen malware that just stays
in a pcs that just keep set leaving

526
00:50:50,130 --> 00:50:57,720
through a pcs rather than injecting
insert into a process like it executed

527
00:50:57,720 --> 00:51:03,419
on a pc then it spawned another a pc in
the same process and keeps on going that

528
00:51:03,420 --> 00:51:09,119
that is an interesting idea but are you
haven't encountered any are at least

529
00:51:09,119 --> 00:51:13,560
based on my knowledge I have encountered
any real world now where that they're

530
00:51:13,560 --> 00:51:16,920
doing this at this moment but yeah it's
quite interesting

531
00:51:16,920 --> 00:51:22,920
the idea yeah well yeah I have no strong
opinion

532
00:51:24,089 --> 00:51:27,540
any other questions

533
00:51:27,540 --> 00:51:36,359
nope thank you guys thank you thank you

