1
00:00:14,660 --> 00:00:16,700
hello everyone my name is you

2
00:00:16,700 --> 00:00:22,549
and this is team are we are from by dou
X lab I do it the Chinese largest

3
00:00:22,550 --> 00:00:23,780
internet company

4
00:00:23,780 --> 00:00:29,240
I can think it as Chinese google and
Axel a bit short of the security lab so

5
00:00:29,240 --> 00:00:32,449
in the past we've spent a lot of effort
digging

6
00:00:32,450 --> 00:00:37,700
Colonel vulnerabilities later we realize
that we need a are effective and

7
00:00:37,700 --> 00:00:40,220
efficient way to pass the
vulnerabilities

8
00:00:40,220 --> 00:00:43,640
so here they are lying about the talk

9
00:00:43,640 --> 00:00:48,950
are we were first introduced the android
kind of vulnerability landscape and talk

10
00:00:48,950 --> 00:00:54,920
about the current problems and team will
give our introduction of our solution to

11
00:00:54,920 --> 00:01:02,360
the problems and later we'll talk about
how to establish the actual system so as

12
00:01:02,360 --> 00:01:07,940
everyone know our kind of all abilities
are dangerous but there are two types of

13
00:01:07,940 --> 00:01:11,810
two types of vulnerabilities the
personal one can cause information

14
00:01:11,810 --> 00:01:17,360
league and second why and cost code
execution in kernel mode so by combining

15
00:01:17,360 --> 00:01:21,619
those vulnerabilities and armed
perimeter is the user can gain the great

16
00:01:21,619 --> 00:01:24,800
privilege to launch our dangerous
attacks

17
00:01:26,060 --> 00:01:31,880
so the threats of common vulnerabilities
comes it comes in two foes and the first

18
00:01:31,880 --> 00:01:36,470
are most security mechanicals of Android
relies on the code of integrity

19
00:01:37,459 --> 00:01:41,240
so for example the Appalachian the
process isolation

20
00:01:42,080 --> 00:01:48,020
if the cano is broken are the malicious
app can peek into the other apps memory

21
00:01:48,020 --> 00:01:54,289
or even control it and the payment
mechanical realize on the , integrity as

22
00:01:54,289 --> 00:02:00,289
well so is the fingerprint thing work
and also the crypto framework are most

23
00:02:00,289 --> 00:02:05,240
specifically the keystore I realize on
the colonel integrity and there are many

24
00:02:05,240 --> 00:02:10,369
other users and security mechana sins
are stricter e rely on the colonel

25
00:02:10,369 --> 00:02:16,940
integrity the other from the other side
of the trust dome which is the lower

26
00:02:16,940 --> 00:02:19,459
level level lower than Cano

27
00:02:19,459 --> 00:02:24,950
we also be threatened if the colonel is
compromised because if Cano is

28
00:02:24,950 --> 00:02:30,079
compromised more tax services will be
exposed attack the attacker

29
00:02:30,080 --> 00:02:36,560
can use some kernel input that trust
don't trust to attack the transit zone

30
00:02:36,560 --> 00:02:42,650
that there have been a lot of talks
about this are so we won't elaborated

31
00:02:43,160 --> 00:02:48,950
so here is the list of recent kind of
vulnerabilities reported in android

32
00:02:48,950 --> 00:02:50,119
security bulletin

33
00:02:50,120 --> 00:02:56,060
so you can see that are the number is
increasing the rather ones are privilege

34
00:02:56,060 --> 00:03:00,350
escalation barks and the rest of the
blue one of the information leakage box

35
00:03:00,350 --> 00:03:05,329
so you can see the most of the bugs are
privilege escalation box which is a

36
00:03:05,330 --> 00:03:12,380
severe and from the growing trend of the
number we can draw two conclusions at

37
00:03:12,380 --> 00:03:18,260
least the first is more and more
attentions are pain on the securing the

38
00:03:18,260 --> 00:03:23,570
colonel are becoming more more and more
resources and people are are analyzing

39
00:03:23,570 --> 00:03:30,049
the problems and second one are as that
more and more vulnerabilities in the end

40
00:03:30,050 --> 00:03:34,850
exploit also also know for the
underground businesses because the bad

41
00:03:34,850 --> 00:03:41,390
guys also know there are the there are
so many vulnerabilities to exploit to

42
00:03:41,390 --> 00:03:42,470
name a few

43
00:03:42,470 --> 00:03:48,560
this one quite famous it's called tower
root it can our route almost all android

44
00:03:48,560 --> 00:03:53,690
are at that time that is that this is
due to the protector Q function in the

45
00:03:53,690 --> 00:03:58,700
cano are does not ensure the cause have
two different attacks addresses

46
00:03:58,700 --> 00:04:06,380
another one is the people route which is
also quite favors are it is due to the

47
00:04:06,380 --> 00:04:10,370
ping on hash function does not
initialize a certain list of data

48
00:04:10,370 --> 00:04:14,810
structure during your own house
operation but this can also lead to our

49
00:04:14,810 --> 00:04:21,709
Colonel privilege escalation and the
more the most the reason famous one is

50
00:04:21,709 --> 00:04:25,280
the pipe route there is actually no
official name for this

51
00:04:26,000 --> 00:04:32,030
it was a reverse engineered from the
King rude and God exposed to the public

52
00:04:32,030 --> 00:04:36,380
so the problem is that the pipe read and
Piper right

53
00:04:36,380 --> 00:04:41,630
implementations in the corner allows
local users to cost the privilege

54
00:04:41,630 --> 00:04:42,719
escalation

55
00:04:42,720 --> 00:04:48,300
that to be noted this is a known issue
in the upstream Colonel that with fixed

56
00:04:48,300 --> 00:04:50,880
in april 20 2014

57
00:04:50,880 --> 00:04:56,760
but it wasn't called out as a security
fix and assign a city ID so google

58
00:04:56,760 --> 00:05:00,210
android AOSP didn't fix it until most
recently

59
00:05:01,080 --> 00:05:06,870
what's worse for those CBS

60
00:05:06,870 --> 00:05:10,170
many of them have already got public POC

61
00:05:10,170 --> 00:05:14,730
so which means even the script kiddies
can directly use the code to write it

62
00:05:14,730 --> 00:05:16,140
exploits

63
00:05:16,140 --> 00:05:21,090
so here is some examples are that it can
be found on get hard

64
00:05:21,090 --> 00:05:28,409
there are also many export it boys made
public and never got officially reported

65
00:05:28,410 --> 00:05:34,890
or disclosed before being passed or not
get temp got 10 min time and effects

66
00:05:34,890 --> 00:05:44,789
so this is a sentence quoted for organic
paper from CS s last year so it also has

67
00:05:44,790 --> 00:05:50,250
found that there are at least 10 device
driver exploit that are never reported

68
00:05:50,250 --> 00:05:56,820
are from a famous root app so everyone
can reverse engineer the root apps and

69
00:05:56,820 --> 00:06:01,500
copy the employees but this is after
never reported which means the vendor

70
00:06:01,500 --> 00:06:04,200
didn't realize the existence of them

71
00:06:04,200 --> 00:06:12,599
and this is from the google are from
chrome security team so that the words

72
00:06:12,600 --> 00:06:17,610
are quite small so i read it out so they
found a bug are but the bug didn't get

73
00:06:17,610 --> 00:06:24,540
past for more than six month so still
are effects still facts to devices out

74
00:06:24,540 --> 00:06:25,169
there

75
00:06:25,169 --> 00:06:29,700
so this kind of explorers is disclosed
and not get term effects

76
00:06:29,700 --> 00:06:37,950
so are we dig with the distance of so
many vulnerabilities and their own paths

77
00:06:37,950 --> 00:06:42,180
there there are delivered quite a lot of
stress to the public

78
00:06:42,690 --> 00:06:48,750
there are already many malware and
adware with rly rly exploits for example

79
00:06:48,750 --> 00:06:50,220
the chemo get family

80
00:06:50,220 --> 00:06:56,160
the chemo game now we're family mimics
the popular urban I apps as shown here

81
00:06:56,160 --> 00:07:01,710
here are some of them quite popular like
talking tom light browser

82
00:07:02,640 --> 00:07:10,620
even the calculator so by uploading this
fake after the third party app store

83
00:07:10,620 --> 00:07:18,030
the attacker try to root the victim foam
using the using a date with employs that

84
00:07:18,030 --> 00:07:22,710
our public publicly known and after
gaining root

85
00:07:22,710 --> 00:07:26,760
the attack will try to remote control
the devices the from the factory

86
00:07:26,760 --> 00:07:32,640
impacting map you can see its worldwide
you factor and another example is

87
00:07:32,640 --> 00:07:39,570
similar to this is the ghost push some
more than study apps are fake as the

88
00:07:39,570 --> 00:07:47,159
attackers samples and more than 3,600
brands and the 14,000 type have cell

89
00:07:47,160 --> 00:07:55,200
phones have been factored over 600,000
phones are being impacted each day

90
00:07:55,200 --> 00:08:02,550
so this had a broad impact and the most
reason incidence is this the darks

91
00:08:02,550 --> 00:08:03,360
factors

92
00:08:03,360 --> 00:08:09,210
so the most special are characteristic
of this sample is that it uses the

93
00:08:09,210 --> 00:08:15,060
hacking teams employed which is
essentially uses the few tax employed so

94
00:08:15,060 --> 00:08:19,860
there are many cases like this the
employees are public by the devices are

95
00:08:19,860 --> 00:08:20,730
now past

96
00:08:20,730 --> 00:08:27,990
so what course is the problem devices
god I'm past forever or for a long

97
00:08:27,990 --> 00:08:34,500
period and it is quite difficult for
vendors or for the whole ecosystem to

98
00:08:34,500 --> 00:08:35,460
pass them

99
00:08:35,460 --> 00:08:41,430
so why before digging into this question
the problem are

100
00:08:41,429 --> 00:08:46,109
let's think about another question
people are always saying that iOS is

101
00:08:46,110 --> 00:08:49,620
more secure than enjoy it that you

102
00:08:49,620 --> 00:08:57,030
well our by comparing the vulnerability
frequency you can see that that's not

103
00:08:57,030 --> 00:08:57,900
sure

104
00:08:57,900 --> 00:09:01,140
so there are two tables listing here

105
00:09:01,140 --> 00:09:07,589
the left is for iOS and arriving for
Android and the . . is almost the same

106
00:09:07,589 --> 00:09:09,570
from august to pick

107
00:09:09,570 --> 00:09:15,960
think 2015 to the two or three two or
three months ago

108
00:09:15,960 --> 00:09:21,750
so you can see that there are almost the
same box frequency but why people are

109
00:09:21,750 --> 00:09:27,450
saying that is more secure our because
if Apple wants to patch a vulnerability

110
00:09:27,450 --> 00:09:34,200
of a compact can pass it in time because
Apple controls the entire supply chain

111
00:09:34,200 --> 00:09:42,420
for hardware to software and apple has
the open house has a source code and

112
00:09:42,420 --> 00:09:45,030
also the only copy of the source code

113
00:09:45,030 --> 00:09:49,980
yeah but I don't have to concern and I
have this model at that more the model

114
00:09:49,980 --> 00:09:52,560
different models have different source
code

115
00:09:52,560 --> 00:09:56,040
No so if Apple want to fix this is it a
bug

116
00:09:56,040 --> 00:09:59,160
it has only one copy of source code
effects

117
00:09:59,790 --> 00:10:06,689
so the time the window is quite a short
and also apple refuses to sign out

118
00:10:06,690 --> 00:10:12,750
virgins so there is no way for end users
to revert the iOS version back to old

119
00:10:12,750 --> 00:10:13,890
version

120
00:10:13,890 --> 00:10:22,199
so r it is less likely for the user to
revert to a vulnerable version and also

121
00:10:22,200 --> 00:10:28,770
all the iOS devices can get a timely
update for android are

122
00:10:28,770 --> 00:10:36,120
this is not the same as this is not a
case there are two causes the first

123
00:10:36,120 --> 00:10:38,190
course is the long pattern chain

124
00:10:38,190 --> 00:10:41,670
so from the first day if some
researchers found a vulnerability

125
00:10:41,670 --> 00:10:49,170
reported to google it take months to our
for Google to final night of patch and

126
00:10:49,170 --> 00:10:54,449
then google has to notify the vendors to
test and took the to take the patch and

127
00:10:54,450 --> 00:10:59,100
after the vendors testing it has to send
the past two carriers the carrier has

128
00:10:59,100 --> 00:11:03,630
attacked the passes again are for
stability issues and many other issues

129
00:11:03,630 --> 00:11:07,980
and after maybe after three months or
more

130
00:11:08,520 --> 00:11:14,610
they can finally approve the patch and
send out the OTA over-the-air update but

131
00:11:14,610 --> 00:11:18,180
for customers if they receive the OTA
they may not

132
00:11:18,180 --> 00:11:23,040
click the button and update the device
in time so for this long patente

133
00:11:23,040 --> 00:11:28,829
because it party may belong to different
company they have their own interest are

134
00:11:28,829 --> 00:11:36,120
this presentation is quite long in terms
of the passion time window and another

135
00:11:36,120 --> 00:11:38,250
problem is the device fragmentation

136
00:11:38,250 --> 00:11:41,850
so this picture is taken from the open
signal com

137
00:11:41,850 --> 00:11:45,480
so you can see there are so many vendors
so many fun models out there

138
00:11:46,019 --> 00:11:50,550
so if there is a problem for that in the
Cardinal you have to deal with so many

139
00:11:50,550 --> 00:11:53,699
models you have to pour the patches for
so many models

140
00:11:54,240 --> 00:12:01,410
this is the tedious work and let's take
a look at google's own stats to see how

141
00:12:01,410 --> 00:12:09,449
bad the situation is so largely part was
released in November 12 2014

142
00:12:09,449 --> 00:12:12,779
but sixty percent of the devices are
still older than that

143
00:12:13,350 --> 00:12:22,019
the status is I was taken on a prio 4
2016 and also google stop the passion

144
00:12:22,019 --> 00:12:27,990
for android other than 4.4 about 26.2
percent of the devices are still older

145
00:12:27,990 --> 00:12:28,860
than that

146
00:12:28,860 --> 00:12:32,399
so for those devices are

147
00:12:32,399 --> 00:12:39,839
this is that there is no way to get OTA
update and chinese market even worse

148
00:12:39,839 --> 00:12:44,850
we all know that china blocks google and
there are many Chinese specific vendor

149
00:12:44,850 --> 00:12:50,880
is providing phones in china so are the
steps shown on this slide is taken from

150
00:12:50,880 --> 00:12:57,420
devices with i do apps installed so we
can see that eighty percent 82 . eight

151
00:12:57,420 --> 00:13:04,019
percent of the devices are older than
our lollipop and 40 . four percent of

152
00:13:04,019 --> 00:13:11,880
the devices are older than 4.4 since
we're talking about the colonel bond

153
00:13:11,880 --> 00:13:12,660
ability

154
00:13:12,660 --> 00:13:19,410
so that's our see the status of the
colonel specially so we all know that if

155
00:13:19,410 --> 00:13:22,649
the colonel is the beauty of the corner
is older than the vulnerability

156
00:13:22,649 --> 00:13:23,970
notification date

157
00:13:23,970 --> 00:13:29,910
there is no way for the colonel to take
the patch are so we are trying to gather

158
00:13:29,910 --> 00:13:32,010
the status of the kernel meal time

159
00:13:32,010 --> 00:13:36,290
we're not saying that if the colonel is
older than the vulnerability

160
00:13:36,290 --> 00:13:40,939
modification date it is for sure to be
vulnerable but this can be here

161
00:13:40,940 --> 00:13:44,630
a proper proper approximate stats

162
00:13:44,630 --> 00:13:50,000
so for the tower route are from the data
gathered are made at which is this month

163
00:13:50,000 --> 00:13:53,660
are fifty five percent of the devices
are not vulnerable

164
00:13:54,440 --> 00:14:00,139
I which means they have newer appeared
time stamp than the art the date where

165
00:14:00,139 --> 00:14:01,970
this vulnerability car fixed

166
00:14:01,970 --> 00:14:08,120
however 45 the remaining devices are
older than the state which means it is

167
00:14:08,120 --> 00:14:10,040
highly likely that they are vulnerable

168
00:14:10,040 --> 00:14:13,579
they're not passed up in her route

169
00:14:13,579 --> 00:14:18,019
the situation is worse so eighty eight
percent of devices are older than the

170
00:14:18,019 --> 00:14:25,579
vulnerability notification date and for
the RCB 2015 eating there are five

171
00:14:25,579 --> 00:14:30,319
almost one hundred percent of the
devices are older than the vulnerability

172
00:14:30,319 --> 00:14:32,750
notification date

173
00:14:32,750 --> 00:14:36,500
so which means the majority of the
devices out there could be vulnerable

174
00:14:37,190 --> 00:14:42,529
so the fragmentation causes the second
problem

175
00:14:43,190 --> 00:14:49,339
the capability mismatching for the phone
vendors they understand they are formed

176
00:14:49,339 --> 00:14:54,529
the best they have the privilege to
apply the patches as well and with

177
00:14:54,529 --> 00:14:55,490
source code

178
00:14:55,490 --> 00:15:01,130
it is the easy to up to adapt the
patches to all the models however their

179
00:15:01,130 --> 00:15:06,439
main concern is not the security of the
devices so they may not applied in other

180
00:15:06,440 --> 00:15:11,899
sources to discover and pass the
vulnerabilities for security vendors

181
00:15:11,899 --> 00:15:16,190
their carpet that they are capable to
discover the passion and affects them

182
00:15:16,190 --> 00:15:22,550
but they are not privileged enough to
have to root the device first and to

183
00:15:22,550 --> 00:15:25,880
apply the colonel patches and without
source code

184
00:15:26,389 --> 00:15:29,959
it is hard to adapt the patches to all
the phone models

185
00:15:29,959 --> 00:15:37,849
this causes the battle situation where
the phone vendors are understand the

186
00:15:37,850 --> 00:15:43,040
problem but their first priority is not
fixing the problems the security event

187
00:15:43,040 --> 00:15:47,089
of the clear about this but is it so
challenging for them to fix that fix the

188
00:15:47,089 --> 00:15:49,820
problems but google google

189
00:15:49,820 --> 00:15:53,030
did a good job on trying to protect the
ecosystem

190
00:15:53,630 --> 00:15:58,730
they are building the security bulletin
they're trying to push the OTAs in time

191
00:15:58,730 --> 00:16:04,070
they're trying to post the vendors to
take the patches but as we have set our

192
00:16:04,070 --> 00:16:09,230
the vendors there is a long passion
chain and also in some areas like China

193
00:16:09,230 --> 00:16:13,070
there's no google so the situation is
still very bad

194
00:16:13,070 --> 00:16:20,480
given this past situation who to protect
and how to protect the payment

195
00:16:20,480 --> 00:16:23,540
fingerprinting frameworks on the android
phone

196
00:16:23,540 --> 00:16:30,469
well it is hard so we are trying to
provide the solution for this

197
00:16:30,980 --> 00:16:35,810
so which is our work adaptive Colonel
patching the team will give some details

198
00:16:35,810 --> 00:16:40,819
of how we do this how we achieve
adaptive colonel and patching welcome

199
00:16:40,820 --> 00:16:41,780
team

200
00:16:41,780 --> 00:16:48,980
thanks current Apache is actually a lot
not a very new idea

201
00:16:48,980 --> 00:16:58,100
you get probably have heard of a cake
graphic a keypad is Kathy for like a key

202
00:16:58,100 --> 00:17:03,530
graph it's just replace the the body
function with a new one

203
00:17:03,530 --> 00:17:12,170
so when you call the the function or the
coaching will be forward to the the figs

204
00:17:12,170 --> 00:17:17,810
figs function of course with the power
fixed because patch internal is very

205
00:17:17,810 --> 00:17:23,869
sensitive to sin because it sometimes
they have a minor very minor mystical we

206
00:17:23,869 --> 00:17:27,349
made Colonel crash so we need pay more
attention to that

207
00:17:27,349 --> 00:17:33,230
for example you cannot allow the orange
of order body function and fixed

208
00:17:33,230 --> 00:17:34,910
function long in together

209
00:17:34,910 --> 00:17:40,310
for example are running in in a for loop
right this is will call very bad results

210
00:17:40,310 --> 00:17:45,980
also you can use our soft serve machine
and the stack batteries to check if it's

211
00:17:45,980 --> 00:17:50,960
a buggy family still running the season
act as this time if that if that case

212
00:17:50,960 --> 00:17:53,840
you should avoid to patch at the time

213
00:17:53,840 --> 00:17:57,500
r us for patching for a keypad with you
ASAP trees

214
00:17:58,310 --> 00:18:01,310
Megan to do the whole thing

215
00:18:04,370 --> 00:18:09,290
oh I already talked about this site for
it

216
00:18:09,290 --> 00:18:14,960
a child for a third party to do the
passion because like a key card or keep

217
00:18:14,960 --> 00:18:16,730
a cheese kind of solutions

218
00:18:16,730 --> 00:18:20,570
the require source code of the of the
colonel

219
00:18:20,570 --> 00:18:27,530
you are going to fix and sometimes it's
very hard to get the get the source code

220
00:18:27,530 --> 00:18:30,649
of the colonel because some vendors they
just don't

221
00:18:31,370 --> 00:18:36,770
did they just keep their so-called
private you cannot just get them very

222
00:18:36,770 --> 00:18:43,700
easily and not a problem is that you
cannot directly patch apply your patch

223
00:18:43,700 --> 00:18:50,900
to apply pads across different current
abuse because i need is currently the

224
00:18:50,900 --> 00:18:57,110
SAP has a very strict limitations and
also our vendors have their have their

225
00:18:57,110 --> 00:18:58,189
own invitation

226
00:18:58,190 --> 00:19:04,310
they don't allow custom code to be
loaded into the system very easily so

227
00:19:04,310 --> 00:19:11,899
here comes question how we can load load
the kernel into the lower the code into

228
00:19:11,900 --> 00:19:17,270
the kernel adaptively here comes to our
solution we have three steps the first

229
00:19:17,270 --> 00:19:22,970
step is we need to gather some kind of
information like a symbol a symbol

230
00:19:22,970 --> 00:19:24,679
somebody dress and

231
00:19:24,679 --> 00:19:30,470
seriously and also we need to change a
little bit about change a little change

232
00:19:30,470 --> 00:19:32,869
some some data structures

233
00:19:32,869 --> 00:19:40,428
make sure you will feel for every every
different kernels and second second step

234
00:19:40,429 --> 00:19:49,190
is to patch the payload are currently
we're using a current module and circled

235
00:19:49,190 --> 00:19:56,059
to do the passion tea and the Search
Search tab is to replace the vulnerable

236
00:19:56,059 --> 00:20:02,990
functions or public vulnerable function
so we can fix the whole whole thing here

237
00:20:02,990 --> 00:20:08,509
is about how we get how we get the
colonel information generally we have a

238
00:20:08,509 --> 00:20:12,649
lot about different ways to get all of
them are like a proposition

239
00:20:13,249 --> 00:20:22,190
rocky or symbols and other current more
juice by the best of the best place to

240
00:20:22,190 --> 00:20:27,649
get all the information is from but
image could put image a is a is it like

241
00:20:27,649 --> 00:20:32,809
a gold mine has every different
information in it so what we what we do

242
00:20:32,809 --> 00:20:36,168
is to stick to compress the body image

243
00:20:36,169 --> 00:20:41,149
it probably is is compared with she's a
poor busy was kind of a compression

244
00:20:41,149 --> 00:20:47,389
method and the most common one is is GC
by the latest currently will use lzo is

245
00:20:47,389 --> 00:20:55,699
a very very fast very fast very fast a
depression kicked a compression method

246
00:20:55,700 --> 00:21:02,330
some current Colonel economies are just
a war nursing code or sometimes even e

247
00:21:02,330 --> 00:21:11,658
in our files before we do the project we
will do some research on our users or

248
00:21:11,659 --> 00:21:17,480
customers devices we gather some data
from the from them

249
00:21:17,480 --> 00:21:24,770
now we fit fine out over ninety-five
percent of the other device have the

250
00:21:24,770 --> 00:21:30,530
ability to to load the current module
and over sixty percent of the memory

251
00:21:30,530 --> 00:21:38,090
devices have the ability to to write
code into their into the current memory

252
00:21:38,600 --> 00:21:41,928
so if we do this

253
00:21:41,929 --> 00:21:46,790
combine them together we can like a
patch over ninety-nine percent of the

254
00:21:46,790 --> 00:21:55,520
user devices there us to you like a less
than 1% of devices that we can not do

255
00:21:55,520 --> 00:21:59,750
anything about but actually we have
other ways like we can use some kind of

256
00:21:59,750 --> 00:22:03,860
stable under pt's to do that

257
00:22:03,860 --> 00:22:10,879
like a week in we can remove the device
first then we during the during the root

258
00:22:10,880 --> 00:22:14,600
process we put the put the passcode

259
00:22:14,600 --> 00:22:17,780
so we can test our history is cute

260
00:22:17,780 --> 00:22:22,760
it's good the the past come from the
kernel which load by the other space

261
00:22:22,760 --> 00:22:26,990
this message

262
00:22:26,990 --> 00:22:33,350
hey how we do the current model thing
because we're basically used to this

263
00:22:33,350 --> 00:22:37,939
court in two more to end a fee in module
after the bunch of the better option

264
00:22:37,940 --> 00:22:46,309
because it has two different options
which which could be you could be

265
00:22:46,309 --> 00:22:51,080
utilized to you can more are more
seriously checks by the name colonel

266
00:22:51,080 --> 00:22:59,870
also the version of magic attacks some
vendors have their own restriction like

267
00:22:59,870 --> 00:23:05,510
a like sum sum hey they have their own
kernel module authentication mechanism

268
00:23:05,510 --> 00:23:13,940
which its checkered has value of of the
current model that has been loading to

269
00:23:13,940 --> 00:23:19,340
say if it is if it is a match you even
imagine the hash value inside the the

270
00:23:19,340 --> 00:23:20,570
kernel itself

271
00:23:20,570 --> 00:23:23,399
it's not you will not allow the

272
00:23:23,399 --> 00:23:27,508
loading process here's the how we

273
00:23:28,589 --> 00:23:36,239
I passed the version magic and the same
bored serious HX we first we modify the

274
00:23:36,239 --> 00:23:43,499
magic door actually file we make a a
bigger enough big enough a versa magic

275
00:23:43,499 --> 00:23:51,119
buffer so we we use this offer to
contend and any possible person magic

276
00:23:51,119 --> 00:23:57,839
screen so we can like you to look at two
hundred the three hundred fights and we

277
00:23:57,839 --> 00:24:07,799
then we copy the kernel version magic
strength to to our current module also

278
00:24:07,799 --> 00:24:13,950
we can copy the the current model of the
colonel stem both Circe's to the model

279
00:24:13,950 --> 00:24:18,330
so we can bypass or the checked all the
person magic strain and assemble

280
00:24:18,330 --> 00:24:23,399
services and our gather from the from
the boot image we have mentioned that

281
00:24:23,399 --> 00:24:30,928
before and this is how we pass a modular
structure check because you know we have

282
00:24:30,929 --> 00:24:35,339
a that there are all the different
category configurations like this one

283
00:24:35,339 --> 00:24:42,989
configure constructors there are like
over around 20 different configurations

284
00:24:42,989 --> 00:24:48,809
in this structure so you will you will
make a very different size of the of the

285
00:24:48,809 --> 00:24:56,099
modern structures so we we make some
painting at the end of these structure

286
00:24:56,099 --> 00:25:02,968
and making a bigger in order to content
all possible are different struggle more

287
00:25:02,969 --> 00:25:13,200
to cite this is how we back Pat samsung
current module authentication you can

288
00:25:13,200 --> 00:25:21,089
see that above a lie there is there is a
jump is being jump so we just me

289
00:25:21,089 --> 00:25:27,299
we just change this line of the
instruction to on a flop

290
00:25:27,299 --> 00:25:32,729
so it will just go to go directly to the
to the instructions below so you will

291
00:25:33,690 --> 00:25:43,139
so the kind of will be treated to allow
the the loading this city not are

292
00:25:43,139 --> 00:25:52,649
another kind of authentication this
happens in in a samsung s4 lollipop

293
00:25:53,159 --> 00:25:57,779
but it's have it is it still seems story
just check that has to have valuable

294
00:25:57,779 --> 00:26:03,090
this kind of thing so there is an export
symbol called I came

295
00:26:03,090 --> 00:26:07,289
ok am of underscore put load so if you
weak

296
00:26:08,100 --> 00:26:13,949
if you make this value - - which is a
little more recovery

297
00:26:14,820 --> 00:26:21,870
you can escape all the the chair you can
cheat the colonel to load to continue to

298
00:26:21,870 --> 00:26:24,719
load the lovely are kind of module

299
00:26:24,720 --> 00:26:32,429
this is the another option on how we put
our code into the kernel we call a

300
00:26:32,429 --> 00:26:37,620
circle injection before that you need
you know some symbols

301
00:26:37,620 --> 00:26:40,889
- - to a local memory

302
00:26:40,889 --> 00:26:46,769
the first one is verse of the malaga CT
and said when the module look much more

303
00:26:46,769 --> 00:26:52,919
the better one because sometimes you
need a very short distance from your

304
00:26:52,919 --> 00:26:58,230
vulnerable functions to your face
function if you see store enough you can

305
00:26:58,230 --> 00:27:02,639
make it just a wine instructions to to
make a jump is that will make it two or

306
00:27:02,639 --> 00:27:09,689
three function which and daughter but
atomic this we we put our show code in

307
00:27:09,690 --> 00:27:17,730
into a very specific structure so we
know where to load the the 0 of the

308
00:27:17,730 --> 00:27:24,809
right circle to figs down their their
their vulnerabilities and we also need

309
00:27:24,809 --> 00:27:29,220
to look at memory or you really use some
memory will talk about there in that in

310
00:27:29,220 --> 00:27:37,590
later and we can use memory device to
write or the patch which the circle into

311
00:27:37,590 --> 00:27:42,119
the memory then we trigger the code is
running from outer space

312
00:27:42,119 --> 00:27:45,119
here's a here's how we

313
00:27:45,830 --> 00:27:48,830
allocate the memory in the in the
colonel

314
00:27:49,399 --> 00:27:57,768
we just we just a overrides the cisco
function code with our own sure code

315
00:27:57,769 --> 00:28:06,140
this is the most looked simple of
Chicago actually do the do the function

316
00:28:06,140 --> 00:28:13,789
call me monkey you see you or allocated
some some chunk of memory from from the

317
00:28:13,789 --> 00:28:15,470
colonel

318
00:28:15,470 --> 00:28:22,279
we are there are a lot of the you can
choose any function cause to modify

319
00:28:22,279 --> 00:28:24,169
about it

320
00:28:24,169 --> 00:28:31,820
you need to but you need to a to the
cave a good one because sometimes you

321
00:28:31,820 --> 00:28:37,428
you modify some cold and if you have any
other application called us to call you

322
00:28:37,429 --> 00:28:42,529
our group it will cause problems so we
we are using like a new name because you

323
00:28:42,529 --> 00:28:45,830
need a very good one because he'd never
crash

324
00:28:45,830 --> 00:28:51,769
so if you modify the the the the cisco
code and the other applications and

325
00:28:51,769 --> 00:28:56,870
course it's called you name it will you
were just a local some memories you want

326
00:28:56,870 --> 00:28:59,090
to anything harmful to the system

327
00:28:59,090 --> 00:29:06,320
alright see this is how we trigger the
circle description from the from user

328
00:29:06,320 --> 00:29:15,799
space basically we we modified this is
called pointer to make it make it make

329
00:29:15,799 --> 00:29:23,809
it equals to the address of our local
memory then we put their the pass code

330
00:29:23,809 --> 00:29:31,250
into this memory then we we call this
cause cause this is called from from the

331
00:29:31,250 --> 00:29:32,330
user memory

332
00:29:32,330 --> 00:29:42,590
however from the of from user space than
the the also called will be excluded are

333
00:29:42,590 --> 00:29:46,789
basically we how we do the pageant is
like over is on mom

334
00:29:46,789 --> 00:29:52,908
function pointers with our own
implementation and also we can pass code

335
00:29:52,909 --> 00:29:55,990
directly like modify some values

336
00:29:55,990 --> 00:30:00,880
especially , static static variable in
the e in the colonel

337
00:30:00,880 --> 00:30:09,100
sometimes we get indian permissions on
the of armed third to be sensitive to be

338
00:30:09,100 --> 00:30:18,730
devices we can use our co process to
have like a coprocessor 15 and not

339
00:30:18,730 --> 00:30:21,940
importing we have it don't is too

340
00:30:21,940 --> 00:30:28,120
to do that you know I hope because when
you are hooking a function you can hook

341
00:30:28,120 --> 00:30:35,229
from from the prologue or hook from the
middle of the function which need we

342
00:30:35,230 --> 00:30:40,660
need you save the is you need to see
some contacts like register values from

343
00:30:40,660 --> 00:30:51,220
e in the trap line here is this example
how we hook from who from who from the

344
00:30:51,220 --> 00:30:52,240
prologue

345
00:30:52,240 --> 00:30:58,330
actually we are going to override the
first instructions with a beat

346
00:30:58,330 --> 00:31:02,980
insurgent beads is a branch instruction
and you know what this trip is this your

347
00:31:02,980 --> 00:31:11,410
dress that will jump to a patch function
which our our function and if if the

348
00:31:11,410 --> 00:31:16,240
distance from the vulnerable functions
to the pet function is too far away to

349
00:31:16,240 --> 00:31:20,290
be contained in a single instruction you
can use airg eyes can't confront you can

350
00:31:20,290 --> 00:31:25,510
use err err err 0 TR instruction with
the address of the page publishing

351
00:31:25,510 --> 00:31:32,890
so with with that you can also jump from
one function to the search function and

352
00:31:32,890 --> 00:31:40,150
the user have the option to choose if if
if you have to run the owners and

353
00:31:40,150 --> 00:31:46,780
function or not because I could we have
a set up a tremolo over there which

354
00:31:46,780 --> 00:31:48,010
which was saved

355
00:31:48,010 --> 00:31:52,809
first introduction then we jump back to
the second instruction

356
00:31:56,930 --> 00:32:01,640
they seemed like it was very painful in
our mistakes

357
00:32:01,640 --> 00:32:06,770
six to four pâté devices because there
was no x explicit operation on the pc

358
00:32:06,770 --> 00:32:08,690
what you have to do it

359
00:32:08,690 --> 00:32:15,800
it's like make up for at least three 3
inch extender which means you have all

360
00:32:15,800 --> 00:32:21,919
right like four different for
consequences of instruction to do the

361
00:32:21,920 --> 00:32:28,100
whole thing here is handsome on
optimization we have down you can

362
00:32:28,100 --> 00:32:33,590
utilize our key all same look up name to
look up the symbol address that you are

363
00:32:33,590 --> 00:32:34,370
interested

364
00:32:34,370 --> 00:32:38,449
you don't have to like write instruction
writer

365
00:32:38,450 --> 00:32:42,740
read Carly's yourself directly because
there were you put up that will make the

366
00:32:42,740 --> 00:32:45,560
current module you import a lot of a
different Sarah see

367
00:32:45,560 --> 00:32:52,129
so with this simple you can symbol of a
loading time and also you can use some

368
00:32:52,130 --> 00:33:00,410
existing exist in kernel memory a kernel
function which i used to write the text

369
00:33:00,410 --> 00:33:09,950
segment of the of the colonel or all or
the module module Testament and we also

370
00:33:09,950 --> 00:33:15,320
can use sometimes this is the kind of
numbers are not always available in the

371
00:33:15,320 --> 00:33:21,110
current situation so some devices you on
some devices you have to change you that

372
00:33:21,110 --> 00:33:27,560
the page table yourself with the
coprocessor so you change the permission

373
00:33:27,560 --> 00:33:31,220
with the right her and with the write
permission then you make the necessary

374
00:33:31,220 --> 00:33:35,060
changes in your robe euro back at all
the oil change

375
00:33:35,060 --> 00:33:42,260
so what's the solution of the problem
gets solved

376
00:33:42,980 --> 00:33:50,240
basically we we we get her some kind of
information from the device then we use

377
00:33:50,240 --> 00:33:56,300
the patch patch pipette is it could be a
current more you or san michele code

378
00:33:56,300 --> 00:34:01,550
then we use the colonel information

379
00:34:01,550 --> 00:34:04,760
- -

380
00:34:04,760 --> 00:34:11,540
transform the the the data so we can
have a adaptive

381
00:34:12,940 --> 00:34:21,099
current module or short code so we will
make he makes a big data suitable for

382
00:34:21,099 --> 00:34:23,859
every every kind of more juice

383
00:34:23,859 --> 00:34:31,659
I as you know our current solutions need
a lot of a half of various mutations

384
00:34:31,659 --> 00:34:34,629
like the the required source code

385
00:34:34,629 --> 00:34:40,000
this is very bad because you never want
to get sorted from phone vendors

386
00:34:40,839 --> 00:34:46,869
it's very hard a plus they're all there
are tens of thousand ever Colonel's you

387
00:34:46,869 --> 00:34:52,210
don't want to maintain that the country
and with this with this message that we

388
00:34:52,210 --> 00:34:58,569
can we can load the kernel a little low
the curve low the code to come to

389
00:34:58,569 --> 00:35:04,329
Colonel adaptively so we can minimize
the the bomb vulnerable devices to very

390
00:35:04,329 --> 00:35:07,359
small portion here

391
00:35:07,359 --> 00:35:14,680
here are some some famous vulnerability
that we have fakes so far and we had to

392
00:35:14,680 --> 00:35:18,250
fix him fucking much more than that but
this

393
00:35:18,250 --> 00:35:22,450
these are very typical ones like at our
roots very popular we have seen that

394
00:35:22,450 --> 00:35:23,200
before

395
00:35:23,200 --> 00:35:27,879
and the pimp our route and cv

396
00:35:27,880 --> 00:35:36,250
- solid in 15 1805 this is this is a the
next

397
00:35:36,250 --> 00:35:43,990
p matter with you probably have heard of
the already so and there in the first

398
00:35:43,990 --> 00:35:49,029
one is the embassy em series that is
typical typical lines of frame i wrote

399
00:35:49,030 --> 00:35:56,349
this kind of a device's memory device
have four have one will be the data can

400
00:35:56,349 --> 00:36:04,060
be utilized to map the kernel memory
into their user space so the can change

401
00:36:04,060 --> 00:36:07,569
the content of the of the colonel

402
00:36:07,569 --> 00:36:10,930
with it fix it won't it will never
happen again

403
00:36:11,500 --> 00:36:18,369
so we have successfully develop a
limited our most popular phones like

404
00:36:18,369 --> 00:36:24,040
as for a 77 song devices and animal here
from Samsung

405
00:36:25,540 --> 00:36:33,130
okay you're welcome though and Holly
you're welcome

406
00:36:33,130 --> 00:36:37,180
and si no good

407
00:36:37,180 --> 00:36:41,950
lenovo and I think you you got recognize
the old logos

408
00:36:45,580 --> 00:36:58,509
okay here comes some demo that we are we
prepared a two different demos is not

409
00:36:58,510 --> 00:37:01,510
showing course

410
00:37:05,600 --> 00:37:08,690
oh no problem happens every time when
we're demo

411
00:37:10,280 --> 00:37:15,140
okay great

412
00:37:19,340 --> 00:37:22,340
yeah

413
00:37:23,320 --> 00:37:30,760
yeah this will is what how we connect to
the device then we are using the a rude

414
00:37:30,760 --> 00:37:32,830
binary together with the permission

415
00:37:32,830 --> 00:37:36,069
this is that pin down road

416
00:37:45,819 --> 00:37:48,819
ok

417
00:37:54,930 --> 00:37:57,930
okay so okay

418
00:37:58,650 --> 00:38:06,690
ok we have to have a got the rural
community and the package is how easy is

419
00:38:06,690 --> 00:38:13,410
that what we have mentioned before this
is the samsung as a 4 and a cat

420
00:38:13,410 --> 00:38:18,750
so where you we have to patch the some
part of the of the jump

421
00:38:19,800 --> 00:38:27,780
you know came off we will talk about
people after the patch had succeeded we

422
00:38:27,780 --> 00:38:31,740
can load our kernel module into the
memory

423
00:38:34,920 --> 00:38:41,100
all right in the most successful so we
have a low the model into the memory and

424
00:38:41,100 --> 00:38:50,520
if we try to boot device again we will
never succeed again right model in the

425
00:38:50,520 --> 00:38:53,520
memory

426
00:39:00,650 --> 00:39:03,650
failed

427
00:39:05,680 --> 00:39:08,680
it again

428
00:39:18,030 --> 00:39:21,030
hey here comes another

429
00:39:30,860 --> 00:39:33,860
let's play them

430
00:39:45,860 --> 00:39:55,220
all right here is another dem about it's
actually a Chinese a is actually a

431
00:39:55,220 --> 00:39:59,660
Chinese our vendors phone is is a is a

432
00:40:00,260 --> 00:40:07,100
what do you want - it's a it's a cool
pad days and have to

433
00:40:07,100 --> 00:40:13,250
yeah you get you can get the good
condition

434
00:40:13,250 --> 00:40:17,870
oh sorry it's a Chinese about it doesn't
affect to an understanding

435
00:40:18,380 --> 00:40:28,610
yes coolpad cake at 2.4 . for . for this
is first knew where you store of the

436
00:40:28,610 --> 00:40:39,560
device or devices so if we use a root a
famous to called canvas is a Chinese a

437
00:40:39,560 --> 00:40:46,910
vendor we will use you to get the root
permission from the device and he will

438
00:40:46,910 --> 00:40:51,560
see the Berkeley and is this is a path
this is a routing process

439
00:40:51,560 --> 00:40:56,180
yeah succeed so we get root permission

440
00:40:56,180 --> 00:41:05,960
now we are need to stall the root app
and you will remove all the root

441
00:41:05,960 --> 00:41:16,070
permissions and we reboot

442
00:41:24,970 --> 00:41:28,089
now we use our apt to fix the problem

443
00:41:28,090 --> 00:41:31,330
first we scan the system we can figure
out there like five different

444
00:41:31,330 --> 00:41:34,029
vulnerabilities inside the machine

445
00:41:34,030 --> 00:41:41,530
now we fix it ok you can go everything's
fixed

446
00:41:41,530 --> 00:41:47,770
then if we you you stop the the root app
again we're trying to look to the device

447
00:41:47,770 --> 00:41:50,770
again

448
00:41:56,920 --> 00:41:59,920
take a little time

449
00:42:09,740 --> 00:42:15,049
all right this is the rooting process it
will feel forever

450
00:42:16,040 --> 00:42:28,910
this is actually connected to the to the
Wi-Fi so it has it will get all possible

451
00:42:28,910 --> 00:42:41,750
armed rooting method from from the cloud
in person

452
00:42:42,290 --> 00:42:47,119
so no matter what we do we're trying to
do it try and you will never succeed to

453
00:42:47,119 --> 00:42:48,830
get the permission again

454
00:42:48,830 --> 00:42:54,860
actually can test with other on route
binary is will still get the same real

455
00:42:54,860 --> 00:42:55,460
job

456
00:42:55,460 --> 00:43:03,590
we're just used this is one because this
one is very famous in China a number

457
00:43:03,590 --> 00:43:05,780
what do is just filled it never ends

458
00:43:05,780 --> 00:43:13,250
ok so another sorry i will let the you
don't take it over from here

459
00:43:15,830 --> 00:43:21,049
okay thanks Team are so we have the
technology we can do the adaptive

460
00:43:21,050 --> 00:43:22,640
Colonel life patching

461
00:43:22,640 --> 00:43:28,640
so what's next so any technology cannot
be can be a good weapon but for this

462
00:43:28,640 --> 00:43:29,509
issue

463
00:43:29,510 --> 00:43:32,780
it cannot be fixing one man's hand it
has to be a joint effort

464
00:43:33,590 --> 00:43:38,359
so recall the two problems that we
talked about are the first one is a long

465
00:43:38,359 --> 00:43:39,619
pattern chain

466
00:43:39,619 --> 00:43:44,840
so with this Colonel life patching we
can shorten the pageant chain with one

467
00:43:44,840 --> 00:43:45,710
step

468
00:43:45,710 --> 00:43:51,830
r for the capability mismatching issue
we have to call out the both the vendor

469
00:43:51,830 --> 00:43:56,029
and security researchers to work
together to generate the paths and apply

470
00:43:56,030 --> 00:43:56,960
the patch

471
00:43:56,960 --> 00:44:04,400
I would believe that both parties have
incentive to do this for vendors

472
00:44:04,400 --> 00:44:09,590
if they have more secure products are
you can have more sales and more users

473
00:44:09,590 --> 00:44:14,270
for security providers to can get a
reputation prophets like the way

474
00:44:14,270 --> 00:44:20,390
what has sitting here in this room are
but this is not easy in the current

475
00:44:20,390 --> 00:44:23,190
stage as team just showed we are
building the

476
00:44:23,190 --> 00:44:28,319
is a kernel adaptive and live patching
in app the app tries to first of all

477
00:44:28,319 --> 00:44:34,140
scan all the existing vulnerabilities in
the carnal and then it will try to root

478
00:44:34,140 --> 00:44:35,250
the phone

479
00:44:35,250 --> 00:44:40,349
r by exploiting those possibilities with
the route / rage

480
00:44:40,349 --> 00:44:46,380
you can then apply the patches the
second alternative is to use existing

481
00:44:46,380 --> 00:44:51,089
route for example some I may have
already ruled the foam and provide the

482
00:44:51,089 --> 00:44:56,549
su binary the Sioux service will call
the su service to gain root and apply

483
00:44:56,550 --> 00:45:01,470
the patches but the first two methods
and not ideal

484
00:45:01,470 --> 00:45:06,660
- ideal way is to that vendor give our
privilege to do the colonel adaptive

485
00:45:06,660 --> 00:45:12,299
life patching so only in this way when
the longer have to worry about like root

486
00:45:12,300 --> 00:45:17,819
the phone and we don't have to worry
about some overhead in this step

487
00:45:18,329 --> 00:45:24,960
so if the vendor can integrate the data
, method privilege or bring work in

488
00:45:24,960 --> 00:45:31,200
their own firmware and pre in bad
Colonel agent we can directly call then

489
00:45:31,200 --> 00:45:32,700
this can be very easy

490
00:45:32,700 --> 00:45:39,629
so in a nutshell the echo system will
look like this are in the court of

491
00:45:39,630 --> 00:45:43,950
course the vendor qualification not all
the everyone can contribute the cotton

492
00:45:43,950 --> 00:45:47,098
patch because colin has is quite like
sensitive

493
00:45:47,760 --> 00:45:52,920
if anyone can contribute a live patch
that that will be a disaster because

494
00:45:52,920 --> 00:45:57,480
everyone can plan like that back doors
or new possibilities into the colonel

495
00:45:57,480 --> 00:46:03,359
so we have to do like qualification only
the vendors with good reputation with

496
00:46:03,359 --> 00:46:09,089
good size with that good history can
contribute the light patches and the

497
00:46:09,089 --> 00:46:12,599
second layer is the signature based past
district distribution

498
00:46:13,109 --> 00:46:16,799
so anyone want to publish a life passing
to the framework into the platform

499
00:46:17,609 --> 00:46:23,339
it has assigned the patches first a
later the coordinator are right now if I

500
00:46:23,339 --> 00:46:28,380
do will sign the patch again to ensure
that the past can be released to the

501
00:46:28,380 --> 00:46:34,109
platform and third layer is security
batting so bad you will do the batting

502
00:46:34,109 --> 00:46:36,210
in the first stage

503
00:46:36,210 --> 00:46:40,710
later all the vendors have to do cross
validation on the patches because

504
00:46:40,710 --> 00:46:46,920
Colonel patches as that set is quite
sensitive and it is hard to ensure that

505
00:46:46,920 --> 00:46:54,630
is one hundred percent cling and our are
not vulnerable and the last layer and

506
00:46:54,630 --> 00:46:58,080
which is most important layer is the
reputation ranking

507
00:46:58,080 --> 00:47:03,779
so what we want to make this a similar
to appstore to the iOS App Store that

508
00:47:03,780 --> 00:47:09,270
the user can pick the light patches from
the user interface and he can see the

509
00:47:09,270 --> 00:47:15,630
ranking are the record includes the
vendors ranking or other users ranking

510
00:47:15,630 --> 00:47:23,640
of this patch for example how how how
good the reputation the vendor is or how

511
00:47:23,640 --> 00:47:28,200
stable this patch is on other use of the
phone on the same model

512
00:47:28,200 --> 00:47:31,500
so by combining this arm

513
00:47:31,500 --> 00:47:35,640
one two three four four layers together
we want to establish the I coastal

514
00:47:35,640 --> 00:47:41,339
ecosystem based on the adaptive
compassion framework we just described

515
00:47:41,339 --> 00:47:45,570
so we are still on oral stage

516
00:47:45,570 --> 00:47:49,740
there are some other schedules that will
be announced our this fall

517
00:47:50,250 --> 00:47:56,040
the first is the echo system lines as we
just that we will do a bender

518
00:47:56,040 --> 00:47:57,150
qualification

519
00:47:57,150 --> 00:48:03,510
so right now we r reach out to the major
phone vendors and and Google and other

520
00:48:03,510 --> 00:48:09,570
Chinese big names to join this effort
and second one we are trying to provide

521
00:48:09,570 --> 00:48:16,890
a more flexible and easy to review
passion mak mak mechanism so that's all

522
00:48:16,890 --> 00:48:18,540
about our presentation

523
00:48:18,540 --> 00:48:21,540
thank you and questions are welcomed

524
00:48:22,910 --> 00:48:29,598
any questions yes

525
00:48:38,059 --> 00:48:46,549
right now we are the question is whether
we allow the permanent fix or just just

526
00:48:46,549 --> 00:48:48,170
allow the one time

527
00:48:48,170 --> 00:48:53,359
route one time fix our I think the core
of the question is whether we would

528
00:48:53,359 --> 00:48:59,240
modify the binary if you modify the
binary after the reboot the problem is

529
00:48:59,240 --> 00:48:59,959
gone

530
00:48:59,960 --> 00:49:04,039
if we don't apply the changes to the
binary and just change in your code in

531
00:49:04,039 --> 00:49:09,530
the memory it is just immutable for now
if the user reboots the problem problem

532
00:49:09,530 --> 00:49:10,579
will come again

533
00:49:10,579 --> 00:49:17,960
well we think that this is a this is not
a decision that can be made on all the

534
00:49:17,960 --> 00:49:24,349
devices for some devices like Samsung
devices if we change the binary are the

535
00:49:24,349 --> 00:49:29,480
few diffuse will be burned because it
has the mechanics on to check the hash

536
00:49:29,480 --> 00:49:35,900
of the system image is a system image
that has changes it will burn the fields

537
00:49:35,900 --> 00:49:39,020
and that the warranty will be avoided

538
00:49:39,020 --> 00:49:44,059
so forth us devices we have to ask the
user to choose whether you want to make

539
00:49:44,059 --> 00:49:49,400
the fix permanent or you just want to
make a one-time fix for other devices

540
00:49:49,400 --> 00:49:53,690
that doesn't have this problem we will
recommend the user to do the permanent

541
00:49:53,690 --> 00:49:59,059
effects from the tactical wise we can do
the permanent or temporary effects

542
00:49:59,599 --> 00:50:02,960
no problem at all yeah

543
00:50:02,960 --> 00:50:04,480
thank you

544
00:50:04,480 --> 00:50:15,040
well do you already talked to some
windows and get some reacts or you're

545
00:50:15,040 --> 00:50:16,600
out there idea

546
00:50:16,600 --> 00:50:20,740
yes r that's a good question because
everyone ask us this question

547
00:50:20,740 --> 00:50:27,729
yeah are some vendors it's not quite
happy about this idea because by

548
00:50:27,730 --> 00:50:30,430
injecting code into their colonel

549
00:50:30,430 --> 00:50:36,220
the thing is not like a stable way or
maybe they don't trust us to put coating

550
00:50:36,220 --> 00:50:40,450
the logic but some lenders that were
quite happy about this because they also

551
00:50:40,450 --> 00:50:45,939
care about the users security but they
don't have a good matters to pass the

552
00:50:45,940 --> 00:50:50,980
ball of energy out there in the military
for those of vendors are mostly Chinese

553
00:50:50,980 --> 00:50:57,430
vendors we are trying to like to our
make the process faster to make them

554
00:50:57,430 --> 00:51:02,890
like join this effort for those vendors
that are not happy with this solution

555
00:51:02,890 --> 00:51:09,129
we're trying to our persuade them and
try to download the effect the hopefully

556
00:51:09,130 --> 00:51:11,770
they will change their mind thank you

557
00:51:11,770 --> 00:51:19,570
yeah question a little bit and I i I'm
very determined not maybe the person to

558
00:51:19,570 --> 00:51:23,260
answer it but i'm wondering after took
this is commendable effort right first

559
00:51:23,260 --> 00:51:28,270
of all this is very very nice very good
arm as a as an idea but i'm wondering

560
00:51:30,100 --> 00:51:33,549
people don't trust the vendors they
don't rise the providers

561
00:51:33,550 --> 00:51:37,660
why would they trust by dou by dou is
like chinese google google says they're

562
00:51:37,660 --> 00:51:41,799
not evil and I don't think that people
buy the car in the conference that

563
00:51:41,800 --> 00:51:48,100
Google maybe not evil but not good
either no determined about

564
00:51:48,100 --> 00:51:52,450
so by dou by this similar and it's a
great effort as i said it sounds really

565
00:51:52,450 --> 00:51:53,410
good

566
00:51:53,410 --> 00:51:57,850
why should I believe you uh-huh why the
liver but the anybody believe each other

567
00:51:57,850 --> 00:52:00,640
right how is how are you going to break
that what would it

568
00:52:00,640 --> 00:52:04,480
did you think about it do you have any
plan on it yeah I don't

569
00:52:04,480 --> 00:52:08,980
this is a free market just like other
vendors there's no one can be trusted

570
00:52:08,980 --> 00:52:16,150
are but we're trying to make this our
problem is solvable for user to choose

571
00:52:16,150 --> 00:52:17,740
right now they even

572
00:52:17,740 --> 00:52:21,129
use a 12 security secure their phone
they have no choice

573
00:52:21,130 --> 00:52:25,540
we just want to provide a choice for
them to choose from but after

574
00:52:25,540 --> 00:52:29,740
installation of the demo app as we just
show will list all the colonel

575
00:52:29,740 --> 00:52:33,879
opportunities on the form the user can
ignore them

576
00:52:33,880 --> 00:52:38,619
just ignore the existing the existence
of their vulnerabilities and not to

577
00:52:38,619 --> 00:52:42,970
apply the passage from by to or from
other vendors providing the lab patch

578
00:52:42,970 --> 00:52:47,529
the situation is not worse than their
current situation you have the bottom is

579
00:52:47,530 --> 00:52:49,869
out there right yeah

580
00:52:49,869 --> 00:52:53,170
so the attacker can exploit the
different abilities to gain route

581
00:52:53,170 --> 00:52:55,270
instead of us right

582
00:52:55,270 --> 00:52:58,480
so we just provide a solution to make
them getting better

583
00:52:58,990 --> 00:53:03,910
this is this a choice for them and also
just as a free market they can choose

584
00:53:03,910 --> 00:53:07,330
the are not true that we don't force
them to apply the patches

585
00:53:07,330 --> 00:53:11,619
maybe just the nature of the order
business so I'm overly paranoid Dragon

586
00:53:11,619 --> 00:53:13,150
army that is just crucial

587
00:53:13,150 --> 00:53:18,220
yeah let's get a question though oh by
the way we got the user can only store

588
00:53:18,220 --> 00:53:23,080
the patches they have freedom to to
gotta get rid of the pattern if they do

589
00:53:23,080 --> 00:53:26,080
they are not happy with the results

590
00:53:30,940 --> 00:53:35,079
yeah

591
00:53:36,550 --> 00:53:43,960
any further questions guys no well then
I conclude track to thank you all think

592
00:53:43,960 --> 00:53:44,980
you're more lost

593
00:53:44,980 --> 00:53:47,440
thank you - long and hope to see you
guys tomorrow

