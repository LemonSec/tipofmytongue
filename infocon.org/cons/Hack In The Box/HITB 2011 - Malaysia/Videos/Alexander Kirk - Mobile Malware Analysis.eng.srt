1
00:00:17,380 --> 00:00:20,990
all right thank you very much for the

2
00:00:20,990 --> 00:00:23,540
introduction here so I'm going to start

3
00:00:23,540 --> 00:00:26,300
out actually today by making sure that

4
00:00:26,300 --> 00:00:30,349
you guys are paying attention by giving

5
00:00:30,349 --> 00:00:32,360
out some freebies wow if I can actually

6
00:00:32,360 --> 00:00:34,570
reach with these things does anybody

7
00:00:34,570 --> 00:00:37,520
want to snort t-shirts all right raise

8
00:00:37,520 --> 00:00:40,879
your hands oh she was first oh oh no oh

9
00:00:40,879 --> 00:00:43,489
dear this is this is why I'm American

10
00:00:43,489 --> 00:00:47,150
not a football player so actually I have

11
00:00:47,150 --> 00:00:50,330
more of both the shirts and the pigs and

12
00:00:50,330 --> 00:00:52,699
I'm going to be giving them away at HACC

13
00:00:52,699 --> 00:00:54,500
in the bar this evening at seven thirty

14
00:00:54,500 --> 00:00:56,750
which sourcefire sponsoring so make sure

15
00:00:56,750 --> 00:01:01,970
to to come on thru for that so onto to

16
00:01:01,970 --> 00:01:05,390
the talk itself which i've titled i know

17
00:01:05,390 --> 00:01:07,970
kung fu analyzing mobile malware and

18
00:01:07,970 --> 00:01:10,460
actually the the reason that you know

19
00:01:10,460 --> 00:01:13,600
I've got that that title is because

20
00:01:13,600 --> 00:01:16,790
honestly when i submitted this talk to

21
00:01:16,790 --> 00:01:20,240
hack in the Box originally i didn't know

22
00:01:20,240 --> 00:01:22,549
anything about mobile malware analysis I

23
00:01:22,549 --> 00:01:24,560
just knew that I was going to have to

24
00:01:24,560 --> 00:01:26,990
start doing it soon for work because

25
00:01:26,990 --> 00:01:29,229
sourcefire has customers in the telco

26
00:01:29,229 --> 00:01:32,240
industry who were interested in you know

27
00:01:32,240 --> 00:01:34,189
detection for all the mobile malware

28
00:01:34,189 --> 00:01:36,950
related threats out there and well you

29
00:01:36,950 --> 00:01:38,719
know if I put in for hack in the box it

30
00:01:38,719 --> 00:01:40,729
would force me to get the research done

31
00:01:40,729 --> 00:01:44,329
if if I got accepted and they were kind

32
00:01:44,329 --> 00:01:46,609
enough to bring me out here to Kuala

33
00:01:46,609 --> 00:01:48,770
Lumpur today and well it meant that I

34
00:01:48,770 --> 00:01:50,899
got to cram all this stuff in my brain

35
00:01:50,899 --> 00:01:53,420
as fast as neo in the matrix learn kung

36
00:01:53,420 --> 00:01:59,149
fu so a little bit about the Sourcefire

37
00:01:59,149 --> 00:02:01,069
and the vulnerability research team for

38
00:02:01,069 --> 00:02:03,829
those who may not know us you know I'm

39
00:02:03,829 --> 00:02:05,840
lucky enough to be one of the people who

40
00:02:05,840 --> 00:02:08,330
comes to to security cons and a lot of

41
00:02:08,330 --> 00:02:10,610
people seem to know who I am already but

42
00:02:10,610 --> 00:02:14,270
just in case you don't so Sourcefire was

43
00:02:14,270 --> 00:02:17,210
founded in 2001 vulnerability research

44
00:02:17,210 --> 00:02:19,160
team came along with the founding of the

45
00:02:19,160 --> 00:02:23,569
company there are 25 team members these

46
00:02:23,569 --> 00:02:26,370
days the core group is based out of

47
00:02:26,370 --> 00:02:29,010
lumbia Maryland for those who know the

48
00:02:29,010 --> 00:02:32,030
area it's essentially halfway between

49
00:02:32,030 --> 00:02:34,549
Washington DC and Baltimore Maryland

50
00:02:34,549 --> 00:02:37,349
we've got additional folks in Seattle

51
00:02:37,349 --> 00:02:40,739
Poland Italy and Germany and the the

52
00:02:40,739 --> 00:02:42,900
mission statement that the the marketing

53
00:02:42,900 --> 00:02:46,019
people like to use is that you know we

54
00:02:46,019 --> 00:02:48,060
provide intelligence and protection to

55
00:02:48,060 --> 00:02:50,040
allow our customers to focus on their

56
00:02:50,040 --> 00:02:52,110
core business and really what that means

57
00:02:52,110 --> 00:02:55,530
is that were the guys that right the

58
00:02:55,530 --> 00:02:57,900
detection you know the actual snort

59
00:02:57,900 --> 00:03:00,180
rules that are used to find threats in

60
00:03:00,180 --> 00:03:03,390
the field were the ones that do all the

61
00:03:03,390 --> 00:03:07,170
clam AV signatures as well and so we're

62
00:03:07,170 --> 00:03:10,260
kind of the the public face of source

63
00:03:10,260 --> 00:03:14,209
fire out in the snort community so

64
00:03:14,209 --> 00:03:17,099
moving along here the you know the

65
00:03:17,099 --> 00:03:19,709
question that I think a number of people

66
00:03:19,709 --> 00:03:22,950
may have when when talking about mobile

67
00:03:22,950 --> 00:03:25,349
malware analysis is you know is it a

68
00:03:25,349 --> 00:03:27,480
real threat or is it just a bunch of

69
00:03:27,480 --> 00:03:29,849
hike I think that's an especially

70
00:03:29,849 --> 00:03:32,150
relevant question given the number of

71
00:03:32,150 --> 00:03:34,980
met you know mobile malware talks that I

72
00:03:34,980 --> 00:03:37,200
see here at hack in the Box I mean you

73
00:03:37,200 --> 00:03:38,459
know it's funny I pull up the schedule

74
00:03:38,459 --> 00:03:40,769
here and saw that the previous two talks

75
00:03:40,769 --> 00:03:43,410
were both Android malware analysis

76
00:03:43,410 --> 00:03:45,090
things and I went oh holy crap what am i

77
00:03:45,090 --> 00:03:46,590
what am I going to do to contribute

78
00:03:46,590 --> 00:03:49,950
something you know fresh here but you

79
00:03:49,950 --> 00:03:52,200
know clearly it's a big trending thing I

80
00:03:52,200 --> 00:03:54,359
had an interview with some of the local

81
00:03:54,359 --> 00:03:56,879
press this morning and all they want to

82
00:03:56,879 --> 00:03:58,379
talk about was mobile this and mobile

83
00:03:58,379 --> 00:04:01,230
that and so you know the question is is

84
00:04:01,230 --> 00:04:03,120
is it a real deal or is it a bunch of

85
00:04:03,120 --> 00:04:06,030
hype so some statistics for you climb AV

86
00:04:06,030 --> 00:04:09,019
being the open-source antivirus projects

87
00:04:09,019 --> 00:04:12,480
Sourcefire acquired back in in 2007 and

88
00:04:12,480 --> 00:04:15,000
so we have access to their full database

89
00:04:15,000 --> 00:04:17,880
of malware and they trade samples with

90
00:04:17,880 --> 00:04:19,380
other vendors throughout the world and

91
00:04:19,380 --> 00:04:21,209
so you know it's a reasonable

92
00:04:21,209 --> 00:04:24,210
representation of the amount of malware

93
00:04:24,210 --> 00:04:26,479
that is running around the field we have

94
00:04:26,479 --> 00:04:30,539
962 Android specific samples in the clam

95
00:04:30,539 --> 00:04:35,070
AV database 338 symbian OS samples and

96
00:04:35,070 --> 00:04:37,620
really pretty much nothing for iPhones

97
00:04:37,620 --> 00:04:40,139
which was an interesting little piece of

98
00:04:40,139 --> 00:04:42,810
information but the thing of it is is

99
00:04:42,810 --> 00:04:47,219
that compares to about 40,000 desktop

100
00:04:47,219 --> 00:04:49,289
pieces of malware that come in every

101
00:04:49,289 --> 00:04:52,259
single day so you know you look at the

102
00:04:52,259 --> 00:04:54,749
numbers there and obviously it is it's a

103
00:04:54,749 --> 00:04:58,229
tiny drop in the bucket compared to you

104
00:04:58,229 --> 00:04:59,999
know traditional malware out there and

105
00:04:59,999 --> 00:05:02,249
so you know from that perspective it

106
00:05:02,249 --> 00:05:04,379
seems like well maybe it is just a bunch

107
00:05:04,379 --> 00:05:06,949
of hype maybe it's not really a threat

108
00:05:06,949 --> 00:05:09,360
but the interesting thing that I noticed

109
00:05:09,360 --> 00:05:11,189
is I was you know compiling the numbers

110
00:05:11,189 --> 00:05:13,620
for this talk is that the the rate of

111
00:05:13,620 --> 00:05:15,810
growth in the samples that we're getting

112
00:05:15,810 --> 00:05:18,330
into the climb AV database is actually

113
00:05:18,330 --> 00:05:20,550
fairly high and it is continuing to

114
00:05:20,550 --> 00:05:24,060
accelerate of the 962 samples that are

115
00:05:24,060 --> 00:05:26,789
in that database about 200 of them came

116
00:05:26,789 --> 00:05:28,979
in just within the last month so that

117
00:05:28,979 --> 00:05:30,569
kind of gives you an idea of the

118
00:05:30,569 --> 00:05:34,020
trajectory of where things are going you

119
00:05:34,020 --> 00:05:36,439
know and the reality to of it is is that

120
00:05:36,439 --> 00:05:38,879
these things aren't just showing up in

121
00:05:38,879 --> 00:05:41,039
research databases these aren't just

122
00:05:41,039 --> 00:05:43,770
often labs this stuff is actually out in

123
00:05:43,770 --> 00:05:46,469
the wild you know in doing the research

124
00:05:46,469 --> 00:05:49,050
for this talk I went out and did some

125
00:05:49,050 --> 00:05:51,479
study on where these things actually

126
00:05:51,479 --> 00:05:53,669
appeared in the field and there was

127
00:05:53,669 --> 00:05:55,740
actually there was a Zeus variant that

128
00:05:55,740 --> 00:05:58,979
was released on android in July and

129
00:05:58,979 --> 00:06:01,409
spotted in the wild which is kind of a

130
00:06:01,409 --> 00:06:02,909
scary thing when you consider how much

131
00:06:02,909 --> 00:06:04,740
damage the Zeus botnet has done on

132
00:06:04,740 --> 00:06:06,990
regular computers now it's extending its

133
00:06:06,990 --> 00:06:09,839
reach out to Android phones there are a

134
00:06:09,839 --> 00:06:14,490
number of instant messaging clients that

135
00:06:14,490 --> 00:06:17,129
are designed for the Chinese markets you

136
00:06:17,129 --> 00:06:18,990
know I am is extremely popular in China

137
00:06:18,990 --> 00:06:20,490
you know more so i think the North

138
00:06:20,490 --> 00:06:22,879
America and there were a number of

139
00:06:22,879 --> 00:06:26,430
Trojan you know versions of IM clients

140
00:06:26,430 --> 00:06:28,169
available in different chinese at

141
00:06:28,169 --> 00:06:30,629
markets that have definitely you know

142
00:06:30,629 --> 00:06:33,539
been hitting people out in the field you

143
00:06:33,539 --> 00:06:35,189
know and there's there in addition to

144
00:06:35,189 --> 00:06:38,759
that we saw actually just a little over

145
00:06:38,759 --> 00:06:41,099
a week ago we saw there was in Russia a

146
00:06:41,099 --> 00:06:44,699
SMS Trojan that was being distributed by

147
00:06:44,699 --> 00:06:49,319
QR codes on different websites and you

148
00:06:49,319 --> 00:06:50,849
know that one was interesting we've got

149
00:06:50,849 --> 00:06:52,960
actually 50 different variants

150
00:06:52,960 --> 00:06:55,560
we've collected in the climb AV database

151
00:06:55,560 --> 00:06:57,970
and I thought it was particularly

152
00:06:57,970 --> 00:07:00,130
interesting because it sends text

153
00:07:00,130 --> 00:07:03,009
messages off to premium numbers and thus

154
00:07:03,009 --> 00:07:05,910
actually hits you directly in the wallet

155
00:07:05,910 --> 00:07:08,530
then you know that one led to just a

156
00:07:08,530 --> 00:07:11,380
side thought here that is not the focus

157
00:07:11,380 --> 00:07:13,120
of my talk today but it's something that

158
00:07:13,120 --> 00:07:16,990
I'm actually pairing with babak over the

159
00:07:16,990 --> 00:07:18,460
lockpick village to do some research

160
00:07:18,460 --> 00:07:21,490
that we're looking to present at at

161
00:07:21,490 --> 00:07:23,530
shmoocon this year in Washington DC on

162
00:07:23,530 --> 00:07:25,990
the question of will people actually

163
00:07:25,990 --> 00:07:30,039
scan random QR codes in the wild and so

164
00:07:30,039 --> 00:07:32,229
you know when we found out that these

165
00:07:32,229 --> 00:07:34,780
things were being spread by QR codes in

166
00:07:34,780 --> 00:07:36,460
Russia we you know does could this

167
00:07:36,460 --> 00:07:38,650
happen in the States and so I actually

168
00:07:38,650 --> 00:07:41,410
ran a small experiments in Washington DC

169
00:07:41,410 --> 00:07:44,110
to find out if people would and you see

170
00:07:44,110 --> 00:07:46,690
a picture there that is a newsstand on

171
00:07:46,690 --> 00:07:49,360
the corner of 22nd and h streets

172
00:07:49,360 --> 00:07:51,880
northwest in washington DC that i

173
00:07:51,880 --> 00:07:53,889
printed up that QR code with a little

174
00:07:53,889 --> 00:07:56,440
message you know hey are you tired of

175
00:07:56,440 --> 00:07:58,539
excessive bank fees scan here for more

176
00:07:58,539 --> 00:08:01,479
info and as you can see i didn't put a

177
00:08:01,479 --> 00:08:02,919
hell of a lot of effort into being

178
00:08:02,919 --> 00:08:05,199
sneaky about it i mean if you look at

179
00:08:05,199 --> 00:08:06,930
that that's about as sketchy as it gets

180
00:08:06,930 --> 00:08:09,940
but the funny thing was people actually

181
00:08:09,940 --> 00:08:12,639
did scan these things we sent folks off

182
00:08:12,639 --> 00:08:16,509
to a URL on labs north org that was

183
00:08:16,509 --> 00:08:19,000
tracking the number of hits that came in

184
00:08:19,000 --> 00:08:21,909
the user agent strings you know the time

185
00:08:21,909 --> 00:08:23,830
of day all that sort of stuff and what

186
00:08:23,830 --> 00:08:25,509
we found was there was actually a slow

187
00:08:25,509 --> 00:08:28,300
steady trickle of hits on that thing we

188
00:08:28,300 --> 00:08:30,820
actually had in about a week's time we

189
00:08:30,820 --> 00:08:33,659
got 50 total scans and it was everything

190
00:08:33,659 --> 00:08:37,360
from you know blackberry to iphone to

191
00:08:37,360 --> 00:08:40,179
android with a mix of you know obviously

192
00:08:40,179 --> 00:08:43,419
you see english users but also we saw

193
00:08:43,419 --> 00:08:46,360
korean character sets on the user agent

194
00:08:46,360 --> 00:08:49,620
strings we saw a chinese you know

195
00:08:49,620 --> 00:08:51,970
character set up so there were a variety

196
00:08:51,970 --> 00:08:54,640
of different people actually you know

197
00:08:54,640 --> 00:08:56,440
seeing these things just on the side of

198
00:08:56,440 --> 00:08:58,329
a mailbox or on a new standard whatever

199
00:08:58,329 --> 00:08:58,990
and scan

200
00:08:58,990 --> 00:09:01,570
inning them which you know is

201
00:09:01,570 --> 00:09:02,680
interesting because of all the

202
00:09:02,680 --> 00:09:04,750
possibilities of what you can do once

203
00:09:04,750 --> 00:09:06,459
you've set somebody off to a URL of your

204
00:09:06,459 --> 00:09:10,899
choosing so you know that like I said

205
00:09:10,899 --> 00:09:12,940
that was a quick experiment that

206
00:09:12,940 --> 00:09:15,040
essentially validated the work that's

207
00:09:15,040 --> 00:09:17,260
necessary to be done for more in-depth

208
00:09:17,260 --> 00:09:18,300
research we're going to be presenting

209
00:09:18,300 --> 00:09:21,880
probably in January here so today's talk

210
00:09:21,880 --> 00:09:23,620
kind of like the other ones that came

211
00:09:23,620 --> 00:09:26,890
before me are focused on Android

212
00:09:26,890 --> 00:09:29,410
specifically and you know sort of the

213
00:09:29,410 --> 00:09:32,529
reasons that it makes sense to look at

214
00:09:32,529 --> 00:09:34,360
Android specifically when you're talking

215
00:09:34,360 --> 00:09:36,310
about mobile malware first of all it's

216
00:09:36,310 --> 00:09:39,190
an open well documented platform you

217
00:09:39,190 --> 00:09:41,529
know unlike a platform that starts with

218
00:09:41,529 --> 00:09:45,490
an i and ends with a phone and you know

219
00:09:45,490 --> 00:09:47,860
what that means is that you know there's

220
00:09:47,860 --> 00:09:50,980
lots of good tools available for doing

221
00:09:50,980 --> 00:09:54,070
analysis on you know on Android malware

222
00:09:54,070 --> 00:09:57,730
every time I ran into a problem when I

223
00:09:57,730 --> 00:10:00,820
was starting to do this research I put

224
00:10:00,820 --> 00:10:02,380
in a quick search on Google in two

225
00:10:02,380 --> 00:10:04,959
seconds later I had an active project on

226
00:10:04,959 --> 00:10:06,579
google code or some other place that

227
00:10:06,579 --> 00:10:09,370
solve the problem for me so had no

228
00:10:09,370 --> 00:10:12,310
difficulty getting tools to do the work

229
00:10:12,310 --> 00:10:14,170
and that you know that makes your job

230
00:10:14,170 --> 00:10:15,339
easier when you're doing analysis

231
00:10:15,339 --> 00:10:18,100
obviously you know the other reality of

232
00:10:18,100 --> 00:10:21,370
it is that same openness makes Android

233
00:10:21,370 --> 00:10:24,910
easy for attackers to use at the end of

234
00:10:24,910 --> 00:10:27,459
the day hey it's a linux kernel I know

235
00:10:27,459 --> 00:10:29,380
how to hack this you know there's plenty

236
00:10:29,380 --> 00:10:30,760
of people out there that know all about

237
00:10:30,760 --> 00:10:33,310
Lennox internals that know Java which

238
00:10:33,310 --> 00:10:35,290
all the applications are written in it's

239
00:10:35,290 --> 00:10:37,980
really not a huge learning curve for

240
00:10:37,980 --> 00:10:41,200
attackers to pick up to understand the

241
00:10:41,200 --> 00:10:43,240
environment to create an app that does

242
00:10:43,240 --> 00:10:45,490
malicious things and so it makes it an

243
00:10:45,490 --> 00:10:48,850
easier target at the end of the day and

244
00:10:48,850 --> 00:10:50,290
of course the other reality is that

245
00:10:50,290 --> 00:10:52,959
Android has about fifty percent market

246
00:10:52,959 --> 00:10:55,810
share of the smartphone market depending

247
00:10:55,810 --> 00:10:57,430
upon you know which study you look at at

248
00:10:57,430 --> 00:10:59,709
which time you know but even if it was

249
00:10:59,709 --> 00:11:01,600
only thirty or forty percent obviously

250
00:11:01,600 --> 00:11:04,240
that's as big it's relevant it's it's

251
00:11:04,240 --> 00:11:07,470
something that matters in the field so

252
00:11:07,470 --> 00:11:10,360
the whole process of this I said I'd if

253
00:11:10,360 --> 00:11:11,770
I'm if I'm starting from scratch the

254
00:11:11,770 --> 00:11:12,490
question is

255
00:11:12,490 --> 00:11:16,209
is alright APK is in droid package files

256
00:11:16,209 --> 00:11:19,209
and so a question is I've gotten APK now

257
00:11:19,209 --> 00:11:22,810
what what is this and it turns out that

258
00:11:22,810 --> 00:11:24,459
it's actually just a zip file with a

259
00:11:24,459 --> 00:11:26,980
different extension you can actually

260
00:11:26,980 --> 00:11:30,540
just run good old unzip on you know a

261
00:11:30,540 --> 00:11:32,830
command prompt and it will dump out all

262
00:11:32,830 --> 00:11:34,899
the files for you no password no

263
00:11:34,899 --> 00:11:36,490
encryption scheme none of that just

264
00:11:36,490 --> 00:11:39,550
straight up zip file and when you first

265
00:11:39,550 --> 00:11:41,250
open this thing and get a whole bunch of

266
00:11:41,250 --> 00:11:44,649
well things you don't care about there's

267
00:11:44,649 --> 00:11:47,850
a meta information directory that has

268
00:11:47,850 --> 00:11:50,440
crypto certificates so these things are

269
00:11:50,440 --> 00:11:52,180
digitally signed and you can do identity

270
00:11:52,180 --> 00:11:54,910
verification there's a manifest file

271
00:11:54,910 --> 00:11:58,390
that is full of sha Wan hashes that get

272
00:11:58,390 --> 00:12:01,270
checked to ensure package integrity so

273
00:12:01,270 --> 00:12:02,890
things were downloaded properly and not

274
00:12:02,890 --> 00:12:06,160
corrupted in transit there is there's an

275
00:12:06,160 --> 00:12:09,370
asset directory that has essentially it

276
00:12:09,370 --> 00:12:12,520
is etsy for the application so that it

277
00:12:12,520 --> 00:12:14,589
can store all of its config settings and

278
00:12:14,589 --> 00:12:16,779
you know persistent variables and things

279
00:12:16,779 --> 00:12:19,750
like that there's a manifest directory

280
00:12:19,750 --> 00:12:21,940
that has an XML file that is full of

281
00:12:21,940 --> 00:12:24,399
things that for you know a malware

282
00:12:24,399 --> 00:12:26,100
analyst you really don't care a lot

283
00:12:26,100 --> 00:12:28,899
there's also a res directory that is

284
00:12:28,899 --> 00:12:31,899
resources that it's mostly the images

285
00:12:31,899 --> 00:12:34,209
you know that make up the GUI and all

286
00:12:34,209 --> 00:12:36,240
the pretty stuff that goes along with

287
00:12:36,240 --> 00:12:40,390
with the application so alright so

288
00:12:40,390 --> 00:12:41,620
there's a bunch of crap we don't care

289
00:12:41,620 --> 00:12:43,930
about but here's the first thing we care

290
00:12:43,930 --> 00:12:46,360
about the manifest not just you know not

291
00:12:46,360 --> 00:12:47,950
the manifest be record but there is an

292
00:12:47,950 --> 00:12:51,490
android manifest xml file and i saw that

293
00:12:51,490 --> 00:12:55,570
oh sweet xml that's easy vio oh damn it

294
00:12:55,570 --> 00:12:59,649
Google that's not XML it's actually a

295
00:12:59,649 --> 00:13:02,950
debased for file that contains XML and

296
00:13:02,950 --> 00:13:06,640
some other stuff and when I saw okay

297
00:13:06,640 --> 00:13:08,800
debase forearm old-school I remember

298
00:13:08,800 --> 00:13:11,560
that from the 80s yeah whatever let me

299
00:13:11,560 --> 00:13:14,440
go get okay there's a debased 42 lon 1x

300
00:13:14,440 --> 00:13:15,290
all right

301
00:13:15,290 --> 00:13:18,560
app get whatever but no it's not

302
00:13:18,560 --> 00:13:21,500
actually fee-based for precisely either

303
00:13:21,500 --> 00:13:23,959
because the standard tools to read those

304
00:13:23,959 --> 00:13:26,509
kinds of databases on lenox there

305
00:13:26,509 --> 00:13:28,190
they're kind enough to just crash on you

306
00:13:28,190 --> 00:13:30,220
when you try to open up that

307
00:13:30,220 --> 00:13:33,920
androidmanifest.xml file and you know

308
00:13:33,920 --> 00:13:36,410
thankfully hey this is you know back to

309
00:13:36,410 --> 00:13:40,220
my earlier point did some more googling

310
00:13:40,220 --> 00:13:41,569
once I figured out that it wasn't a

311
00:13:41,569 --> 00:13:43,880
standard debased for file and found out

312
00:13:43,880 --> 00:13:46,100
that there is a tool that will actually

313
00:13:46,100 --> 00:13:48,190
specifically dump the

314
00:13:48,190 --> 00:13:51,139
androidmanifest.xml into standard XML

315
00:13:51,139 --> 00:13:54,920
format and it's available at the URL

316
00:13:54,920 --> 00:13:57,740
that I've highlighted there that you

317
00:13:57,740 --> 00:13:59,120
know Dylan was saying earlier that the

318
00:13:59,120 --> 00:14:00,050
slides for this are going to be

319
00:14:00,050 --> 00:14:01,850
available online as soon as the talk is

320
00:14:01,850 --> 00:14:04,250
done so anyone who wants to get that URL

321
00:14:04,250 --> 00:14:06,170
I'm sure you can copy it down now but

322
00:14:06,170 --> 00:14:08,389
you can also get it later online and the

323
00:14:08,389 --> 00:14:09,800
cool thing about this tool is that is

324
00:14:09,800 --> 00:14:12,230
completely cross-platform it's available

325
00:14:12,230 --> 00:14:15,050
I in distributions for linux windows and

326
00:14:15,050 --> 00:14:17,149
mac so it doesn't matter what platform

327
00:14:17,149 --> 00:14:19,100
you you like to do your analysis on

328
00:14:19,100 --> 00:14:23,529
they've got a tool available for that so

329
00:14:23,529 --> 00:14:26,240
the other thing that is in there once

330
00:14:26,240 --> 00:14:28,790
you get to the actual XML file and

331
00:14:28,790 --> 00:14:30,500
through all the Google specific junk

332
00:14:30,500 --> 00:14:33,949
that's on top of it is there are

333
00:14:33,949 --> 00:14:36,980
permissions declared in that XML file

334
00:14:36,980 --> 00:14:40,519
and essentially all android apps have to

335
00:14:40,519 --> 00:14:43,160
declare what permissions they wish to

336
00:14:43,160 --> 00:14:45,949
have and that is anybody who's got a

337
00:14:45,949 --> 00:14:47,569
droid phone and has installed an app

338
00:14:47,569 --> 00:14:49,459
knows that when you're updating or

339
00:14:49,459 --> 00:14:51,440
installing an app it pops up and says

340
00:14:51,440 --> 00:14:54,560
this application wants to access the

341
00:14:54,560 --> 00:14:56,720
internet have applications to phone

342
00:14:56,720 --> 00:15:00,290
state have access to battery life so it

343
00:15:00,290 --> 00:15:01,939
you know all those sorts of things and

344
00:15:01,939 --> 00:15:03,769
that the permissions that are listed in

345
00:15:03,769 --> 00:15:06,560
the xml file map directly to what's

346
00:15:06,560 --> 00:15:08,389
displayed on screen when you actually do

347
00:15:08,389 --> 00:15:10,250
the installation so you can see right

348
00:15:10,250 --> 00:15:13,040
there what an application wants to have

349
00:15:13,040 --> 00:15:15,980
permission to do and essentially this is

350
00:15:15,980 --> 00:15:18,350
google's attempt to do the right thing

351
00:15:18,350 --> 00:15:21,680
in quotes you know the idea is users

352
00:15:21,680 --> 00:15:23,779
will have full control over what a nap

353
00:15:23,779 --> 00:15:25,670
might be able to do they'll be able to

354
00:15:25,670 --> 00:15:27,250
see right on screen

355
00:15:27,250 --> 00:15:30,000
that okay this app wants them to have

356
00:15:30,000 --> 00:15:32,680
fine location information on me which

357
00:15:32,680 --> 00:15:34,180
means the contract me wherever I go and

358
00:15:34,180 --> 00:15:35,980
I'm not so sure I like that so maybe I

359
00:15:35,980 --> 00:15:38,950
won't install it you know there's sort

360
00:15:38,950 --> 00:15:42,850
of a clear segregation of powers in that

361
00:15:42,850 --> 00:15:47,050
you know you have a good Lennox style

362
00:15:47,050 --> 00:15:49,180
you know permissions set up and it's not

363
00:15:49,180 --> 00:15:51,430
just a muddy case of any app can do

364
00:15:51,430 --> 00:15:54,310
anything and you know the idea i think

365
00:15:54,310 --> 00:15:57,100
from google was that developers would be

366
00:15:57,100 --> 00:15:59,560
constrained to exactly the things that

367
00:15:59,560 --> 00:16:01,150
they asked for upfront and it wouldn't

368
00:16:01,150 --> 00:16:03,880
be a case of any app can do anything but

369
00:16:03,880 --> 00:16:06,040
the reality of course is that while that

370
00:16:06,040 --> 00:16:08,740
all sounds good in the lab it's messier

371
00:16:08,740 --> 00:16:11,770
than that in the field you know some of

372
00:16:11,770 --> 00:16:14,230
the permissions that are out there just

373
00:16:14,230 --> 00:16:16,270
looks scary right off the top I'm

374
00:16:16,270 --> 00:16:17,950
starting to dig through there and I saw

375
00:16:17,950 --> 00:16:20,440
the call phone permission I said call

376
00:16:20,440 --> 00:16:22,270
phone okay that sounds interesting let

377
00:16:22,270 --> 00:16:24,490
me pull up the google documentation on

378
00:16:24,490 --> 00:16:26,650
the API what does that mean now I quote

379
00:16:26,650 --> 00:16:29,140
allows an application to initiate a

380
00:16:29,140 --> 00:16:30,850
phone call without going through the

381
00:16:30,850 --> 00:16:33,070
dialer user interface for the user to

382
00:16:33,070 --> 00:16:36,030
confirm that the call is being placed

383
00:16:36,030 --> 00:16:38,589
holy so my phone can just call

384
00:16:38,589 --> 00:16:40,060
somebody without me you know without

385
00:16:40,060 --> 00:16:42,190
asking me what kind of trap is that

386
00:16:42,190 --> 00:16:44,410
Google what are you doing even allowing

387
00:16:44,410 --> 00:16:46,540
an application to have a permission like

388
00:16:46,540 --> 00:16:50,500
that now I said okay of 877 apps that I

389
00:16:50,500 --> 00:16:52,630
had when I was doing my analysis that I

390
00:16:52,630 --> 00:16:55,960
knew were malicious 98 @ have that

391
00:16:55,960 --> 00:16:59,320
specific permission and so clearly you

392
00:16:59,320 --> 00:17:01,390
know I'm focusing research on this what

393
00:17:01,390 --> 00:17:02,890
is this all about how does it operate

394
00:17:02,890 --> 00:17:05,920
and that the very afternoon that

395
00:17:05,920 --> 00:17:08,800
happened my ING direct banking

396
00:17:08,800 --> 00:17:11,250
application my totally legit bank online

397
00:17:11,250 --> 00:17:14,079
setup wanted to do an update and I

398
00:17:14,079 --> 00:17:15,550
should pay attention to the permissions

399
00:17:15,550 --> 00:17:19,660
on this I want allow applications to

400
00:17:19,660 --> 00:17:22,060
make phone calls without user

401
00:17:22,060 --> 00:17:25,030
interaction holy did I just

402
00:17:25,030 --> 00:17:28,240
discover a huge flaw in you know a major

403
00:17:28,240 --> 00:17:30,760
bank app is am I going to be able to

404
00:17:30,760 --> 00:17:32,500
make you know international news on how

405
00:17:32,500 --> 00:17:36,880
ridiculous the ING Bank app is as it

406
00:17:36,880 --> 00:17:38,750
turns out no

407
00:17:38,750 --> 00:17:40,010
you know of course you would have heard

408
00:17:40,010 --> 00:17:41,660
about it by now if I had you know made

409
00:17:41,660 --> 00:17:45,200
the international news but what happened

410
00:17:45,200 --> 00:17:48,500
in that particular case is that the

411
00:17:48,500 --> 00:17:52,460
program itself takes care of prompting

412
00:17:52,460 --> 00:17:54,170
the user for whether or not they want to

413
00:17:54,170 --> 00:17:58,340
make a call on its own and actually that

414
00:17:58,340 --> 00:17:59,480
screen is good enough that you can

415
00:17:59,480 --> 00:18:01,250
probably read but this is the Java

416
00:18:01,250 --> 00:18:06,020
source of the the piece that leads up to

417
00:18:06,020 --> 00:18:08,390
making a phone call in the ING Direct

418
00:18:08,390 --> 00:18:10,580
app and it you can see it says message

419
00:18:10,580 --> 00:18:14,030
box you know declare the variable and

420
00:18:14,030 --> 00:18:17,390
it's it has a string for calling and it

421
00:18:17,390 --> 00:18:19,880
prompts you with a you know do you want

422
00:18:19,880 --> 00:18:22,250
yes or no to make a call and I pulled it

423
00:18:22,250 --> 00:18:24,260
up in reality and it was easy enough to

424
00:18:24,260 --> 00:18:26,270
find it's in the little contact us link

425
00:18:26,270 --> 00:18:27,650
and it says do you want to make a call

426
00:18:27,650 --> 00:18:29,900
and if so it just makes the call without

427
00:18:29,900 --> 00:18:32,030
you having to press the green dial

428
00:18:32,030 --> 00:18:35,390
button so you know not that scary at the

429
00:18:35,390 --> 00:18:38,450
end of the day and it turns out you know

430
00:18:38,450 --> 00:18:41,090
even more interesting you know part of

431
00:18:41,090 --> 00:18:43,040
the thought process going into this was

432
00:18:43,040 --> 00:18:45,200
that permissions would be a really

433
00:18:45,200 --> 00:18:47,630
valuable sort of first layer of data on

434
00:18:47,630 --> 00:18:49,600
whether or not something is malicious

435
00:18:49,600 --> 00:18:53,680
and that it's it's muddier than that

436
00:18:53,680 --> 00:18:56,570
most of the applications that have call

437
00:18:56,570 --> 00:18:59,120
phone as a permission listed don't

438
00:18:59,120 --> 00:19:03,080
actually use that permission it's you

439
00:19:03,080 --> 00:19:06,020
know not a sure thing that if it asks

440
00:19:06,020 --> 00:19:07,460
for permission to do something it

441
00:19:07,460 --> 00:19:09,200
actually does something with it and of

442
00:19:09,200 --> 00:19:11,240
course you know I had a different app

443
00:19:11,240 --> 00:19:15,140
that asked for all the permissions that

444
00:19:15,140 --> 00:19:17,060
are listed there access network state

445
00:19:17,060 --> 00:19:19,270
talk to the camera expand the status bar

446
00:19:19,270 --> 00:19:23,180
vibrate send SMS battery just all sorts

447
00:19:23,180 --> 00:19:24,770
of things and when I looked at the code

448
00:19:24,770 --> 00:19:27,890
it actually used two of those

449
00:19:27,890 --> 00:19:32,150
permissions and so while it's it's a

450
00:19:32,150 --> 00:19:36,950
screen in the sense that without having

451
00:19:36,950 --> 00:19:39,170
a given permission declared you can't

452
00:19:39,170 --> 00:19:41,240
actually perform the function necessary

453
00:19:41,240 --> 00:19:43,190
you know unless you route the entire

454
00:19:43,190 --> 00:19:44,720
phone which essentially none of these

455
00:19:44,720 --> 00:19:48,500
apps do just because a given red flag

456
00:19:48,500 --> 00:19:49,400
permission is

457
00:19:49,400 --> 00:19:51,140
there doesn't mean that you're going to

458
00:19:51,140 --> 00:19:53,000
see that functionality used by the app

459
00:19:53,000 --> 00:19:57,920
in the wild and you know I said well is

460
00:19:57,920 --> 00:20:00,680
there any other value in this process of

461
00:20:00,680 --> 00:20:03,320
analyzing permissions and so I compared

462
00:20:03,320 --> 00:20:04,760
the number of permissions that were

463
00:20:04,760 --> 00:20:07,610
requested in about 1400 legitimate apps

464
00:20:07,610 --> 00:20:11,180
versus 760 malicious apps of the eight

465
00:20:11,180 --> 00:20:13,340
hundred odd that I had analyzed there's

466
00:20:13,340 --> 00:20:14,690
a number that don't even ask for any

467
00:20:14,690 --> 00:20:16,070
permissions at all are essentially

468
00:20:16,070 --> 00:20:20,450
broken and I did note that you know the

469
00:20:20,450 --> 00:20:22,130
the median number of permissions

470
00:20:22,130 --> 00:20:24,710
requested by malicious apps was seven

471
00:20:24,710 --> 00:20:27,680
and legitimate apps asked for three and

472
00:20:27,680 --> 00:20:29,540
I thought well maybe maybe you know

473
00:20:29,540 --> 00:20:31,390
that's an indicator that you can look at

474
00:20:31,390 --> 00:20:35,210
just with this XML analysis but the

475
00:20:35,210 --> 00:20:38,630
reality of it was is that there was you

476
00:20:38,630 --> 00:20:41,660
know one malicious app that asked for 39

477
00:20:41,660 --> 00:20:44,480
permissions and a legitimate app that

478
00:20:44,480 --> 00:20:47,540
asked for 34 and the funny thing was is

479
00:20:47,540 --> 00:20:49,190
you know as I sifted through and looked

480
00:20:49,190 --> 00:20:50,900
at the legitimate apps that asked for

481
00:20:50,900 --> 00:20:52,760
the most permissions the one that asked

482
00:20:52,760 --> 00:20:55,430
for the most was the net kin mobile AV

483
00:20:55,430 --> 00:20:58,340
sweet which I I ohm is that mrs. fait

484
00:20:58,340 --> 00:21:00,080
que veas is real no it actually turns

485
00:21:00,080 --> 00:21:01,250
out it's a perfectly legitimate

486
00:21:01,250 --> 00:21:04,340
well-reviewed mobile antivirus tool but

487
00:21:04,340 --> 00:21:05,980
there were actually a number of

488
00:21:05,980 --> 00:21:08,810
different emerging mobile antivirus

489
00:21:08,810 --> 00:21:10,550
platforms and they were the ones that

490
00:21:10,550 --> 00:21:13,460
occupy the top end of the permission

491
00:21:13,460 --> 00:21:15,740
used spectrum for legitimate

492
00:21:15,740 --> 00:21:18,380
applications out there and you know

493
00:21:18,380 --> 00:21:20,300
essentially the the statistical

494
00:21:20,300 --> 00:21:21,980
distribution was just scattered all over

495
00:21:21,980 --> 00:21:23,840
the place or was not good clumping and

496
00:21:23,840 --> 00:21:26,030
so the number of permissions that your

497
00:21:26,030 --> 00:21:29,720
request isn't just a simple red flag

498
00:21:29,720 --> 00:21:31,280
that you can end your analysis there

499
00:21:31,280 --> 00:21:33,380
it's it's a starting point but it's not

500
00:21:33,380 --> 00:21:35,810
definitive in any way and of course it

501
00:21:35,810 --> 00:21:38,750
goes back to the issue of how I say it

502
00:21:38,750 --> 00:21:40,400
was google was trying to do the right

503
00:21:40,400 --> 00:21:42,800
thing with permissions here but it's a

504
00:21:42,800 --> 00:21:44,930
messy situation because the reality of

505
00:21:44,930 --> 00:21:48,170
it is sure it declares on your phone all

506
00:21:48,170 --> 00:21:50,210
the things that an app wants to do but

507
00:21:50,210 --> 00:21:52,220
who the hell looks at that when they

508
00:21:52,220 --> 00:21:55,250
install their app nobody except maybe

509
00:21:55,250 --> 00:21:57,530
security researchers and even in my case

510
00:21:57,530 --> 00:21:59,420
I haven't paid attention to them until i

511
00:21:59,420 --> 00:22:01,070
started doing mobile malware now

512
00:22:01,070 --> 00:22:04,159
and I'm a paranoid heckler type so it's

513
00:22:04,159 --> 00:22:06,230
just at the end of the day it's like you

514
00:22:06,230 --> 00:22:07,820
know end-user license agreements yeah

515
00:22:07,820 --> 00:22:09,380
yeah click-through sure whatever i agree

516
00:22:09,380 --> 00:22:13,519
i sell my soul to google you know of

517
00:22:13,519 --> 00:22:15,200
course you know they're not completely

518
00:22:15,200 --> 00:22:18,110
without value there is the send SMS

519
00:22:18,110 --> 00:22:19,880
permission is the one that i thought was

520
00:22:19,880 --> 00:22:22,130
the scariest out there there was one app

521
00:22:22,130 --> 00:22:23,840
that i thought was especially hilarious

522
00:22:23,840 --> 00:22:26,299
it's called porno player and the only

523
00:22:26,299 --> 00:22:29,269
permission that ask for is send SMS so

524
00:22:29,269 --> 00:22:31,669
essentially it tricks horny guys and

525
00:22:31,669 --> 00:22:33,830
sweet i'm going to get all this hot you

526
00:22:33,830 --> 00:22:36,139
know video chick on chick action and

527
00:22:36,139 --> 00:22:37,580
then no you just get a huge phone bill

528
00:22:37,580 --> 00:22:39,620
because they're sending off toll

529
00:22:39,620 --> 00:22:41,240
messages that are going to show up and

530
00:22:41,240 --> 00:22:43,309
you know now your wife's going to go hey

531
00:22:43,309 --> 00:22:45,110
what do you what do you have all these

532
00:22:45,110 --> 00:22:46,970
premium numbers on here oh sorry honey i

533
00:22:46,970 --> 00:22:48,200
was just trying to get porno player

534
00:22:48,200 --> 00:22:52,009
running and the thing about that

535
00:22:52,009 --> 00:22:54,620
particular call is it happens you can

536
00:22:54,620 --> 00:22:57,200
send a text message completely in the

537
00:22:57,200 --> 00:23:00,259
background there's no box that pops up

538
00:23:00,259 --> 00:23:03,169
that shows that this has happened you

539
00:23:03,169 --> 00:23:05,899
know with the call phone permission you

540
00:23:05,899 --> 00:23:08,750
at least get the dialer you don't get

541
00:23:08,750 --> 00:23:11,210
the dialer prompt but you get the little

542
00:23:11,210 --> 00:23:13,700
phone display showing that a call is in

543
00:23:13,700 --> 00:23:17,149
progress with send SMS the text messages

544
00:23:17,149 --> 00:23:19,549
happens in the background and you know

545
00:23:19,549 --> 00:23:21,740
the reality of that is with if you were

546
00:23:21,740 --> 00:23:23,509
to try a scam where you dial one of

547
00:23:23,509 --> 00:23:25,309
those numbers in the Caribbean that

548
00:23:25,309 --> 00:23:28,340
chart is 499 a minute or whatever a user

549
00:23:28,340 --> 00:23:31,490
can notice that the phone call screen is

550
00:23:31,490 --> 00:23:35,149
up and terminated but a text message it

551
00:23:35,149 --> 00:23:37,759
discharges instantaneously so you can

552
00:23:37,759 --> 00:23:39,139
silently be sitting around in the

553
00:23:39,139 --> 00:23:41,029
background racking up hundreds or even

554
00:23:41,029 --> 00:23:42,889
thousands of dollars of charges on any

555
00:23:42,889 --> 00:23:45,080
given phone and the user will have no

556
00:23:45,080 --> 00:23:49,700
idea that it's going on one quick sort

557
00:23:49,700 --> 00:23:52,429
of side notes on the issue of Android

558
00:23:52,429 --> 00:23:54,559
emulators and text messaging and i'll

559
00:23:54,559 --> 00:23:56,450
talk more about the emulator process

560
00:23:56,450 --> 00:23:58,789
later on here but one of the one of the

561
00:23:58,789 --> 00:24:01,039
big drawbacks of using an emulator to

562
00:24:01,039 --> 00:24:03,500
study text messaging is that it's not

563
00:24:03,500 --> 00:24:05,419
actually rigged up to a phone network

564
00:24:05,419 --> 00:24:08,870
you know I can't turn my emulator on to

565
00:24:08,870 --> 00:24:11,750
my verizon or AT&T you know whatever the

566
00:24:11,750 --> 00:24:13,429
Malaysian cell phone service happens to

567
00:24:13,429 --> 00:24:13,610
be

568
00:24:13,610 --> 00:24:17,460
and the the emulator itself can in fact

569
00:24:17,460 --> 00:24:20,760
send text messages but just to another

570
00:24:20,760 --> 00:24:23,340
emulator and essentially the Google

571
00:24:23,340 --> 00:24:25,260
documentation shows that it's designed

572
00:24:25,260 --> 00:24:27,809
in such a way so that you specify the

573
00:24:27,809 --> 00:24:30,120
port number that the second emulator is

574
00:24:30,120 --> 00:24:32,250
listening on as the phone number that

575
00:24:32,250 --> 00:24:34,679
you're sending a text to so you know

576
00:24:34,679 --> 00:24:36,630
your first emulator always shows up on

577
00:24:36,630 --> 00:24:39,929
port 55 54 and second ones always 55 56

578
00:24:39,929 --> 00:24:42,720
and so all the documentation shows that

579
00:24:42,720 --> 00:24:45,090
that's how it works you know in theory

580
00:24:45,090 --> 00:24:48,059
you could capture text messages by

581
00:24:48,059 --> 00:24:50,159
listening to that court with a you know

582
00:24:50,159 --> 00:24:52,770
TCP dump or Wireshark or whatever but I

583
00:24:52,770 --> 00:24:55,770
was not able to get that to function in

584
00:24:55,770 --> 00:24:57,390
my research and you know maybe that's

585
00:24:57,390 --> 00:24:59,520
just a what I get for for being so late

586
00:24:59,520 --> 00:25:03,090
to the game on this so you know moving

587
00:25:03,090 --> 00:25:05,460
wrong past permissions the other really

588
00:25:05,460 --> 00:25:07,230
useful piece that you get out of

589
00:25:07,230 --> 00:25:10,640
unzipping an APK file is the actual code

590
00:25:10,640 --> 00:25:14,700
which is in a file called clases de X so

591
00:25:14,700 --> 00:25:16,620
everybody's here has probably heard hey

592
00:25:16,620 --> 00:25:19,320
Android is Java powered so the actual

593
00:25:19,320 --> 00:25:21,929
code itself that should be java bytecode

594
00:25:21,929 --> 00:25:25,320
right no not so much it turns out that

595
00:25:25,320 --> 00:25:27,799
it's actually a dalek executable file

596
00:25:27,799 --> 00:25:30,299
which is a format that's specifically

597
00:25:30,299 --> 00:25:33,000
designed for register-based virtual

598
00:25:33,000 --> 00:25:36,779
machines that Android devices are a good

599
00:25:36,779 --> 00:25:39,480
example of and the whole point of it is

600
00:25:39,480 --> 00:25:42,080
it's specifically set up for speed on

601
00:25:42,080 --> 00:25:45,240
resource constrained systems so not only

602
00:25:45,240 --> 00:25:47,100
mobile phones but embedded devices

603
00:25:47,100 --> 00:25:50,100
things that don't have you know eight

604
00:25:50,100 --> 00:25:53,399
core 2.4 gigahertz and you know 16 gigs

605
00:25:53,399 --> 00:25:55,620
of ram but are you know more like five

606
00:25:55,620 --> 00:25:58,409
12 megahertz and you know a couple of

607
00:25:58,409 --> 00:26:00,659
gigs of ram and what essentially happens

608
00:26:00,659 --> 00:26:03,390
when you are compiling an Android

609
00:26:03,390 --> 00:26:06,149
application is that the java bytecode is

610
00:26:06,149 --> 00:26:08,730
translated into dalvik bytecode before

611
00:26:08,730 --> 00:26:12,480
installation so you know I said all

612
00:26:12,480 --> 00:26:14,399
right well how do i actually get at the

613
00:26:14,399 --> 00:26:17,309
code because it's hard to do you know

614
00:26:17,309 --> 00:26:19,320
analysis of code without actually being

615
00:26:19,320 --> 00:26:20,909
able to see it anything but a binary

616
00:26:20,909 --> 00:26:24,210
format an APK tool that i mentioned

617
00:26:24,210 --> 00:26:25,690
earlier that that process

618
00:26:25,690 --> 00:26:27,460
is the xml file into a human readable

619
00:26:27,460 --> 00:26:31,210
format actually includes a Dex file

620
00:26:31,210 --> 00:26:34,990
disassembler and you can see here this

621
00:26:34,990 --> 00:26:37,149
is an example of some of the disassembly

622
00:26:37,149 --> 00:26:40,210
output that it shows and it you know I

623
00:26:40,210 --> 00:26:42,879
don't expect you two to sit down and

624
00:26:42,879 --> 00:26:44,769
read all that because the reality of it

625
00:26:44,769 --> 00:26:50,259
is that I didn't so it turns out that if

626
00:26:50,259 --> 00:26:53,740
you think about it Dex is derived from

627
00:26:53,740 --> 00:26:57,909
Java so can you convert Dex back in the

628
00:26:57,909 --> 00:27:02,110
job makes sense why wouldn't you and you

629
00:27:02,110 --> 00:27:04,690
know the reality of it is is like I was

630
00:27:04,690 --> 00:27:07,600
saying that this assembled language that

631
00:27:07,600 --> 00:27:10,029
you get back out from apktool not

632
00:27:10,029 --> 00:27:12,129
exactly easy to read even if you know

633
00:27:12,129 --> 00:27:15,720
like x86 assembly you know I know enough

634
00:27:15,720 --> 00:27:18,789
x86 assembly to be dangerous i'm not a

635
00:27:18,789 --> 00:27:20,710
brilliant reverse engineer but you know

636
00:27:20,710 --> 00:27:24,070
i can look at a pop pop read or you know

637
00:27:24,070 --> 00:27:25,600
something like that and identify what's

638
00:27:25,600 --> 00:27:28,600
going on and you know even for me

639
00:27:28,600 --> 00:27:31,149
looking at this disassembled output from

640
00:27:31,149 --> 00:27:34,299
apktool is hard and it turns out that

641
00:27:34,299 --> 00:27:36,669
there is in fact a good tool to convert

642
00:27:36,669 --> 00:27:39,940
decks back to java the URL is up there

643
00:27:39,940 --> 00:27:41,169
again for anybody who might be

644
00:27:41,169 --> 00:27:42,549
interested in pulling this down later

645
00:27:42,549 --> 00:27:44,559
and again it's a nice simple

646
00:27:44,559 --> 00:27:45,970
command-line tool it's cross-platform

647
00:27:45,970 --> 00:27:49,269
it's available whatever you know like

648
00:27:49,269 --> 00:27:52,000
environment you're using and once once

649
00:27:52,000 --> 00:27:54,039
you've got a jar file you can just use

650
00:27:54,039 --> 00:27:56,139
any of a variety of java decompiler

651
00:27:56,139 --> 00:27:58,029
tools out there i found there's a

652
00:27:58,029 --> 00:28:00,820
particularly cool free java decompiler

653
00:28:00,820 --> 00:28:03,639
GUI that runs just on windows but that's

654
00:28:03,639 --> 00:28:04,899
fine because that's where most of my

655
00:28:04,899 --> 00:28:07,419
tools are anyway and the last two lines

656
00:28:07,419 --> 00:28:11,740
if you see there are the actual Java

657
00:28:11,740 --> 00:28:14,529
source that was that entire page of

658
00:28:14,529 --> 00:28:16,720
decks disassembly the last time around

659
00:28:16,720 --> 00:28:18,669
so obviously it's a lot easier to read

660
00:28:18,669 --> 00:28:21,990
java source than it is a dex disassembly

661
00:28:21,990 --> 00:28:24,580
so you know with that background now

662
00:28:24,580 --> 00:28:26,950
that we know what is in an APK package

663
00:28:26,950 --> 00:28:30,340
it's time to do a real-world sample and

664
00:28:30,340 --> 00:28:32,500
lead you through an actual analysis is

665
00:28:32,500 --> 00:28:34,509
something out there in the field and the

666
00:28:34,509 --> 00:28:36,700
cool thing was is you know when I first

667
00:28:36,700 --> 00:28:37,960
started outlining this

668
00:28:37,960 --> 00:28:40,000
like I wonder which samples i'm going to

669
00:28:40,000 --> 00:28:43,419
use and then I saw this Russian QR code

670
00:28:43,419 --> 00:28:45,789
SMS thing and I went oh this is perfect

671
00:28:45,789 --> 00:28:47,529
it's in the news it's relevant it cost

672
00:28:47,529 --> 00:28:50,049
people money this is something I need to

673
00:28:50,049 --> 00:28:52,990
do as a sample and so once I had it all

674
00:28:52,990 --> 00:28:55,440
decompile back into java source

675
00:28:55,440 --> 00:28:58,659
immediately could see that it was

676
00:28:58,659 --> 00:29:02,020
heavily obvious gated these are the the

677
00:29:02,020 --> 00:29:04,390
names of the difference classes and

678
00:29:04,390 --> 00:29:07,029
subclasses within the Java source and

679
00:29:07,029 --> 00:29:10,390
that's not even that it's Russian and so

680
00:29:10,390 --> 00:29:12,789
it looks funny that's just straight up

681
00:29:12,789 --> 00:29:17,649
random character sets I mean AP KO v kv

682
00:29:17,649 --> 00:29:21,370
no that's not valid in any language and

683
00:29:21,370 --> 00:29:25,840
the code itself is really no better it

684
00:29:25,840 --> 00:29:27,760
looks actually not only is it

685
00:29:27,760 --> 00:29:29,890
intentionally designed to be obfuscated

686
00:29:29,890 --> 00:29:32,620
and difficult to read but it was

687
00:29:32,620 --> 00:29:35,529
actually probably built by a kit of some

688
00:29:35,529 --> 00:29:37,390
kind because of all those 50 different

689
00:29:37,390 --> 00:29:40,559
variants that we had there were a lot of

690
00:29:40,559 --> 00:29:43,029
commonalities in the way that things

691
00:29:43,029 --> 00:29:45,970
were obvious cated not that it was the

692
00:29:45,970 --> 00:29:48,100
exact same strings but similar format

693
00:29:48,100 --> 00:29:50,950
strings similar number of sub class

694
00:29:50,950 --> 00:29:54,159
files things along those lines you know

695
00:29:54,159 --> 00:29:55,750
and if you look at the variable names

696
00:29:55,750 --> 00:29:58,929
themselves here you can have a function

697
00:29:58,929 --> 00:30:04,149
call like a BF n E and BW and it's all

698
00:30:04,149 --> 00:30:06,429
it's designed to make a human that's

699
00:30:06,429 --> 00:30:08,230
looking at it have a hard time figuring

700
00:30:08,230 --> 00:30:10,299
out what's going on because I don't know

701
00:30:10,299 --> 00:30:11,890
about you but if i'm reading source code

702
00:30:11,890 --> 00:30:14,169
it's a lot harder to think logically

703
00:30:14,169 --> 00:30:19,890
about what int a six sh lb is then int

704
00:30:19,890 --> 00:30:22,390
return code or some other meaningful

705
00:30:22,390 --> 00:30:25,210
name and you know the thing of it is is

706
00:30:25,210 --> 00:30:27,580
it looks actually a lot like a lot of

707
00:30:27,580 --> 00:30:29,320
the malicious javascript that you've

708
00:30:29,320 --> 00:30:32,500
seen the wild on pages that are you know

709
00:30:32,500 --> 00:30:34,899
using javascript to do a heap spray and

710
00:30:34,899 --> 00:30:37,630
then drop shellcode on a box through

711
00:30:37,630 --> 00:30:39,760
some sort of you know internet explorer

712
00:30:39,760 --> 00:30:41,169
phoner ability or something along those

713
00:30:41,169 --> 00:30:46,299
lines so you know i said well let's we

714
00:30:46,299 --> 00:30:47,620
know it's autopista gated but we kind of

715
00:30:47,620 --> 00:30:49,539
expected that because it's malware so

716
00:30:49,539 --> 00:30:51,580
let's cut to the chase of this here

717
00:30:51,580 --> 00:30:54,340
we know that it's an SMS Trojan and it

718
00:30:54,340 --> 00:30:58,240
only has eight subclasses three of which

719
00:30:58,240 --> 00:31:01,260
have fewer than 10 instructions so

720
00:31:01,260 --> 00:31:04,060
there's not actually that much code to

721
00:31:04,060 --> 00:31:05,950
go through it's not like you're trying

722
00:31:05,950 --> 00:31:07,810
to debug microsoft word which is

723
00:31:07,810 --> 00:31:09,340
millions and millions of lines of code

724
00:31:09,340 --> 00:31:11,590
this one total loud around maybe a

725
00:31:11,590 --> 00:31:15,190
thousand lines of code and because we

726
00:31:15,190 --> 00:31:17,560
had you know the the pre knowledge that

727
00:31:17,560 --> 00:31:19,720
this thing was an SMS Trojan it was real

728
00:31:19,720 --> 00:31:22,960
easy to see in there I'll look send text

729
00:31:22,960 --> 00:31:25,090
message there's there's the function

730
00:31:25,090 --> 00:31:26,740
call alright this is this is the

731
00:31:26,740 --> 00:31:30,550
relevant piece so the question is let's

732
00:31:30,550 --> 00:31:32,230
you know pretend for a moment that we

733
00:31:32,230 --> 00:31:33,700
don't know this is a Trojan and we're

734
00:31:33,700 --> 00:31:35,350
just analyzing a random sample from the

735
00:31:35,350 --> 00:31:37,570
wild the question would be once you see

736
00:31:37,570 --> 00:31:40,330
the send text message call is it

737
00:31:40,330 --> 00:31:43,030
malicious so the declared format of the

738
00:31:43,030 --> 00:31:46,450
call is you put in the destination the

739
00:31:46,450 --> 00:31:47,880
source and these are both phone numbers

740
00:31:47,880 --> 00:31:50,800
the text you want to send and then some

741
00:31:50,800 --> 00:31:53,380
intense which are essentially action

742
00:31:53,380 --> 00:31:55,960
triggers within the Android environment

743
00:31:55,960 --> 00:31:58,870
so that you know other applications or

744
00:31:58,870 --> 00:32:01,030
your application itself can pick up and

745
00:32:01,030 --> 00:32:03,130
know that a text has been sent or is

746
00:32:03,130 --> 00:32:06,400
being sent and kick off useful code

747
00:32:06,400 --> 00:32:10,380
based upon that so our malicious app

748
00:32:10,380 --> 00:32:16,120
essentially set you know string for the

749
00:32:16,120 --> 00:32:19,780
destination know for the source which at

750
00:32:19,780 --> 00:32:22,480
first seems suspicious another string

751
00:32:22,480 --> 00:32:24,880
for the text and a couple of pending

752
00:32:24,880 --> 00:32:26,290
intent sorry that you know for all

753
00:32:26,290 --> 00:32:27,820
intents and purposes the call itself

754
00:32:27,820 --> 00:32:31,000
looks perfectly legitimate and just to

755
00:32:31,000 --> 00:32:34,720
compare to a legit app SMS control

756
00:32:34,720 --> 00:32:37,270
center you know my initial suspicion

757
00:32:37,270 --> 00:32:40,960
that not setting the source address for

758
00:32:40,960 --> 00:32:42,940
the text message was red flag in and of

759
00:32:42,940 --> 00:32:45,490
itself no this thing used no for that as

760
00:32:45,490 --> 00:32:47,020
well and so even that is not all that

761
00:32:47,020 --> 00:32:50,800
useful so the question came down to

762
00:32:50,800 --> 00:32:53,170
tracing back through the code to figure

763
00:32:53,170 --> 00:32:55,450
out where the number and the texts oh

764
00:32:55,450 --> 00:32:58,090
you know the the the piece that it was

765
00:32:58,090 --> 00:33:00,160
sending within the SMS message came from

766
00:33:00,160 --> 00:33:03,370
and so I said okay I can see

767
00:33:03,370 --> 00:33:06,559
that it's you know this variable is

768
00:33:06,559 --> 00:33:09,170
declared here and all right so this

769
00:33:09,170 --> 00:33:12,740
function is called and then passes it

770
00:33:12,740 --> 00:33:15,740
along and this and that and it turned

771
00:33:15,740 --> 00:33:19,220
into a complete wild goose chase you

772
00:33:19,220 --> 00:33:21,140
know there was one piece where it made a

773
00:33:21,140 --> 00:33:23,900
function call to this AP AE thing and I

774
00:33:23,900 --> 00:33:26,390
go and look in that class that function

775
00:33:26,390 --> 00:33:29,650
is completely empty nothing there at all

776
00:33:29,650 --> 00:33:32,270
designed just to throw an analyst office

777
00:33:32,270 --> 00:33:33,830
they're digging through and figuring out

778
00:33:33,830 --> 00:33:37,809
what's going on and you know the actual

779
00:33:37,809 --> 00:33:41,179
pieces that you know do a get string are

780
00:33:41,179 --> 00:33:44,480
on big random numbers and those are

781
00:33:44,480 --> 00:33:46,250
defined elsewhere in the file and it's

782
00:33:46,250 --> 00:33:50,000
not straightforward at all you know and

783
00:33:50,000 --> 00:33:52,070
the end result of that analysis

784
00:33:52,070 --> 00:33:54,530
essentially is that it's really clear

785
00:33:54,530 --> 00:33:57,800
without even going all the way back

786
00:33:57,800 --> 00:33:59,660
through that entire thousand lines

787
00:33:59,660 --> 00:34:01,760
disorders to exactly where those strings

788
00:34:01,760 --> 00:34:04,250
are defined that the apps hiding

789
00:34:04,250 --> 00:34:07,700
something you know a legit application

790
00:34:07,700 --> 00:34:10,760
you know this SMS client thing gets the

791
00:34:10,760 --> 00:34:12,168
phone number that it's going to send an

792
00:34:12,168 --> 00:34:15,739
SMS to with get phone number parameter

793
00:34:15,739 --> 00:34:17,980
string real simple real obvious

794
00:34:17,980 --> 00:34:20,600
something that you know a programmer who

795
00:34:20,600 --> 00:34:22,730
is concerned about his boss coming

796
00:34:22,730 --> 00:34:24,139
through and doing a code review would do

797
00:34:24,139 --> 00:34:25,399
so that it's real obvious what's going

798
00:34:25,399 --> 00:34:28,760
on in this particular case you know if

799
00:34:28,760 --> 00:34:31,129
you trace the whole way through and you

800
00:34:31,129 --> 00:34:32,449
have to know about the Russian phone

801
00:34:32,449 --> 00:34:34,668
number system you can see that you know

802
00:34:34,668 --> 00:34:36,649
this thing is in fact sending numbers to

803
00:34:36,649 --> 00:34:39,560
a premium service but frankly it's a

804
00:34:39,560 --> 00:34:42,230
painful process to to go through and dig

805
00:34:42,230 --> 00:34:46,310
that all the way out so you know so

806
00:34:46,310 --> 00:34:49,850
that's a little bit of a static analysis

807
00:34:49,850 --> 00:34:51,290
that we've done here but of course

808
00:34:51,290 --> 00:34:53,810
whenever you're doing malware analysis

809
00:34:53,810 --> 00:34:55,820
you have two options essentially you can

810
00:34:55,820 --> 00:34:58,370
either do static analysis which is just

811
00:34:58,370 --> 00:35:00,500
reading the code in whatever format you

812
00:35:00,500 --> 00:35:04,130
can get to it as compared to dynamic

813
00:35:04,130 --> 00:35:06,590
analysis which is running an application

814
00:35:06,590 --> 00:35:09,230
and observing its behavior in the wild

815
00:35:09,230 --> 00:35:11,359
you know and some of the sort of pros

816
00:35:11,359 --> 00:35:13,070
and cons of the two for anybody who

817
00:35:13,070 --> 00:35:14,200
doesn't really do

818
00:35:14,200 --> 00:35:16,839
malware analysis and you know it's just

819
00:35:16,839 --> 00:35:19,420
trying to figure all this out the pros

820
00:35:19,420 --> 00:35:22,780
of static analysis are you know it leads

821
00:35:22,780 --> 00:35:25,089
to you can do good automated code

822
00:35:25,089 --> 00:35:27,000
analysis you can SiC tools on

823
00:35:27,000 --> 00:35:29,170
essentially looking for patterns in the

824
00:35:29,170 --> 00:35:31,570
source and things like that you're

825
00:35:31,570 --> 00:35:34,030
guaranteed not to have any oops moments

826
00:35:34,030 --> 00:35:37,240
where you accidentally let malicious

827
00:35:37,240 --> 00:35:39,010
data go out to the internet that you

828
00:35:39,010 --> 00:35:41,260
didn't want to go out and find out that

829
00:35:41,260 --> 00:35:43,470
you know when when I first set up the

830
00:35:43,470 --> 00:35:47,220
malware research lab at Sourcefire our

831
00:35:47,220 --> 00:35:49,750
outbound facing internet pipe got

832
00:35:49,750 --> 00:35:51,910
blacklisted by a whole bunch of

833
00:35:51,910 --> 00:35:53,109
different services because all my

834
00:35:53,109 --> 00:35:54,640
malware was sending spam and doing

835
00:35:54,640 --> 00:35:56,200
horrible things on the internet and the

836
00:35:56,200 --> 00:35:57,670
next thing we knew even Google was

837
00:35:57,670 --> 00:35:59,349
putting up CAPTCHAs for our users to

838
00:35:59,349 --> 00:36:01,300
search because it looked like we were

839
00:36:01,300 --> 00:36:04,500
just full of evil and so static analysis

840
00:36:04,500 --> 00:36:06,160
guarantees that you can't screw

841
00:36:06,160 --> 00:36:07,300
something up because you're not actually

842
00:36:07,300 --> 00:36:10,180
running malicious code and of course you

843
00:36:10,180 --> 00:36:12,670
also get full visibility into all the

844
00:36:12,670 --> 00:36:14,530
possible things that an application can

845
00:36:14,530 --> 00:36:17,500
do because sometimes malware is complex

846
00:36:17,500 --> 00:36:18,940
there's a bunch of different code paths

847
00:36:18,940 --> 00:36:20,800
and just by running it you might not

848
00:36:20,800 --> 00:36:22,480
click on the right thing you might not

849
00:36:22,480 --> 00:36:25,480
have the right version of you know be it

850
00:36:25,480 --> 00:36:27,099
windows or android or whatever and so

851
00:36:27,099 --> 00:36:28,750
you don't necessarily have the full

852
00:36:28,750 --> 00:36:31,119
picture of what's going on but the cons

853
00:36:31,119 --> 00:36:33,760
of static analysis are that it is a very

854
00:36:33,760 --> 00:36:36,700
slow difficult time-consuming process

855
00:36:36,700 --> 00:36:40,510
you got to be frankly good to to do good

856
00:36:40,510 --> 00:36:42,700
static analysis I like to think I'm all

857
00:36:42,700 --> 00:36:44,560
right at it but even I know that I could

858
00:36:44,560 --> 00:36:46,089
certainly be better and I'm up here

859
00:36:46,089 --> 00:36:48,609
talking about it at hack in the box now

860
00:36:48,609 --> 00:36:50,290
of course it's also vulnerable which I

861
00:36:50,290 --> 00:36:52,420
put in quotes you know because it's not

862
00:36:52,420 --> 00:36:54,010
a true vulnerability but you're as a

863
00:36:54,010 --> 00:36:55,960
human you're vulnerable to occupation

864
00:36:55,960 --> 00:36:58,150
methods that make it more aggravating to

865
00:36:58,150 --> 00:37:01,240
go through the code so you know the

866
00:37:01,240 --> 00:37:03,970
question is all right what about dynamic

867
00:37:03,970 --> 00:37:05,829
analysis on Android and the first

868
00:37:05,829 --> 00:37:08,380
thought that you might have is what

869
00:37:08,380 --> 00:37:10,359
I can't just infect my real phone that's

870
00:37:10,359 --> 00:37:12,819
not cool but the good news of course is

871
00:37:12,819 --> 00:37:14,680
that you don't have to you can just

872
00:37:14,680 --> 00:37:18,160
install the Android SDK and it of course

873
00:37:18,160 --> 00:37:20,109
is multi-platform support no surprise

874
00:37:20,109 --> 00:37:22,990
that Google is open you know two

875
00:37:22,990 --> 00:37:24,670
different platforms it's well documented

876
00:37:24,670 --> 00:37:27,089
it actually allows for

877
00:37:27,089 --> 00:37:29,309
shot in your virtual machines which is

878
00:37:29,309 --> 00:37:30,989
really useful for malware analysis

879
00:37:30,989 --> 00:37:34,200
because you can you know have the same

880
00:37:34,200 --> 00:37:35,579
virtual machine and affected with

881
00:37:35,579 --> 00:37:37,859
different pieces of malware or you can

882
00:37:37,859 --> 00:37:39,690
essentially pause your state as you're

883
00:37:39,690 --> 00:37:41,989
doing your analysis and come back later

884
00:37:41,989 --> 00:37:44,960
you can pick and choose different

885
00:37:44,960 --> 00:37:48,119
Android operating system versions so all

886
00:37:48,119 --> 00:37:50,430
the way from like 1.6 out to the

887
00:37:50,430 --> 00:37:53,670
development three-point whatever Java is

888
00:37:53,670 --> 00:37:55,289
the only prerequisite you need to get

889
00:37:55,289 --> 00:37:56,789
this thing running & javas free and

890
00:37:56,789 --> 00:37:58,859
that's not a big deal it is of course

891
00:37:58,859 --> 00:38:01,200
free both in the sense of free as in

892
00:38:01,200 --> 00:38:04,079
beer and free is in speech and of course

893
00:38:04,079 --> 00:38:06,119
it also integrates well with the free

894
00:38:06,119 --> 00:38:07,769
Eclipse debugger so it's got a lot of

895
00:38:07,769 --> 00:38:10,710
lot of good things going for it so the

896
00:38:10,710 --> 00:38:12,239
first question that you have once you

897
00:38:12,239 --> 00:38:13,829
get that setup or at least that I had

898
00:38:13,829 --> 00:38:16,979
was so how do I get apps onto my virtual

899
00:38:16,979 --> 00:38:18,839
droid and I said okay well let me just

900
00:38:18,839 --> 00:38:21,989
go to the market oh no the market app

901
00:38:21,989 --> 00:38:25,410
doesn't come pre-installed on virtual

902
00:38:25,410 --> 00:38:29,940
droids and you know so that it's kind of

903
00:38:29,940 --> 00:38:31,710
aggravating but if you want to get an

904
00:38:31,710 --> 00:38:33,719
app from the market what you can do is

905
00:38:33,719 --> 00:38:35,999
install it on a real device use the

906
00:38:35,999 --> 00:38:38,549
astro file manager apps backup feature

907
00:38:38,549 --> 00:38:41,910
and poof it saves off an APK file that

908
00:38:41,910 --> 00:38:44,160
you can then get on to your your virtual

909
00:38:44,160 --> 00:38:47,219
emulator any other app if it's on the

910
00:38:47,219 --> 00:38:50,910
web just download an APK file if it's

911
00:38:50,910 --> 00:38:52,609
not on the web there's an adb push

912
00:38:52,609 --> 00:38:56,400
command that comes with the sdk package

913
00:38:56,400 --> 00:38:58,469
that you can use to just send the file

914
00:38:58,469 --> 00:39:00,690
off across the Android debug bridge to

915
00:39:00,690 --> 00:39:02,880
the phone and then install from there or

916
00:39:02,880 --> 00:39:05,009
you can also just use adb install to

917
00:39:05,009 --> 00:39:06,809
directly just launched the install

918
00:39:06,809 --> 00:39:10,829
process on the phone so with that done

919
00:39:10,829 --> 00:39:12,119
you know with that sort of background

920
00:39:12,119 --> 00:39:14,670
setup i'm going to do talk about another

921
00:39:14,670 --> 00:39:17,579
sample here called droid kung fu which

922
00:39:17,579 --> 00:39:19,829
hey even ties in the title my paper

923
00:39:19,829 --> 00:39:23,219
sweet it's fairly well-known Chinese

924
00:39:23,219 --> 00:39:25,559
malware and you know fairly because well

925
00:39:25,559 --> 00:39:27,239
if you're not in mobile malware analysis

926
00:39:27,239 --> 00:39:28,650
you probably haven't heard of it but

927
00:39:28,650 --> 00:39:30,450
anybody who is kind of in the field has

928
00:39:30,450 --> 00:39:33,569
heard of this thing there are publicly

929
00:39:33,569 --> 00:39:36,239
available samples at the URL that I've

930
00:39:36,239 --> 00:39:38,430
listed there I've got to take a moment

931
00:39:38,430 --> 00:39:40,210
to give props to the guys run

932
00:39:40,210 --> 00:39:42,400
contai geo dump because they have lots

933
00:39:42,400 --> 00:39:44,230
of real samples and good analysis of in

934
00:39:44,230 --> 00:39:47,500
the wild malware and it requires android

935
00:39:47,500 --> 00:39:50,500
platform 2.2 or lower essentially it

936
00:39:50,500 --> 00:39:51,940
exploits some known vulnerabilities that

937
00:39:51,940 --> 00:39:56,680
were patched by 2.3 the thing the note

938
00:39:56,680 --> 00:39:57,640
there is that it's not a bad idea

939
00:39:57,640 --> 00:39:59,560
generally if you're trying to analyze in

940
00:39:59,560 --> 00:40:02,140
the wild malware to run version 2.2 or

941
00:40:02,140 --> 00:40:04,900
lower because about eighty-five percent

942
00:40:04,900 --> 00:40:07,240
of the phones in the wild today are on

943
00:40:07,240 --> 00:40:08,740
that version or lower so you want to

944
00:40:08,740 --> 00:40:10,810
kind of get what is actually out there

945
00:40:10,810 --> 00:40:13,210
in the wild in your lab the other cool

946
00:40:13,210 --> 00:40:14,619
thing about this is that that particular

947
00:40:14,619 --> 00:40:17,170
app is known to generate network traffic

948
00:40:17,170 --> 00:40:19,480
and since I'm 90s guy hey I like network

949
00:40:19,480 --> 00:40:23,440
traffic so you know here is what it

950
00:40:23,440 --> 00:40:27,250
looks like during install process yes

951
00:40:27,250 --> 00:40:29,200
okay it's in Chinese but pay shocker

952
00:40:29,200 --> 00:40:31,540
it's the Chinese app and asks do you

953
00:40:31,540 --> 00:40:33,400
want to install this application and

954
00:40:33,400 --> 00:40:35,950
looking at it it says it wants access to

955
00:40:35,950 --> 00:40:38,410
storage on your SD card okay no big deal

956
00:40:38,410 --> 00:40:41,140
network communication well it's hey it's

957
00:40:41,140 --> 00:40:43,450
a instant messaging apps of course it

958
00:40:43,450 --> 00:40:46,359
wants network comes you know it wants to

959
00:40:46,359 --> 00:40:48,520
do phone calls which all right we

960
00:40:48,520 --> 00:40:49,630
already said people don't pay attention

961
00:40:49,630 --> 00:40:52,210
and it wants access to system tools

962
00:40:52,210 --> 00:40:54,700
which is a little bit funny but oh well

963
00:40:54,700 --> 00:40:57,730
whatever it I just want my you know

964
00:40:57,730 --> 00:41:01,150
my SMS cool so the runtime behavior this

965
00:41:01,150 --> 00:41:02,980
thing the very first thing it does is it

966
00:41:02,980 --> 00:41:04,810
pops up a little window it says replaced

967
00:41:04,810 --> 00:41:06,760
application the application you were

968
00:41:06,760 --> 00:41:08,200
installing will replace another

969
00:41:08,200 --> 00:41:10,510
application all previous user data will

970
00:41:10,510 --> 00:41:12,339
be saved ha it's a little funny

971
00:41:12,339 --> 00:41:14,950
considering this is a fresh emulator

972
00:41:14,950 --> 00:41:16,510
installed but I'm just going to pretend

973
00:41:16,510 --> 00:41:18,160
that I'm in the wild and click on

974
00:41:18,160 --> 00:41:20,920
through and that's fine and then poof it

975
00:41:20,920 --> 00:41:23,820
pops up a window in Chinese which

976
00:41:23,820 --> 00:41:25,930
alright that's cool if you speak Chinese

977
00:41:25,930 --> 00:41:27,609
but if you're an American like me who

978
00:41:27,609 --> 00:41:30,040
doesn't speak a word of Mandarin or

979
00:41:30,040 --> 00:41:32,109
Cantonese or anything else like that not

980
00:41:32,109 --> 00:41:34,630
particularly helpful the good news in

981
00:41:34,630 --> 00:41:36,010
this particular case is I was in

982
00:41:36,010 --> 00:41:37,930
Singapore earlier this week at our

983
00:41:37,930 --> 00:41:39,910
corporate offices there and oh yeah

984
00:41:39,910 --> 00:41:41,619
we've got people who speak Chinese there

985
00:41:41,619 --> 00:41:44,170
and so they told me that what that says

986
00:41:44,170 --> 00:41:47,530
is the little top pieces hit and it says

987
00:41:47,530 --> 00:41:49,930
you are about to connect to the internet

988
00:41:49,930 --> 00:41:52,480
and the big button says

989
00:41:52,480 --> 00:41:57,100
okay so okay you click that and it just

990
00:41:57,100 --> 00:42:01,330
goes away application closes and so you

991
00:42:01,330 --> 00:42:03,570
know huh that seems a little suspicious

992
00:42:03,570 --> 00:42:06,280
you know but maybe if I had this thing

993
00:42:06,280 --> 00:42:08,440
in the wild I would think it's just

994
00:42:08,440 --> 00:42:10,690
broken it's a crappy app I'll get around

995
00:42:10,690 --> 00:42:14,740
on installing it later so you know but

996
00:42:14,740 --> 00:42:16,690
of course I'm doing malware analysis

997
00:42:16,690 --> 00:42:19,000
I've got other interests so let me see

998
00:42:19,000 --> 00:42:22,690
what this thing is doing so having dug

999
00:42:22,690 --> 00:42:24,880
through the code on this thing which

1000
00:42:24,880 --> 00:42:27,010
thankfully you know given that this was

1001
00:42:27,010 --> 00:42:29,200
tens of thousands of lines of code I was

1002
00:42:29,200 --> 00:42:30,160
lucky and that there were public

1003
00:42:30,160 --> 00:42:33,040
analysis of this this tool so I kind of

1004
00:42:33,040 --> 00:42:36,660
had an idea of where to look it has a

1005
00:42:36,660 --> 00:42:40,660
statically configured HTTP string that

1006
00:42:40,660 --> 00:42:42,520
you can see in bold there it goes to

1007
00:42:42,520 --> 00:42:46,300
search gung foo android com on port 80 5

1008
00:42:46,300 --> 00:42:51,730
11 to search say hi dot PHP and you know

1009
00:42:51,730 --> 00:42:53,710
like I said in this particular case I

1010
00:42:53,710 --> 00:42:57,310
was lucky in that I had pointers as to

1011
00:42:57,310 --> 00:42:59,350
what was going on and where to look but

1012
00:42:59,350 --> 00:43:00,760
if you were dealing with something just

1013
00:43:00,760 --> 00:43:03,640
completely out of nowhere in the wild

1014
00:43:03,640 --> 00:43:06,340
you have no idea what's going on not a

1015
00:43:06,340 --> 00:43:08,590
bad idea to look for the string HTTP

1016
00:43:08,590 --> 00:43:11,020
colon slash slash inside of an app to

1017
00:43:11,020 --> 00:43:12,850
see what websites that might be talking

1018
00:43:12,850 --> 00:43:17,140
to so you know from there the question

1019
00:43:17,140 --> 00:43:18,850
is all right so this thing we know it

1020
00:43:18,850 --> 00:43:21,520
generates network traffic how exactly do

1021
00:43:21,520 --> 00:43:23,500
you capture that traffic on Android

1022
00:43:23,500 --> 00:43:26,140
virtual devices and it turns out that

1023
00:43:26,140 --> 00:43:28,600
luckily this one it's nothing special to

1024
00:43:28,600 --> 00:43:31,180
it you can just do it directly on the

1025
00:43:31,180 --> 00:43:32,530
machine that you've got the emulator

1026
00:43:32,530 --> 00:43:35,500
installed on using either Wireshark or

1027
00:43:35,500 --> 00:43:37,300
TCP dump or whatever other sniffer tool

1028
00:43:37,300 --> 00:43:40,690
that you want to use the major drawback

1029
00:43:40,690 --> 00:43:44,140
is filtering that traffic with VMware

1030
00:43:44,140 --> 00:43:47,380
virtual devices get their own IP address

1031
00:43:47,380 --> 00:43:49,420
if you set up bridge networking and

1032
00:43:49,420 --> 00:43:51,760
it'll do dhcp in whatever or you the

1033
00:43:51,760 --> 00:43:54,190
very least have a distinct MAC address

1034
00:43:54,190 --> 00:43:57,250
for the virtual adapter and you can use

1035
00:43:57,250 --> 00:43:59,740
that to filter your capture when you're

1036
00:43:59,740 --> 00:44:03,220
doing a packet dump the problem is that

1037
00:44:03,220 --> 00:44:05,180
the android emulator is

1038
00:44:05,180 --> 00:44:07,010
exactly like vmware it's just another

1039
00:44:07,010 --> 00:44:09,770
app running on your system which means

1040
00:44:09,770 --> 00:44:11,569
that there's no distinct IP address

1041
00:44:11,569 --> 00:44:13,790
there's no distinct MAC address there's

1042
00:44:13,790 --> 00:44:16,400
really nothing that you can use to

1043
00:44:16,400 --> 00:44:18,050
filter out a network traffic that's

1044
00:44:18,050 --> 00:44:20,450
coming from your virtual droid vs from

1045
00:44:20,450 --> 00:44:22,819
your actual underlying operating system

1046
00:44:22,819 --> 00:44:26,180
so pro tip make sure to close noisy

1047
00:44:26,180 --> 00:44:28,190
programs before capture the first time I

1048
00:44:28,190 --> 00:44:30,050
was doing capture and I didn't realize

1049
00:44:30,050 --> 00:44:32,150
this was going to be the case I had

1050
00:44:32,150 --> 00:44:34,520
google open or google chrome open with

1051
00:44:34,520 --> 00:44:36,589
facebook tab and a google finance tab

1052
00:44:36,589 --> 00:44:38,329
and all these json things that are

1053
00:44:38,329 --> 00:44:39,950
pushing data here and there and my

1054
00:44:39,950 --> 00:44:42,470
packet capture was just full of junk the

1055
00:44:42,470 --> 00:44:44,780
first time around the one bonus of

1056
00:44:44,780 --> 00:44:47,270
course is that unlike vmware you don't

1057
00:44:47,270 --> 00:44:49,880
have to fix up broken checksums when you

1058
00:44:49,880 --> 00:44:51,410
capture from the machine sending the

1059
00:44:51,410 --> 00:44:53,329
traffic one of the things that irritates

1060
00:44:53,329 --> 00:44:56,270
me is an ids analyst is that if you

1061
00:44:56,270 --> 00:44:59,470
capture a packet capture on a machine

1062
00:44:59,470 --> 00:45:03,619
that has a vm on it vmware skips the

1063
00:45:03,619 --> 00:45:06,230
process of calculating tcp checksums and

1064
00:45:06,230 --> 00:45:07,670
just leaves it up to the network card

1065
00:45:07,670 --> 00:45:09,500
which means that if you're capturing

1066
00:45:09,500 --> 00:45:11,450
before it actually hits the network card

1067
00:45:11,450 --> 00:45:13,190
to go out to the internet your TSP

1068
00:45:13,190 --> 00:45:15,200
checksums are broken and so it snort

1069
00:45:15,200 --> 00:45:16,760
won't recognize the file right and it's

1070
00:45:16,760 --> 00:45:19,160
just aggravating but Google is kind of

1071
00:45:19,160 --> 00:45:20,869
calculate those check sums for you so

1072
00:45:20,869 --> 00:45:23,780
that saves the step in the process and

1073
00:45:23,780 --> 00:45:26,540
you know in this particular case hey

1074
00:45:26,540 --> 00:45:29,540
sweet it works just like we wanted as

1075
00:45:29,540 --> 00:45:30,950
soon as I got this thing installed

1076
00:45:30,950 --> 00:45:33,829
before i was even through these chinese

1077
00:45:33,829 --> 00:45:35,329
language apocalypse that i had no idea

1078
00:45:35,329 --> 00:45:37,220
what they were packets began to flow

1079
00:45:37,220 --> 00:45:39,980
rather immediately and you can see here

1080
00:45:39,980 --> 00:45:41,869
this is you know I didn't do the

1081
00:45:41,869 --> 00:45:43,339
Wireshark screen capture because it

1082
00:45:43,339 --> 00:45:44,569
would have been really hard to read I've

1083
00:45:44,569 --> 00:45:47,170
just duplicated the HTTP headers here

1084
00:45:47,170 --> 00:45:49,670
and you'll notice that the user agent

1085
00:45:49,670 --> 00:45:53,569
string says android 2.2 sdk build blah

1086
00:45:53,569 --> 00:45:56,119
blah blah so it's real obvious that this

1087
00:45:56,119 --> 00:45:58,220
isn't my facebook traffic no this is

1088
00:45:58,220 --> 00:46:00,589
actually coming off the android emulator

1089
00:46:00,589 --> 00:46:04,130
and is useful data and of course

1090
00:46:04,130 --> 00:46:07,400
immediately i note that this thing the

1091
00:46:07,400 --> 00:46:10,790
host edits connecting to is port 7001

1092
00:46:10,790 --> 00:46:13,520
which is again not standard HTTP at the

1093
00:46:13,520 --> 00:46:16,130
same port is that earlier URL we saw but

1094
00:46:16,130 --> 00:46:17,819
even it is suspicious and so that

1095
00:46:17,819 --> 00:46:20,839
an immediate red flag to look at and

1096
00:46:20,839 --> 00:46:23,759
essentially i said well i really want to

1097
00:46:23,759 --> 00:46:27,390
confirm that it still does what we saw

1098
00:46:27,390 --> 00:46:29,309
in the source code and you know this is

1099
00:46:29,309 --> 00:46:31,559
one of the pros of doing dynamic

1100
00:46:31,559 --> 00:46:34,019
analysis is you can easily confirm that

1101
00:46:34,019 --> 00:46:35,369
what you think is going on in your

1102
00:46:35,369 --> 00:46:38,729
static analysis is right and as i said

1103
00:46:38,729 --> 00:46:42,150
there the URL that this thing went and

1104
00:46:42,150 --> 00:46:43,619
immediately started talking to was

1105
00:46:43,619 --> 00:46:46,949
distinct from the URL that i had

1106
00:46:46,949 --> 00:46:48,779
highlighted earlier which is known from

1107
00:46:48,779 --> 00:46:50,190
the analyses that are out there publicly

1108
00:46:50,190 --> 00:46:52,380
to be its command and control check in

1109
00:46:52,380 --> 00:46:56,160
so all right fine I'll just I'll go get

1110
00:46:56,160 --> 00:46:57,569
some coffee and let it run no big deal

1111
00:46:57,569 --> 00:47:00,989
I'm sure it'll talk to it later but it

1112
00:47:00,989 --> 00:47:03,660
didn't actually go there and I started

1113
00:47:03,660 --> 00:47:05,670
you know I open the app back up hoping

1114
00:47:05,670 --> 00:47:07,349
that I would get something out of it but

1115
00:47:07,349 --> 00:47:09,269
no every time it just pops something up

1116
00:47:09,269 --> 00:47:11,099
in Chinese and when I click the only ok

1117
00:47:11,099 --> 00:47:13,739
button it goes away so not like I can

1118
00:47:13,739 --> 00:47:15,089
force it to do something different

1119
00:47:15,089 --> 00:47:17,309
because it's not responsive when you

1120
00:47:17,309 --> 00:47:20,130
actually run the program and sure I

1121
00:47:20,130 --> 00:47:22,410
could sit down and analyze the code and

1122
00:47:22,410 --> 00:47:23,910
see what the prerequisites are to

1123
00:47:23,910 --> 00:47:26,099
trigger that particular request but that

1124
00:47:26,099 --> 00:47:28,469
is a long difficult process and need to

1125
00:47:28,469 --> 00:47:31,199
be honest I'm lazy I like to cheat

1126
00:47:31,199 --> 00:47:33,660
wherever I can and anybody who's doing

1127
00:47:33,660 --> 00:47:36,449
malware analysis I think should adopt

1128
00:47:36,449 --> 00:47:38,309
that philosophy because there's so much

1129
00:47:38,309 --> 00:47:40,349
work to do that if you couldn't get a

1130
00:47:40,349 --> 00:47:42,059
successful shortcut at work around or

1131
00:47:42,059 --> 00:47:43,829
whatever and make it work it's going to

1132
00:47:43,829 --> 00:47:46,650
make your life way easier so I said what

1133
00:47:46,650 --> 00:47:48,449
if I just reboot the phone just treat it

1134
00:47:48,449 --> 00:47:52,229
like it's windows bingo it did exactly

1135
00:47:52,229 --> 00:47:56,130
what I wanted it posted off to search /

1136
00:47:56,130 --> 00:48:00,239
say hi dot PHP it's you know on port 80

1137
00:48:00,239 --> 00:48:02,699
5 11 on that host that it said earlier

1138
00:48:02,699 --> 00:48:05,699
it's got a user agent string for HTTP

1139
00:48:05,699 --> 00:48:08,339
client unavailable which is proof that

1140
00:48:08,339 --> 00:48:10,589
it's not even using the built in android

1141
00:48:10,589 --> 00:48:13,170
operating system stuff to send that it's

1142
00:48:13,170 --> 00:48:15,599
got its own custom user agent string all

1143
00:48:15,599 --> 00:48:18,359
right there we go and then we notice

1144
00:48:18,359 --> 00:48:20,279
later on after it's sent that initial

1145
00:48:20,279 --> 00:48:23,369
check in its sending off data about your

1146
00:48:23,369 --> 00:48:26,130
phone so you can see in bold their OS

1147
00:48:26,130 --> 00:48:28,510
type is 2.2

1148
00:48:28,510 --> 00:48:29,380
that's the version of the operating

1149
00:48:29,380 --> 00:48:33,130
system were running mobile equals a 555

1150
00:48:33,130 --> 00:48:35,200
number which is standard fake phone

1151
00:48:35,200 --> 00:48:36,520
number that you'll see in the United

1152
00:48:36,520 --> 00:48:39,370
States mobile model it's the generic SDK

1153
00:48:39,370 --> 00:48:40,810
but of course that this was on a real

1154
00:48:40,810 --> 00:48:42,880
phone it might say Motorola Droid or

1155
00:48:42,880 --> 00:48:46,690
some other thing like that and what I

1156
00:48:46,690 --> 00:48:49,420
thought was particularly funny is in the

1157
00:48:49,420 --> 00:48:52,210
HTTP response that came back from the

1158
00:48:52,210 --> 00:48:55,330
server it has standard HTTP headers all

1159
00:48:55,330 --> 00:48:57,490
right it's running on Apache sento as no

1160
00:48:57,490 --> 00:49:00,010
big deal but the only data that it sends

1161
00:49:00,010 --> 00:49:05,170
back besides the header is fail okay

1162
00:49:05,170 --> 00:49:07,600
that's it's odd you know I don't know

1163
00:49:07,600 --> 00:49:09,430
what that's all about but hey from a

1164
00:49:09,430 --> 00:49:12,250
network detection standpoint I don't

1165
00:49:12,250 --> 00:49:14,530
know that I particularly care whether or

1166
00:49:14,530 --> 00:49:16,390
not it succeeded or failed because you

1167
00:49:16,390 --> 00:49:19,180
can easily still identify this app as

1168
00:49:19,180 --> 00:49:22,000
being on a given mobile phones simply by

1169
00:49:22,000 --> 00:49:24,070
the fact that it's called on out and you

1170
00:49:24,070 --> 00:49:25,780
know it's possible that it sends back

1171
00:49:25,780 --> 00:49:28,270
fail so that an analyst who's looking at

1172
00:49:28,270 --> 00:49:30,790
this traffic would think that the CNC

1173
00:49:30,790 --> 00:49:32,380
network was broken and not pursue it

1174
00:49:32,380 --> 00:49:35,590
further you know malware authors do

1175
00:49:35,590 --> 00:49:39,160
strange things so you know the good news

1176
00:49:39,160 --> 00:49:41,650
in this case from a detection standpoint

1177
00:49:41,650 --> 00:49:44,500
and of course being the Sourcefire guy

1178
00:49:44,500 --> 00:49:46,750
who does IDs signatures I'm always

1179
00:49:46,750 --> 00:49:48,790
thinking how can i detect something like

1180
00:49:48,790 --> 00:49:51,520
this running in the wild in this

1181
00:49:51,520 --> 00:49:54,220
particular case the call home routine is

1182
00:49:54,220 --> 00:49:57,460
hard-coded into the binary as a straight

1183
00:49:57,460 --> 00:49:59,020
up string so now we're going to change

1184
00:49:59,020 --> 00:50:01,120
it's not randomized it's always on the

1185
00:50:01,120 --> 00:50:03,790
same port it's always the same URL so it

1186
00:50:03,790 --> 00:50:06,040
makes for a really easy snort signature

1187
00:50:06,040 --> 00:50:08,470
and essentially for anybody who doesn't

1188
00:50:08,470 --> 00:50:10,480
know snort signature is what that thing

1189
00:50:10,480 --> 00:50:13,780
says is generate an alert when you see a

1190
00:50:13,780 --> 00:50:16,030
TCP packet coming from your home network

1191
00:50:16,030 --> 00:50:18,670
what you're protecting on any port out

1192
00:50:18,670 --> 00:50:20,650
to the Internet the outside world on

1193
00:50:20,650 --> 00:50:24,100
port 80 511 with the message botnet C&C

1194
00:50:24,100 --> 00:50:26,560
for the category it's a droid kung fu

1195
00:50:26,560 --> 00:50:29,980
check in it's a TCP session that is

1196
00:50:29,980 --> 00:50:32,320
established it's in the direction of the

1197
00:50:32,320 --> 00:50:34,690
server and looks for the post string

1198
00:50:34,690 --> 00:50:36,610
within the first twenty two bites of the

1199
00:50:36,610 --> 00:50:37,800
file and then there's some of

1200
00:50:37,800 --> 00:50:40,710
our metadata about what's going on there

1201
00:50:40,710 --> 00:50:43,200
and the the SI d there is the official

1202
00:50:43,200 --> 00:50:48,180
snort ID that tags that rule in the the

1203
00:50:48,180 --> 00:50:50,700
Sourcefire you know sponsored rules this

1204
00:50:50,700 --> 00:50:52,230
thing is actually available in the wild

1205
00:50:52,230 --> 00:50:54,120
to anybody who downloads the snort rules

1206
00:50:54,120 --> 00:50:58,080
off of snorg so you know the funny thing

1207
00:50:58,080 --> 00:51:00,570
was is all right so I've done that app

1208
00:51:00,570 --> 00:51:03,600
but the question is do most of these

1209
00:51:03,600 --> 00:51:06,300
applications just send text messages

1210
00:51:06,300 --> 00:51:08,070
that you really can't detect with an

1211
00:51:08,070 --> 00:51:09,600
ideas because there are a whole

1212
00:51:09,600 --> 00:51:11,880
different part of a network or do they

1213
00:51:11,880 --> 00:51:14,250
actually generate network behavior so

1214
00:51:14,250 --> 00:51:15,750
that I can go back to the folks at

1215
00:51:15,750 --> 00:51:17,550
verizon wireless who are concerned about

1216
00:51:17,550 --> 00:51:19,860
seeing mobile malware and say no I can

1217
00:51:19,860 --> 00:51:22,680
actually do something for you from a you

1218
00:51:22,680 --> 00:51:25,050
know a snort rules perspective and I

1219
00:51:25,050 --> 00:51:27,420
picked another just random app out of my

1220
00:51:27,420 --> 00:51:30,420
list and did a packet capture and you

1221
00:51:30,420 --> 00:51:32,340
can see well actually yeah it actually

1222
00:51:32,340 --> 00:51:34,710
does send nefarious network traffic this

1223
00:51:34,710 --> 00:51:39,000
is a post off to aap do ok it doesn't

1224
00:51:39,000 --> 00:51:42,140
make any sense it's got that user agents

1225
00:51:42,140 --> 00:51:44,340
unavailable Java that looked just like

1226
00:51:44,340 --> 00:51:47,040
the droid kung fu thing so maybe there's

1227
00:51:47,040 --> 00:51:48,630
some further evidence that their kits

1228
00:51:48,630 --> 00:51:50,130
out there that are generating this

1229
00:51:50,130 --> 00:51:52,280
malware and if you look in the post data

1230
00:51:52,280 --> 00:51:56,970
you can see it says model SDK build the

1231
00:51:56,970 --> 00:51:59,220
brand is generic it's again it's sending

1232
00:51:59,220 --> 00:52:02,370
off data about what kind of phone is on

1233
00:52:02,370 --> 00:52:05,850
which is just like your standard sort of

1234
00:52:05,850 --> 00:52:08,940
check in for regular desktop PC malware

1235
00:52:08,940 --> 00:52:11,760
because if I'm running a botnet the

1236
00:52:11,760 --> 00:52:13,530
first thing I want to know on any given

1237
00:52:13,530 --> 00:52:15,540
infection is alright what have I got

1238
00:52:15,540 --> 00:52:18,750
what kind of resources do I have on this

1239
00:52:18,750 --> 00:52:20,910
device that I've compromised so that I

1240
00:52:20,910 --> 00:52:22,410
can then figure out what it's going to

1241
00:52:22,410 --> 00:52:26,880
be useful for so you know even samples

1242
00:52:26,880 --> 00:52:29,910
that were primarily focused on SMS fraud

1243
00:52:29,910 --> 00:52:32,580
will sometimes exhibit obviously bad

1244
00:52:32,580 --> 00:52:36,150
network behavior Jim Russia which is the

1245
00:52:36,150 --> 00:52:38,430
name of that QR SMS Trojan that I talked

1246
00:52:38,430 --> 00:52:40,410
about earlier one of the variants that I

1247
00:52:40,410 --> 00:52:43,050
had immediately downloads the file Jim

1248
00:52:43,050 --> 00:52:46,740
APK from Android Jim duck are you the

1249
00:52:46,740 --> 00:52:50,310
second you install it okay well you know

1250
00:52:50,310 --> 00:52:51,390
no app should in

1251
00:52:51,390 --> 00:52:52,950
we be pulling down another app the

1252
00:52:52,950 --> 00:52:55,289
second you install it clearly you know

1253
00:52:55,289 --> 00:52:57,390
it's it's a downloader that wants to put

1254
00:52:57,390 --> 00:52:58,740
as much malware on your system as

1255
00:52:58,740 --> 00:53:01,589
possible as soon as that is done and it

1256
00:53:01,589 --> 00:53:03,119
silently installed in the background

1257
00:53:03,119 --> 00:53:06,059
with no user prompt at all it's followed

1258
00:53:06,059 --> 00:53:09,510
by several beacons out to different ad

1259
00:53:09,510 --> 00:53:11,880
servers and it's not that it's

1260
00:53:11,880 --> 00:53:13,710
legitimately getting an ad to display to

1261
00:53:13,710 --> 00:53:16,170
the user because there's no indication

1262
00:53:16,170 --> 00:53:18,450
at all on the phone that hey you're

1263
00:53:18,450 --> 00:53:21,119
getting an ad to support this program so

1264
00:53:21,119 --> 00:53:23,309
most likely what's going on here is some

1265
00:53:23,309 --> 00:53:25,650
kind of click fraud which is standard

1266
00:53:25,650 --> 00:53:27,720
operating procedure for a lot of the

1267
00:53:27,720 --> 00:53:30,089
Russian criminal syndicates that are

1268
00:53:30,089 --> 00:53:32,460
generating malware those guys you know

1269
00:53:32,460 --> 00:53:34,440
the Chinese may be focused on stealing

1270
00:53:34,440 --> 00:53:36,599
American military secrets the Russians

1271
00:53:36,599 --> 00:53:38,430
just want to make money and it doesn't

1272
00:53:38,430 --> 00:53:40,829
matter if you're doing it through you

1273
00:53:40,829 --> 00:53:43,950
know SMS is to premium text services or

1274
00:53:43,950 --> 00:53:47,160
click fraud or extortion or whatever way

1275
00:53:47,160 --> 00:53:48,869
you want to do it hey as long as I make

1276
00:53:48,869 --> 00:53:51,630
money they don't care and you know the

1277
00:53:51,630 --> 00:53:54,660
reality of it is that phone seized a

1278
00:53:54,660 --> 00:53:57,480
have plenty of bandwidth on them you

1279
00:53:57,480 --> 00:53:59,430
know you've got 3g networks you're

1280
00:53:59,430 --> 00:54:01,549
starting to see 4g rollout in the States

1281
00:54:01,549 --> 00:54:03,809
there's all these phones of course or on

1282
00:54:03,809 --> 00:54:06,509
Wi-Fi networks as well I know that when

1283
00:54:06,509 --> 00:54:08,670
I'm in the office you know my phone

1284
00:54:08,670 --> 00:54:10,559
syncs up to the local wireless so it's

1285
00:54:10,559 --> 00:54:13,529
got gigabits of bandwidth at a time and

1286
00:54:13,529 --> 00:54:16,470
so realistically given that background

1287
00:54:16,470 --> 00:54:19,019
the chances are really high that phones

1288
00:54:19,019 --> 00:54:21,299
are going to be used as sort of standard

1289
00:54:21,299 --> 00:54:26,519
BOTS you know just like desktop BOTS you

1290
00:54:26,519 --> 00:54:28,470
know arts a day because essentially if

1291
00:54:28,470 --> 00:54:30,990
you think about it cell phones are just

1292
00:54:30,990 --> 00:54:33,509
laptops that we carry around and a tiny

1293
00:54:33,509 --> 00:54:35,190
form factor in our pocket all the time

1294
00:54:35,190 --> 00:54:38,369
so why not use the duel 1 gigahertz

1295
00:54:38,369 --> 00:54:41,279
cores on the new droid that's available

1296
00:54:41,279 --> 00:54:44,220
from motorola to do your spam generation

1297
00:54:44,220 --> 00:54:46,829
or DDoS activity or whatever else just

1298
00:54:46,829 --> 00:54:48,809
like you would some cranky old pc

1299
00:54:48,809 --> 00:54:51,299
running windows 95 that has 10 viruses

1300
00:54:51,299 --> 00:54:55,650
on it already so that basically wraps it

1301
00:54:55,650 --> 00:54:58,650
up here that's it's my analysis this is

1302
00:54:58,650 --> 00:55:01,559
contact information on how to get in

1303
00:55:01,559 --> 00:55:02,430
touch

1304
00:55:02,430 --> 00:55:04,920
we've got the VRT blog we publish

1305
00:55:04,920 --> 00:55:08,130
technical articles on you can also find

1306
00:55:08,130 --> 00:55:11,400
us on Twitter and I would encourage

1307
00:55:11,400 --> 00:55:13,530
anybody who's in this room who's

1308
00:55:13,530 --> 00:55:16,109
interested in this sort of stuff to not

1309
00:55:16,109 --> 00:55:17,460
only pay attention to what we're doing

1310
00:55:17,460 --> 00:55:20,579
on you know the public push forums but

1311
00:55:20,579 --> 00:55:22,530
feel free to reach out and contact me

1312
00:55:22,530 --> 00:55:24,599
directly if you have questions you've

1313
00:55:24,599 --> 00:55:26,490
got ideas for analysis that sort of

1314
00:55:26,490 --> 00:55:29,460
thing not only on Android specific stuff

1315
00:55:29,460 --> 00:55:31,890
but frankly you know I said I've got

1316
00:55:31,890 --> 00:55:33,710
this giant malware zoo it's got

1317
00:55:33,710 --> 00:55:35,640
terabytes worth of network traffic

1318
00:55:35,640 --> 00:55:37,859
you've got ideas you want to play with

1319
00:55:37,859 --> 00:55:40,640
boy if I got the data to do it with so

1320
00:55:40,640 --> 00:55:43,410
thank you very much and I'll open up to

1321
00:55:43,410 --> 00:55:51,540
questions anybody alright i will also

1322
00:55:51,540 --> 00:55:54,510
obviously be around afterwards both here

1323
00:55:54,510 --> 00:55:57,000
in the hallways and at hacking the bar

1324
00:55:57,000 --> 00:55:58,950
tonight if if you feel like you don't

1325
00:55:58,950 --> 00:56:00,359
want to ask a question in front of

1326
00:56:00,359 --> 00:56:01,800
everybody and then be concerned that

1327
00:56:01,800 --> 00:56:04,650
it's something something silly so with

1328
00:56:04,650 --> 00:56:08,690
that I guess I'll turn it back over here

