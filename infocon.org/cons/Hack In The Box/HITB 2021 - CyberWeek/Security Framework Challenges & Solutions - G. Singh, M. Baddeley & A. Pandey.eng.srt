1
00:00:12,080 --> 00:00:14,719
hi everyone good afternoon uh welcome to

2
00:00:14,719 --> 00:00:16,800
our talk

3
00:00:16,800 --> 00:00:18,800
uh my name is govind and with my

4
00:00:18,800 --> 00:00:20,800
colleague anshul uh i'll be giving this

5
00:00:20,800 --> 00:00:22,400
talk uh and

6
00:00:22,400 --> 00:00:24,480
will be uh the main topic is challenging

7
00:00:24,480 --> 00:00:26,160
solutions for the physical layer

8
00:00:26,160 --> 00:00:28,640
assisted security framework in flying ad

9
00:00:28,640 --> 00:00:30,960
hoc network so

10
00:00:30,960 --> 00:00:33,440
physical layer security is not a new

11
00:00:33,440 --> 00:00:35,680
term and this has been there

12
00:00:35,680 --> 00:00:37,840
for a while a lot of literature is

13
00:00:37,840 --> 00:00:40,399
available but there is no real time

14
00:00:40,399 --> 00:00:43,200
implementation uh exists or there is no

15
00:00:43,200 --> 00:00:45,680
use case implementation of physical

16
00:00:45,680 --> 00:00:48,320
assisted security available today

17
00:00:48,320 --> 00:00:49,520
so what

18
00:00:49,520 --> 00:00:51,199
why we are giving this talk because i

19
00:00:51,199 --> 00:00:52,000
mean

20
00:00:52,000 --> 00:00:54,239
as part of our applied research this is

21
00:00:54,239 --> 00:00:56,559
one of the key area and we try to

22
00:00:56,559 --> 00:00:57,760
implement some of the available

23
00:00:57,760 --> 00:00:59,600
literature and we

24
00:00:59,600 --> 00:01:02,719
uh we saw a lot of challenges we saw a

25
00:01:02,719 --> 00:01:04,640
lot of constraints that was being

26
00:01:04,640 --> 00:01:06,960
assumed so we thought like how to

27
00:01:06,960 --> 00:01:10,080
mitigate them one by one so in this talk

28
00:01:10,080 --> 00:01:11,760
we'll be briefly then talking about the

29
00:01:11,760 --> 00:01:14,320
challenges and some of the probable

30
00:01:14,320 --> 00:01:16,560
solutions or the direction we can have

31
00:01:16,560 --> 00:01:18,560
the implementation of the physical layer

32
00:01:18,560 --> 00:01:20,960
assisted security framework uh it can be

33
00:01:20,960 --> 00:01:23,040
in a flying a dock network or even it

34
00:01:23,040 --> 00:01:26,240
can be in any iot devices or in iot uh

35
00:01:26,240 --> 00:01:28,479
ecosystem be it consumer

36
00:01:28,479 --> 00:01:30,159
industrial or

37
00:01:30,159 --> 00:01:31,680
it can be

38
00:01:31,680 --> 00:01:33,759
infrastructure

39
00:01:33,759 --> 00:01:36,079
okay so this is the high level agenda

40
00:01:36,079 --> 00:01:38,479
and outline of the talk so we will start

41
00:01:38,479 --> 00:01:40,880
with introduction and motivation

42
00:01:40,880 --> 00:01:42,960
then we'll give brief introduction on

43
00:01:42,960 --> 00:01:45,200
the physical layer security and then we

44
00:01:45,200 --> 00:01:47,600
will review uh the implementation

45
00:01:47,600 --> 00:01:51,119
challenges uh for pls then we will be

46
00:01:51,119 --> 00:01:52,720
briefly talking about the different kind

47
00:01:52,720 --> 00:01:54,799
of capturing monitoring framework we

48
00:01:54,799 --> 00:01:57,280
have uh with the of the shell commercial

49
00:01:57,280 --> 00:02:00,159
wi-fi hardware platforms

50
00:02:00,159 --> 00:02:02,799
and then the conclusions and the future

51
00:02:02,799 --> 00:02:05,600
work and the roadmap we have ahead

52
00:02:05,600 --> 00:02:08,639
for the implementation

53
00:02:08,639 --> 00:02:09,598
okay

54
00:02:09,598 --> 00:02:10,639
before

55
00:02:10,639 --> 00:02:11,760
i start

56
00:02:11,760 --> 00:02:13,520
what is why we are doing what are the

57
00:02:13,520 --> 00:02:15,680
challenges let's briefly introduce about

58
00:02:15,680 --> 00:02:18,800
ourselves so we are part of secure

59
00:02:18,800 --> 00:02:20,959
system research center which is a

60
00:02:20,959 --> 00:02:23,280
applied research division of technology

61
00:02:23,280 --> 00:02:25,520
innovation institute in abu dhabi

62
00:02:25,520 --> 00:02:26,400
and

63
00:02:26,400 --> 00:02:29,599
what we do we we basically uh

64
00:02:29,599 --> 00:02:32,640
drive end-to-end security uh from top to

65
00:02:32,640 --> 00:02:36,080
top to up so when i mean down to top so

66
00:02:36,080 --> 00:02:37,680
when i say down to top means we

67
00:02:37,680 --> 00:02:39,519
basically uh

68
00:02:39,519 --> 00:02:42,800
drive from root of trust secure boot

69
00:02:42,800 --> 00:02:45,040
till application security middleware

70
00:02:45,040 --> 00:02:48,000
security and network security

71
00:02:48,000 --> 00:02:49,280
our group

72
00:02:49,280 --> 00:02:52,640
in ssrc is secure comms group which is

73
00:02:52,640 --> 00:02:55,120
basically focusing on network security

74
00:02:55,120 --> 00:02:58,720
which is like short range long range uh

75
00:02:58,720 --> 00:02:59,920
wireless

76
00:02:59,920 --> 00:03:01,120
security

77
00:03:01,120 --> 00:03:03,840
and we basically uh mainly focus on

78
00:03:03,840 --> 00:03:05,840
resilient and long-range wireless

79
00:03:05,840 --> 00:03:09,280
communication uh with low latency

80
00:03:09,280 --> 00:03:10,400
and

81
00:03:10,400 --> 00:03:12,560
we basically don't do theoretical

82
00:03:12,560 --> 00:03:14,959
research rather we believe in doing and

83
00:03:14,959 --> 00:03:16,319
we basically

84
00:03:16,319 --> 00:03:18,720
focus on applied research with real

85
00:03:18,720 --> 00:03:21,040
world applications

86
00:03:21,040 --> 00:03:23,599
so what are our use cases right why uh

87
00:03:23,599 --> 00:03:26,000
so just to give you some uh directions

88
00:03:26,000 --> 00:03:27,920
so let me quickly explain about our use

89
00:03:27,920 --> 00:03:31,920
cases so we have two use cases uh one is

90
00:03:31,920 --> 00:03:33,760
human to human communication use case

91
00:03:33,760 --> 00:03:36,080
which is essentially phone use case

92
00:03:36,080 --> 00:03:38,159
so in that case you can have

93
00:03:38,159 --> 00:03:41,519
chats emails video conferencing

94
00:03:41,519 --> 00:03:43,360
and other use cases machine to machine

95
00:03:43,360 --> 00:03:44,480
use case

96
00:03:44,480 --> 00:03:46,480
in that we can have telemetry data

97
00:03:46,480 --> 00:03:48,959
control command video streaming and the

98
00:03:48,959 --> 00:03:51,120
latency sensitive data

99
00:03:51,120 --> 00:03:52,480
so uh

100
00:03:52,480 --> 00:03:54,400
how what we are doing in this use case

101
00:03:54,400 --> 00:03:55,920
what is our contribution in this use

102
00:03:55,920 --> 00:03:57,840
case so we are building a secure

103
00:03:57,840 --> 00:04:00,319
wireless mesh core network which is

104
00:04:00,319 --> 00:04:03,680
connecting a lot of nodes uh in

105
00:04:03,680 --> 00:04:06,560
both of the use cases and

106
00:04:06,560 --> 00:04:09,599
in this mesh connectivity so we have

107
00:04:09,599 --> 00:04:11,120
larger number of nodes in this

108
00:04:11,120 --> 00:04:13,599
infrastructure so all our point-to-point

109
00:04:13,599 --> 00:04:17,279
communication so uh we have edges and we

110
00:04:17,279 --> 00:04:19,440
have fog nodes so the edge nodes

111
00:04:19,440 --> 00:04:20,959
essentially the communication link is

112
00:04:20,959 --> 00:04:24,320
wi-fi bluetooth 15.4 and other

113
00:04:24,320 --> 00:04:26,240
short-range communication protocol and

114
00:04:26,240 --> 00:04:27,040
for

115
00:04:27,040 --> 00:04:29,280
fog node the cloud connectivity through

116
00:04:29,280 --> 00:04:32,960
secure gateway we have lts backhaul

117
00:04:32,960 --> 00:04:35,440
so and we basically

118
00:04:35,440 --> 00:04:37,600
are using the open source components for

119
00:04:37,600 --> 00:04:40,000
very obvious reasons like i mean

120
00:04:40,000 --> 00:04:42,479
i mean this ecosystem is really good and

121
00:04:42,479 --> 00:04:45,600
you can easily scale up things uh and

122
00:04:45,600 --> 00:04:48,080
you know anyone can contribute

123
00:04:48,080 --> 00:04:50,320
and what we are uh doing uh so we are

124
00:04:50,320 --> 00:04:52,639
taking the base open source component

125
00:04:52,639 --> 00:04:54,400
for a basic building block on top of

126
00:04:54,400 --> 00:04:56,000
that we are adding our own specific

127
00:04:56,000 --> 00:04:58,000
value add with respect to the security

128
00:04:58,000 --> 00:05:00,160
component within the network stack and

129
00:05:00,160 --> 00:05:03,360
we are introducing ml based new

130
00:05:03,360 --> 00:05:05,759
schemes prototyping those schemes to

131
00:05:05,759 --> 00:05:07,600
adding the defense

132
00:05:07,600 --> 00:05:09,759
mechanism between these nodes and then

133
00:05:09,759 --> 00:05:11,440
we have uh

134
00:05:11,440 --> 00:05:12,960
dynamic radio management with

135
00:05:12,960 --> 00:05:14,240
multi-radio

136
00:05:14,240 --> 00:05:16,479
and so that we can do various band

137
00:05:16,479 --> 00:05:18,720
management we can do in a single band

138
00:05:18,720 --> 00:05:20,960
frequency hopping adaptive frequency

139
00:05:20,960 --> 00:05:23,440
hopping so these are some of the schemes

140
00:05:23,440 --> 00:05:26,160
so in this infrastructure the physical

141
00:05:26,160 --> 00:05:28,880
layer security is mainly used for mutual

142
00:05:28,880 --> 00:05:30,240
authentication and continuous

143
00:05:30,240 --> 00:05:32,800
authentication between two nodes so that

144
00:05:32,800 --> 00:05:34,160
is the main

145
00:05:34,160 --> 00:05:36,639
the high level overview so now i will

146
00:05:36,639 --> 00:05:38,880
hand over to my colleague anshul to give

147
00:05:38,880 --> 00:05:41,680
you just basic introduction on the pls

148
00:05:41,680 --> 00:05:45,520
why pls what is pls

149
00:05:45,759 --> 00:05:48,800
as a thank you govind for

150
00:05:48,800 --> 00:05:50,400
highlighting all those aspects on which

151
00:05:50,400 --> 00:05:52,960
we are working on different use cases so

152
00:05:52,960 --> 00:05:54,639
as we know that

153
00:05:54,639 --> 00:05:56,000
the recent developments which have

154
00:05:56,000 --> 00:05:57,520
happened in the

155
00:05:57,520 --> 00:05:59,520
domain of embedded systems and also in

156
00:05:59,520 --> 00:06:01,120
the wireless communication technologies

157
00:06:01,120 --> 00:06:03,039
have basically given driven a lot of

158
00:06:03,039 --> 00:06:04,560
applications machine to machine

159
00:06:04,560 --> 00:06:06,639
applications and even human-to-human

160
00:06:06,639 --> 00:06:08,880
applications so what are the our two

161
00:06:08,880 --> 00:06:10,800
main use cases on which we are working

162
00:06:10,800 --> 00:06:12,720
one is the machine-to-machine

163
00:06:12,720 --> 00:06:14,880
communication for that specifically we

164
00:06:14,880 --> 00:06:16,160
are looking into drone to drone

165
00:06:16,160 --> 00:06:17,759
communications and then we have our

166
00:06:17,759 --> 00:06:19,440
phone use case where

167
00:06:19,440 --> 00:06:21,680
basically there will be some sort of

168
00:06:21,680 --> 00:06:23,520
sleep sort of thing so that will

169
00:06:23,520 --> 00:06:25,840
basically help us to

170
00:06:25,840 --> 00:06:27,600
make the phones independent of some sort

171
00:06:27,600 --> 00:06:30,000
of communication technology but in this

172
00:06:30,000 --> 00:06:31,759
talk we will be mainly highlighting on

173
00:06:31,759 --> 00:06:34,960
the drone use case so this we have

174
00:06:34,960 --> 00:06:37,199
chosen because the drone use case is

175
00:06:37,199 --> 00:06:38,639
more challenging

176
00:06:38,639 --> 00:06:39,919
for

177
00:06:39,919 --> 00:06:41,680
implementing physical air security

178
00:06:41,680 --> 00:06:42,880
solutions

179
00:06:42,880 --> 00:06:44,080
means

180
00:06:44,080 --> 00:06:45,680
in any ways physical air security

181
00:06:45,680 --> 00:06:46,800
solutions

182
00:06:46,800 --> 00:06:48,880
there are a lot of work which have been

183
00:06:48,880 --> 00:06:51,759
going on it started sometime i think

184
00:06:51,759 --> 00:06:54,319
in 2010 to 12 but mostly it's in

185
00:06:54,319 --> 00:06:56,080
academic from the implementation point

186
00:06:56,080 --> 00:06:58,319
of view we can find a very lim

187
00:06:58,319 --> 00:07:00,960
the works which exist are very limited

188
00:07:00,960 --> 00:07:04,000
so we just try to explore these things

189
00:07:04,000 --> 00:07:07,120
on this so on the uav communication so

190
00:07:07,120 --> 00:07:09,280
why we have chosen this uav use case

191
00:07:09,280 --> 00:07:11,840
because as you know uav basically can

192
00:07:11,840 --> 00:07:13,360
revolution revolutionize the whole

193
00:07:13,360 --> 00:07:15,360
communication infrastructure because we

194
00:07:15,360 --> 00:07:17,120
are able to deploy a communication

195
00:07:17,120 --> 00:07:20,000
infrastructure in some place where it is

196
00:07:20,000 --> 00:07:21,840
very hard to reach

197
00:07:21,840 --> 00:07:24,240
or deploy the traditional communication

198
00:07:24,240 --> 00:07:26,479
infrastructure so uav provide us that

199
00:07:26,479 --> 00:07:29,280
ability so that is why they have seen a

200
00:07:29,280 --> 00:07:30,639
lot of

201
00:07:30,639 --> 00:07:32,720
applications for example disaster

202
00:07:32,720 --> 00:07:35,599
management we can these uavs can easily

203
00:07:35,599 --> 00:07:38,479
go and create an infrastructure and

204
00:07:38,479 --> 00:07:40,240
perform different

205
00:07:40,240 --> 00:07:41,680
operations to

206
00:07:41,680 --> 00:07:43,520
such as rescue operations and all those

207
00:07:43,520 --> 00:07:45,280
operations then we have military

208
00:07:45,280 --> 00:07:47,520
services so everyone is aware how these

209
00:07:47,520 --> 00:07:49,199
drones are basically

210
00:07:49,199 --> 00:07:50,960
changing the every

211
00:07:50,960 --> 00:07:53,599
even the warfare the each and everything

212
00:07:53,599 --> 00:07:54,879
is being changed

213
00:07:54,879 --> 00:07:58,080
now we are getting uavs with uavs you

214
00:07:58,080 --> 00:07:59,360
can just

215
00:07:59,360 --> 00:08:01,120
we are means

216
00:08:01,120 --> 00:08:02,560
you just

217
00:08:02,560 --> 00:08:04,800
it's basically it's just change

218
00:08:04,800 --> 00:08:07,039
everything we need to think carefully

219
00:08:07,039 --> 00:08:08,240
with

220
00:08:08,240 --> 00:08:09,680
then we have

221
00:08:09,680 --> 00:08:11,039
and then they can also perform the

222
00:08:11,039 --> 00:08:12,560
operations of real time and remote

223
00:08:12,560 --> 00:08:16,000
surveillance so that is an obvious

224
00:08:16,000 --> 00:08:18,639
use application of these uavs so they

225
00:08:18,639 --> 00:08:20,000
can also be beneficial for the

226
00:08:20,000 --> 00:08:22,080
agricultural purposes and

227
00:08:22,080 --> 00:08:24,720
amazon as we

228
00:08:24,720 --> 00:08:26,319
we all know that companies like

229
00:08:26,319 --> 00:08:28,879
emergence are already thinking or even

230
00:08:28,879 --> 00:08:30,000
using these

231
00:08:30,000 --> 00:08:31,280
drones to

232
00:08:31,280 --> 00:08:33,039
deliver the packages so

233
00:08:33,039 --> 00:08:35,279
they they provide a lot of applications

234
00:08:35,279 --> 00:08:36,640
that is why

235
00:08:36,640 --> 00:08:39,599
everyone is jumping onto this and even

236
00:08:39,599 --> 00:08:41,919
these uavs based infrastructure is one

237
00:08:41,919 --> 00:08:43,519
of the prominent

238
00:08:43,519 --> 00:08:45,760
uh use case which is

239
00:08:45,760 --> 00:08:47,360
which we are looking for 60 and beyond

240
00:08:47,360 --> 00:08:49,040
communication networks

241
00:08:49,040 --> 00:08:50,000
so

242
00:08:50,000 --> 00:08:51,839
although we have a lot of

243
00:08:51,839 --> 00:08:55,200
benefits with these uavs but there comes

244
00:08:55,200 --> 00:08:57,279
a lot of security challenges which we

245
00:08:57,279 --> 00:08:58,160
need to

246
00:08:58,160 --> 00:09:00,720
deploy which we need to address before

247
00:09:00,720 --> 00:09:02,720
actually deploy them because some of the

248
00:09:02,720 --> 00:09:05,519
applications in which uavs will be used

249
00:09:05,519 --> 00:09:06,720
will be life-threatening

250
00:09:06,720 --> 00:09:08,959
life-threatening

251
00:09:08,959 --> 00:09:11,760
so next uav security so

252
00:09:11,760 --> 00:09:13,519
traditionally we are using cryptographic

253
00:09:13,519 --> 00:09:15,519
approaches both symmetric and

254
00:09:15,519 --> 00:09:18,160
non-symmetric framework so

255
00:09:18,160 --> 00:09:20,480
in crypto it's

256
00:09:20,480 --> 00:09:23,200
difficult somehow in case of uav

257
00:09:23,200 --> 00:09:25,120
communication to deploy

258
00:09:25,120 --> 00:09:27,200
such uh security infrastructure the

259
00:09:27,200 --> 00:09:29,440
existing one cryptographic base because

260
00:09:29,440 --> 00:09:31,360
of the following region first

261
00:09:31,360 --> 00:09:33,360
in case of uavs we have a very limited

262
00:09:33,360 --> 00:09:34,560
amount of energy and also the

263
00:09:34,560 --> 00:09:36,880
computational capability so when we

264
00:09:36,880 --> 00:09:38,800
deploy such solutions based on

265
00:09:38,800 --> 00:09:40,880
cryptography they may consume a lot of

266
00:09:40,880 --> 00:09:43,200
resources and we don't want to happen we

267
00:09:43,200 --> 00:09:44,720
don't want to happen it

268
00:09:44,720 --> 00:09:45,680
so

269
00:09:45,680 --> 00:09:47,600
next second is the dynamic and the ad

270
00:09:47,600 --> 00:09:49,440
hoc topology so we know that since the

271
00:09:49,440 --> 00:09:50,959
uavs will be moving there will be a

272
00:09:50,959 --> 00:09:53,519
swamp of uvs and they will be moving in

273
00:09:53,519 --> 00:09:55,360
different directions the topology will

274
00:09:55,360 --> 00:09:57,440
be highly dynamic in nature so it will

275
00:09:57,440 --> 00:10:00,640
be very difficult to create some sort of

276
00:10:00,640 --> 00:10:02,959
a key distribution center to

277
00:10:02,959 --> 00:10:05,600
manage to distribute those keys and even

278
00:10:05,600 --> 00:10:07,920
if we create those keys the distribution

279
00:10:07,920 --> 00:10:10,640
will mainly happen on the over the air

280
00:10:10,640 --> 00:10:12,480
wireless channel and that is always

281
00:10:12,480 --> 00:10:13,920
vulnerable because on the wireless

282
00:10:13,920 --> 00:10:15,839
channel we are always doing the we are

283
00:10:15,839 --> 00:10:17,120
transmitting the information on the

284
00:10:17,120 --> 00:10:18,640
broadcast way

285
00:10:18,640 --> 00:10:20,399
next is the presence of an adversary

286
00:10:20,399 --> 00:10:22,800
with advocate computation capabilities

287
00:10:22,800 --> 00:10:24,959
there may be a use case of uav where

288
00:10:24,959 --> 00:10:27,760
there may be a nano drones use case

289
00:10:27,760 --> 00:10:28,640
so

290
00:10:28,640 --> 00:10:30,560
in that case if they are using these

291
00:10:30,560 --> 00:10:32,720
cryptographic keys so what may happen

292
00:10:32,720 --> 00:10:33,839
that

293
00:10:33,839 --> 00:10:35,360
that the adversaries may have

294
00:10:35,360 --> 00:10:37,200
computational capabilities which is even

295
00:10:37,200 --> 00:10:38,399
greater than the computational

296
00:10:38,399 --> 00:10:40,720
capabilities which are used at the

297
00:10:40,720 --> 00:10:44,800
legitimate users so it may then pose

298
00:10:44,800 --> 00:10:46,480
another thread that they might be able

299
00:10:46,480 --> 00:10:48,880
to break those encryption

300
00:10:48,880 --> 00:10:51,120
next so again the communication

301
00:10:51,120 --> 00:10:53,360
infrastructure of ub so it suppose the

302
00:10:53,360 --> 00:10:55,920
there is a uav up base station so it

303
00:10:55,920 --> 00:10:57,760
will be communicating with the ground

304
00:10:57,760 --> 00:10:59,600
through a line of sight links

305
00:10:59,600 --> 00:11:01,760
then we have a shared frequency band so

306
00:11:01,760 --> 00:11:03,360
most of these uavs will be operating

307
00:11:03,360 --> 00:11:04,640
over the com

308
00:11:04,640 --> 00:11:08,320
frequency bar bands like 2.4 gigahertz

309
00:11:08,320 --> 00:11:11,120
so and there a lot of users are already

310
00:11:11,120 --> 00:11:14,079
operating upon and then these uavs can

311
00:11:14,079 --> 00:11:15,279
be easily

312
00:11:15,279 --> 00:11:17,839
uh detected with some sort of radars and

313
00:11:17,839 --> 00:11:19,760
all those things so these three factors

314
00:11:19,760 --> 00:11:22,880
makes them easily more susceptible to uh

315
00:11:22,880 --> 00:11:25,519
jamming and each dropping attacks

316
00:11:25,519 --> 00:11:27,839
then we have another a very constrained

317
00:11:27,839 --> 00:11:30,000
network suppose our nano drones use case

318
00:11:30,000 --> 00:11:32,079
where the large number of small drones

319
00:11:32,079 --> 00:11:33,120
may be

320
00:11:33,120 --> 00:11:34,480
deployed to

321
00:11:34,480 --> 00:11:36,800
accomplish some mission so

322
00:11:36,800 --> 00:11:38,399
since they have very low computational

323
00:11:38,399 --> 00:11:42,000
capability so it will be difficult or it

324
00:11:42,000 --> 00:11:43,680
will be difficult for them to run those

325
00:11:43,680 --> 00:11:45,120
complex encryption and decryption

326
00:11:45,120 --> 00:11:49,920
algorithm so all these things basically

327
00:11:51,200 --> 00:11:52,959
generated a need that there should be

328
00:11:52,959 --> 00:11:54,480
something which could assist the

329
00:11:54,480 --> 00:11:56,480
existing cryptographic

330
00:11:56,480 --> 00:11:57,680
infrastructure which is already

331
00:11:57,680 --> 00:11:59,519
available i am not saying that it will

332
00:11:59,519 --> 00:12:02,240
be going to replace that or it can be an

333
00:12:02,240 --> 00:12:04,720
alternative but it can always assist

334
00:12:04,720 --> 00:12:07,440
that so for that we can use the physical

335
00:12:07,440 --> 00:12:09,440
air security solution so where basically

336
00:12:09,440 --> 00:12:11,600
we will be looking some of the physical

337
00:12:11,600 --> 00:12:13,519
layer features to generate

338
00:12:13,519 --> 00:12:15,920
security solution and it's simply signal

339
00:12:15,920 --> 00:12:17,920
processing so we are not

340
00:12:17,920 --> 00:12:19,040
posing

341
00:12:19,040 --> 00:12:23,800
a much overhead on the resources side

342
00:12:24,880 --> 00:12:27,440
so as i said physical air security so we

343
00:12:27,440 --> 00:12:28,959
just want to use

344
00:12:28,959 --> 00:12:30,480
the physical layer

345
00:12:30,480 --> 00:12:31,920
the characteristics of the physical

346
00:12:31,920 --> 00:12:34,800
layer our random channel to

347
00:12:34,800 --> 00:12:37,680
design some sort of security solutions

348
00:12:37,680 --> 00:12:40,160
so what it does so in physical air

349
00:12:40,160 --> 00:12:42,320
security so we know that if suppose two

350
00:12:42,320 --> 00:12:44,320
users wants to communicate suppose alice

351
00:12:44,320 --> 00:12:46,160
and bob wants to communicate so they

352
00:12:46,160 --> 00:12:47,760
will be communicating over the wireless

353
00:12:47,760 --> 00:12:49,839
channel and when we transmit a signal

354
00:12:49,839 --> 00:12:52,000
over the wireless channel the channel is

355
00:12:52,000 --> 00:12:54,240
completely random in nature so we can

356
00:12:54,240 --> 00:12:56,320
harness this randomness to design some

357
00:12:56,320 --> 00:12:58,320
sort of security solutions

358
00:12:58,320 --> 00:12:59,200
then

359
00:12:59,200 --> 00:13:00,720
apart from the channel characteristics

360
00:13:00,720 --> 00:13:02,000
we can also use some of the

361
00:13:02,000 --> 00:13:04,160
imperfections which are there on the

362
00:13:04,160 --> 00:13:06,959
radio front end and also on the device

363
00:13:06,959 --> 00:13:09,360
level imperfections which basically get

364
00:13:09,360 --> 00:13:10,800
incorporated

365
00:13:10,800 --> 00:13:12,880
into the um device during the

366
00:13:12,880 --> 00:13:14,240
manufacturing process which is also

367
00:13:14,240 --> 00:13:15,839
referred to as physically unclonable

368
00:13:15,839 --> 00:13:17,600
function pops

369
00:13:17,600 --> 00:13:19,839
so all these things we can take into

370
00:13:19,839 --> 00:13:21,279
account the channel based feature the

371
00:13:21,279 --> 00:13:22,639
device based features and even the

372
00:13:22,639 --> 00:13:23,839
features which are there or the

373
00:13:23,839 --> 00:13:26,560
imperfections what we say in case of rff

374
00:13:26,560 --> 00:13:29,040
front and front end to design some sort

375
00:13:29,040 --> 00:13:31,600
of security solution we can actually use

376
00:13:31,600 --> 00:13:32,959
the uniqueness

377
00:13:32,959 --> 00:13:34,800
which is associated with this feature to

378
00:13:34,800 --> 00:13:37,040
design the security solutions

379
00:13:37,040 --> 00:13:38,639
another thing is that the physical air

380
00:13:38,639 --> 00:13:40,959
security can guarantee perfect security

381
00:13:40,959 --> 00:13:43,199
so i will elaborate on this how it can

382
00:13:43,199 --> 00:13:45,839
be done in the next and the most

383
00:13:45,839 --> 00:13:47,519
interesting thing is that they basically

384
00:13:47,519 --> 00:13:49,440
operate independently of the existing

385
00:13:49,440 --> 00:13:51,519
cryptographic infrastructure so we can

386
00:13:51,519 --> 00:13:53,279
always implement them without

387
00:13:53,279 --> 00:13:55,040
interfering with the existing

388
00:13:55,040 --> 00:13:57,040
infrastructure

389
00:13:57,040 --> 00:13:59,519
so next what is physical air security so

390
00:13:59,519 --> 00:14:00,720
if we go

391
00:14:00,720 --> 00:14:03,760
on to the basics of communication theory

392
00:14:03,760 --> 00:14:06,720
suppose we have three nodes ls bob these

393
00:14:06,720 --> 00:14:08,959
are our legitimate users and we have an

394
00:14:08,959 --> 00:14:10,800
eavesdropper which in an adversary or a

395
00:14:10,800 --> 00:14:12,240
malicious user

396
00:14:12,240 --> 00:14:14,399
so alice wants to transmit some signal

397
00:14:14,399 --> 00:14:16,959
to bob and any stopper is there he is

398
00:14:16,959 --> 00:14:18,399
listening he is overhearing that

399
00:14:18,399 --> 00:14:20,000
information

400
00:14:20,000 --> 00:14:23,760
so the basic principle which we

401
00:14:23,760 --> 00:14:25,600
deploy in physical layer security is

402
00:14:25,600 --> 00:14:27,360
that

403
00:14:27,360 --> 00:14:28,720
we use

404
00:14:28,720 --> 00:14:31,760
a simple principle that if we transmit

405
00:14:31,760 --> 00:14:33,839
at a rate that is greater than the

406
00:14:33,839 --> 00:14:36,160
channel capacity instantaneous channel

407
00:14:36,160 --> 00:14:39,199
capacity then we will not be able to

408
00:14:39,199 --> 00:14:42,480
decode that information at the receiver

409
00:14:42,480 --> 00:14:44,800
with a reasonable

410
00:14:44,800 --> 00:14:46,880
errors means the error will be very high

411
00:14:46,880 --> 00:14:48,560
if you transmit at a rate which is

412
00:14:48,560 --> 00:14:50,000
greater than the channel capacity so

413
00:14:50,000 --> 00:14:52,079
this principle we are basically

414
00:14:52,079 --> 00:14:53,920
using to design physical air security

415
00:14:53,920 --> 00:14:56,240
solution so in this case

416
00:14:56,240 --> 00:14:58,079
we see that we have a legitimate channel

417
00:14:58,079 --> 00:15:00,160
that we can call the channel between the

418
00:15:00,160 --> 00:15:01,519
alice to bob

419
00:15:01,519 --> 00:15:03,040
and the wiretap channel which is the

420
00:15:03,040 --> 00:15:05,040
malicious link between the alice to eve

421
00:15:05,040 --> 00:15:07,440
so when l is broadcast some information

422
00:15:07,440 --> 00:15:09,440
so that anybody can hear

423
00:15:09,440 --> 00:15:10,240
so

424
00:15:10,240 --> 00:15:12,320
if the channel condition or the

425
00:15:12,320 --> 00:15:14,240
instantaneous channel capacity between

426
00:15:14,240 --> 00:15:17,199
the ls to bob is greater than the

427
00:15:17,199 --> 00:15:19,199
ls to if

428
00:15:19,199 --> 00:15:20,959
the channel capacity between the l is to

429
00:15:20,959 --> 00:15:23,760
eve and we transmit at a rate that the

430
00:15:23,760 --> 00:15:25,519
bob is able to decode that information

431
00:15:25,519 --> 00:15:28,079
however it is not possible to for the

432
00:15:28,079 --> 00:15:30,399
eve to decode that information because

433
00:15:30,399 --> 00:15:32,000
that rate is much greater than the

434
00:15:32,000 --> 00:15:34,480
channel capacity between alice to eve so

435
00:15:34,480 --> 00:15:37,040
we use this principle to basically

436
00:15:37,040 --> 00:15:40,320
use this is basically the principle of

437
00:15:40,320 --> 00:15:41,920
physical layer security so we are using

438
00:15:41,920 --> 00:15:44,320
this exploiting this principle

439
00:15:44,320 --> 00:15:45,199
so

440
00:15:45,199 --> 00:15:46,720
now this is basically the channel based

441
00:15:46,720 --> 00:15:48,079
features so

442
00:15:48,079 --> 00:15:49,680
in other words we can simply say that we

443
00:15:49,680 --> 00:15:51,279
somehow needs to

444
00:15:51,279 --> 00:15:54,320
improve the channel capacity for

445
00:15:54,320 --> 00:15:56,000
deploying the physical air security the

446
00:15:56,000 --> 00:15:58,240
channel conditions for the legitimate

447
00:15:58,240 --> 00:16:00,079
users must be better than the channel

448
00:16:00,079 --> 00:16:04,000
capacity for the what uh malicious users

449
00:16:04,000 --> 00:16:06,639
so the obvious question comes what if

450
00:16:06,639 --> 00:16:08,320
the if eavesdropper is very close to the

451
00:16:08,320 --> 00:16:09,279
eve

452
00:16:09,279 --> 00:16:11,519
very close to the alice then in that

453
00:16:11,519 --> 00:16:13,519
case the eavesdropper will have a much

454
00:16:13,519 --> 00:16:14,399
better

455
00:16:14,399 --> 00:16:16,480
channel condition as compared to the bob

456
00:16:16,480 --> 00:16:18,320
so we cannot deploy physical air

457
00:16:18,320 --> 00:16:20,560
security but it doesn't

458
00:16:20,560 --> 00:16:23,440
uh

459
00:16:23,440 --> 00:16:25,120
there are certain solutions which we can

460
00:16:25,120 --> 00:16:27,519
use in this case also for example we can

461
00:16:27,519 --> 00:16:30,000
use a dedicated jamming and that the

462
00:16:30,000 --> 00:16:31,440
jamming should be done in such a way

463
00:16:31,440 --> 00:16:33,199
that it should be in the null space of

464
00:16:33,199 --> 00:16:35,199
our legitimate user that is bob

465
00:16:35,199 --> 00:16:38,240
so when we deploy a jamming and that

466
00:16:38,240 --> 00:16:40,000
jamming signal basically interferes with

467
00:16:40,000 --> 00:16:41,839
the eve and it degrades the signal to

468
00:16:41,839 --> 00:16:45,360
noise ratio at the e and

469
00:16:45,360 --> 00:16:47,040
in this way we are basically degrading

470
00:16:47,040 --> 00:16:49,040
the channel quality of alice to if in

471
00:16:49,040 --> 00:16:51,199
compared to alice and bob similarly we

472
00:16:51,199 --> 00:16:53,360
can use other solutions like

473
00:16:53,360 --> 00:16:55,519
beam forming and then we have

474
00:16:55,519 --> 00:16:57,440
we can harness the benefits of diversity

475
00:16:57,440 --> 00:16:59,040
so there are a lot of solutions by which

476
00:16:59,040 --> 00:17:00,160
we can

477
00:17:00,160 --> 00:17:02,079
even deploy physical air security for

478
00:17:02,079 --> 00:17:03,920
the scenarios where the each dropper has

479
00:17:03,920 --> 00:17:06,079
a much better channel condition than the

480
00:17:06,079 --> 00:17:08,319
legitimate users

481
00:17:08,319 --> 00:17:10,480
so this was basically the information

482
00:17:10,480 --> 00:17:12,640
theoretic point of view in one word if

483
00:17:12,640 --> 00:17:14,400
you want to say that some the objective

484
00:17:14,400 --> 00:17:16,079
is we need to make the mutual

485
00:17:16,079 --> 00:17:17,760
information between the alice and bob as

486
00:17:17,760 --> 00:17:19,679
hero

487
00:17:19,679 --> 00:17:21,359
so

488
00:17:21,359 --> 00:17:23,439
and

489
00:17:23,439 --> 00:17:25,599
so there are features like as i already

490
00:17:25,599 --> 00:17:27,039
said so we have channel based features

491
00:17:27,039 --> 00:17:28,880
this feature the channel between alice

492
00:17:28,880 --> 00:17:31,840
to bob is completely random and another

493
00:17:31,840 --> 00:17:33,200
important fact

494
00:17:33,200 --> 00:17:35,120
is that

495
00:17:35,120 --> 00:17:36,160
the

496
00:17:36,160 --> 00:17:38,400
since ls to bob channel is also random

497
00:17:38,400 --> 00:17:40,559
and alice to each dropper the channel is

498
00:17:40,559 --> 00:17:42,559
also render random

499
00:17:42,559 --> 00:17:45,360
and we can assume that both the channels

500
00:17:45,360 --> 00:17:47,760
are completely independent of each other

501
00:17:47,760 --> 00:17:50,320
provided bob and each dropper are at

502
00:17:50,320 --> 00:17:52,640
least separated with each other at a

503
00:17:52,640 --> 00:17:54,960
half of wavelength the wavelength at

504
00:17:54,960 --> 00:17:56,799
which we are operating and since we are

505
00:17:56,799 --> 00:17:59,840
operating at gigahertz

506
00:17:59,840 --> 00:18:02,080
frequency like 2.4 gigahertz or even 5

507
00:18:02,080 --> 00:18:04,480
gigahertz band or even much higher so in

508
00:18:04,480 --> 00:18:06,240
that case the separation comes out to be

509
00:18:06,240 --> 00:18:09,520
in centimeters and that is practically

510
00:18:09,520 --> 00:18:10,799
feasible means

511
00:18:10,799 --> 00:18:13,600
we will always have a scenario where the

512
00:18:13,600 --> 00:18:17,440
user is sufficiently far apart from the

513
00:18:17,440 --> 00:18:19,600
sufficiently far apart so we can easily

514
00:18:19,600 --> 00:18:21,280
use this assumption so that assumptions

515
00:18:21,280 --> 00:18:24,480
holds values well very well so what we

516
00:18:24,480 --> 00:18:25,600
can say that

517
00:18:25,600 --> 00:18:28,559
each of the each channel is unique and

518
00:18:28,559 --> 00:18:30,240
it's completely different from the other

519
00:18:30,240 --> 00:18:32,640
channel apart from the random so we can

520
00:18:32,640 --> 00:18:34,160
harness this

521
00:18:34,160 --> 00:18:35,760
uh

522
00:18:35,760 --> 00:18:37,840
what we can say this feature to design

523
00:18:37,840 --> 00:18:40,080
some sort of symmetric

524
00:18:40,080 --> 00:18:42,480
encryption framework also

525
00:18:42,480 --> 00:18:44,160
so what are the

526
00:18:44,160 --> 00:18:46,320
best possible use cases where we can use

527
00:18:46,320 --> 00:18:49,280
so physical layer security presently is

528
00:18:49,280 --> 00:18:52,000
best suitable for the our iot use cases

529
00:18:52,000 --> 00:18:54,480
where we where our small

530
00:18:54,480 --> 00:18:56,320
low-end devices do not have enough

531
00:18:56,320 --> 00:18:57,919
capability to run those complex

532
00:18:57,919 --> 00:18:59,840
encryption and decryption algorithms so

533
00:18:59,840 --> 00:19:01,679
in that case we can design those

534
00:19:01,679 --> 00:19:03,200
physical layer security solutions or we

535
00:19:03,200 --> 00:19:05,679
can implement them and this also

536
00:19:05,679 --> 00:19:07,520
provides one of the best use case for

537
00:19:07,520 --> 00:19:09,600
the case where it's very difficult to

538
00:19:09,600 --> 00:19:11,280
have a central authority something like

539
00:19:11,280 --> 00:19:13,600
that where we can it's very difficult to

540
00:19:13,600 --> 00:19:15,679
deploy some sort of a key distribution

541
00:19:15,679 --> 00:19:18,000
center so in that case we can use

542
00:19:18,000 --> 00:19:20,000
physical air security although there is

543
00:19:20,000 --> 00:19:21,600
a limitation with physical air security

544
00:19:21,600 --> 00:19:23,760
also at present physical layer security

545
00:19:23,760 --> 00:19:25,200
is valid only for the point-to-point

546
00:19:25,200 --> 00:19:26,880
communication if you are thinking that

547
00:19:26,880 --> 00:19:28,880
it can be

548
00:19:28,880 --> 00:19:31,360
expanded to on the network on the whole

549
00:19:31,360 --> 00:19:34,000
network point of view so it's difficult

550
00:19:34,000 --> 00:19:36,240
so presently the most of the solutions

551
00:19:36,240 --> 00:19:37,200
are

552
00:19:37,200 --> 00:19:38,559
valid only for point-to-point

553
00:19:38,559 --> 00:19:40,799
communication

554
00:19:40,799 --> 00:19:42,799
so keeping in this point we are

555
00:19:42,799 --> 00:19:44,240
basically looking into the physical

556
00:19:44,240 --> 00:19:45,919
layer security solutions to design the

557
00:19:45,919 --> 00:19:47,200
following

558
00:19:47,200 --> 00:19:49,280
solutions like mutual and continuous

559
00:19:49,280 --> 00:19:51,600
authentication so as i already pointed

560
00:19:51,600 --> 00:19:54,080
out that the channel between each two

561
00:19:54,080 --> 00:19:56,559
communicating entities are unique so we

562
00:19:56,559 --> 00:19:59,120
can harness this uh features the channel

563
00:19:59,120 --> 00:20:00,400
feature the uniqueness in the channel

564
00:20:00,400 --> 00:20:03,280
feature and also the imperfections which

565
00:20:03,280 --> 00:20:05,360
are there on the rfa front front end

566
00:20:05,360 --> 00:20:07,440
like we are using simple our local

567
00:20:07,440 --> 00:20:09,600
oscillators so they have

568
00:20:09,600 --> 00:20:12,159
inherent some clock drift so these clock

569
00:20:12,159 --> 00:20:14,240
drifts are also unique in nature so we

570
00:20:14,240 --> 00:20:16,480
can even exploit that thing then we have

571
00:20:16,480 --> 00:20:18,080
some device specific features like the

572
00:20:18,080 --> 00:20:20,000
physically unclonable function so those

573
00:20:20,000 --> 00:20:21,679
can be exploited so all these features

574
00:20:21,679 --> 00:20:24,240
are basic can be basically exploited to

575
00:20:24,240 --> 00:20:26,880
generate a some sort of fingerprint

576
00:20:26,880 --> 00:20:28,720
either associated with a device or with

577
00:20:28,720 --> 00:20:31,600
a link so that can be used for mutual or

578
00:20:31,600 --> 00:20:33,919
con for performing mutual and continuous

579
00:20:33,919 --> 00:20:35,760
authentication then we have five

580
00:20:35,760 --> 00:20:37,760
assisted key generation so since we know

581
00:20:37,760 --> 00:20:40,799
that alice and bob

582
00:20:40,799 --> 00:20:42,640
their channel is unique

583
00:20:42,640 --> 00:20:43,440
and

584
00:20:43,440 --> 00:20:45,600
there is another factor which we call as

585
00:20:45,600 --> 00:20:48,240
reciprocity principle which says that

586
00:20:48,240 --> 00:20:50,559
what alice will see

587
00:20:50,559 --> 00:20:52,000
that

588
00:20:52,000 --> 00:20:54,640
its channel to bob the bob will also see

589
00:20:54,640 --> 00:20:57,120
the same channel to alice

590
00:20:57,120 --> 00:20:58,799
provided

591
00:20:58,799 --> 00:20:59,760
this

592
00:20:59,760 --> 00:21:01,360
in a given time frame and that time

593
00:21:01,360 --> 00:21:03,679
frame is called coherence time so if the

594
00:21:03,679 --> 00:21:05,440
communication exchanges happen between

595
00:21:05,440 --> 00:21:07,200
ls to bob and bob to alice within a

596
00:21:07,200 --> 00:21:09,200
given coherence time

597
00:21:09,200 --> 00:21:11,039
the ls to bob channel and the boss to

598
00:21:11,039 --> 00:21:12,799
alice channel both will have the same

599
00:21:12,799 --> 00:21:15,120
response so we can use this feature to

600
00:21:15,120 --> 00:21:16,960
independently generate

601
00:21:16,960 --> 00:21:18,960
secret keys at both alice and bob

602
00:21:18,960 --> 00:21:20,880
without requiring any third party so

603
00:21:20,880 --> 00:21:22,480
that can be used to generate some sort

604
00:21:22,480 --> 00:21:25,200
of security symmetric key framework then

605
00:21:25,200 --> 00:21:28,000
we have anti eavesdropping solution so

606
00:21:28,000 --> 00:21:29,600
we can use for anti each dropping

607
00:21:29,600 --> 00:21:31,840
solution we what we can use we can apart

608
00:21:31,840 --> 00:21:33,120
from jamming and all those solutions

609
00:21:33,120 --> 00:21:35,200
which exist a simple solution is we can

610
00:21:35,200 --> 00:21:37,840
perform some sort of bit scrambling

611
00:21:37,840 --> 00:21:41,280
like in case of ofdm systems it is very

612
00:21:41,280 --> 00:21:43,440
essential that

613
00:21:43,440 --> 00:21:45,440
the bits the information the symbols

614
00:21:45,440 --> 00:21:47,200
which we are transmitting are perfectly

615
00:21:47,200 --> 00:21:50,000
mapped and how they are basically mapped

616
00:21:50,000 --> 00:21:51,520
it should be aware

617
00:21:51,520 --> 00:21:54,080
at the receiver side even if one or two

618
00:21:54,080 --> 00:21:55,280
of the symbols

619
00:21:55,280 --> 00:21:56,400
are not

620
00:21:56,400 --> 00:21:59,360
means they got misplaced or

621
00:21:59,360 --> 00:22:00,240
the

622
00:22:00,240 --> 00:22:03,039
receiver is not able to identify then it

623
00:22:03,039 --> 00:22:04,240
results in to see

624
00:22:04,240 --> 00:22:06,400
severe degradation of the snr

625
00:22:06,400 --> 00:22:08,880
so we can even perform this simple you

626
00:22:08,880 --> 00:22:11,360
know this what we can say bit scrambling

627
00:22:11,360 --> 00:22:14,240
thing to design some sort of pre-coding

628
00:22:14,240 --> 00:22:15,120
scheme

629
00:22:15,120 --> 00:22:16,559
to basically design some sort of

630
00:22:16,559 --> 00:22:18,000
entities coding anti-each dropping

631
00:22:18,000 --> 00:22:19,520
solution because if the pre-coding

632
00:22:19,520 --> 00:22:21,280
scheme how we are doing that bit

633
00:22:21,280 --> 00:22:22,400
scrambling

634
00:22:22,400 --> 00:22:24,720
that is aware that is available only

635
00:22:24,720 --> 00:22:25,679
with the

636
00:22:25,679 --> 00:22:28,000
legitimate user so if somebody is

637
00:22:28,000 --> 00:22:29,679
even listening to that information he

638
00:22:29,679 --> 00:22:31,919
will not be able to decode

639
00:22:31,919 --> 00:22:34,720
decode anything

640
00:22:35,520 --> 00:22:36,400
and

641
00:22:36,400 --> 00:22:38,960
one important means use case of physical

642
00:22:38,960 --> 00:22:41,840
air security suppose cons

643
00:22:41,840 --> 00:22:44,000
there are some informations which

644
00:22:44,000 --> 00:22:46,240
can always be beneficial means they

645
00:22:46,240 --> 00:22:49,360
don't lose their value after time

646
00:22:49,360 --> 00:22:52,320
so in such cases physical aid security

647
00:22:52,320 --> 00:22:53,760
can be much

648
00:22:53,760 --> 00:22:56,720
beneficial than the cryptography is like

649
00:22:56,720 --> 00:22:59,120
suppose if i am storing some information

650
00:22:59,120 --> 00:23:01,440
and later on by some hit and trial i got

651
00:23:01,440 --> 00:23:03,039
the key so i will be able to decode that

652
00:23:03,039 --> 00:23:04,080
information

653
00:23:04,080 --> 00:23:05,840
but if i am

654
00:23:05,840 --> 00:23:07,600
using physical air security i am

655
00:23:07,600 --> 00:23:08,880
deploying the solution and i am

656
00:23:08,880 --> 00:23:10,640
satisfying that condition that the

657
00:23:10,640 --> 00:23:13,200
channel condition between ls to bob is

658
00:23:13,200 --> 00:23:15,280
or the legitimate receiver is

659
00:23:15,280 --> 00:23:18,080
much better than the our wiretap link

660
00:23:18,080 --> 00:23:20,240
then the each dropper will never be able

661
00:23:20,240 --> 00:23:22,720
to decode that information because even

662
00:23:22,720 --> 00:23:24,480
if it's able to decode that information

663
00:23:24,480 --> 00:23:26,000
the probability of error would be always

664
00:23:26,000 --> 00:23:28,960
greater than 0.5 so for every two bits

665
00:23:28,960 --> 00:23:30,960
one bit will be wrong so he will not get

666
00:23:30,960 --> 00:23:31,840
anything

667
00:23:31,840 --> 00:23:34,159
so in this in those type of scenarios it

668
00:23:34,159 --> 00:23:35,200
is very

669
00:23:35,200 --> 00:23:37,840
very beneficial

670
00:23:38,720 --> 00:23:40,880
so keeping in mind

671
00:23:40,880 --> 00:23:44,640
at ti we are doing research on our own

672
00:23:44,640 --> 00:23:46,960
we are driving some of the research

673
00:23:46,960 --> 00:23:48,240
in this direction of physical air

674
00:23:48,240 --> 00:23:50,000
security and looking how to implement

675
00:23:50,000 --> 00:23:51,679
them apart from that we have also

676
00:23:51,679 --> 00:23:54,400
multiple projects which are currently

677
00:23:54,400 --> 00:23:56,159
going on in partnership with khalifa

678
00:23:56,159 --> 00:23:57,520
university these are some of the

679
00:23:57,520 --> 00:23:59,440
projects and we are using and we are

680
00:23:59,440 --> 00:24:00,880
looking to use this physical layer

681
00:24:00,880 --> 00:24:02,960
security to design authentication

682
00:24:02,960 --> 00:24:05,279
encryption and also for radio result

683
00:24:05,279 --> 00:24:07,840
resilience

684
00:24:09,200 --> 00:24:10,240
so next

685
00:24:10,240 --> 00:24:13,039
a little bit means we search to the best

686
00:24:13,039 --> 00:24:15,520
of our knowledge we have did a thorough

687
00:24:15,520 --> 00:24:16,799
survey

688
00:24:16,799 --> 00:24:19,600
from the specifically looking

689
00:24:19,600 --> 00:24:21,200
how much work has been done from the

690
00:24:21,200 --> 00:24:23,120
implementation side

691
00:24:23,120 --> 00:24:25,600
so we could find the following

692
00:24:25,600 --> 00:24:27,279
works which are basically used

693
00:24:27,279 --> 00:24:29,039
physically as security for continuous

694
00:24:29,039 --> 00:24:31,120
authentication even for secret key

695
00:24:31,120 --> 00:24:32,960
generation sibel attack detection and

696
00:24:32,960 --> 00:24:34,400
anti-eavesdropping solution secure

697
00:24:34,400 --> 00:24:35,840
precoding

698
00:24:35,840 --> 00:24:37,679
so like continuous authentication people

699
00:24:37,679 --> 00:24:39,520
service several works are there which

700
00:24:39,520 --> 00:24:41,279
have exploited

701
00:24:41,279 --> 00:24:42,880
radio front-end features like the local

702
00:24:42,880 --> 00:24:45,120
oscillator drifts to basically

703
00:24:45,120 --> 00:24:47,120
identify a device and then they have

704
00:24:47,120 --> 00:24:49,520
also used the csi information in the csi

705
00:24:49,520 --> 00:24:51,679
they have used different strategies to

706
00:24:51,679 --> 00:24:53,279
use both the amplitude information and

707
00:24:53,279 --> 00:24:54,880
the phase information

708
00:24:54,880 --> 00:24:56,640
so all these information have basically

709
00:24:56,640 --> 00:25:01,039
been used to design some sort of

710
00:25:01,039 --> 00:25:02,880
for continuous authentication next we

711
00:25:02,880 --> 00:25:04,720
have secret key generation so secret key

712
00:25:04,720 --> 00:25:06,320
generation have also been

713
00:25:06,320 --> 00:25:08,240
very well studies there have been some

714
00:25:08,240 --> 00:25:11,200
very simple stats studies like based on

715
00:25:11,200 --> 00:25:12,960
rss receive signal strength because that

716
00:25:12,960 --> 00:25:14,480
is readily available with the available

717
00:25:14,480 --> 00:25:15,600
platform

718
00:25:15,600 --> 00:25:16,480
but

719
00:25:16,480 --> 00:25:18,960
rss is very unstable so that is the

720
00:25:18,960 --> 00:25:20,159
problem

721
00:25:20,159 --> 00:25:21,520
then

722
00:25:21,520 --> 00:25:23,760
again we have the mobility so with

723
00:25:23,760 --> 00:25:27,200
mobility not only the

724
00:25:27,200 --> 00:25:30,159
stability of the capture data

725
00:25:30,159 --> 00:25:33,039
reduces but also we have another

726
00:25:33,039 --> 00:25:34,720
factors which affects is the coherence

727
00:25:34,720 --> 00:25:35,520
time

728
00:25:35,520 --> 00:25:36,960
for instance if you are looking into the

729
00:25:36,960 --> 00:25:38,799
secret key generation so for secret key

730
00:25:38,799 --> 00:25:40,480
generation what we are talking about

731
00:25:40,480 --> 00:25:42,320
alice should send a sufficient number of

732
00:25:42,320 --> 00:25:44,240
pro packets to bob and bob should also

733
00:25:44,240 --> 00:25:46,400
send a sufficient number of pro packets

734
00:25:46,400 --> 00:25:49,200
to alice so that both can get an

735
00:25:49,200 --> 00:25:50,720
estimate of the channel between the

736
00:25:50,720 --> 00:25:53,840
alice and bob and this probing packets

737
00:25:53,840 --> 00:25:55,520
transmission to and fro should happen

738
00:25:55,520 --> 00:25:57,919
within the coherence time because if it

739
00:25:57,919 --> 00:25:59,440
will happen after the coherence time the

740
00:25:59,440 --> 00:26:00,640
channel will change

741
00:26:00,640 --> 00:26:02,320
then the keys which will be generated

742
00:26:02,320 --> 00:26:04,000
using this information will be entirely

743
00:26:04,000 --> 00:26:06,080
different on the two sides and then it

744
00:26:06,080 --> 00:26:08,000
will not make any sense so that is one

745
00:26:08,000 --> 00:26:09,279
of the biggest challenge which we are

746
00:26:09,279 --> 00:26:11,360
facing at present to

747
00:26:11,360 --> 00:26:13,679
actually transmit and receive sufficient

748
00:26:13,679 --> 00:26:15,039
number of pro packets within the

749
00:26:15,039 --> 00:26:17,360
coherence time apart from that another

750
00:26:17,360 --> 00:26:19,360
challenge is that

751
00:26:19,360 --> 00:26:20,880
one of the node

752
00:26:20,880 --> 00:26:21,760
should

753
00:26:21,760 --> 00:26:24,960
be in the monitor mode

754
00:26:24,960 --> 00:26:26,880
means suppose alice is transmitting the

755
00:26:26,880 --> 00:26:28,320
pro packet so bob should be in the

756
00:26:28,320 --> 00:26:30,720
monitor mode and then suddenly bob

757
00:26:30,720 --> 00:26:33,200
should transmit and then alice should go

758
00:26:33,200 --> 00:26:35,039
into the monitor node so this role

759
00:26:35,039 --> 00:26:37,840
reversal so it also takes some time when

760
00:26:37,840 --> 00:26:40,400
you go into the real world so

761
00:26:40,400 --> 00:26:41,679
we need to

762
00:26:41,679 --> 00:26:44,559
do not only significant exchanges of

763
00:26:44,559 --> 00:26:46,080
significant number of probe packets

764
00:26:46,080 --> 00:26:49,279
between two entities but also do the row

765
00:26:49,279 --> 00:26:52,080
reversal within the coherence time so

766
00:26:52,080 --> 00:26:53,360
that is

767
00:26:53,360 --> 00:26:55,279
a very challenging

768
00:26:55,279 --> 00:26:57,120
task

769
00:26:57,120 --> 00:26:59,600
so and next this

770
00:26:59,600 --> 00:27:01,279
physical air security has also been used

771
00:27:01,279 --> 00:27:03,039
for civil attack detection so this is

772
00:27:03,039 --> 00:27:04,000
actually

773
00:27:04,000 --> 00:27:05,200
civil attack detection and

774
00:27:05,200 --> 00:27:07,360
anti-eavesdropping solution are the two

775
00:27:07,360 --> 00:27:08,400
most

776
00:27:08,400 --> 00:27:10,240
possible

777
00:27:10,240 --> 00:27:12,240
solutions which we can easily means

778
00:27:12,240 --> 00:27:14,799
looks easy to design and it's actually

779
00:27:14,799 --> 00:27:16,400
easier to design compared to the above

780
00:27:16,400 --> 00:27:18,640
two framework simple attack detection is

781
00:27:18,640 --> 00:27:20,559
basically exploit the rss receive signal

782
00:27:20,559 --> 00:27:22,720
strength value because rss received

783
00:27:22,720 --> 00:27:24,080
signal strength

784
00:27:24,080 --> 00:27:25,279
can be

785
00:27:25,279 --> 00:27:27,840
easily quantify the localization aspect

786
00:27:27,840 --> 00:27:30,320
so it's simply

787
00:27:30,320 --> 00:27:32,000
dependent on the distance of the node or

788
00:27:32,000 --> 00:27:33,440
the position of the node where it is

789
00:27:33,440 --> 00:27:36,480
located so if suppose we have a given

790
00:27:36,480 --> 00:27:38,640
node who who just virtually creates a

791
00:27:38,640 --> 00:27:40,159
large number of nodes and all those

792
00:27:40,159 --> 00:27:42,000
virtual nodes are

793
00:27:42,000 --> 00:27:43,760
bombarding some sort of packets or

794
00:27:43,760 --> 00:27:45,440
create trying to create a denial of

795
00:27:45,440 --> 00:27:47,919
service sort of scenarios so in that

796
00:27:47,919 --> 00:27:49,840
case although they are doing uh these

797
00:27:49,840 --> 00:27:51,679
things denier service scenario but we

798
00:27:51,679 --> 00:27:53,840
can easily identify them because all of

799
00:27:53,840 --> 00:27:55,200
these virtual nodes will be having the

800
00:27:55,200 --> 00:27:57,679
same rss value even if they are using

801
00:27:57,679 --> 00:27:59,440
some sort of power adaptation in key

802
00:27:59,440 --> 00:28:01,520
schemes we can also detect that so that

803
00:28:01,520 --> 00:28:03,200
is also easy so

804
00:28:03,200 --> 00:28:04,640
that task can be easily performed

805
00:28:04,640 --> 00:28:06,480
similar attack detection next to the

806
00:28:06,480 --> 00:28:08,320
anti-each dropping so which i just

807
00:28:08,320 --> 00:28:11,360
talked about a few minutes ago so it's

808
00:28:11,360 --> 00:28:13,279
about secure pre-coding means the

809
00:28:13,279 --> 00:28:15,039
mapping of symbol

810
00:28:15,039 --> 00:28:18,480
and bit scrambling

811
00:28:20,080 --> 00:28:22,000
so

812
00:28:22,000 --> 00:28:24,320
what are the challenges

813
00:28:24,320 --> 00:28:26,480
of all the works which have been done so

814
00:28:26,480 --> 00:28:28,960
first is the

815
00:28:28,960 --> 00:28:30,720
the radios which are available do not

816
00:28:30,720 --> 00:28:33,440
provide us the flexibility to actually

817
00:28:33,440 --> 00:28:36,000
capture the data because they are binary

818
00:28:36,000 --> 00:28:38,159
in nature we cannot change the firmware

819
00:28:38,159 --> 00:28:41,279
so that is one of the major limitations

820
00:28:41,279 --> 00:28:43,360
so what is the solution we need to go

821
00:28:43,360 --> 00:28:44,960
for the sdrs

822
00:28:44,960 --> 00:28:48,080
and as when we are looking into the sdrs

823
00:28:48,080 --> 00:28:49,919
so first thing is that

824
00:28:49,919 --> 00:28:51,600
this uh it will be a very costly

825
00:28:51,600 --> 00:28:53,440
solution second

826
00:28:53,440 --> 00:28:55,840
the form factor in some of the use cases

827
00:28:55,840 --> 00:28:58,799
it it will not be possible to deploy sds

828
00:28:58,799 --> 00:29:00,720
like for instance if we consider the use

829
00:29:00,720 --> 00:29:02,559
case of a nano drones so there it will

830
00:29:02,559 --> 00:29:05,840
not be possible to use sdr's

831
00:29:05,840 --> 00:29:08,000
so next is the mobility effect because

832
00:29:08,000 --> 00:29:12,360
when the thing starts to move

833
00:29:13,039 --> 00:29:15,120
yeah we are

834
00:29:15,120 --> 00:29:16,559
facing constraint in terms of the

835
00:29:16,559 --> 00:29:19,279
coherence time and other is that

836
00:29:19,279 --> 00:29:21,440
the other thing is the role reversal

837
00:29:21,440 --> 00:29:22,880
that is also one of the challenging

838
00:29:22,880 --> 00:29:23,600
thing

839
00:29:23,600 --> 00:29:25,279
then the other factors are the poor

840
00:29:25,279 --> 00:29:27,440
dynamic range limited bandwidth the high

841
00:29:27,440 --> 00:29:28,799
power consumption and the frequency

842
00:29:28,799 --> 00:29:30,960
ranges so all these things basically

843
00:29:30,960 --> 00:29:33,679
limits the application or even the

844
00:29:33,679 --> 00:29:35,360
deployment of physical layer security

845
00:29:35,360 --> 00:29:37,360
solutions into the our

846
00:29:37,360 --> 00:29:40,480
onto the product side

847
00:29:40,480 --> 00:29:41,679
so

848
00:29:41,679 --> 00:29:44,159
there are a lot of challenges so

849
00:29:44,159 --> 00:29:46,000
the first challenges which

850
00:29:46,000 --> 00:29:48,559
means in each steps there are challenges

851
00:29:48,559 --> 00:29:49,919
so first step

852
00:29:49,919 --> 00:29:52,159
is how we can do

853
00:29:52,159 --> 00:29:54,880
these five layer feature extraction like

854
00:29:54,880 --> 00:29:56,799
suppose the csi extraction and all those

855
00:29:56,799 --> 00:30:00,000
things without using sdrs so we looked

856
00:30:00,000 --> 00:30:02,399
some of the off the shelf solutions

857
00:30:02,399 --> 00:30:04,000
which are low cost

858
00:30:04,000 --> 00:30:06,320
and has a good form factor that can be

859
00:30:06,320 --> 00:30:08,480
easily used in all the

860
00:30:08,480 --> 00:30:10,799
in all our use cases so that is the

861
00:30:10,799 --> 00:30:12,880
major problem which will be tackling

862
00:30:12,880 --> 00:30:15,120
into this presentation so how to perform

863
00:30:15,120 --> 00:30:16,880
this physical

864
00:30:16,880 --> 00:30:19,039
layer feature extraction so next govin

865
00:30:19,039 --> 00:30:21,120
will basically highlight on this aspect

866
00:30:21,120 --> 00:30:24,080
the different modules on which

867
00:30:24,080 --> 00:30:25,200
yeah

868
00:30:25,200 --> 00:30:28,159
so uh we understood like uh why sdr

869
00:30:28,159 --> 00:30:29,360
cannot be the

870
00:30:29,360 --> 00:30:32,080
obvious choice to integrate uh all of

871
00:30:32,080 --> 00:30:35,360
these solutions all of these uh you know

872
00:30:35,360 --> 00:30:37,440
schemes in the use case

873
00:30:37,440 --> 00:30:39,679
so because of the cost because of the

874
00:30:39,679 --> 00:30:41,200
form factor because of the power

875
00:30:41,200 --> 00:30:43,520
consumption and it doesn't have the good

876
00:30:43,520 --> 00:30:45,200
dynamic range because we cannot cover

877
00:30:45,200 --> 00:30:49,200
complete spectrum and uh plus it it the

878
00:30:49,200 --> 00:30:50,880
precision we don't get because with the

879
00:30:50,880 --> 00:30:52,799
sdr we cannot get the same kind of

880
00:30:52,799 --> 00:30:54,880
precision what we can get with of the

881
00:30:54,880 --> 00:30:56,880
shelf commercial hardwares

882
00:30:56,880 --> 00:30:58,880
okay so now as

883
00:30:58,880 --> 00:31:00,960
to split this problem statement so now

884
00:31:00,960 --> 00:31:03,200
how to extract those features with of

885
00:31:03,200 --> 00:31:05,279
the shelf commercial hardwares

886
00:31:05,279 --> 00:31:06,880
so that can be any radio i mean it can

887
00:31:06,880 --> 00:31:10,940
be wi-fi bluetooth 15.4 lte it can be

888
00:31:10,940 --> 00:31:12,399
[Applause]

889
00:31:12,399 --> 00:31:14,399
any other short range or long range

890
00:31:14,399 --> 00:31:16,080
hardware platforms

891
00:31:16,080 --> 00:31:18,480
so what we did is like i mean we are

892
00:31:18,480 --> 00:31:21,760
kind of benchmarking all of these radios

893
00:31:21,760 --> 00:31:24,559
in our use cases in our platforms which

894
00:31:24,559 --> 00:31:26,399
is like phone use case and the drone use

895
00:31:26,399 --> 00:31:29,200
case and what we are doing is we are

896
00:31:29,200 --> 00:31:32,159
creating a monitoring framework to get

897
00:31:32,159 --> 00:31:34,480
all of these radio measurements so that

898
00:31:34,480 --> 00:31:36,240
we can basically implement all the

899
00:31:36,240 --> 00:31:38,159
schemes that are already available today

900
00:31:38,159 --> 00:31:39,840
in the literature

901
00:31:39,840 --> 00:31:40,640
so

902
00:31:40,640 --> 00:31:42,159
if you see the green area so this is

903
00:31:42,159 --> 00:31:44,559
like physical layer parameter monitoring

904
00:31:44,559 --> 00:31:48,480
module so uh if you see the

905
00:31:48,480 --> 00:31:50,159
if you see this is the high level stack

906
00:31:50,159 --> 00:31:52,080
of whatever the use cases i explained

907
00:31:52,080 --> 00:31:54,480
earlier so for both use cases the high

908
00:31:54,480 --> 00:31:57,279
level stacks look like same so in the

909
00:31:57,279 --> 00:31:59,840
plpm so what we gonna do or what we are

910
00:31:59,840 --> 00:32:03,200
doing for our benchmarking like we are

911
00:32:03,200 --> 00:32:05,440
we are categorizing different rf

912
00:32:05,440 --> 00:32:08,720
parameters different characteristics and

913
00:32:08,720 --> 00:32:10,720
just figuring out classifying which

914
00:32:10,720 --> 00:32:12,640
radio can cater what kind of

915
00:32:12,640 --> 00:32:14,559
characteristics what kind of impairments

916
00:32:14,559 --> 00:32:16,000
what kind of uh

917
00:32:16,000 --> 00:32:18,720
fire attributes so we have come up with

918
00:32:18,720 --> 00:32:21,120
this i mean as part of benchmarking so

919
00:32:21,120 --> 00:32:23,760
we have we are benchmarking sgrs we are

920
00:32:23,760 --> 00:32:25,360
benchmarking uh

921
00:32:25,360 --> 00:32:27,200
different radios so i'll talk about the

922
00:32:27,200 --> 00:32:30,240
framework like next month atros esp and

923
00:32:30,240 --> 00:32:31,919
there is uh for short range for

924
00:32:31,919 --> 00:32:33,039
bluetooth

925
00:32:33,039 --> 00:32:36,480
uh bluetooth 5.1 has like an rf5340

926
00:32:36,480 --> 00:32:38,559
we'll talk about this so if you see with

927
00:32:38,559 --> 00:32:40,080
sdr we can get

928
00:32:40,080 --> 00:32:42,799
rss csi which is like a channel

929
00:32:42,799 --> 00:32:44,320
frequency response or channel state

930
00:32:44,320 --> 00:32:46,480
response and we have carrier frequency

931
00:32:46,480 --> 00:32:49,279
offset phase noise iq imbalance clock

932
00:32:49,279 --> 00:32:52,159
skew angle of arrival angle of departure

933
00:32:52,159 --> 00:32:54,480
and and with other commercial hardware

934
00:32:54,480 --> 00:32:58,000
we have limited things so we'll discuss

935
00:32:58,000 --> 00:32:59,519
so first framework what we are

936
00:32:59,519 --> 00:33:01,200
integrating and before benchmarking is

937
00:33:01,200 --> 00:33:03,279
the next one framework so next one is

938
00:33:03,279 --> 00:33:05,519
the c based framework patching framework

939
00:33:05,519 --> 00:33:07,840
uh with the broadcom and cypress wi-fi

940
00:33:07,840 --> 00:33:10,880
chipset and it supports csi capture

941
00:33:10,880 --> 00:33:12,640
which is like active csi when i say

942
00:33:12,640 --> 00:33:14,159
active csi then there should be some

943
00:33:14,159 --> 00:33:16,480
real time active traffic so that the the

944
00:33:16,480 --> 00:33:18,640
reception of that active traffic can be

945
00:33:18,640 --> 00:33:21,039
captured as a raw iq sample

946
00:33:21,039 --> 00:33:22,080
and

947
00:33:22,080 --> 00:33:24,480
apart from that we can get the rss so

948
00:33:24,480 --> 00:33:26,799
how it works is like so it so we need to

949
00:33:26,799 --> 00:33:28,799
basically uh do the firmware

950
00:33:28,799 --> 00:33:30,960
modification so we need to stitch

951
00:33:30,960 --> 00:33:33,120
the firmware with this uh

952
00:33:33,120 --> 00:33:34,799
patching framework which is like

953
00:33:34,799 --> 00:33:37,039
developed for research and so there is a

954
00:33:37,039 --> 00:33:39,519
template ram and the raw iq capture is

955
00:33:39,519 --> 00:33:42,320
basically uh dm made from template ram

956
00:33:42,320 --> 00:33:44,320
uh to template ram and then finally as a

957
00:33:44,320 --> 00:33:46,399
udp packet it is being sent from

958
00:33:46,399 --> 00:33:47,919
firmware to host

959
00:33:47,919 --> 00:33:49,760
and this is how our benchmarking setup

960
00:33:49,760 --> 00:33:52,080
look like so what we are doing is uh we

961
00:33:52,080 --> 00:33:55,519
are uh since broadcom chipset is readily

962
00:33:55,519 --> 00:33:57,440
available in raspberry pi

963
00:33:57,440 --> 00:34:00,080
so we are using raspberry pi 3b plus and

964
00:34:00,080 --> 00:34:03,519
we are uh using this topology to get the

965
00:34:03,519 --> 00:34:05,679
csi data rss data so that we can

966
00:34:05,679 --> 00:34:08,480
basically benchmark and see if that is

967
00:34:08,480 --> 00:34:10,239
really meeting to our expectation for

968
00:34:10,239 --> 00:34:12,480
implementation of those schemes

969
00:34:12,480 --> 00:34:15,440
so this is the one which we captured uh

970
00:34:15,440 --> 00:34:17,440
for our benchmarking in our benchmarking

971
00:34:17,440 --> 00:34:20,000
setup so you can see this is st 20 cs

972
00:34:20,000 --> 00:34:23,839
item and we have uh amplitude versus sub

973
00:34:23,839 --> 00:34:26,000
carrier phase versus sub carrier which

974
00:34:26,000 --> 00:34:28,000
is channel frequency response and these

975
00:34:28,000 --> 00:34:30,719
are like various scenarios uh uh we

976
00:34:30,719 --> 00:34:33,199
didn't brought much mobility aspect but

977
00:34:33,199 --> 00:34:34,399
in

978
00:34:34,399 --> 00:34:36,079
coming days we'll be doing a lot of

979
00:34:36,079 --> 00:34:38,079
experiments with mobility and

980
00:34:38,079 --> 00:34:39,119
doing

981
00:34:39,119 --> 00:34:40,000
things

982
00:34:40,000 --> 00:34:43,520
another one is the esp csi so esp32 i i

983
00:34:43,520 --> 00:34:45,520
think everyone who is working in iot

984
00:34:45,520 --> 00:34:48,320
will be familiar with the esp32 so esp32

985
00:34:48,320 --> 00:34:50,159
is a series of low cost low power

986
00:34:50,159 --> 00:34:52,000
system-on-chip microcontroller with

987
00:34:52,000 --> 00:34:53,918
which is like extrinsic architecture now

988
00:34:53,918 --> 00:34:55,760
they are come giving with risk five

989
00:34:55,760 --> 00:34:57,839
architecture and that it has integrated

990
00:34:57,839 --> 00:35:00,720
wi-fi and uh bluetooth integrated in the

991
00:35:00,720 --> 00:35:01,760
same

992
00:35:01,760 --> 00:35:04,800
soc and with this we can do a lot of

993
00:35:04,800 --> 00:35:07,359
wi-fi and bluetooth coexistence and

994
00:35:07,359 --> 00:35:09,920
getting all of those attributes so this

995
00:35:09,920 --> 00:35:12,160
is the high-level block diagram of esp

996
00:35:12,160 --> 00:35:14,720
so we can see that we have a wi-fi

997
00:35:14,720 --> 00:35:17,280
digital baseband rf front end we have

998
00:35:17,280 --> 00:35:19,280
bluetooth digital baseband and bluetooth

999
00:35:19,280 --> 00:35:21,200
rf front-end

1000
00:35:21,200 --> 00:35:22,240
so

1001
00:35:22,240 --> 00:35:24,640
how i mean so in our setup we are

1002
00:35:24,640 --> 00:35:27,040
capturing the active csi we are

1003
00:35:27,040 --> 00:35:29,200
capturing the passive csi so with active

1004
00:35:29,200 --> 00:35:31,520
csi can be on either access point mode

1005
00:35:31,520 --> 00:35:34,000
or it can be on the station mode so

1006
00:35:34,000 --> 00:35:36,160
unfortunately uh it is not supported

1007
00:35:36,160 --> 00:35:38,960
with the ad hoc ibss which is basically

1008
00:35:38,960 --> 00:35:40,160
being used

1009
00:35:40,160 --> 00:35:43,359
in the mesh network or or mesh point per

1010
00:35:43,359 --> 00:35:46,400
se so the packet structure if you see

1011
00:35:46,400 --> 00:35:48,240
the the

1012
00:35:48,240 --> 00:35:51,280
uh csi header metadata header

1013
00:35:51,280 --> 00:35:54,320
is having the rss noise floor the mcs

1014
00:35:54,320 --> 00:35:57,200
rate that is being transmitted channel

1015
00:35:57,200 --> 00:35:59,839
rate timestamp and the rx status whether

1016
00:35:59,839 --> 00:36:02,320
the packet got transmitted successfully

1017
00:36:02,320 --> 00:36:03,920
or it got

1018
00:36:03,920 --> 00:36:05,359
some error

1019
00:36:05,359 --> 00:36:07,760
so then the buffer has the iq samples

1020
00:36:07,760 --> 00:36:10,400
the buffer has the iq samples uh for

1021
00:36:10,400 --> 00:36:13,920
each sub carrier so this is uh our

1022
00:36:13,920 --> 00:36:15,760
monitoring setup for benchmarking so

1023
00:36:15,760 --> 00:36:17,599
what we have done is we have connected

1024
00:36:17,599 --> 00:36:21,040
esp32 with the mission computer uh that

1025
00:36:21,040 --> 00:36:23,839
can be raspberry pi or intel look and we

1026
00:36:23,839 --> 00:36:26,880
have connected them over are and this is

1027
00:36:26,880 --> 00:36:29,119
a kind of mesh topology in this mesh

1028
00:36:29,119 --> 00:36:30,720
topology we are

1029
00:36:30,720 --> 00:36:33,839
basically taking this uh csi data in a

1030
00:36:33,839 --> 00:36:35,920
role reversal fashion so now here the

1031
00:36:35,920 --> 00:36:38,880
main challenge is how to change the role

1032
00:36:38,880 --> 00:36:42,320
from station to sap or or like sap to uh

1033
00:36:42,320 --> 00:36:43,520
station

1034
00:36:43,520 --> 00:36:45,359
and get those data within the coherence

1035
00:36:45,359 --> 00:36:46,480
time because if you don't get the

1036
00:36:46,480 --> 00:36:47,839
coherence time the channel is not

1037
00:36:47,839 --> 00:36:49,760
constant and whatever the attribute we

1038
00:36:49,760 --> 00:36:53,119
need to derive keys or to do these

1039
00:36:53,119 --> 00:36:54,800
schemes for physical layer that's not

1040
00:36:54,800 --> 00:36:56,720
going to suffice

1041
00:36:56,720 --> 00:36:59,520
so this is the plot uh so this is like

1042
00:36:59,520 --> 00:37:01,760
amplitude versus subcarrier phase versus

1043
00:37:01,760 --> 00:37:03,920
so this is cfr and channel impulse

1044
00:37:03,920 --> 00:37:06,720
response we have just taken the ifft of

1045
00:37:06,720 --> 00:37:09,839
it and this is the plot

1046
00:37:10,160 --> 00:37:11,520
okay next

1047
00:37:11,520 --> 00:37:14,160
the next benchmarking what we have done

1048
00:37:14,160 --> 00:37:16,720
or what we are doing is with the atheros

1049
00:37:16,720 --> 00:37:19,760
csi and and as well as the spectral scan

1050
00:37:19,760 --> 00:37:23,119
attribute so atrocity is uh

1051
00:37:23,119 --> 00:37:25,599
is also one of the popular uh

1052
00:37:25,599 --> 00:37:28,320
framework available with f9k and f10k

1053
00:37:28,320 --> 00:37:30,880
driver so uh supported radios are qcs

1054
00:37:30,880 --> 00:37:34,880
6.74 which is at 10k based qca 9884

1055
00:37:34,880 --> 00:37:36,640
which is at 10k based and there are a

1056
00:37:36,640 --> 00:37:38,880
couple of legacy devices like atros ar

1057
00:37:38,880 --> 00:37:42,640
9580 and uh that works with open wrt

1058
00:37:42,640 --> 00:37:44,560
firmware uh but the problem is those are

1059
00:37:44,560 --> 00:37:46,800
end of life platform so we thought like

1060
00:37:46,800 --> 00:37:49,599
a qca 6174 or like

1061
00:37:49,599 --> 00:37:52,960
9884 can be the benchmarking platform so

1062
00:37:52,960 --> 00:37:55,920
what we are doing is we are basically uh

1063
00:37:55,920 --> 00:37:57,680
integrating these of the shelf

1064
00:37:57,680 --> 00:38:00,480
commercial wi-fi platform over pci

1065
00:38:00,480 --> 00:38:03,440
mini pci or m2 slot and this is the mesh

1066
00:38:03,440 --> 00:38:05,680
topology and in this mesh topology we

1067
00:38:05,680 --> 00:38:07,200
are doing the role reversal and

1068
00:38:07,200 --> 00:38:10,320
capturing the csi rss all these uh

1069
00:38:10,320 --> 00:38:12,880
attributes uh for our physical layer

1070
00:38:12,880 --> 00:38:14,400
parametering

1071
00:38:14,400 --> 00:38:15,760
physical layer parameter monitoring

1072
00:38:15,760 --> 00:38:17,119
module

1073
00:38:17,119 --> 00:38:19,440
so

1074
00:38:19,440 --> 00:38:22,960
next uh so how the csi look like so of

1075
00:38:22,960 --> 00:38:25,520
the csi is having the magic data

1076
00:38:25,520 --> 00:38:27,839
followed by csm metadata and the csi

1077
00:38:27,839 --> 00:38:30,240
buffer and the trailer for terminating

1078
00:38:30,240 --> 00:38:32,720
uh the complete cs item because we can

1079
00:38:32,720 --> 00:38:34,720
get multiple cs item because we need to

1080
00:38:34,720 --> 00:38:37,839
get more dump for key derivation more

1081
00:38:37,839 --> 00:38:40,320
dumps for any authentication schemes uh

1082
00:38:40,320 --> 00:38:42,560
within the coherence time so that we can

1083
00:38:42,560 --> 00:38:44,480
remove some outlier also if

1084
00:38:44,480 --> 00:38:46,960
if it doesn't fit into the coherent time

1085
00:38:46,960 --> 00:38:49,839
so this is the dump

1086
00:38:49,839 --> 00:38:52,400
and now uh the the it has two part one

1087
00:38:52,400 --> 00:38:54,880
is the metadata followed by the payload

1088
00:38:54,880 --> 00:38:57,119
which payload is nothing but your iq

1089
00:38:57,119 --> 00:38:58,160
samples

1090
00:38:58,160 --> 00:39:00,800
in the metadata header we have uh some

1091
00:39:00,800 --> 00:39:02,480
good information that can be used like

1092
00:39:02,480 --> 00:39:04,000
capture bandwidth channel bandwidth

1093
00:39:04,000 --> 00:39:06,240
center frequency and which mode we are

1094
00:39:06,240 --> 00:39:09,920
using st20 or st40 or vhd80

1095
00:39:09,920 --> 00:39:14,320
and uh we have noise floor also

1096
00:39:14,320 --> 00:39:16,880
another interesting platform uh what we

1097
00:39:16,880 --> 00:39:19,280
are benchmarking is open wi-fi hardware

1098
00:39:19,280 --> 00:39:22,160
platform so open wi-fi hardware platform

1099
00:39:22,160 --> 00:39:24,880
is hdr platform but is it is not similar

1100
00:39:24,880 --> 00:39:27,280
to the traditional sdr so it is lin

1101
00:39:27,280 --> 00:39:29,599
first linux mac 8.11 compatible full

1102
00:39:29,599 --> 00:39:33,040
stack wi-fi design based on sdr so the

1103
00:39:33,040 --> 00:39:35,119
the hardware con the hardware if you see

1104
00:39:35,119 --> 00:39:38,240
it supports bunch of fpgas with the uh

1105
00:39:38,240 --> 00:39:41,599
radio front end uh so uh so typically it

1106
00:39:41,599 --> 00:39:45,040
is zinc gillings fpga and analog device

1107
00:39:45,040 --> 00:39:48,160
radio front end and good thing is we can

1108
00:39:48,160 --> 00:39:50,960
full full-blown linux stack we can run

1109
00:39:50,960 --> 00:39:53,760
with mac 8011 compatible stack and we

1110
00:39:53,760 --> 00:39:55,680
can get those attributes

1111
00:39:55,680 --> 00:39:57,599
only the problem is like it it it

1112
00:39:57,599 --> 00:40:00,800
doesn't have good dynamic range and uh a

1113
00:40:00,800 --> 00:40:02,320
bit on the

1114
00:40:02,320 --> 00:40:04,720
mac layer security also there is

1115
00:40:04,720 --> 00:40:07,119
some limitations

1116
00:40:07,119 --> 00:40:09,839
so uh so this is the capture data which

1117
00:40:09,839 --> 00:40:12,560
we are doing for benchmarking so if you

1118
00:40:12,560 --> 00:40:14,400
see here so we have

1119
00:40:14,400 --> 00:40:17,119
at the bottom the iq capture the csi

1120
00:40:17,119 --> 00:40:18,880
capture with the subcarrier index so we

1121
00:40:18,880 --> 00:40:21,440
have amplitude and phase

1122
00:40:21,440 --> 00:40:23,760
subsequently and then we have the good

1123
00:40:23,760 --> 00:40:26,319
thing is we get the frequency offset so

1124
00:40:26,319 --> 00:40:28,319
typically all the previous platforms

1125
00:40:28,319 --> 00:40:30,000
what we discussed

1126
00:40:30,000 --> 00:40:32,160
whatever the csi and the cfr we are

1127
00:40:32,160 --> 00:40:34,720
capturing that is having the cfo

1128
00:40:34,720 --> 00:40:38,319
compensation so we don't get the cfo cfo

1129
00:40:38,319 --> 00:40:41,760
offset so that is also limiting uh for

1130
00:40:41,760 --> 00:40:43,359
some of the scheme that we are

1131
00:40:43,359 --> 00:40:45,680
developing so we thought like we can

1132
00:40:45,680 --> 00:40:48,800
rather uh try this and figure it out how

1133
00:40:48,800 --> 00:40:50,720
it is behave how it is performing so

1134
00:40:50,720 --> 00:40:52,800
this is the frequency offset and how it

1135
00:40:52,800 --> 00:40:55,119
works is like so it has a side channel

1136
00:40:55,119 --> 00:40:57,760
driver in the linux kernel space and it

1137
00:40:57,760 --> 00:40:59,760
has side channel framework in the

1138
00:40:59,760 --> 00:41:02,000
firmware the side channel

1139
00:41:02,000 --> 00:41:03,839
component in the firmware takes the raw

1140
00:41:03,839 --> 00:41:06,800
iq and it dma to the side channel driver

1141
00:41:06,800 --> 00:41:07,760
and

1142
00:41:07,760 --> 00:41:09,359
once the driver has the side channel

1143
00:41:09,359 --> 00:41:11,040
information that can be utilized by the

1144
00:41:11,040 --> 00:41:13,440
user stack which is like our classical

1145
00:41:13,440 --> 00:41:15,440
plp module that we are constructing for

1146
00:41:15,440 --> 00:41:17,520
benchmarking

1147
00:41:17,520 --> 00:41:19,760
okay another thing is like uh bluetooth

1148
00:41:19,760 --> 00:41:22,400
5.0 introduced a constant tone extension

1149
00:41:22,400 --> 00:41:24,400
uh where optional bit sequence can be

1150
00:41:24,400 --> 00:41:26,000
contained in the ble packet and that can

1151
00:41:26,000 --> 00:41:27,280
be used for

1152
00:41:27,280 --> 00:41:29,680
angle of arrival angle of departure

1153
00:41:29,680 --> 00:41:33,119
which is basically based on iq capture

1154
00:41:33,119 --> 00:41:34,800
at the receiving side

1155
00:41:34,800 --> 00:41:38,640
so uh we want to use this in phase

1156
00:41:38,640 --> 00:41:40,800
in phase and quadrature phase sampling

1157
00:41:40,800 --> 00:41:44,640
uh samples to do this kind of

1158
00:41:44,640 --> 00:41:47,119
scheme benchmarking since we i think we

1159
00:41:47,119 --> 00:41:49,599
can utilize the coherence time principle

1160
00:41:49,599 --> 00:41:51,760
very well because bluetooth is very

1161
00:41:51,760 --> 00:41:54,000
timely controlled uh transmission

1162
00:41:54,000 --> 00:41:55,839
between two nodes so this is something

1163
00:41:55,839 --> 00:41:58,160
we want to do uh this is something in

1164
00:41:58,160 --> 00:42:00,480
our roadmap which we have not done yet

1165
00:42:00,480 --> 00:42:02,560
so this is uh this uh hopefully i think

1166
00:42:02,560 --> 00:42:05,839
it will give some line of sight

1167
00:42:05,839 --> 00:42:07,680
so now we discussed all of these

1168
00:42:07,680 --> 00:42:10,000
platforms uh but still i mean it looks

1169
00:42:10,000 --> 00:42:12,960
like these platforms are good for some

1170
00:42:12,960 --> 00:42:14,800
experimentation for

1171
00:42:14,800 --> 00:42:16,640
doing the benchmarking but do they

1172
00:42:16,640 --> 00:42:19,359
really solving the problem do they

1173
00:42:19,359 --> 00:42:21,280
really i mean whatever the limitation we

1174
00:42:21,280 --> 00:42:24,160
have are they really addressing not 100

1175
00:42:24,160 --> 00:42:26,400
so uh it's more like it's a continuous

1176
00:42:26,400 --> 00:42:28,960
work so we need to benchmark and then

1177
00:42:28,960 --> 00:42:31,599
implement those schemes and try to

1178
00:42:31,599 --> 00:42:34,640
minimize constraint one by one so

1179
00:42:34,640 --> 00:42:36,400
uh all of these wireless modules like

1180
00:42:36,400 --> 00:42:39,040
iwl which is like intel based wi-fi

1181
00:42:39,040 --> 00:42:40,560
module which

1182
00:42:40,560 --> 00:42:43,200
uses iwl wi-fi driver which is only

1183
00:42:43,200 --> 00:42:45,839
available in the older kernel and uh

1184
00:42:45,839 --> 00:42:47,520
it's not like and the availability is

1185
00:42:47,520 --> 00:42:50,160
end of life the broadcom module we can

1186
00:42:50,160 --> 00:42:52,960
get it for benchmarking the atros the

1187
00:42:52,960 --> 00:42:56,200
f9k based modules are also end of life

1188
00:42:56,200 --> 00:43:00,000
qc6174 qcn 9884 are also like i mean uh

1189
00:43:00,000 --> 00:43:02,240
still available so that is something uh

1190
00:43:02,240 --> 00:43:05,280
we can try to integrate in our use cases

1191
00:43:05,280 --> 00:43:07,680
and then esp32 is good one so which is i

1192
00:43:07,680 --> 00:43:09,599
think probably uh is we are going to

1193
00:43:09,599 --> 00:43:10,960
continue

1194
00:43:10,960 --> 00:43:13,200
and the nordic one which is like uh to

1195
00:43:13,200 --> 00:43:14,880
be used for the ble constant tone

1196
00:43:14,880 --> 00:43:17,280
extension for iq sampling so we need to

1197
00:43:17,280 --> 00:43:19,040
evaluate uh but the thing is we need to

1198
00:43:19,040 --> 00:43:21,599
do a lot of firmware modification uh

1199
00:43:21,599 --> 00:43:24,000
to retrieve this data

1200
00:43:24,000 --> 00:43:27,359
so uh with this i would like console to

1201
00:43:27,359 --> 00:43:30,160
summarize and

1202
00:43:34,079 --> 00:43:36,640
okay so at present we are basically

1203
00:43:36,640 --> 00:43:39,760
so our first stop first job was to

1204
00:43:39,760 --> 00:43:42,400
go step by step to basically look into

1205
00:43:42,400 --> 00:43:44,000
all the impediments which are we are

1206
00:43:44,000 --> 00:43:46,160
basically facing so the first

1207
00:43:46,160 --> 00:43:47,920
problem was how to extract those

1208
00:43:47,920 --> 00:43:49,839
features so we have now identified some

1209
00:43:49,839 --> 00:43:51,920
of the solutions which we can basically

1210
00:43:51,920 --> 00:43:55,280
use to basically capture those which

1211
00:43:55,280 --> 00:43:57,359
capture those physical layer features so

1212
00:43:57,359 --> 00:43:59,280
now after capturing those features we

1213
00:43:59,280 --> 00:44:01,680
need to

1214
00:44:01,920 --> 00:44:03,119
do the

1215
00:44:03,119 --> 00:44:05,200
next next task is basically the signal

1216
00:44:05,200 --> 00:44:07,839
processing aspects how to basically uh

1217
00:44:07,839 --> 00:44:09,520
extract the uniqueness from those

1218
00:44:09,520 --> 00:44:11,440
features so this is the thing which you

1219
00:44:11,440 --> 00:44:13,359
are basically using at present we

1220
00:44:13,359 --> 00:44:15,920
basically have one scheme

1221
00:44:15,920 --> 00:44:18,720
which is i think we will get a

1222
00:44:18,720 --> 00:44:20,560
very soon one of the solutions based on

1223
00:44:20,560 --> 00:44:23,200
the rss base receive signal strength but

1224
00:44:23,200 --> 00:44:26,560
that scheme is not you know perfectly

1225
00:44:26,560 --> 00:44:28,640
can be deployed for all the scenarios so

1226
00:44:28,640 --> 00:44:31,040
that scheme we are basically just to

1227
00:44:31,040 --> 00:44:33,359
start with to build upon so we have

1228
00:44:33,359 --> 00:44:35,680
basically looked into a very static case

1229
00:44:35,680 --> 00:44:37,680
where all the nodes are basically

1230
00:44:37,680 --> 00:44:40,079
deployed and they are sufficiently apart

1231
00:44:40,079 --> 00:44:41,440
so we need to check whether we can

1232
00:44:41,440 --> 00:44:43,839
basically uh

1233
00:44:43,839 --> 00:44:45,839
authenticate them based on those rss

1234
00:44:45,839 --> 00:44:47,680
values so that we have available so now

1235
00:44:47,680 --> 00:44:49,680
next task will be basically to

1236
00:44:49,680 --> 00:44:51,760
look into this mobility aspect and

1237
00:44:51,760 --> 00:44:54,240
basically

1238
00:44:54,240 --> 00:44:55,920
perform the signal processing because

1239
00:44:55,920 --> 00:44:58,160
after suppose for example if you are

1240
00:44:58,160 --> 00:45:00,160
looking into the case of key generation

1241
00:45:00,160 --> 00:45:02,400
so the first task is obviously the

1242
00:45:02,400 --> 00:45:04,560
physical layer features extraction but

1243
00:45:04,560 --> 00:45:06,800
suppose we from this we get the csi

1244
00:45:06,800 --> 00:45:08,640
information from the csi information we

1245
00:45:08,640 --> 00:45:09,839
have the amplitude and the phase

1246
00:45:09,839 --> 00:45:12,560
information of the respective channel so

1247
00:45:12,560 --> 00:45:14,800
from that now the next task will be to

1248
00:45:14,800 --> 00:45:17,760
basically synchronize them because it's

1249
00:45:17,760 --> 00:45:19,839
very important that both

1250
00:45:19,839 --> 00:45:21,520
the two legitimate users who are

1251
00:45:21,520 --> 00:45:23,280
basically using that information to

1252
00:45:23,280 --> 00:45:24,960
generate the keys

1253
00:45:24,960 --> 00:45:26,720
should

1254
00:45:26,720 --> 00:45:28,400
synchronize them from the very first

1255
00:45:28,400 --> 00:45:31,760
step and it start from the instant at

1256
00:45:31,760 --> 00:45:33,680
which we are doing the sampling so that

1257
00:45:33,680 --> 00:45:35,920
should be perfectly synchronized after

1258
00:45:35,920 --> 00:45:37,359
the sampling we need to perform a

1259
00:45:37,359 --> 00:45:39,839
quantization and we need to look

1260
00:45:39,839 --> 00:45:41,760
that the of the results which we will

1261
00:45:41,760 --> 00:45:43,359
obtain after the quantization the bit

1262
00:45:43,359 --> 00:45:45,280
sequence that will not be perfectly

1263
00:45:45,280 --> 00:45:46,880
matched even if we

1264
00:45:46,880 --> 00:45:48,240
do everything in a perfect

1265
00:45:48,240 --> 00:45:50,400
synchronization so we need to some

1266
00:45:50,400 --> 00:45:52,240
uh do some sort of error correcting

1267
00:45:52,240 --> 00:45:53,440
codes or even some sort of

1268
00:45:53,440 --> 00:45:56,160
reconciliation algorith reconciliation

1269
00:45:56,160 --> 00:45:58,319
method has to be deployed to see that

1270
00:45:58,319 --> 00:46:00,880
both the keys are matching so

1271
00:46:00,880 --> 00:46:02,640
then we will get a symmetric key

1272
00:46:02,640 --> 00:46:05,359
framework but there is another challenge

1273
00:46:05,359 --> 00:46:07,440
the challenge is that some in some cases

1274
00:46:07,440 --> 00:46:09,040
it might be possible that the channel is

1275
00:46:09,040 --> 00:46:10,880
not random in itself

1276
00:46:10,880 --> 00:46:13,200
so that is one of the solutions because

1277
00:46:13,200 --> 00:46:14,480
if you suppose

1278
00:46:14,480 --> 00:46:16,319
in this sort of scenarios if you are

1279
00:46:16,319 --> 00:46:18,720
collecting the csi between suppose in

1280
00:46:18,720 --> 00:46:20,640
this seminar hall we are collecting the

1281
00:46:20,640 --> 00:46:22,880
csi it will be very good means the

1282
00:46:22,880 --> 00:46:24,400
channel will be highly random due to the

1283
00:46:24,400 --> 00:46:26,319
multi-path and all those effect but if

1284
00:46:26,319 --> 00:46:28,400
you suppose we go into the for instance

1285
00:46:28,400 --> 00:46:30,640
our rural areas so there the channel

1286
00:46:30,640 --> 00:46:33,280
will not be that much random so in that

1287
00:46:33,280 --> 00:46:35,200
case we need to think of some other

1288
00:46:35,200 --> 00:46:37,359
features like the device based features

1289
00:46:37,359 --> 00:46:39,520
or something like the rfa front weight

1290
00:46:39,520 --> 00:46:41,359
features so that

1291
00:46:41,359 --> 00:46:43,599
so they can complement and enhance the

1292
00:46:43,599 --> 00:46:45,680
randomness onto those features so we

1293
00:46:45,680 --> 00:46:48,079
need to look into this aspect also so

1294
00:46:48,079 --> 00:46:50,160
going on to this so this is basically so

1295
00:46:50,160 --> 00:46:51,359
in this

1296
00:46:51,359 --> 00:46:54,960
presentation our main uh

1297
00:46:55,680 --> 00:46:57,599
job was to just highlight the challenges

1298
00:46:57,599 --> 00:47:00,400
which we face while we actually started

1299
00:47:00,400 --> 00:47:02,480
to look into the implementation side

1300
00:47:02,480 --> 00:47:04,160
side of the physical layer security

1301
00:47:04,160 --> 00:47:06,000
solutions so

1302
00:47:06,000 --> 00:47:09,200
and we basically took one of the problem

1303
00:47:09,200 --> 00:47:11,280
that is how to extract those features so

1304
00:47:11,280 --> 00:47:13,440
we have now some of the modules and now

1305
00:47:13,440 --> 00:47:15,280
we will be moving ahead with basically

1306
00:47:15,280 --> 00:47:17,200
doing the signal processing part of that

1307
00:47:17,200 --> 00:47:19,200
so that we can come up with some of the

1308
00:47:19,200 --> 00:47:20,960
solutions which can actually go into our

1309
00:47:20,960 --> 00:47:24,000
product side

1310
00:47:24,000 --> 00:47:26,240
so

1311
00:47:26,240 --> 00:47:27,680
so this is

1312
00:47:27,680 --> 00:47:29,599
so next is the problem which i just

1313
00:47:29,599 --> 00:47:32,160
basically highlighted you all so there

1314
00:47:32,160 --> 00:47:33,200
are a lot of

1315
00:47:33,200 --> 00:47:35,599
challenges actually unfortunately we

1316
00:47:35,599 --> 00:47:37,520
presented

1317
00:47:37,520 --> 00:47:39,200
a lot of challenges

1318
00:47:39,200 --> 00:47:41,359
than the solutions so one

1319
00:47:41,359 --> 00:47:44,079
so at present we have just a solution

1320
00:47:44,079 --> 00:47:46,800
how to capture those data so next we

1321
00:47:46,800 --> 00:47:47,760
need to

1322
00:47:47,760 --> 00:47:50,559
build upon that and move forward

1323
00:47:50,559 --> 00:47:51,520
so

1324
00:47:51,520 --> 00:47:54,400
if anybody of you have some idea

1325
00:47:54,400 --> 00:47:56,240
to basically how to work upon that we

1326
00:47:56,240 --> 00:47:58,640
are very happy to collaborate with and

1327
00:47:58,640 --> 00:47:59,920
please

1328
00:47:59,920 --> 00:48:02,720
free to contact us yeah

1329
00:48:02,720 --> 00:48:04,079
we are

1330
00:48:04,079 --> 00:48:06,400
we will be very happy if we can if you

1331
00:48:06,400 --> 00:48:08,880
all can come up with any idea so that we

1332
00:48:08,880 --> 00:48:11,520
can develop these solutions and take it

1333
00:48:11,520 --> 00:48:13,119
to the next level

1334
00:48:13,119 --> 00:48:16,359
thank you

