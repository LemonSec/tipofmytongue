1
00:00:09,679 --> 00:00:16,240
so<font color="#E5E5E5"> welcome to</font><font color="#CCCCCC"> my presentation so what</font>

2
00:00:14,209 --> 00:00:19,610
are we going to<font color="#E5E5E5"> talk about today is</font>

3
00:00:16,239 --> 00:00:22,159
actually<font color="#E5E5E5"> a research that I mean the main</font>

4
00:00:19,610 --> 00:00:24,800
point about<font color="#CCCCCC"> it</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> to show how</font><font color="#E5E5E5"> to start</font>

5
00:00:22,160 --> 00:00:28,130
from from scratch<font color="#CCCCCC"> then get</font><font color="#E5E5E5"> to the point</font>

6
00:00:24,800 --> 00:00:30,050
<font color="#CCCCCC">where you have volun ability and if</font>

7
00:00:28,130 --> 00:00:32,839
there's<font color="#CCCCCC"> something I really emphasize on</font>

8
00:00:30,050 --> 00:00:37,160
<font color="#E5E5E5">taking from this presentation is the</font>

9
00:00:32,839 --> 00:00:38,960
actual process of<font color="#E5E5E5"> doing the research so</font>

10
00:00:37,160 --> 00:00:42,110
our agenda for today

11
00:00:38,960 --> 00:00:45,019
first I'll briefly cover sandbox

12
00:00:42,110 --> 00:00:47,960
<font color="#E5E5E5">concepts for the sandbox usages</font><font color="#CCCCCC"> and why</font>

13
00:00:45,019 --> 00:00:53,360
we<font color="#E5E5E5"> need yet then we'll go to some more</font>

14
00:00:47,960 --> 00:00:57,409
specific use cases<font color="#E5E5E5"> but still talk about</font>

15
00:00:53,360 --> 00:01:00,220
<font color="#CCCCCC">high-level things</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> we'll go through</font>

16
00:00:57,409 --> 00:01:05,330
<font color="#CCCCCC">the entire path that got me to find this</font>

17
00:01:00,220 --> 00:01:09,500
<font color="#E5E5E5">and I was vulnerability and I also</font><font color="#CCCCCC"> talk</font>

18
00:01:05,330 --> 00:01:11,990
about<font color="#E5E5E5"> a technique</font><font color="#CCCCCC"> I used</font><font color="#E5E5E5"> to not a debug</font>

19
00:01:09,500 --> 00:01:15,320
the kernel<font color="#E5E5E5"> but to make sure it's easier</font>

20
00:01:11,990 --> 00:01:18,649
to to trace<font color="#E5E5E5"> that and finally I'll show</font>

21
00:01:15,320 --> 00:01:22,339
some lazy did thing I did to the buggy

22
00:01:18,650 --> 00:01:24,410
<font color="#E5E5E5">Apple processes</font><font color="#CCCCCC"> before we start</font><font color="#E5E5E5"> with</font><font color="#CCCCCC"> a</font>

23
00:01:22,340 --> 00:01:26,500
<font color="#CCCCCC">presentation to</font><font color="#E5E5E5"> the second it's about</font>

24
00:01:24,410 --> 00:01:29,720
myself<font color="#E5E5E5"> my name is Adam donenfeld</font><font color="#CCCCCC"> I've</font>

25
00:01:26,500 --> 00:01:32,630
been a security<font color="#CCCCCC"> researcher</font><font color="#E5E5E5"> for the last</font>

26
00:01:29,720 --> 00:01:34,370
couple<font color="#CCCCCC"> of years</font><font color="#E5E5E5"> I focus mainly on mobile</font>

27
00:01:32,630 --> 00:01:38,149
<font color="#CCCCCC">platforms but</font><font color="#E5E5E5"> I also have a little bit</font>

28
00:01:34,370 --> 00:01:40,550
<font color="#E5E5E5">of experience with PC my research is</font>

29
00:01:38,150 --> 00:01:43,370
<font color="#CCCCCC">really</font><font color="#E5E5E5"> vulnerability assessment and</font>

30
00:01:40,550 --> 00:01:47,149
exploitation<font color="#E5E5E5"> right now I work at the</font>

31
00:01:43,370 --> 00:01:53,590
Imperium as an iOS researcher and I also

32
00:01:47,150 --> 00:01:56,510
like<font color="#E5E5E5"> to present my mobile in conferences</font>

33
00:01:53,590 --> 00:02:02,720
<font color="#E5E5E5">and I also</font><font color="#CCCCCC"> live</font><font color="#E5E5E5"> non-new up I moved from</font>

34
00:01:56,510 --> 00:02:05,270
Israel<font color="#E5E5E5"> to Amsterdam yeah so sandbox so</font>

35
00:02:02,720 --> 00:02:07,429
<font color="#CCCCCC">offering system wants</font><font color="#E5E5E5"> to protect</font>

36
00:02:05,270 --> 00:02:09,769
sensitive attack surfaces and it does

37
00:02:07,430 --> 00:02:12,200
that<font color="#E5E5E5"> using</font><font color="#CCCCCC"> Sun boxing</font><font color="#E5E5E5"> that's something</font>

38
00:02:09,769 --> 00:02:14,480
<font color="#E5E5E5">that the tendency to</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> use</font>

39
00:02:12,200 --> 00:02:17,629
sandbox to make the attack surface

40
00:02:14,480 --> 00:02:20,779
smaller is something that we've seen<font color="#CCCCCC"> in</font>

41
00:02:17,629 --> 00:02:22,429
iOS<font color="#E5E5E5"> I mean everyone does that but iOS</font>

42
00:02:20,779 --> 00:02:23,390
the Apple started doing<font color="#CCCCCC"> that in the</font><font color="#E5E5E5"> last</font>

43
00:02:22,430 --> 00:02:26,510
<font color="#CCCCCC">five years</font>

44
00:02:23,390 --> 00:02:29,119
more than more than ever<font color="#CCCCCC"> because I</font>

45
00:02:26,510 --> 00:02:32,179
realized that<font color="#E5E5E5"> instead of trying</font><font color="#CCCCCC"> to fix</font>

46
00:02:29,120 --> 00:02:35,209
<font color="#E5E5E5">certain bugs</font><font color="#CCCCCC"> it's just much much better</font>

47
00:02:32,180 --> 00:02:37,610
<font color="#CCCCCC">I</font><font color="#E5E5E5"> mean it's much more practical to</font>

48
00:02:35,209 --> 00:02:40,550
actually just close the<font color="#CCCCCC"> talk surfaces we</font>

49
00:02:37,610 --> 00:02:43,490
also see I mean<font color="#E5E5E5"> like in we also saw that</font>

50
00:02:40,550 --> 00:02:45,560
<font color="#CCCCCC">example in Windows in window to K but</font>

51
00:02:43,490 --> 00:02:49,160
<font color="#E5E5E5">Apple</font><font color="#CCCCCC"> has been</font><font color="#E5E5E5"> doing that for a lot of</font>

52
00:02:45,560 --> 00:02:52,220
<font color="#E5E5E5">different mechanisms now putting aside</font>

53
00:02:49,160 --> 00:02:53,690
knowing the attack surface<font color="#CCCCCC"> send hooks is</font>

54
00:02:52,220 --> 00:02:56,540
also pretty useful if you<font color="#E5E5E5"> want to</font>

55
00:02:53,690 --> 00:03:00,020
prevent apps from accessing specific

56
00:02:56,540 --> 00:03:01,640
<font color="#CCCCCC">information for instance</font><font color="#E5E5E5"> a</font><font color="#CCCCCC"> fleshlight</font>

57
00:03:00,020 --> 00:03:05,180
application is not<font color="#E5E5E5"> supposed</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> be able</font>

58
00:03:01,640 --> 00:03:07,750
<font color="#E5E5E5">to read off fingerprints and call off D</font>

59
00:03:05,180 --> 00:03:11,180
for instance which is<font color="#E5E5E5"> responsible</font><font color="#CCCCCC"> for</font>

60
00:03:07,750 --> 00:03:12,980
some publication security things on the

61
00:03:11,180 --> 00:03:18,350
device he's not<font color="#CCCCCC"> supposed to</font><font color="#E5E5E5"> be able to</font>

62
00:03:12,980 --> 00:03:21,260
<font color="#E5E5E5">access or calendar or camera so that's</font>

63
00:03:18,350 --> 00:03:24,500
that's the you<font color="#CCCCCC"> know</font><font color="#E5E5E5"> the known use case</font>

64
00:03:21,260 --> 00:03:27,260
for sandbox<font color="#E5E5E5"> but as we can see Apple</font>

65
00:03:24,500 --> 00:03:30,620
<font color="#E5E5E5">actually introduced new sandbox rules</font>

66
00:03:27,260 --> 00:03:34,578
because of vulnerabilities<font color="#CCCCCC"> a</font><font color="#E5E5E5"> famous case</font>

67
00:03:30,620 --> 00:03:36,799
was in 2015 when<font color="#CCCCCC"> mouth dude</font><font color="#E5E5E5"> I think that</font>

68
00:03:34,579 --> 00:03:40,040
was the guy<font color="#E5E5E5"> he found an attack from</font>

69
00:03:36,799 --> 00:03:43,340
<font color="#E5E5E5">airdrop some I think</font><font color="#CCCCCC"> it was a traversal</font>

70
00:03:40,040 --> 00:03:45,230
which just got<font color="#E5E5E5"> route act</font><font color="#CCCCCC"> we've got a</font>

71
00:03:43,340 --> 00:03:47,900
Getti<font color="#E5E5E5"> root access</font><font color="#CCCCCC"> on the device because</font>

72
00:03:45,230 --> 00:03:51,230
sharing B which is the demon<font color="#CCCCCC"> elbow of</font>

73
00:03:47,900 --> 00:03:53,360
<font color="#CCCCCC">users was running</font><font color="#E5E5E5"> if I remember</font>

74
00:03:51,230 --> 00:03:55,340
<font color="#E5E5E5">correctly as root without sandbox</font>

75
00:03:53,360 --> 00:03:57,200
<font color="#E5E5E5">so just Apple just put it into the</font>

76
00:03:55,340 --> 00:03:58,280
<font color="#CCCCCC">sandbox and I even if you have an elbow</font>

77
00:03:57,200 --> 00:04:00,350
of vulnerability

78
00:03:58,280 --> 00:04:04,430
<font color="#CCCCCC">it will fill it another one</font><font color="#E5E5E5"> to make sure</font>

79
00:04:00,350 --> 00:04:07,430
you can elevate your privileges and we

80
00:04:04,430 --> 00:04:09,320
also saw that<font color="#E5E5E5"> recently I mean for the</font>

81
00:04:07,430 --> 00:04:13,670
photos of you who used to jailbreak your

82
00:04:09,320 --> 00:04:16,608
<font color="#E5E5E5">phones</font><font color="#CCCCCC"> seven eight</font><font color="#E5E5E5"> years ago</font><font color="#CCCCCC"> of the</font>

83
00:04:13,670 --> 00:04:18,680
<font color="#E5E5E5">symlinks restrictions that now we have</font>

84
00:04:16,608 --> 00:04:22,609
on AF<font color="#E5E5E5"> see that's why we</font><font color="#CCCCCC"> don't see a lot</font>

85
00:04:18,680 --> 00:04:24,800
<font color="#CCCCCC">of</font><font color="#E5E5E5"> USB vulnerabilities like before and</font>

86
00:04:22,610 --> 00:04:27,440
if some of<font color="#E5E5E5"> you</font><font color="#CCCCCC"> remember my research from</font>

87
00:04:24,800 --> 00:04:28,550
<font color="#E5E5E5">last year I presented the fully working</font>

88
00:04:27,440 --> 00:04:32,930
kernel exploits

89
00:04:28,550 --> 00:04:35,630
in like 99%<font color="#CCCCCC"> success rates walking pretty</font>

90
00:04:32,930 --> 00:04:37,490
<font color="#E5E5E5">much instantly but still in the</font><font color="#CCCCCC"> same box</font>

91
00:04:35,630 --> 00:04:39,289
<font color="#E5E5E5">escape so</font>

92
00:04:37,490 --> 00:04:40,550
even if you have a<font color="#CCCCCC"> kennel exploit if you</font>

93
00:04:39,289 --> 00:04:42,889
have something<font color="#CCCCCC"> that prevents</font><font color="#E5E5E5"> you from</font>

94
00:04:40,550 --> 00:04:45,650
<font color="#E5E5E5">accessing this certain attack surface</font>

95
00:04:42,889 --> 00:04:48,710
then then you still<font color="#CCCCCC"> have a lot of fold</font>

96
00:04:45,650 --> 00:04:50,539
to do<font color="#E5E5E5"> so actually sandbox in my opinion</font>

97
00:04:48,710 --> 00:04:53,659
is much better than closing specific

98
00:04:50,539 --> 00:04:55,880
bugs<font color="#E5E5E5"> at least cost-effective wise it's</font>

99
00:04:53,660 --> 00:04:58,699
much<font color="#E5E5E5"> I mean as an attacker I would like</font>

100
00:04:55,880 --> 00:05:02,210
to have bugs fixed and<font color="#E5E5E5"> not attack</font>

101
00:04:58,699 --> 00:05:04,460
surfaces<font color="#E5E5E5"> being closed</font><font color="#CCCCCC"> but sometimes an</font>

102
00:05:02,210 --> 00:05:09,080
app<font color="#E5E5E5"> does need some specific permissions</font>

103
00:05:04,460 --> 00:05:11,239
elevated permissions<font color="#E5E5E5"> like sometimes I</font>

104
00:05:09,080 --> 00:05:14,150
mean Instagram<font color="#E5E5E5"> wants to be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to use</font>

105
00:05:11,240 --> 00:05:16,669
your camera so<font color="#E5E5E5"> Apple doesn't want to</font>

106
00:05:14,150 --> 00:05:20,060
give it<font color="#E5E5E5"> direct access</font><font color="#CCCCCC"> to the camera</font>

107
00:05:16,669 --> 00:05:23,650
driver but it<font color="#E5E5E5"> still wants</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> Instagram</font>

108
00:05:20,060 --> 00:05:26,300
<font color="#CCCCCC">to be able</font><font color="#E5E5E5"> to use the camera so</font>

109
00:05:23,650 --> 00:05:29,929
technically speaking<font color="#CCCCCC"> if an app wants to</font>

110
00:05:26,300 --> 00:05:31,909
<font color="#E5E5E5">utilize the camera not a request</font>

111
00:05:29,930 --> 00:05:34,280
and our PC to use the camera but

112
00:05:31,909 --> 00:05:38,449
<font color="#E5E5E5">literally ask the device to use the</font>

113
00:05:34,280 --> 00:05:40,280
camera it<font color="#E5E5E5"> will just ask I mean okay the</font>

114
00:05:38,449 --> 00:05:43,159
different example<font color="#CCCCCC"> here video</font><font color="#E5E5E5"> decoding</font><font color="#CCCCCC"> if</font>

115
00:05:40,280 --> 00:05:45,049
you want to encode<font color="#CCCCCC"> a video you</font><font color="#E5E5E5"> have to</font>

116
00:05:43,159 --> 00:05:46,880
<font color="#E5E5E5">talk</font><font color="#CCCCCC"> with the video encoding driver</font><font color="#E5E5E5"> if</font>

117
00:05:45,050 --> 00:05:49,940
you want to do it in<font color="#E5E5E5"> how to accelerate</font>

118
00:05:46,880 --> 00:05:52,610
it<font color="#E5E5E5"> the way and that that's how an app</font>

119
00:05:49,940 --> 00:05:55,280
would normally do that<font color="#CCCCCC"> but</font><font color="#E5E5E5"> an iOS we</font>

120
00:05:52,610 --> 00:05:58,310
have media server which is a<font color="#E5E5E5"> broken on</font>

121
00:05:55,280 --> 00:06:00,710
in that case because<font color="#E5E5E5"> if I'm an app if</font>

122
00:05:58,310 --> 00:06:03,229
I'm a video app I'm not going to talk

123
00:06:00,710 --> 00:06:06,229
with a video encoder<font color="#E5E5E5"> but rather I'll</font>

124
00:06:03,229 --> 00:06:09,020
speak with<font color="#CCCCCC"> I asked the media server to</font>

125
00:06:06,229 --> 00:06:11,719
do that<font color="#E5E5E5"> encoding for me and then me the</font>

126
00:06:09,020 --> 00:06:14,150
server will reply<font color="#CCCCCC"> back with the encoded</font>

127
00:06:11,719 --> 00:06:18,740
video<font color="#E5E5E5"> now</font><font color="#CCCCCC"> what media server does here is</font>

128
00:06:14,150 --> 00:06:21,380
making<font color="#E5E5E5"> sure I'm</font><font color="#CCCCCC"> not</font><font color="#E5E5E5"> trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> pound the</font>

129
00:06:18,740 --> 00:06:25,130
kernel and make sure that I do what

130
00:06:21,380 --> 00:06:27,530
Apple wants me to do so<font color="#E5E5E5"> even</font><font color="#CCCCCC"> if I</font>

131
00:06:25,130 --> 00:06:31,099
somehow<font color="#CCCCCC"> have one a built-in</font><font color="#E5E5E5"> AV video</font>

132
00:06:27,530 --> 00:06:33,650
encoder<font color="#E5E5E5"> like Ziva</font><font color="#CCCCCC"> I'm still not good I</font>

133
00:06:31,099 --> 00:06:35,539
mean I'm still not<font color="#E5E5E5"> good to go from an</font>

134
00:06:33,650 --> 00:06:39,049
unprivileged app because<font color="#E5E5E5"> only media</font>

135
00:06:35,539 --> 00:06:45,589
server can speak<font color="#E5E5E5"> can communicate with AV</font>

136
00:06:39,050 --> 00:06:47,539
video encoder so with that<font color="#E5E5E5"> said like</font>

137
00:06:45,589 --> 00:06:51,110
every good presentation in iris

138
00:06:47,539 --> 00:06:53,270
vulnerabilities<font color="#CCCCCC"> a</font><font color="#E5E5E5"> surface</font>

139
00:06:51,110 --> 00:06:56,689
some of you have talked about<font color="#E5E5E5"> herself is</font>

140
00:06:53,270 --> 00:06:58,370
too much here<font color="#E5E5E5"> because awaitin because</font>

141
00:06:56,689 --> 00:07:01,370
it's not relevant to the<font color="#E5E5E5"> inveterate</font>

142
00:06:58,370 --> 00:07:04,370
<font color="#E5E5E5">entirely relevant representation so in a</font>

143
00:07:01,370 --> 00:07:07,520
single sentence<font color="#CCCCCC"> i OS AI surface is an</font>

144
00:07:04,370 --> 00:07:08,990
object in<font color="#CCCCCC"> iOS</font><font color="#E5E5E5"> so if i'm process a and i</font>

145
00:07:07,520 --> 00:07:11,599
wasn't<font color="#CCCCCC"> a lot of information to</font><font color="#E5E5E5"> process</font>

146
00:07:08,990 --> 00:07:14,990
<font color="#E5E5E5">be instead of sending it five gigabytes</font>

147
00:07:11,599 --> 00:07:17,419
<font color="#CCCCCC">i can just map it</font><font color="#E5E5E5"> in process be and all</font>

148
00:07:14,990 --> 00:07:20,599
<font color="#CCCCCC">process</font><font color="#E5E5E5"> be has to</font><font color="#CCCCCC"> know is a certain ID</font>

149
00:07:17,419 --> 00:07:24,740
so<font color="#CCCCCC"> it makes everything much more faster</font>

150
00:07:20,599 --> 00:07:28,370
<font color="#E5E5E5">and it's mainly used for</font><font color="#CCCCCC"> transit for</font>

151
00:07:24,740 --> 00:07:30,800
transferring frame buffer<font color="#E5E5E5"> information in</font>

152
00:07:28,370 --> 00:07:32,900
graphic stuff<font color="#E5E5E5"> so our surface</font><font color="#CCCCCC"> cannot</font><font color="#E5E5E5"> only</font>

153
00:07:30,800 --> 00:07:35,539
map information<font color="#CCCCCC"> but it also have a</font>

154
00:07:32,900 --> 00:07:38,388
<font color="#E5E5E5">certain set of properties literally</font><font color="#CCCCCC"> a</font>

155
00:07:35,539 --> 00:07:40,430
dictionary key<font color="#E5E5E5"> value based properties</font>

156
00:07:38,389 --> 00:07:42,110
<font color="#E5E5E5">but if</font><font color="#CCCCCC"> i want</font><font color="#E5E5E5"> to create</font><font color="#CCCCCC"> an a surface</font>

157
00:07:40,430 --> 00:07:44,629
<font color="#CCCCCC">object and</font><font color="#E5E5E5"> i want to put some</font><font color="#CCCCCC"> poverty's</font>

158
00:07:42,110 --> 00:07:46,729
then the kernel does verify<font color="#E5E5E5"> that</font><font color="#CCCCCC"> i'm not</font>

159
00:07:44,629 --> 00:07:51,650
<font color="#E5E5E5">trying</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> put some weird values in them</font>

160
00:07:46,729 --> 00:07:54,310
<font color="#E5E5E5">so yeah one year ago</font><font color="#CCCCCC"> i found a</font>

161
00:07:51,650 --> 00:07:57,440
vulnerability in<font color="#CCCCCC"> a surface</font><font color="#E5E5E5"> which</font>

162
00:07:54,310 --> 00:07:59,330
actually<font color="#CCCCCC"> i</font><font color="#E5E5E5"> never thought about it so</font>

163
00:07:57,440 --> 00:08:01,520
there is<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> properties</font><font color="#CCCCCC"> that we</font>

164
00:07:59,330 --> 00:08:03,979
have in our surface is something called

165
00:08:01,520 --> 00:08:06,409
a<font color="#E5E5E5"> plane there's a</font><font color="#CCCCCC"> sized base and it has</font>

166
00:08:03,979 --> 00:08:09,318
a lot of<font color="#E5E5E5"> them so there was a problem</font>

167
00:08:06,409 --> 00:08:12,650
<font color="#E5E5E5">here that's the planes I'm controlling</font>

168
00:08:09,319 --> 00:08:15,319
plane size and plane base<font color="#E5E5E5"> and there are</font>

169
00:08:12,650 --> 00:08:18,409
a lot<font color="#CCCCCC"> of different planes so here it</font>

170
00:08:15,319 --> 00:08:21,409
<font color="#E5E5E5">takes the plane base I'm giving it it</font>

171
00:08:18,409 --> 00:08:24,229
takes the plane size<font color="#E5E5E5"> it combines them</font>

172
00:08:21,409 --> 00:08:26,569
together<font color="#CCCCCC"> and then it</font><font color="#E5E5E5"> checks if</font><font color="#CCCCCC"> the last</font>

173
00:08:24,229 --> 00:08:29,000
plane base we had overlaps with the<font color="#E5E5E5"> new</font>

174
00:08:26,569 --> 00:08:32,690
one and what I didn't think about<font color="#E5E5E5"> you</font>

175
00:08:29,000 --> 00:08:35,120
guys<font color="#CCCCCC"> Cupertino is that this</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> a sine</font><font color="#E5E5E5"> X</font>

176
00:08:32,690 --> 00:08:38,060
<font color="#E5E5E5">it's if I'm putting</font><font color="#CCCCCC"> a negative value</font>

177
00:08:35,120 --> 00:08:42,440
just<font color="#CCCCCC"> we</font><font color="#E5E5E5"> will just treat</font><font color="#CCCCCC"> it like unsigned</font>

178
00:08:38,059 --> 00:08:44,630
int<font color="#E5E5E5"> and this way I can make a buffer</font>

179
00:08:42,440 --> 00:08:47,390
<font color="#CCCCCC">over here</font><font color="#E5E5E5"> so what it lets me</font><font color="#CCCCCC"> do is</font>

180
00:08:44,630 --> 00:08:49,760
<font color="#E5E5E5">putting a very big plane size because I</font>

181
00:08:47,390 --> 00:08:54,649
can<font color="#E5E5E5"> put a negative</font><font color="#CCCCCC"> sign base and then I</font>

182
00:08:49,760 --> 00:08:57,500
can override<font color="#E5E5E5"> it then I can go and I mean</font>

183
00:08:54,649 --> 00:08:59,420
put a very big size here which is

184
00:08:57,500 --> 00:09:04,000
something Apple obviously<font color="#E5E5E5"> doesn't want</font>

185
00:08:59,420 --> 00:09:06,170
us to<font color="#E5E5E5"> have so</font>

186
00:09:04,000 --> 00:09:08,570
unfortunately from an attackers

187
00:09:06,170 --> 00:09:11,300
perspective<font color="#E5E5E5"> even though the even though</font>

188
00:09:08,570 --> 00:09:14,210
<font color="#E5E5E5">that</font><font color="#CCCCCC"> looks like</font><font color="#E5E5E5"> a powerful vulnerability</font>

189
00:09:11,300 --> 00:09:17,030
<font color="#E5E5E5">I'll surface only</font><font color="#CCCCCC"> saves the planes s</font>

190
00:09:14,210 --> 00:09:19,280
<font color="#E5E5E5">value as a property so even if we have a</font>

191
00:09:17,030 --> 00:09:21,140
big plane size number here<font color="#E5E5E5"> it's still</font>

192
00:09:19,280 --> 00:09:22,610
<font color="#CCCCCC">not good enough to</font><font color="#E5E5E5"> actually</font><font color="#CCCCCC"> pound</font>

193
00:09:21,140 --> 00:09:24,980
something<font color="#E5E5E5"> directly from the aisle</font>

194
00:09:22,610 --> 00:09:27,100
<font color="#E5E5E5">surface kernel driver we have to get</font>

195
00:09:24,980 --> 00:09:30,680
<font color="#E5E5E5">something else use that property and</font>

196
00:09:27,100 --> 00:09:33,320
make sure that for<font color="#E5E5E5"> example</font><font color="#CCCCCC"> user mode</font><font color="#E5E5E5"> the</font>

197
00:09:30,680 --> 00:09:35,870
<font color="#E5E5E5">demon of an</font><font color="#CCCCCC"> adult camel driver uses that</font>

198
00:09:33,320 --> 00:09:38,330
value without<font color="#E5E5E5"> because an adult person</font>

199
00:09:35,870 --> 00:09:42,010
<font color="#E5E5E5">and Colonel young drivers assume that</font>

200
00:09:38,330 --> 00:09:44,930
these<font color="#E5E5E5"> properties are sanitized so</font>

201
00:09:42,010 --> 00:09:47,180
basically what we wanna know<font color="#E5E5E5"> is what</font>

202
00:09:44,930 --> 00:09:48,530
uses<font color="#E5E5E5"> our surface and obviously we want</font>

203
00:09:47,180 --> 00:09:50,599
<font color="#E5E5E5">to go straight</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the killer</font>

204
00:09:48,530 --> 00:09:54,650
<font color="#CCCCCC">so instead of looking for</font><font color="#E5E5E5"> user more</font>

205
00:09:50,600 --> 00:09:59,150
processes<font color="#CCCCCC"> I will start looking for camel</font>

206
00:09:54,650 --> 00:10:01,579
drivers<font color="#E5E5E5"> that use a surface so the way we</font>

207
00:09:59,150 --> 00:10:03,709
do that<font color="#E5E5E5"> is our surface is an object</font>

208
00:10:01,580 --> 00:10:06,920
which we create using the<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> surface</font>

209
00:10:03,710 --> 00:10:09,530
root user client<font color="#E5E5E5"> so if I may use a</font>

210
00:10:06,920 --> 00:10:13,010
<font color="#CCCCCC">permit</font><font color="#E5E5E5"> process I'm just creating a</font>

211
00:10:09,530 --> 00:10:14,870
handle to this specific interface

212
00:10:13,010 --> 00:10:17,600
exposed by the earth surface kernel

213
00:10:14,870 --> 00:10:19,910
driver<font color="#CCCCCC"> if you wanna see if you</font><font color="#E5E5E5"> wanna</font>

214
00:10:17,600 --> 00:10:22,340
obtain<font color="#CCCCCC"> a handle to</font><font color="#E5E5E5"> an eye surface object</font>

215
00:10:19,910 --> 00:10:26,260
<font color="#E5E5E5">like I said</font><font color="#CCCCCC"> before each other surface</font>

216
00:10:22,340 --> 00:10:30,200
object<font color="#E5E5E5"> has an ID so drivers do that</font>

217
00:10:26,260 --> 00:10:32,630
using<font color="#E5E5E5"> the iOS surface routes service</font>

218
00:10:30,200 --> 00:10:36,200
<font color="#E5E5E5">it's a kernel service and as a</font><font color="#CCCCCC"> user mode</font>

219
00:10:32,630 --> 00:10:39,950
process we cannot not directly we cannot

220
00:10:36,200 --> 00:10:43,820
use<font color="#E5E5E5"> that but other drivers can now the</font>

221
00:10:39,950 --> 00:10:46,940
way drivers<font color="#E5E5E5"> use other services in the</font>

222
00:10:43,820 --> 00:10:48,950
system is literally<font color="#E5E5E5"> by their name soil</font>

223
00:10:46,940 --> 00:10:53,300
surface<font color="#CCCCCC"> root</font><font color="#E5E5E5"> register it registers</font>

224
00:10:48,950 --> 00:10:55,730
itself as IO chorus root which<font color="#CCCCCC"> means</font>

225
00:10:53,300 --> 00:10:58,699
that if a driver who uses I have surface

226
00:10:55,730 --> 00:11:02,420
this string will be in<font color="#CCCCCC"> a driver</font><font color="#E5E5E5"> so in</font>

227
00:10:58,700 --> 00:11:04,250
the most<font color="#CCCCCC"> now out in simplest way I was</font>

228
00:11:02,420 --> 00:11:06,920
<font color="#E5E5E5">just starting to look for the string</font>

229
00:11:04,250 --> 00:11:10,310
ioco surface<font color="#CCCCCC"> routes in the camel cash</font>

230
00:11:06,920 --> 00:11:13,670
which<font color="#CCCCCC"> yielded</font><font color="#E5E5E5"> list of</font><font color="#CCCCCC"> cannon drivers</font>

231
00:11:10,310 --> 00:11:15,729
that uses the<font color="#CCCCCC"> users</font><font color="#E5E5E5"> aisle surface now</font>

232
00:11:13,670 --> 00:11:19,810
like I said<font color="#E5E5E5"> before more</font>

233
00:11:15,730 --> 00:11:22,600
of these not most<font color="#CCCCCC"> but like the camera</font>

234
00:11:19,810 --> 00:11:24,670
interface is closed is closed from

235
00:11:22,600 --> 00:11:28,779
sandbox we use media<font color="#E5E5E5"> server to</font>

236
00:11:24,670 --> 00:11:30,160
communicate with a driver<font color="#CCCCCC"> some are some</font>

237
00:11:28,779 --> 00:11:33,189
of them are not accessible<font color="#E5E5E5"> from the</font>

238
00:11:30,160 --> 00:11:35,529
sandbox<font color="#CCCCCC"> some aren't but that's the list</font>

239
00:11:33,190 --> 00:11:40,329
of the others that<font color="#CCCCCC"> actually utilize IO</font>

240
00:11:35,529 --> 00:11:44,189
surface<font color="#E5E5E5"> so our vulnerability was about</font>

241
00:11:40,329 --> 00:11:49,540
the property plane<font color="#E5E5E5"> in the earth surface</font>

242
00:11:44,190 --> 00:11:50,920
object<font color="#E5E5E5"> and because most if not</font><font color="#CCCCCC"> think all</font>

243
00:11:49,540 --> 00:11:55,410
<font color="#CCCCCC">of the drivers we have here actually</font>

244
00:11:50,920 --> 00:11:57,910
<font color="#E5E5E5">closed source so again going the most</font>

245
00:11:55,410 --> 00:11:59,980
dumbest approach I was just looking for

246
00:11:57,910 --> 00:12:02,260
<font color="#E5E5E5">the string plane in all of these</font><font color="#CCCCCC"> drivers</font>

247
00:11:59,980 --> 00:12:06,279
<font color="#E5E5E5">and then a debug string appeared and a</font>

248
00:12:02,260 --> 00:12:08,889
<font color="#E5E5E5">very interesting debugging actually</font><font color="#CCCCCC"> Pai</font>

249
00:12:06,279 --> 00:12:11,230
surface<font color="#E5E5E5"> test get playing</font><font color="#CCCCCC"> ba-ba-ba-ba-ba</font>

250
00:12:08,889 --> 00:12:14,050
and we see that the use<font color="#CCCCCC"> plane seal and</font>

251
00:12:11,230 --> 00:12:18,670
our surface objects again<font color="#E5E5E5"> I don't</font><font color="#CCCCCC"> really</font>

252
00:12:14,050 --> 00:12:20,680
<font color="#CCCCCC">I mean from</font><font color="#E5E5E5"> from the first view it</font>

253
00:12:18,670 --> 00:12:22,479
doesn't really mean<font color="#E5E5E5"> a lot but it's a</font>

254
00:12:20,680 --> 00:12:24,219
good direction<font color="#CCCCCC"> because</font><font color="#E5E5E5"> the other ones</font>

255
00:12:22,480 --> 00:12:26,800
didn't have anything<font color="#E5E5E5"> to do with planes</font>

256
00:12:24,220 --> 00:12:29,319
at<font color="#E5E5E5"> at least voluntary in terms of</font>

257
00:12:26,800 --> 00:12:32,109
strings<font color="#E5E5E5"> so going today to</font><font color="#CCCCCC"> the place</font>

258
00:12:29,319 --> 00:12:34,899
where we I had that string<font color="#E5E5E5"> string</font>

259
00:12:32,110 --> 00:12:41,079
I saw the<font color="#E5E5E5"> following code</font><font color="#CCCCCC"> I hope it's</font>

260
00:12:34,899 --> 00:12:42,730
readable<font color="#E5E5E5"> so I assumed okay so in the</font>

261
00:12:41,079 --> 00:12:45,910
drivers in action you

262
00:12:42,730 --> 00:12:48,850
they have V tables<font color="#E5E5E5"> so if I want to check</font>

263
00:12:45,910 --> 00:12:51,880
whether an object uses<font color="#E5E5E5"> a specific colors</font>

264
00:12:48,850 --> 00:12:53,889
<font color="#E5E5E5">a specific function that's a V table</font>

265
00:12:51,880 --> 00:12:57,880
offset and that's what it calls the

266
00:12:53,889 --> 00:13:01,360
<font color="#CCCCCC">function</font><font color="#E5E5E5"> so what I assumed because of</font>

267
00:12:57,880 --> 00:13:03,220
that string is that<font color="#CCCCCC"> each eight here is</font><font color="#E5E5E5"> a</font>

268
00:13:01,360 --> 00:13:06,790
<font color="#E5E5E5">nice surface object and when I took</font>

269
00:13:03,220 --> 00:13:09,399
<font color="#E5E5E5">offset 110 in the eye surface V table</font><font color="#CCCCCC"> I</font>

270
00:13:06,790 --> 00:13:13,029
saw that it<font color="#E5E5E5"> was indeed</font><font color="#CCCCCC"> the jet plane</font>

271
00:13:09,399 --> 00:13:16,540
<font color="#E5E5E5">size and they actually use the the</font>

272
00:13:13,029 --> 00:13:19,120
parameters that<font color="#E5E5E5"> this function expects is</font>

273
00:13:16,540 --> 00:13:22,540
just a single one which is the plane<font color="#E5E5E5"> ID</font>

274
00:13:19,120 --> 00:13:26,410
<font color="#CCCCCC">so x0 is the surface</font><font color="#E5E5E5"> itself because it's</font>

275
00:13:22,540 --> 00:13:27,990
a virtual call and<font color="#CCCCCC"> w1 is the plane ID</font>

276
00:13:26,410 --> 00:13:30,360
<font color="#CCCCCC">now</font><font color="#E5E5E5"> again this</font><font color="#CCCCCC"> is</font>

277
00:13:27,990 --> 00:13:33,839
just an assumption<font color="#E5E5E5"> but it's a very good</font>

278
00:13:30,360 --> 00:13:36,560
one<font color="#E5E5E5"> in my opinion because we bait we saw</font>

279
00:13:33,839 --> 00:13:39,750
like actual debug strings<font color="#E5E5E5"> and because</font>

280
00:13:36,560 --> 00:13:44,760
<font color="#E5E5E5">the probability that this offset will</font>

281
00:13:39,750 --> 00:13:46,500
match the<font color="#CCCCCC"> the</font><font color="#E5E5E5"> actual string is is not so</font>

282
00:13:44,760 --> 00:13:46,890
high<font color="#CCCCCC"> so if it does match it's a good</font>

283
00:13:46,500 --> 00:13:49,560
sign

284
00:13:46,890 --> 00:13:51,660
now if you guys<font color="#E5E5E5"> remember the</font>

285
00:13:49,560 --> 00:13:53,339
vulnerability was a controllable<font color="#E5E5E5"> plane</font>

286
00:13:51,660 --> 00:13:55,890
size and we see that we<font color="#E5E5E5"> have a</font><font color="#CCCCCC"> mem set</font>

287
00:13:53,339 --> 00:13:58,649
<font color="#E5E5E5">without control with with the plane size</font>

288
00:13:55,890 --> 00:14:00,120
<font color="#E5E5E5">with a TS which we</font><font color="#CCCCCC"> don't know</font><font color="#E5E5E5"> yet what</font>

289
00:13:58,649 --> 00:14:01,560
<font color="#CCCCCC">the eighties are and to be</font><font color="#E5E5E5"> honest I</font>

290
00:14:00,120 --> 00:14:04,740
still<font color="#E5E5E5"> don't know what the eighties out</font>

291
00:14:01,560 --> 00:14:06,810
till today<font color="#CCCCCC"> and we offered something</font><font color="#E5E5E5"> I'm</font>

292
00:14:04,740 --> 00:14:11,100
not<font color="#E5E5E5"> sure what yet</font><font color="#CCCCCC"> but it looks like a</font>

293
00:14:06,810 --> 00:14:13,920
<font color="#E5E5E5">very good start because we can control</font>

294
00:14:11,100 --> 00:14:18,930
you can<font color="#CCCCCC"> calm em set in the</font><font color="#E5E5E5"> kernel with</font>

295
00:14:13,920 --> 00:14:21,569
an<font color="#E5E5E5"> arbitrary length so yeah so like</font><font color="#CCCCCC"> I</font>

296
00:14:18,930 --> 00:14:25,410
<font color="#CCCCCC">said we get the plane size puts it in</font>

297
00:14:21,570 --> 00:14:28,290
<font color="#CCCCCC">Peaks 23 6 23 is the length parameter</font>

298
00:14:25,410 --> 00:14:30,480
which<font color="#CCCCCC"> is being called to memset you</font>

299
00:14:28,290 --> 00:14:32,670
remove the assembly<font color="#CCCCCC"> code above it but it</font>

300
00:14:30,480 --> 00:14:35,370
was just<font color="#CCCCCC"> a</font><font color="#E5E5E5"> duplication of this one so</font>

301
00:14:32,670 --> 00:14:38,699
this memset<font color="#E5E5E5"> calls the same function but</font>

302
00:14:35,370 --> 00:14:43,829
<font color="#E5E5E5">put here</font><font color="#CCCCCC"> zero so</font><font color="#E5E5E5"> it was 0 here but it's</font>

303
00:14:38,700 --> 00:14:46,800
<font color="#E5E5E5">the</font><font color="#CCCCCC"> same it's the same thing</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> it</font>

304
00:14:43,829 --> 00:14:48,630
can<font color="#CCCCCC"> be</font><font color="#E5E5E5"> recapping here we have of an</font>

305
00:14:46,800 --> 00:14:52,140
override with<font color="#E5E5E5"> a TS</font><font color="#CCCCCC"> with an arbitrary</font>

306
00:14:48,630 --> 00:14:53,970
length sounds interesting<font color="#CCCCCC"> but to</font>

307
00:14:52,140 --> 00:14:58,020
actually<font color="#E5E5E5"> do something with that we have</font>

308
00:14:53,970 --> 00:15:01,829
<font color="#E5E5E5">to actually understand why Apple</font><font color="#CCCCCC"> D 5500</font>

309
00:14:58,020 --> 00:15:03,660
is and I'm gonna say<font color="#CCCCCC"> D 5500 because this</font>

310
00:15:01,829 --> 00:15:10,800
is too long<font color="#E5E5E5"> we said so many</font><font color="#CCCCCC"> times in a</font>

311
00:15:03,660 --> 00:15:15,180
presentation<font color="#E5E5E5"> so the 5500 is a video</font>

312
00:15:10,800 --> 00:15:17,520
decoding<font color="#CCCCCC"> visor if we have</font><font color="#E5E5E5"> accelerated</font>

313
00:15:15,180 --> 00:15:20,040
video decoding which is unfortunately

314
00:15:17,520 --> 00:15:22,470
not<font color="#E5E5E5"> accessible</font><font color="#CCCCCC"> from the sandbox but</font>

315
00:15:20,040 --> 00:15:26,040
<font color="#CCCCCC">we'll see an interesting approach soon</font>

316
00:15:22,470 --> 00:15:28,079
<font color="#E5E5E5">and to communicate with the driver we</font>

317
00:15:26,040 --> 00:15:30,750
have to use like I said before<font color="#E5E5E5"> a media</font>

318
00:15:28,079 --> 00:15:34,800
server<font color="#CCCCCC"> D so if I'm in app and I</font><font color="#E5E5E5"> want to</font>

319
00:15:30,750 --> 00:15:37,079
have a decoded video I'm sending<font color="#E5E5E5"> the</font>

320
00:15:34,800 --> 00:15:40,380
<font color="#E5E5E5">code my video please request so media</font>

321
00:15:37,079 --> 00:15:41,400
server<font color="#E5E5E5"> D which checks that I'm not</font>

322
00:15:40,380 --> 00:15:43,350
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> mess</font>

323
00:15:41,400 --> 00:15:46,740
with<font color="#E5E5E5"> anything because this driver is</font>

324
00:15:43,350 --> 00:15:50,790
extremely<font color="#E5E5E5"> I mean it's like like a glass</font>

325
00:15:46,740 --> 00:15:53,040
<font color="#CCCCCC">I mean you you you I don't</font><font color="#E5E5E5"> know it was</font>

326
00:15:50,790 --> 00:15:55,020
<font color="#E5E5E5">like I mean if you have actual access to</font>

327
00:15:53,040 --> 00:15:56,969
<font color="#E5E5E5">this driver at least if you had it</font>

328
00:15:55,020 --> 00:15:59,340
<font color="#E5E5E5">wasn't that complicated to get it to</font>

329
00:15:56,970 --> 00:16:01,560
crash<font color="#E5E5E5"> and if you guys ever took a look</font>

330
00:15:59,340 --> 00:16:04,470
at media server day the same<font color="#CCCCCC"> thing some</font>

331
00:16:01,560 --> 00:16:06,689
of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Reggie teammate api's crash media</font>

332
00:16:04,470 --> 00:16:08,000
<font color="#E5E5E5">server</font><font color="#CCCCCC"> day</font><font color="#E5E5E5"> so media server was making</font>

333
00:16:06,690 --> 00:16:11,190
sure we're<font color="#E5E5E5"> not trying to do anything</font>

334
00:16:08,000 --> 00:16:13,700
<font color="#CCCCCC">anything bad here</font>

335
00:16:11,190 --> 00:16:18,600
then it forwarded the request to<font color="#CCCCCC"> the</font>

336
00:16:13,700 --> 00:16:21,660
<font color="#E5E5E5">5500 the 5500 sent the decoded video</font>

337
00:16:18,600 --> 00:16:25,620
back<font color="#E5E5E5"> to media server day which send it</font>

338
00:16:21,660 --> 00:16:27,680
back<font color="#CCCCCC"> to us</font><font color="#E5E5E5"> so a very unfortunate thing</font>

339
00:16:25,620 --> 00:16:31,410
<font color="#CCCCCC">happened while</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> was doing</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> research</font>

340
00:16:27,680 --> 00:16:34,920
<font color="#CCCCCC">I fell silently closed</font><font color="#E5E5E5"> this</font>

341
00:16:31,410 --> 00:16:38,819
<font color="#E5E5E5">vulnerability that was the only</font><font color="#CCCCCC"> to</font>

342
00:16:34,920 --> 00:16:40,290
assembly<font color="#CCCCCC"> letter</font><font color="#E5E5E5"> that was that was</font>

343
00:16:38,820 --> 00:16:43,050
everything<font color="#E5E5E5"> they needed to</font><font color="#CCCCCC"> actually fix</font>

344
00:16:40,290 --> 00:16:45,089
<font color="#E5E5E5">the vulnerability and I'm not sure who</font>

345
00:16:43,050 --> 00:16:48,089
found that<font color="#E5E5E5"> or who reported that but I</font>

346
00:16:45,090 --> 00:16:51,660
never saw any<font color="#E5E5E5"> credits on the security</font>

347
00:16:48,090 --> 00:16:53,220
advisory and I was still<font color="#CCCCCC"> furious about</font>

348
00:16:51,660 --> 00:16:56,600
<font color="#E5E5E5">what I saw because the mem said we date</font>

349
00:16:53,220 --> 00:16:59,310
is something I<font color="#CCCCCC"> don't understand and</font>

350
00:16:56,600 --> 00:17:04,680
<font color="#E5E5E5">surfaces are always fun when it comes to</font>

351
00:16:59,310 --> 00:17:07,500
<font color="#CCCCCC">iOS so I kept with the with my you know</font>

352
00:17:04,680 --> 00:17:09,000
with my thoughts about<font color="#E5E5E5"> the 5500 so I</font>

353
00:17:07,500 --> 00:17:10,890
<font color="#E5E5E5">wanted to know how we get to</font><font color="#CCCCCC"> this</font>

354
00:17:09,000 --> 00:17:13,859
function because I was just<font color="#E5E5E5"> looking</font><font color="#CCCCCC"> up a</font>

355
00:17:10,890 --> 00:17:18,180
string so I<font color="#E5E5E5"> wasn't exactly sure how</font><font color="#CCCCCC"> I'm</font>

356
00:17:13,859 --> 00:17:19,889
going to<font color="#E5E5E5"> get execution here because just</font>

357
00:17:18,180 --> 00:17:22,170
in the middle of the driver and<font color="#CCCCCC"> the</font>

358
00:17:19,890 --> 00:17:24,030
<font color="#CCCCCC">driver is not open sourced and</font><font color="#E5E5E5"> no</font>

359
00:17:22,170 --> 00:17:25,380
documented at all<font color="#CCCCCC"> in fact</font><font color="#E5E5E5"> if I if you</font>

360
00:17:24,030 --> 00:17:27,690
google that<font color="#E5E5E5"> the only things</font><font color="#CCCCCC"> you see are</font>

361
00:17:25,380 --> 00:17:32,730
questions we<font color="#CCCCCC"> just mentioned that</font><font color="#E5E5E5"> as a</font>

362
00:17:27,690 --> 00:17:35,820
loaded extension so looking up<font color="#E5E5E5"> access to</font>

363
00:17:32,730 --> 00:17:38,250
this function first of all there were

364
00:17:35,820 --> 00:17:40,340
like billions<font color="#E5E5E5"> of them and again all</font>

365
00:17:38,250 --> 00:17:43,110
<font color="#E5E5E5">sources so go figure that word means</font>

366
00:17:40,340 --> 00:17:45,290
<font color="#E5E5E5">some of them were actually</font><font color="#CCCCCC"> virtual</font><font color="#E5E5E5"> so it</font>

367
00:17:43,110 --> 00:17:48,750
don't really<font color="#CCCCCC"> have an xref you have to</font>

368
00:17:45,290 --> 00:17:52,210
either write your own tools to help you

369
00:17:48,750 --> 00:17:54,129
<font color="#CCCCCC">with virtual calls</font><font color="#E5E5E5"> or just yes</font>

370
00:17:52,210 --> 00:17:56,019
and again how can<font color="#CCCCCC"> you actually make sure</font>

371
00:17:54,129 --> 00:17:58,418
<font color="#CCCCCC">that this function is</font><font color="#E5E5E5"> eventually reached</font>

372
00:17:56,019 --> 00:18:00,639
<font color="#E5E5E5">because if you have so many functions</font><font color="#CCCCCC"> I</font>

373
00:17:58,419 --> 00:18:03,549
mean how can<font color="#E5E5E5"> you know that</font>

374
00:18:00,639 --> 00:18:04,059
and<font color="#CCCCCC"> instand I knew that this is going</font><font color="#E5E5E5"> to</font>

375
00:18:03,549 --> 00:18:06,789
happen<font color="#CCCCCC"> a lot</font>

376
00:18:04,059 --> 00:18:08,950
<font color="#E5E5E5">the</font><font color="#CCCCCC"> okay I have a function let's get</font>

377
00:18:06,789 --> 00:18:11,289
reached<font color="#E5E5E5"> and for that I have had an</font>

378
00:18:08,950 --> 00:18:14,169
interesting<font color="#E5E5E5"> approach I took the yellow</font>

379
00:18:11,289 --> 00:18:15,990
project<font color="#E5E5E5"> thanks for</font><font color="#CCCCCC"> a look at the desk</font>

380
00:18:14,169 --> 00:18:20,200
<font color="#CCCCCC">marco grassy for that by the</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> and</font>

381
00:18:15,990 --> 00:18:23,379
they<font color="#CCCCCC"> have a remap page macro the head I</font>

382
00:18:20,200 --> 00:18:25,509
mean<font color="#E5E5E5"> it's not today it doesn't</font><font color="#CCCCCC"> work</font>

383
00:18:23,379 --> 00:18:28,269
anymore as<font color="#CCCCCC"> fun as far as I know which</font>

384
00:18:25,509 --> 00:18:31,299
was disabling<font color="#CCCCCC"> kpp for a Centon page</font><font color="#E5E5E5"> so</font>

385
00:18:28,269 --> 00:18:34,509
what I did<font color="#CCCCCC"> I just</font><font color="#E5E5E5"> used I just disabled</font>

386
00:18:31,299 --> 00:18:37,059
the<font color="#CCCCCC"> kpp for a</font><font color="#E5E5E5"> specific page and then I</font>

387
00:18:34,509 --> 00:18:41,259
overrode false traction on the adverse I

388
00:18:37,059 --> 00:18:43,869
was trying to trace so<font color="#E5E5E5"> ultimately my</font>

389
00:18:41,259 --> 00:18:47,619
goal was<font color="#CCCCCC"> to give specific channel</font>

390
00:18:43,869 --> 00:18:50,949
address<font color="#E5E5E5"> in my project and whenever this</font>

391
00:18:47,619 --> 00:18:53,259
address was executed<font color="#CCCCCC"> I wanted</font><font color="#E5E5E5"> to be</font>

392
00:18:50,950 --> 00:18:55,240
notified<font color="#E5E5E5"> about</font><font color="#CCCCCC"> it and we wanted to</font><font color="#E5E5E5"> see</font>

393
00:18:53,259 --> 00:18:57,309
all of<font color="#E5E5E5"> the visitors in that certain</font>

394
00:18:55,240 --> 00:18:59,289
moment<font color="#E5E5E5"> so what I did I call it yellow</font>

395
00:18:57,309 --> 00:19:02,999
plus plus<font color="#E5E5E5"> let's say that I wanted to</font>

396
00:18:59,289 --> 00:19:07,059
trace the execution context<font color="#E5E5E5"> in address</font>

397
00:19:02,999 --> 00:19:10,149
118<font color="#E5E5E5"> I first called</font><font color="#CCCCCC"> rima page on the</font>

398
00:19:07,059 --> 00:19:12,908
entire page then<font color="#E5E5E5"> I allocated the</font>

399
00:19:10,149 --> 00:19:16,059
<font color="#CCCCCC">shellcode which just pushed all of</font><font color="#E5E5E5"> the</font>

400
00:19:12,909 --> 00:19:18,909
registers to<font color="#CCCCCC"> the stack</font><font color="#E5E5E5"> called K printf</font>

401
00:19:16,059 --> 00:19:23,428
had some false<font color="#E5E5E5"> tabs here and then just</font>

402
00:19:18,909 --> 00:19:27,789
<font color="#E5E5E5">returned back then what I did</font><font color="#CCCCCC"> I overrode</font>

403
00:19:23,429 --> 00:19:29,320
<font color="#E5E5E5">the code here in hundred and eighteen so</font>

404
00:19:27,789 --> 00:19:31,779
that it will<font color="#E5E5E5"> actually jump</font><font color="#CCCCCC"> to my</font>

405
00:19:29,320 --> 00:19:36,100
<font color="#E5E5E5">shellcode instead of executing that</font>

406
00:19:31,779 --> 00:19:39,100
specific instruction and the other life

407
00:19:36,100 --> 00:19:43,570
like I said before<font color="#E5E5E5"> was with LDR x16</font>

408
00:19:39,100 --> 00:19:45,668
loading<font color="#CCCCCC"> eight bytes up front</font><font color="#E5E5E5"> then</font>

409
00:19:43,570 --> 00:19:48,189
calling the address<font color="#E5E5E5"> and then calling the</font>

410
00:19:45,669 --> 00:19:51,490
<font color="#CCCCCC">jumping door at specific shelter address</font>

411
00:19:48,190 --> 00:19:53,320
and then what I also<font color="#E5E5E5"> did was on running</font>

412
00:19:51,490 --> 00:19:56,350
the<font color="#E5E5E5"> phone instruction of about here</font><font color="#CCCCCC"> I</font>

413
00:19:53,320 --> 00:19:59,379
put them here<font color="#CCCCCC"> so then the execution will</font>

414
00:19:56,350 --> 00:20:02,439
seamlessly<font color="#E5E5E5"> go back to the to where it</font>

415
00:19:59,379 --> 00:20:05,189
was<font color="#CCCCCC"> I also changed the</font><font color="#E5E5E5"> heads of the seal</font>

416
00:20:02,440 --> 00:20:07,700
<font color="#E5E5E5">but I didn't like put it in there</font>

417
00:20:05,190 --> 00:20:10,890
<font color="#CCCCCC">square</font><font color="#E5E5E5"> but there is also some</font>

418
00:20:07,700 --> 00:20:13,020
modifications to<font color="#CCCCCC"> x30</font><font color="#E5E5E5"> so it goes back to</font>

419
00:20:10,890 --> 00:20:18,230
you know<font color="#E5E5E5"> to the appropriate address and</font>

420
00:20:13,020 --> 00:20:21,510
<font color="#E5E5E5">not</font><font color="#CCCCCC"> 2 1 1 C and this way every time</font>

421
00:20:18,230 --> 00:20:24,900
118 was executed<font color="#CCCCCC"> I was notified about it</font>

422
00:20:21,510 --> 00:20:26,960
<font color="#E5E5E5">and I was actually surprised because it</font>

423
00:20:24,900 --> 00:20:30,750
was<font color="#E5E5E5"> it worked better than I</font><font color="#CCCCCC"> expected and</font>

424
00:20:26,960 --> 00:20:32,880
<font color="#E5E5E5">it's it was extremely</font><font color="#CCCCCC"> powerful when for</font>

425
00:20:30,750 --> 00:20:35,340
me at<font color="#CCCCCC"> least</font><font color="#E5E5E5"> for me when I was</font><font color="#CCCCCC"> walking on</font>

426
00:20:32,880 --> 00:20:41,130
a calendar<font color="#CCCCCC"> rifles</font><font color="#E5E5E5"> close those once at</font>

427
00:20:35,340 --> 00:20:42,959
least<font color="#E5E5E5"> so around the around the place</font>

428
00:20:41,130 --> 00:20:45,120
where I saw the<font color="#E5E5E5"> string</font><font color="#CCCCCC"> with the memset I</font>

429
00:20:42,960 --> 00:20:47,880
saw the<font color="#E5E5E5"> same behavior again same</font>

430
00:20:45,120 --> 00:20:50,189
approach some<font color="#E5E5E5"> length</font><font color="#CCCCCC"> I'm not sure</font>

431
00:20:47,880 --> 00:20:52,440
<font color="#CCCCCC">exactly</font><font color="#E5E5E5"> what it did but again I can</font>

432
00:20:50,190 --> 00:20:55,290
assume it might somehow be related<font color="#E5E5E5"> to</font>

433
00:20:52,440 --> 00:20:57,150
<font color="#E5E5E5">our surface and again this 80 with mem</font>

434
00:20:55,290 --> 00:21:02,370
sets on something I'm not sure<font color="#E5E5E5"> what it</font>

435
00:20:57,150 --> 00:21:04,500
was<font color="#CCCCCC"> and ok and I stood at</font><font color="#E5E5E5"> this point I</font>

436
00:21:02,370 --> 00:21:08,820
can start reversing like a<font color="#CCCCCC"> decent person</font>

437
00:21:04,500 --> 00:21:12,300
the driver and for<font color="#E5E5E5"> that I because I</font><font color="#CCCCCC"> did</font>

438
00:21:08,820 --> 00:21:15,990
<font color="#CCCCCC">cannot tracing technique so I'm not</font>

439
00:21:12,300 --> 00:21:19,680
<font color="#E5E5E5">going to go deeply in that but basically</font>

440
00:21:15,990 --> 00:21:22,050
you<font color="#CCCCCC"> have to I mean there are</font><font color="#E5E5E5"> some key</font>

441
00:21:19,680 --> 00:21:23,820
rules when when you start reversing<font color="#E5E5E5"> in</font>

442
00:21:22,050 --> 00:21:26,250
<font color="#CCCCCC">rifle</font><font color="#E5E5E5"> first of all you have</font><font color="#CCCCCC"> to know</font>

443
00:21:23,820 --> 00:21:28,020
<font color="#E5E5E5">where</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> V table saw and where they</font>

444
00:21:26,250 --> 00:21:31,140
point to and if<font color="#E5E5E5"> you can automate that</font>

445
00:21:28,020 --> 00:21:33,240
that<font color="#E5E5E5"> would be fantastic</font><font color="#CCCCCC"> you have to know</font>

446
00:21:31,140 --> 00:21:37,920
the entry points<font color="#CCCCCC"> to</font><font color="#E5E5E5"> the driver</font><font color="#CCCCCC"> all of</font>

447
00:21:33,240 --> 00:21:39,990
the<font color="#CCCCCC"> in Linux it's iocked else in iOS is</font>

448
00:21:37,920 --> 00:21:42,210
<font color="#CCCCCC">no it's external methods most</font><font color="#E5E5E5"> of the</font>

449
00:21:39,990 --> 00:21:44,580
times<font color="#E5E5E5"> and again</font><font color="#CCCCCC"> I highly recommend</font>

450
00:21:42,210 --> 00:21:47,640
automating that it is possible to<font color="#E5E5E5"> do</font>

451
00:21:44,580 --> 00:21:50,790
<font color="#E5E5E5">that manually but it's it's really not</font>

452
00:21:47,640 --> 00:21:54,930
fun and I mean a lot of people<font color="#CCCCCC"> claim</font><font color="#E5E5E5"> to</font>

453
00:21:50,790 --> 00:21:56,879
<font color="#E5E5E5">have to release tools about it thinks he</font>

454
00:21:54,930 --> 00:22:01,260
goes did<font color="#CCCCCC"> we actually</font><font color="#E5E5E5"> released something</font>

455
00:21:56,880 --> 00:22:03,750
about it<font color="#E5E5E5"> but I yes but I</font><font color="#CCCCCC"> Department</font>

456
00:22:01,260 --> 00:22:06,360
works well on that and I and I think

457
00:22:03,750 --> 00:22:08,010
<font color="#E5E5E5">writing something</font><font color="#CCCCCC"> that's only way while</font>

458
00:22:06,360 --> 00:22:12,209
you<font color="#E5E5E5"> start</font><font color="#CCCCCC"> developing something</font><font color="#E5E5E5"> is</font>

459
00:22:08,010 --> 00:22:16,379
<font color="#E5E5E5">actually a very good approach</font><font color="#CCCCCC"> ok</font><font color="#E5E5E5"> so like</font>

460
00:22:12,210 --> 00:22:17,550
<font color="#E5E5E5">we said before 80 the</font><font color="#CCCCCC"> memset</font><font color="#E5E5E5"> 80 was had</font>

461
00:22:16,380 --> 00:22:19,020
something to do it

462
00:22:17,550 --> 00:22:21,149
I<font color="#E5E5E5"> was surface in the drive</font>

463
00:22:19,020 --> 00:22:25,370
so let's examine<font color="#E5E5E5"> the earth surface</font>

464
00:22:21,150 --> 00:22:28,830
usages in<font color="#E5E5E5"> the driver so like before</font><font color="#CCCCCC"> a</font>

465
00:22:25,370 --> 00:22:31,199
simple string search for<font color="#E5E5E5"> a surface</font><font color="#CCCCCC"> in</font>

466
00:22:28,830 --> 00:22:34,080
the specific driver and allocate<font color="#CCCCCC"> kala</font>

467
00:22:31,200 --> 00:22:35,430
memory that<font color="#E5E5E5"> lookup surface failed</font><font color="#CCCCCC"> which</font>

468
00:22:34,080 --> 00:22:37,830
is perfect<font color="#E5E5E5"> because that's where they</font>

469
00:22:35,430 --> 00:22:41,730
look up the<font color="#CCCCCC"> i/o</font><font color="#E5E5E5"> surface objects now I</font>

470
00:22:37,830 --> 00:22:45,659
put this<font color="#E5E5E5"> coding took a</font><font color="#CCCCCC"> snippet in</font><font color="#E5E5E5"> C</font>

471
00:22:41,730 --> 00:22:48,630
because because it was too<font color="#E5E5E5"> long for</font><font color="#CCCCCC"> the</font>

472
00:22:45,660 --> 00:22:50,190
<font color="#E5E5E5">if it would be in assembly now what I</font>

473
00:22:48,630 --> 00:22:53,850
did<font color="#E5E5E5"> here is I assumed</font>

474
00:22:50,190 --> 00:22:56,940
<font color="#E5E5E5">v.24</font><font color="#CCCCCC"> is an our surface object</font><font color="#E5E5E5"> so while</font>

475
00:22:53,850 --> 00:23:01,649
all of<font color="#E5E5E5"> that can be might</font><font color="#CCCCCC"> be false I</font><font color="#E5E5E5"> did</font>

476
00:22:56,940 --> 00:23:04,170
know this<font color="#E5E5E5"> some very unique unique</font>

477
00:23:01,650 --> 00:23:07,110
pattern for usage of surface objects and

478
00:23:04,170 --> 00:23:10,200
that<font color="#E5E5E5"> is like I said</font><font color="#CCCCCC"> before with our</font>

479
00:23:07,110 --> 00:23:12,990
surface<font color="#E5E5E5"> you can map in from a map memory</font>

480
00:23:10,200 --> 00:23:15,360
<font color="#E5E5E5">from process a to process B and the way</font>

481
00:23:12,990 --> 00:23:18,690
<font color="#E5E5E5">Apple do that is using something called</font>

482
00:23:15,360 --> 00:23:21,389
<font color="#CCCCCC">IO memory descriptor so</font><font color="#E5E5E5"> I saw that there</font>

483
00:23:18,690 --> 00:23:23,430
<font color="#E5E5E5">was a function</font><font color="#CCCCCC"> a via table function</font><font color="#E5E5E5"> in</font>

484
00:23:21,390 --> 00:23:27,420
our surface which created and I<font color="#CCCCCC"> see</font><font color="#E5E5E5"> an</font>

485
00:23:23,430 --> 00:23:31,230
<font color="#E5E5E5">IO memory skip o object again this was</font>

486
00:23:27,420 --> 00:23:33,720
<font color="#E5E5E5">just an yes but I saw</font><font color="#CCCCCC"> that offset wise</font>

487
00:23:31,230 --> 00:23:36,840
it was calling<font color="#E5E5E5"> the same API that you</font>

488
00:23:33,720 --> 00:23:39,090
would go when you actually use<font color="#CCCCCC"> word in a</font>

489
00:23:36,840 --> 00:23:41,340
<font color="#CCCCCC">purple user file surface so I remember</font>

490
00:23:39,090 --> 00:23:44,129
the script or map which returns us an

491
00:23:41,340 --> 00:23:46,500
object<font color="#E5E5E5"> called</font><font color="#CCCCCC"> IO memory map it's not</font>

492
00:23:44,130 --> 00:23:48,540
<font color="#E5E5E5">really relevant here but the thing</font><font color="#CCCCCC"> is it</font>

493
00:23:46,500 --> 00:23:50,670
does look<font color="#CCCCCC"> like a nice surface pattern it</font>

494
00:23:48,540 --> 00:23:54,750
was it's a lot<font color="#E5E5E5"> of guessing and</font><font color="#CCCCCC"> you know</font>

495
00:23:50,670 --> 00:23:57,030
you cannot<font color="#CCCCCC"> abyssion</font><font color="#E5E5E5"> for 100% but it does</font>

496
00:23:54,750 --> 00:24:01,920
look<font color="#CCCCCC"> like in</font><font color="#E5E5E5"> terms of the offsets it</font>

497
00:23:57,030 --> 00:24:03,389
looks like a nice surface usage<font color="#CCCCCC"> so and</font>

498
00:24:01,920 --> 00:24:05,220
that's that's the<font color="#CCCCCC"> thing I</font><font color="#E5E5E5"> mean that's</font>

499
00:24:03,390 --> 00:24:08,130
interesting<font color="#CCCCCC"> party</font><font color="#E5E5E5"> if any even if you're</font>

500
00:24:05,220 --> 00:24:12,720
<font color="#E5E5E5">not sure</font><font color="#CCCCCC"> about</font><font color="#E5E5E5"> it just guessing might be</font>

501
00:24:08,130 --> 00:24:16,670
a good start<font color="#E5E5E5"> now</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> the offsets I saw</font>

502
00:24:12,720 --> 00:24:19,860
here in this<font color="#CCCCCC"> strata calls office props</font>

503
00:24:16,670 --> 00:24:23,700
<font color="#E5E5E5">somehow match the same offsets</font><font color="#CCCCCC"> I saw in</font>

504
00:24:19,860 --> 00:24:25,709
memset again<font color="#E5E5E5"> Allah JJ allegations but it</font>

505
00:24:23,700 --> 00:24:27,510
looked<font color="#E5E5E5"> like the same thing so then I</font>

506
00:24:25,710 --> 00:24:31,860
<font color="#CCCCCC">just use the characteristic technique I</font>

507
00:24:27,510 --> 00:24:32,550
showed you before and I saw that this

508
00:24:31,860 --> 00:24:37,500
<font color="#E5E5E5">was indeed</font>

509
00:24:32,550 --> 00:24:39,690
surface<font color="#CCCCCC"> object and that yeah I mean in</font>

510
00:24:37,500 --> 00:24:42,090
the<font color="#CCCCCC"> 12-member I didn't get to</font><font color="#E5E5E5"> diversity</font>

511
00:24:39,690 --> 00:24:45,000
<font color="#E5E5E5">but this was for sure</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> a surface</font>

512
00:24:42,090 --> 00:24:47,310
<font color="#E5E5E5">object because I was just tracing the</font>

513
00:24:45,000 --> 00:24:50,280
the<font color="#E5E5E5"> address of the</font><font color="#CCCCCC"> v-- table</font><font color="#E5E5E5"> and it</font>

514
00:24:47,310 --> 00:24:52,590
matters<font color="#CCCCCC"> much match the one that types of</font>

515
00:24:50,280 --> 00:24:55,860
<font color="#E5E5E5">a said so I knew that for sure that this</font>

516
00:24:52,590 --> 00:24:57,810
is an<font color="#E5E5E5"> air surface</font><font color="#CCCCCC"> object here now the</font>

517
00:24:55,860 --> 00:25:00,990
thing<font color="#CCCCCC"> is obviously</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> of</font>

518
00:24:57,810 --> 00:25:02,429
vulnerability was with the plane size we

519
00:25:00,990 --> 00:25:03,840
want<font color="#E5E5E5"> to be able to supply our</font><font color="#CCCCCC"> own outer</font>

520
00:25:02,430 --> 00:25:07,530
surface object<font color="#CCCCCC"> that's that's the thing</font>

521
00:25:03,840 --> 00:25:09,990
<font color="#CCCCCC">so for</font><font color="#E5E5E5"> that</font><font color="#CCCCCC"> I had to reverse the actual</font>

522
00:25:07,530 --> 00:25:11,460
call for media server<font color="#E5E5E5"> because like I</font>

523
00:25:09,990 --> 00:25:15,330
said<font color="#E5E5E5"> it's not accessible from the</font>

524
00:25:11,460 --> 00:25:16,830
sandbox<font color="#CCCCCC"> but because this API</font><font color="#E5E5E5"> gets a lot</font>

525
00:25:15,330 --> 00:25:20,070
of<font color="#E5E5E5"> user mode</font><font color="#CCCCCC"> objects</font><font color="#E5E5E5"> a lot of</font>

526
00:25:16,830 --> 00:25:22,830
<font color="#E5E5E5">complicated ones</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> assume maybe we can</font>

527
00:25:20,070 --> 00:25:24,300
<font color="#E5E5E5">somehow affect the if not</font><font color="#CCCCCC"> the actual</font>

528
00:25:22,830 --> 00:25:31,949
<font color="#CCCCCC">arrival surface subject</font><font color="#E5E5E5"> maybe its</font>

529
00:25:24,300 --> 00:25:36,389
properties so I know that<font color="#E5E5E5"> media server</font>

530
00:25:31,950 --> 00:25:38,400
is<font color="#CCCCCC"> the one that calls the 5500 mainly</font>

531
00:25:36,390 --> 00:25:42,240
because it always crashes when you when

532
00:25:38,400 --> 00:25:44,910
you call it when you use it and when you

533
00:25:42,240 --> 00:25:47,220
when I searched<font color="#E5E5E5"> up the string D 5500 I</font>

534
00:25:44,910 --> 00:25:50,910
actually didn't<font color="#CCCCCC"> see in the media server</font>

535
00:25:47,220 --> 00:25:54,060
and the closest approach the closest

536
00:25:50,910 --> 00:25:56,190
thing was something called<font color="#E5E5E5"> video toolbox</font>

537
00:25:54,060 --> 00:25:58,860
which I saw first time when I started

538
00:25:56,190 --> 00:26:02,910
<font color="#E5E5E5">this research because</font><font color="#CCCCCC"> it had some</font><font color="#E5E5E5"> video</font>

539
00:25:58,860 --> 00:26:04,500
decoding<font color="#CCCCCC"> related functions so yeah we</font>

540
00:26:02,910 --> 00:26:08,340
have to reverse with the toolbox now

541
00:26:04,500 --> 00:26:10,230
this is really<font color="#E5E5E5"> painful because it's in</font>

542
00:26:08,340 --> 00:26:13,020
something<font color="#CCCCCC"> called a liter of cache which</font>

543
00:26:10,230 --> 00:26:15,570
is so in iOS you don't actually have

544
00:26:13,020 --> 00:26:17,850
libraries<font color="#E5E5E5"> you have</font><font color="#CCCCCC"> a big file called</font><font color="#E5E5E5"> a</font>

545
00:26:15,570 --> 00:26:21,360
<font color="#CCCCCC">lead</font><font color="#E5E5E5"> shelf cache which is like I think</font>

546
00:26:17,850 --> 00:26:23,939
<font color="#CCCCCC">modern gigabytes now now Ida seven</font>

547
00:26:21,360 --> 00:26:27,870
claims to<font color="#CCCCCC"> support it I beg to differ</font>

548
00:26:23,940 --> 00:26:29,820
it's<font color="#E5E5E5"> a very bad implementation</font><font color="#CCCCCC"> I'm not</font>

549
00:26:27,870 --> 00:26:32,010
sure who's to blame but even though

550
00:26:29,820 --> 00:26:34,710
<font color="#E5E5E5">neither seven it wasn't that good but</font>

551
00:26:32,010 --> 00:26:37,320
<font color="#E5E5E5">before that didn't even claim</font><font color="#CCCCCC"> to support</font>

552
00:26:34,710 --> 00:26:39,660
it<font color="#E5E5E5"> so I was actually working on an IDE a</font>

553
00:26:37,320 --> 00:26:42,090
Python script<font color="#CCCCCC"> so because if you put</font><font color="#E5E5E5"> it</font>

554
00:26:39,660 --> 00:26:44,820
in a Python<font color="#CCCCCC"> you just don't have branches</font>

555
00:26:42,090 --> 00:26:46,350
<font color="#E5E5E5">for most of the functions so I created</font>

556
00:26:44,820 --> 00:26:48,570
an<font color="#CCCCCC"> Ida Python script</font>

557
00:26:46,350 --> 00:26:50,309
made<font color="#CCCCCC"> sure that we have those branches</font>

558
00:26:48,570 --> 00:26:53,220
<font color="#E5E5E5">and two days later</font><font color="#CCCCCC"> the release</font><font color="#E5E5E5"> later</font>

559
00:26:50,309 --> 00:26:55,200
<font color="#E5E5E5">seven so I just I walked like</font><font color="#CCCCCC"> at least</font><font color="#E5E5E5"> a</font>

560
00:26:53,220 --> 00:26:57,210
full day<font color="#CCCCCC"> on that script maybe even two</font>

561
00:26:55,200 --> 00:26:59,010
<font color="#E5E5E5">days and then I didn't even</font><font color="#CCCCCC"> have to</font><font color="#E5E5E5"> use</font>

562
00:26:57,210 --> 00:27:03,660
it<font color="#E5E5E5"> but happens</font>

563
00:26:59,010 --> 00:27:07,410
so a no apparent usage of<font color="#CCCCCC"> D 5500 in</font>

564
00:27:03,660 --> 00:27:10,830
<font color="#E5E5E5">villa</font><font color="#CCCCCC"> 2</font><font color="#E5E5E5"> toolbox as well so at this point</font>

565
00:27:07,410 --> 00:27:12,900
I was<font color="#CCCCCC"> a little bit lost because like you</font>

566
00:27:10,830 --> 00:27:15,418
cannot debug media server<font color="#E5E5E5"> D or this</font>

567
00:27:12,900 --> 00:27:17,820
extension<font color="#E5E5E5"> while it runs on meter every</font>

568
00:27:15,419 --> 00:27:20,400
day so I<font color="#E5E5E5"> guess</font><font color="#CCCCCC"> maybe</font><font color="#E5E5E5"> there is another</font>

569
00:27:17,820 --> 00:27:24,299
framework involved and she was just

570
00:27:20,400 --> 00:27:26,730
looking up the string<font color="#E5E5E5"> D 5500 in the</font>

571
00:27:24,299 --> 00:27:28,799
entire Dalek<font color="#CCCCCC"> short cache which took</font><font color="#E5E5E5"> like</font>

572
00:27:26,730 --> 00:27:32,390
<font color="#CCCCCC">2 days to load in Ida and then I found</font>

573
00:27:28,799 --> 00:27:37,950
<font color="#E5E5E5">that there was an interesting unknown</font>

574
00:27:32,390 --> 00:27:41,730
framework called<font color="#E5E5E5"> h.264</font><font color="#CCCCCC"> h8</font><font color="#E5E5E5"> which actually</font>

575
00:27:37,950 --> 00:27:44,669
did a proper<font color="#E5E5E5"> usage</font><font color="#CCCCCC"> of the API is to talk</font>

576
00:27:41,730 --> 00:27:47,490
with<font color="#CCCCCC"> the driver</font><font color="#E5E5E5"> so I did see that in a</font>

577
00:27:44,669 --> 00:27:50,880
function called<font color="#E5E5E5"> Apple D</font><font color="#CCCCCC"> 5500 decode same</font>

578
00:27:47,490 --> 00:27:55,140
internal there was this API which is the

579
00:27:50,880 --> 00:27:58,080
API<font color="#CCCCCC"> Apple supplies if you want to use</font>

580
00:27:55,140 --> 00:28:00,630
exposed interface of drivers<font color="#E5E5E5"> so every</font>

581
00:27:58,080 --> 00:28:05,059
time<font color="#E5E5E5"> you call that function</font><font color="#CCCCCC"> you actually</font>

582
00:28:00,630 --> 00:28:09,419
send the request<font color="#E5E5E5"> a request to a rival so</font>

583
00:28:05,059 --> 00:28:13,799
the actual<font color="#E5E5E5"> exported function in h.264 h8</font>

584
00:28:09,419 --> 00:28:15,679
was this one this long function but

585
00:28:13,799 --> 00:28:20,190
unfortunately<font color="#CCCCCC"> didn't</font><font color="#E5E5E5"> have any xrefs and</font>

586
00:28:15,679 --> 00:28:22,080
<font color="#CCCCCC">i mean most</font><font color="#E5E5E5"> of the code</font><font color="#CCCCCC"> I'm saying most</font>

587
00:28:20,190 --> 00:28:24,330
because sometimes it does<font color="#CCCCCC"> happen but</font>

588
00:28:22,080 --> 00:28:28,918
most<font color="#E5E5E5"> of the codes isn't written not to</font>

589
00:28:24,330 --> 00:28:32,158
<font color="#E5E5E5">be used so I thought it might</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> maybe</font>

590
00:28:28,919 --> 00:28:36,150
<font color="#CCCCCC">inevitable</font><font color="#E5E5E5"> of something and because Ida</font>

591
00:28:32,159 --> 00:28:39,870
<font color="#E5E5E5">and dieter - aren't so good friends yet</font>

592
00:28:36,150 --> 00:28:41,789
<font color="#E5E5E5">maybe it just didn't parse it so then I</font>

593
00:28:39,870 --> 00:28:43,979
was<font color="#E5E5E5"> like</font><font color="#CCCCCC"> ok I'll</font><font color="#E5E5E5"> just search</font><font color="#CCCCCC"> the address</font>

594
00:28:41,789 --> 00:28:46,980
in Ida<font color="#E5E5E5"> and see if I find something</font>

595
00:28:43,980 --> 00:28:51,150
<font color="#E5E5E5">interesting</font><font color="#CCCCCC"> and yeah</font><font color="#E5E5E5"> I found it</font><font color="#CCCCCC"> in a V</font>

596
00:28:46,980 --> 00:28:53,340
table<font color="#CCCCCC"> in</font><font color="#E5E5E5"> something that looks like a V</font>

597
00:28:51,150 --> 00:28:54,630
table which also didn't<font color="#E5E5E5"> have an XF and</font>

598
00:28:53,340 --> 00:28:56,639
then I started going<font color="#CCCCCC"> with the same</font>

599
00:28:54,630 --> 00:28:59,740
technique<font color="#E5E5E5"> of okay if it doesn't have X</font>

600
00:28:56,640 --> 00:29:01,600
<font color="#E5E5E5">roof it's just because either doesn't</font>

601
00:28:59,740 --> 00:29:04,900
and then I just started searching for

602
00:29:01,600 --> 00:29:08,409
<font color="#CCCCCC">the others</font><font color="#E5E5E5"> again and I saw that there</font>

603
00:29:04,900 --> 00:29:10,929
was a<font color="#CCCCCC"> V</font><font color="#E5E5E5"> table and another V table like</font>

604
00:29:08,410 --> 00:29:14,470
thing which was contained in another

605
00:29:10,929 --> 00:29:16,929
<font color="#E5E5E5">variable so eventually this one did have</font>

606
00:29:14,470 --> 00:29:20,160
symbols<font color="#CCCCCC"> edit did have xref sorry and</font>

607
00:29:16,929 --> 00:29:23,770
going back up the stack the stack trace

608
00:29:20,160 --> 00:29:26,710
<font color="#E5E5E5">an object a call which was which</font><font color="#CCCCCC"> is</font>

609
00:29:23,770 --> 00:29:29,889
named<font color="#CCCCCC"> blahblah</font><font color="#E5E5E5"> the calculate instance</font>

610
00:29:26,710 --> 00:29:32,230
was actually being called<font color="#E5E5E5"> and if we can</font>

611
00:29:29,890 --> 00:29:35,590
see here specific<font color="#E5E5E5"> video formats were</font>

612
00:29:32,230 --> 00:29:37,690
given to a function which<font color="#CCCCCC"> is</font><font color="#E5E5E5"> not really</font>

613
00:29:35,590 --> 00:29:39,100
<font color="#CCCCCC">I mean there are a</font><font color="#E5E5E5"> lot of functions I'm</font>

614
00:29:37,690 --> 00:29:41,350
not<font color="#E5E5E5"> going to do it to each one</font><font color="#CCCCCC"> of them</font>

615
00:29:39,100 --> 00:29:45,908
but I<font color="#E5E5E5"> still wanna show you the hierarchy</font>

616
00:29:41,350 --> 00:29:48,219
<font color="#E5E5E5">so the function</font><font color="#CCCCCC"> h.264</font><font color="#E5E5E5"> h8</font><font color="#CCCCCC"> register which</font>

617
00:29:45,909 --> 00:29:52,059
calls this one also<font color="#E5E5E5"> didn't have access</font>

618
00:29:48,220 --> 00:29:55,270
but it did appear<font color="#CCCCCC"> a string somewhere so</font>

619
00:29:52,059 --> 00:29:57,370
what I<font color="#E5E5E5"> realized is</font><font color="#CCCCCC"> that it</font><font color="#E5E5E5"> doesn't it</font>

620
00:29:55,270 --> 00:29:58,900
actually uses<font color="#CCCCCC"> DL open and there seem to</font>

621
00:29:57,370 --> 00:30:02,168
<font color="#E5E5E5">call that which i think is weird</font>

622
00:29:58,900 --> 00:30:04,809
considering the use of<font color="#CCCCCC"> dial job -</font><font color="#E5E5E5"> so</font>

623
00:30:02,169 --> 00:30:07,659
again this is the floor<font color="#E5E5E5"> I had to go from</font>

624
00:30:04,809 --> 00:30:09,879
the moment I yeah<font color="#CCCCCC"> I send a request to</font>

625
00:30:07,659 --> 00:30:12,549
media server<font color="#E5E5E5"> till a driver was being</font>

626
00:30:09,880 --> 00:30:15,820
used<font color="#E5E5E5"> so I'm sending an explicit quest to</font>

627
00:30:12,549 --> 00:30:18,220
media server<font color="#CCCCCC"> X PC is by the way some ap</font>

628
00:30:15,820 --> 00:30:21,220
<font color="#E5E5E5">as some IPC mechanism that Apple creates</font>

629
00:30:18,220 --> 00:30:26,409
basically<font color="#CCCCCC"> you can send information</font>

630
00:30:21,220 --> 00:30:29,770
<font color="#E5E5E5">easily in a dictionary or a nice</font><font color="#CCCCCC"> objects</font>

631
00:30:26,409 --> 00:30:31,960
style so you do that using an

632
00:30:29,770 --> 00:30:34,780
undocumented<font color="#E5E5E5"> API called VT the</font>

633
00:30:31,960 --> 00:30:38,460
<font color="#E5E5E5">computation session create which is</font>

634
00:30:34,780 --> 00:30:41,440
getting I mean you actually<font color="#E5E5E5"> call that in</font>

635
00:30:38,460 --> 00:30:44,650
your process<font color="#E5E5E5"> in</font><font color="#CCCCCC"> its first</font><font color="#E5E5E5"> I remember</font>

636
00:30:41,440 --> 00:30:46,539
that's<font color="#E5E5E5"> the actual same function which is</font>

637
00:30:44,650 --> 00:30:48,250
being called in media server and there's

638
00:30:46,539 --> 00:30:50,169
like a check if your media server then

639
00:30:48,250 --> 00:30:52,450
do something<font color="#E5E5E5"> otherwise just send stuff</font>

640
00:30:50,169 --> 00:30:58,960
to media server<font color="#E5E5E5"> so this function calls</font>

641
00:30:52,450 --> 00:31:03,010
the open<font color="#CCCCCC"> DL theme which calls</font><font color="#E5E5E5"> h.264</font>

642
00:30:58,960 --> 00:31:05,289
register which calls this function which

643
00:31:03,010 --> 00:31:06,879
creates an object<font color="#E5E5E5"> with a V table which</font>

644
00:31:05,289 --> 00:31:08,679
is<font color="#E5E5E5"> another V table which</font><font color="#CCCCCC"> is another</font>

645
00:31:06,880 --> 00:31:10,980
function so<font color="#E5E5E5"> this wasn't fun at all to</font>

646
00:31:08,679 --> 00:31:12,350
the<font color="#E5E5E5"> first but</font><font color="#CCCCCC"> we have to do</font><font color="#E5E5E5"> that so I</font>

647
00:31:10,980 --> 00:31:14,929
mean

648
00:31:12,350 --> 00:31:16,520
main problem was lit seriously<font color="#CCCCCC"> Ida not</font>

649
00:31:14,929 --> 00:31:19,280
even<font color="#E5E5E5"> because you know</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> just extra</font>

650
00:31:16,520 --> 00:31:23,389
<font color="#E5E5E5">food string search but the super slow</font>

651
00:31:19,280 --> 00:31:26,330
so this API I mean all the<font color="#CCCCCC"> VT the</font>

652
00:31:23,390 --> 00:31:29,570
compression blah blah blah<font color="#E5E5E5"> while things</font>

653
00:31:26,330 --> 00:31:30,678
actually<font color="#CCCCCC"> documented in a sense that</font><font color="#E5E5E5"> you</font>

654
00:31:29,570 --> 00:31:33,500
know<font color="#CCCCCC"> what the parameters they</font><font color="#E5E5E5"> are</font>

655
00:31:30,679 --> 00:31:36,169
expecting and I figure<font color="#E5E5E5"> out perhaps this</font>

656
00:31:33,500 --> 00:31:38,539
is I mean that<font color="#CCCCCC"> sounds like something</font>

657
00:31:36,169 --> 00:31:41,539
<font color="#CCCCCC">that is related to our surface because</font>

658
00:31:38,539 --> 00:31:45,320
it's actually<font color="#E5E5E5"> decoding frames so maybe</font>

659
00:31:41,539 --> 00:31:47,750
that's the<font color="#CCCCCC"> thing that that's</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> thing</font><font color="#E5E5E5"> I</font>

660
00:31:45,320 --> 00:31:50,389
mean none of<font color="#CCCCCC"> the 80s actually talked</font>

661
00:31:47,750 --> 00:31:55,480
<font color="#CCCCCC">about an iOS surface ID being given</font><font color="#E5E5E5"> to</font>

662
00:31:50,390 --> 00:31:59,030
an API but it must be<font color="#CCCCCC"> those somewhere so</font>

663
00:31:55,480 --> 00:32:01,610
this<font color="#E5E5E5"> function I mean this function was</font>

664
00:31:59,030 --> 00:32:04,428
calling this function within<font color="#E5E5E5"> the h.264</font>

665
00:32:01,610 --> 00:32:05,360
h8 framework and then completely

666
00:32:04,429 --> 00:32:07,309
undocumented

667
00:32:05,360 --> 00:32:09,799
<font color="#E5E5E5">I saw the following code</font><font color="#CCCCCC"> awhile</font>

668
00:32:07,309 --> 00:32:11,539
dictionary appeals then you can you

669
00:32:09,799 --> 00:32:13,850
could supply I mean I just<font color="#E5E5E5"> reversed the</font>

670
00:32:11,539 --> 00:32:15,740
<font color="#E5E5E5">entire chain</font><font color="#CCCCCC"> of chain I showed you then</font>

671
00:32:13,850 --> 00:32:18,559
I saw that<font color="#CCCCCC"> if you supply</font><font color="#E5E5E5"> the dictionary</font>

672
00:32:15,740 --> 00:32:20,150
<font color="#CCCCCC">I mean the the</font><font color="#E5E5E5"> API you can</font><font color="#CCCCCC"> receive</font><font color="#E5E5E5"> a</font>

673
00:32:18,559 --> 00:32:22,549
dictionary and if you supply<font color="#E5E5E5"> this</font>

674
00:32:20,150 --> 00:32:25,669
<font color="#E5E5E5">dictionary</font><font color="#CCCCCC"> it gets some parameters</font><font color="#E5E5E5"> this</font>

675
00:32:22,549 --> 00:32:27,710
<font color="#E5E5E5">is completely undocumented and it's</font>

676
00:32:25,669 --> 00:32:31,340
accessible from<font color="#CCCCCC"> the</font><font color="#E5E5E5"> sandbox and I mean</font>

677
00:32:27,710 --> 00:32:32,840
if there's a good<font color="#E5E5E5"> in my experience if</font>

678
00:32:31,340 --> 00:32:35,990
there is<font color="#CCCCCC"> another surface</font><font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a bug</font>

679
00:32:32,840 --> 00:32:39,799
so I mean at the moment I saw that I was

680
00:32:35,990 --> 00:32:42,500
<font color="#CCCCCC">like okay</font><font color="#E5E5E5"> finally something good is</font>

681
00:32:39,799 --> 00:32:44,539
going here and I obviously obviously<font color="#E5E5E5"> had</font>

682
00:32:42,500 --> 00:32:47,809
no idea what of the<font color="#CCCCCC"> teks</font><font color="#E5E5E5"> and offset why</font>

683
00:32:44,539 --> 00:32:49,669
were or<font color="#E5E5E5"> what lifestyle was I did all</font>

684
00:32:47,809 --> 00:32:52,100
<font color="#CCCCCC">that kind of a</font><font color="#E5E5E5"> surface ID sounds like</font>

685
00:32:49,669 --> 00:32:55,940
the actual<font color="#E5E5E5"> surface area we give to the</font>

686
00:32:52,100 --> 00:32:59,000
driver<font color="#CCCCCC"> so yeah like I said</font><font color="#E5E5E5"> it absurdly</font>

687
00:32:55,940 --> 00:33:01,909
receives<font color="#E5E5E5"> an</font><font color="#CCCCCC"> i/o surface ID receive some</font>

688
00:32:59,000 --> 00:33:04,480
offsets and I wanted<font color="#E5E5E5"> to check whether</font>

689
00:33:01,909 --> 00:33:08,240
this was<font color="#E5E5E5"> the surface</font><font color="#CCCCCC"> the surface</font><font color="#E5E5E5"> we saw</font>

690
00:33:04,480 --> 00:33:10,700
in the kernel and using the<font color="#CCCCCC"> kel-tec</font><font color="#E5E5E5"> the</font>

691
00:33:08,240 --> 00:33:14,270
IRS<font color="#E5E5E5"> general tracing technique I did and</font>

692
00:33:10,700 --> 00:33:17,510
it was indeed<font color="#E5E5E5"> the specific a surface</font>

693
00:33:14,270 --> 00:33:19,010
object<font color="#E5E5E5"> we specified this</font><font color="#CCCCCC"> is another</font>

694
00:33:17,510 --> 00:33:22,850
<font color="#E5E5E5">example how this was useful because</font>

695
00:33:19,010 --> 00:33:25,330
<font color="#E5E5E5">without having</font><font color="#CCCCCC"> that I cannot</font><font color="#E5E5E5"> think on a</font>

696
00:33:22,850 --> 00:33:27,730
on a on a way to<font color="#E5E5E5"> actually</font>

697
00:33:25,330 --> 00:33:30,970
make sure<font color="#E5E5E5"> that this was our surface</font>

698
00:33:27,730 --> 00:33:33,340
object<font color="#E5E5E5"> so</font><font color="#CCCCCC"> understood that</font><font color="#E5E5E5"> what I</font>

699
00:33:30,970 --> 00:33:35,380
supplied here was going directly to the

700
00:33:33,340 --> 00:33:38,290
<font color="#CCCCCC">channel and it was accessible</font><font color="#E5E5E5"> from the</font>

701
00:33:35,380 --> 00:33:40,660
<font color="#CCCCCC">sandbox</font><font color="#E5E5E5"> because media server</font><font color="#CCCCCC"> they just</font>

702
00:33:38,290 --> 00:33:44,560
used it and pass for<font color="#E5E5E5"> the request to the</font>

703
00:33:40,660 --> 00:33:48,700
<font color="#E5E5E5">driver so our objective was to get to</font>

704
00:33:44,560 --> 00:33:51,159
<font color="#CCCCCC">the</font><font color="#E5E5E5"> memset yes I hope you remember I</font>

705
00:33:48,700 --> 00:33:53,620
mean<font color="#CCCCCC"> at that</font><font color="#E5E5E5"> point we already had</font>

706
00:33:51,160 --> 00:33:57,190
control on the<font color="#CCCCCC"> earth surface we supplied</font>

707
00:33:53,620 --> 00:34:02,560
so I just<font color="#E5E5E5"> used the</font><font color="#CCCCCC"> IO</font><font color="#E5E5E5"> IO SEL</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> tracing</font>

708
00:33:57,190 --> 00:34:05,800
technique on the memset area now this<font color="#E5E5E5"> is</font>

709
00:34:02,560 --> 00:34:09,969
the<font color="#CCCCCC"> mem set</font><font color="#E5E5E5"> and this</font><font color="#CCCCCC"> is a tile of the</font>

710
00:34:05,800 --> 00:34:12,730
<font color="#E5E5E5">textile of the try what is what we</font>

711
00:34:09,969 --> 00:34:15,549
supplied in this dictionary<font color="#E5E5E5"> and if you</font>

712
00:34:12,730 --> 00:34:18,610
see here<font color="#CCCCCC"> and interesting thing I love</font>

713
00:34:15,550 --> 00:34:21,610
it's y-intercept X<font color="#CCCCCC"> are being given here</font>

714
00:34:18,610 --> 00:34:24,250
<font color="#E5E5E5">and these are all</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> surface properties</font>

715
00:34:21,610 --> 00:34:26,920
we fully control<font color="#E5E5E5"> or at least in a very</font>

716
00:34:24,250 --> 00:34:28,870
good I mean yeah I mean it depends<font color="#E5E5E5"> on</font>

717
00:34:26,920 --> 00:34:30,460
<font color="#E5E5E5">other properties sometimes but in that</font>

718
00:34:28,870 --> 00:34:32,620
case I don't<font color="#CCCCCC"> think there</font><font color="#E5E5E5"> was any</font>

719
00:34:30,460 --> 00:34:36,400
restriction<font color="#CCCCCC"> if I remember</font><font color="#E5E5E5"> correctly and</font>

720
00:34:32,620 --> 00:34:39,370
this was given to<font color="#E5E5E5"> plane offset one here</font>

721
00:34:36,400 --> 00:34:41,889
which is<font color="#CCCCCC"> being used till that's the</font>

722
00:34:39,370 --> 00:34:44,620
length now not<font color="#E5E5E5"> only we control the</font>

723
00:34:41,889 --> 00:34:47,949
length we<font color="#CCCCCC"> can also control the offset</font>

724
00:34:44,620 --> 00:34:52,210
from<font color="#E5E5E5"> where we start overriding so this</font>

725
00:34:47,949 --> 00:34:54,969
is much more powerful<font color="#CCCCCC"> because I mean</font>

726
00:34:52,210 --> 00:34:57,130
operating a lot of things is one thing

727
00:34:54,969 --> 00:34:59,560
making sure where you actually start

728
00:34:57,130 --> 00:35:01,720
overriding is extremely powerful<font color="#CCCCCC"> because</font>

729
00:34:59,560 --> 00:35:04,150
if you can<font color="#CCCCCC"> actually utilize this memset</font>

730
00:35:01,720 --> 00:35:08,560
<font color="#E5E5E5">and you can write this</font><font color="#CCCCCC"> a tea on a</font>

731
00:35:04,150 --> 00:35:11,530
specific length field on on a different

732
00:35:08,560 --> 00:35:13,240
object<font color="#CCCCCC"> so I mean this is</font><font color="#E5E5E5"> good enough</font><font color="#CCCCCC"> to</font>

733
00:35:11,530 --> 00:35:15,160
start<font color="#CCCCCC"> walking your way into a very</font>

734
00:35:13,240 --> 00:35:17,770
powerful<font color="#CCCCCC"> right primitive on the channel</font>

735
00:35:15,160 --> 00:35:19,779
so<font color="#CCCCCC"> I mean once you have the offset</font>

736
00:35:17,770 --> 00:35:22,840
control this well this<font color="#CCCCCC"> is a completely</font>

737
00:35:19,780 --> 00:35:25,240
<font color="#E5E5E5">different game so there was one problem</font>

738
00:35:22,840 --> 00:35:27,700
<font color="#E5E5E5">though I mean and if I put the</font><font color="#CCCCCC"> kernel</font>

739
00:35:25,240 --> 00:35:31,500
technique<font color="#CCCCCC"> a testing</font><font color="#E5E5E5"> technique here</font><font color="#CCCCCC"> I saw</font>

740
00:35:27,700 --> 00:35:36,819
<font color="#CCCCCC">this verse indeed my my properties but</font>

741
00:35:31,500 --> 00:35:39,110
context some other data unknown<font color="#CCCCCC"> I mean</font>

742
00:35:36,820 --> 00:35:42,140
this this expression

743
00:35:39,110 --> 00:35:45,340
was was always preventing the<font color="#CCCCCC"> cod</font><font color="#E5E5E5"> flow</font>

744
00:35:42,140 --> 00:35:47,930
from going into the memset<font color="#E5E5E5"> again</font>

745
00:35:45,340 --> 00:35:51,710
<font color="#CCCCCC">twenty-something functions</font><font color="#E5E5E5"> dipped in the</font>

746
00:35:47,930 --> 00:35:53,960
<font color="#E5E5E5">diver</font><font color="#CCCCCC"> I mean how do</font><font color="#E5E5E5"> you find out what</font>

747
00:35:51,710 --> 00:35:56,390
<font color="#E5E5E5">this</font><font color="#CCCCCC"> is so because there's no</font><font color="#E5E5E5"> source</font>

748
00:35:53,960 --> 00:35:59,000
code<font color="#E5E5E5"> there are no extras</font><font color="#CCCCCC"> because it's a</font>

749
00:35:56,390 --> 00:36:04,430
struct<font color="#E5E5E5"> offset so how to find out what it</font>

750
00:35:59,000 --> 00:36:06,380
<font color="#CCCCCC">is</font><font color="#E5E5E5"> so I looked at the assembly and that</font>

751
00:36:04,430 --> 00:36:08,480
was<font color="#E5E5E5"> ultimately</font><font color="#CCCCCC"> the check</font><font color="#E5E5E5"> they took</font>

752
00:36:06,380 --> 00:36:12,940
something for<font color="#E5E5E5"> offset</font><font color="#CCCCCC"> four for</font><font color="#E5E5E5"> eight and</font>

753
00:36:08,480 --> 00:36:17,780
then they took the<font color="#E5E5E5"> six byte from it and</font>

754
00:36:12,940 --> 00:36:19,910
they ended it<font color="#E5E5E5"> with six thirty</font>

755
00:36:17,780 --> 00:36:22,520
I've absolutely<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> I had absolutely</font>

756
00:36:19,910 --> 00:36:25,490
no<font color="#CCCCCC"> idea</font><font color="#E5E5E5"> all it was and then I did there</font>

757
00:36:22,520 --> 00:36:27,380
<font color="#E5E5E5">again most dumbest approach</font><font color="#CCCCCC"> I just</font>

758
00:36:25,490 --> 00:36:32,890
dumped the entire<font color="#E5E5E5"> Bible text section and</font>

759
00:36:27,380 --> 00:36:34,280
started wrapping so that is<font color="#E5E5E5"> same I mean</font>

760
00:36:32,890 --> 00:36:36,560
nothing

761
00:36:34,280 --> 00:36:38,960
no magics it was just dumping<font color="#E5E5E5"> the</font><font color="#CCCCCC"> kernel</font>

762
00:36:36,560 --> 00:36:41,990
literally<font color="#CCCCCC"> dropping</font><font color="#E5E5E5"> the offsets with STL</font>

763
00:36:38,960 --> 00:36:45,440
and unfortunately here<font color="#E5E5E5"> there was a good</font>

764
00:36:41,990 --> 00:36:48,259
candidate I mean that was<font color="#E5E5E5"> the</font><font color="#CCCCCC"> only store</font>

765
00:36:45,440 --> 00:36:49,220
<font color="#CCCCCC">in to offset four four</font><font color="#E5E5E5"> eight so I went</font>

766
00:36:48,260 --> 00:36:51,920
to<font color="#E5E5E5"> this address</font>

767
00:36:49,220 --> 00:36:53,540
then I mean if<font color="#E5E5E5"> it's the only one then we</font>

768
00:36:51,920 --> 00:36:55,910
<font color="#E5E5E5">can assume we can</font><font color="#CCCCCC"> stay actually</font><font color="#E5E5E5"> safely</font>

769
00:36:53,540 --> 00:37:00,650
assume that<font color="#E5E5E5"> this was the about objects</font>

770
00:36:55,910 --> 00:37:06,080
were looking at but here we had<font color="#E5E5E5"> X 28 now</font>

771
00:37:00,650 --> 00:37:09,860
<font color="#E5E5E5">not sure how how much pain you had from</font>

772
00:37:06,080 --> 00:37:12,710
reversing<font color="#CCCCCC"> rebels in iOS but X 28</font><font color="#E5E5E5"> is the</font>

773
00:37:09,860 --> 00:37:14,180
is a function<font color="#E5E5E5"> of the oil subject so</font>

774
00:37:12,710 --> 00:37:17,360
every time you release the ref count on

775
00:37:14,180 --> 00:37:20,779
an object<font color="#CCCCCC"> they use the offset</font><font color="#E5E5E5"> X 28 yeah</font>

776
00:37:17,360 --> 00:37:22,820
I think yeah<font color="#E5E5E5"> X 28 next one is rating so</font>

777
00:37:20,780 --> 00:37:24,680
you cannot<font color="#E5E5E5"> graphics</font><font color="#CCCCCC"> 28 on a calendar</font>

778
00:37:22,820 --> 00:37:27,410
<font color="#CCCCCC">either</font><font color="#E5E5E5"> you have hundreds of matches and</font>

779
00:37:24,680 --> 00:37:31,100
in this point<font color="#E5E5E5"> I unfortunately had to</font>

780
00:37:27,410 --> 00:37:33,140
<font color="#E5E5E5">start the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> thing like</font><font color="#CCCCCC"> 15 functions</font>

781
00:37:31,100 --> 00:37:37,009
and again<font color="#E5E5E5"> you cannot have the compiler</font>

782
00:37:33,140 --> 00:37:39,230
<font color="#CCCCCC">set</font><font color="#E5E5E5"> you serious left to go</font><font color="#CCCCCC"> fully</font><font color="#E5E5E5"> offsets</font>

783
00:37:37,010 --> 00:37:41,960
and hope that<font color="#CCCCCC"> eventually you</font><font color="#E5E5E5"> find</font>

784
00:37:39,230 --> 00:37:44,060
something<font color="#E5E5E5"> useful so again I think this I</font>

785
00:37:41,960 --> 00:37:45,590
mean this was really<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> I was a</font>

786
00:37:44,060 --> 00:37:48,250
little<font color="#CCCCCC"> bit miserable at that time but</font>

787
00:37:45,590 --> 00:37:53,050
again<font color="#CCCCCC"> I was in the other</font><font color="#E5E5E5"> hand here</font>

788
00:37:48,250 --> 00:37:57,100
<font color="#E5E5E5">memset so</font><font color="#CCCCCC"> and eventually I got to that</font>

789
00:37:53,050 --> 00:37:59,080
point<font color="#E5E5E5"> so I saw what they put in the x28</font>

790
00:37:57,100 --> 00:38:02,440
I mean they said here we have<font color="#CCCCCC"> two peaks</font>

791
00:37:59,080 --> 00:38:05,200
<font color="#E5E5E5">28</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> from which is being given to</font>

792
00:38:02,440 --> 00:38:07,660
<font color="#CCCCCC">four four eight so as I said it was</font><font color="#E5E5E5"> the</font>

793
00:38:05,200 --> 00:38:10,509
<font color="#E5E5E5">six</font><font color="#CCCCCC"> byte and I saw there was some</font>

794
00:38:07,660 --> 00:38:12,640
calculation which I'll translate<font color="#E5E5E5"> for you</font>

795
00:38:10,510 --> 00:38:16,060
that was the arithmetic<font color="#E5E5E5"> that was done</font>

796
00:38:12,640 --> 00:38:18,370
and being put in that<font color="#E5E5E5"> specific thing</font><font color="#CCCCCC"> now</font>

797
00:38:16,060 --> 00:38:21,180
again it's the middle<font color="#E5E5E5"> of nowhere we have</font>

798
00:38:18,370 --> 00:38:24,730
<font color="#E5E5E5">no idea what we're looking at but again</font>

799
00:38:21,180 --> 00:38:26,649
<font color="#CCCCCC">1b0</font><font color="#E5E5E5"> is a little bit less common</font><font color="#CCCCCC"> so I did</font>

800
00:38:24,730 --> 00:38:30,970
the<font color="#E5E5E5"> same approach I just grabbed one</font><font color="#CCCCCC"> b0</font>

801
00:38:26,650 --> 00:38:32,740
with STR which yielded the<font color="#E5E5E5"> falling</font>

802
00:38:30,970 --> 00:38:38,910
offset which yielded the following

803
00:38:32,740 --> 00:38:43,240
interesting interesting<font color="#E5E5E5"> extreme h.264</font>

804
00:38:38,910 --> 00:38:44,009
<font color="#CCCCCC">f/w</font><font color="#E5E5E5"> set PPS and SPS no idea what it is</font>

805
00:38:43,240 --> 00:38:46,419
<font color="#E5E5E5">yet</font>

806
00:38:44,010 --> 00:38:50,110
now that's something<font color="#CCCCCC"> you</font><font color="#E5E5E5"> didn't know</font>

807
00:38:46,420 --> 00:38:52,810
<font color="#E5E5E5">about</font><font color="#CCCCCC"> it I never liked h.264</font><font color="#E5E5E5"> and I never</font>

808
00:38:50,110 --> 00:38:54,010
know<font color="#E5E5E5"> anything about h.264 except that</font>

809
00:38:52,810 --> 00:38:59,259
that's<font color="#E5E5E5"> what I download when I want to</font>

810
00:38:54,010 --> 00:38:59,770
<font color="#E5E5E5">see movies and again for</font><font color="#CCCCCC"> looking on the</font>

811
00:38:59,260 --> 00:39:04,720
<font color="#CCCCCC">cheque</font>

812
00:38:59,770 --> 00:39:07,690
<font color="#E5E5E5">I literally googled the I mean I just</font>

813
00:39:04,720 --> 00:39:09,939
looked it on the the<font color="#E5E5E5"> function and and I</font>

814
00:39:07,690 --> 00:39:12,820
saw another interesting string ABC

815
00:39:09,940 --> 00:39:17,320
decoder<font color="#E5E5E5"> power said unsupported</font><font color="#CCCCCC"> Nalu</font>

816
00:39:12,820 --> 00:39:20,430
<font color="#E5E5E5">length size sorry googled ABC</font><font color="#CCCCCC"> Nalu</font><font color="#E5E5E5"> and</font>

817
00:39:17,320 --> 00:39:25,210
the first<font color="#E5E5E5"> resource was welcome to h.264</font>

818
00:39:20,430 --> 00:39:26,859
<font color="#E5E5E5">thank you and we I mean at that point I</font>

819
00:39:25,210 --> 00:39:31,060
understood<font color="#CCCCCC"> that having the standard</font>

820
00:39:26,860 --> 00:39:32,770
might be<font color="#CCCCCC"> useful I would try to be</font><font color="#E5E5E5"> to be</font>

821
00:39:31,060 --> 00:39:35,620
honest I<font color="#E5E5E5"> would refrain from I mean I</font>

822
00:39:32,770 --> 00:39:37,570
would try to do anything<font color="#CCCCCC"> I mean reading</font>

823
00:39:35,620 --> 00:39:39,759
<font color="#E5E5E5">the standard</font><font color="#CCCCCC"> is seriously</font><font color="#E5E5E5"> the last</font><font color="#CCCCCC"> thing</font>

824
00:39:37,570 --> 00:39:41,350
you wanna do but<font color="#E5E5E5"> it was very useful</font>

825
00:39:39,760 --> 00:39:44,740
eventually nuisance<font color="#CCCCCC"> it will cease and</font>

826
00:39:41,350 --> 00:39:47,589
<font color="#CCCCCC">why</font><font color="#E5E5E5"> so I'll summarize it for you a video</font>

827
00:39:44,740 --> 00:39:52,149
<font color="#CCCCCC">is actually</font><font color="#E5E5E5"> is</font><font color="#CCCCCC"> actually a bunch of null</font>

828
00:39:47,590 --> 00:39:54,430
units and<font color="#CCCCCC"> Malu</font><font color="#E5E5E5"> so just a bunch of</font><font color="#CCCCCC"> Na</font>

829
00:39:52,150 --> 00:39:56,500
<font color="#E5E5E5">units so you can actually H everything</font>

830
00:39:54,430 --> 00:40:00,669
<font color="#CCCCCC">you see in the video file is a null</font>

831
00:39:56,500 --> 00:40:02,080
object<font color="#E5E5E5"> and I'm not sure if you can see</font>

832
00:40:00,670 --> 00:40:03,700
anything<font color="#E5E5E5"> from</font><font color="#CCCCCC"> here</font>

833
00:40:02,080 --> 00:40:06,759
so I'll<font color="#E5E5E5"> try to zoom because there are a</font>

834
00:40:03,700 --> 00:40:09,279
few fields which<font color="#E5E5E5"> are important so there</font>

835
00:40:06,760 --> 00:40:10,690
is a lot<font color="#CCCCCC"> of things in null objects</font><font color="#E5E5E5"> and</font>

836
00:40:09,280 --> 00:40:13,120
to be honest<font color="#CCCCCC"> I am not really sure</font><font color="#E5E5E5"> what</font>

837
00:40:10,690 --> 00:40:15,060
they all mean<font color="#E5E5E5"> because I mean people do a</font>

838
00:40:13,120 --> 00:40:20,770
<font color="#E5E5E5">PhD on that yes</font>

839
00:40:15,060 --> 00:40:22,330
and but<font color="#CCCCCC"> there some header offsets in</font>

840
00:40:20,770 --> 00:40:24,490
this specific object which are very

841
00:40:22,330 --> 00:40:27,730
important<font color="#E5E5E5"> here</font><font color="#CCCCCC"> are they forbidden</font><font color="#E5E5E5"> zero</font>

842
00:40:24,490 --> 00:40:29,680
bit which is<font color="#E5E5E5"> I have</font><font color="#CCCCCC"> no idea why</font><font color="#E5E5E5"> they put</font>

843
00:40:27,730 --> 00:40:32,650
<font color="#E5E5E5">that but that's standard so yeah we</font>

844
00:40:29,680 --> 00:40:34,660
<font color="#CCCCCC">always have to comply</font><font color="#E5E5E5"> nullified EC which</font>

845
00:40:32,650 --> 00:40:35,980
I'm still I mean<font color="#E5E5E5"> it wasn't</font><font color="#CCCCCC"> relevant to</font>

846
00:40:34,660 --> 00:40:36,940
<font color="#E5E5E5">the</font><font color="#CCCCCC"> research</font><font color="#E5E5E5"> and I didn't have to</font>

847
00:40:35,980 --> 00:40:38,680
understand what it was

848
00:40:36,940 --> 00:40:41,740
I mean assume it I assume<font color="#CCCCCC"> it's a</font>

849
00:40:38,680 --> 00:40:44,799
reference<font color="#CCCCCC"> but I cannot give a guarantee</font>

850
00:40:41,740 --> 00:40:47,259
on<font color="#CCCCCC"> that but now unit type is something</font>

851
00:40:44,800 --> 00:40:50,740
very<font color="#CCCCCC"> interesting because this defines</font>

852
00:40:47,260 --> 00:40:53,350
how<font color="#CCCCCC"> it process the null object</font><font color="#E5E5E5"> so I mean</font>

853
00:40:50,740 --> 00:40:55,509
we had a lot<font color="#CCCCCC"> of things here</font><font color="#E5E5E5"> but after</font>

854
00:40:53,350 --> 00:40:59,680
them after them everything that<font color="#CCCCCC"> happened</font>

855
00:40:55,510 --> 00:41:04,090
<font color="#CCCCCC">was based on</font><font color="#E5E5E5"> this null unit type so</font>

856
00:40:59,680 --> 00:41:05,919
again<font color="#E5E5E5"> each null object as a type and I</font>

857
00:41:04,090 --> 00:41:08,050
mean now<font color="#CCCCCC"> that we know that and we know</font>

858
00:41:05,920 --> 00:41:10,840
<font color="#E5E5E5">that we are talking about value of null</font>

859
00:41:08,050 --> 00:41:14,830
<font color="#E5E5E5">objects in the kernel how do we find</font>

860
00:41:10,840 --> 00:41:16,860
where the kernel<font color="#E5E5E5"> processes the the</font>

861
00:41:14,830 --> 00:41:22,870
<font color="#E5E5E5">specific object</font><font color="#CCCCCC"> beit's based on its type</font>

862
00:41:16,860 --> 00:41:27,270
so<font color="#CCCCCC"> i got into that specific code and so</font>

863
00:41:22,870 --> 00:41:31,120
<font color="#E5E5E5">0 null if i DC with idea c and this</font>

864
00:41:27,270 --> 00:41:35,440
label which<font color="#E5E5E5"> is being called here now</font>

865
00:41:31,120 --> 00:41:39,130
<font color="#CCCCCC">here there is a branch not 0</font><font color="#E5E5E5"> and the and</font>

866
00:41:35,440 --> 00:41:42,330
<font color="#CCCCCC">i mean if this is</font><font color="#E5E5E5"> if</font><font color="#CCCCCC"> this is</font><font color="#E5E5E5"> 0 and this</font>

867
00:41:39,130 --> 00:41:47,490
<font color="#E5E5E5">is 5 this</font><font color="#CCCCCC"> string is being</font><font color="#E5E5E5"> printed now</font>

868
00:41:42,330 --> 00:41:47,490
going<font color="#E5E5E5"> back</font><font color="#CCCCCC"> to the manual</font><font color="#E5E5E5"> we did see that</font>

869
00:41:49,320 --> 00:41:57,790
<font color="#E5E5E5">now</font><font color="#CCCCCC"> fi</font><font color="#E5E5E5"> DC and we did see unit ID so it</font>

870
00:41:54,400 --> 00:41:59,410
might<font color="#CCCCCC"> be I mean</font><font color="#E5E5E5"> I was confident enough</font>

871
00:41:57,790 --> 00:42:02,500
<font color="#CCCCCC">to assume that they might come</font><font color="#E5E5E5"> after</font>

872
00:41:59,410 --> 00:42:04,990
each other<font color="#E5E5E5"> in destruct in the kernel</font><font color="#CCCCCC"> and</font>

873
00:42:02,500 --> 00:42:09,220
as you can<font color="#CCCCCC"> see they just</font><font color="#E5E5E5"> popped them</font>

874
00:42:04,990 --> 00:42:12,490
from the object constitutively<font color="#CCCCCC"> I mean in</font>

875
00:42:09,220 --> 00:42:15,870
the same order so<font color="#E5E5E5"> and I saw the the old</font>

876
00:42:12,490 --> 00:42:15,870
idea<font color="#E5E5E5"> which is</font>

877
00:42:15,940 --> 00:42:21,760
so again I just<font color="#E5E5E5"> cook I mean I just</font><font color="#CCCCCC"> you</font>

878
00:42:18,820 --> 00:42:23,620
looked<font color="#E5E5E5"> for the string idea in the manual</font>

879
00:42:21,760 --> 00:42:27,820
and that's<font color="#E5E5E5"> why sometimes many are</font>

880
00:42:23,620 --> 00:42:30,640
important but<font color="#CCCCCC"> really vicious</font><font color="#E5E5E5"> and I found</font>

881
00:42:27,820 --> 00:42:36,300
out that<font color="#CCCCCC"> number</font><font color="#E5E5E5"> five in a Linotype</font><font color="#CCCCCC"> is</font>

882
00:42:30,640 --> 00:42:42,520
<font color="#CCCCCC">Suffolk called ideal</font><font color="#E5E5E5"> and as we saw here</font>

883
00:42:36,300 --> 00:42:44,440
<font color="#CCCCCC">hey let's</font><font color="#E5E5E5"> we saw here there was a</font>

884
00:42:42,520 --> 00:42:47,259
comparison<font color="#E5E5E5"> to five so now we know that</font>

885
00:42:44,440 --> 00:42:49,480
<font color="#E5E5E5">not</font><font color="#CCCCCC"> only this is a null object we</font>

886
00:42:47,260 --> 00:42:51,970
actually know some very important

887
00:42:49,480 --> 00:42:54,550
offsets in that<font color="#E5E5E5"> object and at that point</font>

888
00:42:51,970 --> 00:42:56,950
it was much easier to<font color="#CCCCCC"> go and see the</font>

889
00:42:54,550 --> 00:42:59,200
<font color="#E5E5E5">actual processing of the object and then</font>

890
00:42:56,950 --> 00:43:01,629
<font color="#E5E5E5">what I saw</font><font color="#CCCCCC"> I mean and there I mean there</font>

891
00:42:59,200 --> 00:43:02,980
are<font color="#E5E5E5"> a</font><font color="#CCCCCC"> lot of null types</font><font color="#E5E5E5"> I'm gonna go</font>

892
00:43:01,630 --> 00:43:04,690
through the important ones for<font color="#CCCCCC"> the</font>

893
00:43:02,980 --> 00:43:06,550
<font color="#E5E5E5">specific research but there are billions</font>

894
00:43:04,690 --> 00:43:08,290
<font color="#CCCCCC">of them and I would</font><font color="#E5E5E5"> be surprised if</font>

895
00:43:06,550 --> 00:43:11,980
<font color="#CCCCCC">there are vulnerabilities there unless</font>

896
00:43:08,290 --> 00:43:14,380
Apple revamped the entire driver<font color="#E5E5E5"> so the</font>

897
00:43:11,980 --> 00:43:16,930
first one that<font color="#CCCCCC"> we have</font><font color="#E5E5E5"> that we have the</font>

898
00:43:14,380 --> 00:43:19,480
<font color="#CCCCCC">robot is some little SPS</font><font color="#E5E5E5"> so if we have a</font>

899
00:43:16,930 --> 00:43:23,129
driver<font color="#E5E5E5"> if you have a video so there are</font>

900
00:43:19,480 --> 00:43:27,340
a<font color="#E5E5E5"> bunch of properties for</font><font color="#CCCCCC"> a short video</font>

901
00:43:23,130 --> 00:43:31,030
<font color="#E5E5E5">video sequence so just like a few second</font>

902
00:43:27,340 --> 00:43:32,980
it<font color="#E5E5E5"> depends it can be a few seconds can</font>

903
00:43:31,030 --> 00:43:34,690
<font color="#CCCCCC">be it can actually actually be the</font>

904
00:43:32,980 --> 00:43:38,020
entire movie but<font color="#E5E5E5"> just a bunch of</font>

905
00:43:34,690 --> 00:43:40,690
properties for specific devotion<font color="#CCCCCC"> PPS</font>

906
00:43:38,020 --> 00:43:43,960
picture parameter set is the same thing

907
00:43:40,690 --> 00:43:48,670
like<font color="#E5E5E5"> SPS but for pictures so a bunch of</font>

908
00:43:43,960 --> 00:43:51,610
a<font color="#E5E5E5"> bunch of pictures had PPS like</font>

909
00:43:48,670 --> 00:43:54,370
properties like PPS<font color="#CCCCCC"> and there was also</font>

910
00:43:51,610 --> 00:43:56,830
something called<font color="#E5E5E5"> idea which is</font><font color="#CCCCCC"> seriously</font>

911
00:43:54,370 --> 00:43:58,330
<font color="#E5E5E5">like a BMP it was a standalone image so</font>

912
00:43:56,830 --> 00:44:00,580
for those<font color="#CCCCCC"> of</font><font color="#E5E5E5"> you a little</font><font color="#CCCCCC"> bit more</font>

913
00:43:58,330 --> 00:44:03,610
familiar<font color="#E5E5E5"> with video the compare video</font>

914
00:44:00,580 --> 00:44:07,360
encoding<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> if you have like a</font>

915
00:44:03,610 --> 00:44:09,310
<font color="#CCCCCC">picture</font><font color="#E5E5E5"> and then you have only the the</font>

916
00:44:07,360 --> 00:44:11,620
modifications between each frame<font color="#E5E5E5"> and</font>

917
00:44:09,310 --> 00:44:14,049
that's what is stored<font color="#E5E5E5"> in the file so</font>

918
00:44:11,620 --> 00:44:15,759
idea was a complete standalone image<font color="#E5E5E5"> so</font>

919
00:44:14,050 --> 00:44:18,670
you<font color="#E5E5E5"> couldn't go I mean it didn't need</font>

920
00:44:15,760 --> 00:44:21,190
any other frame to be parsed and other

921
00:44:18,670 --> 00:44:22,330
friends<font color="#E5E5E5"> so based on the last on the idea</font>

922
00:44:21,190 --> 00:44:27,240
they had before<font color="#E5E5E5"> them</font>

923
00:44:22,330 --> 00:44:29,348
so for each SPS so for each short video

924
00:44:27,240 --> 00:44:33,038
sorry for each

925
00:44:29,349 --> 00:44:35,859
video sequence<font color="#E5E5E5"> the idea null was the</font>

926
00:44:33,039 --> 00:44:39,459
first one so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> how it looks in</font><font color="#CCCCCC"> the</font>

927
00:44:35,859 --> 00:44:42,308
video you<font color="#CCCCCC"> have</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> SPS objects the PPS</font>

928
00:44:39,459 --> 00:44:44,198
object points to the SPS and<font color="#CCCCCC"> then we</font>

929
00:44:42,309 --> 00:44:46,630
have an idea object and<font color="#CCCCCC"> afterwards what</font>

930
00:44:44,199 --> 00:44:48,759
if we have the<font color="#E5E5E5"> frames so this must</font>

931
00:44:46,630 --> 00:44:52,869
always be<font color="#E5E5E5"> the first one and this must</font>

932
00:44:48,759 --> 00:44:56,019
always point to SPS<font color="#E5E5E5"> by by ID by</font><font color="#CCCCCC"> day by</font>

933
00:44:52,869 --> 00:44:58,829
the way<font color="#CCCCCC"> each I mean they have a specific</font>

934
00:44:56,019 --> 00:45:02,288
<font color="#CCCCCC">ID and they</font><font color="#E5E5E5"> just point to each other</font>

935
00:44:58,829 --> 00:45:04,779
going<font color="#E5E5E5"> back to the research we had the</font>

936
00:45:02,289 --> 00:45:08,229
<font color="#CCCCCC">string said PPS and SPS and</font><font color="#E5E5E5"> then I</font>

937
00:45:04,779 --> 00:45:12,249
figured maybe<font color="#CCCCCC"> one b0 is</font><font color="#E5E5E5"> actually an SPS</font>

938
00:45:08,229 --> 00:45:15,368
object PPS<font color="#E5E5E5"> objects so what I did I</font>

939
00:45:12,249 --> 00:45:16,779
seriously<font color="#E5E5E5"> sent a</font><font color="#CCCCCC"> video to be decoded</font><font color="#E5E5E5"> and</font>

940
00:45:15,369 --> 00:45:20,680
then I checked<font color="#E5E5E5"> using the tracing</font>

941
00:45:16,779 --> 00:45:23,109
<font color="#CCCCCC">technique if it was what</font><font color="#E5E5E5"> one b0 was and</font>

942
00:45:20,680 --> 00:45:25,989
it<font color="#E5E5E5"> indeed looked like the SPS I was</font>

943
00:45:23,109 --> 00:45:30,160
sending in the video now and note about

944
00:45:25,989 --> 00:45:32,829
<font color="#CCCCCC">it</font><font color="#E5E5E5"> I started using ffmpeg because I was</font>

945
00:45:30,160 --> 00:45:35,410
too<font color="#E5E5E5"> lazy to you know actually go</font><font color="#CCCCCC"> and</font>

946
00:45:32,829 --> 00:45:37,509
<font color="#CCCCCC">post videos on my own but</font><font color="#E5E5E5"> then I found</font>

947
00:45:35,410 --> 00:45:40,209
<font color="#E5E5E5">out</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> sometimes all these public</font>

948
00:45:37,509 --> 00:45:42,099
tools are not<font color="#E5E5E5"> enough so it was I mean it</font>

949
00:45:40,209 --> 00:45:44,259
sounds<font color="#E5E5E5"> powder than it actually is there</font>

950
00:45:42,099 --> 00:45:49,449
<font color="#CCCCCC">a lot</font><font color="#E5E5E5"> of actually good persons in github</font>

951
00:45:44,259 --> 00:45:51,640
<font color="#E5E5E5">for</font><font color="#CCCCCC"> h.264 videos</font><font color="#E5E5E5"> so just to sum I mean I</font>

952
00:45:49,449 --> 00:45:54,489
just<font color="#E5E5E5"> thought my own tools to decodes and</font>

953
00:45:51,640 --> 00:45:56,589
to create and to<font color="#E5E5E5"> post videos and I know</font>

954
00:45:54,489 --> 00:45:58,959
it's a lot<font color="#CCCCCC"> of infrastructure</font><font color="#E5E5E5"> sometimes</font>

955
00:45:56,589 --> 00:46:00,910
<font color="#E5E5E5">but eventually it was it at least in my</font>

956
00:45:58,959 --> 00:46:02,879
<font color="#CCCCCC">opinion because this saved me a lot of</font>

957
00:46:00,910 --> 00:46:07,359
time in you know open

958
00:46:02,880 --> 00:46:10,479
<font color="#CCCCCC">1:01</font><font color="#E5E5E5"> editor and starts writing</font><font color="#CCCCCC"> beats so</font>

959
00:46:07,359 --> 00:46:11,949
like I said<font color="#CCCCCC"> 1b0</font><font color="#E5E5E5"> was our SPS object which</font>

960
00:46:10,479 --> 00:46:12,629
was sufficient to understand the

961
00:46:11,949 --> 00:46:15,249
<font color="#E5E5E5">mysterious</font>

962
00:46:12,630 --> 00:46:18,039
memset<font color="#E5E5E5"> expression that we didn't</font><font color="#CCCCCC"> have</font>

963
00:46:15,249 --> 00:46:21,160
back<font color="#E5E5E5"> then if you remember so if a now if</font>

964
00:46:18,039 --> 00:46:25,930
an a property called<font color="#CCCCCC"> Homa</font><font color="#E5E5E5"> format IDC is</font>

965
00:46:21,160 --> 00:46:27,848
<font color="#CCCCCC">zero we can get to the</font><font color="#E5E5E5"> memset so what I</font>

966
00:46:25,930 --> 00:46:30,368
did<font color="#E5E5E5"> and by the way this means</font><font color="#CCCCCC"> I mean if</font>

967
00:46:27,849 --> 00:46:33,670
this is<font color="#CCCCCC"> zero it means the video</font><font color="#E5E5E5"> is</font>

968
00:46:30,369 --> 00:46:37,269
monochromatic<font color="#E5E5E5"> so only black</font><font color="#CCCCCC"> and white</font><font color="#E5E5E5"> so</font>

969
00:46:33,670 --> 00:46:40,359
<font color="#E5E5E5">in controls the if</font><font color="#CCCCCC"> I if I'm</font><font color="#E5E5E5"> not mistaken</font>

970
00:46:37,269 --> 00:46:42,879
<font color="#E5E5E5">because again it's a standard so it's</font>

971
00:46:40,359 --> 00:46:45,250
got<font color="#CCCCCC"> all the colors</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> the video</font>

972
00:46:42,880 --> 00:46:46,809
so what it is<font color="#E5E5E5"> I was just</font><font color="#CCCCCC"> using the</font><font color="#E5E5E5"> tools</font>

973
00:46:45,250 --> 00:46:49,660
I wrote<font color="#E5E5E5"> I chaired the video it's</font>

974
00:46:46,809 --> 00:46:51,700
chloroform at IDC zero<font color="#E5E5E5"> and I tried to</font>

975
00:46:49,660 --> 00:46:53,890
decode<font color="#CCCCCC"> it</font><font color="#E5E5E5"> so the way you do that</font>

976
00:46:51,700 --> 00:46:55,750
with the API<font color="#E5E5E5"> we call the very long</font>

977
00:46:53,890 --> 00:46:57,788
function name<font color="#E5E5E5"> see a video</font><font color="#CCCCCC"> form a</font>

978
00:46:55,750 --> 00:47:00,519
<font color="#CCCCCC">description a</font><font color="#E5E5E5"> its form a 264 parameter</font>

979
00:46:57,789 --> 00:47:02,109
sets from when<font color="#E5E5E5"> I want</font><font color="#CCCCCC"> H form</font><font color="#E5E5E5"> H 264</font>

980
00:47:00,519 --> 00:47:04,359
<font color="#E5E5E5">parameter sets because</font><font color="#CCCCCC"> I'm not going</font><font color="#E5E5E5"> to</font>

981
00:47:02,109 --> 00:47:06,940
say<font color="#E5E5E5"> that every time</font><font color="#CCCCCC"> this initializes the</font>

982
00:47:04,359 --> 00:47:10,569
session with the<font color="#CCCCCC"> witch</font><font color="#E5E5E5"> media server and</font>

983
00:47:06,940 --> 00:47:13,329
it receives<font color="#CCCCCC"> PP s and s PS properties</font><font color="#E5E5E5"> the</font>

984
00:47:10,569 --> 00:47:15,339
session is the session<font color="#E5E5E5"> needs the output</font>

985
00:47:13,329 --> 00:47:19,180
from<font color="#E5E5E5"> this function the session creation</font>

986
00:47:15,339 --> 00:47:21,009
a API<font color="#E5E5E5"> and then we call VT the</font>

987
00:47:19,180 --> 00:47:25,180
<font color="#CCCCCC">compression session</font><font color="#E5E5E5"> decodes frame and</font>

988
00:47:21,009 --> 00:47:27,819
then nothing happens now<font color="#CCCCCC"> you know I'm</font>

989
00:47:25,180 --> 00:47:30,848
<font color="#CCCCCC">not</font><font color="#E5E5E5"> sure if how it looks now</font><font color="#CCCCCC"> but I was</font>

990
00:47:27,819 --> 00:47:32,910
you know imagine<font color="#CCCCCC"> your work</font><font color="#E5E5E5"> like two</font>

991
00:47:30,849 --> 00:47:35,769
weeks just<font color="#CCCCCC"> to get to a specific</font>

992
00:47:32,910 --> 00:47:37,899
instruction<font color="#CCCCCC"> and then you're like ok and</font>

993
00:47:35,769 --> 00:47:40,258
finally<font color="#E5E5E5"> I'm finally getting there and no</font>

994
00:47:37,900 --> 00:47:44,170
nothing happened<font color="#CCCCCC"> I was very very</font>

995
00:47:40,259 --> 00:47:45,759
frustrated at that<font color="#E5E5E5"> moment so I mean I</font>

996
00:47:44,170 --> 00:47:48,339
saw that we didn't<font color="#CCCCCC"> even get to the</font><font color="#E5E5E5"> point</font>

997
00:47:45,759 --> 00:47:51,039
where the driver was being used and then

998
00:47:48,339 --> 00:47:53,349
<font color="#E5E5E5">the first immediate surfer</font><font color="#CCCCCC"> D</font><font color="#E5E5E5"> and I saw</font>

999
00:47:51,039 --> 00:47:55,630
that<font color="#E5E5E5"> media</font><font color="#CCCCCC"> server checks if koma format</font>

1000
00:47:53,349 --> 00:47:57,180
IDC<font color="#E5E5E5"> is not</font><font color="#CCCCCC"> zero</font>

1001
00:47:55,630 --> 00:48:00,190
<font color="#E5E5E5">and if it's</font><font color="#CCCCCC"> zero it</font><font color="#E5E5E5"> denies</font><font color="#CCCCCC"> the request</font>

1002
00:47:57,180 --> 00:48:02,230
now at this point<font color="#E5E5E5"> I'm like you know</font>

1003
00:48:00,190 --> 00:48:06,069
after<font color="#CCCCCC"> all</font><font color="#E5E5E5"> this verse engineering in the</font>

1004
00:48:02,230 --> 00:48:08,319
tools<font color="#CCCCCC"> everything but then in a rainy day</font>

1005
00:48:06,069 --> 00:48:09,549
<font color="#CCCCCC">I</font><font color="#E5E5E5"> know it necessarily never</font><font color="#CCCCCC"> rained and</font><font color="#E5E5E5"> I</font>

1006
00:48:08,319 --> 00:48:12,599
was still in Ezra back then so in a

1007
00:48:09,549 --> 00:48:15,579
sunny day<font color="#E5E5E5"> yet</font><font color="#CCCCCC"> depressing one I get the</font>

1008
00:48:12,599 --> 00:48:19,299
<font color="#E5E5E5">h.264 format which revealed the</font>

1009
00:48:15,579 --> 00:48:23,829
<font color="#CCCCCC">following so each frame</font><font color="#E5E5E5"> pointed to a PA</font>

1010
00:48:19,299 --> 00:48:27,490
<font color="#CCCCCC">to a PPS object and every</font><font color="#E5E5E5"> PPS object I</font>

1011
00:48:23,829 --> 00:48:32,109
mean by ID<font color="#E5E5E5"> supported by ID and every</font>

1012
00:48:27,490 --> 00:48:35,890
yeah and every PPS object pointed also

1013
00:48:32,109 --> 00:48:38,859
by ready to to an SMS object and like I

1014
00:48:35,890 --> 00:48:42,339
said<font color="#CCCCCC"> SPS objects</font><font color="#E5E5E5"> had the</font><font color="#CCCCCC"> whole format ID</font>

1015
00:48:38,859 --> 00:48:45,549
<font color="#CCCCCC">see now this</font><font color="#E5E5E5"> got me thinking</font><font color="#CCCCCC"> why do they</font>

1016
00:48:42,339 --> 00:48:47,230
need an ID for an SPS object<font color="#E5E5E5"> if there is</font>

1017
00:48:45,549 --> 00:48:48,519
only<font color="#E5E5E5"> one because if you look at the</font>

1018
00:48:47,230 --> 00:48:50,380
<font color="#E5E5E5">ffmpeg if you download</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> video from</font>

1019
00:48:48,519 --> 00:48:54,549
<font color="#E5E5E5">YouTube and you use ffmpeg to analyze it</font>

1020
00:48:50,380 --> 00:48:55,930
there's always one<font color="#CCCCCC"> SV PSPs object</font><font color="#E5E5E5"> also</font>

1021
00:48:54,549 --> 00:48:56,320
when you know when you<font color="#CCCCCC"> pause the video</font>

1022
00:48:55,930 --> 00:48:59,020
<font color="#CCCCCC">they</font>

1023
00:48:56,320 --> 00:49:01,450
never have<font color="#E5E5E5"> more than one and of course</font><font color="#CCCCCC"> I</font>

1024
00:48:59,020 --> 00:49:04,480
<font color="#E5E5E5">don't I</font><font color="#CCCCCC"> don't wanna start writing my own</font>

1025
00:49:01,450 --> 00:49:06,460
video<font color="#E5E5E5"> with bits so I usually</font><font color="#CCCCCC"> just</font>

1026
00:49:04,480 --> 00:49:08,290
downloaded the video and post it and

1027
00:49:06,460 --> 00:49:10,150
maybe modified it but then it's got my

1028
00:49:08,290 --> 00:49:14,070
thingy maybe there's<font color="#CCCCCC"> more than one</font><font color="#E5E5E5"> SPS</font>

1029
00:49:10,150 --> 00:49:15,450
object and then I read<font color="#E5E5E5"> the following</font>

1030
00:49:14,070 --> 00:49:18,900
<font color="#E5E5E5">don't worry</font>

1031
00:49:15,450 --> 00:49:20,890
<font color="#E5E5E5">there is a nice infographic later on I</font>

1032
00:49:18,900 --> 00:49:25,450
hope you can see it I cannot zoom

1033
00:49:20,890 --> 00:49:29,859
<font color="#CCCCCC">because it's too white so</font><font color="#E5E5E5"> bla bla bla</font>

1034
00:49:25,450 --> 00:49:32,259
bla<font color="#E5E5E5"> bla</font><font color="#CCCCCC"> it's most one</font><font color="#E5E5E5"> sequence yeah each</font>

1035
00:49:29,860 --> 00:49:34,270
sequence parameter<font color="#CCCCCC"> set so each SPS is</font>

1036
00:49:32,260 --> 00:49:35,650
initially considered not active at the

1037
00:49:34,270 --> 00:49:39,970
start<font color="#E5E5E5"> of the operation</font><font color="#CCCCCC"> of the recording</font>

1038
00:49:35,650 --> 00:49:41,470
<font color="#E5E5E5">process</font><font color="#CCCCCC"> its most</font><font color="#E5E5E5"> one</font><font color="#CCCCCC"> SPS is considered</font>

1039
00:49:39,970 --> 00:49:43,149
<font color="#CCCCCC">active</font><font color="#E5E5E5"> within a given moment during the</font>

1040
00:49:41,470 --> 00:49:45,700
operation<font color="#E5E5E5"> of the decoding process and</font>

1041
00:49:43,150 --> 00:49:49,140
the activation<font color="#CCCCCC"> of any particular SPS</font>

1042
00:49:45,700 --> 00:49:52,930
results in the deactivation<font color="#E5E5E5"> of the</font>

1043
00:49:49,140 --> 00:49:56,440
<font color="#E5E5E5">previously active SPS if any which means</font>

1044
00:49:52,930 --> 00:49:59,680
that<font color="#E5E5E5"> stand</font><font color="#CCCCCC"> unwise I</font><font color="#E5E5E5"> mean I never saw any</font>

1045
00:49:56,440 --> 00:50:01,810
video utilizing that functionality<font color="#E5E5E5"> but</font>

1046
00:49:59,680 --> 00:50:04,870
the standard says so<font color="#E5E5E5"> so</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> have to</font>

1047
00:50:01,810 --> 00:50:09,070
comply<font color="#E5E5E5"> you could have theoretically a</font>

1048
00:50:04,870 --> 00:50:11,710
lot of SPS objects<font color="#E5E5E5"> and a lot of PPS</font>

1049
00:50:09,070 --> 00:50:14,140
objects and each PPS object could point

1050
00:50:11,710 --> 00:50:17,200
to a different SPS object so<font color="#CCCCCC"> that was</font>

1051
00:50:14,140 --> 00:50:20,740
completely no serious relationship in

1052
00:50:17,200 --> 00:50:22,600
terms<font color="#CCCCCC"> of they cannot on each SPS can</font>

1053
00:50:20,740 --> 00:50:23,830
only be<font color="#CCCCCC"> perturbed by a single</font><font color="#E5E5E5"> PPS I mean</font>

1054
00:50:22,600 --> 00:50:29,080
you could<font color="#CCCCCC"> just point to whatever you</font>

1055
00:50:23,830 --> 00:50:31,900
want<font color="#E5E5E5"> and in</font><font color="#CCCCCC"> terms of design</font><font color="#E5E5E5"> this</font>

1056
00:50:29,080 --> 00:50:35,880
function was receiving only<font color="#E5E5E5"> and as a</font>

1057
00:50:31,900 --> 00:50:39,490
single SPS<font color="#E5E5E5"> and a single PPS object and</font>

1058
00:50:35,880 --> 00:50:41,850
because these<font color="#E5E5E5"> are</font><font color="#CCCCCC"> it's</font><font color="#E5E5E5"> video packets</font>

1059
00:50:39,490 --> 00:50:45,910
which are<font color="#E5E5E5"> being sent as synchronously</font>

1060
00:50:41,850 --> 00:50:48,520
<font color="#E5E5E5">this function couldn't get these ones</font><font color="#CCCCCC"> I</font>

1061
00:50:45,910 --> 00:50:51,100
mean<font color="#CCCCCC"> I mean if I was this function could</font>

1062
00:50:48,520 --> 00:50:54,820
only get the first<font color="#E5E5E5"> SPS that was being</font>

1063
00:50:51,100 --> 00:50:56,860
<font color="#CCCCCC">used because this</font><font color="#E5E5E5"> could be sent later on</font>

1064
00:50:54,820 --> 00:51:00,190
after we<font color="#E5E5E5"> already started the decoding</font>

1065
00:50:56,860 --> 00:51:03,460
and this one was<font color="#E5E5E5"> checking the Oklahoma</font>

1066
00:51:00,190 --> 00:51:07,810
format<font color="#CCCCCC"> IDC</font><font color="#E5E5E5"> field so basically what I</font>

1067
00:51:03,460 --> 00:51:10,630
could do is let's say<font color="#E5E5E5"> that we send back</font>

1068
00:51:07,810 --> 00:51:13,150
<font color="#CCCCCC">- this</font><font color="#E5E5E5"> Square and this square decodes</font>

1069
00:51:10,630 --> 00:51:16,390
the video packets<font color="#E5E5E5"> so if I'm sending a</font>

1070
00:51:13,150 --> 00:51:18,220
frame and this<font color="#E5E5E5"> is currently active and</font>

1071
00:51:16,390 --> 00:51:19,930
you<font color="#E5E5E5"> know that's the current</font><font color="#CCCCCC"> state of the</font>

1072
00:51:18,220 --> 00:51:25,089
the compression<font color="#E5E5E5"> of the state machine</font>

1073
00:51:19,930 --> 00:51:29,529
<font color="#E5E5E5">this slice could point to PPS</font><font color="#CCCCCC"> - which</font>

1074
00:51:25,090 --> 00:51:31,540
points to PPS<font color="#CCCCCC"> 1 which deactivates which</font>

1075
00:51:29,530 --> 00:51:37,300
points to a space one which deactivates

1076
00:51:31,540 --> 00:51:39,279
<font color="#CCCCCC">pacifier</font><font color="#E5E5E5"> zero so</font><font color="#CCCCCC"> again</font><font color="#E5E5E5"> I thought that a</font>

1077
00:51:37,300 --> 00:51:41,860
lot<font color="#CCCCCC"> of there could be</font><font color="#E5E5E5"> more</font><font color="#CCCCCC"> than a single</font>

1078
00:51:39,280 --> 00:51:44,620
SPS object and because this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> only</font>

1079
00:51:41,860 --> 00:51:47,380
called once and<font color="#E5E5E5"> only in the</font><font color="#CCCCCC"> beginning</font><font color="#E5E5E5"> I</font>

1080
00:51:44,620 --> 00:51:49,060
had<font color="#E5E5E5"> the following idea I'll just create</font>

1081
00:51:47,380 --> 00:51:51,850
a normal<font color="#E5E5E5"> session with media server and</font>

1082
00:51:49,060 --> 00:51:55,240
I'll send<font color="#E5E5E5"> it's a nice colorful video and</font>

1083
00:51:51,850 --> 00:51:58,569
then I'll just send it an<font color="#E5E5E5"> SBS packet</font>

1084
00:51:55,240 --> 00:52:01,120
with<font color="#CCCCCC"> soma format</font><font color="#E5E5E5"> IDC equals</font><font color="#CCCCCC"> zero so like</font>

1085
00:51:58,570 --> 00:52:03,190
hey I'm a colorful video and all of a

1086
00:52:01,120 --> 00:52:05,529
sudden<font color="#CCCCCC"> a packet which changes the entire</font>

1087
00:52:03,190 --> 00:52:06,760
video - and<font color="#E5E5E5"> one of harmonic</font><font color="#CCCCCC"> 1</font><font color="#E5E5E5"> and if you</font>

1088
00:52:05,530 --> 00:52:10,000
<font color="#E5E5E5">think about it that's it doesn't make</font>

1089
00:52:06,760 --> 00:52:11,770
any<font color="#E5E5E5"> sense but</font><font color="#CCCCCC"> standardized it's legal</font><font color="#E5E5E5"> so</font>

1090
00:52:10,000 --> 00:52:15,280
then I<font color="#E5E5E5"> could just hear</font><font color="#CCCCCC"> that the PPS</font><font color="#E5E5E5"> to</font>

1091
00:52:11,770 --> 00:52:17,259
<font color="#E5E5E5">point to this new</font><font color="#CCCCCC"> SBS</font><font color="#E5E5E5"> and then I send a</font>

1092
00:52:15,280 --> 00:52:20,380
slice which pointed to<font color="#CCCCCC"> the SPS which</font>

1093
00:52:17,260 --> 00:52:23,110
pointed<font color="#E5E5E5"> to a PPS and then finally L got</font>

1094
00:52:20,380 --> 00:52:26,290
to<font color="#CCCCCC"> the web set after two weeks</font><font color="#E5E5E5"> I found</font>

1095
00:52:23,110 --> 00:52:28,180
<font color="#E5E5E5">it I mean it took</font><font color="#CCCCCC"> me two weeks</font><font color="#E5E5E5"> from the</font>

1096
00:52:26,290 --> 00:52:31,240
moment I saw the map set to get<font color="#E5E5E5"> at this</font>

1097
00:52:28,180 --> 00:52:33,509
point which is<font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> more frustrating</font>

1098
00:52:31,240 --> 00:52:37,120
than it sounds but it was seriously and

1099
00:52:33,510 --> 00:52:40,390
I mean it was very anticipated<font color="#CCCCCC"> so again</font>

1100
00:52:37,120 --> 00:52:42,940
the<font color="#E5E5E5"> code flow I sent a normally looking</font>

1101
00:52:40,390 --> 00:52:46,359
video yeah that is how videos look<font color="#CCCCCC"> like</font>

1102
00:52:42,940 --> 00:52:48,820
if<font color="#E5E5E5"> you open them in</font><font color="#CCCCCC"> 1-0-1 editor then I</font>

1103
00:52:46,360 --> 00:52:50,770
carry the new SPS object<font color="#CCCCCC"> in</font><font color="#E5E5E5"> the new PPS</font>

1104
00:52:48,820 --> 00:52:52,840
object<font color="#E5E5E5"> with</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> pointer to</font><font color="#CCCCCC"> the SPS then a</font>

1105
00:52:50,770 --> 00:52:56,259
new idea because idea must be the first

1106
00:52:52,840 --> 00:52:58,930
slice that is used in the SPS which

1107
00:52:56,260 --> 00:53:02,230
point<font color="#CCCCCC"> the PPS to</font><font color="#E5E5E5"> the SPS</font><font color="#CCCCCC"> and so on</font>

1108
00:52:58,930 --> 00:53:05,770
finally crash let's go to Apple<font color="#E5E5E5"> and now</font>

1109
00:53:02,230 --> 00:53:08,110
this was around<font color="#CCCCCC"> blackett last year</font><font color="#E5E5E5"> and</font>

1110
00:53:05,770 --> 00:53:10,600
all<font color="#E5E5E5"> of a sudden</font><font color="#CCCCCC"> the most modern</font>

1111
00:53:08,110 --> 00:53:12,190
operating<font color="#E5E5E5"> system in the</font><font color="#CCCCCC"> world</font><font color="#E5E5E5"> it's</font>

1112
00:53:10,600 --> 00:53:16,509
always<font color="#E5E5E5"> the most operating system in the</font>

1113
00:53:12,190 --> 00:53:18,870
<font color="#CCCCCC">world went out and ok cool so I looked</font>

1114
00:53:16,510 --> 00:53:21,510
at the better<font color="#E5E5E5"> I remember it</font>

1115
00:53:18,870 --> 00:53:23,460
I was seeking<font color="#E5E5E5"> the Vegas and yeah that's</font>

1116
00:53:21,510 --> 00:53:27,150
what you do when you're sick<font color="#E5E5E5"> from the</font>

1117
00:53:23,460 --> 00:53:29,490
weather in Vegas<font color="#E5E5E5"> and suddenly it doesn't</font>

1118
00:53:27,150 --> 00:53:31,620
<font color="#CCCCCC">crash anymore and you saw the way I was</font>

1119
00:53:29,490 --> 00:53:33,870
going<font color="#CCCCCC"> through to get it crashing and I</font>

1120
00:53:31,620 --> 00:53:38,370
mean I was super disappointed that they

1121
00:53:33,870 --> 00:53:40,920
didn't crash<font color="#E5E5E5"> and so I checked age to 60</font>

1122
00:53:38,370 --> 00:53:43,950
<font color="#CCCCCC">a camel driver</font><font color="#E5E5E5"> and I saw that there was</font>

1123
00:53:40,920 --> 00:53:46,680
<font color="#CCCCCC">no apparent change in</font><font color="#E5E5E5"> the driver which</font>

1124
00:53:43,950 --> 00:53:48,810
was good because<font color="#E5E5E5"> the vulnerability was</font>

1125
00:53:46,680 --> 00:53:51,750
<font color="#E5E5E5">eventually in the camel driver and not</font>

1126
00:53:48,810 --> 00:53:54,810
in<font color="#E5E5E5"> the user mode components but</font><font color="#CCCCCC"> aged to</font>

1127
00:53:51,750 --> 00:53:56,940
<font color="#E5E5E5">65 I mean the private framework which</font>

1128
00:53:54,810 --> 00:53:59,970
<font color="#CCCCCC">said the canvas server study is changed</font>

1129
00:53:56,940 --> 00:54:02,700
the canvas surface<font color="#E5E5E5"> ID string no longer</font>

1130
00:53:59,970 --> 00:54:04,319
<font color="#CCCCCC">appears in</font><font color="#E5E5E5"> the framework and I know it</font>

1131
00:54:02,700 --> 00:54:07,140
<font color="#E5E5E5">sounds</font><font color="#CCCCCC"> way that I'm talking about</font>

1132
00:54:04,320 --> 00:54:08,790
<font color="#E5E5E5">strings in a framework but seriously</font>

1133
00:54:07,140 --> 00:54:12,660
<font color="#E5E5E5">have no idea what this</font><font color="#CCCCCC"> user ID on these</font>

1134
00:54:08,790 --> 00:54:15,540
frameworks<font color="#CCCCCC"> so</font><font color="#E5E5E5"> Apple realized that having</font>

1135
00:54:12,660 --> 00:54:19,290
<font color="#E5E5E5">this in a dictionary in an undocumented</font>

1136
00:54:15,540 --> 00:54:23,550
<font color="#CCCCCC">ich</font><font color="#E5E5E5"> chanel is a very happy way to treat</font>

1137
00:54:19,290 --> 00:54:25,620
the tile decoded videos<font color="#CCCCCC"> italic coding</font>

1138
00:54:23,550 --> 00:54:29,670
videos from normally coding so they just

1139
00:54:25,620 --> 00:54:31,650
<font color="#CCCCCC">created created a new API 204</font><font color="#E5E5E5"> decoding</font>

1140
00:54:29,670 --> 00:54:33,240
and a new API for tile<font color="#E5E5E5"> decoding if I</font>

1141
00:54:31,650 --> 00:54:35,670
remember correctly<font color="#E5E5E5"> back then</font>

1142
00:54:33,240 --> 00:54:37,500
<font color="#CCCCCC">sadly coding wasn't documented</font><font color="#E5E5E5"> yet but</font>

1143
00:54:35,670 --> 00:54:43,710
<font color="#E5E5E5">it will call the API</font><font color="#CCCCCC"> it was already</font>

1144
00:54:37,500 --> 00:54:47,160
there now<font color="#E5E5E5"> at that point</font><font color="#CCCCCC"> I just if you</font>

1145
00:54:43,710 --> 00:54:50,250
<font color="#CCCCCC">have kernel rewrite then you can use the</font>

1146
00:54:47,160 --> 00:54:52,680
bug server to to<font color="#E5E5E5"> actually debug I mean</font>

1147
00:54:50,250 --> 00:54:54,630
you can launch<font color="#E5E5E5"> the bug server and</font>

1148
00:54:52,680 --> 00:54:57,359
connect<font color="#E5E5E5"> a media server but it doesn't</font>

1149
00:54:54,630 --> 00:55:00,540
<font color="#E5E5E5">work if you do</font><font color="#CCCCCC"> it out of</font><font color="#E5E5E5"> out</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> box</font>

1150
00:54:57,360 --> 00:55:02,580
and then I went<font color="#CCCCCC"> to some all</font><font color="#E5E5E5"> dvd-video</font>

1151
00:55:00,540 --> 00:55:05,580
page which<font color="#CCCCCC"> tells</font><font color="#E5E5E5"> you that the bug server</font>

1152
00:55:02,580 --> 00:55:08,460
needed the following the following

1153
00:55:05,580 --> 00:55:10,170
entitlements it also did involved and

1154
00:55:08,460 --> 00:55:13,370
then I said maybe I'll just give the

1155
00:55:10,170 --> 00:55:15,870
same entitlements to<font color="#CCCCCC"> me the server</font><font color="#E5E5E5"> and</font>

1156
00:55:13,370 --> 00:55:19,170
then I'll try to launch the bug server

1157
00:55:15,870 --> 00:55:19,529
and attach it<font color="#CCCCCC"> to meteor server then it</font>

1158
00:55:19,170 --> 00:55:22,110
worked

1159
00:55:19,530 --> 00:55:23,730
I could debug media server<font color="#E5E5E5"> and the main</font>

1160
00:55:22,110 --> 00:55:27,930
<font color="#CCCCCC">reason I wanted to debug media server is</font>

1161
00:55:23,730 --> 00:55:30,360
<font color="#E5E5E5">first of all I wanted to go to the API</font>

1162
00:55:27,930 --> 00:55:32,629
<font color="#CCCCCC">where it's called</font><font color="#E5E5E5"> away where</font><font color="#CCCCCC"> it sent a</font>

1163
00:55:30,360 --> 00:55:34,400
request<font color="#CCCCCC"> to the driver and</font>

1164
00:55:32,630 --> 00:55:36,350
the values and<font color="#E5E5E5"> see if the</font><font color="#CCCCCC"> crush still</font>

1165
00:55:34,400 --> 00:55:39,260
happens<font color="#E5E5E5"> a second if I want to see what</font>

1166
00:55:36,350 --> 00:55:41,600
they<font color="#E5E5E5"> actually did</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the new API there</font>

1167
00:55:39,260 --> 00:55:46,010
it was just<font color="#E5E5E5"> faster debugging than using</font>

1168
00:55:41,600 --> 00:55:47,540
<font color="#E5E5E5">Iida the back then so like I said</font><font color="#CCCCCC"> they</font>

1169
00:55:46,010 --> 00:55:49,160
understood<font color="#CCCCCC"> that</font><font color="#E5E5E5"> it was a hack so they</font>

1170
00:55:47,540 --> 00:55:52,279
added<font color="#E5E5E5"> a new</font><font color="#CCCCCC"> bunch of VT tile the</font>

1171
00:55:49,160 --> 00:55:56,060
compression api's<font color="#CCCCCC"> whose debug server and</font>

1172
00:55:52,280 --> 00:56:00,860
<font color="#E5E5E5">I changed the values and it crashed</font>

1173
00:55:56,060 --> 00:56:06,110
again so what I understood<font color="#E5E5E5"> eventually is</font>

1174
00:56:00,860 --> 00:56:09,620
that<font color="#E5E5E5"> there's just</font><font color="#CCCCCC"> a new API not a</font>

1175
00:56:06,110 --> 00:56:12,350
documented one unfortunately so here

1176
00:56:09,620 --> 00:56:16,730
there is<font color="#E5E5E5"> like a 64-bit integer which</font>

1177
00:56:12,350 --> 00:56:18,799
gets the offset<font color="#E5E5E5"> X and offset Y that we</font>

1178
00:56:16,730 --> 00:56:22,640
saw in the dictionary<font color="#CCCCCC"> Civic pixel buffer</font>

1179
00:56:18,800 --> 00:56:25,970
<font color="#E5E5E5">has inside it an</font><font color="#CCCCCC"> i/o surface ID</font><font color="#E5E5E5"> if you</font>

1180
00:56:22,640 --> 00:56:28,220
creating a<font color="#E5E5E5"> CV pixel buffer with another</font>

1181
00:56:25,970 --> 00:56:33,890
surface object<font color="#E5E5E5"> so it will just use the</font>

1182
00:56:28,220 --> 00:56:36,290
<font color="#E5E5E5">same surface ID to the</font><font color="#CCCCCC"> drive oh yeah so</font>

1183
00:56:33,890 --> 00:56:38,240
then<font color="#E5E5E5"> instead of using the dictionary</font><font color="#CCCCCC"> you</font>

1184
00:56:36,290 --> 00:56:40,040
could just call<font color="#CCCCCC"> this API</font><font color="#E5E5E5"> and it would</font>

1185
00:56:38,240 --> 00:56:43,189
crush instantly but again it was not

1186
00:56:40,040 --> 00:56:47,360
<font color="#CCCCCC">mended so it did take me a while to find</font>

1187
00:56:43,190 --> 00:56:50,630
<font color="#CCCCCC">it out</font><font color="#E5E5E5"> so in terms of okay in terms of</font>

1188
00:56:47,360 --> 00:56:54,260
disclosure<font color="#CCCCCC"> I found it</font><font color="#E5E5E5"> I don't know I</font>

1189
00:56:50,630 --> 00:56:56,990
mean<font color="#E5E5E5"> there was</font><font color="#CCCCCC"> a gap between iOS better</font>

1190
00:56:54,260 --> 00:57:00,200
<font color="#E5E5E5">still you</font><font color="#CCCCCC"> know it took me a while to</font><font color="#E5E5E5"> get</font>

1191
00:56:56,990 --> 00:57:02,509
<font color="#CCCCCC">back to the research and then I reported</font>

1192
00:57:00,200 --> 00:57:04,790
a month later I will confirmed it and in

1193
00:57:02,510 --> 00:57:09,200
the<font color="#E5E5E5"> end of January</font><font color="#CCCCCC"> they deployed it to</font>

1194
00:57:04,790 --> 00:57:12,310
<font color="#E5E5E5">their devices I know that it's it might</font>

1195
00:57:09,200 --> 00:57:14,960
be a little bit old<font color="#CCCCCC"> compared</font><font color="#E5E5E5"> I mean now</font>

1196
00:57:12,310 --> 00:57:16,820
<font color="#CCCCCC">but I mean there</font><font color="#E5E5E5"> are some takeaways</font><font color="#CCCCCC"> I</font>

1197
00:57:14,960 --> 00:57:19,820
really want you guys<font color="#CCCCCC"> to take from</font><font color="#E5E5E5"> this</font>

1198
00:57:16,820 --> 00:57:22,430
representation<font color="#E5E5E5"> sometimes</font><font color="#CCCCCC"> okay</font>

1199
00:57:19,820 --> 00:57:24,770
many else<font color="#E5E5E5"> this we don't like them yeah</font>

1200
00:57:22,430 --> 00:57:27,410
<font color="#E5E5E5">and I mean I could I mean</font><font color="#CCCCCC"> I really hate</font>

1201
00:57:24,770 --> 00:57:29,180
I read quite<font color="#CCCCCC"> a few in my</font><font color="#E5E5E5"> life and it was</font>

1202
00:57:27,410 --> 00:57:31,850
never a fun thing to do<font color="#E5E5E5"> but sometimes</font>

1203
00:57:29,180 --> 00:57:33,790
<font color="#CCCCCC">the super useful</font><font color="#E5E5E5"> without</font><font color="#CCCCCC"> the manual I</font>

1204
00:57:31,850 --> 00:57:38,299
would never think about<font color="#E5E5E5"> creating a new</font>

1205
00:57:33,790 --> 00:57:39,740
<font color="#CCCCCC">SPS object so you know that's what got</font>

1206
00:57:38,300 --> 00:57:42,920
me eventually to<font color="#E5E5E5"> trigger the</font>

1207
00:57:39,740 --> 00:57:44,120
vulnerability<font color="#E5E5E5"> in some structure work the</font>

1208
00:57:42,920 --> 00:57:45,980
kernel tracing technique

1209
00:57:44,120 --> 00:57:46,430
<font color="#CCCCCC">I mean without</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> I would probably give</font>

1210
00:57:45,980 --> 00:57:50,089
up<font color="#CCCCCC"> at some</font>

1211
00:57:46,430 --> 00:57:52,279
because you have no idea<font color="#CCCCCC"> how powerful</font><font color="#E5E5E5"> I</font>

1212
00:57:50,089 --> 00:57:54,410
mean<font color="#E5E5E5"> we probably have if you ever worked</font>

1213
00:57:52,280 --> 00:57:57,500
with drivers it just<font color="#CCCCCC"> insane it you can</font>

1214
00:57:54,410 --> 00:58:00,618
<font color="#CCCCCC">debug or at least trace a code execution</font>

1215
00:57:57,500 --> 00:58:02,960
in<font color="#E5E5E5"> the device so it was working</font><font color="#CCCCCC"> even</font>

1216
00:58:00,619 --> 00:58:06,640
days or weeks<font color="#E5E5E5"> on something like that</font><font color="#CCCCCC"> if</font>

1217
00:58:02,960 --> 00:58:08,329
you can later on debug the kernel<font color="#CCCCCC"> and</font>

1218
00:58:06,640 --> 00:58:11,569
like always

1219
00:58:08,329 --> 00:58:14,839
iOS<font color="#CCCCCC"> is a</font><font color="#E5E5E5"> really good platform but it</font>

1220
00:58:11,569 --> 00:58:16,690
still has a way<font color="#E5E5E5"> to go and usually I mean</font>

1221
00:58:14,839 --> 00:58:19,369
<font color="#CCCCCC">another vulnerability</font><font color="#E5E5E5"> itself wasn't</font>

1222
00:58:16,690 --> 00:58:22,250
<font color="#CCCCCC">certainly</font><font color="#E5E5E5"> complicated but I think</font><font color="#CCCCCC"> the</font>

1223
00:58:19,369 --> 00:58:24,170
path there<font color="#CCCCCC"> was I mean I think it's</font>

1224
00:58:22,250 --> 00:58:25,849
sometimes<font color="#E5E5E5"> more interesting than an</font>

1225
00:58:24,170 --> 00:58:27,380
actual exploit I mean if I compare<font color="#E5E5E5"> it to</font>

1226
00:58:25,849 --> 00:58:29,270
<font color="#CCCCCC">my last two prior to the presentation</font>

1227
00:58:27,380 --> 00:58:32,960
<font color="#CCCCCC">that</font><font color="#E5E5E5"> it last year this was much more</font>

1228
00:58:29,270 --> 00:58:36,230
<font color="#E5E5E5">complicated</font><font color="#CCCCCC"> so we have is we have like</font>

1229
00:58:32,960 --> 00:58:37,940
35 seconds for Q&A<font color="#CCCCCC"> so</font><font color="#E5E5E5"> thank you I hope</font>

1230
00:58:36,230 --> 00:58:40,359
you<font color="#E5E5E5"> enjoy the</font><font color="#CCCCCC"> presentation</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> know it</font>

1231
00:58:37,940 --> 00:58:40,359
wasn't easy

1232
00:58:41,859 --> 00:58:45,890
thank you very<font color="#E5E5E5"> much</font><font color="#CCCCCC"> Adam for a very</font>

1233
00:58:44,270 --> 00:58:48,410
interesting talk<font color="#CCCCCC"> and also</font><font color="#E5E5E5"> for being the</font>

1234
00:58:45,890 --> 00:58:52,700
speaker<font color="#E5E5E5"> who comes closest to</font><font color="#CCCCCC"> the time</font>

1235
00:58:48,410 --> 00:58:54,470
<font color="#CCCCCC">line thank you very much</font>

1236
00:58:52,700 --> 00:58:56,720
perfect timing as well<font color="#E5E5E5"> because this</font>

1237
00:58:54,470 --> 00:58:58,459
breaks is for lunch<font color="#CCCCCC"> we have an hour for</font>

1238
00:58:56,720 --> 00:59:02,029
lunch<font color="#CCCCCC"> and we will see you back here for</font>

1239
00:58:58,460 --> 00:59:03,589
lunch<font color="#E5E5E5"> I'm available on Twitter and if</font>

1240
00:59:02,030 --> 00:59:06,470
you have any question you<font color="#CCCCCC"> can catch me</font>

1241
00:59:03,589 --> 00:59:08,690
<font color="#CCCCCC">later we'll be</font><font color="#E5E5E5"> happy to answer yep</font><font color="#CCCCCC"> any</font>

1242
00:59:06,470 --> 00:59:10,939
questions as well you<font color="#CCCCCC"> also be there at</font>

1243
00:59:08,690 --> 00:59:14,559
<font color="#E5E5E5">lunch - yeah so</font><font color="#CCCCCC"> versus free to join</font><font color="#E5E5E5"> it</font>

1244
00:59:10,940 --> 00:59:14,559
and<font color="#E5E5E5"> join</font><font color="#CCCCCC"> you thank</font><font color="#E5E5E5"> you thank you</font>

