1
00:00:09,610 --> 00:00:14,469
thanks a lot<font color="#CCCCCC"> so so</font><font color="#E5E5E5"> this conference was</font>

2
00:00:12,910 --> 00:00:17,200
<font color="#E5E5E5">always been memorable for</font><font color="#CCCCCC"> me</font><font color="#E5E5E5"> this is my</font>

3
00:00:14,469 --> 00:00:18,939
third<font color="#CCCCCC"> time here in</font><font color="#E5E5E5"> three years and every</font>

4
00:00:17,200 --> 00:00:20,470
time<font color="#CCCCCC"> I've come here Lord has changed</font>

5
00:00:18,939 --> 00:00:22,509
<font color="#E5E5E5">personally and professionally in my life</font>

6
00:00:20,470 --> 00:00:24,160
so first time we were<font color="#E5E5E5"> here we were</font><font color="#CCCCCC"> a</font>

7
00:00:22,509 --> 00:00:26,050
small<font color="#CCCCCC"> startup getting started you know</font>

8
00:00:24,160 --> 00:00:29,080
from Singapore<font color="#E5E5E5"> last year we were</font>

9
00:00:26,050 --> 00:00:30,910
sponsors<font color="#E5E5E5"> and this year as I speak in</font>

10
00:00:29,080 --> 00:00:33,190
front of<font color="#E5E5E5"> you as you can see we got</font>

11
00:00:30,910 --> 00:00:36,220
acquired<font color="#CCCCCC"> by CA</font><font color="#E5E5E5"> Technologies we part of</font>

12
00:00:33,190 --> 00:00:37,900
<font color="#CCCCCC">DCA where a code business unit but what</font>

13
00:00:36,220 --> 00:00:40,269
I didn't realize last year was<font color="#E5E5E5"> like what</font>

14
00:00:37,900 --> 00:00:40,900
would change<font color="#E5E5E5"> personally is like as I</font>

15
00:00:40,269 --> 00:00:42,670
speak today

16
00:00:40,900 --> 00:00:44,260
I didn't<font color="#E5E5E5"> realize my one and a half year</font>

17
00:00:42,670 --> 00:00:46,960
old son would be watching<font color="#E5E5E5"> the</font><font color="#CCCCCC"> live</font>

18
00:00:44,260 --> 00:00:50,640
stream from<font color="#CCCCCC"> homes so unheard if</font><font color="#E5E5E5"> you are</font>

19
00:00:46,960 --> 00:00:55,299
looking at me it's<font color="#CCCCCC"> I from that alright</font>

20
00:00:50,640 --> 00:00:57,549
<font color="#CCCCCC">that's it</font><font color="#E5E5E5"> let's get started</font><font color="#CCCCCC"> so</font><font color="#E5E5E5"> this is</font>

21
00:00:55,299 --> 00:00:59,409
the outline<font color="#CCCCCC"> for my talk today at first I</font>

22
00:00:57,549 --> 00:01:02,170
would like<font color="#E5E5E5"> to</font><font color="#CCCCCC"> describe a bit about the</font>

23
00:00:59,409 --> 00:01:03,970
<font color="#E5E5E5">problem space so why is</font><font color="#CCCCCC"> it</font><font color="#E5E5E5"> that we are</font>

24
00:01:02,170 --> 00:01:06,729
interested in<font color="#E5E5E5"> you know third party</font>

25
00:01:03,970 --> 00:01:08,560
components<font color="#E5E5E5"> or open source libraries then</font>

26
00:01:06,729 --> 00:01:10,750
I'll talk about what do I mean by

27
00:01:08,560 --> 00:01:13,119
unidentified security issues so if you

28
00:01:10,750 --> 00:01:14,380
look at the<font color="#E5E5E5"> title</font><font color="#CCCCCC"> I do not use the word</font>

29
00:01:13,119 --> 00:01:16,390
like finding or discovering

30
00:01:14,380 --> 00:01:18,850
vulnerabilities this<font color="#CCCCCC"> talk</font><font color="#E5E5E5"> is not about</font>

31
00:01:16,390 --> 00:01:21,100
<font color="#CCCCCC">finding new vulnerabilities it's about</font>

32
00:01:18,850 --> 00:01:22,630
<font color="#E5E5E5">identifying those which are known but</font>

33
00:01:21,100 --> 00:01:24,820
are<font color="#E5E5E5"> hard to identify because we are</font>

34
00:01:22,630 --> 00:01:26,259
perceived through a lot of<font color="#CCCCCC"> data</font><font color="#E5E5E5"> then</font>

35
00:01:24,820 --> 00:01:28,539
we'll talk<font color="#E5E5E5"> about how machine learning</font>

36
00:01:26,260 --> 00:01:30,250
<font color="#E5E5E5">can help in this respect and I'll share</font>

37
00:01:28,540 --> 00:01:31,480
<font color="#E5E5E5">with you</font><font color="#CCCCCC"> the details of the machine</font>

38
00:01:30,250 --> 00:01:33,850
learning work which we have done<font color="#E5E5E5"> at</font>

39
00:01:31,480 --> 00:01:38,080
better code and<font color="#CCCCCC"> talked</font><font color="#E5E5E5"> about briefly the</font>

40
00:01:33,850 --> 00:01:42,070
results we<font color="#E5E5E5"> have so let's get started</font><font color="#CCCCCC"> if</font>

41
00:01:38,080 --> 00:01:43,630
you look at the growth in third-party

42
00:01:42,070 --> 00:01:46,029
<font color="#E5E5E5">components and libraries over the last</font>

43
00:01:43,630 --> 00:01:50,199
five<font color="#CCCCCC"> years it's been</font><font color="#E5E5E5"> truly exponential</font>

44
00:01:46,030 --> 00:01:51,909
so I think this data<font color="#E5E5E5"> is from till 2017</font>

45
00:01:50,200 --> 00:01:54,760
<font color="#CCCCCC">so you can clearly see there</font><font color="#E5E5E5"> are over</font>

46
00:01:51,909 --> 00:01:57,010
million different unique libraries or

47
00:01:54,760 --> 00:01:59,350
components so this<font color="#E5E5E5"> is summed over from</font>

48
00:01:57,010 --> 00:02:03,400
various sources like NPM<font color="#E5E5E5"> Jas</font><font color="#CCCCCC"> Ruby gems</font>

49
00:01:59,350 --> 00:02:06,699
maven central<font color="#CCCCCC"> composer</font><font color="#E5E5E5"> pi PI etc right</font>

50
00:02:03,400 --> 00:02:08,679
and if you extrapolate a little<font color="#CCCCCC"> bit if</font>

51
00:02:06,700 --> 00:02:13,629
<font color="#E5E5E5">you and consider all the unique versions</font>

52
00:02:08,679 --> 00:02:16,120
of the components the it's<font color="#E5E5E5"> really</font>

53
00:02:13,629 --> 00:02:17,620
<font color="#CCCCCC">staggering to see like in</font><font color="#E5E5E5"> the next</font><font color="#CCCCCC"> ten</font>

54
00:02:16,120 --> 00:02:19,750
years how many libraries<font color="#CCCCCC"> or how many</font>

55
00:02:17,620 --> 00:02:21,130
components<font color="#E5E5E5"> we can have it's also</font>

56
00:02:19,750 --> 00:02:23,319
<font color="#CCCCCC">compounded by the fact in certain</font>

57
00:02:21,130 --> 00:02:25,030
<font color="#CCCCCC">languages like say example</font><font color="#E5E5E5"> go line</font>

58
00:02:23,319 --> 00:02:27,099
every single<font color="#CCCCCC"> commit</font><font color="#E5E5E5"> that someone makes</font>

59
00:02:25,030 --> 00:02:28,480
into a repository<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be considered you</font>

60
00:02:27,099 --> 00:02:31,659
know<font color="#E5E5E5"> a unique version because you could</font>

61
00:02:28,480 --> 00:02:33,760
include that in<font color="#CCCCCC"> your project</font><font color="#E5E5E5"> right so</font>

62
00:02:31,659 --> 00:02:36,790
<font color="#CCCCCC">that this has been</font><font color="#E5E5E5"> happening</font><font color="#CCCCCC"> if you look</font>

63
00:02:33,760 --> 00:02:38,230
at individually<font color="#E5E5E5"> in applications</font><font color="#CCCCCC"> the</font>

64
00:02:36,790 --> 00:02:40,150
complexity of the applications

65
00:02:38,230 --> 00:02:42,810
themselves have exploded<font color="#CCCCCC"> so this is data</font>

66
00:02:40,150 --> 00:02:45,819
we collected from customer scans<font color="#CCCCCC"> at</font>

67
00:02:42,810 --> 00:02:48,430
<font color="#E5E5E5">source clear so if you look at on</font>

68
00:02:45,819 --> 00:02:51,879
average<font color="#E5E5E5"> in one Java project if</font><font color="#CCCCCC"> you add</font>

69
00:02:48,430 --> 00:02:54,189
one direct library<font color="#E5E5E5"> that in turn depends</font>

70
00:02:51,879 --> 00:02:55,689
<font color="#E5E5E5">on</font><font color="#CCCCCC"> for others right</font><font color="#E5E5E5"> and in certain</font>

71
00:02:54,189 --> 00:02:56,980
ecosystems there is a difference<font color="#E5E5E5"> for</font>

72
00:02:55,689 --> 00:02:58,629
example<font color="#CCCCCC"> in</font><font color="#E5E5E5"> JavaScript this problems</font>

73
00:02:56,980 --> 00:03:01,659
really compounded as you probably know

74
00:02:58,629 --> 00:03:03,730
<font color="#E5E5E5">so every single</font><font color="#CCCCCC"> JavaScript library you</font>

75
00:03:01,659 --> 00:03:05,798
add to node.js project on average<font color="#E5E5E5"> nine</font>

76
00:03:03,730 --> 00:03:06,790
others are added<font color="#E5E5E5"> right now if you're</font>

77
00:03:05,799 --> 00:03:09,010
thinking from<font color="#E5E5E5"> the</font><font color="#CCCCCC"> perspective of</font>

78
00:03:06,790 --> 00:03:11,439
security your attack surface is

79
00:03:09,010 --> 00:03:17,679
increased<font color="#CCCCCC"> every time you add a single</font>

80
00:03:11,439 --> 00:03:20,319
<font color="#E5E5E5">library the way we</font><font color="#CCCCCC"> built software has</font>

81
00:03:17,680 --> 00:03:22,510
changed so today if you start a typical

82
00:03:20,319 --> 00:03:24,548
application<font color="#CCCCCC"> or a typical web app you</font>

83
00:03:22,510 --> 00:03:26,620
start off with<font color="#CCCCCC"> some basic open</font><font color="#E5E5E5"> source</font>

84
00:03:24,549 --> 00:03:28,000
code so you<font color="#E5E5E5"> have some frameworks you</font>

85
00:03:26,620 --> 00:03:30,310
have the languages you have runtimes

86
00:03:28,000 --> 00:03:32,019
<font color="#CCCCCC">then you write very little custom code</font>

87
00:03:30,310 --> 00:03:34,239
or business logic<font color="#E5E5E5"> or first party code</font>

88
00:03:32,019 --> 00:03:36,009
and then you<font color="#E5E5E5"> include a bunch of</font>

89
00:03:34,239 --> 00:03:38,169
dependencies<font color="#CCCCCC"> of components through which</font>

90
00:03:36,009 --> 00:03:39,849
you assemble your<font color="#E5E5E5"> application right so</font>

91
00:03:38,169 --> 00:03:41,859
if<font color="#E5E5E5"> you're thinking in</font><font color="#CCCCCC"> terms of security</font>

92
00:03:39,849 --> 00:03:44,828
the attack<font color="#E5E5E5"> surface of the application</font>

93
00:03:41,859 --> 00:03:46,840
more than<font color="#CCCCCC"> 90%</font><font color="#E5E5E5"> actually resides in</font><font color="#CCCCCC"> third</font>

94
00:03:44,829 --> 00:03:49,030
<font color="#CCCCCC">party</font><font color="#E5E5E5"> code most of which is open source</font>

95
00:03:46,840 --> 00:03:52,180
<font color="#E5E5E5">compared to first party code code that</font>

96
00:03:49,030 --> 00:03:54,340
you own or you wrote<font color="#E5E5E5"> yourself</font><font color="#CCCCCC"> and very</font>

97
00:03:52,180 --> 00:03:56,229
recently<font color="#CCCCCC"> you must have heard about</font><font color="#E5E5E5"> the</font>

98
00:03:54,340 --> 00:03:59,680
latest<font color="#E5E5E5"> issue in Apache struts</font><font color="#CCCCCC"> which is</font>

99
00:03:56,229 --> 00:04:01,750
another<font color="#E5E5E5"> very popular</font><font color="#CCCCCC"> Java library last</font>

100
00:03:59,680 --> 00:04:03,189
year<font color="#E5E5E5"> an issue in Apache</font><font color="#CCCCCC"> struts</font><font color="#E5E5E5"> the</font>

101
00:04:01,750 --> 00:04:04,720
remote code execution was responsible

102
00:04:03,189 --> 00:04:06,759
for<font color="#E5E5E5"> the</font><font color="#CCCCCC"> largest data breach in history</font>

103
00:04:04,720 --> 00:04:08,639
at<font color="#CCCCCC"> equifax</font><font color="#E5E5E5"> right so this</font><font color="#CCCCCC"> is a real</font>

104
00:04:06,759 --> 00:04:10,750
<font color="#CCCCCC">problem</font><font color="#E5E5E5"> and the problem</font><font color="#CCCCCC"> is that</font>

105
00:04:08,639 --> 00:04:12,969
developers<font color="#CCCCCC"> are building applications</font>

106
00:04:10,750 --> 00:04:14,519
<font color="#E5E5E5">using code which they don't own and</font>

107
00:04:12,969 --> 00:04:16,509
<font color="#E5E5E5">control so how</font><font color="#CCCCCC"> can we help them identify</font>

108
00:04:14,519 --> 00:04:20,199
<font color="#E5E5E5">the</font><font color="#CCCCCC"> wonder abilities or issues that</font>

109
00:04:16,509 --> 00:04:21,849
<font color="#CCCCCC">exist in those</font><font color="#E5E5E5"> applications right so now</font>

110
00:04:20,199 --> 00:04:24,430
<font color="#CCCCCC">I'll</font><font color="#E5E5E5"> try</font><font color="#CCCCCC"> to talk about</font><font color="#E5E5E5"> what</font><font color="#CCCCCC"> I mean</font><font color="#E5E5E5"> by</font>

111
00:04:21,849 --> 00:04:26,080
<font color="#E5E5E5">unidentified issues so so if you think</font>

112
00:04:24,430 --> 00:04:27,699
<font color="#CCCCCC">about this problem</font><font color="#E5E5E5"> and</font><font color="#CCCCCC"> you have an</font>

113
00:04:26,080 --> 00:04:29,080
<font color="#CCCCCC">application that</font><font color="#E5E5E5"> you included a library</font>

114
00:04:27,699 --> 00:04:30,580
and<font color="#E5E5E5"> you want to know whether there's an</font>

115
00:04:29,080 --> 00:04:32,289
existing<font color="#E5E5E5"> issue that is there in the</font>

116
00:04:30,580 --> 00:04:33,699
<font color="#CCCCCC">library</font><font color="#E5E5E5"> so there are</font><font color="#CCCCCC"> some</font><font color="#E5E5E5"> places you</font>

117
00:04:32,289 --> 00:04:34,990
would go ahead<font color="#E5E5E5"> and</font><font color="#CCCCCC"> try and find these</font>

118
00:04:33,699 --> 00:04:36,729
issues right so you have<font color="#E5E5E5"> the</font><font color="#CCCCCC"> National</font>

119
00:04:34,990 --> 00:04:38,949
<font color="#CCCCCC">wonder bilities database which publish</font>

120
00:04:36,729 --> 00:04:40,839
CVS<font color="#E5E5E5"> you have several vendors they</font>

121
00:04:38,949 --> 00:04:43,210
<font color="#E5E5E5">publish their own</font><font color="#CCCCCC"> obviously so they</font>

122
00:04:40,839 --> 00:04:44,559
would have<font color="#E5E5E5"> like okay I'm spring or I'm</font>

123
00:04:43,210 --> 00:04:45,789
an Apache<font color="#CCCCCC"> project these are the</font><font color="#E5E5E5"> one</font>

124
00:04:44,559 --> 00:04:47,589
durability<font color="#CCCCCC"> zai fixed in</font><font color="#E5E5E5"> this</font><font color="#CCCCCC"> version</font>

125
00:04:45,789 --> 00:04:49,628
please go ahead<font color="#E5E5E5"> and</font><font color="#CCCCCC"> upgrade or there are</font>

126
00:04:47,589 --> 00:04:51,610
<font color="#CCCCCC">certain mailing lists you</font><font color="#E5E5E5"> can join</font><font color="#CCCCCC"> buk</font>

127
00:04:49,629 --> 00:04:54,389
<font color="#E5E5E5">racks full disclosure etc and you would</font>

128
00:04:51,610 --> 00:04:58,089
know<font color="#E5E5E5"> the known vulnerabilities right</font>

129
00:04:54,389 --> 00:04:59,650
however<font color="#E5E5E5"> how often do you see a</font>

130
00:04:58,089 --> 00:05:02,139
<font color="#E5E5E5">JavaScript one double D disclosed</font>

131
00:04:59,650 --> 00:05:03,698
through<font color="#CCCCCC"> nvd</font><font color="#E5E5E5"> right so certain languages</font>

132
00:05:02,139 --> 00:05:05,559
and certainly<font color="#CCCCCC"> co systems and open-source</font>

133
00:05:03,699 --> 00:05:08,650
communities do not<font color="#E5E5E5"> follow for whatever</font>

134
00:05:05,559 --> 00:05:12,159
reason<font color="#E5E5E5"> the process that has been used in</font>

135
00:05:08,650 --> 00:05:13,808
the past<font color="#CCCCCC"> to disclose</font><font color="#E5E5E5"> these issues they</font>

136
00:05:12,159 --> 00:05:17,259
go<font color="#E5E5E5"> ahead fix it silently</font><font color="#CCCCCC"> and then move</font>

137
00:05:13,809 --> 00:05:19,059
on<font color="#E5E5E5"> so many issues are</font><font color="#CCCCCC"> often not reported</font>

138
00:05:17,259 --> 00:05:21,430
or publicly mentioned or disclosed in

139
00:05:19,059 --> 00:05:24,309
this manner<font color="#E5E5E5"> even if those issues are</font>

140
00:05:21,430 --> 00:05:27,729
<font color="#E5E5E5">publicly disclosed it is</font><font color="#CCCCCC"> often possible</font>

141
00:05:24,309 --> 00:05:29,319
to<font color="#E5E5E5"> identify them weeks in advance</font><font color="#CCCCCC"> if you</font>

142
00:05:27,729 --> 00:05:31,688
track some of<font color="#E5E5E5"> the other sources</font><font color="#CCCCCC"> of this</font>

143
00:05:29,319 --> 00:05:34,089
information<font color="#CCCCCC"> so all these libraries that</font>

144
00:05:31,689 --> 00:05:35,620
we<font color="#E5E5E5"> talk about most of them have source</font>

145
00:05:34,089 --> 00:05:37,479
control management systems as a public

146
00:05:35,620 --> 00:05:39,460
<font color="#E5E5E5">like they have their code on github</font><font color="#CCCCCC"> you</font>

147
00:05:37,479 --> 00:05:41,919
can<font color="#E5E5E5"> look at the commit logs you can look</font>

148
00:05:39,460 --> 00:05:44,830
at things<font color="#CCCCCC"> like oh I fix this</font><font color="#E5E5E5"> CSRF issue</font>

149
00:05:41,919 --> 00:05:46,180
<font color="#E5E5E5">you can look at bug reports you can look</font>

150
00:05:44,830 --> 00:05:48,789
at change logs and you can look<font color="#E5E5E5"> at pull</font>

151
00:05:46,180 --> 00:05:52,149
requests so at<font color="#E5E5E5"> that</font><font color="#CCCCCC"> time when we did</font>

152
00:05:48,789 --> 00:05:54,639
<font color="#E5E5E5">this analysis we</font><font color="#CCCCCC"> looked at collection of</font>

153
00:05:52,149 --> 00:05:56,740
CVS we had in our system and<font color="#E5E5E5"> for</font><font color="#CCCCCC"> each</font>

154
00:05:54,639 --> 00:05:59,080
<font color="#CCCCCC">one of them we tried to</font><font color="#E5E5E5"> figure</font><font color="#CCCCCC"> out what</font>

155
00:05:56,740 --> 00:06:00,610
was<font color="#E5E5E5"> the first possible date if we had</font>

156
00:05:59,080 --> 00:06:02,859
access<font color="#E5E5E5"> to that data we would be able</font><font color="#CCCCCC"> to</font>

157
00:06:00,610 --> 00:06:05,229
<font color="#CCCCCC">identify the same issue</font><font color="#E5E5E5"> right and this</font>

158
00:06:02,860 --> 00:06:06,330
is<font color="#E5E5E5"> the number of days on</font><font color="#CCCCCC"> average a</font>

159
00:06:05,229 --> 00:06:08,919
<font color="#E5E5E5">wonder bility could have been identified</font>

160
00:06:06,330 --> 00:06:11,289
<font color="#CCCCCC">had we</font><font color="#E5E5E5"> been tracking for example the</font>

161
00:06:08,919 --> 00:06:13,808
commit messages<font color="#E5E5E5"> github issues pull</font>

162
00:06:11,289 --> 00:06:15,729
<font color="#E5E5E5">requests or</font><font color="#CCCCCC"> be bugzilla bug reports or</font>

163
00:06:13,809 --> 00:06:18,909
<font color="#CCCCCC">jury tickets so you see it's on average</font>

164
00:06:15,729 --> 00:06:21,370
between 20<font color="#CCCCCC"> to 120 days</font><font color="#E5E5E5"> ahead of</font><font color="#CCCCCC"> time</font><font color="#E5E5E5"> you</font>

165
00:06:18,909 --> 00:06:23,438
could identify the<font color="#E5E5E5"> same issue before</font><font color="#CCCCCC"> it</font>

166
00:06:21,370 --> 00:06:25,629
went through the<font color="#CCCCCC"> CV process and was</font>

167
00:06:23,439 --> 00:06:29,860
published on<font color="#CCCCCC"> nvd right so this gave us</font>

168
00:06:25,629 --> 00:06:30,969
assurance<font color="#E5E5E5"> like there is actually if we</font>

169
00:06:29,860 --> 00:06:32,919
could figure out and solve this problem

170
00:06:30,969 --> 00:06:36,490
<font color="#CCCCCC">we could</font><font color="#E5E5E5"> help our customers identify</font>

171
00:06:32,919 --> 00:06:40,389
<font color="#E5E5E5">known issues much in advance</font><font color="#CCCCCC"> then they</font>

172
00:06:36,490 --> 00:06:42,520
would be published on<font color="#CCCCCC"> nvd so with that</font>

173
00:06:40,389 --> 00:06:45,099
in mind<font color="#E5E5E5"> we built a lot of tooling around</font>

174
00:06:42,520 --> 00:06:46,930
this process so I'll just<font color="#E5E5E5"> describe a</font>

175
00:06:45,099 --> 00:06:49,089
little<font color="#E5E5E5"> bit about our internal tool call</font>

176
00:06:46,930 --> 00:06:50,620
whopper and then I'll focus on<font color="#E5E5E5"> the part</font>

177
00:06:49,089 --> 00:06:51,699
which<font color="#CCCCCC"> I'll</font><font color="#E5E5E5"> not</font><font color="#CCCCCC"> talk</font><font color="#E5E5E5"> about in this</font>

178
00:06:50,620 --> 00:06:54,550
presentation which is<font color="#CCCCCC"> the machine</font>

179
00:06:51,699 --> 00:06:56,220
<font color="#CCCCCC">learning part so we have some</font><font color="#E5E5E5"> crawlers</font>

180
00:06:54,550 --> 00:06:59,229
which actually scan all of<font color="#CCCCCC"> these things</font>

181
00:06:56,220 --> 00:07:01,660
get<font color="#E5E5E5"> the latest</font><font color="#CCCCCC"> jeredy</font><font color="#E5E5E5"> gates or commit</font>

182
00:06:59,229 --> 00:07:04,000
<font color="#E5E5E5">messages etc</font><font color="#CCCCCC"> pushed through a workflow</font>

183
00:07:01,660 --> 00:07:05,470
<font color="#E5E5E5">engine where humans actually take a look</font>

184
00:07:04,000 --> 00:07:06,850
at it so when they look at a research

185
00:07:05,470 --> 00:07:08,650
item that comes<font color="#E5E5E5"> through here they're</font>

186
00:07:06,850 --> 00:07:11,110
trying<font color="#CCCCCC"> to</font><font color="#E5E5E5"> figure out given</font><font color="#CCCCCC"> this bug</font>

187
00:07:08,650 --> 00:07:13,000
report<font color="#CCCCCC"> is it likely to</font><font color="#E5E5E5"> be related</font><font color="#CCCCCC"> to a-1</font>

188
00:07:11,110 --> 00:07:15,040
durability or not<font color="#E5E5E5"> or given this commit</font>

189
00:07:13,000 --> 00:07:17,560
message<font color="#CCCCCC"> is it likely to</font><font color="#E5E5E5"> be related to</font>

190
00:07:15,040 --> 00:07:19,300
<font color="#CCCCCC">a-1 durability and so on right so</font>

191
00:07:17,560 --> 00:07:21,160
<font color="#CCCCCC">initially we started it there was no</font>

192
00:07:19,300 --> 00:07:22,479
machine<font color="#E5E5E5"> learning piece</font><font color="#CCCCCC"> so we actually</font>

193
00:07:21,160 --> 00:07:24,090
<font color="#CCCCCC">started all of</font><font color="#E5E5E5"> this and we started</font>

194
00:07:22,479 --> 00:07:27,340
manually<font color="#CCCCCC"> trashing and</font><font color="#E5E5E5"> labeling the data</font>

195
00:07:24,090 --> 00:07:29,138
<font color="#CCCCCC">but then at</font><font color="#E5E5E5"> some point we realized or</font>

196
00:07:27,340 --> 00:07:31,869
when we had enough label<font color="#E5E5E5"> data we could</font>

197
00:07:29,139 --> 00:07:36,370
go<font color="#CCCCCC"> ahead</font><font color="#E5E5E5"> and build our models</font><font color="#CCCCCC"> so that's</font>

198
00:07:31,870 --> 00:07:39,100
the context in<font color="#CCCCCC"> which</font><font color="#E5E5E5"> we operate so</font><font color="#CCCCCC"> when</font>

199
00:07:36,370 --> 00:07:40,539
we<font color="#E5E5E5"> were looking</font><font color="#CCCCCC"> to you know</font><font color="#E5E5E5"> how to do</font>

200
00:07:39,100 --> 00:07:41,979
machine<font color="#CCCCCC"> learning for identifying</font><font color="#E5E5E5"> these</font>

201
00:07:40,539 --> 00:07:43,810
vulnerabilities<font color="#E5E5E5"> so my background is</font><font color="#CCCCCC"> not</font>

202
00:07:41,979 --> 00:07:45,520
<font color="#E5E5E5">in machine learning so there's a very</font>

203
00:07:43,810 --> 00:07:48,100
good<font color="#E5E5E5"> quote by Martin syncovich who's a</font>

204
00:07:45,520 --> 00:07:49,810
engineer at Google<font color="#E5E5E5"> published his power</font>

205
00:07:48,100 --> 00:07:51,340
of best<font color="#E5E5E5"> practices and</font><font color="#CCCCCC"> ML rules of</font>

206
00:07:49,810 --> 00:07:52,870
machine learning<font color="#CCCCCC"> so he said like do</font>

207
00:07:51,340 --> 00:07:54,580
machine learning like the<font color="#E5E5E5"> great engineer</font>

208
00:07:52,870 --> 00:07:56,470
you are<font color="#E5E5E5"> and not like the great machine</font>

209
00:07:54,580 --> 00:07:57,880
learning expert you want right<font color="#CCCCCC"> so what</font>

210
00:07:56,470 --> 00:07:59,470
does<font color="#E5E5E5"> it mean</font><font color="#CCCCCC"> so instead of</font><font color="#E5E5E5"> actually</font>

211
00:07:57,880 --> 00:08:01,630
trying<font color="#E5E5E5"> to figure</font><font color="#CCCCCC"> out the best algorithm</font>

212
00:07:59,470 --> 00:08:03,550
or<font color="#E5E5E5"> the best new thing or new approach</font>

213
00:08:01,630 --> 00:08:05,680
that you could take try and see how much

214
00:08:03,550 --> 00:08:07,900
of<font color="#E5E5E5"> it you can automate and how much</font><font color="#CCCCCC"> of</font>

215
00:08:05,680 --> 00:08:09,880
it<font color="#CCCCCC"> you can get</font><font color="#E5E5E5"> away with by using things</font>

216
00:08:07,900 --> 00:08:12,638
which are known and easy to understand

217
00:08:09,880 --> 00:08:15,639
right<font color="#CCCCCC"> so for</font><font color="#E5E5E5"> us what it</font><font color="#CCCCCC"> means is for</font>

218
00:08:12,639 --> 00:08:17,560
each<font color="#CCCCCC"> of these sources</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> train a smart</font>

219
00:08:15,639 --> 00:08:19,300
<font color="#E5E5E5">one durability identifier which is for</font>

220
00:08:17,560 --> 00:08:20,949
each<font color="#CCCCCC"> sources we train a separate</font><font color="#E5E5E5"> machine</font>

221
00:08:19,300 --> 00:08:23,680
learning model which is trying<font color="#E5E5E5"> to do</font>

222
00:08:20,949 --> 00:08:25,389
<font color="#E5E5E5">binary classification so for commits</font>

223
00:08:23,680 --> 00:08:27,490
<font color="#E5E5E5">it's based on the commit messages so</font>

224
00:08:25,389 --> 00:08:29,349
each message comes in we try<font color="#CCCCCC"> to do a</font>

225
00:08:27,490 --> 00:08:31,300
prediction<font color="#CCCCCC"> and see whether</font><font color="#E5E5E5"> this message</font>

226
00:08:29,349 --> 00:08:33,069
is related to a<font color="#E5E5E5"> vulnerability or not</font>

227
00:08:31,300 --> 00:08:37,089
<font color="#E5E5E5">same goes for all</font><font color="#CCCCCC"> of these individual</font>

228
00:08:33,070 --> 00:08:39,400
sources of a<font color="#E5E5E5"> pipeline is very simple so</font>

229
00:08:37,089 --> 00:08:41,169
we start with<font color="#E5E5E5"> some training data</font><font color="#CCCCCC"> that we</font>

230
00:08:39,400 --> 00:08:43,659
have because we<font color="#E5E5E5"> were doing it manually</font>

231
00:08:41,169 --> 00:08:46,240
<font color="#E5E5E5">then we train it we already have some</font>

232
00:08:43,659 --> 00:08:47,709
<font color="#E5E5E5">fixed notion in mind of</font><font color="#CCCCCC"> how much</font>

233
00:08:46,240 --> 00:08:48,580
<font color="#E5E5E5">accuracy we want and I'll talk about</font>

234
00:08:47,709 --> 00:08:51,939
<font color="#E5E5E5">that in</font><font color="#CCCCCC"> a minute</font>

235
00:08:48,580 --> 00:08:53,740
once we train and test<font color="#E5E5E5"> it and validate</font>

236
00:08:51,940 --> 00:08:55,000
the<font color="#E5E5E5"> modeling production if it made</font>

237
00:08:53,740 --> 00:08:57,070
several expectations we would<font color="#E5E5E5"> deploy</font>

238
00:08:55,000 --> 00:08:59,290
otherwise we'll go back in and<font color="#CCCCCC"> continue</font>

239
00:08:57,070 --> 00:09:00,730
this<font color="#E5E5E5"> process once the model</font><font color="#CCCCCC"> is deployed</font>

240
00:08:59,290 --> 00:09:02,680
in production<font color="#E5E5E5"> we continue collecting the</font>

241
00:09:00,730 --> 00:09:04,600
data<font color="#CCCCCC"> so based on</font><font color="#E5E5E5"> the predictions and</font>

242
00:09:02,680 --> 00:09:07,089
weekly we retrain the models

243
00:09:04,600 --> 00:09:08,290
<font color="#CCCCCC">to generate better and if there is an</font>

244
00:09:07,089 --> 00:09:10,000
<font color="#E5E5E5">improvement in the process</font><font color="#CCCCCC"> we would</font>

245
00:09:08,290 --> 00:09:13,719
actually<font color="#E5E5E5"> deploy the new model so that's</font>

246
00:09:10,000 --> 00:09:17,860
gonna be<font color="#E5E5E5"> overview of our pipeline so</font>

247
00:09:13,720 --> 00:09:19,930
<font color="#E5E5E5">initially first observation we</font><font color="#CCCCCC"> made here</font>

248
00:09:17,860 --> 00:09:21,339
<font color="#E5E5E5">was that you</font><font color="#CCCCCC"> really have</font><font color="#E5E5E5"> to use some</font>

249
00:09:19,930 --> 00:09:22,959
filtering before you can<font color="#CCCCCC"> even start with</font>

250
00:09:21,339 --> 00:09:26,470
machine learning<font color="#CCCCCC"> and the reason for that</font>

251
00:09:22,959 --> 00:09:28,479
is in our<font color="#CCCCCC"> data</font><font color="#E5E5E5"> set of around 2000 so</font>

252
00:09:26,470 --> 00:09:31,779
github projects there were over<font color="#E5E5E5"> three</font>

253
00:09:28,480 --> 00:09:32,980
million<font color="#E5E5E5"> commits and less than three</font>

254
00:09:31,779 --> 00:09:34,630
<font color="#E5E5E5">thousand of them were</font><font color="#CCCCCC"> actually</font><font color="#E5E5E5"> wonder</font>

255
00:09:32,980 --> 00:09:35,889
bility related so if you try to do

256
00:09:34,630 --> 00:09:38,529
machine learning with that we<font color="#E5E5E5"> are doing</font>

257
00:09:35,889 --> 00:09:40,329
<font color="#E5E5E5">binary classification you can always</font>

258
00:09:38,529 --> 00:09:42,009
<font color="#E5E5E5">have</font><font color="#CCCCCC"> a model which gives 99 percent</font>

259
00:09:40,329 --> 00:09:45,638
<font color="#E5E5E5">accuracy you always say</font><font color="#CCCCCC"> no</font><font color="#E5E5E5"> any given</font>

260
00:09:42,009 --> 00:09:47,319
<font color="#CCCCCC">commits it's 99.9% accurate</font><font color="#E5E5E5"> that it's</font>

261
00:09:45,639 --> 00:09:49,360
not related to vulnerability<font color="#CCCCCC"> right so</font>

262
00:09:47,319 --> 00:09:50,829
there is huge<font color="#E5E5E5"> imbalance in the data so</font>

263
00:09:49,360 --> 00:09:52,509
in order<font color="#E5E5E5"> to make our</font><font color="#CCCCCC"> job easier we</font>

264
00:09:50,829 --> 00:09:54,370
actually<font color="#CCCCCC"> filter all these security</font>

265
00:09:52,509 --> 00:09:56,399
unrelated issues by<font color="#E5E5E5"> using a regular</font>

266
00:09:54,370 --> 00:09:59,560
<font color="#CCCCCC">expression so this includes</font><font color="#E5E5E5"> things like</font>

267
00:09:56,399 --> 00:10:02,649
names of<font color="#CCCCCC"> wonder abilities</font><font color="#E5E5E5"> things like</font>

268
00:09:59,560 --> 00:10:04,089
<font color="#CCCCCC">CSRF XSS CVE etc so there's a regular</font>

269
00:10:02,649 --> 00:10:08,319
<font color="#CCCCCC">expression we use in order to filter it</font>

270
00:10:04,089 --> 00:10:11,170
<font color="#CCCCCC">to make our</font><font color="#E5E5E5"> job easier</font><font color="#CCCCCC"> we started</font><font color="#E5E5E5"> off</font>

271
00:10:08,319 --> 00:10:12,699
<font color="#E5E5E5">with the projects we had with us at that</font>

272
00:10:11,170 --> 00:10:15,310
<font color="#E5E5E5">time</font><font color="#CCCCCC"> they're around 6,000 projects</font><font color="#E5E5E5"> in</font>

273
00:10:12,699 --> 00:10:17,050
six different languages<font color="#CCCCCC"> in order</font><font color="#E5E5E5"> to</font>

274
00:10:15,310 --> 00:10:19,750
<font color="#E5E5E5">ascertain the ground truth we relied on</font>

275
00:10:17,050 --> 00:10:22,389
our<font color="#CCCCCC"> 1:1</font><font color="#E5E5E5"> ability researchers who were</font>

276
00:10:19,750 --> 00:10:24,160
labeling this data<font color="#E5E5E5"> so this data was</font>

277
00:10:22,389 --> 00:10:25,660
<font color="#CCCCCC">actually labeled by humans by looking at</font>

278
00:10:24,160 --> 00:10:27,040
<font color="#E5E5E5">each</font><font color="#CCCCCC"> item that</font><font color="#E5E5E5"> came through and</font><font color="#CCCCCC"> did I</font>

279
00:10:25,660 --> 00:10:30,219
deciding whether it's<font color="#E5E5E5"> related to</font><font color="#CCCCCC"> a-1</font>

280
00:10:27,040 --> 00:10:32,860
durability or not right so this<font color="#CCCCCC"> is how</font>

281
00:10:30,220 --> 00:10:34,750
it looked<font color="#E5E5E5"> like so even</font><font color="#CCCCCC"> after the</font>

282
00:10:32,860 --> 00:10:36,730
filtering the<font color="#CCCCCC"> data was still very</font>

283
00:10:34,750 --> 00:10:39,220
imbalanced<font color="#E5E5E5"> so for example</font><font color="#CCCCCC"> for commits we</font>

284
00:10:36,730 --> 00:10:41,800
had<font color="#E5E5E5"> 12,000 or so commits in our system</font>

285
00:10:39,220 --> 00:10:43,360
<font color="#E5E5E5">only 1300 of them were related to</font><font color="#CCCCCC"> one</font>

286
00:10:41,800 --> 00:10:45,008
<font color="#CCCCCC">debilities and the rest of</font><font color="#E5E5E5"> them were not</font>

287
00:10:43,360 --> 00:10:47,649
<font color="#CCCCCC">related to one so you</font><font color="#E5E5E5"> can see there's</font>

288
00:10:45,009 --> 00:10:48,610
like a high imbalance in the data so

289
00:10:47,649 --> 00:10:50,410
when<font color="#CCCCCC"> you're</font><font color="#E5E5E5"> trying to do binary</font>

290
00:10:48,610 --> 00:10:52,209
classification<font color="#CCCCCC"> it's easiest</font><font color="#E5E5E5"> to do if</font>

291
00:10:50,410 --> 00:10:53,620
it's almost<font color="#CCCCCC"> 50/50</font><font color="#E5E5E5"> because</font><font color="#CCCCCC"> you know</font>

292
00:10:52,209 --> 00:10:54,699
either it's this or that if you have

293
00:10:53,620 --> 00:10:58,540
this<font color="#E5E5E5"> kind of</font><font color="#CCCCCC"> imbalance then it's</font>

294
00:10:54,699 --> 00:11:02,680
<font color="#E5E5E5">difficult to do the training the second</font>

295
00:10:58,540 --> 00:11:05,319
challenge is the natural language<font color="#E5E5E5"> text</font>

296
00:11:02,680 --> 00:11:08,739
<font color="#E5E5E5">that comes as part of either you know</font>

297
00:11:05,319 --> 00:11:11,110
bug reports<font color="#E5E5E5"> or commits is very different</font>

298
00:11:08,740 --> 00:11:13,630
from say standard English right so it is

299
00:11:11,110 --> 00:11:16,209
noisy<font color="#CCCCCC"> it's diverse</font><font color="#E5E5E5"> it's mixed with URLs</font>

300
00:11:13,630 --> 00:11:18,140
variable names etc<font color="#E5E5E5"> so what it meant was</font>

301
00:11:16,209 --> 00:11:20,239
we couldn't<font color="#E5E5E5"> use the</font><font color="#CCCCCC"> existing</font>

302
00:11:18,140 --> 00:11:22,730
models like<font color="#E5E5E5"> wet</font><font color="#CCCCCC"> to wet which are trained</font>

303
00:11:20,240 --> 00:11:24,589
on Wikipedia<font color="#E5E5E5"> text to do our natural</font>

304
00:11:22,730 --> 00:11:26,180
<font color="#E5E5E5">language</font><font color="#CCCCCC"> processing so we</font><font color="#E5E5E5"> had to train</font>

305
00:11:24,589 --> 00:11:29,990
our own<font color="#E5E5E5"> work to work more which is</font>

306
00:11:26,180 --> 00:11:31,160
specific<font color="#CCCCCC"> for our</font><font color="#E5E5E5"> domain so this is kind</font>

307
00:11:29,990 --> 00:11:32,870
of some<font color="#CCCCCC"> of the</font><font color="#E5E5E5"> features</font><font color="#CCCCCC"> we eventually</font>

308
00:11:31,160 --> 00:11:35,089
<font color="#E5E5E5">ended up including in our machine</font>

309
00:11:32,870 --> 00:11:37,279
<font color="#E5E5E5">learning model so if you look at commits</font>

310
00:11:35,089 --> 00:11:39,709
we looked at variety<font color="#CCCCCC"> of things including</font>

311
00:11:37,279 --> 00:11:42,019
<font color="#E5E5E5">the project names or name of the</font>

312
00:11:39,709 --> 00:11:44,329
contributor<font color="#E5E5E5"> but</font><font color="#CCCCCC"> the only</font><font color="#E5E5E5"> thing that was</font>

313
00:11:42,019 --> 00:11:47,750
significant enough<font color="#E5E5E5"> as a feature we found</font>

314
00:11:44,329 --> 00:11:50,209
was the actual commit message itself for

315
00:11:47,750 --> 00:11:52,430
bug reports we use variety of features

316
00:11:50,209 --> 00:11:54,890
<font color="#E5E5E5">including title description comments</font>

317
00:11:52,430 --> 00:11:57,529
<font color="#E5E5E5">number of</font><font color="#CCCCCC"> attachments labels</font><font color="#E5E5E5"> created and</font>

318
00:11:54,890 --> 00:11:59,510
edited date for<font color="#E5E5E5"> males we use the subject</font>

319
00:11:57,529 --> 00:12:01,070
content<font color="#E5E5E5"> then the sender information</font><font color="#CCCCCC"> so</font>

320
00:11:59,510 --> 00:12:03,019
these are the key<font color="#CCCCCC"> features after an</font>

321
00:12:01,070 --> 00:12:04,579
exploratory data analysis we settled on

322
00:12:03,019 --> 00:12:08,990
these<font color="#E5E5E5"> features in order to do</font><font color="#CCCCCC"> our</font>

323
00:12:04,579 --> 00:12:12,529
<font color="#CCCCCC">training so like I mentioned we had to</font>

324
00:12:08,990 --> 00:12:15,110
train<font color="#E5E5E5"> our</font><font color="#CCCCCC"> own were to</font><font color="#E5E5E5"> work model and the</font>

325
00:12:12,529 --> 00:12:17,180
benefit of<font color="#E5E5E5"> doing</font><font color="#CCCCCC"> this</font><font color="#E5E5E5"> model is</font><font color="#CCCCCC"> that this</font>

326
00:12:15,110 --> 00:12:18,890
<font color="#E5E5E5">model</font><font color="#CCCCCC"> is trained on</font><font color="#E5E5E5"> our own domain</font><font color="#CCCCCC"> so if</font>

327
00:12:17,180 --> 00:12:20,779
you look at in our model if<font color="#CCCCCC"> you try to</font>

328
00:12:18,890 --> 00:12:23,779
find words which are similar to exercise

329
00:12:20,779 --> 00:12:26,240
<font color="#E5E5E5">you will</font><font color="#CCCCCC"> actually see</font><font color="#E5E5E5"> things like CSRF</font>

330
00:12:23,779 --> 00:12:29,180
clickjacking<font color="#CCCCCC"> 1 etc</font><font color="#E5E5E5"> while if you train</font>

331
00:12:26,240 --> 00:12:30,350
your<font color="#E5E5E5"> model on natural</font><font color="#CCCCCC"> English exercise</font>

332
00:12:29,180 --> 00:12:31,640
<font color="#E5E5E5">doesn't really mean</font><font color="#CCCCCC"> anything so the</font>

333
00:12:30,350 --> 00:12:34,370
things<font color="#E5E5E5"> that are similar</font><font color="#CCCCCC"> to exercise you</font>

334
00:12:31,640 --> 00:12:36,410
won't see this<font color="#E5E5E5"> so we use the data set of</font>

335
00:12:34,370 --> 00:12:38,180
<font color="#E5E5E5">the unfiltered</font><font color="#CCCCCC"> 3 million commits in</font>

336
00:12:36,410 --> 00:12:40,130
order to build this word<font color="#E5E5E5"> to</font><font color="#CCCCCC"> weight model</font>

337
00:12:38,180 --> 00:12:41,989
and that's the model<font color="#E5E5E5"> we</font><font color="#CCCCCC"> use for</font><font color="#E5E5E5"> natural</font>

338
00:12:40,130 --> 00:12:43,550
language processing<font color="#E5E5E5"> so you need this</font>

339
00:12:41,990 --> 00:12:45,740
<font color="#E5E5E5">because in order to do machine learning</font>

340
00:12:43,550 --> 00:12:47,990
<font color="#CCCCCC">you need</font><font color="#E5E5E5"> to convert the text which comes</font>

341
00:12:45,740 --> 00:12:50,810
in commit messages<font color="#E5E5E5"> into vectors</font><font color="#CCCCCC"> and this</font>

342
00:12:47,990 --> 00:12:52,370
<font color="#E5E5E5">is one</font><font color="#CCCCCC"> particular approach which we</font>

343
00:12:50,810 --> 00:12:54,229
<font color="#E5E5E5">found was useful we tried a variety</font><font color="#CCCCCC"> of</font>

344
00:12:52,370 --> 00:12:56,480
things including<font color="#E5E5E5"> engrams bag of words</font>

345
00:12:54,230 --> 00:13:00,820
etc<font color="#E5E5E5"> but the best results were when we</font>

346
00:12:56,480 --> 00:13:00,820
<font color="#CCCCCC">use the</font><font color="#E5E5E5"> self trained word to</font><font color="#CCCCCC"> work model</font>

347
00:13:00,850 --> 00:13:06,170
so our first training attempts were

348
00:13:03,709 --> 00:13:07,729
using you know basic classifiers<font color="#CCCCCC"> so we</font>

349
00:13:06,170 --> 00:13:10,699
started with things like random<font color="#CCCCCC"> forests</font>

350
00:13:07,730 --> 00:13:12,829
<font color="#E5E5E5">so you know in random forests it's a</font>

351
00:13:10,699 --> 00:13:14,209
<font color="#E5E5E5">collection of trees where in training</font>

352
00:13:12,829 --> 00:13:16,459
you actually look at<font color="#E5E5E5"> each item and</font>

353
00:13:14,209 --> 00:13:17,959
generate the forest by sampling<font color="#E5E5E5"> the data</font>

354
00:13:16,459 --> 00:13:19,849
set and seeing whether a feature is

355
00:13:17,959 --> 00:13:21,680
related to a so this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> binary</font>

356
00:13:19,850 --> 00:13:24,019
classification<font color="#E5E5E5"> so you try and train and</font>

357
00:13:21,680 --> 00:13:25,370
generate this trees<font color="#E5E5E5"> and when you are</font>

358
00:13:24,019 --> 00:13:26,630
<font color="#E5E5E5">doing predictions you just follow it all</font>

359
00:13:25,370 --> 00:13:28,069
the<font color="#CCCCCC"> way</font><font color="#E5E5E5"> till</font><font color="#CCCCCC"> the leaf and if it's</font>

360
00:13:26,630 --> 00:13:29,449
related<font color="#E5E5E5"> you count the number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> votes</font>

361
00:13:28,069 --> 00:13:31,040
<font color="#E5E5E5">and you get a confidence of like how</font>

362
00:13:29,449 --> 00:13:31,880
likely it is<font color="#E5E5E5"> related to a particular</font>

363
00:13:31,040 --> 00:13:34,790
<font color="#E5E5E5">class</font>

364
00:13:31,880 --> 00:13:37,579
so we tried random<font color="#CCCCCC"> forests</font><font color="#E5E5E5"> we tried the</font>

365
00:13:34,790 --> 00:13:39,500
SVM<font color="#E5E5E5"> so this is again another popular</font>

366
00:13:37,579 --> 00:13:41,388
binary classifier<font color="#CCCCCC"> so imagine you have</font>

367
00:13:39,500 --> 00:13:45,019
<font color="#CCCCCC">some data</font><font color="#E5E5E5"> which at first</font><font color="#CCCCCC"> looks</font><font color="#E5E5E5"> like it's</font>

368
00:13:41,389 --> 00:13:46,730
not<font color="#CCCCCC"> very</font><font color="#E5E5E5"> easy to classify you transform</font>

369
00:13:45,019 --> 00:13:48,500
it using some mathematical<font color="#E5E5E5"> function</font>

370
00:13:46,730 --> 00:13:50,779
called a kernel<font color="#E5E5E5"> in a high</font><font color="#CCCCCC"> dimensional</font>

371
00:13:48,500 --> 00:13:52,279
vector space so that<font color="#E5E5E5"> in that space it's</font>

372
00:13:50,779 --> 00:13:55,009
easy to see<font color="#E5E5E5"> there's a gap</font><font color="#CCCCCC"> and you</font><font color="#E5E5E5"> can</font>

373
00:13:52,279 --> 00:13:57,649
transform it<font color="#E5E5E5"> right</font><font color="#CCCCCC"> unfortunately when we</font>

374
00:13:55,009 --> 00:14:00,199
use these individual binary classifiers

375
00:13:57,649 --> 00:14:02,000
<font color="#E5E5E5">even with a lot of tuning and hyper</font>

376
00:14:00,199 --> 00:14:05,000
parameter tuning we did<font color="#E5E5E5"> not get the</font>

377
00:14:02,000 --> 00:14:06,350
results we wanted so<font color="#E5E5E5"> eventually we</font>

378
00:14:05,000 --> 00:14:08,269
settled for<font color="#E5E5E5"> something which looks like</font>

379
00:14:06,350 --> 00:14:09,800
<font color="#E5E5E5">this if you are</font><font color="#CCCCCC"> familiar with</font>

380
00:14:08,269 --> 00:14:10,940
competitions not<font color="#CCCCCC"> Cagle and if you have</font>

381
00:14:09,800 --> 00:14:12,649
done a<font color="#E5E5E5"> lot</font><font color="#CCCCCC"> of them you look at</font>

382
00:14:10,940 --> 00:14:14,420
eventually a<font color="#E5E5E5"> lot of teams end up with</font>

383
00:14:12,649 --> 00:14:16,339
architectures which<font color="#CCCCCC"> look like this</font><font color="#E5E5E5"> which</font>

384
00:14:14,420 --> 00:14:19,099
<font color="#E5E5E5">is you try and use every possible basic</font>

385
00:14:16,339 --> 00:14:20,540
classifier<font color="#E5E5E5"> individually and then you try</font>

386
00:14:19,100 --> 00:14:23,480
to take the output<font color="#CCCCCC"> of that</font><font color="#E5E5E5"> and then you</font>

387
00:14:20,540 --> 00:14:27,769
try and<font color="#E5E5E5"> stack that output right so in</font>

388
00:14:23,480 --> 00:14:29,899
our model<font color="#E5E5E5"> we</font><font color="#CCCCCC"> trained at</font><font color="#E5E5E5"> least six</font>

389
00:14:27,769 --> 00:14:31,639
different<font color="#E5E5E5"> classifiers and each of them</font>

390
00:14:29,899 --> 00:14:34,759
gives individual predictions based on

391
00:14:31,639 --> 00:14:37,130
<font color="#E5E5E5">the classification and then we use the</font>

392
00:14:34,759 --> 00:14:40,300
output<font color="#CCCCCC"> of those classifiers and feed it</font>

393
00:14:37,130 --> 00:14:43,160
into<font color="#CCCCCC"> a logistic regression</font><font color="#E5E5E5"> to give the</font>

394
00:14:40,300 --> 00:14:45,170
eventual answer so we take an<font color="#CCCCCC"> n symbol</font>

395
00:14:43,160 --> 00:14:47,209
of these<font color="#E5E5E5"> classifiers and then use the</font>

396
00:14:45,170 --> 00:14:48,410
<font color="#CCCCCC">output from</font><font color="#E5E5E5"> each one of</font><font color="#CCCCCC"> them so the idea</font>

397
00:14:47,209 --> 00:14:50,239
there is<font color="#CCCCCC"> maybe if there is</font><font color="#E5E5E5"> something</font>

398
00:14:48,410 --> 00:14:51,230
that<font color="#E5E5E5"> one</font><font color="#CCCCCC"> of the</font><font color="#E5E5E5"> classifier predicts well</font>

399
00:14:50,240 --> 00:14:53,480
and the<font color="#E5E5E5"> other doesn't</font>

400
00:14:51,230 --> 00:14:55,310
you can still figure<font color="#E5E5E5"> it out because each</font>

401
00:14:53,480 --> 00:14:57,439
<font color="#E5E5E5">one</font><font color="#CCCCCC"> of them is good at a certain aspect</font>

402
00:14:55,310 --> 00:14:59,209
<font color="#E5E5E5">of the data right and I'll share some</font>

403
00:14:57,439 --> 00:15:00,980
results<font color="#CCCCCC"> later on which will show because</font>

404
00:14:59,209 --> 00:15:03,380
we wanted<font color="#CCCCCC"> to</font><font color="#E5E5E5"> make sure</font><font color="#CCCCCC"> that we</font><font color="#E5E5E5"> validated</font>

405
00:15:00,980 --> 00:15:05,750
it and<font color="#CCCCCC"> you will</font><font color="#E5E5E5"> see that actually using</font>

406
00:15:03,380 --> 00:15:07,610
a stack the<font color="#E5E5E5"> + symbol is helpful and</font>

407
00:15:05,750 --> 00:15:10,009
individual classifiers do not give<font color="#CCCCCC"> that</font>

408
00:15:07,610 --> 00:15:12,589
much precision so this ended up<font color="#E5E5E5"> being</font>

409
00:15:10,009 --> 00:15:16,389
<font color="#CCCCCC">our sort</font><font color="#E5E5E5"> of architecture for all of the</font>

410
00:15:12,589 --> 00:15:18,649
things so this<font color="#CCCCCC"> is</font><font color="#E5E5E5"> just four commits the</font>

411
00:15:16,389 --> 00:15:20,149
model for others<font color="#CCCCCC"> also look very similar</font>

412
00:15:18,649 --> 00:15:21,769
the individual classifiers<font color="#E5E5E5"> are different</font>

413
00:15:20,149 --> 00:15:25,670
and obviously<font color="#E5E5E5"> the tuned parameters are</font>

414
00:15:21,769 --> 00:15:28,579
<font color="#E5E5E5">very different right so before</font><font color="#CCCCCC"> I talk</font>

415
00:15:25,670 --> 00:15:30,170
about<font color="#E5E5E5"> the</font><font color="#CCCCCC"> actual evaluation matrix I</font>

416
00:15:28,579 --> 00:15:32,300
want to talk about just<font color="#E5E5E5"> two things</font>

417
00:15:30,170 --> 00:15:34,189
<font color="#E5E5E5">because not everybody might be</font><font color="#CCCCCC"> familiar</font>

418
00:15:32,300 --> 00:15:35,750
<font color="#E5E5E5">with precision and recall so we use</font>

419
00:15:34,189 --> 00:15:38,899
these<font color="#CCCCCC"> metrics in order to evaluate</font><font color="#E5E5E5"> our</font>

420
00:15:35,750 --> 00:15:41,120
model so think about<font color="#E5E5E5"> precision so if for</font>

421
00:15:38,899 --> 00:15:43,699
<font color="#E5E5E5">example in the data set we</font><font color="#CCCCCC"> have thousand</font>

422
00:15:41,120 --> 00:15:45,830
<font color="#E5E5E5">commits out of which 100 are related to</font>

423
00:15:43,699 --> 00:15:47,209
a<font color="#E5E5E5"> wonder bility</font><font color="#CCCCCC"> and 900 are now</font>

424
00:15:45,830 --> 00:15:49,340
<font color="#E5E5E5">related to one</font><font color="#CCCCCC"> ability right</font><font color="#E5E5E5"> so that's</font>

425
00:15:47,210 --> 00:15:51,230
the actual<font color="#E5E5E5"> ground</font><font color="#CCCCCC"> route</font><font color="#E5E5E5"> then you build</font>

426
00:15:49,340 --> 00:15:53,600
your<font color="#CCCCCC"> model and then</font><font color="#E5E5E5"> you do predictions</font>

427
00:15:51,230 --> 00:15:57,500
<font color="#CCCCCC">and what do you see</font><font color="#E5E5E5"> that it predicts 70</font>

428
00:15:53,600 --> 00:15:58,490
wonder abilities and<font color="#E5E5E5"> 35 of them that it</font>

429
00:15:57,500 --> 00:15:59,750
predicts has vulnerabilities<font color="#CCCCCC"> are</font>

430
00:15:58,490 --> 00:16:01,190
actually not vulnerabilities<font color="#E5E5E5"> so these</font>

431
00:15:59,750 --> 00:16:03,170
are called<font color="#E5E5E5"> true positives which is</font>

432
00:16:01,190 --> 00:16:04,670
predictions which are correct<font color="#CCCCCC"> and here's</font>

433
00:16:03,170 --> 00:16:06,709
called false positive<font color="#CCCCCC"> predictions that</font>

434
00:16:04,670 --> 00:16:09,140
were made but are incorrect<font color="#E5E5E5"> right so in</font>

435
00:16:06,710 --> 00:16:10,880
this<font color="#E5E5E5"> case the precision would be the</font>

436
00:16:09,140 --> 00:16:13,460
amount<font color="#E5E5E5"> of true positives you have over</font>

437
00:16:10,880 --> 00:16:14,870
the total number so<font color="#E5E5E5"> this is 70 by</font><font color="#CCCCCC"> 70</font>

438
00:16:13,460 --> 00:16:16,460
<font color="#E5E5E5">plus</font><font color="#CCCCCC"> 35 so this is would be</font><font color="#E5E5E5"> the</font>

439
00:16:14,870 --> 00:16:18,800
precision<font color="#E5E5E5"> right this is trying to</font><font color="#CCCCCC"> tell</font>

440
00:16:16,460 --> 00:16:21,470
<font color="#CCCCCC">you based on your prediction</font><font color="#E5E5E5"> how likely</font>

441
00:16:18,800 --> 00:16:23,510
it is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> you're correct</font><font color="#CCCCCC"> and the recall</font>

442
00:16:21,470 --> 00:16:25,040
is out<font color="#CCCCCC"> of the total number that were</font>

443
00:16:23,510 --> 00:16:27,830
already<font color="#E5E5E5"> there how many were you able to</font>

444
00:16:25,040 --> 00:16:31,880
find so<font color="#CCCCCC"> there were 100</font><font color="#E5E5E5"> but using this</font>

445
00:16:27,830 --> 00:16:33,740
model we only found 70 right<font color="#E5E5E5"> so recall</font>

446
00:16:31,880 --> 00:16:36,830
is so this means that<font color="#CCCCCC"> even if you apply</font>

447
00:16:33,740 --> 00:16:38,630
<font color="#CCCCCC">this model</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> actually miss 30 commits</font>

448
00:16:36,830 --> 00:16:39,800
which are related to<font color="#CCCCCC"> wonderful right so</font>

449
00:16:38,630 --> 00:16:42,020
that's the precision and<font color="#E5E5E5"> recall and</font>

450
00:16:39,800 --> 00:16:44,420
<font color="#E5E5E5">usually there is</font><font color="#CCCCCC"> a trade-off</font><font color="#E5E5E5"> to be made</font>

451
00:16:42,020 --> 00:16:46,220
and each of the models that<font color="#E5E5E5"> we have</font>

452
00:16:44,420 --> 00:16:48,490
there is<font color="#E5E5E5"> a metric or a confidence we can</font>

453
00:16:46,220 --> 00:16:51,350
<font color="#E5E5E5">adjust in</font><font color="#CCCCCC"> order to make that trade-off</font>

454
00:16:48,490 --> 00:16:53,210
in any case because some of<font color="#E5E5E5"> you might</font><font color="#CCCCCC"> be</font>

455
00:16:51,350 --> 00:16:56,330
<font color="#E5E5E5">having</font><font color="#CCCCCC"> questions like I mean this seems</font>

456
00:16:53,210 --> 00:16:57,830
<font color="#E5E5E5">very less because I look at results that</font>

457
00:16:56,330 --> 00:16:59,990
come<font color="#CCCCCC"> out of</font><font color="#E5E5E5"> image net where people do</font>

458
00:16:57,830 --> 00:17:02,480
deep<font color="#CCCCCC"> learning they're always like 95% or</font>

459
00:16:59,990 --> 00:17:05,390
<font color="#E5E5E5">whatever and so on right but keep in</font>

460
00:17:02,480 --> 00:17:09,110
mind<font color="#E5E5E5"> that</font><font color="#CCCCCC"> for us</font><font color="#E5E5E5"> doing this as human we</font>

461
00:17:05,390 --> 00:17:12,050
had to look at thousand items<font color="#E5E5E5"> initially</font>

462
00:17:09,109 --> 00:17:13,698
and even with these rates<font color="#E5E5E5"> we can ignore</font>

463
00:17:12,050 --> 00:17:16,099
or filter<font color="#CCCCCC"> nine hundred</font><font color="#E5E5E5"> eight hundred</font><font color="#CCCCCC"> and</font>

464
00:17:13,699 --> 00:17:19,310
<font color="#CCCCCC">ninety-five items</font><font color="#E5E5E5"> so if I had one</font><font color="#CCCCCC"> person</font>

465
00:17:16,099 --> 00:17:20,659
<font color="#CCCCCC">who</font><font color="#E5E5E5"> is doing this work now the task or</font>

466
00:17:19,310 --> 00:17:22,399
<font color="#CCCCCC">the amount of work has been reduced by</font>

467
00:17:20,660 --> 00:17:24,650
<font color="#CCCCCC">1/10</font><font color="#E5E5E5"> because I only look at need to look</font>

468
00:17:22,400 --> 00:17:26,720
at the remaining<font color="#E5E5E5"> hundred commits right</font>

469
00:17:24,650 --> 00:17:28,790
so that's kind of the important thing

470
00:17:26,720 --> 00:17:31,580
for<font color="#CCCCCC"> at</font><font color="#E5E5E5"> least from our perspective where</font>

471
00:17:28,790 --> 00:17:33,139
it helped us<font color="#E5E5E5"> so it helped us scale</font><font color="#CCCCCC"> by</font>

472
00:17:31,580 --> 00:17:34,850
adding more<font color="#E5E5E5"> number of projects that</font><font color="#CCCCCC"> we</font>

473
00:17:33,140 --> 00:17:38,750
<font color="#E5E5E5">could monitor without adding more humans</font>

474
00:17:34,850 --> 00:17:41,629
in the team so this<font color="#E5E5E5"> is how the actual</font>

475
00:17:38,750 --> 00:17:43,430
evaluation<font color="#E5E5E5"> looked like for the commits</font>

476
00:17:41,630 --> 00:17:46,340
<font color="#E5E5E5">so on this side you</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> the probability</font>

477
00:17:43,430 --> 00:17:48,260
for the<font color="#CCCCCC"> stacked model and then</font><font color="#E5E5E5"> you see</font>

478
00:17:46,340 --> 00:17:52,100
the precision and<font color="#E5E5E5"> recall and like I</font><font color="#CCCCCC"> said</font>

479
00:17:48,260 --> 00:17:54,530
there is<font color="#E5E5E5"> like a trade off so eventually</font>

480
00:17:52,100 --> 00:17:56,000
the model we deployed after<font color="#E5E5E5"> testing was</font>

481
00:17:54,530 --> 00:17:59,149
something somewhere<font color="#CCCCCC"> around here</font><font color="#E5E5E5"> which is</font>

482
00:17:56,000 --> 00:17:59,630
gives<font color="#E5E5E5"> around 50 precision with almost 50</font>

483
00:17:59,150 --> 00:18:02,420
<font color="#E5E5E5">recall</font>

484
00:17:59,630 --> 00:18:06,020
something<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is to show you the</font><font color="#CCCCCC"> fact</font>

485
00:18:02,420 --> 00:18:07,760
that doing<font color="#E5E5E5"> the stacking and building the</font>

486
00:18:06,020 --> 00:18:10,190
<font color="#CCCCCC">N symbol is really important so for the</font>

487
00:18:07,760 --> 00:18:11,900
same recall rate<font color="#E5E5E5"> the precision is</font>

488
00:18:10,190 --> 00:18:14,270
actually improved every time we<font color="#CCCCCC"> use a</font>

489
00:18:11,900 --> 00:18:16,240
<font color="#CCCCCC">stacked model versus only the basic</font>

490
00:18:14,270 --> 00:18:19,580
classifier so<font color="#E5E5E5"> if you only use linear SVM</font>

491
00:18:16,240 --> 00:18:22,220
<font color="#CCCCCC">you get point to do precision</font><font color="#E5E5E5"> if you use</font>

492
00:18:19,580 --> 00:18:24,260
the stacking you get 0.34<font color="#E5E5E5"> same for all</font>

493
00:18:22,220 --> 00:18:26,480
<font color="#E5E5E5">of these models</font><font color="#CCCCCC"> so this is just</font><font color="#E5E5E5"> to</font>

494
00:18:24,260 --> 00:18:27,950
justify<font color="#CCCCCC"> the case that the stacking or</font>

495
00:18:26,480 --> 00:18:29,330
the<font color="#E5E5E5"> N symbol is important and without</font>

496
00:18:27,950 --> 00:18:33,080
which you cannot<font color="#E5E5E5"> achieve the precision</font>

497
00:18:29,330 --> 00:18:35,600
you<font color="#E5E5E5"> see right so there are lot of</font>

498
00:18:33,080 --> 00:18:39,050
<font color="#E5E5E5">details about the actual work including</font>

499
00:18:35,600 --> 00:18:40,939
fairly detailed evaluation<font color="#CCCCCC"> so</font><font color="#E5E5E5"> I</font><font color="#CCCCCC"> do lack</font>

500
00:18:39,050 --> 00:18:43,610
<font color="#E5E5E5">of time I invite you to go and read our</font>

501
00:18:40,940 --> 00:18:46,910
paper we published it last year in FSC

502
00:18:43,610 --> 00:18:51,439
<font color="#E5E5E5">and it talks in more detail about the</font>

503
00:18:46,910 --> 00:18:53,380
results so let<font color="#E5E5E5"> me share some things from</font>

504
00:18:51,440 --> 00:18:55,730
there which is so once we did the

505
00:18:53,380 --> 00:18:57,350
<font color="#E5E5E5">testing we actually wanted</font><font color="#CCCCCC"> to make sure</font>

506
00:18:55,730 --> 00:18:59,840
once we<font color="#E5E5E5"> deploy</font><font color="#CCCCCC"> it in production and</font>

507
00:18:57,350 --> 00:19:01,070
monitor it for some time<font color="#E5E5E5"> because before</font>

508
00:18:59,840 --> 00:19:02,419
we add a lot of<font color="#CCCCCC"> things we wanted</font><font color="#E5E5E5"> to make</font>

509
00:19:01,070 --> 00:19:03,770
<font color="#CCCCCC">sure</font><font color="#E5E5E5"> that this is enough for this is</font>

510
00:19:02,420 --> 00:19:06,770
this is not<font color="#E5E5E5"> going to miss a</font><font color="#CCCCCC"> lot</font><font color="#E5E5E5"> of</font>

511
00:19:03,770 --> 00:19:09,260
vulnerabilities<font color="#E5E5E5"> right so the eventual</font>

512
00:19:06,770 --> 00:19:11,210
<font color="#E5E5E5">for the initial period</font><font color="#CCCCCC"> even after</font>

513
00:19:09,260 --> 00:19:12,890
deploying<font color="#E5E5E5"> the model we continue to do</font>

514
00:19:11,210 --> 00:19:16,100
labeling so that we can get these

515
00:19:12,890 --> 00:19:18,230
results<font color="#CCCCCC"> right so so</font><font color="#E5E5E5"> think</font><font color="#CCCCCC"> about it when</font>

516
00:19:16,100 --> 00:19:19,730
you publish<font color="#E5E5E5"> this model in production you</font>

517
00:19:18,230 --> 00:19:21,020
are<font color="#CCCCCC"> not going to look at the predictions</font>

518
00:19:19,730 --> 00:19:23,900
which are negative<font color="#CCCCCC"> because that's how we</font>

519
00:19:21,020 --> 00:19:24,980
get<font color="#E5E5E5"> benefit</font><font color="#CCCCCC"> from</font><font color="#E5E5E5"> machine learning</font><font color="#CCCCCC"> so but</font>

520
00:19:23,900 --> 00:19:26,720
<font color="#E5E5E5">for these three</font><font color="#CCCCCC"> months period</font><font color="#E5E5E5"> we</font>

521
00:19:24,980 --> 00:19:27,920
<font color="#CCCCCC">actually still continued labeling the</font>

522
00:19:26,720 --> 00:19:32,030
data so<font color="#CCCCCC"> that</font><font color="#E5E5E5"> we could generate</font><font color="#CCCCCC"> the</font>

523
00:19:27,920 --> 00:19:33,770
<font color="#E5E5E5">metrics so based on the</font><font color="#CCCCCC"> tests</font><font color="#E5E5E5"> we had</font><font color="#CCCCCC"> the</font>

524
00:19:32,030 --> 00:19:36,050
precision of the model we<font color="#CCCCCC"> deployed had a</font>

525
00:19:33,770 --> 00:19:38,900
precision<font color="#E5E5E5"> of 0.44 and a recall rate of</font>

526
00:19:36,050 --> 00:19:40,520
<font color="#CCCCCC">6-2 we then added</font><font color="#E5E5E5"> 3,000 new projects and</font>

527
00:19:38,900 --> 00:19:42,500
then kept monitoring<font color="#E5E5E5"> for three months</font>

528
00:19:40,520 --> 00:19:44,060
<font color="#E5E5E5">and the eventual precision and recall</font>

529
00:19:42,500 --> 00:19:45,560
rate<font color="#E5E5E5"> during this period was actually</font>

530
00:19:44,060 --> 00:19:47,600
much higher now there are<font color="#E5E5E5"> some reasons</font>

531
00:19:45,560 --> 00:19:49,340
<font color="#CCCCCC">why</font><font color="#E5E5E5"> it might be</font><font color="#CCCCCC"> the case</font><font color="#E5E5E5"> because we may</font>

532
00:19:47,600 --> 00:19:51,379
be added projects which<font color="#E5E5E5"> are very similar</font>

533
00:19:49,340 --> 00:19:52,939
<font color="#E5E5E5">to existing</font><font color="#CCCCCC"> ones or</font><font color="#E5E5E5"> whatever but</font>

534
00:19:51,380 --> 00:19:54,170
<font color="#CCCCCC">eventually our recall and precision was</font>

535
00:19:52,940 --> 00:19:56,180
quite acceptable<font color="#E5E5E5"> to us and then we</font>

536
00:19:54,170 --> 00:19:58,090
stopped the monitoring so this is the

537
00:19:56,180 --> 00:20:01,390
actual thing<font color="#CCCCCC"> that</font><font color="#E5E5E5"> happened during the</font>

538
00:19:58,090 --> 00:20:04,550
<font color="#E5E5E5">period we observed it so we had around</font>

539
00:20:01,390 --> 00:20:06,020
<font color="#E5E5E5">215</font><font color="#CCCCCC"> actual commits that were related</font><font color="#E5E5E5"> to</font>

540
00:20:04,550 --> 00:20:08,750
<font color="#CCCCCC">one durability while the model was able</font>

541
00:20:06,020 --> 00:20:11,210
to<font color="#E5E5E5"> create 160 out of them and they were</font>

542
00:20:08,750 --> 00:20:13,290
<font color="#CCCCCC">like 32 false</font><font color="#E5E5E5"> positives right so this</font><font color="#CCCCCC"> is</font>

543
00:20:11,210 --> 00:20:15,600
what we observe

544
00:20:13,290 --> 00:20:17,220
so remember this main goal was<font color="#E5E5E5"> to</font>

545
00:20:15,600 --> 00:20:18,929
<font color="#CCCCCC">actually increase</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> coverage so we</font>

546
00:20:17,220 --> 00:20:20,430
want to go from tracking thousands of

547
00:20:18,930 --> 00:20:24,810
project to<font color="#E5E5E5"> tracking tens of thousands</font><font color="#CCCCCC"> of</font>

548
00:20:20,430 --> 00:20:28,110
project<font color="#CCCCCC"> so at the</font><font color="#E5E5E5"> end once we deployed</font>

549
00:20:24,810 --> 00:20:30,090
all of these models so today<font color="#E5E5E5"> it helps us</font>

550
00:20:28,110 --> 00:20:33,090
to<font color="#E5E5E5"> track</font><font color="#CCCCCC"> wonder abilities at a really</font>

551
00:20:30,090 --> 00:20:34,740
large<font color="#E5E5E5"> scale and in low costs so for</font>

552
00:20:33,090 --> 00:20:36,389
example we were able<font color="#CCCCCC"> to increase</font><font color="#E5E5E5"> the</font>

553
00:20:34,740 --> 00:20:39,330
<font color="#CCCCCC">number of projects</font><font color="#E5E5E5"> we track and get up</font>

554
00:20:36,390 --> 00:20:41,100
<font color="#CCCCCC">almost</font><font color="#E5E5E5"> six times all this while the size</font>

555
00:20:39,330 --> 00:20:42,179
of the team was<font color="#E5E5E5"> the same the humans who</font>

556
00:20:41,100 --> 00:20:43,469
were<font color="#CCCCCC"> actually eventually</font><font color="#E5E5E5"> doing the</font>

557
00:20:42,180 --> 00:20:45,600
things<font color="#CCCCCC"> so</font><font color="#E5E5E5"> we still have four people in</font>

558
00:20:43,470 --> 00:20:48,240
<font color="#E5E5E5">the team we had four</font><font color="#CCCCCC"> people</font><font color="#E5E5E5"> three years</font>

559
00:20:45,600 --> 00:20:49,560
ago when we<font color="#CCCCCC"> started while we track</font><font color="#E5E5E5"> seven</font>

560
00:20:48,240 --> 00:20:51,150
or eight<font color="#CCCCCC"> times more amount</font><font color="#E5E5E5"> of</font>

561
00:20:49,560 --> 00:20:54,720
information<font color="#E5E5E5"> and it's only possible</font>

562
00:20:51,150 --> 00:20:56,550
because of the machine learning<font color="#E5E5E5"> it also</font>

563
00:20:54,720 --> 00:20:58,880
accelerated vulnerability identification

564
00:20:56,550 --> 00:21:01,740
in certain<font color="#E5E5E5"> languages</font><font color="#CCCCCC"> so for</font><font color="#E5E5E5"> example</font>

565
00:20:58,880 --> 00:21:03,450
<font color="#E5E5E5">golang so if you try and go to NVDA</font><font color="#CCCCCC"> and</font>

566
00:21:01,740 --> 00:21:06,390
try to search<font color="#CCCCCC"> for a goal library which</font>

567
00:21:03,450 --> 00:21:08,280
has a<font color="#CCCCCC"> 1 TT you won't find</font><font color="#E5E5E5"> that many but</font>

568
00:21:06,390 --> 00:21:10,530
when we added<font color="#CCCCCC"> support for golang we were</font>

569
00:21:08,280 --> 00:21:14,190
<font color="#CCCCCC">able to</font><font color="#E5E5E5"> identify vulnerabilities which</font>

570
00:21:10,530 --> 00:21:16,200
were fixed from commits we added like 87

571
00:21:14,190 --> 00:21:18,570
of<font color="#E5E5E5"> them and also from issues so people</font>

572
00:21:16,200 --> 00:21:20,340
reporting wonder abilities on projects

573
00:21:18,570 --> 00:21:24,270
or libraries<font color="#E5E5E5"> in golang so we go we</font>

574
00:21:20,340 --> 00:21:26,399
identified 33<font color="#CCCCCC"> of them</font><font color="#E5E5E5"> so in the current</font>

575
00:21:24,270 --> 00:21:28,050
system<font color="#E5E5E5"> when you are tracking bug reports</font>

576
00:21:26,400 --> 00:21:30,120
we<font color="#CCCCCC"> are</font><font color="#E5E5E5"> able to</font><font color="#CCCCCC"> identify</font><font color="#E5E5E5"> bond abilities</font>

577
00:21:28,050 --> 00:21:33,149
before<font color="#CCCCCC"> they are even</font><font color="#E5E5E5"> fixed so typically</font>

578
00:21:30,120 --> 00:21:34,919
they<font color="#CCCCCC"> are published on some bug report</font>

579
00:21:33,150 --> 00:21:41,340
<font color="#E5E5E5">like</font><font color="#CCCCCC"> Jer abhorred or on the</font><font color="#E5E5E5"> github</font>

580
00:21:34,920 --> 00:21:43,770
issues page<font color="#E5E5E5"> so why do we do this so</font>

581
00:21:41,340 --> 00:21:46,080
what's the<font color="#E5E5E5"> conclusion from all of this</font>

582
00:21:43,770 --> 00:21:47,879
right<font color="#E5E5E5"> so starting off</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> very small</font>

583
00:21:46,080 --> 00:21:51,840
<font color="#E5E5E5">team of three to four people manually</font>

584
00:21:47,880 --> 00:21:53,430
trying to triage<font color="#CCCCCC"> this data today so</font><font color="#E5E5E5"> I</font>

585
00:21:51,840 --> 00:21:55,500
took<font color="#E5E5E5"> the screenshot earlier today we</font>

586
00:21:53,430 --> 00:21:57,960
have<font color="#E5E5E5"> almost five thousand eight hundred</font>

587
00:21:55,500 --> 00:22:01,320
<font color="#E5E5E5">wonder abilities which</font><font color="#CCCCCC"> are being curated</font>

588
00:21:57,960 --> 00:22:02,820
<font color="#E5E5E5">across</font><font color="#CCCCCC"> ten</font><font color="#E5E5E5"> different languages and we</font>

589
00:22:01,320 --> 00:22:04,290
<font color="#CCCCCC">still have the</font><font color="#E5E5E5"> same number</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> people in</font>

590
00:22:02,820 --> 00:22:07,439
the team so the only way<font color="#E5E5E5"> we could scale</font>

591
00:22:04,290 --> 00:22:09,720
<font color="#E5E5E5">the team beyond the initial</font><font color="#CCCCCC"> work was</font>

592
00:22:07,440 --> 00:22:12,420
through<font color="#E5E5E5"> machine learning and that's kind</font>

593
00:22:09,720 --> 00:22:14,250
of the<font color="#CCCCCC"> key insight for us and the way we</font>

594
00:22:12,420 --> 00:22:16,080
evaluated of a model or made<font color="#CCCCCC"> trade-offs</font>

595
00:22:14,250 --> 00:22:17,880
<font color="#E5E5E5">was also based on that how much of the</font>

596
00:22:16,080 --> 00:22:20,070
human time can be<font color="#E5E5E5"> reduced while</font>

597
00:22:17,880 --> 00:22:21,870
maintaining the<font color="#E5E5E5"> same amount of recall or</font>

598
00:22:20,070 --> 00:22:23,879
precision<font color="#E5E5E5"> so that's kind of the thought</font>

599
00:22:21,870 --> 00:22:25,739
behind<font color="#E5E5E5"> it so as of today we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> working</font>

600
00:22:23,880 --> 00:22:26,820
on<font color="#CCCCCC"> improving our models like I said we</font>

601
00:22:25,740 --> 00:22:28,590
do retraining every week

602
00:22:26,820 --> 00:22:30,600
there are some<font color="#CCCCCC"> features which we did not</font>

603
00:22:28,590 --> 00:22:32,309
<font color="#E5E5E5">consider for</font><font color="#CCCCCC"> example</font><font color="#E5E5E5"> for commits we</font>

604
00:22:30,600 --> 00:22:33,779
discard<font color="#E5E5E5"> the most important information</font>

605
00:22:32,309 --> 00:22:35,820
<font color="#E5E5E5">in the commit that</font><font color="#CCCCCC"> is the actual code</font>

606
00:22:33,779 --> 00:22:38,490
change<font color="#E5E5E5"> so today we are working on</font>

607
00:22:35,820 --> 00:22:40,350
various ways of<font color="#E5E5E5"> improving that</font><font color="#CCCCCC"> and then</font>

608
00:22:38,490 --> 00:22:42,509
hopefully next year I'll come back and

609
00:22:40,350 --> 00:22:45,330
<font color="#E5E5E5">I'll tell you how that went</font>

610
00:22:42,509 --> 00:22:47,669
that's it<font color="#CCCCCC"> I think that's</font><font color="#E5E5E5"> my last slide</font>

611
00:22:45,330 --> 00:22:49,620
<font color="#CCCCCC">so</font><font color="#E5E5E5"> thank you for your time</font><font color="#CCCCCC"> we are</font>

612
00:22:47,669 --> 00:22:51,450
actively<font color="#E5E5E5"> hiring in Singapore a lot of</font>

613
00:22:49,620 --> 00:22:53,279
<font color="#E5E5E5">positions so I would like</font><font color="#CCCCCC"> to invite</font><font color="#E5E5E5"> you</font>

614
00:22:51,450 --> 00:23:01,500
<font color="#CCCCCC">to apply</font><font color="#E5E5E5"> otherwise thank you for your</font>

615
00:22:53,279 --> 00:23:02,490
time<font color="#CCCCCC"> and</font><font color="#E5E5E5"> thanks thank you thank you are</font>

616
00:23:01,500 --> 00:23:07,649
<font color="#E5E5E5">there any more</font><font color="#CCCCCC"> questions from the</font>

617
00:23:02,490 --> 00:23:10,580
<font color="#E5E5E5">audience so</font><font color="#CCCCCC"> yeah we're a good approach</font>

618
00:23:07,649 --> 00:23:13,860
and<font color="#E5E5E5"> the question is what's your hardware</font>

619
00:23:10,580 --> 00:23:15,600
configuration<font color="#E5E5E5"> like how</font><font color="#CCCCCC"> many GPUs CPUs</font>

620
00:23:13,860 --> 00:23:17,189
and so on if you<font color="#CCCCCC"> looked at</font><font color="#E5E5E5"> the size of</font>

621
00:23:15,600 --> 00:23:18,269
<font color="#E5E5E5">data it's very small and all of the</font>

622
00:23:17,190 --> 00:23:19,559
training we don't use any deep learning

623
00:23:18,269 --> 00:23:21,659
<font color="#E5E5E5">so it's all done</font>

624
00:23:19,559 --> 00:23:23,100
AWS machines<font color="#CCCCCC"> I mean there are beefy</font>

625
00:23:21,659 --> 00:23:25,500
machines<font color="#E5E5E5"> but they don't have any GPU</font>

626
00:23:23,100 --> 00:23:27,629
<font color="#E5E5E5">okay it does take us some</font><font color="#CCCCCC"> time to</font>

627
00:23:25,500 --> 00:23:29,190
<font color="#E5E5E5">retrain today so when we started it</font><font color="#CCCCCC"> was</font>

628
00:23:27,629 --> 00:23:30,629
<font color="#CCCCCC">okay so there are cases when we do the</font>

629
00:23:29,190 --> 00:23:33,899
weekly retraining it might take up<font color="#CCCCCC"> to a</font>

630
00:23:30,629 --> 00:23:35,939
day but we<font color="#E5E5E5"> haven't yet invested properly</font>

631
00:23:33,899 --> 00:23:38,610
in setting up you know good

632
00:23:35,940 --> 00:23:44,070
<font color="#E5E5E5">infrastructure to really retrain</font><font color="#CCCCCC"> faster</font>

633
00:23:38,610 --> 00:23:48,360
<font color="#CCCCCC">okay good things are there any more</font>

634
00:23:44,070 --> 00:23:50,939
questions<font color="#E5E5E5"> okay in that</font><font color="#CCCCCC"> case please keep</font>

635
00:23:48,360 --> 00:23:52,258
in mind<font color="#E5E5E5"> that</font><font color="#CCCCCC"> assign</font><font color="#E5E5E5"> care will be around</font>

636
00:23:50,940 --> 00:23:53,730
for<font color="#E5E5E5"> the rest of the day so if you have</font>

637
00:23:52,259 --> 00:23:56,250
any<font color="#E5E5E5"> more questions you can always ask</font>

638
00:23:53,730 --> 00:23:57,690
<font color="#E5E5E5">him later</font><font color="#CCCCCC"> and with that I would like to</font>

639
00:23:56,250 --> 00:23:59,100
thank you again<font color="#E5E5E5"> very much for</font><font color="#CCCCCC"> your talk</font>

640
00:23:57,690 --> 00:23:59,950
<font color="#CCCCCC">asan</font><font color="#E5E5E5"> getting give it up one more</font><font color="#CCCCCC"> time</font>

641
00:23:59,100 --> 00:24:03,149
please

642
00:23:59,950 --> 00:24:03,150
[Applause]

