1
00:00:11,090 --> 00:00:15,590
yes great rate so

2
00:00:15,590 --> 00:00:16,660
the

3
00:00:16,660 --> 00:00:17,500
droid out the

4
00:00:17,500 --> 00:00:21,300
see the well I'm a I'm a frenzy
investigators so I

5
00:00:21,300 --> 00:00:24,720
I guess I'm a lil I have a little bit
different dog then

6
00:00:24,720 --> 00:00:28,240
most of today and tomorrow desist not
about

7
00:00:28,240 --> 00:00:32,020
really about hacking this is more about
you mister gation

8
00:00:32,020 --> 00:00:36,210
a on a device in this case Android
devices

9
00:00:36,210 --> 00:00:39,629
I mean my team we met we worked on the

10
00:00:39,629 --> 00:00:43,269
a digital forensics research workshop
challenge a lost year

11
00:00:43,269 --> 00:00:46,290
said really cool challenge I and when
I'm

12
00:00:46,290 --> 00:00:49,320
is interested in this every I can really
advice to join

13
00:00:49,320 --> 00:00:55,180
this year or next year I it was about an
investigation on to Android devices and

14
00:00:55,180 --> 00:00:58,079
today I want to take you through the
challenge how we sold it

15
00:00:58,079 --> 00:01:02,950
I it's partly about the challenge itself
but also about

16
00:01:02,950 --> 00:01:08,060
the interesting aspect of investigations
on Android devices

17
00:01:08,060 --> 00:01:11,070
that budgets so I'm liable

18
00:01:11,070 --> 00:01:14,380
probably way too many slides today I'm

19
00:01:14,380 --> 00:01:18,250
I'm mmm up try to make base to

20
00:01:18,250 --> 00:01:22,510
got it all put into an hour so I hope
that's gonna work

21
00:01:22,510 --> 00:01:26,729
I'm well anyway if you have any
questions don't hesitate to

22
00:01:26,729 --> 00:01:32,000
to raise your hand or Yen Press may be
room for questions I hope

23
00:01:32,000 --> 00:01:35,590
so let's get started so the challenge
starts like

24
00:01:35,590 --> 00:01:39,470
like this I there is a suspicious death

25
00:01:39,470 --> 00:01:43,549
as in the guy named all more be all
refer to him as that guy because thats

26
00:01:43,549 --> 00:01:47,430
easier for the resolute parka and my
experience is that referring to it as

27
00:01:47,430 --> 00:01:48,520
that guy is

28
00:01:48,520 --> 00:01:51,990
better for dissociation in story so

29
00:01:51,990 --> 00:01:55,850
I am well he's found dead with a bullet
in the head and beside him laser in

30
00:01:55,850 --> 00:01:57,579
Android 2.1 phone

31
00:01:57,579 --> 00:02:01,450
the question is what happened here is
this a suicide or did something else

32
00:02:01,450 --> 00:02:02,060
happen

33
00:02:02,060 --> 00:02:05,119
and there's another case at the same
time

34
00:02:05,119 --> 00:02:09,769
and I'm at a company called swift logic
where two people were

35
00:02:09,769 --> 00:02:13,860
they'll they experienced a data breach
and one of the employees

36
00:02:13,860 --> 00:02:17,010
built although court switch with logic
dude

37
00:02:17,010 --> 00:02:22,170
he is well they have reasons to believe
that he is involved and he would maybe

38
00:02:22,170 --> 00:02:24,720
have leaked the day the true is Android
post so

39
00:02:24,720 --> 00:02:28,830
he willingly guess is prone for
investigations now that's the start of

40
00:02:28,830 --> 00:02:31,069
the case and now the question is is this
guy

41
00:02:31,069 --> 00:02:34,349
guilty of data leakage or did something
else happen

42
00:02:34,349 --> 00:02:39,360
well the first thing you do when you get

43
00:02:39,360 --> 00:02:43,500
an Android phone as an investigator is
you want to perform the data acquisition

44
00:02:43,500 --> 00:02:46,470
so you want to get the date out in a
forensically sound manner

45
00:02:46,470 --> 00:02:49,480
a well what are the interesting

46
00:02:49,480 --> 00:02:53,580
storage areas in a smart phone Android
phone

47
00:02:53,580 --> 00:02:56,680
a the memory card is one thing of course

48
00:02:56,680 --> 00:03:00,780
on the other main thing is the internal
storage

49
00:03:00,780 --> 00:03:03,900
and well and

50
00:03:03,900 --> 00:03:08,110
most smartphones today that's now and
flesh storage and it has multiple

51
00:03:08,110 --> 00:03:08,989
partitions

52
00:03:08,989 --> 00:03:13,700
I or Android phones the most intricate
interesting partitions are in this case

53
00:03:13,700 --> 00:03:14,319
the

54
00:03:14,319 --> 00:03:17,670
cache partition and the user data
partition whether

55
00:03:17,670 --> 00:03:23,540
user data is stored so

56
00:03:23,540 --> 00:03:26,970
I'll this was actually already done

57
00:03:26,970 --> 00:03:32,280
at the start of a challenge so they
delivered us the images

58
00:03:32,280 --> 00:03:34,910
which day would have acquired in a
forensically sound manner

59
00:03:34,910 --> 00:03:38,000
they did describe how they acquired

60
00:03:38,000 --> 00:03:42,630
offer a first case but that guy's phone
they routed the device

61
00:03:42,630 --> 00:03:45,880
and they use the well-known method DD

62
00:03:45,880 --> 00:03:51,030
to just make a data dump of the entity
block device

63
00:03:51,030 --> 00:03:54,700
a.m. is as most you probably know the
Android

64
00:03:54,700 --> 00:03:59,050
is based on Linux and and and flesh is
represented as an end to the block

65
00:03:59,050 --> 00:03:59,800
device

66
00:03:59,800 --> 00:04:03,070
Munich subsystem so a

67
00:04:03,070 --> 00:04:06,600
that dumb to the date of the block
device using the

68
00:04:06,600 --> 00:04:09,660
to an image file on a memory card

69
00:04:09,660 --> 00:04:13,540
later they pulled a memory card out and
they just got the image to a analysts

70
00:04:13,540 --> 00:04:14,000
system

71
00:04:14,000 --> 00:04:18,329
on this is not a really good thing
because

72
00:04:18,330 --> 00:04:22,880
the if you use DDT on MTD devices

73
00:04:22,880 --> 00:04:26,870
and you use it on the block layer you
forget to take

74
00:04:26,870 --> 00:04:30,350
with you the out-of-band bites of a
flash memory

75
00:04:30,350 --> 00:04:34,560
I'll get to that a little further in the
presentation what the out-of-band bites

76
00:04:34,560 --> 00:04:37,770
exactly why you need them but

77
00:04:37,770 --> 00:04:41,190
this is one important failure in the
acquisition phase

78
00:04:41,190 --> 00:04:44,670
now for the second thus with logic dude

79
00:04:44,670 --> 00:04:47,770
they were the device and they use the
correct method

80
00:04:47,770 --> 00:04:52,230
a and that is meant don't on and on

81
00:04:52,230 --> 00:04:56,420
actually you Dom all the bites from an
MTD device

82
00:04:56,420 --> 00:05:00,150
and you do it from them to the device
directly so not from and

83
00:05:00,150 --> 00:05:04,600
block which that cause you to take with
you the out-of-band bites

84
00:05:04,600 --> 00:05:08,390
also and a in this case actually
transfer did

85
00:05:08,390 --> 00:05:11,900
a.m. over the be built in Port

86
00:05:11,900 --> 00:05:18,900
to the system and they brought it back
to an image file so

87
00:05:20,120 --> 00:05:23,910
result issue we got delivered a lot of
images for each

88
00:05:23,910 --> 00:05:27,169
petition on the phone we get an image

89
00:05:27,169 --> 00:05:31,560
I am we focused our investigations

90
00:05:31,560 --> 00:05:35,790
on the memory card on the user data
package partition because that is the

91
00:05:35,790 --> 00:05:37,760
position where the user data is stored

92
00:05:37,760 --> 00:05:41,050
the cache partition is a position it is
used to

93
00:05:41,050 --> 00:05:44,770
temporarily store Stoff like a for
example if you visit web pages

94
00:05:44,770 --> 00:05:49,979
a catching is stored there and there's
also a system partition

95
00:05:49,979 --> 00:05:54,100
a we didn't really investigate the
system partition but it can be

96
00:05:54,100 --> 00:05:58,090
interesting in other investigations for
example if you want to investigate

97
00:05:58,090 --> 00:06:01,740
more false forms of malware which may
alter a

98
00:06:01,740 --> 00:06:05,780
stop on the system partition which was
not the case in this challenge so

99
00:06:05,780 --> 00:06:09,870
we skip that we focused on the user data
petition and memory card

100
00:06:09,870 --> 00:06:13,370
so where do you start well the

101
00:06:13,370 --> 00:06:17,940
we have a lot of tools in the present
investigation area

102
00:06:17,940 --> 00:06:23,870
I am the maybe not so known to you but I
in case and forensic Toolkit are the

103
00:06:23,870 --> 00:06:24,450
most known

104
00:06:24,450 --> 00:06:29,330
tools which are actually just really big
so for packages that you can put in an

105
00:06:29,330 --> 00:06:29,890
image

106
00:06:29,890 --> 00:06:33,650
and it will be coded for you and index
it for you

107
00:06:33,650 --> 00:06:37,710
and if you fall kind of cool features
which you can directly use

108
00:06:37,710 --> 00:06:40,870
I'm these work

109
00:06:40,870 --> 00:06:44,960
on images with known file systems a

110
00:06:44,960 --> 00:06:48,440
the SD card the memory card is image is

111
00:06:48,440 --> 00:06:52,000
a former as for 32 so that's unknown
filesystem

112
00:06:52,000 --> 00:06:56,080
we could analyze we did analyze the as
the guard with that no

113
00:06:56,080 --> 00:06:59,539
toolkits we got a lot of information
from there into space

114
00:06:59,539 --> 00:07:02,990
and we used carving methods

115
00:07:02,990 --> 00:07:07,870
to a to carve out information from the

116
00:07:07,870 --> 00:07:13,100
internal partitions which were not
format it with unknown filesystem

117
00:07:13,100 --> 00:07:16,160
they will forward the ops 2 I'll come to
that later

118
00:07:16,160 --> 00:07:20,180
but a if you don't know the format of
the file system you can still use

119
00:07:20,180 --> 00:07:21,940
carving techniques to try the car

120
00:07:21,940 --> 00:07:24,979
out known files based on the file
signatures

121
00:07:24,979 --> 00:07:30,460
so we use the traditional fall carving
tools likes call for info to wreck

122
00:07:30,460 --> 00:07:33,760
to try to get the most out of the role

123
00:07:33,760 --> 00:07:40,020
images see if we can get any useful they
doubt of that that didn't go so well and

124
00:07:40,020 --> 00:07:40,760
we get to that

125
00:07:40,760 --> 00:07:45,190
later to and what we did get fined under
that guise device

126
00:07:45,190 --> 00:07:50,870
a.m. on the SD cards you see that our
PDF files stored in the download folder

127
00:07:50,870 --> 00:07:52,650
with the download folder is

128
00:07:52,650 --> 00:07:56,560
as you would have guessed before where
files gets bored

129
00:07:56,560 --> 00:08:01,180
when you download them from a webpage
but they complain

130
00:08:01,180 --> 00:08:05,680
a schematic solve swift logic that's
interesting because

131
00:08:05,680 --> 00:08:10,710
a what has that got to do with with
logic

132
00:08:10,710 --> 00:08:14,770
so this was the first hand that these
cases are connected

133
00:08:14,770 --> 00:08:18,950
a.m. so does with logic schematic files

134
00:08:18,950 --> 00:08:22,340
on the phone of the dead guy

135
00:08:22,340 --> 00:08:25,680
I'm we also caught for HTML files

136
00:08:25,680 --> 00:08:28,890
HTML files on nice files to carve too
because

137
00:08:28,890 --> 00:08:31,890
you can pretty much based on the markers
in HTML files

138
00:08:31,890 --> 00:08:36,150
a carve out really nice complete files

139
00:08:36,150 --> 00:08:39,159
every found this particularly
interesting

140
00:08:39,159 --> 00:08:42,529
page

141
00:08:42,529 --> 00:08:48,040
this was found in the cache partition

142
00:08:48,040 --> 00:08:52,270
this appears to be a a directory listing

143
00:08:52,270 --> 00:08:56,320
from Apache web server the nice thing is
we

144
00:08:56,320 --> 00:09:00,310
we can see the IP address

145
00:09:00,310 --> 00:09:04,820
so apparently the dead guy visited an
Apache their listing

146
00:09:04,820 --> 00:09:08,360
a at the specified IP address

147
00:09:08,360 --> 00:09:11,800
in the directory as ice and saw their

148
00:09:11,800 --> 00:09:15,560
9 PDF files the

149
00:09:15,560 --> 00:09:20,610
and this of course matches with the PDF
files we found in the download folder

150
00:09:20,610 --> 00:09:23,920
so that would make sense he visits this
page

151
00:09:23,920 --> 00:09:28,220
downloads Egypt's PDF files they get
stored in the download folder

152
00:09:28,220 --> 00:09:32,230
I officially we couldn't reach the HTML
page

153
00:09:32,230 --> 00:09:36,529
yeah life was protected by HTX is Megan
-ism

154
00:09:36,529 --> 00:09:42,000
and that we had to keep it real so
liking the page was not allowed

155
00:09:42,000 --> 00:09:46,589
a so so that's the

156
00:09:46,589 --> 00:09:50,170
that's an interesting finding and I'm so
some Hall

157
00:09:50,170 --> 00:09:53,460
PDF files France with logic

158
00:09:53,460 --> 00:09:59,560
got send do this web server page and
were downloaded by that that guy

159
00:09:59,560 --> 00:10:03,370
so those were first findings we actually
got without going to more advanced

160
00:10:03,370 --> 00:10:05,580
techniques so we use the traditional

161
00:10:05,580 --> 00:10:09,080
carving tools and traditional forensic
Toolkit

162
00:10:09,080 --> 00:10:12,520
to get these findings so we got a long
way

163
00:10:12,520 --> 00:10:15,810
but then there's still the internal
memory

164
00:10:15,810 --> 00:10:20,560
for modeling jobs a.m. which keeps a lot
of data to itself because

165
00:10:20,560 --> 00:10:25,370
we couldn't get through that data
because that traditional carving tools

166
00:10:25,370 --> 00:10:28,640
don't really perform well and are

167
00:10:28,640 --> 00:10:31,670
toolkits don't understand the office
file system

168
00:10:31,670 --> 00:10:34,750
so if you load it into that all good the
seat is big ball

169
00:10:34,750 --> 00:10:38,029
update I and it doesn't really
reconstruct the file system so you can

170
00:10:38,029 --> 00:10:40,270
go through the directory

171
00:10:40,270 --> 00:10:46,339
and look at the files themselves

172
00:10:46,339 --> 00:10:49,580
so I am even though our

173
00:10:49,580 --> 00:10:54,760
toolkits don't understand the Ozzfest
file system there are of course methods

174
00:10:54,760 --> 00:10:58,290
to a reconstruct the apps filesystem

175
00:10:58,290 --> 00:11:02,350
just need to put a little bit of work in
that

176
00:11:02,350 --> 00:11:06,260
so terrible more ways to Rome a someone
is

177
00:11:06,260 --> 00:11:10,950
you can use forensic mobile forensic
tool kits which are expensive

178
00:11:10,950 --> 00:11:14,860
a.m. so we wanted to keep it with
methods

179
00:11:14,860 --> 00:11:19,540
which are free or I don't not too
expensive so this was not an option

180
00:11:19,540 --> 00:11:24,310
you could use the Android emulator a
which actually also works with

181
00:11:24,310 --> 00:11:27,970
data images a.m. however

182
00:11:27,970 --> 00:11:32,470
the Android emulator doesn't really like
foreign images

183
00:11:32,470 --> 00:11:36,279
you can just tell the emulator okay I
create a Android 2.1

184
00:11:36,279 --> 00:11:40,140
device and here are the user data image
in the system image

185
00:11:40,140 --> 00:11:43,580
because it will start complaining that
the doesn't match with what

186
00:11:43,580 --> 00:11:47,300
what is it actually has in its boot
image for example

187
00:11:47,300 --> 00:11:51,210
so that needs some tweaking before you
got it to work the easiest method was to

188
00:11:51,210 --> 00:11:52,149
just

189
00:11:52,149 --> 00:11:55,420
loads the IAF's to support into arlene X

190
00:11:55,420 --> 00:11:59,089
colonel because like I said the Android
systems are

191
00:11:59,089 --> 00:12:03,200
just based on Linux and a Happy of
support so

192
00:12:03,200 --> 00:12:10,200
it should be possible to just low then
and it is and it's not too hard

193
00:12:10,880 --> 00:12:14,540
um well the first thing you need to do
is load some necessary kernel modules

194
00:12:14,540 --> 00:12:16,630
the into the medium to the block

195
00:12:16,630 --> 00:12:20,550
and a you need a Mann same to simulate

196
00:12:20,550 --> 00:12:25,150
a man device an early exit sub subsystem

197
00:12:25,150 --> 00:12:28,710
a well with the way you include the

198
00:12:28,710 --> 00:12:32,900
men same module you need to make sure
you have the right parameters to create

199
00:12:32,900 --> 00:12:36,950
to simulate a man device with the
correct size

200
00:12:36,950 --> 00:12:41,250
and page size and you're a size so this
is one example we use

201
00:12:41,250 --> 00:12:45,970
you can tweak it to create a man
divisive to right-size

202
00:12:45,970 --> 00:12:49,080
well then a we wrote the bites

203
00:12:49,080 --> 00:12:53,830
from our image to the simulated then
devise and here you have to mind that

204
00:12:53,830 --> 00:12:57,160
the with the image all

205
00:12:57,160 --> 00:13:02,050
a this with logic I am we did have the
out-of-band bytes

206
00:13:02,050 --> 00:13:05,450
and if you write it to assimilate men
device should make sure that you write

207
00:13:05,450 --> 00:13:06,520
the out-of-band bites

208
00:13:06,520 --> 00:13:10,960
or else you still cannot reconstruct the
office file system

209
00:13:10,960 --> 00:13:15,420
so use the rights which is there a well
the lost thing is to

210
00:13:15,420 --> 00:13:19,260
a download to your office to package

211
00:13:19,260 --> 00:13:22,920
it's out there and you can just

212
00:13:22,920 --> 00:13:29,920
compile it and inserted into go

213
00:13:30,410 --> 00:13:34,740
and while I there you go so you mounted

214
00:13:34,740 --> 00:13:38,130
with yours too and here we see the
example of

215
00:13:38,130 --> 00:13:42,410
I'll for user data petition

216
00:13:42,410 --> 00:13:49,410
mounted

217
00:13:52,519 --> 00:13:57,550
now that we have a amount to defy so we
actually reconstructed the filesystem

218
00:13:57,550 --> 00:14:01,870
it's useful to start for searching
through the files we could have searched

219
00:14:01,870 --> 00:14:03,319
through the image of course but

220
00:14:03,319 --> 00:14:06,740
if you found some interesting strings in
there

221
00:14:06,740 --> 00:14:10,019
you still have to find the origin of
stream so what

222
00:14:10,019 --> 00:14:13,370
is that global data where found it's
being actually representing

223
00:14:13,370 --> 00:14:17,139
so now that we have reconstructed the
filesystem it easy to search through it

224
00:14:17,139 --> 00:14:17,750
and see

225
00:14:17,750 --> 00:14:23,129
in which follow a certain string belongs
so in this case be found at the IP

226
00:14:23,129 --> 00:14:23,939
address

227
00:14:23,939 --> 00:14:27,410
and I'm which is interesting because
that's the IP address

228
00:14:27,410 --> 00:14:30,569
all the web page we saw and that guys
phone

229
00:14:30,569 --> 00:14:34,100
and we found that IP address on the
streets like a beautiful

230
00:14:34,100 --> 00:14:38,149
so that's interesting what is that IP
address doing that

231
00:14:38,149 --> 00:14:42,110
we founded in a I'm adult cache file

232
00:14:42,110 --> 00:14:47,240
the Android and writes packages

233
00:14:47,240 --> 00:14:51,509
programs applications run on a delving
virtual machine

234
00:14:51,509 --> 00:14:55,449
and for each application a cache files
created

235
00:14:55,449 --> 00:14:58,480
which catches for examples used streams

236
00:14:58,480 --> 00:15:01,519
and we founded

237
00:15:01,519 --> 00:15:07,980
in a cache file of this application com
dot Andrea

238
00:15:07,980 --> 00:15:11,189
love mm right

239
00:15:11,189 --> 00:15:14,850
well that's interesting first wise

240
00:15:14,850 --> 00:15:18,000
the IP address in there and why is there
a package name

241
00:15:18,000 --> 00:15:22,750
and Rio stuff Android I don't know if
that was a

242
00:15:22,750 --> 00:15:25,980
actually a mistake of the guys who
created the challenge or the that was

243
00:15:25,980 --> 00:15:30,029
somebody who just a thoughtful let's
make it easier for them to make them

244
00:15:30,029 --> 00:15:32,209
recognize a file that's not supposed to
be there

245
00:15:32,209 --> 00:15:37,949
okay so we have a new lead

246
00:15:37,949 --> 00:15:42,149
let's find out what is

247
00:15:42,149 --> 00:15:46,939
a what this application is calm down and
reorder them and actually is

248
00:15:46,939 --> 00:15:51,470
and what keeps a listing of all
installed applications whenever you

249
00:15:51,470 --> 00:15:52,120
install

250
00:15:52,120 --> 00:15:57,379
a package a its registered in an XML
file and it leads to certain

251
00:15:57,379 --> 00:16:01,480
information about it like for example on
the which use ready its runs

252
00:16:01,480 --> 00:16:04,529
I am when it is installed

253
00:16:04,529 --> 00:16:08,790
now that's interesting because we can
see that's install on the 5th of May

254
00:16:08,790 --> 00:16:09,980
2011

255
00:16:09,980 --> 00:16:13,660
and I didn't include the whole time line

256
00:16:13,660 --> 00:16:17,050
but a fifth of May was a date when a

257
00:16:17,050 --> 00:16:21,050
this with what you do actually bought
his phone at the phone store

258
00:16:21,050 --> 00:16:25,079
and a this package was installed just
before he picked up the phone

259
00:16:25,079 --> 00:16:29,480
at the phone store so that's an
interesting find what's more what you

260
00:16:29,480 --> 00:16:31,429
see here is the permissions

261
00:16:31,429 --> 00:16:34,639
I am all Android application its

262
00:16:34,639 --> 00:16:38,910
all Android applications can only do
what they are permitted to do

263
00:16:38,910 --> 00:16:43,259
by what they define to be need to be
needed on permissions

264
00:16:43,259 --> 00:16:47,899
so I'll whenever you create an
application will include a manifest file

265
00:16:47,899 --> 00:16:48,910
we get to that later

266
00:16:48,910 --> 00:16:53,380
and it lists the permissions the thing
the things the application would like to

267
00:16:53,380 --> 00:16:53,779
do

268
00:16:53,779 --> 00:16:58,860
so that's when you when you install an
application you see the listing all

269
00:16:58,860 --> 00:17:03,069
a one assault supplication it need
services that goes for money

270
00:17:03,069 --> 00:17:07,459
needs an internet connection and then
when you click accept it gets installed

271
00:17:07,459 --> 00:17:10,799
any permissions elicited in this package
is so thick smell

272
00:17:10,799 --> 00:17:15,309
far but we also see around the same time

273
00:17:15,309 --> 00:17:19,409
just a minute before there's an
application called conduct said

274
00:17:19,409 --> 00:17:22,799
the W be the W dot as a mess provider

275
00:17:22,799 --> 00:17:26,299
which is also install a

276
00:17:26,299 --> 00:17:31,120
okay that's interesting and especially
when you look at

277
00:17:31,120 --> 00:17:35,419
at the permissions apparently this is an
application that wants permission to

278
00:17:35,419 --> 00:17:36,780
send and receive

279
00:17:36,780 --> 00:17:43,780
X-files text messages sorry okay so now
we want to start analyzing the

280
00:17:46,530 --> 00:17:49,669
package the application itself I

281
00:17:49,669 --> 00:17:53,640
what you can do in life and i was just
so just get out %um later a

282
00:17:53,640 --> 00:17:56,770
get the package file the application

283
00:17:56,770 --> 00:18:00,570
fall from your images loaded into the
emulator and run it

284
00:18:00,570 --> 00:18:04,010
and I DM later allows you to monitor or

285
00:18:04,010 --> 00:18:07,330
a certain activity and the emulator by
for example

286
00:18:07,330 --> 00:18:12,350
watching log files for people messages
you can use Wireshark to intercept

287
00:18:12,350 --> 00:18:16,260
all Internet communication that it uses
and analyze it

288
00:18:16,260 --> 00:18:22,250
and there's also a dole victory but
money for which you can use to monitor

289
00:18:22,250 --> 00:18:23,610
the

290
00:18:23,610 --> 00:18:28,570
the activity of your application so for
example cheaper give it to you

291
00:18:28,570 --> 00:18:32,030
or or other things

292
00:18:32,030 --> 00:18:35,440
well we mostly relied on the static
analysis

293
00:18:35,440 --> 00:18:39,350
so all that's the nice thing about

294
00:18:39,350 --> 00:18:44,780
Android applications it's that it's just
a world certain form of bytecode

295
00:18:44,780 --> 00:18:48,530
which is a pretty well be compiled all

296
00:18:48,530 --> 00:18:52,010
a in this case especially because

297
00:18:52,010 --> 00:18:55,309
it was not obfuscated so that's very
nice of you

298
00:18:55,309 --> 00:18:59,340
decompile it you can pretty much look
through the source code as if it was the

299
00:18:59,340 --> 00:19:02,260
original source code

300
00:19:02,260 --> 00:19:05,320
in so you retrieve the

301
00:19:05,320 --> 00:19:08,679
the the AP case and the epic a is that
the package file which is used by

302
00:19:08,679 --> 00:19:09,340
Android

303
00:19:09,340 --> 00:19:13,450
to for the application so affected
Follett recompense

304
00:19:13,450 --> 00:19:17,690
the clauses up the application actual
bytecode

305
00:19:17,690 --> 00:19:21,040
it also has been manifest file which
actually else

306
00:19:21,040 --> 00:19:24,639
the system okay at this is the
application

307
00:19:24,639 --> 00:19:27,770
this is the permission to use is a it

308
00:19:27,770 --> 00:19:31,120
triggers on a these events

309
00:19:31,120 --> 00:19:35,500
that sort of stuff and I'm you can get
that Android manifest file

310
00:19:35,500 --> 00:19:38,899
out but it's a binary XML so we need to
call for its first in their tools for

311
00:19:38,899 --> 00:19:41,750
that for example the appt to which you
can use

312
00:19:41,750 --> 00:19:46,950
over to a readable XML so now we can re
the Android manifest policy okay what's

313
00:19:46,950 --> 00:19:49,419
the invention of this application

314
00:19:49,419 --> 00:19:52,700
I'll show you that in a minute and

315
00:19:52,700 --> 00:19:57,149
a there is the adult p.m.

316
00:19:57,149 --> 00:20:00,230
text file which I sexually I a

317
00:20:00,230 --> 00:20:03,790
a set of class files and the dole ticket
p.m.

318
00:20:03,790 --> 00:20:07,960
operates a little bit differently than
the regularly offer virtual machine

319
00:20:07,960 --> 00:20:11,159
so you need if you want to analyze its
offered as

320
00:20:11,159 --> 00:20:14,520
to a regular jar file first I use

321
00:20:14,520 --> 00:20:17,840
used x2 jar for that and the jar file
can be

322
00:20:17,840 --> 00:20:21,260
be compiled pretty well using for
example that it will be or any other

323
00:20:21,260 --> 00:20:28,260
java Decompiler

324
00:20:30,159 --> 00:20:34,240
okay so this is the the Android manifest
file

325
00:20:34,240 --> 00:20:39,549
of the unreeled of mm so what you see
here in green is it states its

326
00:20:39,549 --> 00:20:40,409
permissions

327
00:20:40,409 --> 00:20:43,470
so what was the application want to be
able to do

328
00:20:43,470 --> 00:20:49,330
on the phone a it once to be able to
transfer and receive stuff over the

329
00:20:49,330 --> 00:20:50,000
Internet

330
00:20:50,000 --> 00:20:53,039
wants to be able to read phone state

331
00:20:53,039 --> 00:20:56,710
and phone state for example is changed
when

332
00:20:56,710 --> 00:21:00,130
an incoming call is received mornin
comin best text message

333
00:21:00,130 --> 00:21:03,409
when that happens any event is fired and

334
00:21:03,409 --> 00:21:06,620
a a its able

335
00:21:06,620 --> 00:21:09,850
now the application is able to actually
read phone state and say hey what

336
00:21:09,850 --> 00:21:10,649
happened to the phone

337
00:21:10,649 --> 00:21:13,679
orders incoming call so it can react to
that

338
00:21:13,679 --> 00:21:16,960
a Abboud completed a

339
00:21:16,960 --> 00:21:20,080
event is received so whenever somebody
boost phone

340
00:21:20,080 --> 00:21:24,289
this application response to it receive
a traitor and can start doing things

341
00:21:24,289 --> 00:21:27,929
you and whenever an outgoing call is

342
00:21:27,929 --> 00:21:31,090
is made this a

343
00:21:31,090 --> 00:21:34,340
this application which intercept the
outgoing call and

344
00:21:34,340 --> 00:21:41,340
do whatever points with you and then
there's the receivers

345
00:21:43,880 --> 00:21:48,039
and those are actually the triggers so
when you develop an Android application

346
00:21:48,039 --> 00:21:49,289
you

347
00:21:49,289 --> 00:21:52,809
you have an application actually trigger
on certain events

348
00:21:52,809 --> 00:21:56,210
and this application triggers on the

349
00:21:56,210 --> 00:22:01,100
event when the airplane mode is changed
when the boot sequence is completed

350
00:22:01,100 --> 00:22:05,559
and when the screen turns off so bennett
activates and starts doing

351
00:22:05,559 --> 00:22:10,200
soft I'm and the interesting thing is in
the bottom you see

352
00:22:10,200 --> 00:22:15,500
red that that defines a service normally
when you create an act application

353
00:22:15,500 --> 00:22:18,559
usually use activity switches just a

354
00:22:18,559 --> 00:22:21,850
screen that's good we bet that gets we
presented to the user

355
00:22:21,850 --> 00:22:26,929
when you see a service in a metric
manifest file it's more like it's back

356
00:22:26,929 --> 00:22:28,309
from service that is fun

357
00:22:28,309 --> 00:22:33,000
so this application is actually never
presented to the user just silently

358
00:22:33,000 --> 00:22:33,830
boots all

359
00:22:33,830 --> 00:22:40,830
on one of the Vans starts running in the
background upset about that

360
00:22:41,020 --> 00:22:44,190
this is the Android manifest file of a

361
00:22:44,190 --> 00:22:47,669
the combo that we provider

362
00:22:47,669 --> 00:22:52,320
as much provider I'm you also see two
receivers

363
00:22:52,320 --> 00:22:56,539
there's also no activity there's only a
service also this application just once

364
00:22:56,539 --> 00:22:57,360
in the background

365
00:22:57,360 --> 00:23:00,990
and and you see at the receiver its
receives

366
00:23:00,990 --> 00:23:06,340
intense on action send and as a mess
received so whenever

367
00:23:06,340 --> 00:23:09,649
I'm somebody fires and events

368
00:23:09,649 --> 00:23:13,620
especially meant for this at the event
was named actions and

369
00:23:13,620 --> 00:23:16,760
this application wat Sol and start doing
stuff

370
00:23:16,760 --> 00:23:20,070
whenever and as messages received

371
00:23:20,070 --> 00:23:23,030
on the phone so the vendors just
broadcast through the phone this

372
00:23:23,030 --> 00:23:26,140
application picks up the event it says
haters and as a mess receive

373
00:23:26,140 --> 00:23:29,450
I need to do something pp

374
00:23:29,450 --> 00:23:36,450
so now when we look at the condo Andrea
file we saw the triggers a certain

375
00:23:36,590 --> 00:23:37,240
events

376
00:23:37,240 --> 00:23:40,620
and you wanna know okay what does it do
when it triggers Watson what is it

377
00:23:40,620 --> 00:23:41,549
actually doing

378
00:23:41,549 --> 00:23:44,630
and well as a lot of go to just

379
00:23:44,630 --> 00:23:48,570
to coat them growth in snippet from cope
and what you see here

380
00:23:48,570 --> 00:23:54,409
see here is that it actually I'm it gets
the files from the external memory card

381
00:23:54,409 --> 00:23:57,830
it creates its own zip loss which is
actually when you look at the

382
00:23:57,830 --> 00:23:59,940
implementation of the closet actually
just

383
00:23:59,940 --> 00:24:03,380
sort of zips the files and

384
00:24:03,380 --> 00:24:07,169
and its stores the the zip in the fall

385
00:24:07,169 --> 00:24:11,130
call them and then it sends and

386
00:24:11,130 --> 00:24:15,240
the file out on you see that function
Send File

387
00:24:15,240 --> 00:24:18,850
was actually just sent it to the
Internet to the interesting thing here

388
00:24:18,850 --> 00:24:22,210
is that we have an IP address and that's
the IP address we saw it earlier

389
00:24:22,210 --> 00:24:25,370
so apparently the files a sip sent to
the

390
00:24:25,370 --> 00:24:32,330
web server we saw and you see also that
when it has sent the file that it sends

391
00:24:32,330 --> 00:24:33,649
a text message

392
00:24:33,649 --> 00:24:40,649
and that function is actually implant

393
00:24:40,919 --> 00:24:44,480
implemented in the other package the as
must provide a package we saw

394
00:24:44,480 --> 00:24:49,220
I here you can see that there's also a
close and as much provider which

395
00:24:49,220 --> 00:24:49,889
triggers

396
00:24:49,889 --> 00:24:53,520
on a certain content I'm for example

397
00:24:53,520 --> 00:24:58,419
a.m. the extra state bringing that means
OK whenever an incoming

398
00:24:58,419 --> 00:25:02,470
a phone call is received to the phone
rings

399
00:25:02,470 --> 00:25:05,520
this activity with this application
wakes up

400
00:25:05,520 --> 00:25:09,820
and what it does it creates a string
with call and and it

401
00:25:09,820 --> 00:25:12,929
what's in the number and the the date
and time

402
00:25:12,929 --> 00:25:16,940
that the call is received and sends a
message

403
00:25:16,940 --> 00:25:20,070
when you look at the sent message I'm

404
00:25:20,070 --> 00:25:23,639
you can see that it actually just a

405
00:25:23,639 --> 00:25:27,159
sense at text message it's maybe not
clear but

406
00:25:27,159 --> 00:25:30,440
it sent a text message to

407
00:25:30,440 --> 00:25:37,440
here it is to this phone number

408
00:25:38,500 --> 00:25:44,100
and this is the phone number belonging
to the phone all the dead guy so this is

409
00:25:44,100 --> 00:25:45,280
this is an interesting

410
00:25:45,280 --> 00:25:48,500
a application because this is actually
Hall

411
00:25:48,500 --> 00:25:51,860
a Android mall where

412
00:25:51,860 --> 00:25:56,330
a how easy it can be created now this
application was not available in the

413
00:25:56,330 --> 00:25:57,370
Android Market

414
00:25:57,370 --> 00:26:01,030
it was probably installed by somebody in
the phone

415
00:26:01,030 --> 00:26:04,550
shop I'm what you see that

416
00:26:04,550 --> 00:26:08,810
all these functional just regular system
functions the only thing that normally

417
00:26:08,810 --> 00:26:09,870
needs to happen is when

418
00:26:09,870 --> 00:26:12,950
user installed it on his own phone he
just reads

419
00:26:12,950 --> 00:26:15,950
the permission permissions and

420
00:26:15,950 --> 00:26:19,340
yeah well maybe you guys read
information but I bet they

421
00:26:19,340 --> 00:26:22,800
percent to pee don't even look at the
permissions and just say OK click

422
00:26:22,800 --> 00:26:23,270
through

423
00:26:23,270 --> 00:26:26,810
or you say hey dis a application needs

424
00:26:26,810 --> 00:26:30,040
permission to to go on the internet but
we don't

425
00:26:30,040 --> 00:26:33,150
send any privacy information okay

426
00:26:33,150 --> 00:26:38,300
clicking to install it a full-dress it
just runs in the background and does it

427
00:26:38,300 --> 00:26:45,300
stop so in short it it this is Anna is
services so it means a runs in the

428
00:26:46,520 --> 00:26:47,230
background

429
00:26:47,230 --> 00:26:50,790
and it tips and transmits the data from
the

430
00:26:50,790 --> 00:26:54,600
memory card it monitors for incoming
calls are going calls

431
00:26:54,600 --> 00:26:58,840
and sends text messages with the
information to the phone number belongs

432
00:26:58,840 --> 00:26:59,840
to that guy

433
00:26:59,840 --> 00:27:05,530
so the phone was barred okay so

434
00:27:05,530 --> 00:27:09,680
we actually got the case for the swift
logic I B

435
00:27:09,680 --> 00:27:12,750
pretty much know Rd information from his
phone

436
00:27:12,750 --> 00:27:16,540
got sent to well apparently that guys
phone

437
00:27:16,540 --> 00:27:21,640
but now you want to know from that guy
okay what is his connection why is he

438
00:27:21,640 --> 00:27:22,840
interested in this

439
00:27:22,840 --> 00:27:27,150
and remembered that when we got the
images from the dead guy's phone network

440
00:27:27,150 --> 00:27:27,750
corrupts

441
00:27:27,750 --> 00:27:32,070
the outer Ben bites were missing a.m.

442
00:27:32,070 --> 00:27:35,960
so we need some method to still
investigate

443
00:27:35,960 --> 00:27:39,750
his phone images but we can't just
reconstruct the filesystem

444
00:27:39,750 --> 00:27:45,070
now before I get into how we did I want
to tell something about the docs

445
00:27:45,070 --> 00:27:45,870
filesystem

446
00:27:45,870 --> 00:27:51,030
how many of you are familiar with the
office to file system

447
00:27:51,030 --> 00:27:54,710
all

448
00:27:54,710 --> 00:27:57,890
okay so this is a good slider yes

449
00:27:57,890 --> 00:28:01,780
a well it stands for yet another flash
filesystem

450
00:28:01,780 --> 00:28:07,170
version 2 it's a lot structured file
system so

451
00:28:07,170 --> 00:28:10,190
that means instead of what you normally
see

452
00:28:10,190 --> 00:28:13,290
with most file systems I'll

453
00:28:13,290 --> 00:28:16,410
well on hard disk storage devices a

454
00:28:16,410 --> 00:28:21,420
you have sectors and a file has certain
sectors someone with something changes

455
00:28:21,420 --> 00:28:25,240
in Nepal the changed actually written in
the sector where this change right

456
00:28:25,240 --> 00:28:28,450
if you have and and flash the

457
00:28:28,450 --> 00:28:32,500
you most modern and flash devices don't
allow

458
00:28:32,500 --> 00:28:36,880
to just update bytes and in men and
Fletch page

459
00:28:36,880 --> 00:28:40,910
so what you actually need to do is
rewrite the page to a new

460
00:28:40,910 --> 00:28:44,310
a empty page with the update in it

461
00:28:44,310 --> 00:28:48,260
now flesh yes was made fun and flesh

462
00:28:48,260 --> 00:28:53,130
so what they did is is that that changes
are written in the page itself

463
00:28:53,130 --> 00:28:56,790
it actually rewrites the page and up and
it's of the offense it

464
00:28:56,790 --> 00:29:03,040
of the Lost written page and I will show
that in an illustration justice will let

465
00:29:03,040 --> 00:29:03,730
slide

466
00:29:03,730 --> 00:29:06,800
the so they too has never written

467
00:29:06,800 --> 00:29:11,510
in the same place and its strictly
sequential so within

468
00:29:11,510 --> 00:29:15,300
a block each new page right

469
00:29:15,300 --> 00:29:20,270
is written off to the lost written page
the

470
00:29:20,270 --> 00:29:24,250
love this is this is a actually a very
simple a concept that's why would

471
00:29:24,250 --> 00:29:28,680
was used in Android phones because it's
a relatively lightweight

472
00:29:28,680 --> 00:29:32,950
and effective a however its single
thread its

473
00:29:32,950 --> 00:29:36,710
only a and that was that good

474
00:29:36,710 --> 00:29:41,380
until we had to do cores and what course
then it becomes a problem

475
00:29:41,380 --> 00:29:44,429
so now the newer devices have

476
00:29:44,429 --> 00:29:48,909
a ext for I think whites tree on on the
flesh transition layer

477
00:29:48,909 --> 00:29:52,240
but until Android 2.2 it was

478
00:29:52,240 --> 00:29:55,350
all jobs to so

479
00:29:55,350 --> 00:29:58,539
yes concepts which are important we have
objects

480
00:29:58,539 --> 00:30:01,850
the of goals it done object which
connects with the person to file

481
00:30:01,850 --> 00:30:07,159
or a directory orel Hartling soft link
or device file for example

482
00:30:07,159 --> 00:30:12,039
the of speaks of chunks and a chunk is

483
00:30:12,039 --> 00:30:16,210
why you could say it's page and and and
flash devices

484
00:30:16,210 --> 00:30:19,779
it is possible if you have

485
00:30:19,779 --> 00:30:23,610
multiple parallel Netflix devices that a
chunk is

486
00:30:23,610 --> 00:30:27,669
actually multiple pages but for
simplicity with just

487
00:30:27,669 --> 00:30:31,490
for to it as a page and the

488
00:30:31,490 --> 00:30:35,320
those blocks like every night and flash
data is

489
00:30:35,320 --> 00:30:39,470
written in pages and a actually you
raised in blocks

490
00:30:39,470 --> 00:30:42,770
and a block is welcome it can be an
arbitrary number

491
00:30:42,770 --> 00:30:46,779
I am from 32 sale on the 28th

492
00:30:46,779 --> 00:30:51,350
pages you have the object headers

493
00:30:51,350 --> 00:30:55,020
which is actually up a chunk containing
the method of our

494
00:30:55,020 --> 00:30:58,240
of a file so timestamp for example

495
00:30:58,240 --> 00:31:03,230
or the file name permissions that sort
of stuff is stored in the object header

496
00:31:03,230 --> 00:31:07,740
and you have a date the chunk and the
data comes from pain the actual date up

497
00:31:07,740 --> 00:31:08,039
all

498
00:31:08,039 --> 00:31:14,000
the objects say the data over file
fortune okay so how does it work

499
00:31:14,000 --> 00:31:17,440
I you relocate the simplified version
all

500
00:31:17,440 --> 00:31:21,299
a and block you see two pages

501
00:31:21,299 --> 00:31:25,309
the in this case on these devices we
investigate the pages

502
00:31:25,309 --> 00:31:28,840
to kilobytes large they can be for

503
00:31:28,840 --> 00:31:32,649
or one all five on 12 bytes and

504
00:31:32,649 --> 00:31:35,950
after each to kilobyte a chunk there is
the

505
00:31:35,950 --> 00:31:40,860
out of bed bytes and I think for this
device it was 64 bytes 0

506
00:31:40,860 --> 00:31:44,720
each page page has a small portion of
out of bed bites

507
00:31:44,720 --> 00:31:50,370
the office relies on the out of bed by
seed needs those

508
00:31:50,370 --> 00:31:53,580
that section to store bags and

509
00:31:53,580 --> 00:31:56,880
a Diaz uses these texts to link

510
00:31:56,880 --> 00:32:00,490
the pages the chunks to each other and
to the object

511
00:32:00,490 --> 00:32:04,690
so what you see when a file is written

512
00:32:04,690 --> 00:32:08,919
this is an example the fall which is two
pages long the

513
00:32:08,919 --> 00:32:12,179
you see to date the chunks written and a

514
00:32:12,179 --> 00:32:17,630
object header out the three other links
by the object ID which is written as a

515
00:32:17,630 --> 00:32:18,240
tack

516
00:32:18,240 --> 00:32:24,139
in the out-of-band bytes so what this is
object ID once it's the first followed

517
00:32:24,139 --> 00:32:24,669
Israel

518
00:32:24,669 --> 00:32:27,700
and the chunk ID the

519
00:32:27,700 --> 00:32:32,169
is the identify which tells you which in
a sequence

520
00:32:32,169 --> 00:32:35,649
John of data it is in this object so the

521
00:32:35,649 --> 00:32:39,110
object error as always john by the mill
0 a

522
00:32:39,110 --> 00:32:42,480
the data first data john has John id1

523
00:32:42,480 --> 00:32:49,480
second Joe Biden to now a second follows
written and you see that is just

524
00:32:50,139 --> 00:32:51,020
appended

525
00:32:51,020 --> 00:32:54,020
in the next pages again

526
00:32:54,020 --> 00:32:57,789
one day the chunk is written is a very
small file and an object error is

527
00:32:57,789 --> 00:32:58,250
written

528
00:32:58,250 --> 00:33:01,370
this as object ID to junk I D one

529
00:33:01,370 --> 00:33:04,580
10 so now say we

530
00:33:04,580 --> 00:33:08,429
change something in the first page up
the first file

531
00:33:08,429 --> 00:33:12,429
with object ID one

532
00:33:12,429 --> 00:33:15,620
and stand that the data is written in
the first page

533
00:33:15,620 --> 00:33:20,429
the first page is rewritten right after
the loss Britain page

534
00:33:20,429 --> 00:33:25,320
and the header is rewritten because
thanks them for example has changed or

535
00:33:25,320 --> 00:33:26,840
the size of the file was changed

536
00:33:26,840 --> 00:33:31,110
is all data that is stored in your dick
head or so that needs to change so to

537
00:33:31,110 --> 00:33:32,000
page needs to be

538
00:33:32,000 --> 00:33:38,450
rewritten that this is this is actually
a very a simple mechanism

539
00:33:38,450 --> 00:33:42,700
and it's also very nice when you
investigate flesh devices because this

540
00:33:42,700 --> 00:33:45,899
means that a lot of history is stored on
the device

541
00:33:45,899 --> 00:33:49,659
you can imagine that if you try to
artists that the actual

542
00:33:49,659 --> 00:33:53,720
sector is changed that the old versions
are harder to recover

543
00:33:53,720 --> 00:33:57,470
a in and flash all the old versions

544
00:33:57,470 --> 00:34:00,669
exist will still be there until

545
00:34:00,669 --> 00:34:04,830
of course the whole block is erased to
be reused and that happens usually

546
00:34:04,830 --> 00:34:06,370
effort garbage collection

547
00:34:06,370 --> 00:34:09,429
fortunately mobile devices are not very

548
00:34:09,429 --> 00:34:12,520
eager to start garbage collecting
because it costs a lot

549
00:34:12,520 --> 00:34:16,200
resources make two phone slow so it will
try to keep those

550
00:34:16,200 --> 00:34:20,419
blocks duty and use as long as possible
on pills really necessary

551
00:34:20,419 --> 00:34:27,419
sorting it out which is a good thing for
for forensic investigator

552
00:34:27,960 --> 00:34:32,580
okay so to get that guy's bonuses

553
00:34:32,580 --> 00:34:36,000
its get posing a challenge for us

554
00:34:36,000 --> 00:34:39,359
be no audio file systems were and the

555
00:34:39,359 --> 00:34:44,849
we can't reconstruct it because we don't
have the out-of-band bites

556
00:34:44,849 --> 00:34:48,060
all the interesting stuff the

557
00:34:48,060 --> 00:34:53,050
is is on the internal user data
partition

558
00:34:53,050 --> 00:34:57,330
by you could say okay why don't you just
use the traditional carving tools

559
00:34:57,330 --> 00:35:01,900
like we did in the beginning well as a
slight problem with that because

560
00:35:01,900 --> 00:35:05,460
all the interesting information is in SQ
I dot the bases

561
00:35:05,460 --> 00:35:09,359
the Android spores a contact information

562
00:35:09,359 --> 00:35:14,470
as a mess messages email messages most
interesting information is stored in SQL

563
00:35:14,470 --> 00:35:16,380
I dot the bases which is just

564
00:35:16,380 --> 00:35:19,830
well sort of automatically dawn by to OS

565
00:35:19,830 --> 00:35:24,140
copy when you store data

566
00:35:24,140 --> 00:35:27,170
and sq light databases don't really have
a nice

567
00:35:27,170 --> 00:35:30,730
file format for carving they have a
specific header

568
00:35:30,730 --> 00:35:34,040
if the magic string in the header you
can't look for that

569
00:35:34,040 --> 00:35:38,450
in raw data and say okay this is a
probably a starter over its cool I dot

570
00:35:38,450 --> 00:35:39,049
the base

571
00:35:39,049 --> 00:35:42,430
Botts display databases don't have a
nice footer

572
00:35:42,430 --> 00:35:46,290
so you can't say with certainty okay
this is the end of it file

573
00:35:46,290 --> 00:35:49,799
and even if they had it

574
00:35:49,799 --> 00:35:53,380
because up the high fragmentation of the
office file system

575
00:35:53,380 --> 00:35:57,589
so each change even if it's one bite at
school I dot the base

576
00:35:57,589 --> 00:36:00,940
is rewritten somewhere in a completely
different part

577
00:36:00,940 --> 00:36:04,160
of the filesystem of the office image

578
00:36:04,160 --> 00:36:07,490
so it's very hard for linear

579
00:36:07,490 --> 00:36:11,220
carving tools to just start to rate this
is the start of the file

580
00:36:11,220 --> 00:36:14,589
then you look for a fuller which can be
on the other end of

581
00:36:14,589 --> 00:36:19,079
the OPs image so you get a lot of
garbage with that and very

582
00:36:19,079 --> 00:36:24,950
little useful information so

583
00:36:24,950 --> 00:36:28,500
a we need a smarter way to actually
garth the data

584
00:36:28,500 --> 00:36:31,589
the to car for school I for months

585
00:36:31,589 --> 00:36:32,320
a

586
00:36:32,320 --> 00:36:36,530
asclad up based important to understand
the ESC like page not very simply put

587
00:36:36,530 --> 00:36:41,140
as lights databases are stored in a
balanced re

588
00:36:41,140 --> 00:36:42,680
form

589
00:36:42,680 --> 00:36:47,350
so there's always a route page and it
has references to interior pages and

590
00:36:47,350 --> 00:36:51,290
those pages have reference to other
pages and then at the bottom

591
00:36:51,290 --> 00:36:55,710
we have to leave pages the route page
contains a magic pill you so you can

592
00:36:55,710 --> 00:36:59,940
recognize the group page the and that's
cool I'd

593
00:36:59,940 --> 00:37:03,740
page is can have a side 512 524

594
00:37:03,740 --> 00:37:08,940
64 kilobytes a.m. they will probably
designed as like page to fit

595
00:37:08,940 --> 00:37:15,940
into a of space because thats that's
more efficient all the

596
00:37:17,490 --> 00:37:21,340
actual the data all the records

597
00:37:21,340 --> 00:37:24,580
almost like da bass are stored in the
leaf pages

598
00:37:24,580 --> 00:37:28,410
so that's what we are looking for we
don't really care about the interior

599
00:37:28,410 --> 00:37:29,350
pages or who

600
00:37:29,350 --> 00:37:35,700
page we want to real data a very simply
the form of Solvay

601
00:37:35,700 --> 00:37:39,830
sq light leaf page is you have a page
header

602
00:37:39,830 --> 00:37:44,370
and I'll show that in detail later you
ever saw a pointer array which actually

603
00:37:44,370 --> 00:37:44,980
is

604
00:37:44,980 --> 00:37:48,570
just an array of offset in that page
where that sells

605
00:37:48,570 --> 00:37:51,790
weather records are stored so we can use
that

606
00:37:51,790 --> 00:37:55,150
as a guideline to look in that page for
weather records are

607
00:37:55,150 --> 00:37:59,120
and you have to sell content area which
stores the actual

608
00:37:59,120 --> 00:38:03,340
table records so this is the pages

609
00:38:03,340 --> 00:38:06,550
these are two pages we want to look for
in our role

610
00:38:06,550 --> 00:38:12,140
IAF's to image so the idea is we want to
coffee escalate the

611
00:38:12,140 --> 00:38:16,720
lie data former Royals to image on a
record level so we don't call for a

612
00:38:16,720 --> 00:38:19,970
horsefly database file because that
appears to be too difficult

613
00:38:19,970 --> 00:38:24,450
so start carving for records on a school
i database

614
00:38:24,450 --> 00:38:28,370
and the nice thing in the processes we
can get a lot of

615
00:38:28,370 --> 00:38:32,560
deleted previews history information
from the office to file system if we do

616
00:38:32,560 --> 00:38:34,570
it correctly so

617
00:38:34,570 --> 00:38:39,040
been step one is to identify DSQ lightly
stages right so

618
00:38:39,040 --> 00:38:42,340
we want to recognizing our jobs to raw
image

619
00:38:42,340 --> 00:38:46,430
when a as politely fake starts
fortunately the

620
00:38:46,430 --> 00:38:49,760
slightly stage has a sort of
recognizable header

621
00:38:49,760 --> 00:38:53,440
I'm we know that

622
00:38:53,440 --> 00:38:57,130
the pages a.m. are a a a mold

623
00:38:57,130 --> 00:39:01,260
all you note page size because it's set
in the database hacker

624
00:39:01,260 --> 00:39:06,840
so if you look at the database files in
a reference phone model you can see

625
00:39:06,840 --> 00:39:08,430
what's bit what page size

626
00:39:08,430 --> 00:39:13,080
is used so knowing the page size you can
start looking at the boundaries of the

627
00:39:13,080 --> 00:39:14,620
Space page sizes

628
00:39:14,620 --> 00:39:18,130
in this case it was

629
00:39:18,130 --> 00:39:22,509
I guess to kilobytes you can start
looking at the barn result pages:

630
00:39:22,509 --> 00:39:25,739
for the signature all a leave page

631
00:39:25,739 --> 00:39:32,169
so is it a 4-1 over leave page you can
see that

632
00:39:32,169 --> 00:39:35,699
in the beginning haley paige is always
identified by one bites

633
00:39:35,699 --> 00:39:41,249
which a must have to believe 13 now if
you start looking to your image

634
00:39:41,249 --> 00:39:46,619
purely on the borders and on this only
this bites that you go a lot of garbage

635
00:39:46,619 --> 00:39:47,549
because a

636
00:39:47,549 --> 00:39:51,449
there's gonna be a lot of false positive
so we need more bites to

637
00:39:51,449 --> 00:39:55,799
the up to have a better algorithm for
detecting these pages

638
00:39:55,799 --> 00:40:00,619
well there's also a bite a which tells
you the byte offset into page

639
00:40:00,619 --> 00:40:01,539
a

640
00:40:01,539 --> 00:40:05,940
and we know that that the value of that
by must be smaller than the page

641
00:40:05,940 --> 00:40:09,749
sites so we can check for that if the
second bites

642
00:40:09,749 --> 00:40:13,239
the second two bites make a value which
is small then

643
00:40:13,239 --> 00:40:16,459
pagesize that it's more likely that this
is a leave page

644
00:40:16,459 --> 00:40:20,619
so we can do it with the rest of the
bites also so you create a kind of

645
00:40:20,619 --> 00:40:21,400
touristic

646
00:40:21,400 --> 00:40:25,200
to recognize a leaf page if all those

647
00:40:25,200 --> 00:40:28,619
bites match your criteria and it's very
likely that its release page

648
00:40:28,619 --> 00:40:32,349
okay so we can now identify the leaf
page this

649
00:40:32,349 --> 00:40:36,559
likely face that's great we can carve
out to leave page

650
00:40:36,559 --> 00:40:40,519
and then we want to look for the records
inside the sleeve

651
00:40:40,519 --> 00:40:44,279
page because that's what we're
interested in now it was a cell pointer

652
00:40:44,279 --> 00:40:45,640
array which is a key just

653
00:40:45,640 --> 00:40:50,079
offsets into that page weather records
are stored for this example we see that

654
00:40:50,079 --> 00:40:51,690
there's to record store here

655
00:40:51,690 --> 00:40:55,119
a likely to cells a

656
00:40:55,119 --> 00:40:58,459
so one is located at the office at 27 I
did the other at

657
00:40:58,459 --> 00:41:02,009
now when we look into this page

658
00:41:02,009 --> 00:41:06,309
you can now nicely car followed

659
00:41:06,309 --> 00:41:12,519
the cells from this page this one is
only two weeks he called and

660
00:41:12,519 --> 00:41:16,920
yellow and green so for this page we
know

661
00:41:16,920 --> 00:41:20,019
carved out to cells which contain the
records

662
00:41:20,019 --> 00:41:27,019
this light up the bass now we have
another challenge because

663
00:41:27,380 --> 00:41:31,529
we have an anonymous record we have
multiple anonymous records

664
00:41:31,529 --> 00:41:35,920
we know that there's a school i data in
there but we actually don't know

665
00:41:35,920 --> 00:41:39,779
to which database work table in the
database it belongs

666
00:41:39,779 --> 00:41:42,920
because the SQ lights committee

667
00:41:42,920 --> 00:41:47,039
off the table or the database is not
sport with the records but it's stored

668
00:41:47,039 --> 00:41:53,370
somewhere at the beginning of the file

669
00:41:53,370 --> 00:41:57,830
if you look at the the four-month you
see that those up a lot size:

670
00:41:57,830 --> 00:42:01,880
a row ID is usual in their database
tables

671
00:42:01,880 --> 00:42:05,220
then you have a section which defined
the column bytes

672
00:42:05,220 --> 00:42:09,490
so for example says the first column is
of type Integer second is a stream

673
00:42:09,490 --> 00:42:14,110
the third is paying for the blog center
and then you have the actual

674
00:42:14,110 --> 00:42:18,110
column values at a loss to botch the
column types calling values together is

675
00:42:18,110 --> 00:42:19,080
called the record

676
00:42:19,080 --> 00:42:24,600
its interest the information it's
interesting for us so then you wanna a

677
00:42:24,600 --> 00:42:28,910
now that you know the column ID did that
the types you can actually matched him

678
00:42:28,910 --> 00:42:29,480
against

679
00:42:29,480 --> 00:42:33,220
templates you create so when you take a
No a

680
00:42:33,220 --> 00:42:37,570
database file from an Android phone for
example think the complex database you

681
00:42:37,570 --> 00:42:39,600
take a reference model and you look at
the

682
00:42:39,600 --> 00:42:43,000
the the former up the table you know
which columns

683
00:42:43,000 --> 00:42:47,260
there are on the table and of which type
they are so that allows you to create a

684
00:42:47,260 --> 00:42:48,030
template

685
00:42:48,030 --> 00:42:51,620
so this is one example from the calls
fall

686
00:42:51,620 --> 00:42:55,500
a we note about the column so many
columns and we know that bites

687
00:42:55,500 --> 00:43:00,420
of the columns now we can match all the
records we found the anonymous wreckage

688
00:43:00,420 --> 00:43:04,350
a records against this template and next
week categorize it

689
00:43:04,350 --> 00:43:10,000
into to which table at Long's and we did
that and

690
00:43:10,000 --> 00:43:14,370
that work pretty well a here's an
example what we recovered

691
00:43:14,370 --> 00:43:19,040
this year nice a table of contact
information

692
00:43:19,040 --> 00:43:23,830
so the the the table above is the the
call log so outgoing and the incoming

693
00:43:23,830 --> 00:43:24,750
calls

694
00:43:24,750 --> 00:43:31,470
and the second table is the contact
table this table is more interesting

695
00:43:31,470 --> 00:43:32,440
because this is

696
00:43:32,440 --> 00:43:36,230
a I actually the text message database

697
00:43:36,230 --> 00:43:39,840
and what you see here

698
00:43:39,840 --> 00:43:44,250
is when you look at the role I these is
that you see always multiple versions of

699
00:43:44,250 --> 00:43:45,330
the same role

700
00:43:45,330 --> 00:43:48,560
well that's due to the jobs file system

701
00:43:48,560 --> 00:43:51,690
so when you look at the example for a
row 155

702
00:43:51,690 --> 00:43:55,290
you see that he is sending it is
creating a message

703
00:43:55,290 --> 00:43:58,680
and the first test is a profit now when
you sent the message

704
00:43:58,680 --> 00:44:01,900
status is changed depending and then

705
00:44:01,900 --> 00:44:05,240
send each time the status is changed and
yes

706
00:44:05,240 --> 00:44:09,130
like record to the whole page the whole
yes page needs to be written

707
00:44:09,130 --> 00:44:13,660
so that's why we can see the history all
what happened to that record

708
00:44:13,660 --> 00:44:18,100
so you can see you want it was profiting
is messaging you can see exactly when he

709
00:44:18,100 --> 00:44:19,370
actually sent a message

710
00:44:19,370 --> 00:44:25,170
that's really nice and what's more is
when you look at the

711
00:44:25,170 --> 00:44:28,290
but messages you see the text message
package

712
00:44:28,290 --> 00:44:32,070
uploaded now this was a text message
that we saw is sent

713
00:44:32,070 --> 00:44:35,760
when the application on the arms with
what you do

714
00:44:35,760 --> 00:44:40,720
I'll mall where actually uploaded busy
Follett sent this text message with this

715
00:44:40,720 --> 00:44:42,950
for months so this actually

716
00:44:42,950 --> 00:44:49,190
connects the dots up this fall and when
you look through to the SMS messages you

717
00:44:49,190 --> 00:44:51,210
see that he's communicating with a
certain

718
00:44:51,210 --> 00:44:55,570
percent thats mistery about that he has
a sample

719
00:44:55,570 --> 00:45:02,340
and he wants more money this is a
browser history this is also a nice

720
00:45:02,340 --> 00:45:03,260
example

721
00:45:03,260 --> 00:45:07,920
the

722
00:45:07,920 --> 00:45:11,140
all the versions of Android just or your
credentials

723
00:45:11,140 --> 00:45:15,640
in clear text in this light up the bass
at

724
00:45:15,640 --> 00:45:20,150
that's bad for use right thing but with
forty forensic investigator because

725
00:45:20,150 --> 00:45:23,970
you can use that information I'm and at
the bottom

726
00:45:23,970 --> 00:45:27,390
you see the the deficits to

727
00:45:27,390 --> 00:45:31,420
the actual web server a where the PDF
files

728
00:45:31,420 --> 00:45:35,160
were hosted and the nice thing is also
here you can see due to

729
00:45:35,160 --> 00:45:38,380
Diaz file system version history so you
see the first records

730
00:45:38,380 --> 00:45:41,550
actually show he first visits the page

731
00:45:41,550 --> 00:45:45,670
and then that was one visit and then the
next one you see the second visit

732
00:45:45,670 --> 00:45:49,950
normally when you look at the browser
history you would only see the lost

733
00:45:49,950 --> 00:45:50,610
record

734
00:45:50,610 --> 00:45:54,350
that he had two visits but now you can
also see due to the

735
00:45:54,350 --> 00:45:59,540
version history that his first visit was
at 5:59

736
00:45:59,540 --> 00:46:05,430
and the second visit was okay 628 so
this gave us a lot of information about

737
00:46:05,430 --> 00:46:06,740
what happened on the

738
00:46:06,740 --> 00:46:10,710
on the phone and you can see here that
he searched on Twitter

739
00:46:10,710 --> 00:46:17,710
for on this with logic I so this method
really helped us to

740
00:46:18,160 --> 00:46:21,220
actually from a big blow both a

741
00:46:21,220 --> 00:46:25,770
jobs to dhaba which cannot be
reconstructed in filesystem to still get

742
00:46:25,770 --> 00:46:28,830
all the interesting information are done
a really low level

743
00:46:28,830 --> 00:46:32,360
at this method is also applicable to
your traditional

744
00:46:32,360 --> 00:46:35,520
a hard drives so a when you want

745
00:46:35,520 --> 00:46:39,260
for example to search in the lead dot I
instead of looking for always

746
00:46:39,260 --> 00:46:43,070
light database files you can call our
phone records which

747
00:46:43,070 --> 00:46:46,350
will get you even more data back and
looking for the whole

748
00:46:46,350 --> 00:46:50,370
a school i database file

749
00:46:50,370 --> 00:46:54,120
what I was actually I'm the

750
00:46:54,120 --> 00:46:57,750
what we needed to do to reconstruct the
story

751
00:46:57,750 --> 00:47:01,470
other findings we had which have been
discuss today because at the time

752
00:47:01,470 --> 00:47:04,790
I there was a Facebook post from this
with logic dude

753
00:47:04,790 --> 00:47:08,270
which she says hey tonight I'm gonna
pick up my new phone that Facebook post

754
00:47:08,270 --> 00:47:09,400
was read by

755
00:47:09,400 --> 00:47:13,210
a a by the dead guy and he called

756
00:47:13,210 --> 00:47:17,110
to the phone store where this with logic
I was to pick up

757
00:47:17,110 --> 00:47:20,680
the phone so it's likely that the

758
00:47:20,680 --> 00:47:24,560
our little chat with the phone store
manager and ask him to

759
00:47:24,560 --> 00:47:28,030
somehow install the package on bets with
logic

760
00:47:28,030 --> 00:47:33,090
whose phone and there's a lot of
communication between

761
00:47:33,090 --> 00:47:37,210
a but that guy and certain

762
00:47:37,210 --> 00:47:41,050
contact made mister E in which he
discusses that he has

763
00:47:41,050 --> 00:47:45,050
some results and that he wants more
money

764
00:47:45,050 --> 00:47:48,200
and they make an appointment and

765
00:47:48,200 --> 00:47:51,990
well the result is that he's

766
00:47:51,990 --> 00:47:56,170
is that so well in a nutshell

767
00:47:56,170 --> 00:48:00,750
he bought the phone but that guy but the
phone this with just like you do

768
00:48:00,750 --> 00:48:04,450
and you got the sense that they doubt of
that

769
00:48:04,450 --> 00:48:08,390
this command exits with logic that I
downloaded the schematics

770
00:48:08,390 --> 00:48:12,210
at contact with mister he said hey I
have to stop I want more money

771
00:48:12,210 --> 00:48:16,500
and mystery probably kill him

772
00:48:16,500 --> 00:48:19,840
so there was a that was basically the
digital

773
00:48:19,840 --> 00:48:23,370
forensic research workshop challenge if
you want to read more you can

774
00:48:23,370 --> 00:48:26,670
it's all published you can look it up

775
00:48:26,670 --> 00:48:31,540
the was a really cool challenge a lot a
lot of new aspect in there

776
00:48:31,540 --> 00:48:36,010
I'm by now the new phones don't have yes
to any more

777
00:48:36,010 --> 00:48:40,680
but there are still a lot of phones out
there with Android 2.2 or so it's still

778
00:48:40,680 --> 00:48:43,900
exit actual on

779
00:48:43,900 --> 00:48:47,490
thank you for your attention ok enjoyed
it

780
00:48:47,490 --> 00:48:53,980
thank you very much your home its

781
00:48:53,980 --> 00:48:57,730
on we've got about 10 minutes left for
questions I'm not sure if anyone has any

782
00:48:57,730 --> 00:48:58,820
questions at last

783
00:48:58,820 --> 00:49:05,820
my tasks upper

784
00:49:06,760 --> 00:49:10,420
thanks he said new phones use X for
stuff block user

785
00:49:10,420 --> 00:49:14,260
to flush translation layer does that
translation led to some sort of history

786
00:49:14,260 --> 00:49:15,560
so supply the s2

787
00:49:15,560 --> 00:49:18,620
folksy performance and can you get but
they certainly

788
00:49:18,620 --> 00:49:23,100
history on also so I haven't but very
little but I sup

789
00:49:23,100 --> 00:49:28,300
so the new poses next fall yeah I may go
to a flash tore translation there

790
00:49:28,300 --> 00:49:32,390
I presume that will have some kind of
not rewriting to protect the flush

791
00:49:32,390 --> 00:49:35,590
right again so can you get a history
still there a

792
00:49:35,590 --> 00:49:40,770
yeah the actually that that goes for all
in and flash file system is that

793
00:49:40,770 --> 00:49:43,850
as long as the blocks are not flash and

794
00:49:43,850 --> 00:49:48,040
they ties changes written two new babies
in the old version remains

795
00:49:48,040 --> 00:49:51,560
a so what that the same goes for a new

796
00:49:51,560 --> 00:49:56,470
filesystem bought it depends on how it's
implemented

797
00:49:56,470 --> 00:50:00,650
if a for example or I know of

798
00:50:00,650 --> 00:50:05,260
operating systems that when you a
clear-eyed a file or you delete a file

799
00:50:05,260 --> 00:50:06,180
that

800
00:50:06,180 --> 00:50:10,240
the whole block is immediately wiped so
that would

801
00:50:10,240 --> 00:50:14,320
kinda destroy your your previous
previous versions

802
00:50:14,320 --> 00:50:17,550
but I I don't know for sure how it is
with the newer Android phones

803
00:50:17,550 --> 00:50:21,380
Evan really looked into that yet

804
00:50:21,380 --> 00:50:26,670
K anyone else yep

805
00:50:26,670 --> 00:50:30,450
grace ok thank you I'll just the quick
question whole

806
00:50:30,450 --> 00:50:34,670
how does the forensic industry forensic
laws on the

807
00:50:34,670 --> 00:50:37,720
all the legal framework go along with
let's say

808
00:50:37,720 --> 00:50:41,580
rooting the device because does those
rooting the device is a song

809
00:50:41,580 --> 00:50:42,480
the

810
00:50:42,480 --> 00:50:46,180
forensic measure because I mean you're
rude you actually

811
00:50:46,180 --> 00:50:50,250
can attain to the a device on the

812
00:50:50,250 --> 00:50:53,800
evidence right yeah that's that's a good
question because that I don't really

813
00:50:53,800 --> 00:50:54,510
like that

814
00:50:54,510 --> 00:50:58,000
and while in the Netherlands is not so
much of a problem but

815
00:50:58,000 --> 00:51:02,200
I believe in the united states it's much
more of a problem if you change date on

816
00:51:02,200 --> 00:51:02,950
the device

817
00:51:02,950 --> 00:51:07,660
a what we see with the newer routing
techniques that it's possible to do a

818
00:51:07,660 --> 00:51:11,570
be likely a temporary roots which only
operates

819
00:51:11,570 --> 00:51:15,520
in the memory of the device so that's
the nice thing is just temporary rooted

820
00:51:15,520 --> 00:51:16,140
device

821
00:51:16,140 --> 00:51:19,280
then you want choir you actually run
your tools from the memory

822
00:51:19,280 --> 00:51:23,410
and you require the data from the
partitions without changing anything

823
00:51:23,410 --> 00:51:26,420
on partitions don't even change the
system partition

824
00:51:26,420 --> 00:51:29,760
so the newer techniques are helping us
with that

825
00:51:29,760 --> 00:51:32,870
that K

826
00:51:32,870 --> 00:51:39,260
any other questions for people no
alright well evil thank you very much

827
00:51:39,260 --> 00:51:39,760
again

828
00:51:39,760 --> 00:51:43,600
and I'm won't be right back concert next
picture for you thank you

829
00:51:43,600 --> 00:51:50,600
things them

