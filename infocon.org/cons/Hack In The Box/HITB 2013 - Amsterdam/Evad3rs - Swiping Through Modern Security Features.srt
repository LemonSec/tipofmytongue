1
00:00:02,160 --> 00:00:08,690
well

2
00:00:08,690 --> 00:00:15,690
well

3
00:00:15,730 --> 00:00:22,730
yes

4
00:01:19,130 --> 00:01:19,939
for

5
00:01:19,939 --> 00:01:23,479
arm you know where the beaters &

6
00:01:23,479 --> 00:01:28,100
this talk will be about the reason
recent job requested call the invasion

7
00:01:28,100 --> 00:01:31,750
on it's gonna be a pretty complex
jailbreaking we have an hour so

8
00:01:31,750 --> 00:01:35,890
che get through this as quickly as
possible on

9
00:01:35,890 --> 00:01:40,890
first of you know we want to go over how

10
00:01:40,890 --> 00:01:45,140
the justification forward all the
complexity that we're doing right now

11
00:01:45,140 --> 00:01:49,149
arm the the eventual goal is to

12
00:01:49,149 --> 00:01:52,880
execute a kernel exploit but there's a
la steps to get

13
00:01:52,880 --> 00:01:57,479
getting to execute a crowd exploit are
when the first requirements is two runs

14
00:01:57,479 --> 00:02:01,490
unsigned code outside the sandbox arm
one or the other

15
00:02:01,490 --> 00:02:04,580
requirements is to get around the young
SLR

16
00:02:04,580 --> 00:02:09,060
%ah dat is in the usual and and also in
the kernel

17
00:02:09,060 --> 00:02:13,860
and finally when you do forced a
controlled the kernel arm

18
00:02:13,860 --> 00:02:18,569
cell in order to run unsigned code we
can actually divide

19
00:02:18,569 --> 00:02:22,430
%uh the requirements for running in
psycho into three different sub

20
00:02:22,430 --> 00:02:23,190
requirements

21
00:02:23,190 --> 00:02:26,620
the first one is that we need to write
to root filesystem

22
00:02:26,620 --> 00:02:30,500
sup 2 /sup civically a file called a is
such a launch the dock of

23
00:02:30,500 --> 00:02:34,420
the second requirement is that we need
to display at the sable coat signing

24
00:02:34,420 --> 00:02:38,609
somehow an and thence that their
requirements that we can you convince

25
00:02:38,609 --> 00:02:41,980
lost control %uh to run a program

26
00:02:41,980 --> 00:02:45,209
as root and

27
00:02:45,209 --> 00:02:49,620
this resizer okay

28
00:02:49,620 --> 00:02:52,769
so arm

29
00:02:52,769 --> 00:02:56,310
in Iowa 6.1 launch control had arm

30
00:02:56,310 --> 00:02:59,739
some up security upgrades to its

31
00:02:59,739 --> 00:03:03,850
arched instead of being motive %uh
lawyers from the filesystem

32
00:03:03,850 --> 00:03:07,190
launch demons which are set up system
demands are loaded on

33
00:03:07,190 --> 00:03:10,639
on the started by Lestat we can
typically use to

34
00:03:10,639 --> 00:03:16,019
arm using untether exploited triggers
some execution at boot

35
00:03:16,019 --> 00:03:19,389
arm used to be that these demands are

36
00:03:19,389 --> 00:03:23,370
configured from the file system there
syriza configuration files on the

37
00:03:23,370 --> 00:03:24,220
filesystem

38
00:03:24,220 --> 00:03:27,609
but now they're not that it directly
from the South filesystem

39
00:03:27,609 --> 00:03:31,660
but they're loaded from assigned cash
these demands are now sign

40
00:03:31,660 --> 00:03:36,250
and on the launch team in configuration
files on a filesystem

41
00:03:36,250 --> 00:03:40,650
are ignored however disheartening still

42
00:03:40,650 --> 00:03:44,070
in this in this morning launch d dock on
file

43
00:03:44,070 --> 00:03:48,810
a configuration file is still available
and we've been using this file to

44
00:03:48,810 --> 00:03:53,340
on the the linchpin are untethered
jailbreak since

45
00:03:53,340 --> 00:03:56,489
the sense to Corona and Heather
jailbreak

46
00:03:56,489 --> 00:04:00,000
and one and the abilities at this
configuration file

47
00:04:00,000 --> 00:04:03,739
is if you're able to write to it is that
you can execute

48
00:04:03,739 --> 00:04:07,650
any command out launch d can execute in

49
00:04:07,650 --> 00:04:11,540
launched he is basically the first
process that see its executed and I less

50
00:04:11,540 --> 00:04:12,780
it's basically the in it

51
00:04:12,780 --> 00:04:16,560
the from ISL s and Mac OS 10

52
00:04:16,560 --> 00:04:19,680
so with the exception of

53
00:04:19,680 --> 00:04:22,810
loading file system launch demands which
are now sign

54
00:04:22,810 --> 00:04:26,720
weekend do anything which launched the
as long as we able to write this

55
00:04:26,720 --> 00:04:27,870
configuration file

56
00:04:27,870 --> 00:04:32,660
are when the commands that we can use
with launched he is called yes exec

57
00:04:32,660 --> 00:04:35,919
and yes exactly can run arbitrary
programs

58
00:04:35,919 --> 00:04:39,600
on on the young archery programs

59
00:04:39,600 --> 00:04:44,500
absolute as long as the program's as
long as we have a way to get around to

60
00:04:44,500 --> 00:04:45,080
it saying

61
00:04:45,080 --> 00:04:48,210
so

62
00:04:48,210 --> 00:04:51,370
right cell now

63
00:04:51,370 --> 00:04:56,690
we basically need to be able to figure
out how to write to the root filesystem

64
00:04:56,690 --> 00:04:59,889
so that we can write to weekend

65
00:04:59,889 --> 00:05:03,470
so the chin Nam write this configuration
file

66
00:05:03,470 --> 00:05:06,720
and we also need to

67
00:05:06,720 --> 00:05:10,370
we also and as long as we can write this
configuration file

68
00:05:10,370 --> 00:05:13,750
the 30 fireman is also for filled and
also least

69
00:05:13,750 --> 00:05:17,250
dan we just need to figure out to
disable consigning so now

70
00:05:17,250 --> 00:05:20,350
Knicks yes we'll talk about how we're
we're going to

71
00:05:20,350 --> 00:05:27,350
right to the root filesystem in order to
write that configuration okay

72
00:05:28,320 --> 00:05:31,900
I run so I'm going to present how we
manage to

73
00:05:31,900 --> 00:05:35,229
actually remount the root filesystem and
how we prepare

74
00:05:35,229 --> 00:05:38,729
device for the hunter so I'm for

75
00:05:38,729 --> 00:05:41,939
the injection we actually have three
steps the first is

76
00:05:41,939 --> 00:05:45,439
SRM Institute month fun system than we
have to write this

77
00:05:45,439 --> 00:05:48,909
configuration 5vdc non-stick on and

78
00:05:48,909 --> 00:05:53,340
we have two transferred you facing onto
the pavement

79
00:05:53,340 --> 00:05:56,669
that would useful in this a code
execution

80
00:05:56,669 --> 00:05:59,919
on Buddha so

81
00:05:59,919 --> 00:06:04,680
some okay so arm during our research we
found out that we can use

82
00:06:04,680 --> 00:06:07,960
the Muncie to command to make launched
here on

83
00:06:07,960 --> 00:06:11,080
commands and this is

84
00:06:11,080 --> 00:06:14,689
a.m. this works by control circuit
that's created by

85
00:06:14,689 --> 00:06:18,580
launched eat so if you execute them on
CD or command at work

86
00:06:18,580 --> 00:06:22,050
talk to the soccer and the stock to
months D

87
00:06:22,050 --> 00:06:26,900
but a problem it's bad this %ah could
find on the is accessible my roots so

88
00:06:26,900 --> 00:06:30,629
as use a move are you cannot run the
comment you can run the command but it

89
00:06:30,629 --> 00:06:31,870
will not have any effect

90
00:06:31,870 --> 00:06:35,930
just fade so two months a word for
system

91
00:06:35,930 --> 00:06:40,020
we have to actually to two things we
need to find a way to execute a lawn

92
00:06:40,020 --> 00:06:41,340
seat or command

93
00:06:41,340 --> 00:06:46,849
and we have to chances are good for
missions because we're not through

94
00:06:46,849 --> 00:06:50,529
so me as a way to

95
00:06:50,529 --> 00:06:54,330
execute a command I'm iffy replace the
binary

96
00:06:54,330 --> 00:06:57,349
of on existing was

97
00:06:57,349 --> 00:07:01,110
shell scripts with the specifics you
bear in mind we can execute an arbitrary

98
00:07:01,110 --> 00:07:02,400
command

99
00:07:02,400 --> 00:07:05,939
arm but since we don't want to

100
00:07:05,939 --> 00:07:09,430
Masson an existing after we would either
have to add a new app

101
00:07:09,430 --> 00:07:13,050
or just he was one of the pre-installed

102
00:07:13,050 --> 00:07:17,279
hidden house about our present on device
and for our purposes we

103
00:07:17,279 --> 00:07:21,699
misuse deem so

104
00:07:21,699 --> 00:07:25,490
if you want an impact on and out Oregon
icon we have two

105
00:07:25,490 --> 00:07:29,819
modify specific file it's a compact form
over its Mason Pulis 5

106
00:07:29,819 --> 00:07:33,229
that file holds the state of or out
saddam device

107
00:07:33,229 --> 00:07:36,520
Mena app store apps also system outs and

108
00:07:36,520 --> 00:07:39,879
it is not accessible using the AFC for
the call

109
00:07:39,879 --> 00:07:44,240
and it's not included in the back up so
weeks and you to find a way to

110
00:07:44,240 --> 00:07:48,189
grab this fire but lacking the the fire
is a service

111
00:07:48,189 --> 00:07:52,139
it's possible to transfer this fight to
the computer

112
00:07:52,139 --> 00:07:55,759
now that we have this file week me too

113
00:07:55,759 --> 00:07:59,309
yet to modified to our benefit so

114
00:07:59,309 --> 00:08:02,590
we actually have to first change the
path of

115
00:08:02,590 --> 00:08:05,759
you will have up yet the team where

116
00:08:05,759 --> 00:08:09,740
ap around 2.20 fake application

117
00:08:09,740 --> 00:08:13,409
and to make it actually show up because
it's by default hidden we have to remove

118
00:08:13,409 --> 00:08:14,930
some keys in this business

119
00:08:14,930 --> 00:08:17,930
how the CSP up tax of key

120
00:08:17,930 --> 00:08:22,330
and for some reason the iPad has an
additional check for the

121
00:08:22,330 --> 00:08:26,599
this specific type of caps so we have to
remove the application tacky

122
00:08:26,599 --> 00:08:29,990
on otherwise I can would never show our

123
00:08:29,990 --> 00:08:33,880
okay so now we know what we have to
check out sorry and we have to add an

124
00:08:33,880 --> 00:08:36,950
environment variable because if we
execute them on she took command

125
00:08:36,950 --> 00:08:41,400
it will not know zip the location of the
launch the soccer

126
00:08:41,400 --> 00:08:44,970
on this we set environment variable
that's a launch the soccer

127
00:08:44,970 --> 00:08:49,210
variable pointing to the actual soccer
at five

128
00:08:49,210 --> 00:08:53,800
okay so now that we know know what we
have to change we have to ratify back

129
00:08:53,800 --> 00:08:57,970
the problem is that the fire is it may
service does not allowing us to transfer

130
00:08:57,970 --> 00:08:58,670
any five

131
00:08:58,670 --> 00:09:02,000
ought to the device so we have to find
another way

132
00:09:02,000 --> 00:09:06,380
we need some kind of right anywhere fun
ability to X are being able to write

133
00:09:06,380 --> 00:09:07,779
this fight back

134
00:09:07,779 --> 00:09:12,630
on what we have here it is directory
covers is that we found in the move I

135
00:09:12,630 --> 00:09:14,310
back up

136
00:09:14,310 --> 00:09:17,410
service okay

137
00:09:17,410 --> 00:09:22,140
somewheres well we're back up to its are
it has a set of predefined

138
00:09:22,140 --> 00:09:25,440
backup domains that specify paths that

139
00:09:25,440 --> 00:09:30,920
allow its for restore XO for backup and
restore and stereospecific

140
00:09:30,920 --> 00:09:34,410
some of the pass just no specific
findings

141
00:09:34,410 --> 00:09:37,990
and so we cannot just use any location
to add specific

142
00:09:37,990 --> 00:09:41,370
fire are but

143
00:09:41,370 --> 00:09:45,290
like to the there are enough up
possibilities to still have some fights

144
00:09:45,290 --> 00:09:47,460
like to meet a recording star

145
00:09:47,460 --> 00:09:52,079
Fodor and the media than mine that
allows basically any fire need to be

146
00:09:52,079 --> 00:09:54,500
added to the backup

147
00:09:54,500 --> 00:09:57,949
I'm one more thing is that since I was 6

148
00:09:57,949 --> 00:10:01,329
the backup restore process has changed
um

149
00:10:01,329 --> 00:10:05,630
because the fires are when the restore
some from as a firework fights will be

150
00:10:05,630 --> 00:10:07,630
created in the tmp folder

151
00:10:07,630 --> 00:10:12,110
and then stage to another directory and
the Farakka and the Far Cry system

152
00:10:12,110 --> 00:10:16,230
and then they are a and renamed to find
a this their final

153
00:10:16,230 --> 00:10:20,339
destination so this obviously limits

154
00:10:20,339 --> 00:10:25,459
our own the way we could are create
files to the far petition

155
00:10:25,459 --> 00:10:28,620
but because the the up remain of

156
00:10:28,620 --> 00:10:32,610
operations actually prevent us to rename
that file to

157
00:10:32,610 --> 00:10:37,230
the word fi system that's it's so by
design not working

158
00:10:37,230 --> 00:10:40,310
so I'm for director traverses

159
00:10:40,310 --> 00:10:43,940
we can use a trick in around the way we

160
00:10:43,940 --> 00:10:47,970
planned a symlink a.m. one of the
allowed paths:

161
00:10:47,970 --> 00:10:51,589
we use a media recordings for to
something and that the something points

162
00:10:51,589 --> 00:10:53,279
to the location where we want to

163
00:10:53,279 --> 00:10:58,399
create the fights we need I'm so when
the pickup was restored instead of text

164
00:10:58,399 --> 00:11:00,779
writing to that backup domain past weeks

165
00:11:00,779 --> 00:11:03,820
right to the past we settle for
something

166
00:11:03,820 --> 00:11:07,820
so and using this technique we were able
to write the fights we need you can

167
00:11:07,820 --> 00:11:08,550
write to

168
00:11:08,550 --> 00:11:13,709
and so they simply this fire and you can
right the fights we need for all fake

169
00:11:13,709 --> 00:11:17,310
so arm the only thing we have to do
right now

170
00:11:17,310 --> 00:11:22,100
the remaining is then reboot the device
and then we were actually get I can show

171
00:11:22,100 --> 00:11:25,709
up

172
00:11:25,709 --> 00:11:30,069
okay so I'm we just saw in the previous
night that we uploaded

173
00:11:30,069 --> 00:11:34,420
you will have file and this one is
action not a binary program it's a

174
00:11:34,420 --> 00:11:35,380
script

175
00:11:35,380 --> 00:11:38,610
as mentioned before sorry and

176
00:11:38,610 --> 00:11:42,149
the script is um containing

177
00:11:42,149 --> 00:11:45,149
specific C bang mine and if a to

178
00:11:45,149 --> 00:11:50,490
remount the to execute a mount command
so we can remove the root filesystem

179
00:11:50,490 --> 00:11:54,019
I'm but as you can see there's no mount
the point

180
00:11:54,019 --> 00:11:57,660
to include in the command line so
detection not

181
00:11:57,660 --> 00:12:02,149
%uh the comment were not know where to
mount well at window because

182
00:12:02,149 --> 00:12:05,850
because of the nature of she bang around
the past of the Arab

183
00:12:05,850 --> 00:12:09,079
will be at to the command line so

184
00:12:09,079 --> 00:12:12,970
what actually happens is that to mount
command would try to mount

185
00:12:12,970 --> 00:12:17,120
the root filesystem to the ap binary
which of course doesn't work because

186
00:12:17,120 --> 00:12:18,649
it's not a four

187
00:12:18,649 --> 00:12:22,389
so this the initially fails

188
00:12:22,389 --> 00:12:25,440
I'm to resolve this I'll we

189
00:12:25,440 --> 00:12:28,630
use the move our biggest trick again and
change the

190
00:12:28,630 --> 00:12:31,759
actual script with something pointed to
the

191
00:12:31,759 --> 00:12:34,850
root filesystem and this way we will get

192
00:12:34,850 --> 00:12:38,360
the root filesystem mounted well not
quite

193
00:12:38,360 --> 00:12:41,740
because we still have to make sure that
we actually

194
00:12:41,740 --> 00:12:45,149
out allowed to run this command because
mister

195
00:12:45,149 --> 00:12:48,220
much fruit so what's

196
00:12:48,220 --> 00:12:51,350
remaining now that we have to change to
suck the permissions for

197
00:12:51,350 --> 00:12:54,600
the launched launched the contras Oct

198
00:12:54,600 --> 00:13:00,120
I'm first question is why don't use it
mobile backup directory for further

199
00:13:00,120 --> 00:13:04,069
because the problem is that when we
wrist or something

200
00:13:04,069 --> 00:13:07,089
the fights were good created and not

201
00:13:07,089 --> 00:13:11,430
own we cannot seem to commissions of
existing files

202
00:13:11,430 --> 00:13:15,139
and the second thing is we cannot it's a
good fights even if we could create them

203
00:13:15,139 --> 00:13:18,509
it wouldn't work because we would have
to use existing one

204
00:13:18,509 --> 00:13:21,690
and not create another one because it
would not

205
00:13:21,690 --> 00:13:25,160
being able to talk to launch the

206
00:13:25,160 --> 00:13:28,550
so to its uses we still need to

207
00:13:28,550 --> 00:13:32,120
use to move my backup system um

208
00:13:32,120 --> 00:13:36,069
to plan to fight so initially we
actually thought you could use that to

209
00:13:36,069 --> 00:13:38,350
change to commissions but then we found
out that

210
00:13:38,350 --> 00:13:42,360
not use that and we needed a solution I
was

211
00:13:42,360 --> 00:13:45,560
searching for sounds its my command and
found out that

212
00:13:45,560 --> 00:13:50,089
lockdowns doing this and I was still
looking through the year

213
00:13:50,089 --> 00:13:54,060
disassembly and found this small piece
of code actually showing that

214
00:13:54,060 --> 00:13:57,089
we have fewer hardcoded sit smart

215
00:13:57,089 --> 00:14:00,269
to word reader will try to execute will

216
00:14:00,269 --> 00:14:03,730
and the this is

217
00:14:03,730 --> 00:14:06,949
yeah this is a not sick any further so

218
00:14:06,949 --> 00:14:11,740
its because its headquarters tough and
executed ever launched some fun stuff

219
00:14:11,740 --> 00:14:17,769
remain friends every time up down the
started with execute the CH one comment

220
00:14:17,769 --> 00:14:20,959
so this is just perfect for

221
00:14:20,959 --> 00:14:24,089
for our goal and so

222
00:14:24,089 --> 00:14:27,639
we use that move a backup directed from
urs again to after

223
00:14:27,639 --> 00:14:31,709
symlink thats to var DB time zone and
this one

224
00:14:31,709 --> 00:14:35,379
points to what we want to change in this
case it's

225
00:14:35,379 --> 00:14:38,500
first the var TMP launch Steve

226
00:14:38,500 --> 00:14:42,540
folder and found the box you puke on
stage socket fighter

227
00:14:42,540 --> 00:14:47,009
so but we still need to make launched
the restart but this is not hard we just

228
00:14:47,009 --> 00:14:47,660
seem

229
00:14:47,660 --> 00:14:51,180
set to send some my form property list
and

230
00:14:51,180 --> 00:14:54,790
at Woodcrest and because launched use
restarting look down

231
00:14:54,790 --> 00:14:57,990
the over just execute this %eh more

232
00:14:57,990 --> 00:15:02,800
so know we're good and we have a change
the soccer commissions and 60

233
00:15:02,800 --> 00:15:07,829
launched into a command will succeed and
Fremont the root filesystem

234
00:15:07,829 --> 00:15:12,689
okay so next step is to write UTC
non-stick on file

235
00:15:12,689 --> 00:15:16,189
the problem is that this fire sits on
the root filesystem

236
00:15:16,189 --> 00:15:21,199
and we could try to use a move a backup
system but the problem is

237
00:15:21,199 --> 00:15:24,490
because of the move a backup

238
00:15:24,490 --> 00:15:28,350
system this yet exit does not allow to
create fis

239
00:15:28,350 --> 00:15:32,540
outside our petition I'm

240
00:15:32,540 --> 00:15:35,689
yet we need to find we still need to
find a way to do this

241
00:15:35,689 --> 00:15:39,829
but it's not so hard because unlike
regular fights a move a backup

242
00:15:39,829 --> 00:15:43,579
system this exit ratings somethings
directing the stage

243
00:15:43,579 --> 00:15:46,930
sorry and that staging directory instead
of

244
00:15:46,930 --> 00:15:51,089
I like fights creating them in TP and
rename them and moving to the stage in

245
00:15:51,089 --> 00:15:52,279
eritrean

246
00:15:52,279 --> 00:15:55,399
music them to destination so

247
00:15:55,399 --> 00:15:58,709
we're lucky and we can census some link

248
00:15:58,709 --> 00:16:02,379
I'll with with and point to

249
00:16:02,379 --> 00:16:06,730
no the name of the same nigga CDC
launched econ and this points to our

250
00:16:06,730 --> 00:16:11,329
own version of the launch the phone so

251
00:16:11,329 --> 00:16:15,180
and a.m. because launched the this not
checking if it's something

252
00:16:15,180 --> 00:16:18,240
or something over still just know that
fire

253
00:16:18,240 --> 00:16:21,829
that X this is something pointing to our
fire

254
00:16:21,829 --> 00:16:25,379
and so we actually good week right to
file and lost you

255
00:16:25,379 --> 00:16:28,939
would be able to use it so the only
thing remaining right now

256
00:16:28,939 --> 00:16:32,779
this a.m. that we have to up under the
payload

257
00:16:32,779 --> 00:16:35,920
which is not very hard we could fuse
Dave C

258
00:16:35,920 --> 00:16:39,060
but since you already have similar Vegas
directory traversal

259
00:16:39,060 --> 00:16:42,199
we just use to that morning again to

260
00:16:42,199 --> 00:16:45,620
applaud the fights we need for the and
Heather and

261
00:16:45,620 --> 00:16:48,980
additional we have no its use this is
your package

262
00:16:48,980 --> 00:16:52,529
answer Pegasus to use invective super

263
00:16:52,529 --> 00:16:56,810
if okay yeah that's basically it so

264
00:16:56,810 --> 00:17:00,790
we have for months the word for system
wrote that UTC non-stick arms

265
00:17:00,790 --> 00:17:04,819
and uploaded onto the pillow and now we
raise to reboot

266
00:17:04,819 --> 00:17:07,990
and have

267
00:17:07,990 --> 00:17:11,419
yes

268
00:17:11,419 --> 00:17:14,559
okay so yes explains to us 0

269
00:17:14,559 --> 00:17:18,039
he managed to a to be able to

270
00:17:18,039 --> 00:17:21,169
the and has a to the fine system

271
00:17:21,169 --> 00:17:26,299
it was as as you seen a really
complicated problem because

272
00:17:26,299 --> 00:17:29,950
to bed through a lot of stuff love

273
00:17:29,950 --> 00:17:33,330
exploits and gravities yet it was

274
00:17:33,330 --> 00:17:37,460
a good the good now

275
00:17:37,460 --> 00:17:41,100
the distill the second points

276
00:17:41,100 --> 00:17:44,530
that you've seen her leap out of the

277
00:17:44,530 --> 00:17:47,550
presentation we still need to

278
00:17:47,550 --> 00:17:52,340
disable consigning in a way so

279
00:17:52,340 --> 00:17:56,650
but could sign where

280
00:17:56,650 --> 00:18:00,370
where are the protections where is it
verified

281
00:18:00,370 --> 00:18:03,850
visit and forced first

282
00:18:03,850 --> 00:18:07,100
when the cam load binaries

283
00:18:07,100 --> 00:18:10,280
when the

284
00:18:10,280 --> 00:18:14,280
some process try to X's executive pages

285
00:18:14,280 --> 00:18:18,080
the camera will verify at that time that
everything's correct

286
00:18:18,080 --> 00:18:23,400
and so of course when you try to exit
sign pages

287
00:18:23,400 --> 00:18:26,980
even if they're not executed

288
00:18:26,980 --> 00:18:30,659
killer will verify that everything is
good that they are not tainted

289
00:18:30,659 --> 00:18:34,879
and stuff like that so a

290
00:18:34,879 --> 00:18:38,249
oh he's in for security in for sign page

291
00:18:38,249 --> 00:18:41,980
axis it's enforced in a a cam omitted

292
00:18:41,980 --> 00:18:47,570
that is called the infant enter and

293
00:18:47,570 --> 00:18:51,629
disputed basically two to be able to
verify

294
00:18:51,629 --> 00:18:54,860
and Kenya process if you've if

295
00:18:54,860 --> 00:18:57,970
defeated something bad happen depends on

296
00:18:57,970 --> 00:19:04,970
CS blobs to be registered somehow the
gloves

297
00:19:05,049 --> 00:19:09,730
a will indicate ransom above the 50 that
is signed

298
00:19:09,730 --> 00:19:15,480
and the corresponding actions if

299
00:19:15,480 --> 00:19:18,669
there are no blurbs loaded then noting

300
00:19:18,669 --> 00:19:23,539
is done we believe this is because of
ballistics and I was compatibility

301
00:19:23,539 --> 00:19:28,330
with six doesn't require

302
00:19:28,330 --> 00:19:31,749
could consigning you detected can use
code signing

303
00:19:31,749 --> 00:19:35,240
with this is gets gatekeepers to

304
00:19:35,240 --> 00:19:39,309
but it does not require it to Tony so

305
00:19:39,309 --> 00:19:43,440
an hour where executive pages

306
00:19:43,440 --> 00:19:48,399
very fine its again and forcing them
from center

307
00:19:48,399 --> 00:19:51,870
any persists rise to

308
00:19:51,870 --> 00:19:55,850
axis and execute able page that is not
sign it is cute

309
00:19:55,850 --> 00:20:02,369
but yeah it is killed defending

310
00:20:02,369 --> 00:20:05,809
on some for a very on the process

311
00:20:05,809 --> 00:20:08,580
that is CSQ

312
00:20:08,580 --> 00:20:11,549
it is prophetic is at it for

313
00:20:11,549 --> 00:20:15,350
every single binary US because of

314
00:20:15,350 --> 00:20:19,620
some kook love specific kennel extension

315
00:20:19,620 --> 00:20:23,039
which is a.m. if I so

316
00:20:23,039 --> 00:20:26,059
hope code is loaded

317
00:20:26,059 --> 00:20:29,270
I mean code is he's a

318
00:20:29,270 --> 00:20:33,419
by binary binary code or library code

319
00:20:33,419 --> 00:20:37,039
so could get you know it's true two
passes

320
00:20:37,039 --> 00:20:40,789
executives are loaded by the cam

321
00:20:40,789 --> 00:20:44,080
and libraries uploaded by

322
00:20:44,080 --> 00:20:47,330
dnt and

323
00:20:47,330 --> 00:20:52,159
each pass as to Valley validates the
code is sin

324
00:20:52,159 --> 00:20:57,039
Spirit lead in the ads own way some

325
00:20:57,039 --> 00:21:00,929
how does work loading a binary the camp
gets a

326
00:21:00,929 --> 00:21:05,110
execution syscall and some

327
00:21:05,110 --> 00:21:08,440
mandatory access control hook

328
00:21:08,440 --> 00:21:11,620
is played there by the a.m. if I
specific

329
00:21:11,620 --> 00:21:16,090
I was gonna extension and the this will
trigger

330
00:21:16,090 --> 00:21:20,779
some made that cool love it's which is
empty or vino check exec

331
00:21:20,779 --> 00:21:24,240
and this special me said wheeler

332
00:21:24,240 --> 00:21:28,289
steps the CS Hardin CSQ for that is on
the process

333
00:21:28,289 --> 00:21:31,500
like I said only a this does not happen
on OSX

334
00:21:31,500 --> 00:21:34,529
of course West End sorry

335
00:21:34,529 --> 00:21:37,740
the

336
00:21:37,740 --> 00:21:41,409
coming then loads says blocks from

337
00:21:41,409 --> 00:21:45,510
the binary the macro fine antique

338
00:21:45,510 --> 00:21:49,380
and some hookah gained in the three
young that

339
00:21:49,380 --> 00:21:53,649
execution he said is called this

340
00:21:53,649 --> 00:21:57,710
MQ Vienna check signature will call

341
00:21:57,710 --> 00:22:01,110
a userland demon that is cool

342
00:22:01,110 --> 00:22:06,110
a.m. if I D to do that validation yet
this is kinda weird

343
00:22:06,110 --> 00:22:09,590
you'll see that and if

344
00:22:09,590 --> 00:22:13,600
signature checking Fame's the camera
would kill the process

345
00:22:13,600 --> 00:22:16,640
then

346
00:22:16,640 --> 00:22:20,830
the other pass a all too a we're loading
a

347
00:22:20,830 --> 00:22:26,830
die liebe is done basically

348
00:22:26,830 --> 00:22:30,120
the the the blobs

349
00:22:30,120 --> 00:22:34,760
a video I leave needs to be uploaded

350
00:22:34,760 --> 00:22:39,679
to uploaded rightward where see the idea
uploaded to the cam somehow

351
00:22:39,679 --> 00:22:42,690
so Gynt the

352
00:22:42,690 --> 00:22:46,140
library loader we called some syscall

353
00:22:46,140 --> 00:22:53,140
to at these blobs to the cam your the

354
00:22:53,870 --> 00:22:57,570
unit there is some code showing you

355
00:22:57,570 --> 00:23:01,280
that's when load could still if

356
00:23:01,280 --> 00:23:05,100
the library signs then it becomes a

357
00:23:05,100 --> 00:23:08,860
some me said that's is loads cut
signature

358
00:23:08,860 --> 00:23:12,380
and dismissed me said into you didn t
we'll

359
00:23:12,380 --> 00:23:16,380
call the particular if Institute Cisco

360
00:23:16,380 --> 00:23:19,720
to at the bluffs but it does thats only

361
00:23:19,720 --> 00:23:26,669
of course VUDA levi's sites so

362
00:23:26,669 --> 00:23:29,799
we can summer can have some the

363
00:23:29,799 --> 00:23:33,000
dependencies between I love this as you
can see this is

364
00:23:33,000 --> 00:23:36,149
really complicated

365
00:23:36,149 --> 00:23:39,659
and we simplified this to them maximum
that's a cute

366
00:23:39,659 --> 00:23:45,460
you can see to but I don't have a laser
pointer

367
00:23:45,460 --> 00:23:52,460
anything any chance do you have your
laser pointer thank you

368
00:24:01,320 --> 00:24:03,290
perfect

369
00:24:03,290 --> 00:24:07,530
okay so let me try to explain this graph

370
00:24:07,530 --> 00:24:11,150
simple man here so

371
00:24:11,150 --> 00:24:14,390
this the G different dependencies so to

372
00:24:14,390 --> 00:24:17,820
exec v to do his job he has to know

373
00:24:17,820 --> 00:24:23,220
the signature blocks if

374
00:24:23,220 --> 00:24:26,540
its library the blobs uploaded

375
00:24:26,540 --> 00:24:30,990
by this particular school when you try
to when the process rights to love the

376
00:24:30,990 --> 00:24:31,490
library

377
00:24:31,490 --> 00:24:36,850
if you tried to

378
00:24:36,850 --> 00:24:41,540
execute a binary his exec VP that would
trigger

379
00:24:41,540 --> 00:24:44,550
some me thirds in

380
00:24:44,550 --> 00:24:48,410
a.m. if I this one and this me said

381
00:24:48,410 --> 00:24:51,809
will at this but to the dependency

382
00:24:51,809 --> 00:24:55,850
to for the Walcott signing stuff to work
so

383
00:24:55,850 --> 00:25:00,370
for for the VM Ford enter the one
checking the pages

384
00:25:00,370 --> 00:25:03,590
to work and to Cupressus if there's a
problem

385
00:25:03,590 --> 00:25:09,929
the it requires to work that the CSQ
prepare you is set

386
00:25:09,929 --> 00:25:13,880
and that its the the correct lobster
verified

387
00:25:13,880 --> 00:25:18,020
the pages so

388
00:25:18,020 --> 00:25:21,610
and everything here the blobs

389
00:25:21,610 --> 00:25:25,620
come to that but skill in the third in
case of a binary

390
00:25:25,620 --> 00:25:29,679
you name if I which will call

391
00:25:29,679 --> 00:25:34,850
a daemon process that's using some kind
of

392
00:25:34,850 --> 00:25:39,490
do I leave to to

393
00:25:39,490 --> 00:25:43,130
to validate the signature still

394
00:25:43,130 --> 00:25:46,460
yeah it's got a really good you it's a

395
00:25:46,460 --> 00:25:49,570
a process that's also using it you will
leave

396
00:25:49,570 --> 00:25:52,950
and yeah its it's so complicated again
see

397
00:25:52,950 --> 00:25:59,210
so

398
00:25:59,210 --> 00:26:02,370
now talking about and and if I D so

399
00:26:02,370 --> 00:26:05,850
all batteries should with US and if I D

400
00:26:05,850 --> 00:26:09,710
included of course have she's in the
kennel

401
00:26:09,710 --> 00:26:13,850
that there's no chicken-and-egg problem

402
00:26:13,850 --> 00:26:16,920
and if I didn't have to verify

403
00:26:16,920 --> 00:26:21,000
itself that it is correctly sign
affected it's a Canon

404
00:26:21,000 --> 00:26:24,110
can verify refrain its and

405
00:26:24,110 --> 00:26:28,040
aim if idea they said use some kinda
memory to verify the code signature

406
00:26:28,040 --> 00:26:31,270
batteries if it passes if

407
00:26:31,270 --> 00:26:34,320
em if I do say so OK then the

408
00:26:34,320 --> 00:26:37,510
the can win continue to love the binary

409
00:26:37,510 --> 00:26:41,270
no matter what I mean

410
00:26:41,270 --> 00:26:44,910
in a spin code signing point of view so

411
00:26:44,910 --> 00:26:51,040
wow the weaknesses love this blobs are
validated

412
00:26:51,040 --> 00:26:54,460
outside the kennel in some kinda views
and process why

413
00:26:54,460 --> 00:26:57,480
we don't really know maybe some design
architecture

414
00:26:57,480 --> 00:27:00,620
happened choose to do it sometime but
it's so

415
00:27:00,620 --> 00:27:04,230
so complex and as long as

416
00:27:04,230 --> 00:27:07,490
him if i think is that they need
permission the Kenwood except any

417
00:27:07,490 --> 00:27:11,920
any blood even if its invades so

418
00:27:11,920 --> 00:27:15,670
the week but of course is the use and
process

419
00:27:15,670 --> 00:27:21,890
so

420
00:27:21,890 --> 00:27:24,950
our idea you is to convince

421
00:27:24,950 --> 00:27:29,120
unified in some way to say your program
is good

422
00:27:29,120 --> 00:27:33,169
even if it's not cite so

423
00:27:33,169 --> 00:27:36,470
let's let's focus

424
00:27:36,470 --> 00:27:39,820
submitted them to you library loading
them so

425
00:27:39,820 --> 00:27:43,429
do it it takes dick scare love loading

426
00:27:43,429 --> 00:27:47,230
dependent libraries in in the Michael
the

427
00:27:47,230 --> 00:27:50,650
and also enzymes a.m. dynamic loading
with the

428
00:27:50,650 --> 00:27:53,960
the doin d open siskel

429
00:27:53,960 --> 00:27:59,360
notes is called function and

430
00:27:59,360 --> 00:28:02,720
do you do out here and in the process
you know it's basically all the

431
00:28:02,720 --> 00:28:03,350
permissions

432
00:28:03,350 --> 00:28:07,280
the process not know more permission
that the process as

433
00:28:07,280 --> 00:28:11,640
and conversely

434
00:28:11,640 --> 00:28:15,040
its forces us to be able to do what's
the way and you can do

435
00:28:15,040 --> 00:28:20,230
so John we load unsigned

436
00:28:20,230 --> 00:28:25,410
dailies by the way says

437
00:28:25,410 --> 00:28:28,910
some kind of protection against this
week protection

438
00:28:28,910 --> 00:28:34,570
some kind of protection he JD tries to
prevent is by reclaiming the Mac who

439
00:28:34,570 --> 00:28:35,560
either to

440
00:28:35,560 --> 00:28:39,679
love the way leads to to be executable
thats

441
00:28:39,679 --> 00:28:45,060
a.m. it doesn't require the library
science its

442
00:28:45,060 --> 00:28:48,460
week why is that the libraries executive

443
00:28:48,460 --> 00:28:51,600
that sounds we had been since is the
truth

444
00:28:51,600 --> 00:28:54,860
so white wine because

445
00:28:54,860 --> 00:28:58,270
they consider that if the

446
00:28:58,270 --> 00:29:01,610
the library's executive anyway the camel
we'll

447
00:29:01,610 --> 00:29:06,419
a check the page X's so it's okay

448
00:29:06,419 --> 00:29:10,060
so a of course if you access any

449
00:29:10,060 --> 00:29:13,110
and scientific table pages that fool

450
00:29:13,110 --> 00:29:18,780
crash that we keep the process can them
can win three going to you

451
00:29:18,780 --> 00:29:21,120
butts why the just

452
00:29:21,120 --> 00:29:24,380
trying to do something deposition and

453
00:29:24,380 --> 00:29:27,690
with a any code just day 2 pages

454
00:29:27,690 --> 00:29:34,690
would that work no because

455
00:29:36,480 --> 00:29:40,100
says this as a record requirements
anyway

456
00:29:40,100 --> 00:29:44,340
load commands

457
00:29:44,340 --> 00:29:48,980
followed commands and above the Mako
editor as to be

458
00:29:48,980 --> 00:29:51,990
in the and execute a ball segments

459
00:29:51,990 --> 00:29:55,050
so in fact you tense

460
00:29:55,050 --> 00:29:58,110
have no executable segments

461
00:29:58,110 --> 00:30:01,210
at all because there is this week
requirements

462
00:30:01,210 --> 00:30:04,830
and this header has to span

463
00:30:04,830 --> 00:30:09,370
the at least the entire Michael it if I
love sets

464
00:30:09,370 --> 00:30:13,490
and their

465
00:30:13,490 --> 00:30:18,780
yes of course miss the at least one that
stinks that

466
00:30:18,780 --> 00:30:22,100
who say's that the Mac who header
actually use by

467
00:30:22,100 --> 00:30:26,600
DDS to be at the front fine there's no

468
00:30:26,600 --> 00:30:32,410
condition for this so here

469
00:30:32,410 --> 00:30:35,790
we just I did and those segments

470
00:30:35,790 --> 00:30:39,150
which is executable 0 so

471
00:30:39,150 --> 00:30:42,230
so small here

472
00:30:42,230 --> 00:30:47,230
its executable its bonds the entire

473
00:30:47,230 --> 00:30:51,780
Michael fine header but we added another
one

474
00:30:51,780 --> 00:30:55,260
another segments thats is not executable

475
00:30:55,260 --> 00:30:59,580
this time so we don't we want camera
will kill you. problem

476
00:30:59,580 --> 00:31:03,140
and it contains a of course

477
00:31:03,140 --> 00:31:08,330
some interposition stuff that's how it
works

478
00:31:08,330 --> 00:31:13,390
that's how we we bypassed the the
process a verification

479
00:31:13,390 --> 00:31:19,309
and 0

480
00:31:19,309 --> 00:31:22,370
yet it works also because a and not

481
00:31:22,370 --> 00:31:27,070
on on OSX a a standoff a US

482
00:31:27,070 --> 00:31:31,520
and Matt we'll replaced replace the
previous mapping anyway so

483
00:31:31,520 --> 00:31:35,880
this this mapping is exactly the same as
the previous one

484
00:31:35,880 --> 00:31:38,990
so basically this this one re

485
00:31:38,990 --> 00:31:45,990
kind of replace this one anyway and now

486
00:31:46,390 --> 00:31:49,510
of course weekend to them into position

487
00:31:49,510 --> 00:31:54,270
and we can have read some functions and

488
00:31:54,270 --> 00:31:57,730
and this is an interesting fiction in AM
if I D

489
00:31:57,730 --> 00:32:01,340
because this this one verifies

490
00:32:01,340 --> 00:32:04,410
the the dad loves and stuff

491
00:32:04,410 --> 00:32:08,120
and you have the you're a pass saying oh
it fades

492
00:32:08,120 --> 00:32:11,790
and the okay tess here and

493
00:32:11,790 --> 00:32:15,290
yet

494
00:32:15,290 --> 00:32:18,980
and this particular

495
00:32:18,980 --> 00:32:22,900
called here happens in the miss

496
00:32:22,900 --> 00:32:26,580
do I leave saudis required by

497
00:32:26,580 --> 00:32:30,160
and and if I T two to work so we can

498
00:32:30,160 --> 00:32:33,550
we weekend interpose at one somehow

499
00:32:33,550 --> 00:32:37,780
here is the idea

500
00:32:37,780 --> 00:32:41,260
we just a replace

501
00:32:41,260 --> 00:32:44,630
we to override that core

502
00:32:44,630 --> 00:32:48,620
so that people always return 0 by for a

503
00:32:48,620 --> 00:32:52,500
for one thing it's to under the a random
function

504
00:32:52,500 --> 00:32:59,500
in shipped cash so

505
00:33:00,270 --> 00:33:03,840
yes the warm security here was just

506
00:33:03,840 --> 00:33:06,929
some clever library injection

507
00:33:06,929 --> 00:33:13,570
is a big fake because a weak points here
the wall dependency between

508
00:33:13,570 --> 00:33:18,370
the blobs here the blobs of poise and
somehow

509
00:33:18,370 --> 00:33:21,580
and everything is okay nobody would kill
you

510
00:33:21,580 --> 00:33:26,010
that works so

511
00:33:26,010 --> 00:33:29,730
yes we convinced and if I D to A KO

512
00:33:29,730 --> 00:33:33,920
program and we did

513
00:33:33,920 --> 00:33:37,790
this without any memory corruption at
all just by

514
00:33:37,790 --> 00:33:41,870
injected in some leads and simple
library

515
00:33:41,870 --> 00:33:46,179
there is a

516
00:33:46,179 --> 00:33:49,500
with a real-world example v
configuration file

517
00:33:49,500 --> 00:33:53,230
that we added to loadings and ivory
keeping

518
00:33:53,230 --> 00:34:00,230
the doing this stuff with a unified so

519
00:34:00,770 --> 00:34:05,080
here come the most interesting parts the
Canon one

520
00:34:05,080 --> 00:34:12,000
and Eric photo make a

521
00:34:12,000 --> 00:34:15,379
yes so that's great we've got

522
00:34:15,379 --> 00:34:19,139
record-setting defeated and we can do a
lot of things

523
00:34:19,139 --> 00:34:23,649
phone at this point that the average
phone cant but we need to go off into

524
00:34:23,649 --> 00:34:24,409
the current

525
00:34:24,409 --> 00:34:28,760
to finish the job to make it more
applicable to the types of Joburg upset

526
00:34:28,760 --> 00:34:34,090
run so jump into it

527
00:34:34,090 --> 00:34:37,370
the actual binary a

528
00:34:37,370 --> 00:34:40,929
it's interesting at the end the day few
exclude also

529
00:34:40,929 --> 00:34:44,609
temporary code does discarded because
evidence

530
00:34:44,609 --> 00:34:50,270
you end up with about five thousand
lines of code about 1300

531
00:34:50,270 --> 00:34:53,320
this I think all of this when the
computer

532
00:34:53,320 --> 00:34:57,490
already planet being dynamically funny
after

533
00:34:57,490 --> 00:35:01,010
so

534
00:35:01,010 --> 00:35:05,790
Boca through there's is on have other
remaining

535
00:35:05,790 --> 00:35:09,859
in descending order funny your record
for

536
00:35:09,859 --> 00:35:14,980
primitives are used to sort of step
towards that goal

537
00:35:14,980 --> 00:35:18,020
we'll talk about that got some

538
00:35:18,020 --> 00:35:21,470
318 mind

539
00:35:21,470 --> 00:35:25,480
from news just for task for PhD 0

540
00:35:25,480 --> 00:35:28,740
a person able to get term

541
00:35:28,740 --> 00:35:31,910
Moses gobbledygook but the

542
00:35:31,910 --> 00:35:35,990
this first bullet points 17 19 that's
useful could

543
00:35:35,990 --> 00:35:39,470
its public domain Ford

544
00:35:39,470 --> 00:35:43,500
this is the first job breaking a while
that we haven't had to

545
00:35:43,500 --> 00:35:48,140
have everyone every model of iPhone or
iPad out there

546
00:35:48,140 --> 00:35:51,370
and dole out to try to get them to give
our

547
00:35:51,370 --> 00:35:54,590
to give addresses offsets based on

548
00:35:54,590 --> 00:35:57,630
the model systemically funny houses

549
00:35:57,630 --> 00:36:02,500
something that was desperately-needed
David

550
00:36:02,500 --> 00:36:07,620
arm it comes down to the core firmly
believe that we're using is a USB

551
00:36:07,620 --> 00:36:11,010
vulnerability eternal source of

552
00:36:11,010 --> 00:36:14,330
problem threw up on for a lot of other
devices to

553
00:36:14,330 --> 00:36:18,650
I'm specifically reusing this I O USB
device interface

554
00:36:18,650 --> 00:36:23,090
which is part of the party the PRI for

555
00:36:23,090 --> 00:36:27,600
an application to make used fuse p on

556
00:36:27,600 --> 00:36:30,730
customers or on best

557
00:36:30,730 --> 00:36:34,240
and it has not just one vulnerability
that would have from

558
00:36:34,240 --> 00:36:38,130
been useful by itself it was the second
one which made it even

559
00:36:38,130 --> 00:36:42,380
more useful and it was only a few
methods

560
00:36:42,380 --> 00:36:47,220
we we with these two fundamental

561
00:36:47,220 --> 00:36:50,720
on abilities we create to

562
00:36:50,720 --> 00:36:53,760
recreate a few actually primitive

563
00:36:53,760 --> 00:36:57,220
and you take these printers & come I'm
to

564
00:36:57,220 --> 00:37:02,760
achieve all the remaining

565
00:37:02,760 --> 00:37:06,870
the actual calls natural methods

566
00:37:06,870 --> 00:37:10,840
there a problem this is just a subset
there's

567
00:37:10,840 --> 00:37:15,240
2025 about that in this in this
interface

568
00:37:15,240 --> 00:37:18,840
the print server problem are stopped by
which is

569
00:37:18,840 --> 00:37:22,440
15 115 and

570
00:37:22,440 --> 00:37:25,540
few down created a

571
00:37:25,540 --> 00:37:29,070
stop by arm let us

572
00:37:29,070 --> 00:37:32,140
wallet it without doing any serious
checking

573
00:37:32,140 --> 00:37:35,150
it just accepts a a pointer

574
00:37:35,150 --> 00:37:38,510
provided to it from user side

575
00:37:38,510 --> 00:37:43,800
and and imbues a lot of

576
00:37:43,800 --> 00:37:48,100
importance on to it assumes that is
quickly format in

577
00:37:48,100 --> 00:37:52,350
right kind about you'll see in seconds

578
00:37:52,350 --> 00:37:57,210
in the second one here to create data is
useful because it's

579
00:37:57,210 --> 00:38:00,230
is a cricketer address week basically

580
00:38:00,230 --> 00:38:04,010
it allows us to

581
00:38:04,010 --> 00:38:09,350
derive the kernel offset the slide

582
00:38:09,350 --> 00:38:13,030
the this map to Canada returns in
general

583
00:38:13,030 --> 00:38:17,060
this book can be anything that you need
to call it required the actual calls for

584
00:38:17,060 --> 00:38:23,040
took sophie is unique the surest way to
do that is to

585
00:38:23,040 --> 00:38:28,780
make it an address

586
00:38:28,780 --> 00:38:32,000
the address doesn't be anything to the
user

587
00:38:32,000 --> 00:38:35,500
plant application because it's in a
different

588
00:38:35,500 --> 00:38:39,070
address space anywhere and can't access
it

589
00:38:39,070 --> 00:38:44,080
because that so its short is a quick and
dirty way to get some unique

590
00:38:44,080 --> 00:38:51,080
that's what up a bit

591
00:38:51,780 --> 00:38:55,140
know so these libraries there's up

592
00:38:55,140 --> 00:38:59,310
one time for these levers we can get the
source on on open source on Apple's

593
00:38:59,310 --> 00:39:03,220
website this is not one of them so you
have to

594
00:39:03,220 --> 00:39:09,380
we had to reverse engineer the kernel
accent

595
00:39:09,380 --> 00:39:12,609
in these are serious these two love
these two vulnerabilities in

596
00:39:12,609 --> 00:39:17,200
in fact even that first one really or is
sufficiently powerful to

597
00:39:17,200 --> 00:39:21,330
enable everything else that happens I
like that we don't have to search code

598
00:39:21,330 --> 00:39:22,650
for this part but

599
00:39:22,650 --> 00:39:25,900
these are the basic the three

600
00:39:25,900 --> 00:39:29,859
routines stand up this is your main
entry points

601
00:39:29,859 --> 00:39:33,620
and whether or not you pass certain
conditions you leave the call the

602
00:39:33,620 --> 00:39:37,400
service order

603
00:39:37,400 --> 00:39:40,780
we don't have a fancy we are structured

604
00:39:40,780 --> 00:39:43,900
David sat down in route is very

605
00:39:43,900 --> 00:39:48,280
you know street for translation I guess
from

606
00:39:48,280 --> 00:39:53,609
from all these officers into Fisker it's
probably not very obvious but

607
00:39:53,609 --> 00:39:58,030
I for its best start of this is Justin
if

608
00:39:58,030 --> 00:40:01,920
in this right here is a function and in
the streets here

609
00:40:01,920 --> 00:40:06,550
rather arguments that function and if
you following the prophecies

610
00:40:06,550 --> 00:40:10,130
you see that that sticks out

611
00:40:10,130 --> 00:40:13,440
so you do admit massaging that I'm a
little bit more

612
00:40:13,440 --> 00:40:17,760
clean you gone from by bites to do you
weren't

613
00:40:17,760 --> 00:40:22,060
and then when you think of it in terms
of oversee fuss fuss

614
00:40:22,060 --> 00:40:25,670
anything without X you serve drive this

615
00:40:25,670 --> 00:40:29,160
much cleaner representation

616
00:40:29,160 --> 00:40:34,060
what the actual function is and it's
important this is the importance

617
00:40:34,060 --> 00:40:37,200
version all these are covered but this
is obviously

618
00:40:37,200 --> 00:40:43,690
use to read with you i cud

619
00:40:43,690 --> 00:40:47,550
so big thing about some pipe could use a
call arbitrary functions

620
00:40:47,550 --> 00:40:52,440
we cannot anymore we used to be able to
create functions

621
00:40:52,440 --> 00:40:55,600
in userspace actually have have this

622
00:40:55,600 --> 00:40:59,270
routine call which if you have a 2006
but

623
00:40:59,270 --> 00:41:03,520
which you can call or functions through
in order to do that you need to make

624
00:41:03,520 --> 00:41:04,940
sure that the

625
00:41:04,940 --> 00:41:09,040
the object that you provide through down
through the arguments there

626
00:41:09,040 --> 00:41:12,980
you to just make sure that it is
observable from the kernel

627
00:41:12,980 --> 00:41:17,010
has become a member in real we also have
to know the address

628
00:41:17,010 --> 00:41:21,580
to make it useful and I was originally
just

629
00:41:21,580 --> 00:41:24,790
want to use

630
00:41:24,790 --> 00:41:27,970
as I mentioned attorney speed up cuz
when you do

631
00:41:27,970 --> 00:41:31,560
the arm we can no longer act the kernel
can no longer access

632
00:41:31,560 --> 00:41:35,150
directly users man's face

633
00:41:35,150 --> 00:41:38,520
and whereas before occurred so you can
literally just malek

634
00:41:38,520 --> 00:41:42,730
a buffer unusual in space up for Twitter
we wanted interpret

635
00:41:42,730 --> 00:41:46,510
you know don't functions into their
tempted into their

636
00:41:46,510 --> 00:41:51,800
just pass it to stop and it would
executed

637
00:41:51,800 --> 00:41:55,430
das it for a long time that's been
around for two years

638
00:41:55,430 --> 00:41:59,750
fears for psych

639
00:41:59,750 --> 00:42:05,070
now it is chaos Chancellor Richard
challenging to first find the objects

640
00:42:05,070 --> 00:42:08,470
and then of course modifying is a
different story

641
00:42:08,470 --> 00:42:11,500
and this is

642
00:42:11,500 --> 00:42:14,740
makes it hard to know now that with
limited to only Collingwood with already

643
00:42:14,740 --> 00:42:15,880
in the kernel

644
00:42:15,880 --> 00:42:20,540
kiss of armitage part 2 give the right
address

645
00:42:20,540 --> 00:42:23,570
even if you know it's something you
wanna call hours

646
00:42:23,570 --> 00:42:27,120
more difficult and

647
00:42:27,120 --> 00:42:30,650
again created a creates this standard

648
00:42:30,650 --> 00:42:35,109
Apple sender structure memory map

649
00:42:35,109 --> 00:42:38,570
and it gives us its current address as
the toga

650
00:42:38,570 --> 00:42:41,850
was talking

651
00:42:41,850 --> 00:42:45,230
the it lives at the end the day at work
live

652
00:42:45,230 --> 00:42:48,990
calyx owns because as a particular size

653
00:42:48,990 --> 00:42:52,770
have this this element

654
00:42:52,770 --> 00:42:58,140
it's always going to be and Sony

655
00:42:58,140 --> 00:43:02,600
now for call what we want to do that
purpose what we're trying to do

656
00:43:02,600 --> 00:43:06,040
isn't enough new exists inside that
collar

657
00:43:06,040 --> 00:43:09,130
meter no specifically where

658
00:43:09,130 --> 00:43:12,720
is going to exist for

659
00:43:12,720 --> 00:43:15,770
future call and so you do is you would
dude

660
00:43:15,770 --> 00:43:18,790
sizing you

661
00:43:18,790 --> 00:43:21,870
you call created enough times to make
sure that your

662
00:43:21,870 --> 00:43:25,460
your children and the screen page you
over

663
00:43:25,460 --> 00:43:29,540
refuse up all the existing space in and
current page for that

664
00:43:29,540 --> 00:43:33,730
zone size you know your some into a
brand new page

665
00:43:33,730 --> 00:43:37,440
seizure far enough into the page now you
can to have a few

666
00:43:37,440 --> 00:43:41,450
non so not guarantee which is a very
high probability that

667
00:43:41,450 --> 00:43:45,630
the next few call will also in the page

668
00:43:45,630 --> 00:43:51,480
increasing addresses from you can
predict

669
00:43:51,480 --> 00:43:54,580
and so once we are able to do that

670
00:43:54,580 --> 00:43:58,230
from sergeant to find the address but
the next allocation

671
00:43:58,230 --> 00:44:03,120
will provide

672
00:44:03,120 --> 00:44:07,770
so this is in reference to but the whole
idea for using this this technique

673
00:44:07,770 --> 00:44:11,490
using these cartoons for this purpose
came from Mark Todd

674
00:44:11,490 --> 00:44:15,920
favorite OJ's paper few months ago
tackle box

675
00:44:15,920 --> 00:44:19,010
column for

676
00:44:19,010 --> 00:44:25,010
and homeowners to get data that we can
control

677
00:44:25,010 --> 00:44:28,920
unknown location to the basics

678
00:44:28,920 --> 00:44:33,870
processes you you you send these
messages you'll consume the right away

679
00:44:33,870 --> 00:44:37,359
use on the road you send them much them
intern

680
00:44:37,359 --> 00:44:40,640
you get its persons fault for its first
between the

681
00:44:40,640 --> 00:44:43,650
data the header then capsulatum and

682
00:44:43,650 --> 00:44:48,650
inner are controlled manner eventually
they will get flushed in the Sun so good

683
00:44:48,650 --> 00:44:52,000
used at some point so

684
00:44:52,000 --> 00:44:55,670
you need you can do this forever but

685
00:44:55,670 --> 00:45:02,670
you can cause im before when you request
the message

686
00:45:03,290 --> 00:45:07,470
its arm its that is really see how it
worked out

687
00:45:07,470 --> 00:45:11,450
the it only has

688
00:45:11,450 --> 00:45:14,819
must sit in the city bites

689
00:45:14,819 --> 00:45:18,130
the header itself as 48 bytes

690
00:45:18,130 --> 00:45:21,940
and two we can only use 28 base

691
00:45:21,940 --> 00:45:26,660
tax which is for you

692
00:45:26,660 --> 00:45:29,819
for to bite into being 10 the words

693
00:45:29,819 --> 00:45:33,750
and so this is too complex to go see
right now but

694
00:45:33,750 --> 00:45:36,839
you see right here we have 20 words

695
00:45:36,839 --> 00:45:40,180
this table and

696
00:45:40,180 --> 00:45:44,220
this is the reference code this is when
I refer to use with on the phone before

697
00:45:44,220 --> 00:45:46,060
this is ultimately what your

698
00:45:46,060 --> 00:45:49,640
doing with this function and if you go
through

699
00:45:49,640 --> 00:45:53,319
and I'm not going to the right now the
state up here

700
00:45:53,319 --> 00:45:56,589
just fills that 40 bytes that you have

701
00:45:56,589 --> 00:45:59,760
I am can be used to you

702
00:45:59,760 --> 00:46:03,380
give you a function that

703
00:46:03,380 --> 00:46:06,400
you can specify the function

704
00:46:06,400 --> 00:46:11,150
and you can specify one argument from

705
00:46:11,150 --> 00:46:15,960
and difficult but called indirect serve
a primitive

706
00:46:15,960 --> 00:46:19,630
it makes genomics you serve I use P

707
00:46:19,630 --> 00:46:25,410
about in a very specific way you know we
don't intend for a lot of the fields to

708
00:46:25,410 --> 00:46:28,040
do anything we just need to make sure
they're consistent in the past the

709
00:46:28,040 --> 00:46:28,930
checks that

710
00:46:28,930 --> 00:46:31,990
Guardian colonel extension to treat it
like

711
00:46:31,990 --> 00:46:36,630
valid object to get far enough to do the
call

712
00:46:36,630 --> 00:46:41,300
and with that 2012

713
00:46:41,300 --> 00:46:45,370
fun being thanks Eric

714
00:46:45,370 --> 00:46:49,460
so now we have sir to pieces that we
mentioned earlier

715
00:46:49,460 --> 00:46:52,730
first piece was too be able to get data
into kernel

716
00:46:52,730 --> 00:46:55,740
in the first place in order to create a
fake type object

717
00:46:55,740 --> 00:46:59,300
structure second pieces to know the
address that

718
00:46:59,300 --> 00:47:03,870
object and they created a call lets us
fulfill those two requirements

719
00:47:03,870 --> 00:47:08,510
the third thing is that now that we have
call indirect punitive

720
00:47:08,510 --> 00:47:11,630
we need to figure out what function to
call

721
00:47:11,630 --> 00:47:14,770
arm the function must be II

722
00:47:14,770 --> 00:47:18,260
colonel executable code so must be in
contacts naturally

723
00:47:18,260 --> 00:47:21,580
and although we are able to leak
addresses from the kernel

724
00:47:21,580 --> 00:47:26,210
sheep that doesn't help us no what code
to call

725
00:47:26,210 --> 00:47:29,250
and noms for that we actually need to
attack a

726
00:47:29,250 --> 00:47:32,540
KS finally SLR head on

727
00:47:32,540 --> 00:47:36,200
on self treno address space layout
randomization

728
00:47:36,200 --> 00:47:39,970
is a new OS X feature are is ships the

729
00:47:39,970 --> 00:47:43,600
started the kernel by iran denies
amounts

730
00:47:43,600 --> 00:47:47,120
determined by a bootloader and the
entire colonel taxes shifted as one

731
00:47:47,120 --> 00:47:48,830
block so you too sad

732
00:47:48,830 --> 00:47:52,859
a certain random number two every single
you know final address

733
00:47:52,859 --> 00:47:57,220
this means that if you know a particular
landmark in a colonel

734
00:47:57,220 --> 00:48:02,120
are you know say landmark a particular
function say our stall pipe

735
00:48:02,120 --> 00:48:06,069
function on and you are able to retrieve
the address

736
00:48:06,069 --> 00:48:09,940
that stop i Function for the term food
then you can do a simple subtraction

737
00:48:09,940 --> 00:48:11,870
operation get the

738
00:48:11,870 --> 00:48:16,210
KSR slide and be able to add that to
every single asset and be able to know

739
00:48:16,210 --> 00:48:17,069
where everything

740
00:48:17,069 --> 00:48:21,799
travelers so arm is their weakness in
KSR of

741
00:48:21,799 --> 00:48:25,890
are well you know when you look at it
the first thing that

742
00:48:25,890 --> 00:48:29,240
me when the first things that you know
you'll see is that you know the

743
00:48:29,240 --> 00:48:31,210
exception doctors are not moved

744
00:48:31,210 --> 00:48:34,350
these are army exception doctors are
serve

745
00:48:34,350 --> 00:48:38,060
you know whenever something happens like
an arch your sis call

746
00:48:38,060 --> 00:48:41,880
the ARM processor jumpsuits entries an
exception actor

747
00:48:41,880 --> 00:48:45,630
and the ARM processor hardware

748
00:48:45,630 --> 00:48:49,850
on the on my list devices as far as I
know only have two options for the

749
00:48:49,850 --> 00:48:52,609
location and these factors either at 0x0

750
00:48:52,609 --> 00:48:57,120
or 0x SSS South of serial 0/0/0

751
00:48:57,120 --> 00:49:00,799
on so dat chanti move

752
00:49:00,799 --> 00:49:04,750
so the exception doctors in this case is
always at allocation

753
00:49:04,750 --> 00:49:08,190
arm if Jack place was writeable

754
00:49:08,190 --> 00:49:11,920
had a memory right anywhere gadget
primitive dad

755
00:49:11,920 --> 00:49:15,520
did not require a chance are in the
first KSR

756
00:49:15,520 --> 00:49:19,310
defeat in the first place you might be
able to right to that location in jump

757
00:49:19,310 --> 00:49:20,069
to it

758
00:49:20,069 --> 00:49:24,480
but unfortunately that location is like
all

759
00:49:24,480 --> 00:49:27,910
addresses internal tax every single
executable page

760
00:49:27,910 --> 00:49:30,950
internal taxes also marked not writeable

761
00:49:30,950 --> 00:49:35,720
mark read-only and also arm another way
we might be able to exploit it is

762
00:49:35,720 --> 00:49:40,380
you could are you could maybe reader if
he had ever read

763
00:49:40,380 --> 00:49:44,710
primitive that somehow doesn't require
KSR

764
00:49:44,710 --> 00:49:48,970
unfortunately that is now work as well
because the code there is position

765
00:49:48,970 --> 00:49:49,859
independent

766
00:49:49,859 --> 00:49:53,970
and it doesn't and there's not really
any useful

767
00:49:53,970 --> 00:49:58,250
gadgets in there all it does is it takes
is

768
00:49:58,250 --> 00:50:01,870
pointer to the real exception handlers
from this

769
00:50:01,870 --> 00:50:05,440
thread id: seaview registers Richard
which you know you can access in

770
00:50:05,440 --> 00:50:09,380
in usual answer you don't know where the
actual address is if anything RTD's

771
00:50:09,380 --> 00:50:13,190
it's just kinda stuff to call the real
xx exception handlers

772
00:50:13,190 --> 00:50:16,890
salty ever to be able to use this
weakness

773
00:50:16,890 --> 00:50:20,240
requires little their creativity and you
know I

774
00:50:20,240 --> 00:50:24,740
discovered this week I discovered a way
to exploit

775
00:50:24,740 --> 00:50:28,049
this weakness on accident arm I was

776
00:50:28,049 --> 00:50:32,210
trying to a I was trying to readout that
colonel

777
00:50:32,210 --> 00:50:35,819
well given the if you have the call
indirect punitive

778
00:50:35,819 --> 00:50:39,230
what that does is that it allows you to
jump to an arbitrary

779
00:50:39,230 --> 00:50:44,410
colonel address after and after it to
references a certain specified memory

780
00:50:44,410 --> 00:50:45,270
address into

781
00:50:45,270 --> 00:50:48,299
r1 so you can give it a memory address

782
00:50:48,299 --> 00:50:51,830
build a reference that and put the
result in our one so

783
00:50:51,830 --> 00:50:54,890
reader memory value what every specify
in 2001

784
00:50:54,890 --> 00:50:59,670
and I'll jump to what every specified on
it's not very useful if you don't know

785
00:50:59,670 --> 00:51:02,890
were anything in memory is by if you're
able to do that

786
00:51:02,890 --> 00:51:07,839
and if you're able to call say a random
address that forces it to panic

787
00:51:07,839 --> 00:51:11,960
dan in the panic blog like every time
there's a kernel panic

788
00:51:11,960 --> 00:51:15,220
I less rights disc I less panic blog

789
00:51:15,220 --> 00:51:18,720
%uh you can result all the kernel
registers and Hispanic walking

790
00:51:18,720 --> 00:51:19,630
assistance

791
00:51:19,630 --> 00:51:23,109
restarts bed on you can use this

792
00:51:23,109 --> 00:51:26,930
way to read the kernel 32 bits at a time

793
00:51:26,930 --> 00:51:30,660
cell I was using that to investigate
trials

794
00:51:30,660 --> 00:51:34,720
that we have never done for you have any
exploits for these new hardware so we

795
00:51:34,720 --> 00:51:38,480
we can only try to find china-asean
similarities between different kernels

796
00:51:38,480 --> 00:51:39,870
and try to

797
00:51:39,870 --> 00:51:44,319
get our bearings by reading want 32 bits
at a time so I was trying to do that

798
00:51:44,319 --> 00:51:48,589
on but for some reason one I was first
trying to

799
00:51:48,589 --> 00:51:52,080
exploited the I've had many on and
trying to

800
00:51:52,080 --> 00:51:55,830
get it done for the trial using this
method dip the kernel panic

801
00:51:55,830 --> 00:51:59,839
log was useless it had some sources are
see air

802
00:51:59,839 --> 00:52:04,990
arm which was weird and I sorta panic I
was like I I did not know if there's any

803
00:52:04,990 --> 00:52:06,569
way to dump this kernel

804
00:52:06,569 --> 00:52:10,100
so disount just desperation I decide to
jump

805
00:52:10,100 --> 00:52:15,290
to the armed 80 work handler to see will
happen

806
00:52:15,290 --> 00:52:19,020
well jumping to the arm did a poor
handler

807
00:52:19,020 --> 00:52:23,580
did something weird the system didn't
panic

808
00:52:23,580 --> 00:52:27,270
but the program that was running my
exploit code crashed

809
00:52:27,270 --> 00:52:31,650
so what n in addition the crash log for
a program seem to contain

810
00:52:31,650 --> 00:52:35,650
the kernel dread register state and not
the usual and to address is just ate

811
00:52:35,650 --> 00:52:39,670
for that thread when it was when it was
doing nast all pipe exploit

812
00:52:39,670 --> 00:52:42,740
so why did this happen why did only need
that

813
00:52:42,740 --> 00:52:45,790
why did only did you know that the

814
00:52:45,790 --> 00:52:50,810
grad trash 97 tire processor we're
jumping doing something so crazy

815
00:52:50,810 --> 00:52:54,210
as you jump to directly to the arm data
bork

816
00:52:54,210 --> 00:52:57,870
exception handler and Dom the answer is

817
00:52:57,870 --> 00:53:02,560
in how that dearborn handler a
distinguishes between

818
00:53:02,560 --> 00:53:05,600
usual and trashes and caramel crashes

819
00:53:05,600 --> 00:53:09,540
on so here's a little bit background
about the ARM architecture there's a CPS

820
00:53:09,540 --> 00:53:10,990
our answer an arm

821
00:53:10,990 --> 00:53:15,589
Dec contains a bit field from this year
old did 02 bit three

822
00:53:15,589 --> 00:53:19,010
%uh that has 'em it's called mold bits
and

823
00:53:19,010 --> 00:53:22,060
basically tells a processor what's noted
Sanders

824
00:53:22,060 --> 00:53:26,540
a few different knows user -fitr to as
such I wanna dance the abort mode

825
00:53:26,540 --> 00:53:30,080
naturally and one and

826
00:53:30,080 --> 00:53:34,920
exception happens like it did oh boy
section happens the CPS our state

827
00:53:34,920 --> 00:53:38,980
during the exception like to fright
before exception is saved in this bank

828
00:53:38,980 --> 00:53:44,520
register call SDSR us sepia Zack CPS
ours a current programs the register and

829
00:53:44,520 --> 00:53:47,529
as TSR as save programs the register

830
00:53:47,529 --> 00:53:51,299
processor said sensor on

831
00:53:51,299 --> 00:53:55,670
and dan you can check the exceptions can
there can check

832
00:53:55,670 --> 00:53:59,080
tits SDSR to determine what the previous

833
00:53:59,080 --> 00:54:02,920
what the processor mode during the
exceptions

834
00:54:02,920 --> 00:54:07,700
arm the instructions old there's a bit
of complexity in that there's a

835
00:54:07,700 --> 00:54:11,029
there's the SDSR registers bank so
there's a

836
00:54:11,029 --> 00:54:14,210
different copy of the SPS are for every
single processor

837
00:54:14,210 --> 00:54:17,920
node but their instructions to access

838
00:54:17,920 --> 00:54:20,940
any of the SDSR registers the same it's
just

839
00:54:20,940 --> 00:54:25,960
it just instruction access the SDSR as a
ser in the current processor

840
00:54:25,960 --> 00:54:29,120
on so

841
00:54:29,120 --> 00:54:33,100
so so basically if you jump directly to
the data

842
00:54:33,100 --> 00:54:37,520
more camber without actually tricking a
real dearborn exception

843
00:54:37,520 --> 00:54:40,990
the SPS are is going to be not did

844
00:54:40,990 --> 00:54:44,819
and is is not going to respect when you

845
00:54:44,819 --> 00:54:48,150
jump to detail for handler instead is
going to reflect

846
00:54:48,150 --> 00:54:51,299
when use first entered a syscall

847
00:54:51,299 --> 00:54:55,140
arm and and

848
00:54:55,140 --> 00:54:59,279
I get something I've had a little bit
hit the code for today to abort handler

849
00:54:59,279 --> 00:55:03,020
it checks it writes a check with this
processor mode is

850
00:55:03,020 --> 00:55:06,150
was during the exceptions so it would

851
00:55:06,150 --> 00:55:09,339
it would read Sals

852
00:55:09,339 --> 00:55:13,750
forget the laser fire but injuries SPS
are into ASCII

853
00:55:13,750 --> 00:55:18,140
and then it s its external the its 024

854
00:55:18,140 --> 00:55:21,609
love the SDS at work %uh SDSR

855
00:55:21,609 --> 00:55:25,359
and if no dizzy rolled and than the old
CPS are

856
00:55:25,359 --> 00:55:28,470
the old processor during the exception
was

857
00:55:28,470 --> 00:55:33,120
was a was was user mode and

858
00:55:33,120 --> 00:55:36,810
thanks and

859
00:55:36,810 --> 00:55:40,120
so you will handle that as a user-mode
crash as in this crash

860
00:55:40,120 --> 00:55:43,279
turned red but if the mod is not zero
then you know that the

861
00:55:43,279 --> 00:55:46,970
did the processor state during the
exception was the

862
00:55:46,970 --> 00:55:50,690
was was kernel-mode in which case
something seriously wrong

863
00:55:50,690 --> 00:55:55,220
has happen obviously uses crash entire
panicked entire system

864
00:55:55,220 --> 00:55:59,339
so as I was saying earlier if you jump
to data abort

865
00:55:59,339 --> 00:56:03,839
directly in Civ actually trashing it's
not a real crash

866
00:56:03,839 --> 00:56:08,490
you're just jumping to India for handler
and then the SPS art that the data for

867
00:56:08,490 --> 00:56:09,750
handler will read

868
00:56:09,750 --> 00:56:13,310
is actually what the SDSR was

869
00:56:13,310 --> 00:56:16,310
one the one dis syscall

870
00:56:16,310 --> 00:56:20,830
that trigger stop it. eventually was in
which case it was user lawn

871
00:56:20,830 --> 00:56:24,660
so the deal for handler therefore thinks
that that there was a

872
00:56:24,660 --> 00:56:28,150
was a crash in user land at that point

873
00:56:28,150 --> 00:56:32,359
and then it doesn't retrieved as usual
and registers is

874
00:56:32,359 --> 00:56:36,260
comes to current thus a processor state
they're tryna registers

875
00:56:36,260 --> 00:56:39,930
so basically

876
00:56:39,930 --> 00:56:43,380
if you just call the data for Hamburg
that just turns

877
00:56:43,380 --> 00:56:46,549
that data for hamburger into a you know

878
00:56:46,549 --> 00:56:50,770
function to dump the current kernel
registers including PC

879
00:56:50,770 --> 00:56:55,500
so this is a pretty it is a pretty
powerful

880
00:56:55,500 --> 00:56:58,680
info in full each because not only does
it leak

881
00:56:58,680 --> 00:57:01,950
PC which allows you to you calculate the
Colonels

882
00:57:01,950 --> 00:57:05,650
src yes our stride it also lets you arm

883
00:57:05,650 --> 00:57:08,950
it also lets you leak 11 32-bit

884
00:57:08,950 --> 00:57:12,069
inner Jer because if you use call
indirect

885
00:57:12,069 --> 00:57:16,620
so I'll what we did in invasion is we
are we register did read exception

886
00:57:16,620 --> 00:57:18,500
handler for

887
00:57:18,500 --> 00:57:22,750
for for this thread that we deliberately
use call indirect to

888
00:57:22,750 --> 00:57:25,779
calling to deter bore handler and arm

889
00:57:25,779 --> 00:57:29,010
this way we were able to leak
information

890
00:57:29,010 --> 00:57:33,060
%ah ed so

891
00:57:33,060 --> 00:57:36,200
we crash a threat colonel colonel from
stop life

892
00:57:36,200 --> 00:57:39,790
and then we able to get this address the
turnout just all type 1 and

893
00:57:39,790 --> 00:57:43,460
doing simple subtraction on what the
offices at region

894
00:57:43,460 --> 00:57:47,310
we know what the kearsarge sliders and
then we can also use that to

895
00:57:47,310 --> 00:57:51,190
to sleep any arbitrator memory and using
that we can

896
00:57:51,190 --> 00:57:56,440
leverage eventually finding gadgets and
eventually farm

897
00:57:56,440 --> 00:58:01,359
eventually dumping the whole kernel and
then we can use their patch finding code

898
00:58:01,359 --> 00:58:02,990
the %ah said finding coated

899
00:58:02,990 --> 00:58:07,779
generically generate a state a set up
%ah sets and gadgets that we can use

900
00:58:07,779 --> 00:58:12,150
we can use on device and you know that
the specialty in value vision is that

901
00:58:12,150 --> 00:58:15,430
with this powerful in fully exploit we
didn't have to

902
00:58:15,430 --> 00:58:19,440
hand calculate any of the %ah cetera
gadgets all

903
00:58:19,440 --> 00:58:22,770
it's all very generic code as long as
these vulnerabilities exist on the

904
00:58:22,770 --> 00:58:23,470
system

905
00:58:23,470 --> 00:58:26,400
we're able to exploit them without
knowing anything else about the system

906
00:58:26,400 --> 00:58:26,900
so

907
00:58:26,900 --> 00:58:30,460
I thought that was really cool arm self

908
00:58:30,460 --> 00:58:33,569
obviously this is very useful because
there's like you know five different

909
00:58:33,569 --> 00:58:34,230
varieties

910
00:58:34,230 --> 00:58:38,790
my pads and we're supporting me four
different firmware version so

911
00:58:38,790 --> 00:58:42,500
the possibilities are that different
permutations ive

912
00:58:42,500 --> 00:58:46,430
love kernels is just too many to handle
by hand

913
00:58:46,430 --> 00:58:50,790
on there's a bunch of slides here that

914
00:58:50,790 --> 00:58:54,049
talk about you know details at this
process but I

915
00:58:54,049 --> 00:58:57,109
think you're probably on time sir

916
00:58:57,109 --> 00:59:00,650
maybe we should just skip straight to
questions

917
00:59:00,650 --> 00:59:03,910
yes that's a good idea

918
00:59:03,910 --> 00:59:07,650
I mean there's there's a lot more
details um

919
00:59:07,650 --> 00:59:14,310
when the caveats it is processes that
there's a

920
00:59:14,310 --> 00:59:20,140
there's that says questions

921
00:59:20,140 --> 00:59:22,849
same for a while

922
00:59:22,849 --> 00:59:29,090
higher

923
00:59:29,090 --> 00:59:32,380
X in research re really awesome

924
00:59:32,380 --> 00:59:36,280
things are getting harder and harder
will this be the last

925
00:59:36,280 --> 00:59:40,970
jailbreak I mean I don't think so

926
00:59:40,970 --> 00:59:45,020
I think some there's stuff

927
00:59:45,020 --> 00:59:48,560
there's probably still you know there
there's I think there's definitely

928
00:59:48,560 --> 00:59:51,180
exploits at have been discovered and

929
00:59:51,180 --> 00:59:55,830
I think graceful will continue for some
time hazardous

930
00:59:55,830 --> 01:00:00,450
this used to be one like I said has been
around for for 23 years

931
01:00:00,450 --> 01:00:04,510
so we were using an internal you turned
out for different reasons not to be

932
01:00:04,510 --> 01:00:09,430
widely deployed but because we didn't
use it call topples attention

933
01:00:09,430 --> 01:00:13,270
is usable to two years later for this
very

934
01:00:13,270 --> 01:00:17,300
my venture job richter to sell lot to
that so left

935
01:00:17,300 --> 01:00:24,300
good news thank you

936
01:00:32,579 --> 01:00:37,130
would you like to continue became yes
sure we can

937
01:00:37,130 --> 01:00:40,589
talk a little bit about some some
details at this thing

938
01:00:40,589 --> 01:00:44,719
arm unfortunately for this matter that
the

939
01:00:44,719 --> 01:00:48,569
exception handler on due to how I'll
connect call

940
01:00:48,569 --> 01:00:54,539
works always always leaks 6,000 144 beds
every time you do it so you can do it

941
01:00:54,539 --> 01:00:56,469
too much you have to use it to leverage

942
01:00:56,469 --> 01:01:00,619
Creek and finding better gadget very
primitive spirit

943
01:01:00,619 --> 01:01:04,259
gadgets for better from it is later on
on the reason is because

944
01:01:04,259 --> 01:01:08,170
their is a the system

945
01:01:08,170 --> 01:01:11,369
the aisle chance call is actually a mock
message

946
01:01:11,369 --> 01:01:17,729
make call and that eventually causes
function call I T CK Object Server in

947
01:01:17,729 --> 01:01:18,349
the kernel

948
01:01:18,349 --> 01:01:21,769
and that allocates a.m. a

949
01:01:21,769 --> 01:01:24,910
reply in a reply just in case the and

950
01:01:24,910 --> 01:01:27,910
just in case the the function airs out

951
01:01:27,910 --> 01:01:32,809
and unfortunately this reply is
allocated on the calyx yet and it's

952
01:01:32,809 --> 01:01:36,579
its it says and point the value of the
pointer is stored on the stack

953
01:01:36,579 --> 01:01:40,729
but the floor we can properly return it
unwind the stack

954
01:01:40,729 --> 01:01:44,130
we called the data Warhammer

955
01:01:44,130 --> 01:01:47,999
and that X is colonel motor function
call to an exception returns and

956
01:01:47,999 --> 01:01:51,069
that doesn't unwind a stack normally so
that current

957
01:01:51,069 --> 01:01:57,410
kernel stack is lost forever so Israel
this really bug me

958
01:01:57,410 --> 01:02:02,390
and I I'd really like writing tween code
and technically we only need to have one

959
01:02:02,390 --> 01:02:06,099
love these fake rashes for boot so you
know you you Louis

960
01:02:06,099 --> 01:02:11,749
s60 love ice on a you know 256 or 512
megabytes and maybe that's not a big

961
01:02:11,749 --> 01:02:12,140
deal

962
01:02:12,140 --> 01:02:16,229
I'm completely a CD and I'm wanted to so
I manually search

963
01:02:16,229 --> 01:02:19,509
every single page in and memory

964
01:02:19,509 --> 01:02:24,799
that long to the Kala tools to find that
missing object and free a proper really

965
01:02:24,799 --> 01:02:29,440
going to have to use 2009 this his

966
01:02:29,440 --> 01:02:33,599
new emerging emerges after tease if

967
01:02:33,599 --> 01:02:38,809
sponsor NNN

968
01:02:38,809 --> 01:02:43,410
in this nurse lives we had on we

969
01:02:43,410 --> 01:02:47,190
there's some other primitives that we
can create with with the from

970
01:02:47,190 --> 01:02:50,660
with those function call from as we can
find a job

971
01:02:50,660 --> 01:02:53,799
a gadgets that allows

972
01:02:53,799 --> 01:02:59,180
allows us to basically right anywhere it
is a very simple gadget dats takes

973
01:02:59,180 --> 01:03:02,900
the value of our wine stores it to the
address point to buy our two and then

974
01:03:02,900 --> 01:03:03,609
returns

975
01:03:03,609 --> 01:03:06,910
runaway and now lets is if we call that

976
01:03:06,910 --> 01:03:10,170
basically lets his right

977
01:03:10,170 --> 01:03:14,719
cleanly to to any address be specified
and noms

978
01:03:14,719 --> 01:03:19,170
this is the this is I've read anywhere
primitive that does not

979
01:03:19,170 --> 01:03:23,219
you know you stick at crashes but it
does require knowing where many movies

980
01:03:23,219 --> 01:03:26,219
on what it does is that up

981
01:03:26,219 --> 01:03:29,709
the first argument that you that

982
01:03:29,709 --> 01:03:33,619
when you do call indirect the first
argument to the function that you can

983
01:03:33,619 --> 01:03:37,559
arbitrary called is only some I
controlled it points to a

984
01:03:37,559 --> 01:03:41,609
if the points the middle %uh when the OL
descriptor buffers

985
01:03:41,609 --> 01:03:45,440
and she's and on and

986
01:03:45,440 --> 01:03:49,089
because I've that you can if you comment
move the destination argument will

987
01:03:49,089 --> 01:03:49,849
therefore be

988
01:03:49,849 --> 01:03:53,699
in one of those descriptor offers that
you are passing in

989
01:03:53,699 --> 01:03:56,719
so if you so you can arm

990
01:03:56,719 --> 01:03:59,849
specify the second argument to be

991
01:03:59,849 --> 01:04:03,180
you know where you want to read from in
the third argument to be how much you

992
01:04:03,180 --> 01:04:05,130
want to read and as long as she too read

993
01:04:05,130 --> 01:04:08,819
small enough to fit into that you know
forty by

994
01:04:08,819 --> 01:04:14,019
offer then was less however many last
five times for

995
01:04:14,019 --> 01:04:18,449
last 20 bytes so if it's if it's more
than a 20 or 24 bytes

996
01:04:18,449 --> 01:04:22,509
than arm you're able to use this method
to read you know twenty or twenty four

997
01:04:22,509 --> 01:04:23,390
bytes at a time

998
01:04:23,390 --> 01:04:26,859
missus is overkill for jailbreak
purposes

999
01:04:26,859 --> 01:04:31,670
so to recover jewelry purposes it is the
kind of thing that would be useful to a

1000
01:04:31,670 --> 01:04:32,289
bike at

1001
01:04:32,289 --> 01:04:35,650
attacker who doesn't have a lot of other
requirements that we do

1002
01:04:35,650 --> 01:04:39,509
use this to do condoms and such like
that but

1003
01:04:39,509 --> 01:04:44,529
but it's not useful overall it's unusual
for prudence is useful for exploration

1004
01:04:44,529 --> 01:04:48,369
in it's a lot of work to get to this you
to this

1005
01:04:48,369 --> 01:04:51,539
primitive yeah wills

1006
01:04:51,539 --> 01:04:55,349
I could have hardcore lot values one
thing that we do use this for

1007
01:04:55,349 --> 01:04:58,589
is I guess this is also important to say
is that

1008
01:04:58,589 --> 01:05:02,339
eventually we want to get to a point
where we can pass a colonel now Apple is

1009
01:05:02,339 --> 01:05:02,880
set

1010
01:05:02,880 --> 01:05:07,339
is another 1i a-sixes security
improvements is that

1011
01:05:07,339 --> 01:05:10,460
finally now kernel code and is travel
page

1012
01:05:10,460 --> 01:05:14,180
text pages are executed born along the
right up so

1013
01:05:14,180 --> 01:05:19,170
that's great but you can still but the
the actual hardware page tables

1014
01:05:19,170 --> 01:05:22,710
that those commissions are based are
still writeable obviously they have to

1015
01:05:22,710 --> 01:05:23,710
be self

1016
01:05:23,710 --> 01:05:26,940
you can change the page tables you can
like user

1017
01:05:26,940 --> 01:05:31,160
right anywhere from it each altered the
page tables to make the recipe exactly

1018
01:05:31,160 --> 01:05:34,339
pages pages writeable an hour to
traverse the

1019
01:05:34,339 --> 01:05:37,670
page tables can sometimes you have to go
into like randomly

1020
01:05:37,670 --> 01:05:42,670
located second level page tables if you
don't want brute force it

1021
01:05:42,670 --> 01:05:46,589
you do ideally need to feed

1022
01:05:46,589 --> 01:05:49,710
memory to be able to to know word page
tables are

1023
01:05:49,710 --> 01:05:56,039
with their current state is seeking
c'mon

1024
01:05:56,039 --> 01:05:59,059
and there's another there's another
larger

1025
01:05:59,059 --> 01:06:03,559
read anywhere primitive we use data is
also be some marketers is work

1026
01:06:03,559 --> 01:06:07,009
on basically we use the men

1027
01:06:07,009 --> 01:06:11,279
think trick to corrupt by

1028
01:06:11,279 --> 01:06:14,989
to corrupt the to drop the VM nap

1029
01:06:14,989 --> 01:06:18,319
copy Hatter tea header

1030
01:06:18,319 --> 01:06:21,989
structure I'll wanna one of the ones
that we passing

1031
01:06:21,989 --> 01:06:25,019
lol descriptors so when we receive the
message

1032
01:06:25,019 --> 01:06:28,460
after we have overwritten corrupt
ivana's headers

1033
01:06:28,460 --> 01:06:31,910
it will let us %uh read arbitrarily

1034
01:06:31,910 --> 01:06:35,299
anywhere in memory so you can see their
presentation on

1035
01:06:35,299 --> 01:06:38,660
details about that message

1036
01:06:38,660 --> 01:06:42,549
on

1037
01:06:42,549 --> 01:06:45,940
so the the slides basically showed my

1038
01:06:45,940 --> 01:06:49,140
into details of my implementation this

1039
01:06:49,140 --> 01:06:52,229
method its its is rather complex in

1040
01:06:52,229 --> 01:06:57,890
have a hard time explaining anyways

1041
01:06:57,890 --> 01:07:04,170
yeah

1042
01:07:04,170 --> 01:07:08,640
so basically like wanted know things
about this jailbreak that

1043
01:07:08,640 --> 01:07:12,150
%ah I hope will contribute to the Future
Energy

1044
01:07:12,150 --> 01:07:15,390
jailbreaks is out now we have a nice
setup pass funny routines

1045
01:07:15,390 --> 01:07:19,230
that action I'm actually fine assets
like the family a BIOS devices

1046
01:07:19,230 --> 01:07:22,340
grown so much now no one wants to
manually

1047
01:07:22,340 --> 01:07:26,120
if go through look at every single
kernel variation or

1048
01:07:26,120 --> 01:07:31,910
or use our lawn us offer variation find
all the %ah Sat cell if we have that

1049
01:07:31,910 --> 01:07:32,960
dental the

1050
01:07:32,960 --> 01:07:37,050
ill ill be much easier to 22 tree job
race at work on

1051
01:07:37,050 --> 01:07:40,350
on devices and other things that we have
a pretty

1052
01:07:40,350 --> 01:07:43,580
stable Kui we've developed over two
months

1053
01:07:43,580 --> 01:07:47,630
using Corona right direction and and now
we're able to

1054
01:07:47,630 --> 01:07:50,890
to have the internationalize so

1055
01:07:50,890 --> 01:07:55,890
you know cancer large growing population
non-english speaking

1056
01:07:55,890 --> 01:08:00,240
joffrey people basically

