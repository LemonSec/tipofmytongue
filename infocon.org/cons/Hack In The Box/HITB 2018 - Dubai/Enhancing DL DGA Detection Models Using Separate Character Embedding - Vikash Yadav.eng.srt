1
00:00:24,500 --> 00:00:30,680
hi everyone<font color="#CCCCCC"> welcome my</font><font color="#E5E5E5"> name is Vic asado</font>

2
00:00:28,040 --> 00:00:33,680
<font color="#CCCCCC">I'm a</font><font color="#E5E5E5"> data scientist at Royal Bank of</font>

3
00:00:30,680 --> 00:00:36,170
Canada<font color="#CCCCCC"> I work as part</font><font color="#E5E5E5"> of a joint</font>

4
00:00:33,680 --> 00:00:40,309
security<font color="#CCCCCC"> operations center also known as</font>

5
00:00:36,170 --> 00:00:42,350
JSOC<font color="#E5E5E5"> we are group of six data scientist</font>

6
00:00:40,309 --> 00:00:44,769
we are not<font color="#CCCCCC"> cybersecurity</font><font color="#E5E5E5"> expert but we</font>

7
00:00:42,350 --> 00:00:47,570
work closely with<font color="#E5E5E5"> threat hunters</font>

8
00:00:44,770 --> 00:00:50,000
penetration testers and SME from

9
00:00:47,570 --> 00:00:53,690
<font color="#E5E5E5">different line</font><font color="#CCCCCC"> of businesses</font><font color="#E5E5E5"> for from</font>

10
00:00:50,000 --> 00:00:59,079
RBC<font color="#CCCCCC"> to</font><font color="#E5E5E5"> enhance overall security posture</font>

11
00:00:53,690 --> 00:01:01,879
<font color="#CCCCCC">of RBC the topic of today's talk is</font>

12
00:00:59,079 --> 00:01:06,229
detecting<font color="#CCCCCC"> TGA using deep learning which</font>

13
00:01:01,880 --> 00:01:08,300
<font color="#CCCCCC">is</font><font color="#E5E5E5"> a area of machine learning and how</font>

14
00:01:06,229 --> 00:01:10,310
<font color="#CCCCCC">can we enhance or improve the</font>

15
00:01:08,300 --> 00:01:12,710
performance of these<font color="#CCCCCC"> DJ detection using</font>

16
00:01:10,310 --> 00:01:15,229
<font color="#CCCCCC">our separate correctly emitting water</font><font color="#E5E5E5"> so</font>

17
00:01:12,710 --> 00:01:17,089
I'm gonna<font color="#E5E5E5"> cover</font><font color="#CCCCCC"> all of these dumps as</font>

18
00:01:15,229 --> 00:01:19,160
part<font color="#E5E5E5"> of my presentation so if you don't</font>

19
00:01:17,090 --> 00:01:21,649
know<font color="#CCCCCC"> don't worry about</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> or</font><font color="#E5E5E5"> we'll cover</font>

20
00:01:19,160 --> 00:01:25,970
all<font color="#CCCCCC"> of these</font><font color="#E5E5E5"> storms in detail as we go</font>

21
00:01:21,649 --> 00:01:29,240
<font color="#E5E5E5">through the presentation so I divided</font>

22
00:01:25,970 --> 00:01:30,590
<font color="#E5E5E5">the presentation in four sections in the</font>

23
00:01:29,240 --> 00:01:33,580
first<font color="#E5E5E5"> section we</font><font color="#CCCCCC"> are</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to look at</font>

24
00:01:30,590 --> 00:01:36,290
the problem what we are trying<font color="#CCCCCC"> to solve</font>

25
00:01:33,580 --> 00:01:39,830
<font color="#CCCCCC">next section we look at some</font><font color="#E5E5E5"> of the</font>

26
00:01:36,290 --> 00:01:41,630
<font color="#CCCCCC">already available</font><font color="#E5E5E5"> approach to tackle</font>

27
00:01:39,830 --> 00:01:44,500
this<font color="#CCCCCC"> problem both the traditional</font><font color="#E5E5E5"> as</font>

28
00:01:41,630 --> 00:01:48,259
well<font color="#E5E5E5"> as machine</font><font color="#CCCCCC"> learning based approach</font>

29
00:01:44,500 --> 00:01:49,729
<font color="#E5E5E5">then one of the most popular machine</font>

30
00:01:48,259 --> 00:01:52,520
learning approach to tackle this<font color="#E5E5E5"> problem</font>

31
00:01:49,729 --> 00:01:54,049
is recurrent neural network<font color="#CCCCCC"> and we are</font>

32
00:01:52,520 --> 00:01:56,560
<font color="#E5E5E5">going to talk in</font><font color="#CCCCCC"> depth about that</font>

33
00:01:54,049 --> 00:01:59,869
<font color="#E5E5E5">technique how it works and what</font><font color="#CCCCCC"> all the</font>

34
00:01:56,560 --> 00:02:02,090
advantages or disadvantages<font color="#E5E5E5"> of that</font>

35
00:01:59,869 --> 00:02:04,790
technique and in the<font color="#E5E5E5"> last section we</font><font color="#CCCCCC"> are</font>

36
00:02:02,090 --> 00:02:06,500
<font color="#CCCCCC">going to discuss</font><font color="#E5E5E5"> some of the enhancement</font>

37
00:02:04,790 --> 00:02:08,239
or improvement that we are making so

38
00:02:06,500 --> 00:02:11,209
that<font color="#E5E5E5"> to improve the accuracy on</font>

39
00:02:08,239 --> 00:02:14,900
<font color="#E5E5E5">detecting unknown DJ's so with that</font>

40
00:02:11,209 --> 00:02:18,380
let's start with the first<font color="#E5E5E5"> section so</font>

41
00:02:14,900 --> 00:02:21,799
the<font color="#CCCCCC"> malware's</font><font color="#E5E5E5"> are every waiver</font><font color="#CCCCCC"> even in</font>

42
00:02:18,380 --> 00:02:24,290
the most secure organization<font color="#CCCCCC"> you can</font>

43
00:02:21,799 --> 00:02:27,890
always find some malware that are trying

44
00:02:24,290 --> 00:02:32,298
<font color="#E5E5E5">to exfiltrate the user information</font><font color="#CCCCCC"> to an</font>

45
00:02:27,890 --> 00:02:35,839
outside malicious sector detecting these

46
00:02:32,299 --> 00:02:37,430
malware requires<font color="#E5E5E5"> different approach for</font>

47
00:02:35,840 --> 00:02:40,989
<font color="#E5E5E5">different stages of</font><font color="#CCCCCC"> that</font>

48
00:02:37,430 --> 00:02:43,819
<font color="#CCCCCC">where each approach has a different</font>

49
00:02:40,989 --> 00:02:47,390
advantages<font color="#E5E5E5"> or so discernment is a</font>

50
00:02:43,819 --> 00:02:49,879
typical life cycle<font color="#CCCCCC"> of a malware</font><font color="#E5E5E5"> starts</font>

51
00:02:47,390 --> 00:02:51,679
with initial<font color="#CCCCCC"> compromise and the initial</font>

52
00:02:49,879 --> 00:02:54,679
compromise could happen through phishing

53
00:02:51,680 --> 00:02:56,750
email or it could be user going to some

54
00:02:54,680 --> 00:02:59,120
sketchy<font color="#E5E5E5"> web site or through some known</font>

55
00:02:56,750 --> 00:03:02,719
<font color="#E5E5E5">value</font><font color="#CCCCCC"> obtained in the system once a</font>

56
00:02:59,120 --> 00:03:06,290
malware<font color="#E5E5E5"> gets a foothold on on a host it</font>

57
00:03:02,719 --> 00:03:09,319
then scans for<font color="#E5E5E5"> the kind of security</font>

58
00:03:06,290 --> 00:03:10,700
<font color="#E5E5E5">control in place</font><font color="#CCCCCC"> in the organization to</font>

59
00:03:09,319 --> 00:03:13,458
get more idea whether there are

60
00:03:10,700 --> 00:03:15,108
firewalls so<font color="#E5E5E5"> that there are proxy all</font>

61
00:03:13,459 --> 00:03:18,230
servers that<font color="#CCCCCC"> are trying to block</font><font color="#E5E5E5"> the</font>

62
00:03:15,109 --> 00:03:21,109
<font color="#CCCCCC">communication so once it gets it</font>

63
00:03:18,230 --> 00:03:23,888
captures<font color="#E5E5E5"> all those details about the</font>

64
00:03:21,109 --> 00:03:26,180
environment then<font color="#CCCCCC"> it's star initiates</font><font color="#E5E5E5"> a</font>

65
00:03:23,889 --> 00:03:28,609
second action<font color="#E5E5E5"> to come on in control</font>

66
00:03:26,180 --> 00:03:30,260
server<font color="#CCCCCC"> a command and control</font><font color="#E5E5E5"> server is a</font>

67
00:03:28,609 --> 00:03:33,590
centralized<font color="#E5E5E5"> hub</font><font color="#CCCCCC"> a rendezvous</font><font color="#E5E5E5"> point</font>

68
00:03:30,260 --> 00:03:35,358
<font color="#CCCCCC">that's controlled by</font><font color="#E5E5E5"> the hacker it's the</font>

69
00:03:33,590 --> 00:03:38,180
point where the malware<font color="#E5E5E5"> is going to send</font>

70
00:03:35,359 --> 00:03:41,569
<font color="#E5E5E5">X</font><font color="#CCCCCC"> will the data that it's stole from</font><font color="#E5E5E5"> the</font>

71
00:03:38,180 --> 00:03:43,129
user once<font color="#E5E5E5"> the successful our connection</font>

72
00:03:41,569 --> 00:03:45,168
is established with<font color="#CCCCCC"> the command and</font>

73
00:03:43,129 --> 00:03:47,510
control server<font color="#E5E5E5"> the</font><font color="#CCCCCC"> malware can then</font>

74
00:03:45,169 --> 00:03:49,579
start receiving<font color="#CCCCCC"> the instruction those</font>

75
00:03:47,510 --> 00:03:52,099
instruction could be the<font color="#CCCCCC"> batch</font><font color="#E5E5E5"> of code</font>

76
00:03:49,579 --> 00:03:55,370
or<font color="#E5E5E5"> to be more effective in the</font>

77
00:03:52,099 --> 00:03:57,738
environment<font color="#E5E5E5"> or it could be to move to a</font>

78
00:03:55,370 --> 00:03:59,299
<font color="#E5E5E5">higher</font><font color="#CCCCCC"> privileged system literally</font><font color="#E5E5E5"> move</font>

79
00:03:57,739 --> 00:04:01,760
to a higher<font color="#CCCCCC"> privileged system so that</font>

80
00:03:59,299 --> 00:04:04,879
the information<font color="#CCCCCC"> that</font><font color="#E5E5E5"> can be sent out or</font>

81
00:04:01,760 --> 00:04:09,530
is more useful<font color="#E5E5E5"> we are focusing our</font>

82
00:04:04,879 --> 00:04:12,470
attention on<font color="#E5E5E5"> the connection to come on</font>

83
00:04:09,530 --> 00:04:14,150
in control server once<font color="#E5E5E5"> malware is in the</font>

84
00:04:12,470 --> 00:04:16,849
environment<font color="#CCCCCC"> it's</font><font color="#E5E5E5"> going</font><font color="#CCCCCC"> to reach out to</font>

85
00:04:14,150 --> 00:04:20,530
<font color="#E5E5E5">see to server and this is communication</font>

86
00:04:16,849 --> 00:04:26,090
we want to detect<font color="#E5E5E5"> or as soon as possible</font>

87
00:04:20,529 --> 00:04:29,388
in early days of malware the IP address

88
00:04:26,090 --> 00:04:31,940
or domain<font color="#E5E5E5"> name of that</font><font color="#CCCCCC"> c2 server would</font>

89
00:04:29,389 --> 00:04:35,750
be<font color="#CCCCCC"> hard coded so it will always reach</font>

90
00:04:31,940 --> 00:04:38,680
out to<font color="#CCCCCC"> the same server but modern</font><font color="#E5E5E5"> wall</font>

91
00:04:35,750 --> 00:04:42,650
<font color="#E5E5E5">layers are much smarter than that</font>

92
00:04:38,680 --> 00:04:45,199
<font color="#E5E5E5">instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> using a</font><font color="#CCCCCC"> hard-coded IP address</font>

93
00:04:42,650 --> 00:04:49,489
<font color="#E5E5E5">they use what we call domain generation</font>

94
00:04:45,199 --> 00:04:52,310
algorithm or<font color="#CCCCCC"> dj's these yeas are small</font>

95
00:04:49,490 --> 00:04:54,979
program<font color="#E5E5E5"> that takes</font><font color="#CCCCCC"> seed and our</font>

96
00:04:52,310 --> 00:04:58,699
<font color="#CCCCCC">time-dependent element and generates a</font>

97
00:04:54,979 --> 00:05:01,639
lot<font color="#CCCCCC"> of domain</font><font color="#E5E5E5"> the malware then uses</font>

98
00:04:58,699 --> 00:05:05,419
these domains<font color="#E5E5E5"> to make connection to</font><font color="#CCCCCC"> c2</font>

99
00:05:01,639 --> 00:05:07,669
server<font color="#CCCCCC"> and as you can</font><font color="#E5E5E5"> see here is a</font>

100
00:05:05,419 --> 00:05:11,120
<font color="#E5E5E5">Python script of a DC algorithm that</font>

101
00:05:07,669 --> 00:05:14,000
takes<font color="#E5E5E5"> a or month and D as input and</font>

102
00:05:11,120 --> 00:05:17,060
based on<font color="#CCCCCC"> that it's gonna generate 16</font>

103
00:05:14,000 --> 00:05:18,889
these<font color="#E5E5E5"> year domains the malware is then</font>

104
00:05:17,060 --> 00:05:22,039
gonna<font color="#CCCCCC"> use these domains to make a</font>

105
00:05:18,889 --> 00:05:24,470
<font color="#CCCCCC">connection to c2 server and these</font>

106
00:05:22,039 --> 00:05:26,479
domains<font color="#E5E5E5"> would change every</font><font color="#CCCCCC"> day so it's</font>

107
00:05:24,470 --> 00:05:29,229
not like you can block them one day<font color="#CCCCCC"> and</font>

108
00:05:26,479 --> 00:05:31,460
then the malware<font color="#E5E5E5"> is stopped these</font>

109
00:05:29,229 --> 00:05:36,280
domains would<font color="#E5E5E5"> change every day and you</font>

110
00:05:31,460 --> 00:05:36,280
<font color="#E5E5E5">have to keep blocking them every</font><font color="#CCCCCC"> day</font>

111
00:05:37,930 --> 00:05:43,000
some<font color="#E5E5E5"> of the techniques that</font><font color="#CCCCCC"> are</font>

112
00:05:40,490 --> 00:05:45,590
<font color="#E5E5E5">available to tackle this problem</font>

113
00:05:43,000 --> 00:05:48,979
<font color="#E5E5E5">involves both traditional and machine</font>

114
00:05:45,590 --> 00:05:51,830
learning<font color="#CCCCCC"> the traditional approach is</font><font color="#E5E5E5"> to</font>

115
00:05:48,979 --> 00:05:54,469
get the hands<font color="#E5E5E5"> on the binary</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> DG once</font>

116
00:05:51,830 --> 00:05:56,270
you have the<font color="#E5E5E5"> binary of this year you can</font>

117
00:05:54,469 --> 00:05:59,000
<font color="#E5E5E5">reverse</font><font color="#CCCCCC"> engineer the code to identify</font>

118
00:05:56,270 --> 00:06:03,258
<font color="#E5E5E5">the</font><font color="#CCCCCC"> underlying DJ and once you have the</font>

119
00:05:59,000 --> 00:06:05,210
DGA code<font color="#E5E5E5"> you can in advance generate the</font>

120
00:06:03,259 --> 00:06:08,539
domains<font color="#E5E5E5"> that the DJ is gonna generate in</font>

121
00:06:05,210 --> 00:06:14,060
coming days and proactively<font color="#E5E5E5"> block those</font>

122
00:06:08,539 --> 00:06:17,360
domains or you can also register these

123
00:06:14,060 --> 00:06:19,370
domains yourself and try<font color="#E5E5E5"> to take all the</font>

124
00:06:17,360 --> 00:06:22,580
control from<font color="#E5E5E5"> the hacker and sinkhole the</font>

125
00:06:19,370 --> 00:06:26,750
<font color="#E5E5E5">c2 communication or from the malware to</font>

126
00:06:22,580 --> 00:06:29,659
these these<font color="#CCCCCC"> disease</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> servers these</font>

127
00:06:26,750 --> 00:06:31,789
traditional techniques are reactive in

128
00:06:29,659 --> 00:06:35,630
nature<font color="#CCCCCC"> you have to get your hands on a</font>

129
00:06:31,789 --> 00:06:37,039
malware binary once you have the<font color="#E5E5E5"> binary</font>

130
00:06:35,630 --> 00:06:39,110
it takes a lot<font color="#CCCCCC"> of time to</font>

131
00:06:37,039 --> 00:06:41,659
<font color="#E5E5E5">reverse-engineer and get to the part</font>

132
00:06:39,110 --> 00:06:43,940
<font color="#E5E5E5">where you have a DJ or in your hand and</font>

133
00:06:41,659 --> 00:06:47,780
this<font color="#E5E5E5"> is not a very scalable approach</font>

134
00:06:43,940 --> 00:06:49,599
because it takes a lot<font color="#CCCCCC"> of time to get to</font>

135
00:06:47,780 --> 00:06:53,270
<font color="#CCCCCC">reverse-engineer</font><font color="#E5E5E5"> the binary and</font><font color="#CCCCCC"> get the</font>

136
00:06:49,599 --> 00:06:55,900
<font color="#E5E5E5">DJ code with the advance of machine</font>

137
00:06:53,270 --> 00:06:59,659
learning<font color="#CCCCCC"> and</font><font color="#E5E5E5"> natural language processing</font>

138
00:06:55,900 --> 00:07:01,150
<font color="#E5E5E5">there are a lot of new ways</font><font color="#CCCCCC"> to tackle</font>

139
00:06:59,659 --> 00:07:04,300
<font color="#E5E5E5">this problem</font>

140
00:07:01,150 --> 00:07:07,060
<font color="#E5E5E5">I'll categorize these detection</font>

141
00:07:04,300 --> 00:07:09,970
technique in three different part<font color="#E5E5E5"> first</font>

142
00:07:07,060 --> 00:07:11,980
<font color="#E5E5E5">one is an X domain DNS request based</font>

143
00:07:09,970 --> 00:07:15,760
detection that looks at the DNS traffic

144
00:07:11,980 --> 00:07:18,250
in the network<font color="#CCCCCC"> if a host is making large</font>

145
00:07:15,760 --> 00:07:24,310
number of DNS requests<font color="#E5E5E5"> to non</font><font color="#CCCCCC"> resister</font>

146
00:07:18,250 --> 00:07:26,950
domain<font color="#E5E5E5"> then it could</font><font color="#CCCCCC"> be a potential</font><font color="#E5E5E5"> DG</font>

147
00:07:24,310 --> 00:07:29,740
<font color="#E5E5E5">our communication to</font><font color="#CCCCCC"> c2 server the</font>

148
00:07:26,950 --> 00:07:32,500
second type of technique or<font color="#E5E5E5"> m/l approach</font>

149
00:07:29,740 --> 00:07:34,510
using<font color="#CCCCCC"> handcrafted feature</font><font color="#E5E5E5"> these</font>

150
00:07:32,500 --> 00:07:37,570
technique requires explicit feature

151
00:07:34,510 --> 00:07:41,020
<font color="#CCCCCC">engineering the third type of technique</font>

152
00:07:37,570 --> 00:07:43,479
is<font color="#CCCCCC"> RNN based detection</font><font color="#E5E5E5"> and this is one</font>

153
00:07:41,020 --> 00:07:45,849
<font color="#CCCCCC">of the most popular one because</font><font color="#E5E5E5"> it</font>

154
00:07:43,479 --> 00:07:48,280
tackles<font color="#E5E5E5"> the shortcoming or limitation of</font>

155
00:07:45,850 --> 00:07:50,590
the first two I'm going to give a<font color="#E5E5E5"> brief</font>

156
00:07:48,280 --> 00:07:54,429
introduction<font color="#E5E5E5"> of the first two and what</font>

157
00:07:50,590 --> 00:07:57,070
are the limitation an X<font color="#CCCCCC"> domain DNS</font>

158
00:07:54,430 --> 00:07:59,320
request based detection<font color="#E5E5E5"> so as I</font>

159
00:07:57,070 --> 00:08:01,180
mentioned<font color="#E5E5E5"> DZ is a small program that</font>

160
00:07:59,320 --> 00:08:04,000
<font color="#E5E5E5">generates a large number of these</font>

161
00:08:01,180 --> 00:08:07,090
<font color="#E5E5E5">domains and the hacker only</font><font color="#CCCCCC"> resister</font><font color="#E5E5E5"> a</font>

162
00:08:04,000 --> 00:08:10,780
<font color="#CCCCCC">selective view of</font><font color="#E5E5E5"> those domains so the</font>

163
00:08:07,090 --> 00:08:14,109
malware has<font color="#E5E5E5"> to query the DNS to identify</font>

164
00:08:10,780 --> 00:08:17,190
which<font color="#CCCCCC"> one of those generated domains are</font>

165
00:08:14,110 --> 00:08:19,750
actually<font color="#CCCCCC"> resister and once it finds a</font>

166
00:08:17,190 --> 00:08:22,390
domain that's<font color="#CCCCCC"> registered it's going to</font>

167
00:08:19,750 --> 00:08:25,840
use<font color="#E5E5E5"> that domain to start come</font>

168
00:08:22,390 --> 00:08:29,950
communication with<font color="#E5E5E5"> c2 server so if in</font>

169
00:08:25,840 --> 00:08:32,588
<font color="#E5E5E5">our</font><font color="#CCCCCC"> DNS traffic we can</font><font color="#E5E5E5"> find a</font><font color="#CCCCCC"> client</font>

170
00:08:29,950 --> 00:08:35,468
that's making a large<font color="#CCCCCC"> number of</font><font color="#E5E5E5"> requests</font>

171
00:08:32,589 --> 00:08:38,860
<font color="#E5E5E5">to unregister domain then it could</font><font color="#CCCCCC"> be a</font>

172
00:08:35,469 --> 00:08:41,830
potential<font color="#CCCCCC"> sign of D CML where infection</font>

173
00:08:38,860 --> 00:08:44,440
<font color="#E5E5E5">because a normal</font><font color="#CCCCCC"> user would make one or</font>

174
00:08:41,830 --> 00:08:46,480
two queries<font color="#E5E5E5"> to unregistered domain</font>

175
00:08:44,440 --> 00:08:50,170
<font color="#E5E5E5">because of some type or some other</font><font color="#CCCCCC"> issue</font>

176
00:08:46,480 --> 00:08:54,100
<font color="#E5E5E5">but nobody would make</font><font color="#CCCCCC"> twenty or thirty</font>

177
00:08:50,170 --> 00:08:55,959
<font color="#E5E5E5">DNS requests one registered domain this</font>

178
00:08:54,100 --> 00:08:58,930
<font color="#CCCCCC">is a very good technique to</font><font color="#E5E5E5"> detect</font><font color="#CCCCCC"> this</font>

179
00:08:55,959 --> 00:09:01,599
year but this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> still a reactive</font>

180
00:08:58,930 --> 00:09:06,150
approach<font color="#E5E5E5"> you have to constantly</font>

181
00:09:01,600 --> 00:09:09,640
aggregate the DNS traffic and as soon as

182
00:09:06,150 --> 00:09:11,110
the number<font color="#CCCCCC"> of these requests under the</font>

183
00:09:09,640 --> 00:09:13,089
domain<font color="#CCCCCC"> requests reaches a certain</font>

184
00:09:11,110 --> 00:09:14,680
threshold<font color="#CCCCCC"> then you are going</font><font color="#E5E5E5"> to flag</font>

185
00:09:13,089 --> 00:09:16,870
<font color="#CCCCCC">that client but</font>

186
00:09:14,680 --> 00:09:19,300
you have to wait a<font color="#E5E5E5"> certain period to</font>

187
00:09:16,870 --> 00:09:21,250
aggregate the data to<font color="#E5E5E5"> know that a client</font>

188
00:09:19,300 --> 00:09:29,260
is<font color="#CCCCCC"> making large number of requests to</font>

189
00:09:21,250 --> 00:09:31,240
these unregistered<font color="#E5E5E5"> domains the second</font>

190
00:09:29,260 --> 00:09:34,300
type of machine learning approach to

191
00:09:31,240 --> 00:09:36,850
detect<font color="#CCCCCC"> DG communication is based on</font>

192
00:09:34,300 --> 00:09:39,370
handcrafted feature this requires

193
00:09:36,850 --> 00:09:42,610
explicit feature engineering<font color="#CCCCCC"> and these</font>

194
00:09:39,370 --> 00:09:45,339
<font color="#E5E5E5">features could be entropy</font><font color="#CCCCCC"> of the domain</font>

195
00:09:42,610 --> 00:09:47,500
length of the domain<font color="#E5E5E5"> looking at the</font>

196
00:09:45,339 --> 00:09:50,200
ratio<font color="#CCCCCC"> of</font><font color="#E5E5E5"> vowel to consonant the</font>

197
00:09:47,500 --> 00:09:53,200
periodicity of<font color="#CCCCCC"> the request between the</font>

198
00:09:50,200 --> 00:09:55,029
host and<font color="#CCCCCC"> situ</font><font color="#E5E5E5"> server how popular is</font><font color="#CCCCCC"> that</font>

199
00:09:53,200 --> 00:09:57,399
domain<font color="#CCCCCC"> and what's the total number of</font>

200
00:09:55,029 --> 00:10:04,540
bytes sent between<font color="#E5E5E5"> the host and in the</font>

201
00:09:57,399 --> 00:10:08,320
server this<font color="#E5E5E5"> votes well it tries to</font>

202
00:10:04,540 --> 00:10:11,349
identify<font color="#E5E5E5"> the abnormal traffic in proxy</font>

203
00:10:08,320 --> 00:10:14,250
logs<font color="#E5E5E5"> so for each client we have</font><font color="#CCCCCC"> a</font>

204
00:10:11,350 --> 00:10:17,890
baseline behavior<font color="#E5E5E5"> and whenever a client</font>

205
00:10:14,250 --> 00:10:21,610
<font color="#E5E5E5">is making certain communication to an</font>

206
00:10:17,890 --> 00:10:24,040
outside<font color="#E5E5E5"> situ server that's very far</font>

207
00:10:21,610 --> 00:10:26,830
<font color="#CCCCCC">apart from his normal</font><font color="#E5E5E5"> routine his normal</font>

208
00:10:24,040 --> 00:10:28,930
behavior<font color="#CCCCCC"> this</font><font color="#E5E5E5"> ml our technique is going</font>

209
00:10:26,830 --> 00:10:34,690
<font color="#E5E5E5">to flag that because it could be related</font>

210
00:10:28,930 --> 00:10:36,430
to a malware<font color="#CCCCCC"> C</font><font color="#E5E5E5"> to communication one of</font>

211
00:10:34,690 --> 00:10:39,339
the limitation of this technique is that

212
00:10:36,430 --> 00:10:42,279
<font color="#E5E5E5">it takes a lot of time and effort to</font>

213
00:10:39,339 --> 00:10:45,029
select the right feature to<font color="#CCCCCC"> be able to</font>

214
00:10:42,279 --> 00:10:49,890
differentiate<font color="#CCCCCC"> between the normal human</font>

215
00:10:45,029 --> 00:10:49,890
communication versus<font color="#E5E5E5"> a TGA communication</font>

216
00:10:50,279 --> 00:10:56,290
that's why<font color="#E5E5E5"> I are in an hour so popular</font>

217
00:10:53,260 --> 00:10:57,750
because<font color="#E5E5E5"> it addresses the shortcoming of</font>

218
00:10:56,290 --> 00:11:00,849
the first two techniques

219
00:10:57,750 --> 00:11:03,579
it doesn't require any explicit feature

220
00:11:00,850 --> 00:11:07,360
<font color="#CCCCCC">engineering it accepts</font><font color="#E5E5E5"> the domain name</font>

221
00:11:03,579 --> 00:11:10,089
as input and it separates those domain

222
00:11:07,360 --> 00:11:13,060
in either<font color="#CCCCCC"> it's a good domain</font><font color="#E5E5E5"> or it's a</font>

223
00:11:10,089 --> 00:11:16,060
DJ domain and through the training

224
00:11:13,060 --> 00:11:18,279
process<font color="#E5E5E5"> this technique is</font><font color="#CCCCCC"> going to learn</font>

225
00:11:16,060 --> 00:11:20,439
all the<font color="#E5E5E5"> relevant feature I don't have to</font>

226
00:11:18,279 --> 00:11:21,820
<font color="#CCCCCC">specify whether</font><font color="#E5E5E5"> the entropy is important</font>

227
00:11:20,440 --> 00:11:23,890
whether the length of domain is

228
00:11:21,820 --> 00:11:26,260
important<font color="#E5E5E5"> through the training process</font>

229
00:11:23,890 --> 00:11:27,620
the model is<font color="#E5E5E5"> going to learn which</font>

230
00:11:26,260 --> 00:11:30,270
features are

231
00:11:27,620 --> 00:11:34,730
important to<font color="#E5E5E5"> differentiate between our</font>

232
00:11:30,270 --> 00:11:37,230
normal human<font color="#CCCCCC"> genetic domain versus</font><font color="#E5E5E5"> a DG</font>

233
00:11:34,730 --> 00:11:39,150
this is the proactive<font color="#E5E5E5"> detection</font>

234
00:11:37,230 --> 00:11:43,440
technique as soon as somebody<font color="#E5E5E5"> is making</font>

235
00:11:39,150 --> 00:11:46,770
<font color="#E5E5E5">requests to a domain you</font><font color="#CCCCCC"> can use</font><font color="#E5E5E5"> your</font>

236
00:11:43,440 --> 00:11:49,500
model to<font color="#E5E5E5"> detect whether it's a DJ domain</font>

237
00:11:46,770 --> 00:11:51,240
or a normal<font color="#CCCCCC"> domain</font><font color="#E5E5E5"> and you can</font>

238
00:11:49,500 --> 00:11:55,200
straightaway block that communication if

239
00:11:51,240 --> 00:11:58,320
it's a<font color="#CCCCCC"> DJ these are easy</font><font color="#E5E5E5"> to build and</font>

240
00:11:55,200 --> 00:12:01,890
easy to deploy<font color="#E5E5E5"> and doesn't require any</font>

241
00:11:58,320 --> 00:12:04,890
<font color="#CCCCCC">maintenance if your</font><font color="#E5E5E5"> algorithm is</font>

242
00:12:01,890 --> 00:12:07,290
becoming outdated<font color="#CCCCCC"> you can simply add new</font>

243
00:12:04,890 --> 00:12:11,310
samples new<font color="#CCCCCC"> DG sample and retrain your</font>

244
00:12:07,290 --> 00:12:13,410
model<font color="#E5E5E5"> and deploy it back or it's</font><font color="#CCCCCC"> very</font>

245
00:12:11,310 --> 00:12:16,650
easy<font color="#CCCCCC"> to deploy</font><font color="#E5E5E5"> these models it's highly</font>

246
00:12:13,410 --> 00:12:22,560
<font color="#CCCCCC">scalable</font><font color="#E5E5E5"> and this is highly accurate</font><font color="#CCCCCC"> in</font>

247
00:12:16,650 --> 00:12:25,650
detecting these<font color="#E5E5E5"> DJ's we're going to go</font>

248
00:12:22,560 --> 00:12:27,150
<font color="#E5E5E5">in depth</font><font color="#CCCCCC"> this technique what are the</font>

249
00:12:25,650 --> 00:12:29,490
different component of<font color="#E5E5E5"> this technique</font>

250
00:12:27,150 --> 00:12:31,829
how these pieces<font color="#E5E5E5"> fit together and what</font>

251
00:12:29,490 --> 00:12:35,990
<font color="#E5E5E5">are the detection accuracy is that we</font>

252
00:12:31,830 --> 00:12:40,880
can accept from this this technique<font color="#CCCCCC"> so</font>

253
00:12:35,990 --> 00:12:43,800
<font color="#CCCCCC">this is an architecture of a RNN model</font>

254
00:12:40,880 --> 00:12:46,470
there<font color="#E5E5E5"> are four component the input is</font>

255
00:12:43,800 --> 00:12:49,709
<font color="#E5E5E5">the domain name which first goes through</font>

256
00:12:46,470 --> 00:12:51,270
an embedding layer that<font color="#E5E5E5"> learns a vector</font>

257
00:12:49,710 --> 00:12:55,260
representation<font color="#E5E5E5"> and I'm going to talk</font>

258
00:12:51,270 --> 00:12:57,689
<font color="#CCCCCC">about that in the next</font><font color="#E5E5E5"> slide then passes</font>

259
00:12:55,260 --> 00:13:00,240
through<font color="#CCCCCC"> an RN and lsdm layer and the</font>

260
00:12:57,690 --> 00:13:02,400
final output<font color="#E5E5E5"> is a probability what's the</font>

261
00:13:00,240 --> 00:13:05,880
probability<font color="#E5E5E5"> of the input domain being a</font>

262
00:13:02,400 --> 00:13:10,319
DG<font color="#E5E5E5"> if it's high enough</font><font color="#CCCCCC"> you can block</font>

263
00:13:05,880 --> 00:13:14,010
that DJ from communicating<font color="#E5E5E5"> to</font><font color="#CCCCCC"> see to</font>

264
00:13:10,320 --> 00:13:16,770
server machine<font color="#E5E5E5"> learning model such as</font>

265
00:13:14,010 --> 00:13:21,300
<font color="#CCCCCC">RNN requires a huge amount of data to</font>

266
00:13:16,770 --> 00:13:23,699
<font color="#CCCCCC">Train you need lots of lots of input to</font>

267
00:13:21,300 --> 00:13:25,979
be able<font color="#CCCCCC"> to learn the correct parameter</font>

268
00:13:23,700 --> 00:13:27,720
to learn the correct features to

269
00:13:25,980 --> 00:13:30,750
differentiate between<font color="#E5E5E5"> the two</font><font color="#CCCCCC"> categories</font>

270
00:13:27,720 --> 00:13:33,540
good<font color="#E5E5E5"> domain versus</font><font color="#CCCCCC"> easy domain so for</font>

271
00:13:30,750 --> 00:13:36,060
that we<font color="#E5E5E5"> are using</font><font color="#CCCCCC"> alexa and cisco</font><font color="#E5E5E5"> top</font>

272
00:13:33,540 --> 00:13:38,849
million most popular domain<font color="#CCCCCC"> these are</font>

273
00:13:36,060 --> 00:13:40,829
the<font color="#E5E5E5"> domains</font><font color="#CCCCCC"> that normal user frequently</font>

274
00:13:38,850 --> 00:13:41,630
go<font color="#E5E5E5"> to such as</font><font color="#CCCCCC"> google youtube facebook</font>

275
00:13:40,830 --> 00:13:46,130
<font color="#CCCCCC">calm</font>

276
00:13:41,630 --> 00:13:48,410
and for the<font color="#CCCCCC"> DGA domain we</font><font color="#E5E5E5"> are using 1.1</font>

277
00:13:46,130 --> 00:13:52,730
million unique domains that<font color="#CCCCCC"> are</font>

278
00:13:48,410 --> 00:13:56,509
collected from net<font color="#E5E5E5"> lab 360 and as you</font>

279
00:13:52,730 --> 00:13:59,660
can look some<font color="#CCCCCC"> of the sample for</font><font color="#E5E5E5"> DJ these</font>

280
00:13:56,509 --> 00:14:02,750
looks very different<font color="#E5E5E5"> from</font><font color="#CCCCCC"> a benign or</font>

281
00:13:59,660 --> 00:14:05,199
users generally domain<font color="#E5E5E5"> so we're going to</font>

282
00:14:02,750 --> 00:14:09,290
use this data set to<font color="#E5E5E5"> train our model and</font>

283
00:14:05,199 --> 00:14:12,189
<font color="#E5E5E5">we are going to use 60% of this data to</font>

284
00:14:09,290 --> 00:14:15,949
train to<font color="#CCCCCC"> learn the</font><font color="#E5E5E5"> right feature to</font>

285
00:14:12,190 --> 00:14:18,230
train our model and then<font color="#E5E5E5"> remaining</font><font color="#CCCCCC"> 40%</font>

286
00:14:15,949 --> 00:14:21,979
<font color="#E5E5E5">we are going to use to validate how good</font>

287
00:14:18,230 --> 00:14:24,560
our model is performing in detecting

288
00:14:21,980 --> 00:14:29,240
these<font color="#E5E5E5"> DZ and how will it</font><font color="#CCCCCC"> BA how good</font>

289
00:14:24,560 --> 00:14:31,910
will it perform in future<font color="#E5E5E5"> the input</font>

290
00:14:29,240 --> 00:14:34,819
which is<font color="#CCCCCC"> the domain name is then passed</font>

291
00:14:31,910 --> 00:14:38,300
<font color="#CCCCCC">through an embedding layer so the</font>

292
00:14:34,819 --> 00:14:42,410
machine<font color="#CCCCCC"> learning model requires a fixed</font>

293
00:14:38,300 --> 00:14:45,019
size<font color="#E5E5E5"> numeric input but our domains are</font>

294
00:14:42,410 --> 00:14:46,969
sequence of character so<font color="#CCCCCC"> we need to</font>

295
00:14:45,019 --> 00:14:51,560
<font color="#E5E5E5">pre-process this input in a machine</font>

296
00:14:46,970 --> 00:14:53,569
<font color="#CCCCCC">learning readable format so the first</font>

297
00:14:51,560 --> 00:14:56,779
step is to convert<font color="#E5E5E5"> these character</font>

298
00:14:53,569 --> 00:14:59,469
sequences to integer sequence here each

299
00:14:56,779 --> 00:15:05,120
<font color="#CCCCCC">character</font><font color="#E5E5E5"> is mapped to</font><font color="#CCCCCC"> a unique integer</font>

300
00:14:59,470 --> 00:15:08,329
and since the domains are of varying

301
00:15:05,120 --> 00:15:10,579
<font color="#CCCCCC">length</font><font color="#E5E5E5"> we also need to pre-process it by</font>

302
00:15:08,329 --> 00:15:15,319
padding additional<font color="#E5E5E5"> zeros so that each</font>

303
00:15:10,579 --> 00:15:18,199
<font color="#E5E5E5">domain is now of a fixed</font><font color="#CCCCCC"> size this</font><font color="#E5E5E5"> input</font>

304
00:15:15,319 --> 00:15:19,880
sequence is now of a fixed size<font color="#E5E5E5"> which is</font>

305
00:15:18,199 --> 00:15:24,199
<font color="#E5E5E5">accepted acceptable to a machine</font>

306
00:15:19,880 --> 00:15:26,689
learning model<font color="#E5E5E5"> however this integer</font>

307
00:15:24,199 --> 00:15:28,550
sequence is<font color="#E5E5E5"> one dimensional input</font><font color="#CCCCCC"> it</font>

308
00:15:26,689 --> 00:15:31,550
doesn't have any contextual information

309
00:15:28,550 --> 00:15:33,439
<font color="#CCCCCC">a character represented by a</font><font color="#E5E5E5"> desert five</font>

310
00:15:31,550 --> 00:15:37,130
<font color="#E5E5E5">versus a character represented by a</font>

311
00:15:33,439 --> 00:15:39,170
desert six doesn't mean that those are

312
00:15:37,130 --> 00:15:41,509
close to one<font color="#CCCCCC"> another because there</font><font color="#E5E5E5"> is a</font>

313
00:15:39,170 --> 00:15:43,370
difference of one unit versus a

314
00:15:41,509 --> 00:15:46,339
character that's represented<font color="#E5E5E5"> five by a</font>

315
00:15:43,370 --> 00:15:47,959
character represented by<font color="#CCCCCC"> Craney here</font>

316
00:15:46,339 --> 00:15:51,470
there although<font color="#CCCCCC"> it looks</font><font color="#E5E5E5"> like the</font>

317
00:15:47,959 --> 00:15:55,459
distances<font color="#E5E5E5"> large</font><font color="#CCCCCC"> 15 but it doesn't mean</font>

318
00:15:51,470 --> 00:15:59,059
<font color="#CCCCCC">that</font><font color="#E5E5E5"> those are far apart from each other</font>

319
00:15:55,459 --> 00:16:00,529
so this<font color="#E5E5E5"> encoding is not suitable it</font>

320
00:15:59,059 --> 00:16:02,868
doesn't have contextual information

321
00:16:00,529 --> 00:16:05,569
which characters should be combined

322
00:16:02,869 --> 00:16:07,819
together which characters occurs

323
00:16:05,569 --> 00:16:10,040
frequently<font color="#E5E5E5"> together</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> our input data</font>

324
00:16:07,819 --> 00:16:11,509
<font color="#E5E5E5">that's what the embedding layer is going</font>

325
00:16:10,040 --> 00:16:14,360
<font color="#E5E5E5">to learn through the training</font><font color="#CCCCCC"> process</font>

326
00:16:11,509 --> 00:16:17,360
the embedding layer takes this<font color="#E5E5E5"> integer</font>

327
00:16:14,360 --> 00:16:19,670
sequence as input and then converts this

328
00:16:17,360 --> 00:16:24,259
to a higher dimensional<font color="#CCCCCC"> eight</font>

329
00:16:19,670 --> 00:16:28,579
dimensional or input space you can think

330
00:16:24,259 --> 00:16:31,720
of<font color="#CCCCCC"> each</font><font color="#E5E5E5"> character as a point in this</font>

331
00:16:28,579 --> 00:16:33,979
<font color="#CCCCCC">input a</font><font color="#E5E5E5"> dimensional input space and</font>

332
00:16:31,720 --> 00:16:36,309
through our<font color="#E5E5E5"> training process the</font>

333
00:16:33,980 --> 00:16:38,959
embedding layer is going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> learn which</font>

334
00:16:36,309 --> 00:16:40,999
characters occur<font color="#CCCCCC"> together</font><font color="#E5E5E5"> and hence</font>

335
00:16:38,959 --> 00:16:43,339
should<font color="#CCCCCC"> be close</font><font color="#E5E5E5"> to each other in the in</font>

336
00:16:40,999 --> 00:16:46,129
this<font color="#E5E5E5"> a dimensional input space versus</font>

337
00:16:43,339 --> 00:16:48,110
which characters<font color="#E5E5E5"> are corresponding to</font><font color="#CCCCCC"> DG</font>

338
00:16:46,129 --> 00:16:52,100
and should be far<font color="#CCCCCC"> apart in</font><font color="#E5E5E5"> this input</font>

339
00:16:48,110 --> 00:16:53,839
<font color="#E5E5E5">dimension space we don't have to encode</font>

340
00:16:52,100 --> 00:16:57,490
<font color="#CCCCCC">that information the model is going</font><font color="#E5E5E5"> to</font>

341
00:16:53,839 --> 00:16:57,490
learn<font color="#CCCCCC"> that through</font><font color="#E5E5E5"> the training process</font>

342
00:16:57,999 --> 00:17:03,589
this input is then passed to<font color="#E5E5E5"> the</font><font color="#CCCCCC"> next</font>

343
00:17:01,220 --> 00:17:06,049
hidden layer which is<font color="#CCCCCC"> a recurrent neural</font>

344
00:17:03,589 --> 00:17:08,029
network recurrent neural network<font color="#E5E5E5"> or</font>

345
00:17:06,049 --> 00:17:10,309
special kind of neural network a

346
00:17:08,029 --> 00:17:13,699
traditional neural network<font color="#E5E5E5"> takes an</font>

347
00:17:10,309 --> 00:17:16,490
input<font color="#E5E5E5"> and then makes a</font><font color="#CCCCCC"> prediction for</font>

348
00:17:13,699 --> 00:17:19,010
example a handwritten<font color="#CCCCCC"> digit system it</font>

349
00:17:16,490 --> 00:17:21,829
takes<font color="#E5E5E5"> an handwritten digit image as</font>

350
00:17:19,010 --> 00:17:23,119
input and based on<font color="#E5E5E5"> that</font><font color="#CCCCCC"> in image it's</font>

351
00:17:21,829 --> 00:17:25,389
<font color="#E5E5E5">going to make prediction whether that</font>

352
00:17:23,119 --> 00:17:29,539
image is a seven or<font color="#E5E5E5"> eight or whatever</font>

353
00:17:25,390 --> 00:17:31,760
number<font color="#E5E5E5"> it</font><font color="#CCCCCC"> is here the prediction only</font>

354
00:17:29,539 --> 00:17:34,820
depends<font color="#E5E5E5"> on</font><font color="#CCCCCC"> the input that</font><font color="#E5E5E5"> we</font><font color="#CCCCCC"> are passing</font>

355
00:17:31,760 --> 00:17:37,010
<font color="#E5E5E5">to</font><font color="#CCCCCC"> the model</font><font color="#E5E5E5"> but for the</font><font color="#CCCCCC"> tasks which</font>

356
00:17:34,820 --> 00:17:39,470
have sequential inputs such as<font color="#E5E5E5"> a</font>

357
00:17:37,010 --> 00:17:42,080
sentence<font color="#CCCCCC"> I grew up in France</font>

358
00:17:39,470 --> 00:17:45,440
<font color="#CCCCCC">I speak fluent</font><font color="#E5E5E5"> and then the model has</font><font color="#CCCCCC"> to</font>

359
00:17:42,080 --> 00:17:48,379
predict the next word<font color="#E5E5E5"> here the</font><font color="#CCCCCC"> input is</font>

360
00:17:45,440 --> 00:17:52,399
sequential<font color="#E5E5E5"> in nature</font><font color="#CCCCCC"> and predicting the</font>

361
00:17:48,380 --> 00:17:55,850
<font color="#E5E5E5">correct output depends not only prior</font>

362
00:17:52,399 --> 00:17:57,979
<font color="#CCCCCC">vote but it depends</font><font color="#E5E5E5"> a sequence of what</font>

363
00:17:55,850 --> 00:18:00,949
that occurs much prior in<font color="#E5E5E5"> the sequence</font>

364
00:17:57,980 --> 00:18:04,850
<font color="#E5E5E5">so here predicting the next word French</font>

365
00:18:00,950 --> 00:18:07,039
is dependent on the<font color="#CCCCCC"> keyword France that</font>

366
00:18:04,850 --> 00:18:09,110
occurs much prior in the<font color="#E5E5E5"> sequence and</font>

367
00:18:07,039 --> 00:18:11,750
because of<font color="#E5E5E5"> the strike</font>

368
00:18:09,110 --> 00:18:14,570
recurrent<font color="#E5E5E5"> structure of these are</font><font color="#CCCCCC"> n ins</font>

369
00:18:11,750 --> 00:18:17,600
<font color="#E5E5E5">the model is</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> capture this</font>

370
00:18:14,570 --> 00:18:19,669
<font color="#CCCCCC">long-term dependency in the sequence</font><font color="#E5E5E5"> to</font>

371
00:18:17,600 --> 00:18:27,889
<font color="#CCCCCC">be able</font><font color="#E5E5E5"> to make the correct or</font>

372
00:18:19,670 --> 00:18:31,640
prediction one of the special<font color="#E5E5E5"> structure</font>

373
00:18:27,890 --> 00:18:34,780
that is used<font color="#CCCCCC"> in RN n is called</font><font color="#E5E5E5"> our lsdm</font>

374
00:18:31,640 --> 00:18:38,450
<font color="#CCCCCC">old long short-term memory cells these</font>

375
00:18:34,780 --> 00:18:40,879
memory<font color="#CCCCCC"> cells are kind</font><font color="#E5E5E5"> of complex</font>

376
00:18:38,450 --> 00:18:43,520
nonlinear function and these are

377
00:18:40,880 --> 00:18:48,380
<font color="#E5E5E5">designed specifically to mimic the human</font>

378
00:18:43,520 --> 00:18:51,980
brain<font color="#E5E5E5"> v as human when we read a sentence</font>

379
00:18:48,380 --> 00:18:54,320
<font color="#E5E5E5">when we read some passes as we go</font>

380
00:18:51,980 --> 00:18:56,330
through the line by line we remember

381
00:18:54,320 --> 00:18:59,020
certain<font color="#CCCCCC"> key words that are important</font><font color="#E5E5E5"> and</font>

382
00:18:56,330 --> 00:19:01,970
memorize these vaults in our memory and

383
00:18:59,020 --> 00:19:07,520
then we<font color="#E5E5E5"> perform three kind of operation</font>

384
00:19:01,970 --> 00:19:09,530
<font color="#E5E5E5">or one we constantly</font><font color="#CCCCCC"> update our memory</font>

385
00:19:07,520 --> 00:19:11,510
with new<font color="#CCCCCC"> key words as we read further</font>

386
00:19:09,530 --> 00:19:13,910
and<font color="#E5E5E5"> further in the sequence if we</font>

387
00:19:11,510 --> 00:19:16,129
encounter<font color="#E5E5E5"> a new</font><font color="#CCCCCC"> key word that's relevant</font>

388
00:19:13,910 --> 00:19:17,780
to<font color="#E5E5E5"> the context that we are reading it's</font>

389
00:19:16,130 --> 00:19:19,400
going to update<font color="#CCCCCC"> that</font><font color="#E5E5E5"> key word in memory</font>

390
00:19:17,780 --> 00:19:22,490
and<font color="#E5E5E5"> it's going to retain</font><font color="#CCCCCC"> it so that</font>

391
00:19:19,400 --> 00:19:24,770
later when<font color="#E5E5E5"> I when somebody</font><font color="#CCCCCC"> ask us a</font>

392
00:19:22,490 --> 00:19:27,230
question<font color="#E5E5E5"> based on the key words that are</font>

393
00:19:24,770 --> 00:19:29,629
retained in our memory we can<font color="#E5E5E5"> make the</font>

394
00:19:27,230 --> 00:19:32,170
correct answer<font color="#E5E5E5"> the second type of</font>

395
00:19:29,630 --> 00:19:34,700
operation that<font color="#E5E5E5"> our human brain does is</font>

396
00:19:32,170 --> 00:19:37,520
to filter<font color="#E5E5E5"> out the</font><font color="#CCCCCC"> information that's no</font>

397
00:19:34,700 --> 00:19:40,040
longer<font color="#E5E5E5"> relevant perhaps we moved from</font>

398
00:19:37,520 --> 00:19:43,010
one context<font color="#E5E5E5"> from one topic</font><font color="#CCCCCC"> to another</font>

399
00:19:40,040 --> 00:19:45,379
now the information<font color="#E5E5E5"> or the</font><font color="#CCCCCC"> keyword story</font>

400
00:19:43,010 --> 00:19:48,290
on<font color="#E5E5E5"> our mind is no longer</font><font color="#CCCCCC"> relevant</font><font color="#E5E5E5"> and</font>

401
00:19:45,380 --> 00:19:49,130
<font color="#E5E5E5">since the mind starts deleting that</font>

402
00:19:48,290 --> 00:19:50,870
information

403
00:19:49,130 --> 00:19:54,260
it starts filtering out those key<font color="#CCCCCC"> words</font>

404
00:19:50,870 --> 00:19:56,840
because those are no longer<font color="#CCCCCC"> relevant for</font>

405
00:19:54,260 --> 00:19:59,629
the context that<font color="#E5E5E5"> we are reading</font><font color="#CCCCCC"> and the</font>

406
00:19:56,840 --> 00:20:02,209
third operation<font color="#E5E5E5"> is answering the</font>

407
00:19:59,630 --> 00:20:02,570
<font color="#E5E5E5">question based on what's stored in the</font>

408
00:20:02,210 --> 00:20:05,360
memory

409
00:20:02,570 --> 00:20:07,939
so if somebody<font color="#E5E5E5"> asked I speak fluent</font>

410
00:20:05,360 --> 00:20:10,729
<font color="#E5E5E5">which language and I have few key words</font>

411
00:20:07,940 --> 00:20:14,660
stored in my memory one<font color="#E5E5E5"> of them is</font>

412
00:20:10,730 --> 00:20:17,860
France then the<font color="#E5E5E5"> modal filter</font><font color="#CCCCCC"> host</font><font color="#E5E5E5"> based</font>

413
00:20:14,660 --> 00:20:20,450
on the current input what's the most

414
00:20:17,860 --> 00:20:22,850
important<font color="#CCCCCC"> keyword that's</font><font color="#E5E5E5"> stored</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> the</font>

415
00:20:20,450 --> 00:20:28,759
<font color="#CCCCCC">memory and based</font><font color="#E5E5E5"> on</font><font color="#CCCCCC"> that</font>

416
00:20:22,850 --> 00:20:32,600
it's gonna answer<font color="#E5E5E5"> the correct vaad</font>

417
00:20:28,759 --> 00:20:34,880
<font color="#E5E5E5">French</font><font color="#CCCCCC"> so RNN may mix</font><font color="#E5E5E5"> this human</font>

418
00:20:32,600 --> 00:20:39,199
behavior<font color="#E5E5E5"> through this complex or</font>

419
00:20:34,880 --> 00:20:41,840
<font color="#E5E5E5">nonlinear structure it has four part so</font>

420
00:20:39,200 --> 00:20:45,649
the core part is the is called cell

421
00:20:41,840 --> 00:20:48,350
<font color="#E5E5E5">memory it's similar to</font><font color="#CCCCCC"> our human memory</font>

422
00:20:45,649 --> 00:20:51,258
and it retains all the<font color="#CCCCCC"> keywords</font><font color="#E5E5E5"> that are</font>

423
00:20:48,350 --> 00:20:55,820
relevant<font color="#E5E5E5"> and observed as part of the</font>

424
00:20:51,259 --> 00:20:58,460
sequence<font color="#E5E5E5"> and then it has three gated</font>

425
00:20:55,820 --> 00:21:02,629
structure to constantly keep updating

426
00:20:58,460 --> 00:21:06,230
this memory<font color="#E5E5E5"> first one is the forget gate</font>

427
00:21:02,629 --> 00:21:08,719
<font color="#E5E5E5">based on the current input whatever</font>

428
00:21:06,230 --> 00:21:10,309
information<font color="#E5E5E5"> is no longer needed</font><font color="#CCCCCC"> it's</font>

429
00:21:08,720 --> 00:21:13,460
<font color="#E5E5E5">going to delete</font><font color="#CCCCCC"> that from the cell</font>

430
00:21:10,309 --> 00:21:15,289
memory<font color="#CCCCCC"> because it's irrelevant</font><font color="#E5E5E5"> now maybe</font>

431
00:21:13,460 --> 00:21:17,000
we moved from one paragraph to<font color="#CCCCCC"> another</font>

432
00:21:15,289 --> 00:21:18,860
paragraph<font color="#E5E5E5"> and the information</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> was</font>

433
00:21:17,000 --> 00:21:23,080
available in<font color="#E5E5E5"> the</font><font color="#CCCCCC"> first</font><font color="#E5E5E5"> paragraph</font><font color="#CCCCCC"> is no</font>

434
00:21:18,860 --> 00:21:27,668
longer<font color="#E5E5E5"> or needed so it will delete</font><font color="#CCCCCC"> that</font>

435
00:21:23,080 --> 00:21:31,340
from<font color="#E5E5E5"> the cell memory the second is</font>

436
00:21:27,669 --> 00:21:33,649
update part based on the input<font color="#CCCCCC"> if the</font>

437
00:21:31,340 --> 00:21:35,779
<font color="#E5E5E5">input is interesting it's going to add</font>

438
00:21:33,649 --> 00:21:38,029
<font color="#E5E5E5">that to cell memory so that it can</font>

439
00:21:35,779 --> 00:21:40,669
retain and memorize that information for

440
00:21:38,029 --> 00:21:43,639
<font color="#E5E5E5">the later use and if the</font><font color="#CCCCCC"> information is</font>

441
00:21:40,669 --> 00:21:45,889
not<font color="#CCCCCC"> relevant it's a common keyword</font><font color="#E5E5E5"> then</font>

442
00:21:43,639 --> 00:21:49,240
it's ignore it<font color="#CCCCCC"> will just ignore that</font>

443
00:21:45,889 --> 00:21:52,820
input<font color="#CCCCCC"> and</font><font color="#E5E5E5"> keep the cell memory constant</font>

444
00:21:49,240 --> 00:21:56,029
and the last one is output which<font color="#CCCCCC"> combine</font>

445
00:21:52,820 --> 00:21:58,908
<font color="#E5E5E5">the input with the cell memory to</font>

446
00:21:56,029 --> 00:22:05,629
predict the correct<font color="#E5E5E5"> output word which in</font>

447
00:21:58,909 --> 00:22:10,279
our case<font color="#E5E5E5"> was</font><font color="#CCCCCC"> french so lsdm and</font><font color="#E5E5E5"> RN ins</font>

448
00:22:05,629 --> 00:22:12,678
<font color="#E5E5E5">are really good at sequence</font><font color="#CCCCCC"> prediction</font>

449
00:22:10,279 --> 00:22:14,899
problem where we have a long sequence

450
00:22:12,679 --> 00:22:16,759
and at the end<font color="#E5E5E5"> of the</font><font color="#CCCCCC"> sequence we</font><font color="#E5E5E5"> want</font>

451
00:22:14,899 --> 00:22:19,789
to make a prediction

452
00:22:16,759 --> 00:22:22,669
<font color="#E5E5E5">so</font><font color="#CCCCCC"> RNN and lsdm captures this long-term</font>

453
00:22:19,789 --> 00:22:26,658
<font color="#E5E5E5">dependency that's ideal for sequence</font>

454
00:22:22,669 --> 00:22:31,690
prediction<font color="#E5E5E5"> tasks and our domain</font><font color="#CCCCCC"> name</font>

455
00:22:26,659 --> 00:22:35,149
which is a sequence of character can be

456
00:22:31,690 --> 00:22:36,659
<font color="#E5E5E5">Alice TM can sort of memorize which</font>

457
00:22:35,149 --> 00:22:39,029
sequence of character

458
00:22:36,659 --> 00:22:41,580
for benign domains<font color="#E5E5E5"> of human generated</font>

459
00:22:39,029 --> 00:22:47,009
domains<font color="#CCCCCC"> versus which character sequences</font>

460
00:22:41,580 --> 00:22:49,499
<font color="#E5E5E5">are for bad or</font><font color="#CCCCCC"> DGA domains coming back</font>

461
00:22:47,009 --> 00:22:52,320
<font color="#E5E5E5">to the unified architecture</font><font color="#CCCCCC"> Isaac's</font>

462
00:22:49,499 --> 00:22:55,799
explained all the different section the

463
00:22:52,320 --> 00:22:58,200
input is<font color="#E5E5E5"> the domain name we pre process</font>

464
00:22:55,799 --> 00:23:00,210
this input<font color="#E5E5E5"> to</font><font color="#CCCCCC"> one-dimensional integer</font>

465
00:22:58,200 --> 00:23:03,059
sequence because machine learning model

466
00:23:00,210 --> 00:23:05,369
only<font color="#E5E5E5"> accept fixed size or integer</font>

467
00:23:03,059 --> 00:23:07,710
sequences<font color="#E5E5E5"> the embedding layer is going</font>

468
00:23:05,369 --> 00:23:10,738
to convert it to a more meaningful<font color="#E5E5E5"> input</font>

469
00:23:07,710 --> 00:23:13,169
space<font color="#E5E5E5"> it then passes through</font><font color="#CCCCCC"> an LS DM</font>

470
00:23:10,739 --> 00:23:15,779
layer which<font color="#E5E5E5"> cannot remember which</font>

471
00:23:13,169 --> 00:23:17,489
sequence of characters are for<font color="#E5E5E5"> normal</font>

472
00:23:15,779 --> 00:23:21,450
good domain<font color="#CCCCCC"> versus which character of</font>

473
00:23:17,489 --> 00:23:25,789
sequences are for<font color="#E5E5E5"> DG a bad domains and</font>

474
00:23:21,450 --> 00:23:28,349
the output is a number<font color="#CCCCCC"> between 0 and</font><font color="#E5E5E5"> 1</font>

475
00:23:25,789 --> 00:23:31,559
which represents<font color="#CCCCCC"> the probability of the</font>

476
00:23:28,349 --> 00:23:35,720
input domain being DG higher the number

477
00:23:31,559 --> 00:23:40,678
the<font color="#E5E5E5"> more probable</font><font color="#CCCCCC"> that domain is a DG a</font>

478
00:23:35,720 --> 00:23:43,710
so we<font color="#CCCCCC"> train this model on our data we</font>

479
00:23:40,679 --> 00:23:47,220
use<font color="#CCCCCC"> 60%</font><font color="#E5E5E5"> of our input data for</font><font color="#CCCCCC"> training</font>

480
00:23:43,710 --> 00:23:49,080
the<font color="#E5E5E5"> model and then we validate the</font>

481
00:23:47,220 --> 00:23:52,710
accuracy of<font color="#E5E5E5"> this model on the test data</font>

482
00:23:49,080 --> 00:23:54,960
which is<font color="#E5E5E5"> 40%</font><font color="#CCCCCC"> we want to see how more how</font>

483
00:23:52,710 --> 00:24:00,450
<font color="#CCCCCC">our model</font><font color="#E5E5E5"> will perform in future when it</font>

484
00:23:54,960 --> 00:24:03,989
<font color="#E5E5E5">receives new data and</font><font color="#CCCCCC"> what</font><font color="#E5E5E5"> we found is</font>

485
00:24:00,450 --> 00:24:06,359
that<font color="#CCCCCC"> for benign which are good domains</font>

486
00:24:03,989 --> 00:24:10,919
<font color="#CCCCCC">human generated domains</font><font color="#E5E5E5"> the model is</font>

487
00:24:06,359 --> 00:24:13,349
<font color="#E5E5E5">able to detect 99% of the 99.4% of the</font>

488
00:24:10,919 --> 00:24:16,229
time it's correctly able to identify

489
00:24:13,349 --> 00:24:20,039
good<font color="#E5E5E5"> domain and for malicious DG domains</font>

490
00:24:16,229 --> 00:24:22,769
<font color="#E5E5E5">is able to identify 98.5 percent of the</font>

491
00:24:20,039 --> 00:24:25,440
time so this<font color="#E5E5E5"> is very high accuracy in</font>

492
00:24:22,769 --> 00:24:30,149
detecting DG<font color="#E5E5E5"> also the F score which is a</font>

493
00:24:25,440 --> 00:24:36,690
number<font color="#E5E5E5"> between</font><font color="#CCCCCC"> 0 and</font><font color="#E5E5E5"> 1 and generally use</font>

494
00:24:30,149 --> 00:24:38,609
for<font color="#E5E5E5"> detector for</font><font color="#CCCCCC"> moral accuracy where</font>

495
00:24:36,690 --> 00:24:40,859
the<font color="#CCCCCC"> two class</font><font color="#E5E5E5"> are</font><font color="#CCCCCC"> imbalanced here the</font>

496
00:24:38,609 --> 00:24:43,830
benign domains<font color="#E5E5E5"> are more in number as</font>

497
00:24:40,859 --> 00:24:46,918
compared to malicious domains<font color="#CCCCCC"> F score</font>

498
00:24:43,830 --> 00:24:49,820
gives measure of the accuracy of model

499
00:24:46,919 --> 00:24:52,280
when the two classes<font color="#CCCCCC"> are not equal</font>

500
00:24:49,820 --> 00:24:55,970
since one is<font color="#E5E5E5"> the highest number our</font>

501
00:24:52,280 --> 00:24:58,970
model is very<font color="#E5E5E5"> close to</font><font color="#CCCCCC"> one so it</font><font color="#E5E5E5"> has</font>

502
00:24:55,970 --> 00:25:05,180
very<font color="#E5E5E5"> good accuracy in detecting these</font>

503
00:24:58,970 --> 00:25:07,700
<font color="#CCCCCC">dca but these are for the non DCA we use</font>

504
00:25:05,180 --> 00:25:10,160
<font color="#CCCCCC">60% of the</font><font color="#E5E5E5"> data in training our model</font>

505
00:25:07,700 --> 00:25:13,010
<font color="#E5E5E5">and then we</font><font color="#CCCCCC"> ask can this model now</font>

506
00:25:10,160 --> 00:25:15,350
detect rest<font color="#CCCCCC"> 40% of the data so</font><font color="#E5E5E5"> this</font>

507
00:25:13,010 --> 00:25:17,960
accuracy<font color="#E5E5E5"> is in detecting known this year</font>

508
00:25:15,350 --> 00:25:21,350
we wanted<font color="#CCCCCC"> to know how our model would</font>

509
00:25:17,960 --> 00:25:23,300
perform in future<font color="#E5E5E5"> say somebody our model</font>

510
00:25:21,350 --> 00:25:26,000
is running<font color="#E5E5E5"> in production and somebody</font>

511
00:25:23,300 --> 00:25:28,280
creates a new DG<font color="#E5E5E5"> and we didn't use those</font>

512
00:25:26,000 --> 00:25:29,690
samples in training our model<font color="#E5E5E5"> so it's</font>

513
00:25:28,280 --> 00:25:31,700
the first<font color="#E5E5E5"> time</font><font color="#CCCCCC"> that our model is</font>

514
00:25:29,690 --> 00:25:34,960
encountering those domains whatever

515
00:25:31,700 --> 00:25:40,010
<font color="#CCCCCC">model be able to detect these new</font>

516
00:25:34,960 --> 00:25:43,490
domains<font color="#CCCCCC"> and what we found is that these</font>

517
00:25:40,010 --> 00:25:45,950
are the<font color="#CCCCCC"> three DCA families and what we</font>

518
00:25:43,490 --> 00:25:48,590
found that for the DG family which has

519
00:25:45,950 --> 00:25:50,570
samples very similar to what we what the

520
00:25:48,590 --> 00:25:53,149
<font color="#E5E5E5">model saw in the training</font><font color="#CCCCCC"> data</font><font color="#E5E5E5"> it gives</font>

521
00:25:50,570 --> 00:25:58,159
<font color="#CCCCCC">very high accuracy for example for China</font>

522
00:25:53,150 --> 00:26:00,050
<font color="#E5E5E5">d</font><font color="#CCCCCC"> DG</font><font color="#E5E5E5"> a type the model</font><font color="#CCCCCC"> team 99%</font><font color="#E5E5E5"> 99.6%</font><font color="#CCCCCC"> our</font>

523
00:25:58,160 --> 00:26:05,020
<font color="#E5E5E5">detection accuracy because the samples</font>

524
00:26:00,050 --> 00:26:08,149
are<font color="#CCCCCC"> very similar</font><font color="#E5E5E5"> to what we pass in our</font>

525
00:26:05,020 --> 00:26:12,350
training process of the model but<font color="#E5E5E5"> for</font>

526
00:26:08,150 --> 00:26:14,870
the<font color="#CCCCCC"> FIFO family</font><font color="#E5E5E5"> which is a</font><font color="#CCCCCC"> DCA which is</font>

527
00:26:12,350 --> 00:26:17,929
very different<font color="#E5E5E5"> from what the model has</font>

528
00:26:14,870 --> 00:26:20,090
seen in the<font color="#E5E5E5"> training data it's much more</font>

529
00:26:17,930 --> 00:26:22,720
closer to<font color="#CCCCCC"> a benign good domain because</font>

530
00:26:20,090 --> 00:26:26,510
the length of the domain is very<font color="#E5E5E5"> small</font>

531
00:26:22,720 --> 00:26:30,290
so our model didn't do<font color="#CCCCCC"> very well on on</font>

532
00:26:26,510 --> 00:26:33,680
these type of DJ's so we thought what

533
00:26:30,290 --> 00:26:35,629
could be the possible<font color="#E5E5E5"> region that the</font>

534
00:26:33,680 --> 00:26:38,300
model is<font color="#E5E5E5"> not able to perform equally</font>

535
00:26:35,630 --> 00:26:40,460
well<font color="#E5E5E5"> on the new DG</font><font color="#CCCCCC"> is something that it</font>

536
00:26:38,300 --> 00:26:43,250
<font color="#CCCCCC">has never seen before and this</font><font color="#E5E5E5"> is very</font>

537
00:26:40,460 --> 00:26:44,900
important for model to be deployed<font color="#CCCCCC"> to</font>

538
00:26:43,250 --> 00:26:47,570
production because in production we want

539
00:26:44,900 --> 00:26:49,400
our model to constantly detect these new

540
00:26:47,570 --> 00:26:53,659
DJ even<font color="#CCCCCC"> if we didn't use them for our</font>

541
00:26:49,400 --> 00:26:59,000
<font color="#E5E5E5">training and some of the limitation for</font>

542
00:26:53,660 --> 00:27:02,260
<font color="#E5E5E5">this</font><font color="#CCCCCC"> model is</font><font color="#E5E5E5"> possibly</font><font color="#CCCCCC"> because of</font>

543
00:26:59,000 --> 00:27:02,260
overfitting and

544
00:27:02,540 --> 00:27:08,420
second reason is that<font color="#E5E5E5"> the embedding</font>

545
00:27:05,000 --> 00:27:10,160
representation which<font color="#CCCCCC"> Maps</font><font color="#E5E5E5"> characters to</font>

546
00:27:08,420 --> 00:27:15,290
a more meaningful<font color="#CCCCCC"> eight dimensional</font>

547
00:27:10,160 --> 00:27:17,240
<font color="#E5E5E5">space is trained on the it learns that</font>

548
00:27:15,290 --> 00:27:21,470
representation through training data so

549
00:27:17,240 --> 00:27:24,860
it's only what we<font color="#CCCCCC"> pass to</font><font color="#E5E5E5"> our model that</font>

550
00:27:21,470 --> 00:27:28,010
it's going<font color="#E5E5E5"> to convert</font><font color="#CCCCCC"> to that</font><font color="#E5E5E5"> input</font>

551
00:27:24,860 --> 00:27:31,280
dimension<font color="#CCCCCC"> a dimensional</font><font color="#E5E5E5"> input space this</font>

552
00:27:28,010 --> 00:27:34,610
is<font color="#CCCCCC"> somehow limiting in nature we born as</font>

553
00:27:31,280 --> 00:27:37,010
a human being<font color="#E5E5E5"> even if I see</font><font color="#CCCCCC"> this sample</font>

554
00:27:34,610 --> 00:27:40,040
I can<font color="#CCCCCC"> easily separate them out</font><font color="#E5E5E5"> so why</font>

555
00:27:37,010 --> 00:27:44,750
can't the<font color="#CCCCCC"> models</font><font color="#E5E5E5"> do it and that's</font>

556
00:27:40,040 --> 00:27:47,750
because<font color="#CCCCCC"> we as human when we read through</font>

557
00:27:44,750 --> 00:27:49,760
the text we have<font color="#CCCCCC"> a certain information</font>

558
00:27:47,750 --> 00:27:54,260
or certain embedding capture in our mind

559
00:27:49,760 --> 00:27:56,360
and that<font color="#E5E5E5"> embedding of a natural English</font>

560
00:27:54,260 --> 00:27:59,379
language is<font color="#E5E5E5"> different from what model</font>

561
00:27:56,360 --> 00:28:03,530
<font color="#CCCCCC">learnt through the through the</font><font color="#E5E5E5"> training</font>

562
00:27:59,380 --> 00:28:05,240
so we<font color="#E5E5E5"> propose a change to this model</font><font color="#CCCCCC"> we</font>

563
00:28:03,530 --> 00:28:07,160
<font color="#E5E5E5">want to change the embedding part of</font>

564
00:28:05,240 --> 00:28:12,020
this model<font color="#E5E5E5"> because that's</font><font color="#CCCCCC"> very limiting</font>

565
00:28:07,160 --> 00:28:14,210
<font color="#E5E5E5">we want to add some flexibility so what</font>

566
00:28:12,020 --> 00:28:16,910
we propose is<font color="#E5E5E5"> to have a separate</font>

567
00:28:14,210 --> 00:28:19,130
character<font color="#E5E5E5"> embedding model that's going</font>

568
00:28:16,910 --> 00:28:23,300
<font color="#CCCCCC">to be trained on normal</font><font color="#E5E5E5"> English text</font>

569
00:28:19,130 --> 00:28:24,890
instead<font color="#CCCCCC"> of the input domains</font><font color="#E5E5E5"> and through</font>

570
00:28:23,300 --> 00:28:27,770
that training<font color="#E5E5E5"> process it's going to</font>

571
00:28:24,890 --> 00:28:30,500
learn which sequence of characters

572
00:28:27,770 --> 00:28:32,150
usually<font color="#E5E5E5"> occur in English language</font>

573
00:28:30,500 --> 00:28:34,730
<font color="#E5E5E5">natural English language</font><font color="#CCCCCC"> is</font><font color="#E5E5E5"> going to</font>

574
00:28:32,150 --> 00:28:37,040
have that contextual<font color="#E5E5E5"> information about</font>

575
00:28:34,730 --> 00:28:40,370
English language<font color="#CCCCCC"> encoded as part of</font>

576
00:28:37,040 --> 00:28:44,120
embedding representation and we are

577
00:28:40,370 --> 00:28:46,610
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> use this general representation</font>

578
00:28:44,120 --> 00:28:53,350
of English language<font color="#E5E5E5"> to then convert</font><font color="#CCCCCC"> our</font>

579
00:28:46,610 --> 00:28:56,540
domains to our vector space so here is a

580
00:28:53,350 --> 00:28:59,780
character<font color="#CCCCCC"> I'm our embedding model and</font>

581
00:28:56,540 --> 00:29:02,180
the purpose<font color="#CCCCCC"> of this model is just</font><font color="#E5E5E5"> to</font>

582
00:28:59,780 --> 00:29:05,510
learn<font color="#CCCCCC"> the embedding representation here</font>

583
00:29:02,180 --> 00:29:07,970
as<font color="#CCCCCC"> an input we</font><font color="#E5E5E5"> are passing</font><font color="#CCCCCC"> the newspaper</font>

584
00:29:05,510 --> 00:29:09,850
articles<font color="#CCCCCC"> from popular us</font><font color="#E5E5E5"> newspaper</font>

585
00:29:07,970 --> 00:29:13,430
<font color="#E5E5E5">that's very much representative of</font>

586
00:29:09,850 --> 00:29:16,428
normal humans in this language<font color="#E5E5E5"> and the</font>

587
00:29:13,430 --> 00:29:18,740
output would be can our given

588
00:29:16,429 --> 00:29:20,869
sequence of n characters<font color="#E5E5E5"> can the model</font>

589
00:29:18,740 --> 00:29:22,850
correctly<font color="#CCCCCC"> predict the next character in</font>

590
00:29:20,869 --> 00:29:25,189
the sequence<font color="#E5E5E5"> and through this training</font>

591
00:29:22,850 --> 00:29:26,779
<font color="#E5E5E5">process the model is gonna learn the</font>

592
00:29:25,190 --> 00:29:30,559
embedding representation that's very

593
00:29:26,779 --> 00:29:35,090
much<font color="#E5E5E5"> comparable to our human mind of</font>

594
00:29:30,559 --> 00:29:37,600
English language we're gonna use that

595
00:29:35,090 --> 00:29:40,100
embedding representation<font color="#CCCCCC"> learned on</font>

596
00:29:37,600 --> 00:29:42,289
natural<font color="#CCCCCC"> english language and</font><font color="#E5E5E5"> we are</font>

597
00:29:40,100 --> 00:29:45,289
going<font color="#CCCCCC"> to</font><font color="#E5E5E5"> plug</font><font color="#CCCCCC"> that back in the unified</font>

598
00:29:42,289 --> 00:29:48,440
architecture<font color="#E5E5E5"> so this architecture is</font>

599
00:29:45,289 --> 00:29:50,799
<font color="#CCCCCC">very exactly same as unified model the</font>

600
00:29:48,440 --> 00:29:54,860
<font color="#E5E5E5">only part that's changed is the</font>

601
00:29:50,799 --> 00:29:57,679
embedding representation in<font color="#CCCCCC"> the unified</font>

602
00:29:54,860 --> 00:29:59,990
<font color="#E5E5E5">architecture we trained both the</font>

603
00:29:57,679 --> 00:30:01,940
bi-directional<font color="#E5E5E5"> lsdm layer as well as the</font>

604
00:29:59,990 --> 00:30:04,970
embedding layer as part of one unified

605
00:30:01,940 --> 00:30:05,539
<font color="#CCCCCC">architecture</font><font color="#E5E5E5"> here we are just gonna</font>

606
00:30:04,970 --> 00:30:07,940
train the

607
00:30:05,539 --> 00:30:09,560
lsdm layer and we<font color="#E5E5E5"> are</font><font color="#CCCCCC"> gonna</font><font color="#E5E5E5"> keep the</font>

608
00:30:07,940 --> 00:30:11,230
<font color="#E5E5E5">embedding layer fixed</font>

609
00:30:09,560 --> 00:30:15,168
[Music]

610
00:30:11,230 --> 00:30:20,779
we then validated this new trained model

611
00:30:15,169 --> 00:30:23,779
<font color="#E5E5E5">on the same data so this was the</font>

612
00:30:20,779 --> 00:30:26,749
accuracy of the unified model that we

613
00:30:23,779 --> 00:30:29,029
trained earlier<font color="#E5E5E5"> we wanted to know if the</font>

614
00:30:26,749 --> 00:30:31,730
changes would break the model<font color="#E5E5E5"> or would</font>

615
00:30:29,029 --> 00:30:35,450
it still walk with these new<font color="#CCCCCC"> changes and</font>

616
00:30:31,730 --> 00:30:38,169
what we found is that<font color="#E5E5E5"> yes</font><font color="#CCCCCC"> our</font><font color="#E5E5E5"> model</font>

617
00:30:35,450 --> 00:30:40,700
works equally well even if<font color="#CCCCCC"> we don't</font>

618
00:30:38,169 --> 00:30:45,340
train the embedding representation as

619
00:30:40,700 --> 00:30:49,700
part of unified<font color="#CCCCCC"> architecture for benign</font>

620
00:30:45,340 --> 00:30:53,389
<font color="#CCCCCC">DG for benign domains the model</font><font color="#E5E5E5"> is 99%</font>

621
00:30:49,700 --> 00:30:56,990
accuracy<font color="#E5E5E5"> and for malicious domain it has</font>

622
00:30:53,389 --> 00:31:00,110
slightly<font color="#E5E5E5"> higher accuracy 99.8% the</font><font color="#CCCCCC"> XCore</font>

623
00:30:56,990 --> 00:31:03,860
<font color="#E5E5E5">which</font><font color="#CCCCCC"> is a measure of models accuracy is</font>

624
00:31:00,110 --> 00:31:05,360
still<font color="#CCCCCC"> very high it's</font><font color="#E5E5E5"> very close</font><font color="#CCCCCC"> to the</font>

625
00:31:03,860 --> 00:31:08,149
one we<font color="#CCCCCC"> saw for the</font><font color="#E5E5E5"> unified architecture</font>

626
00:31:05,360 --> 00:31:12,740
<font color="#CCCCCC">so this shows that</font><font color="#E5E5E5"> this change didn't</font>

627
00:31:08,149 --> 00:31:17,428
<font color="#E5E5E5">break our result for</font><font color="#CCCCCC"> the existing or non</font>

628
00:31:12,740 --> 00:31:21,280
DG types so it works equally well

629
00:31:17,429 --> 00:31:23,980
<font color="#E5E5E5">where were unified model was not so good</font>

630
00:31:21,280 --> 00:31:25,990
<font color="#E5E5E5">was in detecting new unknown</font><font color="#CCCCCC"> DCs</font>

631
00:31:23,980 --> 00:31:27,970
<font color="#E5E5E5">something that was not part of training</font>

632
00:31:25,990 --> 00:31:33,370
process something<font color="#E5E5E5"> that it has never seen</font>

633
00:31:27,970 --> 00:31:37,419
before<font color="#CCCCCC"> and the</font><font color="#E5E5E5"> accuracy for</font><font color="#CCCCCC"> shifu DGA</font>

634
00:31:33,370 --> 00:31:39,580
types<font color="#E5E5E5"> was really low but our separate</font>

635
00:31:37,419 --> 00:31:43,750
with our changes our separate character

636
00:31:39,580 --> 00:31:50,139
embedding model has<font color="#CCCCCC"> 39% higher accuracy</font>

637
00:31:43,750 --> 00:31:53,080
as compared to unified model so we have

638
00:31:50,140 --> 00:31:55,240
a unified model that works well on the

639
00:31:53,080 --> 00:31:56,889
non DS here but<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> work equally</font>

640
00:31:55,240 --> 00:31:59,950
well<font color="#E5E5E5"> on the unknown</font><font color="#CCCCCC"> which</font><font color="#E5E5E5"> is really</font>

641
00:31:56,890 --> 00:32:02,260
important<font color="#E5E5E5"> and with our changes the</font>

642
00:31:59,950 --> 00:32:05,230
separate embedding model<font color="#E5E5E5"> not</font><font color="#CCCCCC"> only works</font>

643
00:32:02,260 --> 00:32:08,290
well on<font color="#E5E5E5"> the non</font><font color="#CCCCCC"> deejay it also works</font>

644
00:32:05,230 --> 00:32:10,179
really<font color="#E5E5E5"> well on unknown</font><font color="#CCCCCC"> DJ which is very</font>

645
00:32:08,290 --> 00:32:18,389
important for<font color="#CCCCCC"> the model to be deployed</font>

646
00:32:10,179 --> 00:32:22,480
<font color="#E5E5E5">to production to summarize lsdm are</font>

647
00:32:18,390 --> 00:32:25,390
highly effective in detecting<font color="#CCCCCC"> djs as we</font>

648
00:32:22,480 --> 00:32:27,970
saw the model<font color="#E5E5E5"> gives</font><font color="#CCCCCC"> 99% accuracy it's</font>

649
00:32:25,390 --> 00:32:31,990
able<font color="#E5E5E5"> to detect a DJ with very high</font>

650
00:32:27,970 --> 00:32:34,720
accuracy<font color="#E5E5E5"> for non DJ and with our</font>

651
00:32:31,990 --> 00:32:36,970
proposed<font color="#CCCCCC"> changes it improves the</font>

652
00:32:34,720 --> 00:32:43,210
accuracy in detecting<font color="#E5E5E5"> the unknown</font><font color="#CCCCCC"> DCA's</font>

653
00:32:36,970 --> 00:32:45,580
as well and the<font color="#CCCCCC"> last</font><font color="#E5E5E5"> this approach</font><font color="#CCCCCC"> RN</font><font color="#E5E5E5"> an</font>

654
00:32:43,210 --> 00:32:47,770
approach is a proactive<font color="#CCCCCC"> you don't have</font>

655
00:32:45,580 --> 00:32:49,899
to wait a certain<font color="#E5E5E5"> period of time to</font>

656
00:32:47,770 --> 00:32:52,540
aggregate<font color="#E5E5E5"> the traffic like an X domain</font>

657
00:32:49,900 --> 00:32:54,850
based DNS detection or and it also

658
00:32:52,540 --> 00:32:57,428
doesn't<font color="#E5E5E5"> require a user effort to train</font>

659
00:32:54,850 --> 00:32:59,530
<font color="#CCCCCC">users past the input data and</font><font color="#E5E5E5"> all the</font>

660
00:32:57,429 --> 00:33:02,740
relevant<font color="#E5E5E5"> feature would be learned by</font>

661
00:32:59,530 --> 00:33:07,139
model<font color="#E5E5E5"> so this is a proactive very highly</font>

662
00:33:02,740 --> 00:33:13,030
effective or technique to detect<font color="#CCCCCC"> DJ's</font>

663
00:33:07,140 --> 00:33:19,150
with that or any questions think thank

664
00:33:13,030 --> 00:33:19,930
you guys any questions from<font color="#CCCCCC"> the room no</font>

665
00:33:19,150 --> 00:33:23,440
questions

666
00:33:19,930 --> 00:33:25,210
so I really love to talk<font color="#CCCCCC"> and</font><font color="#E5E5E5"> it was</font><font color="#CCCCCC"> nice</font>

667
00:33:23,440 --> 00:33:28,120
<font color="#E5E5E5">to hear you talk about how you improved</font>

668
00:33:25,210 --> 00:33:31,240
<font color="#E5E5E5">the detection of unknown</font><font color="#CCCCCC"> ggas</font><font color="#E5E5E5"> by using</font>

669
00:33:28,120 --> 00:33:35,669
<font color="#E5E5E5">more the natural languages as humans do</font>

670
00:33:31,240 --> 00:33:39,070
<font color="#CCCCCC">see it and yeah I'm happy</font><font color="#E5E5E5"> you could take</font>

671
00:33:35,670 --> 00:33:45,220
Hugo's place<font color="#E5E5E5"> and I I hope you all</font>

672
00:33:39,070 --> 00:33:49,090
enjoyed this talk as well<font color="#E5E5E5"> so in about 26</font>

673
00:33:45,220 --> 00:33:54,970
minutes<font color="#CCCCCC"> there will be a launch here in</font>

674
00:33:49,090 --> 00:33:59,350
front of the free area for the

675
00:33:54,970 --> 00:34:01,240
conference attendees<font color="#CCCCCC"> I believe so I hope</font>

676
00:33:59,350 --> 00:34:02,679
you enjoyed<font color="#E5E5E5"> it and hope to</font><font color="#CCCCCC"> see</font><font color="#E5E5E5"> you in</font>

677
00:34:01,240 --> 00:34:04,450
the next talk after lunch

678
00:34:02,680 --> 00:34:08,200
thanks everyone thanks for<font color="#E5E5E5"> joining oh</font>

679
00:34:04,450 --> 00:34:10,980
there's<font color="#CCCCCC"> one</font><font color="#E5E5E5"> more message</font><font color="#CCCCCC"> you go that was</font>

680
00:34:08,199 --> 00:34:10,980
<font color="#E5E5E5">original</font>

681
00:34:25,149 --> 00:34:31,489
yeah hi my name is<font color="#CCCCCC"> Ali and there is a</font>

682
00:34:29,359 --> 00:34:33,739
question with<font color="#CCCCCC"> respect</font><font color="#E5E5E5"> to D G what we</font>

683
00:34:31,489 --> 00:34:37,428
<font color="#E5E5E5">were showing</font><font color="#CCCCCC"> ok so it will generate</font><font color="#E5E5E5"> two</font>

684
00:34:33,739 --> 00:34:40,819
<font color="#CCCCCC">random DG domains so just wanted</font><font color="#E5E5E5"> to ask</font>

685
00:34:37,429 --> 00:34:42,830
like<font color="#E5E5E5"> won't it be easy for any endless to</font>

686
00:34:40,820 --> 00:34:44,450
detect such type of<font color="#E5E5E5"> suspicious type</font>

687
00:34:42,830 --> 00:34:46,580
because<font color="#CCCCCC"> the domain</font><font color="#E5E5E5"> is not a normal</font>

688
00:34:44,449 --> 00:34:48,859
domain so if someone has a look into the

689
00:34:46,580 --> 00:34:50,719
network it will definitely come<font color="#E5E5E5"> to know</font>

690
00:34:48,859 --> 00:34:53,299
that<font color="#E5E5E5"> this is</font><font color="#CCCCCC"> something not</font><font color="#E5E5E5"> normal domain</font>

691
00:34:50,719 --> 00:34:56,209
<font color="#E5E5E5">so it shouldn't be like generated based</font>

692
00:34:53,300 --> 00:34:57,500
<font color="#E5E5E5">on</font><font color="#CCCCCC"> something very</font><font color="#E5E5E5"> common or because the</font>

693
00:34:56,210 --> 00:35:01,340
domains which has been generated<font color="#CCCCCC"> by</font><font color="#E5E5E5"> the</font>

694
00:34:57,500 --> 00:35:03,050
DJ it would be<font color="#E5E5E5"> something which is not</font>

695
00:35:01,340 --> 00:35:04,730
normal<font color="#E5E5E5"> and the common domains and it</font>

696
00:35:03,050 --> 00:35:06,260
will be easy<font color="#CCCCCC"> for people to look around</font>

697
00:35:04,730 --> 00:35:10,220
for<font color="#E5E5E5"> something is wrong in the network</font>

698
00:35:06,260 --> 00:35:12,470
yeah it's as a human we are naturally

699
00:35:10,220 --> 00:35:15,259
very<font color="#E5E5E5"> good at detecting these random</font>

700
00:35:12,470 --> 00:35:16,910
sequence<font color="#CCCCCC"> now if we</font><font color="#E5E5E5"> look at a sequence of</font>

701
00:35:15,260 --> 00:35:19,850
character we can<font color="#E5E5E5"> easily detect whether</font>

702
00:35:16,910 --> 00:35:23,149
that's that sequence<font color="#CCCCCC"> makes sense or</font><font color="#E5E5E5"> not</font>

703
00:35:19,850 --> 00:35:26,690
<font color="#E5E5E5">but in a large organization</font><font color="#CCCCCC"> where on</font>

704
00:35:23,150 --> 00:35:30,590
daily basis<font color="#E5E5E5"> user makes a</font><font color="#CCCCCC"> hundred</font>

705
00:35:26,690 --> 00:35:33,170
thousand or<font color="#CCCCCC"> requests</font><font color="#E5E5E5"> on a given day it's</font>

706
00:35:30,590 --> 00:35:35,480
very hard for<font color="#E5E5E5"> an analyst</font><font color="#CCCCCC"> to go through</font>

707
00:35:33,170 --> 00:35:38,000
all those requests and manually search

708
00:35:35,480 --> 00:35:40,640
for the ones<font color="#CCCCCC"> that are detailed</font><font color="#E5E5E5"> right</font>

709
00:35:38,000 --> 00:35:43,520
it's it's very<font color="#CCCCCC"> time-consuming to go</font>

710
00:35:40,640 --> 00:35:45,890
through a hundred thousand or and that's

711
00:35:43,520 --> 00:35:48,170
for a moderate<font color="#E5E5E5"> organization for our</font>

712
00:35:45,890 --> 00:35:51,109
organization like RBC which has<font color="#CCCCCC"> eighty</font>

713
00:35:48,170 --> 00:35:53,900
<font color="#CCCCCC">thousand employees on</font><font color="#E5E5E5"> daily basis we</font>

714
00:35:51,109 --> 00:35:59,450
have close to<font color="#CCCCCC"> eighty million requests</font>

715
00:35:53,900 --> 00:36:01,369
<font color="#E5E5E5">and doing it manually or and an analyst</font>

716
00:35:59,450 --> 00:36:03,250
going through that entire traffic<font color="#E5E5E5"> is</font>

717
00:36:01,369 --> 00:36:06,109
impossible<font color="#CCCCCC"> so that's why we need</font>

718
00:36:03,250 --> 00:36:08,359
something<font color="#E5E5E5"> that's not manual something</font>

719
00:36:06,109 --> 00:36:11,700
that's automatically<font color="#CCCCCC"> detected random</font>

720
00:36:08,359 --> 00:36:17,609
sequences thank you

721
00:36:11,700 --> 00:36:20,299
yes hi<font color="#E5E5E5"> - mania</font><font color="#CCCCCC"> the entire</font><font color="#E5E5E5"> method a</font>

722
00:36:17,609 --> 00:36:23,520
process<font color="#E5E5E5"> that you mentioned about the</font>

723
00:36:20,299 --> 00:36:25,049
<font color="#E5E5E5">detecting of</font><font color="#CCCCCC"> DJs is it something already</font>

724
00:36:23,520 --> 00:36:26,160
available<font color="#E5E5E5"> in a product or is it</font>

725
00:36:25,049 --> 00:36:30,690
something that you have developed<font color="#E5E5E5"> in</font>

726
00:36:26,160 --> 00:36:35,970
line or<font color="#CCCCCC"> in-house of the Royal Bank of</font>

727
00:36:30,690 --> 00:36:39,750
Canada<font color="#E5E5E5"> so</font><font color="#CCCCCC"> are different vendors or proxy</font>

728
00:36:35,970 --> 00:36:42,390
servers<font color="#E5E5E5"> different DNS / they have their</font>

729
00:36:39,750 --> 00:36:44,880
own technique which is not known<font color="#E5E5E5"> to RBC</font>

730
00:36:42,390 --> 00:36:46,980
<font color="#E5E5E5">some use traditional techniques</font><font color="#CCCCCC"> only</font>

731
00:36:44,880 --> 00:36:47,819
<font color="#E5E5E5">some use some</font><font color="#CCCCCC"> version of machine</font>

732
00:36:46,980 --> 00:36:51,420
learning<font color="#E5E5E5"> techniques</font>

733
00:36:47,819 --> 00:36:55,740
<font color="#E5E5E5">Doronin</font><font color="#CCCCCC"> ones</font><font color="#E5E5E5"> what we are proposing</font><font color="#CCCCCC"> here</font>

734
00:36:51,420 --> 00:36:59,630
is<font color="#CCCCCC"> Ave we use the embedding layer so</font>

735
00:36:55,740 --> 00:37:03,419
this is a very common approach in other

736
00:36:59,630 --> 00:37:06,869
type of<font color="#E5E5E5"> network like using image net to</font>

737
00:37:03,420 --> 00:37:09,990
identify say two<font color="#E5E5E5"> different kind of image</font>

738
00:37:06,869 --> 00:37:12,089
dog or cat<font color="#E5E5E5"> so we for training those kind</font>

739
00:37:09,990 --> 00:37:15,419
of model for for those kind of<font color="#E5E5E5"> tasks</font><font color="#CCCCCC"> we</font>

740
00:37:12,089 --> 00:37:17,279
<font color="#CCCCCC">don't train our model from</font><font color="#E5E5E5"> scratch</font><font color="#CCCCCC"> use a</font>

741
00:37:15,420 --> 00:37:22,049
pre trained model<font color="#E5E5E5"> like image net and</font>

742
00:37:17,280 --> 00:37:24,480
then add some additional layers and then

743
00:37:22,049 --> 00:37:28,049
train those additional<font color="#E5E5E5"> layers</font><font color="#CCCCCC"> only we</font>

744
00:37:24,480 --> 00:37:30,510
don't<font color="#E5E5E5"> train the entire network but this</font>

745
00:37:28,049 --> 00:37:32,280
is<font color="#CCCCCC"> something</font><font color="#E5E5E5"> that's</font><font color="#CCCCCC"> missing from</font><font color="#E5E5E5"> the RN</font>

746
00:37:30,510 --> 00:37:34,680
<font color="#E5E5E5">and B's techniques that's commonly</font>

747
00:37:32,280 --> 00:37:36,950
<font color="#E5E5E5">proposed by the researcher they train</font>

748
00:37:34,680 --> 00:37:39,779
the<font color="#E5E5E5"> entire network both time bedding and</font>

749
00:37:36,950 --> 00:37:41,939
lsdm layer as part of one unified

750
00:37:39,780 --> 00:37:44,369
architecture<font color="#CCCCCC"> we don't want to do that</font><font color="#E5E5E5"> we</font>

751
00:37:41,940 --> 00:37:46,740
want to add some flexibility<font color="#CCCCCC"> to model we</font>

752
00:37:44,369 --> 00:37:48,809
<font color="#E5E5E5">want to have a character embedding model</font>

753
00:37:46,740 --> 00:37:50,129
<font color="#E5E5E5">that's representative of a normal</font>

754
00:37:48,809 --> 00:37:52,950
English language<font color="#E5E5E5"> and we are going to</font>

755
00:37:50,130 --> 00:37:55,680
plug that<font color="#E5E5E5"> pre-trained or weights in our</font>

756
00:37:52,950 --> 00:37:57,689
model and then just train the hidden

757
00:37:55,680 --> 00:37:59,759
part the LSD and part of<font color="#E5E5E5"> the model to</font>

758
00:37:57,690 --> 00:38:02,790
separate the normal<font color="#E5E5E5"> character sequences</font>

759
00:37:59,760 --> 00:38:04,880
versus random character sequence thank

760
00:38:02,790 --> 00:38:04,880
you

761
00:38:05,000 --> 00:38:11,089
any more questions<font color="#CCCCCC"> is one finger</font><font color="#E5E5E5"> in</font>

762
00:38:08,730 --> 00:38:11,089
front

763
00:38:14,280 --> 00:38:20,650
thank you my<font color="#CCCCCC"> name is</font><font color="#E5E5E5"> Ranma</font><font color="#CCCCCC"> is the lsdm</font>

764
00:38:18,460 --> 00:38:24,490
released<font color="#CCCCCC"> actually in order to be used</font>

765
00:38:20,650 --> 00:38:26,500
<font color="#E5E5E5">for example having the list of the DNS</font>

766
00:38:24,490 --> 00:38:32,799
<font color="#E5E5E5">requests</font><font color="#CCCCCC"> in</font><font color="#E5E5E5"> order to check which one are</font>

767
00:38:26,500 --> 00:38:37,930
probably<font color="#CCCCCC"> DJs so alice tiem is basically</font>

768
00:38:32,799 --> 00:38:41,020
a nonlinear function<font color="#E5E5E5"> it's available as</font>

769
00:38:37,930 --> 00:38:44,649
part<font color="#E5E5E5"> of Kara's or tensorflow</font>

770
00:38:41,020 --> 00:38:48,069
or whichever<font color="#CCCCCC"> deep learning tool that you</font>

771
00:38:44,650 --> 00:38:50,740
use you just<font color="#E5E5E5"> simply</font><font color="#CCCCCC"> add an additional</font>

772
00:38:48,069 --> 00:38:53,558
<font color="#CCCCCC">layer and say that I want</font><font color="#E5E5E5"> to use lsdm in</font>

773
00:38:50,740 --> 00:38:59,558
this hidden<font color="#E5E5E5"> layer so yes you can you can</font>

774
00:38:53,559 --> 00:39:03,339
definitely<font color="#CCCCCC"> add Alice teams</font><font color="#E5E5E5"> any more</font>

775
00:38:59,559 --> 00:39:05,640
questions from<font color="#E5E5E5"> the room</font><font color="#CCCCCC"> I might have</font><font color="#E5E5E5"> one</font>

776
00:39:03,339 --> 00:39:08,650
question for<font color="#E5E5E5"> you I've come across some</font>

777
00:39:05,640 --> 00:39:11,650
<font color="#E5E5E5">malware that generates the main names</font>

778
00:39:08,650 --> 00:39:14,049
based<font color="#E5E5E5"> on titles of most read articles of</font>

779
00:39:11,650 --> 00:39:17,079
a specific website<font color="#E5E5E5"> if you come across</font>

780
00:39:14,049 --> 00:39:19,059
these<font color="#CCCCCC"> and how do</font><font color="#E5E5E5"> you think or how does</font>

781
00:39:17,079 --> 00:39:21,280
your model perform against that or how

782
00:39:19,059 --> 00:39:24,970
do you<font color="#E5E5E5"> think it would perform against</font>

783
00:39:21,280 --> 00:39:29,079
<font color="#E5E5E5">that so</font><font color="#CCCCCC"> all those type of malware's or</font>

784
00:39:24,970 --> 00:39:31,808
DC malware that uses English<font color="#E5E5E5"> word</font><font color="#CCCCCC"> buy</font>

785
00:39:29,079 --> 00:39:33,970
are called dictionary<font color="#E5E5E5"> DTS and are</font>

786
00:39:31,809 --> 00:39:35,380
different from<font color="#E5E5E5"> the ones that just uses</font>

787
00:39:33,970 --> 00:39:39,279
the characters and a random<font color="#E5E5E5"> combination</font>

788
00:39:35,380 --> 00:39:42,220
<font color="#CCCCCC">of those characters the dictionary DCA's</font>

789
00:39:39,280 --> 00:39:45,069
fix<font color="#E5E5E5"> any two random dictionary words and</font>

790
00:39:42,220 --> 00:39:47,770
combine together those dictionary<font color="#CCCCCC"> words</font>

791
00:39:45,069 --> 00:39:50,558
<font color="#E5E5E5">if you read those won't have any</font>

792
00:39:47,770 --> 00:39:54,099
meaningful<font color="#E5E5E5"> any meaning all right</font>

793
00:39:50,559 --> 00:39:56,230
but since the model<font color="#E5E5E5"> that we proposed</font>

794
00:39:54,099 --> 00:39:58,869
here<font color="#E5E5E5"> looks at the characteristic whence</font>

795
00:39:56,230 --> 00:40:01,750
this won't be as<font color="#CCCCCC"> effective in detecting</font>

796
00:39:58,869 --> 00:40:03,730
those dictionary<font color="#CCCCCC"> DG's because the</font>

797
00:40:01,750 --> 00:40:06,460
characteristic whence is still very

798
00:40:03,730 --> 00:40:08,369
<font color="#E5E5E5">similar to natural English language the</font>

799
00:40:06,460 --> 00:40:10,660
difference is that<font color="#CCCCCC"> now instead of</font>

800
00:40:08,369 --> 00:40:14,170
<font color="#E5E5E5">combining random characters is now</font>

801
00:40:10,660 --> 00:40:17,710
<font color="#E5E5E5">combining random words</font><font color="#CCCCCC"> and one</font><font color="#E5E5E5"> of the</font>

802
00:40:14,170 --> 00:40:20,140
ways<font color="#CCCCCC"> to tackle</font><font color="#E5E5E5"> this kind of these years</font>

803
00:40:17,710 --> 00:40:23,740
would<font color="#CCCCCC"> be instead of embedding each</font>

804
00:40:20,140 --> 00:40:26,529
character<font color="#CCCCCC"> to a vector space</font><font color="#E5E5E5"> we would be</font>

805
00:40:23,740 --> 00:40:29,259
embedding each<font color="#CCCCCC"> vaad so he</font>

806
00:40:26,530 --> 00:40:31,840
<font color="#CCCCCC">you</font><font color="#E5E5E5"> say there are two</font><font color="#CCCCCC"> words</font><font color="#E5E5E5"> what one and</font>

807
00:40:29,260 --> 00:40:33,790
<font color="#E5E5E5">what</font><font color="#CCCCCC"> -</font><font color="#E5E5E5"> these are two dictionary whether</font>

808
00:40:31,840 --> 00:40:38,070
<font color="#E5E5E5">that are combined to form the DGA</font>

809
00:40:33,790 --> 00:40:40,990
dictionary dg8 instead of embedding<font color="#E5E5E5"> each</font>

810
00:40:38,070 --> 00:40:46,090
character in<font color="#E5E5E5"> this domain we are now</font>

811
00:40:40,990 --> 00:40:48,189
embedding<font color="#E5E5E5"> each world</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> Google has this</font>

812
00:40:46,090 --> 00:40:51,550
<font color="#E5E5E5">void</font><font color="#CCCCCC"> - vac representation which maps</font>

813
00:40:48,190 --> 00:40:55,210
each word in the<font color="#E5E5E5"> English dictionary to</font>

814
00:40:51,550 --> 00:40:56,980
our vector representation<font color="#E5E5E5"> and that</font>

815
00:40:55,210 --> 00:40:59,770
vector representation the<font color="#CCCCCC"> vols that</font>

816
00:40:56,980 --> 00:41:02,470
frequently<font color="#E5E5E5"> occurred together such as</font>

817
00:40:59,770 --> 00:41:04,360
king and<font color="#E5E5E5"> queen are very relevant to each</font>

818
00:41:02,470 --> 00:41:06,640
other and frequently occurred in the

819
00:41:04,360 --> 00:41:09,100
same context would<font color="#E5E5E5"> be close</font><font color="#CCCCCC"> to each</font>

820
00:41:06,640 --> 00:41:11,379
<font color="#E5E5E5">other in</font><font color="#CCCCCC"> that vector</font><font color="#E5E5E5"> space was is the</font>

821
00:41:09,100 --> 00:41:13,450
word that<font color="#CCCCCC"> doesn't</font><font color="#E5E5E5"> make any sense are</font>

822
00:41:11,380 --> 00:41:16,120
generally which doesn't have any

823
00:41:13,450 --> 00:41:18,819
relationship<font color="#CCCCCC"> with each other</font><font color="#E5E5E5"> and are</font>

824
00:41:16,120 --> 00:41:22,270
<font color="#CCCCCC">usually used in this dictionary</font><font color="#E5E5E5"> DG would</font>

825
00:41:18,820 --> 00:41:24,550
be very far<font color="#CCCCCC"> apart in that input space so</font>

826
00:41:22,270 --> 00:41:27,790
through the<font color="#E5E5E5"> word embedding we can then</font>

827
00:41:24,550 --> 00:41:30,460
separate<font color="#E5E5E5"> out these dictionaries here the</font>

828
00:41:27,790 --> 00:41:33,279
character embedding is not as effective

829
00:41:30,460 --> 00:41:38,400
in<font color="#E5E5E5"> detecting these dictionaries here and</font>

830
00:41:33,280 --> 00:41:40,930
have to<font color="#CCCCCC"> use the word embedding thank you</font>

831
00:41:38,400 --> 00:41:46,420
any more questions we still<font color="#CCCCCC"> have some</font>

832
00:41:40,930 --> 00:41:48,509
<font color="#E5E5E5">time I think so</font><font color="#CCCCCC"> okay that's it</font>

833
00:41:46,420 --> 00:41:51,819
thank you thank you thank<font color="#E5E5E5"> you everyone</font>

834
00:41:48,510 --> 00:41:51,819
[Applause]

