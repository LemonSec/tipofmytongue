1
00:00:24,390 --> 00:00:30,150
I'm gonna talk today about<font color="#E5E5E5"> hardware</font>

2
00:00:27,420 --> 00:00:32,360
<font color="#E5E5E5">wallets for cryptocurrencies and just</font>

3
00:00:30,150 --> 00:00:35,699
<font color="#CCCCCC">the disclaimer I'm not gonna raise any</font>

4
00:00:32,360 --> 00:00:38,400
<font color="#E5E5E5">fu D about current wallets being</font><font color="#CCCCCC"> answer</font>

5
00:00:35,700 --> 00:00:40,949
insecure or something else<font color="#E5E5E5"> I'm just</font>

6
00:00:38,400 --> 00:00:43,500
<font color="#CCCCCC">suggesting an alternative way of making</font>

7
00:00:40,949 --> 00:00:45,989
them more secure by design by<font color="#E5E5E5"> changing</font>

8
00:00:43,500 --> 00:00:48,900
the applying different<font color="#E5E5E5"> architecture that</font>

9
00:00:45,989 --> 00:00:51,540
should in theory be more resilient<font color="#E5E5E5"> to to</font>

10
00:00:48,900 --> 00:00:55,260
two attacks<font color="#E5E5E5"> that that we that we already</font>

11
00:00:51,540 --> 00:00:59,640
saw<font color="#CCCCCC"> that</font><font color="#E5E5E5"> that could happen</font><font color="#CCCCCC"> so what what</font>

12
00:00:55,260 --> 00:01:02,760
is<font color="#CCCCCC"> the</font><font color="#E5E5E5"> harder</font><font color="#CCCCCC"> wallet on on Bitcoin wiki</font>

13
00:00:59,640 --> 00:01:05,460
<font color="#CCCCCC">there is a small definition that says</font>

14
00:01:02,760 --> 00:01:06,990
<font color="#E5E5E5">that they are devices</font><font color="#CCCCCC"> that are that are</font>

15
00:01:05,459 --> 00:01:10,169
kind of<font color="#E5E5E5"> more secure for storing</font>

16
00:01:06,990 --> 00:01:13,350
cryptocurrencies<font color="#E5E5E5"> then ordinary software</font>

17
00:01:10,170 --> 00:01:16,380
wallets<font color="#E5E5E5"> that are in case your computer</font>

18
00:01:13,350 --> 00:01:20,039
is<font color="#CCCCCC"> expose exploited or hacked people can</font>

19
00:01:16,380 --> 00:01:23,220
take your your funds<font color="#E5E5E5"> so this this is</font>

20
00:01:20,040 --> 00:01:27,360
supposed to<font color="#E5E5E5"> be a mean of storing</font>

21
00:01:23,220 --> 00:01:30,360
cryptocurrencies<font color="#CCCCCC"> in an isolated</font><font color="#E5E5E5"> way</font><font color="#CCCCCC"> that</font>

22
00:01:27,360 --> 00:01:34,800
should<font color="#E5E5E5"> make remote attacks impossible</font>

23
00:01:30,360 --> 00:01:38,310
but in practice<font color="#CCCCCC"> that</font><font color="#E5E5E5"> wasn't the case</font>

24
00:01:34,800 --> 00:01:40,380
because we<font color="#CCCCCC"> saw some examples of possible</font>

25
00:01:38,310 --> 00:01:42,900
<font color="#CCCCCC">attacks on harder wallets</font><font color="#E5E5E5"> that are</font>

26
00:01:40,380 --> 00:01:45,300
really widely<font color="#E5E5E5"> deployed like treszura for</font>

27
00:01:42,900 --> 00:01:48,510
example<font color="#CCCCCC"> its architecture is pretty</font>

28
00:01:45,300 --> 00:01:50,759
simple<font color="#CCCCCC"> so they use</font><font color="#E5E5E5"> basic microcontroller</font>

29
00:01:48,510 --> 00:01:53,250
<font color="#CCCCCC">that is just off</font><font color="#E5E5E5"> the shelf</font><font color="#CCCCCC"> and they</font>

30
00:01:50,760 --> 00:01:55,409
communicate<font color="#CCCCCC"> by</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> by</font><font color="#E5E5E5"> USB</font>

31
00:01:53,250 --> 00:01:56,730
<font color="#E5E5E5">and they have a small display where they</font>

32
00:01:55,409 --> 00:01:59,220
show the transaction<font color="#CCCCCC"> that you have to</font>

33
00:01:56,730 --> 00:02:01,050
confirm<font color="#E5E5E5"> so what is the problem with this</font>

34
00:01:59,220 --> 00:02:02,190
the problem is that usually<font color="#E5E5E5"> these USB</font>

35
00:02:01,050 --> 00:02:05,158
stacks are huge

36
00:02:02,190 --> 00:02:07,170
and they<font color="#E5E5E5"> are not written</font><font color="#CCCCCC"> to be for for</font>

37
00:02:05,159 --> 00:02:10,408
secure<font color="#E5E5E5"> devices so it's quite</font><font color="#CCCCCC"> possible</font>

38
00:02:07,170 --> 00:02:12,480
that<font color="#CCCCCC"> some of these open source</font><font color="#E5E5E5"> USB</font>

39
00:02:10,408 --> 00:02:14,519
snacks<font color="#CCCCCC"> or microcontrollers contain some</font>

40
00:02:12,480 --> 00:02:17,429
bugs<font color="#E5E5E5"> that can be exploited and it can</font>

41
00:02:14,519 --> 00:02:20,640
allow people<font color="#CCCCCC"> to to choose to steal funds</font>

42
00:02:17,430 --> 00:02:22,440
from these<font color="#CCCCCC"> wallets remotely so what</font>

43
00:02:20,640 --> 00:02:26,510
happens<font color="#E5E5E5"> isn't instead</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> having an</font>

44
00:02:22,440 --> 00:02:29,819
isolated device<font color="#E5E5E5"> you someone can actually</font>

45
00:02:26,510 --> 00:02:31,500
abuse<font color="#E5E5E5"> that device</font><font color="#CCCCCC"> to either right</font>

46
00:02:29,819 --> 00:02:33,119
<font color="#CCCCCC">through to right</font><font color="#E5E5E5"> in into the protected</font>

47
00:02:31,500 --> 00:02:35,040
part of the memory<font color="#E5E5E5"> to rewrite parts of</font>

48
00:02:33,120 --> 00:02:37,080
the<font color="#E5E5E5"> memory or even escalate arbitrary</font>

49
00:02:35,040 --> 00:02:37,720
code execution in some of the<font color="#E5E5E5"> the older</font>

50
00:02:37,080 --> 00:02:39,220
firmware

51
00:02:37,720 --> 00:02:41,950
versions of treasure<font color="#E5E5E5"> and they have</font>

52
00:02:39,220 --> 00:02:47,260
<font color="#E5E5E5">really nice write-up on their blog about</font>

53
00:02:41,950 --> 00:02:51,880
<font color="#CCCCCC">these</font><font color="#E5E5E5"> box that they had so that that</font>

54
00:02:47,260 --> 00:02:53,500
cross is<font color="#E5E5E5"> one of the the one</font><font color="#CCCCCC"> of the</font>

55
00:02:51,880 --> 00:02:54,940
properties of<font color="#E5E5E5"> these hardware wallets and</font>

56
00:02:53,500 --> 00:02:56,890
<font color="#E5E5E5">that is that they can</font><font color="#CCCCCC"> be used securely</font>

57
00:02:54,940 --> 00:02:58,600
interactively<font color="#E5E5E5"> and interactively because</font>

58
00:02:56,890 --> 00:03:01,959
private<font color="#E5E5E5"> keys do touch potentially</font>

59
00:02:58,600 --> 00:03:05,320
vulnerable software so in case of ledger

60
00:03:01,960 --> 00:03:07,960
is well it was supposed<font color="#CCCCCC"> to be a bit more</font>

61
00:03:05,320 --> 00:03:12,070
secure because<font color="#E5E5E5"> but it's not open</font><font color="#CCCCCC"> source</font>

62
00:03:07,960 --> 00:03:14,050
<font color="#E5E5E5">so that's one</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> the things</font><font color="#E5E5E5"> that we</font>

63
00:03:12,070 --> 00:03:18,519
must<font color="#E5E5E5"> also take</font><font color="#CCCCCC"> into consideration when</font>

64
00:03:14,050 --> 00:03:20,740
we choose our devices<font color="#E5E5E5"> because in case</font>

65
00:03:18,520 --> 00:03:24,100
the<font color="#CCCCCC"> code is</font><font color="#E5E5E5"> not open there is no way</font>

66
00:03:20,740 --> 00:03:26,860
virtually no way for<font color="#E5E5E5"> us</font><font color="#CCCCCC"> to validate the</font>

67
00:03:24,100 --> 00:03:28,870
<font color="#CCCCCC">DVD operation of of that microcontroller</font>

68
00:03:26,860 --> 00:03:32,500
we cannot validate what what it's doing

69
00:03:28,870 --> 00:03:35,020
when it's<font color="#E5E5E5"> signing our signing our</font>

70
00:03:32,500 --> 00:03:36,670
transactions<font color="#E5E5E5"> so the architecture</font><font color="#CCCCCC"> of</font>

71
00:03:35,020 --> 00:03:39,100
<font color="#CCCCCC">ledger</font><font color="#E5E5E5"> is like there is a main my</font>

72
00:03:36,670 --> 00:03:42,429
<font color="#CCCCCC">controller that talks to the</font><font color="#E5E5E5"> oil and</font>

73
00:03:39,100 --> 00:03:44,170
<font color="#E5E5E5">talks by USB</font><font color="#CCCCCC"> to to the PC</font><font color="#E5E5E5"> and it also</font>

74
00:03:42,430 --> 00:03:48,580
has a secure microcontroller that<font color="#E5E5E5"> is</font>

75
00:03:44,170 --> 00:03:50,079
supposed to be really<font color="#E5E5E5"> really I like they</font>

76
00:03:48,580 --> 00:03:51,760
supposed to<font color="#E5E5E5"> be much more secure than</font>

77
00:03:50,080 --> 00:03:54,100
than the average of<font color="#E5E5E5"> the</font><font color="#CCCCCC"> Shelf micrometer</font>

78
00:03:51,760 --> 00:03:56,649
<font color="#CCCCCC">it's hard it's hard</font><font color="#E5E5E5"> to get this one for</font>

79
00:03:54,100 --> 00:03:59,200
<font color="#CCCCCC">very</font><font color="#E5E5E5"> testing like not like we cannot</font>

80
00:03:56,650 --> 00:04:01,600
easily<font color="#CCCCCC"> by order order board with</font><font color="#E5E5E5"> this</font>

81
00:03:59,200 --> 00:04:03,070
microcontroller<font color="#CCCCCC"> online because</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> need</font>

82
00:04:01,600 --> 00:04:07,780
to sign an NDA with the manufacturer

83
00:04:03,070 --> 00:04:10,750
first<font color="#E5E5E5"> and what is the problem so in case</font>

84
00:04:07,780 --> 00:04:13,959
the same we<font color="#E5E5E5"> have the same problem as as</font>

85
00:04:10,750 --> 00:04:16,690
with pressure I'm not<font color="#E5E5E5"> not aware</font><font color="#CCCCCC"> of any</font>

86
00:04:13,959 --> 00:04:18,548
of<font color="#E5E5E5"> the attacks on ledger that were that</font>

87
00:04:16,690 --> 00:04:20,649
were done in<font color="#E5E5E5"> the in this way but let's</font>

88
00:04:18,548 --> 00:04:22,960
let's say hypothetically<font color="#E5E5E5"> there</font><font color="#CCCCCC"> is a bug</font>

89
00:04:20,649 --> 00:04:25,030
in<font color="#CCCCCC"> the</font><font color="#E5E5E5"> USB stack then we cannot</font>

90
00:04:22,960 --> 00:04:26,650
guarantee what we see on<font color="#E5E5E5"> the</font><font color="#CCCCCC"> or what is</font>

91
00:04:25,030 --> 00:04:29,830
the the<font color="#CCCCCC"> transaction</font><font color="#E5E5E5"> that is being sent</font>

92
00:04:26,650 --> 00:04:33,190
<font color="#CCCCCC">to</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> secure microcontroller so that</font>

93
00:04:29,830 --> 00:04:36,789
way<font color="#E5E5E5"> also</font><font color="#CCCCCC"> another</font><font color="#E5E5E5"> there is another</font>

94
00:04:33,190 --> 00:04:38,430
problem<font color="#CCCCCC"> because</font><font color="#E5E5E5"> they actually verify the</font>

95
00:04:36,790 --> 00:04:41,229
firmware that is running on this

96
00:04:38,430 --> 00:04:44,130
insecure marker controller<font color="#E5E5E5"> by sending it</font>

97
00:04:41,229 --> 00:04:47,110
to the secure<font color="#CCCCCC"> market for verification so</font>

98
00:04:44,130 --> 00:04:49,659
this is<font color="#E5E5E5"> not really a good idea because</font>

99
00:04:47,110 --> 00:04:51,490
that<font color="#E5E5E5"> there is a really nice also blog</font>

100
00:04:49,660 --> 00:04:54,370
post like how to actually abuse<font color="#E5E5E5"> this</font>

101
00:04:51,490 --> 00:04:55,870
ISM<font color="#E5E5E5"> how to reuse pieces of chunks of</font>

102
00:04:54,370 --> 00:04:59,319
code<font color="#CCCCCC"> that already</font><font color="#E5E5E5"> exist in bootloader</font>

103
00:04:55,870 --> 00:05:01,870
<font color="#E5E5E5">and then use</font><font color="#CCCCCC"> that space in the in the</font>

104
00:04:59,319 --> 00:05:04,000
firmware to actually just map<font color="#E5E5E5"> that just</font>

105
00:05:01,870 --> 00:05:05,020
just jump to these<font color="#E5E5E5"> functions once once</font>

106
00:05:04,000 --> 00:05:08,349
they are needed<font color="#E5E5E5"> and once you have to</font>

107
00:05:05,020 --> 00:05:11,080
send that<font color="#CCCCCC"> data to to the</font><font color="#E5E5E5"> microcontroller</font>

108
00:05:08,349 --> 00:05:12,849
it is verifying that<font color="#E5E5E5"> so it verifies it</font>

109
00:05:11,080 --> 00:05:14,758
says like yep this firmware looks fine

110
00:05:12,849 --> 00:05:21,090
<font color="#CCCCCC">but on the other hand</font><font color="#E5E5E5"> that primer does</font>

111
00:05:14,759 --> 00:05:23,740
something malicious so to sum it up

112
00:05:21,090 --> 00:05:26,229
<font color="#E5E5E5">these wallets like</font><font color="#CCCCCC"> preser and it's</font>

113
00:05:23,740 --> 00:05:28,330
called<font color="#E5E5E5"> keep key they use</font><font color="#CCCCCC"> insecure</font>

114
00:05:26,229 --> 00:05:30,400
microcontroller<font color="#CCCCCC"> it doesn't have I mean</font>

115
00:05:28,330 --> 00:05:33,969
in<font color="#CCCCCC"> security I would say my current</font>

116
00:05:30,400 --> 00:05:37,448
project<font color="#E5E5E5"> is not meant to be used for for</font>

117
00:05:33,970 --> 00:05:40,449
secure<font color="#CCCCCC"> devices</font><font color="#E5E5E5"> and it doesn't contain</font>

118
00:05:37,449 --> 00:05:42,159
any hardware acceleration for for any of

119
00:05:40,449 --> 00:05:44,819
the operations<font color="#CCCCCC"> that we</font><font color="#E5E5E5"> that we need for</font>

120
00:05:42,159 --> 00:05:49,380
signing Bitcoin transactions such as

121
00:05:44,819 --> 00:05:51,639
<font color="#E5E5E5">sha-256 or to random number generator or</font>

122
00:05:49,380 --> 00:05:53,770
<font color="#E5E5E5">really particularly does doesn't support</font>

123
00:05:51,639 --> 00:05:55,719
operations on the elliptic curve<font color="#E5E5E5"> that is</font>

124
00:05:53,770 --> 00:05:58,539
needed for less is required for for

125
00:05:55,719 --> 00:05:59,740
signing<font color="#E5E5E5"> that is used in Bitcoin and but</font>

126
00:05:58,539 --> 00:06:02,320
it's open<font color="#CCCCCC"> source it's</font><font color="#E5E5E5"> completely open</font>

127
00:05:59,740 --> 00:06:07,539
<font color="#E5E5E5">source the the micro doesn't require any</font>

128
00:06:02,320 --> 00:06:10,150
NDA<font color="#CCCCCC"> so legit on the other hand</font><font color="#E5E5E5"> it's</font>

129
00:06:07,539 --> 00:06:12,360
secure microcontroller definitely has

130
00:06:10,150 --> 00:06:15,099
<font color="#E5E5E5">two random number generator definitely</font>

131
00:06:12,360 --> 00:06:19,659
<font color="#E5E5E5">contains the the accelerate hardware</font>

132
00:06:15,099 --> 00:06:22,120
acceleration for<font color="#CCCCCC"> first SEC</font><font color="#E5E5E5"> P 256 K</font><font color="#CCCCCC"> 1</font>

133
00:06:19,659 --> 00:06:24,580
elliptic curve<font color="#E5E5E5"> but it cannot be fully</font>

134
00:06:22,120 --> 00:06:27,520
open<font color="#CCCCCC"> source because</font><font color="#E5E5E5"> this this part is</font>

135
00:06:24,580 --> 00:06:30,330
under<font color="#E5E5E5"> an NDA and we can we can we cannot</font>

136
00:06:27,520 --> 00:06:33,099
see what's what's<font color="#CCCCCC"> happening there</font>

137
00:06:30,330 --> 00:06:34,750
<font color="#CCCCCC">there's</font><font color="#E5E5E5"> also another way of designing</font>

138
00:06:33,099 --> 00:06:38,020
<font color="#E5E5E5">these wallets like with secure element</font>

139
00:06:34,750 --> 00:06:38,500
<font color="#E5E5E5">and like like</font><font color="#CCCCCC"> there's a cold car for</font>

140
00:06:38,020 --> 00:06:40,299
example

141
00:06:38,500 --> 00:06:43,780
but unfortunately the secure element

142
00:06:40,300 --> 00:06:45,819
even<font color="#CCCCCC"> though it's it is called</font><font color="#E5E5E5"> a Tec see</font>

143
00:06:43,780 --> 00:06:47,710
it supports elliptic curve operations

144
00:06:45,819 --> 00:06:49,270
but not for the elliptic curve that we

145
00:06:47,710 --> 00:06:52,030
would need<font color="#CCCCCC"> for</font><font color="#E5E5E5"> successful signing</font>

146
00:06:49,270 --> 00:06:54,639
<font color="#E5E5E5">Bitcoin transactions but it is it can be</font>

147
00:06:52,030 --> 00:06:57,638
fully open sourced<font color="#E5E5E5"> and finally the</font>

148
00:06:54,639 --> 00:07:00,310
design that I would propose would be to

149
00:06:57,639 --> 00:07:00,909
<font color="#CCCCCC">actually to move the oh</font><font color="#E5E5E5"> let's</font><font color="#CCCCCC"> - to</font>

150
00:07:00,310 --> 00:07:03,190
another

151
00:07:00,909 --> 00:07:05,080
microcontroller<font color="#CCCCCC"> that is gonna</font><font color="#E5E5E5"> be more</font>

152
00:07:03,190 --> 00:07:06,490
secure<font color="#E5E5E5"> while trying to find</font>

153
00:07:05,080 --> 00:07:09,068
the most secure microcontroller<font color="#CCCCCC"> that</font>

154
00:07:06,490 --> 00:07:10,689
doesn't require an MBA and<font color="#CCCCCC"> then putting</font>

155
00:07:09,069 --> 00:07:13,500
one communication microcontroller that

156
00:07:10,689 --> 00:07:17,080
<font color="#E5E5E5">will do all the heavy lifting towards</font>

157
00:07:13,500 --> 00:07:20,110
computers or your phone<font color="#E5E5E5"> or for example</font>

158
00:07:17,080 --> 00:07:23,229
<font color="#CCCCCC">depending on which</font><font color="#E5E5E5"> communication channel</font>

159
00:07:20,110 --> 00:07:25,780
is<font color="#E5E5E5"> used later later on to the left so</font>

160
00:07:23,229 --> 00:07:27,659
<font color="#CCCCCC">and I found</font><font color="#E5E5E5"> two microcontrollers</font>

161
00:07:25,780 --> 00:07:31,929
<font color="#E5E5E5">actually one family of</font><font color="#CCCCCC"> micron force</font>

162
00:07:27,659 --> 00:07:36,789
these K 82<font color="#E5E5E5"> and k</font><font color="#CCCCCC"> l 82 so the difference</font>

163
00:07:31,930 --> 00:07:40,509
is that<font color="#CCCCCC"> k LT</font><font color="#E5E5E5"> KL l 82 is just cortex</font><font color="#CCCCCC"> M 0</font>

164
00:07:36,789 --> 00:07:42,190
and<font color="#E5E5E5"> K ay T 2 is cortex m4 so it's like</font>

165
00:07:40,509 --> 00:07:44,319
<font color="#CCCCCC">price</font><font color="#E5E5E5"> and performance difference but</font>

166
00:07:42,190 --> 00:07:47,949
apart from that<font color="#E5E5E5"> they support all</font><font color="#CCCCCC"> of</font>

167
00:07:44,319 --> 00:07:49,509
these<font color="#E5E5E5"> they</font><font color="#CCCCCC"> have acceleration unit</font><font color="#E5E5E5"> that</font>

168
00:07:47,949 --> 00:07:51,490
supports<font color="#CCCCCC"> all of these operations that we</font>

169
00:07:49,509 --> 00:07:54,219
would need for successfully signing

170
00:07:51,490 --> 00:07:55,629
<font color="#CCCCCC">Bitcoin transactions and thus it can be</font>

171
00:07:54,219 --> 00:07:59,430
fully open source<font color="#E5E5E5"> because it doesn't</font>

172
00:07:55,629 --> 00:08:03,580
<font color="#E5E5E5">require an NDA library dependence is in</font>

173
00:07:59,430 --> 00:08:06,729
major wallets<font color="#E5E5E5"> well at least</font><font color="#CCCCCC"> resident</font>

174
00:08:03,580 --> 00:08:10,180
ledger they don't share any code base<font color="#E5E5E5"> as</font>

175
00:08:06,729 --> 00:08:11,710
<font color="#CCCCCC">far as I know</font><font color="#E5E5E5"> so I checked their</font>

176
00:08:10,180 --> 00:08:13,810
repositories and<font color="#E5E5E5"> they couldn't find any</font>

177
00:08:11,710 --> 00:08:15,878
overlapping in there<font color="#E5E5E5"> even</font><font color="#CCCCCC"> though they</font>

178
00:08:13,810 --> 00:08:17,229
<font color="#CCCCCC">did they are based</font><font color="#E5E5E5"> on the same</font><font color="#CCCCCC"> hardware</font>

179
00:08:15,879 --> 00:08:20,669
similar hardware<font color="#CCCCCC"> platforms so same</font>

180
00:08:17,229 --> 00:08:24,310
microcontroller family<font color="#CCCCCC"> but they also</font>

181
00:08:20,669 --> 00:08:26,349
rent<font color="#E5E5E5"> a lot of code from from third</font>

182
00:08:24,310 --> 00:08:27,879
<font color="#CCCCCC">parties so not not written by by the</font>

183
00:08:26,349 --> 00:08:29,589
<font color="#CCCCCC">code that</font><font color="#E5E5E5"> is not</font><font color="#CCCCCC"> written by</font>

184
00:08:27,879 --> 00:08:31,659
manufacturers which of course makes

185
00:08:29,589 --> 00:08:34,269
sense<font color="#CCCCCC"> for some cryptography operations</font>

186
00:08:31,659 --> 00:08:36,269
because there is a rule that says like

187
00:08:34,269 --> 00:08:41,078
<font color="#CCCCCC">you should never roll your own crypto</font>

188
00:08:36,269 --> 00:08:43,479
and keep<font color="#E5E5E5"> key as a as a kind of clone of</font>

189
00:08:41,078 --> 00:08:45,790
<font color="#E5E5E5">preser just relies on the majority</font><font color="#CCCCCC"> of</font>

190
00:08:43,479 --> 00:08:48,550
code for<font color="#E5E5E5"> it and it has its own</font>

191
00:08:45,790 --> 00:08:52,180
bootloader<font color="#CCCCCC"> and firmer</font><font color="#E5E5E5"> and cold car it</font>

192
00:08:48,550 --> 00:08:56,439
uses<font color="#CCCCCC"> micro Python and we will see</font><font color="#E5E5E5"> later</font>

193
00:08:52,180 --> 00:08:59,410
why it's so cool what why is it<font color="#E5E5E5"> bad when</font>

194
00:08:56,440 --> 00:09:01,720
it comes to<font color="#CCCCCC"> code analysis and but</font><font color="#E5E5E5"> at</font>

195
00:08:59,410 --> 00:09:03,279
least<font color="#E5E5E5"> these all these three devices to</font>

196
00:09:01,720 --> 00:09:05,410
the left are completely<font color="#CCCCCC"> open sources</font>

197
00:09:03,279 --> 00:09:09,089
<font color="#CCCCCC">where we</font><font color="#E5E5E5"> are able</font><font color="#CCCCCC"> to actually</font><font color="#E5E5E5"> see what</font>

198
00:09:05,410 --> 00:09:12,189
what what's<font color="#CCCCCC"> running under the</font><font color="#E5E5E5"> hood so</font>

199
00:09:09,089 --> 00:09:13,329
<font color="#CCCCCC">now I know you might think I'm running</font>

200
00:09:12,190 --> 00:09:14,860
<font color="#E5E5E5">I'm making my own</font>

201
00:09:13,329 --> 00:09:17,709
harder wallet and I'm<font color="#E5E5E5"> rolling my</font><font color="#CCCCCC"> own</font>

202
00:09:14,860 --> 00:09:19,120
crypto so I'm well

203
00:09:17,710 --> 00:09:23,410
since<font color="#E5E5E5"> I'm</font><font color="#CCCCCC"> using hardware acceleration</font>

204
00:09:19,120 --> 00:09:25,480
for for all<font color="#E5E5E5"> of it</font><font color="#CCCCCC"> I would like</font><font color="#E5E5E5"> to say</font>

205
00:09:23,410 --> 00:09:26,740
that I'm kind of interfacing just with

206
00:09:25,480 --> 00:09:29,950
these<font color="#CCCCCC"> hardware peripherals so I'm not</font>

207
00:09:26,740 --> 00:09:32,050
<font color="#E5E5E5">implement implementing all the</font><font color="#CCCCCC"> hard</font>

208
00:09:29,950 --> 00:09:33,820
operations I'm just interfacing with

209
00:09:32,050 --> 00:09:37,329
peripherals inside the microcontroller

210
00:09:33,820 --> 00:09:38,920
so if there is<font color="#E5E5E5"> something wrong with with</font>

211
00:09:37,330 --> 00:09:40,900
implement the hardware<font color="#CCCCCC"> implementation of</font>

212
00:09:38,920 --> 00:09:46,189
<font color="#E5E5E5">these operations there is nothing I can</font>

213
00:09:40,900 --> 00:09:47,370
<font color="#CCCCCC">do</font><font color="#E5E5E5"> but at least I would I pride so</font>

214
00:09:46,190 --> 00:09:51,910
[Music]

215
00:09:47,370 --> 00:09:54,010
comparing the code size<font color="#CCCCCC"> I was just going</font>

216
00:09:51,910 --> 00:09:56,380
through<font color="#E5E5E5"> these repositories</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> just</font>

217
00:09:54,010 --> 00:09:59,590
getting all<font color="#CCCCCC"> the sub modules in</font><font color="#E5E5E5"> then they</font>

218
00:09:56,380 --> 00:10:01,510
depend on and trying to<font color="#CCCCCC"> see on how many</font>

219
00:09:59,590 --> 00:10:03,520
lines of code they depend and how hard

220
00:10:01,510 --> 00:10:07,360
<font color="#E5E5E5">would it be to actually analyze the</font><font color="#CCCCCC"> code</font>

221
00:10:03,520 --> 00:10:09,310
for vulnerabilities so cold<font color="#E5E5E5"> car as I</font>

222
00:10:07,360 --> 00:10:11,170
said it uses micro Python so it's it's

223
00:10:09,310 --> 00:10:14,670
like 2.5 million lines of code it's

224
00:10:11,170 --> 00:10:18,520
almost impossible to to manually analyze

225
00:10:14,670 --> 00:10:20,439
<font color="#CCCCCC">on the other hand</font><font color="#E5E5E5"> ledger has over 340</font>

226
00:10:18,520 --> 00:10:23,920
thousand lines of<font color="#CCCCCC"> code that are that</font>

227
00:10:20,440 --> 00:10:25,720
just<font color="#E5E5E5"> the</font><font color="#CCCCCC"> open source source part</font><font color="#E5E5E5"> and the</font>

228
00:10:23,920 --> 00:10:29,229
<font color="#CCCCCC">present keep key</font><font color="#E5E5E5"> they have around the</font>

229
00:10:25,720 --> 00:10:32,410
same<font color="#E5E5E5"> 800</font><font color="#CCCCCC"> 632 okay and my implementation</font>

230
00:10:29,230 --> 00:10:34,390
was squeezed only into four thousand

231
00:10:32,410 --> 00:10:37,030
lines of code because<font color="#E5E5E5"> I had one summer</font><font color="#CCCCCC"> -</font>

232
00:10:34,390 --> 00:10:38,470
this was my like summer project and I

233
00:10:37,030 --> 00:10:41,079
didn't want to<font color="#E5E5E5"> invest much time into</font>

234
00:10:38,470 --> 00:10:42,640
into writing<font color="#E5E5E5"> this code I just</font><font color="#CCCCCC"> wanted to</font>

235
00:10:41,080 --> 00:10:46,000
make a proof<font color="#E5E5E5"> of concept</font><font color="#CCCCCC"> to make</font><font color="#E5E5E5"> it to</font>

236
00:10:42,640 --> 00:10:48,090
prove<font color="#E5E5E5"> it it the the architecture</font><font color="#CCCCCC"> and if</font>

237
00:10:46,000 --> 00:10:51,640
these<font color="#E5E5E5"> wallets can be made simpler and</font>

238
00:10:48,090 --> 00:10:55,120
and in theory more more secure than they

239
00:10:51,640 --> 00:10:56,860
are at the<font color="#CCCCCC"> moment so on the other hand</font>

240
00:10:55,120 --> 00:11:02,290
it's it's a bit of an unfair comparison

241
00:10:56,860 --> 00:11:04,210
because I used<font color="#E5E5E5"> I only I</font><font color="#CCCCCC"> only implemented</font>

242
00:11:02,290 --> 00:11:05,469
Bitcoin wallet whereas these other

243
00:11:04,210 --> 00:11:07,180
wallets implement also other

244
00:11:05,470 --> 00:11:08,620
cryptocurrencies<font color="#CCCCCC"> but even if you</font>

245
00:11:07,180 --> 00:11:09,880
multiply<font color="#CCCCCC"> it with</font><font color="#E5E5E5"> it</font><font color="#CCCCCC"> with a</font><font color="#E5E5E5"> number of</font>

246
00:11:08,620 --> 00:11:12,250
cryptocurrencies that are offered by<font color="#E5E5E5"> it</font>

247
00:11:09,880 --> 00:11:15,100
by other wallets it's still hardly gonna

248
00:11:12,250 --> 00:11:18,820
reach<font color="#E5E5E5"> the lines of code that that are</font>

249
00:11:15,100 --> 00:11:21,850
present<font color="#E5E5E5"> in others so and out of these</font>

250
00:11:18,820 --> 00:11:25,690
lines<font color="#E5E5E5"> of</font><font color="#CCCCCC"> code</font><font color="#E5E5E5"> most of it is</font><font color="#CCCCCC"> just</font><font color="#E5E5E5"> license</font>

251
00:11:21,850 --> 00:11:28,900
headers and the font for for the display

252
00:11:25,690 --> 00:11:31,750
so<font color="#E5E5E5"> nearly half of it around half of it</font>

253
00:11:28,900 --> 00:11:35,530
is that the<font color="#CCCCCC"> meet like</font><font color="#E5E5E5"> that</font>

254
00:11:31,750 --> 00:11:37,120
the code<font color="#E5E5E5"> that can</font><font color="#CCCCCC"> be analyzed so that</font>

255
00:11:35,530 --> 00:11:39,640
<font color="#E5E5E5">makes it really like two thousand lines</font>

256
00:11:37,120 --> 00:11:43,840
of code<font color="#E5E5E5"> can</font><font color="#CCCCCC"> be analyzed let's say within</font>

257
00:11:39,640 --> 00:11:45,340
<font color="#E5E5E5">a week in details</font><font color="#CCCCCC"> - - to make it like at</font>

258
00:11:43,840 --> 00:11:48,820
least<font color="#E5E5E5"> from the software perspective bug</font>

259
00:11:45,340 --> 00:11:50,980
<font color="#E5E5E5">free</font><font color="#CCCCCC"> and how the code looks like</font><font color="#E5E5E5"> I</font>

260
00:11:48,820 --> 00:11:53,890
publish this code a couple of<font color="#E5E5E5"> months</font><font color="#CCCCCC"> ago</font>

261
00:11:50,980 --> 00:11:59,200
on it lab so on the first layer there

262
00:11:53,890 --> 00:12:01,360
there are basic drivers for<font color="#CCCCCC"> for basic</font>

263
00:11:59,200 --> 00:12:06,310
communication peripherals and for

264
00:12:01,360 --> 00:12:08,320
calculate<font color="#CCCCCC"> for calculations or for</font>

265
00:12:06,310 --> 00:12:11,890
signing<font color="#E5E5E5"> Bitcoin operations Bitcoin</font>

266
00:12:08,320 --> 00:12:13,960
transactions so I tried in<font color="#E5E5E5"> order to keep</font>

267
00:12:11,890 --> 00:12:18,430
the code base really<font color="#E5E5E5"> low</font>

268
00:12:13,960 --> 00:12:21,610
I actually fixed the the speed

269
00:12:18,430 --> 00:12:25,030
communication speed for for the UART bus

270
00:12:21,610 --> 00:12:29,700
and for<font color="#E5E5E5"> for SPI bus so</font><font color="#CCCCCC"> you</font><font color="#E5E5E5"> are T's I'm</font>

271
00:12:25,030 --> 00:12:31,569
using really<font color="#E5E5E5"> tiny implementation just to</font>

272
00:12:29,700 --> 00:12:33,760
<font color="#CCCCCC">communicate with a communication</font>

273
00:12:31,570 --> 00:12:35,230
<font color="#E5E5E5">microcontroller</font><font color="#CCCCCC"> that then does</font><font color="#E5E5E5"> all the</font>

274
00:12:33,760 --> 00:12:37,380
as I said like<font color="#E5E5E5"> all the heavy</font><font color="#CCCCCC"> lifting</font>

275
00:12:35,230 --> 00:12:41,110
that<font color="#E5E5E5"> can communicate why I'm even like</font>

276
00:12:37,380 --> 00:12:44,230
Wi-Fi or Bluetooth or whatever<font color="#CCCCCC"> -</font><font color="#E5E5E5"> to the</font>

277
00:12:41,110 --> 00:12:45,940
rest of the world<font color="#E5E5E5"> and it's kind of like</font>

278
00:12:44,230 --> 00:12:50,380
<font color="#E5E5E5">closing the door closing the door</font>

279
00:12:45,940 --> 00:12:52,120
<font color="#CCCCCC">causing the possible</font><font color="#E5E5E5"> space for like</font>

280
00:12:50,380 --> 00:12:54,189
<font color="#E5E5E5">deposit the</font><font color="#CCCCCC"> attacks servers for for</font>

281
00:12:52,120 --> 00:12:55,990
someone<font color="#E5E5E5"> to remotely steal</font>

282
00:12:54,190 --> 00:12:59,290
cryptocurrencies from from how their

283
00:12:55,990 --> 00:13:01,870
wallets<font color="#E5E5E5"> and the other part that</font><font color="#CCCCCC"> is</font>

284
00:12:59,290 --> 00:13:05,140
responsible<font color="#E5E5E5"> for assigning transactions</font>

285
00:13:01,870 --> 00:13:08,230
is also mostly implemented<font color="#E5E5E5"> in</font><font color="#CCCCCC"> hardware</font>

286
00:13:05,140 --> 00:13:09,819
so code bases is kept low<font color="#E5E5E5"> so there is</font>

287
00:13:08,230 --> 00:13:13,030
this module the RTC module is

288
00:13:09,820 --> 00:13:18,550
responsible for cryptography<font color="#E5E5E5"> operations</font>

289
00:13:13,030 --> 00:13:20,980
and<font color="#E5E5E5"> MMC au is used for calculating</font><font color="#CCCCCC"> the</font>

290
00:13:18,550 --> 00:13:23,920
hash function<font color="#E5E5E5"> and I just get the norms</font>

291
00:13:20,980 --> 00:13:25,780
from from<font color="#CCCCCC"> - random number generator and</font>

292
00:13:23,920 --> 00:13:28,449
in case<font color="#CCCCCC"> of the the cortex and zero</font>

293
00:13:25,780 --> 00:13:32,140
version I actually don't<font color="#E5E5E5"> it doesn't</font><font color="#CCCCCC"> have</font>

294
00:13:28,450 --> 00:13:34,450
<font color="#E5E5E5">the MMC au and it's the the hashing is</font>

295
00:13:32,140 --> 00:13:37,000
implemented in<font color="#CCCCCC"> LTC so the code</font><font color="#E5E5E5"> base is</font>

296
00:13:34,450 --> 00:13:39,550
<font color="#E5E5E5">even smaller in</font><font color="#CCCCCC"> that case and that's</font>

297
00:13:37,000 --> 00:13:42,760
easier easier to analyze<font color="#E5E5E5"> and you know</font><font color="#CCCCCC"> to</font>

298
00:13:39,550 --> 00:13:45,430
see I have these five basic operations

299
00:13:42,760 --> 00:13:48,960
<font color="#CCCCCC">that I use for</font><font color="#E5E5E5"> per</font>

300
00:13:45,430 --> 00:13:53,380
<font color="#CCCCCC">these transactions</font><font color="#E5E5E5"> so they are basically</font>

301
00:13:48,960 --> 00:13:57,180
<font color="#E5E5E5">multiple calculating that the remainder</font>

302
00:13:53,380 --> 00:13:59,740
and<font color="#CCCCCC"> modulo operations for inverse</font>

303
00:13:57,180 --> 00:14:01,959
<font color="#CCCCCC">conversion for addition for</font>

304
00:13:59,740 --> 00:14:03,490
multiplication<font color="#E5E5E5"> and also for multiple</font>

305
00:14:01,960 --> 00:14:08,320
multiplying the the point on the

306
00:14:03,490 --> 00:14:10,600
<font color="#E5E5E5">elliptic curve</font><font color="#CCCCCC"> and on the second layer I</font>

307
00:14:08,320 --> 00:14:12,760
just try<font color="#CCCCCC"> to implement</font><font color="#E5E5E5"> this really really</font>

308
00:14:10,600 --> 00:14:15,730
thin layer<font color="#E5E5E5"> of like sending and receiving</font>

309
00:14:12,760 --> 00:14:20,430
<font color="#E5E5E5">higher level packets</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> have</font><font color="#CCCCCC"> like type</font>

310
00:14:15,730 --> 00:14:26,740
length<font color="#E5E5E5"> and and</font><font color="#CCCCCC"> data and that</font><font color="#E5E5E5"> are kind of</font>

311
00:14:20,430 --> 00:14:29,949
like I<font color="#E5E5E5"> do</font><font color="#CCCCCC"> crc just do to do</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> to be</font>

312
00:14:26,740 --> 00:14:32,050
sure that let's add some robustness on

313
00:14:29,950 --> 00:14:36,790
<font color="#E5E5E5">the bus because it's</font><font color="#CCCCCC"> really</font><font color="#E5E5E5"> simple</font><font color="#CCCCCC"> you</font>

314
00:14:32,050 --> 00:14:39,430
<font color="#CCCCCC">are communication and all that code just</font>

315
00:14:36,790 --> 00:14:41,709
can can write any any row<font color="#E5E5E5"> on the display</font>

316
00:14:39,430 --> 00:14:44,430
or clear it so it kept really<font color="#E5E5E5"> simple</font>

317
00:14:41,710 --> 00:14:49,360
without<font color="#E5E5E5"> blowing and images or whatever</font>

318
00:14:44,430 --> 00:14:51,910
<font color="#E5E5E5">and</font><font color="#CCCCCC"> the critical part is</font><font color="#E5E5E5"> also offering</font>

319
00:14:49,360 --> 00:14:57,070
these functionalities that one might

320
00:14:51,910 --> 00:14:59,500
need to<font color="#CCCCCC"> design</font><font color="#E5E5E5"> Bitcoin transactions</font><font color="#CCCCCC"> well</font>

321
00:14:57,070 --> 00:15:01,840
there is one<font color="#E5E5E5"> operation that wasn't</font>

322
00:14:59,500 --> 00:15:04,180
implemented in<font color="#CCCCCC"> hardware completely so I</font>

323
00:15:01,840 --> 00:15:05,910
kind of had<font color="#CCCCCC"> to</font><font color="#E5E5E5"> that's kind of the most</font>

324
00:15:04,180 --> 00:15:09,089
complex<font color="#E5E5E5"> part that I had to do by hand</font>

325
00:15:05,910 --> 00:15:11,980
<font color="#CCCCCC">was this it was a division operation</font><font color="#E5E5E5"> so</font>

326
00:15:09,090 --> 00:15:14,290
the way I implemented<font color="#E5E5E5"> it was that I had</font>

327
00:15:11,980 --> 00:15:18,370
<font color="#CCCCCC">as I showed you there</font><font color="#E5E5E5"> is a modular</font>

328
00:15:14,290 --> 00:15:21,459
inverse operation and multiplicative

329
00:15:18,370 --> 00:15:25,600
inverse modulo operation so then first<font color="#E5E5E5"> I</font>

330
00:15:21,460 --> 00:15:29,980
get I count<font color="#E5E5E5"> to calculate that then I</font>

331
00:15:25,600 --> 00:15:32,920
deduct the the remainder from from the

332
00:15:29,980 --> 00:15:35,770
division<font color="#E5E5E5"> of a</font><font color="#CCCCCC"> will be and then in order</font>

333
00:15:32,920 --> 00:15:37,870
<font color="#E5E5E5">to get to get the result I just multiply</font>

334
00:15:35,770 --> 00:15:41,470
these<font color="#CCCCCC"> two numbers</font><font color="#E5E5E5"> but in order</font><font color="#CCCCCC"> for this</font>

335
00:15:37,870 --> 00:15:45,490
to<font color="#CCCCCC"> work this number n has to be a</font><font color="#E5E5E5"> really</font>

336
00:15:41,470 --> 00:15:47,230
large prime number<font color="#CCCCCC"> because only the only</font>

337
00:15:45,490 --> 00:15:50,230
in that case we<font color="#CCCCCC"> can't guarantee</font><font color="#E5E5E5"> that for</font>

338
00:15:47,230 --> 00:15:54,370
any a or<font color="#CCCCCC"> B we</font><font color="#E5E5E5"> can find a multiplicative</font>

339
00:15:50,230 --> 00:15:56,650
model inverse for like this is the first

340
00:15:54,370 --> 00:15:58,180
<font color="#E5E5E5">operation over there in other cases we</font>

341
00:15:56,650 --> 00:15:58,930
cannot guarantee<font color="#CCCCCC"> that this number exists</font>

342
00:15:58,180 --> 00:16:01,029
so

343
00:15:58,930 --> 00:16:02,949
in order to<font color="#E5E5E5"> find so I was I was thinking</font>

344
00:16:01,029 --> 00:16:05,550
<font color="#CCCCCC">like okay what which number can it be</font>

345
00:16:02,949 --> 00:16:08,680
and then I felt like<font color="#E5E5E5"> yeah wait I have</font><font color="#CCCCCC"> to</font>

346
00:16:05,550 --> 00:16:10,660
<font color="#E5E5E5">256-bit number that is prime and huge</font>

347
00:16:08,680 --> 00:16:16,118
that is P<font color="#E5E5E5"> from the from the elliptic</font>

348
00:16:10,660 --> 00:16:20,439
curve<font color="#E5E5E5"> that is used for for bitcoins</font><font color="#CCCCCC"> and</font>

349
00:16:16,119 --> 00:16:23,110
on the<font color="#CCCCCC"> final</font><font color="#E5E5E5"> layer in the main loop</font><font color="#CCCCCC"> I</font>

350
00:16:20,439 --> 00:16:24,998
just have I<font color="#E5E5E5"> just received the packet you</font>

351
00:16:23,110 --> 00:16:26,920
<font color="#CCCCCC">know in a loop it's it's a stupid state</font>

352
00:16:24,999 --> 00:16:28,899
machine<font color="#CCCCCC"> so it doesn't have</font><font color="#E5E5E5"> any</font>

353
00:16:26,920 --> 00:16:32,378
interrupts it doesn't have any handlers

354
00:16:28,899 --> 00:16:35,379
it's just once it starts it<font color="#E5E5E5"> has multiple</font>

355
00:16:32,379 --> 00:16:37,029
states that it can be in like waiting

356
00:16:35,379 --> 00:16:41,199
for<font color="#CCCCCC"> the packet and processing the packet</font>

357
00:16:37,029 --> 00:16:43,300
and just yeah or<font color="#CCCCCC"> just calculating</font>

358
00:16:41,199 --> 00:16:46,269
something<font color="#E5E5E5"> so it's a waiting for some</font>

359
00:16:43,300 --> 00:16:50,949
hardware peripheral to respond<font color="#CCCCCC"> so really</font>

360
00:16:46,269 --> 00:16:51,879
<font color="#E5E5E5">simple operations and after I receive a</font>

361
00:16:50,949 --> 00:16:55,540
packet of course

362
00:16:51,879 --> 00:16:58,029
<font color="#CCCCCC">why are you</font><font color="#E5E5E5"> are i transported to some of</font>

363
00:16:55,540 --> 00:17:01,389
the<font color="#CCCCCC"> modules depending on on the type</font>

364
00:16:58,029 --> 00:17:03,970
field<font color="#E5E5E5"> in the message that I showed in</font>

365
00:17:01,389 --> 00:17:06,669
the unity in the packet and<font color="#CCCCCC"> then okay in</font>

366
00:17:03,970 --> 00:17:08,890
case it's for Bitcoin I just directed to

367
00:17:06,669 --> 00:17:11,260
the<font color="#E5E5E5"> Bitcoin process function and then</font>

368
00:17:08,890 --> 00:17:12,819
<font color="#E5E5E5">there in that function I actually see</font>

369
00:17:11,260 --> 00:17:14,319
what what kind of operation I<font color="#E5E5E5"> want to do</font>

370
00:17:12,819 --> 00:17:16,230
whether I want to initialize the

371
00:17:14,319 --> 00:17:19,418
<font color="#CCCCCC">transaction whether</font><font color="#E5E5E5"> I want to add some</font>

372
00:17:16,230 --> 00:17:24,699
inputs or to add some outputs or to

373
00:17:19,419 --> 00:17:26,709
<font color="#E5E5E5">actually ask the</font><font color="#CCCCCC"> the module to</font><font color="#E5E5E5"> to show</font>

374
00:17:24,699 --> 00:17:29,470
the user that I want to sign the

375
00:17:26,709 --> 00:17:30,909
<font color="#E5E5E5">transaction he wants to sign</font>

376
00:17:29,470 --> 00:17:33,220
<font color="#CCCCCC">intersection</font><font color="#E5E5E5"> so this is how it looks</font>

377
00:17:30,909 --> 00:17:36,549
<font color="#E5E5E5">like on the display once all beings and</font>

378
00:17:33,220 --> 00:17:40,990
outputs are sent so let's see how it

379
00:17:36,549 --> 00:17:43,270
looks<font color="#E5E5E5"> in reality</font><font color="#CCCCCC"> I have a little device</font>

380
00:17:40,990 --> 00:17:50,320
<font color="#E5E5E5">connected here the proof is the proof of</font>

381
00:17:43,270 --> 00:17:56,770
concept<font color="#CCCCCC"> and let's see so I don't know</font>

382
00:17:50,320 --> 00:17:58,480
maybe<font color="#CCCCCC"> to small but so I can get the the</font>

383
00:17:56,770 --> 00:18:00,250
key pair from from the device so it's

384
00:17:58,480 --> 00:18:01,779
it's<font color="#E5E5E5"> not meant to</font><font color="#CCCCCC"> be to be used</font><font color="#E5E5E5"> right</font>

385
00:18:00,250 --> 00:18:03,700
<font color="#CCCCCC">away</font><font color="#E5E5E5"> like</font><font color="#CCCCCC"> I don't don't store your</font>

386
00:18:01,779 --> 00:18:06,159
cryptocurrencies on this one it's still

387
00:18:03,700 --> 00:18:08,470
<font color="#E5E5E5">either</font><font color="#CCCCCC"> I don't trust it</font><font color="#E5E5E5"> 100% because</font>

388
00:18:06,159 --> 00:18:10,419
because even with this<font color="#CCCCCC"> release</font><font color="#E5E5E5"> function</font>

389
00:18:08,470 --> 00:18:11,500
you can still read out the<font color="#E5E5E5"> private key</font>

390
00:18:10,419 --> 00:18:12,790
<font color="#E5E5E5">and so but this is</font><font color="#CCCCCC"> just meant to be a</font>

391
00:18:11,500 --> 00:18:16,540
proof of concept

392
00:18:12,790 --> 00:18:19,720
so I can get my address<font color="#E5E5E5"> that I have on</font>

393
00:18:16,540 --> 00:18:21,670
this on this<font color="#E5E5E5"> device where I have some</font>

394
00:18:19,720 --> 00:18:26,650
<font color="#E5E5E5">some Bitcoin so let's say let's generate</font>

395
00:18:21,670 --> 00:18:29,140
a new transaction<font color="#E5E5E5"> because yeah bitcoins</font>

396
00:18:26,650 --> 00:18:31,540
were on sale recently<font color="#E5E5E5"> it was Black</font>

397
00:18:29,140 --> 00:18:35,590
Friday sale I guess so

398
00:18:31,540 --> 00:18:37,149
now I send inputs and outputs to device

399
00:18:35,590 --> 00:18:38,379
I have<font color="#CCCCCC"> a small prompt here I</font><font color="#E5E5E5"> don't know</font>

400
00:18:37,150 --> 00:18:39,430
<font color="#E5E5E5">like I guess you cannot see it from</font>

401
00:18:38,380 --> 00:18:41,560
there

402
00:18:39,430 --> 00:18:48,730
but I'm<font color="#CCCCCC"> just gonna confirm the</font>

403
00:18:41,560 --> 00:18:50,200
<font color="#E5E5E5">transaction</font><font color="#CCCCCC"> okay</font><font color="#E5E5E5"> and transaction is has</font>

404
00:18:48,730 --> 00:18:51,970
been<font color="#CCCCCC"> it</font><font color="#E5E5E5"> has been signed by the by the</font>

405
00:18:50,200 --> 00:18:56,260
wallet<font color="#E5E5E5"> and I can choose here to submit</font>

406
00:18:51,970 --> 00:18:58,540
<font color="#E5E5E5">the transaction</font><font color="#CCCCCC"> so transaction was</font>

407
00:18:56,260 --> 00:19:01,030
submitted successfully<font color="#CCCCCC"> let's see what it</font>

408
00:18:58,540 --> 00:19:03,970
says<font color="#CCCCCC"> okay</font>

409
00:19:01,030 --> 00:19:06,010
we see one unconfirmed transaction for

410
00:19:03,970 --> 00:19:08,350
for this address<font color="#E5E5E5"> that I used so this is</font>

411
00:19:06,010 --> 00:19:11,820
<font color="#E5E5E5">this proof</font><font color="#CCCCCC"> that this</font><font color="#E5E5E5"> wallet did in fact</font>

412
00:19:08,350 --> 00:19:24,459
sign<font color="#E5E5E5"> the</font><font color="#CCCCCC"> transaction</font><font color="#E5E5E5"> that that I just</font>

413
00:19:11,820 --> 00:19:28,090
sent to it<font color="#E5E5E5"> okay so to continue what's</font>

414
00:19:24,460 --> 00:19:29,680
next<font color="#E5E5E5"> so next steps would</font><font color="#CCCCCC"> be</font><font color="#E5E5E5"> proof</font>

415
00:19:28,090 --> 00:19:31,090
release code because it's like it's open

416
00:19:29,680 --> 00:19:33,040
for<font color="#CCCCCC"> everyone to use</font><font color="#E5E5E5"> it's open for</font>

417
00:19:31,090 --> 00:19:34,990
<font color="#E5E5E5">everyone</font><font color="#CCCCCC"> to actually to add</font>

418
00:19:33,040 --> 00:19:38,440
functionality<font color="#E5E5E5"> to it so it's not a</font>

419
00:19:34,990 --> 00:19:42,520
commercial<font color="#CCCCCC"> project</font><font color="#E5E5E5"> and one of the things</font>

420
00:19:38,440 --> 00:19:46,450
that I wanted<font color="#E5E5E5"> to to add first was the</font>

421
00:19:42,520 --> 00:19:49,540
the<font color="#CCCCCC"> u2f functionality</font><font color="#E5E5E5"> so that that would</font>

422
00:19:46,450 --> 00:19:51,460
require adding the school on<font color="#E5E5E5"> the</font>

423
00:19:49,540 --> 00:19:53,379
communication controller some

424
00:19:51,460 --> 00:19:56,470
functionalities that<font color="#E5E5E5"> are</font><font color="#CCCCCC"> certain it</font>

425
00:19:53,380 --> 00:19:59,560
complies with with the<font color="#CCCCCC"> C tap protocol</font>

426
00:19:56,470 --> 00:20:04,270
which is one<font color="#CCCCCC"> part one half of the this</font>

427
00:19:59,560 --> 00:20:05,919
<font color="#CCCCCC">502 project so the other the other part</font>

428
00:20:04,270 --> 00:20:07,270
is<font color="#E5E5E5"> web awesome that is used</font><font color="#CCCCCC"> for</font>

429
00:20:05,920 --> 00:20:09,400
<font color="#CCCCCC">communication between any of these</font>

430
00:20:07,270 --> 00:20:12,430
online<font color="#E5E5E5"> services</font><font color="#CCCCCC"> and</font><font color="#E5E5E5"> your computer or</font>

431
00:20:09,400 --> 00:20:16,330
phone or<font color="#E5E5E5"> whatever you use for for</font>

432
00:20:12,430 --> 00:20:17,710
accessing<font color="#E5E5E5"> these services or yeah as I</font>

433
00:20:16,330 --> 00:20:21,909
said<font color="#E5E5E5"> there is this communication</font>

434
00:20:17,710 --> 00:20:24,190
microcontroller<font color="#CCCCCC"> can talk or all other by</font>

435
00:20:21,910 --> 00:20:26,440
all other means<font color="#CCCCCC"> like not just</font><font color="#E5E5E5"> USB as I</font>

436
00:20:24,190 --> 00:20:28,179
showed this proof<font color="#E5E5E5"> of</font><font color="#CCCCCC"> concept</font>

437
00:20:26,440 --> 00:20:32,769
case it's a microcontroller little<font color="#CCCCCC"> also</font>

438
00:20:28,179 --> 00:20:39,039
supports USB NFC or<font color="#CCCCCC"> Bluetooth you</font><font color="#E5E5E5"> can</font>

439
00:20:32,769 --> 00:20:40,779
also<font color="#E5E5E5"> then use it for</font><font color="#CCCCCC"> more a more in a</font>

440
00:20:39,039 --> 00:20:43,090
more flexible manner so<font color="#CCCCCC"> you can use</font><font color="#E5E5E5"> it</font>

441
00:20:40,779 --> 00:20:45,100
with<font color="#CCCCCC"> your phone or</font><font color="#E5E5E5"> some other device and</font>

442
00:20:43,090 --> 00:20:47,019
<font color="#CCCCCC">there's also another version of</font><font color="#E5E5E5"> these</font>

443
00:20:45,100 --> 00:20:49,658
two<font color="#E5E5E5"> microcontrollers but that one</font>

444
00:20:47,019 --> 00:20:51,580
requires<font color="#E5E5E5"> an NDA</font><font color="#CCCCCC"> to be signed with</font><font color="#E5E5E5"> the</font>

445
00:20:49,659 --> 00:20:53,950
manufacturer<font color="#E5E5E5"> but these are</font><font color="#CCCCCC"> also like</font>

446
00:20:51,580 --> 00:20:58,240
them that they have some some<font color="#E5E5E5"> kind of</font>

447
00:20:53,950 --> 00:21:00,820
tamper protection around<font color="#E5E5E5"> the same core</font>

448
00:20:58,240 --> 00:21:02,740
<font color="#E5E5E5">and all other peripherals</font><font color="#CCCCCC"> that are used</font>

449
00:21:00,820 --> 00:21:05,168
in this project<font color="#E5E5E5"> so if you want to make</font>

450
00:21:02,740 --> 00:21:06,429
<font color="#E5E5E5">really</font><font color="#CCCCCC"> safe safer and robust device you</font>

451
00:21:05,169 --> 00:21:10,059
might want to consider<font color="#E5E5E5"> using one of</font>

452
00:21:06,429 --> 00:21:12,519
these<font color="#E5E5E5"> and yeah</font><font color="#CCCCCC"> I also had</font><font color="#E5E5E5"> plans to</font>

453
00:21:10,059 --> 00:21:14,470
implement recovery seed for this<font color="#E5E5E5"> to</font>

454
00:21:12,519 --> 00:21:16,929
implement actually these three<font color="#E5E5E5"> bitcoin</font>

455
00:21:14,470 --> 00:21:21,700
implementation proposals like big 32<font color="#CCCCCC"> or</font>

456
00:21:16,929 --> 00:21:24,009
<font color="#CCCCCC">3944 at some point and yeah</font><font color="#E5E5E5"> of course</font>

457
00:21:21,700 --> 00:21:26,889
more cryptocurrencies<font color="#CCCCCC"> but as</font><font color="#E5E5E5"> I said this</font>

458
00:21:24,009 --> 00:21:29,919
<font color="#CCCCCC">is just</font><font color="#E5E5E5"> my just my side project so feel</font>

459
00:21:26,889 --> 00:21:32,199
free to to send<font color="#CCCCCC"> poor requests for for</font>

460
00:21:29,919 --> 00:21:36,340
this<font color="#E5E5E5"> it's an</font><font color="#CCCCCC"> on the gift lab you saw the</font>

461
00:21:32,200 --> 00:21:38,769
<font color="#E5E5E5">the link</font><font color="#CCCCCC"> before</font><font color="#E5E5E5"> and yeah I'm looking</font>

462
00:21:36,340 --> 00:21:45,870
forward<font color="#CCCCCC"> to your pull requests any</font>

463
00:21:38,769 --> 00:21:49,259
questions no questions<font color="#CCCCCC"> okay</font>

464
00:21:45,870 --> 00:21:49,258
thank you very<font color="#CCCCCC"> much</font>

