1
00:00:24,540 --> 00:00:30,360
<font color="#E5E5E5">okay thank you everybody for</font><font color="#CCCCCC"> staying</font>

2
00:00:26,790 --> 00:00:33,089
<font color="#E5E5E5">until now has been a pleasure to see you</font>

3
00:00:30,360 --> 00:00:36,210
<font color="#CCCCCC">here and</font><font color="#E5E5E5"> also to be invited</font><font color="#CCCCCC"> here</font>

4
00:00:33,090 --> 00:00:40,410
speaking<font color="#CCCCCC"> comes</font><font color="#E5E5E5"> back in</font><font color="#CCCCCC"> hacking</font><font color="#E5E5E5"> box again</font>

5
00:00:36,210 --> 00:00:47,670
back in Dubai<font color="#CCCCCC"> so basically a few words</font>

6
00:00:40,410 --> 00:00:49,860
on<font color="#CCCCCC"> Who I am sorry mum</font><font color="#E5E5E5"> okay well</font><font color="#CCCCCC"> actually</font>

7
00:00:47,670 --> 00:00:53,670
work as a producer consultants and I

8
00:00:49,860 --> 00:00:56,699
mostly focus<font color="#E5E5E5"> on</font><font color="#CCCCCC"> TEI ot</font><font color="#E5E5E5"> own devices fault</font>

9
00:00:53,670 --> 00:00:59,449
injection hardware and this has been<font color="#E5E5E5"> my</font>

10
00:00:56,699 --> 00:01:01,290
research while the<font color="#E5E5E5"> mobile security</font>

11
00:00:59,449 --> 00:01:05,280
expedition access point

12
00:01:01,290 --> 00:01:08,550
<font color="#E5E5E5">I broke a bit Hospital</font><font color="#CCCCCC"> Rafi</font><font color="#E5E5E5"> D is an</font><font color="#CCCCCC"> IIT</font>

13
00:01:05,280 --> 00:01:11,420
<font color="#CCCCCC">and last one was</font><font color="#E5E5E5"> full</font><font color="#CCCCCC"> t injection and</font>

14
00:01:08,550 --> 00:01:19,259
religious class collision only<font color="#CCCCCC"> gnomes</font>

15
00:01:11,420 --> 00:01:21,600
<font color="#E5E5E5">okay let's go to yeah basically would</font>

16
00:01:19,260 --> 00:01:24,119
<font color="#CCCCCC">are being divided is</font><font color="#E5E5E5"> often we actually</font>

17
00:01:21,600 --> 00:01:26,940
<font color="#E5E5E5">buy a device and there is a brand</font>

18
00:01:24,119 --> 00:01:28,860
attached to it and we<font color="#E5E5E5"> think that test</font>

19
00:01:26,940 --> 00:01:30,179
<font color="#E5E5E5">vendor and that's the one that owns the</font>

20
00:01:28,860 --> 00:01:32,220
device or you might<font color="#E5E5E5"> even be</font><font color="#CCCCCC"> thinking</font>

21
00:01:30,180 --> 00:01:34,970
<font color="#CCCCCC">that you are the one owned in</font><font color="#E5E5E5"> the device</font>

22
00:01:32,220 --> 00:01:38,760
just<font color="#CCCCCC"> because you've bought it</font><font color="#E5E5E5"> at free</font>

23
00:01:34,970 --> 00:01:40,560
unfortunately<font color="#E5E5E5"> if you see that the number</font>

24
00:01:38,760 --> 00:01:43,440
<font color="#CCCCCC">of</font><font color="#E5E5E5"> components that come</font><font color="#CCCCCC"> from an air for</font>

25
00:01:40,560 --> 00:01:45,690
<font color="#E5E5E5">my iPhone</font><font color="#CCCCCC"> X well it's often believed</font>

26
00:01:43,440 --> 00:01:47,429
that<font color="#E5E5E5"> hub Apple does everything from</font>

27
00:01:45,690 --> 00:01:48,810
scratch well it does everything from

28
00:01:47,430 --> 00:01:52,200
<font color="#E5E5E5">scratch with the help of different</font>

29
00:01:48,810 --> 00:01:54,780
<font color="#E5E5E5">manufacturer for example the notable are</font>

30
00:01:52,200 --> 00:01:57,570
the<font color="#CCCCCC"> Broadcom chips</font><font color="#E5E5E5"> the baseman professor</font>

31
00:01:54,780 --> 00:02:02,880
is from Qualcomm and so on actually<font color="#E5E5E5"> what</font>

32
00:01:57,570 --> 00:02:06,330
can be seen<font color="#CCCCCC"> also from</font><font color="#E5E5E5"> I think</font><font color="#CCCCCC"> that's</font>

33
00:02:02,880 --> 00:02:08,848
something<font color="#E5E5E5"> wrong okay in the Apple</font>

34
00:02:06,330 --> 00:02:11,790
suppliers for 2018<font color="#CCCCCC"> are in total about</font>

35
00:02:08,848 --> 00:02:13,319
<font color="#CCCCCC">two hundred</font><font color="#E5E5E5"> so</font><font color="#CCCCCC"> in if you</font><font color="#E5E5E5"> get an iPhone X</font>

36
00:02:11,790 --> 00:02:15,299
you will<font color="#E5E5E5"> get components from at least</font>

37
00:02:13,319 --> 00:02:18,988
you<font color="#E5E5E5"> want</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> different suppliers in one</font>

38
00:02:15,300 --> 00:02:24,330
single<font color="#CCCCCC"> phone</font><font color="#E5E5E5"> so basically the the main</font>

39
00:02:18,989 --> 00:02:27,390
<font color="#E5E5E5">point is</font><font color="#CCCCCC"> that this statement is actually</font>

40
00:02:24,330 --> 00:02:30,420
wrong<font color="#CCCCCC"> because nobody actually really</font>

41
00:02:27,390 --> 00:02:32,250
owns the device nowadays there<font color="#CCCCCC"> is no way</font>

42
00:02:30,420 --> 00:02:34,230
that<font color="#CCCCCC"> you can attach the responsibility</font>

43
00:02:32,250 --> 00:02:37,769
<font color="#CCCCCC">of all the vulnerabilities on a device</font>

44
00:02:34,230 --> 00:02:38,310
<font color="#CCCCCC">only to one single party so this</font><font color="#E5E5E5"> is</font>

45
00:02:37,769 --> 00:02:40,650
<font color="#E5E5E5">already</font>

46
00:02:38,310 --> 00:02:42,540
understanding that<font color="#E5E5E5"> a device is not only</font>

47
00:02:40,650 --> 00:02:44,910
a device is just<font color="#E5E5E5"> an ecosystem effort</font>

48
00:02:42,540 --> 00:02:48,060
<font color="#E5E5E5">that gives you a product so at first you</font>

49
00:02:44,910 --> 00:02:49,859
have an IEP<font color="#CCCCCC"> let's say your arm arm does</font>

50
00:02:48,060 --> 00:02:52,530
not even manufacture<font color="#CCCCCC"> their chips</font><font color="#E5E5E5"> they</font>

51
00:02:49,860 --> 00:02:54,540
just sell the IP and you have got<font color="#E5E5E5"> web</font>

52
00:02:52,530 --> 00:02:55,920
<font color="#E5E5E5">design and also the</font><font color="#CCCCCC"> address you do</font>

53
00:02:54,540 --> 00:02:57,299
primitives which are established<font color="#CCCCCC"> over</font>

54
00:02:55,920 --> 00:03:00,059
there<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> about trust</font><font color="#E5E5E5"> zone for</font>

55
00:02:57,300 --> 00:03:01,890
example<font color="#CCCCCC"> okay but those are</font><font color="#E5E5E5"> IPs</font>

56
00:03:00,060 --> 00:03:03,480
they do not<font color="#E5E5E5"> exist until</font><font color="#CCCCCC"> you make a sock</font>

57
00:03:01,890 --> 00:03:06,208
<font color="#E5E5E5">a</font><font color="#CCCCCC"> system-on-chip</font>

58
00:03:03,480 --> 00:03:09,230
<font color="#E5E5E5">and so at that point the</font><font color="#CCCCCC"> IPS become</font>

59
00:03:06,209 --> 00:03:11,850
actually something embedded<font color="#E5E5E5"> in silicon</font>

60
00:03:09,230 --> 00:03:13,170
so you will have the<font color="#CCCCCC"> opposite features</font>

61
00:03:11,850 --> 00:03:15,600
at this point you<font color="#E5E5E5"> will</font><font color="#CCCCCC"> be establishing</font>

62
00:03:13,170 --> 00:03:18,958
<font color="#E5E5E5">the basic of</font><font color="#CCCCCC"> the trust zone</font><font color="#E5E5E5"> hardware a</font>

63
00:03:15,600 --> 00:03:21,269
security feature<font color="#E5E5E5"> you know the famous bit</font>

64
00:03:18,959 --> 00:03:23,819
and NS<font color="#E5E5E5"> bit and all</font><font color="#CCCCCC"> these things are</font>

65
00:03:21,269 --> 00:03:26,130
<font color="#E5E5E5">established at this level then at this</font>

66
00:03:23,819 --> 00:03:27,750
point<font color="#E5E5E5"> you will</font><font color="#CCCCCC"> have</font><font color="#E5E5E5"> that the</font><font color="#CCCCCC"> sock</font>

67
00:03:26,130 --> 00:03:30,930
manufacturer<font color="#E5E5E5"> would also integrate low</font>

68
00:03:27,750 --> 00:03:32,519
level<font color="#CCCCCC"> software</font><font color="#E5E5E5"> and low level parts of</font>

69
00:03:30,930 --> 00:03:36,299
<font color="#CCCCCC">third-party</font><font color="#E5E5E5"> component for example</font><font color="#CCCCCC"> this</font>

70
00:03:32,519 --> 00:03:38,370
is<font color="#CCCCCC"> the situation where your t software</font>

71
00:03:36,299 --> 00:03:40,110
your<font color="#CCCCCC"> TOS will be probably</font><font color="#E5E5E5"> integrated at</font>

72
00:03:38,370 --> 00:03:42,959
this point which might<font color="#E5E5E5"> come from a</font>

73
00:03:40,110 --> 00:03:44,430
different manufacturer as well<font color="#E5E5E5"> okay and</font>

74
00:03:42,959 --> 00:03:46,440
then at this<font color="#E5E5E5"> point you will go</font><font color="#CCCCCC"> to erm</font>

75
00:03:44,430 --> 00:03:48,750
<font color="#CCCCCC">and</font><font color="#E5E5E5"> we'll go to the</font><font color="#CCCCCC"> final products but</font>

76
00:03:46,440 --> 00:03:51,510
it<font color="#E5E5E5"> will be the final PCB design the PCB</font>

77
00:03:48,750 --> 00:03:53,700
does not exist<font color="#E5E5E5"> yet until you reach</font><font color="#CCCCCC"> this</font>

78
00:03:51,510 --> 00:03:56,010
stage at all<font color="#E5E5E5"> but you have</font><font color="#CCCCCC"> already</font>

79
00:03:53,700 --> 00:03:57,780
integrated in your<font color="#E5E5E5"> design quite a number</font>

80
00:03:56,010 --> 00:04:00,959
<font color="#CCCCCC">of</font><font color="#E5E5E5"> different products are from</font><font color="#CCCCCC"> different</font>

81
00:03:57,780 --> 00:04:03,030
manufacturers<font color="#CCCCCC"> and the point is</font><font color="#E5E5E5"> that each</font>

82
00:04:00,959 --> 00:04:05,819
<font color="#CCCCCC">component in the chain not only</font><font color="#E5E5E5"> Slayer</font>

83
00:04:03,030 --> 00:04:08,190
<font color="#E5E5E5">but</font><font color="#CCCCCC"> its component in the chain has its</font>

84
00:04:05,819 --> 00:04:10,858
own<font color="#E5E5E5"> threat model when when there is one</font>

85
00:04:08,190 --> 00:04:13,109
<font color="#E5E5E5">of course there</font><font color="#CCCCCC"> are use</font><font color="#E5E5E5"> case and</font><font color="#CCCCCC"> also</font>

86
00:04:10,859 --> 00:04:15,780
<font color="#E5E5E5">there are its own assumptions so the</font>

87
00:04:13,109 --> 00:04:17,850
problem is<font color="#E5E5E5"> that at the boundaries of the</font>

88
00:04:15,780 --> 00:04:20,488
<font color="#CCCCCC">stitch such component there might be</font>

89
00:04:17,850 --> 00:04:22,019
some assumption that<font color="#E5E5E5"> may cause system</font>

90
00:04:20,488 --> 00:04:24,090
level vulnerabilities for<font color="#E5E5E5"> the whole</font>

91
00:04:22,019 --> 00:04:29,340
system we're going<font color="#E5E5E5"> to have a few example</font>

92
00:04:24,090 --> 00:04:32,969
of these assumptions<font color="#E5E5E5"> and excuse me</font>

93
00:04:29,340 --> 00:04:34,799
there is something<font color="#E5E5E5"> okay so basically</font>

94
00:04:32,970 --> 00:04:36,510
<font color="#CCCCCC">although</font><font color="#E5E5E5"> my experience I had the luck of</font>

95
00:04:34,800 --> 00:04:38,669
<font color="#E5E5E5">seeing a few</font><font color="#CCCCCC"> classes of these</font>

96
00:04:36,510 --> 00:04:41,340
assumptions<font color="#CCCCCC"> and I just want to share</font>

97
00:04:38,669 --> 00:04:44,130
some<font color="#E5E5E5"> with</font><font color="#CCCCCC"> you in terms</font><font color="#E5E5E5"> of actually</font>

98
00:04:41,340 --> 00:04:45,388
classes<font color="#CCCCCC"> okay there is an</font><font color="#E5E5E5"> assumption</font>

99
00:04:44,130 --> 00:04:48,919
<font color="#E5E5E5">which I call an assumption of</font>

100
00:04:45,389 --> 00:04:52,319
completeness let's put this way so

101
00:04:48,919 --> 00:04:54,149
basically<font color="#E5E5E5"> what's happening is</font><font color="#CCCCCC"> that</font>

102
00:04:52,319 --> 00:04:58,619
when we look<font color="#E5E5E5"> at the component either</font>

103
00:04:54,149 --> 00:05:00,930
hardware<font color="#E5E5E5"> or software</font><font color="#CCCCCC"> we assume that but</font>

104
00:04:58,619 --> 00:05:03,180
<font color="#E5E5E5">it may be assumed not necessarily but or</font>

105
00:05:00,930 --> 00:05:04,649
<font color="#CCCCCC">ru but it may be assumed</font><font color="#E5E5E5"> that's when you</font>

106
00:05:03,180 --> 00:05:06,629
look<font color="#E5E5E5"> at this component the new</font>

107
00:05:04,649 --> 00:05:08,669
<font color="#E5E5E5">information than</font><font color="#CCCCCC"> you have</font><font color="#E5E5E5"> regarding</font><font color="#CCCCCC"> this</font>

108
00:05:06,629 --> 00:05:10,499
component is sufficient<font color="#CCCCCC"> for</font>

109
00:05:08,669 --> 00:05:14,248
understanding its impact in the system

110
00:05:10,499 --> 00:05:16,499
<font color="#E5E5E5">and this</font><font color="#CCCCCC"> is a quite strong assumptions</font>

111
00:05:14,249 --> 00:05:18,539
<font color="#CCCCCC">this means you can evaluate components</font>

112
00:05:16,499 --> 00:05:20,339
in isolation<font color="#CCCCCC"> later software</font><font color="#E5E5E5"> and hardware</font>

113
00:05:18,539 --> 00:05:22,979
<font color="#E5E5E5">in you will know how they were going to</font>

114
00:05:20,339 --> 00:05:27,449
<font color="#CCCCCC">behave in the system ok</font><font color="#E5E5E5"> let's have a few</font>

115
00:05:22,979 --> 00:05:30,568
at least one<font color="#E5E5E5"> example that my my clear a</font>

116
00:05:27,449 --> 00:05:32,879
bit the<font color="#CCCCCC"> the understanding here</font>

117
00:05:30,569 --> 00:05:34,740
<font color="#E5E5E5">note that this</font><font color="#CCCCCC"> assumption may apply both</font>

118
00:05:32,879 --> 00:05:36,689
<font color="#CCCCCC">to design so that when you integrate</font><font color="#E5E5E5"> it</font>

119
00:05:34,740 --> 00:05:39,089
<font color="#E5E5E5">on a</font><font color="#CCCCCC"> component but also during testing</font>

120
00:05:36,689 --> 00:05:41,459
<font color="#CCCCCC">so you assume that</font><font color="#E5E5E5"> you can look at the</font>

121
00:05:39,089 --> 00:05:44,759
subsystem in<font color="#CCCCCC"> isolation and</font><font color="#E5E5E5"> then being</font>

122
00:05:41,459 --> 00:05:49,050
able<font color="#CCCCCC"> to predict what is going to</font><font color="#E5E5E5"> happen</font>

123
00:05:44,759 --> 00:05:51,119
at the system level<font color="#CCCCCC"> ok let's do a brief</font>

124
00:05:49,050 --> 00:05:53,669
software assessment<font color="#E5E5E5"> together we take a</font>

125
00:05:51,119 --> 00:05:55,469
string compare implementation is taken

126
00:05:53,669 --> 00:05:57,568
from an open source usually<font color="#CCCCCC"> B&G its</font>

127
00:05:55,469 --> 00:05:58,889
latest<font color="#CCCCCC"> version and the full source</font><font color="#E5E5E5"> code</font>

128
00:05:57,569 --> 00:06:01,019
<font color="#CCCCCC">available so basically you have</font>

129
00:05:58,889 --> 00:06:04,050
everything right let's see if we can

130
00:06:01,019 --> 00:06:05,759
understand what's what we can do here<font color="#E5E5E5"> so</font>

131
00:06:04,050 --> 00:06:07,979
do you see any vulnerability here<font color="#CCCCCC"> I</font>

132
00:06:05,759 --> 00:06:15,059
don't see any buffer there are pointers

133
00:06:07,979 --> 00:06:17,998
to external to external data<font color="#CCCCCC"> I would</font><font color="#E5E5E5"> say</font>

134
00:06:15,059 --> 00:06:21,209
<font color="#E5E5E5">that</font><font color="#CCCCCC"> for if you think about only</font>

135
00:06:17,999 --> 00:06:24,330
software<font color="#E5E5E5"> tags such as the use of logical</font>

136
00:06:21,209 --> 00:06:26,459
attacks<font color="#E5E5E5"> to my</font><font color="#CCCCCC"> knowledge this is</font><font color="#E5E5E5"> not</font>

137
00:06:24,330 --> 00:06:28,409
vulnerable<font color="#CCCCCC"> you will not be able</font><font color="#E5E5E5"> to find</font>

138
00:06:26,459 --> 00:06:29,969
<font color="#E5E5E5">a vulnerability which is related to the</font>

139
00:06:28,409 --> 00:06:33,180
<font color="#E5E5E5">typical memory</font><font color="#CCCCCC"> corruption or even</font>

140
00:06:29,969 --> 00:06:36,449
logical<font color="#CCCCCC"> I mean this</font><font color="#E5E5E5"> should</font><font color="#CCCCCC"> be safe ok</font>

141
00:06:33,180 --> 00:06:41,309
<font color="#E5E5E5">but then there</font><font color="#CCCCCC"> is another point</font><font color="#E5E5E5"> let's</font>

142
00:06:36,449 --> 00:06:44,459
assume<font color="#CCCCCC"> that these may tell you something</font>

143
00:06:41,309 --> 00:06:48,139
as a does tell any something<font color="#E5E5E5"> to anybody</font>

144
00:06:44,459 --> 00:06:50,519
this one do you<font color="#E5E5E5"> see anything here now</font>

145
00:06:48,139 --> 00:06:52,469
well the problem<font color="#E5E5E5"> is that the reason</font>

146
00:06:50,519 --> 00:06:54,479
early termination so as soon as<font color="#E5E5E5"> you find</font>

147
00:06:52,469 --> 00:06:56,819
a different character you will<font color="#E5E5E5"> just stop</font>

148
00:06:54,479 --> 00:06:58,949
so this means<font color="#E5E5E5"> that this</font><font color="#CCCCCC"> is prone to a</font>

149
00:06:56,819 --> 00:07:01,259
number<font color="#E5E5E5"> to a timing attack meaning</font><font color="#CCCCCC"> that</font>

150
00:06:58,949 --> 00:07:03,750
the string with a new<font color="#E5E5E5"> compare will not</font>

151
00:07:01,259 --> 00:07:05,280
be<font color="#CCCCCC"> always be checked</font>

152
00:07:03,750 --> 00:07:07,590
but<font color="#CCCCCC"> it will stop the</font><font color="#E5E5E5"> first wrong</font>

153
00:07:05,280 --> 00:07:09,960
<font color="#E5E5E5">character so you will know when the</font>

154
00:07:07,590 --> 00:07:12,539
character<font color="#CCCCCC"> is correct or not</font><font color="#E5E5E5"> and this</font>

155
00:07:09,960 --> 00:07:15,090
means that<font color="#E5E5E5"> if</font><font color="#CCCCCC"> you were able</font><font color="#E5E5E5"> to</font><font color="#CCCCCC"> access a</font>

156
00:07:12,540 --> 00:07:17,550
<font color="#E5E5E5">measurable</font><font color="#CCCCCC"> channel</font><font color="#E5E5E5"> such as that you can</font>

157
00:07:15,090 --> 00:07:19,260
<font color="#E5E5E5">access the timing and be</font><font color="#CCCCCC"> able</font><font color="#E5E5E5"> to sample</font>

158
00:07:17,550 --> 00:07:20,970
<font color="#E5E5E5">with sufficient precision</font><font color="#CCCCCC"> I'm not</font>

159
00:07:19,260 --> 00:07:22,830
talking about scopes only I'm talking

160
00:07:20,970 --> 00:07:25,920
about<font color="#E5E5E5"> something which you will see in a</font>

161
00:07:22,830 --> 00:07:28,349
<font color="#E5E5E5">moment</font><font color="#CCCCCC"> and if the quantity</font><font color="#E5E5E5"> you are</font>

162
00:07:25,920 --> 00:07:31,890
<font color="#E5E5E5">comparing now is a relevant asset like a</font>

163
00:07:28,350 --> 00:07:33,030
<font color="#E5E5E5">password or a Mac then this is bringing</font>

164
00:07:31,890 --> 00:07:35,640
<font color="#CCCCCC">about nobility</font>

165
00:07:33,030 --> 00:07:40,260
so<font color="#E5E5E5"> basically depending on which</font><font color="#CCCCCC"> highs</font>

166
00:07:35,640 --> 00:07:42,780
you use in<font color="#E5E5E5"> order to look at this code it</font>

167
00:07:40,260 --> 00:07:45,030
may be<font color="#E5E5E5"> either vulnerable or not or</font>

168
00:07:42,780 --> 00:07:46,770
<font color="#E5E5E5">actually</font><font color="#CCCCCC"> be bring will not be in the</font>

169
00:07:45,030 --> 00:07:49,409
<font color="#CCCCCC">system or not</font><font color="#E5E5E5"> because what you are</font>

170
00:07:46,770 --> 00:07:52,080
seeing here<font color="#CCCCCC"> is that</font><font color="#E5E5E5"> the precondition</font><font color="#CCCCCC"> for</font>

171
00:07:49,410 --> 00:07:55,730
making these dangerous are not in the

172
00:07:52,080 --> 00:07:58,200
code they are in the system<font color="#E5E5E5"> so basically</font>

173
00:07:55,730 --> 00:08:00,540
the point<font color="#E5E5E5"> is that we are now with the</font>

174
00:07:58,200 --> 00:08:03,479
software components that if we consider

175
00:08:00,540 --> 00:08:04,770
<font color="#CCCCCC">only software logical tags</font><font color="#E5E5E5"> what the</font>

176
00:08:03,480 --> 00:08:08,100
system is not vulnerable there's no

177
00:08:04,770 --> 00:08:10,260
problem but if<font color="#E5E5E5"> the system is a different</font>

178
00:08:08,100 --> 00:08:12,360
<font color="#CCCCCC">threat model that includes</font><font color="#E5E5E5"> not only the</font>

179
00:08:10,260 --> 00:08:14,099
<font color="#E5E5E5">software but also the timing attack then</font>

180
00:08:12,360 --> 00:08:15,570
<font color="#E5E5E5">this becomes vulnerable</font><font color="#CCCCCC"> the point is</font>

181
00:08:14,100 --> 00:08:17,250
<font color="#E5E5E5">that you are looking at the code you</font>

182
00:08:15,570 --> 00:08:19,290
<font color="#CCCCCC">have no information where this is going</font>

183
00:08:17,250 --> 00:08:21,330
to be used what do you decide<font color="#E5E5E5"> what do</font>

184
00:08:19,290 --> 00:08:25,620
you<font color="#E5E5E5"> report because you look at the</font><font color="#CCCCCC"> code</font>

185
00:08:21,330 --> 00:08:29,030
in isolation<font color="#CCCCCC"> okay so the problem is</font><font color="#E5E5E5"> that</font>

186
00:08:25,620 --> 00:08:31,470
we might<font color="#CCCCCC"> have in some situation a</font>

187
00:08:29,030 --> 00:08:34,079
component<font color="#CCCCCC"> either software or</font><font color="#E5E5E5"> hardware</font>

188
00:08:31,470 --> 00:08:37,140
which<font color="#CCCCCC"> is judged see to record</font><font color="#E5E5E5"> into a</font>

189
00:08:34,080 --> 00:08:44,219
threat model then<font color="#E5E5E5"> we have a system again</font>

190
00:08:37,140 --> 00:08:45,810
<font color="#E5E5E5">that excuse me</font><font color="#CCCCCC"> that he is designed in</font>

191
00:08:44,219 --> 00:08:48,990
order<font color="#E5E5E5"> to withstand both software and</font>

192
00:08:45,810 --> 00:08:51,900
<font color="#CCCCCC">Tamiya</font><font color="#E5E5E5"> touch by design and that is</font>

193
00:08:48,990 --> 00:08:53,820
regarded secure then<font color="#E5E5E5"> you put them</font>

194
00:08:51,900 --> 00:08:55,860
together and then what happens is that

195
00:08:53,820 --> 00:08:59,880
from to see fewer components<font color="#E5E5E5"> you get a</font>

196
00:08:55,860 --> 00:09:01,380
<font color="#E5E5E5">vulnerable system because you might</font><font color="#CCCCCC"> be</font>

197
00:08:59,880 --> 00:09:04,530
able<font color="#E5E5E5"> to exploit the timing</font>

198
00:09:01,380 --> 00:09:06,450
vulnerabilities<font color="#CCCCCC"> that is brought by the</font>

199
00:09:04,530 --> 00:09:08,280
string compare basically<font color="#CCCCCC"> which has been</font>

200
00:09:06,450 --> 00:09:10,160
judged<font color="#CCCCCC"> and secured</font><font color="#E5E5E5"> only because a</font>

201
00:09:08,280 --> 00:09:13,050
<font color="#E5E5E5">different threat models have been used</font>

202
00:09:10,160 --> 00:09:15,120
<font color="#E5E5E5">so basically the component level</font>

203
00:09:13,050 --> 00:09:16,498
<font color="#CCCCCC">information so the code</font><font color="#E5E5E5"> what information</font>

204
00:09:15,120 --> 00:09:18,899
you<font color="#E5E5E5"> have in the code is not suffice</font>

205
00:09:16,499 --> 00:09:20,189
<font color="#E5E5E5">for establishing if the you're</font>

206
00:09:18,899 --> 00:09:23,579
introducing a vulnerability in the

207
00:09:20,189 --> 00:09:26,159
<font color="#E5E5E5">system or</font><font color="#CCCCCC"> not because it cannot be a</font>

208
00:09:23,579 --> 00:09:28,049
this vulnerability<font color="#E5E5E5"> specifically cannot</font>

209
00:09:26,159 --> 00:09:30,209
be<font color="#E5E5E5"> assessed and only the component</font><font color="#CCCCCC"> level</font>

210
00:09:28,049 --> 00:09:32,999
<font color="#E5E5E5">because it depends on the</font><font color="#CCCCCC"> final system</font>

211
00:09:30,209 --> 00:09:34,768
threat model if your threat model<font color="#E5E5E5"> does</font>

212
00:09:32,999 --> 00:09:36,509
not<font color="#E5E5E5"> include</font><font color="#CCCCCC"> the me attack</font><font color="#E5E5E5"> so that the</font>

213
00:09:34,769 --> 00:09:38,069
final system<font color="#E5E5E5"> doesn't</font><font color="#CCCCCC"> care about</font><font color="#E5E5E5"> those</font>

214
00:09:36,509 --> 00:09:40,619
kind of attacks<font color="#CCCCCC"> then there is no</font>

215
00:09:38,069 --> 00:09:43,289
vulnerability<font color="#E5E5E5"> but if the system can</font><font color="#CCCCCC"> be</font>

216
00:09:40,619 --> 00:09:45,149
<font color="#E5E5E5">attacked by using timing attack then</font>

217
00:09:43,289 --> 00:09:47,639
this immediately becomes a vulnerable

218
00:09:45,149 --> 00:09:48,899
path<font color="#E5E5E5"> the promise</font><font color="#CCCCCC"> that code review does</font>

219
00:09:47,639 --> 00:09:50,639
<font color="#CCCCCC">not solve</font><font color="#E5E5E5"> the</font><font color="#CCCCCC"> problem you can</font><font color="#E5E5E5"> preview</font>

220
00:09:48,899 --> 00:09:52,199
<font color="#E5E5E5">that as much</font><font color="#CCCCCC"> as you want</font><font color="#E5E5E5"> unless you have</font>

221
00:09:50,639 --> 00:09:54,029
additional<font color="#CCCCCC"> information on the final</font>

222
00:09:52,199 --> 00:09:57,478
<font color="#E5E5E5">system</font><font color="#CCCCCC"> and on the threat model which is</font>

223
00:09:54,029 --> 00:09:59,399
relevant<font color="#CCCCCC"> so basically if I give you if a</font>

224
00:09:57,479 --> 00:10:00,989
review this code I should give<font color="#E5E5E5"> you the</font>

225
00:09:59,399 --> 00:10:02,699
information<font color="#E5E5E5"> that depending on the threat</font>

226
00:10:00,989 --> 00:10:04,859
model<font color="#CCCCCC"> this might bring you some</font>

227
00:10:02,699 --> 00:10:07,559
vulnerabilities and only the<font color="#CCCCCC"> next stage</font>

228
00:10:04,859 --> 00:10:09,749
<font color="#CCCCCC">would</font><font color="#E5E5E5"> that is integrate in this code can</font>

229
00:10:07,559 --> 00:10:12,449
decide if this<font color="#E5E5E5"> is</font><font color="#CCCCCC"> actually a problem</font><font color="#E5E5E5"> or</font>

230
00:10:09,749 --> 00:10:14,819
not<font color="#E5E5E5"> but people review in this code or</font>

231
00:10:12,449 --> 00:10:16,589
<font color="#E5E5E5">write in this code if they are not</font>

232
00:10:14,819 --> 00:10:17,968
concerned<font color="#E5E5E5"> with the</font><font color="#CCCCCC"> other threat model</font>

233
00:10:16,589 --> 00:10:22,649
the world the piece of<font color="#E5E5E5"> software is</font>

234
00:10:17,969 --> 00:10:24,839
perfectly fine<font color="#E5E5E5"> okay regarding exploit</font>

235
00:10:22,649 --> 00:10:26,939
ability well it's a string comparison so

236
00:10:24,839 --> 00:10:30,139
prep so many people<font color="#CCCCCC"> will think that this</font>

237
00:10:26,939 --> 00:10:32,759
<font color="#E5E5E5">is not</font><font color="#CCCCCC"> relevant</font><font color="#E5E5E5"> well it's for sure</font>

238
00:10:30,139 --> 00:10:35,549
<font color="#E5E5E5">regarding impractical be</font><font color="#CCCCCC"> researched in</font>

239
00:10:32,759 --> 00:10:36,929
<font color="#E5E5E5">the vast majority</font><font color="#CCCCCC"> of cases I mean but</font>

240
00:10:35,549 --> 00:10:38,759
the vast<font color="#E5E5E5"> majority of cases which have</font>

241
00:10:36,929 --> 00:10:41,429
been<font color="#E5E5E5"> explored are actually remote server</font>

242
00:10:38,759 --> 00:10:43,829
for<font color="#E5E5E5"> fast</font><font color="#CCCCCC"> C will fast CPUs</font><font color="#E5E5E5"> such as three</font>

243
00:10:41,429 --> 00:10:45,779
point<font color="#CCCCCC"> three</font><font color="#E5E5E5"> diggers that are sitting</font><font color="#CCCCCC"> on</font>

244
00:10:43,829 --> 00:10:47,429
a LAN or<font color="#CCCCCC"> a remote plan and that's</font>

245
00:10:45,779 --> 00:10:49,859
actually impractical<font color="#E5E5E5"> because in those</font>

246
00:10:47,429 --> 00:10:52,019
<font color="#CCCCCC">cases</font><font color="#E5E5E5"> one single distraction is below</font>

247
00:10:49,859 --> 00:10:53,819
one now second that's<font color="#E5E5E5"> what we are</font>

248
00:10:52,019 --> 00:10:55,349
<font color="#CCCCCC">talking about here so</font><font color="#E5E5E5"> the point is that</font>

249
00:10:53,819 --> 00:10:57,149
<font color="#E5E5E5">how do you remotely measure one</font>

250
00:10:55,349 --> 00:10:58,919
nanosecond of difference<font color="#E5E5E5"> for an</font>

251
00:10:57,149 --> 00:11:00,869
instruction well for a loop who might be

252
00:10:58,919 --> 00:11:03,119
a bit more<font color="#E5E5E5"> area may be F 10 20</font>

253
00:11:00,869 --> 00:11:06,119
nanosecond<font color="#E5E5E5"> so this is actually</font>

254
00:11:03,119 --> 00:11:08,009
impractical but you are not now<font color="#CCCCCC"> we are</font>

255
00:11:06,119 --> 00:11:10,739
now in a<font color="#E5E5E5"> world where 50</font><font color="#CCCCCC"> percent of the</font>

256
00:11:08,009 --> 00:11:13,649
traffic<font color="#E5E5E5"> is made by a machine to machine</font>

257
00:11:10,739 --> 00:11:16,589
traffic we<font color="#E5E5E5"> have</font><font color="#CCCCCC"> IOT almost everywhere</font>

258
00:11:13,649 --> 00:11:19,079
<font color="#E5E5E5">which system is much slower so basically</font>

259
00:11:16,589 --> 00:11:21,989
you might have the typical<font color="#E5E5E5"> Arduino might</font>

260
00:11:19,079 --> 00:11:25,319
go from the<font color="#E5E5E5"> 60 16 megahertz left</font><font color="#CCCCCC"> oqd</font>

261
00:11:21,989 --> 00:11:28,800
<font color="#CCCCCC">arduino uno or you might have an SP 32</font>

262
00:11:25,319 --> 00:11:32,640
going<font color="#E5E5E5"> that having 250 mega</font><font color="#CCCCCC"> sefa remember</font>

263
00:11:28,800 --> 00:11:36,810
<font color="#CCCCCC">840</font><font color="#E5E5E5"> so this is much</font><font color="#CCCCCC"> slower than</font><font color="#E5E5E5"> three</font>

264
00:11:32,640 --> 00:11:41,069
<font color="#CCCCCC">gears</font><font color="#E5E5E5"> completely so the point is that in</font>

265
00:11:36,810 --> 00:11:42,989
<font color="#E5E5E5">fact one semi-people</font><font color="#CCCCCC"> writer said</font><font color="#E5E5E5"> that</font>

266
00:11:41,070 --> 00:11:44,550
the<font color="#E5E5E5"> timing and tackle Riegel are</font>

267
00:11:42,990 --> 00:11:46,829
reversed in comparison left to be

268
00:11:44,550 --> 00:11:48,420
assumed feasible for any<font color="#E5E5E5"> embedded system</font>

269
00:11:46,829 --> 00:11:51,060
at the moment that is still<font color="#CCCCCC"> actually</font>

270
00:11:48,420 --> 00:11:52,890
true<font color="#E5E5E5"> and the</font><font color="#CCCCCC"> reason is that I should</font>

271
00:11:51,060 --> 00:11:54,660
<font color="#E5E5E5">have been demonstrating this but</font>

272
00:11:52,890 --> 00:11:57,449
<font color="#CCCCCC">unfortunately</font><font color="#E5E5E5"> I don't have the time</font><font color="#CCCCCC"> but</font>

273
00:11:54,660 --> 00:12:01,980
if you<font color="#CCCCCC"> decade Arduino</font><font color="#E5E5E5"> with 16 megahertz</font>

274
00:11:57,450 --> 00:12:04,529
<font color="#E5E5E5">and 100 megabit and you have a pin of</font>

275
00:12:01,980 --> 00:12:07,260
<font color="#E5E5E5">eight digit</font><font color="#CCCCCC"> eight digits is about</font>

276
00:12:04,529 --> 00:12:09,750
basically<font color="#CCCCCC"> ten digits to the</font><font color="#E5E5E5"> power right</font>

277
00:12:07,260 --> 00:12:11,790
so it<font color="#CCCCCC"> wasn't 100 millions combination</font><font color="#E5E5E5"> if</font>

278
00:12:09,750 --> 00:12:14,010
you want to actually<font color="#CCCCCC"> brute-force that it</font>

279
00:12:11,790 --> 00:12:16,410
goes down to 50<font color="#CCCCCC"> Millions if you take</font>

280
00:12:14,010 --> 00:12:19,319
<font color="#E5E5E5">into account</font><font color="#CCCCCC"> the brute force approach</font>

281
00:12:16,410 --> 00:12:21,149
<font color="#CCCCCC">okay</font><font color="#E5E5E5"> but basically by measuring the time</font>

282
00:12:19,320 --> 00:12:25,910
you can<font color="#CCCCCC"> actually see that I'm able to</font>

283
00:12:21,149 --> 00:12:30,390
retrieve the pin in just<font color="#E5E5E5"> 68,000 checks</font>

284
00:12:25,910 --> 00:12:32,040
<font color="#E5E5E5">basically I just explored that 0.07% of</font>

285
00:12:30,390 --> 00:12:34,949
the brute<font color="#CCCCCC"> force pace and I was able</font><font color="#E5E5E5"> to</font>

286
00:12:32,040 --> 00:12:36,930
<font color="#E5E5E5">retrieve the full pin as I said are you</font>

287
00:12:34,950 --> 00:12:38,730
<font color="#E5E5E5">not able to do the demo here for due to</font>

288
00:12:36,930 --> 00:12:40,680
time constraints<font color="#CCCCCC"> but the timer's will</font><font color="#E5E5E5"> be</font>

289
00:12:38,730 --> 00:12:41,370
available tomorrow at the<font color="#CCCCCC"> hack</font><font color="#E5E5E5"> in the</font>

290
00:12:40,680 --> 00:12:44,640
<font color="#E5E5E5">box</font>

291
00:12:41,370 --> 00:12:47,459
<font color="#E5E5E5">armory hid beep</font><font color="#CCCCCC"> armory what I'll be able</font>

292
00:12:44,640 --> 00:12:49,439
<font color="#E5E5E5">to demonstrate the impact of this</font><font color="#CCCCCC"> kind</font>

293
00:12:47,459 --> 00:12:51,810
<font color="#CCCCCC">of attacks I will do the via</font><font color="#E5E5E5"> framework</font>

294
00:12:49,440 --> 00:12:54,149
which I'm researching and working with

295
00:12:51,810 --> 00:12:57,899
so this<font color="#E5E5E5"> is a basic</font><font color="#CCCCCC"> for a new research</font><font color="#E5E5E5"> on</font>

296
00:12:54,149 --> 00:12:59,850
remote timing attacks on IOT devices so

297
00:12:57,899 --> 00:13:01,980
the point is<font color="#CCCCCC"> that</font><font color="#E5E5E5"> as you've seen even</font>

298
00:12:59,850 --> 00:13:04,529
<font color="#E5E5E5">the exploitability now</font><font color="#CCCCCC"> really depends on</font>

299
00:13:01,980 --> 00:13:08,640
where you<font color="#E5E5E5"> put this code because if you</font>

300
00:13:04,529 --> 00:13:10,350
<font color="#E5E5E5">put that on on a full</font><font color="#CCCCCC"> a very fast</font><font color="#E5E5E5"> remote</font>

301
00:13:08,640 --> 00:13:12,930
server<font color="#E5E5E5"> well there is no way you can</font>

302
00:13:10,350 --> 00:13:15,029
explore the same<font color="#CCCCCC"> comparison</font><font color="#E5E5E5"> but if you</font>

303
00:13:12,930 --> 00:13:16,199
<font color="#E5E5E5">use the same code on a different device</font>

304
00:13:15,029 --> 00:13:19,709
which is an IOT

305
00:13:16,199 --> 00:13:22,500
then again<font color="#E5E5E5"> this become exploitable so</font>

306
00:13:19,709 --> 00:13:24,599
even the exploitability<font color="#E5E5E5"> cannot be</font>

307
00:13:22,500 --> 00:13:26,220
<font color="#CCCCCC">established by looking at code so you'll</font>

308
00:13:24,600 --> 00:13:28,320
<font color="#CCCCCC">be looking</font><font color="#E5E5E5"> at</font><font color="#CCCCCC"> the code that</font><font color="#E5E5E5"> we are</font>

309
00:13:26,220 --> 00:13:30,990
saying we are very good expert in

310
00:13:28,320 --> 00:13:32,430
software<font color="#E5E5E5"> security main Arbor</font><font color="#CCCCCC"> security we</font>

311
00:13:30,990 --> 00:13:34,019
have<font color="#E5E5E5"> all the information</font><font color="#CCCCCC"> available</font>

312
00:13:32,430 --> 00:13:36,510
regarding<font color="#E5E5E5"> the code but we are not able</font>

313
00:13:34,019 --> 00:13:37,949
<font color="#CCCCCC">to assess if it's</font><font color="#E5E5E5"> vulnerable if it</font>

314
00:13:36,510 --> 00:13:40,640
<font color="#E5E5E5">brings a would not be in the system</font><font color="#CCCCCC"> or</font>

315
00:13:37,949 --> 00:13:42,599
<font color="#E5E5E5">if Bream's</font><font color="#CCCCCC"> exploit</font><font color="#E5E5E5"> ability to the system</font>

316
00:13:40,640 --> 00:13:44,189
so base

317
00:13:42,600 --> 00:13:45,870
<font color="#CCCCCC">I would say that there are some</font><font color="#E5E5E5"> some</font>

318
00:13:44,190 --> 00:13:49,399
that you look at<font color="#E5E5E5"> components and you know</font>

319
00:13:45,870 --> 00:13:53,009
about the<font color="#E5E5E5"> system is actually failing</font>

320
00:13:49,399 --> 00:13:55,079
<font color="#E5E5E5">okay what how can</font><font color="#CCCCCC"> we</font><font color="#E5E5E5"> help this well</font>

321
00:13:53,009 --> 00:13:57,209
basically when you actually<font color="#E5E5E5"> receive an</font>

322
00:13:55,079 --> 00:13:59,040
inquiry a component either a software<font color="#CCCCCC"> or</font>

323
00:13:57,209 --> 00:14:00,959
<font color="#CCCCCC">Harbor component</font><font color="#E5E5E5"> you should always ask</font>

324
00:13:59,040 --> 00:14:02,610
<font color="#E5E5E5">for a threat model someone has designed</font>

325
00:14:00,959 --> 00:14:04,739
it<font color="#E5E5E5"> with</font><font color="#CCCCCC"> something in mind we'll give an</font>

326
00:14:02,610 --> 00:14:06,930
<font color="#E5E5E5">example next slide</font><font color="#CCCCCC"> and you should always</font>

327
00:14:04,740 --> 00:14:09,569
<font color="#E5E5E5">ask it's a simple</font><font color="#CCCCCC"> question but</font><font color="#E5E5E5"> in my</font>

328
00:14:06,930 --> 00:14:11,519
experience I<font color="#CCCCCC"> rarely</font><font color="#E5E5E5"> do see that asked</font>

329
00:14:09,569 --> 00:14:13,889
the<font color="#E5E5E5"> simple things which I don't see</font>

330
00:14:11,519 --> 00:14:15,600
<font color="#E5E5E5">asked is that while you</font><font color="#CCCCCC"> develop this</font>

331
00:14:13,889 --> 00:14:17,339
component at the<font color="#CCCCCC"> harbor</font><font color="#E5E5E5"> or software</font>

332
00:14:15,600 --> 00:14:20,399
which<font color="#E5E5E5"> are your</font><font color="#CCCCCC"> security processes</font>

333
00:14:17,339 --> 00:14:22,680
do you have<font color="#CCCCCC"> SDLC do you do this on</font>

334
00:14:20,399 --> 00:14:24,540
reviews<font color="#E5E5E5"> do you do source code or it's</font>

335
00:14:22,680 --> 00:14:27,750
you do perform product penetration

336
00:14:24,540 --> 00:14:30,300
testing you are buying the<font color="#E5E5E5"> components so</font>

337
00:14:27,750 --> 00:14:32,579
these are legit questions to ask<font color="#E5E5E5"> second</font>

338
00:14:30,300 --> 00:14:35,130
kinds of questions which I usually don't

339
00:14:32,579 --> 00:14:37,888
<font color="#E5E5E5">see asked the third kind of questions is</font>

340
00:14:35,130 --> 00:14:40,319
that<font color="#E5E5E5"> okay this is more for final</font>

341
00:14:37,889 --> 00:14:43,139
products<font color="#E5E5E5"> what are your</font><font color="#CCCCCC"> infield security</font>

342
00:14:40,319 --> 00:14:44,939
processes so how long does it take for

343
00:14:43,139 --> 00:14:48,360
<font color="#E5E5E5">you to be the fix in average do you have</font>

344
00:14:44,940 --> 00:14:51,240
metrics<font color="#E5E5E5"> what I we don't what but I'm</font>

345
00:14:48,360 --> 00:14:52,740
asking you should then what is the<font color="#E5E5E5"> city</font>

346
00:14:51,240 --> 00:14:54,720
maintenance<font color="#CCCCCC"> how long are you giving the</font>

347
00:14:52,740 --> 00:14:57,149
<font color="#CCCCCC">filmer update for and film update does</font>

348
00:14:54,720 --> 00:15:00,959
<font color="#E5E5E5">not mean router might mean the</font>

349
00:14:57,149 --> 00:15:02,370
fingerprint sensors on this phone this

350
00:15:00,959 --> 00:15:06,050
is<font color="#E5E5E5"> what we are talking about here we</font>

351
00:15:02,370 --> 00:15:09,000
<font color="#E5E5E5">talk about components so basically and</font>

352
00:15:06,050 --> 00:15:11,099
if there is a<font color="#E5E5E5"> process behind which is</font>

353
00:15:09,000 --> 00:15:13,740
<font color="#CCCCCC">Sidious</font><font color="#E5E5E5"> they should probably do the VDD</font>

354
00:15:11,100 --> 00:15:15,810
<font color="#E5E5E5">evaluation and you can ask the</font><font color="#CCCCCC"> security</font>

355
00:15:13,740 --> 00:15:16,889
but wish to<font color="#E5E5E5"> report because</font><font color="#CCCCCC"> the point is</font>

356
00:15:15,810 --> 00:15:18,540
<font color="#E5E5E5">that when you're buying a component</font>

357
00:15:16,889 --> 00:15:20,880
<font color="#E5E5E5">you're also buying</font><font color="#CCCCCC"> it's risk its</font>

358
00:15:18,540 --> 00:15:22,709
included<font color="#E5E5E5"> so if you're buying it's risk</font>

359
00:15:20,880 --> 00:15:25,860
you should<font color="#CCCCCC"> also</font><font color="#E5E5E5"> get that that is unity</font>

360
00:15:22,709 --> 00:15:27,508
port<font color="#E5E5E5"> right if you are so</font><font color="#CCCCCC"> Yuri concerned</font>

361
00:15:25,860 --> 00:15:30,839
if you<font color="#CCCCCC"> are</font><font color="#E5E5E5"> not security concerned and</font>

362
00:15:27,509 --> 00:15:33,209
probably it's a problem someone else so

363
00:15:30,839 --> 00:15:35,220
<font color="#E5E5E5">a good example instead is a case of</font>

364
00:15:33,209 --> 00:15:36,689
<font color="#CCCCCC">Amazon where have been the documentation</font>

365
00:15:35,220 --> 00:15:39,509
they specify that it's<font color="#E5E5E5"> a</font><font color="#CCCCCC"> hard were</font>

366
00:15:36,689 --> 00:15:42,000
enforced so<font color="#E5E5E5"> arbor support for logical</font>

367
00:15:39,509 --> 00:15:45,269
separation<font color="#E5E5E5"> so it's not an arbor defense</font>

368
00:15:42,000 --> 00:15:46,560
<font color="#E5E5E5">it is</font><font color="#CCCCCC"> an arbor support for separating</font>

369
00:15:45,269 --> 00:15:49,470
logical domains

370
00:15:46,560 --> 00:15:50,699
software<font color="#E5E5E5"> in fact they say the lava ducts</font>

371
00:15:49,470 --> 00:15:52,410
are outside of<font color="#E5E5E5"> the scope of the</font>

372
00:15:50,699 --> 00:15:55,410
protection provided<font color="#E5E5E5"> by</font><font color="#CCCCCC"> trust and</font>

373
00:15:52,410 --> 00:15:58,170
<font color="#E5E5E5">technology so if you're thinking</font><font color="#CCCCCC"> of</font>

374
00:15:55,410 --> 00:15:59,879
the iv injection resistant<font color="#E5E5E5"> recent system</font>

375
00:15:58,170 --> 00:16:00,660
by using only<font color="#CCCCCC"> trust</font><font color="#E5E5E5"> oh nothing pure on</font>

376
00:15:59,879 --> 00:16:05,009
the wrong track

377
00:16:00,660 --> 00:16:07,139
you should redesign<font color="#CCCCCC"> your assumption</font><font color="#E5E5E5"> and</font>

378
00:16:05,009 --> 00:16:09,029
this<font color="#E5E5E5"> is a good example because they</font>

379
00:16:07,139 --> 00:16:11,459
provide<font color="#E5E5E5"> the</font><font color="#CCCCCC"> phret</font><font color="#E5E5E5"> model along with the</font>

380
00:16:09,029 --> 00:16:14,490
<font color="#E5E5E5">documentation even</font><font color="#CCCCCC"> if you don't</font><font color="#E5E5E5"> need</font>

381
00:16:11,459 --> 00:16:17,279
necessarily<font color="#E5E5E5"> need</font><font color="#CCCCCC"> to ask</font><font color="#E5E5E5"> second</font><font color="#CCCCCC"> can class</font>

382
00:16:14,490 --> 00:16:21,839
<font color="#CCCCCC">two</font><font color="#E5E5E5"> assumptions which I often do also</font>

383
00:16:17,279 --> 00:16:23,959
<font color="#CCCCCC">see here is that correctness a lot of</font>

384
00:16:21,839 --> 00:16:26,459
times<font color="#CCCCCC"> and</font><font color="#E5E5E5"> you see especially software</font>

385
00:16:23,959 --> 00:16:27,959
developers or software testers is the

386
00:16:26,459 --> 00:16:30,149
assumption<font color="#CCCCCC"> that the system we</font><font color="#E5E5E5"> will</font>

387
00:16:27,959 --> 00:16:33,149
always<font color="#E5E5E5"> behave as intended by</font>

388
00:16:30,149 --> 00:16:35,250
specification actually<font color="#E5E5E5"> I mean the</font>

389
00:16:33,149 --> 00:16:37,399
<font color="#CCCCCC">system's works on hardware which is a</font>

390
00:16:35,250 --> 00:16:41,990
<font color="#E5E5E5">set machine which works on physics and</font>

391
00:16:37,399 --> 00:16:45,420
if the boundaries of expected<font color="#E5E5E5"> let's say</font>

392
00:16:41,990 --> 00:16:48,120
behavior are satisfied<font color="#CCCCCC"> well perfectly</font>

393
00:16:45,420 --> 00:16:50,849
<font color="#E5E5E5">fine but if instead if you</font><font color="#CCCCCC"> are able</font><font color="#E5E5E5"> to</font>

394
00:16:48,120 --> 00:16:53,100
introduce fold a the<font color="#CCCCCC"> Bachrach</font><font color="#E5E5E5"> voltage</font><font color="#CCCCCC"> GM</font>

395
00:16:50,850 --> 00:16:55,560
or laser or<font color="#E5E5E5"> drive even more they will</font>

396
00:16:53,100 --> 00:16:57,720
not fit<font color="#CCCCCC"> in the</font><font color="#E5E5E5"> slide if</font><font color="#CCCCCC"> you're</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to</font>

397
00:16:55,560 --> 00:17:00,029
introduce<font color="#E5E5E5"> the glitch</font><font color="#CCCCCC"> by using a control</font>

398
00:16:57,720 --> 00:17:01,860
<font color="#CCCCCC">Edenvale environmental change you can</font>

399
00:17:00,029 --> 00:17:04,949
alter the<font color="#E5E5E5"> behavior</font><font color="#CCCCCC"> it's already proven</font>

400
00:17:01,860 --> 00:17:06,659
<font color="#CCCCCC">that by</font><font color="#E5E5E5"> dudy doing this there are</font>

401
00:17:04,949 --> 00:17:08,189
chances that<font color="#E5E5E5"> you can exploit this</font>

402
00:17:06,659 --> 00:17:11,039
vulnerability in<font color="#CCCCCC"> the hardware which has</font>

403
00:17:08,189 --> 00:17:12,360
been<font color="#CCCCCC"> triggered by your glitch the first</font>

404
00:17:11,039 --> 00:17:13,919
assumption that always here that there

405
00:17:12,359 --> 00:17:16,260
<font color="#E5E5E5">are this is expensive attack actually</font>

406
00:17:13,919 --> 00:17:20,929
not<font color="#E5E5E5"> I would really really recommend that</font>

407
00:17:16,260 --> 00:17:22,919
<font color="#E5E5E5">to have a look at</font><font color="#CCCCCC"> presentation from Rafa</font>

408
00:17:20,929 --> 00:17:26,159
<font color="#CCCCCC">cheapskate attacking a tee</font><font color="#E5E5E5"> with less</font>

409
00:17:22,919 --> 00:17:28,409
than $60<font color="#E5E5E5"> he is doing</font><font color="#CCCCCC"> SGA</font><font color="#E5E5E5"> and fault</font>

410
00:17:26,159 --> 00:17:32,460
injection attacks with with<font color="#E5E5E5"> that amount</font>

411
00:17:28,409 --> 00:17:34,950
of<font color="#E5E5E5"> money so that</font><font color="#CCCCCC"> is usually an</font>

412
00:17:32,460 --> 00:17:37,289
uninformed<font color="#CCCCCC"> unn sumption so that's why is</font>

413
00:17:34,950 --> 00:17:38,880
in this<font color="#E5E5E5"> slide the rather assumption to</font>

414
00:17:37,289 --> 00:17:40,740
usually go with fault attacks the first

415
00:17:38,880 --> 00:17:41,280
<font color="#E5E5E5">one is physical access is required</font><font color="#CCCCCC"> it's</font>

416
00:17:40,740 --> 00:17:43,590
wrong

417
00:17:41,280 --> 00:17:46,320
I mean Rohan<font color="#CCCCCC"> were in Crocs crew are</font>

418
00:17:43,590 --> 00:17:48,899
software activated the our software

419
00:17:46,320 --> 00:17:52,260
initiated fault attacks<font color="#E5E5E5"> so you are able</font>

420
00:17:48,900 --> 00:17:54,570
<font color="#E5E5E5">to</font><font color="#CCCCCC"> trigger a Fault in the hardware by</font>

421
00:17:52,260 --> 00:17:56,158
using software<font color="#CCCCCC"> and if you are able to do</font>

422
00:17:54,570 --> 00:17:58,590
<font color="#E5E5E5">that then you</font><font color="#CCCCCC"> cannot fin do it remotely</font>

423
00:17:56,159 --> 00:18:00,809
<font color="#CCCCCC">so now there</font><font color="#E5E5E5"> are class</font><font color="#CCCCCC"> you have fault</font>

424
00:17:58,590 --> 00:18:03,570
attacks which do not<font color="#E5E5E5"> require physical</font>

425
00:18:00,809 --> 00:18:05,250
access<font color="#E5E5E5"> the second point is that usually</font>

426
00:18:03,570 --> 00:18:07,830
<font color="#CCCCCC">when you think of fault attacks you want</font>

427
00:18:05,250 --> 00:18:08,890
to<font color="#E5E5E5"> bypass security decision point so</font>

428
00:18:07,830 --> 00:18:11,110
something which are

429
00:18:08,890 --> 00:18:12,700
I often<font color="#E5E5E5"> hear is that well we don't</font>

430
00:18:11,110 --> 00:18:14,919
decide anything<font color="#E5E5E5"> we always do the checks</font>

431
00:18:12,700 --> 00:18:16,960
<font color="#CCCCCC">so there's nothing</font><font color="#E5E5E5"> to attack again</font><font color="#CCCCCC"> it's</font>

432
00:18:14,920 --> 00:18:19,570
wrong<font color="#E5E5E5"> because</font><font color="#CCCCCC"> there are new foot model</font>

433
00:18:16,960 --> 00:18:22,120
which allow you to<font color="#E5E5E5"> perform directly code</font>

434
00:18:19,570 --> 00:18:23,980
execution<font color="#E5E5E5"> well also we have control</font>

435
00:18:22,120 --> 00:18:26,020
measure in software<font color="#E5E5E5"> because we do double</font>

436
00:18:23,980 --> 00:18:28,210
checks we do a random<font color="#E5E5E5"> delay so it's</font>

437
00:18:26,020 --> 00:18:29,860
<font color="#CCCCCC">diffusion well tack</font><font color="#E5E5E5"> what actually is</font>

438
00:18:28,210 --> 00:18:31,210
still wrong<font color="#E5E5E5"> because there is a new fault</font>

439
00:18:29,860 --> 00:18:33,490
model that can completely<font color="#E5E5E5"> reverse</font>

440
00:18:31,210 --> 00:18:35,620
software fault injection<font color="#E5E5E5"> there is</font>

441
00:18:33,490 --> 00:18:37,750
<font color="#E5E5E5">another one</font><font color="#CCCCCC"> where gun is</font><font color="#E5E5E5"> you'll boot</font><font color="#CCCCCC"> was</font>

442
00:18:35,620 --> 00:18:39,399
our so your boot<font color="#CCCCCC"> is encrypted you</font><font color="#E5E5E5"> did</font><font color="#CCCCCC"> a</font>

443
00:18:37,750 --> 00:18:41,020
<font color="#E5E5E5">key anyway even if you bypassed</font>

444
00:18:39,400 --> 00:18:43,960
something you don't have the key it's

445
00:18:41,020 --> 00:18:45,700
wrong it's<font color="#CCCCCC"> also</font><font color="#E5E5E5"> wrong and wait a</font><font color="#CCCCCC"> minute</font>

446
00:18:43,960 --> 00:18:47,380
<font color="#CCCCCC">because I'm think I'm sharing something</font>

447
00:18:45,700 --> 00:18:47,919
that<font color="#E5E5E5"> might be interesting</font><font color="#CCCCCC"> and maybe new</font>

448
00:18:47,380 --> 00:18:51,549
<font color="#CCCCCC">for</font><font color="#E5E5E5"> you</font>

449
00:18:47,919 --> 00:18:54,730
so the typical<font color="#CCCCCC"> so your boot is</font><font color="#E5E5E5"> that you</font>

450
00:18:51,549 --> 00:18:56,950
are loading<font color="#E5E5E5"> boot stage is loading the</font>

451
00:18:54,730 --> 00:18:59,980
memory stage<font color="#CCCCCC"> out</font><font color="#E5E5E5"> then you are</font><font color="#CCCCCC"> loading</font>

452
00:18:56,950 --> 00:19:03,820
<font color="#E5E5E5">the signal</font><font color="#CCCCCC"> a single ad</font><font color="#E5E5E5"> and then you just</font>

453
00:18:59,980 --> 00:19:05,890
do perform<font color="#E5E5E5"> the signature check and then</font>

454
00:19:03,820 --> 00:19:09,909
if<font color="#E5E5E5"> everything is fine</font><font color="#CCCCCC"> you execute the</font>

455
00:19:05,890 --> 00:19:12,850
the<font color="#E5E5E5"> finger directly after unification</font>

456
00:19:09,910 --> 00:19:15,580
<font color="#E5E5E5">the</font><font color="#CCCCCC"> text pootatuck is that you use a</font>

457
00:19:12,850 --> 00:19:17,889
modified boot stage<font color="#CCCCCC"> so you change it</font>

458
00:19:15,580 --> 00:19:21,040
basically so<font color="#CCCCCC"> you try</font><font color="#E5E5E5"> to push it into the</font>

459
00:19:17,890 --> 00:19:23,350
<font color="#CCCCCC">device and what is the verify signature</font>

460
00:19:21,040 --> 00:19:25,360
usually<font color="#CCCCCC"> it</font><font color="#E5E5E5"> should say yeah you're not</font>

461
00:19:23,350 --> 00:19:26,949
allowed the senior that doesn't match<font color="#CCCCCC"> so</font>

462
00:19:25,360 --> 00:19:28,780
in the<font color="#CCCCCC"> textbook back</font><font color="#E5E5E5"> try to glitch</font>

463
00:19:26,950 --> 00:19:32,169
exactly that<font color="#E5E5E5"> point in order</font><font color="#CCCCCC"> to bypass</font>

464
00:19:28,780 --> 00:19:34,899
<font color="#CCCCCC">that signature once in</font><font color="#E5E5E5"> X amount of time</font>

465
00:19:32,169 --> 00:19:37,299
<font color="#CCCCCC">if</font><font color="#E5E5E5"> the harbor is vulnerable it might</font>

466
00:19:34,900 --> 00:19:40,480
happen that for<font color="#E5E5E5"> a number of reasons</font>

467
00:19:37,299 --> 00:19:42,639
would be too long to go into at the

468
00:19:40,480 --> 00:19:44,500
moment<font color="#E5E5E5"> that verify signature might</font>

469
00:19:42,640 --> 00:19:46,600
either give a wrong result or not<font color="#E5E5E5"> be</font>

470
00:19:44,500 --> 00:19:48,970
<font color="#CCCCCC">computed and so on and depending on the</font>

471
00:19:46,600 --> 00:19:50,918
<font color="#E5E5E5">whole graph and other of things you</font>

472
00:19:48,970 --> 00:19:53,169
might<font color="#CCCCCC"> be</font><font color="#E5E5E5"> able</font><font color="#CCCCCC"> to have your malicious</font>

473
00:19:50,919 --> 00:19:56,470
boot stage executed<font color="#E5E5E5"> even if the</font>

474
00:19:53,169 --> 00:19:58,419
signature is not correct<font color="#CCCCCC"> okay this is</font>

475
00:19:56,470 --> 00:20:00,190
<font color="#CCCCCC">use</font><font color="#E5E5E5"> called instructions keep in for</font>

476
00:19:58,419 --> 00:20:02,860
smaller so<font color="#CCCCCC"> you skip</font><font color="#E5E5E5"> something that</font>

477
00:20:00,190 --> 00:20:04,600
should be<font color="#CCCCCC"> executed while it's not</font><font color="#E5E5E5"> in the</font>

478
00:20:02,860 --> 00:20:06,280
boot this<font color="#CCCCCC"> is a bit more problematic</font>

479
00:20:04,600 --> 00:20:08,740
<font color="#CCCCCC">because you have a good stage which is</font>

480
00:20:06,280 --> 00:20:11,770
<font color="#E5E5E5">encrypted then you have a signature of</font>

481
00:20:08,740 --> 00:20:13,630
<font color="#E5E5E5">course then you have a decrypt stage so</font>

482
00:20:11,770 --> 00:20:17,290
before doing anything you need to

483
00:20:13,630 --> 00:20:20,140
properly<font color="#E5E5E5"> decrypt that module which makes</font>

484
00:20:17,290 --> 00:20:22,570
everything<font color="#CCCCCC"> a quite difficult with a</font>

485
00:20:20,140 --> 00:20:24,039
normal textbook attack

486
00:20:22,570 --> 00:20:26,379
because you don't<font color="#CCCCCC"> have the encryption</font>

487
00:20:24,039 --> 00:20:29,679
key<font color="#CCCCCC"> in first</font><font color="#E5E5E5"> place</font><font color="#CCCCCC"> so you're not able to</font>

488
00:20:26,380 --> 00:20:33,009
<font color="#E5E5E5">create the</font><font color="#CCCCCC"> modified</font><font color="#E5E5E5"> boot stage in first</font>

489
00:20:29,679 --> 00:20:35,559
place<font color="#E5E5E5"> that if you bypass the signature</font>

490
00:20:33,009 --> 00:20:37,690
<font color="#CCCCCC">then</font><font color="#E5E5E5"> will be properly executed because</font>

491
00:20:35,559 --> 00:20:39,700
<font color="#E5E5E5">that would be probably garbage that is</font>

492
00:20:37,690 --> 00:20:41,440
the point<font color="#E5E5E5"> because even if you</font><font color="#CCCCCC"> bypass the</font>

493
00:20:39,700 --> 00:20:44,080
signature<font color="#E5E5E5"> you don't have the encryption</font>

494
00:20:41,440 --> 00:20:46,590
key for that<font color="#E5E5E5"> modified bootloader and</font>

495
00:20:44,080 --> 00:20:49,330
<font color="#E5E5E5">when you decrypt it will probably be</font>

496
00:20:46,590 --> 00:20:51,720
absolutely bogus<font color="#CCCCCC"> and</font><font color="#E5E5E5"> will not be able</font><font color="#CCCCCC"> to</font>

497
00:20:49,330 --> 00:20:55,199
do that<font color="#E5E5E5"> so this means that sometimes</font>

498
00:20:51,720 --> 00:20:58,029
<font color="#CCCCCC">your boot attack</font><font color="#E5E5E5"> he is a reboot is</font>

499
00:20:55,200 --> 00:20:59,679
considered a safe from faulty injection

500
00:20:58,029 --> 00:21:02,350
attacks<font color="#E5E5E5"> you might need even such an</font>

501
00:20:59,679 --> 00:21:05,710
analogous well actually<font color="#CCCCCC"> this is a bit</font>

502
00:21:02,350 --> 00:21:09,730
<font color="#E5E5E5">wrong</font><font color="#CCCCCC"> now in with new</font><font color="#E5E5E5"> absolution new</font>

503
00:21:05,710 --> 00:21:11,679
fault models well we presented in 2016

504
00:21:09,730 --> 00:21:15,490
well I represent the last<font color="#E5E5E5"> year basically</font>

505
00:21:11,679 --> 00:21:17,500
<font color="#CCCCCC">how to execute</font><font color="#E5E5E5"> code</font><font color="#CCCCCC"> in Linux kernel from</font>

506
00:21:15,490 --> 00:21:20,230
user space<font color="#E5E5E5"> by using this fault model but</font>

507
00:21:17,500 --> 00:21:22,629
let's think about it<font color="#CCCCCC"> in secure boot</font><font color="#E5E5E5"> this</font>

508
00:21:20,230 --> 00:21:25,019
<font color="#E5E5E5">is not new or this has been already in</font><font color="#CCCCCC"> a</font>

509
00:21:22,629 --> 00:21:27,158
way discussed briefly in previous papers

510
00:21:25,019 --> 00:21:29,830
<font color="#E5E5E5">but</font><font color="#CCCCCC"> I</font><font color="#E5E5E5"> think this is the first time has</font>

511
00:21:27,159 --> 00:21:31,809
been let's say more<font color="#CCCCCC"> thoroughly discussed</font>

512
00:21:29,830 --> 00:21:34,269
let's think about for a<font color="#CCCCCC"> moment only</font>

513
00:21:31,809 --> 00:21:36,279
<font color="#E5E5E5">about 30 to the prom encounter</font><font color="#CCCCCC"> is</font>

514
00:21:34,269 --> 00:21:39,549
directly<font color="#CCCCCC"> accessible in destruction</font><font color="#E5E5E5"> so</font>

515
00:21:36,279 --> 00:21:42,759
you can always do<font color="#E5E5E5"> something like move or</font>

516
00:21:39,549 --> 00:21:46,690
<font color="#E5E5E5">one two or seven or remover one</font><font color="#CCCCCC"> two PC</font>

517
00:21:42,759 --> 00:21:48,279
I mean PC can be the target register of

518
00:21:46,690 --> 00:21:51,580
the<font color="#E5E5E5"> destination register of a</font><font color="#CCCCCC"> movie</font>

519
00:21:48,279 --> 00:21:55,120
<font color="#CCCCCC">instruction well basically if you take</font>

520
00:21:51,580 --> 00:21:56,918
up<font color="#E5E5E5"> move or any instruction that use a</font>

521
00:21:55,120 --> 00:21:58,928
<font color="#E5E5E5">destination register you might be able</font>

522
00:21:56,919 --> 00:22:01,750
<font color="#CCCCCC">to corrupt</font><font color="#E5E5E5"> it so that the destination</font>

523
00:21:58,929 --> 00:22:04,179
register<font color="#CCCCCC"> is not the intended one but</font>

524
00:22:01,750 --> 00:22:07,090
program counter so basically what's

525
00:22:04,179 --> 00:22:09,820
happening is<font color="#CCCCCC"> that the operands that</font>

526
00:22:07,090 --> 00:22:12,730
<font color="#CCCCCC">should</font><font color="#E5E5E5"> be going to our</font><font color="#CCCCCC"> seven for example</font>

527
00:22:09,820 --> 00:22:17,168
in the first<font color="#E5E5E5"> one will go</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> the PC which</font>

528
00:22:12,730 --> 00:22:20,080
<font color="#E5E5E5">ill immediately trigger different code</font>

529
00:22:17,169 --> 00:22:22,120
execution<font color="#E5E5E5"> path let's look about the LDR</font>

530
00:22:20,080 --> 00:22:24,009
<font color="#E5E5E5">so you are reading some frame from</font>

531
00:22:22,120 --> 00:22:26,860
memory in<font color="#E5E5E5"> our one I should go in</font><font color="#CCCCCC"> toward</font>

532
00:22:24,009 --> 00:22:29,590
<font color="#E5E5E5">zero well if you bleach and</font><font color="#CCCCCC"> your</font><font color="#E5E5E5"> payload</font>

533
00:22:26,860 --> 00:22:31,658
<font color="#E5E5E5">is prepared sufficiently that payload</font>

534
00:22:29,590 --> 00:22:33,908
which should go into<font color="#CCCCCC"> r1 for</font><font color="#E5E5E5"> example</font>

535
00:22:31,659 --> 00:22:35,910
<font color="#E5E5E5">during a</font><font color="#CCCCCC"> memory copy is going to end up</font>

536
00:22:33,909 --> 00:22:38,610
<font color="#CCCCCC">into PC so</font><font color="#E5E5E5"> in</font><font color="#CCCCCC"> two</font>

537
00:22:35,910 --> 00:22:40,530
what you are copying<font color="#CCCCCC"> who is going to be</font>

538
00:22:38,610 --> 00:22:45,030
the<font color="#E5E5E5"> address where the PC is</font><font color="#CCCCCC"> going to end</font>

539
00:22:40,530 --> 00:22:48,389
up okay<font color="#CCCCCC"> okay this seems to be quite</font>

540
00:22:45,030 --> 00:22:50,700
interesting<font color="#CCCCCC"> this</font><font color="#E5E5E5"> is not theory has been</font>

541
00:22:48,390 --> 00:22:53,790
<font color="#CCCCCC">already proven so I'm not providing</font><font color="#E5E5E5"> any</font>

542
00:22:50,700 --> 00:22:55,980
<font color="#CCCCCC">additional</font><font color="#E5E5E5"> if you need paper reference</font>

543
00:22:53,790 --> 00:22:59,450
and let me know I<font color="#E5E5E5"> can actually provide</font>

544
00:22:55,980 --> 00:23:01,680
them<font color="#E5E5E5"> in the end if you</font><font color="#CCCCCC"> the PC is not</font>

545
00:22:59,450 --> 00:23:03,600
available<font color="#E5E5E5"> this on addressable you can</font>

546
00:23:01,680 --> 00:23:05,190
also do the<font color="#E5E5E5"> same in other architecture</font>

547
00:23:03,600 --> 00:23:07,770
with<font color="#E5E5E5"> a stack pointer is available</font>

548
00:23:05,190 --> 00:23:10,950
basically<font color="#CCCCCC"> and then you enable some drop</font>

549
00:23:07,770 --> 00:23:13,290
<font color="#E5E5E5">kind of exploration parts but it's clear</font>

550
00:23:10,950 --> 00:23:15,120
that's<font color="#E5E5E5"> if you can put in the program</font>

551
00:23:13,290 --> 00:23:16,980
<font color="#E5E5E5">counter or whatever you want because</font>

552
00:23:15,120 --> 00:23:18,479
<font color="#CCCCCC">that's the data that is being copied</font><font color="#E5E5E5"> at</font>

553
00:23:16,980 --> 00:23:20,310
the moment it's clear<font color="#E5E5E5"> it's a basically</font>

554
00:23:18,480 --> 00:23:22,160
<font color="#E5E5E5">game over</font><font color="#CCCCCC"> it's like that your buffer or</font>

555
00:23:20,310 --> 00:23:26,010
flow with<font color="#E5E5E5"> the leveling vulnerability</font>

556
00:23:22,160 --> 00:23:27,900
<font color="#E5E5E5">okay so basically if you look at now at</font>

557
00:23:26,010 --> 00:23:29,820
the suitable encryption<font color="#E5E5E5"> take a look at</font>

558
00:23:27,900 --> 00:23:31,950
the payloads<font color="#E5E5E5"> the payload is done there</font>

559
00:23:29,820 --> 00:23:33,870
is<font color="#CCCCCC"> a plain text payload is not an</font>

560
00:23:31,950 --> 00:23:37,560
encrypted payload at the moment and at

561
00:23:33,870 --> 00:23:39,689
the end there is<font color="#E5E5E5"> a sled that has a stage</font>

562
00:23:37,560 --> 00:23:41,639
<font color="#CCCCCC">add what what is stage other stays</font><font color="#E5E5E5"> at</font>

563
00:23:39,690 --> 00:23:44,490
<font color="#E5E5E5">other is worth the payload is being</font>

564
00:23:41,640 --> 00:23:48,570
loaded<font color="#E5E5E5"> okay so when you actually load</font>

565
00:23:44,490 --> 00:23:50,820
the<font color="#E5E5E5"> payload</font><font color="#CCCCCC"> you are coping</font><font color="#E5E5E5"> basically the</font>

566
00:23:48,570 --> 00:23:54,899
payload in stage<font color="#CCCCCC"> odd that's where it</font>

567
00:23:50,820 --> 00:23:58,649
ends<font color="#E5E5E5"> but at the</font><font color="#CCCCCC"> end</font><font color="#E5E5E5"> you are also copying</font>

568
00:23:54,900 --> 00:24:01,170
the stage add address itself and if you

569
00:23:58,650 --> 00:24:04,830
glitch during<font color="#E5E5E5"> that point in time then</font>

570
00:24:01,170 --> 00:24:06,690
<font color="#E5E5E5">that address is going</font><font color="#CCCCCC"> to end on pbc</font><font color="#E5E5E5"> then</font>

571
00:24:04,830 --> 00:24:09,210
if the program<font color="#CCCCCC"> counter is set to that</font>

572
00:24:06,690 --> 00:24:12,000
address<font color="#E5E5E5"> assuming</font><font color="#CCCCCC"> that the</font><font color="#E5E5E5"> destination</font>

573
00:24:09,210 --> 00:24:13,740
memory is executable<font color="#E5E5E5"> PC will start from</font>

574
00:24:12,000 --> 00:24:16,290
stage<font color="#CCCCCC"> odd robot is there at</font><font color="#E5E5E5"> that point</font>

575
00:24:13,740 --> 00:24:18,420
<font color="#E5E5E5">there is the your plaintext payload at</font>

576
00:24:16,290 --> 00:24:20,310
that point in time<font color="#E5E5E5"> and the point is that</font>

577
00:24:18,420 --> 00:24:22,680
this<font color="#CCCCCC"> is before the decryption phase and</font>

578
00:24:20,310 --> 00:24:25,710
the rest will never be<font color="#E5E5E5"> executed so</font>

579
00:24:22,680 --> 00:24:28,320
basically you are<font color="#E5E5E5"> loading plaintext and</font>

580
00:24:25,710 --> 00:24:30,330
executing a paint<font color="#E5E5E5"> X payload during an</font>

581
00:24:28,320 --> 00:24:31,800
encrypted<font color="#E5E5E5"> so your boot by using a</font>

582
00:24:30,330 --> 00:24:33,540
different fault model<font color="#E5E5E5"> there is</font><font color="#CCCCCC"> no</font>

583
00:24:31,800 --> 00:24:35,370
<font color="#E5E5E5">instruction skipping here this is called</font>

584
00:24:33,540 --> 00:24:37,590
<font color="#E5E5E5">instruction corruption or instruction</font>

585
00:24:35,370 --> 00:24:39,419
modification and thinking along this way

586
00:24:37,590 --> 00:24:41,189
you can enable the number of<font color="#E5E5E5"> things</font>

587
00:24:39,420 --> 00:24:46,220
which have<font color="#CCCCCC"> been exploded</font><font color="#E5E5E5"> in other talks</font>

588
00:24:41,190 --> 00:24:46,220
<font color="#CCCCCC">that</font><font color="#E5E5E5"> can break a lot of assumptions</font>

589
00:24:48,080 --> 00:24:57,350
this should be excuse me yeah<font color="#E5E5E5"> okay so</font>

590
00:24:55,490 --> 00:24:59,030
that part is<font color="#E5E5E5"> never executed the problem</font>

591
00:24:57,350 --> 00:25:00,800
is<font color="#E5E5E5"> that Fulton Jacksonville derbies have</font>

592
00:24:59,030 --> 00:25:02,899
located<font color="#E5E5E5"> the physical level</font><font color="#CCCCCC"> and they</font>

593
00:25:00,800 --> 00:25:04,460
cannot be identified<font color="#E5E5E5"> by any software</font><font color="#CCCCCC"> or</font>

594
00:25:02,900 --> 00:25:08,060
software<font color="#CCCCCC"> curve you can</font><font color="#E5E5E5"> stare at</font><font color="#CCCCCC"> her</font>

595
00:25:04,460 --> 00:25:09,560
<font color="#E5E5E5">blood very log or VHDL</font><font color="#CCCCCC"> or even by</font>

596
00:25:08,060 --> 00:25:11,360
<font color="#CCCCCC">looking at physically at the</font>

597
00:25:09,560 --> 00:25:14,600
<font color="#CCCCCC">implementation or the code whatever</font><font color="#E5E5E5"> you</font>

598
00:25:11,360 --> 00:25:16,760
want you will<font color="#E5E5E5"> never be able be able to</font>

599
00:25:14,600 --> 00:25:19,219
<font color="#E5E5E5">rule out fault injection vulnerability</font>

600
00:25:16,760 --> 00:25:21,350
similar goes for SGA although with a bit

601
00:25:19,220 --> 00:25:24,230
different approach<font color="#E5E5E5"> so</font><font color="#CCCCCC"> the only point</font>

602
00:25:21,350 --> 00:25:25,879
<font color="#E5E5E5">then you can do is that testing</font><font color="#CCCCCC"> the real</font>

603
00:25:24,230 --> 00:25:28,370
<font color="#CCCCCC">implementation so you need to actually</font>

604
00:25:25,880 --> 00:25:31,640
test if the harbor<font color="#E5E5E5"> is sensitive to that</font>

605
00:25:28,370 --> 00:25:32,780
kind of glitching<font color="#E5E5E5"> not necessarily doing</font>

606
00:25:31,640 --> 00:25:34,730
the full attack here but you<font color="#E5E5E5"> to</font>

607
00:25:32,780 --> 00:25:37,490
understand if the<font color="#E5E5E5"> harbor actual response</font>

608
00:25:34,730 --> 00:25:38,930
as you<font color="#CCCCCC"> would expect so not</font><font color="#E5E5E5"> necessarily</font>

609
00:25:37,490 --> 00:25:41,240
go<font color="#E5E5E5"> into the full attack because if it's</font>

610
00:25:38,930 --> 00:25:43,880
so this testing should be performed

611
00:25:41,240 --> 00:25:45,500
<font color="#E5E5E5">right after silicon iteration because</font>

612
00:25:43,880 --> 00:25:47,210
this<font color="#E5E5E5"> test this</font><font color="#CCCCCC"> Wonderworld</font><font color="#E5E5E5"> but it may</font>

613
00:25:45,500 --> 00:25:49,640
affect<font color="#CCCCCC"> the entire classes of device so</font>

614
00:25:47,210 --> 00:25:51,530
<font color="#CCCCCC">when to want</font><font color="#E5E5E5"> to catch</font><font color="#CCCCCC"> it up as</font><font color="#E5E5E5"> soon</font><font color="#CCCCCC"> as</font>

615
00:25:49,640 --> 00:25:55,700
<font color="#CCCCCC">possible as soon</font><font color="#E5E5E5"> as out of</font><font color="#CCCCCC"> the</font><font color="#E5E5E5"> factory</font>

616
00:25:51,530 --> 00:25:57,560
<font color="#E5E5E5">basically so this is a also an</font>

617
00:25:55,700 --> 00:26:00,890
assumption that should be really<font color="#CCCCCC"> cleared</font>

618
00:25:57,560 --> 00:26:03,639
out<font color="#E5E5E5"> from the mind of software developer</font>

619
00:26:00,890 --> 00:26:06,110
even<font color="#CCCCCC"> harbor</font><font color="#E5E5E5"> developer sometimes okay</font>

620
00:26:03,640 --> 00:26:07,910
so the point is<font color="#E5E5E5"> that if you</font><font color="#CCCCCC"> have faulty</font>

621
00:26:06,110 --> 00:26:09,709
injection in your<font color="#E5E5E5"> first model issue that</font>

622
00:26:07,910 --> 00:26:11,630
<font color="#CCCCCC">your stock manufacturer for security but</font>

623
00:26:09,710 --> 00:26:13,880
<font color="#E5E5E5">which</font><font color="#CCCCCC"> to</font><font color="#E5E5E5"> report</font><font color="#CCCCCC"> because if they don't</font>

624
00:26:11,630 --> 00:26:16,550
<font color="#E5E5E5">have</font><font color="#CCCCCC"> one then issue</font><font color="#E5E5E5"> assume for the worst</font>

625
00:26:13,880 --> 00:26:19,580
<font color="#E5E5E5">because</font><font color="#CCCCCC"> they even cannot didn't consider</font>

626
00:26:16,550 --> 00:26:21,440
the problem<font color="#CCCCCC"> in first</font><font color="#E5E5E5"> place do not rely</font>

627
00:26:19,580 --> 00:26:23,240
only on<font color="#E5E5E5"> other software audits so if</font>

628
00:26:21,440 --> 00:26:24,530
<font color="#E5E5E5">someone's told will review the code that</font>

629
00:26:23,240 --> 00:26:27,890
<font color="#CCCCCC">you'd the very</font><font color="#E5E5E5"> dock we said I</font><font color="#CCCCCC"> don't</font>

630
00:26:24,530 --> 00:26:29,389
<font color="#CCCCCC">think you know enough your work then</font><font color="#E5E5E5"> so</font>

631
00:26:27,890 --> 00:26:31,160
beta either your<font color="#CCCCCC"> account control measure</font>

632
00:26:29,390 --> 00:26:34,300
<font color="#CCCCCC">your</font><font color="#E5E5E5"> painfully and desperate boozing</font>

633
00:26:31,160 --> 00:26:37,670
<font color="#CCCCCC">bonus this</font><font color="#E5E5E5"> one would be faster</font>

634
00:26:34,300 --> 00:26:39,649
<font color="#CCCCCC">consistency</font><font color="#E5E5E5"> the point is that the</font><font color="#CCCCCC"> entire</font>

635
00:26:37,670 --> 00:26:41,750
system seems to<font color="#CCCCCC"> have been some people's</font>

636
00:26:39,650 --> 00:26:44,390
mind only<font color="#E5E5E5"> one threat model and there is</font>

637
00:26:41,750 --> 00:26:47,090
only one asset like<font color="#E5E5E5"> process separation</font>

638
00:26:44,390 --> 00:26:49,130
for our Linux or other things which

639
00:26:47,090 --> 00:26:51,439
might be<font color="#E5E5E5"> relevant in</font><font color="#CCCCCC"> your use case so</font>

640
00:26:49,130 --> 00:26:54,620
just some trees<font color="#CCCCCC"> that across this entire</font>

641
00:26:51,440 --> 00:26:56,690
mess of<font color="#CCCCCC"> 200 different components and</font>

642
00:26:54,620 --> 00:26:59,030
supply chain there is<font color="#E5E5E5"> only one single</font>

643
00:26:56,690 --> 00:27:00,800
threat model in mind<font color="#E5E5E5"> I think</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> is</font>

644
00:26:59,030 --> 00:27:01,080
already some problem already with<font color="#E5E5E5"> disk</font>

645
00:27:00,800 --> 00:27:03,930
and

646
00:27:01,080 --> 00:27:05,639
assumption<font color="#E5E5E5"> from the start for example</font>

647
00:27:03,930 --> 00:27:07,590
<font color="#CCCCCC">typically your model is that</font><font color="#E5E5E5"> you</font><font color="#CCCCCC"> have a</font>

648
00:27:05,640 --> 00:27:10,200
<font color="#E5E5E5">kernel</font><font color="#CCCCCC"> that</font><font color="#E5E5E5"> enforces the use process</font>

649
00:27:07,590 --> 00:27:11,909
separation nice<font color="#CCCCCC"> we kept on talking about</font>

650
00:27:10,200 --> 00:27:12,360
<font color="#E5E5E5">user space and</font><font color="#CCCCCC"> kernels protection for</font>

651
00:27:11,910 --> 00:27:14,820
days

652
00:27:12,360 --> 00:27:18,540
good<font color="#E5E5E5"> then you think about it when the</font>

653
00:27:14,820 --> 00:27:21,870
user te is only that part only<font color="#CCCCCC"> you might</font>

654
00:27:18,540 --> 00:27:24,840
have another kernel<font color="#E5E5E5"> with an Ivor visor</font>

655
00:27:21,870 --> 00:27:28,560
you might have<font color="#E5E5E5"> even a te good do we</font>

656
00:27:24,840 --> 00:27:31,770
actually always all of<font color="#CCCCCC"> them help to</font>

657
00:27:28,560 --> 00:27:34,440
enforce this nice<font color="#E5E5E5"> process of race on</font><font color="#CCCCCC"> end</font>

658
00:27:31,770 --> 00:27:35,970
user space kernel separation well I'm

659
00:27:34,440 --> 00:27:38,970
not so sure because in the<font color="#E5E5E5"> disagree</font>

660
00:27:35,970 --> 00:27:40,680
<font color="#E5E5E5">security model well they're the</font><font color="#CCCCCC"> ree</font>

661
00:27:38,970 --> 00:27:42,240
<font color="#E5E5E5">where all the things are that</font><font color="#CCCCCC"> we</font>

662
00:27:40,680 --> 00:27:45,120
<font color="#CCCCCC">actually use are something</font><font color="#E5E5E5"> to protect</font>

663
00:27:42,240 --> 00:27:47,160
from<font color="#E5E5E5"> are not something to protect the</font>

664
00:27:45,120 --> 00:27:48,419
separation also also<font color="#E5E5E5"> there are more</font>

665
00:27:47,160 --> 00:27:51,540
<font color="#E5E5E5">about the point is that there is no</font>

666
00:27:48,420 --> 00:27:54,000
intention<font color="#E5E5E5"> to protect theory so this</font>

667
00:27:51,540 --> 00:27:56,250
means<font color="#CCCCCC"> that things</font><font color="#E5E5E5"> like these that the</font>

668
00:27:54,000 --> 00:28:00,000
<font color="#E5E5E5">tea itself which is completely unaware</font>

669
00:27:56,250 --> 00:28:02,520
of user a memory could be exploited

670
00:28:00,000 --> 00:28:05,460
<font color="#E5E5E5">could be leveraged from user</font><font color="#CCCCCC"> space in</font>

671
00:28:02,520 --> 00:28:07,440
order to<font color="#E5E5E5"> web us and exploit the kernel</font>

672
00:28:05,460 --> 00:28:09,660
space because well in this<font color="#E5E5E5"> case the</font>

673
00:28:07,440 --> 00:28:11,700
driver<font color="#E5E5E5"> did</font><font color="#CCCCCC"> not do</font><font color="#E5E5E5"> exactly a very good</font>

674
00:28:09,660 --> 00:28:14,010
<font color="#E5E5E5">job but he had no way of this thing</font>

675
00:28:11,700 --> 00:28:15,150
which<font color="#E5E5E5"> is</font><font color="#CCCCCC"> just memory</font><font color="#E5E5E5"> so the point is</font>

676
00:28:14,010 --> 00:28:16,800
<font color="#E5E5E5">that you might have</font><font color="#CCCCCC"> different view</font>

677
00:28:15,150 --> 00:28:18,810
<font color="#E5E5E5">remodels at the same time which may not</font>

678
00:28:16,800 --> 00:28:22,399
<font color="#E5E5E5">be</font><font color="#CCCCCC"> a very trader which you can sorry</font><font color="#E5E5E5"> you</font>

679
00:28:18,810 --> 00:28:25,770
can<font color="#E5E5E5"> even use you one of these the other</font>

680
00:28:22,400 --> 00:28:29,010
<font color="#E5E5E5">so even this one should</font><font color="#CCCCCC"> be actually be</font>

681
00:28:25,770 --> 00:28:30,420
dismissed<font color="#E5E5E5"> and recommendation is that you</font>

682
00:28:29,010 --> 00:28:32,520
<font color="#E5E5E5">need to understand components you</font>

683
00:28:30,420 --> 00:28:34,860
remodel and to evaluate<font color="#E5E5E5"> them with your</font>

684
00:28:32,520 --> 00:28:37,080
final<font color="#E5E5E5"> system threat model because there</font>

685
00:28:34,860 --> 00:28:40,620
<font color="#E5E5E5">may be no consistent across threat</font>

686
00:28:37,080 --> 00:28:43,560
models and you should expect<font color="#CCCCCC"> none last</font>

687
00:28:40,620 --> 00:28:44,909
one is thinking that there<font color="#E5E5E5"> is only one</font>

688
00:28:43,560 --> 00:28:46,320
subsystem<font color="#CCCCCC"> the one that you are</font>

689
00:28:44,910 --> 00:28:48,090
<font color="#E5E5E5">considering on the or the one that</font><font color="#CCCCCC"> you</font>

690
00:28:46,320 --> 00:28:51,169
<font color="#CCCCCC">are developing</font><font color="#E5E5E5"> or the one you are</font>

691
00:28:48,090 --> 00:28:54,870
designing<font color="#E5E5E5"> people only</font><font color="#CCCCCC"> things about that</font>

692
00:28:51,170 --> 00:28:57,270
protecting it from<font color="#E5E5E5"> the typical threat</font>

693
00:28:54,870 --> 00:28:59,040
model attackers<font color="#E5E5E5"> the problem is that this</font>

694
00:28:57,270 --> 00:29:00,930
<font color="#E5E5E5">is all just</font><font color="#CCCCCC"> a</font><font color="#E5E5E5"> simplistic model you have</font>

695
00:28:59,040 --> 00:29:03,629
a CPU<font color="#CCCCCC"> and you have memory</font><font color="#E5E5E5"> but the</font>

696
00:29:00,930 --> 00:29:05,160
reality is<font color="#CCCCCC"> that theory</font><font color="#E5E5E5"> of the CPU a year</font>

697
00:29:03,630 --> 00:29:07,860
you<font color="#CCCCCC"> have memory that there are many</font>

698
00:29:05,160 --> 00:29:09,690
other<font color="#E5E5E5"> APIs that can</font><font color="#CCCCCC"> access memory</font><font color="#E5E5E5"> so</font>

699
00:29:07,860 --> 00:29:11,399
this means that<font color="#CCCCCC"> whatever the CPU thinks</font>

700
00:29:09,690 --> 00:29:13,840
is being separated might be not

701
00:29:11,400 --> 00:29:16,330
separated at all<font color="#E5E5E5"> but</font>

702
00:29:13,840 --> 00:29:18,280
so this means<font color="#E5E5E5"> for</font><font color="#CCCCCC"> example the reason for</font>

703
00:29:16,330 --> 00:29:21,280
broad pound work you exploit the Wi-Fi

704
00:29:18,280 --> 00:29:23,590
sock<font color="#E5E5E5"> then</font><font color="#CCCCCC"> divisible nobody in there then</font>

705
00:29:21,280 --> 00:29:26,050
the wife sock sock is just<font color="#CCCCCC"> C memory as</font>

706
00:29:23,590 --> 00:29:29,290
memory<font color="#E5E5E5"> doesn't care</font><font color="#CCCCCC"> but can</font><font color="#E5E5E5"> use</font><font color="#CCCCCC"> arranges</font>

707
00:29:26,050 --> 00:29:31,540
rise to memory<font color="#E5E5E5"> and then there you modify</font>

708
00:29:29,290 --> 00:29:33,639
the kernel and<font color="#CCCCCC"> then</font><font color="#E5E5E5"> this point basically</font>

709
00:29:31,540 --> 00:29:37,090
when domain sock actually uses the

710
00:29:33,640 --> 00:29:40,510
kernel is modified<font color="#E5E5E5"> so at this point you</font>

711
00:29:37,090 --> 00:29:43,600
have a<font color="#CCCCCC"> acronym code execution</font><font color="#E5E5E5"> without</font>

712
00:29:40,510 --> 00:29:46,300
even touching the main sock<font color="#E5E5E5"> so this is a</font>

713
00:29:43,600 --> 00:29:48,100
quite<font color="#CCCCCC"> interesting is that a sock are</font>

714
00:29:46,300 --> 00:29:51,610
exactly execution<font color="#CCCCCC"> unit you don't have</font>

715
00:29:48,100 --> 00:29:53,169
one<font color="#CCCCCC"> you</font><font color="#E5E5E5"> have many many more and other</font>

716
00:29:51,610 --> 00:29:55,240
socks may<font color="#E5E5E5"> have access to</font><font color="#CCCCCC"> the same main</font>

717
00:29:53,170 --> 00:29:58,990
memory where<font color="#CCCCCC"> you think your</font><font color="#E5E5E5"> security</font>

718
00:29:55,240 --> 00:30:00,550
model is based<font color="#E5E5E5"> upon and then they may</font>

719
00:29:58,990 --> 00:30:02,290
<font color="#E5E5E5">not be aware</font><font color="#CCCCCC"> of</font><font color="#E5E5E5"> each other so you</font><font color="#CCCCCC"> de</font>

720
00:30:00,550 --> 00:30:04,389
<font color="#CCCCCC">moda because we will discover us</font><font color="#E5E5E5"> space</font>

721
00:30:02,290 --> 00:30:07,360
<font color="#E5E5E5">in sock one is completely addressable</font>

722
00:30:04,390 --> 00:30:10,180
memory in sub<font color="#CCCCCC"> two</font><font color="#E5E5E5"> so breaks of</font><font color="#CCCCCC"> two and</font>

723
00:30:07,360 --> 00:30:11,320
then the<font color="#E5E5E5"> rest</font><font color="#CCCCCC"> will</font><font color="#E5E5E5"> just</font><font color="#CCCCCC"> fall so what</font>

724
00:30:10,180 --> 00:30:12,880
could<font color="#E5E5E5"> have been done</font><font color="#CCCCCC"> you should</font><font color="#E5E5E5"> have</font>

725
00:30:11,320 --> 00:30:14,290
been reviewing the<font color="#E5E5E5"> code and testing</font>

726
00:30:12,880 --> 00:30:16,600
<font color="#E5E5E5">that's what's very important you</font><font color="#CCCCCC"> should</font>

727
00:30:14,290 --> 00:30:18,550
have an<font color="#CCCCCC"> smmu dealing their bodies line</font>

728
00:30:16,600 --> 00:30:22,480
if it's<font color="#E5E5E5"> not there there is some problems</font>

729
00:30:18,550 --> 00:30:24,220
and<font color="#E5E5E5"> you might have in your</font><font color="#CCCCCC"> design yes</font>

730
00:30:22,480 --> 00:30:27,610
<font color="#CCCCCC">it's</font><font color="#E5E5E5"> telling me that</font><font color="#CCCCCC"> is about time</font>

731
00:30:24,220 --> 00:30:30,250
and finally<font color="#CCCCCC"> you also</font><font color="#E5E5E5"> need to</font><font color="#CCCCCC"> properly</font>

732
00:30:27,610 --> 00:30:32,649
configure<font color="#E5E5E5"> that usually in a te on the</font>

733
00:30:30,250 --> 00:30:34,600
boot stage layer<font color="#E5E5E5"> you know it in the main</font>

734
00:30:32,650 --> 00:30:37,270
sock<font color="#CCCCCC"> and also we are missing our</font>

735
00:30:34,600 --> 00:30:40,419
execution<font color="#E5E5E5"> units</font><font color="#CCCCCC"> DMA capable IPS</font><font color="#E5E5E5"> and</font>

736
00:30:37,270 --> 00:30:43,990
other bus masters all of them so this

737
00:30:40,420 --> 00:30:46,300
means<font color="#CCCCCC"> that basically</font><font color="#E5E5E5"> I've seen a ship</font>

738
00:30:43,990 --> 00:30:49,630
set where there are were in<font color="#E5E5E5"> excess of</font>

739
00:30:46,300 --> 00:30:52,899
100 dma engine<font color="#E5E5E5"> in my experience so good</font>

740
00:30:49,630 --> 00:30:54,970
luck with securing<font color="#E5E5E5"> that so also this one</font>

741
00:30:52,900 --> 00:30:56,620
should<font color="#CCCCCC"> be dismissed I would say that</font>

742
00:30:54,970 --> 00:31:00,390
this<font color="#E5E5E5"> is a quote</font><font color="#CCCCCC"> from a movie I would</font>

743
00:30:56,620 --> 00:31:02,949
<font color="#CCCCCC">like</font><font color="#E5E5E5"> to change this like this and</font>

744
00:31:00,390 --> 00:31:04,600
conclusion<font color="#E5E5E5"> I'm actually</font><font color="#CCCCCC"> they're</font><font color="#E5E5E5"> a bit</font>

745
00:31:02,950 --> 00:31:06,970
over a few deflection<font color="#CCCCCC"> system</font><font color="#E5E5E5"> security</font>

746
00:31:04,600 --> 00:31:09,310
threat models may differ between

747
00:31:06,970 --> 00:31:12,400
components<font color="#CCCCCC"> and the security model of the</font>

748
00:31:09,310 --> 00:31:14,620
system<font color="#E5E5E5"> is completely</font><font color="#CCCCCC"> different from</font><font color="#E5E5E5"> the</font>

749
00:31:12,400 --> 00:31:16,450
<font color="#E5E5E5">sum or</font><font color="#CCCCCC"> the security of</font><font color="#E5E5E5"> each component so</font>

750
00:31:14,620 --> 00:31:18,280
if you look at<font color="#E5E5E5"> 10 100 components in</font>

751
00:31:16,450 --> 00:31:20,440
isolation<font color="#E5E5E5"> without thinking at system</font>

752
00:31:18,280 --> 00:31:22,840
level<font color="#E5E5E5"> you might have have big problems</font>

753
00:31:20,440 --> 00:31:25,440
when<font color="#E5E5E5"> you're doing it as</font><font color="#CCCCCC"> you devaluation</font>

754
00:31:22,840 --> 00:31:27,299
<font color="#E5E5E5">you need the context you need the system</font>

755
00:31:25,440 --> 00:31:28,679
information for understanding<font color="#CCCCCC"> what is</font>

756
00:31:27,299 --> 00:31:31,019
<font color="#E5E5E5">the impact that always will not be able</font>

757
00:31:28,679 --> 00:31:33,330
<font color="#CCCCCC">to assess it and could</font><font color="#E5E5E5"> review and not</font>

758
00:31:31,019 --> 00:31:35,279
identify all the<font color="#CCCCCC"> vulnerabilities</font><font color="#E5E5E5"> your</font>

759
00:31:33,330 --> 00:31:37,740
design hardware<font color="#E5E5E5"> software</font><font color="#CCCCCC"> must cooperate</font>

760
00:31:35,279 --> 00:31:39,929
<font color="#CCCCCC">across the whole system I would have</font>

761
00:31:37,740 --> 00:31:42,779
more examples<font color="#CCCCCC"> but this</font><font color="#E5E5E5"> is not the right</font>

762
00:31:39,929 --> 00:31:45,419
moment<font color="#CCCCCC"> but this should happen regardless</font>

763
00:31:42,779 --> 00:31:49,370
of manufacturers or<font color="#CCCCCC"> Department</font><font color="#E5E5E5"> or</font><font color="#CCCCCC"> teams</font>

764
00:31:45,419 --> 00:31:51,360
boundary there is no point in<font color="#CCCCCC"> having</font>

765
00:31:49,370 --> 00:31:53,549
hardware and software teams not

766
00:31:51,360 --> 00:31:55,229
cooperating nowadays in some agency<font color="#E5E5E5"> your</font>

767
00:31:53,549 --> 00:31:58,200
<font color="#CCCCCC">product really is like shooting</font><font color="#E5E5E5"> yourself</font>

768
00:31:55,230 --> 00:32:00,720
<font color="#E5E5E5">in your foot you need to protect</font><font color="#CCCCCC"> from</font>

769
00:31:58,200 --> 00:32:02,909
other<font color="#E5E5E5"> subsystem not only from the</font>

770
00:32:00,720 --> 00:32:04,919
external attackers<font color="#E5E5E5"> because from your</font>

771
00:32:02,909 --> 00:32:08,039
<font color="#E5E5E5">point of view in defense in depth the</font>

772
00:32:04,919 --> 00:32:10,110
rest<font color="#E5E5E5"> is also not occur so the point is</font>

773
00:32:08,039 --> 00:32:12,539
<font color="#E5E5E5">that uncheck consumption can bring some</font>

774
00:32:10,110 --> 00:32:14,490
<font color="#E5E5E5">problems so my recommendation establish</font>

775
00:32:12,539 --> 00:32:16,529
a<font color="#E5E5E5"> system level threat model and apply</font>

776
00:32:14,490 --> 00:32:19,080
and verify consistency everywhere across

777
00:32:16,529 --> 00:32:21,779
<font color="#CCCCCC">the</font><font color="#E5E5E5"> system</font><font color="#CCCCCC"> and this should be done even</font>

778
00:32:19,080 --> 00:32:23,730
<font color="#CCCCCC">before designing</font><font color="#E5E5E5"> the system of starting</font>

779
00:32:21,779 --> 00:32:26,100
<font color="#E5E5E5">that or even buying some</font><font color="#CCCCCC"> you should have</font>

780
00:32:23,730 --> 00:32:29,879
clear<font color="#E5E5E5"> what you want to protect</font><font color="#CCCCCC"> and from</font>

781
00:32:26,100 --> 00:32:32,730
whom<font color="#E5E5E5"> that's and how in terms of what</font>

782
00:32:29,879 --> 00:32:33,840
kind of attacks are applicable so for

783
00:32:32,730 --> 00:32:35,399
every component try to have an

784
00:32:33,840 --> 00:32:38,070
<font color="#CCCCCC">understanding</font><font color="#E5E5E5"> of the use case and the</font>

785
00:32:35,399 --> 00:32:40,559
factory models and this when a you have

786
00:32:38,070 --> 00:32:42,539
a<font color="#E5E5E5"> security</font><font color="#CCCCCC"> assessment and testing you</font>

787
00:32:40,559 --> 00:32:43,860
must consider<font color="#E5E5E5"> this system threat model</font>

788
00:32:42,539 --> 00:32:46,620
if<font color="#CCCCCC"> you don't have one you have</font><font color="#E5E5E5"> a very</font>

789
00:32:43,860 --> 00:32:48,899
big problem<font color="#CCCCCC"> and every time you buy</font>

790
00:32:46,620 --> 00:32:51,059
something<font color="#E5E5E5"> basically ask for a flat model</font>

791
00:32:48,899 --> 00:32:52,889
security practices and processes<font color="#E5E5E5"> and a</font>

792
00:32:51,059 --> 00:32:54,690
security<font color="#CCCCCC"> valuation report</font><font color="#E5E5E5"> because you're</font>

793
00:32:52,889 --> 00:33:00,600
<font color="#CCCCCC">already</font><font color="#E5E5E5"> paying for it you have just</font>

794
00:32:54,690 --> 00:33:06,419
asking probably questions any questions

795
00:33:00,600 --> 00:33:08,340
from room Thank<font color="#E5E5E5"> You Christopher over the</font>

796
00:33:06,419 --> 00:33:10,909
very interesting talk<font color="#E5E5E5"> when you go back</font>

797
00:33:08,340 --> 00:33:15,209
one slide please the<font color="#CCCCCC"> last recommendation</font>

798
00:33:10,909 --> 00:33:16,440
<font color="#E5E5E5">the last recommendation to get from</font><font color="#CCCCCC"> ESO</font>

799
00:33:15,210 --> 00:33:18,149
every component<font color="#CCCCCC"> the threat model</font>

800
00:33:16,440 --> 00:33:20,100
<font color="#CCCCCC">security</font><font color="#E5E5E5"> practice and processes and</font>

801
00:33:18,149 --> 00:33:24,178
<font color="#E5E5E5">security variation report how</font>

802
00:33:20,100 --> 00:33:26,399
practically<font color="#E5E5E5"> you think that is the point</font>

803
00:33:24,179 --> 00:33:28,710
for this<font color="#E5E5E5"> is not necessarily obtaining</font>

804
00:33:26,399 --> 00:33:32,070
but sufficiently<font color="#CCCCCC"> greying creating a</font>

805
00:33:28,710 --> 00:33:34,019
pressure<font color="#E5E5E5"> in order to let the components</font>

806
00:33:32,070 --> 00:33:37,120
and suppliers understand that<font color="#E5E5E5"> this can</font>

807
00:33:34,019 --> 00:33:39,070
<font color="#CCCCCC">make a</font><font color="#E5E5E5"> difference in their product</font>

808
00:33:37,120 --> 00:33:40,750
establish security years value<font color="#E5E5E5"> I would</font>

809
00:33:39,070 --> 00:33:43,149
<font color="#E5E5E5">not expect that</font><font color="#CCCCCC"> you actually receive it</font>

810
00:33:40,750 --> 00:33:45,460
but<font color="#E5E5E5"> the fact that the</font><font color="#CCCCCC"> u.s. get for it</font><font color="#E5E5E5"> we</font>

811
00:33:43,150 --> 00:33:47,170
start<font color="#CCCCCC"> making a difference</font><font color="#E5E5E5"> between people</font>

812
00:33:45,460 --> 00:33:49,390
<font color="#CCCCCC">who are going to</font><font color="#E5E5E5"> provide you a bit</font><font color="#CCCCCC"> more</font>

813
00:33:47,170 --> 00:33:52,000
and<font color="#E5E5E5"> provide you a bit less so this would</font>

814
00:33:49,390 --> 00:33:54,400
be a way<font color="#CCCCCC"> of providing a</font><font color="#E5E5E5"> model where</font>

815
00:33:52,000 --> 00:33:57,910
security<font color="#E5E5E5"> is a value and</font><font color="#CCCCCC"> not only so much</font>

816
00:33:54,400 --> 00:34:00,970
<font color="#CCCCCC">the cost so it's more an enabler and</font><font color="#E5E5E5"> an</font>

817
00:33:57,910 --> 00:34:03,010
<font color="#CCCCCC">initiator rather than as we having</font>

818
00:34:00,970 --> 00:34:04,920
<font color="#E5E5E5">results now all right thanks</font><font color="#CCCCCC"> you're</font>

819
00:34:03,010 --> 00:34:10,780
welcome

820
00:34:04,920 --> 00:34:12,010
any more questions<font color="#CCCCCC"> no okay I want</font><font color="#E5E5E5"> to</font>

821
00:34:10,780 --> 00:34:15,930
<font color="#E5E5E5">thank you good stuff</font>

822
00:34:12,010 --> 00:34:15,930
<font color="#CCCCCC">I still have for this</font><font color="#E5E5E5"> great talk</font>

