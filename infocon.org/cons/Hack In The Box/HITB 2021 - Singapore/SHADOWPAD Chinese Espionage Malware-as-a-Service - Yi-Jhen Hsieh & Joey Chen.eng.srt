1
00:00:12,880 --> 00:00:14,719
good afternoon everyone thanks for

2
00:00:14,719 --> 00:00:15,839
joining

3
00:00:15,839 --> 00:00:17,760
today we are going to talk about shadow

4
00:00:17,760 --> 00:00:20,560
pad one of the most successful paid back

5
00:00:20,560 --> 00:00:23,199
doors in chinese espionage

6
00:00:23,199 --> 00:00:25,119
shadow pad was used as the primary

7
00:00:25,119 --> 00:00:27,840
backdoors for several infamous attacks

8
00:00:27,840 --> 00:00:30,560
including sea cleaner net sauron and

9
00:00:30,560 --> 00:00:33,200
shadowhammer supply chain attacks

10
00:00:33,200 --> 00:00:35,600
in this talk we would like to address

11
00:00:35,600 --> 00:00:37,760
the following questions

12
00:00:37,760 --> 00:00:40,239
why did it become the primary choice in

13
00:00:40,239 --> 00:00:42,399
those high impact attacks

14
00:00:42,399 --> 00:00:44,719
what makes it so special in the pages of

15
00:00:44,719 --> 00:00:46,800
chinese espionage

16
00:00:46,800 --> 00:00:48,800
what threat actors are using shadow pad

17
00:00:48,800 --> 00:00:50,640
in their operations

18
00:00:50,640 --> 00:00:52,320
and ultimately

19
00:00:52,320 --> 00:00:55,039
how does the emerge emergence of shadow

20
00:00:55,039 --> 00:00:57,120
pad impact the wider threat landscape

21
00:00:57,120 --> 00:01:00,718
from chinese espionage actors

22
00:01:00,960 --> 00:01:03,280
i'm ejen and now i'm a threat

23
00:01:03,280 --> 00:01:05,680
intelligence researcher at san juan

24
00:01:05,680 --> 00:01:08,320
i personally focus on malware analysis

25
00:01:08,320 --> 00:01:10,640
and chinese-based espionage campaign

26
00:01:10,640 --> 00:01:12,880
tracking

27
00:01:12,880 --> 00:01:15,200
i'm joy chen and also a threat

28
00:01:15,200 --> 00:01:18,000
intelligence researcher at 701

29
00:01:18,000 --> 00:01:21,040
my major area was research

30
00:01:21,040 --> 00:01:23,280
including insulin response apd

31
00:01:23,280 --> 00:01:26,080
investigation malwa analysis and

32
00:01:26,080 --> 00:01:29,520
cryptography analysis

33
00:01:31,040 --> 00:01:33,520
today we will start with some background

34
00:01:33,520 --> 00:01:35,600
history of shadowpath

35
00:01:35,600 --> 00:01:38,000
then we will dig into its technical

36
00:01:38,000 --> 00:01:40,079
details and the business model behind

37
00:01:40,079 --> 00:01:41,520
this backdoor

38
00:01:41,520 --> 00:01:44,000
after that we will introduce some of the

39
00:01:44,000 --> 00:01:46,720
threat actors who are using shadowpad

40
00:01:46,720 --> 00:01:48,799
and how shadowpad changes the actors

41
00:01:48,799 --> 00:01:51,200
operations in the landscape

42
00:01:51,200 --> 00:01:53,040
at the end we will provide some

43
00:01:53,040 --> 00:01:55,759
medication advice on how to discover the

44
00:01:55,759 --> 00:01:57,840
potential infection of shadow pad in

45
00:01:57,840 --> 00:02:01,200
your cooperation network

46
00:02:01,920 --> 00:02:03,920
before we jump into the details of

47
00:02:03,920 --> 00:02:05,040
shadow pad

48
00:02:05,040 --> 00:02:06,560
let's start from some historical

49
00:02:06,560 --> 00:02:09,840
background of it

50
00:02:09,840 --> 00:02:10,720
so

51
00:02:10,720 --> 00:02:12,800
what is shadowpad

52
00:02:12,800 --> 00:02:15,200
it is a modular backdoor which means

53
00:02:15,200 --> 00:02:17,760
it's formed of a bunch of plugins

54
00:02:17,760 --> 00:02:20,800
and it is in show code format

55
00:02:20,800 --> 00:02:22,720
every plugin contains a specific

56
00:02:22,720 --> 00:02:24,160
functionality

57
00:02:24,160 --> 00:02:26,800
and you can plug or unplug a plugin in

58
00:02:26,800 --> 00:02:29,440
memory from the cnc server

59
00:02:29,440 --> 00:02:31,440
this offers good extendability to

60
00:02:31,440 --> 00:02:34,480
shadowpad's functionality

61
00:02:34,480 --> 00:02:36,319
shadowpad has been used by some

62
00:02:36,319 --> 00:02:38,480
high-profile threat actors

63
00:02:38,480 --> 00:02:40,640
and it was used in those campaigns as

64
00:02:40,640 --> 00:02:44,879
one of the primary factors for intrusion

65
00:02:45,120 --> 00:02:47,760
for example it appeared in some

66
00:02:47,760 --> 00:02:49,280
well-known supply chain attacks

67
00:02:49,280 --> 00:02:52,400
conducted by apd-41 including

68
00:02:52,400 --> 00:02:53,599
sea cleaner

69
00:02:53,599 --> 00:02:56,000
sauron and shadowhammer

70
00:02:56,000 --> 00:02:58,159
another high-profile group tick and

71
00:02:58,159 --> 00:03:01,120
tonto team also used it to attack japan

72
00:03:01,120 --> 00:03:03,760
aerospace exploration agency and other

73
00:03:03,760 --> 00:03:04,959
victims

74
00:03:04,959 --> 00:03:08,720
we'll cover more details later

75
00:03:10,080 --> 00:03:12,080
when we trace back to the emergence of

76
00:03:12,080 --> 00:03:13,200
shadow pad

77
00:03:13,200 --> 00:03:15,200
we need to spend some time discussing

78
00:03:15,200 --> 00:03:18,879
another backdoor called plug x clock x

79
00:03:18,879 --> 00:03:21,200
is also a plugin based backdoor in show

80
00:03:21,200 --> 00:03:22,800
code format

81
00:03:22,800 --> 00:03:24,799
the major difference between plug x and

82
00:03:24,799 --> 00:03:26,560
shadow pad is that

83
00:03:26,560 --> 00:03:29,200
the plugins of plug x cannot be plugged

84
00:03:29,200 --> 00:03:32,080
or unplugged during runtime

85
00:03:32,080 --> 00:03:34,640
regarding the users of the two backdoors

86
00:03:34,640 --> 00:03:36,720
shuttlepad is only shared beyond a

87
00:03:36,720 --> 00:03:39,680
limited set of users at least based on

88
00:03:39,680 --> 00:03:41,360
our knowledge

89
00:03:41,360 --> 00:03:44,239
while plugix is widely used and sold to

90
00:03:44,239 --> 00:03:47,840
different people in public

91
00:03:49,280 --> 00:03:50,959
what's the relationship between these

92
00:03:50,959 --> 00:03:52,560
two backdoors

93
00:03:52,560 --> 00:03:54,959
these are there are already some reports

94
00:03:54,959 --> 00:03:57,360
that discuss their code similarity and

95
00:03:57,360 --> 00:04:00,239
we will not cover more on this part here

96
00:04:00,239 --> 00:04:02,400
because we discovered another piece of

97
00:04:02,400 --> 00:04:04,640
evidence

98
00:04:04,640 --> 00:04:07,360
actually plug x and shadow pad share the

99
00:04:07,360 --> 00:04:09,760
same project name sc

100
00:04:09,760 --> 00:04:12,239
we extracted the pdb strings of their

101
00:04:12,239 --> 00:04:14,640
controllers and you can see

102
00:04:14,640 --> 00:04:18,079
s controller and sc here

103
00:04:18,079 --> 00:04:20,720
this suggests that shadowpad is highly

104
00:04:20,720 --> 00:04:23,840
likely the successor project to plugx

105
00:04:23,840 --> 00:04:28,039
with a related project base

106
00:04:29,120 --> 00:04:32,320
if we dig deeper to the author of plug x

107
00:04:32,320 --> 00:04:36,800
we can trace back to the name whg aka

108
00:04:36,800 --> 00:04:39,440
he was based in sinchon china

109
00:04:39,440 --> 00:04:41,520
and he was an experienced programmer

110
00:04:41,520 --> 00:04:43,360
with deep knowledge of backdoors and

111
00:04:43,360 --> 00:04:45,280
hacking tools

112
00:04:45,280 --> 00:04:48,000
according to a report from atnt his

113
00:04:48,000 --> 00:04:50,479
nickname showed up in some plug examples

114
00:04:50,479 --> 00:04:52,960
like here

115
00:04:54,160 --> 00:04:56,880
besides he claimed that he was selling

116
00:04:56,880 --> 00:04:59,360
some shared software on his personal

117
00:04:59,360 --> 00:05:02,560
website back in 2006

118
00:05:02,560 --> 00:05:04,720
which it means that he was used to

119
00:05:04,720 --> 00:05:07,120
monetizing his mower development skills

120
00:05:07,120 --> 00:05:09,520
and the program he produced

121
00:05:09,520 --> 00:05:10,400
also

122
00:05:10,400 --> 00:05:12,560
he was sharing some deep connections

123
00:05:12,560 --> 00:05:14,320
with one of the biggest users of

124
00:05:14,320 --> 00:05:18,000
shadowpad abd41 and we will address this

125
00:05:18,000 --> 00:05:20,320
later

126
00:05:21,759 --> 00:05:24,080
so after the background introduction we

127
00:05:24,080 --> 00:05:27,840
can move to something more technical

128
00:05:28,479 --> 00:05:31,039
as i mentioned earlier shadowpad is a

129
00:05:31,039 --> 00:05:33,440
modular design

130
00:05:33,440 --> 00:05:35,600
it is one of a bunch of plugins with

131
00:05:35,600 --> 00:05:38,400
different functionalities inside this

132
00:05:38,400 --> 00:05:41,199
picture shows the brief concept

133
00:05:41,199 --> 00:05:43,759
first there is a layer of affascated

134
00:05:43,759 --> 00:05:45,440
shocker loader

135
00:05:45,440 --> 00:05:47,360
it decrypts and loads a plugin called

136
00:05:47,360 --> 00:05:49,680
root

137
00:05:49,680 --> 00:05:52,479
the opposition is quite simple it adds

138
00:05:52,479 --> 00:05:55,759
an e8 in the middle of the code blocks

139
00:05:55,759 --> 00:05:58,240
so the disassembler will mistranslate

140
00:05:58,240 --> 00:05:59,360
the ea

141
00:05:59,360 --> 00:06:00,479
to a

142
00:06:00,479 --> 00:06:02,800
to a call instruction

143
00:06:02,800 --> 00:06:04,319
and the following assembly will be

144
00:06:04,319 --> 00:06:07,280
messed up so if you want to fix the

145
00:06:07,280 --> 00:06:08,400
instruction

146
00:06:08,400 --> 00:06:10,880
just modify the e8

147
00:06:10,880 --> 00:06:12,800
to null bytes or not after two

148
00:06:12,800 --> 00:06:15,520
conditional jumps to the same address

149
00:06:15,520 --> 00:06:17,280
by this way you will get the correct

150
00:06:17,280 --> 00:06:21,440
assemblies and the control flow

151
00:06:21,440 --> 00:06:23,440
so the shortcut loader decrypts and

152
00:06:23,440 --> 00:06:25,840
loads root

153
00:06:25,840 --> 00:06:28,560
you can easily tell what root is by its

154
00:06:28,560 --> 00:06:29,520
name

155
00:06:29,520 --> 00:06:32,000
is the very basic plugin to decrypt and

156
00:06:32,000 --> 00:06:34,080
load other plugins which are embedded

157
00:06:34,080 --> 00:06:35,680
inside the samples

158
00:06:35,680 --> 00:06:37,440
and it will contain the block of

159
00:06:37,440 --> 00:06:40,560
encrypted configuration

160
00:06:40,639 --> 00:06:43,120
the plugins will be loaded into memories

161
00:06:43,120 --> 00:06:45,039
and they will be kept in the links list

162
00:06:45,039 --> 00:06:47,600
for further reference

163
00:06:47,600 --> 00:06:49,599
on the right is the structure of the

164
00:06:49,599 --> 00:06:51,919
plug-in node in the links list

165
00:06:51,919 --> 00:06:54,160
there is some metadata inside

166
00:06:54,160 --> 00:06:56,319
like the timestamp of the plugin the

167
00:06:56,319 --> 00:06:57,599
plugin id

168
00:06:57,599 --> 00:07:00,160
the sites the base memory address of the

169
00:07:00,160 --> 00:07:02,479
plugin and the export function table

170
00:07:02,479 --> 00:07:04,800
address

171
00:07:04,800 --> 00:07:06,880
aside from the plugins embedded in the

172
00:07:06,880 --> 00:07:07,840
sample

173
00:07:07,840 --> 00:07:09,919
additional plugins could be uploaded to

174
00:07:09,919 --> 00:07:13,520
infected hosts from the cnc servers

175
00:07:13,520 --> 00:07:16,479
for example if the disk plugin is not

176
00:07:16,479 --> 00:07:18,160
embedded in the sample at the first

177
00:07:18,160 --> 00:07:19,360
place

178
00:07:19,360 --> 00:07:21,759
after shadowpad connects back to the cnc

179
00:07:21,759 --> 00:07:24,400
server the attacker can upload the disk

180
00:07:24,400 --> 00:07:26,880
plugin through the controller

181
00:07:26,880 --> 00:07:28,880
the plugin will be sent to the infected

182
00:07:28,880 --> 00:07:31,440
computer and the back door will decrypt

183
00:07:31,440 --> 00:07:34,080
it load it into the memory and store the

184
00:07:34,080 --> 00:07:36,960
plugin inside a linked list as well

185
00:07:36,960 --> 00:07:39,280
this gives the user a big flexibility to

186
00:07:39,280 --> 00:07:43,638
add plugins whenever they need

187
00:07:45,840 --> 00:07:48,080
every plugin has a fixed format of its

188
00:07:48,080 --> 00:07:50,000
start function

189
00:07:50,000 --> 00:07:52,160
this is this function will be referenced

190
00:07:52,160 --> 00:07:53,599
several time

191
00:07:53,599 --> 00:07:55,120
and the different command id will

192
00:07:55,120 --> 00:07:57,360
trigger a different action

193
00:07:57,360 --> 00:07:58,879
so for example

194
00:07:58,879 --> 00:08:01,039
if the command id is 1

195
00:08:01,039 --> 00:08:04,080
the export function table will be failed

196
00:08:04,080 --> 00:08:06,240
command 64 will present the plugin

197
00:08:06,240 --> 00:08:08,879
installation routine

198
00:08:08,879 --> 00:08:11,840
command 66 returns the plugin id and the

199
00:08:11,840 --> 00:08:12,879
command

200
00:08:12,879 --> 00:08:15,919
67 returns the plugin name

201
00:08:15,919 --> 00:08:18,000
these two commands are quite useful when

202
00:08:18,000 --> 00:08:19,919
you want to retrieve the plugin name and

203
00:08:19,919 --> 00:08:22,240
id dynamically

204
00:08:22,240 --> 00:08:24,639
and plugging 68 will return the base

205
00:08:24,639 --> 00:08:29,199
address of the export function table

206
00:08:31,039 --> 00:08:33,679
from the sample sets we collected we got

207
00:08:33,679 --> 00:08:36,399
22 unique plugins

208
00:08:36,399 --> 00:08:38,559
i briefly divide the plugins into two

209
00:08:38,559 --> 00:08:40,159
sets

210
00:08:40,159 --> 00:08:43,039
the first step is basic set

211
00:08:43,039 --> 00:08:45,200
this set of plugins cover the routine

212
00:08:45,200 --> 00:08:47,760
from the installation of shuttle pad and

213
00:08:47,760 --> 00:08:50,320
firing back the first become connection

214
00:08:50,320 --> 00:08:52,640
back to the cnc server

215
00:08:52,640 --> 00:08:55,760
in other words with this set of plugins

216
00:08:55,760 --> 00:08:57,600
the backdoor can build the connection

217
00:08:57,600 --> 00:08:59,279
with cnc servers

218
00:08:59,279 --> 00:09:01,839
but at this moment it will not contain

219
00:09:01,839 --> 00:09:05,680
any other backdoor functionalities

220
00:09:06,399 --> 00:09:09,360
and the second set is utilities

221
00:09:09,360 --> 00:09:11,600
this set contains a plugin with all

222
00:09:11,600 --> 00:09:14,000
kinds of backdoor functionalities

223
00:09:14,000 --> 00:09:16,880
such as browsing disks managing services

224
00:09:16,880 --> 00:09:18,240
and registries

225
00:09:18,240 --> 00:09:20,240
executing show commands

226
00:09:20,240 --> 00:09:24,000
key logging screen control and so on

227
00:09:24,000 --> 00:09:26,160
only with this plugins shutterpad can

228
00:09:26,160 --> 00:09:27,680
present the functionalities of a

229
00:09:27,680 --> 00:09:29,040
backdoor

230
00:09:29,040 --> 00:09:32,399
so to use shadowpad the user definitely

231
00:09:32,399 --> 00:09:36,839
need to have utility plugins

232
00:09:37,600 --> 00:09:40,080
regarding the configurations this table

233
00:09:40,080 --> 00:09:41,680
shows all of the columns in the

234
00:09:41,680 --> 00:09:43,680
configuration

235
00:09:43,680 --> 00:09:46,480
the first two columns of set product key

236
00:09:46,480 --> 00:09:49,200
and offset nodes are the identifiers of

237
00:09:49,200 --> 00:09:50,720
the campaign

238
00:09:50,720 --> 00:09:53,600
they could be randomly generated

239
00:09:53,600 --> 00:09:56,320
and later it comes the binary path

240
00:09:56,320 --> 00:09:58,480
and some service settings and run key

241
00:09:58,480 --> 00:10:00,000
registries

242
00:10:00,000 --> 00:10:02,320
so the default name of the service is my

243
00:10:02,320 --> 00:10:03,279
test

244
00:10:03,279 --> 00:10:06,320
so this could be a useful indicator to

245
00:10:06,320 --> 00:10:08,079
check shadow pack infections in some

246
00:10:08,079 --> 00:10:09,200
cases

247
00:10:09,200 --> 00:10:11,839
and when you see a service named my test

248
00:10:11,839 --> 00:10:14,000
or if you see a wrong key with names

249
00:10:14,000 --> 00:10:16,640
like my test probably it's

250
00:10:16,640 --> 00:10:19,839
it's one of the shadow pad

251
00:10:19,839 --> 00:10:23,440
shadow pad infections on your house

252
00:10:23,440 --> 00:10:25,360
and the spawn process to do code

253
00:10:25,360 --> 00:10:28,480
injection here and the cnc servers proxy

254
00:10:28,480 --> 00:10:32,040
types and dns

255
00:10:32,640 --> 00:10:34,480
in 2020

256
00:10:34,480 --> 00:10:36,320
another new version of shadowpad was

257
00:10:36,320 --> 00:10:38,959
found by positive technologies

258
00:10:38,959 --> 00:10:40,880
the infection chain of the new version

259
00:10:40,880 --> 00:10:43,920
includes three components

260
00:10:43,920 --> 00:10:46,399
the first one is a legitimate executable

261
00:10:46,399 --> 00:10:48,000
look.exe

262
00:10:48,000 --> 00:10:49,920
and it will site load an obfuscated

263
00:10:49,920 --> 00:10:52,880
loader called lock.dll

264
00:10:52,880 --> 00:10:55,120
this loader will then read and decrypts

265
00:10:55,120 --> 00:10:59,800
another piece of payload log.d8t

266
00:11:00,720 --> 00:11:03,120
is the main show code of shadowpad which

267
00:11:03,120 --> 00:11:04,880
is also obfuscated with the same

268
00:11:04,880 --> 00:11:07,200
technique

269
00:11:07,200 --> 00:11:09,279
the obfuscation technique is new to

270
00:11:09,279 --> 00:11:10,480
shadowpad

271
00:11:10,480 --> 00:11:12,640
the control flow is flattened by each

272
00:11:12,640 --> 00:11:14,240
instruction

273
00:11:14,240 --> 00:11:14,959
so

274
00:11:14,959 --> 00:11:17,279
as this picture shows

275
00:11:17,279 --> 00:11:19,519
after an infection and

276
00:11:19,519 --> 00:11:21,519
instruction is executed

277
00:11:21,519 --> 00:11:23,360
there will be another function to jump

278
00:11:23,360 --> 00:11:25,760
to the next instruction

279
00:11:25,760 --> 00:11:27,760
and after that function is called

280
00:11:27,760 --> 00:11:29,360
there's a d word

281
00:11:29,360 --> 00:11:31,680
this d word represents the offset of the

282
00:11:31,680 --> 00:11:34,480
next instruction to jump to

283
00:11:34,480 --> 00:11:36,880
by this it will be harder to do static

284
00:11:36,880 --> 00:11:38,880
analysis on the sample

285
00:11:38,880 --> 00:11:40,880
we need to reassemble the struct

286
00:11:40,880 --> 00:11:45,040
instructions to proceed further analysis

287
00:11:45,680 --> 00:11:47,600
the configuration of this new version

288
00:11:47,600 --> 00:11:50,079
looks pretty similar to the previous one

289
00:11:50,079 --> 00:11:52,399
except that it includes more details of

290
00:11:52,399 --> 00:11:54,000
the infection chain

291
00:11:54,000 --> 00:11:56,720
so as here shows there are columns for

292
00:11:56,720 --> 00:11:59,360
installation directory the legitimate

293
00:11:59,360 --> 00:12:01,519
executable name loader name and the

294
00:12:01,519 --> 00:12:04,240
payload name

295
00:12:06,240 --> 00:12:08,480
next we are going to introduce one

296
00:12:08,480 --> 00:12:11,120
version of the shuttle pad controllers

297
00:12:11,120 --> 00:12:13,440
we discovered it in an attacker's

298
00:12:13,440 --> 00:12:15,920
hacking package

299
00:12:15,920 --> 00:12:18,000
the controller helps us a lot in the

300
00:12:18,000 --> 00:12:19,040
research

301
00:12:19,040 --> 00:12:21,120
because it allows us to get a much

302
00:12:21,120 --> 00:12:23,839
closer look at how shutter pad works and

303
00:12:23,839 --> 00:12:26,959
how it was originally designed

304
00:12:26,959 --> 00:12:30,880
this one is version 1.0 in 2015 and it

305
00:12:30,880 --> 00:12:32,959
was written in delphi

306
00:12:32,959 --> 00:12:35,279
the controller contains both the binary

307
00:12:35,279 --> 00:12:38,800
builder and the cnc listener e1

308
00:12:38,800 --> 00:12:40,720
the shutterback sample built by this

309
00:12:40,720 --> 00:12:42,880
controller are a bit simpler than the

310
00:12:42,880 --> 00:12:44,959
later version on the string description

311
00:12:44,959 --> 00:12:46,160
algorithm

312
00:12:46,160 --> 00:12:48,160
but the samples are already constructed

313
00:12:48,160 --> 00:12:50,000
in a very much similar way to the

314
00:12:50,000 --> 00:12:53,200
samples after 2017.

315
00:12:53,200 --> 00:12:55,200
when we take a closer look at the list

316
00:12:55,200 --> 00:12:57,279
on the left hand side there are several

317
00:12:57,279 --> 00:12:59,680
options

318
00:12:59,680 --> 00:13:01,600
users is the interface to check the

319
00:13:01,600 --> 00:13:03,440
infected hots

320
00:13:03,440 --> 00:13:04,839
as here

321
00:13:04,839 --> 00:13:07,839
shows transfer lists all of the

322
00:13:07,839 --> 00:13:09,760
uploading and downloading text in

323
00:13:09,760 --> 00:13:12,079
progress

324
00:13:12,079 --> 00:13:14,320
listen is cnc listener

325
00:13:14,320 --> 00:13:16,240
you can configure the protocols you want

326
00:13:16,240 --> 00:13:18,480
to use and the ports to listen to on the

327
00:13:18,480 --> 00:13:20,959
listeners

328
00:13:20,959 --> 00:13:24,320
setting is empty in this version

329
00:13:24,320 --> 00:13:26,800
and builder is literally the

330
00:13:26,800 --> 00:13:30,240
binary builder of shadow pad

331
00:13:31,120 --> 00:13:33,360
by right clicking on a single infection

332
00:13:33,360 --> 00:13:35,519
host we will enter the management

333
00:13:35,519 --> 00:13:38,720
console of the back door

334
00:13:38,959 --> 00:13:41,120
first you will see the default plugin

335
00:13:41,120 --> 00:13:42,000
list

336
00:13:42,000 --> 00:13:43,920
this plugins are the plugins which are

337
00:13:43,920 --> 00:13:45,760
embedded in the backdoor samples by

338
00:13:45,760 --> 00:13:47,519
default

339
00:13:47,519 --> 00:13:49,760
if you want to use other plugins you

340
00:13:49,760 --> 00:13:51,839
need to right click on the console

341
00:13:51,839 --> 00:13:55,199
choose add and import the plugins

342
00:13:55,199 --> 00:13:58,639
and the plugins will be uploaded

343
00:13:58,639 --> 00:14:00,800
after that you will see the

344
00:14:00,800 --> 00:14:03,040
uploaded plugins in red and you can

345
00:14:03,040 --> 00:14:04,800
start using those plugins with the

346
00:14:04,800 --> 00:14:07,440
manual on the left

347
00:14:07,440 --> 00:14:11,760
to be noted you can only upload the

348
00:14:11,760 --> 00:14:14,000
you can only upload the plugins but the

349
00:14:14,000 --> 00:14:17,120
list of the control interface is fixed

350
00:14:17,120 --> 00:14:19,440
so even if you have an additional plugin

351
00:14:19,440 --> 00:14:21,680
like a plugin type here

352
00:14:21,680 --> 00:14:23,519
you still cannot use it

353
00:14:23,519 --> 00:14:25,600
because there is no control interface of

354
00:14:25,600 --> 00:14:28,480
pipe in the list

355
00:14:29,440 --> 00:14:31,839
then here comes the builder

356
00:14:31,839 --> 00:14:33,600
the builder allows us to configure

357
00:14:33,600 --> 00:14:35,040
different columns

358
00:14:35,040 --> 00:14:37,839
like campaign code and nodes

359
00:14:37,839 --> 00:14:40,240
they can also be randomly generated by a

360
00:14:40,240 --> 00:14:42,240
bottom

361
00:14:42,240 --> 00:14:44,399
and then there are some anti-debugging

362
00:14:44,399 --> 00:14:47,760
settings like anti-debugger ntvm

363
00:14:47,760 --> 00:14:49,279
anti-sandbox

364
00:14:49,279 --> 00:14:52,079
checking applications and so on

365
00:14:52,079 --> 00:14:54,320
in the installation settings we can

366
00:14:54,320 --> 00:14:55,600
configure the service name and

367
00:14:55,600 --> 00:14:56,959
description

368
00:14:56,959 --> 00:14:59,199
and the wrong key registry we want to

369
00:14:59,199 --> 00:15:00,959
use

370
00:15:00,959 --> 00:15:03,519
also we can modify the process to be

371
00:15:03,519 --> 00:15:06,639
spawned and injected during runtime

372
00:15:06,639 --> 00:15:08,560
of course we can add the cnc servers

373
00:15:08,560 --> 00:15:12,800
with different protocols to connect to

374
00:15:12,800 --> 00:15:14,959
after we finish the setting we can

375
00:15:14,959 --> 00:15:17,040
export the current setting and then

376
00:15:17,040 --> 00:15:20,160
export them import them next time

377
00:15:20,160 --> 00:15:22,639
and then we just need to build it

378
00:15:22,639 --> 00:15:24,839
there is an option of building it as an

379
00:15:24,839 --> 00:15:28,240
executable but the loader is pretty dumb

380
00:15:28,240 --> 00:15:30,320
we didn't source any samples with this

381
00:15:30,320 --> 00:15:32,160
loader

382
00:15:32,160 --> 00:15:33,920
this function might be improved in a

383
00:15:33,920 --> 00:15:36,399
later version but it seems that most of

384
00:15:36,399 --> 00:15:38,320
the users only generate show codes and

385
00:15:38,320 --> 00:15:42,399
use their own loaders with this button

386
00:15:44,240 --> 00:15:46,399
the discovery of the controller allows

387
00:15:46,399 --> 00:15:48,800
us to get more deeply

388
00:15:48,800 --> 00:15:51,199
on how shadowpad works from the attacker

389
00:15:51,199 --> 00:15:52,320
side

390
00:15:52,320 --> 00:15:54,399
in the next section we are going to

391
00:15:54,399 --> 00:15:56,560
introduce the ecosystem and the business

392
00:15:56,560 --> 00:15:59,040
model in high shadow pad from our

393
00:15:59,040 --> 00:16:02,639
observations and assessments

394
00:16:03,839 --> 00:16:05,519
let's start with the structure of the

395
00:16:05,519 --> 00:16:07,360
controller

396
00:16:07,360 --> 00:16:10,399
the plugins are placed in a directory

397
00:16:10,399 --> 00:16:12,320
whenever the user needs to upload the

398
00:16:12,320 --> 00:16:13,279
plugin

399
00:16:13,279 --> 00:16:14,959
they can choose the one they need from

400
00:16:14,959 --> 00:16:16,560
the directory

401
00:16:16,560 --> 00:16:18,240
so in theory

402
00:16:18,240 --> 00:16:20,560
any plugin encrypted and

403
00:16:20,560 --> 00:16:22,320
compressed in the correct format could

404
00:16:22,320 --> 00:16:23,839
be uploaded

405
00:16:23,839 --> 00:16:26,320
if anyone wants to add a new plugin he

406
00:16:26,320 --> 00:16:28,639
or she can develop one and upload it to

407
00:16:28,639 --> 00:16:31,120
the client side

408
00:16:31,120 --> 00:16:32,160
but

409
00:16:32,160 --> 00:16:33,920
in practice

410
00:16:33,920 --> 00:16:35,839
the user needs an interface on the

411
00:16:35,839 --> 00:16:38,720
controller to interact with the plugins

412
00:16:38,720 --> 00:16:40,800
when we check on controller

413
00:16:40,800 --> 00:16:43,040
we will see those interfaces listed on

414
00:16:43,040 --> 00:16:45,759
the left and there is no other option to

415
00:16:45,759 --> 00:16:47,839
upload a new interface for any new

416
00:16:47,839 --> 00:16:49,360
plugin

417
00:16:49,360 --> 00:16:51,360
which means the controller is not

418
00:16:51,360 --> 00:16:54,000
designed to accept new plugins

419
00:16:54,000 --> 00:16:56,320
the list of available plugins is highly

420
00:16:56,320 --> 00:16:59,680
controlled by the developer

421
00:17:01,600 --> 00:17:04,319
based on the controller we now know that

422
00:17:04,319 --> 00:17:06,000
shutter pad is not designed to be

423
00:17:06,000 --> 00:17:08,640
extendable by a random user

424
00:17:08,640 --> 00:17:11,199
the developer controls which plugins

425
00:17:11,199 --> 00:17:13,119
could be added and used

426
00:17:13,119 --> 00:17:15,520
so shadowpad is not an open framework

427
00:17:15,520 --> 00:17:17,839
like metasploit to accept other

428
00:17:17,839 --> 00:17:21,119
self-developed plugins

429
00:17:21,199 --> 00:17:23,679
then what is it designed to be a plugin

430
00:17:23,679 --> 00:17:26,240
based malware and allows remote upload

431
00:17:26,240 --> 00:17:28,160
to the plugin

432
00:17:28,160 --> 00:17:30,960
probably it is because the developer can

433
00:17:30,960 --> 00:17:33,120
easily control the plugins to be used by

434
00:17:33,120 --> 00:17:34,799
any user

435
00:17:34,799 --> 00:17:37,520
if the developer wants to move or remove

436
00:17:37,520 --> 00:17:39,360
certain functionalities

437
00:17:39,360 --> 00:17:41,600
he or she only needs to remove that

438
00:17:41,600 --> 00:17:43,520
plugin from the directory

439
00:17:43,520 --> 00:17:45,200
and does not need to recompile the

440
00:17:45,200 --> 00:17:49,280
controller and the mower to be built

441
00:17:51,200 --> 00:17:52,160
next

442
00:17:52,160 --> 00:17:54,160
let's check the plugins embedded inside

443
00:17:54,160 --> 00:17:56,000
the samples

444
00:17:56,000 --> 00:17:58,160
as i described beforehand

445
00:17:58,160 --> 00:18:00,000
there are some plugins embedded in the

446
00:18:00,000 --> 00:18:01,840
sample by default

447
00:18:01,840 --> 00:18:04,000
and additional plugins can be uploaded

448
00:18:04,000 --> 00:18:06,480
remotely later on

449
00:18:06,480 --> 00:18:08,960
we plot the plugin numbers across around

450
00:18:08,960 --> 00:18:11,440
100 samples

451
00:18:11,440 --> 00:18:12,880
as you can see

452
00:18:12,880 --> 00:18:15,120
most of the samples only contain less

453
00:18:15,120 --> 00:18:16,640
than 9 plugins

454
00:18:16,640 --> 00:18:19,520
the plugins are the basic sets including

455
00:18:19,520 --> 00:18:23,280
root plugins config install online and

456
00:18:23,280 --> 00:18:26,480
the plugins for cnc communication

457
00:18:26,480 --> 00:18:28,400
these plugins can only finish the

458
00:18:28,400 --> 00:18:30,720
installation and send the bitcoin to the

459
00:18:30,720 --> 00:18:32,640
cnc server

460
00:18:32,640 --> 00:18:34,400
no other functionalities could be

461
00:18:34,400 --> 00:18:36,160
presented

462
00:18:36,160 --> 00:18:38,160
if the attackers want to use other

463
00:18:38,160 --> 00:18:39,200
functions

464
00:18:39,200 --> 00:18:41,200
they need to upload those plugins from

465
00:18:41,200 --> 00:18:44,320
the cnc servers

466
00:18:44,880 --> 00:18:47,200
other two distributions are both special

467
00:18:47,200 --> 00:18:49,120
cases

468
00:18:49,120 --> 00:18:51,120
the samples with 10 plugins are a

469
00:18:51,120 --> 00:18:54,080
special version packed by vm protect

470
00:18:54,080 --> 00:18:55,600
and all of the plugins are with

471
00:18:55,600 --> 00:18:57,600
different plugin ids

472
00:18:57,600 --> 00:18:59,360
the samples might have been used by

473
00:18:59,360 --> 00:19:02,559
apd-41 for some campaigns including

474
00:19:02,559 --> 00:19:05,280
shadow hammer

475
00:19:06,160 --> 00:19:08,720
the final category is the samples with

476
00:19:08,720 --> 00:19:10,799
additional utility plugins embedded in

477
00:19:10,799 --> 00:19:11,760
them

478
00:19:11,760 --> 00:19:14,480
which means the attackers by default can

479
00:19:14,480 --> 00:19:16,720
use those plugins with without uploading

480
00:19:16,720 --> 00:19:18,720
them manually

481
00:19:18,720 --> 00:19:20,720
the samples in this category are all

482
00:19:20,720 --> 00:19:23,120
packed by the same packers

483
00:19:23,120 --> 00:19:24,960
while the packers seem not to be

484
00:19:24,960 --> 00:19:26,880
provided by default with the shadow pad

485
00:19:26,880 --> 00:19:28,480
builders

486
00:19:28,480 --> 00:19:30,720
the users of this set of samples might

487
00:19:30,720 --> 00:19:32,880
have been some people high privileged

488
00:19:32,880 --> 00:19:34,880
access to shadow pad

489
00:19:34,880 --> 00:19:37,200
and the developer of shadowpad provides

490
00:19:37,200 --> 00:19:39,360
them a special version of filter to

491
00:19:39,360 --> 00:19:41,679
build the samples with utility plugins

492
00:19:41,679 --> 00:19:44,480
embedded in them

493
00:19:46,000 --> 00:19:48,960
from the above observation we can see

494
00:19:48,960 --> 00:19:51,280
that most of the samples do not have

495
00:19:51,280 --> 00:19:54,320
utility plugins embedded in them

496
00:19:54,320 --> 00:19:56,720
the users need to upload other utility

497
00:19:56,720 --> 00:19:59,440
plugins remotely through the controller

498
00:19:59,440 --> 00:20:02,000
and as i mentioned earlier the plugins

499
00:20:02,000 --> 00:20:04,960
can be easily removed from the package

500
00:20:04,960 --> 00:20:06,480
you just need to remove them from the

501
00:20:06,480 --> 00:20:08,799
directory

502
00:20:08,799 --> 00:20:11,760
besides we found tick use a tool with

503
00:20:11,760 --> 00:20:13,840
the same functionality of plugin called

504
00:20:13,840 --> 00:20:17,039
software in the overlapped time frame

505
00:20:17,039 --> 00:20:19,200
tech was one of the active users of

506
00:20:19,200 --> 00:20:21,600
shadowpad and started to have access to

507
00:20:21,600 --> 00:20:24,960
shadowhead from atlas 2018

508
00:20:24,960 --> 00:20:26,799
while they used shadowpad as the main

509
00:20:26,799 --> 00:20:28,799
backdoor for intrusion

510
00:20:28,799 --> 00:20:30,799
they sometimes still developed some

511
00:20:30,799 --> 00:20:32,799
small tools

512
00:20:32,799 --> 00:20:35,679
we discovered a tool from them to list

513
00:20:35,679 --> 00:20:37,600
all of the installed software on the

514
00:20:37,600 --> 00:20:39,120
infected host

515
00:20:39,120 --> 00:20:41,039
but around the same time

516
00:20:41,039 --> 00:20:42,880
shadowpad already had a plugin called

517
00:20:42,880 --> 00:20:44,080
software

518
00:20:44,080 --> 00:20:47,200
which did exactly the same

519
00:20:47,200 --> 00:20:49,679
by this we can assess that

520
00:20:49,679 --> 00:20:52,480
tick did not have access to that plugin

521
00:20:52,480 --> 00:20:54,480
and that was why they developed another

522
00:20:54,480 --> 00:20:57,760
tool for the same purpose

523
00:20:58,240 --> 00:21:00,840
so the plugin should be provided

524
00:21:00,840 --> 00:21:03,520
separately the developer of shadowpad

525
00:21:03,520 --> 00:21:05,200
could decide which plugins they are

526
00:21:05,200 --> 00:21:07,200
going to give to the users

527
00:21:07,200 --> 00:21:09,360
and not all of the users have access to

528
00:21:09,360 --> 00:21:11,600
all of the plugins

529
00:21:11,600 --> 00:21:14,320
at the same time they also offer special

530
00:21:14,320 --> 00:21:16,480
versions of shadowpad builder to high

531
00:21:16,480 --> 00:21:18,000
privileged users

532
00:21:18,000 --> 00:21:20,000
which allows them to build the samples

533
00:21:20,000 --> 00:21:24,240
with more plugins embedded by default

534
00:21:25,440 --> 00:21:27,679
so here is the brief summary of the

535
00:21:27,679 --> 00:21:29,679
potential business model behind shadow

536
00:21:29,679 --> 00:21:31,120
pad

537
00:21:31,120 --> 00:21:34,000
first of all it is a sold malware and

538
00:21:34,000 --> 00:21:36,159
the utility plugins need to be bought

539
00:21:36,159 --> 00:21:38,080
separately

540
00:21:38,080 --> 00:21:40,320
the developer does not provide all of

541
00:21:40,320 --> 00:21:42,400
the available plugins to the users by

542
00:21:42,400 --> 00:21:43,600
default

543
00:21:43,600 --> 00:21:46,240
and sometimes he or she offers special

544
00:21:46,240 --> 00:21:49,360
versions to some high privileged users

545
00:21:49,360 --> 00:21:52,240
also shadowpath is only provided to a

546
00:21:52,240 --> 00:21:54,240
limited set of users

547
00:21:54,240 --> 00:21:56,400
as we do not see a wide distribution

548
00:21:56,400 --> 00:21:58,880
like plugx during our study

549
00:21:58,880 --> 00:22:00,960
we will cover the users of shadowpad in

550
00:22:00,960 --> 00:22:03,760
the next section

551
00:22:03,919 --> 00:22:06,320
from the attacker's perspective

552
00:22:06,320 --> 00:22:08,400
there are several reasons why shadowpad

553
00:22:08,400 --> 00:22:10,640
is a good choice for them

554
00:22:10,640 --> 00:22:11,520
first

555
00:22:11,520 --> 00:22:14,320
it is pretty costly to develop a stable

556
00:22:14,320 --> 00:22:17,200
backdoor or remote excess trojan

557
00:22:17,200 --> 00:22:19,039
especially when it contains some

558
00:22:19,039 --> 00:22:22,799
complicated functionalities like vnc

559
00:22:22,799 --> 00:22:24,320
it is hard to ensure such

560
00:22:24,320 --> 00:22:26,080
functionalities will not crash the

561
00:22:26,080 --> 00:22:28,640
programs on the client side

562
00:22:28,640 --> 00:22:30,240
if the attackers outsource the

563
00:22:30,240 --> 00:22:32,240
development of the backdoor

564
00:22:32,240 --> 00:22:35,039
the costs will be significantly reduced

565
00:22:35,039 --> 00:22:37,360
and they can put more resources on the

566
00:22:37,360 --> 00:22:41,039
other parts of the operation

567
00:22:41,039 --> 00:22:43,760
besides shadow pad is a fully functional

568
00:22:43,760 --> 00:22:47,280
backdoor with a complete set of plugins

569
00:22:47,280 --> 00:22:49,039
it covers most of the important

570
00:22:49,039 --> 00:22:51,520
functions of a backdoor such as fixed

571
00:22:51,520 --> 00:22:54,480
browsing show command execution remote

572
00:22:54,480 --> 00:22:56,880
desktop and so on

573
00:22:56,880 --> 00:22:58,960
the attackers can also decide which

574
00:22:58,960 --> 00:23:01,280
plugins to buy

575
00:23:01,280 --> 00:23:03,039
because of the completeness of its

576
00:23:03,039 --> 00:23:06,240
functionality we also saw some attackers

577
00:23:06,240 --> 00:23:08,559
choosing to use shadowpad as the primary

578
00:23:08,559 --> 00:23:11,840
backdoor of intrusion

579
00:23:12,159 --> 00:23:13,919
the last point is that

580
00:23:13,919 --> 00:23:16,240
using a shared backdoor will reduce the

581
00:23:16,240 --> 00:23:19,120
changes to be recognized

582
00:23:19,120 --> 00:23:20,320
in the past

583
00:23:20,320 --> 00:23:22,320
some campaigns could be easily

584
00:23:22,320 --> 00:23:24,720
attributed to a certain group because of

585
00:23:24,720 --> 00:23:26,799
the presence of some self-developed

586
00:23:26,799 --> 00:23:28,720
backdoors or tools

587
00:23:28,720 --> 00:23:31,039
but using a back door like shadow pad

588
00:23:31,039 --> 00:23:34,240
brings more difficulty on attribution

589
00:23:34,240 --> 00:23:36,000
security community will need more

590
00:23:36,000 --> 00:23:38,480
information to get the big picture

591
00:23:38,480 --> 00:23:42,320
and that should benefit the attackers

592
00:23:42,320 --> 00:23:44,640
next we are going to discuss the threat

593
00:23:44,640 --> 00:23:49,159
actors that have access to shadowpad

594
00:23:50,159 --> 00:23:52,320
thanks to egen for shadowpath's

595
00:23:52,320 --> 00:23:55,279
technical details and his history here

596
00:23:55,279 --> 00:23:57,120
we are going to talk about which

597
00:23:57,120 --> 00:24:01,279
directors are using shadowhead

598
00:24:02,400 --> 00:24:05,200
despite being the potential successor to

599
00:24:05,200 --> 00:24:06,320
projects

600
00:24:06,320 --> 00:24:08,559
shadowhead is sold privately to a

601
00:24:08,559 --> 00:24:11,120
limited set of customers

602
00:24:11,120 --> 00:24:13,360
we have identified at least five

603
00:24:13,360 --> 00:24:15,279
activity actors

604
00:24:15,279 --> 00:24:19,039
that using shadowpad since 2017

605
00:24:19,039 --> 00:24:22,799
like windy fpg-41 kick and downloading

606
00:24:22,799 --> 00:24:25,279
operation red bonus operation rate

607
00:24:25,279 --> 00:24:28,159
cancun and fishmonger

608
00:24:28,159 --> 00:24:31,039
some public reporting from other vendors

609
00:24:31,039 --> 00:24:33,440
detailed other possible users of

610
00:24:33,440 --> 00:24:36,400
shadowpad including lucky mouse and

611
00:24:36,400 --> 00:24:38,000
traffic trooper

612
00:24:38,000 --> 00:24:40,720
however we didn't have the visibility of

613
00:24:40,720 --> 00:24:42,720
those activities

614
00:24:42,720 --> 00:24:45,760
so later on we will focus on those five

615
00:24:45,760 --> 00:24:48,720
actors activity and what they do with

616
00:24:48,720 --> 00:24:51,360
shadowpath

617
00:24:53,919 --> 00:24:56,320
windy is the first general name

618
00:24:56,320 --> 00:24:59,200
convention of the activity conducted by

619
00:24:59,200 --> 00:25:00,640
two subgroups

620
00:25:00,640 --> 00:25:03,679
barium and lead

621
00:25:03,679 --> 00:25:04,960
all of the

622
00:25:04,960 --> 00:25:09,760
defendants are based on chengdu citron

623
00:25:09,760 --> 00:25:13,120
barium were one of the earliest threat

624
00:25:13,120 --> 00:25:16,559
groups which got access to shadowpath

625
00:25:16,559 --> 00:25:18,960
they not only attacked against the

626
00:25:18,960 --> 00:25:20,480
gaming industry

627
00:25:20,480 --> 00:25:22,640
but also for several supply chain

628
00:25:22,640 --> 00:25:26,880
attacks from 2017 to 2018

629
00:25:26,880 --> 00:25:31,039
some of their victims include national

630
00:25:31,039 --> 00:25:35,120
asus and the cc cleaner

631
00:25:35,200 --> 00:25:37,440
during the supply chain attack against

632
00:25:37,440 --> 00:25:38,799
asus

633
00:25:38,799 --> 00:25:41,120
the sample of shadow pad were highly

634
00:25:41,120 --> 00:25:43,679
customized compared to other shadow

635
00:25:43,679 --> 00:25:48,240
packs shadow pad sample we discovered

636
00:25:48,559 --> 00:25:51,679
every layer of show call and plugin was

637
00:25:51,679 --> 00:25:54,080
packed with vm protect

638
00:25:54,080 --> 00:25:56,240
and the plugin had different plugin

639
00:25:56,240 --> 00:25:58,240
numbers

640
00:25:58,240 --> 00:26:01,360
another subgroup lead also used

641
00:26:01,360 --> 00:26:04,960
shadowpad among with other backdoors to

642
00:26:04,960 --> 00:26:08,159
attack victims for both financial and

643
00:26:08,159 --> 00:26:10,960
espionage purpose

644
00:26:10,960 --> 00:26:13,520
there is an interesting

645
00:26:13,520 --> 00:26:17,679
thing is one of the actors robes

646
00:26:17,679 --> 00:26:20,480
aka darling mcgray

647
00:26:20,480 --> 00:26:24,159
started his active collaboration on our

648
00:26:24,159 --> 00:26:27,279
development with whg

649
00:26:27,279 --> 00:26:29,840
the author of plugix

650
00:26:29,840 --> 00:26:33,440
when he was a member of the hacking tool

651
00:26:33,440 --> 00:26:36,240
group ncph back

652
00:26:36,240 --> 00:26:39,840
in 2005

653
00:26:40,720 --> 00:26:41,679
so

654
00:26:41,679 --> 00:26:44,559
what is ncph

655
00:26:44,559 --> 00:26:47,919
ncph is a hating group that gathering

656
00:26:47,919 --> 00:26:49,279
lots of geek

657
00:26:49,279 --> 00:26:51,679
in chengdu

658
00:26:51,679 --> 00:26:53,520
the executable

659
00:26:53,520 --> 00:26:57,120
of controller was free shared on ncph

660
00:26:57,120 --> 00:26:58,320
website

661
00:26:58,320 --> 00:27:01,120
but they also declared that the source

662
00:27:01,120 --> 00:27:04,399
code was on sale

663
00:27:05,120 --> 00:27:09,360
and the ncph remote controller software

664
00:27:09,360 --> 00:27:13,760
developed by rose and wxg in the past

665
00:27:13,760 --> 00:27:15,120
they have

666
00:27:15,120 --> 00:27:18,480
great security knowledge and good

667
00:27:18,480 --> 00:27:21,520
programming skills developing a lot of

668
00:27:21,520 --> 00:27:24,720
backdoors and hacking tools

669
00:27:24,720 --> 00:27:25,760
however

670
00:27:25,760 --> 00:27:29,360
both rows and whg will minimize their

671
00:27:29,360 --> 00:27:31,679
malware development skill back in the

672
00:27:31,679 --> 00:27:33,200
day

673
00:27:33,200 --> 00:27:36,399
consider during the long-term affliction

674
00:27:36,399 --> 00:27:39,360
relationship between rose and wg

675
00:27:39,360 --> 00:27:42,159
we suspect that rose likely had high

676
00:27:42,159 --> 00:27:43,840
privilege assets

677
00:27:43,840 --> 00:27:48,559
or was a co-developer to shuttle back

678
00:27:48,559 --> 00:27:49,919
and other

679
00:27:49,919 --> 00:27:52,480
close kali in chengdu

680
00:27:52,480 --> 00:27:56,880
are likely sharing resource together

681
00:27:56,880 --> 00:27:59,919
this could also explain why barium

682
00:27:59,919 --> 00:28:03,120
was able to utilize a special version of

683
00:28:03,120 --> 00:28:04,240
shadow pad

684
00:28:04,240 --> 00:28:07,840
in some of their attacks

685
00:28:08,880 --> 00:28:11,679
here is another group chick and tango

686
00:28:11,679 --> 00:28:13,520
team

687
00:28:13,520 --> 00:28:16,559
tick and tumble team has been an active

688
00:28:16,559 --> 00:28:20,880
user of shadowpad since 2018.

689
00:28:20,880 --> 00:28:23,760
those two groups merge into a

690
00:28:23,760 --> 00:28:25,760
new institution during the

691
00:28:25,760 --> 00:28:29,039
reorganization of pla

692
00:28:29,039 --> 00:28:31,279
they already been identified

693
00:28:31,279 --> 00:28:33,200
significant resource sharing between

694
00:28:33,200 --> 00:28:34,080
them

695
00:28:34,080 --> 00:28:35,440
such as

696
00:28:35,440 --> 00:28:39,120
overlap of cnc infrastructure and the

697
00:28:39,120 --> 00:28:42,880
utility of similar to a set

698
00:28:42,880 --> 00:28:45,440
a notable change after the merge was

699
00:28:45,440 --> 00:28:47,919
that they start to use shadow pad as

700
00:28:47,919 --> 00:28:50,240
their primary backdoor for conducting

701
00:28:50,240 --> 00:28:53,200
intrusion activity

702
00:28:53,200 --> 00:28:54,320
in the past

703
00:28:54,320 --> 00:28:56,399
they were known to develop their own

704
00:28:56,399 --> 00:28:59,360
backdoor for their operation

705
00:28:59,360 --> 00:29:02,399
throughout 2019

706
00:29:02,399 --> 00:29:05,440
tick craft and the send spread phishing

707
00:29:05,440 --> 00:29:08,399
email to deliver shadowhead in victims

708
00:29:08,399 --> 00:29:11,360
network for information stealing and the

709
00:29:11,360 --> 00:29:13,679
long-term expansion

710
00:29:13,679 --> 00:29:18,880
in 2020 tango team exploit cv 2019

711
00:29:18,880 --> 00:29:20,559
knight 489

712
00:29:20,559 --> 00:29:25,279
and cv 2020 8468 interim microsecurity

713
00:29:25,279 --> 00:29:27,760
solution that were exposed to the

714
00:29:27,760 --> 00:29:28,799
internet

715
00:29:28,799 --> 00:29:31,919
in order to deliver shadowhead in in

716
00:29:31,919 --> 00:29:34,720
turn internetwork

717
00:29:34,720 --> 00:29:37,039
internal network for further

718
00:29:37,039 --> 00:29:39,760
exploration

719
00:29:39,760 --> 00:29:42,399
based on the simple set we collect

720
00:29:42,399 --> 00:29:45,600
tick and tunnel team used at least five

721
00:29:45,600 --> 00:29:48,159
different versions of shadow pad

722
00:29:48,159 --> 00:29:51,440
however all of the samples only contain

723
00:29:51,440 --> 00:29:55,720
the basic set of the plugins

724
00:29:57,120 --> 00:30:00,159
because they still have the ability to

725
00:30:00,159 --> 00:30:03,200
develop the tools by themselves

726
00:30:03,200 --> 00:30:04,960
although they turn

727
00:30:04,960 --> 00:30:08,240
from self-developed backdoors to

728
00:30:08,240 --> 00:30:10,559
occurred or leaked back doors

729
00:30:10,559 --> 00:30:13,279
they still develop some customized tools

730
00:30:13,279 --> 00:30:15,039
for intrusion

731
00:30:15,039 --> 00:30:18,000
such as modified mini cads a screen

732
00:30:18,000 --> 00:30:19,360
capture tool

733
00:30:19,360 --> 00:30:21,520
a package transmission tool

734
00:30:21,520 --> 00:30:24,159
a tool to list all the software

735
00:30:24,159 --> 00:30:27,120
installed on this computer and

736
00:30:27,120 --> 00:30:30,240
a vbscript command executer tool

737
00:30:30,240 --> 00:30:31,440
in addition

738
00:30:31,440 --> 00:30:34,480
we found a vbscript command executed

739
00:30:34,480 --> 00:30:36,880
tool builder which can generate a

740
00:30:36,880 --> 00:30:39,919
payload of bb script without

741
00:30:39,919 --> 00:30:42,799
spirit invention technical to bypass

742
00:30:42,799 --> 00:30:45,360
trey micro products

743
00:30:45,360 --> 00:30:47,279
most important of all

744
00:30:47,279 --> 00:30:49,919
why we think shadow pad self plugin

745
00:30:49,919 --> 00:30:52,080
because we saw this case

746
00:30:52,080 --> 00:30:52,880
kik

747
00:30:52,880 --> 00:30:55,600
decided not to buy full version of it

748
00:30:55,600 --> 00:30:57,440
and they decide create tool by

749
00:30:57,440 --> 00:31:00,080
themselves

750
00:31:02,159 --> 00:31:05,200
here is another cluster

751
00:31:05,200 --> 00:31:08,000
we got a shadowpad activity cluster

752
00:31:08,000 --> 00:31:10,559
which had a non-clear link to known

753
00:31:10,559 --> 00:31:12,159
thread groups

754
00:31:12,159 --> 00:31:15,360
we also track track this activity and

755
00:31:15,360 --> 00:31:18,960
name it as operation red bonus

756
00:31:18,960 --> 00:31:20,960
the first activity of shadow pad we

757
00:31:20,960 --> 00:31:25,440
discovered occurred at the end of 2019

758
00:31:25,440 --> 00:31:27,360
all the samples we collected from

759
00:31:27,360 --> 00:31:30,559
operation red owners were running

760
00:31:30,559 --> 00:31:33,360
the same version of shadow pad

761
00:31:33,360 --> 00:31:36,399
during our investigation we also spot

762
00:31:36,399 --> 00:31:38,480
other backdoors in use

763
00:31:38,480 --> 00:31:41,279
such as white bird ice frog and a

764
00:31:41,279 --> 00:31:44,960
customized instant of pc share

765
00:31:44,960 --> 00:31:47,120
the actors show interesting on india

766
00:31:47,120 --> 00:31:49,279
targets with several ddi installment

767
00:31:49,279 --> 00:31:53,519
tools moving some india institution

768
00:31:56,000 --> 00:31:58,960
and another cluster

769
00:31:58,960 --> 00:32:01,919
of shadow pad samples

770
00:32:01,919 --> 00:32:05,039
without a clear attribution in a public

771
00:32:05,039 --> 00:32:06,559
domain

772
00:32:06,559 --> 00:32:08,240
interesting part is

773
00:32:08,240 --> 00:32:11,279
all the cnc server extract from a

774
00:32:11,279 --> 00:32:12,480
samples

775
00:32:12,480 --> 00:32:16,399
had sent self-signed certificates

776
00:32:16,399 --> 00:32:19,600
some related samples were documented

777
00:32:19,600 --> 00:32:20,640
to be the

778
00:32:20,640 --> 00:32:21,840
part of

779
00:32:21,840 --> 00:32:24,640
proxy logon attack according to a report

780
00:32:24,640 --> 00:32:27,880
by eset

781
00:32:28,080 --> 00:32:31,360
and here is the last cluster

782
00:32:31,360 --> 00:32:34,880
has been active since at least 2018

783
00:32:34,880 --> 00:32:38,320
and we call it fishmonger

784
00:32:38,320 --> 00:32:40,720
the victim includes university

785
00:32:40,720 --> 00:32:43,120
government media sector technology

786
00:32:43,120 --> 00:32:46,559
company and healthy organization like

787
00:32:46,559 --> 00:32:49,440
conducting kovil 19 research in hong

788
00:32:49,440 --> 00:32:53,760
kong taiwan india and the u.s

789
00:32:53,760 --> 00:32:55,840
the cluster is tracking based on the

790
00:32:55,840 --> 00:32:58,640
overlap of infrastructure

791
00:32:58,640 --> 00:33:00,960
and indicators

792
00:33:00,960 --> 00:33:03,600
as well as some behavior connected

793
00:33:03,600 --> 00:33:06,159
between different campaigns

794
00:33:06,159 --> 00:33:08,159
back in 2019

795
00:33:08,159 --> 00:33:09,360
the actor

796
00:33:09,360 --> 00:33:11,600
special version of shadow pad

797
00:33:11,600 --> 00:33:14,559
which allow them to generate samples

798
00:33:14,559 --> 00:33:17,919
with a handful of plugin embedded by

799
00:33:17,919 --> 00:33:19,440
default

800
00:33:19,440 --> 00:33:22,720
in 2020 they gain access to a new

801
00:33:22,720 --> 00:33:26,000
version of shadowpad which at update and

802
00:33:26,000 --> 00:33:29,600
the more advanced application techniques

803
00:33:29,600 --> 00:33:32,080
we found there is a self-signed

804
00:33:32,080 --> 00:33:33,440
certificate

805
00:33:33,440 --> 00:33:36,399
is installed on several cnc servers of

806
00:33:36,399 --> 00:33:38,799
shadowpad and the spider

807
00:33:38,799 --> 00:33:42,000
so this group used shadowpad and spider

808
00:33:42,000 --> 00:33:44,640
as their primary backdoor for long term

809
00:33:44,640 --> 00:33:48,960
monitor and their target now

810
00:33:51,840 --> 00:33:54,799
this section we will talk about how does

811
00:33:54,799 --> 00:33:56,480
shadow pass

812
00:33:56,480 --> 00:33:58,559
emergency influence

813
00:33:58,559 --> 00:34:01,840
the threat landscape of chinese exponent

814
00:34:01,840 --> 00:34:03,760
activity

815
00:34:03,760 --> 00:34:06,720
we will use a famous chinese expanse

816
00:34:06,720 --> 00:34:09,679
actor as an example and we have been

817
00:34:09,679 --> 00:34:13,839
monitored this group at least four years

818
00:34:15,520 --> 00:34:18,560
it is not a secret that the number of

819
00:34:18,560 --> 00:34:21,359
chinese threat actors develop their own

820
00:34:21,359 --> 00:34:24,079
tool set based on their need

821
00:34:24,079 --> 00:34:26,639
during operations

822
00:34:26,639 --> 00:34:30,320
however in order to establish exponents

823
00:34:30,320 --> 00:34:33,199
director will also need other tools

824
00:34:33,199 --> 00:34:35,199
to add

825
00:34:35,199 --> 00:34:37,440
in their operation

826
00:34:37,440 --> 00:34:38,800
for example

827
00:34:38,800 --> 00:34:42,480
mini cats exchange plugins and ghost

828
00:34:42,480 --> 00:34:44,800
rate

829
00:34:44,800 --> 00:34:47,520
all the popularity malware recently such

830
00:34:47,520 --> 00:34:50,560
as shadow pad and the kobo stripe among

831
00:34:50,560 --> 00:34:53,440
chinese exponent groups

832
00:34:53,440 --> 00:34:57,440
here we use tick as an example

833
00:34:57,440 --> 00:35:00,880
it was one of the most activity users of

834
00:35:00,880 --> 00:35:05,280
shadowpad according to our research

835
00:35:05,440 --> 00:35:09,359
purely to this tip was documented to be

836
00:35:09,359 --> 00:35:12,560
used self development developed backdoor

837
00:35:12,560 --> 00:35:17,599
including azerv xsm and adapter

838
00:35:17,599 --> 00:35:20,079
there is a notable change we discovered

839
00:35:20,079 --> 00:35:22,240
during the monitoring of these thread

840
00:35:22,240 --> 00:35:25,520
groups and we draw this change in a tie

841
00:35:25,520 --> 00:35:27,440
line table

842
00:35:27,440 --> 00:35:29,280
according to the timeline

843
00:35:29,280 --> 00:35:30,640
we could see

844
00:35:30,640 --> 00:35:33,839
this actor stop the usa of their

845
00:35:33,839 --> 00:35:36,880
self-developed backdoor and start to use

846
00:35:36,880 --> 00:35:39,359
the back door they bought and named this

847
00:35:39,359 --> 00:35:42,079
backdoor as casper

848
00:35:42,079 --> 00:35:47,280
this backdoor casper is the shadow pad

849
00:35:48,160 --> 00:35:49,119
so

850
00:35:49,119 --> 00:35:52,000
what is the benefit of this change and

851
00:35:52,000 --> 00:35:54,800
why they decide using self-development

852
00:35:54,800 --> 00:35:58,560
doors to occur inside doors

853
00:35:58,560 --> 00:36:01,119
there are two answers that could answer

854
00:36:01,119 --> 00:36:03,280
those questions

855
00:36:03,280 --> 00:36:04,720
first one is

856
00:36:04,720 --> 00:36:07,119
actors want to lower the cost

857
00:36:07,119 --> 00:36:10,160
like every big company you know

858
00:36:10,160 --> 00:36:11,200
so

859
00:36:11,200 --> 00:36:13,599
how they can lower the cost

860
00:36:13,599 --> 00:36:16,480
no need to spend time on a well-designed

861
00:36:16,480 --> 00:36:20,160
malware and reduce the human resource to

862
00:36:20,160 --> 00:36:22,480
develop the malware

863
00:36:22,480 --> 00:36:24,800
second one is the occurring backdoor

864
00:36:24,800 --> 00:36:28,240
usually keep enhance the stability and

865
00:36:28,240 --> 00:36:30,240
usability

866
00:36:30,240 --> 00:36:33,200
the seller need to have a good will for

867
00:36:33,200 --> 00:36:34,640
their product

868
00:36:34,640 --> 00:36:35,680
so

869
00:36:35,680 --> 00:36:38,480
they will provide newest version of the

870
00:36:38,480 --> 00:36:39,520
backdoor

871
00:36:39,520 --> 00:36:42,720
with new feature added

872
00:36:42,720 --> 00:36:44,720
and this unlike

873
00:36:44,720 --> 00:36:46,880
community malware found in cyber

874
00:36:46,880 --> 00:36:51,200
criminal or underground foreign

875
00:36:53,359 --> 00:36:57,280
now we talk about some mitigation advice

876
00:36:57,280 --> 00:37:00,320
to detect and prevent attack that use

877
00:37:00,320 --> 00:37:02,880
shadow pad

878
00:37:04,240 --> 00:37:05,680
first one

879
00:37:05,680 --> 00:37:08,240
auditing all the service and the

880
00:37:08,240 --> 00:37:11,280
register to find any suspicious item

881
00:37:11,280 --> 00:37:13,599
which is very important

882
00:37:13,599 --> 00:37:16,000
during the execution of shadow bed

883
00:37:16,000 --> 00:37:18,800
a service and the ranking registry is

884
00:37:18,800 --> 00:37:21,520
bound to gain persistence in victims

885
00:37:21,520 --> 00:37:23,440
environments

886
00:37:23,440 --> 00:37:26,320
regularly reviewing the list of the

887
00:37:26,320 --> 00:37:28,560
service and the register

888
00:37:28,560 --> 00:37:32,880
can help identify an infected host

889
00:37:32,880 --> 00:37:36,560
second is monitoring dynamic behavior of

890
00:37:36,560 --> 00:37:39,200
spawning a new process or process

891
00:37:39,200 --> 00:37:41,119
injection

892
00:37:41,119 --> 00:37:42,880
because shadow pad

893
00:37:42,880 --> 00:37:45,280
includes creating a new process

894
00:37:45,280 --> 00:37:48,000
inject the malicious code into a new

895
00:37:48,000 --> 00:37:49,040
process

896
00:37:49,040 --> 00:37:52,000
and create a remote thread to execute

897
00:37:52,000 --> 00:37:54,079
the main routine

898
00:37:54,079 --> 00:37:55,200
so

899
00:37:55,200 --> 00:37:57,599
monitor those behavior could provide you

900
00:37:57,599 --> 00:37:59,040
some insight

901
00:37:59,040 --> 00:38:02,960
about being attacked by shadow pad

902
00:38:02,960 --> 00:38:04,400
third is

903
00:38:04,400 --> 00:38:07,040
apply memory forensic

904
00:38:07,040 --> 00:38:09,680
to identify malware which

905
00:38:09,680 --> 00:38:12,320
written in memory

906
00:38:12,320 --> 00:38:15,200
a good memory forensic tool could help

907
00:38:15,200 --> 00:38:20,399
you identify the signature of shadowban

908
00:38:20,560 --> 00:38:23,680
if the bluff device advice is

909
00:38:23,680 --> 00:38:27,040
too difficult for you to approach

910
00:38:27,040 --> 00:38:30,160
using edr solutions could help

911
00:38:30,160 --> 00:38:33,200
a good edr solution could catch and stop

912
00:38:33,200 --> 00:38:36,480
suspicious activities and send alert to

913
00:38:36,480 --> 00:38:39,920
security team for further investigation

914
00:38:39,920 --> 00:38:41,520
and the last

915
00:38:41,520 --> 00:38:43,920
is having a well-consolidated

916
00:38:43,920 --> 00:38:45,920
monitoring capability in your

917
00:38:45,920 --> 00:38:47,680
organization

918
00:38:47,680 --> 00:38:50,320
make sure you are capable of

919
00:38:50,320 --> 00:38:54,400
getting deep cross enterprise visibility

920
00:38:54,400 --> 00:38:57,839
or identify gaps in your organization's

921
00:38:57,839 --> 00:38:59,440
capability

922
00:38:59,440 --> 00:39:03,520
to prevent the supply chain attack

923
00:39:04,560 --> 00:39:05,520
now

924
00:39:05,520 --> 00:39:09,359
we make up our conclusions

925
00:39:11,040 --> 00:39:14,720
the conclusion with three questions

926
00:39:14,720 --> 00:39:17,520
when we doing this research we keep

927
00:39:17,520 --> 00:39:20,960
asking ourselves those questions

928
00:39:20,960 --> 00:39:23,200
why do the actors choose to use

929
00:39:23,200 --> 00:39:24,560
shadowpad

930
00:39:24,560 --> 00:39:28,079
and why shadowpad is not disappearing

931
00:39:28,079 --> 00:39:30,320
and how shadow pad affects threat

932
00:39:30,320 --> 00:39:32,960
intelligence

933
00:39:33,200 --> 00:39:35,920
about why actors choose shadowpad we

934
00:39:35,920 --> 00:39:38,160
count some ideas

935
00:39:38,160 --> 00:39:41,280
shadowpad was created by an experienced

936
00:39:41,280 --> 00:39:45,040
developer and it is also under active

937
00:39:45,040 --> 00:39:48,079
maintenance on both its functionality

938
00:39:48,079 --> 00:39:51,359
and its anti-forensic capability

939
00:39:51,359 --> 00:39:54,560
so that is good for actors

940
00:39:54,560 --> 00:39:57,839
also using shadow pad reduce the cost of

941
00:39:57,839 --> 00:40:00,560
development and using shallow pad could

942
00:40:00,560 --> 00:40:03,200
make security company hard to do further

943
00:40:03,200 --> 00:40:06,160
research about it

944
00:40:06,160 --> 00:40:08,319
and the second question why shadow pad

945
00:40:08,319 --> 00:40:10,640
is not disappearing

946
00:40:10,640 --> 00:40:12,880
one of the reason is that malware is

947
00:40:12,880 --> 00:40:15,680
still under update right now

948
00:40:15,680 --> 00:40:18,240
with more advanced application and

949
00:40:18,240 --> 00:40:20,960
persistent technicals

950
00:40:20,960 --> 00:40:23,359
the other reason is shadowpad is a

951
00:40:23,359 --> 00:40:25,680
powerful backdoor with so many

952
00:40:25,680 --> 00:40:28,000
functionality and is so good for

953
00:40:28,000 --> 00:40:30,640
long-term espionage operations

954
00:40:30,640 --> 00:40:33,119
and a good ad keep itself still see

955
00:40:33,119 --> 00:40:36,079
under radar

956
00:40:36,640 --> 00:40:40,079
the last question how shadow pad infect

957
00:40:40,079 --> 00:40:41,760
trade intelligence

958
00:40:41,760 --> 00:40:43,119
to be honest

959
00:40:43,119 --> 00:40:45,440
it effects a lot

960
00:40:45,440 --> 00:40:48,240
if threat intelligence researchers want

961
00:40:48,240 --> 00:40:51,040
to do attribution research

962
00:40:51,040 --> 00:40:53,839
they need to require careful validation

963
00:40:53,839 --> 00:40:55,680
and strong evidence

964
00:40:55,680 --> 00:40:58,800
to support so that it could help the

965
00:40:58,800 --> 00:41:00,000
community

966
00:41:00,000 --> 00:41:00,960
in fact

967
00:41:00,960 --> 00:41:03,920
effort in identified chinese exponent

968
00:41:03,920 --> 00:41:06,920
groups

969
00:41:07,520 --> 00:41:09,599
thank you for your attentions

970
00:41:09,599 --> 00:41:12,400
if you have any questions please feel

971
00:41:12,400 --> 00:41:15,960
free to ask

